
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//resolvectl_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000403968 <.init>:
  403968:	stp	x29, x30, [sp, #-16]!
  40396c:	mov	x29, sp
  403970:	bl	4044c0 <ascii_strlower_n@plt+0x60>
  403974:	ldp	x29, x30, [sp], #16
  403978:	ret

Disassembly of section .plt:

0000000000403980 <__libc_start_main@plt-0x20>:
  403980:	stp	x16, x30, [sp, #-16]!
  403984:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403988:	ldr	x17, [x16, #2704]
  40398c:	add	x16, x16, #0xa90
  403990:	br	x17
  403994:	nop
  403998:	nop
  40399c:	nop

00000000004039a0 <__libc_start_main@plt>:
  4039a0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4039a4:	ldr	x17, [x16, #2712]
  4039a8:	add	x16, x16, #0xa98
  4039ac:	br	x17

00000000004039b0 <abort@plt>:
  4039b0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4039b4:	ldr	x17, [x16, #2720]
  4039b8:	add	x16, x16, #0xaa0
  4039bc:	br	x17

00000000004039c0 <__gmon_start__@plt>:
  4039c0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4039c4:	ldr	x17, [x16, #2728]
  4039c8:	add	x16, x16, #0xaa8
  4039cc:	br	x17

00000000004039d0 <log_assert_failed_realm@plt>:
  4039d0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4039d4:	ldr	x17, [x16, #2736]
  4039d8:	add	x16, x16, #0xab0
  4039dc:	br	x17

00000000004039e0 <getenv@plt>:
  4039e0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4039e4:	ldr	x17, [x16, #2744]
  4039e8:	add	x16, x16, #0xab8
  4039ec:	br	x17

00000000004039f0 <getopt_long@plt>:
  4039f0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4039f4:	ldr	x17, [x16, #2752]
  4039f8:	add	x16, x16, #0xac0
  4039fc:	br	x17

0000000000403a00 <version@plt>:
  403a00:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403a04:	ldr	x17, [x16, #2760]
  403a08:	add	x16, x16, #0xac8
  403a0c:	br	x17

0000000000403a10 <log_get_max_level_realm@plt>:
  403a10:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403a14:	ldr	x17, [x16, #2768]
  403a18:	add	x16, x16, #0xad0
  403a1c:	br	x17

0000000000403a20 <log_internal_realm@plt>:
  403a20:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403a24:	ldr	x17, [x16, #2776]
  403a28:	add	x16, x16, #0xad8
  403a2c:	br	x17

0000000000403a30 <abs@plt>:
  403a30:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403a34:	ldr	x17, [x16, #2784]
  403a38:	add	x16, x16, #0xae0
  403a3c:	br	x17

0000000000403a40 <log_assert_failed_unreachable_realm@plt>:
  403a40:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403a44:	ldr	x17, [x16, #2792]
  403a48:	add	x16, x16, #0xae8
  403a4c:	br	x17

0000000000403a50 <strstrip@plt>:
  403a50:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403a54:	ldr	x17, [x16, #2800]
  403a58:	add	x16, x16, #0xaf0
  403a5c:	br	x17

0000000000403a60 <first_word@plt>:
  403a60:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403a64:	ldr	x17, [x16, #2808]
  403a68:	add	x16, x16, #0xaf8
  403a6c:	br	x17

0000000000403a70 <log_syntax_internal@plt>:
  403a70:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403a74:	ldr	x17, [x16, #2816]
  403a78:	add	x16, x16, #0xb00
  403a7c:	br	x17

0000000000403a80 <strv_extend@plt>:
  403a80:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403a84:	ldr	x17, [x16, #2824]
  403a88:	add	x16, x16, #0xb08
  403a8c:	br	x17

0000000000403a90 <log_oom_internal@plt>:
  403a90:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403a94:	ldr	x17, [x16, #2832]
  403a98:	add	x16, x16, #0xb10
  403a9c:	br	x17

0000000000403aa0 <terminal_urlify_man@plt>:
  403aa0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403aa4:	ldr	x17, [x16, #2840]
  403aa8:	add	x16, x16, #0xb18
  403aac:	br	x17

0000000000403ab0 <printf@plt>:
  403ab0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403ab4:	ldr	x17, [x16, #2848]
  403ab8:	add	x16, x16, #0xb20
  403abc:	br	x17

0000000000403ac0 <free@plt>:
  403ac0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403ac4:	ldr	x17, [x16, #2856]
  403ac8:	add	x16, x16, #0xb28
  403acc:	br	x17

0000000000403ad0 <read_line_full@plt>:
  403ad0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403ad4:	ldr	x17, [x16, #2864]
  403ad8:	add	x16, x16, #0xb30
  403adc:	br	x17

0000000000403ae0 <extract_first_word@plt>:
  403ae0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403ae4:	ldr	x17, [x16, #2872]
  403ae8:	add	x16, x16, #0xb38
  403aec:	br	x17

0000000000403af0 <strv_push@plt>:
  403af0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403af4:	ldr	x17, [x16, #2880]
  403af8:	add	x16, x16, #0xb40
  403afc:	br	x17

0000000000403b00 <strchr@plt>:
  403b00:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403b04:	ldr	x17, [x16, #2888]
  403b08:	add	x16, x16, #0xb48
  403b0c:	br	x17

0000000000403b10 <strndup@plt>:
  403b10:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403b14:	ldr	x17, [x16, #2896]
  403b18:	add	x16, x16, #0xb50
  403b1c:	br	x17

0000000000403b20 <strdup@plt>:
  403b20:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403b24:	ldr	x17, [x16, #2904]
  403b28:	add	x16, x16, #0xb58
  403b2c:	br	x17

0000000000403b30 <parse_ifindex_or_ifname@plt>:
  403b30:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403b34:	ldr	x17, [x16, #2912]
  403b38:	add	x16, x16, #0xb60
  403b3c:	br	x17

0000000000403b40 <ask_password_agent_close@plt>:
  403b40:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403b44:	ldr	x17, [x16, #2920]
  403b48:	add	x16, x16, #0xb68
  403b4c:	br	x17

0000000000403b50 <polkit_agent_close@plt>:
  403b50:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403b54:	ldr	x17, [x16, #2928]
  403b58:	add	x16, x16, #0xb70
  403b5c:	br	x17

0000000000403b60 <pager_close@plt>:
  403b60:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403b64:	ldr	x17, [x16, #2936]
  403b68:	add	x16, x16, #0xb78
  403b6c:	br	x17

0000000000403b70 <mac_selinux_finish@plt>:
  403b70:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403b74:	ldr	x17, [x16, #2944]
  403b78:	add	x16, x16, #0xb80
  403b7c:	br	x17

0000000000403b80 <setlocale@plt>:
  403b80:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403b84:	ldr	x17, [x16, #2952]
  403b88:	add	x16, x16, #0xb88
  403b8c:	br	x17

0000000000403b90 <log_show_color@plt>:
  403b90:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403b94:	ldr	x17, [x16, #2960]
  403b98:	add	x16, x16, #0xb90
  403b9c:	br	x17

0000000000403ba0 <log_parse_environment_realm@plt>:
  403ba0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403ba4:	ldr	x17, [x16, #2968]
  403ba8:	add	x16, x16, #0xb98
  403bac:	br	x17

0000000000403bb0 <log_open@plt>:
  403bb0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403bb4:	ldr	x17, [x16, #2976]
  403bb8:	add	x16, x16, #0xba0
  403bbc:	br	x17

0000000000403bc0 <strcmp@plt>:
  403bc0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403bc4:	ldr	x17, [x16, #2984]
  403bc8:	add	x16, x16, #0xba8
  403bcc:	br	x17

0000000000403bd0 <sd_bus_open_system@plt>:
  403bd0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403bd4:	ldr	x17, [x16, #2992]
  403bd8:	add	x16, x16, #0xbb0
  403bdc:	br	x17

0000000000403be0 <strv_find@plt>:
  403be0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403be4:	ldr	x17, [x16, #3000]
  403be8:	add	x16, x16, #0xbb8
  403bec:	br	x17

0000000000403bf0 <strv_free@plt>:
  403bf0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403bf4:	ldr	x17, [x16, #3008]
  403bf8:	add	x16, x16, #0xbc0
  403bfc:	br	x17

0000000000403c00 <sd_bus_flush_close_unref@plt>:
  403c00:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403c04:	ldr	x17, [x16, #3016]
  403c08:	add	x16, x16, #0xbc8
  403c0c:	br	x17

0000000000403c10 <parse_boolean@plt>:
  403c10:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403c14:	ldr	x17, [x16, #3024]
  403c18:	add	x16, x16, #0xbd0
  403c1c:	br	x17

0000000000403c20 <on_tty@plt>:
  403c20:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403c24:	ldr	x17, [x16, #3032]
  403c28:	add	x16, x16, #0xbd8
  403c2c:	br	x17

0000000000403c30 <strv_length@plt>:
  403c30:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403c34:	ldr	x17, [x16, #3040]
  403c38:	add	x16, x16, #0xbe0
  403c3c:	br	x17

0000000000403c40 <dispatch_verb@plt>:
  403c40:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403c44:	ldr	x17, [x16, #3048]
  403c48:	add	x16, x16, #0xbe8
  403c4c:	br	x17

0000000000403c50 <puts@plt>:
  403c50:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403c54:	ldr	x17, [x16, #3056]
  403c58:	add	x16, x16, #0xbf0
  403c5c:	br	x17

0000000000403c60 <flockfile@plt>:
  403c60:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403c64:	ldr	x17, [x16, #3064]
  403c68:	add	x16, x16, #0xbf8
  403c6c:	br	x17

0000000000403c70 <fputs_unlocked@plt>:
  403c70:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403c74:	ldr	x17, [x16, #3072]
  403c78:	add	x16, x16, #0xc00
  403c7c:	br	x17

0000000000403c80 <fputc_unlocked@plt>:
  403c80:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403c84:	ldr	x17, [x16, #3080]
  403c88:	add	x16, x16, #0xc08
  403c8c:	br	x17

0000000000403c90 <funlockfile@plt>:
  403c90:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403c94:	ldr	x17, [x16, #3088]
  403c98:	add	x16, x16, #0xc10
  403c9c:	br	x17

0000000000403ca0 <colors_enabled@plt>:
  403ca0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403ca4:	ldr	x17, [x16, #3096]
  403ca8:	add	x16, x16, #0xc18
  403cac:	br	x17

0000000000403cb0 <memset@plt>:
  403cb0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403cb4:	ldr	x17, [x16, #3104]
  403cb8:	add	x16, x16, #0xc20
  403cbc:	br	x17

0000000000403cc0 <in_addr_ifindex_from_string_auto@plt>:
  403cc0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403cc4:	ldr	x17, [x16, #3112]
  403cc8:	add	x16, x16, #0xc28
  403ccc:	br	x17

0000000000403cd0 <sd_bus_get_property_trivial@plt>:
  403cd0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403cd4:	ldr	x17, [x16, #3120]
  403cd8:	add	x16, x16, #0xc30
  403cdc:	br	x17

0000000000403ce0 <bus_error_message@plt>:
  403ce0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403ce4:	ldr	x17, [x16, #3128]
  403ce8:	add	x16, x16, #0xc38
  403cec:	br	x17

0000000000403cf0 <sd_bus_get_property@plt>:
  403cf0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403cf4:	ldr	x17, [x16, #3136]
  403cf8:	add	x16, x16, #0xc40
  403cfc:	br	x17

0000000000403d00 <sd_bus_message_read@plt>:
  403d00:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403d04:	ldr	x17, [x16, #3144]
  403d08:	add	x16, x16, #0xc48
  403d0c:	br	x17

0000000000403d10 <sd_bus_message_unref@plt>:
  403d10:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403d14:	ldr	x17, [x16, #3152]
  403d18:	add	x16, x16, #0xc50
  403d1c:	br	x17

0000000000403d20 <sd_bus_error_free@plt>:
  403d20:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403d24:	ldr	x17, [x16, #3160]
  403d28:	add	x16, x16, #0xc58
  403d2c:	br	x17

0000000000403d30 <sd_bus_call_method@plt>:
  403d30:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403d34:	ldr	x17, [x16, #3168]
  403d38:	add	x16, x16, #0xc60
  403d3c:	br	x17

0000000000403d40 <sd_bus_error_has_name@plt>:
  403d40:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403d44:	ldr	x17, [x16, #3176]
  403d48:	add	x16, x16, #0xc68
  403d4c:	br	x17

0000000000403d50 <strv_equal@plt>:
  403d50:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403d54:	ldr	x17, [x16, #3184]
  403d58:	add	x16, x16, #0xc70
  403d5c:	br	x17

0000000000403d60 <__errno_location@plt>:
  403d60:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403d64:	ldr	x17, [x16, #3192]
  403d68:	add	x16, x16, #0xc78
  403d6c:	br	x17

0000000000403d70 <asprintf@plt>:
  403d70:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403d74:	ldr	x17, [x16, #3200]
  403d78:	add	x16, x16, #0xc80
  403d7c:	br	x17

0000000000403d80 <sd_bus_path_encode@plt>:
  403d80:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403d84:	ldr	x17, [x16, #3208]
  403d88:	add	x16, x16, #0xc88
  403d8c:	br	x17

0000000000403d90 <bus_map_all_properties@plt>:
  403d90:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403d94:	ldr	x17, [x16, #3216]
  403d98:	add	x16, x16, #0xc90
  403d9c:	br	x17

0000000000403da0 <pager_open@plt>:
  403da0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403da4:	ldr	x17, [x16, #3224]
  403da8:	add	x16, x16, #0xc98
  403dac:	br	x17

0000000000403db0 <fputc@plt>:
  403db0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403db4:	ldr	x17, [x16, #3232]
  403db8:	add	x16, x16, #0xca0
  403dbc:	br	x17

0000000000403dc0 <sd_netlink_open@plt>:
  403dc0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403dc4:	ldr	x17, [x16, #3240]
  403dc8:	add	x16, x16, #0xca8
  403dcc:	br	x17

0000000000403dd0 <sd_rtnl_message_new_link@plt>:
  403dd0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403dd4:	ldr	x17, [x16, #3248]
  403dd8:	add	x16, x16, #0xcb0
  403ddc:	br	x17

0000000000403de0 <rtnl_log_create_error@plt>:
  403de0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403de4:	ldr	x17, [x16, #3256]
  403de8:	add	x16, x16, #0xcb8
  403dec:	br	x17

0000000000403df0 <sd_netlink_message_request_dump@plt>:
  403df0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403df4:	ldr	x17, [x16, #3264]
  403df8:	add	x16, x16, #0xcc0
  403dfc:	br	x17

0000000000403e00 <sd_netlink_call@plt>:
  403e00:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403e04:	ldr	x17, [x16, #3272]
  403e08:	add	x16, x16, #0xcc8
  403e0c:	br	x17

0000000000403e10 <sd_netlink_message_get_type@plt>:
  403e10:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403e14:	ldr	x17, [x16, #3280]
  403e18:	add	x16, x16, #0xcd0
  403e1c:	br	x17

0000000000403e20 <rtnl_log_parse_error@plt>:
  403e20:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403e24:	ldr	x17, [x16, #3288]
  403e28:	add	x16, x16, #0xcd8
  403e2c:	br	x17

0000000000403e30 <sd_rtnl_message_link_get_ifindex@plt>:
  403e30:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403e34:	ldr	x17, [x16, #3296]
  403e38:	add	x16, x16, #0xce0
  403e3c:	br	x17

0000000000403e40 <sd_netlink_message_read_string@plt>:
  403e40:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403e44:	ldr	x17, [x16, #3304]
  403e48:	add	x16, x16, #0xce8
  403e4c:	br	x17

0000000000403e50 <sd_netlink_message_next@plt>:
  403e50:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403e54:	ldr	x17, [x16, #3312]
  403e58:	add	x16, x16, #0xcf0
  403e5c:	br	x17

0000000000403e60 <sd_bus_message_enter_container@plt>:
  403e60:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403e64:	ldr	x17, [x16, #3320]
  403e68:	add	x16, x16, #0xcf8
  403e6c:	br	x17

0000000000403e70 <strv_consume@plt>:
  403e70:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403e74:	ldr	x17, [x16, #3328]
  403e78:	add	x16, x16, #0xd00
  403e7c:	br	x17

0000000000403e80 <sd_bus_message_exit_container@plt>:
  403e80:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403e84:	ldr	x17, [x16, #3336]
  403e88:	add	x16, x16, #0xd08
  403e8c:	br	x17

0000000000403e90 <format_ifname_full@plt>:
  403e90:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403e94:	ldr	x17, [x16, #3344]
  403e98:	add	x16, x16, #0xd10
  403e9c:	br	x17

0000000000403ea0 <sd_bus_message_read_array@plt>:
  403ea0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403ea4:	ldr	x17, [x16, #3352]
  403ea8:	add	x16, x16, #0xd18
  403eac:	br	x17

0000000000403eb0 <in_addr_to_string@plt>:
  403eb0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403eb4:	ldr	x17, [x16, #3360]
  403eb8:	add	x16, x16, #0xd20
  403ebc:	br	x17

0000000000403ec0 <strjoin_real@plt>:
  403ec0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403ec4:	ldr	x17, [x16, #3368]
  403ec8:	add	x16, x16, #0xd28
  403ecc:	br	x17

0000000000403ed0 <sd_netlink_message_unref@plt>:
  403ed0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403ed4:	ldr	x17, [x16, #3376]
  403ed8:	add	x16, x16, #0xd30
  403edc:	br	x17

0000000000403ee0 <sd_netlink_unref@plt>:
  403ee0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403ee4:	ldr	x17, [x16, #3384]
  403ee8:	add	x16, x16, #0xd38
  403eec:	br	x17

0000000000403ef0 <strv_sort@plt>:
  403ef0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403ef4:	ldr	x17, [x16, #3392]
  403ef8:	add	x16, x16, #0xd40
  403efc:	br	x17

0000000000403f00 <sd_bus_message_new_method_call@plt>:
  403f00:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403f04:	ldr	x17, [x16, #3400]
  403f08:	add	x16, x16, #0xd48
  403f0c:	br	x17

0000000000403f10 <sd_bus_message_append@plt>:
  403f10:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403f14:	ldr	x17, [x16, #3408]
  403f18:	add	x16, x16, #0xd50
  403f1c:	br	x17

0000000000403f20 <now@plt>:
  403f20:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403f24:	ldr	x17, [x16, #3416]
  403f28:	add	x16, x16, #0xd58
  403f2c:	br	x17

0000000000403f30 <sd_bus_call@plt>:
  403f30:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403f34:	ldr	x17, [x16, #3424]
  403f38:	add	x16, x16, #0xd60
  403f3c:	br	x17

0000000000403f40 <fwrite@plt>:
  403f40:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403f44:	ldr	x17, [x16, #3432]
  403f48:	add	x16, x16, #0xd68
  403f4c:	br	x17

0000000000403f50 <fflush@plt>:
  403f50:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403f54:	ldr	x17, [x16, #3440]
  403f58:	add	x16, x16, #0xd70
  403f5c:	br	x17

0000000000403f60 <fprintf@plt>:
  403f60:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403f64:	ldr	x17, [x16, #3448]
  403f68:	add	x16, x16, #0xd78
  403f6c:	br	x17

0000000000403f70 <strlen@plt>:
  403f70:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403f74:	ldr	x17, [x16, #3456]
  403f78:	add	x16, x16, #0xd80
  403f7c:	br	x17

0000000000403f80 <strncmp@plt>:
  403f80:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403f84:	ldr	x17, [x16, #3464]
  403f88:	add	x16, x16, #0xd88
  403f8c:	br	x17

0000000000403f90 <strnlen@plt>:
  403f90:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403f94:	ldr	x17, [x16, #3472]
  403f98:	add	x16, x16, #0xd90
  403f9c:	br	x17

0000000000403fa0 <memcpy@plt>:
  403fa0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403fa4:	ldr	x17, [x16, #3480]
  403fa8:	add	x16, x16, #0xd98
  403fac:	br	x17

0000000000403fb0 <strchrnul@plt>:
  403fb0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403fb4:	ldr	x17, [x16, #3488]
  403fb8:	add	x16, x16, #0xda0
  403fbc:	br	x17

0000000000403fc0 <in_addr_ifindex_to_string@plt>:
  403fc0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403fc4:	ldr	x17, [x16, #3496]
  403fc8:	add	x16, x16, #0xda8
  403fcc:	br	x17

0000000000403fd0 <sd_bus_message_append_array@plt>:
  403fd0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403fd4:	ldr	x17, [x16, #3504]
  403fd8:	add	x16, x16, #0xdb0
  403fdc:	br	x17

0000000000403fe0 <af_to_name@plt>:
  403fe0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403fe4:	ldr	x17, [x16, #3512]
  403fe8:	add	x16, x16, #0xdb8
  403fec:	br	x17

0000000000403ff0 <format_timespan@plt>:
  403ff0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  403ff4:	ldr	x17, [x16, #3520]
  403ff8:	add	x16, x16, #0xdc0
  403ffc:	br	x17

0000000000404000 <strncasecmp@plt>:
  404000:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404004:	ldr	x17, [x16, #3528]
  404008:	add	x16, x16, #0xdc8
  40400c:	br	x17

0000000000404010 <cescape_length@plt>:
  404010:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404014:	ldr	x17, [x16, #3536]
  404018:	add	x16, x16, #0xdd0
  40401c:	br	x17

0000000000404020 <strcmp_ptr@plt>:
  404020:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404024:	ldr	x17, [x16, #3544]
  404028:	add	x16, x16, #0xdd8
  40402c:	br	x17

0000000000404030 <strrchr@plt>:
  404030:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404034:	ldr	x17, [x16, #3552]
  404038:	add	x16, x16, #0xde0
  40403c:	br	x17

0000000000404040 <strshorten@plt>:
  404040:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404044:	ldr	x17, [x16, #3560]
  404048:	add	x16, x16, #0xde8
  40404c:	br	x17

0000000000404050 <stpcpy@plt>:
  404050:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404054:	ldr	x17, [x16, #3568]
  404058:	add	x16, x16, #0xdf0
  40405c:	br	x17

0000000000404060 <parse_ip_port@plt>:
  404060:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404064:	ldr	x17, [x16, #3576]
  404068:	add	x16, x16, #0xdf8
  40406c:	br	x17

0000000000404070 <sd_bus_message_open_container@plt>:
  404070:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404074:	ldr	x17, [x16, #3584]
  404078:	add	x16, x16, #0xe00
  40407c:	br	x17

0000000000404080 <in_addr_from_string_auto@plt>:
  404080:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404084:	ldr	x17, [x16, #3592]
  404088:	add	x16, x16, #0xe08
  40408c:	br	x17

0000000000404090 <sd_bus_message_close_container@plt>:
  404090:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404094:	ldr	x17, [x16, #3600]
  404098:	add	x16, x16, #0xe10
  40409c:	br	x17

00000000004040a0 <dns_name_concat@plt>:
  4040a0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4040a4:	ldr	x17, [x16, #3608]
  4040a8:	add	x16, x16, #0xe18
  4040ac:	br	x17

00000000004040b0 <sd_bus_message_append_strv@plt>:
  4040b0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4040b4:	ldr	x17, [x16, #3616]
  4040b8:	add	x16, x16, #0xe20
  4040bc:	br	x17

00000000004040c0 <page_size@plt>:
  4040c0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4040c4:	ldr	x17, [x16, #3624]
  4040c8:	add	x16, x16, #0xe28
  4040cc:	br	x17

00000000004040d0 <calloc@plt>:
  4040d0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4040d4:	ldr	x17, [x16, #3632]
  4040d8:	add	x16, x16, #0xe30
  4040dc:	br	x17

00000000004040e0 <internal_hashmap_iterate@plt>:
  4040e0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4040e4:	ldr	x17, [x16, #3640]
  4040e8:	add	x16, x16, #0xe38
  4040ec:	br	x17

00000000004040f0 <internal_hashmap_remove@plt>:
  4040f0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4040f4:	ldr	x17, [x16, #3648]
  4040f8:	add	x16, x16, #0xe40
  4040fc:	br	x17

0000000000404100 <realloc@plt>:
  404100:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404104:	ldr	x17, [x16, #3656]
  404108:	add	x16, x16, #0xe48
  40410c:	br	x17

0000000000404110 <malloc@plt>:
  404110:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404114:	ldr	x17, [x16, #3664]
  404118:	add	x16, x16, #0xe50
  40411c:	br	x17

0000000000404120 <ascii_tolower@plt>:
  404120:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404124:	ldr	x17, [x16, #3672]
  404128:	add	x16, x16, #0xe58
  40412c:	br	x17

0000000000404130 <dns_name_is_root@plt>:
  404130:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404134:	ldr	x17, [x16, #3680]
  404138:	add	x16, x16, #0xe60
  40413c:	br	x17

0000000000404140 <dns_label_unescape@plt>:
  404140:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404144:	ldr	x17, [x16, #3688]
  404148:	add	x16, x16, #0xe68
  40414c:	br	x17

0000000000404150 <internal_hashmap_ensure_allocated@plt>:
  404150:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404154:	ldr	x17, [x16, #3696]
  404158:	add	x16, x16, #0xe70
  40415c:	br	x17

0000000000404160 <hashmap_put@plt>:
  404160:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404164:	ldr	x17, [x16, #3704]
  404168:	add	x16, x16, #0xe78
  40416c:	br	x17

0000000000404170 <internal_hashmap_get@plt>:
  404170:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404174:	ldr	x17, [x16, #3712]
  404178:	add	x16, x16, #0xe80
  40417c:	br	x17

0000000000404180 <bitmap_iterate@plt>:
  404180:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404184:	ldr	x17, [x16, #3720]
  404188:	add	x16, x16, #0xe88
  40418c:	br	x17

0000000000404190 <memchr@plt>:
  404190:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404194:	ldr	x17, [x16, #3728]
  404198:	add	x16, x16, #0xe90
  40419c:	br	x17

00000000004041a0 <utf8_is_valid@plt>:
  4041a0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4041a4:	ldr	x17, [x16, #3736]
  4041a8:	add	x16, x16, #0xe98
  4041ac:	br	x17

00000000004041b0 <greedy_realloc@plt>:
  4041b0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4041b4:	ldr	x17, [x16, #3744]
  4041b8:	add	x16, x16, #0xea0
  4041bc:	br	x17

00000000004041c0 <dns_label_escape@plt>:
  4041c0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4041c4:	ldr	x17, [x16, #3752]
  4041c8:	add	x16, x16, #0xea8
  4041cc:	br	x17

00000000004041d0 <memdup@plt>:
  4041d0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4041d4:	ldr	x17, [x16, #3760]
  4041d8:	add	x16, x16, #0xeb0
  4041dc:	br	x17

00000000004041e0 <internal_set_new@plt>:
  4041e0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4041e4:	ldr	x17, [x16, #3768]
  4041e8:	add	x16, x16, #0xeb8
  4041ec:	br	x17

00000000004041f0 <set_put@plt>:
  4041f0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4041f4:	ldr	x17, [x16, #3776]
  4041f8:	add	x16, x16, #0xec0
  4041fc:	br	x17

0000000000404200 <siphash24_compress@plt>:
  404200:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404204:	ldr	x17, [x16, #3784]
  404208:	add	x16, x16, #0xec8
  40420c:	br	x17

0000000000404210 <memcmp@plt>:
  404210:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404214:	ldr	x17, [x16, #3792]
  404218:	add	x16, x16, #0xed0
  40421c:	br	x17

0000000000404220 <string_table_lookup@plt>:
  404220:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404224:	ldr	x17, [x16, #3800]
  404228:	add	x16, x16, #0xed8
  40422c:	br	x17

0000000000404230 <internal_hashmap_free@plt>:
  404230:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404234:	ldr	x17, [x16, #3808]
  404238:	add	x16, x16, #0xee0
  40423c:	br	x17

0000000000404240 <internal_hashmap_first_key_and_value@plt>:
  404240:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404244:	ldr	x17, [x16, #3816]
  404248:	add	x16, x16, #0xee8
  40424c:	br	x17

0000000000404250 <bitmap_ensure_allocated@plt>:
  404250:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404254:	ldr	x17, [x16, #3824]
  404258:	add	x16, x16, #0xef0
  40425c:	br	x17

0000000000404260 <bitmap_set@plt>:
  404260:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404264:	ldr	x17, [x16, #3832]
  404268:	add	x16, x16, #0xef8
  40426c:	br	x17

0000000000404270 <internal_hashmap_reserve@plt>:
  404270:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404274:	ldr	x17, [x16, #3840]
  404278:	add	x16, x16, #0xf00
  40427c:	br	x17

0000000000404280 <strcpy@plt>:
  404280:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404284:	ldr	x17, [x16, #3848]
  404288:	add	x16, x16, #0xf08
  40428c:	br	x17

0000000000404290 <dns_name_change_suffix@plt>:
  404290:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404294:	ldr	x17, [x16, #3856]
  404298:	add	x16, x16, #0xf10
  40429c:	br	x17

00000000004042a0 <dns_name_endswith@plt>:
  4042a0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4042a4:	ldr	x17, [x16, #3864]
  4042a8:	add	x16, x16, #0xf18
  4042ac:	br	x17

00000000004042b0 <dns_name_equal@plt>:
  4042b0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4042b4:	ldr	x17, [x16, #3872]
  4042b8:	add	x16, x16, #0xf20
  4042bc:	br	x17

00000000004042c0 <dns_name_hash_func@plt>:
  4042c0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4042c4:	ldr	x17, [x16, #3880]
  4042c8:	add	x16, x16, #0xf28
  4042cc:	br	x17

00000000004042d0 <dns_name_compare_func@plt>:
  4042d0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4042d4:	ldr	x17, [x16, #3888]
  4042d8:	add	x16, x16, #0xf30
  4042dc:	br	x17

00000000004042e0 <snprintf@plt>:
  4042e0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4042e4:	ldr	x17, [x16, #3896]
  4042e8:	add	x16, x16, #0xf38
  4042ec:	br	x17

00000000004042f0 <bitmap_free@plt>:
  4042f0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4042f4:	ldr	x17, [x16, #3904]
  4042f8:	add	x16, x16, #0xf40
  4042fc:	br	x17

0000000000404300 <dns_name_reverse@plt>:
  404300:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404304:	ldr	x17, [x16, #3912]
  404308:	add	x16, x16, #0xf48
  40430c:	br	x17

0000000000404310 <strcasecmp@plt>:
  404310:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404314:	ldr	x17, [x16, #3920]
  404318:	add	x16, x16, #0xf50
  40431c:	br	x17

0000000000404320 <bitmap_equal@plt>:
  404320:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404324:	ldr	x17, [x16, #3928]
  404328:	add	x16, x16, #0xf58
  40432c:	br	x17

0000000000404330 <hexmem@plt>:
  404330:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404334:	ldr	x17, [x16, #3936]
  404338:	add	x16, x16, #0xf60
  40433c:	br	x17

0000000000404340 <columns@plt>:
  404340:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404344:	ldr	x17, [x16, #3944]
  404348:	add	x16, x16, #0xf68
  40434c:	br	x17

0000000000404350 <base64_append@plt>:
  404350:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404354:	ldr	x17, [x16, #3952]
  404358:	add	x16, x16, #0xf70
  40435c:	br	x17

0000000000404360 <base32hexmem@plt>:
  404360:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404364:	ldr	x17, [x16, #3960]
  404368:	add	x16, x16, #0xf78
  40436c:	br	x17

0000000000404370 <octescape@plt>:
  404370:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404374:	ldr	x17, [x16, #3968]
  404378:	add	x16, x16, #0xf80
  40437c:	br	x17

0000000000404380 <exp10@plt>:
  404380:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404384:	ldr	x17, [x16, #3976]
  404388:	add	x16, x16, #0xf88
  40438c:	br	x17

0000000000404390 <gmtime_r@plt>:
  404390:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404394:	ldr	x17, [x16, #3984]
  404398:	add	x16, x16, #0xf90
  40439c:	br	x17

00000000004043a0 <strftime@plt>:
  4043a0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4043a4:	ldr	x17, [x16, #3992]
  4043a8:	add	x16, x16, #0xf98
  4043ac:	br	x17

00000000004043b0 <dns_name_skip@plt>:
  4043b0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4043b4:	ldr	x17, [x16, #4000]
  4043b8:	add	x16, x16, #0xfa0
  4043bc:	br	x17

00000000004043c0 <dns_name_startswith@plt>:
  4043c0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4043c4:	ldr	x17, [x16, #4008]
  4043c8:	add	x16, x16, #0xfa8
  4043cc:	br	x17

00000000004043d0 <string_hash_func@plt>:
  4043d0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4043d4:	ldr	x17, [x16, #4016]
  4043d8:	add	x16, x16, #0xfb0
  4043dc:	br	x17

00000000004043e0 <bitmap_copy@plt>:
  4043e0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4043e4:	ldr	x17, [x16, #4024]
  4043e8:	add	x16, x16, #0xfb8
  4043ec:	br	x17

00000000004043f0 <safe_atou_full@plt>:
  4043f0:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4043f4:	ldr	x17, [x16, #4032]
  4043f8:	add	x16, x16, #0xfc0
  4043fc:	br	x17

0000000000404400 <strv_join_prefix@plt>:
  404400:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404404:	ldr	x17, [x16, #4040]
  404408:	add	x16, x16, #0xfc8
  40440c:	br	x17

0000000000404410 <memmove@plt>:
  404410:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404414:	ldr	x17, [x16, #4048]
  404418:	add	x16, x16, #0xfd0
  40441c:	br	x17

0000000000404420 <in_addr_is_link_local@plt>:
  404420:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404424:	ldr	x17, [x16, #4056]
  404428:	add	x16, x16, #0xfd8
  40442c:	br	x17

0000000000404430 <fputs@plt>:
  404430:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404434:	ldr	x17, [x16, #4064]
  404438:	add	x16, x16, #0xfe0
  40443c:	br	x17

0000000000404440 <dns_name_apply_idna@plt>:
  404440:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404444:	ldr	x17, [x16, #4072]
  404448:	add	x16, x16, #0xfe8
  40444c:	br	x17

0000000000404450 <dns_service_join@plt>:
  404450:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404454:	ldr	x17, [x16, #4080]
  404458:	add	x16, x16, #0xff0
  40445c:	br	x17

0000000000404460 <ascii_strlower_n@plt>:
  404460:	adrp	x16, 44f000 <ascii_strlower_n@plt+0x4aba0>
  404464:	ldr	x17, [x16, #4088]
  404468:	add	x16, x16, #0xff8
  40446c:	br	x17

Disassembly of section .text:

0000000000404470 <.text>:
  404470:	mov	x29, #0x0                   	// #0
  404474:	mov	x30, #0x0                   	// #0
  404478:	mov	x5, x0
  40447c:	ldr	x1, [sp]
  404480:	add	x2, sp, #0x8
  404484:	mov	x6, sp
  404488:	movz	x0, #0x0, lsl #48
  40448c:	movk	x0, #0x0, lsl #32
  404490:	movk	x0, #0x40, lsl #16
  404494:	movk	x0, #0x5998
  404498:	movz	x3, #0x0, lsl #48
  40449c:	movk	x3, #0x0, lsl #32
  4044a0:	movk	x3, #0x42, lsl #16
  4044a4:	movk	x3, #0xcb38
  4044a8:	movz	x4, #0x0, lsl #48
  4044ac:	movk	x4, #0x0, lsl #32
  4044b0:	movk	x4, #0x42, lsl #16
  4044b4:	movk	x4, #0xcbb8
  4044b8:	bl	4039a0 <__libc_start_main@plt>
  4044bc:	bl	4039b0 <abort@plt>
  4044c0:	adrp	x0, 44f000 <ascii_strlower_n@plt+0x4aba0>
  4044c4:	ldr	x0, [x0, #2640]
  4044c8:	cbz	x0, 4044d0 <ascii_strlower_n@plt+0x70>
  4044cc:	b	4039c0 <__gmon_start__@plt>
  4044d0:	ret
  4044d4:	stp	x29, x30, [sp, #-32]!
  4044d8:	mov	x29, sp
  4044dc:	adrp	x0, 450000 <ascii_strlower_n@plt+0x4bba0>
  4044e0:	add	x0, x0, #0x0
  4044e4:	str	x0, [sp, #24]
  4044e8:	ldr	x0, [sp, #24]
  4044ec:	str	x0, [sp, #24]
  4044f0:	ldr	x1, [sp, #24]
  4044f4:	adrp	x0, 450000 <ascii_strlower_n@plt+0x4bba0>
  4044f8:	add	x0, x0, #0x0
  4044fc:	cmp	x1, x0
  404500:	b.eq	40453c <ascii_strlower_n@plt+0xdc>  // b.none
  404504:	adrp	x0, 42c000 <ascii_strlower_n@plt+0x27ba0>
  404508:	add	x0, x0, #0xbd0
  40450c:	ldr	x0, [x0]
  404510:	str	x0, [sp, #16]
  404514:	ldr	x0, [sp, #16]
  404518:	str	x0, [sp, #16]
  40451c:	ldr	x0, [sp, #16]
  404520:	cmp	x0, #0x0
  404524:	b.eq	404540 <ascii_strlower_n@plt+0xe0>  // b.none
  404528:	ldr	x1, [sp, #16]
  40452c:	adrp	x0, 450000 <ascii_strlower_n@plt+0x4bba0>
  404530:	add	x0, x0, #0x0
  404534:	blr	x1
  404538:	b	404540 <ascii_strlower_n@plt+0xe0>
  40453c:	nop
  404540:	ldp	x29, x30, [sp], #32
  404544:	ret
  404548:	stp	x29, x30, [sp, #-48]!
  40454c:	mov	x29, sp
  404550:	adrp	x0, 450000 <ascii_strlower_n@plt+0x4bba0>
  404554:	add	x0, x0, #0x0
  404558:	str	x0, [sp, #40]
  40455c:	ldr	x0, [sp, #40]
  404560:	str	x0, [sp, #40]
  404564:	ldr	x1, [sp, #40]
  404568:	adrp	x0, 450000 <ascii_strlower_n@plt+0x4bba0>
  40456c:	add	x0, x0, #0x0
  404570:	sub	x0, x1, x0
  404574:	asr	x0, x0, #3
  404578:	lsr	x1, x0, #63
  40457c:	add	x0, x1, x0
  404580:	asr	x0, x0, #1
  404584:	str	x0, [sp, #32]
  404588:	ldr	x0, [sp, #32]
  40458c:	cmp	x0, #0x0
  404590:	b.eq	4045d0 <ascii_strlower_n@plt+0x170>  // b.none
  404594:	adrp	x0, 42c000 <ascii_strlower_n@plt+0x27ba0>
  404598:	add	x0, x0, #0xbd8
  40459c:	ldr	x0, [x0]
  4045a0:	str	x0, [sp, #24]
  4045a4:	ldr	x0, [sp, #24]
  4045a8:	str	x0, [sp, #24]
  4045ac:	ldr	x0, [sp, #24]
  4045b0:	cmp	x0, #0x0
  4045b4:	b.eq	4045d4 <ascii_strlower_n@plt+0x174>  // b.none
  4045b8:	ldr	x2, [sp, #24]
  4045bc:	ldr	x1, [sp, #32]
  4045c0:	adrp	x0, 450000 <ascii_strlower_n@plt+0x4bba0>
  4045c4:	add	x0, x0, #0x0
  4045c8:	blr	x2
  4045cc:	b	4045d4 <ascii_strlower_n@plt+0x174>
  4045d0:	nop
  4045d4:	ldp	x29, x30, [sp], #48
  4045d8:	ret
  4045dc:	stp	x29, x30, [sp, #-16]!
  4045e0:	mov	x29, sp
  4045e4:	adrp	x0, 450000 <ascii_strlower_n@plt+0x4bba0>
  4045e8:	add	x0, x0, #0x140
  4045ec:	ldrb	w0, [x0]
  4045f0:	and	x0, x0, #0xff
  4045f4:	cmp	x0, #0x0
  4045f8:	b.ne	404614 <ascii_strlower_n@plt+0x1b4>  // b.any
  4045fc:	bl	4044d4 <ascii_strlower_n@plt+0x74>
  404600:	adrp	x0, 450000 <ascii_strlower_n@plt+0x4bba0>
  404604:	add	x0, x0, #0x140
  404608:	mov	w1, #0x1                   	// #1
  40460c:	strb	w1, [x0]
  404610:	b	404618 <ascii_strlower_n@plt+0x1b8>
  404614:	nop
  404618:	ldp	x29, x30, [sp], #16
  40461c:	ret
  404620:	stp	x29, x30, [sp, #-16]!
  404624:	mov	x29, sp
  404628:	bl	404548 <ascii_strlower_n@plt+0xe8>
  40462c:	nop
  404630:	ldp	x29, x30, [sp], #16
  404634:	ret
  404638:	sub	sp, sp, #0x190
  40463c:	stp	x29, x30, [sp, #368]
  404640:	str	x28, [sp, #384]
  404644:	add	x29, sp, #0x170
  404648:	sub	x8, x29, #0x10
  40464c:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  404650:	add	x9, x9, #0x14c
  404654:	adrp	x10, 450000 <ascii_strlower_n@plt+0x4bba0>
  404658:	add	x10, x10, #0x1b8
  40465c:	adrp	x11, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404660:	add	x11, x11, #0x5a
  404664:	add	x11, x11, #0x3
  404668:	adrp	x12, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40466c:	add	x12, x12, #0xd6
  404670:	adrp	x13, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404674:	add	x13, x13, #0x7d
  404678:	stur	w0, [x29, #-8]
  40467c:	str	x1, [x8]
  404680:	stur	wzr, [x29, #-20]
  404684:	str	x8, [sp, #120]
  404688:	str	x9, [sp, #112]
  40468c:	str	x10, [sp, #104]
  404690:	str	x11, [sp, #96]
  404694:	str	x12, [sp, #88]
  404698:	str	x13, [sp, #80]
  40469c:	ldur	w8, [x29, #-8]
  4046a0:	cmp	w8, #0x0
  4046a4:	cset	w8, ge  // ge = tcont
  4046a8:	mov	w9, #0x1                   	// #1
  4046ac:	eor	w8, w8, #0x1
  4046b0:	eor	w8, w8, w9
  4046b4:	eor	w8, w8, w9
  4046b8:	and	w8, w8, #0x1
  4046bc:	mov	w0, w8
  4046c0:	sxtw	x10, w0
  4046c4:	cbz	x10, 4046e8 <ascii_strlower_n@plt+0x288>
  4046c8:	mov	w8, wzr
  4046cc:	mov	w0, w8
  4046d0:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4046d4:	add	x1, x1, #0x50
  4046d8:	ldr	x2, [sp, #96]
  4046dc:	mov	w3, #0x80                  	// #128
  4046e0:	ldr	x4, [sp, #80]
  4046e4:	bl	4039d0 <log_assert_failed_realm@plt>
  4046e8:	ldr	x8, [sp, #120]
  4046ec:	ldr	x9, [x8]
  4046f0:	cmp	x9, #0x0
  4046f4:	cset	w10, ne  // ne = any
  4046f8:	mov	w11, #0x1                   	// #1
  4046fc:	eor	w10, w10, #0x1
  404700:	eor	w10, w10, w11
  404704:	eor	w10, w10, w11
  404708:	and	w10, w10, #0x1
  40470c:	mov	w0, w10
  404710:	sxtw	x9, w0
  404714:	cbz	x9, 404738 <ascii_strlower_n@plt+0x2d8>
  404718:	mov	w8, wzr
  40471c:	mov	w0, w8
  404720:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404724:	add	x1, x1, #0xa5
  404728:	ldr	x2, [sp, #96]
  40472c:	mov	w3, #0x81                  	// #129
  404730:	ldr	x4, [sp, #80]
  404734:	bl	4039d0 <log_assert_failed_realm@plt>
  404738:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40473c:	add	x0, x0, #0xaa
  404740:	bl	4039e0 <getenv@plt>
  404744:	cbz	x0, 404750 <ascii_strlower_n@plt+0x2f0>
  404748:	mov	w8, #0x2                   	// #2
  40474c:	stur	w8, [x29, #-20]
  404750:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404754:	add	x0, x0, #0xb7
  404758:	bl	4039e0 <getenv@plt>
  40475c:	cbz	x0, 404768 <ascii_strlower_n@plt+0x308>
  404760:	mov	w8, #0x1                   	// #1
  404764:	stur	w8, [x29, #-20]
  404768:	mov	w8, #0xffffffff            	// #-1
  40476c:	ldr	x9, [sp, #112]
  404770:	str	w8, [x9]
  404774:	ldur	w0, [x29, #-8]
  404778:	ldr	x8, [sp, #120]
  40477c:	ldr	x1, [x8]
  404780:	adrp	x2, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404784:	add	x2, x2, #0xc2
  404788:	adrp	x3, 42c000 <ascii_strlower_n@plt+0x27ba0>
  40478c:	add	x3, x3, #0xf20
  404790:	mov	x9, xzr
  404794:	mov	x4, x9
  404798:	bl	4039f0 <getopt_long@plt>
  40479c:	stur	w0, [x29, #-24]
  4047a0:	cmp	w0, #0x0
  4047a4:	cset	w10, lt  // lt = tstop
  4047a8:	tbnz	w10, #0, 404b14 <ascii_strlower_n@plt+0x6b4>
  4047ac:	ldur	w8, [x29, #-24]
  4047b0:	subs	w8, w8, #0x3f
  4047b4:	mov	w9, w8
  4047b8:	ubfx	x9, x9, #0, #32
  4047bc:	cmp	x9, #0xc4
  4047c0:	str	x9, [sp, #72]
  4047c4:	b.hi	404af0 <ascii_strlower_n@plt+0x690>  // b.pmore
  4047c8:	adrp	x8, 42c000 <ascii_strlower_n@plt+0x27ba0>
  4047cc:	add	x8, x8, #0xc0c
  4047d0:	ldr	x11, [sp, #72]
  4047d4:	ldrsw	x10, [x8, x11, lsl #2]
  4047d8:	add	x9, x8, x10
  4047dc:	br	x9
  4047e0:	bl	4050f0 <ascii_strlower_n@plt+0xc90>
  4047e4:	stur	w0, [x29, #-4]
  4047e8:	b	4050dc <ascii_strlower_n@plt+0xc7c>
  4047ec:	bl	403a00 <version@plt>
  4047f0:	stur	w0, [x29, #-4]
  4047f4:	b	4050dc <ascii_strlower_n@plt+0xc7c>
  4047f8:	mov	w8, #0xa                   	// #10
  4047fc:	ldr	x9, [sp, #112]
  404800:	str	w8, [x9]
  404804:	b	404b10 <ascii_strlower_n@plt+0x6b0>
  404808:	mov	w8, #0xb                   	// #11
  40480c:	ldr	x9, [sp, #112]
  404810:	str	w8, [x9]
  404814:	b	404b10 <ascii_strlower_n@plt+0x6b0>
  404818:	mov	w8, #0x2                   	// #2
  40481c:	stur	w8, [x29, #-20]
  404820:	b	404b10 <ascii_strlower_n@plt+0x6b0>
  404824:	mov	w8, #0x1                   	// #1
  404828:	stur	w8, [x29, #-20]
  40482c:	b	404b10 <ascii_strlower_n@plt+0x6b0>
  404830:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  404834:	add	x8, x8, #0x148
  404838:	mov	w9, #0x1                   	// #1
  40483c:	strb	w9, [x8]
  404840:	b	404b10 <ascii_strlower_n@plt+0x6b0>
  404844:	mov	w8, #0x7                   	// #7
  404848:	stur	w8, [x29, #-32]
  40484c:	stur	wzr, [x29, #-36]
  404850:	stur	wzr, [x29, #-40]
  404854:	ldur	w0, [x29, #-40]
  404858:	bl	403a10 <log_get_max_level_realm@plt>
  40485c:	ldur	w8, [x29, #-32]
  404860:	and	w8, w8, #0x7
  404864:	cmp	w0, w8
  404868:	b.lt	4048a0 <ascii_strlower_n@plt+0x440>  // b.tstop
  40486c:	ldur	w8, [x29, #-40]
  404870:	ldur	w9, [x29, #-32]
  404874:	orr	w0, w9, w8, lsl #10
  404878:	ldur	w1, [x29, #-36]
  40487c:	ldur	w6, [x29, #-24]
  404880:	ldr	x2, [sp, #96]
  404884:	mov	w3, #0xac                  	// #172
  404888:	ldr	x4, [sp, #88]
  40488c:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404890:	add	x5, x5, #0xec
  404894:	bl	403a20 <log_internal_realm@plt>
  404898:	str	w0, [sp, #68]
  40489c:	b	4048b4 <ascii_strlower_n@plt+0x454>
  4048a0:	ldur	w0, [x29, #-36]
  4048a4:	bl	403a30 <abs@plt>
  4048a8:	mov	w8, wzr
  4048ac:	subs	w8, w8, w0, uxtb
  4048b0:	str	w8, [sp, #68]
  4048b4:	ldr	w8, [sp, #68]
  4048b8:	stur	w8, [x29, #-44]
  4048bc:	b	404b10 <ascii_strlower_n@plt+0x6b0>
  4048c0:	mov	w8, #0x3                   	// #3
  4048c4:	stur	w8, [x29, #-48]
  4048c8:	mov	w8, #0x16                  	// #22
  4048cc:	movk	w8, #0x4000, lsl #16
  4048d0:	stur	w8, [x29, #-52]
  4048d4:	stur	wzr, [x29, #-56]
  4048d8:	ldur	w0, [x29, #-56]
  4048dc:	bl	403a10 <log_get_max_level_realm@plt>
  4048e0:	ldur	w8, [x29, #-48]
  4048e4:	and	w8, w8, #0x7
  4048e8:	cmp	w0, w8
  4048ec:	b.lt	404924 <ascii_strlower_n@plt+0x4c4>  // b.tstop
  4048f0:	ldur	w8, [x29, #-56]
  4048f4:	ldur	w9, [x29, #-48]
  4048f8:	orr	w0, w9, w8, lsl #10
  4048fc:	ldur	w1, [x29, #-52]
  404900:	ldur	w6, [x29, #-24]
  404904:	ldr	x2, [sp, #96]
  404908:	mov	w3, #0xbb                  	// #187
  40490c:	ldr	x4, [sp, #88]
  404910:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404914:	add	x5, x5, #0x100
  404918:	bl	403a20 <log_internal_realm@plt>
  40491c:	str	w0, [sp, #64]
  404920:	b	404938 <ascii_strlower_n@plt+0x4d8>
  404924:	ldur	w0, [x29, #-52]
  404928:	bl	403a30 <abs@plt>
  40492c:	mov	w8, wzr
  404930:	subs	w8, w8, w0, uxtb
  404934:	str	w8, [sp, #64]
  404938:	ldr	w8, [sp, #64]
  40493c:	stur	w8, [x29, #-60]
  404940:	ldur	w8, [x29, #-60]
  404944:	stur	w8, [x29, #-4]
  404948:	b	4050dc <ascii_strlower_n@plt+0xc7c>
  40494c:	mov	w8, #0x3                   	// #3
  404950:	stur	w8, [x29, #-64]
  404954:	mov	w8, #0x16                  	// #22
  404958:	movk	w8, #0x4000, lsl #16
  40495c:	stur	w8, [x29, #-68]
  404960:	stur	wzr, [x29, #-72]
  404964:	ldur	w0, [x29, #-72]
  404968:	bl	403a10 <log_get_max_level_realm@plt>
  40496c:	ldur	w8, [x29, #-64]
  404970:	and	w8, w8, #0x7
  404974:	cmp	w0, w8
  404978:	b.lt	4049ac <ascii_strlower_n@plt+0x54c>  // b.tstop
  40497c:	ldur	w8, [x29, #-72]
  404980:	ldur	w9, [x29, #-64]
  404984:	orr	w0, w9, w8, lsl #10
  404988:	ldur	w1, [x29, #-68]
  40498c:	ldr	x2, [sp, #96]
  404990:	mov	w3, #0xc0                  	// #192
  404994:	ldr	x4, [sp, #88]
  404998:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40499c:	add	x5, x5, #0x11a
  4049a0:	bl	403a20 <log_internal_realm@plt>
  4049a4:	str	w0, [sp, #60]
  4049a8:	b	4049c0 <ascii_strlower_n@plt+0x560>
  4049ac:	ldur	w0, [x29, #-68]
  4049b0:	bl	403a30 <abs@plt>
  4049b4:	mov	w8, wzr
  4049b8:	subs	w8, w8, w0, uxtb
  4049bc:	str	w8, [sp, #60]
  4049c0:	ldr	w8, [sp, #60]
  4049c4:	stur	w8, [x29, #-76]
  4049c8:	ldur	w8, [x29, #-76]
  4049cc:	stur	w8, [x29, #-4]
  4049d0:	b	4050dc <ascii_strlower_n@plt+0xc7c>
  4049d4:	mov	w8, #0x3                   	// #3
  4049d8:	stur	w8, [x29, #-80]
  4049dc:	mov	w8, #0x16                  	// #22
  4049e0:	movk	w8, #0x4000, lsl #16
  4049e4:	stur	w8, [x29, #-84]
  4049e8:	stur	wzr, [x29, #-88]
  4049ec:	ldur	w0, [x29, #-88]
  4049f0:	bl	403a10 <log_get_max_level_realm@plt>
  4049f4:	ldur	w8, [x29, #-80]
  4049f8:	and	w8, w8, #0x7
  4049fc:	cmp	w0, w8
  404a00:	b.lt	404a34 <ascii_strlower_n@plt+0x5d4>  // b.tstop
  404a04:	ldur	w8, [x29, #-88]
  404a08:	ldur	w9, [x29, #-80]
  404a0c:	orr	w0, w9, w8, lsl #10
  404a10:	ldur	w1, [x29, #-84]
  404a14:	ldr	x2, [sp, #96]
  404a18:	mov	w3, #0xc3                  	// #195
  404a1c:	ldr	x4, [sp, #88]
  404a20:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404a24:	add	x5, x5, #0x141
  404a28:	bl	403a20 <log_internal_realm@plt>
  404a2c:	str	w0, [sp, #56]
  404a30:	b	404a48 <ascii_strlower_n@plt+0x5e8>
  404a34:	ldur	w0, [x29, #-84]
  404a38:	bl	403a30 <abs@plt>
  404a3c:	mov	w8, wzr
  404a40:	subs	w8, w8, w0, uxtb
  404a44:	str	w8, [sp, #56]
  404a48:	ldr	w8, [sp, #56]
  404a4c:	stur	w8, [x29, #-92]
  404a50:	ldur	w8, [x29, #-92]
  404a54:	stur	w8, [x29, #-4]
  404a58:	b	4050dc <ascii_strlower_n@plt+0xc7c>
  404a5c:	mov	w8, #0x3                   	// #3
  404a60:	stur	w8, [x29, #-96]
  404a64:	mov	w8, #0x16                  	// #22
  404a68:	movk	w8, #0x4000, lsl #16
  404a6c:	stur	w8, [x29, #-100]
  404a70:	stur	wzr, [x29, #-104]
  404a74:	ldur	w0, [x29, #-104]
  404a78:	bl	403a10 <log_get_max_level_realm@plt>
  404a7c:	ldur	w8, [x29, #-96]
  404a80:	and	w8, w8, #0x7
  404a84:	cmp	w0, w8
  404a88:	b.lt	404abc <ascii_strlower_n@plt+0x65c>  // b.tstop
  404a8c:	ldur	w8, [x29, #-104]
  404a90:	ldur	w9, [x29, #-96]
  404a94:	orr	w0, w9, w8, lsl #10
  404a98:	ldur	w1, [x29, #-100]
  404a9c:	ldr	x2, [sp, #96]
  404aa0:	mov	w3, #0xc6                  	// #198
  404aa4:	ldr	x4, [sp, #88]
  404aa8:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404aac:	add	x5, x5, #0x169
  404ab0:	bl	403a20 <log_internal_realm@plt>
  404ab4:	str	w0, [sp, #52]
  404ab8:	b	404ad0 <ascii_strlower_n@plt+0x670>
  404abc:	ldur	w0, [x29, #-100]
  404ac0:	bl	403a30 <abs@plt>
  404ac4:	mov	w8, wzr
  404ac8:	subs	w8, w8, w0, uxtb
  404acc:	str	w8, [sp, #52]
  404ad0:	ldr	w8, [sp, #52]
  404ad4:	stur	w8, [x29, #-108]
  404ad8:	ldur	w8, [x29, #-108]
  404adc:	stur	w8, [x29, #-4]
  404ae0:	b	4050dc <ascii_strlower_n@plt+0xc7c>
  404ae4:	mov	w8, #0xffffffea            	// #-22
  404ae8:	stur	w8, [x29, #-4]
  404aec:	b	4050dc <ascii_strlower_n@plt+0xc7c>
  404af0:	mov	w8, wzr
  404af4:	mov	w0, w8
  404af8:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404afc:	add	x1, x1, #0x195
  404b00:	ldr	x2, [sp, #96]
  404b04:	mov	w3, #0xcc                  	// #204
  404b08:	ldr	x4, [sp, #80]
  404b0c:	bl	403a40 <log_assert_failed_unreachable_realm@plt>
  404b10:	b	404774 <ascii_strlower_n@plt+0x314>
  404b14:	ldr	x8, [sp, #112]
  404b18:	ldr	w9, [x8]
  404b1c:	mov	w10, #0xffffffff            	// #-1
  404b20:	cmp	w9, w10
  404b24:	b.ne	404bb0 <ascii_strlower_n@plt+0x750>  // b.any
  404b28:	mov	w8, #0x3                   	// #3
  404b2c:	stur	w8, [x29, #-112]
  404b30:	mov	w8, #0x16                  	// #22
  404b34:	movk	w8, #0x4000, lsl #16
  404b38:	stur	w8, [x29, #-116]
  404b3c:	stur	wzr, [x29, #-120]
  404b40:	ldur	w0, [x29, #-120]
  404b44:	bl	403a10 <log_get_max_level_realm@plt>
  404b48:	ldur	w8, [x29, #-112]
  404b4c:	and	w8, w8, #0x7
  404b50:	cmp	w0, w8
  404b54:	b.lt	404b88 <ascii_strlower_n@plt+0x728>  // b.tstop
  404b58:	ldur	w8, [x29, #-120]
  404b5c:	ldur	w9, [x29, #-112]
  404b60:	orr	w0, w9, w8, lsl #10
  404b64:	ldur	w1, [x29, #-116]
  404b68:	ldr	x2, [sp, #96]
  404b6c:	mov	w3, #0xd1                  	// #209
  404b70:	ldr	x4, [sp, #88]
  404b74:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404b78:	add	x5, x5, #0x1a6
  404b7c:	bl	403a20 <log_internal_realm@plt>
  404b80:	str	w0, [sp, #48]
  404b84:	b	404b9c <ascii_strlower_n@plt+0x73c>
  404b88:	ldur	w0, [x29, #-116]
  404b8c:	bl	403a30 <abs@plt>
  404b90:	mov	w8, wzr
  404b94:	subs	w8, w8, w0, uxtb
  404b98:	str	w8, [sp, #48]
  404b9c:	ldr	w8, [sp, #48]
  404ba0:	stur	w8, [x29, #-124]
  404ba4:	ldur	w8, [x29, #-124]
  404ba8:	stur	w8, [x29, #-4]
  404bac:	b	4050dc <ascii_strlower_n@plt+0xc7c>
  404bb0:	ldr	x8, [sp, #104]
  404bb4:	ldr	w9, [x8]
  404bb8:	add	w9, w9, #0x1
  404bbc:	ldur	w10, [x29, #-8]
  404bc0:	cmp	w9, w10
  404bc4:	b.eq	404c50 <ascii_strlower_n@plt+0x7f0>  // b.none
  404bc8:	mov	w8, #0x3                   	// #3
  404bcc:	stur	w8, [x29, #-128]
  404bd0:	mov	w8, #0x16                  	// #22
  404bd4:	movk	w8, #0x4000, lsl #16
  404bd8:	stur	w8, [x29, #-132]
  404bdc:	stur	wzr, [x29, #-136]
  404be0:	ldur	w0, [x29, #-136]
  404be4:	bl	403a10 <log_get_max_level_realm@plt>
  404be8:	ldur	w8, [x29, #-128]
  404bec:	and	w8, w8, #0x7
  404bf0:	cmp	w0, w8
  404bf4:	b.lt	404c28 <ascii_strlower_n@plt+0x7c8>  // b.tstop
  404bf8:	ldur	w8, [x29, #-136]
  404bfc:	ldur	w9, [x29, #-128]
  404c00:	orr	w0, w9, w8, lsl #10
  404c04:	ldur	w1, [x29, #-132]
  404c08:	ldr	x2, [sp, #96]
  404c0c:	mov	w3, #0xd5                  	// #213
  404c10:	ldr	x4, [sp, #88]
  404c14:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404c18:	add	x5, x5, #0x1d4
  404c1c:	bl	403a20 <log_internal_realm@plt>
  404c20:	str	w0, [sp, #44]
  404c24:	b	404c3c <ascii_strlower_n@plt+0x7dc>
  404c28:	ldur	w0, [x29, #-132]
  404c2c:	bl	403a30 <abs@plt>
  404c30:	mov	w8, wzr
  404c34:	subs	w8, w8, w0, uxtb
  404c38:	str	w8, [sp, #44]
  404c3c:	ldr	w8, [sp, #44]
  404c40:	stur	w8, [x29, #-140]
  404c44:	ldur	w8, [x29, #-140]
  404c48:	stur	w8, [x29, #-4]
  404c4c:	b	4050dc <ascii_strlower_n@plt+0xc7c>
  404c50:	ldr	x8, [sp, #120]
  404c54:	ldr	x9, [x8]
  404c58:	ldr	x10, [sp, #104]
  404c5c:	ldrsw	x11, [x10]
  404c60:	mov	x12, #0x8                   	// #8
  404c64:	mul	x11, x12, x11
  404c68:	add	x9, x9, x11
  404c6c:	ldr	x0, [x9]
  404c70:	bl	405584 <ascii_strlower_n@plt+0x1124>
  404c74:	stur	w0, [x29, #-28]
  404c78:	ldur	w13, [x29, #-28]
  404c7c:	cmp	w13, #0x0
  404c80:	cset	w13, gt
  404c84:	tbnz	w13, #0, 404c94 <ascii_strlower_n@plt+0x834>
  404c88:	ldur	w8, [x29, #-28]
  404c8c:	stur	w8, [x29, #-4]
  404c90:	b	4050dc <ascii_strlower_n@plt+0xc7c>
  404c94:	ldr	x8, [sp, #104]
  404c98:	ldr	w9, [x8]
  404c9c:	add	w9, w9, #0x1
  404ca0:	str	w9, [x8]
  404ca4:	ldr	x10, [sp, #112]
  404ca8:	ldr	w9, [x10]
  404cac:	cmp	w9, #0xa
  404cb0:	b.ne	4050d4 <ascii_strlower_n@plt+0xc74>  // b.any
  404cb4:	stur	wzr, [x29, #-144]
  404cb8:	sub	x2, x29, #0x98
  404cbc:	mov	x8, xzr
  404cc0:	stur	x8, [x29, #-152]
  404cc4:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  404cc8:	add	x8, x8, #0x1c0
  404ccc:	ldr	x0, [x8]
  404cd0:	mov	x1, #0x100000              	// #1048576
  404cd4:	bl	4051d4 <ascii_strlower_n@plt+0xd74>
  404cd8:	stur	w0, [x29, #-28]
  404cdc:	ldur	w9, [x29, #-28]
  404ce0:	cmp	w9, #0x0
  404ce4:	cset	w9, ge  // ge = tcont
  404ce8:	tbnz	w9, #0, 404d78 <ascii_strlower_n@plt+0x918>
  404cec:	mov	w8, #0x3                   	// #3
  404cf0:	stur	w8, [x29, #-172]
  404cf4:	ldur	w8, [x29, #-28]
  404cf8:	stur	w8, [x29, #-176]
  404cfc:	stur	wzr, [x29, #-180]
  404d00:	ldur	w0, [x29, #-180]
  404d04:	bl	403a10 <log_get_max_level_realm@plt>
  404d08:	ldur	w8, [x29, #-172]
  404d0c:	and	w8, w8, #0x7
  404d10:	cmp	w0, w8
  404d14:	b.lt	404d48 <ascii_strlower_n@plt+0x8e8>  // b.tstop
  404d18:	ldur	w8, [x29, #-180]
  404d1c:	ldur	w9, [x29, #-172]
  404d20:	orr	w0, w9, w8, lsl #10
  404d24:	ldur	w1, [x29, #-176]
  404d28:	ldr	x2, [sp, #96]
  404d2c:	mov	w3, #0xe6                  	// #230
  404d30:	ldr	x4, [sp, #88]
  404d34:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404d38:	add	x5, x5, #0x1f9
  404d3c:	bl	403a20 <log_internal_realm@plt>
  404d40:	str	w0, [sp, #40]
  404d44:	b	404d5c <ascii_strlower_n@plt+0x8fc>
  404d48:	ldur	w0, [x29, #-176]
  404d4c:	bl	403a30 <abs@plt>
  404d50:	mov	w8, wzr
  404d54:	subs	w8, w8, w0, uxtb
  404d58:	str	w8, [sp, #40]
  404d5c:	ldr	w8, [sp, #40]
  404d60:	str	w8, [sp, #184]
  404d64:	ldr	w8, [sp, #184]
  404d68:	stur	w8, [x29, #-4]
  404d6c:	mov	w8, #0x1                   	// #1
  404d70:	str	w8, [sp, #180]
  404d74:	b	404f2c <ascii_strlower_n@plt+0xacc>
  404d78:	ldur	w8, [x29, #-28]
  404d7c:	cbnz	w8, 404d8c <ascii_strlower_n@plt+0x92c>
  404d80:	mov	w8, #0x9                   	// #9
  404d84:	str	w8, [sp, #180]
  404d88:	b	404f2c <ascii_strlower_n@plt+0xacc>
  404d8c:	ldur	w8, [x29, #-144]
  404d90:	add	w8, w8, #0x1
  404d94:	stur	w8, [x29, #-144]
  404d98:	ldur	x0, [x29, #-152]
  404d9c:	bl	403a50 <strstrip@plt>
  404da0:	stur	x0, [x29, #-168]
  404da4:	mov	w8, #0x0                   	// #0
  404da8:	strb	w8, [sp, #179]
  404dac:	ldur	x9, [x29, #-168]
  404db0:	ldrb	w8, [x9]
  404db4:	str	w8, [sp, #36]
  404db8:	cbz	w8, 404de8 <ascii_strlower_n@plt+0x988>
  404dbc:	b	404dc0 <ascii_strlower_n@plt+0x960>
  404dc0:	ldr	w8, [sp, #36]
  404dc4:	cmp	w8, #0x23
  404dc8:	b.eq	404de8 <ascii_strlower_n@plt+0x988>  // b.none
  404dcc:	b	404dd0 <ascii_strlower_n@plt+0x970>
  404dd0:	ldr	w8, [sp, #36]
  404dd4:	cmp	w8, #0x3b
  404dd8:	cset	w9, eq  // eq = none
  404ddc:	eor	w9, w9, #0x1
  404de0:	tbnz	w9, #0, 404df4 <ascii_strlower_n@plt+0x994>
  404de4:	b	404de8 <ascii_strlower_n@plt+0x988>
  404de8:	mov	w8, #0x1                   	// #1
  404dec:	strb	w8, [sp, #179]
  404df0:	b	404df4 <ascii_strlower_n@plt+0x994>
  404df4:	ldrb	w8, [sp, #179]
  404df8:	and	w8, w8, #0x1
  404dfc:	strb	w8, [sp, #178]
  404e00:	ldrb	w8, [sp, #178]
  404e04:	tbnz	w8, #0, 404e0c <ascii_strlower_n@plt+0x9ac>
  404e08:	b	404e18 <ascii_strlower_n@plt+0x9b8>
  404e0c:	mov	w8, #0xa                   	// #10
  404e10:	str	w8, [sp, #180]
  404e14:	b	404f2c <ascii_strlower_n@plt+0xacc>
  404e18:	ldur	x0, [x29, #-168]
  404e1c:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404e20:	add	x1, x1, #0x217
  404e24:	bl	403a60 <first_word@plt>
  404e28:	stur	x0, [x29, #-160]
  404e2c:	ldur	x8, [x29, #-160]
  404e30:	cbz	x8, 404e48 <ascii_strlower_n@plt+0x9e8>
  404e34:	ldur	x0, [x29, #-160]
  404e38:	bl	405210 <ascii_strlower_n@plt+0xdb0>
  404e3c:	mov	w8, #0xa                   	// #10
  404e40:	str	w8, [sp, #180]
  404e44:	b	404f2c <ascii_strlower_n@plt+0xacc>
  404e48:	ldur	x0, [x29, #-168]
  404e4c:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404e50:	add	x1, x1, #0x222
  404e54:	bl	403a60 <first_word@plt>
  404e58:	stur	x0, [x29, #-160]
  404e5c:	ldur	x8, [x29, #-160]
  404e60:	cbnz	x8, 404e78 <ascii_strlower_n@plt+0xa18>
  404e64:	ldur	x0, [x29, #-168]
  404e68:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404e6c:	add	x1, x1, #0x229
  404e70:	bl	403a60 <first_word@plt>
  404e74:	stur	x0, [x29, #-160]
  404e78:	ldur	x8, [x29, #-160]
  404e7c:	cbz	x8, 404e94 <ascii_strlower_n@plt+0xa34>
  404e80:	ldur	x0, [x29, #-160]
  404e84:	bl	405374 <ascii_strlower_n@plt+0xf14>
  404e88:	mov	w8, #0xa                   	// #10
  404e8c:	str	w8, [sp, #180]
  404e90:	b	404f2c <ascii_strlower_n@plt+0xacc>
  404e94:	mov	w8, #0x7                   	// #7
  404e98:	str	w8, [sp, #172]
  404e9c:	mov	w8, wzr
  404ea0:	str	wzr, [sp, #168]
  404ea4:	mov	w0, w8
  404ea8:	bl	403a10 <log_get_max_level_realm@plt>
  404eac:	ldr	w8, [sp, #172]
  404eb0:	and	w8, w8, #0x7
  404eb4:	cmp	w0, w8
  404eb8:	b.lt	404f0c <ascii_strlower_n@plt+0xaac>  // b.tstop
  404ebc:	ldr	w1, [sp, #172]
  404ec0:	ldur	w3, [x29, #-144]
  404ec4:	ldr	w4, [sp, #168]
  404ec8:	ldur	x8, [x29, #-168]
  404ecc:	mov	x9, xzr
  404ed0:	mov	x0, x9
  404ed4:	adrp	x2, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404ed8:	add	x2, x2, #0x230
  404edc:	ldr	x5, [sp, #96]
  404ee0:	mov	w6, #0xfe                  	// #254
  404ee4:	ldr	x7, [sp, #88]
  404ee8:	mov	x9, sp
  404eec:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404ef0:	add	x10, x10, #0x236
  404ef4:	str	x10, [x9]
  404ef8:	mov	x9, sp
  404efc:	str	x8, [x9, #8]
  404f00:	bl	403a70 <log_syntax_internal@plt>
  404f04:	str	w0, [sp, #32]
  404f08:	b	404f20 <ascii_strlower_n@plt+0xac0>
  404f0c:	ldr	w0, [sp, #168]
  404f10:	bl	403a30 <abs@plt>
  404f14:	mov	w8, wzr
  404f18:	subs	w8, w8, w0, uxtb
  404f1c:	str	w8, [sp, #32]
  404f20:	ldr	w8, [sp, #32]
  404f24:	str	w8, [sp, #164]
  404f28:	str	wzr, [sp, #180]
  404f2c:	sub	x0, x29, #0x98
  404f30:	bl	4051ac <ascii_strlower_n@plt+0xd4c>
  404f34:	ldr	w8, [sp, #180]
  404f38:	subs	w8, w8, #0x0
  404f3c:	mov	w9, w8
  404f40:	ubfx	x9, x9, #0, #32
  404f44:	str	x9, [sp, #24]
  404f48:	adrp	x8, 42c000 <ascii_strlower_n@plt+0x27ba0>
  404f4c:	add	x8, x8, #0xbe0
  404f50:	ldr	x11, [sp, #24]
  404f54:	ldrsw	x10, [x8, x11, lsl #2]
  404f58:	add	x9, x8, x10
  404f5c:	br	x9
  404f60:	b	404cb8 <ascii_strlower_n@plt+0x858>
  404f64:	ldur	w8, [x29, #-20]
  404f68:	cmp	w8, #0x2
  404f6c:	b.ne	404fbc <ascii_strlower_n@plt+0xb5c>  // b.any
  404f70:	adrp	x0, 450000 <ascii_strlower_n@plt+0x4bba0>
  404f74:	add	x0, x0, #0x158
  404f78:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  404f7c:	add	x1, x1, #0x254
  404f80:	bl	403a80 <strv_extend@plt>
  404f84:	stur	w0, [x29, #-28]
  404f88:	ldur	w8, [x29, #-28]
  404f8c:	cmp	w8, #0x0
  404f90:	cset	w8, ge  // ge = tcont
  404f94:	tbnz	w8, #0, 404fb8 <ascii_strlower_n@plt+0xb58>
  404f98:	mov	w8, wzr
  404f9c:	mov	w0, w8
  404fa0:	ldr	x1, [sp, #96]
  404fa4:	mov	w2, #0x108                 	// #264
  404fa8:	ldr	x3, [sp, #88]
  404fac:	bl	403a90 <log_oom_internal@plt>
  404fb0:	stur	w0, [x29, #-4]
  404fb4:	b	4050dc <ascii_strlower_n@plt+0xc7c>
  404fb8:	b	40503c <ascii_strlower_n@plt+0xbdc>
  404fbc:	ldur	w8, [x29, #-20]
  404fc0:	cmp	w8, #0x1
  404fc4:	b.ne	40503c <ascii_strlower_n@plt+0xbdc>  // b.any
  404fc8:	mov	w8, #0x7                   	// #7
  404fcc:	str	w8, [sp, #160]
  404fd0:	str	wzr, [sp, #156]
  404fd4:	str	wzr, [sp, #152]
  404fd8:	ldr	w0, [sp, #152]
  404fdc:	bl	403a10 <log_get_max_level_realm@plt>
  404fe0:	ldr	w8, [sp, #160]
  404fe4:	and	w8, w8, #0x7
  404fe8:	cmp	w0, w8
  404fec:	b.lt	405020 <ascii_strlower_n@plt+0xbc0>  // b.tstop
  404ff0:	ldr	w8, [sp, #152]
  404ff4:	ldr	w9, [sp, #160]
  404ff8:	orr	w0, w9, w8, lsl #10
  404ffc:	ldr	w1, [sp, #156]
  405000:	ldr	x2, [sp, #96]
  405004:	mov	w3, #0x10b                 	// #267
  405008:	ldr	x4, [sp, #88]
  40500c:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405010:	add	x5, x5, #0x257
  405014:	bl	403a20 <log_internal_realm@plt>
  405018:	str	w0, [sp, #20]
  40501c:	b	405034 <ascii_strlower_n@plt+0xbd4>
  405020:	ldr	w0, [sp, #156]
  405024:	bl	403a30 <abs@plt>
  405028:	mov	w8, wzr
  40502c:	subs	w8, w8, w0, uxtb
  405030:	str	w8, [sp, #20]
  405034:	ldr	w8, [sp, #20]
  405038:	str	w8, [sp, #148]
  40503c:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  405040:	add	x8, x8, #0x150
  405044:	ldr	x8, [x8]
  405048:	cbnz	x8, 4050d4 <ascii_strlower_n@plt+0xc74>
  40504c:	mov	w8, #0x3                   	// #3
  405050:	str	w8, [sp, #144]
  405054:	mov	w8, #0x16                  	// #22
  405058:	movk	w8, #0x4000, lsl #16
  40505c:	str	w8, [sp, #140]
  405060:	str	wzr, [sp, #136]
  405064:	ldr	w0, [sp, #136]
  405068:	bl	403a10 <log_get_max_level_realm@plt>
  40506c:	ldr	w8, [sp, #144]
  405070:	and	w8, w8, #0x7
  405074:	cmp	w0, w8
  405078:	b.lt	4050ac <ascii_strlower_n@plt+0xc4c>  // b.tstop
  40507c:	ldr	w8, [sp, #136]
  405080:	ldr	w9, [sp, #144]
  405084:	orr	w0, w9, w8, lsl #10
  405088:	ldr	w1, [sp, #140]
  40508c:	ldr	x2, [sp, #96]
  405090:	mov	w3, #0x10f                 	// #271
  405094:	ldr	x4, [sp, #88]
  405098:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40509c:	add	x5, x5, #0x288
  4050a0:	bl	403a20 <log_internal_realm@plt>
  4050a4:	str	w0, [sp, #16]
  4050a8:	b	4050c0 <ascii_strlower_n@plt+0xc60>
  4050ac:	ldr	w0, [sp, #140]
  4050b0:	bl	403a30 <abs@plt>
  4050b4:	mov	w8, wzr
  4050b8:	subs	w8, w8, w0, uxtb
  4050bc:	str	w8, [sp, #16]
  4050c0:	ldr	w8, [sp, #16]
  4050c4:	str	w8, [sp, #132]
  4050c8:	ldr	w8, [sp, #132]
  4050cc:	stur	w8, [x29, #-4]
  4050d0:	b	4050dc <ascii_strlower_n@plt+0xc7c>
  4050d4:	mov	w8, #0x1                   	// #1
  4050d8:	stur	w8, [x29, #-4]
  4050dc:	ldur	w0, [x29, #-4]
  4050e0:	ldr	x28, [sp, #384]
  4050e4:	ldp	x29, x30, [sp, #368]
  4050e8:	add	sp, sp, #0x190
  4050ec:	ret
  4050f0:	sub	sp, sp, #0x30
  4050f4:	stp	x29, x30, [sp, #32]
  4050f8:	add	x29, sp, #0x20
  4050fc:	mov	x8, xzr
  405100:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405104:	add	x0, x0, #0x2b6
  405108:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40510c:	add	x1, x1, #0x2c1
  405110:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405114:	add	x9, x9, #0x5a
  405118:	add	x9, x9, #0x3
  40511c:	add	x2, sp, #0x10
  405120:	str	x8, [sp, #16]
  405124:	str	x9, [sp]
  405128:	bl	403aa0 <terminal_urlify_man@plt>
  40512c:	str	w0, [sp, #12]
  405130:	ldr	w10, [sp, #12]
  405134:	cmp	w10, #0x0
  405138:	cset	w10, ge  // ge = tcont
  40513c:	tbnz	w10, #0, 40516c <ascii_strlower_n@plt+0xd0c>
  405140:	mov	w8, wzr
  405144:	mov	w0, w8
  405148:	ldr	x1, [sp]
  40514c:	mov	w2, #0x1a                  	// #26
  405150:	adrp	x3, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405154:	add	x3, x3, #0x2c3
  405158:	bl	403a90 <log_oom_internal@plt>
  40515c:	stur	w0, [x29, #-4]
  405160:	mov	w8, #0x1                   	// #1
  405164:	str	w8, [sp, #8]
  405168:	b	405194 <ascii_strlower_n@plt+0xd34>
  40516c:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  405170:	add	x8, x8, #0x1c8
  405174:	ldr	x1, [x8]
  405178:	ldr	x2, [sp, #16]
  40517c:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405180:	add	x0, x0, #0x2d3
  405184:	bl	403ab0 <printf@plt>
  405188:	stur	wzr, [x29, #-4]
  40518c:	mov	w9, #0x1                   	// #1
  405190:	str	w9, [sp, #8]
  405194:	add	x0, sp, #0x10
  405198:	bl	4051ac <ascii_strlower_n@plt+0xd4c>
  40519c:	ldur	w0, [x29, #-4]
  4051a0:	ldp	x29, x30, [sp, #32]
  4051a4:	add	sp, sp, #0x30
  4051a8:	ret
  4051ac:	sub	sp, sp, #0x20
  4051b0:	stp	x29, x30, [sp, #16]
  4051b4:	add	x29, sp, #0x10
  4051b8:	str	x0, [sp, #8]
  4051bc:	ldr	x8, [sp, #8]
  4051c0:	ldr	x0, [x8]
  4051c4:	bl	403ac0 <free@plt>
  4051c8:	ldp	x29, x30, [sp, #16]
  4051cc:	add	sp, sp, #0x20
  4051d0:	ret
  4051d4:	sub	sp, sp, #0x30
  4051d8:	stp	x29, x30, [sp, #32]
  4051dc:	add	x29, sp, #0x20
  4051e0:	mov	w8, wzr
  4051e4:	stur	x0, [x29, #-8]
  4051e8:	str	x1, [sp, #16]
  4051ec:	str	x2, [sp, #8]
  4051f0:	ldur	x0, [x29, #-8]
  4051f4:	ldr	x1, [sp, #16]
  4051f8:	ldr	x3, [sp, #8]
  4051fc:	mov	w2, w8
  405200:	bl	403ad0 <read_line_full@plt>
  405204:	ldp	x29, x30, [sp, #32]
  405208:	add	sp, sp, #0x30
  40520c:	ret
  405210:	sub	sp, sp, #0x50
  405214:	stp	x29, x30, [sp, #64]
  405218:	add	x29, sp, #0x40
  40521c:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405220:	add	x8, x8, #0x5a
  405224:	add	x8, x8, #0x3
  405228:	stur	x0, [x29, #-16]
  40522c:	str	x8, [sp, #16]
  405230:	ldur	x8, [x29, #-16]
  405234:	cmp	x8, #0x0
  405238:	cset	w9, ne  // ne = any
  40523c:	mov	w10, #0x1                   	// #1
  405240:	eor	w9, w9, #0x1
  405244:	eor	w9, w9, w10
  405248:	eor	w9, w9, w10
  40524c:	and	w9, w9, #0x1
  405250:	mov	w0, w9
  405254:	sxtw	x8, w0
  405258:	cbz	x8, 405280 <ascii_strlower_n@plt+0xe20>
  40525c:	mov	w8, wzr
  405260:	mov	w0, w8
  405264:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405268:	add	x1, x1, #0x67d
  40526c:	ldr	x2, [sp, #16]
  405270:	mov	w3, #0x39                  	// #57
  405274:	adrp	x4, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405278:	add	x4, x4, #0x684
  40527c:	bl	4039d0 <log_assert_failed_realm@plt>
  405280:	add	x1, sp, #0x20
  405284:	mov	x8, xzr
  405288:	str	x8, [sp, #32]
  40528c:	sub	x0, x29, #0x10
  405290:	mov	x2, x8
  405294:	mov	w9, wzr
  405298:	mov	w3, w9
  40529c:	bl	403ae0 <extract_first_word@plt>
  4052a0:	stur	w0, [x29, #-20]
  4052a4:	ldur	w9, [x29, #-20]
  4052a8:	cmp	w9, #0x0
  4052ac:	cset	w9, ge  // ge = tcont
  4052b0:	tbnz	w9, #0, 4052c8 <ascii_strlower_n@plt+0xe68>
  4052b4:	ldur	w8, [x29, #-20]
  4052b8:	stur	w8, [x29, #-4]
  4052bc:	mov	w8, #0x1                   	// #1
  4052c0:	str	w8, [sp, #28]
  4052c4:	b	405330 <ascii_strlower_n@plt+0xed0>
  4052c8:	ldur	w8, [x29, #-20]
  4052cc:	cbnz	w8, 4052dc <ascii_strlower_n@plt+0xe7c>
  4052d0:	mov	w8, #0x4                   	// #4
  4052d4:	str	w8, [sp, #28]
  4052d8:	b	405330 <ascii_strlower_n@plt+0xed0>
  4052dc:	ldr	x1, [sp, #32]
  4052e0:	adrp	x0, 450000 <ascii_strlower_n@plt+0x4bba0>
  4052e4:	add	x0, x0, #0x150
  4052e8:	bl	403af0 <strv_push@plt>
  4052ec:	cmp	w0, #0x0
  4052f0:	cset	w8, ge  // ge = tcont
  4052f4:	tbnz	w8, #0, 405324 <ascii_strlower_n@plt+0xec4>
  4052f8:	mov	w8, wzr
  4052fc:	mov	w0, w8
  405300:	ldr	x1, [sp, #16]
  405304:	mov	w2, #0x45                  	// #69
  405308:	adrp	x3, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40530c:	add	x3, x3, #0x6a7
  405310:	bl	403a90 <log_oom_internal@plt>
  405314:	stur	w0, [x29, #-4]
  405318:	mov	w8, #0x1                   	// #1
  40531c:	str	w8, [sp, #28]
  405320:	b	405330 <ascii_strlower_n@plt+0xed0>
  405324:	mov	x8, xzr
  405328:	str	x8, [sp, #32]
  40532c:	str	wzr, [sp, #28]
  405330:	add	x0, sp, #0x20
  405334:	bl	4051ac <ascii_strlower_n@plt+0xd4c>
  405338:	ldr	w8, [sp, #28]
  40533c:	str	w8, [sp, #12]
  405340:	cbz	w8, 40535c <ascii_strlower_n@plt+0xefc>
  405344:	b	405348 <ascii_strlower_n@plt+0xee8>
  405348:	ldr	w8, [sp, #12]
  40534c:	cmp	w8, #0x1
  405350:	b.eq	405364 <ascii_strlower_n@plt+0xf04>  // b.none
  405354:	b	405358 <ascii_strlower_n@plt+0xef8>
  405358:	b	405360 <ascii_strlower_n@plt+0xf00>
  40535c:	b	405280 <ascii_strlower_n@plt+0xe20>
  405360:	stur	wzr, [x29, #-4]
  405364:	ldur	w0, [x29, #-4]
  405368:	ldp	x29, x30, [sp, #64]
  40536c:	add	sp, sp, #0x50
  405370:	ret
  405374:	sub	sp, sp, #0x50
  405378:	stp	x29, x30, [sp, #64]
  40537c:	add	x29, sp, #0x40
  405380:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405384:	add	x8, x8, #0x5a
  405388:	add	x8, x8, #0x3
  40538c:	stur	x0, [x29, #-16]
  405390:	str	x8, [sp, #16]
  405394:	ldur	x8, [x29, #-16]
  405398:	cmp	x8, #0x0
  40539c:	cset	w9, ne  // ne = any
  4053a0:	mov	w10, #0x1                   	// #1
  4053a4:	eor	w9, w9, #0x1
  4053a8:	eor	w9, w9, w10
  4053ac:	eor	w9, w9, w10
  4053b0:	and	w9, w9, #0x1
  4053b4:	mov	w0, w9
  4053b8:	sxtw	x8, w0
  4053bc:	cbz	x8, 4053e4 <ascii_strlower_n@plt+0xf84>
  4053c0:	mov	w8, wzr
  4053c4:	mov	w0, w8
  4053c8:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4053cc:	add	x1, x1, #0x67d
  4053d0:	ldr	x2, [sp, #16]
  4053d4:	mov	w3, #0x50                  	// #80
  4053d8:	adrp	x4, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4053dc:	add	x4, x4, #0x6b8
  4053e0:	bl	4039d0 <log_assert_failed_realm@plt>
  4053e4:	add	x1, sp, #0x20
  4053e8:	mov	x8, xzr
  4053ec:	str	x8, [sp, #32]
  4053f0:	sub	x0, x29, #0x10
  4053f4:	mov	x2, x8
  4053f8:	mov	w3, #0x8                   	// #8
  4053fc:	bl	403ae0 <extract_first_word@plt>
  405400:	stur	w0, [x29, #-20]
  405404:	ldur	w9, [x29, #-20]
  405408:	cmp	w9, #0x0
  40540c:	cset	w9, ge  // ge = tcont
  405410:	tbnz	w9, #0, 405428 <ascii_strlower_n@plt+0xfc8>
  405414:	ldur	w8, [x29, #-20]
  405418:	stur	w8, [x29, #-4]
  40541c:	mov	w8, #0x1                   	// #1
  405420:	str	w8, [sp, #28]
  405424:	b	405490 <ascii_strlower_n@plt+0x1030>
  405428:	ldur	w8, [x29, #-20]
  40542c:	cbnz	w8, 40543c <ascii_strlower_n@plt+0xfdc>
  405430:	mov	w8, #0x4                   	// #4
  405434:	str	w8, [sp, #28]
  405438:	b	405490 <ascii_strlower_n@plt+0x1030>
  40543c:	ldr	x1, [sp, #32]
  405440:	adrp	x0, 450000 <ascii_strlower_n@plt+0x4bba0>
  405444:	add	x0, x0, #0x158
  405448:	bl	403af0 <strv_push@plt>
  40544c:	cmp	w0, #0x0
  405450:	cset	w8, ge  // ge = tcont
  405454:	tbnz	w8, #0, 405484 <ascii_strlower_n@plt+0x1024>
  405458:	mov	w8, wzr
  40545c:	mov	w0, w8
  405460:	ldr	x1, [sp, #16]
  405464:	mov	w2, #0x5c                  	// #92
  405468:	adrp	x3, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40546c:	add	x3, x3, #0x6de
  405470:	bl	403a90 <log_oom_internal@plt>
  405474:	stur	w0, [x29, #-4]
  405478:	mov	w8, #0x1                   	// #1
  40547c:	str	w8, [sp, #28]
  405480:	b	405490 <ascii_strlower_n@plt+0x1030>
  405484:	mov	x8, xzr
  405488:	str	x8, [sp, #32]
  40548c:	str	wzr, [sp, #28]
  405490:	add	x0, sp, #0x20
  405494:	bl	4051ac <ascii_strlower_n@plt+0xd4c>
  405498:	ldr	w8, [sp, #28]
  40549c:	str	w8, [sp, #12]
  4054a0:	cbz	w8, 4054bc <ascii_strlower_n@plt+0x105c>
  4054a4:	b	4054a8 <ascii_strlower_n@plt+0x1048>
  4054a8:	ldr	w8, [sp, #12]
  4054ac:	cmp	w8, #0x1
  4054b0:	b.eq	4054c4 <ascii_strlower_n@plt+0x1064>  // b.none
  4054b4:	b	4054b8 <ascii_strlower_n@plt+0x1058>
  4054b8:	b	4054c0 <ascii_strlower_n@plt+0x1060>
  4054bc:	b	4053e4 <ascii_strlower_n@plt+0xf84>
  4054c0:	stur	wzr, [x29, #-4]
  4054c4:	ldur	w0, [x29, #-4]
  4054c8:	ldp	x29, x30, [sp, #64]
  4054cc:	add	sp, sp, #0x50
  4054d0:	ret
  4054d4:	sub	sp, sp, #0x20
  4054d8:	stp	x29, x30, [sp, #16]
  4054dc:	add	x29, sp, #0x10
  4054e0:	str	x0, [sp, #8]
  4054e4:	ldr	x8, [sp, #8]
  4054e8:	str	x8, [sp]
  4054ec:	ldr	x0, [sp]
  4054f0:	bl	405970 <ascii_strlower_n@plt+0x1510>
  4054f4:	ldp	x29, x30, [sp, #16]
  4054f8:	add	sp, sp, #0x20
  4054fc:	ret
  405500:	sub	sp, sp, #0x20
  405504:	stp	x29, x30, [sp, #16]
  405508:	add	x29, sp, #0x10
  40550c:	str	x0, [sp, #8]
  405510:	ldr	x8, [sp, #8]
  405514:	str	x8, [sp]
  405518:	ldr	x0, [sp]
  40551c:	bl	405d04 <ascii_strlower_n@plt+0x18a4>
  405520:	ldp	x29, x30, [sp, #16]
  405524:	add	sp, sp, #0x20
  405528:	ret
  40552c:	sub	sp, sp, #0x20
  405530:	stp	x29, x30, [sp, #16]
  405534:	add	x29, sp, #0x10
  405538:	str	x0, [sp, #8]
  40553c:	ldr	x8, [sp, #8]
  405540:	str	x8, [sp]
  405544:	ldr	x0, [sp]
  405548:	bl	405d04 <ascii_strlower_n@plt+0x18a4>
  40554c:	ldp	x29, x30, [sp, #16]
  405550:	add	sp, sp, #0x20
  405554:	ret
  405558:	sub	sp, sp, #0x20
  40555c:	stp	x29, x30, [sp, #16]
  405560:	add	x29, sp, #0x10
  405564:	str	x0, [sp, #8]
  405568:	ldr	x8, [sp, #8]
  40556c:	str	x8, [sp]
  405570:	ldr	x0, [sp]
  405574:	bl	405d04 <ascii_strlower_n@plt+0x18a4>
  405578:	ldp	x29, x30, [sp, #16]
  40557c:	add	sp, sp, #0x20
  405580:	ret
  405584:	sub	sp, sp, #0xb0
  405588:	stp	x29, x30, [sp, #160]
  40558c:	add	x29, sp, #0xa0
  405590:	mov	x8, xzr
  405594:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405598:	add	x9, x9, #0x6f4
  40559c:	add	x9, x9, #0x3
  4055a0:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4055a4:	add	x10, x10, #0x730
  4055a8:	adrp	x11, 450000 <ascii_strlower_n@plt+0x4bba0>
  4055ac:	add	x11, x11, #0x170
  4055b0:	stur	x0, [x29, #-16]
  4055b4:	stur	x8, [x29, #-24]
  4055b8:	str	x9, [sp, #40]
  4055bc:	str	x10, [sp, #32]
  4055c0:	str	x11, [sp, #24]
  4055c4:	ldur	x8, [x29, #-16]
  4055c8:	cmp	x8, #0x0
  4055cc:	cset	w9, ne  // ne = any
  4055d0:	mov	w10, #0x1                   	// #1
  4055d4:	eor	w9, w9, #0x1
  4055d8:	eor	w9, w9, w10
  4055dc:	eor	w9, w9, w10
  4055e0:	and	w9, w9, #0x1
  4055e4:	mov	w0, w9
  4055e8:	sxtw	x8, w0
  4055ec:	cbz	x8, 405614 <ascii_strlower_n@plt+0x11b4>
  4055f0:	mov	w8, wzr
  4055f4:	mov	w0, w8
  4055f8:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4055fc:	add	x1, x1, #0x6f2
  405600:	ldr	x2, [sp, #40]
  405604:	mov	w3, #0x55                  	// #85
  405608:	adrp	x4, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40560c:	add	x4, x4, #0x710
  405610:	bl	4039d0 <log_assert_failed_realm@plt>
  405614:	ldur	x0, [x29, #-16]
  405618:	mov	w1, #0x2e                  	// #46
  40561c:	bl	403b00 <strchr@plt>
  405620:	stur	x0, [x29, #-32]
  405624:	ldur	x8, [x29, #-32]
  405628:	cbz	x8, 4056c4 <ascii_strlower_n@plt+0x1264>
  40562c:	mov	w8, #0x7                   	// #7
  405630:	stur	w8, [x29, #-44]
  405634:	stur	wzr, [x29, #-48]
  405638:	stur	wzr, [x29, #-52]
  40563c:	ldur	w0, [x29, #-52]
  405640:	bl	403a10 <log_get_max_level_realm@plt>
  405644:	ldur	w8, [x29, #-44]
  405648:	and	w8, w8, #0x7
  40564c:	cmp	w0, w8
  405650:	b.lt	40568c <ascii_strlower_n@plt+0x122c>  // b.tstop
  405654:	ldur	w8, [x29, #-52]
  405658:	ldur	w9, [x29, #-44]
  40565c:	orr	w0, w9, w8, lsl #10
  405660:	ldur	w1, [x29, #-48]
  405664:	ldur	x10, [x29, #-32]
  405668:	add	x6, x10, #0x1
  40566c:	ldr	x2, [sp, #40]
  405670:	mov	w3, #0x59                  	// #89
  405674:	ldr	x4, [sp, #32]
  405678:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40567c:	add	x5, x5, #0x73e
  405680:	bl	403a20 <log_internal_realm@plt>
  405684:	str	w0, [sp, #20]
  405688:	b	4056a0 <ascii_strlower_n@plt+0x1240>
  40568c:	ldur	w0, [x29, #-48]
  405690:	bl	403a30 <abs@plt>
  405694:	mov	w8, wzr
  405698:	subs	w8, w8, w0, uxtb
  40569c:	str	w8, [sp, #20]
  4056a0:	ldr	w8, [sp, #20]
  4056a4:	stur	w8, [x29, #-56]
  4056a8:	ldur	x0, [x29, #-16]
  4056ac:	ldur	x9, [x29, #-32]
  4056b0:	ldur	x10, [x29, #-16]
  4056b4:	subs	x1, x9, x10
  4056b8:	bl	403b10 <strndup@plt>
  4056bc:	stur	x0, [x29, #-24]
  4056c0:	b	4056d0 <ascii_strlower_n@plt+0x1270>
  4056c4:	ldur	x0, [x29, #-16]
  4056c8:	bl	403b20 <strdup@plt>
  4056cc:	stur	x0, [x29, #-24]
  4056d0:	ldur	x8, [x29, #-24]
  4056d4:	cbnz	x8, 405700 <ascii_strlower_n@plt+0x12a0>
  4056d8:	mov	w8, wzr
  4056dc:	mov	w0, w8
  4056e0:	ldr	x1, [sp, #40]
  4056e4:	mov	w2, #0x5f                  	// #95
  4056e8:	ldr	x3, [sp, #32]
  4056ec:	bl	403a90 <log_oom_internal@plt>
  4056f0:	stur	w0, [x29, #-4]
  4056f4:	mov	w8, #0x1                   	// #1
  4056f8:	stur	w8, [x29, #-60]
  4056fc:	b	405958 <ascii_strlower_n@plt+0x14f8>
  405700:	ldur	x0, [x29, #-24]
  405704:	sub	x1, x29, #0x24
  405708:	bl	403b30 <parse_ifindex_or_ifname@plt>
  40570c:	stur	w0, [x29, #-40]
  405710:	ldur	w8, [x29, #-40]
  405714:	cmp	w8, #0x0
  405718:	cset	w8, ge  // ge = tcont
  40571c:	tbnz	w8, #0, 40585c <ascii_strlower_n@plt+0x13fc>
  405720:	ldur	w8, [x29, #-40]
  405724:	mov	w9, #0xffffffed            	// #-19
  405728:	cmp	w8, w9
  40572c:	b.ne	4057cc <ascii_strlower_n@plt+0x136c>  // b.any
  405730:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  405734:	add	x8, x8, #0x148
  405738:	ldrb	w9, [x8]
  40573c:	tbnz	w9, #0, 405744 <ascii_strlower_n@plt+0x12e4>
  405740:	b	4057cc <ascii_strlower_n@plt+0x136c>
  405744:	mov	w8, #0x7                   	// #7
  405748:	stur	w8, [x29, #-64]
  40574c:	stur	wzr, [x29, #-68]
  405750:	stur	wzr, [x29, #-72]
  405754:	ldur	w0, [x29, #-72]
  405758:	bl	403a10 <log_get_max_level_realm@plt>
  40575c:	ldur	w8, [x29, #-64]
  405760:	and	w8, w8, #0x7
  405764:	cmp	w0, w8
  405768:	b.lt	4057a0 <ascii_strlower_n@plt+0x1340>  // b.tstop
  40576c:	ldur	w8, [x29, #-72]
  405770:	ldur	w9, [x29, #-64]
  405774:	orr	w0, w9, w8, lsl #10
  405778:	ldur	w1, [x29, #-68]
  40577c:	ldur	x6, [x29, #-24]
  405780:	ldr	x2, [sp, #40]
  405784:	mov	w3, #0x64                  	// #100
  405788:	ldr	x4, [sp, #32]
  40578c:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405790:	add	x5, x5, #0x760
  405794:	bl	403a20 <log_internal_realm@plt>
  405798:	str	w0, [sp, #16]
  40579c:	b	4057b4 <ascii_strlower_n@plt+0x1354>
  4057a0:	ldur	w0, [x29, #-68]
  4057a4:	bl	403a30 <abs@plt>
  4057a8:	mov	w8, wzr
  4057ac:	subs	w8, w8, w0, uxtb
  4057b0:	str	w8, [sp, #16]
  4057b4:	ldr	w8, [sp, #16]
  4057b8:	stur	w8, [x29, #-76]
  4057bc:	stur	wzr, [x29, #-4]
  4057c0:	mov	w8, #0x1                   	// #1
  4057c4:	stur	w8, [x29, #-60]
  4057c8:	b	405958 <ascii_strlower_n@plt+0x14f8>
  4057cc:	mov	w8, #0x3                   	// #3
  4057d0:	str	w8, [sp, #80]
  4057d4:	ldur	w8, [x29, #-40]
  4057d8:	str	w8, [sp, #76]
  4057dc:	str	wzr, [sp, #72]
  4057e0:	ldr	w0, [sp, #72]
  4057e4:	bl	403a10 <log_get_max_level_realm@plt>
  4057e8:	ldr	w8, [sp, #80]
  4057ec:	and	w8, w8, #0x7
  4057f0:	cmp	w0, w8
  4057f4:	b.lt	40582c <ascii_strlower_n@plt+0x13cc>  // b.tstop
  4057f8:	ldr	w8, [sp, #72]
  4057fc:	ldr	w9, [sp, #80]
  405800:	orr	w0, w9, w8, lsl #10
  405804:	ldr	w1, [sp, #76]
  405808:	ldur	x6, [x29, #-24]
  40580c:	ldr	x2, [sp, #40]
  405810:	mov	w3, #0x68                  	// #104
  405814:	ldr	x4, [sp, #32]
  405818:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40581c:	add	x5, x5, #0x796
  405820:	bl	403a20 <log_internal_realm@plt>
  405824:	str	w0, [sp, #12]
  405828:	b	405840 <ascii_strlower_n@plt+0x13e0>
  40582c:	ldr	w0, [sp, #76]
  405830:	bl	403a30 <abs@plt>
  405834:	mov	w8, wzr
  405838:	subs	w8, w8, w0, uxtb
  40583c:	str	w8, [sp, #12]
  405840:	ldr	w8, [sp, #12]
  405844:	str	w8, [sp, #68]
  405848:	ldr	w8, [sp, #68]
  40584c:	stur	w8, [x29, #-4]
  405850:	mov	w8, #0x1                   	// #1
  405854:	stur	w8, [x29, #-60]
  405858:	b	405958 <ascii_strlower_n@plt+0x14f8>
  40585c:	ldr	x8, [sp, #24]
  405860:	ldr	w9, [x8]
  405864:	cmp	w9, #0x0
  405868:	cset	w9, le
  40586c:	tbnz	w9, #0, 405914 <ascii_strlower_n@plt+0x14b4>
  405870:	ldr	x8, [sp, #24]
  405874:	ldr	w9, [x8]
  405878:	ldur	w10, [x29, #-36]
  40587c:	cmp	w9, w10
  405880:	b.eq	405914 <ascii_strlower_n@plt+0x14b4>  // b.none
  405884:	mov	w8, #0x3                   	// #3
  405888:	str	w8, [sp, #64]
  40588c:	mov	w8, #0x16                  	// #22
  405890:	movk	w8, #0x4000, lsl #16
  405894:	str	w8, [sp, #60]
  405898:	str	wzr, [sp, #56]
  40589c:	ldr	w0, [sp, #56]
  4058a0:	bl	403a10 <log_get_max_level_realm@plt>
  4058a4:	ldr	w8, [sp, #64]
  4058a8:	and	w8, w8, #0x7
  4058ac:	cmp	w0, w8
  4058b0:	b.lt	4058e4 <ascii_strlower_n@plt+0x1484>  // b.tstop
  4058b4:	ldr	w8, [sp, #56]
  4058b8:	ldr	w9, [sp, #64]
  4058bc:	orr	w0, w9, w8, lsl #10
  4058c0:	ldr	w1, [sp, #60]
  4058c4:	ldr	x2, [sp, #40]
  4058c8:	mov	w3, #0x6c                  	// #108
  4058cc:	ldr	x4, [sp, #32]
  4058d0:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4058d4:	add	x5, x5, #0x7b1
  4058d8:	bl	403a20 <log_internal_realm@plt>
  4058dc:	str	w0, [sp, #8]
  4058e0:	b	4058f8 <ascii_strlower_n@plt+0x1498>
  4058e4:	ldr	w0, [sp, #60]
  4058e8:	bl	403a30 <abs@plt>
  4058ec:	mov	w8, wzr
  4058f0:	subs	w8, w8, w0, uxtb
  4058f4:	str	w8, [sp, #8]
  4058f8:	ldr	w8, [sp, #8]
  4058fc:	str	w8, [sp, #52]
  405900:	ldr	w8, [sp, #52]
  405904:	stur	w8, [x29, #-4]
  405908:	mov	w8, #0x1                   	// #1
  40590c:	stur	w8, [x29, #-60]
  405910:	b	405958 <ascii_strlower_n@plt+0x14f8>
  405914:	ldur	w8, [x29, #-36]
  405918:	ldr	x9, [sp, #24]
  40591c:	str	w8, [x9]
  405920:	adrp	x10, 450000 <ascii_strlower_n@plt+0x4bba0>
  405924:	add	x10, x10, #0x160
  405928:	ldr	x0, [x10]
  40592c:	str	x10, [sp]
  405930:	bl	403ac0 <free@plt>
  405934:	ldur	x9, [x29, #-24]
  405938:	ldr	x10, [sp]
  40593c:	str	x9, [x10]
  405940:	mov	x9, xzr
  405944:	stur	x9, [x29, #-24]
  405948:	str	wzr, [sp, #48]
  40594c:	mov	w8, #0x1                   	// #1
  405950:	stur	w8, [x29, #-4]
  405954:	stur	w8, [x29, #-60]
  405958:	sub	x0, x29, #0x18
  40595c:	bl	405970 <ascii_strlower_n@plt+0x1510>
  405960:	ldur	w0, [x29, #-4]
  405964:	ldp	x29, x30, [sp, #160]
  405968:	add	sp, sp, #0xb0
  40596c:	ret
  405970:	sub	sp, sp, #0x20
  405974:	stp	x29, x30, [sp, #16]
  405978:	add	x29, sp, #0x10
  40597c:	str	x0, [sp, #8]
  405980:	ldr	x8, [sp, #8]
  405984:	ldr	x0, [x8]
  405988:	bl	403ac0 <free@plt>
  40598c:	ldp	x29, x30, [sp, #16]
  405990:	add	sp, sp, #0x20
  405994:	ret
  405998:	sub	sp, sp, #0x30
  40599c:	stp	x29, x30, [sp, #32]
  4059a0:	add	x29, sp, #0x20
  4059a4:	mov	w8, wzr
  4059a8:	mov	w9, #0x1                   	// #1
  4059ac:	stur	wzr, [x29, #-4]
  4059b0:	stur	w0, [x29, #-8]
  4059b4:	str	x1, [sp, #16]
  4059b8:	ldur	w0, [x29, #-8]
  4059bc:	ldr	x1, [sp, #16]
  4059c0:	str	w8, [sp, #8]
  4059c4:	str	w9, [sp, #4]
  4059c8:	bl	405a10 <ascii_strlower_n@plt+0x15b0>
  4059cc:	ldur	w0, [x29, #-8]
  4059d0:	ldr	x1, [sp, #16]
  4059d4:	bl	405a44 <ascii_strlower_n@plt+0x15e4>
  4059d8:	str	w0, [sp, #12]
  4059dc:	bl	403b40 <ask_password_agent_close@plt>
  4059e0:	bl	403b50 <polkit_agent_close@plt>
  4059e4:	bl	403b60 <pager_close@plt>
  4059e8:	bl	403b70 <mac_selinux_finish@plt>
  4059ec:	bl	405c84 <ascii_strlower_n@plt+0x1824>
  4059f0:	ldr	w8, [sp, #12]
  4059f4:	cmp	w8, #0x0
  4059f8:	ldr	w8, [sp, #4]
  4059fc:	ldr	w9, [sp, #8]
  405a00:	csel	w0, w8, w9, lt  // lt = tstop
  405a04:	ldp	x29, x30, [sp, #32]
  405a08:	add	sp, sp, #0x30
  405a0c:	ret
  405a10:	sub	sp, sp, #0x10
  405a14:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  405a18:	add	x8, x8, #0x1d0
  405a1c:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  405a20:	add	x9, x9, #0x1d8
  405a24:	str	w0, [sp, #12]
  405a28:	str	x1, [sp]
  405a2c:	ldr	w10, [sp, #12]
  405a30:	str	w10, [x8]
  405a34:	ldr	x8, [sp]
  405a38:	str	x8, [x9]
  405a3c:	add	sp, sp, #0x10
  405a40:	ret
  405a44:	sub	sp, sp, #0x90
  405a48:	stp	x29, x30, [sp, #128]
  405a4c:	add	x29, sp, #0x80
  405a50:	mov	x8, xzr
  405a54:	mov	w9, #0x6                   	// #6
  405a58:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405a5c:	add	x10, x10, #0x7e4
  405a60:	mov	w11, wzr
  405a64:	adrp	x12, 450000 <ascii_strlower_n@plt+0x4bba0>
  405a68:	add	x12, x12, #0x1c8
  405a6c:	adrp	x13, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405a70:	add	x13, x13, #0x7e5
  405a74:	mov	w14, #0x1                   	// #1
  405a78:	adrp	x15, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405a7c:	add	x15, x15, #0x6f4
  405a80:	add	x2, x15, #0x3
  405a84:	stur	w0, [x29, #-8]
  405a88:	stur	x1, [x29, #-16]
  405a8c:	stur	x8, [x29, #-24]
  405a90:	mov	w0, w9
  405a94:	mov	x1, x10
  405a98:	str	w11, [sp, #44]
  405a9c:	str	x12, [sp, #32]
  405aa0:	str	x13, [sp, #24]
  405aa4:	str	w14, [sp, #20]
  405aa8:	str	x2, [sp, #8]
  405aac:	bl	403b80 <setlocale@plt>
  405ab0:	ldr	w9, [sp, #20]
  405ab4:	and	w11, w9, #0x1
  405ab8:	mov	w0, w11
  405abc:	bl	403b90 <log_show_color@plt>
  405ac0:	ldr	w0, [sp, #44]
  405ac4:	bl	403ba0 <log_parse_environment_realm@plt>
  405ac8:	bl	403bb0 <log_open@plt>
  405acc:	ldr	x8, [sp, #32]
  405ad0:	ldr	x10, [x8]
  405ad4:	mov	x0, x10
  405ad8:	ldr	x1, [sp, #24]
  405adc:	bl	403bc0 <strcmp@plt>
  405ae0:	cbnz	w0, 405af8 <ascii_strlower_n@plt+0x1698>
  405ae4:	ldur	w0, [x29, #-8]
  405ae8:	ldur	x1, [x29, #-16]
  405aec:	bl	404638 <ascii_strlower_n@plt+0x1d8>
  405af0:	stur	w0, [x29, #-28]
  405af4:	b	405b34 <ascii_strlower_n@plt+0x16d4>
  405af8:	ldr	x8, [sp, #32]
  405afc:	ldr	x0, [x8]
  405b00:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405b04:	add	x1, x1, #0x7f0
  405b08:	bl	403bc0 <strcmp@plt>
  405b0c:	cbnz	w0, 405b24 <ascii_strlower_n@plt+0x16c4>
  405b10:	ldur	w0, [x29, #-8]
  405b14:	ldur	x1, [x29, #-16]
  405b18:	bl	405d6c <ascii_strlower_n@plt+0x190c>
  405b1c:	stur	w0, [x29, #-28]
  405b20:	b	405b34 <ascii_strlower_n@plt+0x16d4>
  405b24:	ldur	w0, [x29, #-8]
  405b28:	ldur	x1, [x29, #-16]
  405b2c:	bl	406f70 <ascii_strlower_n@plt+0x2b10>
  405b30:	stur	w0, [x29, #-28]
  405b34:	ldur	w8, [x29, #-28]
  405b38:	cmp	w8, #0x0
  405b3c:	cset	w8, gt
  405b40:	tbnz	w8, #0, 405b58 <ascii_strlower_n@plt+0x16f8>
  405b44:	ldur	w8, [x29, #-28]
  405b48:	stur	w8, [x29, #-4]
  405b4c:	mov	w8, #0x1                   	// #1
  405b50:	stur	w8, [x29, #-32]
  405b54:	b	405c6c <ascii_strlower_n@plt+0x180c>
  405b58:	sub	x0, x29, #0x18
  405b5c:	bl	403bd0 <sd_bus_open_system@plt>
  405b60:	stur	w0, [x29, #-28]
  405b64:	ldur	w8, [x29, #-28]
  405b68:	cmp	w8, #0x0
  405b6c:	cset	w8, ge  // ge = tcont
  405b70:	tbnz	w8, #0, 405c04 <ascii_strlower_n@plt+0x17a4>
  405b74:	mov	w8, #0x3                   	// #3
  405b78:	stur	w8, [x29, #-36]
  405b7c:	ldur	w8, [x29, #-28]
  405b80:	stur	w8, [x29, #-40]
  405b84:	stur	wzr, [x29, #-44]
  405b88:	ldur	w0, [x29, #-44]
  405b8c:	bl	403a10 <log_get_max_level_realm@plt>
  405b90:	ldur	w8, [x29, #-36]
  405b94:	and	w8, w8, #0x7
  405b98:	cmp	w0, w8
  405b9c:	b.lt	405bd4 <ascii_strlower_n@plt+0x1774>  // b.tstop
  405ba0:	ldur	w8, [x29, #-44]
  405ba4:	ldur	w9, [x29, #-36]
  405ba8:	orr	w0, w9, w8, lsl #10
  405bac:	ldur	w1, [x29, #-40]
  405bb0:	ldr	x2, [sp, #8]
  405bb4:	mov	w3, #0xcb5                 	// #3253
  405bb8:	adrp	x4, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405bbc:	add	x4, x4, #0x800
  405bc0:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405bc4:	add	x5, x5, #0x804
  405bc8:	bl	403a20 <log_internal_realm@plt>
  405bcc:	str	w0, [sp, #4]
  405bd0:	b	405be8 <ascii_strlower_n@plt+0x1788>
  405bd4:	ldur	w0, [x29, #-40]
  405bd8:	bl	403a30 <abs@plt>
  405bdc:	mov	w8, wzr
  405be0:	subs	w8, w8, w0, uxtb
  405be4:	str	w8, [sp, #4]
  405be8:	ldr	w8, [sp, #4]
  405bec:	stur	w8, [x29, #-48]
  405bf0:	ldur	w8, [x29, #-48]
  405bf4:	stur	w8, [x29, #-4]
  405bf8:	mov	w8, #0x1                   	// #1
  405bfc:	stur	w8, [x29, #-32]
  405c00:	b	405c6c <ascii_strlower_n@plt+0x180c>
  405c04:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  405c08:	add	x8, x8, #0x0
  405c0c:	ldr	q0, [x8]
  405c10:	add	x0, sp, #0x30
  405c14:	str	q0, [sp, #48]
  405c18:	ldr	x8, [x8, #16]
  405c1c:	str	x8, [sp, #64]
  405c20:	ldr	x8, [sp, #32]
  405c24:	ldr	x1, [x8]
  405c28:	bl	403be0 <strv_find@plt>
  405c2c:	cbz	x0, 405c50 <ascii_strlower_n@plt+0x17f0>
  405c30:	ldur	w0, [x29, #-8]
  405c34:	ldur	x1, [x29, #-16]
  405c38:	ldur	x2, [x29, #-24]
  405c3c:	bl	407d98 <ascii_strlower_n@plt+0x3938>
  405c40:	stur	w0, [x29, #-4]
  405c44:	mov	w8, #0x1                   	// #1
  405c48:	stur	w8, [x29, #-32]
  405c4c:	b	405c6c <ascii_strlower_n@plt+0x180c>
  405c50:	ldur	w0, [x29, #-8]
  405c54:	ldur	x1, [x29, #-16]
  405c58:	ldur	x2, [x29, #-24]
  405c5c:	bl	408408 <ascii_strlower_n@plt+0x3fa8>
  405c60:	stur	w0, [x29, #-4]
  405c64:	mov	w8, #0x1                   	// #1
  405c68:	stur	w8, [x29, #-32]
  405c6c:	sub	x0, x29, #0x18
  405c70:	bl	405d38 <ascii_strlower_n@plt+0x18d8>
  405c74:	ldur	w0, [x29, #-4]
  405c78:	ldp	x29, x30, [sp, #128]
  405c7c:	add	sp, sp, #0x90
  405c80:	ret
  405c84:	sub	sp, sp, #0x20
  405c88:	stp	x29, x30, [sp, #16]
  405c8c:	add	x29, sp, #0x10
  405c90:	adrp	x8, 44f000 <ascii_strlower_n@plt+0x4aba0>
  405c94:	ldr	x8, [x8, #2648]
  405c98:	str	x8, [sp]
  405c9c:	cbnz	x8, 405ca4 <ascii_strlower_n@plt+0x1844>
  405ca0:	b	405cf8 <ascii_strlower_n@plt+0x1898>
  405ca4:	ldr	x0, [sp]
  405ca8:	mov	x1, #0x8                   	// #8
  405cac:	bl	415ea8 <ascii_strlower_n@plt+0x11a48>
  405cb0:	str	x0, [sp, #8]
  405cb4:	ldr	x8, [sp, #8]
  405cb8:	adrp	x9, 44f000 <ascii_strlower_n@plt+0x4aba0>
  405cbc:	ldr	x9, [x9, #2656]
  405cc0:	cmp	x8, x9
  405cc4:	b.cs	405cf8 <ascii_strlower_n@plt+0x1898>  // b.hs, b.nlast
  405cc8:	ldr	x8, [sp, #8]
  405ccc:	ldr	x8, [x8, #8]
  405cd0:	ldr	x9, [sp, #8]
  405cd4:	ldr	x0, [x9]
  405cd8:	blr	x8
  405cdc:	ldr	x8, [sp, #8]
  405ce0:	add	x8, x8, #0x10
  405ce4:	mov	x0, x8
  405ce8:	mov	x1, #0x8                   	// #8
  405cec:	bl	415ea8 <ascii_strlower_n@plt+0x11a48>
  405cf0:	str	x0, [sp, #8]
  405cf4:	b	405cb4 <ascii_strlower_n@plt+0x1854>
  405cf8:	ldp	x29, x30, [sp, #16]
  405cfc:	add	sp, sp, #0x20
  405d00:	ret
  405d04:	sub	sp, sp, #0x20
  405d08:	stp	x29, x30, [sp, #16]
  405d0c:	add	x29, sp, #0x10
  405d10:	str	x0, [sp, #8]
  405d14:	ldr	x8, [sp, #8]
  405d18:	ldr	x8, [x8]
  405d1c:	cbz	x8, 405d2c <ascii_strlower_n@plt+0x18cc>
  405d20:	ldr	x8, [sp, #8]
  405d24:	ldr	x0, [x8]
  405d28:	bl	403bf0 <strv_free@plt>
  405d2c:	ldp	x29, x30, [sp, #16]
  405d30:	add	sp, sp, #0x20
  405d34:	ret
  405d38:	sub	sp, sp, #0x20
  405d3c:	stp	x29, x30, [sp, #16]
  405d40:	add	x29, sp, #0x10
  405d44:	str	x0, [sp, #8]
  405d48:	ldr	x8, [sp, #8]
  405d4c:	ldr	x8, [x8]
  405d50:	cbz	x8, 405d60 <ascii_strlower_n@plt+0x1900>
  405d54:	ldr	x8, [sp, #8]
  405d58:	ldr	x0, [x8]
  405d5c:	bl	403c00 <sd_bus_flush_close_unref@plt>
  405d60:	ldp	x29, x30, [sp, #16]
  405d64:	add	sp, sp, #0x20
  405d68:	ret
  405d6c:	sub	sp, sp, #0x1e0
  405d70:	stp	x29, x30, [sp, #448]
  405d74:	str	x28, [sp, #464]
  405d78:	add	x29, sp, #0x1c0
  405d7c:	sub	x8, x29, #0x10
  405d80:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  405d84:	add	x9, x9, #0x178
  405d88:	adrp	x10, 450000 <ascii_strlower_n@plt+0x4bba0>
  405d8c:	add	x10, x10, #0x17a
  405d90:	adrp	x11, 450000 <ascii_strlower_n@plt+0x4bba0>
  405d94:	add	x11, x11, #0x14c
  405d98:	adrp	x12, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405d9c:	add	x12, x12, #0x6f4
  405da0:	add	x12, x12, #0x3
  405da4:	adrp	x13, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405da8:	add	x13, x13, #0x949
  405dac:	adrp	x14, 450000 <ascii_strlower_n@plt+0x4bba0>
  405db0:	add	x14, x14, #0x1e0
  405db4:	adrp	x15, 450000 <ascii_strlower_n@plt+0x4bba0>
  405db8:	add	x15, x15, #0x180
  405dbc:	adrp	x16, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405dc0:	add	x16, x16, #0x10
  405dc4:	adrp	x17, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405dc8:	add	x17, x17, #0x919
  405dcc:	stur	w0, [x29, #-8]
  405dd0:	str	x1, [x8]
  405dd4:	str	x8, [sp, #184]
  405dd8:	str	x9, [sp, #176]
  405ddc:	str	x10, [sp, #168]
  405de0:	str	x11, [sp, #160]
  405de4:	str	x12, [sp, #152]
  405de8:	str	x13, [sp, #144]
  405dec:	str	x14, [sp, #136]
  405df0:	str	x15, [sp, #128]
  405df4:	str	x16, [sp, #120]
  405df8:	str	x17, [sp, #112]
  405dfc:	ldur	w8, [x29, #-8]
  405e00:	cmp	w8, #0x0
  405e04:	cset	w8, ge  // ge = tcont
  405e08:	mov	w9, #0x1                   	// #1
  405e0c:	eor	w8, w8, #0x1
  405e10:	eor	w8, w8, w9
  405e14:	eor	w8, w8, w9
  405e18:	and	w8, w8, #0x1
  405e1c:	mov	w0, w8
  405e20:	sxtw	x10, w0
  405e24:	cbz	x10, 405e48 <ascii_strlower_n@plt+0x19e8>
  405e28:	mov	w8, wzr
  405e2c:	mov	w0, w8
  405e30:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405e34:	add	x1, x1, #0x50
  405e38:	ldr	x2, [sp, #152]
  405e3c:	mov	w3, #0xa57                 	// #2647
  405e40:	ldr	x4, [sp, #112]
  405e44:	bl	4039d0 <log_assert_failed_realm@plt>
  405e48:	ldr	x8, [sp, #184]
  405e4c:	ldr	x9, [x8]
  405e50:	cmp	x9, #0x0
  405e54:	cset	w10, ne  // ne = any
  405e58:	mov	w11, #0x1                   	// #1
  405e5c:	eor	w10, w10, #0x1
  405e60:	eor	w10, w10, w11
  405e64:	eor	w10, w10, w11
  405e68:	and	w10, w10, #0x1
  405e6c:	mov	w0, w10
  405e70:	sxtw	x9, w0
  405e74:	cbz	x9, 405e98 <ascii_strlower_n@plt+0x1a38>
  405e78:	mov	w8, wzr
  405e7c:	mov	w0, w8
  405e80:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405e84:	add	x1, x1, #0xa5
  405e88:	ldr	x2, [sp, #152]
  405e8c:	mov	w3, #0xa58                 	// #2648
  405e90:	ldr	x4, [sp, #112]
  405e94:	bl	4039d0 <log_assert_failed_realm@plt>
  405e98:	ldur	w0, [x29, #-8]
  405e9c:	ldr	x8, [sp, #184]
  405ea0:	ldr	x1, [x8]
  405ea4:	adrp	x2, 42d000 <ascii_strlower_n@plt+0x28ba0>
  405ea8:	add	x2, x2, #0x93d
  405eac:	adrp	x3, 433000 <ascii_strlower_n@plt+0x2eba0>
  405eb0:	add	x3, x3, #0xa18
  405eb4:	mov	x9, xzr
  405eb8:	mov	x4, x9
  405ebc:	bl	4039f0 <getopt_long@plt>
  405ec0:	stur	w0, [x29, #-20]
  405ec4:	cmp	w0, #0x0
  405ec8:	cset	w10, lt  // lt = tstop
  405ecc:	tbnz	w10, #0, 406cd8 <ascii_strlower_n@plt+0x2878>
  405ed0:	ldur	w8, [x29, #-20]
  405ed4:	subs	w8, w8, #0x34
  405ed8:	mov	w9, w8
  405edc:	ubfx	x9, x9, #0, #32
  405ee0:	cmp	x9, #0xe3
  405ee4:	str	x9, [sp, #104]
  405ee8:	b.hi	406cb4 <ascii_strlower_n@plt+0x2854>  // b.pmore
  405eec:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  405ef0:	add	x8, x8, #0x580
  405ef4:	ldr	x11, [sp, #104]
  405ef8:	ldrsw	x10, [x8, x11, lsl #2]
  405efc:	add	x9, x8, x10
  405f00:	br	x9
  405f04:	bl	408448 <ascii_strlower_n@plt+0x3fe8>
  405f08:	stur	w0, [x29, #-4]
  405f0c:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  405f10:	bl	403a00 <version@plt>
  405f14:	stur	w0, [x29, #-4]
  405f18:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  405f1c:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  405f20:	add	x8, x8, #0x174
  405f24:	mov	w9, #0x2                   	// #2
  405f28:	str	w9, [x8]
  405f2c:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  405f30:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  405f34:	add	x8, x8, #0x174
  405f38:	mov	w9, #0xa                   	// #10
  405f3c:	str	w9, [x8]
  405f40:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  405f44:	ldr	x8, [sp, #136]
  405f48:	ldr	x0, [x8]
  405f4c:	bl	405584 <ascii_strlower_n@plt+0x1124>
  405f50:	stur	w0, [x29, #-24]
  405f54:	ldur	w9, [x29, #-24]
  405f58:	cmp	w9, #0x0
  405f5c:	cset	w9, ge  // ge = tcont
  405f60:	tbnz	w9, #0, 405f70 <ascii_strlower_n@plt+0x1b10>
  405f64:	ldur	w8, [x29, #-24]
  405f68:	stur	w8, [x29, #-4]
  405f6c:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  405f70:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  405f74:	ldr	x8, [sp, #136]
  405f78:	ldr	x0, [x8]
  405f7c:	ldr	x1, [sp, #120]
  405f80:	bl	403bc0 <strcmp@plt>
  405f84:	cbnz	w0, 405f94 <ascii_strlower_n@plt+0x1b34>
  405f88:	bl	408528 <ascii_strlower_n@plt+0x40c8>
  405f8c:	stur	wzr, [x29, #-4]
  405f90:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  405f94:	ldr	x8, [sp, #136]
  405f98:	ldr	x0, [x8]
  405f9c:	bl	42b7bc <ascii_strlower_n@plt+0x2735c>
  405fa0:	stur	w0, [x29, #-24]
  405fa4:	ldur	w9, [x29, #-24]
  405fa8:	cmp	w9, #0x0
  405fac:	cset	w9, ge  // ge = tcont
  405fb0:	tbnz	w9, #0, 40603c <ascii_strlower_n@plt+0x1bdc>
  405fb4:	mov	w8, #0x3                   	// #3
  405fb8:	stur	w8, [x29, #-28]
  405fbc:	stur	wzr, [x29, #-32]
  405fc0:	stur	wzr, [x29, #-36]
  405fc4:	ldur	w0, [x29, #-36]
  405fc8:	bl	403a10 <log_get_max_level_realm@plt>
  405fcc:	ldur	w8, [x29, #-28]
  405fd0:	and	w8, w8, #0x7
  405fd4:	cmp	w0, w8
  405fd8:	b.lt	406014 <ascii_strlower_n@plt+0x1bb4>  // b.tstop
  405fdc:	ldur	w8, [x29, #-36]
  405fe0:	ldur	w9, [x29, #-28]
  405fe4:	orr	w0, w9, w8, lsl #10
  405fe8:	ldur	w1, [x29, #-32]
  405fec:	ldr	x10, [sp, #136]
  405ff0:	ldr	x6, [x10]
  405ff4:	ldr	x2, [sp, #152]
  405ff8:	mov	w3, #0xa79                 	// #2681
  405ffc:	ldr	x4, [sp, #144]
  406000:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406004:	add	x5, x5, #0x95b
  406008:	bl	403a20 <log_internal_realm@plt>
  40600c:	str	w0, [sp, #100]
  406010:	b	406028 <ascii_strlower_n@plt+0x1bc8>
  406014:	ldur	w0, [x29, #-32]
  406018:	bl	403a30 <abs@plt>
  40601c:	mov	w8, wzr
  406020:	subs	w8, w8, w0, uxtb
  406024:	str	w8, [sp, #100]
  406028:	ldr	w8, [sp, #100]
  40602c:	stur	w8, [x29, #-40]
  406030:	ldur	w8, [x29, #-24]
  406034:	stur	w8, [x29, #-4]
  406038:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  40603c:	ldur	w8, [x29, #-24]
  406040:	ldr	x9, [sp, #176]
  406044:	strh	w8, [x9]
  406048:	ldr	x8, [sp, #176]
  40604c:	ldrh	w9, [x8]
  406050:	ldur	w10, [x29, #-24]
  406054:	cmp	w9, w10
  406058:	cset	w9, eq  // eq = none
  40605c:	mov	w10, #0x1                   	// #1
  406060:	eor	w9, w9, #0x1
  406064:	eor	w9, w9, w10
  406068:	eor	w9, w9, w10
  40606c:	and	w9, w9, #0x1
  406070:	mov	w0, w9
  406074:	sxtw	x11, w0
  406078:	cbz	x11, 40609c <ascii_strlower_n@plt+0x1c3c>
  40607c:	mov	w8, wzr
  406080:	mov	w0, w8
  406084:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406088:	add	x1, x1, #0x97d
  40608c:	ldr	x2, [sp, #152]
  406090:	mov	w3, #0xa7d                 	// #2685
  406094:	ldr	x4, [sp, #112]
  406098:	bl	4039d0 <log_assert_failed_realm@plt>
  40609c:	mov	w8, #0x1                   	// #1
  4060a0:	ldr	x9, [sp, #160]
  4060a4:	str	w8, [x9]
  4060a8:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  4060ac:	ldr	x8, [sp, #136]
  4060b0:	ldr	x0, [x8]
  4060b4:	ldr	x1, [sp, #120]
  4060b8:	bl	403bc0 <strcmp@plt>
  4060bc:	cbnz	w0, 4060cc <ascii_strlower_n@plt+0x1c6c>
  4060c0:	bl	4085e4 <ascii_strlower_n@plt+0x4184>
  4060c4:	stur	wzr, [x29, #-4]
  4060c8:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  4060cc:	ldr	x8, [sp, #136]
  4060d0:	ldr	x0, [x8]
  4060d4:	bl	42c150 <ascii_strlower_n@plt+0x27cf0>
  4060d8:	stur	w0, [x29, #-24]
  4060dc:	ldur	w9, [x29, #-24]
  4060e0:	cmp	w9, #0x0
  4060e4:	cset	w9, ge  // ge = tcont
  4060e8:	tbnz	w9, #0, 406174 <ascii_strlower_n@plt+0x1d14>
  4060ec:	mov	w8, #0x3                   	// #3
  4060f0:	stur	w8, [x29, #-44]
  4060f4:	stur	wzr, [x29, #-48]
  4060f8:	stur	wzr, [x29, #-52]
  4060fc:	ldur	w0, [x29, #-52]
  406100:	bl	403a10 <log_get_max_level_realm@plt>
  406104:	ldur	w8, [x29, #-44]
  406108:	and	w8, w8, #0x7
  40610c:	cmp	w0, w8
  406110:	b.lt	40614c <ascii_strlower_n@plt+0x1cec>  // b.tstop
  406114:	ldur	w8, [x29, #-52]
  406118:	ldur	w9, [x29, #-44]
  40611c:	orr	w0, w9, w8, lsl #10
  406120:	ldur	w1, [x29, #-48]
  406124:	ldr	x10, [sp, #136]
  406128:	ldr	x6, [x10]
  40612c:	ldr	x2, [sp, #152]
  406130:	mov	w3, #0xa8a                 	// #2698
  406134:	ldr	x4, [sp, #144]
  406138:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40613c:	add	x5, x5, #0x991
  406140:	bl	403a20 <log_internal_realm@plt>
  406144:	str	w0, [sp, #96]
  406148:	b	406160 <ascii_strlower_n@plt+0x1d00>
  40614c:	ldur	w0, [x29, #-48]
  406150:	bl	403a30 <abs@plt>
  406154:	mov	w8, wzr
  406158:	subs	w8, w8, w0, uxtb
  40615c:	str	w8, [sp, #96]
  406160:	ldr	w8, [sp, #96]
  406164:	stur	w8, [x29, #-56]
  406168:	ldur	w8, [x29, #-24]
  40616c:	stur	w8, [x29, #-4]
  406170:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  406174:	ldur	w8, [x29, #-24]
  406178:	ldr	x9, [sp, #168]
  40617c:	strh	w8, [x9]
  406180:	ldr	x8, [sp, #168]
  406184:	ldrh	w9, [x8]
  406188:	ldur	w10, [x29, #-24]
  40618c:	cmp	w9, w10
  406190:	cset	w9, eq  // eq = none
  406194:	mov	w10, #0x1                   	// #1
  406198:	eor	w9, w9, #0x1
  40619c:	eor	w9, w9, w10
  4061a0:	eor	w9, w9, w10
  4061a4:	and	w9, w9, #0x1
  4061a8:	mov	w0, w9
  4061ac:	sxtw	x11, w0
  4061b0:	cbz	x11, 4061d4 <ascii_strlower_n@plt+0x1d74>
  4061b4:	mov	w8, wzr
  4061b8:	mov	w0, w8
  4061bc:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4061c0:	add	x1, x1, #0x9b4
  4061c4:	ldr	x2, [sp, #152]
  4061c8:	mov	w3, #0xa8e                 	// #2702
  4061cc:	ldr	x4, [sp, #112]
  4061d0:	bl	4039d0 <log_assert_failed_realm@plt>
  4061d4:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  4061d8:	ldr	x8, [sp, #136]
  4061dc:	ldr	x0, [x8]
  4061e0:	bl	403c10 <parse_boolean@plt>
  4061e4:	stur	w0, [x29, #-24]
  4061e8:	ldur	w9, [x29, #-24]
  4061ec:	cmp	w9, #0x0
  4061f0:	cset	w9, ge  // ge = tcont
  4061f4:	tbnz	w9, #0, 40627c <ascii_strlower_n@plt+0x1e1c>
  4061f8:	mov	w8, #0x3                   	// #3
  4061fc:	stur	w8, [x29, #-60]
  406200:	ldur	w8, [x29, #-24]
  406204:	stur	w8, [x29, #-64]
  406208:	stur	wzr, [x29, #-68]
  40620c:	ldur	w0, [x29, #-68]
  406210:	bl	403a10 <log_get_max_level_realm@plt>
  406214:	ldur	w8, [x29, #-60]
  406218:	and	w8, w8, #0x7
  40621c:	cmp	w0, w8
  406220:	b.lt	406254 <ascii_strlower_n@plt+0x1df4>  // b.tstop
  406224:	ldur	w8, [x29, #-68]
  406228:	ldur	w9, [x29, #-60]
  40622c:	orr	w0, w9, w8, lsl #10
  406230:	ldur	w1, [x29, #-64]
  406234:	ldr	x2, [sp, #152]
  406238:	mov	w3, #0xa95                 	// #2709
  40623c:	ldr	x4, [sp, #144]
  406240:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406244:	add	x5, x5, #0x9c9
  406248:	bl	403a20 <log_internal_realm@plt>
  40624c:	str	w0, [sp, #92]
  406250:	b	406268 <ascii_strlower_n@plt+0x1e08>
  406254:	ldur	w0, [x29, #-64]
  406258:	bl	403a30 <abs@plt>
  40625c:	mov	w8, wzr
  406260:	subs	w8, w8, w0, uxtb
  406264:	str	w8, [sp, #92]
  406268:	ldr	w8, [sp, #92]
  40626c:	stur	w8, [x29, #-72]
  406270:	ldur	w8, [x29, #-72]
  406274:	stur	w8, [x29, #-4]
  406278:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  40627c:	ldur	w8, [x29, #-24]
  406280:	cmp	w8, #0x0
  406284:	cset	w8, ne  // ne = any
  406288:	and	w8, w8, #0x1
  40628c:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  406290:	add	x9, x9, #0x18
  406294:	strb	w8, [x9]
  406298:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  40629c:	ldr	x8, [sp, #136]
  4062a0:	ldr	x0, [x8]
  4062a4:	ldr	x1, [sp, #120]
  4062a8:	bl	403bc0 <strcmp@plt>
  4062ac:	cbnz	w0, 4062bc <ascii_strlower_n@plt+0x1e5c>
  4062b0:	bl	4086a0 <ascii_strlower_n@plt+0x4240>
  4062b4:	stur	wzr, [x29, #-4]
  4062b8:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  4062bc:	ldr	x8, [sp, #136]
  4062c0:	ldr	x0, [x8]
  4062c4:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4062c8:	add	x1, x1, #0x9ec
  4062cc:	bl	403bc0 <strcmp@plt>
  4062d0:	cbnz	w0, 4062e8 <ascii_strlower_n@plt+0x1e88>
  4062d4:	ldr	x8, [sp, #128]
  4062d8:	ldr	x9, [x8]
  4062dc:	orr	x9, x9, #0x1
  4062e0:	str	x9, [x8]
  4062e4:	b	406480 <ascii_strlower_n@plt+0x2020>
  4062e8:	ldr	x8, [sp, #136]
  4062ec:	ldr	x0, [x8]
  4062f0:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4062f4:	add	x1, x1, #0x9f0
  4062f8:	bl	403bc0 <strcmp@plt>
  4062fc:	cbnz	w0, 406314 <ascii_strlower_n@plt+0x1eb4>
  406300:	ldr	x8, [sp, #128]
  406304:	ldr	x9, [x8]
  406308:	orr	x9, x9, #0x6
  40630c:	str	x9, [x8]
  406310:	b	406480 <ascii_strlower_n@plt+0x2020>
  406314:	ldr	x8, [sp, #136]
  406318:	ldr	x0, [x8]
  40631c:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406320:	add	x1, x1, #0x9f6
  406324:	bl	403bc0 <strcmp@plt>
  406328:	cbnz	w0, 406340 <ascii_strlower_n@plt+0x1ee0>
  40632c:	ldr	x8, [sp, #128]
  406330:	ldr	x9, [x8]
  406334:	orr	x9, x9, #0x2
  406338:	str	x9, [x8]
  40633c:	b	406480 <ascii_strlower_n@plt+0x2020>
  406340:	ldr	x8, [sp, #136]
  406344:	ldr	x0, [x8]
  406348:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40634c:	add	x1, x1, #0xa01
  406350:	bl	403bc0 <strcmp@plt>
  406354:	cbnz	w0, 40636c <ascii_strlower_n@plt+0x1f0c>
  406358:	ldr	x8, [sp, #128]
  40635c:	ldr	x9, [x8]
  406360:	orr	x9, x9, #0x4
  406364:	str	x9, [x8]
  406368:	b	406480 <ascii_strlower_n@plt+0x2020>
  40636c:	ldr	x8, [sp, #136]
  406370:	ldr	x0, [x8]
  406374:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406378:	add	x1, x1, #0xa0c
  40637c:	bl	403bc0 <strcmp@plt>
  406380:	cbnz	w0, 406398 <ascii_strlower_n@plt+0x1f38>
  406384:	ldr	x8, [sp, #128]
  406388:	ldr	x9, [x8]
  40638c:	orr	x9, x9, #0x18
  406390:	str	x9, [x8]
  406394:	b	406480 <ascii_strlower_n@plt+0x2020>
  406398:	ldr	x8, [sp, #136]
  40639c:	ldr	x0, [x8]
  4063a0:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4063a4:	add	x1, x1, #0xa11
  4063a8:	bl	403bc0 <strcmp@plt>
  4063ac:	cbnz	w0, 4063c4 <ascii_strlower_n@plt+0x1f64>
  4063b0:	ldr	x8, [sp, #128]
  4063b4:	ldr	x9, [x8]
  4063b8:	orr	x9, x9, #0x8
  4063bc:	str	x9, [x8]
  4063c0:	b	406480 <ascii_strlower_n@plt+0x2020>
  4063c4:	ldr	x8, [sp, #136]
  4063c8:	ldr	x0, [x8]
  4063cc:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4063d0:	add	x1, x1, #0xa1b
  4063d4:	bl	403bc0 <strcmp@plt>
  4063d8:	cbnz	w0, 4063f0 <ascii_strlower_n@plt+0x1f90>
  4063dc:	ldr	x8, [sp, #128]
  4063e0:	ldr	x9, [x8]
  4063e4:	orr	x9, x9, #0x10
  4063e8:	str	x9, [x8]
  4063ec:	b	406480 <ascii_strlower_n@plt+0x2020>
  4063f0:	mov	w8, #0x3                   	// #3
  4063f4:	stur	w8, [x29, #-76]
  4063f8:	mov	w8, #0x16                  	// #22
  4063fc:	movk	w8, #0x4000, lsl #16
  406400:	stur	w8, [x29, #-80]
  406404:	stur	wzr, [x29, #-84]
  406408:	ldur	w0, [x29, #-84]
  40640c:	bl	403a10 <log_get_max_level_realm@plt>
  406410:	ldur	w8, [x29, #-76]
  406414:	and	w8, w8, #0x7
  406418:	cmp	w0, w8
  40641c:	b.lt	406458 <ascii_strlower_n@plt+0x1ff8>  // b.tstop
  406420:	ldur	w8, [x29, #-84]
  406424:	ldur	w9, [x29, #-76]
  406428:	orr	w0, w9, w8, lsl #10
  40642c:	ldur	w1, [x29, #-80]
  406430:	ldr	x10, [sp, #136]
  406434:	ldr	x6, [x10]
  406438:	ldr	x2, [sp, #152]
  40643c:	mov	w3, #0xaae                 	// #2734
  406440:	ldr	x4, [sp, #144]
  406444:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406448:	add	x5, x5, #0xa25
  40644c:	bl	403a20 <log_internal_realm@plt>
  406450:	str	w0, [sp, #88]
  406454:	b	40646c <ascii_strlower_n@plt+0x200c>
  406458:	ldur	w0, [x29, #-80]
  40645c:	bl	403a30 <abs@plt>
  406460:	mov	w8, wzr
  406464:	subs	w8, w8, w0, uxtb
  406468:	str	w8, [sp, #88]
  40646c:	ldr	w8, [sp, #88]
  406470:	stur	w8, [x29, #-88]
  406474:	ldur	w8, [x29, #-88]
  406478:	stur	w8, [x29, #-4]
  40647c:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  406480:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406484:	mov	w8, #0x2                   	// #2
  406488:	ldr	x9, [sp, #160]
  40648c:	str	w8, [x9]
  406490:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406494:	mov	w8, #0x3                   	// #3
  406498:	ldr	x9, [sp, #160]
  40649c:	str	w8, [x9]
  4064a0:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  4064a4:	mov	w8, #0x4                   	// #4
  4064a8:	ldr	x9, [sp, #160]
  4064ac:	str	w8, [x9]
  4064b0:	ldr	x10, [sp, #136]
  4064b4:	ldr	x11, [x10]
  4064b8:	cbz	x11, 4064d0 <ascii_strlower_n@plt+0x2070>
  4064bc:	ldr	x8, [sp, #136]
  4064c0:	ldr	x0, [x8]
  4064c4:	bl	4086dc <ascii_strlower_n@plt+0x427c>
  4064c8:	tbnz	w0, #0, 4064d0 <ascii_strlower_n@plt+0x2070>
  4064cc:	b	4064e8 <ascii_strlower_n@plt+0x2088>
  4064d0:	ldr	x8, [sp, #136]
  4064d4:	ldr	x9, [x8]
  4064d8:	adrp	x10, 450000 <ascii_strlower_n@plt+0x4bba0>
  4064dc:	add	x10, x10, #0x188
  4064e0:	str	x9, [x10]
  4064e4:	b	406578 <ascii_strlower_n@plt+0x2118>
  4064e8:	mov	w8, #0x3                   	// #3
  4064ec:	stur	w8, [x29, #-92]
  4064f0:	mov	w8, #0x16                  	// #22
  4064f4:	movk	w8, #0x4000, lsl #16
  4064f8:	stur	w8, [x29, #-96]
  4064fc:	stur	wzr, [x29, #-100]
  406500:	ldur	w0, [x29, #-100]
  406504:	bl	403a10 <log_get_max_level_realm@plt>
  406508:	ldur	w8, [x29, #-92]
  40650c:	and	w8, w8, #0x7
  406510:	cmp	w0, w8
  406514:	b.lt	406550 <ascii_strlower_n@plt+0x20f0>  // b.tstop
  406518:	ldur	w8, [x29, #-100]
  40651c:	ldur	w9, [x29, #-92]
  406520:	orr	w0, w9, w8, lsl #10
  406524:	ldur	w1, [x29, #-96]
  406528:	ldr	x10, [sp, #136]
  40652c:	ldr	x6, [x10]
  406530:	ldr	x2, [sp, #152]
  406534:	mov	w3, #0xac0                 	// #2752
  406538:	ldr	x4, [sp, #144]
  40653c:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406540:	add	x5, x5, #0xa44
  406544:	bl	403a20 <log_internal_realm@plt>
  406548:	str	w0, [sp, #84]
  40654c:	b	406564 <ascii_strlower_n@plt+0x2104>
  406550:	ldur	w0, [x29, #-96]
  406554:	bl	403a30 <abs@plt>
  406558:	mov	w8, wzr
  40655c:	subs	w8, w8, w0, uxtb
  406560:	str	w8, [sp, #84]
  406564:	ldr	w8, [sp, #84]
  406568:	stur	w8, [x29, #-104]
  40656c:	ldur	w8, [x29, #-104]
  406570:	stur	w8, [x29, #-4]
  406574:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  406578:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  40657c:	bl	403c20 <on_tty@plt>
  406580:	tbnz	w0, #0, 406588 <ascii_strlower_n@plt+0x2128>
  406584:	b	406610 <ascii_strlower_n@plt+0x21b0>
  406588:	mov	w8, #0x3                   	// #3
  40658c:	stur	w8, [x29, #-108]
  406590:	mov	w8, #0x19                  	// #25
  406594:	movk	w8, #0x4000, lsl #16
  406598:	stur	w8, [x29, #-112]
  40659c:	stur	wzr, [x29, #-116]
  4065a0:	ldur	w0, [x29, #-116]
  4065a4:	bl	403a10 <log_get_max_level_realm@plt>
  4065a8:	ldur	w8, [x29, #-108]
  4065ac:	and	w8, w8, #0x7
  4065b0:	cmp	w0, w8
  4065b4:	b.lt	4065e8 <ascii_strlower_n@plt+0x2188>  // b.tstop
  4065b8:	ldur	w8, [x29, #-116]
  4065bc:	ldur	w9, [x29, #-108]
  4065c0:	orr	w0, w9, w8, lsl #10
  4065c4:	ldur	w1, [x29, #-112]
  4065c8:	ldr	x2, [sp, #152]
  4065cc:	mov	w3, #0xac6                 	// #2758
  4065d0:	ldr	x4, [sp, #144]
  4065d4:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4065d8:	add	x5, x5, #0xa61
  4065dc:	bl	403a20 <log_internal_realm@plt>
  4065e0:	str	w0, [sp, #80]
  4065e4:	b	4065fc <ascii_strlower_n@plt+0x219c>
  4065e8:	ldur	w0, [x29, #-112]
  4065ec:	bl	403a30 <abs@plt>
  4065f0:	mov	w8, wzr
  4065f4:	subs	w8, w8, w0, uxtb
  4065f8:	str	w8, [sp, #80]
  4065fc:	ldr	w8, [sp, #80]
  406600:	stur	w8, [x29, #-120]
  406604:	ldur	w8, [x29, #-120]
  406608:	stur	w8, [x29, #-4]
  40660c:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  406610:	ldr	x8, [sp, #136]
  406614:	ldr	x9, [x8]
  406618:	cbz	x9, 406634 <ascii_strlower_n@plt+0x21d4>
  40661c:	ldr	x8, [sp, #136]
  406620:	ldr	x0, [x8]
  406624:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406628:	add	x1, x1, #0xa87
  40662c:	bl	403bc0 <strcmp@plt>
  406630:	cbnz	w0, 406648 <ascii_strlower_n@plt+0x21e8>
  406634:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  406638:	add	x8, x8, #0x190
  40663c:	mov	w9, #0x1                   	// #1
  406640:	str	w9, [x8]
  406644:	b	406704 <ascii_strlower_n@plt+0x22a4>
  406648:	ldr	x8, [sp, #136]
  40664c:	ldr	x0, [x8]
  406650:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406654:	add	x1, x1, #0xa8f
  406658:	bl	403bc0 <strcmp@plt>
  40665c:	cbnz	w0, 406674 <ascii_strlower_n@plt+0x2214>
  406660:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  406664:	add	x8, x8, #0x190
  406668:	mov	w9, #0x2                   	// #2
  40666c:	str	w9, [x8]
  406670:	b	406704 <ascii_strlower_n@plt+0x22a4>
  406674:	mov	w8, #0x3                   	// #3
  406678:	stur	w8, [x29, #-124]
  40667c:	mov	w8, #0x16                  	// #22
  406680:	movk	w8, #0x4000, lsl #16
  406684:	stur	w8, [x29, #-128]
  406688:	stur	wzr, [x29, #-132]
  40668c:	ldur	w0, [x29, #-132]
  406690:	bl	403a10 <log_get_max_level_realm@plt>
  406694:	ldur	w8, [x29, #-124]
  406698:	and	w8, w8, #0x7
  40669c:	cmp	w0, w8
  4066a0:	b.lt	4066dc <ascii_strlower_n@plt+0x227c>  // b.tstop
  4066a4:	ldur	w8, [x29, #-132]
  4066a8:	ldur	w9, [x29, #-124]
  4066ac:	orr	w0, w9, w8, lsl #10
  4066b0:	ldur	w1, [x29, #-128]
  4066b4:	ldr	x10, [sp, #136]
  4066b8:	ldr	x6, [x10]
  4066bc:	ldr	x2, [sp, #152]
  4066c0:	mov	w3, #0xacf                 	// #2767
  4066c4:	ldr	x4, [sp, #144]
  4066c8:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4066cc:	add	x5, x5, #0xa96
  4066d0:	bl	403a20 <log_internal_realm@plt>
  4066d4:	str	w0, [sp, #76]
  4066d8:	b	4066f0 <ascii_strlower_n@plt+0x2290>
  4066dc:	ldur	w0, [x29, #-128]
  4066e0:	bl	403a30 <abs@plt>
  4066e4:	mov	w8, wzr
  4066e8:	subs	w8, w8, w0, uxtb
  4066ec:	str	w8, [sp, #76]
  4066f0:	ldr	w8, [sp, #76]
  4066f4:	stur	w8, [x29, #-136]
  4066f8:	ldur	w8, [x29, #-136]
  4066fc:	stur	w8, [x29, #-4]
  406700:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  406704:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  406708:	add	x8, x8, #0x18
  40670c:	mov	w9, #0x0                   	// #0
  406710:	strb	w9, [x8]
  406714:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406718:	ldr	x8, [sp, #136]
  40671c:	ldr	x0, [x8]
  406720:	bl	403c10 <parse_boolean@plt>
  406724:	stur	w0, [x29, #-24]
  406728:	ldur	w9, [x29, #-24]
  40672c:	cmp	w9, #0x0
  406730:	cset	w9, ge  // ge = tcont
  406734:	tbnz	w9, #0, 4067bc <ascii_strlower_n@plt+0x235c>
  406738:	mov	w8, #0x3                   	// #3
  40673c:	stur	w8, [x29, #-140]
  406740:	ldur	w8, [x29, #-24]
  406744:	stur	w8, [x29, #-144]
  406748:	stur	wzr, [x29, #-148]
  40674c:	ldur	w0, [x29, #-148]
  406750:	bl	403a10 <log_get_max_level_realm@plt>
  406754:	ldur	w8, [x29, #-140]
  406758:	and	w8, w8, #0x7
  40675c:	cmp	w0, w8
  406760:	b.lt	406794 <ascii_strlower_n@plt+0x2334>  // b.tstop
  406764:	ldur	w8, [x29, #-148]
  406768:	ldur	w9, [x29, #-140]
  40676c:	orr	w0, w9, w8, lsl #10
  406770:	ldur	w1, [x29, #-144]
  406774:	ldr	x2, [sp, #152]
  406778:	mov	w3, #0xad7                 	// #2775
  40677c:	ldr	x4, [sp, #144]
  406780:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406784:	add	x5, x5, #0xab4
  406788:	bl	403a20 <log_internal_realm@plt>
  40678c:	str	w0, [sp, #72]
  406790:	b	4067a8 <ascii_strlower_n@plt+0x2348>
  406794:	ldur	w0, [x29, #-144]
  406798:	bl	403a30 <abs@plt>
  40679c:	mov	w8, wzr
  4067a0:	subs	w8, w8, w0, uxtb
  4067a4:	str	w8, [sp, #72]
  4067a8:	ldr	w8, [sp, #72]
  4067ac:	stur	w8, [x29, #-152]
  4067b0:	ldur	w8, [x29, #-152]
  4067b4:	stur	w8, [x29, #-4]
  4067b8:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  4067bc:	ldur	w8, [x29, #-24]
  4067c0:	cbnz	w8, 4067d8 <ascii_strlower_n@plt+0x2378>
  4067c4:	ldr	x8, [sp, #128]
  4067c8:	ldr	x9, [x8]
  4067cc:	orr	x9, x9, #0x20
  4067d0:	str	x9, [sp, #64]
  4067d4:	b	4067e8 <ascii_strlower_n@plt+0x2388>
  4067d8:	ldr	x8, [sp, #128]
  4067dc:	ldr	x9, [x8]
  4067e0:	and	x9, x9, #0xffffffffffffffdf
  4067e4:	str	x9, [sp, #64]
  4067e8:	ldr	x8, [sp, #64]
  4067ec:	ldr	x9, [sp, #128]
  4067f0:	str	x8, [x9]
  4067f4:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  4067f8:	ldr	x8, [sp, #136]
  4067fc:	ldr	x0, [x8]
  406800:	bl	403c10 <parse_boolean@plt>
  406804:	stur	w0, [x29, #-24]
  406808:	ldur	w9, [x29, #-24]
  40680c:	cmp	w9, #0x0
  406810:	cset	w9, ge  // ge = tcont
  406814:	tbnz	w9, #0, 40689c <ascii_strlower_n@plt+0x243c>
  406818:	mov	w8, #0x3                   	// #3
  40681c:	stur	w8, [x29, #-156]
  406820:	ldur	w8, [x29, #-24]
  406824:	stur	w8, [x29, #-160]
  406828:	stur	wzr, [x29, #-164]
  40682c:	ldur	w0, [x29, #-164]
  406830:	bl	403a10 <log_get_max_level_realm@plt>
  406834:	ldur	w8, [x29, #-156]
  406838:	and	w8, w8, #0x7
  40683c:	cmp	w0, w8
  406840:	b.lt	406874 <ascii_strlower_n@plt+0x2414>  // b.tstop
  406844:	ldur	w8, [x29, #-164]
  406848:	ldur	w9, [x29, #-156]
  40684c:	orr	w0, w9, w8, lsl #10
  406850:	ldur	w1, [x29, #-160]
  406854:	ldr	x2, [sp, #152]
  406858:	mov	w3, #0xade                 	// #2782
  40685c:	ldr	x4, [sp, #144]
  406860:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406864:	add	x5, x5, #0xad7
  406868:	bl	403a20 <log_internal_realm@plt>
  40686c:	str	w0, [sp, #60]
  406870:	b	406888 <ascii_strlower_n@plt+0x2428>
  406874:	ldur	w0, [x29, #-160]
  406878:	bl	403a30 <abs@plt>
  40687c:	mov	w8, wzr
  406880:	subs	w8, w8, w0, uxtb
  406884:	str	w8, [sp, #60]
  406888:	ldr	w8, [sp, #60]
  40688c:	stur	w8, [x29, #-168]
  406890:	ldur	w8, [x29, #-168]
  406894:	stur	w8, [x29, #-4]
  406898:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  40689c:	ldur	w8, [x29, #-24]
  4068a0:	cbnz	w8, 4068b8 <ascii_strlower_n@plt+0x2458>
  4068a4:	ldr	x8, [sp, #128]
  4068a8:	ldr	x9, [x8]
  4068ac:	orr	x9, x9, #0x80
  4068b0:	str	x9, [sp, #48]
  4068b4:	b	4068c8 <ascii_strlower_n@plt+0x2468>
  4068b8:	ldr	x8, [sp, #128]
  4068bc:	ldr	x9, [x8]
  4068c0:	and	x9, x9, #0xffffffffffffff7f
  4068c4:	str	x9, [sp, #48]
  4068c8:	ldr	x8, [sp, #48]
  4068cc:	ldr	x9, [sp, #128]
  4068d0:	str	x8, [x9]
  4068d4:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  4068d8:	ldr	x8, [sp, #136]
  4068dc:	ldr	x0, [x8]
  4068e0:	bl	403c10 <parse_boolean@plt>
  4068e4:	stur	w0, [x29, #-24]
  4068e8:	ldur	w9, [x29, #-24]
  4068ec:	cmp	w9, #0x0
  4068f0:	cset	w9, ge  // ge = tcont
  4068f4:	tbnz	w9, #0, 40697c <ascii_strlower_n@plt+0x251c>
  4068f8:	mov	w8, #0x3                   	// #3
  4068fc:	stur	w8, [x29, #-172]
  406900:	ldur	w8, [x29, #-24]
  406904:	stur	w8, [x29, #-176]
  406908:	stur	wzr, [x29, #-180]
  40690c:	ldur	w0, [x29, #-180]
  406910:	bl	403a10 <log_get_max_level_realm@plt>
  406914:	ldur	w8, [x29, #-172]
  406918:	and	w8, w8, #0x7
  40691c:	cmp	w0, w8
  406920:	b.lt	406954 <ascii_strlower_n@plt+0x24f4>  // b.tstop
  406924:	ldur	w8, [x29, #-180]
  406928:	ldur	w9, [x29, #-172]
  40692c:	orr	w0, w9, w8, lsl #10
  406930:	ldur	w1, [x29, #-176]
  406934:	ldr	x2, [sp, #152]
  406938:	mov	w3, #0xae5                 	// #2789
  40693c:	ldr	x4, [sp, #144]
  406940:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406944:	add	x5, x5, #0xb04
  406948:	bl	403a20 <log_internal_realm@plt>
  40694c:	str	w0, [sp, #44]
  406950:	b	406968 <ascii_strlower_n@plt+0x2508>
  406954:	ldur	w0, [x29, #-176]
  406958:	bl	403a30 <abs@plt>
  40695c:	mov	w8, wzr
  406960:	subs	w8, w8, w0, uxtb
  406964:	str	w8, [sp, #44]
  406968:	ldr	w8, [sp, #44]
  40696c:	stur	w8, [x29, #-184]
  406970:	ldur	w8, [x29, #-184]
  406974:	stur	w8, [x29, #-4]
  406978:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  40697c:	ldur	w8, [x29, #-24]
  406980:	cbnz	w8, 406998 <ascii_strlower_n@plt+0x2538>
  406984:	ldr	x8, [sp, #128]
  406988:	ldr	x9, [x8]
  40698c:	orr	x9, x9, #0x40
  406990:	str	x9, [sp, #32]
  406994:	b	4069a8 <ascii_strlower_n@plt+0x2548>
  406998:	ldr	x8, [sp, #128]
  40699c:	ldr	x9, [x8]
  4069a0:	and	x9, x9, #0xffffffffffffffbf
  4069a4:	str	x9, [sp, #32]
  4069a8:	ldr	x8, [sp, #32]
  4069ac:	ldr	x9, [sp, #128]
  4069b0:	str	x8, [x9]
  4069b4:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  4069b8:	ldr	x8, [sp, #136]
  4069bc:	ldr	x0, [x8]
  4069c0:	bl	403c10 <parse_boolean@plt>
  4069c4:	stur	w0, [x29, #-24]
  4069c8:	ldur	w9, [x29, #-24]
  4069cc:	cmp	w9, #0x0
  4069d0:	cset	w9, ge  // ge = tcont
  4069d4:	tbnz	w9, #0, 406a5c <ascii_strlower_n@plt+0x25fc>
  4069d8:	mov	w8, #0x3                   	// #3
  4069dc:	stur	w8, [x29, #-188]
  4069e0:	ldur	w8, [x29, #-24]
  4069e4:	stur	w8, [x29, #-192]
  4069e8:	stur	wzr, [x29, #-196]
  4069ec:	ldur	w0, [x29, #-196]
  4069f0:	bl	403a10 <log_get_max_level_realm@plt>
  4069f4:	ldur	w8, [x29, #-188]
  4069f8:	and	w8, w8, #0x7
  4069fc:	cmp	w0, w8
  406a00:	b.lt	406a34 <ascii_strlower_n@plt+0x25d4>  // b.tstop
  406a04:	ldur	w8, [x29, #-196]
  406a08:	ldur	w9, [x29, #-188]
  406a0c:	orr	w0, w9, w8, lsl #10
  406a10:	ldur	w1, [x29, #-192]
  406a14:	ldr	x2, [sp, #152]
  406a18:	mov	w3, #0xaec                 	// #2796
  406a1c:	ldr	x4, [sp, #144]
  406a20:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406a24:	add	x5, x5, #0xb2d
  406a28:	bl	403a20 <log_internal_realm@plt>
  406a2c:	str	w0, [sp, #28]
  406a30:	b	406a48 <ascii_strlower_n@plt+0x25e8>
  406a34:	ldur	w0, [x29, #-192]
  406a38:	bl	403a30 <abs@plt>
  406a3c:	mov	w8, wzr
  406a40:	subs	w8, w8, w0, uxtb
  406a44:	str	w8, [sp, #28]
  406a48:	ldr	w8, [sp, #28]
  406a4c:	stur	w8, [x29, #-200]
  406a50:	ldur	w8, [x29, #-200]
  406a54:	stur	w8, [x29, #-4]
  406a58:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  406a5c:	ldur	w8, [x29, #-24]
  406a60:	cbnz	w8, 406a78 <ascii_strlower_n@plt+0x2618>
  406a64:	ldr	x8, [sp, #128]
  406a68:	ldr	x9, [x8]
  406a6c:	orr	x9, x9, #0x100
  406a70:	str	x9, [sp, #16]
  406a74:	b	406a88 <ascii_strlower_n@plt+0x2628>
  406a78:	ldr	x8, [sp, #128]
  406a7c:	ldr	x9, [x8]
  406a80:	and	x9, x9, #0xfffffffffffffeff
  406a84:	str	x9, [sp, #16]
  406a88:	ldr	x8, [sp, #16]
  406a8c:	ldr	x9, [sp, #128]
  406a90:	str	x8, [x9]
  406a94:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406a98:	mov	w8, #0x5                   	// #5
  406a9c:	ldr	x9, [sp, #160]
  406aa0:	str	w8, [x9]
  406aa4:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406aa8:	mov	w8, #0x6                   	// #6
  406aac:	ldr	x9, [sp, #160]
  406ab0:	str	w8, [x9]
  406ab4:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406ab8:	mov	w8, #0x7                   	// #7
  406abc:	ldr	x9, [sp, #160]
  406ac0:	str	w8, [x9]
  406ac4:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406ac8:	mov	w8, #0x8                   	// #8
  406acc:	ldr	x9, [sp, #160]
  406ad0:	str	w8, [x9]
  406ad4:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406ad8:	mov	w8, #0x9                   	// #9
  406adc:	ldr	x9, [sp, #160]
  406ae0:	str	w8, [x9]
  406ae4:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406ae8:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  406aec:	add	x8, x8, #0x194
  406af0:	ldr	w9, [x8]
  406af4:	orr	w9, w9, #0x1
  406af8:	str	w9, [x8]
  406afc:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406b00:	ldr	x8, [sp, #136]
  406b04:	ldr	x1, [x8]
  406b08:	adrp	x0, 450000 <ascii_strlower_n@plt+0x4bba0>
  406b0c:	add	x0, x0, #0x150
  406b10:	bl	403a80 <strv_extend@plt>
  406b14:	stur	w0, [x29, #-24]
  406b18:	ldur	w9, [x29, #-24]
  406b1c:	cmp	w9, #0x0
  406b20:	cset	w9, ge  // ge = tcont
  406b24:	tbnz	w9, #0, 406b48 <ascii_strlower_n@plt+0x26e8>
  406b28:	mov	w8, wzr
  406b2c:	mov	w0, w8
  406b30:	ldr	x1, [sp, #152]
  406b34:	mov	w2, #0xb0b                 	// #2827
  406b38:	ldr	x3, [sp, #144]
  406b3c:	bl	403a90 <log_oom_internal@plt>
  406b40:	stur	w0, [x29, #-4]
  406b44:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  406b48:	mov	w8, #0xa                   	// #10
  406b4c:	ldr	x9, [sp, #160]
  406b50:	str	w8, [x9]
  406b54:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406b58:	ldr	x8, [sp, #136]
  406b5c:	ldr	x1, [x8]
  406b60:	adrp	x0, 450000 <ascii_strlower_n@plt+0x4bba0>
  406b64:	add	x0, x0, #0x158
  406b68:	bl	403a80 <strv_extend@plt>
  406b6c:	stur	w0, [x29, #-24]
  406b70:	ldur	w9, [x29, #-24]
  406b74:	cmp	w9, #0x0
  406b78:	cset	w9, ge  // ge = tcont
  406b7c:	tbnz	w9, #0, 406ba0 <ascii_strlower_n@plt+0x2740>
  406b80:	mov	w8, wzr
  406b84:	mov	w0, w8
  406b88:	ldr	x1, [sp, #152]
  406b8c:	mov	w2, #0xb13                 	// #2835
  406b90:	ldr	x3, [sp, #144]
  406b94:	bl	403a90 <log_oom_internal@plt>
  406b98:	stur	w0, [x29, #-4]
  406b9c:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  406ba0:	mov	w8, #0xa                   	// #10
  406ba4:	ldr	x9, [sp, #160]
  406ba8:	str	w8, [x9]
  406bac:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406bb0:	ldr	x8, [sp, #136]
  406bb4:	ldr	x9, [x8]
  406bb8:	adrp	x10, 450000 <ascii_strlower_n@plt+0x4bba0>
  406bbc:	add	x10, x10, #0x198
  406bc0:	str	x9, [x10]
  406bc4:	mov	w11, #0xa                   	// #10
  406bc8:	ldr	x9, [sp, #160]
  406bcc:	str	w11, [x9]
  406bd0:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406bd4:	ldr	x8, [sp, #136]
  406bd8:	ldr	x9, [x8]
  406bdc:	adrp	x10, 450000 <ascii_strlower_n@plt+0x4bba0>
  406be0:	add	x10, x10, #0x1a0
  406be4:	str	x9, [x10]
  406be8:	mov	w11, #0xa                   	// #10
  406bec:	ldr	x9, [sp, #160]
  406bf0:	str	w11, [x9]
  406bf4:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406bf8:	ldr	x8, [sp, #136]
  406bfc:	ldr	x9, [x8]
  406c00:	adrp	x10, 450000 <ascii_strlower_n@plt+0x4bba0>
  406c04:	add	x10, x10, #0x1a8
  406c08:	str	x9, [x10]
  406c0c:	mov	w11, #0xa                   	// #10
  406c10:	ldr	x9, [sp, #160]
  406c14:	str	w11, [x9]
  406c18:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406c1c:	ldr	x8, [sp, #136]
  406c20:	ldr	x9, [x8]
  406c24:	adrp	x10, 450000 <ascii_strlower_n@plt+0x4bba0>
  406c28:	add	x10, x10, #0x1b0
  406c2c:	str	x9, [x10]
  406c30:	mov	w11, #0xa                   	// #10
  406c34:	ldr	x9, [sp, #160]
  406c38:	str	w11, [x9]
  406c3c:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406c40:	ldr	x8, [sp, #136]
  406c44:	ldr	x1, [x8]
  406c48:	adrp	x0, 450000 <ascii_strlower_n@plt+0x4bba0>
  406c4c:	add	x0, x0, #0x168
  406c50:	bl	403a80 <strv_extend@plt>
  406c54:	stur	w0, [x29, #-24]
  406c58:	ldur	w9, [x29, #-24]
  406c5c:	cmp	w9, #0x0
  406c60:	cset	w9, ge  // ge = tcont
  406c64:	tbnz	w9, #0, 406c88 <ascii_strlower_n@plt+0x2828>
  406c68:	mov	w8, wzr
  406c6c:	mov	w0, w8
  406c70:	ldr	x1, [sp, #152]
  406c74:	mov	w2, #0xb2f                 	// #2863
  406c78:	ldr	x3, [sp, #144]
  406c7c:	bl	403a90 <log_oom_internal@plt>
  406c80:	stur	w0, [x29, #-4]
  406c84:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  406c88:	mov	w8, #0xa                   	// #10
  406c8c:	ldr	x9, [sp, #160]
  406c90:	str	w8, [x9]
  406c94:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406c98:	mov	w8, #0xb                   	// #11
  406c9c:	ldr	x9, [sp, #160]
  406ca0:	str	w8, [x9]
  406ca4:	b	406cd4 <ascii_strlower_n@plt+0x2874>
  406ca8:	mov	w8, #0xffffffea            	// #-22
  406cac:	stur	w8, [x29, #-4]
  406cb0:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  406cb4:	mov	w8, wzr
  406cb8:	mov	w0, w8
  406cbc:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406cc0:	add	x1, x1, #0x195
  406cc4:	ldr	x2, [sp, #152]
  406cc8:	mov	w3, #0xb3c                 	// #2876
  406ccc:	ldr	x4, [sp, #112]
  406cd0:	bl	403a40 <log_assert_failed_unreachable_realm@plt>
  406cd4:	b	405e98 <ascii_strlower_n@plt+0x1a38>
  406cd8:	ldr	x8, [sp, #176]
  406cdc:	ldrh	w9, [x8]
  406ce0:	cbnz	w9, 406d78 <ascii_strlower_n@plt+0x2918>
  406ce4:	ldr	x8, [sp, #168]
  406ce8:	ldrh	w9, [x8]
  406cec:	cbz	w9, 406d78 <ascii_strlower_n@plt+0x2918>
  406cf0:	mov	w8, #0x3                   	// #3
  406cf4:	stur	w8, [x29, #-204]
  406cf8:	mov	w8, #0x16                  	// #22
  406cfc:	movk	w8, #0x4000, lsl #16
  406d00:	stur	w8, [x29, #-208]
  406d04:	stur	wzr, [x29, #-212]
  406d08:	ldur	w0, [x29, #-212]
  406d0c:	bl	403a10 <log_get_max_level_realm@plt>
  406d10:	ldur	w8, [x29, #-204]
  406d14:	and	w8, w8, #0x7
  406d18:	cmp	w0, w8
  406d1c:	b.lt	406d50 <ascii_strlower_n@plt+0x28f0>  // b.tstop
  406d20:	ldur	w8, [x29, #-212]
  406d24:	ldur	w9, [x29, #-204]
  406d28:	orr	w0, w9, w8, lsl #10
  406d2c:	ldur	w1, [x29, #-208]
  406d30:	ldr	x2, [sp, #152]
  406d34:	mov	w3, #0xb41                 	// #2881
  406d38:	ldr	x4, [sp, #144]
  406d3c:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406d40:	add	x5, x5, #0xb50
  406d44:	bl	403a20 <log_internal_realm@plt>
  406d48:	str	w0, [sp, #12]
  406d4c:	b	406d64 <ascii_strlower_n@plt+0x2904>
  406d50:	ldur	w0, [x29, #-208]
  406d54:	bl	403a30 <abs@plt>
  406d58:	mov	w8, wzr
  406d5c:	subs	w8, w8, w0, uxtb
  406d60:	str	w8, [sp, #12]
  406d64:	ldr	w8, [sp, #12]
  406d68:	stur	w8, [x29, #-216]
  406d6c:	ldur	w8, [x29, #-216]
  406d70:	stur	w8, [x29, #-4]
  406d74:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  406d78:	ldr	x8, [sp, #176]
  406d7c:	ldrh	w9, [x8]
  406d80:	cbz	w9, 406e1c <ascii_strlower_n@plt+0x29bc>
  406d84:	ldr	x8, [sp, #160]
  406d88:	ldr	w9, [x8]
  406d8c:	cmp	w9, #0x2
  406d90:	b.ne	406e1c <ascii_strlower_n@plt+0x29bc>  // b.any
  406d94:	mov	w8, #0x3                   	// #3
  406d98:	stur	w8, [x29, #-220]
  406d9c:	mov	w8, #0x16                  	// #22
  406da0:	movk	w8, #0x4000, lsl #16
  406da4:	str	w8, [sp, #224]
  406da8:	str	wzr, [sp, #220]
  406dac:	ldr	w0, [sp, #220]
  406db0:	bl	403a10 <log_get_max_level_realm@plt>
  406db4:	ldur	w8, [x29, #-220]
  406db8:	and	w8, w8, #0x7
  406dbc:	cmp	w0, w8
  406dc0:	b.lt	406df4 <ascii_strlower_n@plt+0x2994>  // b.tstop
  406dc4:	ldr	w8, [sp, #220]
  406dc8:	ldur	w9, [x29, #-220]
  406dcc:	orr	w0, w9, w8, lsl #10
  406dd0:	ldr	w1, [sp, #224]
  406dd4:	ldr	x2, [sp, #152]
  406dd8:	mov	w3, #0xb45                 	// #2885
  406ddc:	ldr	x4, [sp, #144]
  406de0:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406de4:	add	x5, x5, #0xb87
  406de8:	bl	403a20 <log_internal_realm@plt>
  406dec:	str	w0, [sp, #8]
  406df0:	b	406e08 <ascii_strlower_n@plt+0x29a8>
  406df4:	ldr	w0, [sp, #224]
  406df8:	bl	403a30 <abs@plt>
  406dfc:	mov	w8, wzr
  406e00:	subs	w8, w8, w0, uxtb
  406e04:	str	w8, [sp, #8]
  406e08:	ldr	w8, [sp, #8]
  406e0c:	str	w8, [sp, #216]
  406e10:	ldr	w8, [sp, #216]
  406e14:	stur	w8, [x29, #-4]
  406e18:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  406e1c:	ldr	x8, [sp, #176]
  406e20:	ldrh	w9, [x8]
  406e24:	cbz	w9, 406e40 <ascii_strlower_n@plt+0x29e0>
  406e28:	ldr	x8, [sp, #168]
  406e2c:	ldrh	w9, [x8]
  406e30:	cbnz	w9, 406e40 <ascii_strlower_n@plt+0x29e0>
  406e34:	mov	w8, #0x1                   	// #1
  406e38:	ldr	x9, [sp, #168]
  406e3c:	strh	w8, [x9]
  406e40:	ldr	x8, [sp, #168]
  406e44:	ldrh	w9, [x8]
  406e48:	cbz	w9, 406e64 <ascii_strlower_n@plt+0x2a04>
  406e4c:	ldr	x8, [sp, #176]
  406e50:	ldrh	w9, [x8]
  406e54:	cbnz	w9, 406e64 <ascii_strlower_n@plt+0x2a04>
  406e58:	mov	w8, #0x1                   	// #1
  406e5c:	ldr	x9, [sp, #176]
  406e60:	strh	w8, [x9]
  406e64:	mov	w8, #0x0                   	// #0
  406e68:	strb	w8, [sp, #215]
  406e6c:	ldr	x9, [sp, #160]
  406e70:	ldr	w8, [x9]
  406e74:	subs	w8, w8, #0xa
  406e78:	mov	w10, #0x1                   	// #1
  406e7c:	cmp	w8, #0x1
  406e80:	cset	w8, ls  // ls = plast
  406e84:	eor	w8, w8, w10
  406e88:	tbnz	w8, #0, 406e9c <ascii_strlower_n@plt+0x2a3c>
  406e8c:	b	406e90 <ascii_strlower_n@plt+0x2a30>
  406e90:	mov	w8, #0x1                   	// #1
  406e94:	strb	w8, [sp, #215]
  406e98:	b	406e9c <ascii_strlower_n@plt+0x2a3c>
  406e9c:	ldrb	w8, [sp, #215]
  406ea0:	and	w8, w8, #0x1
  406ea4:	strb	w8, [sp, #214]
  406ea8:	ldrb	w8, [sp, #214]
  406eac:	tbnz	w8, #0, 406eb4 <ascii_strlower_n@plt+0x2a54>
  406eb0:	b	406f54 <ascii_strlower_n@plt+0x2af4>
  406eb4:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  406eb8:	add	x8, x8, #0x170
  406ebc:	ldr	w9, [x8]
  406ec0:	cmp	w9, #0x0
  406ec4:	cset	w9, gt
  406ec8:	tbnz	w9, #0, 406f54 <ascii_strlower_n@plt+0x2af4>
  406ecc:	mov	w8, #0x3                   	// #3
  406ed0:	str	w8, [sp, #208]
  406ed4:	mov	w8, #0x16                  	// #22
  406ed8:	movk	w8, #0x4000, lsl #16
  406edc:	str	w8, [sp, #204]
  406ee0:	str	wzr, [sp, #200]
  406ee4:	ldr	w0, [sp, #200]
  406ee8:	bl	403a10 <log_get_max_level_realm@plt>
  406eec:	ldr	w8, [sp, #208]
  406ef0:	and	w8, w8, #0x7
  406ef4:	cmp	w0, w8
  406ef8:	b.lt	406f2c <ascii_strlower_n@plt+0x2acc>  // b.tstop
  406efc:	ldr	w8, [sp, #200]
  406f00:	ldr	w9, [sp, #208]
  406f04:	orr	w0, w9, w8, lsl #10
  406f08:	ldr	w1, [sp, #204]
  406f0c:	ldr	x2, [sp, #152]
  406f10:	mov	w3, #0xb51                 	// #2897
  406f14:	ldr	x4, [sp, #144]
  406f18:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406f1c:	add	x5, x5, #0xbb2
  406f20:	bl	403a20 <log_internal_realm@plt>
  406f24:	str	w0, [sp, #4]
  406f28:	b	406f40 <ascii_strlower_n@plt+0x2ae0>
  406f2c:	ldr	w0, [sp, #204]
  406f30:	bl	403a30 <abs@plt>
  406f34:	mov	w8, wzr
  406f38:	subs	w8, w8, w0, uxtb
  406f3c:	str	w8, [sp, #4]
  406f40:	ldr	w8, [sp, #4]
  406f44:	str	w8, [sp, #196]
  406f48:	ldr	w8, [sp, #196]
  406f4c:	stur	w8, [x29, #-4]
  406f50:	b	406f5c <ascii_strlower_n@plt+0x2afc>
  406f54:	mov	w8, #0x1                   	// #1
  406f58:	stur	w8, [x29, #-4]
  406f5c:	ldur	w0, [x29, #-4]
  406f60:	ldr	x28, [sp, #464]
  406f64:	ldp	x29, x30, [sp, #448]
  406f68:	add	sp, sp, #0x1e0
  406f6c:	ret
  406f70:	sub	sp, sp, #0x190
  406f74:	stp	x29, x30, [sp, #368]
  406f78:	str	x28, [sp, #384]
  406f7c:	add	x29, sp, #0x170
  406f80:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  406f84:	add	x8, x8, #0x178
  406f88:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  406f8c:	add	x9, x9, #0x17a
  406f90:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406f94:	add	x10, x10, #0x6f4
  406f98:	add	x10, x10, #0x3
  406f9c:	adrp	x11, 42e000 <ascii_strlower_n@plt+0x29ba0>
  406fa0:	add	x11, x11, #0x5a1
  406fa4:	adrp	x12, 450000 <ascii_strlower_n@plt+0x4bba0>
  406fa8:	add	x12, x12, #0x1e0
  406fac:	adrp	x13, 450000 <ascii_strlower_n@plt+0x4bba0>
  406fb0:	add	x13, x13, #0x180
  406fb4:	adrp	x14, 42d000 <ascii_strlower_n@plt+0x28ba0>
  406fb8:	add	x14, x14, #0x10
  406fbc:	adrp	x15, 42e000 <ascii_strlower_n@plt+0x29ba0>
  406fc0:	add	x15, x15, #0x57d
  406fc4:	stur	w0, [x29, #-8]
  406fc8:	stur	x1, [x29, #-16]
  406fcc:	str	x8, [sp, #160]
  406fd0:	str	x9, [sp, #152]
  406fd4:	str	x10, [sp, #144]
  406fd8:	str	x11, [sp, #136]
  406fdc:	str	x12, [sp, #128]
  406fe0:	str	x13, [sp, #120]
  406fe4:	str	x14, [sp, #112]
  406fe8:	str	x15, [sp, #104]
  406fec:	ldur	w8, [x29, #-8]
  406ff0:	cmp	w8, #0x0
  406ff4:	cset	w8, ge  // ge = tcont
  406ff8:	mov	w9, #0x1                   	// #1
  406ffc:	eor	w8, w8, #0x1
  407000:	eor	w8, w8, w9
  407004:	eor	w8, w8, w9
  407008:	and	w8, w8, #0x1
  40700c:	mov	w0, w8
  407010:	sxtw	x10, w0
  407014:	cbz	x10, 407038 <ascii_strlower_n@plt+0x2bd8>
  407018:	mov	w8, wzr
  40701c:	mov	w0, w8
  407020:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407024:	add	x1, x1, #0x50
  407028:	ldr	x2, [sp, #144]
  40702c:	mov	w3, #0xb76                 	// #2934
  407030:	ldr	x4, [sp, #104]
  407034:	bl	4039d0 <log_assert_failed_realm@plt>
  407038:	ldur	x8, [x29, #-16]
  40703c:	cmp	x8, #0x0
  407040:	cset	w9, ne  // ne = any
  407044:	mov	w10, #0x1                   	// #1
  407048:	eor	w9, w9, #0x1
  40704c:	eor	w9, w9, w10
  407050:	eor	w9, w9, w10
  407054:	and	w9, w9, #0x1
  407058:	mov	w0, w9
  40705c:	sxtw	x8, w0
  407060:	cbz	x8, 407084 <ascii_strlower_n@plt+0x2c24>
  407064:	mov	w8, wzr
  407068:	mov	w0, w8
  40706c:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407070:	add	x1, x1, #0xa5
  407074:	ldr	x2, [sp, #144]
  407078:	mov	w3, #0xb77                 	// #2935
  40707c:	ldr	x4, [sp, #104]
  407080:	bl	4039d0 <log_assert_failed_realm@plt>
  407084:	ldur	w0, [x29, #-8]
  407088:	ldur	x1, [x29, #-16]
  40708c:	adrp	x2, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407090:	add	x2, x2, #0x93d
  407094:	adrp	x3, 433000 <ascii_strlower_n@plt+0x2eba0>
  407098:	add	x3, x3, #0xe00
  40709c:	mov	x8, xzr
  4070a0:	mov	x4, x8
  4070a4:	bl	4039f0 <getopt_long@plt>
  4070a8:	stur	w0, [x29, #-20]
  4070ac:	cmp	w0, #0x0
  4070b0:	cset	w9, lt  // lt = tstop
  4070b4:	tbnz	w9, #0, 407c94 <ascii_strlower_n@plt+0x3834>
  4070b8:	ldur	w8, [x29, #-20]
  4070bc:	cmp	w8, #0x34
  4070c0:	str	w8, [sp, #100]
  4070c4:	b.eq	4071d4 <ascii_strlower_n@plt+0x2d74>  // b.none
  4070c8:	b	4070cc <ascii_strlower_n@plt+0x2c6c>
  4070cc:	ldr	w8, [sp, #100]
  4070d0:	cmp	w8, #0x36
  4070d4:	b.eq	4071e8 <ascii_strlower_n@plt+0x2d88>  // b.none
  4070d8:	b	4070dc <ascii_strlower_n@plt+0x2c7c>
  4070dc:	ldr	w8, [sp, #100]
  4070e0:	cmp	w8, #0x3f
  4070e4:	b.eq	407c64 <ascii_strlower_n@plt+0x3804>  // b.none
  4070e8:	b	4070ec <ascii_strlower_n@plt+0x2c8c>
  4070ec:	ldr	w8, [sp, #100]
  4070f0:	cmp	w8, #0x63
  4070f4:	b.eq	407358 <ascii_strlower_n@plt+0x2ef8>  // b.none
  4070f8:	b	4070fc <ascii_strlower_n@plt+0x2c9c>
  4070fc:	ldr	w8, [sp, #100]
  407100:	cmp	w8, #0x68
  407104:	b.eq	4071bc <ascii_strlower_n@plt+0x2d5c>  // b.none
  407108:	b	40710c <ascii_strlower_n@plt+0x2cac>
  40710c:	ldr	w8, [sp, #100]
  407110:	cmp	w8, #0x69
  407114:	b.eq	4071fc <ascii_strlower_n@plt+0x2d9c>  // b.none
  407118:	b	40711c <ascii_strlower_n@plt+0x2cbc>
  40711c:	ldr	w8, [sp, #100]
  407120:	cmp	w8, #0x70
  407124:	b.eq	407548 <ascii_strlower_n@plt+0x30e8>  // b.none
  407128:	b	40712c <ascii_strlower_n@plt+0x2ccc>
  40712c:	ldr	w8, [sp, #100]
  407130:	cmp	w8, #0x74
  407134:	b.eq	40722c <ascii_strlower_n@plt+0x2dcc>  // b.none
  407138:	b	40713c <ascii_strlower_n@plt+0x2cdc>
  40713c:	ldr	w8, [sp, #100]
  407140:	cmp	w8, #0x100
  407144:	b.eq	4071c8 <ascii_strlower_n@plt+0x2d68>  // b.none
  407148:	b	40714c <ascii_strlower_n@plt+0x2cec>
  40714c:	ldr	w8, [sp, #100]
  407150:	cmp	w8, #0x101
  407154:	b.eq	407484 <ascii_strlower_n@plt+0x3024>  // b.none
  407158:	b	40715c <ascii_strlower_n@plt+0x2cfc>
  40715c:	ldr	w8, [sp, #100]
  407160:	cmp	w8, #0x102
  407164:	b.eq	4078cc <ascii_strlower_n@plt+0x346c>  // b.none
  407168:	b	40716c <ascii_strlower_n@plt+0x2d0c>
  40716c:	ldr	w8, [sp, #100]
  407170:	cmp	w8, #0x103
  407174:	b.eq	4079ac <ascii_strlower_n@plt+0x354c>  // b.none
  407178:	b	40717c <ascii_strlower_n@plt+0x2d1c>
  40717c:	ldr	w8, [sp, #100]
  407180:	cmp	w8, #0x104
  407184:	b.eq	407a8c <ascii_strlower_n@plt+0x362c>  // b.none
  407188:	b	40718c <ascii_strlower_n@plt+0x2d2c>
  40718c:	ldr	w8, [sp, #100]
  407190:	cmp	w8, #0x105
  407194:	b.eq	407730 <ascii_strlower_n@plt+0x32d0>  // b.none
  407198:	b	40719c <ascii_strlower_n@plt+0x2d3c>
  40719c:	ldr	w8, [sp, #100]
  4071a0:	cmp	w8, #0x106
  4071a4:	b.eq	407b6c <ascii_strlower_n@plt+0x370c>  // b.none
  4071a8:	b	4071ac <ascii_strlower_n@plt+0x2d4c>
  4071ac:	ldr	w8, [sp, #100]
  4071b0:	cmp	w8, #0x107
  4071b4:	b.eq	407c4c <ascii_strlower_n@plt+0x37ec>  // b.none
  4071b8:	b	407c70 <ascii_strlower_n@plt+0x3810>
  4071bc:	bl	4087c0 <ascii_strlower_n@plt+0x4360>
  4071c0:	stur	w0, [x29, #-4]
  4071c4:	b	407d84 <ascii_strlower_n@plt+0x3924>
  4071c8:	bl	403a00 <version@plt>
  4071cc:	stur	w0, [x29, #-4]
  4071d0:	b	407d84 <ascii_strlower_n@plt+0x3924>
  4071d4:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  4071d8:	add	x8, x8, #0x174
  4071dc:	mov	w9, #0x2                   	// #2
  4071e0:	str	w9, [x8]
  4071e4:	b	407c90 <ascii_strlower_n@plt+0x3830>
  4071e8:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  4071ec:	add	x8, x8, #0x174
  4071f0:	mov	w9, #0xa                   	// #10
  4071f4:	str	w9, [x8]
  4071f8:	b	407c90 <ascii_strlower_n@plt+0x3830>
  4071fc:	ldr	x8, [sp, #128]
  407200:	ldr	x0, [x8]
  407204:	bl	405584 <ascii_strlower_n@plt+0x1124>
  407208:	stur	w0, [x29, #-24]
  40720c:	ldur	w9, [x29, #-24]
  407210:	cmp	w9, #0x0
  407214:	cset	w9, ge  // ge = tcont
  407218:	tbnz	w9, #0, 407228 <ascii_strlower_n@plt+0x2dc8>
  40721c:	ldur	w8, [x29, #-24]
  407220:	stur	w8, [x29, #-4]
  407224:	b	407d84 <ascii_strlower_n@plt+0x3924>
  407228:	b	407c90 <ascii_strlower_n@plt+0x3830>
  40722c:	ldr	x8, [sp, #128]
  407230:	ldr	x0, [x8]
  407234:	ldr	x1, [sp, #112]
  407238:	bl	403bc0 <strcmp@plt>
  40723c:	cbnz	w0, 40724c <ascii_strlower_n@plt+0x2dec>
  407240:	bl	408528 <ascii_strlower_n@plt+0x40c8>
  407244:	stur	wzr, [x29, #-4]
  407248:	b	407d84 <ascii_strlower_n@plt+0x3924>
  40724c:	ldr	x8, [sp, #128]
  407250:	ldr	x0, [x8]
  407254:	bl	42b7bc <ascii_strlower_n@plt+0x2735c>
  407258:	stur	w0, [x29, #-24]
  40725c:	ldur	w9, [x29, #-24]
  407260:	cmp	w9, #0x0
  407264:	cset	w9, ge  // ge = tcont
  407268:	tbnz	w9, #0, 4072f4 <ascii_strlower_n@plt+0x2e94>
  40726c:	mov	w8, #0x3                   	// #3
  407270:	stur	w8, [x29, #-28]
  407274:	stur	wzr, [x29, #-32]
  407278:	stur	wzr, [x29, #-36]
  40727c:	ldur	w0, [x29, #-36]
  407280:	bl	403a10 <log_get_max_level_realm@plt>
  407284:	ldur	w8, [x29, #-28]
  407288:	and	w8, w8, #0x7
  40728c:	cmp	w0, w8
  407290:	b.lt	4072cc <ascii_strlower_n@plt+0x2e6c>  // b.tstop
  407294:	ldur	w8, [x29, #-36]
  407298:	ldur	w9, [x29, #-28]
  40729c:	orr	w0, w9, w8, lsl #10
  4072a0:	ldur	w1, [x29, #-32]
  4072a4:	ldr	x10, [sp, #128]
  4072a8:	ldr	x6, [x10]
  4072ac:	ldr	x2, [sp, #144]
  4072b0:	mov	w3, #0xb98                 	// #2968
  4072b4:	ldr	x4, [sp, #136]
  4072b8:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4072bc:	add	x5, x5, #0x95b
  4072c0:	bl	403a20 <log_internal_realm@plt>
  4072c4:	str	w0, [sp, #96]
  4072c8:	b	4072e0 <ascii_strlower_n@plt+0x2e80>
  4072cc:	ldur	w0, [x29, #-32]
  4072d0:	bl	403a30 <abs@plt>
  4072d4:	mov	w8, wzr
  4072d8:	subs	w8, w8, w0, uxtb
  4072dc:	str	w8, [sp, #96]
  4072e0:	ldr	w8, [sp, #96]
  4072e4:	stur	w8, [x29, #-40]
  4072e8:	ldur	w8, [x29, #-24]
  4072ec:	stur	w8, [x29, #-4]
  4072f0:	b	407d84 <ascii_strlower_n@plt+0x3924>
  4072f4:	ldur	w8, [x29, #-24]
  4072f8:	ldr	x9, [sp, #160]
  4072fc:	strh	w8, [x9]
  407300:	ldr	x8, [sp, #160]
  407304:	ldrh	w9, [x8]
  407308:	ldur	w10, [x29, #-24]
  40730c:	cmp	w9, w10
  407310:	cset	w9, eq  // eq = none
  407314:	mov	w10, #0x1                   	// #1
  407318:	eor	w9, w9, #0x1
  40731c:	eor	w9, w9, w10
  407320:	eor	w9, w9, w10
  407324:	and	w9, w9, #0x1
  407328:	mov	w0, w9
  40732c:	sxtw	x11, w0
  407330:	cbz	x11, 407354 <ascii_strlower_n@plt+0x2ef4>
  407334:	mov	w8, wzr
  407338:	mov	w0, w8
  40733c:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407340:	add	x1, x1, #0x97d
  407344:	ldr	x2, [sp, #144]
  407348:	mov	w3, #0xb9c                 	// #2972
  40734c:	ldr	x4, [sp, #104]
  407350:	bl	4039d0 <log_assert_failed_realm@plt>
  407354:	b	407c90 <ascii_strlower_n@plt+0x3830>
  407358:	ldr	x8, [sp, #128]
  40735c:	ldr	x0, [x8]
  407360:	ldr	x1, [sp, #112]
  407364:	bl	403bc0 <strcmp@plt>
  407368:	cbnz	w0, 407378 <ascii_strlower_n@plt+0x2f18>
  40736c:	bl	4085e4 <ascii_strlower_n@plt+0x4184>
  407370:	stur	wzr, [x29, #-4]
  407374:	b	407d84 <ascii_strlower_n@plt+0x3924>
  407378:	ldr	x8, [sp, #128]
  40737c:	ldr	x0, [x8]
  407380:	bl	42c150 <ascii_strlower_n@plt+0x27cf0>
  407384:	stur	w0, [x29, #-24]
  407388:	ldur	w9, [x29, #-24]
  40738c:	cmp	w9, #0x0
  407390:	cset	w9, ge  // ge = tcont
  407394:	tbnz	w9, #0, 407420 <ascii_strlower_n@plt+0x2fc0>
  407398:	mov	w8, #0x3                   	// #3
  40739c:	stur	w8, [x29, #-44]
  4073a0:	stur	wzr, [x29, #-48]
  4073a4:	stur	wzr, [x29, #-52]
  4073a8:	ldur	w0, [x29, #-52]
  4073ac:	bl	403a10 <log_get_max_level_realm@plt>
  4073b0:	ldur	w8, [x29, #-44]
  4073b4:	and	w8, w8, #0x7
  4073b8:	cmp	w0, w8
  4073bc:	b.lt	4073f8 <ascii_strlower_n@plt+0x2f98>  // b.tstop
  4073c0:	ldur	w8, [x29, #-52]
  4073c4:	ldur	w9, [x29, #-44]
  4073c8:	orr	w0, w9, w8, lsl #10
  4073cc:	ldur	w1, [x29, #-48]
  4073d0:	ldr	x10, [sp, #128]
  4073d4:	ldr	x6, [x10]
  4073d8:	ldr	x2, [sp, #144]
  4073dc:	mov	w3, #0xba8                 	// #2984
  4073e0:	ldr	x4, [sp, #136]
  4073e4:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4073e8:	add	x5, x5, #0x991
  4073ec:	bl	403a20 <log_internal_realm@plt>
  4073f0:	str	w0, [sp, #92]
  4073f4:	b	40740c <ascii_strlower_n@plt+0x2fac>
  4073f8:	ldur	w0, [x29, #-48]
  4073fc:	bl	403a30 <abs@plt>
  407400:	mov	w8, wzr
  407404:	subs	w8, w8, w0, uxtb
  407408:	str	w8, [sp, #92]
  40740c:	ldr	w8, [sp, #92]
  407410:	stur	w8, [x29, #-56]
  407414:	ldur	w8, [x29, #-24]
  407418:	stur	w8, [x29, #-4]
  40741c:	b	407d84 <ascii_strlower_n@plt+0x3924>
  407420:	ldur	w8, [x29, #-24]
  407424:	ldr	x9, [sp, #152]
  407428:	strh	w8, [x9]
  40742c:	ldr	x8, [sp, #152]
  407430:	ldrh	w9, [x8]
  407434:	ldur	w10, [x29, #-24]
  407438:	cmp	w9, w10
  40743c:	cset	w9, eq  // eq = none
  407440:	mov	w10, #0x1                   	// #1
  407444:	eor	w9, w9, #0x1
  407448:	eor	w9, w9, w10
  40744c:	eor	w9, w9, w10
  407450:	and	w9, w9, #0x1
  407454:	mov	w0, w9
  407458:	sxtw	x11, w0
  40745c:	cbz	x11, 407480 <ascii_strlower_n@plt+0x3020>
  407460:	mov	w8, wzr
  407464:	mov	w0, w8
  407468:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40746c:	add	x1, x1, #0x9b4
  407470:	ldr	x2, [sp, #144]
  407474:	mov	w3, #0xbac                 	// #2988
  407478:	ldr	x4, [sp, #104]
  40747c:	bl	4039d0 <log_assert_failed_realm@plt>
  407480:	b	407c90 <ascii_strlower_n@plt+0x3830>
  407484:	ldr	x8, [sp, #128]
  407488:	ldr	x0, [x8]
  40748c:	bl	403c10 <parse_boolean@plt>
  407490:	stur	w0, [x29, #-24]
  407494:	ldur	w9, [x29, #-24]
  407498:	cmp	w9, #0x0
  40749c:	cset	w9, ge  // ge = tcont
  4074a0:	tbnz	w9, #0, 407528 <ascii_strlower_n@plt+0x30c8>
  4074a4:	mov	w8, #0x3                   	// #3
  4074a8:	stur	w8, [x29, #-60]
  4074ac:	ldur	w8, [x29, #-24]
  4074b0:	stur	w8, [x29, #-64]
  4074b4:	stur	wzr, [x29, #-68]
  4074b8:	ldur	w0, [x29, #-68]
  4074bc:	bl	403a10 <log_get_max_level_realm@plt>
  4074c0:	ldur	w8, [x29, #-60]
  4074c4:	and	w8, w8, #0x7
  4074c8:	cmp	w0, w8
  4074cc:	b.lt	407500 <ascii_strlower_n@plt+0x30a0>  // b.tstop
  4074d0:	ldur	w8, [x29, #-68]
  4074d4:	ldur	w9, [x29, #-60]
  4074d8:	orr	w0, w9, w8, lsl #10
  4074dc:	ldur	w1, [x29, #-64]
  4074e0:	ldr	x2, [sp, #144]
  4074e4:	mov	w3, #0xbb3                 	// #2995
  4074e8:	ldr	x4, [sp, #136]
  4074ec:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4074f0:	add	x5, x5, #0x9c9
  4074f4:	bl	403a20 <log_internal_realm@plt>
  4074f8:	str	w0, [sp, #88]
  4074fc:	b	407514 <ascii_strlower_n@plt+0x30b4>
  407500:	ldur	w0, [x29, #-64]
  407504:	bl	403a30 <abs@plt>
  407508:	mov	w8, wzr
  40750c:	subs	w8, w8, w0, uxtb
  407510:	str	w8, [sp, #88]
  407514:	ldr	w8, [sp, #88]
  407518:	stur	w8, [x29, #-72]
  40751c:	ldur	w8, [x29, #-72]
  407520:	stur	w8, [x29, #-4]
  407524:	b	407d84 <ascii_strlower_n@plt+0x3924>
  407528:	ldur	w8, [x29, #-24]
  40752c:	cmp	w8, #0x0
  407530:	cset	w8, ne  // ne = any
  407534:	and	w8, w8, #0x1
  407538:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  40753c:	add	x9, x9, #0x18
  407540:	strb	w8, [x9]
  407544:	b	407c90 <ascii_strlower_n@plt+0x3830>
  407548:	ldr	x8, [sp, #128]
  40754c:	ldr	x0, [x8]
  407550:	ldr	x1, [sp, #112]
  407554:	bl	403bc0 <strcmp@plt>
  407558:	cbnz	w0, 407568 <ascii_strlower_n@plt+0x3108>
  40755c:	bl	4086a0 <ascii_strlower_n@plt+0x4240>
  407560:	stur	wzr, [x29, #-4]
  407564:	b	407d84 <ascii_strlower_n@plt+0x3924>
  407568:	ldr	x8, [sp, #128]
  40756c:	ldr	x0, [x8]
  407570:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407574:	add	x1, x1, #0x9ec
  407578:	bl	403bc0 <strcmp@plt>
  40757c:	cbnz	w0, 407594 <ascii_strlower_n@plt+0x3134>
  407580:	ldr	x8, [sp, #120]
  407584:	ldr	x9, [x8]
  407588:	orr	x9, x9, #0x1
  40758c:	str	x9, [x8]
  407590:	b	40772c <ascii_strlower_n@plt+0x32cc>
  407594:	ldr	x8, [sp, #128]
  407598:	ldr	x0, [x8]
  40759c:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4075a0:	add	x1, x1, #0x9f0
  4075a4:	bl	403bc0 <strcmp@plt>
  4075a8:	cbnz	w0, 4075c0 <ascii_strlower_n@plt+0x3160>
  4075ac:	ldr	x8, [sp, #120]
  4075b0:	ldr	x9, [x8]
  4075b4:	orr	x9, x9, #0x6
  4075b8:	str	x9, [x8]
  4075bc:	b	40772c <ascii_strlower_n@plt+0x32cc>
  4075c0:	ldr	x8, [sp, #128]
  4075c4:	ldr	x0, [x8]
  4075c8:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4075cc:	add	x1, x1, #0x9f6
  4075d0:	bl	403bc0 <strcmp@plt>
  4075d4:	cbnz	w0, 4075ec <ascii_strlower_n@plt+0x318c>
  4075d8:	ldr	x8, [sp, #120]
  4075dc:	ldr	x9, [x8]
  4075e0:	orr	x9, x9, #0x2
  4075e4:	str	x9, [x8]
  4075e8:	b	40772c <ascii_strlower_n@plt+0x32cc>
  4075ec:	ldr	x8, [sp, #128]
  4075f0:	ldr	x0, [x8]
  4075f4:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4075f8:	add	x1, x1, #0xa01
  4075fc:	bl	403bc0 <strcmp@plt>
  407600:	cbnz	w0, 407618 <ascii_strlower_n@plt+0x31b8>
  407604:	ldr	x8, [sp, #120]
  407608:	ldr	x9, [x8]
  40760c:	orr	x9, x9, #0x4
  407610:	str	x9, [x8]
  407614:	b	40772c <ascii_strlower_n@plt+0x32cc>
  407618:	ldr	x8, [sp, #128]
  40761c:	ldr	x0, [x8]
  407620:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407624:	add	x1, x1, #0xa0c
  407628:	bl	403bc0 <strcmp@plt>
  40762c:	cbnz	w0, 407644 <ascii_strlower_n@plt+0x31e4>
  407630:	ldr	x8, [sp, #120]
  407634:	ldr	x9, [x8]
  407638:	orr	x9, x9, #0x18
  40763c:	str	x9, [x8]
  407640:	b	40772c <ascii_strlower_n@plt+0x32cc>
  407644:	ldr	x8, [sp, #128]
  407648:	ldr	x0, [x8]
  40764c:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407650:	add	x1, x1, #0xa11
  407654:	bl	403bc0 <strcmp@plt>
  407658:	cbnz	w0, 407670 <ascii_strlower_n@plt+0x3210>
  40765c:	ldr	x8, [sp, #120]
  407660:	ldr	x9, [x8]
  407664:	orr	x9, x9, #0x8
  407668:	str	x9, [x8]
  40766c:	b	40772c <ascii_strlower_n@plt+0x32cc>
  407670:	ldr	x8, [sp, #128]
  407674:	ldr	x0, [x8]
  407678:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40767c:	add	x1, x1, #0xa1b
  407680:	bl	403bc0 <strcmp@plt>
  407684:	cbnz	w0, 40769c <ascii_strlower_n@plt+0x323c>
  407688:	ldr	x8, [sp, #120]
  40768c:	ldr	x9, [x8]
  407690:	orr	x9, x9, #0x10
  407694:	str	x9, [x8]
  407698:	b	40772c <ascii_strlower_n@plt+0x32cc>
  40769c:	mov	w8, #0x3                   	// #3
  4076a0:	stur	w8, [x29, #-76]
  4076a4:	mov	w8, #0x16                  	// #22
  4076a8:	movk	w8, #0x4000, lsl #16
  4076ac:	stur	w8, [x29, #-80]
  4076b0:	stur	wzr, [x29, #-84]
  4076b4:	ldur	w0, [x29, #-84]
  4076b8:	bl	403a10 <log_get_max_level_realm@plt>
  4076bc:	ldur	w8, [x29, #-76]
  4076c0:	and	w8, w8, #0x7
  4076c4:	cmp	w0, w8
  4076c8:	b.lt	407704 <ascii_strlower_n@plt+0x32a4>  // b.tstop
  4076cc:	ldur	w8, [x29, #-84]
  4076d0:	ldur	w9, [x29, #-76]
  4076d4:	orr	w0, w9, w8, lsl #10
  4076d8:	ldur	w1, [x29, #-80]
  4076dc:	ldr	x10, [sp, #128]
  4076e0:	ldr	x6, [x10]
  4076e4:	ldr	x2, [sp, #144]
  4076e8:	mov	w3, #0xbcd                 	// #3021
  4076ec:	ldr	x4, [sp, #136]
  4076f0:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4076f4:	add	x5, x5, #0xa25
  4076f8:	bl	403a20 <log_internal_realm@plt>
  4076fc:	str	w0, [sp, #84]
  407700:	b	407718 <ascii_strlower_n@plt+0x32b8>
  407704:	ldur	w0, [x29, #-80]
  407708:	bl	403a30 <abs@plt>
  40770c:	mov	w8, wzr
  407710:	subs	w8, w8, w0, uxtb
  407714:	str	w8, [sp, #84]
  407718:	ldr	w8, [sp, #84]
  40771c:	stur	w8, [x29, #-88]
  407720:	ldur	w8, [x29, #-88]
  407724:	stur	w8, [x29, #-4]
  407728:	b	407d84 <ascii_strlower_n@plt+0x3924>
  40772c:	b	407c90 <ascii_strlower_n@plt+0x3830>
  407730:	bl	403c20 <on_tty@plt>
  407734:	tbnz	w0, #0, 40773c <ascii_strlower_n@plt+0x32dc>
  407738:	b	4077c4 <ascii_strlower_n@plt+0x3364>
  40773c:	mov	w8, #0x3                   	// #3
  407740:	stur	w8, [x29, #-92]
  407744:	mov	w8, #0x19                  	// #25
  407748:	movk	w8, #0x4000, lsl #16
  40774c:	stur	w8, [x29, #-96]
  407750:	stur	wzr, [x29, #-100]
  407754:	ldur	w0, [x29, #-100]
  407758:	bl	403a10 <log_get_max_level_realm@plt>
  40775c:	ldur	w8, [x29, #-92]
  407760:	and	w8, w8, #0x7
  407764:	cmp	w0, w8
  407768:	b.lt	40779c <ascii_strlower_n@plt+0x333c>  // b.tstop
  40776c:	ldur	w8, [x29, #-100]
  407770:	ldur	w9, [x29, #-92]
  407774:	orr	w0, w9, w8, lsl #10
  407778:	ldur	w1, [x29, #-96]
  40777c:	ldr	x2, [sp, #144]
  407780:	mov	w3, #0xbd4                 	// #3028
  407784:	ldr	x4, [sp, #136]
  407788:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40778c:	add	x5, x5, #0xa61
  407790:	bl	403a20 <log_internal_realm@plt>
  407794:	str	w0, [sp, #80]
  407798:	b	4077b0 <ascii_strlower_n@plt+0x3350>
  40779c:	ldur	w0, [x29, #-96]
  4077a0:	bl	403a30 <abs@plt>
  4077a4:	mov	w8, wzr
  4077a8:	subs	w8, w8, w0, uxtb
  4077ac:	str	w8, [sp, #80]
  4077b0:	ldr	w8, [sp, #80]
  4077b4:	stur	w8, [x29, #-104]
  4077b8:	ldur	w8, [x29, #-104]
  4077bc:	stur	w8, [x29, #-4]
  4077c0:	b	407d84 <ascii_strlower_n@plt+0x3924>
  4077c4:	ldr	x8, [sp, #128]
  4077c8:	ldr	x9, [x8]
  4077cc:	cbz	x9, 4077e8 <ascii_strlower_n@plt+0x3388>
  4077d0:	ldr	x8, [sp, #128]
  4077d4:	ldr	x0, [x8]
  4077d8:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4077dc:	add	x1, x1, #0xa87
  4077e0:	bl	403bc0 <strcmp@plt>
  4077e4:	cbnz	w0, 4077fc <ascii_strlower_n@plt+0x339c>
  4077e8:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  4077ec:	add	x8, x8, #0x190
  4077f0:	mov	w9, #0x1                   	// #1
  4077f4:	str	w9, [x8]
  4077f8:	b	4078b8 <ascii_strlower_n@plt+0x3458>
  4077fc:	ldr	x8, [sp, #128]
  407800:	ldr	x0, [x8]
  407804:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407808:	add	x1, x1, #0xa8f
  40780c:	bl	403bc0 <strcmp@plt>
  407810:	cbnz	w0, 407828 <ascii_strlower_n@plt+0x33c8>
  407814:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  407818:	add	x8, x8, #0x190
  40781c:	mov	w9, #0x2                   	// #2
  407820:	str	w9, [x8]
  407824:	b	4078b8 <ascii_strlower_n@plt+0x3458>
  407828:	mov	w8, #0x3                   	// #3
  40782c:	stur	w8, [x29, #-108]
  407830:	mov	w8, #0x16                  	// #22
  407834:	movk	w8, #0x4000, lsl #16
  407838:	stur	w8, [x29, #-112]
  40783c:	stur	wzr, [x29, #-116]
  407840:	ldur	w0, [x29, #-116]
  407844:	bl	403a10 <log_get_max_level_realm@plt>
  407848:	ldur	w8, [x29, #-108]
  40784c:	and	w8, w8, #0x7
  407850:	cmp	w0, w8
  407854:	b.lt	407890 <ascii_strlower_n@plt+0x3430>  // b.tstop
  407858:	ldur	w8, [x29, #-116]
  40785c:	ldur	w9, [x29, #-108]
  407860:	orr	w0, w9, w8, lsl #10
  407864:	ldur	w1, [x29, #-112]
  407868:	ldr	x10, [sp, #128]
  40786c:	ldr	x6, [x10]
  407870:	ldr	x2, [sp, #144]
  407874:	mov	w3, #0xbdd                 	// #3037
  407878:	ldr	x4, [sp, #136]
  40787c:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407880:	add	x5, x5, #0xa96
  407884:	bl	403a20 <log_internal_realm@plt>
  407888:	str	w0, [sp, #76]
  40788c:	b	4078a4 <ascii_strlower_n@plt+0x3444>
  407890:	ldur	w0, [x29, #-112]
  407894:	bl	403a30 <abs@plt>
  407898:	mov	w8, wzr
  40789c:	subs	w8, w8, w0, uxtb
  4078a0:	str	w8, [sp, #76]
  4078a4:	ldr	w8, [sp, #76]
  4078a8:	stur	w8, [x29, #-120]
  4078ac:	ldur	w8, [x29, #-120]
  4078b0:	stur	w8, [x29, #-4]
  4078b4:	b	407d84 <ascii_strlower_n@plt+0x3924>
  4078b8:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  4078bc:	add	x8, x8, #0x18
  4078c0:	mov	w9, #0x0                   	// #0
  4078c4:	strb	w9, [x8]
  4078c8:	b	407c90 <ascii_strlower_n@plt+0x3830>
  4078cc:	ldr	x8, [sp, #128]
  4078d0:	ldr	x0, [x8]
  4078d4:	bl	403c10 <parse_boolean@plt>
  4078d8:	stur	w0, [x29, #-24]
  4078dc:	ldur	w9, [x29, #-24]
  4078e0:	cmp	w9, #0x0
  4078e4:	cset	w9, ge  // ge = tcont
  4078e8:	tbnz	w9, #0, 407970 <ascii_strlower_n@plt+0x3510>
  4078ec:	mov	w8, #0x3                   	// #3
  4078f0:	stur	w8, [x29, #-124]
  4078f4:	ldur	w8, [x29, #-24]
  4078f8:	stur	w8, [x29, #-128]
  4078fc:	stur	wzr, [x29, #-132]
  407900:	ldur	w0, [x29, #-132]
  407904:	bl	403a10 <log_get_max_level_realm@plt>
  407908:	ldur	w8, [x29, #-124]
  40790c:	and	w8, w8, #0x7
  407910:	cmp	w0, w8
  407914:	b.lt	407948 <ascii_strlower_n@plt+0x34e8>  // b.tstop
  407918:	ldur	w8, [x29, #-132]
  40791c:	ldur	w9, [x29, #-124]
  407920:	orr	w0, w9, w8, lsl #10
  407924:	ldur	w1, [x29, #-128]
  407928:	ldr	x2, [sp, #144]
  40792c:	mov	w3, #0xbe5                 	// #3045
  407930:	ldr	x4, [sp, #136]
  407934:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407938:	add	x5, x5, #0xab4
  40793c:	bl	403a20 <log_internal_realm@plt>
  407940:	str	w0, [sp, #72]
  407944:	b	40795c <ascii_strlower_n@plt+0x34fc>
  407948:	ldur	w0, [x29, #-128]
  40794c:	bl	403a30 <abs@plt>
  407950:	mov	w8, wzr
  407954:	subs	w8, w8, w0, uxtb
  407958:	str	w8, [sp, #72]
  40795c:	ldr	w8, [sp, #72]
  407960:	stur	w8, [x29, #-136]
  407964:	ldur	w8, [x29, #-136]
  407968:	stur	w8, [x29, #-4]
  40796c:	b	407d84 <ascii_strlower_n@plt+0x3924>
  407970:	ldur	w8, [x29, #-24]
  407974:	cbnz	w8, 40798c <ascii_strlower_n@plt+0x352c>
  407978:	ldr	x8, [sp, #120]
  40797c:	ldr	x9, [x8]
  407980:	orr	x9, x9, #0x20
  407984:	str	x9, [sp, #64]
  407988:	b	40799c <ascii_strlower_n@plt+0x353c>
  40798c:	ldr	x8, [sp, #120]
  407990:	ldr	x9, [x8]
  407994:	and	x9, x9, #0xffffffffffffffdf
  407998:	str	x9, [sp, #64]
  40799c:	ldr	x8, [sp, #64]
  4079a0:	ldr	x9, [sp, #120]
  4079a4:	str	x8, [x9]
  4079a8:	b	407c90 <ascii_strlower_n@plt+0x3830>
  4079ac:	ldr	x8, [sp, #128]
  4079b0:	ldr	x0, [x8]
  4079b4:	bl	403c10 <parse_boolean@plt>
  4079b8:	stur	w0, [x29, #-24]
  4079bc:	ldur	w9, [x29, #-24]
  4079c0:	cmp	w9, #0x0
  4079c4:	cset	w9, ge  // ge = tcont
  4079c8:	tbnz	w9, #0, 407a50 <ascii_strlower_n@plt+0x35f0>
  4079cc:	mov	w8, #0x3                   	// #3
  4079d0:	stur	w8, [x29, #-140]
  4079d4:	ldur	w8, [x29, #-24]
  4079d8:	stur	w8, [x29, #-144]
  4079dc:	stur	wzr, [x29, #-148]
  4079e0:	ldur	w0, [x29, #-148]
  4079e4:	bl	403a10 <log_get_max_level_realm@plt>
  4079e8:	ldur	w8, [x29, #-140]
  4079ec:	and	w8, w8, #0x7
  4079f0:	cmp	w0, w8
  4079f4:	b.lt	407a28 <ascii_strlower_n@plt+0x35c8>  // b.tstop
  4079f8:	ldur	w8, [x29, #-148]
  4079fc:	ldur	w9, [x29, #-140]
  407a00:	orr	w0, w9, w8, lsl #10
  407a04:	ldur	w1, [x29, #-144]
  407a08:	ldr	x2, [sp, #144]
  407a0c:	mov	w3, #0xbec                 	// #3052
  407a10:	ldr	x4, [sp, #136]
  407a14:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407a18:	add	x5, x5, #0xad7
  407a1c:	bl	403a20 <log_internal_realm@plt>
  407a20:	str	w0, [sp, #60]
  407a24:	b	407a3c <ascii_strlower_n@plt+0x35dc>
  407a28:	ldur	w0, [x29, #-144]
  407a2c:	bl	403a30 <abs@plt>
  407a30:	mov	w8, wzr
  407a34:	subs	w8, w8, w0, uxtb
  407a38:	str	w8, [sp, #60]
  407a3c:	ldr	w8, [sp, #60]
  407a40:	stur	w8, [x29, #-152]
  407a44:	ldur	w8, [x29, #-152]
  407a48:	stur	w8, [x29, #-4]
  407a4c:	b	407d84 <ascii_strlower_n@plt+0x3924>
  407a50:	ldur	w8, [x29, #-24]
  407a54:	cbnz	w8, 407a6c <ascii_strlower_n@plt+0x360c>
  407a58:	ldr	x8, [sp, #120]
  407a5c:	ldr	x9, [x8]
  407a60:	orr	x9, x9, #0x80
  407a64:	str	x9, [sp, #48]
  407a68:	b	407a7c <ascii_strlower_n@plt+0x361c>
  407a6c:	ldr	x8, [sp, #120]
  407a70:	ldr	x9, [x8]
  407a74:	and	x9, x9, #0xffffffffffffff7f
  407a78:	str	x9, [sp, #48]
  407a7c:	ldr	x8, [sp, #48]
  407a80:	ldr	x9, [sp, #120]
  407a84:	str	x8, [x9]
  407a88:	b	407c90 <ascii_strlower_n@plt+0x3830>
  407a8c:	ldr	x8, [sp, #128]
  407a90:	ldr	x0, [x8]
  407a94:	bl	403c10 <parse_boolean@plt>
  407a98:	stur	w0, [x29, #-24]
  407a9c:	ldur	w9, [x29, #-24]
  407aa0:	cmp	w9, #0x0
  407aa4:	cset	w9, ge  // ge = tcont
  407aa8:	tbnz	w9, #0, 407b30 <ascii_strlower_n@plt+0x36d0>
  407aac:	mov	w8, #0x3                   	// #3
  407ab0:	stur	w8, [x29, #-156]
  407ab4:	ldur	w8, [x29, #-24]
  407ab8:	stur	w8, [x29, #-160]
  407abc:	stur	wzr, [x29, #-164]
  407ac0:	ldur	w0, [x29, #-164]
  407ac4:	bl	403a10 <log_get_max_level_realm@plt>
  407ac8:	ldur	w8, [x29, #-156]
  407acc:	and	w8, w8, #0x7
  407ad0:	cmp	w0, w8
  407ad4:	b.lt	407b08 <ascii_strlower_n@plt+0x36a8>  // b.tstop
  407ad8:	ldur	w8, [x29, #-164]
  407adc:	ldur	w9, [x29, #-156]
  407ae0:	orr	w0, w9, w8, lsl #10
  407ae4:	ldur	w1, [x29, #-160]
  407ae8:	ldr	x2, [sp, #144]
  407aec:	mov	w3, #0xbf3                 	// #3059
  407af0:	ldr	x4, [sp, #136]
  407af4:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407af8:	add	x5, x5, #0xb04
  407afc:	bl	403a20 <log_internal_realm@plt>
  407b00:	str	w0, [sp, #44]
  407b04:	b	407b1c <ascii_strlower_n@plt+0x36bc>
  407b08:	ldur	w0, [x29, #-160]
  407b0c:	bl	403a30 <abs@plt>
  407b10:	mov	w8, wzr
  407b14:	subs	w8, w8, w0, uxtb
  407b18:	str	w8, [sp, #44]
  407b1c:	ldr	w8, [sp, #44]
  407b20:	stur	w8, [x29, #-168]
  407b24:	ldur	w8, [x29, #-168]
  407b28:	stur	w8, [x29, #-4]
  407b2c:	b	407d84 <ascii_strlower_n@plt+0x3924>
  407b30:	ldur	w8, [x29, #-24]
  407b34:	cbnz	w8, 407b4c <ascii_strlower_n@plt+0x36ec>
  407b38:	ldr	x8, [sp, #120]
  407b3c:	ldr	x9, [x8]
  407b40:	orr	x9, x9, #0x40
  407b44:	str	x9, [sp, #32]
  407b48:	b	407b5c <ascii_strlower_n@plt+0x36fc>
  407b4c:	ldr	x8, [sp, #120]
  407b50:	ldr	x9, [x8]
  407b54:	and	x9, x9, #0xffffffffffffffbf
  407b58:	str	x9, [sp, #32]
  407b5c:	ldr	x8, [sp, #32]
  407b60:	ldr	x9, [sp, #120]
  407b64:	str	x8, [x9]
  407b68:	b	407c90 <ascii_strlower_n@plt+0x3830>
  407b6c:	ldr	x8, [sp, #128]
  407b70:	ldr	x0, [x8]
  407b74:	bl	403c10 <parse_boolean@plt>
  407b78:	stur	w0, [x29, #-24]
  407b7c:	ldur	w9, [x29, #-24]
  407b80:	cmp	w9, #0x0
  407b84:	cset	w9, ge  // ge = tcont
  407b88:	tbnz	w9, #0, 407c10 <ascii_strlower_n@plt+0x37b0>
  407b8c:	mov	w8, #0x3                   	// #3
  407b90:	stur	w8, [x29, #-172]
  407b94:	ldur	w8, [x29, #-24]
  407b98:	stur	w8, [x29, #-176]
  407b9c:	stur	wzr, [x29, #-180]
  407ba0:	ldur	w0, [x29, #-180]
  407ba4:	bl	403a10 <log_get_max_level_realm@plt>
  407ba8:	ldur	w8, [x29, #-172]
  407bac:	and	w8, w8, #0x7
  407bb0:	cmp	w0, w8
  407bb4:	b.lt	407be8 <ascii_strlower_n@plt+0x3788>  // b.tstop
  407bb8:	ldur	w8, [x29, #-180]
  407bbc:	ldur	w9, [x29, #-172]
  407bc0:	orr	w0, w9, w8, lsl #10
  407bc4:	ldur	w1, [x29, #-176]
  407bc8:	ldr	x2, [sp, #144]
  407bcc:	mov	w3, #0xbfa                 	// #3066
  407bd0:	ldr	x4, [sp, #136]
  407bd4:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407bd8:	add	x5, x5, #0xb2d
  407bdc:	bl	403a20 <log_internal_realm@plt>
  407be0:	str	w0, [sp, #28]
  407be4:	b	407bfc <ascii_strlower_n@plt+0x379c>
  407be8:	ldur	w0, [x29, #-176]
  407bec:	bl	403a30 <abs@plt>
  407bf0:	mov	w8, wzr
  407bf4:	subs	w8, w8, w0, uxtb
  407bf8:	str	w8, [sp, #28]
  407bfc:	ldr	w8, [sp, #28]
  407c00:	str	w8, [sp, #184]
  407c04:	ldr	w8, [sp, #184]
  407c08:	stur	w8, [x29, #-4]
  407c0c:	b	407d84 <ascii_strlower_n@plt+0x3924>
  407c10:	ldur	w8, [x29, #-24]
  407c14:	cbnz	w8, 407c2c <ascii_strlower_n@plt+0x37cc>
  407c18:	ldr	x8, [sp, #120]
  407c1c:	ldr	x9, [x8]
  407c20:	orr	x9, x9, #0x100
  407c24:	str	x9, [sp, #16]
  407c28:	b	407c3c <ascii_strlower_n@plt+0x37dc>
  407c2c:	ldr	x8, [sp, #120]
  407c30:	ldr	x9, [x8]
  407c34:	and	x9, x9, #0xfffffffffffffeff
  407c38:	str	x9, [sp, #16]
  407c3c:	ldr	x8, [sp, #16]
  407c40:	ldr	x9, [sp, #120]
  407c44:	str	x8, [x9]
  407c48:	b	407c90 <ascii_strlower_n@plt+0x3830>
  407c4c:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  407c50:	add	x8, x8, #0x194
  407c54:	ldr	w9, [x8]
  407c58:	orr	w9, w9, #0x1
  407c5c:	str	w9, [x8]
  407c60:	b	407c90 <ascii_strlower_n@plt+0x3830>
  407c64:	mov	w8, #0xffffffea            	// #-22
  407c68:	stur	w8, [x29, #-4]
  407c6c:	b	407d84 <ascii_strlower_n@plt+0x3924>
  407c70:	mov	w8, wzr
  407c74:	mov	w0, w8
  407c78:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407c7c:	add	x1, x1, #0x195
  407c80:	ldr	x2, [sp, #144]
  407c84:	mov	w3, #0xc06                 	// #3078
  407c88:	ldr	x4, [sp, #104]
  407c8c:	bl	403a40 <log_assert_failed_unreachable_realm@plt>
  407c90:	b	407084 <ascii_strlower_n@plt+0x2c24>
  407c94:	ldr	x8, [sp, #160]
  407c98:	ldrh	w9, [x8]
  407c9c:	cbnz	w9, 407d34 <ascii_strlower_n@plt+0x38d4>
  407ca0:	ldr	x8, [sp, #152]
  407ca4:	ldrh	w9, [x8]
  407ca8:	cbz	w9, 407d34 <ascii_strlower_n@plt+0x38d4>
  407cac:	mov	w8, #0x3                   	// #3
  407cb0:	str	w8, [sp, #180]
  407cb4:	mov	w8, #0x16                  	// #22
  407cb8:	movk	w8, #0x4000, lsl #16
  407cbc:	str	w8, [sp, #176]
  407cc0:	str	wzr, [sp, #172]
  407cc4:	ldr	w0, [sp, #172]
  407cc8:	bl	403a10 <log_get_max_level_realm@plt>
  407ccc:	ldr	w8, [sp, #180]
  407cd0:	and	w8, w8, #0x7
  407cd4:	cmp	w0, w8
  407cd8:	b.lt	407d0c <ascii_strlower_n@plt+0x38ac>  // b.tstop
  407cdc:	ldr	w8, [sp, #172]
  407ce0:	ldr	w9, [sp, #180]
  407ce4:	orr	w0, w9, w8, lsl #10
  407ce8:	ldr	w1, [sp, #176]
  407cec:	ldr	x2, [sp, #144]
  407cf0:	mov	w3, #0xc0b                 	// #3083
  407cf4:	ldr	x4, [sp, #136]
  407cf8:	adrp	x5, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407cfc:	add	x5, x5, #0xb50
  407d00:	bl	403a20 <log_internal_realm@plt>
  407d04:	str	w0, [sp, #12]
  407d08:	b	407d20 <ascii_strlower_n@plt+0x38c0>
  407d0c:	ldr	w0, [sp, #176]
  407d10:	bl	403a30 <abs@plt>
  407d14:	mov	w8, wzr
  407d18:	subs	w8, w8, w0, uxtb
  407d1c:	str	w8, [sp, #12]
  407d20:	ldr	w8, [sp, #12]
  407d24:	str	w8, [sp, #168]
  407d28:	ldr	w8, [sp, #168]
  407d2c:	stur	w8, [x29, #-4]
  407d30:	b	407d84 <ascii_strlower_n@plt+0x3924>
  407d34:	ldr	x8, [sp, #160]
  407d38:	ldrh	w9, [x8]
  407d3c:	cbz	w9, 407d58 <ascii_strlower_n@plt+0x38f8>
  407d40:	ldr	x8, [sp, #152]
  407d44:	ldrh	w9, [x8]
  407d48:	cbnz	w9, 407d58 <ascii_strlower_n@plt+0x38f8>
  407d4c:	mov	w8, #0x1                   	// #1
  407d50:	ldr	x9, [sp, #152]
  407d54:	strh	w8, [x9]
  407d58:	ldr	x8, [sp, #152]
  407d5c:	ldrh	w9, [x8]
  407d60:	cbz	w9, 407d7c <ascii_strlower_n@plt+0x391c>
  407d64:	ldr	x8, [sp, #160]
  407d68:	ldrh	w9, [x8]
  407d6c:	cbnz	w9, 407d7c <ascii_strlower_n@plt+0x391c>
  407d70:	mov	w8, #0x1                   	// #1
  407d74:	ldr	x9, [sp, #160]
  407d78:	strh	w8, [x9]
  407d7c:	mov	w8, #0x1                   	// #1
  407d80:	stur	w8, [x29, #-4]
  407d84:	ldur	w0, [x29, #-4]
  407d88:	ldr	x28, [sp, #384]
  407d8c:	ldp	x29, x30, [sp, #368]
  407d90:	add	sp, sp, #0x190
  407d94:	ret
  407d98:	sub	sp, sp, #0xa0
  407d9c:	stp	x29, x30, [sp, #144]
  407da0:	add	x29, sp, #0x90
  407da4:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  407da8:	add	x8, x8, #0x14c
  407dac:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407db0:	add	x9, x9, #0x6f4
  407db4:	add	x9, x9, #0x3
  407db8:	adrp	x10, 42e000 <ascii_strlower_n@plt+0x29ba0>
  407dbc:	add	x10, x10, #0xf0d
  407dc0:	adrp	x11, 450000 <ascii_strlower_n@plt+0x4bba0>
  407dc4:	add	x11, x11, #0x160
  407dc8:	adrp	x12, 450000 <ascii_strlower_n@plt+0x4bba0>
  407dcc:	add	x12, x12, #0x150
  407dd0:	adrp	x13, 450000 <ascii_strlower_n@plt+0x4bba0>
  407dd4:	add	x13, x13, #0x158
  407dd8:	adrp	x14, 450000 <ascii_strlower_n@plt+0x4bba0>
  407ddc:	add	x14, x14, #0x168
  407de0:	adrp	x15, 450000 <ascii_strlower_n@plt+0x4bba0>
  407de4:	add	x15, x15, #0x1b8
  407de8:	stur	w0, [x29, #-8]
  407dec:	stur	x1, [x29, #-16]
  407df0:	stur	x2, [x29, #-24]
  407df4:	stur	wzr, [x29, #-28]
  407df8:	ldr	w16, [x8]
  407dfc:	add	w16, w16, #0x1
  407e00:	mov	w8, w16
  407e04:	ubfx	x8, x8, #0, #32
  407e08:	cmp	x8, #0xc
  407e0c:	stur	x9, [x29, #-40]
  407e10:	stur	x10, [x29, #-48]
  407e14:	stur	x11, [x29, #-56]
  407e18:	stur	x12, [x29, #-64]
  407e1c:	str	x13, [sp, #72]
  407e20:	str	x14, [sp, #64]
  407e24:	str	x15, [sp, #56]
  407e28:	str	x8, [sp, #48]
  407e2c:	b.hi	4083f4 <ascii_strlower_n@plt+0x3f94>  // b.pmore
  407e30:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  407e34:	add	x8, x8, #0x910
  407e38:	ldr	x11, [sp, #48]
  407e3c:	ldrsw	x10, [x8, x11, lsl #2]
  407e40:	add	x9, x8, x10
  407e44:	br	x9
  407e48:	ldur	w8, [x29, #-8]
  407e4c:	ldr	x9, [sp, #56]
  407e50:	ldr	w10, [x9]
  407e54:	subs	w8, w8, w10
  407e58:	mov	w0, w8
  407e5c:	sxtw	x2, w0
  407e60:	ldur	x11, [x29, #-16]
  407e64:	ldrsw	x12, [x9]
  407e68:	mov	x13, #0x8                   	// #8
  407e6c:	mul	x12, x13, x12
  407e70:	add	x3, x11, x12
  407e74:	ldur	x4, [x29, #-24]
  407e78:	adrp	x0, 42e000 <ascii_strlower_n@plt+0x29ba0>
  407e7c:	add	x0, x0, #0xefc
  407e80:	mov	x11, xzr
  407e84:	mov	x1, x11
  407e88:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  407e8c:	stur	w0, [x29, #-4]
  407e90:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  407e94:	ldur	w8, [x29, #-8]
  407e98:	ldr	x9, [sp, #56]
  407e9c:	ldr	w10, [x9]
  407ea0:	subs	w8, w8, w10
  407ea4:	mov	w0, w8
  407ea8:	sxtw	x2, w0
  407eac:	ldur	x11, [x29, #-16]
  407eb0:	ldrsw	x12, [x9]
  407eb4:	mov	x13, #0x8                   	// #8
  407eb8:	mul	x12, x13, x12
  407ebc:	add	x3, x11, x12
  407ec0:	ldur	x4, [x29, #-24]
  407ec4:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407ec8:	add	x0, x0, #0x846
  407ecc:	mov	x11, xzr
  407ed0:	mov	x1, x11
  407ed4:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  407ed8:	stur	w0, [x29, #-4]
  407edc:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  407ee0:	ldur	w8, [x29, #-8]
  407ee4:	ldr	x9, [sp, #56]
  407ee8:	ldr	w10, [x9]
  407eec:	subs	w8, w8, w10
  407ef0:	mov	w0, w8
  407ef4:	sxtw	x2, w0
  407ef8:	ldur	x11, [x29, #-16]
  407efc:	ldrsw	x12, [x9]
  407f00:	mov	x13, #0x8                   	// #8
  407f04:	mul	x12, x13, x12
  407f08:	add	x3, x11, x12
  407f0c:	ldur	x4, [x29, #-24]
  407f10:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407f14:	add	x0, x0, #0x86a
  407f18:	mov	x11, xzr
  407f1c:	mov	x1, x11
  407f20:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  407f24:	stur	w0, [x29, #-4]
  407f28:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  407f2c:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  407f30:	add	x8, x8, #0x188
  407f34:	ldr	x1, [x8]
  407f38:	ldur	w9, [x29, #-8]
  407f3c:	ldr	x8, [sp, #56]
  407f40:	ldr	w10, [x8]
  407f44:	subs	w9, w9, w10
  407f48:	mov	w0, w9
  407f4c:	sxtw	x2, w0
  407f50:	ldur	x11, [x29, #-16]
  407f54:	ldrsw	x12, [x8]
  407f58:	mov	x13, #0x8                   	// #8
  407f5c:	mul	x12, x13, x12
  407f60:	add	x3, x11, x12
  407f64:	ldur	x4, [x29, #-24]
  407f68:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407f6c:	add	x0, x0, #0x872
  407f70:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  407f74:	stur	w0, [x29, #-4]
  407f78:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  407f7c:	ldur	x4, [x29, #-24]
  407f80:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407f84:	add	x0, x0, #0x87b
  407f88:	mov	x8, xzr
  407f8c:	mov	x1, x8
  407f90:	mov	x2, x8
  407f94:	mov	x3, x8
  407f98:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  407f9c:	stur	w0, [x29, #-4]
  407fa0:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  407fa4:	ldur	x4, [x29, #-24]
  407fa8:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407fac:	add	x0, x0, #0x886
  407fb0:	mov	x8, xzr
  407fb4:	mov	x1, x8
  407fb8:	mov	x2, x8
  407fbc:	mov	x3, x8
  407fc0:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  407fc4:	stur	w0, [x29, #-4]
  407fc8:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  407fcc:	ldur	x4, [x29, #-24]
  407fd0:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407fd4:	add	x0, x0, #0x89e
  407fd8:	mov	x8, xzr
  407fdc:	mov	x1, x8
  407fe0:	mov	x2, x8
  407fe4:	mov	x3, x8
  407fe8:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  407fec:	stur	w0, [x29, #-4]
  407ff0:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  407ff4:	ldur	x4, [x29, #-24]
  407ff8:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  407ffc:	add	x0, x0, #0x8ab
  408000:	mov	x8, xzr
  408004:	mov	x1, x8
  408008:	mov	x2, x8
  40800c:	mov	x3, x8
  408010:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  408014:	stur	w0, [x29, #-4]
  408018:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  40801c:	ldur	w8, [x29, #-8]
  408020:	ldr	x9, [sp, #56]
  408024:	ldr	w10, [x9]
  408028:	subs	w8, w8, w10
  40802c:	mov	w0, w8
  408030:	sxtw	x2, w0
  408034:	ldur	x11, [x29, #-16]
  408038:	ldrsw	x12, [x9]
  40803c:	mov	x13, #0x8                   	// #8
  408040:	mul	x12, x13, x12
  408044:	add	x3, x11, x12
  408048:	ldur	x4, [x29, #-24]
  40804c:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  408050:	add	x0, x0, #0x897
  408054:	mov	x11, xzr
  408058:	mov	x1, x11
  40805c:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  408060:	stur	w0, [x29, #-4]
  408064:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  408068:	ldur	x8, [x29, #-56]
  40806c:	ldr	x9, [x8]
  408070:	cmp	x9, #0x0
  408074:	cset	w10, ne  // ne = any
  408078:	mov	w11, #0x1                   	// #1
  40807c:	eor	w10, w10, #0x1
  408080:	eor	w10, w10, w11
  408084:	eor	w10, w10, w11
  408088:	and	w10, w10, #0x1
  40808c:	mov	w0, w10
  408090:	sxtw	x9, w0
  408094:	cbz	x9, 4080b8 <ascii_strlower_n@plt+0x3c58>
  408098:	mov	w8, wzr
  40809c:	mov	w0, w8
  4080a0:	adrp	x1, 42e000 <ascii_strlower_n@plt+0x29ba0>
  4080a4:	add	x1, x1, #0xf02
  4080a8:	ldur	x2, [x29, #-40]
  4080ac:	mov	w3, #0xc67                 	// #3175
  4080b0:	ldur	x4, [x29, #-48]
  4080b4:	bl	4039d0 <log_assert_failed_realm@plt>
  4080b8:	ldur	x8, [x29, #-64]
  4080bc:	ldr	x9, [x8]
  4080c0:	cbz	x9, 408124 <ascii_strlower_n@plt+0x3cc4>
  4080c4:	ldur	x8, [x29, #-56]
  4080c8:	ldr	x1, [x8]
  4080cc:	ldur	x9, [x29, #-64]
  4080d0:	ldr	x0, [x9]
  4080d4:	str	x1, [sp, #40]
  4080d8:	bl	403c30 <strv_length@plt>
  4080dc:	ldur	x8, [x29, #-64]
  4080e0:	ldr	x3, [x8]
  4080e4:	ldur	x4, [x29, #-24]
  4080e8:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4080ec:	add	x9, x9, #0x9ec
  4080f0:	str	x0, [sp, #32]
  4080f4:	mov	x0, x9
  4080f8:	ldr	x1, [sp, #40]
  4080fc:	ldr	x2, [sp, #32]
  408100:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  408104:	stur	w0, [x29, #-28]
  408108:	ldur	w10, [x29, #-28]
  40810c:	cmp	w10, #0x0
  408110:	cset	w10, ge  // ge = tcont
  408114:	tbnz	w10, #0, 408124 <ascii_strlower_n@plt+0x3cc4>
  408118:	ldur	w8, [x29, #-28]
  40811c:	stur	w8, [x29, #-4]
  408120:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  408124:	ldr	x8, [sp, #72]
  408128:	ldr	x9, [x8]
  40812c:	cbz	x9, 408190 <ascii_strlower_n@plt+0x3d30>
  408130:	ldur	x8, [x29, #-56]
  408134:	ldr	x1, [x8]
  408138:	ldr	x9, [sp, #72]
  40813c:	ldr	x0, [x9]
  408140:	str	x1, [sp, #24]
  408144:	bl	403c30 <strv_length@plt>
  408148:	ldr	x8, [sp, #72]
  40814c:	ldr	x3, [x8]
  408150:	ldur	x4, [x29, #-24]
  408154:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  408158:	add	x9, x9, #0x222
  40815c:	str	x0, [sp, #16]
  408160:	mov	x0, x9
  408164:	ldr	x1, [sp, #24]
  408168:	ldr	x2, [sp, #16]
  40816c:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  408170:	stur	w0, [x29, #-28]
  408174:	ldur	w10, [x29, #-28]
  408178:	cmp	w10, #0x0
  40817c:	cset	w10, ge  // ge = tcont
  408180:	tbnz	w10, #0, 408190 <ascii_strlower_n@plt+0x3d30>
  408184:	ldur	w8, [x29, #-28]
  408188:	stur	w8, [x29, #-4]
  40818c:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  408190:	ldr	x8, [sp, #64]
  408194:	ldr	x9, [x8]
  408198:	cbz	x9, 4081fc <ascii_strlower_n@plt+0x3d9c>
  40819c:	ldur	x8, [x29, #-56]
  4081a0:	ldr	x1, [x8]
  4081a4:	ldr	x9, [sp, #64]
  4081a8:	ldr	x0, [x9]
  4081ac:	str	x1, [sp, #8]
  4081b0:	bl	403c30 <strv_length@plt>
  4081b4:	ldr	x8, [sp, #64]
  4081b8:	ldr	x3, [x8]
  4081bc:	ldur	x4, [x29, #-24]
  4081c0:	adrp	x9, 42e000 <ascii_strlower_n@plt+0x29ba0>
  4081c4:	add	x9, x9, #0xf35
  4081c8:	str	x0, [sp]
  4081cc:	mov	x0, x9
  4081d0:	ldr	x1, [sp, #8]
  4081d4:	ldr	x2, [sp]
  4081d8:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  4081dc:	stur	w0, [x29, #-28]
  4081e0:	ldur	w10, [x29, #-28]
  4081e4:	cmp	w10, #0x0
  4081e8:	cset	w10, ge  // ge = tcont
  4081ec:	tbnz	w10, #0, 4081fc <ascii_strlower_n@plt+0x3d9c>
  4081f0:	ldur	w8, [x29, #-28]
  4081f4:	stur	w8, [x29, #-4]
  4081f8:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  4081fc:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  408200:	add	x8, x8, #0x198
  408204:	ldr	x8, [x8]
  408208:	cbz	x8, 408250 <ascii_strlower_n@plt+0x3df0>
  40820c:	ldur	x8, [x29, #-56]
  408210:	ldr	x1, [x8]
  408214:	ldur	x4, [x29, #-24]
  408218:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40821c:	add	x0, x0, #0x9f0
  408220:	mov	x2, #0x1                   	// #1
  408224:	adrp	x3, 450000 <ascii_strlower_n@plt+0x4bba0>
  408228:	add	x3, x3, #0x198
  40822c:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  408230:	stur	w0, [x29, #-28]
  408234:	ldur	w9, [x29, #-28]
  408238:	cmp	w9, #0x0
  40823c:	cset	w9, ge  // ge = tcont
  408240:	tbnz	w9, #0, 408250 <ascii_strlower_n@plt+0x3df0>
  408244:	ldur	w8, [x29, #-28]
  408248:	stur	w8, [x29, #-4]
  40824c:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  408250:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  408254:	add	x8, x8, #0x1a0
  408258:	ldr	x8, [x8]
  40825c:	cbz	x8, 4082a4 <ascii_strlower_n@plt+0x3e44>
  408260:	ldur	x8, [x29, #-56]
  408264:	ldr	x1, [x8]
  408268:	ldur	x4, [x29, #-24]
  40826c:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  408270:	add	x0, x0, #0xa0c
  408274:	mov	x2, #0x1                   	// #1
  408278:	adrp	x3, 450000 <ascii_strlower_n@plt+0x4bba0>
  40827c:	add	x3, x3, #0x1a0
  408280:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  408284:	stur	w0, [x29, #-28]
  408288:	ldur	w9, [x29, #-28]
  40828c:	cmp	w9, #0x0
  408290:	cset	w9, ge  // ge = tcont
  408294:	tbnz	w9, #0, 4082a4 <ascii_strlower_n@plt+0x3e44>
  408298:	ldur	w8, [x29, #-28]
  40829c:	stur	w8, [x29, #-4]
  4082a0:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  4082a4:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  4082a8:	add	x8, x8, #0x1a8
  4082ac:	ldr	x8, [x8]
  4082b0:	cbz	x8, 4082f8 <ascii_strlower_n@plt+0x3e98>
  4082b4:	ldur	x8, [x29, #-56]
  4082b8:	ldr	x1, [x8]
  4082bc:	ldur	x4, [x29, #-24]
  4082c0:	adrp	x0, 42e000 <ascii_strlower_n@plt+0x29ba0>
  4082c4:	add	x0, x0, #0xf39
  4082c8:	mov	x2, #0x1                   	// #1
  4082cc:	adrp	x3, 450000 <ascii_strlower_n@plt+0x4bba0>
  4082d0:	add	x3, x3, #0x1a8
  4082d4:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  4082d8:	stur	w0, [x29, #-28]
  4082dc:	ldur	w9, [x29, #-28]
  4082e0:	cmp	w9, #0x0
  4082e4:	cset	w9, ge  // ge = tcont
  4082e8:	tbnz	w9, #0, 4082f8 <ascii_strlower_n@plt+0x3e98>
  4082ec:	ldur	w8, [x29, #-28]
  4082f0:	stur	w8, [x29, #-4]
  4082f4:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  4082f8:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  4082fc:	add	x8, x8, #0x1b0
  408300:	ldr	x8, [x8]
  408304:	cbz	x8, 40834c <ascii_strlower_n@plt+0x3eec>
  408308:	ldur	x8, [x29, #-56]
  40830c:	ldr	x1, [x8]
  408310:	ldur	x4, [x29, #-24]
  408314:	adrp	x0, 42e000 <ascii_strlower_n@plt+0x29ba0>
  408318:	add	x0, x0, #0xf44
  40831c:	mov	x2, #0x1                   	// #1
  408320:	adrp	x3, 450000 <ascii_strlower_n@plt+0x4bba0>
  408324:	add	x3, x3, #0x1b0
  408328:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  40832c:	stur	w0, [x29, #-28]
  408330:	ldur	w9, [x29, #-28]
  408334:	cmp	w9, #0x0
  408338:	cset	w9, ge  // ge = tcont
  40833c:	tbnz	w9, #0, 40834c <ascii_strlower_n@plt+0x3eec>
  408340:	ldur	w8, [x29, #-28]
  408344:	stur	w8, [x29, #-4]
  408348:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  40834c:	ldur	w8, [x29, #-28]
  408350:	stur	w8, [x29, #-4]
  408354:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  408358:	ldur	x8, [x29, #-56]
  40835c:	ldr	x9, [x8]
  408360:	cmp	x9, #0x0
  408364:	cset	w10, ne  // ne = any
  408368:	mov	w11, #0x1                   	// #1
  40836c:	eor	w10, w10, #0x1
  408370:	eor	w10, w10, w11
  408374:	eor	w10, w10, w11
  408378:	and	w10, w10, #0x1
  40837c:	mov	w0, w10
  408380:	sxtw	x9, w0
  408384:	cbz	x9, 4083a8 <ascii_strlower_n@plt+0x3f48>
  408388:	mov	w8, wzr
  40838c:	mov	w0, w8
  408390:	adrp	x1, 42e000 <ascii_strlower_n@plt+0x29ba0>
  408394:	add	x1, x1, #0xf02
  408398:	ldur	x2, [x29, #-40]
  40839c:	mov	w3, #0xc96                 	// #3222
  4083a0:	ldur	x4, [x29, #-48]
  4083a4:	bl	4039d0 <log_assert_failed_realm@plt>
  4083a8:	ldur	x8, [x29, #-56]
  4083ac:	ldr	x1, [x8]
  4083b0:	ldur	x4, [x29, #-24]
  4083b4:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4083b8:	add	x0, x0, #0x912
  4083bc:	mov	x9, xzr
  4083c0:	mov	x2, x9
  4083c4:	mov	x3, x9
  4083c8:	bl	4088b8 <ascii_strlower_n@plt+0x4458>
  4083cc:	stur	w0, [x29, #-4]
  4083d0:	b	4083f8 <ascii_strlower_n@plt+0x3f98>
  4083d4:	mov	w8, wzr
  4083d8:	mov	w0, w8
  4083dc:	adrp	x1, 42e000 <ascii_strlower_n@plt+0x29ba0>
  4083e0:	add	x1, x1, #0xf4b
  4083e4:	ldur	x2, [x29, #-40]
  4083e8:	mov	w3, #0xc9b                 	// #3227
  4083ec:	ldur	x4, [x29, #-48]
  4083f0:	bl	403a40 <log_assert_failed_unreachable_realm@plt>
  4083f4:	stur	wzr, [x29, #-4]
  4083f8:	ldur	w0, [x29, #-4]
  4083fc:	ldp	x29, x30, [sp, #144]
  408400:	add	sp, sp, #0xa0
  408404:	ret
  408408:	sub	sp, sp, #0x30
  40840c:	stp	x29, x30, [sp, #32]
  408410:	add	x29, sp, #0x20
  408414:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  408418:	add	x8, x8, #0xfc0
  40841c:	stur	w0, [x29, #-4]
  408420:	str	x1, [sp, #16]
  408424:	str	x2, [sp, #8]
  408428:	ldur	w0, [x29, #-4]
  40842c:	ldr	x1, [sp, #16]
  408430:	ldr	x3, [sp, #8]
  408434:	mov	x2, x8
  408438:	bl	403c40 <dispatch_verb@plt>
  40843c:	ldp	x29, x30, [sp, #32]
  408440:	add	sp, sp, #0x30
  408444:	ret
  408448:	sub	sp, sp, #0x50
  40844c:	stp	x29, x30, [sp, #64]
  408450:	add	x29, sp, #0x40
  408454:	mov	x8, xzr
  408458:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40845c:	add	x0, x0, #0x2b6
  408460:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  408464:	add	x1, x1, #0x2c1
  408468:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40846c:	add	x9, x9, #0x6f4
  408470:	add	x9, x9, #0x3
  408474:	sub	x2, x29, #0x10
  408478:	stur	x8, [x29, #-16]
  40847c:	str	x9, [sp, #32]
  408480:	bl	403aa0 <terminal_urlify_man@plt>
  408484:	stur	w0, [x29, #-20]
  408488:	ldur	w10, [x29, #-20]
  40848c:	cmp	w10, #0x0
  408490:	cset	w10, ge  // ge = tcont
  408494:	tbnz	w10, #0, 4084c4 <ascii_strlower_n@plt+0x4064>
  408498:	mov	w8, wzr
  40849c:	mov	w0, w8
  4084a0:	ldr	x1, [sp, #32]
  4084a4:	mov	w2, #0x9a4                 	// #2468
  4084a8:	adrp	x3, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4084ac:	add	x3, x3, #0xc38
  4084b0:	bl	403a90 <log_oom_internal@plt>
  4084b4:	stur	w0, [x29, #-4]
  4084b8:	mov	w8, #0x1                   	// #1
  4084bc:	stur	w8, [x29, #-24]
  4084c0:	b	408510 <ascii_strlower_n@plt+0x40b0>
  4084c4:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  4084c8:	add	x8, x8, #0x1c8
  4084cc:	ldr	x1, [x8]
  4084d0:	str	x1, [sp, #24]
  4084d4:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  4084d8:	str	x0, [sp, #16]
  4084dc:	bl	40877c <ascii_strlower_n@plt+0x431c>
  4084e0:	ldur	x4, [x29, #-16]
  4084e4:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4084e8:	add	x8, x8, #0xc44
  4084ec:	str	x0, [sp, #8]
  4084f0:	mov	x0, x8
  4084f4:	ldr	x1, [sp, #24]
  4084f8:	ldr	x2, [sp, #16]
  4084fc:	ldr	x3, [sp, #8]
  408500:	bl	403ab0 <printf@plt>
  408504:	stur	wzr, [x29, #-4]
  408508:	mov	w9, #0x1                   	// #1
  40850c:	stur	w9, [x29, #-24]
  408510:	sub	x0, x29, #0x10
  408514:	bl	405970 <ascii_strlower_n@plt+0x1510>
  408518:	ldur	w0, [x29, #-4]
  40851c:	ldp	x29, x30, [sp, #64]
  408520:	add	sp, sp, #0x50
  408524:	ret
  408528:	sub	sp, sp, #0x30
  40852c:	stp	x29, x30, [sp, #32]
  408530:	add	x29, sp, #0x20
  408534:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  408538:	add	x8, x8, #0x18
  40853c:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  408540:	add	x9, x9, #0x1e8
  408544:	ldrb	w10, [x8]
  408548:	str	x9, [sp, #8]
  40854c:	tbnz	w10, #0, 408554 <ascii_strlower_n@plt+0x40f4>
  408550:	b	408560 <ascii_strlower_n@plt+0x4100>
  408554:	adrp	x0, 42e000 <ascii_strlower_n@plt+0x29ba0>
  408558:	add	x0, x0, #0x4f7
  40855c:	bl	403c50 <puts@plt>
  408560:	ldr	x8, [sp, #8]
  408564:	ldr	x0, [x8]
  408568:	bl	403c60 <flockfile@plt>
  40856c:	stur	wzr, [x29, #-4]
  408570:	ldur	w8, [x29, #-4]
  408574:	mov	w9, #0x8002                	// #32770
  408578:	cmp	w8, w9
  40857c:	b.ge	4085cc <ascii_strlower_n@plt+0x416c>  // b.tcont
  408580:	ldur	w0, [x29, #-4]
  408584:	bl	42adf8 <ascii_strlower_n@plt+0x26998>
  408588:	str	x0, [sp, #16]
  40858c:	ldr	x8, [sp, #16]
  408590:	cbnz	x8, 408598 <ascii_strlower_n@plt+0x4138>
  408594:	b	4085bc <ascii_strlower_n@plt+0x415c>
  408598:	ldr	x0, [sp, #16]
  40859c:	ldr	x8, [sp, #8]
  4085a0:	ldr	x1, [x8]
  4085a4:	bl	403c70 <fputs_unlocked@plt>
  4085a8:	ldr	x8, [sp, #8]
  4085ac:	ldr	x1, [x8]
  4085b0:	mov	w9, #0xa                   	// #10
  4085b4:	mov	w0, w9
  4085b8:	bl	403c80 <fputc_unlocked@plt>
  4085bc:	ldur	w8, [x29, #-4]
  4085c0:	add	w8, w8, #0x1
  4085c4:	stur	w8, [x29, #-4]
  4085c8:	b	408570 <ascii_strlower_n@plt+0x4110>
  4085cc:	ldr	x8, [sp, #8]
  4085d0:	ldr	x0, [x8]
  4085d4:	bl	403c90 <funlockfile@plt>
  4085d8:	ldp	x29, x30, [sp, #32]
  4085dc:	add	sp, sp, #0x30
  4085e0:	ret
  4085e4:	sub	sp, sp, #0x30
  4085e8:	stp	x29, x30, [sp, #32]
  4085ec:	add	x29, sp, #0x20
  4085f0:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  4085f4:	add	x8, x8, #0x18
  4085f8:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  4085fc:	add	x9, x9, #0x1e8
  408600:	ldrb	w10, [x8]
  408604:	str	x9, [sp, #8]
  408608:	tbnz	w10, #0, 408610 <ascii_strlower_n@plt+0x41b0>
  40860c:	b	40861c <ascii_strlower_n@plt+0x41bc>
  408610:	adrp	x0, 42e000 <ascii_strlower_n@plt+0x29ba0>
  408614:	add	x0, x0, #0x50b
  408618:	bl	403c50 <puts@plt>
  40861c:	ldr	x8, [sp, #8]
  408620:	ldr	x0, [x8]
  408624:	bl	403c60 <flockfile@plt>
  408628:	stur	wzr, [x29, #-4]
  40862c:	ldur	w8, [x29, #-4]
  408630:	cmp	w8, #0x100
  408634:	b.ge	408688 <ascii_strlower_n@plt+0x4228>  // b.tcont
  408638:	ldur	w8, [x29, #-4]
  40863c:	mov	w0, w8
  408640:	bl	42c0f0 <ascii_strlower_n@plt+0x27c90>
  408644:	str	x0, [sp, #16]
  408648:	ldr	x9, [sp, #16]
  40864c:	cbnz	x9, 408654 <ascii_strlower_n@plt+0x41f4>
  408650:	b	408678 <ascii_strlower_n@plt+0x4218>
  408654:	ldr	x0, [sp, #16]
  408658:	ldr	x8, [sp, #8]
  40865c:	ldr	x1, [x8]
  408660:	bl	403c70 <fputs_unlocked@plt>
  408664:	ldr	x8, [sp, #8]
  408668:	ldr	x1, [x8]
  40866c:	mov	w9, #0xa                   	// #10
  408670:	mov	w0, w9
  408674:	bl	403c80 <fputc_unlocked@plt>
  408678:	ldur	w8, [x29, #-4]
  40867c:	add	w8, w8, #0x1
  408680:	stur	w8, [x29, #-4]
  408684:	b	40862c <ascii_strlower_n@plt+0x41cc>
  408688:	ldr	x8, [sp, #8]
  40868c:	ldr	x0, [x8]
  408690:	bl	403c90 <funlockfile@plt>
  408694:	ldp	x29, x30, [sp, #32]
  408698:	add	sp, sp, #0x30
  40869c:	ret
  4086a0:	stp	x29, x30, [sp, #-16]!
  4086a4:	mov	x29, sp
  4086a8:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  4086ac:	add	x8, x8, #0x18
  4086b0:	ldrb	w9, [x8]
  4086b4:	tbnz	w9, #0, 4086bc <ascii_strlower_n@plt+0x425c>
  4086b8:	b	4086c8 <ascii_strlower_n@plt+0x4268>
  4086bc:	adrp	x0, 42e000 <ascii_strlower_n@plt+0x29ba0>
  4086c0:	add	x0, x0, #0x521
  4086c4:	bl	403c50 <puts@plt>
  4086c8:	adrp	x0, 42e000 <ascii_strlower_n@plt+0x29ba0>
  4086cc:	add	x0, x0, #0x537
  4086d0:	bl	403c50 <puts@plt>
  4086d4:	ldp	x29, x30, [sp], #16
  4086d8:	ret
  4086dc:	sub	sp, sp, #0x40
  4086e0:	stp	x29, x30, [sp, #48]
  4086e4:	add	x29, sp, #0x30
  4086e8:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  4086ec:	add	x8, x8, #0x20
  4086f0:	mov	x9, sp
  4086f4:	stur	x0, [x29, #-8]
  4086f8:	ldr	q0, [x8]
  4086fc:	str	q0, [sp]
  408700:	ldr	q0, [x8, #16]
  408704:	str	q0, [sp, #16]
  408708:	ldur	x1, [x29, #-8]
  40870c:	mov	x0, x9
  408710:	bl	403be0 <strv_find@plt>
  408714:	cmp	x0, #0x0
  408718:	cset	w10, ne  // ne = any
  40871c:	mov	w11, #0x1                   	// #1
  408720:	eor	w10, w10, #0x1
  408724:	eor	w10, w10, w11
  408728:	and	w0, w10, #0x1
  40872c:	ldp	x29, x30, [sp, #48]
  408730:	add	sp, sp, #0x40
  408734:	ret
  408738:	sub	sp, sp, #0x20
  40873c:	stp	x29, x30, [sp, #16]
  408740:	add	x29, sp, #0x10
  408744:	adrp	x8, 42e000 <ascii_strlower_n@plt+0x29ba0>
  408748:	add	x8, x8, #0x4e8
  40874c:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  408750:	add	x9, x9, #0x7e4
  408754:	str	x8, [sp, #8]
  408758:	str	x9, [sp]
  40875c:	bl	403ca0 <colors_enabled@plt>
  408760:	tst	w0, #0x1
  408764:	ldr	x8, [sp, #8]
  408768:	ldr	x9, [sp]
  40876c:	csel	x0, x8, x9, ne  // ne = any
  408770:	ldp	x29, x30, [sp, #16]
  408774:	add	sp, sp, #0x20
  408778:	ret
  40877c:	sub	sp, sp, #0x20
  408780:	stp	x29, x30, [sp, #16]
  408784:	add	x29, sp, #0x10
  408788:	adrp	x8, 42e000 <ascii_strlower_n@plt+0x29ba0>
  40878c:	add	x8, x8, #0x4f2
  408790:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  408794:	add	x9, x9, #0x7e4
  408798:	str	x8, [sp, #8]
  40879c:	str	x9, [sp]
  4087a0:	bl	403ca0 <colors_enabled@plt>
  4087a4:	tst	w0, #0x1
  4087a8:	ldr	x8, [sp, #8]
  4087ac:	ldr	x9, [sp]
  4087b0:	csel	x0, x8, x9, ne  // ne = any
  4087b4:	ldp	x29, x30, [sp, #16]
  4087b8:	add	sp, sp, #0x20
  4087bc:	ret
  4087c0:	sub	sp, sp, #0x60
  4087c4:	stp	x29, x30, [sp, #80]
  4087c8:	add	x29, sp, #0x50
  4087cc:	mov	x8, xzr
  4087d0:	adrp	x0, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4087d4:	add	x0, x0, #0x2b6
  4087d8:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4087dc:	add	x1, x1, #0x2c1
  4087e0:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4087e4:	add	x9, x9, #0x6f4
  4087e8:	add	x9, x9, #0x3
  4087ec:	sub	x2, x29, #0x10
  4087f0:	stur	x8, [x29, #-16]
  4087f4:	stur	x9, [x29, #-32]
  4087f8:	bl	403aa0 <terminal_urlify_man@plt>
  4087fc:	stur	w0, [x29, #-20]
  408800:	ldur	w10, [x29, #-20]
  408804:	cmp	w10, #0x0
  408808:	cset	w10, ge  // ge = tcont
  40880c:	tbnz	w10, #0, 40883c <ascii_strlower_n@plt+0x43dc>
  408810:	mov	w8, wzr
  408814:	mov	w0, w8
  408818:	ldur	x1, [x29, #-32]
  40881c:	mov	w2, #0x9de                 	// #2526
  408820:	adrp	x3, 42e000 <ascii_strlower_n@plt+0x29ba0>
  408824:	add	x3, x3, #0x5b3
  408828:	bl	403a90 <log_oom_internal@plt>
  40882c:	stur	w0, [x29, #-4]
  408830:	mov	w8, #0x1                   	// #1
  408834:	stur	w8, [x29, #-24]
  408838:	b	4088a0 <ascii_strlower_n@plt+0x4440>
  40883c:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  408840:	add	x8, x8, #0x1c8
  408844:	ldr	x1, [x8]
  408848:	str	x1, [sp, #40]
  40884c:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  408850:	str	x0, [sp, #32]
  408854:	bl	40877c <ascii_strlower_n@plt+0x431c>
  408858:	str	x0, [sp, #24]
  40885c:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  408860:	str	x0, [sp, #16]
  408864:	bl	40877c <ascii_strlower_n@plt+0x431c>
  408868:	ldur	x6, [x29, #-16]
  40886c:	adrp	x8, 42e000 <ascii_strlower_n@plt+0x29ba0>
  408870:	add	x8, x8, #0x5bf
  408874:	str	x0, [sp, #8]
  408878:	mov	x0, x8
  40887c:	ldr	x1, [sp, #40]
  408880:	ldr	x2, [sp, #32]
  408884:	ldr	x3, [sp, #24]
  408888:	ldr	x4, [sp, #16]
  40888c:	ldr	x5, [sp, #8]
  408890:	bl	403ab0 <printf@plt>
  408894:	stur	wzr, [x29, #-4]
  408898:	mov	w9, #0x1                   	// #1
  40889c:	stur	w9, [x29, #-24]
  4088a0:	sub	x0, x29, #0x10
  4088a4:	bl	405970 <ascii_strlower_n@plt+0x1510>
  4088a8:	ldur	w0, [x29, #-4]
  4088ac:	ldp	x29, x30, [sp, #80]
  4088b0:	add	sp, sp, #0x60
  4088b4:	ret
  4088b8:	stp	x29, x30, [sp, #-16]!
  4088bc:	mov	x29, sp
  4088c0:	sub	sp, sp, #0x90
  4088c4:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4088c8:	add	x8, x8, #0x6f4
  4088cc:	add	x8, x8, #0x3
  4088d0:	adrp	x9, 42e000 <ascii_strlower_n@plt+0x29ba0>
  4088d4:	add	x9, x9, #0xf5d
  4088d8:	stur	x0, [x29, #-8]
  4088dc:	stur	x1, [x29, #-16]
  4088e0:	stur	x2, [x29, #-24]
  4088e4:	stur	x3, [x29, #-32]
  4088e8:	stur	x4, [x29, #-40]
  4088ec:	stur	x8, [x29, #-120]
  4088f0:	stur	x9, [x29, #-128]
  4088f4:	ldur	x8, [x29, #-8]
  4088f8:	cmp	x8, #0x0
  4088fc:	cset	w9, ne  // ne = any
  408900:	mov	w10, #0x1                   	// #1
  408904:	eor	w9, w9, #0x1
  408908:	eor	w9, w9, w10
  40890c:	eor	w9, w9, w10
  408910:	and	w9, w9, #0x1
  408914:	mov	w0, w9
  408918:	sxtw	x8, w0
  40891c:	cbz	x8, 408940 <ascii_strlower_n@plt+0x44e0>
  408920:	mov	w8, wzr
  408924:	mov	w0, w8
  408928:	adrp	x1, 42e000 <ascii_strlower_n@plt+0x29ba0>
  40892c:	add	x1, x1, #0xf58
  408930:	ldur	x2, [x29, #-120]
  408934:	mov	w3, #0xc36                 	// #3126
  408938:	ldur	x4, [x29, #-128]
  40893c:	bl	4039d0 <log_assert_failed_realm@plt>
  408940:	ldur	x8, [x29, #-24]
  408944:	mov	w9, #0x1                   	// #1
  408948:	stur	w9, [x29, #-132]
  40894c:	cbz	x8, 408960 <ascii_strlower_n@plt+0x4500>
  408950:	ldur	x8, [x29, #-32]
  408954:	cmp	x8, #0x0
  408958:	cset	w9, ne  // ne = any
  40895c:	stur	w9, [x29, #-132]
  408960:	ldur	w8, [x29, #-132]
  408964:	mov	w9, #0x1                   	// #1
  408968:	eor	w8, w8, #0x1
  40896c:	eor	w8, w8, w9
  408970:	eor	w8, w8, w9
  408974:	and	w8, w8, #0x1
  408978:	mov	w0, w8
  40897c:	sxtw	x10, w0
  408980:	cbz	x10, 4089a4 <ascii_strlower_n@plt+0x4544>
  408984:	mov	w8, wzr
  408988:	mov	w0, w8
  40898c:	adrp	x1, 42e000 <ascii_strlower_n@plt+0x29ba0>
  408990:	add	x1, x1, #0xfa2
  408994:	ldur	x2, [x29, #-120]
  408998:	mov	w3, #0xc37                 	// #3127
  40899c:	ldur	x4, [x29, #-128]
  4089a0:	bl	4039d0 <log_assert_failed_realm@plt>
  4089a4:	ldur	x8, [x29, #-16]
  4089a8:	cmp	x8, #0x0
  4089ac:	cset	w9, ne  // ne = any
  4089b0:	mov	w10, #0x1                   	// #1
  4089b4:	eor	w9, w9, #0x1
  4089b8:	eor	w9, w9, w10
  4089bc:	and	w9, w9, #0x1
  4089c0:	ldur	x8, [x29, #-24]
  4089c4:	add	x8, x8, w9, sxtw
  4089c8:	add	x8, x8, #0x1
  4089cc:	stur	x8, [x29, #-64]
  4089d0:	ldur	x8, [x29, #-64]
  4089d4:	add	x8, x8, #0x1
  4089d8:	stur	x8, [x29, #-80]
  4089dc:	ldur	x1, [x29, #-80]
  4089e0:	mov	x0, #0x8                   	// #8
  4089e4:	bl	408be0 <ascii_strlower_n@plt+0x4780>
  4089e8:	mov	w8, #0x1                   	// #1
  4089ec:	eor	w9, w0, #0x1
  4089f0:	eor	w9, w9, w8
  4089f4:	eor	w9, w9, w8
  4089f8:	eor	w8, w9, w8
  4089fc:	and	w8, w8, #0x1
  408a00:	mov	w1, w8
  408a04:	sxtw	x10, w1
  408a08:	cbz	x10, 408a2c <ascii_strlower_n@plt+0x45cc>
  408a0c:	mov	w8, wzr
  408a10:	mov	w0, w8
  408a14:	adrp	x1, 42e000 <ascii_strlower_n@plt+0x29ba0>
  408a18:	add	x1, x1, #0xfb8
  408a1c:	ldur	x2, [x29, #-120]
  408a20:	mov	w3, #0xc3b                 	// #3131
  408a24:	ldur	x4, [x29, #-128]
  408a28:	bl	4039d0 <log_assert_failed_realm@plt>
  408a2c:	ldur	x8, [x29, #-80]
  408a30:	mov	x9, #0x8                   	// #8
  408a34:	mul	x8, x9, x8
  408a38:	cmp	x8, #0x400, lsl #12
  408a3c:	cset	w10, ls  // ls = plast
  408a40:	mov	w11, #0x1                   	// #1
  408a44:	eor	w10, w10, #0x1
  408a48:	eor	w10, w10, w11
  408a4c:	eor	w10, w10, w11
  408a50:	and	w10, w10, #0x1
  408a54:	mov	w0, w10
  408a58:	sxtw	x8, w0
  408a5c:	cbz	x8, 408a80 <ascii_strlower_n@plt+0x4620>
  408a60:	mov	w8, wzr
  408a64:	mov	w0, w8
  408a68:	adrp	x1, 42e000 <ascii_strlower_n@plt+0x29ba0>
  408a6c:	add	x1, x1, #0xfe5
  408a70:	ldur	x2, [x29, #-120]
  408a74:	mov	w3, #0xc3b                 	// #3131
  408a78:	ldur	x4, [x29, #-128]
  408a7c:	bl	4039d0 <log_assert_failed_realm@plt>
  408a80:	ldur	x8, [x29, #-80]
  408a84:	mov	x9, #0x8                   	// #8
  408a88:	mul	x8, x9, x8
  408a8c:	stur	x8, [x29, #-104]
  408a90:	ldur	x8, [x29, #-104]
  408a94:	cmp	x8, #0x400, lsl #12
  408a98:	cset	w9, ls  // ls = plast
  408a9c:	mov	w10, #0x1                   	// #1
  408aa0:	eor	w9, w9, #0x1
  408aa4:	eor	w9, w9, w10
  408aa8:	eor	w9, w9, w10
  408aac:	and	w9, w9, #0x1
  408ab0:	mov	w0, w9
  408ab4:	sxtw	x8, w0
  408ab8:	cbz	x8, 408adc <ascii_strlower_n@plt+0x467c>
  408abc:	mov	w8, wzr
  408ac0:	mov	w0, w8
  408ac4:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  408ac8:	add	x1, x1, #0x6
  408acc:	ldur	x2, [x29, #-120]
  408ad0:	mov	w3, #0xc3b                 	// #3131
  408ad4:	ldur	x4, [x29, #-128]
  408ad8:	bl	4039d0 <log_assert_failed_realm@plt>
  408adc:	ldur	x8, [x29, #-104]
  408ae0:	mov	x9, #0x1                   	// #1
  408ae4:	mul	x8, x8, x9
  408ae8:	add	x8, x8, #0xf
  408aec:	and	x8, x8, #0xfffffffffffffff0
  408af0:	mov	x9, sp
  408af4:	subs	x8, x9, x8
  408af8:	mov	sp, x8
  408afc:	stur	x8, [x29, #-96]
  408b00:	ldur	x8, [x29, #-96]
  408b04:	ldur	x2, [x29, #-104]
  408b08:	mov	x0, x8
  408b0c:	mov	w10, wzr
  408b10:	mov	w1, w10
  408b14:	stur	x8, [x29, #-144]
  408b18:	bl	403cb0 <memset@plt>
  408b1c:	ldur	x8, [x29, #-144]
  408b20:	stur	x8, [x29, #-112]
  408b24:	ldur	x9, [x29, #-112]
  408b28:	stur	x9, [x29, #-88]
  408b2c:	ldur	x9, [x29, #-88]
  408b30:	stur	x9, [x29, #-48]
  408b34:	stur	x9, [x29, #-56]
  408b38:	ldur	x9, [x29, #-8]
  408b3c:	ldur	x11, [x29, #-56]
  408b40:	add	x12, x11, #0x8
  408b44:	stur	x12, [x29, #-56]
  408b48:	str	x9, [x11]
  408b4c:	ldur	x9, [x29, #-16]
  408b50:	cbz	x9, 408b68 <ascii_strlower_n@plt+0x4708>
  408b54:	ldur	x8, [x29, #-16]
  408b58:	ldur	x9, [x29, #-56]
  408b5c:	add	x10, x9, #0x8
  408b60:	stur	x10, [x29, #-56]
  408b64:	str	x8, [x9]
  408b68:	stur	xzr, [x29, #-72]
  408b6c:	ldur	x8, [x29, #-72]
  408b70:	ldur	x9, [x29, #-24]
  408b74:	cmp	x8, x9
  408b78:	b.cs	408bb4 <ascii_strlower_n@plt+0x4754>  // b.hs, b.nlast
  408b7c:	ldur	x8, [x29, #-32]
  408b80:	ldur	x9, [x29, #-72]
  408b84:	mov	x10, #0x8                   	// #8
  408b88:	mul	x9, x10, x9
  408b8c:	add	x8, x8, x9
  408b90:	ldr	x8, [x8]
  408b94:	ldur	x9, [x29, #-56]
  408b98:	add	x10, x9, #0x8
  408b9c:	stur	x10, [x29, #-56]
  408ba0:	str	x8, [x9]
  408ba4:	ldur	x8, [x29, #-72]
  408ba8:	add	x8, x8, #0x1
  408bac:	stur	x8, [x29, #-72]
  408bb0:	b	408b6c <ascii_strlower_n@plt+0x470c>
  408bb4:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  408bb8:	add	x8, x8, #0x1b8
  408bbc:	str	wzr, [x8]
  408bc0:	ldur	x8, [x29, #-64]
  408bc4:	ldur	x1, [x29, #-48]
  408bc8:	ldur	x2, [x29, #-40]
  408bcc:	mov	w0, w8
  408bd0:	bl	408408 <ascii_strlower_n@plt+0x3fa8>
  408bd4:	mov	sp, x29
  408bd8:	ldp	x29, x30, [sp], #16
  408bdc:	ret
  408be0:	sub	sp, sp, #0x20
  408be4:	str	x0, [sp, #24]
  408be8:	str	x1, [sp, #16]
  408bec:	ldr	x8, [sp, #16]
  408bf0:	mov	w9, #0x0                   	// #0
  408bf4:	str	w9, [sp, #12]
  408bf8:	cbz	x8, 408c18 <ascii_strlower_n@plt+0x47b8>
  408bfc:	ldr	x8, [sp, #24]
  408c00:	ldr	x9, [sp, #16]
  408c04:	mov	x10, #0xffffffffffffffff    	// #-1
  408c08:	udiv	x9, x10, x9
  408c0c:	cmp	x8, x9
  408c10:	cset	w11, hi  // hi = pmore
  408c14:	str	w11, [sp, #12]
  408c18:	ldr	w8, [sp, #12]
  408c1c:	mov	w9, #0x1                   	// #1
  408c20:	eor	w8, w8, #0x1
  408c24:	eor	w8, w8, w9
  408c28:	and	w8, w8, #0x1
  408c2c:	mov	w0, w8
  408c30:	sxtw	x10, w0
  408c34:	cmp	x10, #0x0
  408c38:	cset	w8, ne  // ne = any
  408c3c:	and	w0, w8, #0x1
  408c40:	add	sp, sp, #0x20
  408c44:	ret
  408c48:	sub	sp, sp, #0x30
  408c4c:	stp	x29, x30, [sp, #32]
  408c50:	add	x29, sp, #0x20
  408c54:	stur	w0, [x29, #-4]
  408c58:	str	x1, [sp, #16]
  408c5c:	str	x2, [sp, #8]
  408c60:	bl	4087c0 <ascii_strlower_n@plt+0x4360>
  408c64:	ldp	x29, x30, [sp, #32]
  408c68:	add	sp, sp, #0x30
  408c6c:	ret
  408c70:	sub	sp, sp, #0x70
  408c74:	stp	x29, x30, [sp, #96]
  408c78:	add	x29, sp, #0x60
  408c7c:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  408c80:	add	x8, x8, #0x6f4
  408c84:	add	x8, x8, #0x3
  408c88:	stur	w0, [x29, #-4]
  408c8c:	stur	x1, [x29, #-16]
  408c90:	stur	x2, [x29, #-24]
  408c94:	ldur	x9, [x29, #-24]
  408c98:	stur	x9, [x29, #-32]
  408c9c:	stur	wzr, [x29, #-40]
  408ca0:	ldur	w10, [x29, #-4]
  408ca4:	cmp	w10, #0x1
  408ca8:	str	x8, [sp, #16]
  408cac:	b.le	408df0 <ascii_strlower_n@plt+0x4990>
  408cb0:	mov	w8, #0x0                   	// #0
  408cb4:	strb	w8, [sp, #47]
  408cb8:	ldur	x9, [x29, #-16]
  408cbc:	add	x9, x9, #0x8
  408cc0:	str	x9, [sp, #48]
  408cc4:	ldr	x8, [sp, #48]
  408cc8:	mov	w9, #0x0                   	// #0
  408ccc:	str	w9, [sp, #12]
  408cd0:	cbz	x8, 408ce8 <ascii_strlower_n@plt+0x4888>
  408cd4:	ldr	x8, [sp, #48]
  408cd8:	ldr	x8, [x8]
  408cdc:	cmp	x8, #0x0
  408ce0:	cset	w9, ne  // ne = any
  408ce4:	str	w9, [sp, #12]
  408ce8:	ldr	w8, [sp, #12]
  408cec:	tbnz	w8, #0, 408cf4 <ascii_strlower_n@plt+0x4894>
  408cf0:	b	408dec <ascii_strlower_n@plt+0x498c>
  408cf4:	ldr	x8, [sp, #48]
  408cf8:	ldr	x0, [x8]
  408cfc:	add	x1, sp, #0x28
  408d00:	bl	403b30 <parse_ifindex_or_ifname@plt>
  408d04:	stur	w0, [x29, #-36]
  408d08:	ldur	w9, [x29, #-36]
  408d0c:	cmp	w9, #0x0
  408d10:	cset	w9, ge  // ge = tcont
  408d14:	tbnz	w9, #0, 408da0 <ascii_strlower_n@plt+0x4940>
  408d18:	mov	w8, #0x3                   	// #3
  408d1c:	str	w8, [sp, #36]
  408d20:	ldur	w8, [x29, #-36]
  408d24:	str	w8, [sp, #32]
  408d28:	str	wzr, [sp, #28]
  408d2c:	ldr	w0, [sp, #28]
  408d30:	bl	403a10 <log_get_max_level_realm@plt>
  408d34:	ldr	w8, [sp, #36]
  408d38:	and	w8, w8, #0x7
  408d3c:	cmp	w0, w8
  408d40:	b.lt	408d80 <ascii_strlower_n@plt+0x4920>  // b.tstop
  408d44:	ldr	w8, [sp, #28]
  408d48:	ldr	w9, [sp, #36]
  408d4c:	orr	w0, w9, w8, lsl #10
  408d50:	ldr	w1, [sp, #32]
  408d54:	ldr	x10, [sp, #48]
  408d58:	ldr	x6, [x10]
  408d5c:	ldr	x2, [sp, #16]
  408d60:	mov	w3, #0x729                 	// #1833
  408d64:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  408d68:	add	x4, x4, #0x28
  408d6c:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  408d70:	add	x5, x5, #0x34
  408d74:	bl	403a20 <log_internal_realm@plt>
  408d78:	str	w0, [sp, #8]
  408d7c:	b	408d94 <ascii_strlower_n@plt+0x4934>
  408d80:	ldr	w0, [sp, #32]
  408d84:	bl	403a30 <abs@plt>
  408d88:	mov	w8, wzr
  408d8c:	subs	w8, w8, w0, uxtb
  408d90:	str	w8, [sp, #8]
  408d94:	ldr	w8, [sp, #8]
  408d98:	str	w8, [sp, #24]
  408d9c:	b	408ddc <ascii_strlower_n@plt+0x497c>
  408da0:	ldur	x0, [x29, #-32]
  408da4:	ldr	w1, [sp, #40]
  408da8:	mov	x8, xzr
  408dac:	mov	x2, x8
  408db0:	mov	w9, wzr
  408db4:	mov	w3, w9
  408db8:	add	x4, sp, #0x2f
  408dbc:	bl	40bf80 <ascii_strlower_n@plt+0x7b20>
  408dc0:	stur	w0, [x29, #-36]
  408dc4:	ldur	w9, [x29, #-36]
  408dc8:	cmp	w9, #0x0
  408dcc:	cset	w9, ge  // ge = tcont
  408dd0:	tbnz	w9, #0, 408ddc <ascii_strlower_n@plt+0x497c>
  408dd4:	ldur	w8, [x29, #-36]
  408dd8:	stur	w8, [x29, #-40]
  408ddc:	ldr	x8, [sp, #48]
  408de0:	add	x8, x8, #0x8
  408de4:	str	x8, [sp, #48]
  408de8:	b	408cc4 <ascii_strlower_n@plt+0x4864>
  408dec:	b	408e04 <ascii_strlower_n@plt+0x49a4>
  408df0:	ldur	x0, [x29, #-32]
  408df4:	mov	w8, wzr
  408df8:	mov	w1, w8
  408dfc:	bl	40c9a4 <ascii_strlower_n@plt+0x8544>
  408e00:	stur	w0, [x29, #-40]
  408e04:	ldur	w0, [x29, #-40]
  408e08:	ldp	x29, x30, [sp, #96]
  408e0c:	add	sp, sp, #0x70
  408e10:	ret
  408e14:	sub	sp, sp, #0x60
  408e18:	stp	x29, x30, [sp, #80]
  408e1c:	add	x29, sp, #0x50
  408e20:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  408e24:	add	x8, x8, #0x178
  408e28:	stur	w0, [x29, #-4]
  408e2c:	stur	x1, [x29, #-16]
  408e30:	stur	x2, [x29, #-24]
  408e34:	ldur	x9, [x29, #-24]
  408e38:	stur	x9, [x29, #-32]
  408e3c:	str	wzr, [sp, #32]
  408e40:	ldrh	w10, [x8]
  408e44:	cbz	w10, 408ee4 <ascii_strlower_n@plt+0x4a84>
  408e48:	ldur	x8, [x29, #-16]
  408e4c:	add	x8, x8, #0x8
  408e50:	str	x8, [sp, #40]
  408e54:	ldr	x8, [sp, #40]
  408e58:	mov	w9, #0x0                   	// #0
  408e5c:	str	w9, [sp, #4]
  408e60:	cbz	x8, 408e78 <ascii_strlower_n@plt+0x4a18>
  408e64:	ldr	x8, [sp, #40]
  408e68:	ldr	x8, [x8]
  408e6c:	cmp	x8, #0x0
  408e70:	cset	w9, ne  // ne = any
  408e74:	str	w9, [sp, #4]
  408e78:	ldr	w8, [sp, #4]
  408e7c:	tbnz	w8, #0, 408e84 <ascii_strlower_n@plt+0x4a24>
  408e80:	b	408ee0 <ascii_strlower_n@plt+0x4a80>
  408e84:	ldur	x0, [x29, #-32]
  408e88:	ldr	x8, [sp, #40]
  408e8c:	ldr	x1, [x8]
  408e90:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  408e94:	add	x8, x8, #0x17a
  408e98:	ldrh	w2, [x8]
  408e9c:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  408ea0:	add	x8, x8, #0x178
  408ea4:	ldrh	w3, [x8]
  408ea8:	mov	w9, #0x1                   	// #1
  408eac:	and	w4, w9, #0x1
  408eb0:	bl	40ed5c <ascii_strlower_n@plt+0xa8fc>
  408eb4:	str	w0, [sp, #36]
  408eb8:	ldr	w9, [sp, #36]
  408ebc:	cmp	w9, #0x0
  408ec0:	cset	w9, ge  // ge = tcont
  408ec4:	tbnz	w9, #0, 408ed0 <ascii_strlower_n@plt+0x4a70>
  408ec8:	ldr	w8, [sp, #36]
  408ecc:	str	w8, [sp, #32]
  408ed0:	ldr	x8, [sp, #40]
  408ed4:	add	x8, x8, #0x8
  408ed8:	str	x8, [sp, #40]
  408edc:	b	408e54 <ascii_strlower_n@plt+0x49f4>
  408ee0:	b	408fd4 <ascii_strlower_n@plt+0x4b74>
  408ee4:	ldur	x8, [x29, #-16]
  408ee8:	add	x8, x8, #0x8
  408eec:	str	x8, [sp, #40]
  408ef0:	ldr	x8, [sp, #40]
  408ef4:	mov	w9, #0x0                   	// #0
  408ef8:	str	w9, [sp]
  408efc:	cbz	x8, 408f14 <ascii_strlower_n@plt+0x4ab4>
  408f00:	ldr	x8, [sp, #40]
  408f04:	ldr	x8, [x8]
  408f08:	cmp	x8, #0x0
  408f0c:	cset	w9, ne  // ne = any
  408f10:	str	w9, [sp]
  408f14:	ldr	w8, [sp]
  408f18:	tbnz	w8, #0, 408f20 <ascii_strlower_n@plt+0x4ac0>
  408f1c:	b	408fd4 <ascii_strlower_n@plt+0x4b74>
  408f20:	ldr	x8, [sp, #40]
  408f24:	ldr	x0, [x8]
  408f28:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  408f2c:	add	x1, x1, #0x91e
  408f30:	bl	40f8d8 <ascii_strlower_n@plt+0xb478>
  408f34:	cbz	x0, 408f50 <ascii_strlower_n@plt+0x4af0>
  408f38:	ldur	x0, [x29, #-32]
  408f3c:	ldr	x8, [sp, #40]
  408f40:	ldr	x1, [x8]
  408f44:	bl	40f938 <ascii_strlower_n@plt+0xb4d8>
  408f48:	str	w0, [sp, #36]
  408f4c:	b	408fac <ascii_strlower_n@plt+0x4b4c>
  408f50:	ldr	x8, [sp, #40]
  408f54:	ldr	x0, [x8]
  408f58:	add	x1, sp, #0x1c
  408f5c:	add	x2, sp, #0x8
  408f60:	add	x3, sp, #0x18
  408f64:	bl	403cc0 <in_addr_ifindex_from_string_auto@plt>
  408f68:	str	w0, [sp, #36]
  408f6c:	ldr	w9, [sp, #36]
  408f70:	cmp	w9, #0x0
  408f74:	cset	w9, lt  // lt = tstop
  408f78:	tbnz	w9, #0, 408f98 <ascii_strlower_n@plt+0x4b38>
  408f7c:	ldur	x0, [x29, #-32]
  408f80:	ldr	w1, [sp, #28]
  408f84:	ldr	w3, [sp, #24]
  408f88:	add	x2, sp, #0x8
  408f8c:	bl	410254 <ascii_strlower_n@plt+0xbdf4>
  408f90:	str	w0, [sp, #36]
  408f94:	b	408fac <ascii_strlower_n@plt+0x4b4c>
  408f98:	ldur	x0, [x29, #-32]
  408f9c:	ldr	x8, [sp, #40]
  408fa0:	ldr	x1, [x8]
  408fa4:	bl	410e34 <ascii_strlower_n@plt+0xc9d4>
  408fa8:	str	w0, [sp, #36]
  408fac:	ldr	w8, [sp, #36]
  408fb0:	cmp	w8, #0x0
  408fb4:	cset	w8, ge  // ge = tcont
  408fb8:	tbnz	w8, #0, 408fc4 <ascii_strlower_n@plt+0x4b64>
  408fbc:	ldr	w8, [sp, #36]
  408fc0:	str	w8, [sp, #32]
  408fc4:	ldr	x8, [sp, #40]
  408fc8:	add	x8, x8, #0x8
  408fcc:	str	x8, [sp, #40]
  408fd0:	b	408ef0 <ascii_strlower_n@plt+0x4a90>
  408fd4:	ldr	w0, [sp, #32]
  408fd8:	ldp	x29, x30, [sp, #80]
  408fdc:	add	sp, sp, #0x60
  408fe0:	ret
  408fe4:	sub	sp, sp, #0x30
  408fe8:	stp	x29, x30, [sp, #32]
  408fec:	add	x29, sp, #0x20
  408ff0:	stur	w0, [x29, #-8]
  408ff4:	str	x1, [sp, #16]
  408ff8:	str	x2, [sp, #8]
  408ffc:	ldr	x8, [sp, #8]
  409000:	str	x8, [sp]
  409004:	ldur	w9, [x29, #-8]
  409008:	cmp	w9, #0x2
  40900c:	b.ne	409034 <ascii_strlower_n@plt+0x4bd4>  // b.any
  409010:	ldr	x0, [sp]
  409014:	ldr	x8, [sp, #16]
  409018:	ldr	x3, [x8, #8]
  40901c:	mov	x8, xzr
  409020:	mov	x1, x8
  409024:	mov	x2, x8
  409028:	bl	4124b8 <ascii_strlower_n@plt+0xe058>
  40902c:	stur	w0, [x29, #-4]
  409030:	b	40908c <ascii_strlower_n@plt+0x4c2c>
  409034:	ldur	w8, [x29, #-8]
  409038:	cmp	w8, #0x3
  40903c:	b.ne	409068 <ascii_strlower_n@plt+0x4c08>  // b.any
  409040:	ldr	x0, [sp]
  409044:	ldr	x8, [sp, #16]
  409048:	ldr	x2, [x8, #8]
  40904c:	ldr	x8, [sp, #16]
  409050:	ldr	x3, [x8, #16]
  409054:	mov	x8, xzr
  409058:	mov	x1, x8
  40905c:	bl	4124b8 <ascii_strlower_n@plt+0xe058>
  409060:	stur	w0, [x29, #-4]
  409064:	b	40908c <ascii_strlower_n@plt+0x4c2c>
  409068:	ldr	x0, [sp]
  40906c:	ldr	x8, [sp, #16]
  409070:	ldr	x1, [x8, #8]
  409074:	ldr	x8, [sp, #16]
  409078:	ldr	x2, [x8, #16]
  40907c:	ldr	x8, [sp, #16]
  409080:	ldr	x3, [x8, #24]
  409084:	bl	4124b8 <ascii_strlower_n@plt+0xe058>
  409088:	stur	w0, [x29, #-4]
  40908c:	ldur	w0, [x29, #-4]
  409090:	ldp	x29, x30, [sp, #32]
  409094:	add	sp, sp, #0x30
  409098:	ret
  40909c:	sub	sp, sp, #0x50
  4090a0:	stp	x29, x30, [sp, #64]
  4090a4:	add	x29, sp, #0x40
  4090a8:	stur	w0, [x29, #-4]
  4090ac:	stur	x1, [x29, #-16]
  4090b0:	stur	x2, [x29, #-24]
  4090b4:	ldur	x8, [x29, #-24]
  4090b8:	str	x8, [sp, #32]
  4090bc:	str	wzr, [sp, #16]
  4090c0:	ldur	x8, [x29, #-16]
  4090c4:	add	x8, x8, #0x8
  4090c8:	str	x8, [sp, #24]
  4090cc:	ldr	x8, [sp, #24]
  4090d0:	mov	w9, #0x0                   	// #0
  4090d4:	str	w9, [sp, #12]
  4090d8:	cbz	x8, 4090f0 <ascii_strlower_n@plt+0x4c90>
  4090dc:	ldr	x8, [sp, #24]
  4090e0:	ldr	x8, [x8]
  4090e4:	cmp	x8, #0x0
  4090e8:	cset	w9, ne  // ne = any
  4090ec:	str	w9, [sp, #12]
  4090f0:	ldr	w8, [sp, #12]
  4090f4:	tbnz	w8, #0, 4090fc <ascii_strlower_n@plt+0x4c9c>
  4090f8:	b	409138 <ascii_strlower_n@plt+0x4cd8>
  4090fc:	ldr	x0, [sp, #32]
  409100:	ldr	x8, [sp, #24]
  409104:	ldr	x1, [x8]
  409108:	bl	413e5c <ascii_strlower_n@plt+0xf9fc>
  40910c:	str	w0, [sp, #20]
  409110:	ldr	w9, [sp, #20]
  409114:	cmp	w9, #0x0
  409118:	cset	w9, ge  // ge = tcont
  40911c:	tbnz	w9, #0, 409128 <ascii_strlower_n@plt+0x4cc8>
  409120:	ldr	w8, [sp, #20]
  409124:	str	w8, [sp, #16]
  409128:	ldr	x8, [sp, #24]
  40912c:	add	x8, x8, #0x8
  409130:	str	x8, [sp, #24]
  409134:	b	4090cc <ascii_strlower_n@plt+0x4c6c>
  409138:	ldr	w0, [sp, #16]
  40913c:	ldp	x29, x30, [sp, #64]
  409140:	add	sp, sp, #0x50
  409144:	ret
  409148:	sub	sp, sp, #0x60
  40914c:	stp	x29, x30, [sp, #80]
  409150:	add	x29, sp, #0x50
  409154:	adrp	x8, 42e000 <ascii_strlower_n@plt+0x29ba0>
  409158:	add	x8, x8, #0x570
  40915c:	stur	w0, [x29, #-4]
  409160:	stur	x1, [x29, #-16]
  409164:	stur	x2, [x29, #-24]
  409168:	ldur	x9, [x29, #-24]
  40916c:	stur	x9, [x29, #-32]
  409170:	ldur	x9, [x29, #-16]
  409174:	add	x9, x9, #0x8
  409178:	str	x9, [sp, #32]
  40917c:	str	x8, [sp, #24]
  409180:	str	wzr, [sp, #16]
  409184:	ldur	x8, [x29, #-16]
  409188:	ldr	x0, [x8, #8]
  40918c:	bl	4086dc <ascii_strlower_n@plt+0x427c>
  409190:	tbnz	w0, #0, 409198 <ascii_strlower_n@plt+0x4d38>
  409194:	b	4091b0 <ascii_strlower_n@plt+0x4d50>
  409198:	ldur	x8, [x29, #-16]
  40919c:	ldr	x8, [x8, #8]
  4091a0:	str	x8, [sp, #24]
  4091a4:	ldr	x8, [sp, #32]
  4091a8:	add	x8, x8, #0x8
  4091ac:	str	x8, [sp, #32]
  4091b0:	ldr	x8, [sp, #32]
  4091b4:	str	x8, [sp, #40]
  4091b8:	ldr	x8, [sp, #40]
  4091bc:	mov	w9, #0x0                   	// #0
  4091c0:	str	w9, [sp, #12]
  4091c4:	cbz	x8, 4091dc <ascii_strlower_n@plt+0x4d7c>
  4091c8:	ldr	x8, [sp, #40]
  4091cc:	ldr	x8, [x8]
  4091d0:	cmp	x8, #0x0
  4091d4:	cset	w9, ne  // ne = any
  4091d8:	str	w9, [sp, #12]
  4091dc:	ldr	w8, [sp, #12]
  4091e0:	tbnz	w8, #0, 4091e8 <ascii_strlower_n@plt+0x4d88>
  4091e4:	b	409228 <ascii_strlower_n@plt+0x4dc8>
  4091e8:	ldur	x0, [x29, #-32]
  4091ec:	ldr	x1, [sp, #24]
  4091f0:	ldr	x8, [sp, #40]
  4091f4:	ldr	x2, [x8]
  4091f8:	bl	4149a0 <ascii_strlower_n@plt+0x10540>
  4091fc:	str	w0, [sp, #20]
  409200:	ldr	w9, [sp, #20]
  409204:	cmp	w9, #0x0
  409208:	cset	w9, ge  // ge = tcont
  40920c:	tbnz	w9, #0, 409218 <ascii_strlower_n@plt+0x4db8>
  409210:	ldr	w8, [sp, #20]
  409214:	str	w8, [sp, #16]
  409218:	ldr	x8, [sp, #40]
  40921c:	add	x8, x8, #0x8
  409220:	str	x8, [sp, #40]
  409224:	b	4091b8 <ascii_strlower_n@plt+0x4d58>
  409228:	ldr	w0, [sp, #16]
  40922c:	ldp	x29, x30, [sp, #80]
  409230:	add	sp, sp, #0x60
  409234:	ret
  409238:	stp	x29, x30, [sp, #-32]!
  40923c:	str	x28, [sp, #16]
  409240:	mov	x29, sp
  409244:	sub	sp, sp, #0x200
  409248:	sub	x8, x29, #0x80
  40924c:	mov	x9, xzr
  409250:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409254:	add	x10, x10, #0x1aa
  409258:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40925c:	add	x11, x11, #0x6e5
  409260:	adrp	x12, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409264:	add	x12, x12, #0x9a2
  409268:	adrp	x13, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40926c:	add	x13, x13, #0x6f4
  409270:	add	x13, x13, #0x3
  409274:	adrp	x14, 430000 <ascii_strlower_n@plt+0x2bba0>
  409278:	add	x14, x14, #0x33c
  40927c:	adrp	x15, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409280:	add	x15, x15, #0xa1c
  409284:	stur	w0, [x29, #-8]
  409288:	str	x1, [x8, #112]
  40928c:	str	x2, [x8, #104]
  409290:	str	xzr, [x8, #80]
  409294:	str	xzr, [x8, #88]
  409298:	str	xzr, [x8, #96]
  40929c:	str	x9, [x8, #72]
  4092a0:	ldr	x9, [x8, #104]
  4092a4:	str	x9, [x8, #64]
  4092a8:	str	x8, [sp, #240]
  4092ac:	str	x10, [sp, #232]
  4092b0:	str	x11, [sp, #224]
  4092b4:	str	x12, [sp, #216]
  4092b8:	str	x13, [sp, #208]
  4092bc:	str	x14, [sp, #200]
  4092c0:	str	x15, [sp, #192]
  4092c4:	ldr	x8, [sp, #240]
  4092c8:	ldr	x9, [x8, #64]
  4092cc:	cmp	x9, #0x0
  4092d0:	cset	w10, ne  // ne = any
  4092d4:	mov	w11, #0x1                   	// #1
  4092d8:	eor	w10, w10, #0x1
  4092dc:	eor	w10, w10, w11
  4092e0:	eor	w10, w10, w11
  4092e4:	and	w10, w10, #0x1
  4092e8:	mov	w0, w10
  4092ec:	sxtw	x9, w0
  4092f0:	cbz	x9, 409318 <ascii_strlower_n@plt+0x4eb8>
  4092f4:	mov	w8, wzr
  4092f8:	mov	w0, w8
  4092fc:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409300:	add	x1, x1, #0xf8
  409304:	ldr	x2, [sp, #208]
  409308:	mov	w3, #0x3e0                 	// #992
  40930c:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  409310:	add	x4, x4, #0x312
  409314:	bl	4039d0 <log_assert_failed_realm@plt>
  409318:	ldr	x8, [sp, #240]
  40931c:	ldr	x0, [x8, #64]
  409320:	ldr	x1, [sp, #232]
  409324:	ldr	x2, [sp, #224]
  409328:	ldr	x3, [sp, #216]
  40932c:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409330:	add	x4, x4, #0xe8
  409334:	sub	x5, x29, #0x30
  409338:	mov	w6, #0x62                  	// #98
  40933c:	sub	x7, x29, #0x90
  409340:	bl	403cd0 <sd_bus_get_property_trivial@plt>
  409344:	stur	w0, [x29, #-140]
  409348:	ldur	w9, [x29, #-140]
  40934c:	cmp	w9, #0x0
  409350:	cset	w9, ge  // ge = tcont
  409354:	tbnz	w9, #0, 409414 <ascii_strlower_n@plt+0x4fb4>
  409358:	mov	w8, #0x3                   	// #3
  40935c:	stur	w8, [x29, #-148]
  409360:	ldur	w8, [x29, #-140]
  409364:	stur	w8, [x29, #-152]
  409368:	stur	wzr, [x29, #-156]
  40936c:	ldur	w0, [x29, #-156]
  409370:	bl	403a10 <log_get_max_level_realm@plt>
  409374:	ldur	w8, [x29, #-148]
  409378:	and	w8, w8, #0x7
  40937c:	cmp	w0, w8
  409380:	b.lt	4093e4 <ascii_strlower_n@plt+0x4f84>  // b.tstop
  409384:	ldur	w8, [x29, #-156]
  409388:	ldur	w9, [x29, #-148]
  40938c:	orr	w0, w9, w8, lsl #10
  409390:	ldur	w1, [x29, #-152]
  409394:	ldur	w8, [x29, #-140]
  409398:	sub	x10, x29, #0x30
  40939c:	str	w0, [sp, #188]
  4093a0:	mov	x0, x10
  4093a4:	str	w1, [sp, #184]
  4093a8:	mov	w1, w8
  4093ac:	bl	403ce0 <bus_error_message@plt>
  4093b0:	ldr	w8, [sp, #188]
  4093b4:	str	x0, [sp, #176]
  4093b8:	mov	w0, w8
  4093bc:	ldr	w1, [sp, #184]
  4093c0:	ldr	x2, [sp, #208]
  4093c4:	mov	w3, #0x3eb                 	// #1003
  4093c8:	ldr	x4, [sp, #200]
  4093cc:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  4093d0:	add	x5, x5, #0x34c
  4093d4:	ldr	x6, [sp, #176]
  4093d8:	bl	403a20 <log_internal_realm@plt>
  4093dc:	str	w0, [sp, #172]
  4093e0:	b	4093f8 <ascii_strlower_n@plt+0x4f98>
  4093e4:	ldur	w0, [x29, #-152]
  4093e8:	bl	403a30 <abs@plt>
  4093ec:	mov	w8, wzr
  4093f0:	subs	w8, w8, w0, uxtb
  4093f4:	str	w8, [sp, #172]
  4093f8:	ldr	w8, [sp, #172]
  4093fc:	stur	w8, [x29, #-160]
  409400:	ldur	w8, [x29, #-160]
  409404:	stur	w8, [x29, #-4]
  409408:	mov	w8, #0x1                   	// #1
  40940c:	stur	w8, [x29, #-164]
  409410:	b	409a80 <ascii_strlower_n@plt+0x5620>
  409414:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  409418:	ldur	w8, [x29, #-144]
  40941c:	cmp	w8, #0x0
  409420:	cset	w8, ne  // ne = any
  409424:	and	w8, w8, #0x1
  409428:	str	x0, [sp, #160]
  40942c:	mov	w0, w8
  409430:	bl	40d600 <ascii_strlower_n@plt+0x91a0>
  409434:	str	x0, [sp, #152]
  409438:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40943c:	adrp	x9, 430000 <ascii_strlower_n@plt+0x2bba0>
  409440:	add	x9, x9, #0x375
  409444:	str	x0, [sp, #144]
  409448:	mov	x0, x9
  40944c:	ldr	x1, [sp, #160]
  409450:	ldr	x2, [sp, #152]
  409454:	ldr	x3, [sp, #144]
  409458:	bl	403ab0 <printf@plt>
  40945c:	ldr	x9, [sp, #240]
  409460:	ldr	x10, [x9, #64]
  409464:	mov	x0, x10
  409468:	ldr	x1, [sp, #232]
  40946c:	ldr	x2, [sp, #224]
  409470:	ldr	x3, [sp, #216]
  409474:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  409478:	add	x4, x4, #0x3a3
  40947c:	sub	x5, x29, #0x30
  409480:	sub	x6, x29, #0x38
  409484:	adrp	x7, 430000 <ascii_strlower_n@plt+0x2bba0>
  409488:	add	x7, x7, #0x3b9
  40948c:	bl	403cf0 <sd_bus_get_property@plt>
  409490:	stur	w0, [x29, #-140]
  409494:	ldur	w8, [x29, #-140]
  409498:	cmp	w8, #0x0
  40949c:	cset	w8, ge  // ge = tcont
  4094a0:	tbnz	w8, #0, 409560 <ascii_strlower_n@plt+0x5100>
  4094a4:	mov	w8, #0x3                   	// #3
  4094a8:	stur	w8, [x29, #-168]
  4094ac:	ldur	w8, [x29, #-140]
  4094b0:	stur	w8, [x29, #-172]
  4094b4:	stur	wzr, [x29, #-176]
  4094b8:	ldur	w0, [x29, #-176]
  4094bc:	bl	403a10 <log_get_max_level_realm@plt>
  4094c0:	ldur	w8, [x29, #-168]
  4094c4:	and	w8, w8, #0x7
  4094c8:	cmp	w0, w8
  4094cc:	b.lt	409530 <ascii_strlower_n@plt+0x50d0>  // b.tstop
  4094d0:	ldur	w8, [x29, #-176]
  4094d4:	ldur	w9, [x29, #-168]
  4094d8:	orr	w0, w9, w8, lsl #10
  4094dc:	ldur	w1, [x29, #-172]
  4094e0:	ldur	w8, [x29, #-140]
  4094e4:	sub	x10, x29, #0x30
  4094e8:	str	w0, [sp, #140]
  4094ec:	mov	x0, x10
  4094f0:	str	w1, [sp, #136]
  4094f4:	mov	w1, w8
  4094f8:	bl	403ce0 <bus_error_message@plt>
  4094fc:	ldr	w8, [sp, #140]
  409500:	str	x0, [sp, #128]
  409504:	mov	w0, w8
  409508:	ldr	w1, [sp, #136]
  40950c:	ldr	x2, [sp, #208]
  409510:	mov	w3, #0x3fb                 	// #1019
  409514:	ldr	x4, [sp, #200]
  409518:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  40951c:	add	x5, x5, #0x3be
  409520:	ldr	x6, [sp, #128]
  409524:	bl	403a20 <log_internal_realm@plt>
  409528:	str	w0, [sp, #124]
  40952c:	b	409544 <ascii_strlower_n@plt+0x50e4>
  409530:	ldur	w0, [x29, #-172]
  409534:	bl	403a30 <abs@plt>
  409538:	mov	w8, wzr
  40953c:	subs	w8, w8, w0, uxtb
  409540:	str	w8, [sp, #124]
  409544:	ldr	w8, [sp, #124]
  409548:	stur	w8, [x29, #-180]
  40954c:	ldur	w8, [x29, #-180]
  409550:	stur	w8, [x29, #-4]
  409554:	mov	w8, #0x1                   	// #1
  409558:	stur	w8, [x29, #-164]
  40955c:	b	409a80 <ascii_strlower_n@plt+0x5620>
  409560:	ldr	x8, [sp, #240]
  409564:	ldr	x0, [x8, #72]
  409568:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40956c:	add	x1, x1, #0x3b9
  409570:	sub	x2, x29, #0x48
  409574:	sub	x3, x29, #0x50
  409578:	bl	403d00 <sd_bus_message_read@plt>
  40957c:	stur	w0, [x29, #-140]
  409580:	ldur	w9, [x29, #-140]
  409584:	cmp	w9, #0x0
  409588:	cset	w9, ge  // ge = tcont
  40958c:	tbnz	w9, #0, 409618 <ascii_strlower_n@plt+0x51b8>
  409590:	mov	w8, #0x3                   	// #3
  409594:	stur	w8, [x29, #-184]
  409598:	ldur	w8, [x29, #-140]
  40959c:	stur	w8, [x29, #-188]
  4095a0:	stur	wzr, [x29, #-192]
  4095a4:	ldur	w0, [x29, #-192]
  4095a8:	bl	403a10 <log_get_max_level_realm@plt>
  4095ac:	ldur	w8, [x29, #-184]
  4095b0:	and	w8, w8, #0x7
  4095b4:	cmp	w0, w8
  4095b8:	b.lt	4095e8 <ascii_strlower_n@plt+0x5188>  // b.tstop
  4095bc:	ldur	w8, [x29, #-192]
  4095c0:	ldur	w9, [x29, #-184]
  4095c4:	orr	w0, w9, w8, lsl #10
  4095c8:	ldur	w1, [x29, #-188]
  4095cc:	ldr	x2, [sp, #208]
  4095d0:	mov	w3, #0x401                 	// #1025
  4095d4:	ldr	x4, [sp, #200]
  4095d8:	ldr	x5, [sp, #192]
  4095dc:	bl	403a20 <log_internal_realm@plt>
  4095e0:	str	w0, [sp, #120]
  4095e4:	b	4095fc <ascii_strlower_n@plt+0x519c>
  4095e8:	ldur	w0, [x29, #-188]
  4095ec:	bl	403a30 <abs@plt>
  4095f0:	mov	w8, wzr
  4095f4:	subs	w8, w8, w0, uxtb
  4095f8:	str	w8, [sp, #120]
  4095fc:	ldr	w8, [sp, #120]
  409600:	stur	w8, [x29, #-196]
  409604:	ldur	w8, [x29, #-196]
  409608:	stur	w8, [x29, #-4]
  40960c:	mov	w8, #0x1                   	// #1
  409610:	stur	w8, [x29, #-164]
  409614:	b	409a80 <ascii_strlower_n@plt+0x5620>
  409618:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  40961c:	str	x0, [sp, #112]
  409620:	bl	40877c <ascii_strlower_n@plt+0x431c>
  409624:	ldr	x8, [sp, #240]
  409628:	ldr	x3, [x8, #56]
  40962c:	ldr	x4, [x8, #48]
  409630:	adrp	x9, 430000 <ascii_strlower_n@plt+0x2bba0>
  409634:	add	x9, x9, #0x3e7
  409638:	str	x0, [sp, #104]
  40963c:	mov	x0, x9
  409640:	ldr	x1, [sp, #112]
  409644:	ldr	x2, [sp, #104]
  409648:	bl	403ab0 <printf@plt>
  40964c:	sub	x6, x29, #0x38
  409650:	ldr	x8, [sp, #240]
  409654:	ldr	x9, [x8, #72]
  409658:	mov	x0, x9
  40965c:	str	x6, [sp, #96]
  409660:	bl	403d10 <sd_bus_message_unref@plt>
  409664:	ldr	x8, [sp, #240]
  409668:	str	x0, [x8, #72]
  40966c:	ldr	x0, [x8, #64]
  409670:	ldr	x1, [sp, #232]
  409674:	ldr	x2, [sp, #224]
  409678:	ldr	x3, [sp, #216]
  40967c:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  409680:	add	x4, x4, #0x42d
  409684:	sub	x5, x29, #0x30
  409688:	ldr	x6, [sp, #96]
  40968c:	adrp	x7, 430000 <ascii_strlower_n@plt+0x2bba0>
  409690:	add	x7, x7, #0x43d
  409694:	bl	403cf0 <sd_bus_get_property@plt>
  409698:	stur	w0, [x29, #-140]
  40969c:	ldur	w10, [x29, #-140]
  4096a0:	cmp	w10, #0x0
  4096a4:	cset	w10, ge  // ge = tcont
  4096a8:	tbnz	w10, #0, 409768 <ascii_strlower_n@plt+0x5308>
  4096ac:	mov	w8, #0x3                   	// #3
  4096b0:	stur	w8, [x29, #-200]
  4096b4:	ldur	w8, [x29, #-140]
  4096b8:	stur	w8, [x29, #-204]
  4096bc:	stur	wzr, [x29, #-208]
  4096c0:	ldur	w0, [x29, #-208]
  4096c4:	bl	403a10 <log_get_max_level_realm@plt>
  4096c8:	ldur	w8, [x29, #-200]
  4096cc:	and	w8, w8, #0x7
  4096d0:	cmp	w0, w8
  4096d4:	b.lt	409738 <ascii_strlower_n@plt+0x52d8>  // b.tstop
  4096d8:	ldur	w8, [x29, #-208]
  4096dc:	ldur	w9, [x29, #-200]
  4096e0:	orr	w0, w9, w8, lsl #10
  4096e4:	ldur	w1, [x29, #-204]
  4096e8:	ldur	w8, [x29, #-140]
  4096ec:	sub	x10, x29, #0x30
  4096f0:	str	w0, [sp, #92]
  4096f4:	mov	x0, x10
  4096f8:	str	w1, [sp, #88]
  4096fc:	mov	w1, w8
  409700:	bl	403ce0 <bus_error_message@plt>
  409704:	ldr	w8, [sp, #92]
  409708:	str	x0, [sp, #80]
  40970c:	mov	w0, w8
  409710:	ldr	w1, [sp, #88]
  409714:	ldr	x2, [sp, #208]
  409718:	mov	w3, #0x416                 	// #1046
  40971c:	ldr	x4, [sp, #200]
  409720:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  409724:	add	x5, x5, #0x443
  409728:	ldr	x6, [sp, #80]
  40972c:	bl	403a20 <log_internal_realm@plt>
  409730:	str	w0, [sp, #76]
  409734:	b	40974c <ascii_strlower_n@plt+0x52ec>
  409738:	ldur	w0, [x29, #-204]
  40973c:	bl	403a30 <abs@plt>
  409740:	mov	w8, wzr
  409744:	subs	w8, w8, w0, uxtb
  409748:	str	w8, [sp, #76]
  40974c:	ldr	w8, [sp, #76]
  409750:	stur	w8, [x29, #-212]
  409754:	ldur	w8, [x29, #-212]
  409758:	stur	w8, [x29, #-4]
  40975c:	mov	w8, #0x1                   	// #1
  409760:	stur	w8, [x29, #-164]
  409764:	b	409a80 <ascii_strlower_n@plt+0x5620>
  409768:	ldr	x8, [sp, #240]
  40976c:	ldr	x0, [x8, #72]
  409770:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  409774:	add	x1, x1, #0x43d
  409778:	sub	x2, x29, #0x58
  40977c:	sub	x3, x29, #0x60
  409780:	sub	x4, x29, #0x68
  409784:	bl	403d00 <sd_bus_message_read@plt>
  409788:	stur	w0, [x29, #-140]
  40978c:	ldur	w9, [x29, #-140]
  409790:	cmp	w9, #0x0
  409794:	cset	w9, ge  // ge = tcont
  409798:	tbnz	w9, #0, 409824 <ascii_strlower_n@plt+0x53c4>
  40979c:	mov	w8, #0x3                   	// #3
  4097a0:	stur	w8, [x29, #-216]
  4097a4:	ldur	w8, [x29, #-140]
  4097a8:	stur	w8, [x29, #-220]
  4097ac:	stur	wzr, [x29, #-224]
  4097b0:	ldur	w0, [x29, #-224]
  4097b4:	bl	403a10 <log_get_max_level_realm@plt>
  4097b8:	ldur	w8, [x29, #-216]
  4097bc:	and	w8, w8, #0x7
  4097c0:	cmp	w0, w8
  4097c4:	b.lt	4097f4 <ascii_strlower_n@plt+0x5394>  // b.tstop
  4097c8:	ldur	w8, [x29, #-224]
  4097cc:	ldur	w9, [x29, #-216]
  4097d0:	orr	w0, w9, w8, lsl #10
  4097d4:	ldur	w1, [x29, #-220]
  4097d8:	ldr	x2, [sp, #208]
  4097dc:	mov	w3, #0x41d                 	// #1053
  4097e0:	ldr	x4, [sp, #200]
  4097e4:	ldr	x5, [sp, #192]
  4097e8:	bl	403a20 <log_internal_realm@plt>
  4097ec:	str	w0, [sp, #72]
  4097f0:	b	409808 <ascii_strlower_n@plt+0x53a8>
  4097f4:	ldur	w0, [x29, #-220]
  4097f8:	bl	403a30 <abs@plt>
  4097fc:	mov	w8, wzr
  409800:	subs	w8, w8, w0, uxtb
  409804:	str	w8, [sp, #72]
  409808:	ldr	w8, [sp, #72]
  40980c:	stur	w8, [x29, #-228]
  409810:	ldur	w8, [x29, #-228]
  409814:	stur	w8, [x29, #-4]
  409818:	mov	w8, #0x1                   	// #1
  40981c:	stur	w8, [x29, #-164]
  409820:	b	409a80 <ascii_strlower_n@plt+0x5620>
  409824:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  409828:	str	x0, [sp, #64]
  40982c:	bl	40877c <ascii_strlower_n@plt+0x431c>
  409830:	ldr	x8, [sp, #240]
  409834:	ldr	x3, [x8, #40]
  409838:	ldr	x4, [x8, #32]
  40983c:	ldr	x5, [x8, #24]
  409840:	adrp	x9, 430000 <ascii_strlower_n@plt+0x2bba0>
  409844:	add	x9, x9, #0x466
  409848:	str	x0, [sp, #56]
  40984c:	mov	x0, x9
  409850:	ldr	x1, [sp, #64]
  409854:	ldr	x2, [sp, #56]
  409858:	bl	403ab0 <printf@plt>
  40985c:	sub	x6, x29, #0x38
  409860:	ldr	x8, [sp, #240]
  409864:	ldr	x9, [x8, #72]
  409868:	mov	x0, x9
  40986c:	str	x6, [sp, #48]
  409870:	bl	403d10 <sd_bus_message_unref@plt>
  409874:	ldr	x8, [sp, #240]
  409878:	str	x0, [x8, #72]
  40987c:	ldr	x0, [x8, #64]
  409880:	ldr	x1, [sp, #232]
  409884:	ldr	x2, [sp, #224]
  409888:	ldr	x3, [sp, #216]
  40988c:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  409890:	add	x4, x4, #0x4c0
  409894:	sub	x5, x29, #0x30
  409898:	ldr	x6, [sp, #48]
  40989c:	adrp	x7, 430000 <ascii_strlower_n@plt+0x2bba0>
  4098a0:	add	x7, x7, #0x4d1
  4098a4:	bl	403cf0 <sd_bus_get_property@plt>
  4098a8:	stur	w0, [x29, #-140]
  4098ac:	ldur	w10, [x29, #-140]
  4098b0:	cmp	w10, #0x0
  4098b4:	cset	w10, ge  // ge = tcont
  4098b8:	tbnz	w10, #0, 409978 <ascii_strlower_n@plt+0x5518>
  4098bc:	mov	w8, #0x3                   	// #3
  4098c0:	stur	w8, [x29, #-232]
  4098c4:	ldur	w8, [x29, #-140]
  4098c8:	stur	w8, [x29, #-236]
  4098cc:	stur	wzr, [x29, #-240]
  4098d0:	ldur	w0, [x29, #-240]
  4098d4:	bl	403a10 <log_get_max_level_realm@plt>
  4098d8:	ldur	w8, [x29, #-232]
  4098dc:	and	w8, w8, #0x7
  4098e0:	cmp	w0, w8
  4098e4:	b.lt	409948 <ascii_strlower_n@plt+0x54e8>  // b.tstop
  4098e8:	ldur	w8, [x29, #-240]
  4098ec:	ldur	w9, [x29, #-232]
  4098f0:	orr	w0, w9, w8, lsl #10
  4098f4:	ldur	w1, [x29, #-236]
  4098f8:	ldur	w8, [x29, #-140]
  4098fc:	sub	x10, x29, #0x30
  409900:	str	w0, [sp, #44]
  409904:	mov	x0, x10
  409908:	str	w1, [sp, #40]
  40990c:	mov	w1, w8
  409910:	bl	403ce0 <bus_error_message@plt>
  409914:	ldr	w8, [sp, #44]
  409918:	str	x0, [sp, #32]
  40991c:	mov	w0, w8
  409920:	ldr	w1, [sp, #40]
  409924:	ldr	x2, [sp, #208]
  409928:	mov	w3, #0x434                 	// #1076
  40992c:	ldr	x4, [sp, #200]
  409930:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  409934:	add	x5, x5, #0x4d8
  409938:	ldr	x6, [sp, #32]
  40993c:	bl	403a20 <log_internal_realm@plt>
  409940:	str	w0, [sp, #28]
  409944:	b	40995c <ascii_strlower_n@plt+0x54fc>
  409948:	ldur	w0, [x29, #-236]
  40994c:	bl	403a30 <abs@plt>
  409950:	mov	w8, wzr
  409954:	subs	w8, w8, w0, uxtb
  409958:	str	w8, [sp, #28]
  40995c:	ldr	w8, [sp, #28]
  409960:	stur	w8, [x29, #-244]
  409964:	ldur	w8, [x29, #-244]
  409968:	stur	w8, [x29, #-4]
  40996c:	mov	w8, #0x1                   	// #1
  409970:	stur	w8, [x29, #-164]
  409974:	b	409a80 <ascii_strlower_n@plt+0x5620>
  409978:	ldr	x8, [sp, #240]
  40997c:	ldr	x0, [x8, #72]
  409980:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  409984:	add	x1, x1, #0x4d1
  409988:	sub	x2, x29, #0x70
  40998c:	sub	x3, x29, #0x78
  409990:	sub	x4, x29, #0x80
  409994:	sub	x5, x29, #0x88
  409998:	bl	403d00 <sd_bus_message_read@plt>
  40999c:	stur	w0, [x29, #-140]
  4099a0:	ldur	w9, [x29, #-140]
  4099a4:	cmp	w9, #0x0
  4099a8:	cset	w9, ge  // ge = tcont
  4099ac:	tbnz	w9, #0, 409a38 <ascii_strlower_n@plt+0x55d8>
  4099b0:	mov	w8, #0x3                   	// #3
  4099b4:	stur	w8, [x29, #-248]
  4099b8:	ldur	w8, [x29, #-140]
  4099bc:	stur	w8, [x29, #-252]
  4099c0:	str	wzr, [sp, #256]
  4099c4:	ldr	w0, [sp, #256]
  4099c8:	bl	403a10 <log_get_max_level_realm@plt>
  4099cc:	ldur	w8, [x29, #-248]
  4099d0:	and	w8, w8, #0x7
  4099d4:	cmp	w0, w8
  4099d8:	b.lt	409a08 <ascii_strlower_n@plt+0x55a8>  // b.tstop
  4099dc:	ldr	w8, [sp, #256]
  4099e0:	ldur	w9, [x29, #-248]
  4099e4:	orr	w0, w9, w8, lsl #10
  4099e8:	ldur	w1, [x29, #-252]
  4099ec:	ldr	x2, [sp, #208]
  4099f0:	mov	w3, #0x43c                 	// #1084
  4099f4:	ldr	x4, [sp, #200]
  4099f8:	ldr	x5, [sp, #192]
  4099fc:	bl	403a20 <log_internal_realm@plt>
  409a00:	str	w0, [sp, #24]
  409a04:	b	409a1c <ascii_strlower_n@plt+0x55bc>
  409a08:	ldur	w0, [x29, #-252]
  409a0c:	bl	403a30 <abs@plt>
  409a10:	mov	w8, wzr
  409a14:	subs	w8, w8, w0, uxtb
  409a18:	str	w8, [sp, #24]
  409a1c:	ldr	w8, [sp, #24]
  409a20:	str	w8, [sp, #252]
  409a24:	ldr	w8, [sp, #252]
  409a28:	stur	w8, [x29, #-4]
  409a2c:	mov	w8, #0x1                   	// #1
  409a30:	stur	w8, [x29, #-164]
  409a34:	b	409a80 <ascii_strlower_n@plt+0x5620>
  409a38:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  409a3c:	str	x0, [sp, #16]
  409a40:	bl	40877c <ascii_strlower_n@plt+0x431c>
  409a44:	ldr	x8, [sp, #240]
  409a48:	ldr	x3, [x8, #16]
  409a4c:	ldr	x4, [x8, #8]
  409a50:	ldr	x5, [x8]
  409a54:	ldur	x6, [x29, #-136]
  409a58:	adrp	x9, 430000 <ascii_strlower_n@plt+0x2bba0>
  409a5c:	add	x9, x9, #0x4fc
  409a60:	str	x0, [sp, #8]
  409a64:	mov	x0, x9
  409a68:	ldr	x1, [sp, #16]
  409a6c:	ldr	x2, [sp, #8]
  409a70:	bl	403ab0 <printf@plt>
  409a74:	stur	wzr, [x29, #-4]
  409a78:	mov	w10, #0x1                   	// #1
  409a7c:	stur	w10, [x29, #-164]
  409a80:	sub	x0, x29, #0x38
  409a84:	bl	40d468 <ascii_strlower_n@plt+0x9008>
  409a88:	sub	x0, x29, #0x30
  409a8c:	bl	403d20 <sd_bus_error_free@plt>
  409a90:	ldur	w0, [x29, #-4]
  409a94:	add	sp, sp, #0x200
  409a98:	ldr	x28, [sp, #16]
  409a9c:	ldp	x29, x30, [sp], #32
  409aa0:	ret
  409aa4:	sub	sp, sp, #0x90
  409aa8:	stp	x29, x30, [sp, #128]
  409aac:	add	x29, sp, #0x80
  409ab0:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409ab4:	add	x8, x8, #0x1aa
  409ab8:	adrp	x9, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409abc:	add	x9, x9, #0x6e5
  409ac0:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409ac4:	add	x3, x3, #0x9a2
  409ac8:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  409acc:	add	x4, x4, #0x57a
  409ad0:	mov	x10, xzr
  409ad4:	mov	x5, x10
  409ad8:	adrp	x11, 42d000 <ascii_strlower_n@plt+0x28ba0>
  409adc:	add	x11, x11, #0x6f4
  409ae0:	add	x11, x11, #0x3
  409ae4:	sub	x12, x29, #0x30
  409ae8:	stur	w0, [x29, #-8]
  409aec:	stur	x1, [x29, #-16]
  409af0:	stur	x2, [x29, #-24]
  409af4:	stur	xzr, [x29, #-48]
  409af8:	stur	xzr, [x29, #-40]
  409afc:	stur	xzr, [x29, #-32]
  409b00:	ldur	x13, [x29, #-24]
  409b04:	stur	x13, [x29, #-56]
  409b08:	ldur	x0, [x29, #-56]
  409b0c:	mov	x1, x8
  409b10:	mov	x2, x9
  409b14:	str	x5, [sp, #40]
  409b18:	mov	x5, x12
  409b1c:	ldr	x6, [sp, #40]
  409b20:	mov	x7, x10
  409b24:	str	x11, [sp, #32]
  409b28:	bl	403d30 <sd_bus_call_method@plt>
  409b2c:	stur	w0, [x29, #-60]
  409b30:	ldur	w14, [x29, #-60]
  409b34:	cmp	w14, #0x0
  409b38:	cset	w14, ge  // ge = tcont
  409b3c:	tbnz	w14, #0, 409c00 <ascii_strlower_n@plt+0x57a0>
  409b40:	mov	w8, #0x3                   	// #3
  409b44:	str	w8, [sp, #64]
  409b48:	ldur	w8, [x29, #-60]
  409b4c:	str	w8, [sp, #60]
  409b50:	str	wzr, [sp, #56]
  409b54:	ldr	w0, [sp, #56]
  409b58:	bl	403a10 <log_get_max_level_realm@plt>
  409b5c:	ldr	w8, [sp, #64]
  409b60:	and	w8, w8, #0x7
  409b64:	cmp	w0, w8
  409b68:	b.lt	409bd0 <ascii_strlower_n@plt+0x5770>  // b.tstop
  409b6c:	ldr	w8, [sp, #56]
  409b70:	ldr	w9, [sp, #64]
  409b74:	orr	w0, w9, w8, lsl #10
  409b78:	ldr	w1, [sp, #60]
  409b7c:	ldur	w8, [x29, #-60]
  409b80:	sub	x10, x29, #0x30
  409b84:	str	w0, [sp, #28]
  409b88:	mov	x0, x10
  409b8c:	str	w1, [sp, #24]
  409b90:	mov	w1, w8
  409b94:	bl	403ce0 <bus_error_message@plt>
  409b98:	ldr	w8, [sp, #28]
  409b9c:	str	x0, [sp, #16]
  409ba0:	mov	w0, w8
  409ba4:	ldr	w1, [sp, #24]
  409ba8:	ldr	x2, [sp, #32]
  409bac:	mov	w3, #0x45b                 	// #1115
  409bb0:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  409bb4:	add	x4, x4, #0x58a
  409bb8:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  409bbc:	add	x5, x5, #0x59b
  409bc0:	ldr	x6, [sp, #16]
  409bc4:	bl	403a20 <log_internal_realm@plt>
  409bc8:	str	w0, [sp, #12]
  409bcc:	b	409be4 <ascii_strlower_n@plt+0x5784>
  409bd0:	ldr	w0, [sp, #60]
  409bd4:	bl	403a30 <abs@plt>
  409bd8:	mov	w8, wzr
  409bdc:	subs	w8, w8, w0, uxtb
  409be0:	str	w8, [sp, #12]
  409be4:	ldr	w8, [sp, #12]
  409be8:	str	w8, [sp, #52]
  409bec:	ldr	w8, [sp, #52]
  409bf0:	stur	w8, [x29, #-4]
  409bf4:	mov	w8, #0x1                   	// #1
  409bf8:	str	w8, [sp, #48]
  409bfc:	b	409c0c <ascii_strlower_n@plt+0x57ac>
  409c00:	stur	wzr, [x29, #-4]
  409c04:	mov	w8, #0x1                   	// #1
  409c08:	str	w8, [sp, #48]
  409c0c:	sub	x0, x29, #0x30
  409c10:	bl	403d20 <sd_bus_error_free@plt>
  409c14:	ldur	w0, [x29, #-4]
  409c18:	ldp	x29, x30, [sp, #128]
  409c1c:	add	sp, sp, #0x90
  409c20:	ret
  409c24:	sub	sp, sp, #0x90
  409c28:	stp	x29, x30, [sp, #128]
  409c2c:	add	x29, sp, #0x80
  409c30:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409c34:	add	x8, x8, #0x1aa
  409c38:	adrp	x9, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409c3c:	add	x9, x9, #0x6e5
  409c40:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409c44:	add	x3, x3, #0x9a2
  409c48:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  409c4c:	add	x4, x4, #0x5ba
  409c50:	mov	x10, xzr
  409c54:	mov	x5, x10
  409c58:	adrp	x11, 42d000 <ascii_strlower_n@plt+0x28ba0>
  409c5c:	add	x11, x11, #0x6f4
  409c60:	add	x11, x11, #0x3
  409c64:	sub	x12, x29, #0x30
  409c68:	stur	w0, [x29, #-8]
  409c6c:	stur	x1, [x29, #-16]
  409c70:	stur	x2, [x29, #-24]
  409c74:	stur	xzr, [x29, #-48]
  409c78:	stur	xzr, [x29, #-40]
  409c7c:	stur	xzr, [x29, #-32]
  409c80:	ldur	x13, [x29, #-24]
  409c84:	stur	x13, [x29, #-56]
  409c88:	ldur	x0, [x29, #-56]
  409c8c:	mov	x1, x8
  409c90:	mov	x2, x9
  409c94:	str	x5, [sp, #40]
  409c98:	mov	x5, x12
  409c9c:	ldr	x6, [sp, #40]
  409ca0:	mov	x7, x10
  409ca4:	str	x11, [sp, #32]
  409ca8:	bl	403d30 <sd_bus_call_method@plt>
  409cac:	stur	w0, [x29, #-60]
  409cb0:	ldur	w14, [x29, #-60]
  409cb4:	cmp	w14, #0x0
  409cb8:	cset	w14, ge  // ge = tcont
  409cbc:	tbnz	w14, #0, 409d80 <ascii_strlower_n@plt+0x5920>
  409cc0:	mov	w8, #0x3                   	// #3
  409cc4:	str	w8, [sp, #64]
  409cc8:	ldur	w8, [x29, #-60]
  409ccc:	str	w8, [sp, #60]
  409cd0:	str	wzr, [sp, #56]
  409cd4:	ldr	w0, [sp, #56]
  409cd8:	bl	403a10 <log_get_max_level_realm@plt>
  409cdc:	ldr	w8, [sp, #64]
  409ce0:	and	w8, w8, #0x7
  409ce4:	cmp	w0, w8
  409ce8:	b.lt	409d50 <ascii_strlower_n@plt+0x58f0>  // b.tstop
  409cec:	ldr	w8, [sp, #56]
  409cf0:	ldr	w9, [sp, #64]
  409cf4:	orr	w0, w9, w8, lsl #10
  409cf8:	ldr	w1, [sp, #60]
  409cfc:	ldur	w8, [x29, #-60]
  409d00:	sub	x10, x29, #0x30
  409d04:	str	w0, [sp, #28]
  409d08:	mov	x0, x10
  409d0c:	str	w1, [sp, #24]
  409d10:	mov	w1, w8
  409d14:	bl	403ce0 <bus_error_message@plt>
  409d18:	ldr	w8, [sp, #28]
  409d1c:	str	x0, [sp, #16]
  409d20:	mov	w0, w8
  409d24:	ldr	w1, [sp, #24]
  409d28:	ldr	x2, [sp, #32]
  409d2c:	mov	w3, #0x46e                 	// #1134
  409d30:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  409d34:	add	x4, x4, #0x5c6
  409d38:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  409d3c:	add	x5, x5, #0x5d3
  409d40:	ldr	x6, [sp, #16]
  409d44:	bl	403a20 <log_internal_realm@plt>
  409d48:	str	w0, [sp, #12]
  409d4c:	b	409d64 <ascii_strlower_n@plt+0x5904>
  409d50:	ldr	w0, [sp, #60]
  409d54:	bl	403a30 <abs@plt>
  409d58:	mov	w8, wzr
  409d5c:	subs	w8, w8, w0, uxtb
  409d60:	str	w8, [sp, #12]
  409d64:	ldr	w8, [sp, #12]
  409d68:	str	w8, [sp, #52]
  409d6c:	ldr	w8, [sp, #52]
  409d70:	stur	w8, [x29, #-4]
  409d74:	mov	w8, #0x1                   	// #1
  409d78:	str	w8, [sp, #48]
  409d7c:	b	409d8c <ascii_strlower_n@plt+0x592c>
  409d80:	stur	wzr, [x29, #-4]
  409d84:	mov	w8, #0x1                   	// #1
  409d88:	str	w8, [sp, #48]
  409d8c:	sub	x0, x29, #0x30
  409d90:	bl	403d20 <sd_bus_error_free@plt>
  409d94:	ldur	w0, [x29, #-4]
  409d98:	ldp	x29, x30, [sp, #128]
  409d9c:	add	sp, sp, #0x90
  409da0:	ret
  409da4:	sub	sp, sp, #0x90
  409da8:	stp	x29, x30, [sp, #128]
  409dac:	add	x29, sp, #0x80
  409db0:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409db4:	add	x8, x8, #0x1aa
  409db8:	adrp	x9, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409dbc:	add	x9, x9, #0x6e5
  409dc0:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409dc4:	add	x3, x3, #0x9a2
  409dc8:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  409dcc:	add	x4, x4, #0x5ee
  409dd0:	mov	x10, xzr
  409dd4:	mov	x5, x10
  409dd8:	adrp	x11, 42d000 <ascii_strlower_n@plt+0x28ba0>
  409ddc:	add	x11, x11, #0x6f4
  409de0:	add	x11, x11, #0x3
  409de4:	sub	x12, x29, #0x30
  409de8:	stur	w0, [x29, #-8]
  409dec:	stur	x1, [x29, #-16]
  409df0:	stur	x2, [x29, #-24]
  409df4:	stur	xzr, [x29, #-48]
  409df8:	stur	xzr, [x29, #-40]
  409dfc:	stur	xzr, [x29, #-32]
  409e00:	ldur	x13, [x29, #-24]
  409e04:	stur	x13, [x29, #-56]
  409e08:	ldur	x0, [x29, #-56]
  409e0c:	mov	x1, x8
  409e10:	mov	x2, x9
  409e14:	str	x5, [sp, #40]
  409e18:	mov	x5, x12
  409e1c:	ldr	x6, [sp, #40]
  409e20:	mov	x7, x10
  409e24:	str	x11, [sp, #32]
  409e28:	bl	403d30 <sd_bus_call_method@plt>
  409e2c:	stur	w0, [x29, #-60]
  409e30:	ldur	w14, [x29, #-60]
  409e34:	cmp	w14, #0x0
  409e38:	cset	w14, ge  // ge = tcont
  409e3c:	tbnz	w14, #0, 409f00 <ascii_strlower_n@plt+0x5aa0>
  409e40:	mov	w8, #0x3                   	// #3
  409e44:	str	w8, [sp, #64]
  409e48:	ldur	w8, [x29, #-60]
  409e4c:	str	w8, [sp, #60]
  409e50:	str	wzr, [sp, #56]
  409e54:	ldr	w0, [sp, #56]
  409e58:	bl	403a10 <log_get_max_level_realm@plt>
  409e5c:	ldr	w8, [sp, #64]
  409e60:	and	w8, w8, #0x7
  409e64:	cmp	w0, w8
  409e68:	b.lt	409ed0 <ascii_strlower_n@plt+0x5a70>  // b.tstop
  409e6c:	ldr	w8, [sp, #56]
  409e70:	ldr	w9, [sp, #64]
  409e74:	orr	w0, w9, w8, lsl #10
  409e78:	ldr	w1, [sp, #60]
  409e7c:	ldur	w8, [x29, #-60]
  409e80:	sub	x10, x29, #0x30
  409e84:	str	w0, [sp, #28]
  409e88:	mov	x0, x10
  409e8c:	str	w1, [sp, #24]
  409e90:	mov	w1, w8
  409e94:	bl	403ce0 <bus_error_message@plt>
  409e98:	ldr	w8, [sp, #28]
  409e9c:	str	x0, [sp, #16]
  409ea0:	mov	w0, w8
  409ea4:	ldr	w1, [sp, #24]
  409ea8:	ldr	x2, [sp, #32]
  409eac:	mov	w3, #0x481                 	// #1153
  409eb0:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  409eb4:	add	x4, x4, #0x602
  409eb8:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  409ebc:	add	x5, x5, #0x618
  409ec0:	ldr	x6, [sp, #16]
  409ec4:	bl	403a20 <log_internal_realm@plt>
  409ec8:	str	w0, [sp, #12]
  409ecc:	b	409ee4 <ascii_strlower_n@plt+0x5a84>
  409ed0:	ldr	w0, [sp, #60]
  409ed4:	bl	403a30 <abs@plt>
  409ed8:	mov	w8, wzr
  409edc:	subs	w8, w8, w0, uxtb
  409ee0:	str	w8, [sp, #12]
  409ee4:	ldr	w8, [sp, #12]
  409ee8:	str	w8, [sp, #52]
  409eec:	ldr	w8, [sp, #52]
  409ef0:	stur	w8, [x29, #-4]
  409ef4:	mov	w8, #0x1                   	// #1
  409ef8:	str	w8, [sp, #48]
  409efc:	b	409f0c <ascii_strlower_n@plt+0x5aac>
  409f00:	stur	wzr, [x29, #-4]
  409f04:	mov	w8, #0x1                   	// #1
  409f08:	str	w8, [sp, #48]
  409f0c:	sub	x0, x29, #0x30
  409f10:	bl	403d20 <sd_bus_error_free@plt>
  409f14:	ldur	w0, [x29, #-4]
  409f18:	ldp	x29, x30, [sp, #128]
  409f1c:	add	sp, sp, #0x90
  409f20:	ret
  409f24:	sub	sp, sp, #0x90
  409f28:	stp	x29, x30, [sp, #128]
  409f2c:	add	x29, sp, #0x80
  409f30:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  409f34:	add	x8, x8, #0x6f4
  409f38:	add	x8, x8, #0x3
  409f3c:	stur	w0, [x29, #-8]
  409f40:	stur	x1, [x29, #-16]
  409f44:	stur	x2, [x29, #-24]
  409f48:	stur	xzr, [x29, #-48]
  409f4c:	stur	xzr, [x29, #-40]
  409f50:	stur	xzr, [x29, #-32]
  409f54:	ldur	x9, [x29, #-24]
  409f58:	stur	x9, [x29, #-56]
  409f5c:	str	x8, [sp, #40]
  409f60:	ldur	x8, [x29, #-56]
  409f64:	cmp	x8, #0x0
  409f68:	cset	w9, ne  // ne = any
  409f6c:	mov	w10, #0x1                   	// #1
  409f70:	eor	w9, w9, #0x1
  409f74:	eor	w9, w9, w10
  409f78:	eor	w9, w9, w10
  409f7c:	and	w9, w9, #0x1
  409f80:	mov	w0, w9
  409f84:	sxtw	x8, w0
  409f88:	cbz	x8, 409fb0 <ascii_strlower_n@plt+0x5b50>
  409f8c:	mov	w8, wzr
  409f90:	mov	w0, w8
  409f94:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  409f98:	add	x1, x1, #0xf8
  409f9c:	ldr	x2, [sp, #40]
  409fa0:	mov	w3, #0x775                 	// #1909
  409fa4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  409fa8:	add	x4, x4, #0x63c
  409fac:	bl	4039d0 <log_assert_failed_realm@plt>
  409fb0:	ldur	w8, [x29, #-8]
  409fb4:	cmp	w8, #0x2
  409fb8:	b.lt	409ff0 <ascii_strlower_n@plt+0x5b90>  // b.tstop
  409fbc:	ldur	x8, [x29, #-16]
  409fc0:	ldr	x0, [x8, #8]
  409fc4:	bl	405584 <ascii_strlower_n@plt+0x1124>
  409fc8:	stur	w0, [x29, #-60]
  409fcc:	ldur	w9, [x29, #-60]
  409fd0:	cmp	w9, #0x0
  409fd4:	cset	w9, ge  // ge = tcont
  409fd8:	tbnz	w9, #0, 409ff0 <ascii_strlower_n@plt+0x5b90>
  409fdc:	ldur	w8, [x29, #-60]
  409fe0:	stur	w8, [x29, #-4]
  409fe4:	mov	w8, #0x1                   	// #1
  409fe8:	str	w8, [sp, #64]
  409fec:	b	40a21c <ascii_strlower_n@plt+0x5dbc>
  409ff0:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  409ff4:	add	x8, x8, #0x170
  409ff8:	ldr	w9, [x8]
  409ffc:	cmp	w9, #0x0
  40a000:	cset	w9, gt
  40a004:	tbnz	w9, #0, 40a02c <ascii_strlower_n@plt+0x5bcc>
  40a008:	ldur	x0, [x29, #-56]
  40a00c:	mov	w8, #0x1                   	// #1
  40a010:	mov	w1, w8
  40a014:	str	w8, [sp, #36]
  40a018:	bl	40c9a4 <ascii_strlower_n@plt+0x8544>
  40a01c:	stur	w0, [x29, #-4]
  40a020:	ldr	w8, [sp, #36]
  40a024:	str	w8, [sp, #64]
  40a028:	b	40a21c <ascii_strlower_n@plt+0x5dbc>
  40a02c:	ldur	w8, [x29, #-8]
  40a030:	cmp	w8, #0x3
  40a034:	b.ge	40a074 <ascii_strlower_n@plt+0x5c14>  // b.tcont
  40a038:	ldur	x0, [x29, #-56]
  40a03c:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40a040:	add	x8, x8, #0x170
  40a044:	ldr	w1, [x8]
  40a048:	mov	x8, xzr
  40a04c:	mov	x2, x8
  40a050:	mov	w9, #0x1                   	// #1
  40a054:	mov	w3, w9
  40a058:	mov	x4, x8
  40a05c:	str	w9, [sp, #32]
  40a060:	bl	40bf80 <ascii_strlower_n@plt+0x7b20>
  40a064:	stur	w0, [x29, #-4]
  40a068:	ldr	w9, [sp, #32]
  40a06c:	str	w9, [sp, #64]
  40a070:	b	40a21c <ascii_strlower_n@plt+0x5dbc>
  40a074:	ldur	x0, [x29, #-56]
  40a078:	ldur	x8, [x29, #-16]
  40a07c:	add	x1, x8, #0x10
  40a080:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40a084:	add	x2, x2, #0x1aa
  40a088:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40a08c:	add	x3, x3, #0x6e5
  40a090:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40a094:	add	x4, x4, #0x9a2
  40a098:	sub	x5, x29, #0x30
  40a09c:	bl	414d58 <ascii_strlower_n@plt+0x108f8>
  40a0a0:	stur	w0, [x29, #-60]
  40a0a4:	ldur	w9, [x29, #-60]
  40a0a8:	cmp	w9, #0x0
  40a0ac:	cset	w9, ge  // ge = tcont
  40a0b0:	tbnz	w9, #0, 40a108 <ascii_strlower_n@plt+0x5ca8>
  40a0b4:	sub	x0, x29, #0x30
  40a0b8:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a0bc:	add	x1, x1, #0x65f
  40a0c0:	bl	403d40 <sd_bus_error_has_name@plt>
  40a0c4:	cbz	w0, 40a108 <ascii_strlower_n@plt+0x5ca8>
  40a0c8:	sub	x8, x29, #0x30
  40a0cc:	mov	x0, x8
  40a0d0:	str	x8, [sp, #24]
  40a0d4:	bl	403d20 <sd_bus_error_free@plt>
  40a0d8:	ldur	x0, [x29, #-56]
  40a0dc:	ldur	x8, [x29, #-16]
  40a0e0:	add	x1, x8, #0x10
  40a0e4:	adrp	x2, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a0e8:	add	x2, x2, #0x681
  40a0ec:	adrp	x3, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a0f0:	add	x3, x3, #0x69a
  40a0f4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a0f8:	add	x4, x4, #0x6b4
  40a0fc:	ldr	x5, [sp, #24]
  40a100:	bl	414d58 <ascii_strlower_n@plt+0x108f8>
  40a104:	stur	w0, [x29, #-60]
  40a108:	ldur	w8, [x29, #-60]
  40a10c:	cmp	w8, #0x0
  40a110:	cset	w8, ge  // ge = tcont
  40a114:	tbnz	w8, #0, 40a210 <ascii_strlower_n@plt+0x5db0>
  40a118:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40a11c:	add	x8, x8, #0x148
  40a120:	ldrb	w9, [x8]
  40a124:	tbnz	w9, #0, 40a12c <ascii_strlower_n@plt+0x5ccc>
  40a128:	b	40a150 <ascii_strlower_n@plt+0x5cf0>
  40a12c:	sub	x0, x29, #0x30
  40a130:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a134:	add	x1, x1, #0x6d5
  40a138:	bl	403d40 <sd_bus_error_has_name@plt>
  40a13c:	cbz	w0, 40a150 <ascii_strlower_n@plt+0x5cf0>
  40a140:	stur	wzr, [x29, #-4]
  40a144:	mov	w8, #0x1                   	// #1
  40a148:	str	w8, [sp, #64]
  40a14c:	b	40a21c <ascii_strlower_n@plt+0x5dbc>
  40a150:	mov	w8, #0x3                   	// #3
  40a154:	str	w8, [sp, #60]
  40a158:	ldur	w8, [x29, #-60]
  40a15c:	str	w8, [sp, #56]
  40a160:	str	wzr, [sp, #52]
  40a164:	ldr	w0, [sp, #52]
  40a168:	bl	403a10 <log_get_max_level_realm@plt>
  40a16c:	ldr	w8, [sp, #60]
  40a170:	and	w8, w8, #0x7
  40a174:	cmp	w0, w8
  40a178:	b.lt	40a1e0 <ascii_strlower_n@plt+0x5d80>  // b.tstop
  40a17c:	ldr	w8, [sp, #52]
  40a180:	ldr	w9, [sp, #60]
  40a184:	orr	w0, w9, w8, lsl #10
  40a188:	ldr	w1, [sp, #56]
  40a18c:	ldur	w8, [x29, #-60]
  40a190:	sub	x10, x29, #0x30
  40a194:	str	w0, [sp, #20]
  40a198:	mov	x0, x10
  40a19c:	str	w1, [sp, #16]
  40a1a0:	mov	w1, w8
  40a1a4:	bl	403ce0 <bus_error_message@plt>
  40a1a8:	ldr	w8, [sp, #20]
  40a1ac:	str	x0, [sp, #8]
  40a1b0:	mov	w0, w8
  40a1b4:	ldr	w1, [sp, #16]
  40a1b8:	ldr	x2, [sp, #40]
  40a1bc:	mov	w3, #0x796                 	// #1942
  40a1c0:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a1c4:	add	x4, x4, #0x6f9
  40a1c8:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a1cc:	add	x5, x5, #0x702
  40a1d0:	ldr	x6, [sp, #8]
  40a1d4:	bl	403a20 <log_internal_realm@plt>
  40a1d8:	str	w0, [sp, #4]
  40a1dc:	b	40a1f4 <ascii_strlower_n@plt+0x5d94>
  40a1e0:	ldr	w0, [sp, #56]
  40a1e4:	bl	403a30 <abs@plt>
  40a1e8:	mov	w8, wzr
  40a1ec:	subs	w8, w8, w0, uxtb
  40a1f0:	str	w8, [sp, #4]
  40a1f4:	ldr	w8, [sp, #4]
  40a1f8:	str	w8, [sp, #48]
  40a1fc:	ldr	w8, [sp, #48]
  40a200:	stur	w8, [x29, #-4]
  40a204:	mov	w8, #0x1                   	// #1
  40a208:	str	w8, [sp, #64]
  40a20c:	b	40a21c <ascii_strlower_n@plt+0x5dbc>
  40a210:	stur	wzr, [x29, #-4]
  40a214:	mov	w8, #0x1                   	// #1
  40a218:	str	w8, [sp, #64]
  40a21c:	sub	x0, x29, #0x30
  40a220:	bl	403d20 <sd_bus_error_free@plt>
  40a224:	ldur	w0, [x29, #-4]
  40a228:	ldp	x29, x30, [sp, #128]
  40a22c:	add	sp, sp, #0x90
  40a230:	ret
  40a234:	sub	sp, sp, #0x90
  40a238:	stp	x29, x30, [sp, #128]
  40a23c:	add	x29, sp, #0x80
  40a240:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40a244:	add	x8, x8, #0x6f4
  40a248:	add	x8, x8, #0x3
  40a24c:	stur	w0, [x29, #-8]
  40a250:	stur	x1, [x29, #-16]
  40a254:	stur	x2, [x29, #-24]
  40a258:	stur	xzr, [x29, #-48]
  40a25c:	stur	xzr, [x29, #-40]
  40a260:	stur	xzr, [x29, #-32]
  40a264:	ldur	x9, [x29, #-24]
  40a268:	stur	x9, [x29, #-56]
  40a26c:	str	x8, [sp, #40]
  40a270:	ldur	x8, [x29, #-56]
  40a274:	cmp	x8, #0x0
  40a278:	cset	w9, ne  // ne = any
  40a27c:	mov	w10, #0x1                   	// #1
  40a280:	eor	w9, w9, #0x1
  40a284:	eor	w9, w9, w10
  40a288:	eor	w9, w9, w10
  40a28c:	and	w9, w9, #0x1
  40a290:	mov	w0, w9
  40a294:	sxtw	x8, w0
  40a298:	cbz	x8, 40a2c0 <ascii_strlower_n@plt+0x5e60>
  40a29c:	mov	w8, wzr
  40a2a0:	mov	w0, w8
  40a2a4:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40a2a8:	add	x1, x1, #0xf8
  40a2ac:	ldr	x2, [sp, #40]
  40a2b0:	mov	w3, #0x7d4                 	// #2004
  40a2b4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a2b8:	add	x4, x4, #0x761
  40a2bc:	bl	4039d0 <log_assert_failed_realm@plt>
  40a2c0:	ldur	w8, [x29, #-8]
  40a2c4:	cmp	w8, #0x2
  40a2c8:	b.lt	40a300 <ascii_strlower_n@plt+0x5ea0>  // b.tstop
  40a2cc:	ldur	x8, [x29, #-16]
  40a2d0:	ldr	x0, [x8, #8]
  40a2d4:	bl	405584 <ascii_strlower_n@plt+0x1124>
  40a2d8:	stur	w0, [x29, #-60]
  40a2dc:	ldur	w9, [x29, #-60]
  40a2e0:	cmp	w9, #0x0
  40a2e4:	cset	w9, ge  // ge = tcont
  40a2e8:	tbnz	w9, #0, 40a300 <ascii_strlower_n@plt+0x5ea0>
  40a2ec:	ldur	w8, [x29, #-60]
  40a2f0:	stur	w8, [x29, #-4]
  40a2f4:	mov	w8, #0x1                   	// #1
  40a2f8:	str	w8, [sp, #64]
  40a2fc:	b	40a51c <ascii_strlower_n@plt+0x60bc>
  40a300:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40a304:	add	x8, x8, #0x170
  40a308:	ldr	w9, [x8]
  40a30c:	cmp	w9, #0x0
  40a310:	cset	w9, gt
  40a314:	tbnz	w9, #0, 40a334 <ascii_strlower_n@plt+0x5ed4>
  40a318:	ldur	x0, [x29, #-56]
  40a31c:	mov	w1, #0x2                   	// #2
  40a320:	bl	40c9a4 <ascii_strlower_n@plt+0x8544>
  40a324:	stur	w0, [x29, #-4]
  40a328:	mov	w8, #0x1                   	// #1
  40a32c:	str	w8, [sp, #64]
  40a330:	b	40a51c <ascii_strlower_n@plt+0x60bc>
  40a334:	ldur	w8, [x29, #-8]
  40a338:	cmp	w8, #0x3
  40a33c:	b.ge	40a374 <ascii_strlower_n@plt+0x5f14>  // b.tcont
  40a340:	ldur	x0, [x29, #-56]
  40a344:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40a348:	add	x8, x8, #0x170
  40a34c:	ldr	w1, [x8]
  40a350:	mov	x8, xzr
  40a354:	mov	x2, x8
  40a358:	mov	w3, #0x2                   	// #2
  40a35c:	mov	x4, x8
  40a360:	bl	40bf80 <ascii_strlower_n@plt+0x7b20>
  40a364:	stur	w0, [x29, #-4]
  40a368:	mov	w9, #0x1                   	// #1
  40a36c:	str	w9, [sp, #64]
  40a370:	b	40a51c <ascii_strlower_n@plt+0x60bc>
  40a374:	ldur	x0, [x29, #-56]
  40a378:	ldur	x8, [x29, #-16]
  40a37c:	add	x1, x8, #0x10
  40a380:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40a384:	add	x2, x2, #0x1aa
  40a388:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40a38c:	add	x3, x3, #0x6e5
  40a390:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40a394:	add	x4, x4, #0x9a2
  40a398:	sub	x5, x29, #0x30
  40a39c:	bl	415514 <ascii_strlower_n@plt+0x110b4>
  40a3a0:	stur	w0, [x29, #-60]
  40a3a4:	ldur	w9, [x29, #-60]
  40a3a8:	cmp	w9, #0x0
  40a3ac:	cset	w9, ge  // ge = tcont
  40a3b0:	tbnz	w9, #0, 40a408 <ascii_strlower_n@plt+0x5fa8>
  40a3b4:	sub	x0, x29, #0x30
  40a3b8:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a3bc:	add	x1, x1, #0x65f
  40a3c0:	bl	403d40 <sd_bus_error_has_name@plt>
  40a3c4:	cbz	w0, 40a408 <ascii_strlower_n@plt+0x5fa8>
  40a3c8:	sub	x8, x29, #0x30
  40a3cc:	mov	x0, x8
  40a3d0:	str	x8, [sp, #32]
  40a3d4:	bl	403d20 <sd_bus_error_free@plt>
  40a3d8:	ldur	x0, [x29, #-56]
  40a3dc:	ldur	x8, [x29, #-16]
  40a3e0:	add	x1, x8, #0x10
  40a3e4:	adrp	x2, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a3e8:	add	x2, x2, #0x681
  40a3ec:	adrp	x3, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a3f0:	add	x3, x3, #0x69a
  40a3f4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a3f8:	add	x4, x4, #0x6b4
  40a3fc:	ldr	x5, [sp, #32]
  40a400:	bl	415514 <ascii_strlower_n@plt+0x110b4>
  40a404:	stur	w0, [x29, #-60]
  40a408:	ldur	w8, [x29, #-60]
  40a40c:	cmp	w8, #0x0
  40a410:	cset	w8, ge  // ge = tcont
  40a414:	tbnz	w8, #0, 40a510 <ascii_strlower_n@plt+0x60b0>
  40a418:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40a41c:	add	x8, x8, #0x148
  40a420:	ldrb	w9, [x8]
  40a424:	tbnz	w9, #0, 40a42c <ascii_strlower_n@plt+0x5fcc>
  40a428:	b	40a450 <ascii_strlower_n@plt+0x5ff0>
  40a42c:	sub	x0, x29, #0x30
  40a430:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a434:	add	x1, x1, #0x6d5
  40a438:	bl	403d40 <sd_bus_error_has_name@plt>
  40a43c:	cbz	w0, 40a450 <ascii_strlower_n@plt+0x5ff0>
  40a440:	stur	wzr, [x29, #-4]
  40a444:	mov	w8, #0x1                   	// #1
  40a448:	str	w8, [sp, #64]
  40a44c:	b	40a51c <ascii_strlower_n@plt+0x60bc>
  40a450:	mov	w8, #0x3                   	// #3
  40a454:	str	w8, [sp, #60]
  40a458:	ldur	w8, [x29, #-60]
  40a45c:	str	w8, [sp, #56]
  40a460:	str	wzr, [sp, #52]
  40a464:	ldr	w0, [sp, #52]
  40a468:	bl	403a10 <log_get_max_level_realm@plt>
  40a46c:	ldr	w8, [sp, #60]
  40a470:	and	w8, w8, #0x7
  40a474:	cmp	w0, w8
  40a478:	b.lt	40a4e0 <ascii_strlower_n@plt+0x6080>  // b.tstop
  40a47c:	ldr	w8, [sp, #52]
  40a480:	ldr	w9, [sp, #60]
  40a484:	orr	w0, w9, w8, lsl #10
  40a488:	ldr	w1, [sp, #56]
  40a48c:	ldur	w8, [x29, #-60]
  40a490:	sub	x10, x29, #0x30
  40a494:	str	w0, [sp, #28]
  40a498:	mov	x0, x10
  40a49c:	str	w1, [sp, #24]
  40a4a0:	mov	w1, w8
  40a4a4:	bl	403ce0 <bus_error_message@plt>
  40a4a8:	ldr	w8, [sp, #28]
  40a4ac:	str	x0, [sp, #16]
  40a4b0:	mov	w0, w8
  40a4b4:	ldr	w1, [sp, #24]
  40a4b8:	ldr	x2, [sp, #40]
  40a4bc:	mov	w3, #0x7f5                 	// #2037
  40a4c0:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a4c4:	add	x4, x4, #0x787
  40a4c8:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a4cc:	add	x5, x5, #0x793
  40a4d0:	ldr	x6, [sp, #16]
  40a4d4:	bl	403a20 <log_internal_realm@plt>
  40a4d8:	str	w0, [sp, #12]
  40a4dc:	b	40a4f4 <ascii_strlower_n@plt+0x6094>
  40a4e0:	ldr	w0, [sp, #56]
  40a4e4:	bl	403a30 <abs@plt>
  40a4e8:	mov	w8, wzr
  40a4ec:	subs	w8, w8, w0, uxtb
  40a4f0:	str	w8, [sp, #12]
  40a4f4:	ldr	w8, [sp, #12]
  40a4f8:	str	w8, [sp, #48]
  40a4fc:	ldr	w8, [sp, #48]
  40a500:	stur	w8, [x29, #-4]
  40a504:	mov	w8, #0x1                   	// #1
  40a508:	str	w8, [sp, #64]
  40a50c:	b	40a51c <ascii_strlower_n@plt+0x60bc>
  40a510:	stur	wzr, [x29, #-4]
  40a514:	mov	w8, #0x1                   	// #1
  40a518:	str	w8, [sp, #64]
  40a51c:	sub	x0, x29, #0x30
  40a520:	bl	403d20 <sd_bus_error_free@plt>
  40a524:	ldur	w0, [x29, #-4]
  40a528:	ldp	x29, x30, [sp, #128]
  40a52c:	add	sp, sp, #0x90
  40a530:	ret
  40a534:	sub	sp, sp, #0xc0
  40a538:	stp	x29, x30, [sp, #176]
  40a53c:	add	x29, sp, #0xb0
  40a540:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40a544:	add	x8, x8, #0x170
  40a548:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40a54c:	add	x9, x9, #0x6f4
  40a550:	add	x9, x9, #0x3
  40a554:	stur	w0, [x29, #-8]
  40a558:	stur	x1, [x29, #-16]
  40a55c:	stur	x2, [x29, #-24]
  40a560:	stur	xzr, [x29, #-48]
  40a564:	stur	xzr, [x29, #-40]
  40a568:	stur	xzr, [x29, #-32]
  40a56c:	ldur	x10, [x29, #-24]
  40a570:	stur	x10, [x29, #-56]
  40a574:	str	x8, [sp, #64]
  40a578:	str	x9, [sp, #56]
  40a57c:	ldur	x8, [x29, #-56]
  40a580:	cmp	x8, #0x0
  40a584:	cset	w9, ne  // ne = any
  40a588:	mov	w10, #0x1                   	// #1
  40a58c:	eor	w9, w9, #0x1
  40a590:	eor	w9, w9, w10
  40a594:	eor	w9, w9, w10
  40a598:	and	w9, w9, #0x1
  40a59c:	mov	w0, w9
  40a5a0:	sxtw	x8, w0
  40a5a4:	cbz	x8, 40a5cc <ascii_strlower_n@plt+0x616c>
  40a5a8:	mov	w8, wzr
  40a5ac:	mov	w0, w8
  40a5b0:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40a5b4:	add	x1, x1, #0xf8
  40a5b8:	ldr	x2, [sp, #56]
  40a5bc:	mov	w3, #0x800                 	// #2048
  40a5c0:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a5c4:	add	x4, x4, #0x815
  40a5c8:	bl	4039d0 <log_assert_failed_realm@plt>
  40a5cc:	ldur	w8, [x29, #-8]
  40a5d0:	cmp	w8, #0x2
  40a5d4:	b.lt	40a60c <ascii_strlower_n@plt+0x61ac>  // b.tstop
  40a5d8:	ldur	x8, [x29, #-16]
  40a5dc:	ldr	x0, [x8, #8]
  40a5e0:	bl	405584 <ascii_strlower_n@plt+0x1124>
  40a5e4:	stur	w0, [x29, #-60]
  40a5e8:	ldur	w9, [x29, #-60]
  40a5ec:	cmp	w9, #0x0
  40a5f0:	cset	w9, ge  // ge = tcont
  40a5f4:	tbnz	w9, #0, 40a60c <ascii_strlower_n@plt+0x61ac>
  40a5f8:	ldur	w8, [x29, #-60]
  40a5fc:	stur	w8, [x29, #-4]
  40a600:	mov	w8, #0x1                   	// #1
  40a604:	stur	w8, [x29, #-68]
  40a608:	b	40a930 <ascii_strlower_n@plt+0x64d0>
  40a60c:	ldr	x8, [sp, #64]
  40a610:	ldr	w9, [x8]
  40a614:	cmp	w9, #0x0
  40a618:	cset	w9, gt
  40a61c:	tbnz	w9, #0, 40a63c <ascii_strlower_n@plt+0x61dc>
  40a620:	ldur	x0, [x29, #-56]
  40a624:	mov	w1, #0x3                   	// #3
  40a628:	bl	40c9a4 <ascii_strlower_n@plt+0x8544>
  40a62c:	stur	w0, [x29, #-4]
  40a630:	mov	w8, #0x1                   	// #1
  40a634:	stur	w8, [x29, #-68]
  40a638:	b	40a930 <ascii_strlower_n@plt+0x64d0>
  40a63c:	ldur	w8, [x29, #-8]
  40a640:	cmp	w8, #0x3
  40a644:	b.ge	40a678 <ascii_strlower_n@plt+0x6218>  // b.tcont
  40a648:	ldur	x0, [x29, #-56]
  40a64c:	ldr	x8, [sp, #64]
  40a650:	ldr	w1, [x8]
  40a654:	mov	x9, xzr
  40a658:	mov	x2, x9
  40a65c:	mov	w3, #0x3                   	// #3
  40a660:	mov	x4, x9
  40a664:	bl	40bf80 <ascii_strlower_n@plt+0x7b20>
  40a668:	stur	w0, [x29, #-4]
  40a66c:	mov	w10, #0x1                   	// #1
  40a670:	stur	w10, [x29, #-68]
  40a674:	b	40a930 <ascii_strlower_n@plt+0x64d0>
  40a678:	ldur	x8, [x29, #-16]
  40a67c:	ldr	x0, [x8, #16]
  40a680:	bl	403c10 <parse_boolean@plt>
  40a684:	stur	w0, [x29, #-64]
  40a688:	ldur	w9, [x29, #-64]
  40a68c:	cmp	w9, #0x0
  40a690:	cset	w9, ge  // ge = tcont
  40a694:	tbnz	w9, #0, 40a730 <ascii_strlower_n@plt+0x62d0>
  40a698:	mov	w8, #0x3                   	// #3
  40a69c:	stur	w8, [x29, #-72]
  40a6a0:	ldur	w8, [x29, #-64]
  40a6a4:	stur	w8, [x29, #-76]
  40a6a8:	stur	wzr, [x29, #-80]
  40a6ac:	ldur	w0, [x29, #-80]
  40a6b0:	bl	403a10 <log_get_max_level_realm@plt>
  40a6b4:	ldur	w8, [x29, #-72]
  40a6b8:	and	w8, w8, #0x7
  40a6bc:	cmp	w0, w8
  40a6c0:	b.lt	40a700 <ascii_strlower_n@plt+0x62a0>  // b.tstop
  40a6c4:	ldur	w8, [x29, #-80]
  40a6c8:	ldur	w9, [x29, #-72]
  40a6cc:	orr	w0, w9, w8, lsl #10
  40a6d0:	ldur	w1, [x29, #-76]
  40a6d4:	ldur	x10, [x29, #-16]
  40a6d8:	ldr	x6, [x10, #16]
  40a6dc:	ldr	x2, [sp, #56]
  40a6e0:	mov	w3, #0x810                 	// #2064
  40a6e4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a6e8:	add	x4, x4, #0x842
  40a6ec:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a6f0:	add	x5, x5, #0x855
  40a6f4:	bl	403a20 <log_internal_realm@plt>
  40a6f8:	str	w0, [sp, #52]
  40a6fc:	b	40a714 <ascii_strlower_n@plt+0x62b4>
  40a700:	ldur	w0, [x29, #-76]
  40a704:	bl	403a30 <abs@plt>
  40a708:	mov	w8, wzr
  40a70c:	subs	w8, w8, w0, uxtb
  40a710:	str	w8, [sp, #52]
  40a714:	ldr	w8, [sp, #52]
  40a718:	stur	w8, [x29, #-84]
  40a71c:	ldur	w8, [x29, #-84]
  40a720:	stur	w8, [x29, #-4]
  40a724:	mov	w8, #0x1                   	// #1
  40a728:	stur	w8, [x29, #-68]
  40a72c:	b	40a930 <ascii_strlower_n@plt+0x64d0>
  40a730:	ldur	x0, [x29, #-56]
  40a734:	ldr	x8, [sp, #64]
  40a738:	ldr	w9, [x8]
  40a73c:	ldur	w10, [x29, #-64]
  40a740:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40a744:	add	x1, x1, #0x1aa
  40a748:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40a74c:	add	x2, x2, #0x6e5
  40a750:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40a754:	add	x3, x3, #0x9a2
  40a758:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a75c:	add	x4, x4, #0x87a
  40a760:	sub	x5, x29, #0x30
  40a764:	mov	x11, xzr
  40a768:	mov	x6, x11
  40a76c:	adrp	x7, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a770:	add	x7, x7, #0x88e
  40a774:	mov	x11, sp
  40a778:	str	w9, [x11]
  40a77c:	mov	x11, sp
  40a780:	str	w10, [x11, #8]
  40a784:	bl	403d30 <sd_bus_call_method@plt>
  40a788:	stur	w0, [x29, #-60]
  40a78c:	ldur	w9, [x29, #-60]
  40a790:	cmp	w9, #0x0
  40a794:	cset	w9, ge  // ge = tcont
  40a798:	tbnz	w9, #0, 40a81c <ascii_strlower_n@plt+0x63bc>
  40a79c:	sub	x0, x29, #0x30
  40a7a0:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a7a4:	add	x1, x1, #0x65f
  40a7a8:	bl	403d40 <sd_bus_error_has_name@plt>
  40a7ac:	cbz	w0, 40a81c <ascii_strlower_n@plt+0x63bc>
  40a7b0:	sub	x8, x29, #0x30
  40a7b4:	mov	x0, x8
  40a7b8:	str	x8, [sp, #40]
  40a7bc:	bl	403d20 <sd_bus_error_free@plt>
  40a7c0:	ldur	x0, [x29, #-56]
  40a7c4:	ldr	x8, [sp, #64]
  40a7c8:	ldr	w9, [x8]
  40a7cc:	ldur	w10, [x29, #-64]
  40a7d0:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a7d4:	add	x1, x1, #0x681
  40a7d8:	adrp	x2, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a7dc:	add	x2, x2, #0x69a
  40a7e0:	adrp	x3, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a7e4:	add	x3, x3, #0x6b4
  40a7e8:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a7ec:	add	x4, x4, #0x87a
  40a7f0:	ldr	x5, [sp, #40]
  40a7f4:	mov	x11, xzr
  40a7f8:	mov	x6, x11
  40a7fc:	adrp	x7, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a800:	add	x7, x7, #0x88e
  40a804:	mov	x11, sp
  40a808:	str	w9, [x11]
  40a80c:	mov	x11, sp
  40a810:	str	w10, [x11, #8]
  40a814:	bl	403d30 <sd_bus_call_method@plt>
  40a818:	stur	w0, [x29, #-60]
  40a81c:	ldur	w8, [x29, #-60]
  40a820:	cmp	w8, #0x0
  40a824:	cset	w8, ge  // ge = tcont
  40a828:	tbnz	w8, #0, 40a924 <ascii_strlower_n@plt+0x64c4>
  40a82c:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40a830:	add	x8, x8, #0x148
  40a834:	ldrb	w9, [x8]
  40a838:	tbnz	w9, #0, 40a840 <ascii_strlower_n@plt+0x63e0>
  40a83c:	b	40a864 <ascii_strlower_n@plt+0x6404>
  40a840:	sub	x0, x29, #0x30
  40a844:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a848:	add	x1, x1, #0x6d5
  40a84c:	bl	403d40 <sd_bus_error_has_name@plt>
  40a850:	cbz	w0, 40a864 <ascii_strlower_n@plt+0x6404>
  40a854:	stur	wzr, [x29, #-4]
  40a858:	mov	w8, #0x1                   	// #1
  40a85c:	stur	w8, [x29, #-68]
  40a860:	b	40a930 <ascii_strlower_n@plt+0x64d0>
  40a864:	mov	w8, #0x3                   	// #3
  40a868:	str	w8, [sp, #88]
  40a86c:	ldur	w8, [x29, #-60]
  40a870:	str	w8, [sp, #84]
  40a874:	str	wzr, [sp, #80]
  40a878:	ldr	w0, [sp, #80]
  40a87c:	bl	403a10 <log_get_max_level_realm@plt>
  40a880:	ldr	w8, [sp, #88]
  40a884:	and	w8, w8, #0x7
  40a888:	cmp	w0, w8
  40a88c:	b.lt	40a8f4 <ascii_strlower_n@plt+0x6494>  // b.tstop
  40a890:	ldr	w8, [sp, #80]
  40a894:	ldr	w9, [sp, #88]
  40a898:	orr	w0, w9, w8, lsl #10
  40a89c:	ldr	w1, [sp, #84]
  40a8a0:	ldur	w8, [x29, #-60]
  40a8a4:	sub	x10, x29, #0x30
  40a8a8:	str	w0, [sp, #36]
  40a8ac:	mov	x0, x10
  40a8b0:	str	w1, [sp, #32]
  40a8b4:	mov	w1, w8
  40a8b8:	bl	403ce0 <bus_error_message@plt>
  40a8bc:	ldr	w8, [sp, #36]
  40a8c0:	str	x0, [sp, #24]
  40a8c4:	mov	w0, w8
  40a8c8:	ldr	w1, [sp, #32]
  40a8cc:	ldr	x2, [sp, #56]
  40a8d0:	mov	w3, #0x82d                 	// #2093
  40a8d4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a8d8:	add	x4, x4, #0x842
  40a8dc:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a8e0:	add	x5, x5, #0x891
  40a8e4:	ldr	x6, [sp, #24]
  40a8e8:	bl	403a20 <log_internal_realm@plt>
  40a8ec:	str	w0, [sp, #20]
  40a8f0:	b	40a908 <ascii_strlower_n@plt+0x64a8>
  40a8f4:	ldr	w0, [sp, #84]
  40a8f8:	bl	403a30 <abs@plt>
  40a8fc:	mov	w8, wzr
  40a900:	subs	w8, w8, w0, uxtb
  40a904:	str	w8, [sp, #20]
  40a908:	ldr	w8, [sp, #20]
  40a90c:	str	w8, [sp, #76]
  40a910:	ldr	w8, [sp, #76]
  40a914:	stur	w8, [x29, #-4]
  40a918:	mov	w8, #0x1                   	// #1
  40a91c:	stur	w8, [x29, #-68]
  40a920:	b	40a930 <ascii_strlower_n@plt+0x64d0>
  40a924:	stur	wzr, [x29, #-4]
  40a928:	mov	w8, #0x1                   	// #1
  40a92c:	stur	w8, [x29, #-68]
  40a930:	sub	x0, x29, #0x30
  40a934:	bl	403d20 <sd_bus_error_free@plt>
  40a938:	ldur	w0, [x29, #-4]
  40a93c:	ldp	x29, x30, [sp, #176]
  40a940:	add	sp, sp, #0xc0
  40a944:	ret
  40a948:	sub	sp, sp, #0xa0
  40a94c:	stp	x29, x30, [sp, #144]
  40a950:	add	x29, sp, #0x90
  40a954:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40a958:	add	x8, x8, #0x170
  40a95c:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40a960:	add	x9, x9, #0x6f4
  40a964:	add	x9, x9, #0x3
  40a968:	stur	w0, [x29, #-8]
  40a96c:	stur	x1, [x29, #-16]
  40a970:	stur	x2, [x29, #-24]
  40a974:	stur	xzr, [x29, #-48]
  40a978:	stur	xzr, [x29, #-40]
  40a97c:	stur	xzr, [x29, #-32]
  40a980:	ldur	x10, [x29, #-24]
  40a984:	stur	x10, [x29, #-56]
  40a988:	str	x8, [sp, #56]
  40a98c:	str	x9, [sp, #48]
  40a990:	ldur	x8, [x29, #-56]
  40a994:	cmp	x8, #0x0
  40a998:	cset	w9, ne  // ne = any
  40a99c:	mov	w10, #0x1                   	// #1
  40a9a0:	eor	w9, w9, #0x1
  40a9a4:	eor	w9, w9, w10
  40a9a8:	eor	w9, w9, w10
  40a9ac:	and	w9, w9, #0x1
  40a9b0:	mov	w0, w9
  40a9b4:	sxtw	x8, w0
  40a9b8:	cbz	x8, 40a9e0 <ascii_strlower_n@plt+0x6580>
  40a9bc:	mov	w8, wzr
  40a9c0:	mov	w0, w8
  40a9c4:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40a9c8:	add	x1, x1, #0xf8
  40a9cc:	ldr	x2, [sp, #48]
  40a9d0:	mov	w3, #0x838                 	// #2104
  40a9d4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40a9d8:	add	x4, x4, #0x8bf
  40a9dc:	bl	4039d0 <log_assert_failed_realm@plt>
  40a9e0:	ldur	w8, [x29, #-8]
  40a9e4:	cmp	w8, #0x2
  40a9e8:	b.lt	40aa20 <ascii_strlower_n@plt+0x65c0>  // b.tstop
  40a9ec:	ldur	x8, [x29, #-16]
  40a9f0:	ldr	x0, [x8, #8]
  40a9f4:	bl	405584 <ascii_strlower_n@plt+0x1124>
  40a9f8:	stur	w0, [x29, #-60]
  40a9fc:	ldur	w9, [x29, #-60]
  40aa00:	cmp	w9, #0x0
  40aa04:	cset	w9, ge  // ge = tcont
  40aa08:	tbnz	w9, #0, 40aa20 <ascii_strlower_n@plt+0x65c0>
  40aa0c:	ldur	w8, [x29, #-60]
  40aa10:	stur	w8, [x29, #-4]
  40aa14:	mov	w8, #0x1                   	// #1
  40aa18:	stur	w8, [x29, #-64]
  40aa1c:	b	40ac94 <ascii_strlower_n@plt+0x6834>
  40aa20:	ldr	x8, [sp, #56]
  40aa24:	ldr	w9, [x8]
  40aa28:	cmp	w9, #0x0
  40aa2c:	cset	w9, gt
  40aa30:	tbnz	w9, #0, 40aa50 <ascii_strlower_n@plt+0x65f0>
  40aa34:	ldur	x0, [x29, #-56]
  40aa38:	mov	w1, #0x4                   	// #4
  40aa3c:	bl	40c9a4 <ascii_strlower_n@plt+0x8544>
  40aa40:	stur	w0, [x29, #-4]
  40aa44:	mov	w8, #0x1                   	// #1
  40aa48:	stur	w8, [x29, #-64]
  40aa4c:	b	40ac94 <ascii_strlower_n@plt+0x6834>
  40aa50:	ldur	w8, [x29, #-8]
  40aa54:	cmp	w8, #0x3
  40aa58:	b.ge	40aa8c <ascii_strlower_n@plt+0x662c>  // b.tcont
  40aa5c:	ldur	x0, [x29, #-56]
  40aa60:	ldr	x8, [sp, #56]
  40aa64:	ldr	w1, [x8]
  40aa68:	mov	x9, xzr
  40aa6c:	mov	x2, x9
  40aa70:	mov	w3, #0x4                   	// #4
  40aa74:	mov	x4, x9
  40aa78:	bl	40bf80 <ascii_strlower_n@plt+0x7b20>
  40aa7c:	stur	w0, [x29, #-4]
  40aa80:	mov	w10, #0x1                   	// #1
  40aa84:	stur	w10, [x29, #-64]
  40aa88:	b	40ac94 <ascii_strlower_n@plt+0x6834>
  40aa8c:	ldur	x0, [x29, #-56]
  40aa90:	ldr	x8, [sp, #56]
  40aa94:	ldr	w9, [x8]
  40aa98:	ldur	x10, [x29, #-16]
  40aa9c:	ldr	x10, [x10, #16]
  40aaa0:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40aaa4:	add	x1, x1, #0x1aa
  40aaa8:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40aaac:	add	x2, x2, #0x6e5
  40aab0:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40aab4:	add	x3, x3, #0x9a2
  40aab8:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40aabc:	add	x4, x4, #0x8e4
  40aac0:	sub	x5, x29, #0x30
  40aac4:	mov	x11, xzr
  40aac8:	mov	x6, x11
  40aacc:	adrp	x7, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40aad0:	add	x7, x7, #0xea9
  40aad4:	mov	x11, sp
  40aad8:	str	w9, [x11]
  40aadc:	mov	x11, sp
  40aae0:	str	x10, [x11, #8]
  40aae4:	bl	403d30 <sd_bus_call_method@plt>
  40aae8:	stur	w0, [x29, #-60]
  40aaec:	ldur	w9, [x29, #-60]
  40aaf0:	cmp	w9, #0x0
  40aaf4:	cset	w9, ge  // ge = tcont
  40aaf8:	tbnz	w9, #0, 40ab80 <ascii_strlower_n@plt+0x6720>
  40aafc:	sub	x0, x29, #0x30
  40ab00:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40ab04:	add	x1, x1, #0x65f
  40ab08:	bl	403d40 <sd_bus_error_has_name@plt>
  40ab0c:	cbz	w0, 40ab80 <ascii_strlower_n@plt+0x6720>
  40ab10:	sub	x8, x29, #0x30
  40ab14:	mov	x0, x8
  40ab18:	str	x8, [sp, #40]
  40ab1c:	bl	403d20 <sd_bus_error_free@plt>
  40ab20:	ldur	x0, [x29, #-56]
  40ab24:	ldr	x8, [sp, #56]
  40ab28:	ldr	w9, [x8]
  40ab2c:	ldur	x10, [x29, #-16]
  40ab30:	ldr	x10, [x10, #16]
  40ab34:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40ab38:	add	x1, x1, #0x681
  40ab3c:	adrp	x2, 430000 <ascii_strlower_n@plt+0x2bba0>
  40ab40:	add	x2, x2, #0x69a
  40ab44:	adrp	x3, 430000 <ascii_strlower_n@plt+0x2bba0>
  40ab48:	add	x3, x3, #0x6b4
  40ab4c:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40ab50:	add	x4, x4, #0x8e4
  40ab54:	ldr	x5, [sp, #40]
  40ab58:	mov	x11, xzr
  40ab5c:	mov	x6, x11
  40ab60:	adrp	x7, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ab64:	add	x7, x7, #0xea9
  40ab68:	mov	x11, sp
  40ab6c:	str	w9, [x11]
  40ab70:	mov	x11, sp
  40ab74:	str	x10, [x11, #8]
  40ab78:	bl	403d30 <sd_bus_call_method@plt>
  40ab7c:	stur	w0, [x29, #-60]
  40ab80:	ldur	w8, [x29, #-60]
  40ab84:	cmp	w8, #0x0
  40ab88:	cset	w8, ge  // ge = tcont
  40ab8c:	tbnz	w8, #0, 40ac88 <ascii_strlower_n@plt+0x6828>
  40ab90:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40ab94:	add	x8, x8, #0x148
  40ab98:	ldrb	w9, [x8]
  40ab9c:	tbnz	w9, #0, 40aba4 <ascii_strlower_n@plt+0x6744>
  40aba0:	b	40abc8 <ascii_strlower_n@plt+0x6768>
  40aba4:	sub	x0, x29, #0x30
  40aba8:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40abac:	add	x1, x1, #0x6d5
  40abb0:	bl	403d40 <sd_bus_error_has_name@plt>
  40abb4:	cbz	w0, 40abc8 <ascii_strlower_n@plt+0x6768>
  40abb8:	stur	wzr, [x29, #-4]
  40abbc:	mov	w8, #0x1                   	// #1
  40abc0:	stur	w8, [x29, #-64]
  40abc4:	b	40ac94 <ascii_strlower_n@plt+0x6834>
  40abc8:	mov	w8, #0x3                   	// #3
  40abcc:	stur	w8, [x29, #-68]
  40abd0:	ldur	w8, [x29, #-60]
  40abd4:	str	w8, [sp, #72]
  40abd8:	str	wzr, [sp, #68]
  40abdc:	ldr	w0, [sp, #68]
  40abe0:	bl	403a10 <log_get_max_level_realm@plt>
  40abe4:	ldur	w8, [x29, #-68]
  40abe8:	and	w8, w8, #0x7
  40abec:	cmp	w0, w8
  40abf0:	b.lt	40ac58 <ascii_strlower_n@plt+0x67f8>  // b.tstop
  40abf4:	ldr	w8, [sp, #68]
  40abf8:	ldur	w9, [x29, #-68]
  40abfc:	orr	w0, w9, w8, lsl #10
  40ac00:	ldr	w1, [sp, #72]
  40ac04:	ldur	w8, [x29, #-60]
  40ac08:	sub	x10, x29, #0x30
  40ac0c:	str	w0, [sp, #36]
  40ac10:	mov	x0, x10
  40ac14:	str	w1, [sp, #32]
  40ac18:	mov	w1, w8
  40ac1c:	bl	403ce0 <bus_error_message@plt>
  40ac20:	ldr	w8, [sp, #36]
  40ac24:	str	x0, [sp, #24]
  40ac28:	mov	w0, w8
  40ac2c:	ldr	w1, [sp, #32]
  40ac30:	ldr	x2, [sp, #48]
  40ac34:	mov	w3, #0x861                 	// #2145
  40ac38:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40ac3c:	add	x4, x4, #0x8f1
  40ac40:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  40ac44:	add	x5, x5, #0x8fc
  40ac48:	ldr	x6, [sp, #24]
  40ac4c:	bl	403a20 <log_internal_realm@plt>
  40ac50:	str	w0, [sp, #20]
  40ac54:	b	40ac6c <ascii_strlower_n@plt+0x680c>
  40ac58:	ldr	w0, [sp, #72]
  40ac5c:	bl	403a30 <abs@plt>
  40ac60:	mov	w8, wzr
  40ac64:	subs	w8, w8, w0, uxtb
  40ac68:	str	w8, [sp, #20]
  40ac6c:	ldr	w8, [sp, #20]
  40ac70:	str	w8, [sp, #64]
  40ac74:	ldr	w8, [sp, #64]
  40ac78:	stur	w8, [x29, #-4]
  40ac7c:	mov	w8, #0x1                   	// #1
  40ac80:	stur	w8, [x29, #-64]
  40ac84:	b	40ac94 <ascii_strlower_n@plt+0x6834>
  40ac88:	stur	wzr, [x29, #-4]
  40ac8c:	mov	w8, #0x1                   	// #1
  40ac90:	stur	w8, [x29, #-64]
  40ac94:	sub	x0, x29, #0x30
  40ac98:	bl	403d20 <sd_bus_error_free@plt>
  40ac9c:	ldur	w0, [x29, #-4]
  40aca0:	ldp	x29, x30, [sp, #144]
  40aca4:	add	sp, sp, #0xa0
  40aca8:	ret
  40acac:	sub	sp, sp, #0xa0
  40acb0:	stp	x29, x30, [sp, #144]
  40acb4:	add	x29, sp, #0x90
  40acb8:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40acbc:	add	x8, x8, #0x170
  40acc0:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40acc4:	add	x9, x9, #0x6f4
  40acc8:	add	x9, x9, #0x3
  40accc:	stur	w0, [x29, #-8]
  40acd0:	stur	x1, [x29, #-16]
  40acd4:	stur	x2, [x29, #-24]
  40acd8:	stur	xzr, [x29, #-48]
  40acdc:	stur	xzr, [x29, #-40]
  40ace0:	stur	xzr, [x29, #-32]
  40ace4:	ldur	x10, [x29, #-24]
  40ace8:	stur	x10, [x29, #-56]
  40acec:	str	x8, [sp, #56]
  40acf0:	str	x9, [sp, #48]
  40acf4:	ldur	x8, [x29, #-56]
  40acf8:	cmp	x8, #0x0
  40acfc:	cset	w9, ne  // ne = any
  40ad00:	mov	w10, #0x1                   	// #1
  40ad04:	eor	w9, w9, #0x1
  40ad08:	eor	w9, w9, w10
  40ad0c:	eor	w9, w9, w10
  40ad10:	and	w9, w9, #0x1
  40ad14:	mov	w0, w9
  40ad18:	sxtw	x8, w0
  40ad1c:	cbz	x8, 40ad44 <ascii_strlower_n@plt+0x68e4>
  40ad20:	mov	w8, wzr
  40ad24:	mov	w0, w8
  40ad28:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ad2c:	add	x1, x1, #0xf8
  40ad30:	ldr	x2, [sp, #48]
  40ad34:	mov	w3, #0x86c                 	// #2156
  40ad38:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40ad3c:	add	x4, x4, #0x922
  40ad40:	bl	4039d0 <log_assert_failed_realm@plt>
  40ad44:	ldur	w8, [x29, #-8]
  40ad48:	cmp	w8, #0x2
  40ad4c:	b.lt	40ad84 <ascii_strlower_n@plt+0x6924>  // b.tstop
  40ad50:	ldur	x8, [x29, #-16]
  40ad54:	ldr	x0, [x8, #8]
  40ad58:	bl	405584 <ascii_strlower_n@plt+0x1124>
  40ad5c:	stur	w0, [x29, #-60]
  40ad60:	ldur	w9, [x29, #-60]
  40ad64:	cmp	w9, #0x0
  40ad68:	cset	w9, ge  // ge = tcont
  40ad6c:	tbnz	w9, #0, 40ad84 <ascii_strlower_n@plt+0x6924>
  40ad70:	ldur	w8, [x29, #-60]
  40ad74:	stur	w8, [x29, #-4]
  40ad78:	mov	w8, #0x1                   	// #1
  40ad7c:	stur	w8, [x29, #-64]
  40ad80:	b	40aff8 <ascii_strlower_n@plt+0x6b98>
  40ad84:	ldr	x8, [sp, #56]
  40ad88:	ldr	w9, [x8]
  40ad8c:	cmp	w9, #0x0
  40ad90:	cset	w9, gt
  40ad94:	tbnz	w9, #0, 40adb4 <ascii_strlower_n@plt+0x6954>
  40ad98:	ldur	x0, [x29, #-56]
  40ad9c:	mov	w1, #0x5                   	// #5
  40ada0:	bl	40c9a4 <ascii_strlower_n@plt+0x8544>
  40ada4:	stur	w0, [x29, #-4]
  40ada8:	mov	w8, #0x1                   	// #1
  40adac:	stur	w8, [x29, #-64]
  40adb0:	b	40aff8 <ascii_strlower_n@plt+0x6b98>
  40adb4:	ldur	w8, [x29, #-8]
  40adb8:	cmp	w8, #0x3
  40adbc:	b.ge	40adf0 <ascii_strlower_n@plt+0x6990>  // b.tcont
  40adc0:	ldur	x0, [x29, #-56]
  40adc4:	ldr	x8, [sp, #56]
  40adc8:	ldr	w1, [x8]
  40adcc:	mov	x9, xzr
  40add0:	mov	x2, x9
  40add4:	mov	w3, #0x5                   	// #5
  40add8:	mov	x4, x9
  40addc:	bl	40bf80 <ascii_strlower_n@plt+0x7b20>
  40ade0:	stur	w0, [x29, #-4]
  40ade4:	mov	w10, #0x1                   	// #1
  40ade8:	stur	w10, [x29, #-64]
  40adec:	b	40aff8 <ascii_strlower_n@plt+0x6b98>
  40adf0:	ldur	x0, [x29, #-56]
  40adf4:	ldr	x8, [sp, #56]
  40adf8:	ldr	w9, [x8]
  40adfc:	ldur	x10, [x29, #-16]
  40ae00:	ldr	x10, [x10, #16]
  40ae04:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ae08:	add	x1, x1, #0x1aa
  40ae0c:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ae10:	add	x2, x2, #0x6e5
  40ae14:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ae18:	add	x3, x3, #0x9a2
  40ae1c:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40ae20:	add	x4, x4, #0x946
  40ae24:	sub	x5, x29, #0x30
  40ae28:	mov	x11, xzr
  40ae2c:	mov	x6, x11
  40ae30:	adrp	x7, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ae34:	add	x7, x7, #0xea9
  40ae38:	mov	x11, sp
  40ae3c:	str	w9, [x11]
  40ae40:	mov	x11, sp
  40ae44:	str	x10, [x11, #8]
  40ae48:	bl	403d30 <sd_bus_call_method@plt>
  40ae4c:	stur	w0, [x29, #-60]
  40ae50:	ldur	w9, [x29, #-60]
  40ae54:	cmp	w9, #0x0
  40ae58:	cset	w9, ge  // ge = tcont
  40ae5c:	tbnz	w9, #0, 40aee4 <ascii_strlower_n@plt+0x6a84>
  40ae60:	sub	x0, x29, #0x30
  40ae64:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40ae68:	add	x1, x1, #0x65f
  40ae6c:	bl	403d40 <sd_bus_error_has_name@plt>
  40ae70:	cbz	w0, 40aee4 <ascii_strlower_n@plt+0x6a84>
  40ae74:	sub	x8, x29, #0x30
  40ae78:	mov	x0, x8
  40ae7c:	str	x8, [sp, #40]
  40ae80:	bl	403d20 <sd_bus_error_free@plt>
  40ae84:	ldur	x0, [x29, #-56]
  40ae88:	ldr	x8, [sp, #56]
  40ae8c:	ldr	w9, [x8]
  40ae90:	ldur	x10, [x29, #-16]
  40ae94:	ldr	x10, [x10, #16]
  40ae98:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40ae9c:	add	x1, x1, #0x681
  40aea0:	adrp	x2, 430000 <ascii_strlower_n@plt+0x2bba0>
  40aea4:	add	x2, x2, #0x69a
  40aea8:	adrp	x3, 430000 <ascii_strlower_n@plt+0x2bba0>
  40aeac:	add	x3, x3, #0x6b4
  40aeb0:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40aeb4:	add	x4, x4, #0x946
  40aeb8:	ldr	x5, [sp, #40]
  40aebc:	mov	x11, xzr
  40aec0:	mov	x6, x11
  40aec4:	adrp	x7, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40aec8:	add	x7, x7, #0xea9
  40aecc:	mov	x11, sp
  40aed0:	str	w9, [x11]
  40aed4:	mov	x11, sp
  40aed8:	str	x10, [x11, #8]
  40aedc:	bl	403d30 <sd_bus_call_method@plt>
  40aee0:	stur	w0, [x29, #-60]
  40aee4:	ldur	w8, [x29, #-60]
  40aee8:	cmp	w8, #0x0
  40aeec:	cset	w8, ge  // ge = tcont
  40aef0:	tbnz	w8, #0, 40afec <ascii_strlower_n@plt+0x6b8c>
  40aef4:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40aef8:	add	x8, x8, #0x148
  40aefc:	ldrb	w9, [x8]
  40af00:	tbnz	w9, #0, 40af08 <ascii_strlower_n@plt+0x6aa8>
  40af04:	b	40af2c <ascii_strlower_n@plt+0x6acc>
  40af08:	sub	x0, x29, #0x30
  40af0c:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40af10:	add	x1, x1, #0x6d5
  40af14:	bl	403d40 <sd_bus_error_has_name@plt>
  40af18:	cbz	w0, 40af2c <ascii_strlower_n@plt+0x6acc>
  40af1c:	stur	wzr, [x29, #-4]
  40af20:	mov	w8, #0x1                   	// #1
  40af24:	stur	w8, [x29, #-64]
  40af28:	b	40aff8 <ascii_strlower_n@plt+0x6b98>
  40af2c:	mov	w8, #0x3                   	// #3
  40af30:	stur	w8, [x29, #-68]
  40af34:	ldur	w8, [x29, #-60]
  40af38:	str	w8, [sp, #72]
  40af3c:	str	wzr, [sp, #68]
  40af40:	ldr	w0, [sp, #68]
  40af44:	bl	403a10 <log_get_max_level_realm@plt>
  40af48:	ldur	w8, [x29, #-68]
  40af4c:	and	w8, w8, #0x7
  40af50:	cmp	w0, w8
  40af54:	b.lt	40afbc <ascii_strlower_n@plt+0x6b5c>  // b.tstop
  40af58:	ldr	w8, [sp, #68]
  40af5c:	ldur	w9, [x29, #-68]
  40af60:	orr	w0, w9, w8, lsl #10
  40af64:	ldr	w1, [sp, #72]
  40af68:	ldur	w8, [x29, #-60]
  40af6c:	sub	x10, x29, #0x30
  40af70:	str	w0, [sp, #36]
  40af74:	mov	x0, x10
  40af78:	str	w1, [sp, #32]
  40af7c:	mov	w1, w8
  40af80:	bl	403ce0 <bus_error_message@plt>
  40af84:	ldr	w8, [sp, #36]
  40af88:	str	x0, [sp, #24]
  40af8c:	mov	w0, w8
  40af90:	ldr	w1, [sp, #32]
  40af94:	ldr	x2, [sp, #48]
  40af98:	mov	w3, #0x895                 	// #2197
  40af9c:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40afa0:	add	x4, x4, #0x95a
  40afa4:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  40afa8:	add	x5, x5, #0x964
  40afac:	ldr	x6, [sp, #24]
  40afb0:	bl	403a20 <log_internal_realm@plt>
  40afb4:	str	w0, [sp, #20]
  40afb8:	b	40afd0 <ascii_strlower_n@plt+0x6b70>
  40afbc:	ldr	w0, [sp, #72]
  40afc0:	bl	403a30 <abs@plt>
  40afc4:	mov	w8, wzr
  40afc8:	subs	w8, w8, w0, uxtb
  40afcc:	str	w8, [sp, #20]
  40afd0:	ldr	w8, [sp, #20]
  40afd4:	str	w8, [sp, #64]
  40afd8:	ldr	w8, [sp, #64]
  40afdc:	stur	w8, [x29, #-4]
  40afe0:	mov	w8, #0x1                   	// #1
  40afe4:	stur	w8, [x29, #-64]
  40afe8:	b	40aff8 <ascii_strlower_n@plt+0x6b98>
  40afec:	stur	wzr, [x29, #-4]
  40aff0:	mov	w8, #0x1                   	// #1
  40aff4:	stur	w8, [x29, #-64]
  40aff8:	sub	x0, x29, #0x30
  40affc:	bl	403d20 <sd_bus_error_free@plt>
  40b000:	ldur	w0, [x29, #-4]
  40b004:	ldp	x29, x30, [sp, #144]
  40b008:	add	sp, sp, #0xa0
  40b00c:	ret
  40b010:	sub	sp, sp, #0xa0
  40b014:	stp	x29, x30, [sp, #144]
  40b018:	add	x29, sp, #0x90
  40b01c:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40b020:	add	x8, x8, #0x170
  40b024:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40b028:	add	x9, x9, #0x6f4
  40b02c:	add	x9, x9, #0x3
  40b030:	stur	w0, [x29, #-8]
  40b034:	stur	x1, [x29, #-16]
  40b038:	stur	x2, [x29, #-24]
  40b03c:	stur	xzr, [x29, #-48]
  40b040:	stur	xzr, [x29, #-40]
  40b044:	stur	xzr, [x29, #-32]
  40b048:	ldur	x10, [x29, #-24]
  40b04c:	stur	x10, [x29, #-56]
  40b050:	str	x8, [sp, #56]
  40b054:	str	x9, [sp, #48]
  40b058:	ldur	x8, [x29, #-56]
  40b05c:	cmp	x8, #0x0
  40b060:	cset	w9, ne  // ne = any
  40b064:	mov	w10, #0x1                   	// #1
  40b068:	eor	w9, w9, #0x1
  40b06c:	eor	w9, w9, w10
  40b070:	eor	w9, w9, w10
  40b074:	and	w9, w9, #0x1
  40b078:	mov	w0, w9
  40b07c:	sxtw	x8, w0
  40b080:	cbz	x8, 40b0a8 <ascii_strlower_n@plt+0x6c48>
  40b084:	mov	w8, wzr
  40b088:	mov	w0, w8
  40b08c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40b090:	add	x1, x1, #0xf8
  40b094:	ldr	x2, [sp, #48]
  40b098:	mov	w3, #0x8a0                 	// #2208
  40b09c:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b0a0:	add	x4, x4, #0x991
  40b0a4:	bl	4039d0 <log_assert_failed_realm@plt>
  40b0a8:	ldur	w8, [x29, #-8]
  40b0ac:	cmp	w8, #0x2
  40b0b0:	b.lt	40b0e8 <ascii_strlower_n@plt+0x6c88>  // b.tstop
  40b0b4:	ldur	x8, [x29, #-16]
  40b0b8:	ldr	x0, [x8, #8]
  40b0bc:	bl	405584 <ascii_strlower_n@plt+0x1124>
  40b0c0:	stur	w0, [x29, #-60]
  40b0c4:	ldur	w9, [x29, #-60]
  40b0c8:	cmp	w9, #0x0
  40b0cc:	cset	w9, ge  // ge = tcont
  40b0d0:	tbnz	w9, #0, 40b0e8 <ascii_strlower_n@plt+0x6c88>
  40b0d4:	ldur	w8, [x29, #-60]
  40b0d8:	stur	w8, [x29, #-4]
  40b0dc:	mov	w8, #0x1                   	// #1
  40b0e0:	stur	w8, [x29, #-64]
  40b0e4:	b	40b35c <ascii_strlower_n@plt+0x6efc>
  40b0e8:	ldr	x8, [sp, #56]
  40b0ec:	ldr	w9, [x8]
  40b0f0:	cmp	w9, #0x0
  40b0f4:	cset	w9, gt
  40b0f8:	tbnz	w9, #0, 40b118 <ascii_strlower_n@plt+0x6cb8>
  40b0fc:	ldur	x0, [x29, #-56]
  40b100:	mov	w1, #0x6                   	// #6
  40b104:	bl	40c9a4 <ascii_strlower_n@plt+0x8544>
  40b108:	stur	w0, [x29, #-4]
  40b10c:	mov	w8, #0x1                   	// #1
  40b110:	stur	w8, [x29, #-64]
  40b114:	b	40b35c <ascii_strlower_n@plt+0x6efc>
  40b118:	ldur	w8, [x29, #-8]
  40b11c:	cmp	w8, #0x3
  40b120:	b.ge	40b154 <ascii_strlower_n@plt+0x6cf4>  // b.tcont
  40b124:	ldur	x0, [x29, #-56]
  40b128:	ldr	x8, [sp, #56]
  40b12c:	ldr	w1, [x8]
  40b130:	mov	x9, xzr
  40b134:	mov	x2, x9
  40b138:	mov	w3, #0x6                   	// #6
  40b13c:	mov	x4, x9
  40b140:	bl	40bf80 <ascii_strlower_n@plt+0x7b20>
  40b144:	stur	w0, [x29, #-4]
  40b148:	mov	w10, #0x1                   	// #1
  40b14c:	stur	w10, [x29, #-64]
  40b150:	b	40b35c <ascii_strlower_n@plt+0x6efc>
  40b154:	ldur	x0, [x29, #-56]
  40b158:	ldr	x8, [sp, #56]
  40b15c:	ldr	w9, [x8]
  40b160:	ldur	x10, [x29, #-16]
  40b164:	ldr	x10, [x10, #16]
  40b168:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40b16c:	add	x1, x1, #0x1aa
  40b170:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40b174:	add	x2, x2, #0x6e5
  40b178:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40b17c:	add	x3, x3, #0x9a2
  40b180:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b184:	add	x4, x4, #0x9bd
  40b188:	sub	x5, x29, #0x30
  40b18c:	mov	x11, xzr
  40b190:	mov	x6, x11
  40b194:	adrp	x7, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40b198:	add	x7, x7, #0xea9
  40b19c:	mov	x11, sp
  40b1a0:	str	w9, [x11]
  40b1a4:	mov	x11, sp
  40b1a8:	str	x10, [x11, #8]
  40b1ac:	bl	403d30 <sd_bus_call_method@plt>
  40b1b0:	stur	w0, [x29, #-60]
  40b1b4:	ldur	w9, [x29, #-60]
  40b1b8:	cmp	w9, #0x0
  40b1bc:	cset	w9, ge  // ge = tcont
  40b1c0:	tbnz	w9, #0, 40b248 <ascii_strlower_n@plt+0x6de8>
  40b1c4:	sub	x0, x29, #0x30
  40b1c8:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b1cc:	add	x1, x1, #0x65f
  40b1d0:	bl	403d40 <sd_bus_error_has_name@plt>
  40b1d4:	cbz	w0, 40b248 <ascii_strlower_n@plt+0x6de8>
  40b1d8:	sub	x8, x29, #0x30
  40b1dc:	mov	x0, x8
  40b1e0:	str	x8, [sp, #40]
  40b1e4:	bl	403d20 <sd_bus_error_free@plt>
  40b1e8:	ldur	x0, [x29, #-56]
  40b1ec:	ldr	x8, [sp, #56]
  40b1f0:	ldr	w9, [x8]
  40b1f4:	ldur	x10, [x29, #-16]
  40b1f8:	ldr	x10, [x10, #16]
  40b1fc:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b200:	add	x1, x1, #0x681
  40b204:	adrp	x2, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b208:	add	x2, x2, #0x69a
  40b20c:	adrp	x3, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b210:	add	x3, x3, #0x6b4
  40b214:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b218:	add	x4, x4, #0x9bd
  40b21c:	ldr	x5, [sp, #40]
  40b220:	mov	x11, xzr
  40b224:	mov	x6, x11
  40b228:	adrp	x7, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40b22c:	add	x7, x7, #0xea9
  40b230:	mov	x11, sp
  40b234:	str	w9, [x11]
  40b238:	mov	x11, sp
  40b23c:	str	x10, [x11, #8]
  40b240:	bl	403d30 <sd_bus_call_method@plt>
  40b244:	stur	w0, [x29, #-60]
  40b248:	ldur	w8, [x29, #-60]
  40b24c:	cmp	w8, #0x0
  40b250:	cset	w8, ge  // ge = tcont
  40b254:	tbnz	w8, #0, 40b350 <ascii_strlower_n@plt+0x6ef0>
  40b258:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40b25c:	add	x8, x8, #0x148
  40b260:	ldrb	w9, [x8]
  40b264:	tbnz	w9, #0, 40b26c <ascii_strlower_n@plt+0x6e0c>
  40b268:	b	40b290 <ascii_strlower_n@plt+0x6e30>
  40b26c:	sub	x0, x29, #0x30
  40b270:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b274:	add	x1, x1, #0x6d5
  40b278:	bl	403d40 <sd_bus_error_has_name@plt>
  40b27c:	cbz	w0, 40b290 <ascii_strlower_n@plt+0x6e30>
  40b280:	stur	wzr, [x29, #-4]
  40b284:	mov	w8, #0x1                   	// #1
  40b288:	stur	w8, [x29, #-64]
  40b28c:	b	40b35c <ascii_strlower_n@plt+0x6efc>
  40b290:	mov	w8, #0x3                   	// #3
  40b294:	stur	w8, [x29, #-68]
  40b298:	ldur	w8, [x29, #-60]
  40b29c:	str	w8, [sp, #72]
  40b2a0:	str	wzr, [sp, #68]
  40b2a4:	ldr	w0, [sp, #68]
  40b2a8:	bl	403a10 <log_get_max_level_realm@plt>
  40b2ac:	ldur	w8, [x29, #-68]
  40b2b0:	and	w8, w8, #0x7
  40b2b4:	cmp	w0, w8
  40b2b8:	b.lt	40b320 <ascii_strlower_n@plt+0x6ec0>  // b.tstop
  40b2bc:	ldr	w8, [sp, #68]
  40b2c0:	ldur	w9, [x29, #-68]
  40b2c4:	orr	w0, w9, w8, lsl #10
  40b2c8:	ldr	w1, [sp, #72]
  40b2cc:	ldur	w8, [x29, #-60]
  40b2d0:	sub	x10, x29, #0x30
  40b2d4:	str	w0, [sp, #36]
  40b2d8:	mov	x0, x10
  40b2dc:	str	w1, [sp, #32]
  40b2e0:	mov	w1, w8
  40b2e4:	bl	403ce0 <bus_error_message@plt>
  40b2e8:	ldr	w8, [sp, #36]
  40b2ec:	str	x0, [sp, #24]
  40b2f0:	mov	w0, w8
  40b2f4:	ldr	w1, [sp, #32]
  40b2f8:	ldr	x2, [sp, #48]
  40b2fc:	mov	w3, #0x8c9                 	// #2249
  40b300:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b304:	add	x4, x4, #0x9cf
  40b308:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b30c:	add	x5, x5, #0x9e1
  40b310:	ldr	x6, [sp, #24]
  40b314:	bl	403a20 <log_internal_realm@plt>
  40b318:	str	w0, [sp, #20]
  40b31c:	b	40b334 <ascii_strlower_n@plt+0x6ed4>
  40b320:	ldr	w0, [sp, #72]
  40b324:	bl	403a30 <abs@plt>
  40b328:	mov	w8, wzr
  40b32c:	subs	w8, w8, w0, uxtb
  40b330:	str	w8, [sp, #20]
  40b334:	ldr	w8, [sp, #20]
  40b338:	str	w8, [sp, #64]
  40b33c:	ldr	w8, [sp, #64]
  40b340:	stur	w8, [x29, #-4]
  40b344:	mov	w8, #0x1                   	// #1
  40b348:	stur	w8, [x29, #-64]
  40b34c:	b	40b35c <ascii_strlower_n@plt+0x6efc>
  40b350:	stur	wzr, [x29, #-4]
  40b354:	mov	w8, #0x1                   	// #1
  40b358:	stur	w8, [x29, #-64]
  40b35c:	sub	x0, x29, #0x30
  40b360:	bl	403d20 <sd_bus_error_free@plt>
  40b364:	ldur	w0, [x29, #-4]
  40b368:	ldp	x29, x30, [sp, #144]
  40b36c:	add	sp, sp, #0xa0
  40b370:	ret
  40b374:	sub	sp, sp, #0xa0
  40b378:	stp	x29, x30, [sp, #144]
  40b37c:	add	x29, sp, #0x90
  40b380:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40b384:	add	x8, x8, #0x170
  40b388:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40b38c:	add	x9, x9, #0x6f4
  40b390:	add	x9, x9, #0x3
  40b394:	stur	w0, [x29, #-8]
  40b398:	stur	x1, [x29, #-16]
  40b39c:	stur	x2, [x29, #-24]
  40b3a0:	stur	xzr, [x29, #-48]
  40b3a4:	stur	xzr, [x29, #-40]
  40b3a8:	stur	xzr, [x29, #-32]
  40b3ac:	ldur	x10, [x29, #-24]
  40b3b0:	stur	x10, [x29, #-56]
  40b3b4:	str	x8, [sp, #56]
  40b3b8:	str	x9, [sp, #48]
  40b3bc:	ldur	x8, [x29, #-56]
  40b3c0:	cmp	x8, #0x0
  40b3c4:	cset	w9, ne  // ne = any
  40b3c8:	mov	w10, #0x1                   	// #1
  40b3cc:	eor	w9, w9, #0x1
  40b3d0:	eor	w9, w9, w10
  40b3d4:	eor	w9, w9, w10
  40b3d8:	and	w9, w9, #0x1
  40b3dc:	mov	w0, w9
  40b3e0:	sxtw	x8, w0
  40b3e4:	cbz	x8, 40b40c <ascii_strlower_n@plt+0x6fac>
  40b3e8:	mov	w8, wzr
  40b3ec:	mov	w0, w8
  40b3f0:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40b3f4:	add	x1, x1, #0xf8
  40b3f8:	ldr	x2, [sp, #48]
  40b3fc:	mov	w3, #0x8d4                 	// #2260
  40b400:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b404:	add	x4, x4, #0xa0c
  40b408:	bl	4039d0 <log_assert_failed_realm@plt>
  40b40c:	ldur	w8, [x29, #-8]
  40b410:	cmp	w8, #0x2
  40b414:	b.lt	40b44c <ascii_strlower_n@plt+0x6fec>  // b.tstop
  40b418:	ldur	x8, [x29, #-16]
  40b41c:	ldr	x0, [x8, #8]
  40b420:	bl	405584 <ascii_strlower_n@plt+0x1124>
  40b424:	stur	w0, [x29, #-60]
  40b428:	ldur	w9, [x29, #-60]
  40b42c:	cmp	w9, #0x0
  40b430:	cset	w9, ge  // ge = tcont
  40b434:	tbnz	w9, #0, 40b44c <ascii_strlower_n@plt+0x6fec>
  40b438:	ldur	w8, [x29, #-60]
  40b43c:	stur	w8, [x29, #-4]
  40b440:	mov	w8, #0x1                   	// #1
  40b444:	stur	w8, [x29, #-64]
  40b448:	b	40b6c0 <ascii_strlower_n@plt+0x7260>
  40b44c:	ldr	x8, [sp, #56]
  40b450:	ldr	w9, [x8]
  40b454:	cmp	w9, #0x0
  40b458:	cset	w9, gt
  40b45c:	tbnz	w9, #0, 40b47c <ascii_strlower_n@plt+0x701c>
  40b460:	ldur	x0, [x29, #-56]
  40b464:	mov	w1, #0x7                   	// #7
  40b468:	bl	40c9a4 <ascii_strlower_n@plt+0x8544>
  40b46c:	stur	w0, [x29, #-4]
  40b470:	mov	w8, #0x1                   	// #1
  40b474:	stur	w8, [x29, #-64]
  40b478:	b	40b6c0 <ascii_strlower_n@plt+0x7260>
  40b47c:	ldur	w8, [x29, #-8]
  40b480:	cmp	w8, #0x3
  40b484:	b.ge	40b4b8 <ascii_strlower_n@plt+0x7058>  // b.tcont
  40b488:	ldur	x0, [x29, #-56]
  40b48c:	ldr	x8, [sp, #56]
  40b490:	ldr	w1, [x8]
  40b494:	mov	x9, xzr
  40b498:	mov	x2, x9
  40b49c:	mov	w3, #0x7                   	// #7
  40b4a0:	mov	x4, x9
  40b4a4:	bl	40bf80 <ascii_strlower_n@plt+0x7b20>
  40b4a8:	stur	w0, [x29, #-4]
  40b4ac:	mov	w10, #0x1                   	// #1
  40b4b0:	stur	w10, [x29, #-64]
  40b4b4:	b	40b6c0 <ascii_strlower_n@plt+0x7260>
  40b4b8:	ldur	x0, [x29, #-56]
  40b4bc:	ldr	x8, [sp, #56]
  40b4c0:	ldr	w9, [x8]
  40b4c4:	ldur	x10, [x29, #-16]
  40b4c8:	ldr	x10, [x10, #16]
  40b4cc:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40b4d0:	add	x1, x1, #0x1aa
  40b4d4:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40b4d8:	add	x2, x2, #0x6e5
  40b4dc:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40b4e0:	add	x3, x3, #0x9a2
  40b4e4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b4e8:	add	x4, x4, #0xa32
  40b4ec:	sub	x5, x29, #0x30
  40b4f0:	mov	x11, xzr
  40b4f4:	mov	x6, x11
  40b4f8:	adrp	x7, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40b4fc:	add	x7, x7, #0xea9
  40b500:	mov	x11, sp
  40b504:	str	w9, [x11]
  40b508:	mov	x11, sp
  40b50c:	str	x10, [x11, #8]
  40b510:	bl	403d30 <sd_bus_call_method@plt>
  40b514:	stur	w0, [x29, #-60]
  40b518:	ldur	w9, [x29, #-60]
  40b51c:	cmp	w9, #0x0
  40b520:	cset	w9, ge  // ge = tcont
  40b524:	tbnz	w9, #0, 40b5ac <ascii_strlower_n@plt+0x714c>
  40b528:	sub	x0, x29, #0x30
  40b52c:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b530:	add	x1, x1, #0x65f
  40b534:	bl	403d40 <sd_bus_error_has_name@plt>
  40b538:	cbz	w0, 40b5ac <ascii_strlower_n@plt+0x714c>
  40b53c:	sub	x8, x29, #0x30
  40b540:	mov	x0, x8
  40b544:	str	x8, [sp, #40]
  40b548:	bl	403d20 <sd_bus_error_free@plt>
  40b54c:	ldur	x0, [x29, #-56]
  40b550:	ldr	x8, [sp, #56]
  40b554:	ldr	w9, [x8]
  40b558:	ldur	x10, [x29, #-16]
  40b55c:	ldr	x10, [x10, #16]
  40b560:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b564:	add	x1, x1, #0x681
  40b568:	adrp	x2, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b56c:	add	x2, x2, #0x69a
  40b570:	adrp	x3, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b574:	add	x3, x3, #0x6b4
  40b578:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b57c:	add	x4, x4, #0xa32
  40b580:	ldr	x5, [sp, #40]
  40b584:	mov	x11, xzr
  40b588:	mov	x6, x11
  40b58c:	adrp	x7, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40b590:	add	x7, x7, #0xea9
  40b594:	mov	x11, sp
  40b598:	str	w9, [x11]
  40b59c:	mov	x11, sp
  40b5a0:	str	x10, [x11, #8]
  40b5a4:	bl	403d30 <sd_bus_call_method@plt>
  40b5a8:	stur	w0, [x29, #-60]
  40b5ac:	ldur	w8, [x29, #-60]
  40b5b0:	cmp	w8, #0x0
  40b5b4:	cset	w8, ge  // ge = tcont
  40b5b8:	tbnz	w8, #0, 40b6b4 <ascii_strlower_n@plt+0x7254>
  40b5bc:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40b5c0:	add	x8, x8, #0x148
  40b5c4:	ldrb	w9, [x8]
  40b5c8:	tbnz	w9, #0, 40b5d0 <ascii_strlower_n@plt+0x7170>
  40b5cc:	b	40b5f4 <ascii_strlower_n@plt+0x7194>
  40b5d0:	sub	x0, x29, #0x30
  40b5d4:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b5d8:	add	x1, x1, #0x6d5
  40b5dc:	bl	403d40 <sd_bus_error_has_name@plt>
  40b5e0:	cbz	w0, 40b5f4 <ascii_strlower_n@plt+0x7194>
  40b5e4:	stur	wzr, [x29, #-4]
  40b5e8:	mov	w8, #0x1                   	// #1
  40b5ec:	stur	w8, [x29, #-64]
  40b5f0:	b	40b6c0 <ascii_strlower_n@plt+0x7260>
  40b5f4:	mov	w8, #0x3                   	// #3
  40b5f8:	stur	w8, [x29, #-68]
  40b5fc:	ldur	w8, [x29, #-60]
  40b600:	str	w8, [sp, #72]
  40b604:	str	wzr, [sp, #68]
  40b608:	ldr	w0, [sp, #68]
  40b60c:	bl	403a10 <log_get_max_level_realm@plt>
  40b610:	ldur	w8, [x29, #-68]
  40b614:	and	w8, w8, #0x7
  40b618:	cmp	w0, w8
  40b61c:	b.lt	40b684 <ascii_strlower_n@plt+0x7224>  // b.tstop
  40b620:	ldr	w8, [sp, #68]
  40b624:	ldur	w9, [x29, #-68]
  40b628:	orr	w0, w9, w8, lsl #10
  40b62c:	ldr	w1, [sp, #72]
  40b630:	ldur	w8, [x29, #-60]
  40b634:	sub	x10, x29, #0x30
  40b638:	str	w0, [sp, #36]
  40b63c:	mov	x0, x10
  40b640:	str	w1, [sp, #32]
  40b644:	mov	w1, w8
  40b648:	bl	403ce0 <bus_error_message@plt>
  40b64c:	ldr	w8, [sp, #36]
  40b650:	str	x0, [sp, #24]
  40b654:	mov	w0, w8
  40b658:	ldr	w1, [sp, #32]
  40b65c:	ldr	x2, [sp, #48]
  40b660:	mov	w3, #0x8fd                 	// #2301
  40b664:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b668:	add	x4, x4, #0xa40
  40b66c:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b670:	add	x5, x5, #0xa4c
  40b674:	ldr	x6, [sp, #24]
  40b678:	bl	403a20 <log_internal_realm@plt>
  40b67c:	str	w0, [sp, #20]
  40b680:	b	40b698 <ascii_strlower_n@plt+0x7238>
  40b684:	ldr	w0, [sp, #72]
  40b688:	bl	403a30 <abs@plt>
  40b68c:	mov	w8, wzr
  40b690:	subs	w8, w8, w0, uxtb
  40b694:	str	w8, [sp, #20]
  40b698:	ldr	w8, [sp, #20]
  40b69c:	str	w8, [sp, #64]
  40b6a0:	ldr	w8, [sp, #64]
  40b6a4:	stur	w8, [x29, #-4]
  40b6a8:	mov	w8, #0x1                   	// #1
  40b6ac:	stur	w8, [x29, #-64]
  40b6b0:	b	40b6c0 <ascii_strlower_n@plt+0x7260>
  40b6b4:	stur	wzr, [x29, #-4]
  40b6b8:	mov	w8, #0x1                   	// #1
  40b6bc:	stur	w8, [x29, #-64]
  40b6c0:	sub	x0, x29, #0x30
  40b6c4:	bl	403d20 <sd_bus_error_free@plt>
  40b6c8:	ldur	w0, [x29, #-4]
  40b6cc:	ldp	x29, x30, [sp, #144]
  40b6d0:	add	sp, sp, #0xa0
  40b6d4:	ret
  40b6d8:	sub	sp, sp, #0x100
  40b6dc:	stp	x29, x30, [sp, #240]
  40b6e0:	add	x29, sp, #0xf0
  40b6e4:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40b6e8:	add	x8, x8, #0x6f4
  40b6ec:	add	x8, x8, #0x3
  40b6f0:	adrp	x9, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b6f4:	add	x9, x9, #0xa96
  40b6f8:	stur	w0, [x29, #-8]
  40b6fc:	stur	x1, [x29, #-16]
  40b700:	stur	x2, [x29, #-24]
  40b704:	stur	xzr, [x29, #-48]
  40b708:	stur	xzr, [x29, #-40]
  40b70c:	stur	xzr, [x29, #-32]
  40b710:	ldur	x10, [x29, #-24]
  40b714:	stur	x10, [x29, #-56]
  40b718:	str	x8, [sp, #88]
  40b71c:	str	x9, [sp, #80]
  40b720:	ldur	x8, [x29, #-56]
  40b724:	cmp	x8, #0x0
  40b728:	cset	w9, ne  // ne = any
  40b72c:	mov	w10, #0x1                   	// #1
  40b730:	eor	w9, w9, #0x1
  40b734:	eor	w9, w9, w10
  40b738:	eor	w9, w9, w10
  40b73c:	and	w9, w9, #0x1
  40b740:	mov	w0, w9
  40b744:	sxtw	x8, w0
  40b748:	cbz	x8, 40b770 <ascii_strlower_n@plt+0x7310>
  40b74c:	mov	w8, wzr
  40b750:	mov	w0, w8
  40b754:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40b758:	add	x1, x1, #0xf8
  40b75c:	ldr	x2, [sp, #88]
  40b760:	mov	w3, #0x923                 	// #2339
  40b764:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b768:	add	x4, x4, #0xa73
  40b76c:	bl	4039d0 <log_assert_failed_realm@plt>
  40b770:	ldur	w8, [x29, #-8]
  40b774:	cmp	w8, #0x2
  40b778:	b.lt	40b7b0 <ascii_strlower_n@plt+0x7350>  // b.tstop
  40b77c:	ldur	x8, [x29, #-16]
  40b780:	ldr	x0, [x8, #8]
  40b784:	bl	405584 <ascii_strlower_n@plt+0x1124>
  40b788:	stur	w0, [x29, #-68]
  40b78c:	ldur	w9, [x29, #-68]
  40b790:	cmp	w9, #0x0
  40b794:	cset	w9, ge  // ge = tcont
  40b798:	tbnz	w9, #0, 40b7b0 <ascii_strlower_n@plt+0x7350>
  40b79c:	ldur	w8, [x29, #-68]
  40b7a0:	stur	w8, [x29, #-4]
  40b7a4:	mov	w8, #0x1                   	// #1
  40b7a8:	stur	w8, [x29, #-76]
  40b7ac:	b	40bbe8 <ascii_strlower_n@plt+0x7788>
  40b7b0:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40b7b4:	add	x8, x8, #0x170
  40b7b8:	ldr	w9, [x8]
  40b7bc:	cmp	w9, #0x0
  40b7c0:	cset	w9, gt
  40b7c4:	tbnz	w9, #0, 40b7e4 <ascii_strlower_n@plt+0x7384>
  40b7c8:	ldur	x0, [x29, #-56]
  40b7cc:	mov	w1, #0x8                   	// #8
  40b7d0:	bl	40c9a4 <ascii_strlower_n@plt+0x8544>
  40b7d4:	stur	w0, [x29, #-4]
  40b7d8:	mov	w8, #0x1                   	// #1
  40b7dc:	stur	w8, [x29, #-76]
  40b7e0:	b	40bbe8 <ascii_strlower_n@plt+0x7788>
  40b7e4:	ldur	w8, [x29, #-8]
  40b7e8:	cmp	w8, #0x3
  40b7ec:	b.ge	40b824 <ascii_strlower_n@plt+0x73c4>  // b.tcont
  40b7f0:	ldur	x0, [x29, #-56]
  40b7f4:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40b7f8:	add	x8, x8, #0x170
  40b7fc:	ldr	w1, [x8]
  40b800:	mov	x8, xzr
  40b804:	mov	x2, x8
  40b808:	mov	w3, #0x8                   	// #8
  40b80c:	mov	x4, x8
  40b810:	bl	40bf80 <ascii_strlower_n@plt+0x7b20>
  40b814:	stur	w0, [x29, #-4]
  40b818:	mov	w9, #0x1                   	// #1
  40b81c:	stur	w9, [x29, #-76]
  40b820:	b	40bbe8 <ascii_strlower_n@plt+0x7788>
  40b824:	ldur	x8, [x29, #-16]
  40b828:	add	x0, x8, #0x10
  40b82c:	sub	x8, x29, #0x60
  40b830:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40b834:	add	x9, x9, #0x7e4
  40b838:	stur	x9, [x29, #-96]
  40b83c:	mov	x9, xzr
  40b840:	str	x9, [x8, #8]
  40b844:	mov	x1, x8
  40b848:	bl	403d50 <strv_equal@plt>
  40b84c:	and	w10, w0, #0x1
  40b850:	sturb	w10, [x29, #-69]
  40b854:	ldurb	w10, [x29, #-69]
  40b858:	tbnz	w10, #0, 40b9f4 <ascii_strlower_n@plt+0x7594>
  40b85c:	ldur	x8, [x29, #-16]
  40b860:	add	x8, x8, #0x10
  40b864:	stur	x8, [x29, #-64]
  40b868:	ldur	x8, [x29, #-64]
  40b86c:	mov	w9, #0x0                   	// #0
  40b870:	str	w9, [sp, #76]
  40b874:	cbz	x8, 40b88c <ascii_strlower_n@plt+0x742c>
  40b878:	ldur	x8, [x29, #-64]
  40b87c:	ldr	x8, [x8]
  40b880:	cmp	x8, #0x0
  40b884:	cset	w9, ne  // ne = any
  40b888:	str	w9, [sp, #76]
  40b88c:	ldr	w8, [sp, #76]
  40b890:	tbnz	w8, #0, 40b898 <ascii_strlower_n@plt+0x7438>
  40b894:	b	40b9f4 <ascii_strlower_n@plt+0x7594>
  40b898:	ldur	x8, [x29, #-64]
  40b89c:	ldr	x0, [x8]
  40b8a0:	bl	415b34 <ascii_strlower_n@plt+0x116d4>
  40b8a4:	stur	w0, [x29, #-68]
  40b8a8:	ldur	w9, [x29, #-68]
  40b8ac:	cmp	w9, #0x0
  40b8b0:	cset	w9, ge  // ge = tcont
  40b8b4:	tbnz	w9, #0, 40b94c <ascii_strlower_n@plt+0x74ec>
  40b8b8:	mov	w8, #0x3                   	// #3
  40b8bc:	stur	w8, [x29, #-100]
  40b8c0:	ldur	w8, [x29, #-68]
  40b8c4:	stur	w8, [x29, #-104]
  40b8c8:	stur	wzr, [x29, #-108]
  40b8cc:	ldur	w0, [x29, #-108]
  40b8d0:	bl	403a10 <log_get_max_level_realm@plt>
  40b8d4:	ldur	w8, [x29, #-100]
  40b8d8:	and	w8, w8, #0x7
  40b8dc:	cmp	w0, w8
  40b8e0:	b.lt	40b91c <ascii_strlower_n@plt+0x74bc>  // b.tstop
  40b8e4:	ldur	w8, [x29, #-108]
  40b8e8:	ldur	w9, [x29, #-100]
  40b8ec:	orr	w0, w9, w8, lsl #10
  40b8f0:	ldur	w1, [x29, #-104]
  40b8f4:	ldur	x10, [x29, #-64]
  40b8f8:	ldr	x6, [x10]
  40b8fc:	ldr	x2, [sp, #88]
  40b900:	mov	w3, #0x939                 	// #2361
  40b904:	ldr	x4, [sp, #80]
  40b908:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b90c:	add	x5, x5, #0x7d5
  40b910:	bl	403a20 <log_internal_realm@plt>
  40b914:	str	w0, [sp, #72]
  40b918:	b	40b930 <ascii_strlower_n@plt+0x74d0>
  40b91c:	ldur	w0, [x29, #-104]
  40b920:	bl	403a30 <abs@plt>
  40b924:	mov	w8, wzr
  40b928:	subs	w8, w8, w0, uxtb
  40b92c:	str	w8, [sp, #72]
  40b930:	ldr	w8, [sp, #72]
  40b934:	stur	w8, [x29, #-112]
  40b938:	ldur	w8, [x29, #-112]
  40b93c:	stur	w8, [x29, #-4]
  40b940:	mov	w8, #0x1                   	// #1
  40b944:	stur	w8, [x29, #-76]
  40b948:	b	40bbe8 <ascii_strlower_n@plt+0x7788>
  40b94c:	ldur	w8, [x29, #-68]
  40b950:	cbnz	w8, 40b9e4 <ascii_strlower_n@plt+0x7584>
  40b954:	mov	w8, #0x3                   	// #3
  40b958:	stur	w8, [x29, #-116]
  40b95c:	str	wzr, [sp, #120]
  40b960:	str	wzr, [sp, #116]
  40b964:	ldr	w0, [sp, #116]
  40b968:	bl	403a10 <log_get_max_level_realm@plt>
  40b96c:	ldur	w8, [x29, #-116]
  40b970:	and	w8, w8, #0x7
  40b974:	cmp	w0, w8
  40b978:	b.lt	40b9b4 <ascii_strlower_n@plt+0x7554>  // b.tstop
  40b97c:	ldr	w8, [sp, #116]
  40b980:	ldur	w9, [x29, #-116]
  40b984:	orr	w0, w9, w8, lsl #10
  40b988:	ldr	w1, [sp, #120]
  40b98c:	ldur	x10, [x29, #-64]
  40b990:	ldr	x6, [x10]
  40b994:	ldr	x2, [sp, #88]
  40b998:	mov	w3, #0x93b                 	// #2363
  40b99c:	ldr	x4, [sp, #80]
  40b9a0:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  40b9a4:	add	x5, x5, #0x800
  40b9a8:	bl	403a20 <log_internal_realm@plt>
  40b9ac:	str	w0, [sp, #68]
  40b9b0:	b	40b9c8 <ascii_strlower_n@plt+0x7568>
  40b9b4:	ldr	w0, [sp, #120]
  40b9b8:	bl	403a30 <abs@plt>
  40b9bc:	mov	w8, wzr
  40b9c0:	subs	w8, w8, w0, uxtb
  40b9c4:	str	w8, [sp, #68]
  40b9c8:	ldr	w8, [sp, #68]
  40b9cc:	str	w8, [sp, #112]
  40b9d0:	mov	w8, #0xffffffea            	// #-22
  40b9d4:	stur	w8, [x29, #-4]
  40b9d8:	mov	w8, #0x1                   	// #1
  40b9dc:	stur	w8, [x29, #-76]
  40b9e0:	b	40bbe8 <ascii_strlower_n@plt+0x7788>
  40b9e4:	ldur	x8, [x29, #-64]
  40b9e8:	add	x8, x8, #0x8
  40b9ec:	stur	x8, [x29, #-64]
  40b9f0:	b	40b868 <ascii_strlower_n@plt+0x7408>
  40b9f4:	ldur	x0, [x29, #-56]
  40b9f8:	ldurb	w8, [x29, #-69]
  40b9fc:	str	x0, [sp, #56]
  40ba00:	tbnz	w8, #0, 40ba08 <ascii_strlower_n@plt+0x75a8>
  40ba04:	b	40ba14 <ascii_strlower_n@plt+0x75b4>
  40ba08:	mov	x8, xzr
  40ba0c:	str	x8, [sp, #48]
  40ba10:	b	40ba20 <ascii_strlower_n@plt+0x75c0>
  40ba14:	ldur	x8, [x29, #-16]
  40ba18:	add	x8, x8, #0x10
  40ba1c:	str	x8, [sp, #48]
  40ba20:	ldr	x8, [sp, #48]
  40ba24:	ldr	x0, [sp, #56]
  40ba28:	mov	x1, x8
  40ba2c:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ba30:	add	x2, x2, #0x1aa
  40ba34:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ba38:	add	x3, x3, #0x6e5
  40ba3c:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ba40:	add	x4, x4, #0x9a2
  40ba44:	sub	x5, x29, #0x30
  40ba48:	bl	415bf0 <ascii_strlower_n@plt+0x11790>
  40ba4c:	stur	w0, [x29, #-68]
  40ba50:	ldur	w9, [x29, #-68]
  40ba54:	cmp	w9, #0x0
  40ba58:	cset	w9, ge  // ge = tcont
  40ba5c:	tbnz	w9, #0, 40bad8 <ascii_strlower_n@plt+0x7678>
  40ba60:	sub	x0, x29, #0x30
  40ba64:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40ba68:	add	x1, x1, #0x65f
  40ba6c:	bl	403d40 <sd_bus_error_has_name@plt>
  40ba70:	cbz	w0, 40bad8 <ascii_strlower_n@plt+0x7678>
  40ba74:	sub	x0, x29, #0x30
  40ba78:	bl	403d20 <sd_bus_error_free@plt>
  40ba7c:	ldur	x0, [x29, #-56]
  40ba80:	ldurb	w8, [x29, #-69]
  40ba84:	str	x0, [sp, #40]
  40ba88:	tbnz	w8, #0, 40ba90 <ascii_strlower_n@plt+0x7630>
  40ba8c:	b	40ba9c <ascii_strlower_n@plt+0x763c>
  40ba90:	mov	x8, xzr
  40ba94:	str	x8, [sp, #32]
  40ba98:	b	40baa8 <ascii_strlower_n@plt+0x7648>
  40ba9c:	ldur	x8, [x29, #-16]
  40baa0:	add	x8, x8, #0x10
  40baa4:	str	x8, [sp, #32]
  40baa8:	ldr	x8, [sp, #32]
  40baac:	ldr	x0, [sp, #40]
  40bab0:	mov	x1, x8
  40bab4:	adrp	x2, 430000 <ascii_strlower_n@plt+0x2bba0>
  40bab8:	add	x2, x2, #0x681
  40babc:	adrp	x3, 430000 <ascii_strlower_n@plt+0x2bba0>
  40bac0:	add	x3, x3, #0x69a
  40bac4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40bac8:	add	x4, x4, #0x6b4
  40bacc:	sub	x5, x29, #0x30
  40bad0:	bl	415bf0 <ascii_strlower_n@plt+0x11790>
  40bad4:	stur	w0, [x29, #-68]
  40bad8:	ldur	w8, [x29, #-68]
  40badc:	cmp	w8, #0x0
  40bae0:	cset	w8, ge  // ge = tcont
  40bae4:	tbnz	w8, #0, 40bbdc <ascii_strlower_n@plt+0x777c>
  40bae8:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40baec:	add	x8, x8, #0x148
  40baf0:	ldrb	w9, [x8]
  40baf4:	tbnz	w9, #0, 40bafc <ascii_strlower_n@plt+0x769c>
  40baf8:	b	40bb20 <ascii_strlower_n@plt+0x76c0>
  40bafc:	sub	x0, x29, #0x30
  40bb00:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40bb04:	add	x1, x1, #0x6d5
  40bb08:	bl	403d40 <sd_bus_error_has_name@plt>
  40bb0c:	cbz	w0, 40bb20 <ascii_strlower_n@plt+0x76c0>
  40bb10:	stur	wzr, [x29, #-4]
  40bb14:	mov	w8, #0x1                   	// #1
  40bb18:	stur	w8, [x29, #-76]
  40bb1c:	b	40bbe8 <ascii_strlower_n@plt+0x7788>
  40bb20:	mov	w8, #0x3                   	// #3
  40bb24:	str	w8, [sp, #108]
  40bb28:	ldur	w8, [x29, #-68]
  40bb2c:	str	w8, [sp, #104]
  40bb30:	str	wzr, [sp, #100]
  40bb34:	ldr	w0, [sp, #100]
  40bb38:	bl	403a10 <log_get_max_level_realm@plt>
  40bb3c:	ldr	w8, [sp, #108]
  40bb40:	and	w8, w8, #0x7
  40bb44:	cmp	w0, w8
  40bb48:	b.lt	40bbac <ascii_strlower_n@plt+0x774c>  // b.tstop
  40bb4c:	ldr	w8, [sp, #100]
  40bb50:	ldr	w9, [sp, #108]
  40bb54:	orr	w0, w9, w8, lsl #10
  40bb58:	ldr	w1, [sp, #104]
  40bb5c:	ldur	w8, [x29, #-68]
  40bb60:	sub	x10, x29, #0x30
  40bb64:	str	w0, [sp, #28]
  40bb68:	mov	x0, x10
  40bb6c:	str	w1, [sp, #24]
  40bb70:	mov	w1, w8
  40bb74:	bl	403ce0 <bus_error_message@plt>
  40bb78:	ldr	w8, [sp, #28]
  40bb7c:	str	x0, [sp, #16]
  40bb80:	mov	w0, w8
  40bb84:	ldr	w1, [sp, #24]
  40bb88:	ldr	x2, [sp, #88]
  40bb8c:	mov	w3, #0x953                 	// #2387
  40bb90:	ldr	x4, [sp, #80]
  40bb94:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  40bb98:	add	x5, x5, #0xa9f
  40bb9c:	ldr	x6, [sp, #16]
  40bba0:	bl	403a20 <log_internal_realm@plt>
  40bba4:	str	w0, [sp, #12]
  40bba8:	b	40bbc0 <ascii_strlower_n@plt+0x7760>
  40bbac:	ldr	w0, [sp, #104]
  40bbb0:	bl	403a30 <abs@plt>
  40bbb4:	mov	w8, wzr
  40bbb8:	subs	w8, w8, w0, uxtb
  40bbbc:	str	w8, [sp, #12]
  40bbc0:	ldr	w8, [sp, #12]
  40bbc4:	str	w8, [sp, #96]
  40bbc8:	ldr	w8, [sp, #96]
  40bbcc:	stur	w8, [x29, #-4]
  40bbd0:	mov	w8, #0x1                   	// #1
  40bbd4:	stur	w8, [x29, #-76]
  40bbd8:	b	40bbe8 <ascii_strlower_n@plt+0x7788>
  40bbdc:	stur	wzr, [x29, #-4]
  40bbe0:	mov	w8, #0x1                   	// #1
  40bbe4:	stur	w8, [x29, #-76]
  40bbe8:	sub	x0, x29, #0x30
  40bbec:	bl	403d20 <sd_bus_error_free@plt>
  40bbf0:	ldur	w0, [x29, #-4]
  40bbf4:	ldp	x29, x30, [sp, #240]
  40bbf8:	add	sp, sp, #0x100
  40bbfc:	ret
  40bc00:	sub	sp, sp, #0xb0
  40bc04:	stp	x29, x30, [sp, #160]
  40bc08:	add	x29, sp, #0xa0
  40bc0c:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40bc10:	add	x8, x8, #0x170
  40bc14:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40bc18:	add	x9, x9, #0x6f4
  40bc1c:	add	x9, x9, #0x3
  40bc20:	stur	w0, [x29, #-8]
  40bc24:	stur	x1, [x29, #-16]
  40bc28:	stur	x2, [x29, #-24]
  40bc2c:	stur	xzr, [x29, #-48]
  40bc30:	stur	xzr, [x29, #-40]
  40bc34:	stur	xzr, [x29, #-32]
  40bc38:	ldur	x10, [x29, #-24]
  40bc3c:	stur	x10, [x29, #-56]
  40bc40:	str	x8, [sp, #56]
  40bc44:	str	x9, [sp, #48]
  40bc48:	ldur	x8, [x29, #-56]
  40bc4c:	cmp	x8, #0x0
  40bc50:	cset	w9, ne  // ne = any
  40bc54:	mov	w10, #0x1                   	// #1
  40bc58:	eor	w9, w9, #0x1
  40bc5c:	eor	w9, w9, w10
  40bc60:	eor	w9, w9, w10
  40bc64:	and	w9, w9, #0x1
  40bc68:	mov	w0, w9
  40bc6c:	sxtw	x8, w0
  40bc70:	cbz	x8, 40bc98 <ascii_strlower_n@plt+0x7838>
  40bc74:	mov	w8, wzr
  40bc78:	mov	w0, w8
  40bc7c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40bc80:	add	x1, x1, #0xf8
  40bc84:	ldr	x2, [sp, #48]
  40bc88:	mov	w3, #0x95e                 	// #2398
  40bc8c:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40bc90:	add	x4, x4, #0xaf5
  40bc94:	bl	4039d0 <log_assert_failed_realm@plt>
  40bc98:	ldur	w8, [x29, #-8]
  40bc9c:	cmp	w8, #0x2
  40bca0:	b.lt	40bcd8 <ascii_strlower_n@plt+0x7878>  // b.tstop
  40bca4:	ldur	x8, [x29, #-16]
  40bca8:	ldr	x0, [x8, #8]
  40bcac:	bl	405584 <ascii_strlower_n@plt+0x1124>
  40bcb0:	stur	w0, [x29, #-60]
  40bcb4:	ldur	w9, [x29, #-60]
  40bcb8:	cmp	w9, #0x0
  40bcbc:	cset	w9, ge  // ge = tcont
  40bcc0:	tbnz	w9, #0, 40bcd8 <ascii_strlower_n@plt+0x7878>
  40bcc4:	ldur	w8, [x29, #-60]
  40bcc8:	stur	w8, [x29, #-4]
  40bccc:	mov	w8, #0x1                   	// #1
  40bcd0:	stur	w8, [x29, #-64]
  40bcd4:	b	40bf68 <ascii_strlower_n@plt+0x7b08>
  40bcd8:	ldr	x8, [sp, #56]
  40bcdc:	ldr	w9, [x8]
  40bce0:	cmp	w9, #0x0
  40bce4:	cset	w9, gt
  40bce8:	tbnz	w9, #0, 40bd80 <ascii_strlower_n@plt+0x7920>
  40bcec:	mov	w8, #0x3                   	// #3
  40bcf0:	stur	w8, [x29, #-68]
  40bcf4:	mov	w8, #0x16                  	// #22
  40bcf8:	movk	w8, #0x4000, lsl #16
  40bcfc:	stur	w8, [x29, #-72]
  40bd00:	stur	wzr, [x29, #-76]
  40bd04:	ldur	w0, [x29, #-76]
  40bd08:	bl	403a10 <log_get_max_level_realm@plt>
  40bd0c:	ldur	w8, [x29, #-68]
  40bd10:	and	w8, w8, #0x7
  40bd14:	cmp	w0, w8
  40bd18:	b.lt	40bd50 <ascii_strlower_n@plt+0x78f0>  // b.tstop
  40bd1c:	ldur	w8, [x29, #-76]
  40bd20:	ldur	w9, [x29, #-68]
  40bd24:	orr	w0, w9, w8, lsl #10
  40bd28:	ldur	w1, [x29, #-72]
  40bd2c:	ldr	x2, [sp, #48]
  40bd30:	mov	w3, #0x967                 	// #2407
  40bd34:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40bd38:	add	x4, x4, #0xb20
  40bd3c:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  40bd40:	add	x5, x5, #0xb31
  40bd44:	bl	403a20 <log_internal_realm@plt>
  40bd48:	str	w0, [sp, #44]
  40bd4c:	b	40bd64 <ascii_strlower_n@plt+0x7904>
  40bd50:	ldur	w0, [x29, #-72]
  40bd54:	bl	403a30 <abs@plt>
  40bd58:	mov	w8, wzr
  40bd5c:	subs	w8, w8, w0, uxtb
  40bd60:	str	w8, [sp, #44]
  40bd64:	ldr	w8, [sp, #44]
  40bd68:	str	w8, [sp, #80]
  40bd6c:	ldr	w8, [sp, #80]
  40bd70:	stur	w8, [x29, #-4]
  40bd74:	mov	w8, #0x1                   	// #1
  40bd78:	stur	w8, [x29, #-64]
  40bd7c:	b	40bf68 <ascii_strlower_n@plt+0x7b08>
  40bd80:	ldur	x0, [x29, #-56]
  40bd84:	ldr	x8, [sp, #56]
  40bd88:	ldr	w9, [x8]
  40bd8c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40bd90:	add	x1, x1, #0x1aa
  40bd94:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40bd98:	add	x2, x2, #0x6e5
  40bd9c:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40bda0:	add	x3, x3, #0x9a2
  40bda4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40bda8:	add	x4, x4, #0xb4e
  40bdac:	sub	x5, x29, #0x30
  40bdb0:	mov	x10, xzr
  40bdb4:	mov	x6, x10
  40bdb8:	adrp	x7, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40bdbc:	add	x7, x7, #0x43b
  40bdc0:	mov	x10, sp
  40bdc4:	str	w9, [x10]
  40bdc8:	bl	403d30 <sd_bus_call_method@plt>
  40bdcc:	stur	w0, [x29, #-60]
  40bdd0:	ldur	w9, [x29, #-60]
  40bdd4:	cmp	w9, #0x0
  40bdd8:	cset	w9, ge  // ge = tcont
  40bddc:	tbnz	w9, #0, 40be54 <ascii_strlower_n@plt+0x79f4>
  40bde0:	sub	x0, x29, #0x30
  40bde4:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40bde8:	add	x1, x1, #0x65f
  40bdec:	bl	403d40 <sd_bus_error_has_name@plt>
  40bdf0:	cbz	w0, 40be54 <ascii_strlower_n@plt+0x79f4>
  40bdf4:	sub	x8, x29, #0x30
  40bdf8:	mov	x0, x8
  40bdfc:	str	x8, [sp, #32]
  40be00:	bl	403d20 <sd_bus_error_free@plt>
  40be04:	ldur	x0, [x29, #-56]
  40be08:	ldr	x8, [sp, #56]
  40be0c:	ldr	w9, [x8]
  40be10:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40be14:	add	x1, x1, #0x681
  40be18:	adrp	x2, 430000 <ascii_strlower_n@plt+0x2bba0>
  40be1c:	add	x2, x2, #0x69a
  40be20:	adrp	x3, 430000 <ascii_strlower_n@plt+0x2bba0>
  40be24:	add	x3, x3, #0x6b4
  40be28:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40be2c:	add	x4, x4, #0xb59
  40be30:	ldr	x5, [sp, #32]
  40be34:	mov	x10, xzr
  40be38:	mov	x6, x10
  40be3c:	adrp	x7, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40be40:	add	x7, x7, #0x43b
  40be44:	mov	x10, sp
  40be48:	str	w9, [x10]
  40be4c:	bl	403d30 <sd_bus_call_method@plt>
  40be50:	stur	w0, [x29, #-60]
  40be54:	ldur	w8, [x29, #-60]
  40be58:	cmp	w8, #0x0
  40be5c:	cset	w8, ge  // ge = tcont
  40be60:	tbnz	w8, #0, 40bf5c <ascii_strlower_n@plt+0x7afc>
  40be64:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40be68:	add	x8, x8, #0x148
  40be6c:	ldrb	w9, [x8]
  40be70:	tbnz	w9, #0, 40be78 <ascii_strlower_n@plt+0x7a18>
  40be74:	b	40be9c <ascii_strlower_n@plt+0x7a3c>
  40be78:	sub	x0, x29, #0x30
  40be7c:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  40be80:	add	x1, x1, #0x6d5
  40be84:	bl	403d40 <sd_bus_error_has_name@plt>
  40be88:	cbz	w0, 40be9c <ascii_strlower_n@plt+0x7a3c>
  40be8c:	stur	wzr, [x29, #-4]
  40be90:	mov	w8, #0x1                   	// #1
  40be94:	stur	w8, [x29, #-64]
  40be98:	b	40bf68 <ascii_strlower_n@plt+0x7b08>
  40be9c:	mov	w8, #0x3                   	// #3
  40bea0:	str	w8, [sp, #76]
  40bea4:	ldur	w8, [x29, #-60]
  40bea8:	str	w8, [sp, #72]
  40beac:	str	wzr, [sp, #68]
  40beb0:	ldr	w0, [sp, #68]
  40beb4:	bl	403a10 <log_get_max_level_realm@plt>
  40beb8:	ldr	w8, [sp, #76]
  40bebc:	and	w8, w8, #0x7
  40bec0:	cmp	w0, w8
  40bec4:	b.lt	40bf2c <ascii_strlower_n@plt+0x7acc>  // b.tstop
  40bec8:	ldr	w8, [sp, #68]
  40becc:	ldr	w9, [sp, #76]
  40bed0:	orr	w0, w9, w8, lsl #10
  40bed4:	ldr	w1, [sp, #72]
  40bed8:	ldur	w8, [x29, #-60]
  40bedc:	sub	x10, x29, #0x30
  40bee0:	str	w0, [sp, #28]
  40bee4:	mov	x0, x10
  40bee8:	str	w1, [sp, #24]
  40beec:	mov	w1, w8
  40bef0:	bl	403ce0 <bus_error_message@plt>
  40bef4:	ldr	w8, [sp, #28]
  40bef8:	str	x0, [sp, #16]
  40befc:	mov	w0, w8
  40bf00:	ldr	w1, [sp, #24]
  40bf04:	ldr	x2, [sp, #48]
  40bf08:	mov	w3, #0x984                 	// #2436
  40bf0c:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  40bf10:	add	x4, x4, #0xb20
  40bf14:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  40bf18:	add	x5, x5, #0xb67
  40bf1c:	ldr	x6, [sp, #16]
  40bf20:	bl	403a20 <log_internal_realm@plt>
  40bf24:	str	w0, [sp, #12]
  40bf28:	b	40bf40 <ascii_strlower_n@plt+0x7ae0>
  40bf2c:	ldr	w0, [sp, #72]
  40bf30:	bl	403a30 <abs@plt>
  40bf34:	mov	w8, wzr
  40bf38:	subs	w8, w8, w0, uxtb
  40bf3c:	str	w8, [sp, #12]
  40bf40:	ldr	w8, [sp, #12]
  40bf44:	str	w8, [sp, #64]
  40bf48:	ldr	w8, [sp, #64]
  40bf4c:	stur	w8, [x29, #-4]
  40bf50:	mov	w8, #0x1                   	// #1
  40bf54:	stur	w8, [x29, #-64]
  40bf58:	b	40bf68 <ascii_strlower_n@plt+0x7b08>
  40bf5c:	stur	wzr, [x29, #-4]
  40bf60:	mov	w8, #0x1                   	// #1
  40bf64:	stur	w8, [x29, #-64]
  40bf68:	sub	x0, x29, #0x30
  40bf6c:	bl	403d20 <sd_bus_error_free@plt>
  40bf70:	ldur	w0, [x29, #-4]
  40bf74:	ldp	x29, x30, [sp, #160]
  40bf78:	add	sp, sp, #0xb0
  40bf7c:	ret
  40bf80:	stp	x29, x30, [sp, #-32]!
  40bf84:	str	x28, [sp, #16]
  40bf88:	mov	x29, sp
  40bf8c:	sub	sp, sp, #0x280
  40bf90:	mov	x8, xzr
  40bf94:	mov	x9, #0x50                  	// #80
  40bf98:	mov	w10, wzr
  40bf9c:	adrp	x11, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40bfa0:	add	x11, x11, #0x6f4
  40bfa4:	add	x11, x11, #0x3
  40bfa8:	adrp	x12, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40bfac:	add	x12, x12, #0x14d
  40bfb0:	adrp	x13, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40bfb4:	add	x13, x13, #0x7e4
  40bfb8:	adrp	x14, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40bfbc:	add	x14, x14, #0x1e6
  40bfc0:	sub	x15, x29, #0xa0
  40bfc4:	sub	x16, x29, #0xc8
  40bfc8:	stur	x0, [x29, #-16]
  40bfcc:	stur	w1, [x29, #-20]
  40bfd0:	stur	x2, [x29, #-32]
  40bfd4:	stur	w3, [x29, #-36]
  40bfd8:	stur	x4, [x29, #-48]
  40bfdc:	stur	xzr, [x29, #-72]
  40bfe0:	stur	xzr, [x29, #-64]
  40bfe4:	stur	xzr, [x29, #-56]
  40bfe8:	stur	x8, [x29, #-80]
  40bfec:	mov	x0, x15
  40bff0:	mov	w1, w10
  40bff4:	mov	x2, x9
  40bff8:	stur	x8, [x29, #-256]
  40bffc:	str	x11, [sp, #376]
  40c000:	str	x12, [sp, #368]
  40c004:	str	x13, [sp, #360]
  40c008:	str	x14, [sp, #352]
  40c00c:	str	x16, [sp, #344]
  40c010:	bl	403cb0 <memset@plt>
  40c014:	ldur	x8, [x29, #-256]
  40c018:	stur	x8, [x29, #-168]
  40c01c:	stur	x8, [x29, #-176]
  40c020:	stur	xzr, [x29, #-200]
  40c024:	stur	xzr, [x29, #-192]
  40c028:	mov	w10, #0x0                   	// #0
  40c02c:	ldr	x9, [sp, #344]
  40c030:	strb	w10, [x9, #16]
  40c034:	ldur	x8, [x29, #-16]
  40c038:	cmp	x8, #0x0
  40c03c:	cset	w9, ne  // ne = any
  40c040:	mov	w10, #0x1                   	// #1
  40c044:	eor	w9, w9, #0x1
  40c048:	eor	w9, w9, w10
  40c04c:	eor	w9, w9, w10
  40c050:	and	w9, w9, #0x1
  40c054:	mov	w0, w9
  40c058:	sxtw	x8, w0
  40c05c:	cbz	x8, 40c084 <ascii_strlower_n@plt+0x7c24>
  40c060:	mov	w8, wzr
  40c064:	mov	w0, w8
  40c068:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c06c:	add	x1, x1, #0xf8
  40c070:	ldr	x2, [sp, #376]
  40c074:	mov	w3, #0x56e                 	// #1390
  40c078:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c07c:	add	x4, x4, #0xfc
  40c080:	bl	4039d0 <log_assert_failed_realm@plt>
  40c084:	ldur	w8, [x29, #-20]
  40c088:	cmp	w8, #0x0
  40c08c:	cset	w8, gt
  40c090:	mov	w9, #0x1                   	// #1
  40c094:	eor	w8, w8, #0x1
  40c098:	eor	w8, w8, w9
  40c09c:	eor	w8, w8, w9
  40c0a0:	and	w8, w8, #0x1
  40c0a4:	mov	w0, w8
  40c0a8:	sxtw	x10, w0
  40c0ac:	cbz	x10, 40c0d4 <ascii_strlower_n@plt+0x7c74>
  40c0b0:	mov	w8, wzr
  40c0b4:	mov	w0, w8
  40c0b8:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c0bc:	add	x1, x1, #0x141
  40c0c0:	ldr	x2, [sp, #376]
  40c0c4:	mov	w3, #0x56f                 	// #1391
  40c0c8:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c0cc:	add	x4, x4, #0xfc
  40c0d0:	bl	4039d0 <log_assert_failed_realm@plt>
  40c0d4:	ldur	x8, [x29, #-32]
  40c0d8:	cbnz	x8, 40c188 <ascii_strlower_n@plt+0x7d28>
  40c0dc:	ldur	w0, [x29, #-20]
  40c0e0:	sub	x1, x29, #0xc8
  40c0e4:	bl	40d4f0 <ascii_strlower_n@plt+0x9090>
  40c0e8:	cbnz	x0, 40c180 <ascii_strlower_n@plt+0x7d20>
  40c0ec:	mov	w8, #0x3                   	// #3
  40c0f0:	stur	w8, [x29, #-216]
  40c0f4:	bl	403d60 <__errno_location@plt>
  40c0f8:	ldr	w8, [x0]
  40c0fc:	stur	w8, [x29, #-220]
  40c100:	stur	wzr, [x29, #-224]
  40c104:	ldur	w0, [x29, #-224]
  40c108:	bl	403a10 <log_get_max_level_realm@plt>
  40c10c:	ldur	w8, [x29, #-216]
  40c110:	and	w8, w8, #0x7
  40c114:	cmp	w0, w8
  40c118:	b.lt	40c150 <ascii_strlower_n@plt+0x7cf0>  // b.tstop
  40c11c:	ldur	w8, [x29, #-224]
  40c120:	ldur	w9, [x29, #-216]
  40c124:	orr	w0, w9, w8, lsl #10
  40c128:	ldur	w1, [x29, #-220]
  40c12c:	ldur	w6, [x29, #-20]
  40c130:	ldr	x2, [sp, #376]
  40c134:	mov	w3, #0x573                 	// #1395
  40c138:	ldr	x4, [sp, #368]
  40c13c:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c140:	add	x5, x5, #0x15c
  40c144:	bl	403a20 <log_internal_realm@plt>
  40c148:	str	w0, [sp, #340]
  40c14c:	b	40c164 <ascii_strlower_n@plt+0x7d04>
  40c150:	ldur	w0, [x29, #-220]
  40c154:	bl	403a30 <abs@plt>
  40c158:	mov	w8, wzr
  40c15c:	subs	w8, w8, w0, uxtb
  40c160:	str	w8, [sp, #340]
  40c164:	ldr	w8, [sp, #340]
  40c168:	stur	w8, [x29, #-228]
  40c16c:	ldur	w8, [x29, #-228]
  40c170:	stur	w8, [x29, #-4]
  40c174:	mov	w8, #0x1                   	// #1
  40c178:	stur	w8, [x29, #-232]
  40c17c:	b	40c968 <ascii_strlower_n@plt+0x8508>
  40c180:	sub	x8, x29, #0xc8
  40c184:	stur	x8, [x29, #-32]
  40c188:	ldur	w2, [x29, #-20]
  40c18c:	sub	x0, x29, #0xa8
  40c190:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c194:	add	x1, x1, #0x188
  40c198:	bl	403d70 <asprintf@plt>
  40c19c:	cmp	w0, #0x0
  40c1a0:	cset	w8, ge  // ge = tcont
  40c1a4:	tbnz	w8, #0, 40c1d0 <ascii_strlower_n@plt+0x7d70>
  40c1a8:	mov	w8, wzr
  40c1ac:	mov	w0, w8
  40c1b0:	ldr	x1, [sp, #376]
  40c1b4:	mov	w2, #0x579                 	// #1401
  40c1b8:	ldr	x3, [sp, #368]
  40c1bc:	bl	403a90 <log_oom_internal@plt>
  40c1c0:	stur	w0, [x29, #-4]
  40c1c4:	mov	w8, #0x1                   	// #1
  40c1c8:	stur	w8, [x29, #-232]
  40c1cc:	b	40c968 <ascii_strlower_n@plt+0x8508>
  40c1d0:	ldur	x1, [x29, #-168]
  40c1d4:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c1d8:	add	x0, x0, #0x18b
  40c1dc:	sub	x2, x29, #0xb0
  40c1e0:	bl	403d80 <sd_bus_path_encode@plt>
  40c1e4:	stur	w0, [x29, #-212]
  40c1e8:	ldur	w8, [x29, #-212]
  40c1ec:	cmp	w8, #0x0
  40c1f0:	cset	w8, ge  // ge = tcont
  40c1f4:	tbnz	w8, #0, 40c220 <ascii_strlower_n@plt+0x7dc0>
  40c1f8:	mov	w8, wzr
  40c1fc:	mov	w0, w8
  40c200:	ldr	x1, [sp, #376]
  40c204:	mov	w2, #0x57d                 	// #1405
  40c208:	ldr	x3, [sp, #368]
  40c20c:	bl	403a90 <log_oom_internal@plt>
  40c210:	stur	w0, [x29, #-4]
  40c214:	mov	w8, #0x1                   	// #1
  40c218:	stur	w8, [x29, #-232]
  40c21c:	b	40c968 <ascii_strlower_n@plt+0x8508>
  40c220:	ldur	x0, [x29, #-16]
  40c224:	ldur	x2, [x29, #-176]
  40c228:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c22c:	add	x1, x1, #0x1aa
  40c230:	adrp	x3, 434000 <ascii_strlower_n@plt+0x2fba0>
  40c234:	add	x3, x3, #0x240
  40c238:	mov	w4, #0x2                   	// #2
  40c23c:	sub	x5, x29, #0x48
  40c240:	sub	x6, x29, #0x50
  40c244:	sub	x7, x29, #0xa0
  40c248:	bl	403d90 <bus_map_all_properties@plt>
  40c24c:	stur	w0, [x29, #-212]
  40c250:	ldur	w8, [x29, #-212]
  40c254:	cmp	w8, #0x0
  40c258:	cset	w8, ge  // ge = tcont
  40c25c:	tbnz	w8, #0, 40c328 <ascii_strlower_n@plt+0x7ec8>
  40c260:	mov	w8, #0x3                   	// #3
  40c264:	stur	w8, [x29, #-236]
  40c268:	ldur	w8, [x29, #-212]
  40c26c:	stur	w8, [x29, #-240]
  40c270:	stur	wzr, [x29, #-244]
  40c274:	ldur	w0, [x29, #-244]
  40c278:	bl	403a10 <log_get_max_level_realm@plt>
  40c27c:	ldur	w8, [x29, #-236]
  40c280:	and	w8, w8, #0x7
  40c284:	cmp	w0, w8
  40c288:	b.lt	40c2f8 <ascii_strlower_n@plt+0x7e98>  // b.tstop
  40c28c:	ldur	w8, [x29, #-244]
  40c290:	ldur	w9, [x29, #-236]
  40c294:	orr	w0, w9, w8, lsl #10
  40c298:	ldur	w1, [x29, #-240]
  40c29c:	ldur	w6, [x29, #-20]
  40c2a0:	ldur	w8, [x29, #-212]
  40c2a4:	sub	x10, x29, #0x48
  40c2a8:	str	w0, [sp, #336]
  40c2ac:	mov	x0, x10
  40c2b0:	str	w1, [sp, #332]
  40c2b4:	mov	w1, w8
  40c2b8:	str	w6, [sp, #328]
  40c2bc:	bl	403ce0 <bus_error_message@plt>
  40c2c0:	ldr	w8, [sp, #336]
  40c2c4:	str	x0, [sp, #320]
  40c2c8:	mov	w0, w8
  40c2cc:	ldr	w1, [sp, #332]
  40c2d0:	ldr	x2, [sp, #376]
  40c2d4:	mov	w3, #0x588                 	// #1416
  40c2d8:	ldr	x4, [sp, #368]
  40c2dc:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c2e0:	add	x5, x5, #0x1c3
  40c2e4:	ldr	w6, [sp, #328]
  40c2e8:	ldr	x7, [sp, #320]
  40c2ec:	bl	403a20 <log_internal_realm@plt>
  40c2f0:	str	w0, [sp, #316]
  40c2f4:	b	40c30c <ascii_strlower_n@plt+0x7eac>
  40c2f8:	ldur	w0, [x29, #-240]
  40c2fc:	bl	403a30 <abs@plt>
  40c300:	mov	w8, wzr
  40c304:	subs	w8, w8, w0, uxtb
  40c308:	str	w8, [sp, #316]
  40c30c:	ldr	w8, [sp, #316]
  40c310:	stur	w8, [x29, #-248]
  40c314:	ldur	w8, [x29, #-248]
  40c318:	stur	w8, [x29, #-4]
  40c31c:	mov	w8, #0x1                   	// #1
  40c320:	stur	w8, [x29, #-232]
  40c324:	b	40c968 <ascii_strlower_n@plt+0x8508>
  40c328:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40c32c:	add	x8, x8, #0x194
  40c330:	ldr	w0, [x8]
  40c334:	bl	403da0 <pager_open@plt>
  40c338:	ldur	w9, [x29, #-36]
  40c33c:	cmp	w9, #0x1
  40c340:	b.ne	40c368 <ascii_strlower_n@plt+0x7f08>  // b.any
  40c344:	ldur	w0, [x29, #-20]
  40c348:	ldur	x1, [x29, #-32]
  40c34c:	sub	x8, x29, #0xa0
  40c350:	ldr	x2, [x8, #48]
  40c354:	bl	40d524 <ascii_strlower_n@plt+0x90c4>
  40c358:	stur	w0, [x29, #-4]
  40c35c:	mov	w9, #0x1                   	// #1
  40c360:	stur	w9, [x29, #-232]
  40c364:	b	40c968 <ascii_strlower_n@plt+0x8508>
  40c368:	ldur	w8, [x29, #-36]
  40c36c:	cmp	w8, #0x2
  40c370:	b.ne	40c398 <ascii_strlower_n@plt+0x7f38>  // b.any
  40c374:	ldur	w0, [x29, #-20]
  40c378:	ldur	x1, [x29, #-32]
  40c37c:	sub	x8, x29, #0xa0
  40c380:	ldr	x2, [x8, #56]
  40c384:	bl	40d524 <ascii_strlower_n@plt+0x90c4>
  40c388:	stur	w0, [x29, #-4]
  40c38c:	mov	w9, #0x1                   	// #1
  40c390:	stur	w9, [x29, #-232]
  40c394:	b	40c968 <ascii_strlower_n@plt+0x8508>
  40c398:	ldur	w8, [x29, #-36]
  40c39c:	cmp	w8, #0x8
  40c3a0:	b.ne	40c3c8 <ascii_strlower_n@plt+0x7f68>  // b.any
  40c3a4:	ldur	w0, [x29, #-20]
  40c3a8:	ldur	x1, [x29, #-32]
  40c3ac:	sub	x8, x29, #0xa0
  40c3b0:	ldr	x2, [x8, #64]
  40c3b4:	bl	40d524 <ascii_strlower_n@plt+0x90c4>
  40c3b8:	stur	w0, [x29, #-4]
  40c3bc:	mov	w9, #0x1                   	// #1
  40c3c0:	stur	w9, [x29, #-232]
  40c3c4:	b	40c968 <ascii_strlower_n@plt+0x8508>
  40c3c8:	ldur	w8, [x29, #-36]
  40c3cc:	cmp	w8, #0x3
  40c3d0:	b.ne	40c43c <ascii_strlower_n@plt+0x7fdc>  // b.any
  40c3d4:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  40c3d8:	ldur	w2, [x29, #-20]
  40c3dc:	ldur	x3, [x29, #-32]
  40c3e0:	str	x0, [sp, #304]
  40c3e4:	str	w2, [sp, #300]
  40c3e8:	str	x3, [sp, #288]
  40c3ec:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40c3f0:	sub	x8, x29, #0xa0
  40c3f4:	ldrb	w9, [x8, #73]
  40c3f8:	and	w9, w9, #0x1
  40c3fc:	str	x0, [sp, #280]
  40c400:	mov	w0, w9
  40c404:	bl	40d600 <ascii_strlower_n@plt+0x91a0>
  40c408:	ldr	x8, [sp, #352]
  40c40c:	str	x0, [sp, #272]
  40c410:	mov	x0, x8
  40c414:	ldr	x1, [sp, #304]
  40c418:	ldr	w2, [sp, #300]
  40c41c:	ldr	x3, [sp, #288]
  40c420:	ldr	x4, [sp, #280]
  40c424:	ldr	x5, [sp, #272]
  40c428:	bl	403ab0 <printf@plt>
  40c42c:	stur	wzr, [x29, #-4]
  40c430:	mov	w9, #0x1                   	// #1
  40c434:	stur	w9, [x29, #-232]
  40c438:	b	40c968 <ascii_strlower_n@plt+0x8508>
  40c43c:	ldur	w8, [x29, #-36]
  40c440:	cmp	w8, #0x4
  40c444:	b.ne	40c4ac <ascii_strlower_n@plt+0x804c>  // b.any
  40c448:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  40c44c:	ldur	w2, [x29, #-20]
  40c450:	ldur	x3, [x29, #-32]
  40c454:	str	x0, [sp, #264]
  40c458:	str	w2, [sp, #260]
  40c45c:	str	x3, [sp, #248]
  40c460:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40c464:	sub	x8, x29, #0xa0
  40c468:	ldr	x8, [x8, #8]
  40c46c:	str	x0, [sp, #240]
  40c470:	mov	x0, x8
  40c474:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40c478:	ldr	x8, [sp, #352]
  40c47c:	str	x0, [sp, #232]
  40c480:	mov	x0, x8
  40c484:	ldr	x1, [sp, #264]
  40c488:	ldr	w2, [sp, #260]
  40c48c:	ldr	x3, [sp, #248]
  40c490:	ldr	x4, [sp, #240]
  40c494:	ldr	x5, [sp, #232]
  40c498:	bl	403ab0 <printf@plt>
  40c49c:	stur	wzr, [x29, #-4]
  40c4a0:	mov	w9, #0x1                   	// #1
  40c4a4:	stur	w9, [x29, #-232]
  40c4a8:	b	40c968 <ascii_strlower_n@plt+0x8508>
  40c4ac:	ldur	w8, [x29, #-36]
  40c4b0:	cmp	w8, #0x5
  40c4b4:	b.ne	40c51c <ascii_strlower_n@plt+0x80bc>  // b.any
  40c4b8:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  40c4bc:	ldur	w2, [x29, #-20]
  40c4c0:	ldur	x3, [x29, #-32]
  40c4c4:	str	x0, [sp, #224]
  40c4c8:	str	w2, [sp, #220]
  40c4cc:	str	x3, [sp, #208]
  40c4d0:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40c4d4:	sub	x8, x29, #0xa0
  40c4d8:	ldr	x8, [x8, #16]
  40c4dc:	str	x0, [sp, #200]
  40c4e0:	mov	x0, x8
  40c4e4:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40c4e8:	ldr	x8, [sp, #352]
  40c4ec:	str	x0, [sp, #192]
  40c4f0:	mov	x0, x8
  40c4f4:	ldr	x1, [sp, #224]
  40c4f8:	ldr	w2, [sp, #220]
  40c4fc:	ldr	x3, [sp, #208]
  40c500:	ldr	x4, [sp, #200]
  40c504:	ldr	x5, [sp, #192]
  40c508:	bl	403ab0 <printf@plt>
  40c50c:	stur	wzr, [x29, #-4]
  40c510:	mov	w9, #0x1                   	// #1
  40c514:	stur	w9, [x29, #-232]
  40c518:	b	40c968 <ascii_strlower_n@plt+0x8508>
  40c51c:	ldur	w8, [x29, #-36]
  40c520:	cmp	w8, #0x6
  40c524:	b.ne	40c58c <ascii_strlower_n@plt+0x812c>  // b.any
  40c528:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  40c52c:	ldur	w2, [x29, #-20]
  40c530:	ldur	x3, [x29, #-32]
  40c534:	str	x0, [sp, #184]
  40c538:	str	w2, [sp, #180]
  40c53c:	str	x3, [sp, #168]
  40c540:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40c544:	sub	x8, x29, #0xa0
  40c548:	ldr	x8, [x8, #24]
  40c54c:	str	x0, [sp, #160]
  40c550:	mov	x0, x8
  40c554:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40c558:	ldr	x8, [sp, #352]
  40c55c:	str	x0, [sp, #152]
  40c560:	mov	x0, x8
  40c564:	ldr	x1, [sp, #184]
  40c568:	ldr	w2, [sp, #180]
  40c56c:	ldr	x3, [sp, #168]
  40c570:	ldr	x4, [sp, #160]
  40c574:	ldr	x5, [sp, #152]
  40c578:	bl	403ab0 <printf@plt>
  40c57c:	stur	wzr, [x29, #-4]
  40c580:	mov	w9, #0x1                   	// #1
  40c584:	stur	w9, [x29, #-232]
  40c588:	b	40c968 <ascii_strlower_n@plt+0x8508>
  40c58c:	ldur	w8, [x29, #-36]
  40c590:	cmp	w8, #0x7
  40c594:	b.ne	40c5fc <ascii_strlower_n@plt+0x819c>  // b.any
  40c598:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  40c59c:	ldur	w2, [x29, #-20]
  40c5a0:	ldur	x3, [x29, #-32]
  40c5a4:	str	x0, [sp, #144]
  40c5a8:	str	w2, [sp, #140]
  40c5ac:	str	x3, [sp, #128]
  40c5b0:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40c5b4:	sub	x8, x29, #0xa0
  40c5b8:	ldr	x8, [x8, #32]
  40c5bc:	str	x0, [sp, #120]
  40c5c0:	mov	x0, x8
  40c5c4:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40c5c8:	ldr	x8, [sp, #352]
  40c5cc:	str	x0, [sp, #112]
  40c5d0:	mov	x0, x8
  40c5d4:	ldr	x1, [sp, #144]
  40c5d8:	ldr	w2, [sp, #140]
  40c5dc:	ldr	x3, [sp, #128]
  40c5e0:	ldr	x4, [sp, #120]
  40c5e4:	ldr	x5, [sp, #112]
  40c5e8:	bl	403ab0 <printf@plt>
  40c5ec:	stur	wzr, [x29, #-4]
  40c5f0:	mov	w9, #0x1                   	// #1
  40c5f4:	stur	w9, [x29, #-232]
  40c5f8:	b	40c968 <ascii_strlower_n@plt+0x8508>
  40c5fc:	ldur	x8, [x29, #-48]
  40c600:	cbz	x8, 40c628 <ascii_strlower_n@plt+0x81c8>
  40c604:	ldur	x8, [x29, #-48]
  40c608:	ldrb	w9, [x8]
  40c60c:	tbnz	w9, #0, 40c614 <ascii_strlower_n@plt+0x81b4>
  40c610:	b	40c628 <ascii_strlower_n@plt+0x81c8>
  40c614:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40c618:	add	x8, x8, #0x1e8
  40c61c:	ldr	x1, [x8]
  40c620:	mov	w0, #0xa                   	// #10
  40c624:	bl	403db0 <fputc@plt>
  40c628:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  40c62c:	ldur	w2, [x29, #-20]
  40c630:	ldur	x3, [x29, #-32]
  40c634:	str	x0, [sp, #104]
  40c638:	str	w2, [sp, #100]
  40c63c:	str	x3, [sp, #88]
  40c640:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40c644:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c648:	add	x8, x8, #0x1fc
  40c64c:	str	x0, [sp, #80]
  40c650:	mov	x0, x8
  40c654:	ldr	x1, [sp, #104]
  40c658:	ldr	w2, [sp, #100]
  40c65c:	ldr	x3, [sp, #88]
  40c660:	ldr	x4, [sp, #80]
  40c664:	bl	403ab0 <printf@plt>
  40c668:	ldur	x8, [x29, #-160]
  40c66c:	cbnz	x8, 40c680 <ascii_strlower_n@plt+0x8220>
  40c670:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c674:	add	x0, x0, #0x20e
  40c678:	bl	403ab0 <printf@plt>
  40c67c:	b	40c6f4 <ascii_strlower_n@plt+0x8294>
  40c680:	ldur	x8, [x29, #-160]
  40c684:	adrp	x9, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c688:	add	x9, x9, #0x24b
  40c68c:	tst	x8, #0x1
  40c690:	ldr	x8, [sp, #360]
  40c694:	csel	x1, x9, x8, ne  // ne = any
  40c698:	ldur	x9, [x29, #-160]
  40c69c:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c6a0:	add	x10, x10, #0x250
  40c6a4:	tst	x9, #0x2
  40c6a8:	csel	x2, x10, x8, ne  // ne = any
  40c6ac:	ldur	x9, [x29, #-160]
  40c6b0:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c6b4:	add	x10, x10, #0x25c
  40c6b8:	tst	x9, #0x4
  40c6bc:	csel	x3, x10, x8, ne  // ne = any
  40c6c0:	ldur	x9, [x29, #-160]
  40c6c4:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c6c8:	add	x10, x10, #0x268
  40c6cc:	tst	x9, #0x8
  40c6d0:	csel	x4, x10, x8, ne  // ne = any
  40c6d4:	ldur	x9, [x29, #-160]
  40c6d8:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c6dc:	add	x10, x10, #0x273
  40c6e0:	tst	x9, #0x10
  40c6e4:	csel	x5, x10, x8, ne  // ne = any
  40c6e8:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c6ec:	add	x0, x0, #0x22a
  40c6f0:	bl	403ab0 <printf@plt>
  40c6f4:	sub	x8, x29, #0xa0
  40c6f8:	ldrb	w9, [x8, #73]
  40c6fc:	and	w0, w9, #0x1
  40c700:	str	x8, [sp, #72]
  40c704:	bl	40d600 <ascii_strlower_n@plt+0x91a0>
  40c708:	ldr	x8, [sp, #72]
  40c70c:	ldr	x10, [x8, #8]
  40c710:	str	x0, [sp, #64]
  40c714:	mov	x0, x10
  40c718:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40c71c:	ldr	x8, [sp, #72]
  40c720:	ldr	x10, [x8, #16]
  40c724:	str	x0, [sp, #56]
  40c728:	mov	x0, x10
  40c72c:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40c730:	ldr	x8, [sp, #72]
  40c734:	ldr	x10, [x8, #24]
  40c738:	str	x0, [sp, #48]
  40c73c:	mov	x0, x10
  40c740:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40c744:	ldr	x8, [sp, #72]
  40c748:	ldr	x10, [x8, #32]
  40c74c:	str	x0, [sp, #40]
  40c750:	mov	x0, x10
  40c754:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40c758:	ldr	x8, [sp, #72]
  40c75c:	ldrb	w9, [x8, #72]
  40c760:	and	w9, w9, #0x1
  40c764:	str	x0, [sp, #32]
  40c768:	mov	w0, w9
  40c76c:	bl	40d600 <ascii_strlower_n@plt+0x91a0>
  40c770:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c774:	add	x8, x8, #0x27e
  40c778:	str	x0, [sp, #24]
  40c77c:	mov	x0, x8
  40c780:	ldr	x1, [sp, #64]
  40c784:	ldr	x2, [sp, #56]
  40c788:	ldr	x3, [sp, #48]
  40c78c:	ldr	x4, [sp, #40]
  40c790:	ldr	x5, [sp, #32]
  40c794:	ldr	x6, [sp, #24]
  40c798:	bl	403ab0 <printf@plt>
  40c79c:	ldr	x8, [sp, #72]
  40c7a0:	ldr	x10, [x8, #40]
  40c7a4:	cbz	x10, 40c7bc <ascii_strlower_n@plt+0x835c>
  40c7a8:	sub	x8, x29, #0xa0
  40c7ac:	ldr	x1, [x8, #40]
  40c7b0:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c7b4:	add	x0, x0, #0x315
  40c7b8:	bl	403ab0 <printf@plt>
  40c7bc:	sub	x8, x29, #0xa0
  40c7c0:	ldr	x8, [x8, #48]
  40c7c4:	stur	x8, [x29, #-208]
  40c7c8:	ldur	x8, [x29, #-208]
  40c7cc:	mov	w9, #0x0                   	// #0
  40c7d0:	str	w9, [sp, #20]
  40c7d4:	cbz	x8, 40c7ec <ascii_strlower_n@plt+0x838c>
  40c7d8:	ldur	x8, [x29, #-208]
  40c7dc:	ldr	x8, [x8]
  40c7e0:	cmp	x8, #0x0
  40c7e4:	cset	w9, ne  // ne = any
  40c7e8:	str	w9, [sp, #20]
  40c7ec:	ldr	w8, [sp, #20]
  40c7f0:	tbnz	w8, #0, 40c7f8 <ascii_strlower_n@plt+0x8398>
  40c7f4:	b	40c840 <ascii_strlower_n@plt+0x83e0>
  40c7f8:	ldur	x8, [x29, #-208]
  40c7fc:	sub	x9, x29, #0xa0
  40c800:	ldr	x9, [x9, #48]
  40c804:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c808:	add	x10, x10, #0x34c
  40c80c:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c810:	add	x11, x11, #0x33f
  40c814:	cmp	x8, x9
  40c818:	csel	x1, x11, x10, eq  // eq = none
  40c81c:	ldur	x8, [x29, #-208]
  40c820:	ldr	x2, [x8]
  40c824:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c828:	add	x0, x0, #0x32f
  40c82c:	bl	403ab0 <printf@plt>
  40c830:	ldur	x8, [x29, #-208]
  40c834:	add	x8, x8, #0x8
  40c838:	stur	x8, [x29, #-208]
  40c83c:	b	40c7c8 <ascii_strlower_n@plt+0x8368>
  40c840:	sub	x8, x29, #0xa0
  40c844:	ldr	x8, [x8, #56]
  40c848:	stur	x8, [x29, #-208]
  40c84c:	ldur	x8, [x29, #-208]
  40c850:	mov	w9, #0x0                   	// #0
  40c854:	str	w9, [sp, #16]
  40c858:	cbz	x8, 40c870 <ascii_strlower_n@plt+0x8410>
  40c85c:	ldur	x8, [x29, #-208]
  40c860:	ldr	x8, [x8]
  40c864:	cmp	x8, #0x0
  40c868:	cset	w9, ne  // ne = any
  40c86c:	str	w9, [sp, #16]
  40c870:	ldr	w8, [sp, #16]
  40c874:	tbnz	w8, #0, 40c87c <ascii_strlower_n@plt+0x841c>
  40c878:	b	40c8c4 <ascii_strlower_n@plt+0x8464>
  40c87c:	ldur	x8, [x29, #-208]
  40c880:	sub	x9, x29, #0xa0
  40c884:	ldr	x9, [x9, #56]
  40c888:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c88c:	add	x10, x10, #0x36a
  40c890:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c894:	add	x11, x11, #0x376
  40c898:	cmp	x8, x9
  40c89c:	csel	x1, x10, x11, eq  // eq = none
  40c8a0:	ldur	x8, [x29, #-208]
  40c8a4:	ldr	x2, [x8]
  40c8a8:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c8ac:	add	x0, x0, #0x359
  40c8b0:	bl	403ab0 <printf@plt>
  40c8b4:	ldur	x8, [x29, #-208]
  40c8b8:	add	x8, x8, #0x8
  40c8bc:	stur	x8, [x29, #-208]
  40c8c0:	b	40c84c <ascii_strlower_n@plt+0x83ec>
  40c8c4:	sub	x8, x29, #0xa0
  40c8c8:	ldr	x8, [x8, #64]
  40c8cc:	stur	x8, [x29, #-208]
  40c8d0:	ldur	x8, [x29, #-208]
  40c8d4:	mov	w9, #0x0                   	// #0
  40c8d8:	str	w9, [sp, #12]
  40c8dc:	cbz	x8, 40c8f4 <ascii_strlower_n@plt+0x8494>
  40c8e0:	ldur	x8, [x29, #-208]
  40c8e4:	ldr	x8, [x8]
  40c8e8:	cmp	x8, #0x0
  40c8ec:	cset	w9, ne  // ne = any
  40c8f0:	str	w9, [sp, #12]
  40c8f4:	ldr	w8, [sp, #12]
  40c8f8:	tbnz	w8, #0, 40c900 <ascii_strlower_n@plt+0x84a0>
  40c8fc:	b	40c948 <ascii_strlower_n@plt+0x84e8>
  40c900:	ldur	x8, [x29, #-208]
  40c904:	sub	x9, x29, #0xa0
  40c908:	ldr	x9, [x9, #64]
  40c90c:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c910:	add	x10, x10, #0x376
  40c914:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c918:	add	x11, x11, #0x382
  40c91c:	cmp	x8, x9
  40c920:	csel	x1, x11, x10, eq  // eq = none
  40c924:	ldur	x8, [x29, #-208]
  40c928:	ldr	x2, [x8]
  40c92c:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40c930:	add	x0, x0, #0x359
  40c934:	bl	403ab0 <printf@plt>
  40c938:	ldur	x8, [x29, #-208]
  40c93c:	add	x8, x8, #0x8
  40c940:	stur	x8, [x29, #-208]
  40c944:	b	40c8d0 <ascii_strlower_n@plt+0x8470>
  40c948:	ldur	x8, [x29, #-48]
  40c94c:	cbz	x8, 40c95c <ascii_strlower_n@plt+0x84fc>
  40c950:	ldur	x8, [x29, #-48]
  40c954:	mov	w9, #0x1                   	// #1
  40c958:	strb	w9, [x8]
  40c95c:	stur	wzr, [x29, #-4]
  40c960:	mov	w8, #0x1                   	// #1
  40c964:	stur	w8, [x29, #-232]
  40c968:	sub	x0, x29, #0xb0
  40c96c:	bl	405970 <ascii_strlower_n@plt+0x1510>
  40c970:	sub	x0, x29, #0xa8
  40c974:	bl	405970 <ascii_strlower_n@plt+0x1510>
  40c978:	sub	x0, x29, #0xa0
  40c97c:	bl	40d49c <ascii_strlower_n@plt+0x903c>
  40c980:	sub	x0, x29, #0x50
  40c984:	bl	40d468 <ascii_strlower_n@plt+0x9008>
  40c988:	sub	x0, x29, #0x48
  40c98c:	bl	403d20 <sd_bus_error_free@plt>
  40c990:	ldur	w0, [x29, #-4]
  40c994:	add	sp, sp, #0x280
  40c998:	ldr	x28, [sp, #16]
  40c99c:	ldp	x29, x30, [sp], #32
  40c9a0:	ret
  40c9a4:	sub	sp, sp, #0xa0
  40c9a8:	stp	x29, x30, [sp, #144]
  40c9ac:	add	x29, sp, #0x90
  40c9b0:	mov	x8, xzr
  40c9b4:	mov	w9, #0x0                   	// #0
  40c9b8:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40c9bc:	add	x10, x10, #0x6f4
  40c9c0:	add	x10, x10, #0x3
  40c9c4:	stur	x0, [x29, #-16]
  40c9c8:	stur	w1, [x29, #-20]
  40c9cc:	stur	x8, [x29, #-32]
  40c9d0:	stur	x8, [x29, #-40]
  40c9d4:	stur	x8, [x29, #-48]
  40c9d8:	sturb	w9, [x29, #-57]
  40c9dc:	str	x10, [sp, #8]
  40c9e0:	ldur	x8, [x29, #-16]
  40c9e4:	cmp	x8, #0x0
  40c9e8:	cset	w9, ne  // ne = any
  40c9ec:	mov	w10, #0x1                   	// #1
  40c9f0:	eor	w9, w9, #0x1
  40c9f4:	eor	w9, w9, w10
  40c9f8:	eor	w9, w9, w10
  40c9fc:	and	w9, w9, #0x1
  40ca00:	mov	w0, w9
  40ca04:	sxtw	x8, w0
  40ca08:	cbz	x8, 40ca30 <ascii_strlower_n@plt+0x85d0>
  40ca0c:	mov	w8, wzr
  40ca10:	mov	w0, w8
  40ca14:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ca18:	add	x1, x1, #0xf8
  40ca1c:	ldr	x2, [sp, #8]
  40ca20:	mov	w3, #0x6e6                 	// #1766
  40ca24:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ca28:	add	x4, x4, #0x618
  40ca2c:	bl	4039d0 <log_assert_failed_realm@plt>
  40ca30:	ldur	x0, [x29, #-16]
  40ca34:	ldur	w1, [x29, #-20]
  40ca38:	sub	x2, x29, #0x39
  40ca3c:	bl	40de64 <ascii_strlower_n@plt+0x9a04>
  40ca40:	stur	w0, [x29, #-64]
  40ca44:	ldur	w8, [x29, #-64]
  40ca48:	cmp	w8, #0x0
  40ca4c:	cset	w8, ge  // ge = tcont
  40ca50:	tbnz	w8, #0, 40ca68 <ascii_strlower_n@plt+0x8608>
  40ca54:	ldur	w8, [x29, #-64]
  40ca58:	stur	w8, [x29, #-4]
  40ca5c:	mov	w8, #0x1                   	// #1
  40ca60:	stur	w8, [x29, #-68]
  40ca64:	b	40cd90 <ascii_strlower_n@plt+0x8930>
  40ca68:	sub	x0, x29, #0x30
  40ca6c:	bl	403dc0 <sd_netlink_open@plt>
  40ca70:	stur	w0, [x29, #-64]
  40ca74:	ldur	w8, [x29, #-64]
  40ca78:	cmp	w8, #0x0
  40ca7c:	cset	w8, ge  // ge = tcont
  40ca80:	tbnz	w8, #0, 40cb14 <ascii_strlower_n@plt+0x86b4>
  40ca84:	mov	w8, #0x3                   	// #3
  40ca88:	str	w8, [sp, #72]
  40ca8c:	ldur	w8, [x29, #-64]
  40ca90:	str	w8, [sp, #68]
  40ca94:	str	wzr, [sp, #64]
  40ca98:	ldr	w0, [sp, #64]
  40ca9c:	bl	403a10 <log_get_max_level_realm@plt>
  40caa0:	ldr	w8, [sp, #72]
  40caa4:	and	w8, w8, #0x7
  40caa8:	cmp	w0, w8
  40caac:	b.lt	40cae4 <ascii_strlower_n@plt+0x8684>  // b.tstop
  40cab0:	ldr	w8, [sp, #64]
  40cab4:	ldr	w9, [sp, #72]
  40cab8:	orr	w0, w9, w8, lsl #10
  40cabc:	ldr	w1, [sp, #68]
  40cac0:	ldr	x2, [sp, #8]
  40cac4:	mov	w3, #0x6ee                 	// #1774
  40cac8:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40cacc:	add	x4, x4, #0x63d
  40cad0:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40cad4:	add	x5, x5, #0x648
  40cad8:	bl	403a20 <log_internal_realm@plt>
  40cadc:	str	w0, [sp, #4]
  40cae0:	b	40caf8 <ascii_strlower_n@plt+0x8698>
  40cae4:	ldr	w0, [sp, #68]
  40cae8:	bl	403a30 <abs@plt>
  40caec:	mov	w8, wzr
  40caf0:	subs	w8, w8, w0, uxtb
  40caf4:	str	w8, [sp, #4]
  40caf8:	ldr	w8, [sp, #4]
  40cafc:	str	w8, [sp, #60]
  40cb00:	ldr	w8, [sp, #60]
  40cb04:	stur	w8, [x29, #-4]
  40cb08:	mov	w8, #0x1                   	// #1
  40cb0c:	stur	w8, [x29, #-68]
  40cb10:	b	40cd90 <ascii_strlower_n@plt+0x8930>
  40cb14:	ldur	x0, [x29, #-48]
  40cb18:	sub	x1, x29, #0x20
  40cb1c:	mov	w2, #0x12                  	// #18
  40cb20:	mov	w8, wzr
  40cb24:	mov	w3, w8
  40cb28:	bl	403dd0 <sd_rtnl_message_new_link@plt>
  40cb2c:	stur	w0, [x29, #-64]
  40cb30:	ldur	w8, [x29, #-64]
  40cb34:	cmp	w8, #0x0
  40cb38:	cset	w8, ge  // ge = tcont
  40cb3c:	tbnz	w8, #0, 40cb58 <ascii_strlower_n@plt+0x86f8>
  40cb40:	ldur	w0, [x29, #-64]
  40cb44:	bl	403de0 <rtnl_log_create_error@plt>
  40cb48:	stur	w0, [x29, #-4]
  40cb4c:	mov	w8, #0x1                   	// #1
  40cb50:	stur	w8, [x29, #-68]
  40cb54:	b	40cd90 <ascii_strlower_n@plt+0x8930>
  40cb58:	ldur	x0, [x29, #-32]
  40cb5c:	mov	w1, #0x1                   	// #1
  40cb60:	bl	403df0 <sd_netlink_message_request_dump@plt>
  40cb64:	stur	w0, [x29, #-64]
  40cb68:	ldur	w8, [x29, #-64]
  40cb6c:	cmp	w8, #0x0
  40cb70:	cset	w8, ge  // ge = tcont
  40cb74:	tbnz	w8, #0, 40cb90 <ascii_strlower_n@plt+0x8730>
  40cb78:	ldur	w0, [x29, #-64]
  40cb7c:	bl	403de0 <rtnl_log_create_error@plt>
  40cb80:	stur	w0, [x29, #-4]
  40cb84:	mov	w8, #0x1                   	// #1
  40cb88:	stur	w8, [x29, #-68]
  40cb8c:	b	40cd90 <ascii_strlower_n@plt+0x8930>
  40cb90:	ldur	x0, [x29, #-48]
  40cb94:	ldur	x1, [x29, #-32]
  40cb98:	mov	x8, xzr
  40cb9c:	mov	x2, x8
  40cba0:	sub	x3, x29, #0x28
  40cba4:	bl	403e00 <sd_netlink_call@plt>
  40cba8:	stur	w0, [x29, #-64]
  40cbac:	ldur	w9, [x29, #-64]
  40cbb0:	cmp	w9, #0x0
  40cbb4:	cset	w9, ge  // ge = tcont
  40cbb8:	tbnz	w9, #0, 40cc4c <ascii_strlower_n@plt+0x87ec>
  40cbbc:	mov	w8, #0x3                   	// #3
  40cbc0:	str	w8, [sp, #56]
  40cbc4:	ldur	w8, [x29, #-64]
  40cbc8:	str	w8, [sp, #52]
  40cbcc:	str	wzr, [sp, #48]
  40cbd0:	ldr	w0, [sp, #48]
  40cbd4:	bl	403a10 <log_get_max_level_realm@plt>
  40cbd8:	ldr	w8, [sp, #56]
  40cbdc:	and	w8, w8, #0x7
  40cbe0:	cmp	w0, w8
  40cbe4:	b.lt	40cc1c <ascii_strlower_n@plt+0x87bc>  // b.tstop
  40cbe8:	ldr	w8, [sp, #48]
  40cbec:	ldr	w9, [sp, #56]
  40cbf0:	orr	w0, w9, w8, lsl #10
  40cbf4:	ldr	w1, [sp, #52]
  40cbf8:	ldr	x2, [sp, #8]
  40cbfc:	mov	w3, #0x6fa                 	// #1786
  40cc00:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40cc04:	add	x4, x4, #0x63d
  40cc08:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40cc0c:	add	x5, x5, #0x669
  40cc10:	bl	403a20 <log_internal_realm@plt>
  40cc14:	str	w0, [sp]
  40cc18:	b	40cc30 <ascii_strlower_n@plt+0x87d0>
  40cc1c:	ldr	w0, [sp, #52]
  40cc20:	bl	403a30 <abs@plt>
  40cc24:	mov	w8, wzr
  40cc28:	subs	w8, w8, w0, uxtb
  40cc2c:	str	w8, [sp]
  40cc30:	ldr	w8, [sp]
  40cc34:	str	w8, [sp, #44]
  40cc38:	ldr	w8, [sp, #44]
  40cc3c:	stur	w8, [x29, #-4]
  40cc40:	mov	w8, #0x1                   	// #1
  40cc44:	stur	w8, [x29, #-68]
  40cc48:	b	40cd90 <ascii_strlower_n@plt+0x8930>
  40cc4c:	stur	wzr, [x29, #-64]
  40cc50:	ldur	x8, [x29, #-40]
  40cc54:	stur	x8, [x29, #-56]
  40cc58:	ldur	x8, [x29, #-56]
  40cc5c:	cbz	x8, 40cd80 <ascii_strlower_n@plt+0x8920>
  40cc60:	ldur	x0, [x29, #-56]
  40cc64:	add	x1, sp, #0x16
  40cc68:	bl	403e10 <sd_netlink_message_get_type@plt>
  40cc6c:	str	w0, [sp, #24]
  40cc70:	ldr	w8, [sp, #24]
  40cc74:	cmp	w8, #0x0
  40cc78:	cset	w8, ge  // ge = tcont
  40cc7c:	tbnz	w8, #0, 40cc98 <ascii_strlower_n@plt+0x8838>
  40cc80:	ldr	w0, [sp, #24]
  40cc84:	bl	403e20 <rtnl_log_parse_error@plt>
  40cc88:	stur	w0, [x29, #-4]
  40cc8c:	mov	w8, #0x1                   	// #1
  40cc90:	stur	w8, [x29, #-68]
  40cc94:	b	40cd90 <ascii_strlower_n@plt+0x8930>
  40cc98:	ldrh	w8, [sp, #22]
  40cc9c:	cmp	w8, #0x10
  40cca0:	b.eq	40cca8 <ascii_strlower_n@plt+0x8848>  // b.none
  40cca4:	b	40cd70 <ascii_strlower_n@plt+0x8910>
  40cca8:	ldur	x0, [x29, #-56]
  40ccac:	add	x1, sp, #0x1c
  40ccb0:	bl	403e30 <sd_rtnl_message_link_get_ifindex@plt>
  40ccb4:	str	w0, [sp, #24]
  40ccb8:	ldr	w8, [sp, #24]
  40ccbc:	cmp	w8, #0x0
  40ccc0:	cset	w8, ge  // ge = tcont
  40ccc4:	tbnz	w8, #0, 40cce0 <ascii_strlower_n@plt+0x8880>
  40ccc8:	ldr	w0, [sp, #24]
  40cccc:	bl	403e20 <rtnl_log_parse_error@plt>
  40ccd0:	stur	w0, [x29, #-4]
  40ccd4:	mov	w8, #0x1                   	// #1
  40ccd8:	stur	w8, [x29, #-68]
  40ccdc:	b	40cd90 <ascii_strlower_n@plt+0x8930>
  40cce0:	ldr	w8, [sp, #28]
  40cce4:	cmp	w8, #0x1
  40cce8:	b.ne	40ccf0 <ascii_strlower_n@plt+0x8890>  // b.any
  40ccec:	b	40cd70 <ascii_strlower_n@plt+0x8910>
  40ccf0:	ldur	x0, [x29, #-56]
  40ccf4:	mov	w1, #0x3                   	// #3
  40ccf8:	add	x2, sp, #0x20
  40ccfc:	bl	403e40 <sd_netlink_message_read_string@plt>
  40cd00:	str	w0, [sp, #24]
  40cd04:	ldr	w8, [sp, #24]
  40cd08:	cmp	w8, #0x0
  40cd0c:	cset	w8, ge  // ge = tcont
  40cd10:	tbnz	w8, #0, 40cd2c <ascii_strlower_n@plt+0x88cc>
  40cd14:	ldr	w0, [sp, #24]
  40cd18:	bl	403e20 <rtnl_log_parse_error@plt>
  40cd1c:	stur	w0, [x29, #-4]
  40cd20:	mov	w8, #0x1                   	// #1
  40cd24:	stur	w8, [x29, #-68]
  40cd28:	b	40cd90 <ascii_strlower_n@plt+0x8930>
  40cd2c:	ldur	x0, [x29, #-16]
  40cd30:	ldr	w1, [sp, #28]
  40cd34:	ldr	x2, [sp, #32]
  40cd38:	ldur	w3, [x29, #-20]
  40cd3c:	sub	x4, x29, #0x39
  40cd40:	bl	40bf80 <ascii_strlower_n@plt+0x7b20>
  40cd44:	str	w0, [sp, #24]
  40cd48:	ldr	w8, [sp, #24]
  40cd4c:	cmp	w8, #0x0
  40cd50:	cset	w8, ge  // ge = tcont
  40cd54:	tbnz	w8, #0, 40cd70 <ascii_strlower_n@plt+0x8910>
  40cd58:	ldur	w8, [x29, #-64]
  40cd5c:	cmp	w8, #0x0
  40cd60:	cset	w8, lt  // lt = tstop
  40cd64:	tbnz	w8, #0, 40cd70 <ascii_strlower_n@plt+0x8910>
  40cd68:	ldr	w8, [sp, #24]
  40cd6c:	stur	w8, [x29, #-64]
  40cd70:	ldur	x0, [x29, #-56]
  40cd74:	bl	403e50 <sd_netlink_message_next@plt>
  40cd78:	stur	x0, [x29, #-56]
  40cd7c:	b	40cc58 <ascii_strlower_n@plt+0x87f8>
  40cd80:	ldur	w8, [x29, #-64]
  40cd84:	stur	w8, [x29, #-4]
  40cd88:	mov	w8, #0x1                   	// #1
  40cd8c:	stur	w8, [x29, #-68]
  40cd90:	sub	x0, x29, #0x30
  40cd94:	bl	40de30 <ascii_strlower_n@plt+0x99d0>
  40cd98:	sub	x0, x29, #0x28
  40cd9c:	bl	40ddfc <ascii_strlower_n@plt+0x999c>
  40cda0:	sub	x0, x29, #0x20
  40cda4:	bl	40ddfc <ascii_strlower_n@plt+0x999c>
  40cda8:	ldur	w0, [x29, #-4]
  40cdac:	ldp	x29, x30, [sp, #144]
  40cdb0:	add	sp, sp, #0xa0
  40cdb4:	ret
  40cdb8:	sub	sp, sp, #0x90
  40cdbc:	stp	x29, x30, [sp, #128]
  40cdc0:	add	x29, sp, #0x80
  40cdc4:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40cdc8:	add	x8, x8, #0x6f4
  40cdcc:	add	x8, x8, #0x3
  40cdd0:	adrp	x9, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40cdd4:	add	x9, x9, #0x38e
  40cdd8:	stur	x0, [x29, #-16]
  40cddc:	stur	x1, [x29, #-24]
  40cde0:	stur	x2, [x29, #-32]
  40cde4:	stur	x3, [x29, #-40]
  40cde8:	stur	x4, [x29, #-48]
  40cdec:	ldur	x10, [x29, #-48]
  40cdf0:	stur	x10, [x29, #-56]
  40cdf4:	str	x8, [sp, #24]
  40cdf8:	str	x9, [sp, #16]
  40cdfc:	ldur	x8, [x29, #-16]
  40ce00:	cmp	x8, #0x0
  40ce04:	cset	w9, ne  // ne = any
  40ce08:	mov	w10, #0x1                   	// #1
  40ce0c:	eor	w9, w9, #0x1
  40ce10:	eor	w9, w9, w10
  40ce14:	eor	w9, w9, w10
  40ce18:	and	w9, w9, #0x1
  40ce1c:	mov	w0, w9
  40ce20:	sxtw	x8, w0
  40ce24:	cbz	x8, 40ce48 <ascii_strlower_n@plt+0x89e8>
  40ce28:	mov	w8, wzr
  40ce2c:	mov	w0, w8
  40ce30:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ce34:	add	x1, x1, #0xf8
  40ce38:	ldr	x2, [sp, #24]
  40ce3c:	mov	w3, #0x4c6                 	// #1222
  40ce40:	ldr	x4, [sp, #16]
  40ce44:	bl	4039d0 <log_assert_failed_realm@plt>
  40ce48:	ldur	x8, [x29, #-24]
  40ce4c:	cmp	x8, #0x0
  40ce50:	cset	w9, ne  // ne = any
  40ce54:	mov	w10, #0x1                   	// #1
  40ce58:	eor	w9, w9, #0x1
  40ce5c:	eor	w9, w9, w10
  40ce60:	eor	w9, w9, w10
  40ce64:	and	w9, w9, #0x1
  40ce68:	mov	w0, w9
  40ce6c:	sxtw	x8, w0
  40ce70:	cbz	x8, 40ce94 <ascii_strlower_n@plt+0x8a34>
  40ce74:	mov	w8, wzr
  40ce78:	mov	w0, w8
  40ce7c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ce80:	add	x1, x1, #0x3e9
  40ce84:	ldr	x2, [sp, #24]
  40ce88:	mov	w3, #0x4c7                 	// #1223
  40ce8c:	ldr	x4, [sp, #16]
  40ce90:	bl	4039d0 <log_assert_failed_realm@plt>
  40ce94:	ldur	x8, [x29, #-32]
  40ce98:	cmp	x8, #0x0
  40ce9c:	cset	w9, ne  // ne = any
  40cea0:	mov	w10, #0x1                   	// #1
  40cea4:	eor	w9, w9, #0x1
  40cea8:	eor	w9, w9, w10
  40ceac:	eor	w9, w9, w10
  40ceb0:	and	w9, w9, #0x1
  40ceb4:	mov	w0, w9
  40ceb8:	sxtw	x8, w0
  40cebc:	cbz	x8, 40cee0 <ascii_strlower_n@plt+0x8a80>
  40cec0:	mov	w8, wzr
  40cec4:	mov	w0, w8
  40cec8:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40cecc:	add	x1, x1, #0x3f0
  40ced0:	ldr	x2, [sp, #24]
  40ced4:	mov	w3, #0x4c8                 	// #1224
  40ced8:	ldr	x4, [sp, #16]
  40cedc:	bl	4039d0 <log_assert_failed_realm@plt>
  40cee0:	ldur	x8, [x29, #-56]
  40cee4:	cmp	x8, #0x0
  40cee8:	cset	w9, ne  // ne = any
  40ceec:	mov	w10, #0x1                   	// #1
  40cef0:	eor	w9, w9, #0x1
  40cef4:	eor	w9, w9, w10
  40cef8:	eor	w9, w9, w10
  40cefc:	and	w9, w9, #0x1
  40cf00:	mov	w0, w9
  40cf04:	sxtw	x8, w0
  40cf08:	cbz	x8, 40cf2c <ascii_strlower_n@plt+0x8acc>
  40cf0c:	mov	w8, wzr
  40cf10:	mov	w0, w8
  40cf14:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40cf18:	add	x1, x1, #0x3f2
  40cf1c:	ldr	x2, [sp, #24]
  40cf20:	mov	w3, #0x4c9                 	// #1225
  40cf24:	ldr	x4, [sp, #16]
  40cf28:	bl	4039d0 <log_assert_failed_realm@plt>
  40cf2c:	ldur	x0, [x29, #-32]
  40cf30:	mov	w1, #0x61                  	// #97
  40cf34:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40cf38:	add	x2, x2, #0x82
  40cf3c:	bl	403e60 <sd_bus_message_enter_container@plt>
  40cf40:	stur	w0, [x29, #-60]
  40cf44:	ldur	w8, [x29, #-60]
  40cf48:	cmp	w8, #0x0
  40cf4c:	cset	w8, ge  // ge = tcont
  40cf50:	tbnz	w8, #0, 40cf60 <ascii_strlower_n@plt+0x8b00>
  40cf54:	ldur	w8, [x29, #-60]
  40cf58:	stur	w8, [x29, #-4]
  40cf5c:	b	40d088 <ascii_strlower_n@plt+0x8c28>
  40cf60:	add	x2, sp, #0x38
  40cf64:	mov	x8, xzr
  40cf68:	str	x8, [sp, #56]
  40cf6c:	ldur	x0, [x29, #-32]
  40cf70:	mov	w9, wzr
  40cf74:	and	w1, w9, #0x1
  40cf78:	bl	40d66c <ascii_strlower_n@plt+0x920c>
  40cf7c:	stur	w0, [x29, #-60]
  40cf80:	ldur	w9, [x29, #-60]
  40cf84:	cmp	w9, #0x0
  40cf88:	cset	w9, ge  // ge = tcont
  40cf8c:	tbnz	w9, #0, 40cfa4 <ascii_strlower_n@plt+0x8b44>
  40cf90:	ldur	w8, [x29, #-60]
  40cf94:	stur	w8, [x29, #-4]
  40cf98:	mov	w8, #0x1                   	// #1
  40cf9c:	str	w8, [sp, #52]
  40cfa0:	b	40d024 <ascii_strlower_n@plt+0x8bc4>
  40cfa4:	ldur	w8, [x29, #-60]
  40cfa8:	cbnz	w8, 40cfb8 <ascii_strlower_n@plt+0x8b58>
  40cfac:	mov	w8, #0xa                   	// #10
  40cfb0:	str	w8, [sp, #52]
  40cfb4:	b	40d024 <ascii_strlower_n@plt+0x8bc4>
  40cfb8:	ldr	x0, [sp, #56]
  40cfbc:	bl	40dad0 <ascii_strlower_n@plt+0x9670>
  40cfc0:	tbnz	w0, #0, 40cfc8 <ascii_strlower_n@plt+0x8b68>
  40cfc4:	b	40cfd4 <ascii_strlower_n@plt+0x8b74>
  40cfc8:	mov	w8, #0xb                   	// #11
  40cfcc:	str	w8, [sp, #52]
  40cfd0:	b	40d024 <ascii_strlower_n@plt+0x8bc4>
  40cfd4:	ldur	x0, [x29, #-56]
  40cfd8:	ldr	x8, [sp, #56]
  40cfdc:	str	x8, [sp, #40]
  40cfe0:	mov	x8, xzr
  40cfe4:	str	x8, [sp, #56]
  40cfe8:	ldr	x8, [sp, #40]
  40cfec:	str	x8, [sp, #32]
  40cff0:	ldr	x1, [sp, #32]
  40cff4:	bl	403e70 <strv_consume@plt>
  40cff8:	stur	w0, [x29, #-60]
  40cffc:	ldur	w9, [x29, #-60]
  40d000:	cmp	w9, #0x0
  40d004:	cset	w9, ge  // ge = tcont
  40d008:	tbnz	w9, #0, 40d020 <ascii_strlower_n@plt+0x8bc0>
  40d00c:	ldur	w8, [x29, #-60]
  40d010:	stur	w8, [x29, #-4]
  40d014:	mov	w8, #0x1                   	// #1
  40d018:	str	w8, [sp, #52]
  40d01c:	b	40d024 <ascii_strlower_n@plt+0x8bc4>
  40d020:	str	wzr, [sp, #52]
  40d024:	add	x0, sp, #0x38
  40d028:	bl	405970 <ascii_strlower_n@plt+0x1510>
  40d02c:	ldr	w8, [sp, #52]
  40d030:	subs	w8, w8, #0x0
  40d034:	mov	w9, w8
  40d038:	ubfx	x9, x9, #0, #32
  40d03c:	str	x9, [sp, #8]
  40d040:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  40d044:	add	x8, x8, #0x944
  40d048:	ldr	x11, [sp, #8]
  40d04c:	ldrsw	x10, [x8, x11, lsl #2]
  40d050:	add	x9, x8, x10
  40d054:	br	x9
  40d058:	b	40cf60 <ascii_strlower_n@plt+0x8b00>
  40d05c:	ldur	x0, [x29, #-32]
  40d060:	bl	403e80 <sd_bus_message_exit_container@plt>
  40d064:	stur	w0, [x29, #-60]
  40d068:	ldur	w8, [x29, #-60]
  40d06c:	cmp	w8, #0x0
  40d070:	cset	w8, ge  // ge = tcont
  40d074:	tbnz	w8, #0, 40d084 <ascii_strlower_n@plt+0x8c24>
  40d078:	ldur	w8, [x29, #-60]
  40d07c:	stur	w8, [x29, #-4]
  40d080:	b	40d088 <ascii_strlower_n@plt+0x8c28>
  40d084:	stur	wzr, [x29, #-4]
  40d088:	ldur	w0, [x29, #-4]
  40d08c:	ldp	x29, x30, [sp, #128]
  40d090:	add	sp, sp, #0x90
  40d094:	ret
  40d098:	sub	sp, sp, #0x40
  40d09c:	stp	x29, x30, [sp, #48]
  40d0a0:	add	x29, sp, #0x30
  40d0a4:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40d0a8:	add	x8, x8, #0x6f4
  40d0ac:	add	x8, x8, #0x3
  40d0b0:	stur	x0, [x29, #-8]
  40d0b4:	stur	x1, [x29, #-16]
  40d0b8:	str	x2, [sp, #24]
  40d0bc:	str	x3, [sp, #16]
  40d0c0:	str	x4, [sp, #8]
  40d0c4:	str	x8, [sp]
  40d0c8:	ldr	x8, [sp, #24]
  40d0cc:	cmp	x8, #0x0
  40d0d0:	cset	w9, ne  // ne = any
  40d0d4:	mov	w10, #0x1                   	// #1
  40d0d8:	eor	w9, w9, #0x1
  40d0dc:	eor	w9, w9, w10
  40d0e0:	eor	w9, w9, w10
  40d0e4:	and	w9, w9, #0x1
  40d0e8:	mov	w0, w9
  40d0ec:	sxtw	x8, w0
  40d0f0:	cbz	x8, 40d118 <ascii_strlower_n@plt+0x8cb8>
  40d0f4:	mov	w8, wzr
  40d0f8:	mov	w0, w8
  40d0fc:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d100:	add	x1, x1, #0x3f0
  40d104:	ldr	x2, [sp]
  40d108:	mov	w3, #0x4e8                 	// #1256
  40d10c:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d110:	add	x4, x4, #0x4f0
  40d114:	bl	4039d0 <log_assert_failed_realm@plt>
  40d118:	ldr	x8, [sp, #8]
  40d11c:	cmp	x8, #0x0
  40d120:	cset	w9, ne  // ne = any
  40d124:	mov	w10, #0x1                   	// #1
  40d128:	eor	w9, w9, #0x1
  40d12c:	eor	w9, w9, w10
  40d130:	eor	w9, w9, w10
  40d134:	and	w9, w9, #0x1
  40d138:	mov	w0, w9
  40d13c:	sxtw	x8, w0
  40d140:	cbz	x8, 40d168 <ascii_strlower_n@plt+0x8d08>
  40d144:	mov	w8, wzr
  40d148:	mov	w0, w8
  40d14c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d150:	add	x1, x1, #0x552
  40d154:	ldr	x2, [sp]
  40d158:	mov	w3, #0x4e9                 	// #1257
  40d15c:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d160:	add	x4, x4, #0x4f0
  40d164:	bl	4039d0 <log_assert_failed_realm@plt>
  40d168:	ldr	x0, [sp, #24]
  40d16c:	ldr	x2, [sp, #8]
  40d170:	mov	w8, wzr
  40d174:	and	w1, w8, #0x1
  40d178:	bl	40d66c <ascii_strlower_n@plt+0x920c>
  40d17c:	ldp	x29, x30, [sp, #48]
  40d180:	add	sp, sp, #0x40
  40d184:	ret
  40d188:	sub	sp, sp, #0x90
  40d18c:	stp	x29, x30, [sp, #128]
  40d190:	add	x29, sp, #0x80
  40d194:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40d198:	add	x8, x8, #0x6f4
  40d19c:	add	x8, x8, #0x3
  40d1a0:	adrp	x9, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d1a4:	add	x9, x9, #0x55b
  40d1a8:	stur	x0, [x29, #-16]
  40d1ac:	stur	x1, [x29, #-24]
  40d1b0:	stur	x2, [x29, #-32]
  40d1b4:	stur	x3, [x29, #-40]
  40d1b8:	stur	x4, [x29, #-48]
  40d1bc:	ldur	x10, [x29, #-48]
  40d1c0:	stur	x10, [x29, #-56]
  40d1c4:	str	x8, [sp, #24]
  40d1c8:	str	x9, [sp, #16]
  40d1cc:	ldur	x8, [x29, #-16]
  40d1d0:	cmp	x8, #0x0
  40d1d4:	cset	w9, ne  // ne = any
  40d1d8:	mov	w10, #0x1                   	// #1
  40d1dc:	eor	w9, w9, #0x1
  40d1e0:	eor	w9, w9, w10
  40d1e4:	eor	w9, w9, w10
  40d1e8:	and	w9, w9, #0x1
  40d1ec:	mov	w0, w9
  40d1f0:	sxtw	x8, w0
  40d1f4:	cbz	x8, 40d218 <ascii_strlower_n@plt+0x8db8>
  40d1f8:	mov	w8, wzr
  40d1fc:	mov	w0, w8
  40d200:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d204:	add	x1, x1, #0xf8
  40d208:	ldr	x2, [sp, #24]
  40d20c:	mov	w3, #0x513                 	// #1299
  40d210:	ldr	x4, [sp, #16]
  40d214:	bl	4039d0 <log_assert_failed_realm@plt>
  40d218:	ldur	x8, [x29, #-24]
  40d21c:	cmp	x8, #0x0
  40d220:	cset	w9, ne  // ne = any
  40d224:	mov	w10, #0x1                   	// #1
  40d228:	eor	w9, w9, #0x1
  40d22c:	eor	w9, w9, w10
  40d230:	eor	w9, w9, w10
  40d234:	and	w9, w9, #0x1
  40d238:	mov	w0, w9
  40d23c:	sxtw	x8, w0
  40d240:	cbz	x8, 40d264 <ascii_strlower_n@plt+0x8e04>
  40d244:	mov	w8, wzr
  40d248:	mov	w0, w8
  40d24c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d250:	add	x1, x1, #0x3e9
  40d254:	ldr	x2, [sp, #24]
  40d258:	mov	w3, #0x514                 	// #1300
  40d25c:	ldr	x4, [sp, #16]
  40d260:	bl	4039d0 <log_assert_failed_realm@plt>
  40d264:	ldur	x8, [x29, #-32]
  40d268:	cmp	x8, #0x0
  40d26c:	cset	w9, ne  // ne = any
  40d270:	mov	w10, #0x1                   	// #1
  40d274:	eor	w9, w9, #0x1
  40d278:	eor	w9, w9, w10
  40d27c:	eor	w9, w9, w10
  40d280:	and	w9, w9, #0x1
  40d284:	mov	w0, w9
  40d288:	sxtw	x8, w0
  40d28c:	cbz	x8, 40d2b0 <ascii_strlower_n@plt+0x8e50>
  40d290:	mov	w8, wzr
  40d294:	mov	w0, w8
  40d298:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d29c:	add	x1, x1, #0x3f0
  40d2a0:	ldr	x2, [sp, #24]
  40d2a4:	mov	w3, #0x515                 	// #1301
  40d2a8:	ldr	x4, [sp, #16]
  40d2ac:	bl	4039d0 <log_assert_failed_realm@plt>
  40d2b0:	ldur	x8, [x29, #-56]
  40d2b4:	cmp	x8, #0x0
  40d2b8:	cset	w9, ne  // ne = any
  40d2bc:	mov	w10, #0x1                   	// #1
  40d2c0:	eor	w9, w9, #0x1
  40d2c4:	eor	w9, w9, w10
  40d2c8:	eor	w9, w9, w10
  40d2cc:	and	w9, w9, #0x1
  40d2d0:	mov	w0, w9
  40d2d4:	sxtw	x8, w0
  40d2d8:	cbz	x8, 40d2fc <ascii_strlower_n@plt+0x8e9c>
  40d2dc:	mov	w8, wzr
  40d2e0:	mov	w0, w8
  40d2e4:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d2e8:	add	x1, x1, #0x3f2
  40d2ec:	ldr	x2, [sp, #24]
  40d2f0:	mov	w3, #0x516                 	// #1302
  40d2f4:	ldr	x4, [sp, #16]
  40d2f8:	bl	4039d0 <log_assert_failed_realm@plt>
  40d2fc:	ldur	x0, [x29, #-32]
  40d300:	mov	w1, #0x61                  	// #97
  40d304:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d308:	add	x2, x2, #0x5b2
  40d30c:	bl	403e60 <sd_bus_message_enter_container@plt>
  40d310:	stur	w0, [x29, #-60]
  40d314:	ldur	w8, [x29, #-60]
  40d318:	cmp	w8, #0x0
  40d31c:	cset	w8, ge  // ge = tcont
  40d320:	tbnz	w8, #0, 40d330 <ascii_strlower_n@plt+0x8ed0>
  40d324:	ldur	w8, [x29, #-60]
  40d328:	stur	w8, [x29, #-4]
  40d32c:	b	40d458 <ascii_strlower_n@plt+0x8ff8>
  40d330:	add	x2, sp, #0x38
  40d334:	mov	x8, xzr
  40d338:	str	x8, [sp, #56]
  40d33c:	ldur	x0, [x29, #-32]
  40d340:	mov	w9, wzr
  40d344:	and	w1, w9, #0x1
  40d348:	bl	40dbec <ascii_strlower_n@plt+0x978c>
  40d34c:	stur	w0, [x29, #-60]
  40d350:	ldur	w9, [x29, #-60]
  40d354:	cmp	w9, #0x0
  40d358:	cset	w9, ge  // ge = tcont
  40d35c:	tbnz	w9, #0, 40d374 <ascii_strlower_n@plt+0x8f14>
  40d360:	ldur	w8, [x29, #-60]
  40d364:	stur	w8, [x29, #-4]
  40d368:	mov	w8, #0x1                   	// #1
  40d36c:	str	w8, [sp, #52]
  40d370:	b	40d3f4 <ascii_strlower_n@plt+0x8f94>
  40d374:	ldur	w8, [x29, #-60]
  40d378:	cbnz	w8, 40d388 <ascii_strlower_n@plt+0x8f28>
  40d37c:	mov	w8, #0xa                   	// #10
  40d380:	str	w8, [sp, #52]
  40d384:	b	40d3f4 <ascii_strlower_n@plt+0x8f94>
  40d388:	ldr	x0, [sp, #56]
  40d38c:	bl	40dad0 <ascii_strlower_n@plt+0x9670>
  40d390:	tbnz	w0, #0, 40d398 <ascii_strlower_n@plt+0x8f38>
  40d394:	b	40d3a4 <ascii_strlower_n@plt+0x8f44>
  40d398:	mov	w8, #0xb                   	// #11
  40d39c:	str	w8, [sp, #52]
  40d3a0:	b	40d3f4 <ascii_strlower_n@plt+0x8f94>
  40d3a4:	ldur	x0, [x29, #-56]
  40d3a8:	ldr	x8, [sp, #56]
  40d3ac:	str	x8, [sp, #40]
  40d3b0:	mov	x8, xzr
  40d3b4:	str	x8, [sp, #56]
  40d3b8:	ldr	x8, [sp, #40]
  40d3bc:	str	x8, [sp, #32]
  40d3c0:	ldr	x1, [sp, #32]
  40d3c4:	bl	403e70 <strv_consume@plt>
  40d3c8:	stur	w0, [x29, #-60]
  40d3cc:	ldur	w9, [x29, #-60]
  40d3d0:	cmp	w9, #0x0
  40d3d4:	cset	w9, ge  // ge = tcont
  40d3d8:	tbnz	w9, #0, 40d3f0 <ascii_strlower_n@plt+0x8f90>
  40d3dc:	ldur	w8, [x29, #-60]
  40d3e0:	stur	w8, [x29, #-4]
  40d3e4:	mov	w8, #0x1                   	// #1
  40d3e8:	str	w8, [sp, #52]
  40d3ec:	b	40d3f4 <ascii_strlower_n@plt+0x8f94>
  40d3f0:	str	wzr, [sp, #52]
  40d3f4:	add	x0, sp, #0x38
  40d3f8:	bl	405970 <ascii_strlower_n@plt+0x1510>
  40d3fc:	ldr	w8, [sp, #52]
  40d400:	subs	w8, w8, #0x0
  40d404:	mov	w9, w8
  40d408:	ubfx	x9, x9, #0, #32
  40d40c:	str	x9, [sp, #8]
  40d410:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  40d414:	add	x8, x8, #0x974
  40d418:	ldr	x11, [sp, #8]
  40d41c:	ldrsw	x10, [x8, x11, lsl #2]
  40d420:	add	x9, x8, x10
  40d424:	br	x9
  40d428:	b	40d330 <ascii_strlower_n@plt+0x8ed0>
  40d42c:	ldur	x0, [x29, #-32]
  40d430:	bl	403e80 <sd_bus_message_exit_container@plt>
  40d434:	stur	w0, [x29, #-60]
  40d438:	ldur	w8, [x29, #-60]
  40d43c:	cmp	w8, #0x0
  40d440:	cset	w8, ge  // ge = tcont
  40d444:	tbnz	w8, #0, 40d454 <ascii_strlower_n@plt+0x8ff4>
  40d448:	ldur	w8, [x29, #-60]
  40d44c:	stur	w8, [x29, #-4]
  40d450:	b	40d458 <ascii_strlower_n@plt+0x8ff8>
  40d454:	stur	wzr, [x29, #-4]
  40d458:	ldur	w0, [x29, #-4]
  40d45c:	ldp	x29, x30, [sp, #128]
  40d460:	add	sp, sp, #0x90
  40d464:	ret
  40d468:	sub	sp, sp, #0x20
  40d46c:	stp	x29, x30, [sp, #16]
  40d470:	add	x29, sp, #0x10
  40d474:	str	x0, [sp, #8]
  40d478:	ldr	x8, [sp, #8]
  40d47c:	ldr	x8, [x8]
  40d480:	cbz	x8, 40d490 <ascii_strlower_n@plt+0x9030>
  40d484:	ldr	x8, [sp, #8]
  40d488:	ldr	x0, [x8]
  40d48c:	bl	403d10 <sd_bus_message_unref@plt>
  40d490:	ldp	x29, x30, [sp, #16]
  40d494:	add	sp, sp, #0x20
  40d498:	ret
  40d49c:	sub	sp, sp, #0x20
  40d4a0:	stp	x29, x30, [sp, #16]
  40d4a4:	add	x29, sp, #0x10
  40d4a8:	str	x0, [sp, #8]
  40d4ac:	ldr	x8, [sp, #8]
  40d4b0:	ldr	x0, [x8, #40]
  40d4b4:	bl	403ac0 <free@plt>
  40d4b8:	ldr	x8, [sp, #8]
  40d4bc:	ldr	x0, [x8, #48]
  40d4c0:	bl	403bf0 <strv_free@plt>
  40d4c4:	ldr	x8, [sp, #8]
  40d4c8:	ldr	x8, [x8, #56]
  40d4cc:	mov	x0, x8
  40d4d0:	bl	403bf0 <strv_free@plt>
  40d4d4:	ldr	x8, [sp, #8]
  40d4d8:	ldr	x8, [x8, #64]
  40d4dc:	mov	x0, x8
  40d4e0:	bl	403bf0 <strv_free@plt>
  40d4e4:	ldp	x29, x30, [sp, #16]
  40d4e8:	add	sp, sp, #0x20
  40d4ec:	ret
  40d4f0:	sub	sp, sp, #0x20
  40d4f4:	stp	x29, x30, [sp, #16]
  40d4f8:	add	x29, sp, #0x10
  40d4fc:	mov	w8, wzr
  40d500:	stur	w0, [x29, #-4]
  40d504:	str	x1, [sp]
  40d508:	ldur	w0, [x29, #-4]
  40d50c:	ldr	x1, [sp]
  40d510:	mov	w2, w8
  40d514:	bl	403e90 <format_ifname_full@plt>
  40d518:	ldp	x29, x30, [sp, #16]
  40d51c:	add	sp, sp, #0x20
  40d520:	ret
  40d524:	sub	sp, sp, #0x60
  40d528:	stp	x29, x30, [sp, #80]
  40d52c:	add	x29, sp, #0x50
  40d530:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d534:	add	x8, x8, #0x5f5
  40d538:	stur	w0, [x29, #-4]
  40d53c:	stur	x1, [x29, #-16]
  40d540:	stur	x2, [x29, #-24]
  40d544:	str	x8, [sp, #40]
  40d548:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  40d54c:	ldur	w2, [x29, #-4]
  40d550:	ldur	x3, [x29, #-16]
  40d554:	str	x0, [sp, #32]
  40d558:	str	w2, [sp, #28]
  40d55c:	str	x3, [sp, #16]
  40d560:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40d564:	ldr	x8, [sp, #40]
  40d568:	str	x0, [sp, #8]
  40d56c:	mov	x0, x8
  40d570:	ldr	x1, [sp, #32]
  40d574:	ldr	w2, [sp, #28]
  40d578:	ldr	x3, [sp, #16]
  40d57c:	ldr	x4, [sp, #8]
  40d580:	bl	403ab0 <printf@plt>
  40d584:	ldur	x8, [x29, #-24]
  40d588:	stur	x8, [x29, #-32]
  40d58c:	ldur	x8, [x29, #-32]
  40d590:	mov	w9, #0x0                   	// #0
  40d594:	str	w9, [sp, #4]
  40d598:	cbz	x8, 40d5b0 <ascii_strlower_n@plt+0x9150>
  40d59c:	ldur	x8, [x29, #-32]
  40d5a0:	ldr	x8, [x8]
  40d5a4:	cmp	x8, #0x0
  40d5a8:	cset	w9, ne  // ne = any
  40d5ac:	str	w9, [sp, #4]
  40d5b0:	ldr	w8, [sp, #4]
  40d5b4:	tbnz	w8, #0, 40d5bc <ascii_strlower_n@plt+0x915c>
  40d5b8:	b	40d5e0 <ascii_strlower_n@plt+0x9180>
  40d5bc:	ldur	x8, [x29, #-32]
  40d5c0:	ldr	x1, [x8]
  40d5c4:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d5c8:	add	x0, x0, #0x607
  40d5cc:	bl	403ab0 <printf@plt>
  40d5d0:	ldur	x8, [x29, #-32]
  40d5d4:	add	x8, x8, #0x8
  40d5d8:	stur	x8, [x29, #-32]
  40d5dc:	b	40d58c <ascii_strlower_n@plt+0x912c>
  40d5e0:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d5e4:	add	x0, x0, #0x60b
  40d5e8:	bl	403ab0 <printf@plt>
  40d5ec:	mov	w8, wzr
  40d5f0:	mov	w0, w8
  40d5f4:	ldp	x29, x30, [sp, #80]
  40d5f8:	add	sp, sp, #0x60
  40d5fc:	ret
  40d600:	sub	sp, sp, #0x10
  40d604:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d608:	add	x8, x8, #0x60d
  40d60c:	adrp	x9, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d610:	add	x9, x9, #0x611
  40d614:	and	w10, w0, #0x1
  40d618:	strb	w10, [sp, #15]
  40d61c:	ldrb	w10, [sp, #15]
  40d620:	tst	w10, #0x1
  40d624:	csel	x0, x8, x9, ne  // ne = any
  40d628:	add	sp, sp, #0x10
  40d62c:	ret
  40d630:	sub	sp, sp, #0x20
  40d634:	str	x0, [sp, #24]
  40d638:	ldr	x8, [sp, #24]
  40d63c:	str	x8, [sp, #16]
  40d640:	cbz	x8, 40d650 <ascii_strlower_n@plt+0x91f0>
  40d644:	ldr	x8, [sp, #16]
  40d648:	str	x8, [sp, #8]
  40d64c:	b	40d65c <ascii_strlower_n@plt+0x91fc>
  40d650:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d654:	add	x8, x8, #0x614
  40d658:	str	x8, [sp, #8]
  40d65c:	ldr	x8, [sp, #8]
  40d660:	mov	x0, x8
  40d664:	add	sp, sp, #0x20
  40d668:	ret
  40d66c:	sub	sp, sp, #0xb0
  40d670:	stp	x29, x30, [sp, #160]
  40d674:	add	x29, sp, #0xa0
  40d678:	mov	x8, xzr
  40d67c:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40d680:	add	x9, x9, #0x6f4
  40d684:	add	x9, x9, #0x3
  40d688:	mov	w10, #0x1                   	// #1
  40d68c:	stur	x0, [x29, #-16]
  40d690:	and	w10, w1, w10
  40d694:	sturb	w10, [x29, #-17]
  40d698:	stur	x2, [x29, #-32]
  40d69c:	stur	x8, [x29, #-40]
  40d6a0:	str	x9, [sp, #24]
  40d6a4:	ldur	x8, [x29, #-16]
  40d6a8:	cmp	x8, #0x0
  40d6ac:	cset	w9, ne  // ne = any
  40d6b0:	mov	w10, #0x1                   	// #1
  40d6b4:	eor	w9, w9, #0x1
  40d6b8:	eor	w9, w9, w10
  40d6bc:	eor	w9, w9, w10
  40d6c0:	and	w9, w9, #0x1
  40d6c4:	mov	w0, w9
  40d6c8:	sxtw	x8, w0
  40d6cc:	cbz	x8, 40d6f4 <ascii_strlower_n@plt+0x9294>
  40d6d0:	mov	w8, wzr
  40d6d4:	mov	w0, w8
  40d6d8:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d6dc:	add	x1, x1, #0x3f0
  40d6e0:	ldr	x2, [sp, #24]
  40d6e4:	mov	w3, #0x48c                 	// #1164
  40d6e8:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d6ec:	add	x4, x4, #0x3f4
  40d6f0:	bl	4039d0 <log_assert_failed_realm@plt>
  40d6f4:	ldur	x8, [x29, #-32]
  40d6f8:	cmp	x8, #0x0
  40d6fc:	cset	w9, ne  // ne = any
  40d700:	mov	w10, #0x1                   	// #1
  40d704:	eor	w9, w9, #0x1
  40d708:	eor	w9, w9, w10
  40d70c:	eor	w9, w9, w10
  40d710:	and	w9, w9, #0x1
  40d714:	mov	w0, w9
  40d718:	sxtw	x8, w0
  40d71c:	cbz	x8, 40d744 <ascii_strlower_n@plt+0x92e4>
  40d720:	mov	w8, wzr
  40d724:	mov	w0, w8
  40d728:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d72c:	add	x1, x1, #0x42e
  40d730:	ldr	x2, [sp, #24]
  40d734:	mov	w3, #0x48d                 	// #1165
  40d738:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d73c:	add	x4, x4, #0x3f4
  40d740:	bl	4039d0 <log_assert_failed_realm@plt>
  40d744:	ldur	x0, [x29, #-16]
  40d748:	ldurb	w8, [x29, #-17]
  40d74c:	adrp	x9, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d750:	add	x9, x9, #0x437
  40d754:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d758:	add	x10, x10, #0x432
  40d75c:	tst	w8, #0x1
  40d760:	csel	x2, x10, x9, ne  // ne = any
  40d764:	mov	w1, #0x72                  	// #114
  40d768:	bl	403e60 <sd_bus_message_enter_container@plt>
  40d76c:	stur	w0, [x29, #-52]
  40d770:	ldur	w8, [x29, #-52]
  40d774:	cmp	w8, #0x0
  40d778:	cset	w8, gt
  40d77c:	tbnz	w8, #0, 40d794 <ascii_strlower_n@plt+0x9334>
  40d780:	ldur	w8, [x29, #-52]
  40d784:	stur	w8, [x29, #-4]
  40d788:	mov	w8, #0x1                   	// #1
  40d78c:	stur	w8, [x29, #-76]
  40d790:	b	40dab8 <ascii_strlower_n@plt+0x9658>
  40d794:	ldurb	w8, [x29, #-17]
  40d798:	tbnz	w8, #0, 40d7a0 <ascii_strlower_n@plt+0x9340>
  40d79c:	b	40d7dc <ascii_strlower_n@plt+0x937c>
  40d7a0:	ldur	x0, [x29, #-16]
  40d7a4:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d7a8:	add	x1, x1, #0x43b
  40d7ac:	sub	x2, x29, #0x2c
  40d7b0:	bl	403d00 <sd_bus_message_read@plt>
  40d7b4:	stur	w0, [x29, #-52]
  40d7b8:	ldur	w8, [x29, #-52]
  40d7bc:	cmp	w8, #0x0
  40d7c0:	cset	w8, ge  // ge = tcont
  40d7c4:	tbnz	w8, #0, 40d7dc <ascii_strlower_n@plt+0x937c>
  40d7c8:	ldur	w8, [x29, #-52]
  40d7cc:	stur	w8, [x29, #-4]
  40d7d0:	mov	w8, #0x1                   	// #1
  40d7d4:	stur	w8, [x29, #-76]
  40d7d8:	b	40dab8 <ascii_strlower_n@plt+0x9658>
  40d7dc:	ldur	x0, [x29, #-16]
  40d7e0:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d7e4:	add	x1, x1, #0x43b
  40d7e8:	sub	x2, x29, #0x30
  40d7ec:	bl	403d00 <sd_bus_message_read@plt>
  40d7f0:	stur	w0, [x29, #-52]
  40d7f4:	ldur	w8, [x29, #-52]
  40d7f8:	cmp	w8, #0x0
  40d7fc:	cset	w8, ge  // ge = tcont
  40d800:	tbnz	w8, #0, 40d818 <ascii_strlower_n@plt+0x93b8>
  40d804:	ldur	w8, [x29, #-52]
  40d808:	stur	w8, [x29, #-4]
  40d80c:	mov	w8, #0x1                   	// #1
  40d810:	stur	w8, [x29, #-76]
  40d814:	b	40dab8 <ascii_strlower_n@plt+0x9658>
  40d818:	ldur	x0, [x29, #-16]
  40d81c:	mov	w1, #0x79                  	// #121
  40d820:	sub	x2, x29, #0x40
  40d824:	sub	x3, x29, #0x48
  40d828:	bl	403ea0 <sd_bus_message_read_array@plt>
  40d82c:	stur	w0, [x29, #-52]
  40d830:	ldur	w8, [x29, #-52]
  40d834:	cmp	w8, #0x0
  40d838:	cset	w8, ge  // ge = tcont
  40d83c:	tbnz	w8, #0, 40d854 <ascii_strlower_n@plt+0x93f4>
  40d840:	ldur	w8, [x29, #-52]
  40d844:	stur	w8, [x29, #-4]
  40d848:	mov	w8, #0x1                   	// #1
  40d84c:	stur	w8, [x29, #-76]
  40d850:	b	40dab8 <ascii_strlower_n@plt+0x9658>
  40d854:	ldur	x0, [x29, #-16]
  40d858:	bl	403e80 <sd_bus_message_exit_container@plt>
  40d85c:	stur	w0, [x29, #-52]
  40d860:	ldur	w8, [x29, #-52]
  40d864:	cmp	w8, #0x0
  40d868:	cset	w8, ge  // ge = tcont
  40d86c:	tbnz	w8, #0, 40d884 <ascii_strlower_n@plt+0x9424>
  40d870:	ldur	w8, [x29, #-52]
  40d874:	stur	w8, [x29, #-4]
  40d878:	mov	w8, #0x1                   	// #1
  40d87c:	stur	w8, [x29, #-76]
  40d880:	b	40dab8 <ascii_strlower_n@plt+0x9658>
  40d884:	ldurb	w8, [x29, #-17]
  40d888:	tbnz	w8, #0, 40d890 <ascii_strlower_n@plt+0x9430>
  40d88c:	b	40d8b4 <ascii_strlower_n@plt+0x9454>
  40d890:	ldur	w8, [x29, #-44]
  40d894:	cbz	w8, 40d8b4 <ascii_strlower_n@plt+0x9454>
  40d898:	ldur	x8, [x29, #-32]
  40d89c:	mov	x9, xzr
  40d8a0:	str	x9, [x8]
  40d8a4:	mov	w10, #0x1                   	// #1
  40d8a8:	stur	w10, [x29, #-4]
  40d8ac:	stur	w10, [x29, #-76]
  40d8b0:	b	40dab8 <ascii_strlower_n@plt+0x9658>
  40d8b4:	mov	w8, #0x0                   	// #0
  40d8b8:	sturb	w8, [x29, #-77]
  40d8bc:	ldur	w8, [x29, #-48]
  40d8c0:	cmp	w8, #0x2
  40d8c4:	str	w8, [sp, #20]
  40d8c8:	b.eq	40d8e8 <ascii_strlower_n@plt+0x9488>  // b.none
  40d8cc:	b	40d8d0 <ascii_strlower_n@plt+0x9470>
  40d8d0:	ldr	w8, [sp, #20]
  40d8d4:	cmp	w8, #0xa
  40d8d8:	cset	w9, eq  // eq = none
  40d8dc:	eor	w9, w9, #0x1
  40d8e0:	tbnz	w9, #0, 40d8f4 <ascii_strlower_n@plt+0x9494>
  40d8e4:	b	40d8e8 <ascii_strlower_n@plt+0x9488>
  40d8e8:	mov	w8, #0x1                   	// #1
  40d8ec:	sturb	w8, [x29, #-77]
  40d8f0:	b	40d8f4 <ascii_strlower_n@plt+0x9494>
  40d8f4:	ldurb	w8, [x29, #-77]
  40d8f8:	and	w8, w8, #0x1
  40d8fc:	sturb	w8, [x29, #-78]
  40d900:	ldurb	w8, [x29, #-78]
  40d904:	tbnz	w8, #0, 40d9a0 <ascii_strlower_n@plt+0x9540>
  40d908:	mov	w8, #0x7                   	// #7
  40d90c:	str	w8, [sp, #76]
  40d910:	str	wzr, [sp, #72]
  40d914:	str	wzr, [sp, #68]
  40d918:	ldr	w0, [sp, #68]
  40d91c:	bl	403a10 <log_get_max_level_realm@plt>
  40d920:	ldr	w8, [sp, #76]
  40d924:	and	w8, w8, #0x7
  40d928:	cmp	w0, w8
  40d92c:	b.lt	40d968 <ascii_strlower_n@plt+0x9508>  // b.tstop
  40d930:	ldr	w8, [sp, #68]
  40d934:	ldr	w9, [sp, #76]
  40d938:	orr	w0, w9, w8, lsl #10
  40d93c:	ldr	w1, [sp, #72]
  40d940:	ldur	w6, [x29, #-48]
  40d944:	ldr	x2, [sp, #24]
  40d948:	mov	w3, #0x4ac                 	// #1196
  40d94c:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d950:	add	x4, x4, #0x43d
  40d954:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40d958:	add	x5, x5, #0x451
  40d95c:	bl	403a20 <log_internal_realm@plt>
  40d960:	str	w0, [sp, #16]
  40d964:	b	40d97c <ascii_strlower_n@plt+0x951c>
  40d968:	ldr	w0, [sp, #72]
  40d96c:	bl	403a30 <abs@plt>
  40d970:	mov	w8, wzr
  40d974:	subs	w8, w8, w0, uxtb
  40d978:	str	w8, [sp, #16]
  40d97c:	ldr	w8, [sp, #16]
  40d980:	str	w8, [sp, #64]
  40d984:	ldur	x9, [x29, #-32]
  40d988:	mov	x10, xzr
  40d98c:	str	x10, [x9]
  40d990:	mov	w8, #0x1                   	// #1
  40d994:	stur	w8, [x29, #-4]
  40d998:	stur	w8, [x29, #-76]
  40d99c:	b	40dab8 <ascii_strlower_n@plt+0x9658>
  40d9a0:	ldur	x8, [x29, #-72]
  40d9a4:	ldur	w0, [x29, #-48]
  40d9a8:	str	x8, [sp, #8]
  40d9ac:	bl	40db10 <ascii_strlower_n@plt+0x96b0>
  40d9b0:	ldr	x8, [sp, #8]
  40d9b4:	cmp	x8, x0
  40d9b8:	b.eq	40da50 <ascii_strlower_n@plt+0x95f0>  // b.none
  40d9bc:	mov	w8, #0x7                   	// #7
  40d9c0:	str	w8, [sp, #60]
  40d9c4:	str	wzr, [sp, #56]
  40d9c8:	str	wzr, [sp, #52]
  40d9cc:	ldr	w0, [sp, #52]
  40d9d0:	bl	403a10 <log_get_max_level_realm@plt>
  40d9d4:	ldr	w8, [sp, #60]
  40d9d8:	and	w8, w8, #0x7
  40d9dc:	cmp	w0, w8
  40d9e0:	b.lt	40da18 <ascii_strlower_n@plt+0x95b8>  // b.tstop
  40d9e4:	ldr	w8, [sp, #52]
  40d9e8:	ldr	w9, [sp, #60]
  40d9ec:	orr	w0, w9, w8, lsl #10
  40d9f0:	ldr	w1, [sp, #56]
  40d9f4:	ldr	x2, [sp, #24]
  40d9f8:	mov	w3, #0x4b3                 	// #1203
  40d9fc:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40da00:	add	x4, x4, #0x43d
  40da04:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40da08:	add	x5, x5, #0x471
  40da0c:	bl	403a20 <log_internal_realm@plt>
  40da10:	str	w0, [sp, #4]
  40da14:	b	40da2c <ascii_strlower_n@plt+0x95cc>
  40da18:	ldr	w0, [sp, #56]
  40da1c:	bl	403a30 <abs@plt>
  40da20:	mov	w8, wzr
  40da24:	subs	w8, w8, w0, uxtb
  40da28:	str	w8, [sp, #4]
  40da2c:	ldr	w8, [sp, #4]
  40da30:	str	w8, [sp, #48]
  40da34:	ldur	x9, [x29, #-32]
  40da38:	mov	x10, xzr
  40da3c:	str	x10, [x9]
  40da40:	mov	w8, #0x1                   	// #1
  40da44:	stur	w8, [x29, #-4]
  40da48:	stur	w8, [x29, #-76]
  40da4c:	b	40dab8 <ascii_strlower_n@plt+0x9658>
  40da50:	ldur	w0, [x29, #-48]
  40da54:	ldur	x1, [x29, #-64]
  40da58:	sub	x2, x29, #0x28
  40da5c:	bl	403eb0 <in_addr_to_string@plt>
  40da60:	stur	w0, [x29, #-52]
  40da64:	ldur	w8, [x29, #-52]
  40da68:	cmp	w8, #0x0
  40da6c:	cset	w8, ge  // ge = tcont
  40da70:	tbnz	w8, #0, 40da88 <ascii_strlower_n@plt+0x9628>
  40da74:	ldur	w8, [x29, #-52]
  40da78:	stur	w8, [x29, #-4]
  40da7c:	mov	w8, #0x1                   	// #1
  40da80:	stur	w8, [x29, #-76]
  40da84:	b	40dab8 <ascii_strlower_n@plt+0x9658>
  40da88:	ldur	x8, [x29, #-40]
  40da8c:	str	x8, [sp, #40]
  40da90:	mov	x8, xzr
  40da94:	stur	x8, [x29, #-40]
  40da98:	ldr	x8, [sp, #40]
  40da9c:	str	x8, [sp, #32]
  40daa0:	ldr	x8, [sp, #32]
  40daa4:	ldur	x9, [x29, #-32]
  40daa8:	str	x8, [x9]
  40daac:	mov	w10, #0x1                   	// #1
  40dab0:	stur	w10, [x29, #-4]
  40dab4:	stur	w10, [x29, #-76]
  40dab8:	sub	x0, x29, #0x28
  40dabc:	bl	405970 <ascii_strlower_n@plt+0x1510>
  40dac0:	ldur	w0, [x29, #-4]
  40dac4:	ldp	x29, x30, [sp, #160]
  40dac8:	add	sp, sp, #0xb0
  40dacc:	ret
  40dad0:	sub	sp, sp, #0x10
  40dad4:	str	x0, [sp, #8]
  40dad8:	ldr	x8, [sp, #8]
  40dadc:	mov	w9, #0x1                   	// #1
  40dae0:	str	w9, [sp, #4]
  40dae4:	cbz	x8, 40db00 <ascii_strlower_n@plt+0x96a0>
  40dae8:	ldr	x8, [sp, #8]
  40daec:	ldrb	w9, [x8]
  40daf0:	cmp	w9, #0x0
  40daf4:	cset	w9, ne  // ne = any
  40daf8:	eor	w9, w9, #0x1
  40dafc:	str	w9, [sp, #4]
  40db00:	ldr	w8, [sp, #4]
  40db04:	and	w0, w8, #0x1
  40db08:	add	sp, sp, #0x10
  40db0c:	ret
  40db10:	sub	sp, sp, #0x30
  40db14:	stp	x29, x30, [sp, #32]
  40db18:	add	x29, sp, #0x20
  40db1c:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40db20:	add	x8, x8, #0x4b4
  40db24:	add	x2, x8, #0x3
  40db28:	stur	w0, [x29, #-4]
  40db2c:	str	x2, [sp, #16]
  40db30:	mov	w8, #0x0                   	// #0
  40db34:	sturb	w8, [x29, #-5]
  40db38:	ldur	w8, [x29, #-4]
  40db3c:	cmp	w8, #0x2
  40db40:	str	w8, [sp, #12]
  40db44:	b.eq	40db64 <ascii_strlower_n@plt+0x9704>  // b.none
  40db48:	b	40db4c <ascii_strlower_n@plt+0x96ec>
  40db4c:	ldr	w8, [sp, #12]
  40db50:	cmp	w8, #0xa
  40db54:	cset	w9, eq  // eq = none
  40db58:	eor	w9, w9, #0x1
  40db5c:	tbnz	w9, #0, 40db70 <ascii_strlower_n@plt+0x9710>
  40db60:	b	40db64 <ascii_strlower_n@plt+0x9704>
  40db64:	mov	w8, #0x1                   	// #1
  40db68:	sturb	w8, [x29, #-5]
  40db6c:	b	40db70 <ascii_strlower_n@plt+0x9710>
  40db70:	ldurb	w8, [x29, #-5]
  40db74:	mov	w9, #0x1                   	// #1
  40db78:	and	w8, w8, w9
  40db7c:	sturb	w8, [x29, #-6]
  40db80:	ldurb	w8, [x29, #-6]
  40db84:	eor	w8, w8, #0x1
  40db88:	eor	w8, w8, w9
  40db8c:	eor	w8, w8, w9
  40db90:	and	w8, w8, #0x1
  40db94:	mov	w0, w8
  40db98:	sxtw	x10, w0
  40db9c:	cbz	x10, 40dbc4 <ascii_strlower_n@plt+0x9764>
  40dba0:	mov	w8, wzr
  40dba4:	mov	w0, w8
  40dba8:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40dbac:	add	x1, x1, #0x492
  40dbb0:	ldr	x2, [sp, #16]
  40dbb4:	mov	w3, #0x43                  	// #67
  40dbb8:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40dbbc:	add	x4, x4, #0x4d0
  40dbc0:	bl	4039d0 <log_assert_failed_realm@plt>
  40dbc4:	ldur	w8, [x29, #-4]
  40dbc8:	mov	w9, #0x4                   	// #4
  40dbcc:	mov	w10, #0x10                  	// #16
  40dbd0:	cmp	w8, #0xa
  40dbd4:	csel	w8, w10, w9, eq  // eq = none
  40dbd8:	mov	w0, w8
  40dbdc:	sxtw	x0, w0
  40dbe0:	ldp	x29, x30, [sp, #32]
  40dbe4:	add	sp, sp, #0x30
  40dbe8:	ret
  40dbec:	sub	sp, sp, #0x70
  40dbf0:	stp	x29, x30, [sp, #96]
  40dbf4:	add	x29, sp, #0x60
  40dbf8:	mov	x8, xzr
  40dbfc:	mov	w9, #0x1                   	// #1
  40dc00:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40dc04:	add	x10, x10, #0x6f4
  40dc08:	add	x10, x10, #0x3
  40dc0c:	stur	x0, [x29, #-16]
  40dc10:	and	w9, w1, w9
  40dc14:	sturb	w9, [x29, #-17]
  40dc18:	stur	x2, [x29, #-32]
  40dc1c:	stur	x8, [x29, #-40]
  40dc20:	str	x10, [sp]
  40dc24:	ldur	x8, [x29, #-16]
  40dc28:	cmp	x8, #0x0
  40dc2c:	cset	w9, ne  // ne = any
  40dc30:	mov	w10, #0x1                   	// #1
  40dc34:	eor	w9, w9, #0x1
  40dc38:	eor	w9, w9, w10
  40dc3c:	eor	w9, w9, w10
  40dc40:	and	w9, w9, #0x1
  40dc44:	mov	w0, w9
  40dc48:	sxtw	x8, w0
  40dc4c:	cbz	x8, 40dc74 <ascii_strlower_n@plt+0x9814>
  40dc50:	mov	w8, wzr
  40dc54:	mov	w0, w8
  40dc58:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40dc5c:	add	x1, x1, #0x3f0
  40dc60:	ldr	x2, [sp]
  40dc64:	mov	w3, #0x4f3                 	// #1267
  40dc68:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40dc6c:	add	x4, x4, #0x5b7
  40dc70:	bl	4039d0 <log_assert_failed_realm@plt>
  40dc74:	ldur	x8, [x29, #-32]
  40dc78:	cmp	x8, #0x0
  40dc7c:	cset	w9, ne  // ne = any
  40dc80:	mov	w10, #0x1                   	// #1
  40dc84:	eor	w9, w9, #0x1
  40dc88:	eor	w9, w9, w10
  40dc8c:	eor	w9, w9, w10
  40dc90:	and	w9, w9, #0x1
  40dc94:	mov	w0, w9
  40dc98:	sxtw	x8, w0
  40dc9c:	cbz	x8, 40dcc4 <ascii_strlower_n@plt+0x9864>
  40dca0:	mov	w8, wzr
  40dca4:	mov	w0, w8
  40dca8:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40dcac:	add	x1, x1, #0x42e
  40dcb0:	ldr	x2, [sp]
  40dcb4:	mov	w3, #0x4f4                 	// #1268
  40dcb8:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40dcbc:	add	x4, x4, #0x5b7
  40dcc0:	bl	4039d0 <log_assert_failed_realm@plt>
  40dcc4:	ldurb	w8, [x29, #-17]
  40dcc8:	tbnz	w8, #0, 40dcd0 <ascii_strlower_n@plt+0x9870>
  40dccc:	b	40dcf4 <ascii_strlower_n@plt+0x9894>
  40dcd0:	ldur	x0, [x29, #-16]
  40dcd4:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40dcd8:	add	x1, x1, #0x5ed
  40dcdc:	sub	x2, x29, #0x2c
  40dce0:	add	x3, sp, #0x20
  40dce4:	add	x4, sp, #0x30
  40dce8:	bl	403d00 <sd_bus_message_read@plt>
  40dcec:	str	w0, [sp, #44]
  40dcf0:	b	40dd10 <ascii_strlower_n@plt+0x98b0>
  40dcf4:	ldur	x0, [x29, #-16]
  40dcf8:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40dcfc:	add	x1, x1, #0x5b2
  40dd00:	add	x2, sp, #0x20
  40dd04:	add	x3, sp, #0x30
  40dd08:	bl	403d00 <sd_bus_message_read@plt>
  40dd0c:	str	w0, [sp, #44]
  40dd10:	ldr	w8, [sp, #44]
  40dd14:	cmp	w8, #0x0
  40dd18:	cset	w8, gt
  40dd1c:	tbnz	w8, #0, 40dd34 <ascii_strlower_n@plt+0x98d4>
  40dd20:	ldr	w8, [sp, #44]
  40dd24:	stur	w8, [x29, #-4]
  40dd28:	mov	w8, #0x1                   	// #1
  40dd2c:	str	w8, [sp, #28]
  40dd30:	b	40dde4 <ascii_strlower_n@plt+0x9984>
  40dd34:	ldurb	w8, [x29, #-17]
  40dd38:	tbnz	w8, #0, 40dd40 <ascii_strlower_n@plt+0x98e0>
  40dd3c:	b	40dd64 <ascii_strlower_n@plt+0x9904>
  40dd40:	ldur	w8, [x29, #-44]
  40dd44:	cbz	w8, 40dd64 <ascii_strlower_n@plt+0x9904>
  40dd48:	ldur	x8, [x29, #-32]
  40dd4c:	mov	x9, xzr
  40dd50:	str	x9, [x8]
  40dd54:	mov	w10, #0x1                   	// #1
  40dd58:	stur	w10, [x29, #-4]
  40dd5c:	str	w10, [sp, #28]
  40dd60:	b	40dde4 <ascii_strlower_n@plt+0x9984>
  40dd64:	ldr	w8, [sp, #48]
  40dd68:	cbz	w8, 40dd8c <ascii_strlower_n@plt+0x992c>
  40dd6c:	ldr	x1, [sp, #32]
  40dd70:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40dd74:	add	x0, x0, #0x5f3
  40dd78:	mov	x8, xzr
  40dd7c:	mov	x2, x8
  40dd80:	bl	403ec0 <strjoin_real@plt>
  40dd84:	stur	x0, [x29, #-40]
  40dd88:	b	40dd98 <ascii_strlower_n@plt+0x9938>
  40dd8c:	ldr	x0, [sp, #32]
  40dd90:	bl	403b20 <strdup@plt>
  40dd94:	stur	x0, [x29, #-40]
  40dd98:	ldur	x8, [x29, #-40]
  40dd9c:	cbnz	x8, 40ddb4 <ascii_strlower_n@plt+0x9954>
  40dda0:	mov	w8, #0xfffffff4            	// #-12
  40dda4:	stur	w8, [x29, #-4]
  40dda8:	mov	w8, #0x1                   	// #1
  40ddac:	str	w8, [sp, #28]
  40ddb0:	b	40dde4 <ascii_strlower_n@plt+0x9984>
  40ddb4:	ldur	x8, [x29, #-40]
  40ddb8:	str	x8, [sp, #16]
  40ddbc:	mov	x8, xzr
  40ddc0:	stur	x8, [x29, #-40]
  40ddc4:	ldr	x8, [sp, #16]
  40ddc8:	str	x8, [sp, #8]
  40ddcc:	ldr	x8, [sp, #8]
  40ddd0:	ldur	x9, [x29, #-32]
  40ddd4:	str	x8, [x9]
  40ddd8:	mov	w10, #0x1                   	// #1
  40dddc:	stur	w10, [x29, #-4]
  40dde0:	str	w10, [sp, #28]
  40dde4:	sub	x0, x29, #0x28
  40dde8:	bl	405970 <ascii_strlower_n@plt+0x1510>
  40ddec:	ldur	w0, [x29, #-4]
  40ddf0:	ldp	x29, x30, [sp, #96]
  40ddf4:	add	sp, sp, #0x70
  40ddf8:	ret
  40ddfc:	sub	sp, sp, #0x20
  40de00:	stp	x29, x30, [sp, #16]
  40de04:	add	x29, sp, #0x10
  40de08:	str	x0, [sp, #8]
  40de0c:	ldr	x8, [sp, #8]
  40de10:	ldr	x8, [x8]
  40de14:	cbz	x8, 40de24 <ascii_strlower_n@plt+0x99c4>
  40de18:	ldr	x8, [sp, #8]
  40de1c:	ldr	x0, [x8]
  40de20:	bl	403ed0 <sd_netlink_message_unref@plt>
  40de24:	ldp	x29, x30, [sp, #16]
  40de28:	add	sp, sp, #0x20
  40de2c:	ret
  40de30:	sub	sp, sp, #0x20
  40de34:	stp	x29, x30, [sp, #16]
  40de38:	add	x29, sp, #0x10
  40de3c:	str	x0, [sp, #8]
  40de40:	ldr	x8, [sp, #8]
  40de44:	ldr	x8, [x8]
  40de48:	cbz	x8, 40de58 <ascii_strlower_n@plt+0x99f8>
  40de4c:	ldr	x8, [sp, #8]
  40de50:	ldr	x0, [x8]
  40de54:	bl	403ee0 <sd_netlink_unref@plt>
  40de58:	ldp	x29, x30, [sp, #16]
  40de5c:	add	sp, sp, #0x20
  40de60:	ret
  40de64:	sub	sp, sp, #0x1c0
  40de68:	stp	x29, x30, [sp, #416]
  40de6c:	str	x28, [sp, #432]
  40de70:	add	x29, sp, #0x1a0
  40de74:	mov	x8, xzr
  40de78:	mov	x9, #0x50                  	// #80
  40de7c:	mov	w10, wzr
  40de80:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40de84:	add	x11, x11, #0x72b
  40de88:	adrp	x12, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40de8c:	add	x12, x12, #0x6f4
  40de90:	add	x12, x12, #0x3
  40de94:	sub	x13, x29, #0x90
  40de98:	stur	x0, [x29, #-16]
  40de9c:	stur	w1, [x29, #-20]
  40dea0:	stur	x2, [x29, #-32]
  40dea4:	stur	xzr, [x29, #-56]
  40dea8:	stur	xzr, [x29, #-48]
  40deac:	stur	xzr, [x29, #-40]
  40deb0:	stur	x8, [x29, #-64]
  40deb4:	mov	x0, x13
  40deb8:	mov	w1, w10
  40debc:	mov	x2, x9
  40dec0:	stur	x11, [x29, #-184]
  40dec4:	stur	x12, [x29, #-192]
  40dec8:	bl	403cb0 <memset@plt>
  40decc:	ldur	x8, [x29, #-16]
  40ded0:	cmp	x8, #0x0
  40ded4:	cset	w9, ne  // ne = any
  40ded8:	mov	w10, #0x1                   	// #1
  40dedc:	eor	w9, w9, #0x1
  40dee0:	eor	w9, w9, w10
  40dee4:	eor	w9, w9, w10
  40dee8:	and	w9, w9, #0x1
  40deec:	mov	w0, w9
  40def0:	sxtw	x8, w0
  40def4:	cbz	x8, 40df1c <ascii_strlower_n@plt+0x9abc>
  40def8:	mov	w8, wzr
  40defc:	mov	w0, w8
  40df00:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40df04:	add	x1, x1, #0xf8
  40df08:	ldur	x2, [x29, #-192]
  40df0c:	mov	w3, #0x67c                 	// #1660
  40df10:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40df14:	add	x4, x4, #0x6a9
  40df18:	bl	4039d0 <log_assert_failed_realm@plt>
  40df1c:	ldur	x8, [x29, #-32]
  40df20:	cmp	x8, #0x0
  40df24:	cset	w9, ne  // ne = any
  40df28:	mov	w10, #0x1                   	// #1
  40df2c:	eor	w9, w9, #0x1
  40df30:	eor	w9, w9, w10
  40df34:	eor	w9, w9, w10
  40df38:	and	w9, w9, #0x1
  40df3c:	mov	w0, w9
  40df40:	sxtw	x8, w0
  40df44:	cbz	x8, 40df6c <ascii_strlower_n@plt+0x9b0c>
  40df48:	mov	w8, wzr
  40df4c:	mov	w0, w8
  40df50:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40df54:	add	x1, x1, #0x6da
  40df58:	ldur	x2, [x29, #-192]
  40df5c:	mov	w3, #0x67d                 	// #1661
  40df60:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40df64:	add	x4, x4, #0x6a9
  40df68:	bl	4039d0 <log_assert_failed_realm@plt>
  40df6c:	ldur	x0, [x29, #-16]
  40df70:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40df74:	add	x1, x1, #0x1aa
  40df78:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40df7c:	add	x2, x2, #0x6e5
  40df80:	adrp	x3, 434000 <ascii_strlower_n@plt+0x2fba0>
  40df84:	add	x3, x3, #0x400
  40df88:	mov	w4, #0x2                   	// #2
  40df8c:	sub	x5, x29, #0x38
  40df90:	sub	x6, x29, #0x40
  40df94:	sub	x7, x29, #0x90
  40df98:	bl	403d90 <bus_map_all_properties@plt>
  40df9c:	stur	w0, [x29, #-156]
  40dfa0:	ldur	w8, [x29, #-156]
  40dfa4:	cmp	w8, #0x0
  40dfa8:	cset	w8, ge  // ge = tcont
  40dfac:	tbnz	w8, #0, 40e070 <ascii_strlower_n@plt+0x9c10>
  40dfb0:	mov	w8, #0x3                   	// #3
  40dfb4:	stur	w8, [x29, #-160]
  40dfb8:	ldur	w8, [x29, #-156]
  40dfbc:	stur	w8, [x29, #-164]
  40dfc0:	stur	wzr, [x29, #-168]
  40dfc4:	ldur	w0, [x29, #-168]
  40dfc8:	bl	403a10 <log_get_max_level_realm@plt>
  40dfcc:	ldur	w8, [x29, #-160]
  40dfd0:	and	w8, w8, #0x7
  40dfd4:	cmp	w0, w8
  40dfd8:	b.lt	40e040 <ascii_strlower_n@plt+0x9be0>  // b.tstop
  40dfdc:	ldur	w8, [x29, #-168]
  40dfe0:	ldur	w9, [x29, #-160]
  40dfe4:	orr	w0, w9, w8, lsl #10
  40dfe8:	ldur	w1, [x29, #-164]
  40dfec:	ldur	w8, [x29, #-156]
  40dff0:	sub	x10, x29, #0x38
  40dff4:	stur	w0, [x29, #-196]
  40dff8:	mov	x0, x10
  40dffc:	stur	w1, [x29, #-200]
  40e000:	mov	w1, w8
  40e004:	bl	403ce0 <bus_error_message@plt>
  40e008:	ldur	w8, [x29, #-196]
  40e00c:	str	x0, [sp, #208]
  40e010:	mov	w0, w8
  40e014:	ldur	w1, [x29, #-200]
  40e018:	ldur	x2, [x29, #-192]
  40e01c:	mov	w3, #0x688                 	// #1672
  40e020:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e024:	add	x4, x4, #0x6ff
  40e028:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e02c:	add	x5, x5, #0x70d
  40e030:	ldr	x6, [sp, #208]
  40e034:	bl	403a20 <log_internal_realm@plt>
  40e038:	str	w0, [sp, #204]
  40e03c:	b	40e054 <ascii_strlower_n@plt+0x9bf4>
  40e040:	ldur	w0, [x29, #-164]
  40e044:	bl	403a30 <abs@plt>
  40e048:	mov	w8, wzr
  40e04c:	subs	w8, w8, w0, uxtb
  40e050:	str	w8, [sp, #204]
  40e054:	ldr	w8, [sp, #204]
  40e058:	stur	w8, [x29, #-172]
  40e05c:	ldur	w8, [x29, #-172]
  40e060:	stur	w8, [x29, #-4]
  40e064:	mov	w8, #0x1                   	// #1
  40e068:	stur	w8, [x29, #-176]
  40e06c:	b	40e560 <ascii_strlower_n@plt+0xa100>
  40e070:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40e074:	add	x8, x8, #0x194
  40e078:	ldr	w0, [x8]
  40e07c:	bl	403da0 <pager_open@plt>
  40e080:	ldur	w9, [x29, #-20]
  40e084:	cmp	w9, #0x1
  40e088:	b.ne	40e0a8 <ascii_strlower_n@plt+0x9c48>  // b.any
  40e08c:	sub	x8, x29, #0x90
  40e090:	ldr	x0, [x8, #8]
  40e094:	bl	40eca0 <ascii_strlower_n@plt+0xa840>
  40e098:	stur	w0, [x29, #-4]
  40e09c:	mov	w9, #0x1                   	// #1
  40e0a0:	stur	w9, [x29, #-176]
  40e0a4:	b	40e560 <ascii_strlower_n@plt+0xa100>
  40e0a8:	ldur	w8, [x29, #-20]
  40e0ac:	cmp	w8, #0x2
  40e0b0:	b.ne	40e0d0 <ascii_strlower_n@plt+0x9c70>  // b.any
  40e0b4:	sub	x8, x29, #0x90
  40e0b8:	ldr	x0, [x8, #24]
  40e0bc:	bl	40eca0 <ascii_strlower_n@plt+0xa840>
  40e0c0:	stur	w0, [x29, #-4]
  40e0c4:	mov	w9, #0x1                   	// #1
  40e0c8:	stur	w9, [x29, #-176]
  40e0cc:	b	40e560 <ascii_strlower_n@plt+0xa100>
  40e0d0:	ldur	w8, [x29, #-20]
  40e0d4:	cmp	w8, #0x8
  40e0d8:	b.ne	40e0f8 <ascii_strlower_n@plt+0x9c98>  // b.any
  40e0dc:	sub	x8, x29, #0x90
  40e0e0:	ldr	x0, [x8, #32]
  40e0e4:	bl	40eca0 <ascii_strlower_n@plt+0xa840>
  40e0e8:	stur	w0, [x29, #-4]
  40e0ec:	mov	w9, #0x1                   	// #1
  40e0f0:	stur	w9, [x29, #-176]
  40e0f4:	b	40e560 <ascii_strlower_n@plt+0xa100>
  40e0f8:	ldur	w8, [x29, #-20]
  40e0fc:	cmp	w8, #0x4
  40e100:	b.ne	40e150 <ascii_strlower_n@plt+0x9cf0>  // b.any
  40e104:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  40e108:	str	x0, [sp, #192]
  40e10c:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40e110:	sub	x8, x29, #0x90
  40e114:	ldr	x8, [x8, #40]
  40e118:	str	x0, [sp, #184]
  40e11c:	mov	x0, x8
  40e120:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40e124:	ldur	x8, [x29, #-184]
  40e128:	str	x0, [sp, #176]
  40e12c:	mov	x0, x8
  40e130:	ldr	x1, [sp, #192]
  40e134:	ldr	x2, [sp, #184]
  40e138:	ldr	x3, [sp, #176]
  40e13c:	bl	403ab0 <printf@plt>
  40e140:	stur	wzr, [x29, #-4]
  40e144:	mov	w9, #0x1                   	// #1
  40e148:	stur	w9, [x29, #-176]
  40e14c:	b	40e560 <ascii_strlower_n@plt+0xa100>
  40e150:	ldur	w8, [x29, #-20]
  40e154:	cmp	w8, #0x5
  40e158:	b.ne	40e1a8 <ascii_strlower_n@plt+0x9d48>  // b.any
  40e15c:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  40e160:	str	x0, [sp, #168]
  40e164:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40e168:	sub	x8, x29, #0x90
  40e16c:	ldr	x8, [x8, #48]
  40e170:	str	x0, [sp, #160]
  40e174:	mov	x0, x8
  40e178:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40e17c:	ldur	x8, [x29, #-184]
  40e180:	str	x0, [sp, #152]
  40e184:	mov	x0, x8
  40e188:	ldr	x1, [sp, #168]
  40e18c:	ldr	x2, [sp, #160]
  40e190:	ldr	x3, [sp, #152]
  40e194:	bl	403ab0 <printf@plt>
  40e198:	stur	wzr, [x29, #-4]
  40e19c:	mov	w9, #0x1                   	// #1
  40e1a0:	stur	w9, [x29, #-176]
  40e1a4:	b	40e560 <ascii_strlower_n@plt+0xa100>
  40e1a8:	ldur	w8, [x29, #-20]
  40e1ac:	cmp	w8, #0x6
  40e1b0:	b.ne	40e200 <ascii_strlower_n@plt+0x9da0>  // b.any
  40e1b4:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  40e1b8:	str	x0, [sp, #144]
  40e1bc:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40e1c0:	sub	x8, x29, #0x90
  40e1c4:	ldr	x8, [x8, #56]
  40e1c8:	str	x0, [sp, #136]
  40e1cc:	mov	x0, x8
  40e1d0:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40e1d4:	ldur	x8, [x29, #-184]
  40e1d8:	str	x0, [sp, #128]
  40e1dc:	mov	x0, x8
  40e1e0:	ldr	x1, [sp, #144]
  40e1e4:	ldr	x2, [sp, #136]
  40e1e8:	ldr	x3, [sp, #128]
  40e1ec:	bl	403ab0 <printf@plt>
  40e1f0:	stur	wzr, [x29, #-4]
  40e1f4:	mov	w9, #0x1                   	// #1
  40e1f8:	stur	w9, [x29, #-176]
  40e1fc:	b	40e560 <ascii_strlower_n@plt+0xa100>
  40e200:	ldur	w8, [x29, #-20]
  40e204:	cmp	w8, #0x7
  40e208:	b.ne	40e258 <ascii_strlower_n@plt+0x9df8>  // b.any
  40e20c:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  40e210:	str	x0, [sp, #120]
  40e214:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40e218:	sub	x8, x29, #0x90
  40e21c:	ldr	x8, [x8, #64]
  40e220:	str	x0, [sp, #112]
  40e224:	mov	x0, x8
  40e228:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40e22c:	ldur	x8, [x29, #-184]
  40e230:	str	x0, [sp, #104]
  40e234:	mov	x0, x8
  40e238:	ldr	x1, [sp, #120]
  40e23c:	ldr	x2, [sp, #112]
  40e240:	ldr	x3, [sp, #104]
  40e244:	bl	403ab0 <printf@plt>
  40e248:	stur	wzr, [x29, #-4]
  40e24c:	mov	w9, #0x1                   	// #1
  40e250:	stur	w9, [x29, #-176]
  40e254:	b	40e560 <ascii_strlower_n@plt+0xa100>
  40e258:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  40e25c:	str	x0, [sp, #96]
  40e260:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40e264:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e268:	add	x8, x8, #0x73b
  40e26c:	str	x0, [sp, #88]
  40e270:	mov	x0, x8
  40e274:	ldr	x1, [sp, #96]
  40e278:	ldr	x2, [sp, #88]
  40e27c:	bl	403ab0 <printf@plt>
  40e280:	sub	x8, x29, #0x90
  40e284:	ldr	x9, [x8, #40]
  40e288:	mov	x0, x9
  40e28c:	str	x8, [sp, #80]
  40e290:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40e294:	ldr	x8, [sp, #80]
  40e298:	ldr	x9, [x8, #48]
  40e29c:	str	x0, [sp, #72]
  40e2a0:	mov	x0, x9
  40e2a4:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40e2a8:	ldr	x8, [sp, #80]
  40e2ac:	ldr	x9, [x8, #56]
  40e2b0:	str	x0, [sp, #64]
  40e2b4:	mov	x0, x9
  40e2b8:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40e2bc:	ldr	x8, [sp, #80]
  40e2c0:	ldr	x9, [x8, #64]
  40e2c4:	str	x0, [sp, #56]
  40e2c8:	mov	x0, x9
  40e2cc:	bl	40d630 <ascii_strlower_n@plt+0x91d0>
  40e2d0:	ldr	x8, [sp, #80]
  40e2d4:	ldrb	w10, [x8, #72]
  40e2d8:	and	w10, w10, #0x1
  40e2dc:	str	x0, [sp, #48]
  40e2e0:	mov	w0, w10
  40e2e4:	bl	40d600 <ascii_strlower_n@plt+0x91a0>
  40e2e8:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e2ec:	add	x8, x8, #0x747
  40e2f0:	str	x0, [sp, #40]
  40e2f4:	mov	x0, x8
  40e2f8:	ldr	x1, [sp, #72]
  40e2fc:	ldr	x2, [sp, #64]
  40e300:	ldr	x3, [sp, #56]
  40e304:	ldr	x4, [sp, #48]
  40e308:	ldr	x5, [sp, #40]
  40e30c:	bl	403ab0 <printf@plt>
  40e310:	ldur	x8, [x29, #-144]
  40e314:	cbz	x8, 40e328 <ascii_strlower_n@plt+0x9ec8>
  40e318:	ldur	x1, [x29, #-144]
  40e31c:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e320:	add	x0, x0, #0x315
  40e324:	bl	403ab0 <printf@plt>
  40e328:	sub	x8, x29, #0x90
  40e32c:	ldr	x8, [x8, #8]
  40e330:	stur	x8, [x29, #-152]
  40e334:	ldur	x8, [x29, #-152]
  40e338:	mov	w9, #0x0                   	// #0
  40e33c:	str	w9, [sp, #36]
  40e340:	cbz	x8, 40e358 <ascii_strlower_n@plt+0x9ef8>
  40e344:	ldur	x8, [x29, #-152]
  40e348:	ldr	x8, [x8]
  40e34c:	cmp	x8, #0x0
  40e350:	cset	w9, ne  // ne = any
  40e354:	str	w9, [sp, #36]
  40e358:	ldr	w8, [sp, #36]
  40e35c:	tbnz	w8, #0, 40e364 <ascii_strlower_n@plt+0x9f04>
  40e360:	b	40e3ac <ascii_strlower_n@plt+0x9f4c>
  40e364:	ldur	x8, [x29, #-152]
  40e368:	sub	x9, x29, #0x90
  40e36c:	ldr	x9, [x9, #8]
  40e370:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e374:	add	x10, x10, #0x34c
  40e378:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e37c:	add	x11, x11, #0x33f
  40e380:	cmp	x8, x9
  40e384:	csel	x1, x11, x10, eq  // eq = none
  40e388:	ldur	x8, [x29, #-152]
  40e38c:	ldr	x2, [x8]
  40e390:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e394:	add	x0, x0, #0x32f
  40e398:	bl	403ab0 <printf@plt>
  40e39c:	ldur	x8, [x29, #-152]
  40e3a0:	add	x8, x8, #0x8
  40e3a4:	stur	x8, [x29, #-152]
  40e3a8:	b	40e334 <ascii_strlower_n@plt+0x9ed4>
  40e3ac:	sub	x8, x29, #0x90
  40e3b0:	ldr	x8, [x8, #16]
  40e3b4:	stur	x8, [x29, #-152]
  40e3b8:	ldur	x8, [x29, #-152]
  40e3bc:	mov	w9, #0x0                   	// #0
  40e3c0:	str	w9, [sp, #32]
  40e3c4:	cbz	x8, 40e3dc <ascii_strlower_n@plt+0x9f7c>
  40e3c8:	ldur	x8, [x29, #-152]
  40e3cc:	ldr	x8, [x8]
  40e3d0:	cmp	x8, #0x0
  40e3d4:	cset	w9, ne  // ne = any
  40e3d8:	str	w9, [sp, #32]
  40e3dc:	ldr	w8, [sp, #32]
  40e3e0:	tbnz	w8, #0, 40e3e8 <ascii_strlower_n@plt+0x9f88>
  40e3e4:	b	40e430 <ascii_strlower_n@plt+0x9fd0>
  40e3e8:	ldur	x8, [x29, #-152]
  40e3ec:	sub	x9, x29, #0x90
  40e3f0:	ldr	x9, [x9, #16]
  40e3f4:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e3f8:	add	x10, x10, #0x7e2
  40e3fc:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e400:	add	x11, x11, #0x7cc
  40e404:	cmp	x8, x9
  40e408:	csel	x1, x11, x10, eq  // eq = none
  40e40c:	ldur	x8, [x29, #-152]
  40e410:	ldr	x2, [x8]
  40e414:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e418:	add	x0, x0, #0x7c5
  40e41c:	bl	403ab0 <printf@plt>
  40e420:	ldur	x8, [x29, #-152]
  40e424:	add	x8, x8, #0x8
  40e428:	stur	x8, [x29, #-152]
  40e42c:	b	40e3b8 <ascii_strlower_n@plt+0x9f58>
  40e430:	sub	x8, x29, #0x90
  40e434:	ldr	x8, [x8, #24]
  40e438:	stur	x8, [x29, #-152]
  40e43c:	ldur	x8, [x29, #-152]
  40e440:	mov	w9, #0x0                   	// #0
  40e444:	str	w9, [sp, #28]
  40e448:	cbz	x8, 40e460 <ascii_strlower_n@plt+0xa000>
  40e44c:	ldur	x8, [x29, #-152]
  40e450:	ldr	x8, [x8]
  40e454:	cmp	x8, #0x0
  40e458:	cset	w9, ne  // ne = any
  40e45c:	str	w9, [sp, #28]
  40e460:	ldr	w8, [sp, #28]
  40e464:	tbnz	w8, #0, 40e46c <ascii_strlower_n@plt+0xa00c>
  40e468:	b	40e4b4 <ascii_strlower_n@plt+0xa054>
  40e46c:	ldur	x8, [x29, #-152]
  40e470:	sub	x9, x29, #0x90
  40e474:	ldr	x9, [x9, #24]
  40e478:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e47c:	add	x10, x10, #0x36a
  40e480:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e484:	add	x11, x11, #0x376
  40e488:	cmp	x8, x9
  40e48c:	csel	x1, x10, x11, eq  // eq = none
  40e490:	ldur	x8, [x29, #-152]
  40e494:	ldr	x2, [x8]
  40e498:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e49c:	add	x0, x0, #0x359
  40e4a0:	bl	403ab0 <printf@plt>
  40e4a4:	ldur	x8, [x29, #-152]
  40e4a8:	add	x8, x8, #0x8
  40e4ac:	stur	x8, [x29, #-152]
  40e4b0:	b	40e43c <ascii_strlower_n@plt+0x9fdc>
  40e4b4:	sub	x8, x29, #0x90
  40e4b8:	ldr	x0, [x8, #32]
  40e4bc:	str	x8, [sp, #16]
  40e4c0:	bl	403ef0 <strv_sort@plt>
  40e4c4:	ldr	x8, [sp, #16]
  40e4c8:	ldr	x9, [x8, #32]
  40e4cc:	stur	x9, [x29, #-152]
  40e4d0:	ldur	x8, [x29, #-152]
  40e4d4:	mov	w9, #0x0                   	// #0
  40e4d8:	str	w9, [sp, #12]
  40e4dc:	cbz	x8, 40e4f4 <ascii_strlower_n@plt+0xa094>
  40e4e0:	ldur	x8, [x29, #-152]
  40e4e4:	ldr	x8, [x8]
  40e4e8:	cmp	x8, #0x0
  40e4ec:	cset	w9, ne  // ne = any
  40e4f0:	str	w9, [sp, #12]
  40e4f4:	ldr	w8, [sp, #12]
  40e4f8:	tbnz	w8, #0, 40e500 <ascii_strlower_n@plt+0xa0a0>
  40e4fc:	b	40e548 <ascii_strlower_n@plt+0xa0e8>
  40e500:	ldur	x8, [x29, #-152]
  40e504:	sub	x9, x29, #0x90
  40e508:	ldr	x9, [x9, #32]
  40e50c:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e510:	add	x10, x10, #0x376
  40e514:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e518:	add	x11, x11, #0x382
  40e51c:	cmp	x8, x9
  40e520:	csel	x1, x11, x10, eq  // eq = none
  40e524:	ldur	x8, [x29, #-152]
  40e528:	ldr	x2, [x8]
  40e52c:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e530:	add	x0, x0, #0x359
  40e534:	bl	403ab0 <printf@plt>
  40e538:	ldur	x8, [x29, #-152]
  40e53c:	add	x8, x8, #0x8
  40e540:	stur	x8, [x29, #-152]
  40e544:	b	40e4d0 <ascii_strlower_n@plt+0xa070>
  40e548:	ldur	x8, [x29, #-32]
  40e54c:	mov	w9, #0x1                   	// #1
  40e550:	strb	w9, [x8]
  40e554:	stur	wzr, [x29, #-4]
  40e558:	mov	w9, #0x1                   	// #1
  40e55c:	stur	w9, [x29, #-176]
  40e560:	sub	x0, x29, #0x90
  40e564:	bl	40ec3c <ascii_strlower_n@plt+0xa7dc>
  40e568:	sub	x0, x29, #0x40
  40e56c:	bl	40d468 <ascii_strlower_n@plt+0x9008>
  40e570:	sub	x0, x29, #0x38
  40e574:	bl	403d20 <sd_bus_error_free@plt>
  40e578:	ldur	w0, [x29, #-4]
  40e57c:	ldr	x28, [sp, #432]
  40e580:	ldp	x29, x30, [sp, #416]
  40e584:	add	sp, sp, #0x1c0
  40e588:	ret
  40e58c:	sub	sp, sp, #0x90
  40e590:	stp	x29, x30, [sp, #128]
  40e594:	add	x29, sp, #0x80
  40e598:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40e59c:	add	x8, x8, #0x6f4
  40e5a0:	add	x8, x8, #0x3
  40e5a4:	adrp	x9, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e5a8:	add	x9, x9, #0x7f8
  40e5ac:	stur	x0, [x29, #-16]
  40e5b0:	stur	x1, [x29, #-24]
  40e5b4:	stur	x2, [x29, #-32]
  40e5b8:	stur	x3, [x29, #-40]
  40e5bc:	stur	x4, [x29, #-48]
  40e5c0:	ldur	x10, [x29, #-48]
  40e5c4:	stur	x10, [x29, #-56]
  40e5c8:	str	x8, [sp, #24]
  40e5cc:	str	x9, [sp, #16]
  40e5d0:	ldur	x8, [x29, #-16]
  40e5d4:	cmp	x8, #0x0
  40e5d8:	cset	w9, ne  // ne = any
  40e5dc:	mov	w10, #0x1                   	// #1
  40e5e0:	eor	w9, w9, #0x1
  40e5e4:	eor	w9, w9, w10
  40e5e8:	eor	w9, w9, w10
  40e5ec:	and	w9, w9, #0x1
  40e5f0:	mov	w0, w9
  40e5f4:	sxtw	x8, w0
  40e5f8:	cbz	x8, 40e61c <ascii_strlower_n@plt+0xa1bc>
  40e5fc:	mov	w8, wzr
  40e600:	mov	w0, w8
  40e604:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e608:	add	x1, x1, #0xf8
  40e60c:	ldr	x2, [sp, #24]
  40e610:	mov	w3, #0x5f9                 	// #1529
  40e614:	ldr	x4, [sp, #16]
  40e618:	bl	4039d0 <log_assert_failed_realm@plt>
  40e61c:	ldur	x8, [x29, #-24]
  40e620:	cmp	x8, #0x0
  40e624:	cset	w9, ne  // ne = any
  40e628:	mov	w10, #0x1                   	// #1
  40e62c:	eor	w9, w9, #0x1
  40e630:	eor	w9, w9, w10
  40e634:	eor	w9, w9, w10
  40e638:	and	w9, w9, #0x1
  40e63c:	mov	w0, w9
  40e640:	sxtw	x8, w0
  40e644:	cbz	x8, 40e668 <ascii_strlower_n@plt+0xa208>
  40e648:	mov	w8, wzr
  40e64c:	mov	w0, w8
  40e650:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e654:	add	x1, x1, #0x3e9
  40e658:	ldr	x2, [sp, #24]
  40e65c:	mov	w3, #0x5fa                 	// #1530
  40e660:	ldr	x4, [sp, #16]
  40e664:	bl	4039d0 <log_assert_failed_realm@plt>
  40e668:	ldur	x8, [x29, #-32]
  40e66c:	cmp	x8, #0x0
  40e670:	cset	w9, ne  // ne = any
  40e674:	mov	w10, #0x1                   	// #1
  40e678:	eor	w9, w9, #0x1
  40e67c:	eor	w9, w9, w10
  40e680:	eor	w9, w9, w10
  40e684:	and	w9, w9, #0x1
  40e688:	mov	w0, w9
  40e68c:	sxtw	x8, w0
  40e690:	cbz	x8, 40e6b4 <ascii_strlower_n@plt+0xa254>
  40e694:	mov	w8, wzr
  40e698:	mov	w0, w8
  40e69c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e6a0:	add	x1, x1, #0x3f0
  40e6a4:	ldr	x2, [sp, #24]
  40e6a8:	mov	w3, #0x5fb                 	// #1531
  40e6ac:	ldr	x4, [sp, #16]
  40e6b0:	bl	4039d0 <log_assert_failed_realm@plt>
  40e6b4:	ldur	x8, [x29, #-56]
  40e6b8:	cmp	x8, #0x0
  40e6bc:	cset	w9, ne  // ne = any
  40e6c0:	mov	w10, #0x1                   	// #1
  40e6c4:	eor	w9, w9, #0x1
  40e6c8:	eor	w9, w9, w10
  40e6cc:	eor	w9, w9, w10
  40e6d0:	and	w9, w9, #0x1
  40e6d4:	mov	w0, w9
  40e6d8:	sxtw	x8, w0
  40e6dc:	cbz	x8, 40e700 <ascii_strlower_n@plt+0xa2a0>
  40e6e0:	mov	w8, wzr
  40e6e4:	mov	w0, w8
  40e6e8:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e6ec:	add	x1, x1, #0x3f2
  40e6f0:	ldr	x2, [sp, #24]
  40e6f4:	mov	w3, #0x5fc                 	// #1532
  40e6f8:	ldr	x4, [sp, #16]
  40e6fc:	bl	4039d0 <log_assert_failed_realm@plt>
  40e700:	ldur	x0, [x29, #-32]
  40e704:	mov	w1, #0x61                  	// #97
  40e708:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e70c:	add	x2, x2, #0x69b
  40e710:	bl	403e60 <sd_bus_message_enter_container@plt>
  40e714:	stur	w0, [x29, #-60]
  40e718:	ldur	w8, [x29, #-60]
  40e71c:	cmp	w8, #0x0
  40e720:	cset	w8, ge  // ge = tcont
  40e724:	tbnz	w8, #0, 40e734 <ascii_strlower_n@plt+0xa2d4>
  40e728:	ldur	w8, [x29, #-60]
  40e72c:	stur	w8, [x29, #-4]
  40e730:	b	40e85c <ascii_strlower_n@plt+0xa3fc>
  40e734:	add	x2, sp, #0x38
  40e738:	mov	x8, xzr
  40e73c:	str	x8, [sp, #56]
  40e740:	ldur	x0, [x29, #-32]
  40e744:	mov	w9, #0x1                   	// #1
  40e748:	and	w1, w9, #0x1
  40e74c:	bl	40d66c <ascii_strlower_n@plt+0x920c>
  40e750:	stur	w0, [x29, #-60]
  40e754:	ldur	w9, [x29, #-60]
  40e758:	cmp	w9, #0x0
  40e75c:	cset	w9, ge  // ge = tcont
  40e760:	tbnz	w9, #0, 40e778 <ascii_strlower_n@plt+0xa318>
  40e764:	ldur	w8, [x29, #-60]
  40e768:	stur	w8, [x29, #-4]
  40e76c:	mov	w8, #0x1                   	// #1
  40e770:	str	w8, [sp, #52]
  40e774:	b	40e7f8 <ascii_strlower_n@plt+0xa398>
  40e778:	ldur	w8, [x29, #-60]
  40e77c:	cbnz	w8, 40e78c <ascii_strlower_n@plt+0xa32c>
  40e780:	mov	w8, #0xa                   	// #10
  40e784:	str	w8, [sp, #52]
  40e788:	b	40e7f8 <ascii_strlower_n@plt+0xa398>
  40e78c:	ldr	x0, [sp, #56]
  40e790:	bl	40dad0 <ascii_strlower_n@plt+0x9670>
  40e794:	tbnz	w0, #0, 40e79c <ascii_strlower_n@plt+0xa33c>
  40e798:	b	40e7a8 <ascii_strlower_n@plt+0xa348>
  40e79c:	mov	w8, #0xb                   	// #11
  40e7a0:	str	w8, [sp, #52]
  40e7a4:	b	40e7f8 <ascii_strlower_n@plt+0xa398>
  40e7a8:	ldur	x0, [x29, #-56]
  40e7ac:	ldr	x8, [sp, #56]
  40e7b0:	str	x8, [sp, #40]
  40e7b4:	mov	x8, xzr
  40e7b8:	str	x8, [sp, #56]
  40e7bc:	ldr	x8, [sp, #40]
  40e7c0:	str	x8, [sp, #32]
  40e7c4:	ldr	x1, [sp, #32]
  40e7c8:	bl	403e70 <strv_consume@plt>
  40e7cc:	stur	w0, [x29, #-60]
  40e7d0:	ldur	w9, [x29, #-60]
  40e7d4:	cmp	w9, #0x0
  40e7d8:	cset	w9, ge  // ge = tcont
  40e7dc:	tbnz	w9, #0, 40e7f4 <ascii_strlower_n@plt+0xa394>
  40e7e0:	ldur	w8, [x29, #-60]
  40e7e4:	stur	w8, [x29, #-4]
  40e7e8:	mov	w8, #0x1                   	// #1
  40e7ec:	str	w8, [sp, #52]
  40e7f0:	b	40e7f8 <ascii_strlower_n@plt+0xa398>
  40e7f4:	str	wzr, [sp, #52]
  40e7f8:	add	x0, sp, #0x38
  40e7fc:	bl	405970 <ascii_strlower_n@plt+0x1510>
  40e800:	ldr	w8, [sp, #52]
  40e804:	subs	w8, w8, #0x0
  40e808:	mov	w9, w8
  40e80c:	ubfx	x9, x9, #0, #32
  40e810:	str	x9, [sp, #8]
  40e814:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  40e818:	add	x8, x8, #0x9a4
  40e81c:	ldr	x11, [sp, #8]
  40e820:	ldrsw	x10, [x8, x11, lsl #2]
  40e824:	add	x9, x8, x10
  40e828:	br	x9
  40e82c:	b	40e734 <ascii_strlower_n@plt+0xa2d4>
  40e830:	ldur	x0, [x29, #-32]
  40e834:	bl	403e80 <sd_bus_message_exit_container@plt>
  40e838:	stur	w0, [x29, #-60]
  40e83c:	ldur	w8, [x29, #-60]
  40e840:	cmp	w8, #0x0
  40e844:	cset	w8, ge  // ge = tcont
  40e848:	tbnz	w8, #0, 40e858 <ascii_strlower_n@plt+0xa3f8>
  40e84c:	ldur	w8, [x29, #-60]
  40e850:	stur	w8, [x29, #-4]
  40e854:	b	40e85c <ascii_strlower_n@plt+0xa3fc>
  40e858:	stur	wzr, [x29, #-4]
  40e85c:	ldur	w0, [x29, #-4]
  40e860:	ldp	x29, x30, [sp, #128]
  40e864:	add	sp, sp, #0x90
  40e868:	ret
  40e86c:	sub	sp, sp, #0x40
  40e870:	stp	x29, x30, [sp, #48]
  40e874:	add	x29, sp, #0x30
  40e878:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40e87c:	add	x8, x8, #0x6f4
  40e880:	add	x8, x8, #0x3
  40e884:	stur	x0, [x29, #-8]
  40e888:	stur	x1, [x29, #-16]
  40e88c:	str	x2, [sp, #24]
  40e890:	str	x3, [sp, #16]
  40e894:	str	x4, [sp, #8]
  40e898:	str	x8, [sp]
  40e89c:	ldr	x8, [sp, #24]
  40e8a0:	cmp	x8, #0x0
  40e8a4:	cset	w9, ne  // ne = any
  40e8a8:	mov	w10, #0x1                   	// #1
  40e8ac:	eor	w9, w9, #0x1
  40e8b0:	eor	w9, w9, w10
  40e8b4:	eor	w9, w9, w10
  40e8b8:	and	w9, w9, #0x1
  40e8bc:	mov	w0, w9
  40e8c0:	sxtw	x8, w0
  40e8c4:	cbz	x8, 40e8ec <ascii_strlower_n@plt+0xa48c>
  40e8c8:	mov	w8, wzr
  40e8cc:	mov	w0, w8
  40e8d0:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e8d4:	add	x1, x1, #0x3f0
  40e8d8:	ldr	x2, [sp]
  40e8dc:	mov	w3, #0x61b                 	// #1563
  40e8e0:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e8e4:	add	x4, x4, #0x855
  40e8e8:	bl	4039d0 <log_assert_failed_realm@plt>
  40e8ec:	ldr	x8, [sp, #8]
  40e8f0:	cmp	x8, #0x0
  40e8f4:	cset	w9, ne  // ne = any
  40e8f8:	mov	w10, #0x1                   	// #1
  40e8fc:	eor	w9, w9, #0x1
  40e900:	eor	w9, w9, w10
  40e904:	eor	w9, w9, w10
  40e908:	and	w9, w9, #0x1
  40e90c:	mov	w0, w9
  40e910:	sxtw	x8, w0
  40e914:	cbz	x8, 40e93c <ascii_strlower_n@plt+0xa4dc>
  40e918:	mov	w8, wzr
  40e91c:	mov	w0, w8
  40e920:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e924:	add	x1, x1, #0x552
  40e928:	ldr	x2, [sp]
  40e92c:	mov	w3, #0x61c                 	// #1564
  40e930:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e934:	add	x4, x4, #0x855
  40e938:	bl	4039d0 <log_assert_failed_realm@plt>
  40e93c:	ldr	x0, [sp, #24]
  40e940:	ldr	x2, [sp, #8]
  40e944:	mov	w8, #0x1                   	// #1
  40e948:	and	w1, w8, #0x1
  40e94c:	bl	40d66c <ascii_strlower_n@plt+0x920c>
  40e950:	ldp	x29, x30, [sp, #48]
  40e954:	add	sp, sp, #0x40
  40e958:	ret
  40e95c:	sub	sp, sp, #0x90
  40e960:	stp	x29, x30, [sp, #128]
  40e964:	add	x29, sp, #0x80
  40e968:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40e96c:	add	x8, x8, #0x6f4
  40e970:	add	x8, x8, #0x3
  40e974:	adrp	x9, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e978:	add	x9, x9, #0x8b9
  40e97c:	stur	x0, [x29, #-16]
  40e980:	stur	x1, [x29, #-24]
  40e984:	stur	x2, [x29, #-32]
  40e988:	stur	x3, [x29, #-40]
  40e98c:	stur	x4, [x29, #-48]
  40e990:	ldur	x10, [x29, #-48]
  40e994:	stur	x10, [x29, #-56]
  40e998:	str	x8, [sp, #24]
  40e99c:	str	x9, [sp, #16]
  40e9a0:	ldur	x8, [x29, #-16]
  40e9a4:	cmp	x8, #0x0
  40e9a8:	cset	w9, ne  // ne = any
  40e9ac:	mov	w10, #0x1                   	// #1
  40e9b0:	eor	w9, w9, #0x1
  40e9b4:	eor	w9, w9, w10
  40e9b8:	eor	w9, w9, w10
  40e9bc:	and	w9, w9, #0x1
  40e9c0:	mov	w0, w9
  40e9c4:	sxtw	x8, w0
  40e9c8:	cbz	x8, 40e9ec <ascii_strlower_n@plt+0xa58c>
  40e9cc:	mov	w8, wzr
  40e9d0:	mov	w0, w8
  40e9d4:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40e9d8:	add	x1, x1, #0xf8
  40e9dc:	ldr	x2, [sp, #24]
  40e9e0:	mov	w3, #0x625                 	// #1573
  40e9e4:	ldr	x4, [sp, #16]
  40e9e8:	bl	4039d0 <log_assert_failed_realm@plt>
  40e9ec:	ldur	x8, [x29, #-24]
  40e9f0:	cmp	x8, #0x0
  40e9f4:	cset	w9, ne  // ne = any
  40e9f8:	mov	w10, #0x1                   	// #1
  40e9fc:	eor	w9, w9, #0x1
  40ea00:	eor	w9, w9, w10
  40ea04:	eor	w9, w9, w10
  40ea08:	and	w9, w9, #0x1
  40ea0c:	mov	w0, w9
  40ea10:	sxtw	x8, w0
  40ea14:	cbz	x8, 40ea38 <ascii_strlower_n@plt+0xa5d8>
  40ea18:	mov	w8, wzr
  40ea1c:	mov	w0, w8
  40ea20:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ea24:	add	x1, x1, #0x3e9
  40ea28:	ldr	x2, [sp, #24]
  40ea2c:	mov	w3, #0x626                 	// #1574
  40ea30:	ldr	x4, [sp, #16]
  40ea34:	bl	4039d0 <log_assert_failed_realm@plt>
  40ea38:	ldur	x8, [x29, #-32]
  40ea3c:	cmp	x8, #0x0
  40ea40:	cset	w9, ne  // ne = any
  40ea44:	mov	w10, #0x1                   	// #1
  40ea48:	eor	w9, w9, #0x1
  40ea4c:	eor	w9, w9, w10
  40ea50:	eor	w9, w9, w10
  40ea54:	and	w9, w9, #0x1
  40ea58:	mov	w0, w9
  40ea5c:	sxtw	x8, w0
  40ea60:	cbz	x8, 40ea84 <ascii_strlower_n@plt+0xa624>
  40ea64:	mov	w8, wzr
  40ea68:	mov	w0, w8
  40ea6c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ea70:	add	x1, x1, #0x3f0
  40ea74:	ldr	x2, [sp, #24]
  40ea78:	mov	w3, #0x627                 	// #1575
  40ea7c:	ldr	x4, [sp, #16]
  40ea80:	bl	4039d0 <log_assert_failed_realm@plt>
  40ea84:	ldur	x8, [x29, #-56]
  40ea88:	cmp	x8, #0x0
  40ea8c:	cset	w9, ne  // ne = any
  40ea90:	mov	w10, #0x1                   	// #1
  40ea94:	eor	w9, w9, #0x1
  40ea98:	eor	w9, w9, w10
  40ea9c:	eor	w9, w9, w10
  40eaa0:	and	w9, w9, #0x1
  40eaa4:	mov	w0, w9
  40eaa8:	sxtw	x8, w0
  40eaac:	cbz	x8, 40ead0 <ascii_strlower_n@plt+0xa670>
  40eab0:	mov	w8, wzr
  40eab4:	mov	w0, w8
  40eab8:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40eabc:	add	x1, x1, #0x3f2
  40eac0:	ldr	x2, [sp, #24]
  40eac4:	mov	w3, #0x628                 	// #1576
  40eac8:	ldr	x4, [sp, #16]
  40eacc:	bl	4039d0 <log_assert_failed_realm@plt>
  40ead0:	ldur	x0, [x29, #-32]
  40ead4:	mov	w1, #0x61                  	// #97
  40ead8:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40eadc:	add	x2, x2, #0x5ed
  40eae0:	bl	403e60 <sd_bus_message_enter_container@plt>
  40eae4:	stur	w0, [x29, #-60]
  40eae8:	ldur	w8, [x29, #-60]
  40eaec:	cmp	w8, #0x0
  40eaf0:	cset	w8, ge  // ge = tcont
  40eaf4:	tbnz	w8, #0, 40eb04 <ascii_strlower_n@plt+0xa6a4>
  40eaf8:	ldur	w8, [x29, #-60]
  40eafc:	stur	w8, [x29, #-4]
  40eb00:	b	40ec2c <ascii_strlower_n@plt+0xa7cc>
  40eb04:	add	x2, sp, #0x38
  40eb08:	mov	x8, xzr
  40eb0c:	str	x8, [sp, #56]
  40eb10:	ldur	x0, [x29, #-32]
  40eb14:	mov	w9, #0x1                   	// #1
  40eb18:	and	w1, w9, #0x1
  40eb1c:	bl	40dbec <ascii_strlower_n@plt+0x978c>
  40eb20:	stur	w0, [x29, #-60]
  40eb24:	ldur	w9, [x29, #-60]
  40eb28:	cmp	w9, #0x0
  40eb2c:	cset	w9, ge  // ge = tcont
  40eb30:	tbnz	w9, #0, 40eb48 <ascii_strlower_n@plt+0xa6e8>
  40eb34:	ldur	w8, [x29, #-60]
  40eb38:	stur	w8, [x29, #-4]
  40eb3c:	mov	w8, #0x1                   	// #1
  40eb40:	str	w8, [sp, #52]
  40eb44:	b	40ebc8 <ascii_strlower_n@plt+0xa768>
  40eb48:	ldur	w8, [x29, #-60]
  40eb4c:	cbnz	w8, 40eb5c <ascii_strlower_n@plt+0xa6fc>
  40eb50:	mov	w8, #0xa                   	// #10
  40eb54:	str	w8, [sp, #52]
  40eb58:	b	40ebc8 <ascii_strlower_n@plt+0xa768>
  40eb5c:	ldr	x0, [sp, #56]
  40eb60:	bl	40dad0 <ascii_strlower_n@plt+0x9670>
  40eb64:	tbnz	w0, #0, 40eb6c <ascii_strlower_n@plt+0xa70c>
  40eb68:	b	40eb78 <ascii_strlower_n@plt+0xa718>
  40eb6c:	mov	w8, #0xb                   	// #11
  40eb70:	str	w8, [sp, #52]
  40eb74:	b	40ebc8 <ascii_strlower_n@plt+0xa768>
  40eb78:	ldur	x0, [x29, #-56]
  40eb7c:	ldr	x8, [sp, #56]
  40eb80:	str	x8, [sp, #40]
  40eb84:	mov	x8, xzr
  40eb88:	str	x8, [sp, #56]
  40eb8c:	ldr	x8, [sp, #40]
  40eb90:	str	x8, [sp, #32]
  40eb94:	ldr	x1, [sp, #32]
  40eb98:	bl	403e70 <strv_consume@plt>
  40eb9c:	stur	w0, [x29, #-60]
  40eba0:	ldur	w9, [x29, #-60]
  40eba4:	cmp	w9, #0x0
  40eba8:	cset	w9, ge  // ge = tcont
  40ebac:	tbnz	w9, #0, 40ebc4 <ascii_strlower_n@plt+0xa764>
  40ebb0:	ldur	w8, [x29, #-60]
  40ebb4:	stur	w8, [x29, #-4]
  40ebb8:	mov	w8, #0x1                   	// #1
  40ebbc:	str	w8, [sp, #52]
  40ebc0:	b	40ebc8 <ascii_strlower_n@plt+0xa768>
  40ebc4:	str	wzr, [sp, #52]
  40ebc8:	add	x0, sp, #0x38
  40ebcc:	bl	405970 <ascii_strlower_n@plt+0x1510>
  40ebd0:	ldr	w8, [sp, #52]
  40ebd4:	subs	w8, w8, #0x0
  40ebd8:	mov	w9, w8
  40ebdc:	ubfx	x9, x9, #0, #32
  40ebe0:	str	x9, [sp, #8]
  40ebe4:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  40ebe8:	add	x8, x8, #0x9d4
  40ebec:	ldr	x11, [sp, #8]
  40ebf0:	ldrsw	x10, [x8, x11, lsl #2]
  40ebf4:	add	x9, x8, x10
  40ebf8:	br	x9
  40ebfc:	b	40eb04 <ascii_strlower_n@plt+0xa6a4>
  40ec00:	ldur	x0, [x29, #-32]
  40ec04:	bl	403e80 <sd_bus_message_exit_container@plt>
  40ec08:	stur	w0, [x29, #-60]
  40ec0c:	ldur	w8, [x29, #-60]
  40ec10:	cmp	w8, #0x0
  40ec14:	cset	w8, ge  // ge = tcont
  40ec18:	tbnz	w8, #0, 40ec28 <ascii_strlower_n@plt+0xa7c8>
  40ec1c:	ldur	w8, [x29, #-60]
  40ec20:	stur	w8, [x29, #-4]
  40ec24:	b	40ec2c <ascii_strlower_n@plt+0xa7cc>
  40ec28:	stur	wzr, [x29, #-4]
  40ec2c:	ldur	w0, [x29, #-4]
  40ec30:	ldp	x29, x30, [sp, #128]
  40ec34:	add	sp, sp, #0x90
  40ec38:	ret
  40ec3c:	sub	sp, sp, #0x20
  40ec40:	stp	x29, x30, [sp, #16]
  40ec44:	add	x29, sp, #0x10
  40ec48:	str	x0, [sp, #8]
  40ec4c:	ldr	x8, [sp, #8]
  40ec50:	ldr	x0, [x8]
  40ec54:	bl	403ac0 <free@plt>
  40ec58:	ldr	x8, [sp, #8]
  40ec5c:	ldr	x0, [x8, #8]
  40ec60:	bl	403bf0 <strv_free@plt>
  40ec64:	ldr	x8, [sp, #8]
  40ec68:	ldr	x8, [x8, #16]
  40ec6c:	mov	x0, x8
  40ec70:	bl	403bf0 <strv_free@plt>
  40ec74:	ldr	x8, [sp, #8]
  40ec78:	ldr	x8, [x8, #24]
  40ec7c:	mov	x0, x8
  40ec80:	bl	403bf0 <strv_free@plt>
  40ec84:	ldr	x8, [sp, #8]
  40ec88:	ldr	x8, [x8, #32]
  40ec8c:	mov	x0, x8
  40ec90:	bl	403bf0 <strv_free@plt>
  40ec94:	ldp	x29, x30, [sp, #16]
  40ec98:	add	sp, sp, #0x20
  40ec9c:	ret
  40eca0:	sub	sp, sp, #0x40
  40eca4:	stp	x29, x30, [sp, #48]
  40eca8:	add	x29, sp, #0x30
  40ecac:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ecb0:	add	x8, x8, #0x912
  40ecb4:	stur	x0, [x29, #-8]
  40ecb8:	str	x8, [sp, #24]
  40ecbc:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  40ecc0:	str	x0, [sp, #16]
  40ecc4:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40ecc8:	ldr	x8, [sp, #24]
  40eccc:	str	x0, [sp, #8]
  40ecd0:	mov	x0, x8
  40ecd4:	ldr	x1, [sp, #16]
  40ecd8:	ldr	x2, [sp, #8]
  40ecdc:	bl	403ab0 <printf@plt>
  40ece0:	ldur	x8, [x29, #-8]
  40ece4:	stur	x8, [x29, #-16]
  40ece8:	ldur	x8, [x29, #-16]
  40ecec:	mov	w9, #0x0                   	// #0
  40ecf0:	str	w9, [sp, #4]
  40ecf4:	cbz	x8, 40ed0c <ascii_strlower_n@plt+0xa8ac>
  40ecf8:	ldur	x8, [x29, #-16]
  40ecfc:	ldr	x8, [x8]
  40ed00:	cmp	x8, #0x0
  40ed04:	cset	w9, ne  // ne = any
  40ed08:	str	w9, [sp, #4]
  40ed0c:	ldr	w8, [sp, #4]
  40ed10:	tbnz	w8, #0, 40ed18 <ascii_strlower_n@plt+0xa8b8>
  40ed14:	b	40ed3c <ascii_strlower_n@plt+0xa8dc>
  40ed18:	ldur	x8, [x29, #-16]
  40ed1c:	ldr	x1, [x8]
  40ed20:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ed24:	add	x0, x0, #0x607
  40ed28:	bl	403ab0 <printf@plt>
  40ed2c:	ldur	x8, [x29, #-16]
  40ed30:	add	x8, x8, #0x8
  40ed34:	stur	x8, [x29, #-16]
  40ed38:	b	40ece8 <ascii_strlower_n@plt+0xa888>
  40ed3c:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ed40:	add	x0, x0, #0x60b
  40ed44:	bl	403ab0 <printf@plt>
  40ed48:	mov	w8, wzr
  40ed4c:	mov	w0, w8
  40ed50:	ldp	x29, x30, [sp, #48]
  40ed54:	add	sp, sp, #0x40
  40ed58:	ret
  40ed5c:	stp	x29, x30, [sp, #-32]!
  40ed60:	str	x28, [sp, #16]
  40ed64:	mov	x29, sp
  40ed68:	sub	sp, sp, #0x220
  40ed6c:	mov	x8, xzr
  40ed70:	mov	w9, #0x0                   	// #0
  40ed74:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40ed78:	add	x10, x10, #0x6f4
  40ed7c:	add	x10, x10, #0x3
  40ed80:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ed84:	add	x11, x11, #0x96e
  40ed88:	mov	w12, #0x1                   	// #1
  40ed8c:	adrp	x13, 450000 <ascii_strlower_n@plt+0x4bba0>
  40ed90:	add	x13, x13, #0x1e8
  40ed94:	adrp	x14, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ed98:	add	x14, x14, #0xa1c
  40ed9c:	stur	x0, [x29, #-16]
  40eda0:	stur	x1, [x29, #-24]
  40eda4:	sturh	w2, [x29, #-26]
  40eda8:	sturh	w3, [x29, #-28]
  40edac:	and	w12, w4, w12
  40edb0:	sturb	w12, [x29, #-29]
  40edb4:	stur	x8, [x29, #-40]
  40edb8:	stur	x8, [x29, #-48]
  40edbc:	stur	xzr, [x29, #-72]
  40edc0:	stur	xzr, [x29, #-64]
  40edc4:	stur	xzr, [x29, #-56]
  40edc8:	stur	wzr, [x29, #-76]
  40edcc:	sturb	w9, [x29, #-105]
  40edd0:	str	x10, [sp, #200]
  40edd4:	str	x11, [sp, #192]
  40edd8:	str	x13, [sp, #184]
  40eddc:	str	x14, [sp, #176]
  40ede0:	ldur	x8, [x29, #-24]
  40ede4:	cmp	x8, #0x0
  40ede8:	cset	w9, ne  // ne = any
  40edec:	mov	w10, #0x1                   	// #1
  40edf0:	eor	w9, w9, #0x1
  40edf4:	eor	w9, w9, w10
  40edf8:	eor	w9, w9, w10
  40edfc:	and	w9, w9, #0x1
  40ee00:	mov	w0, w9
  40ee04:	sxtw	x8, w0
  40ee08:	cbz	x8, 40ee30 <ascii_strlower_n@plt+0xa9d0>
  40ee0c:	mov	w8, wzr
  40ee10:	mov	w0, w8
  40ee14:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ee18:	add	x1, x1, #0x923
  40ee1c:	ldr	x2, [sp, #200]
  40ee20:	mov	w3, #0x1a2                 	// #418
  40ee24:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ee28:	add	x4, x4, #0x928
  40ee2c:	bl	4039d0 <log_assert_failed_realm@plt>
  40ee30:	mov	w8, #0x7                   	// #7
  40ee34:	stur	w8, [x29, #-112]
  40ee38:	stur	wzr, [x29, #-116]
  40ee3c:	stur	wzr, [x29, #-120]
  40ee40:	ldur	w0, [x29, #-120]
  40ee44:	bl	403a10 <log_get_max_level_realm@plt>
  40ee48:	ldur	w8, [x29, #-112]
  40ee4c:	and	w8, w8, #0x7
  40ee50:	cmp	w0, w8
  40ee54:	b.lt	40ef1c <ascii_strlower_n@plt+0xaabc>  // b.tstop
  40ee58:	ldur	w8, [x29, #-120]
  40ee5c:	ldur	w9, [x29, #-112]
  40ee60:	orr	w0, w9, w8, lsl #10
  40ee64:	ldur	w1, [x29, #-116]
  40ee68:	ldur	x6, [x29, #-24]
  40ee6c:	ldurh	w8, [x29, #-26]
  40ee70:	str	w0, [sp, #172]
  40ee74:	mov	w0, w8
  40ee78:	str	w1, [sp, #168]
  40ee7c:	str	x6, [sp, #160]
  40ee80:	bl	42c0f0 <ascii_strlower_n@plt+0x27c90>
  40ee84:	ldurh	w8, [x29, #-28]
  40ee88:	str	x0, [sp, #152]
  40ee8c:	mov	w0, w8
  40ee90:	bl	42adf8 <ascii_strlower_n@plt+0x26998>
  40ee94:	adrp	x10, 450000 <ascii_strlower_n@plt+0x4bba0>
  40ee98:	add	x10, x10, #0x160
  40ee9c:	ldr	x10, [x10]
  40eea0:	str	x0, [sp, #144]
  40eea4:	mov	x0, x10
  40eea8:	bl	40dad0 <ascii_strlower_n@plt+0x9670>
  40eeac:	tbnz	w0, #0, 40eeb4 <ascii_strlower_n@plt+0xaa54>
  40eeb0:	b	40eec4 <ascii_strlower_n@plt+0xaa64>
  40eeb4:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40eeb8:	add	x8, x8, #0x9a0
  40eebc:	str	x8, [sp, #136]
  40eec0:	b	40eed4 <ascii_strlower_n@plt+0xaa74>
  40eec4:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40eec8:	add	x8, x8, #0x160
  40eecc:	ldr	x8, [x8]
  40eed0:	str	x8, [sp, #136]
  40eed4:	ldr	x8, [sp, #136]
  40eed8:	ldr	w0, [sp, #172]
  40eedc:	ldr	w1, [sp, #168]
  40eee0:	ldr	x2, [sp, #200]
  40eee4:	mov	w3, #0x1a4                 	// #420
  40eee8:	ldr	x4, [sp, #192]
  40eeec:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40eef0:	add	x5, x5, #0x97d
  40eef4:	ldr	x6, [sp, #160]
  40eef8:	ldr	x7, [sp, #152]
  40eefc:	mov	x9, sp
  40ef00:	ldr	x10, [sp, #144]
  40ef04:	str	x10, [x9]
  40ef08:	mov	x9, sp
  40ef0c:	str	x8, [x9, #8]
  40ef10:	bl	403a20 <log_internal_realm@plt>
  40ef14:	str	w0, [sp, #132]
  40ef18:	b	40ef30 <ascii_strlower_n@plt+0xaad0>
  40ef1c:	ldur	w0, [x29, #-116]
  40ef20:	bl	403a30 <abs@plt>
  40ef24:	mov	w8, wzr
  40ef28:	subs	w8, w8, w0, uxtb
  40ef2c:	str	w8, [sp, #132]
  40ef30:	ldr	w8, [sp, #132]
  40ef34:	stur	w8, [x29, #-124]
  40ef38:	ldur	x0, [x29, #-16]
  40ef3c:	sub	x1, x29, #0x28
  40ef40:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ef44:	add	x2, x2, #0x1aa
  40ef48:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ef4c:	add	x3, x3, #0x6e5
  40ef50:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ef54:	add	x4, x4, #0x9a2
  40ef58:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ef5c:	add	x5, x5, #0x9c3
  40ef60:	bl	403f00 <sd_bus_message_new_method_call@plt>
  40ef64:	stur	w0, [x29, #-92]
  40ef68:	ldur	w8, [x29, #-92]
  40ef6c:	cmp	w8, #0x0
  40ef70:	cset	w8, ge  // ge = tcont
  40ef74:	tbnz	w8, #0, 40f004 <ascii_strlower_n@plt+0xaba4>
  40ef78:	mov	w8, #0x3                   	// #3
  40ef7c:	stur	w8, [x29, #-128]
  40ef80:	ldur	w8, [x29, #-92]
  40ef84:	stur	w8, [x29, #-132]
  40ef88:	stur	wzr, [x29, #-136]
  40ef8c:	ldur	w0, [x29, #-136]
  40ef90:	bl	403a10 <log_get_max_level_realm@plt>
  40ef94:	ldur	w8, [x29, #-128]
  40ef98:	and	w8, w8, #0x7
  40ef9c:	cmp	w0, w8
  40efa0:	b.lt	40efd4 <ascii_strlower_n@plt+0xab74>  // b.tstop
  40efa4:	ldur	w8, [x29, #-136]
  40efa8:	ldur	w9, [x29, #-128]
  40efac:	orr	w0, w9, w8, lsl #10
  40efb0:	ldur	w1, [x29, #-132]
  40efb4:	ldr	x2, [sp, #200]
  40efb8:	mov	w3, #0x1ae                 	// #430
  40efbc:	ldr	x4, [sp, #192]
  40efc0:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40efc4:	add	x5, x5, #0x9d1
  40efc8:	bl	403a20 <log_internal_realm@plt>
  40efcc:	str	w0, [sp, #128]
  40efd0:	b	40efe8 <ascii_strlower_n@plt+0xab88>
  40efd4:	ldur	w0, [x29, #-132]
  40efd8:	bl	403a30 <abs@plt>
  40efdc:	mov	w8, wzr
  40efe0:	subs	w8, w8, w0, uxtb
  40efe4:	str	w8, [sp, #128]
  40efe8:	ldr	w8, [sp, #128]
  40efec:	stur	w8, [x29, #-140]
  40eff0:	ldur	w8, [x29, #-140]
  40eff4:	stur	w8, [x29, #-4]
  40eff8:	mov	w8, #0x1                   	// #1
  40effc:	stur	w8, [x29, #-144]
  40f000:	b	40f8ac <ascii_strlower_n@plt+0xb44c>
  40f004:	ldur	x0, [x29, #-40]
  40f008:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40f00c:	add	x8, x8, #0x170
  40f010:	ldr	w2, [x8]
  40f014:	ldur	x3, [x29, #-24]
  40f018:	ldurh	w4, [x29, #-26]
  40f01c:	ldurh	w5, [x29, #-28]
  40f020:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40f024:	add	x8, x8, #0x180
  40f028:	ldr	x6, [x8]
  40f02c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40f030:	add	x1, x1, #0x9f2
  40f034:	bl	403f10 <sd_bus_message_append@plt>
  40f038:	stur	w0, [x29, #-92]
  40f03c:	ldur	w9, [x29, #-92]
  40f040:	cmp	w9, #0x0
  40f044:	cset	w9, ge  // ge = tcont
  40f048:	tbnz	w9, #0, 40f0d8 <ascii_strlower_n@plt+0xac78>
  40f04c:	mov	w8, #0x3                   	// #3
  40f050:	stur	w8, [x29, #-148]
  40f054:	ldur	w8, [x29, #-92]
  40f058:	stur	w8, [x29, #-152]
  40f05c:	stur	wzr, [x29, #-156]
  40f060:	ldur	w0, [x29, #-156]
  40f064:	bl	403a10 <log_get_max_level_realm@plt>
  40f068:	ldur	w8, [x29, #-148]
  40f06c:	and	w8, w8, #0x7
  40f070:	cmp	w0, w8
  40f074:	b.lt	40f0a8 <ascii_strlower_n@plt+0xac48>  // b.tstop
  40f078:	ldur	w8, [x29, #-156]
  40f07c:	ldur	w9, [x29, #-148]
  40f080:	orr	w0, w9, w8, lsl #10
  40f084:	ldur	w1, [x29, #-152]
  40f088:	ldr	x2, [sp, #200]
  40f08c:	mov	w3, #0x1b2                 	// #434
  40f090:	ldr	x4, [sp, #192]
  40f094:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40f098:	add	x5, x5, #0x9d1
  40f09c:	bl	403a20 <log_internal_realm@plt>
  40f0a0:	str	w0, [sp, #124]
  40f0a4:	b	40f0bc <ascii_strlower_n@plt+0xac5c>
  40f0a8:	ldur	w0, [x29, #-152]
  40f0ac:	bl	403a30 <abs@plt>
  40f0b0:	mov	w8, wzr
  40f0b4:	subs	w8, w8, w0, uxtb
  40f0b8:	str	w8, [sp, #124]
  40f0bc:	ldr	w8, [sp, #124]
  40f0c0:	stur	w8, [x29, #-160]
  40f0c4:	ldur	w8, [x29, #-160]
  40f0c8:	stur	w8, [x29, #-4]
  40f0cc:	mov	w8, #0x1                   	// #1
  40f0d0:	stur	w8, [x29, #-144]
  40f0d4:	b	40f8ac <ascii_strlower_n@plt+0xb44c>
  40f0d8:	mov	w0, #0x1                   	// #1
  40f0dc:	bl	403f20 <now@plt>
  40f0e0:	stur	x0, [x29, #-104]
  40f0e4:	ldur	x0, [x29, #-16]
  40f0e8:	ldur	x1, [x29, #-40]
  40f0ec:	mov	x2, #0xe00                 	// #3584
  40f0f0:	movk	x2, #0x727, lsl #16
  40f0f4:	sub	x3, x29, #0x48
  40f0f8:	sub	x4, x29, #0x30
  40f0fc:	bl	403f30 <sd_bus_call@plt>
  40f100:	stur	w0, [x29, #-92]
  40f104:	ldur	w8, [x29, #-92]
  40f108:	cmp	w8, #0x0
  40f10c:	cset	w8, ge  // ge = tcont
  40f110:	tbnz	w8, #0, 40f1f0 <ascii_strlower_n@plt+0xad90>
  40f114:	ldurb	w8, [x29, #-29]
  40f118:	tbnz	w8, #0, 40f12c <ascii_strlower_n@plt+0xaccc>
  40f11c:	ldur	w8, [x29, #-92]
  40f120:	mov	w9, #0xfffffffa            	// #-6
  40f124:	cmp	w8, w9
  40f128:	b.eq	40f1dc <ascii_strlower_n@plt+0xad7c>  // b.none
  40f12c:	mov	w8, #0x3                   	// #3
  40f130:	stur	w8, [x29, #-164]
  40f134:	stur	wzr, [x29, #-168]
  40f138:	stur	wzr, [x29, #-172]
  40f13c:	ldur	w0, [x29, #-172]
  40f140:	bl	403a10 <log_get_max_level_realm@plt>
  40f144:	ldur	w8, [x29, #-164]
  40f148:	and	w8, w8, #0x7
  40f14c:	cmp	w0, w8
  40f150:	b.lt	40f1c0 <ascii_strlower_n@plt+0xad60>  // b.tstop
  40f154:	ldur	w8, [x29, #-172]
  40f158:	ldur	w9, [x29, #-164]
  40f15c:	orr	w0, w9, w8, lsl #10
  40f160:	ldur	w1, [x29, #-168]
  40f164:	ldur	x6, [x29, #-24]
  40f168:	ldur	w8, [x29, #-92]
  40f16c:	sub	x10, x29, #0x48
  40f170:	str	w0, [sp, #120]
  40f174:	mov	x0, x10
  40f178:	str	w1, [sp, #116]
  40f17c:	mov	w1, w8
  40f180:	str	x6, [sp, #104]
  40f184:	bl	403ce0 <bus_error_message@plt>
  40f188:	ldr	w8, [sp, #120]
  40f18c:	str	x0, [sp, #96]
  40f190:	mov	w0, w8
  40f194:	ldr	w1, [sp, #116]
  40f198:	ldr	x2, [sp, #200]
  40f19c:	mov	w3, #0x1b9                 	// #441
  40f1a0:	ldr	x4, [sp, #192]
  40f1a4:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40f1a8:	add	x5, x5, #0x9f8
  40f1ac:	ldr	x6, [sp, #104]
  40f1b0:	ldr	x7, [sp, #96]
  40f1b4:	bl	403a20 <log_internal_realm@plt>
  40f1b8:	str	w0, [sp, #92]
  40f1bc:	b	40f1d4 <ascii_strlower_n@plt+0xad74>
  40f1c0:	ldur	w0, [x29, #-168]
  40f1c4:	bl	403a30 <abs@plt>
  40f1c8:	mov	w8, wzr
  40f1cc:	subs	w8, w8, w0, uxtb
  40f1d0:	str	w8, [sp, #92]
  40f1d4:	ldr	w8, [sp, #92]
  40f1d8:	stur	w8, [x29, #-176]
  40f1dc:	ldur	w8, [x29, #-92]
  40f1e0:	stur	w8, [x29, #-4]
  40f1e4:	mov	w8, #0x1                   	// #1
  40f1e8:	stur	w8, [x29, #-144]
  40f1ec:	b	40f8ac <ascii_strlower_n@plt+0xb44c>
  40f1f0:	mov	w0, #0x1                   	// #1
  40f1f4:	bl	403f20 <now@plt>
  40f1f8:	ldur	x8, [x29, #-104]
  40f1fc:	subs	x8, x0, x8
  40f200:	stur	x8, [x29, #-104]
  40f204:	ldur	x0, [x29, #-48]
  40f208:	mov	w1, #0x61                  	// #97
  40f20c:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40f210:	add	x2, x2, #0xa14
  40f214:	bl	403e60 <sd_bus_message_enter_container@plt>
  40f218:	stur	w0, [x29, #-92]
  40f21c:	ldur	w9, [x29, #-92]
  40f220:	cmp	w9, #0x0
  40f224:	cset	w9, ge  // ge = tcont
  40f228:	tbnz	w9, #0, 40f2b4 <ascii_strlower_n@plt+0xae54>
  40f22c:	mov	w8, #0x3                   	// #3
  40f230:	stur	w8, [x29, #-180]
  40f234:	ldur	w8, [x29, #-92]
  40f238:	stur	w8, [x29, #-184]
  40f23c:	stur	wzr, [x29, #-188]
  40f240:	ldur	w0, [x29, #-188]
  40f244:	bl	403a10 <log_get_max_level_realm@plt>
  40f248:	ldur	w8, [x29, #-180]
  40f24c:	and	w8, w8, #0x7
  40f250:	cmp	w0, w8
  40f254:	b.lt	40f284 <ascii_strlower_n@plt+0xae24>  // b.tstop
  40f258:	ldur	w8, [x29, #-188]
  40f25c:	ldur	w9, [x29, #-180]
  40f260:	orr	w0, w9, w8, lsl #10
  40f264:	ldur	w1, [x29, #-184]
  40f268:	ldr	x2, [sp, #200]
  40f26c:	mov	w3, #0x1c1                 	// #449
  40f270:	ldr	x4, [sp, #192]
  40f274:	ldr	x5, [sp, #176]
  40f278:	bl	403a20 <log_internal_realm@plt>
  40f27c:	str	w0, [sp, #88]
  40f280:	b	40f298 <ascii_strlower_n@plt+0xae38>
  40f284:	ldur	w0, [x29, #-184]
  40f288:	bl	403a30 <abs@plt>
  40f28c:	mov	w8, wzr
  40f290:	subs	w8, w8, w0, uxtb
  40f294:	str	w8, [sp, #88]
  40f298:	ldr	w8, [sp, #88]
  40f29c:	stur	w8, [x29, #-192]
  40f2a0:	ldur	w8, [x29, #-192]
  40f2a4:	stur	w8, [x29, #-4]
  40f2a8:	mov	w8, #0x1                   	// #1
  40f2ac:	stur	w8, [x29, #-144]
  40f2b0:	b	40f8ac <ascii_strlower_n@plt+0xb44c>
  40f2b4:	ldur	x0, [x29, #-48]
  40f2b8:	mov	w1, #0x72                  	// #114
  40f2bc:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40f2c0:	add	x2, x2, #0xa3c
  40f2c4:	bl	403e60 <sd_bus_message_enter_container@plt>
  40f2c8:	stur	w0, [x29, #-92]
  40f2cc:	cmp	w0, #0x0
  40f2d0:	cset	w8, le
  40f2d4:	tbnz	w8, #0, 40f5a8 <ascii_strlower_n@plt+0xb148>
  40f2d8:	ldur	x0, [x29, #-48]
  40f2dc:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40f2e0:	add	x1, x1, #0xa42
  40f2e4:	sub	x2, x29, #0xc8
  40f2e8:	sub	x3, x29, #0xc2
  40f2ec:	sub	x4, x29, #0xc4
  40f2f0:	bl	403d00 <sd_bus_message_read@plt>
  40f2f4:	stur	w0, [x29, #-92]
  40f2f8:	ldur	w8, [x29, #-92]
  40f2fc:	cmp	w8, #0x0
  40f300:	cset	w8, ge  // ge = tcont
  40f304:	tbnz	w8, #0, 40f390 <ascii_strlower_n@plt+0xaf30>
  40f308:	mov	w8, #0x3                   	// #3
  40f30c:	stur	w8, [x29, #-220]
  40f310:	ldur	w8, [x29, #-92]
  40f314:	stur	w8, [x29, #-224]
  40f318:	stur	wzr, [x29, #-228]
  40f31c:	ldur	w0, [x29, #-228]
  40f320:	bl	403a10 <log_get_max_level_realm@plt>
  40f324:	ldur	w8, [x29, #-220]
  40f328:	and	w8, w8, #0x7
  40f32c:	cmp	w0, w8
  40f330:	b.lt	40f360 <ascii_strlower_n@plt+0xaf00>  // b.tstop
  40f334:	ldur	w8, [x29, #-228]
  40f338:	ldur	w9, [x29, #-220]
  40f33c:	orr	w0, w9, w8, lsl #10
  40f340:	ldur	w1, [x29, #-224]
  40f344:	ldr	x2, [sp, #200]
  40f348:	mov	w3, #0x1cd                 	// #461
  40f34c:	ldr	x4, [sp, #192]
  40f350:	ldr	x5, [sp, #176]
  40f354:	bl	403a20 <log_internal_realm@plt>
  40f358:	str	w0, [sp, #84]
  40f35c:	b	40f374 <ascii_strlower_n@plt+0xaf14>
  40f360:	ldur	w0, [x29, #-224]
  40f364:	bl	403a30 <abs@plt>
  40f368:	mov	w8, wzr
  40f36c:	subs	w8, w8, w0, uxtb
  40f370:	str	w8, [sp, #84]
  40f374:	ldr	w8, [sp, #84]
  40f378:	stur	w8, [x29, #-232]
  40f37c:	ldur	w8, [x29, #-232]
  40f380:	stur	w8, [x29, #-4]
  40f384:	mov	w8, #0x1                   	// #1
  40f388:	stur	w8, [x29, #-144]
  40f38c:	b	40f8ac <ascii_strlower_n@plt+0xb44c>
  40f390:	ldur	x0, [x29, #-48]
  40f394:	mov	w1, #0x79                  	// #121
  40f398:	sub	x2, x29, #0xd0
  40f39c:	sub	x3, x29, #0xd8
  40f3a0:	bl	403ea0 <sd_bus_message_read_array@plt>
  40f3a4:	stur	w0, [x29, #-92]
  40f3a8:	ldur	w8, [x29, #-92]
  40f3ac:	cmp	w8, #0x0
  40f3b0:	cset	w8, ge  // ge = tcont
  40f3b4:	tbnz	w8, #0, 40f440 <ascii_strlower_n@plt+0xafe0>
  40f3b8:	mov	w8, #0x3                   	// #3
  40f3bc:	stur	w8, [x29, #-236]
  40f3c0:	ldur	w8, [x29, #-92]
  40f3c4:	stur	w8, [x29, #-240]
  40f3c8:	stur	wzr, [x29, #-244]
  40f3cc:	ldur	w0, [x29, #-244]
  40f3d0:	bl	403a10 <log_get_max_level_realm@plt>
  40f3d4:	ldur	w8, [x29, #-236]
  40f3d8:	and	w8, w8, #0x7
  40f3dc:	cmp	w0, w8
  40f3e0:	b.lt	40f410 <ascii_strlower_n@plt+0xafb0>  // b.tstop
  40f3e4:	ldur	w8, [x29, #-244]
  40f3e8:	ldur	w9, [x29, #-236]
  40f3ec:	orr	w0, w9, w8, lsl #10
  40f3f0:	ldur	w1, [x29, #-240]
  40f3f4:	ldr	x2, [sp, #200]
  40f3f8:	mov	w3, #0x1d1                 	// #465
  40f3fc:	ldr	x4, [sp, #192]
  40f400:	ldr	x5, [sp, #176]
  40f404:	bl	403a20 <log_internal_realm@plt>
  40f408:	str	w0, [sp, #80]
  40f40c:	b	40f424 <ascii_strlower_n@plt+0xafc4>
  40f410:	ldur	w0, [x29, #-240]
  40f414:	bl	403a30 <abs@plt>
  40f418:	mov	w8, wzr
  40f41c:	subs	w8, w8, w0, uxtb
  40f420:	str	w8, [sp, #80]
  40f424:	ldr	w8, [sp, #80]
  40f428:	stur	w8, [x29, #-248]
  40f42c:	ldur	w8, [x29, #-248]
  40f430:	stur	w8, [x29, #-4]
  40f434:	mov	w8, #0x1                   	// #1
  40f438:	stur	w8, [x29, #-144]
  40f43c:	b	40f8ac <ascii_strlower_n@plt+0xb44c>
  40f440:	ldur	x0, [x29, #-48]
  40f444:	bl	403e80 <sd_bus_message_exit_container@plt>
  40f448:	stur	w0, [x29, #-92]
  40f44c:	ldur	w8, [x29, #-92]
  40f450:	cmp	w8, #0x0
  40f454:	cset	w8, ge  // ge = tcont
  40f458:	tbnz	w8, #0, 40f4e4 <ascii_strlower_n@plt+0xb084>
  40f45c:	mov	w8, #0x3                   	// #3
  40f460:	stur	w8, [x29, #-252]
  40f464:	ldur	w8, [x29, #-92]
  40f468:	stur	w8, [x29, #-256]
  40f46c:	str	wzr, [sp, #284]
  40f470:	ldr	w0, [sp, #284]
  40f474:	bl	403a10 <log_get_max_level_realm@plt>
  40f478:	ldur	w8, [x29, #-252]
  40f47c:	and	w8, w8, #0x7
  40f480:	cmp	w0, w8
  40f484:	b.lt	40f4b4 <ascii_strlower_n@plt+0xb054>  // b.tstop
  40f488:	ldr	w8, [sp, #284]
  40f48c:	ldur	w9, [x29, #-252]
  40f490:	orr	w0, w9, w8, lsl #10
  40f494:	ldur	w1, [x29, #-256]
  40f498:	ldr	x2, [sp, #200]
  40f49c:	mov	w3, #0x1d5                 	// #469
  40f4a0:	ldr	x4, [sp, #192]
  40f4a4:	ldr	x5, [sp, #176]
  40f4a8:	bl	403a20 <log_internal_realm@plt>
  40f4ac:	str	w0, [sp, #76]
  40f4b0:	b	40f4c8 <ascii_strlower_n@plt+0xb068>
  40f4b4:	ldur	w0, [x29, #-256]
  40f4b8:	bl	403a30 <abs@plt>
  40f4bc:	mov	w8, wzr
  40f4c0:	subs	w8, w8, w0, uxtb
  40f4c4:	str	w8, [sp, #76]
  40f4c8:	ldr	w8, [sp, #76]
  40f4cc:	str	w8, [sp, #280]
  40f4d0:	ldr	w8, [sp, #280]
  40f4d4:	stur	w8, [x29, #-4]
  40f4d8:	mov	w8, #0x1                   	// #1
  40f4dc:	stur	w8, [x29, #-144]
  40f4e0:	b	40f8ac <ascii_strlower_n@plt+0xb44c>
  40f4e4:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40f4e8:	add	x8, x8, #0x190
  40f4ec:	ldr	w9, [x8]
  40f4f0:	cmp	w9, #0x2
  40f4f4:	b.ne	40f548 <ascii_strlower_n@plt+0xb0e8>  // b.any
  40f4f8:	ldur	x0, [x29, #-216]
  40f4fc:	bl	411d2c <ascii_strlower_n@plt+0xd8cc>
  40f500:	add	x8, sp, #0x110
  40f504:	str	x0, [sp, #272]
  40f508:	ldr	x9, [sp, #184]
  40f50c:	ldr	x3, [x9]
  40f510:	mov	x0, x8
  40f514:	mov	x1, #0x8                   	// #8
  40f518:	mov	x8, #0x1                   	// #1
  40f51c:	mov	x2, x8
  40f520:	str	x8, [sp, #64]
  40f524:	bl	403f40 <fwrite@plt>
  40f528:	ldur	x8, [x29, #-208]
  40f52c:	ldur	x2, [x29, #-216]
  40f530:	ldr	x9, [sp, #184]
  40f534:	ldr	x3, [x9]
  40f538:	mov	x0, x8
  40f53c:	ldr	x1, [sp, #64]
  40f540:	bl	403f40 <fwrite@plt>
  40f544:	b	40f580 <ascii_strlower_n@plt+0xb120>
  40f548:	ldur	x0, [x29, #-208]
  40f54c:	ldur	x1, [x29, #-216]
  40f550:	ldur	w2, [x29, #-200]
  40f554:	bl	411d40 <ascii_strlower_n@plt+0xd8e0>
  40f558:	stur	w0, [x29, #-92]
  40f55c:	ldur	w8, [x29, #-92]
  40f560:	cmp	w8, #0x0
  40f564:	cset	w8, ge  // ge = tcont
  40f568:	tbnz	w8, #0, 40f580 <ascii_strlower_n@plt+0xb120>
  40f56c:	ldur	w8, [x29, #-92]
  40f570:	stur	w8, [x29, #-4]
  40f574:	mov	w8, #0x1                   	// #1
  40f578:	stur	w8, [x29, #-144]
  40f57c:	b	40f8ac <ascii_strlower_n@plt+0xb44c>
  40f580:	ldurh	w0, [x29, #-196]
  40f584:	bl	42bfd0 <ascii_strlower_n@plt+0x27b70>
  40f588:	tbnz	w0, #0, 40f590 <ascii_strlower_n@plt+0xb130>
  40f58c:	b	40f598 <ascii_strlower_n@plt+0xb138>
  40f590:	mov	w8, #0x1                   	// #1
  40f594:	sturb	w8, [x29, #-105]
  40f598:	ldur	w8, [x29, #-76]
  40f59c:	add	w8, w8, #0x1
  40f5a0:	stur	w8, [x29, #-76]
  40f5a4:	b	40f2b4 <ascii_strlower_n@plt+0xae54>
  40f5a8:	ldur	w8, [x29, #-92]
  40f5ac:	cmp	w8, #0x0
  40f5b0:	cset	w8, ge  // ge = tcont
  40f5b4:	tbnz	w8, #0, 40f640 <ascii_strlower_n@plt+0xb1e0>
  40f5b8:	mov	w8, #0x3                   	// #3
  40f5bc:	str	w8, [sp, #268]
  40f5c0:	ldur	w8, [x29, #-92]
  40f5c4:	str	w8, [sp, #264]
  40f5c8:	str	wzr, [sp, #260]
  40f5cc:	ldr	w0, [sp, #260]
  40f5d0:	bl	403a10 <log_get_max_level_realm@plt>
  40f5d4:	ldr	w8, [sp, #268]
  40f5d8:	and	w8, w8, #0x7
  40f5dc:	cmp	w0, w8
  40f5e0:	b.lt	40f610 <ascii_strlower_n@plt+0xb1b0>  // b.tstop
  40f5e4:	ldr	w8, [sp, #260]
  40f5e8:	ldr	w9, [sp, #268]
  40f5ec:	orr	w0, w9, w8, lsl #10
  40f5f0:	ldr	w1, [sp, #264]
  40f5f4:	ldr	x2, [sp, #200]
  40f5f8:	mov	w3, #0x1e8                 	// #488
  40f5fc:	ldr	x4, [sp, #192]
  40f600:	ldr	x5, [sp, #176]
  40f604:	bl	403a20 <log_internal_realm@plt>
  40f608:	str	w0, [sp, #60]
  40f60c:	b	40f624 <ascii_strlower_n@plt+0xb1c4>
  40f610:	ldr	w0, [sp, #264]
  40f614:	bl	403a30 <abs@plt>
  40f618:	mov	w8, wzr
  40f61c:	subs	w8, w8, w0, uxtb
  40f620:	str	w8, [sp, #60]
  40f624:	ldr	w8, [sp, #60]
  40f628:	str	w8, [sp, #256]
  40f62c:	ldr	w8, [sp, #256]
  40f630:	stur	w8, [x29, #-4]
  40f634:	mov	w8, #0x1                   	// #1
  40f638:	stur	w8, [x29, #-144]
  40f63c:	b	40f8ac <ascii_strlower_n@plt+0xb44c>
  40f640:	ldur	x0, [x29, #-48]
  40f644:	bl	403e80 <sd_bus_message_exit_container@plt>
  40f648:	stur	w0, [x29, #-92]
  40f64c:	ldur	w8, [x29, #-92]
  40f650:	cmp	w8, #0x0
  40f654:	cset	w8, ge  // ge = tcont
  40f658:	tbnz	w8, #0, 40f6e4 <ascii_strlower_n@plt+0xb284>
  40f65c:	mov	w8, #0x3                   	// #3
  40f660:	str	w8, [sp, #252]
  40f664:	ldur	w8, [x29, #-92]
  40f668:	str	w8, [sp, #248]
  40f66c:	str	wzr, [sp, #244]
  40f670:	ldr	w0, [sp, #244]
  40f674:	bl	403a10 <log_get_max_level_realm@plt>
  40f678:	ldr	w8, [sp, #252]
  40f67c:	and	w8, w8, #0x7
  40f680:	cmp	w0, w8
  40f684:	b.lt	40f6b4 <ascii_strlower_n@plt+0xb254>  // b.tstop
  40f688:	ldr	w8, [sp, #244]
  40f68c:	ldr	w9, [sp, #252]
  40f690:	orr	w0, w9, w8, lsl #10
  40f694:	ldr	w1, [sp, #248]
  40f698:	ldr	x2, [sp, #200]
  40f69c:	mov	w3, #0x1ec                 	// #492
  40f6a0:	ldr	x4, [sp, #192]
  40f6a4:	ldr	x5, [sp, #176]
  40f6a8:	bl	403a20 <log_internal_realm@plt>
  40f6ac:	str	w0, [sp, #56]
  40f6b0:	b	40f6c8 <ascii_strlower_n@plt+0xb268>
  40f6b4:	ldr	w0, [sp, #248]
  40f6b8:	bl	403a30 <abs@plt>
  40f6bc:	mov	w8, wzr
  40f6c0:	subs	w8, w8, w0, uxtb
  40f6c4:	str	w8, [sp, #56]
  40f6c8:	ldr	w8, [sp, #56]
  40f6cc:	str	w8, [sp, #240]
  40f6d0:	ldr	w8, [sp, #240]
  40f6d4:	stur	w8, [x29, #-4]
  40f6d8:	mov	w8, #0x1                   	// #1
  40f6dc:	stur	w8, [x29, #-144]
  40f6e0:	b	40f8ac <ascii_strlower_n@plt+0xb44c>
  40f6e4:	ldur	x0, [x29, #-48]
  40f6e8:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40f6ec:	add	x1, x1, #0x64
  40f6f0:	sub	x2, x29, #0x58
  40f6f4:	bl	403d00 <sd_bus_message_read@plt>
  40f6f8:	stur	w0, [x29, #-92]
  40f6fc:	ldur	w8, [x29, #-92]
  40f700:	cmp	w8, #0x0
  40f704:	cset	w8, ge  // ge = tcont
  40f708:	tbnz	w8, #0, 40f794 <ascii_strlower_n@plt+0xb334>
  40f70c:	mov	w8, #0x3                   	// #3
  40f710:	str	w8, [sp, #236]
  40f714:	ldur	w8, [x29, #-92]
  40f718:	str	w8, [sp, #232]
  40f71c:	str	wzr, [sp, #228]
  40f720:	ldr	w0, [sp, #228]
  40f724:	bl	403a10 <log_get_max_level_realm@plt>
  40f728:	ldr	w8, [sp, #236]
  40f72c:	and	w8, w8, #0x7
  40f730:	cmp	w0, w8
  40f734:	b.lt	40f764 <ascii_strlower_n@plt+0xb304>  // b.tstop
  40f738:	ldr	w8, [sp, #228]
  40f73c:	ldr	w9, [sp, #236]
  40f740:	orr	w0, w9, w8, lsl #10
  40f744:	ldr	w1, [sp, #232]
  40f748:	ldr	x2, [sp, #200]
  40f74c:	mov	w3, #0x1f0                 	// #496
  40f750:	ldr	x4, [sp, #192]
  40f754:	ldr	x5, [sp, #176]
  40f758:	bl	403a20 <log_internal_realm@plt>
  40f75c:	str	w0, [sp, #52]
  40f760:	b	40f778 <ascii_strlower_n@plt+0xb318>
  40f764:	ldr	w0, [sp, #232]
  40f768:	bl	403a30 <abs@plt>
  40f76c:	mov	w8, wzr
  40f770:	subs	w8, w8, w0, uxtb
  40f774:	str	w8, [sp, #52]
  40f778:	ldr	w8, [sp, #52]
  40f77c:	str	w8, [sp, #224]
  40f780:	ldr	w8, [sp, #224]
  40f784:	stur	w8, [x29, #-4]
  40f788:	mov	w8, #0x1                   	// #1
  40f78c:	stur	w8, [x29, #-144]
  40f790:	b	40f8ac <ascii_strlower_n@plt+0xb44c>
  40f794:	ldur	w8, [x29, #-76]
  40f798:	cbnz	w8, 40f834 <ascii_strlower_n@plt+0xb3d4>
  40f79c:	ldurb	w8, [x29, #-29]
  40f7a0:	tbnz	w8, #0, 40f7a8 <ascii_strlower_n@plt+0xb348>
  40f7a4:	b	40f820 <ascii_strlower_n@plt+0xb3c0>
  40f7a8:	mov	w8, #0x3                   	// #3
  40f7ac:	str	w8, [sp, #220]
  40f7b0:	str	wzr, [sp, #216]
  40f7b4:	str	wzr, [sp, #212]
  40f7b8:	ldr	w0, [sp, #212]
  40f7bc:	bl	403a10 <log_get_max_level_realm@plt>
  40f7c0:	ldr	w8, [sp, #220]
  40f7c4:	and	w8, w8, #0x7
  40f7c8:	cmp	w0, w8
  40f7cc:	b.lt	40f804 <ascii_strlower_n@plt+0xb3a4>  // b.tstop
  40f7d0:	ldr	w8, [sp, #212]
  40f7d4:	ldr	w9, [sp, #220]
  40f7d8:	orr	w0, w9, w8, lsl #10
  40f7dc:	ldr	w1, [sp, #216]
  40f7e0:	ldur	x6, [x29, #-24]
  40f7e4:	ldr	x2, [sp, #200]
  40f7e8:	mov	w3, #0x1f4                 	// #500
  40f7ec:	ldr	x4, [sp, #192]
  40f7f0:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40f7f4:	add	x5, x5, #0xa46
  40f7f8:	bl	403a20 <log_internal_realm@plt>
  40f7fc:	str	w0, [sp, #48]
  40f800:	b	40f818 <ascii_strlower_n@plt+0xb3b8>
  40f804:	ldr	w0, [sp, #216]
  40f808:	bl	403a30 <abs@plt>
  40f80c:	mov	w8, wzr
  40f810:	subs	w8, w8, w0, uxtb
  40f814:	str	w8, [sp, #48]
  40f818:	ldr	w8, [sp, #48]
  40f81c:	str	w8, [sp, #208]
  40f820:	mov	w8, #0xfffffffd            	// #-3
  40f824:	stur	w8, [x29, #-4]
  40f828:	mov	w8, #0x1                   	// #1
  40f82c:	stur	w8, [x29, #-144]
  40f830:	b	40f8ac <ascii_strlower_n@plt+0xb44c>
  40f834:	ldur	x0, [x29, #-88]
  40f838:	ldur	x1, [x29, #-104]
  40f83c:	bl	412074 <ascii_strlower_n@plt+0xdc14>
  40f840:	ldur	x8, [x29, #-88]
  40f844:	and	x8, x8, #0x200
  40f848:	cbnz	x8, 40f8a0 <ascii_strlower_n@plt+0xb440>
  40f84c:	ldurb	w8, [x29, #-105]
  40f850:	tbnz	w8, #0, 40f858 <ascii_strlower_n@plt+0xb3f8>
  40f854:	b	40f8a0 <ascii_strlower_n@plt+0xb440>
  40f858:	ldr	x8, [sp, #184]
  40f85c:	ldr	x0, [x8]
  40f860:	bl	403f50 <fflush@plt>
  40f864:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  40f868:	add	x8, x8, #0x1f0
  40f86c:	ldr	x8, [x8]
  40f870:	str	x8, [sp, #40]
  40f874:	bl	412220 <ascii_strlower_n@plt+0xddc0>
  40f878:	str	x0, [sp, #32]
  40f87c:	bl	40877c <ascii_strlower_n@plt+0x431c>
  40f880:	ldr	x8, [sp, #40]
  40f884:	str	x0, [sp, #24]
  40f888:	mov	x0, x8
  40f88c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40f890:	add	x1, x1, #0xa5b
  40f894:	ldr	x2, [sp, #32]
  40f898:	ldr	x3, [sp, #24]
  40f89c:	bl	403f60 <fprintf@plt>
  40f8a0:	stur	wzr, [x29, #-4]
  40f8a4:	mov	w8, #0x1                   	// #1
  40f8a8:	stur	w8, [x29, #-144]
  40f8ac:	sub	x0, x29, #0x48
  40f8b0:	bl	403d20 <sd_bus_error_free@plt>
  40f8b4:	sub	x0, x29, #0x30
  40f8b8:	bl	40d468 <ascii_strlower_n@plt+0x9008>
  40f8bc:	sub	x0, x29, #0x28
  40f8c0:	bl	40d468 <ascii_strlower_n@plt+0x9008>
  40f8c4:	ldur	w0, [x29, #-4]
  40f8c8:	add	sp, sp, #0x220
  40f8cc:	ldr	x28, [sp, #16]
  40f8d0:	ldp	x29, x30, [sp], #32
  40f8d4:	ret
  40f8d8:	sub	sp, sp, #0x30
  40f8dc:	stp	x29, x30, [sp, #32]
  40f8e0:	add	x29, sp, #0x20
  40f8e4:	str	x0, [sp, #16]
  40f8e8:	str	x1, [sp, #8]
  40f8ec:	ldr	x0, [sp, #8]
  40f8f0:	bl	403f70 <strlen@plt>
  40f8f4:	str	x0, [sp]
  40f8f8:	ldr	x0, [sp, #16]
  40f8fc:	ldr	x1, [sp, #8]
  40f900:	ldr	x2, [sp]
  40f904:	bl	403f80 <strncmp@plt>
  40f908:	cbnz	w0, 40f920 <ascii_strlower_n@plt+0xb4c0>
  40f90c:	ldr	x8, [sp, #16]
  40f910:	ldr	x9, [sp]
  40f914:	add	x8, x8, x9
  40f918:	stur	x8, [x29, #-8]
  40f91c:	b	40f928 <ascii_strlower_n@plt+0xb4c8>
  40f920:	mov	x8, xzr
  40f924:	stur	x8, [x29, #-8]
  40f928:	ldur	x0, [x29, #-8]
  40f92c:	ldp	x29, x30, [sp, #32]
  40f930:	add	sp, sp, #0x30
  40f934:	ret
  40f938:	stp	x29, x30, [sp, #-32]!
  40f93c:	str	x28, [sp, #16]
  40f940:	mov	x29, sp
  40f944:	sub	sp, sp, #0x150
  40f948:	mov	w8, #0x0                   	// #0
  40f94c:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  40f950:	add	x9, x9, #0x6f4
  40f954:	add	x9, x9, #0x3
  40f958:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40f95c:	add	x10, x10, #0xd4d
  40f960:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40f964:	add	x11, x11, #0xd08
  40f968:	stur	x0, [x29, #-16]
  40f96c:	stur	x1, [x29, #-24]
  40f970:	sturh	w8, [x29, #-26]
  40f974:	sturh	w8, [x29, #-28]
  40f978:	stur	x9, [x29, #-256]
  40f97c:	sub	x8, x29, #0x8
  40f980:	stur	x10, [x8, #-256]
  40f984:	sub	x8, x29, #0x10
  40f988:	stur	x11, [x8, #-256]
  40f98c:	ldur	x8, [x29, #-16]
  40f990:	cmp	x8, #0x0
  40f994:	cset	w9, ne  // ne = any
  40f998:	mov	w10, #0x1                   	// #1
  40f99c:	eor	w9, w9, #0x1
  40f9a0:	eor	w9, w9, w10
  40f9a4:	eor	w9, w9, w10
  40f9a8:	and	w9, w9, #0x1
  40f9ac:	mov	w0, w9
  40f9b0:	sxtw	x8, w0
  40f9b4:	cbz	x8, 40f9dc <ascii_strlower_n@plt+0xb57c>
  40f9b8:	mov	w8, wzr
  40f9bc:	mov	w0, w8
  40f9c0:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40f9c4:	add	x1, x1, #0xf8
  40f9c8:	ldur	x2, [x29, #-256]
  40f9cc:	mov	w3, #0x20e                 	// #526
  40f9d0:	sub	x8, x29, #0x10
  40f9d4:	ldur	x4, [x8, #-256]
  40f9d8:	bl	4039d0 <log_assert_failed_realm@plt>
  40f9dc:	ldur	x8, [x29, #-24]
  40f9e0:	cmp	x8, #0x0
  40f9e4:	cset	w9, ne  // ne = any
  40f9e8:	mov	w10, #0x1                   	// #1
  40f9ec:	eor	w9, w9, #0x1
  40f9f0:	eor	w9, w9, w10
  40f9f4:	eor	w9, w9, w10
  40f9f8:	and	w9, w9, #0x1
  40f9fc:	mov	w0, w9
  40fa00:	sxtw	x8, w0
  40fa04:	cbz	x8, 40fa2c <ascii_strlower_n@plt+0xb5cc>
  40fa08:	mov	w8, wzr
  40fa0c:	mov	w0, w8
  40fa10:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40fa14:	add	x1, x1, #0x923
  40fa18:	ldur	x2, [x29, #-256]
  40fa1c:	mov	w3, #0x20f                 	// #527
  40fa20:	sub	x8, x29, #0x10
  40fa24:	ldur	x4, [x8, #-256]
  40fa28:	bl	4039d0 <log_assert_failed_realm@plt>
  40fa2c:	ldur	x0, [x29, #-24]
  40fa30:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40fa34:	add	x1, x1, #0x91e
  40fa38:	bl	40f8d8 <ascii_strlower_n@plt+0xb478>
  40fa3c:	cmp	x0, #0x0
  40fa40:	cset	w8, ne  // ne = any
  40fa44:	mov	w9, #0x1                   	// #1
  40fa48:	eor	w8, w8, #0x1
  40fa4c:	eor	w8, w8, w9
  40fa50:	eor	w8, w8, w9
  40fa54:	and	w8, w8, #0x1
  40fa58:	mov	w0, w8
  40fa5c:	sxtw	x10, w0
  40fa60:	cbz	x10, 40fa88 <ascii_strlower_n@plt+0xb628>
  40fa64:	mov	w8, wzr
  40fa68:	mov	w0, w8
  40fa6c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40fa70:	add	x1, x1, #0xd34
  40fa74:	ldur	x2, [x29, #-256]
  40fa78:	mov	w3, #0x210                 	// #528
  40fa7c:	sub	x8, x29, #0x10
  40fa80:	ldur	x4, [x8, #-256]
  40fa84:	bl	4039d0 <log_assert_failed_realm@plt>
  40fa88:	ldur	x8, [x29, #-24]
  40fa8c:	add	x8, x8, #0x4
  40fa90:	stur	x8, [x29, #-40]
  40fa94:	ldur	x8, [x29, #-40]
  40fa98:	ldrb	w9, [x8]
  40fa9c:	cmp	w9, #0x2f
  40faa0:	b.ne	40fb7c <ascii_strlower_n@plt+0xb71c>  // b.any
  40faa4:	ldur	x8, [x29, #-40]
  40faa8:	ldrb	w9, [x8, #1]
  40faac:	cmp	w9, #0x2f
  40fab0:	b.eq	40fab8 <ascii_strlower_n@plt+0xb658>  // b.none
  40fab4:	b	4101a8 <ascii_strlower_n@plt+0xbd48>
  40fab8:	ldur	x8, [x29, #-40]
  40fabc:	add	x0, x8, #0x2
  40fac0:	mov	w1, #0x2f                  	// #47
  40fac4:	bl	403b00 <strchr@plt>
  40fac8:	stur	x0, [x29, #-72]
  40facc:	ldur	x8, [x29, #-72]
  40fad0:	cbnz	x8, 40fad8 <ascii_strlower_n@plt+0xb678>
  40fad4:	b	4101a8 <ascii_strlower_n@plt+0xbd48>
  40fad8:	ldur	x8, [x29, #-72]
  40fadc:	ldur	x9, [x29, #-40]
  40fae0:	add	x9, x9, #0x2
  40fae4:	cmp	x8, x9
  40fae8:	b.eq	40fb70 <ascii_strlower_n@plt+0xb710>  // b.none
  40faec:	mov	w8, #0x4                   	// #4
  40faf0:	stur	w8, [x29, #-76]
  40faf4:	stur	wzr, [x29, #-80]
  40faf8:	stur	wzr, [x29, #-84]
  40fafc:	ldur	w0, [x29, #-84]
  40fb00:	bl	403a10 <log_get_max_level_realm@plt>
  40fb04:	ldur	w8, [x29, #-76]
  40fb08:	and	w8, w8, #0x7
  40fb0c:	cmp	w0, w8
  40fb10:	b.lt	40fb4c <ascii_strlower_n@plt+0xb6ec>  // b.tstop
  40fb14:	ldur	w8, [x29, #-84]
  40fb18:	ldur	w9, [x29, #-76]
  40fb1c:	orr	w0, w9, w8, lsl #10
  40fb20:	ldur	w1, [x29, #-80]
  40fb24:	ldur	x2, [x29, #-256]
  40fb28:	mov	w3, #0x221                 	// #545
  40fb2c:	sub	x8, x29, #0x8
  40fb30:	ldur	x4, [x8, #-256]
  40fb34:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40fb38:	add	x5, x5, #0xd5d
  40fb3c:	bl	403a20 <log_internal_realm@plt>
  40fb40:	sub	x8, x29, #0x14
  40fb44:	stur	w0, [x8, #-256]
  40fb48:	b	40fb64 <ascii_strlower_n@plt+0xb704>
  40fb4c:	ldur	w0, [x29, #-80]
  40fb50:	bl	403a30 <abs@plt>
  40fb54:	mov	w8, wzr
  40fb58:	subs	w8, w8, w0, uxtb
  40fb5c:	sub	x9, x29, #0x14
  40fb60:	stur	w8, [x9, #-256]
  40fb64:	sub	x8, x29, #0x14
  40fb68:	ldur	w8, [x8, #-256]
  40fb6c:	stur	w8, [x29, #-88]
  40fb70:	ldur	x8, [x29, #-72]
  40fb74:	add	x8, x8, #0x1
  40fb78:	stur	x8, [x29, #-40]
  40fb7c:	ldur	x0, [x29, #-40]
  40fb80:	mov	w1, #0x3f                  	// #63
  40fb84:	bl	403b00 <strchr@plt>
  40fb88:	stur	x0, [x29, #-48]
  40fb8c:	ldur	x8, [x29, #-48]
  40fb90:	cbz	x8, 4100e4 <ascii_strlower_n@plt+0xbc84>
  40fb94:	ldur	x8, [x29, #-40]
  40fb98:	stur	x8, [x29, #-96]
  40fb9c:	ldur	x0, [x29, #-96]
  40fba0:	ldur	x8, [x29, #-48]
  40fba4:	ldur	x9, [x29, #-40]
  40fba8:	subs	x1, x8, x9
  40fbac:	bl	403f90 <strnlen@plt>
  40fbb0:	stur	x0, [x29, #-104]
  40fbb4:	ldur	x8, [x29, #-104]
  40fbb8:	mov	x9, #0x1                   	// #1
  40fbbc:	add	x8, x8, #0x1
  40fbc0:	mul	x8, x8, x9
  40fbc4:	add	x8, x8, #0xf
  40fbc8:	and	x8, x8, #0xfffffffffffffff0
  40fbcc:	mov	x9, sp
  40fbd0:	subs	x8, x9, x8
  40fbd4:	mov	sp, x8
  40fbd8:	stur	x8, [x29, #-112]
  40fbdc:	ldur	x8, [x29, #-112]
  40fbe0:	ldur	x9, [x29, #-104]
  40fbe4:	add	x8, x8, x9
  40fbe8:	mov	w10, #0x0                   	// #0
  40fbec:	strb	w10, [x8]
  40fbf0:	ldur	x8, [x29, #-112]
  40fbf4:	ldur	x1, [x29, #-96]
  40fbf8:	ldur	x2, [x29, #-104]
  40fbfc:	mov	x0, x8
  40fc00:	sub	x9, x29, #0x20
  40fc04:	stur	x8, [x9, #-256]
  40fc08:	bl	403fa0 <memcpy@plt>
  40fc0c:	sub	x8, x29, #0x20
  40fc10:	ldur	x8, [x8, #-256]
  40fc14:	stur	x8, [x29, #-120]
  40fc18:	ldur	x9, [x29, #-120]
  40fc1c:	stur	x9, [x29, #-56]
  40fc20:	ldur	x9, [x29, #-48]
  40fc24:	add	x9, x9, #0x1
  40fc28:	stur	x9, [x29, #-48]
  40fc2c:	ldur	x0, [x29, #-48]
  40fc30:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40fc34:	add	x1, x1, #0xda6
  40fc38:	bl	412458 <ascii_strlower_n@plt+0xdff8>
  40fc3c:	stur	x0, [x29, #-128]
  40fc40:	ldur	x8, [x29, #-128]
  40fc44:	cbz	x8, 40fe84 <ascii_strlower_n@plt+0xba24>
  40fc48:	mov	x8, xzr
  40fc4c:	stur	x8, [x29, #-136]
  40fc50:	ldurh	w9, [x29, #-28]
  40fc54:	cbz	w9, 40fcf8 <ascii_strlower_n@plt+0xb898>
  40fc58:	mov	w8, #0x3                   	// #3
  40fc5c:	stur	w8, [x29, #-148]
  40fc60:	mov	w8, #0x16                  	// #22
  40fc64:	movk	w8, #0x4000, lsl #16
  40fc68:	stur	w8, [x29, #-152]
  40fc6c:	stur	wzr, [x29, #-156]
  40fc70:	ldur	w0, [x29, #-156]
  40fc74:	bl	403a10 <log_get_max_level_realm@plt>
  40fc78:	ldur	w8, [x29, #-148]
  40fc7c:	and	w8, w8, #0x7
  40fc80:	cmp	w0, w8
  40fc84:	b.lt	40fcc0 <ascii_strlower_n@plt+0xb860>  // b.tstop
  40fc88:	ldur	w8, [x29, #-156]
  40fc8c:	ldur	w9, [x29, #-148]
  40fc90:	orr	w0, w9, w8, lsl #10
  40fc94:	ldur	w1, [x29, #-152]
  40fc98:	ldur	x2, [x29, #-256]
  40fc9c:	mov	w3, #0x235                 	// #565
  40fca0:	sub	x8, x29, #0x8
  40fca4:	ldur	x4, [x8, #-256]
  40fca8:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40fcac:	add	x5, x5, #0xdad
  40fcb0:	bl	403a20 <log_internal_realm@plt>
  40fcb4:	sub	x8, x29, #0x24
  40fcb8:	stur	w0, [x8, #-256]
  40fcbc:	b	40fcd8 <ascii_strlower_n@plt+0xb878>
  40fcc0:	ldur	w0, [x29, #-152]
  40fcc4:	bl	403a30 <abs@plt>
  40fcc8:	mov	w8, wzr
  40fccc:	subs	w8, w8, w0, uxtb
  40fcd0:	sub	x9, x29, #0x24
  40fcd4:	stur	w8, [x9, #-256]
  40fcd8:	sub	x8, x29, #0x24
  40fcdc:	ldur	w8, [x8, #-256]
  40fce0:	stur	w8, [x29, #-160]
  40fce4:	ldur	w8, [x29, #-160]
  40fce8:	stur	w8, [x29, #-4]
  40fcec:	mov	w8, #0x1                   	// #1
  40fcf0:	stur	w8, [x29, #-164]
  40fcf4:	b	40fe4c <ascii_strlower_n@plt+0xb9ec>
  40fcf8:	ldur	x0, [x29, #-128]
  40fcfc:	mov	w1, #0x3b                  	// #59
  40fd00:	bl	403fb0 <strchrnul@plt>
  40fd04:	stur	x0, [x29, #-144]
  40fd08:	ldur	x0, [x29, #-128]
  40fd0c:	ldur	x8, [x29, #-144]
  40fd10:	ldur	x9, [x29, #-128]
  40fd14:	subs	x1, x8, x9
  40fd18:	bl	403b10 <strndup@plt>
  40fd1c:	stur	x0, [x29, #-136]
  40fd20:	ldur	x8, [x29, #-136]
  40fd24:	cbnz	x8, 40fd54 <ascii_strlower_n@plt+0xb8f4>
  40fd28:	mov	w8, wzr
  40fd2c:	mov	w0, w8
  40fd30:	ldur	x1, [x29, #-256]
  40fd34:	mov	w2, #0x23a                 	// #570
  40fd38:	sub	x8, x29, #0x8
  40fd3c:	ldur	x3, [x8, #-256]
  40fd40:	bl	403a90 <log_oom_internal@plt>
  40fd44:	stur	w0, [x29, #-4]
  40fd48:	mov	w8, #0x1                   	// #1
  40fd4c:	stur	w8, [x29, #-164]
  40fd50:	b	40fe4c <ascii_strlower_n@plt+0xb9ec>
  40fd54:	ldur	x0, [x29, #-136]
  40fd58:	bl	42c150 <ascii_strlower_n@plt+0x27cf0>
  40fd5c:	stur	w0, [x29, #-60]
  40fd60:	ldur	w8, [x29, #-60]
  40fd64:	cmp	w8, #0x0
  40fd68:	cset	w8, ge  // ge = tcont
  40fd6c:	tbnz	w8, #0, 40fe14 <ascii_strlower_n@plt+0xb9b4>
  40fd70:	mov	w8, #0x3                   	// #3
  40fd74:	stur	w8, [x29, #-168]
  40fd78:	mov	w8, #0x16                  	// #22
  40fd7c:	movk	w8, #0x4000, lsl #16
  40fd80:	stur	w8, [x29, #-172]
  40fd84:	stur	wzr, [x29, #-176]
  40fd88:	ldur	w0, [x29, #-176]
  40fd8c:	bl	403a10 <log_get_max_level_realm@plt>
  40fd90:	ldur	w8, [x29, #-168]
  40fd94:	and	w8, w8, #0x7
  40fd98:	cmp	w0, w8
  40fd9c:	b.lt	40fddc <ascii_strlower_n@plt+0xb97c>  // b.tstop
  40fda0:	ldur	w8, [x29, #-176]
  40fda4:	ldur	w9, [x29, #-168]
  40fda8:	orr	w0, w9, w8, lsl #10
  40fdac:	ldur	w1, [x29, #-172]
  40fdb0:	ldur	x6, [x29, #-136]
  40fdb4:	ldur	x2, [x29, #-256]
  40fdb8:	mov	w3, #0x23f                 	// #575
  40fdbc:	sub	x8, x29, #0x8
  40fdc0:	ldur	x4, [x8, #-256]
  40fdc4:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40fdc8:	add	x5, x5, #0xdc8
  40fdcc:	bl	403a20 <log_internal_realm@plt>
  40fdd0:	sub	x8, x29, #0x28
  40fdd4:	stur	w0, [x8, #-256]
  40fdd8:	b	40fdf4 <ascii_strlower_n@plt+0xb994>
  40fddc:	ldur	w0, [x29, #-172]
  40fde0:	bl	403a30 <abs@plt>
  40fde4:	mov	w8, wzr
  40fde8:	subs	w8, w8, w0, uxtb
  40fdec:	sub	x9, x29, #0x28
  40fdf0:	stur	w8, [x9, #-256]
  40fdf4:	sub	x8, x29, #0x28
  40fdf8:	ldur	w8, [x8, #-256]
  40fdfc:	stur	w8, [x29, #-180]
  40fe00:	ldur	w8, [x29, #-180]
  40fe04:	stur	w8, [x29, #-4]
  40fe08:	mov	w8, #0x1                   	// #1
  40fe0c:	stur	w8, [x29, #-164]
  40fe10:	b	40fe4c <ascii_strlower_n@plt+0xb9ec>
  40fe14:	ldur	w8, [x29, #-60]
  40fe18:	sturh	w8, [x29, #-28]
  40fe1c:	ldur	x9, [x29, #-144]
  40fe20:	ldrb	w8, [x9]
  40fe24:	cmp	w8, #0x3b
  40fe28:	b.ne	40fe44 <ascii_strlower_n@plt+0xb9e4>  // b.any
  40fe2c:	ldur	x8, [x29, #-144]
  40fe30:	add	x8, x8, #0x1
  40fe34:	stur	x8, [x29, #-48]
  40fe38:	mov	w9, #0xa                   	// #10
  40fe3c:	stur	w9, [x29, #-164]
  40fe40:	b	40fe4c <ascii_strlower_n@plt+0xb9ec>
  40fe44:	mov	w8, #0x9                   	// #9
  40fe48:	stur	w8, [x29, #-164]
  40fe4c:	sub	x0, x29, #0x88
  40fe50:	bl	405970 <ascii_strlower_n@plt+0x1510>
  40fe54:	ldur	w8, [x29, #-164]
  40fe58:	cmp	w8, #0x1
  40fe5c:	sub	x9, x29, #0x2c
  40fe60:	stur	w8, [x9, #-256]
  40fe64:	b.eq	410240 <ascii_strlower_n@plt+0xbde0>  // b.none
  40fe68:	b	40fe6c <ascii_strlower_n@plt+0xba0c>
  40fe6c:	sub	x8, x29, #0x2c
  40fe70:	ldur	w8, [x8, #-256]
  40fe74:	cmp	w8, #0x9
  40fe78:	b.eq	4100e0 <ascii_strlower_n@plt+0xbc80>  // b.none
  40fe7c:	b	40fe80 <ascii_strlower_n@plt+0xba20>
  40fe80:	b	40fc2c <ascii_strlower_n@plt+0xb7cc>
  40fe84:	ldur	x0, [x29, #-48]
  40fe88:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40fe8c:	add	x1, x1, #0xdde
  40fe90:	bl	412458 <ascii_strlower_n@plt+0xdff8>
  40fe94:	stur	x0, [x29, #-128]
  40fe98:	ldur	x8, [x29, #-128]
  40fe9c:	cbz	x8, 4100dc <ascii_strlower_n@plt+0xbc7c>
  40fea0:	mov	x8, xzr
  40fea4:	stur	x8, [x29, #-192]
  40fea8:	ldurh	w9, [x29, #-26]
  40feac:	cbz	w9, 40ff50 <ascii_strlower_n@plt+0xbaf0>
  40feb0:	mov	w8, #0x3                   	// #3
  40feb4:	stur	w8, [x29, #-204]
  40feb8:	mov	w8, #0x16                  	// #22
  40febc:	movk	w8, #0x4000, lsl #16
  40fec0:	stur	w8, [x29, #-208]
  40fec4:	stur	wzr, [x29, #-212]
  40fec8:	ldur	w0, [x29, #-212]
  40fecc:	bl	403a10 <log_get_max_level_realm@plt>
  40fed0:	ldur	w8, [x29, #-204]
  40fed4:	and	w8, w8, #0x7
  40fed8:	cmp	w0, w8
  40fedc:	b.lt	40ff18 <ascii_strlower_n@plt+0xbab8>  // b.tstop
  40fee0:	ldur	w8, [x29, #-212]
  40fee4:	ldur	w9, [x29, #-204]
  40fee8:	orr	w0, w9, w8, lsl #10
  40feec:	ldur	w1, [x29, #-208]
  40fef0:	ldur	x2, [x29, #-256]
  40fef4:	mov	w3, #0x252                 	// #594
  40fef8:	sub	x8, x29, #0x8
  40fefc:	ldur	x4, [x8, #-256]
  40ff00:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  40ff04:	add	x5, x5, #0xde4
  40ff08:	bl	403a20 <log_internal_realm@plt>
  40ff0c:	sub	x8, x29, #0x30
  40ff10:	stur	w0, [x8, #-256]
  40ff14:	b	40ff30 <ascii_strlower_n@plt+0xbad0>
  40ff18:	ldur	w0, [x29, #-208]
  40ff1c:	bl	403a30 <abs@plt>
  40ff20:	mov	w8, wzr
  40ff24:	subs	w8, w8, w0, uxtb
  40ff28:	sub	x9, x29, #0x30
  40ff2c:	stur	w8, [x9, #-256]
  40ff30:	sub	x8, x29, #0x30
  40ff34:	ldur	w8, [x8, #-256]
  40ff38:	stur	w8, [x29, #-216]
  40ff3c:	ldur	w8, [x29, #-216]
  40ff40:	stur	w8, [x29, #-4]
  40ff44:	mov	w8, #0x1                   	// #1
  40ff48:	stur	w8, [x29, #-164]
  40ff4c:	b	4100a4 <ascii_strlower_n@plt+0xbc44>
  40ff50:	ldur	x0, [x29, #-128]
  40ff54:	mov	w1, #0x3b                  	// #59
  40ff58:	bl	403fb0 <strchrnul@plt>
  40ff5c:	stur	x0, [x29, #-200]
  40ff60:	ldur	x0, [x29, #-128]
  40ff64:	ldur	x8, [x29, #-200]
  40ff68:	ldur	x9, [x29, #-128]
  40ff6c:	subs	x1, x8, x9
  40ff70:	bl	403b10 <strndup@plt>
  40ff74:	stur	x0, [x29, #-192]
  40ff78:	ldur	x8, [x29, #-192]
  40ff7c:	cbnz	x8, 40ffac <ascii_strlower_n@plt+0xbb4c>
  40ff80:	mov	w8, wzr
  40ff84:	mov	w0, w8
  40ff88:	ldur	x1, [x29, #-256]
  40ff8c:	mov	w2, #0x257                 	// #599
  40ff90:	sub	x8, x29, #0x8
  40ff94:	ldur	x3, [x8, #-256]
  40ff98:	bl	403a90 <log_oom_internal@plt>
  40ff9c:	stur	w0, [x29, #-4]
  40ffa0:	mov	w8, #0x1                   	// #1
  40ffa4:	stur	w8, [x29, #-164]
  40ffa8:	b	4100a4 <ascii_strlower_n@plt+0xbc44>
  40ffac:	ldur	x0, [x29, #-192]
  40ffb0:	bl	42b7bc <ascii_strlower_n@plt+0x2735c>
  40ffb4:	stur	w0, [x29, #-60]
  40ffb8:	ldur	w8, [x29, #-60]
  40ffbc:	cmp	w8, #0x0
  40ffc0:	cset	w8, ge  // ge = tcont
  40ffc4:	tbnz	w8, #0, 41006c <ascii_strlower_n@plt+0xbc0c>
  40ffc8:	mov	w8, #0x3                   	// #3
  40ffcc:	stur	w8, [x29, #-220]
  40ffd0:	mov	w8, #0x16                  	// #22
  40ffd4:	movk	w8, #0x4000, lsl #16
  40ffd8:	stur	w8, [x29, #-224]
  40ffdc:	stur	wzr, [x29, #-228]
  40ffe0:	ldur	w0, [x29, #-228]
  40ffe4:	bl	403a10 <log_get_max_level_realm@plt>
  40ffe8:	ldur	w8, [x29, #-220]
  40ffec:	and	w8, w8, #0x7
  40fff0:	cmp	w0, w8
  40fff4:	b.lt	410034 <ascii_strlower_n@plt+0xbbd4>  // b.tstop
  40fff8:	ldur	w8, [x29, #-228]
  40fffc:	ldur	w9, [x29, #-220]
  410000:	orr	w0, w9, w8, lsl #10
  410004:	ldur	w1, [x29, #-224]
  410008:	ldur	x6, [x29, #-192]
  41000c:	ldur	x2, [x29, #-256]
  410010:	mov	w3, #0x25c                 	// #604
  410014:	sub	x8, x29, #0x8
  410018:	ldur	x4, [x8, #-256]
  41001c:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410020:	add	x5, x5, #0xdfe
  410024:	bl	403a20 <log_internal_realm@plt>
  410028:	sub	x8, x29, #0x34
  41002c:	stur	w0, [x8, #-256]
  410030:	b	41004c <ascii_strlower_n@plt+0xbbec>
  410034:	ldur	w0, [x29, #-224]
  410038:	bl	403a30 <abs@plt>
  41003c:	mov	w8, wzr
  410040:	subs	w8, w8, w0, uxtb
  410044:	sub	x9, x29, #0x34
  410048:	stur	w8, [x9, #-256]
  41004c:	sub	x8, x29, #0x34
  410050:	ldur	w8, [x8, #-256]
  410054:	stur	w8, [x29, #-232]
  410058:	ldur	w8, [x29, #-232]
  41005c:	stur	w8, [x29, #-4]
  410060:	mov	w8, #0x1                   	// #1
  410064:	stur	w8, [x29, #-164]
  410068:	b	4100a4 <ascii_strlower_n@plt+0xbc44>
  41006c:	ldur	w8, [x29, #-60]
  410070:	sturh	w8, [x29, #-26]
  410074:	ldur	x9, [x29, #-200]
  410078:	ldrb	w8, [x9]
  41007c:	cmp	w8, #0x3b
  410080:	b.ne	41009c <ascii_strlower_n@plt+0xbc3c>  // b.any
  410084:	ldur	x8, [x29, #-200]
  410088:	add	x8, x8, #0x1
  41008c:	stur	x8, [x29, #-48]
  410090:	mov	w9, #0xa                   	// #10
  410094:	stur	w9, [x29, #-164]
  410098:	b	4100a4 <ascii_strlower_n@plt+0xbc44>
  41009c:	mov	w8, #0x9                   	// #9
  4100a0:	stur	w8, [x29, #-164]
  4100a4:	sub	x0, x29, #0xc0
  4100a8:	bl	405970 <ascii_strlower_n@plt+0x1510>
  4100ac:	ldur	w8, [x29, #-164]
  4100b0:	cmp	w8, #0x1
  4100b4:	sub	x9, x29, #0x38
  4100b8:	stur	w8, [x9, #-256]
  4100bc:	b.eq	410240 <ascii_strlower_n@plt+0xbde0>  // b.none
  4100c0:	b	4100c4 <ascii_strlower_n@plt+0xbc64>
  4100c4:	sub	x8, x29, #0x38
  4100c8:	ldur	w8, [x8, #-256]
  4100cc:	cmp	w8, #0x9
  4100d0:	b.eq	4100e0 <ascii_strlower_n@plt+0xbc80>  // b.none
  4100d4:	b	4100d8 <ascii_strlower_n@plt+0xbc78>
  4100d8:	b	40fc2c <ascii_strlower_n@plt+0xb7cc>
  4100dc:	b	4101a8 <ascii_strlower_n@plt+0xbd48>
  4100e0:	b	4100ec <ascii_strlower_n@plt+0xbc8c>
  4100e4:	ldur	x8, [x29, #-40]
  4100e8:	stur	x8, [x29, #-56]
  4100ec:	ldurh	w8, [x29, #-28]
  4100f0:	cbnz	w8, 410138 <ascii_strlower_n@plt+0xbcd8>
  4100f4:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  4100f8:	add	x8, x8, #0x17a
  4100fc:	ldrh	w9, [x8]
  410100:	sub	x8, x29, #0x3c
  410104:	stur	w9, [x8, #-256]
  410108:	cbz	w9, 410120 <ascii_strlower_n@plt+0xbcc0>
  41010c:	sub	x8, x29, #0x3c
  410110:	ldur	w8, [x8, #-256]
  410114:	sub	x9, x29, #0x40
  410118:	stur	w8, [x9, #-256]
  41011c:	b	41012c <ascii_strlower_n@plt+0xbccc>
  410120:	mov	w8, #0x1                   	// #1
  410124:	sub	x9, x29, #0x40
  410128:	stur	w8, [x9, #-256]
  41012c:	sub	x8, x29, #0x40
  410130:	ldur	w8, [x8, #-256]
  410134:	sturh	w8, [x29, #-28]
  410138:	ldurh	w8, [x29, #-26]
  41013c:	cbnz	w8, 410184 <ascii_strlower_n@plt+0xbd24>
  410140:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  410144:	add	x8, x8, #0x178
  410148:	ldrh	w9, [x8]
  41014c:	sub	x8, x29, #0x44
  410150:	stur	w9, [x8, #-256]
  410154:	cbz	w9, 41016c <ascii_strlower_n@plt+0xbd0c>
  410158:	sub	x8, x29, #0x44
  41015c:	ldur	w8, [x8, #-256]
  410160:	sub	x9, x29, #0x48
  410164:	stur	w8, [x9, #-256]
  410168:	b	410178 <ascii_strlower_n@plt+0xbd18>
  41016c:	mov	w8, #0x1                   	// #1
  410170:	sub	x9, x29, #0x48
  410174:	stur	w8, [x9, #-256]
  410178:	sub	x8, x29, #0x48
  41017c:	ldur	w8, [x8, #-256]
  410180:	sturh	w8, [x29, #-26]
  410184:	ldur	x0, [x29, #-16]
  410188:	ldur	x1, [x29, #-56]
  41018c:	ldurh	w2, [x29, #-28]
  410190:	ldurh	w3, [x29, #-26]
  410194:	mov	w8, #0x1                   	// #1
  410198:	and	w4, w8, #0x1
  41019c:	bl	40ed5c <ascii_strlower_n@plt+0xa8fc>
  4101a0:	stur	w0, [x29, #-4]
  4101a4:	b	410240 <ascii_strlower_n@plt+0xbde0>
  4101a8:	mov	w8, #0x3                   	// #3
  4101ac:	stur	w8, [x29, #-236]
  4101b0:	mov	w8, #0x16                  	// #22
  4101b4:	movk	w8, #0x4000, lsl #16
  4101b8:	stur	w8, [x29, #-240]
  4101bc:	stur	wzr, [x29, #-244]
  4101c0:	ldur	w0, [x29, #-244]
  4101c4:	bl	403a10 <log_get_max_level_realm@plt>
  4101c8:	ldur	w8, [x29, #-236]
  4101cc:	and	w8, w8, #0x7
  4101d0:	cmp	w0, w8
  4101d4:	b.lt	410214 <ascii_strlower_n@plt+0xbdb4>  // b.tstop
  4101d8:	ldur	w8, [x29, #-244]
  4101dc:	ldur	w9, [x29, #-236]
  4101e0:	orr	w0, w9, w8, lsl #10
  4101e4:	ldur	w1, [x29, #-240]
  4101e8:	ldur	x6, [x29, #-24]
  4101ec:	ldur	x2, [x29, #-256]
  4101f0:	mov	w3, #0x276                 	// #630
  4101f4:	sub	x8, x29, #0x8
  4101f8:	ldur	x4, [x8, #-256]
  4101fc:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410200:	add	x5, x5, #0xe13
  410204:	bl	403a20 <log_internal_realm@plt>
  410208:	sub	x8, x29, #0x4c
  41020c:	stur	w0, [x8, #-256]
  410210:	b	41022c <ascii_strlower_n@plt+0xbdcc>
  410214:	ldur	w0, [x29, #-240]
  410218:	bl	403a30 <abs@plt>
  41021c:	mov	w8, wzr
  410220:	subs	w8, w8, w0, uxtb
  410224:	sub	x9, x29, #0x4c
  410228:	stur	w8, [x9, #-256]
  41022c:	sub	x8, x29, #0x4c
  410230:	ldur	w8, [x8, #-256]
  410234:	stur	w8, [x29, #-248]
  410238:	ldur	w8, [x29, #-248]
  41023c:	stur	w8, [x29, #-4]
  410240:	ldur	w0, [x29, #-4]
  410244:	mov	sp, x29
  410248:	ldr	x28, [sp, #16]
  41024c:	ldp	x29, x30, [sp], #32
  410250:	ret
  410254:	stp	x29, x30, [sp, #-32]!
  410258:	str	x28, [sp, #16]
  41025c:	mov	x29, sp
  410260:	sub	sp, sp, #0x210
  410264:	sub	x8, x29, #0x70
  410268:	mov	x9, xzr
  41026c:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  410270:	add	x10, x10, #0x6f4
  410274:	add	x10, x10, #0x3
  410278:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41027c:	add	x11, x11, #0xe74
  410280:	adrp	x12, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410284:	add	x12, x12, #0xa1c
  410288:	adrp	x13, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41028c:	add	x13, x13, #0x9d1
  410290:	adrp	x14, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410294:	add	x14, x14, #0xe27
  410298:	str	x0, [x8, #96]
  41029c:	stur	w1, [x29, #-20]
  4102a0:	str	x2, [x8, #80]
  4102a4:	stur	w3, [x29, #-36]
  4102a8:	str	x9, [x8, #64]
  4102ac:	str	x9, [x8, #56]
  4102b0:	str	xzr, [x8, #32]
  4102b4:	str	xzr, [x8, #40]
  4102b8:	str	xzr, [x8, #48]
  4102bc:	str	x9, [x8, #24]
  4102c0:	stur	wzr, [x29, #-100]
  4102c4:	str	x8, [sp, #200]
  4102c8:	str	x10, [sp, #192]
  4102cc:	str	x11, [sp, #184]
  4102d0:	str	x12, [sp, #176]
  4102d4:	str	x13, [sp, #168]
  4102d8:	str	x14, [sp, #160]
  4102dc:	ldr	x8, [sp, #200]
  4102e0:	ldr	x9, [x8, #96]
  4102e4:	cmp	x9, #0x0
  4102e8:	cset	w10, ne  // ne = any
  4102ec:	mov	w11, #0x1                   	// #1
  4102f0:	eor	w10, w10, #0x1
  4102f4:	eor	w10, w10, w11
  4102f8:	eor	w10, w10, w11
  4102fc:	and	w10, w10, #0x1
  410300:	mov	w0, w10
  410304:	sxtw	x9, w0
  410308:	cbz	x9, 41032c <ascii_strlower_n@plt+0xbecc>
  41030c:	mov	w8, wzr
  410310:	mov	w0, w8
  410314:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410318:	add	x1, x1, #0xf8
  41031c:	ldr	x2, [sp, #192]
  410320:	mov	w3, #0x112                 	// #274
  410324:	ldr	x4, [sp, #160]
  410328:	bl	4039d0 <log_assert_failed_realm@plt>
  41032c:	mov	w8, #0x0                   	// #0
  410330:	sturb	w8, [x29, #-117]
  410334:	ldur	w8, [x29, #-20]
  410338:	cmp	w8, #0x2
  41033c:	str	w8, [sp, #156]
  410340:	b.eq	410360 <ascii_strlower_n@plt+0xbf00>  // b.none
  410344:	b	410348 <ascii_strlower_n@plt+0xbee8>
  410348:	ldr	w8, [sp, #156]
  41034c:	cmp	w8, #0xa
  410350:	cset	w9, eq  // eq = none
  410354:	eor	w9, w9, #0x1
  410358:	tbnz	w9, #0, 41036c <ascii_strlower_n@plt+0xbf0c>
  41035c:	b	410360 <ascii_strlower_n@plt+0xbf00>
  410360:	mov	w8, #0x1                   	// #1
  410364:	sturb	w8, [x29, #-117]
  410368:	b	41036c <ascii_strlower_n@plt+0xbf0c>
  41036c:	ldurb	w8, [x29, #-117]
  410370:	mov	w9, #0x1                   	// #1
  410374:	and	w8, w8, w9
  410378:	sturb	w8, [x29, #-118]
  41037c:	ldurb	w8, [x29, #-118]
  410380:	eor	w8, w8, #0x1
  410384:	eor	w8, w8, w9
  410388:	eor	w8, w8, w9
  41038c:	and	w8, w8, #0x1
  410390:	mov	w0, w8
  410394:	sxtw	x10, w0
  410398:	cbz	x10, 4103bc <ascii_strlower_n@plt+0xbf5c>
  41039c:	mov	w8, wzr
  4103a0:	mov	w0, w8
  4103a4:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4103a8:	add	x1, x1, #0x492
  4103ac:	ldr	x2, [sp, #192]
  4103b0:	mov	w3, #0x113                 	// #275
  4103b4:	ldr	x4, [sp, #160]
  4103b8:	bl	4039d0 <log_assert_failed_realm@plt>
  4103bc:	ldr	x8, [sp, #200]
  4103c0:	ldr	x9, [x8, #80]
  4103c4:	cmp	x9, #0x0
  4103c8:	cset	w10, ne  // ne = any
  4103cc:	mov	w11, #0x1                   	// #1
  4103d0:	eor	w10, w10, #0x1
  4103d4:	eor	w10, w10, w11
  4103d8:	eor	w10, w10, w11
  4103dc:	and	w10, w10, #0x1
  4103e0:	mov	w0, w10
  4103e4:	sxtw	x9, w0
  4103e8:	cbz	x9, 41040c <ascii_strlower_n@plt+0xbfac>
  4103ec:	mov	w8, wzr
  4103f0:	mov	w0, w8
  4103f4:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4103f8:	add	x1, x1, #0xe6c
  4103fc:	ldr	x2, [sp, #192]
  410400:	mov	w3, #0x114                 	// #276
  410404:	ldr	x4, [sp, #160]
  410408:	bl	4039d0 <log_assert_failed_realm@plt>
  41040c:	ldur	w8, [x29, #-36]
  410410:	cmp	w8, #0x0
  410414:	cset	w8, gt
  410418:	tbnz	w8, #0, 41042c <ascii_strlower_n@plt+0xbfcc>
  41041c:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  410420:	add	x8, x8, #0x170
  410424:	ldr	w9, [x8]
  410428:	stur	w9, [x29, #-36]
  41042c:	ldur	w0, [x29, #-20]
  410430:	ldr	x8, [sp, #200]
  410434:	ldr	x1, [x8, #80]
  410438:	ldur	w2, [x29, #-36]
  41043c:	sub	x3, x29, #0x58
  410440:	bl	403fc0 <in_addr_ifindex_to_string@plt>
  410444:	stur	w0, [x29, #-116]
  410448:	ldur	w9, [x29, #-116]
  41044c:	cmp	w9, #0x0
  410450:	cset	w9, ge  // ge = tcont
  410454:	tbnz	w9, #0, 410480 <ascii_strlower_n@plt+0xc020>
  410458:	mov	w8, wzr
  41045c:	mov	w0, w8
  410460:	ldr	x1, [sp, #192]
  410464:	mov	w2, #0x11b                 	// #283
  410468:	ldr	x3, [sp, #184]
  41046c:	bl	403a90 <log_oom_internal@plt>
  410470:	stur	w0, [x29, #-4]
  410474:	mov	w8, #0x1                   	// #1
  410478:	stur	w8, [x29, #-124]
  41047c:	b	410e00 <ascii_strlower_n@plt+0xc9a0>
  410480:	mov	w8, #0x7                   	// #7
  410484:	stur	w8, [x29, #-128]
  410488:	stur	wzr, [x29, #-132]
  41048c:	stur	wzr, [x29, #-136]
  410490:	ldur	w0, [x29, #-136]
  410494:	bl	403a10 <log_get_max_level_realm@plt>
  410498:	ldur	w8, [x29, #-128]
  41049c:	and	w8, w8, #0x7
  4104a0:	cmp	w0, w8
  4104a4:	b.lt	4104e0 <ascii_strlower_n@plt+0xc080>  // b.tstop
  4104a8:	ldur	w8, [x29, #-136]
  4104ac:	ldur	w9, [x29, #-128]
  4104b0:	orr	w0, w9, w8, lsl #10
  4104b4:	ldur	w1, [x29, #-132]
  4104b8:	ldr	x10, [sp, #200]
  4104bc:	ldr	x6, [x10, #24]
  4104c0:	ldr	x2, [sp, #192]
  4104c4:	mov	w3, #0x11d                 	// #285
  4104c8:	ldr	x4, [sp, #184]
  4104cc:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4104d0:	add	x5, x5, #0xe84
  4104d4:	bl	403a20 <log_internal_realm@plt>
  4104d8:	str	w0, [sp, #152]
  4104dc:	b	4104f4 <ascii_strlower_n@plt+0xc094>
  4104e0:	ldur	w0, [x29, #-132]
  4104e4:	bl	403a30 <abs@plt>
  4104e8:	mov	w8, wzr
  4104ec:	subs	w8, w8, w0, uxtb
  4104f0:	str	w8, [sp, #152]
  4104f4:	ldr	w8, [sp, #152]
  4104f8:	stur	w8, [x29, #-140]
  4104fc:	ldr	x9, [sp, #200]
  410500:	ldr	x0, [x9, #96]
  410504:	sub	x1, x29, #0x30
  410508:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41050c:	add	x2, x2, #0x1aa
  410510:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410514:	add	x3, x3, #0x6e5
  410518:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41051c:	add	x4, x4, #0x9a2
  410520:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410524:	add	x5, x5, #0xe92
  410528:	bl	403f00 <sd_bus_message_new_method_call@plt>
  41052c:	stur	w0, [x29, #-116]
  410530:	ldur	w8, [x29, #-116]
  410534:	cmp	w8, #0x0
  410538:	cset	w8, ge  // ge = tcont
  41053c:	tbnz	w8, #0, 4105c8 <ascii_strlower_n@plt+0xc168>
  410540:	mov	w8, #0x3                   	// #3
  410544:	stur	w8, [x29, #-144]
  410548:	ldur	w8, [x29, #-116]
  41054c:	stur	w8, [x29, #-148]
  410550:	stur	wzr, [x29, #-152]
  410554:	ldur	w0, [x29, #-152]
  410558:	bl	403a10 <log_get_max_level_realm@plt>
  41055c:	ldur	w8, [x29, #-144]
  410560:	and	w8, w8, #0x7
  410564:	cmp	w0, w8
  410568:	b.lt	410598 <ascii_strlower_n@plt+0xc138>  // b.tstop
  41056c:	ldur	w8, [x29, #-152]
  410570:	ldur	w9, [x29, #-144]
  410574:	orr	w0, w9, w8, lsl #10
  410578:	ldur	w1, [x29, #-148]
  41057c:	ldr	x2, [sp, #192]
  410580:	mov	w3, #0x127                 	// #295
  410584:	ldr	x4, [sp, #184]
  410588:	ldr	x5, [sp, #168]
  41058c:	bl	403a20 <log_internal_realm@plt>
  410590:	str	w0, [sp, #148]
  410594:	b	4105ac <ascii_strlower_n@plt+0xc14c>
  410598:	ldur	w0, [x29, #-148]
  41059c:	bl	403a30 <abs@plt>
  4105a0:	mov	w8, wzr
  4105a4:	subs	w8, w8, w0, uxtb
  4105a8:	str	w8, [sp, #148]
  4105ac:	ldr	w8, [sp, #148]
  4105b0:	stur	w8, [x29, #-156]
  4105b4:	ldur	w8, [x29, #-156]
  4105b8:	stur	w8, [x29, #-4]
  4105bc:	mov	w8, #0x1                   	// #1
  4105c0:	stur	w8, [x29, #-124]
  4105c4:	b	410e00 <ascii_strlower_n@plt+0xc9a0>
  4105c8:	ldr	x8, [sp, #200]
  4105cc:	ldr	x0, [x8, #64]
  4105d0:	ldur	w2, [x29, #-36]
  4105d4:	ldur	w3, [x29, #-20]
  4105d8:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4105dc:	add	x1, x1, #0xea1
  4105e0:	bl	403f10 <sd_bus_message_append@plt>
  4105e4:	stur	w0, [x29, #-116]
  4105e8:	ldur	w9, [x29, #-116]
  4105ec:	cmp	w9, #0x0
  4105f0:	cset	w9, ge  // ge = tcont
  4105f4:	tbnz	w9, #0, 410680 <ascii_strlower_n@plt+0xc220>
  4105f8:	mov	w8, #0x3                   	// #3
  4105fc:	stur	w8, [x29, #-160]
  410600:	ldur	w8, [x29, #-116]
  410604:	stur	w8, [x29, #-164]
  410608:	stur	wzr, [x29, #-168]
  41060c:	ldur	w0, [x29, #-168]
  410610:	bl	403a10 <log_get_max_level_realm@plt>
  410614:	ldur	w8, [x29, #-160]
  410618:	and	w8, w8, #0x7
  41061c:	cmp	w0, w8
  410620:	b.lt	410650 <ascii_strlower_n@plt+0xc1f0>  // b.tstop
  410624:	ldur	w8, [x29, #-168]
  410628:	ldur	w9, [x29, #-160]
  41062c:	orr	w0, w9, w8, lsl #10
  410630:	ldur	w1, [x29, #-164]
  410634:	ldr	x2, [sp, #192]
  410638:	mov	w3, #0x12b                 	// #299
  41063c:	ldr	x4, [sp, #184]
  410640:	ldr	x5, [sp, #168]
  410644:	bl	403a20 <log_internal_realm@plt>
  410648:	str	w0, [sp, #144]
  41064c:	b	410664 <ascii_strlower_n@plt+0xc204>
  410650:	ldur	w0, [x29, #-164]
  410654:	bl	403a30 <abs@plt>
  410658:	mov	w8, wzr
  41065c:	subs	w8, w8, w0, uxtb
  410660:	str	w8, [sp, #144]
  410664:	ldr	w8, [sp, #144]
  410668:	stur	w8, [x29, #-172]
  41066c:	ldur	w8, [x29, #-172]
  410670:	stur	w8, [x29, #-4]
  410674:	mov	w8, #0x1                   	// #1
  410678:	stur	w8, [x29, #-124]
  41067c:	b	410e00 <ascii_strlower_n@plt+0xc9a0>
  410680:	ldr	x8, [sp, #200]
  410684:	ldr	x0, [x8, #64]
  410688:	ldr	x2, [x8, #80]
  41068c:	ldur	w9, [x29, #-20]
  410690:	str	x0, [sp, #136]
  410694:	mov	w0, w9
  410698:	str	x2, [sp, #128]
  41069c:	bl	40db10 <ascii_strlower_n@plt+0x96b0>
  4106a0:	ldr	x8, [sp, #136]
  4106a4:	str	x0, [sp, #120]
  4106a8:	mov	x0, x8
  4106ac:	mov	w1, #0x79                  	// #121
  4106b0:	ldr	x2, [sp, #128]
  4106b4:	ldr	x3, [sp, #120]
  4106b8:	bl	403fd0 <sd_bus_message_append_array@plt>
  4106bc:	stur	w0, [x29, #-116]
  4106c0:	ldur	w9, [x29, #-116]
  4106c4:	cmp	w9, #0x0
  4106c8:	cset	w9, ge  // ge = tcont
  4106cc:	tbnz	w9, #0, 410758 <ascii_strlower_n@plt+0xc2f8>
  4106d0:	mov	w8, #0x3                   	// #3
  4106d4:	stur	w8, [x29, #-176]
  4106d8:	ldur	w8, [x29, #-116]
  4106dc:	stur	w8, [x29, #-180]
  4106e0:	stur	wzr, [x29, #-184]
  4106e4:	ldur	w0, [x29, #-184]
  4106e8:	bl	403a10 <log_get_max_level_realm@plt>
  4106ec:	ldur	w8, [x29, #-176]
  4106f0:	and	w8, w8, #0x7
  4106f4:	cmp	w0, w8
  4106f8:	b.lt	410728 <ascii_strlower_n@plt+0xc2c8>  // b.tstop
  4106fc:	ldur	w8, [x29, #-184]
  410700:	ldur	w9, [x29, #-176]
  410704:	orr	w0, w9, w8, lsl #10
  410708:	ldur	w1, [x29, #-180]
  41070c:	ldr	x2, [sp, #192]
  410710:	mov	w3, #0x12f                 	// #303
  410714:	ldr	x4, [sp, #184]
  410718:	ldr	x5, [sp, #168]
  41071c:	bl	403a20 <log_internal_realm@plt>
  410720:	str	w0, [sp, #116]
  410724:	b	41073c <ascii_strlower_n@plt+0xc2dc>
  410728:	ldur	w0, [x29, #-180]
  41072c:	bl	403a30 <abs@plt>
  410730:	mov	w8, wzr
  410734:	subs	w8, w8, w0, uxtb
  410738:	str	w8, [sp, #116]
  41073c:	ldr	w8, [sp, #116]
  410740:	stur	w8, [x29, #-188]
  410744:	ldur	w8, [x29, #-188]
  410748:	stur	w8, [x29, #-4]
  41074c:	mov	w8, #0x1                   	// #1
  410750:	stur	w8, [x29, #-124]
  410754:	b	410e00 <ascii_strlower_n@plt+0xc9a0>
  410758:	ldr	x8, [sp, #200]
  41075c:	ldr	x0, [x8, #64]
  410760:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  410764:	add	x9, x9, #0x180
  410768:	ldr	x2, [x9]
  41076c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410770:	add	x1, x1, #0x64
  410774:	bl	403f10 <sd_bus_message_append@plt>
  410778:	stur	w0, [x29, #-116]
  41077c:	ldur	w10, [x29, #-116]
  410780:	cmp	w10, #0x0
  410784:	cset	w10, ge  // ge = tcont
  410788:	tbnz	w10, #0, 410814 <ascii_strlower_n@plt+0xc3b4>
  41078c:	mov	w8, #0x3                   	// #3
  410790:	stur	w8, [x29, #-192]
  410794:	ldur	w8, [x29, #-116]
  410798:	stur	w8, [x29, #-196]
  41079c:	stur	wzr, [x29, #-200]
  4107a0:	ldur	w0, [x29, #-200]
  4107a4:	bl	403a10 <log_get_max_level_realm@plt>
  4107a8:	ldur	w8, [x29, #-192]
  4107ac:	and	w8, w8, #0x7
  4107b0:	cmp	w0, w8
  4107b4:	b.lt	4107e4 <ascii_strlower_n@plt+0xc384>  // b.tstop
  4107b8:	ldur	w8, [x29, #-200]
  4107bc:	ldur	w9, [x29, #-192]
  4107c0:	orr	w0, w9, w8, lsl #10
  4107c4:	ldur	w1, [x29, #-196]
  4107c8:	ldr	x2, [sp, #192]
  4107cc:	mov	w3, #0x133                 	// #307
  4107d0:	ldr	x4, [sp, #184]
  4107d4:	ldr	x5, [sp, #168]
  4107d8:	bl	403a20 <log_internal_realm@plt>
  4107dc:	str	w0, [sp, #112]
  4107e0:	b	4107f8 <ascii_strlower_n@plt+0xc398>
  4107e4:	ldur	w0, [x29, #-196]
  4107e8:	bl	403a30 <abs@plt>
  4107ec:	mov	w8, wzr
  4107f0:	subs	w8, w8, w0, uxtb
  4107f4:	str	w8, [sp, #112]
  4107f8:	ldr	w8, [sp, #112]
  4107fc:	stur	w8, [x29, #-204]
  410800:	ldur	w8, [x29, #-204]
  410804:	stur	w8, [x29, #-4]
  410808:	mov	w8, #0x1                   	// #1
  41080c:	stur	w8, [x29, #-124]
  410810:	b	410e00 <ascii_strlower_n@plt+0xc9a0>
  410814:	mov	w0, #0x1                   	// #1
  410818:	bl	403f20 <now@plt>
  41081c:	ldr	x8, [sp, #200]
  410820:	str	x0, [x8]
  410824:	ldr	x0, [x8, #96]
  410828:	ldr	x1, [x8, #64]
  41082c:	mov	x2, #0xe00                 	// #3584
  410830:	movk	x2, #0x727, lsl #16
  410834:	sub	x3, x29, #0x50
  410838:	sub	x4, x29, #0x38
  41083c:	bl	403f30 <sd_bus_call@plt>
  410840:	stur	w0, [x29, #-116]
  410844:	ldur	w9, [x29, #-116]
  410848:	cmp	w9, #0x0
  41084c:	cset	w9, ge  // ge = tcont
  410850:	tbnz	w9, #0, 410920 <ascii_strlower_n@plt+0xc4c0>
  410854:	mov	w8, #0x3                   	// #3
  410858:	stur	w8, [x29, #-208]
  41085c:	ldur	w8, [x29, #-116]
  410860:	stur	w8, [x29, #-212]
  410864:	stur	wzr, [x29, #-216]
  410868:	ldur	w0, [x29, #-216]
  41086c:	bl	403a10 <log_get_max_level_realm@plt>
  410870:	ldur	w8, [x29, #-208]
  410874:	and	w8, w8, #0x7
  410878:	cmp	w0, w8
  41087c:	b.lt	4108f0 <ascii_strlower_n@plt+0xc490>  // b.tstop
  410880:	ldur	w8, [x29, #-216]
  410884:	ldur	w9, [x29, #-208]
  410888:	orr	w0, w9, w8, lsl #10
  41088c:	ldur	w1, [x29, #-212]
  410890:	ldr	x10, [sp, #200]
  410894:	ldr	x6, [x10, #24]
  410898:	ldur	w8, [x29, #-116]
  41089c:	sub	x11, x29, #0x50
  4108a0:	str	w0, [sp, #108]
  4108a4:	mov	x0, x11
  4108a8:	str	w1, [sp, #104]
  4108ac:	mov	w1, w8
  4108b0:	str	x6, [sp, #96]
  4108b4:	bl	403ce0 <bus_error_message@plt>
  4108b8:	ldr	w8, [sp, #108]
  4108bc:	str	x0, [sp, #88]
  4108c0:	mov	w0, w8
  4108c4:	ldr	w1, [sp, #104]
  4108c8:	ldr	x2, [sp, #192]
  4108cc:	mov	w3, #0x139                 	// #313
  4108d0:	ldr	x4, [sp, #184]
  4108d4:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4108d8:	add	x5, x5, #0x9f8
  4108dc:	ldr	x6, [sp, #96]
  4108e0:	ldr	x7, [sp, #88]
  4108e4:	bl	403a20 <log_internal_realm@plt>
  4108e8:	str	w0, [sp, #84]
  4108ec:	b	410904 <ascii_strlower_n@plt+0xc4a4>
  4108f0:	ldur	w0, [x29, #-212]
  4108f4:	bl	403a30 <abs@plt>
  4108f8:	mov	w8, wzr
  4108fc:	subs	w8, w8, w0, uxtb
  410900:	str	w8, [sp, #84]
  410904:	ldr	w8, [sp, #84]
  410908:	stur	w8, [x29, #-220]
  41090c:	ldur	w8, [x29, #-220]
  410910:	stur	w8, [x29, #-4]
  410914:	mov	w8, #0x1                   	// #1
  410918:	stur	w8, [x29, #-124]
  41091c:	b	410e00 <ascii_strlower_n@plt+0xc9a0>
  410920:	mov	w0, #0x1                   	// #1
  410924:	bl	403f20 <now@plt>
  410928:	ldr	x8, [sp, #200]
  41092c:	ldr	x9, [x8]
  410930:	subs	x9, x0, x9
  410934:	str	x9, [x8]
  410938:	ldr	x0, [x8, #56]
  41093c:	mov	w1, #0x61                  	// #97
  410940:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410944:	add	x2, x2, #0xea4
  410948:	bl	403e60 <sd_bus_message_enter_container@plt>
  41094c:	stur	w0, [x29, #-116]
  410950:	ldur	w10, [x29, #-116]
  410954:	cmp	w10, #0x0
  410958:	cset	w10, ge  // ge = tcont
  41095c:	tbnz	w10, #0, 4109e8 <ascii_strlower_n@plt+0xc588>
  410960:	mov	w8, #0x3                   	// #3
  410964:	stur	w8, [x29, #-224]
  410968:	ldur	w8, [x29, #-116]
  41096c:	stur	w8, [x29, #-228]
  410970:	stur	wzr, [x29, #-232]
  410974:	ldur	w0, [x29, #-232]
  410978:	bl	403a10 <log_get_max_level_realm@plt>
  41097c:	ldur	w8, [x29, #-224]
  410980:	and	w8, w8, #0x7
  410984:	cmp	w0, w8
  410988:	b.lt	4109b8 <ascii_strlower_n@plt+0xc558>  // b.tstop
  41098c:	ldur	w8, [x29, #-232]
  410990:	ldur	w9, [x29, #-224]
  410994:	orr	w0, w9, w8, lsl #10
  410998:	ldur	w1, [x29, #-228]
  41099c:	ldr	x2, [sp, #192]
  4109a0:	mov	w3, #0x13f                 	// #319
  4109a4:	ldr	x4, [sp, #184]
  4109a8:	ldr	x5, [sp, #168]
  4109ac:	bl	403a20 <log_internal_realm@plt>
  4109b0:	str	w0, [sp, #80]
  4109b4:	b	4109cc <ascii_strlower_n@plt+0xc56c>
  4109b8:	ldur	w0, [x29, #-228]
  4109bc:	bl	403a30 <abs@plt>
  4109c0:	mov	w8, wzr
  4109c4:	subs	w8, w8, w0, uxtb
  4109c8:	str	w8, [sp, #80]
  4109cc:	ldr	w8, [sp, #80]
  4109d0:	stur	w8, [x29, #-236]
  4109d4:	ldur	w8, [x29, #-236]
  4109d8:	stur	w8, [x29, #-4]
  4109dc:	mov	w8, #0x1                   	// #1
  4109e0:	stur	w8, [x29, #-124]
  4109e4:	b	410e00 <ascii_strlower_n@plt+0xc9a0>
  4109e8:	ldr	x8, [sp, #200]
  4109ec:	ldr	x0, [x8, #56]
  4109f0:	mov	w1, #0x72                  	// #114
  4109f4:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4109f8:	add	x2, x2, #0xea9
  4109fc:	bl	403e60 <sd_bus_message_enter_container@plt>
  410a00:	stur	w0, [x29, #-116]
  410a04:	cmp	w0, #0x0
  410a08:	cset	w9, le
  410a0c:	tbnz	w9, #0, 410b58 <ascii_strlower_n@plt+0xc6f8>
  410a10:	ldr	x8, [sp, #200]
  410a14:	ldr	x0, [x8, #56]
  410a18:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410a1c:	add	x1, x1, #0xea9
  410a20:	sub	x2, x29, #0x24
  410a24:	sub	x3, x29, #0xf8
  410a28:	bl	403d00 <sd_bus_message_read@plt>
  410a2c:	stur	w0, [x29, #-116]
  410a30:	ldur	w9, [x29, #-116]
  410a34:	cmp	w9, #0x0
  410a38:	cset	w9, ge  // ge = tcont
  410a3c:	tbnz	w9, #0, 410a54 <ascii_strlower_n@plt+0xc5f4>
  410a40:	ldur	w8, [x29, #-116]
  410a44:	stur	w8, [x29, #-4]
  410a48:	mov	w8, #0x1                   	// #1
  410a4c:	stur	w8, [x29, #-124]
  410a50:	b	410e00 <ascii_strlower_n@plt+0xc9a0>
  410a54:	ldr	x8, [sp, #200]
  410a58:	ldr	x0, [x8, #56]
  410a5c:	bl	403e80 <sd_bus_message_exit_container@plt>
  410a60:	stur	w0, [x29, #-116]
  410a64:	ldur	w9, [x29, #-116]
  410a68:	cmp	w9, #0x0
  410a6c:	cset	w9, ge  // ge = tcont
  410a70:	tbnz	w9, #0, 410a88 <ascii_strlower_n@plt+0xc628>
  410a74:	ldur	w8, [x29, #-116]
  410a78:	stur	w8, [x29, #-4]
  410a7c:	mov	w8, #0x1                   	// #1
  410a80:	stur	w8, [x29, #-124]
  410a84:	b	410e00 <ascii_strlower_n@plt+0xc9a0>
  410a88:	ldr	x8, [sp, #200]
  410a8c:	ldr	x0, [x8, #24]
  410a90:	bl	403f70 <strlen@plt>
  410a94:	ldur	w9, [x29, #-100]
  410a98:	str	w0, [sp, #76]
  410a9c:	cbnz	w9, 410ab0 <ascii_strlower_n@plt+0xc650>
  410aa0:	ldr	x8, [sp, #200]
  410aa4:	ldr	x9, [x8, #24]
  410aa8:	str	x9, [sp, #64]
  410aac:	b	410abc <ascii_strlower_n@plt+0xc65c>
  410ab0:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  410ab4:	add	x8, x8, #0x7e4
  410ab8:	str	x8, [sp, #64]
  410abc:	ldr	x8, [sp, #64]
  410ac0:	ldur	w9, [x29, #-100]
  410ac4:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410ac8:	add	x10, x10, #0xc37
  410acc:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410ad0:	add	x11, x11, #0xeb9
  410ad4:	cmp	w9, #0x0
  410ad8:	csel	x3, x11, x10, eq  // eq = none
  410adc:	str	x8, [sp, #56]
  410ae0:	str	x3, [sp, #48]
  410ae4:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  410ae8:	ldur	x5, [x29, #-248]
  410aec:	str	x0, [sp, #40]
  410af0:	str	x5, [sp, #32]
  410af4:	bl	40877c <ascii_strlower_n@plt+0x431c>
  410af8:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410afc:	add	x8, x8, #0xeac
  410b00:	str	x0, [sp, #24]
  410b04:	mov	x0, x8
  410b08:	ldr	w1, [sp, #76]
  410b0c:	ldr	x2, [sp, #56]
  410b10:	ldr	x3, [sp, #48]
  410b14:	ldr	x4, [sp, #40]
  410b18:	ldr	x5, [sp, #32]
  410b1c:	ldr	x6, [sp, #24]
  410b20:	bl	403ab0 <printf@plt>
  410b24:	stur	w0, [x29, #-252]
  410b28:	ldur	w0, [x29, #-252]
  410b2c:	ldur	w1, [x29, #-36]
  410b30:	bl	4122cc <ascii_strlower_n@plt+0xde6c>
  410b34:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  410b38:	add	x8, x8, #0x1e8
  410b3c:	ldr	x1, [x8]
  410b40:	mov	w0, #0xa                   	// #10
  410b44:	bl	403db0 <fputc@plt>
  410b48:	ldur	w9, [x29, #-100]
  410b4c:	add	w9, w9, #0x1
  410b50:	stur	w9, [x29, #-100]
  410b54:	b	4109e8 <ascii_strlower_n@plt+0xc588>
  410b58:	ldur	w8, [x29, #-116]
  410b5c:	cmp	w8, #0x0
  410b60:	cset	w8, ge  // ge = tcont
  410b64:	tbnz	w8, #0, 410bf0 <ascii_strlower_n@plt+0xc790>
  410b68:	mov	w8, #0x3                   	// #3
  410b6c:	stur	w8, [x29, #-256]
  410b70:	ldur	w8, [x29, #-116]
  410b74:	str	w8, [sp, #268]
  410b78:	str	wzr, [sp, #264]
  410b7c:	ldr	w0, [sp, #264]
  410b80:	bl	403a10 <log_get_max_level_realm@plt>
  410b84:	ldur	w8, [x29, #-256]
  410b88:	and	w8, w8, #0x7
  410b8c:	cmp	w0, w8
  410b90:	b.lt	410bc0 <ascii_strlower_n@plt+0xc760>  // b.tstop
  410b94:	ldr	w8, [sp, #264]
  410b98:	ldur	w9, [x29, #-256]
  410b9c:	orr	w0, w9, w8, lsl #10
  410ba0:	ldr	w1, [sp, #268]
  410ba4:	ldr	x2, [sp, #192]
  410ba8:	mov	w3, #0x15a                 	// #346
  410bac:	ldr	x4, [sp, #184]
  410bb0:	ldr	x5, [sp, #176]
  410bb4:	bl	403a20 <log_internal_realm@plt>
  410bb8:	str	w0, [sp, #20]
  410bbc:	b	410bd4 <ascii_strlower_n@plt+0xc774>
  410bc0:	ldr	w0, [sp, #268]
  410bc4:	bl	403a30 <abs@plt>
  410bc8:	mov	w8, wzr
  410bcc:	subs	w8, w8, w0, uxtb
  410bd0:	str	w8, [sp, #20]
  410bd4:	ldr	w8, [sp, #20]
  410bd8:	str	w8, [sp, #260]
  410bdc:	ldr	w8, [sp, #260]
  410be0:	stur	w8, [x29, #-4]
  410be4:	mov	w8, #0x1                   	// #1
  410be8:	stur	w8, [x29, #-124]
  410bec:	b	410e00 <ascii_strlower_n@plt+0xc9a0>
  410bf0:	ldr	x8, [sp, #200]
  410bf4:	ldr	x0, [x8, #56]
  410bf8:	bl	403e80 <sd_bus_message_exit_container@plt>
  410bfc:	stur	w0, [x29, #-116]
  410c00:	ldur	w9, [x29, #-116]
  410c04:	cmp	w9, #0x0
  410c08:	cset	w9, ge  // ge = tcont
  410c0c:	tbnz	w9, #0, 410c98 <ascii_strlower_n@plt+0xc838>
  410c10:	mov	w8, #0x3                   	// #3
  410c14:	str	w8, [sp, #256]
  410c18:	ldur	w8, [x29, #-116]
  410c1c:	str	w8, [sp, #252]
  410c20:	str	wzr, [sp, #248]
  410c24:	ldr	w0, [sp, #248]
  410c28:	bl	403a10 <log_get_max_level_realm@plt>
  410c2c:	ldr	w8, [sp, #256]
  410c30:	and	w8, w8, #0x7
  410c34:	cmp	w0, w8
  410c38:	b.lt	410c68 <ascii_strlower_n@plt+0xc808>  // b.tstop
  410c3c:	ldr	w8, [sp, #248]
  410c40:	ldr	w9, [sp, #256]
  410c44:	orr	w0, w9, w8, lsl #10
  410c48:	ldr	w1, [sp, #252]
  410c4c:	ldr	x2, [sp, #192]
  410c50:	mov	w3, #0x15e                 	// #350
  410c54:	ldr	x4, [sp, #184]
  410c58:	ldr	x5, [sp, #176]
  410c5c:	bl	403a20 <log_internal_realm@plt>
  410c60:	str	w0, [sp, #16]
  410c64:	b	410c7c <ascii_strlower_n@plt+0xc81c>
  410c68:	ldr	w0, [sp, #252]
  410c6c:	bl	403a30 <abs@plt>
  410c70:	mov	w8, wzr
  410c74:	subs	w8, w8, w0, uxtb
  410c78:	str	w8, [sp, #16]
  410c7c:	ldr	w8, [sp, #16]
  410c80:	str	w8, [sp, #244]
  410c84:	ldr	w8, [sp, #244]
  410c88:	stur	w8, [x29, #-4]
  410c8c:	mov	w8, #0x1                   	// #1
  410c90:	stur	w8, [x29, #-124]
  410c94:	b	410e00 <ascii_strlower_n@plt+0xc9a0>
  410c98:	ldr	x8, [sp, #200]
  410c9c:	ldr	x0, [x8, #56]
  410ca0:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410ca4:	add	x1, x1, #0x64
  410ca8:	sub	x2, x29, #0x60
  410cac:	bl	403d00 <sd_bus_message_read@plt>
  410cb0:	stur	w0, [x29, #-116]
  410cb4:	ldur	w9, [x29, #-116]
  410cb8:	cmp	w9, #0x0
  410cbc:	cset	w9, ge  // ge = tcont
  410cc0:	tbnz	w9, #0, 410d4c <ascii_strlower_n@plt+0xc8ec>
  410cc4:	mov	w8, #0x3                   	// #3
  410cc8:	str	w8, [sp, #240]
  410ccc:	ldur	w8, [x29, #-116]
  410cd0:	str	w8, [sp, #236]
  410cd4:	str	wzr, [sp, #232]
  410cd8:	ldr	w0, [sp, #232]
  410cdc:	bl	403a10 <log_get_max_level_realm@plt>
  410ce0:	ldr	w8, [sp, #240]
  410ce4:	and	w8, w8, #0x7
  410ce8:	cmp	w0, w8
  410cec:	b.lt	410d1c <ascii_strlower_n@plt+0xc8bc>  // b.tstop
  410cf0:	ldr	w8, [sp, #232]
  410cf4:	ldr	w9, [sp, #240]
  410cf8:	orr	w0, w9, w8, lsl #10
  410cfc:	ldr	w1, [sp, #236]
  410d00:	ldr	x2, [sp, #192]
  410d04:	mov	w3, #0x162                 	// #354
  410d08:	ldr	x4, [sp, #184]
  410d0c:	ldr	x5, [sp, #176]
  410d10:	bl	403a20 <log_internal_realm@plt>
  410d14:	str	w0, [sp, #12]
  410d18:	b	410d30 <ascii_strlower_n@plt+0xc8d0>
  410d1c:	ldr	w0, [sp, #236]
  410d20:	bl	403a30 <abs@plt>
  410d24:	mov	w8, wzr
  410d28:	subs	w8, w8, w0, uxtb
  410d2c:	str	w8, [sp, #12]
  410d30:	ldr	w8, [sp, #12]
  410d34:	str	w8, [sp, #228]
  410d38:	ldr	w8, [sp, #228]
  410d3c:	stur	w8, [x29, #-4]
  410d40:	mov	w8, #0x1                   	// #1
  410d44:	stur	w8, [x29, #-124]
  410d48:	b	410e00 <ascii_strlower_n@plt+0xc9a0>
  410d4c:	ldur	w8, [x29, #-100]
  410d50:	cbnz	w8, 410de4 <ascii_strlower_n@plt+0xc984>
  410d54:	mov	w8, #0x3                   	// #3
  410d58:	str	w8, [sp, #224]
  410d5c:	str	wzr, [sp, #220]
  410d60:	str	wzr, [sp, #216]
  410d64:	ldr	w0, [sp, #216]
  410d68:	bl	403a10 <log_get_max_level_realm@plt>
  410d6c:	ldr	w8, [sp, #224]
  410d70:	and	w8, w8, #0x7
  410d74:	cmp	w0, w8
  410d78:	b.lt	410db4 <ascii_strlower_n@plt+0xc954>  // b.tstop
  410d7c:	ldr	w8, [sp, #216]
  410d80:	ldr	w9, [sp, #224]
  410d84:	orr	w0, w9, w8, lsl #10
  410d88:	ldr	w1, [sp, #220]
  410d8c:	ldr	x10, [sp, #200]
  410d90:	ldr	x6, [x10, #24]
  410d94:	ldr	x2, [sp, #192]
  410d98:	mov	w3, #0x165                 	// #357
  410d9c:	ldr	x4, [sp, #184]
  410da0:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410da4:	add	x5, x5, #0xebb
  410da8:	bl	403a20 <log_internal_realm@plt>
  410dac:	str	w0, [sp, #8]
  410db0:	b	410dc8 <ascii_strlower_n@plt+0xc968>
  410db4:	ldr	w0, [sp, #220]
  410db8:	bl	403a30 <abs@plt>
  410dbc:	mov	w8, wzr
  410dc0:	subs	w8, w8, w0, uxtb
  410dc4:	str	w8, [sp, #8]
  410dc8:	ldr	w8, [sp, #8]
  410dcc:	str	w8, [sp, #212]
  410dd0:	mov	w8, #0xfffffffd            	// #-3
  410dd4:	stur	w8, [x29, #-4]
  410dd8:	mov	w8, #0x1                   	// #1
  410ddc:	stur	w8, [x29, #-124]
  410de0:	b	410e00 <ascii_strlower_n@plt+0xc9a0>
  410de4:	ldr	x8, [sp, #200]
  410de8:	ldr	x0, [x8, #16]
  410dec:	ldr	x1, [x8]
  410df0:	bl	412074 <ascii_strlower_n@plt+0xdc14>
  410df4:	stur	wzr, [x29, #-4]
  410df8:	mov	w9, #0x1                   	// #1
  410dfc:	stur	w9, [x29, #-124]
  410e00:	sub	x0, x29, #0x58
  410e04:	bl	405970 <ascii_strlower_n@plt+0x1510>
  410e08:	sub	x0, x29, #0x50
  410e0c:	bl	403d20 <sd_bus_error_free@plt>
  410e10:	sub	x0, x29, #0x38
  410e14:	bl	40d468 <ascii_strlower_n@plt+0x9008>
  410e18:	sub	x0, x29, #0x30
  410e1c:	bl	40d468 <ascii_strlower_n@plt+0x9008>
  410e20:	ldur	w0, [x29, #-4]
  410e24:	add	sp, sp, #0x210
  410e28:	ldr	x28, [sp, #16]
  410e2c:	ldp	x29, x30, [sp], #32
  410e30:	ret
  410e34:	stp	x29, x30, [sp, #-32]!
  410e38:	str	x28, [sp, #16]
  410e3c:	mov	x29, sp
  410e40:	sub	sp, sp, #0x2f0
  410e44:	sub	x8, x29, #0xe0
  410e48:	mov	x9, xzr
  410e4c:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  410e50:	add	x10, x10, #0x6f4
  410e54:	add	x10, x10, #0x3
  410e58:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410e5c:	add	x11, x11, #0xef7
  410e60:	adrp	x12, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410e64:	add	x12, x12, #0xa1c
  410e68:	str	x0, [x8, #208]
  410e6c:	str	x1, [x8, #200]
  410e70:	str	x9, [x8, #192]
  410e74:	str	x9, [x8, #184]
  410e78:	str	xzr, [x8, #160]
  410e7c:	str	xzr, [x8, #168]
  410e80:	str	xzr, [x8, #176]
  410e84:	str	x9, [x8, #152]
  410e88:	stur	wzr, [x29, #-76]
  410e8c:	str	x8, [sp, #352]
  410e90:	str	x10, [sp, #344]
  410e94:	str	x11, [sp, #336]
  410e98:	str	x12, [sp, #328]
  410e9c:	ldr	x8, [sp, #352]
  410ea0:	ldr	x9, [x8, #200]
  410ea4:	cmp	x9, #0x0
  410ea8:	cset	w10, ne  // ne = any
  410eac:	mov	w11, #0x1                   	// #1
  410eb0:	eor	w10, w10, #0x1
  410eb4:	eor	w10, w10, w11
  410eb8:	eor	w10, w10, w11
  410ebc:	and	w10, w10, #0x1
  410ec0:	mov	w0, w10
  410ec4:	sxtw	x9, w0
  410ec8:	cbz	x9, 410ef0 <ascii_strlower_n@plt+0xca90>
  410ecc:	mov	w8, wzr
  410ed0:	mov	w0, w8
  410ed4:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410ed8:	add	x1, x1, #0x923
  410edc:	ldr	x2, [sp, #344]
  410ee0:	mov	w3, #0xa6                  	// #166
  410ee4:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410ee8:	add	x4, x4, #0xece
  410eec:	bl	4039d0 <log_assert_failed_realm@plt>
  410ef0:	mov	w8, #0x7                   	// #7
  410ef4:	stur	w8, [x29, #-104]
  410ef8:	stur	wzr, [x29, #-108]
  410efc:	stur	wzr, [x29, #-112]
  410f00:	ldur	w0, [x29, #-112]
  410f04:	bl	403a10 <log_get_max_level_realm@plt>
  410f08:	ldur	w8, [x29, #-104]
  410f0c:	and	w8, w8, #0x7
  410f10:	cmp	w0, w8
  410f14:	b.lt	410fec <ascii_strlower_n@plt+0xcb8c>  // b.tstop
  410f18:	ldur	w8, [x29, #-112]
  410f1c:	ldur	w9, [x29, #-104]
  410f20:	orr	w0, w9, w8, lsl #10
  410f24:	ldur	w1, [x29, #-108]
  410f28:	ldr	x10, [sp, #352]
  410f2c:	ldr	x6, [x10, #200]
  410f30:	adrp	x11, 450000 <ascii_strlower_n@plt+0x4bba0>
  410f34:	add	x11, x11, #0x174
  410f38:	ldr	w8, [x11]
  410f3c:	str	w0, [sp, #324]
  410f40:	mov	w0, w8
  410f44:	str	w1, [sp, #320]
  410f48:	str	x6, [sp, #312]
  410f4c:	bl	403fe0 <af_to_name@plt>
  410f50:	str	x0, [sp, #304]
  410f54:	cbz	x0, 410f64 <ascii_strlower_n@plt+0xcb04>
  410f58:	ldr	x8, [sp, #304]
  410f5c:	str	x8, [sp, #296]
  410f60:	b	410f70 <ascii_strlower_n@plt+0xcb10>
  410f64:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410f68:	add	x8, x8, #0x9a0
  410f6c:	str	x8, [sp, #296]
  410f70:	ldr	x8, [sp, #296]
  410f74:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  410f78:	add	x9, x9, #0x160
  410f7c:	ldr	x0, [x9]
  410f80:	str	x8, [sp, #288]
  410f84:	bl	40dad0 <ascii_strlower_n@plt+0x9670>
  410f88:	tbnz	w0, #0, 410f90 <ascii_strlower_n@plt+0xcb30>
  410f8c:	b	410fa0 <ascii_strlower_n@plt+0xcb40>
  410f90:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410f94:	add	x8, x8, #0x9a0
  410f98:	str	x8, [sp, #280]
  410f9c:	b	410fb0 <ascii_strlower_n@plt+0xcb50>
  410fa0:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  410fa4:	add	x8, x8, #0x160
  410fa8:	ldr	x8, [x8]
  410fac:	str	x8, [sp, #280]
  410fb0:	ldr	x8, [sp, #280]
  410fb4:	ldr	w0, [sp, #324]
  410fb8:	ldr	w1, [sp, #320]
  410fbc:	ldr	x2, [sp, #344]
  410fc0:	mov	w3, #0xa8                  	// #168
  410fc4:	ldr	x4, [sp, #336]
  410fc8:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  410fcc:	add	x5, x5, #0xf04
  410fd0:	ldr	x6, [sp, #312]
  410fd4:	ldr	x7, [sp, #288]
  410fd8:	mov	x9, sp
  410fdc:	str	x8, [x9]
  410fe0:	bl	403a20 <log_internal_realm@plt>
  410fe4:	str	w0, [sp, #276]
  410fe8:	b	411000 <ascii_strlower_n@plt+0xcba0>
  410fec:	ldur	w0, [x29, #-108]
  410ff0:	bl	403a30 <abs@plt>
  410ff4:	mov	w8, wzr
  410ff8:	subs	w8, w8, w0, uxtb
  410ffc:	str	w8, [sp, #276]
  411000:	ldr	w8, [sp, #276]
  411004:	stur	w8, [x29, #-116]
  411008:	ldr	x9, [sp, #352]
  41100c:	ldr	x0, [x9, #208]
  411010:	sub	x1, x29, #0x20
  411014:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411018:	add	x2, x2, #0x1aa
  41101c:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411020:	add	x3, x3, #0x6e5
  411024:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411028:	add	x4, x4, #0x9a2
  41102c:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411030:	add	x5, x5, #0xf2c
  411034:	bl	403f00 <sd_bus_message_new_method_call@plt>
  411038:	stur	w0, [x29, #-100]
  41103c:	ldur	w8, [x29, #-100]
  411040:	cmp	w8, #0x0
  411044:	cset	w8, ge  // ge = tcont
  411048:	tbnz	w8, #0, 4110d8 <ascii_strlower_n@plt+0xcc78>
  41104c:	mov	w8, #0x3                   	// #3
  411050:	stur	w8, [x29, #-120]
  411054:	ldur	w8, [x29, #-100]
  411058:	stur	w8, [x29, #-124]
  41105c:	stur	wzr, [x29, #-128]
  411060:	ldur	w0, [x29, #-128]
  411064:	bl	403a10 <log_get_max_level_realm@plt>
  411068:	ldur	w8, [x29, #-120]
  41106c:	and	w8, w8, #0x7
  411070:	cmp	w0, w8
  411074:	b.lt	4110a8 <ascii_strlower_n@plt+0xcc48>  // b.tstop
  411078:	ldur	w8, [x29, #-128]
  41107c:	ldur	w9, [x29, #-120]
  411080:	orr	w0, w9, w8, lsl #10
  411084:	ldur	w1, [x29, #-124]
  411088:	ldr	x2, [sp, #344]
  41108c:	mov	w3, #0xb2                  	// #178
  411090:	ldr	x4, [sp, #336]
  411094:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411098:	add	x5, x5, #0x9d1
  41109c:	bl	403a20 <log_internal_realm@plt>
  4110a0:	str	w0, [sp, #272]
  4110a4:	b	4110bc <ascii_strlower_n@plt+0xcc5c>
  4110a8:	ldur	w0, [x29, #-124]
  4110ac:	bl	403a30 <abs@plt>
  4110b0:	mov	w8, wzr
  4110b4:	subs	w8, w8, w0, uxtb
  4110b8:	str	w8, [sp, #272]
  4110bc:	ldr	w8, [sp, #272]
  4110c0:	stur	w8, [x29, #-132]
  4110c4:	ldur	w8, [x29, #-132]
  4110c8:	stur	w8, [x29, #-4]
  4110cc:	mov	w8, #0x1                   	// #1
  4110d0:	stur	w8, [x29, #-136]
  4110d4:	b	411d00 <ascii_strlower_n@plt+0xd8a0>
  4110d8:	ldr	x8, [sp, #352]
  4110dc:	ldr	x0, [x8, #192]
  4110e0:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  4110e4:	add	x9, x9, #0x170
  4110e8:	ldr	w2, [x9]
  4110ec:	ldr	x3, [x8, #200]
  4110f0:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  4110f4:	add	x9, x9, #0x174
  4110f8:	ldr	w4, [x9]
  4110fc:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  411100:	add	x9, x9, #0x180
  411104:	ldr	x5, [x9]
  411108:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41110c:	add	x1, x1, #0xf3c
  411110:	bl	403f10 <sd_bus_message_append@plt>
  411114:	stur	w0, [x29, #-100]
  411118:	ldur	w10, [x29, #-100]
  41111c:	cmp	w10, #0x0
  411120:	cset	w10, ge  // ge = tcont
  411124:	tbnz	w10, #0, 4111b4 <ascii_strlower_n@plt+0xcd54>
  411128:	mov	w8, #0x3                   	// #3
  41112c:	stur	w8, [x29, #-140]
  411130:	ldur	w8, [x29, #-100]
  411134:	stur	w8, [x29, #-144]
  411138:	stur	wzr, [x29, #-148]
  41113c:	ldur	w0, [x29, #-148]
  411140:	bl	403a10 <log_get_max_level_realm@plt>
  411144:	ldur	w8, [x29, #-140]
  411148:	and	w8, w8, #0x7
  41114c:	cmp	w0, w8
  411150:	b.lt	411184 <ascii_strlower_n@plt+0xcd24>  // b.tstop
  411154:	ldur	w8, [x29, #-148]
  411158:	ldur	w9, [x29, #-140]
  41115c:	orr	w0, w9, w8, lsl #10
  411160:	ldur	w1, [x29, #-144]
  411164:	ldr	x2, [sp, #344]
  411168:	mov	w3, #0xb6                  	// #182
  41116c:	ldr	x4, [sp, #336]
  411170:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411174:	add	x5, x5, #0x9d1
  411178:	bl	403a20 <log_internal_realm@plt>
  41117c:	str	w0, [sp, #268]
  411180:	b	411198 <ascii_strlower_n@plt+0xcd38>
  411184:	ldur	w0, [x29, #-144]
  411188:	bl	403a30 <abs@plt>
  41118c:	mov	w8, wzr
  411190:	subs	w8, w8, w0, uxtb
  411194:	str	w8, [sp, #268]
  411198:	ldr	w8, [sp, #268]
  41119c:	stur	w8, [x29, #-152]
  4111a0:	ldur	w8, [x29, #-152]
  4111a4:	stur	w8, [x29, #-4]
  4111a8:	mov	w8, #0x1                   	// #1
  4111ac:	stur	w8, [x29, #-136]
  4111b0:	b	411d00 <ascii_strlower_n@plt+0xd8a0>
  4111b4:	mov	w0, #0x1                   	// #1
  4111b8:	bl	403f20 <now@plt>
  4111bc:	ldr	x8, [sp, #352]
  4111c0:	str	x0, [x8, #128]
  4111c4:	ldr	x0, [x8, #208]
  4111c8:	ldr	x1, [x8, #192]
  4111cc:	mov	x2, #0xe00                 	// #3584
  4111d0:	movk	x2, #0x727, lsl #16
  4111d4:	sub	x3, x29, #0x40
  4111d8:	sub	x4, x29, #0x28
  4111dc:	bl	403f30 <sd_bus_call@plt>
  4111e0:	stur	w0, [x29, #-100]
  4111e4:	ldur	w9, [x29, #-100]
  4111e8:	cmp	w9, #0x0
  4111ec:	cset	w9, ge  // ge = tcont
  4111f0:	tbnz	w9, #0, 4112c0 <ascii_strlower_n@plt+0xce60>
  4111f4:	mov	w8, #0x3                   	// #3
  4111f8:	stur	w8, [x29, #-156]
  4111fc:	ldur	w8, [x29, #-100]
  411200:	stur	w8, [x29, #-160]
  411204:	stur	wzr, [x29, #-164]
  411208:	ldur	w0, [x29, #-164]
  41120c:	bl	403a10 <log_get_max_level_realm@plt>
  411210:	ldur	w8, [x29, #-156]
  411214:	and	w8, w8, #0x7
  411218:	cmp	w0, w8
  41121c:	b.lt	411290 <ascii_strlower_n@plt+0xce30>  // b.tstop
  411220:	ldur	w8, [x29, #-164]
  411224:	ldur	w9, [x29, #-156]
  411228:	orr	w0, w9, w8, lsl #10
  41122c:	ldur	w1, [x29, #-160]
  411230:	ldr	x10, [sp, #352]
  411234:	ldr	x6, [x10, #200]
  411238:	ldur	w8, [x29, #-100]
  41123c:	sub	x11, x29, #0x40
  411240:	str	w0, [sp, #264]
  411244:	mov	x0, x11
  411248:	str	w1, [sp, #260]
  41124c:	mov	w1, w8
  411250:	str	x6, [sp, #248]
  411254:	bl	403ce0 <bus_error_message@plt>
  411258:	ldr	w8, [sp, #264]
  41125c:	str	x0, [sp, #240]
  411260:	mov	w0, w8
  411264:	ldr	w1, [sp, #260]
  411268:	ldr	x2, [sp, #344]
  41126c:	mov	w3, #0xbc                  	// #188
  411270:	ldr	x4, [sp, #336]
  411274:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411278:	add	x5, x5, #0x9f8
  41127c:	ldr	x6, [sp, #248]
  411280:	ldr	x7, [sp, #240]
  411284:	bl	403a20 <log_internal_realm@plt>
  411288:	str	w0, [sp, #236]
  41128c:	b	4112a4 <ascii_strlower_n@plt+0xce44>
  411290:	ldur	w0, [x29, #-160]
  411294:	bl	403a30 <abs@plt>
  411298:	mov	w8, wzr
  41129c:	subs	w8, w8, w0, uxtb
  4112a0:	str	w8, [sp, #236]
  4112a4:	ldr	w8, [sp, #236]
  4112a8:	stur	w8, [x29, #-168]
  4112ac:	ldur	w8, [x29, #-168]
  4112b0:	stur	w8, [x29, #-4]
  4112b4:	mov	w8, #0x1                   	// #1
  4112b8:	stur	w8, [x29, #-136]
  4112bc:	b	411d00 <ascii_strlower_n@plt+0xd8a0>
  4112c0:	mov	w0, #0x1                   	// #1
  4112c4:	bl	403f20 <now@plt>
  4112c8:	ldr	x8, [sp, #352]
  4112cc:	ldr	x9, [x8, #128]
  4112d0:	subs	x9, x0, x9
  4112d4:	str	x9, [x8, #128]
  4112d8:	ldr	x0, [x8, #184]
  4112dc:	mov	w1, #0x61                  	// #97
  4112e0:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4112e4:	add	x2, x2, #0x69b
  4112e8:	bl	403e60 <sd_bus_message_enter_container@plt>
  4112ec:	stur	w0, [x29, #-100]
  4112f0:	ldur	w10, [x29, #-100]
  4112f4:	cmp	w10, #0x0
  4112f8:	cset	w10, ge  // ge = tcont
  4112fc:	tbnz	w10, #0, 411388 <ascii_strlower_n@plt+0xcf28>
  411300:	mov	w8, #0x3                   	// #3
  411304:	stur	w8, [x29, #-172]
  411308:	ldur	w8, [x29, #-100]
  41130c:	stur	w8, [x29, #-176]
  411310:	stur	wzr, [x29, #-180]
  411314:	ldur	w0, [x29, #-180]
  411318:	bl	403a10 <log_get_max_level_realm@plt>
  41131c:	ldur	w8, [x29, #-172]
  411320:	and	w8, w8, #0x7
  411324:	cmp	w0, w8
  411328:	b.lt	411358 <ascii_strlower_n@plt+0xcef8>  // b.tstop
  41132c:	ldur	w8, [x29, #-180]
  411330:	ldur	w9, [x29, #-172]
  411334:	orr	w0, w9, w8, lsl #10
  411338:	ldur	w1, [x29, #-176]
  41133c:	ldr	x2, [sp, #344]
  411340:	mov	w3, #0xc2                  	// #194
  411344:	ldr	x4, [sp, #336]
  411348:	ldr	x5, [sp, #328]
  41134c:	bl	403a20 <log_internal_realm@plt>
  411350:	str	w0, [sp, #232]
  411354:	b	41136c <ascii_strlower_n@plt+0xcf0c>
  411358:	ldur	w0, [x29, #-176]
  41135c:	bl	403a30 <abs@plt>
  411360:	mov	w8, wzr
  411364:	subs	w8, w8, w0, uxtb
  411368:	str	w8, [sp, #232]
  41136c:	ldr	w8, [sp, #232]
  411370:	stur	w8, [x29, #-184]
  411374:	ldur	w8, [x29, #-184]
  411378:	stur	w8, [x29, #-4]
  41137c:	mov	w8, #0x1                   	// #1
  411380:	stur	w8, [x29, #-136]
  411384:	b	411d00 <ascii_strlower_n@plt+0xd8a0>
  411388:	ldr	x8, [sp, #352]
  41138c:	ldr	x0, [x8, #184]
  411390:	mov	w1, #0x72                  	// #114
  411394:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411398:	add	x2, x2, #0x432
  41139c:	bl	403e60 <sd_bus_message_enter_container@plt>
  4113a0:	stur	w0, [x29, #-100]
  4113a4:	cmp	w0, #0x0
  4113a8:	cset	w9, le
  4113ac:	tbnz	w9, #0, 4119d0 <ascii_strlower_n@plt+0xd570>
  4113b0:	mov	x8, xzr
  4113b4:	ldr	x9, [sp, #352]
  4113b8:	str	x8, [x9, #32]
  4113bc:	ldr	x0, [x9, #184]
  4113c0:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4113c4:	add	x1, x1, #0xea1
  4113c8:	sub	x2, x29, #0xc4
  4113cc:	sub	x3, x29, #0xc8
  4113d0:	bl	403d00 <sd_bus_message_read@plt>
  4113d4:	stur	w0, [x29, #-100]
  4113d8:	ldur	w10, [x29, #-100]
  4113dc:	cmp	w10, #0x0
  4113e0:	cset	w10, ge  // ge = tcont
  4113e4:	tbnz	w10, #0, 411470 <ascii_strlower_n@plt+0xd010>
  4113e8:	mov	w8, #0x3                   	// #3
  4113ec:	stur	w8, [x29, #-228]
  4113f0:	ldur	w8, [x29, #-100]
  4113f4:	stur	w8, [x29, #-232]
  4113f8:	stur	wzr, [x29, #-236]
  4113fc:	ldur	w0, [x29, #-236]
  411400:	bl	403a10 <log_get_max_level_realm@plt>
  411404:	ldur	w8, [x29, #-228]
  411408:	and	w8, w8, #0x7
  41140c:	cmp	w0, w8
  411410:	b.lt	411440 <ascii_strlower_n@plt+0xcfe0>  // b.tstop
  411414:	ldur	w8, [x29, #-236]
  411418:	ldur	w9, [x29, #-228]
  41141c:	orr	w0, w9, w8, lsl #10
  411420:	ldur	w1, [x29, #-232]
  411424:	ldr	x2, [sp, #344]
  411428:	mov	w3, #0xce                  	// #206
  41142c:	ldr	x4, [sp, #336]
  411430:	ldr	x5, [sp, #328]
  411434:	bl	403a20 <log_internal_realm@plt>
  411438:	str	w0, [sp, #228]
  41143c:	b	411454 <ascii_strlower_n@plt+0xcff4>
  411440:	ldur	w0, [x29, #-232]
  411444:	bl	403a30 <abs@plt>
  411448:	mov	w8, wzr
  41144c:	subs	w8, w8, w0, uxtb
  411450:	str	w8, [sp, #228]
  411454:	ldr	w8, [sp, #228]
  411458:	stur	w8, [x29, #-240]
  41145c:	ldur	w8, [x29, #-240]
  411460:	stur	w8, [x29, #-4]
  411464:	mov	w8, #0x1                   	// #1
  411468:	stur	w8, [x29, #-136]
  41146c:	b	4119a4 <ascii_strlower_n@plt+0xd544>
  411470:	ldr	x8, [sp, #352]
  411474:	ldr	x0, [x8, #184]
  411478:	mov	w1, #0x79                  	// #121
  41147c:	sub	x2, x29, #0xd8
  411480:	sub	x3, x29, #0xe0
  411484:	bl	403ea0 <sd_bus_message_read_array@plt>
  411488:	stur	w0, [x29, #-100]
  41148c:	ldur	w9, [x29, #-100]
  411490:	cmp	w9, #0x0
  411494:	cset	w9, ge  // ge = tcont
  411498:	tbnz	w9, #0, 411524 <ascii_strlower_n@plt+0xd0c4>
  41149c:	mov	w8, #0x3                   	// #3
  4114a0:	stur	w8, [x29, #-244]
  4114a4:	ldur	w8, [x29, #-100]
  4114a8:	stur	w8, [x29, #-248]
  4114ac:	stur	wzr, [x29, #-252]
  4114b0:	ldur	w0, [x29, #-252]
  4114b4:	bl	403a10 <log_get_max_level_realm@plt>
  4114b8:	ldur	w8, [x29, #-244]
  4114bc:	and	w8, w8, #0x7
  4114c0:	cmp	w0, w8
  4114c4:	b.lt	4114f4 <ascii_strlower_n@plt+0xd094>  // b.tstop
  4114c8:	ldur	w8, [x29, #-252]
  4114cc:	ldur	w9, [x29, #-244]
  4114d0:	orr	w0, w9, w8, lsl #10
  4114d4:	ldur	w1, [x29, #-248]
  4114d8:	ldr	x2, [sp, #344]
  4114dc:	mov	w3, #0xd2                  	// #210
  4114e0:	ldr	x4, [sp, #336]
  4114e4:	ldr	x5, [sp, #328]
  4114e8:	bl	403a20 <log_internal_realm@plt>
  4114ec:	str	w0, [sp, #224]
  4114f0:	b	411508 <ascii_strlower_n@plt+0xd0a8>
  4114f4:	ldur	w0, [x29, #-248]
  4114f8:	bl	403a30 <abs@plt>
  4114fc:	mov	w8, wzr
  411500:	subs	w8, w8, w0, uxtb
  411504:	str	w8, [sp, #224]
  411508:	ldr	w8, [sp, #224]
  41150c:	stur	w8, [x29, #-256]
  411510:	ldur	w8, [x29, #-256]
  411514:	stur	w8, [x29, #-4]
  411518:	mov	w8, #0x1                   	// #1
  41151c:	stur	w8, [x29, #-136]
  411520:	b	4119a4 <ascii_strlower_n@plt+0xd544>
  411524:	ldr	x8, [sp, #352]
  411528:	ldr	x0, [x8, #184]
  41152c:	bl	403e80 <sd_bus_message_exit_container@plt>
  411530:	stur	w0, [x29, #-100]
  411534:	ldur	w9, [x29, #-100]
  411538:	cmp	w9, #0x0
  41153c:	cset	w9, ge  // ge = tcont
  411540:	tbnz	w9, #0, 4115cc <ascii_strlower_n@plt+0xd16c>
  411544:	mov	w8, #0x3                   	// #3
  411548:	str	w8, [sp, #492]
  41154c:	ldur	w8, [x29, #-100]
  411550:	str	w8, [sp, #488]
  411554:	str	wzr, [sp, #484]
  411558:	ldr	w0, [sp, #484]
  41155c:	bl	403a10 <log_get_max_level_realm@plt>
  411560:	ldr	w8, [sp, #492]
  411564:	and	w8, w8, #0x7
  411568:	cmp	w0, w8
  41156c:	b.lt	41159c <ascii_strlower_n@plt+0xd13c>  // b.tstop
  411570:	ldr	w8, [sp, #484]
  411574:	ldr	w9, [sp, #492]
  411578:	orr	w0, w9, w8, lsl #10
  41157c:	ldr	w1, [sp, #488]
  411580:	ldr	x2, [sp, #344]
  411584:	mov	w3, #0xd6                  	// #214
  411588:	ldr	x4, [sp, #336]
  41158c:	ldr	x5, [sp, #328]
  411590:	bl	403a20 <log_internal_realm@plt>
  411594:	str	w0, [sp, #220]
  411598:	b	4115b0 <ascii_strlower_n@plt+0xd150>
  41159c:	ldr	w0, [sp, #488]
  4115a0:	bl	403a30 <abs@plt>
  4115a4:	mov	w8, wzr
  4115a8:	subs	w8, w8, w0, uxtb
  4115ac:	str	w8, [sp, #220]
  4115b0:	ldr	w8, [sp, #220]
  4115b4:	str	w8, [sp, #480]
  4115b8:	ldr	w8, [sp, #480]
  4115bc:	stur	w8, [x29, #-4]
  4115c0:	mov	w8, #0x1                   	// #1
  4115c4:	stur	w8, [x29, #-136]
  4115c8:	b	4119a4 <ascii_strlower_n@plt+0xd544>
  4115cc:	mov	w8, #0x0                   	// #0
  4115d0:	strb	w8, [sp, #479]
  4115d4:	ldur	w8, [x29, #-200]
  4115d8:	cmp	w8, #0x2
  4115dc:	str	w8, [sp, #216]
  4115e0:	b.eq	411600 <ascii_strlower_n@plt+0xd1a0>  // b.none
  4115e4:	b	4115e8 <ascii_strlower_n@plt+0xd188>
  4115e8:	ldr	w8, [sp, #216]
  4115ec:	cmp	w8, #0xa
  4115f0:	cset	w9, eq  // eq = none
  4115f4:	eor	w9, w9, #0x1
  4115f8:	tbnz	w9, #0, 41160c <ascii_strlower_n@plt+0xd1ac>
  4115fc:	b	411600 <ascii_strlower_n@plt+0xd1a0>
  411600:	mov	w8, #0x1                   	// #1
  411604:	strb	w8, [sp, #479]
  411608:	b	41160c <ascii_strlower_n@plt+0xd1ac>
  41160c:	ldrb	w8, [sp, #479]
  411610:	and	w8, w8, #0x1
  411614:	strb	w8, [sp, #478]
  411618:	ldrb	w8, [sp, #478]
  41161c:	tbnz	w8, #0, 411704 <ascii_strlower_n@plt+0xd2a4>
  411620:	mov	w8, #0x7                   	// #7
  411624:	str	w8, [sp, #472]
  411628:	str	wzr, [sp, #468]
  41162c:	str	wzr, [sp, #464]
  411630:	ldr	w0, [sp, #464]
  411634:	bl	403a10 <log_get_max_level_realm@plt>
  411638:	ldr	w8, [sp, #472]
  41163c:	and	w8, w8, #0x7
  411640:	cmp	w0, w8
  411644:	b.lt	4116dc <ascii_strlower_n@plt+0xd27c>  // b.tstop
  411648:	ldr	w8, [sp, #464]
  41164c:	ldr	w9, [sp, #472]
  411650:	orr	w0, w9, w8, lsl #10
  411654:	ldr	w1, [sp, #468]
  411658:	ldr	x10, [sp, #352]
  41165c:	ldr	x6, [x10, #200]
  411660:	ldur	w7, [x29, #-200]
  411664:	ldur	w8, [x29, #-200]
  411668:	str	w0, [sp, #212]
  41166c:	mov	w0, w8
  411670:	str	w1, [sp, #208]
  411674:	str	x6, [sp, #200]
  411678:	str	w7, [sp, #196]
  41167c:	bl	403fe0 <af_to_name@plt>
  411680:	str	x0, [sp, #184]
  411684:	cbz	x0, 411694 <ascii_strlower_n@plt+0xd234>
  411688:	ldr	x8, [sp, #184]
  41168c:	str	x8, [sp, #176]
  411690:	b	4116a0 <ascii_strlower_n@plt+0xd240>
  411694:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411698:	add	x8, x8, #0xf68
  41169c:	str	x8, [sp, #176]
  4116a0:	ldr	x8, [sp, #176]
  4116a4:	ldr	w0, [sp, #212]
  4116a8:	ldr	w1, [sp, #208]
  4116ac:	ldr	x2, [sp, #344]
  4116b0:	mov	w3, #0xd9                  	// #217
  4116b4:	ldr	x4, [sp, #336]
  4116b8:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4116bc:	add	x5, x5, #0xf41
  4116c0:	ldr	x6, [sp, #200]
  4116c4:	ldr	w7, [sp, #196]
  4116c8:	mov	x9, sp
  4116cc:	str	x8, [x9]
  4116d0:	bl	403a20 <log_internal_realm@plt>
  4116d4:	str	w0, [sp, #172]
  4116d8:	b	4116f0 <ascii_strlower_n@plt+0xd290>
  4116dc:	ldr	w0, [sp, #468]
  4116e0:	bl	403a30 <abs@plt>
  4116e4:	mov	w8, wzr
  4116e8:	subs	w8, w8, w0, uxtb
  4116ec:	str	w8, [sp, #172]
  4116f0:	ldr	w8, [sp, #172]
  4116f4:	str	w8, [sp, #460]
  4116f8:	mov	w8, #0x4                   	// #4
  4116fc:	stur	w8, [x29, #-136]
  411700:	b	4119a4 <ascii_strlower_n@plt+0xd544>
  411704:	ldr	x8, [sp, #352]
  411708:	ldr	x9, [x8]
  41170c:	ldur	w0, [x29, #-200]
  411710:	str	x9, [sp, #160]
  411714:	bl	40db10 <ascii_strlower_n@plt+0x96b0>
  411718:	ldr	x8, [sp, #160]
  41171c:	cmp	x8, x0
  411720:	b.eq	411810 <ascii_strlower_n@plt+0xd3b0>  // b.none
  411724:	mov	w8, #0x3                   	// #3
  411728:	str	w8, [sp, #456]
  41172c:	str	wzr, [sp, #452]
  411730:	str	wzr, [sp, #448]
  411734:	ldr	w0, [sp, #448]
  411738:	bl	403a10 <log_get_max_level_realm@plt>
  41173c:	ldr	w8, [sp, #456]
  411740:	and	w8, w8, #0x7
  411744:	cmp	w0, w8
  411748:	b.lt	4117e0 <ascii_strlower_n@plt+0xd380>  // b.tstop
  41174c:	ldr	w8, [sp, #448]
  411750:	ldr	w9, [sp, #456]
  411754:	orr	w0, w9, w8, lsl #10
  411758:	ldr	w1, [sp, #452]
  41175c:	ldr	x10, [sp, #352]
  411760:	ldr	x6, [x10, #200]
  411764:	ldr	x7, [x10]
  411768:	ldur	w8, [x29, #-200]
  41176c:	str	w0, [sp, #156]
  411770:	mov	w0, w8
  411774:	str	w1, [sp, #152]
  411778:	str	x6, [sp, #144]
  41177c:	str	x7, [sp, #136]
  411780:	bl	403fe0 <af_to_name@plt>
  411784:	str	x0, [sp, #128]
  411788:	cbz	x0, 411798 <ascii_strlower_n@plt+0xd338>
  41178c:	ldr	x8, [sp, #128]
  411790:	str	x8, [sp, #120]
  411794:	b	4117a4 <ascii_strlower_n@plt+0xd344>
  411798:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41179c:	add	x8, x8, #0xf68
  4117a0:	str	x8, [sp, #120]
  4117a4:	ldr	x8, [sp, #120]
  4117a8:	ldr	w0, [sp, #156]
  4117ac:	ldr	w1, [sp, #152]
  4117b0:	ldr	x2, [sp, #344]
  4117b4:	mov	w3, #0xde                  	// #222
  4117b8:	ldr	x4, [sp, #336]
  4117bc:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4117c0:	add	x5, x5, #0xf70
  4117c4:	ldr	x6, [sp, #144]
  4117c8:	ldr	x7, [sp, #136]
  4117cc:	mov	x9, sp
  4117d0:	str	x8, [x9]
  4117d4:	bl	403a20 <log_internal_realm@plt>
  4117d8:	str	w0, [sp, #116]
  4117dc:	b	4117f4 <ascii_strlower_n@plt+0xd394>
  4117e0:	ldr	w0, [sp, #452]
  4117e4:	bl	403a30 <abs@plt>
  4117e8:	mov	w8, wzr
  4117ec:	subs	w8, w8, w0, uxtb
  4117f0:	str	w8, [sp, #116]
  4117f4:	ldr	w8, [sp, #116]
  4117f8:	str	w8, [sp, #444]
  4117fc:	mov	w8, #0xffffffea            	// #-22
  411800:	stur	w8, [x29, #-4]
  411804:	mov	w8, #0x1                   	// #1
  411808:	stur	w8, [x29, #-136]
  41180c:	b	4119a4 <ascii_strlower_n@plt+0xd544>
  411810:	ldur	w0, [x29, #-200]
  411814:	ldr	x8, [sp, #352]
  411818:	ldr	x1, [x8, #8]
  41181c:	ldur	w2, [x29, #-196]
  411820:	sub	x3, x29, #0xc0
  411824:	bl	403fc0 <in_addr_ifindex_to_string@plt>
  411828:	stur	w0, [x29, #-100]
  41182c:	ldur	w9, [x29, #-100]
  411830:	cmp	w9, #0x0
  411834:	cset	w9, ge  // ge = tcont
  411838:	tbnz	w9, #0, 4118d0 <ascii_strlower_n@plt+0xd470>
  41183c:	mov	w8, #0x3                   	// #3
  411840:	str	w8, [sp, #440]
  411844:	ldur	w8, [x29, #-100]
  411848:	str	w8, [sp, #436]
  41184c:	str	wzr, [sp, #432]
  411850:	ldr	w0, [sp, #432]
  411854:	bl	403a10 <log_get_max_level_realm@plt>
  411858:	ldr	w8, [sp, #440]
  41185c:	and	w8, w8, #0x7
  411860:	cmp	w0, w8
  411864:	b.lt	4118a0 <ascii_strlower_n@plt+0xd440>  // b.tstop
  411868:	ldr	w8, [sp, #432]
  41186c:	ldr	w9, [sp, #440]
  411870:	orr	w0, w9, w8, lsl #10
  411874:	ldr	w1, [sp, #436]
  411878:	ldr	x10, [sp, #352]
  41187c:	ldr	x6, [x10, #200]
  411880:	ldr	x2, [sp, #344]
  411884:	mov	w3, #0xe4                  	// #228
  411888:	ldr	x4, [sp, #336]
  41188c:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411890:	add	x5, x5, #0xfb8
  411894:	bl	403a20 <log_internal_realm@plt>
  411898:	str	w0, [sp, #112]
  41189c:	b	4118b4 <ascii_strlower_n@plt+0xd454>
  4118a0:	ldr	w0, [sp, #436]
  4118a4:	bl	403a30 <abs@plt>
  4118a8:	mov	w8, wzr
  4118ac:	subs	w8, w8, w0, uxtb
  4118b0:	str	w8, [sp, #112]
  4118b4:	ldr	w8, [sp, #112]
  4118b8:	str	w8, [sp, #428]
  4118bc:	ldr	w8, [sp, #428]
  4118c0:	stur	w8, [x29, #-4]
  4118c4:	mov	w8, #0x1                   	// #1
  4118c8:	stur	w8, [x29, #-136]
  4118cc:	b	4119a4 <ascii_strlower_n@plt+0xd544>
  4118d0:	ldr	x8, [sp, #352]
  4118d4:	ldr	x0, [x8, #200]
  4118d8:	bl	403f70 <strlen@plt>
  4118dc:	ldur	w9, [x29, #-76]
  4118e0:	str	w0, [sp, #108]
  4118e4:	cbnz	w9, 4118f8 <ascii_strlower_n@plt+0xd498>
  4118e8:	ldr	x8, [sp, #352]
  4118ec:	ldr	x9, [x8, #200]
  4118f0:	str	x9, [sp, #96]
  4118f4:	b	411904 <ascii_strlower_n@plt+0xd4a4>
  4118f8:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4118fc:	add	x8, x8, #0x7e4
  411900:	str	x8, [sp, #96]
  411904:	ldr	x8, [sp, #96]
  411908:	ldur	w9, [x29, #-76]
  41190c:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411910:	add	x10, x10, #0xc37
  411914:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411918:	add	x11, x11, #0xeb9
  41191c:	cmp	w9, #0x0
  411920:	csel	x3, x11, x10, eq  // eq = none
  411924:	str	x8, [sp, #88]
  411928:	str	x3, [sp, #80]
  41192c:	bl	408738 <ascii_strlower_n@plt+0x42d8>
  411930:	ldr	x8, [sp, #352]
  411934:	ldr	x5, [x8, #32]
  411938:	str	x0, [sp, #72]
  41193c:	str	x5, [sp, #64]
  411940:	bl	40877c <ascii_strlower_n@plt+0x431c>
  411944:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411948:	add	x8, x8, #0xeac
  41194c:	str	x0, [sp, #56]
  411950:	mov	x0, x8
  411954:	ldr	w1, [sp, #108]
  411958:	ldr	x2, [sp, #88]
  41195c:	ldr	x3, [sp, #80]
  411960:	ldr	x4, [sp, #72]
  411964:	ldr	x5, [sp, #64]
  411968:	ldr	x6, [sp, #56]
  41196c:	bl	403ab0 <printf@plt>
  411970:	stur	w0, [x29, #-204]
  411974:	ldur	w0, [x29, #-204]
  411978:	ldur	w1, [x29, #-196]
  41197c:	bl	4122cc <ascii_strlower_n@plt+0xde6c>
  411980:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  411984:	add	x8, x8, #0x1e8
  411988:	ldr	x1, [x8]
  41198c:	mov	w0, #0xa                   	// #10
  411990:	bl	403db0 <fputc@plt>
  411994:	ldur	w9, [x29, #-76]
  411998:	add	w9, w9, #0x1
  41199c:	stur	w9, [x29, #-76]
  4119a0:	stur	wzr, [x29, #-136]
  4119a4:	sub	x0, x29, #0xc0
  4119a8:	bl	405970 <ascii_strlower_n@plt+0x1510>
  4119ac:	ldur	w8, [x29, #-136]
  4119b0:	str	w8, [sp, #52]
  4119b4:	cbz	w8, 4119cc <ascii_strlower_n@plt+0xd56c>
  4119b8:	b	4119bc <ascii_strlower_n@plt+0xd55c>
  4119bc:	ldr	w8, [sp, #52]
  4119c0:	cmp	w8, #0x4
  4119c4:	b.eq	411388 <ascii_strlower_n@plt+0xcf28>  // b.none
  4119c8:	b	411d00 <ascii_strlower_n@plt+0xd8a0>
  4119cc:	b	411388 <ascii_strlower_n@plt+0xcf28>
  4119d0:	ldur	w8, [x29, #-100]
  4119d4:	cmp	w8, #0x0
  4119d8:	cset	w8, ge  // ge = tcont
  4119dc:	tbnz	w8, #0, 411a68 <ascii_strlower_n@plt+0xd608>
  4119e0:	mov	w8, #0x3                   	// #3
  4119e4:	str	w8, [sp, #424]
  4119e8:	ldur	w8, [x29, #-100]
  4119ec:	str	w8, [sp, #420]
  4119f0:	str	wzr, [sp, #416]
  4119f4:	ldr	w0, [sp, #416]
  4119f8:	bl	403a10 <log_get_max_level_realm@plt>
  4119fc:	ldr	w8, [sp, #424]
  411a00:	and	w8, w8, #0x7
  411a04:	cmp	w0, w8
  411a08:	b.lt	411a38 <ascii_strlower_n@plt+0xd5d8>  // b.tstop
  411a0c:	ldr	w8, [sp, #416]
  411a10:	ldr	w9, [sp, #424]
  411a14:	orr	w0, w9, w8, lsl #10
  411a18:	ldr	w1, [sp, #420]
  411a1c:	ldr	x2, [sp, #344]
  411a20:	mov	w3, #0xf0                  	// #240
  411a24:	ldr	x4, [sp, #336]
  411a28:	ldr	x5, [sp, #328]
  411a2c:	bl	403a20 <log_internal_realm@plt>
  411a30:	str	w0, [sp, #48]
  411a34:	b	411a4c <ascii_strlower_n@plt+0xd5ec>
  411a38:	ldr	w0, [sp, #420]
  411a3c:	bl	403a30 <abs@plt>
  411a40:	mov	w8, wzr
  411a44:	subs	w8, w8, w0, uxtb
  411a48:	str	w8, [sp, #48]
  411a4c:	ldr	w8, [sp, #48]
  411a50:	str	w8, [sp, #412]
  411a54:	ldr	w8, [sp, #412]
  411a58:	stur	w8, [x29, #-4]
  411a5c:	mov	w8, #0x1                   	// #1
  411a60:	stur	w8, [x29, #-136]
  411a64:	b	411d00 <ascii_strlower_n@plt+0xd8a0>
  411a68:	ldr	x8, [sp, #352]
  411a6c:	ldr	x0, [x8, #184]
  411a70:	bl	403e80 <sd_bus_message_exit_container@plt>
  411a74:	stur	w0, [x29, #-100]
  411a78:	ldur	w9, [x29, #-100]
  411a7c:	cmp	w9, #0x0
  411a80:	cset	w9, ge  // ge = tcont
  411a84:	tbnz	w9, #0, 411b10 <ascii_strlower_n@plt+0xd6b0>
  411a88:	mov	w8, #0x3                   	// #3
  411a8c:	str	w8, [sp, #408]
  411a90:	ldur	w8, [x29, #-100]
  411a94:	str	w8, [sp, #404]
  411a98:	str	wzr, [sp, #400]
  411a9c:	ldr	w0, [sp, #400]
  411aa0:	bl	403a10 <log_get_max_level_realm@plt>
  411aa4:	ldr	w8, [sp, #408]
  411aa8:	and	w8, w8, #0x7
  411aac:	cmp	w0, w8
  411ab0:	b.lt	411ae0 <ascii_strlower_n@plt+0xd680>  // b.tstop
  411ab4:	ldr	w8, [sp, #400]
  411ab8:	ldr	w9, [sp, #408]
  411abc:	orr	w0, w9, w8, lsl #10
  411ac0:	ldr	w1, [sp, #404]
  411ac4:	ldr	x2, [sp, #344]
  411ac8:	mov	w3, #0xf4                  	// #244
  411acc:	ldr	x4, [sp, #336]
  411ad0:	ldr	x5, [sp, #328]
  411ad4:	bl	403a20 <log_internal_realm@plt>
  411ad8:	str	w0, [sp, #44]
  411adc:	b	411af4 <ascii_strlower_n@plt+0xd694>
  411ae0:	ldr	w0, [sp, #404]
  411ae4:	bl	403a30 <abs@plt>
  411ae8:	mov	w8, wzr
  411aec:	subs	w8, w8, w0, uxtb
  411af0:	str	w8, [sp, #44]
  411af4:	ldr	w8, [sp, #44]
  411af8:	str	w8, [sp, #396]
  411afc:	ldr	w8, [sp, #396]
  411b00:	stur	w8, [x29, #-4]
  411b04:	mov	w8, #0x1                   	// #1
  411b08:	stur	w8, [x29, #-136]
  411b0c:	b	411d00 <ascii_strlower_n@plt+0xd8a0>
  411b10:	ldr	x8, [sp, #352]
  411b14:	ldr	x0, [x8, #184]
  411b18:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411b1c:	add	x1, x1, #0xfdb
  411b20:	sub	x2, x29, #0x48
  411b24:	sub	x3, x29, #0x58
  411b28:	bl	403d00 <sd_bus_message_read@plt>
  411b2c:	stur	w0, [x29, #-100]
  411b30:	ldur	w9, [x29, #-100]
  411b34:	cmp	w9, #0x0
  411b38:	cset	w9, ge  // ge = tcont
  411b3c:	tbnz	w9, #0, 411bc8 <ascii_strlower_n@plt+0xd768>
  411b40:	mov	w8, #0x3                   	// #3
  411b44:	str	w8, [sp, #392]
  411b48:	ldur	w8, [x29, #-100]
  411b4c:	str	w8, [sp, #388]
  411b50:	str	wzr, [sp, #384]
  411b54:	ldr	w0, [sp, #384]
  411b58:	bl	403a10 <log_get_max_level_realm@plt>
  411b5c:	ldr	w8, [sp, #392]
  411b60:	and	w8, w8, #0x7
  411b64:	cmp	w0, w8
  411b68:	b.lt	411b98 <ascii_strlower_n@plt+0xd738>  // b.tstop
  411b6c:	ldr	w8, [sp, #384]
  411b70:	ldr	w9, [sp, #392]
  411b74:	orr	w0, w9, w8, lsl #10
  411b78:	ldr	w1, [sp, #388]
  411b7c:	ldr	x2, [sp, #344]
  411b80:	mov	w3, #0xf8                  	// #248
  411b84:	ldr	x4, [sp, #336]
  411b88:	ldr	x5, [sp, #328]
  411b8c:	bl	403a20 <log_internal_realm@plt>
  411b90:	str	w0, [sp, #40]
  411b94:	b	411bac <ascii_strlower_n@plt+0xd74c>
  411b98:	ldr	w0, [sp, #388]
  411b9c:	bl	403a30 <abs@plt>
  411ba0:	mov	w8, wzr
  411ba4:	subs	w8, w8, w0, uxtb
  411ba8:	str	w8, [sp, #40]
  411bac:	ldr	w8, [sp, #40]
  411bb0:	str	w8, [sp, #380]
  411bb4:	ldr	w8, [sp, #380]
  411bb8:	stur	w8, [x29, #-4]
  411bbc:	mov	w8, #0x1                   	// #1
  411bc0:	stur	w8, [x29, #-136]
  411bc4:	b	411d00 <ascii_strlower_n@plt+0xd8a0>
  411bc8:	ldr	x8, [sp, #352]
  411bcc:	ldr	x0, [x8, #200]
  411bd0:	ldr	x1, [x8, #152]
  411bd4:	bl	403bc0 <strcmp@plt>
  411bd8:	cbz	w0, 411c4c <ascii_strlower_n@plt+0xd7ec>
  411bdc:	ldr	x8, [sp, #352]
  411be0:	ldr	x0, [x8, #200]
  411be4:	bl	403f70 <strlen@plt>
  411be8:	ldur	w9, [x29, #-76]
  411bec:	str	w0, [sp, #36]
  411bf0:	cbnz	w9, 411c04 <ascii_strlower_n@plt+0xd7a4>
  411bf4:	ldr	x8, [sp, #352]
  411bf8:	ldr	x9, [x8, #200]
  411bfc:	str	x9, [sp, #24]
  411c00:	b	411c10 <ascii_strlower_n@plt+0xd7b0>
  411c04:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  411c08:	add	x8, x8, #0x7e4
  411c0c:	str	x8, [sp, #24]
  411c10:	ldr	x8, [sp, #24]
  411c14:	ldur	w9, [x29, #-76]
  411c18:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411c1c:	add	x10, x10, #0xc37
  411c20:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411c24:	add	x11, x11, #0xeb9
  411c28:	cmp	w9, #0x0
  411c2c:	csel	x3, x11, x10, eq  // eq = none
  411c30:	ldr	x10, [sp, #352]
  411c34:	ldr	x4, [x10, #152]
  411c38:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411c3c:	add	x0, x0, #0xfde
  411c40:	ldr	w1, [sp, #36]
  411c44:	mov	x2, x8
  411c48:	bl	403ab0 <printf@plt>
  411c4c:	ldur	w8, [x29, #-76]
  411c50:	cbnz	w8, 411ce4 <ascii_strlower_n@plt+0xd884>
  411c54:	mov	w8, #0x3                   	// #3
  411c58:	str	w8, [sp, #376]
  411c5c:	str	wzr, [sp, #372]
  411c60:	str	wzr, [sp, #368]
  411c64:	ldr	w0, [sp, #368]
  411c68:	bl	403a10 <log_get_max_level_realm@plt>
  411c6c:	ldr	w8, [sp, #376]
  411c70:	and	w8, w8, #0x7
  411c74:	cmp	w0, w8
  411c78:	b.lt	411cb4 <ascii_strlower_n@plt+0xd854>  // b.tstop
  411c7c:	ldr	w8, [sp, #368]
  411c80:	ldr	w9, [sp, #376]
  411c84:	orr	w0, w9, w8, lsl #10
  411c88:	ldr	w1, [sp, #372]
  411c8c:	ldr	x10, [sp, #352]
  411c90:	ldr	x6, [x10, #200]
  411c94:	ldr	x2, [sp, #344]
  411c98:	mov	w3, #0x100                 	// #256
  411c9c:	ldr	x4, [sp, #336]
  411ca0:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411ca4:	add	x5, x5, #0xfea
  411ca8:	bl	403a20 <log_internal_realm@plt>
  411cac:	str	w0, [sp, #20]
  411cb0:	b	411cc8 <ascii_strlower_n@plt+0xd868>
  411cb4:	ldr	w0, [sp, #372]
  411cb8:	bl	403a30 <abs@plt>
  411cbc:	mov	w8, wzr
  411cc0:	subs	w8, w8, w0, uxtb
  411cc4:	str	w8, [sp, #20]
  411cc8:	ldr	w8, [sp, #20]
  411ccc:	str	w8, [sp, #364]
  411cd0:	mov	w8, #0xfffffffd            	// #-3
  411cd4:	stur	w8, [x29, #-4]
  411cd8:	mov	w8, #0x1                   	// #1
  411cdc:	stur	w8, [x29, #-136]
  411ce0:	b	411d00 <ascii_strlower_n@plt+0xd8a0>
  411ce4:	ldr	x8, [sp, #352]
  411ce8:	ldr	x0, [x8, #136]
  411cec:	ldr	x1, [x8, #128]
  411cf0:	bl	412074 <ascii_strlower_n@plt+0xdc14>
  411cf4:	stur	wzr, [x29, #-4]
  411cf8:	mov	w9, #0x1                   	// #1
  411cfc:	stur	w9, [x29, #-136]
  411d00:	sub	x0, x29, #0x40
  411d04:	bl	403d20 <sd_bus_error_free@plt>
  411d08:	sub	x0, x29, #0x28
  411d0c:	bl	40d468 <ascii_strlower_n@plt+0x9008>
  411d10:	sub	x0, x29, #0x20
  411d14:	bl	40d468 <ascii_strlower_n@plt+0x9008>
  411d18:	ldur	w0, [x29, #-4]
  411d1c:	add	sp, sp, #0x2f0
  411d20:	ldr	x28, [sp, #16]
  411d24:	ldp	x29, x30, [sp], #32
  411d28:	ret
  411d2c:	sub	sp, sp, #0x10
  411d30:	str	x0, [sp, #8]
  411d34:	ldr	x0, [sp, #8]
  411d38:	add	sp, sp, #0x10
  411d3c:	ret
  411d40:	sub	sp, sp, #0xa0
  411d44:	stp	x29, x30, [sp, #144]
  411d48:	add	x29, sp, #0x90
  411d4c:	mov	x8, xzr
  411d50:	mov	w9, wzr
  411d54:	mov	x3, #0xffff                	// #65535
  411d58:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  411d5c:	add	x10, x10, #0x6f4
  411d60:	add	x10, x10, #0x3
  411d64:	adrp	x11, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411d68:	add	x11, x11, #0xb94
  411d6c:	sub	x12, x29, #0x30
  411d70:	stur	x0, [x29, #-16]
  411d74:	stur	x1, [x29, #-24]
  411d78:	stur	w2, [x29, #-28]
  411d7c:	stur	x8, [x29, #-40]
  411d80:	stur	x8, [x29, #-48]
  411d84:	mov	x0, x12
  411d88:	mov	w1, w9
  411d8c:	mov	x2, x8
  411d90:	str	x10, [sp, #16]
  411d94:	str	x11, [sp, #8]
  411d98:	bl	415ed8 <ascii_strlower_n@plt+0x11a78>
  411d9c:	stur	w0, [x29, #-52]
  411da0:	ldur	w9, [x29, #-52]
  411da4:	cmp	w9, #0x0
  411da8:	cset	w9, ge  // ge = tcont
  411dac:	tbnz	w9, #0, 411dd8 <ascii_strlower_n@plt+0xd978>
  411db0:	mov	w8, wzr
  411db4:	mov	w0, w8
  411db8:	ldr	x1, [sp, #16]
  411dbc:	mov	w2, #0x175                 	// #373
  411dc0:	ldr	x3, [sp, #8]
  411dc4:	bl	403a90 <log_oom_internal@plt>
  411dc8:	stur	w0, [x29, #-4]
  411dcc:	mov	w8, #0x1                   	// #1
  411dd0:	stur	w8, [x29, #-56]
  411dd4:	b	412054 <ascii_strlower_n@plt+0xdbf4>
  411dd8:	ldur	x8, [x29, #-48]
  411ddc:	ldrb	w9, [x8, #160]
  411de0:	and	w9, w9, #0xfffffffb
  411de4:	orr	w9, w9, #0x4
  411de8:	strb	w9, [x8, #160]
  411dec:	ldur	x0, [x29, #-48]
  411df0:	ldur	x1, [x29, #-16]
  411df4:	ldur	x2, [x29, #-24]
  411df8:	mov	x8, xzr
  411dfc:	mov	x3, x8
  411e00:	bl	416ed8 <ascii_strlower_n@plt+0x12a78>
  411e04:	stur	w0, [x29, #-52]
  411e08:	ldur	w9, [x29, #-52]
  411e0c:	cmp	w9, #0x0
  411e10:	cset	w9, ge  // ge = tcont
  411e14:	tbnz	w9, #0, 411e40 <ascii_strlower_n@plt+0xd9e0>
  411e18:	mov	w8, wzr
  411e1c:	mov	w0, w8
  411e20:	ldr	x1, [sp, #16]
  411e24:	mov	w2, #0x17b                 	// #379
  411e28:	ldr	x3, [sp, #8]
  411e2c:	bl	403a90 <log_oom_internal@plt>
  411e30:	stur	w0, [x29, #-4]
  411e34:	mov	w8, #0x1                   	// #1
  411e38:	stur	w8, [x29, #-56]
  411e3c:	b	412054 <ascii_strlower_n@plt+0xdbf4>
  411e40:	ldur	x0, [x29, #-48]
  411e44:	sub	x1, x29, #0x28
  411e48:	mov	x8, xzr
  411e4c:	mov	x2, x8
  411e50:	mov	x3, x8
  411e54:	bl	41ae10 <ascii_strlower_n@plt+0x169b0>
  411e58:	stur	w0, [x29, #-52]
  411e5c:	ldur	w9, [x29, #-52]
  411e60:	cmp	w9, #0x0
  411e64:	cset	w9, ge  // ge = tcont
  411e68:	tbnz	w9, #0, 411ef8 <ascii_strlower_n@plt+0xda98>
  411e6c:	mov	w8, #0x3                   	// #3
  411e70:	stur	w8, [x29, #-60]
  411e74:	ldur	w8, [x29, #-52]
  411e78:	stur	w8, [x29, #-64]
  411e7c:	stur	wzr, [x29, #-68]
  411e80:	ldur	w0, [x29, #-68]
  411e84:	bl	403a10 <log_get_max_level_realm@plt>
  411e88:	ldur	w8, [x29, #-60]
  411e8c:	and	w8, w8, #0x7
  411e90:	cmp	w0, w8
  411e94:	b.lt	411ec8 <ascii_strlower_n@plt+0xda68>  // b.tstop
  411e98:	ldur	w8, [x29, #-68]
  411e9c:	ldur	w9, [x29, #-60]
  411ea0:	orr	w0, w9, w8, lsl #10
  411ea4:	ldur	w1, [x29, #-64]
  411ea8:	ldr	x2, [sp, #16]
  411eac:	mov	w3, #0x17f                 	// #383
  411eb0:	ldr	x4, [sp, #8]
  411eb4:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411eb8:	add	x5, x5, #0xba5
  411ebc:	bl	403a20 <log_internal_realm@plt>
  411ec0:	str	w0, [sp, #4]
  411ec4:	b	411edc <ascii_strlower_n@plt+0xda7c>
  411ec8:	ldur	w0, [x29, #-64]
  411ecc:	bl	403a30 <abs@plt>
  411ed0:	mov	w8, wzr
  411ed4:	subs	w8, w8, w0, uxtb
  411ed8:	str	w8, [sp, #4]
  411edc:	ldr	w8, [sp, #4]
  411ee0:	str	w8, [sp, #72]
  411ee4:	ldr	w8, [sp, #72]
  411ee8:	stur	w8, [x29, #-4]
  411eec:	mov	w8, #0x1                   	// #1
  411ef0:	stur	w8, [x29, #-56]
  411ef4:	b	412054 <ascii_strlower_n@plt+0xdbf4>
  411ef8:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  411efc:	add	x8, x8, #0x190
  411f00:	ldr	w9, [x8]
  411f04:	cmp	w9, #0x1
  411f08:	b.ne	411fd8 <ascii_strlower_n@plt+0xdb78>  // b.any
  411f0c:	ldur	x0, [x29, #-40]
  411f10:	add	x1, sp, #0x40
  411f14:	bl	4231a4 <ascii_strlower_n@plt+0x1ed44>
  411f18:	str	x0, [sp, #56]
  411f1c:	ldr	x8, [sp, #56]
  411f20:	cmp	x8, #0x0
  411f24:	cset	w9, ge  // ge = tcont
  411f28:	tbnz	w9, #0, 411fb8 <ascii_strlower_n@plt+0xdb58>
  411f2c:	mov	w8, #0x3                   	// #3
  411f30:	str	w8, [sp, #52]
  411f34:	ldr	x9, [sp, #56]
  411f38:	str	w9, [sp, #48]
  411f3c:	str	wzr, [sp, #44]
  411f40:	ldr	w0, [sp, #44]
  411f44:	bl	403a10 <log_get_max_level_realm@plt>
  411f48:	ldr	w8, [sp, #52]
  411f4c:	and	w8, w8, #0x7
  411f50:	cmp	w0, w8
  411f54:	b.lt	411f88 <ascii_strlower_n@plt+0xdb28>  // b.tstop
  411f58:	ldr	w8, [sp, #44]
  411f5c:	ldr	w9, [sp, #52]
  411f60:	orr	w0, w9, w8, lsl #10
  411f64:	ldr	w1, [sp, #48]
  411f68:	ldr	x2, [sp, #16]
  411f6c:	mov	w3, #0x187                 	// #391
  411f70:	ldr	x4, [sp, #8]
  411f74:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  411f78:	add	x5, x5, #0xbbc
  411f7c:	bl	403a20 <log_internal_realm@plt>
  411f80:	str	w0, [sp]
  411f84:	b	411f9c <ascii_strlower_n@plt+0xdb3c>
  411f88:	ldr	w0, [sp, #48]
  411f8c:	bl	403a30 <abs@plt>
  411f90:	mov	w8, wzr
  411f94:	subs	w8, w8, w0, uxtb
  411f98:	str	w8, [sp]
  411f9c:	ldr	w8, [sp]
  411fa0:	str	w8, [sp, #40]
  411fa4:	ldr	w8, [sp, #40]
  411fa8:	stur	w8, [x29, #-4]
  411fac:	mov	w8, #0x1                   	// #1
  411fb0:	stur	w8, [x29, #-56]
  411fb4:	b	412054 <ascii_strlower_n@plt+0xdbf4>
  411fb8:	ldr	x0, [sp, #64]
  411fbc:	ldr	x2, [sp, #56]
  411fc0:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  411fc4:	add	x8, x8, #0x1e8
  411fc8:	ldr	x3, [x8]
  411fcc:	mov	x1, #0x1                   	// #1
  411fd0:	bl	403f40 <fwrite@plt>
  411fd4:	b	412048 <ascii_strlower_n@plt+0xdbe8>
  411fd8:	ldur	x0, [x29, #-40]
  411fdc:	bl	42175c <ascii_strlower_n@plt+0x1d2fc>
  411fe0:	str	x0, [sp, #32]
  411fe4:	ldr	x8, [sp, #32]
  411fe8:	cbnz	x8, 412014 <ascii_strlower_n@plt+0xdbb4>
  411fec:	mov	w8, wzr
  411ff0:	mov	w0, w8
  411ff4:	ldr	x1, [sp, #16]
  411ff8:	mov	w2, #0x18f                 	// #399
  411ffc:	ldr	x3, [sp, #8]
  412000:	bl	403a90 <log_oom_internal@plt>
  412004:	stur	w0, [x29, #-4]
  412008:	mov	w8, #0x1                   	// #1
  41200c:	stur	w8, [x29, #-56]
  412010:	b	412054 <ascii_strlower_n@plt+0xdbf4>
  412014:	ldr	x1, [sp, #32]
  412018:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41201c:	add	x0, x0, #0xbcf
  412020:	bl	403ab0 <printf@plt>
  412024:	str	w0, [sp, #28]
  412028:	ldr	w0, [sp, #28]
  41202c:	ldur	w1, [x29, #-28]
  412030:	bl	4122cc <ascii_strlower_n@plt+0xde6c>
  412034:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  412038:	add	x8, x8, #0x1e8
  41203c:	ldr	x1, [x8]
  412040:	mov	w0, #0xa                   	// #10
  412044:	bl	403db0 <fputc@plt>
  412048:	stur	wzr, [x29, #-4]
  41204c:	mov	w8, #0x1                   	// #1
  412050:	stur	w8, [x29, #-56]
  412054:	sub	x0, x29, #0x30
  412058:	bl	412298 <ascii_strlower_n@plt+0xde38>
  41205c:	sub	x0, x29, #0x28
  412060:	bl	412264 <ascii_strlower_n@plt+0xde04>
  412064:	ldur	w0, [x29, #-4]
  412068:	ldp	x29, x30, [sp, #144]
  41206c:	add	sp, sp, #0xa0
  412070:	ret
  412074:	sub	sp, sp, #0x80
  412078:	stp	x29, x30, [sp, #112]
  41207c:	add	x29, sp, #0x70
  412080:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  412084:	add	x8, x8, #0x18
  412088:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  41208c:	add	x9, x9, #0x7e4
  412090:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  412094:	add	x10, x10, #0x6f4
  412098:	add	x2, x10, #0x3
  41209c:	stur	x0, [x29, #-8]
  4120a0:	stur	x1, [x29, #-16]
  4120a4:	ldrb	w11, [x8]
  4120a8:	str	x9, [sp, #48]
  4120ac:	str	x2, [sp, #40]
  4120b0:	tbnz	w11, #0, 4120b8 <ascii_strlower_n@plt+0xdc58>
  4120b4:	b	412214 <ascii_strlower_n@plt+0xddb4>
  4120b8:	ldur	x8, [x29, #-8]
  4120bc:	cbnz	x8, 4120c4 <ascii_strlower_n@plt+0xdc64>
  4120c0:	b	412214 <ascii_strlower_n@plt+0xddb4>
  4120c4:	bl	412414 <ascii_strlower_n@plt+0xdfb4>
  4120c8:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4120cc:	add	x8, x8, #0xc47
  4120d0:	str	x0, [sp, #32]
  4120d4:	mov	x0, x8
  4120d8:	ldr	x1, [sp, #32]
  4120dc:	bl	403ab0 <printf@plt>
  4120e0:	ldur	x8, [x29, #-8]
  4120e4:	cbz	x8, 41215c <ascii_strlower_n@plt+0xdcfc>
  4120e8:	ldur	x8, [x29, #-8]
  4120ec:	adrp	x9, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4120f0:	add	x9, x9, #0x24b
  4120f4:	tst	x8, #0x1
  4120f8:	ldr	x8, [sp, #48]
  4120fc:	csel	x1, x9, x8, ne  // ne = any
  412100:	ldur	x9, [x29, #-8]
  412104:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412108:	add	x10, x10, #0x250
  41210c:	tst	x9, #0x2
  412110:	csel	x2, x10, x8, ne  // ne = any
  412114:	ldur	x9, [x29, #-8]
  412118:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41211c:	add	x10, x10, #0x25c
  412120:	tst	x9, #0x4
  412124:	csel	x3, x10, x8, ne  // ne = any
  412128:	ldur	x9, [x29, #-8]
  41212c:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412130:	add	x10, x10, #0x268
  412134:	tst	x9, #0x8
  412138:	csel	x4, x10, x8, ne  // ne = any
  41213c:	ldur	x9, [x29, #-8]
  412140:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412144:	add	x10, x10, #0x273
  412148:	tst	x9, #0x10
  41214c:	csel	x5, x10, x8, ne  // ne = any
  412150:	adrp	x0, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412154:	add	x0, x0, #0xc66
  412158:	bl	403ab0 <printf@plt>
  41215c:	ldur	x2, [x29, #-16]
  412160:	sub	x0, x29, #0x36
  412164:	mov	x1, #0x26                  	// #38
  412168:	mov	x3, #0x64                  	// #100
  41216c:	bl	403ff0 <format_timespan@plt>
  412170:	cmp	x0, #0x0
  412174:	cset	w8, ne  // ne = any
  412178:	mov	w9, #0x1                   	// #1
  41217c:	eor	w8, w8, #0x1
  412180:	eor	w8, w8, w9
  412184:	eor	w8, w8, w9
  412188:	and	w8, w8, #0x1
  41218c:	mov	w0, w8
  412190:	sxtw	x10, w0
  412194:	cbz	x10, 4121bc <ascii_strlower_n@plt+0xdd5c>
  412198:	mov	w8, wzr
  41219c:	mov	w0, w8
  4121a0:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4121a4:	add	x1, x1, #0xc7a
  4121a8:	ldr	x2, [sp, #40]
  4121ac:	mov	w3, #0x87                  	// #135
  4121b0:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4121b4:	add	x4, x4, #0xcae
  4121b8:	bl	4039d0 <log_assert_failed_realm@plt>
  4121bc:	bl	40877c <ascii_strlower_n@plt+0x431c>
  4121c0:	str	x0, [sp, #24]
  4121c4:	bl	412414 <ascii_strlower_n@plt+0xdfb4>
  4121c8:	ldur	x8, [x29, #-8]
  4121cc:	tst	x8, #0x200
  4121d0:	cset	w9, ne  // ne = any
  4121d4:	and	w9, w9, #0x1
  4121d8:	str	x0, [sp, #16]
  4121dc:	mov	w0, w9
  4121e0:	bl	40d600 <ascii_strlower_n@plt+0x91a0>
  4121e4:	str	x0, [sp, #8]
  4121e8:	bl	40877c <ascii_strlower_n@plt+0x431c>
  4121ec:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4121f0:	add	x8, x8, #0xcd2
  4121f4:	str	x0, [sp]
  4121f8:	mov	x0, x8
  4121fc:	sub	x1, x29, #0x36
  412200:	ldr	x2, [sp, #24]
  412204:	ldr	x3, [sp, #16]
  412208:	ldr	x4, [sp, #8]
  41220c:	ldr	x5, [sp]
  412210:	bl	403ab0 <printf@plt>
  412214:	ldp	x29, x30, [sp, #112]
  412218:	add	sp, sp, #0x80
  41221c:	ret
  412220:	sub	sp, sp, #0x20
  412224:	stp	x29, x30, [sp, #16]
  412228:	add	x29, sp, #0x10
  41222c:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412230:	add	x8, x8, #0xcfe
  412234:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  412238:	add	x9, x9, #0x7e4
  41223c:	str	x8, [sp, #8]
  412240:	str	x9, [sp]
  412244:	bl	403ca0 <colors_enabled@plt>
  412248:	tst	w0, #0x1
  41224c:	ldr	x8, [sp, #8]
  412250:	ldr	x9, [sp]
  412254:	csel	x0, x8, x9, ne  // ne = any
  412258:	ldp	x29, x30, [sp, #16]
  41225c:	add	sp, sp, #0x20
  412260:	ret
  412264:	sub	sp, sp, #0x20
  412268:	stp	x29, x30, [sp, #16]
  41226c:	add	x29, sp, #0x10
  412270:	str	x0, [sp, #8]
  412274:	ldr	x8, [sp, #8]
  412278:	ldr	x8, [x8]
  41227c:	cbz	x8, 41228c <ascii_strlower_n@plt+0xde2c>
  412280:	ldr	x8, [sp, #8]
  412284:	ldr	x0, [x8]
  412288:	bl	41fed8 <ascii_strlower_n@plt+0x1ba78>
  41228c:	ldp	x29, x30, [sp, #16]
  412290:	add	sp, sp, #0x20
  412294:	ret
  412298:	sub	sp, sp, #0x20
  41229c:	stp	x29, x30, [sp, #16]
  4122a0:	add	x29, sp, #0x10
  4122a4:	str	x0, [sp, #8]
  4122a8:	ldr	x8, [sp, #8]
  4122ac:	ldr	x8, [x8]
  4122b0:	cbz	x8, 4122c0 <ascii_strlower_n@plt+0xde60>
  4122b4:	ldr	x8, [sp, #8]
  4122b8:	ldr	x0, [x8]
  4122bc:	bl	4165f8 <ascii_strlower_n@plt+0x12198>
  4122c0:	ldp	x29, x30, [sp, #16]
  4122c4:	add	sp, sp, #0x20
  4122c8:	ret
  4122cc:	sub	sp, sp, #0x70
  4122d0:	stp	x29, x30, [sp, #96]
  4122d4:	add	x29, sp, #0x60
  4122d8:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4122dc:	add	x8, x8, #0x6f4
  4122e0:	add	x2, x8, #0x3
  4122e4:	stur	w0, [x29, #-4]
  4122e8:	stur	w1, [x29, #-8]
  4122ec:	ldur	w9, [x29, #-8]
  4122f0:	cmp	w9, #0x0
  4122f4:	cset	w9, gt
  4122f8:	str	x2, [sp, #40]
  4122fc:	tbnz	w9, #0, 412304 <ascii_strlower_n@plt+0xdea4>
  412300:	b	412408 <ascii_strlower_n@plt+0xdfa8>
  412304:	ldur	w0, [x29, #-8]
  412308:	sub	x1, x29, #0x19
  41230c:	bl	40d4f0 <ascii_strlower_n@plt+0x9090>
  412310:	cbnz	x0, 41239c <ascii_strlower_n@plt+0xdf3c>
  412314:	mov	w8, #0x4                   	// #4
  412318:	stur	w8, [x29, #-32]
  41231c:	bl	403d60 <__errno_location@plt>
  412320:	ldr	w8, [x0]
  412324:	stur	w8, [x29, #-36]
  412328:	stur	wzr, [x29, #-40]
  41232c:	ldur	w0, [x29, #-40]
  412330:	bl	403a10 <log_get_max_level_realm@plt>
  412334:	ldur	w8, [x29, #-32]
  412338:	and	w8, w8, #0x7
  41233c:	cmp	w0, w8
  412340:	b.lt	41237c <ascii_strlower_n@plt+0xdf1c>  // b.tstop
  412344:	ldur	w8, [x29, #-40]
  412348:	ldur	w9, [x29, #-32]
  41234c:	orr	w0, w9, w8, lsl #10
  412350:	ldur	w1, [x29, #-36]
  412354:	ldur	w6, [x29, #-8]
  412358:	ldr	x2, [sp, #40]
  41235c:	mov	w3, #0x96                  	// #150
  412360:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412364:	add	x4, x4, #0xbd2
  412368:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41236c:	add	x5, x5, #0xbe8
  412370:	bl	403a20 <log_internal_realm@plt>
  412374:	str	w0, [sp, #36]
  412378:	b	412390 <ascii_strlower_n@plt+0xdf30>
  41237c:	ldur	w0, [x29, #-36]
  412380:	bl	403a30 <abs@plt>
  412384:	mov	w8, wzr
  412388:	subs	w8, w8, w0, uxtb
  41238c:	str	w8, [sp, #36]
  412390:	ldr	w8, [sp, #36]
  412394:	stur	w8, [x29, #-44]
  412398:	b	412408 <ascii_strlower_n@plt+0xdfa8>
  41239c:	ldur	w8, [x29, #-4]
  4123a0:	mov	w9, #0x3c                  	// #60
  4123a4:	cmp	w9, w8
  4123a8:	b.le	4123c0 <ascii_strlower_n@plt+0xdf60>
  4123ac:	ldur	w8, [x29, #-4]
  4123b0:	mov	w9, #0x3c                  	// #60
  4123b4:	subs	w8, w9, w8
  4123b8:	str	w8, [sp, #32]
  4123bc:	b	4123c8 <ascii_strlower_n@plt+0xdf68>
  4123c0:	mov	w8, wzr
  4123c4:	str	w8, [sp, #32]
  4123c8:	ldr	w8, [sp, #32]
  4123cc:	str	w8, [sp, #28]
  4123d0:	bl	412414 <ascii_strlower_n@plt+0xdfb4>
  4123d4:	str	x0, [sp, #16]
  4123d8:	bl	40877c <ascii_strlower_n@plt+0x431c>
  4123dc:	adrp	x9, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4123e0:	add	x9, x9, #0xc24
  4123e4:	str	x0, [sp, #8]
  4123e8:	mov	x0, x9
  4123ec:	ldr	w1, [sp, #28]
  4123f0:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4123f4:	add	x2, x2, #0xc37
  4123f8:	ldr	x3, [sp, #16]
  4123fc:	sub	x4, x29, #0x19
  412400:	ldr	x5, [sp, #8]
  412404:	bl	403ab0 <printf@plt>
  412408:	ldp	x29, x30, [sp, #96]
  41240c:	add	sp, sp, #0x70
  412410:	ret
  412414:	sub	sp, sp, #0x20
  412418:	stp	x29, x30, [sp, #16]
  41241c:	add	x29, sp, #0x10
  412420:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412424:	add	x8, x8, #0xc39
  412428:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  41242c:	add	x9, x9, #0x7e4
  412430:	str	x8, [sp, #8]
  412434:	str	x9, [sp]
  412438:	bl	403ca0 <colors_enabled@plt>
  41243c:	tst	w0, #0x1
  412440:	ldr	x8, [sp, #8]
  412444:	ldr	x9, [sp]
  412448:	csel	x0, x8, x9, ne  // ne = any
  41244c:	ldp	x29, x30, [sp, #16]
  412450:	add	sp, sp, #0x20
  412454:	ret
  412458:	sub	sp, sp, #0x30
  41245c:	stp	x29, x30, [sp, #32]
  412460:	add	x29, sp, #0x20
  412464:	str	x0, [sp, #16]
  412468:	str	x1, [sp, #8]
  41246c:	ldr	x0, [sp, #8]
  412470:	bl	403f70 <strlen@plt>
  412474:	str	x0, [sp]
  412478:	ldr	x0, [sp, #16]
  41247c:	ldr	x1, [sp, #8]
  412480:	ldr	x2, [sp]
  412484:	bl	404000 <strncasecmp@plt>
  412488:	cbnz	w0, 4124a0 <ascii_strlower_n@plt+0xe040>
  41248c:	ldr	x8, [sp, #16]
  412490:	ldr	x9, [sp]
  412494:	add	x8, x8, x9
  412498:	stur	x8, [x29, #-8]
  41249c:	b	4124a8 <ascii_strlower_n@plt+0xe048>
  4124a0:	mov	x8, xzr
  4124a4:	stur	x8, [x29, #-8]
  4124a8:	ldur	x0, [x29, #-8]
  4124ac:	ldp	x29, x30, [sp, #32]
  4124b0:	add	sp, sp, #0x30
  4124b4:	ret
  4124b8:	stp	x29, x30, [sp, #-32]!
  4124bc:	str	x28, [sp, #16]
  4124c0:	mov	x29, sp
  4124c4:	sub	sp, sp, #0x4c0
  4124c8:	mov	x8, xzr
  4124cc:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  4124d0:	add	x9, x9, #0x174
  4124d4:	adrp	x10, 450000 <ascii_strlower_n@plt+0x4bba0>
  4124d8:	add	x10, x10, #0x160
  4124dc:	adrp	x11, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4124e0:	add	x11, x11, #0x6f4
  4124e4:	add	x11, x11, #0x3
  4124e8:	adrp	x12, 430000 <ascii_strlower_n@plt+0x2bba0>
  4124ec:	add	x12, x12, #0x49
  4124f0:	adrp	x13, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4124f4:	add	x13, x13, #0x7e4
  4124f8:	adrp	x14, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4124fc:	add	x14, x14, #0xa1c
  412500:	adrp	x15, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412504:	add	x15, x15, #0xc37
  412508:	adrp	x16, 430000 <ascii_strlower_n@plt+0x2bba0>
  41250c:	add	x16, x16, #0x15b
  412510:	adrp	x17, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412514:	add	x17, x17, #0x9a0
  412518:	stur	x0, [x29, #-16]
  41251c:	stur	x1, [x29, #-24]
  412520:	stur	x2, [x29, #-32]
  412524:	stur	x3, [x29, #-40]
  412528:	stur	x8, [x29, #-72]
  41252c:	stur	x8, [x29, #-80]
  412530:	stur	xzr, [x29, #-104]
  412534:	stur	xzr, [x29, #-96]
  412538:	stur	xzr, [x29, #-88]
  41253c:	str	x9, [sp, #576]
  412540:	str	x10, [sp, #568]
  412544:	str	x11, [sp, #560]
  412548:	str	x12, [sp, #552]
  41254c:	str	x13, [sp, #544]
  412550:	str	x14, [sp, #536]
  412554:	str	x15, [sp, #528]
  412558:	str	x16, [sp, #520]
  41255c:	str	x17, [sp, #512]
  412560:	ldur	x8, [x29, #-16]
  412564:	cmp	x8, #0x0
  412568:	cset	w9, ne  // ne = any
  41256c:	mov	w10, #0x1                   	// #1
  412570:	eor	w9, w9, #0x1
  412574:	eor	w9, w9, w10
  412578:	eor	w9, w9, w10
  41257c:	and	w9, w9, #0x1
  412580:	mov	w0, w9
  412584:	sxtw	x8, w0
  412588:	cbz	x8, 4125b0 <ascii_strlower_n@plt+0xe150>
  41258c:	mov	w8, wzr
  412590:	mov	w0, w8
  412594:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412598:	add	x1, x1, #0xf8
  41259c:	ldr	x2, [sp, #560]
  4125a0:	mov	w3, #0x2a5                 	// #677
  4125a4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  4125a8:	add	x4, x4, #0x1
  4125ac:	bl	4039d0 <log_assert_failed_realm@plt>
  4125b0:	ldur	x8, [x29, #-40]
  4125b4:	cmp	x8, #0x0
  4125b8:	cset	w9, ne  // ne = any
  4125bc:	mov	w10, #0x1                   	// #1
  4125c0:	eor	w9, w9, #0x1
  4125c4:	eor	w9, w9, w10
  4125c8:	eor	w9, w9, w10
  4125cc:	and	w9, w9, #0x1
  4125d0:	mov	w0, w9
  4125d4:	sxtw	x8, w0
  4125d8:	cbz	x8, 412600 <ascii_strlower_n@plt+0xe1a0>
  4125dc:	mov	w8, wzr
  4125e0:	mov	w0, w8
  4125e4:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4125e8:	add	x1, x1, #0x222
  4125ec:	ldr	x2, [sp, #560]
  4125f0:	mov	w3, #0x2a6                 	// #678
  4125f4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  4125f8:	add	x4, x4, #0x1
  4125fc:	bl	4039d0 <log_assert_failed_realm@plt>
  412600:	ldur	x0, [x29, #-24]
  412604:	bl	413ddc <ascii_strlower_n@plt+0xf97c>
  412608:	stur	x0, [x29, #-24]
  41260c:	ldur	x0, [x29, #-32]
  412610:	bl	413ddc <ascii_strlower_n@plt+0xf97c>
  412614:	stur	x0, [x29, #-32]
  412618:	ldur	x8, [x29, #-24]
  41261c:	cbz	x8, 41274c <ascii_strlower_n@plt+0xe2ec>
  412620:	mov	w8, #0x7                   	// #7
  412624:	stur	w8, [x29, #-160]
  412628:	stur	wzr, [x29, #-164]
  41262c:	stur	wzr, [x29, #-168]
  412630:	ldur	w0, [x29, #-168]
  412634:	bl	403a10 <log_get_max_level_realm@plt>
  412638:	ldur	w8, [x29, #-160]
  41263c:	and	w8, w8, #0x7
  412640:	cmp	w0, w8
  412644:	b.lt	41272c <ascii_strlower_n@plt+0xe2cc>  // b.tstop
  412648:	ldur	w8, [x29, #-168]
  41264c:	ldur	w9, [x29, #-160]
  412650:	orr	w0, w9, w8, lsl #10
  412654:	ldur	w1, [x29, #-164]
  412658:	ldur	x6, [x29, #-24]
  41265c:	ldur	x7, [x29, #-32]
  412660:	ldur	x10, [x29, #-40]
  412664:	ldr	x11, [sp, #576]
  412668:	ldr	w8, [x11]
  41266c:	str	w0, [sp, #508]
  412670:	mov	w0, w8
  412674:	str	w1, [sp, #504]
  412678:	str	x6, [sp, #496]
  41267c:	str	x7, [sp, #488]
  412680:	str	x10, [sp, #480]
  412684:	bl	403fe0 <af_to_name@plt>
  412688:	str	x0, [sp, #472]
  41268c:	cbz	x0, 41269c <ascii_strlower_n@plt+0xe23c>
  412690:	ldr	x8, [sp, #472]
  412694:	str	x8, [sp, #464]
  412698:	b	4126a4 <ascii_strlower_n@plt+0xe244>
  41269c:	ldr	x8, [sp, #512]
  4126a0:	str	x8, [sp, #464]
  4126a4:	ldr	x8, [sp, #464]
  4126a8:	ldr	x9, [sp, #568]
  4126ac:	ldr	x0, [x9]
  4126b0:	str	x8, [sp, #456]
  4126b4:	bl	40dad0 <ascii_strlower_n@plt+0x9670>
  4126b8:	tbnz	w0, #0, 4126c0 <ascii_strlower_n@plt+0xe260>
  4126bc:	b	4126cc <ascii_strlower_n@plt+0xe26c>
  4126c0:	ldr	x8, [sp, #512]
  4126c4:	str	x8, [sp, #448]
  4126c8:	b	4126d8 <ascii_strlower_n@plt+0xe278>
  4126cc:	ldr	x8, [sp, #568]
  4126d0:	ldr	x9, [x8]
  4126d4:	str	x9, [sp, #448]
  4126d8:	ldr	x8, [sp, #448]
  4126dc:	ldr	w0, [sp, #508]
  4126e0:	ldr	w1, [sp, #504]
  4126e4:	ldr	x2, [sp, #560]
  4126e8:	mov	w3, #0x2ac                 	// #684
  4126ec:	ldr	x4, [sp, #552]
  4126f0:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  4126f4:	add	x5, x5, #0x59
  4126f8:	ldr	x6, [sp, #496]
  4126fc:	ldr	x7, [sp, #488]
  412700:	mov	x9, sp
  412704:	ldr	x10, [sp, #480]
  412708:	str	x10, [x9]
  41270c:	mov	x9, sp
  412710:	ldr	x11, [sp, #456]
  412714:	str	x11, [x9, #8]
  412718:	mov	x9, sp
  41271c:	str	x8, [x9, #16]
  412720:	bl	403a20 <log_internal_realm@plt>
  412724:	str	w0, [sp, #444]
  412728:	b	412740 <ascii_strlower_n@plt+0xe2e0>
  41272c:	ldur	w0, [x29, #-164]
  412730:	bl	403a30 <abs@plt>
  412734:	mov	w8, wzr
  412738:	subs	w8, w8, w0, uxtb
  41273c:	str	w8, [sp, #444]
  412740:	ldr	w8, [sp, #444]
  412744:	stur	w8, [x29, #-172]
  412748:	b	41296c <ascii_strlower_n@plt+0xe50c>
  41274c:	ldur	x8, [x29, #-32]
  412750:	cbz	x8, 41286c <ascii_strlower_n@plt+0xe40c>
  412754:	mov	w8, #0x7                   	// #7
  412758:	stur	w8, [x29, #-176]
  41275c:	stur	wzr, [x29, #-180]
  412760:	stur	wzr, [x29, #-184]
  412764:	ldur	w0, [x29, #-184]
  412768:	bl	403a10 <log_get_max_level_realm@plt>
  41276c:	ldur	w8, [x29, #-176]
  412770:	and	w8, w8, #0x7
  412774:	cmp	w0, w8
  412778:	b.lt	41284c <ascii_strlower_n@plt+0xe3ec>  // b.tstop
  41277c:	ldur	w8, [x29, #-184]
  412780:	ldur	w9, [x29, #-176]
  412784:	orr	w0, w9, w8, lsl #10
  412788:	ldur	w1, [x29, #-180]
  41278c:	ldur	x6, [x29, #-32]
  412790:	ldur	x7, [x29, #-40]
  412794:	ldr	x10, [sp, #576]
  412798:	ldr	w8, [x10]
  41279c:	str	w0, [sp, #440]
  4127a0:	mov	w0, w8
  4127a4:	str	w1, [sp, #436]
  4127a8:	str	x6, [sp, #424]
  4127ac:	str	x7, [sp, #416]
  4127b0:	bl	403fe0 <af_to_name@plt>
  4127b4:	str	x0, [sp, #408]
  4127b8:	cbz	x0, 4127c8 <ascii_strlower_n@plt+0xe368>
  4127bc:	ldr	x8, [sp, #408]
  4127c0:	str	x8, [sp, #400]
  4127c4:	b	4127d0 <ascii_strlower_n@plt+0xe370>
  4127c8:	ldr	x8, [sp, #512]
  4127cc:	str	x8, [sp, #400]
  4127d0:	ldr	x8, [sp, #400]
  4127d4:	ldr	x9, [sp, #568]
  4127d8:	ldr	x0, [x9]
  4127dc:	str	x8, [sp, #392]
  4127e0:	bl	40dad0 <ascii_strlower_n@plt+0x9670>
  4127e4:	tbnz	w0, #0, 4127ec <ascii_strlower_n@plt+0xe38c>
  4127e8:	b	4127f8 <ascii_strlower_n@plt+0xe398>
  4127ec:	ldr	x8, [sp, #512]
  4127f0:	str	x8, [sp, #384]
  4127f4:	b	412804 <ascii_strlower_n@plt+0xe3a4>
  4127f8:	ldr	x8, [sp, #568]
  4127fc:	ldr	x9, [x8]
  412800:	str	x9, [sp, #384]
  412804:	ldr	x8, [sp, #384]
  412808:	ldr	w0, [sp, #440]
  41280c:	ldr	w1, [sp, #436]
  412810:	ldr	x2, [sp, #560]
  412814:	mov	w3, #0x2ae                 	// #686
  412818:	ldr	x4, [sp, #552]
  41281c:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  412820:	add	x5, x5, #0x9c
  412824:	ldr	x6, [sp, #424]
  412828:	ldr	x7, [sp, #416]
  41282c:	mov	x9, sp
  412830:	ldr	x10, [sp, #392]
  412834:	str	x10, [x9]
  412838:	mov	x9, sp
  41283c:	str	x8, [x9, #8]
  412840:	bl	403a20 <log_internal_realm@plt>
  412844:	str	w0, [sp, #380]
  412848:	b	412860 <ascii_strlower_n@plt+0xe400>
  41284c:	ldur	w0, [x29, #-180]
  412850:	bl	403a30 <abs@plt>
  412854:	mov	w8, wzr
  412858:	subs	w8, w8, w0, uxtb
  41285c:	str	w8, [sp, #380]
  412860:	ldr	w8, [sp, #380]
  412864:	stur	w8, [x29, #-188]
  412868:	b	41296c <ascii_strlower_n@plt+0xe50c>
  41286c:	mov	w8, #0x7                   	// #7
  412870:	stur	w8, [x29, #-192]
  412874:	stur	wzr, [x29, #-196]
  412878:	stur	wzr, [x29, #-200]
  41287c:	ldur	w0, [x29, #-200]
  412880:	bl	403a10 <log_get_max_level_realm@plt>
  412884:	ldur	w8, [x29, #-192]
  412888:	and	w8, w8, #0x7
  41288c:	cmp	w0, w8
  412890:	b.lt	412950 <ascii_strlower_n@plt+0xe4f0>  // b.tstop
  412894:	ldur	w8, [x29, #-200]
  412898:	ldur	w9, [x29, #-192]
  41289c:	orr	w0, w9, w8, lsl #10
  4128a0:	ldur	w1, [x29, #-196]
  4128a4:	ldur	x6, [x29, #-40]
  4128a8:	ldr	x10, [sp, #576]
  4128ac:	ldr	w8, [x10]
  4128b0:	str	w0, [sp, #376]
  4128b4:	mov	w0, w8
  4128b8:	str	w1, [sp, #372]
  4128bc:	str	x6, [sp, #360]
  4128c0:	bl	403fe0 <af_to_name@plt>
  4128c4:	str	x0, [sp, #352]
  4128c8:	cbz	x0, 4128d8 <ascii_strlower_n@plt+0xe478>
  4128cc:	ldr	x8, [sp, #352]
  4128d0:	str	x8, [sp, #344]
  4128d4:	b	4128e0 <ascii_strlower_n@plt+0xe480>
  4128d8:	ldr	x8, [sp, #512]
  4128dc:	str	x8, [sp, #344]
  4128e0:	ldr	x8, [sp, #344]
  4128e4:	ldr	x9, [sp, #568]
  4128e8:	ldr	x0, [x9]
  4128ec:	str	x8, [sp, #336]
  4128f0:	bl	40dad0 <ascii_strlower_n@plt+0x9670>
  4128f4:	tbnz	w0, #0, 4128fc <ascii_strlower_n@plt+0xe49c>
  4128f8:	b	412908 <ascii_strlower_n@plt+0xe4a8>
  4128fc:	ldr	x8, [sp, #512]
  412900:	str	x8, [sp, #328]
  412904:	b	412914 <ascii_strlower_n@plt+0xe4b4>
  412908:	ldr	x8, [sp, #568]
  41290c:	ldr	x9, [x8]
  412910:	str	x9, [sp, #328]
  412914:	ldr	x8, [sp, #328]
  412918:	ldr	w0, [sp, #376]
  41291c:	ldr	w1, [sp, #372]
  412920:	ldr	x2, [sp, #560]
  412924:	mov	w3, #0x2b0                 	// #688
  412928:	ldr	x4, [sp, #552]
  41292c:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  412930:	add	x5, x5, #0xd7
  412934:	ldr	x6, [sp, #360]
  412938:	ldr	x7, [sp, #336]
  41293c:	mov	x9, sp
  412940:	str	x8, [x9]
  412944:	bl	403a20 <log_internal_realm@plt>
  412948:	str	w0, [sp, #324]
  41294c:	b	412964 <ascii_strlower_n@plt+0xe504>
  412950:	ldur	w0, [x29, #-196]
  412954:	bl	403a30 <abs@plt>
  412958:	mov	w8, wzr
  41295c:	subs	w8, w8, w0, uxtb
  412960:	str	w8, [sp, #324]
  412964:	ldr	w8, [sp, #324]
  412968:	stur	w8, [x29, #-204]
  41296c:	ldur	x0, [x29, #-16]
  412970:	sub	x1, x29, #0x48
  412974:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412978:	add	x2, x2, #0x1aa
  41297c:	adrp	x3, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412980:	add	x3, x3, #0x6e5
  412984:	adrp	x4, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412988:	add	x4, x4, #0x9a2
  41298c:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  412990:	add	x5, x5, #0x10c
  412994:	bl	403f00 <sd_bus_message_new_method_call@plt>
  412998:	stur	w0, [x29, #-156]
  41299c:	ldur	w8, [x29, #-156]
  4129a0:	cmp	w8, #0x0
  4129a4:	cset	w8, ge  // ge = tcont
  4129a8:	tbnz	w8, #0, 412a38 <ascii_strlower_n@plt+0xe5d8>
  4129ac:	mov	w8, #0x3                   	// #3
  4129b0:	stur	w8, [x29, #-208]
  4129b4:	ldur	w8, [x29, #-156]
  4129b8:	stur	w8, [x29, #-212]
  4129bc:	stur	wzr, [x29, #-216]
  4129c0:	ldur	w0, [x29, #-216]
  4129c4:	bl	403a10 <log_get_max_level_realm@plt>
  4129c8:	ldur	w8, [x29, #-208]
  4129cc:	and	w8, w8, #0x7
  4129d0:	cmp	w0, w8
  4129d4:	b.lt	412a08 <ascii_strlower_n@plt+0xe5a8>  // b.tstop
  4129d8:	ldur	w8, [x29, #-216]
  4129dc:	ldur	w9, [x29, #-208]
  4129e0:	orr	w0, w9, w8, lsl #10
  4129e4:	ldur	w1, [x29, #-212]
  4129e8:	ldr	x2, [sp, #560]
  4129ec:	mov	w3, #0x2ba                 	// #698
  4129f0:	ldr	x4, [sp, #552]
  4129f4:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4129f8:	add	x5, x5, #0x9d1
  4129fc:	bl	403a20 <log_internal_realm@plt>
  412a00:	str	w0, [sp, #320]
  412a04:	b	412a1c <ascii_strlower_n@plt+0xe5bc>
  412a08:	ldur	w0, [x29, #-212]
  412a0c:	bl	403a30 <abs@plt>
  412a10:	mov	w8, wzr
  412a14:	subs	w8, w8, w0, uxtb
  412a18:	str	w8, [sp, #320]
  412a1c:	ldr	w8, [sp, #320]
  412a20:	stur	w8, [x29, #-220]
  412a24:	ldur	w8, [x29, #-220]
  412a28:	stur	w8, [x29, #-4]
  412a2c:	mov	w8, #0x1                   	// #1
  412a30:	stur	w8, [x29, #-224]
  412a34:	b	413db0 <ascii_strlower_n@plt+0xf950>
  412a38:	ldur	x0, [x29, #-72]
  412a3c:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  412a40:	add	x8, x8, #0x170
  412a44:	ldr	w2, [x8]
  412a48:	ldur	x3, [x29, #-24]
  412a4c:	ldur	x4, [x29, #-32]
  412a50:	ldur	x5, [x29, #-40]
  412a54:	ldr	x8, [sp, #576]
  412a58:	ldr	w6, [x8]
  412a5c:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  412a60:	add	x9, x9, #0x180
  412a64:	ldr	x7, [x9]
  412a68:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  412a6c:	add	x1, x1, #0x11b
  412a70:	bl	403f10 <sd_bus_message_append@plt>
  412a74:	stur	w0, [x29, #-156]
  412a78:	ldur	w10, [x29, #-156]
  412a7c:	cmp	w10, #0x0
  412a80:	cset	w10, ge  // ge = tcont
  412a84:	tbnz	w10, #0, 412b14 <ascii_strlower_n@plt+0xe6b4>
  412a88:	mov	w8, #0x3                   	// #3
  412a8c:	stur	w8, [x29, #-228]
  412a90:	ldur	w8, [x29, #-156]
  412a94:	stur	w8, [x29, #-232]
  412a98:	stur	wzr, [x29, #-236]
  412a9c:	ldur	w0, [x29, #-236]
  412aa0:	bl	403a10 <log_get_max_level_realm@plt>
  412aa4:	ldur	w8, [x29, #-228]
  412aa8:	and	w8, w8, #0x7
  412aac:	cmp	w0, w8
  412ab0:	b.lt	412ae4 <ascii_strlower_n@plt+0xe684>  // b.tstop
  412ab4:	ldur	w8, [x29, #-236]
  412ab8:	ldur	w9, [x29, #-228]
  412abc:	orr	w0, w9, w8, lsl #10
  412ac0:	ldur	w1, [x29, #-232]
  412ac4:	ldr	x2, [sp, #560]
  412ac8:	mov	w3, #0x2be                 	// #702
  412acc:	ldr	x4, [sp, #552]
  412ad0:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412ad4:	add	x5, x5, #0x9d1
  412ad8:	bl	403a20 <log_internal_realm@plt>
  412adc:	str	w0, [sp, #316]
  412ae0:	b	412af8 <ascii_strlower_n@plt+0xe698>
  412ae4:	ldur	w0, [x29, #-232]
  412ae8:	bl	403a30 <abs@plt>
  412aec:	mov	w8, wzr
  412af0:	subs	w8, w8, w0, uxtb
  412af4:	str	w8, [sp, #316]
  412af8:	ldr	w8, [sp, #316]
  412afc:	stur	w8, [x29, #-240]
  412b00:	ldur	w8, [x29, #-240]
  412b04:	stur	w8, [x29, #-4]
  412b08:	mov	w8, #0x1                   	// #1
  412b0c:	stur	w8, [x29, #-224]
  412b10:	b	413db0 <ascii_strlower_n@plt+0xf950>
  412b14:	mov	w0, #0x1                   	// #1
  412b18:	bl	403f20 <now@plt>
  412b1c:	stur	x0, [x29, #-152]
  412b20:	ldur	x0, [x29, #-16]
  412b24:	ldur	x1, [x29, #-72]
  412b28:	mov	x2, #0xe00                 	// #3584
  412b2c:	movk	x2, #0x727, lsl #16
  412b30:	sub	x3, x29, #0x68
  412b34:	sub	x4, x29, #0x50
  412b38:	bl	403f30 <sd_bus_call@plt>
  412b3c:	stur	w0, [x29, #-156]
  412b40:	ldur	w8, [x29, #-156]
  412b44:	cmp	w8, #0x0
  412b48:	cset	w8, ge  // ge = tcont
  412b4c:	tbnz	w8, #0, 412c0c <ascii_strlower_n@plt+0xe7ac>
  412b50:	mov	w8, #0x3                   	// #3
  412b54:	stur	w8, [x29, #-244]
  412b58:	ldur	w8, [x29, #-156]
  412b5c:	stur	w8, [x29, #-248]
  412b60:	stur	wzr, [x29, #-252]
  412b64:	ldur	w0, [x29, #-252]
  412b68:	bl	403a10 <log_get_max_level_realm@plt>
  412b6c:	ldur	w8, [x29, #-244]
  412b70:	and	w8, w8, #0x7
  412b74:	cmp	w0, w8
  412b78:	b.lt	412bdc <ascii_strlower_n@plt+0xe77c>  // b.tstop
  412b7c:	ldur	w8, [x29, #-252]
  412b80:	ldur	w9, [x29, #-244]
  412b84:	orr	w0, w9, w8, lsl #10
  412b88:	ldur	w1, [x29, #-248]
  412b8c:	ldur	w8, [x29, #-156]
  412b90:	sub	x10, x29, #0x68
  412b94:	str	w0, [sp, #312]
  412b98:	mov	x0, x10
  412b9c:	str	w1, [sp, #308]
  412ba0:	mov	w1, w8
  412ba4:	bl	403ce0 <bus_error_message@plt>
  412ba8:	ldr	w8, [sp, #312]
  412bac:	str	x0, [sp, #296]
  412bb0:	mov	w0, w8
  412bb4:	ldr	w1, [sp, #308]
  412bb8:	ldr	x2, [sp, #560]
  412bbc:	mov	w3, #0x2c4                 	// #708
  412bc0:	ldr	x4, [sp, #552]
  412bc4:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  412bc8:	add	x5, x5, #0x122
  412bcc:	ldr	x6, [sp, #296]
  412bd0:	bl	403a20 <log_internal_realm@plt>
  412bd4:	str	w0, [sp, #292]
  412bd8:	b	412bf0 <ascii_strlower_n@plt+0xe790>
  412bdc:	ldur	w0, [x29, #-248]
  412be0:	bl	403a30 <abs@plt>
  412be4:	mov	w8, wzr
  412be8:	subs	w8, w8, w0, uxtb
  412bec:	str	w8, [sp, #292]
  412bf0:	ldr	w8, [sp, #292]
  412bf4:	stur	w8, [x29, #-256]
  412bf8:	ldur	w8, [x29, #-256]
  412bfc:	stur	w8, [x29, #-4]
  412c00:	mov	w8, #0x1                   	// #1
  412c04:	stur	w8, [x29, #-224]
  412c08:	b	413db0 <ascii_strlower_n@plt+0xf950>
  412c0c:	mov	w0, #0x1                   	// #1
  412c10:	bl	403f20 <now@plt>
  412c14:	ldur	x8, [x29, #-152]
  412c18:	subs	x8, x0, x8
  412c1c:	stur	x8, [x29, #-152]
  412c20:	ldur	x0, [x29, #-80]
  412c24:	mov	w1, #0x61                  	// #97
  412c28:	adrp	x2, 430000 <ascii_strlower_n@plt+0x2bba0>
  412c2c:	add	x2, x2, #0x13a
  412c30:	bl	403e60 <sd_bus_message_enter_container@plt>
  412c34:	stur	w0, [x29, #-156]
  412c38:	ldur	w9, [x29, #-156]
  412c3c:	cmp	w9, #0x0
  412c40:	cset	w9, ge  // ge = tcont
  412c44:	tbnz	w9, #0, 412cd0 <ascii_strlower_n@plt+0xe870>
  412c48:	mov	w8, #0x3                   	// #3
  412c4c:	str	w8, [sp, #956]
  412c50:	ldur	w8, [x29, #-156]
  412c54:	str	w8, [sp, #952]
  412c58:	str	wzr, [sp, #948]
  412c5c:	ldr	w0, [sp, #948]
  412c60:	bl	403a10 <log_get_max_level_realm@plt>
  412c64:	ldr	w8, [sp, #956]
  412c68:	and	w8, w8, #0x7
  412c6c:	cmp	w0, w8
  412c70:	b.lt	412ca0 <ascii_strlower_n@plt+0xe840>  // b.tstop
  412c74:	ldr	w8, [sp, #948]
  412c78:	ldr	w9, [sp, #956]
  412c7c:	orr	w0, w9, w8, lsl #10
  412c80:	ldr	w1, [sp, #952]
  412c84:	ldr	x2, [sp, #560]
  412c88:	mov	w3, #0x2ca                 	// #714
  412c8c:	ldr	x4, [sp, #552]
  412c90:	ldr	x5, [sp, #536]
  412c94:	bl	403a20 <log_internal_realm@plt>
  412c98:	str	w0, [sp, #288]
  412c9c:	b	412cb4 <ascii_strlower_n@plt+0xe854>
  412ca0:	ldr	w0, [sp, #952]
  412ca4:	bl	403a30 <abs@plt>
  412ca8:	mov	w8, wzr
  412cac:	subs	w8, w8, w0, uxtb
  412cb0:	str	w8, [sp, #288]
  412cb4:	ldr	w8, [sp, #288]
  412cb8:	str	w8, [sp, #944]
  412cbc:	ldr	w8, [sp, #944]
  412cc0:	stur	w8, [x29, #-4]
  412cc4:	mov	w8, #0x1                   	// #1
  412cc8:	stur	w8, [x29, #-224]
  412ccc:	b	413db0 <ascii_strlower_n@plt+0xf950>
  412cd0:	ldur	x8, [x29, #-24]
  412cd4:	cbz	x8, 412cec <ascii_strlower_n@plt+0xe88c>
  412cd8:	ldur	x0, [x29, #-24]
  412cdc:	bl	403f70 <strlen@plt>
  412ce0:	add	x8, x0, #0x1
  412ce4:	str	x8, [sp, #280]
  412ce8:	b	412cf4 <ascii_strlower_n@plt+0xe894>
  412cec:	mov	x8, xzr
  412cf0:	str	x8, [sp, #280]
  412cf4:	ldr	x8, [sp, #280]
  412cf8:	ldur	x9, [x29, #-32]
  412cfc:	str	x8, [sp, #272]
  412d00:	cbz	x9, 412d18 <ascii_strlower_n@plt+0xe8b8>
  412d04:	ldur	x0, [x29, #-32]
  412d08:	bl	403f70 <strlen@plt>
  412d0c:	add	x8, x0, #0x1
  412d10:	str	x8, [sp, #264]
  412d14:	b	412d20 <ascii_strlower_n@plt+0xe8c0>
  412d18:	mov	x8, xzr
  412d1c:	str	x8, [sp, #264]
  412d20:	ldr	x8, [sp, #264]
  412d24:	ldr	x9, [sp, #272]
  412d28:	add	x8, x9, x8
  412d2c:	ldur	x0, [x29, #-40]
  412d30:	str	x8, [sp, #256]
  412d34:	bl	403f70 <strlen@plt>
  412d38:	ldr	x8, [sp, #256]
  412d3c:	add	x9, x8, x0
  412d40:	add	x9, x9, #0x2
  412d44:	stur	x9, [x29, #-112]
  412d48:	stur	wzr, [x29, #-140]
  412d4c:	ldur	x0, [x29, #-80]
  412d50:	mov	w1, #0x72                  	// #114
  412d54:	adrp	x2, 430000 <ascii_strlower_n@plt+0x2bba0>
  412d58:	add	x2, x2, #0x149
  412d5c:	bl	403e60 <sd_bus_message_enter_container@plt>
  412d60:	stur	w0, [x29, #-156]
  412d64:	cmp	w0, #0x0
  412d68:	cset	w8, le
  412d6c:	tbnz	w8, #0, 41385c <ascii_strlower_n@plt+0xf3fc>
  412d70:	ldur	x0, [x29, #-80]
  412d74:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  412d78:	add	x1, x1, #0x156
  412d7c:	add	x2, sp, #0x3ae
  412d80:	add	x3, sp, #0x3ac
  412d84:	add	x4, sp, #0x3aa
  412d88:	add	x5, sp, #0x3a0
  412d8c:	bl	403d00 <sd_bus_message_read@plt>
  412d90:	stur	w0, [x29, #-156]
  412d94:	ldur	w8, [x29, #-156]
  412d98:	cmp	w8, #0x0
  412d9c:	cset	w8, ge  // ge = tcont
  412da0:	tbnz	w8, #0, 412e2c <ascii_strlower_n@plt+0xe9cc>
  412da4:	mov	w8, #0x3                   	// #3
  412da8:	str	w8, [sp, #916]
  412dac:	ldur	w8, [x29, #-156]
  412db0:	str	w8, [sp, #912]
  412db4:	str	wzr, [sp, #908]
  412db8:	ldr	w0, [sp, #908]
  412dbc:	bl	403a10 <log_get_max_level_realm@plt>
  412dc0:	ldr	w8, [sp, #916]
  412dc4:	and	w8, w8, #0x7
  412dc8:	cmp	w0, w8
  412dcc:	b.lt	412dfc <ascii_strlower_n@plt+0xe99c>  // b.tstop
  412dd0:	ldr	w8, [sp, #908]
  412dd4:	ldr	w9, [sp, #916]
  412dd8:	orr	w0, w9, w8, lsl #10
  412ddc:	ldr	w1, [sp, #912]
  412de0:	ldr	x2, [sp, #560]
  412de4:	mov	w3, #0x2d8                 	// #728
  412de8:	ldr	x4, [sp, #552]
  412dec:	ldr	x5, [sp, #536]
  412df0:	bl	403a20 <log_internal_realm@plt>
  412df4:	str	w0, [sp, #252]
  412df8:	b	412e10 <ascii_strlower_n@plt+0xe9b0>
  412dfc:	ldr	w0, [sp, #912]
  412e00:	bl	403a30 <abs@plt>
  412e04:	mov	w8, wzr
  412e08:	subs	w8, w8, w0, uxtb
  412e0c:	str	w8, [sp, #252]
  412e10:	ldr	w8, [sp, #252]
  412e14:	str	w8, [sp, #904]
  412e18:	ldr	w8, [sp, #904]
  412e1c:	stur	w8, [x29, #-4]
  412e20:	mov	w8, #0x1                   	// #1
  412e24:	stur	w8, [x29, #-224]
  412e28:	b	413db0 <ascii_strlower_n@plt+0xf950>
  412e2c:	ldur	x8, [x29, #-24]
  412e30:	cbz	x8, 412e88 <ascii_strlower_n@plt+0xea28>
  412e34:	ldur	x0, [x29, #-24]
  412e38:	bl	403f70 <strlen@plt>
  412e3c:	ldur	w8, [x29, #-140]
  412e40:	str	w0, [sp, #248]
  412e44:	cbnz	w8, 412e54 <ascii_strlower_n@plt+0xe9f4>
  412e48:	ldur	x8, [x29, #-24]
  412e4c:	str	x8, [sp, #240]
  412e50:	b	412e5c <ascii_strlower_n@plt+0xe9fc>
  412e54:	ldr	x8, [sp, #544]
  412e58:	str	x8, [sp, #240]
  412e5c:	ldr	x8, [sp, #240]
  412e60:	ldur	w9, [x29, #-140]
  412e64:	adrp	x10, 430000 <ascii_strlower_n@plt+0x2bba0>
  412e68:	add	x10, x10, #0x161
  412e6c:	cmp	w9, #0x0
  412e70:	ldr	x11, [sp, #528]
  412e74:	csel	x3, x10, x11, eq  // eq = none
  412e78:	ldr	x0, [sp, #520]
  412e7c:	ldr	w1, [sp, #248]
  412e80:	mov	x2, x8
  412e84:	bl	403ab0 <printf@plt>
  412e88:	ldur	x8, [x29, #-32]
  412e8c:	cbz	x8, 412ee4 <ascii_strlower_n@plt+0xea84>
  412e90:	ldur	x0, [x29, #-32]
  412e94:	bl	403f70 <strlen@plt>
  412e98:	ldur	w8, [x29, #-140]
  412e9c:	str	w0, [sp, #236]
  412ea0:	cbnz	w8, 412eb0 <ascii_strlower_n@plt+0xea50>
  412ea4:	ldur	x8, [x29, #-32]
  412ea8:	str	x8, [sp, #224]
  412eac:	b	412eb8 <ascii_strlower_n@plt+0xea58>
  412eb0:	ldr	x8, [sp, #544]
  412eb4:	str	x8, [sp, #224]
  412eb8:	ldr	x8, [sp, #224]
  412ebc:	ldur	w9, [x29, #-140]
  412ec0:	adrp	x10, 430000 <ascii_strlower_n@plt+0x2bba0>
  412ec4:	add	x10, x10, #0x161
  412ec8:	cmp	w9, #0x0
  412ecc:	ldr	x11, [sp, #528]
  412ed0:	csel	x3, x10, x11, eq  // eq = none
  412ed4:	ldr	x0, [sp, #520]
  412ed8:	ldr	w1, [sp, #236]
  412edc:	mov	x2, x8
  412ee0:	bl	403ab0 <printf@plt>
  412ee4:	ldur	x0, [x29, #-40]
  412ee8:	bl	403f70 <strlen@plt>
  412eec:	ldur	w8, [x29, #-140]
  412ef0:	str	w0, [sp, #220]
  412ef4:	cbnz	w8, 412f04 <ascii_strlower_n@plt+0xeaa4>
  412ef8:	ldur	x8, [x29, #-40]
  412efc:	str	x8, [sp, #208]
  412f00:	b	412f0c <ascii_strlower_n@plt+0xeaac>
  412f04:	ldr	x8, [sp, #544]
  412f08:	str	x8, [sp, #208]
  412f0c:	ldr	x8, [sp, #208]
  412f10:	ldur	w9, [x29, #-140]
  412f14:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412f18:	add	x10, x10, #0xeb9
  412f1c:	cmp	w9, #0x0
  412f20:	ldr	x11, [sp, #528]
  412f24:	csel	x3, x10, x11, eq  // eq = none
  412f28:	ldr	x4, [sp, #928]
  412f2c:	ldrh	w5, [sp, #938]
  412f30:	ldrh	w6, [sp, #942]
  412f34:	ldrh	w7, [sp, #940]
  412f38:	adrp	x0, 430000 <ascii_strlower_n@plt+0x2bba0>
  412f3c:	add	x0, x0, #0x163
  412f40:	ldr	w1, [sp, #220]
  412f44:	mov	x2, x8
  412f48:	bl	403ab0 <printf@plt>
  412f4c:	ldur	x8, [x29, #-80]
  412f50:	mov	x0, x8
  412f54:	mov	w1, #0x61                  	// #97
  412f58:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  412f5c:	add	x2, x2, #0x69b
  412f60:	bl	403e60 <sd_bus_message_enter_container@plt>
  412f64:	stur	w0, [x29, #-156]
  412f68:	ldur	w9, [x29, #-156]
  412f6c:	cmp	w9, #0x0
  412f70:	cset	w9, ge  // ge = tcont
  412f74:	tbnz	w9, #0, 413000 <ascii_strlower_n@plt+0xeba0>
  412f78:	mov	w8, #0x3                   	// #3
  412f7c:	str	w8, [sp, #900]
  412f80:	ldur	w8, [x29, #-156]
  412f84:	str	w8, [sp, #896]
  412f88:	str	wzr, [sp, #892]
  412f8c:	ldr	w0, [sp, #892]
  412f90:	bl	403a10 <log_get_max_level_realm@plt>
  412f94:	ldr	w8, [sp, #900]
  412f98:	and	w8, w8, #0x7
  412f9c:	cmp	w0, w8
  412fa0:	b.lt	412fd0 <ascii_strlower_n@plt+0xeb70>  // b.tstop
  412fa4:	ldr	w8, [sp, #892]
  412fa8:	ldr	w9, [sp, #900]
  412fac:	orr	w0, w9, w8, lsl #10
  412fb0:	ldr	w1, [sp, #896]
  412fb4:	ldr	x2, [sp, #560]
  412fb8:	mov	w3, #0x2e7                 	// #743
  412fbc:	ldr	x4, [sp, #552]
  412fc0:	ldr	x5, [sp, #536]
  412fc4:	bl	403a20 <log_internal_realm@plt>
  412fc8:	str	w0, [sp, #204]
  412fcc:	b	412fe4 <ascii_strlower_n@plt+0xeb84>
  412fd0:	ldr	w0, [sp, #896]
  412fd4:	bl	403a30 <abs@plt>
  412fd8:	mov	w8, wzr
  412fdc:	subs	w8, w8, w0, uxtb
  412fe0:	str	w8, [sp, #204]
  412fe4:	ldr	w8, [sp, #204]
  412fe8:	str	w8, [sp, #888]
  412fec:	ldr	w8, [sp, #888]
  412ff0:	stur	w8, [x29, #-4]
  412ff4:	mov	w8, #0x1                   	// #1
  412ff8:	stur	w8, [x29, #-224]
  412ffc:	b	413db0 <ascii_strlower_n@plt+0xf950>
  413000:	ldur	x0, [x29, #-80]
  413004:	mov	w1, #0x72                  	// #114
  413008:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41300c:	add	x2, x2, #0x432
  413010:	bl	403e60 <sd_bus_message_enter_container@plt>
  413014:	stur	w0, [x29, #-156]
  413018:	cmp	w0, #0x0
  41301c:	cset	w8, le
  413020:	tbnz	w8, #0, 413590 <ascii_strlower_n@plt+0xf130>
  413024:	mov	x8, xzr
  413028:	str	x8, [sp, #880]
  41302c:	ldur	x0, [x29, #-80]
  413030:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  413034:	add	x1, x1, #0xea1
  413038:	add	x2, sp, #0x36c
  41303c:	add	x3, sp, #0x368
  413040:	bl	403d00 <sd_bus_message_read@plt>
  413044:	stur	w0, [x29, #-156]
  413048:	ldur	w9, [x29, #-156]
  41304c:	cmp	w9, #0x0
  413050:	cset	w9, ge  // ge = tcont
  413054:	tbnz	w9, #0, 4130e0 <ascii_strlower_n@plt+0xec80>
  413058:	mov	w8, #0x3                   	// #3
  41305c:	str	w8, [sp, #852]
  413060:	ldur	w8, [x29, #-156]
  413064:	str	w8, [sp, #848]
  413068:	str	wzr, [sp, #844]
  41306c:	ldr	w0, [sp, #844]
  413070:	bl	403a10 <log_get_max_level_realm@plt>
  413074:	ldr	w8, [sp, #852]
  413078:	and	w8, w8, #0x7
  41307c:	cmp	w0, w8
  413080:	b.lt	4130b0 <ascii_strlower_n@plt+0xec50>  // b.tstop
  413084:	ldr	w8, [sp, #844]
  413088:	ldr	w9, [sp, #852]
  41308c:	orr	w0, w9, w8, lsl #10
  413090:	ldr	w1, [sp, #848]
  413094:	ldr	x2, [sp, #560]
  413098:	mov	w3, #0x2f2                 	// #754
  41309c:	ldr	x4, [sp, #552]
  4130a0:	ldr	x5, [sp, #536]
  4130a4:	bl	403a20 <log_internal_realm@plt>
  4130a8:	str	w0, [sp, #200]
  4130ac:	b	4130c4 <ascii_strlower_n@plt+0xec64>
  4130b0:	ldr	w0, [sp, #848]
  4130b4:	bl	403a30 <abs@plt>
  4130b8:	mov	w8, wzr
  4130bc:	subs	w8, w8, w0, uxtb
  4130c0:	str	w8, [sp, #200]
  4130c4:	ldr	w8, [sp, #200]
  4130c8:	str	w8, [sp, #840]
  4130cc:	ldr	w8, [sp, #840]
  4130d0:	stur	w8, [x29, #-4]
  4130d4:	mov	w8, #0x1                   	// #1
  4130d8:	stur	w8, [x29, #-224]
  4130dc:	b	413564 <ascii_strlower_n@plt+0xf104>
  4130e0:	ldur	x0, [x29, #-80]
  4130e4:	mov	w1, #0x79                  	// #121
  4130e8:	add	x2, sp, #0x358
  4130ec:	sub	x3, x29, #0x78
  4130f0:	bl	403ea0 <sd_bus_message_read_array@plt>
  4130f4:	stur	w0, [x29, #-156]
  4130f8:	ldur	w8, [x29, #-156]
  4130fc:	cmp	w8, #0x0
  413100:	cset	w8, ge  // ge = tcont
  413104:	tbnz	w8, #0, 413190 <ascii_strlower_n@plt+0xed30>
  413108:	mov	w8, #0x3                   	// #3
  41310c:	str	w8, [sp, #836]
  413110:	ldur	w8, [x29, #-156]
  413114:	str	w8, [sp, #832]
  413118:	str	wzr, [sp, #828]
  41311c:	ldr	w0, [sp, #828]
  413120:	bl	403a10 <log_get_max_level_realm@plt>
  413124:	ldr	w8, [sp, #836]
  413128:	and	w8, w8, #0x7
  41312c:	cmp	w0, w8
  413130:	b.lt	413160 <ascii_strlower_n@plt+0xed00>  // b.tstop
  413134:	ldr	w8, [sp, #828]
  413138:	ldr	w9, [sp, #836]
  41313c:	orr	w0, w9, w8, lsl #10
  413140:	ldr	w1, [sp, #832]
  413144:	ldr	x2, [sp, #560]
  413148:	mov	w3, #0x2f6                 	// #758
  41314c:	ldr	x4, [sp, #552]
  413150:	ldr	x5, [sp, #536]
  413154:	bl	403a20 <log_internal_realm@plt>
  413158:	str	w0, [sp, #196]
  41315c:	b	413174 <ascii_strlower_n@plt+0xed14>
  413160:	ldr	w0, [sp, #832]
  413164:	bl	403a30 <abs@plt>
  413168:	mov	w8, wzr
  41316c:	subs	w8, w8, w0, uxtb
  413170:	str	w8, [sp, #196]
  413174:	ldr	w8, [sp, #196]
  413178:	str	w8, [sp, #824]
  41317c:	ldr	w8, [sp, #824]
  413180:	stur	w8, [x29, #-4]
  413184:	mov	w8, #0x1                   	// #1
  413188:	stur	w8, [x29, #-224]
  41318c:	b	413564 <ascii_strlower_n@plt+0xf104>
  413190:	ldur	x0, [x29, #-80]
  413194:	bl	403e80 <sd_bus_message_exit_container@plt>
  413198:	stur	w0, [x29, #-156]
  41319c:	ldur	w8, [x29, #-156]
  4131a0:	cmp	w8, #0x0
  4131a4:	cset	w8, ge  // ge = tcont
  4131a8:	tbnz	w8, #0, 413234 <ascii_strlower_n@plt+0xedd4>
  4131ac:	mov	w8, #0x3                   	// #3
  4131b0:	str	w8, [sp, #820]
  4131b4:	ldur	w8, [x29, #-156]
  4131b8:	str	w8, [sp, #816]
  4131bc:	str	wzr, [sp, #812]
  4131c0:	ldr	w0, [sp, #812]
  4131c4:	bl	403a10 <log_get_max_level_realm@plt>
  4131c8:	ldr	w8, [sp, #820]
  4131cc:	and	w8, w8, #0x7
  4131d0:	cmp	w0, w8
  4131d4:	b.lt	413204 <ascii_strlower_n@plt+0xeda4>  // b.tstop
  4131d8:	ldr	w8, [sp, #812]
  4131dc:	ldr	w9, [sp, #820]
  4131e0:	orr	w0, w9, w8, lsl #10
  4131e4:	ldr	w1, [sp, #816]
  4131e8:	ldr	x2, [sp, #560]
  4131ec:	mov	w3, #0x2fa                 	// #762
  4131f0:	ldr	x4, [sp, #552]
  4131f4:	ldr	x5, [sp, #536]
  4131f8:	bl	403a20 <log_internal_realm@plt>
  4131fc:	str	w0, [sp, #192]
  413200:	b	413218 <ascii_strlower_n@plt+0xedb8>
  413204:	ldr	w0, [sp, #816]
  413208:	bl	403a30 <abs@plt>
  41320c:	mov	w8, wzr
  413210:	subs	w8, w8, w0, uxtb
  413214:	str	w8, [sp, #192]
  413218:	ldr	w8, [sp, #192]
  41321c:	str	w8, [sp, #808]
  413220:	ldr	w8, [sp, #808]
  413224:	stur	w8, [x29, #-4]
  413228:	mov	w8, #0x1                   	// #1
  41322c:	stur	w8, [x29, #-224]
  413230:	b	413564 <ascii_strlower_n@plt+0xf104>
  413234:	mov	w8, #0x0                   	// #0
  413238:	strb	w8, [sp, #807]
  41323c:	ldr	w8, [sp, #872]
  413240:	cmp	w8, #0x2
  413244:	str	w8, [sp, #188]
  413248:	b.eq	413268 <ascii_strlower_n@plt+0xee08>  // b.none
  41324c:	b	413250 <ascii_strlower_n@plt+0xedf0>
  413250:	ldr	w8, [sp, #188]
  413254:	cmp	w8, #0xa
  413258:	cset	w9, eq  // eq = none
  41325c:	eor	w9, w9, #0x1
  413260:	tbnz	w9, #0, 413274 <ascii_strlower_n@plt+0xee14>
  413264:	b	413268 <ascii_strlower_n@plt+0xee08>
  413268:	mov	w8, #0x1                   	// #1
  41326c:	strb	w8, [sp, #807]
  413270:	b	413274 <ascii_strlower_n@plt+0xee14>
  413274:	ldrb	w8, [sp, #807]
  413278:	and	w8, w8, #0x1
  41327c:	strb	w8, [sp, #806]
  413280:	ldrb	w8, [sp, #806]
  413284:	tbnz	w8, #0, 413368 <ascii_strlower_n@plt+0xef08>
  413288:	mov	w8, #0x7                   	// #7
  41328c:	str	w8, [sp, #800]
  413290:	str	wzr, [sp, #796]
  413294:	str	wzr, [sp, #792]
  413298:	ldr	w0, [sp, #792]
  41329c:	bl	403a10 <log_get_max_level_realm@plt>
  4132a0:	ldr	w8, [sp, #800]
  4132a4:	and	w8, w8, #0x7
  4132a8:	cmp	w0, w8
  4132ac:	b.lt	413340 <ascii_strlower_n@plt+0xeee0>  // b.tstop
  4132b0:	ldr	w8, [sp, #792]
  4132b4:	ldr	w9, [sp, #800]
  4132b8:	orr	w0, w9, w8, lsl #10
  4132bc:	ldr	w1, [sp, #796]
  4132c0:	ldur	x6, [x29, #-24]
  4132c4:	ldr	w7, [sp, #872]
  4132c8:	ldr	w8, [sp, #872]
  4132cc:	str	w0, [sp, #184]
  4132d0:	mov	w0, w8
  4132d4:	str	w1, [sp, #180]
  4132d8:	str	x6, [sp, #168]
  4132dc:	str	w7, [sp, #164]
  4132e0:	bl	403fe0 <af_to_name@plt>
  4132e4:	str	x0, [sp, #152]
  4132e8:	cbz	x0, 4132f8 <ascii_strlower_n@plt+0xee98>
  4132ec:	ldr	x8, [sp, #152]
  4132f0:	str	x8, [sp, #144]
  4132f4:	b	413304 <ascii_strlower_n@plt+0xeea4>
  4132f8:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4132fc:	add	x8, x8, #0xf68
  413300:	str	x8, [sp, #144]
  413304:	ldr	x8, [sp, #144]
  413308:	ldr	w0, [sp, #184]
  41330c:	ldr	w1, [sp, #180]
  413310:	ldr	x2, [sp, #560]
  413314:	mov	w3, #0x2fd                 	// #765
  413318:	ldr	x4, [sp, #552]
  41331c:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  413320:	add	x5, x5, #0xf41
  413324:	ldr	x6, [sp, #168]
  413328:	ldr	w7, [sp, #164]
  41332c:	mov	x9, sp
  413330:	str	x8, [x9]
  413334:	bl	403a20 <log_internal_realm@plt>
  413338:	str	w0, [sp, #140]
  41333c:	b	413354 <ascii_strlower_n@plt+0xeef4>
  413340:	ldr	w0, [sp, #796]
  413344:	bl	403a30 <abs@plt>
  413348:	mov	w8, wzr
  41334c:	subs	w8, w8, w0, uxtb
  413350:	str	w8, [sp, #140]
  413354:	ldr	w8, [sp, #140]
  413358:	str	w8, [sp, #788]
  41335c:	mov	w8, #0x8                   	// #8
  413360:	stur	w8, [x29, #-224]
  413364:	b	413564 <ascii_strlower_n@plt+0xf104>
  413368:	ldur	x8, [x29, #-120]
  41336c:	ldr	w0, [sp, #872]
  413370:	str	x8, [sp, #128]
  413374:	bl	40db10 <ascii_strlower_n@plt+0x96b0>
  413378:	ldr	x8, [sp, #128]
  41337c:	cmp	x8, x0
  413380:	b.eq	41346c <ascii_strlower_n@plt+0xf00c>  // b.none
  413384:	mov	w8, #0x3                   	// #3
  413388:	str	w8, [sp, #784]
  41338c:	str	wzr, [sp, #780]
  413390:	str	wzr, [sp, #776]
  413394:	ldr	w0, [sp, #776]
  413398:	bl	403a10 <log_get_max_level_realm@plt>
  41339c:	ldr	w8, [sp, #784]
  4133a0:	and	w8, w8, #0x7
  4133a4:	cmp	w0, w8
  4133a8:	b.lt	41343c <ascii_strlower_n@plt+0xefdc>  // b.tstop
  4133ac:	ldr	w8, [sp, #776]
  4133b0:	ldr	w9, [sp, #784]
  4133b4:	orr	w0, w9, w8, lsl #10
  4133b8:	ldr	w1, [sp, #780]
  4133bc:	ldur	x6, [x29, #-24]
  4133c0:	ldur	x7, [x29, #-120]
  4133c4:	ldr	w8, [sp, #872]
  4133c8:	str	w0, [sp, #124]
  4133cc:	mov	w0, w8
  4133d0:	str	w1, [sp, #120]
  4133d4:	str	x6, [sp, #112]
  4133d8:	str	x7, [sp, #104]
  4133dc:	bl	403fe0 <af_to_name@plt>
  4133e0:	str	x0, [sp, #96]
  4133e4:	cbz	x0, 4133f4 <ascii_strlower_n@plt+0xef94>
  4133e8:	ldr	x8, [sp, #96]
  4133ec:	str	x8, [sp, #88]
  4133f0:	b	413400 <ascii_strlower_n@plt+0xefa0>
  4133f4:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4133f8:	add	x8, x8, #0xf68
  4133fc:	str	x8, [sp, #88]
  413400:	ldr	x8, [sp, #88]
  413404:	ldr	w0, [sp, #124]
  413408:	ldr	w1, [sp, #120]
  41340c:	ldr	x2, [sp, #560]
  413410:	mov	w3, #0x302                 	// #770
  413414:	ldr	x4, [sp, #552]
  413418:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41341c:	add	x5, x5, #0xf70
  413420:	ldr	x6, [sp, #112]
  413424:	ldr	x7, [sp, #104]
  413428:	mov	x9, sp
  41342c:	str	x8, [x9]
  413430:	bl	403a20 <log_internal_realm@plt>
  413434:	str	w0, [sp, #84]
  413438:	b	413450 <ascii_strlower_n@plt+0xeff0>
  41343c:	ldr	w0, [sp, #780]
  413440:	bl	403a30 <abs@plt>
  413444:	mov	w8, wzr
  413448:	subs	w8, w8, w0, uxtb
  41344c:	str	w8, [sp, #84]
  413450:	ldr	w8, [sp, #84]
  413454:	str	w8, [sp, #772]
  413458:	mov	w8, #0xffffffea            	// #-22
  41345c:	stur	w8, [x29, #-4]
  413460:	mov	w8, #0x1                   	// #1
  413464:	stur	w8, [x29, #-224]
  413468:	b	413564 <ascii_strlower_n@plt+0xf104>
  41346c:	ldr	w0, [sp, #872]
  413470:	ldr	x1, [sp, #856]
  413474:	ldr	w2, [sp, #876]
  413478:	add	x3, sp, #0x370
  41347c:	bl	403fc0 <in_addr_ifindex_to_string@plt>
  413480:	stur	w0, [x29, #-156]
  413484:	ldur	w8, [x29, #-156]
  413488:	cmp	w8, #0x0
  41348c:	cset	w8, ge  // ge = tcont
  413490:	tbnz	w8, #0, 413524 <ascii_strlower_n@plt+0xf0c4>
  413494:	mov	w8, #0x3                   	// #3
  413498:	str	w8, [sp, #768]
  41349c:	ldur	w8, [x29, #-156]
  4134a0:	str	w8, [sp, #764]
  4134a4:	str	wzr, [sp, #760]
  4134a8:	ldr	w0, [sp, #760]
  4134ac:	bl	403a10 <log_get_max_level_realm@plt>
  4134b0:	ldr	w8, [sp, #768]
  4134b4:	and	w8, w8, #0x7
  4134b8:	cmp	w0, w8
  4134bc:	b.lt	4134f4 <ascii_strlower_n@plt+0xf094>  // b.tstop
  4134c0:	ldr	w8, [sp, #760]
  4134c4:	ldr	w9, [sp, #768]
  4134c8:	orr	w0, w9, w8, lsl #10
  4134cc:	ldr	w1, [sp, #764]
  4134d0:	ldur	x6, [x29, #-24]
  4134d4:	ldr	x2, [sp, #560]
  4134d8:	mov	w3, #0x308                 	// #776
  4134dc:	ldr	x4, [sp, #552]
  4134e0:	adrp	x5, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4134e4:	add	x5, x5, #0xfb8
  4134e8:	bl	403a20 <log_internal_realm@plt>
  4134ec:	str	w0, [sp, #80]
  4134f0:	b	413508 <ascii_strlower_n@plt+0xf0a8>
  4134f4:	ldr	w0, [sp, #764]
  4134f8:	bl	403a30 <abs@plt>
  4134fc:	mov	w8, wzr
  413500:	subs	w8, w8, w0, uxtb
  413504:	str	w8, [sp, #80]
  413508:	ldr	w8, [sp, #80]
  41350c:	str	w8, [sp, #756]
  413510:	ldr	w8, [sp, #756]
  413514:	stur	w8, [x29, #-4]
  413518:	mov	w8, #0x1                   	// #1
  41351c:	stur	w8, [x29, #-224]
  413520:	b	413564 <ascii_strlower_n@plt+0xf104>
  413524:	ldur	x8, [x29, #-112]
  413528:	ldr	x3, [sp, #880]
  41352c:	ldr	x0, [sp, #520]
  413530:	mov	w1, w8
  413534:	ldr	x2, [sp, #544]
  413538:	bl	403ab0 <printf@plt>
  41353c:	str	w0, [sp, #868]
  413540:	ldr	w0, [sp, #868]
  413544:	ldr	w1, [sp, #876]
  413548:	bl	4122cc <ascii_strlower_n@plt+0xde6c>
  41354c:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  413550:	add	x9, x9, #0x1e8
  413554:	ldr	x1, [x9]
  413558:	mov	w0, #0xa                   	// #10
  41355c:	bl	403db0 <fputc@plt>
  413560:	stur	wzr, [x29, #-224]
  413564:	add	x0, sp, #0x370
  413568:	bl	405970 <ascii_strlower_n@plt+0x1510>
  41356c:	ldur	w8, [x29, #-224]
  413570:	str	w8, [sp, #76]
  413574:	cbz	w8, 41358c <ascii_strlower_n@plt+0xf12c>
  413578:	b	41357c <ascii_strlower_n@plt+0xf11c>
  41357c:	ldr	w8, [sp, #76]
  413580:	cmp	w8, #0x8
  413584:	b.eq	413000 <ascii_strlower_n@plt+0xeba0>  // b.none
  413588:	b	413db0 <ascii_strlower_n@plt+0xf950>
  41358c:	b	413000 <ascii_strlower_n@plt+0xeba0>
  413590:	ldur	w8, [x29, #-156]
  413594:	cmp	w8, #0x0
  413598:	cset	w8, ge  // ge = tcont
  41359c:	tbnz	w8, #0, 413628 <ascii_strlower_n@plt+0xf1c8>
  4135a0:	mov	w8, #0x3                   	// #3
  4135a4:	str	w8, [sp, #752]
  4135a8:	ldur	w8, [x29, #-156]
  4135ac:	str	w8, [sp, #748]
  4135b0:	str	wzr, [sp, #744]
  4135b4:	ldr	w0, [sp, #744]
  4135b8:	bl	403a10 <log_get_max_level_realm@plt>
  4135bc:	ldr	w8, [sp, #752]
  4135c0:	and	w8, w8, #0x7
  4135c4:	cmp	w0, w8
  4135c8:	b.lt	4135f8 <ascii_strlower_n@plt+0xf198>  // b.tstop
  4135cc:	ldr	w8, [sp, #744]
  4135d0:	ldr	w9, [sp, #752]
  4135d4:	orr	w0, w9, w8, lsl #10
  4135d8:	ldr	w1, [sp, #748]
  4135dc:	ldr	x2, [sp, #560]
  4135e0:	mov	w3, #0x30f                 	// #783
  4135e4:	ldr	x4, [sp, #552]
  4135e8:	ldr	x5, [sp, #536]
  4135ec:	bl	403a20 <log_internal_realm@plt>
  4135f0:	str	w0, [sp, #72]
  4135f4:	b	41360c <ascii_strlower_n@plt+0xf1ac>
  4135f8:	ldr	w0, [sp, #748]
  4135fc:	bl	403a30 <abs@plt>
  413600:	mov	w8, wzr
  413604:	subs	w8, w8, w0, uxtb
  413608:	str	w8, [sp, #72]
  41360c:	ldr	w8, [sp, #72]
  413610:	str	w8, [sp, #740]
  413614:	ldr	w8, [sp, #740]
  413618:	stur	w8, [x29, #-4]
  41361c:	mov	w8, #0x1                   	// #1
  413620:	stur	w8, [x29, #-224]
  413624:	b	413db0 <ascii_strlower_n@plt+0xf950>
  413628:	ldur	x0, [x29, #-80]
  41362c:	bl	403e80 <sd_bus_message_exit_container@plt>
  413630:	stur	w0, [x29, #-156]
  413634:	ldur	w8, [x29, #-156]
  413638:	cmp	w8, #0x0
  41363c:	cset	w8, ge  // ge = tcont
  413640:	tbnz	w8, #0, 4136cc <ascii_strlower_n@plt+0xf26c>
  413644:	mov	w8, #0x3                   	// #3
  413648:	str	w8, [sp, #736]
  41364c:	ldur	w8, [x29, #-156]
  413650:	str	w8, [sp, #732]
  413654:	str	wzr, [sp, #728]
  413658:	ldr	w0, [sp, #728]
  41365c:	bl	403a10 <log_get_max_level_realm@plt>
  413660:	ldr	w8, [sp, #736]
  413664:	and	w8, w8, #0x7
  413668:	cmp	w0, w8
  41366c:	b.lt	41369c <ascii_strlower_n@plt+0xf23c>  // b.tstop
  413670:	ldr	w8, [sp, #728]
  413674:	ldr	w9, [sp, #736]
  413678:	orr	w0, w9, w8, lsl #10
  41367c:	ldr	w1, [sp, #732]
  413680:	ldr	x2, [sp, #560]
  413684:	mov	w3, #0x313                 	// #787
  413688:	ldr	x4, [sp, #552]
  41368c:	ldr	x5, [sp, #536]
  413690:	bl	403a20 <log_internal_realm@plt>
  413694:	str	w0, [sp, #68]
  413698:	b	4136b0 <ascii_strlower_n@plt+0xf250>
  41369c:	ldr	w0, [sp, #732]
  4136a0:	bl	403a30 <abs@plt>
  4136a4:	mov	w8, wzr
  4136a8:	subs	w8, w8, w0, uxtb
  4136ac:	str	w8, [sp, #68]
  4136b0:	ldr	w8, [sp, #68]
  4136b4:	str	w8, [sp, #724]
  4136b8:	ldr	w8, [sp, #724]
  4136bc:	stur	w8, [x29, #-4]
  4136c0:	mov	w8, #0x1                   	// #1
  4136c4:	stur	w8, [x29, #-224]
  4136c8:	b	413db0 <ascii_strlower_n@plt+0xf950>
  4136cc:	ldur	x0, [x29, #-80]
  4136d0:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4136d4:	add	x1, x1, #0x6f2
  4136d8:	add	x2, sp, #0x398
  4136dc:	bl	403d00 <sd_bus_message_read@plt>
  4136e0:	stur	w0, [x29, #-156]
  4136e4:	ldur	w8, [x29, #-156]
  4136e8:	cmp	w8, #0x0
  4136ec:	cset	w8, ge  // ge = tcont
  4136f0:	tbnz	w8, #0, 41377c <ascii_strlower_n@plt+0xf31c>
  4136f4:	mov	w8, #0x3                   	// #3
  4136f8:	str	w8, [sp, #720]
  4136fc:	ldur	w8, [x29, #-156]
  413700:	str	w8, [sp, #716]
  413704:	str	wzr, [sp, #712]
  413708:	ldr	w0, [sp, #712]
  41370c:	bl	403a10 <log_get_max_level_realm@plt>
  413710:	ldr	w8, [sp, #720]
  413714:	and	w8, w8, #0x7
  413718:	cmp	w0, w8
  41371c:	b.lt	41374c <ascii_strlower_n@plt+0xf2ec>  // b.tstop
  413720:	ldr	w8, [sp, #712]
  413724:	ldr	w9, [sp, #720]
  413728:	orr	w0, w9, w8, lsl #10
  41372c:	ldr	w1, [sp, #716]
  413730:	ldr	x2, [sp, #560]
  413734:	mov	w3, #0x317                 	// #791
  413738:	ldr	x4, [sp, #552]
  41373c:	ldr	x5, [sp, #536]
  413740:	bl	403a20 <log_internal_realm@plt>
  413744:	str	w0, [sp, #64]
  413748:	b	413760 <ascii_strlower_n@plt+0xf300>
  41374c:	ldr	w0, [sp, #716]
  413750:	bl	403a30 <abs@plt>
  413754:	mov	w8, wzr
  413758:	subs	w8, w8, w0, uxtb
  41375c:	str	w8, [sp, #64]
  413760:	ldr	w8, [sp, #64]
  413764:	str	w8, [sp, #708]
  413768:	ldr	w8, [sp, #708]
  41376c:	stur	w8, [x29, #-4]
  413770:	mov	w8, #0x1                   	// #1
  413774:	stur	w8, [x29, #-224]
  413778:	b	413db0 <ascii_strlower_n@plt+0xf950>
  41377c:	ldr	x0, [sp, #928]
  413780:	ldr	x1, [sp, #920]
  413784:	bl	403bc0 <strcmp@plt>
  413788:	cbz	w0, 4137a8 <ascii_strlower_n@plt+0xf348>
  41378c:	ldur	x8, [x29, #-112]
  413790:	ldr	x3, [sp, #920]
  413794:	adrp	x0, 430000 <ascii_strlower_n@plt+0x2bba0>
  413798:	add	x0, x0, #0x189
  41379c:	mov	w1, w8
  4137a0:	ldr	x2, [sp, #544]
  4137a4:	bl	403ab0 <printf@plt>
  4137a8:	ldur	x0, [x29, #-80]
  4137ac:	bl	403e80 <sd_bus_message_exit_container@plt>
  4137b0:	stur	w0, [x29, #-156]
  4137b4:	ldur	w8, [x29, #-156]
  4137b8:	cmp	w8, #0x0
  4137bc:	cset	w8, ge  // ge = tcont
  4137c0:	tbnz	w8, #0, 41384c <ascii_strlower_n@plt+0xf3ec>
  4137c4:	mov	w8, #0x3                   	// #3
  4137c8:	str	w8, [sp, #704]
  4137cc:	ldur	w8, [x29, #-156]
  4137d0:	str	w8, [sp, #700]
  4137d4:	str	wzr, [sp, #696]
  4137d8:	ldr	w0, [sp, #696]
  4137dc:	bl	403a10 <log_get_max_level_realm@plt>
  4137e0:	ldr	w8, [sp, #704]
  4137e4:	and	w8, w8, #0x7
  4137e8:	cmp	w0, w8
  4137ec:	b.lt	41381c <ascii_strlower_n@plt+0xf3bc>  // b.tstop
  4137f0:	ldr	w8, [sp, #696]
  4137f4:	ldr	w9, [sp, #704]
  4137f8:	orr	w0, w9, w8, lsl #10
  4137fc:	ldr	w1, [sp, #700]
  413800:	ldr	x2, [sp, #560]
  413804:	mov	w3, #0x31e                 	// #798
  413808:	ldr	x4, [sp, #552]
  41380c:	ldr	x5, [sp, #536]
  413810:	bl	403a20 <log_internal_realm@plt>
  413814:	str	w0, [sp, #60]
  413818:	b	413830 <ascii_strlower_n@plt+0xf3d0>
  41381c:	ldr	w0, [sp, #700]
  413820:	bl	403a30 <abs@plt>
  413824:	mov	w8, wzr
  413828:	subs	w8, w8, w0, uxtb
  41382c:	str	w8, [sp, #60]
  413830:	ldr	w8, [sp, #60]
  413834:	str	w8, [sp, #692]
  413838:	ldr	w8, [sp, #692]
  41383c:	stur	w8, [x29, #-4]
  413840:	mov	w8, #0x1                   	// #1
  413844:	stur	w8, [x29, #-224]
  413848:	b	413db0 <ascii_strlower_n@plt+0xf950>
  41384c:	ldur	w8, [x29, #-140]
  413850:	add	w8, w8, #0x1
  413854:	stur	w8, [x29, #-140]
  413858:	b	412d4c <ascii_strlower_n@plt+0xe8ec>
  41385c:	ldur	w8, [x29, #-156]
  413860:	cmp	w8, #0x0
  413864:	cset	w8, ge  // ge = tcont
  413868:	tbnz	w8, #0, 4138f4 <ascii_strlower_n@plt+0xf494>
  41386c:	mov	w8, #0x3                   	// #3
  413870:	str	w8, [sp, #688]
  413874:	ldur	w8, [x29, #-156]
  413878:	str	w8, [sp, #684]
  41387c:	str	wzr, [sp, #680]
  413880:	ldr	w0, [sp, #680]
  413884:	bl	403a10 <log_get_max_level_realm@plt>
  413888:	ldr	w8, [sp, #688]
  41388c:	and	w8, w8, #0x7
  413890:	cmp	w0, w8
  413894:	b.lt	4138c4 <ascii_strlower_n@plt+0xf464>  // b.tstop
  413898:	ldr	w8, [sp, #680]
  41389c:	ldr	w9, [sp, #688]
  4138a0:	orr	w0, w9, w8, lsl #10
  4138a4:	ldr	w1, [sp, #684]
  4138a8:	ldr	x2, [sp, #560]
  4138ac:	mov	w3, #0x323                 	// #803
  4138b0:	ldr	x4, [sp, #552]
  4138b4:	ldr	x5, [sp, #536]
  4138b8:	bl	403a20 <log_internal_realm@plt>
  4138bc:	str	w0, [sp, #56]
  4138c0:	b	4138d8 <ascii_strlower_n@plt+0xf478>
  4138c4:	ldr	w0, [sp, #684]
  4138c8:	bl	403a30 <abs@plt>
  4138cc:	mov	w8, wzr
  4138d0:	subs	w8, w8, w0, uxtb
  4138d4:	str	w8, [sp, #56]
  4138d8:	ldr	w8, [sp, #56]
  4138dc:	str	w8, [sp, #676]
  4138e0:	ldr	w8, [sp, #676]
  4138e4:	stur	w8, [x29, #-4]
  4138e8:	mov	w8, #0x1                   	// #1
  4138ec:	stur	w8, [x29, #-224]
  4138f0:	b	413db0 <ascii_strlower_n@plt+0xf950>
  4138f4:	ldur	x0, [x29, #-80]
  4138f8:	bl	403e80 <sd_bus_message_exit_container@plt>
  4138fc:	stur	w0, [x29, #-156]
  413900:	ldur	w8, [x29, #-156]
  413904:	cmp	w8, #0x0
  413908:	cset	w8, ge  // ge = tcont
  41390c:	tbnz	w8, #0, 413998 <ascii_strlower_n@plt+0xf538>
  413910:	mov	w8, #0x3                   	// #3
  413914:	str	w8, [sp, #672]
  413918:	ldur	w8, [x29, #-156]
  41391c:	str	w8, [sp, #668]
  413920:	str	wzr, [sp, #664]
  413924:	ldr	w0, [sp, #664]
  413928:	bl	403a10 <log_get_max_level_realm@plt>
  41392c:	ldr	w8, [sp, #672]
  413930:	and	w8, w8, #0x7
  413934:	cmp	w0, w8
  413938:	b.lt	413968 <ascii_strlower_n@plt+0xf508>  // b.tstop
  41393c:	ldr	w8, [sp, #664]
  413940:	ldr	w9, [sp, #672]
  413944:	orr	w0, w9, w8, lsl #10
  413948:	ldr	w1, [sp, #668]
  41394c:	ldr	x2, [sp, #560]
  413950:	mov	w3, #0x327                 	// #807
  413954:	ldr	x4, [sp, #552]
  413958:	ldr	x5, [sp, #536]
  41395c:	bl	403a20 <log_internal_realm@plt>
  413960:	str	w0, [sp, #52]
  413964:	b	41397c <ascii_strlower_n@plt+0xf51c>
  413968:	ldr	w0, [sp, #668]
  41396c:	bl	403a30 <abs@plt>
  413970:	mov	w8, wzr
  413974:	subs	w8, w8, w0, uxtb
  413978:	str	w8, [sp, #52]
  41397c:	ldr	w8, [sp, #52]
  413980:	str	w8, [sp, #660]
  413984:	ldr	w8, [sp, #660]
  413988:	stur	w8, [x29, #-4]
  41398c:	mov	w8, #0x1                   	// #1
  413990:	stur	w8, [x29, #-224]
  413994:	b	413db0 <ascii_strlower_n@plt+0xf950>
  413998:	ldur	x0, [x29, #-80]
  41399c:	mov	w1, #0x61                  	// #97
  4139a0:	adrp	x2, 430000 <ascii_strlower_n@plt+0x2bba0>
  4139a4:	add	x2, x2, #0x192
  4139a8:	bl	403e60 <sd_bus_message_enter_container@plt>
  4139ac:	stur	w0, [x29, #-156]
  4139b0:	ldur	w8, [x29, #-156]
  4139b4:	cmp	w8, #0x0
  4139b8:	cset	w8, ge  // ge = tcont
  4139bc:	tbnz	w8, #0, 413a48 <ascii_strlower_n@plt+0xf5e8>
  4139c0:	mov	w8, #0x3                   	// #3
  4139c4:	str	w8, [sp, #656]
  4139c8:	ldur	w8, [x29, #-156]
  4139cc:	str	w8, [sp, #652]
  4139d0:	str	wzr, [sp, #648]
  4139d4:	ldr	w0, [sp, #648]
  4139d8:	bl	403a10 <log_get_max_level_realm@plt>
  4139dc:	ldr	w8, [sp, #656]
  4139e0:	and	w8, w8, #0x7
  4139e4:	cmp	w0, w8
  4139e8:	b.lt	413a18 <ascii_strlower_n@plt+0xf5b8>  // b.tstop
  4139ec:	ldr	w8, [sp, #648]
  4139f0:	ldr	w9, [sp, #656]
  4139f4:	orr	w0, w9, w8, lsl #10
  4139f8:	ldr	w1, [sp, #652]
  4139fc:	ldr	x2, [sp, #560]
  413a00:	mov	w3, #0x32b                 	// #811
  413a04:	ldr	x4, [sp, #552]
  413a08:	ldr	x5, [sp, #536]
  413a0c:	bl	403a20 <log_internal_realm@plt>
  413a10:	str	w0, [sp, #48]
  413a14:	b	413a2c <ascii_strlower_n@plt+0xf5cc>
  413a18:	ldr	w0, [sp, #652]
  413a1c:	bl	403a30 <abs@plt>
  413a20:	mov	w8, wzr
  413a24:	subs	w8, w8, w0, uxtb
  413a28:	str	w8, [sp, #48]
  413a2c:	ldr	w8, [sp, #48]
  413a30:	str	w8, [sp, #644]
  413a34:	ldr	w8, [sp, #644]
  413a38:	stur	w8, [x29, #-4]
  413a3c:	mov	w8, #0x1                   	// #1
  413a40:	stur	w8, [x29, #-224]
  413a44:	b	413db0 <ascii_strlower_n@plt+0xf950>
  413a48:	ldur	x0, [x29, #-80]
  413a4c:	mov	w1, #0x79                  	// #121
  413a50:	sub	x2, x29, #0x88
  413a54:	sub	x3, x29, #0x78
  413a58:	bl	403ea0 <sd_bus_message_read_array@plt>
  413a5c:	stur	w0, [x29, #-156]
  413a60:	cmp	w0, #0x0
  413a64:	cset	w8, le
  413a68:	tbnz	w8, #0, 413af8 <ascii_strlower_n@plt+0xf698>
  413a6c:	mov	x8, xzr
  413a70:	str	x8, [sp, #632]
  413a74:	ldur	x0, [x29, #-136]
  413a78:	ldur	x1, [x29, #-120]
  413a7c:	bl	404010 <cescape_length@plt>
  413a80:	str	x0, [sp, #632]
  413a84:	ldr	x8, [sp, #632]
  413a88:	cbnz	x8, 413ab4 <ascii_strlower_n@plt+0xf654>
  413a8c:	mov	w8, wzr
  413a90:	mov	w0, w8
  413a94:	ldr	x1, [sp, #560]
  413a98:	mov	w2, #0x332                 	// #818
  413a9c:	ldr	x3, [sp, #552]
  413aa0:	bl	403a90 <log_oom_internal@plt>
  413aa4:	stur	w0, [x29, #-4]
  413aa8:	mov	w8, #0x1                   	// #1
  413aac:	stur	w8, [x29, #-224]
  413ab0:	b	413ad4 <ascii_strlower_n@plt+0xf674>
  413ab4:	ldur	x8, [x29, #-112]
  413ab8:	ldr	x3, [sp, #632]
  413abc:	adrp	x0, 430000 <ascii_strlower_n@plt+0x2bba0>
  413ac0:	add	x0, x0, #0x195
  413ac4:	mov	w1, w8
  413ac8:	ldr	x2, [sp, #544]
  413acc:	bl	403ab0 <printf@plt>
  413ad0:	stur	wzr, [x29, #-224]
  413ad4:	add	x0, sp, #0x278
  413ad8:	bl	405970 <ascii_strlower_n@plt+0x1510>
  413adc:	ldur	w8, [x29, #-224]
  413ae0:	cmp	w8, #0x0
  413ae4:	cset	w8, eq  // eq = none
  413ae8:	eor	w8, w8, #0x1
  413aec:	tbnz	w8, #0, 413db0 <ascii_strlower_n@plt+0xf950>
  413af0:	b	413af4 <ascii_strlower_n@plt+0xf694>
  413af4:	b	413a48 <ascii_strlower_n@plt+0xf5e8>
  413af8:	ldur	w8, [x29, #-156]
  413afc:	cmp	w8, #0x0
  413b00:	cset	w8, ge  // ge = tcont
  413b04:	tbnz	w8, #0, 413b90 <ascii_strlower_n@plt+0xf730>
  413b08:	mov	w8, #0x3                   	// #3
  413b0c:	str	w8, [sp, #628]
  413b10:	ldur	w8, [x29, #-156]
  413b14:	str	w8, [sp, #624]
  413b18:	str	wzr, [sp, #620]
  413b1c:	ldr	w0, [sp, #620]
  413b20:	bl	403a10 <log_get_max_level_realm@plt>
  413b24:	ldr	w8, [sp, #628]
  413b28:	and	w8, w8, #0x7
  413b2c:	cmp	w0, w8
  413b30:	b.lt	413b60 <ascii_strlower_n@plt+0xf700>  // b.tstop
  413b34:	ldr	w8, [sp, #620]
  413b38:	ldr	w9, [sp, #628]
  413b3c:	orr	w0, w9, w8, lsl #10
  413b40:	ldr	w1, [sp, #624]
  413b44:	ldr	x2, [sp, #560]
  413b48:	mov	w3, #0x337                 	// #823
  413b4c:	ldr	x4, [sp, #552]
  413b50:	ldr	x5, [sp, #536]
  413b54:	bl	403a20 <log_internal_realm@plt>
  413b58:	str	w0, [sp, #44]
  413b5c:	b	413b74 <ascii_strlower_n@plt+0xf714>
  413b60:	ldr	w0, [sp, #624]
  413b64:	bl	403a30 <abs@plt>
  413b68:	mov	w8, wzr
  413b6c:	subs	w8, w8, w0, uxtb
  413b70:	str	w8, [sp, #44]
  413b74:	ldr	w8, [sp, #44]
  413b78:	str	w8, [sp, #616]
  413b7c:	ldr	w8, [sp, #616]
  413b80:	stur	w8, [x29, #-4]
  413b84:	mov	w8, #0x1                   	// #1
  413b88:	stur	w8, [x29, #-224]
  413b8c:	b	413db0 <ascii_strlower_n@plt+0xf950>
  413b90:	ldur	x0, [x29, #-80]
  413b94:	bl	403e80 <sd_bus_message_exit_container@plt>
  413b98:	stur	w0, [x29, #-156]
  413b9c:	ldur	w8, [x29, #-156]
  413ba0:	cmp	w8, #0x0
  413ba4:	cset	w8, ge  // ge = tcont
  413ba8:	tbnz	w8, #0, 413c34 <ascii_strlower_n@plt+0xf7d4>
  413bac:	mov	w8, #0x3                   	// #3
  413bb0:	str	w8, [sp, #612]
  413bb4:	ldur	w8, [x29, #-156]
  413bb8:	str	w8, [sp, #608]
  413bbc:	str	wzr, [sp, #604]
  413bc0:	ldr	w0, [sp, #604]
  413bc4:	bl	403a10 <log_get_max_level_realm@plt>
  413bc8:	ldr	w8, [sp, #612]
  413bcc:	and	w8, w8, #0x7
  413bd0:	cmp	w0, w8
  413bd4:	b.lt	413c04 <ascii_strlower_n@plt+0xf7a4>  // b.tstop
  413bd8:	ldr	w8, [sp, #604]
  413bdc:	ldr	w9, [sp, #612]
  413be0:	orr	w0, w9, w8, lsl #10
  413be4:	ldr	w1, [sp, #608]
  413be8:	ldr	x2, [sp, #560]
  413bec:	mov	w3, #0x33b                 	// #827
  413bf0:	ldr	x4, [sp, #552]
  413bf4:	ldr	x5, [sp, #536]
  413bf8:	bl	403a20 <log_internal_realm@plt>
  413bfc:	str	w0, [sp, #40]
  413c00:	b	413c18 <ascii_strlower_n@plt+0xf7b8>
  413c04:	ldr	w0, [sp, #608]
  413c08:	bl	403a30 <abs@plt>
  413c0c:	mov	w8, wzr
  413c10:	subs	w8, w8, w0, uxtb
  413c14:	str	w8, [sp, #40]
  413c18:	ldr	w8, [sp, #40]
  413c1c:	str	w8, [sp, #600]
  413c20:	ldr	w8, [sp, #600]
  413c24:	stur	w8, [x29, #-4]
  413c28:	mov	w8, #0x1                   	// #1
  413c2c:	stur	w8, [x29, #-224]
  413c30:	b	413db0 <ascii_strlower_n@plt+0xf950>
  413c34:	ldur	x0, [x29, #-80]
  413c38:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  413c3c:	add	x1, x1, #0x19c
  413c40:	sub	x2, x29, #0x30
  413c44:	sub	x3, x29, #0x38
  413c48:	sub	x4, x29, #0x40
  413c4c:	sub	x5, x29, #0x80
  413c50:	bl	403d00 <sd_bus_message_read@plt>
  413c54:	stur	w0, [x29, #-156]
  413c58:	ldur	w8, [x29, #-156]
  413c5c:	cmp	w8, #0x0
  413c60:	cset	w8, ge  // ge = tcont
  413c64:	tbnz	w8, #0, 413cf0 <ascii_strlower_n@plt+0xf890>
  413c68:	mov	w8, #0x3                   	// #3
  413c6c:	str	w8, [sp, #596]
  413c70:	ldur	w8, [x29, #-156]
  413c74:	str	w8, [sp, #592]
  413c78:	str	wzr, [sp, #588]
  413c7c:	ldr	w0, [sp, #588]
  413c80:	bl	403a10 <log_get_max_level_realm@plt>
  413c84:	ldr	w8, [sp, #596]
  413c88:	and	w8, w8, #0x7
  413c8c:	cmp	w0, w8
  413c90:	b.lt	413cc0 <ascii_strlower_n@plt+0xf860>  // b.tstop
  413c94:	ldr	w8, [sp, #588]
  413c98:	ldr	w9, [sp, #596]
  413c9c:	orr	w0, w9, w8, lsl #10
  413ca0:	ldr	w1, [sp, #592]
  413ca4:	ldr	x2, [sp, #560]
  413ca8:	mov	w3, #0x33f                 	// #831
  413cac:	ldr	x4, [sp, #552]
  413cb0:	ldr	x5, [sp, #536]
  413cb4:	bl	403a20 <log_internal_realm@plt>
  413cb8:	str	w0, [sp, #36]
  413cbc:	b	413cd4 <ascii_strlower_n@plt+0xf874>
  413cc0:	ldr	w0, [sp, #592]
  413cc4:	bl	403a30 <abs@plt>
  413cc8:	mov	w8, wzr
  413ccc:	subs	w8, w8, w0, uxtb
  413cd0:	str	w8, [sp, #36]
  413cd4:	ldr	w8, [sp, #36]
  413cd8:	str	w8, [sp, #584]
  413cdc:	ldr	w8, [sp, #584]
  413ce0:	stur	w8, [x29, #-4]
  413ce4:	mov	w8, #0x1                   	// #1
  413ce8:	stur	w8, [x29, #-224]
  413cec:	b	413db0 <ascii_strlower_n@plt+0xf950>
  413cf0:	ldur	x0, [x29, #-48]
  413cf4:	bl	413ddc <ascii_strlower_n@plt+0xf97c>
  413cf8:	stur	x0, [x29, #-48]
  413cfc:	ldur	x0, [x29, #-56]
  413d00:	bl	413ddc <ascii_strlower_n@plt+0xf97c>
  413d04:	stur	x0, [x29, #-56]
  413d08:	ldur	x0, [x29, #-24]
  413d0c:	ldur	x1, [x29, #-48]
  413d10:	bl	413e24 <ascii_strlower_n@plt+0xf9c4>
  413d14:	tbnz	w0, #0, 413d1c <ascii_strlower_n@plt+0xf8bc>
  413d18:	b	413d40 <ascii_strlower_n@plt+0xf8e0>
  413d1c:	ldur	x0, [x29, #-32]
  413d20:	ldur	x1, [x29, #-56]
  413d24:	bl	413e24 <ascii_strlower_n@plt+0xf9c4>
  413d28:	tbnz	w0, #0, 413d30 <ascii_strlower_n@plt+0xf8d0>
  413d2c:	b	413d40 <ascii_strlower_n@plt+0xf8e0>
  413d30:	ldur	x0, [x29, #-40]
  413d34:	ldur	x1, [x29, #-64]
  413d38:	bl	413e24 <ascii_strlower_n@plt+0xf9c4>
  413d3c:	tbnz	w0, #0, 413d98 <ascii_strlower_n@plt+0xf938>
  413d40:	ldur	x8, [x29, #-112]
  413d44:	adrp	x0, 430000 <ascii_strlower_n@plt+0x2bba0>
  413d48:	add	x0, x0, #0x1a1
  413d4c:	mov	w1, w8
  413d50:	ldr	x2, [sp, #544]
  413d54:	bl	403ab0 <printf@plt>
  413d58:	ldur	x9, [x29, #-48]
  413d5c:	cbz	x9, 413d70 <ascii_strlower_n@plt+0xf910>
  413d60:	ldur	x1, [x29, #-48]
  413d64:	adrp	x0, 430000 <ascii_strlower_n@plt+0x2bba0>
  413d68:	add	x0, x0, #0x1a6
  413d6c:	bl	403ab0 <printf@plt>
  413d70:	ldur	x8, [x29, #-56]
  413d74:	cbz	x8, 413d88 <ascii_strlower_n@plt+0xf928>
  413d78:	ldur	x1, [x29, #-56]
  413d7c:	adrp	x0, 430000 <ascii_strlower_n@plt+0x2bba0>
  413d80:	add	x0, x0, #0x1a6
  413d84:	bl	403ab0 <printf@plt>
  413d88:	ldur	x1, [x29, #-64]
  413d8c:	adrp	x0, 430000 <ascii_strlower_n@plt+0x2bba0>
  413d90:	add	x0, x0, #0x1aa
  413d94:	bl	403ab0 <printf@plt>
  413d98:	ldur	x0, [x29, #-128]
  413d9c:	ldur	x1, [x29, #-152]
  413da0:	bl	412074 <ascii_strlower_n@plt+0xdc14>
  413da4:	stur	wzr, [x29, #-4]
  413da8:	mov	w8, #0x1                   	// #1
  413dac:	stur	w8, [x29, #-224]
  413db0:	sub	x0, x29, #0x68
  413db4:	bl	403d20 <sd_bus_error_free@plt>
  413db8:	sub	x0, x29, #0x50
  413dbc:	bl	40d468 <ascii_strlower_n@plt+0x9008>
  413dc0:	sub	x0, x29, #0x48
  413dc4:	bl	40d468 <ascii_strlower_n@plt+0x9008>
  413dc8:	ldur	w0, [x29, #-4]
  413dcc:	add	sp, sp, #0x4c0
  413dd0:	ldr	x28, [sp, #16]
  413dd4:	ldp	x29, x30, [sp], #32
  413dd8:	ret
  413ddc:	sub	sp, sp, #0x20
  413de0:	stp	x29, x30, [sp, #16]
  413de4:	add	x29, sp, #0x10
  413de8:	str	x0, [sp, #8]
  413dec:	ldr	x0, [sp, #8]
  413df0:	bl	40dad0 <ascii_strlower_n@plt+0x9670>
  413df4:	tbnz	w0, #0, 413dfc <ascii_strlower_n@plt+0xf99c>
  413df8:	b	413e08 <ascii_strlower_n@plt+0xf9a8>
  413dfc:	mov	x8, xzr
  413e00:	str	x8, [sp]
  413e04:	b	413e10 <ascii_strlower_n@plt+0xf9b0>
  413e08:	ldr	x8, [sp, #8]
  413e0c:	str	x8, [sp]
  413e10:	ldr	x8, [sp]
  413e14:	mov	x0, x8
  413e18:	ldp	x29, x30, [sp, #16]
  413e1c:	add	sp, sp, #0x20
  413e20:	ret
  413e24:	sub	sp, sp, #0x20
  413e28:	stp	x29, x30, [sp, #16]
  413e2c:	add	x29, sp, #0x10
  413e30:	str	x0, [sp, #8]
  413e34:	str	x1, [sp]
  413e38:	ldr	x0, [sp, #8]
  413e3c:	ldr	x1, [sp]
  413e40:	bl	404020 <strcmp_ptr@plt>
  413e44:	cmp	w0, #0x0
  413e48:	cset	w8, eq  // eq = none
  413e4c:	and	w0, w8, #0x1
  413e50:	ldp	x29, x30, [sp, #16]
  413e54:	add	sp, sp, #0x20
  413e58:	ret
  413e5c:	stp	x29, x30, [sp, #-32]!
  413e60:	stp	x28, x19, [sp, #16]
  413e64:	mov	x29, sp
  413e68:	sub	sp, sp, #0x1e0
  413e6c:	mov	x19, sp
  413e70:	mov	x8, xzr
  413e74:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  413e78:	add	x9, x9, #0x6f4
  413e7c:	add	x9, x9, #0x3
  413e80:	adrp	x10, 430000 <ascii_strlower_n@plt+0x2bba0>
  413e84:	add	x10, x10, #0x1db
  413e88:	adrp	x11, 430000 <ascii_strlower_n@plt+0x2bba0>
  413e8c:	add	x11, x11, #0x1af
  413e90:	stur	x0, [x29, #-16]
  413e94:	stur	x1, [x29, #-24]
  413e98:	stur	x8, [x29, #-56]
  413e9c:	str	x9, [x19, #144]
  413ea0:	str	x10, [x19, #136]
  413ea4:	str	x11, [x19, #128]
  413ea8:	ldur	x8, [x29, #-16]
  413eac:	cmp	x8, #0x0
  413eb0:	cset	w9, ne  // ne = any
  413eb4:	mov	w10, #0x1                   	// #1
  413eb8:	eor	w9, w9, #0x1
  413ebc:	eor	w9, w9, w10
  413ec0:	eor	w9, w9, w10
  413ec4:	and	w9, w9, #0x1
  413ec8:	mov	w0, w9
  413ecc:	sxtw	x8, w0
  413ed0:	cbz	x8, 413ef4 <ascii_strlower_n@plt+0xfa94>
  413ed4:	mov	w8, wzr
  413ed8:	mov	w0, w8
  413edc:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  413ee0:	add	x1, x1, #0xf8
  413ee4:	ldr	x2, [x19, #144]
  413ee8:	mov	w3, #0x367                 	// #871
  413eec:	ldr	x4, [x19, #128]
  413ef0:	bl	4039d0 <log_assert_failed_realm@plt>
  413ef4:	ldur	x8, [x29, #-24]
  413ef8:	cmp	x8, #0x0
  413efc:	cset	w9, ne  // ne = any
  413f00:	mov	w10, #0x1                   	// #1
  413f04:	eor	w9, w9, #0x1
  413f08:	eor	w9, w9, w10
  413f0c:	eor	w9, w9, w10
  413f10:	and	w9, w9, #0x1
  413f14:	mov	w0, w9
  413f18:	sxtw	x8, w0
  413f1c:	cbz	x8, 413f40 <ascii_strlower_n@plt+0xfae0>
  413f20:	mov	w8, wzr
  413f24:	mov	w0, w8
  413f28:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  413f2c:	add	x1, x1, #0xe6c
  413f30:	ldr	x2, [x19, #144]
  413f34:	mov	w3, #0x368                 	// #872
  413f38:	ldr	x4, [x19, #128]
  413f3c:	bl	4039d0 <log_assert_failed_realm@plt>
  413f40:	ldur	x0, [x29, #-24]
  413f44:	mov	w1, #0x40                  	// #64
  413f48:	bl	404030 <strrchr@plt>
  413f4c:	stur	x0, [x29, #-32]
  413f50:	ldur	x8, [x29, #-32]
  413f54:	cbnz	x8, 413fec <ascii_strlower_n@plt+0xfb8c>
  413f58:	mov	w8, #0x3                   	// #3
  413f5c:	stur	w8, [x29, #-60]
  413f60:	mov	w8, #0x16                  	// #22
  413f64:	movk	w8, #0x4000, lsl #16
  413f68:	stur	w8, [x29, #-64]
  413f6c:	stur	wzr, [x29, #-68]
  413f70:	ldur	w0, [x29, #-68]
  413f74:	bl	403a10 <log_get_max_level_realm@plt>
  413f78:	ldur	w8, [x29, #-60]
  413f7c:	and	w8, w8, #0x7
  413f80:	cmp	w0, w8
  413f84:	b.lt	413fbc <ascii_strlower_n@plt+0xfb5c>  // b.tstop
  413f88:	ldur	w8, [x29, #-68]
  413f8c:	ldur	w9, [x29, #-60]
  413f90:	orr	w0, w9, w8, lsl #10
  413f94:	ldur	w1, [x29, #-64]
  413f98:	ldur	x6, [x29, #-24]
  413f9c:	ldr	x2, [x19, #144]
  413fa0:	mov	w3, #0x36d                 	// #877
  413fa4:	ldr	x4, [x19, #136]
  413fa8:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  413fac:	add	x5, x5, #0x1eb
  413fb0:	bl	403a20 <log_internal_realm@plt>
  413fb4:	str	w0, [x19, #124]
  413fb8:	b	413fd0 <ascii_strlower_n@plt+0xfb70>
  413fbc:	ldur	w0, [x29, #-64]
  413fc0:	bl	403a30 <abs@plt>
  413fc4:	mov	w8, wzr
  413fc8:	subs	w8, w8, w0, uxtb
  413fcc:	str	w8, [x19, #124]
  413fd0:	ldr	w8, [x19, #124]
  413fd4:	stur	w8, [x29, #-72]
  413fd8:	ldur	w8, [x29, #-72]
  413fdc:	stur	w8, [x29, #-4]
  413fe0:	mov	w8, #0x1                   	// #1
  413fe4:	stur	w8, [x29, #-76]
  413fe8:	b	414914 <ascii_strlower_n@plt+0x104b4>
  413fec:	ldur	x8, [x29, #-32]
  413ff0:	ldur	x9, [x29, #-24]
  413ff4:	cmp	x8, x9
  413ff8:	b.eq	414008 <ascii_strlower_n@plt+0xfba8>  // b.none
  413ffc:	ldur	x8, [x29, #-32]
  414000:	ldrb	w9, [x8, #1]
  414004:	cbnz	w9, 41409c <ascii_strlower_n@plt+0xfc3c>
  414008:	mov	w8, #0x3                   	// #3
  41400c:	stur	w8, [x29, #-80]
  414010:	mov	w8, #0x16                  	// #22
  414014:	movk	w8, #0x4000, lsl #16
  414018:	stur	w8, [x29, #-84]
  41401c:	stur	wzr, [x29, #-88]
  414020:	ldur	w0, [x29, #-88]
  414024:	bl	403a10 <log_get_max_level_realm@plt>
  414028:	ldur	w8, [x29, #-80]
  41402c:	and	w8, w8, #0x7
  414030:	cmp	w0, w8
  414034:	b.lt	41406c <ascii_strlower_n@plt+0xfc0c>  // b.tstop
  414038:	ldur	w8, [x29, #-88]
  41403c:	ldur	w9, [x29, #-80]
  414040:	orr	w0, w9, w8, lsl #10
  414044:	ldur	w1, [x29, #-84]
  414048:	ldur	x6, [x29, #-24]
  41404c:	ldr	x2, [x19, #144]
  414050:	mov	w3, #0x370                 	// #880
  414054:	ldr	x4, [x19, #136]
  414058:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  41405c:	add	x5, x5, #0x20e
  414060:	bl	403a20 <log_internal_realm@plt>
  414064:	str	w0, [x19, #120]
  414068:	b	414080 <ascii_strlower_n@plt+0xfc20>
  41406c:	ldur	w0, [x29, #-84]
  414070:	bl	403a30 <abs@plt>
  414074:	mov	w8, wzr
  414078:	subs	w8, w8, w0, uxtb
  41407c:	str	w8, [x19, #120]
  414080:	ldr	w8, [x19, #120]
  414084:	stur	w8, [x29, #-92]
  414088:	ldur	w8, [x29, #-92]
  41408c:	stur	w8, [x29, #-4]
  414090:	mov	w8, #0x1                   	// #1
  414094:	stur	w8, [x29, #-76]
  414098:	b	414914 <ascii_strlower_n@plt+0x104b4>
  41409c:	ldur	x8, [x29, #-32]
  4140a0:	add	x8, x8, #0x1
  4140a4:	stur	x8, [x29, #-32]
  4140a8:	ldur	x0, [x29, #-24]
  4140ac:	ldur	x8, [x29, #-32]
  4140b0:	mov	x9, #0xffffffffffffffff    	// #-1
  4140b4:	add	x8, x8, x9
  4140b8:	ldur	x9, [x29, #-24]
  4140bc:	subs	x1, x8, x9
  4140c0:	sub	x2, x29, #0x38
  4140c4:	bl	414930 <ascii_strlower_n@plt+0x104d0>
  4140c8:	stur	w0, [x29, #-44]
  4140cc:	ldur	w10, [x29, #-44]
  4140d0:	cmp	w10, #0x0
  4140d4:	cset	w10, ge  // ge = tcont
  4140d8:	tbnz	w10, #0, 414168 <ascii_strlower_n@plt+0xfd08>
  4140dc:	mov	w8, #0x3                   	// #3
  4140e0:	stur	w8, [x29, #-96]
  4140e4:	ldur	w8, [x29, #-44]
  4140e8:	stur	w8, [x29, #-100]
  4140ec:	stur	wzr, [x29, #-104]
  4140f0:	ldur	w0, [x29, #-104]
  4140f4:	bl	403a10 <log_get_max_level_realm@plt>
  4140f8:	ldur	w8, [x29, #-96]
  4140fc:	and	w8, w8, #0x7
  414100:	cmp	w0, w8
  414104:	b.lt	414138 <ascii_strlower_n@plt+0xfcd8>  // b.tstop
  414108:	ldur	w8, [x29, #-104]
  41410c:	ldur	w9, [x29, #-96]
  414110:	orr	w0, w9, w8, lsl #10
  414114:	ldur	w1, [x29, #-100]
  414118:	ldr	x2, [x19, #144]
  41411c:	mov	w3, #0x375                 	// #885
  414120:	ldr	x4, [x19, #136]
  414124:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  414128:	add	x5, x5, #0x234
  41412c:	bl	403a20 <log_internal_realm@plt>
  414130:	str	w0, [x19, #116]
  414134:	b	41414c <ascii_strlower_n@plt+0xfcec>
  414138:	ldur	w0, [x29, #-100]
  41413c:	bl	403a30 <abs@plt>
  414140:	mov	w8, wzr
  414144:	subs	w8, w8, w0, uxtb
  414148:	str	w8, [x19, #116]
  41414c:	ldr	w8, [x19, #116]
  414150:	stur	w8, [x29, #-108]
  414154:	ldur	w8, [x29, #-108]
  414158:	stur	w8, [x29, #-4]
  41415c:	mov	w8, #0x1                   	// #1
  414160:	stur	w8, [x29, #-76]
  414164:	b	414914 <ascii_strlower_n@plt+0x104b4>
  414168:	ldur	x0, [x29, #-56]
  41416c:	mov	x1, #0x38                  	// #56
  414170:	bl	404040 <strshorten@plt>
  414174:	ldur	x8, [x29, #-56]
  414178:	sub	x9, x29, #0x88
  41417c:	stur	x8, [x29, #-136]
  414180:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  414184:	add	x8, x8, #0x247
  414188:	str	x8, [x9, #8]
  41418c:	ldur	x8, [x29, #-32]
  414190:	str	x8, [x9, #16]
  414194:	stur	xzr, [x29, #-160]
  414198:	stur	xzr, [x29, #-168]
  41419c:	ldur	x8, [x29, #-168]
  4141a0:	mov	w9, #0x0                   	// #0
  4141a4:	cmp	x8, #0x3
  4141a8:	str	w9, [x19, #112]
  4141ac:	b.cs	4141d4 <ascii_strlower_n@plt+0xfd74>  // b.hs, b.nlast
  4141b0:	ldur	x8, [x29, #-168]
  4141b4:	mov	x9, #0x8                   	// #8
  4141b8:	mul	x8, x9, x8
  4141bc:	sub	x9, x29, #0x88
  4141c0:	add	x8, x9, x8
  4141c4:	ldr	x8, [x8]
  4141c8:	cmp	x8, #0x0
  4141cc:	cset	w10, ne  // ne = any
  4141d0:	str	w10, [x19, #112]
  4141d4:	ldr	w8, [x19, #112]
  4141d8:	tbnz	w8, #0, 4141e0 <ascii_strlower_n@plt+0xfd80>
  4141dc:	b	414218 <ascii_strlower_n@plt+0xfdb8>
  4141e0:	ldur	x8, [x29, #-168]
  4141e4:	mov	x9, #0x8                   	// #8
  4141e8:	mul	x8, x9, x8
  4141ec:	sub	x9, x29, #0x88
  4141f0:	add	x8, x9, x8
  4141f4:	ldr	x0, [x8]
  4141f8:	bl	403f70 <strlen@plt>
  4141fc:	ldur	x8, [x29, #-160]
  414200:	add	x8, x8, x0
  414204:	stur	x8, [x29, #-160]
  414208:	ldur	x8, [x29, #-168]
  41420c:	add	x8, x8, #0x1
  414210:	stur	x8, [x29, #-168]
  414214:	b	41419c <ascii_strlower_n@plt+0xfd3c>
  414218:	ldur	x8, [x29, #-160]
  41421c:	add	x8, x8, #0x1
  414220:	stur	x8, [x29, #-176]
  414224:	ldur	x1, [x29, #-176]
  414228:	mov	x0, #0x1                   	// #1
  41422c:	bl	408be0 <ascii_strlower_n@plt+0x4780>
  414230:	mov	w8, #0x1                   	// #1
  414234:	eor	w9, w0, #0x1
  414238:	eor	w9, w9, w8
  41423c:	eor	w9, w9, w8
  414240:	eor	w8, w9, w8
  414244:	and	w8, w8, #0x1
  414248:	mov	w1, w8
  41424c:	sxtw	x10, w1
  414250:	cbz	x10, 414274 <ascii_strlower_n@plt+0xfe14>
  414254:	mov	w8, wzr
  414258:	mov	w0, w8
  41425c:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  414260:	add	x1, x1, #0x255
  414264:	ldr	x2, [x19, #144]
  414268:	mov	w3, #0x379                 	// #889
  41426c:	ldr	x4, [x19, #128]
  414270:	bl	4039d0 <log_assert_failed_realm@plt>
  414274:	ldur	x8, [x29, #-176]
  414278:	mov	x9, #0x1                   	// #1
  41427c:	mul	x8, x9, x8
  414280:	cmp	x8, #0x400, lsl #12
  414284:	cset	w10, ls  // ls = plast
  414288:	mov	w11, #0x1                   	// #1
  41428c:	eor	w10, w10, #0x1
  414290:	eor	w10, w10, w11
  414294:	eor	w10, w10, w11
  414298:	and	w10, w10, #0x1
  41429c:	mov	w0, w10
  4142a0:	sxtw	x8, w0
  4142a4:	cbz	x8, 4142c8 <ascii_strlower_n@plt+0xfe68>
  4142a8:	mov	w8, wzr
  4142ac:	mov	w0, w8
  4142b0:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  4142b4:	add	x1, x1, #0x280
  4142b8:	ldr	x2, [x19, #144]
  4142bc:	mov	w3, #0x379                 	// #889
  4142c0:	ldr	x4, [x19, #128]
  4142c4:	bl	4039d0 <log_assert_failed_realm@plt>
  4142c8:	ldur	x8, [x29, #-176]
  4142cc:	mov	x9, #0x1                   	// #1
  4142d0:	mul	x8, x9, x8
  4142d4:	mul	x8, x8, x9
  4142d8:	add	x8, x8, #0xf
  4142dc:	and	x8, x8, #0xfffffffffffffff0
  4142e0:	mov	x9, sp
  4142e4:	subs	x8, x9, x8
  4142e8:	mov	sp, x8
  4142ec:	stur	x8, [x29, #-184]
  4142f0:	ldur	x8, [x29, #-184]
  4142f4:	stur	x8, [x29, #-144]
  4142f8:	stur	x8, [x29, #-152]
  4142fc:	stur	xzr, [x29, #-168]
  414300:	ldur	x8, [x29, #-168]
  414304:	mov	w9, #0x0                   	// #0
  414308:	cmp	x8, #0x3
  41430c:	str	w9, [x19, #108]
  414310:	b.cs	414338 <ascii_strlower_n@plt+0xfed8>  // b.hs, b.nlast
  414314:	ldur	x8, [x29, #-168]
  414318:	mov	x9, #0x8                   	// #8
  41431c:	mul	x8, x9, x8
  414320:	sub	x9, x29, #0x88
  414324:	add	x8, x9, x8
  414328:	ldr	x8, [x8]
  41432c:	cmp	x8, #0x0
  414330:	cset	w10, ne  // ne = any
  414334:	str	w10, [x19, #108]
  414338:	ldr	w8, [x19, #108]
  41433c:	tbnz	w8, #0, 414344 <ascii_strlower_n@plt+0xfee4>
  414340:	b	414378 <ascii_strlower_n@plt+0xff18>
  414344:	ldur	x0, [x29, #-152]
  414348:	ldur	x8, [x29, #-168]
  41434c:	mov	x9, #0x8                   	// #8
  414350:	mul	x8, x9, x8
  414354:	sub	x9, x29, #0x88
  414358:	add	x8, x9, x8
  41435c:	ldr	x1, [x8]
  414360:	bl	404050 <stpcpy@plt>
  414364:	stur	x0, [x29, #-152]
  414368:	ldur	x8, [x29, #-168]
  41436c:	add	x8, x8, #0x1
  414370:	stur	x8, [x29, #-168]
  414374:	b	414300 <ascii_strlower_n@plt+0xfea0>
  414378:	ldur	x8, [x29, #-152]
  41437c:	mov	w9, #0x0                   	// #0
  414380:	strb	w9, [x8]
  414384:	ldur	x8, [x29, #-144]
  414388:	stur	x8, [x29, #-192]
  41438c:	ldur	x8, [x29, #-192]
  414390:	stur	x8, [x29, #-40]
  414394:	mov	w9, #0x7                   	// #7
  414398:	stur	w9, [x29, #-196]
  41439c:	stur	wzr, [x29, #-200]
  4143a0:	stur	wzr, [x29, #-204]
  4143a4:	ldur	w0, [x29, #-204]
  4143a8:	bl	403a10 <log_get_max_level_realm@plt>
  4143ac:	ldur	w9, [x29, #-196]
  4143b0:	and	w9, w9, #0x7
  4143b4:	cmp	w0, w9
  4143b8:	b.lt	4143f0 <ascii_strlower_n@plt+0xff90>  // b.tstop
  4143bc:	ldur	w8, [x29, #-204]
  4143c0:	ldur	w9, [x29, #-196]
  4143c4:	orr	w0, w9, w8, lsl #10
  4143c8:	ldur	w1, [x29, #-200]
  4143cc:	ldur	x6, [x29, #-40]
  4143d0:	ldr	x2, [x19, #144]
  4143d4:	mov	w3, #0x37a                 	// #890
  4143d8:	ldr	x4, [x19, #136]
  4143dc:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  4143e0:	add	x5, x5, #0x29f
  4143e4:	bl	403a20 <log_internal_realm@plt>
  4143e8:	str	w0, [x19, #104]
  4143ec:	b	414404 <ascii_strlower_n@plt+0xffa4>
  4143f0:	ldur	w0, [x29, #-200]
  4143f4:	bl	403a30 <abs@plt>
  4143f8:	mov	w8, wzr
  4143fc:	subs	w8, w8, w0, uxtb
  414400:	str	w8, [x19, #104]
  414404:	ldr	w8, [x19, #104]
  414408:	stur	w8, [x29, #-208]
  41440c:	ldur	x0, [x29, #-16]
  414410:	ldur	x1, [x29, #-40]
  414414:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  414418:	add	x9, x9, #0x17a
  41441c:	ldrh	w8, [x9]
  414420:	str	x0, [x19, #96]
  414424:	str	x1, [x19, #88]
  414428:	str	w8, [x19, #84]
  41442c:	cbz	w8, 41443c <ascii_strlower_n@plt+0xffdc>
  414430:	ldr	w8, [x19, #84]
  414434:	str	w8, [x19, #80]
  414438:	b	414444 <ascii_strlower_n@plt+0xffe4>
  41443c:	mov	w8, #0x1                   	// #1
  414440:	str	w8, [x19, #80]
  414444:	ldr	w8, [x19, #80]
  414448:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  41444c:	add	x9, x9, #0x178
  414450:	ldrh	w10, [x9]
  414454:	str	w8, [x19, #76]
  414458:	str	w10, [x19, #72]
  41445c:	cbz	w10, 41446c <ascii_strlower_n@plt+0x1000c>
  414460:	ldr	w8, [x19, #72]
  414464:	str	w8, [x19, #68]
  414468:	b	414474 <ascii_strlower_n@plt+0x10014>
  41446c:	mov	w8, #0x3d                  	// #61
  414470:	str	w8, [x19, #68]
  414474:	ldr	w8, [x19, #68]
  414478:	ldr	x0, [x19, #96]
  41447c:	ldr	x1, [x19, #88]
  414480:	ldr	w9, [x19, #76]
  414484:	mov	w2, w9
  414488:	mov	w3, w8
  41448c:	mov	w8, wzr
  414490:	and	w4, w8, #0x1
  414494:	bl	40ed5c <ascii_strlower_n@plt+0xa8fc>
  414498:	stur	w0, [x29, #-44]
  41449c:	mov	w8, #0x0                   	// #0
  4144a0:	sturb	w8, [x29, #-209]
  4144a4:	ldur	w8, [x29, #-44]
  4144a8:	mov	w9, #0xfffffffa            	// #-6
  4144ac:	cmp	w8, w9
  4144b0:	str	w8, [x19, #64]
  4144b4:	b.eq	4144d8 <ascii_strlower_n@plt+0x10078>  // b.none
  4144b8:	b	4144bc <ascii_strlower_n@plt+0x1005c>
  4144bc:	mov	w8, #0xfffffffd            	// #-3
  4144c0:	ldr	w9, [x19, #64]
  4144c4:	cmp	w9, w8
  4144c8:	cset	w8, eq  // eq = none
  4144cc:	eor	w8, w8, #0x1
  4144d0:	tbnz	w8, #0, 4144e4 <ascii_strlower_n@plt+0x10084>
  4144d4:	b	4144d8 <ascii_strlower_n@plt+0x10078>
  4144d8:	mov	w8, #0x1                   	// #1
  4144dc:	sturb	w8, [x29, #-209]
  4144e0:	b	4144e4 <ascii_strlower_n@plt+0x10084>
  4144e4:	ldurb	w8, [x29, #-209]
  4144e8:	and	w8, w8, #0x1
  4144ec:	sturb	w8, [x29, #-210]
  4144f0:	ldurb	w8, [x29, #-210]
  4144f4:	tbnz	w8, #0, 4144fc <ascii_strlower_n@plt+0x1009c>
  4144f8:	b	414904 <ascii_strlower_n@plt+0x104a4>
  4144fc:	sub	x2, x29, #0x38
  414500:	ldur	x0, [x29, #-56]
  414504:	str	x2, [x19, #56]
  414508:	bl	414950 <ascii_strlower_n@plt+0x104f0>
  41450c:	stur	x0, [x29, #-56]
  414510:	ldur	x0, [x29, #-24]
  414514:	ldur	x8, [x29, #-32]
  414518:	mov	x9, #0xffffffffffffffff    	// #-1
  41451c:	add	x8, x8, x9
  414520:	ldur	x9, [x29, #-24]
  414524:	subs	x1, x8, x9
  414528:	ldr	x2, [x19, #56]
  41452c:	bl	414980 <ascii_strlower_n@plt+0x10520>
  414530:	stur	w0, [x29, #-44]
  414534:	ldur	w10, [x29, #-44]
  414538:	cmp	w10, #0x0
  41453c:	cset	w10, ge  // ge = tcont
  414540:	tbnz	w10, #0, 4145d0 <ascii_strlower_n@plt+0x10170>
  414544:	mov	w8, #0x3                   	// #3
  414548:	stur	w8, [x29, #-216]
  41454c:	ldur	w8, [x29, #-44]
  414550:	stur	w8, [x29, #-220]
  414554:	stur	wzr, [x29, #-224]
  414558:	ldur	w0, [x29, #-224]
  41455c:	bl	403a10 <log_get_max_level_realm@plt>
  414560:	ldur	w8, [x29, #-216]
  414564:	and	w8, w8, #0x7
  414568:	cmp	w0, w8
  41456c:	b.lt	4145a0 <ascii_strlower_n@plt+0x10140>  // b.tstop
  414570:	ldur	w8, [x29, #-224]
  414574:	ldur	w9, [x29, #-216]
  414578:	orr	w0, w9, w8, lsl #10
  41457c:	ldur	w1, [x29, #-220]
  414580:	ldr	x2, [x19, #144]
  414584:	mov	w3, #0x384                 	// #900
  414588:	ldr	x4, [x19, #136]
  41458c:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  414590:	add	x5, x5, #0x234
  414594:	bl	403a20 <log_internal_realm@plt>
  414598:	str	w0, [x19, #52]
  41459c:	b	4145b4 <ascii_strlower_n@plt+0x10154>
  4145a0:	ldur	w0, [x29, #-220]
  4145a4:	bl	403a30 <abs@plt>
  4145a8:	mov	w8, wzr
  4145ac:	subs	w8, w8, w0, uxtb
  4145b0:	str	w8, [x19, #52]
  4145b4:	ldr	w8, [x19, #52]
  4145b8:	stur	w8, [x29, #-228]
  4145bc:	ldur	w8, [x29, #-228]
  4145c0:	stur	w8, [x29, #-4]
  4145c4:	mov	w8, #0x1                   	// #1
  4145c8:	stur	w8, [x29, #-76]
  4145cc:	b	414914 <ascii_strlower_n@plt+0x104b4>
  4145d0:	ldur	x8, [x29, #-56]
  4145d4:	add	x9, x19, #0xe0
  4145d8:	str	x8, [x19, #224]
  4145dc:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  4145e0:	add	x8, x8, #0x247
  4145e4:	str	x8, [x9, #8]
  4145e8:	ldur	x8, [x29, #-32]
  4145ec:	str	x8, [x9, #16]
  4145f0:	str	xzr, [x19, #200]
  4145f4:	str	xzr, [x19, #192]
  4145f8:	ldr	x8, [x19, #192]
  4145fc:	mov	w9, #0x0                   	// #0
  414600:	cmp	x8, #0x3
  414604:	str	w9, [x19, #48]
  414608:	b.cs	414630 <ascii_strlower_n@plt+0x101d0>  // b.hs, b.nlast
  41460c:	ldr	x8, [x19, #192]
  414610:	mov	x9, #0x8                   	// #8
  414614:	mul	x8, x9, x8
  414618:	add	x9, x19, #0xe0
  41461c:	add	x8, x9, x8
  414620:	ldr	x8, [x8]
  414624:	cmp	x8, #0x0
  414628:	cset	w10, ne  // ne = any
  41462c:	str	w10, [x19, #48]
  414630:	ldr	w8, [x19, #48]
  414634:	tbnz	w8, #0, 41463c <ascii_strlower_n@plt+0x101dc>
  414638:	b	414674 <ascii_strlower_n@plt+0x10214>
  41463c:	ldr	x8, [x19, #192]
  414640:	mov	x9, #0x8                   	// #8
  414644:	mul	x8, x9, x8
  414648:	add	x9, x19, #0xe0
  41464c:	add	x8, x9, x8
  414650:	ldr	x0, [x8]
  414654:	bl	403f70 <strlen@plt>
  414658:	ldr	x8, [x19, #200]
  41465c:	add	x8, x8, x0
  414660:	str	x8, [x19, #200]
  414664:	ldr	x8, [x19, #192]
  414668:	add	x8, x8, #0x1
  41466c:	str	x8, [x19, #192]
  414670:	b	4145f8 <ascii_strlower_n@plt+0x10198>
  414674:	ldr	x8, [x19, #200]
  414678:	add	x8, x8, #0x1
  41467c:	str	x8, [x19, #184]
  414680:	ldr	x1, [x19, #184]
  414684:	mov	x0, #0x1                   	// #1
  414688:	bl	408be0 <ascii_strlower_n@plt+0x4780>
  41468c:	mov	w8, #0x1                   	// #1
  414690:	eor	w9, w0, #0x1
  414694:	eor	w9, w9, w8
  414698:	eor	w9, w9, w8
  41469c:	eor	w8, w9, w8
  4146a0:	and	w8, w8, #0x1
  4146a4:	mov	w1, w8
  4146a8:	sxtw	x10, w1
  4146ac:	cbz	x10, 4146d0 <ascii_strlower_n@plt+0x10270>
  4146b0:	mov	w8, wzr
  4146b4:	mov	w0, w8
  4146b8:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  4146bc:	add	x1, x1, #0x255
  4146c0:	ldr	x2, [x19, #144]
  4146c4:	mov	w3, #0x386                 	// #902
  4146c8:	ldr	x4, [x19, #128]
  4146cc:	bl	4039d0 <log_assert_failed_realm@plt>
  4146d0:	ldr	x8, [x19, #184]
  4146d4:	mov	x9, #0x1                   	// #1
  4146d8:	mul	x8, x9, x8
  4146dc:	cmp	x8, #0x400, lsl #12
  4146e0:	cset	w10, ls  // ls = plast
  4146e4:	mov	w11, #0x1                   	// #1
  4146e8:	eor	w10, w10, #0x1
  4146ec:	eor	w10, w10, w11
  4146f0:	eor	w10, w10, w11
  4146f4:	and	w10, w10, #0x1
  4146f8:	mov	w0, w10
  4146fc:	sxtw	x8, w0
  414700:	cbz	x8, 414724 <ascii_strlower_n@plt+0x102c4>
  414704:	mov	w8, wzr
  414708:	mov	w0, w8
  41470c:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  414710:	add	x1, x1, #0x280
  414714:	ldr	x2, [x19, #144]
  414718:	mov	w3, #0x386                 	// #902
  41471c:	ldr	x4, [x19, #128]
  414720:	bl	4039d0 <log_assert_failed_realm@plt>
  414724:	ldr	x8, [x19, #184]
  414728:	mov	x9, #0x1                   	// #1
  41472c:	mul	x8, x9, x8
  414730:	mul	x8, x8, x9
  414734:	add	x8, x8, #0xf
  414738:	and	x8, x8, #0xfffffffffffffff0
  41473c:	mov	x9, sp
  414740:	subs	x8, x9, x8
  414744:	mov	sp, x8
  414748:	str	x8, [x19, #176]
  41474c:	ldr	x8, [x19, #176]
  414750:	str	x8, [x19, #216]
  414754:	str	x8, [x19, #208]
  414758:	str	xzr, [x19, #192]
  41475c:	ldr	x8, [x19, #192]
  414760:	mov	w9, #0x0                   	// #0
  414764:	cmp	x8, #0x3
  414768:	str	w9, [x19, #44]
  41476c:	b.cs	414794 <ascii_strlower_n@plt+0x10334>  // b.hs, b.nlast
  414770:	ldr	x8, [x19, #192]
  414774:	mov	x9, #0x8                   	// #8
  414778:	mul	x8, x9, x8
  41477c:	add	x9, x19, #0xe0
  414780:	add	x8, x9, x8
  414784:	ldr	x8, [x8]
  414788:	cmp	x8, #0x0
  41478c:	cset	w10, ne  // ne = any
  414790:	str	w10, [x19, #44]
  414794:	ldr	w8, [x19, #44]
  414798:	tbnz	w8, #0, 4147a0 <ascii_strlower_n@plt+0x10340>
  41479c:	b	4147d4 <ascii_strlower_n@plt+0x10374>
  4147a0:	ldr	x0, [x19, #208]
  4147a4:	ldr	x8, [x19, #192]
  4147a8:	mov	x9, #0x8                   	// #8
  4147ac:	mul	x8, x9, x8
  4147b0:	add	x9, x19, #0xe0
  4147b4:	add	x8, x9, x8
  4147b8:	ldr	x1, [x8]
  4147bc:	bl	404050 <stpcpy@plt>
  4147c0:	str	x0, [x19, #208]
  4147c4:	ldr	x8, [x19, #192]
  4147c8:	add	x8, x8, #0x1
  4147cc:	str	x8, [x19, #192]
  4147d0:	b	41475c <ascii_strlower_n@plt+0x102fc>
  4147d4:	ldr	x8, [x19, #208]
  4147d8:	mov	w9, #0x0                   	// #0
  4147dc:	strb	w9, [x8]
  4147e0:	ldr	x8, [x19, #216]
  4147e4:	str	x8, [x19, #168]
  4147e8:	ldr	x8, [x19, #168]
  4147ec:	stur	x8, [x29, #-40]
  4147f0:	mov	w9, #0x7                   	// #7
  4147f4:	str	w9, [x19, #164]
  4147f8:	str	wzr, [x19, #160]
  4147fc:	str	wzr, [x19, #156]
  414800:	ldr	w0, [x19, #156]
  414804:	bl	403a10 <log_get_max_level_realm@plt>
  414808:	ldr	w9, [x19, #164]
  41480c:	and	w9, w9, #0x7
  414810:	cmp	w0, w9
  414814:	b.lt	41484c <ascii_strlower_n@plt+0x103ec>  // b.tstop
  414818:	ldr	w8, [x19, #156]
  41481c:	ldr	w9, [x19, #164]
  414820:	orr	w0, w9, w8, lsl #10
  414824:	ldr	w1, [x19, #160]
  414828:	ldur	x6, [x29, #-40]
  41482c:	ldr	x2, [x19, #144]
  414830:	mov	w3, #0x387                 	// #903
  414834:	ldr	x4, [x19, #136]
  414838:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  41483c:	add	x5, x5, #0x29f
  414840:	bl	403a20 <log_internal_realm@plt>
  414844:	str	w0, [x19, #40]
  414848:	b	414860 <ascii_strlower_n@plt+0x10400>
  41484c:	ldr	w0, [x19, #160]
  414850:	bl	403a30 <abs@plt>
  414854:	mov	w8, wzr
  414858:	subs	w8, w8, w0, uxtb
  41485c:	str	w8, [x19, #40]
  414860:	ldr	w8, [x19, #40]
  414864:	str	w8, [x19, #152]
  414868:	ldur	x0, [x29, #-16]
  41486c:	ldur	x1, [x29, #-40]
  414870:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  414874:	add	x9, x9, #0x17a
  414878:	ldrh	w8, [x9]
  41487c:	str	x0, [x19, #32]
  414880:	str	x1, [x19, #24]
  414884:	str	w8, [x19, #20]
  414888:	cbz	w8, 414898 <ascii_strlower_n@plt+0x10438>
  41488c:	ldr	w8, [x19, #20]
  414890:	str	w8, [x19, #16]
  414894:	b	4148a0 <ascii_strlower_n@plt+0x10440>
  414898:	mov	w8, #0x1                   	// #1
  41489c:	str	w8, [x19, #16]
  4148a0:	ldr	w8, [x19, #16]
  4148a4:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  4148a8:	add	x9, x9, #0x178
  4148ac:	ldrh	w10, [x9]
  4148b0:	str	w8, [x19, #12]
  4148b4:	str	w10, [x19, #8]
  4148b8:	cbz	w10, 4148c8 <ascii_strlower_n@plt+0x10468>
  4148bc:	ldr	w8, [x19, #8]
  4148c0:	str	w8, [x19, #4]
  4148c4:	b	4148d0 <ascii_strlower_n@plt+0x10470>
  4148c8:	mov	w8, #0x3d                  	// #61
  4148cc:	str	w8, [x19, #4]
  4148d0:	ldr	w8, [x19, #4]
  4148d4:	ldr	x0, [x19, #32]
  4148d8:	ldr	x1, [x19, #24]
  4148dc:	ldr	w9, [x19, #12]
  4148e0:	mov	w2, w9
  4148e4:	mov	w3, w8
  4148e8:	mov	w8, #0x1                   	// #1
  4148ec:	and	w4, w8, #0x1
  4148f0:	bl	40ed5c <ascii_strlower_n@plt+0xa8fc>
  4148f4:	stur	w0, [x29, #-4]
  4148f8:	mov	w8, #0x1                   	// #1
  4148fc:	stur	w8, [x29, #-76]
  414900:	b	414914 <ascii_strlower_n@plt+0x104b4>
  414904:	ldur	w8, [x29, #-44]
  414908:	stur	w8, [x29, #-4]
  41490c:	mov	w8, #0x1                   	// #1
  414910:	stur	w8, [x29, #-76]
  414914:	sub	x0, x29, #0x38
  414918:	bl	405970 <ascii_strlower_n@plt+0x1510>
  41491c:	ldur	w0, [x29, #-4]
  414920:	mov	sp, x29
  414924:	ldp	x28, x19, [sp, #16]
  414928:	ldp	x29, x30, [sp], #32
  41492c:	ret
  414930:	sub	sp, sp, #0x20
  414934:	mov	w8, #0xffffffa1            	// #-95
  414938:	str	x0, [sp, #24]
  41493c:	str	x1, [sp, #16]
  414940:	str	x2, [sp, #8]
  414944:	mov	w0, w8
  414948:	add	sp, sp, #0x20
  41494c:	ret
  414950:	sub	sp, sp, #0x20
  414954:	stp	x29, x30, [sp, #16]
  414958:	add	x29, sp, #0x10
  41495c:	mov	x8, xzr
  414960:	str	x0, [sp, #8]
  414964:	ldr	x0, [sp, #8]
  414968:	str	x8, [sp]
  41496c:	bl	403ac0 <free@plt>
  414970:	ldr	x0, [sp]
  414974:	ldp	x29, x30, [sp, #16]
  414978:	add	sp, sp, #0x20
  41497c:	ret
  414980:	sub	sp, sp, #0x20
  414984:	mov	w8, #0xffffffa1            	// #-95
  414988:	str	x0, [sp, #24]
  41498c:	str	x1, [sp, #16]
  414990:	str	x2, [sp, #8]
  414994:	mov	w0, w8
  414998:	add	sp, sp, #0x20
  41499c:	ret
  4149a0:	stp	x29, x30, [sp, #-16]!
  4149a4:	mov	x29, sp
  4149a8:	sub	sp, sp, #0xd0
  4149ac:	mov	w8, #0x1bb                 	// #443
  4149b0:	mov	x9, xzr
  4149b4:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4149b8:	add	x10, x10, #0x6f4
  4149bc:	add	x10, x10, #0x3
  4149c0:	adrp	x11, 430000 <ascii_strlower_n@plt+0x2bba0>
  4149c4:	add	x11, x11, #0x2e7
  4149c8:	stur	x0, [x29, #-16]
  4149cc:	stur	x1, [x29, #-24]
  4149d0:	stur	x2, [x29, #-32]
  4149d4:	sturh	w8, [x29, #-42]
  4149d8:	stur	x9, [x29, #-56]
  4149dc:	stur	x10, [x29, #-136]
  4149e0:	stur	x11, [x29, #-144]
  4149e4:	ldur	x8, [x29, #-16]
  4149e8:	cmp	x8, #0x0
  4149ec:	cset	w9, ne  // ne = any
  4149f0:	mov	w10, #0x1                   	// #1
  4149f4:	eor	w9, w9, #0x1
  4149f8:	eor	w9, w9, w10
  4149fc:	eor	w9, w9, w10
  414a00:	and	w9, w9, #0x1
  414a04:	mov	w0, w9
  414a08:	sxtw	x8, w0
  414a0c:	cbz	x8, 414a34 <ascii_strlower_n@plt+0x105d4>
  414a10:	mov	w8, wzr
  414a14:	mov	w0, w8
  414a18:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  414a1c:	add	x1, x1, #0xf8
  414a20:	ldur	x2, [x29, #-136]
  414a24:	mov	w3, #0x3a5                 	// #933
  414a28:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  414a2c:	add	x4, x4, #0x2b0
  414a30:	bl	4039d0 <log_assert_failed_realm@plt>
  414a34:	ldur	x8, [x29, #-32]
  414a38:	cmp	x8, #0x0
  414a3c:	cset	w9, ne  // ne = any
  414a40:	mov	w10, #0x1                   	// #1
  414a44:	eor	w9, w9, #0x1
  414a48:	eor	w9, w9, w10
  414a4c:	eor	w9, w9, w10
  414a50:	and	w9, w9, #0x1
  414a54:	mov	w0, w9
  414a58:	sxtw	x8, w0
  414a5c:	cbz	x8, 414a84 <ascii_strlower_n@plt+0x10624>
  414a60:	mov	w8, wzr
  414a64:	mov	w0, w8
  414a68:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  414a6c:	add	x1, x1, #0xe6c
  414a70:	ldur	x2, [x29, #-136]
  414a74:	mov	w3, #0x3a6                 	// #934
  414a78:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  414a7c:	add	x4, x4, #0x2b0
  414a80:	bl	4039d0 <log_assert_failed_realm@plt>
  414a84:	ldur	x0, [x29, #-32]
  414a88:	mov	w1, #0x3a                  	// #58
  414a8c:	bl	404030 <strrchr@plt>
  414a90:	stur	x0, [x29, #-40]
  414a94:	ldur	x8, [x29, #-40]
  414a98:	cbz	x8, 414bd8 <ascii_strlower_n@plt+0x10778>
  414a9c:	ldur	x8, [x29, #-40]
  414aa0:	add	x0, x8, #0x1
  414aa4:	sub	x1, x29, #0x2a
  414aa8:	bl	404060 <parse_ip_port@plt>
  414aac:	stur	w0, [x29, #-60]
  414ab0:	ldur	w9, [x29, #-60]
  414ab4:	cmp	w9, #0x0
  414ab8:	cset	w9, ge  // ge = tcont
  414abc:	tbnz	w9, #0, 414b54 <ascii_strlower_n@plt+0x106f4>
  414ac0:	mov	w8, #0x3                   	// #3
  414ac4:	stur	w8, [x29, #-64]
  414ac8:	ldur	w8, [x29, #-60]
  414acc:	stur	w8, [x29, #-68]
  414ad0:	stur	wzr, [x29, #-72]
  414ad4:	ldur	w0, [x29, #-72]
  414ad8:	bl	403a10 <log_get_max_level_realm@plt>
  414adc:	ldur	w8, [x29, #-64]
  414ae0:	and	w8, w8, #0x7
  414ae4:	cmp	w0, w8
  414ae8:	b.lt	414b24 <ascii_strlower_n@plt+0x106c4>  // b.tstop
  414aec:	ldur	w8, [x29, #-72]
  414af0:	ldur	w9, [x29, #-64]
  414af4:	orr	w0, w9, w8, lsl #10
  414af8:	ldur	w1, [x29, #-68]
  414afc:	ldur	x10, [x29, #-40]
  414b00:	add	x6, x10, #0x1
  414b04:	ldur	x2, [x29, #-136]
  414b08:	mov	w3, #0x3ac                 	// #940
  414b0c:	ldur	x4, [x29, #-144]
  414b10:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  414b14:	add	x5, x5, #0x2f4
  414b18:	bl	403a20 <log_internal_realm@plt>
  414b1c:	stur	w0, [x29, #-148]
  414b20:	b	414b38 <ascii_strlower_n@plt+0x106d8>
  414b24:	ldur	w0, [x29, #-68]
  414b28:	bl	403a30 <abs@plt>
  414b2c:	mov	w8, wzr
  414b30:	subs	w8, w8, w0, uxtb
  414b34:	stur	w8, [x29, #-148]
  414b38:	ldur	w8, [x29, #-148]
  414b3c:	stur	w8, [x29, #-76]
  414b40:	ldur	w8, [x29, #-76]
  414b44:	stur	w8, [x29, #-4]
  414b48:	mov	w8, #0x1                   	// #1
  414b4c:	stur	w8, [x29, #-80]
  414b50:	b	414d40 <ascii_strlower_n@plt+0x108e0>
  414b54:	ldur	x8, [x29, #-32]
  414b58:	stur	x8, [x29, #-88]
  414b5c:	ldur	x0, [x29, #-88]
  414b60:	ldur	x8, [x29, #-40]
  414b64:	ldur	x9, [x29, #-32]
  414b68:	subs	x1, x8, x9
  414b6c:	bl	403f90 <strnlen@plt>
  414b70:	stur	x0, [x29, #-96]
  414b74:	ldur	x8, [x29, #-96]
  414b78:	mov	x9, #0x1                   	// #1
  414b7c:	add	x8, x8, #0x1
  414b80:	mul	x8, x8, x9
  414b84:	add	x8, x8, #0xf
  414b88:	and	x8, x8, #0xfffffffffffffff0
  414b8c:	mov	x9, sp
  414b90:	subs	x8, x9, x8
  414b94:	mov	sp, x8
  414b98:	stur	x8, [x29, #-104]
  414b9c:	ldur	x8, [x29, #-104]
  414ba0:	ldur	x9, [x29, #-96]
  414ba4:	add	x8, x8, x9
  414ba8:	mov	w10, #0x0                   	// #0
  414bac:	strb	w10, [x8]
  414bb0:	ldur	x8, [x29, #-104]
  414bb4:	ldur	x1, [x29, #-88]
  414bb8:	ldur	x2, [x29, #-96]
  414bbc:	mov	x0, x8
  414bc0:	stur	x8, [x29, #-160]
  414bc4:	bl	403fa0 <memcpy@plt>
  414bc8:	ldur	x8, [x29, #-160]
  414bcc:	stur	x8, [x29, #-112]
  414bd0:	ldur	x9, [x29, #-112]
  414bd4:	stur	x9, [x29, #-32]
  414bd8:	ldurh	w2, [x29, #-42]
  414bdc:	ldur	x3, [x29, #-24]
  414be0:	ldur	x4, [x29, #-32]
  414be4:	sub	x0, x29, #0x38
  414be8:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  414bec:	add	x1, x1, #0x307
  414bf0:	bl	403d70 <asprintf@plt>
  414bf4:	stur	w0, [x29, #-60]
  414bf8:	ldur	w8, [x29, #-60]
  414bfc:	cmp	w8, #0x0
  414c00:	cset	w8, ge  // ge = tcont
  414c04:	tbnz	w8, #0, 414c30 <ascii_strlower_n@plt+0x107d0>
  414c08:	mov	w8, wzr
  414c0c:	mov	w0, w8
  414c10:	ldur	x1, [x29, #-136]
  414c14:	mov	w2, #0x3b6                 	// #950
  414c18:	ldur	x3, [x29, #-144]
  414c1c:	bl	403a90 <log_oom_internal@plt>
  414c20:	stur	w0, [x29, #-4]
  414c24:	mov	w8, #0x1                   	// #1
  414c28:	stur	w8, [x29, #-80]
  414c2c:	b	414d40 <ascii_strlower_n@plt+0x108e0>
  414c30:	mov	w8, #0x7                   	// #7
  414c34:	stur	w8, [x29, #-116]
  414c38:	stur	wzr, [x29, #-120]
  414c3c:	stur	wzr, [x29, #-124]
  414c40:	ldur	w0, [x29, #-124]
  414c44:	bl	403a10 <log_get_max_level_realm@plt>
  414c48:	ldur	w8, [x29, #-116]
  414c4c:	and	w8, w8, #0x7
  414c50:	cmp	w0, w8
  414c54:	b.lt	414c8c <ascii_strlower_n@plt+0x1082c>  // b.tstop
  414c58:	ldur	w8, [x29, #-124]
  414c5c:	ldur	w9, [x29, #-116]
  414c60:	orr	w0, w9, w8, lsl #10
  414c64:	ldur	w1, [x29, #-120]
  414c68:	ldur	x6, [x29, #-56]
  414c6c:	ldur	x2, [x29, #-136]
  414c70:	mov	w3, #0x3b8                 	// #952
  414c74:	ldur	x4, [x29, #-144]
  414c78:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  414c7c:	add	x5, x5, #0x29f
  414c80:	bl	403a20 <log_internal_realm@plt>
  414c84:	stur	w0, [x29, #-164]
  414c88:	b	414ca0 <ascii_strlower_n@plt+0x10840>
  414c8c:	ldur	w0, [x29, #-120]
  414c90:	bl	403a30 <abs@plt>
  414c94:	mov	w8, wzr
  414c98:	subs	w8, w8, w0, uxtb
  414c9c:	stur	w8, [x29, #-164]
  414ca0:	ldur	w8, [x29, #-164]
  414ca4:	stur	w8, [x29, #-128]
  414ca8:	ldur	x0, [x29, #-16]
  414cac:	ldur	x1, [x29, #-56]
  414cb0:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  414cb4:	add	x9, x9, #0x17a
  414cb8:	ldrh	w8, [x9]
  414cbc:	stur	x0, [x29, #-176]
  414cc0:	stur	x1, [x29, #-184]
  414cc4:	stur	w8, [x29, #-188]
  414cc8:	cbz	w8, 414cd8 <ascii_strlower_n@plt+0x10878>
  414ccc:	ldur	w8, [x29, #-188]
  414cd0:	stur	w8, [x29, #-192]
  414cd4:	b	414ce0 <ascii_strlower_n@plt+0x10880>
  414cd8:	mov	w8, #0x1                   	// #1
  414cdc:	stur	w8, [x29, #-192]
  414ce0:	ldur	w8, [x29, #-192]
  414ce4:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  414ce8:	add	x9, x9, #0x178
  414cec:	ldrh	w10, [x9]
  414cf0:	stur	w8, [x29, #-196]
  414cf4:	stur	w10, [x29, #-200]
  414cf8:	cbz	w10, 414d08 <ascii_strlower_n@plt+0x108a8>
  414cfc:	ldur	w8, [x29, #-200]
  414d00:	stur	w8, [x29, #-204]
  414d04:	b	414d10 <ascii_strlower_n@plt+0x108b0>
  414d08:	mov	w8, #0x34                  	// #52
  414d0c:	stur	w8, [x29, #-204]
  414d10:	ldur	w8, [x29, #-204]
  414d14:	ldur	x0, [x29, #-176]
  414d18:	ldur	x1, [x29, #-184]
  414d1c:	ldur	w9, [x29, #-196]
  414d20:	mov	w2, w9
  414d24:	mov	w3, w8
  414d28:	mov	w8, #0x1                   	// #1
  414d2c:	and	w4, w8, #0x1
  414d30:	bl	40ed5c <ascii_strlower_n@plt+0xa8fc>
  414d34:	stur	w0, [x29, #-4]
  414d38:	mov	w8, #0x1                   	// #1
  414d3c:	stur	w8, [x29, #-80]
  414d40:	sub	x0, x29, #0x38
  414d44:	bl	405970 <ascii_strlower_n@plt+0x1510>
  414d48:	ldur	w0, [x29, #-4]
  414d4c:	mov	sp, x29
  414d50:	ldp	x29, x30, [sp], #16
  414d54:	ret
  414d58:	sub	sp, sp, #0x190
  414d5c:	stp	x29, x30, [sp, #368]
  414d60:	str	x28, [sp, #384]
  414d64:	add	x29, sp, #0x170
  414d68:	sub	x8, x29, #0x48
  414d6c:	mov	x9, xzr
  414d70:	adrp	x10, 430000 <ascii_strlower_n@plt+0x2bba0>
  414d74:	add	x10, x10, #0x726
  414d78:	adrp	x11, 42d000 <ascii_strlower_n@plt+0x28ba0>
  414d7c:	add	x11, x11, #0x6f4
  414d80:	add	x11, x11, #0x3
  414d84:	adrp	x12, 430000 <ascii_strlower_n@plt+0x2bba0>
  414d88:	add	x12, x12, #0x731
  414d8c:	adrp	x13, 42f000 <ascii_strlower_n@plt+0x2aba0>
  414d90:	add	x13, x13, #0x9d1
  414d94:	sub	x14, x29, #0x40
  414d98:	str	x0, [x8, #56]
  414d9c:	str	x1, [x8, #48]
  414da0:	str	x2, [x8, #40]
  414da4:	str	x3, [x8, #32]
  414da8:	str	x4, [x8, #24]
  414dac:	str	x5, [x8, #16]
  414db0:	str	x9, [x8, #8]
  414db4:	ldr	x0, [x8, #56]
  414db8:	ldr	x2, [x8, #40]
  414dbc:	ldr	x3, [x8, #32]
  414dc0:	ldr	x4, [x8, #24]
  414dc4:	mov	x1, x14
  414dc8:	mov	x5, x10
  414dcc:	str	x8, [sp, #96]
  414dd0:	str	x11, [sp, #88]
  414dd4:	str	x12, [sp, #80]
  414dd8:	str	x13, [sp, #72]
  414ddc:	bl	403f00 <sd_bus_message_new_method_call@plt>
  414de0:	stur	w0, [x29, #-76]
  414de4:	ldur	w15, [x29, #-76]
  414de8:	cmp	w15, #0x0
  414dec:	cset	w15, ge  // ge = tcont
  414df0:	tbnz	w15, #0, 414e7c <ascii_strlower_n@plt+0x10a1c>
  414df4:	mov	w8, #0x3                   	// #3
  414df8:	stur	w8, [x29, #-80]
  414dfc:	ldur	w8, [x29, #-76]
  414e00:	stur	w8, [x29, #-84]
  414e04:	stur	wzr, [x29, #-88]
  414e08:	ldur	w0, [x29, #-88]
  414e0c:	bl	403a10 <log_get_max_level_realm@plt>
  414e10:	ldur	w8, [x29, #-80]
  414e14:	and	w8, w8, #0x7
  414e18:	cmp	w0, w8
  414e1c:	b.lt	414e4c <ascii_strlower_n@plt+0x109ec>  // b.tstop
  414e20:	ldur	w8, [x29, #-88]
  414e24:	ldur	w9, [x29, #-80]
  414e28:	orr	w0, w9, w8, lsl #10
  414e2c:	ldur	w1, [x29, #-84]
  414e30:	ldr	x2, [sp, #88]
  414e34:	mov	w3, #0x744                 	// #1860
  414e38:	ldr	x4, [sp, #80]
  414e3c:	ldr	x5, [sp, #72]
  414e40:	bl	403a20 <log_internal_realm@plt>
  414e44:	str	w0, [sp, #68]
  414e48:	b	414e60 <ascii_strlower_n@plt+0x10a00>
  414e4c:	ldur	w0, [x29, #-84]
  414e50:	bl	403a30 <abs@plt>
  414e54:	mov	w8, wzr
  414e58:	subs	w8, w8, w0, uxtb
  414e5c:	str	w8, [sp, #68]
  414e60:	ldr	w8, [sp, #68]
  414e64:	stur	w8, [x29, #-92]
  414e68:	ldur	w8, [x29, #-92]
  414e6c:	stur	w8, [x29, #-4]
  414e70:	mov	w8, #0x1                   	// #1
  414e74:	stur	w8, [x29, #-96]
  414e78:	b	4154f8 <ascii_strlower_n@plt+0x11098>
  414e7c:	ldr	x8, [sp, #96]
  414e80:	ldr	x0, [x8, #8]
  414e84:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  414e88:	add	x9, x9, #0x170
  414e8c:	ldr	w2, [x9]
  414e90:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  414e94:	add	x1, x1, #0x43b
  414e98:	bl	403f10 <sd_bus_message_append@plt>
  414e9c:	stur	w0, [x29, #-76]
  414ea0:	ldur	w10, [x29, #-76]
  414ea4:	cmp	w10, #0x0
  414ea8:	cset	w10, ge  // ge = tcont
  414eac:	tbnz	w10, #0, 414f38 <ascii_strlower_n@plt+0x10ad8>
  414eb0:	mov	w8, #0x3                   	// #3
  414eb4:	stur	w8, [x29, #-100]
  414eb8:	ldur	w8, [x29, #-76]
  414ebc:	stur	w8, [x29, #-104]
  414ec0:	stur	wzr, [x29, #-108]
  414ec4:	ldur	w0, [x29, #-108]
  414ec8:	bl	403a10 <log_get_max_level_realm@plt>
  414ecc:	ldur	w8, [x29, #-100]
  414ed0:	and	w8, w8, #0x7
  414ed4:	cmp	w0, w8
  414ed8:	b.lt	414f08 <ascii_strlower_n@plt+0x10aa8>  // b.tstop
  414edc:	ldur	w8, [x29, #-108]
  414ee0:	ldur	w9, [x29, #-100]
  414ee4:	orr	w0, w9, w8, lsl #10
  414ee8:	ldur	w1, [x29, #-104]
  414eec:	ldr	x2, [sp, #88]
  414ef0:	mov	w3, #0x748                 	// #1864
  414ef4:	ldr	x4, [sp, #80]
  414ef8:	ldr	x5, [sp, #72]
  414efc:	bl	403a20 <log_internal_realm@plt>
  414f00:	str	w0, [sp, #64]
  414f04:	b	414f1c <ascii_strlower_n@plt+0x10abc>
  414f08:	ldur	w0, [x29, #-104]
  414f0c:	bl	403a30 <abs@plt>
  414f10:	mov	w8, wzr
  414f14:	subs	w8, w8, w0, uxtb
  414f18:	str	w8, [sp, #64]
  414f1c:	ldr	w8, [sp, #64]
  414f20:	stur	w8, [x29, #-112]
  414f24:	ldur	w8, [x29, #-112]
  414f28:	stur	w8, [x29, #-4]
  414f2c:	mov	w8, #0x1                   	// #1
  414f30:	stur	w8, [x29, #-96]
  414f34:	b	4154f8 <ascii_strlower_n@plt+0x11098>
  414f38:	ldr	x8, [sp, #96]
  414f3c:	ldr	x0, [x8, #8]
  414f40:	mov	w1, #0x61                  	// #97
  414f44:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  414f48:	add	x2, x2, #0x82
  414f4c:	bl	404070 <sd_bus_message_open_container@plt>
  414f50:	stur	w0, [x29, #-76]
  414f54:	ldur	w9, [x29, #-76]
  414f58:	cmp	w9, #0x0
  414f5c:	cset	w9, ge  // ge = tcont
  414f60:	tbnz	w9, #0, 414fec <ascii_strlower_n@plt+0x10b8c>
  414f64:	mov	w8, #0x3                   	// #3
  414f68:	stur	w8, [x29, #-116]
  414f6c:	ldur	w8, [x29, #-76]
  414f70:	stur	w8, [x29, #-120]
  414f74:	stur	wzr, [x29, #-124]
  414f78:	ldur	w0, [x29, #-124]
  414f7c:	bl	403a10 <log_get_max_level_realm@plt>
  414f80:	ldur	w8, [x29, #-116]
  414f84:	and	w8, w8, #0x7
  414f88:	cmp	w0, w8
  414f8c:	b.lt	414fbc <ascii_strlower_n@plt+0x10b5c>  // b.tstop
  414f90:	ldur	w8, [x29, #-124]
  414f94:	ldur	w9, [x29, #-116]
  414f98:	orr	w0, w9, w8, lsl #10
  414f9c:	ldur	w1, [x29, #-120]
  414fa0:	ldr	x2, [sp, #88]
  414fa4:	mov	w3, #0x74c                 	// #1868
  414fa8:	ldr	x4, [sp, #80]
  414fac:	ldr	x5, [sp, #72]
  414fb0:	bl	403a20 <log_internal_realm@plt>
  414fb4:	str	w0, [sp, #60]
  414fb8:	b	414fd0 <ascii_strlower_n@plt+0x10b70>
  414fbc:	ldur	w0, [x29, #-120]
  414fc0:	bl	403a30 <abs@plt>
  414fc4:	mov	w8, wzr
  414fc8:	subs	w8, w8, w0, uxtb
  414fcc:	str	w8, [sp, #60]
  414fd0:	ldr	w8, [sp, #60]
  414fd4:	stur	w8, [x29, #-128]
  414fd8:	ldur	w8, [x29, #-128]
  414fdc:	stur	w8, [x29, #-4]
  414fe0:	mov	w8, #0x1                   	// #1
  414fe4:	stur	w8, [x29, #-96]
  414fe8:	b	4154f8 <ascii_strlower_n@plt+0x11098>
  414fec:	ldr	x8, [sp, #96]
  414ff0:	ldr	x0, [x8, #48]
  414ff4:	sub	x9, x29, #0x90
  414ff8:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  414ffc:	add	x10, x10, #0x7e4
  415000:	stur	x10, [x29, #-144]
  415004:	mov	x10, xzr
  415008:	str	x10, [x9, #8]
  41500c:	mov	x1, x9
  415010:	bl	403d50 <strv_equal@plt>
  415014:	tbnz	w0, #0, 415424 <ascii_strlower_n@plt+0x10fc4>
  415018:	ldr	x8, [sp, #96]
  41501c:	ldr	x9, [x8, #48]
  415020:	str	x9, [x8]
  415024:	ldr	x8, [sp, #96]
  415028:	ldr	x9, [x8]
  41502c:	mov	w10, #0x0                   	// #0
  415030:	str	w10, [sp, #56]
  415034:	cbz	x9, 415050 <ascii_strlower_n@plt+0x10bf0>
  415038:	ldr	x8, [sp, #96]
  41503c:	ldr	x9, [x8]
  415040:	ldr	x9, [x9]
  415044:	cmp	x9, #0x0
  415048:	cset	w10, ne  // ne = any
  41504c:	str	w10, [sp, #56]
  415050:	ldr	w8, [sp, #56]
  415054:	tbnz	w8, #0, 41505c <ascii_strlower_n@plt+0x10bfc>
  415058:	b	415424 <ascii_strlower_n@plt+0x10fc4>
  41505c:	ldr	x8, [sp, #96]
  415060:	ldr	x9, [x8]
  415064:	ldr	x0, [x9]
  415068:	sub	x9, x29, #0xa4
  41506c:	add	x2, x9, #0x4
  415070:	mov	x1, x9
  415074:	bl	404080 <in_addr_from_string_auto@plt>
  415078:	stur	w0, [x29, #-76]
  41507c:	ldur	w10, [x29, #-76]
  415080:	cmp	w10, #0x0
  415084:	cset	w10, ge  // ge = tcont
  415088:	tbnz	w10, #0, 415124 <ascii_strlower_n@plt+0x10cc4>
  41508c:	mov	w8, #0x3                   	// #3
  415090:	stur	w8, [x29, #-168]
  415094:	ldur	w8, [x29, #-76]
  415098:	stur	w8, [x29, #-172]
  41509c:	stur	wzr, [x29, #-176]
  4150a0:	ldur	w0, [x29, #-176]
  4150a4:	bl	403a10 <log_get_max_level_realm@plt>
  4150a8:	ldur	w8, [x29, #-168]
  4150ac:	and	w8, w8, #0x7
  4150b0:	cmp	w0, w8
  4150b4:	b.lt	4150f4 <ascii_strlower_n@plt+0x10c94>  // b.tstop
  4150b8:	ldur	w8, [x29, #-176]
  4150bc:	ldur	w9, [x29, #-168]
  4150c0:	orr	w0, w9, w8, lsl #10
  4150c4:	ldur	w1, [x29, #-172]
  4150c8:	ldr	x10, [sp, #96]
  4150cc:	ldr	x11, [x10]
  4150d0:	ldr	x6, [x11]
  4150d4:	ldr	x2, [sp, #88]
  4150d8:	mov	w3, #0x756                 	// #1878
  4150dc:	ldr	x4, [sp, #80]
  4150e0:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  4150e4:	add	x5, x5, #0x73a
  4150e8:	bl	403a20 <log_internal_realm@plt>
  4150ec:	str	w0, [sp, #52]
  4150f0:	b	415108 <ascii_strlower_n@plt+0x10ca8>
  4150f4:	ldur	w0, [x29, #-172]
  4150f8:	bl	403a30 <abs@plt>
  4150fc:	mov	w8, wzr
  415100:	subs	w8, w8, w0, uxtb
  415104:	str	w8, [sp, #52]
  415108:	ldr	w8, [sp, #52]
  41510c:	stur	w8, [x29, #-180]
  415110:	ldur	w8, [x29, #-180]
  415114:	stur	w8, [x29, #-4]
  415118:	mov	w8, #0x1                   	// #1
  41511c:	stur	w8, [x29, #-96]
  415120:	b	4154f8 <ascii_strlower_n@plt+0x11098>
  415124:	ldr	x8, [sp, #96]
  415128:	ldr	x0, [x8, #8]
  41512c:	mov	w1, #0x72                  	// #114
  415130:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  415134:	add	x2, x2, #0x437
  415138:	bl	404070 <sd_bus_message_open_container@plt>
  41513c:	stur	w0, [x29, #-76]
  415140:	ldur	w9, [x29, #-76]
  415144:	cmp	w9, #0x0
  415148:	cset	w9, ge  // ge = tcont
  41514c:	tbnz	w9, #0, 4151d8 <ascii_strlower_n@plt+0x10d78>
  415150:	mov	w8, #0x3                   	// #3
  415154:	str	w8, [sp, #184]
  415158:	ldur	w8, [x29, #-76]
  41515c:	str	w8, [sp, #180]
  415160:	str	wzr, [sp, #176]
  415164:	ldr	w0, [sp, #176]
  415168:	bl	403a10 <log_get_max_level_realm@plt>
  41516c:	ldr	w8, [sp, #184]
  415170:	and	w8, w8, #0x7
  415174:	cmp	w0, w8
  415178:	b.lt	4151a8 <ascii_strlower_n@plt+0x10d48>  // b.tstop
  41517c:	ldr	w8, [sp, #176]
  415180:	ldr	w9, [sp, #184]
  415184:	orr	w0, w9, w8, lsl #10
  415188:	ldr	w1, [sp, #180]
  41518c:	ldr	x2, [sp, #88]
  415190:	mov	w3, #0x75a                 	// #1882
  415194:	ldr	x4, [sp, #80]
  415198:	ldr	x5, [sp, #72]
  41519c:	bl	403a20 <log_internal_realm@plt>
  4151a0:	str	w0, [sp, #48]
  4151a4:	b	4151bc <ascii_strlower_n@plt+0x10d5c>
  4151a8:	ldr	w0, [sp, #180]
  4151ac:	bl	403a30 <abs@plt>
  4151b0:	mov	w8, wzr
  4151b4:	subs	w8, w8, w0, uxtb
  4151b8:	str	w8, [sp, #48]
  4151bc:	ldr	w8, [sp, #48]
  4151c0:	str	w8, [sp, #172]
  4151c4:	ldr	w8, [sp, #172]
  4151c8:	stur	w8, [x29, #-4]
  4151cc:	mov	w8, #0x1                   	// #1
  4151d0:	stur	w8, [x29, #-96]
  4151d4:	b	4154f8 <ascii_strlower_n@plt+0x11098>
  4151d8:	ldr	x8, [sp, #96]
  4151dc:	ldr	x0, [x8, #8]
  4151e0:	ldur	w2, [x29, #-164]
  4151e4:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4151e8:	add	x1, x1, #0x43b
  4151ec:	bl	403f10 <sd_bus_message_append@plt>
  4151f0:	stur	w0, [x29, #-76]
  4151f4:	ldur	w9, [x29, #-76]
  4151f8:	cmp	w9, #0x0
  4151fc:	cset	w9, ge  // ge = tcont
  415200:	tbnz	w9, #0, 41528c <ascii_strlower_n@plt+0x10e2c>
  415204:	mov	w8, #0x3                   	// #3
  415208:	str	w8, [sp, #168]
  41520c:	ldur	w8, [x29, #-76]
  415210:	str	w8, [sp, #164]
  415214:	str	wzr, [sp, #160]
  415218:	ldr	w0, [sp, #160]
  41521c:	bl	403a10 <log_get_max_level_realm@plt>
  415220:	ldr	w8, [sp, #168]
  415224:	and	w8, w8, #0x7
  415228:	cmp	w0, w8
  41522c:	b.lt	41525c <ascii_strlower_n@plt+0x10dfc>  // b.tstop
  415230:	ldr	w8, [sp, #160]
  415234:	ldr	w9, [sp, #168]
  415238:	orr	w0, w9, w8, lsl #10
  41523c:	ldr	w1, [sp, #164]
  415240:	ldr	x2, [sp, #88]
  415244:	mov	w3, #0x75e                 	// #1886
  415248:	ldr	x4, [sp, #80]
  41524c:	ldr	x5, [sp, #72]
  415250:	bl	403a20 <log_internal_realm@plt>
  415254:	str	w0, [sp, #44]
  415258:	b	415270 <ascii_strlower_n@plt+0x10e10>
  41525c:	ldr	w0, [sp, #164]
  415260:	bl	403a30 <abs@plt>
  415264:	mov	w8, wzr
  415268:	subs	w8, w8, w0, uxtb
  41526c:	str	w8, [sp, #44]
  415270:	ldr	w8, [sp, #44]
  415274:	str	w8, [sp, #156]
  415278:	ldr	w8, [sp, #156]
  41527c:	stur	w8, [x29, #-4]
  415280:	mov	w8, #0x1                   	// #1
  415284:	stur	w8, [x29, #-96]
  415288:	b	4154f8 <ascii_strlower_n@plt+0x11098>
  41528c:	ldr	x8, [sp, #96]
  415290:	ldr	x0, [x8, #8]
  415294:	sub	x9, x29, #0xa4
  415298:	add	x2, x9, #0x4
  41529c:	ldur	w10, [x29, #-164]
  4152a0:	str	x0, [sp, #32]
  4152a4:	mov	w0, w10
  4152a8:	str	x2, [sp, #24]
  4152ac:	bl	40db10 <ascii_strlower_n@plt+0x96b0>
  4152b0:	ldr	x8, [sp, #32]
  4152b4:	str	x0, [sp, #16]
  4152b8:	mov	x0, x8
  4152bc:	mov	w1, #0x79                  	// #121
  4152c0:	ldr	x2, [sp, #24]
  4152c4:	ldr	x3, [sp, #16]
  4152c8:	bl	403fd0 <sd_bus_message_append_array@plt>
  4152cc:	stur	w0, [x29, #-76]
  4152d0:	ldur	w10, [x29, #-76]
  4152d4:	cmp	w10, #0x0
  4152d8:	cset	w10, ge  // ge = tcont
  4152dc:	tbnz	w10, #0, 415368 <ascii_strlower_n@plt+0x10f08>
  4152e0:	mov	w8, #0x3                   	// #3
  4152e4:	str	w8, [sp, #152]
  4152e8:	ldur	w8, [x29, #-76]
  4152ec:	str	w8, [sp, #148]
  4152f0:	str	wzr, [sp, #144]
  4152f4:	ldr	w0, [sp, #144]
  4152f8:	bl	403a10 <log_get_max_level_realm@plt>
  4152fc:	ldr	w8, [sp, #152]
  415300:	and	w8, w8, #0x7
  415304:	cmp	w0, w8
  415308:	b.lt	415338 <ascii_strlower_n@plt+0x10ed8>  // b.tstop
  41530c:	ldr	w8, [sp, #144]
  415310:	ldr	w9, [sp, #152]
  415314:	orr	w0, w9, w8, lsl #10
  415318:	ldr	w1, [sp, #148]
  41531c:	ldr	x2, [sp, #88]
  415320:	mov	w3, #0x762                 	// #1890
  415324:	ldr	x4, [sp, #80]
  415328:	ldr	x5, [sp, #72]
  41532c:	bl	403a20 <log_internal_realm@plt>
  415330:	str	w0, [sp, #12]
  415334:	b	41534c <ascii_strlower_n@plt+0x10eec>
  415338:	ldr	w0, [sp, #148]
  41533c:	bl	403a30 <abs@plt>
  415340:	mov	w8, wzr
  415344:	subs	w8, w8, w0, uxtb
  415348:	str	w8, [sp, #12]
  41534c:	ldr	w8, [sp, #12]
  415350:	str	w8, [sp, #140]
  415354:	ldr	w8, [sp, #140]
  415358:	stur	w8, [x29, #-4]
  41535c:	mov	w8, #0x1                   	// #1
  415360:	stur	w8, [x29, #-96]
  415364:	b	4154f8 <ascii_strlower_n@plt+0x11098>
  415368:	ldr	x8, [sp, #96]
  41536c:	ldr	x0, [x8, #8]
  415370:	bl	404090 <sd_bus_message_close_container@plt>
  415374:	stur	w0, [x29, #-76]
  415378:	ldur	w9, [x29, #-76]
  41537c:	cmp	w9, #0x0
  415380:	cset	w9, ge  // ge = tcont
  415384:	tbnz	w9, #0, 415410 <ascii_strlower_n@plt+0x10fb0>
  415388:	mov	w8, #0x3                   	// #3
  41538c:	str	w8, [sp, #136]
  415390:	ldur	w8, [x29, #-76]
  415394:	str	w8, [sp, #132]
  415398:	str	wzr, [sp, #128]
  41539c:	ldr	w0, [sp, #128]
  4153a0:	bl	403a10 <log_get_max_level_realm@plt>
  4153a4:	ldr	w8, [sp, #136]
  4153a8:	and	w8, w8, #0x7
  4153ac:	cmp	w0, w8
  4153b0:	b.lt	4153e0 <ascii_strlower_n@plt+0x10f80>  // b.tstop
  4153b4:	ldr	w8, [sp, #128]
  4153b8:	ldr	w9, [sp, #136]
  4153bc:	orr	w0, w9, w8, lsl #10
  4153c0:	ldr	w1, [sp, #132]
  4153c4:	ldr	x2, [sp, #88]
  4153c8:	mov	w3, #0x766                 	// #1894
  4153cc:	ldr	x4, [sp, #80]
  4153d0:	ldr	x5, [sp, #72]
  4153d4:	bl	403a20 <log_internal_realm@plt>
  4153d8:	str	w0, [sp, #8]
  4153dc:	b	4153f4 <ascii_strlower_n@plt+0x10f94>
  4153e0:	ldr	w0, [sp, #132]
  4153e4:	bl	403a30 <abs@plt>
  4153e8:	mov	w8, wzr
  4153ec:	subs	w8, w8, w0, uxtb
  4153f0:	str	w8, [sp, #8]
  4153f4:	ldr	w8, [sp, #8]
  4153f8:	str	w8, [sp, #124]
  4153fc:	ldr	w8, [sp, #124]
  415400:	stur	w8, [x29, #-4]
  415404:	mov	w8, #0x1                   	// #1
  415408:	stur	w8, [x29, #-96]
  41540c:	b	4154f8 <ascii_strlower_n@plt+0x11098>
  415410:	ldr	x8, [sp, #96]
  415414:	ldr	x9, [x8]
  415418:	add	x9, x9, #0x8
  41541c:	str	x9, [x8]
  415420:	b	415024 <ascii_strlower_n@plt+0x10bc4>
  415424:	ldr	x8, [sp, #96]
  415428:	ldr	x0, [x8, #8]
  41542c:	bl	404090 <sd_bus_message_close_container@plt>
  415430:	stur	w0, [x29, #-76]
  415434:	ldur	w9, [x29, #-76]
  415438:	cmp	w9, #0x0
  41543c:	cset	w9, ge  // ge = tcont
  415440:	tbnz	w9, #0, 4154cc <ascii_strlower_n@plt+0x1106c>
  415444:	mov	w8, #0x3                   	// #3
  415448:	str	w8, [sp, #120]
  41544c:	ldur	w8, [x29, #-76]
  415450:	str	w8, [sp, #116]
  415454:	str	wzr, [sp, #112]
  415458:	ldr	w0, [sp, #112]
  41545c:	bl	403a10 <log_get_max_level_realm@plt>
  415460:	ldr	w8, [sp, #120]
  415464:	and	w8, w8, #0x7
  415468:	cmp	w0, w8
  41546c:	b.lt	41549c <ascii_strlower_n@plt+0x1103c>  // b.tstop
  415470:	ldr	w8, [sp, #112]
  415474:	ldr	w9, [sp, #120]
  415478:	orr	w0, w9, w8, lsl #10
  41547c:	ldr	w1, [sp, #116]
  415480:	ldr	x2, [sp, #88]
  415484:	mov	w3, #0x76b                 	// #1899
  415488:	ldr	x4, [sp, #80]
  41548c:	ldr	x5, [sp, #72]
  415490:	bl	403a20 <log_internal_realm@plt>
  415494:	str	w0, [sp, #4]
  415498:	b	4154b0 <ascii_strlower_n@plt+0x11050>
  41549c:	ldr	w0, [sp, #116]
  4154a0:	bl	403a30 <abs@plt>
  4154a4:	mov	w8, wzr
  4154a8:	subs	w8, w8, w0, uxtb
  4154ac:	str	w8, [sp, #4]
  4154b0:	ldr	w8, [sp, #4]
  4154b4:	str	w8, [sp, #108]
  4154b8:	ldr	w8, [sp, #108]
  4154bc:	stur	w8, [x29, #-4]
  4154c0:	mov	w8, #0x1                   	// #1
  4154c4:	stur	w8, [x29, #-96]
  4154c8:	b	4154f8 <ascii_strlower_n@plt+0x11098>
  4154cc:	ldr	x8, [sp, #96]
  4154d0:	ldr	x0, [x8, #56]
  4154d4:	ldr	x1, [x8, #8]
  4154d8:	ldr	x3, [x8, #16]
  4154dc:	mov	x9, xzr
  4154e0:	mov	x2, x9
  4154e4:	mov	x4, x9
  4154e8:	bl	403f30 <sd_bus_call@plt>
  4154ec:	stur	w0, [x29, #-4]
  4154f0:	mov	w10, #0x1                   	// #1
  4154f4:	stur	w10, [x29, #-96]
  4154f8:	sub	x0, x29, #0x40
  4154fc:	bl	40d468 <ascii_strlower_n@plt+0x9008>
  415500:	ldur	w0, [x29, #-4]
  415504:	ldr	x28, [sp, #384]
  415508:	ldp	x29, x30, [sp, #368]
  41550c:	add	sp, sp, #0x190
  415510:	ret
  415514:	sub	sp, sp, #0x140
  415518:	stp	x29, x30, [sp, #288]
  41551c:	str	x28, [sp, #304]
  415520:	add	x29, sp, #0x120
  415524:	mov	x8, xzr
  415528:	adrp	x9, 430000 <ascii_strlower_n@plt+0x2bba0>
  41552c:	add	x9, x9, #0x7ba
  415530:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  415534:	add	x10, x10, #0x6f4
  415538:	add	x10, x10, #0x3
  41553c:	adrp	x11, 430000 <ascii_strlower_n@plt+0x2bba0>
  415540:	add	x11, x11, #0x7c9
  415544:	adrp	x12, 42f000 <ascii_strlower_n@plt+0x2aba0>
  415548:	add	x12, x12, #0x9d1
  41554c:	sub	x13, x29, #0x40
  415550:	stur	x0, [x29, #-16]
  415554:	stur	x1, [x29, #-24]
  415558:	stur	x2, [x29, #-32]
  41555c:	stur	x3, [x29, #-40]
  415560:	stur	x4, [x29, #-48]
  415564:	stur	x5, [x29, #-56]
  415568:	stur	x8, [x29, #-64]
  41556c:	ldur	x0, [x29, #-16]
  415570:	ldur	x2, [x29, #-32]
  415574:	ldur	x3, [x29, #-40]
  415578:	ldur	x4, [x29, #-48]
  41557c:	mov	x1, x13
  415580:	mov	x5, x9
  415584:	str	x10, [sp, #64]
  415588:	str	x11, [sp, #56]
  41558c:	str	x12, [sp, #48]
  415590:	bl	403f00 <sd_bus_message_new_method_call@plt>
  415594:	stur	w0, [x29, #-76]
  415598:	ldur	w14, [x29, #-76]
  41559c:	cmp	w14, #0x0
  4155a0:	cset	w14, ge  // ge = tcont
  4155a4:	tbnz	w14, #0, 415630 <ascii_strlower_n@plt+0x111d0>
  4155a8:	mov	w8, #0x3                   	// #3
  4155ac:	stur	w8, [x29, #-80]
  4155b0:	ldur	w8, [x29, #-76]
  4155b4:	stur	w8, [x29, #-84]
  4155b8:	stur	wzr, [x29, #-88]
  4155bc:	ldur	w0, [x29, #-88]
  4155c0:	bl	403a10 <log_get_max_level_realm@plt>
  4155c4:	ldur	w8, [x29, #-80]
  4155c8:	and	w8, w8, #0x7
  4155cc:	cmp	w0, w8
  4155d0:	b.lt	415600 <ascii_strlower_n@plt+0x111a0>  // b.tstop
  4155d4:	ldur	w8, [x29, #-88]
  4155d8:	ldur	w9, [x29, #-80]
  4155dc:	orr	w0, w9, w8, lsl #10
  4155e0:	ldur	w1, [x29, #-84]
  4155e4:	ldr	x2, [sp, #64]
  4155e8:	mov	w3, #0x7a9                 	// #1961
  4155ec:	ldr	x4, [sp, #56]
  4155f0:	ldr	x5, [sp, #48]
  4155f4:	bl	403a20 <log_internal_realm@plt>
  4155f8:	str	w0, [sp, #44]
  4155fc:	b	415614 <ascii_strlower_n@plt+0x111b4>
  415600:	ldur	w0, [x29, #-84]
  415604:	bl	403a30 <abs@plt>
  415608:	mov	w8, wzr
  41560c:	subs	w8, w8, w0, uxtb
  415610:	str	w8, [sp, #44]
  415614:	ldr	w8, [sp, #44]
  415618:	stur	w8, [x29, #-92]
  41561c:	ldur	w8, [x29, #-92]
  415620:	stur	w8, [x29, #-4]
  415624:	mov	w8, #0x1                   	// #1
  415628:	stur	w8, [x29, #-96]
  41562c:	b	415b18 <ascii_strlower_n@plt+0x116b8>
  415630:	ldur	x0, [x29, #-64]
  415634:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  415638:	add	x8, x8, #0x170
  41563c:	ldr	w2, [x8]
  415640:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  415644:	add	x1, x1, #0x43b
  415648:	bl	403f10 <sd_bus_message_append@plt>
  41564c:	stur	w0, [x29, #-76]
  415650:	ldur	w9, [x29, #-76]
  415654:	cmp	w9, #0x0
  415658:	cset	w9, ge  // ge = tcont
  41565c:	tbnz	w9, #0, 4156e8 <ascii_strlower_n@plt+0x11288>
  415660:	mov	w8, #0x3                   	// #3
  415664:	stur	w8, [x29, #-100]
  415668:	ldur	w8, [x29, #-76]
  41566c:	stur	w8, [x29, #-104]
  415670:	stur	wzr, [x29, #-108]
  415674:	ldur	w0, [x29, #-108]
  415678:	bl	403a10 <log_get_max_level_realm@plt>
  41567c:	ldur	w8, [x29, #-100]
  415680:	and	w8, w8, #0x7
  415684:	cmp	w0, w8
  415688:	b.lt	4156b8 <ascii_strlower_n@plt+0x11258>  // b.tstop
  41568c:	ldur	w8, [x29, #-108]
  415690:	ldur	w9, [x29, #-100]
  415694:	orr	w0, w9, w8, lsl #10
  415698:	ldur	w1, [x29, #-104]
  41569c:	ldr	x2, [sp, #64]
  4156a0:	mov	w3, #0x7ad                 	// #1965
  4156a4:	ldr	x4, [sp, #56]
  4156a8:	ldr	x5, [sp, #48]
  4156ac:	bl	403a20 <log_internal_realm@plt>
  4156b0:	str	w0, [sp, #40]
  4156b4:	b	4156cc <ascii_strlower_n@plt+0x1126c>
  4156b8:	ldur	w0, [x29, #-104]
  4156bc:	bl	403a30 <abs@plt>
  4156c0:	mov	w8, wzr
  4156c4:	subs	w8, w8, w0, uxtb
  4156c8:	str	w8, [sp, #40]
  4156cc:	ldr	w8, [sp, #40]
  4156d0:	stur	w8, [x29, #-112]
  4156d4:	ldur	w8, [x29, #-112]
  4156d8:	stur	w8, [x29, #-4]
  4156dc:	mov	w8, #0x1                   	// #1
  4156e0:	stur	w8, [x29, #-96]
  4156e4:	b	415b18 <ascii_strlower_n@plt+0x116b8>
  4156e8:	ldur	x0, [x29, #-64]
  4156ec:	mov	w1, #0x61                  	// #97
  4156f0:	adrp	x2, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4156f4:	add	x2, x2, #0x5b2
  4156f8:	bl	404070 <sd_bus_message_open_container@plt>
  4156fc:	stur	w0, [x29, #-76]
  415700:	ldur	w8, [x29, #-76]
  415704:	cmp	w8, #0x0
  415708:	cset	w8, ge  // ge = tcont
  41570c:	tbnz	w8, #0, 415798 <ascii_strlower_n@plt+0x11338>
  415710:	mov	w8, #0x3                   	// #3
  415714:	stur	w8, [x29, #-116]
  415718:	ldur	w8, [x29, #-76]
  41571c:	stur	w8, [x29, #-120]
  415720:	stur	wzr, [x29, #-124]
  415724:	ldur	w0, [x29, #-124]
  415728:	bl	403a10 <log_get_max_level_realm@plt>
  41572c:	ldur	w8, [x29, #-116]
  415730:	and	w8, w8, #0x7
  415734:	cmp	w0, w8
  415738:	b.lt	415768 <ascii_strlower_n@plt+0x11308>  // b.tstop
  41573c:	ldur	w8, [x29, #-124]
  415740:	ldur	w9, [x29, #-116]
  415744:	orr	w0, w9, w8, lsl #10
  415748:	ldur	w1, [x29, #-120]
  41574c:	ldr	x2, [sp, #64]
  415750:	mov	w3, #0x7b1                 	// #1969
  415754:	ldr	x4, [sp, #56]
  415758:	ldr	x5, [sp, #48]
  41575c:	bl	403a20 <log_internal_realm@plt>
  415760:	str	w0, [sp, #36]
  415764:	b	41577c <ascii_strlower_n@plt+0x1131c>
  415768:	ldur	w0, [x29, #-120]
  41576c:	bl	403a30 <abs@plt>
  415770:	mov	w8, wzr
  415774:	subs	w8, w8, w0, uxtb
  415778:	str	w8, [sp, #36]
  41577c:	ldr	w8, [sp, #36]
  415780:	stur	w8, [x29, #-128]
  415784:	ldur	w8, [x29, #-128]
  415788:	stur	w8, [x29, #-4]
  41578c:	mov	w8, #0x1                   	// #1
  415790:	stur	w8, [x29, #-96]
  415794:	b	415b18 <ascii_strlower_n@plt+0x116b8>
  415798:	ldur	x0, [x29, #-24]
  41579c:	add	x8, sp, #0x90
  4157a0:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  4157a4:	add	x9, x9, #0x7e4
  4157a8:	str	x9, [sp, #144]
  4157ac:	mov	x9, xzr
  4157b0:	str	x9, [x8, #8]
  4157b4:	mov	x1, x8
  4157b8:	bl	403d50 <strv_equal@plt>
  4157bc:	tbnz	w0, #0, 415a4c <ascii_strlower_n@plt+0x115ec>
  4157c0:	ldur	x8, [x29, #-24]
  4157c4:	stur	x8, [x29, #-72]
  4157c8:	ldur	x8, [x29, #-72]
  4157cc:	mov	w9, #0x0                   	// #0
  4157d0:	str	w9, [sp, #32]
  4157d4:	cbz	x8, 4157ec <ascii_strlower_n@plt+0x1138c>
  4157d8:	ldur	x8, [x29, #-72]
  4157dc:	ldr	x8, [x8]
  4157e0:	cmp	x8, #0x0
  4157e4:	cset	w9, ne  // ne = any
  4157e8:	str	w9, [sp, #32]
  4157ec:	ldr	w8, [sp, #32]
  4157f0:	tbnz	w8, #0, 4157f8 <ascii_strlower_n@plt+0x11398>
  4157f4:	b	415a4c <ascii_strlower_n@plt+0x115ec>
  4157f8:	ldur	x8, [x29, #-72]
  4157fc:	ldr	x8, [x8]
  415800:	ldrb	w9, [x8]
  415804:	cmp	w9, #0x7e
  415808:	b.ne	415820 <ascii_strlower_n@plt+0x113c0>  // b.any
  41580c:	ldur	x8, [x29, #-72]
  415810:	ldr	x8, [x8]
  415814:	add	x8, x8, #0x1
  415818:	str	x8, [sp, #24]
  41581c:	b	41582c <ascii_strlower_n@plt+0x113cc>
  415820:	ldur	x8, [x29, #-72]
  415824:	ldr	x8, [x8]
  415828:	str	x8, [sp, #24]
  41582c:	ldr	x8, [sp, #24]
  415830:	str	x8, [sp, #136]
  415834:	ldr	x0, [sp, #136]
  415838:	bl	415b34 <ascii_strlower_n@plt+0x116d4>
  41583c:	stur	w0, [x29, #-76]
  415840:	ldur	w9, [x29, #-76]
  415844:	cmp	w9, #0x0
  415848:	cset	w9, ge  // ge = tcont
  41584c:	tbnz	w9, #0, 4158e0 <ascii_strlower_n@plt+0x11480>
  415850:	mov	w8, #0x3                   	// #3
  415854:	str	w8, [sp, #132]
  415858:	ldur	w8, [x29, #-76]
  41585c:	str	w8, [sp, #128]
  415860:	str	wzr, [sp, #124]
  415864:	ldr	w0, [sp, #124]
  415868:	bl	403a10 <log_get_max_level_realm@plt>
  41586c:	ldr	w8, [sp, #132]
  415870:	and	w8, w8, #0x7
  415874:	cmp	w0, w8
  415878:	b.lt	4158b0 <ascii_strlower_n@plt+0x11450>  // b.tstop
  41587c:	ldr	w8, [sp, #124]
  415880:	ldr	w9, [sp, #132]
  415884:	orr	w0, w9, w8, lsl #10
  415888:	ldr	w1, [sp, #128]
  41588c:	ldr	x6, [sp, #136]
  415890:	ldr	x2, [sp, #64]
  415894:	mov	w3, #0x7bd                 	// #1981
  415898:	ldr	x4, [sp, #56]
  41589c:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  4158a0:	add	x5, x5, #0x7d5
  4158a4:	bl	403a20 <log_internal_realm@plt>
  4158a8:	str	w0, [sp, #20]
  4158ac:	b	4158c4 <ascii_strlower_n@plt+0x11464>
  4158b0:	ldr	w0, [sp, #128]
  4158b4:	bl	403a30 <abs@plt>
  4158b8:	mov	w8, wzr
  4158bc:	subs	w8, w8, w0, uxtb
  4158c0:	str	w8, [sp, #20]
  4158c4:	ldr	w8, [sp, #20]
  4158c8:	str	w8, [sp, #120]
  4158cc:	ldr	w8, [sp, #120]
  4158d0:	stur	w8, [x29, #-4]
  4158d4:	mov	w8, #0x1                   	// #1
  4158d8:	stur	w8, [x29, #-96]
  4158dc:	b	415b18 <ascii_strlower_n@plt+0x116b8>
  4158e0:	ldur	w8, [x29, #-76]
  4158e4:	cbnz	w8, 415974 <ascii_strlower_n@plt+0x11514>
  4158e8:	mov	w8, #0x3                   	// #3
  4158ec:	str	w8, [sp, #116]
  4158f0:	str	wzr, [sp, #112]
  4158f4:	str	wzr, [sp, #108]
  4158f8:	ldr	w0, [sp, #108]
  4158fc:	bl	403a10 <log_get_max_level_realm@plt>
  415900:	ldr	w8, [sp, #116]
  415904:	and	w8, w8, #0x7
  415908:	cmp	w0, w8
  41590c:	b.lt	415944 <ascii_strlower_n@plt+0x114e4>  // b.tstop
  415910:	ldr	w8, [sp, #108]
  415914:	ldr	w9, [sp, #116]
  415918:	orr	w0, w9, w8, lsl #10
  41591c:	ldr	w1, [sp, #112]
  415920:	ldr	x6, [sp, #136]
  415924:	ldr	x2, [sp, #64]
  415928:	mov	w3, #0x7bf                 	// #1983
  41592c:	ldr	x4, [sp, #56]
  415930:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  415934:	add	x5, x5, #0x800
  415938:	bl	403a20 <log_internal_realm@plt>
  41593c:	str	w0, [sp, #16]
  415940:	b	415958 <ascii_strlower_n@plt+0x114f8>
  415944:	ldr	w0, [sp, #112]
  415948:	bl	403a30 <abs@plt>
  41594c:	mov	w8, wzr
  415950:	subs	w8, w8, w0, uxtb
  415954:	str	w8, [sp, #16]
  415958:	ldr	w8, [sp, #16]
  41595c:	str	w8, [sp, #104]
  415960:	mov	w8, #0xffffffea            	// #-22
  415964:	stur	w8, [x29, #-4]
  415968:	mov	w8, #0x1                   	// #1
  41596c:	stur	w8, [x29, #-96]
  415970:	b	415b18 <ascii_strlower_n@plt+0x116b8>
  415974:	ldur	x0, [x29, #-64]
  415978:	ldr	x2, [sp, #136]
  41597c:	ldur	x8, [x29, #-72]
  415980:	ldr	x8, [x8]
  415984:	ldrb	w9, [x8]
  415988:	cmp	w9, #0x7e
  41598c:	cset	w9, eq  // eq = none
  415990:	and	w3, w9, #0x1
  415994:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  415998:	add	x1, x1, #0x5b2
  41599c:	bl	403f10 <sd_bus_message_append@plt>
  4159a0:	stur	w0, [x29, #-76]
  4159a4:	ldur	w9, [x29, #-76]
  4159a8:	cmp	w9, #0x0
  4159ac:	cset	w9, ge  // ge = tcont
  4159b0:	tbnz	w9, #0, 415a3c <ascii_strlower_n@plt+0x115dc>
  4159b4:	mov	w8, #0x3                   	// #3
  4159b8:	str	w8, [sp, #100]
  4159bc:	ldur	w8, [x29, #-76]
  4159c0:	str	w8, [sp, #96]
  4159c4:	str	wzr, [sp, #92]
  4159c8:	ldr	w0, [sp, #92]
  4159cc:	bl	403a10 <log_get_max_level_realm@plt>
  4159d0:	ldr	w8, [sp, #100]
  4159d4:	and	w8, w8, #0x7
  4159d8:	cmp	w0, w8
  4159dc:	b.lt	415a0c <ascii_strlower_n@plt+0x115ac>  // b.tstop
  4159e0:	ldr	w8, [sp, #92]
  4159e4:	ldr	w9, [sp, #100]
  4159e8:	orr	w0, w9, w8, lsl #10
  4159ec:	ldr	w1, [sp, #96]
  4159f0:	ldr	x2, [sp, #64]
  4159f4:	mov	w3, #0x7c5                 	// #1989
  4159f8:	ldr	x4, [sp, #56]
  4159fc:	ldr	x5, [sp, #48]
  415a00:	bl	403a20 <log_internal_realm@plt>
  415a04:	str	w0, [sp, #12]
  415a08:	b	415a20 <ascii_strlower_n@plt+0x115c0>
  415a0c:	ldr	w0, [sp, #96]
  415a10:	bl	403a30 <abs@plt>
  415a14:	mov	w8, wzr
  415a18:	subs	w8, w8, w0, uxtb
  415a1c:	str	w8, [sp, #12]
  415a20:	ldr	w8, [sp, #12]
  415a24:	str	w8, [sp, #88]
  415a28:	ldr	w8, [sp, #88]
  415a2c:	stur	w8, [x29, #-4]
  415a30:	mov	w8, #0x1                   	// #1
  415a34:	stur	w8, [x29, #-96]
  415a38:	b	415b18 <ascii_strlower_n@plt+0x116b8>
  415a3c:	ldur	x8, [x29, #-72]
  415a40:	add	x8, x8, #0x8
  415a44:	stur	x8, [x29, #-72]
  415a48:	b	4157c8 <ascii_strlower_n@plt+0x11368>
  415a4c:	ldur	x0, [x29, #-64]
  415a50:	bl	404090 <sd_bus_message_close_container@plt>
  415a54:	stur	w0, [x29, #-76]
  415a58:	ldur	w8, [x29, #-76]
  415a5c:	cmp	w8, #0x0
  415a60:	cset	w8, ge  // ge = tcont
  415a64:	tbnz	w8, #0, 415af0 <ascii_strlower_n@plt+0x11690>
  415a68:	mov	w8, #0x3                   	// #3
  415a6c:	str	w8, [sp, #84]
  415a70:	ldur	w8, [x29, #-76]
  415a74:	str	w8, [sp, #80]
  415a78:	str	wzr, [sp, #76]
  415a7c:	ldr	w0, [sp, #76]
  415a80:	bl	403a10 <log_get_max_level_realm@plt>
  415a84:	ldr	w8, [sp, #84]
  415a88:	and	w8, w8, #0x7
  415a8c:	cmp	w0, w8
  415a90:	b.lt	415ac0 <ascii_strlower_n@plt+0x11660>  // b.tstop
  415a94:	ldr	w8, [sp, #76]
  415a98:	ldr	w9, [sp, #84]
  415a9c:	orr	w0, w9, w8, lsl #10
  415aa0:	ldr	w1, [sp, #80]
  415aa4:	ldr	x2, [sp, #64]
  415aa8:	mov	w3, #0x7ca                 	// #1994
  415aac:	ldr	x4, [sp, #56]
  415ab0:	ldr	x5, [sp, #48]
  415ab4:	bl	403a20 <log_internal_realm@plt>
  415ab8:	str	w0, [sp, #8]
  415abc:	b	415ad4 <ascii_strlower_n@plt+0x11674>
  415ac0:	ldr	w0, [sp, #80]
  415ac4:	bl	403a30 <abs@plt>
  415ac8:	mov	w8, wzr
  415acc:	subs	w8, w8, w0, uxtb
  415ad0:	str	w8, [sp, #8]
  415ad4:	ldr	w8, [sp, #8]
  415ad8:	str	w8, [sp, #72]
  415adc:	ldr	w8, [sp, #72]
  415ae0:	stur	w8, [x29, #-4]
  415ae4:	mov	w8, #0x1                   	// #1
  415ae8:	stur	w8, [x29, #-96]
  415aec:	b	415b18 <ascii_strlower_n@plt+0x116b8>
  415af0:	ldur	x0, [x29, #-16]
  415af4:	ldur	x1, [x29, #-64]
  415af8:	ldur	x3, [x29, #-56]
  415afc:	mov	x8, xzr
  415b00:	mov	x2, x8
  415b04:	mov	x4, x8
  415b08:	bl	403f30 <sd_bus_call@plt>
  415b0c:	stur	w0, [x29, #-4]
  415b10:	mov	w9, #0x1                   	// #1
  415b14:	stur	w9, [x29, #-96]
  415b18:	sub	x0, x29, #0x40
  415b1c:	bl	40d468 <ascii_strlower_n@plt+0x9008>
  415b20:	ldur	w0, [x29, #-4]
  415b24:	ldr	x28, [sp, #304]
  415b28:	ldp	x29, x30, [sp, #288]
  415b2c:	add	sp, sp, #0x140
  415b30:	ret
  415b34:	sub	sp, sp, #0x30
  415b38:	stp	x29, x30, [sp, #32]
  415b3c:	add	x29, sp, #0x20
  415b40:	mov	w8, wzr
  415b44:	mov	x9, xzr
  415b48:	mov	w10, #0xffffffea            	// #-22
  415b4c:	str	x0, [sp, #16]
  415b50:	ldr	x0, [sp, #16]
  415b54:	mov	w1, w8
  415b58:	mov	x2, x9
  415b5c:	str	w10, [sp, #8]
  415b60:	bl	415bb4 <ascii_strlower_n@plt+0x11754>
  415b64:	str	w0, [sp, #12]
  415b68:	ldr	w8, [sp, #12]
  415b6c:	ldr	w10, [sp, #8]
  415b70:	cmp	w8, w10
  415b74:	b.ne	415b80 <ascii_strlower_n@plt+0x11720>  // b.any
  415b78:	stur	wzr, [x29, #-4]
  415b7c:	b	415ba4 <ascii_strlower_n@plt+0x11744>
  415b80:	ldr	w8, [sp, #12]
  415b84:	cmp	w8, #0x0
  415b88:	cset	w8, ge  // ge = tcont
  415b8c:	tbnz	w8, #0, 415b9c <ascii_strlower_n@plt+0x1173c>
  415b90:	ldr	w8, [sp, #12]
  415b94:	stur	w8, [x29, #-4]
  415b98:	b	415ba4 <ascii_strlower_n@plt+0x11744>
  415b9c:	mov	w8, #0x1                   	// #1
  415ba0:	stur	w8, [x29, #-4]
  415ba4:	ldur	w0, [x29, #-4]
  415ba8:	ldp	x29, x30, [sp, #32]
  415bac:	add	sp, sp, #0x30
  415bb0:	ret
  415bb4:	sub	sp, sp, #0x30
  415bb8:	stp	x29, x30, [sp, #32]
  415bbc:	add	x29, sp, #0x20
  415bc0:	mov	x8, xzr
  415bc4:	stur	x0, [x29, #-8]
  415bc8:	stur	w1, [x29, #-12]
  415bcc:	str	x2, [sp, #8]
  415bd0:	ldur	x0, [x29, #-8]
  415bd4:	ldur	w2, [x29, #-12]
  415bd8:	ldr	x3, [sp, #8]
  415bdc:	mov	x1, x8
  415be0:	bl	4040a0 <dns_name_concat@plt>
  415be4:	ldp	x29, x30, [sp, #32]
  415be8:	add	sp, sp, #0x30
  415bec:	ret
  415bf0:	sub	sp, sp, #0xb0
  415bf4:	stp	x29, x30, [sp, #160]
  415bf8:	add	x29, sp, #0xa0
  415bfc:	mov	x8, xzr
  415c00:	adrp	x9, 430000 <ascii_strlower_n@plt+0x2bba0>
  415c04:	add	x9, x9, #0xaca
  415c08:	adrp	x10, 42d000 <ascii_strlower_n@plt+0x28ba0>
  415c0c:	add	x10, x10, #0x6f4
  415c10:	add	x10, x10, #0x3
  415c14:	adrp	x11, 430000 <ascii_strlower_n@plt+0x2bba0>
  415c18:	add	x11, x11, #0xaec
  415c1c:	adrp	x12, 42f000 <ascii_strlower_n@plt+0x2aba0>
  415c20:	add	x12, x12, #0x9d1
  415c24:	sub	x13, x29, #0x40
  415c28:	stur	x0, [x29, #-16]
  415c2c:	stur	x1, [x29, #-24]
  415c30:	stur	x2, [x29, #-32]
  415c34:	stur	x3, [x29, #-40]
  415c38:	stur	x4, [x29, #-48]
  415c3c:	stur	x5, [x29, #-56]
  415c40:	stur	x8, [x29, #-64]
  415c44:	ldur	x0, [x29, #-16]
  415c48:	ldur	x2, [x29, #-32]
  415c4c:	ldur	x3, [x29, #-40]
  415c50:	ldur	x4, [x29, #-48]
  415c54:	mov	x1, x13
  415c58:	mov	x5, x9
  415c5c:	str	x10, [sp, #32]
  415c60:	str	x11, [sp, #24]
  415c64:	str	x12, [sp, #16]
  415c68:	bl	403f00 <sd_bus_message_new_method_call@plt>
  415c6c:	stur	w0, [x29, #-68]
  415c70:	ldur	w14, [x29, #-68]
  415c74:	cmp	w14, #0x0
  415c78:	cset	w14, ge  // ge = tcont
  415c7c:	tbnz	w14, #0, 415d08 <ascii_strlower_n@plt+0x118a8>
  415c80:	mov	w8, #0x3                   	// #3
  415c84:	stur	w8, [x29, #-72]
  415c88:	ldur	w8, [x29, #-68]
  415c8c:	stur	w8, [x29, #-76]
  415c90:	str	wzr, [sp, #80]
  415c94:	ldr	w0, [sp, #80]
  415c98:	bl	403a10 <log_get_max_level_realm@plt>
  415c9c:	ldur	w8, [x29, #-72]
  415ca0:	and	w8, w8, #0x7
  415ca4:	cmp	w0, w8
  415ca8:	b.lt	415cd8 <ascii_strlower_n@plt+0x11878>  // b.tstop
  415cac:	ldr	w8, [sp, #80]
  415cb0:	ldur	w9, [x29, #-72]
  415cb4:	orr	w0, w9, w8, lsl #10
  415cb8:	ldur	w1, [x29, #-76]
  415cbc:	ldr	x2, [sp, #32]
  415cc0:	mov	w3, #0x90f                 	// #2319
  415cc4:	ldr	x4, [sp, #24]
  415cc8:	ldr	x5, [sp, #16]
  415ccc:	bl	403a20 <log_internal_realm@plt>
  415cd0:	str	w0, [sp, #12]
  415cd4:	b	415cec <ascii_strlower_n@plt+0x1188c>
  415cd8:	ldur	w0, [x29, #-76]
  415cdc:	bl	403a30 <abs@plt>
  415ce0:	mov	w8, wzr
  415ce4:	subs	w8, w8, w0, uxtb
  415ce8:	str	w8, [sp, #12]
  415cec:	ldr	w8, [sp, #12]
  415cf0:	str	w8, [sp, #76]
  415cf4:	ldr	w8, [sp, #76]
  415cf8:	stur	w8, [x29, #-4]
  415cfc:	mov	w8, #0x1                   	// #1
  415d00:	str	w8, [sp, #72]
  415d04:	b	415e90 <ascii_strlower_n@plt+0x11a30>
  415d08:	ldur	x0, [x29, #-64]
  415d0c:	adrp	x8, 450000 <ascii_strlower_n@plt+0x4bba0>
  415d10:	add	x8, x8, #0x170
  415d14:	ldr	w2, [x8]
  415d18:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  415d1c:	add	x1, x1, #0x43b
  415d20:	bl	403f10 <sd_bus_message_append@plt>
  415d24:	stur	w0, [x29, #-68]
  415d28:	ldur	w9, [x29, #-68]
  415d2c:	cmp	w9, #0x0
  415d30:	cset	w9, ge  // ge = tcont
  415d34:	tbnz	w9, #0, 415dc0 <ascii_strlower_n@plt+0x11960>
  415d38:	mov	w8, #0x3                   	// #3
  415d3c:	str	w8, [sp, #68]
  415d40:	ldur	w8, [x29, #-68]
  415d44:	str	w8, [sp, #64]
  415d48:	str	wzr, [sp, #60]
  415d4c:	ldr	w0, [sp, #60]
  415d50:	bl	403a10 <log_get_max_level_realm@plt>
  415d54:	ldr	w8, [sp, #68]
  415d58:	and	w8, w8, #0x7
  415d5c:	cmp	w0, w8
  415d60:	b.lt	415d90 <ascii_strlower_n@plt+0x11930>  // b.tstop
  415d64:	ldr	w8, [sp, #60]
  415d68:	ldr	w9, [sp, #68]
  415d6c:	orr	w0, w9, w8, lsl #10
  415d70:	ldr	w1, [sp, #64]
  415d74:	ldr	x2, [sp, #32]
  415d78:	mov	w3, #0x913                 	// #2323
  415d7c:	ldr	x4, [sp, #24]
  415d80:	ldr	x5, [sp, #16]
  415d84:	bl	403a20 <log_internal_realm@plt>
  415d88:	str	w0, [sp, #8]
  415d8c:	b	415da4 <ascii_strlower_n@plt+0x11944>
  415d90:	ldr	w0, [sp, #64]
  415d94:	bl	403a30 <abs@plt>
  415d98:	mov	w8, wzr
  415d9c:	subs	w8, w8, w0, uxtb
  415da0:	str	w8, [sp, #8]
  415da4:	ldr	w8, [sp, #8]
  415da8:	str	w8, [sp, #56]
  415dac:	ldr	w8, [sp, #56]
  415db0:	stur	w8, [x29, #-4]
  415db4:	mov	w8, #0x1                   	// #1
  415db8:	str	w8, [sp, #72]
  415dbc:	b	415e90 <ascii_strlower_n@plt+0x11a30>
  415dc0:	ldur	x0, [x29, #-64]
  415dc4:	ldur	x1, [x29, #-24]
  415dc8:	bl	4040b0 <sd_bus_message_append_strv@plt>
  415dcc:	stur	w0, [x29, #-68]
  415dd0:	ldur	w8, [x29, #-68]
  415dd4:	cmp	w8, #0x0
  415dd8:	cset	w8, ge  // ge = tcont
  415ddc:	tbnz	w8, #0, 415e68 <ascii_strlower_n@plt+0x11a08>
  415de0:	mov	w8, #0x3                   	// #3
  415de4:	str	w8, [sp, #52]
  415de8:	ldur	w8, [x29, #-68]
  415dec:	str	w8, [sp, #48]
  415df0:	str	wzr, [sp, #44]
  415df4:	ldr	w0, [sp, #44]
  415df8:	bl	403a10 <log_get_max_level_realm@plt>
  415dfc:	ldr	w8, [sp, #52]
  415e00:	and	w8, w8, #0x7
  415e04:	cmp	w0, w8
  415e08:	b.lt	415e38 <ascii_strlower_n@plt+0x119d8>  // b.tstop
  415e0c:	ldr	w8, [sp, #44]
  415e10:	ldr	w9, [sp, #52]
  415e14:	orr	w0, w9, w8, lsl #10
  415e18:	ldr	w1, [sp, #48]
  415e1c:	ldr	x2, [sp, #32]
  415e20:	mov	w3, #0x917                 	// #2327
  415e24:	ldr	x4, [sp, #24]
  415e28:	ldr	x5, [sp, #16]
  415e2c:	bl	403a20 <log_internal_realm@plt>
  415e30:	str	w0, [sp, #4]
  415e34:	b	415e4c <ascii_strlower_n@plt+0x119ec>
  415e38:	ldr	w0, [sp, #48]
  415e3c:	bl	403a30 <abs@plt>
  415e40:	mov	w8, wzr
  415e44:	subs	w8, w8, w0, uxtb
  415e48:	str	w8, [sp, #4]
  415e4c:	ldr	w8, [sp, #4]
  415e50:	str	w8, [sp, #40]
  415e54:	ldr	w8, [sp, #40]
  415e58:	stur	w8, [x29, #-4]
  415e5c:	mov	w8, #0x1                   	// #1
  415e60:	str	w8, [sp, #72]
  415e64:	b	415e90 <ascii_strlower_n@plt+0x11a30>
  415e68:	ldur	x0, [x29, #-16]
  415e6c:	ldur	x1, [x29, #-64]
  415e70:	ldur	x3, [x29, #-56]
  415e74:	mov	x8, xzr
  415e78:	mov	x2, x8
  415e7c:	mov	x4, x8
  415e80:	bl	403f30 <sd_bus_call@plt>
  415e84:	stur	w0, [x29, #-4]
  415e88:	mov	w9, #0x1                   	// #1
  415e8c:	str	w9, [sp, #72]
  415e90:	sub	x0, x29, #0x40
  415e94:	bl	40d468 <ascii_strlower_n@plt+0x9008>
  415e98:	ldur	w0, [x29, #-4]
  415e9c:	ldp	x29, x30, [sp, #160]
  415ea0:	add	sp, sp, #0xb0
  415ea4:	ret
  415ea8:	sub	sp, sp, #0x10
  415eac:	str	x0, [sp, #8]
  415eb0:	str	x1, [sp]
  415eb4:	ldr	x8, [sp, #8]
  415eb8:	ldr	x9, [sp]
  415ebc:	add	x8, x8, x9
  415ec0:	subs	x8, x8, #0x1
  415ec4:	ldr	x9, [sp]
  415ec8:	subs	x9, x9, #0x1
  415ecc:	bic	x0, x8, x9
  415ed0:	add	sp, sp, #0x10
  415ed4:	ret
  415ed8:	sub	sp, sp, #0x80
  415edc:	stp	x29, x30, [sp, #112]
  415ee0:	add	x29, sp, #0x70
  415ee4:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  415ee8:	add	x8, x8, #0xb94
  415eec:	add	x8, x8, #0x3
  415ef0:	stur	x0, [x29, #-16]
  415ef4:	stur	w1, [x29, #-20]
  415ef8:	stur	x2, [x29, #-32]
  415efc:	stur	x3, [x29, #-40]
  415f00:	str	x8, [sp, #32]
  415f04:	ldur	x8, [x29, #-16]
  415f08:	cmp	x8, #0x0
  415f0c:	cset	w9, ne  // ne = any
  415f10:	mov	w10, #0x1                   	// #1
  415f14:	eor	w9, w9, #0x1
  415f18:	eor	w9, w9, w10
  415f1c:	eor	w9, w9, w10
  415f20:	and	w9, w9, #0x1
  415f24:	mov	w0, w9
  415f28:	sxtw	x8, w0
  415f2c:	cbz	x8, 415f54 <ascii_strlower_n@plt+0x11af4>
  415f30:	mov	w8, wzr
  415f34:	mov	w0, w8
  415f38:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  415f3c:	add	x1, x1, #0x42e
  415f40:	ldr	x2, [sp, #32]
  415f44:	mov	w3, #0x2c                  	// #44
  415f48:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  415f4c:	add	x4, x4, #0xbb9
  415f50:	bl	4039d0 <log_assert_failed_realm@plt>
  415f54:	ldur	x8, [x29, #-40]
  415f58:	cmp	x8, #0xc
  415f5c:	cset	w9, cs  // cs = hs, nlast
  415f60:	mov	w10, #0x1                   	// #1
  415f64:	eor	w9, w9, #0x1
  415f68:	eor	w9, w9, w10
  415f6c:	eor	w9, w9, w10
  415f70:	and	w9, w9, #0x1
  415f74:	mov	w0, w9
  415f78:	sxtw	x8, w0
  415f7c:	cbz	x8, 415fa4 <ascii_strlower_n@plt+0x11b44>
  415f80:	mov	w8, wzr
  415f84:	mov	w0, w8
  415f88:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  415f8c:	add	x1, x1, #0xbf7
  415f90:	ldr	x2, [sp, #32]
  415f94:	mov	w3, #0x2d                  	// #45
  415f98:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  415f9c:	add	x4, x4, #0xbb9
  415fa0:	bl	4039d0 <log_assert_failed_realm@plt>
  415fa4:	ldur	x8, [x29, #-40]
  415fa8:	mov	x9, #0xffff                	// #65535
  415fac:	cmp	x8, x9
  415fb0:	b.ls	415fbc <ascii_strlower_n@plt+0x11b5c>  // b.plast
  415fb4:	mov	x8, #0xffff                	// #65535
  415fb8:	stur	x8, [x29, #-40]
  415fbc:	ldur	x8, [x29, #-32]
  415fc0:	mov	x9, #0xffff                	// #65535
  415fc4:	cmp	x8, x9
  415fc8:	b.ls	41605c <ascii_strlower_n@plt+0x11bfc>  // b.plast
  415fcc:	mov	w8, #0x3                   	// #3
  415fd0:	str	w8, [sp, #52]
  415fd4:	mov	w8, #0x1b                  	// #27
  415fd8:	movk	w8, #0x4000, lsl #16
  415fdc:	str	w8, [sp, #48]
  415fe0:	str	wzr, [sp, #44]
  415fe4:	ldr	w0, [sp, #44]
  415fe8:	bl	403a10 <log_get_max_level_realm@plt>
  415fec:	ldr	w8, [sp, #52]
  415ff0:	and	w8, w8, #0x7
  415ff4:	cmp	w0, w8
  415ff8:	b.lt	416034 <ascii_strlower_n@plt+0x11bd4>  // b.tstop
  415ffc:	ldr	w8, [sp, #44]
  416000:	ldr	w9, [sp, #52]
  416004:	orr	w0, w9, w8, lsl #10
  416008:	ldr	w1, [sp, #48]
  41600c:	ldur	x6, [x29, #-32]
  416010:	ldr	x2, [sp, #32]
  416014:	mov	w3, #0x38                  	// #56
  416018:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  41601c:	add	x4, x4, #0xc1a
  416020:	adrp	x5, 430000 <ascii_strlower_n@plt+0x2bba0>
  416024:	add	x5, x5, #0xc29
  416028:	bl	403a20 <log_internal_realm@plt>
  41602c:	str	w0, [sp, #28]
  416030:	b	416048 <ascii_strlower_n@plt+0x11be8>
  416034:	ldr	w0, [sp, #48]
  416038:	bl	403a30 <abs@plt>
  41603c:	mov	w8, wzr
  416040:	subs	w8, w8, w0, uxtb
  416044:	str	w8, [sp, #28]
  416048:	ldr	w8, [sp, #28]
  41604c:	str	w8, [sp, #40]
  416050:	ldr	w8, [sp, #40]
  416054:	stur	w8, [x29, #-4]
  416058:	b	416150 <ascii_strlower_n@plt+0x11cf0>
  41605c:	ldur	x8, [x29, #-32]
  416060:	cmp	x8, #0xc
  416064:	b.cs	416074 <ascii_strlower_n@plt+0x11c14>  // b.hs, b.nlast
  416068:	mov	x8, #0x200                 	// #512
  41606c:	str	x8, [sp, #56]
  416070:	b	41607c <ascii_strlower_n@plt+0x11c1c>
  416074:	ldur	x8, [x29, #-32]
  416078:	str	x8, [sp, #56]
  41607c:	ldr	x8, [sp, #56]
  416080:	add	x0, x8, #0xa8
  416084:	str	x0, [sp, #16]
  416088:	bl	4040c0 <page_size@plt>
  41608c:	ldr	x8, [sp, #16]
  416090:	str	x0, [sp, #8]
  416094:	mov	x0, x8
  416098:	ldr	x1, [sp, #8]
  41609c:	bl	416160 <ascii_strlower_n@plt+0x11d00>
  4160a0:	subs	x8, x0, #0xa8
  4160a4:	str	x8, [sp, #56]
  4160a8:	ldr	x8, [sp, #56]
  4160ac:	ldur	x9, [x29, #-40]
  4160b0:	cmp	x8, x9
  4160b4:	b.ls	4160c0 <ascii_strlower_n@plt+0x11c60>  // b.plast
  4160b8:	ldur	x8, [x29, #-40]
  4160bc:	str	x8, [sp, #56]
  4160c0:	ldr	x8, [sp, #56]
  4160c4:	add	x1, x8, #0xa8
  4160c8:	mov	x0, #0x1                   	// #1
  4160cc:	bl	4040d0 <calloc@plt>
  4160d0:	stur	x0, [x29, #-48]
  4160d4:	ldur	x8, [x29, #-48]
  4160d8:	cbnz	x8, 4160e8 <ascii_strlower_n@plt+0x11c88>
  4160dc:	mov	w8, #0xfffffff4            	// #-12
  4160e0:	stur	w8, [x29, #-4]
  4160e4:	b	416150 <ascii_strlower_n@plt+0x11cf0>
  4160e8:	ldur	x8, [x29, #-48]
  4160ec:	mov	x9, #0xc                   	// #12
  4160f0:	str	x9, [x8, #24]
  4160f4:	ldur	x8, [x29, #-48]
  4160f8:	str	x9, [x8, #8]
  4160fc:	ldr	x8, [sp, #56]
  416100:	ldur	x9, [x29, #-48]
  416104:	str	x8, [x9, #16]
  416108:	ldur	x8, [x29, #-40]
  41610c:	ldur	x9, [x29, #-48]
  416110:	str	x8, [x9, #32]
  416114:	ldur	w10, [x29, #-20]
  416118:	ldur	x8, [x29, #-48]
  41611c:	str	w10, [x8, #4]
  416120:	ldur	x8, [x29, #-48]
  416124:	mov	x9, #0xffffffffffffffff    	// #-1
  416128:	str	x9, [x8, #64]
  41612c:	ldur	x8, [x29, #-48]
  416130:	str	x9, [x8, #56]
  416134:	ldur	x8, [x29, #-48]
  416138:	mov	w10, #0x1                   	// #1
  41613c:	str	w10, [x8]
  416140:	ldur	x8, [x29, #-48]
  416144:	ldur	x9, [x29, #-16]
  416148:	str	x8, [x9]
  41614c:	stur	wzr, [x29, #-4]
  416150:	ldur	w0, [x29, #-4]
  416154:	ldp	x29, x30, [sp, #112]
  416158:	add	sp, sp, #0x80
  41615c:	ret
  416160:	sub	sp, sp, #0x10
  416164:	str	x0, [sp, #8]
  416168:	str	x1, [sp]
  41616c:	ldr	x8, [sp, #8]
  416170:	ldr	x9, [sp]
  416174:	add	x8, x8, x9
  416178:	subs	x8, x8, #0x1
  41617c:	ldr	x9, [sp]
  416180:	subs	x9, x9, #0x1
  416184:	bic	x0, x8, x9
  416188:	add	sp, sp, #0x10
  41618c:	ret
  416190:	sub	sp, sp, #0x40
  416194:	stp	x29, x30, [sp, #48]
  416198:	add	x29, sp, #0x30
  41619c:	mov	w8, #0x1                   	// #1
  4161a0:	adrp	x9, 430000 <ascii_strlower_n@plt+0x2bba0>
  4161a4:	add	x9, x9, #0xb94
  4161a8:	add	x9, x9, #0x3
  4161ac:	adrp	x10, 430000 <ascii_strlower_n@plt+0x2bba0>
  4161b0:	add	x10, x10, #0xc53
  4161b4:	stur	x0, [x29, #-8]
  4161b8:	and	w11, w1, w8
  4161bc:	sturb	w11, [x29, #-9]
  4161c0:	and	w8, w2, w8
  4161c4:	sturb	w8, [x29, #-10]
  4161c8:	str	x9, [sp, #16]
  4161cc:	str	x10, [sp, #8]
  4161d0:	ldur	x8, [x29, #-8]
  4161d4:	cmp	x8, #0x0
  4161d8:	cset	w9, ne  // ne = any
  4161dc:	mov	w10, #0x1                   	// #1
  4161e0:	eor	w9, w9, #0x1
  4161e4:	eor	w9, w9, w10
  4161e8:	eor	w9, w9, w10
  4161ec:	and	w9, w9, #0x1
  4161f0:	mov	w0, w9
  4161f4:	sxtw	x8, w0
  4161f8:	cbz	x8, 41621c <ascii_strlower_n@plt+0x11dbc>
  4161fc:	mov	w8, wzr
  416200:	mov	w0, w8
  416204:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  416208:	add	x1, x1, #0xc51
  41620c:	ldr	x2, [sp, #16]
  416210:	mov	w3, #0x5e                  	// #94
  416214:	ldr	x4, [sp, #8]
  416218:	bl	4039d0 <log_assert_failed_realm@plt>
  41621c:	ldur	x0, [x29, #-8]
  416220:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  416224:	str	x0, [sp, #24]
  416228:	ldur	x8, [x29, #-8]
  41622c:	ldr	w9, [x8, #4]
  416230:	cmp	w9, #0x1
  416234:	str	w9, [sp, #4]
  416238:	b.eq	4162b8 <ascii_strlower_n@plt+0x11e58>  // b.none
  41623c:	b	416240 <ascii_strlower_n@plt+0x11de0>
  416240:	ldr	w8, [sp, #4]
  416244:	cmp	w8, #0x2
  416248:	cset	w9, eq  // eq = none
  41624c:	eor	w9, w9, #0x1
  416250:	tbnz	w9, #0, 4162ec <ascii_strlower_n@plt+0x11e8c>
  416254:	b	416258 <ascii_strlower_n@plt+0x11df8>
  416258:	ldurb	w8, [x29, #-10]
  41625c:	mov	w9, #0x1                   	// #1
  416260:	eor	w8, w8, #0x1
  416264:	eor	w8, w8, w9
  416268:	eor	w8, w8, w9
  41626c:	eor	w8, w8, w9
  416270:	and	w8, w8, #0x1
  416274:	mov	w0, w8
  416278:	sxtw	x10, w0
  41627c:	cbz	x10, 4162a0 <ascii_strlower_n@plt+0x11e40>
  416280:	mov	w8, wzr
  416284:	mov	w0, w8
  416288:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41628c:	add	x1, x1, #0xc88
  416290:	ldr	x2, [sp, #16]
  416294:	mov	w3, #0x64                  	// #100
  416298:	ldr	x4, [sp, #8]
  41629c:	bl	4039d0 <log_assert_failed_realm@plt>
  4162a0:	mov	w8, wzr
  4162a4:	mov	w0, w8
  4162a8:	bl	4163e4 <ascii_strlower_n@plt+0x11f84>
  4162ac:	ldr	x9, [sp, #24]
  4162b0:	strh	w0, [x9, #2]
  4162b4:	b	416364 <ascii_strlower_n@plt+0x11f04>
  4162b8:	ldurb	w8, [x29, #-10]
  4162bc:	mov	w9, #0x1                   	// #1
  4162c0:	eor	w8, w8, #0x1
  4162c4:	eor	w8, w8, w9
  4162c8:	and	w8, w8, #0x1
  4162cc:	and	w8, w8, #0xffff
  4162d0:	mov	w9, wzr
  4162d4:	orr	w8, w9, w8, lsl #9
  4162d8:	mov	w0, w8
  4162dc:	bl	4163e4 <ascii_strlower_n@plt+0x11f84>
  4162e0:	ldr	x10, [sp, #24]
  4162e4:	strh	w0, [x10, #2]
  4162e8:	b	416364 <ascii_strlower_n@plt+0x11f04>
  4162ec:	ldurb	w8, [x29, #-10]
  4162f0:	mov	w9, #0x1                   	// #1
  4162f4:	eor	w8, w8, #0x1
  4162f8:	eor	w8, w8, w9
  4162fc:	eor	w8, w8, w9
  416300:	eor	w8, w8, w9
  416304:	and	w8, w8, #0x1
  416308:	mov	w0, w8
  41630c:	sxtw	x10, w0
  416310:	cbz	x10, 416334 <ascii_strlower_n@plt+0x11ed4>
  416314:	mov	w8, wzr
  416318:	mov	w0, w8
  41631c:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  416320:	add	x1, x1, #0xc88
  416324:	ldr	x2, [sp, #16]
  416328:	mov	w3, #0x7e                  	// #126
  41632c:	ldr	x4, [sp, #8]
  416330:	bl	4039d0 <log_assert_failed_realm@plt>
  416334:	ldurb	w8, [x29, #-9]
  416338:	mov	w9, #0x1                   	// #1
  41633c:	eor	w8, w8, #0x1
  416340:	eor	w8, w8, w9
  416344:	and	w8, w8, #0x1
  416348:	and	w8, w8, #0xffff
  41634c:	mov	w9, #0x100                 	// #256
  416350:	orr	w8, w9, w8, lsl #4
  416354:	mov	w0, w8
  416358:	bl	4163e4 <ascii_strlower_n@plt+0x11f84>
  41635c:	ldr	x10, [sp, #24]
  416360:	strh	w0, [x10, #2]
  416364:	ldp	x29, x30, [sp, #48]
  416368:	add	sp, sp, #0x40
  41636c:	ret
  416370:	sub	sp, sp, #0x10
  416374:	str	x0, [sp]
  416378:	ldr	x8, [sp]
  41637c:	cmp	x8, #0x0
  416380:	cset	w9, ne  // ne = any
  416384:	mov	w10, #0x1                   	// #1
  416388:	eor	w9, w9, #0x1
  41638c:	eor	w9, w9, w10
  416390:	eor	w9, w9, w10
  416394:	and	w9, w9, #0x1
  416398:	mov	w0, w9
  41639c:	sxtw	x8, w0
  4163a0:	cbz	x8, 4163b0 <ascii_strlower_n@plt+0x11f50>
  4163a4:	mov	x8, xzr
  4163a8:	str	x8, [sp, #8]
  4163ac:	b	4163d8 <ascii_strlower_n@plt+0x11f78>
  4163b0:	ldr	x8, [sp]
  4163b4:	ldr	x8, [x8, #40]
  4163b8:	cbz	x8, 4163cc <ascii_strlower_n@plt+0x11f6c>
  4163bc:	ldr	x8, [sp]
  4163c0:	ldr	x8, [x8, #40]
  4163c4:	str	x8, [sp, #8]
  4163c8:	b	4163d8 <ascii_strlower_n@plt+0x11f78>
  4163cc:	ldr	x8, [sp]
  4163d0:	add	x8, x8, #0xa8
  4163d4:	str	x8, [sp, #8]
  4163d8:	ldr	x0, [sp, #8]
  4163dc:	add	sp, sp, #0x10
  4163e0:	ret
  4163e4:	sub	sp, sp, #0x20
  4163e8:	stp	x29, x30, [sp, #16]
  4163ec:	add	x29, sp, #0x10
  4163f0:	sturh	w0, [x29, #-2]
  4163f4:	ldurh	w0, [x29, #-2]
  4163f8:	bl	41d98c <ascii_strlower_n@plt+0x1952c>
  4163fc:	ldp	x29, x30, [sp, #16]
  416400:	add	sp, sp, #0x20
  416404:	ret
  416408:	sub	sp, sp, #0x50
  41640c:	stp	x29, x30, [sp, #64]
  416410:	add	x29, sp, #0x40
  416414:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  416418:	add	x8, x8, #0xb94
  41641c:	add	x8, x8, #0x3
  416420:	stur	x0, [x29, #-16]
  416424:	stur	w1, [x29, #-20]
  416428:	str	x2, [sp, #32]
  41642c:	and	w9, w3, #0x1
  416430:	strb	w9, [sp, #31]
  416434:	str	x8, [sp]
  416438:	ldur	x8, [x29, #-16]
  41643c:	cmp	x8, #0x0
  416440:	cset	w9, ne  // ne = any
  416444:	mov	w10, #0x1                   	// #1
  416448:	eor	w9, w9, #0x1
  41644c:	eor	w9, w9, w10
  416450:	eor	w9, w9, w10
  416454:	and	w9, w9, #0x1
  416458:	mov	w0, w9
  41645c:	sxtw	x8, w0
  416460:	cbz	x8, 416488 <ascii_strlower_n@plt+0x12028>
  416464:	mov	w8, wzr
  416468:	mov	w0, w8
  41646c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  416470:	add	x1, x1, #0x42e
  416474:	ldr	x2, [sp]
  416478:	mov	w3, #0x90                  	// #144
  41647c:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  416480:	add	x4, x4, #0xc93
  416484:	bl	4039d0 <log_assert_failed_realm@plt>
  416488:	ldur	w1, [x29, #-20]
  41648c:	ldr	x2, [sp, #32]
  416490:	add	x0, sp, #0x10
  416494:	mov	x3, #0xffff                	// #65535
  416498:	bl	415ed8 <ascii_strlower_n@plt+0x11a78>
  41649c:	str	w0, [sp, #12]
  4164a0:	ldr	w8, [sp, #12]
  4164a4:	cmp	w8, #0x0
  4164a8:	cset	w8, ge  // ge = tcont
  4164ac:	tbnz	w8, #0, 4164bc <ascii_strlower_n@plt+0x1205c>
  4164b0:	ldr	w8, [sp, #12]
  4164b4:	stur	w8, [x29, #-4]
  4164b8:	b	4164e4 <ascii_strlower_n@plt+0x12084>
  4164bc:	ldr	x0, [sp, #16]
  4164c0:	ldrb	w8, [sp, #31]
  4164c4:	and	w1, w8, #0x1
  4164c8:	mov	w8, wzr
  4164cc:	and	w2, w8, #0x1
  4164d0:	bl	416190 <ascii_strlower_n@plt+0x11d30>
  4164d4:	ldr	x9, [sp, #16]
  4164d8:	ldur	x10, [x29, #-16]
  4164dc:	str	x9, [x10]
  4164e0:	stur	wzr, [x29, #-4]
  4164e4:	ldur	w0, [x29, #-4]
  4164e8:	ldp	x29, x30, [sp, #64]
  4164ec:	add	sp, sp, #0x50
  4164f0:	ret
  4164f4:	sub	sp, sp, #0x30
  4164f8:	stp	x29, x30, [sp, #32]
  4164fc:	add	x29, sp, #0x20
  416500:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  416504:	add	x8, x8, #0xb94
  416508:	add	x8, x8, #0x3
  41650c:	str	x0, [sp, #16]
  416510:	ldr	x9, [sp, #16]
  416514:	str	x8, [sp, #8]
  416518:	cbnz	x9, 416528 <ascii_strlower_n@plt+0x120c8>
  41651c:	mov	x8, xzr
  416520:	stur	x8, [x29, #-8]
  416524:	b	4165e8 <ascii_strlower_n@plt+0x12188>
  416528:	ldr	x8, [sp, #16]
  41652c:	ldrb	w9, [x8, #160]
  416530:	mov	w10, #0x1                   	// #1
  416534:	and	w9, w9, #0x1
  416538:	eor	w9, w9, w10
  41653c:	eor	w9, w9, w10
  416540:	eor	w9, w9, w10
  416544:	eor	w9, w9, w10
  416548:	and	w9, w9, #0x1
  41654c:	mov	w0, w9
  416550:	sxtw	x8, w0
  416554:	cbz	x8, 41657c <ascii_strlower_n@plt+0x1211c>
  416558:	mov	w8, wzr
  41655c:	mov	w0, w8
  416560:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  416564:	add	x1, x1, #0xcd6
  416568:	ldr	x2, [sp, #8]
  41656c:	mov	w3, #0xa4                  	// #164
  416570:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  416574:	add	x4, x4, #0xce3
  416578:	bl	4039d0 <log_assert_failed_realm@plt>
  41657c:	ldr	x8, [sp, #16]
  416580:	ldr	w9, [x8]
  416584:	cmp	w9, #0x0
  416588:	cset	w9, hi  // hi = pmore
  41658c:	mov	w10, #0x1                   	// #1
  416590:	eor	w9, w9, #0x1
  416594:	eor	w9, w9, w10
  416598:	eor	w9, w9, w10
  41659c:	and	w9, w9, #0x1
  4165a0:	mov	w0, w9
  4165a4:	sxtw	x8, w0
  4165a8:	cbz	x8, 4165d0 <ascii_strlower_n@plt+0x12170>
  4165ac:	mov	w8, wzr
  4165b0:	mov	w0, w8
  4165b4:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  4165b8:	add	x1, x1, #0xd0a
  4165bc:	ldr	x2, [sp, #8]
  4165c0:	mov	w3, #0xa6                  	// #166
  4165c4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  4165c8:	add	x4, x4, #0xce3
  4165cc:	bl	4039d0 <log_assert_failed_realm@plt>
  4165d0:	ldr	x8, [sp, #16]
  4165d4:	ldr	w9, [x8]
  4165d8:	add	w9, w9, #0x1
  4165dc:	str	w9, [x8]
  4165e0:	ldr	x8, [sp, #16]
  4165e4:	stur	x8, [x29, #-8]
  4165e8:	ldur	x0, [x29, #-8]
  4165ec:	ldp	x29, x30, [sp, #32]
  4165f0:	add	sp, sp, #0x30
  4165f4:	ret
  4165f8:	sub	sp, sp, #0x30
  4165fc:	stp	x29, x30, [sp, #32]
  416600:	add	x29, sp, #0x20
  416604:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  416608:	add	x8, x8, #0xb94
  41660c:	add	x2, x8, #0x3
  416610:	str	x0, [sp, #16]
  416614:	ldr	x8, [sp, #16]
  416618:	str	x2, [sp, #8]
  41661c:	cbnz	x8, 41662c <ascii_strlower_n@plt+0x121cc>
  416620:	mov	x8, xzr
  416624:	stur	x8, [x29, #-8]
  416628:	b	4166c0 <ascii_strlower_n@plt+0x12260>
  41662c:	ldr	x8, [sp, #16]
  416630:	ldr	w9, [x8]
  416634:	cmp	w9, #0x0
  416638:	cset	w9, hi  // hi = pmore
  41663c:	mov	w10, #0x1                   	// #1
  416640:	eor	w9, w9, #0x1
  416644:	eor	w9, w9, w10
  416648:	eor	w9, w9, w10
  41664c:	and	w9, w9, #0x1
  416650:	mov	w0, w9
  416654:	sxtw	x8, w0
  416658:	cbz	x8, 416680 <ascii_strlower_n@plt+0x12220>
  41665c:	mov	w8, wzr
  416660:	mov	w0, w8
  416664:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  416668:	add	x1, x1, #0xd0a
  41666c:	ldr	x2, [sp, #8]
  416670:	mov	w3, #0xc2                  	// #194
  416674:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  416678:	add	x4, x4, #0xd17
  41667c:	bl	4039d0 <log_assert_failed_realm@plt>
  416680:	ldr	x8, [sp, #16]
  416684:	ldr	x0, [x8, #152]
  416688:	bl	4165f8 <ascii_strlower_n@plt+0x12198>
  41668c:	ldr	x8, [sp, #16]
  416690:	ldr	w9, [x8]
  416694:	cmp	w9, #0x1
  416698:	b.ne	4166a8 <ascii_strlower_n@plt+0x12248>  // b.any
  41669c:	ldr	x0, [sp, #16]
  4166a0:	bl	4166d0 <ascii_strlower_n@plt+0x12270>
  4166a4:	b	4166b8 <ascii_strlower_n@plt+0x12258>
  4166a8:	ldr	x8, [sp, #16]
  4166ac:	ldr	w9, [x8]
  4166b0:	subs	w9, w9, #0x1
  4166b4:	str	w9, [x8]
  4166b8:	mov	x8, xzr
  4166bc:	stur	x8, [x29, #-8]
  4166c0:	ldur	x0, [x29, #-8]
  4166c4:	ldp	x29, x30, [sp, #32]
  4166c8:	add	sp, sp, #0x30
  4166cc:	ret
  4166d0:	sub	sp, sp, #0x30
  4166d4:	stp	x29, x30, [sp, #32]
  4166d8:	add	x29, sp, #0x20
  4166dc:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  4166e0:	add	x8, x8, #0xb94
  4166e4:	add	x2, x8, #0x3
  4166e8:	stur	x0, [x29, #-8]
  4166ec:	str	x2, [sp, #8]
  4166f0:	ldur	x8, [x29, #-8]
  4166f4:	cmp	x8, #0x0
  4166f8:	cset	w9, ne  // ne = any
  4166fc:	mov	w10, #0x1                   	// #1
  416700:	eor	w9, w9, #0x1
  416704:	eor	w9, w9, w10
  416708:	eor	w9, w9, w10
  41670c:	and	w9, w9, #0x1
  416710:	mov	w0, w9
  416714:	sxtw	x8, w0
  416718:	cbz	x8, 416740 <ascii_strlower_n@plt+0x122e0>
  41671c:	mov	w8, wzr
  416720:	mov	w0, w8
  416724:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  416728:	add	x1, x1, #0xc51
  41672c:	ldr	x2, [sp, #8]
  416730:	mov	w3, #0xae                  	// #174
  416734:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  416738:	add	x4, x4, #0x5c6
  41673c:	bl	4039d0 <log_assert_failed_realm@plt>
  416740:	ldur	x8, [x29, #-8]
  416744:	ldr	x0, [x8, #72]
  416748:	bl	429310 <ascii_strlower_n@plt+0x24eb0>
  41674c:	ldur	x8, [x29, #-8]
  416750:	ldr	x8, [x8, #80]
  416754:	mov	x0, x8
  416758:	bl	425614 <ascii_strlower_n@plt+0x211b4>
  41675c:	ldur	x8, [x29, #-8]
  416760:	ldr	x8, [x8, #88]
  416764:	mov	x0, x8
  416768:	bl	41fed8 <ascii_strlower_n@plt+0x1ba78>
  41676c:	ldur	x8, [x29, #-8]
  416770:	ldr	x0, [x8, #48]
  416774:	bl	41d9b8 <ascii_strlower_n@plt+0x19558>
  416778:	str	x0, [sp, #16]
  41677c:	cbz	x0, 41678c <ascii_strlower_n@plt+0x1232c>
  416780:	ldr	x0, [sp, #16]
  416784:	bl	403ac0 <free@plt>
  416788:	b	41676c <ascii_strlower_n@plt+0x1230c>
  41678c:	ldur	x8, [x29, #-8]
  416790:	ldr	x0, [x8, #48]
  416794:	bl	41d9e4 <ascii_strlower_n@plt+0x19584>
  416798:	ldur	x8, [x29, #-8]
  41679c:	ldr	x8, [x8, #40]
  4167a0:	mov	x0, x8
  4167a4:	bl	403ac0 <free@plt>
  4167a8:	ldur	x8, [x29, #-8]
  4167ac:	ldrb	w9, [x8, #160]
  4167b0:	and	w9, w9, #0x1
  4167b4:	tbnz	w9, #0, 4167c0 <ascii_strlower_n@plt+0x12360>
  4167b8:	ldur	x0, [x29, #-8]
  4167bc:	bl	403ac0 <free@plt>
  4167c0:	ldp	x29, x30, [sp, #32]
  4167c4:	add	sp, sp, #0x30
  4167c8:	ret
  4167cc:	sub	sp, sp, #0x30
  4167d0:	stp	x29, x30, [sp, #32]
  4167d4:	add	x29, sp, #0x20
  4167d8:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  4167dc:	add	x8, x8, #0xb94
  4167e0:	add	x2, x8, #0x3
  4167e4:	str	x0, [sp, #16]
  4167e8:	str	x2, [sp, #8]
  4167ec:	ldr	x8, [sp, #16]
  4167f0:	cmp	x8, #0x0
  4167f4:	cset	w9, ne  // ne = any
  4167f8:	mov	w10, #0x1                   	// #1
  4167fc:	eor	w9, w9, #0x1
  416800:	eor	w9, w9, w10
  416804:	eor	w9, w9, w10
  416808:	and	w9, w9, #0x1
  41680c:	mov	w0, w9
  416810:	sxtw	x8, w0
  416814:	cbz	x8, 41683c <ascii_strlower_n@plt+0x123dc>
  416818:	mov	w8, wzr
  41681c:	mov	w0, w8
  416820:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  416824:	add	x1, x1, #0xc51
  416828:	ldr	x2, [sp, #8]
  41682c:	mov	w3, #0xcf                  	// #207
  416830:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  416834:	add	x4, x4, #0xd40
  416838:	bl	4039d0 <log_assert_failed_realm@plt>
  41683c:	ldr	x8, [sp, #16]
  416840:	ldr	x8, [x8, #8]
  416844:	cmp	x8, #0xc
  416848:	b.cs	416858 <ascii_strlower_n@plt+0x123f8>  // b.hs, b.nlast
  41684c:	mov	w8, #0xffffffb6            	// #-74
  416850:	stur	w8, [x29, #-4]
  416854:	b	416880 <ascii_strlower_n@plt+0x12420>
  416858:	ldr	x8, [sp, #16]
  41685c:	ldr	x8, [x8, #8]
  416860:	mov	x9, #0xffff                	// #65535
  416864:	cmp	x8, x9
  416868:	b.ls	416878 <ascii_strlower_n@plt+0x12418>  // b.plast
  41686c:	mov	w8, #0xffffffb6            	// #-74
  416870:	stur	w8, [x29, #-4]
  416874:	b	416880 <ascii_strlower_n@plt+0x12420>
  416878:	mov	w8, #0x1                   	// #1
  41687c:	stur	w8, [x29, #-4]
  416880:	ldur	w0, [x29, #-4]
  416884:	ldp	x29, x30, [sp, #32]
  416888:	add	sp, sp, #0x30
  41688c:	ret
  416890:	sub	sp, sp, #0x40
  416894:	stp	x29, x30, [sp, #48]
  416898:	add	x29, sp, #0x30
  41689c:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  4168a0:	add	x8, x8, #0xb94
  4168a4:	add	x2, x8, #0x3
  4168a8:	stur	x0, [x29, #-16]
  4168ac:	str	x2, [sp, #16]
  4168b0:	ldur	x8, [x29, #-16]
  4168b4:	cmp	x8, #0x0
  4168b8:	cset	w9, ne  // ne = any
  4168bc:	mov	w10, #0x1                   	// #1
  4168c0:	eor	w9, w9, #0x1
  4168c4:	eor	w9, w9, w10
  4168c8:	eor	w9, w9, w10
  4168cc:	and	w9, w9, #0x1
  4168d0:	mov	w0, w9
  4168d4:	sxtw	x8, w0
  4168d8:	cbz	x8, 416900 <ascii_strlower_n@plt+0x124a0>
  4168dc:	mov	w8, wzr
  4168e0:	mov	w0, w8
  4168e4:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  4168e8:	add	x1, x1, #0xc51
  4168ec:	ldr	x2, [sp, #16]
  4168f0:	mov	w3, #0xdd                  	// #221
  4168f4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  4168f8:	add	x4, x4, #0xd65
  4168fc:	bl	4039d0 <log_assert_failed_realm@plt>
  416900:	ldur	x0, [x29, #-16]
  416904:	bl	4167cc <ascii_strlower_n@plt+0x1236c>
  416908:	stur	w0, [x29, #-20]
  41690c:	ldur	w8, [x29, #-20]
  416910:	cmp	w8, #0x0
  416914:	cset	w8, ge  // ge = tcont
  416918:	tbnz	w8, #0, 416928 <ascii_strlower_n@plt+0x124c8>
  41691c:	ldur	w8, [x29, #-20]
  416920:	stur	w8, [x29, #-4]
  416924:	b	416a04 <ascii_strlower_n@plt+0x125a4>
  416928:	ldur	x0, [x29, #-16]
  41692c:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  416930:	ldrh	w0, [x0, #2]
  416934:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  416938:	and	w8, w0, #0xffff
  41693c:	asr	w8, w8, #15
  416940:	and	w8, w8, #0x1
  416944:	cmp	w8, #0x1
  416948:	b.eq	416954 <ascii_strlower_n@plt+0x124f4>  // b.none
  41694c:	stur	wzr, [x29, #-4]
  416950:	b	416a04 <ascii_strlower_n@plt+0x125a4>
  416954:	ldur	x0, [x29, #-16]
  416958:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  41695c:	ldrh	w0, [x0, #2]
  416960:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  416964:	and	w8, w0, #0xffff
  416968:	asr	w8, w8, #11
  41696c:	and	w8, w8, #0xf
  416970:	cbz	w8, 416980 <ascii_strlower_n@plt+0x12520>
  416974:	mov	w8, #0xffffffb6            	// #-74
  416978:	stur	w8, [x29, #-4]
  41697c:	b	416a04 <ascii_strlower_n@plt+0x125a4>
  416980:	ldur	x8, [x29, #-16]
  416984:	ldr	w9, [x8, #4]
  416988:	cmp	w9, #0x1
  41698c:	str	w9, [sp, #12]
  416990:	b.eq	4169dc <ascii_strlower_n@plt+0x1257c>  // b.none
  416994:	b	416998 <ascii_strlower_n@plt+0x12538>
  416998:	ldr	w8, [sp, #12]
  41699c:	cmp	w8, #0x2
  4169a0:	cset	w9, eq  // eq = none
  4169a4:	eor	w9, w9, #0x1
  4169a8:	tbnz	w9, #0, 4169fc <ascii_strlower_n@plt+0x1259c>
  4169ac:	b	4169b0 <ascii_strlower_n@plt+0x12550>
  4169b0:	ldur	x0, [x29, #-16]
  4169b4:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  4169b8:	ldrh	w0, [x0, #4]
  4169bc:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  4169c0:	and	w8, w0, #0xffff
  4169c4:	cmp	w8, #0x1
  4169c8:	b.eq	4169d8 <ascii_strlower_n@plt+0x12578>  // b.none
  4169cc:	mov	w8, #0xffffffb6            	// #-74
  4169d0:	stur	w8, [x29, #-4]
  4169d4:	b	416a04 <ascii_strlower_n@plt+0x125a4>
  4169d8:	b	4169fc <ascii_strlower_n@plt+0x1259c>
  4169dc:	ldur	x0, [x29, #-16]
  4169e0:	bl	416a38 <ascii_strlower_n@plt+0x125d8>
  4169e4:	and	w8, w0, #0xffff
  4169e8:	cbz	w8, 4169f8 <ascii_strlower_n@plt+0x12598>
  4169ec:	mov	w8, #0xffffffb6            	// #-74
  4169f0:	stur	w8, [x29, #-4]
  4169f4:	b	416a04 <ascii_strlower_n@plt+0x125a4>
  4169f8:	b	4169fc <ascii_strlower_n@plt+0x1259c>
  4169fc:	mov	w8, #0x1                   	// #1
  416a00:	stur	w8, [x29, #-4]
  416a04:	ldur	w0, [x29, #-4]
  416a08:	ldp	x29, x30, [sp, #48]
  416a0c:	add	sp, sp, #0x40
  416a10:	ret
  416a14:	sub	sp, sp, #0x20
  416a18:	stp	x29, x30, [sp, #16]
  416a1c:	add	x29, sp, #0x10
  416a20:	sturh	w0, [x29, #-2]
  416a24:	ldurh	w0, [x29, #-2]
  416a28:	bl	41d98c <ascii_strlower_n@plt+0x1952c>
  416a2c:	ldp	x29, x30, [sp, #16]
  416a30:	add	sp, sp, #0x20
  416a34:	ret
  416a38:	sub	sp, sp, #0x20
  416a3c:	stp	x29, x30, [sp, #16]
  416a40:	add	x29, sp, #0x10
  416a44:	str	x0, [sp, #8]
  416a48:	ldr	x8, [sp, #8]
  416a4c:	ldr	x8, [x8, #88]
  416a50:	cbz	x8, 416a70 <ascii_strlower_n@plt+0x12610>
  416a54:	ldr	x8, [sp, #8]
  416a58:	ldr	x8, [x8, #88]
  416a5c:	mov	x9, #0x18                  	// #24
  416a60:	ldr	w10, [x8, #24]
  416a64:	lsr	w9, w10, w9
  416a68:	strh	w9, [sp, #6]
  416a6c:	b	416a78 <ascii_strlower_n@plt+0x12618>
  416a70:	mov	w8, #0x0                   	// #0
  416a74:	strh	w8, [sp, #6]
  416a78:	ldrh	w8, [sp, #6]
  416a7c:	ldr	x0, [sp, #8]
  416a80:	str	w8, [sp]
  416a84:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  416a88:	ldrh	w0, [x0, #2]
  416a8c:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  416a90:	and	w8, w0, #0xffff
  416a94:	and	w8, w8, #0xf
  416a98:	ldr	w9, [sp]
  416a9c:	orr	w8, w9, w8
  416aa0:	mov	w0, w8
  416aa4:	ldp	x29, x30, [sp, #16]
  416aa8:	add	sp, sp, #0x20
  416aac:	ret
  416ab0:	sub	sp, sp, #0x40
  416ab4:	stp	x29, x30, [sp, #48]
  416ab8:	add	x29, sp, #0x30
  416abc:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  416ac0:	add	x8, x8, #0xb94
  416ac4:	add	x2, x8, #0x3
  416ac8:	stur	x0, [x29, #-16]
  416acc:	str	x2, [sp, #16]
  416ad0:	ldur	x8, [x29, #-16]
  416ad4:	cmp	x8, #0x0
  416ad8:	cset	w9, ne  // ne = any
  416adc:	mov	w10, #0x1                   	// #1
  416ae0:	eor	w9, w9, #0x1
  416ae4:	eor	w9, w9, w10
  416ae8:	eor	w9, w9, w10
  416aec:	and	w9, w9, #0x1
  416af0:	mov	w0, w9
  416af4:	sxtw	x8, w0
  416af8:	cbz	x8, 416b20 <ascii_strlower_n@plt+0x126c0>
  416afc:	mov	w8, wzr
  416b00:	mov	w0, w8
  416b04:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  416b08:	add	x1, x1, #0xc51
  416b0c:	ldr	x2, [sp, #16]
  416b10:	mov	w3, #0x103                 	// #259
  416b14:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  416b18:	add	x4, x4, #0xd90
  416b1c:	bl	4039d0 <log_assert_failed_realm@plt>
  416b20:	ldur	x0, [x29, #-16]
  416b24:	bl	4167cc <ascii_strlower_n@plt+0x1236c>
  416b28:	stur	w0, [x29, #-20]
  416b2c:	ldur	w8, [x29, #-20]
  416b30:	cmp	w8, #0x0
  416b34:	cset	w8, ge  // ge = tcont
  416b38:	tbnz	w8, #0, 416b48 <ascii_strlower_n@plt+0x126e8>
  416b3c:	ldur	w8, [x29, #-20]
  416b40:	stur	w8, [x29, #-4]
  416b44:	b	416d48 <ascii_strlower_n@plt+0x128e8>
  416b48:	ldur	x0, [x29, #-16]
  416b4c:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  416b50:	ldrh	w0, [x0, #2]
  416b54:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  416b58:	and	w8, w0, #0xffff
  416b5c:	asr	w8, w8, #15
  416b60:	and	w8, w8, #0x1
  416b64:	cbz	w8, 416b70 <ascii_strlower_n@plt+0x12710>
  416b68:	stur	wzr, [x29, #-4]
  416b6c:	b	416d48 <ascii_strlower_n@plt+0x128e8>
  416b70:	ldur	x0, [x29, #-16]
  416b74:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  416b78:	ldrh	w0, [x0, #2]
  416b7c:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  416b80:	and	w8, w0, #0xffff
  416b84:	asr	w8, w8, #11
  416b88:	and	w8, w8, #0xf
  416b8c:	cbz	w8, 416b9c <ascii_strlower_n@plt+0x1273c>
  416b90:	mov	w8, #0xffffffb6            	// #-74
  416b94:	stur	w8, [x29, #-4]
  416b98:	b	416d48 <ascii_strlower_n@plt+0x128e8>
  416b9c:	ldur	x0, [x29, #-16]
  416ba0:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  416ba4:	ldrh	w0, [x0, #2]
  416ba8:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  416bac:	and	w8, w0, #0xffff
  416bb0:	asr	w8, w8, #9
  416bb4:	and	w8, w8, #0x1
  416bb8:	cbz	w8, 416bc8 <ascii_strlower_n@plt+0x12768>
  416bbc:	mov	w8, #0xffffffb6            	// #-74
  416bc0:	stur	w8, [x29, #-4]
  416bc4:	b	416d48 <ascii_strlower_n@plt+0x128e8>
  416bc8:	ldur	x8, [x29, #-16]
  416bcc:	ldr	w9, [x8, #4]
  416bd0:	str	w9, [sp, #12]
  416bd4:	cbz	w9, 416c04 <ascii_strlower_n@plt+0x127a4>
  416bd8:	b	416bdc <ascii_strlower_n@plt+0x1277c>
  416bdc:	ldr	w8, [sp, #12]
  416be0:	cmp	w8, #0x1
  416be4:	b.eq	416c80 <ascii_strlower_n@plt+0x12820>  // b.none
  416be8:	b	416bec <ascii_strlower_n@plt+0x1278c>
  416bec:	ldr	w8, [sp, #12]
  416bf0:	cmp	w8, #0x2
  416bf4:	cset	w9, eq  // eq = none
  416bf8:	eor	w9, w9, #0x1
  416bfc:	tbnz	w9, #0, 416d40 <ascii_strlower_n@plt+0x128e0>
  416c00:	b	416c04 <ascii_strlower_n@plt+0x127a4>
  416c04:	ldur	x0, [x29, #-16]
  416c08:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  416c0c:	ldrh	w0, [x0, #4]
  416c10:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  416c14:	and	w8, w0, #0xffff
  416c18:	cmp	w8, #0x1
  416c1c:	b.eq	416c2c <ascii_strlower_n@plt+0x127cc>  // b.none
  416c20:	mov	w8, #0xffffffb6            	// #-74
  416c24:	stur	w8, [x29, #-4]
  416c28:	b	416d48 <ascii_strlower_n@plt+0x128e8>
  416c2c:	ldur	x0, [x29, #-16]
  416c30:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  416c34:	ldrh	w0, [x0, #6]
  416c38:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  416c3c:	tst	w0, #0xffff
  416c40:	cset	w8, le
  416c44:	tbnz	w8, #0, 416c54 <ascii_strlower_n@plt+0x127f4>
  416c48:	mov	w8, #0xffffffb6            	// #-74
  416c4c:	stur	w8, [x29, #-4]
  416c50:	b	416d48 <ascii_strlower_n@plt+0x128e8>
  416c54:	ldur	x0, [x29, #-16]
  416c58:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  416c5c:	ldrh	w0, [x0, #8]
  416c60:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  416c64:	tst	w0, #0xffff
  416c68:	cset	w8, le
  416c6c:	tbnz	w8, #0, 416c7c <ascii_strlower_n@plt+0x1281c>
  416c70:	mov	w8, #0xffffffb6            	// #-74
  416c74:	stur	w8, [x29, #-4]
  416c78:	b	416d48 <ascii_strlower_n@plt+0x128e8>
  416c7c:	b	416d40 <ascii_strlower_n@plt+0x128e0>
  416c80:	ldur	x0, [x29, #-16]
  416c84:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  416c88:	ldrh	w0, [x0, #2]
  416c8c:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  416c90:	and	w8, w0, #0xffff
  416c94:	asr	w8, w8, #10
  416c98:	and	w8, w8, #0x1
  416c9c:	cbnz	w8, 416d30 <ascii_strlower_n@plt+0x128d0>
  416ca0:	ldur	x0, [x29, #-16]
  416ca4:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  416ca8:	ldrh	w0, [x0, #2]
  416cac:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  416cb0:	and	w8, w0, #0xffff
  416cb4:	asr	w8, w8, #8
  416cb8:	and	w8, w8, #0x1
  416cbc:	cbnz	w8, 416d30 <ascii_strlower_n@plt+0x128d0>
  416cc0:	ldur	x0, [x29, #-16]
  416cc4:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  416cc8:	ldrh	w0, [x0, #2]
  416ccc:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  416cd0:	and	w8, w0, #0xffff
  416cd4:	asr	w8, w8, #7
  416cd8:	and	w8, w8, #0x1
  416cdc:	cbnz	w8, 416d30 <ascii_strlower_n@plt+0x128d0>
  416ce0:	ldur	x0, [x29, #-16]
  416ce4:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  416ce8:	ldrh	w0, [x0, #2]
  416cec:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  416cf0:	and	w8, w0, #0xffff
  416cf4:	asr	w8, w8, #5
  416cf8:	and	w8, w8, #0x1
  416cfc:	cbnz	w8, 416d30 <ascii_strlower_n@plt+0x128d0>
  416d00:	ldur	x0, [x29, #-16]
  416d04:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  416d08:	ldrh	w0, [x0, #2]
  416d0c:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  416d10:	and	w8, w0, #0xffff
  416d14:	asr	w8, w8, #4
  416d18:	and	w8, w8, #0x1
  416d1c:	cbnz	w8, 416d30 <ascii_strlower_n@plt+0x128d0>
  416d20:	ldur	x0, [x29, #-16]
  416d24:	bl	416a38 <ascii_strlower_n@plt+0x125d8>
  416d28:	and	w8, w0, #0xffff
  416d2c:	cbz	w8, 416d3c <ascii_strlower_n@plt+0x128dc>
  416d30:	mov	w8, #0xffffffb6            	// #-74
  416d34:	stur	w8, [x29, #-4]
  416d38:	b	416d48 <ascii_strlower_n@plt+0x128e8>
  416d3c:	b	416d40 <ascii_strlower_n@plt+0x128e0>
  416d40:	mov	w8, #0x1                   	// #1
  416d44:	stur	w8, [x29, #-4]
  416d48:	ldur	w0, [x29, #-4]
  416d4c:	ldp	x29, x30, [sp, #48]
  416d50:	add	sp, sp, #0x40
  416d54:	ret
  416d58:	sub	sp, sp, #0x60
  416d5c:	stp	x29, x30, [sp, #80]
  416d60:	add	x29, sp, #0x50
  416d64:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  416d68:	add	x8, x8, #0xb94
  416d6c:	add	x2, x8, #0x3
  416d70:	stur	x0, [x29, #-8]
  416d74:	stur	x1, [x29, #-16]
  416d78:	str	x2, [sp, #8]
  416d7c:	ldur	x8, [x29, #-8]
  416d80:	cmp	x8, #0x0
  416d84:	cset	w9, ne  // ne = any
  416d88:	mov	w10, #0x1                   	// #1
  416d8c:	eor	w9, w9, #0x1
  416d90:	eor	w9, w9, w10
  416d94:	eor	w9, w9, w10
  416d98:	and	w9, w9, #0x1
  416d9c:	mov	w0, w9
  416da0:	sxtw	x8, w0
  416da4:	cbz	x8, 416dcc <ascii_strlower_n@plt+0x1296c>
  416da8:	mov	w8, wzr
  416dac:	mov	w0, w8
  416db0:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  416db4:	add	x1, x1, #0xc51
  416db8:	ldr	x2, [sp, #8]
  416dbc:	mov	w3, #0x169                 	// #361
  416dc0:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  416dc4:	add	x4, x4, #0xdbb
  416dc8:	bl	4039d0 <log_assert_failed_realm@plt>
  416dcc:	ldur	x8, [x29, #-8]
  416dd0:	ldr	x8, [x8, #8]
  416dd4:	ldur	x9, [x29, #-16]
  416dd8:	cmp	x8, x9
  416ddc:	b.hi	416de4 <ascii_strlower_n@plt+0x12984>  // b.pmore
  416de0:	b	416e60 <ascii_strlower_n@plt+0x12a00>
  416de4:	add	x8, sp, #0x10
  416de8:	mov	w9, #0xfffffffe            	// #-2
  416dec:	str	w9, [sp, #16]
  416df0:	mov	x10, xzr
  416df4:	str	x10, [x8, #8]
  416df8:	ldr	q0, [sp, #16]
  416dfc:	stur	q0, [x29, #-32]
  416e00:	ldur	x8, [x29, #-8]
  416e04:	ldr	x0, [x8, #48]
  416e08:	sub	x1, x29, #0x20
  416e0c:	add	x2, sp, #0x20
  416e10:	add	x3, sp, #0x28
  416e14:	bl	416e6c <ascii_strlower_n@plt+0x12a0c>
  416e18:	tbnz	w0, #0, 416e20 <ascii_strlower_n@plt+0x129c0>
  416e1c:	b	416e54 <ascii_strlower_n@plt+0x129f4>
  416e20:	ldr	x8, [sp, #32]
  416e24:	ldur	x9, [x29, #-16]
  416e28:	cmp	x8, x9
  416e2c:	b.cs	416e34 <ascii_strlower_n@plt+0x129d4>  // b.hs, b.nlast
  416e30:	b	416e00 <ascii_strlower_n@plt+0x129a0>
  416e34:	ldur	x8, [x29, #-8]
  416e38:	ldr	x0, [x8, #48]
  416e3c:	ldr	x1, [sp, #40]
  416e40:	bl	416eac <ascii_strlower_n@plt+0x12a4c>
  416e44:	ldr	x8, [sp, #40]
  416e48:	mov	x0, x8
  416e4c:	bl	403ac0 <free@plt>
  416e50:	b	416e00 <ascii_strlower_n@plt+0x129a0>
  416e54:	ldur	x8, [x29, #-16]
  416e58:	ldur	x9, [x29, #-8]
  416e5c:	str	x8, [x9, #8]
  416e60:	ldp	x29, x30, [sp, #80]
  416e64:	add	sp, sp, #0x60
  416e68:	ret
  416e6c:	sub	sp, sp, #0x30
  416e70:	stp	x29, x30, [sp, #32]
  416e74:	add	x29, sp, #0x20
  416e78:	stur	x0, [x29, #-8]
  416e7c:	str	x1, [sp, #16]
  416e80:	str	x2, [sp, #8]
  416e84:	str	x3, [sp]
  416e88:	ldur	x0, [x29, #-8]
  416e8c:	ldr	x1, [sp, #16]
  416e90:	ldr	x2, [sp, #8]
  416e94:	ldr	x3, [sp]
  416e98:	bl	4040e0 <internal_hashmap_iterate@plt>
  416e9c:	and	w0, w0, #0x1
  416ea0:	ldp	x29, x30, [sp, #32]
  416ea4:	add	sp, sp, #0x30
  416ea8:	ret
  416eac:	sub	sp, sp, #0x20
  416eb0:	stp	x29, x30, [sp, #16]
  416eb4:	add	x29, sp, #0x10
  416eb8:	str	x0, [sp, #8]
  416ebc:	str	x1, [sp]
  416ec0:	ldr	x0, [sp, #8]
  416ec4:	ldr	x1, [sp]
  416ec8:	bl	4040f0 <internal_hashmap_remove@plt>
  416ecc:	ldp	x29, x30, [sp, #16]
  416ed0:	add	sp, sp, #0x20
  416ed4:	ret
  416ed8:	sub	sp, sp, #0x50
  416edc:	stp	x29, x30, [sp, #64]
  416ee0:	add	x29, sp, #0x40
  416ee4:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  416ee8:	add	x8, x8, #0xb94
  416eec:	add	x8, x8, #0x3
  416ef0:	stur	x0, [x29, #-16]
  416ef4:	stur	x1, [x29, #-24]
  416ef8:	str	x2, [sp, #32]
  416efc:	str	x3, [sp, #24]
  416f00:	str	x8, [sp]
  416f04:	ldur	x8, [x29, #-16]
  416f08:	cmp	x8, #0x0
  416f0c:	cset	w9, ne  // ne = any
  416f10:	mov	w10, #0x1                   	// #1
  416f14:	eor	w9, w9, #0x1
  416f18:	eor	w9, w9, w10
  416f1c:	eor	w9, w9, w10
  416f20:	and	w9, w9, #0x1
  416f24:	mov	w0, w9
  416f28:	sxtw	x8, w0
  416f2c:	cbz	x8, 416f54 <ascii_strlower_n@plt+0x12af4>
  416f30:	mov	w8, wzr
  416f34:	mov	w0, w8
  416f38:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  416f3c:	add	x1, x1, #0xc51
  416f40:	ldr	x2, [sp]
  416f44:	mov	w3, #0x17e                 	// #382
  416f48:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  416f4c:	add	x4, x4, #0xde9
  416f50:	bl	4039d0 <log_assert_failed_realm@plt>
  416f54:	ldur	x0, [x29, #-16]
  416f58:	ldr	x1, [sp, #32]
  416f5c:	ldr	x3, [sp, #24]
  416f60:	add	x2, sp, #0x10
  416f64:	bl	416fac <ascii_strlower_n@plt+0x12b4c>
  416f68:	str	w0, [sp, #12]
  416f6c:	ldr	w8, [sp, #12]
  416f70:	cmp	w8, #0x0
  416f74:	cset	w8, ge  // ge = tcont
  416f78:	tbnz	w8, #0, 416f88 <ascii_strlower_n@plt+0x12b28>
  416f7c:	ldr	w8, [sp, #12]
  416f80:	stur	w8, [x29, #-4]
  416f84:	b	416f9c <ascii_strlower_n@plt+0x12b3c>
  416f88:	ldr	x0, [sp, #16]
  416f8c:	ldur	x1, [x29, #-24]
  416f90:	ldr	x2, [sp, #32]
  416f94:	bl	41720c <ascii_strlower_n@plt+0x12dac>
  416f98:	stur	wzr, [x29, #-4]
  416f9c:	ldur	w0, [x29, #-4]
  416fa0:	ldp	x29, x30, [sp, #64]
  416fa4:	add	sp, sp, #0x50
  416fa8:	ret
  416fac:	sub	sp, sp, #0x70
  416fb0:	stp	x29, x30, [sp, #96]
  416fb4:	add	x29, sp, #0x60
  416fb8:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  416fbc:	add	x8, x8, #0xb94
  416fc0:	add	x8, x8, #0x3
  416fc4:	stur	x0, [x29, #-16]
  416fc8:	stur	x1, [x29, #-24]
  416fcc:	stur	x2, [x29, #-32]
  416fd0:	stur	x3, [x29, #-40]
  416fd4:	str	x8, [sp, #16]
  416fd8:	ldur	x8, [x29, #-16]
  416fdc:	cmp	x8, #0x0
  416fe0:	cset	w9, ne  // ne = any
  416fe4:	mov	w10, #0x1                   	// #1
  416fe8:	eor	w9, w9, #0x1
  416fec:	eor	w9, w9, w10
  416ff0:	eor	w9, w9, w10
  416ff4:	and	w9, w9, #0x1
  416ff8:	mov	w0, w9
  416ffc:	sxtw	x8, w0
  417000:	cbz	x8, 417028 <ascii_strlower_n@plt+0x12bc8>
  417004:	mov	w8, wzr
  417008:	mov	w0, w8
  41700c:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  417010:	add	x1, x1, #0xc51
  417014:	ldr	x2, [sp, #16]
  417018:	mov	w3, #0x138                 	// #312
  41701c:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  417020:	add	x4, x4, #0x5e8
  417024:	bl	4039d0 <log_assert_failed_realm@plt>
  417028:	ldur	x8, [x29, #-16]
  41702c:	ldr	x8, [x8, #8]
  417030:	ldur	x9, [x29, #-24]
  417034:	add	x8, x8, x9
  417038:	ldur	x9, [x29, #-16]
  41703c:	ldr	x9, [x9, #16]
  417040:	cmp	x8, x9
  417044:	b.ls	4171a8 <ascii_strlower_n@plt+0x12d48>  // b.plast
  417048:	ldur	x8, [x29, #-16]
  41704c:	ldr	x8, [x8, #8]
  417050:	ldur	x9, [x29, #-24]
  417054:	add	x8, x8, x9
  417058:	mov	x9, #0x2                   	// #2
  41705c:	mul	x0, x8, x9
  417060:	str	x0, [sp, #8]
  417064:	bl	4040c0 <page_size@plt>
  417068:	ldr	x8, [sp, #8]
  41706c:	str	x0, [sp]
  417070:	mov	x0, x8
  417074:	ldr	x1, [sp]
  417078:	bl	416160 <ascii_strlower_n@plt+0x11d00>
  41707c:	str	x0, [sp, #48]
  417080:	ldur	x0, [x29, #-16]
  417084:	bl	41da60 <ascii_strlower_n@plt+0x19600>
  417088:	str	x0, [sp, #40]
  41708c:	ldr	x8, [sp, #48]
  417090:	ldr	x9, [sp, #40]
  417094:	cmp	x8, x9
  417098:	b.ls	4170a4 <ascii_strlower_n@plt+0x12c44>  // b.plast
  41709c:	ldr	x8, [sp, #40]
  4170a0:	str	x8, [sp, #48]
  4170a4:	ldur	x8, [x29, #-16]
  4170a8:	ldr	x8, [x8, #8]
  4170ac:	ldur	x9, [x29, #-24]
  4170b0:	add	x8, x8, x9
  4170b4:	ldr	x9, [sp, #48]
  4170b8:	cmp	x8, x9
  4170bc:	b.ls	4170cc <ascii_strlower_n@plt+0x12c6c>  // b.plast
  4170c0:	mov	w8, #0xffffffa6            	// #-90
  4170c4:	stur	w8, [x29, #-4]
  4170c8:	b	4171fc <ascii_strlower_n@plt+0x12d9c>
  4170cc:	ldur	x8, [x29, #-16]
  4170d0:	ldr	x8, [x8, #40]
  4170d4:	cbz	x8, 417110 <ascii_strlower_n@plt+0x12cb0>
  4170d8:	ldur	x8, [x29, #-16]
  4170dc:	ldr	x0, [x8, #40]
  4170e0:	ldr	x1, [sp, #48]
  4170e4:	bl	404100 <realloc@plt>
  4170e8:	str	x0, [sp, #32]
  4170ec:	ldr	x8, [sp, #32]
  4170f0:	cbnz	x8, 417100 <ascii_strlower_n@plt+0x12ca0>
  4170f4:	mov	w8, #0xfffffff4            	// #-12
  4170f8:	stur	w8, [x29, #-4]
  4170fc:	b	4171fc <ascii_strlower_n@plt+0x12d9c>
  417100:	ldr	x8, [sp, #32]
  417104:	ldur	x9, [x29, #-16]
  417108:	str	x8, [x9, #40]
  41710c:	b	41719c <ascii_strlower_n@plt+0x12d3c>
  417110:	ldr	x0, [sp, #48]
  417114:	bl	404110 <malloc@plt>
  417118:	ldur	x8, [x29, #-16]
  41711c:	str	x0, [x8, #40]
  417120:	ldur	x8, [x29, #-16]
  417124:	ldr	x8, [x8, #40]
  417128:	cbnz	x8, 417138 <ascii_strlower_n@plt+0x12cd8>
  41712c:	mov	w8, #0xfffffff4            	// #-12
  417130:	stur	w8, [x29, #-4]
  417134:	b	4171fc <ascii_strlower_n@plt+0x12d9c>
  417138:	ldur	x8, [x29, #-16]
  41713c:	ldr	x0, [x8, #40]
  417140:	ldur	x8, [x29, #-16]
  417144:	add	x1, x8, #0xa8
  417148:	ldur	x8, [x29, #-16]
  41714c:	ldr	x2, [x8, #8]
  417150:	bl	403fa0 <memcpy@plt>
  417154:	ldr	x8, [sp, #48]
  417158:	ldur	x9, [x29, #-16]
  41715c:	ldr	x9, [x9, #8]
  417160:	subs	x8, x8, x9
  417164:	str	x8, [sp, #24]
  417168:	ldr	x8, [sp, #24]
  41716c:	cmp	x8, #0x0
  417170:	cset	w10, ls  // ls = plast
  417174:	tbnz	w10, #0, 41719c <ascii_strlower_n@plt+0x12d3c>
  417178:	ldur	x8, [x29, #-16]
  41717c:	ldr	x8, [x8, #40]
  417180:	ldur	x9, [x29, #-16]
  417184:	ldr	x9, [x9, #8]
  417188:	add	x0, x8, x9
  41718c:	ldr	x2, [sp, #24]
  417190:	mov	w10, wzr
  417194:	mov	w1, w10
  417198:	bl	403cb0 <memset@plt>
  41719c:	ldr	x8, [sp, #48]
  4171a0:	ldur	x9, [x29, #-16]
  4171a4:	str	x8, [x9, #16]
  4171a8:	ldur	x8, [x29, #-40]
  4171ac:	cbz	x8, 4171c0 <ascii_strlower_n@plt+0x12d60>
  4171b0:	ldur	x8, [x29, #-16]
  4171b4:	ldr	x8, [x8, #8]
  4171b8:	ldur	x9, [x29, #-40]
  4171bc:	str	x8, [x9]
  4171c0:	ldur	x8, [x29, #-32]
  4171c4:	cbz	x8, 4171e4 <ascii_strlower_n@plt+0x12d84>
  4171c8:	ldur	x0, [x29, #-16]
  4171cc:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  4171d0:	ldur	x8, [x29, #-16]
  4171d4:	ldr	x8, [x8, #8]
  4171d8:	add	x8, x0, x8
  4171dc:	ldur	x9, [x29, #-32]
  4171e0:	str	x8, [x9]
  4171e4:	ldur	x8, [x29, #-24]
  4171e8:	ldur	x9, [x29, #-16]
  4171ec:	ldr	x10, [x9, #8]
  4171f0:	add	x8, x10, x8
  4171f4:	str	x8, [x9, #8]
  4171f8:	stur	wzr, [x29, #-4]
  4171fc:	ldur	w0, [x29, #-4]
  417200:	ldp	x29, x30, [sp, #96]
  417204:	add	sp, sp, #0x70
  417208:	ret
  41720c:	sub	sp, sp, #0x30
  417210:	stp	x29, x30, [sp, #32]
  417214:	add	x29, sp, #0x20
  417218:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41721c:	add	x8, x8, #0x677
  417220:	add	x8, x8, #0x3
  417224:	stur	x0, [x29, #-8]
  417228:	str	x1, [sp, #16]
  41722c:	str	x2, [sp, #8]
  417230:	ldr	x9, [sp, #8]
  417234:	str	x8, [sp]
  417238:	cbnz	x9, 417240 <ascii_strlower_n@plt+0x12de0>
  41723c:	b	4172a0 <ascii_strlower_n@plt+0x12e40>
  417240:	ldr	x8, [sp, #16]
  417244:	cmp	x8, #0x0
  417248:	cset	w9, ne  // ne = any
  41724c:	mov	w10, #0x1                   	// #1
  417250:	eor	w9, w9, #0x1
  417254:	eor	w9, w9, w10
  417258:	eor	w9, w9, w10
  41725c:	and	w9, w9, #0x1
  417260:	mov	w0, w9
  417264:	sxtw	x8, w0
  417268:	cbz	x8, 417290 <ascii_strlower_n@plt+0x12e30>
  41726c:	mov	w8, wzr
  417270:	mov	w0, w8
  417274:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  417278:	add	x1, x1, #0x673
  41727c:	ldr	x2, [sp]
  417280:	mov	w3, #0x14                  	// #20
  417284:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  417288:	add	x4, x4, #0x692
  41728c:	bl	4039d0 <log_assert_failed_realm@plt>
  417290:	ldur	x0, [x29, #-8]
  417294:	ldr	x1, [sp, #16]
  417298:	ldr	x2, [sp, #8]
  41729c:	bl	403fa0 <memcpy@plt>
  4172a0:	ldp	x29, x30, [sp, #32]
  4172a4:	add	sp, sp, #0x30
  4172a8:	ret
  4172ac:	sub	sp, sp, #0x50
  4172b0:	stp	x29, x30, [sp, #64]
  4172b4:	add	x29, sp, #0x40
  4172b8:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  4172bc:	add	x8, x8, #0xb94
  4172c0:	add	x8, x8, #0x3
  4172c4:	stur	x0, [x29, #-16]
  4172c8:	sturb	w1, [x29, #-17]
  4172cc:	str	x2, [sp, #32]
  4172d0:	str	x8, [sp, #8]
  4172d4:	ldur	x8, [x29, #-16]
  4172d8:	cmp	x8, #0x0
  4172dc:	cset	w9, ne  // ne = any
  4172e0:	mov	w10, #0x1                   	// #1
  4172e4:	eor	w9, w9, #0x1
  4172e8:	eor	w9, w9, w10
  4172ec:	eor	w9, w9, w10
  4172f0:	and	w9, w9, #0x1
  4172f4:	mov	w0, w9
  4172f8:	sxtw	x8, w0
  4172fc:	cbz	x8, 417324 <ascii_strlower_n@plt+0x12ec4>
  417300:	mov	w8, wzr
  417304:	mov	w0, w8
  417308:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41730c:	add	x1, x1, #0xc51
  417310:	ldr	x2, [sp, #8]
  417314:	mov	w3, #0x18c                 	// #396
  417318:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  41731c:	add	x4, x4, #0xe31
  417320:	bl	4039d0 <log_assert_failed_realm@plt>
  417324:	ldur	x0, [x29, #-16]
  417328:	ldr	x3, [sp, #32]
  41732c:	mov	x1, #0x1                   	// #1
  417330:	add	x2, sp, #0x18
  417334:	bl	416fac <ascii_strlower_n@plt+0x12b4c>
  417338:	str	w0, [sp, #20]
  41733c:	ldr	w8, [sp, #20]
  417340:	cmp	w8, #0x0
  417344:	cset	w8, ge  // ge = tcont
  417348:	tbnz	w8, #0, 417358 <ascii_strlower_n@plt+0x12ef8>
  41734c:	ldr	w8, [sp, #20]
  417350:	stur	w8, [x29, #-4]
  417354:	b	417368 <ascii_strlower_n@plt+0x12f08>
  417358:	ldurb	w8, [x29, #-17]
  41735c:	ldr	x9, [sp, #24]
  417360:	strb	w8, [x9]
  417364:	stur	wzr, [x29, #-4]
  417368:	ldur	w0, [x29, #-4]
  41736c:	ldp	x29, x30, [sp, #64]
  417370:	add	sp, sp, #0x50
  417374:	ret
  417378:	sub	sp, sp, #0x50
  41737c:	stp	x29, x30, [sp, #64]
  417380:	add	x29, sp, #0x40
  417384:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  417388:	add	x8, x8, #0xb94
  41738c:	add	x8, x8, #0x3
  417390:	stur	x0, [x29, #-16]
  417394:	sturh	w1, [x29, #-18]
  417398:	str	x2, [sp, #32]
  41739c:	str	x8, [sp, #8]
  4173a0:	ldur	x8, [x29, #-16]
  4173a4:	cmp	x8, #0x0
  4173a8:	cset	w9, ne  // ne = any
  4173ac:	mov	w10, #0x1                   	// #1
  4173b0:	eor	w9, w9, #0x1
  4173b4:	eor	w9, w9, w10
  4173b8:	eor	w9, w9, w10
  4173bc:	and	w9, w9, #0x1
  4173c0:	mov	w0, w9
  4173c4:	sxtw	x8, w0
  4173c8:	cbz	x8, 4173f0 <ascii_strlower_n@plt+0x12f90>
  4173cc:	mov	w8, wzr
  4173d0:	mov	w0, w8
  4173d4:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  4173d8:	add	x1, x1, #0xc51
  4173dc:	ldr	x2, [sp, #8]
  4173e0:	mov	w3, #0x19b                 	// #411
  4173e4:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  4173e8:	add	x4, x4, #0xe6d
  4173ec:	bl	4039d0 <log_assert_failed_realm@plt>
  4173f0:	ldur	x0, [x29, #-16]
  4173f4:	ldr	x3, [sp, #32]
  4173f8:	mov	x1, #0x2                   	// #2
  4173fc:	add	x2, sp, #0x18
  417400:	bl	416fac <ascii_strlower_n@plt+0x12b4c>
  417404:	str	w0, [sp, #20]
  417408:	ldr	w8, [sp, #20]
  41740c:	cmp	w8, #0x0
  417410:	cset	w8, ge  // ge = tcont
  417414:	tbnz	w8, #0, 417424 <ascii_strlower_n@plt+0x12fc4>
  417418:	ldr	w8, [sp, #20]
  41741c:	stur	w8, [x29, #-4]
  417420:	b	417434 <ascii_strlower_n@plt+0x12fd4>
  417424:	ldr	x0, [sp, #24]
  417428:	ldurh	w1, [x29, #-18]
  41742c:	bl	417444 <ascii_strlower_n@plt+0x12fe4>
  417430:	stur	wzr, [x29, #-4]
  417434:	ldur	w0, [x29, #-4]
  417438:	ldp	x29, x30, [sp, #64]
  41743c:	add	sp, sp, #0x50
  417440:	ret
  417444:	sub	sp, sp, #0x30
  417448:	stp	x29, x30, [sp, #32]
  41744c:	add	x29, sp, #0x20
  417450:	stur	x0, [x29, #-8]
  417454:	sturh	w1, [x29, #-10]
  417458:	ldur	x8, [x29, #-8]
  41745c:	str	x8, [sp, #8]
  417460:	ldurh	w0, [x29, #-10]
  417464:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  417468:	ldr	x8, [sp, #8]
  41746c:	strh	w0, [x8]
  417470:	ldp	x29, x30, [sp, #32]
  417474:	add	sp, sp, #0x30
  417478:	ret
  41747c:	sub	sp, sp, #0x50
  417480:	stp	x29, x30, [sp, #64]
  417484:	add	x29, sp, #0x40
  417488:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  41748c:	add	x8, x8, #0xb94
  417490:	add	x8, x8, #0x3
  417494:	stur	x0, [x29, #-16]
  417498:	stur	w1, [x29, #-20]
  41749c:	str	x2, [sp, #32]
  4174a0:	str	x8, [sp, #8]
  4174a4:	ldur	x8, [x29, #-16]
  4174a8:	cmp	x8, #0x0
  4174ac:	cset	w9, ne  // ne = any
  4174b0:	mov	w10, #0x1                   	// #1
  4174b4:	eor	w9, w9, #0x1
  4174b8:	eor	w9, w9, w10
  4174bc:	eor	w9, w9, w10
  4174c0:	and	w9, w9, #0x1
  4174c4:	mov	w0, w9
  4174c8:	sxtw	x8, w0
  4174cc:	cbz	x8, 4174f4 <ascii_strlower_n@plt+0x13094>
  4174d0:	mov	w8, wzr
  4174d4:	mov	w0, w8
  4174d8:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  4174dc:	add	x1, x1, #0xc51
  4174e0:	ldr	x2, [sp, #8]
  4174e4:	mov	w3, #0x1aa                 	// #426
  4174e8:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  4174ec:	add	x4, x4, #0xeab
  4174f0:	bl	4039d0 <log_assert_failed_realm@plt>
  4174f4:	ldur	x0, [x29, #-16]
  4174f8:	ldr	x3, [sp, #32]
  4174fc:	mov	x1, #0x4                   	// #4
  417500:	add	x2, sp, #0x18
  417504:	bl	416fac <ascii_strlower_n@plt+0x12b4c>
  417508:	str	w0, [sp, #20]
  41750c:	ldr	w8, [sp, #20]
  417510:	cmp	w8, #0x0
  417514:	cset	w8, ge  // ge = tcont
  417518:	tbnz	w8, #0, 417528 <ascii_strlower_n@plt+0x130c8>
  41751c:	ldr	w8, [sp, #20]
  417520:	stur	w8, [x29, #-4]
  417524:	b	417538 <ascii_strlower_n@plt+0x130d8>
  417528:	ldr	x0, [sp, #24]
  41752c:	ldur	w1, [x29, #-20]
  417530:	bl	417548 <ascii_strlower_n@plt+0x130e8>
  417534:	stur	wzr, [x29, #-4]
  417538:	ldur	w0, [x29, #-4]
  41753c:	ldp	x29, x30, [sp, #64]
  417540:	add	sp, sp, #0x50
  417544:	ret
  417548:	sub	sp, sp, #0x30
  41754c:	stp	x29, x30, [sp, #32]
  417550:	add	x29, sp, #0x20
  417554:	stur	x0, [x29, #-8]
  417558:	stur	w1, [x29, #-12]
  41755c:	ldur	x8, [x29, #-8]
  417560:	str	x8, [sp, #8]
  417564:	ldur	w0, [x29, #-12]
  417568:	bl	41db08 <ascii_strlower_n@plt+0x196a8>
  41756c:	ldr	x8, [sp, #8]
  417570:	str	w0, [x8]
  417574:	ldp	x29, x30, [sp, #32]
  417578:	add	sp, sp, #0x30
  41757c:	ret
  417580:	sub	sp, sp, #0x50
  417584:	stp	x29, x30, [sp, #64]
  417588:	add	x29, sp, #0x40
  41758c:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  417590:	add	x8, x8, #0xb94
  417594:	add	x8, x8, #0x3
  417598:	stur	x0, [x29, #-8]
  41759c:	stur	x1, [x29, #-16]
  4175a0:	stur	x2, [x29, #-24]
  4175a4:	str	x8, [sp, #32]
  4175a8:	ldur	x8, [x29, #-8]
  4175ac:	cmp	x8, #0x0
  4175b0:	cset	w9, ne  // ne = any
  4175b4:	mov	w10, #0x1                   	// #1
  4175b8:	eor	w9, w9, #0x1
  4175bc:	eor	w9, w9, w10
  4175c0:	eor	w9, w9, w10
  4175c4:	and	w9, w9, #0x1
  4175c8:	mov	w0, w9
  4175cc:	sxtw	x8, w0
  4175d0:	cbz	x8, 4175f8 <ascii_strlower_n@plt+0x13198>
  4175d4:	mov	w8, wzr
  4175d8:	mov	w0, w8
  4175dc:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  4175e0:	add	x1, x1, #0xc51
  4175e4:	ldr	x2, [sp, #32]
  4175e8:	mov	w3, #0x1b6                 	// #438
  4175ec:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  4175f0:	add	x4, x4, #0xee9
  4175f4:	bl	4039d0 <log_assert_failed_realm@plt>
  4175f8:	ldur	x8, [x29, #-16]
  4175fc:	cmp	x8, #0x0
  417600:	cset	w9, ne  // ne = any
  417604:	mov	w10, #0x1                   	// #1
  417608:	eor	w9, w9, #0x1
  41760c:	eor	w9, w9, w10
  417610:	eor	w9, w9, w10
  417614:	and	w9, w9, #0x1
  417618:	mov	w0, w9
  41761c:	sxtw	x8, w0
  417620:	cbz	x8, 417648 <ascii_strlower_n@plt+0x131e8>
  417624:	mov	w8, wzr
  417628:	mov	w0, w8
  41762c:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  417630:	add	x1, x1, #0x6f2
  417634:	ldr	x2, [sp, #32]
  417638:	mov	w3, #0x1b7                 	// #439
  41763c:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  417640:	add	x4, x4, #0xee9
  417644:	bl	4039d0 <log_assert_failed_realm@plt>
  417648:	ldur	x0, [x29, #-8]
  41764c:	ldur	x1, [x29, #-16]
  417650:	ldur	x8, [x29, #-16]
  417654:	str	x0, [sp, #24]
  417658:	mov	x0, x8
  41765c:	str	x1, [sp, #16]
  417660:	bl	403f70 <strlen@plt>
  417664:	ldur	x3, [x29, #-24]
  417668:	ldr	x8, [sp, #24]
  41766c:	str	x0, [sp, #8]
  417670:	mov	x0, x8
  417674:	ldr	x1, [sp, #16]
  417678:	ldr	x2, [sp, #8]
  41767c:	bl	41768c <ascii_strlower_n@plt+0x1322c>
  417680:	ldp	x29, x30, [sp, #64]
  417684:	add	sp, sp, #0x50
  417688:	ret
  41768c:	sub	sp, sp, #0x60
  417690:	stp	x29, x30, [sp, #80]
  417694:	add	x29, sp, #0x50
  417698:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  41769c:	add	x8, x8, #0xb94
  4176a0:	add	x8, x8, #0x3
  4176a4:	stur	x0, [x29, #-16]
  4176a8:	stur	x1, [x29, #-24]
  4176ac:	stur	x2, [x29, #-32]
  4176b0:	str	x3, [sp, #40]
  4176b4:	str	x8, [sp, #16]
  4176b8:	ldur	x8, [x29, #-16]
  4176bc:	cmp	x8, #0x0
  4176c0:	cset	w9, ne  // ne = any
  4176c4:	mov	w10, #0x1                   	// #1
  4176c8:	eor	w9, w9, #0x1
  4176cc:	eor	w9, w9, w10
  4176d0:	eor	w9, w9, w10
  4176d4:	and	w9, w9, #0x1
  4176d8:	mov	w0, w9
  4176dc:	sxtw	x8, w0
  4176e0:	cbz	x8, 417708 <ascii_strlower_n@plt+0x132a8>
  4176e4:	mov	w8, wzr
  4176e8:	mov	w0, w8
  4176ec:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  4176f0:	add	x1, x1, #0xc51
  4176f4:	ldr	x2, [sp, #16]
  4176f8:	mov	w3, #0x1c0                 	// #448
  4176fc:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  417700:	add	x4, x4, #0xf2b
  417704:	bl	4039d0 <log_assert_failed_realm@plt>
  417708:	ldur	x8, [x29, #-24]
  41770c:	mov	w9, #0x1                   	// #1
  417710:	str	w9, [sp, #12]
  417714:	cbnz	x8, 417728 <ascii_strlower_n@plt+0x132c8>
  417718:	ldur	x8, [x29, #-32]
  41771c:	cmp	x8, #0x0
  417720:	cset	w9, eq  // eq = none
  417724:	str	w9, [sp, #12]
  417728:	ldr	w8, [sp, #12]
  41772c:	mov	w9, #0x1                   	// #1
  417730:	eor	w8, w8, #0x1
  417734:	eor	w8, w8, w9
  417738:	eor	w8, w8, w9
  41773c:	and	w8, w8, #0x1
  417740:	mov	w0, w8
  417744:	sxtw	x10, w0
  417748:	cbz	x10, 417770 <ascii_strlower_n@plt+0x13310>
  41774c:	mov	w8, wzr
  417750:	mov	w0, w8
  417754:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  417758:	add	x1, x1, #0xf79
  41775c:	ldr	x2, [sp, #16]
  417760:	mov	w3, #0x1c1                 	// #449
  417764:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  417768:	add	x4, x4, #0xf2b
  41776c:	bl	4039d0 <log_assert_failed_realm@plt>
  417770:	ldur	x8, [x29, #-32]
  417774:	cmp	x8, #0xff
  417778:	b.ls	417788 <ascii_strlower_n@plt+0x13328>  // b.plast
  41777c:	mov	w8, #0xfffffff9            	// #-7
  417780:	stur	w8, [x29, #-4]
  417784:	b	4177e4 <ascii_strlower_n@plt+0x13384>
  417788:	ldur	x0, [x29, #-16]
  41778c:	ldur	x8, [x29, #-32]
  417790:	add	x1, x8, #0x1
  417794:	ldr	x3, [sp, #40]
  417798:	add	x2, sp, #0x20
  41779c:	bl	416fac <ascii_strlower_n@plt+0x12b4c>
  4177a0:	str	w0, [sp, #28]
  4177a4:	ldr	w9, [sp, #28]
  4177a8:	cmp	w9, #0x0
  4177ac:	cset	w9, ge  // ge = tcont
  4177b0:	tbnz	w9, #0, 4177c0 <ascii_strlower_n@plt+0x13360>
  4177b4:	ldr	w8, [sp, #28]
  4177b8:	stur	w8, [x29, #-4]
  4177bc:	b	4177e4 <ascii_strlower_n@plt+0x13384>
  4177c0:	ldur	x8, [x29, #-32]
  4177c4:	ldr	x9, [sp, #32]
  4177c8:	strb	w8, [x9]
  4177cc:	ldr	x9, [sp, #32]
  4177d0:	add	x0, x9, #0x1
  4177d4:	ldur	x1, [x29, #-24]
  4177d8:	ldur	x2, [x29, #-32]
  4177dc:	bl	41720c <ascii_strlower_n@plt+0x12dac>
  4177e0:	stur	wzr, [x29, #-4]
  4177e4:	ldur	w0, [x29, #-4]
  4177e8:	ldp	x29, x30, [sp, #80]
  4177ec:	add	sp, sp, #0x60
  4177f0:	ret
  4177f4:	sub	sp, sp, #0x60
  4177f8:	stp	x29, x30, [sp, #80]
  4177fc:	add	x29, sp, #0x50
  417800:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  417804:	add	x8, x8, #0xb94
  417808:	add	x8, x8, #0x3
  41780c:	stur	x0, [x29, #-16]
  417810:	stur	x1, [x29, #-24]
  417814:	stur	x2, [x29, #-32]
  417818:	and	w9, w3, #0x1
  41781c:	sturb	w9, [x29, #-33]
  417820:	str	x4, [sp, #32]
  417824:	str	x8, [sp]
  417828:	ldur	x8, [x29, #-16]
  41782c:	cmp	x8, #0x0
  417830:	cset	w9, ne  // ne = any
  417834:	mov	w10, #0x1                   	// #1
  417838:	eor	w9, w9, #0x1
  41783c:	eor	w9, w9, w10
  417840:	eor	w9, w9, w10
  417844:	and	w9, w9, #0x1
  417848:	mov	w0, w9
  41784c:	sxtw	x8, w0
  417850:	cbz	x8, 417878 <ascii_strlower_n@plt+0x13418>
  417854:	mov	w8, wzr
  417858:	mov	w0, w8
  41785c:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  417860:	add	x1, x1, #0xc51
  417864:	ldr	x2, [sp]
  417868:	mov	w3, #0x1da                 	// #474
  41786c:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  417870:	add	x4, x4, #0xf88
  417874:	bl	4039d0 <log_assert_failed_realm@plt>
  417878:	ldur	x8, [x29, #-24]
  41787c:	cmp	x8, #0x0
  417880:	cset	w9, ne  // ne = any
  417884:	mov	w10, #0x1                   	// #1
  417888:	eor	w9, w9, #0x1
  41788c:	eor	w9, w9, w10
  417890:	eor	w9, w9, w10
  417894:	and	w9, w9, #0x1
  417898:	mov	w0, w9
  41789c:	sxtw	x8, w0
  4178a0:	cbz	x8, 4178c8 <ascii_strlower_n@plt+0x13468>
  4178a4:	mov	w8, wzr
  4178a8:	mov	w0, w8
  4178ac:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  4178b0:	add	x1, x1, #0xfd8
  4178b4:	ldr	x2, [sp]
  4178b8:	mov	w3, #0x1db                 	// #475
  4178bc:	adrp	x4, 430000 <ascii_strlower_n@plt+0x2bba0>
  4178c0:	add	x4, x4, #0xf88
  4178c4:	bl	4039d0 <log_assert_failed_realm@plt>
  4178c8:	ldur	x8, [x29, #-32]
  4178cc:	cmp	x8, #0x3f
  4178d0:	b.ls	4178e0 <ascii_strlower_n@plt+0x13480>  // b.plast
  4178d4:	mov	w8, #0xfffffff9            	// #-7
  4178d8:	stur	w8, [x29, #-4]
  4178dc:	b	4179b0 <ascii_strlower_n@plt+0x13550>
  4178e0:	ldur	x0, [x29, #-16]
  4178e4:	ldur	x8, [x29, #-32]
  4178e8:	add	x1, x8, #0x1
  4178ec:	ldr	x3, [sp, #32]
  4178f0:	add	x2, sp, #0x18
  4178f4:	bl	416fac <ascii_strlower_n@plt+0x12b4c>
  4178f8:	str	w0, [sp, #20]
  4178fc:	ldr	w9, [sp, #20]
  417900:	cmp	w9, #0x0
  417904:	cset	w9, ge  // ge = tcont
  417908:	tbnz	w9, #0, 417918 <ascii_strlower_n@plt+0x134b8>
  41790c:	ldr	w8, [sp, #20]
  417910:	stur	w8, [x29, #-4]
  417914:	b	4179b0 <ascii_strlower_n@plt+0x13550>
  417918:	ldur	x8, [x29, #-32]
  41791c:	ldr	x9, [sp, #24]
  417920:	add	x10, x9, #0x1
  417924:	str	x10, [sp, #24]
  417928:	strb	w8, [x9]
  41792c:	ldur	x9, [x29, #-16]
  417930:	ldrb	w8, [x9, #160]
  417934:	mov	w11, #0x3                   	// #3
  417938:	lsr	w8, w8, w11
  41793c:	and	w8, w8, #0x1
  417940:	tbnz	w8, #0, 417948 <ascii_strlower_n@plt+0x134e8>
  417944:	b	41799c <ascii_strlower_n@plt+0x1353c>
  417948:	ldurb	w8, [x29, #-33]
  41794c:	tbnz	w8, #0, 417954 <ascii_strlower_n@plt+0x134f4>
  417950:	b	41799c <ascii_strlower_n@plt+0x1353c>
  417954:	str	xzr, [sp, #8]
  417958:	ldr	x8, [sp, #8]
  41795c:	ldur	x9, [x29, #-32]
  417960:	cmp	x8, x9
  417964:	b.cs	417998 <ascii_strlower_n@plt+0x13538>  // b.hs, b.nlast
  417968:	ldur	x8, [x29, #-24]
  41796c:	ldr	x9, [sp, #8]
  417970:	ldrb	w0, [x8, x9]
  417974:	bl	404120 <ascii_tolower@plt>
  417978:	ldr	x8, [sp, #24]
  41797c:	ldr	x9, [sp, #8]
  417980:	add	x8, x8, x9
  417984:	strb	w0, [x8]
  417988:	ldr	x8, [sp, #8]
  41798c:	add	x8, x8, #0x1
  417990:	str	x8, [sp, #8]
  417994:	b	417958 <ascii_strlower_n@plt+0x134f8>
  417998:	b	4179ac <ascii_strlower_n@plt+0x1354c>
  41799c:	ldr	x0, [sp, #24]
  4179a0:	ldur	x1, [x29, #-24]
  4179a4:	ldur	x2, [x29, #-32]
  4179a8:	bl	403fa0 <memcpy@plt>
  4179ac:	stur	wzr, [x29, #-4]
  4179b0:	ldur	w0, [x29, #-4]
  4179b4:	ldp	x29, x30, [sp, #80]
  4179b8:	add	sp, sp, #0x60
  4179bc:	ret
  4179c0:	sub	sp, sp, #0xc0
  4179c4:	stp	x29, x30, [sp, #176]
  4179c8:	add	x29, sp, #0xb0
  4179cc:	sub	x8, x29, #0x10
  4179d0:	adrp	x9, 430000 <ascii_strlower_n@plt+0x2bba0>
  4179d4:	add	x9, x9, #0xb94
  4179d8:	add	x9, x9, #0x3
  4179dc:	adrp	x10, 430000 <ascii_strlower_n@plt+0x2bba0>
  4179e0:	add	x10, x10, #0xfda
  4179e4:	str	x0, [x8]
  4179e8:	stur	x1, [x29, #-24]
  4179ec:	mov	w11, #0x1                   	// #1
  4179f0:	and	w11, w2, w11
  4179f4:	sturb	w11, [x29, #-25]
  4179f8:	and	w11, w3, #0x1
  4179fc:	sturb	w11, [x29, #-26]
  417a00:	stur	x4, [x29, #-40]
  417a04:	str	x8, [sp, #16]
  417a08:	str	x9, [sp, #8]
  417a0c:	str	x10, [sp]
  417a10:	ldr	x8, [sp, #16]
  417a14:	ldr	x9, [x8]
  417a18:	cmp	x9, #0x0
  417a1c:	cset	w10, ne  // ne = any
  417a20:	mov	w11, #0x1                   	// #1
  417a24:	eor	w10, w10, #0x1
  417a28:	eor	w10, w10, w11
  417a2c:	eor	w10, w10, w11
  417a30:	and	w10, w10, #0x1
  417a34:	mov	w0, w10
  417a38:	sxtw	x9, w0
  417a3c:	cbz	x9, 417a60 <ascii_strlower_n@plt+0x13600>
  417a40:	mov	w8, wzr
  417a44:	mov	w0, w8
  417a48:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  417a4c:	add	x1, x1, #0xc51
  417a50:	ldr	x2, [sp, #8]
  417a54:	mov	w3, #0x201                 	// #513
  417a58:	ldr	x4, [sp]
  417a5c:	bl	4039d0 <log_assert_failed_realm@plt>
  417a60:	ldur	x8, [x29, #-24]
  417a64:	cmp	x8, #0x0
  417a68:	cset	w9, ne  // ne = any
  417a6c:	mov	w10, #0x1                   	// #1
  417a70:	eor	w9, w9, #0x1
  417a74:	eor	w9, w9, w10
  417a78:	eor	w9, w9, w10
  417a7c:	and	w9, w9, #0x1
  417a80:	mov	w0, w9
  417a84:	sxtw	x8, w0
  417a88:	cbz	x8, 417aac <ascii_strlower_n@plt+0x1364c>
  417a8c:	mov	w8, wzr
  417a90:	mov	w0, w8
  417a94:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  417a98:	add	x1, x1, #0x923
  417a9c:	ldr	x2, [sp, #8]
  417aa0:	mov	w3, #0x202                 	// #514
  417aa4:	ldr	x4, [sp]
  417aa8:	bl	4039d0 <log_assert_failed_realm@plt>
  417aac:	ldr	x8, [sp, #16]
  417ab0:	ldr	x9, [x8]
  417ab4:	ldrb	w10, [x9, #160]
  417ab8:	mov	w11, #0x2                   	// #2
  417abc:	lsr	w10, w10, w11
  417ac0:	and	w10, w10, #0x1
  417ac4:	tbnz	w10, #0, 417acc <ascii_strlower_n@plt+0x1366c>
  417ac8:	b	417ad4 <ascii_strlower_n@plt+0x13674>
  417acc:	mov	w8, #0x0                   	// #0
  417ad0:	sturb	w8, [x29, #-25]
  417ad4:	ldr	x8, [sp, #16]
  417ad8:	ldr	x9, [x8]
  417adc:	ldr	x9, [x9, #8]
  417ae0:	stur	x9, [x29, #-48]
  417ae4:	ldur	x0, [x29, #-24]
  417ae8:	bl	404130 <dns_name_is_root@plt>
  417aec:	eor	w8, w0, #0x1
  417af0:	tbnz	w8, #0, 417af8 <ascii_strlower_n@plt+0x13698>
  417af4:	b	417d1c <ascii_strlower_n@plt+0x138bc>
  417af8:	ldur	x8, [x29, #-24]
  417afc:	stur	x8, [x29, #-64]
  417b00:	str	xzr, [sp, #40]
  417b04:	ldurb	w9, [x29, #-25]
  417b08:	tbnz	w9, #0, 417b10 <ascii_strlower_n@plt+0x136b0>
  417b0c:	b	417b28 <ascii_strlower_n@plt+0x136c8>
  417b10:	ldr	x8, [sp, #16]
  417b14:	ldr	x9, [x8]
  417b18:	ldr	x0, [x9, #48]
  417b1c:	ldur	x1, [x29, #-24]
  417b20:	bl	417d9c <ascii_strlower_n@plt+0x1393c>
  417b24:	str	x0, [sp, #40]
  417b28:	ldr	x8, [sp, #40]
  417b2c:	cmp	x8, #0x0
  417b30:	cset	w9, ls  // ls = plast
  417b34:	tbnz	w9, #0, 417bdc <ascii_strlower_n@plt+0x1377c>
  417b38:	ldr	x8, [sp, #40]
  417b3c:	ldr	x9, [sp, #16]
  417b40:	ldr	x10, [x9]
  417b44:	ldr	x10, [x10, #8]
  417b48:	cmp	x8, x10
  417b4c:	cset	w11, cc  // cc = lo, ul, last
  417b50:	mov	w12, #0x1                   	// #1
  417b54:	eor	w11, w11, #0x1
  417b58:	eor	w11, w11, w12
  417b5c:	eor	w11, w11, w12
  417b60:	and	w11, w11, #0x1
  417b64:	mov	w0, w11
  417b68:	sxtw	x8, w0
  417b6c:	cbz	x8, 417b90 <ascii_strlower_n@plt+0x13730>
  417b70:	mov	w8, wzr
  417b74:	mov	w0, w8
  417b78:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  417b7c:	add	x1, x1, #0x28
  417b80:	ldr	x2, [sp, #8]
  417b84:	mov	w3, #0x211                 	// #529
  417b88:	ldr	x4, [sp]
  417b8c:	bl	4039d0 <log_assert_failed_realm@plt>
  417b90:	ldr	x8, [sp, #40]
  417b94:	cmp	x8, #0x4, lsl #12
  417b98:	b.cs	417bdc <ascii_strlower_n@plt+0x1377c>  // b.hs, b.nlast
  417b9c:	ldr	x8, [sp, #16]
  417ba0:	ldr	x0, [x8]
  417ba4:	ldr	x9, [sp, #40]
  417ba8:	mov	x10, #0xc000                	// #49152
  417bac:	orr	x9, x10, x9
  417bb0:	mov	w1, w9
  417bb4:	mov	x10, xzr
  417bb8:	mov	x2, x10
  417bbc:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  417bc0:	stur	w0, [x29, #-52]
  417bc4:	ldur	w9, [x29, #-52]
  417bc8:	cmp	w9, #0x0
  417bcc:	cset	w9, ge  // ge = tcont
  417bd0:	tbnz	w9, #0, 417bd8 <ascii_strlower_n@plt+0x13778>
  417bd4:	b	417d74 <ascii_strlower_n@plt+0x13914>
  417bd8:	b	417d58 <ascii_strlower_n@plt+0x138f8>
  417bdc:	sub	x0, x29, #0x18
  417be0:	add	x1, sp, #0x31
  417be4:	mov	x2, #0x3f                  	// #63
  417be8:	mov	w8, wzr
  417bec:	mov	w3, w8
  417bf0:	bl	404140 <dns_label_unescape@plt>
  417bf4:	stur	w0, [x29, #-52]
  417bf8:	ldur	w8, [x29, #-52]
  417bfc:	cmp	w8, #0x0
  417c00:	cset	w8, ge  // ge = tcont
  417c04:	tbnz	w8, #0, 417c0c <ascii_strlower_n@plt+0x137ac>
  417c08:	b	417d74 <ascii_strlower_n@plt+0x13914>
  417c0c:	ldr	x8, [sp, #16]
  417c10:	ldr	x0, [x8]
  417c14:	ldursw	x2, [x29, #-52]
  417c18:	ldurb	w9, [x29, #-26]
  417c1c:	add	x1, sp, #0x31
  417c20:	and	w3, w9, #0x1
  417c24:	add	x4, sp, #0x28
  417c28:	bl	4177f4 <ascii_strlower_n@plt+0x13394>
  417c2c:	stur	w0, [x29, #-52]
  417c30:	ldur	w9, [x29, #-52]
  417c34:	cmp	w9, #0x0
  417c38:	cset	w9, ge  // ge = tcont
  417c3c:	tbnz	w9, #0, 417c44 <ascii_strlower_n@plt+0x137e4>
  417c40:	b	417d74 <ascii_strlower_n@plt+0x13914>
  417c44:	ldurb	w8, [x29, #-25]
  417c48:	tbnz	w8, #0, 417c50 <ascii_strlower_n@plt+0x137f0>
  417c4c:	b	417d18 <ascii_strlower_n@plt+0x138b8>
  417c50:	mov	x8, xzr
  417c54:	str	x8, [sp, #32]
  417c58:	ldur	x0, [x29, #-64]
  417c5c:	bl	403b20 <strdup@plt>
  417c60:	str	x0, [sp, #32]
  417c64:	ldr	x8, [sp, #32]
  417c68:	cbnz	x8, 417c80 <ascii_strlower_n@plt+0x13820>
  417c6c:	mov	w8, #0xfffffff4            	// #-12
  417c70:	stur	w8, [x29, #-52]
  417c74:	mov	w8, #0xa                   	// #10
  417c78:	str	w8, [sp, #28]
  417c7c:	b	417d00 <ascii_strlower_n@plt+0x138a0>
  417c80:	ldr	x8, [sp, #16]
  417c84:	ldr	x9, [x8]
  417c88:	add	x0, x9, #0x30
  417c8c:	adrp	x1, 44f000 <ascii_strlower_n@plt+0x4aba0>
  417c90:	ldr	x1, [x1, #2664]
  417c94:	bl	404150 <internal_hashmap_ensure_allocated@plt>
  417c98:	stur	w0, [x29, #-52]
  417c9c:	ldur	w10, [x29, #-52]
  417ca0:	cmp	w10, #0x0
  417ca4:	cset	w10, ge  // ge = tcont
  417ca8:	tbnz	w10, #0, 417cb8 <ascii_strlower_n@plt+0x13858>
  417cac:	mov	w8, #0xa                   	// #10
  417cb0:	str	w8, [sp, #28]
  417cb4:	b	417d00 <ascii_strlower_n@plt+0x138a0>
  417cb8:	ldr	x8, [sp, #16]
  417cbc:	ldr	x9, [x8]
  417cc0:	ldr	x0, [x9, #48]
  417cc4:	ldr	x1, [sp, #32]
  417cc8:	ldr	x9, [sp, #40]
  417ccc:	mov	x2, x9
  417cd0:	bl	404160 <hashmap_put@plt>
  417cd4:	stur	w0, [x29, #-52]
  417cd8:	ldur	w10, [x29, #-52]
  417cdc:	cmp	w10, #0x0
  417ce0:	cset	w10, ge  // ge = tcont
  417ce4:	tbnz	w10, #0, 417cf4 <ascii_strlower_n@plt+0x13894>
  417ce8:	mov	w8, #0xa                   	// #10
  417cec:	str	w8, [sp, #28]
  417cf0:	b	417d00 <ascii_strlower_n@plt+0x138a0>
  417cf4:	mov	x8, xzr
  417cf8:	str	x8, [sp, #32]
  417cfc:	str	wzr, [sp, #28]
  417d00:	add	x0, sp, #0x20
  417d04:	bl	417dc8 <ascii_strlower_n@plt+0x13968>
  417d08:	ldr	w8, [sp, #28]
  417d0c:	cbz	w8, 417d18 <ascii_strlower_n@plt+0x138b8>
  417d10:	b	417d14 <ascii_strlower_n@plt+0x138b4>
  417d14:	b	417d74 <ascii_strlower_n@plt+0x13914>
  417d18:	b	417ae4 <ascii_strlower_n@plt+0x13684>
  417d1c:	ldr	x8, [sp, #16]
  417d20:	ldr	x0, [x8]
  417d24:	mov	w9, wzr
  417d28:	mov	w1, w9
  417d2c:	mov	x10, xzr
  417d30:	mov	x2, x10
  417d34:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  417d38:	stur	w0, [x29, #-52]
  417d3c:	ldur	w9, [x29, #-52]
  417d40:	cmp	w9, #0x0
  417d44:	cset	w9, ge  // ge = tcont
  417d48:	tbnz	w9, #0, 417d58 <ascii_strlower_n@plt+0x138f8>
  417d4c:	ldur	w8, [x29, #-52]
  417d50:	stur	w8, [x29, #-4]
  417d54:	b	417d8c <ascii_strlower_n@plt+0x1392c>
  417d58:	ldur	x8, [x29, #-40]
  417d5c:	cbz	x8, 417d6c <ascii_strlower_n@plt+0x1390c>
  417d60:	ldur	x8, [x29, #-48]
  417d64:	ldur	x9, [x29, #-40]
  417d68:	str	x8, [x9]
  417d6c:	stur	wzr, [x29, #-4]
  417d70:	b	417d8c <ascii_strlower_n@plt+0x1392c>
  417d74:	ldr	x8, [sp, #16]
  417d78:	ldr	x0, [x8]
  417d7c:	ldur	x1, [x29, #-48]
  417d80:	bl	416d58 <ascii_strlower_n@plt+0x128f8>
  417d84:	ldur	w9, [x29, #-52]
  417d88:	stur	w9, [x29, #-4]
  417d8c:	ldur	w0, [x29, #-4]
  417d90:	ldp	x29, x30, [sp, #176]
  417d94:	add	sp, sp, #0xc0
  417d98:	ret
  417d9c:	sub	sp, sp, #0x20
  417da0:	stp	x29, x30, [sp, #16]
  417da4:	add	x29, sp, #0x10
  417da8:	str	x0, [sp, #8]
  417dac:	str	x1, [sp]
  417db0:	ldr	x0, [sp, #8]
  417db4:	ldr	x1, [sp]
  417db8:	bl	404170 <internal_hashmap_get@plt>
  417dbc:	ldp	x29, x30, [sp, #16]
  417dc0:	add	sp, sp, #0x20
  417dc4:	ret
  417dc8:	sub	sp, sp, #0x20
  417dcc:	stp	x29, x30, [sp, #16]
  417dd0:	add	x29, sp, #0x10
  417dd4:	str	x0, [sp, #8]
  417dd8:	ldr	x8, [sp, #8]
  417ddc:	ldr	x0, [x8]
  417de0:	bl	403ac0 <free@plt>
  417de4:	ldp	x29, x30, [sp, #16]
  417de8:	add	sp, sp, #0x20
  417dec:	ret
  417df0:	sub	sp, sp, #0x70
  417df4:	stp	x29, x30, [sp, #96]
  417df8:	add	x29, sp, #0x60
  417dfc:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  417e00:	add	x8, x8, #0xb94
  417e04:	add	x8, x8, #0x3
  417e08:	stur	x0, [x29, #-16]
  417e0c:	stur	x1, [x29, #-24]
  417e10:	stur	w2, [x29, #-28]
  417e14:	stur	x3, [x29, #-40]
  417e18:	str	x8, [sp, #32]
  417e1c:	ldur	x8, [x29, #-16]
  417e20:	cmp	x8, #0x0
  417e24:	cset	w9, ne  // ne = any
  417e28:	mov	w10, #0x1                   	// #1
  417e2c:	eor	w9, w9, #0x1
  417e30:	eor	w9, w9, w10
  417e34:	eor	w9, w9, w10
  417e38:	and	w9, w9, #0x1
  417e3c:	mov	w0, w9
  417e40:	sxtw	x8, w0
  417e44:	cbz	x8, 417e6c <ascii_strlower_n@plt+0x13a0c>
  417e48:	mov	w8, wzr
  417e4c:	mov	w0, w8
  417e50:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  417e54:	add	x1, x1, #0xc51
  417e58:	ldr	x2, [sp, #32]
  417e5c:	mov	w3, #0x24d                 	// #589
  417e60:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  417e64:	add	x4, x4, #0x34
  417e68:	bl	4039d0 <log_assert_failed_realm@plt>
  417e6c:	ldur	x8, [x29, #-24]
  417e70:	cmp	x8, #0x0
  417e74:	cset	w9, ne  // ne = any
  417e78:	mov	w10, #0x1                   	// #1
  417e7c:	eor	w9, w9, #0x1
  417e80:	eor	w9, w9, w10
  417e84:	eor	w9, w9, w10
  417e88:	and	w9, w9, #0x1
  417e8c:	mov	w0, w9
  417e90:	sxtw	x8, w0
  417e94:	cbz	x8, 417ebc <ascii_strlower_n@plt+0x13a5c>
  417e98:	mov	w8, wzr
  417e9c:	mov	w0, w8
  417ea0:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  417ea4:	add	x1, x1, #0x93
  417ea8:	ldr	x2, [sp, #32]
  417eac:	mov	w3, #0x24e                 	// #590
  417eb0:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  417eb4:	add	x4, x4, #0x34
  417eb8:	bl	4039d0 <log_assert_failed_realm@plt>
  417ebc:	ldur	x8, [x29, #-16]
  417ec0:	ldr	x8, [x8, #8]
  417ec4:	str	x8, [sp, #48]
  417ec8:	ldur	x0, [x29, #-16]
  417ecc:	ldur	x8, [x29, #-24]
  417ed0:	str	x0, [sp, #24]
  417ed4:	mov	x0, x8
  417ed8:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  417edc:	ldr	x8, [sp, #24]
  417ee0:	str	x0, [sp, #16]
  417ee4:	mov	x0, x8
  417ee8:	ldr	x1, [sp, #16]
  417eec:	mov	w9, #0x1                   	// #1
  417ef0:	and	w2, w9, #0x1
  417ef4:	and	w3, w9, #0x1
  417ef8:	mov	x10, xzr
  417efc:	mov	x4, x10
  417f00:	bl	4179c0 <ascii_strlower_n@plt+0x13560>
  417f04:	str	w0, [sp, #40]
  417f08:	ldr	w9, [sp, #40]
  417f0c:	cmp	w9, #0x0
  417f10:	cset	w9, ge  // ge = tcont
  417f14:	tbnz	w9, #0, 417f1c <ascii_strlower_n@plt+0x13abc>
  417f18:	b	417fc8 <ascii_strlower_n@plt+0x13b68>
  417f1c:	ldur	x0, [x29, #-16]
  417f20:	ldur	x8, [x29, #-24]
  417f24:	ldrh	w1, [x8, #6]
  417f28:	mov	x8, xzr
  417f2c:	mov	x2, x8
  417f30:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  417f34:	str	w0, [sp, #40]
  417f38:	ldr	w9, [sp, #40]
  417f3c:	cmp	w9, #0x0
  417f40:	cset	w9, ge  // ge = tcont
  417f44:	tbnz	w9, #0, 417f4c <ascii_strlower_n@plt+0x13aec>
  417f48:	b	417fc8 <ascii_strlower_n@plt+0x13b68>
  417f4c:	ldur	w8, [x29, #-28]
  417f50:	and	w8, w8, #0x8
  417f54:	cbz	w8, 417f6c <ascii_strlower_n@plt+0x13b0c>
  417f58:	ldur	x8, [x29, #-24]
  417f5c:	ldrh	w9, [x8, #4]
  417f60:	orr	w9, w9, #0x8000
  417f64:	str	w9, [sp, #12]
  417f68:	b	417f78 <ascii_strlower_n@plt+0x13b18>
  417f6c:	ldur	x8, [x29, #-24]
  417f70:	ldrh	w9, [x8, #4]
  417f74:	str	w9, [sp, #12]
  417f78:	ldr	w8, [sp, #12]
  417f7c:	strh	w8, [sp, #46]
  417f80:	ldur	x0, [x29, #-16]
  417f84:	ldrh	w1, [sp, #46]
  417f88:	mov	x9, xzr
  417f8c:	mov	x2, x9
  417f90:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  417f94:	str	w0, [sp, #40]
  417f98:	ldr	w8, [sp, #40]
  417f9c:	cmp	w8, #0x0
  417fa0:	cset	w8, ge  // ge = tcont
  417fa4:	tbnz	w8, #0, 417fac <ascii_strlower_n@plt+0x13b4c>
  417fa8:	b	417fc8 <ascii_strlower_n@plt+0x13b68>
  417fac:	ldur	x8, [x29, #-40]
  417fb0:	cbz	x8, 417fc0 <ascii_strlower_n@plt+0x13b60>
  417fb4:	ldr	x8, [sp, #48]
  417fb8:	ldur	x9, [x29, #-40]
  417fbc:	str	x8, [x9]
  417fc0:	stur	wzr, [x29, #-4]
  417fc4:	b	417fdc <ascii_strlower_n@plt+0x13b7c>
  417fc8:	ldur	x0, [x29, #-16]
  417fcc:	ldr	x1, [sp, #48]
  417fd0:	bl	416d58 <ascii_strlower_n@plt+0x128f8>
  417fd4:	ldr	w8, [sp, #40]
  417fd8:	stur	w8, [x29, #-4]
  417fdc:	ldur	w0, [x29, #-4]
  417fe0:	ldp	x29, x30, [sp, #96]
  417fe4:	add	sp, sp, #0x70
  417fe8:	ret
  417fec:	sub	sp, sp, #0x60
  417ff0:	stp	x29, x30, [sp, #80]
  417ff4:	add	x29, sp, #0x50
  417ff8:	mov	w8, #0x1                   	// #1
  417ffc:	adrp	x9, 430000 <ascii_strlower_n@plt+0x2bba0>
  418000:	add	x9, x9, #0xb94
  418004:	add	x9, x9, #0x3
  418008:	adrp	x10, 431000 <ascii_strlower_n@plt+0x2cba0>
  41800c:	add	x10, x10, #0x95
  418010:	stur	x0, [x29, #-16]
  418014:	sturh	w1, [x29, #-18]
  418018:	and	w8, w2, w8
  41801c:	sturb	w8, [x29, #-19]
  418020:	stur	w3, [x29, #-24]
  418024:	stur	x4, [x29, #-32]
  418028:	str	x9, [sp, #24]
  41802c:	str	x10, [sp, #16]
  418030:	ldur	x8, [x29, #-16]
  418034:	cmp	x8, #0x0
  418038:	cset	w9, ne  // ne = any
  41803c:	mov	w10, #0x1                   	// #1
  418040:	eor	w9, w9, #0x1
  418044:	eor	w9, w9, w10
  418048:	eor	w9, w9, w10
  41804c:	and	w9, w9, #0x1
  418050:	mov	w0, w9
  418054:	sxtw	x8, w0
  418058:	cbz	x8, 41807c <ascii_strlower_n@plt+0x13c1c>
  41805c:	mov	w8, wzr
  418060:	mov	w0, w8
  418064:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  418068:	add	x1, x1, #0xc51
  41806c:	ldr	x2, [sp, #24]
  418070:	mov	w3, #0x2ba                 	// #698
  418074:	ldr	x4, [sp, #16]
  418078:	bl	4039d0 <log_assert_failed_realm@plt>
  41807c:	ldurh	w8, [x29, #-18]
  418080:	cmp	w8, #0x200
  418084:	cset	w8, cs  // cs = hs, nlast
  418088:	mov	w9, #0x1                   	// #1
  41808c:	eor	w8, w8, #0x1
  418090:	eor	w8, w8, w9
  418094:	eor	w8, w8, w9
  418098:	and	w8, w8, #0x1
  41809c:	mov	w0, w8
  4180a0:	sxtw	x10, w0
  4180a4:	cbz	x10, 4180c8 <ascii_strlower_n@plt+0x13c68>
  4180a8:	mov	w8, wzr
  4180ac:	mov	w0, w8
  4180b0:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  4180b4:	add	x1, x1, #0xdc
  4180b8:	ldr	x2, [sp, #24]
  4180bc:	mov	w3, #0x2bc                 	// #700
  4180c0:	ldr	x4, [sp, #16]
  4180c4:	bl	4039d0 <log_assert_failed_realm@plt>
  4180c8:	ldur	w8, [x29, #-24]
  4180cc:	cmp	w8, #0x0
  4180d0:	cset	w8, ge  // ge = tcont
  4180d4:	mov	w9, #0x1                   	// #1
  4180d8:	eor	w8, w8, #0x1
  4180dc:	eor	w8, w8, w9
  4180e0:	eor	w8, w8, w9
  4180e4:	and	w8, w8, #0x1
  4180e8:	mov	w0, w8
  4180ec:	sxtw	x10, w0
  4180f0:	cbz	x10, 418114 <ascii_strlower_n@plt+0x13cb4>
  4180f4:	mov	w8, wzr
  4180f8:	mov	w0, w8
  4180fc:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  418100:	add	x1, x1, #0x108
  418104:	ldr	x2, [sp, #24]
  418108:	mov	w3, #0x2bd                 	// #701
  41810c:	ldr	x4, [sp, #16]
  418110:	bl	4039d0 <log_assert_failed_realm@plt>
  418114:	ldur	w8, [x29, #-24]
  418118:	cmp	w8, #0xfff
  41811c:	cset	w8, le
  418120:	mov	w9, #0x1                   	// #1
  418124:	eor	w8, w8, #0x1
  418128:	eor	w8, w8, w9
  41812c:	eor	w8, w8, w9
  418130:	and	w8, w8, #0x1
  418134:	mov	w0, w8
  418138:	sxtw	x10, w0
  41813c:	cbz	x10, 418160 <ascii_strlower_n@plt+0x13d00>
  418140:	mov	w8, wzr
  418144:	mov	w0, w8
  418148:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41814c:	add	x1, x1, #0x113
  418150:	ldr	x2, [sp, #24]
  418154:	mov	w3, #0x2be                 	// #702
  418158:	ldr	x4, [sp, #16]
  41815c:	bl	4039d0 <log_assert_failed_realm@plt>
  418160:	ldur	x8, [x29, #-16]
  418164:	ldr	x8, [x8, #56]
  418168:	mov	x9, #0xffffffffffffffff    	// #-1
  41816c:	cmp	x8, x9
  418170:	b.eq	418180 <ascii_strlower_n@plt+0x13d20>  // b.none
  418174:	mov	w8, #0xfffffff0            	// #-16
  418178:	stur	w8, [x29, #-4]
  41817c:	b	418424 <ascii_strlower_n@plt+0x13fc4>
  418180:	ldur	x8, [x29, #-16]
  418184:	ldr	x8, [x8, #64]
  418188:	mov	x9, #0xffffffffffffffff    	// #-1
  41818c:	cmp	x8, x9
  418190:	cset	w10, eq  // eq = none
  418194:	mov	w11, #0x1                   	// #1
  418198:	eor	w10, w10, #0x1
  41819c:	eor	w10, w10, w11
  4181a0:	eor	w10, w10, w11
  4181a4:	and	w10, w10, #0x1
  4181a8:	mov	w0, w10
  4181ac:	sxtw	x8, w0
  4181b0:	cbz	x8, 4181d4 <ascii_strlower_n@plt+0x13d74>
  4181b4:	mov	w8, wzr
  4181b8:	mov	w0, w8
  4181bc:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  4181c0:	add	x1, x1, #0x12b
  4181c4:	ldr	x2, [sp, #24]
  4181c8:	mov	w3, #0x2c3                 	// #707
  4181cc:	ldr	x4, [sp, #16]
  4181d0:	bl	4039d0 <log_assert_failed_realm@plt>
  4181d4:	ldur	x8, [x29, #-16]
  4181d8:	ldr	x8, [x8, #8]
  4181dc:	str	x8, [sp, #40]
  4181e0:	ldur	x0, [x29, #-16]
  4181e4:	mov	w9, wzr
  4181e8:	mov	w1, w9
  4181ec:	mov	x8, xzr
  4181f0:	mov	x2, x8
  4181f4:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  4181f8:	str	w0, [sp, #36]
  4181fc:	ldr	w9, [sp, #36]
  418200:	cmp	w9, #0x0
  418204:	cset	w9, ge  // ge = tcont
  418208:	tbnz	w9, #0, 418218 <ascii_strlower_n@plt+0x13db8>
  41820c:	ldr	w8, [sp, #36]
  418210:	stur	w8, [x29, #-4]
  418214:	b	418424 <ascii_strlower_n@plt+0x13fc4>
  418218:	ldur	x0, [x29, #-16]
  41821c:	mov	w1, #0x29                  	// #41
  418220:	mov	x8, xzr
  418224:	mov	x2, x8
  418228:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  41822c:	str	w0, [sp, #36]
  418230:	ldr	w9, [sp, #36]
  418234:	cmp	w9, #0x0
  418238:	cset	w9, ge  // ge = tcont
  41823c:	tbnz	w9, #0, 418244 <ascii_strlower_n@plt+0x13de4>
  418240:	b	418410 <ascii_strlower_n@plt+0x13fb0>
  418244:	ldur	x0, [x29, #-16]
  418248:	ldurh	w1, [x29, #-18]
  41824c:	mov	x8, xzr
  418250:	mov	x2, x8
  418254:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  418258:	str	w0, [sp, #36]
  41825c:	ldr	w9, [sp, #36]
  418260:	cmp	w9, #0x0
  418264:	cset	w9, ge  // ge = tcont
  418268:	tbnz	w9, #0, 418270 <ascii_strlower_n@plt+0x13e10>
  41826c:	b	418410 <ascii_strlower_n@plt+0x13fb0>
  418270:	ldur	x0, [x29, #-16]
  418274:	ldur	w8, [x29, #-24]
  418278:	and	w8, w8, #0xffff
  41827c:	and	w8, w8, #0xff0
  418280:	lsl	w8, w8, #4
  418284:	mov	w1, w8
  418288:	mov	x9, xzr
  41828c:	mov	x2, x9
  418290:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  418294:	str	w0, [sp, #36]
  418298:	ldr	w8, [sp, #36]
  41829c:	cmp	w8, #0x0
  4182a0:	cset	w8, ge  // ge = tcont
  4182a4:	tbnz	w8, #0, 4182ac <ascii_strlower_n@plt+0x13e4c>
  4182a8:	b	418410 <ascii_strlower_n@plt+0x13fb0>
  4182ac:	ldur	x0, [x29, #-16]
  4182b0:	ldurb	w8, [x29, #-19]
  4182b4:	mov	w9, #0x8000                	// #32768
  4182b8:	mov	w10, wzr
  4182bc:	tst	w8, #0x1
  4182c0:	csel	w8, w9, w10, ne  // ne = any
  4182c4:	mov	w1, w8
  4182c8:	mov	x11, xzr
  4182cc:	mov	x2, x11
  4182d0:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  4182d4:	str	w0, [sp, #36]
  4182d8:	ldr	w8, [sp, #36]
  4182dc:	cmp	w8, #0x0
  4182e0:	cset	w8, ge  // ge = tcont
  4182e4:	tbnz	w8, #0, 4182ec <ascii_strlower_n@plt+0x13e8c>
  4182e8:	b	418410 <ascii_strlower_n@plt+0x13fb0>
  4182ec:	ldurb	w8, [x29, #-19]
  4182f0:	tbnz	w8, #0, 4182f8 <ascii_strlower_n@plt+0x13e98>
  4182f4:	b	418368 <ascii_strlower_n@plt+0x13f08>
  4182f8:	ldur	x0, [x29, #-16]
  4182fc:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  418300:	ldrh	w0, [x0, #2]
  418304:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  418308:	and	w8, w0, #0xffff
  41830c:	asr	w8, w8, #15
  418310:	and	w8, w8, #0x1
  418314:	cbnz	w8, 418368 <ascii_strlower_n@plt+0x13f08>
  418318:	ldur	x0, [x29, #-16]
  41831c:	mov	w1, #0x16                  	// #22
  418320:	mov	x8, xzr
  418324:	mov	x2, x8
  418328:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  41832c:	str	w0, [sp, #36]
  418330:	ldr	w9, [sp, #36]
  418334:	cmp	w9, #0x0
  418338:	cset	w9, ge  // ge = tcont
  41833c:	tbnz	w9, #0, 418344 <ascii_strlower_n@plt+0x13ee4>
  418340:	b	418410 <ascii_strlower_n@plt+0x13fb0>
  418344:	ldur	x0, [x29, #-16]
  418348:	adrp	x1, 434000 <ascii_strlower_n@plt+0x2fba0>
  41834c:	add	x1, x1, #0x5e0
  418350:	mov	x2, #0x16                  	// #22
  418354:	mov	x8, xzr
  418358:	mov	x3, x8
  41835c:	bl	416ed8 <ascii_strlower_n@plt+0x12a78>
  418360:	str	w0, [sp, #36]
  418364:	b	418384 <ascii_strlower_n@plt+0x13f24>
  418368:	ldur	x0, [x29, #-16]
  41836c:	mov	w8, wzr
  418370:	mov	w1, w8
  418374:	mov	x9, xzr
  418378:	mov	x2, x9
  41837c:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  418380:	str	w0, [sp, #36]
  418384:	ldr	w8, [sp, #36]
  418388:	cmp	w8, #0x0
  41838c:	cset	w8, ge  // ge = tcont
  418390:	tbnz	w8, #0, 418398 <ascii_strlower_n@plt+0x13f38>
  418394:	b	418410 <ascii_strlower_n@plt+0x13fb0>
  418398:	ldur	x0, [x29, #-16]
  41839c:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  4183a0:	ldrh	w0, [x0, #10]
  4183a4:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  4183a8:	and	w8, w0, #0xffff
  4183ac:	add	w8, w8, #0x1
  4183b0:	mov	w0, w8
  4183b4:	bl	4163e4 <ascii_strlower_n@plt+0x11f84>
  4183b8:	ldur	x9, [x29, #-16]
  4183bc:	str	w0, [sp, #12]
  4183c0:	mov	x0, x9
  4183c4:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  4183c8:	ldr	w8, [sp, #12]
  4183cc:	strh	w8, [x0, #10]
  4183d0:	ldr	x9, [sp, #40]
  4183d4:	ldur	x10, [x29, #-16]
  4183d8:	str	x9, [x10, #56]
  4183dc:	ldur	x9, [x29, #-16]
  4183e0:	ldr	x9, [x9, #8]
  4183e4:	ldr	x10, [sp, #40]
  4183e8:	subs	x9, x9, x10
  4183ec:	ldur	x10, [x29, #-16]
  4183f0:	str	x9, [x10, #64]
  4183f4:	ldur	x9, [x29, #-32]
  4183f8:	cbz	x9, 418408 <ascii_strlower_n@plt+0x13fa8>
  4183fc:	ldr	x8, [sp, #40]
  418400:	ldur	x9, [x29, #-32]
  418404:	str	x8, [x9]
  418408:	stur	wzr, [x29, #-4]
  41840c:	b	418424 <ascii_strlower_n@plt+0x13fc4>
  418410:	ldur	x0, [x29, #-16]
  418414:	ldr	x1, [sp, #40]
  418418:	bl	416d58 <ascii_strlower_n@plt+0x128f8>
  41841c:	ldr	w8, [sp, #36]
  418420:	stur	w8, [x29, #-4]
  418424:	ldur	w0, [x29, #-4]
  418428:	ldp	x29, x30, [sp, #80]
  41842c:	add	sp, sp, #0x60
  418430:	ret
  418434:	sub	sp, sp, #0x40
  418438:	stp	x29, x30, [sp, #48]
  41843c:	add	x29, sp, #0x30
  418440:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  418444:	add	x8, x8, #0xb94
  418448:	add	x8, x8, #0x3
  41844c:	adrp	x9, 431000 <ascii_strlower_n@plt+0x2cba0>
  418450:	add	x9, x9, #0x146
  418454:	stur	x0, [x29, #-16]
  418458:	str	x8, [sp, #24]
  41845c:	str	x9, [sp, #16]
  418460:	ldur	x8, [x29, #-16]
  418464:	cmp	x8, #0x0
  418468:	cset	w9, ne  // ne = any
  41846c:	mov	w10, #0x1                   	// #1
  418470:	eor	w9, w9, #0x1
  418474:	eor	w9, w9, w10
  418478:	eor	w9, w9, w10
  41847c:	and	w9, w9, #0x1
  418480:	mov	w0, w9
  418484:	sxtw	x8, w0
  418488:	cbz	x8, 4184ac <ascii_strlower_n@plt+0x1404c>
  41848c:	mov	w8, wzr
  418490:	mov	w0, w8
  418494:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  418498:	add	x1, x1, #0xc51
  41849c:	ldr	x2, [sp, #24]
  4184a0:	mov	w3, #0x31b                 	// #795
  4184a4:	ldr	x4, [sp, #16]
  4184a8:	bl	4039d0 <log_assert_failed_realm@plt>
  4184ac:	ldur	x8, [x29, #-16]
  4184b0:	ldr	x8, [x8, #56]
  4184b4:	mov	x9, #0xffffffffffffffff    	// #-1
  4184b8:	cmp	x8, x9
  4184bc:	b.ne	41851c <ascii_strlower_n@plt+0x140bc>  // b.any
  4184c0:	ldur	x8, [x29, #-16]
  4184c4:	ldr	x8, [x8, #64]
  4184c8:	mov	x9, #0xffffffffffffffff    	// #-1
  4184cc:	cmp	x8, x9
  4184d0:	cset	w10, eq  // eq = none
  4184d4:	mov	w11, #0x1                   	// #1
  4184d8:	eor	w10, w10, #0x1
  4184dc:	eor	w10, w10, w11
  4184e0:	eor	w10, w10, w11
  4184e4:	and	w10, w10, #0x1
  4184e8:	mov	w0, w10
  4184ec:	sxtw	x8, w0
  4184f0:	cbz	x8, 418514 <ascii_strlower_n@plt+0x140b4>
  4184f4:	mov	w8, wzr
  4184f8:	mov	w0, w8
  4184fc:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  418500:	add	x1, x1, #0x12b
  418504:	ldr	x2, [sp, #24]
  418508:	mov	w3, #0x31e                 	// #798
  41850c:	ldr	x4, [sp, #16]
  418510:	bl	4039d0 <log_assert_failed_realm@plt>
  418514:	stur	wzr, [x29, #-4]
  418518:	b	418664 <ascii_strlower_n@plt+0x14204>
  41851c:	ldur	x8, [x29, #-16]
  418520:	ldr	x8, [x8, #64]
  418524:	mov	x9, #0xffffffffffffffff    	// #-1
  418528:	cmp	x8, x9
  41852c:	cset	w10, ne  // ne = any
  418530:	mov	w11, #0x1                   	// #1
  418534:	eor	w10, w10, #0x1
  418538:	eor	w10, w10, w11
  41853c:	eor	w10, w10, w11
  418540:	and	w10, w10, #0x1
  418544:	mov	w0, w10
  418548:	sxtw	x8, w0
  41854c:	cbz	x8, 418570 <ascii_strlower_n@plt+0x14110>
  418550:	mov	w8, wzr
  418554:	mov	w0, w8
  418558:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41855c:	add	x1, x1, #0x16f
  418560:	ldr	x2, [sp, #24]
  418564:	mov	w3, #0x322                 	// #802
  418568:	ldr	x4, [sp, #16]
  41856c:	bl	4039d0 <log_assert_failed_realm@plt>
  418570:	ldur	x0, [x29, #-16]
  418574:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  418578:	ldrh	w0, [x0, #10]
  41857c:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  418580:	tst	w0, #0xffff
  418584:	cset	w8, gt
  418588:	mov	w9, #0x1                   	// #1
  41858c:	eor	w8, w8, #0x1
  418590:	eor	w8, w8, w9
  418594:	eor	w8, w8, w9
  418598:	and	w8, w8, #0x1
  41859c:	mov	w1, w8
  4185a0:	sxtw	x10, w1
  4185a4:	cbz	x10, 4185c8 <ascii_strlower_n@plt+0x14168>
  4185a8:	mov	w8, wzr
  4185ac:	mov	w0, w8
  4185b0:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  4185b4:	add	x1, x1, #0x18a
  4185b8:	ldr	x2, [sp, #24]
  4185bc:	mov	w3, #0x323                 	// #803
  4185c0:	ldr	x4, [sp, #16]
  4185c4:	bl	4039d0 <log_assert_failed_realm@plt>
  4185c8:	ldur	x8, [x29, #-16]
  4185cc:	ldr	x8, [x8, #56]
  4185d0:	ldur	x9, [x29, #-16]
  4185d4:	ldr	x9, [x9, #64]
  4185d8:	add	x8, x8, x9
  4185dc:	ldur	x9, [x29, #-16]
  4185e0:	ldr	x9, [x9, #8]
  4185e4:	cmp	x8, x9
  4185e8:	b.eq	4185f8 <ascii_strlower_n@plt+0x14198>  // b.none
  4185ec:	mov	w8, #0xfffffff0            	// #-16
  4185f0:	stur	w8, [x29, #-4]
  4185f4:	b	418664 <ascii_strlower_n@plt+0x14204>
  4185f8:	ldur	x0, [x29, #-16]
  4185fc:	ldur	x8, [x29, #-16]
  418600:	ldr	x1, [x8, #56]
  418604:	bl	416d58 <ascii_strlower_n@plt+0x128f8>
  418608:	ldur	x0, [x29, #-16]
  41860c:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  418610:	ldrh	w0, [x0, #10]
  418614:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  418618:	and	w9, w0, #0xffff
  41861c:	mov	w10, #0x1                   	// #1
  418620:	subs	w9, w9, #0x1
  418624:	mov	w0, w9
  418628:	str	w10, [sp, #12]
  41862c:	bl	4163e4 <ascii_strlower_n@plt+0x11f84>
  418630:	ldur	x8, [x29, #-16]
  418634:	str	w0, [sp, #8]
  418638:	mov	x0, x8
  41863c:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  418640:	ldr	w9, [sp, #8]
  418644:	strh	w9, [x0, #10]
  418648:	ldur	x8, [x29, #-16]
  41864c:	mov	x11, #0xffffffffffffffff    	// #-1
  418650:	str	x11, [x8, #64]
  418654:	ldur	x8, [x29, #-16]
  418658:	str	x11, [x8, #56]
  41865c:	ldr	w10, [sp, #12]
  418660:	stur	w10, [x29, #-4]
  418664:	ldur	w0, [x29, #-4]
  418668:	ldp	x29, x30, [sp, #48]
  41866c:	add	sp, sp, #0x40
  418670:	ret
  418674:	sub	sp, sp, #0x90
  418678:	stp	x29, x30, [sp, #128]
  41867c:	add	x29, sp, #0x80
  418680:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  418684:	add	x8, x8, #0xb94
  418688:	add	x8, x8, #0x3
  41868c:	stur	x0, [x29, #-16]
  418690:	stur	x1, [x29, #-24]
  418694:	stur	w2, [x29, #-28]
  418698:	stur	x3, [x29, #-40]
  41869c:	stur	x4, [x29, #-48]
  4186a0:	str	x8, [sp, #16]
  4186a4:	ldur	x8, [x29, #-16]
  4186a8:	cmp	x8, #0x0
  4186ac:	cset	w9, ne  // ne = any
  4186b0:	mov	w10, #0x1                   	// #1
  4186b4:	eor	w9, w9, #0x1
  4186b8:	eor	w9, w9, w10
  4186bc:	eor	w9, w9, w10
  4186c0:	and	w9, w9, #0x1
  4186c4:	mov	w0, w9
  4186c8:	sxtw	x8, w0
  4186cc:	cbz	x8, 4186f4 <ascii_strlower_n@plt+0x14294>
  4186d0:	mov	w8, wzr
  4186d4:	mov	w0, w8
  4186d8:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  4186dc:	add	x1, x1, #0xc51
  4186e0:	ldr	x2, [sp, #16]
  4186e4:	mov	w3, #0x335                 	// #821
  4186e8:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  4186ec:	add	x4, x4, #0x1a4
  4186f0:	bl	4039d0 <log_assert_failed_realm@plt>
  4186f4:	ldur	x8, [x29, #-24]
  4186f8:	cmp	x8, #0x0
  4186fc:	cset	w9, ne  // ne = any
  418700:	mov	w10, #0x1                   	// #1
  418704:	eor	w9, w9, #0x1
  418708:	eor	w9, w9, w10
  41870c:	eor	w9, w9, w10
  418710:	and	w9, w9, #0x1
  418714:	mov	w0, w9
  418718:	sxtw	x8, w0
  41871c:	cbz	x8, 418744 <ascii_strlower_n@plt+0x142e4>
  418720:	mov	w8, wzr
  418724:	mov	w0, w8
  418728:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41872c:	add	x1, x1, #0x20f
  418730:	ldr	x2, [sp, #16]
  418734:	mov	w3, #0x336                 	// #822
  418738:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41873c:	add	x4, x4, #0x1a4
  418740:	bl	4039d0 <log_assert_failed_realm@plt>
  418744:	ldur	x8, [x29, #-16]
  418748:	ldr	x8, [x8, #8]
  41874c:	stur	x8, [x29, #-56]
  418750:	ldur	x0, [x29, #-16]
  418754:	ldur	x8, [x29, #-24]
  418758:	ldr	x1, [x8, #8]
  41875c:	ldur	w2, [x29, #-28]
  418760:	mov	x8, xzr
  418764:	mov	x3, x8
  418768:	bl	417df0 <ascii_strlower_n@plt+0x13990>
  41876c:	str	w0, [sp, #32]
  418770:	ldr	w9, [sp, #32]
  418774:	cmp	w9, #0x0
  418778:	cset	w9, ge  // ge = tcont
  41877c:	tbnz	w9, #0, 418784 <ascii_strlower_n@plt+0x14324>
  418780:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418784:	ldur	w8, [x29, #-28]
  418788:	and	w8, w8, #0x10
  41878c:	cbz	w8, 41879c <ascii_strlower_n@plt+0x1433c>
  418790:	mov	w8, wzr
  418794:	str	w8, [sp, #12]
  418798:	b	4187a8 <ascii_strlower_n@plt+0x14348>
  41879c:	ldur	x8, [x29, #-24]
  4187a0:	ldr	w9, [x8, #24]
  4187a4:	str	w9, [sp, #12]
  4187a8:	ldr	w8, [sp, #12]
  4187ac:	str	w8, [sp, #36]
  4187b0:	ldur	x0, [x29, #-16]
  4187b4:	ldr	w1, [sp, #36]
  4187b8:	mov	x9, xzr
  4187bc:	mov	x2, x9
  4187c0:	bl	41747c <ascii_strlower_n@plt+0x1301c>
  4187c4:	str	w0, [sp, #32]
  4187c8:	ldr	w8, [sp, #32]
  4187cc:	cmp	w8, #0x0
  4187d0:	cset	w8, ge  // ge = tcont
  4187d4:	tbnz	w8, #0, 4187dc <ascii_strlower_n@plt+0x1437c>
  4187d8:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  4187dc:	ldur	x0, [x29, #-16]
  4187e0:	mov	w8, wzr
  4187e4:	mov	w1, w8
  4187e8:	add	x2, sp, #0x40
  4187ec:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  4187f0:	str	w0, [sp, #32]
  4187f4:	ldr	w8, [sp, #32]
  4187f8:	cmp	w8, #0x0
  4187fc:	cset	w8, ge  // ge = tcont
  418800:	tbnz	w8, #0, 418808 <ascii_strlower_n@plt+0x143a8>
  418804:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418808:	ldur	x8, [x29, #-16]
  41880c:	ldr	x8, [x8, #8]
  418810:	ldur	x9, [x29, #-56]
  418814:	subs	x8, x8, x9
  418818:	str	x8, [sp, #40]
  41881c:	ldur	x8, [x29, #-24]
  418820:	ldrb	w10, [x8, #48]
  418824:	and	w10, w10, #0x1
  418828:	tbnz	w10, #0, 418830 <ascii_strlower_n@plt+0x143d0>
  41882c:	b	41883c <ascii_strlower_n@plt+0x143dc>
  418830:	mov	w8, #0xffffffff            	// #-1
  418834:	str	w8, [sp, #8]
  418838:	b	41884c <ascii_strlower_n@plt+0x143ec>
  41883c:	ldur	x8, [x29, #-24]
  418840:	ldr	x8, [x8, #8]
  418844:	ldrh	w9, [x8, #6]
  418848:	str	w9, [sp, #8]
  41884c:	ldr	w8, [sp, #8]
  418850:	mov	w9, #0xffffffff            	// #-1
  418854:	cmp	w8, w9
  418858:	str	w8, [sp, #4]
  41885c:	b.eq	4195f8 <ascii_strlower_n@plt+0x15198>  // b.none
  418860:	b	418864 <ascii_strlower_n@plt+0x14404>
  418864:	ldr	w8, [sp, #4]
  418868:	cmp	w8, #0x1
  41886c:	b.eq	418bb4 <ascii_strlower_n@plt+0x14754>  // b.none
  418870:	b	418874 <ascii_strlower_n@plt+0x14414>
  418874:	ldr	w8, [sp, #4]
  418878:	cmp	w8, #0x2
  41887c:	b.eq	418a90 <ascii_strlower_n@plt+0x14630>  // b.none
  418880:	b	418884 <ascii_strlower_n@plt+0x14424>
  418884:	ldr	w8, [sp, #4]
  418888:	cmp	w8, #0x5
  41888c:	b.eq	418a90 <ascii_strlower_n@plt+0x14630>  // b.none
  418890:	b	418894 <ascii_strlower_n@plt+0x14434>
  418894:	ldr	w8, [sp, #4]
  418898:	cmp	w8, #0x6
  41889c:	b.eq	418bfc <ascii_strlower_n@plt+0x1479c>  // b.none
  4188a0:	b	4188a4 <ascii_strlower_n@plt+0x14444>
  4188a4:	ldr	w8, [sp, #4]
  4188a8:	cmp	w8, #0xc
  4188ac:	b.eq	418a90 <ascii_strlower_n@plt+0x14630>  // b.none
  4188b0:	b	4188b4 <ascii_strlower_n@plt+0x14454>
  4188b4:	ldr	w8, [sp, #4]
  4188b8:	cmp	w8, #0xd
  4188bc:	b.eq	418ac0 <ascii_strlower_n@plt+0x14660>  // b.none
  4188c0:	b	4188c4 <ascii_strlower_n@plt+0x14464>
  4188c4:	ldr	w8, [sp, #4]
  4188c8:	cmp	w8, #0xf
  4188cc:	b.eq	418d5c <ascii_strlower_n@plt+0x148fc>  // b.none
  4188d0:	b	4188d4 <ascii_strlower_n@plt+0x14474>
  4188d4:	ldr	w8, [sp, #4]
  4188d8:	cmp	w8, #0x10
  4188dc:	b.eq	418b10 <ascii_strlower_n@plt+0x146b0>  // b.none
  4188e0:	b	4188e4 <ascii_strlower_n@plt+0x14484>
  4188e4:	ldr	w8, [sp, #4]
  4188e8:	cmp	w8, #0x1c
  4188ec:	b.eq	418bd8 <ascii_strlower_n@plt+0x14778>  // b.none
  4188f0:	b	4188f4 <ascii_strlower_n@plt+0x14494>
  4188f4:	ldr	w8, [sp, #4]
  4188f8:	cmp	w8, #0x1d
  4188fc:	b.eq	418dbc <ascii_strlower_n@plt+0x1495c>  // b.none
  418900:	b	418904 <ascii_strlower_n@plt+0x144a4>
  418904:	ldr	w8, [sp, #4]
  418908:	cmp	w8, #0x21
  41890c:	b.eq	4189d4 <ascii_strlower_n@plt+0x14574>  // b.none
  418910:	b	418914 <ascii_strlower_n@plt+0x144b4>
  418914:	ldr	w8, [sp, #4]
  418918:	cmp	w8, #0x27
  41891c:	b.eq	418a90 <ascii_strlower_n@plt+0x14630>  // b.none
  418920:	b	418924 <ascii_strlower_n@plt+0x144c4>
  418924:	ldr	w8, [sp, #4]
  418928:	cmp	w8, #0x29
  41892c:	b.eq	4195f8 <ascii_strlower_n@plt+0x15198>  // b.none
  418930:	b	418934 <ascii_strlower_n@plt+0x144d4>
  418934:	ldr	w8, [sp, #4]
  418938:	cmp	w8, #0x2b
  41893c:	b.eq	418efc <ascii_strlower_n@plt+0x14a9c>  // b.none
  418940:	b	418944 <ascii_strlower_n@plt+0x144e4>
  418944:	ldr	w8, [sp, #4]
  418948:	cmp	w8, #0x2c
  41894c:	b.eq	418fb4 <ascii_strlower_n@plt+0x14b54>  // b.none
  418950:	b	418954 <ascii_strlower_n@plt+0x144f4>
  418954:	ldr	w8, [sp, #4]
  418958:	cmp	w8, #0x2e
  41895c:	b.eq	4190f4 <ascii_strlower_n@plt+0x14c94>  // b.none
  418960:	b	418964 <ascii_strlower_n@plt+0x14504>
  418964:	ldr	w8, [sp, #4]
  418968:	cmp	w8, #0x2f
  41896c:	b.eq	4192ac <ascii_strlower_n@plt+0x14e4c>  // b.none
  418970:	b	418974 <ascii_strlower_n@plt+0x14514>
  418974:	ldr	w8, [sp, #4]
  418978:	cmp	w8, #0x30
  41897c:	b.eq	41903c <ascii_strlower_n@plt+0x14bdc>  // b.none
  418980:	b	418984 <ascii_strlower_n@plt+0x14524>
  418984:	ldr	w8, [sp, #4]
  418988:	cmp	w8, #0x32
  41898c:	b.eq	41931c <ascii_strlower_n@plt+0x14ebc>  // b.none
  418990:	b	418994 <ascii_strlower_n@plt+0x14534>
  418994:	ldr	w8, [sp, #4]
  418998:	cmp	w8, #0x34
  41899c:	b.eq	4194b8 <ascii_strlower_n@plt+0x15058>  // b.none
  4189a0:	b	4189a4 <ascii_strlower_n@plt+0x14544>
  4189a4:	ldr	w8, [sp, #4]
  4189a8:	cmp	w8, #0x3d
  4189ac:	b.eq	4195f8 <ascii_strlower_n@plt+0x15198>  // b.none
  4189b0:	b	4189b4 <ascii_strlower_n@plt+0x14554>
  4189b4:	ldr	w8, [sp, #4]
  4189b8:	cmp	w8, #0x63
  4189bc:	b.eq	418b10 <ascii_strlower_n@plt+0x146b0>  // b.none
  4189c0:	b	4189c4 <ascii_strlower_n@plt+0x14564>
  4189c4:	ldr	w8, [sp, #4]
  4189c8:	cmp	w8, #0x101
  4189cc:	b.eq	419570 <ascii_strlower_n@plt+0x15110>  // b.none
  4189d0:	b	4195f8 <ascii_strlower_n@plt+0x15198>
  4189d4:	ldur	x0, [x29, #-16]
  4189d8:	ldur	x8, [x29, #-24]
  4189dc:	ldrh	w1, [x8, #80]
  4189e0:	mov	x8, xzr
  4189e4:	mov	x2, x8
  4189e8:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  4189ec:	str	w0, [sp, #32]
  4189f0:	ldr	w9, [sp, #32]
  4189f4:	cmp	w9, #0x0
  4189f8:	cset	w9, ge  // ge = tcont
  4189fc:	tbnz	w9, #0, 418a04 <ascii_strlower_n@plt+0x145a4>
  418a00:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418a04:	ldur	x0, [x29, #-16]
  418a08:	ldur	x8, [x29, #-24]
  418a0c:	ldrh	w1, [x8, #82]
  418a10:	mov	x8, xzr
  418a14:	mov	x2, x8
  418a18:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  418a1c:	str	w0, [sp, #32]
  418a20:	ldr	w9, [sp, #32]
  418a24:	cmp	w9, #0x0
  418a28:	cset	w9, ge  // ge = tcont
  418a2c:	tbnz	w9, #0, 418a34 <ascii_strlower_n@plt+0x145d4>
  418a30:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418a34:	ldur	x0, [x29, #-16]
  418a38:	ldur	x8, [x29, #-24]
  418a3c:	ldrh	w1, [x8, #84]
  418a40:	mov	x8, xzr
  418a44:	mov	x2, x8
  418a48:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  418a4c:	str	w0, [sp, #32]
  418a50:	ldr	w9, [sp, #32]
  418a54:	cmp	w9, #0x0
  418a58:	cset	w9, ge  // ge = tcont
  418a5c:	tbnz	w9, #0, 418a64 <ascii_strlower_n@plt+0x14604>
  418a60:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418a64:	ldur	x0, [x29, #-16]
  418a68:	ldur	x8, [x29, #-24]
  418a6c:	ldr	x1, [x8, #88]
  418a70:	mov	w9, wzr
  418a74:	and	w2, w9, #0x1
  418a78:	and	w3, w9, #0x1
  418a7c:	mov	x8, xzr
  418a80:	mov	x4, x8
  418a84:	bl	4179c0 <ascii_strlower_n@plt+0x13560>
  418a88:	str	w0, [sp, #32]
  418a8c:	b	41961c <ascii_strlower_n@plt+0x151bc>
  418a90:	ldur	x0, [x29, #-16]
  418a94:	ldur	x8, [x29, #-24]
  418a98:	ldr	x1, [x8, #80]
  418a9c:	mov	w9, #0x1                   	// #1
  418aa0:	and	w2, w9, #0x1
  418aa4:	mov	w9, wzr
  418aa8:	and	w3, w9, #0x1
  418aac:	mov	x8, xzr
  418ab0:	mov	x4, x8
  418ab4:	bl	4179c0 <ascii_strlower_n@plt+0x13560>
  418ab8:	str	w0, [sp, #32]
  418abc:	b	41961c <ascii_strlower_n@plt+0x151bc>
  418ac0:	ldur	x0, [x29, #-16]
  418ac4:	ldur	x8, [x29, #-24]
  418ac8:	ldr	x1, [x8, #80]
  418acc:	mov	x8, xzr
  418ad0:	mov	x2, x8
  418ad4:	bl	417580 <ascii_strlower_n@plt+0x13120>
  418ad8:	str	w0, [sp, #32]
  418adc:	ldr	w9, [sp, #32]
  418ae0:	cmp	w9, #0x0
  418ae4:	cset	w9, ge  // ge = tcont
  418ae8:	tbnz	w9, #0, 418af0 <ascii_strlower_n@plt+0x14690>
  418aec:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418af0:	ldur	x0, [x29, #-16]
  418af4:	ldur	x8, [x29, #-24]
  418af8:	ldr	x1, [x8, #88]
  418afc:	mov	x8, xzr
  418b00:	mov	x2, x8
  418b04:	bl	417580 <ascii_strlower_n@plt+0x13120>
  418b08:	str	w0, [sp, #32]
  418b0c:	b	41961c <ascii_strlower_n@plt+0x151bc>
  418b10:	ldur	x8, [x29, #-24]
  418b14:	ldr	x8, [x8, #80]
  418b18:	cbnz	x8, 418b50 <ascii_strlower_n@plt+0x146f0>
  418b1c:	ldur	x0, [x29, #-16]
  418b20:	mov	x8, xzr
  418b24:	mov	x1, x8
  418b28:	mov	x2, x8
  418b2c:	mov	x3, x8
  418b30:	bl	41768c <ascii_strlower_n@plt+0x1322c>
  418b34:	str	w0, [sp, #32]
  418b38:	ldr	w9, [sp, #32]
  418b3c:	cmp	w9, #0x0
  418b40:	cset	w9, ge  // ge = tcont
  418b44:	tbnz	w9, #0, 418b4c <ascii_strlower_n@plt+0x146ec>
  418b48:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418b4c:	b	418bac <ascii_strlower_n@plt+0x1474c>
  418b50:	ldur	x8, [x29, #-24]
  418b54:	ldr	x8, [x8, #80]
  418b58:	str	x8, [sp, #24]
  418b5c:	ldr	x8, [sp, #24]
  418b60:	cbz	x8, 418bac <ascii_strlower_n@plt+0x1474c>
  418b64:	ldur	x0, [x29, #-16]
  418b68:	ldr	x8, [sp, #24]
  418b6c:	add	x1, x8, #0x18
  418b70:	ldr	x8, [sp, #24]
  418b74:	ldr	x2, [x8]
  418b78:	mov	x8, xzr
  418b7c:	mov	x3, x8
  418b80:	bl	41768c <ascii_strlower_n@plt+0x1322c>
  418b84:	str	w0, [sp, #32]
  418b88:	ldr	w9, [sp, #32]
  418b8c:	cmp	w9, #0x0
  418b90:	cset	w9, ge  // ge = tcont
  418b94:	tbnz	w9, #0, 418b9c <ascii_strlower_n@plt+0x1473c>
  418b98:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418b9c:	ldr	x8, [sp, #24]
  418ba0:	ldr	x8, [x8, #8]
  418ba4:	str	x8, [sp, #24]
  418ba8:	b	418b5c <ascii_strlower_n@plt+0x146fc>
  418bac:	str	wzr, [sp, #32]
  418bb0:	b	41961c <ascii_strlower_n@plt+0x151bc>
  418bb4:	ldur	x0, [x29, #-16]
  418bb8:	ldur	x8, [x29, #-24]
  418bbc:	add	x1, x8, #0x50
  418bc0:	mov	x2, #0x4                   	// #4
  418bc4:	mov	x8, xzr
  418bc8:	mov	x3, x8
  418bcc:	bl	416ed8 <ascii_strlower_n@plt+0x12a78>
  418bd0:	str	w0, [sp, #32]
  418bd4:	b	41961c <ascii_strlower_n@plt+0x151bc>
  418bd8:	ldur	x0, [x29, #-16]
  418bdc:	ldur	x8, [x29, #-24]
  418be0:	add	x1, x8, #0x50
  418be4:	mov	x2, #0x10                  	// #16
  418be8:	mov	x8, xzr
  418bec:	mov	x3, x8
  418bf0:	bl	416ed8 <ascii_strlower_n@plt+0x12a78>
  418bf4:	str	w0, [sp, #32]
  418bf8:	b	41961c <ascii_strlower_n@plt+0x151bc>
  418bfc:	ldur	x0, [x29, #-16]
  418c00:	ldur	x8, [x29, #-24]
  418c04:	ldr	x1, [x8, #80]
  418c08:	mov	w9, #0x1                   	// #1
  418c0c:	and	w2, w9, #0x1
  418c10:	mov	w9, wzr
  418c14:	and	w3, w9, #0x1
  418c18:	mov	x8, xzr
  418c1c:	mov	x4, x8
  418c20:	bl	4179c0 <ascii_strlower_n@plt+0x13560>
  418c24:	str	w0, [sp, #32]
  418c28:	ldr	w9, [sp, #32]
  418c2c:	cmp	w9, #0x0
  418c30:	cset	w9, ge  // ge = tcont
  418c34:	tbnz	w9, #0, 418c3c <ascii_strlower_n@plt+0x147dc>
  418c38:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418c3c:	ldur	x0, [x29, #-16]
  418c40:	ldur	x8, [x29, #-24]
  418c44:	ldr	x1, [x8, #88]
  418c48:	mov	w9, #0x1                   	// #1
  418c4c:	and	w2, w9, #0x1
  418c50:	mov	w9, wzr
  418c54:	and	w3, w9, #0x1
  418c58:	mov	x8, xzr
  418c5c:	mov	x4, x8
  418c60:	bl	4179c0 <ascii_strlower_n@plt+0x13560>
  418c64:	str	w0, [sp, #32]
  418c68:	ldr	w9, [sp, #32]
  418c6c:	cmp	w9, #0x0
  418c70:	cset	w9, ge  // ge = tcont
  418c74:	tbnz	w9, #0, 418c7c <ascii_strlower_n@plt+0x1481c>
  418c78:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418c7c:	ldur	x0, [x29, #-16]
  418c80:	ldur	x8, [x29, #-24]
  418c84:	ldr	w1, [x8, #96]
  418c88:	mov	x8, xzr
  418c8c:	mov	x2, x8
  418c90:	bl	41747c <ascii_strlower_n@plt+0x1301c>
  418c94:	str	w0, [sp, #32]
  418c98:	ldr	w9, [sp, #32]
  418c9c:	cmp	w9, #0x0
  418ca0:	cset	w9, ge  // ge = tcont
  418ca4:	tbnz	w9, #0, 418cac <ascii_strlower_n@plt+0x1484c>
  418ca8:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418cac:	ldur	x0, [x29, #-16]
  418cb0:	ldur	x8, [x29, #-24]
  418cb4:	ldr	w1, [x8, #100]
  418cb8:	mov	x8, xzr
  418cbc:	mov	x2, x8
  418cc0:	bl	41747c <ascii_strlower_n@plt+0x1301c>
  418cc4:	str	w0, [sp, #32]
  418cc8:	ldr	w9, [sp, #32]
  418ccc:	cmp	w9, #0x0
  418cd0:	cset	w9, ge  // ge = tcont
  418cd4:	tbnz	w9, #0, 418cdc <ascii_strlower_n@plt+0x1487c>
  418cd8:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418cdc:	ldur	x0, [x29, #-16]
  418ce0:	ldur	x8, [x29, #-24]
  418ce4:	ldr	w1, [x8, #104]
  418ce8:	mov	x8, xzr
  418cec:	mov	x2, x8
  418cf0:	bl	41747c <ascii_strlower_n@plt+0x1301c>
  418cf4:	str	w0, [sp, #32]
  418cf8:	ldr	w9, [sp, #32]
  418cfc:	cmp	w9, #0x0
  418d00:	cset	w9, ge  // ge = tcont
  418d04:	tbnz	w9, #0, 418d0c <ascii_strlower_n@plt+0x148ac>
  418d08:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418d0c:	ldur	x0, [x29, #-16]
  418d10:	ldur	x8, [x29, #-24]
  418d14:	ldr	w1, [x8, #108]
  418d18:	mov	x8, xzr
  418d1c:	mov	x2, x8
  418d20:	bl	41747c <ascii_strlower_n@plt+0x1301c>
  418d24:	str	w0, [sp, #32]
  418d28:	ldr	w9, [sp, #32]
  418d2c:	cmp	w9, #0x0
  418d30:	cset	w9, ge  // ge = tcont
  418d34:	tbnz	w9, #0, 418d3c <ascii_strlower_n@plt+0x148dc>
  418d38:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418d3c:	ldur	x0, [x29, #-16]
  418d40:	ldur	x8, [x29, #-24]
  418d44:	ldr	w1, [x8, #112]
  418d48:	mov	x8, xzr
  418d4c:	mov	x2, x8
  418d50:	bl	41747c <ascii_strlower_n@plt+0x1301c>
  418d54:	str	w0, [sp, #32]
  418d58:	b	41961c <ascii_strlower_n@plt+0x151bc>
  418d5c:	ldur	x0, [x29, #-16]
  418d60:	ldur	x8, [x29, #-24]
  418d64:	ldrh	w1, [x8, #80]
  418d68:	mov	x8, xzr
  418d6c:	mov	x2, x8
  418d70:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  418d74:	str	w0, [sp, #32]
  418d78:	ldr	w9, [sp, #32]
  418d7c:	cmp	w9, #0x0
  418d80:	cset	w9, ge  // ge = tcont
  418d84:	tbnz	w9, #0, 418d8c <ascii_strlower_n@plt+0x1492c>
  418d88:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418d8c:	ldur	x0, [x29, #-16]
  418d90:	ldur	x8, [x29, #-24]
  418d94:	ldr	x1, [x8, #88]
  418d98:	mov	w9, #0x1                   	// #1
  418d9c:	and	w2, w9, #0x1
  418da0:	mov	w9, wzr
  418da4:	and	w3, w9, #0x1
  418da8:	mov	x8, xzr
  418dac:	mov	x4, x8
  418db0:	bl	4179c0 <ascii_strlower_n@plt+0x13560>
  418db4:	str	w0, [sp, #32]
  418db8:	b	41961c <ascii_strlower_n@plt+0x151bc>
  418dbc:	ldur	x0, [x29, #-16]
  418dc0:	ldur	x8, [x29, #-24]
  418dc4:	ldrb	w1, [x8, #80]
  418dc8:	mov	x8, xzr
  418dcc:	mov	x2, x8
  418dd0:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  418dd4:	str	w0, [sp, #32]
  418dd8:	ldr	w9, [sp, #32]
  418ddc:	cmp	w9, #0x0
  418de0:	cset	w9, ge  // ge = tcont
  418de4:	tbnz	w9, #0, 418dec <ascii_strlower_n@plt+0x1498c>
  418de8:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418dec:	ldur	x0, [x29, #-16]
  418df0:	ldur	x8, [x29, #-24]
  418df4:	ldrb	w1, [x8, #81]
  418df8:	mov	x8, xzr
  418dfc:	mov	x2, x8
  418e00:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  418e04:	str	w0, [sp, #32]
  418e08:	ldr	w9, [sp, #32]
  418e0c:	cmp	w9, #0x0
  418e10:	cset	w9, ge  // ge = tcont
  418e14:	tbnz	w9, #0, 418e1c <ascii_strlower_n@plt+0x149bc>
  418e18:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418e1c:	ldur	x0, [x29, #-16]
  418e20:	ldur	x8, [x29, #-24]
  418e24:	ldrb	w1, [x8, #82]
  418e28:	mov	x8, xzr
  418e2c:	mov	x2, x8
  418e30:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  418e34:	str	w0, [sp, #32]
  418e38:	ldr	w9, [sp, #32]
  418e3c:	cmp	w9, #0x0
  418e40:	cset	w9, ge  // ge = tcont
  418e44:	tbnz	w9, #0, 418e4c <ascii_strlower_n@plt+0x149ec>
  418e48:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418e4c:	ldur	x0, [x29, #-16]
  418e50:	ldur	x8, [x29, #-24]
  418e54:	ldrb	w1, [x8, #83]
  418e58:	mov	x8, xzr
  418e5c:	mov	x2, x8
  418e60:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  418e64:	str	w0, [sp, #32]
  418e68:	ldr	w9, [sp, #32]
  418e6c:	cmp	w9, #0x0
  418e70:	cset	w9, ge  // ge = tcont
  418e74:	tbnz	w9, #0, 418e7c <ascii_strlower_n@plt+0x14a1c>
  418e78:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418e7c:	ldur	x0, [x29, #-16]
  418e80:	ldur	x8, [x29, #-24]
  418e84:	ldr	w1, [x8, #84]
  418e88:	mov	x8, xzr
  418e8c:	mov	x2, x8
  418e90:	bl	41747c <ascii_strlower_n@plt+0x1301c>
  418e94:	str	w0, [sp, #32]
  418e98:	ldr	w9, [sp, #32]
  418e9c:	cmp	w9, #0x0
  418ea0:	cset	w9, ge  // ge = tcont
  418ea4:	tbnz	w9, #0, 418eac <ascii_strlower_n@plt+0x14a4c>
  418ea8:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418eac:	ldur	x0, [x29, #-16]
  418eb0:	ldur	x8, [x29, #-24]
  418eb4:	ldr	w1, [x8, #88]
  418eb8:	mov	x8, xzr
  418ebc:	mov	x2, x8
  418ec0:	bl	41747c <ascii_strlower_n@plt+0x1301c>
  418ec4:	str	w0, [sp, #32]
  418ec8:	ldr	w9, [sp, #32]
  418ecc:	cmp	w9, #0x0
  418ed0:	cset	w9, ge  // ge = tcont
  418ed4:	tbnz	w9, #0, 418edc <ascii_strlower_n@plt+0x14a7c>
  418ed8:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418edc:	ldur	x0, [x29, #-16]
  418ee0:	ldur	x8, [x29, #-24]
  418ee4:	ldr	w1, [x8, #92]
  418ee8:	mov	x8, xzr
  418eec:	mov	x2, x8
  418ef0:	bl	41747c <ascii_strlower_n@plt+0x1301c>
  418ef4:	str	w0, [sp, #32]
  418ef8:	b	41961c <ascii_strlower_n@plt+0x151bc>
  418efc:	ldur	x0, [x29, #-16]
  418f00:	ldur	x8, [x29, #-24]
  418f04:	ldrh	w1, [x8, #80]
  418f08:	mov	x8, xzr
  418f0c:	mov	x2, x8
  418f10:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  418f14:	str	w0, [sp, #32]
  418f18:	ldr	w9, [sp, #32]
  418f1c:	cmp	w9, #0x0
  418f20:	cset	w9, ge  // ge = tcont
  418f24:	tbnz	w9, #0, 418f2c <ascii_strlower_n@plt+0x14acc>
  418f28:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418f2c:	ldur	x0, [x29, #-16]
  418f30:	ldur	x8, [x29, #-24]
  418f34:	ldrb	w1, [x8, #82]
  418f38:	mov	x8, xzr
  418f3c:	mov	x2, x8
  418f40:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  418f44:	str	w0, [sp, #32]
  418f48:	ldr	w9, [sp, #32]
  418f4c:	cmp	w9, #0x0
  418f50:	cset	w9, ge  // ge = tcont
  418f54:	tbnz	w9, #0, 418f5c <ascii_strlower_n@plt+0x14afc>
  418f58:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418f5c:	ldur	x0, [x29, #-16]
  418f60:	ldur	x8, [x29, #-24]
  418f64:	ldrb	w1, [x8, #83]
  418f68:	mov	x8, xzr
  418f6c:	mov	x2, x8
  418f70:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  418f74:	str	w0, [sp, #32]
  418f78:	ldr	w9, [sp, #32]
  418f7c:	cmp	w9, #0x0
  418f80:	cset	w9, ge  // ge = tcont
  418f84:	tbnz	w9, #0, 418f8c <ascii_strlower_n@plt+0x14b2c>
  418f88:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418f8c:	ldur	x0, [x29, #-16]
  418f90:	ldur	x8, [x29, #-24]
  418f94:	ldr	x1, [x8, #88]
  418f98:	ldur	x8, [x29, #-24]
  418f9c:	ldr	x2, [x8, #96]
  418fa0:	mov	x8, xzr
  418fa4:	mov	x3, x8
  418fa8:	bl	416ed8 <ascii_strlower_n@plt+0x12a78>
  418fac:	str	w0, [sp, #32]
  418fb0:	b	41961c <ascii_strlower_n@plt+0x151bc>
  418fb4:	ldur	x0, [x29, #-16]
  418fb8:	ldur	x8, [x29, #-24]
  418fbc:	ldrb	w1, [x8, #80]
  418fc0:	mov	x8, xzr
  418fc4:	mov	x2, x8
  418fc8:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  418fcc:	str	w0, [sp, #32]
  418fd0:	ldr	w9, [sp, #32]
  418fd4:	cmp	w9, #0x0
  418fd8:	cset	w9, ge  // ge = tcont
  418fdc:	tbnz	w9, #0, 418fe4 <ascii_strlower_n@plt+0x14b84>
  418fe0:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  418fe4:	ldur	x0, [x29, #-16]
  418fe8:	ldur	x8, [x29, #-24]
  418fec:	ldrb	w1, [x8, #81]
  418ff0:	mov	x8, xzr
  418ff4:	mov	x2, x8
  418ff8:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  418ffc:	str	w0, [sp, #32]
  419000:	ldr	w9, [sp, #32]
  419004:	cmp	w9, #0x0
  419008:	cset	w9, ge  // ge = tcont
  41900c:	tbnz	w9, #0, 419014 <ascii_strlower_n@plt+0x14bb4>
  419010:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  419014:	ldur	x0, [x29, #-16]
  419018:	ldur	x8, [x29, #-24]
  41901c:	ldr	x1, [x8, #88]
  419020:	ldur	x8, [x29, #-24]
  419024:	ldr	x2, [x8, #96]
  419028:	mov	x8, xzr
  41902c:	mov	x3, x8
  419030:	bl	416ed8 <ascii_strlower_n@plt+0x12a78>
  419034:	str	w0, [sp, #32]
  419038:	b	41961c <ascii_strlower_n@plt+0x151bc>
  41903c:	ldur	x0, [x29, #-16]
  419040:	ldur	x8, [x29, #-24]
  419044:	ldrh	w1, [x8, #80]
  419048:	mov	x8, xzr
  41904c:	mov	x2, x8
  419050:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  419054:	str	w0, [sp, #32]
  419058:	ldr	w9, [sp, #32]
  41905c:	cmp	w9, #0x0
  419060:	cset	w9, ge  // ge = tcont
  419064:	tbnz	w9, #0, 41906c <ascii_strlower_n@plt+0x14c0c>
  419068:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  41906c:	ldur	x0, [x29, #-16]
  419070:	ldur	x8, [x29, #-24]
  419074:	ldrb	w1, [x8, #82]
  419078:	mov	x8, xzr
  41907c:	mov	x2, x8
  419080:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  419084:	str	w0, [sp, #32]
  419088:	ldr	w9, [sp, #32]
  41908c:	cmp	w9, #0x0
  419090:	cset	w9, ge  // ge = tcont
  419094:	tbnz	w9, #0, 41909c <ascii_strlower_n@plt+0x14c3c>
  419098:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  41909c:	ldur	x0, [x29, #-16]
  4190a0:	ldur	x8, [x29, #-24]
  4190a4:	ldrb	w1, [x8, #83]
  4190a8:	mov	x8, xzr
  4190ac:	mov	x2, x8
  4190b0:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  4190b4:	str	w0, [sp, #32]
  4190b8:	ldr	w9, [sp, #32]
  4190bc:	cmp	w9, #0x0
  4190c0:	cset	w9, ge  // ge = tcont
  4190c4:	tbnz	w9, #0, 4190cc <ascii_strlower_n@plt+0x14c6c>
  4190c8:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  4190cc:	ldur	x0, [x29, #-16]
  4190d0:	ldur	x8, [x29, #-24]
  4190d4:	ldr	x1, [x8, #88]
  4190d8:	ldur	x8, [x29, #-24]
  4190dc:	ldr	x2, [x8, #96]
  4190e0:	mov	x8, xzr
  4190e4:	mov	x3, x8
  4190e8:	bl	416ed8 <ascii_strlower_n@plt+0x12a78>
  4190ec:	str	w0, [sp, #32]
  4190f0:	b	41961c <ascii_strlower_n@plt+0x151bc>
  4190f4:	ldur	x0, [x29, #-16]
  4190f8:	ldur	x8, [x29, #-24]
  4190fc:	ldrh	w1, [x8, #80]
  419100:	mov	x8, xzr
  419104:	mov	x2, x8
  419108:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  41910c:	str	w0, [sp, #32]
  419110:	ldr	w9, [sp, #32]
  419114:	cmp	w9, #0x0
  419118:	cset	w9, ge  // ge = tcont
  41911c:	tbnz	w9, #0, 419124 <ascii_strlower_n@plt+0x14cc4>
  419120:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  419124:	ldur	x0, [x29, #-16]
  419128:	ldur	x8, [x29, #-24]
  41912c:	ldrb	w1, [x8, #82]
  419130:	mov	x8, xzr
  419134:	mov	x2, x8
  419138:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  41913c:	str	w0, [sp, #32]
  419140:	ldr	w9, [sp, #32]
  419144:	cmp	w9, #0x0
  419148:	cset	w9, ge  // ge = tcont
  41914c:	tbnz	w9, #0, 419154 <ascii_strlower_n@plt+0x14cf4>
  419150:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  419154:	ldur	x0, [x29, #-16]
  419158:	ldur	x8, [x29, #-24]
  41915c:	ldrb	w1, [x8, #83]
  419160:	mov	x8, xzr
  419164:	mov	x2, x8
  419168:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  41916c:	str	w0, [sp, #32]
  419170:	ldr	w9, [sp, #32]
  419174:	cmp	w9, #0x0
  419178:	cset	w9, ge  // ge = tcont
  41917c:	tbnz	w9, #0, 419184 <ascii_strlower_n@plt+0x14d24>
  419180:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  419184:	ldur	x0, [x29, #-16]
  419188:	ldur	x8, [x29, #-24]
  41918c:	ldr	w1, [x8, #84]
  419190:	mov	x8, xzr
  419194:	mov	x2, x8
  419198:	bl	41747c <ascii_strlower_n@plt+0x1301c>
  41919c:	str	w0, [sp, #32]
  4191a0:	ldr	w9, [sp, #32]
  4191a4:	cmp	w9, #0x0
  4191a8:	cset	w9, ge  // ge = tcont
  4191ac:	tbnz	w9, #0, 4191b4 <ascii_strlower_n@plt+0x14d54>
  4191b0:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  4191b4:	ldur	x0, [x29, #-16]
  4191b8:	ldur	x8, [x29, #-24]
  4191bc:	ldr	w1, [x8, #88]
  4191c0:	mov	x8, xzr
  4191c4:	mov	x2, x8
  4191c8:	bl	41747c <ascii_strlower_n@plt+0x1301c>
  4191cc:	str	w0, [sp, #32]
  4191d0:	ldr	w9, [sp, #32]
  4191d4:	cmp	w9, #0x0
  4191d8:	cset	w9, ge  // ge = tcont
  4191dc:	tbnz	w9, #0, 4191e4 <ascii_strlower_n@plt+0x14d84>
  4191e0:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  4191e4:	ldur	x0, [x29, #-16]
  4191e8:	ldur	x8, [x29, #-24]
  4191ec:	ldr	w1, [x8, #92]
  4191f0:	mov	x8, xzr
  4191f4:	mov	x2, x8
  4191f8:	bl	41747c <ascii_strlower_n@plt+0x1301c>
  4191fc:	str	w0, [sp, #32]
  419200:	ldr	w9, [sp, #32]
  419204:	cmp	w9, #0x0
  419208:	cset	w9, ge  // ge = tcont
  41920c:	tbnz	w9, #0, 419214 <ascii_strlower_n@plt+0x14db4>
  419210:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  419214:	ldur	x0, [x29, #-16]
  419218:	ldur	x8, [x29, #-24]
  41921c:	ldrh	w1, [x8, #96]
  419220:	mov	x8, xzr
  419224:	mov	x2, x8
  419228:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  41922c:	str	w0, [sp, #32]
  419230:	ldr	w9, [sp, #32]
  419234:	cmp	w9, #0x0
  419238:	cset	w9, ge  // ge = tcont
  41923c:	tbnz	w9, #0, 419244 <ascii_strlower_n@plt+0x14de4>
  419240:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  419244:	ldur	x0, [x29, #-16]
  419248:	ldur	x8, [x29, #-24]
  41924c:	ldr	x1, [x8, #104]
  419250:	mov	w9, #0x1                   	// #1
  419254:	mov	w10, wzr
  419258:	and	w2, w10, #0x1
  41925c:	and	w3, w9, #0x1
  419260:	mov	x8, xzr
  419264:	mov	x4, x8
  419268:	bl	4179c0 <ascii_strlower_n@plt+0x13560>
  41926c:	str	w0, [sp, #32]
  419270:	ldr	w9, [sp, #32]
  419274:	cmp	w9, #0x0
  419278:	cset	w9, ge  // ge = tcont
  41927c:	tbnz	w9, #0, 419284 <ascii_strlower_n@plt+0x14e24>
  419280:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  419284:	ldur	x0, [x29, #-16]
  419288:	ldur	x8, [x29, #-24]
  41928c:	ldr	x1, [x8, #112]
  419290:	ldur	x8, [x29, #-24]
  419294:	ldr	x2, [x8, #120]
  419298:	mov	x8, xzr
  41929c:	mov	x3, x8
  4192a0:	bl	416ed8 <ascii_strlower_n@plt+0x12a78>
  4192a4:	str	w0, [sp, #32]
  4192a8:	b	41961c <ascii_strlower_n@plt+0x151bc>
  4192ac:	ldur	x0, [x29, #-16]
  4192b0:	ldur	x8, [x29, #-24]
  4192b4:	ldr	x1, [x8, #80]
  4192b8:	mov	w9, wzr
  4192bc:	and	w2, w9, #0x1
  4192c0:	and	w3, w9, #0x1
  4192c4:	mov	x8, xzr
  4192c8:	mov	x4, x8
  4192cc:	bl	4179c0 <ascii_strlower_n@plt+0x13560>
  4192d0:	str	w0, [sp, #32]
  4192d4:	ldr	w9, [sp, #32]
  4192d8:	cmp	w9, #0x0
  4192dc:	cset	w9, ge  // ge = tcont
  4192e0:	tbnz	w9, #0, 4192e8 <ascii_strlower_n@plt+0x14e88>
  4192e4:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  4192e8:	ldur	x0, [x29, #-16]
  4192ec:	ldur	x8, [x29, #-24]
  4192f0:	ldr	x1, [x8, #88]
  4192f4:	mov	x8, xzr
  4192f8:	mov	x2, x8
  4192fc:	bl	41970c <ascii_strlower_n@plt+0x152ac>
  419300:	str	w0, [sp, #32]
  419304:	ldr	w9, [sp, #32]
  419308:	cmp	w9, #0x0
  41930c:	cset	w9, ge  // ge = tcont
  419310:	tbnz	w9, #0, 419318 <ascii_strlower_n@plt+0x14eb8>
  419314:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  419318:	b	41961c <ascii_strlower_n@plt+0x151bc>
  41931c:	ldur	x0, [x29, #-16]
  419320:	ldur	x8, [x29, #-24]
  419324:	ldrb	w1, [x8, #80]
  419328:	mov	x8, xzr
  41932c:	mov	x2, x8
  419330:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  419334:	str	w0, [sp, #32]
  419338:	ldr	w9, [sp, #32]
  41933c:	cmp	w9, #0x0
  419340:	cset	w9, ge  // ge = tcont
  419344:	tbnz	w9, #0, 41934c <ascii_strlower_n@plt+0x14eec>
  419348:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  41934c:	ldur	x0, [x29, #-16]
  419350:	ldur	x8, [x29, #-24]
  419354:	ldrb	w1, [x8, #81]
  419358:	mov	x8, xzr
  41935c:	mov	x2, x8
  419360:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  419364:	str	w0, [sp, #32]
  419368:	ldr	w9, [sp, #32]
  41936c:	cmp	w9, #0x0
  419370:	cset	w9, ge  // ge = tcont
  419374:	tbnz	w9, #0, 41937c <ascii_strlower_n@plt+0x14f1c>
  419378:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  41937c:	ldur	x0, [x29, #-16]
  419380:	ldur	x8, [x29, #-24]
  419384:	ldrh	w1, [x8, #82]
  419388:	mov	x8, xzr
  41938c:	mov	x2, x8
  419390:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  419394:	str	w0, [sp, #32]
  419398:	ldr	w9, [sp, #32]
  41939c:	cmp	w9, #0x0
  4193a0:	cset	w9, ge  // ge = tcont
  4193a4:	tbnz	w9, #0, 4193ac <ascii_strlower_n@plt+0x14f4c>
  4193a8:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  4193ac:	ldur	x0, [x29, #-16]
  4193b0:	ldur	x8, [x29, #-24]
  4193b4:	ldr	x8, [x8, #96]
  4193b8:	mov	w1, w8
  4193bc:	mov	x9, xzr
  4193c0:	mov	x2, x9
  4193c4:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  4193c8:	str	w0, [sp, #32]
  4193cc:	ldr	w8, [sp, #32]
  4193d0:	cmp	w8, #0x0
  4193d4:	cset	w8, ge  // ge = tcont
  4193d8:	tbnz	w8, #0, 4193e0 <ascii_strlower_n@plt+0x14f80>
  4193dc:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  4193e0:	ldur	x0, [x29, #-16]
  4193e4:	ldur	x8, [x29, #-24]
  4193e8:	ldr	x1, [x8, #88]
  4193ec:	ldur	x8, [x29, #-24]
  4193f0:	ldr	x2, [x8, #96]
  4193f4:	mov	x8, xzr
  4193f8:	mov	x3, x8
  4193fc:	bl	416ed8 <ascii_strlower_n@plt+0x12a78>
  419400:	str	w0, [sp, #32]
  419404:	ldr	w9, [sp, #32]
  419408:	cmp	w9, #0x0
  41940c:	cset	w9, ge  // ge = tcont
  419410:	tbnz	w9, #0, 419418 <ascii_strlower_n@plt+0x14fb8>
  419414:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  419418:	ldur	x0, [x29, #-16]
  41941c:	ldur	x8, [x29, #-24]
  419420:	ldr	x8, [x8, #112]
  419424:	mov	w1, w8
  419428:	mov	x9, xzr
  41942c:	mov	x2, x9
  419430:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  419434:	str	w0, [sp, #32]
  419438:	ldr	w8, [sp, #32]
  41943c:	cmp	w8, #0x0
  419440:	cset	w8, ge  // ge = tcont
  419444:	tbnz	w8, #0, 41944c <ascii_strlower_n@plt+0x14fec>
  419448:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  41944c:	ldur	x0, [x29, #-16]
  419450:	ldur	x8, [x29, #-24]
  419454:	ldr	x1, [x8, #104]
  419458:	ldur	x8, [x29, #-24]
  41945c:	ldr	x2, [x8, #112]
  419460:	mov	x8, xzr
  419464:	mov	x3, x8
  419468:	bl	416ed8 <ascii_strlower_n@plt+0x12a78>
  41946c:	str	w0, [sp, #32]
  419470:	ldr	w9, [sp, #32]
  419474:	cmp	w9, #0x0
  419478:	cset	w9, ge  // ge = tcont
  41947c:	tbnz	w9, #0, 419484 <ascii_strlower_n@plt+0x15024>
  419480:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  419484:	ldur	x0, [x29, #-16]
  419488:	ldur	x8, [x29, #-24]
  41948c:	ldr	x1, [x8, #120]
  419490:	mov	x8, xzr
  419494:	mov	x2, x8
  419498:	bl	41970c <ascii_strlower_n@plt+0x152ac>
  41949c:	str	w0, [sp, #32]
  4194a0:	ldr	w9, [sp, #32]
  4194a4:	cmp	w9, #0x0
  4194a8:	cset	w9, ge  // ge = tcont
  4194ac:	tbnz	w9, #0, 4194b4 <ascii_strlower_n@plt+0x15054>
  4194b0:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  4194b4:	b	41961c <ascii_strlower_n@plt+0x151bc>
  4194b8:	ldur	x0, [x29, #-16]
  4194bc:	ldur	x8, [x29, #-24]
  4194c0:	ldrb	w1, [x8, #80]
  4194c4:	mov	x8, xzr
  4194c8:	mov	x2, x8
  4194cc:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  4194d0:	str	w0, [sp, #32]
  4194d4:	ldr	w9, [sp, #32]
  4194d8:	cmp	w9, #0x0
  4194dc:	cset	w9, ge  // ge = tcont
  4194e0:	tbnz	w9, #0, 4194e8 <ascii_strlower_n@plt+0x15088>
  4194e4:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  4194e8:	ldur	x0, [x29, #-16]
  4194ec:	ldur	x8, [x29, #-24]
  4194f0:	ldrb	w1, [x8, #81]
  4194f4:	mov	x8, xzr
  4194f8:	mov	x2, x8
  4194fc:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  419500:	str	w0, [sp, #32]
  419504:	ldr	w9, [sp, #32]
  419508:	cmp	w9, #0x0
  41950c:	cset	w9, ge  // ge = tcont
  419510:	tbnz	w9, #0, 419518 <ascii_strlower_n@plt+0x150b8>
  419514:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  419518:	ldur	x0, [x29, #-16]
  41951c:	ldur	x8, [x29, #-24]
  419520:	ldrb	w1, [x8, #82]
  419524:	mov	x8, xzr
  419528:	mov	x2, x8
  41952c:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  419530:	str	w0, [sp, #32]
  419534:	ldr	w9, [sp, #32]
  419538:	cmp	w9, #0x0
  41953c:	cset	w9, ge  // ge = tcont
  419540:	tbnz	w9, #0, 419548 <ascii_strlower_n@plt+0x150e8>
  419544:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  419548:	ldur	x0, [x29, #-16]
  41954c:	ldur	x8, [x29, #-24]
  419550:	ldr	x1, [x8, #88]
  419554:	ldur	x8, [x29, #-24]
  419558:	ldr	x2, [x8, #96]
  41955c:	mov	x8, xzr
  419560:	mov	x3, x8
  419564:	bl	416ed8 <ascii_strlower_n@plt+0x12a78>
  419568:	str	w0, [sp, #32]
  41956c:	b	41961c <ascii_strlower_n@plt+0x151bc>
  419570:	ldur	x0, [x29, #-16]
  419574:	ldur	x8, [x29, #-24]
  419578:	ldrb	w1, [x8, #80]
  41957c:	mov	x8, xzr
  419580:	mov	x2, x8
  419584:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  419588:	str	w0, [sp, #32]
  41958c:	ldr	w9, [sp, #32]
  419590:	cmp	w9, #0x0
  419594:	cset	w9, ge  // ge = tcont
  419598:	tbnz	w9, #0, 4195a0 <ascii_strlower_n@plt+0x15140>
  41959c:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  4195a0:	ldur	x0, [x29, #-16]
  4195a4:	ldur	x8, [x29, #-24]
  4195a8:	ldr	x1, [x8, #88]
  4195ac:	mov	x8, xzr
  4195b0:	mov	x2, x8
  4195b4:	bl	417580 <ascii_strlower_n@plt+0x13120>
  4195b8:	str	w0, [sp, #32]
  4195bc:	ldr	w9, [sp, #32]
  4195c0:	cmp	w9, #0x0
  4195c4:	cset	w9, ge  // ge = tcont
  4195c8:	tbnz	w9, #0, 4195d0 <ascii_strlower_n@plt+0x15170>
  4195cc:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  4195d0:	ldur	x0, [x29, #-16]
  4195d4:	ldur	x8, [x29, #-24]
  4195d8:	ldr	x1, [x8, #96]
  4195dc:	ldur	x8, [x29, #-24]
  4195e0:	ldr	x2, [x8, #104]
  4195e4:	mov	x8, xzr
  4195e8:	mov	x3, x8
  4195ec:	bl	416ed8 <ascii_strlower_n@plt+0x12a78>
  4195f0:	str	w0, [sp, #32]
  4195f4:	b	41961c <ascii_strlower_n@plt+0x151bc>
  4195f8:	ldur	x0, [x29, #-16]
  4195fc:	ldur	x8, [x29, #-24]
  419600:	ldr	x1, [x8, #80]
  419604:	ldur	x8, [x29, #-24]
  419608:	ldr	x2, [x8, #88]
  41960c:	mov	x8, xzr
  419610:	mov	x3, x8
  419614:	bl	416ed8 <ascii_strlower_n@plt+0x12a78>
  419618:	str	w0, [sp, #32]
  41961c:	ldr	w8, [sp, #32]
  419620:	cmp	w8, #0x0
  419624:	cset	w8, ge  // ge = tcont
  419628:	tbnz	w8, #0, 419630 <ascii_strlower_n@plt+0x151d0>
  41962c:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  419630:	ldur	x8, [x29, #-16]
  419634:	ldr	x8, [x8, #8]
  419638:	ldr	x9, [sp, #64]
  41963c:	subs	x8, x8, x9
  419640:	subs	x8, x8, #0x2
  419644:	str	x8, [sp, #48]
  419648:	ldr	x8, [sp, #48]
  41964c:	mov	x9, #0xffff                	// #65535
  419650:	cmp	x8, x9
  419654:	b.ls	419664 <ascii_strlower_n@plt+0x15204>  // b.plast
  419658:	mov	w8, #0xffffffe4            	// #-28
  41965c:	str	w8, [sp, #32]
  419660:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  419664:	ldur	x8, [x29, #-16]
  419668:	ldr	x8, [x8, #8]
  41966c:	str	x8, [sp, #56]
  419670:	ldr	x8, [sp, #64]
  419674:	ldur	x9, [x29, #-16]
  419678:	str	x8, [x9, #8]
  41967c:	ldur	x0, [x29, #-16]
  419680:	ldr	x8, [sp, #48]
  419684:	mov	w1, w8
  419688:	mov	x9, xzr
  41968c:	mov	x2, x9
  419690:	bl	417378 <ascii_strlower_n@plt+0x12f18>
  419694:	str	w0, [sp, #32]
  419698:	ldr	w8, [sp, #32]
  41969c:	cmp	w8, #0x0
  4196a0:	cset	w8, ge  // ge = tcont
  4196a4:	tbnz	w8, #0, 4196ac <ascii_strlower_n@plt+0x1524c>
  4196a8:	b	4196e8 <ascii_strlower_n@plt+0x15288>
  4196ac:	ldr	x8, [sp, #56]
  4196b0:	ldur	x9, [x29, #-16]
  4196b4:	str	x8, [x9, #8]
  4196b8:	ldur	x8, [x29, #-40]
  4196bc:	cbz	x8, 4196cc <ascii_strlower_n@plt+0x1526c>
  4196c0:	ldur	x8, [x29, #-56]
  4196c4:	ldur	x9, [x29, #-40]
  4196c8:	str	x8, [x9]
  4196cc:	ldur	x8, [x29, #-48]
  4196d0:	cbz	x8, 4196e0 <ascii_strlower_n@plt+0x15280>
  4196d4:	ldr	x8, [sp, #40]
  4196d8:	ldur	x9, [x29, #-48]
  4196dc:	str	x8, [x9]
  4196e0:	stur	wzr, [x29, #-4]
  4196e4:	b	4196fc <ascii_strlower_n@plt+0x1529c>
  4196e8:	ldur	x0, [x29, #-16]
  4196ec:	ldur	x1, [x29, #-56]
  4196f0:	bl	416d58 <ascii_strlower_n@plt+0x128f8>
  4196f4:	ldr	w8, [sp, #32]
  4196f8:	stur	w8, [x29, #-4]
  4196fc:	ldur	w0, [x29, #-4]
  419700:	ldp	x29, x30, [sp, #128]
  419704:	add	sp, sp, #0x90
  419708:	ret
  41970c:	sub	sp, sp, #0xa0
  419710:	stp	x29, x30, [sp, #144]
  419714:	add	x29, sp, #0x90
  419718:	mov	w8, #0x0                   	// #0
  41971c:	mov	x9, #0x20                  	// #32
  419720:	mov	w10, wzr
  419724:	adrp	x11, 430000 <ascii_strlower_n@plt+0x2bba0>
  419728:	add	x11, x11, #0xb94
  41972c:	add	x11, x11, #0x3
  419730:	add	x12, sp, #0x30
  419734:	stur	x0, [x29, #-16]
  419738:	stur	x1, [x29, #-24]
  41973c:	stur	x2, [x29, #-32]
  419740:	sturb	w8, [x29, #-49]
  419744:	sturb	w8, [x29, #-50]
  419748:	mov	x0, x12
  41974c:	mov	w1, w10
  419750:	mov	x2, x9
  419754:	str	x11, [sp, #8]
  419758:	bl	403cb0 <memset@plt>
  41975c:	ldur	x8, [x29, #-16]
  419760:	cmp	x8, #0x0
  419764:	cset	w9, ne  // ne = any
  419768:	mov	w10, #0x1                   	// #1
  41976c:	eor	w9, w9, #0x1
  419770:	eor	w9, w9, w10
  419774:	eor	w9, w9, w10
  419778:	and	w9, w9, #0x1
  41977c:	mov	w0, w9
  419780:	sxtw	x8, w0
  419784:	cbz	x8, 4197ac <ascii_strlower_n@plt+0x1534c>
  419788:	mov	w8, wzr
  41978c:	mov	w0, w8
  419790:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  419794:	add	x1, x1, #0xc51
  419798:	ldr	x2, [sp, #8]
  41979c:	mov	w3, #0x291                 	// #657
  4197a0:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  4197a4:	add	x4, x4, #0x6c1
  4197a8:	bl	4039d0 <log_assert_failed_realm@plt>
  4197ac:	ldur	x8, [x29, #-16]
  4197b0:	ldr	x8, [x8, #8]
  4197b4:	str	x8, [sp, #32]
  4197b8:	stur	wzr, [x29, #-48]
  4197bc:	ldur	x0, [x29, #-24]
  4197c0:	sub	x1, x29, #0x30
  4197c4:	add	x2, sp, #0x2c
  4197c8:	bl	404180 <bitmap_iterate@plt>
  4197cc:	tbnz	w0, #0, 4197d4 <ascii_strlower_n@plt+0x15374>
  4197d0:	b	419928 <ascii_strlower_n@plt+0x154c8>
  4197d4:	ldr	w8, [sp, #44]
  4197d8:	mov	w9, #0xffff                	// #65535
  4197dc:	cmp	w8, w9
  4197e0:	cset	w8, ls  // ls = plast
  4197e4:	mov	w9, #0x1                   	// #1
  4197e8:	eor	w8, w8, #0x1
  4197ec:	eor	w8, w8, w9
  4197f0:	eor	w8, w8, w9
  4197f4:	and	w8, w8, #0x1
  4197f8:	mov	w0, w8
  4197fc:	sxtw	x10, w0
  419800:	cbz	x10, 419828 <ascii_strlower_n@plt+0x153c8>
  419804:	mov	w8, wzr
  419808:	mov	w0, w8
  41980c:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  419810:	add	x1, x1, #0x6fe
  419814:	ldr	x2, [sp, #8]
  419818:	mov	w3, #0x296                 	// #662
  41981c:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  419820:	add	x4, x4, #0x6c1
  419824:	bl	4039d0 <log_assert_failed_realm@plt>
  419828:	ldr	w8, [sp, #44]
  41982c:	lsr	w8, w8, #8
  419830:	ldurb	w9, [x29, #-49]
  419834:	cmp	w8, w9
  419838:	b.eq	4198c4 <ascii_strlower_n@plt+0x15464>  // b.none
  41983c:	ldurb	w8, [x29, #-50]
  419840:	mov	w9, #0x8                   	// #8
  419844:	sdiv	w8, w8, w9
  419848:	add	x10, sp, #0x30
  41984c:	ldrb	w8, [x10, w8, sxtw]
  419850:	cbz	w8, 4198c4 <ascii_strlower_n@plt+0x15464>
  419854:	ldur	x0, [x29, #-16]
  419858:	ldurb	w1, [x29, #-49]
  41985c:	ldurb	w8, [x29, #-50]
  419860:	mov	w9, #0x8                   	// #8
  419864:	sdiv	w8, w8, w9
  419868:	add	w8, w8, #0x1
  41986c:	mov	w2, w8
  419870:	add	x3, sp, #0x30
  419874:	mov	x10, xzr
  419878:	mov	x4, x10
  41987c:	bl	41db6c <ascii_strlower_n@plt+0x1970c>
  419880:	str	w0, [sp, #28]
  419884:	ldr	w8, [sp, #28]
  419888:	cmp	w8, #0x0
  41988c:	cset	w8, ge  // ge = tcont
  419890:	tbnz	w8, #0, 419898 <ascii_strlower_n@plt+0x15438>
  419894:	b	4199a0 <ascii_strlower_n@plt+0x15540>
  419898:	mov	x8, #0x20                  	// #32
  41989c:	str	x8, [sp, #16]
  4198a0:	ldr	x8, [sp, #16]
  4198a4:	cmp	x8, #0x0
  4198a8:	cset	w9, ls  // ls = plast
  4198ac:	tbnz	w9, #0, 4198c4 <ascii_strlower_n@plt+0x15464>
  4198b0:	ldr	x2, [sp, #16]
  4198b4:	add	x0, sp, #0x30
  4198b8:	mov	w8, wzr
  4198bc:	mov	w1, w8
  4198c0:	bl	403cb0 <memset@plt>
  4198c4:	ldr	w8, [sp, #44]
  4198c8:	lsr	w8, w8, #8
  4198cc:	sturb	w8, [x29, #-49]
  4198d0:	ldr	w8, [sp, #44]
  4198d4:	and	w8, w8, #0xff
  4198d8:	sturb	w8, [x29, #-50]
  4198dc:	ldurb	w8, [x29, #-50]
  4198e0:	mov	w9, #0x8                   	// #8
  4198e4:	sdiv	w10, w8, w9
  4198e8:	mul	w10, w10, w9
  4198ec:	subs	w8, w8, w10
  4198f0:	mov	w10, #0x7                   	// #7
  4198f4:	subs	w8, w10, w8
  4198f8:	mov	w10, #0x1                   	// #1
  4198fc:	lsl	w8, w10, w8
  419900:	ldurb	w10, [x29, #-50]
  419904:	sdiv	w9, w10, w9
  419908:	mov	w0, w9
  41990c:	sxtw	x11, w0
  419910:	add	x12, sp, #0x30
  419914:	add	x11, x12, x11
  419918:	ldrb	w9, [x11]
  41991c:	orr	w8, w9, w8
  419920:	strb	w8, [x11]
  419924:	b	4197bc <ascii_strlower_n@plt+0x1535c>
  419928:	ldurb	w8, [x29, #-50]
  41992c:	mov	w9, #0x8                   	// #8
  419930:	sdiv	w8, w8, w9
  419934:	add	x10, sp, #0x30
  419938:	ldrb	w8, [x10, w8, sxtw]
  41993c:	cbz	w8, 419984 <ascii_strlower_n@plt+0x15524>
  419940:	ldur	x0, [x29, #-16]
  419944:	ldurb	w1, [x29, #-49]
  419948:	ldurb	w8, [x29, #-50]
  41994c:	mov	w9, #0x8                   	// #8
  419950:	sdiv	w8, w8, w9
  419954:	add	w8, w8, #0x1
  419958:	mov	w2, w8
  41995c:	add	x3, sp, #0x30
  419960:	mov	x10, xzr
  419964:	mov	x4, x10
  419968:	bl	41db6c <ascii_strlower_n@plt+0x1970c>
  41996c:	str	w0, [sp, #28]
  419970:	ldr	w8, [sp, #28]
  419974:	cmp	w8, #0x0
  419978:	cset	w8, ge  // ge = tcont
  41997c:	tbnz	w8, #0, 419984 <ascii_strlower_n@plt+0x15524>
  419980:	b	4199a0 <ascii_strlower_n@plt+0x15540>
  419984:	ldur	x8, [x29, #-32]
  419988:	cbz	x8, 419998 <ascii_strlower_n@plt+0x15538>
  41998c:	ldr	x8, [sp, #32]
  419990:	ldur	x9, [x29, #-32]
  419994:	str	x8, [x9]
  419998:	stur	wzr, [x29, #-4]
  41999c:	b	4199b4 <ascii_strlower_n@plt+0x15554>
  4199a0:	ldur	x0, [x29, #-16]
  4199a4:	ldr	x1, [sp, #32]
  4199a8:	bl	416d58 <ascii_strlower_n@plt+0x128f8>
  4199ac:	ldr	w8, [sp, #28]
  4199b0:	stur	w8, [x29, #-4]
  4199b4:	ldur	w0, [x29, #-4]
  4199b8:	ldp	x29, x30, [sp, #144]
  4199bc:	add	sp, sp, #0xa0
  4199c0:	ret
  4199c4:	sub	sp, sp, #0x70
  4199c8:	stp	x29, x30, [sp, #96]
  4199cc:	add	x29, sp, #0x60
  4199d0:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  4199d4:	add	x8, x8, #0xb94
  4199d8:	add	x2, x8, #0x3
  4199dc:	stur	x0, [x29, #-16]
  4199e0:	stur	x1, [x29, #-24]
  4199e4:	str	x2, [sp, #32]
  4199e8:	ldur	x8, [x29, #-16]
  4199ec:	cmp	x8, #0x0
  4199f0:	cset	w9, ne  // ne = any
  4199f4:	mov	w10, #0x1                   	// #1
  4199f8:	eor	w9, w9, #0x1
  4199fc:	eor	w9, w9, w10
  419a00:	eor	w9, w9, w10
  419a04:	and	w9, w9, #0x1
  419a08:	mov	w0, w9
  419a0c:	sxtw	x8, w0
  419a10:	cbz	x8, 419a38 <ascii_strlower_n@plt+0x155d8>
  419a14:	mov	w8, wzr
  419a18:	mov	w0, w8
  419a1c:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  419a20:	add	x1, x1, #0xc51
  419a24:	ldr	x2, [sp, #32]
  419a28:	mov	w3, #0x490                 	// #1168
  419a2c:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  419a30:	add	x4, x4, #0x212
  419a34:	bl	4039d0 <log_assert_failed_realm@plt>
  419a38:	ldur	x8, [x29, #-24]
  419a3c:	cbz	x8, 419a64 <ascii_strlower_n@plt+0x15604>
  419a40:	ldur	x8, [x29, #-24]
  419a44:	ldr	x8, [x8, #8]
  419a48:	cmp	x8, #0x0
  419a4c:	cset	w9, ls  // ls = plast
  419a50:	tbnz	w9, #0, 419a64 <ascii_strlower_n@plt+0x15604>
  419a54:	ldur	x8, [x29, #-24]
  419a58:	ldr	x8, [x8, #24]
  419a5c:	str	x8, [sp, #24]
  419a60:	b	419a6c <ascii_strlower_n@plt+0x1560c>
  419a64:	mov	x8, xzr
  419a68:	str	x8, [sp, #24]
  419a6c:	ldr	x8, [sp, #24]
  419a70:	stur	x8, [x29, #-32]
  419a74:	str	wzr, [sp, #44]
  419a78:	ldrsw	x8, [sp, #44]
  419a7c:	str	x8, [sp, #48]
  419a80:	ldur	x8, [x29, #-24]
  419a84:	mov	w9, #0x0                   	// #0
  419a88:	str	w9, [sp, #20]
  419a8c:	cbz	x8, 419aa8 <ascii_strlower_n@plt+0x15648>
  419a90:	ldr	x8, [sp, #48]
  419a94:	ldur	x9, [x29, #-24]
  419a98:	ldr	x9, [x9, #8]
  419a9c:	cmp	x8, x9
  419aa0:	cset	w10, cc  // cc = lo, ul, last
  419aa4:	str	w10, [sp, #20]
  419aa8:	ldr	w8, [sp, #20]
  419aac:	tbnz	w8, #0, 419ab4 <ascii_strlower_n@plt+0x15654>
  419ab0:	b	419b48 <ascii_strlower_n@plt+0x156e8>
  419ab4:	ldur	x0, [x29, #-16]
  419ab8:	ldur	x1, [x29, #-32]
  419abc:	mov	w8, wzr
  419ac0:	mov	w2, w8
  419ac4:	mov	x9, xzr
  419ac8:	mov	x3, x9
  419acc:	bl	417df0 <ascii_strlower_n@plt+0x13990>
  419ad0:	stur	w0, [x29, #-36]
  419ad4:	ldur	w8, [x29, #-36]
  419ad8:	cmp	w8, #0x0
  419adc:	cset	w8, ge  // ge = tcont
  419ae0:	tbnz	w8, #0, 419af0 <ascii_strlower_n@plt+0x15690>
  419ae4:	ldur	w8, [x29, #-36]
  419ae8:	stur	w8, [x29, #-4]
  419aec:	b	419b4c <ascii_strlower_n@plt+0x156ec>
  419af0:	ldr	x8, [sp, #48]
  419af4:	add	x8, x8, #0x1
  419af8:	str	x8, [sp, #48]
  419afc:	ldr	x8, [sp, #48]
  419b00:	ldur	x9, [x29, #-24]
  419b04:	ldr	x9, [x9, #8]
  419b08:	cmp	x8, x9
  419b0c:	b.cs	419b34 <ascii_strlower_n@plt+0x156d4>  // b.hs, b.nlast
  419b10:	ldur	x8, [x29, #-24]
  419b14:	add	x8, x8, #0x18
  419b18:	ldr	x9, [sp, #48]
  419b1c:	mov	x10, #0x8                   	// #8
  419b20:	mul	x9, x10, x9
  419b24:	add	x8, x8, x9
  419b28:	ldr	x8, [x8]
  419b2c:	str	x8, [sp, #8]
  419b30:	b	419b3c <ascii_strlower_n@plt+0x156dc>
  419b34:	mov	x8, xzr
  419b38:	str	x8, [sp, #8]
  419b3c:	ldr	x8, [sp, #8]
  419b40:	stur	x8, [x29, #-32]
  419b44:	b	419a80 <ascii_strlower_n@plt+0x15620>
  419b48:	stur	wzr, [x29, #-4]
  419b4c:	ldur	w0, [x29, #-4]
  419b50:	ldp	x29, x30, [sp, #96]
  419b54:	add	sp, sp, #0x70
  419b58:	ret
  419b5c:	sub	sp, sp, #0x70
  419b60:	stp	x29, x30, [sp, #96]
  419b64:	add	x29, sp, #0x60
  419b68:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  419b6c:	add	x8, x8, #0xb94
  419b70:	add	x2, x8, #0x3
  419b74:	stur	x0, [x29, #-16]
  419b78:	stur	x1, [x29, #-24]
  419b7c:	str	x2, [sp, #32]
  419b80:	ldur	x8, [x29, #-16]
  419b84:	cmp	x8, #0x0
  419b88:	cset	w9, ne  // ne = any
  419b8c:	mov	w10, #0x1                   	// #1
  419b90:	eor	w9, w9, #0x1
  419b94:	eor	w9, w9, w10
  419b98:	eor	w9, w9, w10
  419b9c:	and	w9, w9, #0x1
  419ba0:	mov	w0, w9
  419ba4:	sxtw	x8, w0
  419ba8:	cbz	x8, 419bd0 <ascii_strlower_n@plt+0x15770>
  419bac:	mov	w8, wzr
  419bb0:	mov	w0, w8
  419bb4:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  419bb8:	add	x1, x1, #0xc51
  419bbc:	ldr	x2, [sp, #32]
  419bc0:	mov	w3, #0x4a0                 	// #1184
  419bc4:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  419bc8:	add	x4, x4, #0x24d
  419bcc:	bl	4039d0 <log_assert_failed_realm@plt>
  419bd0:	ldur	x8, [x29, #-24]
  419bd4:	cbz	x8, 419bfc <ascii_strlower_n@plt+0x1579c>
  419bd8:	ldur	x8, [x29, #-24]
  419bdc:	ldr	x8, [x8, #8]
  419be0:	cmp	x8, #0x0
  419be4:	cset	w9, ls  // ls = plast
  419be8:	tbnz	w9, #0, 419bfc <ascii_strlower_n@plt+0x1579c>
  419bec:	ldur	x8, [x29, #-24]
  419bf0:	ldr	x8, [x8, #24]
  419bf4:	str	x8, [sp, #24]
  419bf8:	b	419c04 <ascii_strlower_n@plt+0x157a4>
  419bfc:	mov	x8, xzr
  419c00:	str	x8, [sp, #24]
  419c04:	ldr	x8, [sp, #24]
  419c08:	stur	x8, [x29, #-32]
  419c0c:	ldur	x8, [x29, #-24]
  419c10:	cbz	x8, 419c38 <ascii_strlower_n@plt+0x157d8>
  419c14:	ldur	x8, [x29, #-24]
  419c18:	ldr	x8, [x8, #8]
  419c1c:	cmp	x8, #0x0
  419c20:	cset	w9, ls  // ls = plast
  419c24:	tbnz	w9, #0, 419c38 <ascii_strlower_n@plt+0x157d8>
  419c28:	ldur	x8, [x29, #-24]
  419c2c:	ldr	w9, [x8, #36]
  419c30:	str	w9, [sp, #20]
  419c34:	b	419c40 <ascii_strlower_n@plt+0x157e0>
  419c38:	mov	w8, wzr
  419c3c:	str	w8, [sp, #20]
  419c40:	ldr	w8, [sp, #20]
  419c44:	stur	w8, [x29, #-36]
  419c48:	str	wzr, [sp, #44]
  419c4c:	ldrsw	x9, [sp, #44]
  419c50:	str	x9, [sp, #48]
  419c54:	ldur	x8, [x29, #-24]
  419c58:	mov	w9, #0x0                   	// #0
  419c5c:	str	w9, [sp, #16]
  419c60:	cbz	x8, 419c7c <ascii_strlower_n@plt+0x1581c>
  419c64:	ldr	x8, [sp, #48]
  419c68:	ldur	x9, [x29, #-24]
  419c6c:	ldr	x9, [x9, #8]
  419c70:	cmp	x8, x9
  419c74:	cset	w10, cc  // cc = lo, ul, last
  419c78:	str	w10, [sp, #16]
  419c7c:	ldr	w8, [sp, #16]
  419c80:	tbnz	w8, #0, 419c88 <ascii_strlower_n@plt+0x15828>
  419c84:	b	419d64 <ascii_strlower_n@plt+0x15904>
  419c88:	ldur	x0, [x29, #-16]
  419c8c:	ldur	x1, [x29, #-32]
  419c90:	ldur	w2, [x29, #-36]
  419c94:	mov	x8, xzr
  419c98:	mov	x3, x8
  419c9c:	mov	x4, x8
  419ca0:	bl	418674 <ascii_strlower_n@plt+0x14214>
  419ca4:	stur	w0, [x29, #-40]
  419ca8:	ldur	w9, [x29, #-40]
  419cac:	cmp	w9, #0x0
  419cb0:	cset	w9, ge  // ge = tcont
  419cb4:	tbnz	w9, #0, 419cc4 <ascii_strlower_n@plt+0x15864>
  419cb8:	ldur	w8, [x29, #-40]
  419cbc:	stur	w8, [x29, #-4]
  419cc0:	b	419d68 <ascii_strlower_n@plt+0x15908>
  419cc4:	ldr	x8, [sp, #48]
  419cc8:	add	x8, x8, #0x1
  419ccc:	str	x8, [sp, #48]
  419cd0:	ldr	x8, [sp, #48]
  419cd4:	ldur	x9, [x29, #-24]
  419cd8:	ldr	x9, [x9, #8]
  419cdc:	cmp	x8, x9
  419ce0:	b.cs	419d08 <ascii_strlower_n@plt+0x158a8>  // b.hs, b.nlast
  419ce4:	ldur	x8, [x29, #-24]
  419ce8:	add	x8, x8, #0x18
  419cec:	ldr	x9, [sp, #48]
  419cf0:	mov	x10, #0x10                  	// #16
  419cf4:	mul	x9, x10, x9
  419cf8:	add	x8, x8, x9
  419cfc:	ldr	x8, [x8]
  419d00:	str	x8, [sp, #8]
  419d04:	b	419d10 <ascii_strlower_n@plt+0x158b0>
  419d08:	mov	x8, xzr
  419d0c:	str	x8, [sp, #8]
  419d10:	ldr	x8, [sp, #8]
  419d14:	stur	x8, [x29, #-32]
  419d18:	ldr	x8, [sp, #48]
  419d1c:	ldur	x9, [x29, #-24]
  419d20:	ldr	x9, [x9, #8]
  419d24:	cmp	x8, x9
  419d28:	b.cs	419d50 <ascii_strlower_n@plt+0x158f0>  // b.hs, b.nlast
  419d2c:	ldur	x8, [x29, #-24]
  419d30:	add	x8, x8, #0x18
  419d34:	ldr	x9, [sp, #48]
  419d38:	mov	x10, #0x10                  	// #16
  419d3c:	mul	x9, x10, x9
  419d40:	add	x8, x8, x9
  419d44:	ldr	w11, [x8, #12]
  419d48:	str	w11, [sp, #4]
  419d4c:	b	419d58 <ascii_strlower_n@plt+0x158f8>
  419d50:	mov	w8, wzr
  419d54:	str	w8, [sp, #4]
  419d58:	ldr	w8, [sp, #4]
  419d5c:	stur	w8, [x29, #-36]
  419d60:	b	419c54 <ascii_strlower_n@plt+0x157f4>
  419d64:	stur	wzr, [x29, #-4]
  419d68:	ldur	w0, [x29, #-4]
  419d6c:	ldp	x29, x30, [sp, #96]
  419d70:	add	sp, sp, #0x70
  419d74:	ret
  419d78:	sub	sp, sp, #0x40
  419d7c:	stp	x29, x30, [sp, #48]
  419d80:	add	x29, sp, #0x30
  419d84:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  419d88:	add	x8, x8, #0xb94
  419d8c:	add	x8, x8, #0x3
  419d90:	stur	x0, [x29, #-16]
  419d94:	str	x1, [sp, #24]
  419d98:	str	x2, [sp, #16]
  419d9c:	str	x3, [sp, #8]
  419da0:	str	x8, [sp]
  419da4:	ldur	x8, [x29, #-16]
  419da8:	cmp	x8, #0x0
  419dac:	cset	w9, ne  // ne = any
  419db0:	mov	w10, #0x1                   	// #1
  419db4:	eor	w9, w9, #0x1
  419db8:	eor	w9, w9, w10
  419dbc:	eor	w9, w9, w10
  419dc0:	and	w9, w9, #0x1
  419dc4:	mov	w0, w9
  419dc8:	sxtw	x8, w0
  419dcc:	cbz	x8, 419df4 <ascii_strlower_n@plt+0x15994>
  419dd0:	mov	w8, wzr
  419dd4:	mov	w0, w8
  419dd8:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  419ddc:	add	x1, x1, #0xc51
  419de0:	ldr	x2, [sp]
  419de4:	mov	w3, #0x4ac                 	// #1196
  419de8:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  419dec:	add	x4, x4, #0x284
  419df0:	bl	4039d0 <log_assert_failed_realm@plt>
  419df4:	ldur	x8, [x29, #-16]
  419df8:	ldr	x8, [x8, #24]
  419dfc:	ldr	x9, [sp, #24]
  419e00:	add	x8, x8, x9
  419e04:	ldur	x9, [x29, #-16]
  419e08:	ldr	x9, [x9, #8]
  419e0c:	cmp	x8, x9
  419e10:	b.ls	419e20 <ascii_strlower_n@plt+0x159c0>  // b.plast
  419e14:	mov	w8, #0xffffffa6            	// #-90
  419e18:	stur	w8, [x29, #-4]
  419e1c:	b	419e74 <ascii_strlower_n@plt+0x15a14>
  419e20:	ldr	x8, [sp, #16]
  419e24:	cbz	x8, 419e44 <ascii_strlower_n@plt+0x159e4>
  419e28:	ldur	x0, [x29, #-16]
  419e2c:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  419e30:	ldur	x8, [x29, #-16]
  419e34:	ldr	x8, [x8, #24]
  419e38:	add	x8, x0, x8
  419e3c:	ldr	x9, [sp, #16]
  419e40:	str	x8, [x9]
  419e44:	ldr	x8, [sp, #8]
  419e48:	cbz	x8, 419e5c <ascii_strlower_n@plt+0x159fc>
  419e4c:	ldur	x8, [x29, #-16]
  419e50:	ldr	x8, [x8, #24]
  419e54:	ldr	x9, [sp, #8]
  419e58:	str	x8, [x9]
  419e5c:	ldr	x8, [sp, #24]
  419e60:	ldur	x9, [x29, #-16]
  419e64:	ldr	x10, [x9, #24]
  419e68:	add	x8, x10, x8
  419e6c:	str	x8, [x9, #24]
  419e70:	stur	wzr, [x29, #-4]
  419e74:	ldur	w0, [x29, #-4]
  419e78:	ldp	x29, x30, [sp, #48]
  419e7c:	add	sp, sp, #0x40
  419e80:	ret
  419e84:	sub	sp, sp, #0x30
  419e88:	stp	x29, x30, [sp, #32]
  419e8c:	add	x29, sp, #0x20
  419e90:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  419e94:	add	x8, x8, #0xb94
  419e98:	add	x8, x8, #0x3
  419e9c:	adrp	x9, 431000 <ascii_strlower_n@plt+0x2cba0>
  419ea0:	add	x9, x9, #0x2c6
  419ea4:	stur	x0, [x29, #-8]
  419ea8:	str	x1, [sp, #16]
  419eac:	str	x8, [sp, #8]
  419eb0:	str	x9, [sp]
  419eb4:	ldur	x8, [x29, #-8]
  419eb8:	cmp	x8, #0x0
  419ebc:	cset	w9, ne  // ne = any
  419ec0:	mov	w10, #0x1                   	// #1
  419ec4:	eor	w9, w9, #0x1
  419ec8:	eor	w9, w9, w10
  419ecc:	eor	w9, w9, w10
  419ed0:	and	w9, w9, #0x1
  419ed4:	mov	w0, w9
  419ed8:	sxtw	x8, w0
  419edc:	cbz	x8, 419f00 <ascii_strlower_n@plt+0x15aa0>
  419ee0:	mov	w8, wzr
  419ee4:	mov	w0, w8
  419ee8:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  419eec:	add	x1, x1, #0xc51
  419ef0:	ldr	x2, [sp, #8]
  419ef4:	mov	w3, #0x4bc                 	// #1212
  419ef8:	ldr	x4, [sp]
  419efc:	bl	4039d0 <log_assert_failed_realm@plt>
  419f00:	ldr	x8, [sp, #16]
  419f04:	ldur	x9, [x29, #-8]
  419f08:	ldr	x9, [x9, #8]
  419f0c:	cmp	x8, x9
  419f10:	cset	w10, ls  // ls = plast
  419f14:	mov	w11, #0x1                   	// #1
  419f18:	eor	w10, w10, #0x1
  419f1c:	eor	w10, w10, w11
  419f20:	eor	w10, w10, w11
  419f24:	and	w10, w10, #0x1
  419f28:	mov	w0, w10
  419f2c:	sxtw	x8, w0
  419f30:	cbz	x8, 419f54 <ascii_strlower_n@plt+0x15af4>
  419f34:	mov	w8, wzr
  419f38:	mov	w0, w8
  419f3c:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  419f40:	add	x1, x1, #0x2f2
  419f44:	ldr	x2, [sp, #8]
  419f48:	mov	w3, #0x4bd                 	// #1213
  419f4c:	ldr	x4, [sp]
  419f50:	bl	4039d0 <log_assert_failed_realm@plt>
  419f54:	ldr	x8, [sp, #16]
  419f58:	cmp	x8, #0xc
  419f5c:	cset	w9, cs  // cs = hs, nlast
  419f60:	mov	w10, #0x1                   	// #1
  419f64:	eor	w9, w9, #0x1
  419f68:	eor	w9, w9, w10
  419f6c:	eor	w9, w9, w10
  419f70:	and	w9, w9, #0x1
  419f74:	mov	w0, w9
  419f78:	sxtw	x8, w0
  419f7c:	cbz	x8, 419fa0 <ascii_strlower_n@plt+0x15b40>
  419f80:	mov	w8, wzr
  419f84:	mov	w0, w8
  419f88:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  419f8c:	add	x1, x1, #0x301
  419f90:	ldr	x2, [sp, #8]
  419f94:	mov	w3, #0x4be                 	// #1214
  419f98:	ldr	x4, [sp]
  419f9c:	bl	4039d0 <log_assert_failed_realm@plt>
  419fa0:	ldr	x8, [sp, #16]
  419fa4:	ldur	x9, [x29, #-8]
  419fa8:	str	x8, [x9, #24]
  419fac:	ldp	x29, x30, [sp, #32]
  419fb0:	add	sp, sp, #0x30
  419fb4:	ret
  419fb8:	sub	sp, sp, #0x50
  419fbc:	stp	x29, x30, [sp, #64]
  419fc0:	add	x29, sp, #0x40
  419fc4:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  419fc8:	add	x8, x8, #0xb94
  419fcc:	add	x8, x8, #0x3
  419fd0:	stur	x0, [x29, #-16]
  419fd4:	stur	x1, [x29, #-24]
  419fd8:	str	x2, [sp, #32]
  419fdc:	str	x3, [sp, #24]
  419fe0:	str	x8, [sp]
  419fe4:	ldur	x8, [x29, #-16]
  419fe8:	cmp	x8, #0x0
  419fec:	cset	w9, ne  // ne = any
  419ff0:	mov	w10, #0x1                   	// #1
  419ff4:	eor	w9, w9, #0x1
  419ff8:	eor	w9, w9, w10
  419ffc:	eor	w9, w9, w10
  41a000:	and	w9, w9, #0x1
  41a004:	mov	w0, w9
  41a008:	sxtw	x8, w0
  41a00c:	cbz	x8, 41a034 <ascii_strlower_n@plt+0x15bd4>
  41a010:	mov	w8, wzr
  41a014:	mov	w0, w8
  41a018:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41a01c:	add	x1, x1, #0xc51
  41a020:	ldr	x2, [sp]
  41a024:	mov	w3, #0x4c7                 	// #1223
  41a028:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41a02c:	add	x4, x4, #0x31f
  41a030:	bl	4039d0 <log_assert_failed_realm@plt>
  41a034:	ldur	x8, [x29, #-24]
  41a038:	cmp	x8, #0x0
  41a03c:	cset	w9, ne  // ne = any
  41a040:	mov	w10, #0x1                   	// #1
  41a044:	eor	w9, w9, #0x1
  41a048:	eor	w9, w9, w10
  41a04c:	eor	w9, w9, w10
  41a050:	and	w9, w9, #0x1
  41a054:	mov	w0, w9
  41a058:	sxtw	x8, w0
  41a05c:	cbz	x8, 41a084 <ascii_strlower_n@plt+0x15c24>
  41a060:	mov	w8, wzr
  41a064:	mov	w0, w8
  41a068:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41a06c:	add	x1, x1, #0xfd8
  41a070:	ldr	x2, [sp]
  41a074:	mov	w3, #0x4c8                 	// #1224
  41a078:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41a07c:	add	x4, x4, #0x31f
  41a080:	bl	4039d0 <log_assert_failed_realm@plt>
  41a084:	ldur	x0, [x29, #-16]
  41a088:	ldr	x1, [sp, #32]
  41a08c:	ldr	x3, [sp, #24]
  41a090:	add	x2, sp, #0x10
  41a094:	bl	419d78 <ascii_strlower_n@plt+0x15918>
  41a098:	str	w0, [sp, #12]
  41a09c:	ldr	w8, [sp, #12]
  41a0a0:	cmp	w8, #0x0
  41a0a4:	cset	w8, ge  // ge = tcont
  41a0a8:	tbnz	w8, #0, 41a0b8 <ascii_strlower_n@plt+0x15c58>
  41a0ac:	ldr	w8, [sp, #12]
  41a0b0:	stur	w8, [x29, #-4]
  41a0b4:	b	41a0cc <ascii_strlower_n@plt+0x15c6c>
  41a0b8:	ldur	x0, [x29, #-24]
  41a0bc:	ldr	x1, [sp, #16]
  41a0c0:	ldr	x2, [sp, #32]
  41a0c4:	bl	403fa0 <memcpy@plt>
  41a0c8:	stur	wzr, [x29, #-4]
  41a0cc:	ldur	w0, [x29, #-4]
  41a0d0:	ldp	x29, x30, [sp, #64]
  41a0d4:	add	sp, sp, #0x50
  41a0d8:	ret
  41a0dc:	sub	sp, sp, #0x50
  41a0e0:	stp	x29, x30, [sp, #64]
  41a0e4:	add	x29, sp, #0x40
  41a0e8:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  41a0ec:	add	x8, x8, #0xb94
  41a0f0:	add	x8, x8, #0x3
  41a0f4:	stur	x0, [x29, #-16]
  41a0f8:	stur	x1, [x29, #-24]
  41a0fc:	str	x2, [sp, #32]
  41a100:	str	x8, [sp, #8]
  41a104:	ldur	x8, [x29, #-16]
  41a108:	cmp	x8, #0x0
  41a10c:	cset	w9, ne  // ne = any
  41a110:	mov	w10, #0x1                   	// #1
  41a114:	eor	w9, w9, #0x1
  41a118:	eor	w9, w9, w10
  41a11c:	eor	w9, w9, w10
  41a120:	and	w9, w9, #0x1
  41a124:	mov	w0, w9
  41a128:	sxtw	x8, w0
  41a12c:	cbz	x8, 41a154 <ascii_strlower_n@plt+0x15cf4>
  41a130:	mov	w8, wzr
  41a134:	mov	w0, w8
  41a138:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41a13c:	add	x1, x1, #0xc51
  41a140:	ldr	x2, [sp, #8]
  41a144:	mov	w3, #0x4fa                 	// #1274
  41a148:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41a14c:	add	x4, x4, #0x35f
  41a150:	bl	4039d0 <log_assert_failed_realm@plt>
  41a154:	ldur	x0, [x29, #-16]
  41a158:	ldr	x3, [sp, #32]
  41a15c:	mov	x1, #0x1                   	// #1
  41a160:	add	x2, sp, #0x18
  41a164:	bl	419d78 <ascii_strlower_n@plt+0x15918>
  41a168:	str	w0, [sp, #20]
  41a16c:	ldr	w8, [sp, #20]
  41a170:	cmp	w8, #0x0
  41a174:	cset	w8, ge  // ge = tcont
  41a178:	tbnz	w8, #0, 41a188 <ascii_strlower_n@plt+0x15d28>
  41a17c:	ldr	w8, [sp, #20]
  41a180:	stur	w8, [x29, #-4]
  41a184:	b	41a19c <ascii_strlower_n@plt+0x15d3c>
  41a188:	ldr	x8, [sp, #24]
  41a18c:	ldrb	w9, [x8]
  41a190:	ldur	x8, [x29, #-24]
  41a194:	strb	w9, [x8]
  41a198:	stur	wzr, [x29, #-4]
  41a19c:	ldur	w0, [x29, #-4]
  41a1a0:	ldp	x29, x30, [sp, #64]
  41a1a4:	add	sp, sp, #0x50
  41a1a8:	ret
  41a1ac:	sub	sp, sp, #0x50
  41a1b0:	stp	x29, x30, [sp, #64]
  41a1b4:	add	x29, sp, #0x40
  41a1b8:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  41a1bc:	add	x8, x8, #0xb94
  41a1c0:	add	x8, x8, #0x3
  41a1c4:	stur	x0, [x29, #-16]
  41a1c8:	stur	x1, [x29, #-24]
  41a1cc:	str	x2, [sp, #32]
  41a1d0:	str	x8, [sp, #8]
  41a1d4:	ldur	x8, [x29, #-16]
  41a1d8:	cmp	x8, #0x0
  41a1dc:	cset	w9, ne  // ne = any
  41a1e0:	mov	w10, #0x1                   	// #1
  41a1e4:	eor	w9, w9, #0x1
  41a1e8:	eor	w9, w9, w10
  41a1ec:	eor	w9, w9, w10
  41a1f0:	and	w9, w9, #0x1
  41a1f4:	mov	w0, w9
  41a1f8:	sxtw	x8, w0
  41a1fc:	cbz	x8, 41a224 <ascii_strlower_n@plt+0x15dc4>
  41a200:	mov	w8, wzr
  41a204:	mov	w0, w8
  41a208:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41a20c:	add	x1, x1, #0xc51
  41a210:	ldr	x2, [sp, #8]
  41a214:	mov	w3, #0x508                 	// #1288
  41a218:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41a21c:	add	x4, x4, #0x39b
  41a220:	bl	4039d0 <log_assert_failed_realm@plt>
  41a224:	ldur	x0, [x29, #-16]
  41a228:	ldr	x3, [sp, #32]
  41a22c:	mov	x1, #0x2                   	// #2
  41a230:	add	x2, sp, #0x18
  41a234:	bl	419d78 <ascii_strlower_n@plt+0x15918>
  41a238:	str	w0, [sp, #20]
  41a23c:	ldr	w8, [sp, #20]
  41a240:	cmp	w8, #0x0
  41a244:	cset	w8, ge  // ge = tcont
  41a248:	tbnz	w8, #0, 41a258 <ascii_strlower_n@plt+0x15df8>
  41a24c:	ldr	w8, [sp, #20]
  41a250:	stur	w8, [x29, #-4]
  41a254:	b	41a26c <ascii_strlower_n@plt+0x15e0c>
  41a258:	ldr	x0, [sp, #24]
  41a25c:	bl	41a27c <ascii_strlower_n@plt+0x15e1c>
  41a260:	ldur	x8, [x29, #-24]
  41a264:	strh	w0, [x8]
  41a268:	stur	wzr, [x29, #-4]
  41a26c:	ldur	w0, [x29, #-4]
  41a270:	ldp	x29, x30, [sp, #64]
  41a274:	add	sp, sp, #0x50
  41a278:	ret
  41a27c:	sub	sp, sp, #0x20
  41a280:	stp	x29, x30, [sp, #16]
  41a284:	add	x29, sp, #0x10
  41a288:	str	x0, [sp, #8]
  41a28c:	ldr	x8, [sp, #8]
  41a290:	str	x8, [sp]
  41a294:	ldr	x8, [sp]
  41a298:	ldrh	w0, [x8]
  41a29c:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  41a2a0:	ldp	x29, x30, [sp, #16]
  41a2a4:	add	sp, sp, #0x20
  41a2a8:	ret
  41a2ac:	sub	sp, sp, #0x50
  41a2b0:	stp	x29, x30, [sp, #64]
  41a2b4:	add	x29, sp, #0x40
  41a2b8:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  41a2bc:	add	x8, x8, #0xb94
  41a2c0:	add	x8, x8, #0x3
  41a2c4:	stur	x0, [x29, #-16]
  41a2c8:	stur	x1, [x29, #-24]
  41a2cc:	str	x2, [sp, #32]
  41a2d0:	str	x8, [sp, #8]
  41a2d4:	ldur	x8, [x29, #-16]
  41a2d8:	cmp	x8, #0x0
  41a2dc:	cset	w9, ne  // ne = any
  41a2e0:	mov	w10, #0x1                   	// #1
  41a2e4:	eor	w9, w9, #0x1
  41a2e8:	eor	w9, w9, w10
  41a2ec:	eor	w9, w9, w10
  41a2f0:	and	w9, w9, #0x1
  41a2f4:	mov	w0, w9
  41a2f8:	sxtw	x8, w0
  41a2fc:	cbz	x8, 41a324 <ascii_strlower_n@plt+0x15ec4>
  41a300:	mov	w8, wzr
  41a304:	mov	w0, w8
  41a308:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41a30c:	add	x1, x1, #0xc51
  41a310:	ldr	x2, [sp, #8]
  41a314:	mov	w3, #0x517                 	// #1303
  41a318:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41a31c:	add	x4, x4, #0x3d9
  41a320:	bl	4039d0 <log_assert_failed_realm@plt>
  41a324:	ldur	x0, [x29, #-16]
  41a328:	ldr	x3, [sp, #32]
  41a32c:	mov	x1, #0x4                   	// #4
  41a330:	add	x2, sp, #0x18
  41a334:	bl	419d78 <ascii_strlower_n@plt+0x15918>
  41a338:	str	w0, [sp, #20]
  41a33c:	ldr	w8, [sp, #20]
  41a340:	cmp	w8, #0x0
  41a344:	cset	w8, ge  // ge = tcont
  41a348:	tbnz	w8, #0, 41a358 <ascii_strlower_n@plt+0x15ef8>
  41a34c:	ldr	w8, [sp, #20]
  41a350:	stur	w8, [x29, #-4]
  41a354:	b	41a36c <ascii_strlower_n@plt+0x15f0c>
  41a358:	ldr	x0, [sp, #24]
  41a35c:	bl	41a37c <ascii_strlower_n@plt+0x15f1c>
  41a360:	ldur	x8, [x29, #-24]
  41a364:	str	w0, [x8]
  41a368:	stur	wzr, [x29, #-4]
  41a36c:	ldur	w0, [x29, #-4]
  41a370:	ldp	x29, x30, [sp, #64]
  41a374:	add	sp, sp, #0x50
  41a378:	ret
  41a37c:	sub	sp, sp, #0x20
  41a380:	stp	x29, x30, [sp, #16]
  41a384:	add	x29, sp, #0x10
  41a388:	str	x0, [sp, #8]
  41a38c:	ldr	x8, [sp, #8]
  41a390:	str	x8, [sp]
  41a394:	ldr	x8, [sp]
  41a398:	ldr	w0, [x8]
  41a39c:	bl	41db08 <ascii_strlower_n@plt+0x196a8>
  41a3a0:	ldp	x29, x30, [sp, #16]
  41a3a4:	add	sp, sp, #0x20
  41a3a8:	ret
  41a3ac:	sub	sp, sp, #0x70
  41a3b0:	stp	x29, x30, [sp, #96]
  41a3b4:	add	x29, sp, #0x60
  41a3b8:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  41a3bc:	add	x8, x8, #0xb94
  41a3c0:	add	x8, x8, #0x3
  41a3c4:	stur	x0, [x29, #-16]
  41a3c8:	stur	x1, [x29, #-24]
  41a3cc:	stur	x2, [x29, #-32]
  41a3d0:	str	x8, [sp, #8]
  41a3d4:	ldur	x8, [x29, #-16]
  41a3d8:	cmp	x8, #0x0
  41a3dc:	cset	w9, ne  // ne = any
  41a3e0:	mov	w10, #0x1                   	// #1
  41a3e4:	eor	w9, w9, #0x1
  41a3e8:	eor	w9, w9, w10
  41a3ec:	eor	w9, w9, w10
  41a3f0:	and	w9, w9, #0x1
  41a3f4:	mov	w0, w9
  41a3f8:	sxtw	x8, w0
  41a3fc:	cbz	x8, 41a424 <ascii_strlower_n@plt+0x15fc4>
  41a400:	mov	w8, wzr
  41a404:	mov	w0, w8
  41a408:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41a40c:	add	x1, x1, #0xc51
  41a410:	ldr	x2, [sp, #8]
  41a414:	mov	w3, #0x529                 	// #1321
  41a418:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41a41c:	add	x4, x4, #0x417
  41a420:	bl	4039d0 <log_assert_failed_realm@plt>
  41a424:	ldur	x8, [x29, #-16]
  41a428:	str	x8, [sp, #48]
  41a42c:	ldur	x8, [x29, #-16]
  41a430:	ldr	x8, [x8, #24]
  41a434:	str	x8, [sp, #56]
  41a438:	ldur	x0, [x29, #-16]
  41a43c:	add	x1, sp, #0x1f
  41a440:	mov	x8, xzr
  41a444:	mov	x2, x8
  41a448:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41a44c:	str	w0, [sp, #24]
  41a450:	ldr	w9, [sp, #24]
  41a454:	cmp	w9, #0x0
  41a458:	cset	w9, ge  // ge = tcont
  41a45c:	tbnz	w9, #0, 41a474 <ascii_strlower_n@plt+0x16014>
  41a460:	ldr	w8, [sp, #24]
  41a464:	stur	w8, [x29, #-4]
  41a468:	mov	w8, #0x1                   	// #1
  41a46c:	str	w8, [sp, #20]
  41a470:	b	41a574 <ascii_strlower_n@plt+0x16114>
  41a474:	ldur	x0, [x29, #-16]
  41a478:	ldrb	w8, [sp, #31]
  41a47c:	mov	w1, w8
  41a480:	add	x2, sp, #0x28
  41a484:	mov	x9, xzr
  41a488:	mov	x3, x9
  41a48c:	bl	419d78 <ascii_strlower_n@plt+0x15918>
  41a490:	str	w0, [sp, #24]
  41a494:	ldr	w8, [sp, #24]
  41a498:	cmp	w8, #0x0
  41a49c:	cset	w8, ge  // ge = tcont
  41a4a0:	tbnz	w8, #0, 41a4b8 <ascii_strlower_n@plt+0x16058>
  41a4a4:	ldr	w8, [sp, #24]
  41a4a8:	stur	w8, [x29, #-4]
  41a4ac:	mov	w8, #0x1                   	// #1
  41a4b0:	str	w8, [sp, #20]
  41a4b4:	b	41a574 <ascii_strlower_n@plt+0x16114>
  41a4b8:	ldr	x0, [sp, #40]
  41a4bc:	ldrb	w8, [sp, #31]
  41a4c0:	mov	w2, w8
  41a4c4:	mov	w8, wzr
  41a4c8:	mov	w1, w8
  41a4cc:	bl	404190 <memchr@plt>
  41a4d0:	cbz	x0, 41a4e8 <ascii_strlower_n@plt+0x16088>
  41a4d4:	mov	w8, #0xffffffb6            	// #-74
  41a4d8:	stur	w8, [x29, #-4]
  41a4dc:	mov	w8, #0x1                   	// #1
  41a4e0:	str	w8, [sp, #20]
  41a4e4:	b	41a574 <ascii_strlower_n@plt+0x16114>
  41a4e8:	ldr	x0, [sp, #40]
  41a4ec:	ldrb	w8, [sp, #31]
  41a4f0:	mov	w1, w8
  41a4f4:	bl	403b10 <strndup@plt>
  41a4f8:	str	x0, [sp, #32]
  41a4fc:	ldr	x9, [sp, #32]
  41a500:	cbnz	x9, 41a518 <ascii_strlower_n@plt+0x160b8>
  41a504:	mov	w8, #0xfffffff4            	// #-12
  41a508:	stur	w8, [x29, #-4]
  41a50c:	mov	w8, #0x1                   	// #1
  41a510:	str	w8, [sp, #20]
  41a514:	b	41a574 <ascii_strlower_n@plt+0x16114>
  41a518:	ldr	x0, [sp, #32]
  41a51c:	bl	4041a0 <utf8_is_valid@plt>
  41a520:	cbnz	x0, 41a540 <ascii_strlower_n@plt+0x160e0>
  41a524:	ldr	x0, [sp, #32]
  41a528:	bl	403ac0 <free@plt>
  41a52c:	mov	w8, #0xffffffb6            	// #-74
  41a530:	stur	w8, [x29, #-4]
  41a534:	mov	w8, #0x1                   	// #1
  41a538:	str	w8, [sp, #20]
  41a53c:	b	41a574 <ascii_strlower_n@plt+0x16114>
  41a540:	ldr	x8, [sp, #32]
  41a544:	ldur	x9, [x29, #-24]
  41a548:	str	x8, [x9]
  41a54c:	ldur	x8, [x29, #-32]
  41a550:	cbz	x8, 41a560 <ascii_strlower_n@plt+0x16100>
  41a554:	ldr	x8, [sp, #56]
  41a558:	ldur	x9, [x29, #-32]
  41a55c:	str	x8, [x9]
  41a560:	mov	x8, xzr
  41a564:	str	x8, [sp, #48]
  41a568:	stur	wzr, [x29, #-4]
  41a56c:	mov	w8, #0x1                   	// #1
  41a570:	str	w8, [sp, #20]
  41a574:	add	x0, sp, #0x30
  41a578:	bl	41a58c <ascii_strlower_n@plt+0x1612c>
  41a57c:	ldur	w0, [x29, #-4]
  41a580:	ldp	x29, x30, [sp, #96]
  41a584:	add	sp, sp, #0x70
  41a588:	ret
  41a58c:	sub	sp, sp, #0x20
  41a590:	stp	x29, x30, [sp, #16]
  41a594:	add	x29, sp, #0x10
  41a598:	str	x0, [sp, #8]
  41a59c:	ldr	x8, [sp, #8]
  41a5a0:	ldr	x8, [x8]
  41a5a4:	cbz	x8, 41a5bc <ascii_strlower_n@plt+0x1615c>
  41a5a8:	ldr	x8, [sp, #8]
  41a5ac:	ldr	x0, [x8]
  41a5b0:	ldr	x8, [sp, #8]
  41a5b4:	ldr	x1, [x8, #8]
  41a5b8:	bl	419e84 <ascii_strlower_n@plt+0x15a24>
  41a5bc:	ldp	x29, x30, [sp, #16]
  41a5c0:	add	sp, sp, #0x20
  41a5c4:	ret
  41a5c8:	sub	sp, sp, #0x60
  41a5cc:	stp	x29, x30, [sp, #80]
  41a5d0:	add	x29, sp, #0x50
  41a5d4:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  41a5d8:	add	x8, x8, #0xb94
  41a5dc:	add	x8, x8, #0x3
  41a5e0:	stur	x0, [x29, #-16]
  41a5e4:	stur	x1, [x29, #-24]
  41a5e8:	stur	x2, [x29, #-32]
  41a5ec:	str	x3, [sp, #40]
  41a5f0:	str	x8, [sp]
  41a5f4:	ldur	x8, [x29, #-16]
  41a5f8:	cmp	x8, #0x0
  41a5fc:	cset	w9, ne  // ne = any
  41a600:	mov	w10, #0x1                   	// #1
  41a604:	eor	w9, w9, #0x1
  41a608:	eor	w9, w9, w10
  41a60c:	eor	w9, w9, w10
  41a610:	and	w9, w9, #0x1
  41a614:	mov	w0, w9
  41a618:	sxtw	x8, w0
  41a61c:	cbz	x8, 41a644 <ascii_strlower_n@plt+0x161e4>
  41a620:	mov	w8, wzr
  41a624:	mov	w0, w8
  41a628:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41a62c:	add	x1, x1, #0xc51
  41a630:	ldr	x2, [sp]
  41a634:	mov	w3, #0x54e                 	// #1358
  41a638:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41a63c:	add	x4, x4, #0x452
  41a640:	bl	4039d0 <log_assert_failed_realm@plt>
  41a644:	ldur	x8, [x29, #-16]
  41a648:	str	x8, [sp, #24]
  41a64c:	ldur	x8, [x29, #-16]
  41a650:	ldr	x8, [x8, #24]
  41a654:	str	x8, [sp, #32]
  41a658:	ldur	x0, [x29, #-16]
  41a65c:	add	x1, sp, #0x17
  41a660:	mov	x8, xzr
  41a664:	mov	x2, x8
  41a668:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41a66c:	str	w0, [sp, #16]
  41a670:	ldr	w9, [sp, #16]
  41a674:	cmp	w9, #0x0
  41a678:	cset	w9, ge  // ge = tcont
  41a67c:	tbnz	w9, #0, 41a694 <ascii_strlower_n@plt+0x16234>
  41a680:	ldr	w8, [sp, #16]
  41a684:	stur	w8, [x29, #-4]
  41a688:	mov	w8, #0x1                   	// #1
  41a68c:	str	w8, [sp, #12]
  41a690:	b	41a718 <ascii_strlower_n@plt+0x162b8>
  41a694:	ldur	x0, [x29, #-16]
  41a698:	ldrb	w8, [sp, #23]
  41a69c:	mov	w1, w8
  41a6a0:	ldur	x2, [x29, #-24]
  41a6a4:	mov	x9, xzr
  41a6a8:	mov	x3, x9
  41a6ac:	bl	419d78 <ascii_strlower_n@plt+0x15918>
  41a6b0:	str	w0, [sp, #16]
  41a6b4:	ldr	w8, [sp, #16]
  41a6b8:	cmp	w8, #0x0
  41a6bc:	cset	w8, ge  // ge = tcont
  41a6c0:	tbnz	w8, #0, 41a6d8 <ascii_strlower_n@plt+0x16278>
  41a6c4:	ldr	w8, [sp, #16]
  41a6c8:	stur	w8, [x29, #-4]
  41a6cc:	mov	w8, #0x1                   	// #1
  41a6d0:	str	w8, [sp, #12]
  41a6d4:	b	41a718 <ascii_strlower_n@plt+0x162b8>
  41a6d8:	ldur	x8, [x29, #-32]
  41a6dc:	cbz	x8, 41a6f0 <ascii_strlower_n@plt+0x16290>
  41a6e0:	ldrb	w8, [sp, #23]
  41a6e4:	mov	w9, w8
  41a6e8:	ldur	x10, [x29, #-32]
  41a6ec:	str	x9, [x10]
  41a6f0:	ldr	x8, [sp, #40]
  41a6f4:	cbz	x8, 41a704 <ascii_strlower_n@plt+0x162a4>
  41a6f8:	ldr	x8, [sp, #32]
  41a6fc:	ldr	x9, [sp, #40]
  41a700:	str	x8, [x9]
  41a704:	mov	x8, xzr
  41a708:	str	x8, [sp, #24]
  41a70c:	stur	wzr, [x29, #-4]
  41a710:	mov	w8, #0x1                   	// #1
  41a714:	str	w8, [sp, #12]
  41a718:	add	x0, sp, #0x18
  41a71c:	bl	41a58c <ascii_strlower_n@plt+0x1612c>
  41a720:	ldur	w0, [x29, #-4]
  41a724:	ldp	x29, x30, [sp, #80]
  41a728:	add	sp, sp, #0x60
  41a72c:	ret
  41a730:	sub	sp, sp, #0xb0
  41a734:	stp	x29, x30, [sp, #160]
  41a738:	add	x29, sp, #0xa0
  41a73c:	mov	x8, xzr
  41a740:	mov	w9, #0x1                   	// #1
  41a744:	mov	w10, #0x1                   	// #1
  41a748:	adrp	x11, 430000 <ascii_strlower_n@plt+0x2bba0>
  41a74c:	add	x11, x11, #0xb94
  41a750:	add	x11, x11, #0x3
  41a754:	stur	x0, [x29, #-16]
  41a758:	stur	x1, [x29, #-24]
  41a75c:	and	w10, w2, w10
  41a760:	sturb	w10, [x29, #-25]
  41a764:	stur	x3, [x29, #-40]
  41a768:	stur	xzr, [x29, #-64]
  41a76c:	str	x8, [sp, #80]
  41a770:	str	xzr, [sp, #72]
  41a774:	str	xzr, [sp, #64]
  41a778:	strb	w9, [sp, #63]
  41a77c:	str	x11, [sp, #8]
  41a780:	ldur	x8, [x29, #-16]
  41a784:	cmp	x8, #0x0
  41a788:	cset	w9, ne  // ne = any
  41a78c:	mov	w10, #0x1                   	// #1
  41a790:	eor	w9, w9, #0x1
  41a794:	eor	w9, w9, w10
  41a798:	eor	w9, w9, w10
  41a79c:	and	w9, w9, #0x1
  41a7a0:	mov	w0, w9
  41a7a4:	sxtw	x8, w0
  41a7a8:	cbz	x8, 41a7d0 <ascii_strlower_n@plt+0x16370>
  41a7ac:	mov	w8, wzr
  41a7b0:	mov	w0, w8
  41a7b4:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41a7b8:	add	x1, x1, #0xc51
  41a7bc:	ldr	x2, [sp, #8]
  41a7c0:	mov	w3, #0x56f                 	// #1391
  41a7c4:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41a7c8:	add	x4, x4, #0x4a1
  41a7cc:	bl	4039d0 <log_assert_failed_realm@plt>
  41a7d0:	ldur	x8, [x29, #-24]
  41a7d4:	cmp	x8, #0x0
  41a7d8:	cset	w9, ne  // ne = any
  41a7dc:	mov	w10, #0x1                   	// #1
  41a7e0:	eor	w9, w9, #0x1
  41a7e4:	eor	w9, w9, w10
  41a7e8:	eor	w9, w9, w10
  41a7ec:	and	w9, w9, #0x1
  41a7f0:	mov	w0, w9
  41a7f4:	sxtw	x8, w0
  41a7f8:	cbz	x8, 41a820 <ascii_strlower_n@plt+0x163c0>
  41a7fc:	mov	w8, wzr
  41a800:	mov	w0, w8
  41a804:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41a808:	add	x1, x1, #0x4e1
  41a80c:	ldr	x2, [sp, #8]
  41a810:	mov	w3, #0x570                 	// #1392
  41a814:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41a818:	add	x4, x4, #0x4a1
  41a81c:	bl	4039d0 <log_assert_failed_realm@plt>
  41a820:	ldur	x8, [x29, #-16]
  41a824:	stur	x8, [x29, #-56]
  41a828:	ldur	x8, [x29, #-16]
  41a82c:	ldr	x8, [x8, #24]
  41a830:	stur	x8, [x29, #-48]
  41a834:	ldur	x8, [x29, #-16]
  41a838:	ldr	x8, [x8, #24]
  41a83c:	stur	x8, [x29, #-72]
  41a840:	ldur	x8, [x29, #-16]
  41a844:	ldrb	w9, [x8, #160]
  41a848:	mov	w10, #0x2                   	// #2
  41a84c:	lsr	w9, w9, w10
  41a850:	and	w9, w9, #0x1
  41a854:	tbnz	w9, #0, 41a85c <ascii_strlower_n@plt+0x163fc>
  41a858:	b	41a864 <ascii_strlower_n@plt+0x16404>
  41a85c:	mov	w8, #0x0                   	// #0
  41a860:	sturb	w8, [x29, #-25]
  41a864:	ldur	x0, [x29, #-16]
  41a868:	add	x1, sp, #0x37
  41a86c:	mov	x8, xzr
  41a870:	mov	x2, x8
  41a874:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41a878:	str	w0, [sp, #56]
  41a87c:	ldr	w9, [sp, #56]
  41a880:	cmp	w9, #0x0
  41a884:	cset	w9, ge  // ge = tcont
  41a888:	tbnz	w9, #0, 41a8a0 <ascii_strlower_n@plt+0x16440>
  41a88c:	ldr	w8, [sp, #56]
  41a890:	stur	w8, [x29, #-4]
  41a894:	mov	w8, #0x1                   	// #1
  41a898:	str	w8, [sp, #48]
  41a89c:	b	41ab64 <ascii_strlower_n@plt+0x16704>
  41a8a0:	ldrb	w8, [sp, #55]
  41a8a4:	cbnz	w8, 41a8ac <ascii_strlower_n@plt+0x1644c>
  41a8a8:	b	41aac0 <ascii_strlower_n@plt+0x16660>
  41a8ac:	ldrb	w8, [sp, #55]
  41a8b0:	cmp	w8, #0x3f
  41a8b4:	b.gt	41a9cc <ascii_strlower_n@plt+0x1656c>
  41a8b8:	ldur	x0, [x29, #-16]
  41a8bc:	ldrb	w8, [sp, #55]
  41a8c0:	mov	w1, w8
  41a8c4:	add	x2, sp, #0x28
  41a8c8:	mov	x9, xzr
  41a8cc:	mov	x3, x9
  41a8d0:	bl	419d78 <ascii_strlower_n@plt+0x15918>
  41a8d4:	str	w0, [sp, #56]
  41a8d8:	ldr	w8, [sp, #56]
  41a8dc:	cmp	w8, #0x0
  41a8e0:	cset	w8, ge  // ge = tcont
  41a8e4:	tbnz	w8, #0, 41a8fc <ascii_strlower_n@plt+0x1649c>
  41a8e8:	ldr	w8, [sp, #56]
  41a8ec:	stur	w8, [x29, #-4]
  41a8f0:	mov	w8, #0x1                   	// #1
  41a8f4:	str	w8, [sp, #48]
  41a8f8:	b	41ab64 <ascii_strlower_n@plt+0x16704>
  41a8fc:	ldr	x8, [sp, #72]
  41a900:	ldrb	w9, [sp, #63]
  41a904:	eor	w9, w9, #0x1
  41a908:	and	w9, w9, #0x1
  41a90c:	add	x8, x8, w9, sxtw
  41a910:	add	x2, x8, #0xfd
  41a914:	add	x0, sp, #0x50
  41a918:	add	x1, sp, #0x40
  41a91c:	mov	x3, #0x1                   	// #1
  41a920:	bl	4041b0 <greedy_realloc@plt>
  41a924:	cbnz	x0, 41a93c <ascii_strlower_n@plt+0x164dc>
  41a928:	mov	w8, #0xfffffff4            	// #-12
  41a92c:	stur	w8, [x29, #-4]
  41a930:	mov	w8, #0x1                   	// #1
  41a934:	str	w8, [sp, #48]
  41a938:	b	41ab64 <ascii_strlower_n@plt+0x16704>
  41a93c:	ldrb	w8, [sp, #63]
  41a940:	tbnz	w8, #0, 41a948 <ascii_strlower_n@plt+0x164e8>
  41a944:	b	41a954 <ascii_strlower_n@plt+0x164f4>
  41a948:	mov	w8, #0x0                   	// #0
  41a94c:	strb	w8, [sp, #63]
  41a950:	b	41a970 <ascii_strlower_n@plt+0x16510>
  41a954:	ldr	x8, [sp, #80]
  41a958:	ldr	x9, [sp, #72]
  41a95c:	add	x10, x9, #0x1
  41a960:	str	x10, [sp, #72]
  41a964:	add	x8, x8, x9
  41a968:	mov	w11, #0x2e                  	// #46
  41a96c:	strb	w11, [x8]
  41a970:	ldr	x0, [sp, #40]
  41a974:	ldrb	w8, [sp, #55]
  41a978:	mov	w1, w8
  41a97c:	ldr	x9, [sp, #80]
  41a980:	ldr	x10, [sp, #72]
  41a984:	add	x2, x9, x10
  41a988:	mov	x3, #0xfd                  	// #253
  41a98c:	bl	4041c0 <dns_label_escape@plt>
  41a990:	str	w0, [sp, #56]
  41a994:	ldr	w8, [sp, #56]
  41a998:	cmp	w8, #0x0
  41a99c:	cset	w8, ge  // ge = tcont
  41a9a0:	tbnz	w8, #0, 41a9b8 <ascii_strlower_n@plt+0x16558>
  41a9a4:	ldr	w8, [sp, #56]
  41a9a8:	stur	w8, [x29, #-4]
  41a9ac:	mov	w8, #0x1                   	// #1
  41a9b0:	str	w8, [sp, #48]
  41a9b4:	b	41ab64 <ascii_strlower_n@plt+0x16704>
  41a9b8:	ldrsw	x8, [sp, #56]
  41a9bc:	ldr	x9, [sp, #72]
  41a9c0:	add	x8, x9, x8
  41a9c4:	str	x8, [sp, #72]
  41a9c8:	b	41a864 <ascii_strlower_n@plt+0x16404>
  41a9cc:	ldurb	w8, [x29, #-25]
  41a9d0:	tbnz	w8, #0, 41a9d8 <ascii_strlower_n@plt+0x16578>
  41a9d4:	b	41aaa8 <ascii_strlower_n@plt+0x16648>
  41a9d8:	ldrb	w8, [sp, #55]
  41a9dc:	and	w8, w8, #0xc0
  41a9e0:	cmp	w8, #0xc0
  41a9e4:	b.ne	41aaa8 <ascii_strlower_n@plt+0x16648>  // b.any
  41a9e8:	ldur	x0, [x29, #-16]
  41a9ec:	add	x1, sp, #0x36
  41a9f0:	mov	x8, xzr
  41a9f4:	mov	x2, x8
  41a9f8:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41a9fc:	str	w0, [sp, #56]
  41aa00:	ldr	w9, [sp, #56]
  41aa04:	cmp	w9, #0x0
  41aa08:	cset	w9, ge  // ge = tcont
  41aa0c:	tbnz	w9, #0, 41aa24 <ascii_strlower_n@plt+0x165c4>
  41aa10:	ldr	w8, [sp, #56]
  41aa14:	stur	w8, [x29, #-4]
  41aa18:	mov	w8, #0x1                   	// #1
  41aa1c:	str	w8, [sp, #48]
  41aa20:	b	41ab64 <ascii_strlower_n@plt+0x16704>
  41aa24:	ldrb	w8, [sp, #55]
  41aa28:	and	w8, w8, #0xffffff3f
  41aa2c:	and	w8, w8, #0xffff
  41aa30:	ldrb	w9, [sp, #54]
  41aa34:	orr	w8, w9, w8, lsl #8
  41aa38:	strh	w8, [sp, #38]
  41aa3c:	ldrh	w8, [sp, #38]
  41aa40:	mov	w10, w8
  41aa44:	cmp	x10, #0xc
  41aa48:	b.cc	41aa60 <ascii_strlower_n@plt+0x16600>  // b.lo, b.ul, b.last
  41aa4c:	ldrh	w8, [sp, #38]
  41aa50:	mov	w9, w8
  41aa54:	ldur	x10, [x29, #-72]
  41aa58:	cmp	x9, x10
  41aa5c:	b.cc	41aa74 <ascii_strlower_n@plt+0x16614>  // b.lo, b.ul, b.last
  41aa60:	mov	w8, #0xffffffb6            	// #-74
  41aa64:	stur	w8, [x29, #-4]
  41aa68:	mov	w8, #0x1                   	// #1
  41aa6c:	str	w8, [sp, #48]
  41aa70:	b	41ab64 <ascii_strlower_n@plt+0x16704>
  41aa74:	ldur	x8, [x29, #-64]
  41aa78:	cbnz	x8, 41aa88 <ascii_strlower_n@plt+0x16628>
  41aa7c:	ldur	x8, [x29, #-16]
  41aa80:	ldr	x8, [x8, #24]
  41aa84:	stur	x8, [x29, #-64]
  41aa88:	ldrh	w8, [sp, #38]
  41aa8c:	mov	w9, w8
  41aa90:	stur	x9, [x29, #-72]
  41aa94:	ldrh	w8, [sp, #38]
  41aa98:	mov	w9, w8
  41aa9c:	ldur	x10, [x29, #-16]
  41aaa0:	str	x9, [x10, #24]
  41aaa4:	b	41aabc <ascii_strlower_n@plt+0x1665c>
  41aaa8:	mov	w8, #0xffffffb6            	// #-74
  41aaac:	stur	w8, [x29, #-4]
  41aab0:	mov	w8, #0x1                   	// #1
  41aab4:	str	w8, [sp, #48]
  41aab8:	b	41ab64 <ascii_strlower_n@plt+0x16704>
  41aabc:	b	41a864 <ascii_strlower_n@plt+0x16404>
  41aac0:	ldr	x8, [sp, #72]
  41aac4:	mov	x3, #0x1                   	// #1
  41aac8:	add	x2, x8, #0x1
  41aacc:	add	x0, sp, #0x50
  41aad0:	add	x1, sp, #0x40
  41aad4:	bl	4041b0 <greedy_realloc@plt>
  41aad8:	cbnz	x0, 41aaf0 <ascii_strlower_n@plt+0x16690>
  41aadc:	mov	w8, #0xfffffff4            	// #-12
  41aae0:	stur	w8, [x29, #-4]
  41aae4:	mov	w8, #0x1                   	// #1
  41aae8:	str	w8, [sp, #48]
  41aaec:	b	41ab64 <ascii_strlower_n@plt+0x16704>
  41aaf0:	ldr	x8, [sp, #80]
  41aaf4:	ldr	x9, [sp, #72]
  41aaf8:	add	x8, x8, x9
  41aafc:	mov	w10, #0x0                   	// #0
  41ab00:	strb	w10, [x8]
  41ab04:	ldur	x8, [x29, #-64]
  41ab08:	cbz	x8, 41ab18 <ascii_strlower_n@plt+0x166b8>
  41ab0c:	ldur	x8, [x29, #-64]
  41ab10:	ldur	x9, [x29, #-16]
  41ab14:	str	x8, [x9, #24]
  41ab18:	ldr	x8, [sp, #80]
  41ab1c:	str	x8, [sp, #24]
  41ab20:	mov	x8, xzr
  41ab24:	str	x8, [sp, #80]
  41ab28:	ldr	x8, [sp, #24]
  41ab2c:	str	x8, [sp, #16]
  41ab30:	ldr	x8, [sp, #16]
  41ab34:	ldur	x9, [x29, #-24]
  41ab38:	str	x8, [x9]
  41ab3c:	ldur	x8, [x29, #-40]
  41ab40:	cbz	x8, 41ab50 <ascii_strlower_n@plt+0x166f0>
  41ab44:	ldur	x8, [x29, #-48]
  41ab48:	ldur	x9, [x29, #-40]
  41ab4c:	str	x8, [x9]
  41ab50:	mov	x8, xzr
  41ab54:	stur	x8, [x29, #-56]
  41ab58:	stur	wzr, [x29, #-4]
  41ab5c:	mov	w8, #0x1                   	// #1
  41ab60:	str	w8, [sp, #48]
  41ab64:	add	x0, sp, #0x50
  41ab68:	bl	417dc8 <ascii_strlower_n@plt+0x13968>
  41ab6c:	sub	x0, x29, #0x38
  41ab70:	bl	41a58c <ascii_strlower_n@plt+0x1612c>
  41ab74:	ldur	w0, [x29, #-4]
  41ab78:	ldp	x29, x30, [sp, #160]
  41ab7c:	add	sp, sp, #0xb0
  41ab80:	ret
  41ab84:	sub	sp, sp, #0x70
  41ab88:	stp	x29, x30, [sp, #96]
  41ab8c:	add	x29, sp, #0x60
  41ab90:	mov	x8, xzr
  41ab94:	mov	w9, #0x0                   	// #0
  41ab98:	adrp	x10, 430000 <ascii_strlower_n@plt+0x2bba0>
  41ab9c:	add	x10, x10, #0xb94
  41aba0:	add	x10, x10, #0x3
  41aba4:	stur	x0, [x29, #-16]
  41aba8:	stur	x1, [x29, #-24]
  41abac:	stur	x2, [x29, #-32]
  41abb0:	stur	x3, [x29, #-40]
  41abb4:	str	x8, [sp, #32]
  41abb8:	strb	w9, [sp, #31]
  41abbc:	str	x10, [sp]
  41abc0:	ldur	x8, [x29, #-16]
  41abc4:	cmp	x8, #0x0
  41abc8:	cset	w9, ne  // ne = any
  41abcc:	mov	w10, #0x1                   	// #1
  41abd0:	eor	w9, w9, #0x1
  41abd4:	eor	w9, w9, w10
  41abd8:	eor	w9, w9, w10
  41abdc:	and	w9, w9, #0x1
  41abe0:	mov	w0, w9
  41abe4:	sxtw	x8, w0
  41abe8:	cbz	x8, 41ac10 <ascii_strlower_n@plt+0x167b0>
  41abec:	mov	w8, wzr
  41abf0:	mov	w0, w8
  41abf4:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41abf8:	add	x1, x1, #0xc51
  41abfc:	ldr	x2, [sp]
  41ac00:	mov	w3, #0x626                 	// #1574
  41ac04:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ac08:	add	x4, x4, #0x4e6
  41ac0c:	bl	4039d0 <log_assert_failed_realm@plt>
  41ac10:	ldur	x8, [x29, #-24]
  41ac14:	cmp	x8, #0x0
  41ac18:	cset	w9, ne  // ne = any
  41ac1c:	mov	w10, #0x1                   	// #1
  41ac20:	eor	w9, w9, #0x1
  41ac24:	eor	w9, w9, w10
  41ac28:	eor	w9, w9, w10
  41ac2c:	and	w9, w9, #0x1
  41ac30:	mov	w0, w9
  41ac34:	sxtw	x8, w0
  41ac38:	cbz	x8, 41ac60 <ascii_strlower_n@plt+0x16800>
  41ac3c:	mov	w8, wzr
  41ac40:	mov	w0, w8
  41ac44:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41ac48:	add	x1, x1, #0x42e
  41ac4c:	ldr	x2, [sp]
  41ac50:	mov	w3, #0x627                 	// #1575
  41ac54:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ac58:	add	x4, x4, #0x4e6
  41ac5c:	bl	4039d0 <log_assert_failed_realm@plt>
  41ac60:	ldur	x8, [x29, #-16]
  41ac64:	str	x8, [sp, #40]
  41ac68:	ldur	x8, [x29, #-16]
  41ac6c:	ldr	x8, [x8, #24]
  41ac70:	str	x8, [sp, #48]
  41ac74:	ldur	x0, [x29, #-16]
  41ac78:	add	x1, sp, #0x20
  41ac7c:	mov	w8, #0x1                   	// #1
  41ac80:	and	w2, w8, #0x1
  41ac84:	mov	x9, xzr
  41ac88:	mov	x3, x9
  41ac8c:	bl	41a730 <ascii_strlower_n@plt+0x162d0>
  41ac90:	str	w0, [sp, #12]
  41ac94:	ldr	w8, [sp, #12]
  41ac98:	cmp	w8, #0x0
  41ac9c:	cset	w8, ge  // ge = tcont
  41aca0:	tbnz	w8, #0, 41acb8 <ascii_strlower_n@plt+0x16858>
  41aca4:	ldr	w8, [sp, #12]
  41aca8:	stur	w8, [x29, #-4]
  41acac:	mov	w8, #0x1                   	// #1
  41acb0:	str	w8, [sp, #8]
  41acb4:	b	41adf0 <ascii_strlower_n@plt+0x16990>
  41acb8:	ldur	x0, [x29, #-16]
  41acbc:	add	x1, sp, #0x1a
  41acc0:	mov	x8, xzr
  41acc4:	mov	x2, x8
  41acc8:	bl	41a1ac <ascii_strlower_n@plt+0x15d4c>
  41accc:	str	w0, [sp, #12]
  41acd0:	ldr	w9, [sp, #12]
  41acd4:	cmp	w9, #0x0
  41acd8:	cset	w9, ge  // ge = tcont
  41acdc:	tbnz	w9, #0, 41acf4 <ascii_strlower_n@plt+0x16894>
  41ace0:	ldr	w8, [sp, #12]
  41ace4:	stur	w8, [x29, #-4]
  41ace8:	mov	w8, #0x1                   	// #1
  41acec:	str	w8, [sp, #8]
  41acf0:	b	41adf0 <ascii_strlower_n@plt+0x16990>
  41acf4:	ldur	x0, [x29, #-16]
  41acf8:	add	x1, sp, #0x1c
  41acfc:	mov	x8, xzr
  41ad00:	mov	x2, x8
  41ad04:	bl	41a1ac <ascii_strlower_n@plt+0x15d4c>
  41ad08:	str	w0, [sp, #12]
  41ad0c:	ldr	w9, [sp, #12]
  41ad10:	cmp	w9, #0x0
  41ad14:	cset	w9, ge  // ge = tcont
  41ad18:	tbnz	w9, #0, 41ad30 <ascii_strlower_n@plt+0x168d0>
  41ad1c:	ldr	w8, [sp, #12]
  41ad20:	stur	w8, [x29, #-4]
  41ad24:	mov	w8, #0x1                   	// #1
  41ad28:	str	w8, [sp, #8]
  41ad2c:	b	41adf0 <ascii_strlower_n@plt+0x16990>
  41ad30:	ldur	x8, [x29, #-16]
  41ad34:	ldr	w9, [x8, #4]
  41ad38:	cmp	w9, #0x1
  41ad3c:	b.ne	41ad6c <ascii_strlower_n@plt+0x1690c>  // b.any
  41ad40:	ldrh	w8, [sp, #26]
  41ad44:	cmp	w8, #0x29
  41ad48:	b.eq	41ad6c <ascii_strlower_n@plt+0x1690c>  // b.none
  41ad4c:	ldrh	w8, [sp, #28]
  41ad50:	and	w8, w8, #0x8000
  41ad54:	cbz	w8, 41ad6c <ascii_strlower_n@plt+0x1690c>
  41ad58:	ldrh	w8, [sp, #28]
  41ad5c:	and	w8, w8, #0xffff7fff
  41ad60:	strh	w8, [sp, #28]
  41ad64:	mov	w8, #0x1                   	// #1
  41ad68:	strb	w8, [sp, #31]
  41ad6c:	ldrh	w0, [sp, #28]
  41ad70:	ldrh	w1, [sp, #26]
  41ad74:	ldr	x2, [sp, #32]
  41ad78:	bl	41e9e4 <ascii_strlower_n@plt+0x1a584>
  41ad7c:	str	x0, [sp, #16]
  41ad80:	ldr	x8, [sp, #16]
  41ad84:	cbnz	x8, 41ad9c <ascii_strlower_n@plt+0x1693c>
  41ad88:	mov	w8, #0xfffffff4            	// #-12
  41ad8c:	stur	w8, [x29, #-4]
  41ad90:	mov	w8, #0x1                   	// #1
  41ad94:	str	w8, [sp, #8]
  41ad98:	b	41adf0 <ascii_strlower_n@plt+0x16990>
  41ad9c:	mov	x8, xzr
  41ada0:	str	x8, [sp, #32]
  41ada4:	ldr	x8, [sp, #16]
  41ada8:	ldur	x9, [x29, #-24]
  41adac:	str	x8, [x9]
  41adb0:	ldur	x8, [x29, #-32]
  41adb4:	cbz	x8, 41adc8 <ascii_strlower_n@plt+0x16968>
  41adb8:	ldrb	w8, [sp, #31]
  41adbc:	ldur	x9, [x29, #-32]
  41adc0:	and	w8, w8, #0x1
  41adc4:	strb	w8, [x9]
  41adc8:	ldur	x8, [x29, #-40]
  41adcc:	cbz	x8, 41addc <ascii_strlower_n@plt+0x1697c>
  41add0:	ldr	x8, [sp, #48]
  41add4:	ldur	x9, [x29, #-40]
  41add8:	str	x8, [x9]
  41addc:	mov	x8, xzr
  41ade0:	str	x8, [sp, #40]
  41ade4:	stur	wzr, [x29, #-4]
  41ade8:	mov	w8, #0x1                   	// #1
  41adec:	str	w8, [sp, #8]
  41adf0:	add	x0, sp, #0x20
  41adf4:	bl	417dc8 <ascii_strlower_n@plt+0x13968>
  41adf8:	add	x0, sp, #0x28
  41adfc:	bl	41a58c <ascii_strlower_n@plt+0x1612c>
  41ae00:	ldur	w0, [x29, #-4]
  41ae04:	ldp	x29, x30, [sp, #96]
  41ae08:	add	sp, sp, #0x70
  41ae0c:	ret
  41ae10:	sub	sp, sp, #0xf0
  41ae14:	stp	x29, x30, [sp, #224]
  41ae18:	add	x29, sp, #0xe0
  41ae1c:	mov	x8, xzr
  41ae20:	adrp	x9, 430000 <ascii_strlower_n@plt+0x2bba0>
  41ae24:	add	x9, x9, #0xb94
  41ae28:	add	x9, x9, #0x3
  41ae2c:	adrp	x10, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ae30:	add	x10, x10, #0x531
  41ae34:	stur	x0, [x29, #-16]
  41ae38:	stur	x1, [x29, #-24]
  41ae3c:	stur	x2, [x29, #-32]
  41ae40:	stur	x3, [x29, #-40]
  41ae44:	stur	x8, [x29, #-48]
  41ae48:	stur	x8, [x29, #-56]
  41ae4c:	str	x9, [sp, #24]
  41ae50:	str	x10, [sp, #16]
  41ae54:	ldur	x8, [x29, #-16]
  41ae58:	cmp	x8, #0x0
  41ae5c:	cset	w9, ne  // ne = any
  41ae60:	mov	w10, #0x1                   	// #1
  41ae64:	eor	w9, w9, #0x1
  41ae68:	eor	w9, w9, w10
  41ae6c:	eor	w9, w9, w10
  41ae70:	and	w9, w9, #0x1
  41ae74:	mov	w0, w9
  41ae78:	sxtw	x8, w0
  41ae7c:	cbz	x8, 41aea0 <ascii_strlower_n@plt+0x16a40>
  41ae80:	mov	w8, wzr
  41ae84:	mov	w0, w8
  41ae88:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41ae8c:	add	x1, x1, #0xc51
  41ae90:	ldr	x2, [sp, #24]
  41ae94:	mov	w3, #0x65e                 	// #1630
  41ae98:	ldr	x4, [sp, #16]
  41ae9c:	bl	4039d0 <log_assert_failed_realm@plt>
  41aea0:	ldur	x8, [x29, #-24]
  41aea4:	cmp	x8, #0x0
  41aea8:	cset	w9, ne  // ne = any
  41aeac:	mov	w10, #0x1                   	// #1
  41aeb0:	eor	w9, w9, #0x1
  41aeb4:	eor	w9, w9, w10
  41aeb8:	eor	w9, w9, w10
  41aebc:	and	w9, w9, #0x1
  41aec0:	mov	w0, w9
  41aec4:	sxtw	x8, w0
  41aec8:	cbz	x8, 41aeec <ascii_strlower_n@plt+0x16a8c>
  41aecc:	mov	w8, wzr
  41aed0:	mov	w0, w8
  41aed4:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41aed8:	add	x1, x1, #0x42e
  41aedc:	ldr	x2, [sp, #24]
  41aee0:	mov	w3, #0x65f                 	// #1631
  41aee4:	ldr	x4, [sp, #16]
  41aee8:	bl	4039d0 <log_assert_failed_realm@plt>
  41aeec:	ldur	x8, [x29, #-16]
  41aef0:	stur	x8, [x29, #-72]
  41aef4:	ldur	x8, [x29, #-16]
  41aef8:	ldr	x8, [x8, #24]
  41aefc:	stur	x8, [x29, #-64]
  41af00:	ldur	x0, [x29, #-16]
  41af04:	sub	x1, x29, #0x38
  41af08:	sub	x2, x29, #0x53
  41af0c:	mov	x8, xzr
  41af10:	mov	x3, x8
  41af14:	bl	41ab84 <ascii_strlower_n@plt+0x16724>
  41af18:	stur	w0, [x29, #-88]
  41af1c:	ldur	w9, [x29, #-88]
  41af20:	cmp	w9, #0x0
  41af24:	cset	w9, ge  // ge = tcont
  41af28:	tbnz	w9, #0, 41af40 <ascii_strlower_n@plt+0x16ae0>
  41af2c:	ldur	w8, [x29, #-88]
  41af30:	stur	w8, [x29, #-4]
  41af34:	mov	w8, #0x1                   	// #1
  41af38:	stur	w8, [x29, #-92]
  41af3c:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41af40:	ldur	x8, [x29, #-56]
  41af44:	ldrh	w0, [x8, #4]
  41af48:	bl	42bc4c <ascii_strlower_n@plt+0x277ec>
  41af4c:	tbnz	w0, #0, 41af54 <ascii_strlower_n@plt+0x16af4>
  41af50:	b	41af64 <ascii_strlower_n@plt+0x16b04>
  41af54:	ldur	x8, [x29, #-56]
  41af58:	ldrh	w0, [x8, #6]
  41af5c:	bl	42bbdc <ascii_strlower_n@plt+0x2777c>
  41af60:	tbnz	w0, #0, 41af78 <ascii_strlower_n@plt+0x16b18>
  41af64:	mov	w8, #0xffffffb6            	// #-74
  41af68:	stur	w8, [x29, #-4]
  41af6c:	mov	w8, #0x1                   	// #1
  41af70:	stur	w8, [x29, #-92]
  41af74:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41af78:	ldur	x0, [x29, #-56]
  41af7c:	bl	41fcec <ascii_strlower_n@plt+0x1b88c>
  41af80:	stur	x0, [x29, #-48]
  41af84:	ldur	x8, [x29, #-48]
  41af88:	cbnz	x8, 41afa0 <ascii_strlower_n@plt+0x16b40>
  41af8c:	mov	w8, #0xfffffff4            	// #-12
  41af90:	stur	w8, [x29, #-4]
  41af94:	mov	w8, #0x1                   	// #1
  41af98:	stur	w8, [x29, #-92]
  41af9c:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41afa0:	ldur	x0, [x29, #-16]
  41afa4:	ldur	x8, [x29, #-48]
  41afa8:	add	x1, x8, #0x18
  41afac:	mov	x8, xzr
  41afb0:	mov	x2, x8
  41afb4:	bl	41a2ac <ascii_strlower_n@plt+0x15e4c>
  41afb8:	stur	w0, [x29, #-88]
  41afbc:	ldur	w9, [x29, #-88]
  41afc0:	cmp	w9, #0x0
  41afc4:	cset	w9, ge  // ge = tcont
  41afc8:	tbnz	w9, #0, 41afe0 <ascii_strlower_n@plt+0x16b80>
  41afcc:	ldur	w8, [x29, #-88]
  41afd0:	stur	w8, [x29, #-4]
  41afd4:	mov	w8, #0x1                   	// #1
  41afd8:	stur	w8, [x29, #-92]
  41afdc:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41afe0:	ldur	x8, [x29, #-48]
  41afe4:	ldr	w9, [x8, #24]
  41afe8:	and	w9, w9, #0x80000000
  41afec:	cbz	w9, 41aff8 <ascii_strlower_n@plt+0x16b98>
  41aff0:	ldur	x8, [x29, #-48]
  41aff4:	str	wzr, [x8, #24]
  41aff8:	ldur	x0, [x29, #-16]
  41affc:	sub	x1, x29, #0x52
  41b000:	mov	x8, xzr
  41b004:	mov	x2, x8
  41b008:	bl	41a1ac <ascii_strlower_n@plt+0x15d4c>
  41b00c:	stur	w0, [x29, #-88]
  41b010:	ldur	w9, [x29, #-88]
  41b014:	cmp	w9, #0x0
  41b018:	cset	w9, ge  // ge = tcont
  41b01c:	tbnz	w9, #0, 41b034 <ascii_strlower_n@plt+0x16bd4>
  41b020:	ldur	w8, [x29, #-88]
  41b024:	stur	w8, [x29, #-4]
  41b028:	mov	w8, #0x1                   	// #1
  41b02c:	stur	w8, [x29, #-92]
  41b030:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b034:	ldur	x8, [x29, #-16]
  41b038:	ldr	x8, [x8, #24]
  41b03c:	ldurh	w9, [x29, #-82]
  41b040:	mov	w10, w9
  41b044:	add	x8, x8, x10
  41b048:	ldur	x10, [x29, #-16]
  41b04c:	ldr	x10, [x10, #8]
  41b050:	cmp	x8, x10
  41b054:	b.ls	41b06c <ascii_strlower_n@plt+0x16c0c>  // b.plast
  41b058:	mov	w8, #0xffffffb6            	// #-74
  41b05c:	stur	w8, [x29, #-4]
  41b060:	mov	w8, #0x1                   	// #1
  41b064:	stur	w8, [x29, #-92]
  41b068:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b06c:	ldur	x8, [x29, #-16]
  41b070:	ldr	x8, [x8, #24]
  41b074:	stur	x8, [x29, #-80]
  41b078:	ldur	x8, [x29, #-48]
  41b07c:	ldr	x8, [x8, #8]
  41b080:	ldrh	w9, [x8, #6]
  41b084:	cmp	w9, #0x1
  41b088:	str	w9, [sp, #12]
  41b08c:	b.eq	41b568 <ascii_strlower_n@plt+0x17108>  // b.none
  41b090:	b	41b094 <ascii_strlower_n@plt+0x16c34>
  41b094:	ldr	w8, [sp, #12]
  41b098:	cmp	w8, #0x2
  41b09c:	b.eq	41b2dc <ascii_strlower_n@plt+0x16e7c>  // b.none
  41b0a0:	b	41b0a4 <ascii_strlower_n@plt+0x16c44>
  41b0a4:	ldr	w8, [sp, #12]
  41b0a8:	cmp	w8, #0x5
  41b0ac:	b.eq	41b2dc <ascii_strlower_n@plt+0x16e7c>  // b.none
  41b0b0:	b	41b0b4 <ascii_strlower_n@plt+0x16c54>
  41b0b4:	ldr	w8, [sp, #12]
  41b0b8:	cmp	w8, #0x6
  41b0bc:	b.eq	41b5b0 <ascii_strlower_n@plt+0x17150>  // b.none
  41b0c0:	b	41b0c4 <ascii_strlower_n@plt+0x16c64>
  41b0c4:	ldr	w8, [sp, #12]
  41b0c8:	cmp	w8, #0xc
  41b0cc:	b.eq	41b2dc <ascii_strlower_n@plt+0x16e7c>  // b.none
  41b0d0:	b	41b0d4 <ascii_strlower_n@plt+0x16c74>
  41b0d4:	ldr	w8, [sp, #12]
  41b0d8:	cmp	w8, #0xd
  41b0dc:	b.eq	41b304 <ascii_strlower_n@plt+0x16ea4>  // b.none
  41b0e0:	b	41b0e4 <ascii_strlower_n@plt+0x16c84>
  41b0e4:	ldr	w8, [sp, #12]
  41b0e8:	cmp	w8, #0xf
  41b0ec:	b.eq	41b760 <ascii_strlower_n@plt+0x17300>  // b.none
  41b0f0:	b	41b0f4 <ascii_strlower_n@plt+0x16c94>
  41b0f4:	ldr	w8, [sp, #12]
  41b0f8:	cmp	w8, #0x10
  41b0fc:	b.eq	41b364 <ascii_strlower_n@plt+0x16f04>  // b.none
  41b100:	b	41b104 <ascii_strlower_n@plt+0x16ca4>
  41b104:	ldr	w8, [sp, #12]
  41b108:	cmp	w8, #0x1c
  41b10c:	b.eq	41b58c <ascii_strlower_n@plt+0x1712c>  // b.none
  41b110:	b	41b114 <ascii_strlower_n@plt+0x16cb4>
  41b114:	ldr	w8, [sp, #12]
  41b118:	cmp	w8, #0x1d
  41b11c:	b.eq	41b7c8 <ascii_strlower_n@plt+0x17368>  // b.none
  41b120:	b	41b124 <ascii_strlower_n@plt+0x16cc4>
  41b124:	ldr	w8, [sp, #12]
  41b128:	cmp	w8, #0x21
  41b12c:	b.eq	41b1f4 <ascii_strlower_n@plt+0x16d94>  // b.none
  41b130:	b	41b134 <ascii_strlower_n@plt+0x16cd4>
  41b134:	ldr	w8, [sp, #12]
  41b138:	cmp	w8, #0x27
  41b13c:	b.eq	41b2dc <ascii_strlower_n@plt+0x16e7c>  // b.none
  41b140:	b	41b144 <ascii_strlower_n@plt+0x16ce4>
  41b144:	ldr	w8, [sp, #12]
  41b148:	cmp	w8, #0x29
  41b14c:	b.eq	41c584 <ascii_strlower_n@plt+0x18124>  // b.none
  41b150:	b	41b154 <ascii_strlower_n@plt+0x16cf4>
  41b154:	ldr	w8, [sp, #12]
  41b158:	cmp	w8, #0x2b
  41b15c:	b.eq	41ba28 <ascii_strlower_n@plt+0x175c8>  // b.none
  41b160:	b	41b164 <ascii_strlower_n@plt+0x16d04>
  41b164:	ldr	w8, [sp, #12]
  41b168:	cmp	w8, #0x2c
  41b16c:	b.eq	41bb8c <ascii_strlower_n@plt+0x1772c>  // b.none
  41b170:	b	41b174 <ascii_strlower_n@plt+0x16d14>
  41b174:	ldr	w8, [sp, #12]
  41b178:	cmp	w8, #0x2e
  41b17c:	b.eq	41bdcc <ascii_strlower_n@plt+0x1796c>  // b.none
  41b180:	b	41b184 <ascii_strlower_n@plt+0x16d24>
  41b184:	ldr	w8, [sp, #12]
  41b188:	cmp	w8, #0x2f
  41b18c:	b.eq	41c074 <ascii_strlower_n@plt+0x17c14>  // b.none
  41b190:	b	41b194 <ascii_strlower_n@plt+0x16d34>
  41b194:	ldr	w8, [sp, #12]
  41b198:	cmp	w8, #0x30
  41b19c:	b.eq	41bc8c <ascii_strlower_n@plt+0x1782c>  // b.none
  41b1a0:	b	41b1a4 <ascii_strlower_n@plt+0x16d44>
  41b1a4:	ldr	w8, [sp, #12]
  41b1a8:	cmp	w8, #0x32
  41b1ac:	b.eq	41c114 <ascii_strlower_n@plt+0x17cb4>  // b.none
  41b1b0:	b	41b1b4 <ascii_strlower_n@plt+0x16d54>
  41b1b4:	ldr	w8, [sp, #12]
  41b1b8:	cmp	w8, #0x34
  41b1bc:	b.eq	41c34c <ascii_strlower_n@plt+0x17eec>  // b.none
  41b1c0:	b	41b1c4 <ascii_strlower_n@plt+0x16d64>
  41b1c4:	ldr	w8, [sp, #12]
  41b1c8:	cmp	w8, #0x3d
  41b1cc:	b.eq	41c584 <ascii_strlower_n@plt+0x18124>  // b.none
  41b1d0:	b	41b1d4 <ascii_strlower_n@plt+0x16d74>
  41b1d4:	ldr	w8, [sp, #12]
  41b1d8:	cmp	w8, #0x63
  41b1dc:	b.eq	41b364 <ascii_strlower_n@plt+0x16f04>  // b.none
  41b1e0:	b	41b1e4 <ascii_strlower_n@plt+0x16d84>
  41b1e4:	ldr	w8, [sp, #12]
  41b1e8:	cmp	w8, #0x101
  41b1ec:	b.eq	41c48c <ascii_strlower_n@plt+0x1802c>  // b.none
  41b1f0:	b	41c584 <ascii_strlower_n@plt+0x18124>
  41b1f4:	ldur	x0, [x29, #-16]
  41b1f8:	ldur	x8, [x29, #-48]
  41b1fc:	add	x1, x8, #0x50
  41b200:	mov	x8, xzr
  41b204:	mov	x2, x8
  41b208:	bl	41a1ac <ascii_strlower_n@plt+0x15d4c>
  41b20c:	stur	w0, [x29, #-88]
  41b210:	ldur	w9, [x29, #-88]
  41b214:	cmp	w9, #0x0
  41b218:	cset	w9, ge  // ge = tcont
  41b21c:	tbnz	w9, #0, 41b234 <ascii_strlower_n@plt+0x16dd4>
  41b220:	ldur	w8, [x29, #-88]
  41b224:	stur	w8, [x29, #-4]
  41b228:	mov	w8, #0x1                   	// #1
  41b22c:	stur	w8, [x29, #-92]
  41b230:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b234:	ldur	x0, [x29, #-16]
  41b238:	ldur	x8, [x29, #-48]
  41b23c:	add	x1, x8, #0x52
  41b240:	mov	x8, xzr
  41b244:	mov	x2, x8
  41b248:	bl	41a1ac <ascii_strlower_n@plt+0x15d4c>
  41b24c:	stur	w0, [x29, #-88]
  41b250:	ldur	w9, [x29, #-88]
  41b254:	cmp	w9, #0x0
  41b258:	cset	w9, ge  // ge = tcont
  41b25c:	tbnz	w9, #0, 41b274 <ascii_strlower_n@plt+0x16e14>
  41b260:	ldur	w8, [x29, #-88]
  41b264:	stur	w8, [x29, #-4]
  41b268:	mov	w8, #0x1                   	// #1
  41b26c:	stur	w8, [x29, #-92]
  41b270:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b274:	ldur	x0, [x29, #-16]
  41b278:	ldur	x8, [x29, #-48]
  41b27c:	add	x1, x8, #0x54
  41b280:	mov	x8, xzr
  41b284:	mov	x2, x8
  41b288:	bl	41a1ac <ascii_strlower_n@plt+0x15d4c>
  41b28c:	stur	w0, [x29, #-88]
  41b290:	ldur	w9, [x29, #-88]
  41b294:	cmp	w9, #0x0
  41b298:	cset	w9, ge  // ge = tcont
  41b29c:	tbnz	w9, #0, 41b2b4 <ascii_strlower_n@plt+0x16e54>
  41b2a0:	ldur	w8, [x29, #-88]
  41b2a4:	stur	w8, [x29, #-4]
  41b2a8:	mov	w8, #0x1                   	// #1
  41b2ac:	stur	w8, [x29, #-92]
  41b2b0:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b2b4:	ldur	x0, [x29, #-16]
  41b2b8:	ldur	x8, [x29, #-48]
  41b2bc:	add	x1, x8, #0x58
  41b2c0:	mov	w9, #0x1                   	// #1
  41b2c4:	and	w2, w9, #0x1
  41b2c8:	mov	x8, xzr
  41b2cc:	mov	x3, x8
  41b2d0:	bl	41a730 <ascii_strlower_n@plt+0x162d0>
  41b2d4:	stur	w0, [x29, #-88]
  41b2d8:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41b2dc:	ldur	x0, [x29, #-16]
  41b2e0:	ldur	x8, [x29, #-48]
  41b2e4:	add	x1, x8, #0x50
  41b2e8:	mov	w9, #0x1                   	// #1
  41b2ec:	and	w2, w9, #0x1
  41b2f0:	mov	x8, xzr
  41b2f4:	mov	x3, x8
  41b2f8:	bl	41a730 <ascii_strlower_n@plt+0x162d0>
  41b2fc:	stur	w0, [x29, #-88]
  41b300:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41b304:	ldur	x0, [x29, #-16]
  41b308:	ldur	x8, [x29, #-48]
  41b30c:	add	x1, x8, #0x50
  41b310:	mov	x8, xzr
  41b314:	mov	x2, x8
  41b318:	bl	41a3ac <ascii_strlower_n@plt+0x15f4c>
  41b31c:	stur	w0, [x29, #-88]
  41b320:	ldur	w9, [x29, #-88]
  41b324:	cmp	w9, #0x0
  41b328:	cset	w9, ge  // ge = tcont
  41b32c:	tbnz	w9, #0, 41b344 <ascii_strlower_n@plt+0x16ee4>
  41b330:	ldur	w8, [x29, #-88]
  41b334:	stur	w8, [x29, #-4]
  41b338:	mov	w8, #0x1                   	// #1
  41b33c:	stur	w8, [x29, #-92]
  41b340:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b344:	ldur	x0, [x29, #-16]
  41b348:	ldur	x8, [x29, #-48]
  41b34c:	add	x1, x8, #0x58
  41b350:	mov	x8, xzr
  41b354:	mov	x2, x8
  41b358:	bl	41a3ac <ascii_strlower_n@plt+0x15f4c>
  41b35c:	stur	w0, [x29, #-88]
  41b360:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41b364:	ldurh	w8, [x29, #-82]
  41b368:	cmp	w8, #0x0
  41b36c:	cset	w8, gt
  41b370:	tbnz	w8, #0, 41b3ac <ascii_strlower_n@plt+0x16f4c>
  41b374:	ldur	x8, [x29, #-48]
  41b378:	add	x0, x8, #0x50
  41b37c:	bl	425100 <ascii_strlower_n@plt+0x20ca0>
  41b380:	stur	w0, [x29, #-88]
  41b384:	ldur	w9, [x29, #-88]
  41b388:	cmp	w9, #0x0
  41b38c:	cset	w9, ge  // ge = tcont
  41b390:	tbnz	w9, #0, 41b3a8 <ascii_strlower_n@plt+0x16f48>
  41b394:	ldur	w8, [x29, #-88]
  41b398:	stur	w8, [x29, #-4]
  41b39c:	mov	w8, #0x1                   	// #1
  41b3a0:	stur	w8, [x29, #-92]
  41b3a4:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b3a8:	b	41b560 <ascii_strlower_n@plt+0x17100>
  41b3ac:	mov	x8, xzr
  41b3b0:	stur	x8, [x29, #-104]
  41b3b4:	ldur	x8, [x29, #-16]
  41b3b8:	ldr	x8, [x8, #24]
  41b3bc:	ldur	x9, [x29, #-80]
  41b3c0:	ldurh	w10, [x29, #-82]
  41b3c4:	mov	w11, w10
  41b3c8:	add	x9, x9, x11
  41b3cc:	cmp	x8, x9
  41b3d0:	b.cs	41b560 <ascii_strlower_n@plt+0x17100>  // b.hs, b.nlast
  41b3d4:	ldur	x0, [x29, #-16]
  41b3d8:	add	x1, sp, #0x68
  41b3dc:	add	x2, sp, #0x60
  41b3e0:	mov	x8, xzr
  41b3e4:	mov	x3, x8
  41b3e8:	bl	41a5c8 <ascii_strlower_n@plt+0x16168>
  41b3ec:	stur	w0, [x29, #-88]
  41b3f0:	ldur	w9, [x29, #-88]
  41b3f4:	cmp	w9, #0x0
  41b3f8:	cset	w9, ge  // ge = tcont
  41b3fc:	tbnz	w9, #0, 41b414 <ascii_strlower_n@plt+0x16fb4>
  41b400:	ldur	w8, [x29, #-88]
  41b404:	stur	w8, [x29, #-4]
  41b408:	mov	w8, #0x1                   	// #1
  41b40c:	stur	w8, [x29, #-92]
  41b410:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b414:	ldr	x8, [sp, #96]
  41b418:	add	x8, x8, #0x18
  41b41c:	mov	x0, #0x1                   	// #1
  41b420:	add	x1, x8, #0x1
  41b424:	bl	4040d0 <calloc@plt>
  41b428:	str	x0, [sp, #112]
  41b42c:	ldr	x8, [sp, #112]
  41b430:	cbnz	x8, 41b448 <ascii_strlower_n@plt+0x16fe8>
  41b434:	mov	w8, #0xfffffff4            	// #-12
  41b438:	stur	w8, [x29, #-4]
  41b43c:	mov	w8, #0x1                   	// #1
  41b440:	stur	w8, [x29, #-92]
  41b444:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b448:	ldr	x8, [sp, #112]
  41b44c:	add	x0, x8, #0x18
  41b450:	ldr	x1, [sp, #104]
  41b454:	ldr	x2, [sp, #96]
  41b458:	bl	403fa0 <memcpy@plt>
  41b45c:	ldr	x8, [sp, #96]
  41b460:	ldr	x9, [sp, #112]
  41b464:	str	x8, [x9]
  41b468:	ldur	x8, [x29, #-48]
  41b46c:	add	x8, x8, #0x50
  41b470:	str	x8, [sp, #88]
  41b474:	ldur	x8, [x29, #-104]
  41b478:	str	x8, [sp, #80]
  41b47c:	ldr	x8, [sp, #112]
  41b480:	str	x8, [sp, #72]
  41b484:	ldr	x8, [sp, #72]
  41b488:	cmp	x8, #0x0
  41b48c:	cset	w9, ne  // ne = any
  41b490:	mov	w10, #0x1                   	// #1
  41b494:	eor	w9, w9, #0x1
  41b498:	eor	w9, w9, w10
  41b49c:	eor	w9, w9, w10
  41b4a0:	and	w9, w9, #0x1
  41b4a4:	mov	w0, w9
  41b4a8:	sxtw	x8, w0
  41b4ac:	cbz	x8, 41b4d0 <ascii_strlower_n@plt+0x17070>
  41b4b0:	mov	w8, wzr
  41b4b4:	mov	w0, w8
  41b4b8:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41b4bc:	add	x1, x1, #0x57e
  41b4c0:	ldr	x2, [sp, #24]
  41b4c4:	mov	w3, #0x6b7                 	// #1719
  41b4c8:	ldr	x4, [sp, #16]
  41b4cc:	bl	4039d0 <log_assert_failed_realm@plt>
  41b4d0:	ldr	x8, [sp, #80]
  41b4d4:	cbnz	x8, 41b518 <ascii_strlower_n@plt+0x170b8>
  41b4d8:	ldr	x8, [sp, #88]
  41b4dc:	ldr	x8, [x8]
  41b4e0:	ldr	x9, [sp, #72]
  41b4e4:	str	x8, [x9, #8]
  41b4e8:	cbz	x8, 41b4fc <ascii_strlower_n@plt+0x1709c>
  41b4ec:	ldr	x8, [sp, #72]
  41b4f0:	ldr	x9, [sp, #72]
  41b4f4:	ldr	x9, [x9, #8]
  41b4f8:	str	x8, [x9, #16]
  41b4fc:	ldr	x8, [sp, #72]
  41b500:	mov	x9, xzr
  41b504:	str	x9, [x8, #16]
  41b508:	ldr	x8, [sp, #72]
  41b50c:	ldr	x9, [sp, #88]
  41b510:	str	x8, [x9]
  41b514:	b	41b554 <ascii_strlower_n@plt+0x170f4>
  41b518:	ldr	x8, [sp, #80]
  41b51c:	ldr	x8, [x8, #8]
  41b520:	ldr	x9, [sp, #72]
  41b524:	str	x8, [x9, #8]
  41b528:	cbz	x8, 41b53c <ascii_strlower_n@plt+0x170dc>
  41b52c:	ldr	x8, [sp, #72]
  41b530:	ldr	x9, [sp, #72]
  41b534:	ldr	x9, [x9, #8]
  41b538:	str	x8, [x9, #16]
  41b53c:	ldr	x8, [sp, #80]
  41b540:	ldr	x9, [sp, #72]
  41b544:	str	x8, [x9, #16]
  41b548:	ldr	x8, [sp, #72]
  41b54c:	ldr	x9, [sp, #80]
  41b550:	str	x8, [x9, #8]
  41b554:	ldr	x8, [sp, #112]
  41b558:	stur	x8, [x29, #-104]
  41b55c:	b	41b3b4 <ascii_strlower_n@plt+0x16f54>
  41b560:	stur	wzr, [x29, #-88]
  41b564:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41b568:	ldur	x0, [x29, #-16]
  41b56c:	ldur	x8, [x29, #-48]
  41b570:	add	x1, x8, #0x50
  41b574:	mov	x2, #0x4                   	// #4
  41b578:	mov	x8, xzr
  41b57c:	mov	x3, x8
  41b580:	bl	419fb8 <ascii_strlower_n@plt+0x15b58>
  41b584:	stur	w0, [x29, #-88]
  41b588:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41b58c:	ldur	x0, [x29, #-16]
  41b590:	ldur	x8, [x29, #-48]
  41b594:	add	x1, x8, #0x50
  41b598:	mov	x2, #0x10                  	// #16
  41b59c:	mov	x8, xzr
  41b5a0:	mov	x3, x8
  41b5a4:	bl	419fb8 <ascii_strlower_n@plt+0x15b58>
  41b5a8:	stur	w0, [x29, #-88]
  41b5ac:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41b5b0:	ldur	x0, [x29, #-16]
  41b5b4:	ldur	x8, [x29, #-48]
  41b5b8:	add	x1, x8, #0x50
  41b5bc:	mov	w9, #0x1                   	// #1
  41b5c0:	and	w2, w9, #0x1
  41b5c4:	mov	x8, xzr
  41b5c8:	mov	x3, x8
  41b5cc:	bl	41a730 <ascii_strlower_n@plt+0x162d0>
  41b5d0:	stur	w0, [x29, #-88]
  41b5d4:	ldur	w9, [x29, #-88]
  41b5d8:	cmp	w9, #0x0
  41b5dc:	cset	w9, ge  // ge = tcont
  41b5e0:	tbnz	w9, #0, 41b5f8 <ascii_strlower_n@plt+0x17198>
  41b5e4:	ldur	w8, [x29, #-88]
  41b5e8:	stur	w8, [x29, #-4]
  41b5ec:	mov	w8, #0x1                   	// #1
  41b5f0:	stur	w8, [x29, #-92]
  41b5f4:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b5f8:	ldur	x0, [x29, #-16]
  41b5fc:	ldur	x8, [x29, #-48]
  41b600:	add	x1, x8, #0x58
  41b604:	mov	w9, #0x1                   	// #1
  41b608:	and	w2, w9, #0x1
  41b60c:	mov	x8, xzr
  41b610:	mov	x3, x8
  41b614:	bl	41a730 <ascii_strlower_n@plt+0x162d0>
  41b618:	stur	w0, [x29, #-88]
  41b61c:	ldur	w9, [x29, #-88]
  41b620:	cmp	w9, #0x0
  41b624:	cset	w9, ge  // ge = tcont
  41b628:	tbnz	w9, #0, 41b640 <ascii_strlower_n@plt+0x171e0>
  41b62c:	ldur	w8, [x29, #-88]
  41b630:	stur	w8, [x29, #-4]
  41b634:	mov	w8, #0x1                   	// #1
  41b638:	stur	w8, [x29, #-92]
  41b63c:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b640:	ldur	x0, [x29, #-16]
  41b644:	ldur	x8, [x29, #-48]
  41b648:	add	x1, x8, #0x60
  41b64c:	mov	x8, xzr
  41b650:	mov	x2, x8
  41b654:	bl	41a2ac <ascii_strlower_n@plt+0x15e4c>
  41b658:	stur	w0, [x29, #-88]
  41b65c:	ldur	w9, [x29, #-88]
  41b660:	cmp	w9, #0x0
  41b664:	cset	w9, ge  // ge = tcont
  41b668:	tbnz	w9, #0, 41b680 <ascii_strlower_n@plt+0x17220>
  41b66c:	ldur	w8, [x29, #-88]
  41b670:	stur	w8, [x29, #-4]
  41b674:	mov	w8, #0x1                   	// #1
  41b678:	stur	w8, [x29, #-92]
  41b67c:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b680:	ldur	x0, [x29, #-16]
  41b684:	ldur	x8, [x29, #-48]
  41b688:	add	x1, x8, #0x64
  41b68c:	mov	x8, xzr
  41b690:	mov	x2, x8
  41b694:	bl	41a2ac <ascii_strlower_n@plt+0x15e4c>
  41b698:	stur	w0, [x29, #-88]
  41b69c:	ldur	w9, [x29, #-88]
  41b6a0:	cmp	w9, #0x0
  41b6a4:	cset	w9, ge  // ge = tcont
  41b6a8:	tbnz	w9, #0, 41b6c0 <ascii_strlower_n@plt+0x17260>
  41b6ac:	ldur	w8, [x29, #-88]
  41b6b0:	stur	w8, [x29, #-4]
  41b6b4:	mov	w8, #0x1                   	// #1
  41b6b8:	stur	w8, [x29, #-92]
  41b6bc:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b6c0:	ldur	x0, [x29, #-16]
  41b6c4:	ldur	x8, [x29, #-48]
  41b6c8:	add	x1, x8, #0x68
  41b6cc:	mov	x8, xzr
  41b6d0:	mov	x2, x8
  41b6d4:	bl	41a2ac <ascii_strlower_n@plt+0x15e4c>
  41b6d8:	stur	w0, [x29, #-88]
  41b6dc:	ldur	w9, [x29, #-88]
  41b6e0:	cmp	w9, #0x0
  41b6e4:	cset	w9, ge  // ge = tcont
  41b6e8:	tbnz	w9, #0, 41b700 <ascii_strlower_n@plt+0x172a0>
  41b6ec:	ldur	w8, [x29, #-88]
  41b6f0:	stur	w8, [x29, #-4]
  41b6f4:	mov	w8, #0x1                   	// #1
  41b6f8:	stur	w8, [x29, #-92]
  41b6fc:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b700:	ldur	x0, [x29, #-16]
  41b704:	ldur	x8, [x29, #-48]
  41b708:	add	x1, x8, #0x6c
  41b70c:	mov	x8, xzr
  41b710:	mov	x2, x8
  41b714:	bl	41a2ac <ascii_strlower_n@plt+0x15e4c>
  41b718:	stur	w0, [x29, #-88]
  41b71c:	ldur	w9, [x29, #-88]
  41b720:	cmp	w9, #0x0
  41b724:	cset	w9, ge  // ge = tcont
  41b728:	tbnz	w9, #0, 41b740 <ascii_strlower_n@plt+0x172e0>
  41b72c:	ldur	w8, [x29, #-88]
  41b730:	stur	w8, [x29, #-4]
  41b734:	mov	w8, #0x1                   	// #1
  41b738:	stur	w8, [x29, #-92]
  41b73c:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b740:	ldur	x0, [x29, #-16]
  41b744:	ldur	x8, [x29, #-48]
  41b748:	add	x1, x8, #0x70
  41b74c:	mov	x8, xzr
  41b750:	mov	x2, x8
  41b754:	bl	41a2ac <ascii_strlower_n@plt+0x15e4c>
  41b758:	stur	w0, [x29, #-88]
  41b75c:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41b760:	ldur	x0, [x29, #-16]
  41b764:	ldur	x8, [x29, #-48]
  41b768:	add	x1, x8, #0x50
  41b76c:	mov	x8, xzr
  41b770:	mov	x2, x8
  41b774:	bl	41a1ac <ascii_strlower_n@plt+0x15d4c>
  41b778:	stur	w0, [x29, #-88]
  41b77c:	ldur	w9, [x29, #-88]
  41b780:	cmp	w9, #0x0
  41b784:	cset	w9, ge  // ge = tcont
  41b788:	tbnz	w9, #0, 41b7a0 <ascii_strlower_n@plt+0x17340>
  41b78c:	ldur	w8, [x29, #-88]
  41b790:	stur	w8, [x29, #-4]
  41b794:	mov	w8, #0x1                   	// #1
  41b798:	stur	w8, [x29, #-92]
  41b79c:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b7a0:	ldur	x0, [x29, #-16]
  41b7a4:	ldur	x8, [x29, #-48]
  41b7a8:	add	x1, x8, #0x58
  41b7ac:	mov	w9, #0x1                   	// #1
  41b7b0:	and	w2, w9, #0x1
  41b7b4:	mov	x8, xzr
  41b7b8:	mov	x3, x8
  41b7bc:	bl	41a730 <ascii_strlower_n@plt+0x162d0>
  41b7c0:	stur	w0, [x29, #-88]
  41b7c4:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41b7c8:	ldur	x0, [x29, #-16]
  41b7cc:	add	x1, sp, #0x47
  41b7d0:	add	x2, sp, #0x38
  41b7d4:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41b7d8:	stur	w0, [x29, #-88]
  41b7dc:	ldur	w8, [x29, #-88]
  41b7e0:	cmp	w8, #0x0
  41b7e4:	cset	w8, ge  // ge = tcont
  41b7e8:	tbnz	w8, #0, 41b800 <ascii_strlower_n@plt+0x173a0>
  41b7ec:	ldur	w8, [x29, #-88]
  41b7f0:	stur	w8, [x29, #-4]
  41b7f4:	mov	w8, #0x1                   	// #1
  41b7f8:	stur	w8, [x29, #-92]
  41b7fc:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b800:	ldrb	w8, [sp, #71]
  41b804:	cbnz	w8, 41ba04 <ascii_strlower_n@plt+0x175a4>
  41b808:	ldrb	w8, [sp, #71]
  41b80c:	ldur	x9, [x29, #-48]
  41b810:	strb	w8, [x9, #80]
  41b814:	ldur	x0, [x29, #-16]
  41b818:	ldur	x9, [x29, #-48]
  41b81c:	add	x1, x9, #0x51
  41b820:	mov	x9, xzr
  41b824:	mov	x2, x9
  41b828:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41b82c:	stur	w0, [x29, #-88]
  41b830:	ldur	w8, [x29, #-88]
  41b834:	cmp	w8, #0x0
  41b838:	cset	w8, ge  // ge = tcont
  41b83c:	tbnz	w8, #0, 41b854 <ascii_strlower_n@plt+0x173f4>
  41b840:	ldur	w8, [x29, #-88]
  41b844:	stur	w8, [x29, #-4]
  41b848:	mov	w8, #0x1                   	// #1
  41b84c:	stur	w8, [x29, #-92]
  41b850:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b854:	ldur	x8, [x29, #-48]
  41b858:	ldrb	w0, [x8, #81]
  41b85c:	bl	41c6fc <ascii_strlower_n@plt+0x1829c>
  41b860:	tbnz	w0, #0, 41b878 <ascii_strlower_n@plt+0x17418>
  41b864:	mov	w8, #0xffffffb6            	// #-74
  41b868:	stur	w8, [x29, #-4]
  41b86c:	mov	w8, #0x1                   	// #1
  41b870:	stur	w8, [x29, #-92]
  41b874:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b878:	ldur	x0, [x29, #-16]
  41b87c:	ldur	x8, [x29, #-48]
  41b880:	add	x1, x8, #0x52
  41b884:	mov	x8, xzr
  41b888:	mov	x2, x8
  41b88c:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41b890:	stur	w0, [x29, #-88]
  41b894:	ldur	w9, [x29, #-88]
  41b898:	cmp	w9, #0x0
  41b89c:	cset	w9, ge  // ge = tcont
  41b8a0:	tbnz	w9, #0, 41b8b8 <ascii_strlower_n@plt+0x17458>
  41b8a4:	ldur	w8, [x29, #-88]
  41b8a8:	stur	w8, [x29, #-4]
  41b8ac:	mov	w8, #0x1                   	// #1
  41b8b0:	stur	w8, [x29, #-92]
  41b8b4:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b8b8:	ldur	x8, [x29, #-48]
  41b8bc:	ldrb	w0, [x8, #82]
  41b8c0:	bl	41c6fc <ascii_strlower_n@plt+0x1829c>
  41b8c4:	tbnz	w0, #0, 41b8dc <ascii_strlower_n@plt+0x1747c>
  41b8c8:	mov	w8, #0xffffffb6            	// #-74
  41b8cc:	stur	w8, [x29, #-4]
  41b8d0:	mov	w8, #0x1                   	// #1
  41b8d4:	stur	w8, [x29, #-92]
  41b8d8:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b8dc:	ldur	x0, [x29, #-16]
  41b8e0:	ldur	x8, [x29, #-48]
  41b8e4:	add	x1, x8, #0x53
  41b8e8:	mov	x8, xzr
  41b8ec:	mov	x2, x8
  41b8f0:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41b8f4:	stur	w0, [x29, #-88]
  41b8f8:	ldur	w9, [x29, #-88]
  41b8fc:	cmp	w9, #0x0
  41b900:	cset	w9, ge  // ge = tcont
  41b904:	tbnz	w9, #0, 41b91c <ascii_strlower_n@plt+0x174bc>
  41b908:	ldur	w8, [x29, #-88]
  41b90c:	stur	w8, [x29, #-4]
  41b910:	mov	w8, #0x1                   	// #1
  41b914:	stur	w8, [x29, #-92]
  41b918:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b91c:	ldur	x8, [x29, #-48]
  41b920:	ldrb	w0, [x8, #83]
  41b924:	bl	41c6fc <ascii_strlower_n@plt+0x1829c>
  41b928:	tbnz	w0, #0, 41b940 <ascii_strlower_n@plt+0x174e0>
  41b92c:	mov	w8, #0xffffffb6            	// #-74
  41b930:	stur	w8, [x29, #-4]
  41b934:	mov	w8, #0x1                   	// #1
  41b938:	stur	w8, [x29, #-92]
  41b93c:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b940:	ldur	x0, [x29, #-16]
  41b944:	ldur	x8, [x29, #-48]
  41b948:	add	x1, x8, #0x54
  41b94c:	mov	x8, xzr
  41b950:	mov	x2, x8
  41b954:	bl	41a2ac <ascii_strlower_n@plt+0x15e4c>
  41b958:	stur	w0, [x29, #-88]
  41b95c:	ldur	w9, [x29, #-88]
  41b960:	cmp	w9, #0x0
  41b964:	cset	w9, ge  // ge = tcont
  41b968:	tbnz	w9, #0, 41b980 <ascii_strlower_n@plt+0x17520>
  41b96c:	ldur	w8, [x29, #-88]
  41b970:	stur	w8, [x29, #-4]
  41b974:	mov	w8, #0x1                   	// #1
  41b978:	stur	w8, [x29, #-92]
  41b97c:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b980:	ldur	x0, [x29, #-16]
  41b984:	ldur	x8, [x29, #-48]
  41b988:	add	x1, x8, #0x58
  41b98c:	mov	x8, xzr
  41b990:	mov	x2, x8
  41b994:	bl	41a2ac <ascii_strlower_n@plt+0x15e4c>
  41b998:	stur	w0, [x29, #-88]
  41b99c:	ldur	w9, [x29, #-88]
  41b9a0:	cmp	w9, #0x0
  41b9a4:	cset	w9, ge  // ge = tcont
  41b9a8:	tbnz	w9, #0, 41b9c0 <ascii_strlower_n@plt+0x17560>
  41b9ac:	ldur	w8, [x29, #-88]
  41b9b0:	stur	w8, [x29, #-4]
  41b9b4:	mov	w8, #0x1                   	// #1
  41b9b8:	stur	w8, [x29, #-92]
  41b9bc:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41b9c0:	ldur	x0, [x29, #-16]
  41b9c4:	ldur	x8, [x29, #-48]
  41b9c8:	add	x1, x8, #0x5c
  41b9cc:	mov	x8, xzr
  41b9d0:	mov	x2, x8
  41b9d4:	bl	41a2ac <ascii_strlower_n@plt+0x15e4c>
  41b9d8:	stur	w0, [x29, #-88]
  41b9dc:	ldur	w9, [x29, #-88]
  41b9e0:	cmp	w9, #0x0
  41b9e4:	cset	w9, ge  // ge = tcont
  41b9e8:	tbnz	w9, #0, 41ba00 <ascii_strlower_n@plt+0x175a0>
  41b9ec:	ldur	w8, [x29, #-88]
  41b9f0:	stur	w8, [x29, #-4]
  41b9f4:	mov	w8, #0x1                   	// #1
  41b9f8:	stur	w8, [x29, #-92]
  41b9fc:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41ba00:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41ba04:	ldur	x0, [x29, #-16]
  41ba08:	ldr	x1, [sp, #56]
  41ba0c:	bl	419e84 <ascii_strlower_n@plt+0x15a24>
  41ba10:	ldur	x8, [x29, #-48]
  41ba14:	ldrb	w9, [x8, #48]
  41ba18:	and	w9, w9, #0xfffffffe
  41ba1c:	orr	w9, w9, #0x1
  41ba20:	strb	w9, [x8, #48]
  41ba24:	b	41c584 <ascii_strlower_n@plt+0x18124>
  41ba28:	ldur	x0, [x29, #-16]
  41ba2c:	ldur	x8, [x29, #-48]
  41ba30:	add	x1, x8, #0x50
  41ba34:	mov	x8, xzr
  41ba38:	mov	x2, x8
  41ba3c:	bl	41a1ac <ascii_strlower_n@plt+0x15d4c>
  41ba40:	stur	w0, [x29, #-88]
  41ba44:	ldur	w9, [x29, #-88]
  41ba48:	cmp	w9, #0x0
  41ba4c:	cset	w9, ge  // ge = tcont
  41ba50:	tbnz	w9, #0, 41ba68 <ascii_strlower_n@plt+0x17608>
  41ba54:	ldur	w8, [x29, #-88]
  41ba58:	stur	w8, [x29, #-4]
  41ba5c:	mov	w8, #0x1                   	// #1
  41ba60:	stur	w8, [x29, #-92]
  41ba64:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41ba68:	ldur	x0, [x29, #-16]
  41ba6c:	ldur	x8, [x29, #-48]
  41ba70:	add	x1, x8, #0x52
  41ba74:	mov	x8, xzr
  41ba78:	mov	x2, x8
  41ba7c:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41ba80:	stur	w0, [x29, #-88]
  41ba84:	ldur	w9, [x29, #-88]
  41ba88:	cmp	w9, #0x0
  41ba8c:	cset	w9, ge  // ge = tcont
  41ba90:	tbnz	w9, #0, 41baa8 <ascii_strlower_n@plt+0x17648>
  41ba94:	ldur	w8, [x29, #-88]
  41ba98:	stur	w8, [x29, #-4]
  41ba9c:	mov	w8, #0x1                   	// #1
  41baa0:	stur	w8, [x29, #-92]
  41baa4:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41baa8:	ldur	x0, [x29, #-16]
  41baac:	ldur	x8, [x29, #-48]
  41bab0:	add	x1, x8, #0x53
  41bab4:	mov	x8, xzr
  41bab8:	mov	x2, x8
  41babc:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41bac0:	stur	w0, [x29, #-88]
  41bac4:	ldur	w9, [x29, #-88]
  41bac8:	cmp	w9, #0x0
  41bacc:	cset	w9, ge  // ge = tcont
  41bad0:	tbnz	w9, #0, 41bae8 <ascii_strlower_n@plt+0x17688>
  41bad4:	ldur	w8, [x29, #-88]
  41bad8:	stur	w8, [x29, #-4]
  41badc:	mov	w8, #0x1                   	// #1
  41bae0:	stur	w8, [x29, #-92]
  41bae4:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bae8:	ldurh	w8, [x29, #-82]
  41baec:	cmp	w8, #0x4
  41baf0:	b.ge	41bb08 <ascii_strlower_n@plt+0x176a8>  // b.tcont
  41baf4:	mov	w8, #0xffffffb6            	// #-74
  41baf8:	stur	w8, [x29, #-4]
  41bafc:	mov	w8, #0x1                   	// #1
  41bb00:	stur	w8, [x29, #-92]
  41bb04:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bb08:	ldur	x0, [x29, #-16]
  41bb0c:	ldurh	w8, [x29, #-82]
  41bb10:	subs	w8, w8, #0x4
  41bb14:	mov	w1, w8
  41bb18:	sxtw	x1, w1
  41bb1c:	ldur	x9, [x29, #-48]
  41bb20:	add	x2, x9, #0x58
  41bb24:	ldur	x9, [x29, #-48]
  41bb28:	add	x3, x9, #0x60
  41bb2c:	mov	x9, xzr
  41bb30:	mov	x4, x9
  41bb34:	bl	41c784 <ascii_strlower_n@plt+0x18324>
  41bb38:	stur	w0, [x29, #-88]
  41bb3c:	ldur	w8, [x29, #-88]
  41bb40:	cmp	w8, #0x0
  41bb44:	cset	w8, ge  // ge = tcont
  41bb48:	tbnz	w8, #0, 41bb60 <ascii_strlower_n@plt+0x17700>
  41bb4c:	ldur	w8, [x29, #-88]
  41bb50:	stur	w8, [x29, #-4]
  41bb54:	mov	w8, #0x1                   	// #1
  41bb58:	stur	w8, [x29, #-92]
  41bb5c:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bb60:	ldur	x8, [x29, #-48]
  41bb64:	ldr	x8, [x8, #96]
  41bb68:	cmp	x8, #0x0
  41bb6c:	cset	w9, hi  // hi = pmore
  41bb70:	tbnz	w9, #0, 41bb88 <ascii_strlower_n@plt+0x17728>
  41bb74:	mov	w8, #0xffffffb6            	// #-74
  41bb78:	stur	w8, [x29, #-4]
  41bb7c:	mov	w8, #0x1                   	// #1
  41bb80:	stur	w8, [x29, #-92]
  41bb84:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bb88:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41bb8c:	ldur	x0, [x29, #-16]
  41bb90:	ldur	x8, [x29, #-48]
  41bb94:	add	x1, x8, #0x50
  41bb98:	mov	x8, xzr
  41bb9c:	mov	x2, x8
  41bba0:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41bba4:	stur	w0, [x29, #-88]
  41bba8:	ldur	w9, [x29, #-88]
  41bbac:	cmp	w9, #0x0
  41bbb0:	cset	w9, ge  // ge = tcont
  41bbb4:	tbnz	w9, #0, 41bbcc <ascii_strlower_n@plt+0x1776c>
  41bbb8:	ldur	w8, [x29, #-88]
  41bbbc:	stur	w8, [x29, #-4]
  41bbc0:	mov	w8, #0x1                   	// #1
  41bbc4:	stur	w8, [x29, #-92]
  41bbc8:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bbcc:	ldur	x0, [x29, #-16]
  41bbd0:	ldur	x8, [x29, #-48]
  41bbd4:	add	x1, x8, #0x51
  41bbd8:	mov	x8, xzr
  41bbdc:	mov	x2, x8
  41bbe0:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41bbe4:	stur	w0, [x29, #-88]
  41bbe8:	ldur	w9, [x29, #-88]
  41bbec:	cmp	w9, #0x0
  41bbf0:	cset	w9, ge  // ge = tcont
  41bbf4:	tbnz	w9, #0, 41bc0c <ascii_strlower_n@plt+0x177ac>
  41bbf8:	ldur	w8, [x29, #-88]
  41bbfc:	stur	w8, [x29, #-4]
  41bc00:	mov	w8, #0x1                   	// #1
  41bc04:	stur	w8, [x29, #-92]
  41bc08:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bc0c:	ldurh	w8, [x29, #-82]
  41bc10:	cmp	w8, #0x2
  41bc14:	b.ge	41bc2c <ascii_strlower_n@plt+0x177cc>  // b.tcont
  41bc18:	mov	w8, #0xffffffb6            	// #-74
  41bc1c:	stur	w8, [x29, #-4]
  41bc20:	mov	w8, #0x1                   	// #1
  41bc24:	stur	w8, [x29, #-92]
  41bc28:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bc2c:	ldur	x0, [x29, #-16]
  41bc30:	ldurh	w8, [x29, #-82]
  41bc34:	subs	w8, w8, #0x2
  41bc38:	mov	w1, w8
  41bc3c:	sxtw	x1, w1
  41bc40:	ldur	x9, [x29, #-48]
  41bc44:	add	x2, x9, #0x58
  41bc48:	ldur	x9, [x29, #-48]
  41bc4c:	add	x3, x9, #0x60
  41bc50:	mov	x9, xzr
  41bc54:	mov	x4, x9
  41bc58:	bl	41c784 <ascii_strlower_n@plt+0x18324>
  41bc5c:	stur	w0, [x29, #-88]
  41bc60:	ldur	x9, [x29, #-48]
  41bc64:	ldr	x9, [x9, #96]
  41bc68:	cmp	x9, #0x0
  41bc6c:	cset	w8, hi  // hi = pmore
  41bc70:	tbnz	w8, #0, 41bc88 <ascii_strlower_n@plt+0x17828>
  41bc74:	mov	w8, #0xffffffb6            	// #-74
  41bc78:	stur	w8, [x29, #-4]
  41bc7c:	mov	w8, #0x1                   	// #1
  41bc80:	stur	w8, [x29, #-92]
  41bc84:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bc88:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41bc8c:	ldur	x0, [x29, #-16]
  41bc90:	ldur	x8, [x29, #-48]
  41bc94:	add	x1, x8, #0x50
  41bc98:	mov	x8, xzr
  41bc9c:	mov	x2, x8
  41bca0:	bl	41a1ac <ascii_strlower_n@plt+0x15d4c>
  41bca4:	stur	w0, [x29, #-88]
  41bca8:	ldur	w9, [x29, #-88]
  41bcac:	cmp	w9, #0x0
  41bcb0:	cset	w9, ge  // ge = tcont
  41bcb4:	tbnz	w9, #0, 41bccc <ascii_strlower_n@plt+0x1786c>
  41bcb8:	ldur	w8, [x29, #-88]
  41bcbc:	stur	w8, [x29, #-4]
  41bcc0:	mov	w8, #0x1                   	// #1
  41bcc4:	stur	w8, [x29, #-92]
  41bcc8:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bccc:	ldur	x0, [x29, #-16]
  41bcd0:	ldur	x8, [x29, #-48]
  41bcd4:	add	x1, x8, #0x52
  41bcd8:	mov	x8, xzr
  41bcdc:	mov	x2, x8
  41bce0:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41bce4:	stur	w0, [x29, #-88]
  41bce8:	ldur	w9, [x29, #-88]
  41bcec:	cmp	w9, #0x0
  41bcf0:	cset	w9, ge  // ge = tcont
  41bcf4:	tbnz	w9, #0, 41bd0c <ascii_strlower_n@plt+0x178ac>
  41bcf8:	ldur	w8, [x29, #-88]
  41bcfc:	stur	w8, [x29, #-4]
  41bd00:	mov	w8, #0x1                   	// #1
  41bd04:	stur	w8, [x29, #-92]
  41bd08:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bd0c:	ldur	x0, [x29, #-16]
  41bd10:	ldur	x8, [x29, #-48]
  41bd14:	add	x1, x8, #0x53
  41bd18:	mov	x8, xzr
  41bd1c:	mov	x2, x8
  41bd20:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41bd24:	stur	w0, [x29, #-88]
  41bd28:	ldur	w9, [x29, #-88]
  41bd2c:	cmp	w9, #0x0
  41bd30:	cset	w9, ge  // ge = tcont
  41bd34:	tbnz	w9, #0, 41bd4c <ascii_strlower_n@plt+0x178ec>
  41bd38:	ldur	w8, [x29, #-88]
  41bd3c:	stur	w8, [x29, #-4]
  41bd40:	mov	w8, #0x1                   	// #1
  41bd44:	stur	w8, [x29, #-92]
  41bd48:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bd4c:	ldurh	w8, [x29, #-82]
  41bd50:	cmp	w8, #0x4
  41bd54:	b.ge	41bd6c <ascii_strlower_n@plt+0x1790c>  // b.tcont
  41bd58:	mov	w8, #0xffffffb6            	// #-74
  41bd5c:	stur	w8, [x29, #-4]
  41bd60:	mov	w8, #0x1                   	// #1
  41bd64:	stur	w8, [x29, #-92]
  41bd68:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bd6c:	ldur	x0, [x29, #-16]
  41bd70:	ldurh	w8, [x29, #-82]
  41bd74:	subs	w8, w8, #0x4
  41bd78:	mov	w1, w8
  41bd7c:	sxtw	x1, w1
  41bd80:	ldur	x9, [x29, #-48]
  41bd84:	add	x2, x9, #0x58
  41bd88:	ldur	x9, [x29, #-48]
  41bd8c:	add	x3, x9, #0x60
  41bd90:	mov	x9, xzr
  41bd94:	mov	x4, x9
  41bd98:	bl	41c784 <ascii_strlower_n@plt+0x18324>
  41bd9c:	stur	w0, [x29, #-88]
  41bda0:	ldur	x9, [x29, #-48]
  41bda4:	ldr	x9, [x9, #96]
  41bda8:	cmp	x9, #0x0
  41bdac:	cset	w8, hi  // hi = pmore
  41bdb0:	tbnz	w8, #0, 41bdc8 <ascii_strlower_n@plt+0x17968>
  41bdb4:	mov	w8, #0xffffffb6            	// #-74
  41bdb8:	stur	w8, [x29, #-4]
  41bdbc:	mov	w8, #0x1                   	// #1
  41bdc0:	stur	w8, [x29, #-92]
  41bdc4:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bdc8:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41bdcc:	ldur	x0, [x29, #-16]
  41bdd0:	ldur	x8, [x29, #-48]
  41bdd4:	add	x1, x8, #0x50
  41bdd8:	mov	x8, xzr
  41bddc:	mov	x2, x8
  41bde0:	bl	41a1ac <ascii_strlower_n@plt+0x15d4c>
  41bde4:	stur	w0, [x29, #-88]
  41bde8:	ldur	w9, [x29, #-88]
  41bdec:	cmp	w9, #0x0
  41bdf0:	cset	w9, ge  // ge = tcont
  41bdf4:	tbnz	w9, #0, 41be0c <ascii_strlower_n@plt+0x179ac>
  41bdf8:	ldur	w8, [x29, #-88]
  41bdfc:	stur	w8, [x29, #-4]
  41be00:	mov	w8, #0x1                   	// #1
  41be04:	stur	w8, [x29, #-92]
  41be08:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41be0c:	ldur	x0, [x29, #-16]
  41be10:	ldur	x8, [x29, #-48]
  41be14:	add	x1, x8, #0x52
  41be18:	mov	x8, xzr
  41be1c:	mov	x2, x8
  41be20:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41be24:	stur	w0, [x29, #-88]
  41be28:	ldur	w9, [x29, #-88]
  41be2c:	cmp	w9, #0x0
  41be30:	cset	w9, ge  // ge = tcont
  41be34:	tbnz	w9, #0, 41be4c <ascii_strlower_n@plt+0x179ec>
  41be38:	ldur	w8, [x29, #-88]
  41be3c:	stur	w8, [x29, #-4]
  41be40:	mov	w8, #0x1                   	// #1
  41be44:	stur	w8, [x29, #-92]
  41be48:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41be4c:	ldur	x0, [x29, #-16]
  41be50:	ldur	x8, [x29, #-48]
  41be54:	add	x1, x8, #0x53
  41be58:	mov	x8, xzr
  41be5c:	mov	x2, x8
  41be60:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41be64:	stur	w0, [x29, #-88]
  41be68:	ldur	w9, [x29, #-88]
  41be6c:	cmp	w9, #0x0
  41be70:	cset	w9, ge  // ge = tcont
  41be74:	tbnz	w9, #0, 41be8c <ascii_strlower_n@plt+0x17a2c>
  41be78:	ldur	w8, [x29, #-88]
  41be7c:	stur	w8, [x29, #-4]
  41be80:	mov	w8, #0x1                   	// #1
  41be84:	stur	w8, [x29, #-92]
  41be88:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41be8c:	ldur	x0, [x29, #-16]
  41be90:	ldur	x8, [x29, #-48]
  41be94:	add	x1, x8, #0x54
  41be98:	mov	x8, xzr
  41be9c:	mov	x2, x8
  41bea0:	bl	41a2ac <ascii_strlower_n@plt+0x15e4c>
  41bea4:	stur	w0, [x29, #-88]
  41bea8:	ldur	w9, [x29, #-88]
  41beac:	cmp	w9, #0x0
  41beb0:	cset	w9, ge  // ge = tcont
  41beb4:	tbnz	w9, #0, 41becc <ascii_strlower_n@plt+0x17a6c>
  41beb8:	ldur	w8, [x29, #-88]
  41bebc:	stur	w8, [x29, #-4]
  41bec0:	mov	w8, #0x1                   	// #1
  41bec4:	stur	w8, [x29, #-92]
  41bec8:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41becc:	ldur	x0, [x29, #-16]
  41bed0:	ldur	x8, [x29, #-48]
  41bed4:	add	x1, x8, #0x58
  41bed8:	mov	x8, xzr
  41bedc:	mov	x2, x8
  41bee0:	bl	41a2ac <ascii_strlower_n@plt+0x15e4c>
  41bee4:	stur	w0, [x29, #-88]
  41bee8:	ldur	w9, [x29, #-88]
  41beec:	cmp	w9, #0x0
  41bef0:	cset	w9, ge  // ge = tcont
  41bef4:	tbnz	w9, #0, 41bf0c <ascii_strlower_n@plt+0x17aac>
  41bef8:	ldur	w8, [x29, #-88]
  41befc:	stur	w8, [x29, #-4]
  41bf00:	mov	w8, #0x1                   	// #1
  41bf04:	stur	w8, [x29, #-92]
  41bf08:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bf0c:	ldur	x0, [x29, #-16]
  41bf10:	ldur	x8, [x29, #-48]
  41bf14:	add	x1, x8, #0x5c
  41bf18:	mov	x8, xzr
  41bf1c:	mov	x2, x8
  41bf20:	bl	41a2ac <ascii_strlower_n@plt+0x15e4c>
  41bf24:	stur	w0, [x29, #-88]
  41bf28:	ldur	w9, [x29, #-88]
  41bf2c:	cmp	w9, #0x0
  41bf30:	cset	w9, ge  // ge = tcont
  41bf34:	tbnz	w9, #0, 41bf4c <ascii_strlower_n@plt+0x17aec>
  41bf38:	ldur	w8, [x29, #-88]
  41bf3c:	stur	w8, [x29, #-4]
  41bf40:	mov	w8, #0x1                   	// #1
  41bf44:	stur	w8, [x29, #-92]
  41bf48:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bf4c:	ldur	x0, [x29, #-16]
  41bf50:	ldur	x8, [x29, #-48]
  41bf54:	add	x1, x8, #0x60
  41bf58:	mov	x8, xzr
  41bf5c:	mov	x2, x8
  41bf60:	bl	41a1ac <ascii_strlower_n@plt+0x15d4c>
  41bf64:	stur	w0, [x29, #-88]
  41bf68:	ldur	w9, [x29, #-88]
  41bf6c:	cmp	w9, #0x0
  41bf70:	cset	w9, ge  // ge = tcont
  41bf74:	tbnz	w9, #0, 41bf8c <ascii_strlower_n@plt+0x17b2c>
  41bf78:	ldur	w8, [x29, #-88]
  41bf7c:	stur	w8, [x29, #-4]
  41bf80:	mov	w8, #0x1                   	// #1
  41bf84:	stur	w8, [x29, #-92]
  41bf88:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bf8c:	ldur	x0, [x29, #-16]
  41bf90:	ldur	x8, [x29, #-48]
  41bf94:	add	x1, x8, #0x68
  41bf98:	mov	w9, wzr
  41bf9c:	and	w2, w9, #0x1
  41bfa0:	mov	x8, xzr
  41bfa4:	mov	x3, x8
  41bfa8:	bl	41a730 <ascii_strlower_n@plt+0x162d0>
  41bfac:	stur	w0, [x29, #-88]
  41bfb0:	ldur	w9, [x29, #-88]
  41bfb4:	cmp	w9, #0x0
  41bfb8:	cset	w9, ge  // ge = tcont
  41bfbc:	tbnz	w9, #0, 41bfd4 <ascii_strlower_n@plt+0x17b74>
  41bfc0:	ldur	w8, [x29, #-88]
  41bfc4:	stur	w8, [x29, #-4]
  41bfc8:	mov	w8, #0x1                   	// #1
  41bfcc:	stur	w8, [x29, #-92]
  41bfd0:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41bfd4:	ldurh	w8, [x29, #-82]
  41bfd8:	mov	w9, w8
  41bfdc:	ldur	x10, [x29, #-80]
  41bfe0:	add	x9, x9, x10
  41bfe4:	ldur	x10, [x29, #-16]
  41bfe8:	ldr	x10, [x10, #24]
  41bfec:	cmp	x9, x10
  41bff0:	b.cs	41c008 <ascii_strlower_n@plt+0x17ba8>  // b.hs, b.nlast
  41bff4:	mov	w8, #0xffffffb6            	// #-74
  41bff8:	stur	w8, [x29, #-4]
  41bffc:	mov	w8, #0x1                   	// #1
  41c000:	stur	w8, [x29, #-92]
  41c004:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c008:	ldur	x0, [x29, #-16]
  41c00c:	ldur	x8, [x29, #-80]
  41c010:	ldurh	w9, [x29, #-82]
  41c014:	mov	w10, w9
  41c018:	add	x8, x8, x10
  41c01c:	ldur	x10, [x29, #-16]
  41c020:	ldr	x10, [x10, #24]
  41c024:	subs	x1, x8, x10
  41c028:	ldur	x8, [x29, #-48]
  41c02c:	add	x2, x8, #0x70
  41c030:	ldur	x8, [x29, #-48]
  41c034:	add	x3, x8, #0x78
  41c038:	mov	x8, xzr
  41c03c:	mov	x4, x8
  41c040:	bl	41c784 <ascii_strlower_n@plt+0x18324>
  41c044:	stur	w0, [x29, #-88]
  41c048:	ldur	x8, [x29, #-48]
  41c04c:	ldr	x8, [x8, #120]
  41c050:	cmp	x8, #0x0
  41c054:	cset	w9, hi  // hi = pmore
  41c058:	tbnz	w9, #0, 41c070 <ascii_strlower_n@plt+0x17c10>
  41c05c:	mov	w8, #0xffffffb6            	// #-74
  41c060:	stur	w8, [x29, #-4]
  41c064:	mov	w8, #0x1                   	// #1
  41c068:	stur	w8, [x29, #-92]
  41c06c:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c070:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41c074:	ldur	x8, [x29, #-16]
  41c078:	ldr	w9, [x8, #4]
  41c07c:	cmp	w9, #0x1
  41c080:	cset	w9, eq  // eq = none
  41c084:	mov	w10, #0x1                   	// #1
  41c088:	and	w9, w9, w10
  41c08c:	strb	w9, [sp, #55]
  41c090:	ldur	x0, [x29, #-16]
  41c094:	ldur	x8, [x29, #-48]
  41c098:	add	x1, x8, #0x50
  41c09c:	ldrb	w9, [sp, #55]
  41c0a0:	and	w2, w9, #0x1
  41c0a4:	mov	x8, xzr
  41c0a8:	mov	x3, x8
  41c0ac:	bl	41a730 <ascii_strlower_n@plt+0x162d0>
  41c0b0:	stur	w0, [x29, #-88]
  41c0b4:	ldur	w9, [x29, #-88]
  41c0b8:	cmp	w9, #0x0
  41c0bc:	cset	w9, ge  // ge = tcont
  41c0c0:	tbnz	w9, #0, 41c0d8 <ascii_strlower_n@plt+0x17c78>
  41c0c4:	ldur	w8, [x29, #-88]
  41c0c8:	stur	w8, [x29, #-4]
  41c0cc:	mov	w8, #0x1                   	// #1
  41c0d0:	stur	w8, [x29, #-92]
  41c0d4:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c0d8:	ldur	x0, [x29, #-16]
  41c0dc:	ldur	x8, [x29, #-48]
  41c0e0:	add	x1, x8, #0x58
  41c0e4:	ldur	x8, [x29, #-80]
  41c0e8:	ldurh	w9, [x29, #-82]
  41c0ec:	mov	w10, w9
  41c0f0:	add	x8, x8, x10
  41c0f4:	ldur	x10, [x29, #-16]
  41c0f8:	ldr	x10, [x10, #24]
  41c0fc:	subs	x2, x8, x10
  41c100:	mov	x8, xzr
  41c104:	mov	x3, x8
  41c108:	bl	41c914 <ascii_strlower_n@plt+0x184b4>
  41c10c:	stur	w0, [x29, #-88]
  41c110:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41c114:	ldur	x0, [x29, #-16]
  41c118:	ldur	x8, [x29, #-48]
  41c11c:	add	x1, x8, #0x50
  41c120:	mov	x8, xzr
  41c124:	mov	x2, x8
  41c128:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41c12c:	stur	w0, [x29, #-88]
  41c130:	ldur	w9, [x29, #-88]
  41c134:	cmp	w9, #0x0
  41c138:	cset	w9, ge  // ge = tcont
  41c13c:	tbnz	w9, #0, 41c154 <ascii_strlower_n@plt+0x17cf4>
  41c140:	ldur	w8, [x29, #-88]
  41c144:	stur	w8, [x29, #-4]
  41c148:	mov	w8, #0x1                   	// #1
  41c14c:	stur	w8, [x29, #-92]
  41c150:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c154:	ldur	x0, [x29, #-16]
  41c158:	ldur	x8, [x29, #-48]
  41c15c:	add	x1, x8, #0x51
  41c160:	mov	x8, xzr
  41c164:	mov	x2, x8
  41c168:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41c16c:	stur	w0, [x29, #-88]
  41c170:	ldur	w9, [x29, #-88]
  41c174:	cmp	w9, #0x0
  41c178:	cset	w9, ge  // ge = tcont
  41c17c:	tbnz	w9, #0, 41c194 <ascii_strlower_n@plt+0x17d34>
  41c180:	ldur	w8, [x29, #-88]
  41c184:	stur	w8, [x29, #-4]
  41c188:	mov	w8, #0x1                   	// #1
  41c18c:	stur	w8, [x29, #-92]
  41c190:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c194:	ldur	x0, [x29, #-16]
  41c198:	ldur	x8, [x29, #-48]
  41c19c:	add	x1, x8, #0x52
  41c1a0:	mov	x8, xzr
  41c1a4:	mov	x2, x8
  41c1a8:	bl	41a1ac <ascii_strlower_n@plt+0x15d4c>
  41c1ac:	stur	w0, [x29, #-88]
  41c1b0:	ldur	w9, [x29, #-88]
  41c1b4:	cmp	w9, #0x0
  41c1b8:	cset	w9, ge  // ge = tcont
  41c1bc:	tbnz	w9, #0, 41c1d4 <ascii_strlower_n@plt+0x17d74>
  41c1c0:	ldur	w8, [x29, #-88]
  41c1c4:	stur	w8, [x29, #-4]
  41c1c8:	mov	w8, #0x1                   	// #1
  41c1cc:	stur	w8, [x29, #-92]
  41c1d0:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c1d4:	ldur	x0, [x29, #-16]
  41c1d8:	add	x1, sp, #0x36
  41c1dc:	mov	x8, xzr
  41c1e0:	mov	x2, x8
  41c1e4:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41c1e8:	stur	w0, [x29, #-88]
  41c1ec:	ldur	w9, [x29, #-88]
  41c1f0:	cmp	w9, #0x0
  41c1f4:	cset	w9, ge  // ge = tcont
  41c1f8:	tbnz	w9, #0, 41c210 <ascii_strlower_n@plt+0x17db0>
  41c1fc:	ldur	w8, [x29, #-88]
  41c200:	stur	w8, [x29, #-4]
  41c204:	mov	w8, #0x1                   	// #1
  41c208:	stur	w8, [x29, #-92]
  41c20c:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c210:	ldur	x0, [x29, #-16]
  41c214:	ldrb	w8, [sp, #54]
  41c218:	mov	w1, w8
  41c21c:	ldur	x9, [x29, #-48]
  41c220:	add	x2, x9, #0x58
  41c224:	ldur	x9, [x29, #-48]
  41c228:	add	x3, x9, #0x60
  41c22c:	mov	x9, xzr
  41c230:	mov	x4, x9
  41c234:	bl	41c784 <ascii_strlower_n@plt+0x18324>
  41c238:	stur	w0, [x29, #-88]
  41c23c:	ldur	w8, [x29, #-88]
  41c240:	cmp	w8, #0x0
  41c244:	cset	w8, ge  // ge = tcont
  41c248:	tbnz	w8, #0, 41c260 <ascii_strlower_n@plt+0x17e00>
  41c24c:	ldur	w8, [x29, #-88]
  41c250:	stur	w8, [x29, #-4]
  41c254:	mov	w8, #0x1                   	// #1
  41c258:	stur	w8, [x29, #-92]
  41c25c:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c260:	ldur	x0, [x29, #-16]
  41c264:	add	x1, sp, #0x36
  41c268:	mov	x8, xzr
  41c26c:	mov	x2, x8
  41c270:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41c274:	stur	w0, [x29, #-88]
  41c278:	ldur	w9, [x29, #-88]
  41c27c:	cmp	w9, #0x0
  41c280:	cset	w9, ge  // ge = tcont
  41c284:	tbnz	w9, #0, 41c29c <ascii_strlower_n@plt+0x17e3c>
  41c288:	ldur	w8, [x29, #-88]
  41c28c:	stur	w8, [x29, #-4]
  41c290:	mov	w8, #0x1                   	// #1
  41c294:	stur	w8, [x29, #-92]
  41c298:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c29c:	ldrb	w8, [sp, #54]
  41c2a0:	cmp	w8, #0x0
  41c2a4:	cset	w8, gt
  41c2a8:	tbnz	w8, #0, 41c2c0 <ascii_strlower_n@plt+0x17e60>
  41c2ac:	mov	w8, #0xffffffb6            	// #-74
  41c2b0:	stur	w8, [x29, #-4]
  41c2b4:	mov	w8, #0x1                   	// #1
  41c2b8:	stur	w8, [x29, #-92]
  41c2bc:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c2c0:	ldur	x0, [x29, #-16]
  41c2c4:	ldrb	w8, [sp, #54]
  41c2c8:	mov	w1, w8
  41c2cc:	ldur	x9, [x29, #-48]
  41c2d0:	add	x2, x9, #0x68
  41c2d4:	ldur	x9, [x29, #-48]
  41c2d8:	add	x3, x9, #0x70
  41c2dc:	mov	x9, xzr
  41c2e0:	mov	x4, x9
  41c2e4:	bl	41c784 <ascii_strlower_n@plt+0x18324>
  41c2e8:	stur	w0, [x29, #-88]
  41c2ec:	ldur	w8, [x29, #-88]
  41c2f0:	cmp	w8, #0x0
  41c2f4:	cset	w8, ge  // ge = tcont
  41c2f8:	tbnz	w8, #0, 41c310 <ascii_strlower_n@plt+0x17eb0>
  41c2fc:	ldur	w8, [x29, #-88]
  41c300:	stur	w8, [x29, #-4]
  41c304:	mov	w8, #0x1                   	// #1
  41c308:	stur	w8, [x29, #-92]
  41c30c:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c310:	ldur	x0, [x29, #-16]
  41c314:	ldur	x8, [x29, #-48]
  41c318:	add	x1, x8, #0x78
  41c31c:	ldur	x8, [x29, #-80]
  41c320:	ldurh	w9, [x29, #-82]
  41c324:	mov	w10, w9
  41c328:	add	x8, x8, x10
  41c32c:	ldur	x10, [x29, #-16]
  41c330:	ldr	x10, [x10, #24]
  41c334:	subs	x2, x8, x10
  41c338:	mov	x8, xzr
  41c33c:	mov	x3, x8
  41c340:	bl	41c914 <ascii_strlower_n@plt+0x184b4>
  41c344:	stur	w0, [x29, #-88]
  41c348:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41c34c:	ldur	x0, [x29, #-16]
  41c350:	ldur	x8, [x29, #-48]
  41c354:	add	x1, x8, #0x50
  41c358:	mov	x8, xzr
  41c35c:	mov	x2, x8
  41c360:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41c364:	stur	w0, [x29, #-88]
  41c368:	ldur	w9, [x29, #-88]
  41c36c:	cmp	w9, #0x0
  41c370:	cset	w9, ge  // ge = tcont
  41c374:	tbnz	w9, #0, 41c38c <ascii_strlower_n@plt+0x17f2c>
  41c378:	ldur	w8, [x29, #-88]
  41c37c:	stur	w8, [x29, #-4]
  41c380:	mov	w8, #0x1                   	// #1
  41c384:	stur	w8, [x29, #-92]
  41c388:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c38c:	ldur	x0, [x29, #-16]
  41c390:	ldur	x8, [x29, #-48]
  41c394:	add	x1, x8, #0x51
  41c398:	mov	x8, xzr
  41c39c:	mov	x2, x8
  41c3a0:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41c3a4:	stur	w0, [x29, #-88]
  41c3a8:	ldur	w9, [x29, #-88]
  41c3ac:	cmp	w9, #0x0
  41c3b0:	cset	w9, ge  // ge = tcont
  41c3b4:	tbnz	w9, #0, 41c3cc <ascii_strlower_n@plt+0x17f6c>
  41c3b8:	ldur	w8, [x29, #-88]
  41c3bc:	stur	w8, [x29, #-4]
  41c3c0:	mov	w8, #0x1                   	// #1
  41c3c4:	stur	w8, [x29, #-92]
  41c3c8:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c3cc:	ldur	x0, [x29, #-16]
  41c3d0:	ldur	x8, [x29, #-48]
  41c3d4:	add	x1, x8, #0x52
  41c3d8:	mov	x8, xzr
  41c3dc:	mov	x2, x8
  41c3e0:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41c3e4:	stur	w0, [x29, #-88]
  41c3e8:	ldur	w9, [x29, #-88]
  41c3ec:	cmp	w9, #0x0
  41c3f0:	cset	w9, ge  // ge = tcont
  41c3f4:	tbnz	w9, #0, 41c40c <ascii_strlower_n@plt+0x17fac>
  41c3f8:	ldur	w8, [x29, #-88]
  41c3fc:	stur	w8, [x29, #-4]
  41c400:	mov	w8, #0x1                   	// #1
  41c404:	stur	w8, [x29, #-92]
  41c408:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c40c:	ldurh	w8, [x29, #-82]
  41c410:	cmp	w8, #0x3
  41c414:	b.ge	41c42c <ascii_strlower_n@plt+0x17fcc>  // b.tcont
  41c418:	mov	w8, #0xffffffb6            	// #-74
  41c41c:	stur	w8, [x29, #-4]
  41c420:	mov	w8, #0x1                   	// #1
  41c424:	stur	w8, [x29, #-92]
  41c428:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c42c:	ldur	x0, [x29, #-16]
  41c430:	ldurh	w8, [x29, #-82]
  41c434:	subs	w8, w8, #0x3
  41c438:	mov	w1, w8
  41c43c:	sxtw	x1, w1
  41c440:	ldur	x9, [x29, #-48]
  41c444:	add	x2, x9, #0x58
  41c448:	ldur	x9, [x29, #-48]
  41c44c:	add	x3, x9, #0x60
  41c450:	mov	x9, xzr
  41c454:	mov	x4, x9
  41c458:	bl	41c784 <ascii_strlower_n@plt+0x18324>
  41c45c:	stur	w0, [x29, #-88]
  41c460:	ldur	x9, [x29, #-48]
  41c464:	ldr	x9, [x9, #96]
  41c468:	cmp	x9, #0x0
  41c46c:	cset	w8, hi  // hi = pmore
  41c470:	tbnz	w8, #0, 41c488 <ascii_strlower_n@plt+0x18028>
  41c474:	mov	w8, #0xffffffb6            	// #-74
  41c478:	stur	w8, [x29, #-4]
  41c47c:	mov	w8, #0x1                   	// #1
  41c480:	stur	w8, [x29, #-92]
  41c484:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c488:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41c48c:	ldur	x0, [x29, #-16]
  41c490:	ldur	x8, [x29, #-48]
  41c494:	add	x1, x8, #0x50
  41c498:	mov	x8, xzr
  41c49c:	mov	x2, x8
  41c4a0:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41c4a4:	stur	w0, [x29, #-88]
  41c4a8:	ldur	w9, [x29, #-88]
  41c4ac:	cmp	w9, #0x0
  41c4b0:	cset	w9, ge  // ge = tcont
  41c4b4:	tbnz	w9, #0, 41c4cc <ascii_strlower_n@plt+0x1806c>
  41c4b8:	ldur	w8, [x29, #-88]
  41c4bc:	stur	w8, [x29, #-4]
  41c4c0:	mov	w8, #0x1                   	// #1
  41c4c4:	stur	w8, [x29, #-92]
  41c4c8:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c4cc:	ldur	x0, [x29, #-16]
  41c4d0:	ldur	x8, [x29, #-48]
  41c4d4:	add	x1, x8, #0x58
  41c4d8:	mov	x8, xzr
  41c4dc:	mov	x2, x8
  41c4e0:	bl	41a3ac <ascii_strlower_n@plt+0x15f4c>
  41c4e4:	stur	w0, [x29, #-88]
  41c4e8:	ldur	w9, [x29, #-88]
  41c4ec:	cmp	w9, #0x0
  41c4f0:	cset	w9, ge  // ge = tcont
  41c4f4:	tbnz	w9, #0, 41c50c <ascii_strlower_n@plt+0x180ac>
  41c4f8:	ldur	w8, [x29, #-88]
  41c4fc:	stur	w8, [x29, #-4]
  41c500:	mov	w8, #0x1                   	// #1
  41c504:	stur	w8, [x29, #-92]
  41c508:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c50c:	ldurh	w8, [x29, #-82]
  41c510:	mov	w9, w8
  41c514:	ldur	x10, [x29, #-80]
  41c518:	add	x9, x9, x10
  41c51c:	ldur	x10, [x29, #-16]
  41c520:	ldr	x10, [x10, #24]
  41c524:	cmp	x9, x10
  41c528:	b.cs	41c540 <ascii_strlower_n@plt+0x180e0>  // b.hs, b.nlast
  41c52c:	mov	w8, #0xffffffb6            	// #-74
  41c530:	stur	w8, [x29, #-4]
  41c534:	mov	w8, #0x1                   	// #1
  41c538:	stur	w8, [x29, #-92]
  41c53c:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c540:	ldur	x0, [x29, #-16]
  41c544:	ldurh	w8, [x29, #-82]
  41c548:	mov	w9, w8
  41c54c:	ldur	x10, [x29, #-80]
  41c550:	add	x9, x9, x10
  41c554:	ldur	x10, [x29, #-16]
  41c558:	ldr	x10, [x10, #24]
  41c55c:	subs	x1, x9, x10
  41c560:	ldur	x9, [x29, #-48]
  41c564:	add	x2, x9, #0x60
  41c568:	ldur	x9, [x29, #-48]
  41c56c:	add	x3, x9, #0x68
  41c570:	mov	x9, xzr
  41c574:	mov	x4, x9
  41c578:	bl	41c784 <ascii_strlower_n@plt+0x18324>
  41c57c:	stur	w0, [x29, #-88]
  41c580:	b	41c5b0 <ascii_strlower_n@plt+0x18150>
  41c584:	ldur	x0, [x29, #-16]
  41c588:	ldurh	w8, [x29, #-82]
  41c58c:	mov	w1, w8
  41c590:	ldur	x9, [x29, #-48]
  41c594:	add	x2, x9, #0x50
  41c598:	ldur	x9, [x29, #-48]
  41c59c:	add	x3, x9, #0x58
  41c5a0:	mov	x9, xzr
  41c5a4:	mov	x4, x9
  41c5a8:	bl	41c784 <ascii_strlower_n@plt+0x18324>
  41c5ac:	stur	w0, [x29, #-88]
  41c5b0:	ldur	w8, [x29, #-88]
  41c5b4:	cmp	w8, #0x0
  41c5b8:	cset	w8, ge  // ge = tcont
  41c5bc:	tbnz	w8, #0, 41c5d4 <ascii_strlower_n@plt+0x18174>
  41c5c0:	ldur	w8, [x29, #-88]
  41c5c4:	stur	w8, [x29, #-4]
  41c5c8:	mov	w8, #0x1                   	// #1
  41c5cc:	stur	w8, [x29, #-92]
  41c5d0:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c5d4:	ldur	x8, [x29, #-16]
  41c5d8:	ldr	x8, [x8, #24]
  41c5dc:	ldur	x9, [x29, #-80]
  41c5e0:	ldurh	w10, [x29, #-82]
  41c5e4:	mov	w11, w10
  41c5e8:	add	x9, x9, x11
  41c5ec:	cmp	x8, x9
  41c5f0:	b.eq	41c608 <ascii_strlower_n@plt+0x181a8>  // b.none
  41c5f4:	mov	w8, #0xffffffb6            	// #-74
  41c5f8:	stur	w8, [x29, #-4]
  41c5fc:	mov	w8, #0x1                   	// #1
  41c600:	stur	w8, [x29, #-92]
  41c604:	b	41c66c <ascii_strlower_n@plt+0x1820c>
  41c608:	ldur	x8, [x29, #-48]
  41c60c:	str	x8, [sp, #40]
  41c610:	mov	x8, xzr
  41c614:	stur	x8, [x29, #-48]
  41c618:	ldr	x8, [sp, #40]
  41c61c:	str	x8, [sp, #32]
  41c620:	ldr	x8, [sp, #32]
  41c624:	ldur	x9, [x29, #-24]
  41c628:	str	x8, [x9]
  41c62c:	ldur	x8, [x29, #-32]
  41c630:	cbz	x8, 41c644 <ascii_strlower_n@plt+0x181e4>
  41c634:	ldurb	w8, [x29, #-83]
  41c638:	ldur	x9, [x29, #-32]
  41c63c:	and	w8, w8, #0x1
  41c640:	strb	w8, [x9]
  41c644:	ldur	x8, [x29, #-40]
  41c648:	cbz	x8, 41c658 <ascii_strlower_n@plt+0x181f8>
  41c64c:	ldur	x8, [x29, #-64]
  41c650:	ldur	x9, [x29, #-40]
  41c654:	str	x8, [x9]
  41c658:	mov	x8, xzr
  41c65c:	stur	x8, [x29, #-72]
  41c660:	stur	wzr, [x29, #-4]
  41c664:	mov	w8, #0x1                   	// #1
  41c668:	stur	w8, [x29, #-92]
  41c66c:	sub	x0, x29, #0x48
  41c670:	bl	41a58c <ascii_strlower_n@plt+0x1612c>
  41c674:	sub	x0, x29, #0x38
  41c678:	bl	41c6c8 <ascii_strlower_n@plt+0x18268>
  41c67c:	sub	x0, x29, #0x30
  41c680:	bl	41c694 <ascii_strlower_n@plt+0x18234>
  41c684:	ldur	w0, [x29, #-4]
  41c688:	ldp	x29, x30, [sp, #224]
  41c68c:	add	sp, sp, #0xf0
  41c690:	ret
  41c694:	sub	sp, sp, #0x20
  41c698:	stp	x29, x30, [sp, #16]
  41c69c:	add	x29, sp, #0x10
  41c6a0:	str	x0, [sp, #8]
  41c6a4:	ldr	x8, [sp, #8]
  41c6a8:	ldr	x8, [x8]
  41c6ac:	cbz	x8, 41c6bc <ascii_strlower_n@plt+0x1825c>
  41c6b0:	ldr	x8, [sp, #8]
  41c6b4:	ldr	x0, [x8]
  41c6b8:	bl	41fed8 <ascii_strlower_n@plt+0x1ba78>
  41c6bc:	ldp	x29, x30, [sp, #16]
  41c6c0:	add	sp, sp, #0x20
  41c6c4:	ret
  41c6c8:	sub	sp, sp, #0x20
  41c6cc:	stp	x29, x30, [sp, #16]
  41c6d0:	add	x29, sp, #0x10
  41c6d4:	str	x0, [sp, #8]
  41c6d8:	ldr	x8, [sp, #8]
  41c6dc:	ldr	x8, [x8]
  41c6e0:	cbz	x8, 41c6f0 <ascii_strlower_n@plt+0x18290>
  41c6e4:	ldr	x8, [sp, #8]
  41c6e8:	ldr	x0, [x8]
  41c6ec:	bl	41eccc <ascii_strlower_n@plt+0x1a86c>
  41c6f0:	ldp	x29, x30, [sp, #16]
  41c6f4:	add	sp, sp, #0x20
  41c6f8:	ret
  41c6fc:	sub	sp, sp, #0x10
  41c700:	strb	w0, [sp, #15]
  41c704:	ldrb	w8, [sp, #15]
  41c708:	asr	w8, w8, #4
  41c70c:	strb	w8, [sp, #14]
  41c710:	ldrb	w8, [sp, #15]
  41c714:	and	w8, w8, #0xf
  41c718:	strb	w8, [sp, #13]
  41c71c:	ldrb	w8, [sp, #14]
  41c720:	mov	w9, #0x0                   	// #0
  41c724:	cmp	w8, #0x9
  41c728:	str	w9, [sp, #8]
  41c72c:	b.gt	41c774 <ascii_strlower_n@plt+0x18314>
  41c730:	ldrb	w8, [sp, #13]
  41c734:	mov	w9, #0x0                   	// #0
  41c738:	cmp	w8, #0x9
  41c73c:	str	w9, [sp, #8]
  41c740:	b.gt	41c774 <ascii_strlower_n@plt+0x18314>
  41c744:	ldrb	w8, [sp, #14]
  41c748:	cmp	w8, #0x0
  41c74c:	cset	w8, gt
  41c750:	mov	w9, #0x1                   	// #1
  41c754:	str	w9, [sp, #4]
  41c758:	tbnz	w8, #0, 41c76c <ascii_strlower_n@plt+0x1830c>
  41c75c:	ldrb	w8, [sp, #13]
  41c760:	cmp	w8, #0x0
  41c764:	cset	w8, eq  // eq = none
  41c768:	str	w8, [sp, #4]
  41c76c:	ldr	w8, [sp, #4]
  41c770:	str	w8, [sp, #8]
  41c774:	ldr	w8, [sp, #8]
  41c778:	and	w0, w8, #0x1
  41c77c:	add	sp, sp, #0x10
  41c780:	ret
  41c784:	sub	sp, sp, #0x70
  41c788:	stp	x29, x30, [sp, #96]
  41c78c:	add	x29, sp, #0x60
  41c790:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  41c794:	add	x8, x8, #0xb94
  41c798:	add	x8, x8, #0x3
  41c79c:	stur	x0, [x29, #-16]
  41c7a0:	stur	x1, [x29, #-24]
  41c7a4:	stur	x2, [x29, #-32]
  41c7a8:	stur	x3, [x29, #-40]
  41c7ac:	str	x4, [sp, #48]
  41c7b0:	str	x8, [sp, #8]
  41c7b4:	ldur	x8, [x29, #-16]
  41c7b8:	cmp	x8, #0x0
  41c7bc:	cset	w9, ne  // ne = any
  41c7c0:	mov	w10, #0x1                   	// #1
  41c7c4:	eor	w9, w9, #0x1
  41c7c8:	eor	w9, w9, w10
  41c7cc:	eor	w9, w9, w10
  41c7d0:	and	w9, w9, #0x1
  41c7d4:	mov	w0, w9
  41c7d8:	sxtw	x8, w0
  41c7dc:	cbz	x8, 41c804 <ascii_strlower_n@plt+0x183a4>
  41c7e0:	mov	w8, wzr
  41c7e4:	mov	w0, w8
  41c7e8:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41c7ec:	add	x1, x1, #0xc51
  41c7f0:	ldr	x2, [sp, #8]
  41c7f4:	mov	w3, #0x4db                 	// #1243
  41c7f8:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41c7fc:	add	x4, x4, #0x777
  41c800:	bl	4039d0 <log_assert_failed_realm@plt>
  41c804:	ldur	x8, [x29, #-32]
  41c808:	cmp	x8, #0x0
  41c80c:	cset	w9, ne  // ne = any
  41c810:	mov	w10, #0x1                   	// #1
  41c814:	eor	w9, w9, #0x1
  41c818:	eor	w9, w9, w10
  41c81c:	eor	w9, w9, w10
  41c820:	and	w9, w9, #0x1
  41c824:	mov	w0, w9
  41c828:	sxtw	x8, w0
  41c82c:	cbz	x8, 41c854 <ascii_strlower_n@plt+0x183f4>
  41c830:	mov	w8, wzr
  41c834:	mov	w0, w8
  41c838:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41c83c:	add	x1, x1, #0x42e
  41c840:	ldr	x2, [sp, #8]
  41c844:	mov	w3, #0x4dc                 	// #1244
  41c848:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41c84c:	add	x4, x4, #0x777
  41c850:	bl	4039d0 <log_assert_failed_realm@plt>
  41c854:	ldur	x0, [x29, #-16]
  41c858:	ldur	x1, [x29, #-24]
  41c85c:	add	x2, sp, #0x28
  41c860:	add	x3, sp, #0x20
  41c864:	bl	419d78 <ascii_strlower_n@plt+0x15918>
  41c868:	str	w0, [sp, #28]
  41c86c:	ldr	w8, [sp, #28]
  41c870:	cmp	w8, #0x0
  41c874:	cset	w8, ge  // ge = tcont
  41c878:	tbnz	w8, #0, 41c888 <ascii_strlower_n@plt+0x18428>
  41c87c:	ldr	w8, [sp, #28]
  41c880:	stur	w8, [x29, #-4]
  41c884:	b	41c904 <ascii_strlower_n@plt+0x184a4>
  41c888:	ldur	x8, [x29, #-24]
  41c88c:	cmp	x8, #0x0
  41c890:	cset	w9, hi  // hi = pmore
  41c894:	tbnz	w9, #0, 41c8a8 <ascii_strlower_n@plt+0x18448>
  41c898:	ldur	x8, [x29, #-32]
  41c89c:	mov	x9, xzr
  41c8a0:	str	x9, [x8]
  41c8a4:	b	41c8d8 <ascii_strlower_n@plt+0x18478>
  41c8a8:	ldr	x0, [sp, #40]
  41c8ac:	ldur	x1, [x29, #-24]
  41c8b0:	bl	4041d0 <memdup@plt>
  41c8b4:	str	x0, [sp, #16]
  41c8b8:	ldr	x8, [sp, #16]
  41c8bc:	cbnz	x8, 41c8cc <ascii_strlower_n@plt+0x1846c>
  41c8c0:	mov	w8, #0xfffffff4            	// #-12
  41c8c4:	stur	w8, [x29, #-4]
  41c8c8:	b	41c904 <ascii_strlower_n@plt+0x184a4>
  41c8cc:	ldr	x8, [sp, #16]
  41c8d0:	ldur	x9, [x29, #-32]
  41c8d4:	str	x8, [x9]
  41c8d8:	ldur	x8, [x29, #-40]
  41c8dc:	cbz	x8, 41c8ec <ascii_strlower_n@plt+0x1848c>
  41c8e0:	ldur	x8, [x29, #-24]
  41c8e4:	ldur	x9, [x29, #-40]
  41c8e8:	str	x8, [x9]
  41c8ec:	ldr	x8, [sp, #48]
  41c8f0:	cbz	x8, 41c900 <ascii_strlower_n@plt+0x184a0>
  41c8f4:	ldr	x8, [sp, #32]
  41c8f8:	ldr	x9, [sp, #48]
  41c8fc:	str	x8, [x9]
  41c900:	stur	wzr, [x29, #-4]
  41c904:	ldur	w0, [x29, #-4]
  41c908:	ldp	x29, x30, [sp, #96]
  41c90c:	add	sp, sp, #0x70
  41c910:	ret
  41c914:	sub	sp, sp, #0x50
  41c918:	stp	x29, x30, [sp, #64]
  41c91c:	add	x29, sp, #0x40
  41c920:	stur	x0, [x29, #-16]
  41c924:	stur	x1, [x29, #-24]
  41c928:	str	x2, [sp, #32]
  41c92c:	str	x3, [sp, #24]
  41c930:	ldur	x8, [x29, #-16]
  41c934:	str	x8, [sp, #8]
  41c938:	ldur	x8, [x29, #-16]
  41c93c:	ldr	x8, [x8, #24]
  41c940:	str	x8, [sp, #16]
  41c944:	ldur	x8, [x29, #-16]
  41c948:	ldr	x8, [x8, #24]
  41c94c:	ldr	x9, [sp, #16]
  41c950:	ldr	x10, [sp, #32]
  41c954:	add	x9, x9, x10
  41c958:	cmp	x8, x9
  41c95c:	b.cs	41c9d0 <ascii_strlower_n@plt+0x18570>  // b.hs, b.nlast
  41c960:	ldur	x0, [x29, #-16]
  41c964:	ldur	x1, [x29, #-24]
  41c968:	mov	x8, xzr
  41c96c:	mov	x2, x8
  41c970:	bl	41dd64 <ascii_strlower_n@plt+0x19904>
  41c974:	str	w0, [sp, #4]
  41c978:	ldr	w9, [sp, #4]
  41c97c:	cmp	w9, #0x0
  41c980:	cset	w9, ge  // ge = tcont
  41c984:	tbnz	w9, #0, 41c99c <ascii_strlower_n@plt+0x1853c>
  41c988:	ldr	w8, [sp, #4]
  41c98c:	stur	w8, [x29, #-4]
  41c990:	mov	w8, #0x1                   	// #1
  41c994:	str	w8, [sp]
  41c998:	b	41ca28 <ascii_strlower_n@plt+0x185c8>
  41c99c:	ldur	x8, [x29, #-16]
  41c9a0:	ldr	x8, [x8, #24]
  41c9a4:	ldr	x9, [sp, #16]
  41c9a8:	ldr	x10, [sp, #32]
  41c9ac:	add	x9, x9, x10
  41c9b0:	cmp	x8, x9
  41c9b4:	b.ls	41c9cc <ascii_strlower_n@plt+0x1856c>  // b.plast
  41c9b8:	mov	w8, #0xffffffb6            	// #-74
  41c9bc:	stur	w8, [x29, #-4]
  41c9c0:	mov	w8, #0x1                   	// #1
  41c9c4:	str	w8, [sp]
  41c9c8:	b	41ca28 <ascii_strlower_n@plt+0x185c8>
  41c9cc:	b	41c944 <ascii_strlower_n@plt+0x184e4>
  41c9d0:	ldur	x8, [x29, #-16]
  41c9d4:	ldr	x8, [x8, #24]
  41c9d8:	ldr	x9, [sp, #16]
  41c9dc:	ldr	x10, [sp, #32]
  41c9e0:	add	x9, x9, x10
  41c9e4:	cmp	x8, x9
  41c9e8:	b.eq	41ca00 <ascii_strlower_n@plt+0x185a0>  // b.none
  41c9ec:	mov	w8, #0xffffffb6            	// #-74
  41c9f0:	stur	w8, [x29, #-4]
  41c9f4:	mov	w8, #0x1                   	// #1
  41c9f8:	str	w8, [sp]
  41c9fc:	b	41ca28 <ascii_strlower_n@plt+0x185c8>
  41ca00:	ldr	x8, [sp, #24]
  41ca04:	cbz	x8, 41ca14 <ascii_strlower_n@plt+0x185b4>
  41ca08:	ldr	x8, [sp, #16]
  41ca0c:	ldr	x9, [sp, #24]
  41ca10:	str	x8, [x9]
  41ca14:	mov	x8, xzr
  41ca18:	str	x8, [sp, #8]
  41ca1c:	stur	wzr, [x29, #-4]
  41ca20:	mov	w8, #0x1                   	// #1
  41ca24:	str	w8, [sp]
  41ca28:	add	x0, sp, #0x8
  41ca2c:	bl	41a58c <ascii_strlower_n@plt+0x1612c>
  41ca30:	ldur	w0, [x29, #-4]
  41ca34:	ldp	x29, x30, [sp, #64]
  41ca38:	add	sp, sp, #0x50
  41ca3c:	ret
  41ca40:	sub	sp, sp, #0x70
  41ca44:	stp	x29, x30, [sp, #96]
  41ca48:	add	x29, sp, #0x60
  41ca4c:	mov	x8, xzr
  41ca50:	mov	w9, #0x1                   	// #1
  41ca54:	stur	x0, [x29, #-16]
  41ca58:	stur	x8, [x29, #-24]
  41ca5c:	stur	x8, [x29, #-32]
  41ca60:	str	xzr, [sp, #48]
  41ca64:	str	xzr, [sp, #56]
  41ca68:	ldur	x8, [x29, #-16]
  41ca6c:	ldrb	w10, [x8, #160]
  41ca70:	lsr	w10, w10, w9
  41ca74:	and	w9, w10, w9
  41ca78:	tbnz	w9, #0, 41ca80 <ascii_strlower_n@plt+0x18620>
  41ca7c:	b	41ca90 <ascii_strlower_n@plt+0x18630>
  41ca80:	stur	wzr, [x29, #-4]
  41ca84:	mov	w8, #0x1                   	// #1
  41ca88:	str	w8, [sp, #40]
  41ca8c:	b	41cb7c <ascii_strlower_n@plt+0x1871c>
  41ca90:	ldur	x8, [x29, #-16]
  41ca94:	str	x8, [sp, #48]
  41ca98:	ldur	x8, [x29, #-16]
  41ca9c:	ldr	x8, [x8, #24]
  41caa0:	str	x8, [sp, #56]
  41caa4:	ldur	x0, [x29, #-16]
  41caa8:	mov	x1, #0xc                   	// #12
  41caac:	bl	419e84 <ascii_strlower_n@plt+0x15a24>
  41cab0:	ldur	x0, [x29, #-16]
  41cab4:	sub	x1, x29, #0x18
  41cab8:	bl	41cc0c <ascii_strlower_n@plt+0x187ac>
  41cabc:	str	w0, [sp, #44]
  41cac0:	ldr	w8, [sp, #44]
  41cac4:	cmp	w8, #0x0
  41cac8:	cset	w8, ge  // ge = tcont
  41cacc:	tbnz	w8, #0, 41cae4 <ascii_strlower_n@plt+0x18684>
  41cad0:	ldr	w8, [sp, #44]
  41cad4:	stur	w8, [x29, #-4]
  41cad8:	mov	w8, #0x1                   	// #1
  41cadc:	str	w8, [sp, #40]
  41cae0:	b	41cb7c <ascii_strlower_n@plt+0x1871c>
  41cae4:	ldur	x0, [x29, #-16]
  41cae8:	sub	x1, x29, #0x20
  41caec:	bl	41ced4 <ascii_strlower_n@plt+0x18a74>
  41caf0:	str	w0, [sp, #44]
  41caf4:	ldr	w8, [sp, #44]
  41caf8:	cmp	w8, #0x0
  41cafc:	cset	w8, ge  // ge = tcont
  41cb00:	tbnz	w8, #0, 41cb18 <ascii_strlower_n@plt+0x186b8>
  41cb04:	ldr	w8, [sp, #44]
  41cb08:	stur	w8, [x29, #-4]
  41cb0c:	mov	w8, #0x1                   	// #1
  41cb10:	str	w8, [sp, #40]
  41cb14:	b	41cb7c <ascii_strlower_n@plt+0x1871c>
  41cb18:	ldur	x8, [x29, #-24]
  41cb1c:	str	x8, [sp, #32]
  41cb20:	mov	x8, xzr
  41cb24:	stur	x8, [x29, #-24]
  41cb28:	ldr	x9, [sp, #32]
  41cb2c:	str	x9, [sp, #24]
  41cb30:	ldr	x9, [sp, #24]
  41cb34:	ldur	x10, [x29, #-16]
  41cb38:	str	x9, [x10, #72]
  41cb3c:	ldur	x9, [x29, #-32]
  41cb40:	str	x9, [sp, #16]
  41cb44:	stur	x8, [x29, #-32]
  41cb48:	ldr	x8, [sp, #16]
  41cb4c:	str	x8, [sp, #8]
  41cb50:	ldr	x8, [sp, #8]
  41cb54:	ldur	x9, [x29, #-16]
  41cb58:	str	x8, [x9, #80]
  41cb5c:	ldur	x8, [x29, #-16]
  41cb60:	ldrb	w11, [x8, #160]
  41cb64:	and	w11, w11, #0xfffffffd
  41cb68:	orr	w11, w11, #0x2
  41cb6c:	strb	w11, [x8, #160]
  41cb70:	stur	wzr, [x29, #-4]
  41cb74:	mov	w11, #0x1                   	// #1
  41cb78:	str	w11, [sp, #40]
  41cb7c:	add	x0, sp, #0x30
  41cb80:	bl	41a58c <ascii_strlower_n@plt+0x1612c>
  41cb84:	sub	x0, x29, #0x20
  41cb88:	bl	41cbd8 <ascii_strlower_n@plt+0x18778>
  41cb8c:	sub	x0, x29, #0x18
  41cb90:	bl	41cba4 <ascii_strlower_n@plt+0x18744>
  41cb94:	ldur	w0, [x29, #-4]
  41cb98:	ldp	x29, x30, [sp, #96]
  41cb9c:	add	sp, sp, #0x70
  41cba0:	ret
  41cba4:	sub	sp, sp, #0x20
  41cba8:	stp	x29, x30, [sp, #16]
  41cbac:	add	x29, sp, #0x10
  41cbb0:	str	x0, [sp, #8]
  41cbb4:	ldr	x8, [sp, #8]
  41cbb8:	ldr	x8, [x8]
  41cbbc:	cbz	x8, 41cbcc <ascii_strlower_n@plt+0x1876c>
  41cbc0:	ldr	x8, [sp, #8]
  41cbc4:	ldr	x0, [x8]
  41cbc8:	bl	429310 <ascii_strlower_n@plt+0x24eb0>
  41cbcc:	ldp	x29, x30, [sp, #16]
  41cbd0:	add	sp, sp, #0x20
  41cbd4:	ret
  41cbd8:	sub	sp, sp, #0x20
  41cbdc:	stp	x29, x30, [sp, #16]
  41cbe0:	add	x29, sp, #0x10
  41cbe4:	str	x0, [sp, #8]
  41cbe8:	ldr	x8, [sp, #8]
  41cbec:	ldr	x8, [x8]
  41cbf0:	cbz	x8, 41cc00 <ascii_strlower_n@plt+0x187a0>
  41cbf4:	ldr	x8, [sp, #8]
  41cbf8:	ldr	x0, [x8]
  41cbfc:	bl	425614 <ascii_strlower_n@plt+0x211b4>
  41cc00:	ldp	x29, x30, [sp, #16]
  41cc04:	add	sp, sp, #0x20
  41cc08:	ret
  41cc0c:	sub	sp, sp, #0x80
  41cc10:	stp	x29, x30, [sp, #112]
  41cc14:	add	x29, sp, #0x70
  41cc18:	mov	x8, xzr
  41cc1c:	adrp	x9, 430000 <ascii_strlower_n@plt+0x2bba0>
  41cc20:	add	x9, x9, #0xb94
  41cc24:	add	x9, x9, #0x3
  41cc28:	stur	x0, [x29, #-16]
  41cc2c:	stur	x1, [x29, #-24]
  41cc30:	stur	x8, [x29, #-32]
  41cc34:	ldur	x0, [x29, #-16]
  41cc38:	str	x9, [sp, #16]
  41cc3c:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  41cc40:	ldrh	w0, [x0, #4]
  41cc44:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  41cc48:	and	w10, w0, #0xffff
  41cc4c:	stur	w10, [x29, #-36]
  41cc50:	ldur	w10, [x29, #-36]
  41cc54:	cmp	w10, #0x0
  41cc58:	cset	w10, ls  // ls = plast
  41cc5c:	tbnz	w10, #0, 41ce8c <ascii_strlower_n@plt+0x18a2c>
  41cc60:	ldur	w8, [x29, #-36]
  41cc64:	mov	w0, w8
  41cc68:	bl	429190 <ascii_strlower_n@plt+0x24d30>
  41cc6c:	stur	x0, [x29, #-32]
  41cc70:	ldur	x9, [x29, #-32]
  41cc74:	cbnz	x9, 41cc8c <ascii_strlower_n@plt+0x1882c>
  41cc78:	mov	w8, #0xfffffff4            	// #-12
  41cc7c:	stur	w8, [x29, #-4]
  41cc80:	mov	w8, #0x1                   	// #1
  41cc84:	stur	w8, [x29, #-48]
  41cc88:	b	41cebc <ascii_strlower_n@plt+0x18a5c>
  41cc8c:	mov	x8, xzr
  41cc90:	str	x8, [sp, #56]
  41cc94:	adrp	x0, 44f000 <ascii_strlower_n@plt+0x4aba0>
  41cc98:	ldr	x0, [x0, #2672]
  41cc9c:	bl	4041e0 <internal_set_new@plt>
  41cca0:	str	x0, [sp, #56]
  41cca4:	ldr	x8, [sp, #56]
  41cca8:	cbnz	x8, 41ccd8 <ascii_strlower_n@plt+0x18878>
  41ccac:	mov	w8, wzr
  41ccb0:	mov	w0, w8
  41ccb4:	ldr	x1, [sp, #16]
  41ccb8:	mov	w2, #0x85e                 	// #2142
  41ccbc:	adrp	x3, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ccc0:	add	x3, x3, #0x806
  41ccc4:	bl	403a90 <log_oom_internal@plt>
  41ccc8:	stur	w0, [x29, #-4]
  41cccc:	mov	w8, #0x1                   	// #1
  41ccd0:	stur	w8, [x29, #-48]
  41ccd4:	b	41ce6c <ascii_strlower_n@plt+0x18a0c>
  41ccd8:	ldr	x0, [sp, #56]
  41ccdc:	ldur	w8, [x29, #-36]
  41cce0:	mov	w9, #0x2                   	// #2
  41cce4:	mul	w1, w8, w9
  41cce8:	bl	41e0f0 <ascii_strlower_n@plt+0x19c90>
  41ccec:	stur	w0, [x29, #-44]
  41ccf0:	ldur	w8, [x29, #-44]
  41ccf4:	cmp	w8, #0x0
  41ccf8:	cset	w8, ge  // ge = tcont
  41ccfc:	tbnz	w8, #0, 41cd14 <ascii_strlower_n@plt+0x188b4>
  41cd00:	ldur	w8, [x29, #-44]
  41cd04:	stur	w8, [x29, #-4]
  41cd08:	mov	w8, #0x1                   	// #1
  41cd0c:	stur	w8, [x29, #-48]
  41cd10:	b	41ce6c <ascii_strlower_n@plt+0x18a0c>
  41cd14:	stur	wzr, [x29, #-40]
  41cd18:	ldur	w8, [x29, #-40]
  41cd1c:	ldur	w9, [x29, #-36]
  41cd20:	cmp	w8, w9
  41cd24:	b.cs	41ce68 <ascii_strlower_n@plt+0x18a08>  // b.hs, b.nlast
  41cd28:	add	x1, sp, #0x30
  41cd2c:	mov	x8, xzr
  41cd30:	str	x8, [sp, #48]
  41cd34:	ldur	x0, [x29, #-16]
  41cd38:	add	x2, sp, #0x2f
  41cd3c:	mov	x3, x8
  41cd40:	bl	41ab84 <ascii_strlower_n@plt+0x16724>
  41cd44:	stur	w0, [x29, #-44]
  41cd48:	ldur	w9, [x29, #-44]
  41cd4c:	cmp	w9, #0x0
  41cd50:	cset	w9, ge  // ge = tcont
  41cd54:	tbnz	w9, #0, 41cd6c <ascii_strlower_n@plt+0x1890c>
  41cd58:	ldur	w8, [x29, #-44]
  41cd5c:	stur	w8, [x29, #-4]
  41cd60:	mov	w8, #0x1                   	// #1
  41cd64:	stur	w8, [x29, #-48]
  41cd68:	b	41ce30 <ascii_strlower_n@plt+0x189d0>
  41cd6c:	ldrb	w8, [sp, #47]
  41cd70:	tbnz	w8, #0, 41cd78 <ascii_strlower_n@plt+0x18918>
  41cd74:	b	41cd8c <ascii_strlower_n@plt+0x1892c>
  41cd78:	mov	w8, #0xffffffb6            	// #-74
  41cd7c:	stur	w8, [x29, #-4]
  41cd80:	mov	w8, #0x1                   	// #1
  41cd84:	stur	w8, [x29, #-48]
  41cd88:	b	41ce30 <ascii_strlower_n@plt+0x189d0>
  41cd8c:	ldr	x8, [sp, #48]
  41cd90:	ldrh	w0, [x8, #6]
  41cd94:	bl	42baf0 <ascii_strlower_n@plt+0x27690>
  41cd98:	tbnz	w0, #0, 41cdb0 <ascii_strlower_n@plt+0x18950>
  41cd9c:	mov	w8, #0xffffffb6            	// #-74
  41cda0:	stur	w8, [x29, #-4]
  41cda4:	mov	w8, #0x1                   	// #1
  41cda8:	stur	w8, [x29, #-48]
  41cdac:	b	41ce30 <ascii_strlower_n@plt+0x189d0>
  41cdb0:	ldr	x0, [sp, #56]
  41cdb4:	ldr	x1, [sp, #48]
  41cdb8:	bl	4041f0 <set_put@plt>
  41cdbc:	stur	w0, [x29, #-44]
  41cdc0:	ldur	w8, [x29, #-44]
  41cdc4:	cmp	w8, #0x0
  41cdc8:	cset	w8, ge  // ge = tcont
  41cdcc:	tbnz	w8, #0, 41cde4 <ascii_strlower_n@plt+0x18984>
  41cdd0:	ldur	w8, [x29, #-44]
  41cdd4:	stur	w8, [x29, #-4]
  41cdd8:	mov	w8, #0x1                   	// #1
  41cddc:	stur	w8, [x29, #-48]
  41cde0:	b	41ce30 <ascii_strlower_n@plt+0x189d0>
  41cde4:	ldur	w8, [x29, #-44]
  41cde8:	cbnz	w8, 41cdf8 <ascii_strlower_n@plt+0x18998>
  41cdec:	mov	w8, #0x4                   	// #4
  41cdf0:	stur	w8, [x29, #-48]
  41cdf4:	b	41ce30 <ascii_strlower_n@plt+0x189d0>
  41cdf8:	ldur	x0, [x29, #-32]
  41cdfc:	ldr	x1, [sp, #48]
  41ce00:	bl	4294b0 <ascii_strlower_n@plt+0x25050>
  41ce04:	stur	w0, [x29, #-44]
  41ce08:	ldur	w8, [x29, #-44]
  41ce0c:	cmp	w8, #0x0
  41ce10:	cset	w8, ge  // ge = tcont
  41ce14:	tbnz	w8, #0, 41ce2c <ascii_strlower_n@plt+0x189cc>
  41ce18:	ldur	w8, [x29, #-44]
  41ce1c:	stur	w8, [x29, #-4]
  41ce20:	mov	w8, #0x1                   	// #1
  41ce24:	stur	w8, [x29, #-48]
  41ce28:	b	41ce30 <ascii_strlower_n@plt+0x189d0>
  41ce2c:	stur	wzr, [x29, #-48]
  41ce30:	add	x0, sp, #0x30
  41ce34:	bl	41c6c8 <ascii_strlower_n@plt+0x18268>
  41ce38:	ldur	w8, [x29, #-48]
  41ce3c:	str	w8, [sp, #12]
  41ce40:	cbz	w8, 41ce58 <ascii_strlower_n@plt+0x189f8>
  41ce44:	b	41ce48 <ascii_strlower_n@plt+0x189e8>
  41ce48:	ldr	w8, [sp, #12]
  41ce4c:	cmp	w8, #0x4
  41ce50:	b.eq	41ce58 <ascii_strlower_n@plt+0x189f8>  // b.none
  41ce54:	b	41ce6c <ascii_strlower_n@plt+0x18a0c>
  41ce58:	ldur	w8, [x29, #-40]
  41ce5c:	add	w8, w8, #0x1
  41ce60:	stur	w8, [x29, #-40]
  41ce64:	b	41cd18 <ascii_strlower_n@plt+0x188b8>
  41ce68:	stur	wzr, [x29, #-48]
  41ce6c:	add	x0, sp, #0x38
  41ce70:	bl	41e0bc <ascii_strlower_n@plt+0x19c5c>
  41ce74:	ldur	w8, [x29, #-48]
  41ce78:	cmp	w8, #0x0
  41ce7c:	cset	w8, eq  // eq = none
  41ce80:	eor	w8, w8, #0x1
  41ce84:	tbnz	w8, #0, 41cebc <ascii_strlower_n@plt+0x18a5c>
  41ce88:	b	41ce8c <ascii_strlower_n@plt+0x18a2c>
  41ce8c:	ldur	x8, [x29, #-32]
  41ce90:	str	x8, [sp, #32]
  41ce94:	mov	x8, xzr
  41ce98:	stur	x8, [x29, #-32]
  41ce9c:	ldr	x8, [sp, #32]
  41cea0:	str	x8, [sp, #24]
  41cea4:	ldr	x8, [sp, #24]
  41cea8:	ldur	x9, [x29, #-24]
  41ceac:	str	x8, [x9]
  41ceb0:	stur	wzr, [x29, #-4]
  41ceb4:	mov	w10, #0x1                   	// #1
  41ceb8:	stur	w10, [x29, #-48]
  41cebc:	sub	x0, x29, #0x20
  41cec0:	bl	41cba4 <ascii_strlower_n@plt+0x18744>
  41cec4:	ldur	w0, [x29, #-4]
  41cec8:	ldp	x29, x30, [sp, #112]
  41cecc:	add	sp, sp, #0x80
  41ced0:	ret
  41ced4:	sub	sp, sp, #0x120
  41ced8:	stp	x29, x30, [sp, #256]
  41cedc:	str	x28, [sp, #272]
  41cee0:	add	x29, sp, #0x100
  41cee4:	mov	x8, xzr
  41cee8:	mov	w9, #0x0                   	// #0
  41ceec:	adrp	x10, 430000 <ascii_strlower_n@plt+0x2bba0>
  41cef0:	add	x10, x10, #0xb94
  41cef4:	add	x10, x10, #0x3
  41cef8:	adrp	x11, 431000 <ascii_strlower_n@plt+0x2cba0>
  41cefc:	add	x11, x11, #0x822
  41cf00:	stur	x0, [x29, #-16]
  41cf04:	stur	x1, [x29, #-24]
  41cf08:	stur	x8, [x29, #-32]
  41cf0c:	stur	x8, [x29, #-48]
  41cf10:	sturb	w9, [x29, #-49]
  41cf14:	ldur	x0, [x29, #-16]
  41cf18:	str	x10, [sp, #56]
  41cf1c:	str	x11, [sp, #48]
  41cf20:	bl	41e14c <ascii_strlower_n@plt+0x19cec>
  41cf24:	stur	w0, [x29, #-36]
  41cf28:	ldur	w9, [x29, #-36]
  41cf2c:	cbnz	w9, 41cf40 <ascii_strlower_n@plt+0x18ae0>
  41cf30:	stur	wzr, [x29, #-4]
  41cf34:	mov	w8, #0x1                   	// #1
  41cf38:	stur	w8, [x29, #-60]
  41cf3c:	b	41d55c <ascii_strlower_n@plt+0x190fc>
  41cf40:	ldur	w8, [x29, #-36]
  41cf44:	mov	w0, w8
  41cf48:	bl	4254f0 <ascii_strlower_n@plt+0x21090>
  41cf4c:	stur	x0, [x29, #-32]
  41cf50:	ldur	x9, [x29, #-32]
  41cf54:	cbnz	x9, 41cf6c <ascii_strlower_n@plt+0x18b0c>
  41cf58:	mov	w8, #0xfffffff4            	// #-12
  41cf5c:	stur	w8, [x29, #-4]
  41cf60:	mov	w8, #0x1                   	// #1
  41cf64:	stur	w8, [x29, #-60]
  41cf68:	b	41d55c <ascii_strlower_n@plt+0x190fc>
  41cf6c:	stur	wzr, [x29, #-40]
  41cf70:	ldur	w8, [x29, #-40]
  41cf74:	ldur	w9, [x29, #-36]
  41cf78:	cmp	w8, w9
  41cf7c:	b.cs	41d50c <ascii_strlower_n@plt+0x190ac>  // b.hs, b.nlast
  41cf80:	sub	x1, x29, #0x48
  41cf84:	mov	x8, xzr
  41cf88:	stur	x8, [x29, #-72]
  41cf8c:	sub	x2, x29, #0x49
  41cf90:	mov	w9, #0x0                   	// #0
  41cf94:	sturb	w9, [x29, #-73]
  41cf98:	ldur	x0, [x29, #-16]
  41cf9c:	mov	x3, x8
  41cfa0:	bl	41ae10 <ascii_strlower_n@plt+0x169b0>
  41cfa4:	stur	w0, [x29, #-56]
  41cfa8:	ldur	w9, [x29, #-56]
  41cfac:	cmp	w9, #0x0
  41cfb0:	cset	w9, ge  // ge = tcont
  41cfb4:	tbnz	w9, #0, 41cfcc <ascii_strlower_n@plt+0x18b6c>
  41cfb8:	ldur	w8, [x29, #-56]
  41cfbc:	stur	w8, [x29, #-4]
  41cfc0:	mov	w8, #0x1                   	// #1
  41cfc4:	stur	w8, [x29, #-60]
  41cfc8:	b	41d4d4 <ascii_strlower_n@plt+0x19074>
  41cfcc:	ldur	x8, [x29, #-48]
  41cfd0:	cbz	x8, 41cfe8 <ascii_strlower_n@plt+0x18b88>
  41cfd4:	ldur	x8, [x29, #-72]
  41cfd8:	add	x0, x8, #0x8
  41cfdc:	ldur	x8, [x29, #-48]
  41cfe0:	add	x1, x8, #0x8
  41cfe4:	bl	41fabc <ascii_strlower_n@plt+0x1b65c>
  41cfe8:	ldur	x8, [x29, #-72]
  41cfec:	ldr	x8, [x8, #8]
  41cff0:	ldrh	w9, [x8, #6]
  41cff4:	cmp	w9, #0x29
  41cff8:	b.ne	41d400 <ascii_strlower_n@plt+0x18fa0>  // b.any
  41cffc:	ldur	x8, [x29, #-16]
  41d000:	ldr	x8, [x8, #88]
  41d004:	cbnz	x8, 41d014 <ascii_strlower_n@plt+0x18bb4>
  41d008:	ldurb	w8, [x29, #-49]
  41d00c:	tbnz	w8, #0, 41d014 <ascii_strlower_n@plt+0x18bb4>
  41d010:	b	41d09c <ascii_strlower_n@plt+0x18c3c>
  41d014:	mov	w8, #0x7                   	// #7
  41d018:	stur	w8, [x29, #-80]
  41d01c:	stur	wzr, [x29, #-84]
  41d020:	stur	wzr, [x29, #-88]
  41d024:	ldur	w0, [x29, #-88]
  41d028:	bl	403a10 <log_get_max_level_realm@plt>
  41d02c:	ldur	w8, [x29, #-80]
  41d030:	and	w8, w8, #0x7
  41d034:	cmp	w0, w8
  41d038:	b.lt	41d06c <ascii_strlower_n@plt+0x18c0c>  // b.tstop
  41d03c:	ldur	w8, [x29, #-88]
  41d040:	ldur	w9, [x29, #-80]
  41d044:	orr	w0, w9, w8, lsl #10
  41d048:	ldur	w1, [x29, #-84]
  41d04c:	ldr	x2, [sp, #56]
  41d050:	mov	w3, #0x8a7                 	// #2215
  41d054:	ldr	x4, [sp, #48]
  41d058:	adrp	x5, 431000 <ascii_strlower_n@plt+0x2cba0>
  41d05c:	add	x5, x5, #0x83c
  41d060:	bl	403a20 <log_internal_realm@plt>
  41d064:	str	w0, [sp, #44]
  41d068:	b	41d080 <ascii_strlower_n@plt+0x18c20>
  41d06c:	ldur	w0, [x29, #-84]
  41d070:	bl	403a30 <abs@plt>
  41d074:	mov	w8, wzr
  41d078:	subs	w8, w8, w0, uxtb
  41d07c:	str	w8, [sp, #44]
  41d080:	ldr	w8, [sp, #44]
  41d084:	stur	w8, [x29, #-92]
  41d088:	mov	w8, #0x1                   	// #1
  41d08c:	sturb	w8, [x29, #-49]
  41d090:	mov	w8, #0x4                   	// #4
  41d094:	stur	w8, [x29, #-60]
  41d098:	b	41d4d4 <ascii_strlower_n@plt+0x19074>
  41d09c:	ldur	x8, [x29, #-72]
  41d0a0:	ldr	x0, [x8, #8]
  41d0a4:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41d0a8:	bl	404130 <dns_name_is_root@plt>
  41d0ac:	tbnz	w0, #0, 41d138 <ascii_strlower_n@plt+0x18cd8>
  41d0b0:	mov	w8, #0x7                   	// #7
  41d0b4:	stur	w8, [x29, #-96]
  41d0b8:	stur	wzr, [x29, #-100]
  41d0bc:	stur	wzr, [x29, #-104]
  41d0c0:	ldur	w0, [x29, #-104]
  41d0c4:	bl	403a10 <log_get_max_level_realm@plt>
  41d0c8:	ldur	w8, [x29, #-96]
  41d0cc:	and	w8, w8, #0x7
  41d0d0:	cmp	w0, w8
  41d0d4:	b.lt	41d108 <ascii_strlower_n@plt+0x18ca8>  // b.tstop
  41d0d8:	ldur	w8, [x29, #-104]
  41d0dc:	ldur	w9, [x29, #-96]
  41d0e0:	orr	w0, w9, w8, lsl #10
  41d0e4:	ldur	w1, [x29, #-100]
  41d0e8:	ldr	x2, [sp, #56]
  41d0ec:	mov	w3, #0x8af                 	// #2223
  41d0f0:	ldr	x4, [sp, #48]
  41d0f4:	adrp	x5, 431000 <ascii_strlower_n@plt+0x2cba0>
  41d0f8:	add	x5, x5, #0x865
  41d0fc:	bl	403a20 <log_internal_realm@plt>
  41d100:	str	w0, [sp, #40]
  41d104:	b	41d11c <ascii_strlower_n@plt+0x18cbc>
  41d108:	ldur	w0, [x29, #-100]
  41d10c:	bl	403a30 <abs@plt>
  41d110:	mov	w8, wzr
  41d114:	subs	w8, w8, w0, uxtb
  41d118:	str	w8, [sp, #40]
  41d11c:	ldr	w8, [sp, #40]
  41d120:	stur	w8, [x29, #-108]
  41d124:	mov	w8, #0x1                   	// #1
  41d128:	sturb	w8, [x29, #-49]
  41d12c:	mov	w8, #0x4                   	// #4
  41d130:	stur	w8, [x29, #-60]
  41d134:	b	41d4d4 <ascii_strlower_n@plt+0x19074>
  41d138:	ldur	w8, [x29, #-40]
  41d13c:	ldur	x0, [x29, #-16]
  41d140:	str	w8, [sp, #36]
  41d144:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  41d148:	ldrh	w0, [x0, #6]
  41d14c:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  41d150:	ldur	x9, [x29, #-16]
  41d154:	str	w0, [sp, #32]
  41d158:	mov	x0, x9
  41d15c:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  41d160:	ldrh	w0, [x0, #8]
  41d164:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  41d168:	and	w8, w0, #0xffff
  41d16c:	ldr	w10, [sp, #32]
  41d170:	add	w8, w8, w10, uxth
  41d174:	ldr	w11, [sp, #36]
  41d178:	cmp	w11, w8
  41d17c:	b.cs	41d208 <ascii_strlower_n@plt+0x18da8>  // b.hs, b.nlast
  41d180:	mov	w8, #0x7                   	// #7
  41d184:	stur	w8, [x29, #-112]
  41d188:	stur	wzr, [x29, #-116]
  41d18c:	stur	wzr, [x29, #-120]
  41d190:	ldur	w0, [x29, #-120]
  41d194:	bl	403a10 <log_get_max_level_realm@plt>
  41d198:	ldur	w8, [x29, #-112]
  41d19c:	and	w8, w8, #0x7
  41d1a0:	cmp	w0, w8
  41d1a4:	b.lt	41d1d8 <ascii_strlower_n@plt+0x18d78>  // b.tstop
  41d1a8:	ldur	w8, [x29, #-120]
  41d1ac:	ldur	w9, [x29, #-112]
  41d1b0:	orr	w0, w9, w8, lsl #10
  41d1b4:	ldur	w1, [x29, #-116]
  41d1b8:	ldr	x2, [sp, #56]
  41d1bc:	mov	w3, #0x8b8                 	// #2232
  41d1c0:	ldr	x4, [sp, #48]
  41d1c4:	adrp	x5, 431000 <ascii_strlower_n@plt+0x2cba0>
  41d1c8:	add	x5, x5, #0x893
  41d1cc:	bl	403a20 <log_internal_realm@plt>
  41d1d0:	str	w0, [sp, #28]
  41d1d4:	b	41d1ec <ascii_strlower_n@plt+0x18d8c>
  41d1d8:	ldur	w0, [x29, #-116]
  41d1dc:	bl	403a30 <abs@plt>
  41d1e0:	mov	w8, wzr
  41d1e4:	subs	w8, w8, w0, uxtb
  41d1e8:	str	w8, [sp, #28]
  41d1ec:	ldr	w8, [sp, #28]
  41d1f0:	stur	w8, [x29, #-124]
  41d1f4:	mov	w8, #0x1                   	// #1
  41d1f8:	sturb	w8, [x29, #-49]
  41d1fc:	mov	w8, #0x4                   	// #4
  41d200:	stur	w8, [x29, #-60]
  41d204:	b	41d4d4 <ascii_strlower_n@plt+0x19074>
  41d208:	ldur	x0, [x29, #-72]
  41d20c:	sub	x1, x29, #0x4a
  41d210:	bl	41e1b8 <ascii_strlower_n@plt+0x19d58>
  41d214:	tbnz	w0, #0, 41d2a0 <ascii_strlower_n@plt+0x18e40>
  41d218:	mov	w8, #0x7                   	// #7
  41d21c:	str	w8, [sp, #128]
  41d220:	str	wzr, [sp, #124]
  41d224:	str	wzr, [sp, #120]
  41d228:	ldr	w0, [sp, #120]
  41d22c:	bl	403a10 <log_get_max_level_realm@plt>
  41d230:	ldr	w8, [sp, #128]
  41d234:	and	w8, w8, #0x7
  41d238:	cmp	w0, w8
  41d23c:	b.lt	41d270 <ascii_strlower_n@plt+0x18e10>  // b.tstop
  41d240:	ldr	w8, [sp, #120]
  41d244:	ldr	w9, [sp, #128]
  41d248:	orr	w0, w9, w8, lsl #10
  41d24c:	ldr	w1, [sp, #124]
  41d250:	ldr	x2, [sp, #56]
  41d254:	mov	w3, #0x8be                 	// #2238
  41d258:	ldr	x4, [sp, #48]
  41d25c:	adrp	x5, 431000 <ascii_strlower_n@plt+0x2cba0>
  41d260:	add	x5, x5, #0x8b6
  41d264:	bl	403a20 <log_internal_realm@plt>
  41d268:	str	w0, [sp, #24]
  41d26c:	b	41d284 <ascii_strlower_n@plt+0x18e24>
  41d270:	ldr	w0, [sp, #124]
  41d274:	bl	403a30 <abs@plt>
  41d278:	mov	w8, wzr
  41d27c:	subs	w8, w8, w0, uxtb
  41d280:	str	w8, [sp, #24]
  41d284:	ldr	w8, [sp, #24]
  41d288:	str	w8, [sp, #116]
  41d28c:	mov	w8, #0x1                   	// #1
  41d290:	sturb	w8, [x29, #-49]
  41d294:	mov	w8, #0x4                   	// #4
  41d298:	stur	w8, [x29, #-60]
  41d29c:	b	41d4d4 <ascii_strlower_n@plt+0x19074>
  41d2a0:	ldur	x0, [x29, #-16]
  41d2a4:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  41d2a8:	ldrh	w0, [x0, #2]
  41d2ac:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  41d2b0:	and	w8, w0, #0xffff
  41d2b4:	asr	w8, w8, #15
  41d2b8:	and	w8, w8, #0x1
  41d2bc:	cbz	w8, 41d3ec <ascii_strlower_n@plt+0x18f8c>
  41d2c0:	ldur	x0, [x29, #-72]
  41d2c4:	bl	41e404 <ascii_strlower_n@plt+0x19fa4>
  41d2c8:	and	w8, w0, #0xff
  41d2cc:	cbnz	w8, 41d358 <ascii_strlower_n@plt+0x18ef8>
  41d2d0:	mov	w8, #0x7                   	// #7
  41d2d4:	str	w8, [sp, #112]
  41d2d8:	str	wzr, [sp, #108]
  41d2dc:	str	wzr, [sp, #104]
  41d2e0:	ldr	w0, [sp, #104]
  41d2e4:	bl	403a10 <log_get_max_level_realm@plt>
  41d2e8:	ldr	w8, [sp, #112]
  41d2ec:	and	w8, w8, #0x7
  41d2f0:	cmp	w0, w8
  41d2f4:	b.lt	41d328 <ascii_strlower_n@plt+0x18ec8>  // b.tstop
  41d2f8:	ldr	w8, [sp, #104]
  41d2fc:	ldr	w9, [sp, #112]
  41d300:	orr	w0, w9, w8, lsl #10
  41d304:	ldr	w1, [sp, #108]
  41d308:	ldr	x2, [sp, #56]
  41d30c:	mov	w3, #0x8c9                 	// #2249
  41d310:	ldr	x4, [sp, #48]
  41d314:	adrp	x5, 431000 <ascii_strlower_n@plt+0x2cba0>
  41d318:	add	x5, x5, #0x8d2
  41d31c:	bl	403a20 <log_internal_realm@plt>
  41d320:	str	w0, [sp, #20]
  41d324:	b	41d33c <ascii_strlower_n@plt+0x18edc>
  41d328:	ldr	w0, [sp, #108]
  41d32c:	bl	403a30 <abs@plt>
  41d330:	mov	w8, wzr
  41d334:	subs	w8, w8, w0, uxtb
  41d338:	str	w8, [sp, #20]
  41d33c:	ldr	w8, [sp, #20]
  41d340:	str	w8, [sp, #100]
  41d344:	mov	w8, #0xffffffb6            	// #-74
  41d348:	stur	w8, [x29, #-4]
  41d34c:	mov	w8, #0x1                   	// #1
  41d350:	stur	w8, [x29, #-60]
  41d354:	b	41d4d4 <ascii_strlower_n@plt+0x19074>
  41d358:	ldurb	w8, [x29, #-74]
  41d35c:	tbnz	w8, #0, 41d364 <ascii_strlower_n@plt+0x18f04>
  41d360:	b	41d3ec <ascii_strlower_n@plt+0x18f8c>
  41d364:	mov	w8, #0x7                   	// #7
  41d368:	str	w8, [sp, #96]
  41d36c:	str	wzr, [sp, #92]
  41d370:	str	wzr, [sp, #88]
  41d374:	ldr	w0, [sp, #88]
  41d378:	bl	403a10 <log_get_max_level_realm@plt>
  41d37c:	ldr	w8, [sp, #96]
  41d380:	and	w8, w8, #0x7
  41d384:	cmp	w0, w8
  41d388:	b.lt	41d3bc <ascii_strlower_n@plt+0x18f5c>  // b.tstop
  41d38c:	ldr	w8, [sp, #88]
  41d390:	ldr	w9, [sp, #96]
  41d394:	orr	w0, w9, w8, lsl #10
  41d398:	ldr	w1, [sp, #92]
  41d39c:	ldr	x2, [sp, #56]
  41d3a0:	mov	w3, #0x8d6                 	// #2262
  41d3a4:	ldr	x4, [sp, #48]
  41d3a8:	adrp	x5, 431000 <ascii_strlower_n@plt+0x2cba0>
  41d3ac:	add	x5, x5, #0x903
  41d3b0:	bl	403a20 <log_internal_realm@plt>
  41d3b4:	str	w0, [sp, #16]
  41d3b8:	b	41d3d0 <ascii_strlower_n@plt+0x18f70>
  41d3bc:	ldr	w0, [sp, #92]
  41d3c0:	bl	403a30 <abs@plt>
  41d3c4:	mov	w8, wzr
  41d3c8:	subs	w8, w8, w0, uxtb
  41d3cc:	str	w8, [sp, #16]
  41d3d0:	ldr	w8, [sp, #16]
  41d3d4:	str	w8, [sp, #84]
  41d3d8:	mov	w8, #0x1                   	// #1
  41d3dc:	sturb	w8, [x29, #-49]
  41d3e0:	mov	w8, #0x4                   	// #4
  41d3e4:	stur	w8, [x29, #-60]
  41d3e8:	b	41d4d4 <ascii_strlower_n@plt+0x19074>
  41d3ec:	ldur	x0, [x29, #-72]
  41d3f0:	bl	41fe28 <ascii_strlower_n@plt+0x1b9c8>
  41d3f4:	ldur	x8, [x29, #-16]
  41d3f8:	str	x0, [x8, #88]
  41d3fc:	b	41d4b8 <ascii_strlower_n@plt+0x19058>
  41d400:	ldur	w8, [x29, #-40]
  41d404:	ldur	x0, [x29, #-16]
  41d408:	str	w8, [sp, #12]
  41d40c:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  41d410:	ldrh	w0, [x0, #6]
  41d414:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  41d418:	and	w8, w0, #0xffff
  41d41c:	mov	w9, #0x2                   	// #2
  41d420:	mov	w10, wzr
  41d424:	ldr	w11, [sp, #12]
  41d428:	cmp	w11, w8
  41d42c:	csel	w8, w9, w10, cc  // cc = lo, ul, last
  41d430:	ldur	x12, [x29, #-16]
  41d434:	ldr	w9, [x12, #4]
  41d438:	mov	w10, #0x0                   	// #0
  41d43c:	cmp	w9, #0x1
  41d440:	str	w8, [sp, #8]
  41d444:	str	w10, [sp, #4]
  41d448:	b.ne	41d458 <ascii_strlower_n@plt+0x18ff8>  // b.any
  41d44c:	ldurb	w8, [x29, #-73]
  41d450:	eor	w8, w8, #0x1
  41d454:	str	w8, [sp, #4]
  41d458:	ldr	w8, [sp, #4]
  41d45c:	mov	w9, #0x4                   	// #4
  41d460:	mov	w10, wzr
  41d464:	tst	w8, #0x1
  41d468:	csel	w8, w9, w10, ne  // ne = any
  41d46c:	ldr	w9, [sp, #8]
  41d470:	orr	w8, w9, w8
  41d474:	str	w8, [sp, #80]
  41d478:	ldur	x0, [x29, #-32]
  41d47c:	ldur	x1, [x29, #-72]
  41d480:	ldur	x11, [x29, #-16]
  41d484:	ldr	w2, [x11, #96]
  41d488:	ldr	w3, [sp, #80]
  41d48c:	bl	425774 <ascii_strlower_n@plt+0x21314>
  41d490:	stur	w0, [x29, #-56]
  41d494:	ldur	w8, [x29, #-56]
  41d498:	cmp	w8, #0x0
  41d49c:	cset	w8, ge  // ge = tcont
  41d4a0:	tbnz	w8, #0, 41d4b8 <ascii_strlower_n@plt+0x19058>
  41d4a4:	ldur	w8, [x29, #-56]
  41d4a8:	stur	w8, [x29, #-4]
  41d4ac:	mov	w8, #0x1                   	// #1
  41d4b0:	stur	w8, [x29, #-60]
  41d4b4:	b	41d4d4 <ascii_strlower_n@plt+0x19074>
  41d4b8:	ldur	x0, [x29, #-48]
  41d4bc:	bl	41fed8 <ascii_strlower_n@plt+0x1ba78>
  41d4c0:	ldur	x8, [x29, #-72]
  41d4c4:	mov	x0, x8
  41d4c8:	bl	41fe28 <ascii_strlower_n@plt+0x1b9c8>
  41d4cc:	stur	x0, [x29, #-48]
  41d4d0:	stur	wzr, [x29, #-60]
  41d4d4:	sub	x0, x29, #0x48
  41d4d8:	bl	41c694 <ascii_strlower_n@plt+0x18234>
  41d4dc:	ldur	w8, [x29, #-60]
  41d4e0:	str	w8, [sp]
  41d4e4:	cbz	w8, 41d4fc <ascii_strlower_n@plt+0x1909c>
  41d4e8:	b	41d4ec <ascii_strlower_n@plt+0x1908c>
  41d4ec:	ldr	w8, [sp]
  41d4f0:	cmp	w8, #0x4
  41d4f4:	b.eq	41d4fc <ascii_strlower_n@plt+0x1909c>  // b.none
  41d4f8:	b	41d55c <ascii_strlower_n@plt+0x190fc>
  41d4fc:	ldur	w8, [x29, #-40]
  41d500:	add	w8, w8, #0x1
  41d504:	stur	w8, [x29, #-40]
  41d508:	b	41cf70 <ascii_strlower_n@plt+0x18b10>
  41d50c:	ldurb	w8, [x29, #-49]
  41d510:	tbnz	w8, #0, 41d518 <ascii_strlower_n@plt+0x190b8>
  41d514:	b	41d52c <ascii_strlower_n@plt+0x190cc>
  41d518:	ldur	x8, [x29, #-16]
  41d51c:	ldr	x0, [x8, #88]
  41d520:	bl	41fed8 <ascii_strlower_n@plt+0x1ba78>
  41d524:	ldur	x8, [x29, #-16]
  41d528:	str	x0, [x8, #88]
  41d52c:	ldur	x8, [x29, #-32]
  41d530:	str	x8, [sp, #72]
  41d534:	mov	x8, xzr
  41d538:	stur	x8, [x29, #-32]
  41d53c:	ldr	x8, [sp, #72]
  41d540:	str	x8, [sp, #64]
  41d544:	ldr	x8, [sp, #64]
  41d548:	ldur	x9, [x29, #-24]
  41d54c:	str	x8, [x9]
  41d550:	stur	wzr, [x29, #-4]
  41d554:	mov	w10, #0x1                   	// #1
  41d558:	stur	w10, [x29, #-60]
  41d55c:	sub	x0, x29, #0x30
  41d560:	bl	41c694 <ascii_strlower_n@plt+0x18234>
  41d564:	sub	x0, x29, #0x20
  41d568:	bl	41cbd8 <ascii_strlower_n@plt+0x18778>
  41d56c:	ldur	w0, [x29, #-4]
  41d570:	ldr	x28, [sp, #272]
  41d574:	ldp	x29, x30, [sp, #256]
  41d578:	add	sp, sp, #0x120
  41d57c:	ret
  41d580:	sub	sp, sp, #0x40
  41d584:	stp	x29, x30, [sp, #48]
  41d588:	add	x29, sp, #0x30
  41d58c:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  41d590:	add	x8, x8, #0xb94
  41d594:	add	x8, x8, #0x3
  41d598:	stur	x0, [x29, #-16]
  41d59c:	str	x1, [sp, #24]
  41d5a0:	str	x8, [sp, #8]
  41d5a4:	ldur	x8, [x29, #-16]
  41d5a8:	cmp	x8, #0x0
  41d5ac:	cset	w9, ne  // ne = any
  41d5b0:	mov	w10, #0x1                   	// #1
  41d5b4:	eor	w9, w9, #0x1
  41d5b8:	eor	w9, w9, w10
  41d5bc:	eor	w9, w9, w10
  41d5c0:	and	w9, w9, #0x1
  41d5c4:	mov	w0, w9
  41d5c8:	sxtw	x8, w0
  41d5cc:	cbz	x8, 41d5f4 <ascii_strlower_n@plt+0x19194>
  41d5d0:	mov	w8, wzr
  41d5d4:	mov	w0, w8
  41d5d8:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41d5dc:	add	x1, x1, #0xc51
  41d5e0:	ldr	x2, [sp, #8]
  41d5e4:	mov	w3, #0x919                 	// #2329
  41d5e8:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41d5ec:	add	x4, x4, #0x581
  41d5f0:	bl	4039d0 <log_assert_failed_realm@plt>
  41d5f4:	ldr	x8, [sp, #24]
  41d5f8:	cmp	x8, #0x0
  41d5fc:	cset	w9, ne  // ne = any
  41d600:	mov	w10, #0x1                   	// #1
  41d604:	eor	w9, w9, #0x1
  41d608:	eor	w9, w9, w10
  41d60c:	eor	w9, w9, w10
  41d610:	and	w9, w9, #0x1
  41d614:	mov	w0, w9
  41d618:	sxtw	x8, w0
  41d61c:	cbz	x8, 41d644 <ascii_strlower_n@plt+0x191e4>
  41d620:	mov	w8, wzr
  41d624:	mov	w0, w8
  41d628:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41d62c:	add	x1, x1, #0x5c2
  41d630:	ldr	x2, [sp, #8]
  41d634:	mov	w3, #0x91a                 	// #2330
  41d638:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41d63c:	add	x4, x4, #0x581
  41d640:	bl	4039d0 <log_assert_failed_realm@plt>
  41d644:	ldur	x0, [x29, #-16]
  41d648:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  41d64c:	ldrh	w0, [x0, #2]
  41d650:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  41d654:	and	w8, w0, #0xffff
  41d658:	asr	w8, w8, #15
  41d65c:	and	w8, w8, #0x1
  41d660:	cmp	w8, #0x1
  41d664:	b.eq	41d670 <ascii_strlower_n@plt+0x19210>  // b.none
  41d668:	stur	wzr, [x29, #-4]
  41d66c:	b	41d6e0 <ascii_strlower_n@plt+0x19280>
  41d670:	ldur	x0, [x29, #-16]
  41d674:	bl	41ca40 <ascii_strlower_n@plt+0x185e0>
  41d678:	str	w0, [sp, #20]
  41d67c:	ldr	w8, [sp, #20]
  41d680:	cmp	w8, #0x0
  41d684:	cset	w8, ge  // ge = tcont
  41d688:	tbnz	w8, #0, 41d698 <ascii_strlower_n@plt+0x19238>
  41d68c:	ldr	w8, [sp, #20]
  41d690:	stur	w8, [x29, #-4]
  41d694:	b	41d6e0 <ascii_strlower_n@plt+0x19280>
  41d698:	ldur	x8, [x29, #-16]
  41d69c:	ldr	x8, [x8, #72]
  41d6a0:	cbnz	x8, 41d6ac <ascii_strlower_n@plt+0x1924c>
  41d6a4:	stur	wzr, [x29, #-4]
  41d6a8:	b	41d6e0 <ascii_strlower_n@plt+0x19280>
  41d6ac:	ldur	x8, [x29, #-16]
  41d6b0:	ldr	x8, [x8, #72]
  41d6b4:	ldr	x8, [x8, #8]
  41d6b8:	cmp	x8, #0x1
  41d6bc:	b.eq	41d6c8 <ascii_strlower_n@plt+0x19268>  // b.none
  41d6c0:	stur	wzr, [x29, #-4]
  41d6c4:	b	41d6e0 <ascii_strlower_n@plt+0x19280>
  41d6c8:	ldur	x8, [x29, #-16]
  41d6cc:	ldr	x8, [x8, #72]
  41d6d0:	ldr	x0, [x8, #24]
  41d6d4:	ldr	x1, [sp, #24]
  41d6d8:	bl	41efe0 <ascii_strlower_n@plt+0x1ab80>
  41d6dc:	stur	w0, [x29, #-4]
  41d6e0:	ldur	w0, [x29, #-4]
  41d6e4:	ldp	x29, x30, [sp, #48]
  41d6e8:	add	sp, sp, #0x40
  41d6ec:	ret
  41d6f0:	sub	sp, sp, #0x30
  41d6f4:	stp	x29, x30, [sp, #32]
  41d6f8:	add	x29, sp, #0x20
  41d6fc:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  41d700:	add	x8, x8, #0xb94
  41d704:	add	x2, x8, #0x3
  41d708:	stur	x0, [x29, #-8]
  41d70c:	str	x1, [sp, #16]
  41d710:	str	x2, [sp, #8]
  41d714:	ldur	x8, [x29, #-8]
  41d718:	cmp	x8, #0x0
  41d71c:	cset	w9, ne  // ne = any
  41d720:	mov	w10, #0x1                   	// #1
  41d724:	eor	w9, w9, #0x1
  41d728:	eor	w9, w9, w10
  41d72c:	eor	w9, w9, w10
  41d730:	and	w9, w9, #0x1
  41d734:	mov	w0, w9
  41d738:	sxtw	x8, w0
  41d73c:	cbz	x8, 41d764 <ascii_strlower_n@plt+0x19304>
  41d740:	mov	w8, wzr
  41d744:	mov	w0, w8
  41d748:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  41d74c:	add	x1, x1, #0x6f2
  41d750:	ldr	x2, [sp, #8]
  41d754:	mov	w3, #0x932                 	// #2354
  41d758:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41d75c:	add	x4, x4, #0x9e7
  41d760:	bl	4039d0 <log_assert_failed_realm@plt>
  41d764:	ldur	x8, [x29, #-8]
  41d768:	add	x0, x8, #0x8
  41d76c:	ldr	x2, [sp, #16]
  41d770:	mov	x1, #0x8                   	// #8
  41d774:	bl	404200 <siphash24_compress@plt>
  41d778:	ldur	x0, [x29, #-8]
  41d77c:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  41d780:	ldur	x8, [x29, #-8]
  41d784:	ldr	x1, [x8, #8]
  41d788:	ldr	x2, [sp, #16]
  41d78c:	bl	404200 <siphash24_compress@plt>
  41d790:	ldp	x29, x30, [sp, #32]
  41d794:	add	sp, sp, #0x30
  41d798:	ret
  41d79c:	sub	sp, sp, #0x60
  41d7a0:	stp	x29, x30, [sp, #80]
  41d7a4:	add	x29, sp, #0x50
  41d7a8:	stur	x0, [x29, #-16]
  41d7ac:	stur	x1, [x29, #-24]
  41d7b0:	ldur	x8, [x29, #-16]
  41d7b4:	ldr	x8, [x8, #8]
  41d7b8:	str	x8, [sp, #40]
  41d7bc:	ldur	x8, [x29, #-24]
  41d7c0:	ldr	x8, [x8, #8]
  41d7c4:	str	x8, [sp, #32]
  41d7c8:	ldr	x8, [sp, #40]
  41d7cc:	ldr	x9, [sp, #32]
  41d7d0:	cmp	x8, x9
  41d7d4:	b.cs	41d7e4 <ascii_strlower_n@plt+0x19384>  // b.hs, b.nlast
  41d7d8:	mov	w8, #0xffffffff            	// #-1
  41d7dc:	str	w8, [sp, #24]
  41d7e0:	b	41d800 <ascii_strlower_n@plt+0x193a0>
  41d7e4:	ldr	x8, [sp, #40]
  41d7e8:	ldr	x9, [sp, #32]
  41d7ec:	mov	w10, wzr
  41d7f0:	mov	w11, #0x1                   	// #1
  41d7f4:	cmp	x8, x9
  41d7f8:	csel	w10, w11, w10, hi  // hi = pmore
  41d7fc:	str	w10, [sp, #24]
  41d800:	ldr	w8, [sp, #24]
  41d804:	str	w8, [sp, #28]
  41d808:	ldr	w8, [sp, #28]
  41d80c:	stur	w8, [x29, #-28]
  41d810:	ldur	w8, [x29, #-28]
  41d814:	cbz	w8, 41d824 <ascii_strlower_n@plt+0x193c4>
  41d818:	ldur	w8, [x29, #-28]
  41d81c:	stur	w8, [x29, #-4]
  41d820:	b	41d85c <ascii_strlower_n@plt+0x193fc>
  41d824:	ldur	x0, [x29, #-16]
  41d828:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  41d82c:	ldur	x8, [x29, #-24]
  41d830:	str	x0, [sp, #16]
  41d834:	mov	x0, x8
  41d838:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  41d83c:	ldur	x8, [x29, #-16]
  41d840:	ldr	x2, [x8, #8]
  41d844:	ldr	x1, [sp, #16]
  41d848:	str	x0, [sp, #8]
  41d84c:	mov	x0, x1
  41d850:	ldr	x1, [sp, #8]
  41d854:	bl	404210 <memcmp@plt>
  41d858:	stur	w0, [x29, #-4]
  41d85c:	ldur	w0, [x29, #-4]
  41d860:	ldp	x29, x30, [sp, #80]
  41d864:	add	sp, sp, #0x60
  41d868:	ret
  41d86c:	sub	sp, sp, #0x10
  41d870:	str	w0, [sp, #4]
  41d874:	ldr	w8, [sp, #4]
  41d878:	cmp	w8, #0x0
  41d87c:	cset	w8, lt  // lt = tstop
  41d880:	tbnz	w8, #0, 41d890 <ascii_strlower_n@plt+0x19430>
  41d884:	ldr	w8, [sp, #4]
  41d888:	cmp	w8, #0x18
  41d88c:	b.lt	41d89c <ascii_strlower_n@plt+0x1943c>  // b.tstop
  41d890:	mov	x8, xzr
  41d894:	str	x8, [sp, #8]
  41d898:	b	41d8bc <ascii_strlower_n@plt+0x1945c>
  41d89c:	ldrsw	x8, [sp, #4]
  41d8a0:	mov	x9, #0x8                   	// #8
  41d8a4:	mul	x8, x9, x8
  41d8a8:	adrp	x9, 44e000 <ascii_strlower_n@plt+0x49ba0>
  41d8ac:	add	x9, x9, #0x338
  41d8b0:	add	x8, x9, x8
  41d8b4:	ldr	x8, [x8]
  41d8b8:	str	x8, [sp, #8]
  41d8bc:	ldr	x0, [sp, #8]
  41d8c0:	add	sp, sp, #0x10
  41d8c4:	ret
  41d8c8:	sub	sp, sp, #0x20
  41d8cc:	stp	x29, x30, [sp, #16]
  41d8d0:	add	x29, sp, #0x10
  41d8d4:	adrp	x8, 44e000 <ascii_strlower_n@plt+0x49ba0>
  41d8d8:	add	x8, x8, #0x338
  41d8dc:	mov	x1, #0x18                  	// #24
  41d8e0:	str	x0, [sp, #8]
  41d8e4:	ldr	x2, [sp, #8]
  41d8e8:	mov	x0, x8
  41d8ec:	bl	404220 <string_table_lookup@plt>
  41d8f0:	ldp	x29, x30, [sp, #16]
  41d8f4:	add	sp, sp, #0x20
  41d8f8:	ret
  41d8fc:	sub	sp, sp, #0x10
  41d900:	str	w0, [sp, #4]
  41d904:	ldr	w8, [sp, #4]
  41d908:	cmp	w8, #0x0
  41d90c:	cset	w8, lt  // lt = tstop
  41d910:	tbnz	w8, #0, 41d920 <ascii_strlower_n@plt+0x194c0>
  41d914:	ldr	w8, [sp, #4]
  41d918:	cmp	w8, #0x3
  41d91c:	b.lt	41d92c <ascii_strlower_n@plt+0x194cc>  // b.tstop
  41d920:	mov	x8, xzr
  41d924:	str	x8, [sp, #8]
  41d928:	b	41d94c <ascii_strlower_n@plt+0x194ec>
  41d92c:	ldrsw	x8, [sp, #4]
  41d930:	mov	x9, #0x8                   	// #8
  41d934:	mul	x8, x9, x8
  41d938:	adrp	x9, 44e000 <ascii_strlower_n@plt+0x49ba0>
  41d93c:	add	x9, x9, #0x3f8
  41d940:	add	x8, x9, x8
  41d944:	ldr	x8, [x8]
  41d948:	str	x8, [sp, #8]
  41d94c:	ldr	x0, [sp, #8]
  41d950:	add	sp, sp, #0x10
  41d954:	ret
  41d958:	sub	sp, sp, #0x20
  41d95c:	stp	x29, x30, [sp, #16]
  41d960:	add	x29, sp, #0x10
  41d964:	adrp	x8, 44e000 <ascii_strlower_n@plt+0x49ba0>
  41d968:	add	x8, x8, #0x3f8
  41d96c:	mov	x1, #0x3                   	// #3
  41d970:	str	x0, [sp, #8]
  41d974:	ldr	x2, [sp, #8]
  41d978:	mov	x0, x8
  41d97c:	bl	404220 <string_table_lookup@plt>
  41d980:	ldp	x29, x30, [sp, #16]
  41d984:	add	sp, sp, #0x20
  41d988:	ret
  41d98c:	sub	sp, sp, #0x10
  41d990:	strh	w0, [sp, #14]
  41d994:	ldrh	w8, [sp, #14]
  41d998:	asr	w8, w8, #8
  41d99c:	and	w8, w8, #0xff
  41d9a0:	ldrh	w9, [sp, #14]
  41d9a4:	and	w9, w9, #0xff
  41d9a8:	orr	w8, w8, w9, lsl #8
  41d9ac:	mov	w0, w8
  41d9b0:	add	sp, sp, #0x10
  41d9b4:	ret
  41d9b8:	sub	sp, sp, #0x20
  41d9bc:	stp	x29, x30, [sp, #16]
  41d9c0:	add	x29, sp, #0x10
  41d9c4:	str	x0, [sp, #8]
  41d9c8:	ldr	x0, [sp, #8]
  41d9cc:	mov	w8, #0x1                   	// #1
  41d9d0:	and	w1, w8, #0x1
  41d9d4:	bl	41da14 <ascii_strlower_n@plt+0x195b4>
  41d9d8:	ldp	x29, x30, [sp, #16]
  41d9dc:	add	sp, sp, #0x20
  41d9e0:	ret
  41d9e4:	sub	sp, sp, #0x20
  41d9e8:	stp	x29, x30, [sp, #16]
  41d9ec:	add	x29, sp, #0x10
  41d9f0:	mov	x8, xzr
  41d9f4:	str	x0, [sp, #8]
  41d9f8:	ldr	x0, [sp, #8]
  41d9fc:	mov	x1, x8
  41da00:	mov	x2, x8
  41da04:	bl	404230 <internal_hashmap_free@plt>
  41da08:	ldp	x29, x30, [sp, #16]
  41da0c:	add	sp, sp, #0x20
  41da10:	ret
  41da14:	sub	sp, sp, #0x30
  41da18:	stp	x29, x30, [sp, #32]
  41da1c:	add	x29, sp, #0x20
  41da20:	mov	x8, xzr
  41da24:	add	x2, sp, #0x8
  41da28:	stur	x0, [x29, #-8]
  41da2c:	mov	w9, #0x1                   	// #1
  41da30:	and	w9, w1, w9
  41da34:	sturb	w9, [x29, #-9]
  41da38:	str	x8, [sp, #8]
  41da3c:	ldur	x0, [x29, #-8]
  41da40:	ldurb	w9, [x29, #-9]
  41da44:	and	w1, w9, #0x1
  41da48:	bl	404240 <internal_hashmap_first_key_and_value@plt>
  41da4c:	ldr	x8, [sp, #8]
  41da50:	mov	x0, x8
  41da54:	ldp	x29, x30, [sp, #32]
  41da58:	add	sp, sp, #0x30
  41da5c:	ret
  41da60:	sub	sp, sp, #0x30
  41da64:	stp	x29, x30, [sp, #32]
  41da68:	add	x29, sp, #0x20
  41da6c:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41da70:	add	x8, x8, #0x626
  41da74:	add	x2, x8, #0x3
  41da78:	stur	x0, [x29, #-8]
  41da7c:	str	x2, [sp, #16]
  41da80:	ldur	x8, [x29, #-8]
  41da84:	cmp	x8, #0x0
  41da88:	cset	w9, ne  // ne = any
  41da8c:	mov	w10, #0x1                   	// #1
  41da90:	eor	w9, w9, #0x1
  41da94:	eor	w9, w9, w10
  41da98:	eor	w9, w9, w10
  41da9c:	and	w9, w9, #0x1
  41daa0:	mov	w0, w9
  41daa4:	sxtw	x8, w0
  41daa8:	cbz	x8, 41dad0 <ascii_strlower_n@plt+0x19670>
  41daac:	mov	w8, wzr
  41dab0:	mov	w0, w8
  41dab4:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41dab8:	add	x1, x1, #0xc51
  41dabc:	ldr	x2, [sp, #16]
  41dac0:	mov	w3, #0x127                 	// #295
  41dac4:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41dac8:	add	x4, x4, #0x64b
  41dacc:	bl	4039d0 <log_assert_failed_realm@plt>
  41dad0:	ldur	x8, [x29, #-8]
  41dad4:	ldr	x8, [x8, #32]
  41dad8:	cbz	x8, 41daec <ascii_strlower_n@plt+0x1968c>
  41dadc:	ldur	x8, [x29, #-8]
  41dae0:	ldr	x8, [x8, #32]
  41dae4:	str	x8, [sp, #8]
  41dae8:	b	41daf4 <ascii_strlower_n@plt+0x19694>
  41daec:	mov	x8, #0xffff                	// #65535
  41daf0:	str	x8, [sp, #8]
  41daf4:	ldr	x8, [sp, #8]
  41daf8:	mov	x0, x8
  41dafc:	ldp	x29, x30, [sp, #32]
  41db00:	add	sp, sp, #0x30
  41db04:	ret
  41db08:	sub	sp, sp, #0x20
  41db0c:	stp	x29, x30, [sp, #16]
  41db10:	add	x29, sp, #0x10
  41db14:	stur	w0, [x29, #-4]
  41db18:	ldur	w0, [x29, #-4]
  41db1c:	bl	41db2c <ascii_strlower_n@plt+0x196cc>
  41db20:	ldp	x29, x30, [sp, #16]
  41db24:	add	sp, sp, #0x20
  41db28:	ret
  41db2c:	sub	sp, sp, #0x10
  41db30:	str	w0, [sp, #12]
  41db34:	ldr	w8, [sp, #12]
  41db38:	and	w8, w8, #0xff000000
  41db3c:	ldr	w9, [sp, #12]
  41db40:	and	w9, w9, #0xff0000
  41db44:	lsr	w9, w9, #8
  41db48:	orr	w8, w9, w8, lsr #24
  41db4c:	ldr	w9, [sp, #12]
  41db50:	and	w9, w9, #0xff00
  41db54:	orr	w8, w8, w9, lsl #8
  41db58:	ldr	w9, [sp, #12]
  41db5c:	and	w9, w9, #0xff
  41db60:	orr	w0, w8, w9, lsl #24
  41db64:	add	sp, sp, #0x10
  41db68:	ret
  41db6c:	sub	sp, sp, #0x60
  41db70:	stp	x29, x30, [sp, #80]
  41db74:	add	x29, sp, #0x50
  41db78:	adrp	x8, 430000 <ascii_strlower_n@plt+0x2bba0>
  41db7c:	add	x8, x8, #0xb94
  41db80:	add	x8, x8, #0x3
  41db84:	adrp	x9, 431000 <ascii_strlower_n@plt+0x2cba0>
  41db88:	add	x9, x9, #0x70a
  41db8c:	stur	x0, [x29, #-16]
  41db90:	sturb	w1, [x29, #-17]
  41db94:	sturb	w2, [x29, #-18]
  41db98:	stur	x3, [x29, #-32]
  41db9c:	str	x4, [sp, #40]
  41dba0:	str	x8, [sp, #16]
  41dba4:	str	x9, [sp, #8]
  41dba8:	ldur	x8, [x29, #-16]
  41dbac:	cmp	x8, #0x0
  41dbb0:	cset	w9, ne  // ne = any
  41dbb4:	mov	w10, #0x1                   	// #1
  41dbb8:	eor	w9, w9, #0x1
  41dbbc:	eor	w9, w9, w10
  41dbc0:	eor	w9, w9, w10
  41dbc4:	and	w9, w9, #0x1
  41dbc8:	mov	w0, w9
  41dbcc:	sxtw	x8, w0
  41dbd0:	cbz	x8, 41dbf4 <ascii_strlower_n@plt+0x19794>
  41dbd4:	mov	w8, wzr
  41dbd8:	mov	w0, w8
  41dbdc:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41dbe0:	add	x1, x1, #0xc51
  41dbe4:	ldr	x2, [sp, #16]
  41dbe8:	mov	w3, #0x26d                 	// #621
  41dbec:	ldr	x4, [sp, #8]
  41dbf0:	bl	4039d0 <log_assert_failed_realm@plt>
  41dbf4:	ldur	x8, [x29, #-32]
  41dbf8:	cmp	x8, #0x0
  41dbfc:	cset	w9, ne  // ne = any
  41dc00:	mov	w10, #0x1                   	// #1
  41dc04:	eor	w9, w9, #0x1
  41dc08:	eor	w9, w9, w10
  41dc0c:	eor	w9, w9, w10
  41dc10:	and	w9, w9, #0x1
  41dc14:	mov	w0, w9
  41dc18:	sxtw	x8, w0
  41dc1c:	cbz	x8, 41dc40 <ascii_strlower_n@plt+0x197e0>
  41dc20:	mov	w8, wzr
  41dc24:	mov	w0, w8
  41dc28:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41dc2c:	add	x1, x1, #0x766
  41dc30:	ldr	x2, [sp, #16]
  41dc34:	mov	w3, #0x26e                 	// #622
  41dc38:	ldr	x4, [sp, #8]
  41dc3c:	bl	4039d0 <log_assert_failed_realm@plt>
  41dc40:	ldurb	w8, [x29, #-18]
  41dc44:	cmp	w8, #0x0
  41dc48:	cset	w8, gt
  41dc4c:	mov	w9, #0x1                   	// #1
  41dc50:	eor	w8, w8, #0x1
  41dc54:	eor	w8, w8, w9
  41dc58:	eor	w8, w8, w9
  41dc5c:	and	w8, w8, #0x1
  41dc60:	mov	w0, w8
  41dc64:	sxtw	x10, w0
  41dc68:	cbz	x10, 41dc8c <ascii_strlower_n@plt+0x1982c>
  41dc6c:	mov	w8, wzr
  41dc70:	mov	w0, w8
  41dc74:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41dc78:	add	x1, x1, #0x76c
  41dc7c:	ldr	x2, [sp, #16]
  41dc80:	mov	w3, #0x26f                 	// #623
  41dc84:	ldr	x4, [sp, #8]
  41dc88:	bl	4039d0 <log_assert_failed_realm@plt>
  41dc8c:	ldur	x8, [x29, #-16]
  41dc90:	ldr	x8, [x8, #8]
  41dc94:	str	x8, [sp, #32]
  41dc98:	ldur	x0, [x29, #-16]
  41dc9c:	ldurb	w1, [x29, #-17]
  41dca0:	mov	x8, xzr
  41dca4:	mov	x2, x8
  41dca8:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  41dcac:	str	w0, [sp, #28]
  41dcb0:	ldr	w9, [sp, #28]
  41dcb4:	cmp	w9, #0x0
  41dcb8:	cset	w9, ge  // ge = tcont
  41dcbc:	tbnz	w9, #0, 41dcc4 <ascii_strlower_n@plt+0x19864>
  41dcc0:	b	41dd40 <ascii_strlower_n@plt+0x198e0>
  41dcc4:	ldur	x0, [x29, #-16]
  41dcc8:	ldurb	w1, [x29, #-18]
  41dccc:	mov	x8, xzr
  41dcd0:	mov	x2, x8
  41dcd4:	bl	4172ac <ascii_strlower_n@plt+0x12e4c>
  41dcd8:	str	w0, [sp, #28]
  41dcdc:	ldr	w9, [sp, #28]
  41dce0:	cmp	w9, #0x0
  41dce4:	cset	w9, ge  // ge = tcont
  41dce8:	tbnz	w9, #0, 41dcf0 <ascii_strlower_n@plt+0x19890>
  41dcec:	b	41dd40 <ascii_strlower_n@plt+0x198e0>
  41dcf0:	ldur	x0, [x29, #-16]
  41dcf4:	ldur	x1, [x29, #-32]
  41dcf8:	ldurb	w8, [x29, #-18]
  41dcfc:	mov	w2, w8
  41dd00:	mov	x9, xzr
  41dd04:	mov	x3, x9
  41dd08:	bl	416ed8 <ascii_strlower_n@plt+0x12a78>
  41dd0c:	str	w0, [sp, #28]
  41dd10:	ldr	w8, [sp, #28]
  41dd14:	cmp	w8, #0x0
  41dd18:	cset	w8, ge  // ge = tcont
  41dd1c:	tbnz	w8, #0, 41dd24 <ascii_strlower_n@plt+0x198c4>
  41dd20:	b	41dd40 <ascii_strlower_n@plt+0x198e0>
  41dd24:	ldr	x8, [sp, #40]
  41dd28:	cbz	x8, 41dd38 <ascii_strlower_n@plt+0x198d8>
  41dd2c:	ldr	x8, [sp, #32]
  41dd30:	ldr	x9, [sp, #40]
  41dd34:	str	x8, [x9]
  41dd38:	stur	wzr, [x29, #-4]
  41dd3c:	b	41dd54 <ascii_strlower_n@plt+0x198f4>
  41dd40:	ldur	x0, [x29, #-16]
  41dd44:	ldr	x1, [sp, #32]
  41dd48:	bl	416d58 <ascii_strlower_n@plt+0x128f8>
  41dd4c:	ldr	w8, [sp, #28]
  41dd50:	stur	w8, [x29, #-4]
  41dd54:	ldur	w0, [x29, #-4]
  41dd58:	ldp	x29, x30, [sp, #80]
  41dd5c:	add	sp, sp, #0x60
  41dd60:	ret
  41dd64:	sub	sp, sp, #0x80
  41dd68:	stp	x29, x30, [sp, #112]
  41dd6c:	add	x29, sp, #0x70
  41dd70:	mov	w8, #0x0                   	// #0
  41dd74:	adrp	x9, 430000 <ascii_strlower_n@plt+0x2bba0>
  41dd78:	add	x9, x9, #0xb94
  41dd7c:	add	x9, x9, #0x3
  41dd80:	stur	x0, [x29, #-16]
  41dd84:	stur	x1, [x29, #-24]
  41dd88:	stur	x2, [x29, #-32]
  41dd8c:	sturb	w8, [x29, #-49]
  41dd90:	strb	w8, [sp, #55]
  41dd94:	str	x9, [sp, #8]
  41dd98:	ldur	x8, [x29, #-16]
  41dd9c:	cmp	x8, #0x0
  41dda0:	cset	w9, ne  // ne = any
  41dda4:	mov	w10, #0x1                   	// #1
  41dda8:	eor	w9, w9, #0x1
  41ddac:	eor	w9, w9, w10
  41ddb0:	eor	w9, w9, w10
  41ddb4:	and	w9, w9, #0x1
  41ddb8:	mov	w0, w9
  41ddbc:	sxtw	x8, w0
  41ddc0:	cbz	x8, 41dde8 <ascii_strlower_n@plt+0x19988>
  41ddc4:	mov	w8, wzr
  41ddc8:	mov	w0, w8
  41ddcc:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41ddd0:	add	x1, x1, #0xc51
  41ddd4:	ldr	x2, [sp, #8]
  41ddd8:	mov	w3, #0x5c8                 	// #1480
  41dddc:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41dde0:	add	x4, x4, #0x7c4
  41dde4:	bl	4039d0 <log_assert_failed_realm@plt>
  41dde8:	ldur	x8, [x29, #-24]
  41ddec:	cmp	x8, #0x0
  41ddf0:	cset	w9, ne  // ne = any
  41ddf4:	mov	w10, #0x1                   	// #1
  41ddf8:	eor	w9, w9, #0x1
  41ddfc:	eor	w9, w9, w10
  41de00:	eor	w9, w9, w10
  41de04:	and	w9, w9, #0x1
  41de08:	mov	w0, w9
  41de0c:	sxtw	x8, w0
  41de10:	cbz	x8, 41de38 <ascii_strlower_n@plt+0x199d8>
  41de14:	mov	w8, wzr
  41de18:	mov	w0, w8
  41de1c:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41de20:	add	x1, x1, #0x766
  41de24:	ldr	x2, [sp, #8]
  41de28:	mov	w3, #0x5c9                 	// #1481
  41de2c:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41de30:	add	x4, x4, #0x7c4
  41de34:	bl	4039d0 <log_assert_failed_realm@plt>
  41de38:	ldur	x8, [x29, #-16]
  41de3c:	str	x8, [sp, #32]
  41de40:	ldur	x8, [x29, #-16]
  41de44:	ldr	x8, [x8, #24]
  41de48:	str	x8, [sp, #40]
  41de4c:	ldur	x0, [x29, #-24]
  41de50:	bl	404250 <bitmap_ensure_allocated@plt>
  41de54:	str	w0, [sp, #28]
  41de58:	ldr	w8, [sp, #28]
  41de5c:	cmp	w8, #0x0
  41de60:	cset	w8, ge  // ge = tcont
  41de64:	tbnz	w8, #0, 41de7c <ascii_strlower_n@plt+0x19a1c>
  41de68:	ldr	w8, [sp, #28]
  41de6c:	stur	w8, [x29, #-4]
  41de70:	mov	w8, #0x1                   	// #1
  41de74:	str	w8, [sp, #24]
  41de78:	b	41e0a4 <ascii_strlower_n@plt+0x19c44>
  41de7c:	ldur	x0, [x29, #-16]
  41de80:	sub	x1, x29, #0x21
  41de84:	mov	x8, xzr
  41de88:	mov	x2, x8
  41de8c:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41de90:	str	w0, [sp, #28]
  41de94:	ldr	w9, [sp, #28]
  41de98:	cmp	w9, #0x0
  41de9c:	cset	w9, ge  // ge = tcont
  41dea0:	tbnz	w9, #0, 41deb8 <ascii_strlower_n@plt+0x19a58>
  41dea4:	ldr	w8, [sp, #28]
  41dea8:	stur	w8, [x29, #-4]
  41deac:	mov	w8, #0x1                   	// #1
  41deb0:	str	w8, [sp, #24]
  41deb4:	b	41e0a4 <ascii_strlower_n@plt+0x19c44>
  41deb8:	ldur	x0, [x29, #-16]
  41debc:	sub	x1, x29, #0x22
  41dec0:	mov	x8, xzr
  41dec4:	mov	x2, x8
  41dec8:	bl	41a0dc <ascii_strlower_n@plt+0x15c7c>
  41decc:	str	w0, [sp, #28]
  41ded0:	ldr	w9, [sp, #28]
  41ded4:	cmp	w9, #0x0
  41ded8:	cset	w9, ge  // ge = tcont
  41dedc:	tbnz	w9, #0, 41def4 <ascii_strlower_n@plt+0x19a94>
  41dee0:	ldr	w8, [sp, #28]
  41dee4:	stur	w8, [x29, #-4]
  41dee8:	mov	w8, #0x1                   	// #1
  41deec:	str	w8, [sp, #24]
  41def0:	b	41e0a4 <ascii_strlower_n@plt+0x19c44>
  41def4:	ldurb	w8, [x29, #-34]
  41def8:	cbz	w8, 41df08 <ascii_strlower_n@plt+0x19aa8>
  41defc:	ldurb	w8, [x29, #-34]
  41df00:	cmp	w8, #0x20
  41df04:	b.le	41df1c <ascii_strlower_n@plt+0x19abc>
  41df08:	mov	w8, #0xffffffb6            	// #-74
  41df0c:	stur	w8, [x29, #-4]
  41df10:	mov	w8, #0x1                   	// #1
  41df14:	str	w8, [sp, #24]
  41df18:	b	41e0a4 <ascii_strlower_n@plt+0x19c44>
  41df1c:	ldur	x0, [x29, #-16]
  41df20:	ldurb	w8, [x29, #-34]
  41df24:	mov	w1, w8
  41df28:	sub	x2, x29, #0x30
  41df2c:	mov	x9, xzr
  41df30:	mov	x3, x9
  41df34:	bl	419d78 <ascii_strlower_n@plt+0x15918>
  41df38:	str	w0, [sp, #28]
  41df3c:	ldr	w8, [sp, #28]
  41df40:	cmp	w8, #0x0
  41df44:	cset	w8, ge  // ge = tcont
  41df48:	tbnz	w8, #0, 41df60 <ascii_strlower_n@plt+0x19b00>
  41df4c:	ldr	w8, [sp, #28]
  41df50:	stur	w8, [x29, #-4]
  41df54:	mov	w8, #0x1                   	// #1
  41df58:	str	w8, [sp, #24]
  41df5c:	b	41e0a4 <ascii_strlower_n@plt+0x19c44>
  41df60:	str	wzr, [sp, #56]
  41df64:	ldr	w8, [sp, #56]
  41df68:	ldurb	w9, [x29, #-34]
  41df6c:	cmp	w8, w9
  41df70:	b.cs	41e060 <ascii_strlower_n@plt+0x19c00>  // b.hs, b.nlast
  41df74:	mov	w8, #0x80                  	// #128
  41df78:	strb	w8, [sp, #23]
  41df7c:	ldur	x9, [x29, #-48]
  41df80:	ldr	w8, [sp, #56]
  41df84:	mov	w10, w8
  41df88:	add	x9, x9, x10
  41df8c:	ldrb	w8, [x9]
  41df90:	cbnz	w8, 41dfac <ascii_strlower_n@plt+0x19b4c>
  41df94:	mov	w8, #0x0                   	// #0
  41df98:	strb	w8, [sp, #55]
  41df9c:	ldurb	w8, [x29, #-49]
  41dfa0:	add	w8, w8, #0x8
  41dfa4:	sturb	w8, [x29, #-49]
  41dfa8:	b	41e050 <ascii_strlower_n@plt+0x19bf0>
  41dfac:	mov	w8, #0x1                   	// #1
  41dfb0:	strb	w8, [sp, #55]
  41dfb4:	ldrb	w8, [sp, #23]
  41dfb8:	cbz	w8, 41e050 <ascii_strlower_n@plt+0x19bf0>
  41dfbc:	ldur	x8, [x29, #-48]
  41dfc0:	ldr	w9, [sp, #56]
  41dfc4:	mov	w10, w9
  41dfc8:	ldrb	w9, [x8, x10]
  41dfcc:	ldrb	w11, [sp, #23]
  41dfd0:	and	w9, w9, w11
  41dfd4:	cbz	w9, 41e034 <ascii_strlower_n@plt+0x19bd4>
  41dfd8:	ldurb	w8, [x29, #-33]
  41dfdc:	ldurb	w9, [x29, #-49]
  41dfe0:	orr	w8, w9, w8, lsl #8
  41dfe4:	strh	w8, [sp, #20]
  41dfe8:	ldrh	w0, [sp, #20]
  41dfec:	bl	42ba48 <ascii_strlower_n@plt+0x275e8>
  41dff0:	tbnz	w0, #0, 41dff8 <ascii_strlower_n@plt+0x19b98>
  41dff4:	b	41dffc <ascii_strlower_n@plt+0x19b9c>
  41dff8:	b	41e034 <ascii_strlower_n@plt+0x19bd4>
  41dffc:	ldur	x8, [x29, #-24]
  41e000:	ldr	x0, [x8]
  41e004:	ldrh	w1, [sp, #20]
  41e008:	bl	404260 <bitmap_set@plt>
  41e00c:	str	w0, [sp, #28]
  41e010:	ldr	w9, [sp, #28]
  41e014:	cmp	w9, #0x0
  41e018:	cset	w9, ge  // ge = tcont
  41e01c:	tbnz	w9, #0, 41e034 <ascii_strlower_n@plt+0x19bd4>
  41e020:	ldr	w8, [sp, #28]
  41e024:	stur	w8, [x29, #-4]
  41e028:	mov	w8, #0x1                   	// #1
  41e02c:	str	w8, [sp, #24]
  41e030:	b	41e0a4 <ascii_strlower_n@plt+0x19c44>
  41e034:	ldurb	w8, [x29, #-49]
  41e038:	add	w8, w8, #0x1
  41e03c:	sturb	w8, [x29, #-49]
  41e040:	ldrb	w8, [sp, #23]
  41e044:	asr	w8, w8, #1
  41e048:	strb	w8, [sp, #23]
  41e04c:	b	41dfb4 <ascii_strlower_n@plt+0x19b54>
  41e050:	ldr	w8, [sp, #56]
  41e054:	add	w8, w8, #0x1
  41e058:	str	w8, [sp, #56]
  41e05c:	b	41df64 <ascii_strlower_n@plt+0x19b04>
  41e060:	ldrb	w8, [sp, #55]
  41e064:	tbnz	w8, #0, 41e07c <ascii_strlower_n@plt+0x19c1c>
  41e068:	mov	w8, #0xffffffb6            	// #-74
  41e06c:	stur	w8, [x29, #-4]
  41e070:	mov	w8, #0x1                   	// #1
  41e074:	str	w8, [sp, #24]
  41e078:	b	41e0a4 <ascii_strlower_n@plt+0x19c44>
  41e07c:	ldur	x8, [x29, #-32]
  41e080:	cbz	x8, 41e090 <ascii_strlower_n@plt+0x19c30>
  41e084:	ldr	x8, [sp, #40]
  41e088:	ldur	x9, [x29, #-32]
  41e08c:	str	x8, [x9]
  41e090:	mov	x8, xzr
  41e094:	str	x8, [sp, #32]
  41e098:	stur	wzr, [x29, #-4]
  41e09c:	mov	w8, #0x1                   	// #1
  41e0a0:	str	w8, [sp, #24]
  41e0a4:	add	x0, sp, #0x20
  41e0a8:	bl	41a58c <ascii_strlower_n@plt+0x1612c>
  41e0ac:	ldur	w0, [x29, #-4]
  41e0b0:	ldp	x29, x30, [sp, #112]
  41e0b4:	add	sp, sp, #0x80
  41e0b8:	ret
  41e0bc:	sub	sp, sp, #0x20
  41e0c0:	stp	x29, x30, [sp, #16]
  41e0c4:	add	x29, sp, #0x10
  41e0c8:	str	x0, [sp, #8]
  41e0cc:	ldr	x8, [sp, #8]
  41e0d0:	ldr	x8, [x8]
  41e0d4:	cbz	x8, 41e0e4 <ascii_strlower_n@plt+0x19c84>
  41e0d8:	ldr	x8, [sp, #8]
  41e0dc:	ldr	x0, [x8]
  41e0e0:	bl	41e11c <ascii_strlower_n@plt+0x19cbc>
  41e0e4:	ldp	x29, x30, [sp, #16]
  41e0e8:	add	sp, sp, #0x20
  41e0ec:	ret
  41e0f0:	sub	sp, sp, #0x20
  41e0f4:	stp	x29, x30, [sp, #16]
  41e0f8:	add	x29, sp, #0x10
  41e0fc:	str	x0, [sp, #8]
  41e100:	str	w1, [sp, #4]
  41e104:	ldr	x0, [sp, #8]
  41e108:	ldr	w1, [sp, #4]
  41e10c:	bl	404270 <internal_hashmap_reserve@plt>
  41e110:	ldp	x29, x30, [sp, #16]
  41e114:	add	sp, sp, #0x20
  41e118:	ret
  41e11c:	sub	sp, sp, #0x20
  41e120:	stp	x29, x30, [sp, #16]
  41e124:	add	x29, sp, #0x10
  41e128:	mov	x8, xzr
  41e12c:	str	x0, [sp, #8]
  41e130:	ldr	x0, [sp, #8]
  41e134:	mov	x1, x8
  41e138:	mov	x2, x8
  41e13c:	bl	404230 <internal_hashmap_free@plt>
  41e140:	ldp	x29, x30, [sp, #16]
  41e144:	add	sp, sp, #0x20
  41e148:	ret
  41e14c:	sub	sp, sp, #0x20
  41e150:	stp	x29, x30, [sp, #16]
  41e154:	add	x29, sp, #0x10
  41e158:	str	x0, [sp, #8]
  41e15c:	ldr	x0, [sp, #8]
  41e160:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  41e164:	ldrh	w0, [x0, #6]
  41e168:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  41e16c:	ldr	x8, [sp, #8]
  41e170:	str	w0, [sp, #4]
  41e174:	mov	x0, x8
  41e178:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  41e17c:	ldrh	w0, [x0, #8]
  41e180:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  41e184:	and	w9, w0, #0xffff
  41e188:	ldr	w10, [sp, #4]
  41e18c:	add	w9, w9, w10, uxth
  41e190:	ldr	x0, [sp, #8]
  41e194:	str	w9, [sp]
  41e198:	bl	416370 <ascii_strlower_n@plt+0x11f10>
  41e19c:	ldrh	w0, [x0, #10]
  41e1a0:	bl	416a14 <ascii_strlower_n@plt+0x125b4>
  41e1a4:	ldr	w9, [sp]
  41e1a8:	add	w0, w9, w0, uxth
  41e1ac:	ldp	x29, x30, [sp, #16]
  41e1b0:	add	sp, sp, #0x20
  41e1b4:	ret
  41e1b8:	sub	sp, sp, #0x50
  41e1bc:	stp	x29, x30, [sp, #64]
  41e1c0:	add	x29, sp, #0x40
  41e1c4:	mov	w8, #0x0                   	// #0
  41e1c8:	adrp	x9, 430000 <ascii_strlower_n@plt+0x2bba0>
  41e1cc:	add	x9, x9, #0xb94
  41e1d0:	add	x9, x9, #0x3
  41e1d4:	stur	x0, [x29, #-16]
  41e1d8:	stur	x1, [x29, #-24]
  41e1dc:	strb	w8, [sp, #31]
  41e1e0:	str	x9, [sp]
  41e1e4:	ldur	x8, [x29, #-16]
  41e1e8:	cmp	x8, #0x0
  41e1ec:	cset	w9, ne  // ne = any
  41e1f0:	mov	w10, #0x1                   	// #1
  41e1f4:	eor	w9, w9, #0x1
  41e1f8:	eor	w9, w9, w10
  41e1fc:	eor	w9, w9, w10
  41e200:	and	w9, w9, #0x1
  41e204:	mov	w0, w9
  41e208:	sxtw	x8, w0
  41e20c:	cbz	x8, 41e234 <ascii_strlower_n@plt+0x19dd4>
  41e210:	mov	w8, wzr
  41e214:	mov	w0, w8
  41e218:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e21c:	add	x1, x1, #0x20f
  41e220:	ldr	x2, [sp]
  41e224:	mov	w3, #0x82b                 	// #2091
  41e228:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e22c:	add	x4, x4, #0x92b
  41e230:	bl	4039d0 <log_assert_failed_realm@plt>
  41e234:	ldur	x8, [x29, #-16]
  41e238:	ldr	x8, [x8, #8]
  41e23c:	ldrh	w9, [x8, #6]
  41e240:	cmp	w9, #0x29
  41e244:	cset	w9, eq  // eq = none
  41e248:	mov	w10, #0x1                   	// #1
  41e24c:	eor	w9, w9, #0x1
  41e250:	eor	w9, w9, w10
  41e254:	eor	w9, w9, w10
  41e258:	and	w9, w9, #0x1
  41e25c:	mov	w0, w9
  41e260:	sxtw	x8, w0
  41e264:	cbz	x8, 41e28c <ascii_strlower_n@plt+0x19e2c>
  41e268:	mov	w8, wzr
  41e26c:	mov	w0, w8
  41e270:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e274:	add	x1, x1, #0x95b
  41e278:	ldr	x2, [sp]
  41e27c:	mov	w3, #0x82c                 	// #2092
  41e280:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e284:	add	x4, x4, #0x92b
  41e288:	bl	4039d0 <log_assert_failed_realm@plt>
  41e28c:	ldur	x8, [x29, #-16]
  41e290:	ldr	w9, [x8, #24]
  41e294:	lsr	w9, w9, #16
  41e298:	and	w9, w9, #0xff
  41e29c:	cbz	w9, 41e2bc <ascii_strlower_n@plt+0x19e5c>
  41e2a0:	ldur	x8, [x29, #-24]
  41e2a4:	mov	w9, #0x0                   	// #0
  41e2a8:	strb	w9, [x8]
  41e2ac:	mov	w9, #0x1                   	// #1
  41e2b0:	and	w9, w9, #0x1
  41e2b4:	sturb	w9, [x29, #-1]
  41e2b8:	b	41e3f0 <ascii_strlower_n@plt+0x19f90>
  41e2bc:	ldur	x8, [x29, #-16]
  41e2c0:	ldr	x8, [x8, #80]
  41e2c4:	str	x8, [sp, #32]
  41e2c8:	ldur	x8, [x29, #-16]
  41e2cc:	ldr	x8, [x8, #88]
  41e2d0:	str	x8, [sp, #16]
  41e2d4:	ldr	x8, [sp, #16]
  41e2d8:	cmp	x8, #0x0
  41e2dc:	cset	w9, ls  // ls = plast
  41e2e0:	tbnz	w9, #0, 41e3d4 <ascii_strlower_n@plt+0x19f74>
  41e2e4:	ldr	x8, [sp, #16]
  41e2e8:	cmp	x8, #0x4
  41e2ec:	b.cs	41e300 <ascii_strlower_n@plt+0x19ea0>  // b.hs, b.nlast
  41e2f0:	mov	w8, wzr
  41e2f4:	and	w8, w8, #0x1
  41e2f8:	sturb	w8, [x29, #-1]
  41e2fc:	b	41e3f0 <ascii_strlower_n@plt+0x19f90>
  41e300:	ldr	x0, [sp, #32]
  41e304:	bl	41a27c <ascii_strlower_n@plt+0x15e1c>
  41e308:	strh	w0, [sp, #14]
  41e30c:	ldr	x8, [sp, #32]
  41e310:	add	x0, x8, #0x2
  41e314:	bl	41a27c <ascii_strlower_n@plt+0x15e1c>
  41e318:	strh	w0, [sp, #12]
  41e31c:	ldr	x8, [sp, #16]
  41e320:	ldrh	w9, [sp, #12]
  41e324:	add	w9, w9, #0x4
  41e328:	mov	w10, w9
  41e32c:	ubfx	x10, x10, #0, #32
  41e330:	cmp	x8, x10
  41e334:	b.cs	41e348 <ascii_strlower_n@plt+0x19ee8>  // b.hs, b.nlast
  41e338:	mov	w8, wzr
  41e33c:	and	w8, w8, #0x1
  41e340:	sturb	w8, [x29, #-1]
  41e344:	b	41e3f0 <ascii_strlower_n@plt+0x19f90>
  41e348:	mov	w8, #0x0                   	// #0
  41e34c:	strb	w8, [sp, #11]
  41e350:	ldrh	w8, [sp, #14]
  41e354:	subs	w8, w8, #0x5
  41e358:	cmp	w8, #0x2
  41e35c:	cset	w8, ls  // ls = plast
  41e360:	eor	w8, w8, #0x1
  41e364:	tbnz	w8, #0, 41e378 <ascii_strlower_n@plt+0x19f18>
  41e368:	b	41e36c <ascii_strlower_n@plt+0x19f0c>
  41e36c:	mov	w8, #0x1                   	// #1
  41e370:	strb	w8, [sp, #11]
  41e374:	b	41e378 <ascii_strlower_n@plt+0x19f18>
  41e378:	ldrb	w8, [sp, #11]
  41e37c:	and	w8, w8, #0x1
  41e380:	strb	w8, [sp, #10]
  41e384:	ldrb	w8, [sp, #10]
  41e388:	tbnz	w8, #0, 41e390 <ascii_strlower_n@plt+0x19f30>
  41e38c:	b	41e398 <ascii_strlower_n@plt+0x19f38>
  41e390:	mov	w8, #0x1                   	// #1
  41e394:	strb	w8, [sp, #31]
  41e398:	ldrh	w8, [sp, #12]
  41e39c:	add	w8, w8, #0x4
  41e3a0:	ldr	x9, [sp, #32]
  41e3a4:	mov	w10, w8
  41e3a8:	ubfx	x10, x10, #0, #32
  41e3ac:	add	x9, x9, x10
  41e3b0:	str	x9, [sp, #32]
  41e3b4:	ldrh	w8, [sp, #12]
  41e3b8:	add	w8, w8, #0x4
  41e3bc:	mov	w9, w8
  41e3c0:	ubfx	x9, x9, #0, #32
  41e3c4:	ldr	x10, [sp, #16]
  41e3c8:	subs	x9, x10, x9
  41e3cc:	str	x9, [sp, #16]
  41e3d0:	b	41e2d4 <ascii_strlower_n@plt+0x19e74>
  41e3d4:	ldrb	w8, [sp, #31]
  41e3d8:	ldur	x9, [x29, #-24]
  41e3dc:	mov	w10, #0x1                   	// #1
  41e3e0:	and	w8, w8, w10
  41e3e4:	strb	w8, [x9]
  41e3e8:	and	w8, w10, #0x1
  41e3ec:	sturb	w8, [x29, #-1]
  41e3f0:	ldurb	w8, [x29, #-1]
  41e3f4:	and	w0, w8, #0x1
  41e3f8:	ldp	x29, x30, [sp, #64]
  41e3fc:	add	sp, sp, #0x50
  41e400:	ret
  41e404:	sub	sp, sp, #0x20
  41e408:	stp	x29, x30, [sp, #16]
  41e40c:	add	x29, sp, #0x10
  41e410:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e414:	add	x8, x8, #0x979
  41e418:	add	x8, x8, #0x3
  41e41c:	str	x0, [sp, #8]
  41e420:	str	x8, [sp]
  41e424:	ldr	x8, [sp, #8]
  41e428:	cmp	x8, #0x0
  41e42c:	cset	w9, ne  // ne = any
  41e430:	mov	w10, #0x1                   	// #1
  41e434:	eor	w9, w9, #0x1
  41e438:	eor	w9, w9, w10
  41e43c:	eor	w9, w9, w10
  41e440:	and	w9, w9, #0x1
  41e444:	mov	w0, w9
  41e448:	sxtw	x8, w0
  41e44c:	cbz	x8, 41e474 <ascii_strlower_n@plt+0x1a014>
  41e450:	mov	w8, wzr
  41e454:	mov	w0, w8
  41e458:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e45c:	add	x1, x1, #0x20f
  41e460:	ldr	x2, [sp]
  41e464:	mov	w3, #0x10e                 	// #270
  41e468:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e46c:	add	x4, x4, #0x99a
  41e470:	bl	4039d0 <log_assert_failed_realm@plt>
  41e474:	ldr	x8, [sp, #8]
  41e478:	ldr	x8, [x8, #8]
  41e47c:	ldrh	w9, [x8, #6]
  41e480:	cmp	w9, #0x29
  41e484:	cset	w9, eq  // eq = none
  41e488:	mov	w10, #0x1                   	// #1
  41e48c:	eor	w9, w9, #0x1
  41e490:	eor	w9, w9, w10
  41e494:	eor	w9, w9, w10
  41e498:	and	w9, w9, #0x1
  41e49c:	mov	w0, w9
  41e4a0:	sxtw	x8, w0
  41e4a4:	cbz	x8, 41e4cc <ascii_strlower_n@plt+0x1a06c>
  41e4a8:	mov	w8, wzr
  41e4ac:	mov	w0, w8
  41e4b0:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e4b4:	add	x1, x1, #0x95b
  41e4b8:	ldr	x2, [sp]
  41e4bc:	mov	w3, #0x10f                 	// #271
  41e4c0:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e4c4:	add	x4, x4, #0x99a
  41e4c8:	bl	4039d0 <log_assert_failed_realm@plt>
  41e4cc:	ldr	x8, [sp, #8]
  41e4d0:	ldr	w9, [x8, #24]
  41e4d4:	lsr	w9, w9, #16
  41e4d8:	tst	w9, #0xff
  41e4dc:	cset	w9, eq  // eq = none
  41e4e0:	and	w9, w9, #0x1
  41e4e4:	mov	w0, w9
  41e4e8:	ldp	x29, x30, [sp, #16]
  41e4ec:	add	sp, sp, #0x20
  41e4f0:	ret
  41e4f4:	sub	sp, sp, #0x40
  41e4f8:	stp	x29, x30, [sp, #48]
  41e4fc:	add	x29, sp, #0x30
  41e500:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e504:	add	x8, x8, #0xac0
  41e508:	add	x8, x8, #0x3
  41e50c:	sturh	w0, [x29, #-10]
  41e510:	sturh	w1, [x29, #-12]
  41e514:	str	x2, [sp, #24]
  41e518:	str	x8, [sp]
  41e51c:	ldr	x8, [sp, #24]
  41e520:	cmp	x8, #0x0
  41e524:	cset	w9, ne  // ne = any
  41e528:	mov	w10, #0x1                   	// #1
  41e52c:	eor	w9, w9, #0x1
  41e530:	eor	w9, w9, w10
  41e534:	eor	w9, w9, w10
  41e538:	and	w9, w9, #0x1
  41e53c:	mov	w0, w9
  41e540:	sxtw	x8, w0
  41e544:	cbz	x8, 41e56c <ascii_strlower_n@plt+0x1a10c>
  41e548:	mov	w8, wzr
  41e54c:	mov	w0, w8
  41e550:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41e554:	add	x1, x1, #0x923
  41e558:	ldr	x2, [sp]
  41e55c:	mov	w3, #0x17                  	// #23
  41e560:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e564:	add	x4, x4, #0xae1
  41e568:	bl	4039d0 <log_assert_failed_realm@plt>
  41e56c:	ldr	x0, [sp, #24]
  41e570:	bl	403f70 <strlen@plt>
  41e574:	str	x0, [sp, #8]
  41e578:	ldr	x8, [sp, #8]
  41e57c:	add	x8, x8, #0x10
  41e580:	mov	x0, #0x1                   	// #1
  41e584:	add	x1, x8, #0x1
  41e588:	bl	4040d0 <calloc@plt>
  41e58c:	str	x0, [sp, #16]
  41e590:	ldr	x8, [sp, #16]
  41e594:	cbnz	x8, 41e5a4 <ascii_strlower_n@plt+0x1a144>
  41e598:	mov	x8, xzr
  41e59c:	stur	x8, [x29, #-8]
  41e5a0:	b	41e5e0 <ascii_strlower_n@plt+0x1a180>
  41e5a4:	ldr	x8, [sp, #16]
  41e5a8:	mov	w9, #0x1                   	// #1
  41e5ac:	str	w9, [x8]
  41e5b0:	ldurh	w9, [x29, #-10]
  41e5b4:	ldr	x8, [sp, #16]
  41e5b8:	strh	w9, [x8, #4]
  41e5bc:	ldurh	w9, [x29, #-12]
  41e5c0:	ldr	x8, [sp, #16]
  41e5c4:	strh	w9, [x8, #6]
  41e5c8:	ldr	x8, [sp, #16]
  41e5cc:	add	x0, x8, #0x10
  41e5d0:	ldr	x1, [sp, #24]
  41e5d4:	bl	404280 <strcpy@plt>
  41e5d8:	ldr	x8, [sp, #16]
  41e5dc:	stur	x8, [x29, #-8]
  41e5e0:	ldur	x0, [x29, #-8]
  41e5e4:	ldp	x29, x30, [sp, #48]
  41e5e8:	add	sp, sp, #0x40
  41e5ec:	ret
  41e5f0:	sub	sp, sp, #0x70
  41e5f4:	stp	x29, x30, [sp, #96]
  41e5f8:	add	x29, sp, #0x60
  41e5fc:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e600:	add	x8, x8, #0xac0
  41e604:	add	x8, x8, #0x3
  41e608:	adrp	x9, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e60c:	add	x9, x9, #0xb28
  41e610:	stur	x0, [x29, #-16]
  41e614:	stur	x1, [x29, #-24]
  41e618:	str	x8, [sp, #40]
  41e61c:	str	x9, [sp, #32]
  41e620:	ldur	x8, [x29, #-16]
  41e624:	cmp	x8, #0x0
  41e628:	cset	w9, ne  // ne = any
  41e62c:	mov	w10, #0x1                   	// #1
  41e630:	eor	w9, w9, #0x1
  41e634:	eor	w9, w9, w10
  41e638:	eor	w9, w9, w10
  41e63c:	and	w9, w9, #0x1
  41e640:	mov	w0, w9
  41e644:	sxtw	x8, w0
  41e648:	cbz	x8, 41e66c <ascii_strlower_n@plt+0x1a20c>
  41e64c:	mov	w8, wzr
  41e650:	mov	w0, w8
  41e654:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e658:	add	x1, x1, #0x5c2
  41e65c:	ldr	x2, [sp, #40]
  41e660:	mov	w3, #0x2a                  	// #42
  41e664:	ldr	x4, [sp, #32]
  41e668:	bl	4039d0 <log_assert_failed_realm@plt>
  41e66c:	ldur	x8, [x29, #-24]
  41e670:	cmp	x8, #0x0
  41e674:	cset	w9, ne  // ne = any
  41e678:	mov	w10, #0x1                   	// #1
  41e67c:	eor	w9, w9, #0x1
  41e680:	eor	w9, w9, w10
  41e684:	eor	w9, w9, w10
  41e688:	and	w9, w9, #0x1
  41e68c:	mov	w0, w9
  41e690:	sxtw	x8, w0
  41e694:	cbz	x8, 41e6b8 <ascii_strlower_n@plt+0x1a258>
  41e698:	mov	w8, wzr
  41e69c:	mov	w0, w8
  41e6a0:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  41e6a4:	add	x1, x1, #0x840
  41e6a8:	ldr	x2, [sp, #40]
  41e6ac:	mov	w3, #0x2b                  	// #43
  41e6b0:	ldr	x4, [sp, #32]
  41e6b4:	bl	4039d0 <log_assert_failed_realm@plt>
  41e6b8:	mov	w8, #0x0                   	// #0
  41e6bc:	sturb	w8, [x29, #-29]
  41e6c0:	ldur	x9, [x29, #-24]
  41e6c4:	ldr	x9, [x9, #8]
  41e6c8:	ldrh	w8, [x9, #6]
  41e6cc:	cmp	w8, #0x5
  41e6d0:	str	w8, [sp, #28]
  41e6d4:	b.eq	41e6f4 <ascii_strlower_n@plt+0x1a294>  // b.none
  41e6d8:	b	41e6dc <ascii_strlower_n@plt+0x1a27c>
  41e6dc:	ldr	w8, [sp, #28]
  41e6e0:	cmp	w8, #0x27
  41e6e4:	cset	w9, eq  // eq = none
  41e6e8:	eor	w9, w9, #0x1
  41e6ec:	tbnz	w9, #0, 41e700 <ascii_strlower_n@plt+0x1a2a0>
  41e6f0:	b	41e6f4 <ascii_strlower_n@plt+0x1a294>
  41e6f4:	mov	w8, #0x1                   	// #1
  41e6f8:	sturb	w8, [x29, #-29]
  41e6fc:	b	41e700 <ascii_strlower_n@plt+0x1a2a0>
  41e700:	ldurb	w8, [x29, #-29]
  41e704:	mov	w9, #0x1                   	// #1
  41e708:	and	w8, w8, w9
  41e70c:	sturb	w8, [x29, #-30]
  41e710:	ldurb	w8, [x29, #-30]
  41e714:	eor	w8, w8, #0x1
  41e718:	eor	w8, w8, w9
  41e71c:	eor	w8, w8, w9
  41e720:	and	w8, w8, #0x1
  41e724:	mov	w0, w8
  41e728:	sxtw	x10, w0
  41e72c:	cbz	x10, 41e750 <ascii_strlower_n@plt+0x1a2f0>
  41e730:	mov	w8, wzr
  41e734:	mov	w0, w8
  41e738:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e73c:	add	x1, x1, #0xb89
  41e740:	ldr	x2, [sp, #40]
  41e744:	mov	w3, #0x2d                  	// #45
  41e748:	ldr	x4, [sp, #32]
  41e74c:	bl	4039d0 <log_assert_failed_realm@plt>
  41e750:	ldur	x8, [x29, #-24]
  41e754:	ldr	x8, [x8, #8]
  41e758:	ldrh	w9, [x8, #6]
  41e75c:	cmp	w9, #0x5
  41e760:	b.ne	41e788 <ascii_strlower_n@plt+0x1a328>  // b.any
  41e764:	ldur	x8, [x29, #-16]
  41e768:	ldrh	w0, [x8, #4]
  41e76c:	ldur	x8, [x29, #-16]
  41e770:	ldrh	w1, [x8, #6]
  41e774:	ldur	x8, [x29, #-24]
  41e778:	ldr	x2, [x8, #80]
  41e77c:	bl	41e4f4 <ascii_strlower_n@plt+0x1a094>
  41e780:	stur	x0, [x29, #-8]
  41e784:	b	41e848 <ascii_strlower_n@plt+0x1a3e8>
  41e788:	add	x3, sp, #0x30
  41e78c:	mov	x8, xzr
  41e790:	str	x8, [sp, #48]
  41e794:	ldur	x0, [x29, #-16]
  41e798:	str	x3, [sp, #16]
  41e79c:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41e7a0:	ldur	x8, [x29, #-24]
  41e7a4:	ldr	x8, [x8, #8]
  41e7a8:	str	x0, [sp, #8]
  41e7ac:	mov	x0, x8
  41e7b0:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41e7b4:	ldur	x8, [x29, #-24]
  41e7b8:	ldr	x2, [x8, #80]
  41e7bc:	ldr	x1, [sp, #8]
  41e7c0:	str	x0, [sp]
  41e7c4:	mov	x0, x1
  41e7c8:	ldr	x1, [sp]
  41e7cc:	ldr	x3, [sp, #16]
  41e7d0:	bl	404290 <dns_name_change_suffix@plt>
  41e7d4:	stur	w0, [x29, #-28]
  41e7d8:	ldur	w9, [x29, #-28]
  41e7dc:	cmp	w9, #0x0
  41e7e0:	cset	w9, ge  // ge = tcont
  41e7e4:	tbnz	w9, #0, 41e7f4 <ascii_strlower_n@plt+0x1a394>
  41e7e8:	mov	x8, xzr
  41e7ec:	stur	x8, [x29, #-8]
  41e7f0:	b	41e848 <ascii_strlower_n@plt+0x1a3e8>
  41e7f4:	ldur	w8, [x29, #-28]
  41e7f8:	cbnz	w8, 41e80c <ascii_strlower_n@plt+0x1a3ac>
  41e7fc:	ldur	x0, [x29, #-16]
  41e800:	bl	41e8dc <ascii_strlower_n@plt+0x1a47c>
  41e804:	stur	x0, [x29, #-8]
  41e808:	b	41e848 <ascii_strlower_n@plt+0x1a3e8>
  41e80c:	ldur	x8, [x29, #-16]
  41e810:	ldrh	w0, [x8, #4]
  41e814:	ldur	x8, [x29, #-16]
  41e818:	ldrh	w1, [x8, #6]
  41e81c:	ldr	x2, [sp, #48]
  41e820:	bl	41e9e4 <ascii_strlower_n@plt+0x1a584>
  41e824:	stur	x0, [x29, #-40]
  41e828:	ldur	x8, [x29, #-40]
  41e82c:	cbnz	x8, 41e840 <ascii_strlower_n@plt+0x1a3e0>
  41e830:	ldr	x0, [sp, #48]
  41e834:	bl	41eac8 <ascii_strlower_n@plt+0x1a668>
  41e838:	stur	x0, [x29, #-8]
  41e83c:	b	41e848 <ascii_strlower_n@plt+0x1a3e8>
  41e840:	ldur	x8, [x29, #-40]
  41e844:	stur	x8, [x29, #-8]
  41e848:	ldur	x0, [x29, #-8]
  41e84c:	ldp	x29, x30, [sp, #96]
  41e850:	add	sp, sp, #0x70
  41e854:	ret
  41e858:	sub	sp, sp, #0x30
  41e85c:	stp	x29, x30, [sp, #32]
  41e860:	add	x29, sp, #0x20
  41e864:	str	x0, [sp, #16]
  41e868:	ldr	x8, [sp, #16]
  41e86c:	cbnz	x8, 41e87c <ascii_strlower_n@plt+0x1a41c>
  41e870:	mov	x8, xzr
  41e874:	stur	x8, [x29, #-8]
  41e878:	b	41e8cc <ascii_strlower_n@plt+0x1a46c>
  41e87c:	ldr	x8, [sp, #16]
  41e880:	ldr	x8, [x8, #8]
  41e884:	cbz	x8, 41e898 <ascii_strlower_n@plt+0x1a438>
  41e888:	ldr	x8, [sp, #16]
  41e88c:	ldr	x8, [x8, #8]
  41e890:	str	x8, [sp, #8]
  41e894:	b	41e8a4 <ascii_strlower_n@plt+0x1a444>
  41e898:	ldr	x8, [sp, #16]
  41e89c:	add	x8, x8, #0x10
  41e8a0:	str	x8, [sp, #8]
  41e8a4:	ldr	x0, [sp, #8]
  41e8a8:	bl	404130 <dns_name_is_root@plt>
  41e8ac:	tbnz	w0, #0, 41e8b4 <ascii_strlower_n@plt+0x1a454>
  41e8b0:	b	41e8c4 <ascii_strlower_n@plt+0x1a464>
  41e8b4:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e8b8:	add	x8, x8, #0xcf6
  41e8bc:	stur	x8, [x29, #-8]
  41e8c0:	b	41e8cc <ascii_strlower_n@plt+0x1a46c>
  41e8c4:	ldr	x8, [sp, #8]
  41e8c8:	stur	x8, [x29, #-8]
  41e8cc:	ldur	x0, [x29, #-8]
  41e8d0:	ldp	x29, x30, [sp, #32]
  41e8d4:	add	sp, sp, #0x30
  41e8d8:	ret
  41e8dc:	sub	sp, sp, #0x30
  41e8e0:	stp	x29, x30, [sp, #32]
  41e8e4:	add	x29, sp, #0x20
  41e8e8:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e8ec:	add	x8, x8, #0xac0
  41e8f0:	add	x8, x8, #0x3
  41e8f4:	str	x0, [sp, #16]
  41e8f8:	ldr	x9, [sp, #16]
  41e8fc:	str	x8, [sp, #8]
  41e900:	cbnz	x9, 41e910 <ascii_strlower_n@plt+0x1a4b0>
  41e904:	mov	x8, xzr
  41e908:	stur	x8, [x29, #-8]
  41e90c:	b	41e9d4 <ascii_strlower_n@plt+0x1a574>
  41e910:	ldr	x8, [sp, #16]
  41e914:	ldr	w9, [x8]
  41e918:	mov	w10, #0xffffffff            	// #-1
  41e91c:	cmp	w9, w10
  41e920:	cset	w9, ne  // ne = any
  41e924:	mov	w10, #0x1                   	// #1
  41e928:	eor	w9, w9, #0x1
  41e92c:	eor	w9, w9, w10
  41e930:	eor	w9, w9, w10
  41e934:	and	w9, w9, #0x1
  41e938:	mov	w0, w9
  41e93c:	sxtw	x8, w0
  41e940:	cbz	x8, 41e968 <ascii_strlower_n@plt+0x1a508>
  41e944:	mov	w8, wzr
  41e948:	mov	w0, w8
  41e94c:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e950:	add	x1, x1, #0xc5f
  41e954:	ldr	x2, [sp, #8]
  41e958:	mov	w3, #0x77                  	// #119
  41e95c:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e960:	add	x4, x4, #0xc79
  41e964:	bl	4039d0 <log_assert_failed_realm@plt>
  41e968:	ldr	x8, [sp, #16]
  41e96c:	ldr	w9, [x8]
  41e970:	cmp	w9, #0x0
  41e974:	cset	w9, hi  // hi = pmore
  41e978:	mov	w10, #0x1                   	// #1
  41e97c:	eor	w9, w9, #0x1
  41e980:	eor	w9, w9, w10
  41e984:	eor	w9, w9, w10
  41e988:	and	w9, w9, #0x1
  41e98c:	mov	w0, w9
  41e990:	sxtw	x8, w0
  41e994:	cbz	x8, 41e9bc <ascii_strlower_n@plt+0x1a55c>
  41e998:	mov	w8, wzr
  41e99c:	mov	w0, w8
  41e9a0:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e9a4:	add	x1, x1, #0xcb0
  41e9a8:	ldr	x2, [sp, #8]
  41e9ac:	mov	w3, #0x79                  	// #121
  41e9b0:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e9b4:	add	x4, x4, #0xc79
  41e9b8:	bl	4039d0 <log_assert_failed_realm@plt>
  41e9bc:	ldr	x8, [sp, #16]
  41e9c0:	ldr	w9, [x8]
  41e9c4:	add	w9, w9, #0x1
  41e9c8:	str	w9, [x8]
  41e9cc:	ldr	x8, [sp, #16]
  41e9d0:	stur	x8, [x29, #-8]
  41e9d4:	ldur	x0, [x29, #-8]
  41e9d8:	ldp	x29, x30, [sp, #32]
  41e9dc:	add	sp, sp, #0x30
  41e9e0:	ret
  41e9e4:	sub	sp, sp, #0x40
  41e9e8:	stp	x29, x30, [sp, #48]
  41e9ec:	add	x29, sp, #0x30
  41e9f0:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41e9f4:	add	x8, x8, #0xac0
  41e9f8:	add	x8, x8, #0x3
  41e9fc:	sturh	w0, [x29, #-10]
  41ea00:	sturh	w1, [x29, #-12]
  41ea04:	str	x2, [sp, #24]
  41ea08:	str	x8, [sp, #8]
  41ea0c:	ldr	x8, [sp, #24]
  41ea10:	cmp	x8, #0x0
  41ea14:	cset	w9, ne  // ne = any
  41ea18:	mov	w10, #0x1                   	// #1
  41ea1c:	eor	w9, w9, #0x1
  41ea20:	eor	w9, w9, w10
  41ea24:	eor	w9, w9, w10
  41ea28:	and	w9, w9, #0x1
  41ea2c:	mov	w0, w9
  41ea30:	sxtw	x8, w0
  41ea34:	cbz	x8, 41ea5c <ascii_strlower_n@plt+0x1a5fc>
  41ea38:	mov	w8, wzr
  41ea3c:	mov	w0, w8
  41ea40:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41ea44:	add	x1, x1, #0x923
  41ea48:	ldr	x2, [sp, #8]
  41ea4c:	mov	w3, #0x62                  	// #98
  41ea50:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ea54:	add	x4, x4, #0xc16
  41ea58:	bl	4039d0 <log_assert_failed_realm@plt>
  41ea5c:	mov	x0, #0x1                   	// #1
  41ea60:	mov	x1, #0x10                  	// #16
  41ea64:	bl	4040d0 <calloc@plt>
  41ea68:	str	x0, [sp, #16]
  41ea6c:	ldr	x8, [sp, #16]
  41ea70:	cbnz	x8, 41ea80 <ascii_strlower_n@plt+0x1a620>
  41ea74:	mov	x8, xzr
  41ea78:	stur	x8, [x29, #-8]
  41ea7c:	b	41eab8 <ascii_strlower_n@plt+0x1a658>
  41ea80:	ldr	x8, [sp, #16]
  41ea84:	mov	w9, #0x1                   	// #1
  41ea88:	str	w9, [x8]
  41ea8c:	ldurh	w9, [x29, #-10]
  41ea90:	ldr	x8, [sp, #16]
  41ea94:	strh	w9, [x8, #4]
  41ea98:	ldurh	w9, [x29, #-12]
  41ea9c:	ldr	x8, [sp, #16]
  41eaa0:	strh	w9, [x8, #6]
  41eaa4:	ldr	x8, [sp, #24]
  41eaa8:	ldr	x10, [sp, #16]
  41eaac:	str	x8, [x10, #8]
  41eab0:	ldr	x8, [sp, #16]
  41eab4:	stur	x8, [x29, #-8]
  41eab8:	ldur	x0, [x29, #-8]
  41eabc:	ldp	x29, x30, [sp, #48]
  41eac0:	add	sp, sp, #0x40
  41eac4:	ret
  41eac8:	sub	sp, sp, #0x20
  41eacc:	stp	x29, x30, [sp, #16]
  41ead0:	add	x29, sp, #0x10
  41ead4:	mov	x8, xzr
  41ead8:	str	x0, [sp, #8]
  41eadc:	ldr	x0, [sp, #8]
  41eae0:	str	x8, [sp]
  41eae4:	bl	403ac0 <free@plt>
  41eae8:	ldr	x0, [sp]
  41eaec:	ldp	x29, x30, [sp, #16]
  41eaf0:	add	sp, sp, #0x20
  41eaf4:	ret
  41eaf8:	sub	sp, sp, #0x60
  41eafc:	stp	x29, x30, [sp, #80]
  41eb00:	add	x29, sp, #0x50
  41eb04:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41eb08:	add	x8, x8, #0xac0
  41eb0c:	add	x8, x8, #0x3
  41eb10:	adrp	x9, 431000 <ascii_strlower_n@plt+0x2cba0>
  41eb14:	add	x9, x9, #0xbc2
  41eb18:	stur	x0, [x29, #-16]
  41eb1c:	stur	x1, [x29, #-24]
  41eb20:	stur	x2, [x29, #-32]
  41eb24:	str	x8, [sp, #16]
  41eb28:	str	x9, [sp, #8]
  41eb2c:	ldur	x8, [x29, #-16]
  41eb30:	cmp	x8, #0x0
  41eb34:	cset	w9, ne  // ne = any
  41eb38:	mov	w10, #0x1                   	// #1
  41eb3c:	eor	w9, w9, #0x1
  41eb40:	eor	w9, w9, w10
  41eb44:	eor	w9, w9, w10
  41eb48:	and	w9, w9, #0x1
  41eb4c:	mov	w0, w9
  41eb50:	sxtw	x8, w0
  41eb54:	cbz	x8, 41eb78 <ascii_strlower_n@plt+0x1a718>
  41eb58:	mov	w8, wzr
  41eb5c:	mov	w0, w8
  41eb60:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41eb64:	add	x1, x1, #0x42e
  41eb68:	ldr	x2, [sp, #16]
  41eb6c:	mov	w3, #0x48                  	// #72
  41eb70:	ldr	x4, [sp, #8]
  41eb74:	bl	4039d0 <log_assert_failed_realm@plt>
  41eb78:	ldur	x8, [x29, #-24]
  41eb7c:	cmp	x8, #0x0
  41eb80:	cset	w9, ne  // ne = any
  41eb84:	mov	w10, #0x1                   	// #1
  41eb88:	eor	w9, w9, #0x1
  41eb8c:	eor	w9, w9, w10
  41eb90:	eor	w9, w9, w10
  41eb94:	and	w9, w9, #0x1
  41eb98:	mov	w0, w9
  41eb9c:	sxtw	x8, w0
  41eba0:	cbz	x8, 41ebc4 <ascii_strlower_n@plt+0x1a764>
  41eba4:	mov	w8, wzr
  41eba8:	mov	w0, w8
  41ebac:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ebb0:	add	x1, x1, #0x5c2
  41ebb4:	ldr	x2, [sp, #16]
  41ebb8:	mov	w3, #0x49                  	// #73
  41ebbc:	ldr	x4, [sp, #8]
  41ebc0:	bl	4039d0 <log_assert_failed_realm@plt>
  41ebc4:	ldur	x8, [x29, #-32]
  41ebc8:	cmp	x8, #0x0
  41ebcc:	cset	w9, ne  // ne = any
  41ebd0:	mov	w10, #0x1                   	// #1
  41ebd4:	eor	w9, w9, #0x1
  41ebd8:	eor	w9, w9, w10
  41ebdc:	eor	w9, w9, w10
  41ebe0:	and	w9, w9, #0x1
  41ebe4:	mov	w0, w9
  41ebe8:	sxtw	x8, w0
  41ebec:	cbz	x8, 41ec10 <ascii_strlower_n@plt+0x1a7b0>
  41ebf0:	mov	w8, wzr
  41ebf4:	mov	w0, w8
  41ebf8:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41ebfc:	add	x1, x1, #0x923
  41ec00:	ldr	x2, [sp, #16]
  41ec04:	mov	w3, #0x4a                  	// #74
  41ec08:	ldr	x4, [sp, #8]
  41ec0c:	bl	4039d0 <log_assert_failed_realm@plt>
  41ec10:	ldur	x0, [x29, #-32]
  41ec14:	bl	404130 <dns_name_is_root@plt>
  41ec18:	tbnz	w0, #0, 41ec20 <ascii_strlower_n@plt+0x1a7c0>
  41ec1c:	b	41ec38 <ascii_strlower_n@plt+0x1a7d8>
  41ec20:	ldur	x0, [x29, #-24]
  41ec24:	bl	41e8dc <ascii_strlower_n@plt+0x1a47c>
  41ec28:	ldur	x8, [x29, #-16]
  41ec2c:	str	x0, [x8]
  41ec30:	stur	wzr, [x29, #-4]
  41ec34:	b	41ecbc <ascii_strlower_n@plt+0x1a85c>
  41ec38:	ldur	x0, [x29, #-24]
  41ec3c:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41ec40:	ldur	x1, [x29, #-32]
  41ec44:	mov	w8, wzr
  41ec48:	mov	w2, w8
  41ec4c:	add	x3, sp, #0x20
  41ec50:	bl	4040a0 <dns_name_concat@plt>
  41ec54:	str	w0, [sp, #28]
  41ec58:	ldr	w8, [sp, #28]
  41ec5c:	cmp	w8, #0x0
  41ec60:	cset	w8, ge  // ge = tcont
  41ec64:	tbnz	w8, #0, 41ec74 <ascii_strlower_n@plt+0x1a814>
  41ec68:	ldr	w8, [sp, #28]
  41ec6c:	stur	w8, [x29, #-4]
  41ec70:	b	41ecbc <ascii_strlower_n@plt+0x1a85c>
  41ec74:	ldur	x8, [x29, #-24]
  41ec78:	ldrh	w0, [x8, #4]
  41ec7c:	ldur	x8, [x29, #-24]
  41ec80:	ldrh	w1, [x8, #6]
  41ec84:	ldr	x2, [sp, #32]
  41ec88:	bl	41e9e4 <ascii_strlower_n@plt+0x1a584>
  41ec8c:	str	x0, [sp, #40]
  41ec90:	ldr	x8, [sp, #40]
  41ec94:	cbnz	x8, 41ecac <ascii_strlower_n@plt+0x1a84c>
  41ec98:	ldr	x0, [sp, #32]
  41ec9c:	bl	403ac0 <free@plt>
  41eca0:	mov	w8, #0xfffffff4            	// #-12
  41eca4:	stur	w8, [x29, #-4]
  41eca8:	b	41ecbc <ascii_strlower_n@plt+0x1a85c>
  41ecac:	ldr	x8, [sp, #40]
  41ecb0:	ldur	x9, [x29, #-16]
  41ecb4:	str	x8, [x9]
  41ecb8:	stur	wzr, [x29, #-4]
  41ecbc:	ldur	w0, [x29, #-4]
  41ecc0:	ldp	x29, x30, [sp, #80]
  41ecc4:	add	sp, sp, #0x60
  41ecc8:	ret
  41eccc:	sub	sp, sp, #0x30
  41ecd0:	stp	x29, x30, [sp, #32]
  41ecd4:	add	x29, sp, #0x20
  41ecd8:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ecdc:	add	x8, x8, #0xac0
  41ece0:	add	x8, x8, #0x3
  41ece4:	str	x0, [sp, #16]
  41ece8:	ldr	x9, [sp, #16]
  41ecec:	str	x8, [sp, #8]
  41ecf0:	cbnz	x9, 41ed00 <ascii_strlower_n@plt+0x1a8a0>
  41ecf4:	mov	x8, xzr
  41ecf8:	stur	x8, [x29, #-8]
  41ecfc:	b	41edec <ascii_strlower_n@plt+0x1a98c>
  41ed00:	ldr	x8, [sp, #16]
  41ed04:	ldr	w9, [x8]
  41ed08:	mov	w10, #0xffffffff            	// #-1
  41ed0c:	cmp	w9, w10
  41ed10:	cset	w9, ne  // ne = any
  41ed14:	mov	w10, #0x1                   	// #1
  41ed18:	eor	w9, w9, #0x1
  41ed1c:	eor	w9, w9, w10
  41ed20:	eor	w9, w9, w10
  41ed24:	and	w9, w9, #0x1
  41ed28:	mov	w0, w9
  41ed2c:	sxtw	x8, w0
  41ed30:	cbz	x8, 41ed58 <ascii_strlower_n@plt+0x1a8f8>
  41ed34:	mov	w8, wzr
  41ed38:	mov	w0, w8
  41ed3c:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ed40:	add	x1, x1, #0xc5f
  41ed44:	ldr	x2, [sp, #8]
  41ed48:	mov	w3, #0x83                  	// #131
  41ed4c:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ed50:	add	x4, x4, #0xcbd
  41ed54:	bl	4039d0 <log_assert_failed_realm@plt>
  41ed58:	ldr	x8, [sp, #16]
  41ed5c:	ldr	w9, [x8]
  41ed60:	cmp	w9, #0x0
  41ed64:	cset	w9, hi  // hi = pmore
  41ed68:	mov	w10, #0x1                   	// #1
  41ed6c:	eor	w9, w9, #0x1
  41ed70:	eor	w9, w9, w10
  41ed74:	eor	w9, w9, w10
  41ed78:	and	w9, w9, #0x1
  41ed7c:	mov	w0, w9
  41ed80:	sxtw	x8, w0
  41ed84:	cbz	x8, 41edac <ascii_strlower_n@plt+0x1a94c>
  41ed88:	mov	w8, wzr
  41ed8c:	mov	w0, w8
  41ed90:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ed94:	add	x1, x1, #0xcb0
  41ed98:	ldr	x2, [sp, #8]
  41ed9c:	mov	w3, #0x84                  	// #132
  41eda0:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41eda4:	add	x4, x4, #0xcbd
  41eda8:	bl	4039d0 <log_assert_failed_realm@plt>
  41edac:	ldr	x8, [sp, #16]
  41edb0:	ldr	w9, [x8]
  41edb4:	cmp	w9, #0x1
  41edb8:	b.ne	41edd4 <ascii_strlower_n@plt+0x1a974>  // b.any
  41edbc:	ldr	x8, [sp, #16]
  41edc0:	ldr	x0, [x8, #8]
  41edc4:	bl	403ac0 <free@plt>
  41edc8:	ldr	x0, [sp, #16]
  41edcc:	bl	403ac0 <free@plt>
  41edd0:	b	41ede4 <ascii_strlower_n@plt+0x1a984>
  41edd4:	ldr	x8, [sp, #16]
  41edd8:	ldr	w9, [x8]
  41eddc:	subs	w9, w9, #0x1
  41ede0:	str	w9, [x8]
  41ede4:	mov	x8, xzr
  41ede8:	stur	x8, [x29, #-8]
  41edec:	ldur	x0, [x29, #-8]
  41edf0:	ldp	x29, x30, [sp, #32]
  41edf4:	add	sp, sp, #0x30
  41edf8:	ret
  41edfc:	sub	sp, sp, #0x30
  41ee00:	stp	x29, x30, [sp, #32]
  41ee04:	add	x29, sp, #0x20
  41ee08:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ee0c:	add	x8, x8, #0xac0
  41ee10:	add	x2, x8, #0x3
  41ee14:	stur	x0, [x29, #-8]
  41ee18:	str	x2, [sp, #8]
  41ee1c:	ldur	x8, [x29, #-8]
  41ee20:	cmp	x8, #0x0
  41ee24:	cset	w9, ne  // ne = any
  41ee28:	mov	w10, #0x1                   	// #1
  41ee2c:	eor	w9, w9, #0x1
  41ee30:	eor	w9, w9, w10
  41ee34:	eor	w9, w9, w10
  41ee38:	and	w9, w9, #0x1
  41ee3c:	mov	w0, w9
  41ee40:	sxtw	x8, w0
  41ee44:	cbz	x8, 41ee6c <ascii_strlower_n@plt+0x1aa0c>
  41ee48:	mov	w8, wzr
  41ee4c:	mov	w0, w8
  41ee50:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ee54:	add	x1, x1, #0x5c2
  41ee58:	ldr	x2, [sp, #8]
  41ee5c:	mov	w3, #0xa1                  	// #161
  41ee60:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ee64:	add	x4, x4, #0xcf8
  41ee68:	bl	4039d0 <log_assert_failed_realm@plt>
  41ee6c:	ldur	x8, [x29, #-8]
  41ee70:	ldrh	w9, [x8, #4]
  41ee74:	mov	w10, #0x0                   	// #0
  41ee78:	cmp	w9, #0x1
  41ee7c:	str	w10, [sp, #4]
  41ee80:	b.ne	41eedc <ascii_strlower_n@plt+0x1aa7c>  // b.any
  41ee84:	mov	w8, #0x0                   	// #0
  41ee88:	sturb	w8, [x29, #-9]
  41ee8c:	ldur	x9, [x29, #-8]
  41ee90:	ldrh	w8, [x9, #6]
  41ee94:	cmp	w8, #0x1
  41ee98:	str	w8, [sp]
  41ee9c:	b.eq	41eebc <ascii_strlower_n@plt+0x1aa5c>  // b.none
  41eea0:	b	41eea4 <ascii_strlower_n@plt+0x1aa44>
  41eea4:	ldr	w8, [sp]
  41eea8:	cmp	w8, #0x1c
  41eeac:	cset	w9, eq  // eq = none
  41eeb0:	eor	w9, w9, #0x1
  41eeb4:	tbnz	w9, #0, 41eec8 <ascii_strlower_n@plt+0x1aa68>
  41eeb8:	b	41eebc <ascii_strlower_n@plt+0x1aa5c>
  41eebc:	mov	w8, #0x1                   	// #1
  41eec0:	sturb	w8, [x29, #-9]
  41eec4:	b	41eec8 <ascii_strlower_n@plt+0x1aa68>
  41eec8:	ldurb	w8, [x29, #-9]
  41eecc:	and	w8, w8, #0x1
  41eed0:	sturb	w8, [x29, #-10]
  41eed4:	ldurb	w8, [x29, #-10]
  41eed8:	str	w8, [sp, #4]
  41eedc:	ldr	w8, [sp, #4]
  41eee0:	and	w0, w8, #0x1
  41eee4:	ldp	x29, x30, [sp, #32]
  41eee8:	add	sp, sp, #0x30
  41eeec:	ret
  41eef0:	sub	sp, sp, #0x30
  41eef4:	stp	x29, x30, [sp, #32]
  41eef8:	add	x29, sp, #0x20
  41eefc:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ef00:	add	x8, x8, #0xac0
  41ef04:	add	x2, x8, #0x3
  41ef08:	str	x0, [sp, #16]
  41ef0c:	str	x2, [sp, #8]
  41ef10:	ldr	x8, [sp, #16]
  41ef14:	cmp	x8, #0x0
  41ef18:	cset	w9, ne  // ne = any
  41ef1c:	mov	w10, #0x1                   	// #1
  41ef20:	eor	w9, w9, #0x1
  41ef24:	eor	w9, w9, w10
  41ef28:	eor	w9, w9, w10
  41ef2c:	and	w9, w9, #0x1
  41ef30:	mov	w0, w9
  41ef34:	sxtw	x8, w0
  41ef38:	cbz	x8, 41ef60 <ascii_strlower_n@plt+0x1ab00>
  41ef3c:	mov	w8, wzr
  41ef40:	mov	w0, w8
  41ef44:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ef48:	add	x1, x1, #0x5c2
  41ef4c:	ldr	x2, [sp, #8]
  41ef50:	mov	w3, #0xa9                  	// #169
  41ef54:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ef58:	add	x4, x4, #0xd32
  41ef5c:	bl	4039d0 <log_assert_failed_realm@plt>
  41ef60:	ldr	x8, [sp, #16]
  41ef64:	ldrh	w9, [x8, #6]
  41ef68:	cmp	w9, #0xc
  41ef6c:	b.eq	41ef80 <ascii_strlower_n@plt+0x1ab20>  // b.none
  41ef70:	mov	w8, wzr
  41ef74:	and	w8, w8, #0x1
  41ef78:	sturb	w8, [x29, #-1]
  41ef7c:	b	41efcc <ascii_strlower_n@plt+0x1ab6c>
  41ef80:	ldr	x0, [sp, #16]
  41ef84:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41ef88:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ef8c:	add	x1, x1, #0xd6e
  41ef90:	bl	4042a0 <dns_name_endswith@plt>
  41ef94:	mov	w8, #0x1                   	// #1
  41ef98:	str	w8, [sp, #4]
  41ef9c:	cbnz	w0, 41efc0 <ascii_strlower_n@plt+0x1ab60>
  41efa0:	ldr	x0, [sp, #16]
  41efa4:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41efa8:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41efac:	add	x1, x1, #0xd79
  41efb0:	bl	4042a0 <dns_name_endswith@plt>
  41efb4:	cmp	w0, #0x0
  41efb8:	cset	w8, ne  // ne = any
  41efbc:	str	w8, [sp, #4]
  41efc0:	ldr	w8, [sp, #4]
  41efc4:	and	w8, w8, #0x1
  41efc8:	sturb	w8, [x29, #-1]
  41efcc:	ldurb	w8, [x29, #-1]
  41efd0:	and	w0, w8, #0x1
  41efd4:	ldp	x29, x30, [sp, #32]
  41efd8:	add	sp, sp, #0x30
  41efdc:	ret
  41efe0:	sub	sp, sp, #0x40
  41efe4:	stp	x29, x30, [sp, #48]
  41efe8:	add	x29, sp, #0x30
  41efec:	stur	x0, [x29, #-16]
  41eff0:	str	x1, [sp, #24]
  41eff4:	ldur	x8, [x29, #-16]
  41eff8:	ldr	x9, [sp, #24]
  41effc:	cmp	x8, x9
  41f000:	b.ne	41f010 <ascii_strlower_n@plt+0x1abb0>  // b.any
  41f004:	mov	w8, #0x1                   	// #1
  41f008:	stur	w8, [x29, #-4]
  41f00c:	b	41f0a4 <ascii_strlower_n@plt+0x1ac44>
  41f010:	ldur	x0, [x29, #-16]
  41f014:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f018:	ldr	x8, [sp, #24]
  41f01c:	str	x0, [sp, #8]
  41f020:	mov	x0, x8
  41f024:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f028:	ldr	x1, [sp, #8]
  41f02c:	str	x0, [sp]
  41f030:	mov	x0, x1
  41f034:	ldr	x1, [sp]
  41f038:	bl	4042b0 <dns_name_equal@plt>
  41f03c:	str	w0, [sp, #20]
  41f040:	ldr	w9, [sp, #20]
  41f044:	cmp	w9, #0x0
  41f048:	cset	w9, gt
  41f04c:	tbnz	w9, #0, 41f05c <ascii_strlower_n@plt+0x1abfc>
  41f050:	ldr	w8, [sp, #20]
  41f054:	stur	w8, [x29, #-4]
  41f058:	b	41f0a4 <ascii_strlower_n@plt+0x1ac44>
  41f05c:	ldur	x8, [x29, #-16]
  41f060:	ldrh	w9, [x8, #4]
  41f064:	ldr	x8, [sp, #24]
  41f068:	ldrh	w10, [x8, #4]
  41f06c:	cmp	w9, w10
  41f070:	b.eq	41f07c <ascii_strlower_n@plt+0x1ac1c>  // b.none
  41f074:	stur	wzr, [x29, #-4]
  41f078:	b	41f0a4 <ascii_strlower_n@plt+0x1ac44>
  41f07c:	ldur	x8, [x29, #-16]
  41f080:	ldrh	w9, [x8, #6]
  41f084:	ldr	x8, [sp, #24]
  41f088:	ldrh	w10, [x8, #6]
  41f08c:	cmp	w9, w10
  41f090:	b.eq	41f09c <ascii_strlower_n@plt+0x1ac3c>  // b.none
  41f094:	stur	wzr, [x29, #-4]
  41f098:	b	41f0a4 <ascii_strlower_n@plt+0x1ac44>
  41f09c:	mov	w8, #0x1                   	// #1
  41f0a0:	stur	w8, [x29, #-4]
  41f0a4:	ldur	w0, [x29, #-4]
  41f0a8:	ldp	x29, x30, [sp, #48]
  41f0ac:	add	sp, sp, #0x40
  41f0b0:	ret
  41f0b4:	sub	sp, sp, #0x70
  41f0b8:	stp	x29, x30, [sp, #96]
  41f0bc:	add	x29, sp, #0x60
  41f0c0:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f0c4:	add	x8, x8, #0xac0
  41f0c8:	add	x8, x8, #0x3
  41f0cc:	stur	x0, [x29, #-16]
  41f0d0:	stur	x1, [x29, #-24]
  41f0d4:	stur	x2, [x29, #-32]
  41f0d8:	str	x8, [sp, #32]
  41f0dc:	ldur	x8, [x29, #-16]
  41f0e0:	cmp	x8, #0x0
  41f0e4:	cset	w9, ne  // ne = any
  41f0e8:	mov	w10, #0x1                   	// #1
  41f0ec:	eor	w9, w9, #0x1
  41f0f0:	eor	w9, w9, w10
  41f0f4:	eor	w9, w9, w10
  41f0f8:	and	w9, w9, #0x1
  41f0fc:	mov	w0, w9
  41f100:	sxtw	x8, w0
  41f104:	cbz	x8, 41f12c <ascii_strlower_n@plt+0x1accc>
  41f108:	mov	w8, wzr
  41f10c:	mov	w0, w8
  41f110:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f114:	add	x1, x1, #0x5c2
  41f118:	ldr	x2, [sp, #32]
  41f11c:	mov	w3, #0xcb                  	// #203
  41f120:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f124:	add	x4, x4, #0xd84
  41f128:	bl	4039d0 <log_assert_failed_realm@plt>
  41f12c:	ldur	x8, [x29, #-24]
  41f130:	cmp	x8, #0x0
  41f134:	cset	w9, ne  // ne = any
  41f138:	mov	w10, #0x1                   	// #1
  41f13c:	eor	w9, w9, #0x1
  41f140:	eor	w9, w9, w10
  41f144:	eor	w9, w9, w10
  41f148:	and	w9, w9, #0x1
  41f14c:	mov	w0, w9
  41f150:	sxtw	x8, w0
  41f154:	cbz	x8, 41f17c <ascii_strlower_n@plt+0x1ad1c>
  41f158:	mov	w8, wzr
  41f15c:	mov	w0, w8
  41f160:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f164:	add	x1, x1, #0x20f
  41f168:	ldr	x2, [sp, #32]
  41f16c:	mov	w3, #0xcc                  	// #204
  41f170:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f174:	add	x4, x4, #0xd84
  41f178:	bl	4039d0 <log_assert_failed_realm@plt>
  41f17c:	ldur	x8, [x29, #-16]
  41f180:	ldur	x9, [x29, #-24]
  41f184:	ldr	x9, [x9, #8]
  41f188:	cmp	x8, x9
  41f18c:	b.ne	41f19c <ascii_strlower_n@plt+0x1ad3c>  // b.any
  41f190:	mov	w8, #0x1                   	// #1
  41f194:	stur	w8, [x29, #-4]
  41f198:	b	41f2d8 <ascii_strlower_n@plt+0x1ae78>
  41f19c:	ldur	x8, [x29, #-24]
  41f1a0:	ldr	x8, [x8, #8]
  41f1a4:	ldrh	w9, [x8, #4]
  41f1a8:	ldur	x8, [x29, #-16]
  41f1ac:	ldrh	w10, [x8, #4]
  41f1b0:	cmp	w9, w10
  41f1b4:	b.eq	41f1d0 <ascii_strlower_n@plt+0x1ad70>  // b.none
  41f1b8:	ldur	x8, [x29, #-16]
  41f1bc:	ldrh	w9, [x8, #4]
  41f1c0:	cmp	w9, #0xff
  41f1c4:	b.eq	41f1d0 <ascii_strlower_n@plt+0x1ad70>  // b.none
  41f1c8:	stur	wzr, [x29, #-4]
  41f1cc:	b	41f2d8 <ascii_strlower_n@plt+0x1ae78>
  41f1d0:	ldur	x8, [x29, #-24]
  41f1d4:	ldr	x8, [x8, #8]
  41f1d8:	ldrh	w9, [x8, #6]
  41f1dc:	ldur	x8, [x29, #-16]
  41f1e0:	ldrh	w10, [x8, #6]
  41f1e4:	cmp	w9, w10
  41f1e8:	b.eq	41f204 <ascii_strlower_n@plt+0x1ada4>  // b.none
  41f1ec:	ldur	x8, [x29, #-16]
  41f1f0:	ldrh	w9, [x8, #6]
  41f1f4:	cmp	w9, #0xff
  41f1f8:	b.eq	41f204 <ascii_strlower_n@plt+0x1ada4>  // b.none
  41f1fc:	stur	wzr, [x29, #-4]
  41f200:	b	41f2d8 <ascii_strlower_n@plt+0x1ae78>
  41f204:	ldur	x8, [x29, #-24]
  41f208:	ldr	x0, [x8, #8]
  41f20c:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f210:	ldur	x8, [x29, #-16]
  41f214:	str	x0, [sp, #24]
  41f218:	mov	x0, x8
  41f21c:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f220:	ldr	x1, [sp, #24]
  41f224:	str	x0, [sp, #16]
  41f228:	mov	x0, x1
  41f22c:	ldr	x1, [sp, #16]
  41f230:	bl	4042b0 <dns_name_equal@plt>
  41f234:	stur	w0, [x29, #-36]
  41f238:	ldur	w9, [x29, #-36]
  41f23c:	cbz	w9, 41f24c <ascii_strlower_n@plt+0x1adec>
  41f240:	ldur	w8, [x29, #-36]
  41f244:	stur	w8, [x29, #-4]
  41f248:	b	41f2d8 <ascii_strlower_n@plt+0x1ae78>
  41f24c:	ldur	x8, [x29, #-32]
  41f250:	cbz	x8, 41f2d4 <ascii_strlower_n@plt+0x1ae74>
  41f254:	add	x3, sp, #0x30
  41f258:	mov	x8, xzr
  41f25c:	str	x8, [sp, #48]
  41f260:	ldur	x0, [x29, #-16]
  41f264:	str	x3, [sp, #8]
  41f268:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f26c:	ldur	x1, [x29, #-32]
  41f270:	mov	w9, wzr
  41f274:	mov	w2, w9
  41f278:	ldr	x3, [sp, #8]
  41f27c:	bl	4040a0 <dns_name_concat@plt>
  41f280:	stur	w0, [x29, #-36]
  41f284:	ldur	w9, [x29, #-36]
  41f288:	cmp	w9, #0x0
  41f28c:	cset	w9, ge  // ge = tcont
  41f290:	tbnz	w9, #0, 41f2a8 <ascii_strlower_n@plt+0x1ae48>
  41f294:	ldur	w8, [x29, #-36]
  41f298:	stur	w8, [x29, #-4]
  41f29c:	mov	w8, #0x1                   	// #1
  41f2a0:	str	w8, [sp, #44]
  41f2a4:	b	41f2c8 <ascii_strlower_n@plt+0x1ae68>
  41f2a8:	ldur	x8, [x29, #-24]
  41f2ac:	ldr	x0, [x8, #8]
  41f2b0:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f2b4:	ldr	x1, [sp, #48]
  41f2b8:	bl	4042b0 <dns_name_equal@plt>
  41f2bc:	stur	w0, [x29, #-4]
  41f2c0:	mov	w9, #0x1                   	// #1
  41f2c4:	str	w9, [sp, #44]
  41f2c8:	add	x0, sp, #0x30
  41f2cc:	bl	41f2e8 <ascii_strlower_n@plt+0x1ae88>
  41f2d0:	b	41f2d8 <ascii_strlower_n@plt+0x1ae78>
  41f2d4:	stur	wzr, [x29, #-4]
  41f2d8:	ldur	w0, [x29, #-4]
  41f2dc:	ldp	x29, x30, [sp, #96]
  41f2e0:	add	sp, sp, #0x70
  41f2e4:	ret
  41f2e8:	sub	sp, sp, #0x20
  41f2ec:	stp	x29, x30, [sp, #16]
  41f2f0:	add	x29, sp, #0x10
  41f2f4:	str	x0, [sp, #8]
  41f2f8:	ldr	x8, [sp, #8]
  41f2fc:	ldr	x0, [x8]
  41f300:	bl	403ac0 <free@plt>
  41f304:	ldp	x29, x30, [sp, #16]
  41f308:	add	sp, sp, #0x20
  41f30c:	ret
  41f310:	sub	sp, sp, #0xa0
  41f314:	stp	x29, x30, [sp, #144]
  41f318:	add	x29, sp, #0x90
  41f31c:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f320:	add	x8, x8, #0xac0
  41f324:	add	x8, x8, #0x3
  41f328:	stur	x0, [x29, #-16]
  41f32c:	stur	x1, [x29, #-24]
  41f330:	stur	x2, [x29, #-32]
  41f334:	stur	x8, [x29, #-64]
  41f338:	ldur	x8, [x29, #-16]
  41f33c:	cmp	x8, #0x0
  41f340:	cset	w9, ne  // ne = any
  41f344:	mov	w10, #0x1                   	// #1
  41f348:	eor	w9, w9, #0x1
  41f34c:	eor	w9, w9, w10
  41f350:	eor	w9, w9, w10
  41f354:	and	w9, w9, #0x1
  41f358:	mov	w0, w9
  41f35c:	sxtw	x8, w0
  41f360:	cbz	x8, 41f388 <ascii_strlower_n@plt+0x1af28>
  41f364:	mov	w8, wzr
  41f368:	mov	w0, w8
  41f36c:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f370:	add	x1, x1, #0x5c2
  41f374:	ldur	x2, [x29, #-64]
  41f378:	mov	w3, #0xef                  	// #239
  41f37c:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f380:	add	x4, x4, #0xddd
  41f384:	bl	4039d0 <log_assert_failed_realm@plt>
  41f388:	ldur	x8, [x29, #-24]
  41f38c:	cmp	x8, #0x0
  41f390:	cset	w9, ne  // ne = any
  41f394:	mov	w10, #0x1                   	// #1
  41f398:	eor	w9, w9, #0x1
  41f39c:	eor	w9, w9, w10
  41f3a0:	eor	w9, w9, w10
  41f3a4:	and	w9, w9, #0x1
  41f3a8:	mov	w0, w9
  41f3ac:	sxtw	x8, w0
  41f3b0:	cbz	x8, 41f3d8 <ascii_strlower_n@plt+0x1af78>
  41f3b4:	mov	w8, wzr
  41f3b8:	mov	w0, w8
  41f3bc:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  41f3c0:	add	x1, x1, #0x840
  41f3c4:	ldur	x2, [x29, #-64]
  41f3c8:	mov	w3, #0xf0                  	// #240
  41f3cc:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f3d0:	add	x4, x4, #0xddd
  41f3d4:	bl	4039d0 <log_assert_failed_realm@plt>
  41f3d8:	ldur	x8, [x29, #-24]
  41f3dc:	ldrh	w9, [x8, #4]
  41f3e0:	ldur	x8, [x29, #-16]
  41f3e4:	ldrh	w10, [x8, #4]
  41f3e8:	cmp	w9, w10
  41f3ec:	b.eq	41f408 <ascii_strlower_n@plt+0x1afa8>  // b.none
  41f3f0:	ldur	x8, [x29, #-16]
  41f3f4:	ldrh	w9, [x8, #4]
  41f3f8:	cmp	w9, #0xff
  41f3fc:	b.eq	41f408 <ascii_strlower_n@plt+0x1afa8>  // b.none
  41f400:	stur	wzr, [x29, #-4]
  41f404:	b	41f5b8 <ascii_strlower_n@plt+0x1b158>
  41f408:	ldur	x8, [x29, #-24]
  41f40c:	ldrh	w9, [x8, #6]
  41f410:	cmp	w9, #0x5
  41f414:	b.ne	41f44c <ascii_strlower_n@plt+0x1afec>  // b.any
  41f418:	ldur	x0, [x29, #-16]
  41f41c:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f420:	ldur	x8, [x29, #-24]
  41f424:	str	x0, [sp, #72]
  41f428:	mov	x0, x8
  41f42c:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f430:	ldr	x1, [sp, #72]
  41f434:	str	x0, [sp, #64]
  41f438:	mov	x0, x1
  41f43c:	ldr	x1, [sp, #64]
  41f440:	bl	4042b0 <dns_name_equal@plt>
  41f444:	stur	w0, [x29, #-36]
  41f448:	b	41f498 <ascii_strlower_n@plt+0x1b038>
  41f44c:	ldur	x8, [x29, #-24]
  41f450:	ldrh	w9, [x8, #6]
  41f454:	cmp	w9, #0x27
  41f458:	b.ne	41f490 <ascii_strlower_n@plt+0x1b030>  // b.any
  41f45c:	ldur	x0, [x29, #-16]
  41f460:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f464:	ldur	x8, [x29, #-24]
  41f468:	str	x0, [sp, #56]
  41f46c:	mov	x0, x8
  41f470:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f474:	ldr	x1, [sp, #56]
  41f478:	str	x0, [sp, #48]
  41f47c:	mov	x0, x1
  41f480:	ldr	x1, [sp, #48]
  41f484:	bl	4042a0 <dns_name_endswith@plt>
  41f488:	stur	w0, [x29, #-36]
  41f48c:	b	41f498 <ascii_strlower_n@plt+0x1b038>
  41f490:	stur	wzr, [x29, #-4]
  41f494:	b	41f5b8 <ascii_strlower_n@plt+0x1b158>
  41f498:	ldur	w8, [x29, #-36]
  41f49c:	cbz	w8, 41f4ac <ascii_strlower_n@plt+0x1b04c>
  41f4a0:	ldur	w8, [x29, #-36]
  41f4a4:	stur	w8, [x29, #-4]
  41f4a8:	b	41f5b8 <ascii_strlower_n@plt+0x1b158>
  41f4ac:	ldur	x8, [x29, #-32]
  41f4b0:	cbz	x8, 41f5b4 <ascii_strlower_n@plt+0x1b154>
  41f4b4:	sub	x3, x29, #0x30
  41f4b8:	mov	x8, xzr
  41f4bc:	stur	x8, [x29, #-48]
  41f4c0:	ldur	x0, [x29, #-16]
  41f4c4:	str	x3, [sp, #40]
  41f4c8:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f4cc:	ldur	x1, [x29, #-32]
  41f4d0:	mov	w9, wzr
  41f4d4:	mov	w2, w9
  41f4d8:	ldr	x3, [sp, #40]
  41f4dc:	bl	4040a0 <dns_name_concat@plt>
  41f4e0:	stur	w0, [x29, #-36]
  41f4e4:	ldur	w9, [x29, #-36]
  41f4e8:	cmp	w9, #0x0
  41f4ec:	cset	w9, ge  // ge = tcont
  41f4f0:	tbnz	w9, #0, 41f508 <ascii_strlower_n@plt+0x1b0a8>
  41f4f4:	ldur	w8, [x29, #-36]
  41f4f8:	stur	w8, [x29, #-4]
  41f4fc:	mov	w8, #0x1                   	// #1
  41f500:	stur	w8, [x29, #-52]
  41f504:	b	41f59c <ascii_strlower_n@plt+0x1b13c>
  41f508:	ldur	x8, [x29, #-24]
  41f50c:	ldrh	w9, [x8, #6]
  41f510:	cmp	w9, #0x5
  41f514:	b.ne	41f550 <ascii_strlower_n@plt+0x1b0f0>  // b.any
  41f518:	ldur	x0, [x29, #-48]
  41f51c:	ldur	x8, [x29, #-24]
  41f520:	str	x0, [sp, #32]
  41f524:	mov	x0, x8
  41f528:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f52c:	ldr	x8, [sp, #32]
  41f530:	str	x0, [sp, #24]
  41f534:	mov	x0, x8
  41f538:	ldr	x1, [sp, #24]
  41f53c:	bl	4042b0 <dns_name_equal@plt>
  41f540:	stur	w0, [x29, #-4]
  41f544:	mov	w9, #0x1                   	// #1
  41f548:	stur	w9, [x29, #-52]
  41f54c:	b	41f59c <ascii_strlower_n@plt+0x1b13c>
  41f550:	ldur	x8, [x29, #-24]
  41f554:	ldrh	w9, [x8, #6]
  41f558:	cmp	w9, #0x27
  41f55c:	b.ne	41f598 <ascii_strlower_n@plt+0x1b138>  // b.any
  41f560:	ldur	x0, [x29, #-48]
  41f564:	ldur	x8, [x29, #-24]
  41f568:	str	x0, [sp, #16]
  41f56c:	mov	x0, x8
  41f570:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f574:	ldr	x8, [sp, #16]
  41f578:	str	x0, [sp, #8]
  41f57c:	mov	x0, x8
  41f580:	ldr	x1, [sp, #8]
  41f584:	bl	4042a0 <dns_name_endswith@plt>
  41f588:	stur	w0, [x29, #-4]
  41f58c:	mov	w9, #0x1                   	// #1
  41f590:	stur	w9, [x29, #-52]
  41f594:	b	41f59c <ascii_strlower_n@plt+0x1b13c>
  41f598:	stur	wzr, [x29, #-52]
  41f59c:	sub	x0, x29, #0x30
  41f5a0:	bl	41f2e8 <ascii_strlower_n@plt+0x1ae88>
  41f5a4:	ldur	w8, [x29, #-52]
  41f5a8:	cbz	w8, 41f5b4 <ascii_strlower_n@plt+0x1b154>
  41f5ac:	b	41f5b0 <ascii_strlower_n@plt+0x1b150>
  41f5b0:	b	41f5b8 <ascii_strlower_n@plt+0x1b158>
  41f5b4:	stur	wzr, [x29, #-4]
  41f5b8:	ldur	w0, [x29, #-4]
  41f5bc:	ldp	x29, x30, [sp, #144]
  41f5c0:	add	sp, sp, #0xa0
  41f5c4:	ret
  41f5c8:	sub	sp, sp, #0x40
  41f5cc:	stp	x29, x30, [sp, #48]
  41f5d0:	add	x29, sp, #0x30
  41f5d4:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f5d8:	add	x8, x8, #0xac0
  41f5dc:	add	x8, x8, #0x3
  41f5e0:	stur	x0, [x29, #-16]
  41f5e4:	str	x1, [sp, #24]
  41f5e8:	str	x8, [sp, #16]
  41f5ec:	ldr	x8, [sp, #24]
  41f5f0:	cmp	x8, #0x0
  41f5f4:	cset	w9, ne  // ne = any
  41f5f8:	mov	w10, #0x1                   	// #1
  41f5fc:	eor	w9, w9, #0x1
  41f600:	eor	w9, w9, w10
  41f604:	eor	w9, w9, w10
  41f608:	and	w9, w9, #0x1
  41f60c:	mov	w0, w9
  41f610:	sxtw	x8, w0
  41f614:	cbz	x8, 41f63c <ascii_strlower_n@plt+0x1b1dc>
  41f618:	mov	w8, wzr
  41f61c:	mov	w0, w8
  41f620:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f624:	add	x1, x1, #0xe45
  41f628:	ldr	x2, [sp, #16]
  41f62c:	mov	w3, #0x110                 	// #272
  41f630:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f634:	add	x4, x4, #0xe49
  41f638:	bl	4039d0 <log_assert_failed_realm@plt>
  41f63c:	ldur	x8, [x29, #-16]
  41f640:	cmp	x8, #0x0
  41f644:	cset	w9, ne  // ne = any
  41f648:	mov	w10, #0x1                   	// #1
  41f64c:	eor	w9, w9, #0x1
  41f650:	eor	w9, w9, w10
  41f654:	eor	w9, w9, w10
  41f658:	and	w9, w9, #0x1
  41f65c:	mov	w0, w9
  41f660:	sxtw	x8, w0
  41f664:	cbz	x8, 41f68c <ascii_strlower_n@plt+0x1b22c>
  41f668:	mov	w8, wzr
  41f66c:	mov	w0, w8
  41f670:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f674:	add	x1, x1, #0x5c2
  41f678:	ldr	x2, [sp, #16]
  41f67c:	mov	w3, #0x111                 	// #273
  41f680:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f684:	add	x4, x4, #0xe49
  41f688:	bl	4039d0 <log_assert_failed_realm@plt>
  41f68c:	ldr	x8, [sp, #24]
  41f690:	ldrh	w9, [x8, #4]
  41f694:	ldur	x8, [x29, #-16]
  41f698:	ldrh	w10, [x8, #4]
  41f69c:	cmp	w9, w10
  41f6a0:	b.eq	41f6ac <ascii_strlower_n@plt+0x1b24c>  // b.none
  41f6a4:	stur	wzr, [x29, #-4]
  41f6a8:	b	41f6f4 <ascii_strlower_n@plt+0x1b294>
  41f6ac:	ldr	x8, [sp, #24]
  41f6b0:	ldrh	w9, [x8, #6]
  41f6b4:	cmp	w9, #0x6
  41f6b8:	b.eq	41f6c4 <ascii_strlower_n@plt+0x1b264>  // b.none
  41f6bc:	stur	wzr, [x29, #-4]
  41f6c0:	b	41f6f4 <ascii_strlower_n@plt+0x1b294>
  41f6c4:	ldur	x0, [x29, #-16]
  41f6c8:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f6cc:	ldr	x8, [sp, #24]
  41f6d0:	str	x0, [sp, #8]
  41f6d4:	mov	x0, x8
  41f6d8:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f6dc:	ldr	x1, [sp, #8]
  41f6e0:	str	x0, [sp]
  41f6e4:	mov	x0, x1
  41f6e8:	ldr	x1, [sp]
  41f6ec:	bl	4042a0 <dns_name_endswith@plt>
  41f6f0:	stur	w0, [x29, #-4]
  41f6f4:	ldur	w0, [x29, #-4]
  41f6f8:	ldp	x29, x30, [sp, #48]
  41f6fc:	add	sp, sp, #0x40
  41f700:	ret
  41f704:	sub	sp, sp, #0x30
  41f708:	stp	x29, x30, [sp, #32]
  41f70c:	add	x29, sp, #0x20
  41f710:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f714:	add	x8, x8, #0xac0
  41f718:	add	x2, x8, #0x3
  41f71c:	stur	x0, [x29, #-8]
  41f720:	str	x1, [sp, #16]
  41f724:	str	x2, [sp, #8]
  41f728:	ldur	x8, [x29, #-8]
  41f72c:	cmp	x8, #0x0
  41f730:	cset	w9, ne  // ne = any
  41f734:	mov	w10, #0x1                   	// #1
  41f738:	eor	w9, w9, #0x1
  41f73c:	eor	w9, w9, w10
  41f740:	eor	w9, w9, w10
  41f744:	and	w9, w9, #0x1
  41f748:	mov	w0, w9
  41f74c:	sxtw	x8, w0
  41f750:	cbz	x8, 41f778 <ascii_strlower_n@plt+0x1b318>
  41f754:	mov	w8, wzr
  41f758:	mov	w0, w8
  41f75c:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f760:	add	x1, x1, #0x93
  41f764:	ldr	x2, [sp, #8]
  41f768:	mov	w3, #0x11f                 	// #287
  41f76c:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  41f770:	add	x4, x4, #0x593
  41f774:	bl	4039d0 <log_assert_failed_realm@plt>
  41f778:	ldur	x0, [x29, #-8]
  41f77c:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f780:	ldr	x1, [sp, #16]
  41f784:	bl	4042c0 <dns_name_hash_func@plt>
  41f788:	ldur	x8, [x29, #-8]
  41f78c:	add	x0, x8, #0x4
  41f790:	ldr	x2, [sp, #16]
  41f794:	mov	x8, #0x2                   	// #2
  41f798:	mov	x1, x8
  41f79c:	str	x8, [sp]
  41f7a0:	bl	404200 <siphash24_compress@plt>
  41f7a4:	ldur	x8, [x29, #-8]
  41f7a8:	add	x0, x8, #0x6
  41f7ac:	ldr	x2, [sp, #16]
  41f7b0:	ldr	x1, [sp]
  41f7b4:	bl	404200 <siphash24_compress@plt>
  41f7b8:	ldp	x29, x30, [sp, #32]
  41f7bc:	add	sp, sp, #0x30
  41f7c0:	ret
  41f7c4:	sub	sp, sp, #0x60
  41f7c8:	stp	x29, x30, [sp, #80]
  41f7cc:	add	x29, sp, #0x50
  41f7d0:	stur	x0, [x29, #-16]
  41f7d4:	stur	x1, [x29, #-24]
  41f7d8:	ldur	x0, [x29, #-16]
  41f7dc:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f7e0:	ldur	x8, [x29, #-24]
  41f7e4:	str	x0, [sp, #24]
  41f7e8:	mov	x0, x8
  41f7ec:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f7f0:	ldr	x1, [sp, #24]
  41f7f4:	str	x0, [sp, #16]
  41f7f8:	mov	x0, x1
  41f7fc:	ldr	x1, [sp, #16]
  41f800:	bl	4042d0 <dns_name_compare_func@plt>
  41f804:	stur	w0, [x29, #-28]
  41f808:	ldur	w9, [x29, #-28]
  41f80c:	cbz	w9, 41f81c <ascii_strlower_n@plt+0x1b3bc>
  41f810:	ldur	w8, [x29, #-28]
  41f814:	stur	w8, [x29, #-4]
  41f818:	b	41f908 <ascii_strlower_n@plt+0x1b4a8>
  41f81c:	ldur	x8, [x29, #-16]
  41f820:	ldrh	w9, [x8, #6]
  41f824:	sturh	w9, [x29, #-30]
  41f828:	ldur	x8, [x29, #-24]
  41f82c:	ldrh	w9, [x8, #6]
  41f830:	sturh	w9, [x29, #-32]
  41f834:	ldurh	w9, [x29, #-30]
  41f838:	ldurh	w10, [x29, #-32]
  41f83c:	cmp	w9, w10
  41f840:	b.ge	41f850 <ascii_strlower_n@plt+0x1b3f0>  // b.tcont
  41f844:	mov	w8, #0xffffffff            	// #-1
  41f848:	str	w8, [sp, #12]
  41f84c:	b	41f86c <ascii_strlower_n@plt+0x1b40c>
  41f850:	ldurh	w8, [x29, #-30]
  41f854:	ldurh	w9, [x29, #-32]
  41f858:	mov	w10, #0x1                   	// #1
  41f85c:	mov	w11, wzr
  41f860:	cmp	w8, w9
  41f864:	csel	w8, w10, w11, gt
  41f868:	str	w8, [sp, #12]
  41f86c:	ldr	w8, [sp, #12]
  41f870:	stur	w8, [x29, #-36]
  41f874:	ldur	w8, [x29, #-36]
  41f878:	stur	w8, [x29, #-28]
  41f87c:	ldur	w8, [x29, #-28]
  41f880:	cbz	w8, 41f890 <ascii_strlower_n@plt+0x1b430>
  41f884:	ldur	w8, [x29, #-28]
  41f888:	stur	w8, [x29, #-4]
  41f88c:	b	41f908 <ascii_strlower_n@plt+0x1b4a8>
  41f890:	ldur	x8, [x29, #-16]
  41f894:	ldrh	w9, [x8, #4]
  41f898:	sturh	w9, [x29, #-38]
  41f89c:	ldur	x8, [x29, #-24]
  41f8a0:	ldrh	w9, [x8, #4]
  41f8a4:	strh	w9, [sp, #40]
  41f8a8:	ldurh	w9, [x29, #-38]
  41f8ac:	ldrh	w10, [sp, #40]
  41f8b0:	cmp	w9, w10
  41f8b4:	b.ge	41f8c4 <ascii_strlower_n@plt+0x1b464>  // b.tcont
  41f8b8:	mov	w8, #0xffffffff            	// #-1
  41f8bc:	str	w8, [sp, #8]
  41f8c0:	b	41f8e0 <ascii_strlower_n@plt+0x1b480>
  41f8c4:	ldurh	w8, [x29, #-38]
  41f8c8:	ldrh	w9, [sp, #40]
  41f8cc:	mov	w10, #0x1                   	// #1
  41f8d0:	mov	w11, wzr
  41f8d4:	cmp	w8, w9
  41f8d8:	csel	w8, w10, w11, gt
  41f8dc:	str	w8, [sp, #8]
  41f8e0:	ldr	w8, [sp, #8]
  41f8e4:	str	w8, [sp, #36]
  41f8e8:	ldr	w8, [sp, #36]
  41f8ec:	stur	w8, [x29, #-28]
  41f8f0:	ldur	w8, [x29, #-28]
  41f8f4:	cbz	w8, 41f904 <ascii_strlower_n@plt+0x1b4a4>
  41f8f8:	ldur	w8, [x29, #-28]
  41f8fc:	stur	w8, [x29, #-4]
  41f900:	b	41f908 <ascii_strlower_n@plt+0x1b4a8>
  41f904:	stur	wzr, [x29, #-4]
  41f908:	ldur	w0, [x29, #-4]
  41f90c:	ldp	x29, x30, [sp, #80]
  41f910:	add	sp, sp, #0x60
  41f914:	ret
  41f918:	sub	sp, sp, #0xb0
  41f91c:	stp	x29, x30, [sp, #160]
  41f920:	add	x29, sp, #0xa0
  41f924:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  41f928:	add	x8, x8, #0x7e4
  41f92c:	adrp	x9, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f930:	add	x9, x9, #0xead
  41f934:	stur	x0, [x29, #-8]
  41f938:	stur	x1, [x29, #-16]
  41f93c:	stur	x2, [x29, #-24]
  41f940:	ldur	x10, [x29, #-16]
  41f944:	stur	x10, [x29, #-48]
  41f948:	ldur	x10, [x29, #-8]
  41f94c:	ldrh	w0, [x10, #4]
  41f950:	stur	x8, [x29, #-56]
  41f954:	stur	x9, [x29, #-64]
  41f958:	bl	42c0f0 <ascii_strlower_n@plt+0x27c90>
  41f95c:	stur	x0, [x29, #-32]
  41f960:	ldur	x8, [x29, #-8]
  41f964:	ldrh	w0, [x8, #6]
  41f968:	bl	42adf8 <ascii_strlower_n@plt+0x26998>
  41f96c:	stur	x0, [x29, #-40]
  41f970:	ldur	x0, [x29, #-16]
  41f974:	ldur	x1, [x29, #-24]
  41f978:	ldur	x8, [x29, #-8]
  41f97c:	stur	x0, [x29, #-72]
  41f980:	mov	x0, x8
  41f984:	str	x1, [sp, #80]
  41f988:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  41f98c:	ldur	x8, [x29, #-32]
  41f990:	str	x0, [sp, #72]
  41f994:	mov	x0, x8
  41f998:	bl	41fa80 <ascii_strlower_n@plt+0x1b620>
  41f99c:	ldur	x8, [x29, #-32]
  41f9a0:	cmp	x8, #0x0
  41f9a4:	ldur	x8, [x29, #-56]
  41f9a8:	ldur	x9, [x29, #-64]
  41f9ac:	csel	x5, x8, x9, ne  // ne = any
  41f9b0:	ldur	x10, [x29, #-32]
  41f9b4:	str	x0, [sp, #64]
  41f9b8:	str	x5, [sp, #56]
  41f9bc:	cbz	x10, 41f9cc <ascii_strlower_n@plt+0x1b56c>
  41f9c0:	mov	w8, wzr
  41f9c4:	str	w8, [sp, #52]
  41f9c8:	b	41f9d8 <ascii_strlower_n@plt+0x1b578>
  41f9cc:	ldur	x8, [x29, #-8]
  41f9d0:	ldrh	w9, [x8, #4]
  41f9d4:	str	w9, [sp, #52]
  41f9d8:	ldr	w8, [sp, #52]
  41f9dc:	ldur	x0, [x29, #-40]
  41f9e0:	str	w8, [sp, #48]
  41f9e4:	bl	41fa80 <ascii_strlower_n@plt+0x1b620>
  41f9e8:	ldur	x9, [x29, #-40]
  41f9ec:	adrp	x10, 431000 <ascii_strlower_n@plt+0x2cba0>
  41f9f0:	add	x10, x10, #0xeb3
  41f9f4:	adrp	x11, 42d000 <ascii_strlower_n@plt+0x28ba0>
  41f9f8:	add	x11, x11, #0x7e4
  41f9fc:	cmp	x9, #0x0
  41fa00:	csel	x9, x11, x10, ne  // ne = any
  41fa04:	ldur	x10, [x29, #-40]
  41fa08:	str	x0, [sp, #40]
  41fa0c:	str	x9, [sp, #32]
  41fa10:	cbz	x10, 41fa20 <ascii_strlower_n@plt+0x1b5c0>
  41fa14:	mov	w8, wzr
  41fa18:	str	w8, [sp, #28]
  41fa1c:	b	41fa2c <ascii_strlower_n@plt+0x1b5cc>
  41fa20:	ldur	x8, [x29, #-8]
  41fa24:	ldrh	w9, [x8, #6]
  41fa28:	str	w9, [sp, #28]
  41fa2c:	ldr	w8, [sp, #28]
  41fa30:	ldur	x0, [x29, #-72]
  41fa34:	ldr	x1, [sp, #80]
  41fa38:	adrp	x2, 431000 <ascii_strlower_n@plt+0x2cba0>
  41fa3c:	add	x2, x2, #0xe98
  41fa40:	ldr	x3, [sp, #72]
  41fa44:	ldr	x4, [sp, #64]
  41fa48:	ldr	x5, [sp, #56]
  41fa4c:	ldr	w6, [sp, #48]
  41fa50:	ldr	x7, [sp, #40]
  41fa54:	mov	x9, sp
  41fa58:	ldr	x10, [sp, #32]
  41fa5c:	str	x10, [x9]
  41fa60:	mov	x9, sp
  41fa64:	str	w8, [x9, #8]
  41fa68:	bl	4042e0 <snprintf@plt>
  41fa6c:	ldur	x9, [x29, #-48]
  41fa70:	mov	x0, x9
  41fa74:	ldp	x29, x30, [sp, #160]
  41fa78:	add	sp, sp, #0xb0
  41fa7c:	ret
  41fa80:	sub	sp, sp, #0x20
  41fa84:	str	x0, [sp, #24]
  41fa88:	ldr	x8, [sp, #24]
  41fa8c:	str	x8, [sp, #16]
  41fa90:	cbz	x8, 41faa0 <ascii_strlower_n@plt+0x1b640>
  41fa94:	ldr	x8, [sp, #16]
  41fa98:	str	x8, [sp, #8]
  41fa9c:	b	41faac <ascii_strlower_n@plt+0x1b64c>
  41faa0:	adrp	x8, 42d000 <ascii_strlower_n@plt+0x28ba0>
  41faa4:	add	x8, x8, #0x7e4
  41faa8:	str	x8, [sp, #8]
  41faac:	ldr	x8, [sp, #8]
  41fab0:	mov	x0, x8
  41fab4:	add	sp, sp, #0x20
  41fab8:	ret
  41fabc:	sub	sp, sp, #0x30
  41fac0:	stp	x29, x30, [sp, #32]
  41fac4:	add	x29, sp, #0x20
  41fac8:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41facc:	add	x8, x8, #0xac0
  41fad0:	add	x8, x8, #0x3
  41fad4:	str	x0, [sp, #16]
  41fad8:	str	x1, [sp, #8]
  41fadc:	str	x8, [sp]
  41fae0:	ldr	x8, [sp, #16]
  41fae4:	cmp	x8, #0x0
  41fae8:	cset	w9, ne  // ne = any
  41faec:	mov	w10, #0x1                   	// #1
  41faf0:	eor	w9, w9, #0x1
  41faf4:	eor	w9, w9, w10
  41faf8:	eor	w9, w9, w10
  41fafc:	and	w9, w9, #0x1
  41fb00:	mov	w0, w9
  41fb04:	sxtw	x8, w0
  41fb08:	cbz	x8, 41fb30 <ascii_strlower_n@plt+0x1b6d0>
  41fb0c:	mov	w8, wzr
  41fb10:	mov	w0, w8
  41fb14:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  41fb18:	add	x1, x1, #0xeb8
  41fb1c:	ldr	x2, [sp]
  41fb20:	mov	w3, #0x14d                 	// #333
  41fb24:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41fb28:	add	x4, x4, #0xeba
  41fb2c:	bl	4039d0 <log_assert_failed_realm@plt>
  41fb30:	ldr	x8, [sp, #8]
  41fb34:	cmp	x8, #0x0
  41fb38:	cset	w9, ne  // ne = any
  41fb3c:	mov	w10, #0x1                   	// #1
  41fb40:	eor	w9, w9, #0x1
  41fb44:	eor	w9, w9, w10
  41fb48:	eor	w9, w9, w10
  41fb4c:	and	w9, w9, #0x1
  41fb50:	mov	w0, w9
  41fb54:	sxtw	x8, w0
  41fb58:	cbz	x8, 41fb80 <ascii_strlower_n@plt+0x1b720>
  41fb5c:	mov	w8, wzr
  41fb60:	mov	w0, w8
  41fb64:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  41fb68:	add	x1, x1, #0xa3
  41fb6c:	ldr	x2, [sp]
  41fb70:	mov	w3, #0x14e                 	// #334
  41fb74:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41fb78:	add	x4, x4, #0xeba
  41fb7c:	bl	4039d0 <log_assert_failed_realm@plt>
  41fb80:	ldr	x8, [sp, #16]
  41fb84:	ldr	x8, [x8]
  41fb88:	cbnz	x8, 41fb9c <ascii_strlower_n@plt+0x1b73c>
  41fb8c:	mov	w8, wzr
  41fb90:	and	w8, w8, #0x1
  41fb94:	sturb	w8, [x29, #-1]
  41fb98:	b	41fcd8 <ascii_strlower_n@plt+0x1b878>
  41fb9c:	ldr	x8, [sp, #8]
  41fba0:	ldr	x8, [x8]
  41fba4:	cbnz	x8, 41fbb8 <ascii_strlower_n@plt+0x1b758>
  41fba8:	mov	w8, wzr
  41fbac:	and	w8, w8, #0x1
  41fbb0:	sturb	w8, [x29, #-1]
  41fbb4:	b	41fcd8 <ascii_strlower_n@plt+0x1b878>
  41fbb8:	ldr	x8, [sp, #16]
  41fbbc:	ldr	x8, [x8]
  41fbc0:	ldr	w9, [x8]
  41fbc4:	mov	w10, #0xffffffff            	// #-1
  41fbc8:	cmp	w9, w10
  41fbcc:	b.ne	41fbe0 <ascii_strlower_n@plt+0x1b780>  // b.any
  41fbd0:	mov	w8, wzr
  41fbd4:	and	w8, w8, #0x1
  41fbd8:	sturb	w8, [x29, #-1]
  41fbdc:	b	41fcd8 <ascii_strlower_n@plt+0x1b878>
  41fbe0:	ldr	x8, [sp, #8]
  41fbe4:	ldr	x8, [x8]
  41fbe8:	ldr	w9, [x8]
  41fbec:	mov	w10, #0xffffffff            	// #-1
  41fbf0:	cmp	w9, w10
  41fbf4:	b.ne	41fc08 <ascii_strlower_n@plt+0x1b7a8>  // b.any
  41fbf8:	mov	w8, wzr
  41fbfc:	and	w8, w8, #0x1
  41fc00:	sturb	w8, [x29, #-1]
  41fc04:	b	41fcd8 <ascii_strlower_n@plt+0x1b878>
  41fc08:	ldr	x8, [sp, #16]
  41fc0c:	ldr	x8, [x8]
  41fc10:	ldr	x9, [sp, #8]
  41fc14:	ldr	x9, [x9]
  41fc18:	cmp	x8, x9
  41fc1c:	b.ne	41fc30 <ascii_strlower_n@plt+0x1b7d0>  // b.any
  41fc20:	mov	w8, #0x1                   	// #1
  41fc24:	and	w8, w8, #0x1
  41fc28:	sturb	w8, [x29, #-1]
  41fc2c:	b	41fcd8 <ascii_strlower_n@plt+0x1b878>
  41fc30:	ldr	x8, [sp, #16]
  41fc34:	ldr	x0, [x8]
  41fc38:	ldr	x8, [sp, #8]
  41fc3c:	ldr	x1, [x8]
  41fc40:	bl	41efe0 <ascii_strlower_n@plt+0x1ab80>
  41fc44:	cmp	w0, #0x0
  41fc48:	cset	w9, gt
  41fc4c:	tbnz	w9, #0, 41fc60 <ascii_strlower_n@plt+0x1b800>
  41fc50:	mov	w8, wzr
  41fc54:	and	w8, w8, #0x1
  41fc58:	sturb	w8, [x29, #-1]
  41fc5c:	b	41fcd8 <ascii_strlower_n@plt+0x1b878>
  41fc60:	ldr	x8, [sp, #16]
  41fc64:	ldr	x8, [x8]
  41fc68:	ldr	w9, [x8]
  41fc6c:	ldr	x8, [sp, #8]
  41fc70:	ldr	x8, [x8]
  41fc74:	ldr	w10, [x8]
  41fc78:	cmp	w9, w10
  41fc7c:	b.ls	41fca8 <ascii_strlower_n@plt+0x1b848>  // b.plast
  41fc80:	ldr	x8, [sp, #8]
  41fc84:	ldr	x0, [x8]
  41fc88:	bl	41eccc <ascii_strlower_n@plt+0x1a86c>
  41fc8c:	ldr	x8, [sp, #16]
  41fc90:	ldr	x8, [x8]
  41fc94:	mov	x0, x8
  41fc98:	bl	41e8dc <ascii_strlower_n@plt+0x1a47c>
  41fc9c:	ldr	x8, [sp, #8]
  41fca0:	str	x0, [x8]
  41fca4:	b	41fccc <ascii_strlower_n@plt+0x1b86c>
  41fca8:	ldr	x8, [sp, #16]
  41fcac:	ldr	x0, [x8]
  41fcb0:	bl	41eccc <ascii_strlower_n@plt+0x1a86c>
  41fcb4:	ldr	x8, [sp, #8]
  41fcb8:	ldr	x8, [x8]
  41fcbc:	mov	x0, x8
  41fcc0:	bl	41e8dc <ascii_strlower_n@plt+0x1a47c>
  41fcc4:	ldr	x8, [sp, #16]
  41fcc8:	str	x0, [x8]
  41fccc:	mov	w8, #0x1                   	// #1
  41fcd0:	and	w8, w8, #0x1
  41fcd4:	sturb	w8, [x29, #-1]
  41fcd8:	ldurb	w8, [x29, #-1]
  41fcdc:	and	w0, w8, #0x1
  41fce0:	ldp	x29, x30, [sp, #32]
  41fce4:	add	sp, sp, #0x30
  41fce8:	ret
  41fcec:	sub	sp, sp, #0x30
  41fcf0:	stp	x29, x30, [sp, #32]
  41fcf4:	add	x29, sp, #0x20
  41fcf8:	mov	x8, #0x1                   	// #1
  41fcfc:	mov	x1, #0x80                  	// #128
  41fd00:	str	x0, [sp, #16]
  41fd04:	mov	x0, x8
  41fd08:	bl	4040d0 <calloc@plt>
  41fd0c:	str	x0, [sp, #8]
  41fd10:	ldr	x8, [sp, #8]
  41fd14:	cbnz	x8, 41fd24 <ascii_strlower_n@plt+0x1b8c4>
  41fd18:	mov	x8, xzr
  41fd1c:	stur	x8, [x29, #-8]
  41fd20:	b	41fd68 <ascii_strlower_n@plt+0x1b908>
  41fd24:	ldr	x8, [sp, #8]
  41fd28:	mov	w9, #0x1                   	// #1
  41fd2c:	str	w9, [x8]
  41fd30:	ldr	x0, [sp, #16]
  41fd34:	bl	41e8dc <ascii_strlower_n@plt+0x1a47c>
  41fd38:	ldr	x8, [sp, #8]
  41fd3c:	str	x0, [x8, #8]
  41fd40:	ldr	x8, [sp, #8]
  41fd44:	mov	x10, #0xffffffffffffffff    	// #-1
  41fd48:	str	x10, [x8, #32]
  41fd4c:	ldr	x8, [sp, #8]
  41fd50:	mov	w9, #0xffffffff            	// #-1
  41fd54:	str	w9, [x8, #44]
  41fd58:	ldr	x8, [sp, #8]
  41fd5c:	str	w9, [x8, #40]
  41fd60:	ldr	x8, [sp, #8]
  41fd64:	stur	x8, [x29, #-8]
  41fd68:	ldur	x0, [x29, #-8]
  41fd6c:	ldp	x29, x30, [sp, #32]
  41fd70:	add	sp, sp, #0x30
  41fd74:	ret
  41fd78:	sub	sp, sp, #0x40
  41fd7c:	stp	x29, x30, [sp, #48]
  41fd80:	add	x29, sp, #0x30
  41fd84:	mov	x8, xzr
  41fd88:	sturh	w0, [x29, #-10]
  41fd8c:	sturh	w1, [x29, #-12]
  41fd90:	str	x2, [sp, #24]
  41fd94:	str	x8, [sp, #16]
  41fd98:	ldurh	w0, [x29, #-10]
  41fd9c:	ldurh	w1, [x29, #-12]
  41fda0:	ldr	x2, [sp, #24]
  41fda4:	bl	41e4f4 <ascii_strlower_n@plt+0x1a094>
  41fda8:	str	x0, [sp, #16]
  41fdac:	ldr	x8, [sp, #16]
  41fdb0:	cbnz	x8, 41fdc8 <ascii_strlower_n@plt+0x1b968>
  41fdb4:	mov	x8, xzr
  41fdb8:	stur	x8, [x29, #-8]
  41fdbc:	mov	w9, #0x1                   	// #1
  41fdc0:	str	w9, [sp, #12]
  41fdc4:	b	41fddc <ascii_strlower_n@plt+0x1b97c>
  41fdc8:	ldr	x0, [sp, #16]
  41fdcc:	bl	41fcec <ascii_strlower_n@plt+0x1b88c>
  41fdd0:	stur	x0, [x29, #-8]
  41fdd4:	mov	w8, #0x1                   	// #1
  41fdd8:	str	w8, [sp, #12]
  41fddc:	add	x0, sp, #0x10
  41fde0:	bl	41fdf4 <ascii_strlower_n@plt+0x1b994>
  41fde4:	ldur	x0, [x29, #-8]
  41fde8:	ldp	x29, x30, [sp, #48]
  41fdec:	add	sp, sp, #0x40
  41fdf0:	ret
  41fdf4:	sub	sp, sp, #0x20
  41fdf8:	stp	x29, x30, [sp, #16]
  41fdfc:	add	x29, sp, #0x10
  41fe00:	str	x0, [sp, #8]
  41fe04:	ldr	x8, [sp, #8]
  41fe08:	ldr	x8, [x8]
  41fe0c:	cbz	x8, 41fe1c <ascii_strlower_n@plt+0x1b9bc>
  41fe10:	ldr	x8, [sp, #8]
  41fe14:	ldr	x0, [x8]
  41fe18:	bl	41eccc <ascii_strlower_n@plt+0x1a86c>
  41fe1c:	ldp	x29, x30, [sp, #16]
  41fe20:	add	sp, sp, #0x20
  41fe24:	ret
  41fe28:	sub	sp, sp, #0x30
  41fe2c:	stp	x29, x30, [sp, #32]
  41fe30:	add	x29, sp, #0x20
  41fe34:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41fe38:	add	x8, x8, #0xac0
  41fe3c:	add	x2, x8, #0x3
  41fe40:	str	x0, [sp, #16]
  41fe44:	ldr	x8, [sp, #16]
  41fe48:	str	x2, [sp, #8]
  41fe4c:	cbnz	x8, 41fe5c <ascii_strlower_n@plt+0x1b9fc>
  41fe50:	mov	x8, xzr
  41fe54:	stur	x8, [x29, #-8]
  41fe58:	b	41fec8 <ascii_strlower_n@plt+0x1ba68>
  41fe5c:	ldr	x8, [sp, #16]
  41fe60:	ldr	w9, [x8]
  41fe64:	cmp	w9, #0x0
  41fe68:	cset	w9, hi  // hi = pmore
  41fe6c:	mov	w10, #0x1                   	// #1
  41fe70:	eor	w9, w9, #0x1
  41fe74:	eor	w9, w9, w10
  41fe78:	eor	w9, w9, w10
  41fe7c:	and	w9, w9, #0x1
  41fe80:	mov	w0, w9
  41fe84:	sxtw	x8, w0
  41fe88:	cbz	x8, 41feb0 <ascii_strlower_n@plt+0x1ba50>
  41fe8c:	mov	w8, wzr
  41fe90:	mov	w0, w8
  41fe94:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41fe98:	add	x1, x1, #0xd0a
  41fe9c:	ldr	x2, [sp, #8]
  41fea0:	mov	w3, #0x1ec                 	// #492
  41fea4:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41fea8:	add	x4, x4, #0xefe
  41feac:	bl	4039d0 <log_assert_failed_realm@plt>
  41feb0:	ldr	x8, [sp, #16]
  41feb4:	ldr	w9, [x8]
  41feb8:	add	w9, w9, #0x1
  41febc:	str	w9, [x8]
  41fec0:	ldr	x8, [sp, #16]
  41fec4:	stur	x8, [x29, #-8]
  41fec8:	ldur	x0, [x29, #-8]
  41fecc:	ldp	x29, x30, [sp, #32]
  41fed0:	add	sp, sp, #0x30
  41fed4:	ret
  41fed8:	sub	sp, sp, #0x30
  41fedc:	stp	x29, x30, [sp, #32]
  41fee0:	add	x29, sp, #0x20
  41fee4:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41fee8:	add	x8, x8, #0xac0
  41feec:	add	x2, x8, #0x3
  41fef0:	str	x0, [sp, #16]
  41fef4:	ldr	x8, [sp, #16]
  41fef8:	str	x2, [sp, #8]
  41fefc:	cbnz	x8, 41ff0c <ascii_strlower_n@plt+0x1baac>
  41ff00:	mov	x8, xzr
  41ff04:	stur	x8, [x29, #-8]
  41ff08:	b	41ff9c <ascii_strlower_n@plt+0x1bb3c>
  41ff0c:	ldr	x8, [sp, #16]
  41ff10:	ldr	w9, [x8]
  41ff14:	cmp	w9, #0x0
  41ff18:	cset	w9, hi  // hi = pmore
  41ff1c:	mov	w10, #0x1                   	// #1
  41ff20:	eor	w9, w9, #0x1
  41ff24:	eor	w9, w9, w10
  41ff28:	eor	w9, w9, w10
  41ff2c:	and	w9, w9, #0x1
  41ff30:	mov	w0, w9
  41ff34:	sxtw	x8, w0
  41ff38:	cbz	x8, 41ff60 <ascii_strlower_n@plt+0x1bb00>
  41ff3c:	mov	w8, wzr
  41ff40:	mov	w0, w8
  41ff44:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  41ff48:	add	x1, x1, #0xd0a
  41ff4c:	ldr	x2, [sp, #8]
  41ff50:	mov	w3, #0x1ec                 	// #492
  41ff54:	adrp	x4, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ff58:	add	x4, x4, #0xf3e
  41ff5c:	bl	4039d0 <log_assert_failed_realm@plt>
  41ff60:	ldr	x8, [sp, #16]
  41ff64:	ldr	w9, [x8]
  41ff68:	subs	w9, w9, #0x1
  41ff6c:	str	w9, [x8]
  41ff70:	ldr	x8, [sp, #16]
  41ff74:	ldr	w9, [x8]
  41ff78:	cmp	w9, #0x0
  41ff7c:	cset	w9, ls  // ls = plast
  41ff80:	tbnz	w9, #0, 41ff90 <ascii_strlower_n@plt+0x1bb30>
  41ff84:	mov	x8, xzr
  41ff88:	stur	x8, [x29, #-8]
  41ff8c:	b	41ff9c <ascii_strlower_n@plt+0x1bb3c>
  41ff90:	ldr	x0, [sp, #16]
  41ff94:	bl	41ffac <ascii_strlower_n@plt+0x1bb4c>
  41ff98:	stur	x0, [x29, #-8]
  41ff9c:	ldur	x0, [x29, #-8]
  41ffa0:	ldp	x29, x30, [sp, #32]
  41ffa4:	add	sp, sp, #0x30
  41ffa8:	ret
  41ffac:	sub	sp, sp, #0x30
  41ffb0:	stp	x29, x30, [sp, #32]
  41ffb4:	add	x29, sp, #0x20
  41ffb8:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  41ffbc:	add	x8, x8, #0xac0
  41ffc0:	add	x2, x8, #0x3
  41ffc4:	stur	x0, [x29, #-8]
  41ffc8:	str	x2, [sp, #16]
  41ffcc:	ldur	x8, [x29, #-8]
  41ffd0:	cmp	x8, #0x0
  41ffd4:	cset	w9, ne  // ne = any
  41ffd8:	mov	w10, #0x1                   	// #1
  41ffdc:	eor	w9, w9, #0x1
  41ffe0:	eor	w9, w9, w10
  41ffe4:	eor	w9, w9, w10
  41ffe8:	and	w9, w9, #0x1
  41ffec:	mov	w0, w9
  41fff0:	sxtw	x8, w0
  41fff4:	cbz	x8, 42001c <ascii_strlower_n@plt+0x1bbbc>
  41fff8:	mov	w8, wzr
  41fffc:	mov	w0, w8
  420000:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  420004:	add	x1, x1, #0x20f
  420008:	ldr	x2, [sp, #16]
  42000c:	mov	w3, #0x18e                 	// #398
  420010:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  420014:	add	x4, x4, #0x5dd
  420018:	bl	4039d0 <log_assert_failed_realm@plt>
  42001c:	ldur	x8, [x29, #-8]
  420020:	ldr	x8, [x8, #8]
  420024:	cbz	x8, 420314 <ascii_strlower_n@plt+0x1beb4>
  420028:	ldur	x8, [x29, #-8]
  42002c:	ldr	x8, [x8, #8]
  420030:	ldrh	w9, [x8, #6]
  420034:	cmp	w9, #0x1
  420038:	str	w9, [sp, #12]
  42003c:	b.eq	420290 <ascii_strlower_n@plt+0x1be30>  // b.none
  420040:	b	420044 <ascii_strlower_n@plt+0x1bbe4>
  420044:	ldr	w8, [sp, #12]
  420048:	cmp	w8, #0x2
  42004c:	b.eq	420198 <ascii_strlower_n@plt+0x1bd38>  // b.none
  420050:	b	420054 <ascii_strlower_n@plt+0x1bbf4>
  420054:	ldr	w8, [sp, #12]
  420058:	cmp	w8, #0x5
  42005c:	b.eq	420198 <ascii_strlower_n@plt+0x1bd38>  // b.none
  420060:	b	420064 <ascii_strlower_n@plt+0x1bc04>
  420064:	ldr	w8, [sp, #12]
  420068:	cmp	w8, #0x6
  42006c:	b.eq	4201d4 <ascii_strlower_n@plt+0x1bd74>  // b.none
  420070:	b	420074 <ascii_strlower_n@plt+0x1bc14>
  420074:	ldr	w8, [sp, #12]
  420078:	cmp	w8, #0xc
  42007c:	b.eq	420198 <ascii_strlower_n@plt+0x1bd38>  // b.none
  420080:	b	420084 <ascii_strlower_n@plt+0x1bc24>
  420084:	ldr	w8, [sp, #12]
  420088:	cmp	w8, #0xd
  42008c:	b.eq	4201a8 <ascii_strlower_n@plt+0x1bd48>  // b.none
  420090:	b	420094 <ascii_strlower_n@plt+0x1bc34>
  420094:	ldr	w8, [sp, #12]
  420098:	cmp	w8, #0xf
  42009c:	b.eq	4201f0 <ascii_strlower_n@plt+0x1bd90>  // b.none
  4200a0:	b	4200a4 <ascii_strlower_n@plt+0x1bc44>
  4200a4:	ldr	w8, [sp, #12]
  4200a8:	cmp	w8, #0x10
  4200ac:	b.eq	4201c4 <ascii_strlower_n@plt+0x1bd64>  // b.none
  4200b0:	b	4200b4 <ascii_strlower_n@plt+0x1bc54>
  4200b4:	ldr	w8, [sp, #12]
  4200b8:	subs	w9, w8, #0x1c
  4200bc:	cmp	w9, #0x1
  4200c0:	b.ls	420290 <ascii_strlower_n@plt+0x1be30>  // b.plast
  4200c4:	b	4200c8 <ascii_strlower_n@plt+0x1bc68>
  4200c8:	ldr	w8, [sp, #12]
  4200cc:	cmp	w8, #0x21
  4200d0:	b.eq	420188 <ascii_strlower_n@plt+0x1bd28>  // b.none
  4200d4:	b	4200d8 <ascii_strlower_n@plt+0x1bc78>
  4200d8:	ldr	w8, [sp, #12]
  4200dc:	cmp	w8, #0x27
  4200e0:	b.eq	420198 <ascii_strlower_n@plt+0x1bd38>  // b.none
  4200e4:	b	4200e8 <ascii_strlower_n@plt+0x1bc88>
  4200e8:	ldr	w8, [sp, #12]
  4200ec:	cmp	w8, #0x2b
  4200f0:	b.eq	420200 <ascii_strlower_n@plt+0x1bda0>  // b.none
  4200f4:	b	4200f8 <ascii_strlower_n@plt+0x1bc98>
  4200f8:	ldr	w8, [sp, #12]
  4200fc:	cmp	w8, #0x2c
  420100:	b.eq	420210 <ascii_strlower_n@plt+0x1bdb0>  // b.none
  420104:	b	420108 <ascii_strlower_n@plt+0x1bca8>
  420108:	ldr	w8, [sp, #12]
  42010c:	cmp	w8, #0x2e
  420110:	b.eq	420230 <ascii_strlower_n@plt+0x1bdd0>  // b.none
  420114:	b	420118 <ascii_strlower_n@plt+0x1bcb8>
  420118:	ldr	w8, [sp, #12]
  42011c:	cmp	w8, #0x2f
  420120:	b.eq	42024c <ascii_strlower_n@plt+0x1bdec>  // b.none
  420124:	b	420128 <ascii_strlower_n@plt+0x1bcc8>
  420128:	ldr	w8, [sp, #12]
  42012c:	cmp	w8, #0x30
  420130:	b.eq	420220 <ascii_strlower_n@plt+0x1bdc0>  // b.none
  420134:	b	420138 <ascii_strlower_n@plt+0x1bcd8>
  420138:	ldr	w8, [sp, #12]
  42013c:	cmp	w8, #0x32
  420140:	b.eq	420268 <ascii_strlower_n@plt+0x1be08>  // b.none
  420144:	b	420148 <ascii_strlower_n@plt+0x1bce8>
  420148:	ldr	w8, [sp, #12]
  42014c:	cmp	w8, #0x34
  420150:	b.eq	420294 <ascii_strlower_n@plt+0x1be34>  // b.none
  420154:	b	420158 <ascii_strlower_n@plt+0x1bcf8>
  420158:	ldr	w8, [sp, #12]
  42015c:	cmp	w8, #0x3d
  420160:	b.eq	4202c0 <ascii_strlower_n@plt+0x1be60>  // b.none
  420164:	b	420168 <ascii_strlower_n@plt+0x1bd08>
  420168:	ldr	w8, [sp, #12]
  42016c:	cmp	w8, #0x63
  420170:	b.eq	4201c4 <ascii_strlower_n@plt+0x1bd64>  // b.none
  420174:	b	420178 <ascii_strlower_n@plt+0x1bd18>
  420178:	ldr	w8, [sp, #12]
  42017c:	cmp	w8, #0x101
  420180:	b.eq	4202a4 <ascii_strlower_n@plt+0x1be44>  // b.none
  420184:	b	4202c0 <ascii_strlower_n@plt+0x1be60>
  420188:	ldur	x8, [x29, #-8]
  42018c:	ldr	x0, [x8, #88]
  420190:	bl	403ac0 <free@plt>
  420194:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  420198:	ldur	x8, [x29, #-8]
  42019c:	ldr	x0, [x8, #80]
  4201a0:	bl	403ac0 <free@plt>
  4201a4:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  4201a8:	ldur	x8, [x29, #-8]
  4201ac:	ldr	x0, [x8, #80]
  4201b0:	bl	403ac0 <free@plt>
  4201b4:	ldur	x8, [x29, #-8]
  4201b8:	ldr	x0, [x8, #88]
  4201bc:	bl	403ac0 <free@plt>
  4201c0:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  4201c4:	ldur	x8, [x29, #-8]
  4201c8:	ldr	x0, [x8, #80]
  4201cc:	bl	4250ac <ascii_strlower_n@plt+0x20c4c>
  4201d0:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  4201d4:	ldur	x8, [x29, #-8]
  4201d8:	ldr	x0, [x8, #80]
  4201dc:	bl	403ac0 <free@plt>
  4201e0:	ldur	x8, [x29, #-8]
  4201e4:	ldr	x0, [x8, #88]
  4201e8:	bl	403ac0 <free@plt>
  4201ec:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  4201f0:	ldur	x8, [x29, #-8]
  4201f4:	ldr	x0, [x8, #88]
  4201f8:	bl	403ac0 <free@plt>
  4201fc:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  420200:	ldur	x8, [x29, #-8]
  420204:	ldr	x0, [x8, #88]
  420208:	bl	403ac0 <free@plt>
  42020c:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  420210:	ldur	x8, [x29, #-8]
  420214:	ldr	x0, [x8, #88]
  420218:	bl	403ac0 <free@plt>
  42021c:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  420220:	ldur	x8, [x29, #-8]
  420224:	ldr	x0, [x8, #88]
  420228:	bl	403ac0 <free@plt>
  42022c:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  420230:	ldur	x8, [x29, #-8]
  420234:	ldr	x0, [x8, #104]
  420238:	bl	403ac0 <free@plt>
  42023c:	ldur	x8, [x29, #-8]
  420240:	ldr	x0, [x8, #112]
  420244:	bl	403ac0 <free@plt>
  420248:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  42024c:	ldur	x8, [x29, #-8]
  420250:	ldr	x0, [x8, #80]
  420254:	bl	403ac0 <free@plt>
  420258:	ldur	x8, [x29, #-8]
  42025c:	ldr	x0, [x8, #88]
  420260:	bl	4042f0 <bitmap_free@plt>
  420264:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  420268:	ldur	x8, [x29, #-8]
  42026c:	ldr	x0, [x8, #104]
  420270:	bl	403ac0 <free@plt>
  420274:	ldur	x8, [x29, #-8]
  420278:	ldr	x0, [x8, #88]
  42027c:	bl	403ac0 <free@plt>
  420280:	ldur	x8, [x29, #-8]
  420284:	ldr	x0, [x8, #120]
  420288:	bl	4042f0 <bitmap_free@plt>
  42028c:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  420290:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  420294:	ldur	x8, [x29, #-8]
  420298:	ldr	x0, [x8, #88]
  42029c:	bl	403ac0 <free@plt>
  4202a0:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  4202a4:	ldur	x8, [x29, #-8]
  4202a8:	ldr	x0, [x8, #88]
  4202ac:	bl	403ac0 <free@plt>
  4202b0:	ldur	x8, [x29, #-8]
  4202b4:	ldr	x0, [x8, #96]
  4202b8:	bl	403ac0 <free@plt>
  4202bc:	b	4202dc <ascii_strlower_n@plt+0x1be7c>
  4202c0:	ldur	x8, [x29, #-8]
  4202c4:	ldrb	w9, [x8, #48]
  4202c8:	and	w9, w9, #0x1
  4202cc:	tbnz	w9, #0, 4202dc <ascii_strlower_n@plt+0x1be7c>
  4202d0:	ldur	x8, [x29, #-8]
  4202d4:	ldr	x0, [x8, #80]
  4202d8:	bl	403ac0 <free@plt>
  4202dc:	ldur	x8, [x29, #-8]
  4202e0:	ldrb	w9, [x8, #48]
  4202e4:	and	w9, w9, #0x1
  4202e8:	tbnz	w9, #0, 4202f0 <ascii_strlower_n@plt+0x1be90>
  4202ec:	b	4202fc <ascii_strlower_n@plt+0x1be9c>
  4202f0:	ldur	x8, [x29, #-8]
  4202f4:	ldr	x0, [x8, #80]
  4202f8:	bl	403ac0 <free@plt>
  4202fc:	ldur	x8, [x29, #-8]
  420300:	ldr	x0, [x8, #56]
  420304:	bl	403ac0 <free@plt>
  420308:	ldur	x8, [x29, #-8]
  42030c:	ldr	x0, [x8, #8]
  420310:	bl	41eccc <ascii_strlower_n@plt+0x1a86c>
  420314:	ldur	x8, [x29, #-8]
  420318:	ldr	x0, [x8, #16]
  42031c:	bl	403ac0 <free@plt>
  420320:	ldur	x0, [x29, #-8]
  420324:	bl	41eac8 <ascii_strlower_n@plt+0x1a668>
  420328:	ldp	x29, x30, [sp, #32]
  42032c:	add	sp, sp, #0x30
  420330:	ret
  420334:	sub	sp, sp, #0x80
  420338:	stp	x29, x30, [sp, #112]
  42033c:	add	x29, sp, #0x70
  420340:	mov	x8, xzr
  420344:	adrp	x9, 431000 <ascii_strlower_n@plt+0x2cba0>
  420348:	add	x9, x9, #0xac0
  42034c:	add	x9, x9, #0x3
  420350:	adrp	x10, 431000 <ascii_strlower_n@plt+0x2cba0>
  420354:	add	x10, x10, #0xf80
  420358:	stur	x0, [x29, #-16]
  42035c:	stur	w1, [x29, #-20]
  420360:	stur	x2, [x29, #-32]
  420364:	stur	x3, [x29, #-40]
  420368:	stur	x8, [x29, #-48]
  42036c:	str	x8, [sp, #56]
  420370:	str	x8, [sp, #48]
  420374:	str	x9, [sp, #16]
  420378:	str	x10, [sp, #8]
  42037c:	ldur	x8, [x29, #-16]
  420380:	cmp	x8, #0x0
  420384:	cset	w9, ne  // ne = any
  420388:	mov	w10, #0x1                   	// #1
  42038c:	eor	w9, w9, #0x1
  420390:	eor	w9, w9, w10
  420394:	eor	w9, w9, w10
  420398:	and	w9, w9, #0x1
  42039c:	mov	w0, w9
  4203a0:	sxtw	x8, w0
  4203a4:	cbz	x8, 4203c8 <ascii_strlower_n@plt+0x1bf68>
  4203a8:	mov	w8, wzr
  4203ac:	mov	w0, w8
  4203b0:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4203b4:	add	x1, x1, #0x42e
  4203b8:	ldr	x2, [sp, #16]
  4203bc:	mov	w3, #0x1f4                 	// #500
  4203c0:	ldr	x4, [sp, #8]
  4203c4:	bl	4039d0 <log_assert_failed_realm@plt>
  4203c8:	ldur	x8, [x29, #-32]
  4203cc:	cmp	x8, #0x0
  4203d0:	cset	w9, ne  // ne = any
  4203d4:	mov	w10, #0x1                   	// #1
  4203d8:	eor	w9, w9, #0x1
  4203dc:	eor	w9, w9, w10
  4203e0:	eor	w9, w9, w10
  4203e4:	and	w9, w9, #0x1
  4203e8:	mov	w0, w9
  4203ec:	sxtw	x8, w0
  4203f0:	cbz	x8, 420414 <ascii_strlower_n@plt+0x1bfb4>
  4203f4:	mov	w8, wzr
  4203f8:	mov	w0, w8
  4203fc:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  420400:	add	x1, x1, #0xe6c
  420404:	ldr	x2, [sp, #16]
  420408:	mov	w3, #0x1f5                 	// #501
  42040c:	ldr	x4, [sp, #8]
  420410:	bl	4039d0 <log_assert_failed_realm@plt>
  420414:	ldur	x8, [x29, #-40]
  420418:	cmp	x8, #0x0
  42041c:	cset	w9, ne  // ne = any
  420420:	mov	w10, #0x1                   	// #1
  420424:	eor	w9, w9, #0x1
  420428:	eor	w9, w9, w10
  42042c:	eor	w9, w9, w10
  420430:	and	w9, w9, #0x1
  420434:	mov	w0, w9
  420438:	sxtw	x8, w0
  42043c:	cbz	x8, 420460 <ascii_strlower_n@plt+0x1c000>
  420440:	mov	w8, wzr
  420444:	mov	w0, w8
  420448:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  42044c:	add	x1, x1, #0xfea
  420450:	ldr	x2, [sp, #16]
  420454:	mov	w3, #0x1f6                 	// #502
  420458:	ldr	x4, [sp, #8]
  42045c:	bl	4039d0 <log_assert_failed_realm@plt>
  420460:	ldur	w0, [x29, #-20]
  420464:	ldur	x1, [x29, #-32]
  420468:	add	x2, sp, #0x30
  42046c:	bl	404300 <dns_name_reverse@plt>
  420470:	str	w0, [sp, #44]
  420474:	ldr	w8, [sp, #44]
  420478:	cmp	w8, #0x0
  42047c:	cset	w8, ge  // ge = tcont
  420480:	tbnz	w8, #0, 420498 <ascii_strlower_n@plt+0x1c038>
  420484:	ldr	w8, [sp, #44]
  420488:	stur	w8, [x29, #-4]
  42048c:	mov	w8, #0x1                   	// #1
  420490:	str	w8, [sp, #40]
  420494:	b	420558 <ascii_strlower_n@plt+0x1c0f8>
  420498:	ldr	x2, [sp, #48]
  42049c:	mov	w0, #0x1                   	// #1
  4204a0:	mov	w1, #0xc                   	// #12
  4204a4:	bl	41e9e4 <ascii_strlower_n@plt+0x1a584>
  4204a8:	stur	x0, [x29, #-48]
  4204ac:	ldur	x8, [x29, #-48]
  4204b0:	cbnz	x8, 4204c8 <ascii_strlower_n@plt+0x1c068>
  4204b4:	mov	w8, #0xfffffff4            	// #-12
  4204b8:	stur	w8, [x29, #-4]
  4204bc:	mov	w8, #0x1                   	// #1
  4204c0:	str	w8, [sp, #40]
  4204c4:	b	420558 <ascii_strlower_n@plt+0x1c0f8>
  4204c8:	mov	x8, xzr
  4204cc:	str	x8, [sp, #48]
  4204d0:	ldur	x0, [x29, #-48]
  4204d4:	bl	41fcec <ascii_strlower_n@plt+0x1b88c>
  4204d8:	str	x0, [sp, #56]
  4204dc:	ldr	x8, [sp, #56]
  4204e0:	cbnz	x8, 4204f8 <ascii_strlower_n@plt+0x1c098>
  4204e4:	mov	w8, #0xfffffff4            	// #-12
  4204e8:	stur	w8, [x29, #-4]
  4204ec:	mov	w8, #0x1                   	// #1
  4204f0:	str	w8, [sp, #40]
  4204f4:	b	420558 <ascii_strlower_n@plt+0x1c0f8>
  4204f8:	ldur	x0, [x29, #-40]
  4204fc:	bl	403b20 <strdup@plt>
  420500:	ldr	x8, [sp, #56]
  420504:	str	x0, [x8, #80]
  420508:	ldr	x8, [sp, #56]
  42050c:	ldr	x8, [x8, #80]
  420510:	cbnz	x8, 420528 <ascii_strlower_n@plt+0x1c0c8>
  420514:	mov	w8, #0xfffffff4            	// #-12
  420518:	stur	w8, [x29, #-4]
  42051c:	mov	w8, #0x1                   	// #1
  420520:	str	w8, [sp, #40]
  420524:	b	420558 <ascii_strlower_n@plt+0x1c0f8>
  420528:	ldr	x8, [sp, #56]
  42052c:	str	x8, [sp, #32]
  420530:	mov	x8, xzr
  420534:	str	x8, [sp, #56]
  420538:	ldr	x8, [sp, #32]
  42053c:	str	x8, [sp, #24]
  420540:	ldr	x8, [sp, #24]
  420544:	ldur	x9, [x29, #-16]
  420548:	str	x8, [x9]
  42054c:	stur	wzr, [x29, #-4]
  420550:	mov	w10, #0x1                   	// #1
  420554:	str	w10, [sp, #40]
  420558:	add	x0, sp, #0x30
  42055c:	bl	41f2e8 <ascii_strlower_n@plt+0x1ae88>
  420560:	add	x0, sp, #0x38
  420564:	bl	420580 <ascii_strlower_n@plt+0x1c120>
  420568:	sub	x0, x29, #0x30
  42056c:	bl	41fdf4 <ascii_strlower_n@plt+0x1b994>
  420570:	ldur	w0, [x29, #-4]
  420574:	ldp	x29, x30, [sp, #112]
  420578:	add	sp, sp, #0x80
  42057c:	ret
  420580:	sub	sp, sp, #0x20
  420584:	stp	x29, x30, [sp, #16]
  420588:	add	x29, sp, #0x10
  42058c:	str	x0, [sp, #8]
  420590:	ldr	x8, [sp, #8]
  420594:	ldr	x8, [x8]
  420598:	cbz	x8, 4205a8 <ascii_strlower_n@plt+0x1c148>
  42059c:	ldr	x8, [sp, #8]
  4205a0:	ldr	x0, [x8]
  4205a4:	bl	41fed8 <ascii_strlower_n@plt+0x1ba78>
  4205a8:	ldp	x29, x30, [sp, #16]
  4205ac:	add	sp, sp, #0x20
  4205b0:	ret
  4205b4:	sub	sp, sp, #0x50
  4205b8:	stp	x29, x30, [sp, #64]
  4205bc:	add	x29, sp, #0x40
  4205c0:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  4205c4:	add	x8, x8, #0xac0
  4205c8:	add	x8, x8, #0x3
  4205cc:	adrp	x9, 431000 <ascii_strlower_n@plt+0x2cba0>
  4205d0:	add	x9, x9, #0xff3
  4205d4:	stur	x0, [x29, #-16]
  4205d8:	stur	w1, [x29, #-20]
  4205dc:	str	x2, [sp, #32]
  4205e0:	str	x3, [sp, #24]
  4205e4:	str	x8, [sp, #8]
  4205e8:	str	x9, [sp]
  4205ec:	ldur	x8, [x29, #-16]
  4205f0:	cmp	x8, #0x0
  4205f4:	cset	w9, ne  // ne = any
  4205f8:	mov	w10, #0x1                   	// #1
  4205fc:	eor	w9, w9, #0x1
  420600:	eor	w9, w9, w10
  420604:	eor	w9, w9, w10
  420608:	and	w9, w9, #0x1
  42060c:	mov	w0, w9
  420610:	sxtw	x8, w0
  420614:	cbz	x8, 420638 <ascii_strlower_n@plt+0x1c1d8>
  420618:	mov	w8, wzr
  42061c:	mov	w0, w8
  420620:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  420624:	add	x1, x1, #0x42e
  420628:	ldr	x2, [sp, #8]
  42062c:	mov	w3, #0x212                 	// #530
  420630:	ldr	x4, [sp]
  420634:	bl	4039d0 <log_assert_failed_realm@plt>
  420638:	ldr	x8, [sp, #32]
  42063c:	cmp	x8, #0x0
  420640:	cset	w9, ne  // ne = any
  420644:	mov	w10, #0x1                   	// #1
  420648:	eor	w9, w9, #0x1
  42064c:	eor	w9, w9, w10
  420650:	eor	w9, w9, w10
  420654:	and	w9, w9, #0x1
  420658:	mov	w0, w9
  42065c:	sxtw	x8, w0
  420660:	cbz	x8, 420684 <ascii_strlower_n@plt+0x1c224>
  420664:	mov	w8, wzr
  420668:	mov	w0, w8
  42066c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  420670:	add	x1, x1, #0xe6c
  420674:	ldr	x2, [sp, #8]
  420678:	mov	w3, #0x213                 	// #531
  42067c:	ldr	x4, [sp]
  420680:	bl	4039d0 <log_assert_failed_realm@plt>
  420684:	ldur	w8, [x29, #-20]
  420688:	cmp	w8, #0x0
  42068c:	cset	w8, ne  // ne = any
  420690:	mov	w9, #0x1                   	// #1
  420694:	eor	w8, w8, #0x1
  420698:	eor	w8, w8, w9
  42069c:	eor	w8, w8, w9
  4206a0:	and	w8, w8, #0x1
  4206a4:	mov	w0, w8
  4206a8:	sxtw	x10, w0
  4206ac:	cbz	x10, 4206d0 <ascii_strlower_n@plt+0x1c270>
  4206b0:	mov	w8, wzr
  4206b4:	mov	w0, w8
  4206b8:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  4206bc:	add	x1, x1, #0x5d
  4206c0:	ldr	x2, [sp, #8]
  4206c4:	mov	w3, #0x214                 	// #532
  4206c8:	ldr	x4, [sp]
  4206cc:	bl	4039d0 <log_assert_failed_realm@plt>
  4206d0:	ldur	w8, [x29, #-20]
  4206d4:	cmp	w8, #0x2
  4206d8:	b.ne	42071c <ascii_strlower_n@plt+0x1c2bc>  // b.any
  4206dc:	ldr	x2, [sp, #24]
  4206e0:	mov	w8, #0x1                   	// #1
  4206e4:	mov	w0, w8
  4206e8:	mov	w1, w8
  4206ec:	bl	41fd78 <ascii_strlower_n@plt+0x1b918>
  4206f0:	str	x0, [sp, #16]
  4206f4:	ldr	x9, [sp, #16]
  4206f8:	cbnz	x9, 420708 <ascii_strlower_n@plt+0x1c2a8>
  4206fc:	mov	w8, #0xfffffff4            	// #-12
  420700:	stur	w8, [x29, #-4]
  420704:	b	420780 <ascii_strlower_n@plt+0x1c320>
  420708:	ldr	x8, [sp, #16]
  42070c:	ldr	x9, [sp, #32]
  420710:	ldr	w10, [x9]
  420714:	str	w10, [x8, #80]
  420718:	b	420770 <ascii_strlower_n@plt+0x1c310>
  42071c:	ldur	w8, [x29, #-20]
  420720:	cmp	w8, #0xa
  420724:	b.ne	420764 <ascii_strlower_n@plt+0x1c304>  // b.any
  420728:	ldr	x2, [sp, #24]
  42072c:	mov	w0, #0x1                   	// #1
  420730:	mov	w1, #0x1c                  	// #28
  420734:	bl	41fd78 <ascii_strlower_n@plt+0x1b918>
  420738:	str	x0, [sp, #16]
  42073c:	ldr	x8, [sp, #16]
  420740:	cbnz	x8, 420750 <ascii_strlower_n@plt+0x1c2f0>
  420744:	mov	w8, #0xfffffff4            	// #-12
  420748:	stur	w8, [x29, #-4]
  42074c:	b	420780 <ascii_strlower_n@plt+0x1c320>
  420750:	ldr	x8, [sp, #16]
  420754:	ldr	x9, [sp, #32]
  420758:	ldr	q0, [x9]
  42075c:	str	q0, [x8, #80]
  420760:	b	420770 <ascii_strlower_n@plt+0x1c310>
  420764:	mov	w8, #0xffffff9f            	// #-97
  420768:	stur	w8, [x29, #-4]
  42076c:	b	420780 <ascii_strlower_n@plt+0x1c320>
  420770:	ldr	x8, [sp, #16]
  420774:	ldur	x9, [x29, #-16]
  420778:	str	x8, [x9]
  42077c:	stur	wzr, [x29, #-4]
  420780:	ldur	w0, [x29, #-4]
  420784:	ldp	x29, x30, [sp, #64]
  420788:	add	sp, sp, #0x50
  42078c:	ret
  420790:	sub	sp, sp, #0x90
  420794:	stp	x29, x30, [sp, #128]
  420798:	add	x29, sp, #0x80
  42079c:	mov	w8, #0x1                   	// #1
  4207a0:	adrp	x9, 431000 <ascii_strlower_n@plt+0x2cba0>
  4207a4:	add	x9, x9, #0xac0
  4207a8:	add	x2, x9, #0x3
  4207ac:	stur	x0, [x29, #-16]
  4207b0:	stur	x1, [x29, #-24]
  4207b4:	ldur	x9, [x29, #-16]
  4207b8:	ldrb	w10, [x9, #48]
  4207bc:	and	w10, w10, w8
  4207c0:	and	w10, w10, #0x1
  4207c4:	ldur	x9, [x29, #-24]
  4207c8:	ldrb	w11, [x9, #48]
  4207cc:	and	w8, w11, w8
  4207d0:	and	w8, w8, #0x1
  4207d4:	cmp	w10, w8
  4207d8:	stur	x2, [x29, #-40]
  4207dc:	b.eq	4207e8 <ascii_strlower_n@plt+0x1c388>  // b.none
  4207e0:	stur	wzr, [x29, #-4]
  4207e4:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  4207e8:	ldur	x8, [x29, #-16]
  4207ec:	ldrb	w9, [x8, #48]
  4207f0:	and	w9, w9, #0x1
  4207f4:	tbnz	w9, #0, 4207fc <ascii_strlower_n@plt+0x1c39c>
  4207f8:	b	420808 <ascii_strlower_n@plt+0x1c3a8>
  4207fc:	mov	w8, #0xffffffff            	// #-1
  420800:	stur	w8, [x29, #-44]
  420804:	b	420818 <ascii_strlower_n@plt+0x1c3b8>
  420808:	ldur	x8, [x29, #-16]
  42080c:	ldr	x8, [x8, #8]
  420810:	ldrh	w9, [x8, #6]
  420814:	stur	w9, [x29, #-44]
  420818:	ldur	w8, [x29, #-44]
  42081c:	cmp	w8, #0x1
  420820:	stur	w8, [x29, #-48]
  420824:	b.eq	420aa8 <ascii_strlower_n@plt+0x1c648>  // b.none
  420828:	b	42082c <ascii_strlower_n@plt+0x1c3cc>
  42082c:	ldur	w8, [x29, #-48]
  420830:	cmp	w8, #0x2
  420834:	b.eq	420a1c <ascii_strlower_n@plt+0x1c5bc>  // b.none
  420838:	b	42083c <ascii_strlower_n@plt+0x1c3dc>
  42083c:	ldur	w8, [x29, #-48]
  420840:	cmp	w8, #0x5
  420844:	b.eq	420a1c <ascii_strlower_n@plt+0x1c5bc>  // b.none
  420848:	b	42084c <ascii_strlower_n@plt+0x1c3ec>
  42084c:	ldur	w8, [x29, #-48]
  420850:	cmp	w8, #0x6
  420854:	b.eq	420b00 <ascii_strlower_n@plt+0x1c6a0>  // b.none
  420858:	b	42085c <ascii_strlower_n@plt+0x1c3fc>
  42085c:	ldur	w8, [x29, #-48]
  420860:	cmp	w8, #0xc
  420864:	b.eq	420a1c <ascii_strlower_n@plt+0x1c5bc>  // b.none
  420868:	b	42086c <ascii_strlower_n@plt+0x1c40c>
  42086c:	ldur	w8, [x29, #-48]
  420870:	cmp	w8, #0xd
  420874:	b.eq	420a38 <ascii_strlower_n@plt+0x1c5d8>  // b.none
  420878:	b	42087c <ascii_strlower_n@plt+0x1c41c>
  42087c:	ldur	w8, [x29, #-48]
  420880:	cmp	w8, #0xf
  420884:	b.eq	420c14 <ascii_strlower_n@plt+0x1c7b4>  // b.none
  420888:	b	42088c <ascii_strlower_n@plt+0x1c42c>
  42088c:	ldur	w8, [x29, #-48]
  420890:	cmp	w8, #0x10
  420894:	b.eq	420a88 <ascii_strlower_n@plt+0x1c628>  // b.none
  420898:	b	42089c <ascii_strlower_n@plt+0x1c43c>
  42089c:	ldur	w8, [x29, #-48]
  4208a0:	cmp	w8, #0x1c
  4208a4:	b.eq	420ad4 <ascii_strlower_n@plt+0x1c674>  // b.none
  4208a8:	b	4208ac <ascii_strlower_n@plt+0x1c44c>
  4208ac:	ldur	w8, [x29, #-48]
  4208b0:	cmp	w8, #0x1d
  4208b4:	b.eq	420c50 <ascii_strlower_n@plt+0x1c7f0>  // b.none
  4208b8:	b	4208bc <ascii_strlower_n@plt+0x1c45c>
  4208bc:	ldur	w8, [x29, #-48]
  4208c0:	cmp	w8, #0x21
  4208c4:	b.eq	42097c <ascii_strlower_n@plt+0x1c51c>  // b.none
  4208c8:	b	4208cc <ascii_strlower_n@plt+0x1c46c>
  4208cc:	ldur	w8, [x29, #-48]
  4208d0:	cmp	w8, #0x27
  4208d4:	b.eq	420a1c <ascii_strlower_n@plt+0x1c5bc>  // b.none
  4208d8:	b	4208dc <ascii_strlower_n@plt+0x1c47c>
  4208dc:	ldur	w8, [x29, #-48]
  4208e0:	cmp	w8, #0x2b
  4208e4:	b.eq	420d78 <ascii_strlower_n@plt+0x1c918>  // b.none
  4208e8:	b	4208ec <ascii_strlower_n@plt+0x1c48c>
  4208ec:	ldur	w8, [x29, #-48]
  4208f0:	cmp	w8, #0x2c
  4208f4:	b.eq	420e38 <ascii_strlower_n@plt+0x1c9d8>  // b.none
  4208f8:	b	4208fc <ascii_strlower_n@plt+0x1c49c>
  4208fc:	ldur	w8, [x29, #-48]
  420900:	cmp	w8, #0x2e
  420904:	b.eq	420f98 <ascii_strlower_n@plt+0x1cb38>  // b.none
  420908:	b	42090c <ascii_strlower_n@plt+0x1c4ac>
  42090c:	ldur	w8, [x29, #-48]
  420910:	cmp	w8, #0x2f
  420914:	b.eq	4210f0 <ascii_strlower_n@plt+0x1cc90>  // b.none
  420918:	b	42091c <ascii_strlower_n@plt+0x1c4bc>
  42091c:	ldur	w8, [x29, #-48]
  420920:	cmp	w8, #0x30
  420924:	b.eq	420ed8 <ascii_strlower_n@plt+0x1ca78>  // b.none
  420928:	b	42092c <ascii_strlower_n@plt+0x1c4cc>
  42092c:	ldur	w8, [x29, #-48]
  420930:	cmp	w8, #0x32
  420934:	b.eq	421138 <ascii_strlower_n@plt+0x1ccd8>  // b.none
  420938:	b	42093c <ascii_strlower_n@plt+0x1c4dc>
  42093c:	ldur	w8, [x29, #-48]
  420940:	cmp	w8, #0x34
  420944:	b.eq	421250 <ascii_strlower_n@plt+0x1cdf0>  // b.none
  420948:	b	42094c <ascii_strlower_n@plt+0x1c4ec>
  42094c:	ldur	w8, [x29, #-48]
  420950:	cmp	w8, #0x3d
  420954:	b.eq	4213b0 <ascii_strlower_n@plt+0x1cf50>  // b.none
  420958:	b	42095c <ascii_strlower_n@plt+0x1c4fc>
  42095c:	ldur	w8, [x29, #-48]
  420960:	cmp	w8, #0x63
  420964:	b.eq	420a88 <ascii_strlower_n@plt+0x1c628>  // b.none
  420968:	b	42096c <ascii_strlower_n@plt+0x1c50c>
  42096c:	ldur	w8, [x29, #-48]
  420970:	cmp	w8, #0x101
  420974:	b.eq	421310 <ascii_strlower_n@plt+0x1ceb0>  // b.none
  420978:	b	4213b0 <ascii_strlower_n@plt+0x1cf50>
  42097c:	ldur	x8, [x29, #-16]
  420980:	ldr	x0, [x8, #88]
  420984:	ldur	x8, [x29, #-24]
  420988:	ldr	x1, [x8, #88]
  42098c:	bl	4042b0 <dns_name_equal@plt>
  420990:	stur	w0, [x29, #-28]
  420994:	ldur	w9, [x29, #-28]
  420998:	cmp	w9, #0x0
  42099c:	cset	w9, gt
  4209a0:	tbnz	w9, #0, 4209b0 <ascii_strlower_n@plt+0x1c550>
  4209a4:	ldur	w8, [x29, #-28]
  4209a8:	stur	w8, [x29, #-4]
  4209ac:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  4209b0:	ldur	x8, [x29, #-16]
  4209b4:	ldrh	w9, [x8, #80]
  4209b8:	ldur	x8, [x29, #-24]
  4209bc:	ldrh	w10, [x8, #80]
  4209c0:	mov	w11, #0x0                   	// #0
  4209c4:	cmp	w9, w10
  4209c8:	stur	w11, [x29, #-52]
  4209cc:	b.ne	420a0c <ascii_strlower_n@plt+0x1c5ac>  // b.any
  4209d0:	ldur	x8, [x29, #-16]
  4209d4:	ldrh	w9, [x8, #82]
  4209d8:	ldur	x8, [x29, #-24]
  4209dc:	ldrh	w10, [x8, #82]
  4209e0:	mov	w11, #0x0                   	// #0
  4209e4:	cmp	w9, w10
  4209e8:	stur	w11, [x29, #-52]
  4209ec:	b.ne	420a0c <ascii_strlower_n@plt+0x1c5ac>  // b.any
  4209f0:	ldur	x8, [x29, #-16]
  4209f4:	ldrh	w9, [x8, #84]
  4209f8:	ldur	x8, [x29, #-24]
  4209fc:	ldrh	w10, [x8, #84]
  420a00:	cmp	w9, w10
  420a04:	cset	w9, eq  // eq = none
  420a08:	stur	w9, [x29, #-52]
  420a0c:	ldur	w8, [x29, #-52]
  420a10:	and	w8, w8, #0x1
  420a14:	stur	w8, [x29, #-4]
  420a18:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420a1c:	ldur	x8, [x29, #-16]
  420a20:	ldr	x0, [x8, #80]
  420a24:	ldur	x8, [x29, #-24]
  420a28:	ldr	x1, [x8, #80]
  420a2c:	bl	4042b0 <dns_name_equal@plt>
  420a30:	stur	w0, [x29, #-4]
  420a34:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420a38:	ldur	x8, [x29, #-16]
  420a3c:	ldr	x0, [x8, #80]
  420a40:	ldur	x8, [x29, #-24]
  420a44:	ldr	x1, [x8, #80]
  420a48:	bl	404310 <strcasecmp@plt>
  420a4c:	mov	w9, #0x0                   	// #0
  420a50:	stur	w9, [x29, #-56]
  420a54:	cbnz	w0, 420a78 <ascii_strlower_n@plt+0x1c618>
  420a58:	ldur	x8, [x29, #-16]
  420a5c:	ldr	x0, [x8, #88]
  420a60:	ldur	x8, [x29, #-24]
  420a64:	ldr	x1, [x8, #88]
  420a68:	bl	404310 <strcasecmp@plt>
  420a6c:	cmp	w0, #0x0
  420a70:	cset	w9, eq  // eq = none
  420a74:	stur	w9, [x29, #-56]
  420a78:	ldur	w8, [x29, #-56]
  420a7c:	and	w8, w8, #0x1
  420a80:	stur	w8, [x29, #-4]
  420a84:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420a88:	ldur	x8, [x29, #-16]
  420a8c:	ldr	x0, [x8, #80]
  420a90:	ldur	x8, [x29, #-24]
  420a94:	ldr	x1, [x8, #80]
  420a98:	bl	421414 <ascii_strlower_n@plt+0x1cfb4>
  420a9c:	and	w9, w0, #0x1
  420aa0:	stur	w9, [x29, #-4]
  420aa4:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420aa8:	ldur	x8, [x29, #-16]
  420aac:	add	x0, x8, #0x50
  420ab0:	ldur	x8, [x29, #-24]
  420ab4:	add	x1, x8, #0x50
  420ab8:	mov	x2, #0x4                   	// #4
  420abc:	bl	404210 <memcmp@plt>
  420ac0:	cmp	w0, #0x0
  420ac4:	cset	w9, eq  // eq = none
  420ac8:	and	w9, w9, #0x1
  420acc:	stur	w9, [x29, #-4]
  420ad0:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420ad4:	ldur	x8, [x29, #-16]
  420ad8:	add	x0, x8, #0x50
  420adc:	ldur	x8, [x29, #-24]
  420ae0:	add	x1, x8, #0x50
  420ae4:	mov	x2, #0x10                  	// #16
  420ae8:	bl	404210 <memcmp@plt>
  420aec:	cmp	w0, #0x0
  420af0:	cset	w9, eq  // eq = none
  420af4:	and	w9, w9, #0x1
  420af8:	stur	w9, [x29, #-4]
  420afc:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420b00:	ldur	x8, [x29, #-16]
  420b04:	ldr	x0, [x8, #80]
  420b08:	ldur	x8, [x29, #-24]
  420b0c:	ldr	x1, [x8, #80]
  420b10:	bl	4042b0 <dns_name_equal@plt>
  420b14:	stur	w0, [x29, #-28]
  420b18:	ldur	w9, [x29, #-28]
  420b1c:	cmp	w9, #0x0
  420b20:	cset	w9, gt
  420b24:	tbnz	w9, #0, 420b34 <ascii_strlower_n@plt+0x1c6d4>
  420b28:	ldur	w8, [x29, #-28]
  420b2c:	stur	w8, [x29, #-4]
  420b30:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420b34:	ldur	x8, [x29, #-16]
  420b38:	ldr	x0, [x8, #88]
  420b3c:	ldur	x8, [x29, #-24]
  420b40:	ldr	x1, [x8, #88]
  420b44:	bl	4042b0 <dns_name_equal@plt>
  420b48:	stur	w0, [x29, #-28]
  420b4c:	ldur	w9, [x29, #-28]
  420b50:	cmp	w9, #0x0
  420b54:	cset	w9, gt
  420b58:	tbnz	w9, #0, 420b68 <ascii_strlower_n@plt+0x1c708>
  420b5c:	ldur	w8, [x29, #-28]
  420b60:	stur	w8, [x29, #-4]
  420b64:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420b68:	ldur	x8, [x29, #-16]
  420b6c:	ldr	w9, [x8, #96]
  420b70:	ldur	x8, [x29, #-24]
  420b74:	ldr	w10, [x8, #96]
  420b78:	mov	w11, #0x0                   	// #0
  420b7c:	cmp	w9, w10
  420b80:	stur	w11, [x29, #-60]
  420b84:	b.ne	420c04 <ascii_strlower_n@plt+0x1c7a4>  // b.any
  420b88:	ldur	x8, [x29, #-16]
  420b8c:	ldr	w9, [x8, #100]
  420b90:	ldur	x8, [x29, #-24]
  420b94:	ldr	w10, [x8, #100]
  420b98:	mov	w11, #0x0                   	// #0
  420b9c:	cmp	w9, w10
  420ba0:	stur	w11, [x29, #-60]
  420ba4:	b.ne	420c04 <ascii_strlower_n@plt+0x1c7a4>  // b.any
  420ba8:	ldur	x8, [x29, #-16]
  420bac:	ldr	w9, [x8, #104]
  420bb0:	ldur	x8, [x29, #-24]
  420bb4:	ldr	w10, [x8, #104]
  420bb8:	mov	w11, #0x0                   	// #0
  420bbc:	cmp	w9, w10
  420bc0:	stur	w11, [x29, #-60]
  420bc4:	b.ne	420c04 <ascii_strlower_n@plt+0x1c7a4>  // b.any
  420bc8:	ldur	x8, [x29, #-16]
  420bcc:	ldr	w9, [x8, #108]
  420bd0:	ldur	x8, [x29, #-24]
  420bd4:	ldr	w10, [x8, #108]
  420bd8:	mov	w11, #0x0                   	// #0
  420bdc:	cmp	w9, w10
  420be0:	stur	w11, [x29, #-60]
  420be4:	b.ne	420c04 <ascii_strlower_n@plt+0x1c7a4>  // b.any
  420be8:	ldur	x8, [x29, #-16]
  420bec:	ldr	w9, [x8, #112]
  420bf0:	ldur	x8, [x29, #-24]
  420bf4:	ldr	w10, [x8, #112]
  420bf8:	cmp	w9, w10
  420bfc:	cset	w9, eq  // eq = none
  420c00:	stur	w9, [x29, #-60]
  420c04:	ldur	w8, [x29, #-60]
  420c08:	and	w8, w8, #0x1
  420c0c:	stur	w8, [x29, #-4]
  420c10:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420c14:	ldur	x8, [x29, #-16]
  420c18:	ldrh	w9, [x8, #80]
  420c1c:	ldur	x8, [x29, #-24]
  420c20:	ldrh	w10, [x8, #80]
  420c24:	cmp	w9, w10
  420c28:	b.eq	420c34 <ascii_strlower_n@plt+0x1c7d4>  // b.none
  420c2c:	stur	wzr, [x29, #-4]
  420c30:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420c34:	ldur	x8, [x29, #-16]
  420c38:	ldr	x0, [x8, #88]
  420c3c:	ldur	x8, [x29, #-24]
  420c40:	ldr	x1, [x8, #88]
  420c44:	bl	4042b0 <dns_name_equal@plt>
  420c48:	stur	w0, [x29, #-4]
  420c4c:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420c50:	ldur	x8, [x29, #-16]
  420c54:	ldrb	w9, [x8, #80]
  420c58:	ldur	x8, [x29, #-24]
  420c5c:	ldrb	w10, [x8, #80]
  420c60:	cmp	w9, w10
  420c64:	cset	w9, eq  // eq = none
  420c68:	mov	w10, #0x1                   	// #1
  420c6c:	eor	w9, w9, #0x1
  420c70:	eor	w9, w9, w10
  420c74:	eor	w9, w9, w10
  420c78:	and	w9, w9, #0x1
  420c7c:	mov	w0, w9
  420c80:	sxtw	x8, w0
  420c84:	cbz	x8, 420cac <ascii_strlower_n@plt+0x1c84c>
  420c88:	mov	w8, wzr
  420c8c:	mov	w0, w8
  420c90:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  420c94:	add	x1, x1, #0x64
  420c98:	ldur	x2, [x29, #-40]
  420c9c:	mov	w3, #0x26d                 	// #621
  420ca0:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  420ca4:	add	x4, x4, #0x85
  420ca8:	bl	4039d0 <log_assert_failed_realm@plt>
  420cac:	ldur	x8, [x29, #-16]
  420cb0:	ldrb	w9, [x8, #81]
  420cb4:	ldur	x8, [x29, #-24]
  420cb8:	ldrb	w10, [x8, #81]
  420cbc:	mov	w11, #0x0                   	// #0
  420cc0:	cmp	w9, w10
  420cc4:	str	w11, [sp, #64]
  420cc8:	b.ne	420d68 <ascii_strlower_n@plt+0x1c908>  // b.any
  420ccc:	ldur	x8, [x29, #-16]
  420cd0:	ldrb	w9, [x8, #82]
  420cd4:	ldur	x8, [x29, #-24]
  420cd8:	ldrb	w10, [x8, #82]
  420cdc:	mov	w11, #0x0                   	// #0
  420ce0:	cmp	w9, w10
  420ce4:	str	w11, [sp, #64]
  420ce8:	b.ne	420d68 <ascii_strlower_n@plt+0x1c908>  // b.any
  420cec:	ldur	x8, [x29, #-16]
  420cf0:	ldrb	w9, [x8, #83]
  420cf4:	ldur	x8, [x29, #-24]
  420cf8:	ldrb	w10, [x8, #83]
  420cfc:	mov	w11, #0x0                   	// #0
  420d00:	cmp	w9, w10
  420d04:	str	w11, [sp, #64]
  420d08:	b.ne	420d68 <ascii_strlower_n@plt+0x1c908>  // b.any
  420d0c:	ldur	x8, [x29, #-16]
  420d10:	ldr	w9, [x8, #84]
  420d14:	ldur	x8, [x29, #-24]
  420d18:	ldr	w10, [x8, #84]
  420d1c:	mov	w11, #0x0                   	// #0
  420d20:	cmp	w9, w10
  420d24:	str	w11, [sp, #64]
  420d28:	b.ne	420d68 <ascii_strlower_n@plt+0x1c908>  // b.any
  420d2c:	ldur	x8, [x29, #-16]
  420d30:	ldr	w9, [x8, #88]
  420d34:	ldur	x8, [x29, #-24]
  420d38:	ldr	w10, [x8, #88]
  420d3c:	mov	w11, #0x0                   	// #0
  420d40:	cmp	w9, w10
  420d44:	str	w11, [sp, #64]
  420d48:	b.ne	420d68 <ascii_strlower_n@plt+0x1c908>  // b.any
  420d4c:	ldur	x8, [x29, #-16]
  420d50:	ldr	w9, [x8, #92]
  420d54:	ldur	x8, [x29, #-24]
  420d58:	ldr	w10, [x8, #92]
  420d5c:	cmp	w9, w10
  420d60:	cset	w9, eq  // eq = none
  420d64:	str	w9, [sp, #64]
  420d68:	ldr	w8, [sp, #64]
  420d6c:	and	w8, w8, #0x1
  420d70:	stur	w8, [x29, #-4]
  420d74:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420d78:	ldur	x8, [x29, #-16]
  420d7c:	ldrh	w9, [x8, #80]
  420d80:	ldur	x8, [x29, #-24]
  420d84:	ldrh	w10, [x8, #80]
  420d88:	mov	w11, #0x0                   	// #0
  420d8c:	cmp	w9, w10
  420d90:	str	w11, [sp, #60]
  420d94:	b.ne	420e28 <ascii_strlower_n@plt+0x1c9c8>  // b.any
  420d98:	ldur	x8, [x29, #-16]
  420d9c:	ldrb	w9, [x8, #82]
  420da0:	ldur	x8, [x29, #-24]
  420da4:	ldrb	w10, [x8, #82]
  420da8:	mov	w11, #0x0                   	// #0
  420dac:	cmp	w9, w10
  420db0:	str	w11, [sp, #60]
  420db4:	b.ne	420e28 <ascii_strlower_n@plt+0x1c9c8>  // b.any
  420db8:	ldur	x8, [x29, #-16]
  420dbc:	ldrb	w9, [x8, #83]
  420dc0:	ldur	x8, [x29, #-24]
  420dc4:	ldrb	w10, [x8, #83]
  420dc8:	mov	w11, #0x0                   	// #0
  420dcc:	cmp	w9, w10
  420dd0:	str	w11, [sp, #60]
  420dd4:	b.ne	420e28 <ascii_strlower_n@plt+0x1c9c8>  // b.any
  420dd8:	ldur	x8, [x29, #-16]
  420ddc:	ldr	x8, [x8, #96]
  420de0:	ldur	x9, [x29, #-24]
  420de4:	ldr	x9, [x9, #96]
  420de8:	mov	w10, #0x0                   	// #0
  420dec:	cmp	x8, x9
  420df0:	str	w10, [sp, #56]
  420df4:	b.ne	420e20 <ascii_strlower_n@plt+0x1c9c0>  // b.any
  420df8:	ldur	x8, [x29, #-16]
  420dfc:	ldr	x0, [x8, #88]
  420e00:	ldur	x8, [x29, #-24]
  420e04:	ldr	x1, [x8, #88]
  420e08:	ldur	x8, [x29, #-16]
  420e0c:	ldr	x2, [x8, #96]
  420e10:	bl	42152c <ascii_strlower_n@plt+0x1d0cc>
  420e14:	cmp	w0, #0x0
  420e18:	cset	w9, eq  // eq = none
  420e1c:	str	w9, [sp, #56]
  420e20:	ldr	w8, [sp, #56]
  420e24:	str	w8, [sp, #60]
  420e28:	ldr	w8, [sp, #60]
  420e2c:	and	w8, w8, #0x1
  420e30:	stur	w8, [x29, #-4]
  420e34:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420e38:	ldur	x8, [x29, #-16]
  420e3c:	ldrb	w9, [x8, #80]
  420e40:	ldur	x8, [x29, #-24]
  420e44:	ldrb	w10, [x8, #80]
  420e48:	mov	w11, #0x0                   	// #0
  420e4c:	cmp	w9, w10
  420e50:	str	w11, [sp, #52]
  420e54:	b.ne	420ec8 <ascii_strlower_n@plt+0x1ca68>  // b.any
  420e58:	ldur	x8, [x29, #-16]
  420e5c:	ldrb	w9, [x8, #81]
  420e60:	ldur	x8, [x29, #-24]
  420e64:	ldrb	w10, [x8, #81]
  420e68:	mov	w11, #0x0                   	// #0
  420e6c:	cmp	w9, w10
  420e70:	str	w11, [sp, #52]
  420e74:	b.ne	420ec8 <ascii_strlower_n@plt+0x1ca68>  // b.any
  420e78:	ldur	x8, [x29, #-16]
  420e7c:	ldr	x8, [x8, #96]
  420e80:	ldur	x9, [x29, #-24]
  420e84:	ldr	x9, [x9, #96]
  420e88:	mov	w10, #0x0                   	// #0
  420e8c:	cmp	x8, x9
  420e90:	str	w10, [sp, #48]
  420e94:	b.ne	420ec0 <ascii_strlower_n@plt+0x1ca60>  // b.any
  420e98:	ldur	x8, [x29, #-16]
  420e9c:	ldr	x0, [x8, #88]
  420ea0:	ldur	x8, [x29, #-24]
  420ea4:	ldr	x1, [x8, #88]
  420ea8:	ldur	x8, [x29, #-16]
  420eac:	ldr	x2, [x8, #96]
  420eb0:	bl	42152c <ascii_strlower_n@plt+0x1d0cc>
  420eb4:	cmp	w0, #0x0
  420eb8:	cset	w9, eq  // eq = none
  420ebc:	str	w9, [sp, #48]
  420ec0:	ldr	w8, [sp, #48]
  420ec4:	str	w8, [sp, #52]
  420ec8:	ldr	w8, [sp, #52]
  420ecc:	and	w8, w8, #0x1
  420ed0:	stur	w8, [x29, #-4]
  420ed4:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420ed8:	ldur	x8, [x29, #-16]
  420edc:	ldrh	w9, [x8, #80]
  420ee0:	ldur	x8, [x29, #-24]
  420ee4:	ldrh	w10, [x8, #80]
  420ee8:	mov	w11, #0x0                   	// #0
  420eec:	cmp	w9, w10
  420ef0:	str	w11, [sp, #44]
  420ef4:	b.ne	420f88 <ascii_strlower_n@plt+0x1cb28>  // b.any
  420ef8:	ldur	x8, [x29, #-16]
  420efc:	ldrb	w9, [x8, #82]
  420f00:	ldur	x8, [x29, #-24]
  420f04:	ldrb	w10, [x8, #82]
  420f08:	mov	w11, #0x0                   	// #0
  420f0c:	cmp	w9, w10
  420f10:	str	w11, [sp, #44]
  420f14:	b.ne	420f88 <ascii_strlower_n@plt+0x1cb28>  // b.any
  420f18:	ldur	x8, [x29, #-16]
  420f1c:	ldrb	w9, [x8, #83]
  420f20:	ldur	x8, [x29, #-24]
  420f24:	ldrb	w10, [x8, #83]
  420f28:	mov	w11, #0x0                   	// #0
  420f2c:	cmp	w9, w10
  420f30:	str	w11, [sp, #44]
  420f34:	b.ne	420f88 <ascii_strlower_n@plt+0x1cb28>  // b.any
  420f38:	ldur	x8, [x29, #-16]
  420f3c:	ldr	x8, [x8, #96]
  420f40:	ldur	x9, [x29, #-24]
  420f44:	ldr	x9, [x9, #96]
  420f48:	mov	w10, #0x0                   	// #0
  420f4c:	cmp	x8, x9
  420f50:	str	w10, [sp, #40]
  420f54:	b.ne	420f80 <ascii_strlower_n@plt+0x1cb20>  // b.any
  420f58:	ldur	x8, [x29, #-16]
  420f5c:	ldr	x0, [x8, #88]
  420f60:	ldur	x8, [x29, #-24]
  420f64:	ldr	x1, [x8, #88]
  420f68:	ldur	x8, [x29, #-16]
  420f6c:	ldr	x2, [x8, #96]
  420f70:	bl	42152c <ascii_strlower_n@plt+0x1d0cc>
  420f74:	cmp	w0, #0x0
  420f78:	cset	w9, eq  // eq = none
  420f7c:	str	w9, [sp, #40]
  420f80:	ldr	w8, [sp, #40]
  420f84:	str	w8, [sp, #44]
  420f88:	ldr	w8, [sp, #44]
  420f8c:	and	w8, w8, #0x1
  420f90:	stur	w8, [x29, #-4]
  420f94:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  420f98:	ldur	x8, [x29, #-16]
  420f9c:	ldrh	w9, [x8, #80]
  420fa0:	ldur	x8, [x29, #-24]
  420fa4:	ldrh	w10, [x8, #80]
  420fa8:	mov	w11, #0x0                   	// #0
  420fac:	cmp	w9, w10
  420fb0:	str	w11, [sp, #36]
  420fb4:	b.ne	4210e0 <ascii_strlower_n@plt+0x1cc80>  // b.any
  420fb8:	ldur	x8, [x29, #-16]
  420fbc:	ldrb	w9, [x8, #82]
  420fc0:	ldur	x8, [x29, #-24]
  420fc4:	ldrb	w10, [x8, #82]
  420fc8:	mov	w11, #0x0                   	// #0
  420fcc:	cmp	w9, w10
  420fd0:	str	w11, [sp, #36]
  420fd4:	b.ne	4210e0 <ascii_strlower_n@plt+0x1cc80>  // b.any
  420fd8:	ldur	x8, [x29, #-16]
  420fdc:	ldrb	w9, [x8, #83]
  420fe0:	ldur	x8, [x29, #-24]
  420fe4:	ldrb	w10, [x8, #83]
  420fe8:	mov	w11, #0x0                   	// #0
  420fec:	cmp	w9, w10
  420ff0:	str	w11, [sp, #36]
  420ff4:	b.ne	4210e0 <ascii_strlower_n@plt+0x1cc80>  // b.any
  420ff8:	ldur	x8, [x29, #-16]
  420ffc:	ldr	w9, [x8, #84]
  421000:	ldur	x8, [x29, #-24]
  421004:	ldr	w10, [x8, #84]
  421008:	mov	w11, #0x0                   	// #0
  42100c:	cmp	w9, w10
  421010:	str	w11, [sp, #36]
  421014:	b.ne	4210e0 <ascii_strlower_n@plt+0x1cc80>  // b.any
  421018:	ldur	x8, [x29, #-16]
  42101c:	ldr	w9, [x8, #88]
  421020:	ldur	x8, [x29, #-24]
  421024:	ldr	w10, [x8, #88]
  421028:	mov	w11, #0x0                   	// #0
  42102c:	cmp	w9, w10
  421030:	str	w11, [sp, #36]
  421034:	b.ne	4210e0 <ascii_strlower_n@plt+0x1cc80>  // b.any
  421038:	ldur	x8, [x29, #-16]
  42103c:	ldr	w9, [x8, #92]
  421040:	ldur	x8, [x29, #-24]
  421044:	ldr	w10, [x8, #92]
  421048:	mov	w11, #0x0                   	// #0
  42104c:	cmp	w9, w10
  421050:	str	w11, [sp, #36]
  421054:	b.ne	4210e0 <ascii_strlower_n@plt+0x1cc80>  // b.any
  421058:	ldur	x8, [x29, #-16]
  42105c:	ldrh	w9, [x8, #96]
  421060:	ldur	x8, [x29, #-24]
  421064:	ldrh	w10, [x8, #96]
  421068:	mov	w11, #0x0                   	// #0
  42106c:	cmp	w9, w10
  421070:	str	w11, [sp, #36]
  421074:	b.ne	4210e0 <ascii_strlower_n@plt+0x1cc80>  // b.any
  421078:	ldur	x8, [x29, #-16]
  42107c:	ldr	x8, [x8, #120]
  421080:	ldur	x9, [x29, #-24]
  421084:	ldr	x9, [x9, #120]
  421088:	mov	w10, #0x0                   	// #0
  42108c:	cmp	x8, x9
  421090:	str	w10, [sp, #36]
  421094:	b.ne	4210e0 <ascii_strlower_n@plt+0x1cc80>  // b.any
  421098:	ldur	x8, [x29, #-16]
  42109c:	ldr	x0, [x8, #112]
  4210a0:	ldur	x8, [x29, #-24]
  4210a4:	ldr	x1, [x8, #112]
  4210a8:	ldur	x8, [x29, #-16]
  4210ac:	ldr	x2, [x8, #120]
  4210b0:	bl	42152c <ascii_strlower_n@plt+0x1d0cc>
  4210b4:	mov	w9, #0x0                   	// #0
  4210b8:	str	w9, [sp, #36]
  4210bc:	cbnz	w0, 4210e0 <ascii_strlower_n@plt+0x1cc80>
  4210c0:	ldur	x8, [x29, #-16]
  4210c4:	ldr	x0, [x8, #104]
  4210c8:	ldur	x8, [x29, #-24]
  4210cc:	ldr	x1, [x8, #104]
  4210d0:	bl	4042b0 <dns_name_equal@plt>
  4210d4:	cmp	w0, #0x0
  4210d8:	cset	w9, ne  // ne = any
  4210dc:	str	w9, [sp, #36]
  4210e0:	ldr	w8, [sp, #36]
  4210e4:	and	w8, w8, #0x1
  4210e8:	stur	w8, [x29, #-4]
  4210ec:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  4210f0:	ldur	x8, [x29, #-16]
  4210f4:	ldr	x0, [x8, #80]
  4210f8:	ldur	x8, [x29, #-24]
  4210fc:	ldr	x1, [x8, #80]
  421100:	bl	4042b0 <dns_name_equal@plt>
  421104:	mov	w9, #0x0                   	// #0
  421108:	str	w9, [sp, #32]
  42110c:	cbz	w0, 421128 <ascii_strlower_n@plt+0x1ccc8>
  421110:	ldur	x8, [x29, #-16]
  421114:	ldr	x0, [x8, #88]
  421118:	ldur	x8, [x29, #-24]
  42111c:	ldr	x1, [x8, #88]
  421120:	bl	404320 <bitmap_equal@plt>
  421124:	str	w0, [sp, #32]
  421128:	ldr	w8, [sp, #32]
  42112c:	and	w8, w8, #0x1
  421130:	stur	w8, [x29, #-4]
  421134:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  421138:	ldur	x8, [x29, #-16]
  42113c:	ldrb	w9, [x8, #80]
  421140:	ldur	x8, [x29, #-24]
  421144:	ldrb	w10, [x8, #80]
  421148:	mov	w11, #0x0                   	// #0
  42114c:	cmp	w9, w10
  421150:	str	w11, [sp, #28]
  421154:	b.ne	421240 <ascii_strlower_n@plt+0x1cde0>  // b.any
  421158:	ldur	x8, [x29, #-16]
  42115c:	ldrb	w9, [x8, #81]
  421160:	ldur	x8, [x29, #-24]
  421164:	ldrb	w10, [x8, #81]
  421168:	mov	w11, #0x0                   	// #0
  42116c:	cmp	w9, w10
  421170:	str	w11, [sp, #28]
  421174:	b.ne	421240 <ascii_strlower_n@plt+0x1cde0>  // b.any
  421178:	ldur	x8, [x29, #-16]
  42117c:	ldrh	w9, [x8, #82]
  421180:	ldur	x8, [x29, #-24]
  421184:	ldrh	w10, [x8, #82]
  421188:	mov	w11, #0x0                   	// #0
  42118c:	cmp	w9, w10
  421190:	str	w11, [sp, #28]
  421194:	b.ne	421240 <ascii_strlower_n@plt+0x1cde0>  // b.any
  421198:	ldur	x8, [x29, #-16]
  42119c:	ldr	x8, [x8, #96]
  4211a0:	ldur	x9, [x29, #-24]
  4211a4:	ldr	x9, [x9, #96]
  4211a8:	mov	w10, #0x0                   	// #0
  4211ac:	cmp	x8, x9
  4211b0:	str	w10, [sp, #28]
  4211b4:	b.ne	421240 <ascii_strlower_n@plt+0x1cde0>  // b.any
  4211b8:	ldur	x8, [x29, #-16]
  4211bc:	ldr	x0, [x8, #88]
  4211c0:	ldur	x8, [x29, #-24]
  4211c4:	ldr	x1, [x8, #88]
  4211c8:	ldur	x8, [x29, #-16]
  4211cc:	ldr	x2, [x8, #96]
  4211d0:	bl	42152c <ascii_strlower_n@plt+0x1d0cc>
  4211d4:	mov	w9, #0x0                   	// #0
  4211d8:	str	w9, [sp, #28]
  4211dc:	cbnz	w0, 421240 <ascii_strlower_n@plt+0x1cde0>
  4211e0:	ldur	x8, [x29, #-16]
  4211e4:	ldr	x8, [x8, #112]
  4211e8:	ldur	x9, [x29, #-24]
  4211ec:	ldr	x9, [x9, #112]
  4211f0:	mov	w10, #0x0                   	// #0
  4211f4:	cmp	x8, x9
  4211f8:	str	w10, [sp, #28]
  4211fc:	b.ne	421240 <ascii_strlower_n@plt+0x1cde0>  // b.any
  421200:	ldur	x8, [x29, #-16]
  421204:	ldr	x0, [x8, #104]
  421208:	ldur	x8, [x29, #-24]
  42120c:	ldr	x1, [x8, #104]
  421210:	ldur	x8, [x29, #-16]
  421214:	ldr	x2, [x8, #112]
  421218:	bl	42152c <ascii_strlower_n@plt+0x1d0cc>
  42121c:	mov	w9, #0x0                   	// #0
  421220:	str	w9, [sp, #28]
  421224:	cbnz	w0, 421240 <ascii_strlower_n@plt+0x1cde0>
  421228:	ldur	x8, [x29, #-16]
  42122c:	ldr	x0, [x8, #120]
  421230:	ldur	x8, [x29, #-24]
  421234:	ldr	x1, [x8, #120]
  421238:	bl	404320 <bitmap_equal@plt>
  42123c:	str	w0, [sp, #28]
  421240:	ldr	w8, [sp, #28]
  421244:	and	w8, w8, #0x1
  421248:	stur	w8, [x29, #-4]
  42124c:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  421250:	ldur	x8, [x29, #-16]
  421254:	ldrb	w9, [x8, #80]
  421258:	ldur	x8, [x29, #-24]
  42125c:	ldrb	w10, [x8, #80]
  421260:	mov	w11, #0x0                   	// #0
  421264:	cmp	w9, w10
  421268:	str	w11, [sp, #24]
  42126c:	b.ne	421300 <ascii_strlower_n@plt+0x1cea0>  // b.any
  421270:	ldur	x8, [x29, #-16]
  421274:	ldrb	w9, [x8, #81]
  421278:	ldur	x8, [x29, #-24]
  42127c:	ldrb	w10, [x8, #81]
  421280:	mov	w11, #0x0                   	// #0
  421284:	cmp	w9, w10
  421288:	str	w11, [sp, #24]
  42128c:	b.ne	421300 <ascii_strlower_n@plt+0x1cea0>  // b.any
  421290:	ldur	x8, [x29, #-16]
  421294:	ldrb	w9, [x8, #82]
  421298:	ldur	x8, [x29, #-24]
  42129c:	ldrb	w10, [x8, #82]
  4212a0:	mov	w11, #0x0                   	// #0
  4212a4:	cmp	w9, w10
  4212a8:	str	w11, [sp, #24]
  4212ac:	b.ne	421300 <ascii_strlower_n@plt+0x1cea0>  // b.any
  4212b0:	ldur	x8, [x29, #-16]
  4212b4:	ldr	x8, [x8, #96]
  4212b8:	ldur	x9, [x29, #-24]
  4212bc:	ldr	x9, [x9, #96]
  4212c0:	mov	w10, #0x0                   	// #0
  4212c4:	cmp	x8, x9
  4212c8:	str	w10, [sp, #20]
  4212cc:	b.ne	4212f8 <ascii_strlower_n@plt+0x1ce98>  // b.any
  4212d0:	ldur	x8, [x29, #-16]
  4212d4:	ldr	x0, [x8, #88]
  4212d8:	ldur	x8, [x29, #-24]
  4212dc:	ldr	x1, [x8, #88]
  4212e0:	ldur	x8, [x29, #-16]
  4212e4:	ldr	x2, [x8, #96]
  4212e8:	bl	42152c <ascii_strlower_n@plt+0x1d0cc>
  4212ec:	cmp	w0, #0x0
  4212f0:	cset	w9, eq  // eq = none
  4212f4:	str	w9, [sp, #20]
  4212f8:	ldr	w8, [sp, #20]
  4212fc:	str	w8, [sp, #24]
  421300:	ldr	w8, [sp, #24]
  421304:	and	w8, w8, #0x1
  421308:	stur	w8, [x29, #-4]
  42130c:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  421310:	ldur	x8, [x29, #-16]
  421314:	ldrb	w9, [x8, #80]
  421318:	ldur	x8, [x29, #-24]
  42131c:	ldrb	w10, [x8, #80]
  421320:	mov	w11, #0x0                   	// #0
  421324:	cmp	w9, w10
  421328:	str	w11, [sp, #16]
  42132c:	b.ne	4213a0 <ascii_strlower_n@plt+0x1cf40>  // b.any
  421330:	ldur	x8, [x29, #-16]
  421334:	ldr	x0, [x8, #88]
  421338:	ldur	x8, [x29, #-24]
  42133c:	ldr	x1, [x8, #88]
  421340:	bl	403bc0 <strcmp@plt>
  421344:	mov	w9, #0x0                   	// #0
  421348:	str	w9, [sp, #16]
  42134c:	cbnz	w0, 4213a0 <ascii_strlower_n@plt+0x1cf40>
  421350:	ldur	x8, [x29, #-16]
  421354:	ldr	x8, [x8, #104]
  421358:	ldur	x9, [x29, #-24]
  42135c:	ldr	x9, [x9, #104]
  421360:	mov	w10, #0x0                   	// #0
  421364:	cmp	x8, x9
  421368:	str	w10, [sp, #12]
  42136c:	b.ne	421398 <ascii_strlower_n@plt+0x1cf38>  // b.any
  421370:	ldur	x8, [x29, #-16]
  421374:	ldr	x0, [x8, #96]
  421378:	ldur	x8, [x29, #-24]
  42137c:	ldr	x1, [x8, #96]
  421380:	ldur	x8, [x29, #-16]
  421384:	ldr	x2, [x8, #104]
  421388:	bl	42152c <ascii_strlower_n@plt+0x1d0cc>
  42138c:	cmp	w0, #0x0
  421390:	cset	w9, eq  // eq = none
  421394:	str	w9, [sp, #12]
  421398:	ldr	w8, [sp, #12]
  42139c:	str	w8, [sp, #16]
  4213a0:	ldr	w8, [sp, #16]
  4213a4:	and	w8, w8, #0x1
  4213a8:	stur	w8, [x29, #-4]
  4213ac:	b	421404 <ascii_strlower_n@plt+0x1cfa4>
  4213b0:	ldur	x8, [x29, #-16]
  4213b4:	ldr	x8, [x8, #88]
  4213b8:	ldur	x9, [x29, #-24]
  4213bc:	ldr	x9, [x9, #88]
  4213c0:	mov	w10, #0x0                   	// #0
  4213c4:	cmp	x8, x9
  4213c8:	str	w10, [sp, #8]
  4213cc:	b.ne	4213f8 <ascii_strlower_n@plt+0x1cf98>  // b.any
  4213d0:	ldur	x8, [x29, #-16]
  4213d4:	ldr	x0, [x8, #80]
  4213d8:	ldur	x8, [x29, #-24]
  4213dc:	ldr	x1, [x8, #80]
  4213e0:	ldur	x8, [x29, #-16]
  4213e4:	ldr	x2, [x8, #88]
  4213e8:	bl	42152c <ascii_strlower_n@plt+0x1d0cc>
  4213ec:	cmp	w0, #0x0
  4213f0:	cset	w9, eq  // eq = none
  4213f4:	str	w9, [sp, #8]
  4213f8:	ldr	w8, [sp, #8]
  4213fc:	and	w8, w8, #0x1
  421400:	stur	w8, [x29, #-4]
  421404:	ldur	w0, [x29, #-4]
  421408:	ldp	x29, x30, [sp, #128]
  42140c:	add	sp, sp, #0x90
  421410:	ret
  421414:	sub	sp, sp, #0x30
  421418:	stp	x29, x30, [sp, #32]
  42141c:	add	x29, sp, #0x20
  421420:	str	x0, [sp, #16]
  421424:	str	x1, [sp, #8]
  421428:	ldr	x8, [sp, #16]
  42142c:	ldr	x9, [sp, #8]
  421430:	cmp	x8, x9
  421434:	b.ne	421448 <ascii_strlower_n@plt+0x1cfe8>  // b.any
  421438:	mov	w8, #0x1                   	// #1
  42143c:	and	w8, w8, #0x1
  421440:	sturb	w8, [x29, #-1]
  421444:	b	421518 <ascii_strlower_n@plt+0x1d0b8>
  421448:	ldr	x8, [sp, #16]
  42144c:	cmp	x8, #0x0
  421450:	cset	w9, ne  // ne = any
  421454:	mov	w10, #0x1                   	// #1
  421458:	eor	w9, w9, #0x1
  42145c:	and	w9, w9, #0x1
  421460:	ldr	x8, [sp, #8]
  421464:	cmp	x8, #0x0
  421468:	cset	w11, ne  // ne = any
  42146c:	eor	w10, w11, w10
  421470:	and	w10, w10, #0x1
  421474:	cmp	w9, w10
  421478:	b.eq	42148c <ascii_strlower_n@plt+0x1d02c>  // b.none
  42147c:	mov	w8, wzr
  421480:	and	w8, w8, #0x1
  421484:	sturb	w8, [x29, #-1]
  421488:	b	421518 <ascii_strlower_n@plt+0x1d0b8>
  42148c:	ldr	x8, [sp, #16]
  421490:	cbnz	x8, 4214a4 <ascii_strlower_n@plt+0x1d044>
  421494:	mov	w8, #0x1                   	// #1
  421498:	and	w8, w8, #0x1
  42149c:	sturb	w8, [x29, #-1]
  4214a0:	b	421518 <ascii_strlower_n@plt+0x1d0b8>
  4214a4:	ldr	x8, [sp, #16]
  4214a8:	ldr	x8, [x8]
  4214ac:	ldr	x9, [sp, #8]
  4214b0:	ldr	x9, [x9]
  4214b4:	cmp	x8, x9
  4214b8:	b.eq	4214cc <ascii_strlower_n@plt+0x1d06c>  // b.none
  4214bc:	mov	w8, wzr
  4214c0:	and	w8, w8, #0x1
  4214c4:	sturb	w8, [x29, #-1]
  4214c8:	b	421518 <ascii_strlower_n@plt+0x1d0b8>
  4214cc:	ldr	x8, [sp, #16]
  4214d0:	add	x0, x8, #0x18
  4214d4:	ldr	x8, [sp, #8]
  4214d8:	add	x1, x8, #0x18
  4214dc:	ldr	x8, [sp, #16]
  4214e0:	ldr	x2, [x8]
  4214e4:	bl	404210 <memcmp@plt>
  4214e8:	cbz	w0, 4214fc <ascii_strlower_n@plt+0x1d09c>
  4214ec:	mov	w8, wzr
  4214f0:	and	w8, w8, #0x1
  4214f4:	sturb	w8, [x29, #-1]
  4214f8:	b	421518 <ascii_strlower_n@plt+0x1d0b8>
  4214fc:	ldr	x8, [sp, #16]
  421500:	ldr	x0, [x8, #8]
  421504:	ldr	x8, [sp, #8]
  421508:	ldr	x1, [x8, #8]
  42150c:	bl	421414 <ascii_strlower_n@plt+0x1cfb4>
  421510:	and	w9, w0, #0x1
  421514:	sturb	w9, [x29, #-1]
  421518:	ldurb	w8, [x29, #-1]
  42151c:	and	w0, w8, #0x1
  421520:	ldp	x29, x30, [sp, #32]
  421524:	add	sp, sp, #0x30
  421528:	ret
  42152c:	sub	sp, sp, #0x40
  421530:	stp	x29, x30, [sp, #48]
  421534:	add	x29, sp, #0x30
  421538:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  42153c:	add	x8, x8, #0x677
  421540:	add	x8, x8, #0x3
  421544:	stur	x0, [x29, #-16]
  421548:	str	x1, [sp, #24]
  42154c:	str	x2, [sp, #16]
  421550:	ldr	x9, [sp, #16]
  421554:	str	x8, [sp, #8]
  421558:	cbnz	x9, 421564 <ascii_strlower_n@plt+0x1d104>
  42155c:	stur	wzr, [x29, #-4]
  421560:	b	421618 <ascii_strlower_n@plt+0x1d1b8>
  421564:	ldur	x8, [x29, #-16]
  421568:	cmp	x8, #0x0
  42156c:	cset	w9, ne  // ne = any
  421570:	mov	w10, #0x1                   	// #1
  421574:	eor	w9, w9, #0x1
  421578:	eor	w9, w9, w10
  42157c:	eor	w9, w9, w10
  421580:	and	w9, w9, #0x1
  421584:	mov	w0, w9
  421588:	sxtw	x8, w0
  42158c:	cbz	x8, 4215b4 <ascii_strlower_n@plt+0x1d154>
  421590:	mov	w8, wzr
  421594:	mov	w0, w8
  421598:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  42159c:	add	x1, x1, #0x61e
  4215a0:	ldr	x2, [sp, #8]
  4215a4:	mov	w3, #0x1c                  	// #28
  4215a8:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4215ac:	add	x4, x4, #0x621
  4215b0:	bl	4039d0 <log_assert_failed_realm@plt>
  4215b4:	ldr	x8, [sp, #24]
  4215b8:	cmp	x8, #0x0
  4215bc:	cset	w9, ne  // ne = any
  4215c0:	mov	w10, #0x1                   	// #1
  4215c4:	eor	w9, w9, #0x1
  4215c8:	eor	w9, w9, w10
  4215cc:	eor	w9, w9, w10
  4215d0:	and	w9, w9, #0x1
  4215d4:	mov	w0, w9
  4215d8:	sxtw	x8, w0
  4215dc:	cbz	x8, 421604 <ascii_strlower_n@plt+0x1d1a4>
  4215e0:	mov	w8, wzr
  4215e4:	mov	w0, w8
  4215e8:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  4215ec:	add	x1, x1, #0x655
  4215f0:	ldr	x2, [sp, #8]
  4215f4:	mov	w3, #0x1d                  	// #29
  4215f8:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4215fc:	add	x4, x4, #0x621
  421600:	bl	4039d0 <log_assert_failed_realm@plt>
  421604:	ldur	x0, [x29, #-16]
  421608:	ldr	x1, [sp, #24]
  42160c:	ldr	x2, [sp, #16]
  421610:	bl	404210 <memcmp@plt>
  421614:	stur	w0, [x29, #-4]
  421618:	ldur	w0, [x29, #-4]
  42161c:	ldp	x29, x30, [sp, #48]
  421620:	add	sp, sp, #0x40
  421624:	ret
  421628:	sub	sp, sp, #0x40
  42162c:	stp	x29, x30, [sp, #48]
  421630:	add	x29, sp, #0x30
  421634:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  421638:	add	x8, x8, #0xac0
  42163c:	add	x8, x8, #0x3
  421640:	stur	x0, [x29, #-16]
  421644:	str	x1, [sp, #24]
  421648:	str	x8, [sp, #8]
  42164c:	ldur	x8, [x29, #-16]
  421650:	cmp	x8, #0x0
  421654:	cset	w9, ne  // ne = any
  421658:	mov	w10, #0x1                   	// #1
  42165c:	eor	w9, w9, #0x1
  421660:	eor	w9, w9, w10
  421664:	eor	w9, w9, w10
  421668:	and	w9, w9, #0x1
  42166c:	mov	w0, w9
  421670:	sxtw	x8, w0
  421674:	cbz	x8, 42169c <ascii_strlower_n@plt+0x1d23c>
  421678:	mov	w8, wzr
  42167c:	mov	w0, w8
  421680:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  421684:	add	x1, x1, #0xeb8
  421688:	ldr	x2, [sp, #8]
  42168c:	mov	w3, #0x2b3                 	// #691
  421690:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  421694:	add	x4, x4, #0xe1
  421698:	bl	4039d0 <log_assert_failed_realm@plt>
  42169c:	ldr	x8, [sp, #24]
  4216a0:	cmp	x8, #0x0
  4216a4:	cset	w9, ne  // ne = any
  4216a8:	mov	w10, #0x1                   	// #1
  4216ac:	eor	w9, w9, #0x1
  4216b0:	eor	w9, w9, w10
  4216b4:	eor	w9, w9, w10
  4216b8:	and	w9, w9, #0x1
  4216bc:	mov	w0, w9
  4216c0:	sxtw	x8, w0
  4216c4:	cbz	x8, 4216ec <ascii_strlower_n@plt+0x1d28c>
  4216c8:	mov	w8, wzr
  4216cc:	mov	w0, w8
  4216d0:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4216d4:	add	x1, x1, #0xa3
  4216d8:	ldr	x2, [sp, #8]
  4216dc:	mov	w3, #0x2b4                 	// #692
  4216e0:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4216e4:	add	x4, x4, #0xe1
  4216e8:	bl	4039d0 <log_assert_failed_realm@plt>
  4216ec:	ldur	x8, [x29, #-16]
  4216f0:	ldr	x9, [sp, #24]
  4216f4:	cmp	x8, x9
  4216f8:	b.ne	421708 <ascii_strlower_n@plt+0x1d2a8>  // b.any
  4216fc:	mov	w8, #0x1                   	// #1
  421700:	stur	w8, [x29, #-4]
  421704:	b	42174c <ascii_strlower_n@plt+0x1d2ec>
  421708:	ldur	x8, [x29, #-16]
  42170c:	ldr	x0, [x8, #8]
  421710:	ldr	x8, [sp, #24]
  421714:	ldr	x1, [x8, #8]
  421718:	bl	41efe0 <ascii_strlower_n@plt+0x1ab80>
  42171c:	str	w0, [sp, #20]
  421720:	ldr	w9, [sp, #20]
  421724:	cmp	w9, #0x0
  421728:	cset	w9, gt
  42172c:	tbnz	w9, #0, 42173c <ascii_strlower_n@plt+0x1d2dc>
  421730:	ldr	w8, [sp, #20]
  421734:	stur	w8, [x29, #-4]
  421738:	b	42174c <ascii_strlower_n@plt+0x1d2ec>
  42173c:	ldur	x0, [x29, #-16]
  421740:	ldr	x1, [sp, #24]
  421744:	bl	420790 <ascii_strlower_n@plt+0x1c330>
  421748:	stur	w0, [x29, #-4]
  42174c:	ldur	w0, [x29, #-4]
  421750:	ldp	x29, x30, [sp, #48]
  421754:	add	sp, sp, #0x40
  421758:	ret
  42175c:	stp	x29, x30, [sp, #-32]!
  421760:	str	x28, [sp, #16]
  421764:	mov	x29, sp
  421768:	sub	sp, sp, #0x2d0
  42176c:	mov	x8, xzr
  421770:	adrp	x9, 42d000 <ascii_strlower_n@plt+0x28ba0>
  421774:	add	x9, x9, #0x7e4
  421778:	adrp	x10, 42f000 <ascii_strlower_n@plt+0x2aba0>
  42177c:	add	x10, x10, #0xc37
  421780:	adrp	x11, 431000 <ascii_strlower_n@plt+0x2cba0>
  421784:	add	x11, x11, #0xac0
  421788:	add	x11, x11, #0x3
  42178c:	stur	x0, [x29, #-16]
  421790:	stur	x8, [x29, #-24]
  421794:	str	x9, [sp, #264]
  421798:	str	x10, [sp, #256]
  42179c:	str	x11, [sp, #248]
  4217a0:	ldur	x8, [x29, #-16]
  4217a4:	cmp	x8, #0x0
  4217a8:	cset	w9, ne  // ne = any
  4217ac:	mov	w10, #0x1                   	// #1
  4217b0:	eor	w9, w9, #0x1
  4217b4:	eor	w9, w9, w10
  4217b8:	eor	w9, w9, w10
  4217bc:	and	w9, w9, #0x1
  4217c0:	mov	w0, w9
  4217c4:	sxtw	x8, w0
  4217c8:	cbz	x8, 4217f0 <ascii_strlower_n@plt+0x1d390>
  4217cc:	mov	w8, wzr
  4217d0:	mov	w0, w8
  4217d4:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  4217d8:	add	x1, x1, #0x20f
  4217dc:	ldr	x2, [sp, #248]
  4217e0:	mov	w3, #0x338                 	// #824
  4217e4:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4217e8:	add	x4, x4, #0x135
  4217ec:	bl	4039d0 <log_assert_failed_realm@plt>
  4217f0:	ldur	x8, [x29, #-16]
  4217f4:	ldr	x8, [x8, #16]
  4217f8:	cbz	x8, 421814 <ascii_strlower_n@plt+0x1d3b4>
  4217fc:	ldur	x8, [x29, #-16]
  421800:	ldr	x8, [x8, #16]
  421804:	stur	x8, [x29, #-8]
  421808:	mov	w9, #0x1                   	// #1
  42180c:	str	w9, [sp, #400]
  421810:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421814:	ldur	x8, [x29, #-16]
  421818:	ldr	x0, [x8, #8]
  42181c:	add	x1, sp, #0x198
  421820:	mov	x2, #0x118                 	// #280
  421824:	bl	41f918 <ascii_strlower_n@plt+0x1b4b8>
  421828:	ldur	x8, [x29, #-16]
  42182c:	ldrb	w9, [x8, #48]
  421830:	and	w9, w9, #0x1
  421834:	tbnz	w9, #0, 42183c <ascii_strlower_n@plt+0x1d3dc>
  421838:	b	421848 <ascii_strlower_n@plt+0x1d3e8>
  42183c:	mov	w8, #0xffffffff            	// #-1
  421840:	str	w8, [sp, #244]
  421844:	b	421858 <ascii_strlower_n@plt+0x1d3f8>
  421848:	ldur	x8, [x29, #-16]
  42184c:	ldr	x8, [x8, #8]
  421850:	ldrh	w9, [x8, #6]
  421854:	str	w9, [sp, #244]
  421858:	ldr	w8, [sp, #244]
  42185c:	cmp	w8, #0x1
  421860:	str	w8, [sp, #240]
  421864:	b.eq	421b38 <ascii_strlower_n@plt+0x1d6d8>  // b.none
  421868:	b	42186c <ascii_strlower_n@plt+0x1d40c>
  42186c:	ldr	w8, [sp, #240]
  421870:	cmp	w8, #0x2
  421874:	b.eq	421a44 <ascii_strlower_n@plt+0x1d5e4>  // b.none
  421878:	b	42187c <ascii_strlower_n@plt+0x1d41c>
  42187c:	ldr	w8, [sp, #240]
  421880:	cmp	w8, #0x5
  421884:	b.eq	421a44 <ascii_strlower_n@plt+0x1d5e4>  // b.none
  421888:	b	42188c <ascii_strlower_n@plt+0x1d42c>
  42188c:	ldr	w8, [sp, #240]
  421890:	cmp	w8, #0x6
  421894:	b.eq	421c4c <ascii_strlower_n@plt+0x1d7ec>  // b.none
  421898:	b	42189c <ascii_strlower_n@plt+0x1d43c>
  42189c:	ldr	w8, [sp, #240]
  4218a0:	cmp	w8, #0xc
  4218a4:	b.eq	421a44 <ascii_strlower_n@plt+0x1d5e4>  // b.none
  4218a8:	b	4218ac <ascii_strlower_n@plt+0x1d44c>
  4218ac:	ldr	w8, [sp, #240]
  4218b0:	cmp	w8, #0xd
  4218b4:	b.eq	421a84 <ascii_strlower_n@plt+0x1d624>  // b.none
  4218b8:	b	4218bc <ascii_strlower_n@plt+0x1d45c>
  4218bc:	ldr	w8, [sp, #240]
  4218c0:	cmp	w8, #0xf
  4218c4:	b.eq	421cf4 <ascii_strlower_n@plt+0x1d894>  // b.none
  4218c8:	b	4218cc <ascii_strlower_n@plt+0x1d46c>
  4218cc:	ldr	w8, [sp, #240]
  4218d0:	cmp	w8, #0x10
  4218d4:	b.eq	421ad0 <ascii_strlower_n@plt+0x1d670>  // b.none
  4218d8:	b	4218dc <ascii_strlower_n@plt+0x1d47c>
  4218dc:	ldr	w8, [sp, #240]
  4218e0:	cmp	w8, #0x1c
  4218e4:	b.eq	421bd4 <ascii_strlower_n@plt+0x1d774>  // b.none
  4218e8:	b	4218ec <ascii_strlower_n@plt+0x1d48c>
  4218ec:	ldr	w8, [sp, #240]
  4218f0:	cmp	w8, #0x1d
  4218f4:	b.eq	421d44 <ascii_strlower_n@plt+0x1d8e4>  // b.none
  4218f8:	b	4218fc <ascii_strlower_n@plt+0x1d49c>
  4218fc:	ldr	w8, [sp, #240]
  421900:	cmp	w8, #0x21
  421904:	b.eq	4219bc <ascii_strlower_n@plt+0x1d55c>  // b.none
  421908:	b	42190c <ascii_strlower_n@plt+0x1d4ac>
  42190c:	ldr	w8, [sp, #240]
  421910:	cmp	w8, #0x27
  421914:	b.eq	421a44 <ascii_strlower_n@plt+0x1d5e4>  // b.none
  421918:	b	42191c <ascii_strlower_n@plt+0x1d4bc>
  42191c:	ldr	w8, [sp, #240]
  421920:	cmp	w8, #0x2b
  421924:	b.eq	421e28 <ascii_strlower_n@plt+0x1d9c8>  // b.none
  421928:	b	42192c <ascii_strlower_n@plt+0x1d4cc>
  42192c:	ldr	w8, [sp, #240]
  421930:	cmp	w8, #0x2c
  421934:	b.eq	421eb8 <ascii_strlower_n@plt+0x1da58>  // b.none
  421938:	b	42193c <ascii_strlower_n@plt+0x1d4dc>
  42193c:	ldr	w8, [sp, #240]
  421940:	cmp	w8, #0x2e
  421944:	b.eq	42211c <ascii_strlower_n@plt+0x1dcbc>  // b.none
  421948:	b	42194c <ascii_strlower_n@plt+0x1d4ec>
  42194c:	ldr	w8, [sp, #240]
  421950:	cmp	w8, #0x2f
  421954:	b.eq	422388 <ascii_strlower_n@plt+0x1df28>  // b.none
  421958:	b	42195c <ascii_strlower_n@plt+0x1d4fc>
  42195c:	ldr	w8, [sp, #240]
  421960:	cmp	w8, #0x30
  421964:	b.eq	421f40 <ascii_strlower_n@plt+0x1dae0>  // b.none
  421968:	b	42196c <ascii_strlower_n@plt+0x1d50c>
  42196c:	ldr	w8, [sp, #240]
  421970:	cmp	w8, #0x32
  421974:	b.eq	422400 <ascii_strlower_n@plt+0x1dfa0>  // b.none
  421978:	b	42197c <ascii_strlower_n@plt+0x1d51c>
  42197c:	ldr	w8, [sp, #240]
  421980:	cmp	w8, #0x34
  421984:	b.eq	422594 <ascii_strlower_n@plt+0x1e134>  // b.none
  421988:	b	42198c <ascii_strlower_n@plt+0x1d52c>
  42198c:	ldr	w8, [sp, #240]
  421990:	cmp	w8, #0x3d
  421994:	b.eq	42277c <ascii_strlower_n@plt+0x1e31c>  // b.none
  421998:	b	42199c <ascii_strlower_n@plt+0x1d53c>
  42199c:	ldr	w8, [sp, #240]
  4219a0:	cmp	w8, #0x63
  4219a4:	b.eq	421ad0 <ascii_strlower_n@plt+0x1d670>  // b.none
  4219a8:	b	4219ac <ascii_strlower_n@plt+0x1d54c>
  4219ac:	ldr	w8, [sp, #240]
  4219b0:	cmp	w8, #0x101
  4219b4:	b.eq	422670 <ascii_strlower_n@plt+0x1e210>  // b.none
  4219b8:	b	42282c <ascii_strlower_n@plt+0x1e3cc>
  4219bc:	ldur	x8, [x29, #-16]
  4219c0:	ldrh	w3, [x8, #80]
  4219c4:	ldur	x8, [x29, #-16]
  4219c8:	ldrh	w4, [x8, #82]
  4219cc:	ldur	x8, [x29, #-16]
  4219d0:	ldrh	w5, [x8, #84]
  4219d4:	ldur	x8, [x29, #-16]
  4219d8:	ldr	x0, [x8, #88]
  4219dc:	str	w3, [sp, #236]
  4219e0:	str	w4, [sp, #232]
  4219e4:	str	w5, [sp, #228]
  4219e8:	bl	4228e0 <ascii_strlower_n@plt+0x1e480>
  4219ec:	sub	x8, x29, #0x20
  4219f0:	str	x0, [sp, #216]
  4219f4:	mov	x0, x8
  4219f8:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  4219fc:	add	x1, x1, #0x174
  421a00:	add	x2, sp, #0x198
  421a04:	ldr	w3, [sp, #236]
  421a08:	ldr	w4, [sp, #232]
  421a0c:	ldr	w5, [sp, #228]
  421a10:	ldr	x6, [sp, #216]
  421a14:	bl	403d70 <asprintf@plt>
  421a18:	str	w0, [sp, #404]
  421a1c:	ldr	w9, [sp, #404]
  421a20:	cmp	w9, #0x0
  421a24:	cset	w9, ge  // ge = tcont
  421a28:	tbnz	w9, #0, 421a40 <ascii_strlower_n@plt+0x1d5e0>
  421a2c:	mov	x8, xzr
  421a30:	stur	x8, [x29, #-8]
  421a34:	mov	w9, #0x1                   	// #1
  421a38:	str	w9, [sp, #400]
  421a3c:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421a40:	b	4228a8 <ascii_strlower_n@plt+0x1e448>
  421a44:	ldur	x8, [x29, #-16]
  421a48:	ldr	x2, [x8, #80]
  421a4c:	add	x0, sp, #0x198
  421a50:	ldr	x1, [sp, #256]
  421a54:	mov	x8, xzr
  421a58:	mov	x3, x8
  421a5c:	bl	403ec0 <strjoin_real@plt>
  421a60:	stur	x0, [x29, #-32]
  421a64:	ldur	x8, [x29, #-32]
  421a68:	cbnz	x8, 421a80 <ascii_strlower_n@plt+0x1d620>
  421a6c:	mov	x8, xzr
  421a70:	stur	x8, [x29, #-8]
  421a74:	mov	w9, #0x1                   	// #1
  421a78:	str	w9, [sp, #400]
  421a7c:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421a80:	b	4228a8 <ascii_strlower_n@plt+0x1e448>
  421a84:	ldur	x8, [x29, #-16]
  421a88:	ldr	x2, [x8, #80]
  421a8c:	ldur	x8, [x29, #-16]
  421a90:	ldr	x4, [x8, #88]
  421a94:	add	x0, sp, #0x198
  421a98:	ldr	x1, [sp, #256]
  421a9c:	ldr	x3, [sp, #256]
  421aa0:	mov	x8, xzr
  421aa4:	mov	x5, x8
  421aa8:	bl	403ec0 <strjoin_real@plt>
  421aac:	stur	x0, [x29, #-32]
  421ab0:	ldur	x8, [x29, #-32]
  421ab4:	cbnz	x8, 421acc <ascii_strlower_n@plt+0x1d66c>
  421ab8:	mov	x8, xzr
  421abc:	stur	x8, [x29, #-8]
  421ac0:	mov	w9, #0x1                   	// #1
  421ac4:	str	w9, [sp, #400]
  421ac8:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421acc:	b	4228a8 <ascii_strlower_n@plt+0x1e448>
  421ad0:	ldur	x8, [x29, #-16]
  421ad4:	ldr	x0, [x8, #80]
  421ad8:	bl	42291c <ascii_strlower_n@plt+0x1e4bc>
  421adc:	stur	x0, [x29, #-24]
  421ae0:	ldur	x8, [x29, #-24]
  421ae4:	cbnz	x8, 421afc <ascii_strlower_n@plt+0x1d69c>
  421ae8:	mov	x8, xzr
  421aec:	stur	x8, [x29, #-8]
  421af0:	mov	w9, #0x1                   	// #1
  421af4:	str	w9, [sp, #400]
  421af8:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421afc:	ldur	x2, [x29, #-24]
  421b00:	add	x0, sp, #0x198
  421b04:	ldr	x1, [sp, #256]
  421b08:	mov	x8, xzr
  421b0c:	mov	x3, x8
  421b10:	bl	403ec0 <strjoin_real@plt>
  421b14:	stur	x0, [x29, #-32]
  421b18:	ldur	x8, [x29, #-32]
  421b1c:	cbnz	x8, 421b34 <ascii_strlower_n@plt+0x1d6d4>
  421b20:	mov	x8, xzr
  421b24:	stur	x8, [x29, #-8]
  421b28:	mov	w9, #0x1                   	// #1
  421b2c:	str	w9, [sp, #400]
  421b30:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421b34:	b	4228a8 <ascii_strlower_n@plt+0x1e448>
  421b38:	add	x2, sp, #0x188
  421b3c:	mov	x8, xzr
  421b40:	str	x8, [sp, #392]
  421b44:	ldur	x8, [x29, #-16]
  421b48:	add	x1, x8, #0x50
  421b4c:	mov	w0, #0x2                   	// #2
  421b50:	bl	403eb0 <in_addr_to_string@plt>
  421b54:	str	w0, [sp, #404]
  421b58:	ldr	w9, [sp, #404]
  421b5c:	cmp	w9, #0x0
  421b60:	cset	w9, ge  // ge = tcont
  421b64:	tbnz	w9, #0, 421b7c <ascii_strlower_n@plt+0x1d71c>
  421b68:	mov	x8, xzr
  421b6c:	stur	x8, [x29, #-8]
  421b70:	mov	w9, #0x1                   	// #1
  421b74:	str	w9, [sp, #400]
  421b78:	b	421bbc <ascii_strlower_n@plt+0x1d75c>
  421b7c:	ldr	x2, [sp, #392]
  421b80:	add	x0, sp, #0x198
  421b84:	ldr	x1, [sp, #256]
  421b88:	mov	x8, xzr
  421b8c:	mov	x3, x8
  421b90:	bl	403ec0 <strjoin_real@plt>
  421b94:	stur	x0, [x29, #-32]
  421b98:	ldur	x8, [x29, #-32]
  421b9c:	cbnz	x8, 421bb4 <ascii_strlower_n@plt+0x1d754>
  421ba0:	mov	x8, xzr
  421ba4:	stur	x8, [x29, #-8]
  421ba8:	mov	w9, #0x1                   	// #1
  421bac:	str	w9, [sp, #400]
  421bb0:	b	421bbc <ascii_strlower_n@plt+0x1d75c>
  421bb4:	mov	w8, #0x4                   	// #4
  421bb8:	str	w8, [sp, #400]
  421bbc:	add	x0, sp, #0x188
  421bc0:	bl	41f2e8 <ascii_strlower_n@plt+0x1ae88>
  421bc4:	ldr	w8, [sp, #400]
  421bc8:	cmp	w8, #0x4
  421bcc:	b.eq	4228a8 <ascii_strlower_n@plt+0x1e448>  // b.none
  421bd0:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421bd4:	ldur	x8, [x29, #-16]
  421bd8:	add	x1, x8, #0x50
  421bdc:	mov	w0, #0xa                   	// #10
  421be0:	sub	x2, x29, #0x18
  421be4:	bl	403eb0 <in_addr_to_string@plt>
  421be8:	str	w0, [sp, #404]
  421bec:	ldr	w9, [sp, #404]
  421bf0:	cmp	w9, #0x0
  421bf4:	cset	w9, ge  // ge = tcont
  421bf8:	tbnz	w9, #0, 421c10 <ascii_strlower_n@plt+0x1d7b0>
  421bfc:	mov	x8, xzr
  421c00:	stur	x8, [x29, #-8]
  421c04:	mov	w9, #0x1                   	// #1
  421c08:	str	w9, [sp, #400]
  421c0c:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421c10:	ldur	x2, [x29, #-24]
  421c14:	add	x0, sp, #0x198
  421c18:	ldr	x1, [sp, #256]
  421c1c:	mov	x8, xzr
  421c20:	mov	x3, x8
  421c24:	bl	403ec0 <strjoin_real@plt>
  421c28:	stur	x0, [x29, #-32]
  421c2c:	ldur	x8, [x29, #-32]
  421c30:	cbnz	x8, 421c48 <ascii_strlower_n@plt+0x1d7e8>
  421c34:	mov	x8, xzr
  421c38:	stur	x8, [x29, #-8]
  421c3c:	mov	w9, #0x1                   	// #1
  421c40:	str	w9, [sp, #400]
  421c44:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421c48:	b	4228a8 <ascii_strlower_n@plt+0x1e448>
  421c4c:	ldur	x8, [x29, #-16]
  421c50:	ldr	x0, [x8, #80]
  421c54:	bl	4228e0 <ascii_strlower_n@plt+0x1e480>
  421c58:	ldur	x8, [x29, #-16]
  421c5c:	ldr	x8, [x8, #88]
  421c60:	str	x0, [sp, #208]
  421c64:	mov	x0, x8
  421c68:	bl	4228e0 <ascii_strlower_n@plt+0x1e480>
  421c6c:	ldur	x8, [x29, #-16]
  421c70:	ldr	w5, [x8, #96]
  421c74:	ldur	x8, [x29, #-16]
  421c78:	ldr	w6, [x8, #100]
  421c7c:	ldur	x8, [x29, #-16]
  421c80:	ldr	w7, [x8, #104]
  421c84:	ldur	x8, [x29, #-16]
  421c88:	ldr	w9, [x8, #108]
  421c8c:	ldur	x8, [x29, #-16]
  421c90:	ldr	w10, [x8, #112]
  421c94:	sub	x8, x29, #0x20
  421c98:	str	x0, [sp, #200]
  421c9c:	mov	x0, x8
  421ca0:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  421ca4:	add	x1, x1, #0x183
  421ca8:	add	x2, sp, #0x198
  421cac:	ldr	x3, [sp, #208]
  421cb0:	ldr	x4, [sp, #200]
  421cb4:	mov	x8, sp
  421cb8:	str	w9, [x8]
  421cbc:	mov	x8, sp
  421cc0:	str	w10, [x8, #8]
  421cc4:	bl	403d70 <asprintf@plt>
  421cc8:	str	w0, [sp, #404]
  421ccc:	ldr	w9, [sp, #404]
  421cd0:	cmp	w9, #0x0
  421cd4:	cset	w9, ge  // ge = tcont
  421cd8:	tbnz	w9, #0, 421cf0 <ascii_strlower_n@plt+0x1d890>
  421cdc:	mov	x8, xzr
  421ce0:	stur	x8, [x29, #-8]
  421ce4:	mov	w9, #0x1                   	// #1
  421ce8:	str	w9, [sp, #400]
  421cec:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421cf0:	b	4228a8 <ascii_strlower_n@plt+0x1e448>
  421cf4:	ldur	x8, [x29, #-16]
  421cf8:	ldrh	w3, [x8, #80]
  421cfc:	ldur	x8, [x29, #-16]
  421d00:	ldr	x4, [x8, #88]
  421d04:	sub	x0, x29, #0x20
  421d08:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  421d0c:	add	x1, x1, #0x19b
  421d10:	add	x2, sp, #0x198
  421d14:	bl	403d70 <asprintf@plt>
  421d18:	str	w0, [sp, #404]
  421d1c:	ldr	w9, [sp, #404]
  421d20:	cmp	w9, #0x0
  421d24:	cset	w9, ge  // ge = tcont
  421d28:	tbnz	w9, #0, 421d40 <ascii_strlower_n@plt+0x1d8e0>
  421d2c:	mov	x8, xzr
  421d30:	stur	x8, [x29, #-8]
  421d34:	mov	w9, #0x1                   	// #1
  421d38:	str	w9, [sp, #400]
  421d3c:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421d40:	b	4228a8 <ascii_strlower_n@plt+0x1e448>
  421d44:	ldur	x8, [x29, #-16]
  421d48:	ldrb	w9, [x8, #80]
  421d4c:	cmp	w9, #0x0
  421d50:	cset	w9, eq  // eq = none
  421d54:	mov	w10, #0x1                   	// #1
  421d58:	eor	w9, w9, #0x1
  421d5c:	eor	w9, w9, w10
  421d60:	eor	w9, w9, w10
  421d64:	and	w9, w9, #0x1
  421d68:	mov	w0, w9
  421d6c:	sxtw	x8, w0
  421d70:	cbz	x8, 421d98 <ascii_strlower_n@plt+0x1d938>
  421d74:	mov	w8, wzr
  421d78:	mov	w0, w8
  421d7c:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  421d80:	add	x1, x1, #0x1a4
  421d84:	ldr	x2, [sp, #248]
  421d88:	mov	w3, #0x396                 	// #918
  421d8c:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  421d90:	add	x4, x4, #0x135
  421d94:	bl	4039d0 <log_assert_failed_realm@plt>
  421d98:	ldur	x8, [x29, #-16]
  421d9c:	ldr	w0, [x8, #84]
  421da0:	ldur	x8, [x29, #-16]
  421da4:	ldr	w1, [x8, #88]
  421da8:	ldur	x8, [x29, #-16]
  421dac:	ldr	w2, [x8, #92]
  421db0:	ldur	x8, [x29, #-16]
  421db4:	ldrb	w3, [x8, #81]
  421db8:	ldur	x8, [x29, #-16]
  421dbc:	ldrb	w4, [x8, #82]
  421dc0:	ldur	x8, [x29, #-16]
  421dc4:	ldrb	w5, [x8, #83]
  421dc8:	bl	422b6c <ascii_strlower_n@plt+0x1e70c>
  421dcc:	stur	x0, [x29, #-24]
  421dd0:	ldur	x8, [x29, #-24]
  421dd4:	cbnz	x8, 421dec <ascii_strlower_n@plt+0x1d98c>
  421dd8:	mov	x8, xzr
  421ddc:	stur	x8, [x29, #-8]
  421de0:	mov	w9, #0x1                   	// #1
  421de4:	str	w9, [sp, #400]
  421de8:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421dec:	ldur	x2, [x29, #-24]
  421df0:	add	x0, sp, #0x198
  421df4:	ldr	x1, [sp, #256]
  421df8:	mov	x8, xzr
  421dfc:	mov	x3, x8
  421e00:	bl	403ec0 <strjoin_real@plt>
  421e04:	stur	x0, [x29, #-32]
  421e08:	ldur	x8, [x29, #-32]
  421e0c:	cbnz	x8, 421e24 <ascii_strlower_n@plt+0x1d9c4>
  421e10:	mov	x8, xzr
  421e14:	stur	x8, [x29, #-8]
  421e18:	mov	w9, #0x1                   	// #1
  421e1c:	str	w9, [sp, #400]
  421e20:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421e24:	b	4228a8 <ascii_strlower_n@plt+0x1e448>
  421e28:	ldur	x8, [x29, #-16]
  421e2c:	ldr	x0, [x8, #88]
  421e30:	ldur	x8, [x29, #-16]
  421e34:	ldr	x1, [x8, #96]
  421e38:	bl	404330 <hexmem@plt>
  421e3c:	stur	x0, [x29, #-24]
  421e40:	ldur	x8, [x29, #-24]
  421e44:	cbnz	x8, 421e5c <ascii_strlower_n@plt+0x1d9fc>
  421e48:	mov	x8, xzr
  421e4c:	stur	x8, [x29, #-8]
  421e50:	mov	w9, #0x1                   	// #1
  421e54:	str	w9, [sp, #400]
  421e58:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421e5c:	ldur	x8, [x29, #-16]
  421e60:	ldrh	w3, [x8, #80]
  421e64:	ldur	x8, [x29, #-16]
  421e68:	ldrb	w4, [x8, #82]
  421e6c:	ldur	x8, [x29, #-16]
  421e70:	ldrb	w5, [x8, #83]
  421e74:	ldur	x6, [x29, #-24]
  421e78:	sub	x0, x29, #0x20
  421e7c:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  421e80:	add	x1, x1, #0x174
  421e84:	add	x2, sp, #0x198
  421e88:	bl	403d70 <asprintf@plt>
  421e8c:	str	w0, [sp, #404]
  421e90:	ldr	w9, [sp, #404]
  421e94:	cmp	w9, #0x0
  421e98:	cset	w9, ge  // ge = tcont
  421e9c:	tbnz	w9, #0, 421eb4 <ascii_strlower_n@plt+0x1da54>
  421ea0:	mov	x8, xzr
  421ea4:	stur	x8, [x29, #-8]
  421ea8:	mov	w9, #0x1                   	// #1
  421eac:	str	w9, [sp, #400]
  421eb0:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421eb4:	b	4228a8 <ascii_strlower_n@plt+0x1e448>
  421eb8:	ldur	x8, [x29, #-16]
  421ebc:	ldr	x0, [x8, #88]
  421ec0:	ldur	x8, [x29, #-16]
  421ec4:	ldr	x1, [x8, #96]
  421ec8:	bl	404330 <hexmem@plt>
  421ecc:	stur	x0, [x29, #-24]
  421ed0:	ldur	x8, [x29, #-24]
  421ed4:	cbnz	x8, 421eec <ascii_strlower_n@plt+0x1da8c>
  421ed8:	mov	x8, xzr
  421edc:	stur	x8, [x29, #-8]
  421ee0:	mov	w9, #0x1                   	// #1
  421ee4:	str	w9, [sp, #400]
  421ee8:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421eec:	ldur	x8, [x29, #-16]
  421ef0:	ldrb	w3, [x8, #80]
  421ef4:	ldur	x8, [x29, #-16]
  421ef8:	ldrb	w4, [x8, #81]
  421efc:	ldur	x5, [x29, #-24]
  421f00:	sub	x0, x29, #0x20
  421f04:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  421f08:	add	x1, x1, #0x1b9
  421f0c:	add	x2, sp, #0x198
  421f10:	bl	403d70 <asprintf@plt>
  421f14:	str	w0, [sp, #404]
  421f18:	ldr	w9, [sp, #404]
  421f1c:	cmp	w9, #0x0
  421f20:	cset	w9, ge  // ge = tcont
  421f24:	tbnz	w9, #0, 421f3c <ascii_strlower_n@plt+0x1dadc>
  421f28:	mov	x8, xzr
  421f2c:	stur	x8, [x29, #-8]
  421f30:	mov	w9, #0x1                   	// #1
  421f34:	str	w9, [sp, #400]
  421f38:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  421f3c:	b	4228a8 <ascii_strlower_n@plt+0x1e448>
  421f40:	add	x1, sp, #0x180
  421f44:	mov	x8, xzr
  421f48:	str	x8, [sp, #384]
  421f4c:	ldur	x0, [x29, #-16]
  421f50:	mov	w9, #0x1                   	// #1
  421f54:	and	w9, w9, #0x1
  421f58:	str	x1, [sp, #192]
  421f5c:	mov	w1, w9
  421f60:	bl	42c52c <ascii_strlower_n@plt+0x280cc>
  421f64:	strh	w0, [sp, #374]
  421f68:	ldur	x8, [x29, #-16]
  421f6c:	ldrb	w0, [x8, #83]
  421f70:	ldr	x1, [sp, #192]
  421f74:	bl	422e30 <ascii_strlower_n@plt+0x1e9d0>
  421f78:	str	w0, [sp, #404]
  421f7c:	ldr	w9, [sp, #404]
  421f80:	cmp	w9, #0x0
  421f84:	cset	w9, ge  // ge = tcont
  421f88:	tbnz	w9, #0, 421fa0 <ascii_strlower_n@plt+0x1db40>
  421f8c:	mov	x8, xzr
  421f90:	stur	x8, [x29, #-8]
  421f94:	mov	w9, #0x1                   	// #1
  421f98:	str	w9, [sp, #400]
  421f9c:	b	422104 <ascii_strlower_n@plt+0x1dca4>
  421fa0:	ldur	x8, [x29, #-16]
  421fa4:	ldrh	w3, [x8, #80]
  421fa8:	ldur	x8, [x29, #-16]
  421fac:	ldrb	w4, [x8, #82]
  421fb0:	ldr	x5, [sp, #384]
  421fb4:	sub	x0, x29, #0x20
  421fb8:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  421fbc:	add	x1, x1, #0x1b9
  421fc0:	add	x2, sp, #0x198
  421fc4:	bl	403d70 <asprintf@plt>
  421fc8:	str	w0, [sp, #404]
  421fcc:	ldr	w9, [sp, #404]
  421fd0:	cmp	w9, #0x0
  421fd4:	cset	w9, ge  // ge = tcont
  421fd8:	tbnz	w9, #0, 421ff0 <ascii_strlower_n@plt+0x1db90>
  421fdc:	mov	x8, xzr
  421fe0:	stur	x8, [x29, #-8]
  421fe4:	mov	w9, #0x1                   	// #1
  421fe8:	str	w9, [sp, #400]
  421fec:	b	422104 <ascii_strlower_n@plt+0x1dca4>
  421ff0:	ldr	w1, [sp, #404]
  421ff4:	ldur	x8, [x29, #-16]
  421ff8:	ldr	x2, [x8, #88]
  421ffc:	ldur	x8, [x29, #-16]
  422000:	ldr	x3, [x8, #96]
  422004:	str	w1, [sp, #188]
  422008:	str	x2, [sp, #176]
  42200c:	str	x3, [sp, #168]
  422010:	bl	404340 <columns@plt>
  422014:	sub	x8, x29, #0x20
  422018:	str	w0, [sp, #164]
  42201c:	mov	x0, x8
  422020:	ldr	w1, [sp, #188]
  422024:	ldr	x2, [sp, #176]
  422028:	ldr	x3, [sp, #168]
  42202c:	mov	w4, #0x8                   	// #8
  422030:	ldr	w5, [sp, #164]
  422034:	bl	404350 <base64_append@plt>
  422038:	str	w0, [sp, #404]
  42203c:	ldr	w9, [sp, #404]
  422040:	cmp	w9, #0x0
  422044:	cset	w9, ge  // ge = tcont
  422048:	tbnz	w9, #0, 422060 <ascii_strlower_n@plt+0x1dc00>
  42204c:	mov	x8, xzr
  422050:	stur	x8, [x29, #-8]
  422054:	mov	w9, #0x1                   	// #1
  422058:	str	w9, [sp, #400]
  42205c:	b	422104 <ascii_strlower_n@plt+0x1dca4>
  422060:	ldur	x2, [x29, #-32]
  422064:	ldur	x8, [x29, #-16]
  422068:	ldrh	w9, [x8, #80]
  42206c:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  422070:	add	x8, x8, #0x1f7
  422074:	tst	w9, #0x1
  422078:	ldr	x10, [sp, #264]
  42207c:	csel	x3, x8, x10, ne  // ne = any
  422080:	ldur	x8, [x29, #-16]
  422084:	ldrh	w9, [x8, #80]
  422088:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  42208c:	add	x8, x8, #0x1fc
  422090:	tst	w9, #0x80
  422094:	csel	x4, x8, x10, ne  // ne = any
  422098:	ldur	x8, [x29, #-16]
  42209c:	ldrh	w9, [x8, #80]
  4220a0:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  4220a4:	add	x8, x8, #0x204
  4220a8:	tst	w9, #0x100
  4220ac:	csel	x5, x8, x10, ne  // ne = any
  4220b0:	ldrh	w6, [sp, #374]
  4220b4:	add	x0, sp, #0x178
  4220b8:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  4220bc:	add	x1, x1, #0x1c5
  4220c0:	bl	403d70 <asprintf@plt>
  4220c4:	str	w0, [sp, #404]
  4220c8:	ldr	w9, [sp, #404]
  4220cc:	cmp	w9, #0x0
  4220d0:	cset	w9, ge  // ge = tcont
  4220d4:	tbnz	w9, #0, 4220ec <ascii_strlower_n@plt+0x1dc8c>
  4220d8:	mov	x8, xzr
  4220dc:	stur	x8, [x29, #-8]
  4220e0:	mov	w9, #0x1                   	// #1
  4220e4:	str	w9, [sp, #400]
  4220e8:	b	422104 <ascii_strlower_n@plt+0x1dca4>
  4220ec:	ldur	x0, [x29, #-32]
  4220f0:	bl	403ac0 <free@plt>
  4220f4:	ldr	x8, [sp, #376]
  4220f8:	stur	x8, [x29, #-32]
  4220fc:	mov	w9, #0x4                   	// #4
  422100:	str	w9, [sp, #400]
  422104:	add	x0, sp, #0x180
  422108:	bl	41f2e8 <ascii_strlower_n@plt+0x1ae88>
  42210c:	ldr	w8, [sp, #400]
  422110:	cmp	w8, #0x4
  422114:	b.eq	4228a8 <ascii_strlower_n@plt+0x1e448>  // b.none
  422118:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  42211c:	add	x1, sp, #0x168
  422120:	mov	x8, xzr
  422124:	str	x8, [sp, #360]
  422128:	ldur	x8, [x29, #-16]
  42212c:	ldrh	w0, [x8, #80]
  422130:	str	x1, [sp, #152]
  422134:	bl	42adf8 <ascii_strlower_n@plt+0x26998>
  422138:	str	x0, [sp, #320]
  42213c:	ldur	x8, [x29, #-16]
  422140:	ldrb	w0, [x8, #82]
  422144:	ldr	x1, [sp, #152]
  422148:	bl	422e30 <ascii_strlower_n@plt+0x1e9d0>
  42214c:	str	w0, [sp, #404]
  422150:	ldr	w9, [sp, #404]
  422154:	cmp	w9, #0x0
  422158:	cset	w9, ge  // ge = tcont
  42215c:	tbnz	w9, #0, 422174 <ascii_strlower_n@plt+0x1dd14>
  422160:	mov	x8, xzr
  422164:	stur	x8, [x29, #-8]
  422168:	mov	w9, #0x1                   	// #1
  42216c:	str	w9, [sp, #400]
  422170:	b	422370 <ascii_strlower_n@plt+0x1df10>
  422174:	ldur	x8, [x29, #-16]
  422178:	ldr	w9, [x8, #88]
  42217c:	mov	w2, w9
  422180:	add	x0, sp, #0x159
  422184:	mov	x1, #0xf                   	// #15
  422188:	bl	422f00 <ascii_strlower_n@plt+0x1eaa0>
  42218c:	str	w0, [sp, #404]
  422190:	ldr	w9, [sp, #404]
  422194:	cmp	w9, #0x0
  422198:	cset	w9, ge  // ge = tcont
  42219c:	tbnz	w9, #0, 4221b4 <ascii_strlower_n@plt+0x1dd54>
  4221a0:	mov	x8, xzr
  4221a4:	stur	x8, [x29, #-8]
  4221a8:	mov	w9, #0x1                   	// #1
  4221ac:	str	w9, [sp, #400]
  4221b0:	b	422370 <ascii_strlower_n@plt+0x1df10>
  4221b4:	ldur	x8, [x29, #-16]
  4221b8:	ldr	w9, [x8, #92]
  4221bc:	mov	w2, w9
  4221c0:	add	x0, sp, #0x14a
  4221c4:	mov	x1, #0xf                   	// #15
  4221c8:	bl	422f00 <ascii_strlower_n@plt+0x1eaa0>
  4221cc:	str	w0, [sp, #404]
  4221d0:	ldr	w9, [sp, #404]
  4221d4:	cmp	w9, #0x0
  4221d8:	cset	w9, ge  // ge = tcont
  4221dc:	tbnz	w9, #0, 4221f4 <ascii_strlower_n@plt+0x1dd94>
  4221e0:	mov	x8, xzr
  4221e4:	stur	x8, [x29, #-8]
  4221e8:	mov	w9, #0x1                   	// #1
  4221ec:	str	w9, [sp, #400]
  4221f0:	b	422370 <ascii_strlower_n@plt+0x1df10>
  4221f4:	ldr	x8, [sp, #320]
  4221f8:	str	x8, [sp, #144]
  4221fc:	cbz	x8, 42220c <ascii_strlower_n@plt+0x1ddac>
  422200:	ldr	x8, [sp, #144]
  422204:	str	x8, [sp, #136]
  422208:	b	422218 <ascii_strlower_n@plt+0x1ddb8>
  42220c:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  422210:	add	x8, x8, #0xeb3
  422214:	str	x8, [sp, #136]
  422218:	ldr	x8, [sp, #136]
  42221c:	ldr	x9, [sp, #320]
  422220:	mov	w10, wzr
  422224:	mov	w11, #0x1                   	// #1
  422228:	cmp	x9, #0x0
  42222c:	csel	w4, w10, w11, ne  // ne = any
  422230:	ldr	x9, [sp, #320]
  422234:	str	x8, [sp, #128]
  422238:	str	w4, [sp, #124]
  42223c:	cbz	x9, 42224c <ascii_strlower_n@plt+0x1ddec>
  422240:	mov	w8, wzr
  422244:	str	w8, [sp, #120]
  422248:	b	422258 <ascii_strlower_n@plt+0x1ddf8>
  42224c:	ldur	x8, [x29, #-16]
  422250:	ldrh	w9, [x8, #80]
  422254:	str	w9, [sp, #120]
  422258:	ldr	w8, [sp, #120]
  42225c:	ldr	x6, [sp, #360]
  422260:	ldur	x9, [x29, #-16]
  422264:	ldrb	w7, [x9, #83]
  422268:	ldur	x9, [x29, #-16]
  42226c:	ldr	w10, [x9, #84]
  422270:	ldur	x9, [x29, #-16]
  422274:	ldrh	w11, [x9, #96]
  422278:	ldur	x9, [x29, #-16]
  42227c:	ldr	x9, [x9, #104]
  422280:	sub	x0, x29, #0x20
  422284:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  422288:	add	x1, x1, #0x20e
  42228c:	add	x2, sp, #0x198
  422290:	ldr	x3, [sp, #128]
  422294:	ldr	w4, [sp, #124]
  422298:	mov	w5, w8
  42229c:	mov	x12, sp
  4222a0:	str	w10, [x12]
  4222a4:	mov	x12, sp
  4222a8:	add	x13, sp, #0x159
  4222ac:	str	x13, [x12, #8]
  4222b0:	mov	x12, sp
  4222b4:	add	x13, sp, #0x14a
  4222b8:	str	x13, [x12, #16]
  4222bc:	mov	x12, sp
  4222c0:	str	w11, [x12, #24]
  4222c4:	mov	x12, sp
  4222c8:	str	x9, [x12, #32]
  4222cc:	bl	403d70 <asprintf@plt>
  4222d0:	str	w0, [sp, #404]
  4222d4:	ldr	w8, [sp, #404]
  4222d8:	cmp	w8, #0x0
  4222dc:	cset	w8, ge  // ge = tcont
  4222e0:	tbnz	w8, #0, 4222f8 <ascii_strlower_n@plt+0x1de98>
  4222e4:	mov	x8, xzr
  4222e8:	stur	x8, [x29, #-8]
  4222ec:	mov	w9, #0x1                   	// #1
  4222f0:	str	w9, [sp, #400]
  4222f4:	b	422370 <ascii_strlower_n@plt+0x1df10>
  4222f8:	ldr	w1, [sp, #404]
  4222fc:	ldur	x8, [x29, #-16]
  422300:	ldr	x2, [x8, #112]
  422304:	ldur	x8, [x29, #-16]
  422308:	ldr	x3, [x8, #120]
  42230c:	str	w1, [sp, #116]
  422310:	str	x2, [sp, #104]
  422314:	str	x3, [sp, #96]
  422318:	bl	404340 <columns@plt>
  42231c:	sub	x8, x29, #0x20
  422320:	str	w0, [sp, #92]
  422324:	mov	x0, x8
  422328:	ldr	w1, [sp, #116]
  42232c:	ldr	x2, [sp, #104]
  422330:	ldr	x3, [sp, #96]
  422334:	mov	w4, #0x8                   	// #8
  422338:	ldr	w5, [sp, #92]
  42233c:	bl	404350 <base64_append@plt>
  422340:	str	w0, [sp, #404]
  422344:	ldr	w9, [sp, #404]
  422348:	cmp	w9, #0x0
  42234c:	cset	w9, ge  // ge = tcont
  422350:	tbnz	w9, #0, 422368 <ascii_strlower_n@plt+0x1df08>
  422354:	mov	x8, xzr
  422358:	stur	x8, [x29, #-8]
  42235c:	mov	w9, #0x1                   	// #1
  422360:	str	w9, [sp, #400]
  422364:	b	422370 <ascii_strlower_n@plt+0x1df10>
  422368:	mov	w8, #0x4                   	// #4
  42236c:	str	w8, [sp, #400]
  422370:	add	x0, sp, #0x168
  422374:	bl	41f2e8 <ascii_strlower_n@plt+0x1ae88>
  422378:	ldr	w8, [sp, #400]
  42237c:	cmp	w8, #0x4
  422380:	b.eq	4228a8 <ascii_strlower_n@plt+0x1e448>  // b.none
  422384:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  422388:	ldur	x8, [x29, #-16]
  42238c:	ldr	x0, [x8, #88]
  422390:	bl	423028 <ascii_strlower_n@plt+0x1ebc8>
  422394:	stur	x0, [x29, #-24]
  422398:	ldur	x8, [x29, #-24]
  42239c:	cbnz	x8, 4223b4 <ascii_strlower_n@plt+0x1df54>
  4223a0:	mov	x8, xzr
  4223a4:	stur	x8, [x29, #-8]
  4223a8:	mov	w9, #0x1                   	// #1
  4223ac:	str	w9, [sp, #400]
  4223b0:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  4223b4:	ldur	x8, [x29, #-16]
  4223b8:	ldr	x3, [x8, #80]
  4223bc:	ldur	x4, [x29, #-24]
  4223c0:	sub	x0, x29, #0x20
  4223c4:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  4223c8:	add	x1, x1, #0x22d
  4223cc:	add	x2, sp, #0x198
  4223d0:	bl	403d70 <asprintf@plt>
  4223d4:	str	w0, [sp, #404]
  4223d8:	ldr	w9, [sp, #404]
  4223dc:	cmp	w9, #0x0
  4223e0:	cset	w9, ge  // ge = tcont
  4223e4:	tbnz	w9, #0, 4223fc <ascii_strlower_n@plt+0x1df9c>
  4223e8:	mov	x8, xzr
  4223ec:	stur	x8, [x29, #-8]
  4223f0:	mov	w9, #0x1                   	// #1
  4223f4:	str	w9, [sp, #400]
  4223f8:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  4223fc:	b	4228a8 <ascii_strlower_n@plt+0x1e448>
  422400:	mov	x8, xzr
  422404:	str	x8, [sp, #312]
  422408:	str	x8, [sp, #304]
  42240c:	ldur	x8, [x29, #-16]
  422410:	ldr	x8, [x8, #96]
  422414:	cmp	x8, #0x0
  422418:	cset	w9, ls  // ls = plast
  42241c:	tbnz	w9, #0, 422454 <ascii_strlower_n@plt+0x1dff4>
  422420:	ldur	x8, [x29, #-16]
  422424:	ldr	x0, [x8, #88]
  422428:	ldur	x8, [x29, #-16]
  42242c:	ldr	x1, [x8, #96]
  422430:	bl	404330 <hexmem@plt>
  422434:	str	x0, [sp, #312]
  422438:	ldr	x8, [sp, #312]
  42243c:	cbnz	x8, 422454 <ascii_strlower_n@plt+0x1dff4>
  422440:	mov	x8, xzr
  422444:	stur	x8, [x29, #-8]
  422448:	mov	w9, #0x1                   	// #1
  42244c:	str	w9, [sp, #400]
  422450:	b	422574 <ascii_strlower_n@plt+0x1e114>
  422454:	ldur	x8, [x29, #-16]
  422458:	ldr	x0, [x8, #104]
  42245c:	ldur	x8, [x29, #-16]
  422460:	ldr	x1, [x8, #112]
  422464:	mov	w9, wzr
  422468:	and	w2, w9, #0x1
  42246c:	bl	404360 <base32hexmem@plt>
  422470:	str	x0, [sp, #304]
  422474:	ldr	x8, [sp, #304]
  422478:	cbnz	x8, 422490 <ascii_strlower_n@plt+0x1e030>
  42247c:	mov	x8, xzr
  422480:	stur	x8, [x29, #-8]
  422484:	mov	w9, #0x1                   	// #1
  422488:	str	w9, [sp, #400]
  42248c:	b	422574 <ascii_strlower_n@plt+0x1e114>
  422490:	ldur	x8, [x29, #-16]
  422494:	ldr	x0, [x8, #120]
  422498:	bl	423028 <ascii_strlower_n@plt+0x1ebc8>
  42249c:	stur	x0, [x29, #-24]
  4224a0:	ldur	x8, [x29, #-24]
  4224a4:	cbnz	x8, 4224bc <ascii_strlower_n@plt+0x1e05c>
  4224a8:	mov	x8, xzr
  4224ac:	stur	x8, [x29, #-8]
  4224b0:	mov	w9, #0x1                   	// #1
  4224b4:	str	w9, [sp, #400]
  4224b8:	b	422574 <ascii_strlower_n@plt+0x1e114>
  4224bc:	ldur	x8, [x29, #-16]
  4224c0:	ldrb	w3, [x8, #80]
  4224c4:	ldur	x8, [x29, #-16]
  4224c8:	ldrb	w4, [x8, #81]
  4224cc:	ldur	x8, [x29, #-16]
  4224d0:	ldrh	w5, [x8, #82]
  4224d4:	ldur	x8, [x29, #-16]
  4224d8:	ldr	x8, [x8, #96]
  4224dc:	cmp	x8, #0x0
  4224e0:	cset	w9, ls  // ls = plast
  4224e4:	str	w3, [sp, #88]
  4224e8:	str	w4, [sp, #84]
  4224ec:	str	w5, [sp, #80]
  4224f0:	tbnz	w9, #0, 422500 <ascii_strlower_n@plt+0x1e0a0>
  4224f4:	ldr	x8, [sp, #312]
  4224f8:	str	x8, [sp, #72]
  4224fc:	b	42250c <ascii_strlower_n@plt+0x1e0ac>
  422500:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  422504:	add	x8, x8, #0x24b
  422508:	str	x8, [sp, #72]
  42250c:	ldr	x8, [sp, #72]
  422510:	ldr	x7, [sp, #304]
  422514:	ldur	x9, [x29, #-24]
  422518:	sub	x0, x29, #0x20
  42251c:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  422520:	add	x1, x1, #0x236
  422524:	add	x2, sp, #0x198
  422528:	ldr	w3, [sp, #88]
  42252c:	ldr	w4, [sp, #84]
  422530:	ldr	w5, [sp, #80]
  422534:	mov	x6, x8
  422538:	mov	x8, sp
  42253c:	str	x9, [x8]
  422540:	bl	403d70 <asprintf@plt>
  422544:	str	w0, [sp, #404]
  422548:	ldr	w10, [sp, #404]
  42254c:	cmp	w10, #0x0
  422550:	cset	w10, ge  // ge = tcont
  422554:	tbnz	w10, #0, 42256c <ascii_strlower_n@plt+0x1e10c>
  422558:	mov	x8, xzr
  42255c:	stur	x8, [x29, #-8]
  422560:	mov	w9, #0x1                   	// #1
  422564:	str	w9, [sp, #400]
  422568:	b	422574 <ascii_strlower_n@plt+0x1e114>
  42256c:	mov	w8, #0x4                   	// #4
  422570:	str	w8, [sp, #400]
  422574:	add	x0, sp, #0x130
  422578:	bl	41f2e8 <ascii_strlower_n@plt+0x1ae88>
  42257c:	add	x0, sp, #0x138
  422580:	bl	41f2e8 <ascii_strlower_n@plt+0x1ae88>
  422584:	ldr	w8, [sp, #400]
  422588:	cmp	w8, #0x4
  42258c:	b.eq	4228a8 <ascii_strlower_n@plt+0x1e448>  // b.none
  422590:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  422594:	ldur	x8, [x29, #-16]
  422598:	ldrb	w0, [x8, #80]
  42259c:	bl	42c1cc <ascii_strlower_n@plt+0x27d6c>
  4225a0:	str	x0, [sp, #296]
  4225a4:	ldur	x8, [x29, #-16]
  4225a8:	ldrb	w0, [x8, #81]
  4225ac:	bl	42c2ac <ascii_strlower_n@plt+0x27e4c>
  4225b0:	str	x0, [sp, #288]
  4225b4:	ldur	x8, [x29, #-16]
  4225b8:	ldrb	w0, [x8, #82]
  4225bc:	bl	42c34c <ascii_strlower_n@plt+0x27eec>
  4225c0:	str	x0, [sp, #280]
  4225c4:	ldur	x8, [x29, #-16]
  4225c8:	ldr	x0, [x8, #88]
  4225cc:	ldur	x8, [x29, #-16]
  4225d0:	ldr	x1, [x8, #96]
  4225d4:	bl	404330 <hexmem@plt>
  4225d8:	stur	x0, [x29, #-24]
  4225dc:	ldur	x8, [x29, #-24]
  4225e0:	cbnz	x8, 4225f8 <ascii_strlower_n@plt+0x1e198>
  4225e4:	mov	x8, xzr
  4225e8:	stur	x8, [x29, #-8]
  4225ec:	mov	w9, #0x1                   	// #1
  4225f0:	str	w9, [sp, #400]
  4225f4:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  4225f8:	ldur	x8, [x29, #-16]
  4225fc:	ldrb	w3, [x8, #80]
  422600:	ldur	x8, [x29, #-16]
  422604:	ldrb	w4, [x8, #81]
  422608:	ldur	x8, [x29, #-16]
  42260c:	ldrb	w5, [x8, #82]
  422610:	ldur	x6, [x29, #-24]
  422614:	ldr	x7, [sp, #296]
  422618:	ldr	x8, [sp, #288]
  42261c:	ldr	x9, [sp, #280]
  422620:	sub	x0, x29, #0x20
  422624:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  422628:	add	x1, x1, #0x24d
  42262c:	add	x2, sp, #0x198
  422630:	mov	x10, sp
  422634:	str	x8, [x10]
  422638:	mov	x8, sp
  42263c:	str	x9, [x8, #8]
  422640:	bl	403d70 <asprintf@plt>
  422644:	str	w0, [sp, #404]
  422648:	ldr	w11, [sp, #404]
  42264c:	cmp	w11, #0x0
  422650:	cset	w11, ge  // ge = tcont
  422654:	tbnz	w11, #0, 42266c <ascii_strlower_n@plt+0x1e20c>
  422658:	mov	x8, xzr
  42265c:	stur	x8, [x29, #-8]
  422660:	mov	w9, #0x1                   	// #1
  422664:	str	w9, [sp, #400]
  422668:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  42266c:	b	4228a8 <ascii_strlower_n@plt+0x1e448>
  422670:	ldur	x8, [x29, #-16]
  422674:	ldr	x0, [x8, #96]
  422678:	ldur	x8, [x29, #-16]
  42267c:	ldr	x1, [x8, #104]
  422680:	bl	404370 <octescape@plt>
  422684:	str	x0, [sp, #272]
  422688:	ldr	x8, [sp, #272]
  42268c:	cbnz	x8, 4226a4 <ascii_strlower_n@plt+0x1e244>
  422690:	mov	x8, xzr
  422694:	stur	x8, [x29, #-8]
  422698:	mov	w9, #0x1                   	// #1
  42269c:	str	w9, [sp, #400]
  4226a0:	b	422764 <ascii_strlower_n@plt+0x1e304>
  4226a4:	ldur	x8, [x29, #-16]
  4226a8:	ldrb	w3, [x8, #80]
  4226ac:	ldur	x8, [x29, #-16]
  4226b0:	ldr	x4, [x8, #88]
  4226b4:	ldr	x5, [sp, #272]
  4226b8:	ldur	x8, [x29, #-16]
  4226bc:	ldrb	w9, [x8, #80]
  4226c0:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  4226c4:	add	x8, x8, #0x2c4
  4226c8:	cmp	w9, #0x0
  4226cc:	ldr	x10, [sp, #264]
  4226d0:	csel	x6, x8, x10, ne  // ne = any
  4226d4:	ldur	x8, [x29, #-16]
  4226d8:	ldrb	w9, [x8, #80]
  4226dc:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  4226e0:	add	x8, x8, #0x2d7
  4226e4:	tst	w9, #0x80
  4226e8:	csel	x7, x8, x10, ne  // ne = any
  4226ec:	ldur	x8, [x29, #-16]
  4226f0:	ldrb	w9, [x8, #80]
  4226f4:	mov	w11, #0xffffff7f            	// #-129
  4226f8:	tst	w9, w11
  4226fc:	ldr	x8, [sp, #256]
  422700:	csel	x12, x8, x10, ne  // ne = any
  422704:	ldur	x13, [x29, #-16]
  422708:	ldrb	w9, [x13, #80]
  42270c:	and	w9, w9, #0xffffff7f
  422710:	sub	x0, x29, #0x20
  422714:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  422718:	add	x1, x1, #0x2ac
  42271c:	add	x2, sp, #0x198
  422720:	mov	x13, sp
  422724:	str	x12, [x13]
  422728:	mov	x12, sp
  42272c:	str	w9, [x12, #8]
  422730:	bl	403d70 <asprintf@plt>
  422734:	str	w0, [sp, #404]
  422738:	ldr	w9, [sp, #404]
  42273c:	cmp	w9, #0x0
  422740:	cset	w9, ge  // ge = tcont
  422744:	tbnz	w9, #0, 42275c <ascii_strlower_n@plt+0x1e2fc>
  422748:	mov	x8, xzr
  42274c:	stur	x8, [x29, #-8]
  422750:	mov	w9, #0x1                   	// #1
  422754:	str	w9, [sp, #400]
  422758:	b	422764 <ascii_strlower_n@plt+0x1e304>
  42275c:	mov	w8, #0x4                   	// #4
  422760:	str	w8, [sp, #400]
  422764:	add	x0, sp, #0x110
  422768:	bl	41f2e8 <ascii_strlower_n@plt+0x1ae88>
  42276c:	ldr	w8, [sp, #400]
  422770:	cmp	w8, #0x4
  422774:	b.eq	4228a8 <ascii_strlower_n@plt+0x1e448>  // b.none
  422778:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  42277c:	sub	x0, x29, #0x20
  422780:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  422784:	add	x1, x1, #0xbcf
  422788:	add	x2, sp, #0x198
  42278c:	bl	403d70 <asprintf@plt>
  422790:	str	w0, [sp, #404]
  422794:	ldr	w8, [sp, #404]
  422798:	cmp	w8, #0x0
  42279c:	cset	w8, ge  // ge = tcont
  4227a0:	tbnz	w8, #0, 4227b8 <ascii_strlower_n@plt+0x1e358>
  4227a4:	mov	x8, xzr
  4227a8:	stur	x8, [x29, #-8]
  4227ac:	mov	w9, #0x1                   	// #1
  4227b0:	str	w9, [sp, #400]
  4227b4:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  4227b8:	ldr	w1, [sp, #404]
  4227bc:	ldur	x8, [x29, #-16]
  4227c0:	ldr	x2, [x8, #80]
  4227c4:	ldur	x8, [x29, #-16]
  4227c8:	ldr	x3, [x8, #88]
  4227cc:	str	w1, [sp, #68]
  4227d0:	str	x2, [sp, #56]
  4227d4:	str	x3, [sp, #48]
  4227d8:	bl	404340 <columns@plt>
  4227dc:	sub	x8, x29, #0x20
  4227e0:	str	w0, [sp, #44]
  4227e4:	mov	x0, x8
  4227e8:	ldr	w1, [sp, #68]
  4227ec:	ldr	x2, [sp, #56]
  4227f0:	ldr	x3, [sp, #48]
  4227f4:	mov	w4, #0x8                   	// #8
  4227f8:	ldr	w5, [sp, #44]
  4227fc:	bl	404350 <base64_append@plt>
  422800:	str	w0, [sp, #404]
  422804:	ldr	w9, [sp, #404]
  422808:	cmp	w9, #0x0
  42280c:	cset	w9, ge  // ge = tcont
  422810:	tbnz	w9, #0, 422828 <ascii_strlower_n@plt+0x1e3c8>
  422814:	mov	x8, xzr
  422818:	stur	x8, [x29, #-8]
  42281c:	mov	w9, #0x1                   	// #1
  422820:	str	w9, [sp, #400]
  422824:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  422828:	b	4228a8 <ascii_strlower_n@plt+0x1e448>
  42282c:	ldur	x8, [x29, #-16]
  422830:	ldr	x0, [x8, #80]
  422834:	ldur	x8, [x29, #-16]
  422838:	ldr	x1, [x8, #88]
  42283c:	bl	404330 <hexmem@plt>
  422840:	stur	x0, [x29, #-24]
  422844:	ldur	x8, [x29, #-24]
  422848:	cbnz	x8, 422860 <ascii_strlower_n@plt+0x1e400>
  42284c:	mov	x8, xzr
  422850:	stur	x8, [x29, #-8]
  422854:	mov	w9, #0x1                   	// #1
  422858:	str	w9, [sp, #400]
  42285c:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  422860:	ldur	x8, [x29, #-16]
  422864:	ldr	x3, [x8, #88]
  422868:	ldur	x4, [x29, #-24]
  42286c:	sub	x0, x29, #0x20
  422870:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  422874:	add	x1, x1, #0x2e1
  422878:	add	x2, sp, #0x198
  42287c:	bl	403d70 <asprintf@plt>
  422880:	str	w0, [sp, #404]
  422884:	ldr	w9, [sp, #404]
  422888:	cmp	w9, #0x0
  42288c:	cset	w9, ge  // ge = tcont
  422890:	tbnz	w9, #0, 4228a8 <ascii_strlower_n@plt+0x1e448>
  422894:	mov	x8, xzr
  422898:	stur	x8, [x29, #-8]
  42289c:	mov	w9, #0x1                   	// #1
  4228a0:	str	w9, [sp, #400]
  4228a4:	b	4228c4 <ascii_strlower_n@plt+0x1e464>
  4228a8:	ldur	x8, [x29, #-32]
  4228ac:	ldur	x9, [x29, #-16]
  4228b0:	str	x8, [x9, #16]
  4228b4:	ldur	x8, [x29, #-32]
  4228b8:	stur	x8, [x29, #-8]
  4228bc:	mov	w10, #0x1                   	// #1
  4228c0:	str	w10, [sp, #400]
  4228c4:	sub	x0, x29, #0x18
  4228c8:	bl	41f2e8 <ascii_strlower_n@plt+0x1ae88>
  4228cc:	ldur	x0, [x29, #-8]
  4228d0:	add	sp, sp, #0x2d0
  4228d4:	ldr	x28, [sp, #16]
  4228d8:	ldp	x29, x30, [sp], #32
  4228dc:	ret
  4228e0:	sub	sp, sp, #0x20
  4228e4:	str	x0, [sp, #24]
  4228e8:	ldr	x8, [sp, #24]
  4228ec:	str	x8, [sp, #16]
  4228f0:	cbz	x8, 422900 <ascii_strlower_n@plt+0x1e4a0>
  4228f4:	ldr	x8, [sp, #16]
  4228f8:	str	x8, [sp, #8]
  4228fc:	b	42290c <ascii_strlower_n@plt+0x1e4ac>
  422900:	adrp	x8, 42f000 <ascii_strlower_n@plt+0x2aba0>
  422904:	add	x8, x8, #0x614
  422908:	str	x8, [sp, #8]
  42290c:	ldr	x8, [sp, #8]
  422910:	mov	x0, x8
  422914:	add	sp, sp, #0x20
  422918:	ret
  42291c:	sub	sp, sp, #0x50
  422920:	stp	x29, x30, [sp, #64]
  422924:	add	x29, sp, #0x40
  422928:	mov	x8, #0x1                   	// #1
  42292c:	stur	x0, [x29, #-16]
  422930:	str	x8, [sp, #32]
  422934:	ldur	x8, [x29, #-16]
  422938:	stur	x8, [x29, #-24]
  42293c:	ldur	x8, [x29, #-24]
  422940:	cbz	x8, 422974 <ascii_strlower_n@plt+0x1e514>
  422944:	ldur	x8, [x29, #-24]
  422948:	ldr	x8, [x8]
  42294c:	mov	x9, #0x4                   	// #4
  422950:	mul	x8, x8, x9
  422954:	add	x8, x8, #0x3
  422958:	ldr	x9, [sp, #32]
  42295c:	add	x8, x9, x8
  422960:	str	x8, [sp, #32]
  422964:	ldur	x8, [x29, #-24]
  422968:	ldr	x8, [x8, #8]
  42296c:	stur	x8, [x29, #-24]
  422970:	b	42293c <ascii_strlower_n@plt+0x1e4dc>
  422974:	ldr	x1, [sp, #32]
  422978:	mov	x0, #0x1                   	// #1
  42297c:	bl	4253a4 <ascii_strlower_n@plt+0x20f44>
  422980:	str	x0, [sp, #16]
  422984:	str	x0, [sp, #24]
  422988:	ldr	x8, [sp, #16]
  42298c:	cbnz	x8, 42299c <ascii_strlower_n@plt+0x1e53c>
  422990:	mov	x8, xzr
  422994:	stur	x8, [x29, #-8]
  422998:	b	422b5c <ascii_strlower_n@plt+0x1e6fc>
  42299c:	ldur	x8, [x29, #-16]
  4229a0:	stur	x8, [x29, #-24]
  4229a4:	ldur	x8, [x29, #-24]
  4229a8:	cbz	x8, 422b48 <ascii_strlower_n@plt+0x1e6e8>
  4229ac:	ldur	x8, [x29, #-24]
  4229b0:	ldur	x9, [x29, #-16]
  4229b4:	cmp	x8, x9
  4229b8:	b.eq	4229d0 <ascii_strlower_n@plt+0x1e570>  // b.none
  4229bc:	ldr	x8, [sp, #24]
  4229c0:	add	x9, x8, #0x1
  4229c4:	str	x9, [sp, #24]
  4229c8:	mov	w10, #0x20                  	// #32
  4229cc:	strb	w10, [x8]
  4229d0:	ldr	x8, [sp, #24]
  4229d4:	add	x9, x8, #0x1
  4229d8:	str	x9, [sp, #24]
  4229dc:	mov	w10, #0x22                  	// #34
  4229e0:	strb	w10, [x8]
  4229e4:	str	xzr, [sp, #8]
  4229e8:	ldr	x8, [sp, #8]
  4229ec:	ldur	x9, [x29, #-24]
  4229f0:	ldr	x9, [x9]
  4229f4:	cmp	x8, x9
  4229f8:	b.cs	422b24 <ascii_strlower_n@plt+0x1e6c4>  // b.hs, b.nlast
  4229fc:	ldur	x8, [x29, #-24]
  422a00:	add	x8, x8, #0x18
  422a04:	ldr	x9, [sp, #8]
  422a08:	ldrb	w10, [x8, x9]
  422a0c:	cmp	w10, #0x20
  422a10:	b.lt	422a44 <ascii_strlower_n@plt+0x1e5e4>  // b.tstop
  422a14:	ldur	x8, [x29, #-24]
  422a18:	add	x8, x8, #0x18
  422a1c:	ldr	x9, [sp, #8]
  422a20:	ldrb	w10, [x8, x9]
  422a24:	cmp	w10, #0x22
  422a28:	b.eq	422a44 <ascii_strlower_n@plt+0x1e5e4>  // b.none
  422a2c:	ldur	x8, [x29, #-24]
  422a30:	add	x8, x8, #0x18
  422a34:	ldr	x9, [sp, #8]
  422a38:	ldrb	w10, [x8, x9]
  422a3c:	cmp	w10, #0x7f
  422a40:	b.lt	422af0 <ascii_strlower_n@plt+0x1e690>  // b.tstop
  422a44:	ldr	x8, [sp, #24]
  422a48:	add	x9, x8, #0x1
  422a4c:	str	x9, [sp, #24]
  422a50:	mov	w10, #0x5c                  	// #92
  422a54:	strb	w10, [x8]
  422a58:	ldur	x8, [x29, #-24]
  422a5c:	add	x8, x8, #0x18
  422a60:	ldr	x9, [sp, #8]
  422a64:	ldrb	w10, [x8, x9]
  422a68:	mov	w11, #0x64                  	// #100
  422a6c:	sdiv	w10, w10, w11
  422a70:	add	w10, w10, #0x30
  422a74:	ldr	x8, [sp, #24]
  422a78:	add	x9, x8, #0x1
  422a7c:	str	x9, [sp, #24]
  422a80:	strb	w10, [x8]
  422a84:	ldur	x8, [x29, #-24]
  422a88:	add	x8, x8, #0x18
  422a8c:	ldr	x9, [sp, #8]
  422a90:	ldrb	w10, [x8, x9]
  422a94:	mov	w11, #0xa                   	// #10
  422a98:	sdiv	w10, w10, w11
  422a9c:	sdiv	w12, w10, w11
  422aa0:	mul	w12, w12, w11
  422aa4:	subs	w10, w10, w12
  422aa8:	add	w10, w10, #0x30
  422aac:	ldr	x8, [sp, #24]
  422ab0:	add	x9, x8, #0x1
  422ab4:	str	x9, [sp, #24]
  422ab8:	strb	w10, [x8]
  422abc:	ldur	x8, [x29, #-24]
  422ac0:	add	x8, x8, #0x18
  422ac4:	ldr	x9, [sp, #8]
  422ac8:	ldrb	w10, [x8, x9]
  422acc:	sdiv	w12, w10, w11
  422ad0:	mul	w11, w12, w11
  422ad4:	subs	w10, w10, w11
  422ad8:	add	w10, w10, #0x30
  422adc:	ldr	x8, [sp, #24]
  422ae0:	add	x9, x8, #0x1
  422ae4:	str	x9, [sp, #24]
  422ae8:	strb	w10, [x8]
  422aec:	b	422b14 <ascii_strlower_n@plt+0x1e6b4>
  422af0:	ldur	x8, [x29, #-24]
  422af4:	add	x8, x8, #0x18
  422af8:	ldr	x9, [sp, #8]
  422afc:	add	x8, x8, x9
  422b00:	ldrb	w10, [x8]
  422b04:	ldr	x8, [sp, #24]
  422b08:	add	x9, x8, #0x1
  422b0c:	str	x9, [sp, #24]
  422b10:	strb	w10, [x8]
  422b14:	ldr	x8, [sp, #8]
  422b18:	add	x8, x8, #0x1
  422b1c:	str	x8, [sp, #8]
  422b20:	b	4229e8 <ascii_strlower_n@plt+0x1e588>
  422b24:	ldr	x8, [sp, #24]
  422b28:	add	x9, x8, #0x1
  422b2c:	str	x9, [sp, #24]
  422b30:	mov	w10, #0x22                  	// #34
  422b34:	strb	w10, [x8]
  422b38:	ldur	x8, [x29, #-24]
  422b3c:	ldr	x8, [x8, #8]
  422b40:	stur	x8, [x29, #-24]
  422b44:	b	4229a4 <ascii_strlower_n@plt+0x1e544>
  422b48:	ldr	x8, [sp, #24]
  422b4c:	mov	w9, #0x0                   	// #0
  422b50:	strb	w9, [x8]
  422b54:	ldr	x8, [sp, #16]
  422b58:	stur	x8, [x29, #-8]
  422b5c:	ldur	x0, [x29, #-8]
  422b60:	ldp	x29, x30, [sp, #64]
  422b64:	add	sp, sp, #0x50
  422b68:	ret
  422b6c:	sub	sp, sp, #0xa0
  422b70:	stp	x29, x30, [sp, #144]
  422b74:	add	x29, sp, #0x90
  422b78:	mov	w8, #0x80000000            	// #-2147483648
  422b7c:	mov	w9, #0x4e                  	// #78
  422b80:	mov	w10, #0x53                  	// #83
  422b84:	mov	w11, #0x45                  	// #69
  422b88:	mov	w12, #0x57                  	// #87
  422b8c:	stur	w0, [x29, #-12]
  422b90:	stur	w1, [x29, #-16]
  422b94:	stur	w2, [x29, #-20]
  422b98:	sturb	w3, [x29, #-21]
  422b9c:	sturb	w4, [x29, #-22]
  422ba0:	sturb	w5, [x29, #-23]
  422ba4:	ldur	w13, [x29, #-12]
  422ba8:	cmp	w13, w8
  422bac:	csel	w9, w9, w10, cs  // cs = hs, nlast
  422bb0:	sturb	w9, [x29, #-33]
  422bb4:	ldur	w9, [x29, #-16]
  422bb8:	cmp	w9, w8
  422bbc:	csel	w9, w11, w12, cs  // cs = hs, nlast
  422bc0:	sturb	w9, [x29, #-34]
  422bc4:	ldur	w9, [x29, #-12]
  422bc8:	cmp	w9, w8
  422bcc:	b.cc	422be4 <ascii_strlower_n@plt+0x1e784>  // b.lo, b.ul, b.last
  422bd0:	ldur	w8, [x29, #-12]
  422bd4:	mov	w9, #0x80000000            	// #-2147483648
  422bd8:	subs	w8, w8, w9
  422bdc:	str	w8, [sp, #60]
  422be0:	b	422bf4 <ascii_strlower_n@plt+0x1e794>
  422be4:	ldur	w8, [x29, #-12]
  422be8:	mov	w9, #0x80000000            	// #-2147483648
  422bec:	subs	w8, w9, w8
  422bf0:	str	w8, [sp, #60]
  422bf4:	ldr	w8, [sp, #60]
  422bf8:	stur	w8, [x29, #-40]
  422bfc:	ldur	w8, [x29, #-16]
  422c00:	mov	w9, #0x80000000            	// #-2147483648
  422c04:	cmp	w8, w9
  422c08:	b.cc	422c20 <ascii_strlower_n@plt+0x1e7c0>  // b.lo, b.ul, b.last
  422c0c:	ldur	w8, [x29, #-16]
  422c10:	mov	w9, #0x80000000            	// #-2147483648
  422c14:	subs	w8, w8, w9
  422c18:	str	w8, [sp, #56]
  422c1c:	b	422c30 <ascii_strlower_n@plt+0x1e7d0>
  422c20:	ldur	w8, [x29, #-16]
  422c24:	mov	w9, #0x80000000            	// #-2147483648
  422c28:	subs	w8, w9, w8
  422c2c:	str	w8, [sp, #56]
  422c30:	ldr	w8, [sp, #56]
  422c34:	stur	w8, [x29, #-44]
  422c38:	ldur	w8, [x29, #-20]
  422c3c:	mov	w9, #0x9680                	// #38528
  422c40:	movk	w9, #0x98, lsl #16
  422c44:	cmp	w8, w9
  422c48:	b.cc	422c68 <ascii_strlower_n@plt+0x1e808>  // b.lo, b.ul, b.last
  422c4c:	ldur	w8, [x29, #-20]
  422c50:	mov	w9, #0x9680                	// #38528
  422c54:	movk	w9, #0x98, lsl #16
  422c58:	subs	w8, w8, w9
  422c5c:	ucvtf	d0, w8
  422c60:	str	d0, [sp, #48]
  422c64:	b	422c84 <ascii_strlower_n@plt+0x1e824>
  422c68:	ldur	w8, [x29, #-20]
  422c6c:	mov	w9, #0x9680                	// #38528
  422c70:	movk	w9, #0x98, lsl #16
  422c74:	subs	w8, w9, w8
  422c78:	ucvtf	d0, w8
  422c7c:	fneg	d0, d0
  422c80:	str	d0, [sp, #48]
  422c84:	ldr	d0, [sp, #48]
  422c88:	stur	d0, [x29, #-56]
  422c8c:	ldurb	w8, [x29, #-21]
  422c90:	mov	x9, #0x4                   	// #4
  422c94:	asr	w8, w8, #4
  422c98:	scvtf	d0, w8
  422c9c:	ldurb	w8, [x29, #-21]
  422ca0:	and	w8, w8, #0xf
  422ca4:	scvtf	d1, w8
  422ca8:	str	d0, [sp, #40]
  422cac:	mov	v0.16b, v1.16b
  422cb0:	str	x9, [sp, #32]
  422cb4:	bl	404380 <exp10@plt>
  422cb8:	ldr	d1, [sp, #40]
  422cbc:	fmul	d0, d1, d0
  422cc0:	stur	d0, [x29, #-64]
  422cc4:	ldurb	w8, [x29, #-22]
  422cc8:	ldr	x9, [sp, #32]
  422ccc:	asr	w8, w8, w9
  422cd0:	scvtf	d0, w8
  422cd4:	ldurb	w8, [x29, #-22]
  422cd8:	and	w8, w8, #0xf
  422cdc:	scvtf	d2, w8
  422ce0:	str	d0, [sp, #24]
  422ce4:	mov	v0.16b, v2.16b
  422ce8:	bl	404380 <exp10@plt>
  422cec:	ldr	d1, [sp, #24]
  422cf0:	fmul	d0, d1, d0
  422cf4:	str	d0, [sp, #72]
  422cf8:	ldurb	w8, [x29, #-23]
  422cfc:	ldr	x10, [sp, #32]
  422d00:	asr	w8, w8, w10
  422d04:	scvtf	d0, w8
  422d08:	ldurb	w8, [x29, #-23]
  422d0c:	and	w8, w8, #0xf
  422d10:	scvtf	d2, w8
  422d14:	str	d0, [sp, #16]
  422d18:	mov	v0.16b, v2.16b
  422d1c:	bl	404380 <exp10@plt>
  422d20:	ldr	d1, [sp, #16]
  422d24:	fmul	d0, d1, d0
  422d28:	str	d0, [sp, #64]
  422d2c:	ldur	w8, [x29, #-40]
  422d30:	mov	w9, #0xea60                	// #60000
  422d34:	sdiv	w8, w8, w9
  422d38:	mov	w10, #0x3c                  	// #60
  422d3c:	sdiv	w2, w8, w10
  422d40:	ldur	w8, [x29, #-40]
  422d44:	sdiv	w8, w8, w9
  422d48:	sdiv	w11, w8, w10
  422d4c:	mul	w11, w11, w10
  422d50:	subs	w3, w8, w11
  422d54:	ldur	w8, [x29, #-40]
  422d58:	sdiv	w11, w8, w9
  422d5c:	mul	w11, w11, w9
  422d60:	subs	w8, w8, w11
  422d64:	scvtf	d0, w8
  422d68:	mov	x12, #0x400000000000        	// #70368744177664
  422d6c:	movk	x12, #0x408f, lsl #48
  422d70:	fmov	d2, x12
  422d74:	fdiv	d0, d0, d2
  422d78:	ldurb	w4, [x29, #-33]
  422d7c:	ldur	w8, [x29, #-44]
  422d80:	sdiv	w8, w8, w9
  422d84:	sdiv	w5, w8, w10
  422d88:	ldur	w8, [x29, #-44]
  422d8c:	sdiv	w8, w8, w9
  422d90:	sdiv	w11, w8, w10
  422d94:	mul	w10, w11, w10
  422d98:	subs	w6, w8, w10
  422d9c:	ldur	w8, [x29, #-44]
  422da0:	sdiv	w10, w8, w9
  422da4:	mul	w9, w10, w9
  422da8:	subs	w8, w8, w9
  422dac:	scvtf	d3, w8
  422db0:	fdiv	d1, d3, d2
  422db4:	ldurb	w7, [x29, #-34]
  422db8:	ldur	d2, [x29, #-56]
  422dbc:	mov	x12, #0x4059000000000000    	// #4636737291354636288
  422dc0:	fmov	d3, x12
  422dc4:	fdiv	d2, d2, d3
  422dc8:	ldur	d4, [x29, #-64]
  422dcc:	fdiv	d4, d4, d3
  422dd0:	ldr	d5, [sp, #72]
  422dd4:	fdiv	d5, d5, d3
  422dd8:	ldr	d6, [sp, #64]
  422ddc:	fdiv	d3, d6, d3
  422de0:	sub	x0, x29, #0x20
  422de4:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  422de8:	add	x1, x1, #0x658
  422dec:	str	d3, [sp, #8]
  422df0:	mov	v3.16b, v4.16b
  422df4:	mov	v4.16b, v5.16b
  422df8:	ldr	d5, [sp, #8]
  422dfc:	bl	403d70 <asprintf@plt>
  422e00:	cmp	w0, #0x0
  422e04:	cset	w8, ge  // ge = tcont
  422e08:	tbnz	w8, #0, 422e18 <ascii_strlower_n@plt+0x1e9b8>
  422e0c:	mov	x8, xzr
  422e10:	stur	x8, [x29, #-8]
  422e14:	b	422e20 <ascii_strlower_n@plt+0x1e9c0>
  422e18:	ldur	x8, [x29, #-32]
  422e1c:	stur	x8, [x29, #-8]
  422e20:	ldur	x0, [x29, #-8]
  422e24:	ldp	x29, x30, [sp, #144]
  422e28:	add	sp, sp, #0xa0
  422e2c:	ret
  422e30:	sub	sp, sp, #0x30
  422e34:	stp	x29, x30, [sp, #32]
  422e38:	add	x29, sp, #0x20
  422e3c:	stur	w0, [x29, #-8]
  422e40:	str	x1, [sp, #16]
  422e44:	ldur	w8, [x29, #-8]
  422e48:	cmp	w8, #0x0
  422e4c:	cset	w8, lt  // lt = tstop
  422e50:	tbnz	w8, #0, 422e60 <ascii_strlower_n@plt+0x1ea00>
  422e54:	ldur	w8, [x29, #-8]
  422e58:	cmp	w8, #0xff
  422e5c:	b.le	422e6c <ascii_strlower_n@plt+0x1ea0c>
  422e60:	mov	w8, #0xffffffde            	// #-34
  422e64:	stur	w8, [x29, #-4]
  422e68:	b	422ef0 <ascii_strlower_n@plt+0x1ea90>
  422e6c:	ldur	w8, [x29, #-8]
  422e70:	cmp	w8, #0xff
  422e74:	b.ge	422eb4 <ascii_strlower_n@plt+0x1ea54>  // b.tcont
  422e78:	ldursw	x8, [x29, #-8]
  422e7c:	mov	x9, #0x8                   	// #8
  422e80:	mul	x8, x9, x8
  422e84:	adrp	x9, 44e000 <ascii_strlower_n@plt+0x49ba0>
  422e88:	add	x9, x9, #0x450
  422e8c:	add	x8, x9, x8
  422e90:	ldr	x0, [x8]
  422e94:	bl	403b20 <strdup@plt>
  422e98:	str	x0, [sp, #8]
  422e9c:	ldr	x8, [sp, #8]
  422ea0:	cbnz	x8, 422eb0 <ascii_strlower_n@plt+0x1ea50>
  422ea4:	mov	w8, #0xfffffff4            	// #-12
  422ea8:	stur	w8, [x29, #-4]
  422eac:	b	422ef0 <ascii_strlower_n@plt+0x1ea90>
  422eb0:	b	422ee0 <ascii_strlower_n@plt+0x1ea80>
  422eb4:	ldur	w2, [x29, #-8]
  422eb8:	add	x0, sp, #0x8
  422ebc:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  422ec0:	add	x1, x1, #0x188
  422ec4:	bl	403d70 <asprintf@plt>
  422ec8:	cmp	w0, #0x0
  422ecc:	cset	w8, ge  // ge = tcont
  422ed0:	tbnz	w8, #0, 422ee0 <ascii_strlower_n@plt+0x1ea80>
  422ed4:	mov	w8, #0xfffffff4            	// #-12
  422ed8:	stur	w8, [x29, #-4]
  422edc:	b	422ef0 <ascii_strlower_n@plt+0x1ea90>
  422ee0:	ldr	x8, [sp, #8]
  422ee4:	ldr	x9, [sp, #16]
  422ee8:	str	x8, [x9]
  422eec:	stur	wzr, [x29, #-4]
  422ef0:	ldur	w0, [x29, #-4]
  422ef4:	ldp	x29, x30, [sp, #32]
  422ef8:	add	sp, sp, #0x30
  422efc:	ret
  422f00:	sub	sp, sp, #0x70
  422f04:	stp	x29, x30, [sp, #96]
  422f08:	add	x29, sp, #0x60
  422f0c:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  422f10:	add	x8, x8, #0xac0
  422f14:	add	x8, x8, #0x3
  422f18:	stur	x0, [x29, #-16]
  422f1c:	stur	x1, [x29, #-24]
  422f20:	stur	x2, [x29, #-32]
  422f24:	str	x8, [sp]
  422f28:	ldur	x8, [x29, #-16]
  422f2c:	cmp	x8, #0x0
  422f30:	cset	w9, ne  // ne = any
  422f34:	mov	w10, #0x1                   	// #1
  422f38:	eor	w9, w9, #0x1
  422f3c:	eor	w9, w9, w10
  422f40:	eor	w9, w9, w10
  422f44:	and	w9, w9, #0x1
  422f48:	mov	w0, w9
  422f4c:	sxtw	x8, w0
  422f50:	cbz	x8, 422f78 <ascii_strlower_n@plt+0x1eb18>
  422f54:	mov	w8, wzr
  422f58:	mov	w0, w8
  422f5c:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  422f60:	add	x1, x1, #0x68c
  422f64:	ldr	x2, [sp]
  422f68:	mov	w3, #0x2e2                 	// #738
  422f6c:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  422f70:	add	x4, x4, #0x690
  422f74:	bl	4039d0 <log_assert_failed_realm@plt>
  422f78:	ldur	x8, [x29, #-24]
  422f7c:	cmp	x8, #0xe
  422f80:	cset	w9, hi  // hi = pmore
  422f84:	mov	w10, #0x1                   	// #1
  422f88:	eor	w9, w9, #0x1
  422f8c:	eor	w9, w9, w10
  422f90:	eor	w9, w9, w10
  422f94:	and	w9, w9, #0x1
  422f98:	mov	w0, w9
  422f9c:	sxtw	x8, w0
  422fa0:	cbz	x8, 422fc8 <ascii_strlower_n@plt+0x1eb68>
  422fa4:	mov	w8, wzr
  422fa8:	mov	w0, w8
  422fac:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  422fb0:	add	x1, x1, #0x6c1
  422fb4:	ldr	x2, [sp]
  422fb8:	mov	w3, #0x2e3                 	// #739
  422fbc:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  422fc0:	add	x4, x4, #0x690
  422fc4:	bl	4039d0 <log_assert_failed_realm@plt>
  422fc8:	sub	x0, x29, #0x20
  422fcc:	add	x1, sp, #0x8
  422fd0:	bl	404390 <gmtime_r@plt>
  422fd4:	cbnz	x0, 422fe4 <ascii_strlower_n@plt+0x1eb84>
  422fd8:	mov	w8, #0xffffffea            	// #-22
  422fdc:	stur	w8, [x29, #-4]
  422fe0:	b	423018 <ascii_strlower_n@plt+0x1ebb8>
  422fe4:	ldur	x0, [x29, #-16]
  422fe8:	ldur	x1, [x29, #-24]
  422fec:	adrp	x2, 432000 <ascii_strlower_n@plt+0x2dba0>
  422ff0:	add	x2, x2, #0x6de
  422ff4:	add	x3, sp, #0x8
  422ff8:	bl	4043a0 <strftime@plt>
  422ffc:	cmp	x0, #0x0
  423000:	cset	w8, hi  // hi = pmore
  423004:	tbnz	w8, #0, 423014 <ascii_strlower_n@plt+0x1ebb4>
  423008:	mov	w8, #0xffffffea            	// #-22
  42300c:	stur	w8, [x29, #-4]
  423010:	b	423018 <ascii_strlower_n@plt+0x1ebb8>
  423014:	stur	wzr, [x29, #-4]
  423018:	ldur	w0, [x29, #-4]
  42301c:	ldp	x29, x30, [sp, #96]
  423020:	add	sp, sp, #0x70
  423024:	ret
  423028:	sub	sp, sp, #0x60
  42302c:	stp	x29, x30, [sp, #80]
  423030:	add	x29, sp, #0x50
  423034:	mov	x8, xzr
  423038:	stur	x0, [x29, #-16]
  42303c:	stur	x8, [x29, #-24]
  423040:	stur	x8, [x29, #-32]
  423044:	str	wzr, [sp, #32]
  423048:	ldur	x0, [x29, #-16]
  42304c:	add	x1, sp, #0x20
  423050:	add	x2, sp, #0x1c
  423054:	bl	404180 <bitmap_iterate@plt>
  423058:	tbnz	w0, #0, 423060 <ascii_strlower_n@plt+0x1ec00>
  42305c:	b	423128 <ascii_strlower_n@plt+0x1ecc8>
  423060:	ldr	w0, [sp, #28]
  423064:	bl	42adf8 <ascii_strlower_n@plt+0x26998>
  423068:	cbz	x0, 4230b4 <ascii_strlower_n@plt+0x1ec54>
  42306c:	ldr	w0, [sp, #28]
  423070:	bl	42adf8 <ascii_strlower_n@plt+0x26998>
  423074:	sub	x8, x29, #0x18
  423078:	str	x0, [sp]
  42307c:	mov	x0, x8
  423080:	ldr	x1, [sp]
  423084:	bl	403a80 <strv_extend@plt>
  423088:	str	w0, [sp, #24]
  42308c:	ldr	w9, [sp, #24]
  423090:	cmp	w9, #0x0
  423094:	cset	w9, ge  // ge = tcont
  423098:	tbnz	w9, #0, 4230b0 <ascii_strlower_n@plt+0x1ec50>
  42309c:	mov	x8, xzr
  4230a0:	stur	x8, [x29, #-8]
  4230a4:	mov	w9, #0x1                   	// #1
  4230a8:	str	w9, [sp, #20]
  4230ac:	b	423184 <ascii_strlower_n@plt+0x1ed24>
  4230b0:	b	423124 <ascii_strlower_n@plt+0x1ecc4>
  4230b4:	ldr	w2, [sp, #28]
  4230b8:	add	x0, sp, #0x8
  4230bc:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  4230c0:	add	x1, x1, #0x6eb
  4230c4:	bl	403d70 <asprintf@plt>
  4230c8:	str	w0, [sp, #24]
  4230cc:	ldr	w8, [sp, #24]
  4230d0:	cmp	w8, #0x0
  4230d4:	cset	w8, ge  // ge = tcont
  4230d8:	tbnz	w8, #0, 4230f0 <ascii_strlower_n@plt+0x1ec90>
  4230dc:	mov	x8, xzr
  4230e0:	stur	x8, [x29, #-8]
  4230e4:	mov	w9, #0x1                   	// #1
  4230e8:	str	w9, [sp, #20]
  4230ec:	b	423184 <ascii_strlower_n@plt+0x1ed24>
  4230f0:	ldr	x1, [sp, #8]
  4230f4:	sub	x0, x29, #0x18
  4230f8:	bl	403e70 <strv_consume@plt>
  4230fc:	str	w0, [sp, #24]
  423100:	ldr	w8, [sp, #24]
  423104:	cmp	w8, #0x0
  423108:	cset	w8, ge  // ge = tcont
  42310c:	tbnz	w8, #0, 423124 <ascii_strlower_n@plt+0x1ecc4>
  423110:	mov	x8, xzr
  423114:	stur	x8, [x29, #-8]
  423118:	mov	w9, #0x1                   	// #1
  42311c:	str	w9, [sp, #20]
  423120:	b	423184 <ascii_strlower_n@plt+0x1ed24>
  423124:	b	423048 <ascii_strlower_n@plt+0x1ebe8>
  423128:	ldur	x0, [x29, #-24]
  42312c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  423130:	add	x1, x1, #0xc37
  423134:	bl	4254bc <ascii_strlower_n@plt+0x2105c>
  423138:	stur	x0, [x29, #-32]
  42313c:	ldur	x8, [x29, #-32]
  423140:	cbnz	x8, 423158 <ascii_strlower_n@plt+0x1ecf8>
  423144:	mov	x8, xzr
  423148:	stur	x8, [x29, #-8]
  42314c:	mov	w9, #0x1                   	// #1
  423150:	str	w9, [sp, #20]
  423154:	b	423184 <ascii_strlower_n@plt+0x1ed24>
  423158:	ldur	x1, [x29, #-32]
  42315c:	adrp	x0, 432000 <ascii_strlower_n@plt+0x2dba0>
  423160:	add	x0, x0, #0x6f2
  423164:	adrp	x2, 432000 <ascii_strlower_n@plt+0x2dba0>
  423168:	add	x2, x2, #0x6f5
  42316c:	mov	x8, xzr
  423170:	mov	x3, x8
  423174:	bl	403ec0 <strjoin_real@plt>
  423178:	stur	x0, [x29, #-8]
  42317c:	mov	w9, #0x1                   	// #1
  423180:	str	w9, [sp, #20]
  423184:	sub	x0, x29, #0x20
  423188:	bl	41f2e8 <ascii_strlower_n@plt+0x1ae88>
  42318c:	sub	x0, x29, #0x18
  423190:	bl	425488 <ascii_strlower_n@plt+0x21028>
  423194:	ldur	x0, [x29, #-8]
  423198:	ldp	x29, x30, [sp, #80]
  42319c:	add	sp, sp, #0x60
  4231a0:	ret
  4231a4:	sub	sp, sp, #0x40
  4231a8:	stp	x29, x30, [sp, #48]
  4231ac:	add	x29, sp, #0x30
  4231b0:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  4231b4:	add	x8, x8, #0xac0
  4231b8:	add	x8, x8, #0x3
  4231bc:	stur	x0, [x29, #-16]
  4231c0:	str	x1, [sp, #24]
  4231c4:	str	x8, [sp, #16]
  4231c8:	ldur	x8, [x29, #-16]
  4231cc:	cmp	x8, #0x0
  4231d0:	cset	w9, ne  // ne = any
  4231d4:	mov	w10, #0x1                   	// #1
  4231d8:	eor	w9, w9, #0x1
  4231dc:	eor	w9, w9, w10
  4231e0:	eor	w9, w9, w10
  4231e4:	and	w9, w9, #0x1
  4231e8:	mov	w0, w9
  4231ec:	sxtw	x8, w0
  4231f0:	cbz	x8, 423218 <ascii_strlower_n@plt+0x1edb8>
  4231f4:	mov	w8, wzr
  4231f8:	mov	w0, w8
  4231fc:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  423200:	add	x1, x1, #0x20f
  423204:	ldr	x2, [sp, #16]
  423208:	mov	w3, #0x497                 	// #1175
  42320c:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  423210:	add	x4, x4, #0x2ee
  423214:	bl	4039d0 <log_assert_failed_realm@plt>
  423218:	ldr	x8, [sp, #24]
  42321c:	cmp	x8, #0x0
  423220:	cset	w9, ne  // ne = any
  423224:	mov	w10, #0x1                   	// #1
  423228:	eor	w9, w9, #0x1
  42322c:	eor	w9, w9, w10
  423230:	eor	w9, w9, w10
  423234:	and	w9, w9, #0x1
  423238:	mov	w0, w9
  42323c:	sxtw	x8, w0
  423240:	cbz	x8, 423268 <ascii_strlower_n@plt+0x1ee08>
  423244:	mov	w8, wzr
  423248:	mov	w0, w8
  42324c:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  423250:	add	x1, x1, #0x330
  423254:	ldr	x2, [sp, #16]
  423258:	mov	w3, #0x498                 	// #1176
  42325c:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  423260:	add	x4, x4, #0x2ee
  423264:	bl	4039d0 <log_assert_failed_realm@plt>
  423268:	ldur	x8, [x29, #-16]
  42326c:	ldrb	w9, [x8, #48]
  423270:	and	w9, w9, #0x1
  423274:	tbnz	w9, #0, 42327c <ascii_strlower_n@plt+0x1ee1c>
  423278:	b	423288 <ascii_strlower_n@plt+0x1ee28>
  42327c:	mov	w8, #0xffffffff            	// #-1
  423280:	str	w8, [sp, #12]
  423284:	b	423298 <ascii_strlower_n@plt+0x1ee38>
  423288:	ldur	x8, [x29, #-16]
  42328c:	ldr	x8, [x8, #8]
  423290:	ldrh	w9, [x8, #6]
  423294:	str	w9, [sp, #12]
  423298:	ldr	w8, [sp, #12]
  42329c:	subs	w8, w8, #0x1
  4232a0:	mov	w9, w8
  4232a4:	ubfx	x9, x9, #0, #32
  4232a8:	cmp	x9, #0x62
  4232ac:	str	x9, [sp]
  4232b0:	b.hi	423318 <ascii_strlower_n@plt+0x1eeb8>  // b.pmore
  4232b4:	adrp	x8, 434000 <ascii_strlower_n@plt+0x2fba0>
  4232b8:	add	x8, x8, #0x630
  4232bc:	ldr	x11, [sp]
  4232c0:	ldrsw	x10, [x8, x11, lsl #2]
  4232c4:	add	x9, x8, x10
  4232c8:	br	x9
  4232cc:	mov	x8, #0xffffffffffffffea    	// #-22
  4232d0:	stur	x8, [x29, #-8]
  4232d4:	b	423334 <ascii_strlower_n@plt+0x1eed4>
  4232d8:	ldur	x8, [x29, #-16]
  4232dc:	ldr	x8, [x8, #88]
  4232e0:	ldr	x9, [sp, #24]
  4232e4:	str	x8, [x9]
  4232e8:	ldur	x8, [x29, #-16]
  4232ec:	ldr	x8, [x8, #96]
  4232f0:	stur	x8, [x29, #-8]
  4232f4:	b	423334 <ascii_strlower_n@plt+0x1eed4>
  4232f8:	ldur	x8, [x29, #-16]
  4232fc:	ldr	x8, [x8, #88]
  423300:	ldr	x9, [sp, #24]
  423304:	str	x8, [x9]
  423308:	ldur	x8, [x29, #-16]
  42330c:	ldr	x8, [x8, #96]
  423310:	stur	x8, [x29, #-8]
  423314:	b	423334 <ascii_strlower_n@plt+0x1eed4>
  423318:	ldur	x8, [x29, #-16]
  42331c:	ldr	x8, [x8, #80]
  423320:	ldr	x9, [sp, #24]
  423324:	str	x8, [x9]
  423328:	ldur	x8, [x29, #-16]
  42332c:	ldr	x8, [x8, #88]
  423330:	stur	x8, [x29, #-8]
  423334:	ldur	x0, [x29, #-8]
  423338:	ldp	x29, x30, [sp, #48]
  42333c:	add	sp, sp, #0x40
  423340:	ret
  423344:	sub	sp, sp, #0x120
  423348:	stp	x29, x30, [sp, #256]
  42334c:	str	x28, [sp, #272]
  423350:	add	x29, sp, #0x100
  423354:	sub	x8, x29, #0x10
  423358:	mov	x2, #0xa8                  	// #168
  42335c:	mov	w9, #0x1                   	// #1
  423360:	mov	w10, wzr
  423364:	adrp	x11, 431000 <ascii_strlower_n@plt+0x2cba0>
  423368:	add	x11, x11, #0xac0
  42336c:	add	x11, x11, #0x3
  423370:	adrp	x12, 432000 <ascii_strlower_n@plt+0x2dba0>
  423374:	add	x12, x12, #0x334
  423378:	add	x13, sp, #0x40
  42337c:	str	x0, [x8]
  423380:	and	w14, w1, w9
  423384:	sturb	w14, [x29, #-17]
  423388:	mov	x0, x13
  42338c:	mov	w1, w10
  423390:	str	x8, [sp, #32]
  423394:	str	w9, [sp, #28]
  423398:	str	x11, [sp, #16]
  42339c:	str	x12, [sp, #8]
  4233a0:	str	x13, [sp]
  4233a4:	bl	403cb0 <memset@plt>
  4233a8:	ldr	w9, [sp, #28]
  4233ac:	str	w9, [sp, #64]
  4233b0:	str	wzr, [sp, #68]
  4233b4:	ldr	x8, [sp]
  4233b8:	ldrb	w10, [x8, #160]
  4233bc:	and	w10, w10, #0xfffffffe
  4233c0:	orr	w10, w10, w9
  4233c4:	strb	w10, [x8, #160]
  4233c8:	ldrb	w10, [x8, #160]
  4233cc:	and	w10, w10, #0xfffffffb
  4233d0:	orr	w10, w10, #0x4
  4233d4:	strb	w10, [x8, #160]
  4233d8:	ldurb	w10, [x29, #-17]
  4233dc:	ldrb	w14, [x8, #160]
  4233e0:	and	w10, w10, #0x1
  4233e4:	lsl	w10, w10, #3
  4233e8:	and	w14, w14, #0xfffffff7
  4233ec:	orr	w10, w14, w10
  4233f0:	strb	w10, [x8, #160]
  4233f4:	ldr	x8, [sp, #32]
  4233f8:	ldr	x9, [x8]
  4233fc:	cmp	x9, #0x0
  423400:	cset	w10, ne  // ne = any
  423404:	mov	w11, #0x1                   	// #1
  423408:	eor	w10, w10, #0x1
  42340c:	eor	w10, w10, w11
  423410:	eor	w10, w10, w11
  423414:	and	w10, w10, #0x1
  423418:	mov	w0, w10
  42341c:	sxtw	x9, w0
  423420:	cbz	x9, 423444 <ascii_strlower_n@plt+0x1efe4>
  423424:	mov	w8, wzr
  423428:	mov	w0, w8
  42342c:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  423430:	add	x1, x1, #0x20f
  423434:	ldr	x2, [sp, #16]
  423438:	mov	w3, #0x4cb                 	// #1227
  42343c:	ldr	x4, [sp, #8]
  423440:	bl	4039d0 <log_assert_failed_realm@plt>
  423444:	ldr	x8, [sp, #32]
  423448:	ldr	x9, [x8]
  42344c:	ldr	x9, [x9, #56]
  423450:	cbz	x9, 423488 <ascii_strlower_n@plt+0x1f028>
  423454:	ldr	x8, [sp, #32]
  423458:	ldr	x9, [x8]
  42345c:	ldrb	w10, [x9, #48]
  423460:	mov	w11, #0x1                   	// #1
  423464:	lsr	w10, w10, w11
  423468:	and	w10, w10, w11
  42346c:	and	w10, w10, #0x1
  423470:	ldurb	w11, [x29, #-17]
  423474:	and	w11, w11, #0x1
  423478:	cmp	w10, w11
  42347c:	b.ne	423488 <ascii_strlower_n@plt+0x1f028>  // b.any
  423480:	stur	wzr, [x29, #-4]
  423484:	b	4235d8 <ascii_strlower_n@plt+0x1f178>
  423488:	ldr	x8, [sp, #32]
  42348c:	ldr	x1, [x8]
  423490:	add	x0, sp, #0x40
  423494:	mov	w9, wzr
  423498:	mov	w2, w9
  42349c:	add	x3, sp, #0x38
  4234a0:	add	x4, sp, #0x30
  4234a4:	bl	418674 <ascii_strlower_n@plt+0x14214>
  4234a8:	str	w0, [sp, #44]
  4234ac:	ldr	w9, [sp, #44]
  4234b0:	cmp	w9, #0x0
  4234b4:	cset	w9, ge  // ge = tcont
  4234b8:	tbnz	w9, #0, 4234c8 <ascii_strlower_n@plt+0x1f068>
  4234bc:	ldr	w8, [sp, #44]
  4234c0:	stur	w8, [x29, #-4]
  4234c4:	b	4235d8 <ascii_strlower_n@plt+0x1f178>
  4234c8:	ldr	x8, [sp, #56]
  4234cc:	cmp	x8, #0x0
  4234d0:	cset	w9, eq  // eq = none
  4234d4:	mov	w10, #0x1                   	// #1
  4234d8:	eor	w9, w9, #0x1
  4234dc:	eor	w9, w9, w10
  4234e0:	eor	w9, w9, w10
  4234e4:	and	w9, w9, #0x1
  4234e8:	mov	w0, w9
  4234ec:	sxtw	x8, w0
  4234f0:	cbz	x8, 423514 <ascii_strlower_n@plt+0x1f0b4>
  4234f4:	mov	w8, wzr
  4234f8:	mov	w0, w8
  4234fc:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  423500:	add	x1, x1, #0x377
  423504:	ldr	x2, [sp, #16]
  423508:	mov	w3, #0x4dc                 	// #1244
  42350c:	ldr	x4, [sp, #8]
  423510:	bl	4039d0 <log_assert_failed_realm@plt>
  423514:	add	x8, sp, #0x40
  423518:	ldr	x8, [x8, #40]
  42351c:	cmp	x8, #0x0
  423520:	cset	w9, ne  // ne = any
  423524:	mov	w10, #0x1                   	// #1
  423528:	eor	w9, w9, #0x1
  42352c:	eor	w9, w9, w10
  423530:	eor	w9, w9, w10
  423534:	and	w9, w9, #0x1
  423538:	mov	w0, w9
  42353c:	sxtw	x8, w0
  423540:	cbz	x8, 423564 <ascii_strlower_n@plt+0x1f104>
  423544:	mov	w8, wzr
  423548:	mov	w0, w8
  42354c:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  423550:	add	x1, x1, #0x382
  423554:	ldr	x2, [sp, #16]
  423558:	mov	w3, #0x4dd                 	// #1245
  42355c:	ldr	x4, [sp, #8]
  423560:	bl	4039d0 <log_assert_failed_realm@plt>
  423564:	ldr	x8, [sp, #32]
  423568:	ldr	x9, [x8]
  42356c:	ldr	x0, [x9, #56]
  423570:	bl	403ac0 <free@plt>
  423574:	add	x8, sp, #0x40
  423578:	ldr	x9, [x8, #40]
  42357c:	ldr	x10, [sp, #32]
  423580:	ldr	x11, [x10]
  423584:	str	x9, [x11, #56]
  423588:	ldr	x9, [sp, #72]
  42358c:	ldr	x11, [x10]
  423590:	str	x9, [x11, #64]
  423594:	ldr	x9, [sp, #48]
  423598:	ldr	x11, [x10]
  42359c:	str	x9, [x11, #72]
  4235a0:	ldurb	w12, [x29, #-17]
  4235a4:	ldr	x9, [x10]
  4235a8:	ldrb	w13, [x9, #48]
  4235ac:	mov	w14, #0x1                   	// #1
  4235b0:	and	w12, w12, #0x1
  4235b4:	lsl	w12, w12, w14
  4235b8:	and	w13, w13, #0xfffffffd
  4235bc:	orr	w12, w13, w12
  4235c0:	strb	w12, [x9, #48]
  4235c4:	mov	x9, xzr
  4235c8:	str	x9, [x8, #40]
  4235cc:	mov	x0, x8
  4235d0:	bl	4165f8 <ascii_strlower_n@plt+0x12198>
  4235d4:	stur	wzr, [x29, #-4]
  4235d8:	ldur	w0, [x29, #-4]
  4235dc:	ldr	x28, [sp, #272]
  4235e0:	ldp	x29, x30, [sp, #256]
  4235e4:	add	sp, sp, #0x120
  4235e8:	ret
  4235ec:	sub	sp, sp, #0x40
  4235f0:	stp	x29, x30, [sp, #48]
  4235f4:	add	x29, sp, #0x30
  4235f8:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  4235fc:	add	x8, x8, #0xac0
  423600:	add	x8, x8, #0x3
  423604:	stur	x0, [x29, #-16]
  423608:	str	x1, [sp, #24]
  42360c:	str	x8, [sp]
  423610:	ldur	x8, [x29, #-16]
  423614:	cmp	x8, #0x0
  423618:	cset	w9, ne  // ne = any
  42361c:	mov	w10, #0x1                   	// #1
  423620:	eor	w9, w9, #0x1
  423624:	eor	w9, w9, w10
  423628:	eor	w9, w9, w10
  42362c:	and	w9, w9, #0x1
  423630:	mov	w0, w9
  423634:	sxtw	x8, w0
  423638:	cbz	x8, 423660 <ascii_strlower_n@plt+0x1f200>
  42363c:	mov	w8, wzr
  423640:	mov	w0, w8
  423644:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  423648:	add	x1, x1, #0x20f
  42364c:	ldr	x2, [sp]
  423650:	mov	w3, #0x4ef                 	// #1263
  423654:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  423658:	add	x4, x4, #0x38f
  42365c:	bl	4039d0 <log_assert_failed_realm@plt>
  423660:	ldr	x8, [sp, #24]
  423664:	cmp	x8, #0x0
  423668:	cset	w9, ne  // ne = any
  42366c:	mov	w10, #0x1                   	// #1
  423670:	eor	w9, w9, #0x1
  423674:	eor	w9, w9, w10
  423678:	eor	w9, w9, w10
  42367c:	and	w9, w9, #0x1
  423680:	mov	w0, w9
  423684:	sxtw	x8, w0
  423688:	cbz	x8, 4236b0 <ascii_strlower_n@plt+0x1f250>
  42368c:	mov	w8, wzr
  423690:	mov	w0, w8
  423694:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  423698:	add	x1, x1, #0x42e
  42369c:	ldr	x2, [sp]
  4236a0:	mov	w3, #0x4f0                 	// #1264
  4236a4:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4236a8:	add	x4, x4, #0x38f
  4236ac:	bl	4039d0 <log_assert_failed_realm@plt>
  4236b0:	ldur	x8, [x29, #-16]
  4236b4:	ldr	w9, [x8, #40]
  4236b8:	mov	w10, #0xffffffff            	// #-1
  4236bc:	cmp	w9, w10
  4236c0:	b.ne	4236d0 <ascii_strlower_n@plt+0x1f270>  // b.any
  4236c4:	mov	w8, #0xffffffc3            	// #-61
  4236c8:	stur	w8, [x29, #-4]
  4236cc:	b	423738 <ascii_strlower_n@plt+0x1f2d8>
  4236d0:	ldur	x8, [x29, #-16]
  4236d4:	ldr	x0, [x8, #8]
  4236d8:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  4236dc:	add	x2, sp, #0x10
  4236e0:	str	x0, [sp, #16]
  4236e4:	ldr	x0, [sp, #16]
  4236e8:	ldur	x8, [x29, #-16]
  4236ec:	ldr	w1, [x8, #40]
  4236f0:	bl	4043b0 <dns_name_skip@plt>
  4236f4:	str	w0, [sp, #12]
  4236f8:	ldr	w9, [sp, #12]
  4236fc:	cmp	w9, #0x0
  423700:	cset	w9, ge  // ge = tcont
  423704:	tbnz	w9, #0, 423714 <ascii_strlower_n@plt+0x1f2b4>
  423708:	ldr	w8, [sp, #12]
  42370c:	stur	w8, [x29, #-4]
  423710:	b	423738 <ascii_strlower_n@plt+0x1f2d8>
  423714:	ldr	w8, [sp, #12]
  423718:	cbnz	w8, 423728 <ascii_strlower_n@plt+0x1f2c8>
  42371c:	mov	w8, #0xffffffea            	// #-22
  423720:	stur	w8, [x29, #-4]
  423724:	b	423738 <ascii_strlower_n@plt+0x1f2d8>
  423728:	ldr	x8, [sp, #16]
  42372c:	ldr	x9, [sp, #24]
  423730:	str	x8, [x9]
  423734:	stur	wzr, [x29, #-4]
  423738:	ldur	w0, [x29, #-4]
  42373c:	ldp	x29, x30, [sp, #48]
  423740:	add	sp, sp, #0x40
  423744:	ret
  423748:	sub	sp, sp, #0x40
  42374c:	stp	x29, x30, [sp, #48]
  423750:	add	x29, sp, #0x30
  423754:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  423758:	add	x8, x8, #0xac0
  42375c:	add	x8, x8, #0x3
  423760:	stur	x0, [x29, #-16]
  423764:	str	x1, [sp, #24]
  423768:	str	x8, [sp]
  42376c:	ldur	x8, [x29, #-16]
  423770:	cmp	x8, #0x0
  423774:	cset	w9, ne  // ne = any
  423778:	mov	w10, #0x1                   	// #1
  42377c:	eor	w9, w9, #0x1
  423780:	eor	w9, w9, w10
  423784:	eor	w9, w9, w10
  423788:	and	w9, w9, #0x1
  42378c:	mov	w0, w9
  423790:	sxtw	x8, w0
  423794:	cbz	x8, 4237bc <ascii_strlower_n@plt+0x1f35c>
  423798:	mov	w8, wzr
  42379c:	mov	w0, w8
  4237a0:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  4237a4:	add	x1, x1, #0x20f
  4237a8:	ldr	x2, [sp]
  4237ac:	mov	w3, #0x506                 	// #1286
  4237b0:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4237b4:	add	x4, x4, #0x3d2
  4237b8:	bl	4039d0 <log_assert_failed_realm@plt>
  4237bc:	ldr	x8, [sp, #24]
  4237c0:	cmp	x8, #0x0
  4237c4:	cset	w9, ne  // ne = any
  4237c8:	mov	w10, #0x1                   	// #1
  4237cc:	eor	w9, w9, #0x1
  4237d0:	eor	w9, w9, w10
  4237d4:	eor	w9, w9, w10
  4237d8:	and	w9, w9, #0x1
  4237dc:	mov	w0, w9
  4237e0:	sxtw	x8, w0
  4237e4:	cbz	x8, 42380c <ascii_strlower_n@plt+0x1f3ac>
  4237e8:	mov	w8, wzr
  4237ec:	mov	w0, w8
  4237f0:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4237f4:	add	x1, x1, #0x42e
  4237f8:	ldr	x2, [sp]
  4237fc:	mov	w3, #0x507                 	// #1287
  423800:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  423804:	add	x4, x4, #0x3d2
  423808:	bl	4039d0 <log_assert_failed_realm@plt>
  42380c:	ldur	x8, [x29, #-16]
  423810:	ldr	w9, [x8, #44]
  423814:	mov	w10, #0xffffffff            	// #-1
  423818:	cmp	w9, w10
  42381c:	b.ne	42382c <ascii_strlower_n@plt+0x1f3cc>  // b.any
  423820:	mov	w8, #0xffffffc3            	// #-61
  423824:	stur	w8, [x29, #-4]
  423828:	b	423894 <ascii_strlower_n@plt+0x1f434>
  42382c:	ldur	x8, [x29, #-16]
  423830:	ldr	x0, [x8, #8]
  423834:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  423838:	add	x2, sp, #0x10
  42383c:	str	x0, [sp, #16]
  423840:	ldr	x0, [sp, #16]
  423844:	ldur	x8, [x29, #-16]
  423848:	ldr	w1, [x8, #44]
  42384c:	bl	4043b0 <dns_name_skip@plt>
  423850:	str	w0, [sp, #12]
  423854:	ldr	w9, [sp, #12]
  423858:	cmp	w9, #0x0
  42385c:	cset	w9, ge  // ge = tcont
  423860:	tbnz	w9, #0, 423870 <ascii_strlower_n@plt+0x1f410>
  423864:	ldr	w8, [sp, #12]
  423868:	stur	w8, [x29, #-4]
  42386c:	b	423894 <ascii_strlower_n@plt+0x1f434>
  423870:	ldr	w8, [sp, #12]
  423874:	cbnz	w8, 423884 <ascii_strlower_n@plt+0x1f424>
  423878:	mov	w8, #0xffffffea            	// #-22
  42387c:	stur	w8, [x29, #-4]
  423880:	b	423894 <ascii_strlower_n@plt+0x1f434>
  423884:	ldr	x8, [sp, #16]
  423888:	ldr	x9, [sp, #24]
  42388c:	str	x8, [x9]
  423890:	stur	wzr, [x29, #-4]
  423894:	ldur	w0, [x29, #-4]
  423898:	ldp	x29, x30, [sp, #48]
  42389c:	add	sp, sp, #0x40
  4238a0:	ret
  4238a4:	sub	sp, sp, #0x40
  4238a8:	stp	x29, x30, [sp, #48]
  4238ac:	add	x29, sp, #0x30
  4238b0:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  4238b4:	add	x8, x8, #0xac0
  4238b8:	add	x2, x8, #0x3
  4238bc:	stur	x0, [x29, #-16]
  4238c0:	str	x1, [sp, #24]
  4238c4:	str	x2, [sp]
  4238c8:	ldur	x8, [x29, #-16]
  4238cc:	cmp	x8, #0x0
  4238d0:	cset	w9, ne  // ne = any
  4238d4:	mov	w10, #0x1                   	// #1
  4238d8:	eor	w9, w9, #0x1
  4238dc:	eor	w9, w9, w10
  4238e0:	eor	w9, w9, w10
  4238e4:	and	w9, w9, #0x1
  4238e8:	mov	w0, w9
  4238ec:	sxtw	x8, w0
  4238f0:	cbz	x8, 423918 <ascii_strlower_n@plt+0x1f4b8>
  4238f4:	mov	w8, wzr
  4238f8:	mov	w0, w8
  4238fc:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  423900:	add	x1, x1, #0x20f
  423904:	ldr	x2, [sp]
  423908:	mov	w3, #0x51d                 	// #1309
  42390c:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  423910:	add	x4, x4, #0x415
  423914:	bl	4039d0 <log_assert_failed_realm@plt>
  423918:	ldur	x0, [x29, #-16]
  42391c:	add	x1, sp, #0x10
  423920:	bl	4235ec <ascii_strlower_n@plt+0x1f18c>
  423924:	str	w0, [sp, #12]
  423928:	ldr	w8, [sp, #12]
  42392c:	cmp	w8, #0x0
  423930:	cset	w8, ge  // ge = tcont
  423934:	tbnz	w8, #0, 423944 <ascii_strlower_n@plt+0x1f4e4>
  423938:	ldr	w8, [sp, #12]
  42393c:	stur	w8, [x29, #-4]
  423940:	b	423954 <ascii_strlower_n@plt+0x1f4f4>
  423944:	ldr	x0, [sp, #24]
  423948:	ldr	x1, [sp, #16]
  42394c:	bl	4042b0 <dns_name_equal@plt>
  423950:	stur	w0, [x29, #-4]
  423954:	ldur	w0, [x29, #-4]
  423958:	ldp	x29, x30, [sp, #48]
  42395c:	add	sp, sp, #0x40
  423960:	ret
  423964:	sub	sp, sp, #0x30
  423968:	stp	x29, x30, [sp, #32]
  42396c:	add	x29, sp, #0x20
  423970:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  423974:	add	x8, x8, #0xac0
  423978:	add	x2, x8, #0x3
  42397c:	str	x0, [sp, #16]
  423980:	str	x2, [sp]
  423984:	ldr	x8, [sp, #16]
  423988:	cmp	x8, #0x0
  42398c:	cset	w9, ne  // ne = any
  423990:	mov	w10, #0x1                   	// #1
  423994:	eor	w9, w9, #0x1
  423998:	eor	w9, w9, w10
  42399c:	eor	w9, w9, w10
  4239a0:	and	w9, w9, #0x1
  4239a4:	mov	w0, w9
  4239a8:	sxtw	x8, w0
  4239ac:	cbz	x8, 4239d4 <ascii_strlower_n@plt+0x1f574>
  4239b0:	mov	w8, wzr
  4239b4:	mov	w0, w8
  4239b8:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  4239bc:	add	x1, x1, #0x20f
  4239c0:	ldr	x2, [sp]
  4239c4:	mov	w3, #0x529                 	// #1321
  4239c8:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4239cc:	add	x4, x4, #0x45a
  4239d0:	bl	4039d0 <log_assert_failed_realm@plt>
  4239d4:	ldr	x8, [sp, #16]
  4239d8:	ldr	w9, [x8, #44]
  4239dc:	mov	w10, #0xffffffff            	// #-1
  4239e0:	cmp	w9, w10
  4239e4:	b.ne	4239f4 <ascii_strlower_n@plt+0x1f594>  // b.any
  4239e8:	mov	w8, #0xffffffc3            	// #-61
  4239ec:	stur	w8, [x29, #-4]
  4239f0:	b	423a74 <ascii_strlower_n@plt+0x1f614>
  4239f4:	ldr	x8, [sp, #16]
  4239f8:	ldr	w9, [x8, #44]
  4239fc:	cbnz	w9, 423a08 <ascii_strlower_n@plt+0x1f5a8>
  423a00:	stur	wzr, [x29, #-4]
  423a04:	b	423a74 <ascii_strlower_n@plt+0x1f614>
  423a08:	ldr	x8, [sp, #16]
  423a0c:	ldr	w9, [x8, #44]
  423a10:	cmp	w9, #0x1
  423a14:	b.ls	423a24 <ascii_strlower_n@plt+0x1f5c4>  // b.plast
  423a18:	mov	w8, #0x1                   	// #1
  423a1c:	stur	w8, [x29, #-4]
  423a20:	b	423a74 <ascii_strlower_n@plt+0x1f614>
  423a24:	ldr	x8, [sp, #16]
  423a28:	ldr	x0, [x8, #8]
  423a2c:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  423a30:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  423a34:	add	x1, x1, #0x9a0
  423a38:	bl	4043c0 <dns_name_startswith@plt>
  423a3c:	str	w0, [sp, #12]
  423a40:	ldr	w9, [sp, #12]
  423a44:	cmp	w9, #0x0
  423a48:	cset	w9, ge  // ge = tcont
  423a4c:	tbnz	w9, #0, 423a5c <ascii_strlower_n@plt+0x1f5fc>
  423a50:	ldr	w8, [sp, #12]
  423a54:	stur	w8, [x29, #-4]
  423a58:	b	423a74 <ascii_strlower_n@plt+0x1f614>
  423a5c:	ldr	w8, [sp, #12]
  423a60:	cmp	w8, #0x0
  423a64:	cset	w8, ne  // ne = any
  423a68:	eor	w8, w8, #0x1
  423a6c:	and	w8, w8, #0x1
  423a70:	stur	w8, [x29, #-4]
  423a74:	ldur	w0, [x29, #-4]
  423a78:	ldp	x29, x30, [sp, #32]
  423a7c:	add	sp, sp, #0x30
  423a80:	ret
  423a84:	sub	sp, sp, #0xa0
  423a88:	stp	x29, x30, [sp, #144]
  423a8c:	add	x29, sp, #0x90
  423a90:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  423a94:	add	x8, x8, #0xac0
  423a98:	add	x2, x8, #0x3
  423a9c:	stur	x0, [x29, #-8]
  423aa0:	stur	x1, [x29, #-16]
  423aa4:	stur	x2, [x29, #-40]
  423aa8:	ldur	x8, [x29, #-8]
  423aac:	cmp	x8, #0x0
  423ab0:	cset	w9, ne  // ne = any
  423ab4:	mov	w10, #0x1                   	// #1
  423ab8:	eor	w9, w9, #0x1
  423abc:	eor	w9, w9, w10
  423ac0:	eor	w9, w9, w10
  423ac4:	and	w9, w9, #0x1
  423ac8:	mov	w0, w9
  423acc:	sxtw	x8, w0
  423ad0:	cbz	x8, 423af8 <ascii_strlower_n@plt+0x1f698>
  423ad4:	mov	w8, wzr
  423ad8:	mov	w0, w8
  423adc:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  423ae0:	add	x1, x1, #0x20f
  423ae4:	ldur	x2, [x29, #-40]
  423ae8:	mov	w3, #0x53e                 	// #1342
  423aec:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  423af0:	add	x4, x4, #0x494
  423af4:	bl	4039d0 <log_assert_failed_realm@plt>
  423af8:	ldur	x8, [x29, #-8]
  423afc:	ldr	x0, [x8, #8]
  423b00:	ldur	x1, [x29, #-16]
  423b04:	bl	41f704 <ascii_strlower_n@plt+0x1b2a4>
  423b08:	ldur	x8, [x29, #-8]
  423b0c:	ldrb	w9, [x8, #48]
  423b10:	and	w9, w9, #0x1
  423b14:	tbnz	w9, #0, 423b1c <ascii_strlower_n@plt+0x1f6bc>
  423b18:	b	423b28 <ascii_strlower_n@plt+0x1f6c8>
  423b1c:	mov	w8, #0xffffffff            	// #-1
  423b20:	stur	w8, [x29, #-44]
  423b24:	b	423b38 <ascii_strlower_n@plt+0x1f6d8>
  423b28:	ldur	x8, [x29, #-8]
  423b2c:	ldr	x8, [x8, #8]
  423b30:	ldrh	w9, [x8, #6]
  423b34:	stur	w9, [x29, #-44]
  423b38:	ldur	w8, [x29, #-44]
  423b3c:	cmp	w8, #0x1
  423b40:	stur	w8, [x29, #-48]
  423b44:	b.eq	423d84 <ascii_strlower_n@plt+0x1f924>  // b.none
  423b48:	b	423b4c <ascii_strlower_n@plt+0x1f6ec>
  423b4c:	ldur	w8, [x29, #-48]
  423b50:	cmp	w8, #0x2
  423b54:	b.eq	423cf4 <ascii_strlower_n@plt+0x1f894>  // b.none
  423b58:	b	423b5c <ascii_strlower_n@plt+0x1f6fc>
  423b5c:	ldur	w8, [x29, #-48]
  423b60:	cmp	w8, #0x5
  423b64:	b.eq	423cf4 <ascii_strlower_n@plt+0x1f894>  // b.none
  423b68:	b	423b6c <ascii_strlower_n@plt+0x1f70c>
  423b6c:	ldur	w8, [x29, #-48]
  423b70:	cmp	w8, #0x6
  423b74:	b.eq	423db4 <ascii_strlower_n@plt+0x1f954>  // b.none
  423b78:	b	423b7c <ascii_strlower_n@plt+0x1f71c>
  423b7c:	ldur	w8, [x29, #-48]
  423b80:	cmp	w8, #0xc
  423b84:	b.eq	423cf4 <ascii_strlower_n@plt+0x1f894>  // b.none
  423b88:	b	423b8c <ascii_strlower_n@plt+0x1f72c>
  423b8c:	ldur	w8, [x29, #-48]
  423b90:	cmp	w8, #0xd
  423b94:	b.eq	423d08 <ascii_strlower_n@plt+0x1f8a8>  // b.none
  423b98:	b	423b9c <ascii_strlower_n@plt+0x1f73c>
  423b9c:	ldur	w8, [x29, #-48]
  423ba0:	cmp	w8, #0xf
  423ba4:	b.eq	423e44 <ascii_strlower_n@plt+0x1f9e4>  // b.none
  423ba8:	b	423bac <ascii_strlower_n@plt+0x1f74c>
  423bac:	ldur	w8, [x29, #-48]
  423bb0:	cmp	w8, #0x10
  423bb4:	b.eq	423d2c <ascii_strlower_n@plt+0x1f8cc>  // b.none
  423bb8:	b	423bbc <ascii_strlower_n@plt+0x1f75c>
  423bbc:	ldur	w8, [x29, #-48]
  423bc0:	cmp	w8, #0x1c
  423bc4:	b.eq	423d9c <ascii_strlower_n@plt+0x1f93c>  // b.none
  423bc8:	b	423bcc <ascii_strlower_n@plt+0x1f76c>
  423bcc:	ldur	w8, [x29, #-48]
  423bd0:	cmp	w8, #0x1d
  423bd4:	b.eq	423e6c <ascii_strlower_n@plt+0x1fa0c>  // b.none
  423bd8:	b	423bdc <ascii_strlower_n@plt+0x1f77c>
  423bdc:	ldur	w8, [x29, #-48]
  423be0:	cmp	w8, #0x21
  423be4:	b.eq	423c9c <ascii_strlower_n@plt+0x1f83c>  // b.none
  423be8:	b	423bec <ascii_strlower_n@plt+0x1f78c>
  423bec:	ldur	w8, [x29, #-48]
  423bf0:	cmp	w8, #0x27
  423bf4:	b.eq	423cf4 <ascii_strlower_n@plt+0x1f894>  // b.none
  423bf8:	b	423bfc <ascii_strlower_n@plt+0x1f79c>
  423bfc:	ldur	w8, [x29, #-48]
  423c00:	cmp	w8, #0x2b
  423c04:	b.eq	42409c <ascii_strlower_n@plt+0x1fc3c>  // b.none
  423c08:	b	423c0c <ascii_strlower_n@plt+0x1f7ac>
  423c0c:	ldur	w8, [x29, #-48]
  423c10:	cmp	w8, #0x2c
  423c14:	b.eq	423f0c <ascii_strlower_n@plt+0x1faac>  // b.none
  423c18:	b	423c1c <ascii_strlower_n@plt+0x1f7bc>
  423c1c:	ldur	w8, [x29, #-48]
  423c20:	cmp	w8, #0x2e
  423c24:	b.eq	423fb8 <ascii_strlower_n@plt+0x1fb58>  // b.none
  423c28:	b	423c2c <ascii_strlower_n@plt+0x1f7cc>
  423c2c:	ldur	w8, [x29, #-48]
  423c30:	cmp	w8, #0x2f
  423c34:	b.eq	424088 <ascii_strlower_n@plt+0x1fc28>  // b.none
  423c38:	b	423c3c <ascii_strlower_n@plt+0x1f7dc>
  423c3c:	ldur	w8, [x29, #-48]
  423c40:	cmp	w8, #0x30
  423c44:	b.eq	423f58 <ascii_strlower_n@plt+0x1faf8>  // b.none
  423c48:	b	423c4c <ascii_strlower_n@plt+0x1f7ec>
  423c4c:	ldur	w8, [x29, #-48]
  423c50:	cmp	w8, #0x32
  423c54:	b.eq	4240fc <ascii_strlower_n@plt+0x1fc9c>  // b.none
  423c58:	b	423c5c <ascii_strlower_n@plt+0x1f7fc>
  423c5c:	ldur	w8, [x29, #-48]
  423c60:	cmp	w8, #0x34
  423c64:	b.eq	424174 <ascii_strlower_n@plt+0x1fd14>  // b.none
  423c68:	b	423c6c <ascii_strlower_n@plt+0x1f80c>
  423c6c:	ldur	w8, [x29, #-48]
  423c70:	cmp	w8, #0x3d
  423c74:	b.eq	424214 <ascii_strlower_n@plt+0x1fdb4>  // b.none
  423c78:	b	423c7c <ascii_strlower_n@plt+0x1f81c>
  423c7c:	ldur	w8, [x29, #-48]
  423c80:	cmp	w8, #0x63
  423c84:	b.eq	423d2c <ascii_strlower_n@plt+0x1f8cc>  // b.none
  423c88:	b	423c8c <ascii_strlower_n@plt+0x1f82c>
  423c8c:	ldur	w8, [x29, #-48]
  423c90:	cmp	w8, #0x101
  423c94:	b.eq	4241d4 <ascii_strlower_n@plt+0x1fd74>  // b.none
  423c98:	b	424214 <ascii_strlower_n@plt+0x1fdb4>
  423c9c:	ldur	x8, [x29, #-8]
  423ca0:	add	x0, x8, #0x50
  423ca4:	ldur	x2, [x29, #-16]
  423ca8:	mov	x8, #0x2                   	// #2
  423cac:	mov	x1, x8
  423cb0:	stur	x8, [x29, #-56]
  423cb4:	bl	404200 <siphash24_compress@plt>
  423cb8:	ldur	x8, [x29, #-8]
  423cbc:	add	x0, x8, #0x52
  423cc0:	ldur	x2, [x29, #-16]
  423cc4:	ldur	x1, [x29, #-56]
  423cc8:	bl	404200 <siphash24_compress@plt>
  423ccc:	ldur	x8, [x29, #-8]
  423cd0:	add	x0, x8, #0x54
  423cd4:	ldur	x2, [x29, #-16]
  423cd8:	ldur	x1, [x29, #-56]
  423cdc:	bl	404200 <siphash24_compress@plt>
  423ce0:	ldur	x8, [x29, #-8]
  423ce4:	ldr	x0, [x8, #88]
  423ce8:	ldur	x1, [x29, #-16]
  423cec:	bl	4042c0 <dns_name_hash_func@plt>
  423cf0:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  423cf4:	ldur	x8, [x29, #-8]
  423cf8:	ldr	x0, [x8, #80]
  423cfc:	ldur	x1, [x29, #-16]
  423d00:	bl	4042c0 <dns_name_hash_func@plt>
  423d04:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  423d08:	ldur	x8, [x29, #-8]
  423d0c:	ldr	x0, [x8, #80]
  423d10:	ldur	x1, [x29, #-16]
  423d14:	bl	4043d0 <string_hash_func@plt>
  423d18:	ldur	x8, [x29, #-8]
  423d1c:	ldr	x0, [x8, #88]
  423d20:	ldur	x1, [x29, #-16]
  423d24:	bl	4043d0 <string_hash_func@plt>
  423d28:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  423d2c:	ldur	x8, [x29, #-8]
  423d30:	ldr	x8, [x8, #80]
  423d34:	stur	x8, [x29, #-24]
  423d38:	ldur	x8, [x29, #-24]
  423d3c:	cbz	x8, 423d80 <ascii_strlower_n@plt+0x1f920>
  423d40:	ldur	x8, [x29, #-24]
  423d44:	add	x0, x8, #0x18
  423d48:	ldur	x8, [x29, #-24]
  423d4c:	ldr	x1, [x8]
  423d50:	ldur	x2, [x29, #-16]
  423d54:	bl	404200 <siphash24_compress@plt>
  423d58:	sub	x0, x29, #0x19
  423d5c:	mov	w9, #0x0                   	// #0
  423d60:	sturb	w9, [x29, #-25]
  423d64:	ldur	x2, [x29, #-16]
  423d68:	mov	x1, #0x1                   	// #1
  423d6c:	bl	404200 <siphash24_compress@plt>
  423d70:	ldur	x8, [x29, #-24]
  423d74:	ldr	x8, [x8, #8]
  423d78:	stur	x8, [x29, #-24]
  423d7c:	b	423d38 <ascii_strlower_n@plt+0x1f8d8>
  423d80:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  423d84:	ldur	x8, [x29, #-8]
  423d88:	add	x0, x8, #0x50
  423d8c:	ldur	x2, [x29, #-16]
  423d90:	mov	x1, #0x4                   	// #4
  423d94:	bl	404200 <siphash24_compress@plt>
  423d98:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  423d9c:	ldur	x8, [x29, #-8]
  423da0:	add	x0, x8, #0x50
  423da4:	ldur	x2, [x29, #-16]
  423da8:	mov	x1, #0x10                  	// #16
  423dac:	bl	404200 <siphash24_compress@plt>
  423db0:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  423db4:	ldur	x8, [x29, #-8]
  423db8:	ldr	x0, [x8, #80]
  423dbc:	ldur	x1, [x29, #-16]
  423dc0:	bl	4042c0 <dns_name_hash_func@plt>
  423dc4:	ldur	x8, [x29, #-8]
  423dc8:	ldr	x0, [x8, #88]
  423dcc:	ldur	x1, [x29, #-16]
  423dd0:	bl	4042c0 <dns_name_hash_func@plt>
  423dd4:	ldur	x8, [x29, #-8]
  423dd8:	add	x0, x8, #0x60
  423ddc:	ldur	x2, [x29, #-16]
  423de0:	mov	x8, #0x4                   	// #4
  423de4:	mov	x1, x8
  423de8:	stur	x8, [x29, #-64]
  423dec:	bl	404200 <siphash24_compress@plt>
  423df0:	ldur	x8, [x29, #-8]
  423df4:	add	x0, x8, #0x64
  423df8:	ldur	x2, [x29, #-16]
  423dfc:	ldur	x1, [x29, #-64]
  423e00:	bl	404200 <siphash24_compress@plt>
  423e04:	ldur	x8, [x29, #-8]
  423e08:	add	x0, x8, #0x68
  423e0c:	ldur	x2, [x29, #-16]
  423e10:	ldur	x1, [x29, #-64]
  423e14:	bl	404200 <siphash24_compress@plt>
  423e18:	ldur	x8, [x29, #-8]
  423e1c:	add	x0, x8, #0x6c
  423e20:	ldur	x2, [x29, #-16]
  423e24:	ldur	x1, [x29, #-64]
  423e28:	bl	404200 <siphash24_compress@plt>
  423e2c:	ldur	x8, [x29, #-8]
  423e30:	add	x0, x8, #0x70
  423e34:	ldur	x2, [x29, #-16]
  423e38:	ldur	x1, [x29, #-64]
  423e3c:	bl	404200 <siphash24_compress@plt>
  423e40:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  423e44:	ldur	x8, [x29, #-8]
  423e48:	add	x0, x8, #0x50
  423e4c:	ldur	x2, [x29, #-16]
  423e50:	mov	x1, #0x2                   	// #2
  423e54:	bl	404200 <siphash24_compress@plt>
  423e58:	ldur	x8, [x29, #-8]
  423e5c:	ldr	x0, [x8, #88]
  423e60:	ldur	x1, [x29, #-16]
  423e64:	bl	4042c0 <dns_name_hash_func@plt>
  423e68:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  423e6c:	ldur	x8, [x29, #-8]
  423e70:	add	x0, x8, #0x50
  423e74:	ldur	x2, [x29, #-16]
  423e78:	mov	x8, #0x1                   	// #1
  423e7c:	mov	x1, x8
  423e80:	str	x8, [sp, #72]
  423e84:	bl	404200 <siphash24_compress@plt>
  423e88:	ldur	x8, [x29, #-8]
  423e8c:	add	x0, x8, #0x51
  423e90:	ldur	x2, [x29, #-16]
  423e94:	ldr	x1, [sp, #72]
  423e98:	bl	404200 <siphash24_compress@plt>
  423e9c:	ldur	x8, [x29, #-8]
  423ea0:	add	x0, x8, #0x52
  423ea4:	ldur	x2, [x29, #-16]
  423ea8:	ldr	x1, [sp, #72]
  423eac:	bl	404200 <siphash24_compress@plt>
  423eb0:	ldur	x8, [x29, #-8]
  423eb4:	add	x0, x8, #0x53
  423eb8:	ldur	x2, [x29, #-16]
  423ebc:	ldr	x1, [sp, #72]
  423ec0:	bl	404200 <siphash24_compress@plt>
  423ec4:	ldur	x8, [x29, #-8]
  423ec8:	add	x0, x8, #0x54
  423ecc:	ldur	x2, [x29, #-16]
  423ed0:	mov	x8, #0x4                   	// #4
  423ed4:	mov	x1, x8
  423ed8:	str	x8, [sp, #64]
  423edc:	bl	404200 <siphash24_compress@plt>
  423ee0:	ldur	x8, [x29, #-8]
  423ee4:	add	x0, x8, #0x58
  423ee8:	ldur	x2, [x29, #-16]
  423eec:	ldr	x1, [sp, #64]
  423ef0:	bl	404200 <siphash24_compress@plt>
  423ef4:	ldur	x8, [x29, #-8]
  423ef8:	add	x0, x8, #0x5c
  423efc:	ldur	x2, [x29, #-16]
  423f00:	ldr	x1, [sp, #64]
  423f04:	bl	404200 <siphash24_compress@plt>
  423f08:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  423f0c:	ldur	x8, [x29, #-8]
  423f10:	add	x0, x8, #0x50
  423f14:	ldur	x2, [x29, #-16]
  423f18:	mov	x8, #0x1                   	// #1
  423f1c:	mov	x1, x8
  423f20:	str	x8, [sp, #56]
  423f24:	bl	404200 <siphash24_compress@plt>
  423f28:	ldur	x8, [x29, #-8]
  423f2c:	add	x0, x8, #0x51
  423f30:	ldur	x2, [x29, #-16]
  423f34:	ldr	x1, [sp, #56]
  423f38:	bl	404200 <siphash24_compress@plt>
  423f3c:	ldur	x8, [x29, #-8]
  423f40:	ldr	x0, [x8, #88]
  423f44:	ldur	x8, [x29, #-8]
  423f48:	ldr	x1, [x8, #96]
  423f4c:	ldur	x2, [x29, #-16]
  423f50:	bl	404200 <siphash24_compress@plt>
  423f54:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  423f58:	ldur	x8, [x29, #-8]
  423f5c:	add	x0, x8, #0x50
  423f60:	ldur	x2, [x29, #-16]
  423f64:	mov	x1, #0x2                   	// #2
  423f68:	bl	404200 <siphash24_compress@plt>
  423f6c:	ldur	x8, [x29, #-8]
  423f70:	add	x0, x8, #0x52
  423f74:	ldur	x2, [x29, #-16]
  423f78:	mov	x8, #0x1                   	// #1
  423f7c:	mov	x1, x8
  423f80:	str	x8, [sp, #48]
  423f84:	bl	404200 <siphash24_compress@plt>
  423f88:	ldur	x8, [x29, #-8]
  423f8c:	add	x0, x8, #0x53
  423f90:	ldur	x2, [x29, #-16]
  423f94:	ldr	x1, [sp, #48]
  423f98:	bl	404200 <siphash24_compress@plt>
  423f9c:	ldur	x8, [x29, #-8]
  423fa0:	ldr	x0, [x8, #88]
  423fa4:	ldur	x8, [x29, #-8]
  423fa8:	ldr	x1, [x8, #96]
  423fac:	ldur	x2, [x29, #-16]
  423fb0:	bl	404200 <siphash24_compress@plt>
  423fb4:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  423fb8:	ldur	x8, [x29, #-8]
  423fbc:	add	x0, x8, #0x50
  423fc0:	ldur	x2, [x29, #-16]
  423fc4:	mov	x8, #0x2                   	// #2
  423fc8:	mov	x1, x8
  423fcc:	str	x8, [sp, #40]
  423fd0:	bl	404200 <siphash24_compress@plt>
  423fd4:	ldur	x8, [x29, #-8]
  423fd8:	add	x0, x8, #0x52
  423fdc:	ldur	x2, [x29, #-16]
  423fe0:	mov	x8, #0x1                   	// #1
  423fe4:	mov	x1, x8
  423fe8:	str	x8, [sp, #32]
  423fec:	bl	404200 <siphash24_compress@plt>
  423ff0:	ldur	x8, [x29, #-8]
  423ff4:	add	x0, x8, #0x53
  423ff8:	ldur	x2, [x29, #-16]
  423ffc:	ldr	x1, [sp, #32]
  424000:	bl	404200 <siphash24_compress@plt>
  424004:	ldur	x8, [x29, #-8]
  424008:	add	x0, x8, #0x54
  42400c:	ldur	x2, [x29, #-16]
  424010:	mov	x8, #0x4                   	// #4
  424014:	mov	x1, x8
  424018:	str	x8, [sp, #24]
  42401c:	bl	404200 <siphash24_compress@plt>
  424020:	ldur	x8, [x29, #-8]
  424024:	add	x0, x8, #0x58
  424028:	ldur	x2, [x29, #-16]
  42402c:	ldr	x1, [sp, #24]
  424030:	bl	404200 <siphash24_compress@plt>
  424034:	ldur	x8, [x29, #-8]
  424038:	add	x0, x8, #0x5c
  42403c:	ldur	x2, [x29, #-16]
  424040:	ldr	x1, [sp, #24]
  424044:	bl	404200 <siphash24_compress@plt>
  424048:	ldur	x8, [x29, #-8]
  42404c:	add	x0, x8, #0x60
  424050:	ldur	x2, [x29, #-16]
  424054:	ldr	x1, [sp, #40]
  424058:	bl	404200 <siphash24_compress@plt>
  42405c:	ldur	x8, [x29, #-8]
  424060:	ldr	x0, [x8, #104]
  424064:	ldur	x1, [x29, #-16]
  424068:	bl	4042c0 <dns_name_hash_func@plt>
  42406c:	ldur	x8, [x29, #-8]
  424070:	ldr	x0, [x8, #112]
  424074:	ldur	x8, [x29, #-8]
  424078:	ldr	x1, [x8, #120]
  42407c:	ldur	x2, [x29, #-16]
  424080:	bl	404200 <siphash24_compress@plt>
  424084:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  424088:	ldur	x8, [x29, #-8]
  42408c:	ldr	x0, [x8, #80]
  424090:	ldur	x1, [x29, #-16]
  424094:	bl	4042c0 <dns_name_hash_func@plt>
  424098:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  42409c:	ldur	x8, [x29, #-8]
  4240a0:	add	x0, x8, #0x50
  4240a4:	ldur	x2, [x29, #-16]
  4240a8:	mov	x1, #0x2                   	// #2
  4240ac:	bl	404200 <siphash24_compress@plt>
  4240b0:	ldur	x8, [x29, #-8]
  4240b4:	add	x0, x8, #0x52
  4240b8:	ldur	x2, [x29, #-16]
  4240bc:	mov	x8, #0x1                   	// #1
  4240c0:	mov	x1, x8
  4240c4:	str	x8, [sp, #16]
  4240c8:	bl	404200 <siphash24_compress@plt>
  4240cc:	ldur	x8, [x29, #-8]
  4240d0:	add	x0, x8, #0x53
  4240d4:	ldur	x2, [x29, #-16]
  4240d8:	ldr	x1, [sp, #16]
  4240dc:	bl	404200 <siphash24_compress@plt>
  4240e0:	ldur	x8, [x29, #-8]
  4240e4:	ldr	x0, [x8, #88]
  4240e8:	ldur	x8, [x29, #-8]
  4240ec:	ldr	x1, [x8, #96]
  4240f0:	ldur	x2, [x29, #-16]
  4240f4:	bl	404200 <siphash24_compress@plt>
  4240f8:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  4240fc:	ldur	x8, [x29, #-8]
  424100:	add	x0, x8, #0x50
  424104:	ldur	x2, [x29, #-16]
  424108:	mov	x8, #0x1                   	// #1
  42410c:	mov	x1, x8
  424110:	str	x8, [sp, #8]
  424114:	bl	404200 <siphash24_compress@plt>
  424118:	ldur	x8, [x29, #-8]
  42411c:	add	x0, x8, #0x51
  424120:	ldur	x2, [x29, #-16]
  424124:	ldr	x1, [sp, #8]
  424128:	bl	404200 <siphash24_compress@plt>
  42412c:	ldur	x8, [x29, #-8]
  424130:	add	x0, x8, #0x52
  424134:	ldur	x2, [x29, #-16]
  424138:	mov	x1, #0x2                   	// #2
  42413c:	bl	404200 <siphash24_compress@plt>
  424140:	ldur	x8, [x29, #-8]
  424144:	ldr	x0, [x8, #88]
  424148:	ldur	x8, [x29, #-8]
  42414c:	ldr	x1, [x8, #96]
  424150:	ldur	x2, [x29, #-16]
  424154:	bl	404200 <siphash24_compress@plt>
  424158:	ldur	x8, [x29, #-8]
  42415c:	ldr	x0, [x8, #104]
  424160:	ldur	x8, [x29, #-8]
  424164:	ldr	x1, [x8, #112]
  424168:	ldur	x2, [x29, #-16]
  42416c:	bl	404200 <siphash24_compress@plt>
  424170:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  424174:	ldur	x8, [x29, #-8]
  424178:	add	x0, x8, #0x50
  42417c:	ldur	x2, [x29, #-16]
  424180:	mov	x8, #0x1                   	// #1
  424184:	mov	x1, x8
  424188:	str	x8, [sp]
  42418c:	bl	404200 <siphash24_compress@plt>
  424190:	ldur	x8, [x29, #-8]
  424194:	add	x0, x8, #0x51
  424198:	ldur	x2, [x29, #-16]
  42419c:	ldr	x1, [sp]
  4241a0:	bl	404200 <siphash24_compress@plt>
  4241a4:	ldur	x8, [x29, #-8]
  4241a8:	add	x0, x8, #0x52
  4241ac:	ldur	x2, [x29, #-16]
  4241b0:	ldr	x1, [sp]
  4241b4:	bl	404200 <siphash24_compress@plt>
  4241b8:	ldur	x8, [x29, #-8]
  4241bc:	ldr	x0, [x8, #88]
  4241c0:	ldur	x8, [x29, #-8]
  4241c4:	ldr	x1, [x8, #96]
  4241c8:	ldur	x2, [x29, #-16]
  4241cc:	bl	404200 <siphash24_compress@plt>
  4241d0:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  4241d4:	ldur	x8, [x29, #-8]
  4241d8:	add	x0, x8, #0x50
  4241dc:	ldur	x2, [x29, #-16]
  4241e0:	mov	x1, #0x1                   	// #1
  4241e4:	bl	404200 <siphash24_compress@plt>
  4241e8:	ldur	x8, [x29, #-8]
  4241ec:	ldr	x0, [x8, #88]
  4241f0:	ldur	x1, [x29, #-16]
  4241f4:	bl	4043d0 <string_hash_func@plt>
  4241f8:	ldur	x8, [x29, #-8]
  4241fc:	ldr	x0, [x8, #96]
  424200:	ldur	x8, [x29, #-8]
  424204:	ldr	x1, [x8, #104]
  424208:	ldur	x2, [x29, #-16]
  42420c:	bl	404200 <siphash24_compress@plt>
  424210:	b	42422c <ascii_strlower_n@plt+0x1fdcc>
  424214:	ldur	x8, [x29, #-8]
  424218:	ldr	x0, [x8, #80]
  42421c:	ldur	x8, [x29, #-8]
  424220:	ldr	x1, [x8, #88]
  424224:	ldur	x2, [x29, #-16]
  424228:	bl	404200 <siphash24_compress@plt>
  42422c:	ldp	x29, x30, [sp, #144]
  424230:	add	sp, sp, #0xa0
  424234:	ret
  424238:	sub	sp, sp, #0x50
  42423c:	stp	x29, x30, [sp, #64]
  424240:	add	x29, sp, #0x40
  424244:	stur	x0, [x29, #-16]
  424248:	stur	x1, [x29, #-24]
  42424c:	ldur	x8, [x29, #-16]
  424250:	ldr	x0, [x8, #8]
  424254:	ldur	x8, [x29, #-24]
  424258:	ldr	x1, [x8, #8]
  42425c:	bl	41f7c4 <ascii_strlower_n@plt+0x1b364>
  424260:	stur	w0, [x29, #-28]
  424264:	ldur	w9, [x29, #-28]
  424268:	cbz	w9, 424278 <ascii_strlower_n@plt+0x1fe18>
  42426c:	ldur	w8, [x29, #-28]
  424270:	stur	w8, [x29, #-4]
  424274:	b	4242e8 <ascii_strlower_n@plt+0x1fe88>
  424278:	ldur	x0, [x29, #-16]
  42427c:	ldur	x1, [x29, #-24]
  424280:	bl	421628 <ascii_strlower_n@plt+0x1d1c8>
  424284:	cbz	w0, 424290 <ascii_strlower_n@plt+0x1fe30>
  424288:	stur	wzr, [x29, #-4]
  42428c:	b	4242e8 <ascii_strlower_n@plt+0x1fe88>
  424290:	ldur	x8, [x29, #-16]
  424294:	str	x8, [sp, #24]
  424298:	ldur	x8, [x29, #-24]
  42429c:	str	x8, [sp, #16]
  4242a0:	ldr	x8, [sp, #24]
  4242a4:	ldr	x9, [sp, #16]
  4242a8:	cmp	x8, x9
  4242ac:	b.cs	4242bc <ascii_strlower_n@plt+0x1fe5c>  // b.hs, b.nlast
  4242b0:	mov	w8, #0xffffffff            	// #-1
  4242b4:	str	w8, [sp, #8]
  4242b8:	b	4242d8 <ascii_strlower_n@plt+0x1fe78>
  4242bc:	ldr	x8, [sp, #24]
  4242c0:	ldr	x9, [sp, #16]
  4242c4:	mov	w10, #0x1                   	// #1
  4242c8:	mov	w11, wzr
  4242cc:	cmp	x8, x9
  4242d0:	csel	w10, w10, w11, hi  // hi = pmore
  4242d4:	str	w10, [sp, #8]
  4242d8:	ldr	w8, [sp, #8]
  4242dc:	str	w8, [sp, #12]
  4242e0:	ldr	w8, [sp, #12]
  4242e4:	stur	w8, [x29, #-4]
  4242e8:	ldur	w0, [x29, #-4]
  4242ec:	ldp	x29, x30, [sp, #64]
  4242f0:	add	sp, sp, #0x50
  4242f4:	ret
  4242f8:	sub	sp, sp, #0x60
  4242fc:	stp	x29, x30, [sp, #80]
  424300:	add	x29, sp, #0x50
  424304:	mov	x8, xzr
  424308:	adrp	x9, 431000 <ascii_strlower_n@plt+0x2cba0>
  42430c:	add	x9, x9, #0xac0
  424310:	add	x2, x9, #0x3
  424314:	stur	x0, [x29, #-16]
  424318:	stur	x8, [x29, #-24]
  42431c:	str	x2, [sp, #16]
  424320:	ldur	x8, [x29, #-16]
  424324:	cmp	x8, #0x0
  424328:	cset	w9, ne  // ne = any
  42432c:	mov	w10, #0x1                   	// #1
  424330:	eor	w9, w9, #0x1
  424334:	eor	w9, w9, w10
  424338:	eor	w9, w9, w10
  42433c:	and	w9, w9, #0x1
  424340:	mov	w0, w9
  424344:	sxtw	x8, w0
  424348:	cbz	x8, 424370 <ascii_strlower_n@plt+0x1ff10>
  42434c:	mov	w8, wzr
  424350:	mov	w0, w8
  424354:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  424358:	add	x1, x1, #0x20f
  42435c:	ldr	x2, [sp, #16]
  424360:	mov	w3, #0x5df                 	// #1503
  424364:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  424368:	add	x4, x4, #0x4e4
  42436c:	bl	4039d0 <log_assert_failed_realm@plt>
  424370:	ldur	x8, [x29, #-16]
  424374:	ldr	x0, [x8, #8]
  424378:	bl	41fcec <ascii_strlower_n@plt+0x1b88c>
  42437c:	stur	x0, [x29, #-24]
  424380:	ldur	x8, [x29, #-24]
  424384:	cbnz	x8, 42439c <ascii_strlower_n@plt+0x1ff3c>
  424388:	mov	x8, xzr
  42438c:	stur	x8, [x29, #-8]
  424390:	mov	w9, #0x1                   	// #1
  424394:	stur	w9, [x29, #-36]
  424398:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  42439c:	ldur	x8, [x29, #-16]
  4243a0:	ldr	w9, [x8, #24]
  4243a4:	ldur	x8, [x29, #-24]
  4243a8:	str	w9, [x8, #24]
  4243ac:	ldur	x8, [x29, #-16]
  4243b0:	ldr	x8, [x8, #32]
  4243b4:	ldur	x10, [x29, #-24]
  4243b8:	str	x8, [x10, #32]
  4243bc:	ldur	x8, [x29, #-16]
  4243c0:	ldr	w9, [x8, #40]
  4243c4:	ldur	x8, [x29, #-24]
  4243c8:	str	w9, [x8, #40]
  4243cc:	ldur	x8, [x29, #-16]
  4243d0:	ldr	w9, [x8, #44]
  4243d4:	ldur	x8, [x29, #-24]
  4243d8:	str	w9, [x8, #44]
  4243dc:	ldur	x8, [x29, #-16]
  4243e0:	ldrb	w9, [x8, #48]
  4243e4:	mov	w11, #0x1                   	// #1
  4243e8:	and	w9, w9, #0x1
  4243ec:	ldur	x8, [x29, #-24]
  4243f0:	ldrb	w12, [x8, #48]
  4243f4:	and	w12, w12, #0xfffffffe
  4243f8:	and	w9, w9, #0x1
  4243fc:	orr	w9, w12, w9
  424400:	strb	w9, [x8, #48]
  424404:	ldur	x8, [x29, #-16]
  424408:	ldrb	w9, [x8, #48]
  42440c:	and	w9, w9, w11
  424410:	tbnz	w9, #0, 424418 <ascii_strlower_n@plt+0x1ffb8>
  424414:	b	424424 <ascii_strlower_n@plt+0x1ffc4>
  424418:	mov	w8, #0xffffffff            	// #-1
  42441c:	str	w8, [sp, #12]
  424420:	b	424434 <ascii_strlower_n@plt+0x1ffd4>
  424424:	ldur	x8, [x29, #-16]
  424428:	ldr	x8, [x8, #8]
  42442c:	ldrh	w9, [x8, #6]
  424430:	str	w9, [sp, #12]
  424434:	ldr	w8, [sp, #12]
  424438:	cmp	w8, #0x1
  42443c:	str	w8, [sp, #8]
  424440:	b.eq	4246dc <ascii_strlower_n@plt+0x2027c>  // b.none
  424444:	b	424448 <ascii_strlower_n@plt+0x1ffe8>
  424448:	ldr	w8, [sp, #8]
  42444c:	cmp	w8, #0x2
  424450:	b.eq	424600 <ascii_strlower_n@plt+0x201a0>  // b.none
  424454:	b	424458 <ascii_strlower_n@plt+0x1fff8>
  424458:	ldr	w8, [sp, #8]
  42445c:	cmp	w8, #0x5
  424460:	b.eq	424600 <ascii_strlower_n@plt+0x201a0>  // b.none
  424464:	b	424468 <ascii_strlower_n@plt+0x20008>
  424468:	ldr	w8, [sp, #8]
  42446c:	cmp	w8, #0x6
  424470:	b.eq	424704 <ascii_strlower_n@plt+0x202a4>  // b.none
  424474:	b	424478 <ascii_strlower_n@plt+0x20018>
  424478:	ldr	w8, [sp, #8]
  42447c:	cmp	w8, #0xc
  424480:	b.eq	424600 <ascii_strlower_n@plt+0x201a0>  // b.none
  424484:	b	424488 <ascii_strlower_n@plt+0x20028>
  424488:	ldr	w8, [sp, #8]
  42448c:	cmp	w8, #0xd
  424490:	b.eq	424638 <ascii_strlower_n@plt+0x201d8>  // b.none
  424494:	b	424498 <ascii_strlower_n@plt+0x20038>
  424498:	ldr	w8, [sp, #8]
  42449c:	cmp	w8, #0xf
  4244a0:	b.eq	4247c0 <ascii_strlower_n@plt+0x20360>  // b.none
  4244a4:	b	4244a8 <ascii_strlower_n@plt+0x20048>
  4244a8:	ldr	w8, [sp, #8]
  4244ac:	cmp	w8, #0x10
  4244b0:	b.eq	4246a4 <ascii_strlower_n@plt+0x20244>  // b.none
  4244b4:	b	4244b8 <ascii_strlower_n@plt+0x20058>
  4244b8:	ldr	w8, [sp, #8]
  4244bc:	cmp	w8, #0x1c
  4244c0:	b.eq	4246f0 <ascii_strlower_n@plt+0x20290>  // b.none
  4244c4:	b	4244c8 <ascii_strlower_n@plt+0x20068>
  4244c8:	ldr	w8, [sp, #8]
  4244cc:	cmp	w8, #0x1d
  4244d0:	b.eq	424808 <ascii_strlower_n@plt+0x203a8>  // b.none
  4244d4:	b	4244d8 <ascii_strlower_n@plt+0x20078>
  4244d8:	ldr	w8, [sp, #8]
  4244dc:	cmp	w8, #0x21
  4244e0:	b.eq	424598 <ascii_strlower_n@plt+0x20138>  // b.none
  4244e4:	b	4244e8 <ascii_strlower_n@plt+0x20088>
  4244e8:	ldr	w8, [sp, #8]
  4244ec:	cmp	w8, #0x27
  4244f0:	b.eq	424600 <ascii_strlower_n@plt+0x201a0>  // b.none
  4244f4:	b	4244f8 <ascii_strlower_n@plt+0x20098>
  4244f8:	ldr	w8, [sp, #8]
  4244fc:	cmp	w8, #0x29
  424500:	b.eq	424d00 <ascii_strlower_n@plt+0x208a0>  // b.none
  424504:	b	424508 <ascii_strlower_n@plt+0x200a8>
  424508:	ldr	w8, [sp, #8]
  42450c:	cmp	w8, #0x2b
  424510:	b.eq	424a6c <ascii_strlower_n@plt+0x2060c>  // b.none
  424514:	b	424518 <ascii_strlower_n@plt+0x200b8>
  424518:	ldr	w8, [sp, #8]
  42451c:	cmp	w8, #0x2c
  424520:	b.eq	42481c <ascii_strlower_n@plt+0x203bc>  // b.none
  424524:	b	424528 <ascii_strlower_n@plt+0x200c8>
  424528:	ldr	w8, [sp, #8]
  42452c:	cmp	w8, #0x2e
  424530:	b.eq	42490c <ascii_strlower_n@plt+0x204ac>  // b.none
  424534:	b	424538 <ascii_strlower_n@plt+0x200d8>
  424538:	ldr	w8, [sp, #8]
  42453c:	cmp	w8, #0x2f
  424540:	b.eq	424a00 <ascii_strlower_n@plt+0x205a0>  // b.none
  424544:	b	424548 <ascii_strlower_n@plt+0x200e8>
  424548:	ldr	w8, [sp, #8]
  42454c:	cmp	w8, #0x30
  424550:	b.eq	42488c <ascii_strlower_n@plt+0x2042c>  // b.none
  424554:	b	424558 <ascii_strlower_n@plt+0x200f8>
  424558:	ldr	w8, [sp, #8]
  42455c:	cmp	w8, #0x32
  424560:	b.eq	424aec <ascii_strlower_n@plt+0x2068c>  // b.none
  424564:	b	424568 <ascii_strlower_n@plt+0x20108>
  424568:	ldr	w8, [sp, #8]
  42456c:	cmp	w8, #0x34
  424570:	b.eq	424bec <ascii_strlower_n@plt+0x2078c>  // b.none
  424574:	b	424578 <ascii_strlower_n@plt+0x20118>
  424578:	ldr	w8, [sp, #8]
  42457c:	cmp	w8, #0x63
  424580:	b.eq	4246a4 <ascii_strlower_n@plt+0x20244>  // b.none
  424584:	b	424588 <ascii_strlower_n@plt+0x20128>
  424588:	ldr	w8, [sp, #8]
  42458c:	cmp	w8, #0x101
  424590:	b.eq	424c6c <ascii_strlower_n@plt+0x2080c>  // b.none
  424594:	b	424d00 <ascii_strlower_n@plt+0x208a0>
  424598:	ldur	x8, [x29, #-16]
  42459c:	ldrh	w9, [x8, #80]
  4245a0:	ldur	x8, [x29, #-24]
  4245a4:	strh	w9, [x8, #80]
  4245a8:	ldur	x8, [x29, #-16]
  4245ac:	ldrh	w9, [x8, #82]
  4245b0:	ldur	x8, [x29, #-24]
  4245b4:	strh	w9, [x8, #82]
  4245b8:	ldur	x8, [x29, #-16]
  4245bc:	ldrh	w9, [x8, #84]
  4245c0:	ldur	x8, [x29, #-24]
  4245c4:	strh	w9, [x8, #84]
  4245c8:	ldur	x8, [x29, #-16]
  4245cc:	ldr	x0, [x8, #88]
  4245d0:	bl	403b20 <strdup@plt>
  4245d4:	ldur	x8, [x29, #-24]
  4245d8:	str	x0, [x8, #88]
  4245dc:	ldur	x8, [x29, #-24]
  4245e0:	ldr	x8, [x8, #88]
  4245e4:	cbnz	x8, 4245fc <ascii_strlower_n@plt+0x2019c>
  4245e8:	mov	x8, xzr
  4245ec:	stur	x8, [x29, #-8]
  4245f0:	mov	w9, #0x1                   	// #1
  4245f4:	stur	w9, [x29, #-36]
  4245f8:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  4245fc:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  424600:	ldur	x8, [x29, #-16]
  424604:	ldr	x0, [x8, #80]
  424608:	bl	403b20 <strdup@plt>
  42460c:	ldur	x8, [x29, #-24]
  424610:	str	x0, [x8, #80]
  424614:	ldur	x8, [x29, #-24]
  424618:	ldr	x8, [x8, #80]
  42461c:	cbnz	x8, 424634 <ascii_strlower_n@plt+0x201d4>
  424620:	mov	x8, xzr
  424624:	stur	x8, [x29, #-8]
  424628:	mov	w9, #0x1                   	// #1
  42462c:	stur	w9, [x29, #-36]
  424630:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  424634:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  424638:	ldur	x8, [x29, #-16]
  42463c:	ldr	x0, [x8, #80]
  424640:	bl	403b20 <strdup@plt>
  424644:	ldur	x8, [x29, #-24]
  424648:	str	x0, [x8, #80]
  42464c:	ldur	x8, [x29, #-24]
  424650:	ldr	x8, [x8, #80]
  424654:	cbnz	x8, 42466c <ascii_strlower_n@plt+0x2020c>
  424658:	mov	x8, xzr
  42465c:	stur	x8, [x29, #-8]
  424660:	mov	w9, #0x1                   	// #1
  424664:	stur	w9, [x29, #-36]
  424668:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  42466c:	ldur	x8, [x29, #-16]
  424670:	ldr	x0, [x8, #88]
  424674:	bl	403b20 <strdup@plt>
  424678:	ldur	x8, [x29, #-24]
  42467c:	str	x0, [x8, #88]
  424680:	ldur	x8, [x29, #-24]
  424684:	ldr	x8, [x8, #88]
  424688:	cbnz	x8, 4246a0 <ascii_strlower_n@plt+0x20240>
  42468c:	mov	x8, xzr
  424690:	stur	x8, [x29, #-8]
  424694:	mov	w9, #0x1                   	// #1
  424698:	stur	w9, [x29, #-36]
  42469c:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  4246a0:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  4246a4:	ldur	x8, [x29, #-16]
  4246a8:	ldr	x0, [x8, #80]
  4246ac:	bl	424d94 <ascii_strlower_n@plt+0x20934>
  4246b0:	ldur	x8, [x29, #-24]
  4246b4:	str	x0, [x8, #80]
  4246b8:	ldur	x8, [x29, #-24]
  4246bc:	ldr	x8, [x8, #80]
  4246c0:	cbnz	x8, 4246d8 <ascii_strlower_n@plt+0x20278>
  4246c4:	mov	x8, xzr
  4246c8:	stur	x8, [x29, #-8]
  4246cc:	mov	w9, #0x1                   	// #1
  4246d0:	stur	w9, [x29, #-36]
  4246d4:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  4246d8:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  4246dc:	ldur	x8, [x29, #-24]
  4246e0:	ldur	x9, [x29, #-16]
  4246e4:	ldr	w10, [x9, #80]
  4246e8:	str	w10, [x8, #80]
  4246ec:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  4246f0:	ldur	x8, [x29, #-24]
  4246f4:	ldur	x9, [x29, #-16]
  4246f8:	ldr	q0, [x9, #80]
  4246fc:	str	q0, [x8, #80]
  424700:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  424704:	ldur	x8, [x29, #-16]
  424708:	ldr	x0, [x8, #80]
  42470c:	bl	403b20 <strdup@plt>
  424710:	ldur	x8, [x29, #-24]
  424714:	str	x0, [x8, #80]
  424718:	ldur	x8, [x29, #-24]
  42471c:	ldr	x8, [x8, #80]
  424720:	cbnz	x8, 424738 <ascii_strlower_n@plt+0x202d8>
  424724:	mov	x8, xzr
  424728:	stur	x8, [x29, #-8]
  42472c:	mov	w9, #0x1                   	// #1
  424730:	stur	w9, [x29, #-36]
  424734:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  424738:	ldur	x8, [x29, #-16]
  42473c:	ldr	x0, [x8, #88]
  424740:	bl	403b20 <strdup@plt>
  424744:	ldur	x8, [x29, #-24]
  424748:	str	x0, [x8, #88]
  42474c:	ldur	x8, [x29, #-24]
  424750:	ldr	x8, [x8, #88]
  424754:	cbnz	x8, 42476c <ascii_strlower_n@plt+0x2030c>
  424758:	mov	x8, xzr
  42475c:	stur	x8, [x29, #-8]
  424760:	mov	w9, #0x1                   	// #1
  424764:	stur	w9, [x29, #-36]
  424768:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  42476c:	ldur	x8, [x29, #-16]
  424770:	ldr	w9, [x8, #96]
  424774:	ldur	x8, [x29, #-24]
  424778:	str	w9, [x8, #96]
  42477c:	ldur	x8, [x29, #-16]
  424780:	ldr	w9, [x8, #100]
  424784:	ldur	x8, [x29, #-24]
  424788:	str	w9, [x8, #100]
  42478c:	ldur	x8, [x29, #-16]
  424790:	ldr	w9, [x8, #104]
  424794:	ldur	x8, [x29, #-24]
  424798:	str	w9, [x8, #104]
  42479c:	ldur	x8, [x29, #-16]
  4247a0:	ldr	w9, [x8, #108]
  4247a4:	ldur	x8, [x29, #-24]
  4247a8:	str	w9, [x8, #108]
  4247ac:	ldur	x8, [x29, #-16]
  4247b0:	ldr	w9, [x8, #112]
  4247b4:	ldur	x8, [x29, #-24]
  4247b8:	str	w9, [x8, #112]
  4247bc:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  4247c0:	ldur	x8, [x29, #-16]
  4247c4:	ldrh	w9, [x8, #80]
  4247c8:	ldur	x8, [x29, #-24]
  4247cc:	strh	w9, [x8, #80]
  4247d0:	ldur	x8, [x29, #-16]
  4247d4:	ldr	x0, [x8, #88]
  4247d8:	bl	403b20 <strdup@plt>
  4247dc:	ldur	x8, [x29, #-24]
  4247e0:	str	x0, [x8, #88]
  4247e4:	ldur	x8, [x29, #-24]
  4247e8:	ldr	x8, [x8, #88]
  4247ec:	cbnz	x8, 424804 <ascii_strlower_n@plt+0x203a4>
  4247f0:	mov	x8, xzr
  4247f4:	stur	x8, [x29, #-8]
  4247f8:	mov	w9, #0x1                   	// #1
  4247fc:	stur	w9, [x29, #-36]
  424800:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  424804:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  424808:	ldur	x8, [x29, #-24]
  42480c:	ldur	x9, [x29, #-16]
  424810:	ldr	q0, [x9, #80]
  424814:	str	q0, [x8, #80]
  424818:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  42481c:	ldur	x8, [x29, #-16]
  424820:	ldrb	w9, [x8, #80]
  424824:	ldur	x8, [x29, #-24]
  424828:	strb	w9, [x8, #80]
  42482c:	ldur	x8, [x29, #-16]
  424830:	ldrb	w9, [x8, #81]
  424834:	ldur	x8, [x29, #-24]
  424838:	strb	w9, [x8, #81]
  42483c:	ldur	x8, [x29, #-16]
  424840:	ldr	x0, [x8, #88]
  424844:	ldur	x8, [x29, #-16]
  424848:	ldr	x1, [x8, #96]
  42484c:	bl	4041d0 <memdup@plt>
  424850:	ldur	x8, [x29, #-24]
  424854:	str	x0, [x8, #88]
  424858:	ldur	x8, [x29, #-24]
  42485c:	ldr	x8, [x8, #88]
  424860:	cbnz	x8, 424878 <ascii_strlower_n@plt+0x20418>
  424864:	mov	x8, xzr
  424868:	stur	x8, [x29, #-8]
  42486c:	mov	w9, #0x1                   	// #1
  424870:	stur	w9, [x29, #-36]
  424874:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  424878:	ldur	x8, [x29, #-16]
  42487c:	ldr	x8, [x8, #96]
  424880:	ldur	x9, [x29, #-24]
  424884:	str	x8, [x9, #96]
  424888:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  42488c:	ldur	x8, [x29, #-16]
  424890:	ldrh	w9, [x8, #80]
  424894:	ldur	x8, [x29, #-24]
  424898:	strh	w9, [x8, #80]
  42489c:	ldur	x8, [x29, #-16]
  4248a0:	ldrb	w9, [x8, #82]
  4248a4:	ldur	x8, [x29, #-24]
  4248a8:	strb	w9, [x8, #82]
  4248ac:	ldur	x8, [x29, #-16]
  4248b0:	ldrb	w9, [x8, #83]
  4248b4:	ldur	x8, [x29, #-24]
  4248b8:	strb	w9, [x8, #83]
  4248bc:	ldur	x8, [x29, #-16]
  4248c0:	ldr	x0, [x8, #88]
  4248c4:	ldur	x8, [x29, #-16]
  4248c8:	ldr	x1, [x8, #96]
  4248cc:	bl	4041d0 <memdup@plt>
  4248d0:	ldur	x8, [x29, #-24]
  4248d4:	str	x0, [x8, #88]
  4248d8:	ldur	x8, [x29, #-24]
  4248dc:	ldr	x8, [x8, #88]
  4248e0:	cbnz	x8, 4248f8 <ascii_strlower_n@plt+0x20498>
  4248e4:	mov	x8, xzr
  4248e8:	stur	x8, [x29, #-8]
  4248ec:	mov	w9, #0x1                   	// #1
  4248f0:	stur	w9, [x29, #-36]
  4248f4:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  4248f8:	ldur	x8, [x29, #-16]
  4248fc:	ldr	x8, [x8, #96]
  424900:	ldur	x9, [x29, #-24]
  424904:	str	x8, [x9, #96]
  424908:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  42490c:	ldur	x8, [x29, #-16]
  424910:	ldrh	w9, [x8, #80]
  424914:	ldur	x8, [x29, #-24]
  424918:	strh	w9, [x8, #80]
  42491c:	ldur	x8, [x29, #-16]
  424920:	ldrb	w9, [x8, #82]
  424924:	ldur	x8, [x29, #-24]
  424928:	strb	w9, [x8, #82]
  42492c:	ldur	x8, [x29, #-16]
  424930:	ldrb	w9, [x8, #83]
  424934:	ldur	x8, [x29, #-24]
  424938:	strb	w9, [x8, #83]
  42493c:	ldur	x8, [x29, #-16]
  424940:	ldr	w9, [x8, #84]
  424944:	ldur	x8, [x29, #-24]
  424948:	str	w9, [x8, #84]
  42494c:	ldur	x8, [x29, #-16]
  424950:	ldr	w9, [x8, #88]
  424954:	ldur	x8, [x29, #-24]
  424958:	str	w9, [x8, #88]
  42495c:	ldur	x8, [x29, #-16]
  424960:	ldr	w9, [x8, #92]
  424964:	ldur	x8, [x29, #-24]
  424968:	str	w9, [x8, #92]
  42496c:	ldur	x8, [x29, #-16]
  424970:	ldrh	w9, [x8, #96]
  424974:	ldur	x8, [x29, #-24]
  424978:	strh	w9, [x8, #96]
  42497c:	ldur	x8, [x29, #-16]
  424980:	ldr	x0, [x8, #104]
  424984:	bl	403b20 <strdup@plt>
  424988:	ldur	x8, [x29, #-24]
  42498c:	str	x0, [x8, #104]
  424990:	ldur	x8, [x29, #-24]
  424994:	ldr	x8, [x8, #104]
  424998:	cbnz	x8, 4249b0 <ascii_strlower_n@plt+0x20550>
  42499c:	mov	x8, xzr
  4249a0:	stur	x8, [x29, #-8]
  4249a4:	mov	w9, #0x1                   	// #1
  4249a8:	stur	w9, [x29, #-36]
  4249ac:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  4249b0:	ldur	x8, [x29, #-16]
  4249b4:	ldr	x0, [x8, #112]
  4249b8:	ldur	x8, [x29, #-16]
  4249bc:	ldr	x1, [x8, #120]
  4249c0:	bl	4041d0 <memdup@plt>
  4249c4:	ldur	x8, [x29, #-24]
  4249c8:	str	x0, [x8, #112]
  4249cc:	ldur	x8, [x29, #-24]
  4249d0:	ldr	x8, [x8, #112]
  4249d4:	cbnz	x8, 4249ec <ascii_strlower_n@plt+0x2058c>
  4249d8:	mov	x8, xzr
  4249dc:	stur	x8, [x29, #-8]
  4249e0:	mov	w9, #0x1                   	// #1
  4249e4:	stur	w9, [x29, #-36]
  4249e8:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  4249ec:	ldur	x8, [x29, #-16]
  4249f0:	ldr	x8, [x8, #120]
  4249f4:	ldur	x9, [x29, #-24]
  4249f8:	str	x8, [x9, #120]
  4249fc:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  424a00:	ldur	x8, [x29, #-16]
  424a04:	ldr	x0, [x8, #80]
  424a08:	bl	403b20 <strdup@plt>
  424a0c:	ldur	x8, [x29, #-24]
  424a10:	str	x0, [x8, #80]
  424a14:	ldur	x8, [x29, #-24]
  424a18:	ldr	x8, [x8, #80]
  424a1c:	cbnz	x8, 424a34 <ascii_strlower_n@plt+0x205d4>
  424a20:	mov	x8, xzr
  424a24:	stur	x8, [x29, #-8]
  424a28:	mov	w9, #0x1                   	// #1
  424a2c:	stur	w9, [x29, #-36]
  424a30:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  424a34:	ldur	x8, [x29, #-16]
  424a38:	ldr	x0, [x8, #88]
  424a3c:	bl	4043e0 <bitmap_copy@plt>
  424a40:	ldur	x8, [x29, #-24]
  424a44:	str	x0, [x8, #88]
  424a48:	ldur	x8, [x29, #-24]
  424a4c:	ldr	x8, [x8, #88]
  424a50:	cbnz	x8, 424a68 <ascii_strlower_n@plt+0x20608>
  424a54:	mov	x8, xzr
  424a58:	stur	x8, [x29, #-8]
  424a5c:	mov	w9, #0x1                   	// #1
  424a60:	stur	w9, [x29, #-36]
  424a64:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  424a68:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  424a6c:	ldur	x8, [x29, #-16]
  424a70:	ldrh	w9, [x8, #80]
  424a74:	ldur	x8, [x29, #-24]
  424a78:	strh	w9, [x8, #80]
  424a7c:	ldur	x8, [x29, #-16]
  424a80:	ldrb	w9, [x8, #82]
  424a84:	ldur	x8, [x29, #-24]
  424a88:	strb	w9, [x8, #82]
  424a8c:	ldur	x8, [x29, #-16]
  424a90:	ldrb	w9, [x8, #83]
  424a94:	ldur	x8, [x29, #-24]
  424a98:	strb	w9, [x8, #83]
  424a9c:	ldur	x8, [x29, #-16]
  424aa0:	ldr	x0, [x8, #88]
  424aa4:	ldur	x8, [x29, #-16]
  424aa8:	ldr	x1, [x8, #96]
  424aac:	bl	4041d0 <memdup@plt>
  424ab0:	ldur	x8, [x29, #-24]
  424ab4:	str	x0, [x8, #88]
  424ab8:	ldur	x8, [x29, #-24]
  424abc:	ldr	x8, [x8, #88]
  424ac0:	cbnz	x8, 424ad8 <ascii_strlower_n@plt+0x20678>
  424ac4:	mov	x8, xzr
  424ac8:	stur	x8, [x29, #-8]
  424acc:	mov	w9, #0x1                   	// #1
  424ad0:	stur	w9, [x29, #-36]
  424ad4:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  424ad8:	ldur	x8, [x29, #-16]
  424adc:	ldr	x8, [x8, #96]
  424ae0:	ldur	x9, [x29, #-24]
  424ae4:	str	x8, [x9, #96]
  424ae8:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  424aec:	ldur	x8, [x29, #-16]
  424af0:	ldrb	w9, [x8, #80]
  424af4:	ldur	x8, [x29, #-24]
  424af8:	strb	w9, [x8, #80]
  424afc:	ldur	x8, [x29, #-16]
  424b00:	ldrb	w9, [x8, #81]
  424b04:	ldur	x8, [x29, #-24]
  424b08:	strb	w9, [x8, #81]
  424b0c:	ldur	x8, [x29, #-16]
  424b10:	ldrh	w9, [x8, #82]
  424b14:	ldur	x8, [x29, #-24]
  424b18:	strh	w9, [x8, #82]
  424b1c:	ldur	x8, [x29, #-16]
  424b20:	ldr	x0, [x8, #88]
  424b24:	ldur	x8, [x29, #-16]
  424b28:	ldr	x1, [x8, #96]
  424b2c:	bl	4041d0 <memdup@plt>
  424b30:	ldur	x8, [x29, #-24]
  424b34:	str	x0, [x8, #88]
  424b38:	ldur	x8, [x29, #-24]
  424b3c:	ldr	x8, [x8, #88]
  424b40:	cbnz	x8, 424b58 <ascii_strlower_n@plt+0x206f8>
  424b44:	mov	x8, xzr
  424b48:	stur	x8, [x29, #-8]
  424b4c:	mov	w9, #0x1                   	// #1
  424b50:	stur	w9, [x29, #-36]
  424b54:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  424b58:	ldur	x8, [x29, #-16]
  424b5c:	ldr	x8, [x8, #96]
  424b60:	ldur	x9, [x29, #-24]
  424b64:	str	x8, [x9, #96]
  424b68:	ldur	x8, [x29, #-16]
  424b6c:	ldr	x0, [x8, #104]
  424b70:	ldur	x8, [x29, #-16]
  424b74:	ldr	x1, [x8, #112]
  424b78:	bl	4041d0 <memdup@plt>
  424b7c:	ldur	x8, [x29, #-24]
  424b80:	str	x0, [x8, #104]
  424b84:	ldur	x8, [x29, #-24]
  424b88:	ldr	x8, [x8, #112]
  424b8c:	cbnz	x8, 424ba4 <ascii_strlower_n@plt+0x20744>
  424b90:	mov	x8, xzr
  424b94:	stur	x8, [x29, #-8]
  424b98:	mov	w9, #0x1                   	// #1
  424b9c:	stur	w9, [x29, #-36]
  424ba0:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  424ba4:	ldur	x8, [x29, #-16]
  424ba8:	ldr	x8, [x8, #112]
  424bac:	ldur	x9, [x29, #-24]
  424bb0:	str	x8, [x9, #112]
  424bb4:	ldur	x8, [x29, #-16]
  424bb8:	ldr	x0, [x8, #120]
  424bbc:	bl	4043e0 <bitmap_copy@plt>
  424bc0:	ldur	x8, [x29, #-24]
  424bc4:	str	x0, [x8, #120]
  424bc8:	ldur	x8, [x29, #-24]
  424bcc:	ldr	x8, [x8, #120]
  424bd0:	cbnz	x8, 424be8 <ascii_strlower_n@plt+0x20788>
  424bd4:	mov	x8, xzr
  424bd8:	stur	x8, [x29, #-8]
  424bdc:	mov	w9, #0x1                   	// #1
  424be0:	stur	w9, [x29, #-36]
  424be4:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  424be8:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  424bec:	ldur	x8, [x29, #-16]
  424bf0:	ldrb	w9, [x8, #80]
  424bf4:	ldur	x8, [x29, #-24]
  424bf8:	strb	w9, [x8, #80]
  424bfc:	ldur	x8, [x29, #-16]
  424c00:	ldrb	w9, [x8, #81]
  424c04:	ldur	x8, [x29, #-24]
  424c08:	strb	w9, [x8, #81]
  424c0c:	ldur	x8, [x29, #-16]
  424c10:	ldrb	w9, [x8, #82]
  424c14:	ldur	x8, [x29, #-24]
  424c18:	strb	w9, [x8, #82]
  424c1c:	ldur	x8, [x29, #-16]
  424c20:	ldr	x0, [x8, #88]
  424c24:	ldur	x8, [x29, #-16]
  424c28:	ldr	x1, [x8, #96]
  424c2c:	bl	4041d0 <memdup@plt>
  424c30:	ldur	x8, [x29, #-24]
  424c34:	str	x0, [x8, #88]
  424c38:	ldur	x8, [x29, #-24]
  424c3c:	ldr	x8, [x8, #88]
  424c40:	cbnz	x8, 424c58 <ascii_strlower_n@plt+0x207f8>
  424c44:	mov	x8, xzr
  424c48:	stur	x8, [x29, #-8]
  424c4c:	mov	w9, #0x1                   	// #1
  424c50:	stur	w9, [x29, #-36]
  424c54:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  424c58:	ldur	x8, [x29, #-16]
  424c5c:	ldr	x8, [x8, #96]
  424c60:	ldur	x9, [x29, #-24]
  424c64:	str	x8, [x9, #96]
  424c68:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  424c6c:	ldur	x8, [x29, #-16]
  424c70:	ldrb	w9, [x8, #80]
  424c74:	ldur	x8, [x29, #-24]
  424c78:	strb	w9, [x8, #80]
  424c7c:	ldur	x8, [x29, #-16]
  424c80:	ldr	x0, [x8, #88]
  424c84:	bl	403b20 <strdup@plt>
  424c88:	ldur	x8, [x29, #-24]
  424c8c:	str	x0, [x8, #88]
  424c90:	ldur	x8, [x29, #-24]
  424c94:	ldr	x8, [x8, #88]
  424c98:	cbnz	x8, 424cb0 <ascii_strlower_n@plt+0x20850>
  424c9c:	mov	x8, xzr
  424ca0:	stur	x8, [x29, #-8]
  424ca4:	mov	w9, #0x1                   	// #1
  424ca8:	stur	w9, [x29, #-36]
  424cac:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  424cb0:	ldur	x8, [x29, #-16]
  424cb4:	ldr	x0, [x8, #96]
  424cb8:	ldur	x8, [x29, #-16]
  424cbc:	ldr	x1, [x8, #104]
  424cc0:	bl	4041d0 <memdup@plt>
  424cc4:	ldur	x8, [x29, #-24]
  424cc8:	str	x0, [x8, #96]
  424ccc:	ldur	x8, [x29, #-24]
  424cd0:	ldr	x8, [x8, #96]
  424cd4:	cbnz	x8, 424cec <ascii_strlower_n@plt+0x2088c>
  424cd8:	mov	x8, xzr
  424cdc:	stur	x8, [x29, #-8]
  424ce0:	mov	w9, #0x1                   	// #1
  424ce4:	stur	w9, [x29, #-36]
  424ce8:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  424cec:	ldur	x8, [x29, #-16]
  424cf0:	ldr	x8, [x8, #104]
  424cf4:	ldur	x9, [x29, #-24]
  424cf8:	str	x8, [x9, #104]
  424cfc:	b	424d4c <ascii_strlower_n@plt+0x208ec>
  424d00:	ldur	x8, [x29, #-16]
  424d04:	ldr	x0, [x8, #80]
  424d08:	ldur	x8, [x29, #-16]
  424d0c:	ldr	x1, [x8, #88]
  424d10:	bl	4041d0 <memdup@plt>
  424d14:	ldur	x8, [x29, #-24]
  424d18:	str	x0, [x8, #80]
  424d1c:	ldur	x8, [x29, #-24]
  424d20:	ldr	x8, [x8, #80]
  424d24:	cbnz	x8, 424d3c <ascii_strlower_n@plt+0x208dc>
  424d28:	mov	x8, xzr
  424d2c:	stur	x8, [x29, #-8]
  424d30:	mov	w9, #0x1                   	// #1
  424d34:	stur	w9, [x29, #-36]
  424d38:	b	424d7c <ascii_strlower_n@plt+0x2091c>
  424d3c:	ldur	x8, [x29, #-16]
  424d40:	ldr	x8, [x8, #88]
  424d44:	ldur	x9, [x29, #-24]
  424d48:	str	x8, [x9, #88]
  424d4c:	ldur	x8, [x29, #-24]
  424d50:	str	x8, [sp, #32]
  424d54:	mov	x8, xzr
  424d58:	stur	x8, [x29, #-24]
  424d5c:	ldr	x8, [sp, #32]
  424d60:	str	x8, [sp, #24]
  424d64:	ldr	x8, [sp, #24]
  424d68:	stur	x8, [x29, #-32]
  424d6c:	ldur	x8, [x29, #-32]
  424d70:	stur	x8, [x29, #-8]
  424d74:	mov	w9, #0x1                   	// #1
  424d78:	stur	w9, [x29, #-36]
  424d7c:	sub	x0, x29, #0x18
  424d80:	bl	420580 <ascii_strlower_n@plt+0x1c120>
  424d84:	ldur	x0, [x29, #-8]
  424d88:	ldp	x29, x30, [sp, #80]
  424d8c:	add	sp, sp, #0x60
  424d90:	ret
  424d94:	sub	sp, sp, #0x60
  424d98:	stp	x29, x30, [sp, #80]
  424d9c:	add	x29, sp, #0x50
  424da0:	mov	x8, xzr
  424da4:	adrp	x9, 431000 <ascii_strlower_n@plt+0x2cba0>
  424da8:	add	x9, x9, #0xac0
  424dac:	add	x2, x9, #0x3
  424db0:	stur	x0, [x29, #-16]
  424db4:	stur	x8, [x29, #-32]
  424db8:	str	x8, [sp, #40]
  424dbc:	ldur	x8, [x29, #-16]
  424dc0:	stur	x8, [x29, #-24]
  424dc4:	str	x2, [sp]
  424dc8:	ldur	x8, [x29, #-24]
  424dcc:	cbz	x8, 424f0c <ascii_strlower_n@plt+0x20aac>
  424dd0:	ldur	x0, [x29, #-24]
  424dd4:	ldur	x8, [x29, #-24]
  424dd8:	ldr	x8, [x8]
  424ddc:	add	x8, x8, #0x18
  424de0:	add	x1, x8, #0x1
  424de4:	bl	4041d0 <memdup@plt>
  424de8:	str	x0, [sp, #32]
  424dec:	ldr	x8, [sp, #32]
  424df0:	cbnz	x8, 424e08 <ascii_strlower_n@plt+0x209a8>
  424df4:	ldur	x0, [x29, #-32]
  424df8:	bl	4250ac <ascii_strlower_n@plt+0x20c4c>
  424dfc:	mov	x8, xzr
  424e00:	stur	x8, [x29, #-8]
  424e04:	b	424f14 <ascii_strlower_n@plt+0x20ab4>
  424e08:	sub	x8, x29, #0x20
  424e0c:	str	x8, [sp, #24]
  424e10:	ldr	x8, [sp, #40]
  424e14:	str	x8, [sp, #16]
  424e18:	ldr	x8, [sp, #32]
  424e1c:	str	x8, [sp, #8]
  424e20:	ldr	x8, [sp, #8]
  424e24:	cmp	x8, #0x0
  424e28:	cset	w9, ne  // ne = any
  424e2c:	mov	w10, #0x1                   	// #1
  424e30:	eor	w9, w9, #0x1
  424e34:	eor	w9, w9, w10
  424e38:	eor	w9, w9, w10
  424e3c:	and	w9, w9, #0x1
  424e40:	mov	w0, w9
  424e44:	sxtw	x8, w0
  424e48:	cbz	x8, 424e70 <ascii_strlower_n@plt+0x20a10>
  424e4c:	mov	w8, wzr
  424e50:	mov	w0, w8
  424e54:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  424e58:	add	x1, x1, #0x57e
  424e5c:	ldr	x2, [sp]
  424e60:	mov	w3, #0x6e8                 	// #1768
  424e64:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  424e68:	add	x4, x4, #0x567
  424e6c:	bl	4039d0 <log_assert_failed_realm@plt>
  424e70:	ldr	x8, [sp, #16]
  424e74:	cbnz	x8, 424eb8 <ascii_strlower_n@plt+0x20a58>
  424e78:	ldr	x8, [sp, #24]
  424e7c:	ldr	x8, [x8]
  424e80:	ldr	x9, [sp, #8]
  424e84:	str	x8, [x9, #8]
  424e88:	cbz	x8, 424e9c <ascii_strlower_n@plt+0x20a3c>
  424e8c:	ldr	x8, [sp, #8]
  424e90:	ldr	x9, [sp, #8]
  424e94:	ldr	x9, [x9, #8]
  424e98:	str	x8, [x9, #16]
  424e9c:	ldr	x8, [sp, #8]
  424ea0:	mov	x9, xzr
  424ea4:	str	x9, [x8, #16]
  424ea8:	ldr	x8, [sp, #8]
  424eac:	ldr	x9, [sp, #24]
  424eb0:	str	x8, [x9]
  424eb4:	b	424ef4 <ascii_strlower_n@plt+0x20a94>
  424eb8:	ldr	x8, [sp, #16]
  424ebc:	ldr	x8, [x8, #8]
  424ec0:	ldr	x9, [sp, #8]
  424ec4:	str	x8, [x9, #8]
  424ec8:	cbz	x8, 424edc <ascii_strlower_n@plt+0x20a7c>
  424ecc:	ldr	x8, [sp, #8]
  424ed0:	ldr	x9, [sp, #8]
  424ed4:	ldr	x9, [x9, #8]
  424ed8:	str	x8, [x9, #16]
  424edc:	ldr	x8, [sp, #16]
  424ee0:	ldr	x9, [sp, #8]
  424ee4:	str	x8, [x9, #16]
  424ee8:	ldr	x8, [sp, #8]
  424eec:	ldr	x9, [sp, #16]
  424ef0:	str	x8, [x9, #8]
  424ef4:	ldr	x8, [sp, #32]
  424ef8:	str	x8, [sp, #40]
  424efc:	ldur	x8, [x29, #-24]
  424f00:	ldr	x8, [x8, #8]
  424f04:	stur	x8, [x29, #-24]
  424f08:	b	424dc8 <ascii_strlower_n@plt+0x20968>
  424f0c:	ldur	x8, [x29, #-32]
  424f10:	stur	x8, [x29, #-8]
  424f14:	ldur	x0, [x29, #-8]
  424f18:	ldp	x29, x30, [sp, #80]
  424f1c:	add	sp, sp, #0x60
  424f20:	ret
  424f24:	sub	sp, sp, #0x60
  424f28:	stp	x29, x30, [sp, #80]
  424f2c:	add	x29, sp, #0x50
  424f30:	adrp	x8, 431000 <ascii_strlower_n@plt+0x2cba0>
  424f34:	add	x8, x8, #0xac0
  424f38:	add	x2, x8, #0x3
  424f3c:	stur	x0, [x29, #-16]
  424f40:	stur	w1, [x29, #-20]
  424f44:	str	x2, [sp, #16]
  424f48:	ldur	x8, [x29, #-16]
  424f4c:	cmp	x8, #0x0
  424f50:	cset	w9, ne  // ne = any
  424f54:	mov	w10, #0x1                   	// #1
  424f58:	eor	w9, w9, #0x1
  424f5c:	eor	w9, w9, w10
  424f60:	eor	w9, w9, w10
  424f64:	and	w9, w9, #0x1
  424f68:	mov	w0, w9
  424f6c:	sxtw	x8, w0
  424f70:	cbz	x8, 424f98 <ascii_strlower_n@plt+0x20b38>
  424f74:	mov	w8, wzr
  424f78:	mov	w0, w8
  424f7c:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  424f80:	add	x1, x1, #0x20f
  424f84:	ldr	x2, [sp, #16]
  424f88:	mov	w3, #0x6a0                 	// #1696
  424f8c:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  424f90:	add	x4, x4, #0x525
  424f94:	bl	4039d0 <log_assert_failed_realm@plt>
  424f98:	ldur	x8, [x29, #-16]
  424f9c:	ldr	x8, [x8]
  424fa0:	stur	x8, [x29, #-32]
  424fa4:	ldur	x8, [x29, #-32]
  424fa8:	ldr	x8, [x8, #8]
  424fac:	ldrh	w9, [x8, #6]
  424fb0:	cmp	w9, #0x29
  424fb4:	b.ne	424fc4 <ascii_strlower_n@plt+0x20b64>  // b.any
  424fb8:	mov	w8, #0xffffffea            	// #-22
  424fbc:	stur	w8, [x29, #-4]
  424fc0:	b	42509c <ascii_strlower_n@plt+0x20c3c>
  424fc4:	ldur	x8, [x29, #-32]
  424fc8:	ldr	w9, [x8, #24]
  424fcc:	str	w9, [sp, #32]
  424fd0:	ldur	w9, [x29, #-20]
  424fd4:	str	w9, [sp, #28]
  424fd8:	ldr	w9, [sp, #32]
  424fdc:	ldr	w10, [sp, #28]
  424fe0:	cmp	w9, w10
  424fe4:	b.cs	424ff4 <ascii_strlower_n@plt+0x20b94>  // b.hs, b.nlast
  424fe8:	ldr	w8, [sp, #32]
  424fec:	str	w8, [sp, #12]
  424ff0:	b	424ffc <ascii_strlower_n@plt+0x20b9c>
  424ff4:	ldr	w8, [sp, #28]
  424ff8:	str	w8, [sp, #12]
  424ffc:	ldr	w8, [sp, #12]
  425000:	str	w8, [sp, #24]
  425004:	ldr	w8, [sp, #24]
  425008:	str	w8, [sp, #36]
  42500c:	ldr	w8, [sp, #36]
  425010:	ldur	x9, [x29, #-32]
  425014:	ldr	w10, [x9, #24]
  425018:	cmp	w8, w10
  42501c:	b.ne	425028 <ascii_strlower_n@plt+0x20bc8>  // b.any
  425020:	stur	wzr, [x29, #-4]
  425024:	b	42509c <ascii_strlower_n@plt+0x20c3c>
  425028:	ldur	x8, [x29, #-32]
  42502c:	ldr	w9, [x8]
  425030:	cmp	w9, #0x1
  425034:	b.ne	425050 <ascii_strlower_n@plt+0x20bf0>  // b.any
  425038:	ldr	w8, [sp, #36]
  42503c:	ldur	x9, [x29, #-32]
  425040:	str	w8, [x9, #24]
  425044:	mov	w8, #0x1                   	// #1
  425048:	stur	w8, [x29, #-4]
  42504c:	b	42509c <ascii_strlower_n@plt+0x20c3c>
  425050:	ldur	x0, [x29, #-32]
  425054:	bl	4242f8 <ascii_strlower_n@plt+0x1fe98>
  425058:	str	x0, [sp, #40]
  42505c:	ldr	x8, [sp, #40]
  425060:	cbnz	x8, 425070 <ascii_strlower_n@plt+0x20c10>
  425064:	mov	w8, #0xfffffff4            	// #-12
  425068:	stur	w8, [x29, #-4]
  42506c:	b	42509c <ascii_strlower_n@plt+0x20c3c>
  425070:	ldr	w8, [sp, #36]
  425074:	ldr	x9, [sp, #40]
  425078:	str	w8, [x9, #24]
  42507c:	ldur	x9, [x29, #-16]
  425080:	ldr	x0, [x9]
  425084:	bl	41fed8 <ascii_strlower_n@plt+0x1ba78>
  425088:	ldr	x9, [sp, #40]
  42508c:	ldur	x10, [x29, #-16]
  425090:	str	x9, [x10]
  425094:	mov	w8, #0x1                   	// #1
  425098:	stur	w8, [x29, #-4]
  42509c:	ldur	w0, [x29, #-4]
  4250a0:	ldp	x29, x30, [sp, #80]
  4250a4:	add	sp, sp, #0x60
  4250a8:	ret
  4250ac:	sub	sp, sp, #0x30
  4250b0:	stp	x29, x30, [sp, #32]
  4250b4:	add	x29, sp, #0x20
  4250b8:	str	x0, [sp, #16]
  4250bc:	ldr	x8, [sp, #16]
  4250c0:	cbnz	x8, 4250d0 <ascii_strlower_n@plt+0x20c70>
  4250c4:	mov	x8, xzr
  4250c8:	stur	x8, [x29, #-8]
  4250cc:	b	4250f0 <ascii_strlower_n@plt+0x20c90>
  4250d0:	ldr	x8, [sp, #16]
  4250d4:	ldr	x8, [x8, #8]
  4250d8:	str	x8, [sp, #8]
  4250dc:	ldr	x0, [sp, #16]
  4250e0:	bl	403ac0 <free@plt>
  4250e4:	ldr	x0, [sp, #8]
  4250e8:	bl	4250ac <ascii_strlower_n@plt+0x20c4c>
  4250ec:	stur	x0, [x29, #-8]
  4250f0:	ldur	x0, [x29, #-8]
  4250f4:	ldp	x29, x30, [sp, #32]
  4250f8:	add	sp, sp, #0x30
  4250fc:	ret
  425100:	sub	sp, sp, #0x30
  425104:	stp	x29, x30, [sp, #32]
  425108:	add	x29, sp, #0x20
  42510c:	mov	x8, #0x1                   	// #1
  425110:	mov	x1, #0x19                  	// #25
  425114:	str	x0, [sp, #16]
  425118:	mov	x0, x8
  42511c:	bl	4040d0 <calloc@plt>
  425120:	str	x0, [sp, #8]
  425124:	ldr	x8, [sp, #8]
  425128:	cbnz	x8, 425138 <ascii_strlower_n@plt+0x20cd8>
  42512c:	mov	w8, #0xfffffff4            	// #-12
  425130:	stur	w8, [x29, #-4]
  425134:	b	425148 <ascii_strlower_n@plt+0x20ce8>
  425138:	ldr	x8, [sp, #8]
  42513c:	ldr	x9, [sp, #16]
  425140:	str	x8, [x9]
  425144:	stur	wzr, [x29, #-4]
  425148:	ldur	w0, [x29, #-4]
  42514c:	ldp	x29, x30, [sp, #32]
  425150:	add	sp, sp, #0x30
  425154:	ret
  425158:	sub	sp, sp, #0x30
  42515c:	stp	x29, x30, [sp, #32]
  425160:	add	x29, sp, #0x20
  425164:	str	x0, [sp, #16]
  425168:	str	wzr, [sp, #12]
  42516c:	ldr	x8, [sp, #16]
  425170:	cbnz	x8, 425180 <ascii_strlower_n@plt+0x20d20>
  425174:	mov	w8, #0xffffffff            	// #-1
  425178:	stur	w8, [x29, #-4]
  42517c:	b	4251ec <ascii_strlower_n@plt+0x20d8c>
  425180:	ldr	x2, [sp, #16]
  425184:	adrp	x0, 44e000 <ascii_strlower_n@plt+0x49ba0>
  425188:	add	x0, x0, #0x450
  42518c:	mov	x1, #0xff                  	// #255
  425190:	bl	404220 <string_table_lookup@plt>
  425194:	str	w0, [sp, #8]
  425198:	ldr	w8, [sp, #8]
  42519c:	cmp	w8, #0x0
  4251a0:	cset	w8, lt  // lt = tstop
  4251a4:	tbnz	w8, #0, 4251b4 <ascii_strlower_n@plt+0x20d54>
  4251a8:	ldr	w8, [sp, #8]
  4251ac:	stur	w8, [x29, #-4]
  4251b0:	b	4251ec <ascii_strlower_n@plt+0x20d8c>
  4251b4:	ldr	x0, [sp, #16]
  4251b8:	add	x1, sp, #0xc
  4251bc:	bl	4251fc <ascii_strlower_n@plt+0x20d9c>
  4251c0:	cmp	w0, #0x0
  4251c4:	cset	w8, lt  // lt = tstop
  4251c8:	tbnz	w8, #0, 4251e4 <ascii_strlower_n@plt+0x20d84>
  4251cc:	ldr	w8, [sp, #12]
  4251d0:	cmp	w8, #0xff
  4251d4:	b.hi	4251e4 <ascii_strlower_n@plt+0x20d84>  // b.pmore
  4251d8:	ldr	w8, [sp, #12]
  4251dc:	stur	w8, [x29, #-4]
  4251e0:	b	4251ec <ascii_strlower_n@plt+0x20d8c>
  4251e4:	mov	w8, #0xffffffff            	// #-1
  4251e8:	stur	w8, [x29, #-4]
  4251ec:	ldur	w0, [x29, #-4]
  4251f0:	ldp	x29, x30, [sp, #32]
  4251f4:	add	sp, sp, #0x30
  4251f8:	ret
  4251fc:	sub	sp, sp, #0x20
  425200:	stp	x29, x30, [sp, #16]
  425204:	add	x29, sp, #0x10
  425208:	mov	w8, wzr
  42520c:	str	x0, [sp, #8]
  425210:	str	x1, [sp]
  425214:	ldr	x0, [sp, #8]
  425218:	ldr	x2, [sp]
  42521c:	mov	w1, w8
  425220:	bl	4043f0 <safe_atou_full@plt>
  425224:	ldp	x29, x30, [sp, #16]
  425228:	add	sp, sp, #0x20
  42522c:	ret
  425230:	sub	sp, sp, #0x30
  425234:	stp	x29, x30, [sp, #32]
  425238:	add	x29, sp, #0x20
  42523c:	stur	w0, [x29, #-8]
  425240:	str	x1, [sp, #16]
  425244:	ldur	w8, [x29, #-8]
  425248:	cmp	w8, #0x0
  42524c:	cset	w8, lt  // lt = tstop
  425250:	tbnz	w8, #0, 425260 <ascii_strlower_n@plt+0x20e00>
  425254:	ldur	w8, [x29, #-8]
  425258:	cmp	w8, #0xff
  42525c:	b.le	42526c <ascii_strlower_n@plt+0x20e0c>
  425260:	mov	w8, #0xffffffde            	// #-34
  425264:	stur	w8, [x29, #-4]
  425268:	b	4252f0 <ascii_strlower_n@plt+0x20e90>
  42526c:	ldur	w8, [x29, #-8]
  425270:	cmp	w8, #0x5
  425274:	b.ge	4252b4 <ascii_strlower_n@plt+0x20e54>  // b.tcont
  425278:	ldursw	x8, [x29, #-8]
  42527c:	mov	x9, #0x8                   	// #8
  425280:	mul	x8, x9, x8
  425284:	adrp	x9, 44e000 <ascii_strlower_n@plt+0x49ba0>
  425288:	add	x9, x9, #0xc48
  42528c:	add	x8, x9, x8
  425290:	ldr	x0, [x8]
  425294:	bl	403b20 <strdup@plt>
  425298:	str	x0, [sp, #8]
  42529c:	ldr	x8, [sp, #8]
  4252a0:	cbnz	x8, 4252b0 <ascii_strlower_n@plt+0x20e50>
  4252a4:	mov	w8, #0xfffffff4            	// #-12
  4252a8:	stur	w8, [x29, #-4]
  4252ac:	b	4252f0 <ascii_strlower_n@plt+0x20e90>
  4252b0:	b	4252e0 <ascii_strlower_n@plt+0x20e80>
  4252b4:	ldur	w2, [x29, #-8]
  4252b8:	add	x0, sp, #0x8
  4252bc:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  4252c0:	add	x1, x1, #0x188
  4252c4:	bl	403d70 <asprintf@plt>
  4252c8:	cmp	w0, #0x0
  4252cc:	cset	w8, ge  // ge = tcont
  4252d0:	tbnz	w8, #0, 4252e0 <ascii_strlower_n@plt+0x20e80>
  4252d4:	mov	w8, #0xfffffff4            	// #-12
  4252d8:	stur	w8, [x29, #-4]
  4252dc:	b	4252f0 <ascii_strlower_n@plt+0x20e90>
  4252e0:	ldr	x8, [sp, #8]
  4252e4:	ldr	x9, [sp, #16]
  4252e8:	str	x8, [x9]
  4252ec:	stur	wzr, [x29, #-4]
  4252f0:	ldur	w0, [x29, #-4]
  4252f4:	ldp	x29, x30, [sp, #32]
  4252f8:	add	sp, sp, #0x30
  4252fc:	ret
  425300:	sub	sp, sp, #0x30
  425304:	stp	x29, x30, [sp, #32]
  425308:	add	x29, sp, #0x20
  42530c:	str	x0, [sp, #16]
  425310:	str	wzr, [sp, #12]
  425314:	ldr	x8, [sp, #16]
  425318:	cbnz	x8, 425328 <ascii_strlower_n@plt+0x20ec8>
  42531c:	mov	w8, #0xffffffff            	// #-1
  425320:	stur	w8, [x29, #-4]
  425324:	b	425394 <ascii_strlower_n@plt+0x20f34>
  425328:	ldr	x2, [sp, #16]
  42532c:	adrp	x0, 44e000 <ascii_strlower_n@plt+0x49ba0>
  425330:	add	x0, x0, #0xc48
  425334:	mov	x1, #0x5                   	// #5
  425338:	bl	404220 <string_table_lookup@plt>
  42533c:	str	w0, [sp, #8]
  425340:	ldr	w8, [sp, #8]
  425344:	cmp	w8, #0x0
  425348:	cset	w8, lt  // lt = tstop
  42534c:	tbnz	w8, #0, 42535c <ascii_strlower_n@plt+0x20efc>
  425350:	ldr	w8, [sp, #8]
  425354:	stur	w8, [x29, #-4]
  425358:	b	425394 <ascii_strlower_n@plt+0x20f34>
  42535c:	ldr	x0, [sp, #16]
  425360:	add	x1, sp, #0xc
  425364:	bl	4251fc <ascii_strlower_n@plt+0x20d9c>
  425368:	cmp	w0, #0x0
  42536c:	cset	w8, lt  // lt = tstop
  425370:	tbnz	w8, #0, 42538c <ascii_strlower_n@plt+0x20f2c>
  425374:	ldr	w8, [sp, #12]
  425378:	cmp	w8, #0xff
  42537c:	b.hi	42538c <ascii_strlower_n@plt+0x20f2c>  // b.pmore
  425380:	ldr	w8, [sp, #12]
  425384:	stur	w8, [x29, #-4]
  425388:	b	425394 <ascii_strlower_n@plt+0x20f34>
  42538c:	mov	w8, #0xffffffff            	// #-1
  425390:	stur	w8, [x29, #-4]
  425394:	ldur	w0, [x29, #-4]
  425398:	ldp	x29, x30, [sp, #32]
  42539c:	add	sp, sp, #0x30
  4253a0:	ret
  4253a4:	sub	sp, sp, #0x40
  4253a8:	stp	x29, x30, [sp, #48]
  4253ac:	add	x29, sp, #0x30
  4253b0:	stur	x0, [x29, #-16]
  4253b4:	str	x1, [sp, #24]
  4253b8:	ldur	x0, [x29, #-16]
  4253bc:	ldr	x1, [sp, #24]
  4253c0:	bl	425420 <ascii_strlower_n@plt+0x20fc0>
  4253c4:	tbnz	w0, #0, 4253cc <ascii_strlower_n@plt+0x20f6c>
  4253c8:	b	4253d8 <ascii_strlower_n@plt+0x20f78>
  4253cc:	mov	x8, xzr
  4253d0:	stur	x8, [x29, #-8]
  4253d4:	b	425410 <ascii_strlower_n@plt+0x20fb0>
  4253d8:	ldur	x8, [x29, #-16]
  4253dc:	ldr	x9, [sp, #24]
  4253e0:	mul	x8, x8, x9
  4253e4:	str	x8, [sp, #16]
  4253e8:	cbz	x8, 4253f8 <ascii_strlower_n@plt+0x20f98>
  4253ec:	ldr	x8, [sp, #16]
  4253f0:	str	x8, [sp, #8]
  4253f4:	b	425400 <ascii_strlower_n@plt+0x20fa0>
  4253f8:	mov	x8, #0x1                   	// #1
  4253fc:	str	x8, [sp, #8]
  425400:	ldr	x8, [sp, #8]
  425404:	mov	x0, x8
  425408:	bl	404110 <malloc@plt>
  42540c:	stur	x0, [x29, #-8]
  425410:	ldur	x0, [x29, #-8]
  425414:	ldp	x29, x30, [sp, #48]
  425418:	add	sp, sp, #0x40
  42541c:	ret
  425420:	sub	sp, sp, #0x20
  425424:	str	x0, [sp, #24]
  425428:	str	x1, [sp, #16]
  42542c:	ldr	x8, [sp, #16]
  425430:	mov	w9, #0x0                   	// #0
  425434:	str	w9, [sp, #12]
  425438:	cbz	x8, 425458 <ascii_strlower_n@plt+0x20ff8>
  42543c:	ldr	x8, [sp, #24]
  425440:	ldr	x9, [sp, #16]
  425444:	mov	x10, #0xffffffffffffffff    	// #-1
  425448:	udiv	x9, x10, x9
  42544c:	cmp	x8, x9
  425450:	cset	w11, hi  // hi = pmore
  425454:	str	w11, [sp, #12]
  425458:	ldr	w8, [sp, #12]
  42545c:	mov	w9, #0x1                   	// #1
  425460:	eor	w8, w8, #0x1
  425464:	eor	w8, w8, w9
  425468:	and	w8, w8, #0x1
  42546c:	mov	w0, w8
  425470:	sxtw	x10, w0
  425474:	cmp	x10, #0x0
  425478:	cset	w8, ne  // ne = any
  42547c:	and	w0, w8, #0x1
  425480:	add	sp, sp, #0x20
  425484:	ret
  425488:	sub	sp, sp, #0x20
  42548c:	stp	x29, x30, [sp, #16]
  425490:	add	x29, sp, #0x10
  425494:	str	x0, [sp, #8]
  425498:	ldr	x8, [sp, #8]
  42549c:	ldr	x8, [x8]
  4254a0:	cbz	x8, 4254b0 <ascii_strlower_n@plt+0x21050>
  4254a4:	ldr	x8, [sp, #8]
  4254a8:	ldr	x0, [x8]
  4254ac:	bl	403bf0 <strv_free@plt>
  4254b0:	ldp	x29, x30, [sp, #16]
  4254b4:	add	sp, sp, #0x20
  4254b8:	ret
  4254bc:	sub	sp, sp, #0x20
  4254c0:	stp	x29, x30, [sp, #16]
  4254c4:	add	x29, sp, #0x10
  4254c8:	mov	x8, xzr
  4254cc:	str	x0, [sp, #8]
  4254d0:	str	x1, [sp]
  4254d4:	ldr	x0, [sp, #8]
  4254d8:	ldr	x1, [sp]
  4254dc:	mov	x2, x8
  4254e0:	bl	404400 <strv_join_prefix@plt>
  4254e4:	ldp	x29, x30, [sp, #16]
  4254e8:	add	sp, sp, #0x20
  4254ec:	ret
  4254f0:	sub	sp, sp, #0x30
  4254f4:	stp	x29, x30, [sp, #32]
  4254f8:	add	x29, sp, #0x20
  4254fc:	mov	x8, #0x10                  	// #16
  425500:	mov	x9, #0x1                   	// #1
  425504:	str	x0, [sp, #16]
  425508:	ldr	x10, [sp, #16]
  42550c:	mul	x8, x8, x10
  425510:	add	x1, x8, #0x18
  425514:	mov	x0, x9
  425518:	bl	4040d0 <calloc@plt>
  42551c:	str	x0, [sp, #8]
  425520:	ldr	x8, [sp, #8]
  425524:	cbnz	x8, 425534 <ascii_strlower_n@plt+0x210d4>
  425528:	mov	x8, xzr
  42552c:	stur	x8, [x29, #-8]
  425530:	b	425554 <ascii_strlower_n@plt+0x210f4>
  425534:	ldr	x8, [sp, #8]
  425538:	mov	w9, #0x1                   	// #1
  42553c:	str	w9, [x8]
  425540:	ldr	x8, [sp, #16]
  425544:	ldr	x10, [sp, #8]
  425548:	str	x8, [x10, #16]
  42554c:	ldr	x8, [sp, #8]
  425550:	stur	x8, [x29, #-8]
  425554:	ldur	x0, [x29, #-8]
  425558:	ldp	x29, x30, [sp, #32]
  42555c:	add	sp, sp, #0x30
  425560:	ret
  425564:	sub	sp, sp, #0x30
  425568:	stp	x29, x30, [sp, #32]
  42556c:	add	x29, sp, #0x20
  425570:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  425574:	add	x8, x8, #0x7c4
  425578:	add	x2, x8, #0x3
  42557c:	str	x0, [sp, #16]
  425580:	ldr	x8, [sp, #16]
  425584:	str	x2, [sp, #8]
  425588:	cbnz	x8, 425598 <ascii_strlower_n@plt+0x21138>
  42558c:	mov	x8, xzr
  425590:	stur	x8, [x29, #-8]
  425594:	b	425604 <ascii_strlower_n@plt+0x211a4>
  425598:	ldr	x8, [sp, #16]
  42559c:	ldr	w9, [x8]
  4255a0:	cmp	w9, #0x0
  4255a4:	cset	w9, hi  // hi = pmore
  4255a8:	mov	w10, #0x1                   	// #1
  4255ac:	eor	w9, w9, #0x1
  4255b0:	eor	w9, w9, w10
  4255b4:	eor	w9, w9, w10
  4255b8:	and	w9, w9, #0x1
  4255bc:	mov	w0, w9
  4255c0:	sxtw	x8, w0
  4255c4:	cbz	x8, 4255ec <ascii_strlower_n@plt+0x2118c>
  4255c8:	mov	w8, wzr
  4255cc:	mov	w0, w8
  4255d0:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  4255d4:	add	x1, x1, #0xd0a
  4255d8:	ldr	x2, [sp, #8]
  4255dc:	mov	w3, #0x2b                  	// #43
  4255e0:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4255e4:	add	x4, x4, #0x7e9
  4255e8:	bl	4039d0 <log_assert_failed_realm@plt>
  4255ec:	ldr	x8, [sp, #16]
  4255f0:	ldr	w9, [x8]
  4255f4:	add	w9, w9, #0x1
  4255f8:	str	w9, [x8]
  4255fc:	ldr	x8, [sp, #16]
  425600:	stur	x8, [x29, #-8]
  425604:	ldur	x0, [x29, #-8]
  425608:	ldp	x29, x30, [sp, #32]
  42560c:	add	sp, sp, #0x30
  425610:	ret
  425614:	sub	sp, sp, #0x30
  425618:	stp	x29, x30, [sp, #32]
  42561c:	add	x29, sp, #0x20
  425620:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  425624:	add	x8, x8, #0x7c4
  425628:	add	x2, x8, #0x3
  42562c:	str	x0, [sp, #16]
  425630:	ldr	x8, [sp, #16]
  425634:	str	x2, [sp, #8]
  425638:	cbnz	x8, 425648 <ascii_strlower_n@plt+0x211e8>
  42563c:	mov	x8, xzr
  425640:	stur	x8, [x29, #-8]
  425644:	b	4256d8 <ascii_strlower_n@plt+0x21278>
  425648:	ldr	x8, [sp, #16]
  42564c:	ldr	w9, [x8]
  425650:	cmp	w9, #0x0
  425654:	cset	w9, hi  // hi = pmore
  425658:	mov	w10, #0x1                   	// #1
  42565c:	eor	w9, w9, #0x1
  425660:	eor	w9, w9, w10
  425664:	eor	w9, w9, w10
  425668:	and	w9, w9, #0x1
  42566c:	mov	w0, w9
  425670:	sxtw	x8, w0
  425674:	cbz	x8, 42569c <ascii_strlower_n@plt+0x2123c>
  425678:	mov	w8, wzr
  42567c:	mov	w0, w8
  425680:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  425684:	add	x1, x1, #0xd0a
  425688:	ldr	x2, [sp, #8]
  42568c:	mov	w3, #0x2b                  	// #43
  425690:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  425694:	add	x4, x4, #0x810
  425698:	bl	4039d0 <log_assert_failed_realm@plt>
  42569c:	ldr	x8, [sp, #16]
  4256a0:	ldr	w9, [x8]
  4256a4:	subs	w9, w9, #0x1
  4256a8:	str	w9, [x8]
  4256ac:	ldr	x8, [sp, #16]
  4256b0:	ldr	w9, [x8]
  4256b4:	cmp	w9, #0x0
  4256b8:	cset	w9, ls  // ls = plast
  4256bc:	tbnz	w9, #0, 4256cc <ascii_strlower_n@plt+0x2126c>
  4256c0:	mov	x8, xzr
  4256c4:	stur	x8, [x29, #-8]
  4256c8:	b	4256d8 <ascii_strlower_n@plt+0x21278>
  4256cc:	ldr	x0, [sp, #16]
  4256d0:	bl	4256e8 <ascii_strlower_n@plt+0x21288>
  4256d4:	stur	x0, [x29, #-8]
  4256d8:	ldur	x0, [x29, #-8]
  4256dc:	ldp	x29, x30, [sp, #32]
  4256e0:	add	sp, sp, #0x30
  4256e4:	ret
  4256e8:	sub	sp, sp, #0x20
  4256ec:	stp	x29, x30, [sp, #16]
  4256f0:	add	x29, sp, #0x10
  4256f4:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  4256f8:	add	x8, x8, #0x7c4
  4256fc:	add	x2, x8, #0x3
  425700:	str	x0, [sp, #8]
  425704:	str	x2, [sp]
  425708:	ldr	x8, [sp, #8]
  42570c:	cmp	x8, #0x0
  425710:	cset	w9, ne  // ne = any
  425714:	mov	w10, #0x1                   	// #1
  425718:	eor	w9, w9, #0x1
  42571c:	eor	w9, w9, w10
  425720:	eor	w9, w9, w10
  425724:	and	w9, w9, #0x1
  425728:	mov	w0, w9
  42572c:	sxtw	x8, w0
  425730:	cbz	x8, 425758 <ascii_strlower_n@plt+0x212f8>
  425734:	mov	w8, wzr
  425738:	mov	w0, w8
  42573c:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  425740:	add	x1, x1, #0xeb8
  425744:	ldr	x2, [sp]
  425748:	mov	w3, #0x25                  	// #37
  42574c:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  425750:	add	x4, x4, #0xd47
  425754:	bl	4039d0 <log_assert_failed_realm@plt>
  425758:	ldr	x0, [sp, #8]
  42575c:	bl	429054 <ascii_strlower_n@plt+0x24bf4>
  425760:	ldr	x0, [sp, #8]
  425764:	bl	429160 <ascii_strlower_n@plt+0x24d00>
  425768:	ldp	x29, x30, [sp, #16]
  42576c:	add	sp, sp, #0x20
  425770:	ret
  425774:	sub	sp, sp, #0x50
  425778:	stp	x29, x30, [sp, #64]
  42577c:	add	x29, sp, #0x40
  425780:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  425784:	add	x8, x8, #0x7c4
  425788:	add	x8, x8, #0x3
  42578c:	stur	x0, [x29, #-16]
  425790:	stur	x1, [x29, #-24]
  425794:	stur	w2, [x29, #-28]
  425798:	str	w3, [sp, #32]
  42579c:	str	x8, [sp, #8]
  4257a0:	ldur	x8, [x29, #-24]
  4257a4:	cmp	x8, #0x0
  4257a8:	cset	w9, ne  // ne = any
  4257ac:	mov	w10, #0x1                   	// #1
  4257b0:	eor	w9, w9, #0x1
  4257b4:	eor	w9, w9, w10
  4257b8:	eor	w9, w9, w10
  4257bc:	and	w9, w9, #0x1
  4257c0:	mov	w0, w9
  4257c4:	sxtw	x8, w0
  4257c8:	cbz	x8, 4257f0 <ascii_strlower_n@plt+0x21390>
  4257cc:	mov	w8, wzr
  4257d0:	mov	w0, w8
  4257d4:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  4257d8:	add	x1, x1, #0x20f
  4257dc:	ldr	x2, [sp, #8]
  4257e0:	mov	w3, #0x51                  	// #81
  4257e4:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4257e8:	add	x4, x4, #0x839
  4257ec:	bl	4039d0 <log_assert_failed_realm@plt>
  4257f0:	ldur	x8, [x29, #-16]
  4257f4:	cbnz	x8, 425804 <ascii_strlower_n@plt+0x213a4>
  4257f8:	mov	w8, #0xffffffe4            	// #-28
  4257fc:	stur	w8, [x29, #-4]
  425800:	b	425a38 <ascii_strlower_n@plt+0x215d8>
  425804:	ldur	x8, [x29, #-16]
  425808:	ldr	w9, [x8]
  42580c:	cmp	w9, #0x1
  425810:	b.ls	425820 <ascii_strlower_n@plt+0x213c0>  // b.plast
  425814:	mov	w8, #0xfffffff0            	// #-16
  425818:	stur	w8, [x29, #-4]
  42581c:	b	425a38 <ascii_strlower_n@plt+0x215d8>
  425820:	str	xzr, [sp, #24]
  425824:	ldr	x8, [sp, #24]
  425828:	ldur	x9, [x29, #-16]
  42582c:	ldr	x9, [x9, #8]
  425830:	cmp	x8, x9
  425834:	b.cs	425a20 <ascii_strlower_n@plt+0x215c0>  // b.hs, b.nlast
  425838:	ldur	x8, [x29, #-16]
  42583c:	add	x8, x8, #0x18
  425840:	ldr	x9, [sp, #24]
  425844:	mov	x10, #0x10                  	// #16
  425848:	mul	x9, x10, x9
  42584c:	add	x8, x8, x9
  425850:	ldr	w11, [x8, #8]
  425854:	ldur	w12, [x29, #-28]
  425858:	cmp	w11, w12
  42585c:	b.eq	425864 <ascii_strlower_n@plt+0x21404>  // b.none
  425860:	b	425a10 <ascii_strlower_n@plt+0x215b0>
  425864:	ldur	x8, [x29, #-16]
  425868:	add	x8, x8, #0x18
  42586c:	ldr	x9, [sp, #24]
  425870:	mov	x10, #0x10                  	// #16
  425874:	mul	x9, x10, x9
  425878:	add	x8, x8, x9
  42587c:	ldr	x8, [x8]
  425880:	ldr	x0, [x8, #8]
  425884:	ldur	x8, [x29, #-24]
  425888:	ldr	x1, [x8, #8]
  42588c:	bl	41efe0 <ascii_strlower_n@plt+0x1ab80>
  425890:	str	w0, [sp, #20]
  425894:	ldr	w11, [sp, #20]
  425898:	cmp	w11, #0x0
  42589c:	cset	w11, ge  // ge = tcont
  4258a0:	tbnz	w11, #0, 4258b0 <ascii_strlower_n@plt+0x21450>
  4258a4:	ldr	w8, [sp, #20]
  4258a8:	stur	w8, [x29, #-4]
  4258ac:	b	425a38 <ascii_strlower_n@plt+0x215d8>
  4258b0:	ldr	w8, [sp, #20]
  4258b4:	cbnz	w8, 4258bc <ascii_strlower_n@plt+0x2145c>
  4258b8:	b	425a10 <ascii_strlower_n@plt+0x215b0>
  4258bc:	ldur	x8, [x29, #-24]
  4258c0:	ldr	w9, [x8, #24]
  4258c4:	cmp	w9, #0x0
  4258c8:	cset	w9, eq  // eq = none
  4258cc:	and	w9, w9, #0x1
  4258d0:	ldur	x8, [x29, #-16]
  4258d4:	add	x8, x8, #0x18
  4258d8:	ldr	x10, [sp, #24]
  4258dc:	mov	x11, #0x10                  	// #16
  4258e0:	mul	x10, x11, x10
  4258e4:	add	x8, x8, x10
  4258e8:	ldr	x8, [x8]
  4258ec:	ldr	w12, [x8, #24]
  4258f0:	cmp	w12, #0x0
  4258f4:	cset	w12, eq  // eq = none
  4258f8:	and	w12, w12, #0x1
  4258fc:	cmp	w9, w12
  425900:	b.eq	425910 <ascii_strlower_n@plt+0x214b0>  // b.none
  425904:	mov	w8, #0xffffffea            	// #-22
  425908:	stur	w8, [x29, #-4]
  42590c:	b	425a38 <ascii_strlower_n@plt+0x215d8>
  425910:	ldur	x8, [x29, #-16]
  425914:	add	x8, x8, #0x18
  425918:	ldr	x9, [sp, #24]
  42591c:	mov	x10, #0x10                  	// #16
  425920:	mul	x9, x10, x9
  425924:	add	x8, x8, x9
  425928:	ldr	x0, [x8]
  42592c:	ldur	x1, [x29, #-24]
  425930:	bl	420790 <ascii_strlower_n@plt+0x1c330>
  425934:	str	w0, [sp, #20]
  425938:	ldr	w11, [sp, #20]
  42593c:	cmp	w11, #0x0
  425940:	cset	w11, ge  // ge = tcont
  425944:	tbnz	w11, #0, 425954 <ascii_strlower_n@plt+0x214f4>
  425948:	ldr	w8, [sp, #20]
  42594c:	stur	w8, [x29, #-4]
  425950:	b	425a38 <ascii_strlower_n@plt+0x215d8>
  425954:	ldr	w8, [sp, #20]
  425958:	cbnz	w8, 425960 <ascii_strlower_n@plt+0x21500>
  42595c:	b	425a10 <ascii_strlower_n@plt+0x215b0>
  425960:	ldur	x8, [x29, #-24]
  425964:	ldr	w9, [x8, #24]
  425968:	ldur	x8, [x29, #-16]
  42596c:	add	x8, x8, #0x18
  425970:	ldr	x10, [sp, #24]
  425974:	mov	x11, #0x10                  	// #16
  425978:	mul	x10, x11, x10
  42597c:	add	x8, x8, x10
  425980:	ldr	x8, [x8]
  425984:	ldr	w12, [x8, #24]
  425988:	cmp	w9, w12
  42598c:	b.ls	4259e0 <ascii_strlower_n@plt+0x21580>  // b.plast
  425990:	ldur	x0, [x29, #-24]
  425994:	bl	41fe28 <ascii_strlower_n@plt+0x1b9c8>
  425998:	ldur	x8, [x29, #-16]
  42599c:	add	x8, x8, #0x18
  4259a0:	ldr	x9, [sp, #24]
  4259a4:	mov	x10, #0x10                  	// #16
  4259a8:	mul	x9, x10, x9
  4259ac:	add	x8, x8, x9
  4259b0:	ldr	x8, [x8]
  4259b4:	mov	x0, x8
  4259b8:	str	x10, [sp]
  4259bc:	bl	41fed8 <ascii_strlower_n@plt+0x1ba78>
  4259c0:	ldur	x8, [x29, #-24]
  4259c4:	ldur	x9, [x29, #-16]
  4259c8:	add	x9, x9, #0x18
  4259cc:	ldr	x10, [sp, #24]
  4259d0:	ldr	x11, [sp]
  4259d4:	mul	x10, x11, x10
  4259d8:	add	x9, x9, x10
  4259dc:	str	x8, [x9]
  4259e0:	ldr	w8, [sp, #32]
  4259e4:	ldur	x9, [x29, #-16]
  4259e8:	add	x9, x9, #0x18
  4259ec:	ldr	x10, [sp, #24]
  4259f0:	mov	x11, #0x10                  	// #16
  4259f4:	mul	x10, x11, x10
  4259f8:	add	x9, x9, x10
  4259fc:	ldr	w12, [x9, #12]
  425a00:	orr	w8, w12, w8
  425a04:	str	w8, [x9, #12]
  425a08:	stur	wzr, [x29, #-4]
  425a0c:	b	425a38 <ascii_strlower_n@plt+0x215d8>
  425a10:	ldr	x8, [sp, #24]
  425a14:	add	x8, x8, #0x1
  425a18:	str	x8, [sp, #24]
  425a1c:	b	425824 <ascii_strlower_n@plt+0x213c4>
  425a20:	ldur	x0, [x29, #-16]
  425a24:	ldur	x1, [x29, #-24]
  425a28:	ldur	w2, [x29, #-28]
  425a2c:	ldr	w3, [sp, #32]
  425a30:	bl	425a48 <ascii_strlower_n@plt+0x215e8>
  425a34:	stur	w0, [x29, #-4]
  425a38:	ldur	w0, [x29, #-4]
  425a3c:	ldp	x29, x30, [sp, #64]
  425a40:	add	sp, sp, #0x50
  425a44:	ret
  425a48:	sub	sp, sp, #0x60
  425a4c:	stp	x29, x30, [sp, #80]
  425a50:	add	x29, sp, #0x50
  425a54:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  425a58:	add	x8, x8, #0x7c4
  425a5c:	add	x8, x8, #0x3
  425a60:	stur	x0, [x29, #-16]
  425a64:	stur	x1, [x29, #-24]
  425a68:	stur	w2, [x29, #-28]
  425a6c:	stur	w3, [x29, #-32]
  425a70:	str	x8, [sp, #24]
  425a74:	ldur	x8, [x29, #-24]
  425a78:	cmp	x8, #0x0
  425a7c:	cset	w9, ne  // ne = any
  425a80:	mov	w10, #0x1                   	// #1
  425a84:	eor	w9, w9, #0x1
  425a88:	eor	w9, w9, w10
  425a8c:	eor	w9, w9, w10
  425a90:	and	w9, w9, #0x1
  425a94:	mov	w0, w9
  425a98:	sxtw	x8, w0
  425a9c:	cbz	x8, 425ac4 <ascii_strlower_n@plt+0x21664>
  425aa0:	mov	w8, wzr
  425aa4:	mov	w0, w8
  425aa8:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  425aac:	add	x1, x1, #0x20f
  425ab0:	ldr	x2, [sp, #24]
  425ab4:	mov	w3, #0x2e                  	// #46
  425ab8:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  425abc:	add	x4, x4, #0xd6f
  425ac0:	bl	4039d0 <log_assert_failed_realm@plt>
  425ac4:	ldur	x8, [x29, #-16]
  425ac8:	cbnz	x8, 425ad8 <ascii_strlower_n@plt+0x21678>
  425acc:	mov	w8, #0xffffffe4            	// #-28
  425ad0:	stur	w8, [x29, #-4]
  425ad4:	b	425b50 <ascii_strlower_n@plt+0x216f0>
  425ad8:	ldur	x8, [x29, #-16]
  425adc:	ldr	x8, [x8, #8]
  425ae0:	ldur	x9, [x29, #-16]
  425ae4:	ldr	x9, [x9, #16]
  425ae8:	cmp	x8, x9
  425aec:	b.cc	425afc <ascii_strlower_n@plt+0x2169c>  // b.lo, b.ul, b.last
  425af0:	mov	w8, #0xffffffe4            	// #-28
  425af4:	stur	w8, [x29, #-4]
  425af8:	b	425b50 <ascii_strlower_n@plt+0x216f0>
  425afc:	ldur	x8, [x29, #-16]
  425b00:	add	x8, x8, #0x18
  425b04:	ldur	x9, [x29, #-16]
  425b08:	ldr	x10, [x9, #8]
  425b0c:	add	x11, x10, #0x1
  425b10:	str	x11, [x9, #8]
  425b14:	ldur	x0, [x29, #-24]
  425b18:	str	x8, [sp, #16]
  425b1c:	str	x10, [sp, #8]
  425b20:	bl	41fe28 <ascii_strlower_n@plt+0x1b9c8>
  425b24:	str	x0, [sp, #32]
  425b28:	ldur	w12, [x29, #-28]
  425b2c:	str	w12, [sp, #40]
  425b30:	ldur	w12, [x29, #-32]
  425b34:	str	w12, [sp, #44]
  425b38:	ldr	q0, [sp, #32]
  425b3c:	ldr	x8, [sp, #16]
  425b40:	ldr	x9, [sp, #8]
  425b44:	str	q0, [x8, x9, lsl #4]
  425b48:	mov	w12, #0x1                   	// #1
  425b4c:	stur	w12, [x29, #-4]
  425b50:	ldur	w0, [x29, #-4]
  425b54:	ldp	x29, x30, [sp, #80]
  425b58:	add	sp, sp, #0x60
  425b5c:	ret
  425b60:	sub	sp, sp, #0x40
  425b64:	stp	x29, x30, [sp, #48]
  425b68:	add	x29, sp, #0x30
  425b6c:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  425b70:	add	x8, x8, #0x7c4
  425b74:	add	x8, x8, #0x3
  425b78:	stur	x0, [x29, #-16]
  425b7c:	str	x1, [sp, #24]
  425b80:	str	w2, [sp, #20]
  425b84:	str	w3, [sp, #16]
  425b88:	str	x8, [sp]
  425b8c:	ldur	x8, [x29, #-16]
  425b90:	cmp	x8, #0x0
  425b94:	cset	w9, ne  // ne = any
  425b98:	mov	w10, #0x1                   	// #1
  425b9c:	eor	w9, w9, #0x1
  425ba0:	eor	w9, w9, w10
  425ba4:	eor	w9, w9, w10
  425ba8:	and	w9, w9, #0x1
  425bac:	mov	w0, w9
  425bb0:	sxtw	x8, w0
  425bb4:	cbz	x8, 425bdc <ascii_strlower_n@plt+0x2177c>
  425bb8:	mov	w8, wzr
  425bbc:	mov	w0, w8
  425bc0:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  425bc4:	add	x1, x1, #0xeb8
  425bc8:	ldr	x2, [sp]
  425bcc:	mov	w3, #0x8d                  	// #141
  425bd0:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  425bd4:	add	x4, x4, #0x883
  425bd8:	bl	4039d0 <log_assert_failed_realm@plt>
  425bdc:	ldr	x8, [sp, #24]
  425be0:	cmp	x8, #0x0
  425be4:	cset	w9, ne  // ne = any
  425be8:	mov	w10, #0x1                   	// #1
  425bec:	eor	w9, w9, #0x1
  425bf0:	eor	w9, w9, w10
  425bf4:	eor	w9, w9, w10
  425bf8:	and	w9, w9, #0x1
  425bfc:	mov	w0, w9
  425c00:	sxtw	x8, w0
  425c04:	cbz	x8, 425c2c <ascii_strlower_n@plt+0x217cc>
  425c08:	mov	w8, wzr
  425c0c:	mov	w0, w8
  425c10:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  425c14:	add	x1, x1, #0x20f
  425c18:	ldr	x2, [sp]
  425c1c:	mov	w3, #0x8e                  	// #142
  425c20:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  425c24:	add	x4, x4, #0x883
  425c28:	bl	4039d0 <log_assert_failed_realm@plt>
  425c2c:	ldur	x0, [x29, #-16]
  425c30:	mov	x1, #0x1                   	// #1
  425c34:	bl	425c84 <ascii_strlower_n@plt+0x21824>
  425c38:	str	w0, [sp, #12]
  425c3c:	ldr	w8, [sp, #12]
  425c40:	cmp	w8, #0x0
  425c44:	cset	w8, ge  // ge = tcont
  425c48:	tbnz	w8, #0, 425c58 <ascii_strlower_n@plt+0x217f8>
  425c4c:	ldr	w8, [sp, #12]
  425c50:	stur	w8, [x29, #-4]
  425c54:	b	425c74 <ascii_strlower_n@plt+0x21814>
  425c58:	ldur	x8, [x29, #-16]
  425c5c:	ldr	x0, [x8]
  425c60:	ldr	x1, [sp, #24]
  425c64:	ldr	w2, [sp, #20]
  425c68:	ldr	w3, [sp, #16]
  425c6c:	bl	425774 <ascii_strlower_n@plt+0x21314>
  425c70:	stur	w0, [x29, #-4]
  425c74:	ldur	w0, [x29, #-4]
  425c78:	ldp	x29, x30, [sp, #48]
  425c7c:	add	sp, sp, #0x40
  425c80:	ret
  425c84:	sub	sp, sp, #0x50
  425c88:	stp	x29, x30, [sp, #64]
  425c8c:	add	x29, sp, #0x40
  425c90:	mov	x8, xzr
  425c94:	adrp	x9, 432000 <ascii_strlower_n@plt+0x2dba0>
  425c98:	add	x9, x9, #0x7c4
  425c9c:	add	x9, x9, #0x3
  425ca0:	stur	x0, [x29, #-16]
  425ca4:	stur	x1, [x29, #-24]
  425ca8:	str	x8, [sp, #32]
  425cac:	str	x9, [sp]
  425cb0:	ldur	x8, [x29, #-16]
  425cb4:	cmp	x8, #0x0
  425cb8:	cset	w9, ne  // ne = any
  425cbc:	mov	w10, #0x1                   	// #1
  425cc0:	eor	w9, w9, #0x1
  425cc4:	eor	w9, w9, w10
  425cc8:	eor	w9, w9, w10
  425ccc:	and	w9, w9, #0x1
  425cd0:	mov	w0, w9
  425cd4:	sxtw	x8, w0
  425cd8:	cbz	x8, 425d00 <ascii_strlower_n@plt+0x218a0>
  425cdc:	mov	w8, wzr
  425ce0:	mov	w0, w8
  425ce4:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  425ce8:	add	x1, x1, #0xeb8
  425cec:	ldr	x2, [sp]
  425cf0:	mov	w3, #0x28d                 	// #653
  425cf4:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  425cf8:	add	x4, x4, #0xc83
  425cfc:	bl	4039d0 <log_assert_failed_realm@plt>
  425d00:	ldur	x0, [x29, #-16]
  425d04:	ldur	x1, [x29, #-24]
  425d08:	bl	4288a8 <ascii_strlower_n@plt+0x24448>
  425d0c:	str	w0, [sp, #28]
  425d10:	ldr	w8, [sp, #28]
  425d14:	mov	w9, #0xfffffff0            	// #-16
  425d18:	cmp	w8, w9
  425d1c:	b.eq	425d34 <ascii_strlower_n@plt+0x218d4>  // b.none
  425d20:	ldr	w8, [sp, #28]
  425d24:	stur	w8, [x29, #-4]
  425d28:	mov	w8, #0x1                   	// #1
  425d2c:	str	w8, [sp, #24]
  425d30:	b	425e3c <ascii_strlower_n@plt+0x219dc>
  425d34:	ldur	x8, [x29, #-16]
  425d38:	ldr	x8, [x8]
  425d3c:	cmp	x8, #0x0
  425d40:	cset	w9, ne  // ne = any
  425d44:	mov	w10, #0x1                   	// #1
  425d48:	eor	w9, w9, #0x1
  425d4c:	eor	w9, w9, w10
  425d50:	eor	w9, w9, w10
  425d54:	and	w9, w9, #0x1
  425d58:	mov	w0, w9
  425d5c:	sxtw	x8, w0
  425d60:	cbz	x8, 425d88 <ascii_strlower_n@plt+0x21928>
  425d64:	mov	w8, wzr
  425d68:	mov	w0, w8
  425d6c:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  425d70:	add	x1, x1, #0xcb9
  425d74:	ldr	x2, [sp]
  425d78:	mov	w3, #0x299                 	// #665
  425d7c:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  425d80:	add	x4, x4, #0xc83
  425d84:	bl	4039d0 <log_assert_failed_realm@plt>
  425d88:	ldur	x8, [x29, #-16]
  425d8c:	ldr	x8, [x8]
  425d90:	ldr	x8, [x8, #8]
  425d94:	ldur	x9, [x29, #-24]
  425d98:	add	x8, x8, x9
  425d9c:	mov	x9, #0x2                   	// #2
  425da0:	mul	x0, x8, x9
  425da4:	bl	4254f0 <ascii_strlower_n@plt+0x21090>
  425da8:	str	x0, [sp, #32]
  425dac:	ldr	x8, [sp, #32]
  425db0:	cbnz	x8, 425dc8 <ascii_strlower_n@plt+0x21968>
  425db4:	mov	w8, #0xfffffff4            	// #-12
  425db8:	stur	w8, [x29, #-4]
  425dbc:	mov	w8, #0x1                   	// #1
  425dc0:	str	w8, [sp, #24]
  425dc4:	b	425e3c <ascii_strlower_n@plt+0x219dc>
  425dc8:	ldr	x0, [sp, #32]
  425dcc:	ldur	x8, [x29, #-16]
  425dd0:	ldr	x1, [x8]
  425dd4:	bl	426d28 <ascii_strlower_n@plt+0x228c8>
  425dd8:	str	w0, [sp, #28]
  425ddc:	ldr	w9, [sp, #28]
  425de0:	cmp	w9, #0x0
  425de4:	cset	w9, ge  // ge = tcont
  425de8:	tbnz	w9, #0, 425e00 <ascii_strlower_n@plt+0x219a0>
  425dec:	ldr	w8, [sp, #28]
  425df0:	stur	w8, [x29, #-4]
  425df4:	mov	w8, #0x1                   	// #1
  425df8:	str	w8, [sp, #24]
  425dfc:	b	425e3c <ascii_strlower_n@plt+0x219dc>
  425e00:	ldur	x8, [x29, #-16]
  425e04:	ldr	x0, [x8]
  425e08:	bl	425614 <ascii_strlower_n@plt+0x211b4>
  425e0c:	ldr	x8, [sp, #32]
  425e10:	str	x8, [sp, #16]
  425e14:	mov	x8, xzr
  425e18:	str	x8, [sp, #32]
  425e1c:	ldr	x8, [sp, #16]
  425e20:	str	x8, [sp, #8]
  425e24:	ldr	x8, [sp, #8]
  425e28:	ldur	x9, [x29, #-16]
  425e2c:	str	x8, [x9]
  425e30:	stur	wzr, [x29, #-4]
  425e34:	mov	w10, #0x1                   	// #1
  425e38:	str	w10, [sp, #24]
  425e3c:	add	x0, sp, #0x20
  425e40:	bl	426cbc <ascii_strlower_n@plt+0x2285c>
  425e44:	ldur	w0, [x29, #-4]
  425e48:	ldp	x29, x30, [sp, #64]
  425e4c:	add	sp, sp, #0x50
  425e50:	ret
  425e54:	sub	sp, sp, #0x40
  425e58:	stp	x29, x30, [sp, #48]
  425e5c:	add	x29, sp, #0x30
  425e60:	mov	x8, xzr
  425e64:	mov	w9, #0x1                   	// #1
  425e68:	stur	x0, [x29, #-16]
  425e6c:	str	x1, [sp, #24]
  425e70:	str	w2, [sp, #20]
  425e74:	str	w3, [sp, #16]
  425e78:	str	x8, [sp, #8]
  425e7c:	ldr	x2, [sp, #24]
  425e80:	mov	w0, w9
  425e84:	mov	w1, #0x6                   	// #6
  425e88:	bl	41fd78 <ascii_strlower_n@plt+0x1b918>
  425e8c:	str	x0, [sp, #8]
  425e90:	ldr	x8, [sp, #8]
  425e94:	cbnz	x8, 425eac <ascii_strlower_n@plt+0x21a4c>
  425e98:	mov	w8, #0xfffffff4            	// #-12
  425e9c:	stur	w8, [x29, #-4]
  425ea0:	mov	w8, #0x1                   	// #1
  425ea4:	str	w8, [sp, #4]
  425ea8:	b	425f7c <ascii_strlower_n@plt+0x21b1c>
  425eac:	ldr	w8, [sp, #20]
  425eb0:	ldr	x9, [sp, #8]
  425eb4:	str	w8, [x9, #24]
  425eb8:	ldr	x0, [sp, #24]
  425ebc:	bl	403b20 <strdup@plt>
  425ec0:	ldr	x9, [sp, #8]
  425ec4:	str	x0, [x9, #80]
  425ec8:	ldr	x9, [sp, #8]
  425ecc:	ldr	x9, [x9, #80]
  425ed0:	cbnz	x9, 425ee8 <ascii_strlower_n@plt+0x21a88>
  425ed4:	mov	w8, #0xfffffff4            	// #-12
  425ed8:	stur	w8, [x29, #-4]
  425edc:	mov	w8, #0x1                   	// #1
  425ee0:	str	w8, [sp, #4]
  425ee4:	b	425f7c <ascii_strlower_n@plt+0x21b1c>
  425ee8:	ldr	x1, [sp, #24]
  425eec:	adrp	x0, 432000 <ascii_strlower_n@plt+0x2dba0>
  425ef0:	add	x0, x0, #0x8d5
  425ef4:	mov	x8, xzr
  425ef8:	mov	x2, x8
  425efc:	bl	403ec0 <strjoin_real@plt>
  425f00:	ldr	x8, [sp, #8]
  425f04:	str	x0, [x8, #88]
  425f08:	ldr	x8, [sp, #8]
  425f0c:	ldr	x8, [x8, #88]
  425f10:	cbnz	x8, 425f28 <ascii_strlower_n@plt+0x21ac8>
  425f14:	mov	w8, #0xfffffff4            	// #-12
  425f18:	stur	w8, [x29, #-4]
  425f1c:	mov	w8, #0x1                   	// #1
  425f20:	str	w8, [sp, #4]
  425f24:	b	425f7c <ascii_strlower_n@plt+0x21b1c>
  425f28:	ldr	x8, [sp, #8]
  425f2c:	mov	w9, #0x1                   	// #1
  425f30:	str	w9, [x8, #96]
  425f34:	ldr	x8, [sp, #8]
  425f38:	str	w9, [x8, #100]
  425f3c:	ldr	x8, [sp, #8]
  425f40:	str	w9, [x8, #104]
  425f44:	ldr	x8, [sp, #8]
  425f48:	str	w9, [x8, #108]
  425f4c:	ldr	w10, [sp, #20]
  425f50:	ldr	x8, [sp, #8]
  425f54:	str	w10, [x8, #112]
  425f58:	ldur	x0, [x29, #-16]
  425f5c:	ldr	x1, [sp, #8]
  425f60:	ldr	w2, [sp, #16]
  425f64:	mov	w3, w9
  425f68:	str	w9, [sp]
  425f6c:	bl	425774 <ascii_strlower_n@plt+0x21314>
  425f70:	stur	w0, [x29, #-4]
  425f74:	ldr	w9, [sp]
  425f78:	str	w9, [sp, #4]
  425f7c:	add	x0, sp, #0x8
  425f80:	bl	425f94 <ascii_strlower_n@plt+0x21b34>
  425f84:	ldur	w0, [x29, #-4]
  425f88:	ldp	x29, x30, [sp, #48]
  425f8c:	add	sp, sp, #0x40
  425f90:	ret
  425f94:	sub	sp, sp, #0x20
  425f98:	stp	x29, x30, [sp, #16]
  425f9c:	add	x29, sp, #0x10
  425fa0:	str	x0, [sp, #8]
  425fa4:	ldr	x8, [sp, #8]
  425fa8:	ldr	x8, [x8]
  425fac:	cbz	x8, 425fbc <ascii_strlower_n@plt+0x21b5c>
  425fb0:	ldr	x8, [sp, #8]
  425fb4:	ldr	x0, [x8]
  425fb8:	bl	41fed8 <ascii_strlower_n@plt+0x1ba78>
  425fbc:	ldp	x29, x30, [sp, #16]
  425fc0:	add	sp, sp, #0x20
  425fc4:	ret
  425fc8:	sub	sp, sp, #0x80
  425fcc:	stp	x29, x30, [sp, #112]
  425fd0:	add	x29, sp, #0x70
  425fd4:	mov	w8, #0x0                   	// #0
  425fd8:	adrp	x9, 432000 <ascii_strlower_n@plt+0x2dba0>
  425fdc:	add	x9, x9, #0x7c4
  425fe0:	add	x9, x9, #0x3
  425fe4:	stur	x0, [x29, #-16]
  425fe8:	stur	x1, [x29, #-24]
  425fec:	stur	x2, [x29, #-32]
  425ff0:	stur	wzr, [x29, #-36]
  425ff4:	sturb	w8, [x29, #-49]
  425ff8:	str	x9, [sp, #32]
  425ffc:	ldur	x8, [x29, #-24]
  426000:	cmp	x8, #0x0
  426004:	cset	w9, ne  // ne = any
  426008:	mov	w10, #0x1                   	// #1
  42600c:	eor	w9, w9, #0x1
  426010:	eor	w9, w9, w10
  426014:	eor	w9, w9, w10
  426018:	and	w9, w9, #0x1
  42601c:	mov	w0, w9
  426020:	sxtw	x8, w0
  426024:	cbz	x8, 42604c <ascii_strlower_n@plt+0x21bec>
  426028:	mov	w8, wzr
  42602c:	mov	w0, w8
  426030:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  426034:	add	x1, x1, #0x5c2
  426038:	ldr	x2, [sp, #32]
  42603c:	mov	w3, #0xb7                  	// #183
  426040:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  426044:	add	x4, x4, #0x8db
  426048:	bl	4039d0 <log_assert_failed_realm@plt>
  42604c:	ldur	x8, [x29, #-16]
  426050:	cbz	x8, 426078 <ascii_strlower_n@plt+0x21c18>
  426054:	ldur	x8, [x29, #-16]
  426058:	ldr	x8, [x8, #8]
  42605c:	cmp	x8, #0x0
  426060:	cset	w9, ls  // ls = plast
  426064:	tbnz	w9, #0, 426078 <ascii_strlower_n@plt+0x21c18>
  426068:	ldur	x8, [x29, #-16]
  42606c:	ldr	x8, [x8, #24]
  426070:	str	x8, [sp, #24]
  426074:	b	426080 <ascii_strlower_n@plt+0x21c20>
  426078:	mov	x8, xzr
  42607c:	str	x8, [sp, #24]
  426080:	ldr	x8, [sp, #24]
  426084:	stur	x8, [x29, #-48]
  426088:	ldur	x8, [x29, #-16]
  42608c:	cbz	x8, 4260b4 <ascii_strlower_n@plt+0x21c54>
  426090:	ldur	x8, [x29, #-16]
  426094:	ldr	x8, [x8, #8]
  426098:	cmp	x8, #0x0
  42609c:	cset	w9, ls  // ls = plast
  4260a0:	tbnz	w9, #0, 4260b4 <ascii_strlower_n@plt+0x21c54>
  4260a4:	ldur	x8, [x29, #-16]
  4260a8:	ldr	w9, [x8, #36]
  4260ac:	str	w9, [sp, #20]
  4260b0:	b	4260bc <ascii_strlower_n@plt+0x21c5c>
  4260b4:	mov	w8, wzr
  4260b8:	str	w8, [sp, #20]
  4260bc:	ldr	w8, [sp, #20]
  4260c0:	stur	w8, [x29, #-40]
  4260c4:	str	wzr, [sp, #44]
  4260c8:	ldrsw	x9, [sp, #44]
  4260cc:	str	x9, [sp, #48]
  4260d0:	ldur	x8, [x29, #-16]
  4260d4:	mov	w9, #0x0                   	// #0
  4260d8:	str	w9, [sp, #16]
  4260dc:	cbz	x8, 4260f8 <ascii_strlower_n@plt+0x21c98>
  4260e0:	ldr	x8, [sp, #48]
  4260e4:	ldur	x9, [x29, #-16]
  4260e8:	ldr	x9, [x9, #8]
  4260ec:	cmp	x8, x9
  4260f0:	cset	w10, cc  // cc = lo, ul, last
  4260f4:	str	w10, [sp, #16]
  4260f8:	ldr	w8, [sp, #16]
  4260fc:	tbnz	w8, #0, 426104 <ascii_strlower_n@plt+0x21ca4>
  426100:	b	426228 <ascii_strlower_n@plt+0x21dc8>
  426104:	ldur	x0, [x29, #-24]
  426108:	ldur	x1, [x29, #-48]
  42610c:	mov	x8, xzr
  426110:	mov	x2, x8
  426114:	bl	41f0b4 <ascii_strlower_n@plt+0x1ac54>
  426118:	str	w0, [sp, #56]
  42611c:	ldr	w9, [sp, #56]
  426120:	cmp	w9, #0x0
  426124:	cset	w9, ge  // ge = tcont
  426128:	tbnz	w9, #0, 426138 <ascii_strlower_n@plt+0x21cd8>
  42612c:	ldr	w8, [sp, #56]
  426130:	stur	w8, [x29, #-4]
  426134:	b	426248 <ascii_strlower_n@plt+0x21de8>
  426138:	ldr	w8, [sp, #56]
  42613c:	cbnz	w8, 426144 <ascii_strlower_n@plt+0x21ce4>
  426140:	b	426188 <ascii_strlower_n@plt+0x21d28>
  426144:	ldur	x8, [x29, #-32]
  426148:	cbnz	x8, 426158 <ascii_strlower_n@plt+0x21cf8>
  42614c:	mov	w8, #0x1                   	// #1
  426150:	stur	w8, [x29, #-4]
  426154:	b	426248 <ascii_strlower_n@plt+0x21de8>
  426158:	ldurb	w8, [x29, #-49]
  42615c:	tbnz	w8, #0, 426164 <ascii_strlower_n@plt+0x21d04>
  426160:	b	426178 <ascii_strlower_n@plt+0x21d18>
  426164:	ldur	w8, [x29, #-40]
  426168:	ldur	w9, [x29, #-36]
  42616c:	and	w8, w9, w8
  426170:	stur	w8, [x29, #-36]
  426174:	b	426188 <ascii_strlower_n@plt+0x21d28>
  426178:	ldur	w8, [x29, #-40]
  42617c:	stur	w8, [x29, #-36]
  426180:	mov	w8, #0x1                   	// #1
  426184:	sturb	w8, [x29, #-49]
  426188:	ldr	x8, [sp, #48]
  42618c:	add	x8, x8, #0x1
  426190:	str	x8, [sp, #48]
  426194:	ldr	x8, [sp, #48]
  426198:	ldur	x9, [x29, #-16]
  42619c:	ldr	x9, [x9, #8]
  4261a0:	cmp	x8, x9
  4261a4:	b.cs	4261cc <ascii_strlower_n@plt+0x21d6c>  // b.hs, b.nlast
  4261a8:	ldur	x8, [x29, #-16]
  4261ac:	add	x8, x8, #0x18
  4261b0:	ldr	x9, [sp, #48]
  4261b4:	mov	x10, #0x10                  	// #16
  4261b8:	mul	x9, x10, x9
  4261bc:	add	x8, x8, x9
  4261c0:	ldr	x8, [x8]
  4261c4:	str	x8, [sp, #8]
  4261c8:	b	4261d4 <ascii_strlower_n@plt+0x21d74>
  4261cc:	mov	x8, xzr
  4261d0:	str	x8, [sp, #8]
  4261d4:	ldr	x8, [sp, #8]
  4261d8:	stur	x8, [x29, #-48]
  4261dc:	ldr	x8, [sp, #48]
  4261e0:	ldur	x9, [x29, #-16]
  4261e4:	ldr	x9, [x9, #8]
  4261e8:	cmp	x8, x9
  4261ec:	b.cs	426214 <ascii_strlower_n@plt+0x21db4>  // b.hs, b.nlast
  4261f0:	ldur	x8, [x29, #-16]
  4261f4:	add	x8, x8, #0x18
  4261f8:	ldr	x9, [sp, #48]
  4261fc:	mov	x10, #0x10                  	// #16
  426200:	mul	x9, x10, x9
  426204:	add	x8, x8, x9
  426208:	ldr	w11, [x8, #12]
  42620c:	str	w11, [sp, #4]
  426210:	b	42621c <ascii_strlower_n@plt+0x21dbc>
  426214:	mov	w8, wzr
  426218:	str	w8, [sp, #4]
  42621c:	ldr	w8, [sp, #4]
  426220:	stur	w8, [x29, #-40]
  426224:	b	4260d0 <ascii_strlower_n@plt+0x21c70>
  426228:	ldur	x8, [x29, #-32]
  42622c:	cbz	x8, 42623c <ascii_strlower_n@plt+0x21ddc>
  426230:	ldur	w8, [x29, #-36]
  426234:	ldur	x9, [x29, #-32]
  426238:	str	w8, [x9]
  42623c:	ldurb	w8, [x29, #-49]
  426240:	and	w8, w8, #0x1
  426244:	stur	w8, [x29, #-4]
  426248:	ldur	w0, [x29, #-4]
  42624c:	ldp	x29, x30, [sp, #112]
  426250:	add	sp, sp, #0x80
  426254:	ret
  426258:	sub	sp, sp, #0x40
  42625c:	str	x0, [sp, #48]
  426260:	ldr	x8, [sp, #48]
  426264:	cbz	x8, 42628c <ascii_strlower_n@plt+0x21e2c>
  426268:	ldr	x8, [sp, #48]
  42626c:	ldr	x8, [x8, #8]
  426270:	cmp	x8, #0x0
  426274:	cset	w9, ls  // ls = plast
  426278:	tbnz	w9, #0, 42628c <ascii_strlower_n@plt+0x21e2c>
  42627c:	ldr	x8, [sp, #48]
  426280:	ldr	x8, [x8, #24]
  426284:	str	x8, [sp, #16]
  426288:	b	426294 <ascii_strlower_n@plt+0x21e34>
  42628c:	mov	x8, xzr
  426290:	str	x8, [sp, #16]
  426294:	ldr	x8, [sp, #16]
  426298:	str	x8, [sp, #40]
  42629c:	str	wzr, [sp, #28]
  4262a0:	ldrsw	x8, [sp, #28]
  4262a4:	str	x8, [sp, #32]
  4262a8:	ldr	x8, [sp, #48]
  4262ac:	mov	w9, #0x0                   	// #0
  4262b0:	str	w9, [sp, #12]
  4262b4:	cbz	x8, 4262d0 <ascii_strlower_n@plt+0x21e70>
  4262b8:	ldr	x8, [sp, #32]
  4262bc:	ldr	x9, [sp, #48]
  4262c0:	ldr	x9, [x9, #8]
  4262c4:	cmp	x8, x9
  4262c8:	cset	w10, cc  // cc = lo, ul, last
  4262cc:	str	w10, [sp, #12]
  4262d0:	ldr	w8, [sp, #12]
  4262d4:	tbnz	w8, #0, 4262dc <ascii_strlower_n@plt+0x21e7c>
  4262d8:	b	4263a0 <ascii_strlower_n@plt+0x21f40>
  4262dc:	mov	w8, #0x0                   	// #0
  4262e0:	strb	w8, [sp, #27]
  4262e4:	ldr	x9, [sp, #40]
  4262e8:	ldr	x9, [x9, #8]
  4262ec:	ldrh	w8, [x9, #6]
  4262f0:	cmp	w8, #0x2f
  4262f4:	str	w8, [sp, #8]
  4262f8:	b.eq	426318 <ascii_strlower_n@plt+0x21eb8>  // b.none
  4262fc:	b	426300 <ascii_strlower_n@plt+0x21ea0>
  426300:	ldr	w8, [sp, #8]
  426304:	cmp	w8, #0x32
  426308:	cset	w9, eq  // eq = none
  42630c:	eor	w9, w9, #0x1
  426310:	tbnz	w9, #0, 426324 <ascii_strlower_n@plt+0x21ec4>
  426314:	b	426318 <ascii_strlower_n@plt+0x21eb8>
  426318:	mov	w8, #0x1                   	// #1
  42631c:	strb	w8, [sp, #27]
  426320:	b	426324 <ascii_strlower_n@plt+0x21ec4>
  426324:	ldrb	w8, [sp, #27]
  426328:	and	w8, w8, #0x1
  42632c:	strb	w8, [sp, #26]
  426330:	ldrb	w8, [sp, #26]
  426334:	tbnz	w8, #0, 42633c <ascii_strlower_n@plt+0x21edc>
  426338:	b	426348 <ascii_strlower_n@plt+0x21ee8>
  42633c:	mov	w8, #0x1                   	// #1
  426340:	str	w8, [sp, #60]
  426344:	b	4263a4 <ascii_strlower_n@plt+0x21f44>
  426348:	ldr	x8, [sp, #32]
  42634c:	add	x8, x8, #0x1
  426350:	str	x8, [sp, #32]
  426354:	ldr	x8, [sp, #32]
  426358:	ldr	x9, [sp, #48]
  42635c:	ldr	x9, [x9, #8]
  426360:	cmp	x8, x9
  426364:	b.cs	42638c <ascii_strlower_n@plt+0x21f2c>  // b.hs, b.nlast
  426368:	ldr	x8, [sp, #48]
  42636c:	add	x8, x8, #0x18
  426370:	ldr	x9, [sp, #32]
  426374:	mov	x10, #0x10                  	// #16
  426378:	mul	x9, x10, x9
  42637c:	add	x8, x8, x9
  426380:	ldr	x8, [x8]
  426384:	str	x8, [sp]
  426388:	b	426394 <ascii_strlower_n@plt+0x21f34>
  42638c:	mov	x8, xzr
  426390:	str	x8, [sp]
  426394:	ldr	x8, [sp]
  426398:	str	x8, [sp, #40]
  42639c:	b	4262a8 <ascii_strlower_n@plt+0x21e48>
  4263a0:	str	wzr, [sp, #60]
  4263a4:	ldr	w0, [sp, #60]
  4263a8:	add	sp, sp, #0x40
  4263ac:	ret
  4263b0:	sub	sp, sp, #0x70
  4263b4:	stp	x29, x30, [sp, #96]
  4263b8:	add	x29, sp, #0x60
  4263bc:	stur	x0, [x29, #-16]
  4263c0:	stur	x1, [x29, #-24]
  4263c4:	ldur	x8, [x29, #-16]
  4263c8:	cbz	x8, 4263f0 <ascii_strlower_n@plt+0x21f90>
  4263cc:	ldur	x8, [x29, #-16]
  4263d0:	ldr	x8, [x8, #8]
  4263d4:	cmp	x8, #0x0
  4263d8:	cset	w9, ls  // ls = plast
  4263dc:	tbnz	w9, #0, 4263f0 <ascii_strlower_n@plt+0x21f90>
  4263e0:	ldur	x8, [x29, #-16]
  4263e4:	ldr	x8, [x8, #24]
  4263e8:	str	x8, [sp, #24]
  4263ec:	b	4263f8 <ascii_strlower_n@plt+0x21f98>
  4263f0:	mov	x8, xzr
  4263f4:	str	x8, [sp, #24]
  4263f8:	ldr	x8, [sp, #24]
  4263fc:	stur	x8, [x29, #-32]
  426400:	str	wzr, [sp, #44]
  426404:	ldrsw	x8, [sp, #44]
  426408:	str	x8, [sp, #48]
  42640c:	ldur	x8, [x29, #-16]
  426410:	mov	w9, #0x0                   	// #0
  426414:	str	w9, [sp, #20]
  426418:	cbz	x8, 426434 <ascii_strlower_n@plt+0x21fd4>
  42641c:	ldr	x8, [sp, #48]
  426420:	ldur	x9, [x29, #-16]
  426424:	ldr	x9, [x9, #8]
  426428:	cmp	x8, x9
  42642c:	cset	w10, cc  // cc = lo, ul, last
  426430:	str	w10, [sp, #20]
  426434:	ldr	w8, [sp, #20]
  426438:	tbnz	w8, #0, 426440 <ascii_strlower_n@plt+0x21fe0>
  42643c:	b	42651c <ascii_strlower_n@plt+0x220bc>
  426440:	ldur	x8, [x29, #-32]
  426444:	ldr	x8, [x8, #8]
  426448:	ldrh	w9, [x8, #6]
  42644c:	cmp	w9, #0x32
  426450:	b.eq	426458 <ascii_strlower_n@plt+0x21ff8>  // b.none
  426454:	b	4264c4 <ascii_strlower_n@plt+0x22064>
  426458:	ldur	x8, [x29, #-32]
  42645c:	ldr	x0, [x8, #8]
  426460:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  426464:	add	x8, sp, #0x20
  426468:	str	x0, [sp, #32]
  42646c:	mov	x0, x8
  426470:	bl	426530 <ascii_strlower_n@plt+0x220d0>
  426474:	stur	w0, [x29, #-36]
  426478:	ldur	w9, [x29, #-36]
  42647c:	cmp	w9, #0x0
  426480:	cset	w9, ge  // ge = tcont
  426484:	tbnz	w9, #0, 426494 <ascii_strlower_n@plt+0x22034>
  426488:	ldur	w8, [x29, #-36]
  42648c:	stur	w8, [x29, #-4]
  426490:	b	426520 <ascii_strlower_n@plt+0x220c0>
  426494:	ldur	w8, [x29, #-36]
  426498:	cbnz	w8, 4264a0 <ascii_strlower_n@plt+0x22040>
  42649c:	b	4264c4 <ascii_strlower_n@plt+0x22064>
  4264a0:	ldr	x0, [sp, #32]
  4264a4:	ldur	x1, [x29, #-24]
  4264a8:	bl	4042b0 <dns_name_equal@plt>
  4264ac:	stur	w0, [x29, #-36]
  4264b0:	ldur	w8, [x29, #-36]
  4264b4:	cbz	w8, 4264c4 <ascii_strlower_n@plt+0x22064>
  4264b8:	ldur	w8, [x29, #-36]
  4264bc:	stur	w8, [x29, #-4]
  4264c0:	b	426520 <ascii_strlower_n@plt+0x220c0>
  4264c4:	ldr	x8, [sp, #48]
  4264c8:	add	x8, x8, #0x1
  4264cc:	str	x8, [sp, #48]
  4264d0:	ldr	x8, [sp, #48]
  4264d4:	ldur	x9, [x29, #-16]
  4264d8:	ldr	x9, [x9, #8]
  4264dc:	cmp	x8, x9
  4264e0:	b.cs	426508 <ascii_strlower_n@plt+0x220a8>  // b.hs, b.nlast
  4264e4:	ldur	x8, [x29, #-16]
  4264e8:	add	x8, x8, #0x18
  4264ec:	ldr	x9, [sp, #48]
  4264f0:	mov	x10, #0x10                  	// #16
  4264f4:	mul	x9, x10, x9
  4264f8:	add	x8, x8, x9
  4264fc:	ldr	x8, [x8]
  426500:	str	x8, [sp, #8]
  426504:	b	426510 <ascii_strlower_n@plt+0x220b0>
  426508:	mov	x8, xzr
  42650c:	str	x8, [sp, #8]
  426510:	ldr	x8, [sp, #8]
  426514:	stur	x8, [x29, #-32]
  426518:	b	42640c <ascii_strlower_n@plt+0x21fac>
  42651c:	stur	wzr, [x29, #-4]
  426520:	ldur	w0, [x29, #-4]
  426524:	ldp	x29, x30, [sp, #96]
  426528:	add	sp, sp, #0x70
  42652c:	ret
  426530:	sub	sp, sp, #0x20
  426534:	stp	x29, x30, [sp, #16]
  426538:	add	x29, sp, #0x10
  42653c:	mov	x8, xzr
  426540:	mov	x2, #0x3f                  	// #63
  426544:	mov	w9, wzr
  426548:	str	x0, [sp, #8]
  42654c:	ldr	x0, [sp, #8]
  426550:	mov	x1, x8
  426554:	mov	w3, w9
  426558:	bl	404140 <dns_label_unescape@plt>
  42655c:	ldp	x29, x30, [sp, #16]
  426560:	add	sp, sp, #0x20
  426564:	ret
  426568:	sub	sp, sp, #0xa0
  42656c:	stp	x29, x30, [sp, #144]
  426570:	add	x29, sp, #0x90
  426574:	mov	x8, xzr
  426578:	adrp	x9, 432000 <ascii_strlower_n@plt+0x2dba0>
  42657c:	add	x9, x9, #0x7c4
  426580:	add	x9, x9, #0x3
  426584:	stur	x0, [x29, #-16]
  426588:	stur	x1, [x29, #-24]
  42658c:	stur	x2, [x29, #-32]
  426590:	stur	x3, [x29, #-40]
  426594:	stur	x8, [x29, #-56]
  426598:	stur	wzr, [x29, #-64]
  42659c:	str	x9, [sp, #48]
  4265a0:	ldur	x8, [x29, #-24]
  4265a4:	cmp	x8, #0x0
  4265a8:	cset	w9, ne  // ne = any
  4265ac:	mov	w10, #0x1                   	// #1
  4265b0:	eor	w9, w9, #0x1
  4265b4:	eor	w9, w9, w10
  4265b8:	eor	w9, w9, w10
  4265bc:	and	w9, w9, #0x1
  4265c0:	mov	w0, w9
  4265c4:	sxtw	x8, w0
  4265c8:	cbz	x8, 4265f0 <ascii_strlower_n@plt+0x22190>
  4265cc:	mov	w8, wzr
  4265d0:	mov	w0, w8
  4265d4:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  4265d8:	add	x1, x1, #0x5c2
  4265dc:	ldr	x2, [sp, #48]
  4265e0:	mov	w3, #0xfc                  	// #252
  4265e4:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4265e8:	add	x4, x4, #0x92b
  4265ec:	bl	4039d0 <log_assert_failed_realm@plt>
  4265f0:	ldur	x8, [x29, #-24]
  4265f4:	ldrh	w9, [x8, #6]
  4265f8:	cmp	w9, #0x6
  4265fc:	b.ne	426608 <ascii_strlower_n@plt+0x221a8>  // b.any
  426600:	stur	wzr, [x29, #-4]
  426604:	b	426860 <ascii_strlower_n@plt+0x22400>
  426608:	ldur	x8, [x29, #-16]
  42660c:	cbz	x8, 426634 <ascii_strlower_n@plt+0x221d4>
  426610:	ldur	x8, [x29, #-16]
  426614:	ldr	x8, [x8, #8]
  426618:	cmp	x8, #0x0
  42661c:	cset	w9, ls  // ls = plast
  426620:	tbnz	w9, #0, 426634 <ascii_strlower_n@plt+0x221d4>
  426624:	ldur	x8, [x29, #-16]
  426628:	ldr	x8, [x8, #24]
  42662c:	str	x8, [sp, #40]
  426630:	b	42663c <ascii_strlower_n@plt+0x221dc>
  426634:	mov	x8, xzr
  426638:	str	x8, [sp, #40]
  42663c:	ldr	x8, [sp, #40]
  426640:	stur	x8, [x29, #-48]
  426644:	ldur	x8, [x29, #-16]
  426648:	cbz	x8, 426670 <ascii_strlower_n@plt+0x22210>
  42664c:	ldur	x8, [x29, #-16]
  426650:	ldr	x8, [x8, #8]
  426654:	cmp	x8, #0x0
  426658:	cset	w9, ls  // ls = plast
  42665c:	tbnz	w9, #0, 426670 <ascii_strlower_n@plt+0x22210>
  426660:	ldur	x8, [x29, #-16]
  426664:	ldr	w9, [x8, #36]
  426668:	str	w9, [sp, #36]
  42666c:	b	426678 <ascii_strlower_n@plt+0x22218>
  426670:	mov	w8, wzr
  426674:	str	w8, [sp, #36]
  426678:	ldr	w8, [sp, #36]
  42667c:	stur	w8, [x29, #-60]
  426680:	str	wzr, [sp, #60]
  426684:	ldrsw	x9, [sp, #60]
  426688:	str	x9, [sp, #64]
  42668c:	ldur	x8, [x29, #-16]
  426690:	mov	w9, #0x0                   	// #0
  426694:	str	w9, [sp, #32]
  426698:	cbz	x8, 4266b4 <ascii_strlower_n@plt+0x22254>
  42669c:	ldr	x8, [sp, #64]
  4266a0:	ldur	x9, [x29, #-16]
  4266a4:	ldr	x9, [x9, #8]
  4266a8:	cmp	x8, x9
  4266ac:	cset	w10, cc  // cc = lo, ul, last
  4266b0:	str	w10, [sp, #32]
  4266b4:	ldr	w8, [sp, #32]
  4266b8:	tbnz	w8, #0, 4266c0 <ascii_strlower_n@plt+0x22260>
  4266bc:	b	426820 <ascii_strlower_n@plt+0x223c0>
  4266c0:	ldur	x0, [x29, #-24]
  4266c4:	ldur	x8, [x29, #-48]
  4266c8:	ldr	x1, [x8, #8]
  4266cc:	bl	41f5c8 <ascii_strlower_n@plt+0x1b168>
  4266d0:	stur	w0, [x29, #-68]
  4266d4:	ldur	w9, [x29, #-68]
  4266d8:	cmp	w9, #0x0
  4266dc:	cset	w9, ge  // ge = tcont
  4266e0:	tbnz	w9, #0, 4266f0 <ascii_strlower_n@plt+0x22290>
  4266e4:	ldur	w8, [x29, #-68]
  4266e8:	stur	w8, [x29, #-4]
  4266ec:	b	426860 <ascii_strlower_n@plt+0x22400>
  4266f0:	ldur	w8, [x29, #-68]
  4266f4:	cmp	w8, #0x0
  4266f8:	cset	w8, le
  4266fc:	tbnz	w8, #0, 426780 <ascii_strlower_n@plt+0x22320>
  426700:	ldur	x8, [x29, #-56]
  426704:	cbz	x8, 426770 <ascii_strlower_n@plt+0x22310>
  426708:	ldur	x8, [x29, #-48]
  42670c:	ldr	x0, [x8, #8]
  426710:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  426714:	ldur	x8, [x29, #-56]
  426718:	ldr	x8, [x8, #8]
  42671c:	str	x0, [sp, #24]
  426720:	mov	x0, x8
  426724:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  426728:	ldr	x1, [sp, #24]
  42672c:	str	x0, [sp, #16]
  426730:	mov	x0, x1
  426734:	ldr	x1, [sp, #16]
  426738:	bl	4042a0 <dns_name_endswith@plt>
  42673c:	stur	w0, [x29, #-68]
  426740:	ldur	w9, [x29, #-68]
  426744:	cmp	w9, #0x0
  426748:	cset	w9, ge  // ge = tcont
  42674c:	tbnz	w9, #0, 42675c <ascii_strlower_n@plt+0x222fc>
  426750:	ldur	w8, [x29, #-68]
  426754:	stur	w8, [x29, #-4]
  426758:	b	426860 <ascii_strlower_n@plt+0x22400>
  42675c:	ldur	w8, [x29, #-68]
  426760:	cmp	w8, #0x0
  426764:	cset	w8, le
  426768:	tbnz	w8, #0, 426770 <ascii_strlower_n@plt+0x22310>
  42676c:	b	426780 <ascii_strlower_n@plt+0x22320>
  426770:	ldur	x8, [x29, #-48]
  426774:	stur	x8, [x29, #-56]
  426778:	ldur	w9, [x29, #-60]
  42677c:	stur	w9, [x29, #-64]
  426780:	ldr	x8, [sp, #64]
  426784:	add	x8, x8, #0x1
  426788:	str	x8, [sp, #64]
  42678c:	ldr	x8, [sp, #64]
  426790:	ldur	x9, [x29, #-16]
  426794:	ldr	x9, [x9, #8]
  426798:	cmp	x8, x9
  42679c:	b.cs	4267c4 <ascii_strlower_n@plt+0x22364>  // b.hs, b.nlast
  4267a0:	ldur	x8, [x29, #-16]
  4267a4:	add	x8, x8, #0x18
  4267a8:	ldr	x9, [sp, #64]
  4267ac:	mov	x10, #0x10                  	// #16
  4267b0:	mul	x9, x10, x9
  4267b4:	add	x8, x8, x9
  4267b8:	ldr	x8, [x8]
  4267bc:	str	x8, [sp, #8]
  4267c0:	b	4267cc <ascii_strlower_n@plt+0x2236c>
  4267c4:	mov	x8, xzr
  4267c8:	str	x8, [sp, #8]
  4267cc:	ldr	x8, [sp, #8]
  4267d0:	stur	x8, [x29, #-48]
  4267d4:	ldr	x8, [sp, #64]
  4267d8:	ldur	x9, [x29, #-16]
  4267dc:	ldr	x9, [x9, #8]
  4267e0:	cmp	x8, x9
  4267e4:	b.cs	42680c <ascii_strlower_n@plt+0x223ac>  // b.hs, b.nlast
  4267e8:	ldur	x8, [x29, #-16]
  4267ec:	add	x8, x8, #0x18
  4267f0:	ldr	x9, [sp, #64]
  4267f4:	mov	x10, #0x10                  	// #16
  4267f8:	mul	x9, x10, x9
  4267fc:	add	x8, x8, x9
  426800:	ldr	w11, [x8, #12]
  426804:	str	w11, [sp, #4]
  426808:	b	426814 <ascii_strlower_n@plt+0x223b4>
  42680c:	mov	w8, wzr
  426810:	str	w8, [sp, #4]
  426814:	ldr	w8, [sp, #4]
  426818:	stur	w8, [x29, #-60]
  42681c:	b	42668c <ascii_strlower_n@plt+0x2222c>
  426820:	ldur	x8, [x29, #-56]
  426824:	cbnz	x8, 426830 <ascii_strlower_n@plt+0x223d0>
  426828:	stur	wzr, [x29, #-4]
  42682c:	b	426860 <ascii_strlower_n@plt+0x22400>
  426830:	ldur	x8, [x29, #-32]
  426834:	cbz	x8, 426844 <ascii_strlower_n@plt+0x223e4>
  426838:	ldur	x8, [x29, #-56]
  42683c:	ldur	x9, [x29, #-32]
  426840:	str	x8, [x9]
  426844:	ldur	x8, [x29, #-40]
  426848:	cbz	x8, 426858 <ascii_strlower_n@plt+0x223f8>
  42684c:	ldur	w8, [x29, #-64]
  426850:	ldur	x9, [x29, #-40]
  426854:	str	w8, [x9]
  426858:	mov	w8, #0x1                   	// #1
  42685c:	stur	w8, [x29, #-4]
  426860:	ldur	w0, [x29, #-4]
  426864:	ldp	x29, x30, [sp, #144]
  426868:	add	sp, sp, #0xa0
  42686c:	ret
  426870:	sub	sp, sp, #0x80
  426874:	stp	x29, x30, [sp, #112]
  426878:	add	x29, sp, #0x70
  42687c:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  426880:	add	x8, x8, #0x7c4
  426884:	add	x8, x8, #0x3
  426888:	stur	x0, [x29, #-16]
  42688c:	stur	x1, [x29, #-24]
  426890:	stur	x2, [x29, #-32]
  426894:	stur	x3, [x29, #-40]
  426898:	str	x8, [sp, #32]
  42689c:	ldur	x8, [x29, #-24]
  4268a0:	cmp	x8, #0x0
  4268a4:	cset	w9, ne  // ne = any
  4268a8:	mov	w10, #0x1                   	// #1
  4268ac:	eor	w9, w9, #0x1
  4268b0:	eor	w9, w9, w10
  4268b4:	eor	w9, w9, w10
  4268b8:	and	w9, w9, #0x1
  4268bc:	mov	w0, w9
  4268c0:	sxtw	x8, w0
  4268c4:	cbz	x8, 4268ec <ascii_strlower_n@plt+0x2248c>
  4268c8:	mov	w8, wzr
  4268cc:	mov	w0, w8
  4268d0:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  4268d4:	add	x1, x1, #0x5c2
  4268d8:	ldr	x2, [sp, #32]
  4268dc:	mov	w3, #0x125                 	// #293
  4268e0:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4268e4:	add	x4, x4, #0x990
  4268e8:	bl	4039d0 <log_assert_failed_realm@plt>
  4268ec:	ldur	x8, [x29, #-24]
  4268f0:	ldrh	w0, [x8, #6]
  4268f4:	bl	42bc6c <ascii_strlower_n@plt+0x2780c>
  4268f8:	tbnz	w0, #0, 426904 <ascii_strlower_n@plt+0x224a4>
  4268fc:	stur	wzr, [x29, #-4]
  426900:	b	426adc <ascii_strlower_n@plt+0x2267c>
  426904:	ldur	x8, [x29, #-16]
  426908:	cbz	x8, 426930 <ascii_strlower_n@plt+0x224d0>
  42690c:	ldur	x8, [x29, #-16]
  426910:	ldr	x8, [x8, #8]
  426914:	cmp	x8, #0x0
  426918:	cset	w9, ls  // ls = plast
  42691c:	tbnz	w9, #0, 426930 <ascii_strlower_n@plt+0x224d0>
  426920:	ldur	x8, [x29, #-16]
  426924:	ldr	x8, [x8, #24]
  426928:	str	x8, [sp, #24]
  42692c:	b	426938 <ascii_strlower_n@plt+0x224d8>
  426930:	mov	x8, xzr
  426934:	str	x8, [sp, #24]
  426938:	ldr	x8, [sp, #24]
  42693c:	stur	x8, [x29, #-48]
  426940:	ldur	x8, [x29, #-16]
  426944:	cbz	x8, 42696c <ascii_strlower_n@plt+0x2250c>
  426948:	ldur	x8, [x29, #-16]
  42694c:	ldr	x8, [x8, #8]
  426950:	cmp	x8, #0x0
  426954:	cset	w9, ls  // ls = plast
  426958:	tbnz	w9, #0, 42696c <ascii_strlower_n@plt+0x2250c>
  42695c:	ldur	x8, [x29, #-16]
  426960:	ldr	w9, [x8, #36]
  426964:	str	w9, [sp, #20]
  426968:	b	426974 <ascii_strlower_n@plt+0x22514>
  42696c:	mov	w8, wzr
  426970:	str	w8, [sp, #20]
  426974:	ldr	w8, [sp, #20]
  426978:	stur	w8, [x29, #-52]
  42697c:	str	wzr, [sp, #44]
  426980:	ldrsw	x9, [sp, #44]
  426984:	str	x9, [sp, #48]
  426988:	ldur	x8, [x29, #-16]
  42698c:	mov	w9, #0x0                   	// #0
  426990:	str	w9, [sp, #16]
  426994:	cbz	x8, 4269b0 <ascii_strlower_n@plt+0x22550>
  426998:	ldr	x8, [sp, #48]
  42699c:	ldur	x9, [x29, #-16]
  4269a0:	ldr	x9, [x9, #8]
  4269a4:	cmp	x8, x9
  4269a8:	cset	w10, cc  // cc = lo, ul, last
  4269ac:	str	w10, [sp, #16]
  4269b0:	ldr	w8, [sp, #16]
  4269b4:	tbnz	w8, #0, 4269bc <ascii_strlower_n@plt+0x2255c>
  4269b8:	b	426ad8 <ascii_strlower_n@plt+0x22678>
  4269bc:	ldur	x0, [x29, #-24]
  4269c0:	ldur	x8, [x29, #-48]
  4269c4:	ldr	x1, [x8, #8]
  4269c8:	mov	x8, xzr
  4269cc:	mov	x2, x8
  4269d0:	bl	41f310 <ascii_strlower_n@plt+0x1aeb0>
  4269d4:	str	w0, [sp, #56]
  4269d8:	ldr	w9, [sp, #56]
  4269dc:	cmp	w9, #0x0
  4269e0:	cset	w9, ge  // ge = tcont
  4269e4:	tbnz	w9, #0, 4269f4 <ascii_strlower_n@plt+0x22594>
  4269e8:	ldr	w8, [sp, #56]
  4269ec:	stur	w8, [x29, #-4]
  4269f0:	b	426adc <ascii_strlower_n@plt+0x2267c>
  4269f4:	ldr	w8, [sp, #56]
  4269f8:	cmp	w8, #0x0
  4269fc:	cset	w8, le
  426a00:	tbnz	w8, #0, 426a38 <ascii_strlower_n@plt+0x225d8>
  426a04:	ldur	x8, [x29, #-32]
  426a08:	cbz	x8, 426a18 <ascii_strlower_n@plt+0x225b8>
  426a0c:	ldur	x8, [x29, #-48]
  426a10:	ldur	x9, [x29, #-32]
  426a14:	str	x8, [x9]
  426a18:	ldur	x8, [x29, #-40]
  426a1c:	cbz	x8, 426a2c <ascii_strlower_n@plt+0x225cc>
  426a20:	ldur	w8, [x29, #-52]
  426a24:	ldur	x9, [x29, #-40]
  426a28:	str	w8, [x9]
  426a2c:	mov	w8, #0x1                   	// #1
  426a30:	stur	w8, [x29, #-4]
  426a34:	b	426adc <ascii_strlower_n@plt+0x2267c>
  426a38:	ldr	x8, [sp, #48]
  426a3c:	add	x8, x8, #0x1
  426a40:	str	x8, [sp, #48]
  426a44:	ldr	x8, [sp, #48]
  426a48:	ldur	x9, [x29, #-16]
  426a4c:	ldr	x9, [x9, #8]
  426a50:	cmp	x8, x9
  426a54:	b.cs	426a7c <ascii_strlower_n@plt+0x2261c>  // b.hs, b.nlast
  426a58:	ldur	x8, [x29, #-16]
  426a5c:	add	x8, x8, #0x18
  426a60:	ldr	x9, [sp, #48]
  426a64:	mov	x10, #0x10                  	// #16
  426a68:	mul	x9, x10, x9
  426a6c:	add	x8, x8, x9
  426a70:	ldr	x8, [x8]
  426a74:	str	x8, [sp, #8]
  426a78:	b	426a84 <ascii_strlower_n@plt+0x22624>
  426a7c:	mov	x8, xzr
  426a80:	str	x8, [sp, #8]
  426a84:	ldr	x8, [sp, #8]
  426a88:	stur	x8, [x29, #-48]
  426a8c:	ldr	x8, [sp, #48]
  426a90:	ldur	x9, [x29, #-16]
  426a94:	ldr	x9, [x9, #8]
  426a98:	cmp	x8, x9
  426a9c:	b.cs	426ac4 <ascii_strlower_n@plt+0x22664>  // b.hs, b.nlast
  426aa0:	ldur	x8, [x29, #-16]
  426aa4:	add	x8, x8, #0x18
  426aa8:	ldr	x9, [sp, #48]
  426aac:	mov	x10, #0x10                  	// #16
  426ab0:	mul	x9, x10, x9
  426ab4:	add	x8, x8, x9
  426ab8:	ldr	w11, [x8, #12]
  426abc:	str	w11, [sp, #4]
  426ac0:	b	426acc <ascii_strlower_n@plt+0x2266c>
  426ac4:	mov	w8, wzr
  426ac8:	str	w8, [sp, #4]
  426acc:	ldr	w8, [sp, #4]
  426ad0:	stur	w8, [x29, #-52]
  426ad4:	b	426988 <ascii_strlower_n@plt+0x22528>
  426ad8:	stur	wzr, [x29, #-4]
  426adc:	ldur	w0, [x29, #-4]
  426ae0:	ldp	x29, x30, [sp, #112]
  426ae4:	add	sp, sp, #0x80
  426ae8:	ret
  426aec:	sub	sp, sp, #0x60
  426af0:	stp	x29, x30, [sp, #80]
  426af4:	add	x29, sp, #0x50
  426af8:	mov	x8, xzr
  426afc:	adrp	x9, 432000 <ascii_strlower_n@plt+0x2dba0>
  426b00:	add	x9, x9, #0x7c4
  426b04:	add	x9, x9, #0x3
  426b08:	stur	x0, [x29, #-16]
  426b0c:	stur	x1, [x29, #-24]
  426b10:	stur	x2, [x29, #-32]
  426b14:	str	x8, [sp, #40]
  426b18:	str	x9, [sp, #8]
  426b1c:	ldur	x8, [x29, #-32]
  426b20:	cmp	x8, #0x0
  426b24:	cset	w9, ne  // ne = any
  426b28:	mov	w10, #0x1                   	// #1
  426b2c:	eor	w9, w9, #0x1
  426b30:	eor	w9, w9, w10
  426b34:	eor	w9, w9, w10
  426b38:	and	w9, w9, #0x1
  426b3c:	mov	w0, w9
  426b40:	sxtw	x8, w0
  426b44:	cbz	x8, 426b6c <ascii_strlower_n@plt+0x2270c>
  426b48:	mov	w8, wzr
  426b4c:	mov	w0, w8
  426b50:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  426b54:	add	x1, x1, #0x42e
  426b58:	ldr	x2, [sp, #8]
  426b5c:	mov	w3, #0x13f                 	// #319
  426b60:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  426b64:	add	x4, x4, #0xa00
  426b68:	bl	4039d0 <log_assert_failed_realm@plt>
  426b6c:	ldur	x0, [x29, #-16]
  426b70:	bl	426cf0 <ascii_strlower_n@plt+0x22890>
  426b74:	cmp	x0, #0x0
  426b78:	cset	w8, hi  // hi = pmore
  426b7c:	tbnz	w8, #0, 426ba0 <ascii_strlower_n@plt+0x22740>
  426b80:	ldur	x0, [x29, #-24]
  426b84:	bl	425564 <ascii_strlower_n@plt+0x21104>
  426b88:	ldur	x8, [x29, #-32]
  426b8c:	str	x0, [x8]
  426b90:	stur	wzr, [x29, #-4]
  426b94:	mov	w9, #0x1                   	// #1
  426b98:	str	w9, [sp, #32]
  426b9c:	b	426ca4 <ascii_strlower_n@plt+0x22844>
  426ba0:	ldur	x0, [x29, #-24]
  426ba4:	bl	426cf0 <ascii_strlower_n@plt+0x22890>
  426ba8:	cmp	x0, #0x0
  426bac:	cset	w8, hi  // hi = pmore
  426bb0:	tbnz	w8, #0, 426bd4 <ascii_strlower_n@plt+0x22774>
  426bb4:	ldur	x0, [x29, #-16]
  426bb8:	bl	425564 <ascii_strlower_n@plt+0x21104>
  426bbc:	ldur	x8, [x29, #-32]
  426bc0:	str	x0, [x8]
  426bc4:	stur	wzr, [x29, #-4]
  426bc8:	mov	w9, #0x1                   	// #1
  426bcc:	str	w9, [sp, #32]
  426bd0:	b	426ca4 <ascii_strlower_n@plt+0x22844>
  426bd4:	ldur	x8, [x29, #-16]
  426bd8:	ldr	x8, [x8, #8]
  426bdc:	ldur	x9, [x29, #-24]
  426be0:	ldr	x9, [x9, #8]
  426be4:	add	x0, x8, x9
  426be8:	bl	4254f0 <ascii_strlower_n@plt+0x21090>
  426bec:	str	x0, [sp, #40]
  426bf0:	ldr	x8, [sp, #40]
  426bf4:	cbnz	x8, 426c0c <ascii_strlower_n@plt+0x227ac>
  426bf8:	mov	w8, #0xfffffff4            	// #-12
  426bfc:	stur	w8, [x29, #-4]
  426c00:	mov	w8, #0x1                   	// #1
  426c04:	str	w8, [sp, #32]
  426c08:	b	426ca4 <ascii_strlower_n@plt+0x22844>
  426c0c:	ldr	x0, [sp, #40]
  426c10:	ldur	x1, [x29, #-16]
  426c14:	bl	426d28 <ascii_strlower_n@plt+0x228c8>
  426c18:	str	w0, [sp, #36]
  426c1c:	ldr	w8, [sp, #36]
  426c20:	cmp	w8, #0x0
  426c24:	cset	w8, ge  // ge = tcont
  426c28:	tbnz	w8, #0, 426c40 <ascii_strlower_n@plt+0x227e0>
  426c2c:	ldr	w8, [sp, #36]
  426c30:	stur	w8, [x29, #-4]
  426c34:	mov	w8, #0x1                   	// #1
  426c38:	str	w8, [sp, #32]
  426c3c:	b	426ca4 <ascii_strlower_n@plt+0x22844>
  426c40:	ldr	x0, [sp, #40]
  426c44:	ldur	x1, [x29, #-24]
  426c48:	bl	426f60 <ascii_strlower_n@plt+0x22b00>
  426c4c:	str	w0, [sp, #36]
  426c50:	ldr	w8, [sp, #36]
  426c54:	cmp	w8, #0x0
  426c58:	cset	w8, ge  // ge = tcont
  426c5c:	tbnz	w8, #0, 426c74 <ascii_strlower_n@plt+0x22814>
  426c60:	ldr	w8, [sp, #36]
  426c64:	stur	w8, [x29, #-4]
  426c68:	mov	w8, #0x1                   	// #1
  426c6c:	str	w8, [sp, #32]
  426c70:	b	426ca4 <ascii_strlower_n@plt+0x22844>
  426c74:	ldr	x8, [sp, #40]
  426c78:	str	x8, [sp, #24]
  426c7c:	mov	x8, xzr
  426c80:	str	x8, [sp, #40]
  426c84:	ldr	x8, [sp, #24]
  426c88:	str	x8, [sp, #16]
  426c8c:	ldr	x8, [sp, #16]
  426c90:	ldur	x9, [x29, #-32]
  426c94:	str	x8, [x9]
  426c98:	stur	wzr, [x29, #-4]
  426c9c:	mov	w10, #0x1                   	// #1
  426ca0:	str	w10, [sp, #32]
  426ca4:	add	x0, sp, #0x28
  426ca8:	bl	426cbc <ascii_strlower_n@plt+0x2285c>
  426cac:	ldur	w0, [x29, #-4]
  426cb0:	ldp	x29, x30, [sp, #80]
  426cb4:	add	sp, sp, #0x60
  426cb8:	ret
  426cbc:	sub	sp, sp, #0x20
  426cc0:	stp	x29, x30, [sp, #16]
  426cc4:	add	x29, sp, #0x10
  426cc8:	str	x0, [sp, #8]
  426ccc:	ldr	x8, [sp, #8]
  426cd0:	ldr	x8, [x8]
  426cd4:	cbz	x8, 426ce4 <ascii_strlower_n@plt+0x22884>
  426cd8:	ldr	x8, [sp, #8]
  426cdc:	ldr	x0, [x8]
  426ce0:	bl	425614 <ascii_strlower_n@plt+0x211b4>
  426ce4:	ldp	x29, x30, [sp, #16]
  426ce8:	add	sp, sp, #0x20
  426cec:	ret
  426cf0:	sub	sp, sp, #0x10
  426cf4:	str	x0, [sp, #8]
  426cf8:	ldr	x8, [sp, #8]
  426cfc:	cbz	x8, 426d10 <ascii_strlower_n@plt+0x228b0>
  426d00:	ldr	x8, [sp, #8]
  426d04:	ldr	x8, [x8, #8]
  426d08:	str	x8, [sp]
  426d0c:	b	426d18 <ascii_strlower_n@plt+0x228b8>
  426d10:	mov	x8, xzr
  426d14:	str	x8, [sp]
  426d18:	ldr	x8, [sp]
  426d1c:	mov	x0, x8
  426d20:	add	sp, sp, #0x10
  426d24:	ret
  426d28:	sub	sp, sp, #0x80
  426d2c:	stp	x29, x30, [sp, #112]
  426d30:	add	x29, sp, #0x70
  426d34:	stur	x0, [x29, #-16]
  426d38:	stur	x1, [x29, #-24]
  426d3c:	ldur	x8, [x29, #-24]
  426d40:	cbz	x8, 426d68 <ascii_strlower_n@plt+0x22908>
  426d44:	ldur	x8, [x29, #-24]
  426d48:	ldr	x8, [x8, #8]
  426d4c:	cmp	x8, #0x0
  426d50:	cset	w9, ls  // ls = plast
  426d54:	tbnz	w9, #0, 426d68 <ascii_strlower_n@plt+0x22908>
  426d58:	ldur	x8, [x29, #-24]
  426d5c:	ldr	x8, [x8, #24]
  426d60:	str	x8, [sp, #40]
  426d64:	b	426d70 <ascii_strlower_n@plt+0x22910>
  426d68:	mov	x8, xzr
  426d6c:	str	x8, [sp, #40]
  426d70:	ldr	x8, [sp, #40]
  426d74:	stur	x8, [x29, #-32]
  426d78:	ldur	x8, [x29, #-24]
  426d7c:	cbz	x8, 426da4 <ascii_strlower_n@plt+0x22944>
  426d80:	ldur	x8, [x29, #-24]
  426d84:	ldr	x8, [x8, #8]
  426d88:	cmp	x8, #0x0
  426d8c:	cset	w9, ls  // ls = plast
  426d90:	tbnz	w9, #0, 426da4 <ascii_strlower_n@plt+0x22944>
  426d94:	ldur	x8, [x29, #-24]
  426d98:	ldr	w9, [x8, #32]
  426d9c:	str	w9, [sp, #36]
  426da0:	b	426dac <ascii_strlower_n@plt+0x2294c>
  426da4:	mov	w8, wzr
  426da8:	str	w8, [sp, #36]
  426dac:	ldr	w8, [sp, #36]
  426db0:	stur	w8, [x29, #-40]
  426db4:	ldur	x9, [x29, #-24]
  426db8:	cbz	x9, 426de0 <ascii_strlower_n@plt+0x22980>
  426dbc:	ldur	x8, [x29, #-24]
  426dc0:	ldr	x8, [x8, #8]
  426dc4:	cmp	x8, #0x0
  426dc8:	cset	w9, ls  // ls = plast
  426dcc:	tbnz	w9, #0, 426de0 <ascii_strlower_n@plt+0x22980>
  426dd0:	ldur	x8, [x29, #-24]
  426dd4:	ldr	w9, [x8, #36]
  426dd8:	str	w9, [sp, #32]
  426ddc:	b	426de8 <ascii_strlower_n@plt+0x22988>
  426de0:	mov	w8, wzr
  426de4:	str	w8, [sp, #32]
  426de8:	ldr	w8, [sp, #32]
  426dec:	stur	w8, [x29, #-36]
  426df0:	str	wzr, [sp, #52]
  426df4:	ldrsw	x9, [sp, #52]
  426df8:	str	x9, [sp, #56]
  426dfc:	ldur	x8, [x29, #-24]
  426e00:	mov	w9, #0x0                   	// #0
  426e04:	str	w9, [sp, #28]
  426e08:	cbz	x8, 426e24 <ascii_strlower_n@plt+0x229c4>
  426e0c:	ldr	x8, [sp, #56]
  426e10:	ldur	x9, [x29, #-24]
  426e14:	ldr	x9, [x9, #8]
  426e18:	cmp	x8, x9
  426e1c:	cset	w10, cc  // cc = lo, ul, last
  426e20:	str	w10, [sp, #28]
  426e24:	ldr	w8, [sp, #28]
  426e28:	tbnz	w8, #0, 426e30 <ascii_strlower_n@plt+0x229d0>
  426e2c:	b	426f4c <ascii_strlower_n@plt+0x22aec>
  426e30:	ldur	x0, [x29, #-16]
  426e34:	ldur	x1, [x29, #-32]
  426e38:	ldur	w2, [x29, #-40]
  426e3c:	ldur	w3, [x29, #-36]
  426e40:	bl	425a48 <ascii_strlower_n@plt+0x215e8>
  426e44:	stur	w0, [x29, #-44]
  426e48:	ldur	w8, [x29, #-44]
  426e4c:	cmp	w8, #0x0
  426e50:	cset	w8, ge  // ge = tcont
  426e54:	tbnz	w8, #0, 426e64 <ascii_strlower_n@plt+0x22a04>
  426e58:	ldur	w8, [x29, #-44]
  426e5c:	stur	w8, [x29, #-4]
  426e60:	b	426f50 <ascii_strlower_n@plt+0x22af0>
  426e64:	ldr	x8, [sp, #56]
  426e68:	add	x8, x8, #0x1
  426e6c:	str	x8, [sp, #56]
  426e70:	ldr	x8, [sp, #56]
  426e74:	ldur	x9, [x29, #-24]
  426e78:	ldr	x9, [x9, #8]
  426e7c:	cmp	x8, x9
  426e80:	b.cs	426ea8 <ascii_strlower_n@plt+0x22a48>  // b.hs, b.nlast
  426e84:	ldur	x8, [x29, #-24]
  426e88:	add	x8, x8, #0x18
  426e8c:	ldr	x9, [sp, #56]
  426e90:	mov	x10, #0x10                  	// #16
  426e94:	mul	x9, x10, x9
  426e98:	add	x8, x8, x9
  426e9c:	ldr	x8, [x8]
  426ea0:	str	x8, [sp, #16]
  426ea4:	b	426eb0 <ascii_strlower_n@plt+0x22a50>
  426ea8:	mov	x8, xzr
  426eac:	str	x8, [sp, #16]
  426eb0:	ldr	x8, [sp, #16]
  426eb4:	stur	x8, [x29, #-32]
  426eb8:	ldr	x8, [sp, #56]
  426ebc:	ldur	x9, [x29, #-24]
  426ec0:	ldr	x9, [x9, #8]
  426ec4:	cmp	x8, x9
  426ec8:	b.cs	426ef0 <ascii_strlower_n@plt+0x22a90>  // b.hs, b.nlast
  426ecc:	ldur	x8, [x29, #-24]
  426ed0:	add	x8, x8, #0x18
  426ed4:	ldr	x9, [sp, #56]
  426ed8:	mov	x10, #0x10                  	// #16
  426edc:	mul	x9, x10, x9
  426ee0:	add	x8, x8, x9
  426ee4:	ldr	w11, [x8, #8]
  426ee8:	str	w11, [sp, #12]
  426eec:	b	426ef8 <ascii_strlower_n@plt+0x22a98>
  426ef0:	mov	w8, wzr
  426ef4:	str	w8, [sp, #12]
  426ef8:	ldr	w8, [sp, #12]
  426efc:	stur	w8, [x29, #-40]
  426f00:	ldr	x9, [sp, #56]
  426f04:	ldur	x10, [x29, #-24]
  426f08:	ldr	x10, [x10, #8]
  426f0c:	cmp	x9, x10
  426f10:	b.cs	426f38 <ascii_strlower_n@plt+0x22ad8>  // b.hs, b.nlast
  426f14:	ldur	x8, [x29, #-24]
  426f18:	add	x8, x8, #0x18
  426f1c:	ldr	x9, [sp, #56]
  426f20:	mov	x10, #0x10                  	// #16
  426f24:	mul	x9, x10, x9
  426f28:	add	x8, x8, x9
  426f2c:	ldr	w11, [x8, #12]
  426f30:	str	w11, [sp, #8]
  426f34:	b	426f40 <ascii_strlower_n@plt+0x22ae0>
  426f38:	mov	w8, wzr
  426f3c:	str	w8, [sp, #8]
  426f40:	ldr	w8, [sp, #8]
  426f44:	stur	w8, [x29, #-36]
  426f48:	b	426dfc <ascii_strlower_n@plt+0x2299c>
  426f4c:	stur	wzr, [x29, #-4]
  426f50:	ldur	w0, [x29, #-4]
  426f54:	ldp	x29, x30, [sp, #112]
  426f58:	add	sp, sp, #0x80
  426f5c:	ret
  426f60:	sub	sp, sp, #0x80
  426f64:	stp	x29, x30, [sp, #112]
  426f68:	add	x29, sp, #0x70
  426f6c:	stur	x0, [x29, #-16]
  426f70:	stur	x1, [x29, #-24]
  426f74:	ldur	x8, [x29, #-24]
  426f78:	cbz	x8, 426fa0 <ascii_strlower_n@plt+0x22b40>
  426f7c:	ldur	x8, [x29, #-24]
  426f80:	ldr	x8, [x8, #8]
  426f84:	cmp	x8, #0x0
  426f88:	cset	w9, ls  // ls = plast
  426f8c:	tbnz	w9, #0, 426fa0 <ascii_strlower_n@plt+0x22b40>
  426f90:	ldur	x8, [x29, #-24]
  426f94:	ldr	x8, [x8, #24]
  426f98:	str	x8, [sp, #40]
  426f9c:	b	426fa8 <ascii_strlower_n@plt+0x22b48>
  426fa0:	mov	x8, xzr
  426fa4:	str	x8, [sp, #40]
  426fa8:	ldr	x8, [sp, #40]
  426fac:	stur	x8, [x29, #-32]
  426fb0:	ldur	x8, [x29, #-24]
  426fb4:	cbz	x8, 426fdc <ascii_strlower_n@plt+0x22b7c>
  426fb8:	ldur	x8, [x29, #-24]
  426fbc:	ldr	x8, [x8, #8]
  426fc0:	cmp	x8, #0x0
  426fc4:	cset	w9, ls  // ls = plast
  426fc8:	tbnz	w9, #0, 426fdc <ascii_strlower_n@plt+0x22b7c>
  426fcc:	ldur	x8, [x29, #-24]
  426fd0:	ldr	w9, [x8, #32]
  426fd4:	str	w9, [sp, #36]
  426fd8:	b	426fe4 <ascii_strlower_n@plt+0x22b84>
  426fdc:	mov	w8, wzr
  426fe0:	str	w8, [sp, #36]
  426fe4:	ldr	w8, [sp, #36]
  426fe8:	stur	w8, [x29, #-40]
  426fec:	ldur	x9, [x29, #-24]
  426ff0:	cbz	x9, 427018 <ascii_strlower_n@plt+0x22bb8>
  426ff4:	ldur	x8, [x29, #-24]
  426ff8:	ldr	x8, [x8, #8]
  426ffc:	cmp	x8, #0x0
  427000:	cset	w9, ls  // ls = plast
  427004:	tbnz	w9, #0, 427018 <ascii_strlower_n@plt+0x22bb8>
  427008:	ldur	x8, [x29, #-24]
  42700c:	ldr	w9, [x8, #36]
  427010:	str	w9, [sp, #32]
  427014:	b	427020 <ascii_strlower_n@plt+0x22bc0>
  427018:	mov	w8, wzr
  42701c:	str	w8, [sp, #32]
  427020:	ldr	w8, [sp, #32]
  427024:	stur	w8, [x29, #-36]
  427028:	str	wzr, [sp, #52]
  42702c:	ldrsw	x9, [sp, #52]
  427030:	str	x9, [sp, #56]
  427034:	ldur	x8, [x29, #-24]
  427038:	mov	w9, #0x0                   	// #0
  42703c:	str	w9, [sp, #28]
  427040:	cbz	x8, 42705c <ascii_strlower_n@plt+0x22bfc>
  427044:	ldr	x8, [sp, #56]
  427048:	ldur	x9, [x29, #-24]
  42704c:	ldr	x9, [x9, #8]
  427050:	cmp	x8, x9
  427054:	cset	w10, cc  // cc = lo, ul, last
  427058:	str	w10, [sp, #28]
  42705c:	ldr	w8, [sp, #28]
  427060:	tbnz	w8, #0, 427068 <ascii_strlower_n@plt+0x22c08>
  427064:	b	427184 <ascii_strlower_n@plt+0x22d24>
  427068:	ldur	x0, [x29, #-16]
  42706c:	ldur	x1, [x29, #-32]
  427070:	ldur	w2, [x29, #-40]
  427074:	ldur	w3, [x29, #-36]
  427078:	bl	425774 <ascii_strlower_n@plt+0x21314>
  42707c:	stur	w0, [x29, #-44]
  427080:	ldur	w8, [x29, #-44]
  427084:	cmp	w8, #0x0
  427088:	cset	w8, ge  // ge = tcont
  42708c:	tbnz	w8, #0, 42709c <ascii_strlower_n@plt+0x22c3c>
  427090:	ldur	w8, [x29, #-44]
  427094:	stur	w8, [x29, #-4]
  427098:	b	427188 <ascii_strlower_n@plt+0x22d28>
  42709c:	ldr	x8, [sp, #56]
  4270a0:	add	x8, x8, #0x1
  4270a4:	str	x8, [sp, #56]
  4270a8:	ldr	x8, [sp, #56]
  4270ac:	ldur	x9, [x29, #-24]
  4270b0:	ldr	x9, [x9, #8]
  4270b4:	cmp	x8, x9
  4270b8:	b.cs	4270e0 <ascii_strlower_n@plt+0x22c80>  // b.hs, b.nlast
  4270bc:	ldur	x8, [x29, #-24]
  4270c0:	add	x8, x8, #0x18
  4270c4:	ldr	x9, [sp, #56]
  4270c8:	mov	x10, #0x10                  	// #16
  4270cc:	mul	x9, x10, x9
  4270d0:	add	x8, x8, x9
  4270d4:	ldr	x8, [x8]
  4270d8:	str	x8, [sp, #16]
  4270dc:	b	4270e8 <ascii_strlower_n@plt+0x22c88>
  4270e0:	mov	x8, xzr
  4270e4:	str	x8, [sp, #16]
  4270e8:	ldr	x8, [sp, #16]
  4270ec:	stur	x8, [x29, #-32]
  4270f0:	ldr	x8, [sp, #56]
  4270f4:	ldur	x9, [x29, #-24]
  4270f8:	ldr	x9, [x9, #8]
  4270fc:	cmp	x8, x9
  427100:	b.cs	427128 <ascii_strlower_n@plt+0x22cc8>  // b.hs, b.nlast
  427104:	ldur	x8, [x29, #-24]
  427108:	add	x8, x8, #0x18
  42710c:	ldr	x9, [sp, #56]
  427110:	mov	x10, #0x10                  	// #16
  427114:	mul	x9, x10, x9
  427118:	add	x8, x8, x9
  42711c:	ldr	w11, [x8, #8]
  427120:	str	w11, [sp, #12]
  427124:	b	427130 <ascii_strlower_n@plt+0x22cd0>
  427128:	mov	w8, wzr
  42712c:	str	w8, [sp, #12]
  427130:	ldr	w8, [sp, #12]
  427134:	stur	w8, [x29, #-40]
  427138:	ldr	x9, [sp, #56]
  42713c:	ldur	x10, [x29, #-24]
  427140:	ldr	x10, [x10, #8]
  427144:	cmp	x9, x10
  427148:	b.cs	427170 <ascii_strlower_n@plt+0x22d10>  // b.hs, b.nlast
  42714c:	ldur	x8, [x29, #-24]
  427150:	add	x8, x8, #0x18
  427154:	ldr	x9, [sp, #56]
  427158:	mov	x10, #0x10                  	// #16
  42715c:	mul	x9, x10, x9
  427160:	add	x8, x8, x9
  427164:	ldr	w11, [x8, #12]
  427168:	str	w11, [sp, #8]
  42716c:	b	427178 <ascii_strlower_n@plt+0x22d18>
  427170:	mov	w8, wzr
  427174:	str	w8, [sp, #8]
  427178:	ldr	w8, [sp, #8]
  42717c:	stur	w8, [x29, #-36]
  427180:	b	427034 <ascii_strlower_n@plt+0x22bd4>
  427184:	stur	wzr, [x29, #-4]
  427188:	ldur	w0, [x29, #-4]
  42718c:	ldp	x29, x30, [sp, #112]
  427190:	add	sp, sp, #0x80
  427194:	ret
  427198:	sub	sp, sp, #0x40
  42719c:	stp	x29, x30, [sp, #48]
  4271a0:	add	x29, sp, #0x30
  4271a4:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  4271a8:	add	x8, x8, #0x7c4
  4271ac:	add	x2, x8, #0x3
  4271b0:	stur	x0, [x29, #-16]
  4271b4:	str	x1, [sp, #24]
  4271b8:	str	x2, [sp]
  4271bc:	ldur	x8, [x29, #-16]
  4271c0:	cmp	x8, #0x0
  4271c4:	cset	w9, ne  // ne = any
  4271c8:	mov	w10, #0x1                   	// #1
  4271cc:	eor	w9, w9, #0x1
  4271d0:	eor	w9, w9, w10
  4271d4:	eor	w9, w9, w10
  4271d8:	and	w9, w9, #0x1
  4271dc:	mov	w0, w9
  4271e0:	sxtw	x8, w0
  4271e4:	cbz	x8, 42720c <ascii_strlower_n@plt+0x22dac>
  4271e8:	mov	w8, wzr
  4271ec:	mov	w0, w8
  4271f0:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  4271f4:	add	x1, x1, #0xeb8
  4271f8:	ldr	x2, [sp]
  4271fc:	mov	w3, #0x160                 	// #352
  427200:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  427204:	add	x4, x4, #0xa3d
  427208:	bl	4039d0 <log_assert_failed_realm@plt>
  42720c:	ldur	x8, [x29, #-16]
  427210:	ldr	x0, [x8]
  427214:	ldr	x1, [sp, #24]
  427218:	add	x2, sp, #0x10
  42721c:	bl	426aec <ascii_strlower_n@plt+0x2268c>
  427220:	str	w0, [sp, #12]
  427224:	ldr	w9, [sp, #12]
  427228:	cmp	w9, #0x0
  42722c:	cset	w9, ge  // ge = tcont
  427230:	tbnz	w9, #0, 427240 <ascii_strlower_n@plt+0x22de0>
  427234:	ldr	w8, [sp, #12]
  427238:	stur	w8, [x29, #-4]
  42723c:	b	42725c <ascii_strlower_n@plt+0x22dfc>
  427240:	ldur	x8, [x29, #-16]
  427244:	ldr	x0, [x8]
  427248:	bl	425614 <ascii_strlower_n@plt+0x211b4>
  42724c:	ldr	x8, [sp, #16]
  427250:	ldur	x9, [x29, #-16]
  427254:	str	x8, [x9]
  427258:	stur	wzr, [x29, #-4]
  42725c:	ldur	w0, [x29, #-4]
  427260:	ldp	x29, x30, [sp, #48]
  427264:	add	sp, sp, #0x40
  427268:	ret
  42726c:	sub	sp, sp, #0xe0
  427270:	stp	x29, x30, [sp, #208]
  427274:	add	x29, sp, #0xd0
  427278:	mov	w8, #0x0                   	// #0
  42727c:	adrp	x9, 432000 <ascii_strlower_n@plt+0x2dba0>
  427280:	add	x9, x9, #0x7c4
  427284:	add	x9, x9, #0x3
  427288:	stur	x0, [x29, #-16]
  42728c:	stur	x1, [x29, #-24]
  427290:	sturb	w8, [x29, #-25]
  427294:	sturb	w8, [x29, #-26]
  427298:	str	x9, [sp, #72]
  42729c:	ldur	x8, [x29, #-16]
  4272a0:	cmp	x8, #0x0
  4272a4:	cset	w9, ne  // ne = any
  4272a8:	mov	w10, #0x1                   	// #1
  4272ac:	eor	w9, w9, #0x1
  4272b0:	eor	w9, w9, w10
  4272b4:	eor	w9, w9, w10
  4272b8:	and	w9, w9, #0x1
  4272bc:	mov	w0, w9
  4272c0:	sxtw	x8, w0
  4272c4:	cbz	x8, 4272ec <ascii_strlower_n@plt+0x22e8c>
  4272c8:	mov	w8, wzr
  4272cc:	mov	w0, w8
  4272d0:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  4272d4:	add	x1, x1, #0xeb8
  4272d8:	ldr	x2, [sp, #72]
  4272dc:	mov	w3, #0x172                 	// #370
  4272e0:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4272e4:	add	x4, x4, #0xa6e
  4272e8:	bl	4039d0 <log_assert_failed_realm@plt>
  4272ec:	ldur	x8, [x29, #-24]
  4272f0:	cmp	x8, #0x0
  4272f4:	cset	w9, ne  // ne = any
  4272f8:	mov	w10, #0x1                   	// #1
  4272fc:	eor	w9, w9, #0x1
  427300:	eor	w9, w9, w10
  427304:	eor	w9, w9, w10
  427308:	and	w9, w9, #0x1
  42730c:	mov	w0, w9
  427310:	sxtw	x8, w0
  427314:	cbz	x8, 42733c <ascii_strlower_n@plt+0x22edc>
  427318:	mov	w8, wzr
  42731c:	mov	w0, w8
  427320:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  427324:	add	x1, x1, #0x5c2
  427328:	ldr	x2, [sp, #72]
  42732c:	mov	w3, #0x173                 	// #371
  427330:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  427334:	add	x4, x4, #0xa6e
  427338:	bl	4039d0 <log_assert_failed_realm@plt>
  42733c:	ldur	x8, [x29, #-16]
  427340:	ldr	x8, [x8]
  427344:	cbz	x8, 427374 <ascii_strlower_n@plt+0x22f14>
  427348:	ldur	x8, [x29, #-16]
  42734c:	ldr	x8, [x8]
  427350:	ldr	x8, [x8, #8]
  427354:	cmp	x8, #0x0
  427358:	cset	w9, ls  // ls = plast
  42735c:	tbnz	w9, #0, 427374 <ascii_strlower_n@plt+0x22f14>
  427360:	ldur	x8, [x29, #-16]
  427364:	ldr	x8, [x8]
  427368:	ldr	x8, [x8, #24]
  42736c:	str	x8, [sp, #64]
  427370:	b	42737c <ascii_strlower_n@plt+0x22f1c>
  427374:	mov	x8, xzr
  427378:	str	x8, [sp, #64]
  42737c:	ldr	x8, [sp, #64]
  427380:	stur	x8, [x29, #-40]
  427384:	stur	wzr, [x29, #-68]
  427388:	ldursw	x8, [x29, #-68]
  42738c:	stur	x8, [x29, #-64]
  427390:	ldur	x8, [x29, #-16]
  427394:	ldr	x8, [x8]
  427398:	mov	w9, #0x0                   	// #0
  42739c:	str	w9, [sp, #60]
  4273a0:	cbz	x8, 4273c0 <ascii_strlower_n@plt+0x22f60>
  4273a4:	ldur	x8, [x29, #-64]
  4273a8:	ldur	x9, [x29, #-16]
  4273ac:	ldr	x9, [x9]
  4273b0:	ldr	x9, [x9, #8]
  4273b4:	cmp	x8, x9
  4273b8:	cset	w10, cc  // cc = lo, ul, last
  4273bc:	str	w10, [sp, #60]
  4273c0:	ldr	w8, [sp, #60]
  4273c4:	tbnz	w8, #0, 4273cc <ascii_strlower_n@plt+0x22f6c>
  4273c8:	b	42749c <ascii_strlower_n@plt+0x2303c>
  4273cc:	ldur	x8, [x29, #-40]
  4273d0:	ldr	x0, [x8, #8]
  4273d4:	ldur	x1, [x29, #-24]
  4273d8:	bl	41efe0 <ascii_strlower_n@plt+0x1ab80>
  4273dc:	stur	w0, [x29, #-52]
  4273e0:	ldur	w9, [x29, #-52]
  4273e4:	cmp	w9, #0x0
  4273e8:	cset	w9, ge  // ge = tcont
  4273ec:	tbnz	w9, #0, 4273fc <ascii_strlower_n@plt+0x22f9c>
  4273f0:	ldur	w8, [x29, #-52]
  4273f4:	stur	w8, [x29, #-4]
  4273f8:	b	427944 <ascii_strlower_n@plt+0x234e4>
  4273fc:	ldur	w8, [x29, #-52]
  427400:	cmp	w8, #0x0
  427404:	cset	w8, le
  427408:	tbnz	w8, #0, 427418 <ascii_strlower_n@plt+0x22fb8>
  42740c:	mov	w8, #0x1                   	// #1
  427410:	sturb	w8, [x29, #-25]
  427414:	b	427420 <ascii_strlower_n@plt+0x22fc0>
  427418:	mov	w8, #0x1                   	// #1
  42741c:	sturb	w8, [x29, #-26]
  427420:	ldurb	w8, [x29, #-25]
  427424:	tbnz	w8, #0, 42742c <ascii_strlower_n@plt+0x22fcc>
  427428:	b	42743c <ascii_strlower_n@plt+0x22fdc>
  42742c:	ldurb	w8, [x29, #-26]
  427430:	tbnz	w8, #0, 427438 <ascii_strlower_n@plt+0x22fd8>
  427434:	b	42743c <ascii_strlower_n@plt+0x22fdc>
  427438:	b	42749c <ascii_strlower_n@plt+0x2303c>
  42743c:	ldur	x8, [x29, #-64]
  427440:	add	x8, x8, #0x1
  427444:	stur	x8, [x29, #-64]
  427448:	ldur	x8, [x29, #-64]
  42744c:	ldur	x9, [x29, #-16]
  427450:	ldr	x9, [x9]
  427454:	ldr	x9, [x9, #8]
  427458:	cmp	x8, x9
  42745c:	b.cs	427488 <ascii_strlower_n@plt+0x23028>  // b.hs, b.nlast
  427460:	ldur	x8, [x29, #-16]
  427464:	ldr	x8, [x8]
  427468:	add	x8, x8, #0x18
  42746c:	ldur	x9, [x29, #-64]
  427470:	mov	x10, #0x10                  	// #16
  427474:	mul	x9, x10, x9
  427478:	add	x8, x8, x9
  42747c:	ldr	x8, [x8]
  427480:	str	x8, [sp, #48]
  427484:	b	427490 <ascii_strlower_n@plt+0x23030>
  427488:	mov	x8, xzr
  42748c:	str	x8, [sp, #48]
  427490:	ldr	x8, [sp, #48]
  427494:	stur	x8, [x29, #-40]
  427498:	b	427390 <ascii_strlower_n@plt+0x22f30>
  42749c:	ldurb	w8, [x29, #-25]
  4274a0:	tbnz	w8, #0, 4274ac <ascii_strlower_n@plt+0x2304c>
  4274a4:	stur	wzr, [x29, #-4]
  4274a8:	b	427944 <ascii_strlower_n@plt+0x234e4>
  4274ac:	ldurb	w8, [x29, #-26]
  4274b0:	tbnz	w8, #0, 4274d4 <ascii_strlower_n@plt+0x23074>
  4274b4:	ldur	x8, [x29, #-16]
  4274b8:	ldr	x0, [x8]
  4274bc:	bl	425614 <ascii_strlower_n@plt+0x211b4>
  4274c0:	ldur	x8, [x29, #-16]
  4274c4:	str	x0, [x8]
  4274c8:	mov	w9, #0x1                   	// #1
  4274cc:	stur	w9, [x29, #-4]
  4274d0:	b	427944 <ascii_strlower_n@plt+0x234e4>
  4274d4:	ldur	x8, [x29, #-16]
  4274d8:	ldr	x8, [x8]
  4274dc:	ldr	w9, [x8]
  4274e0:	cmp	w9, #0x1
  4274e4:	b.ls	427810 <ascii_strlower_n@plt+0x233b0>  // b.plast
  4274e8:	mov	x8, xzr
  4274ec:	stur	x8, [x29, #-80]
  4274f0:	ldur	x8, [x29, #-16]
  4274f4:	ldr	x8, [x8]
  4274f8:	ldr	x0, [x8, #8]
  4274fc:	bl	4254f0 <ascii_strlower_n@plt+0x21090>
  427500:	stur	x0, [x29, #-80]
  427504:	ldur	x8, [x29, #-80]
  427508:	cbnz	x8, 427520 <ascii_strlower_n@plt+0x230c0>
  42750c:	mov	w8, #0xfffffff4            	// #-12
  427510:	stur	w8, [x29, #-4]
  427514:	mov	w8, #0x1                   	// #1
  427518:	stur	w8, [x29, #-92]
  42751c:	b	427804 <ascii_strlower_n@plt+0x233a4>
  427520:	ldur	x8, [x29, #-16]
  427524:	ldr	x8, [x8]
  427528:	cbz	x8, 427558 <ascii_strlower_n@plt+0x230f8>
  42752c:	ldur	x8, [x29, #-16]
  427530:	ldr	x8, [x8]
  427534:	ldr	x8, [x8, #8]
  427538:	cmp	x8, #0x0
  42753c:	cset	w9, ls  // ls = plast
  427540:	tbnz	w9, #0, 427558 <ascii_strlower_n@plt+0x230f8>
  427544:	ldur	x8, [x29, #-16]
  427548:	ldr	x8, [x8]
  42754c:	ldr	x8, [x8, #24]
  427550:	str	x8, [sp, #40]
  427554:	b	427560 <ascii_strlower_n@plt+0x23100>
  427558:	mov	x8, xzr
  42755c:	str	x8, [sp, #40]
  427560:	ldr	x8, [sp, #40]
  427564:	stur	x8, [x29, #-40]
  427568:	ldur	x8, [x29, #-16]
  42756c:	ldr	x8, [x8]
  427570:	cbz	x8, 4275a0 <ascii_strlower_n@plt+0x23140>
  427574:	ldur	x8, [x29, #-16]
  427578:	ldr	x8, [x8]
  42757c:	ldr	x8, [x8, #8]
  427580:	cmp	x8, #0x0
  427584:	cset	w9, ls  // ls = plast
  427588:	tbnz	w9, #0, 4275a0 <ascii_strlower_n@plt+0x23140>
  42758c:	ldur	x8, [x29, #-16]
  427590:	ldr	x8, [x8]
  427594:	ldr	w9, [x8, #32]
  427598:	str	w9, [sp, #36]
  42759c:	b	4275a8 <ascii_strlower_n@plt+0x23148>
  4275a0:	mov	w8, wzr
  4275a4:	str	w8, [sp, #36]
  4275a8:	ldr	w8, [sp, #36]
  4275ac:	stur	w8, [x29, #-88]
  4275b0:	ldur	x9, [x29, #-16]
  4275b4:	ldr	x9, [x9]
  4275b8:	cbz	x9, 4275e8 <ascii_strlower_n@plt+0x23188>
  4275bc:	ldur	x8, [x29, #-16]
  4275c0:	ldr	x8, [x8]
  4275c4:	ldr	x8, [x8, #8]
  4275c8:	cmp	x8, #0x0
  4275cc:	cset	w9, ls  // ls = plast
  4275d0:	tbnz	w9, #0, 4275e8 <ascii_strlower_n@plt+0x23188>
  4275d4:	ldur	x8, [x29, #-16]
  4275d8:	ldr	x8, [x8]
  4275dc:	ldr	w9, [x8, #36]
  4275e0:	str	w9, [sp, #32]
  4275e4:	b	4275f0 <ascii_strlower_n@plt+0x23190>
  4275e8:	mov	w8, wzr
  4275ec:	str	w8, [sp, #32]
  4275f0:	ldr	w8, [sp, #32]
  4275f4:	stur	w8, [x29, #-84]
  4275f8:	str	wzr, [sp, #100]
  4275fc:	ldrsw	x9, [sp, #100]
  427600:	str	x9, [sp, #104]
  427604:	ldur	x8, [x29, #-16]
  427608:	ldr	x8, [x8]
  42760c:	mov	w9, #0x0                   	// #0
  427610:	str	w9, [sp, #28]
  427614:	cbz	x8, 427634 <ascii_strlower_n@plt+0x231d4>
  427618:	ldr	x8, [sp, #104]
  42761c:	ldur	x9, [x29, #-16]
  427620:	ldr	x9, [x9]
  427624:	ldr	x9, [x9, #8]
  427628:	cmp	x8, x9
  42762c:	cset	w10, cc  // cc = lo, ul, last
  427630:	str	w10, [sp, #28]
  427634:	ldr	w8, [sp, #28]
  427638:	tbnz	w8, #0, 427640 <ascii_strlower_n@plt+0x231e0>
  42763c:	b	4277c8 <ascii_strlower_n@plt+0x23368>
  427640:	ldur	x8, [x29, #-40]
  427644:	ldr	x0, [x8, #8]
  427648:	ldur	x1, [x29, #-24]
  42764c:	bl	41efe0 <ascii_strlower_n@plt+0x1ab80>
  427650:	stur	w0, [x29, #-52]
  427654:	ldur	w9, [x29, #-52]
  427658:	cmp	w9, #0x0
  42765c:	cset	w9, ge  // ge = tcont
  427660:	tbnz	w9, #0, 427678 <ascii_strlower_n@plt+0x23218>
  427664:	ldur	w8, [x29, #-52]
  427668:	stur	w8, [x29, #-4]
  42766c:	mov	w8, #0x1                   	// #1
  427670:	stur	w8, [x29, #-92]
  427674:	b	427804 <ascii_strlower_n@plt+0x233a4>
  427678:	ldur	w8, [x29, #-52]
  42767c:	cmp	w8, #0x0
  427680:	cset	w8, le
  427684:	tbnz	w8, #0, 42768c <ascii_strlower_n@plt+0x2322c>
  427688:	b	4276c8 <ascii_strlower_n@plt+0x23268>
  42768c:	ldur	x0, [x29, #-80]
  427690:	ldur	x1, [x29, #-40]
  427694:	ldur	w2, [x29, #-88]
  427698:	ldur	w3, [x29, #-84]
  42769c:	bl	425a48 <ascii_strlower_n@plt+0x215e8>
  4276a0:	stur	w0, [x29, #-52]
  4276a4:	ldur	w8, [x29, #-52]
  4276a8:	cmp	w8, #0x0
  4276ac:	cset	w8, ge  // ge = tcont
  4276b0:	tbnz	w8, #0, 4276c8 <ascii_strlower_n@plt+0x23268>
  4276b4:	ldur	w8, [x29, #-52]
  4276b8:	stur	w8, [x29, #-4]
  4276bc:	mov	w8, #0x1                   	// #1
  4276c0:	stur	w8, [x29, #-92]
  4276c4:	b	427804 <ascii_strlower_n@plt+0x233a4>
  4276c8:	ldr	x8, [sp, #104]
  4276cc:	add	x8, x8, #0x1
  4276d0:	str	x8, [sp, #104]
  4276d4:	ldr	x8, [sp, #104]
  4276d8:	ldur	x9, [x29, #-16]
  4276dc:	ldr	x9, [x9]
  4276e0:	ldr	x9, [x9, #8]
  4276e4:	cmp	x8, x9
  4276e8:	b.cs	427714 <ascii_strlower_n@plt+0x232b4>  // b.hs, b.nlast
  4276ec:	ldur	x8, [x29, #-16]
  4276f0:	ldr	x8, [x8]
  4276f4:	add	x8, x8, #0x18
  4276f8:	ldr	x9, [sp, #104]
  4276fc:	mov	x10, #0x10                  	// #16
  427700:	mul	x9, x10, x9
  427704:	add	x8, x8, x9
  427708:	ldr	x8, [x8]
  42770c:	str	x8, [sp, #16]
  427710:	b	42771c <ascii_strlower_n@plt+0x232bc>
  427714:	mov	x8, xzr
  427718:	str	x8, [sp, #16]
  42771c:	ldr	x8, [sp, #16]
  427720:	stur	x8, [x29, #-40]
  427724:	ldr	x8, [sp, #104]
  427728:	ldur	x9, [x29, #-16]
  42772c:	ldr	x9, [x9]
  427730:	ldr	x9, [x9, #8]
  427734:	cmp	x8, x9
  427738:	b.cs	427764 <ascii_strlower_n@plt+0x23304>  // b.hs, b.nlast
  42773c:	ldur	x8, [x29, #-16]
  427740:	ldr	x8, [x8]
  427744:	add	x8, x8, #0x18
  427748:	ldr	x9, [sp, #104]
  42774c:	mov	x10, #0x10                  	// #16
  427750:	mul	x9, x10, x9
  427754:	add	x8, x8, x9
  427758:	ldr	w11, [x8, #8]
  42775c:	str	w11, [sp, #12]
  427760:	b	42776c <ascii_strlower_n@plt+0x2330c>
  427764:	mov	w8, wzr
  427768:	str	w8, [sp, #12]
  42776c:	ldr	w8, [sp, #12]
  427770:	stur	w8, [x29, #-88]
  427774:	ldr	x9, [sp, #104]
  427778:	ldur	x10, [x29, #-16]
  42777c:	ldr	x10, [x10]
  427780:	ldr	x10, [x10, #8]
  427784:	cmp	x9, x10
  427788:	b.cs	4277b4 <ascii_strlower_n@plt+0x23354>  // b.hs, b.nlast
  42778c:	ldur	x8, [x29, #-16]
  427790:	ldr	x8, [x8]
  427794:	add	x8, x8, #0x18
  427798:	ldr	x9, [sp, #104]
  42779c:	mov	x10, #0x10                  	// #16
  4277a0:	mul	x9, x10, x9
  4277a4:	add	x8, x8, x9
  4277a8:	ldr	w11, [x8, #12]
  4277ac:	str	w11, [sp, #8]
  4277b0:	b	4277bc <ascii_strlower_n@plt+0x2335c>
  4277b4:	mov	w8, wzr
  4277b8:	str	w8, [sp, #8]
  4277bc:	ldr	w8, [sp, #8]
  4277c0:	stur	w8, [x29, #-84]
  4277c4:	b	427604 <ascii_strlower_n@plt+0x231a4>
  4277c8:	ldur	x8, [x29, #-16]
  4277cc:	ldr	x0, [x8]
  4277d0:	bl	425614 <ascii_strlower_n@plt+0x211b4>
  4277d4:	ldur	x8, [x29, #-80]
  4277d8:	str	x8, [sp, #88]
  4277dc:	mov	x8, xzr
  4277e0:	stur	x8, [x29, #-80]
  4277e4:	ldr	x8, [sp, #88]
  4277e8:	str	x8, [sp, #80]
  4277ec:	ldr	x8, [sp, #80]
  4277f0:	ldur	x9, [x29, #-16]
  4277f4:	str	x8, [x9]
  4277f8:	mov	w10, #0x1                   	// #1
  4277fc:	stur	w10, [x29, #-4]
  427800:	stur	w10, [x29, #-92]
  427804:	sub	x0, x29, #0x50
  427808:	bl	426cbc <ascii_strlower_n@plt+0x2285c>
  42780c:	b	427944 <ascii_strlower_n@plt+0x234e4>
  427810:	stur	xzr, [x29, #-48]
  427814:	ldur	x8, [x29, #-48]
  427818:	ldur	x9, [x29, #-16]
  42781c:	ldr	x9, [x9]
  427820:	ldr	x9, [x9, #8]
  427824:	cmp	x8, x9
  427828:	b.cc	427830 <ascii_strlower_n@plt+0x233d0>  // b.lo, b.ul, b.last
  42782c:	b	42793c <ascii_strlower_n@plt+0x234dc>
  427830:	ldur	x8, [x29, #-16]
  427834:	ldr	x8, [x8]
  427838:	add	x8, x8, #0x18
  42783c:	ldur	x9, [x29, #-48]
  427840:	mov	x10, #0x10                  	// #16
  427844:	mul	x9, x10, x9
  427848:	add	x8, x8, x9
  42784c:	ldr	x8, [x8]
  427850:	ldr	x0, [x8, #8]
  427854:	ldur	x1, [x29, #-24]
  427858:	bl	41efe0 <ascii_strlower_n@plt+0x1ab80>
  42785c:	stur	w0, [x29, #-52]
  427860:	ldur	w11, [x29, #-52]
  427864:	cmp	w11, #0x0
  427868:	cset	w11, ge  // ge = tcont
  42786c:	tbnz	w11, #0, 42787c <ascii_strlower_n@plt+0x2341c>
  427870:	ldur	w8, [x29, #-52]
  427874:	stur	w8, [x29, #-4]
  427878:	b	427944 <ascii_strlower_n@plt+0x234e4>
  42787c:	ldur	w8, [x29, #-52]
  427880:	cmp	w8, #0x0
  427884:	cset	w8, le
  427888:	tbnz	w8, #0, 42792c <ascii_strlower_n@plt+0x234cc>
  42788c:	ldur	x8, [x29, #-16]
  427890:	ldr	x8, [x8]
  427894:	add	x8, x8, #0x18
  427898:	ldur	x9, [x29, #-48]
  42789c:	mov	x10, #0x10                  	// #16
  4278a0:	mul	x9, x10, x9
  4278a4:	add	x8, x8, x9
  4278a8:	ldr	x0, [x8]
  4278ac:	str	x10, [sp]
  4278b0:	bl	41fed8 <ascii_strlower_n@plt+0x1ba78>
  4278b4:	ldur	x8, [x29, #-16]
  4278b8:	ldr	x8, [x8]
  4278bc:	add	x8, x8, #0x18
  4278c0:	ldur	x9, [x29, #-48]
  4278c4:	ldr	x10, [sp]
  4278c8:	mul	x9, x10, x9
  4278cc:	add	x8, x8, x9
  4278d0:	ldur	x9, [x29, #-16]
  4278d4:	ldr	x9, [x9]
  4278d8:	add	x9, x9, #0x18
  4278dc:	ldur	x11, [x29, #-48]
  4278e0:	mul	x11, x10, x11
  4278e4:	add	x9, x9, x11
  4278e8:	add	x1, x9, #0x10
  4278ec:	ldur	x9, [x29, #-16]
  4278f0:	ldr	x9, [x9]
  4278f4:	ldr	x9, [x9, #8]
  4278f8:	ldur	x11, [x29, #-48]
  4278fc:	subs	x9, x9, x11
  427900:	subs	x9, x9, #0x1
  427904:	mov	x11, #0x10                  	// #16
  427908:	mul	x2, x11, x9
  42790c:	mov	x0, x8
  427910:	bl	404410 <memmove@plt>
  427914:	ldur	x8, [x29, #-16]
  427918:	ldr	x8, [x8]
  42791c:	ldr	x9, [x8, #8]
  427920:	subs	x9, x9, #0x1
  427924:	str	x9, [x8, #8]
  427928:	b	427814 <ascii_strlower_n@plt+0x233b4>
  42792c:	ldur	x8, [x29, #-48]
  427930:	add	x8, x8, #0x1
  427934:	stur	x8, [x29, #-48]
  427938:	b	427814 <ascii_strlower_n@plt+0x233b4>
  42793c:	mov	w8, #0x1                   	// #1
  427940:	stur	w8, [x29, #-4]
  427944:	ldur	w0, [x29, #-4]
  427948:	ldp	x29, x30, [sp, #208]
  42794c:	add	sp, sp, #0xe0
  427950:	ret
  427954:	sub	sp, sp, #0xe0
  427958:	stp	x29, x30, [sp, #208]
  42795c:	add	x29, sp, #0xd0
  427960:	mov	w8, #0x0                   	// #0
  427964:	adrp	x9, 432000 <ascii_strlower_n@plt+0x2dba0>
  427968:	add	x9, x9, #0x7c4
  42796c:	add	x9, x9, #0x3
  427970:	stur	x0, [x29, #-16]
  427974:	stur	x1, [x29, #-24]
  427978:	sturb	w8, [x29, #-25]
  42797c:	sturb	w8, [x29, #-26]
  427980:	str	x9, [sp, #72]
  427984:	ldur	x8, [x29, #-16]
  427988:	cmp	x8, #0x0
  42798c:	cset	w9, ne  // ne = any
  427990:	mov	w10, #0x1                   	// #1
  427994:	eor	w9, w9, #0x1
  427998:	eor	w9, w9, w10
  42799c:	eor	w9, w9, w10
  4279a0:	and	w9, w9, #0x1
  4279a4:	mov	w0, w9
  4279a8:	sxtw	x8, w0
  4279ac:	cbz	x8, 4279d4 <ascii_strlower_n@plt+0x23574>
  4279b0:	mov	w8, wzr
  4279b4:	mov	w0, w8
  4279b8:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  4279bc:	add	x1, x1, #0xeb8
  4279c0:	ldr	x2, [sp, #72]
  4279c4:	mov	w3, #0x1c7                 	// #455
  4279c8:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4279cc:	add	x4, x4, #0xab1
  4279d0:	bl	4039d0 <log_assert_failed_realm@plt>
  4279d4:	ldur	x8, [x29, #-24]
  4279d8:	cmp	x8, #0x0
  4279dc:	cset	w9, ne  // ne = any
  4279e0:	mov	w10, #0x1                   	// #1
  4279e4:	eor	w9, w9, #0x1
  4279e8:	eor	w9, w9, w10
  4279ec:	eor	w9, w9, w10
  4279f0:	and	w9, w9, #0x1
  4279f4:	mov	w0, w9
  4279f8:	sxtw	x8, w0
  4279fc:	cbz	x8, 427a24 <ascii_strlower_n@plt+0x235c4>
  427a00:	mov	w8, wzr
  427a04:	mov	w0, w8
  427a08:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  427a0c:	add	x1, x1, #0xaf0
  427a10:	ldr	x2, [sp, #72]
  427a14:	mov	w3, #0x1c8                 	// #456
  427a18:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  427a1c:	add	x4, x4, #0xab1
  427a20:	bl	4039d0 <log_assert_failed_realm@plt>
  427a24:	ldur	x8, [x29, #-16]
  427a28:	ldr	x8, [x8]
  427a2c:	cbz	x8, 427a5c <ascii_strlower_n@plt+0x235fc>
  427a30:	ldur	x8, [x29, #-16]
  427a34:	ldr	x8, [x8]
  427a38:	ldr	x8, [x8, #8]
  427a3c:	cmp	x8, #0x0
  427a40:	cset	w9, ls  // ls = plast
  427a44:	tbnz	w9, #0, 427a5c <ascii_strlower_n@plt+0x235fc>
  427a48:	ldur	x8, [x29, #-16]
  427a4c:	ldr	x8, [x8]
  427a50:	ldr	x8, [x8, #24]
  427a54:	str	x8, [sp, #64]
  427a58:	b	427a64 <ascii_strlower_n@plt+0x23604>
  427a5c:	mov	x8, xzr
  427a60:	str	x8, [sp, #64]
  427a64:	ldr	x8, [sp, #64]
  427a68:	stur	x8, [x29, #-40]
  427a6c:	stur	wzr, [x29, #-68]
  427a70:	ldursw	x8, [x29, #-68]
  427a74:	stur	x8, [x29, #-64]
  427a78:	ldur	x8, [x29, #-16]
  427a7c:	ldr	x8, [x8]
  427a80:	mov	w9, #0x0                   	// #0
  427a84:	str	w9, [sp, #60]
  427a88:	cbz	x8, 427aa8 <ascii_strlower_n@plt+0x23648>
  427a8c:	ldur	x8, [x29, #-64]
  427a90:	ldur	x9, [x29, #-16]
  427a94:	ldr	x9, [x9]
  427a98:	ldr	x9, [x9, #8]
  427a9c:	cmp	x8, x9
  427aa0:	cset	w10, cc  // cc = lo, ul, last
  427aa4:	str	w10, [sp, #60]
  427aa8:	ldr	w8, [sp, #60]
  427aac:	tbnz	w8, #0, 427ab4 <ascii_strlower_n@plt+0x23654>
  427ab0:	b	427b80 <ascii_strlower_n@plt+0x23720>
  427ab4:	ldur	x0, [x29, #-40]
  427ab8:	ldur	x1, [x29, #-24]
  427abc:	bl	421628 <ascii_strlower_n@plt+0x1d1c8>
  427ac0:	stur	w0, [x29, #-52]
  427ac4:	ldur	w8, [x29, #-52]
  427ac8:	cmp	w8, #0x0
  427acc:	cset	w8, ge  // ge = tcont
  427ad0:	tbnz	w8, #0, 427ae0 <ascii_strlower_n@plt+0x23680>
  427ad4:	ldur	w8, [x29, #-52]
  427ad8:	stur	w8, [x29, #-4]
  427adc:	b	428020 <ascii_strlower_n@plt+0x23bc0>
  427ae0:	ldur	w8, [x29, #-52]
  427ae4:	cmp	w8, #0x0
  427ae8:	cset	w8, le
  427aec:	tbnz	w8, #0, 427afc <ascii_strlower_n@plt+0x2369c>
  427af0:	mov	w8, #0x1                   	// #1
  427af4:	sturb	w8, [x29, #-25]
  427af8:	b	427b04 <ascii_strlower_n@plt+0x236a4>
  427afc:	mov	w8, #0x1                   	// #1
  427b00:	sturb	w8, [x29, #-26]
  427b04:	ldurb	w8, [x29, #-25]
  427b08:	tbnz	w8, #0, 427b10 <ascii_strlower_n@plt+0x236b0>
  427b0c:	b	427b20 <ascii_strlower_n@plt+0x236c0>
  427b10:	ldurb	w8, [x29, #-26]
  427b14:	tbnz	w8, #0, 427b1c <ascii_strlower_n@plt+0x236bc>
  427b18:	b	427b20 <ascii_strlower_n@plt+0x236c0>
  427b1c:	b	427b80 <ascii_strlower_n@plt+0x23720>
  427b20:	ldur	x8, [x29, #-64]
  427b24:	add	x8, x8, #0x1
  427b28:	stur	x8, [x29, #-64]
  427b2c:	ldur	x8, [x29, #-64]
  427b30:	ldur	x9, [x29, #-16]
  427b34:	ldr	x9, [x9]
  427b38:	ldr	x9, [x9, #8]
  427b3c:	cmp	x8, x9
  427b40:	b.cs	427b6c <ascii_strlower_n@plt+0x2370c>  // b.hs, b.nlast
  427b44:	ldur	x8, [x29, #-16]
  427b48:	ldr	x8, [x8]
  427b4c:	add	x8, x8, #0x18
  427b50:	ldur	x9, [x29, #-64]
  427b54:	mov	x10, #0x10                  	// #16
  427b58:	mul	x9, x10, x9
  427b5c:	add	x8, x8, x9
  427b60:	ldr	x8, [x8]
  427b64:	str	x8, [sp, #48]
  427b68:	b	427b74 <ascii_strlower_n@plt+0x23714>
  427b6c:	mov	x8, xzr
  427b70:	str	x8, [sp, #48]
  427b74:	ldr	x8, [sp, #48]
  427b78:	stur	x8, [x29, #-40]
  427b7c:	b	427a78 <ascii_strlower_n@plt+0x23618>
  427b80:	ldurb	w8, [x29, #-25]
  427b84:	tbnz	w8, #0, 427b90 <ascii_strlower_n@plt+0x23730>
  427b88:	stur	wzr, [x29, #-4]
  427b8c:	b	428020 <ascii_strlower_n@plt+0x23bc0>
  427b90:	ldurb	w8, [x29, #-26]
  427b94:	tbnz	w8, #0, 427bb8 <ascii_strlower_n@plt+0x23758>
  427b98:	ldur	x8, [x29, #-16]
  427b9c:	ldr	x0, [x8]
  427ba0:	bl	425614 <ascii_strlower_n@plt+0x211b4>
  427ba4:	ldur	x8, [x29, #-16]
  427ba8:	str	x0, [x8]
  427bac:	mov	w9, #0x1                   	// #1
  427bb0:	stur	w9, [x29, #-4]
  427bb4:	b	428020 <ascii_strlower_n@plt+0x23bc0>
  427bb8:	ldur	x8, [x29, #-16]
  427bbc:	ldr	x8, [x8]
  427bc0:	ldr	w9, [x8]
  427bc4:	cmp	w9, #0x1
  427bc8:	b.ls	427ef0 <ascii_strlower_n@plt+0x23a90>  // b.plast
  427bcc:	mov	x8, xzr
  427bd0:	stur	x8, [x29, #-80]
  427bd4:	ldur	x8, [x29, #-16]
  427bd8:	ldr	x8, [x8]
  427bdc:	ldr	x0, [x8, #8]
  427be0:	bl	4254f0 <ascii_strlower_n@plt+0x21090>
  427be4:	stur	x0, [x29, #-80]
  427be8:	ldur	x8, [x29, #-80]
  427bec:	cbnz	x8, 427c04 <ascii_strlower_n@plt+0x237a4>
  427bf0:	mov	w8, #0xfffffff4            	// #-12
  427bf4:	stur	w8, [x29, #-4]
  427bf8:	mov	w8, #0x1                   	// #1
  427bfc:	stur	w8, [x29, #-92]
  427c00:	b	427ee4 <ascii_strlower_n@plt+0x23a84>
  427c04:	ldur	x8, [x29, #-16]
  427c08:	ldr	x8, [x8]
  427c0c:	cbz	x8, 427c3c <ascii_strlower_n@plt+0x237dc>
  427c10:	ldur	x8, [x29, #-16]
  427c14:	ldr	x8, [x8]
  427c18:	ldr	x8, [x8, #8]
  427c1c:	cmp	x8, #0x0
  427c20:	cset	w9, ls  // ls = plast
  427c24:	tbnz	w9, #0, 427c3c <ascii_strlower_n@plt+0x237dc>
  427c28:	ldur	x8, [x29, #-16]
  427c2c:	ldr	x8, [x8]
  427c30:	ldr	x8, [x8, #24]
  427c34:	str	x8, [sp, #40]
  427c38:	b	427c44 <ascii_strlower_n@plt+0x237e4>
  427c3c:	mov	x8, xzr
  427c40:	str	x8, [sp, #40]
  427c44:	ldr	x8, [sp, #40]
  427c48:	stur	x8, [x29, #-40]
  427c4c:	ldur	x8, [x29, #-16]
  427c50:	ldr	x8, [x8]
  427c54:	cbz	x8, 427c84 <ascii_strlower_n@plt+0x23824>
  427c58:	ldur	x8, [x29, #-16]
  427c5c:	ldr	x8, [x8]
  427c60:	ldr	x8, [x8, #8]
  427c64:	cmp	x8, #0x0
  427c68:	cset	w9, ls  // ls = plast
  427c6c:	tbnz	w9, #0, 427c84 <ascii_strlower_n@plt+0x23824>
  427c70:	ldur	x8, [x29, #-16]
  427c74:	ldr	x8, [x8]
  427c78:	ldr	w9, [x8, #32]
  427c7c:	str	w9, [sp, #36]
  427c80:	b	427c8c <ascii_strlower_n@plt+0x2382c>
  427c84:	mov	w8, wzr
  427c88:	str	w8, [sp, #36]
  427c8c:	ldr	w8, [sp, #36]
  427c90:	stur	w8, [x29, #-88]
  427c94:	ldur	x9, [x29, #-16]
  427c98:	ldr	x9, [x9]
  427c9c:	cbz	x9, 427ccc <ascii_strlower_n@plt+0x2386c>
  427ca0:	ldur	x8, [x29, #-16]
  427ca4:	ldr	x8, [x8]
  427ca8:	ldr	x8, [x8, #8]
  427cac:	cmp	x8, #0x0
  427cb0:	cset	w9, ls  // ls = plast
  427cb4:	tbnz	w9, #0, 427ccc <ascii_strlower_n@plt+0x2386c>
  427cb8:	ldur	x8, [x29, #-16]
  427cbc:	ldr	x8, [x8]
  427cc0:	ldr	w9, [x8, #36]
  427cc4:	str	w9, [sp, #32]
  427cc8:	b	427cd4 <ascii_strlower_n@plt+0x23874>
  427ccc:	mov	w8, wzr
  427cd0:	str	w8, [sp, #32]
  427cd4:	ldr	w8, [sp, #32]
  427cd8:	stur	w8, [x29, #-84]
  427cdc:	str	wzr, [sp, #100]
  427ce0:	ldrsw	x9, [sp, #100]
  427ce4:	str	x9, [sp, #104]
  427ce8:	ldur	x8, [x29, #-16]
  427cec:	ldr	x8, [x8]
  427cf0:	mov	w9, #0x0                   	// #0
  427cf4:	str	w9, [sp, #28]
  427cf8:	cbz	x8, 427d18 <ascii_strlower_n@plt+0x238b8>
  427cfc:	ldr	x8, [sp, #104]
  427d00:	ldur	x9, [x29, #-16]
  427d04:	ldr	x9, [x9]
  427d08:	ldr	x9, [x9, #8]
  427d0c:	cmp	x8, x9
  427d10:	cset	w10, cc  // cc = lo, ul, last
  427d14:	str	w10, [sp, #28]
  427d18:	ldr	w8, [sp, #28]
  427d1c:	tbnz	w8, #0, 427d24 <ascii_strlower_n@plt+0x238c4>
  427d20:	b	427ea8 <ascii_strlower_n@plt+0x23a48>
  427d24:	ldur	x0, [x29, #-40]
  427d28:	ldur	x1, [x29, #-24]
  427d2c:	bl	421628 <ascii_strlower_n@plt+0x1d1c8>
  427d30:	stur	w0, [x29, #-52]
  427d34:	ldur	w8, [x29, #-52]
  427d38:	cmp	w8, #0x0
  427d3c:	cset	w8, ge  // ge = tcont
  427d40:	tbnz	w8, #0, 427d58 <ascii_strlower_n@plt+0x238f8>
  427d44:	ldur	w8, [x29, #-52]
  427d48:	stur	w8, [x29, #-4]
  427d4c:	mov	w8, #0x1                   	// #1
  427d50:	stur	w8, [x29, #-92]
  427d54:	b	427ee4 <ascii_strlower_n@plt+0x23a84>
  427d58:	ldur	w8, [x29, #-52]
  427d5c:	cmp	w8, #0x0
  427d60:	cset	w8, le
  427d64:	tbnz	w8, #0, 427d6c <ascii_strlower_n@plt+0x2390c>
  427d68:	b	427da8 <ascii_strlower_n@plt+0x23948>
  427d6c:	ldur	x0, [x29, #-80]
  427d70:	ldur	x1, [x29, #-40]
  427d74:	ldur	w2, [x29, #-88]
  427d78:	ldur	w3, [x29, #-84]
  427d7c:	bl	425a48 <ascii_strlower_n@plt+0x215e8>
  427d80:	stur	w0, [x29, #-52]
  427d84:	ldur	w8, [x29, #-52]
  427d88:	cmp	w8, #0x0
  427d8c:	cset	w8, ge  // ge = tcont
  427d90:	tbnz	w8, #0, 427da8 <ascii_strlower_n@plt+0x23948>
  427d94:	ldur	w8, [x29, #-52]
  427d98:	stur	w8, [x29, #-4]
  427d9c:	mov	w8, #0x1                   	// #1
  427da0:	stur	w8, [x29, #-92]
  427da4:	b	427ee4 <ascii_strlower_n@plt+0x23a84>
  427da8:	ldr	x8, [sp, #104]
  427dac:	add	x8, x8, #0x1
  427db0:	str	x8, [sp, #104]
  427db4:	ldr	x8, [sp, #104]
  427db8:	ldur	x9, [x29, #-16]
  427dbc:	ldr	x9, [x9]
  427dc0:	ldr	x9, [x9, #8]
  427dc4:	cmp	x8, x9
  427dc8:	b.cs	427df4 <ascii_strlower_n@plt+0x23994>  // b.hs, b.nlast
  427dcc:	ldur	x8, [x29, #-16]
  427dd0:	ldr	x8, [x8]
  427dd4:	add	x8, x8, #0x18
  427dd8:	ldr	x9, [sp, #104]
  427ddc:	mov	x10, #0x10                  	// #16
  427de0:	mul	x9, x10, x9
  427de4:	add	x8, x8, x9
  427de8:	ldr	x8, [x8]
  427dec:	str	x8, [sp, #16]
  427df0:	b	427dfc <ascii_strlower_n@plt+0x2399c>
  427df4:	mov	x8, xzr
  427df8:	str	x8, [sp, #16]
  427dfc:	ldr	x8, [sp, #16]
  427e00:	stur	x8, [x29, #-40]
  427e04:	ldr	x8, [sp, #104]
  427e08:	ldur	x9, [x29, #-16]
  427e0c:	ldr	x9, [x9]
  427e10:	ldr	x9, [x9, #8]
  427e14:	cmp	x8, x9
  427e18:	b.cs	427e44 <ascii_strlower_n@plt+0x239e4>  // b.hs, b.nlast
  427e1c:	ldur	x8, [x29, #-16]
  427e20:	ldr	x8, [x8]
  427e24:	add	x8, x8, #0x18
  427e28:	ldr	x9, [sp, #104]
  427e2c:	mov	x10, #0x10                  	// #16
  427e30:	mul	x9, x10, x9
  427e34:	add	x8, x8, x9
  427e38:	ldr	w11, [x8, #8]
  427e3c:	str	w11, [sp, #12]
  427e40:	b	427e4c <ascii_strlower_n@plt+0x239ec>
  427e44:	mov	w8, wzr
  427e48:	str	w8, [sp, #12]
  427e4c:	ldr	w8, [sp, #12]
  427e50:	stur	w8, [x29, #-88]
  427e54:	ldr	x9, [sp, #104]
  427e58:	ldur	x10, [x29, #-16]
  427e5c:	ldr	x10, [x10]
  427e60:	ldr	x10, [x10, #8]
  427e64:	cmp	x9, x10
  427e68:	b.cs	427e94 <ascii_strlower_n@plt+0x23a34>  // b.hs, b.nlast
  427e6c:	ldur	x8, [x29, #-16]
  427e70:	ldr	x8, [x8]
  427e74:	add	x8, x8, #0x18
  427e78:	ldr	x9, [sp, #104]
  427e7c:	mov	x10, #0x10                  	// #16
  427e80:	mul	x9, x10, x9
  427e84:	add	x8, x8, x9
  427e88:	ldr	w11, [x8, #12]
  427e8c:	str	w11, [sp, #8]
  427e90:	b	427e9c <ascii_strlower_n@plt+0x23a3c>
  427e94:	mov	w8, wzr
  427e98:	str	w8, [sp, #8]
  427e9c:	ldr	w8, [sp, #8]
  427ea0:	stur	w8, [x29, #-84]
  427ea4:	b	427ce8 <ascii_strlower_n@plt+0x23888>
  427ea8:	ldur	x8, [x29, #-16]
  427eac:	ldr	x0, [x8]
  427eb0:	bl	425614 <ascii_strlower_n@plt+0x211b4>
  427eb4:	ldur	x8, [x29, #-80]
  427eb8:	str	x8, [sp, #88]
  427ebc:	mov	x8, xzr
  427ec0:	stur	x8, [x29, #-80]
  427ec4:	ldr	x8, [sp, #88]
  427ec8:	str	x8, [sp, #80]
  427ecc:	ldr	x8, [sp, #80]
  427ed0:	ldur	x9, [x29, #-16]
  427ed4:	str	x8, [x9]
  427ed8:	mov	w10, #0x1                   	// #1
  427edc:	stur	w10, [x29, #-4]
  427ee0:	stur	w10, [x29, #-92]
  427ee4:	sub	x0, x29, #0x50
  427ee8:	bl	426cbc <ascii_strlower_n@plt+0x2285c>
  427eec:	b	428020 <ascii_strlower_n@plt+0x23bc0>
  427ef0:	stur	xzr, [x29, #-48]
  427ef4:	ldur	x8, [x29, #-48]
  427ef8:	ldur	x9, [x29, #-16]
  427efc:	ldr	x9, [x9]
  427f00:	ldr	x9, [x9, #8]
  427f04:	cmp	x8, x9
  427f08:	b.cc	427f10 <ascii_strlower_n@plt+0x23ab0>  // b.lo, b.ul, b.last
  427f0c:	b	428018 <ascii_strlower_n@plt+0x23bb8>
  427f10:	ldur	x8, [x29, #-16]
  427f14:	ldr	x8, [x8]
  427f18:	add	x8, x8, #0x18
  427f1c:	ldur	x9, [x29, #-48]
  427f20:	mov	x10, #0x10                  	// #16
  427f24:	mul	x9, x10, x9
  427f28:	add	x8, x8, x9
  427f2c:	ldr	x0, [x8]
  427f30:	ldur	x1, [x29, #-24]
  427f34:	bl	421628 <ascii_strlower_n@plt+0x1d1c8>
  427f38:	stur	w0, [x29, #-52]
  427f3c:	ldur	w11, [x29, #-52]
  427f40:	cmp	w11, #0x0
  427f44:	cset	w11, ge  // ge = tcont
  427f48:	tbnz	w11, #0, 427f58 <ascii_strlower_n@plt+0x23af8>
  427f4c:	ldur	w8, [x29, #-52]
  427f50:	stur	w8, [x29, #-4]
  427f54:	b	428020 <ascii_strlower_n@plt+0x23bc0>
  427f58:	ldur	w8, [x29, #-52]
  427f5c:	cmp	w8, #0x0
  427f60:	cset	w8, le
  427f64:	tbnz	w8, #0, 428008 <ascii_strlower_n@plt+0x23ba8>
  427f68:	ldur	x8, [x29, #-16]
  427f6c:	ldr	x8, [x8]
  427f70:	add	x8, x8, #0x18
  427f74:	ldur	x9, [x29, #-48]
  427f78:	mov	x10, #0x10                  	// #16
  427f7c:	mul	x9, x10, x9
  427f80:	add	x8, x8, x9
  427f84:	ldr	x0, [x8]
  427f88:	str	x10, [sp]
  427f8c:	bl	41fed8 <ascii_strlower_n@plt+0x1ba78>
  427f90:	ldur	x8, [x29, #-16]
  427f94:	ldr	x8, [x8]
  427f98:	add	x8, x8, #0x18
  427f9c:	ldur	x9, [x29, #-48]
  427fa0:	ldr	x10, [sp]
  427fa4:	mul	x9, x10, x9
  427fa8:	add	x8, x8, x9
  427fac:	ldur	x9, [x29, #-16]
  427fb0:	ldr	x9, [x9]
  427fb4:	add	x9, x9, #0x18
  427fb8:	ldur	x11, [x29, #-48]
  427fbc:	mul	x11, x10, x11
  427fc0:	add	x9, x9, x11
  427fc4:	add	x1, x9, #0x10
  427fc8:	ldur	x9, [x29, #-16]
  427fcc:	ldr	x9, [x9]
  427fd0:	ldr	x9, [x9, #8]
  427fd4:	ldur	x11, [x29, #-48]
  427fd8:	subs	x9, x9, x11
  427fdc:	subs	x9, x9, #0x1
  427fe0:	mov	x11, #0x10                  	// #16
  427fe4:	mul	x2, x11, x9
  427fe8:	mov	x0, x8
  427fec:	bl	404410 <memmove@plt>
  427ff0:	ldur	x8, [x29, #-16]
  427ff4:	ldr	x8, [x8]
  427ff8:	ldr	x9, [x8, #8]
  427ffc:	subs	x9, x9, #0x1
  428000:	str	x9, [x8, #8]
  428004:	b	427ef4 <ascii_strlower_n@plt+0x23a94>
  428008:	ldur	x8, [x29, #-48]
  42800c:	add	x8, x8, #0x1
  428010:	stur	x8, [x29, #-48]
  428014:	b	427ef4 <ascii_strlower_n@plt+0x23a94>
  428018:	mov	w8, #0x1                   	// #1
  42801c:	stur	w8, [x29, #-4]
  428020:	ldur	w0, [x29, #-4]
  428024:	ldp	x29, x30, [sp, #208]
  428028:	add	sp, sp, #0xe0
  42802c:	ret
  428030:	sub	sp, sp, #0x90
  428034:	stp	x29, x30, [sp, #128]
  428038:	add	x29, sp, #0x80
  42803c:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  428040:	add	x8, x8, #0x7c4
  428044:	add	x8, x8, #0x3
  428048:	stur	x0, [x29, #-16]
  42804c:	stur	x1, [x29, #-24]
  428050:	stur	x2, [x29, #-32]
  428054:	stur	w3, [x29, #-36]
  428058:	str	x8, [sp, #40]
  42805c:	ldur	x8, [x29, #-16]
  428060:	cmp	x8, #0x0
  428064:	cset	w9, ne  // ne = any
  428068:	mov	w10, #0x1                   	// #1
  42806c:	eor	w9, w9, #0x1
  428070:	eor	w9, w9, w10
  428074:	eor	w9, w9, w10
  428078:	and	w9, w9, #0x1
  42807c:	mov	w0, w9
  428080:	sxtw	x8, w0
  428084:	cbz	x8, 4280ac <ascii_strlower_n@plt+0x23c4c>
  428088:	mov	w8, wzr
  42808c:	mov	w0, w8
  428090:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  428094:	add	x1, x1, #0xeb8
  428098:	ldr	x2, [sp, #40]
  42809c:	mov	w3, #0x21b                 	// #539
  4280a0:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4280a4:	add	x4, x4, #0xaf3
  4280a8:	bl	4039d0 <log_assert_failed_realm@plt>
  4280ac:	ldur	x8, [x29, #-32]
  4280b0:	cmp	x8, #0x0
  4280b4:	cset	w9, ne  // ne = any
  4280b8:	mov	w10, #0x1                   	// #1
  4280bc:	eor	w9, w9, #0x1
  4280c0:	eor	w9, w9, w10
  4280c4:	eor	w9, w9, w10
  4280c8:	and	w9, w9, #0x1
  4280cc:	mov	w0, w9
  4280d0:	sxtw	x8, w0
  4280d4:	cbz	x8, 4280fc <ascii_strlower_n@plt+0x23c9c>
  4280d8:	mov	w8, wzr
  4280dc:	mov	w0, w8
  4280e0:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  4280e4:	add	x1, x1, #0x5c2
  4280e8:	ldr	x2, [sp, #40]
  4280ec:	mov	w3, #0x21c                 	// #540
  4280f0:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4280f4:	add	x4, x4, #0xaf3
  4280f8:	bl	4039d0 <log_assert_failed_realm@plt>
  4280fc:	ldur	x8, [x29, #-24]
  428100:	cbz	x8, 428128 <ascii_strlower_n@plt+0x23cc8>
  428104:	ldur	x8, [x29, #-24]
  428108:	ldr	x8, [x8, #8]
  42810c:	cmp	x8, #0x0
  428110:	cset	w9, ls  // ls = plast
  428114:	tbnz	w9, #0, 428128 <ascii_strlower_n@plt+0x23cc8>
  428118:	ldur	x8, [x29, #-24]
  42811c:	ldr	x8, [x8, #24]
  428120:	str	x8, [sp, #32]
  428124:	b	428130 <ascii_strlower_n@plt+0x23cd0>
  428128:	mov	x8, xzr
  42812c:	str	x8, [sp, #32]
  428130:	ldr	x8, [sp, #32]
  428134:	stur	x8, [x29, #-48]
  428138:	ldur	x8, [x29, #-24]
  42813c:	cbz	x8, 428164 <ascii_strlower_n@plt+0x23d04>
  428140:	ldur	x8, [x29, #-24]
  428144:	ldr	x8, [x8, #8]
  428148:	cmp	x8, #0x0
  42814c:	cset	w9, ls  // ls = plast
  428150:	tbnz	w9, #0, 428164 <ascii_strlower_n@plt+0x23d04>
  428154:	ldur	x8, [x29, #-24]
  428158:	ldr	w9, [x8, #32]
  42815c:	str	w9, [sp, #28]
  428160:	b	42816c <ascii_strlower_n@plt+0x23d0c>
  428164:	mov	w8, wzr
  428168:	str	w8, [sp, #28]
  42816c:	ldr	w8, [sp, #28]
  428170:	stur	w8, [x29, #-52]
  428174:	ldur	x9, [x29, #-24]
  428178:	cbz	x9, 4281a0 <ascii_strlower_n@plt+0x23d40>
  42817c:	ldur	x8, [x29, #-24]
  428180:	ldr	x8, [x8, #8]
  428184:	cmp	x8, #0x0
  428188:	cset	w9, ls  // ls = plast
  42818c:	tbnz	w9, #0, 4281a0 <ascii_strlower_n@plt+0x23d40>
  428190:	ldur	x8, [x29, #-24]
  428194:	ldr	w9, [x8, #36]
  428198:	str	w9, [sp, #24]
  42819c:	b	4281a8 <ascii_strlower_n@plt+0x23d48>
  4281a0:	mov	w8, wzr
  4281a4:	str	w8, [sp, #24]
  4281a8:	ldr	w8, [sp, #24]
  4281ac:	stur	w8, [x29, #-60]
  4281b0:	str	wzr, [sp, #52]
  4281b4:	ldrsw	x9, [sp, #52]
  4281b8:	str	x9, [sp, #56]
  4281bc:	ldur	x8, [x29, #-24]
  4281c0:	mov	w9, #0x0                   	// #0
  4281c4:	str	w9, [sp, #20]
  4281c8:	cbz	x8, 4281e4 <ascii_strlower_n@plt+0x23d84>
  4281cc:	ldr	x8, [sp, #56]
  4281d0:	ldur	x9, [x29, #-24]
  4281d4:	ldr	x9, [x9, #8]
  4281d8:	cmp	x8, x9
  4281dc:	cset	w10, cc  // cc = lo, ul, last
  4281e0:	str	w10, [sp, #20]
  4281e4:	ldr	w8, [sp, #20]
  4281e8:	tbnz	w8, #0, 4281f0 <ascii_strlower_n@plt+0x23d90>
  4281ec:	b	428380 <ascii_strlower_n@plt+0x23f20>
  4281f0:	ldur	x8, [x29, #-48]
  4281f4:	ldr	x0, [x8, #8]
  4281f8:	ldur	x1, [x29, #-32]
  4281fc:	bl	41efe0 <ascii_strlower_n@plt+0x1ab80>
  428200:	stur	w0, [x29, #-56]
  428204:	ldur	w9, [x29, #-56]
  428208:	cmp	w9, #0x0
  42820c:	cset	w9, ge  // ge = tcont
  428210:	tbnz	w9, #0, 428220 <ascii_strlower_n@plt+0x23dc0>
  428214:	ldur	w8, [x29, #-56]
  428218:	stur	w8, [x29, #-4]
  42821c:	b	428384 <ascii_strlower_n@plt+0x23f24>
  428220:	ldur	w8, [x29, #-56]
  428224:	cbnz	w8, 42822c <ascii_strlower_n@plt+0x23dcc>
  428228:	b	428298 <ascii_strlower_n@plt+0x23e38>
  42822c:	ldur	x0, [x29, #-16]
  428230:	mov	x1, #0x1                   	// #1
  428234:	bl	425c84 <ascii_strlower_n@plt+0x21824>
  428238:	stur	w0, [x29, #-56]
  42823c:	ldur	w8, [x29, #-56]
  428240:	cmp	w8, #0x0
  428244:	cset	w8, ge  // ge = tcont
  428248:	tbnz	w8, #0, 428258 <ascii_strlower_n@plt+0x23df8>
  42824c:	ldur	w8, [x29, #-56]
  428250:	stur	w8, [x29, #-4]
  428254:	b	428384 <ascii_strlower_n@plt+0x23f24>
  428258:	ldur	x8, [x29, #-16]
  42825c:	ldr	x0, [x8]
  428260:	ldur	x1, [x29, #-48]
  428264:	ldur	w2, [x29, #-52]
  428268:	ldur	w9, [x29, #-60]
  42826c:	ldur	w10, [x29, #-36]
  428270:	orr	w3, w9, w10
  428274:	bl	425774 <ascii_strlower_n@plt+0x21314>
  428278:	stur	w0, [x29, #-56]
  42827c:	ldur	w9, [x29, #-56]
  428280:	cmp	w9, #0x0
  428284:	cset	w9, ge  // ge = tcont
  428288:	tbnz	w9, #0, 428298 <ascii_strlower_n@plt+0x23e38>
  42828c:	ldur	w8, [x29, #-56]
  428290:	stur	w8, [x29, #-4]
  428294:	b	428384 <ascii_strlower_n@plt+0x23f24>
  428298:	ldr	x8, [sp, #56]
  42829c:	add	x8, x8, #0x1
  4282a0:	str	x8, [sp, #56]
  4282a4:	ldr	x8, [sp, #56]
  4282a8:	ldur	x9, [x29, #-24]
  4282ac:	ldr	x9, [x9, #8]
  4282b0:	cmp	x8, x9
  4282b4:	b.cs	4282dc <ascii_strlower_n@plt+0x23e7c>  // b.hs, b.nlast
  4282b8:	ldur	x8, [x29, #-24]
  4282bc:	add	x8, x8, #0x18
  4282c0:	ldr	x9, [sp, #56]
  4282c4:	mov	x10, #0x10                  	// #16
  4282c8:	mul	x9, x10, x9
  4282cc:	add	x8, x8, x9
  4282d0:	ldr	x8, [x8]
  4282d4:	str	x8, [sp, #8]
  4282d8:	b	4282e4 <ascii_strlower_n@plt+0x23e84>
  4282dc:	mov	x8, xzr
  4282e0:	str	x8, [sp, #8]
  4282e4:	ldr	x8, [sp, #8]
  4282e8:	stur	x8, [x29, #-48]
  4282ec:	ldr	x8, [sp, #56]
  4282f0:	ldur	x9, [x29, #-24]
  4282f4:	ldr	x9, [x9, #8]
  4282f8:	cmp	x8, x9
  4282fc:	b.cs	428324 <ascii_strlower_n@plt+0x23ec4>  // b.hs, b.nlast
  428300:	ldur	x8, [x29, #-24]
  428304:	add	x8, x8, #0x18
  428308:	ldr	x9, [sp, #56]
  42830c:	mov	x10, #0x10                  	// #16
  428310:	mul	x9, x10, x9
  428314:	add	x8, x8, x9
  428318:	ldr	w11, [x8, #8]
  42831c:	str	w11, [sp, #4]
  428320:	b	42832c <ascii_strlower_n@plt+0x23ecc>
  428324:	mov	w8, wzr
  428328:	str	w8, [sp, #4]
  42832c:	ldr	w8, [sp, #4]
  428330:	stur	w8, [x29, #-52]
  428334:	ldr	x9, [sp, #56]
  428338:	ldur	x10, [x29, #-24]
  42833c:	ldr	x10, [x10, #8]
  428340:	cmp	x9, x10
  428344:	b.cs	42836c <ascii_strlower_n@plt+0x23f0c>  // b.hs, b.nlast
  428348:	ldur	x8, [x29, #-24]
  42834c:	add	x8, x8, #0x18
  428350:	ldr	x9, [sp, #56]
  428354:	mov	x10, #0x10                  	// #16
  428358:	mul	x9, x10, x9
  42835c:	add	x8, x8, x9
  428360:	ldr	w11, [x8, #12]
  428364:	str	w11, [sp]
  428368:	b	428374 <ascii_strlower_n@plt+0x23f14>
  42836c:	mov	w8, wzr
  428370:	str	w8, [sp]
  428374:	ldr	w8, [sp]
  428378:	stur	w8, [x29, #-60]
  42837c:	b	4281bc <ascii_strlower_n@plt+0x23d5c>
  428380:	stur	wzr, [x29, #-4]
  428384:	ldur	w0, [x29, #-4]
  428388:	ldp	x29, x30, [sp, #128]
  42838c:	add	sp, sp, #0x90
  428390:	ret
  428394:	sub	sp, sp, #0x50
  428398:	stp	x29, x30, [sp, #64]
  42839c:	add	x29, sp, #0x40
  4283a0:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  4283a4:	add	x8, x8, #0x7c4
  4283a8:	add	x8, x8, #0x3
  4283ac:	adrp	x9, 432000 <ascii_strlower_n@plt+0x2dba0>
  4283b0:	add	x9, x9, #0xb54
  4283b4:	stur	x0, [x29, #-16]
  4283b8:	stur	x1, [x29, #-24]
  4283bc:	str	x2, [sp, #32]
  4283c0:	str	w3, [sp, #28]
  4283c4:	str	x8, [sp, #16]
  4283c8:	str	x9, [sp, #8]
  4283cc:	ldur	x8, [x29, #-16]
  4283d0:	cmp	x8, #0x0
  4283d4:	cset	w9, ne  // ne = any
  4283d8:	mov	w10, #0x1                   	// #1
  4283dc:	eor	w9, w9, #0x1
  4283e0:	eor	w9, w9, w10
  4283e4:	eor	w9, w9, w10
  4283e8:	and	w9, w9, #0x1
  4283ec:	mov	w0, w9
  4283f0:	sxtw	x8, w0
  4283f4:	cbz	x8, 428418 <ascii_strlower_n@plt+0x23fb8>
  4283f8:	mov	w8, wzr
  4283fc:	mov	w0, w8
  428400:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  428404:	add	x1, x1, #0xb51
  428408:	ldr	x2, [sp, #16]
  42840c:	mov	w3, #0x238                 	// #568
  428410:	ldr	x4, [sp, #8]
  428414:	bl	4039d0 <log_assert_failed_realm@plt>
  428418:	ldur	x8, [x29, #-24]
  42841c:	cmp	x8, #0x0
  428420:	cset	w9, ne  // ne = any
  428424:	mov	w10, #0x1                   	// #1
  428428:	eor	w9, w9, #0x1
  42842c:	eor	w9, w9, w10
  428430:	eor	w9, w9, w10
  428434:	and	w9, w9, #0x1
  428438:	mov	w0, w9
  42843c:	sxtw	x8, w0
  428440:	cbz	x8, 428464 <ascii_strlower_n@plt+0x24004>
  428444:	mov	w8, wzr
  428448:	mov	w0, w8
  42844c:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  428450:	add	x1, x1, #0xbb3
  428454:	ldr	x2, [sp, #16]
  428458:	mov	w3, #0x239                 	// #569
  42845c:	ldr	x4, [sp, #8]
  428460:	bl	4039d0 <log_assert_failed_realm@plt>
  428464:	ldr	x8, [sp, #32]
  428468:	cmp	x8, #0x0
  42846c:	cset	w9, ne  // ne = any
  428470:	mov	w10, #0x1                   	// #1
  428474:	eor	w9, w9, #0x1
  428478:	eor	w9, w9, w10
  42847c:	eor	w9, w9, w10
  428480:	and	w9, w9, #0x1
  428484:	mov	w0, w9
  428488:	sxtw	x8, w0
  42848c:	cbz	x8, 4284b0 <ascii_strlower_n@plt+0x24050>
  428490:	mov	w8, wzr
  428494:	mov	w0, w8
  428498:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  42849c:	add	x1, x1, #0x5c2
  4284a0:	ldr	x2, [sp, #16]
  4284a4:	mov	w3, #0x23a                 	// #570
  4284a8:	ldr	x4, [sp, #8]
  4284ac:	bl	4039d0 <log_assert_failed_realm@plt>
  4284b0:	ldur	x0, [x29, #-16]
  4284b4:	ldur	x8, [x29, #-24]
  4284b8:	ldr	x1, [x8]
  4284bc:	ldr	x2, [sp, #32]
  4284c0:	ldr	w3, [sp, #28]
  4284c4:	bl	428030 <ascii_strlower_n@plt+0x23bd0>
  4284c8:	str	w0, [sp, #24]
  4284cc:	ldr	w9, [sp, #24]
  4284d0:	cmp	w9, #0x0
  4284d4:	cset	w9, ge  // ge = tcont
  4284d8:	tbnz	w9, #0, 4284e8 <ascii_strlower_n@plt+0x24088>
  4284dc:	ldr	w8, [sp, #24]
  4284e0:	stur	w8, [x29, #-4]
  4284e4:	b	4284f8 <ascii_strlower_n@plt+0x24098>
  4284e8:	ldur	x0, [x29, #-24]
  4284ec:	ldr	x1, [sp, #32]
  4284f0:	bl	42726c <ascii_strlower_n@plt+0x22e0c>
  4284f4:	stur	w0, [x29, #-4]
  4284f8:	ldur	w0, [x29, #-4]
  4284fc:	ldp	x29, x30, [sp, #64]
  428500:	add	sp, sp, #0x50
  428504:	ret
  428508:	stp	x29, x30, [sp, #-16]!
  42850c:	mov	x29, sp
  428510:	sub	sp, sp, #0x50
  428514:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  428518:	add	x8, x8, #0x7c4
  42851c:	add	x8, x8, #0x3
  428520:	adrp	x9, 432000 <ascii_strlower_n@plt+0x2dba0>
  428524:	add	x9, x9, #0xbec
  428528:	mov	w10, #0x1                   	// #1
  42852c:	stur	x0, [x29, #-8]
  428530:	and	w10, w1, w10
  428534:	sturb	w10, [x29, #-9]
  428538:	ldur	x11, [x29, #-8]
  42853c:	stur	x8, [x29, #-72]
  428540:	stur	x9, [x29, #-80]
  428544:	cbnz	x11, 42854c <ascii_strlower_n@plt+0x240ec>
  428548:	b	428834 <ascii_strlower_n@plt+0x243d4>
  42854c:	ldur	x8, [x29, #-8]
  428550:	ldr	x8, [x8, #8]
  428554:	cmp	x8, #0x1
  428558:	b.hi	428560 <ascii_strlower_n@plt+0x24100>  // b.pmore
  42855c:	b	428834 <ascii_strlower_n@plt+0x243d4>
  428560:	stur	xzr, [x29, #-40]
  428564:	ldur	x8, [x29, #-8]
  428568:	ldr	x8, [x8, #8]
  42856c:	subs	x8, x8, #0x1
  428570:	stur	x8, [x29, #-48]
  428574:	ldur	x8, [x29, #-8]
  428578:	ldr	x8, [x8, #8]
  42857c:	stur	x8, [x29, #-56]
  428580:	ldur	x1, [x29, #-56]
  428584:	mov	x0, #0x10                  	// #16
  428588:	bl	428840 <ascii_strlower_n@plt+0x243e0>
  42858c:	mov	w8, #0x1                   	// #1
  428590:	eor	w9, w0, #0x1
  428594:	eor	w9, w9, w8
  428598:	eor	w9, w9, w8
  42859c:	eor	w8, w9, w8
  4285a0:	and	w8, w8, #0x1
  4285a4:	mov	w1, w8
  4285a8:	sxtw	x10, w1
  4285ac:	cbz	x10, 4285d0 <ascii_strlower_n@plt+0x24170>
  4285b0:	mov	w8, wzr
  4285b4:	mov	w0, w8
  4285b8:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  4285bc:	add	x1, x1, #0xbb8
  4285c0:	ldur	x2, [x29, #-72]
  4285c4:	mov	w3, #0x253                 	// #595
  4285c8:	ldur	x4, [x29, #-80]
  4285cc:	bl	4039d0 <log_assert_failed_realm@plt>
  4285d0:	ldur	x8, [x29, #-56]
  4285d4:	mov	x9, #0x10                  	// #16
  4285d8:	mul	x8, x9, x8
  4285dc:	cmp	x8, #0x400, lsl #12
  4285e0:	cset	w10, ls  // ls = plast
  4285e4:	mov	w11, #0x1                   	// #1
  4285e8:	eor	w10, w10, #0x1
  4285ec:	eor	w10, w10, w11
  4285f0:	eor	w10, w10, w11
  4285f4:	and	w10, w10, #0x1
  4285f8:	mov	w0, w10
  4285fc:	sxtw	x8, w0
  428600:	cbz	x8, 428624 <ascii_strlower_n@plt+0x241c4>
  428604:	mov	w8, wzr
  428608:	mov	w0, w8
  42860c:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  428610:	add	x1, x1, #0xc1f
  428614:	ldur	x2, [x29, #-72]
  428618:	mov	w3, #0x253                 	// #595
  42861c:	ldur	x4, [x29, #-80]
  428620:	bl	4039d0 <log_assert_failed_realm@plt>
  428624:	ldur	x8, [x29, #-56]
  428628:	mov	x9, #0x10                  	// #16
  42862c:	mul	x8, x9, x8
  428630:	mov	x9, #0x1                   	// #1
  428634:	mul	x8, x8, x9
  428638:	add	x8, x8, #0xf
  42863c:	and	x8, x8, #0xfffffffffffffff0
  428640:	mov	x9, sp
  428644:	subs	x8, x9, x8
  428648:	mov	sp, x8
  42864c:	stur	x8, [x29, #-64]
  428650:	ldur	x8, [x29, #-64]
  428654:	stur	x8, [x29, #-24]
  428658:	stur	xzr, [x29, #-32]
  42865c:	ldur	x8, [x29, #-32]
  428660:	ldur	x9, [x29, #-8]
  428664:	ldr	x9, [x9, #8]
  428668:	cmp	x8, x9
  42866c:	b.cs	4287c0 <ascii_strlower_n@plt+0x24360>  // b.hs, b.nlast
  428670:	ldur	x8, [x29, #-8]
  428674:	add	x8, x8, #0x18
  428678:	ldur	x9, [x29, #-32]
  42867c:	mov	x10, #0x10                  	// #16
  428680:	mul	x9, x10, x9
  428684:	add	x8, x8, x9
  428688:	ldr	x8, [x8]
  42868c:	ldr	x8, [x8, #8]
  428690:	ldrh	w11, [x8, #4]
  428694:	cmp	w11, #0x1
  428698:	b.ne	42878c <ascii_strlower_n@plt+0x2432c>  // b.any
  42869c:	ldur	x8, [x29, #-8]
  4286a0:	add	x8, x8, #0x18
  4286a4:	ldur	x9, [x29, #-32]
  4286a8:	mov	x10, #0x10                  	// #16
  4286ac:	mul	x9, x10, x9
  4286b0:	add	x8, x8, x9
  4286b4:	ldr	x8, [x8]
  4286b8:	ldr	x8, [x8, #8]
  4286bc:	ldrh	w11, [x8, #6]
  4286c0:	cmp	w11, #0x1
  4286c4:	b.ne	428700 <ascii_strlower_n@plt+0x242a0>  // b.any
  4286c8:	ldur	x8, [x29, #-8]
  4286cc:	add	x8, x8, #0x18
  4286d0:	ldur	x9, [x29, #-32]
  4286d4:	mov	x10, #0x10                  	// #16
  4286d8:	mul	x9, x10, x9
  4286dc:	add	x8, x8, x9
  4286e0:	ldr	x8, [x8]
  4286e4:	add	x1, x8, #0x50
  4286e8:	mov	w0, #0x2                   	// #2
  4286ec:	bl	404420 <in_addr_is_link_local@plt>
  4286f0:	ldurb	w11, [x29, #-9]
  4286f4:	and	w11, w11, #0x1
  4286f8:	cmp	w0, w11
  4286fc:	b.ne	428764 <ascii_strlower_n@plt+0x24304>  // b.any
  428700:	ldur	x8, [x29, #-8]
  428704:	add	x8, x8, #0x18
  428708:	ldur	x9, [x29, #-32]
  42870c:	mov	x10, #0x10                  	// #16
  428710:	mul	x9, x10, x9
  428714:	add	x8, x8, x9
  428718:	ldr	x8, [x8]
  42871c:	ldr	x8, [x8, #8]
  428720:	ldrh	w11, [x8, #6]
  428724:	cmp	w11, #0x1c
  428728:	b.ne	42878c <ascii_strlower_n@plt+0x2432c>  // b.any
  42872c:	ldur	x8, [x29, #-8]
  428730:	add	x8, x8, #0x18
  428734:	ldur	x9, [x29, #-32]
  428738:	mov	x10, #0x10                  	// #16
  42873c:	mul	x9, x10, x9
  428740:	add	x8, x8, x9
  428744:	ldr	x8, [x8]
  428748:	add	x1, x8, #0x50
  42874c:	mov	w0, #0xa                   	// #10
  428750:	bl	404420 <in_addr_is_link_local@plt>
  428754:	ldurb	w11, [x29, #-9]
  428758:	and	w11, w11, #0x1
  42875c:	cmp	w0, w11
  428760:	b.eq	42878c <ascii_strlower_n@plt+0x2432c>  // b.none
  428764:	ldur	x8, [x29, #-24]
  428768:	ldur	x9, [x29, #-48]
  42876c:	subs	x10, x9, #0x1
  428770:	stur	x10, [x29, #-48]
  428774:	ldur	x10, [x29, #-8]
  428778:	add	x10, x10, #0x18
  42877c:	ldur	x11, [x29, #-32]
  428780:	ldr	q0, [x10, x11, lsl #4]
  428784:	str	q0, [x8, x9, lsl #4]
  428788:	b	4287b0 <ascii_strlower_n@plt+0x24350>
  42878c:	ldur	x8, [x29, #-24]
  428790:	ldur	x9, [x29, #-40]
  428794:	add	x10, x9, #0x1
  428798:	stur	x10, [x29, #-40]
  42879c:	ldur	x10, [x29, #-8]
  4287a0:	add	x10, x10, #0x18
  4287a4:	ldur	x11, [x29, #-32]
  4287a8:	ldr	q0, [x10, x11, lsl #4]
  4287ac:	str	q0, [x8, x9, lsl #4]
  4287b0:	ldur	x8, [x29, #-32]
  4287b4:	add	x8, x8, #0x1
  4287b8:	stur	x8, [x29, #-32]
  4287bc:	b	42865c <ascii_strlower_n@plt+0x241fc>
  4287c0:	ldur	x8, [x29, #-40]
  4287c4:	ldur	x9, [x29, #-48]
  4287c8:	add	x9, x9, #0x1
  4287cc:	cmp	x8, x9
  4287d0:	cset	w10, eq  // eq = none
  4287d4:	mov	w11, #0x1                   	// #1
  4287d8:	eor	w10, w10, #0x1
  4287dc:	eor	w10, w10, w11
  4287e0:	eor	w10, w10, w11
  4287e4:	and	w10, w10, #0x1
  4287e8:	mov	w0, w10
  4287ec:	sxtw	x8, w0
  4287f0:	cbz	x8, 428814 <ascii_strlower_n@plt+0x243b4>
  4287f4:	mov	w8, wzr
  4287f8:	mov	w0, w8
  4287fc:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  428800:	add	x1, x1, #0xc47
  428804:	ldur	x2, [x29, #-72]
  428808:	mov	w3, #0x260                 	// #608
  42880c:	ldur	x4, [x29, #-80]
  428810:	bl	4039d0 <log_assert_failed_realm@plt>
  428814:	ldur	x8, [x29, #-8]
  428818:	add	x0, x8, #0x18
  42881c:	ldur	x1, [x29, #-24]
  428820:	ldur	x8, [x29, #-8]
  428824:	ldr	x8, [x8, #8]
  428828:	mov	x9, #0x10                  	// #16
  42882c:	mul	x2, x9, x8
  428830:	bl	403fa0 <memcpy@plt>
  428834:	mov	sp, x29
  428838:	ldp	x29, x30, [sp], #16
  42883c:	ret
  428840:	sub	sp, sp, #0x20
  428844:	str	x0, [sp, #24]
  428848:	str	x1, [sp, #16]
  42884c:	ldr	x8, [sp, #16]
  428850:	mov	w9, #0x0                   	// #0
  428854:	str	w9, [sp, #12]
  428858:	cbz	x8, 428878 <ascii_strlower_n@plt+0x24418>
  42885c:	ldr	x8, [sp, #24]
  428860:	ldr	x9, [sp, #16]
  428864:	mov	x10, #0xffffffffffffffff    	// #-1
  428868:	udiv	x9, x10, x9
  42886c:	cmp	x8, x9
  428870:	cset	w11, hi  // hi = pmore
  428874:	str	w11, [sp, #12]
  428878:	ldr	w8, [sp, #12]
  42887c:	mov	w9, #0x1                   	// #1
  428880:	eor	w8, w8, #0x1
  428884:	eor	w8, w8, w9
  428888:	and	w8, w8, #0x1
  42888c:	mov	w0, w8
  428890:	sxtw	x10, w0
  428894:	cmp	x10, #0x0
  428898:	cset	w8, ne  // ne = any
  42889c:	and	w0, w8, #0x1
  4288a0:	add	sp, sp, #0x20
  4288a4:	ret
  4288a8:	sub	sp, sp, #0x40
  4288ac:	stp	x29, x30, [sp, #48]
  4288b0:	add	x29, sp, #0x30
  4288b4:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  4288b8:	add	x8, x8, #0x7c4
  4288bc:	add	x2, x8, #0x3
  4288c0:	stur	x0, [x29, #-16]
  4288c4:	str	x1, [sp, #24]
  4288c8:	str	x2, [sp]
  4288cc:	ldur	x8, [x29, #-16]
  4288d0:	cmp	x8, #0x0
  4288d4:	cset	w9, ne  // ne = any
  4288d8:	mov	w10, #0x1                   	// #1
  4288dc:	eor	w9, w9, #0x1
  4288e0:	eor	w9, w9, w10
  4288e4:	eor	w9, w9, w10
  4288e8:	and	w9, w9, #0x1
  4288ec:	mov	w0, w9
  4288f0:	sxtw	x8, w0
  4288f4:	cbz	x8, 42891c <ascii_strlower_n@plt+0x244bc>
  4288f8:	mov	w8, wzr
  4288fc:	mov	w0, w8
  428900:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  428904:	add	x1, x1, #0xeb8
  428908:	ldr	x2, [sp]
  42890c:	mov	w3, #0x267                 	// #615
  428910:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  428914:	add	x4, x4, #0xc56
  428918:	bl	4039d0 <log_assert_failed_realm@plt>
  42891c:	ldr	x8, [sp, #24]
  428920:	cmp	x8, #0x0
  428924:	cset	w9, hi  // hi = pmore
  428928:	tbnz	w9, #0, 428934 <ascii_strlower_n@plt+0x244d4>
  42892c:	stur	wzr, [x29, #-4]
  428930:	b	428a1c <ascii_strlower_n@plt+0x245bc>
  428934:	ldur	x8, [x29, #-16]
  428938:	ldr	x8, [x8]
  42893c:	cbz	x8, 4289ec <ascii_strlower_n@plt+0x2458c>
  428940:	ldur	x8, [x29, #-16]
  428944:	ldr	x8, [x8]
  428948:	ldr	w9, [x8]
  42894c:	cmp	w9, #0x1
  428950:	b.ls	428960 <ascii_strlower_n@plt+0x24500>  // b.plast
  428954:	mov	w8, #0xfffffff0            	// #-16
  428958:	stur	w8, [x29, #-4]
  42895c:	b	428a1c <ascii_strlower_n@plt+0x245bc>
  428960:	ldur	x8, [x29, #-16]
  428964:	ldr	x8, [x8]
  428968:	ldr	x8, [x8, #8]
  42896c:	ldr	x9, [sp, #24]
  428970:	add	x8, x8, x9
  428974:	str	x8, [sp, #8]
  428978:	ldur	x8, [x29, #-16]
  42897c:	ldr	x8, [x8]
  428980:	ldr	x8, [x8, #16]
  428984:	ldr	x9, [sp, #8]
  428988:	cmp	x8, x9
  42898c:	b.cc	428998 <ascii_strlower_n@plt+0x24538>  // b.lo, b.ul, b.last
  428990:	stur	wzr, [x29, #-4]
  428994:	b	428a1c <ascii_strlower_n@plt+0x245bc>
  428998:	ldr	x8, [sp, #8]
  42899c:	mov	x9, #0x2                   	// #2
  4289a0:	mul	x8, x8, x9
  4289a4:	str	x8, [sp, #8]
  4289a8:	ldur	x8, [x29, #-16]
  4289ac:	ldr	x0, [x8]
  4289b0:	ldr	x8, [sp, #8]
  4289b4:	mov	x9, #0x10                  	// #16
  4289b8:	mul	x8, x9, x8
  4289bc:	add	x1, x8, #0x18
  4289c0:	bl	404100 <realloc@plt>
  4289c4:	str	x0, [sp, #16]
  4289c8:	ldr	x8, [sp, #16]
  4289cc:	cbnz	x8, 4289dc <ascii_strlower_n@plt+0x2457c>
  4289d0:	mov	w8, #0xfffffff4            	// #-12
  4289d4:	stur	w8, [x29, #-4]
  4289d8:	b	428a1c <ascii_strlower_n@plt+0x245bc>
  4289dc:	ldr	x8, [sp, #8]
  4289e0:	ldr	x9, [sp, #16]
  4289e4:	str	x8, [x9, #16]
  4289e8:	b	428a0c <ascii_strlower_n@plt+0x245ac>
  4289ec:	ldr	x0, [sp, #24]
  4289f0:	bl	4254f0 <ascii_strlower_n@plt+0x21090>
  4289f4:	str	x0, [sp, #16]
  4289f8:	ldr	x8, [sp, #16]
  4289fc:	cbnz	x8, 428a0c <ascii_strlower_n@plt+0x245ac>
  428a00:	mov	w8, #0xfffffff4            	// #-12
  428a04:	stur	w8, [x29, #-4]
  428a08:	b	428a1c <ascii_strlower_n@plt+0x245bc>
  428a0c:	ldr	x8, [sp, #16]
  428a10:	ldur	x9, [x29, #-16]
  428a14:	str	x8, [x9]
  428a18:	stur	wzr, [x29, #-4]
  428a1c:	ldur	w0, [x29, #-4]
  428a20:	ldp	x29, x30, [sp, #48]
  428a24:	add	sp, sp, #0x40
  428a28:	ret
  428a2c:	sub	sp, sp, #0x80
  428a30:	stp	x29, x30, [sp, #112]
  428a34:	add	x29, sp, #0x70
  428a38:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  428a3c:	add	x8, x8, #0x7c4
  428a40:	add	x8, x8, #0x3
  428a44:	stur	x0, [x29, #-8]
  428a48:	stur	x1, [x29, #-16]
  428a4c:	ldur	x9, [x29, #-16]
  428a50:	str	x8, [sp, #48]
  428a54:	cbnz	x9, 428a68 <ascii_strlower_n@plt+0x24608>
  428a58:	adrp	x8, 44f000 <ascii_strlower_n@plt+0x4aba0>
  428a5c:	ldr	x8, [x8, #2680]
  428a60:	ldr	x8, [x8]
  428a64:	stur	x8, [x29, #-16]
  428a68:	ldur	x8, [x29, #-8]
  428a6c:	cbz	x8, 428a94 <ascii_strlower_n@plt+0x24634>
  428a70:	ldur	x8, [x29, #-8]
  428a74:	ldr	x8, [x8, #8]
  428a78:	cmp	x8, #0x0
  428a7c:	cset	w9, ls  // ls = plast
  428a80:	tbnz	w9, #0, 428a94 <ascii_strlower_n@plt+0x24634>
  428a84:	ldur	x8, [x29, #-8]
  428a88:	ldr	x8, [x8, #24]
  428a8c:	str	x8, [sp, #40]
  428a90:	b	428a9c <ascii_strlower_n@plt+0x2463c>
  428a94:	mov	x8, xzr
  428a98:	str	x8, [sp, #40]
  428a9c:	ldr	x8, [sp, #40]
  428aa0:	stur	x8, [x29, #-24]
  428aa4:	ldur	x8, [x29, #-8]
  428aa8:	cbz	x8, 428ad0 <ascii_strlower_n@plt+0x24670>
  428aac:	ldur	x8, [x29, #-8]
  428ab0:	ldr	x8, [x8, #8]
  428ab4:	cmp	x8, #0x0
  428ab8:	cset	w9, ls  // ls = plast
  428abc:	tbnz	w9, #0, 428ad0 <ascii_strlower_n@plt+0x24670>
  428ac0:	ldur	x8, [x29, #-8]
  428ac4:	ldr	w9, [x8, #32]
  428ac8:	str	w9, [sp, #36]
  428acc:	b	428ad8 <ascii_strlower_n@plt+0x24678>
  428ad0:	mov	w8, wzr
  428ad4:	str	w8, [sp, #36]
  428ad8:	ldr	w8, [sp, #36]
  428adc:	stur	w8, [x29, #-32]
  428ae0:	ldur	x9, [x29, #-8]
  428ae4:	cbz	x9, 428b0c <ascii_strlower_n@plt+0x246ac>
  428ae8:	ldur	x8, [x29, #-8]
  428aec:	ldr	x8, [x8, #8]
  428af0:	cmp	x8, #0x0
  428af4:	cset	w9, ls  // ls = plast
  428af8:	tbnz	w9, #0, 428b0c <ascii_strlower_n@plt+0x246ac>
  428afc:	ldur	x8, [x29, #-8]
  428b00:	ldr	w9, [x8, #36]
  428b04:	str	w9, [sp, #32]
  428b08:	b	428b14 <ascii_strlower_n@plt+0x246b4>
  428b0c:	mov	w8, wzr
  428b10:	str	w8, [sp, #32]
  428b14:	ldr	w8, [sp, #32]
  428b18:	stur	w8, [x29, #-28]
  428b1c:	stur	wzr, [x29, #-44]
  428b20:	ldursw	x9, [x29, #-44]
  428b24:	stur	x9, [x29, #-40]
  428b28:	ldur	x8, [x29, #-8]
  428b2c:	mov	w9, #0x0                   	// #0
  428b30:	str	w9, [sp, #28]
  428b34:	cbz	x8, 428b50 <ascii_strlower_n@plt+0x246f0>
  428b38:	ldur	x8, [x29, #-40]
  428b3c:	ldur	x9, [x29, #-8]
  428b40:	ldr	x9, [x9, #8]
  428b44:	cmp	x8, x9
  428b48:	cset	w10, cc  // cc = lo, ul, last
  428b4c:	str	w10, [sp, #28]
  428b50:	ldr	w8, [sp, #28]
  428b54:	tbnz	w8, #0, 428b5c <ascii_strlower_n@plt+0x246fc>
  428b58:	b	428d30 <ascii_strlower_n@plt+0x248d0>
  428b5c:	ldur	x1, [x29, #-16]
  428b60:	mov	w0, #0x9                   	// #9
  428b64:	bl	403db0 <fputc@plt>
  428b68:	ldur	x8, [x29, #-24]
  428b6c:	mov	x0, x8
  428b70:	bl	42175c <ascii_strlower_n@plt+0x1d2fc>
  428b74:	str	x0, [sp, #56]
  428b78:	ldr	x8, [sp, #56]
  428b7c:	cbnz	x8, 428ba0 <ascii_strlower_n@plt+0x24740>
  428b80:	mov	w8, wzr
  428b84:	mov	w0, w8
  428b88:	ldr	x1, [sp, #48]
  428b8c:	mov	w2, #0x2b8                 	// #696
  428b90:	adrp	x3, 432000 <ascii_strlower_n@plt+0x2dba0>
  428b94:	add	x3, x3, #0xcbc
  428b98:	bl	403a90 <log_oom_internal@plt>
  428b9c:	b	428c48 <ascii_strlower_n@plt+0x247e8>
  428ba0:	ldr	x0, [sp, #56]
  428ba4:	ldur	x1, [x29, #-16]
  428ba8:	bl	404430 <fputs@plt>
  428bac:	ldur	w8, [x29, #-32]
  428bb0:	cbnz	w8, 428bc0 <ascii_strlower_n@plt+0x24760>
  428bb4:	ldur	w8, [x29, #-28]
  428bb8:	and	w8, w8, #0x7
  428bbc:	cbz	w8, 428bd0 <ascii_strlower_n@plt+0x24770>
  428bc0:	ldur	x1, [x29, #-16]
  428bc4:	adrp	x0, 432000 <ascii_strlower_n@plt+0x2dba0>
  428bc8:	add	x0, x0, #0xccc
  428bcc:	bl	404430 <fputs@plt>
  428bd0:	ldur	w8, [x29, #-32]
  428bd4:	cbz	w8, 428be8 <ascii_strlower_n@plt+0x24788>
  428bd8:	ldur	w1, [x29, #-32]
  428bdc:	adrp	x0, 432000 <ascii_strlower_n@plt+0x2dba0>
  428be0:	add	x0, x0, #0xccf
  428be4:	bl	403ab0 <printf@plt>
  428be8:	ldur	w8, [x29, #-28]
  428bec:	and	w8, w8, #0x1
  428bf0:	cbz	w8, 428c04 <ascii_strlower_n@plt+0x247a4>
  428bf4:	ldur	x1, [x29, #-16]
  428bf8:	adrp	x0, 432000 <ascii_strlower_n@plt+0x2dba0>
  428bfc:	add	x0, x0, #0xcdb
  428c00:	bl	404430 <fputs@plt>
  428c04:	ldur	w8, [x29, #-28]
  428c08:	and	w8, w8, #0x2
  428c0c:	cbz	w8, 428c20 <ascii_strlower_n@plt+0x247c0>
  428c10:	ldur	x1, [x29, #-16]
  428c14:	adrp	x0, 432000 <ascii_strlower_n@plt+0x2dba0>
  428c18:	add	x0, x0, #0xcea
  428c1c:	bl	404430 <fputs@plt>
  428c20:	ldur	w8, [x29, #-28]
  428c24:	and	w8, w8, #0x4
  428c28:	cbz	w8, 428c3c <ascii_strlower_n@plt+0x247dc>
  428c2c:	ldur	x1, [x29, #-16]
  428c30:	adrp	x0, 432000 <ascii_strlower_n@plt+0x2dba0>
  428c34:	add	x0, x0, #0xcf4
  428c38:	bl	404430 <fputs@plt>
  428c3c:	ldur	x1, [x29, #-16]
  428c40:	mov	w0, #0xa                   	// #10
  428c44:	bl	403db0 <fputc@plt>
  428c48:	ldur	x8, [x29, #-40]
  428c4c:	add	x8, x8, #0x1
  428c50:	stur	x8, [x29, #-40]
  428c54:	ldur	x8, [x29, #-40]
  428c58:	ldur	x9, [x29, #-8]
  428c5c:	ldr	x9, [x9, #8]
  428c60:	cmp	x8, x9
  428c64:	b.cs	428c8c <ascii_strlower_n@plt+0x2482c>  // b.hs, b.nlast
  428c68:	ldur	x8, [x29, #-8]
  428c6c:	add	x8, x8, #0x18
  428c70:	ldur	x9, [x29, #-40]
  428c74:	mov	x10, #0x10                  	// #16
  428c78:	mul	x9, x10, x9
  428c7c:	add	x8, x8, x9
  428c80:	ldr	x8, [x8]
  428c84:	str	x8, [sp, #16]
  428c88:	b	428c94 <ascii_strlower_n@plt+0x24834>
  428c8c:	mov	x8, xzr
  428c90:	str	x8, [sp, #16]
  428c94:	ldr	x8, [sp, #16]
  428c98:	stur	x8, [x29, #-24]
  428c9c:	ldur	x8, [x29, #-40]
  428ca0:	ldur	x9, [x29, #-8]
  428ca4:	ldr	x9, [x9, #8]
  428ca8:	cmp	x8, x9
  428cac:	b.cs	428cd4 <ascii_strlower_n@plt+0x24874>  // b.hs, b.nlast
  428cb0:	ldur	x8, [x29, #-8]
  428cb4:	add	x8, x8, #0x18
  428cb8:	ldur	x9, [x29, #-40]
  428cbc:	mov	x10, #0x10                  	// #16
  428cc0:	mul	x9, x10, x9
  428cc4:	add	x8, x8, x9
  428cc8:	ldr	w11, [x8, #8]
  428ccc:	str	w11, [sp, #12]
  428cd0:	b	428cdc <ascii_strlower_n@plt+0x2487c>
  428cd4:	mov	w8, wzr
  428cd8:	str	w8, [sp, #12]
  428cdc:	ldr	w8, [sp, #12]
  428ce0:	stur	w8, [x29, #-32]
  428ce4:	ldur	x9, [x29, #-40]
  428ce8:	ldur	x10, [x29, #-8]
  428cec:	ldr	x10, [x10, #8]
  428cf0:	cmp	x9, x10
  428cf4:	b.cs	428d1c <ascii_strlower_n@plt+0x248bc>  // b.hs, b.nlast
  428cf8:	ldur	x8, [x29, #-8]
  428cfc:	add	x8, x8, #0x18
  428d00:	ldur	x9, [x29, #-40]
  428d04:	mov	x10, #0x10                  	// #16
  428d08:	mul	x9, x10, x9
  428d0c:	add	x8, x8, x9
  428d10:	ldr	w11, [x8, #12]
  428d14:	str	w11, [sp, #8]
  428d18:	b	428d24 <ascii_strlower_n@plt+0x248c4>
  428d1c:	mov	w8, wzr
  428d20:	str	w8, [sp, #8]
  428d24:	ldr	w8, [sp, #8]
  428d28:	stur	w8, [x29, #-28]
  428d2c:	b	428b28 <ascii_strlower_n@plt+0x246c8>
  428d30:	ldp	x29, x30, [sp, #112]
  428d34:	add	sp, sp, #0x80
  428d38:	ret
  428d3c:	sub	sp, sp, #0xb0
  428d40:	stp	x29, x30, [sp, #160]
  428d44:	add	x29, sp, #0xa0
  428d48:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  428d4c:	add	x8, x8, #0x7c4
  428d50:	add	x2, x8, #0x3
  428d54:	stur	x0, [x29, #-16]
  428d58:	stur	x1, [x29, #-24]
  428d5c:	str	x2, [sp, #80]
  428d60:	ldur	x8, [x29, #-24]
  428d64:	cmp	x8, #0x0
  428d68:	cset	w9, ne  // ne = any
  428d6c:	mov	w10, #0x1                   	// #1
  428d70:	eor	w9, w9, #0x1
  428d74:	eor	w9, w9, w10
  428d78:	eor	w9, w9, w10
  428d7c:	and	w9, w9, #0x1
  428d80:	mov	w0, w9
  428d84:	sxtw	x8, w0
  428d88:	cbz	x8, 428db0 <ascii_strlower_n@plt+0x24950>
  428d8c:	mov	w8, wzr
  428d90:	mov	w0, w8
  428d94:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  428d98:	add	x1, x1, #0x840
  428d9c:	ldr	x2, [sp, #80]
  428da0:	mov	w3, #0x2d2                 	// #722
  428da4:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  428da8:	add	x4, x4, #0xd02
  428dac:	bl	4039d0 <log_assert_failed_realm@plt>
  428db0:	ldur	x8, [x29, #-24]
  428db4:	ldr	x8, [x8, #8]
  428db8:	ldrh	w9, [x8, #6]
  428dbc:	cmp	w9, #0x5
  428dc0:	b.eq	428dcc <ascii_strlower_n@plt+0x2496c>  // b.none
  428dc4:	stur	wzr, [x29, #-4]
  428dc8:	b	42901c <ascii_strlower_n@plt+0x24bbc>
  428dcc:	ldur	x8, [x29, #-16]
  428dd0:	cbz	x8, 428df8 <ascii_strlower_n@plt+0x24998>
  428dd4:	ldur	x8, [x29, #-16]
  428dd8:	ldr	x8, [x8, #8]
  428ddc:	cmp	x8, #0x0
  428de0:	cset	w9, ls  // ls = plast
  428de4:	tbnz	w9, #0, 428df8 <ascii_strlower_n@plt+0x24998>
  428de8:	ldur	x8, [x29, #-16]
  428dec:	ldr	x8, [x8, #24]
  428df0:	str	x8, [sp, #72]
  428df4:	b	428e00 <ascii_strlower_n@plt+0x249a0>
  428df8:	mov	x8, xzr
  428dfc:	str	x8, [sp, #72]
  428e00:	ldr	x8, [sp, #72]
  428e04:	stur	x8, [x29, #-32]
  428e08:	stur	wzr, [x29, #-52]
  428e0c:	ldursw	x8, [x29, #-52]
  428e10:	stur	x8, [x29, #-48]
  428e14:	ldur	x8, [x29, #-16]
  428e18:	mov	w9, #0x0                   	// #0
  428e1c:	str	w9, [sp, #68]
  428e20:	cbz	x8, 428e3c <ascii_strlower_n@plt+0x249dc>
  428e24:	ldur	x8, [x29, #-48]
  428e28:	ldur	x9, [x29, #-16]
  428e2c:	ldr	x9, [x9, #8]
  428e30:	cmp	x8, x9
  428e34:	cset	w10, cc  // cc = lo, ul, last
  428e38:	str	w10, [sp, #68]
  428e3c:	ldr	w8, [sp, #68]
  428e40:	tbnz	w8, #0, 428e48 <ascii_strlower_n@plt+0x249e8>
  428e44:	b	429018 <ascii_strlower_n@plt+0x24bb8>
  428e48:	mov	x8, xzr
  428e4c:	stur	x8, [x29, #-64]
  428e50:	ldur	x8, [x29, #-32]
  428e54:	ldr	x8, [x8, #8]
  428e58:	ldrh	w9, [x8, #6]
  428e5c:	cmp	w9, #0x27
  428e60:	b.eq	428e70 <ascii_strlower_n@plt+0x24a10>  // b.none
  428e64:	mov	w8, #0x6                   	// #6
  428e68:	stur	w8, [x29, #-68]
  428e6c:	b	428f94 <ascii_strlower_n@plt+0x24b34>
  428e70:	ldur	x8, [x29, #-32]
  428e74:	ldr	x8, [x8, #8]
  428e78:	ldrh	w9, [x8, #4]
  428e7c:	ldur	x8, [x29, #-24]
  428e80:	ldr	x8, [x8, #8]
  428e84:	ldrh	w10, [x8, #4]
  428e88:	cmp	w9, w10
  428e8c:	b.eq	428e9c <ascii_strlower_n@plt+0x24a3c>  // b.none
  428e90:	mov	w8, #0x6                   	// #6
  428e94:	stur	w8, [x29, #-68]
  428e98:	b	428f94 <ascii_strlower_n@plt+0x24b34>
  428e9c:	ldur	x8, [x29, #-24]
  428ea0:	ldr	x0, [x8, #80]
  428ea4:	ldur	x8, [x29, #-32]
  428ea8:	ldr	x1, [x8, #80]
  428eac:	ldur	x8, [x29, #-32]
  428eb0:	ldr	x8, [x8, #8]
  428eb4:	str	x0, [sp, #56]
  428eb8:	mov	x0, x8
  428ebc:	str	x1, [sp, #48]
  428ec0:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  428ec4:	ldr	x8, [sp, #56]
  428ec8:	str	x0, [sp, #40]
  428ecc:	mov	x0, x8
  428ed0:	ldr	x1, [sp, #48]
  428ed4:	ldr	x2, [sp, #40]
  428ed8:	sub	x3, x29, #0x40
  428edc:	bl	404290 <dns_name_change_suffix@plt>
  428ee0:	stur	w0, [x29, #-36]
  428ee4:	ldur	w9, [x29, #-36]
  428ee8:	cmp	w9, #0x0
  428eec:	cset	w9, ge  // ge = tcont
  428ef0:	tbnz	w9, #0, 428f08 <ascii_strlower_n@plt+0x24aa8>
  428ef4:	ldur	w8, [x29, #-36]
  428ef8:	stur	w8, [x29, #-4]
  428efc:	mov	w8, #0x1                   	// #1
  428f00:	stur	w8, [x29, #-68]
  428f04:	b	428f94 <ascii_strlower_n@plt+0x24b34>
  428f08:	ldur	w8, [x29, #-36]
  428f0c:	cbnz	w8, 428f1c <ascii_strlower_n@plt+0x24abc>
  428f10:	mov	w8, #0x6                   	// #6
  428f14:	stur	w8, [x29, #-68]
  428f18:	b	428f94 <ascii_strlower_n@plt+0x24b34>
  428f1c:	ldur	x0, [x29, #-64]
  428f20:	ldur	x8, [x29, #-24]
  428f24:	ldr	x8, [x8, #8]
  428f28:	str	x0, [sp, #32]
  428f2c:	mov	x0, x8
  428f30:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  428f34:	ldr	x8, [sp, #32]
  428f38:	str	x0, [sp, #24]
  428f3c:	mov	x0, x8
  428f40:	ldr	x1, [sp, #24]
  428f44:	bl	4042b0 <dns_name_equal@plt>
  428f48:	stur	w0, [x29, #-36]
  428f4c:	ldur	w9, [x29, #-36]
  428f50:	cmp	w9, #0x0
  428f54:	cset	w9, ge  // ge = tcont
  428f58:	tbnz	w9, #0, 428f70 <ascii_strlower_n@plt+0x24b10>
  428f5c:	ldur	w8, [x29, #-36]
  428f60:	stur	w8, [x29, #-4]
  428f64:	mov	w8, #0x1                   	// #1
  428f68:	stur	w8, [x29, #-68]
  428f6c:	b	428f94 <ascii_strlower_n@plt+0x24b34>
  428f70:	ldur	w8, [x29, #-36]
  428f74:	cmp	w8, #0x0
  428f78:	cset	w8, le
  428f7c:	tbnz	w8, #0, 428f90 <ascii_strlower_n@plt+0x24b30>
  428f80:	mov	w8, #0x1                   	// #1
  428f84:	stur	w8, [x29, #-4]
  428f88:	stur	w8, [x29, #-68]
  428f8c:	b	428f94 <ascii_strlower_n@plt+0x24b34>
  428f90:	stur	wzr, [x29, #-68]
  428f94:	sub	x0, x29, #0x40
  428f98:	bl	42902c <ascii_strlower_n@plt+0x24bcc>
  428f9c:	ldur	w8, [x29, #-68]
  428fa0:	str	w8, [sp, #20]
  428fa4:	cbz	w8, 428fc0 <ascii_strlower_n@plt+0x24b60>
  428fa8:	b	428fac <ascii_strlower_n@plt+0x24b4c>
  428fac:	ldr	w8, [sp, #20]
  428fb0:	cmp	w8, #0x1
  428fb4:	b.eq	42901c <ascii_strlower_n@plt+0x24bbc>  // b.none
  428fb8:	b	428fbc <ascii_strlower_n@plt+0x24b5c>
  428fbc:	b	428fc0 <ascii_strlower_n@plt+0x24b60>
  428fc0:	ldur	x8, [x29, #-48]
  428fc4:	add	x8, x8, #0x1
  428fc8:	stur	x8, [x29, #-48]
  428fcc:	ldur	x8, [x29, #-48]
  428fd0:	ldur	x9, [x29, #-16]
  428fd4:	ldr	x9, [x9, #8]
  428fd8:	cmp	x8, x9
  428fdc:	b.cs	429004 <ascii_strlower_n@plt+0x24ba4>  // b.hs, b.nlast
  428fe0:	ldur	x8, [x29, #-16]
  428fe4:	add	x8, x8, #0x18
  428fe8:	ldur	x9, [x29, #-48]
  428fec:	mov	x10, #0x10                  	// #16
  428ff0:	mul	x9, x10, x9
  428ff4:	add	x8, x8, x9
  428ff8:	ldr	x8, [x8]
  428ffc:	str	x8, [sp, #8]
  429000:	b	42900c <ascii_strlower_n@plt+0x24bac>
  429004:	mov	x8, xzr
  429008:	str	x8, [sp, #8]
  42900c:	ldr	x8, [sp, #8]
  429010:	stur	x8, [x29, #-32]
  429014:	b	428e14 <ascii_strlower_n@plt+0x249b4>
  429018:	stur	wzr, [x29, #-4]
  42901c:	ldur	w0, [x29, #-4]
  429020:	ldp	x29, x30, [sp, #160]
  429024:	add	sp, sp, #0xb0
  429028:	ret
  42902c:	sub	sp, sp, #0x20
  429030:	stp	x29, x30, [sp, #16]
  429034:	add	x29, sp, #0x10
  429038:	str	x0, [sp, #8]
  42903c:	ldr	x8, [sp, #8]
  429040:	ldr	x0, [x8]
  429044:	bl	403ac0 <free@plt>
  429048:	ldp	x29, x30, [sp, #16]
  42904c:	add	sp, sp, #0x20
  429050:	ret
  429054:	sub	sp, sp, #0x50
  429058:	stp	x29, x30, [sp, #64]
  42905c:	add	x29, sp, #0x40
  429060:	stur	x0, [x29, #-8]
  429064:	ldur	x8, [x29, #-8]
  429068:	cbnz	x8, 429070 <ascii_strlower_n@plt+0x24c10>
  42906c:	b	429154 <ascii_strlower_n@plt+0x24cf4>
  429070:	ldur	x8, [x29, #-8]
  429074:	cbz	x8, 42909c <ascii_strlower_n@plt+0x24c3c>
  429078:	ldur	x8, [x29, #-8]
  42907c:	ldr	x8, [x8, #8]
  429080:	cmp	x8, #0x0
  429084:	cset	w9, ls  // ls = plast
  429088:	tbnz	w9, #0, 42909c <ascii_strlower_n@plt+0x24c3c>
  42908c:	ldur	x8, [x29, #-8]
  429090:	ldr	x8, [x8, #24]
  429094:	str	x8, [sp, #24]
  429098:	b	4290a4 <ascii_strlower_n@plt+0x24c44>
  42909c:	mov	x8, xzr
  4290a0:	str	x8, [sp, #24]
  4290a4:	ldr	x8, [sp, #24]
  4290a8:	stur	x8, [x29, #-16]
  4290ac:	stur	wzr, [x29, #-28]
  4290b0:	ldursw	x8, [x29, #-28]
  4290b4:	stur	x8, [x29, #-24]
  4290b8:	ldur	x8, [x29, #-8]
  4290bc:	mov	w9, #0x0                   	// #0
  4290c0:	str	w9, [sp, #20]
  4290c4:	cbz	x8, 4290e0 <ascii_strlower_n@plt+0x24c80>
  4290c8:	ldur	x8, [x29, #-24]
  4290cc:	ldur	x9, [x29, #-8]
  4290d0:	ldr	x9, [x9, #8]
  4290d4:	cmp	x8, x9
  4290d8:	cset	w10, cc  // cc = lo, ul, last
  4290dc:	str	w10, [sp, #20]
  4290e0:	ldr	w8, [sp, #20]
  4290e4:	tbnz	w8, #0, 4290ec <ascii_strlower_n@plt+0x24c8c>
  4290e8:	b	42914c <ascii_strlower_n@plt+0x24cec>
  4290ec:	ldur	x0, [x29, #-16]
  4290f0:	bl	41fed8 <ascii_strlower_n@plt+0x1ba78>
  4290f4:	ldur	x8, [x29, #-24]
  4290f8:	add	x8, x8, #0x1
  4290fc:	stur	x8, [x29, #-24]
  429100:	ldur	x8, [x29, #-24]
  429104:	ldur	x9, [x29, #-8]
  429108:	ldr	x9, [x9, #8]
  42910c:	cmp	x8, x9
  429110:	b.cs	429138 <ascii_strlower_n@plt+0x24cd8>  // b.hs, b.nlast
  429114:	ldur	x8, [x29, #-8]
  429118:	add	x8, x8, #0x18
  42911c:	ldur	x9, [x29, #-24]
  429120:	mov	x10, #0x10                  	// #16
  429124:	mul	x9, x10, x9
  429128:	add	x8, x8, x9
  42912c:	ldr	x8, [x8]
  429130:	str	x8, [sp, #8]
  429134:	b	429140 <ascii_strlower_n@plt+0x24ce0>
  429138:	mov	x8, xzr
  42913c:	str	x8, [sp, #8]
  429140:	ldr	x8, [sp, #8]
  429144:	stur	x8, [x29, #-16]
  429148:	b	4290b8 <ascii_strlower_n@plt+0x24c58>
  42914c:	ldur	x8, [x29, #-8]
  429150:	str	xzr, [x8, #8]
  429154:	ldp	x29, x30, [sp, #64]
  429158:	add	sp, sp, #0x50
  42915c:	ret
  429160:	sub	sp, sp, #0x20
  429164:	stp	x29, x30, [sp, #16]
  429168:	add	x29, sp, #0x10
  42916c:	mov	x8, xzr
  429170:	str	x0, [sp, #8]
  429174:	ldr	x0, [sp, #8]
  429178:	str	x8, [sp]
  42917c:	bl	403ac0 <free@plt>
  429180:	ldr	x0, [sp]
  429184:	ldp	x29, x30, [sp, #16]
  429188:	add	sp, sp, #0x20
  42918c:	ret
  429190:	sub	sp, sp, #0x30
  429194:	stp	x29, x30, [sp, #32]
  429198:	add	x29, sp, #0x20
  42919c:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  4291a0:	add	x8, x8, #0xdc3
  4291a4:	add	x2, x8, #0x3
  4291a8:	str	x0, [sp, #16]
  4291ac:	str	x2, [sp]
  4291b0:	ldr	x8, [sp, #16]
  4291b4:	cmp	x8, #0x0
  4291b8:	cset	w9, hi  // hi = pmore
  4291bc:	mov	w10, #0x1                   	// #1
  4291c0:	eor	w9, w9, #0x1
  4291c4:	eor	w9, w9, w10
  4291c8:	eor	w9, w9, w10
  4291cc:	and	w9, w9, #0x1
  4291d0:	mov	w0, w9
  4291d4:	sxtw	x8, w0
  4291d8:	cbz	x8, 429200 <ascii_strlower_n@plt+0x24da0>
  4291dc:	mov	w8, wzr
  4291e0:	mov	w0, w8
  4291e4:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  4291e8:	add	x1, x1, #0xdbd
  4291ec:	ldr	x2, [sp]
  4291f0:	mov	w3, #0xb                   	// #11
  4291f4:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4291f8:	add	x4, x4, #0xdea
  4291fc:	bl	4039d0 <log_assert_failed_realm@plt>
  429200:	ldr	x8, [sp, #16]
  429204:	mov	x9, #0x8                   	// #8
  429208:	mul	x8, x9, x8
  42920c:	add	x1, x8, #0x18
  429210:	mov	x0, #0x1                   	// #1
  429214:	bl	4040d0 <calloc@plt>
  429218:	str	x0, [sp, #8]
  42921c:	ldr	x8, [sp, #8]
  429220:	cbnz	x8, 429230 <ascii_strlower_n@plt+0x24dd0>
  429224:	mov	x8, xzr
  429228:	stur	x8, [x29, #-8]
  42922c:	b	429250 <ascii_strlower_n@plt+0x24df0>
  429230:	ldr	x8, [sp, #8]
  429234:	mov	w9, #0x1                   	// #1
  429238:	str	w9, [x8]
  42923c:	ldr	x8, [sp, #16]
  429240:	ldr	x10, [sp, #8]
  429244:	str	x8, [x10, #16]
  429248:	ldr	x8, [sp, #8]
  42924c:	stur	x8, [x29, #-8]
  429250:	ldur	x0, [x29, #-8]
  429254:	ldp	x29, x30, [sp, #32]
  429258:	add	sp, sp, #0x30
  42925c:	ret
  429260:	sub	sp, sp, #0x30
  429264:	stp	x29, x30, [sp, #32]
  429268:	add	x29, sp, #0x20
  42926c:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  429270:	add	x8, x8, #0xdc3
  429274:	add	x2, x8, #0x3
  429278:	str	x0, [sp, #16]
  42927c:	ldr	x8, [sp, #16]
  429280:	str	x2, [sp, #8]
  429284:	cbnz	x8, 429294 <ascii_strlower_n@plt+0x24e34>
  429288:	mov	x8, xzr
  42928c:	stur	x8, [x29, #-8]
  429290:	b	429300 <ascii_strlower_n@plt+0x24ea0>
  429294:	ldr	x8, [sp, #16]
  429298:	ldr	w9, [x8]
  42929c:	cmp	w9, #0x0
  4292a0:	cset	w9, hi  // hi = pmore
  4292a4:	mov	w10, #0x1                   	// #1
  4292a8:	eor	w9, w9, #0x1
  4292ac:	eor	w9, w9, w10
  4292b0:	eor	w9, w9, w10
  4292b4:	and	w9, w9, #0x1
  4292b8:	mov	w0, w9
  4292bc:	sxtw	x8, w0
  4292c0:	cbz	x8, 4292e8 <ascii_strlower_n@plt+0x24e88>
  4292c4:	mov	w8, wzr
  4292c8:	mov	w0, w8
  4292cc:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  4292d0:	add	x1, x1, #0xd0a
  4292d4:	ldr	x2, [sp, #8]
  4292d8:	mov	w3, #0x21                  	// #33
  4292dc:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  4292e0:	add	x4, x4, #0xe10
  4292e4:	bl	4039d0 <log_assert_failed_realm@plt>
  4292e8:	ldr	x8, [sp, #16]
  4292ec:	ldr	w9, [x8]
  4292f0:	add	w9, w9, #0x1
  4292f4:	str	w9, [x8]
  4292f8:	ldr	x8, [sp, #16]
  4292fc:	stur	x8, [x29, #-8]
  429300:	ldur	x0, [x29, #-8]
  429304:	ldp	x29, x30, [sp, #32]
  429308:	add	sp, sp, #0x30
  42930c:	ret
  429310:	sub	sp, sp, #0x30
  429314:	stp	x29, x30, [sp, #32]
  429318:	add	x29, sp, #0x20
  42931c:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  429320:	add	x8, x8, #0xdc3
  429324:	add	x2, x8, #0x3
  429328:	str	x0, [sp, #16]
  42932c:	ldr	x8, [sp, #16]
  429330:	str	x2, [sp, #8]
  429334:	cbnz	x8, 429344 <ascii_strlower_n@plt+0x24ee4>
  429338:	mov	x8, xzr
  42933c:	stur	x8, [x29, #-8]
  429340:	b	4293d4 <ascii_strlower_n@plt+0x24f74>
  429344:	ldr	x8, [sp, #16]
  429348:	ldr	w9, [x8]
  42934c:	cmp	w9, #0x0
  429350:	cset	w9, hi  // hi = pmore
  429354:	mov	w10, #0x1                   	// #1
  429358:	eor	w9, w9, #0x1
  42935c:	eor	w9, w9, w10
  429360:	eor	w9, w9, w10
  429364:	and	w9, w9, #0x1
  429368:	mov	w0, w9
  42936c:	sxtw	x8, w0
  429370:	cbz	x8, 429398 <ascii_strlower_n@plt+0x24f38>
  429374:	mov	w8, wzr
  429378:	mov	w0, w8
  42937c:	adrp	x1, 430000 <ascii_strlower_n@plt+0x2bba0>
  429380:	add	x1, x1, #0xd0a
  429384:	ldr	x2, [sp, #8]
  429388:	mov	w3, #0x21                  	// #33
  42938c:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  429390:	add	x4, x4, #0xe3d
  429394:	bl	4039d0 <log_assert_failed_realm@plt>
  429398:	ldr	x8, [sp, #16]
  42939c:	ldr	w9, [x8]
  4293a0:	subs	w9, w9, #0x1
  4293a4:	str	w9, [x8]
  4293a8:	ldr	x8, [sp, #16]
  4293ac:	ldr	w9, [x8]
  4293b0:	cmp	w9, #0x0
  4293b4:	cset	w9, ls  // ls = plast
  4293b8:	tbnz	w9, #0, 4293c8 <ascii_strlower_n@plt+0x24f68>
  4293bc:	mov	x8, xzr
  4293c0:	stur	x8, [x29, #-8]
  4293c4:	b	4293d4 <ascii_strlower_n@plt+0x24f74>
  4293c8:	ldr	x0, [sp, #16]
  4293cc:	bl	4293e4 <ascii_strlower_n@plt+0x24f84>
  4293d0:	stur	x0, [x29, #-8]
  4293d4:	ldur	x0, [x29, #-8]
  4293d8:	ldp	x29, x30, [sp, #32]
  4293dc:	add	sp, sp, #0x30
  4293e0:	ret
  4293e4:	sub	sp, sp, #0x30
  4293e8:	stp	x29, x30, [sp, #32]
  4293ec:	add	x29, sp, #0x20
  4293f0:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  4293f4:	add	x8, x8, #0xdc3
  4293f8:	add	x2, x8, #0x3
  4293fc:	stur	x0, [x29, #-8]
  429400:	str	x2, [sp, #8]
  429404:	ldur	x8, [x29, #-8]
  429408:	cmp	x8, #0x0
  42940c:	cset	w9, ne  // ne = any
  429410:	mov	w10, #0x1                   	// #1
  429414:	eor	w9, w9, #0x1
  429418:	eor	w9, w9, w10
  42941c:	eor	w9, w9, w10
  429420:	and	w9, w9, #0x1
  429424:	mov	w0, w9
  429428:	sxtw	x8, w0
  42942c:	cbz	x8, 429454 <ascii_strlower_n@plt+0x24ff4>
  429430:	mov	w8, wzr
  429434:	mov	w0, w8
  429438:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  42943c:	add	x1, x1, #0xea6
  429440:	ldr	x2, [sp, #8]
  429444:	mov	w3, #0x1a                  	// #26
  429448:	adrp	x4, 433000 <ascii_strlower_n@plt+0x2eba0>
  42944c:	add	x4, x4, #0x15a
  429450:	bl	4039d0 <log_assert_failed_realm@plt>
  429454:	str	xzr, [sp, #16]
  429458:	ldr	x8, [sp, #16]
  42945c:	ldur	x9, [x29, #-8]
  429460:	ldr	x9, [x9, #8]
  429464:	cmp	x8, x9
  429468:	b.cs	42949c <ascii_strlower_n@plt+0x2503c>  // b.hs, b.nlast
  42946c:	ldur	x8, [x29, #-8]
  429470:	add	x8, x8, #0x18
  429474:	ldr	x9, [sp, #16]
  429478:	mov	x10, #0x8                   	// #8
  42947c:	mul	x9, x10, x9
  429480:	add	x8, x8, x9
  429484:	ldr	x0, [x8]
  429488:	bl	41eccc <ascii_strlower_n@plt+0x1a86c>
  42948c:	ldr	x8, [sp, #16]
  429490:	add	x8, x8, #0x1
  429494:	str	x8, [sp, #16]
  429498:	b	429458 <ascii_strlower_n@plt+0x24ff8>
  42949c:	ldur	x0, [x29, #-8]
  4294a0:	bl	42adc8 <ascii_strlower_n@plt+0x26968>
  4294a4:	ldp	x29, x30, [sp, #32]
  4294a8:	add	sp, sp, #0x30
  4294ac:	ret
  4294b0:	sub	sp, sp, #0x30
  4294b4:	stp	x29, x30, [sp, #32]
  4294b8:	add	x29, sp, #0x20
  4294bc:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  4294c0:	add	x8, x8, #0xdc3
  4294c4:	add	x8, x8, #0x3
  4294c8:	str	x0, [sp, #16]
  4294cc:	str	x1, [sp, #8]
  4294d0:	str	x8, [sp]
  4294d4:	ldr	x8, [sp, #8]
  4294d8:	cmp	x8, #0x0
  4294dc:	cset	w9, ne  // ne = any
  4294e0:	mov	w10, #0x1                   	// #1
  4294e4:	eor	w9, w9, #0x1
  4294e8:	eor	w9, w9, w10
  4294ec:	eor	w9, w9, w10
  4294f0:	and	w9, w9, #0x1
  4294f4:	mov	w0, w9
  4294f8:	sxtw	x8, w0
  4294fc:	cbz	x8, 429524 <ascii_strlower_n@plt+0x250c4>
  429500:	mov	w8, wzr
  429504:	mov	w0, w8
  429508:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  42950c:	add	x1, x1, #0x5c2
  429510:	ldr	x2, [sp]
  429514:	mov	w3, #0x26                  	// #38
  429518:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  42951c:	add	x4, x4, #0xe6c
  429520:	bl	4039d0 <log_assert_failed_realm@plt>
  429524:	ldr	x8, [sp, #16]
  429528:	cmp	x8, #0x0
  42952c:	cset	w9, ne  // ne = any
  429530:	mov	w10, #0x1                   	// #1
  429534:	eor	w9, w9, #0x1
  429538:	eor	w9, w9, w10
  42953c:	eor	w9, w9, w10
  429540:	and	w9, w9, #0x1
  429544:	mov	w0, w9
  429548:	sxtw	x8, w0
  42954c:	cbz	x8, 429574 <ascii_strlower_n@plt+0x25114>
  429550:	mov	w8, wzr
  429554:	mov	w0, w8
  429558:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  42955c:	add	x1, x1, #0xea6
  429560:	ldr	x2, [sp]
  429564:	mov	w3, #0x27                  	// #39
  429568:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  42956c:	add	x4, x4, #0xe6c
  429570:	bl	4039d0 <log_assert_failed_realm@plt>
  429574:	ldr	x8, [sp, #16]
  429578:	ldr	x8, [x8, #8]
  42957c:	ldr	x9, [sp, #16]
  429580:	ldr	x9, [x9, #16]
  429584:	cmp	x8, x9
  429588:	b.cc	429598 <ascii_strlower_n@plt+0x25138>  // b.lo, b.ul, b.last
  42958c:	mov	w8, #0xffffffe4            	// #-28
  429590:	stur	w8, [x29, #-4]
  429594:	b	4295cc <ascii_strlower_n@plt+0x2516c>
  429598:	ldr	x0, [sp, #8]
  42959c:	bl	41e8dc <ascii_strlower_n@plt+0x1a47c>
  4295a0:	ldr	x8, [sp, #16]
  4295a4:	add	x8, x8, #0x18
  4295a8:	ldr	x9, [sp, #16]
  4295ac:	mov	x10, #0x8                   	// #8
  4295b0:	ldr	x11, [x9, #8]
  4295b4:	add	x12, x11, #0x1
  4295b8:	str	x12, [x9, #8]
  4295bc:	mul	x9, x10, x11
  4295c0:	add	x8, x8, x9
  4295c4:	str	x0, [x8]
  4295c8:	stur	wzr, [x29, #-4]
  4295cc:	ldur	w0, [x29, #-4]
  4295d0:	ldp	x29, x30, [sp, #32]
  4295d4:	add	sp, sp, #0x30
  4295d8:	ret
  4295dc:	sub	sp, sp, #0x40
  4295e0:	stp	x29, x30, [sp, #48]
  4295e4:	add	x29, sp, #0x30
  4295e8:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  4295ec:	add	x8, x8, #0xdc3
  4295f0:	add	x2, x8, #0x3
  4295f4:	stur	x0, [x29, #-16]
  4295f8:	str	x1, [sp, #24]
  4295fc:	str	x2, [sp]
  429600:	ldr	x8, [sp, #24]
  429604:	cmp	x8, #0x0
  429608:	cset	w9, ne  // ne = any
  42960c:	mov	w10, #0x1                   	// #1
  429610:	eor	w9, w9, #0x1
  429614:	eor	w9, w9, w10
  429618:	eor	w9, w9, w10
  42961c:	and	w9, w9, #0x1
  429620:	mov	w0, w9
  429624:	sxtw	x8, w0
  429628:	cbz	x8, 429650 <ascii_strlower_n@plt+0x251f0>
  42962c:	mov	w8, wzr
  429630:	mov	w0, w8
  429634:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  429638:	add	x1, x1, #0x5c2
  42963c:	ldr	x2, [sp]
  429640:	mov	w3, #0x33                  	// #51
  429644:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  429648:	add	x4, x4, #0xea8
  42964c:	bl	4039d0 <log_assert_failed_realm@plt>
  429650:	ldur	x8, [x29, #-16]
  429654:	cbnz	x8, 429664 <ascii_strlower_n@plt+0x25204>
  429658:	mov	w8, #0xffffffe4            	// #-28
  42965c:	stur	w8, [x29, #-4]
  429660:	b	4296f8 <ascii_strlower_n@plt+0x25298>
  429664:	str	xzr, [sp, #8]
  429668:	ldr	x8, [sp, #8]
  42966c:	ldur	x9, [x29, #-16]
  429670:	ldr	x9, [x9, #8]
  429674:	cmp	x8, x9
  429678:	b.cs	4296e8 <ascii_strlower_n@plt+0x25288>  // b.hs, b.nlast
  42967c:	ldur	x8, [x29, #-16]
  429680:	add	x8, x8, #0x18
  429684:	ldr	x9, [sp, #8]
  429688:	mov	x10, #0x8                   	// #8
  42968c:	mul	x9, x10, x9
  429690:	add	x8, x8, x9
  429694:	ldr	x0, [x8]
  429698:	ldr	x1, [sp, #24]
  42969c:	bl	41efe0 <ascii_strlower_n@plt+0x1ab80>
  4296a0:	str	w0, [sp, #20]
  4296a4:	ldr	w11, [sp, #20]
  4296a8:	cmp	w11, #0x0
  4296ac:	cset	w11, ge  // ge = tcont
  4296b0:	tbnz	w11, #0, 4296c0 <ascii_strlower_n@plt+0x25260>
  4296b4:	ldr	w8, [sp, #20]
  4296b8:	stur	w8, [x29, #-4]
  4296bc:	b	4296f8 <ascii_strlower_n@plt+0x25298>
  4296c0:	ldr	w8, [sp, #20]
  4296c4:	cmp	w8, #0x0
  4296c8:	cset	w8, le
  4296cc:	tbnz	w8, #0, 4296d8 <ascii_strlower_n@plt+0x25278>
  4296d0:	stur	wzr, [x29, #-4]
  4296d4:	b	4296f8 <ascii_strlower_n@plt+0x25298>
  4296d8:	ldr	x8, [sp, #8]
  4296dc:	add	x8, x8, #0x1
  4296e0:	str	x8, [sp, #8]
  4296e4:	b	429668 <ascii_strlower_n@plt+0x25208>
  4296e8:	ldur	x0, [x29, #-16]
  4296ec:	ldr	x1, [sp, #24]
  4296f0:	bl	4294b0 <ascii_strlower_n@plt+0x25050>
  4296f4:	stur	w0, [x29, #-4]
  4296f8:	ldur	w0, [x29, #-4]
  4296fc:	ldp	x29, x30, [sp, #48]
  429700:	add	sp, sp, #0x40
  429704:	ret
  429708:	sub	sp, sp, #0x50
  42970c:	stp	x29, x30, [sp, #64]
  429710:	add	x29, sp, #0x40
  429714:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  429718:	add	x8, x8, #0xdc3
  42971c:	add	x8, x8, #0x3
  429720:	stur	x0, [x29, #-16]
  429724:	stur	x1, [x29, #-24]
  429728:	str	x2, [sp, #32]
  42972c:	str	x8, [sp, #8]
  429730:	ldur	x8, [x29, #-24]
  429734:	cmp	x8, #0x0
  429738:	cset	w9, ne  // ne = any
  42973c:	mov	w10, #0x1                   	// #1
  429740:	eor	w9, w9, #0x1
  429744:	eor	w9, w9, w10
  429748:	eor	w9, w9, w10
  42974c:	and	w9, w9, #0x1
  429750:	mov	w0, w9
  429754:	sxtw	x8, w0
  429758:	cbz	x8, 429780 <ascii_strlower_n@plt+0x25320>
  42975c:	mov	w8, wzr
  429760:	mov	w0, w8
  429764:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  429768:	add	x1, x1, #0x20f
  42976c:	ldr	x2, [sp, #8]
  429770:	mov	w3, #0x47                  	// #71
  429774:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  429778:	add	x4, x4, #0xede
  42977c:	bl	4039d0 <log_assert_failed_realm@plt>
  429780:	ldur	x8, [x29, #-16]
  429784:	cbnz	x8, 429790 <ascii_strlower_n@plt+0x25330>
  429788:	stur	wzr, [x29, #-4]
  42978c:	b	4297fc <ascii_strlower_n@plt+0x2539c>
  429790:	str	xzr, [sp, #24]
  429794:	ldr	x8, [sp, #24]
  429798:	ldur	x9, [x29, #-16]
  42979c:	ldr	x9, [x9, #8]
  4297a0:	cmp	x8, x9
  4297a4:	b.cs	4297f8 <ascii_strlower_n@plt+0x25398>  // b.hs, b.nlast
  4297a8:	ldur	x8, [x29, #-16]
  4297ac:	add	x8, x8, #0x18
  4297b0:	ldr	x9, [sp, #24]
  4297b4:	mov	x10, #0x8                   	// #8
  4297b8:	mul	x9, x10, x9
  4297bc:	add	x8, x8, x9
  4297c0:	ldr	x0, [x8]
  4297c4:	ldur	x1, [x29, #-24]
  4297c8:	ldr	x2, [sp, #32]
  4297cc:	bl	41f0b4 <ascii_strlower_n@plt+0x1ac54>
  4297d0:	str	w0, [sp, #20]
  4297d4:	ldr	w11, [sp, #20]
  4297d8:	cbz	w11, 4297e8 <ascii_strlower_n@plt+0x25388>
  4297dc:	ldr	w8, [sp, #20]
  4297e0:	stur	w8, [x29, #-4]
  4297e4:	b	4297fc <ascii_strlower_n@plt+0x2539c>
  4297e8:	ldr	x8, [sp, #24]
  4297ec:	add	x8, x8, #0x1
  4297f0:	str	x8, [sp, #24]
  4297f4:	b	429794 <ascii_strlower_n@plt+0x25334>
  4297f8:	stur	wzr, [x29, #-4]
  4297fc:	ldur	w0, [x29, #-4]
  429800:	ldp	x29, x30, [sp, #64]
  429804:	add	sp, sp, #0x50
  429808:	ret
  42980c:	sub	sp, sp, #0x50
  429810:	stp	x29, x30, [sp, #64]
  429814:	add	x29, sp, #0x40
  429818:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  42981c:	add	x8, x8, #0xdc3
  429820:	add	x8, x8, #0x3
  429824:	stur	x0, [x29, #-16]
  429828:	stur	x1, [x29, #-24]
  42982c:	str	x2, [sp, #32]
  429830:	str	x8, [sp, #8]
  429834:	ldur	x8, [x29, #-24]
  429838:	cmp	x8, #0x0
  42983c:	cset	w9, ne  // ne = any
  429840:	mov	w10, #0x1                   	// #1
  429844:	eor	w9, w9, #0x1
  429848:	eor	w9, w9, w10
  42984c:	eor	w9, w9, w10
  429850:	and	w9, w9, #0x1
  429854:	mov	w0, w9
  429858:	sxtw	x8, w0
  42985c:	cbz	x8, 429884 <ascii_strlower_n@plt+0x25424>
  429860:	mov	w8, wzr
  429864:	mov	w0, w8
  429868:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  42986c:	add	x1, x1, #0x20f
  429870:	ldr	x2, [sp, #8]
  429874:	mov	w3, #0x59                  	// #89
  429878:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  42987c:	add	x4, x4, #0xf2c
  429880:	bl	4039d0 <log_assert_failed_realm@plt>
  429884:	ldur	x8, [x29, #-16]
  429888:	cbnz	x8, 429894 <ascii_strlower_n@plt+0x25434>
  42988c:	stur	wzr, [x29, #-4]
  429890:	b	429998 <ascii_strlower_n@plt+0x25538>
  429894:	mov	w8, #0x0                   	// #0
  429898:	strb	w8, [sp, #19]
  42989c:	ldur	x9, [x29, #-24]
  4298a0:	ldr	x9, [x9, #8]
  4298a4:	ldrh	w8, [x9, #6]
  4298a8:	cmp	w8, #0x5
  4298ac:	str	w8, [sp, #4]
  4298b0:	b.eq	4298d0 <ascii_strlower_n@plt+0x25470>  // b.none
  4298b4:	b	4298b8 <ascii_strlower_n@plt+0x25458>
  4298b8:	ldr	w8, [sp, #4]
  4298bc:	cmp	w8, #0x27
  4298c0:	cset	w9, eq  // eq = none
  4298c4:	eor	w9, w9, #0x1
  4298c8:	tbnz	w9, #0, 4298dc <ascii_strlower_n@plt+0x2547c>
  4298cc:	b	4298d0 <ascii_strlower_n@plt+0x25470>
  4298d0:	mov	w8, #0x1                   	// #1
  4298d4:	strb	w8, [sp, #19]
  4298d8:	b	4298dc <ascii_strlower_n@plt+0x2547c>
  4298dc:	ldrb	w8, [sp, #19]
  4298e0:	and	w8, w8, #0x1
  4298e4:	strb	w8, [sp, #18]
  4298e8:	ldrb	w8, [sp, #18]
  4298ec:	tbnz	w8, #0, 4298f8 <ascii_strlower_n@plt+0x25498>
  4298f0:	stur	wzr, [x29, #-4]
  4298f4:	b	429998 <ascii_strlower_n@plt+0x25538>
  4298f8:	str	xzr, [sp, #24]
  4298fc:	ldr	x8, [sp, #24]
  429900:	ldur	x9, [x29, #-16]
  429904:	ldr	x9, [x9, #8]
  429908:	cmp	x8, x9
  42990c:	b.cs	429994 <ascii_strlower_n@plt+0x25534>  // b.hs, b.nlast
  429910:	ldur	x8, [x29, #-16]
  429914:	add	x8, x8, #0x18
  429918:	ldr	x9, [sp, #24]
  42991c:	mov	x10, #0x8                   	// #8
  429920:	mul	x9, x10, x9
  429924:	add	x8, x8, x9
  429928:	ldr	x8, [x8]
  42992c:	ldrh	w0, [x8, #6]
  429930:	bl	42bc6c <ascii_strlower_n@plt+0x2780c>
  429934:	tbnz	w0, #0, 429940 <ascii_strlower_n@plt+0x254e0>
  429938:	stur	wzr, [x29, #-4]
  42993c:	b	429998 <ascii_strlower_n@plt+0x25538>
  429940:	ldur	x8, [x29, #-16]
  429944:	add	x8, x8, #0x18
  429948:	ldr	x9, [sp, #24]
  42994c:	mov	x10, #0x8                   	// #8
  429950:	mul	x9, x10, x9
  429954:	add	x8, x8, x9
  429958:	ldr	x0, [x8]
  42995c:	ldur	x8, [x29, #-24]
  429960:	ldr	x1, [x8, #8]
  429964:	ldr	x2, [sp, #32]
  429968:	bl	41f310 <ascii_strlower_n@plt+0x1aeb0>
  42996c:	str	w0, [sp, #20]
  429970:	ldr	w11, [sp, #20]
  429974:	cbz	w11, 429984 <ascii_strlower_n@plt+0x25524>
  429978:	ldr	w8, [sp, #20]
  42997c:	stur	w8, [x29, #-4]
  429980:	b	429998 <ascii_strlower_n@plt+0x25538>
  429984:	ldr	x8, [sp, #24]
  429988:	add	x8, x8, #0x1
  42998c:	str	x8, [sp, #24]
  429990:	b	4298fc <ascii_strlower_n@plt+0x2549c>
  429994:	stur	wzr, [x29, #-4]
  429998:	ldur	w0, [x29, #-4]
  42999c:	ldp	x29, x30, [sp, #64]
  4299a0:	add	sp, sp, #0x50
  4299a4:	ret
  4299a8:	sub	sp, sp, #0x40
  4299ac:	stp	x29, x30, [sp, #48]
  4299b0:	add	x29, sp, #0x30
  4299b4:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  4299b8:	add	x8, x8, #0xdc3
  4299bc:	add	x2, x8, #0x3
  4299c0:	stur	x0, [x29, #-16]
  4299c4:	ldur	x8, [x29, #-16]
  4299c8:	str	x2, [sp]
  4299cc:	cbnz	x8, 4299d8 <ascii_strlower_n@plt+0x25578>
  4299d0:	stur	wzr, [x29, #-4]
  4299d4:	b	429b50 <ascii_strlower_n@plt+0x256f0>
  4299d8:	ldur	x8, [x29, #-16]
  4299dc:	ldr	x8, [x8, #8]
  4299e0:	cmp	x8, #0x0
  4299e4:	cset	w9, hi  // hi = pmore
  4299e8:	tbnz	w9, #0, 4299f4 <ascii_strlower_n@plt+0x25594>
  4299ec:	stur	wzr, [x29, #-4]
  4299f0:	b	429b50 <ascii_strlower_n@plt+0x256f0>
  4299f4:	ldur	x8, [x29, #-16]
  4299f8:	ldr	x8, [x8, #8]
  4299fc:	mov	x9, #0xffff                	// #65535
  429a00:	cmp	x8, x9
  429a04:	b.ls	429a10 <ascii_strlower_n@plt+0x255b0>  // b.plast
  429a08:	stur	wzr, [x29, #-4]
  429a0c:	b	429b50 <ascii_strlower_n@plt+0x256f0>
  429a10:	ldur	x8, [x29, #-16]
  429a14:	ldr	x0, [x8, #24]
  429a18:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  429a1c:	str	x0, [sp, #24]
  429a20:	ldr	x8, [sp, #24]
  429a24:	cbnz	x8, 429a30 <ascii_strlower_n@plt+0x255d0>
  429a28:	stur	wzr, [x29, #-4]
  429a2c:	b	429b50 <ascii_strlower_n@plt+0x256f0>
  429a30:	str	xzr, [sp, #16]
  429a34:	ldr	x8, [sp, #16]
  429a38:	ldur	x9, [x29, #-16]
  429a3c:	ldr	x9, [x9, #8]
  429a40:	cmp	x8, x9
  429a44:	b.cs	429b48 <ascii_strlower_n@plt+0x256e8>  // b.hs, b.nlast
  429a48:	ldur	x8, [x29, #-16]
  429a4c:	add	x8, x8, #0x18
  429a50:	ldr	x9, [sp, #16]
  429a54:	mov	x10, #0x8                   	// #8
  429a58:	mul	x9, x10, x9
  429a5c:	add	x8, x8, x9
  429a60:	ldr	x8, [x8]
  429a64:	cmp	x8, #0x0
  429a68:	cset	w11, ne  // ne = any
  429a6c:	mov	w12, #0x1                   	// #1
  429a70:	eor	w11, w11, #0x1
  429a74:	eor	w11, w11, w12
  429a78:	eor	w11, w11, w12
  429a7c:	and	w11, w11, #0x1
  429a80:	mov	w0, w11
  429a84:	sxtw	x8, w0
  429a88:	cbz	x8, 429ab0 <ascii_strlower_n@plt+0x25650>
  429a8c:	mov	w8, wzr
  429a90:	mov	w0, w8
  429a94:	adrp	x1, 432000 <ascii_strlower_n@plt+0x2dba0>
  429a98:	add	x1, x1, #0xf86
  429a9c:	ldr	x2, [sp]
  429aa0:	mov	w3, #0x82                  	// #130
  429aa4:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  429aa8:	add	x4, x4, #0xf91
  429aac:	bl	4039d0 <log_assert_failed_realm@plt>
  429ab0:	ldr	x8, [sp, #16]
  429ab4:	cmp	x8, #0x0
  429ab8:	cset	w9, ls  // ls = plast
  429abc:	tbnz	w9, #0, 429b08 <ascii_strlower_n@plt+0x256a8>
  429ac0:	ldur	x8, [x29, #-16]
  429ac4:	add	x8, x8, #0x18
  429ac8:	ldr	x9, [sp, #16]
  429acc:	mov	x10, #0x8                   	// #8
  429ad0:	mul	x9, x10, x9
  429ad4:	add	x8, x8, x9
  429ad8:	ldr	x0, [x8]
  429adc:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  429ae0:	ldr	x1, [sp, #24]
  429ae4:	bl	4042b0 <dns_name_equal@plt>
  429ae8:	str	w0, [sp, #12]
  429aec:	ldr	w11, [sp, #12]
  429af0:	cmp	w11, #0x0
  429af4:	cset	w11, gt
  429af8:	tbnz	w11, #0, 429b08 <ascii_strlower_n@plt+0x256a8>
  429afc:	ldr	w8, [sp, #12]
  429b00:	stur	w8, [x29, #-4]
  429b04:	b	429b50 <ascii_strlower_n@plt+0x256f0>
  429b08:	ldur	x8, [x29, #-16]
  429b0c:	add	x8, x8, #0x18
  429b10:	ldr	x9, [sp, #16]
  429b14:	mov	x10, #0x8                   	// #8
  429b18:	mul	x9, x10, x9
  429b1c:	add	x8, x8, x9
  429b20:	ldr	x8, [x8]
  429b24:	ldrh	w0, [x8, #6]
  429b28:	bl	42baf0 <ascii_strlower_n@plt+0x27690>
  429b2c:	tbnz	w0, #0, 429b38 <ascii_strlower_n@plt+0x256d8>
  429b30:	stur	wzr, [x29, #-4]
  429b34:	b	429b50 <ascii_strlower_n@plt+0x256f0>
  429b38:	ldr	x8, [sp, #16]
  429b3c:	add	x8, x8, #0x1
  429b40:	str	x8, [sp, #16]
  429b44:	b	429a34 <ascii_strlower_n@plt+0x255d4>
  429b48:	mov	w8, #0x1                   	// #1
  429b4c:	stur	w8, [x29, #-4]
  429b50:	ldur	w0, [x29, #-4]
  429b54:	ldp	x29, x30, [sp, #48]
  429b58:	add	sp, sp, #0x40
  429b5c:	ret
  429b60:	sub	sp, sp, #0x40
  429b64:	stp	x29, x30, [sp, #48]
  429b68:	add	x29, sp, #0x30
  429b6c:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  429b70:	add	x8, x8, #0xdc3
  429b74:	add	x2, x8, #0x3
  429b78:	stur	x0, [x29, #-16]
  429b7c:	str	x1, [sp, #24]
  429b80:	str	x2, [sp]
  429b84:	ldr	x8, [sp, #24]
  429b88:	cmp	x8, #0x0
  429b8c:	cset	w9, ne  // ne = any
  429b90:	mov	w10, #0x1                   	// #1
  429b94:	eor	w9, w9, #0x1
  429b98:	eor	w9, w9, w10
  429b9c:	eor	w9, w9, w10
  429ba0:	and	w9, w9, #0x1
  429ba4:	mov	w0, w9
  429ba8:	sxtw	x8, w0
  429bac:	cbz	x8, 429bd4 <ascii_strlower_n@plt+0x25774>
  429bb0:	mov	w8, wzr
  429bb4:	mov	w0, w8
  429bb8:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  429bbc:	add	x1, x1, #0x93
  429bc0:	ldr	x2, [sp]
  429bc4:	mov	w3, #0x95                  	// #149
  429bc8:	adrp	x4, 432000 <ascii_strlower_n@plt+0x2dba0>
  429bcc:	add	x4, x4, #0xfc4
  429bd0:	bl	4039d0 <log_assert_failed_realm@plt>
  429bd4:	ldur	x8, [x29, #-16]
  429bd8:	cbnz	x8, 429be4 <ascii_strlower_n@plt+0x25784>
  429bdc:	stur	wzr, [x29, #-4]
  429be0:	b	429c4c <ascii_strlower_n@plt+0x257ec>
  429be4:	str	xzr, [sp, #16]
  429be8:	ldr	x8, [sp, #16]
  429bec:	ldur	x9, [x29, #-16]
  429bf0:	ldr	x9, [x9, #8]
  429bf4:	cmp	x8, x9
  429bf8:	b.cs	429c48 <ascii_strlower_n@plt+0x257e8>  // b.hs, b.nlast
  429bfc:	ldur	x8, [x29, #-16]
  429c00:	add	x8, x8, #0x18
  429c04:	ldr	x9, [sp, #16]
  429c08:	mov	x10, #0x8                   	// #8
  429c0c:	mul	x9, x10, x9
  429c10:	add	x8, x8, x9
  429c14:	ldr	x0, [x8]
  429c18:	ldr	x1, [sp, #24]
  429c1c:	bl	41efe0 <ascii_strlower_n@plt+0x1ab80>
  429c20:	str	w0, [sp, #12]
  429c24:	ldr	w11, [sp, #12]
  429c28:	cbz	w11, 429c38 <ascii_strlower_n@plt+0x257d8>
  429c2c:	ldr	w8, [sp, #12]
  429c30:	stur	w8, [x29, #-4]
  429c34:	b	429c4c <ascii_strlower_n@plt+0x257ec>
  429c38:	ldr	x8, [sp, #16]
  429c3c:	add	x8, x8, #0x1
  429c40:	str	x8, [sp, #16]
  429c44:	b	429be8 <ascii_strlower_n@plt+0x25788>
  429c48:	stur	wzr, [x29, #-4]
  429c4c:	ldur	w0, [x29, #-4]
  429c50:	ldp	x29, x30, [sp, #48]
  429c54:	add	sp, sp, #0x40
  429c58:	ret
  429c5c:	sub	sp, sp, #0x40
  429c60:	stp	x29, x30, [sp, #48]
  429c64:	add	x29, sp, #0x30
  429c68:	stur	x0, [x29, #-16]
  429c6c:	str	x1, [sp, #24]
  429c70:	ldur	x8, [x29, #-16]
  429c74:	ldr	x9, [sp, #24]
  429c78:	cmp	x8, x9
  429c7c:	b.ne	429c8c <ascii_strlower_n@plt+0x2582c>  // b.any
  429c80:	mov	w8, #0x1                   	// #1
  429c84:	stur	w8, [x29, #-4]
  429c88:	b	429dcc <ascii_strlower_n@plt+0x2596c>
  429c8c:	ldur	x8, [x29, #-16]
  429c90:	cbnz	x8, 429cc8 <ascii_strlower_n@plt+0x25868>
  429c94:	ldr	x8, [sp, #24]
  429c98:	mov	w9, #0x1                   	// #1
  429c9c:	str	w9, [sp, #8]
  429ca0:	cbz	x8, 429cb8 <ascii_strlower_n@plt+0x25858>
  429ca4:	ldr	x8, [sp, #24]
  429ca8:	ldr	x8, [x8, #8]
  429cac:	cmp	x8, #0x0
  429cb0:	cset	w9, eq  // eq = none
  429cb4:	str	w9, [sp, #8]
  429cb8:	ldr	w8, [sp, #8]
  429cbc:	and	w8, w8, #0x1
  429cc0:	stur	w8, [x29, #-4]
  429cc4:	b	429dcc <ascii_strlower_n@plt+0x2596c>
  429cc8:	ldr	x8, [sp, #24]
  429ccc:	cbnz	x8, 429cec <ascii_strlower_n@plt+0x2588c>
  429cd0:	ldur	x8, [x29, #-16]
  429cd4:	ldr	x8, [x8, #8]
  429cd8:	cmp	x8, #0x0
  429cdc:	cset	w9, eq  // eq = none
  429ce0:	and	w9, w9, #0x1
  429ce4:	stur	w9, [x29, #-4]
  429ce8:	b	429dcc <ascii_strlower_n@plt+0x2596c>
  429cec:	str	xzr, [sp, #16]
  429cf0:	ldr	x8, [sp, #16]
  429cf4:	ldur	x9, [x29, #-16]
  429cf8:	ldr	x9, [x9, #8]
  429cfc:	cmp	x8, x9
  429d00:	b.cs	429d58 <ascii_strlower_n@plt+0x258f8>  // b.hs, b.nlast
  429d04:	ldr	x0, [sp, #24]
  429d08:	ldur	x8, [x29, #-16]
  429d0c:	add	x8, x8, #0x18
  429d10:	ldr	x9, [sp, #16]
  429d14:	mov	x10, #0x8                   	// #8
  429d18:	mul	x9, x10, x9
  429d1c:	add	x8, x8, x9
  429d20:	ldr	x1, [x8]
  429d24:	bl	429b60 <ascii_strlower_n@plt+0x25700>
  429d28:	str	w0, [sp, #12]
  429d2c:	ldr	w11, [sp, #12]
  429d30:	cmp	w11, #0x0
  429d34:	cset	w11, gt
  429d38:	tbnz	w11, #0, 429d48 <ascii_strlower_n@plt+0x258e8>
  429d3c:	ldr	w8, [sp, #12]
  429d40:	stur	w8, [x29, #-4]
  429d44:	b	429dcc <ascii_strlower_n@plt+0x2596c>
  429d48:	ldr	x8, [sp, #16]
  429d4c:	add	x8, x8, #0x1
  429d50:	str	x8, [sp, #16]
  429d54:	b	429cf0 <ascii_strlower_n@plt+0x25890>
  429d58:	str	xzr, [sp, #16]
  429d5c:	ldr	x8, [sp, #16]
  429d60:	ldr	x9, [sp, #24]
  429d64:	ldr	x9, [x9, #8]
  429d68:	cmp	x8, x9
  429d6c:	b.cs	429dc4 <ascii_strlower_n@plt+0x25964>  // b.hs, b.nlast
  429d70:	ldur	x0, [x29, #-16]
  429d74:	ldr	x8, [sp, #24]
  429d78:	add	x8, x8, #0x18
  429d7c:	ldr	x9, [sp, #16]
  429d80:	mov	x10, #0x8                   	// #8
  429d84:	mul	x9, x10, x9
  429d88:	add	x8, x8, x9
  429d8c:	ldr	x1, [x8]
  429d90:	bl	429b60 <ascii_strlower_n@plt+0x25700>
  429d94:	str	w0, [sp, #12]
  429d98:	ldr	w11, [sp, #12]
  429d9c:	cmp	w11, #0x0
  429da0:	cset	w11, gt
  429da4:	tbnz	w11, #0, 429db4 <ascii_strlower_n@plt+0x25954>
  429da8:	ldr	w8, [sp, #12]
  429dac:	stur	w8, [x29, #-4]
  429db0:	b	429dcc <ascii_strlower_n@plt+0x2596c>
  429db4:	ldr	x8, [sp, #16]
  429db8:	add	x8, x8, #0x1
  429dbc:	str	x8, [sp, #16]
  429dc0:	b	429d5c <ascii_strlower_n@plt+0x258fc>
  429dc4:	mov	w8, #0x1                   	// #1
  429dc8:	stur	w8, [x29, #-4]
  429dcc:	ldur	w0, [x29, #-4]
  429dd0:	ldp	x29, x30, [sp, #48]
  429dd4:	add	sp, sp, #0x40
  429dd8:	ret
  429ddc:	sub	sp, sp, #0x100
  429de0:	stp	x29, x30, [sp, #240]
  429de4:	add	x29, sp, #0xf0
  429de8:	mov	x8, xzr
  429dec:	mov	w9, #0x1                   	// #1
  429df0:	adrp	x10, 432000 <ascii_strlower_n@plt+0x2dba0>
  429df4:	add	x10, x10, #0xdc3
  429df8:	add	x10, x10, #0x3
  429dfc:	adrp	x11, 433000 <ascii_strlower_n@plt+0x2eba0>
  429e00:	add	x11, x11, #0x5
  429e04:	stur	x0, [x29, #-16]
  429e08:	stur	x1, [x29, #-24]
  429e0c:	stur	x2, [x29, #-32]
  429e10:	stur	x8, [x29, #-40]
  429e14:	sturb	w9, [x29, #-49]
  429e18:	str	x10, [sp, #96]
  429e1c:	str	x11, [sp, #88]
  429e20:	ldur	x8, [x29, #-24]
  429e24:	cmp	x8, #0x0
  429e28:	cset	w9, ne  // ne = any
  429e2c:	mov	w10, #0x1                   	// #1
  429e30:	eor	w9, w9, #0x1
  429e34:	eor	w9, w9, w10
  429e38:	eor	w9, w9, w10
  429e3c:	and	w9, w9, #0x1
  429e40:	mov	w0, w9
  429e44:	sxtw	x8, w0
  429e48:	cbz	x8, 429e6c <ascii_strlower_n@plt+0x25a0c>
  429e4c:	mov	w8, wzr
  429e50:	mov	w0, w8
  429e54:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  429e58:	add	x1, x1, #0x840
  429e5c:	ldr	x2, [sp, #96]
  429e60:	mov	w3, #0xc6                  	// #198
  429e64:	ldr	x4, [sp, #88]
  429e68:	bl	4039d0 <log_assert_failed_realm@plt>
  429e6c:	ldur	x8, [x29, #-32]
  429e70:	cmp	x8, #0x0
  429e74:	cset	w9, ne  // ne = any
  429e78:	mov	w10, #0x1                   	// #1
  429e7c:	eor	w9, w9, #0x1
  429e80:	eor	w9, w9, w10
  429e84:	eor	w9, w9, w10
  429e88:	and	w9, w9, #0x1
  429e8c:	mov	w0, w9
  429e90:	sxtw	x8, w0
  429e94:	cbz	x8, 429eb8 <ascii_strlower_n@plt+0x25a58>
  429e98:	mov	w8, wzr
  429e9c:	mov	w0, w8
  429ea0:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  429ea4:	add	x1, x1, #0x42e
  429ea8:	ldr	x2, [sp, #96]
  429eac:	mov	w3, #0xc7                  	// #199
  429eb0:	ldr	x4, [sp, #88]
  429eb4:	bl	4039d0 <log_assert_failed_realm@plt>
  429eb8:	mov	w8, #0x0                   	// #0
  429ebc:	sturb	w8, [x29, #-57]
  429ec0:	ldur	x9, [x29, #-24]
  429ec4:	ldr	x9, [x9, #8]
  429ec8:	ldrh	w8, [x9, #6]
  429ecc:	cmp	w8, #0x5
  429ed0:	str	w8, [sp, #84]
  429ed4:	b.eq	429ef4 <ascii_strlower_n@plt+0x25a94>  // b.none
  429ed8:	b	429edc <ascii_strlower_n@plt+0x25a7c>
  429edc:	ldr	w8, [sp, #84]
  429ee0:	cmp	w8, #0x27
  429ee4:	cset	w9, eq  // eq = none
  429ee8:	eor	w9, w9, #0x1
  429eec:	tbnz	w9, #0, 429f00 <ascii_strlower_n@plt+0x25aa0>
  429ef0:	b	429ef4 <ascii_strlower_n@plt+0x25a94>
  429ef4:	mov	w8, #0x1                   	// #1
  429ef8:	sturb	w8, [x29, #-57]
  429efc:	b	429f00 <ascii_strlower_n@plt+0x25aa0>
  429f00:	ldurb	w8, [x29, #-57]
  429f04:	mov	w9, #0x1                   	// #1
  429f08:	and	w8, w8, w9
  429f0c:	sturb	w8, [x29, #-58]
  429f10:	ldurb	w8, [x29, #-58]
  429f14:	eor	w8, w8, #0x1
  429f18:	eor	w8, w8, w9
  429f1c:	eor	w8, w8, w9
  429f20:	and	w8, w8, #0x1
  429f24:	mov	w0, w8
  429f28:	sxtw	x10, w0
  429f2c:	cbz	x10, 429f50 <ascii_strlower_n@plt+0x25af0>
  429f30:	mov	w8, wzr
  429f34:	mov	w0, w8
  429f38:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  429f3c:	add	x1, x1, #0xb89
  429f40:	ldr	x2, [sp, #96]
  429f44:	mov	w3, #0xc8                  	// #200
  429f48:	ldr	x4, [sp, #88]
  429f4c:	bl	4039d0 <log_assert_failed_realm@plt>
  429f50:	ldur	x0, [x29, #-16]
  429f54:	bl	42a3c0 <ascii_strlower_n@plt+0x25f60>
  429f58:	cmp	x0, #0x0
  429f5c:	cset	w8, hi  // hi = pmore
  429f60:	tbnz	w8, #0, 429f80 <ascii_strlower_n@plt+0x25b20>
  429f64:	ldur	x8, [x29, #-32]
  429f68:	mov	x9, xzr
  429f6c:	str	x9, [x8]
  429f70:	stur	wzr, [x29, #-4]
  429f74:	mov	w10, #0x1                   	// #1
  429f78:	stur	w10, [x29, #-64]
  429f7c:	b	42a374 <ascii_strlower_n@plt+0x25f14>
  429f80:	ldur	x8, [x29, #-16]
  429f84:	cbz	x8, 429fac <ascii_strlower_n@plt+0x25b4c>
  429f88:	ldur	x8, [x29, #-16]
  429f8c:	ldr	x8, [x8, #8]
  429f90:	cmp	x8, #0x0
  429f94:	cset	w9, ls  // ls = plast
  429f98:	tbnz	w9, #0, 429fac <ascii_strlower_n@plt+0x25b4c>
  429f9c:	ldur	x8, [x29, #-16]
  429fa0:	ldr	x8, [x8, #24]
  429fa4:	str	x8, [sp, #72]
  429fa8:	b	429fb4 <ascii_strlower_n@plt+0x25b54>
  429fac:	mov	x8, xzr
  429fb0:	str	x8, [sp, #72]
  429fb4:	ldr	x8, [sp, #72]
  429fb8:	stur	x8, [x29, #-48]
  429fbc:	stur	wzr, [x29, #-76]
  429fc0:	ldursw	x8, [x29, #-76]
  429fc4:	stur	x8, [x29, #-72]
  429fc8:	ldur	x8, [x29, #-16]
  429fcc:	mov	w9, #0x0                   	// #0
  429fd0:	str	w9, [sp, #68]
  429fd4:	cbz	x8, 429ff0 <ascii_strlower_n@plt+0x25b90>
  429fd8:	ldur	x8, [x29, #-72]
  429fdc:	ldur	x9, [x29, #-16]
  429fe0:	ldr	x9, [x9, #8]
  429fe4:	cmp	x8, x9
  429fe8:	cset	w10, cc  // cc = lo, ul, last
  429fec:	str	w10, [sp, #68]
  429ff0:	ldr	w8, [sp, #68]
  429ff4:	tbnz	w8, #0, 429ffc <ascii_strlower_n@plt+0x25b9c>
  429ff8:	b	42a190 <ascii_strlower_n@plt+0x25d30>
  429ffc:	mov	x8, xzr
  42a000:	stur	x8, [x29, #-88]
  42a004:	ldur	x8, [x29, #-24]
  42a008:	ldr	x8, [x8, #8]
  42a00c:	ldrh	w9, [x8, #6]
  42a010:	cmp	w9, #0x5
  42a014:	b.ne	42a028 <ascii_strlower_n@plt+0x25bc8>  // b.any
  42a018:	ldur	x8, [x29, #-24]
  42a01c:	ldr	x8, [x8, #80]
  42a020:	stur	x8, [x29, #-96]
  42a024:	b	42a0a8 <ascii_strlower_n@plt+0x25c48>
  42a028:	ldur	x0, [x29, #-48]
  42a02c:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  42a030:	ldur	x8, [x29, #-24]
  42a034:	ldr	x8, [x8, #8]
  42a038:	str	x0, [sp, #56]
  42a03c:	mov	x0, x8
  42a040:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  42a044:	ldur	x8, [x29, #-24]
  42a048:	ldr	x2, [x8, #80]
  42a04c:	ldr	x1, [sp, #56]
  42a050:	str	x0, [sp, #48]
  42a054:	mov	x0, x1
  42a058:	ldr	x1, [sp, #48]
  42a05c:	sub	x3, x29, #0x58
  42a060:	bl	404290 <dns_name_change_suffix@plt>
  42a064:	stur	w0, [x29, #-56]
  42a068:	ldur	w9, [x29, #-56]
  42a06c:	cmp	w9, #0x0
  42a070:	cset	w9, ge  // ge = tcont
  42a074:	tbnz	w9, #0, 42a08c <ascii_strlower_n@plt+0x25c2c>
  42a078:	ldur	w8, [x29, #-56]
  42a07c:	stur	w8, [x29, #-4]
  42a080:	mov	w8, #0x1                   	// #1
  42a084:	stur	w8, [x29, #-64]
  42a088:	b	42a100 <ascii_strlower_n@plt+0x25ca0>
  42a08c:	ldur	w8, [x29, #-56]
  42a090:	cbnz	w8, 42a0a0 <ascii_strlower_n@plt+0x25c40>
  42a094:	mov	w8, #0xb                   	// #11
  42a098:	stur	w8, [x29, #-64]
  42a09c:	b	42a100 <ascii_strlower_n@plt+0x25ca0>
  42a0a0:	ldur	x8, [x29, #-88]
  42a0a4:	stur	x8, [x29, #-96]
  42a0a8:	ldur	x0, [x29, #-48]
  42a0ac:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  42a0b0:	ldur	x1, [x29, #-96]
  42a0b4:	bl	4042b0 <dns_name_equal@plt>
  42a0b8:	stur	w0, [x29, #-56]
  42a0bc:	ldur	w8, [x29, #-56]
  42a0c0:	cmp	w8, #0x0
  42a0c4:	cset	w8, ge  // ge = tcont
  42a0c8:	tbnz	w8, #0, 42a0e0 <ascii_strlower_n@plt+0x25c80>
  42a0cc:	ldur	w8, [x29, #-56]
  42a0d0:	stur	w8, [x29, #-4]
  42a0d4:	mov	w8, #0x1                   	// #1
  42a0d8:	stur	w8, [x29, #-64]
  42a0dc:	b	42a100 <ascii_strlower_n@plt+0x25ca0>
  42a0e0:	ldur	w8, [x29, #-56]
  42a0e4:	cbnz	w8, 42a0fc <ascii_strlower_n@plt+0x25c9c>
  42a0e8:	mov	w8, #0x0                   	// #0
  42a0ec:	sturb	w8, [x29, #-49]
  42a0f0:	mov	w8, #0x9                   	// #9
  42a0f4:	stur	w8, [x29, #-64]
  42a0f8:	b	42a100 <ascii_strlower_n@plt+0x25ca0>
  42a0fc:	stur	wzr, [x29, #-64]
  42a100:	sub	x0, x29, #0x58
  42a104:	bl	42a3f8 <ascii_strlower_n@plt+0x25f98>
  42a108:	ldur	w8, [x29, #-64]
  42a10c:	str	w8, [sp, #44]
  42a110:	cbz	w8, 42a138 <ascii_strlower_n@plt+0x25cd8>
  42a114:	b	42a118 <ascii_strlower_n@plt+0x25cb8>
  42a118:	ldr	w8, [sp, #44]
  42a11c:	cmp	w8, #0x9
  42a120:	b.eq	42a190 <ascii_strlower_n@plt+0x25d30>  // b.none
  42a124:	b	42a128 <ascii_strlower_n@plt+0x25cc8>
  42a128:	ldr	w8, [sp, #44]
  42a12c:	cmp	w8, #0xb
  42a130:	b.eq	42a138 <ascii_strlower_n@plt+0x25cd8>  // b.none
  42a134:	b	42a374 <ascii_strlower_n@plt+0x25f14>
  42a138:	ldur	x8, [x29, #-72]
  42a13c:	add	x8, x8, #0x1
  42a140:	stur	x8, [x29, #-72]
  42a144:	ldur	x8, [x29, #-72]
  42a148:	ldur	x9, [x29, #-16]
  42a14c:	ldr	x9, [x9, #8]
  42a150:	cmp	x8, x9
  42a154:	b.cs	42a17c <ascii_strlower_n@plt+0x25d1c>  // b.hs, b.nlast
  42a158:	ldur	x8, [x29, #-16]
  42a15c:	add	x8, x8, #0x18
  42a160:	ldur	x9, [x29, #-72]
  42a164:	mov	x10, #0x8                   	// #8
  42a168:	mul	x9, x10, x9
  42a16c:	add	x8, x8, x9
  42a170:	ldr	x8, [x8]
  42a174:	str	x8, [sp, #32]
  42a178:	b	42a184 <ascii_strlower_n@plt+0x25d24>
  42a17c:	mov	x8, xzr
  42a180:	str	x8, [sp, #32]
  42a184:	ldr	x8, [sp, #32]
  42a188:	stur	x8, [x29, #-48]
  42a18c:	b	429fc8 <ascii_strlower_n@plt+0x25b68>
  42a190:	ldurb	w8, [x29, #-49]
  42a194:	tbnz	w8, #0, 42a19c <ascii_strlower_n@plt+0x25d3c>
  42a198:	b	42a1b8 <ascii_strlower_n@plt+0x25d58>
  42a19c:	ldur	x8, [x29, #-32]
  42a1a0:	mov	x9, xzr
  42a1a4:	str	x9, [x8]
  42a1a8:	stur	wzr, [x29, #-4]
  42a1ac:	mov	w10, #0x1                   	// #1
  42a1b0:	stur	w10, [x29, #-64]
  42a1b4:	b	42a374 <ascii_strlower_n@plt+0x25f14>
  42a1b8:	ldur	x8, [x29, #-16]
  42a1bc:	ldr	x0, [x8, #8]
  42a1c0:	bl	429190 <ascii_strlower_n@plt+0x24d30>
  42a1c4:	stur	x0, [x29, #-40]
  42a1c8:	ldur	x8, [x29, #-40]
  42a1cc:	cbnz	x8, 42a1e4 <ascii_strlower_n@plt+0x25d84>
  42a1d0:	mov	w8, #0xfffffff4            	// #-12
  42a1d4:	stur	w8, [x29, #-4]
  42a1d8:	mov	w8, #0x1                   	// #1
  42a1dc:	stur	w8, [x29, #-64]
  42a1e0:	b	42a374 <ascii_strlower_n@plt+0x25f14>
  42a1e4:	ldur	x8, [x29, #-16]
  42a1e8:	cbz	x8, 42a210 <ascii_strlower_n@plt+0x25db0>
  42a1ec:	ldur	x8, [x29, #-16]
  42a1f0:	ldr	x8, [x8, #8]
  42a1f4:	cmp	x8, #0x0
  42a1f8:	cset	w9, ls  // ls = plast
  42a1fc:	tbnz	w9, #0, 42a210 <ascii_strlower_n@plt+0x25db0>
  42a200:	ldur	x8, [x29, #-16]
  42a204:	ldr	x8, [x8, #24]
  42a208:	str	x8, [sp, #24]
  42a20c:	b	42a218 <ascii_strlower_n@plt+0x25db8>
  42a210:	mov	x8, xzr
  42a214:	str	x8, [sp, #24]
  42a218:	ldr	x8, [sp, #24]
  42a21c:	stur	x8, [x29, #-48]
  42a220:	stur	wzr, [x29, #-108]
  42a224:	ldursw	x8, [x29, #-108]
  42a228:	stur	x8, [x29, #-104]
  42a22c:	ldur	x8, [x29, #-16]
  42a230:	mov	w9, #0x0                   	// #0
  42a234:	str	w9, [sp, #20]
  42a238:	cbz	x8, 42a254 <ascii_strlower_n@plt+0x25df4>
  42a23c:	ldur	x8, [x29, #-104]
  42a240:	ldur	x9, [x29, #-16]
  42a244:	ldr	x9, [x9, #8]
  42a248:	cmp	x8, x9
  42a24c:	cset	w10, cc  // cc = lo, ul, last
  42a250:	str	w10, [sp, #20]
  42a254:	ldr	w8, [sp, #20]
  42a258:	tbnz	w8, #0, 42a260 <ascii_strlower_n@plt+0x25e00>
  42a25c:	b	42a344 <ascii_strlower_n@plt+0x25ee4>
  42a260:	mov	x8, xzr
  42a264:	str	x8, [sp, #120]
  42a268:	ldur	x0, [x29, #-48]
  42a26c:	ldur	x1, [x29, #-24]
  42a270:	bl	41e5f0 <ascii_strlower_n@plt+0x1a190>
  42a274:	str	x0, [sp, #120]
  42a278:	ldr	x8, [sp, #120]
  42a27c:	cbnz	x8, 42a294 <ascii_strlower_n@plt+0x25e34>
  42a280:	mov	w8, #0xfffffff4            	// #-12
  42a284:	stur	w8, [x29, #-4]
  42a288:	mov	w8, #0x1                   	// #1
  42a28c:	stur	w8, [x29, #-64]
  42a290:	b	42a2cc <ascii_strlower_n@plt+0x25e6c>
  42a294:	ldur	x0, [x29, #-40]
  42a298:	ldr	x1, [sp, #120]
  42a29c:	bl	4295dc <ascii_strlower_n@plt+0x2517c>
  42a2a0:	stur	w0, [x29, #-56]
  42a2a4:	ldur	w8, [x29, #-56]
  42a2a8:	cmp	w8, #0x0
  42a2ac:	cset	w8, ge  // ge = tcont
  42a2b0:	tbnz	w8, #0, 42a2c8 <ascii_strlower_n@plt+0x25e68>
  42a2b4:	ldur	w8, [x29, #-56]
  42a2b8:	stur	w8, [x29, #-4]
  42a2bc:	mov	w8, #0x1                   	// #1
  42a2c0:	stur	w8, [x29, #-64]
  42a2c4:	b	42a2cc <ascii_strlower_n@plt+0x25e6c>
  42a2c8:	stur	wzr, [x29, #-64]
  42a2cc:	add	x0, sp, #0x78
  42a2d0:	bl	42a420 <ascii_strlower_n@plt+0x25fc0>
  42a2d4:	ldur	w8, [x29, #-64]
  42a2d8:	cmp	w8, #0x0
  42a2dc:	cset	w8, eq  // eq = none
  42a2e0:	eor	w8, w8, #0x1
  42a2e4:	tbnz	w8, #0, 42a374 <ascii_strlower_n@plt+0x25f14>
  42a2e8:	b	42a2ec <ascii_strlower_n@plt+0x25e8c>
  42a2ec:	ldur	x8, [x29, #-104]
  42a2f0:	add	x8, x8, #0x1
  42a2f4:	stur	x8, [x29, #-104]
  42a2f8:	ldur	x8, [x29, #-104]
  42a2fc:	ldur	x9, [x29, #-16]
  42a300:	ldr	x9, [x9, #8]
  42a304:	cmp	x8, x9
  42a308:	b.cs	42a330 <ascii_strlower_n@plt+0x25ed0>  // b.hs, b.nlast
  42a30c:	ldur	x8, [x29, #-16]
  42a310:	add	x8, x8, #0x18
  42a314:	ldur	x9, [x29, #-104]
  42a318:	mov	x10, #0x8                   	// #8
  42a31c:	mul	x9, x10, x9
  42a320:	add	x8, x8, x9
  42a324:	ldr	x8, [x8]
  42a328:	str	x8, [sp, #8]
  42a32c:	b	42a338 <ascii_strlower_n@plt+0x25ed8>
  42a330:	mov	x8, xzr
  42a334:	str	x8, [sp, #8]
  42a338:	ldr	x8, [sp, #8]
  42a33c:	stur	x8, [x29, #-48]
  42a340:	b	42a22c <ascii_strlower_n@plt+0x25dcc>
  42a344:	ldur	x8, [x29, #-40]
  42a348:	str	x8, [sp, #112]
  42a34c:	mov	x8, xzr
  42a350:	stur	x8, [x29, #-40]
  42a354:	ldr	x8, [sp, #112]
  42a358:	str	x8, [sp, #104]
  42a35c:	ldr	x8, [sp, #104]
  42a360:	ldur	x9, [x29, #-32]
  42a364:	str	x8, [x9]
  42a368:	mov	w10, #0x1                   	// #1
  42a36c:	stur	w10, [x29, #-4]
  42a370:	stur	w10, [x29, #-64]
  42a374:	sub	x0, x29, #0x28
  42a378:	bl	42a38c <ascii_strlower_n@plt+0x25f2c>
  42a37c:	ldur	w0, [x29, #-4]
  42a380:	ldp	x29, x30, [sp, #240]
  42a384:	add	sp, sp, #0x100
  42a388:	ret
  42a38c:	sub	sp, sp, #0x20
  42a390:	stp	x29, x30, [sp, #16]
  42a394:	add	x29, sp, #0x10
  42a398:	str	x0, [sp, #8]
  42a39c:	ldr	x8, [sp, #8]
  42a3a0:	ldr	x8, [x8]
  42a3a4:	cbz	x8, 42a3b4 <ascii_strlower_n@plt+0x25f54>
  42a3a8:	ldr	x8, [sp, #8]
  42a3ac:	ldr	x0, [x8]
  42a3b0:	bl	429310 <ascii_strlower_n@plt+0x24eb0>
  42a3b4:	ldp	x29, x30, [sp, #16]
  42a3b8:	add	sp, sp, #0x20
  42a3bc:	ret
  42a3c0:	sub	sp, sp, #0x10
  42a3c4:	str	x0, [sp, #8]
  42a3c8:	ldr	x8, [sp, #8]
  42a3cc:	cbz	x8, 42a3e0 <ascii_strlower_n@plt+0x25f80>
  42a3d0:	ldr	x8, [sp, #8]
  42a3d4:	ldr	x8, [x8, #8]
  42a3d8:	str	x8, [sp]
  42a3dc:	b	42a3e8 <ascii_strlower_n@plt+0x25f88>
  42a3e0:	mov	x8, xzr
  42a3e4:	str	x8, [sp]
  42a3e8:	ldr	x8, [sp]
  42a3ec:	mov	x0, x8
  42a3f0:	add	sp, sp, #0x10
  42a3f4:	ret
  42a3f8:	sub	sp, sp, #0x20
  42a3fc:	stp	x29, x30, [sp, #16]
  42a400:	add	x29, sp, #0x10
  42a404:	str	x0, [sp, #8]
  42a408:	ldr	x8, [sp, #8]
  42a40c:	ldr	x0, [x8]
  42a410:	bl	403ac0 <free@plt>
  42a414:	ldp	x29, x30, [sp, #16]
  42a418:	add	sp, sp, #0x20
  42a41c:	ret
  42a420:	sub	sp, sp, #0x20
  42a424:	stp	x29, x30, [sp, #16]
  42a428:	add	x29, sp, #0x10
  42a42c:	str	x0, [sp, #8]
  42a430:	ldr	x8, [sp, #8]
  42a434:	ldr	x8, [x8]
  42a438:	cbz	x8, 42a448 <ascii_strlower_n@plt+0x25fe8>
  42a43c:	ldr	x8, [sp, #8]
  42a440:	ldr	x0, [x8]
  42a444:	bl	41eccc <ascii_strlower_n@plt+0x1a86c>
  42a448:	ldp	x29, x30, [sp, #16]
  42a44c:	add	sp, sp, #0x20
  42a450:	ret
  42a454:	sub	sp, sp, #0x20
  42a458:	stp	x29, x30, [sp, #16]
  42a45c:	add	x29, sp, #0x10
  42a460:	str	x0, [sp]
  42a464:	ldr	x8, [sp]
  42a468:	cbnz	x8, 42a478 <ascii_strlower_n@plt+0x26018>
  42a46c:	mov	x8, xzr
  42a470:	str	x8, [sp, #8]
  42a474:	b	42a4a4 <ascii_strlower_n@plt+0x26044>
  42a478:	ldr	x8, [sp]
  42a47c:	ldr	x8, [x8, #8]
  42a480:	cmp	x8, #0x1
  42a484:	b.cs	42a494 <ascii_strlower_n@plt+0x26034>  // b.hs, b.nlast
  42a488:	mov	x8, xzr
  42a48c:	str	x8, [sp, #8]
  42a490:	b	42a4a4 <ascii_strlower_n@plt+0x26044>
  42a494:	ldr	x8, [sp]
  42a498:	ldr	x0, [x8, #24]
  42a49c:	bl	41e858 <ascii_strlower_n@plt+0x1a3f8>
  42a4a0:	str	x0, [sp, #8]
  42a4a4:	ldr	x0, [sp, #8]
  42a4a8:	ldp	x29, x30, [sp, #16]
  42a4ac:	add	sp, sp, #0x20
  42a4b0:	ret
  42a4b4:	sub	sp, sp, #0x90
  42a4b8:	stp	x29, x30, [sp, #128]
  42a4bc:	add	x29, sp, #0x80
  42a4c0:	mov	x8, xzr
  42a4c4:	mov	w9, #0x1                   	// #1
  42a4c8:	adrp	x10, 432000 <ascii_strlower_n@plt+0x2dba0>
  42a4cc:	add	x10, x10, #0xdc3
  42a4d0:	add	x10, x10, #0x3
  42a4d4:	stur	x0, [x29, #-16]
  42a4d8:	stur	w1, [x29, #-20]
  42a4dc:	stur	x2, [x29, #-32]
  42a4e0:	and	w9, w3, w9
  42a4e4:	sturb	w9, [x29, #-33]
  42a4e8:	stur	x8, [x29, #-48]
  42a4ec:	stur	x8, [x29, #-56]
  42a4f0:	str	x10, [sp, #16]
  42a4f4:	ldur	x8, [x29, #-16]
  42a4f8:	cmp	x8, #0x0
  42a4fc:	cset	w9, ne  // ne = any
  42a500:	mov	w10, #0x1                   	// #1
  42a504:	eor	w9, w9, #0x1
  42a508:	eor	w9, w9, w10
  42a50c:	eor	w9, w9, w10
  42a510:	and	w9, w9, #0x1
  42a514:	mov	w0, w9
  42a518:	sxtw	x8, w0
  42a51c:	cbz	x8, 42a544 <ascii_strlower_n@plt+0x260e4>
  42a520:	mov	w8, wzr
  42a524:	mov	w0, w8
  42a528:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  42a52c:	add	x1, x1, #0x42e
  42a530:	ldr	x2, [sp, #16]
  42a534:	mov	w3, #0x115                 	// #277
  42a538:	adrp	x4, 433000 <ascii_strlower_n@plt+0x2eba0>
  42a53c:	add	x4, x4, #0x5f
  42a540:	bl	4039d0 <log_assert_failed_realm@plt>
  42a544:	ldur	x8, [x29, #-32]
  42a548:	cmp	x8, #0x0
  42a54c:	cset	w9, ne  // ne = any
  42a550:	mov	w10, #0x1                   	// #1
  42a554:	eor	w9, w9, #0x1
  42a558:	eor	w9, w9, w10
  42a55c:	eor	w9, w9, w10
  42a560:	and	w9, w9, #0x1
  42a564:	mov	w0, w9
  42a568:	sxtw	x8, w0
  42a56c:	cbz	x8, 42a594 <ascii_strlower_n@plt+0x26134>
  42a570:	mov	w8, wzr
  42a574:	mov	w0, w8
  42a578:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  42a57c:	add	x1, x1, #0x923
  42a580:	ldr	x2, [sp, #16]
  42a584:	mov	w3, #0x116                 	// #278
  42a588:	adrp	x4, 433000 <ascii_strlower_n@plt+0x2eba0>
  42a58c:	add	x4, x4, #0x5f
  42a590:	bl	4039d0 <log_assert_failed_realm@plt>
  42a594:	mov	w8, #0x0                   	// #0
  42a598:	sturb	w8, [x29, #-61]
  42a59c:	ldur	w8, [x29, #-20]
  42a5a0:	str	w8, [sp, #12]
  42a5a4:	cbz	w8, 42a5d4 <ascii_strlower_n@plt+0x26174>
  42a5a8:	b	42a5ac <ascii_strlower_n@plt+0x2614c>
  42a5ac:	ldr	w8, [sp, #12]
  42a5b0:	cmp	w8, #0x2
  42a5b4:	b.eq	42a5d4 <ascii_strlower_n@plt+0x26174>  // b.none
  42a5b8:	b	42a5bc <ascii_strlower_n@plt+0x2615c>
  42a5bc:	ldr	w8, [sp, #12]
  42a5c0:	cmp	w8, #0xa
  42a5c4:	cset	w9, eq  // eq = none
  42a5c8:	eor	w9, w9, #0x1
  42a5cc:	tbnz	w9, #0, 42a5e0 <ascii_strlower_n@plt+0x26180>
  42a5d0:	b	42a5d4 <ascii_strlower_n@plt+0x26174>
  42a5d4:	mov	w8, #0x1                   	// #1
  42a5d8:	sturb	w8, [x29, #-61]
  42a5dc:	b	42a5e0 <ascii_strlower_n@plt+0x26180>
  42a5e0:	ldurb	w8, [x29, #-61]
  42a5e4:	and	w8, w8, #0x1
  42a5e8:	sturb	w8, [x29, #-62]
  42a5ec:	ldurb	w8, [x29, #-62]
  42a5f0:	tbnz	w8, #0, 42a608 <ascii_strlower_n@plt+0x261a8>
  42a5f4:	mov	w8, #0xffffff9f            	// #-97
  42a5f8:	stur	w8, [x29, #-4]
  42a5fc:	mov	w8, #0x1                   	// #1
  42a600:	str	w8, [sp, #60]
  42a604:	b	42a834 <ascii_strlower_n@plt+0x263d4>
  42a608:	ldurb	w8, [x29, #-33]
  42a60c:	tbnz	w8, #0, 42a614 <ascii_strlower_n@plt+0x261b4>
  42a610:	b	42a688 <ascii_strlower_n@plt+0x26228>
  42a614:	ldur	x0, [x29, #-32]
  42a618:	sub	x1, x29, #0x38
  42a61c:	bl	404440 <dns_name_apply_idna@plt>
  42a620:	stur	w0, [x29, #-60]
  42a624:	ldur	w8, [x29, #-60]
  42a628:	cmp	w8, #0x0
  42a62c:	cset	w8, ge  // ge = tcont
  42a630:	tbnz	w8, #0, 42a648 <ascii_strlower_n@plt+0x261e8>
  42a634:	ldur	w8, [x29, #-60]
  42a638:	stur	w8, [x29, #-4]
  42a63c:	mov	w8, #0x1                   	// #1
  42a640:	str	w8, [sp, #60]
  42a644:	b	42a834 <ascii_strlower_n@plt+0x263d4>
  42a648:	ldur	w8, [x29, #-60]
  42a64c:	cmp	w8, #0x0
  42a650:	cset	w8, le
  42a654:	tbnz	w8, #0, 42a674 <ascii_strlower_n@plt+0x26214>
  42a658:	ldur	x0, [x29, #-32]
  42a65c:	ldur	x1, [x29, #-56]
  42a660:	bl	403bc0 <strcmp@plt>
  42a664:	cbz	w0, 42a674 <ascii_strlower_n@plt+0x26214>
  42a668:	ldur	x8, [x29, #-56]
  42a66c:	stur	x8, [x29, #-32]
  42a670:	b	42a688 <ascii_strlower_n@plt+0x26228>
  42a674:	mov	w8, #0xffffff8e            	// #-114
  42a678:	stur	w8, [x29, #-4]
  42a67c:	mov	w8, #0x1                   	// #1
  42a680:	str	w8, [sp, #60]
  42a684:	b	42a834 <ascii_strlower_n@plt+0x263d4>
  42a688:	ldur	w8, [x29, #-20]
  42a68c:	mov	w9, #0x1                   	// #1
  42a690:	mov	w10, #0x2                   	// #2
  42a694:	cmp	w8, #0x0
  42a698:	csel	w8, w10, w9, eq  // eq = none
  42a69c:	mov	w0, w8
  42a6a0:	sxtw	x0, w0
  42a6a4:	bl	429190 <ascii_strlower_n@plt+0x24d30>
  42a6a8:	stur	x0, [x29, #-48]
  42a6ac:	ldur	x11, [x29, #-48]
  42a6b0:	cbnz	x11, 42a6c8 <ascii_strlower_n@plt+0x26268>
  42a6b4:	mov	w8, #0xfffffff4            	// #-12
  42a6b8:	stur	w8, [x29, #-4]
  42a6bc:	mov	w8, #0x1                   	// #1
  42a6c0:	str	w8, [sp, #60]
  42a6c4:	b	42a834 <ascii_strlower_n@plt+0x263d4>
  42a6c8:	ldur	w8, [x29, #-20]
  42a6cc:	cmp	w8, #0xa
  42a6d0:	b.eq	42a768 <ascii_strlower_n@plt+0x26308>  // b.none
  42a6d4:	mov	x8, xzr
  42a6d8:	str	x8, [sp, #48]
  42a6dc:	ldur	x2, [x29, #-32]
  42a6e0:	mov	w9, #0x1                   	// #1
  42a6e4:	mov	w0, w9
  42a6e8:	mov	w1, w9
  42a6ec:	bl	41e4f4 <ascii_strlower_n@plt+0x1a094>
  42a6f0:	str	x0, [sp, #48]
  42a6f4:	ldr	x8, [sp, #48]
  42a6f8:	cbnz	x8, 42a710 <ascii_strlower_n@plt+0x262b0>
  42a6fc:	mov	w8, #0xfffffff4            	// #-12
  42a700:	stur	w8, [x29, #-4]
  42a704:	mov	w8, #0x1                   	// #1
  42a708:	str	w8, [sp, #60]
  42a70c:	b	42a748 <ascii_strlower_n@plt+0x262e8>
  42a710:	ldur	x0, [x29, #-48]
  42a714:	ldr	x1, [sp, #48]
  42a718:	bl	4295dc <ascii_strlower_n@plt+0x2517c>
  42a71c:	stur	w0, [x29, #-60]
  42a720:	ldur	w8, [x29, #-60]
  42a724:	cmp	w8, #0x0
  42a728:	cset	w8, ge  // ge = tcont
  42a72c:	tbnz	w8, #0, 42a744 <ascii_strlower_n@plt+0x262e4>
  42a730:	ldur	w8, [x29, #-60]
  42a734:	stur	w8, [x29, #-4]
  42a738:	mov	w8, #0x1                   	// #1
  42a73c:	str	w8, [sp, #60]
  42a740:	b	42a748 <ascii_strlower_n@plt+0x262e8>
  42a744:	str	wzr, [sp, #60]
  42a748:	add	x0, sp, #0x30
  42a74c:	bl	42a420 <ascii_strlower_n@plt+0x25fc0>
  42a750:	ldr	w8, [sp, #60]
  42a754:	cmp	w8, #0x0
  42a758:	cset	w8, eq  // eq = none
  42a75c:	eor	w8, w8, #0x1
  42a760:	tbnz	w8, #0, 42a834 <ascii_strlower_n@plt+0x263d4>
  42a764:	b	42a768 <ascii_strlower_n@plt+0x26308>
  42a768:	ldur	w8, [x29, #-20]
  42a76c:	cmp	w8, #0x2
  42a770:	b.eq	42a804 <ascii_strlower_n@plt+0x263a4>  // b.none
  42a774:	mov	x8, xzr
  42a778:	str	x8, [sp, #40]
  42a77c:	ldur	x2, [x29, #-32]
  42a780:	mov	w0, #0x1                   	// #1
  42a784:	mov	w1, #0x1c                  	// #28
  42a788:	bl	41e4f4 <ascii_strlower_n@plt+0x1a094>
  42a78c:	str	x0, [sp, #40]
  42a790:	ldr	x8, [sp, #40]
  42a794:	cbnz	x8, 42a7ac <ascii_strlower_n@plt+0x2634c>
  42a798:	mov	w8, #0xfffffff4            	// #-12
  42a79c:	stur	w8, [x29, #-4]
  42a7a0:	mov	w8, #0x1                   	// #1
  42a7a4:	str	w8, [sp, #60]
  42a7a8:	b	42a7e4 <ascii_strlower_n@plt+0x26384>
  42a7ac:	ldur	x0, [x29, #-48]
  42a7b0:	ldr	x1, [sp, #40]
  42a7b4:	bl	4295dc <ascii_strlower_n@plt+0x2517c>
  42a7b8:	stur	w0, [x29, #-60]
  42a7bc:	ldur	w8, [x29, #-60]
  42a7c0:	cmp	w8, #0x0
  42a7c4:	cset	w8, ge  // ge = tcont
  42a7c8:	tbnz	w8, #0, 42a7e0 <ascii_strlower_n@plt+0x26380>
  42a7cc:	ldur	w8, [x29, #-60]
  42a7d0:	stur	w8, [x29, #-4]
  42a7d4:	mov	w8, #0x1                   	// #1
  42a7d8:	str	w8, [sp, #60]
  42a7dc:	b	42a7e4 <ascii_strlower_n@plt+0x26384>
  42a7e0:	str	wzr, [sp, #60]
  42a7e4:	add	x0, sp, #0x28
  42a7e8:	bl	42a420 <ascii_strlower_n@plt+0x25fc0>
  42a7ec:	ldr	w8, [sp, #60]
  42a7f0:	cmp	w8, #0x0
  42a7f4:	cset	w8, eq  // eq = none
  42a7f8:	eor	w8, w8, #0x1
  42a7fc:	tbnz	w8, #0, 42a834 <ascii_strlower_n@plt+0x263d4>
  42a800:	b	42a804 <ascii_strlower_n@plt+0x263a4>
  42a804:	ldur	x8, [x29, #-48]
  42a808:	str	x8, [sp, #32]
  42a80c:	mov	x8, xzr
  42a810:	stur	x8, [x29, #-48]
  42a814:	ldr	x8, [sp, #32]
  42a818:	str	x8, [sp, #24]
  42a81c:	ldr	x8, [sp, #24]
  42a820:	ldur	x9, [x29, #-16]
  42a824:	str	x8, [x9]
  42a828:	stur	wzr, [x29, #-4]
  42a82c:	mov	w10, #0x1                   	// #1
  42a830:	str	w10, [sp, #60]
  42a834:	sub	x0, x29, #0x38
  42a838:	bl	42a3f8 <ascii_strlower_n@plt+0x25f98>
  42a83c:	sub	x0, x29, #0x30
  42a840:	bl	42a38c <ascii_strlower_n@plt+0x25f2c>
  42a844:	ldur	w0, [x29, #-4]
  42a848:	ldp	x29, x30, [sp, #128]
  42a84c:	add	sp, sp, #0x90
  42a850:	ret
  42a854:	sub	sp, sp, #0x80
  42a858:	stp	x29, x30, [sp, #112]
  42a85c:	add	x29, sp, #0x70
  42a860:	mov	x8, xzr
  42a864:	adrp	x9, 432000 <ascii_strlower_n@plt+0x2dba0>
  42a868:	add	x9, x9, #0xdc3
  42a86c:	add	x9, x9, #0x3
  42a870:	stur	x0, [x29, #-16]
  42a874:	stur	w1, [x29, #-20]
  42a878:	stur	x2, [x29, #-32]
  42a87c:	stur	x8, [x29, #-40]
  42a880:	stur	x8, [x29, #-48]
  42a884:	str	x8, [sp, #56]
  42a888:	str	x9, [sp, #16]
  42a88c:	ldur	x8, [x29, #-16]
  42a890:	cmp	x8, #0x0
  42a894:	cset	w9, ne  // ne = any
  42a898:	mov	w10, #0x1                   	// #1
  42a89c:	eor	w9, w9, #0x1
  42a8a0:	eor	w9, w9, w10
  42a8a4:	eor	w9, w9, w10
  42a8a8:	and	w9, w9, #0x1
  42a8ac:	mov	w0, w9
  42a8b0:	sxtw	x8, w0
  42a8b4:	cbz	x8, 42a8dc <ascii_strlower_n@plt+0x2647c>
  42a8b8:	mov	w8, wzr
  42a8bc:	mov	w0, w8
  42a8c0:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  42a8c4:	add	x1, x1, #0x42e
  42a8c8:	ldr	x2, [sp, #16]
  42a8cc:	mov	w3, #0x150                 	// #336
  42a8d0:	adrp	x4, 433000 <ascii_strlower_n@plt+0x2eba0>
  42a8d4:	add	x4, x4, #0xa6
  42a8d8:	bl	4039d0 <log_assert_failed_realm@plt>
  42a8dc:	ldur	x8, [x29, #-32]
  42a8e0:	cmp	x8, #0x0
  42a8e4:	cset	w9, ne  // ne = any
  42a8e8:	mov	w10, #0x1                   	// #1
  42a8ec:	eor	w9, w9, #0x1
  42a8f0:	eor	w9, w9, w10
  42a8f4:	eor	w9, w9, w10
  42a8f8:	and	w9, w9, #0x1
  42a8fc:	mov	w0, w9
  42a900:	sxtw	x8, w0
  42a904:	cbz	x8, 42a92c <ascii_strlower_n@plt+0x264cc>
  42a908:	mov	w8, wzr
  42a90c:	mov	w0, w8
  42a910:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  42a914:	add	x1, x1, #0xeb8
  42a918:	ldr	x2, [sp, #16]
  42a91c:	mov	w3, #0x151                 	// #337
  42a920:	adrp	x4, 433000 <ascii_strlower_n@plt+0x2eba0>
  42a924:	add	x4, x4, #0xa6
  42a928:	bl	4039d0 <log_assert_failed_realm@plt>
  42a92c:	mov	w8, #0x0                   	// #0
  42a930:	strb	w8, [sp, #51]
  42a934:	ldur	w8, [x29, #-20]
  42a938:	str	w8, [sp, #12]
  42a93c:	cbz	w8, 42a96c <ascii_strlower_n@plt+0x2650c>
  42a940:	b	42a944 <ascii_strlower_n@plt+0x264e4>
  42a944:	ldr	w8, [sp, #12]
  42a948:	cmp	w8, #0x2
  42a94c:	b.eq	42a96c <ascii_strlower_n@plt+0x2650c>  // b.none
  42a950:	b	42a954 <ascii_strlower_n@plt+0x264f4>
  42a954:	ldr	w8, [sp, #12]
  42a958:	cmp	w8, #0xa
  42a95c:	cset	w9, eq  // eq = none
  42a960:	eor	w9, w9, #0x1
  42a964:	tbnz	w9, #0, 42a978 <ascii_strlower_n@plt+0x26518>
  42a968:	b	42a96c <ascii_strlower_n@plt+0x2650c>
  42a96c:	mov	w8, #0x1                   	// #1
  42a970:	strb	w8, [sp, #51]
  42a974:	b	42a978 <ascii_strlower_n@plt+0x26518>
  42a978:	ldrb	w8, [sp, #51]
  42a97c:	and	w8, w8, #0x1
  42a980:	strb	w8, [sp, #50]
  42a984:	ldrb	w8, [sp, #50]
  42a988:	tbnz	w8, #0, 42a9a0 <ascii_strlower_n@plt+0x26540>
  42a98c:	mov	w8, #0xffffff9f            	// #-97
  42a990:	stur	w8, [x29, #-4]
  42a994:	mov	w8, #0x1                   	// #1
  42a998:	str	w8, [sp, #44]
  42a99c:	b	42aa9c <ascii_strlower_n@plt+0x2663c>
  42a9a0:	ldur	w0, [x29, #-20]
  42a9a4:	ldur	x1, [x29, #-32]
  42a9a8:	add	x2, sp, #0x38
  42a9ac:	bl	404300 <dns_name_reverse@plt>
  42a9b0:	str	w0, [sp, #52]
  42a9b4:	ldr	w8, [sp, #52]
  42a9b8:	cmp	w8, #0x0
  42a9bc:	cset	w8, ge  // ge = tcont
  42a9c0:	tbnz	w8, #0, 42a9d8 <ascii_strlower_n@plt+0x26578>
  42a9c4:	ldr	w8, [sp, #52]
  42a9c8:	stur	w8, [x29, #-4]
  42a9cc:	mov	w8, #0x1                   	// #1
  42a9d0:	str	w8, [sp, #44]
  42a9d4:	b	42aa9c <ascii_strlower_n@plt+0x2663c>
  42a9d8:	mov	x0, #0x1                   	// #1
  42a9dc:	bl	429190 <ascii_strlower_n@plt+0x24d30>
  42a9e0:	stur	x0, [x29, #-48]
  42a9e4:	ldur	x8, [x29, #-48]
  42a9e8:	cbnz	x8, 42aa00 <ascii_strlower_n@plt+0x265a0>
  42a9ec:	mov	w8, #0xfffffff4            	// #-12
  42a9f0:	stur	w8, [x29, #-4]
  42a9f4:	mov	w8, #0x1                   	// #1
  42a9f8:	str	w8, [sp, #44]
  42a9fc:	b	42aa9c <ascii_strlower_n@plt+0x2663c>
  42aa00:	ldr	x2, [sp, #56]
  42aa04:	mov	w0, #0x1                   	// #1
  42aa08:	mov	w1, #0xc                   	// #12
  42aa0c:	bl	41e9e4 <ascii_strlower_n@plt+0x1a584>
  42aa10:	stur	x0, [x29, #-40]
  42aa14:	ldur	x8, [x29, #-40]
  42aa18:	cbnz	x8, 42aa30 <ascii_strlower_n@plt+0x265d0>
  42aa1c:	mov	w8, #0xfffffff4            	// #-12
  42aa20:	stur	w8, [x29, #-4]
  42aa24:	mov	w8, #0x1                   	// #1
  42aa28:	str	w8, [sp, #44]
  42aa2c:	b	42aa9c <ascii_strlower_n@plt+0x2663c>
  42aa30:	mov	x8, xzr
  42aa34:	str	x8, [sp, #56]
  42aa38:	ldur	x0, [x29, #-48]
  42aa3c:	ldur	x1, [x29, #-40]
  42aa40:	bl	4295dc <ascii_strlower_n@plt+0x2517c>
  42aa44:	str	w0, [sp, #52]
  42aa48:	ldr	w9, [sp, #52]
  42aa4c:	cmp	w9, #0x0
  42aa50:	cset	w9, ge  // ge = tcont
  42aa54:	tbnz	w9, #0, 42aa6c <ascii_strlower_n@plt+0x2660c>
  42aa58:	ldr	w8, [sp, #52]
  42aa5c:	stur	w8, [x29, #-4]
  42aa60:	mov	w8, #0x1                   	// #1
  42aa64:	str	w8, [sp, #44]
  42aa68:	b	42aa9c <ascii_strlower_n@plt+0x2663c>
  42aa6c:	ldur	x8, [x29, #-48]
  42aa70:	str	x8, [sp, #32]
  42aa74:	mov	x8, xzr
  42aa78:	stur	x8, [x29, #-48]
  42aa7c:	ldr	x8, [sp, #32]
  42aa80:	str	x8, [sp, #24]
  42aa84:	ldr	x8, [sp, #24]
  42aa88:	ldur	x9, [x29, #-16]
  42aa8c:	str	x8, [x9]
  42aa90:	stur	wzr, [x29, #-4]
  42aa94:	mov	w10, #0x1                   	// #1
  42aa98:	str	w10, [sp, #44]
  42aa9c:	add	x0, sp, #0x38
  42aaa0:	bl	42a3f8 <ascii_strlower_n@plt+0x25f98>
  42aaa4:	sub	x0, x29, #0x30
  42aaa8:	bl	42a38c <ascii_strlower_n@plt+0x25f2c>
  42aaac:	sub	x0, x29, #0x28
  42aab0:	bl	42a420 <ascii_strlower_n@plt+0x25fc0>
  42aab4:	ldur	w0, [x29, #-4]
  42aab8:	ldp	x29, x30, [sp, #112]
  42aabc:	add	sp, sp, #0x80
  42aac0:	ret
  42aac4:	sub	sp, sp, #0x90
  42aac8:	stp	x29, x30, [sp, #128]
  42aacc:	add	x29, sp, #0x80
  42aad0:	mov	x8, xzr
  42aad4:	mov	w9, #0x1                   	// #1
  42aad8:	adrp	x10, 432000 <ascii_strlower_n@plt+0x2dba0>
  42aadc:	add	x10, x10, #0xdc3
  42aae0:	add	x10, x10, #0x3
  42aae4:	stur	x0, [x29, #-16]
  42aae8:	stur	x1, [x29, #-24]
  42aaec:	stur	x2, [x29, #-32]
  42aaf0:	stur	x3, [x29, #-40]
  42aaf4:	and	w11, w4, w9
  42aaf8:	sturb	w11, [x29, #-41]
  42aafc:	and	w9, w5, w9
  42ab00:	sturb	w9, [x29, #-42]
  42ab04:	stur	x8, [x29, #-56]
  42ab08:	str	x8, [sp, #64]
  42ab0c:	str	x8, [sp, #56]
  42ab10:	str	x8, [sp, #48]
  42ab14:	str	x10, [sp, #8]
  42ab18:	ldur	x8, [x29, #-16]
  42ab1c:	cmp	x8, #0x0
  42ab20:	cset	w9, ne  // ne = any
  42ab24:	mov	w10, #0x1                   	// #1
  42ab28:	eor	w9, w9, #0x1
  42ab2c:	eor	w9, w9, w10
  42ab30:	eor	w9, w9, w10
  42ab34:	and	w9, w9, #0x1
  42ab38:	mov	w0, w9
  42ab3c:	sxtw	x8, w0
  42ab40:	cbz	x8, 42ab68 <ascii_strlower_n@plt+0x26708>
  42ab44:	mov	w8, wzr
  42ab48:	mov	w0, w8
  42ab4c:	adrp	x1, 42f000 <ascii_strlower_n@plt+0x2aba0>
  42ab50:	add	x1, x1, #0x42e
  42ab54:	ldr	x2, [sp, #8]
  42ab58:	mov	w3, #0x17b                 	// #379
  42ab5c:	adrp	x4, 433000 <ascii_strlower_n@plt+0x2eba0>
  42ab60:	add	x4, x4, #0xf5
  42ab64:	bl	4039d0 <log_assert_failed_realm@plt>
  42ab68:	ldur	x8, [x29, #-40]
  42ab6c:	cbnz	x8, 42ab84 <ascii_strlower_n@plt+0x26724>
  42ab70:	mov	w8, #0xffffffea            	// #-22
  42ab74:	stur	w8, [x29, #-4]
  42ab78:	mov	w8, #0x1                   	// #1
  42ab7c:	str	w8, [sp, #32]
  42ab80:	b	42ad98 <ascii_strlower_n@plt+0x26938>
  42ab84:	ldur	x8, [x29, #-32]
  42ab88:	cbz	x8, 42ac2c <ascii_strlower_n@plt+0x267cc>
  42ab8c:	ldurb	w8, [x29, #-42]
  42ab90:	tbnz	w8, #0, 42ab98 <ascii_strlower_n@plt+0x26738>
  42ab94:	b	42abe4 <ascii_strlower_n@plt+0x26784>
  42ab98:	ldur	x0, [x29, #-40]
  42ab9c:	add	x1, sp, #0x38
  42aba0:	bl	404440 <dns_name_apply_idna@plt>
  42aba4:	str	w0, [sp, #36]
  42aba8:	ldr	w8, [sp, #36]
  42abac:	cmp	w8, #0x0
  42abb0:	cset	w8, ge  // ge = tcont
  42abb4:	tbnz	w8, #0, 42abcc <ascii_strlower_n@plt+0x2676c>
  42abb8:	ldr	w8, [sp, #36]
  42abbc:	stur	w8, [x29, #-4]
  42abc0:	mov	w8, #0x1                   	// #1
  42abc4:	str	w8, [sp, #32]
  42abc8:	b	42ad98 <ascii_strlower_n@plt+0x26938>
  42abcc:	ldr	w8, [sp, #36]
  42abd0:	cmp	w8, #0x0
  42abd4:	cset	w8, le
  42abd8:	tbnz	w8, #0, 42abe4 <ascii_strlower_n@plt+0x26784>
  42abdc:	ldr	x8, [sp, #56]
  42abe0:	stur	x8, [x29, #-40]
  42abe4:	ldur	x0, [x29, #-24]
  42abe8:	ldur	x1, [x29, #-32]
  42abec:	ldur	x2, [x29, #-40]
  42abf0:	add	x3, sp, #0x30
  42abf4:	bl	404450 <dns_service_join@plt>
  42abf8:	str	w0, [sp, #36]
  42abfc:	ldr	w8, [sp, #36]
  42ac00:	cmp	w8, #0x0
  42ac04:	cset	w8, ge  // ge = tcont
  42ac08:	tbnz	w8, #0, 42ac20 <ascii_strlower_n@plt+0x267c0>
  42ac0c:	ldr	w8, [sp, #36]
  42ac10:	stur	w8, [x29, #-4]
  42ac14:	mov	w8, #0x1                   	// #1
  42ac18:	str	w8, [sp, #32]
  42ac1c:	b	42ad98 <ascii_strlower_n@plt+0x26938>
  42ac20:	ldr	x8, [sp, #48]
  42ac24:	str	x8, [sp, #40]
  42ac28:	b	42ac50 <ascii_strlower_n@plt+0x267f0>
  42ac2c:	ldur	x8, [x29, #-24]
  42ac30:	cbz	x8, 42ac48 <ascii_strlower_n@plt+0x267e8>
  42ac34:	mov	w8, #0xffffffea            	// #-22
  42ac38:	stur	w8, [x29, #-4]
  42ac3c:	mov	w8, #0x1                   	// #1
  42ac40:	str	w8, [sp, #32]
  42ac44:	b	42ad98 <ascii_strlower_n@plt+0x26938>
  42ac48:	ldur	x8, [x29, #-40]
  42ac4c:	str	x8, [sp, #40]
  42ac50:	ldurb	w8, [x29, #-41]
  42ac54:	and	w8, w8, #0x1
  42ac58:	add	w8, w8, #0x1
  42ac5c:	mov	w0, w8
  42ac60:	sxtw	x0, w0
  42ac64:	bl	429190 <ascii_strlower_n@plt+0x24d30>
  42ac68:	str	x0, [sp, #64]
  42ac6c:	ldr	x9, [sp, #64]
  42ac70:	cbnz	x9, 42ac88 <ascii_strlower_n@plt+0x26828>
  42ac74:	mov	w8, #0xfffffff4            	// #-12
  42ac78:	stur	w8, [x29, #-4]
  42ac7c:	mov	w8, #0x1                   	// #1
  42ac80:	str	w8, [sp, #32]
  42ac84:	b	42ad98 <ascii_strlower_n@plt+0x26938>
  42ac88:	ldr	x2, [sp, #40]
  42ac8c:	mov	w0, #0x1                   	// #1
  42ac90:	mov	w1, #0x21                  	// #33
  42ac94:	bl	41e4f4 <ascii_strlower_n@plt+0x1a094>
  42ac98:	stur	x0, [x29, #-56]
  42ac9c:	ldur	x8, [x29, #-56]
  42aca0:	cbnz	x8, 42acb8 <ascii_strlower_n@plt+0x26858>
  42aca4:	mov	w8, #0xfffffff4            	// #-12
  42aca8:	stur	w8, [x29, #-4]
  42acac:	mov	w8, #0x1                   	// #1
  42acb0:	str	w8, [sp, #32]
  42acb4:	b	42ad98 <ascii_strlower_n@plt+0x26938>
  42acb8:	ldr	x0, [sp, #64]
  42acbc:	ldur	x1, [x29, #-56]
  42acc0:	bl	4295dc <ascii_strlower_n@plt+0x2517c>
  42acc4:	str	w0, [sp, #36]
  42acc8:	ldr	w8, [sp, #36]
  42accc:	cmp	w8, #0x0
  42acd0:	cset	w8, ge  // ge = tcont
  42acd4:	tbnz	w8, #0, 42acec <ascii_strlower_n@plt+0x2688c>
  42acd8:	ldr	w8, [sp, #36]
  42acdc:	stur	w8, [x29, #-4]
  42ace0:	mov	w8, #0x1                   	// #1
  42ace4:	str	w8, [sp, #32]
  42ace8:	b	42ad98 <ascii_strlower_n@plt+0x26938>
  42acec:	ldurb	w8, [x29, #-41]
  42acf0:	tbnz	w8, #0, 42acf8 <ascii_strlower_n@plt+0x26898>
  42acf4:	b	42ad68 <ascii_strlower_n@plt+0x26908>
  42acf8:	ldur	x0, [x29, #-56]
  42acfc:	bl	41eccc <ascii_strlower_n@plt+0x1a86c>
  42ad00:	ldr	x2, [sp, #40]
  42ad04:	mov	w8, #0x1                   	// #1
  42ad08:	mov	w0, w8
  42ad0c:	mov	w1, #0x10                  	// #16
  42ad10:	bl	41e4f4 <ascii_strlower_n@plt+0x1a094>
  42ad14:	stur	x0, [x29, #-56]
  42ad18:	ldur	x9, [x29, #-56]
  42ad1c:	cbnz	x9, 42ad34 <ascii_strlower_n@plt+0x268d4>
  42ad20:	mov	w8, #0xfffffff4            	// #-12
  42ad24:	stur	w8, [x29, #-4]
  42ad28:	mov	w8, #0x1                   	// #1
  42ad2c:	str	w8, [sp, #32]
  42ad30:	b	42ad98 <ascii_strlower_n@plt+0x26938>
  42ad34:	ldr	x0, [sp, #64]
  42ad38:	ldur	x1, [x29, #-56]
  42ad3c:	bl	4295dc <ascii_strlower_n@plt+0x2517c>
  42ad40:	str	w0, [sp, #36]
  42ad44:	ldr	w8, [sp, #36]
  42ad48:	cmp	w8, #0x0
  42ad4c:	cset	w8, ge  // ge = tcont
  42ad50:	tbnz	w8, #0, 42ad68 <ascii_strlower_n@plt+0x26908>
  42ad54:	ldr	w8, [sp, #36]
  42ad58:	stur	w8, [x29, #-4]
  42ad5c:	mov	w8, #0x1                   	// #1
  42ad60:	str	w8, [sp, #32]
  42ad64:	b	42ad98 <ascii_strlower_n@plt+0x26938>
  42ad68:	ldr	x8, [sp, #64]
  42ad6c:	str	x8, [sp, #24]
  42ad70:	mov	x8, xzr
  42ad74:	str	x8, [sp, #64]
  42ad78:	ldr	x8, [sp, #24]
  42ad7c:	str	x8, [sp, #16]
  42ad80:	ldr	x8, [sp, #16]
  42ad84:	ldur	x9, [x29, #-16]
  42ad88:	str	x8, [x9]
  42ad8c:	stur	wzr, [x29, #-4]
  42ad90:	mov	w10, #0x1                   	// #1
  42ad94:	str	w10, [sp, #32]
  42ad98:	add	x0, sp, #0x30
  42ad9c:	bl	42a3f8 <ascii_strlower_n@plt+0x25f98>
  42ada0:	add	x0, sp, #0x38
  42ada4:	bl	42a3f8 <ascii_strlower_n@plt+0x25f98>
  42ada8:	add	x0, sp, #0x40
  42adac:	bl	42a38c <ascii_strlower_n@plt+0x25f2c>
  42adb0:	sub	x0, x29, #0x38
  42adb4:	bl	42a420 <ascii_strlower_n@plt+0x25fc0>
  42adb8:	ldur	w0, [x29, #-4]
  42adbc:	ldp	x29, x30, [sp, #128]
  42adc0:	add	sp, sp, #0x90
  42adc4:	ret
  42adc8:	sub	sp, sp, #0x20
  42adcc:	stp	x29, x30, [sp, #16]
  42add0:	add	x29, sp, #0x10
  42add4:	mov	x8, xzr
  42add8:	str	x0, [sp, #8]
  42addc:	ldr	x0, [sp, #8]
  42ade0:	str	x8, [sp]
  42ade4:	bl	403ac0 <free@plt>
  42ade8:	ldr	x0, [sp]
  42adec:	ldp	x29, x30, [sp, #16]
  42adf0:	add	sp, sp, #0x20
  42adf4:	ret
  42adf8:	sub	sp, sp, #0x10
  42adfc:	str	w0, [sp, #4]
  42ae00:	ldr	w8, [sp, #4]
  42ae04:	cmp	w8, #0x1
  42ae08:	str	w8, [sp]
  42ae0c:	b.eq	42b2d8 <ascii_strlower_n@plt+0x26e78>  // b.none
  42ae10:	b	42ae14 <ascii_strlower_n@plt+0x269b4>
  42ae14:	ldr	w8, [sp]
  42ae18:	cmp	w8, #0x2
  42ae1c:	b.eq	42b2e8 <ascii_strlower_n@plt+0x26e88>  // b.none
  42ae20:	b	42ae24 <ascii_strlower_n@plt+0x269c4>
  42ae24:	ldr	w8, [sp]
  42ae28:	cmp	w8, #0x3
  42ae2c:	b.eq	42b2f8 <ascii_strlower_n@plt+0x26e98>  // b.none
  42ae30:	b	42ae34 <ascii_strlower_n@plt+0x269d4>
  42ae34:	ldr	w8, [sp]
  42ae38:	cmp	w8, #0x4
  42ae3c:	b.eq	42b308 <ascii_strlower_n@plt+0x26ea8>  // b.none
  42ae40:	b	42ae44 <ascii_strlower_n@plt+0x269e4>
  42ae44:	ldr	w8, [sp]
  42ae48:	cmp	w8, #0x5
  42ae4c:	b.eq	42b318 <ascii_strlower_n@plt+0x26eb8>  // b.none
  42ae50:	b	42ae54 <ascii_strlower_n@plt+0x269f4>
  42ae54:	ldr	w8, [sp]
  42ae58:	cmp	w8, #0x6
  42ae5c:	b.eq	42b328 <ascii_strlower_n@plt+0x26ec8>  // b.none
  42ae60:	b	42ae64 <ascii_strlower_n@plt+0x26a04>
  42ae64:	ldr	w8, [sp]
  42ae68:	cmp	w8, #0x7
  42ae6c:	b.eq	42b338 <ascii_strlower_n@plt+0x26ed8>  // b.none
  42ae70:	b	42ae74 <ascii_strlower_n@plt+0x26a14>
  42ae74:	ldr	w8, [sp]
  42ae78:	cmp	w8, #0x8
  42ae7c:	b.eq	42b348 <ascii_strlower_n@plt+0x26ee8>  // b.none
  42ae80:	b	42ae84 <ascii_strlower_n@plt+0x26a24>
  42ae84:	ldr	w8, [sp]
  42ae88:	cmp	w8, #0x9
  42ae8c:	b.eq	42b358 <ascii_strlower_n@plt+0x26ef8>  // b.none
  42ae90:	b	42ae94 <ascii_strlower_n@plt+0x26a34>
  42ae94:	ldr	w8, [sp]
  42ae98:	cmp	w8, #0xa
  42ae9c:	b.eq	42b368 <ascii_strlower_n@plt+0x26f08>  // b.none
  42aea0:	b	42aea4 <ascii_strlower_n@plt+0x26a44>
  42aea4:	ldr	w8, [sp]
  42aea8:	cmp	w8, #0xb
  42aeac:	b.eq	42b378 <ascii_strlower_n@plt+0x26f18>  // b.none
  42aeb0:	b	42aeb4 <ascii_strlower_n@plt+0x26a54>
  42aeb4:	ldr	w8, [sp]
  42aeb8:	cmp	w8, #0xc
  42aebc:	b.eq	42b388 <ascii_strlower_n@plt+0x26f28>  // b.none
  42aec0:	b	42aec4 <ascii_strlower_n@plt+0x26a64>
  42aec4:	ldr	w8, [sp]
  42aec8:	cmp	w8, #0xd
  42aecc:	b.eq	42b398 <ascii_strlower_n@plt+0x26f38>  // b.none
  42aed0:	b	42aed4 <ascii_strlower_n@plt+0x26a74>
  42aed4:	ldr	w8, [sp]
  42aed8:	cmp	w8, #0xe
  42aedc:	b.eq	42b3a8 <ascii_strlower_n@plt+0x26f48>  // b.none
  42aee0:	b	42aee4 <ascii_strlower_n@plt+0x26a84>
  42aee4:	ldr	w8, [sp]
  42aee8:	cmp	w8, #0xf
  42aeec:	b.eq	42b3b8 <ascii_strlower_n@plt+0x26f58>  // b.none
  42aef0:	b	42aef4 <ascii_strlower_n@plt+0x26a94>
  42aef4:	ldr	w8, [sp]
  42aef8:	cmp	w8, #0x10
  42aefc:	b.eq	42b3c8 <ascii_strlower_n@plt+0x26f68>  // b.none
  42af00:	b	42af04 <ascii_strlower_n@plt+0x26aa4>
  42af04:	ldr	w8, [sp]
  42af08:	cmp	w8, #0x11
  42af0c:	b.eq	42b3d8 <ascii_strlower_n@plt+0x26f78>  // b.none
  42af10:	b	42af14 <ascii_strlower_n@plt+0x26ab4>
  42af14:	ldr	w8, [sp]
  42af18:	cmp	w8, #0x12
  42af1c:	b.eq	42b3e8 <ascii_strlower_n@plt+0x26f88>  // b.none
  42af20:	b	42af24 <ascii_strlower_n@plt+0x26ac4>
  42af24:	ldr	w8, [sp]
  42af28:	cmp	w8, #0x13
  42af2c:	b.eq	42b3f8 <ascii_strlower_n@plt+0x26f98>  // b.none
  42af30:	b	42af34 <ascii_strlower_n@plt+0x26ad4>
  42af34:	ldr	w8, [sp]
  42af38:	cmp	w8, #0x14
  42af3c:	b.eq	42b408 <ascii_strlower_n@plt+0x26fa8>  // b.none
  42af40:	b	42af44 <ascii_strlower_n@plt+0x26ae4>
  42af44:	ldr	w8, [sp]
  42af48:	cmp	w8, #0x15
  42af4c:	b.eq	42b418 <ascii_strlower_n@plt+0x26fb8>  // b.none
  42af50:	b	42af54 <ascii_strlower_n@plt+0x26af4>
  42af54:	ldr	w8, [sp]
  42af58:	cmp	w8, #0x16
  42af5c:	b.eq	42b428 <ascii_strlower_n@plt+0x26fc8>  // b.none
  42af60:	b	42af64 <ascii_strlower_n@plt+0x26b04>
  42af64:	ldr	w8, [sp]
  42af68:	cmp	w8, #0x17
  42af6c:	b.eq	42b438 <ascii_strlower_n@plt+0x26fd8>  // b.none
  42af70:	b	42af74 <ascii_strlower_n@plt+0x26b14>
  42af74:	ldr	w8, [sp]
  42af78:	cmp	w8, #0x18
  42af7c:	b.eq	42b448 <ascii_strlower_n@plt+0x26fe8>  // b.none
  42af80:	b	42af84 <ascii_strlower_n@plt+0x26b24>
  42af84:	ldr	w8, [sp]
  42af88:	cmp	w8, #0x19
  42af8c:	b.eq	42b458 <ascii_strlower_n@plt+0x26ff8>  // b.none
  42af90:	b	42af94 <ascii_strlower_n@plt+0x26b34>
  42af94:	ldr	w8, [sp]
  42af98:	cmp	w8, #0x1a
  42af9c:	b.eq	42b468 <ascii_strlower_n@plt+0x27008>  // b.none
  42afa0:	b	42afa4 <ascii_strlower_n@plt+0x26b44>
  42afa4:	ldr	w8, [sp]
  42afa8:	cmp	w8, #0x1b
  42afac:	b.eq	42b478 <ascii_strlower_n@plt+0x27018>  // b.none
  42afb0:	b	42afb4 <ascii_strlower_n@plt+0x26b54>
  42afb4:	ldr	w8, [sp]
  42afb8:	cmp	w8, #0x1c
  42afbc:	b.eq	42b488 <ascii_strlower_n@plt+0x27028>  // b.none
  42afc0:	b	42afc4 <ascii_strlower_n@plt+0x26b64>
  42afc4:	ldr	w8, [sp]
  42afc8:	cmp	w8, #0x1d
  42afcc:	b.eq	42b498 <ascii_strlower_n@plt+0x27038>  // b.none
  42afd0:	b	42afd4 <ascii_strlower_n@plt+0x26b74>
  42afd4:	ldr	w8, [sp]
  42afd8:	cmp	w8, #0x1e
  42afdc:	b.eq	42b4a8 <ascii_strlower_n@plt+0x27048>  // b.none
  42afe0:	b	42afe4 <ascii_strlower_n@plt+0x26b84>
  42afe4:	ldr	w8, [sp]
  42afe8:	cmp	w8, #0x1f
  42afec:	b.eq	42b4b8 <ascii_strlower_n@plt+0x27058>  // b.none
  42aff0:	b	42aff4 <ascii_strlower_n@plt+0x26b94>
  42aff4:	ldr	w8, [sp]
  42aff8:	cmp	w8, #0x20
  42affc:	b.eq	42b4c8 <ascii_strlower_n@plt+0x27068>  // b.none
  42b000:	b	42b004 <ascii_strlower_n@plt+0x26ba4>
  42b004:	ldr	w8, [sp]
  42b008:	cmp	w8, #0x21
  42b00c:	b.eq	42b4d8 <ascii_strlower_n@plt+0x27078>  // b.none
  42b010:	b	42b014 <ascii_strlower_n@plt+0x26bb4>
  42b014:	ldr	w8, [sp]
  42b018:	cmp	w8, #0x22
  42b01c:	b.eq	42b4e8 <ascii_strlower_n@plt+0x27088>  // b.none
  42b020:	b	42b024 <ascii_strlower_n@plt+0x26bc4>
  42b024:	ldr	w8, [sp]
  42b028:	cmp	w8, #0x23
  42b02c:	b.eq	42b4f8 <ascii_strlower_n@plt+0x27098>  // b.none
  42b030:	b	42b034 <ascii_strlower_n@plt+0x26bd4>
  42b034:	ldr	w8, [sp]
  42b038:	cmp	w8, #0x24
  42b03c:	b.eq	42b508 <ascii_strlower_n@plt+0x270a8>  // b.none
  42b040:	b	42b044 <ascii_strlower_n@plt+0x26be4>
  42b044:	ldr	w8, [sp]
  42b048:	cmp	w8, #0x25
  42b04c:	b.eq	42b518 <ascii_strlower_n@plt+0x270b8>  // b.none
  42b050:	b	42b054 <ascii_strlower_n@plt+0x26bf4>
  42b054:	ldr	w8, [sp]
  42b058:	cmp	w8, #0x26
  42b05c:	b.eq	42b528 <ascii_strlower_n@plt+0x270c8>  // b.none
  42b060:	b	42b064 <ascii_strlower_n@plt+0x26c04>
  42b064:	ldr	w8, [sp]
  42b068:	cmp	w8, #0x27
  42b06c:	b.eq	42b538 <ascii_strlower_n@plt+0x270d8>  // b.none
  42b070:	b	42b074 <ascii_strlower_n@plt+0x26c14>
  42b074:	ldr	w8, [sp]
  42b078:	cmp	w8, #0x28
  42b07c:	b.eq	42b548 <ascii_strlower_n@plt+0x270e8>  // b.none
  42b080:	b	42b084 <ascii_strlower_n@plt+0x26c24>
  42b084:	ldr	w8, [sp]
  42b088:	cmp	w8, #0x29
  42b08c:	b.eq	42b558 <ascii_strlower_n@plt+0x270f8>  // b.none
  42b090:	b	42b094 <ascii_strlower_n@plt+0x26c34>
  42b094:	ldr	w8, [sp]
  42b098:	cmp	w8, #0x2a
  42b09c:	b.eq	42b568 <ascii_strlower_n@plt+0x27108>  // b.none
  42b0a0:	b	42b0a4 <ascii_strlower_n@plt+0x26c44>
  42b0a4:	ldr	w8, [sp]
  42b0a8:	cmp	w8, #0x2b
  42b0ac:	b.eq	42b578 <ascii_strlower_n@plt+0x27118>  // b.none
  42b0b0:	b	42b0b4 <ascii_strlower_n@plt+0x26c54>
  42b0b4:	ldr	w8, [sp]
  42b0b8:	cmp	w8, #0x2c
  42b0bc:	b.eq	42b588 <ascii_strlower_n@plt+0x27128>  // b.none
  42b0c0:	b	42b0c4 <ascii_strlower_n@plt+0x26c64>
  42b0c4:	ldr	w8, [sp]
  42b0c8:	cmp	w8, #0x2d
  42b0cc:	b.eq	42b598 <ascii_strlower_n@plt+0x27138>  // b.none
  42b0d0:	b	42b0d4 <ascii_strlower_n@plt+0x26c74>
  42b0d4:	ldr	w8, [sp]
  42b0d8:	cmp	w8, #0x2e
  42b0dc:	b.eq	42b5a8 <ascii_strlower_n@plt+0x27148>  // b.none
  42b0e0:	b	42b0e4 <ascii_strlower_n@plt+0x26c84>
  42b0e4:	ldr	w8, [sp]
  42b0e8:	cmp	w8, #0x2f
  42b0ec:	b.eq	42b5b8 <ascii_strlower_n@plt+0x27158>  // b.none
  42b0f0:	b	42b0f4 <ascii_strlower_n@plt+0x26c94>
  42b0f4:	ldr	w8, [sp]
  42b0f8:	cmp	w8, #0x30
  42b0fc:	b.eq	42b5c8 <ascii_strlower_n@plt+0x27168>  // b.none
  42b100:	b	42b104 <ascii_strlower_n@plt+0x26ca4>
  42b104:	ldr	w8, [sp]
  42b108:	cmp	w8, #0x31
  42b10c:	b.eq	42b5d8 <ascii_strlower_n@plt+0x27178>  // b.none
  42b110:	b	42b114 <ascii_strlower_n@plt+0x26cb4>
  42b114:	ldr	w8, [sp]
  42b118:	cmp	w8, #0x32
  42b11c:	b.eq	42b5e8 <ascii_strlower_n@plt+0x27188>  // b.none
  42b120:	b	42b124 <ascii_strlower_n@plt+0x26cc4>
  42b124:	ldr	w8, [sp]
  42b128:	cmp	w8, #0x33
  42b12c:	b.eq	42b5f8 <ascii_strlower_n@plt+0x27198>  // b.none
  42b130:	b	42b134 <ascii_strlower_n@plt+0x26cd4>
  42b134:	ldr	w8, [sp]
  42b138:	cmp	w8, #0x34
  42b13c:	b.eq	42b608 <ascii_strlower_n@plt+0x271a8>  // b.none
  42b140:	b	42b144 <ascii_strlower_n@plt+0x26ce4>
  42b144:	ldr	w8, [sp]
  42b148:	cmp	w8, #0x37
  42b14c:	b.eq	42b618 <ascii_strlower_n@plt+0x271b8>  // b.none
  42b150:	b	42b154 <ascii_strlower_n@plt+0x26cf4>
  42b154:	ldr	w8, [sp]
  42b158:	cmp	w8, #0x38
  42b15c:	b.eq	42b628 <ascii_strlower_n@plt+0x271c8>  // b.none
  42b160:	b	42b164 <ascii_strlower_n@plt+0x26d04>
  42b164:	ldr	w8, [sp]
  42b168:	cmp	w8, #0x39
  42b16c:	b.eq	42b638 <ascii_strlower_n@plt+0x271d8>  // b.none
  42b170:	b	42b174 <ascii_strlower_n@plt+0x26d14>
  42b174:	ldr	w8, [sp]
  42b178:	cmp	w8, #0x3a
  42b17c:	b.eq	42b648 <ascii_strlower_n@plt+0x271e8>  // b.none
  42b180:	b	42b184 <ascii_strlower_n@plt+0x26d24>
  42b184:	ldr	w8, [sp]
  42b188:	cmp	w8, #0x3b
  42b18c:	b.eq	42b658 <ascii_strlower_n@plt+0x271f8>  // b.none
  42b190:	b	42b194 <ascii_strlower_n@plt+0x26d34>
  42b194:	ldr	w8, [sp]
  42b198:	cmp	w8, #0x3c
  42b19c:	b.eq	42b668 <ascii_strlower_n@plt+0x27208>  // b.none
  42b1a0:	b	42b1a4 <ascii_strlower_n@plt+0x26d44>
  42b1a4:	ldr	w8, [sp]
  42b1a8:	cmp	w8, #0x3d
  42b1ac:	b.eq	42b678 <ascii_strlower_n@plt+0x27218>  // b.none
  42b1b0:	b	42b1b4 <ascii_strlower_n@plt+0x26d54>
  42b1b4:	ldr	w8, [sp]
  42b1b8:	cmp	w8, #0x63
  42b1bc:	b.eq	42b688 <ascii_strlower_n@plt+0x27228>  // b.none
  42b1c0:	b	42b1c4 <ascii_strlower_n@plt+0x26d64>
  42b1c4:	ldr	w8, [sp]
  42b1c8:	cmp	w8, #0x64
  42b1cc:	b.eq	42b698 <ascii_strlower_n@plt+0x27238>  // b.none
  42b1d0:	b	42b1d4 <ascii_strlower_n@plt+0x26d74>
  42b1d4:	ldr	w8, [sp]
  42b1d8:	cmp	w8, #0x65
  42b1dc:	b.eq	42b6a8 <ascii_strlower_n@plt+0x27248>  // b.none
  42b1e0:	b	42b1e4 <ascii_strlower_n@plt+0x26d84>
  42b1e4:	ldr	w8, [sp]
  42b1e8:	cmp	w8, #0x66
  42b1ec:	b.eq	42b6b8 <ascii_strlower_n@plt+0x27258>  // b.none
  42b1f0:	b	42b1f4 <ascii_strlower_n@plt+0x26d94>
  42b1f4:	ldr	w8, [sp]
  42b1f8:	cmp	w8, #0x67
  42b1fc:	b.eq	42b6c8 <ascii_strlower_n@plt+0x27268>  // b.none
  42b200:	b	42b204 <ascii_strlower_n@plt+0x26da4>
  42b204:	ldr	w8, [sp]
  42b208:	cmp	w8, #0x68
  42b20c:	b.eq	42b6d8 <ascii_strlower_n@plt+0x27278>  // b.none
  42b210:	b	42b214 <ascii_strlower_n@plt+0x26db4>
  42b214:	ldr	w8, [sp]
  42b218:	cmp	w8, #0x69
  42b21c:	b.eq	42b6e8 <ascii_strlower_n@plt+0x27288>  // b.none
  42b220:	b	42b224 <ascii_strlower_n@plt+0x26dc4>
  42b224:	ldr	w8, [sp]
  42b228:	cmp	w8, #0xf9
  42b22c:	b.eq	42b6f8 <ascii_strlower_n@plt+0x27298>  // b.none
  42b230:	b	42b234 <ascii_strlower_n@plt+0x26dd4>
  42b234:	ldr	w8, [sp]
  42b238:	cmp	w8, #0xfa
  42b23c:	b.eq	42b708 <ascii_strlower_n@plt+0x272a8>  // b.none
  42b240:	b	42b244 <ascii_strlower_n@plt+0x26de4>
  42b244:	ldr	w8, [sp]
  42b248:	cmp	w8, #0xfb
  42b24c:	b.eq	42b718 <ascii_strlower_n@plt+0x272b8>  // b.none
  42b250:	b	42b254 <ascii_strlower_n@plt+0x26df4>
  42b254:	ldr	w8, [sp]
  42b258:	cmp	w8, #0xfc
  42b25c:	b.eq	42b728 <ascii_strlower_n@plt+0x272c8>  // b.none
  42b260:	b	42b264 <ascii_strlower_n@plt+0x26e04>
  42b264:	ldr	w8, [sp]
  42b268:	cmp	w8, #0xfd
  42b26c:	b.eq	42b738 <ascii_strlower_n@plt+0x272d8>  // b.none
  42b270:	b	42b274 <ascii_strlower_n@plt+0x26e14>
  42b274:	ldr	w8, [sp]
  42b278:	cmp	w8, #0xfe
  42b27c:	b.eq	42b748 <ascii_strlower_n@plt+0x272e8>  // b.none
  42b280:	b	42b284 <ascii_strlower_n@plt+0x26e24>
  42b284:	ldr	w8, [sp]
  42b288:	cmp	w8, #0xff
  42b28c:	b.eq	42b758 <ascii_strlower_n@plt+0x272f8>  // b.none
  42b290:	b	42b294 <ascii_strlower_n@plt+0x26e34>
  42b294:	ldr	w8, [sp]
  42b298:	cmp	w8, #0x100
  42b29c:	b.eq	42b768 <ascii_strlower_n@plt+0x27308>  // b.none
  42b2a0:	b	42b2a4 <ascii_strlower_n@plt+0x26e44>
  42b2a4:	ldr	w8, [sp]
  42b2a8:	cmp	w8, #0x101
  42b2ac:	b.eq	42b778 <ascii_strlower_n@plt+0x27318>  // b.none
  42b2b0:	b	42b2b4 <ascii_strlower_n@plt+0x26e54>
  42b2b4:	ldr	w8, [sp]
  42b2b8:	cmp	w8, #0x8, lsl #12
  42b2bc:	b.eq	42b788 <ascii_strlower_n@plt+0x27328>  // b.none
  42b2c0:	b	42b2c4 <ascii_strlower_n@plt+0x26e64>
  42b2c4:	mov	w8, #0x8001                	// #32769
  42b2c8:	ldr	w9, [sp]
  42b2cc:	cmp	w9, w8
  42b2d0:	b.eq	42b798 <ascii_strlower_n@plt+0x27338>  // b.none
  42b2d4:	b	42b7a8 <ascii_strlower_n@plt+0x27348>
  42b2d8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b2dc:	add	x8, x8, #0x188
  42b2e0:	str	x8, [sp, #8]
  42b2e4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b2e8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b2ec:	add	x8, x8, #0x18a
  42b2f0:	str	x8, [sp, #8]
  42b2f4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b2f8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b2fc:	add	x8, x8, #0x18d
  42b300:	str	x8, [sp, #8]
  42b304:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b308:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b30c:	add	x8, x8, #0x190
  42b310:	str	x8, [sp, #8]
  42b314:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b318:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b31c:	add	x8, x8, #0x193
  42b320:	str	x8, [sp, #8]
  42b324:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b328:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b32c:	add	x8, x8, #0x199
  42b330:	str	x8, [sp, #8]
  42b334:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b338:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b33c:	add	x8, x8, #0x19d
  42b340:	str	x8, [sp, #8]
  42b344:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b348:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b34c:	add	x8, x8, #0x1a0
  42b350:	str	x8, [sp, #8]
  42b354:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b358:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b35c:	add	x8, x8, #0x1a3
  42b360:	str	x8, [sp, #8]
  42b364:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b368:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b36c:	add	x8, x8, #0x1a6
  42b370:	str	x8, [sp, #8]
  42b374:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b378:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b37c:	add	x8, x8, #0x1ab
  42b380:	str	x8, [sp, #8]
  42b384:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b388:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b38c:	add	x8, x8, #0x1af
  42b390:	str	x8, [sp, #8]
  42b394:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b398:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b39c:	add	x8, x8, #0x1b3
  42b3a0:	str	x8, [sp, #8]
  42b3a4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b3a8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b3ac:	add	x8, x8, #0x1b9
  42b3b0:	str	x8, [sp, #8]
  42b3b4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b3b8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b3bc:	add	x8, x8, #0x1bf
  42b3c0:	str	x8, [sp, #8]
  42b3c4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b3c8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b3cc:	add	x8, x8, #0x1c2
  42b3d0:	str	x8, [sp, #8]
  42b3d4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b3d8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b3dc:	add	x8, x8, #0x1c6
  42b3e0:	str	x8, [sp, #8]
  42b3e4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b3e8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b3ec:	add	x8, x8, #0x1c9
  42b3f0:	str	x8, [sp, #8]
  42b3f4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b3f8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b3fc:	add	x8, x8, #0x1cf
  42b400:	str	x8, [sp, #8]
  42b404:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b408:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b40c:	add	x8, x8, #0x1d3
  42b410:	str	x8, [sp, #8]
  42b414:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b418:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b41c:	add	x8, x8, #0x1d8
  42b420:	str	x8, [sp, #8]
  42b424:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b428:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b42c:	add	x8, x8, #0x1db
  42b430:	str	x8, [sp, #8]
  42b434:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b438:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b43c:	add	x8, x8, #0x1e0
  42b440:	str	x8, [sp, #8]
  42b444:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b448:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b44c:	add	x8, x8, #0x1e9
  42b450:	str	x8, [sp, #8]
  42b454:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b458:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b45c:	add	x8, x8, #0x1ed
  42b460:	str	x8, [sp, #8]
  42b464:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b468:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b46c:	add	x8, x8, #0x1f1
  42b470:	str	x8, [sp, #8]
  42b474:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b478:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b47c:	add	x8, x8, #0x1f4
  42b480:	str	x8, [sp, #8]
  42b484:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b488:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b48c:	add	x8, x8, #0x1f9
  42b490:	str	x8, [sp, #8]
  42b494:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b498:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b49c:	add	x8, x8, #0x1fe
  42b4a0:	str	x8, [sp, #8]
  42b4a4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b4a8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b4ac:	add	x8, x8, #0x202
  42b4b0:	str	x8, [sp, #8]
  42b4b4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b4b8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b4bc:	add	x8, x8, #0x206
  42b4c0:	str	x8, [sp, #8]
  42b4c4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b4c8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b4cc:	add	x8, x8, #0x20a
  42b4d0:	str	x8, [sp, #8]
  42b4d4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b4d8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b4dc:	add	x8, x8, #0x211
  42b4e0:	str	x8, [sp, #8]
  42b4e4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b4e8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b4ec:	add	x8, x8, #0x215
  42b4f0:	str	x8, [sp, #8]
  42b4f4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b4f8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b4fc:	add	x8, x8, #0x21a
  42b500:	str	x8, [sp, #8]
  42b504:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b508:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b50c:	add	x8, x8, #0x220
  42b510:	str	x8, [sp, #8]
  42b514:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b518:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b51c:	add	x8, x8, #0x223
  42b520:	str	x8, [sp, #8]
  42b524:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b528:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b52c:	add	x8, x8, #0x228
  42b530:	str	x8, [sp, #8]
  42b534:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b538:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b53c:	add	x8, x8, #0x22b
  42b540:	str	x8, [sp, #8]
  42b544:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b548:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b54c:	add	x8, x8, #0x231
  42b550:	str	x8, [sp, #8]
  42b554:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b558:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b55c:	add	x8, x8, #0x236
  42b560:	str	x8, [sp, #8]
  42b564:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b568:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b56c:	add	x8, x8, #0x23a
  42b570:	str	x8, [sp, #8]
  42b574:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b578:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b57c:	add	x8, x8, #0x23e
  42b580:	str	x8, [sp, #8]
  42b584:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b588:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b58c:	add	x8, x8, #0x241
  42b590:	str	x8, [sp, #8]
  42b594:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b598:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b59c:	add	x8, x8, #0x247
  42b5a0:	str	x8, [sp, #8]
  42b5a4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b5a8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b5ac:	add	x8, x8, #0x250
  42b5b0:	str	x8, [sp, #8]
  42b5b4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b5b8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b5bc:	add	x8, x8, #0x256
  42b5c0:	str	x8, [sp, #8]
  42b5c4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b5c8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b5cc:	add	x8, x8, #0x25b
  42b5d0:	str	x8, [sp, #8]
  42b5d4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b5d8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b5dc:	add	x8, x8, #0x262
  42b5e0:	str	x8, [sp, #8]
  42b5e4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b5e8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b5ec:	add	x8, x8, #0x268
  42b5f0:	str	x8, [sp, #8]
  42b5f4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b5f8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b5fc:	add	x8, x8, #0x26e
  42b600:	str	x8, [sp, #8]
  42b604:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b608:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b60c:	add	x8, x8, #0x279
  42b610:	str	x8, [sp, #8]
  42b614:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b618:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b61c:	add	x8, x8, #0x27e
  42b620:	str	x8, [sp, #8]
  42b624:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b628:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b62c:	add	x8, x8, #0x282
  42b630:	str	x8, [sp, #8]
  42b634:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b638:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b63c:	add	x8, x8, #0x288
  42b640:	str	x8, [sp, #8]
  42b644:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b648:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b64c:	add	x8, x8, #0x28d
  42b650:	str	x8, [sp, #8]
  42b654:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b658:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b65c:	add	x8, x8, #0x294
  42b660:	str	x8, [sp, #8]
  42b664:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b668:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b66c:	add	x8, x8, #0x298
  42b670:	str	x8, [sp, #8]
  42b674:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b678:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b67c:	add	x8, x8, #0x2a0
  42b680:	str	x8, [sp, #8]
  42b684:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b688:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b68c:	add	x8, x8, #0x2ab
  42b690:	str	x8, [sp, #8]
  42b694:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b698:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b69c:	add	x8, x8, #0x2af
  42b6a0:	str	x8, [sp, #8]
  42b6a4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b6a8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b6ac:	add	x8, x8, #0x2b3
  42b6b0:	str	x8, [sp, #8]
  42b6b4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b6b8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b6bc:	add	x8, x8, #0x2b7
  42b6c0:	str	x8, [sp, #8]
  42b6c4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b6c8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b6cc:	add	x8, x8, #0x2bb
  42b6d0:	str	x8, [sp, #8]
  42b6d4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b6d8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b6dc:	add	x8, x8, #0x2be
  42b6e0:	str	x8, [sp, #8]
  42b6e4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b6e8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b6ec:	add	x8, x8, #0x2c4
  42b6f0:	str	x8, [sp, #8]
  42b6f4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b6f8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b6fc:	add	x8, x8, #0x2ca
  42b700:	str	x8, [sp, #8]
  42b704:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b708:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b70c:	add	x8, x8, #0x2cf
  42b710:	str	x8, [sp, #8]
  42b714:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b718:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b71c:	add	x8, x8, #0x2d4
  42b720:	str	x8, [sp, #8]
  42b724:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b728:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b72c:	add	x8, x8, #0x2d9
  42b730:	str	x8, [sp, #8]
  42b734:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b738:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b73c:	add	x8, x8, #0x2de
  42b740:	str	x8, [sp, #8]
  42b744:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b748:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b74c:	add	x8, x8, #0x2e4
  42b750:	str	x8, [sp, #8]
  42b754:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b758:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b75c:	add	x8, x8, #0x2ea
  42b760:	str	x8, [sp, #8]
  42b764:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b768:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b76c:	add	x8, x8, #0x2ee
  42b770:	str	x8, [sp, #8]
  42b774:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b778:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b77c:	add	x8, x8, #0x2f2
  42b780:	str	x8, [sp, #8]
  42b784:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b788:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b78c:	add	x8, x8, #0x2f6
  42b790:	str	x8, [sp, #8]
  42b794:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b798:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b79c:	add	x8, x8, #0x2f9
  42b7a0:	str	x8, [sp, #8]
  42b7a4:	b	42b7b0 <ascii_strlower_n@plt+0x27350>
  42b7a8:	mov	x8, xzr
  42b7ac:	str	x8, [sp, #8]
  42b7b0:	ldr	x0, [sp, #8]
  42b7b4:	add	sp, sp, #0x10
  42b7b8:	ret
  42b7bc:	sub	sp, sp, #0x50
  42b7c0:	stp	x29, x30, [sp, #64]
  42b7c4:	add	x29, sp, #0x40
  42b7c8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b7cc:	add	x8, x8, #0x2fd
  42b7d0:	add	x2, x8, #0x3
  42b7d4:	stur	x0, [x29, #-16]
  42b7d8:	str	x2, [sp, #24]
  42b7dc:	ldur	x8, [x29, #-16]
  42b7e0:	cmp	x8, #0x0
  42b7e4:	cset	w9, ne  // ne = any
  42b7e8:	mov	w10, #0x1                   	// #1
  42b7ec:	eor	w9, w9, #0x1
  42b7f0:	eor	w9, w9, w10
  42b7f4:	eor	w9, w9, w10
  42b7f8:	and	w9, w9, #0x1
  42b7fc:	mov	w0, w9
  42b800:	sxtw	x8, w0
  42b804:	cbz	x8, 42b82c <ascii_strlower_n@plt+0x273cc>
  42b808:	mov	w8, wzr
  42b80c:	mov	w0, w8
  42b810:	adrp	x1, 42d000 <ascii_strlower_n@plt+0x28ba0>
  42b814:	add	x1, x1, #0x6f2
  42b818:	ldr	x2, [sp, #24]
  42b81c:	mov	w3, #0x18                  	// #24
  42b820:	adrp	x4, 433000 <ascii_strlower_n@plt+0x2eba0>
  42b824:	add	x4, x4, #0x317
  42b828:	bl	4039d0 <log_assert_failed_realm@plt>
  42b82c:	ldur	x0, [x29, #-16]
  42b830:	ldur	x8, [x29, #-16]
  42b834:	str	x0, [sp, #16]
  42b838:	mov	x0, x8
  42b83c:	bl	403f70 <strlen@plt>
  42b840:	ldr	x8, [sp, #16]
  42b844:	str	x0, [sp, #8]
  42b848:	mov	x0, x8
  42b84c:	ldr	x1, [sp, #8]
  42b850:	bl	42b8d8 <ascii_strlower_n@plt+0x27478>
  42b854:	stur	x0, [x29, #-24]
  42b858:	ldur	x8, [x29, #-24]
  42b85c:	cbz	x8, 42b870 <ascii_strlower_n@plt+0x27410>
  42b860:	ldur	x8, [x29, #-24]
  42b864:	ldr	w9, [x8, #8]
  42b868:	stur	w9, [x29, #-4]
  42b86c:	b	42b8c8 <ascii_strlower_n@plt+0x27468>
  42b870:	ldur	x0, [x29, #-16]
  42b874:	adrp	x1, 431000 <ascii_strlower_n@plt+0x2cba0>
  42b878:	add	x1, x1, #0xeb3
  42b87c:	bl	42b9b4 <ascii_strlower_n@plt+0x27554>
  42b880:	stur	x0, [x29, #-16]
  42b884:	ldur	x8, [x29, #-16]
  42b888:	cbz	x8, 42b8c0 <ascii_strlower_n@plt+0x27460>
  42b88c:	ldur	x0, [x29, #-16]
  42b890:	sub	x1, x29, #0x1c
  42b894:	bl	42ba14 <ascii_strlower_n@plt+0x275b4>
  42b898:	cmp	w0, #0x0
  42b89c:	cset	w8, lt  // lt = tstop
  42b8a0:	tbnz	w8, #0, 42b8c0 <ascii_strlower_n@plt+0x27460>
  42b8a4:	ldur	w8, [x29, #-28]
  42b8a8:	mov	w9, #0xffff                	// #65535
  42b8ac:	cmp	w8, w9
  42b8b0:	b.hi	42b8c0 <ascii_strlower_n@plt+0x27460>  // b.pmore
  42b8b4:	ldur	w8, [x29, #-28]
  42b8b8:	stur	w8, [x29, #-4]
  42b8bc:	b	42b8c8 <ascii_strlower_n@plt+0x27468>
  42b8c0:	mov	w8, #0xffffffff            	// #-1
  42b8c4:	stur	w8, [x29, #-4]
  42b8c8:	ldur	w0, [x29, #-4]
  42b8cc:	ldp	x29, x30, [sp, #64]
  42b8d0:	add	sp, sp, #0x50
  42b8d4:	ret
  42b8d8:	sub	sp, sp, #0x40
  42b8dc:	stp	x29, x30, [sp, #48]
  42b8e0:	add	x29, sp, #0x30
  42b8e4:	stur	x0, [x29, #-16]
  42b8e8:	str	x1, [sp, #24]
  42b8ec:	ldr	x8, [sp, #24]
  42b8f0:	cmp	x8, #0xa
  42b8f4:	b.hi	42b99c <ascii_strlower_n@plt+0x2753c>  // b.pmore
  42b8f8:	ldr	x8, [sp, #24]
  42b8fc:	cmp	x8, #0x1
  42b900:	b.cc	42b99c <ascii_strlower_n@plt+0x2753c>  // b.lo, b.ul, b.last
  42b904:	ldur	x0, [x29, #-16]
  42b908:	ldr	x1, [sp, #24]
  42b90c:	bl	42c40c <ascii_strlower_n@plt+0x27fac>
  42b910:	str	w0, [sp, #20]
  42b914:	ldr	w8, [sp, #20]
  42b918:	cmp	w8, #0xb1
  42b91c:	b.hi	42b99c <ascii_strlower_n@plt+0x2753c>  // b.pmore
  42b920:	ldr	w8, [sp, #20]
  42b924:	mov	w9, w8
  42b928:	mov	x10, #0x10                  	// #16
  42b92c:	mul	x9, x10, x9
  42b930:	adrp	x10, 44e000 <ascii_strlower_n@plt+0x49ba0>
  42b934:	add	x10, x10, #0xc70
  42b938:	add	x9, x10, x9
  42b93c:	ldr	x9, [x9]
  42b940:	str	x9, [sp, #8]
  42b944:	ldr	x9, [sp, #8]
  42b948:	cbz	x9, 42b99c <ascii_strlower_n@plt+0x2753c>
  42b94c:	ldur	x8, [x29, #-16]
  42b950:	ldrb	w9, [x8]
  42b954:	ldr	x8, [sp, #8]
  42b958:	ldrb	w10, [x8]
  42b95c:	eor	w9, w9, w10
  42b960:	and	w9, w9, #0xffffffdf
  42b964:	cbnz	w9, 42b99c <ascii_strlower_n@plt+0x2753c>
  42b968:	ldur	x0, [x29, #-16]
  42b96c:	ldr	x1, [sp, #8]
  42b970:	bl	42c4a8 <ascii_strlower_n@plt+0x28048>
  42b974:	cbnz	w0, 42b99c <ascii_strlower_n@plt+0x2753c>
  42b978:	ldr	w8, [sp, #20]
  42b97c:	mov	w9, w8
  42b980:	mov	x10, #0x10                  	// #16
  42b984:	mul	x9, x10, x9
  42b988:	adrp	x10, 44e000 <ascii_strlower_n@plt+0x49ba0>
  42b98c:	add	x10, x10, #0xc70
  42b990:	add	x9, x10, x9
  42b994:	stur	x9, [x29, #-8]
  42b998:	b	42b9a4 <ascii_strlower_n@plt+0x27544>
  42b99c:	mov	x8, xzr
  42b9a0:	stur	x8, [x29, #-8]
  42b9a4:	ldur	x0, [x29, #-8]
  42b9a8:	ldp	x29, x30, [sp, #48]
  42b9ac:	add	sp, sp, #0x40
  42b9b0:	ret
  42b9b4:	sub	sp, sp, #0x30
  42b9b8:	stp	x29, x30, [sp, #32]
  42b9bc:	add	x29, sp, #0x20
  42b9c0:	str	x0, [sp, #16]
  42b9c4:	str	x1, [sp, #8]
  42b9c8:	ldr	x0, [sp, #8]
  42b9cc:	bl	403f70 <strlen@plt>
  42b9d0:	str	x0, [sp]
  42b9d4:	ldr	x0, [sp, #16]
  42b9d8:	ldr	x1, [sp, #8]
  42b9dc:	ldr	x2, [sp]
  42b9e0:	bl	404000 <strncasecmp@plt>
  42b9e4:	cbnz	w0, 42b9fc <ascii_strlower_n@plt+0x2759c>
  42b9e8:	ldr	x8, [sp, #16]
  42b9ec:	ldr	x9, [sp]
  42b9f0:	add	x8, x8, x9
  42b9f4:	stur	x8, [x29, #-8]
  42b9f8:	b	42ba04 <ascii_strlower_n@plt+0x275a4>
  42b9fc:	mov	x8, xzr
  42ba00:	stur	x8, [x29, #-8]
  42ba04:	ldur	x0, [x29, #-8]
  42ba08:	ldp	x29, x30, [sp, #32]
  42ba0c:	add	sp, sp, #0x30
  42ba10:	ret
  42ba14:	sub	sp, sp, #0x20
  42ba18:	stp	x29, x30, [sp, #16]
  42ba1c:	add	x29, sp, #0x10
  42ba20:	mov	w8, wzr
  42ba24:	str	x0, [sp, #8]
  42ba28:	str	x1, [sp]
  42ba2c:	ldr	x0, [sp, #8]
  42ba30:	ldr	x2, [sp]
  42ba34:	mov	w1, w8
  42ba38:	bl	4043f0 <safe_atou_full@plt>
  42ba3c:	ldp	x29, x30, [sp, #16]
  42ba40:	add	sp, sp, #0x20
  42ba44:	ret
  42ba48:	sub	sp, sp, #0x10
  42ba4c:	mov	w8, #0x0                   	// #0
  42ba50:	strh	w0, [sp, #14]
  42ba54:	strb	w8, [sp, #13]
  42ba58:	ldrh	w8, [sp, #14]
  42ba5c:	str	w8, [sp, #8]
  42ba60:	cbz	w8, 42baa4 <ascii_strlower_n@plt+0x27644>
  42ba64:	b	42ba68 <ascii_strlower_n@plt+0x27608>
  42ba68:	ldr	w8, [sp, #8]
  42ba6c:	cmp	w8, #0x29
  42ba70:	b.eq	42baa4 <ascii_strlower_n@plt+0x27644>  // b.none
  42ba74:	b	42ba78 <ascii_strlower_n@plt+0x27618>
  42ba78:	ldr	w8, [sp, #8]
  42ba7c:	subs	w9, w8, #0xf9
  42ba80:	cmp	w9, #0x3
  42ba84:	b.ls	42baa4 <ascii_strlower_n@plt+0x27644>  // b.plast
  42ba88:	b	42ba8c <ascii_strlower_n@plt+0x2762c>
  42ba8c:	ldr	w8, [sp, #8]
  42ba90:	cmp	w8, #0xff
  42ba94:	cset	w9, eq  // eq = none
  42ba98:	eor	w9, w9, #0x1
  42ba9c:	tbnz	w9, #0, 42bab0 <ascii_strlower_n@plt+0x27650>
  42baa0:	b	42baa4 <ascii_strlower_n@plt+0x27644>
  42baa4:	mov	w8, #0x1                   	// #1
  42baa8:	strb	w8, [sp, #13]
  42baac:	b	42bab0 <ascii_strlower_n@plt+0x27650>
  42bab0:	ldrb	w8, [sp, #13]
  42bab4:	mov	w9, #0x1                   	// #1
  42bab8:	and	w8, w8, w9
  42babc:	strb	w8, [sp, #12]
  42bac0:	ldrb	w8, [sp, #12]
  42bac4:	and	w0, w8, #0x1
  42bac8:	add	sp, sp, #0x10
  42bacc:	ret
  42bad0:	sub	sp, sp, #0x10
  42bad4:	strh	w0, [sp, #14]
  42bad8:	ldrh	w8, [sp, #14]
  42badc:	cmp	w8, #0xff
  42bae0:	cset	w8, eq  // eq = none
  42bae4:	and	w0, w8, #0x1
  42bae8:	add	sp, sp, #0x10
  42baec:	ret
  42baf0:	sub	sp, sp, #0x10
  42baf4:	mov	w8, #0x0                   	// #0
  42baf8:	strh	w0, [sp, #14]
  42bafc:	strb	w8, [sp, #13]
  42bb00:	ldrh	w8, [sp, #14]
  42bb04:	str	w8, [sp, #8]
  42bb08:	cbz	w8, 42bb50 <ascii_strlower_n@plt+0x276f0>
  42bb0c:	b	42bb10 <ascii_strlower_n@plt+0x276b0>
  42bb10:	ldr	w8, [sp, #8]
  42bb14:	cmp	w8, #0x29
  42bb18:	b.eq	42bb50 <ascii_strlower_n@plt+0x276f0>  // b.none
  42bb1c:	b	42bb20 <ascii_strlower_n@plt+0x276c0>
  42bb20:	ldr	w8, [sp, #8]
  42bb24:	cmp	w8, #0x2e
  42bb28:	b.eq	42bb50 <ascii_strlower_n@plt+0x276f0>  // b.none
  42bb2c:	b	42bb30 <ascii_strlower_n@plt+0x276d0>
  42bb30:	ldr	w8, [sp, #8]
  42bb34:	subs	w9, w8, #0xf9
  42bb38:	mov	w10, #0x1                   	// #1
  42bb3c:	cmp	w9, #0x1
  42bb40:	cset	w9, ls  // ls = plast
  42bb44:	eor	w9, w9, w10
  42bb48:	tbnz	w9, #0, 42bb5c <ascii_strlower_n@plt+0x276fc>
  42bb4c:	b	42bb50 <ascii_strlower_n@plt+0x276f0>
  42bb50:	mov	w8, #0x1                   	// #1
  42bb54:	strb	w8, [sp, #13]
  42bb58:	b	42bb5c <ascii_strlower_n@plt+0x276fc>
  42bb5c:	ldrb	w8, [sp, #13]
  42bb60:	mov	w9, #0x1                   	// #1
  42bb64:	and	w8, w8, w9
  42bb68:	strb	w8, [sp, #12]
  42bb6c:	ldrb	w8, [sp, #12]
  42bb70:	eor	w8, w8, #0x1
  42bb74:	and	w0, w8, #0x1
  42bb78:	add	sp, sp, #0x10
  42bb7c:	ret
  42bb80:	sub	sp, sp, #0x10
  42bb84:	mov	w8, #0x0                   	// #0
  42bb88:	strh	w0, [sp, #14]
  42bb8c:	strb	w8, [sp, #13]
  42bb90:	ldrh	w8, [sp, #14]
  42bb94:	subs	w8, w8, #0xfb
  42bb98:	mov	w9, #0x1                   	// #1
  42bb9c:	cmp	w8, #0x1
  42bba0:	cset	w8, ls  // ls = plast
  42bba4:	eor	w8, w8, w9
  42bba8:	tbnz	w8, #0, 42bbbc <ascii_strlower_n@plt+0x2775c>
  42bbac:	b	42bbb0 <ascii_strlower_n@plt+0x27750>
  42bbb0:	mov	w8, #0x1                   	// #1
  42bbb4:	strb	w8, [sp, #13]
  42bbb8:	b	42bbbc <ascii_strlower_n@plt+0x2775c>
  42bbbc:	ldrb	w8, [sp, #13]
  42bbc0:	mov	w9, #0x1                   	// #1
  42bbc4:	and	w8, w8, w9
  42bbc8:	strb	w8, [sp, #12]
  42bbcc:	ldrb	w8, [sp, #12]
  42bbd0:	and	w0, w8, #0x1
  42bbd4:	add	sp, sp, #0x10
  42bbd8:	ret
  42bbdc:	sub	sp, sp, #0x10
  42bbe0:	mov	w8, #0x0                   	// #0
  42bbe4:	strh	w0, [sp, #14]
  42bbe8:	strb	w8, [sp, #13]
  42bbec:	ldrh	w8, [sp, #14]
  42bbf0:	subs	w9, w8, #0xfb
  42bbf4:	cmp	w9, #0x1
  42bbf8:	str	w8, [sp, #8]
  42bbfc:	b.ls	42bc1c <ascii_strlower_n@plt+0x277bc>  // b.plast
  42bc00:	b	42bc04 <ascii_strlower_n@plt+0x277a4>
  42bc04:	ldr	w8, [sp, #8]
  42bc08:	cmp	w8, #0xff
  42bc0c:	cset	w9, eq  // eq = none
  42bc10:	eor	w9, w9, #0x1
  42bc14:	tbnz	w9, #0, 42bc28 <ascii_strlower_n@plt+0x277c8>
  42bc18:	b	42bc1c <ascii_strlower_n@plt+0x277bc>
  42bc1c:	mov	w8, #0x1                   	// #1
  42bc20:	strb	w8, [sp, #13]
  42bc24:	b	42bc28 <ascii_strlower_n@plt+0x277c8>
  42bc28:	ldrb	w8, [sp, #13]
  42bc2c:	mov	w9, #0x1                   	// #1
  42bc30:	and	w8, w8, w9
  42bc34:	strb	w8, [sp, #12]
  42bc38:	ldrb	w8, [sp, #12]
  42bc3c:	eor	w8, w8, #0x1
  42bc40:	and	w0, w8, #0x1
  42bc44:	add	sp, sp, #0x10
  42bc48:	ret
  42bc4c:	sub	sp, sp, #0x10
  42bc50:	strh	w0, [sp, #14]
  42bc54:	ldrh	w8, [sp, #14]
  42bc58:	cmp	w8, #0xff
  42bc5c:	cset	w8, ne  // ne = any
  42bc60:	and	w0, w8, #0x1
  42bc64:	add	sp, sp, #0x10
  42bc68:	ret
  42bc6c:	sub	sp, sp, #0x20
  42bc70:	stp	x29, x30, [sp, #16]
  42bc74:	add	x29, sp, #0x10
  42bc78:	sturh	w0, [x29, #-4]
  42bc7c:	ldurh	w0, [x29, #-4]
  42bc80:	bl	42ba48 <ascii_strlower_n@plt+0x275e8>
  42bc84:	tbnz	w0, #0, 42bc8c <ascii_strlower_n@plt+0x2782c>
  42bc88:	b	42bc9c <ascii_strlower_n@plt+0x2783c>
  42bc8c:	mov	w8, wzr
  42bc90:	and	w8, w8, #0x1
  42bc94:	sturb	w8, [x29, #-1]
  42bc98:	b	42bd44 <ascii_strlower_n@plt+0x278e4>
  42bc9c:	mov	w8, #0x0                   	// #0
  42bca0:	sturb	w8, [x29, #-5]
  42bca4:	ldurh	w8, [x29, #-4]
  42bca8:	cmp	w8, #0x5
  42bcac:	str	w8, [sp, #4]
  42bcb0:	b.eq	42bd18 <ascii_strlower_n@plt+0x278b8>  // b.none
  42bcb4:	b	42bcb8 <ascii_strlower_n@plt+0x27858>
  42bcb8:	ldr	w8, [sp, #4]
  42bcbc:	subs	w9, w8, #0x18
  42bcc0:	cmp	w9, #0x1
  42bcc4:	b.ls	42bd18 <ascii_strlower_n@plt+0x278b8>  // b.plast
  42bcc8:	b	42bccc <ascii_strlower_n@plt+0x2786c>
  42bccc:	ldr	w8, [sp, #4]
  42bcd0:	cmp	w8, #0x1e
  42bcd4:	b.eq	42bd18 <ascii_strlower_n@plt+0x278b8>  // b.none
  42bcd8:	b	42bcdc <ascii_strlower_n@plt+0x2787c>
  42bcdc:	ldr	w8, [sp, #4]
  42bce0:	cmp	w8, #0x27
  42bce4:	b.eq	42bd18 <ascii_strlower_n@plt+0x278b8>  // b.none
  42bce8:	b	42bcec <ascii_strlower_n@plt+0x2788c>
  42bcec:	ldr	w8, [sp, #4]
  42bcf0:	subs	w9, w8, #0x2e
  42bcf4:	cmp	w9, #0x1
  42bcf8:	b.ls	42bd18 <ascii_strlower_n@plt+0x278b8>  // b.plast
  42bcfc:	b	42bd00 <ascii_strlower_n@plt+0x278a0>
  42bd00:	ldr	w8, [sp, #4]
  42bd04:	cmp	w8, #0x32
  42bd08:	cset	w9, eq  // eq = none
  42bd0c:	eor	w9, w9, #0x1
  42bd10:	tbnz	w9, #0, 42bd24 <ascii_strlower_n@plt+0x278c4>
  42bd14:	b	42bd18 <ascii_strlower_n@plt+0x278b8>
  42bd18:	mov	w8, #0x1                   	// #1
  42bd1c:	sturb	w8, [x29, #-5]
  42bd20:	b	42bd24 <ascii_strlower_n@plt+0x278c4>
  42bd24:	ldurb	w8, [x29, #-5]
  42bd28:	mov	w9, #0x1                   	// #1
  42bd2c:	and	w8, w8, w9
  42bd30:	sturb	w8, [x29, #-6]
  42bd34:	ldurb	w8, [x29, #-6]
  42bd38:	eor	w8, w8, #0x1
  42bd3c:	and	w8, w8, w9
  42bd40:	sturb	w8, [x29, #-1]
  42bd44:	ldurb	w8, [x29, #-1]
  42bd48:	and	w0, w8, #0x1
  42bd4c:	ldp	x29, x30, [sp, #16]
  42bd50:	add	sp, sp, #0x20
  42bd54:	ret
  42bd58:	sub	sp, sp, #0x20
  42bd5c:	stp	x29, x30, [sp, #16]
  42bd60:	add	x29, sp, #0x10
  42bd64:	sturh	w0, [x29, #-4]
  42bd68:	ldurh	w0, [x29, #-4]
  42bd6c:	bl	42ba48 <ascii_strlower_n@plt+0x275e8>
  42bd70:	tbnz	w0, #0, 42bd78 <ascii_strlower_n@plt+0x27918>
  42bd74:	b	42bd88 <ascii_strlower_n@plt+0x27928>
  42bd78:	mov	w8, wzr
  42bd7c:	and	w8, w8, #0x1
  42bd80:	sturb	w8, [x29, #-1]
  42bd84:	b	42bdf8 <ascii_strlower_n@plt+0x27998>
  42bd88:	mov	w8, #0x0                   	// #0
  42bd8c:	sturb	w8, [x29, #-5]
  42bd90:	ldurh	w8, [x29, #-4]
  42bd94:	cmp	w8, #0x6
  42bd98:	str	w8, [sp, #4]
  42bd9c:	b.eq	42bdcc <ascii_strlower_n@plt+0x2796c>  // b.none
  42bda0:	b	42bda4 <ascii_strlower_n@plt+0x27944>
  42bda4:	ldr	w8, [sp, #4]
  42bda8:	cmp	w8, #0x27
  42bdac:	b.eq	42bdcc <ascii_strlower_n@plt+0x2796c>  // b.none
  42bdb0:	b	42bdb4 <ascii_strlower_n@plt+0x27954>
  42bdb4:	ldr	w8, [sp, #4]
  42bdb8:	cmp	w8, #0x32
  42bdbc:	cset	w9, eq  // eq = none
  42bdc0:	eor	w9, w9, #0x1
  42bdc4:	tbnz	w9, #0, 42bdd8 <ascii_strlower_n@plt+0x27978>
  42bdc8:	b	42bdcc <ascii_strlower_n@plt+0x2796c>
  42bdcc:	mov	w8, #0x1                   	// #1
  42bdd0:	sturb	w8, [x29, #-5]
  42bdd4:	b	42bdd8 <ascii_strlower_n@plt+0x27978>
  42bdd8:	ldurb	w8, [x29, #-5]
  42bddc:	mov	w9, #0x1                   	// #1
  42bde0:	and	w8, w8, w9
  42bde4:	sturb	w8, [x29, #-6]
  42bde8:	ldurb	w8, [x29, #-6]
  42bdec:	eor	w8, w8, #0x1
  42bdf0:	and	w8, w8, w9
  42bdf4:	sturb	w8, [x29, #-1]
  42bdf8:	ldurb	w8, [x29, #-1]
  42bdfc:	and	w0, w8, #0x1
  42be00:	ldp	x29, x30, [sp, #16]
  42be04:	add	sp, sp, #0x20
  42be08:	ret
  42be0c:	sub	sp, sp, #0x10
  42be10:	mov	w8, #0x0                   	// #0
  42be14:	strh	w0, [sp, #14]
  42be18:	strb	w8, [sp, #13]
  42be1c:	ldrh	w8, [sp, #14]
  42be20:	cmp	w8, #0x2
  42be24:	str	w8, [sp, #8]
  42be28:	b.eq	42be68 <ascii_strlower_n@plt+0x27a08>  // b.none
  42be2c:	b	42be30 <ascii_strlower_n@plt+0x279d0>
  42be30:	ldr	w8, [sp, #8]
  42be34:	cmp	w8, #0x6
  42be38:	b.eq	42be68 <ascii_strlower_n@plt+0x27a08>  // b.none
  42be3c:	b	42be40 <ascii_strlower_n@plt+0x279e0>
  42be40:	ldr	w8, [sp, #8]
  42be44:	cmp	w8, #0x30
  42be48:	b.eq	42be68 <ascii_strlower_n@plt+0x27a08>  // b.none
  42be4c:	b	42be50 <ascii_strlower_n@plt+0x279f0>
  42be50:	ldr	w8, [sp, #8]
  42be54:	cmp	w8, #0x33
  42be58:	cset	w9, eq  // eq = none
  42be5c:	eor	w9, w9, #0x1
  42be60:	tbnz	w9, #0, 42be74 <ascii_strlower_n@plt+0x27a14>
  42be64:	b	42be68 <ascii_strlower_n@plt+0x27a08>
  42be68:	mov	w8, #0x1                   	// #1
  42be6c:	strb	w8, [sp, #13]
  42be70:	b	42be74 <ascii_strlower_n@plt+0x27a14>
  42be74:	ldrb	w8, [sp, #13]
  42be78:	mov	w9, #0x1                   	// #1
  42be7c:	and	w8, w8, w9
  42be80:	strb	w8, [sp, #12]
  42be84:	ldrb	w8, [sp, #12]
  42be88:	and	w0, w8, #0x1
  42be8c:	add	sp, sp, #0x10
  42be90:	ret
  42be94:	sub	sp, sp, #0x10
  42be98:	mov	w8, #0x0                   	// #0
  42be9c:	strh	w0, [sp, #14]
  42bea0:	strb	w8, [sp, #13]
  42bea4:	ldrh	w8, [sp, #14]
  42bea8:	cmp	w8, #0x2b
  42beac:	str	w8, [sp, #8]
  42beb0:	b.eq	42beec <ascii_strlower_n@plt+0x27a8c>  // b.none
  42beb4:	b	42beb8 <ascii_strlower_n@plt+0x27a58>
  42beb8:	ldr	w8, [sp, #8]
  42bebc:	subs	w9, w8, #0x2e
  42bec0:	cmp	w9, #0x2
  42bec4:	b.ls	42beec <ascii_strlower_n@plt+0x27a8c>  // b.plast
  42bec8:	b	42becc <ascii_strlower_n@plt+0x27a6c>
  42becc:	ldr	w8, [sp, #8]
  42bed0:	subs	w9, w8, #0x32
  42bed4:	mov	w10, #0x1                   	// #1
  42bed8:	cmp	w9, #0x1
  42bedc:	cset	w9, ls  // ls = plast
  42bee0:	eor	w9, w9, w10
  42bee4:	tbnz	w9, #0, 42bef8 <ascii_strlower_n@plt+0x27a98>
  42bee8:	b	42beec <ascii_strlower_n@plt+0x27a8c>
  42beec:	mov	w8, #0x1                   	// #1
  42bef0:	strb	w8, [sp, #13]
  42bef4:	b	42bef8 <ascii_strlower_n@plt+0x27a98>
  42bef8:	ldrb	w8, [sp, #13]
  42befc:	mov	w9, #0x1                   	// #1
  42bf00:	and	w8, w8, w9
  42bf04:	strb	w8, [sp, #12]
  42bf08:	ldrb	w8, [sp, #12]
  42bf0c:	and	w0, w8, #0x1
  42bf10:	add	sp, sp, #0x10
  42bf14:	ret
  42bf18:	sub	sp, sp, #0x10
  42bf1c:	mov	w8, #0x0                   	// #0
  42bf20:	strh	w0, [sp, #14]
  42bf24:	strb	w8, [sp, #13]
  42bf28:	ldrh	w8, [sp, #14]
  42bf2c:	subs	w9, w8, #0x3
  42bf30:	cmp	w9, #0x1
  42bf34:	str	w8, [sp, #8]
  42bf38:	b.ls	42bfa4 <ascii_strlower_n@plt+0x27b44>  // b.plast
  42bf3c:	b	42bf40 <ascii_strlower_n@plt+0x27ae0>
  42bf40:	ldr	w8, [sp, #8]
  42bf44:	subs	w9, w8, #0x7
  42bf48:	cmp	w9, #0x4
  42bf4c:	b.ls	42bfa4 <ascii_strlower_n@plt+0x27b44>  // b.plast
  42bf50:	b	42bf54 <ascii_strlower_n@plt+0x27af4>
  42bf54:	ldr	w8, [sp, #8]
  42bf58:	cmp	w8, #0xe
  42bf5c:	b.eq	42bfa4 <ascii_strlower_n@plt+0x27b44>  // b.none
  42bf60:	b	42bf64 <ascii_strlower_n@plt+0x27b04>
  42bf64:	ldr	w8, [sp, #8]
  42bf68:	cmp	w8, #0x1e
  42bf6c:	b.eq	42bfa4 <ascii_strlower_n@plt+0x27b44>  // b.none
  42bf70:	b	42bf74 <ascii_strlower_n@plt+0x27b14>
  42bf74:	ldr	w8, [sp, #8]
  42bf78:	cmp	w8, #0x26
  42bf7c:	b.eq	42bfa4 <ascii_strlower_n@plt+0x27b44>  // b.none
  42bf80:	b	42bf84 <ascii_strlower_n@plt+0x27b24>
  42bf84:	ldr	w8, [sp, #8]
  42bf88:	subs	w9, w8, #0xfd
  42bf8c:	mov	w10, #0x1                   	// #1
  42bf90:	cmp	w9, #0x1
  42bf94:	cset	w9, ls  // ls = plast
  42bf98:	eor	w9, w9, w10
  42bf9c:	tbnz	w9, #0, 42bfb0 <ascii_strlower_n@plt+0x27b50>
  42bfa0:	b	42bfa4 <ascii_strlower_n@plt+0x27b44>
  42bfa4:	mov	w8, #0x1                   	// #1
  42bfa8:	strb	w8, [sp, #13]
  42bfac:	b	42bfb0 <ascii_strlower_n@plt+0x27b50>
  42bfb0:	ldrb	w8, [sp, #13]
  42bfb4:	mov	w9, #0x1                   	// #1
  42bfb8:	and	w8, w8, w9
  42bfbc:	strb	w8, [sp, #12]
  42bfc0:	ldrb	w8, [sp, #12]
  42bfc4:	and	w0, w8, #0x1
  42bfc8:	add	sp, sp, #0x10
  42bfcc:	ret
  42bfd0:	sub	sp, sp, #0x10
  42bfd4:	mov	w8, #0x0                   	// #0
  42bfd8:	strh	w0, [sp, #14]
  42bfdc:	strb	w8, [sp, #13]
  42bfe0:	ldrh	w8, [sp, #14]
  42bfe4:	cmp	w8, #0x25
  42bfe8:	str	w8, [sp, #8]
  42bfec:	b.eq	42c054 <ascii_strlower_n@plt+0x27bf4>  // b.none
  42bff0:	b	42bff4 <ascii_strlower_n@plt+0x27b94>
  42bff4:	ldr	w8, [sp, #8]
  42bff8:	subs	w9, w8, #0x2b
  42bffc:	cmp	w9, #0x2
  42c000:	b.ls	42c054 <ascii_strlower_n@plt+0x27bf4>  // b.plast
  42c004:	b	42c008 <ascii_strlower_n@plt+0x27ba8>
  42c008:	ldr	w8, [sp, #8]
  42c00c:	cmp	w8, #0x30
  42c010:	b.eq	42c054 <ascii_strlower_n@plt+0x27bf4>  // b.none
  42c014:	b	42c018 <ascii_strlower_n@plt+0x27bb8>
  42c018:	ldr	w8, [sp, #8]
  42c01c:	cmp	w8, #0x34
  42c020:	b.eq	42c054 <ascii_strlower_n@plt+0x27bf4>  // b.none
  42c024:	b	42c028 <ascii_strlower_n@plt+0x27bc8>
  42c028:	ldr	w8, [sp, #8]
  42c02c:	subs	w9, w8, #0x3c
  42c030:	cmp	w9, #0x1
  42c034:	b.ls	42c054 <ascii_strlower_n@plt+0x27bf4>  // b.plast
  42c038:	b	42c03c <ascii_strlower_n@plt+0x27bdc>
  42c03c:	ldr	w8, [sp, #8]
  42c040:	cmp	w8, #0x101
  42c044:	cset	w9, eq  // eq = none
  42c048:	eor	w9, w9, #0x1
  42c04c:	tbnz	w9, #0, 42c060 <ascii_strlower_n@plt+0x27c00>
  42c050:	b	42c054 <ascii_strlower_n@plt+0x27bf4>
  42c054:	mov	w8, #0x1                   	// #1
  42c058:	strb	w8, [sp, #13]
  42c05c:	b	42c060 <ascii_strlower_n@plt+0x27c00>
  42c060:	ldrb	w8, [sp, #13]
  42c064:	mov	w9, #0x1                   	// #1
  42c068:	and	w8, w8, w9
  42c06c:	strb	w8, [sp, #12]
  42c070:	ldrb	w8, [sp, #12]
  42c074:	and	w0, w8, #0x1
  42c078:	add	sp, sp, #0x10
  42c07c:	ret
  42c080:	sub	sp, sp, #0x10
  42c084:	strh	w0, [sp, #10]
  42c088:	ldrh	w8, [sp, #10]
  42c08c:	cmp	w8, #0x1
  42c090:	str	w8, [sp, #4]
  42c094:	b.eq	42c0bc <ascii_strlower_n@plt+0x27c5c>  // b.none
  42c098:	b	42c09c <ascii_strlower_n@plt+0x27c3c>
  42c09c:	ldr	w8, [sp, #4]
  42c0a0:	cmp	w8, #0x1c
  42c0a4:	b.eq	42c0c8 <ascii_strlower_n@plt+0x27c68>  // b.none
  42c0a8:	b	42c0ac <ascii_strlower_n@plt+0x27c4c>
  42c0ac:	ldr	w8, [sp, #4]
  42c0b0:	cmp	w8, #0xff
  42c0b4:	b.eq	42c0d4 <ascii_strlower_n@plt+0x27c74>  // b.none
  42c0b8:	b	42c0dc <ascii_strlower_n@plt+0x27c7c>
  42c0bc:	mov	w8, #0x2                   	// #2
  42c0c0:	str	w8, [sp, #12]
  42c0c4:	b	42c0e4 <ascii_strlower_n@plt+0x27c84>
  42c0c8:	mov	w8, #0xa                   	// #10
  42c0cc:	str	w8, [sp, #12]
  42c0d0:	b	42c0e4 <ascii_strlower_n@plt+0x27c84>
  42c0d4:	str	wzr, [sp, #12]
  42c0d8:	b	42c0e4 <ascii_strlower_n@plt+0x27c84>
  42c0dc:	mov	w8, #0xffffffea            	// #-22
  42c0e0:	str	w8, [sp, #12]
  42c0e4:	ldr	w0, [sp, #12]
  42c0e8:	add	sp, sp, #0x10
  42c0ec:	ret
  42c0f0:	sub	sp, sp, #0x10
  42c0f4:	strh	w0, [sp, #6]
  42c0f8:	ldrh	w8, [sp, #6]
  42c0fc:	cmp	w8, #0x1
  42c100:	str	w8, [sp]
  42c104:	b.eq	42c11c <ascii_strlower_n@plt+0x27cbc>  // b.none
  42c108:	b	42c10c <ascii_strlower_n@plt+0x27cac>
  42c10c:	ldr	w8, [sp]
  42c110:	cmp	w8, #0xff
  42c114:	b.eq	42c12c <ascii_strlower_n@plt+0x27ccc>  // b.none
  42c118:	b	42c13c <ascii_strlower_n@plt+0x27cdc>
  42c11c:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c120:	add	x8, x8, #0x33e
  42c124:	str	x8, [sp, #8]
  42c128:	b	42c144 <ascii_strlower_n@plt+0x27ce4>
  42c12c:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c130:	add	x8, x8, #0x2ea
  42c134:	str	x8, [sp, #8]
  42c138:	b	42c144 <ascii_strlower_n@plt+0x27ce4>
  42c13c:	mov	x8, xzr
  42c140:	str	x8, [sp, #8]
  42c144:	ldr	x0, [sp, #8]
  42c148:	add	sp, sp, #0x10
  42c14c:	ret
  42c150:	sub	sp, sp, #0x20
  42c154:	stp	x29, x30, [sp, #16]
  42c158:	add	x29, sp, #0x10
  42c15c:	str	x0, [sp]
  42c160:	ldr	x8, [sp]
  42c164:	cbnz	x8, 42c174 <ascii_strlower_n@plt+0x27d14>
  42c168:	mov	w8, #0xffffffff            	// #-1
  42c16c:	stur	w8, [x29, #-4]
  42c170:	b	42c1bc <ascii_strlower_n@plt+0x27d5c>
  42c174:	ldr	x0, [sp]
  42c178:	adrp	x1, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c17c:	add	x1, x1, #0x33e
  42c180:	bl	404310 <strcasecmp@plt>
  42c184:	cbnz	w0, 42c194 <ascii_strlower_n@plt+0x27d34>
  42c188:	mov	w8, #0x1                   	// #1
  42c18c:	stur	w8, [x29, #-4]
  42c190:	b	42c1bc <ascii_strlower_n@plt+0x27d5c>
  42c194:	ldr	x0, [sp]
  42c198:	adrp	x1, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c19c:	add	x1, x1, #0x2ea
  42c1a0:	bl	404310 <strcasecmp@plt>
  42c1a4:	cbnz	w0, 42c1b4 <ascii_strlower_n@plt+0x27d54>
  42c1a8:	mov	w8, #0xff                  	// #255
  42c1ac:	stur	w8, [x29, #-4]
  42c1b0:	b	42c1bc <ascii_strlower_n@plt+0x27d5c>
  42c1b4:	mov	w8, #0xffffffff            	// #-1
  42c1b8:	stur	w8, [x29, #-4]
  42c1bc:	ldur	w0, [x29, #-4]
  42c1c0:	ldp	x29, x30, [sp, #16]
  42c1c4:	add	sp, sp, #0x20
  42c1c8:	ret
  42c1cc:	sub	sp, sp, #0x10
  42c1d0:	strb	w0, [sp, #7]
  42c1d4:	ldrb	w8, [sp, #7]
  42c1d8:	str	w8, [sp]
  42c1dc:	cbz	w8, 42c224 <ascii_strlower_n@plt+0x27dc4>
  42c1e0:	b	42c1e4 <ascii_strlower_n@plt+0x27d84>
  42c1e4:	ldr	w8, [sp]
  42c1e8:	cmp	w8, #0x1
  42c1ec:	b.eq	42c234 <ascii_strlower_n@plt+0x27dd4>  // b.none
  42c1f0:	b	42c1f4 <ascii_strlower_n@plt+0x27d94>
  42c1f4:	ldr	w8, [sp]
  42c1f8:	cmp	w8, #0x2
  42c1fc:	b.eq	42c244 <ascii_strlower_n@plt+0x27de4>  // b.none
  42c200:	b	42c204 <ascii_strlower_n@plt+0x27da4>
  42c204:	ldr	w8, [sp]
  42c208:	cmp	w8, #0x3
  42c20c:	b.eq	42c254 <ascii_strlower_n@plt+0x27df4>  // b.none
  42c210:	b	42c214 <ascii_strlower_n@plt+0x27db4>
  42c214:	ldr	w8, [sp]
  42c218:	cmp	w8, #0xff
  42c21c:	b.eq	42c288 <ascii_strlower_n@plt+0x27e28>  // b.none
  42c220:	b	42c274 <ascii_strlower_n@plt+0x27e14>
  42c224:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c228:	add	x8, x8, #0x341
  42c22c:	str	x8, [sp, #8]
  42c230:	b	42c2a0 <ascii_strlower_n@plt+0x27e40>
  42c234:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c238:	add	x8, x8, #0x34f
  42c23c:	str	x8, [sp, #8]
  42c240:	b	42c2a0 <ascii_strlower_n@plt+0x27e40>
  42c244:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c248:	add	x8, x8, #0x36e
  42c24c:	str	x8, [sp, #8]
  42c250:	b	42c2a0 <ascii_strlower_n@plt+0x27e40>
  42c254:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c258:	add	x8, x8, #0x385
  42c25c:	str	x8, [sp, #8]
  42c260:	b	42c2a0 <ascii_strlower_n@plt+0x27e40>
  42c264:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c268:	add	x8, x8, #0x39f
  42c26c:	str	x8, [sp, #8]
  42c270:	b	42c2a0 <ascii_strlower_n@plt+0x27e40>
  42c274:	ldr	w8, [sp]
  42c278:	subs	w9, w8, #0x4
  42c27c:	cmp	w9, #0xfa
  42c280:	b.ls	42c264 <ascii_strlower_n@plt+0x27e04>  // b.plast
  42c284:	b	42c298 <ascii_strlower_n@plt+0x27e38>
  42c288:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c28c:	add	x8, x8, #0x3aa
  42c290:	str	x8, [sp, #8]
  42c294:	b	42c2a0 <ascii_strlower_n@plt+0x27e40>
  42c298:	mov	x8, xzr
  42c29c:	str	x8, [sp, #8]
  42c2a0:	ldr	x0, [sp, #8]
  42c2a4:	add	sp, sp, #0x10
  42c2a8:	ret
  42c2ac:	sub	sp, sp, #0x10
  42c2b0:	strb	w0, [sp, #7]
  42c2b4:	ldrb	w8, [sp, #7]
  42c2b8:	str	w8, [sp]
  42c2bc:	cbz	w8, 42c2e4 <ascii_strlower_n@plt+0x27e84>
  42c2c0:	b	42c2c4 <ascii_strlower_n@plt+0x27e64>
  42c2c4:	ldr	w8, [sp]
  42c2c8:	cmp	w8, #0x1
  42c2cc:	b.eq	42c2f4 <ascii_strlower_n@plt+0x27e94>  // b.none
  42c2d0:	b	42c2d4 <ascii_strlower_n@plt+0x27e74>
  42c2d4:	ldr	w8, [sp]
  42c2d8:	cmp	w8, #0xff
  42c2dc:	b.eq	42c328 <ascii_strlower_n@plt+0x27ec8>  // b.none
  42c2e0:	b	42c314 <ascii_strlower_n@plt+0x27eb4>
  42c2e4:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c2e8:	add	x8, x8, #0x3b6
  42c2ec:	str	x8, [sp, #8]
  42c2f0:	b	42c340 <ascii_strlower_n@plt+0x27ee0>
  42c2f4:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c2f8:	add	x8, x8, #0x3c7
  42c2fc:	str	x8, [sp, #8]
  42c300:	b	42c340 <ascii_strlower_n@plt+0x27ee0>
  42c304:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c308:	add	x8, x8, #0x39f
  42c30c:	str	x8, [sp, #8]
  42c310:	b	42c340 <ascii_strlower_n@plt+0x27ee0>
  42c314:	ldr	w8, [sp]
  42c318:	subs	w9, w8, #0x2
  42c31c:	cmp	w9, #0xfc
  42c320:	b.ls	42c304 <ascii_strlower_n@plt+0x27ea4>  // b.plast
  42c324:	b	42c338 <ascii_strlower_n@plt+0x27ed8>
  42c328:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c32c:	add	x8, x8, #0x3aa
  42c330:	str	x8, [sp, #8]
  42c334:	b	42c340 <ascii_strlower_n@plt+0x27ee0>
  42c338:	mov	x8, xzr
  42c33c:	str	x8, [sp, #8]
  42c340:	ldr	x0, [sp, #8]
  42c344:	add	sp, sp, #0x10
  42c348:	ret
  42c34c:	sub	sp, sp, #0x10
  42c350:	strb	w0, [sp, #7]
  42c354:	ldrb	w8, [sp, #7]
  42c358:	str	w8, [sp]
  42c35c:	cbz	w8, 42c394 <ascii_strlower_n@plt+0x27f34>
  42c360:	b	42c364 <ascii_strlower_n@plt+0x27f04>
  42c364:	ldr	w8, [sp]
  42c368:	cmp	w8, #0x1
  42c36c:	b.eq	42c3a4 <ascii_strlower_n@plt+0x27f44>  // b.none
  42c370:	b	42c374 <ascii_strlower_n@plt+0x27f14>
  42c374:	ldr	w8, [sp]
  42c378:	cmp	w8, #0x2
  42c37c:	b.eq	42c3b4 <ascii_strlower_n@plt+0x27f54>  // b.none
  42c380:	b	42c384 <ascii_strlower_n@plt+0x27f24>
  42c384:	ldr	w8, [sp]
  42c388:	cmp	w8, #0xff
  42c38c:	b.eq	42c3e8 <ascii_strlower_n@plt+0x27f88>  // b.none
  42c390:	b	42c3d4 <ascii_strlower_n@plt+0x27f74>
  42c394:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c398:	add	x8, x8, #0x3dc
  42c39c:	str	x8, [sp, #8]
  42c3a0:	b	42c400 <ascii_strlower_n@plt+0x27fa0>
  42c3a4:	adrp	x8, 432000 <ascii_strlower_n@plt+0x2dba0>
  42c3a8:	add	x8, x8, #0x7a4
  42c3ac:	str	x8, [sp, #8]
  42c3b0:	b	42c400 <ascii_strlower_n@plt+0x27fa0>
  42c3b4:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c3b8:	add	x8, x8, #0x3e9
  42c3bc:	str	x8, [sp, #8]
  42c3c0:	b	42c400 <ascii_strlower_n@plt+0x27fa0>
  42c3c4:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c3c8:	add	x8, x8, #0x39f
  42c3cc:	str	x8, [sp, #8]
  42c3d0:	b	42c400 <ascii_strlower_n@plt+0x27fa0>
  42c3d4:	ldr	w8, [sp]
  42c3d8:	subs	w9, w8, #0x3
  42c3dc:	cmp	w9, #0xfb
  42c3e0:	b.ls	42c3c4 <ascii_strlower_n@plt+0x27f64>  // b.plast
  42c3e4:	b	42c3f8 <ascii_strlower_n@plt+0x27f98>
  42c3e8:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c3ec:	add	x8, x8, #0x3aa
  42c3f0:	str	x8, [sp, #8]
  42c3f4:	b	42c400 <ascii_strlower_n@plt+0x27fa0>
  42c3f8:	mov	x8, xzr
  42c3fc:	str	x8, [sp, #8]
  42c400:	ldr	x0, [sp, #8]
  42c404:	add	sp, sp, #0x10
  42c408:	ret
  42c40c:	sub	sp, sp, #0x20
  42c410:	adrp	x8, 434000 <ascii_strlower_n@plt+0x2fba0>
  42c414:	add	x8, x8, #0xbb0
  42c418:	str	x0, [sp, #24]
  42c41c:	str	x1, [sp, #16]
  42c420:	ldr	x9, [sp, #16]
  42c424:	str	w9, [sp, #12]
  42c428:	ldr	w9, [sp, #12]
  42c42c:	cmp	w9, #0x1
  42c430:	str	x8, [sp]
  42c434:	b.eq	42c45c <ascii_strlower_n@plt+0x27ffc>  // b.none
  42c438:	b	42c43c <ascii_strlower_n@plt+0x27fdc>
  42c43c:	ldr	x8, [sp, #24]
  42c440:	ldrb	w9, [x8, #1]
  42c444:	mov	w8, w9
  42c448:	ldr	x10, [sp]
  42c44c:	ldrb	w9, [x10, x8]
  42c450:	ldr	w11, [sp, #12]
  42c454:	add	w9, w11, w9
  42c458:	str	w9, [sp, #12]
  42c45c:	ldr	x8, [sp, #24]
  42c460:	ldrb	w9, [x8]
  42c464:	mov	w8, w9
  42c468:	ldr	x10, [sp]
  42c46c:	ldrb	w9, [x10, x8]
  42c470:	ldr	w11, [sp, #12]
  42c474:	add	w9, w11, w9
  42c478:	str	w9, [sp, #12]
  42c47c:	ldr	w8, [sp, #12]
  42c480:	ldr	x9, [sp, #24]
  42c484:	ldr	x10, [sp, #16]
  42c488:	subs	x10, x10, #0x1
  42c48c:	ldrb	w11, [x9, x10]
  42c490:	mov	w9, w11
  42c494:	ldr	x10, [sp]
  42c498:	ldrb	w11, [x10, x9]
  42c49c:	add	w0, w8, w11
  42c4a0:	add	sp, sp, #0x20
  42c4a4:	ret
  42c4a8:	sub	sp, sp, #0x20
  42c4ac:	str	x0, [sp, #24]
  42c4b0:	str	x1, [sp, #16]
  42c4b4:	ldr	x8, [sp, #24]
  42c4b8:	add	x9, x8, #0x1
  42c4bc:	str	x9, [sp, #24]
  42c4c0:	ldrb	w10, [x8]
  42c4c4:	mov	w8, w10
  42c4c8:	adrp	x9, 450000 <ascii_strlower_n@plt+0x4bba0>
  42c4cc:	add	x9, x9, #0x40
  42c4d0:	add	x8, x9, x8
  42c4d4:	ldrb	w10, [x8]
  42c4d8:	strb	w10, [sp, #15]
  42c4dc:	ldr	x8, [sp, #16]
  42c4e0:	add	x11, x8, #0x1
  42c4e4:	str	x11, [sp, #16]
  42c4e8:	ldrb	w10, [x8]
  42c4ec:	mov	w8, w10
  42c4f0:	add	x8, x9, x8
  42c4f4:	ldrb	w10, [x8]
  42c4f8:	strb	w10, [sp, #14]
  42c4fc:	ldrb	w10, [sp, #15]
  42c500:	cbz	w10, 42c518 <ascii_strlower_n@plt+0x280b8>
  42c504:	ldrb	w8, [sp, #15]
  42c508:	ldrb	w9, [sp, #14]
  42c50c:	cmp	w8, w9
  42c510:	b.ne	42c518 <ascii_strlower_n@plt+0x280b8>  // b.any
  42c514:	b	42c4b4 <ascii_strlower_n@plt+0x28054>
  42c518:	ldrb	w8, [sp, #15]
  42c51c:	ldrb	w9, [sp, #14]
  42c520:	subs	w0, w8, w9
  42c524:	add	sp, sp, #0x20
  42c528:	ret
  42c52c:	sub	sp, sp, #0x50
  42c530:	stp	x29, x30, [sp, #64]
  42c534:	add	x29, sp, #0x40
  42c538:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c53c:	add	x8, x8, #0x3f8
  42c540:	add	x8, x8, #0x3
  42c544:	stur	x0, [x29, #-8]
  42c548:	and	w9, w1, #0x1
  42c54c:	sturb	w9, [x29, #-9]
  42c550:	str	x8, [sp, #16]
  42c554:	ldur	x8, [x29, #-8]
  42c558:	cmp	x8, #0x0
  42c55c:	cset	w9, ne  // ne = any
  42c560:	mov	w10, #0x1                   	// #1
  42c564:	eor	w9, w9, #0x1
  42c568:	eor	w9, w9, w10
  42c56c:	eor	w9, w9, w10
  42c570:	and	w9, w9, #0x1
  42c574:	mov	w0, w9
  42c578:	sxtw	x8, w0
  42c57c:	cbz	x8, 42c5a4 <ascii_strlower_n@plt+0x28144>
  42c580:	mov	w8, wzr
  42c584:	mov	w0, w8
  42c588:	adrp	x1, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c58c:	add	x1, x1, #0x3f1
  42c590:	ldr	x2, [sp, #16]
  42c594:	mov	w3, #0x2a                  	// #42
  42c598:	adrp	x4, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c59c:	add	x4, x4, #0x41d
  42c5a0:	bl	4039d0 <log_assert_failed_realm@plt>
  42c5a4:	ldur	x8, [x29, #-8]
  42c5a8:	ldr	x8, [x8, #8]
  42c5ac:	ldrh	w9, [x8, #6]
  42c5b0:	cmp	w9, #0x30
  42c5b4:	cset	w9, eq  // eq = none
  42c5b8:	mov	w10, #0x1                   	// #1
  42c5bc:	eor	w9, w9, #0x1
  42c5c0:	eor	w9, w9, w10
  42c5c4:	eor	w9, w9, w10
  42c5c8:	and	w9, w9, #0x1
  42c5cc:	mov	w0, w9
  42c5d0:	sxtw	x8, w0
  42c5d4:	cbz	x8, 42c5fc <ascii_strlower_n@plt+0x2819c>
  42c5d8:	mov	w8, wzr
  42c5dc:	mov	w0, w8
  42c5e0:	adrp	x1, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c5e4:	add	x1, x1, #0x450
  42c5e8:	ldr	x2, [sp, #16]
  42c5ec:	mov	w3, #0x2b                  	// #43
  42c5f0:	adrp	x4, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c5f4:	add	x4, x4, #0x41d
  42c5f8:	bl	4039d0 <log_assert_failed_realm@plt>
  42c5fc:	ldur	x8, [x29, #-8]
  42c600:	ldrh	w9, [x8, #80]
  42c604:	str	w9, [sp, #32]
  42c608:	ldurb	w9, [x29, #-9]
  42c60c:	tbnz	w9, #0, 42c614 <ascii_strlower_n@plt+0x281b4>
  42c610:	b	42c620 <ascii_strlower_n@plt+0x281c0>
  42c614:	ldr	w8, [sp, #32]
  42c618:	and	w8, w8, #0xffffff7f
  42c61c:	str	w8, [sp, #32]
  42c620:	ldr	w8, [sp, #32]
  42c624:	ldur	x9, [x29, #-8]
  42c628:	ldrb	w10, [x9, #82]
  42c62c:	ldur	x9, [x29, #-8]
  42c630:	ldrb	w11, [x9, #83]
  42c634:	add	w10, w11, w10, lsl #8
  42c638:	add	w8, w8, w10
  42c63c:	stur	w8, [x29, #-28]
  42c640:	ldur	x9, [x29, #-8]
  42c644:	ldr	x9, [x9, #88]
  42c648:	stur	x9, [x29, #-24]
  42c64c:	str	xzr, [sp, #24]
  42c650:	ldr	x8, [sp, #24]
  42c654:	ldur	x9, [x29, #-8]
  42c658:	ldr	x9, [x9, #96]
  42c65c:	cmp	x8, x9
  42c660:	b.cs	42c6b8 <ascii_strlower_n@plt+0x28258>  // b.hs, b.nlast
  42c664:	ldr	x8, [sp, #24]
  42c668:	and	x8, x8, #0x1
  42c66c:	cbnz	x8, 42c688 <ascii_strlower_n@plt+0x28228>
  42c670:	ldur	x8, [x29, #-24]
  42c674:	ldr	x9, [sp, #24]
  42c678:	ldrb	w10, [x8, x9]
  42c67c:	lsl	w10, w10, #8
  42c680:	str	w10, [sp, #12]
  42c684:	b	42c698 <ascii_strlower_n@plt+0x28238>
  42c688:	ldur	x8, [x29, #-24]
  42c68c:	ldr	x9, [sp, #24]
  42c690:	ldrb	w10, [x8, x9]
  42c694:	str	w10, [sp, #12]
  42c698:	ldr	w8, [sp, #12]
  42c69c:	ldur	w9, [x29, #-28]
  42c6a0:	add	w8, w9, w8
  42c6a4:	stur	w8, [x29, #-28]
  42c6a8:	ldr	x8, [sp, #24]
  42c6ac:	add	x8, x8, #0x1
  42c6b0:	str	x8, [sp, #24]
  42c6b4:	b	42c650 <ascii_strlower_n@plt+0x281f0>
  42c6b8:	ldur	w8, [x29, #-28]
  42c6bc:	lsr	w8, w8, #16
  42c6c0:	ldur	w9, [x29, #-28]
  42c6c4:	add	w8, w9, w8, uxth
  42c6c8:	stur	w8, [x29, #-28]
  42c6cc:	ldur	w8, [x29, #-28]
  42c6d0:	and	w8, w8, #0xffff
  42c6d4:	mov	w0, w8
  42c6d8:	ldp	x29, x30, [sp, #64]
  42c6dc:	add	sp, sp, #0x50
  42c6e0:	ret
  42c6e4:	sub	sp, sp, #0x50
  42c6e8:	stp	x29, x30, [sp, #64]
  42c6ec:	add	x29, sp, #0x40
  42c6f0:	adrp	x8, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c6f4:	add	x8, x8, #0x3f8
  42c6f8:	add	x8, x8, #0x3
  42c6fc:	stur	x0, [x29, #-16]
  42c700:	stur	x1, [x29, #-24]
  42c704:	str	x2, [sp, #32]
  42c708:	str	xzr, [sp, #24]
  42c70c:	ldr	x9, [sp, #32]
  42c710:	cmp	x9, #0x2
  42c714:	str	x8, [sp, #8]
  42c718:	b.cs	42c728 <ascii_strlower_n@plt+0x282c8>  // b.hs, b.nlast
  42c71c:	mov	w8, #0xffffff97            	// #-105
  42c720:	stur	w8, [x29, #-4]
  42c724:	b	42c8a0 <ascii_strlower_n@plt+0x28440>
  42c728:	ldur	x1, [x29, #-24]
  42c72c:	ldr	x2, [sp, #32]
  42c730:	sub	x0, x29, #0x10
  42c734:	mov	w8, wzr
  42c738:	mov	w3, w8
  42c73c:	bl	404140 <dns_label_unescape@plt>
  42c740:	str	w0, [sp, #20]
  42c744:	ldr	w8, [sp, #20]
  42c748:	cmp	w8, #0x0
  42c74c:	cset	w8, ge  // ge = tcont
  42c750:	tbnz	w8, #0, 42c760 <ascii_strlower_n@plt+0x28300>
  42c754:	ldr	w8, [sp, #20]
  42c758:	stur	w8, [x29, #-4]
  42c75c:	b	42c8a0 <ascii_strlower_n@plt+0x28440>
  42c760:	ldr	w8, [sp, #20]
  42c764:	cbnz	w8, 42c76c <ascii_strlower_n@plt+0x2830c>
  42c768:	b	42c814 <ascii_strlower_n@plt+0x283b4>
  42c76c:	ldr	x8, [sp, #32]
  42c770:	ldrsw	x9, [sp, #20]
  42c774:	add	x9, x9, #0x2
  42c778:	cmp	x8, x9
  42c77c:	b.cs	42c78c <ascii_strlower_n@plt+0x2832c>  // b.hs, b.nlast
  42c780:	mov	w8, #0xffffff97            	// #-105
  42c784:	stur	w8, [x29, #-4]
  42c788:	b	42c8a0 <ascii_strlower_n@plt+0x28440>
  42c78c:	ldur	x0, [x29, #-24]
  42c790:	ldrsw	x2, [sp, #20]
  42c794:	mov	w1, #0x2e                  	// #46
  42c798:	bl	404190 <memchr@plt>
  42c79c:	cbz	x0, 42c7ac <ascii_strlower_n@plt+0x2834c>
  42c7a0:	mov	w8, #0xffffffea            	// #-22
  42c7a4:	stur	w8, [x29, #-4]
  42c7a8:	b	42c8a0 <ascii_strlower_n@plt+0x28440>
  42c7ac:	ldur	x0, [x29, #-24]
  42c7b0:	ldrsw	x1, [sp, #20]
  42c7b4:	bl	404460 <ascii_strlower_n@plt>
  42c7b8:	ldur	x8, [x29, #-24]
  42c7bc:	ldrsw	x9, [sp, #20]
  42c7c0:	add	x8, x8, x9
  42c7c4:	mov	w10, #0x2e                  	// #46
  42c7c8:	strb	w10, [x8]
  42c7cc:	ldr	w10, [sp, #20]
  42c7d0:	add	w10, w10, #0x1
  42c7d4:	ldur	x8, [x29, #-24]
  42c7d8:	mov	w1, w10
  42c7dc:	sxtw	x9, w1
  42c7e0:	add	x8, x8, x9
  42c7e4:	stur	x8, [x29, #-24]
  42c7e8:	ldr	w10, [sp, #20]
  42c7ec:	add	w10, w10, #0x1
  42c7f0:	ldr	x8, [sp, #24]
  42c7f4:	add	x8, x8, w10, sxtw
  42c7f8:	str	x8, [sp, #24]
  42c7fc:	ldr	w10, [sp, #20]
  42c800:	add	w10, w10, #0x1
  42c804:	ldr	x8, [sp, #32]
  42c808:	subs	x8, x8, w10, sxtw
  42c80c:	str	x8, [sp, #32]
  42c810:	b	42c728 <ascii_strlower_n@plt+0x282c8>
  42c814:	ldr	x8, [sp, #24]
  42c818:	cmp	x8, #0x0
  42c81c:	cset	w9, hi  // hi = pmore
  42c820:	tbnz	w9, #0, 42c898 <ascii_strlower_n@plt+0x28438>
  42c824:	ldr	x8, [sp, #32]
  42c828:	cmp	x8, #0x2
  42c82c:	cset	w9, hi  // hi = pmore
  42c830:	mov	w10, #0x1                   	// #1
  42c834:	eor	w9, w9, #0x1
  42c838:	eor	w9, w9, w10
  42c83c:	eor	w9, w9, w10
  42c840:	and	w9, w9, #0x1
  42c844:	mov	w0, w9
  42c848:	sxtw	x8, w0
  42c84c:	cbz	x8, 42c874 <ascii_strlower_n@plt+0x28414>
  42c850:	mov	w8, wzr
  42c854:	mov	w0, w8
  42c858:	adrp	x1, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c85c:	add	x1, x1, #0x475
  42c860:	ldr	x2, [sp, #8]
  42c864:	mov	w3, #0x65                  	// #101
  42c868:	adrp	x4, 433000 <ascii_strlower_n@plt+0x2eba0>
  42c86c:	add	x4, x4, #0x484
  42c870:	bl	4039d0 <log_assert_failed_realm@plt>
  42c874:	ldur	x8, [x29, #-24]
  42c878:	mov	w9, #0x2e                  	// #46
  42c87c:	strb	w9, [x8]
  42c880:	ldur	x8, [x29, #-24]
  42c884:	mov	w9, #0x0                   	// #0
  42c888:	strb	w9, [x8, #1]
  42c88c:	mov	w9, #0x1                   	// #1
  42c890:	stur	w9, [x29, #-4]
  42c894:	b	42c8a0 <ascii_strlower_n@plt+0x28440>
  42c898:	ldr	x8, [sp, #24]
  42c89c:	stur	w8, [x29, #-4]
  42c8a0:	ldur	w0, [x29, #-4]
  42c8a4:	ldp	x29, x30, [sp, #64]
  42c8a8:	add	sp, sp, #0x50
  42c8ac:	ret
  42c8b0:	sub	sp, sp, #0x30
  42c8b4:	mov	w8, #0xffffffa1            	// #-95
  42c8b8:	str	x0, [sp, #40]
  42c8bc:	str	x1, [sp, #32]
  42c8c0:	str	x2, [sp, #24]
  42c8c4:	str	x3, [sp, #16]
  42c8c8:	str	x4, [sp, #8]
  42c8cc:	str	x5, [sp]
  42c8d0:	mov	w0, w8
  42c8d4:	add	sp, sp, #0x30
  42c8d8:	ret
  42c8dc:	sub	sp, sp, #0x20
  42c8e0:	mov	w8, #0xffffffa1            	// #-95
  42c8e4:	str	x0, [sp, #24]
  42c8e8:	str	x1, [sp, #16]
  42c8ec:	and	w9, w2, #0x1
  42c8f0:	strb	w9, [sp, #15]
  42c8f4:	mov	w0, w8
  42c8f8:	add	sp, sp, #0x20
  42c8fc:	ret
  42c900:	sub	sp, sp, #0x10
  42c904:	mov	w8, #0xffffffa1            	// #-95
  42c908:	str	x0, [sp, #8]
  42c90c:	str	x1, [sp]
  42c910:	mov	w0, w8
  42c914:	add	sp, sp, #0x10
  42c918:	ret
  42c91c:	sub	sp, sp, #0x30
  42c920:	mov	w8, #0xffffffa1            	// #-95
  42c924:	str	x0, [sp, #40]
  42c928:	str	x1, [sp, #32]
  42c92c:	str	x2, [sp, #24]
  42c930:	str	x3, [sp, #16]
  42c934:	str	x4, [sp, #8]
  42c938:	str	x5, [sp]
  42c93c:	mov	w0, w8
  42c940:	add	sp, sp, #0x30
  42c944:	ret
  42c948:	sub	sp, sp, #0x10
  42c94c:	mov	w8, #0xffffffa1            	// #-95
  42c950:	str	x0, [sp, #8]
  42c954:	str	x1, [sp]
  42c958:	mov	w0, w8
  42c95c:	add	sp, sp, #0x10
  42c960:	ret
  42c964:	sub	sp, sp, #0x20
  42c968:	mov	w8, #0xffffffa1            	// #-95
  42c96c:	str	x0, [sp, #24]
  42c970:	str	x1, [sp, #16]
  42c974:	and	w9, w2, #0x1
  42c978:	strb	w9, [sp, #15]
  42c97c:	mov	w0, w8
  42c980:	add	sp, sp, #0x20
  42c984:	ret
  42c988:	sub	sp, sp, #0x10
  42c98c:	mov	w8, #0xffffffa1            	// #-95
  42c990:	str	x0, [sp, #8]
  42c994:	str	x1, [sp]
  42c998:	mov	w0, w8
  42c99c:	add	sp, sp, #0x10
  42c9a0:	ret
  42c9a4:	sub	sp, sp, #0x20
  42c9a8:	mov	w8, #0xffffffa1            	// #-95
  42c9ac:	str	x0, [sp, #24]
  42c9b0:	str	x1, [sp, #16]
  42c9b4:	str	x2, [sp, #8]
  42c9b8:	mov	w0, w8
  42c9bc:	add	sp, sp, #0x20
  42c9c0:	ret
  42c9c4:	sub	sp, sp, #0x30
  42c9c8:	mov	w8, #0xffffffa1            	// #-95
  42c9cc:	str	x0, [sp, #40]
  42c9d0:	str	x1, [sp, #32]
  42c9d4:	str	x2, [sp, #24]
  42c9d8:	str	x3, [sp, #16]
  42c9dc:	str	x4, [sp, #8]
  42c9e0:	mov	w0, w8
  42c9e4:	add	sp, sp, #0x30
  42c9e8:	ret
  42c9ec:	sub	sp, sp, #0x30
  42c9f0:	mov	w8, #0xffffffa1            	// #-95
  42c9f4:	str	x0, [sp, #40]
  42c9f8:	str	x1, [sp, #32]
  42c9fc:	str	x2, [sp, #24]
  42ca00:	str	x3, [sp, #16]
  42ca04:	str	x4, [sp, #8]
  42ca08:	mov	w0, w8
  42ca0c:	add	sp, sp, #0x30
  42ca10:	ret
  42ca14:	sub	sp, sp, #0x10
  42ca18:	str	w0, [sp, #4]
  42ca1c:	ldr	w8, [sp, #4]
  42ca20:	cmp	w8, #0x0
  42ca24:	cset	w8, lt  // lt = tstop
  42ca28:	tbnz	w8, #0, 42ca38 <ascii_strlower_n@plt+0x285d8>
  42ca2c:	ldr	w8, [sp, #4]
  42ca30:	cmp	w8, #0xb
  42ca34:	b.lt	42ca44 <ascii_strlower_n@plt+0x285e4>  // b.tstop
  42ca38:	mov	x8, xzr
  42ca3c:	str	x8, [sp, #8]
  42ca40:	b	42ca64 <ascii_strlower_n@plt+0x28604>
  42ca44:	ldrsw	x8, [sp, #4]
  42ca48:	mov	x9, #0x8                   	// #8
  42ca4c:	mul	x8, x9, x8
  42ca50:	adrp	x9, 44f000 <ascii_strlower_n@plt+0x4aba0>
  42ca54:	add	x9, x9, #0x790
  42ca58:	add	x8, x9, x8
  42ca5c:	ldr	x8, [x8]
  42ca60:	str	x8, [sp, #8]
  42ca64:	ldr	x0, [sp, #8]
  42ca68:	add	sp, sp, #0x10
  42ca6c:	ret
  42ca70:	sub	sp, sp, #0x20
  42ca74:	stp	x29, x30, [sp, #16]
  42ca78:	add	x29, sp, #0x10
  42ca7c:	adrp	x8, 44f000 <ascii_strlower_n@plt+0x4aba0>
  42ca80:	add	x8, x8, #0x790
  42ca84:	mov	x1, #0xb                   	// #11
  42ca88:	str	x0, [sp, #8]
  42ca8c:	ldr	x2, [sp, #8]
  42ca90:	mov	x0, x8
  42ca94:	bl	404220 <string_table_lookup@plt>
  42ca98:	ldp	x29, x30, [sp, #16]
  42ca9c:	add	sp, sp, #0x20
  42caa0:	ret
  42caa4:	sub	sp, sp, #0x10
  42caa8:	str	w0, [sp, #4]
  42caac:	ldr	w8, [sp, #4]
  42cab0:	cmp	w8, #0x0
  42cab4:	cset	w8, lt  // lt = tstop
  42cab8:	tbnz	w8, #0, 42cac8 <ascii_strlower_n@plt+0x28668>
  42cabc:	ldr	w8, [sp, #4]
  42cac0:	cmp	w8, #0x4
  42cac4:	b.lt	42cad4 <ascii_strlower_n@plt+0x28674>  // b.tstop
  42cac8:	mov	x8, xzr
  42cacc:	str	x8, [sp, #8]
  42cad0:	b	42caf4 <ascii_strlower_n@plt+0x28694>
  42cad4:	ldrsw	x8, [sp, #4]
  42cad8:	mov	x9, #0x8                   	// #8
  42cadc:	mul	x8, x9, x8
  42cae0:	adrp	x9, 44f000 <ascii_strlower_n@plt+0x4aba0>
  42cae4:	add	x9, x9, #0x7e8
  42cae8:	add	x8, x9, x8
  42caec:	ldr	x8, [x8]
  42caf0:	str	x8, [sp, #8]
  42caf4:	ldr	x0, [sp, #8]
  42caf8:	add	sp, sp, #0x10
  42cafc:	ret
  42cb00:	sub	sp, sp, #0x20
  42cb04:	stp	x29, x30, [sp, #16]
  42cb08:	add	x29, sp, #0x10
  42cb0c:	adrp	x8, 44f000 <ascii_strlower_n@plt+0x4aba0>
  42cb10:	add	x8, x8, #0x7e8
  42cb14:	mov	x1, #0x4                   	// #4
  42cb18:	str	x0, [sp, #8]
  42cb1c:	ldr	x2, [sp, #8]
  42cb20:	mov	x0, x8
  42cb24:	bl	404220 <string_table_lookup@plt>
  42cb28:	ldp	x29, x30, [sp, #16]
  42cb2c:	add	sp, sp, #0x20
  42cb30:	ret
  42cb34:	udf	#0
  42cb38:	stp	x29, x30, [sp, #-64]!
  42cb3c:	mov	x29, sp
  42cb40:	stp	x19, x20, [sp, #16]
  42cb44:	adrp	x20, 44e000 <ascii_strlower_n@plt+0x49ba0>
  42cb48:	add	x20, x20, #0x318
  42cb4c:	stp	x21, x22, [sp, #32]
  42cb50:	adrp	x21, 44e000 <ascii_strlower_n@plt+0x49ba0>
  42cb54:	add	x21, x21, #0x310
  42cb58:	sub	x20, x20, x21
  42cb5c:	mov	w22, w0
  42cb60:	stp	x23, x24, [sp, #48]
  42cb64:	mov	x23, x1
  42cb68:	mov	x24, x2
  42cb6c:	bl	403968 <__libc_start_main@plt-0x38>
  42cb70:	cmp	xzr, x20, asr #3
  42cb74:	b.eq	42cba0 <ascii_strlower_n@plt+0x28740>  // b.none
  42cb78:	asr	x20, x20, #3
  42cb7c:	mov	x19, #0x0                   	// #0
  42cb80:	ldr	x3, [x21, x19, lsl #3]
  42cb84:	mov	x2, x24
  42cb88:	add	x19, x19, #0x1
  42cb8c:	mov	x1, x23
  42cb90:	mov	w0, w22
  42cb94:	blr	x3
  42cb98:	cmp	x20, x19
  42cb9c:	b.ne	42cb80 <ascii_strlower_n@plt+0x28720>  // b.any
  42cba0:	ldp	x19, x20, [sp, #16]
  42cba4:	ldp	x21, x22, [sp, #32]
  42cba8:	ldp	x23, x24, [sp, #48]
  42cbac:	ldp	x29, x30, [sp], #64
  42cbb0:	ret
  42cbb4:	nop
  42cbb8:	ret

Disassembly of section .fini:

000000000042cbbc <.fini>:
  42cbbc:	stp	x29, x30, [sp, #-16]!
  42cbc0:	mov	x29, sp
  42cbc4:	ldp	x29, x30, [sp], #16
  42cbc8:	ret
