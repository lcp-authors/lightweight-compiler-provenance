In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMMCA.a_clang_-O2:

CodeEmitter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>:
   0:	sub	sp, sp, #0x120
   4:	stp	x29, x30, [sp, #224]
   8:	stp	x28, x23, [sp, #240]
   c:	stp	x22, x21, [sp, #256]
  10:	stp	x20, x19, [sp, #272]
  14:	add	x29, sp, #0xe0
  18:	ldr	w8, [x0, #368]
  1c:	cmp	w8, w1
  20:	b.ls	16c <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x16c>  // b.plast
  24:	ldr	x9, [x0, #360]
  28:	mov	w8, w1
  2c:	mov	x19, x0
  30:	add	x22, x9, x8, lsl #3
  34:	mov	x23, x22
  38:	ldr	w9, [x23, #4]!
  3c:	cbz	w9, 48 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x48>
  40:	ldr	x19, [x22]
  44:	b	150 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x150>
  48:	adrp	x9, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  4c:	ldr	d0, [x9]
  50:	sub	x9, x29, #0x40
  54:	add	x9, x9, #0x10
  58:	stur	x9, [x29, #-64]
  5c:	stur	d0, [x29, #-56]
  60:	ldr	x9, [x19, #352]
  64:	cmp	x9, x8
  68:	b.ls	18c <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x18c>  // b.plast
  6c:	ldr	x9, [x19, #344]
  70:	mov	w10, #0xa0                  	// #160
  74:	adrp	x12, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  78:	ldr	d1, [x12]
  7c:	madd	x21, x8, x10, x9
  80:	ldr	q0, [x21]
  84:	mov	x11, sp
  88:	add	x10, x11, #0x20
  8c:	str	x10, [sp, #16]
  90:	str	q0, [sp]
  94:	str	d1, [sp, #24]
  98:	ldr	w10, [x21, #24]
  9c:	add	x20, x11, #0x10
  a0:	cbz	w10, b8 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0xb8>
  a4:	mov	w10, #0xa0                  	// #160
  a8:	madd	x8, x8, x10, x9
  ac:	add	x1, x8, #0x10
  b0:	mov	x0, x20
  b4:	bl	0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  b8:	ldp	x2, x0, [x19]
  bc:	mov	x1, x21
  c0:	ldr	x8, [x0]
  c4:	ldr	x8, [x8, #128]
  c8:	blr	x8
  cc:	tbz	w0, #0, e8 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0xe8>
  d0:	ldp	x2, x0, [x19]
  d4:	mov	x3, sp
  d8:	mov	x1, x21
  dc:	ldr	x8, [x0]
  e0:	ldr	x8, [x8, #152]
  e4:	blr	x8
  e8:	ldr	w8, [x19, #32]
  ec:	add	x2, x19, #0x128
  f0:	mov	x1, sp
  f4:	sub	x3, x29, #0x40
  f8:	str	w8, [x22]
  fc:	ldr	x0, [x19, #16]
 100:	ldr	x4, [x19]
 104:	sub	x21, x29, #0x40
 108:	ldr	x8, [x0]
 10c:	ldr	x8, [x8, #32]
 110:	blr	x8
 114:	ldr	w8, [x19, #32]
 118:	ldr	w9, [x22]
 11c:	sub	w8, w8, w9
 120:	str	w8, [x23]
 124:	ldr	x0, [sp, #16]
 128:	ldr	x19, [x22]
 12c:	add	x8, x20, #0x10
 130:	cmp	x0, x8
 134:	b.eq	13c <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x13c>  // b.none
 138:	bl	0 <free>
 13c:	ldur	x0, [x29, #-64]
 140:	add	x8, x21, #0x10
 144:	cmp	x0, x8
 148:	b.eq	150 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x150>  // b.none
 14c:	bl	0 <free>
 150:	mov	x0, x19
 154:	ldp	x20, x19, [sp, #272]
 158:	ldp	x22, x21, [sp, #256]
 15c:	ldp	x28, x23, [sp, #240]
 160:	ldp	x29, x30, [sp, #224]
 164:	add	sp, sp, #0x120
 168:	ret
 16c:	adrp	x0, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 170:	adrp	x1, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 174:	adrp	x3, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x95                  	// #149
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 190:	adrp	x1, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 194:	adrp	x3, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0xfa                  	// #250
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	c4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xc4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	70 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x70>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x10                  	// #16
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	88 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x88>
  58:	cbz	w20, b4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xb4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	lsl	x2, x20, #4
  68:	bl	0 <memmove>
  6c:	b	b4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xb4>
  70:	cbz	w22, 88 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x88>
  74:	ldr	x1, [x21]
  78:	ldr	x0, [x19]
  7c:	lsl	x2, x22, #4
  80:	bl	0 <memmove>
  84:	b	8c <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.eq	b4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xb4>  // b.none
  98:	ldr	x9, [x21]
  9c:	ldr	x10, [x19]
  a0:	add	x1, x9, x22, lsl #4
  a4:	add	x8, x9, x8, lsl #4
  a8:	add	x0, x10, x22, lsl #4
  ac:	sub	x2, x8, x1
  b0:	bl	0 <memcpy>
  b4:	ldr	w8, [x19, #12]
  b8:	cmp	w8, w20
  bc:	b.cc	d8 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xd8>  // b.lo, b.ul, b.last
  c0:	str	w20, [x19, #8]
  c4:	mov	x0, x19
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldp	x22, x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Context.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>:
   0:	sub	sp, sp, #0xa0
   4:	stp	x29, x30, [sp, #64]
   8:	stp	x28, x27, [sp, #80]
   c:	stp	x26, x25, [sp, #96]
  10:	stp	x24, x23, [sp, #112]
  14:	stp	x22, x21, [sp, #128]
  18:	stp	x20, x19, [sp, #144]
  1c:	add	x29, sp, #0x40
  20:	ldr	x9, [x0, #56]
  24:	mov	x21, x0
  28:	mov	w0, #0x38                  	// #56
  2c:	mov	x22, x2
  30:	ldr	x23, [x9, #152]
  34:	mov	x19, x1
  38:	str	x8, [sp, #8]
  3c:	bl	0 <_Znwm>
  40:	mov	x1, x23
  44:	mov	x20, x0
  48:	bl	0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  4c:	ldr	x24, [x21, #48]
  50:	mov	w0, #0x98                  	// #152
  54:	bl	0 <_Znwm>
  58:	ldr	w3, [x19, #12]
  5c:	mov	x1, x23
  60:	mov	x2, x24
  64:	mov	x28, x0
  68:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
  6c:	mov	w0, #0x50                  	// #80
  70:	bl	0 <_Znwm>
  74:	ldp	w2, w3, [x19, #16]
  78:	ldrb	w4, [x19, #24]
  7c:	mov	x1, x23
  80:	mov	x26, x0
  84:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
  88:	adrp	x8, 0 <_ZTVN4llvm3mca6LSUnitE>
  8c:	ldr	x8, [x8]
  90:	mov	w0, #0x90                  	// #144
  94:	str	xzr, [x26, #72]
  98:	str	wzr, [x26, #68]
  9c:	add	x8, x8, #0x10
  a0:	str	x8, [x26]
  a4:	bl	0 <_Znwm>
  a8:	mov	x25, x0
  ac:	mov	w0, #0x168                 	// #360
  b0:	bl	0 <_Znwm>
  b4:	mov	x1, x23
  b8:	mov	x24, x0
  bc:	bl	0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE>
  c0:	adrp	x8, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
  c4:	ldr	x8, [x8]
  c8:	movi	v0.2d, #0x0
  cc:	sub	x1, x29, #0x8
  d0:	mov	x0, x25
  d4:	add	x8, x8, #0x10
  d8:	stp	xzr, x24, [x25, #16]
  dc:	stp	q0, q0, [x25, #32]
  e0:	stp	q0, q0, [x25, #64]
  e4:	stp	q0, q0, [x25, #96]
  e8:	stur	q0, [x25, #125]
  ec:	stp	x8, x26, [x25]
  f0:	stur	xzr, [x29, #-8]
  f4:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
  f8:	ldur	x0, [x29, #-8]
  fc:	cbz	x0, 10c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x10c>
 100:	ldr	x8, [x0]
 104:	ldr	x8, [x8, #8]
 108:	blr	x8
 10c:	mov	w0, #0xf0                  	// #240
 110:	bl	0 <_Znwm>
 114:	mov	x8, x0
 118:	add	x9, x0, #0x60
 11c:	str	xzr, [x0, #8]
 120:	str	wzr, [x8, #24]!
 124:	stp	xzr, x9, [x0, #72]
 128:	adrp	x9, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 12c:	ldr	d0, [x9]
 130:	str	x22, [x0, #224]
 134:	adrp	x9, 0 <_ZTVN4llvm3mca10EntryStageE>
 138:	ldr	x9, [x9]
 13c:	str	wzr, [x0, #64]
 140:	str	wzr, [x0, #232]
 144:	stp	xzr, x8, [x0, #32]
 148:	add	x9, x9, #0x10
 14c:	stp	x8, xzr, [x0, #48]
 150:	str	x9, [x0]
 154:	str	d0, [x0, #88]
 158:	ldp	x23, x22, [x21, #48]
 15c:	mov	x27, x0
 160:	mov	w0, #0x78                  	// #120
 164:	bl	0 <_Znwm>
 168:	ldr	w3, [x19, #8]
 16c:	mov	x1, x22
 170:	mov	x2, x23
 174:	mov	x4, x20
 178:	mov	x5, x28
 17c:	mov	x24, x0
 180:	bl	0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 184:	mov	w0, #0x58                  	// #88
 188:	bl	0 <_Znwm>
 18c:	ldrb	w8, [x19, #25]
 190:	str	xzr, [x0, #8]
 194:	adrp	x10, 0 <_ZTVN4llvm3mca12ExecuteStageE>
 198:	ldr	x10, [x10]
 19c:	mov	x9, x0
 1a0:	str	wzr, [x9, #24]!
 1a4:	mov	x23, x0
 1a8:	add	x10, x10, #0x10
 1ac:	stp	xzr, x25, [x0, #56]
 1b0:	stp	xzr, x9, [x0, #32]
 1b4:	str	x9, [x0, #48]
 1b8:	str	x10, [x0]
 1bc:	str	xzr, [x0, #72]
 1c0:	strb	w8, [x0, #80]
 1c4:	mov	w0, #0x58                  	// #88
 1c8:	bl	0 <_Znwm>
 1cc:	str	xzr, [x0, #8]
 1d0:	adrp	x9, 0 <_ZTVN4llvm3mca11RetireStageE>
 1d4:	ldr	x9, [x9]
 1d8:	mov	x8, x0
 1dc:	str	wzr, [x8, #24]!
 1e0:	stp	x20, x28, [x0, #64]
 1e4:	add	x9, x9, #0x10
 1e8:	str	x26, [x0, #80]
 1ec:	stp	xzr, x8, [x0, #32]
 1f0:	stp	x8, xzr, [x0, #48]
 1f4:	str	x9, [x0]
 1f8:	ldp	w10, w8, [x21, #8]
 1fc:	mov	x22, x0
 200:	cmp	w10, w8
 204:	b.cs	3ac <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x3ac>  // b.hs, b.nlast
 208:	ldr	x9, [x21]
 20c:	cmp	w10, w8
 210:	str	x20, [x9, w10, uxtw #3]
 214:	b.cs	408 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x408>  // b.hs, b.nlast
 218:	add	w10, w10, #0x1
 21c:	cmp	w10, w8
 220:	str	w10, [x21, #8]
 224:	b.cs	3c0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x3c0>  // b.hs, b.nlast
 228:	cmp	w10, w8
 22c:	str	x28, [x9, w10, uxtw #3]
 230:	b.cs	408 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x408>  // b.hs, b.nlast
 234:	add	w10, w10, #0x1
 238:	cmp	w10, w8
 23c:	str	w10, [x21, #8]
 240:	b.cs	3d8 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x3d8>  // b.hs, b.nlast
 244:	cmp	w10, w8
 248:	str	x26, [x9, w10, uxtw #3]
 24c:	b.cs	408 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x408>  // b.hs, b.nlast
 250:	add	w10, w10, #0x1
 254:	cmp	w10, w8
 258:	str	w10, [x21, #8]
 25c:	b.cs	3f0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x3f0>  // b.hs, b.nlast
 260:	cmp	w10, w8
 264:	str	x25, [x9, w10, uxtw #3]
 268:	b.cs	408 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x408>  // b.hs, b.nlast
 26c:	add	w8, w10, #0x1
 270:	mov	w0, #0x88                  	// #136
 274:	str	w8, [x21, #8]
 278:	bl	0 <_Znwm>
 27c:	adrp	x8, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 280:	ldr	d0, [x8]
 284:	ldr	x10, [sp, #8]
 288:	add	x8, x0, #0x10
 28c:	mov	x9, x0
 290:	str	x8, [x0]
 294:	str	d0, [x0, #8]
 298:	str	wzr, [x9, #88]!
 29c:	sub	x1, x29, #0x10
 2a0:	mov	x20, x0
 2a4:	str	x0, [x10]
 2a8:	str	wzr, [x0, #128]
 2ac:	stp	xzr, x9, [x0, #96]
 2b0:	stp	x9, xzr, [x0, #112]
 2b4:	stur	x27, [x29, #-16]
 2b8:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 2bc:	ldur	x0, [x29, #-16]
 2c0:	cbz	x0, 2d0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x2d0>
 2c4:	ldr	x8, [x0]
 2c8:	ldr	x8, [x8, #8]
 2cc:	blr	x8
 2d0:	stur	xzr, [x29, #-16]
 2d4:	ldr	w21, [x19]
 2d8:	cbz	w21, 320 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x320>
 2dc:	mov	w0, #0xe8                  	// #232
 2e0:	bl	0 <_Znwm>
 2e4:	ldr	w2, [x19, #4]
 2e8:	mov	w3, #0x1                   	// #1
 2ec:	mov	w1, w21
 2f0:	mov	x19, x0
 2f4:	bl	0 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb>
 2f8:	sub	x1, x29, #0x18
 2fc:	mov	x0, x20
 300:	stur	x19, [x29, #-24]
 304:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 308:	ldur	x0, [x29, #-24]
 30c:	cbz	x0, 31c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x31c>
 310:	ldr	x8, [x0]
 314:	ldr	x8, [x8, #8]
 318:	blr	x8
 31c:	stur	xzr, [x29, #-24]
 320:	add	x1, sp, #0x20
 324:	mov	x0, x20
 328:	str	x24, [sp, #32]
 32c:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 330:	ldr	x0, [sp, #32]
 334:	cbz	x0, 344 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x344>
 338:	ldr	x8, [x0]
 33c:	ldr	x8, [x8, #8]
 340:	blr	x8
 344:	add	x1, sp, #0x18
 348:	mov	x0, x20
 34c:	stp	x23, xzr, [sp, #24]
 350:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 354:	ldr	x0, [sp, #24]
 358:	cbz	x0, 368 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x368>
 35c:	ldr	x8, [x0]
 360:	ldr	x8, [x8, #8]
 364:	blr	x8
 368:	add	x1, sp, #0x10
 36c:	mov	x0, x20
 370:	stp	x22, xzr, [sp, #16]
 374:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 378:	ldr	x0, [sp, #16]
 37c:	cbz	x0, 38c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x38c>
 380:	ldr	x8, [x0]
 384:	ldr	x8, [x8, #8]
 388:	blr	x8
 38c:	ldp	x20, x19, [sp, #144]
 390:	ldp	x22, x21, [sp, #128]
 394:	ldp	x24, x23, [sp, #112]
 398:	ldp	x26, x25, [sp, #96]
 39c:	ldp	x28, x27, [sp, #80]
 3a0:	ldp	x29, x30, [sp, #64]
 3a4:	add	sp, sp, #0xa0
 3a8:	ret
 3ac:	mov	x0, x21
 3b0:	mov	x1, xzr
 3b4:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 3b8:	ldp	w10, w8, [x21, #8]
 3bc:	b	208 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x208>
 3c0:	mov	x0, x21
 3c4:	mov	x1, xzr
 3c8:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 3cc:	ldp	w10, w8, [x21, #8]
 3d0:	ldr	x9, [x21]
 3d4:	b	228 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x228>
 3d8:	mov	x0, x21
 3dc:	mov	x1, xzr
 3e0:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 3e4:	ldp	w10, w8, [x21, #8]
 3e8:	ldr	x9, [x21]
 3ec:	b	244 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x244>
 3f0:	mov	x0, x21
 3f4:	mov	x1, xzr
 3f8:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 3fc:	ldp	w10, w8, [x21, #8]
 400:	ldr	x9, [x21]
 404:	b	260 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x260>
 408:	adrp	x0, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 40c:	adrp	x1, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 410:	adrp	x3, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 414:	add	x0, x0, #0x0
 418:	add	x1, x1, #0x0
 41c:	add	x3, x3, #0x0
 420:	mov	w2, #0x43                  	// #67
 424:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  6c:	lsl	x0, x21, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, 11c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x11c>
  c4:	lsl	x22, x8, #3
  c8:	mov	x9, x22
  cc:	mov	x10, x20
  d0:	ldr	x11, [x0]
  d4:	str	xzr, [x0], #8
  d8:	subs	x9, x9, #0x8
  dc:	str	x11, [x10], #8
  e0:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xd0>  // b.any
  e4:	ldr	x0, [x19]
  e8:	cbz	w8, 11c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x11c>
  ec:	sub	x23, x0, #0x8
  f0:	b	100 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x100>
  f4:	str	xzr, [x23, x22]
  f8:	subs	x22, x22, #0x8
  fc:	b.eq	118 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x118>  // b.none
 100:	ldr	x0, [x23, x22]
 104:	cbz	x0, f4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xf4>
 108:	ldr	x8, [x0]
 10c:	ldr	x8, [x8, #8]
 110:	blr	x8
 114:	b	f4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xf4>
 118:	ldr	x0, [x19]
 11c:	add	x8, x19, #0x10
 120:	cmp	x0, x8
 124:	b.eq	12c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x12c>  // b.none
 128:	bl	0 <free>
 12c:	str	x20, [x19]
 130:	str	w21, [x19, #12]
 134:	ldp	x20, x19, [sp, #48]
 138:	ldp	x22, x21, [sp, #32]
 13c:	ldr	x23, [sp, #16]
 140:	ldp	x29, x30, [sp], #64
 144:	ret

Disassembly of section .text._ZN4llvm3mca9SchedulerD2Ev:

0000000000000000 <_ZN4llvm3mca9SchedulerD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca9SchedulerD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #104]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca9SchedulerD2Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	ldr	x0, [x19, #80]
  30:	cbz	x0, 38 <_ZN4llvm3mca9SchedulerD2Ev+0x38>
  34:	bl	0 <_ZdlPv>
  38:	ldr	x0, [x19, #56]
  3c:	cbz	x0, 44 <_ZN4llvm3mca9SchedulerD2Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #32]
  48:	cbz	x0, 50 <_ZN4llvm3mca9SchedulerD2Ev+0x50>
  4c:	bl	0 <_ZdlPv>
  50:	ldr	x0, [x19, #24]
  54:	cbz	x0, 64 <_ZN4llvm3mca9SchedulerD2Ev+0x64>
  58:	ldr	x8, [x0]
  5c:	ldr	x8, [x8, #8]
  60:	blr	x8
  64:	ldr	x0, [x19, #16]
  68:	str	xzr, [x19, #24]
  6c:	cbz	x0, 7c <_ZN4llvm3mca9SchedulerD2Ev+0x7c>
  70:	ldr	x8, [x0]
  74:	ldr	x8, [x8, #8]
  78:	blr	x8
  7c:	str	xzr, [x19, #16]
  80:	mov	x0, x19
  84:	ldr	x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca9SchedulerD0Ev:

0000000000000000 <_ZN4llvm3mca9SchedulerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca9SchedulerD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #104]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca9SchedulerD0Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	ldr	x0, [x19, #80]
  30:	cbz	x0, 38 <_ZN4llvm3mca9SchedulerD0Ev+0x38>
  34:	bl	0 <_ZdlPv>
  38:	ldr	x0, [x19, #56]
  3c:	cbz	x0, 44 <_ZN4llvm3mca9SchedulerD0Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #32]
  48:	cbz	x0, 50 <_ZN4llvm3mca9SchedulerD0Ev+0x50>
  4c:	bl	0 <_ZdlPv>
  50:	ldr	x0, [x19, #24]
  54:	cbz	x0, 64 <_ZN4llvm3mca9SchedulerD0Ev+0x64>
  58:	ldr	x8, [x0]
  5c:	ldr	x8, [x8, #8]
  60:	blr	x8
  64:	ldr	x0, [x19, #16]
  68:	str	xzr, [x19, #24]
  6c:	cbz	x0, 7c <_ZN4llvm3mca9SchedulerD0Ev+0x7c>
  70:	ldr	x8, [x0]
  74:	ldr	x8, [x8, #8]
  78:	blr	x8
  7c:	mov	x0, x19
  80:	str	xzr, [x19, #16]
  84:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  88:	mov	x0, x19
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	b	0 <_ZdlPv>

HWEventListener.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca15HWEventListener6anchorEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener12onCycleBeginEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener12onCycleBeginEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener10onCycleEndEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener10onCycleEndEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE:

0000000000000000 <_ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListenerD2Ev:

0000000000000000 <_ZN4llvm3mca15HWEventListenerD2Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListenerD0Ev:

0000000000000000 <_ZN4llvm3mca15HWEventListenerD0Ev>:
   0:	b	0 <_ZdlPv>

HardwareUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca12HardwareUnitD1Ev>:
   0:	ret

0000000000000004 <_ZN4llvm3mca12HardwareUnitD0Ev>:
   4:	b	0 <_ZdlPv>

LSUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	mov	x29, sp
       8:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
       c:	ldr	x9, [x9]
      10:	and	w8, w4, #0x1
      14:	strb	w8, [x0, #24]
      18:	mov	w8, #0x1                   	// #1
      1c:	add	x9, x9, #0x10
      20:	stp	w2, w3, [x0, #8]
      24:	str	xzr, [x0, #16]
      28:	stp	xzr, xzr, [x0, #40]
      2c:	str	xzr, [x0, #32]
      30:	str	wzr, [x0, #56]
      34:	str	x9, [x0]
      38:	str	w8, [x0, #64]
      3c:	ldr	x8, [x1, #64]
      40:	cbz	x8, 7c <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x7c>
      44:	cbnz	w2, 78 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x78>
      48:	ldr	w9, [x8, #36]
      4c:	cbz	w9, 78 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x78>
      50:	ldr	x10, [x1, #40]
      54:	cbz	x10, bc <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0xbc>
      58:	ldr	w10, [x1, #48]
      5c:	cmp	w10, w9
      60:	b.ls	dc <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0xdc>  // b.plast
      64:	ldr	x10, [x1, #32]
      68:	add	x9, x10, x9, lsl #5
      6c:	ldr	w9, [x9, #16]
      70:	bic	w9, w9, w9, asr #31
      74:	str	w9, [x0, #8]
      78:	cbz	w3, 84 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x84>
      7c:	ldp	x29, x30, [sp], #16
      80:	ret
      84:	ldr	w8, [x8, #40]
      88:	cbz	w8, 7c <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0x7c>
      8c:	ldr	x9, [x1, #40]
      90:	cbz	x9, bc <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0xbc>
      94:	ldr	w9, [x1, #48]
      98:	cmp	w9, w8
      9c:	b.ls	dc <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb+0xdc>  // b.plast
      a0:	ldr	x9, [x1, #32]
      a4:	add	x8, x9, x8, lsl #5
      a8:	ldr	w8, [x8, #16]
      ac:	bic	w8, w8, w8, asr #31
      b0:	str	w8, [x0, #12]
      b4:	ldp	x29, x30, [sp], #16
      b8:	ret
      bc:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
      c0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
      c4:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
      c8:	add	x0, x0, #0x0
      cc:	add	x1, x1, #0x0
      d0:	add	x3, x3, #0x0
      d4:	mov	w2, #0x154                 	// #340
      d8:	bl	0 <__assert_fail>
      dc:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
      e0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
      e4:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
      e8:	add	x0, x0, #0x0
      ec:	add	x1, x1, #0x0
      f0:	add	x3, x3, #0x0
      f4:	mov	w2, #0x156                 	// #342
      f8:	bl	0 <__assert_fail>

00000000000000fc <_ZN4llvm3mca10LSUnitBaseD0Ev>:
      fc:	brk	#0x1

0000000000000100 <_ZN4llvm3mca10LSUnitBase10cycleEventEv>:
     100:	stp	x29, x30, [sp, #-16]!
     104:	mov	x29, sp
     108:	ldr	w8, [x0, #48]
     10c:	cbz	w8, 1a8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xa8>
     110:	ldr	x8, [x0, #40]
     114:	ldr	w10, [x0, #56]
     118:	add	x9, x8, x10, lsl #4
     11c:	cbz	w10, 144 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x44>
     120:	lsl	x11, x10, #4
     124:	add	x10, x11, x8
     128:	ldr	w12, [x8]
     12c:	cmn	w12, #0x2
     130:	b.cc	144 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x44>  // b.lo, b.ul, b.last
     134:	subs	x11, x11, #0x10
     138:	add	x8, x8, #0x10
     13c:	b.ne	128 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x28>  // b.any
     140:	mov	x8, x10
     144:	cmp	x8, x9
     148:	b.eq	1a8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xa8>  // b.none
     14c:	ldr	x10, [x8, #8]
     150:	ldp	w11, w12, [x10, #4]
     154:	ldr	w13, [x10]
     158:	add	w11, w12, w11
     15c:	cmp	w13, w11
     160:	b.ls	174 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x74>  // b.plast
     164:	ldr	w11, [x10, #80]
     168:	cbz	w11, 174 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x74>
     16c:	sub	w11, w11, #0x1
     170:	str	w11, [x10, #80]
     174:	add	x8, x8, #0x10
     178:	cmp	x8, x9
     17c:	b.hi	1b0 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xb0>  // b.pmore
     180:	b.eq	1a8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xa8>  // b.none
     184:	ldr	w10, [x8]
     188:	cmn	w10, #0x2
     18c:	b.cc	1a0 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xa0>  // b.lo, b.ul, b.last
     190:	add	x8, x8, #0x10
     194:	cmp	x9, x8
     198:	b.ne	184 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x84>  // b.any
     19c:	b	1a8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0xa8>
     1a0:	cmp	x9, x8
     1a4:	b.ne	14c <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x4c>  // b.any
     1a8:	ldp	x29, x30, [sp], #16
     1ac:	ret
     1b0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     1b4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     1b8:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     1bc:	add	x0, x0, #0x0
     1c0:	add	x1, x1, #0x0
     1c4:	add	x3, x3, #0x0
     1c8:	mov	w2, #0x4e0                 	// #1248
     1cc:	bl	0 <__assert_fail>

00000000000001d0 <_ZNK4llvm3mca10LSUnitBase4dumpEv>:
     1d0:	stp	x29, x30, [sp, #-96]!
     1d4:	stp	x28, x27, [sp, #16]
     1d8:	stp	x26, x25, [sp, #32]
     1dc:	stp	x24, x23, [sp, #48]
     1e0:	stp	x22, x21, [sp, #64]
     1e4:	stp	x20, x19, [sp, #80]
     1e8:	mov	x29, sp
     1ec:	mov	x19, x0
     1f0:	bl	0 <_ZN4llvm4dbgsEv>
     1f4:	ldp	x9, x8, [x0, #16]
     1f8:	sub	x9, x9, x8
     1fc:	cmp	x9, #0x12
     200:	b.hi	218 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x48>  // b.pmore
     204:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     208:	add	x1, x1, #0x0
     20c:	mov	w2, #0x13                  	// #19
     210:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     214:	b	240 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x70>
     218:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     21c:	add	x9, x9, #0x0
     220:	ldr	q0, [x9]
     224:	mov	w9, #0x2065                	// #8293
     228:	movk	w9, #0x203d, lsl #16
     22c:	stur	w9, [x8, #15]
     230:	str	q0, [x8]
     234:	ldr	x8, [x0, #24]
     238:	add	x8, x8, #0x13
     23c:	str	x8, [x0, #24]
     240:	ldr	w1, [x19, #8]
     244:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     248:	ldp	x9, x8, [x0, #16]
     24c:	cmp	x8, x9
     250:	b.cs	268 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x98>  // b.hs, b.nlast
     254:	add	x9, x8, #0x1
     258:	mov	w10, #0xa                   	// #10
     25c:	str	x9, [x0, #24]
     260:	strb	w10, [x8]
     264:	b	270 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0xa0>
     268:	mov	w1, #0xa                   	// #10
     26c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     270:	bl	0 <_ZN4llvm4dbgsEv>
     274:	ldp	x9, x8, [x0, #16]
     278:	sub	x9, x9, x8
     27c:	cmp	x9, #0x12
     280:	b.hi	298 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0xc8>  // b.pmore
     284:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     288:	add	x1, x1, #0x0
     28c:	mov	w2, #0x13                  	// #19
     290:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     294:	b	2c0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0xf0>
     298:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     29c:	add	x9, x9, #0x0
     2a0:	ldr	q0, [x9]
     2a4:	mov	w9, #0x2065                	// #8293
     2a8:	movk	w9, #0x203d, lsl #16
     2ac:	stur	w9, [x8, #15]
     2b0:	str	q0, [x8]
     2b4:	ldr	x8, [x0, #24]
     2b8:	add	x8, x8, #0x13
     2bc:	str	x8, [x0, #24]
     2c0:	ldr	w1, [x19, #12]
     2c4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     2c8:	ldp	x9, x8, [x0, #16]
     2cc:	cmp	x8, x9
     2d0:	b.cs	2e8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x118>  // b.hs, b.nlast
     2d4:	add	x9, x8, #0x1
     2d8:	mov	w10, #0xa                   	// #10
     2dc:	str	x9, [x0, #24]
     2e0:	strb	w10, [x8]
     2e4:	b	2f0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x120>
     2e8:	mov	w1, #0xa                   	// #10
     2ec:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     2f0:	bl	0 <_ZN4llvm4dbgsEv>
     2f4:	ldp	x9, x8, [x0, #16]
     2f8:	sub	x9, x9, x8
     2fc:	cmp	x9, #0x18
     300:	b.hi	318 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x148>  // b.pmore
     304:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     308:	add	x1, x1, #0x0
     30c:	mov	w2, #0x19                  	// #25
     310:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     314:	b	33c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x16c>
     318:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     31c:	add	x9, x9, #0x0
     320:	ldur	q0, [x9, #9]
     324:	ldr	q1, [x9]
     328:	stur	q0, [x8, #9]
     32c:	str	q1, [x8]
     330:	ldr	x8, [x0, #24]
     334:	add	x8, x8, #0x19
     338:	str	x8, [x0, #24]
     33c:	ldr	w1, [x19, #16]
     340:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     344:	ldp	x9, x8, [x0, #16]
     348:	cmp	x8, x9
     34c:	b.cs	364 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x194>  // b.hs, b.nlast
     350:	add	x9, x8, #0x1
     354:	mov	w10, #0xa                   	// #10
     358:	str	x9, [x0, #24]
     35c:	strb	w10, [x8]
     360:	b	36c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x19c>
     364:	mov	w1, #0xa                   	// #10
     368:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     36c:	bl	0 <_ZN4llvm4dbgsEv>
     370:	ldp	x9, x8, [x0, #16]
     374:	sub	x9, x9, x8
     378:	cmp	x9, #0x18
     37c:	b.hi	394 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x1c4>  // b.pmore
     380:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     384:	add	x1, x1, #0x0
     388:	mov	w2, #0x19                  	// #25
     38c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     390:	b	3b8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x1e8>
     394:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     398:	add	x9, x9, #0x0
     39c:	ldur	q0, [x9, #9]
     3a0:	ldr	q1, [x9]
     3a4:	stur	q0, [x8, #9]
     3a8:	str	q1, [x8]
     3ac:	ldr	x8, [x0, #24]
     3b0:	add	x8, x8, #0x19
     3b4:	str	x8, [x0, #24]
     3b8:	ldr	w1, [x19, #20]
     3bc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     3c0:	ldp	x9, x8, [x0, #16]
     3c4:	cmp	x8, x9
     3c8:	b.cs	3e0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x210>  // b.hs, b.nlast
     3cc:	add	x9, x8, #0x1
     3d0:	mov	w10, #0xa                   	// #10
     3d4:	str	x9, [x0, #24]
     3d8:	strb	w10, [x8]
     3dc:	b	3e8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x218>
     3e0:	mov	w1, #0xa                   	// #10
     3e4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     3e8:	bl	0 <_ZN4llvm4dbgsEv>
     3ec:	ldp	x9, x8, [x0, #16]
     3f0:	cmp	x9, x8
     3f4:	b.ne	40c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x23c>  // b.any
     3f8:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     3fc:	add	x1, x1, #0x0
     400:	mov	w2, #0x1                   	// #1
     404:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     408:	b	420 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x250>
     40c:	mov	w9, #0xa                   	// #10
     410:	strb	w9, [x8]
     414:	ldr	x8, [x0, #24]
     418:	add	x8, x8, #0x1
     41c:	str	x8, [x0, #24]
     420:	ldr	w9, [x19, #56]
     424:	ldp	x28, x8, [x19, #32]
     428:	ldr	w10, [x19, #48]
     42c:	add	x21, x8, x9, lsl #4
     430:	mov	x20, x21
     434:	cbz	w10, 464 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x294>
     438:	cbz	w9, 460 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x290>
     43c:	lsl	x9, x9, #4
     440:	add	x20, x9, x8
     444:	ldr	w10, [x8]
     448:	cmn	w10, #0x2
     44c:	b.cc	748 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x578>  // b.lo, b.ul, b.last
     450:	subs	x9, x9, #0x10
     454:	add	x8, x8, #0x10
     458:	b.ne	444 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x274>  // b.any
     45c:	b	464 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x294>
     460:	mov	x20, x8
     464:	cmp	x20, x21
     468:	b.eq	754 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x584>  // b.none
     46c:	adrp	x23, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     470:	adrp	x24, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     474:	adrp	x25, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     478:	adrp	x26, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     47c:	adrp	x27, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     480:	add	x23, x23, #0x0
     484:	add	x24, x24, #0x0
     488:	add	x25, x25, #0x0
     48c:	add	x26, x26, #0x0
     490:	add	x27, x27, #0x0
     494:	b	4a4 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2d4>
     498:	mov	x20, x8
     49c:	cmp	x20, x21
     4a0:	b.eq	754 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x584>  // b.none
     4a4:	ldr	x22, [x20, #8]
     4a8:	bl	0 <_ZN4llvm4dbgsEv>
     4ac:	ldp	x9, x8, [x0, #16]
     4b0:	sub	x9, x9, x8
     4b4:	cmp	x9, #0xf
     4b8:	b.hi	4d0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x300>  // b.pmore
     4bc:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     4c0:	mov	w2, #0x10                  	// #16
     4c4:	add	x1, x1, #0x0
     4c8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     4cc:	b	4ec <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x31c>
     4d0:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     4d4:	add	x9, x9, #0x0
     4d8:	ldr	q0, [x9]
     4dc:	str	q0, [x8]
     4e0:	ldr	x8, [x0, #24]
     4e4:	add	x8, x8, #0x10
     4e8:	str	x8, [x0, #24]
     4ec:	ldr	w1, [x20]
     4f0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     4f4:	ldp	x9, x8, [x0, #16]
     4f8:	sub	x9, x9, x8
     4fc:	cmp	x9, #0x2
     500:	b.hi	51c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x34c>  // b.pmore
     504:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     508:	mov	w2, #0x3                   	// #3
     50c:	add	x1, x1, #0x0
     510:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     514:	ldr	x8, [x0, #24]
     518:	b	538 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x368>
     51c:	mov	w9, #0x20                  	// #32
     520:	strb	w9, [x8, #2]
     524:	mov	w9, #0x3a29                	// #14889
     528:	strh	w9, [x8]
     52c:	ldr	x8, [x0, #24]
     530:	add	x8, x8, #0x3
     534:	str	x8, [x0, #24]
     538:	ldr	x9, [x0, #16]
     53c:	sub	x9, x9, x8
     540:	cmp	x9, #0xa
     544:	b.hi	55c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x38c>  // b.pmore
     548:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     54c:	mov	w2, #0xb                   	// #11
     550:	add	x1, x1, #0x0
     554:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     558:	b	584 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x3b4>
     55c:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     560:	add	x9, x9, #0x0
     564:	ldr	x9, [x9]
     568:	mov	w10, #0x2073                	// #8307
     56c:	movk	w10, #0x203d, lsl #16
     570:	stur	w10, [x8, #7]
     574:	str	x9, [x8]
     578:	ldr	x8, [x0, #24]
     57c:	add	x8, x8, #0xb
     580:	str	x8, [x0, #24]
     584:	ldr	w1, [x22]
     588:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     58c:	ldp	x9, x8, [x0, #16]
     590:	sub	x9, x9, x8
     594:	cmp	x9, #0xc
     598:	b.hi	5ac <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x3dc>  // b.pmore
     59c:	mov	w2, #0xd                   	// #13
     5a0:	mov	x1, x23
     5a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5a8:	b	5c8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x3f8>
     5ac:	ldur	x9, [x23, #5]
     5b0:	ldr	x10, [x23]
     5b4:	stur	x9, [x8, #5]
     5b8:	str	x10, [x8]
     5bc:	ldr	x8, [x0, #24]
     5c0:	add	x8, x8, #0xd
     5c4:	str	x8, [x0, #24]
     5c8:	ldr	w1, [x22, #4]
     5cc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     5d0:	ldp	x9, x8, [x0, #16]
     5d4:	sub	x9, x9, x8
     5d8:	cmp	x9, #0xe
     5dc:	b.hi	5f0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x420>  // b.pmore
     5e0:	mov	w2, #0xf                   	// #15
     5e4:	mov	x1, x24
     5e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5ec:	b	60c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x43c>
     5f0:	ldur	x9, [x24, #7]
     5f4:	ldr	x10, [x24]
     5f8:	stur	x9, [x8, #7]
     5fc:	str	x10, [x8]
     600:	ldr	x8, [x0, #24]
     604:	add	x8, x8, #0xf
     608:	str	x8, [x0, #24]
     60c:	ldr	w1, [x22, #8]
     610:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     614:	ldp	x9, x8, [x0, #16]
     618:	sub	x9, x9, x8
     61c:	cmp	x9, #0x9
     620:	b.hi	634 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x464>  // b.pmore
     624:	mov	w2, #0xa                   	// #10
     628:	mov	x1, x25
     62c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     630:	b	650 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x480>
     634:	ldr	x9, [x25]
     638:	mov	w10, #0x203d                	// #8253
     63c:	strh	w10, [x8, #8]
     640:	str	x9, [x8]
     644:	ldr	x8, [x0, #24]
     648:	add	x8, x8, #0xa
     64c:	str	x8, [x0, #24]
     650:	ldr	w1, [x22, #12]
     654:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     658:	ldp	x9, x8, [x0, #16]
     65c:	sub	x9, x9, x8
     660:	cmp	x9, #0xc
     664:	b.hi	678 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x4a8>  // b.pmore
     668:	mov	w2, #0xd                   	// #13
     66c:	mov	x1, x26
     670:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     674:	b	694 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x4c4>
     678:	ldur	x9, [x26, #5]
     67c:	ldr	x10, [x26]
     680:	stur	x9, [x8, #5]
     684:	str	x10, [x8]
     688:	ldr	x8, [x0, #24]
     68c:	add	x8, x8, #0xd
     690:	str	x8, [x0, #24]
     694:	ldr	w1, [x22, #16]
     698:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     69c:	ldp	x9, x8, [x0, #16]
     6a0:	sub	x9, x9, x8
     6a4:	cmp	x9, #0xe
     6a8:	b.hi	6bc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x4ec>  // b.pmore
     6ac:	mov	w2, #0xf                   	// #15
     6b0:	mov	x1, x27
     6b4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6b8:	b	6d8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x508>
     6bc:	ldur	x9, [x27, #7]
     6c0:	ldr	x10, [x27]
     6c4:	stur	x9, [x8, #7]
     6c8:	str	x10, [x8]
     6cc:	ldr	x8, [x0, #24]
     6d0:	add	x8, x8, #0xf
     6d4:	str	x8, [x0, #24]
     6d8:	ldr	w1, [x22, #20]
     6dc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     6e0:	ldp	x9, x8, [x0, #16]
     6e4:	cmp	x8, x9
     6e8:	b.cs	700 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x530>  // b.hs, b.nlast
     6ec:	add	x9, x8, #0x1
     6f0:	str	x9, [x0, #24]
     6f4:	mov	w9, #0xa                   	// #10
     6f8:	strb	w9, [x8]
     6fc:	b	708 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x538>
     700:	mov	w1, #0xa                   	// #10
     704:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     708:	ldr	x8, [x19, #32]
     70c:	cmp	x8, x28
     710:	b.ne	770 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x5a0>  // b.any
     714:	add	x8, x20, #0x10
     718:	cmp	x8, x21
     71c:	b.hi	790 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x5c0>  // b.pmore
     720:	mov	x20, x21
     724:	b.eq	49c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2cc>  // b.none
     728:	ldr	w9, [x8]
     72c:	cmn	w9, #0x2
     730:	b.cc	498 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2c8>  // b.lo, b.ul, b.last
     734:	add	x8, x8, #0x10
     738:	cmp	x21, x8
     73c:	b.ne	728 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x558>  // b.any
     740:	mov	x20, x21
     744:	b	49c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2cc>
     748:	mov	x20, x8
     74c:	cmp	x20, x21
     750:	b.ne	46c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x29c>  // b.any
     754:	ldp	x20, x19, [sp, #80]
     758:	ldp	x22, x21, [sp, #64]
     75c:	ldp	x24, x23, [sp, #48]
     760:	ldp	x26, x25, [sp, #32]
     764:	ldp	x28, x27, [sp, #16]
     768:	ldp	x29, x30, [sp], #96
     76c:	ret
     770:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     774:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     778:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     77c:	add	x0, x0, #0x0
     780:	add	x1, x1, #0x0
     784:	add	x3, x3, #0x0
     788:	mov	w2, #0x4cf                 	// #1231
     78c:	bl	0 <__assert_fail>
     790:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     794:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     798:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     79c:	add	x0, x0, #0x0
     7a0:	add	x1, x1, #0x0
     7a4:	add	x3, x3, #0x0
     7a8:	mov	w2, #0x4e0                 	// #1248
     7ac:	bl	0 <__assert_fail>

00000000000007b0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE>:
     7b0:	stp	x29, x30, [sp, #-80]!
     7b4:	str	x25, [sp, #16]
     7b8:	stp	x24, x23, [sp, #32]
     7bc:	stp	x22, x21, [sp, #48]
     7c0:	stp	x20, x19, [sp, #64]
     7c4:	mov	x29, sp
     7c8:	ldr	x8, [x1, #8]
     7cc:	mov	x19, x0
     7d0:	ldr	x25, [x8]
     7d4:	ldrb	w8, [x25, #324]
     7d8:	ldrb	w24, [x25, #326]
     7dc:	cbz	w8, 83c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x8c>
     7e0:	ldr	w8, [x19, #16]
     7e4:	add	w8, w8, #0x1
     7e8:	str	w8, [x19, #16]
     7ec:	ldrb	w8, [x25, #325]
     7f0:	cbnz	w8, 844 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x94>
     7f4:	cbnz	w24, 8e8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x138>
     7f8:	ldr	w1, [x19, #68]
     7fc:	cbz	w1, 8e8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x138>
     800:	ldr	w8, [x19, #76]
     804:	cmp	w1, w8
     808:	b.ls	8e8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x138>  // b.plast
     80c:	ldr	w8, [x19, #72]
     810:	cmp	w1, w8
     814:	b.ls	8e8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x138>  // b.plast
     818:	mov	x0, x19
     81c:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     820:	ldr	w8, [x0, #32]
     824:	cbnz	w8, d6c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5bc>
     828:	ldr	w8, [x0, #12]
     82c:	add	w8, w8, #0x1
     830:	str	w8, [x0, #12]
     834:	ldr	w20, [x19, #68]
     838:	b	d50 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5a0>
     83c:	ldrb	w8, [x25, #325]
     840:	cbz	w8, d8c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5dc>
     844:	ldr	w8, [x19, #20]
     848:	mov	x0, x19
     84c:	add	w8, w8, #0x1
     850:	str	w8, [x19, #20]
     854:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     858:	mov	w20, w0
     85c:	mov	x0, x19
     860:	mov	w1, w20
     864:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     868:	ldr	w8, [x0, #32]
     86c:	cbnz	w8, d6c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5bc>
     870:	ldr	w8, [x0, #12]
     874:	mov	x21, x0
     878:	add	w8, w8, #0x1
     87c:	str	w8, [x0, #12]
     880:	ldp	w8, w9, [x19, #68]
     884:	cmp	w8, w9
     888:	csel	w23, w9, w8, cc  // cc = lo, ul, last
     88c:	cbz	w23, a3c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x28c>
     890:	mov	x0, x19
     894:	mov	w1, w23
     898:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     89c:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     8a0:	ldr	x8, [x8]
     8a4:	mov	x22, x0
     8a8:	ldrb	w8, [x8]
     8ac:	cbz	w8, a30 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x280>
     8b0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     8b4:	add	x0, x0, #0x0
     8b8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     8bc:	tbz	w0, #0, a30 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x280>
     8c0:	bl	0 <_ZN4llvm4dbgsEv>
     8c4:	ldp	x9, x8, [x0, #16]
     8c8:	sub	x9, x9, x8
     8cc:	cmp	x9, #0x15
     8d0:	b.hi	97c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1cc>  // b.pmore
     8d4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     8d8:	add	x1, x1, #0x0
     8dc:	mov	w2, #0x16                  	// #22
     8e0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8e4:	b	9a0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1f0>
     8e8:	mov	x0, x19
     8ec:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     8f0:	mov	w20, w0
     8f4:	mov	x0, x19
     8f8:	mov	w1, w20
     8fc:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     900:	ldr	w8, [x0, #32]
     904:	cbnz	w8, d6c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5bc>
     908:	ldr	w8, [x0, #12]
     90c:	mov	x21, x0
     910:	add	w8, w8, #0x1
     914:	str	w8, [x0, #12]
     918:	ldrb	w8, [x19, #24]
     91c:	cbnz	w8, c28 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x478>
     920:	ldr	w1, [x19, #76]
     924:	cbz	w1, c28 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x478>
     928:	mov	x0, x19
     92c:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     930:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     934:	ldr	x8, [x8]
     938:	mov	x22, x0
     93c:	ldrb	w8, [x8]
     940:	cbz	w8, c1c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x46c>
     944:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     948:	add	x0, x0, #0x0
     94c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     950:	tbz	w0, #0, c1c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x46c>
     954:	bl	0 <_ZN4llvm4dbgsEv>
     958:	ldp	x9, x8, [x0, #16]
     95c:	sub	x9, x9, x8
     960:	cmp	x9, #0x15
     964:	b.hi	b68 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3b8>  // b.pmore
     968:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     96c:	add	x1, x1, #0x0
     970:	mov	w2, #0x16                  	// #22
     974:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     978:	b	b8c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3dc>
     97c:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     980:	add	x9, x9, #0x0
     984:	ldur	x10, [x9, #14]
     988:	ldr	q0, [x9]
     98c:	stur	x10, [x8, #14]
     990:	str	q0, [x8]
     994:	ldr	x8, [x0, #24]
     998:	add	x8, x8, #0x16
     99c:	str	x8, [x0, #24]
     9a0:	mov	w1, w23
     9a4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     9a8:	ldp	x9, x8, [x0, #16]
     9ac:	sub	x9, x9, x8
     9b0:	cmp	x9, #0x6
     9b4:	b.hi	9cc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x21c>  // b.pmore
     9b8:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     9bc:	add	x1, x1, #0x0
     9c0:	mov	w2, #0x7                   	// #7
     9c4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     9c8:	b	9f0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x240>
     9cc:	mov	w9, #0x3e2d                	// #15917
     9d0:	mov	w10, #0x2029                	// #8233
     9d4:	movk	w9, #0x2820, lsl #16
     9d8:	movk	w10, #0x2d2d, lsl #16
     9dc:	stur	w9, [x8, #3]
     9e0:	str	w10, [x8]
     9e4:	ldr	x8, [x0, #24]
     9e8:	add	x8, x8, #0x7
     9ec:	str	x8, [x0, #24]
     9f0:	mov	w1, w20
     9f4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     9f8:	ldp	x9, x8, [x0, #16]
     9fc:	sub	x9, x9, x8
     a00:	cmp	x9, #0x1
     a04:	b.hi	a1c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x26c>  // b.pmore
     a08:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     a0c:	add	x1, x1, #0x0
     a10:	mov	w2, #0x2                   	// #2
     a14:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a18:	b	a30 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x280>
     a1c:	mov	w9, #0xa29                 	// #2601
     a20:	strh	w9, [x8]
     a24:	ldr	x8, [x0, #24]
     a28:	add	x8, x8, #0x2
     a2c:	str	x8, [x0, #24]
     a30:	mov	x0, x22
     a34:	mov	x1, x21
     a38:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     a3c:	ldr	w1, [x19, #76]
     a40:	cbz	w1, b58 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3a8>
     a44:	mov	x0, x19
     a48:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     a4c:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     a50:	ldr	x8, [x8]
     a54:	mov	x22, x0
     a58:	ldrb	w8, [x8]
     a5c:	cbz	w8, b4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x39c>
     a60:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     a64:	add	x0, x0, #0x0
     a68:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     a6c:	tbz	w0, #0, b4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x39c>
     a70:	bl	0 <_ZN4llvm4dbgsEv>
     a74:	ldp	x9, x8, [x0, #16]
     a78:	sub	x9, x9, x8
     a7c:	cmp	x9, #0x15
     a80:	b.hi	a98 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x2e8>  // b.pmore
     a84:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     a88:	add	x1, x1, #0x0
     a8c:	mov	w2, #0x16                  	// #22
     a90:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a94:	b	abc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x30c>
     a98:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     a9c:	add	x9, x9, #0x0
     aa0:	ldur	x10, [x9, #14]
     aa4:	ldr	q0, [x9]
     aa8:	stur	x10, [x8, #14]
     aac:	str	q0, [x8]
     ab0:	ldr	x8, [x0, #24]
     ab4:	add	x8, x8, #0x16
     ab8:	str	x8, [x0, #24]
     abc:	ldr	w1, [x19, #76]
     ac0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ac4:	ldp	x9, x8, [x0, #16]
     ac8:	sub	x9, x9, x8
     acc:	cmp	x9, #0x6
     ad0:	b.hi	ae8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x338>  // b.pmore
     ad4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     ad8:	add	x1, x1, #0x0
     adc:	mov	w2, #0x7                   	// #7
     ae0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ae4:	b	b0c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x35c>
     ae8:	mov	w9, #0x3e2d                	// #15917
     aec:	mov	w10, #0x2029                	// #8233
     af0:	movk	w9, #0x2820, lsl #16
     af4:	movk	w10, #0x2d2d, lsl #16
     af8:	stur	w9, [x8, #3]
     afc:	str	w10, [x8]
     b00:	ldr	x8, [x0, #24]
     b04:	add	x8, x8, #0x7
     b08:	str	x8, [x0, #24]
     b0c:	mov	w1, w20
     b10:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     b14:	ldp	x9, x8, [x0, #16]
     b18:	sub	x9, x9, x8
     b1c:	cmp	x9, #0x1
     b20:	b.hi	b38 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x388>  // b.pmore
     b24:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     b28:	add	x1, x1, #0x0
     b2c:	mov	w2, #0x2                   	// #2
     b30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     b34:	b	b4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x39c>
     b38:	mov	w9, #0xa29                 	// #2601
     b3c:	strh	w9, [x8]
     b40:	ldr	x8, [x0, #24]
     b44:	add	x8, x8, #0x2
     b48:	str	x8, [x0, #24]
     b4c:	mov	x0, x22
     b50:	mov	x1, x21
     b54:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     b58:	str	w20, [x19, #76]
     b5c:	ldrb	w8, [x25, #324]
     b60:	cbnz	w8, d44 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x594>
     b64:	b	d50 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5a0>
     b68:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     b6c:	add	x9, x9, #0x0
     b70:	ldur	x10, [x9, #14]
     b74:	ldr	q0, [x9]
     b78:	stur	x10, [x8, #14]
     b7c:	str	q0, [x8]
     b80:	ldr	x8, [x0, #24]
     b84:	add	x8, x8, #0x16
     b88:	str	x8, [x0, #24]
     b8c:	ldr	w1, [x19, #76]
     b90:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     b94:	ldp	x9, x8, [x0, #16]
     b98:	sub	x9, x9, x8
     b9c:	cmp	x9, #0x6
     ba0:	b.hi	bb8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x408>  // b.pmore
     ba4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     ba8:	add	x1, x1, #0x0
     bac:	mov	w2, #0x7                   	// #7
     bb0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     bb4:	b	bdc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x42c>
     bb8:	mov	w9, #0x3e2d                	// #15917
     bbc:	mov	w10, #0x2029                	// #8233
     bc0:	movk	w9, #0x2820, lsl #16
     bc4:	movk	w10, #0x2d2d, lsl #16
     bc8:	stur	w9, [x8, #3]
     bcc:	str	w10, [x8]
     bd0:	ldr	x8, [x0, #24]
     bd4:	add	x8, x8, #0x7
     bd8:	str	x8, [x0, #24]
     bdc:	mov	w1, w20
     be0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     be4:	ldp	x9, x8, [x0, #16]
     be8:	sub	x9, x9, x8
     bec:	cmp	x9, #0x1
     bf0:	b.hi	c08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x458>  // b.pmore
     bf4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     bf8:	add	x1, x1, #0x0
     bfc:	mov	w2, #0x2                   	// #2
     c00:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     c04:	b	c1c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x46c>
     c08:	mov	w9, #0xa29                 	// #2601
     c0c:	strh	w9, [x8]
     c10:	ldr	x8, [x0, #24]
     c14:	add	x8, x8, #0x2
     c18:	str	x8, [x0, #24]
     c1c:	mov	x0, x22
     c20:	mov	x1, x21
     c24:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     c28:	ldr	w1, [x19, #72]
     c2c:	cbz	w1, d44 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x594>
     c30:	mov	x0, x19
     c34:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     c38:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     c3c:	ldr	x8, [x8]
     c40:	mov	x22, x0
     c44:	ldrb	w8, [x8]
     c48:	cbz	w8, d38 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x588>
     c4c:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     c50:	add	x0, x0, #0x0
     c54:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     c58:	tbz	w0, #0, d38 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x588>
     c5c:	bl	0 <_ZN4llvm4dbgsEv>
     c60:	ldp	x9, x8, [x0, #16]
     c64:	sub	x9, x9, x8
     c68:	cmp	x9, #0x15
     c6c:	b.hi	c84 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x4d4>  // b.pmore
     c70:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     c74:	add	x1, x1, #0x0
     c78:	mov	w2, #0x16                  	// #22
     c7c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     c80:	b	ca8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x4f8>
     c84:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     c88:	add	x9, x9, #0x0
     c8c:	ldur	x10, [x9, #14]
     c90:	ldr	q0, [x9]
     c94:	stur	x10, [x8, #14]
     c98:	str	q0, [x8]
     c9c:	ldr	x8, [x0, #24]
     ca0:	add	x8, x8, #0x16
     ca4:	str	x8, [x0, #24]
     ca8:	ldr	w1, [x19, #72]
     cac:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     cb0:	ldp	x9, x8, [x0, #16]
     cb4:	sub	x9, x9, x8
     cb8:	cmp	x9, #0x6
     cbc:	b.hi	cd4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x524>  // b.pmore
     cc0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     cc4:	add	x1, x1, #0x0
     cc8:	mov	w2, #0x7                   	// #7
     ccc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     cd0:	b	cf8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x548>
     cd4:	mov	w9, #0x3e2d                	// #15917
     cd8:	mov	w10, #0x2029                	// #8233
     cdc:	movk	w9, #0x2820, lsl #16
     ce0:	movk	w10, #0x2d2d, lsl #16
     ce4:	stur	w9, [x8, #3]
     ce8:	str	w10, [x8]
     cec:	ldr	x8, [x0, #24]
     cf0:	add	x8, x8, #0x7
     cf4:	str	x8, [x0, #24]
     cf8:	mov	w1, w20
     cfc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     d00:	ldp	x9, x8, [x0, #16]
     d04:	sub	x9, x9, x8
     d08:	cmp	x9, #0x1
     d0c:	b.hi	d24 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x574>  // b.pmore
     d10:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     d14:	add	x1, x1, #0x0
     d18:	mov	w2, #0x2                   	// #2
     d1c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d20:	b	d38 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x588>
     d24:	mov	w9, #0xa29                 	// #2601
     d28:	strh	w9, [x8]
     d2c:	ldr	x8, [x0, #24]
     d30:	add	x8, x8, #0x2
     d34:	str	x8, [x0, #24]
     d38:	mov	x0, x22
     d3c:	mov	x1, x21
     d40:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     d44:	str	w20, [x19, #68]
     d48:	cbz	w24, d50 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5a0>
     d4c:	str	w20, [x19, #72]
     d50:	mov	w0, w20
     d54:	ldp	x20, x19, [sp, #64]
     d58:	ldp	x22, x21, [sp, #48]
     d5c:	ldp	x24, x23, [sp, #32]
     d60:	ldr	x25, [sp, #16]
     d64:	ldp	x29, x30, [sp], #80
     d68:	ret
     d6c:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     d70:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     d74:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     d78:	add	x0, x0, #0x0
     d7c:	add	x1, x1, #0x0
     d80:	add	x3, x3, #0x0
     d84:	mov	w2, #0x9c                  	// #156
     d88:	bl	0 <__assert_fail>
     d8c:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     d90:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     d94:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     d98:	add	x0, x0, #0x0
     d9c:	add	x1, x1, #0x0
     da0:	add	x3, x3, #0x0
     da4:	mov	w2, #0x48                  	// #72
     da8:	bl	0 <__assert_fail>

0000000000000dac <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>:
     dac:	ldr	x8, [x1, #8]
     db0:	ldr	x8, [x8]
     db4:	ldrb	w9, [x8, #324]
     db8:	cbz	w9, dd8 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x2c>
     dbc:	ldr	w9, [x0, #8]
     dc0:	cbz	w9, dd8 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x2c>
     dc4:	ldr	w10, [x0, #16]
     dc8:	cmp	w9, w10
     dcc:	b.ne	dd8 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x2c>  // b.any
     dd0:	mov	w0, #0x1                   	// #1
     dd4:	ret
     dd8:	ldrb	w8, [x8, #325]
     ddc:	cbz	w8, dfc <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x50>
     de0:	ldr	w8, [x0, #12]
     de4:	cbz	w8, dfc <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x50>
     de8:	ldr	w9, [x0, #20]
     dec:	cmp	w8, w9
     df0:	b.ne	dfc <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x50>  // b.any
     df4:	mov	w0, #0x2                   	// #2
     df8:	ret
     dfc:	mov	w0, wzr
     e00:	ret

0000000000000e04 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE>:
     e04:	stp	x29, x30, [sp, #-48]!
     e08:	str	x21, [sp, #16]
     e0c:	stp	x20, x19, [sp, #32]
     e10:	mov	x29, sp
     e14:	ldr	w8, [x0, #56]
     e18:	ldr	x9, [x0, #40]
     e1c:	mov	x19, x0
     e20:	cbz	w8, e80 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x7c>
     e24:	ldr	x10, [x1, #8]
     e28:	ldr	w10, [x10, #796]
     e2c:	cmn	w10, #0x2
     e30:	b.cs	fc0 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x1bc>  // b.hs, b.nlast
     e34:	mov	w11, #0x25                  	// #37
     e38:	mul	w12, w10, w11
     e3c:	sub	w11, w8, #0x1
     e40:	and	w12, w11, w12
     e44:	add	x21, x9, w12, uxtw #4
     e48:	ldr	w13, [x21]
     e4c:	cmp	w10, w13
     e50:	b.eq	e84 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x80>  // b.none
     e54:	mov	w14, #0x1                   	// #1
     e58:	cmn	w13, #0x1
     e5c:	b.eq	e80 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x7c>  // b.none
     e60:	add	w12, w12, w14
     e64:	and	w12, w12, w11
     e68:	add	x21, x9, w12, uxtw #4
     e6c:	ldr	w13, [x21]
     e70:	add	w14, w14, #0x1
     e74:	cmp	w10, w13
     e78:	b.eq	e84 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x80>  // b.none
     e7c:	b	e58 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x54>
     e80:	add	x21, x9, x8, lsl #4
     e84:	add	x8, x9, x8, lsl #4
     e88:	cmp	x21, x8
     e8c:	b.eq	fa0 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x19c>  // b.none
     e90:	ldr	x20, [x21, #8]
     e94:	ldr	w8, [x20, #8]
     e98:	ldr	w9, [x20]
     e9c:	cmp	w8, w9
     ea0:	b.ne	f80 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x17c>  // b.any
     ea4:	ldr	w8, [x20, #12]
     ea8:	ldr	w9, [x20, #20]
     eac:	cmp	w8, w9
     eb0:	b.eq	f80 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x17c>  // b.none
     eb4:	ldr	w10, [x20, #16]
     eb8:	add	w9, w9, #0x1
     ebc:	cmp	w8, w9
     ec0:	sub	w8, w10, #0x1
     ec4:	stp	w8, w9, [x20, #16]
     ec8:	b.ne	f50 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x14c>  // b.any
     ecc:	ldr	w8, [x20, #32]
     ed0:	ldr	x0, [x20, #24]
     ed4:	cbz	w8, f18 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x114>
     ed8:	lsl	x8, x8, #3
     edc:	mov	x9, x0
     ee0:	ldr	x10, [x9]
     ee4:	ldr	w11, [x10, #8]
     ee8:	ldr	w12, [x10]
     eec:	cmp	w11, w12
     ef0:	b.eq	f60 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x15c>  // b.none
     ef4:	ldr	w12, [x10, #4]
     ef8:	add	w11, w11, #0x1
     efc:	subs	x8, x8, #0x8
     f00:	str	w11, [x10, #8]
     f04:	sub	w11, w12, #0x1
     f08:	add	x9, x9, #0x8
     f0c:	str	w11, [x10, #4]
     f10:	b.ne	ee0 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0xdc>  // b.any
     f14:	cbz	x20, f30 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x12c>
     f18:	add	x8, x20, #0x28
     f1c:	cmp	x0, x8
     f20:	b.eq	f28 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x124>  // b.none
     f24:	bl	0 <free>
     f28:	mov	x0, x20
     f2c:	bl	0 <_ZdlPv>
     f30:	mov	w8, #0xfffffffe            	// #-2
     f34:	str	xzr, [x21, #8]
     f38:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     f3c:	str	w8, [x21]
     f40:	ldr	d0, [x19, #48]
     f44:	ldr	d1, [x9]
     f48:	add	v0.2s, v0.2s, v1.2s
     f4c:	str	d0, [x19, #48]
     f50:	ldp	x20, x19, [sp, #32]
     f54:	ldr	x21, [sp, #16]
     f58:	ldp	x29, x30, [sp], #48
     f5c:	ret
     f60:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     f64:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     f68:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     f6c:	add	x0, x0, #0x0
     f70:	add	x1, x1, #0x0
     f74:	add	x3, x3, #0x0
     f78:	mov	w2, #0x73                  	// #115
     f7c:	bl	0 <__assert_fail>
     f80:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     f84:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     f88:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     f8c:	add	x0, x0, #0x0
     f90:	add	x1, x1, #0x0
     f94:	add	x3, x3, #0x0
     f98:	mov	w2, #0x8f                  	// #143
     f9c:	bl	0 <__assert_fail>
     fa0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     fa4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     fa8:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     fac:	add	x0, x0, #0x0
     fb0:	add	x1, x1, #0x0
     fb4:	add	x3, x3, #0x0
     fb8:	mov	w2, #0xa5                  	// #165
     fbc:	bl	0 <__assert_fail>
     fc0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     fc4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     fc8:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
     fcc:	add	x0, x0, #0x0
     fd0:	add	x1, x1, #0x0
     fd4:	add	x3, x3, #0x0
     fd8:	mov	w2, #0x252                 	// #594
     fdc:	bl	0 <__assert_fail>

0000000000000fe0 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE>:
     fe0:	stp	x29, x30, [sp, #-48]!
     fe4:	stp	x22, x21, [sp, #16]
     fe8:	stp	x20, x19, [sp, #32]
     fec:	mov	x29, sp
     ff0:	ldr	x8, [x1, #8]
     ff4:	ldr	x9, [x8]
     ff8:	ldrb	w8, [x9, #324]
     ffc:	ldrb	w21, [x9, #325]
    1000:	orr	w9, w21, w8
    1004:	cbz	w9, 11bc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x1dc>
    1008:	adrp	x22, 0 <_ZN4llvm9DebugFlagE>
    100c:	ldr	x22, [x22]
    1010:	mov	x19, x1
    1014:	mov	x20, x0
    1018:	cbz	w8, 10b4 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xd4>
    101c:	ldr	w8, [x20, #16]
    1020:	sub	w8, w8, #0x1
    1024:	str	w8, [x20, #16]
    1028:	ldrb	w8, [x22]
    102c:	cbz	w8, 10b4 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xd4>
    1030:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    1034:	add	x0, x0, #0x0
    1038:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    103c:	tbz	w0, #0, 10b4 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xd4>
    1040:	bl	0 <_ZN4llvm4dbgsEv>
    1044:	ldp	x9, x8, [x0, #16]
    1048:	sub	x9, x9, x8
    104c:	cmp	x9, #0x19
    1050:	b.hi	1068 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x88>  // b.pmore
    1054:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    1058:	add	x1, x1, #0x0
    105c:	mov	w2, #0x1a                  	// #26
    1060:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1064:	b	108c <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xac>
    1068:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    106c:	add	x9, x9, #0x0
    1070:	ldur	q0, [x9, #10]
    1074:	ldr	q1, [x9]
    1078:	stur	q0, [x8, #10]
    107c:	str	q1, [x8]
    1080:	ldr	x8, [x0, #24]
    1084:	add	x8, x8, #0x1a
    1088:	str	x8, [x0, #24]
    108c:	ldr	w1, [x19]
    1090:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1094:	ldp	x9, x8, [x0, #16]
    1098:	sub	x9, x9, x8
    109c:	cmp	x9, #0x26
    10a0:	b.hi	1104 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x124>  // b.pmore
    10a4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    10a8:	add	x1, x1, #0x0
    10ac:	mov	w2, #0x27                  	// #39
    10b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    10b4:	cbz	w21, 11ac <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x1cc>
    10b8:	ldr	w8, [x20, #20]
    10bc:	sub	w8, w8, #0x1
    10c0:	str	w8, [x20, #20]
    10c4:	ldrb	w8, [x22]
    10c8:	cbz	w8, 11ac <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x1cc>
    10cc:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    10d0:	add	x0, x0, #0x0
    10d4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    10d8:	tbz	w0, #0, 11ac <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x1cc>
    10dc:	bl	0 <_ZN4llvm4dbgsEv>
    10e0:	ldp	x9, x8, [x0, #16]
    10e4:	sub	x9, x9, x8
    10e8:	cmp	x9, #0x19
    10ec:	b.hi	1130 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x150>  // b.pmore
    10f0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    10f4:	add	x1, x1, #0x0
    10f8:	mov	w2, #0x1a                  	// #26
    10fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1100:	b	1154 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x174>
    1104:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    1108:	add	x9, x9, #0x0
    110c:	ldur	x10, [x9, #31]
    1110:	ldp	q1, q0, [x9]
    1114:	stur	x10, [x8, #31]
    1118:	stp	q1, q0, [x8]
    111c:	ldr	x8, [x0, #24]
    1120:	add	x8, x8, #0x27
    1124:	str	x8, [x0, #24]
    1128:	cbnz	w21, 10b8 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xd8>
    112c:	b	11ac <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x1cc>
    1130:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    1134:	add	x9, x9, #0x0
    1138:	ldur	q0, [x9, #10]
    113c:	ldr	q1, [x9]
    1140:	stur	q0, [x8, #10]
    1144:	str	q1, [x8]
    1148:	ldr	x8, [x0, #24]
    114c:	add	x8, x8, #0x1a
    1150:	str	x8, [x0, #24]
    1154:	ldr	w1, [x19]
    1158:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    115c:	ldp	x9, x8, [x0, #16]
    1160:	sub	x9, x9, x8
    1164:	cmp	x9, #0x27
    1168:	b.hi	1188 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x1a8>  // b.pmore
    116c:	ldp	x20, x19, [sp, #32]
    1170:	ldp	x22, x21, [sp, #16]
    1174:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    1178:	add	x1, x1, #0x0
    117c:	mov	w2, #0x28                  	// #40
    1180:	ldp	x29, x30, [sp], #48
    1184:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1188:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    118c:	add	x9, x9, #0x0
    1190:	ldr	x10, [x9, #32]
    1194:	ldp	q1, q0, [x9]
    1198:	str	x10, [x8, #32]
    119c:	stp	q1, q0, [x8]
    11a0:	ldr	x8, [x0, #24]
    11a4:	add	x8, x8, #0x28
    11a8:	str	x8, [x0, #24]
    11ac:	ldp	x20, x19, [sp, #32]
    11b0:	ldp	x22, x21, [sp, #16]
    11b4:	ldp	x29, x30, [sp], #48
    11b8:	ret
    11bc:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    11c0:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    11c4:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    11c8:	add	x0, x0, #0x0
    11cc:	add	x1, x1, #0x0
    11d0:	add	x3, x3, #0x0
    11d4:	mov	w2, #0xaf                  	// #175
    11d8:	bl	0 <__assert_fail>

00000000000011dc <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE>:
    11dc:	stp	x29, x30, [sp, #-32]!
    11e0:	stp	x20, x19, [sp, #16]
    11e4:	mov	x29, sp
    11e8:	ldr	x20, [x1, #8]
    11ec:	mov	x19, x0
    11f0:	ldr	x8, [x20]
    11f4:	ldrb	w9, [x8, #324]
    11f8:	cbnz	w9, 1204 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x28>
    11fc:	ldrb	w8, [x8, #325]
    1200:	cbz	w8, 12b4 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xd8>
    1204:	mov	x0, x19
    1208:	bl	e04 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE>
    120c:	ldr	w8, [x20, #796]
    1210:	cbz	w8, 1284 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xa8>
    1214:	ldr	w9, [x19, #56]
    1218:	ldr	x10, [x19, #40]
    121c:	cbz	w9, 1274 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x98>
    1220:	cmn	w8, #0x2
    1224:	b.cs	12c0 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xe4>  // b.hs, b.nlast
    1228:	mov	w11, #0x25                  	// #37
    122c:	mul	w12, w8, w11
    1230:	sub	w11, w9, #0x1
    1234:	and	w12, w11, w12
    1238:	add	x15, x10, w12, uxtw #4
    123c:	ldr	w13, [x15]
    1240:	cmp	w13, w8
    1244:	b.eq	1278 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x9c>  // b.none
    1248:	mov	w14, #0x1                   	// #1
    124c:	cmn	w13, #0x1
    1250:	b.eq	1274 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x98>  // b.none
    1254:	add	w12, w12, w14
    1258:	and	w12, w12, w11
    125c:	add	x15, x10, w12, uxtw #4
    1260:	ldr	w13, [x15]
    1264:	add	w14, w14, #0x1
    1268:	cmp	w13, w8
    126c:	b.eq	1278 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x9c>  // b.none
    1270:	b	124c <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x70>
    1274:	add	x15, x10, x9, lsl #4
    1278:	add	x9, x10, x9, lsl #4
    127c:	cmp	x15, x9
    1280:	b.ne	12b4 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xd8>  // b.any
    1284:	ldr	w9, [x19, #68]
    1288:	cmp	w8, w9
    128c:	b.ne	1294 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xb8>  // b.any
    1290:	str	wzr, [x19, #68]
    1294:	ldr	w9, [x19, #76]
    1298:	cmp	w8, w9
    129c:	b.ne	12a4 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xc8>  // b.any
    12a0:	str	wzr, [x19, #76]
    12a4:	ldr	w9, [x19, #72]
    12a8:	cmp	w8, w9
    12ac:	b.ne	12b4 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xd8>  // b.any
    12b0:	str	wzr, [x19, #72]
    12b4:	ldp	x20, x19, [sp, #16]
    12b8:	ldp	x29, x30, [sp], #32
    12bc:	ret
    12c0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    12c4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    12c8:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    12cc:	add	x0, x0, #0x0
    12d0:	add	x1, x1, #0x0
    12d4:	add	x3, x3, #0x0
    12d8:	mov	w2, #0x252                 	// #594
    12dc:	bl	0 <__assert_fail>

00000000000012e0 <_ZN4llvm3mca10LSUnitBaseD1Ev>:
    12e0:	stp	x29, x30, [sp, #-48]!
    12e4:	stp	x22, x21, [sp, #16]
    12e8:	stp	x20, x19, [sp, #32]
    12ec:	mov	x29, sp
    12f0:	adrp	x9, 0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
    12f4:	ldr	w8, [x0, #56]
    12f8:	ldr	x9, [x9]
    12fc:	mov	x19, x0
    1300:	add	x9, x9, #0x10
    1304:	str	x9, [x0]
    1308:	cbz	w8, 1360 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x80>
    130c:	ldr	x9, [x19, #40]
    1310:	lsl	x21, x8, #4
    1314:	add	x22, x9, #0x8
    1318:	b	1334 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x54>
    131c:	mov	x0, x20
    1320:	bl	0 <_ZdlPv>
    1324:	str	xzr, [x22]
    1328:	subs	x21, x21, #0x10
    132c:	add	x22, x22, #0x10
    1330:	b.eq	1360 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x80>  // b.none
    1334:	ldur	w8, [x22, #-8]
    1338:	cmn	w8, #0x3
    133c:	b.hi	1328 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x48>  // b.pmore
    1340:	ldr	x20, [x22]
    1344:	cbz	x20, 1324 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x44>
    1348:	ldr	x0, [x20, #24]
    134c:	add	x8, x20, #0x28
    1350:	cmp	x0, x8
    1354:	b.eq	131c <_ZN4llvm3mca10LSUnitBaseD1Ev+0x3c>  // b.none
    1358:	bl	0 <free>
    135c:	b	131c <_ZN4llvm3mca10LSUnitBaseD1Ev+0x3c>
    1360:	ldr	x0, [x19, #40]
    1364:	bl	0 <_ZdlPv>
    1368:	ldr	x8, [x19, #32]
    136c:	mov	x0, x19
    1370:	add	x8, x8, #0x1
    1374:	str	x8, [x19, #32]
    1378:	ldp	x20, x19, [sp, #32]
    137c:	ldp	x22, x21, [sp, #16]
    1380:	ldp	x29, x30, [sp], #48
    1384:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase17createMemoryGroupEv:

0000000000000000 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #64]
   8:	stp	x20, x19, [sp, #80]
   c:	add	x29, sp, #0x40
  10:	mov	x19, x0
  14:	add	x20, x0, #0x20
  18:	mov	w0, #0x68                  	// #104
  1c:	bl	0 <_Znwm>
  20:	adrp	x8, 0 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>
  24:	ldr	d0, [x8]
  28:	add	x8, x0, #0x28
  2c:	stp	xzr, xzr, [x0]
  30:	str	xzr, [x0, #72]
  34:	str	wzr, [x0, #80]
  38:	str	wzr, [x0, #88]
  3c:	str	xzr, [x0, #96]
  40:	stp	xzr, x8, [x0, #16]
  44:	str	d0, [x0, #32]
  48:	ldr	w8, [x19, #64]
  4c:	stur	x0, [x29, #-8]
  50:	sub	x1, x29, #0x10
  54:	mov	x0, x20
  58:	stur	w8, [x29, #-16]
  5c:	sub	x8, x29, #0x10
  60:	add	x2, x8, #0x8
  64:	add	x8, sp, #0x8
  68:	bl	0 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv>
  6c:	ldur	x20, [x29, #-8]
  70:	cbz	x20, 90 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0x90>
  74:	ldr	x0, [x20, #24]
  78:	add	x8, x20, #0x28
  7c:	cmp	x0, x8
  80:	b.eq	88 <_ZN4llvm3mca10LSUnitBase17createMemoryGroupEv+0x88>  // b.none
  84:	bl	0 <free>
  88:	mov	x0, x20
  8c:	bl	0 <_ZdlPv>
  90:	ldr	w0, [x19, #64]
  94:	add	w8, w0, #0x1
  98:	str	w8, [x19, #64]
  9c:	ldp	x20, x19, [sp, #80]
  a0:	ldp	x29, x30, [sp, #64]
  a4:	add	sp, sp, #0x60
  a8:	ret

Disassembly of section .text._ZN4llvm3mca10LSUnitBase8getGroupEj:

0000000000000000 <_ZN4llvm3mca10LSUnitBase8getGroupEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	w1, e4 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xe4>
   c:	ldr	w9, [x0, #56]
  10:	ldr	x8, [x0, #40]
  14:	cbz	w9, 6c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x6c>
  18:	cmn	w1, #0x2
  1c:	b.cs	104 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x104>  // b.hs, b.nlast
  20:	mov	w10, #0x25                  	// #37
  24:	mul	w11, w1, w10
  28:	sub	w10, w9, #0x1
  2c:	and	w11, w10, w11
  30:	add	x14, x8, w11, uxtw #4
  34:	ldr	w12, [x14]
  38:	cmp	w12, w1
  3c:	b.eq	70 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x70>  // b.none
  40:	mov	w13, #0x1                   	// #1
  44:	cmn	w12, #0x1
  48:	b.eq	6c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x6c>  // b.none
  4c:	add	w11, w11, w13
  50:	and	w11, w11, w10
  54:	add	x14, x8, w11, uxtw #4
  58:	ldr	w12, [x14]
  5c:	add	w13, w13, #0x1
  60:	cmp	w12, w1
  64:	b.eq	70 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x70>  // b.none
  68:	b	44 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x44>
  6c:	add	x14, x8, x9, lsl #4
  70:	add	x10, x8, x9, lsl #4
  74:	cmp	x14, x10
  78:	b.eq	e4 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xe4>  // b.none
  7c:	cbz	w9, d4 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xd4>
  80:	cmn	w1, #0x2
  84:	b.cs	104 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x104>  // b.hs, b.nlast
  88:	mov	w11, #0x25                  	// #37
  8c:	mul	w11, w1, w11
  90:	sub	w9, w9, #0x1
  94:	and	w11, w9, w11
  98:	add	x13, x8, w11, uxtw #4
  9c:	ldr	w12, [x13]
  a0:	cmp	w12, w1
  a4:	b.eq	d8 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xd8>  // b.none
  a8:	mov	w14, #0x1                   	// #1
  ac:	cmn	w12, #0x1
  b0:	b.eq	d4 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xd4>  // b.none
  b4:	add	w11, w11, w14
  b8:	and	w11, w11, w9
  bc:	add	x13, x8, w11, uxtw #4
  c0:	ldr	w12, [x13]
  c4:	add	w14, w14, #0x1
  c8:	cmp	w12, w1
  cc:	b.eq	d8 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xd8>  // b.none
  d0:	b	ac <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xac>
  d4:	mov	x13, x10
  d8:	ldr	x0, [x13, #8]
  dc:	ldp	x29, x30, [sp], #16
  e0:	ret
  e4:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  e8:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  ec:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0x11c                 	// #284
 100:	bl	0 <__assert_fail>
 104:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 108:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 10c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x252                 	// #594
 120:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_:

0000000000000000 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x1]
  14:	add	w8, w8, #0x1
  18:	str	w8, [x1]
  1c:	ldr	w9, [x0, #12]
  20:	ldr	w10, [x0, #20]
  24:	subs	w9, w9, w10
  28:	b.eq	d0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0xd0>  // b.none
  2c:	ldr	w10, [x0, #16]
  30:	mov	x20, x1
  34:	mov	x19, x0
  38:	cbz	w10, 7c <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x7c>
  3c:	cmp	w10, w9
  40:	b.ne	7c <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x7c>  // b.any
  44:	ldr	w9, [x20, #8]
  48:	cmp	w9, w8
  4c:	b.eq	110 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x110>  // b.none
  50:	ldr	w8, [x20, #4]
  54:	ldr	w9, [x20, #80]
  58:	add	w8, w8, #0x1
  5c:	str	w8, [x20, #4]
  60:	ldr	x8, [x19, #96]
  64:	ldr	w8, [x8, #788]
  68:	cmp	w9, w8
  6c:	b.cs	7c <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x7c>  // b.hs, b.nlast
  70:	ldr	w9, [x19, #88]
  74:	str	w8, [x20, #80]
  78:	str	w9, [x20, #72]
  7c:	ldp	w8, w9, [x19, #32]
  80:	add	x21, x19, #0x18
  84:	cmp	w8, w9
  88:	b.cs	b4 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0xb4>  // b.hs, b.nlast
  8c:	ldr	x10, [x21]
  90:	cmp	w8, w9
  94:	str	x20, [x10, w8, uxtw #3]
  98:	b.cs	f0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0xf0>  // b.hs, b.nlast
  9c:	add	w8, w8, #0x1
  a0:	str	w8, [x19, #32]
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	ret
  b4:	add	x1, x21, #0x10
  b8:	mov	w3, #0x8                   	// #8
  bc:	mov	x0, x21
  c0:	mov	x2, xzr
  c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  c8:	ldp	w8, w9, [x19, #32]
  cc:	b	8c <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_+0x8c>
  d0:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  d4:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  d8:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  dc:	add	x0, x0, #0x0
  e0:	add	x1, x1, #0x0
  e4:	add	x3, x3, #0x0
  e8:	mov	w2, #0x52                  	// #82
  ec:	bl	0 <__assert_fail>
  f0:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  f4:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  f8:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x43                  	// #67
 10c:	bl	0 <__assert_fail>
 110:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
 114:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
 118:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup12addSuccessorEPS1_>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x68                  	// #104
 12c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca6LSUnitD0Ev:

0000000000000000 <_ZN4llvm3mca6LSUnitD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x9, 0 <_ZN4llvm3mca6LSUnitD0Ev>
  14:	ldr	w8, [x0, #56]
  18:	ldr	x9, [x9]
  1c:	mov	x19, x0
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	cbz	w8, 80 <_ZN4llvm3mca6LSUnitD0Ev+0x80>
  2c:	ldr	x9, [x19, #40]
  30:	lsl	x21, x8, #4
  34:	add	x22, x9, #0x8
  38:	b	54 <_ZN4llvm3mca6LSUnitD0Ev+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZdlPv>
  44:	str	xzr, [x22]
  48:	subs	x21, x21, #0x10
  4c:	add	x22, x22, #0x10
  50:	b.eq	80 <_ZN4llvm3mca6LSUnitD0Ev+0x80>  // b.none
  54:	ldur	w8, [x22, #-8]
  58:	cmn	w8, #0x3
  5c:	b.hi	48 <_ZN4llvm3mca6LSUnitD0Ev+0x48>  // b.pmore
  60:	ldr	x20, [x22]
  64:	cbz	x20, 44 <_ZN4llvm3mca6LSUnitD0Ev+0x44>
  68:	ldr	x0, [x20, #24]
  6c:	add	x8, x20, #0x28
  70:	cmp	x0, x8
  74:	b.eq	3c <_ZN4llvm3mca6LSUnitD0Ev+0x3c>  // b.none
  78:	bl	0 <free>
  7c:	b	3c <_ZN4llvm3mca6LSUnitD0Ev+0x3c>
  80:	ldr	x0, [x19, #40]
  84:	bl	0 <_ZdlPv>
  88:	ldr	x8, [x19, #32]
  8c:	mov	x0, x19
  90:	add	x8, x8, #0x1
  94:	str	x8, [x19, #32]
  98:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  9c:	mov	x0, x19
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldp	x22, x21, [sp, #16]
  a8:	ldp	x29, x30, [sp], #48
  ac:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1, #8]
  10:	mov	x19, x1
  14:	ldr	w9, [x8, #796]
  18:	str	w9, [x29, #28]
  1c:	ldr	w8, [x0, #56]
  20:	cbz	w8, 90 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x90>
  24:	cmn	w9, #0x2
  28:	b.cs	d8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xd8>  // b.hs, b.nlast
  2c:	ldr	x10, [x0, #40]
  30:	mov	w11, #0x25                  	// #37
  34:	mul	w12, w9, w11
  38:	sub	w11, w8, #0x1
  3c:	and	w12, w11, w12
  40:	add	x8, x10, w12, uxtw #4
  44:	ldr	w14, [x8]
  48:	cmp	w9, w14
  4c:	b.eq	b4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xb4>  // b.none
  50:	mov	x13, xzr
  54:	mov	w16, #0x1                   	// #1
  58:	mov	w15, #0xfffffffe            	// #-2
  5c:	cmn	w14, #0x1
  60:	b.eq	cc <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xcc>  // b.none
  64:	cmp	x13, #0x0
  68:	add	w12, w12, w16
  6c:	ccmp	w14, w15, #0x0, eq  // eq = none
  70:	and	w12, w12, w11
  74:	csel	x13, x13, x8, ne  // ne = any
  78:	add	x8, x10, w12, uxtw #4
  7c:	ldr	w14, [x8]
  80:	add	w16, w16, #0x1
  84:	cmp	w9, w14
  88:	b.eq	b4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xb4>  // b.none
  8c:	b	5c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5c>
  90:	mov	x3, xzr
  94:	add	x0, x0, #0x20
  98:	add	x1, x29, #0x1c
  9c:	add	x2, x29, #0x1c
  a0:	bl	0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  a4:	ldr	w9, [x29, #28]
  a8:	mov	x8, x0
  ac:	str	xzr, [x0, #8]
  b0:	str	w9, [x0]
  b4:	ldr	x0, [x8, #8]
  b8:	mov	x1, x19
  bc:	bl	0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  c0:	ldr	x19, [sp, #16]
  c4:	ldp	x29, x30, [sp], #32
  c8:	ret
  cc:	cmp	x13, #0x0
  d0:	csel	x3, x8, x13, eq  // eq = none
  d4:	b	94 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x94>
  d8:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  dc:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  e0:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x252                 	// #594
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w9, [x0, #24]
  14:	mov	x21, x2
  18:	mov	x22, x1
  1c:	mov	x19, x0
  20:	mov	x20, x8
  24:	cbz	w9, 60 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_+0x60>
  28:	ldr	w10, [x22]
  2c:	cmn	w10, #0x2
  30:	b.cs	104 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_+0x104>  // b.hs, b.nlast
  34:	ldr	x8, [x19, #8]
  38:	mov	w11, #0x25                  	// #37
  3c:	mul	w12, w10, w11
  40:	sub	w11, w9, #0x1
  44:	and	w12, w12, w11
  48:	add	x0, x8, w12, uxtw #4
  4c:	ldr	w14, [x0]
  50:	cmp	w10, w14
  54:	b.ne	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_+0xb8>  // b.any
  58:	mov	w10, wzr
  5c:	b	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_+0x94>
  60:	mov	x3, xzr
  64:	mov	x0, x19
  68:	mov	x1, x22
  6c:	mov	x2, x22
  70:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_>
  74:	ldr	w8, [x22]
  78:	mov	w10, #0x1                   	// #1
  7c:	str	w8, [x0]
  80:	ldr	x8, [x21]
  84:	str	xzr, [x21]
  88:	str	x8, [x0, #8]
  8c:	ldr	x8, [x19, #8]
  90:	ldr	w9, [x19, #24]
  94:	add	x8, x8, w9, uxtw #4
  98:	ldr	x9, [x19]
  9c:	stp	x0, x8, [x20, #16]
  a0:	strb	w10, [x20, #32]
  a4:	ldp	x22, x21, [sp, #16]
  a8:	stp	x19, x9, [x20]
  ac:	ldp	x20, x19, [sp, #32]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret
  b8:	mov	x13, xzr
  bc:	mov	w16, #0x1                   	// #1
  c0:	mov	w15, #0xfffffffe            	// #-2
  c4:	cmn	w14, #0x1
  c8:	b.eq	f8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_+0xf8>  // b.none
  cc:	cmp	x13, #0x0
  d0:	add	w12, w12, w16
  d4:	ccmp	w14, w15, #0x0, eq  // eq = none
  d8:	and	w12, w12, w11
  dc:	csel	x13, x13, x0, ne  // ne = any
  e0:	add	x0, x8, w12, uxtw #4
  e4:	ldr	w14, [x0]
  e8:	add	w16, w16, #0x1
  ec:	cmp	w10, w14
  f0:	b.eq	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_+0x58>  // b.none
  f4:	b	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_+0xc4>
  f8:	cmp	x13, #0x0
  fc:	csel	x3, x0, x13, eq  // eq = none
 100:	b	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_+0x64>
 104:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_>
 108:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_>
 10c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E11try_emplaceIJS7_EEESt4pairINS_16DenseMapIteratorIjS7_S9_SC_Lb0EEEbEOjDpOT_>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x252                 	// #594
 120:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	110 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x110>  // b.plast
  54:	cbz	x3, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x19c>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	w8, [x3]
  68:	cmn	w8, #0x1
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x19c>
  a0:	ldr	w8, [x20]
  a4:	cmn	w8, #0x2
  a8:	b.cs	1bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x1bc>  // b.hs, b.nlast
  ac:	ldr	x9, [x19, #8]
  b0:	mov	w11, #0x25                  	// #37
  b4:	mul	w11, w8, w11
  b8:	sub	w10, w10, #0x1
  bc:	and	w11, w11, w10
  c0:	add	x3, x9, w11, uxtw #4
  c4:	ldr	w13, [x3]
  c8:	cmp	w8, w13
  cc:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x54>  // b.none
  d0:	mov	x12, xzr
  d4:	mov	w15, #0x1                   	// #1
  d8:	mov	w14, #0xfffffffe            	// #-2
  dc:	cmn	w13, #0x1
  e0:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x190>  // b.none
  e4:	cmp	x12, #0x0
  e8:	add	w11, w11, w15
  ec:	ccmp	w13, w14, #0x0, eq  // eq = none
  f0:	and	w11, w11, w10
  f4:	csel	x12, x12, x3, ne  // ne = any
  f8:	add	x3, x9, w11, uxtw #4
  fc:	ldr	w13, [x3]
 100:	add	w15, w15, #0x1
 104:	cmp	w8, w13
 108:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x54>  // b.none
 10c:	b	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0xdc>
 110:	mov	x0, x19
 114:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
 118:	ldr	w10, [x19, #24]
 11c:	cbz	w10, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x19c>
 120:	ldr	w8, [x20]
 124:	cmn	w8, #0x2
 128:	b.cs	1bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x1bc>  // b.hs, b.nlast
 12c:	ldr	x9, [x19, #8]
 130:	mov	w11, #0x25                  	// #37
 134:	mul	w11, w8, w11
 138:	sub	w10, w10, #0x1
 13c:	and	w11, w11, w10
 140:	add	x3, x9, w11, uxtw #4
 144:	ldr	w13, [x3]
 148:	cmp	w8, w13
 14c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x54>  // b.none
 150:	mov	x12, xzr
 154:	mov	w15, #0x1                   	// #1
 158:	mov	w14, #0xfffffffe            	// #-2
 15c:	cmn	w13, #0x1
 160:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x190>  // b.none
 164:	cmp	x12, #0x0
 168:	add	w11, w11, w15
 16c:	ccmp	w13, w14, #0x0, eq  // eq = none
 170:	and	w11, w11, w10
 174:	csel	x12, x12, x3, ne  // ne = any
 178:	add	x3, x9, w11, uxtw #4
 17c:	ldr	w13, [x3]
 180:	add	w15, w15, #0x1
 184:	cmp	w8, w13
 188:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x54>  // b.none
 18c:	b	15c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x15c>
 190:	cmp	x12, #0x0
 194:	csel	x3, x3, x12, eq  // eq = none
 198:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_+0x54>
 19c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
 1a0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
 1a4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0x22f                 	// #559
 1b8:	bl	0 <__assert_fail>
 1bc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
 1c0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
 1c4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E20InsertIntoBucketImplIjEEPSC_RKjRKT_SG_>
 1c8:	add	x0, x0, #0x0
 1cc:	add	x1, x1, #0x0
 1d0:	add	x3, x3, #0x0
 1d4:	mov	w2, #0x252                 	// #594
 1d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	w13, #0xffffffff            	// #-1
  c0:	mov	x14, x11
  c4:	stur	w13, [x12, #-16]
  c8:	str	w13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	w10, #0xffffffff            	// #-1
  ec:	str	w10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS3_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS6_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w8, [x0, #24]
  18:	str	xzr, [x0, #16]
  1c:	sub	w9, w8, #0x1
  20:	tst	w8, w9
  24:	b.ne	1b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x1b4>  // b.any
  28:	mov	x19, x2
  2c:	mov	x20, x1
  30:	mov	x21, x0
  34:	cbz	w8, 98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x98>
  38:	ldr	x9, [x21, #8]
  3c:	lsl	x10, x8, #4
  40:	subs	x10, x10, #0x10
  44:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x80>  // b.none
  48:	lsr	x10, x10, #4
  4c:	add	x11, x10, #0x1
  50:	and	x12, x11, #0x1ffffffffffffffe
  54:	add	x13, x9, #0x10
  58:	add	x10, x9, x12, lsl #4
  5c:	mov	w14, #0xffffffff            	// #-1
  60:	mov	x15, x12
  64:	stur	w14, [x13, #-16]
  68:	str	w14, [x13], #32
  6c:	subs	x15, x15, #0x2
  70:	b.ne	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x64>  // b.any
  74:	cmp	x11, x12
  78:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x84>  // b.any
  7c:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x98>
  80:	mov	x10, x9
  84:	add	x8, x9, x8, lsl #4
  88:	mov	w9, #0xffffffff            	// #-1
  8c:	str	w9, [x10], #16
  90:	cmp	x8, x10
  94:	b.ne	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x8c>  // b.any
  98:	cmp	x20, x19
  9c:	b.eq	180 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x180>  // b.none
  a0:	mov	w23, #0x25                  	// #37
  a4:	mov	w24, #0xfffffffe            	// #-2
  a8:	b	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xc4>
  ac:	mov	x0, x22
  b0:	bl	0 <_ZdlPv>
  b4:	str	xzr, [x20, #8]
  b8:	add	x20, x20, #0x10
  bc:	cmp	x20, x19
  c0:	b.eq	180 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x180>  // b.none
  c4:	ldr	w8, [x20]
  c8:	cmn	w8, #0x3
  cc:	b.hi	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xb8>  // b.pmore
  d0:	ldr	w10, [x21, #24]
  d4:	cbz	w10, 140 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x140>
  d8:	ldr	x9, [x21, #8]
  dc:	mul	w11, w8, w23
  e0:	sub	w10, w10, #0x1
  e4:	and	w12, w10, w11
  e8:	add	x11, x9, w12, uxtw #4
  ec:	ldr	w14, [x11]
  f0:	cmp	w8, w14
  f4:	b.eq	194 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x194>  // b.none
  f8:	mov	x13, xzr
  fc:	mov	w15, #0x1                   	// #1
 100:	cmn	w14, #0x1
 104:	b.eq	134 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x134>  // b.none
 108:	cmp	x13, #0x0
 10c:	add	w12, w12, w15
 110:	ccmp	w14, w24, #0x0, eq  // eq = none
 114:	and	w12, w12, w10
 118:	csel	x13, x13, x11, ne  // ne = any
 11c:	add	x11, x9, w12, uxtw #4
 120:	ldr	w14, [x11]
 124:	add	w15, w15, #0x1
 128:	cmp	w8, w14
 12c:	b.ne	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x100>  // b.any
 130:	b	194 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x194>
 134:	cmp	x13, #0x0
 138:	csel	x9, x11, x13, eq  // eq = none
 13c:	b	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x144>
 140:	mov	x9, xzr
 144:	str	w8, [x9]
 148:	ldr	x8, [x20, #8]
 14c:	str	xzr, [x20, #8]
 150:	str	x8, [x9, #8]
 154:	ldr	w8, [x21, #16]
 158:	add	w8, w8, #0x1
 15c:	str	w8, [x21, #16]
 160:	ldr	x22, [x20, #8]
 164:	cbz	x22, b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xb4>
 168:	ldr	x0, [x22, #24]
 16c:	add	x8, x22, #0x28
 170:	cmp	x0, x8
 174:	b.eq	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xac>  // b.none
 178:	bl	0 <free>
 17c:	b	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xac>
 180:	ldp	x20, x19, [sp, #48]
 184:	ldp	x22, x21, [sp, #32]
 188:	ldp	x24, x23, [sp, #16]
 18c:	ldp	x29, x30, [sp], #64
 190:	ret
 194:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 198:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 19c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 1a0:	add	x0, x0, #0x0
 1a4:	add	x1, x1, #0x0
 1a8:	add	x3, x3, #0x0
 1ac:	mov	w2, #0x17a                 	// #378
 1b0:	bl	0 <__assert_fail>
 1b4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 1b8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 1bc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIjSt10unique_ptrINS_3mca11MemoryGroupESt14default_deleteIS4_EENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS7_EEEEjS7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 1c0:	add	x0, x0, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x3, x3, #0x0
 1cc:	mov	w2, #0x15c                 	// #348
 1d0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #16]
   c:	cbz	w9, 24 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x24>
  10:	ldr	w8, [x0, #12]
  14:	ldr	w10, [x0, #20]
  18:	sub	w8, w8, w10
  1c:	cmp	w9, w8
  20:	b.eq	110 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x110>  // b.none
  24:	ldr	x8, [x0, #96]
  28:	add	w9, w9, #0x1
  2c:	str	w9, [x0, #16]
  30:	cbz	x8, 60 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x60>
  34:	ldr	x10, [x1, #8]
  38:	ldr	w11, [x8, #788]
  3c:	ldr	w12, [x10, #788]
  40:	cmp	w11, w12
  44:	b.ge	58 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x58>  // b.tcont
  48:	ldr	w8, [x1]
  4c:	str	x10, [x0, #96]
  50:	str	w8, [x0, #88]
  54:	mov	x8, x10
  58:	cbnz	w9, 74 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x74>
  5c:	b	e8 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xe8>
  60:	ldr	w8, [x1]
  64:	str	w8, [x0, #88]
  68:	ldr	x8, [x1, #8]
  6c:	str	x8, [x0, #96]
  70:	cbz	w9, e8 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xe8>
  74:	ldr	w10, [x0, #12]
  78:	ldr	w11, [x0, #20]
  7c:	sub	w10, w10, w11
  80:	cmp	w9, w10
  84:	b.ne	e8 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xe8>  // b.any
  88:	ldr	w10, [x0, #32]
  8c:	cbz	w10, e8 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xe8>
  90:	ldr	x9, [x0, #24]
  94:	lsl	x10, x10, #3
  98:	b	a8 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xa8>
  9c:	subs	x10, x10, #0x8
  a0:	add	x9, x9, #0x8
  a4:	b.eq	e8 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xe8>  // b.none
  a8:	ldr	x11, [x9]
  ac:	ldr	w12, [x11, #8]
  b0:	ldr	w13, [x11]
  b4:	cmp	w12, w13
  b8:	b.eq	f0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0xf0>  // b.none
  bc:	ldr	w12, [x11, #4]
  c0:	ldr	w13, [x11, #80]
  c4:	add	w12, w12, #0x1
  c8:	str	w12, [x11, #4]
  cc:	ldr	w12, [x8, #788]
  d0:	cmp	w13, w12
  d4:	b.cs	9c <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x9c>  // b.hs, b.nlast
  d8:	ldr	w13, [x0, #88]
  dc:	str	w12, [x11, #80]
  e0:	str	w13, [x11, #72]
  e4:	b	9c <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE+0x9c>
  e8:	ldp	x29, x30, [sp], #16
  ec:	ret
  f0:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
  f4:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
  f8:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x68                  	// #104
 10c:	bl	0 <__assert_fail>
 110:	adrp	x0, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
 114:	adrp	x1, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
 118:	adrp	x3, 0 <_ZN4llvm3mca11MemoryGroup19onInstructionIssuedERKNS0_7InstRefE>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x79                  	// #121
 12c:	bl	0 <__assert_fail>

RegisterFile.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	str	x23, [sp, #16]
       8:	stp	x22, x21, [sp, #32]
       c:	stp	x20, x19, [sp, #48]
      10:	mov	x29, sp
      14:	adrp	x8, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
      18:	ldr	d0, [x8]
      1c:	adrp	x8, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
      20:	ldr	x8, [x8]
      24:	mov	w19, w3
      28:	str	d0, [x0, #24]
      2c:	mov	x22, x2
      30:	add	x8, x8, #0x10
      34:	stp	x8, x2, [x0]
      38:	add	x8, x0, #0x20
      3c:	str	x8, [x0, #16]
      40:	ldr	w23, [x2, #8]
      44:	mov	x20, x1
      48:	mov	x21, x0
      4c:	stp	xzr, xzr, [x0, #112]
      50:	str	xzr, [x0, #128]
      54:	cbz	w23, 64 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x64>
      58:	lsl	x0, x23, #5
      5c:	bl	0 <_Znwm>
      60:	b	68 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x68>
      64:	mov	x0, xzr
      68:	add	x8, x0, x23, lsl #5
      6c:	stp	x0, x0, [x21, #112]
      70:	str	x8, [x21, #128]
      74:	cbz	w23, b4 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xb4>
      78:	adrp	x8, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
      7c:	ldr	x8, [x8]
      80:	mov	x9, #0x100000000           	// #4294967296
      84:	ldr	w8, [x8]
      88:	str	w8, [x0]
      8c:	stp	xzr, x9, [x0, #8]
      90:	str	wzr, [x0, #24]
      94:	strb	wzr, [x0, #28]
      98:	ldrb	w10, [x29, #30]
      9c:	ldrh	w11, [x29, #28]
      a0:	subs	x23, x23, #0x1
      a4:	strb	w10, [x0, #31]
      a8:	sturh	w11, [x0, #29]
      ac:	add	x0, x0, #0x20
      b0:	b.ne	88 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x88>  // b.any
      b4:	str	x0, [x21, #120]
      b8:	ldr	w8, [x22, #8]
      bc:	str	w8, [x21, #144]
      c0:	cbz	w8, 104 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x104>
      c4:	cmp	w8, #0x40
      c8:	add	x0, x21, #0x88
      cc:	b.hi	d8 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xd8>  // b.pmore
      d0:	str	xzr, [x0]
      d4:	b	e4 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xe4>
      d8:	mov	x1, xzr
      dc:	mov	w2, wzr
      e0:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
      e4:	mov	x0, x21
      e8:	mov	x1, x20
      ec:	mov	w2, w19
      f0:	ldp	x20, x19, [sp, #48]
      f4:	ldp	x22, x21, [sp, #32]
      f8:	ldr	x23, [sp, #16]
      fc:	ldp	x29, x30, [sp], #64
     100:	b	124 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj>
     104:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     108:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     10c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     110:	add	x0, x0, #0x0
     114:	add	x1, x1, #0x0
     118:	add	x3, x3, #0x0
     11c:	mov	w2, #0x117                 	// #279
     120:	bl	0 <__assert_fail>

0000000000000124 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj>:
     124:	stp	x29, x30, [sp, #-64]!
     128:	str	x23, [sp, #16]
     12c:	stp	x22, x21, [sp, #32]
     130:	stp	x20, x19, [sp, #48]
     134:	mov	x29, sp
     138:	ldp	w8, w9, [x0, #24]
     13c:	mov	w21, w2
     140:	mov	x20, x1
     144:	mov	x19, x0
     148:	cmp	w8, w9
     14c:	add	x22, x0, #0x10
     150:	b.cs	1e8 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xc4>  // b.hs, b.nlast
     154:	ldr	x10, [x22]
     158:	mov	w11, #0x14                  	// #20
     15c:	cmp	w8, w9
     160:	umaddl	x9, w8, w11, x10
     164:	str	w21, [x9]
     168:	stur	xzr, [x9, #4]
     16c:	stur	xzr, [x9, #9]
     170:	b.cs	224 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x100>  // b.hs, b.nlast
     174:	add	w8, w8, #0x1
     178:	str	w8, [x19, #24]
     17c:	ldr	x20, [x20, #64]
     180:	cbz	x20, 1d4 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xb0>
     184:	ldr	w8, [x20, #16]
     188:	cmp	w8, #0x2
     18c:	b.cc	1d4 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xb0>  // b.lo, b.ul, b.last
     190:	mov	x21, xzr
     194:	sub	x22, x8, #0x1
     198:	mov	w23, #0xc                   	// #12
     19c:	ldr	x8, [x20, #8]
     1a0:	add	x8, x8, x21
     1a4:	ldrh	w9, [x8, #32]
     1a8:	cbz	w9, 204 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xe0>
     1ac:	ldr	x9, [x20, #24]
     1b0:	ldrh	w10, [x8, #36]
     1b4:	ldrh	w3, [x8, #34]
     1b8:	add	x1, x8, #0x18
     1bc:	mov	x0, x19
     1c0:	madd	x2, x10, x23, x9
     1c4:	bl	244 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE>
     1c8:	subs	x22, x22, #0x1
     1cc:	add	x21, x21, #0x18
     1d0:	b.ne	19c <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x78>  // b.any
     1d4:	ldp	x20, x19, [sp, #48]
     1d8:	ldp	x22, x21, [sp, #32]
     1dc:	ldr	x23, [sp, #16]
     1e0:	ldp	x29, x30, [sp], #64
     1e4:	ret
     1e8:	add	x1, x22, #0x10
     1ec:	mov	w3, #0x14                  	// #20
     1f0:	mov	x0, x22
     1f4:	mov	x2, xzr
     1f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     1fc:	ldp	w8, w9, [x19, #24]
     200:	b	154 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x30>
     204:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     208:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     20c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     210:	add	x0, x0, #0x0
     214:	add	x1, x1, #0x0
     218:	add	x3, x3, #0x0
     21c:	mov	w2, #0x32                  	// #50
     220:	bl	0 <__assert_fail>
     224:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     228:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     22c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     230:	add	x0, x0, #0x0
     234:	add	x1, x1, #0x0
     238:	add	x3, x3, #0x0
     23c:	mov	w2, #0x43                  	// #67
     240:	bl	0 <__assert_fail>

0000000000000244 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE>:
     244:	sub	sp, sp, #0x70
     248:	stp	x29, x30, [sp, #16]
     24c:	stp	x28, x27, [sp, #32]
     250:	stp	x26, x25, [sp, #48]
     254:	stp	x24, x23, [sp, #64]
     258:	stp	x22, x21, [sp, #80]
     25c:	stp	x20, x19, [sp, #96]
     260:	add	x29, sp, #0x10
     264:	ldp	w24, w9, [x0, #24]
     268:	mov	x22, x3
     26c:	mov	x19, x2
     270:	mov	x21, x1
     274:	mov	x27, x0
     278:	cmp	w24, w9
     27c:	add	x23, x0, #0x10
     280:	mov	w8, w24
     284:	b.cs	570 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x32c>  // b.hs, b.nlast
     288:	ldr	x10, [x23]
     28c:	ldrh	w11, [x21, #8]
     290:	ldrh	w12, [x21, #14]
     294:	ldrb	w13, [x21, #16]
     298:	mov	w14, #0x14                  	// #20
     29c:	cmp	w8, w9
     2a0:	umaddl	x9, w8, w14, x10
     2a4:	stp	w11, wzr, [x9]
     2a8:	stp	w12, wzr, [x9, #8]
     2ac:	strb	w13, [x9, #16]
     2b0:	b.cs	5ec <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x3a8>  // b.hs, b.nlast
     2b4:	add	w8, w8, #0x1
     2b8:	str	w8, [x27, #24]
     2bc:	cbz	x22, 550 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x30c>
     2c0:	ldr	x8, [x27, #8]
     2c4:	mov	w9, #0xc                   	// #12
     2c8:	mov	w25, #0x18                  	// #24
     2cc:	madd	x9, x22, x9, x19
     2d0:	str	x9, [sp]
     2d4:	b	2e8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xa4>
     2d8:	ldr	x9, [sp]
     2dc:	add	x19, x19, #0xc
     2e0:	cmp	x19, x9
     2e4:	b.eq	550 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x30c>  // b.none
     2e8:	ldr	w9, [x19]
     2ec:	ldr	w10, [x8, #32]
     2f0:	cmp	w10, w9
     2f4:	b.ls	5cc <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x388>  // b.plast
     2f8:	ldr	x10, [x8, #24]
     2fc:	add	x10, x10, x9, lsl #5
     300:	ldrh	w9, [x10, #20]
     304:	cbz	x9, 2d8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x94>
     308:	ldr	x28, [x10]
     30c:	add	x3, x28, x9, lsl #1
     310:	str	x3, [sp, #8]
     314:	b	324 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xe0>
     318:	add	x28, x28, #0x2
     31c:	cmp	x28, x3
     320:	b.eq	2d8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x94>  // b.none
     324:	ldrh	w22, [x28]
     328:	ldr	x8, [x27, #112]
     32c:	add	x26, x8, x22, lsl #5
     330:	mov	x21, x26
     334:	ldr	w8, [x21, #16]!
     338:	cmp	w8, #0x0
     33c:	ccmp	w8, w24, #0x4, ne  // ne = any
     340:	b.eq	488 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x244>  // b.none
     344:	bl	0 <_ZN4llvm4errsEv>
     348:	ldp	x9, x8, [x0, #16]
     34c:	mov	x23, x0
     350:	sub	x9, x9, x8
     354:	cmp	x9, #0x11
     358:	b.hi	378 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x134>  // b.pmore
     35c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     360:	mov	w2, #0x12                  	// #18
     364:	mov	x0, x23
     368:	add	x1, x1, #0x0
     36c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     370:	mov	x23, x0
     374:	b	39c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x158>
     378:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     37c:	add	x9, x9, #0x0
     380:	ldr	q0, [x9]
     384:	mov	w9, #0x2072                	// #8306
     388:	strh	w9, [x8, #16]
     38c:	str	q0, [x8]
     390:	ldr	x8, [x23, #24]
     394:	add	x8, x8, #0x12
     398:	str	x8, [x23, #24]
     39c:	ldr	x8, [x27, #8]
     3a0:	ldr	w9, [x8, #8]
     3a4:	cmp	w9, w22
     3a8:	b.ls	58c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x348>  // b.plast
     3ac:	ldr	x9, [x8]
     3b0:	mul	x10, x22, x25
     3b4:	ldr	x8, [x8, #64]
     3b8:	mov	x20, x19
     3bc:	ldr	w9, [x9, x10]
     3c0:	mov	w19, w24
     3c4:	add	x24, x8, x9
     3c8:	cbz	x8, 3dc <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x198>
     3cc:	mov	x0, x24
     3d0:	bl	0 <strlen>
     3d4:	mov	x25, x0
     3d8:	b	3e0 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x19c>
     3dc:	mov	x25, xzr
     3e0:	ldp	x8, x0, [x23, #16]
     3e4:	sub	x8, x8, x0
     3e8:	cmp	x25, x8
     3ec:	b.ls	40c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1c8>  // b.plast
     3f0:	mov	x0, x23
     3f4:	mov	x1, x24
     3f8:	mov	x2, x25
     3fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     400:	mov	x23, x0
     404:	ldr	x0, [x0, #24]
     408:	b	428 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1e4>
     40c:	cbz	x25, 428 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1e4>
     410:	mov	x1, x24
     414:	mov	x2, x25
     418:	bl	0 <memcpy>
     41c:	ldr	x8, [x23, #24]
     420:	add	x0, x8, x25
     424:	str	x0, [x23, #24]
     428:	ldr	x8, [x23, #16]
     42c:	mov	w24, w19
     430:	mov	x19, x20
     434:	mov	w25, #0x18                  	// #24
     438:	sub	x8, x8, x0
     43c:	cmp	x8, #0x23
     440:	b.hi	45c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x218>  // b.pmore
     444:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     448:	mov	w2, #0x24                  	// #36
     44c:	mov	x0, x23
     450:	add	x1, x1, #0x0
     454:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     458:	b	484 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x240>
     45c:	adrp	x8, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     460:	add	x8, x8, #0x0
     464:	ldp	q1, q0, [x8]
     468:	mov	w8, #0x656c                	// #25964
     46c:	movk	w8, #0x2e73, lsl #16
     470:	str	w8, [x0, #32]
     474:	stp	q1, q0, [x0]
     478:	ldr	x8, [x23, #24]
     47c:	add	x8, x8, #0x24
     480:	str	x8, [x23, #24]
     484:	ldr	x3, [sp, #8]
     488:	ldr	w8, [x19, #4]
     48c:	str	w24, [x21]
     490:	strh	w22, [x26, #24]
     494:	str	w8, [x26, #20]
     498:	ldrb	w8, [x19, #8]
     49c:	strb	w8, [x26, #28]
     4a0:	ldr	x8, [x27, #8]
     4a4:	ldr	w9, [x8, #8]
     4a8:	cmp	w9, w22
     4ac:	b.ls	58c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x348>  // b.plast
     4b0:	ldr	x10, [x8, #48]
     4b4:	cbz	x10, 5ac <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x368>
     4b8:	ldr	x11, [x8]
     4bc:	madd	x12, x22, x25, x11
     4c0:	ldr	w12, [x12, #4]
     4c4:	add	x12, x10, x12, lsl #1
     4c8:	ldrh	w14, [x12]
     4cc:	cbz	w14, 318 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xd4>
     4d0:	ldr	x13, [x27, #112]
     4d4:	add	w15, w14, w22
     4d8:	add	x14, x10, #0x2
     4dc:	b	4fc <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2b8>
     4e0:	ldr	x18, [x21]
     4e4:	str	x18, [x17]
     4e8:	strh	w22, [x16]
     4ec:	add	x12, x12, #0x2
     4f0:	ldrh	w16, [x12]
     4f4:	add	w15, w16, w15
     4f8:	cbz	w16, 318 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xd4>
     4fc:	and	x15, x15, #0xffff
     500:	add	x16, x13, x15, lsl #5
     504:	mov	x17, x16
     508:	ldr	w18, [x17, #16]!
     50c:	cbnz	w18, 4ec <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2a8>
     510:	ldrh	w18, [x16, #24]!
     514:	cbz	w18, 4e0 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x29c>
     518:	cmp	w9, w15
     51c:	b.ls	58c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x348>  // b.plast
     520:	madd	x0, x15, x25, x11
     524:	ldr	w1, [x0, #8]
     528:	ldrh	w0, [x10, x1, lsl #1]
     52c:	cbz	w0, 4ec <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2a8>
     530:	add	w0, w0, w15
     534:	add	x1, x14, x1, lsl #1
     538:	cmp	w18, w0, uxth
     53c:	b.eq	4e0 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x29c>  // b.none
     540:	ldrh	w2, [x1], #2
     544:	add	w0, w2, w0
     548:	cbnz	w2, 538 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2f4>
     54c:	b	4ec <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2a8>
     550:	ldp	x20, x19, [sp, #96]
     554:	ldp	x22, x21, [sp, #80]
     558:	ldp	x24, x23, [sp, #64]
     55c:	ldp	x26, x25, [sp, #48]
     560:	ldp	x28, x27, [sp, #32]
     564:	ldp	x29, x30, [sp, #16]
     568:	add	sp, sp, #0x70
     56c:	ret
     570:	add	x1, x23, #0x10
     574:	mov	w3, #0x14                  	// #20
     578:	mov	x0, x23
     57c:	mov	x2, xzr
     580:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     584:	ldp	w8, w9, [x27, #24]
     588:	b	288 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x44>
     58c:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     590:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     594:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     598:	add	x0, x0, #0x0
     59c:	add	x1, x1, #0x0
     5a0:	add	x3, x3, #0x0
     5a4:	mov	w2, #0x1b9                 	// #441
     5a8:	bl	0 <__assert_fail>
     5ac:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5b0:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5b4:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5b8:	add	x0, x0, #0x0
     5bc:	add	x1, x1, #0x0
     5c0:	add	x3, x3, #0x0
     5c4:	mov	w2, #0xd1                  	// #209
     5c8:	bl	0 <__assert_fail>
     5cc:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5d0:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5d4:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5d8:	add	x0, x0, #0x0
     5dc:	add	x1, x1, #0x0
     5e0:	add	x3, x3, #0x0
     5e4:	mov	w2, #0x219                 	// #537
     5e8:	bl	0 <__assert_fail>
     5ec:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5f0:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5f4:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     5f8:	add	x0, x0, #0x0
     5fc:	add	x1, x1, #0x0
     600:	add	x3, x3, #0x0
     604:	mov	w2, #0x43                  	// #67
     608:	bl	0 <__assert_fail>

000000000000060c <_ZN4llvm3mca12RegisterFile10cycleStartEv>:
     60c:	ldr	w8, [x0, #24]
     610:	cbz	w8, 688 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x7c>
     614:	ldr	x9, [x0, #16]
     618:	mov	w10, #0x14                  	// #20
     61c:	mul	x10, x8, x10
     620:	sub	x11, x10, #0x14
     624:	cmp	x11, #0x13
     628:	mov	x10, x9
     62c:	b.ls	670 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x64>  // b.plast
     630:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
     634:	movk	x10, #0xcccd
     638:	umulh	x10, x11, x10
     63c:	lsr	x10, x10, #4
     640:	add	x11, x10, #0x1
     644:	mov	w13, #0x14                  	// #20
     648:	and	x12, x11, #0x1ffffffffffffffe
     64c:	madd	x10, x12, x13, x9
     650:	add	x13, x9, #0x20
     654:	mov	x14, x12
     658:	stur	wzr, [x13, #-20]
     65c:	str	wzr, [x13], #40
     660:	subs	x14, x14, #0x2
     664:	b.ne	658 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x4c>  // b.any
     668:	cmp	x11, x12
     66c:	b.eq	688 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x7c>  // b.none
     670:	mov	w11, #0x14                  	// #20
     674:	madd	x8, x8, x11, x9
     678:	str	wzr, [x10, #12]
     67c:	add	x10, x10, #0x14
     680:	cmp	x8, x10
     684:	b.ne	678 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x6c>  // b.any
     688:	ret

000000000000068c <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>:
     68c:	stp	x29, x30, [sp, #-16]!
     690:	mov	x29, sp
     694:	ldp	w9, w8, [x1]
     698:	cbz	w9, 6d8 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x4c>
     69c:	ldr	w10, [x0, #24]
     6a0:	cmp	w10, w9
     6a4:	b.ls	708 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x7c>  // b.plast
     6a8:	ldr	x10, [x0, #16]
     6ac:	mov	w11, #0x14                  	// #20
     6b0:	cmp	x3, x9
     6b4:	madd	x10, x9, x11, x10
     6b8:	ldr	w11, [x10, #4]
     6bc:	add	w11, w11, w8
     6c0:	str	w11, [x10, #4]
     6c4:	b.ls	728 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x9c>  // b.plast
     6c8:	lsl	x9, x9, #2
     6cc:	ldr	w10, [x2, x9]
     6d0:	add	w10, w10, w8
     6d4:	str	w10, [x2, x9]
     6d8:	ldr	w9, [x0, #24]
     6dc:	cbz	w9, 708 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x7c>
     6e0:	ldr	x9, [x0, #16]
     6e4:	ldr	w10, [x9, #4]
     6e8:	add	w10, w10, w8
     6ec:	str	w10, [x9, #4]
     6f0:	cbz	x3, 728 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x9c>
     6f4:	ldr	w9, [x2]
     6f8:	add	w8, w9, w8
     6fc:	str	w8, [x2]
     700:	ldp	x29, x30, [sp], #16
     704:	ret
     708:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     70c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     710:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     714:	add	x0, x0, #0x0
     718:	add	x1, x1, #0x0
     71c:	add	x3, x3, #0x0
     720:	mov	w2, #0x95                  	// #149
     724:	bl	0 <__assert_fail>
     728:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     72c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     730:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     734:	add	x0, x0, #0x0
     738:	add	x1, x1, #0x0
     73c:	add	x3, x3, #0x0
     740:	mov	w2, #0x1ab                 	// #427
     744:	bl	0 <__assert_fail>

0000000000000748 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>:
     748:	stp	x29, x30, [sp, #-16]!
     74c:	mov	x29, sp
     750:	ldp	w9, w8, [x1]
     754:	cbz	w9, 794 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x4c>
     758:	ldr	w10, [x0, #24]
     75c:	cmp	w10, w9
     760:	b.ls	7c4 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x7c>  // b.plast
     764:	ldr	x10, [x0, #16]
     768:	mov	w11, #0x14                  	// #20
     76c:	cmp	x3, x9
     770:	madd	x10, x9, x11, x10
     774:	ldr	w11, [x10, #4]
     778:	sub	w11, w11, w8
     77c:	str	w11, [x10, #4]
     780:	b.ls	7e4 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x9c>  // b.plast
     784:	lsl	x9, x9, #2
     788:	ldr	w10, [x2, x9]
     78c:	add	w10, w10, w8
     790:	str	w10, [x2, x9]
     794:	ldr	w9, [x0, #24]
     798:	cbz	w9, 7c4 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x7c>
     79c:	ldr	x9, [x0, #16]
     7a0:	ldr	w10, [x9, #4]
     7a4:	sub	w10, w10, w8
     7a8:	str	w10, [x9, #4]
     7ac:	cbz	x3, 7e4 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x9c>
     7b0:	ldr	w9, [x2]
     7b4:	add	w8, w9, w8
     7b8:	str	w8, [x2]
     7bc:	ldp	x29, x30, [sp], #16
     7c0:	ret
     7c4:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     7c8:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     7cc:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     7d0:	add	x0, x0, #0x0
     7d4:	add	x1, x1, #0x0
     7d8:	add	x3, x3, #0x0
     7dc:	mov	w2, #0x95                  	// #149
     7e0:	bl	0 <__assert_fail>
     7e4:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     7e8:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     7ec:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     7f0:	add	x0, x0, #0x0
     7f4:	add	x1, x1, #0x0
     7f8:	add	x3, x3, #0x0
     7fc:	mov	w2, #0x1ab                 	// #427
     800:	bl	0 <__assert_fail>

0000000000000804 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE>:
     804:	stp	x29, x30, [sp, #-96]!
     808:	stp	x28, x27, [sp, #16]
     80c:	stp	x26, x25, [sp, #32]
     810:	stp	x24, x23, [sp, #48]
     814:	stp	x22, x21, [sp, #64]
     818:	stp	x20, x19, [sp, #80]
     81c:	mov	x29, sp
     820:	ldrh	w28, [x2, #12]
     824:	cbz	x28, de4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5e0>
     828:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     82c:	ldr	x8, [x8]
     830:	mov	x22, x4
     834:	mov	x23, x3
     838:	mov	x19, x2
     83c:	ldrb	w8, [x8]
     840:	mov	x20, x1
     844:	mov	x21, x0
     848:	cbz	w8, 9b8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1b4>
     84c:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     850:	add	x0, x0, #0x0
     854:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     858:	tbz	w0, #0, 9b8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1b4>
     85c:	bl	0 <_ZN4llvm4dbgsEv>
     860:	ldp	x9, x8, [x0, #16]
     864:	sub	x9, x9, x8
     868:	cmp	x9, #0x20
     86c:	b.hi	884 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x80>  // b.pmore
     870:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     874:	add	x1, x1, #0x0
     878:	mov	w2, #0x21                  	// #33
     87c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     880:	b	8a8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0xa4>
     884:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     888:	add	x9, x9, #0x0
     88c:	ldp	q1, q0, [x9]
     890:	mov	w9, #0x20                  	// #32
     894:	strb	w9, [x8, #32]
     898:	stp	q1, q0, [x8]
     89c:	ldr	x8, [x0, #24]
     8a0:	add	x8, x8, #0x21
     8a4:	str	x8, [x0, #24]
     8a8:	and	x1, x20, #0xffffffff
     8ac:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     8b0:	ldp	x9, x8, [x0, #16]
     8b4:	mov	x24, x0
     8b8:	sub	x9, x9, x8
     8bc:	cmp	x9, #0x1
     8c0:	b.hi	8e0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0xdc>  // b.pmore
     8c4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     8c8:	add	x1, x1, #0x0
     8cc:	mov	w2, #0x2                   	// #2
     8d0:	mov	x0, x24
     8d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8d8:	mov	x24, x0
     8dc:	b	8f4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0xf0>
     8e0:	mov	w9, #0x202c                	// #8236
     8e4:	strh	w9, [x8]
     8e8:	ldr	x8, [x24, #24]
     8ec:	add	x8, x8, #0x2
     8f0:	str	x8, [x24, #24]
     8f4:	ldr	x8, [x21, #8]
     8f8:	ldr	w9, [x8, #8]
     8fc:	cmp	w9, w28
     900:	b.ls	da4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5a0>  // b.plast
     904:	ldr	x9, [x8]
     908:	mov	w10, #0x18                  	// #24
     90c:	mul	x10, x28, x10
     910:	ldr	x8, [x8, #64]
     914:	ldr	w9, [x9, x10]
     918:	add	x25, x8, x9
     91c:	cbz	x8, 930 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x12c>
     920:	mov	x0, x25
     924:	bl	0 <strlen>
     928:	mov	x26, x0
     92c:	b	934 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x130>
     930:	mov	x26, xzr
     934:	ldp	x8, x0, [x24, #16]
     938:	sub	x8, x8, x0
     93c:	cmp	x26, x8
     940:	b.ls	960 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x15c>  // b.plast
     944:	mov	x0, x24
     948:	mov	x1, x25
     94c:	mov	x2, x26
     950:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     954:	mov	x24, x0
     958:	ldr	x0, [x0, #24]
     95c:	b	97c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x178>
     960:	cbz	x26, 97c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x178>
     964:	mov	x1, x25
     968:	mov	x2, x26
     96c:	bl	0 <memcpy>
     970:	ldr	x8, [x24, #24]
     974:	add	x0, x8, x26
     978:	str	x0, [x24, #24]
     97c:	ldr	x8, [x24, #16]
     980:	sub	x8, x8, x0
     984:	cmp	x8, #0x1
     988:	b.hi	9a4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1a0>  // b.pmore
     98c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     990:	add	x1, x1, #0x0
     994:	mov	w2, #0x2                   	// #2
     998:	mov	x0, x24
     99c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     9a0:	b	9b8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1b4>
     9a4:	mov	w8, #0xa5d                 	// #2653
     9a8:	strh	w8, [x0]
     9ac:	ldr	x8, [x24, #24]
     9b0:	add	x8, x8, #0x2
     9b4:	str	x8, [x24, #24]
     9b8:	ldr	x9, [x21, #112]
     9bc:	ldrb	w24, [x19, #21]
     9c0:	ldrb	w25, [x19, #22]
     9c4:	add	x8, x9, x28, lsl #5
     9c8:	ldr	w10, [x8, #16]
     9cc:	str	w10, [x19, #16]
     9d0:	ldrh	w27, [x8, #24]
     9d4:	orr	w8, w25, w24
     9d8:	cmp	w8, #0x0
     9dc:	cset	w8, eq  // eq = none
     9e0:	cbz	x27, a24 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x220>
     9e4:	cmp	w27, w28
     9e8:	b.eq	a24 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x220>  // b.none
     9ec:	ldrb	w10, [x19, #20]
     9f0:	cbnz	w10, a28 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x224>
     9f4:	add	x8, x9, x27, lsl #5
     9f8:	ldr	x0, [x8, #8]
     9fc:	cbz	x0, a1c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x218>
     a00:	lsl	x8, x27, #5
     a04:	ldr	w1, [x9, x8]
     a08:	cmp	w1, w20
     a0c:	b.eq	a1c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x218>  // b.none
     a10:	cbnz	w25, e04 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x600>
     a14:	mov	x2, x19
     a18:	bl	0 <_ZN4llvm3mca10WriteState7addUserEjPS1_>
     a1c:	mov	w8, wzr
     a20:	b	a28 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x224>
     a24:	mov	w27, w28
     a28:	ldrb	w9, [x19, #20]
     a2c:	mov	w11, w27
     a30:	cbnz	w9, a38 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x234>
     a34:	ldrh	w11, [x19, #12]
     a38:	ldr	w9, [x21, #144]
     a3c:	add	x26, x21, #0x88
     a40:	cmp	w9, w11
     a44:	cbz	w24, a64 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x260>
     a48:	b.ls	d64 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x560>  // b.plast
     a4c:	mov	w10, #0x1                   	// #1
     a50:	cmp	w9, #0x40
     a54:	lsl	x10, x10, x11
     a58:	b.hi	a84 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x280>  // b.pmore
     a5c:	mov	x12, x26
     a60:	b	a90 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x28c>
     a64:	b.ls	d84 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x580>  // b.plast
     a68:	mov	w10, #0x1                   	// #1
     a6c:	lsl	x10, x10, x11
     a70:	cmp	w9, #0x40
     a74:	mvn	x10, x10
     a78:	b.hi	b24 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x320>  // b.pmore
     a7c:	mov	x12, x26
     a80:	b	b30 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x32c>
     a84:	ldr	x12, [x26]
     a88:	lsr	w13, w11, #6
     a8c:	add	x12, x12, w13, uxtw #3
     a90:	ldr	x13, [x12]
     a94:	orr	x10, x13, x10
     a98:	str	x10, [x12]
     a9c:	ldr	x10, [x21, #8]
     aa0:	ldr	w12, [x10, #8]
     aa4:	cmp	w12, w11
     aa8:	b.ls	da4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5a0>  // b.plast
     aac:	ldr	x12, [x10, #48]
     ab0:	cbz	x12, dc4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5c0>
     ab4:	ldr	x13, [x10]
     ab8:	mov	w14, #0x18                  	// #24
     abc:	umaddl	x13, w11, w14, x13
     ac0:	ldr	w14, [x13, #4]
     ac4:	ldrh	w13, [x12, x14, lsl #1]
     ac8:	cbz	w13, bc8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x3c4>
     acc:	add	w13, w13, w11
     ad0:	add	x11, x12, x14, lsl #1
     ad4:	add	x11, x11, #0x2
     ad8:	mov	w12, #0x1                   	// #1
     adc:	b	af8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2f4>
     ae0:	ldr	x16, [x15]
     ae4:	orr	x14, x16, x14
     ae8:	str	x14, [x15]
     aec:	ldrh	w14, [x11], #2
     af0:	add	w13, w14, w13
     af4:	cbz	w14, bc8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x3c4>
     af8:	and	w13, w13, #0xffff
     afc:	cmp	w9, w13
     b00:	b.ls	d64 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x560>  // b.plast
     b04:	cmp	w9, #0x41
     b08:	lsl	x14, x12, x13
     b0c:	mov	x15, x26
     b10:	b.cc	ae0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2dc>  // b.lo, b.ul, b.last
     b14:	ldr	x15, [x26]
     b18:	lsr	w16, w13, #6
     b1c:	add	x15, x15, w16, uxtw #3
     b20:	b	ae0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2dc>
     b24:	ldr	x12, [x26]
     b28:	lsr	w13, w11, #6
     b2c:	add	x12, x12, w13, uxtw #3
     b30:	ldr	x13, [x12]
     b34:	and	x10, x13, x10
     b38:	str	x10, [x12]
     b3c:	ldr	x10, [x21, #8]
     b40:	ldr	w12, [x10, #8]
     b44:	cmp	w12, w11
     b48:	b.ls	da4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5a0>  // b.plast
     b4c:	ldr	x12, [x10, #48]
     b50:	cbz	x12, dc4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5c0>
     b54:	ldr	x13, [x10]
     b58:	mov	w14, #0x18                  	// #24
     b5c:	umaddl	x13, w11, w14, x13
     b60:	ldr	w14, [x13, #4]
     b64:	ldrh	w13, [x12, x14, lsl #1]
     b68:	cbz	w13, bc8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x3c4>
     b6c:	add	w13, w13, w11
     b70:	add	x11, x12, x14, lsl #1
     b74:	add	x11, x11, #0x2
     b78:	mov	w12, #0x1                   	// #1
     b7c:	b	b98 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x394>
     b80:	ldr	x16, [x15]
     b84:	and	x14, x16, x14
     b88:	str	x14, [x15]
     b8c:	ldrh	w14, [x11], #2
     b90:	add	w13, w14, w13
     b94:	cbz	w14, bc8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x3c4>
     b98:	and	w13, w13, #0xffff
     b9c:	cmp	w9, w13
     ba0:	b.ls	d84 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x580>  // b.plast
     ba4:	lsl	x14, x12, x13
     ba8:	cmp	w9, #0x41
     bac:	mvn	x14, x14
     bb0:	mov	x15, x26
     bb4:	b.cc	b80 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x37c>  // b.lo, b.ul, b.last
     bb8:	ldr	x15, [x26]
     bbc:	lsr	w16, w13, #6
     bc0:	add	x15, x15, w16, uxtw #3
     bc4:	b	b80 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x37c>
     bc8:	cbnz	w25, c54 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x450>
     bcc:	ldr	x9, [x21, #112]
     bd0:	add	x11, x9, x27, lsl #5
     bd4:	str	w20, [x11]
     bd8:	str	x19, [x11, #8]
     bdc:	strh	wzr, [x11, #26]
     be0:	ldr	w11, [x10, #8]
     be4:	cmp	w11, w27
     be8:	b.ls	da4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5a0>  // b.plast
     bec:	ldr	x11, [x10, #48]
     bf0:	cbz	x11, dc4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5c0>
     bf4:	ldr	x10, [x10]
     bf8:	mov	w12, #0x18                  	// #24
     bfc:	madd	x10, x27, x12, x10
     c00:	ldr	w12, [x10, #4]
     c04:	ldrh	w10, [x11, x12, lsl #1]
     c08:	cbz	w10, c38 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x434>
     c0c:	add	x11, x11, x12, lsl #1
     c10:	add	w10, w10, w27
     c14:	add	x11, x11, #0x2
     c18:	and	x12, x10, #0xffff
     c1c:	add	x12, x9, x12, lsl #5
     c20:	str	w20, [x12]
     c24:	str	x19, [x12, #8]
     c28:	strh	wzr, [x12, #26]
     c2c:	ldrh	w12, [x11], #2
     c30:	add	w10, w12, w10
     c34:	cbnz	w12, c18 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x414>
     c38:	tbz	w8, #0, c54 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x450>
     c3c:	add	x8, x9, x27, lsl #5
     c40:	add	x1, x8, #0x10
     c44:	mov	x0, x21
     c48:	mov	x2, x23
     c4c:	mov	x3, x22
     c50:	bl	68c <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>
     c54:	ldrb	w8, [x19, #20]
     c58:	cbz	w8, d48 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x544>
     c5c:	ldr	x8, [x21, #8]
     c60:	ldr	w9, [x8, #8]
     c64:	cmp	w9, w27
     c68:	b.ls	da4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5a0>  // b.plast
     c6c:	ldr	x10, [x8, #48]
     c70:	cbz	x10, dc4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5c0>
     c74:	ldr	x8, [x8]
     c78:	mov	w9, #0x18                  	// #24
     c7c:	umaddl	x8, w27, w9, x8
     c80:	ldr	w11, [x8, #8]
     c84:	ldrh	w8, [x10, x11, lsl #1]
     c88:	cbz	w8, d48 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x544>
     c8c:	ldr	w9, [x21, #144]
     c90:	add	x10, x10, x11, lsl #1
     c94:	add	w8, w8, w27
     c98:	add	x10, x10, #0x2
     c9c:	mov	w11, #0x1                   	// #1
     ca0:	b	cc8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4c4>
     ca4:	ldr	x14, [x26]
     ca8:	lsr	w12, w12, #6
     cac:	lsl	x12, x12, #3
     cb0:	ldr	x15, [x14, x12]
     cb4:	orr	x13, x15, x13
     cb8:	str	x13, [x14, x12]
     cbc:	ldrh	w12, [x10], #2
     cc0:	add	w8, w12, w8
     cc4:	cbz	w12, d48 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x544>
     cc8:	cbnz	w25, ce4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4e0>
     ccc:	ldr	x12, [x21, #112]
     cd0:	and	x13, x8, #0xffff
     cd4:	add	x12, x12, x13, lsl #5
     cd8:	str	w20, [x12]
     cdc:	str	x19, [x12, #8]
     ce0:	strh	wzr, [x12, #26]
     ce4:	and	w12, w8, #0xffff
     ce8:	cmp	w9, w12
     cec:	cbz	w24, d0c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x508>
     cf0:	b.ls	d64 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x560>  // b.plast
     cf4:	cmp	w9, #0x40
     cf8:	lsl	x13, x11, x12
     cfc:	b.hi	ca4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4a0>  // b.pmore
     d00:	ldr	x12, [x26]
     d04:	orr	x12, x12, x13
     d08:	b	d28 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x524>
     d0c:	b.ls	d84 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x580>  // b.plast
     d10:	lsl	x13, x11, x12
     d14:	cmp	w9, #0x40
     d18:	mvn	x13, x13
     d1c:	b.hi	d30 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x52c>  // b.pmore
     d20:	ldr	x12, [x26]
     d24:	and	x12, x12, x13
     d28:	str	x12, [x26]
     d2c:	b	cbc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4b8>
     d30:	ldr	x14, [x26]
     d34:	lsr	w12, w12, #6
     d38:	lsl	x12, x12, #3
     d3c:	ldr	x15, [x14, x12]
     d40:	and	x13, x15, x13
     d44:	b	cb8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4b4>
     d48:	ldp	x20, x19, [sp, #80]
     d4c:	ldp	x22, x21, [sp, #64]
     d50:	ldp	x24, x23, [sp, #48]
     d54:	ldp	x26, x25, [sp, #32]
     d58:	ldp	x28, x27, [sp, #16]
     d5c:	ldp	x29, x30, [sp], #96
     d60:	ret
     d64:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     d68:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     d6c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     d70:	add	x0, x0, #0x0
     d74:	add	x1, x1, #0x0
     d78:	add	x3, x3, #0x0
     d7c:	mov	w2, #0x59d                 	// #1437
     d80:	bl	0 <__assert_fail>
     d84:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     d88:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     d8c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     d90:	add	x0, x0, #0x0
     d94:	add	x1, x1, #0x0
     d98:	add	x3, x3, #0x0
     d9c:	mov	w2, #0x5e7                 	// #1511
     da0:	bl	0 <__assert_fail>
     da4:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     da8:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     dac:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     db0:	add	x0, x0, #0x0
     db4:	add	x1, x1, #0x0
     db8:	add	x3, x3, #0x0
     dbc:	mov	w2, #0x1b9                 	// #441
     dc0:	bl	0 <__assert_fail>
     dc4:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     dc8:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     dcc:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     dd0:	add	x0, x0, #0x0
     dd4:	add	x1, x1, #0x0
     dd8:	add	x3, x3, #0x0
     ddc:	mov	w2, #0xd1                  	// #209
     de0:	bl	0 <__assert_fail>
     de4:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     de8:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     dec:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     df0:	add	x0, x0, #0x0
     df4:	add	x1, x1, #0x0
     df8:	add	x3, x3, #0x0
     dfc:	mov	w2, #0x97                  	// #151
     e00:	bl	0 <__assert_fail>
     e04:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     e08:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     e0c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     e10:	add	x0, x0, #0x0
     e14:	add	x1, x1, #0x0
     e18:	add	x3, x3, #0x0
     e1c:	mov	w2, #0xbe                  	// #190
     e20:	bl	0 <__assert_fail>

0000000000000e24 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE>:
     e24:	stp	x29, x30, [sp, #-48]!
     e28:	stp	x22, x21, [sp, #16]
     e2c:	stp	x20, x19, [sp, #32]
     e30:	mov	x29, sp
     e34:	ldrb	w8, [x1, #22]
     e38:	cbz	w8, e4c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x28>
     e3c:	ldp	x20, x19, [sp, #32]
     e40:	ldp	x22, x21, [sp, #16]
     e44:	ldp	x29, x30, [sp], #48
     e48:	ret
     e4c:	ldrh	w21, [x1, #12]
     e50:	mov	x19, x1
     e54:	cbz	x21, f9c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x178>
     e58:	ldr	w8, [x19, #8]
     e5c:	cmn	w8, #0x200
     e60:	b.eq	fbc <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x198>  // b.none
     e64:	cmp	w8, #0x1
     e68:	b.ge	fdc <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1b8>  // b.tcont
     e6c:	ldr	x8, [x0, #112]
     e70:	ldrb	w10, [x19, #21]
     e74:	mov	x20, x0
     e78:	mov	w22, w21
     e7c:	add	x9, x8, x21, lsl #5
     e80:	ldrh	w9, [x9, #24]
     e84:	cbz	x9, ea8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x84>
     e88:	cmp	w9, w22
     e8c:	b.eq	ea8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x84>  // b.none
     e90:	cbnz	w10, ec4 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xa0>
     e94:	ldrb	w10, [x19, #20]
     e98:	mov	x21, x9
     e9c:	mov	w22, w9
     ea0:	cbnz	w10, eac <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x88>
     ea4:	b	ecc <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xa8>
     ea8:	cbnz	w10, ecc <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xa8>
     eac:	add	x8, x8, x21, lsl #5
     eb0:	add	x1, x8, #0x10
     eb4:	mov	x0, x20
     eb8:	bl	748 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>
     ebc:	ldr	x8, [x20, #112]
     ec0:	b	ecc <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xa8>
     ec4:	mov	x21, x9
     ec8:	mov	w22, w9
     ecc:	add	x9, x8, x21, lsl #5
     ed0:	ldr	x10, [x9, #8]!
     ed4:	cmp	x10, x19
     ed8:	b.ne	ee0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xbc>  // b.any
     edc:	str	xzr, [x9]
     ee0:	ldr	x10, [x20, #8]
     ee4:	ldr	w9, [x10, #8]
     ee8:	cmp	w9, w22
     eec:	b.ls	ffc <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1d8>  // b.plast
     ef0:	ldr	x9, [x10, #48]
     ef4:	cbz	x9, 101c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1f8>
     ef8:	ldr	x10, [x10]
     efc:	mov	w11, #0x18                  	// #24
     f00:	madd	x11, x21, x11, x10
     f04:	ldr	w12, [x11, #4]
     f08:	ldrh	w11, [x9, x12, lsl #1]
     f0c:	cbz	w11, f48 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x124>
     f10:	add	x12, x9, x12, lsl #1
     f14:	add	w11, w11, w22
     f18:	add	x12, x12, #0x2
     f1c:	b	f2c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x108>
     f20:	ldrh	w13, [x12], #2
     f24:	add	w11, w13, w11
     f28:	cbz	w13, f48 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x124>
     f2c:	and	x13, x11, #0xffff
     f30:	add	x13, x8, x13, lsl #5
     f34:	ldr	x14, [x13, #8]!
     f38:	cmp	x14, x19
     f3c:	b.ne	f20 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xfc>  // b.any
     f40:	str	xzr, [x13]
     f44:	b	f20 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xfc>
     f48:	ldrb	w11, [x19, #20]
     f4c:	cbz	w11, e3c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x18>
     f50:	mov	w11, #0x18                  	// #24
     f54:	madd	x10, x21, x11, x10
     f58:	ldr	w11, [x10, #8]
     f5c:	ldrh	w10, [x9, x11, lsl #1]
     f60:	cbz	w10, e3c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x18>
     f64:	add	x9, x9, x11, lsl #1
     f68:	add	w10, w10, w22
     f6c:	add	x9, x9, #0x2
     f70:	b	f80 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x15c>
     f74:	ldrh	w11, [x9], #2
     f78:	add	w10, w11, w10
     f7c:	cbz	w11, e3c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x18>
     f80:	and	x11, x10, #0xffff
     f84:	add	x11, x8, x11, lsl #5
     f88:	ldr	x12, [x11, #8]!
     f8c:	cmp	x12, x19
     f90:	b.ne	f74 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x150>  // b.any
     f94:	str	xzr, [x11]
     f98:	b	f74 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x150>
     f9c:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     fa0:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     fa4:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     fa8:	add	x0, x0, #0x0
     fac:	add	x1, x1, #0x0
     fb0:	add	x3, x3, #0x0
     fb4:	mov	w2, #0xfc                  	// #252
     fb8:	bl	0 <__assert_fail>
     fbc:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     fc0:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     fc4:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     fc8:	add	x0, x0, #0x0
     fcc:	add	x1, x1, #0x0
     fd0:	add	x3, x3, #0x0
     fd4:	mov	w2, #0xfe                  	// #254
     fd8:	bl	0 <__assert_fail>
     fdc:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     fe0:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     fe4:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
     fe8:	add	x0, x0, #0x0
     fec:	add	x1, x1, #0x0
     ff0:	add	x3, x3, #0x0
     ff4:	mov	w2, #0xff                  	// #255
     ff8:	bl	0 <__assert_fail>
     ffc:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1000:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1004:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1008:	add	x0, x0, #0x0
    100c:	add	x1, x1, #0x0
    1010:	add	x3, x3, #0x0
    1014:	mov	w2, #0x1b9                 	// #441
    1018:	bl	0 <__assert_fail>
    101c:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1020:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1024:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1028:	add	x0, x0, #0x0
    102c:	add	x1, x1, #0x0
    1030:	add	x3, x3, #0x0
    1034:	mov	w2, #0xd1                  	// #209
    1038:	bl	0 <__assert_fail>

000000000000103c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE>:
    103c:	stp	x29, x30, [sp, #-16]!
    1040:	mov	x29, sp
    1044:	ldrh	w12, [x2, #8]
    1048:	ldr	x9, [x0, #112]
    104c:	ldrh	w11, [x1, #12]
    1050:	add	x8, x9, x12, lsl #5
    1054:	add	x10, x9, x11, lsl #5
    1058:	ldr	w8, [x8, #16]
    105c:	ldr	w13, [x10, #16]
    1060:	cmp	w8, w13
    1064:	b.ne	110c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xd0>  // b.any
    1068:	ldrh	w13, [x10, #24]
    106c:	cbz	w13, 108c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x50>
    1070:	cmp	w13, w11
    1074:	b.eq	108c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x50>  // b.none
    1078:	add	x10, x9, x13, lsl #5
    107c:	ldrb	w10, [x10, #28]
    1080:	cbz	w10, 110c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xd0>
    1084:	ldrb	w10, [x1, #20]
    1088:	cbz	w10, 110c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xd0>
    108c:	ldr	w10, [x0, #24]
    1090:	cmp	w10, w8
    1094:	b.ls	11dc <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1a0>  // b.plast
    1098:	ldr	x10, [x0, #16]
    109c:	mov	w14, #0x14                  	// #20
    10a0:	madd	x14, x8, x14, x10
    10a4:	ldr	w14, [x14, #8]
    10a8:	cbz	w14, 10c0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x84>
    10ac:	mov	w15, #0x14                  	// #20
    10b0:	madd	x15, x8, x15, x10
    10b4:	ldr	w15, [x15, #12]
    10b8:	cmp	w15, w14
    10bc:	b.eq	110c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xd0>  // b.none
    10c0:	ldr	w14, [x0, #144]
    10c4:	cmp	w14, w12
    10c8:	b.ls	11fc <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1c0>  // b.plast
    10cc:	mov	w16, #0x1                   	// #1
    10d0:	add	x15, x0, #0x88
    10d4:	cmp	w14, #0x40
    10d8:	lsl	x14, x16, x12
    10dc:	b.ls	10f0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xb4>  // b.plast
    10e0:	ldr	x15, [x15]
    10e4:	lsr	x16, x12, #3
    10e8:	and	x16, x16, #0x1ff8
    10ec:	add	x15, x15, x16
    10f0:	mov	w16, #0x14                  	// #20
    10f4:	ldr	x15, [x15]
    10f8:	madd	x16, x8, x16, x10
    10fc:	ldrb	w16, [x16, #16]
    1100:	and	x14, x15, x14
    1104:	cbz	w16, 1118 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xdc>
    1108:	cbnz	x14, 1118 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xdc>
    110c:	mov	w0, wzr
    1110:	ldp	x29, x30, [sp], #16
    1114:	ret
    1118:	add	x15, x9, x12, lsl #5
    111c:	ldrh	w15, [x15, #24]
    1120:	cmp	w15, #0x0
    1124:	csel	w15, w12, w15, eq  // eq = none
    1128:	add	x12, x9, x15, lsl #5
    112c:	ldrh	w16, [x12, #26]
    1130:	cmp	w13, #0x0
    1134:	csel	w12, w11, w13, eq  // eq = none
    1138:	add	x13, x9, x12, lsl #5
    113c:	cmp	w16, #0x0
    1140:	csel	w11, w15, w16, eq  // eq = none
    1144:	strh	w11, [x13, #26]
    1148:	ldr	x15, [x0, #8]
    114c:	ldr	w13, [x15, #8]
    1150:	cmp	w13, w12
    1154:	b.ls	121c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1e0>  // b.plast
    1158:	ldr	x13, [x15, #48]
    115c:	cbz	x13, 123c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x200>
    1160:	ldr	x15, [x15]
    1164:	mov	w16, #0x18                  	// #24
    1168:	madd	x15, x12, x16, x15
    116c:	ldr	w15, [x15, #4]
    1170:	ldrh	w16, [x13, x15, lsl #1]
    1174:	cbz	w16, 119c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x160>
    1178:	add	x13, x13, x15, lsl #1
    117c:	add	w12, w16, w12
    1180:	add	x13, x13, #0x2
    1184:	and	x15, x12, #0xffff
    1188:	add	x15, x9, x15, lsl #5
    118c:	strh	w11, [x15, #26]
    1190:	ldrh	w15, [x13], #2
    1194:	add	w12, w15, w12
    1198:	cbnz	w15, 1184 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x148>
    119c:	cbz	x14, 11ac <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x170>
    11a0:	mov	w9, #0x1                   	// #1
    11a4:	strb	w9, [x1, #21]
    11a8:	strb	w9, [x2, #41]
    11ac:	ldr	w9, [x1, #64]
    11b0:	cbnz	w9, 125c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x220>
    11b4:	mov	w0, #0x1                   	// #1
    11b8:	mov	w9, #0x14                  	// #20
    11bc:	str	wzr, [x1, #8]
    11c0:	strb	w0, [x1, #22]
    11c4:	madd	x8, x8, x9, x10
    11c8:	ldr	w9, [x8, #12]
    11cc:	add	w9, w9, #0x1
    11d0:	str	w9, [x8, #12]
    11d4:	ldp	x29, x30, [sp], #16
    11d8:	ret
    11dc:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    11e0:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    11e4:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    11e8:	add	x0, x0, #0x0
    11ec:	add	x1, x1, #0x0
    11f0:	add	x3, x3, #0x0
    11f4:	mov	w2, #0x95                  	// #149
    11f8:	bl	0 <__assert_fail>
    11fc:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1200:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1204:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1208:	add	x0, x0, #0x0
    120c:	add	x1, x1, #0x0
    1210:	add	x3, x3, #0x0
    1214:	mov	w2, #0x472                 	// #1138
    1218:	bl	0 <__assert_fail>
    121c:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1220:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1224:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1228:	add	x0, x0, #0x0
    122c:	add	x1, x1, #0x0
    1230:	add	x3, x3, #0x0
    1234:	mov	w2, #0x1b9                 	// #441
    1238:	bl	0 <__assert_fail>
    123c:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1240:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1244:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1248:	add	x0, x0, #0x0
    124c:	add	x1, x1, #0x0
    1250:	add	x3, x3, #0x0
    1254:	mov	w2, #0xd1                  	// #209
    1258:	bl	0 <__assert_fail>
    125c:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1260:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1264:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1268:	add	x0, x0, #0x0
    126c:	add	x1, x1, #0x0
    1270:	add	x3, x3, #0x0
    1274:	mov	w2, #0xcf                  	// #207
    1278:	bl	0 <__assert_fail>

000000000000127c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE>:
    127c:	stp	x29, x30, [sp, #-96]!
    1280:	stp	x28, x27, [sp, #16]
    1284:	stp	x26, x25, [sp, #32]
    1288:	stp	x24, x23, [sp, #48]
    128c:	stp	x22, x21, [sp, #64]
    1290:	stp	x20, x19, [sp, #80]
    1294:	mov	x29, sp
    1298:	ldrh	w25, [x1, #8]
    129c:	cbz	x25, 1a00 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x784>
    12a0:	ldp	x9, x8, [x0, #112]
    12a4:	mov	x19, x0
    12a8:	sub	x8, x8, x9
    12ac:	cmp	x25, x8, asr #5
    12b0:	b.cs	1a00 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x784>  // b.hs, b.nlast
    12b4:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
    12b8:	ldr	x24, [x24]
    12bc:	mov	x20, x2
    12c0:	ldrb	w8, [x24]
    12c4:	cbz	w8, 13e4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x168>
    12c8:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    12cc:	add	x0, x0, #0x0
    12d0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    12d4:	tbz	w0, #0, 13e4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x168>
    12d8:	bl	0 <_ZN4llvm4dbgsEv>
    12dc:	ldp	x9, x8, [x0, #16]
    12e0:	mov	x21, x0
    12e4:	sub	x9, x9, x8
    12e8:	cmp	x9, #0x2c
    12ec:	b.hi	130c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x90>  // b.pmore
    12f0:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    12f4:	add	x1, x1, #0x0
    12f8:	mov	w2, #0x2d                  	// #45
    12fc:	mov	x0, x21
    1300:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1304:	mov	x21, x0
    1308:	b	1330 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xb4>
    130c:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1310:	add	x9, x9, #0x0
    1314:	ldur	q0, [x9, #29]
    1318:	ldp	q2, q1, [x9]
    131c:	stur	q0, [x8, #29]
    1320:	stp	q2, q1, [x8]
    1324:	ldr	x8, [x21, #24]
    1328:	add	x8, x8, #0x2d
    132c:	str	x8, [x21, #24]
    1330:	ldr	x8, [x19, #8]
    1334:	ldr	w9, [x8, #8]
    1338:	cmp	w9, w25
    133c:	b.ls	19c0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x744>  // b.plast
    1340:	ldr	x9, [x8]
    1344:	mov	w10, #0x18                  	// #24
    1348:	mul	x10, x25, x10
    134c:	ldr	x8, [x8, #64]
    1350:	ldr	w9, [x9, x10]
    1354:	add	x22, x8, x9
    1358:	cbz	x8, 136c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xf0>
    135c:	mov	x0, x22
    1360:	bl	0 <strlen>
    1364:	mov	x23, x0
    1368:	b	1370 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xf4>
    136c:	mov	x23, xzr
    1370:	ldp	x8, x0, [x21, #16]
    1374:	sub	x8, x8, x0
    1378:	cmp	x23, x8
    137c:	b.ls	139c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x120>  // b.plast
    1380:	mov	x0, x21
    1384:	mov	x1, x22
    1388:	mov	x2, x23
    138c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1390:	mov	x21, x0
    1394:	ldr	x0, [x0, #24]
    1398:	b	13b8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x13c>
    139c:	cbz	x23, 13b8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x13c>
    13a0:	mov	x1, x22
    13a4:	mov	x2, x23
    13a8:	bl	0 <memcpy>
    13ac:	ldr	x8, [x21, #24]
    13b0:	add	x0, x8, x23
    13b4:	str	x0, [x21, #24]
    13b8:	ldr	x8, [x21, #16]
    13bc:	cmp	x0, x8
    13c0:	b.cs	13d8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x15c>  // b.hs, b.nlast
    13c4:	add	x8, x0, #0x1
    13c8:	mov	w9, #0xa                   	// #10
    13cc:	str	x8, [x21, #24]
    13d0:	strb	w9, [x0]
    13d4:	b	13e4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x168>
    13d8:	mov	w1, #0xa                   	// #10
    13dc:	mov	x0, x21
    13e0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    13e4:	ldr	x8, [x19, #112]
    13e8:	adrp	x22, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
    13ec:	add	x9, x8, x25, lsl #5
    13f0:	ldrh	w9, [x9, #26]
    13f4:	cmp	w9, #0x0
    13f8:	csel	w21, w25, w9, eq  // eq = none
    13fc:	add	x23, x8, x21, lsl #5
    1400:	ldr	x8, [x23, #8]
    1404:	ldr	x22, [x22]
    1408:	cbz	x8, 1448 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1cc>
    140c:	ldr	w8, [x23]
    1410:	ldr	w9, [x22]
    1414:	cmp	w8, w9
    1418:	b.eq	1448 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1cc>  // b.none
    141c:	ldp	w8, w9, [x20, #8]
    1420:	cmp	w8, w9
    1424:	b.cs	19ac <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x730>  // b.hs, b.nlast
    1428:	ldr	x9, [x20]
    142c:	ldr	q0, [x23]
    1430:	str	q0, [x9, w8, uxtw #4]
    1434:	ldp	w8, w9, [x20, #8]
    1438:	cmp	w8, w9
    143c:	b.cs	19e0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x764>  // b.hs, b.nlast
    1440:	add	w8, w8, #0x1
    1444:	str	w8, [x20, #8]
    1448:	ldr	x9, [x19, #8]
    144c:	ldr	w8, [x9, #8]
    1450:	cmp	w8, w21
    1454:	b.ls	19c0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x744>  // b.plast
    1458:	ldr	x8, [x9, #48]
    145c:	cbz	x8, 1a20 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7a4>
    1460:	ldr	x9, [x9]
    1464:	mov	w10, #0x18                  	// #24
    1468:	madd	x9, x21, x10, x9
    146c:	ldr	w9, [x9, #4]
    1470:	ldrh	w10, [x8, x9, lsl #1]
    1474:	cbz	w10, 14fc <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x280>
    1478:	ldr	w22, [x22]
    147c:	add	x8, x8, x9, lsl #1
    1480:	add	w21, w10, w21
    1484:	add	x23, x8, #0x2
    1488:	b	1498 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x21c>
    148c:	ldrh	w8, [x23], #2
    1490:	add	w21, w8, w21
    1494:	cbz	w8, 14fc <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x280>
    1498:	ldr	x8, [x19, #112]
    149c:	and	x9, x21, #0xffff
    14a0:	add	x25, x8, x9, lsl #5
    14a4:	ldr	x8, [x25, #8]
    14a8:	cbz	x8, 148c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x210>
    14ac:	ldr	w8, [x25]
    14b0:	cmp	w8, w22
    14b4:	b.eq	148c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x210>  // b.none
    14b8:	ldp	w8, w9, [x20, #8]
    14bc:	cmp	w8, w9
    14c0:	b.cs	14e8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x26c>  // b.hs, b.nlast
    14c4:	ldr	x9, [x20]
    14c8:	ldr	q0, [x25]
    14cc:	str	q0, [x9, w8, uxtw #4]
    14d0:	ldp	w8, w9, [x20, #8]
    14d4:	cmp	w8, w9
    14d8:	b.cs	19e0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x764>  // b.hs, b.nlast
    14dc:	add	w8, w8, #0x1
    14e0:	str	w8, [x20, #8]
    14e4:	b	148c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x210>
    14e8:	mov	x0, x20
    14ec:	mov	x1, xzr
    14f0:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    14f4:	ldr	w8, [x20, #8]
    14f8:	b	14c4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x248>
    14fc:	ldr	w23, [x20, #8]
    1500:	cmp	w23, #0x1
    1504:	b.ls	1778 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4fc>  // b.plast
    1508:	ldr	x22, [x20]
    150c:	clz	x8, x23
    1510:	mov	w9, #0x7e                  	// #126
    1514:	sub	x2, x9, x8, lsl #1
    1518:	add	x21, x22, x23, lsl #4
    151c:	mov	x0, x22
    1520:	mov	x1, x21
    1524:	mov	x3, xzr
    1528:	bl	23e4 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_>
    152c:	add	x8, x22, #0x8
    1530:	cmp	w23, #0x11
    1534:	b.cc	15f8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x37c>  // b.lo, b.ul, b.last
    1538:	mov	w9, #0x1                   	// #1
    153c:	mov	w10, #0x2                   	// #2
    1540:	mov	x11, x8
    1544:	mov	x14, x22
    1548:	b	1570 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2f4>
    154c:	add	x15, x15, #0x8
    1550:	str	w14, [x15], #8
    1554:	add	x9, x9, #0x1
    1558:	add	x11, x11, #0x10
    155c:	cmp	x9, #0x10
    1560:	add	x10, x10, #0x1
    1564:	mov	x14, x12
    1568:	str	x13, [x15]
    156c:	b.eq	16c0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x444>  // b.none
    1570:	ldr	x13, [x14, #24]
    1574:	ldr	x12, [x22, #8]
    1578:	cmp	x13, x12
    157c:	add	x12, x22, x9, lsl #4
    1580:	b.cs	15c0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x344>  // b.hs, b.nlast
    1584:	ldr	w14, [x14, #16]
    1588:	mov	x15, x10
    158c:	mov	x17, x12
    1590:	mov	x16, x12
    1594:	ldr	w18, [x16, #-16]!
    1598:	ldur	x0, [x17, #-8]
    159c:	sub	x15, x15, #0x1
    15a0:	cmp	x15, #0x1
    15a4:	str	w18, [x17]
    15a8:	str	x0, [x17, #8]
    15ac:	mov	x17, x16
    15b0:	b.gt	1594 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x318>
    15b4:	str	w14, [x22]
    15b8:	mov	x15, x8
    15bc:	b	1554 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2d8>
    15c0:	ldr	x15, [x14, #8]
    15c4:	ldr	w14, [x12]
    15c8:	cmp	x15, x13
    15cc:	mov	x15, x12
    15d0:	b.ls	1550 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2d4>  // b.plast
    15d4:	mov	x15, x11
    15d8:	ldur	w16, [x15, #-8]
    15dc:	ldr	x17, [x15]
    15e0:	str	w16, [x15, #8]
    15e4:	str	x17, [x15, #16]
    15e8:	ldr	x16, [x15, #-16]!
    15ec:	cmp	x16, x13
    15f0:	b.hi	15d8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x35c>  // b.pmore
    15f4:	b	154c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2d0>
    15f8:	add	x12, x22, #0x10
    15fc:	mov	x9, x8
    1600:	mov	x13, x22
    1604:	b	1628 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3ac>
    1608:	add	x13, x13, #0x8
    160c:	str	w12, [x13], #8
    1610:	add	x12, x10, #0x10
    1614:	str	x11, [x13]
    1618:	cmp	x12, x21
    161c:	add	x9, x9, #0x10
    1620:	mov	x13, x10
    1624:	b.eq	16c8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x44c>  // b.none
    1628:	ldr	x11, [x13, #24]
    162c:	ldr	x10, [x22, #8]
    1630:	cmp	x11, x10
    1634:	mov	x10, x12
    1638:	b.cs	1688 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x40c>  // b.hs, b.nlast
    163c:	ldr	w12, [x13, #16]
    1640:	sub	x13, x10, x22
    1644:	cmp	x13, #0x1
    1648:	b.lt	167c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x400>  // b.tstop
    164c:	lsr	x13, x13, #4
    1650:	add	x13, x13, #0x1
    1654:	mov	x15, x10
    1658:	mov	x14, x10
    165c:	ldr	w16, [x14, #-16]!
    1660:	ldur	x17, [x15, #-8]
    1664:	sub	x13, x13, #0x1
    1668:	cmp	x13, #0x1
    166c:	str	w16, [x15]
    1670:	str	x17, [x15, #8]
    1674:	mov	x15, x14
    1678:	b.gt	165c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3e0>
    167c:	str	w12, [x22]
    1680:	mov	x13, x8
    1684:	b	1610 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x394>
    1688:	ldr	x13, [x13, #8]
    168c:	ldr	w12, [x10]
    1690:	cmp	x13, x11
    1694:	mov	x13, x10
    1698:	b.ls	160c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x390>  // b.plast
    169c:	mov	x13, x9
    16a0:	ldur	w14, [x13, #-8]
    16a4:	ldr	x15, [x13]
    16a8:	str	w14, [x13, #8]
    16ac:	str	x15, [x13, #16]
    16b0:	ldr	x14, [x13, #-16]!
    16b4:	cmp	x14, x11
    16b8:	b.hi	16a0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x424>  // b.pmore
    16bc:	b	1608 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x38c>
    16c0:	cmp	w23, #0x10
    16c4:	b.ne	1944 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6c8>  // b.any
    16c8:	ldr	x8, [x20]
    16cc:	ldr	w11, [x20, #8]
    16d0:	add	x9, x8, x11, lsl #4
    16d4:	cbz	w11, 1718 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x49c>
    16d8:	lsl	x11, x11, #4
    16dc:	sub	x10, x8, #0x10
    16e0:	sub	x11, x11, #0x10
    16e4:	cbz	x11, 1768 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4ec>
    16e8:	ldr	w12, [x10, #16]!
    16ec:	sub	x11, x11, #0x10
    16f0:	ldr	w13, [x10, #16]
    16f4:	cmp	w12, w13
    16f8:	b.ne	16e4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x468>  // b.any
    16fc:	ldr	x12, [x10, #8]
    1700:	ldr	x13, [x10, #24]
    1704:	cmp	x12, x13
    1708:	b.ne	16e4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x468>  // b.any
    170c:	cmp	x10, x9
    1710:	b.ne	1724 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4a8>  // b.any
    1714:	b	1768 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4ec>
    1718:	mov	x10, x8
    171c:	cmp	x10, x9
    1720:	b.eq	1768 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4ec>  // b.none
    1724:	add	x11, x10, #0x20
    1728:	b	1738 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4bc>
    172c:	str	w13, [x10, #16]!
    1730:	str	x12, [x10, #8]
    1734:	add	x11, x11, #0x10
    1738:	cmp	x11, x9
    173c:	b.eq	1764 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4e8>  // b.none
    1740:	ldr	w14, [x10]
    1744:	ldr	w13, [x11]
    1748:	ldr	x12, [x11, #8]
    174c:	cmp	w14, w13
    1750:	b.ne	172c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4b0>  // b.any
    1754:	ldr	x14, [x10, #8]
    1758:	cmp	x14, x12
    175c:	b.eq	1734 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4b8>  // b.none
    1760:	b	172c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4b0>
    1764:	add	x9, x10, #0x10
    1768:	sub	x8, x9, x8
    176c:	asr	x1, x8, #4
    1770:	mov	x0, x20
    1774:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1778:	ldrb	w8, [x24]
    177c:	cbz	w8, 1928 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6ac>
    1780:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1784:	add	x0, x0, #0x0
    1788:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    178c:	tbz	w0, #0, 1928 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6ac>
    1790:	ldr	w8, [x20, #8]
    1794:	cbz	w8, 1928 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6ac>
    1798:	ldr	x9, [x20]
    179c:	adrp	x20, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    17a0:	adrp	x21, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    17a4:	lsl	x26, x8, #4
    17a8:	add	x20, x20, #0x0
    17ac:	mov	w27, #0x18                  	// #24
    17b0:	add	x21, x21, #0x0
    17b4:	add	x28, x9, #0x8
    17b8:	mov	w22, #0xa29                 	// #2601
    17bc:	b	17dc <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x560>
    17c0:	strh	w22, [x8]
    17c4:	ldr	x8, [x0, #24]
    17c8:	add	x8, x8, #0x2
    17cc:	str	x8, [x0, #24]
    17d0:	subs	x26, x26, #0x10
    17d4:	add	x28, x28, #0x10
    17d8:	b.eq	1928 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6ac>  // b.none
    17dc:	ldr	x24, [x28]
    17e0:	bl	0 <_ZN4llvm4dbgsEv>
    17e4:	ldp	x9, x8, [x0, #16]
    17e8:	mov	x23, x0
    17ec:	sub	x9, x9, x8
    17f0:	cmp	x9, #0x27
    17f4:	b.hi	1810 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x594>  // b.pmore
    17f8:	mov	w2, #0x28                  	// #40
    17fc:	mov	x0, x23
    1800:	mov	x1, x20
    1804:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1808:	mov	x23, x0
    180c:	b	182c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x5b0>
    1810:	ldr	x9, [x20, #32]
    1814:	ldp	q1, q0, [x20]
    1818:	str	x9, [x8, #32]
    181c:	stp	q1, q0, [x8]
    1820:	ldr	x8, [x23, #24]
    1824:	add	x8, x8, #0x28
    1828:	str	x8, [x23, #24]
    182c:	ldr	x8, [x19, #8]
    1830:	ldrh	w9, [x24, #12]
    1834:	ldr	w10, [x8, #8]
    1838:	cmp	w10, w9
    183c:	b.ls	19c0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x744>  // b.plast
    1840:	ldr	x10, [x8]
    1844:	mul	x9, x9, x27
    1848:	ldr	x8, [x8, #64]
    184c:	ldr	w9, [x10, x9]
    1850:	add	x24, x8, x9
    1854:	cbz	x8, 1868 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x5ec>
    1858:	mov	x0, x24
    185c:	bl	0 <strlen>
    1860:	mov	x25, x0
    1864:	b	186c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x5f0>
    1868:	mov	x25, xzr
    186c:	ldp	x8, x0, [x23, #16]
    1870:	sub	x8, x8, x0
    1874:	cmp	x25, x8
    1878:	b.ls	1898 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x61c>  // b.plast
    187c:	mov	x0, x23
    1880:	mov	x1, x24
    1884:	mov	x2, x25
    1888:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    188c:	mov	x23, x0
    1890:	ldr	x0, [x0, #24]
    1894:	b	18b4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x638>
    1898:	cbz	x25, 18b4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x638>
    189c:	mov	x1, x24
    18a0:	mov	x2, x25
    18a4:	bl	0 <memcpy>
    18a8:	ldr	x8, [x23, #24]
    18ac:	add	x0, x8, x25
    18b0:	str	x0, [x23, #24]
    18b4:	ldr	x8, [x23, #16]
    18b8:	sub	x8, x8, x0
    18bc:	cmp	x8, #0x19
    18c0:	b.hi	18dc <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x660>  // b.pmore
    18c4:	mov	w2, #0x1a                  	// #26
    18c8:	mov	x0, x23
    18cc:	mov	x1, x21
    18d0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    18d4:	mov	x23, x0
    18d8:	b	18f8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x67c>
    18dc:	ldur	q0, [x21, #10]
    18e0:	ldr	q1, [x21]
    18e4:	stur	q0, [x0, #10]
    18e8:	str	q1, [x0]
    18ec:	ldr	x8, [x23, #24]
    18f0:	add	x8, x8, #0x1a
    18f4:	str	x8, [x23, #24]
    18f8:	ldur	w1, [x28, #-8]
    18fc:	mov	x0, x23
    1900:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1904:	ldp	x9, x8, [x0, #16]
    1908:	sub	x9, x9, x8
    190c:	cmp	x9, #0x1
    1910:	b.hi	17c0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x544>  // b.pmore
    1914:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1918:	mov	w2, #0x2                   	// #2
    191c:	add	x1, x1, #0x0
    1920:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1924:	b	17d0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x554>
    1928:	ldp	x20, x19, [sp, #80]
    192c:	ldp	x22, x21, [sp, #64]
    1930:	ldp	x24, x23, [sp, #48]
    1934:	ldp	x26, x25, [sp, #32]
    1938:	ldp	x28, x27, [sp, #16]
    193c:	ldp	x29, x30, [sp], #96
    1940:	ret
    1944:	add	x8, x22, #0x100
    1948:	add	x9, x22, #0xe8
    194c:	b	196c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6f0>
    1950:	add	x12, x12, #0x18
    1954:	add	x8, x8, #0x10
    1958:	cmp	x8, x21
    195c:	add	x9, x9, #0x10
    1960:	str	w11, [x12]
    1964:	str	x10, [x12, #8]
    1968:	b.eq	16c8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x44c>  // b.none
    196c:	ldr	x10, [x8, #8]
    1970:	ldur	x12, [x8, #-8]
    1974:	ldr	w11, [x8]
    1978:	cmp	x12, x10
    197c:	mov	x12, x8
    1980:	b.ls	1954 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6d8>  // b.plast
    1984:	mov	x12, x9
    1988:	ldr	w13, [x12, #8]
    198c:	ldr	x14, [x12, #16]
    1990:	ldr	x15, [x12]
    1994:	str	w13, [x12, #24]
    1998:	str	x14, [x12, #32]
    199c:	cmp	x15, x10
    19a0:	sub	x12, x12, #0x10
    19a4:	b.hi	1988 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x70c>  // b.pmore
    19a8:	b	1950 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6d4>
    19ac:	mov	x0, x20
    19b0:	mov	x1, xzr
    19b4:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    19b8:	ldr	w8, [x20, #8]
    19bc:	b	1428 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1ac>
    19c0:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    19c4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    19c8:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    19cc:	add	x0, x0, #0x0
    19d0:	add	x1, x1, #0x0
    19d4:	add	x3, x3, #0x0
    19d8:	mov	w2, #0x1b9                 	// #441
    19dc:	bl	0 <__assert_fail>
    19e0:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    19e4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    19e8:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    19ec:	add	x0, x0, #0x0
    19f0:	add	x1, x1, #0x0
    19f4:	add	x3, x3, #0x0
    19f8:	mov	w2, #0x43                  	// #67
    19fc:	bl	0 <__assert_fail>
    1a00:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1a04:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1a08:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1a0c:	add	x0, x0, #0x0
    1a10:	add	x1, x1, #0x0
    1a14:	add	x3, x3, #0x0
    1a18:	mov	w2, #0x167                 	// #359
    1a1c:	bl	0 <__assert_fail>
    1a20:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1a24:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1a28:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1a2c:	add	x0, x0, #0x0
    1a30:	add	x1, x1, #0x0
    1a34:	add	x3, x3, #0x0
    1a38:	mov	w2, #0xd1                  	// #209
    1a3c:	bl	0 <__assert_fail>

0000000000001a40 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE>:
    1a40:	sub	sp, sp, #0xa0
    1a44:	stp	x29, x30, [sp, #80]
    1a48:	stp	x26, x25, [sp, #96]
    1a4c:	stp	x24, x23, [sp, #112]
    1a50:	stp	x22, x21, [sp, #128]
    1a54:	stp	x20, x19, [sp, #144]
    1a58:	add	x29, sp, #0x50
    1a5c:	ldrh	w8, [x1, #8]
    1a60:	ldr	x9, [x0, #112]
    1a64:	ldrb	w10, [x1, #42]
    1a68:	add	x9, x9, x8, lsl #5
    1a6c:	ldr	w9, [x9, #16]
    1a70:	str	w9, [x1, #12]
    1a74:	cbnz	w10, 1bdc <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x19c>
    1a78:	ldr	w10, [x0, #144]
    1a7c:	cmp	w10, w8
    1a80:	b.ls	1bf8 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1b8>  // b.plast
    1a84:	mov	w11, #0x1                   	// #1
    1a88:	mov	x19, x2
    1a8c:	mov	x20, x1
    1a90:	add	x9, x0, #0x88
    1a94:	cmp	w10, #0x40
    1a98:	lsl	x10, x11, x8
    1a9c:	b.ls	1ab0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x70>  // b.plast
    1aa0:	ldr	x9, [x9]
    1aa4:	lsr	x8, x8, #3
    1aa8:	and	x8, x8, #0x1ff8
    1aac:	add	x9, x9, x8
    1ab0:	ldr	x8, [x9]
    1ab4:	tst	x8, x10
    1ab8:	b.eq	1ac4 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x84>  // b.none
    1abc:	mov	w8, #0x1                   	// #1
    1ac0:	strb	w8, [x20, #41]
    1ac4:	adrp	x8, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1ac8:	ldr	d0, [x8]
    1acc:	mov	x8, sp
    1ad0:	add	x8, x8, #0x10
    1ad4:	mov	x2, sp
    1ad8:	mov	x1, x20
    1adc:	str	x8, [sp]
    1ae0:	str	d0, [sp, #8]
    1ae4:	bl	127c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE>
    1ae8:	ldr	w8, [sp, #8]
    1aec:	cmp	x8, #0x0
    1af0:	cset	w9, eq  // eq = none
    1af4:	str	w8, [x20, #16]
    1af8:	strb	w9, [x20, #40]
    1afc:	ldr	x11, [x19, #152]
    1b00:	ldr	x9, [x11, #40]
    1b04:	cbz	x9, 1c18 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1d8>
    1b08:	ldr	x22, [x20]
    1b0c:	ldr	w11, [x11, #52]
    1b10:	ldr	w10, [x22, #12]
    1b14:	cmp	w11, w10
    1b18:	b.ls	1c38 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1f8>  // b.plast
    1b1c:	ldr	x21, [sp]
    1b20:	cbz	w8, 1bc4 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x184>
    1b24:	add	x23, x21, x8, lsl #4
    1b28:	mov	w8, #0x18                  	// #24
    1b2c:	madd	x8, x10, x8, x9
    1b30:	add	x24, x8, #0x12
    1b34:	add	x25, x8, #0x14
    1b38:	mov	w26, #0xc                   	// #12
    1b3c:	b	1b58 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x118>
    1b40:	mov	w3, wzr
    1b44:	ldr	w1, [x21], #16
    1b48:	mov	x2, x20
    1b4c:	bl	0 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi>
    1b50:	cmp	x21, x23
    1b54:	b.eq	1bc0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x180>  // b.none
    1b58:	ldrh	w11, [x25]
    1b5c:	ldr	x0, [x21, #8]
    1b60:	cbz	x11, 1b40 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x100>
    1b64:	ldr	x9, [x0]
    1b68:	ldr	x10, [x19, #144]
    1b6c:	ldrh	w12, [x24]
    1b70:	ldr	w8, [x22, #4]
    1b74:	ldr	w9, [x9, #12]
    1b78:	add	x11, x11, x11, lsl #1
    1b7c:	madd	x10, x12, x26, x10
    1b80:	add	x10, x10, #0x8
    1b84:	lsl	x11, x11, #2
    1b88:	b	1b98 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x158>
    1b8c:	subs	x11, x11, #0xc
    1b90:	add	x10, x10, #0xc
    1b94:	b.eq	1b40 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x100>  // b.none
    1b98:	ldur	w12, [x10, #-8]
    1b9c:	cmp	w12, w8
    1ba0:	b.cc	1b8c <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x14c>  // b.lo, b.ul, b.last
    1ba4:	b.hi	1b40 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x100>  // b.pmore
    1ba8:	ldur	w12, [x10, #-4]
    1bac:	cbz	w12, 1bb8 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x178>
    1bb0:	cmp	w12, w9
    1bb4:	b.ne	1b8c <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x14c>  // b.any
    1bb8:	ldr	w3, [x10]
    1bbc:	b	1b44 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x104>
    1bc0:	ldr	x21, [sp]
    1bc4:	mov	x8, sp
    1bc8:	add	x8, x8, #0x10
    1bcc:	cmp	x21, x8
    1bd0:	b.eq	1bdc <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x19c>  // b.none
    1bd4:	mov	x0, x21
    1bd8:	bl	0 <free>
    1bdc:	ldp	x20, x19, [sp, #144]
    1be0:	ldp	x22, x21, [sp, #128]
    1be4:	ldp	x24, x23, [sp, #112]
    1be8:	ldp	x26, x25, [sp, #96]
    1bec:	ldp	x29, x30, [sp, #80]
    1bf0:	add	sp, sp, #0xa0
    1bf4:	ret
    1bf8:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1bfc:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c00:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c04:	add	x0, x0, #0x0
    1c08:	add	x1, x1, #0x0
    1c0c:	add	x3, x3, #0x0
    1c10:	mov	w2, #0x472                 	// #1138
    1c14:	bl	0 <__assert_fail>
    1c18:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c1c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c20:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c24:	add	x0, x0, #0x0
    1c28:	add	x1, x1, #0x0
    1c2c:	add	x3, x3, #0x0
    1c30:	mov	w2, #0x15b                 	// #347
    1c34:	bl	0 <__assert_fail>
    1c38:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c3c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c40:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c44:	add	x0, x0, #0x0
    1c48:	add	x1, x1, #0x0
    1c4c:	add	x3, x3, #0x0
    1c50:	mov	w2, #0x15d                 	// #349
    1c54:	bl	0 <__assert_fail>

0000000000001c58 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE>:
    1c58:	sub	sp, sp, #0x80
    1c5c:	stp	x29, x30, [sp, #32]
    1c60:	stp	x28, x27, [sp, #48]
    1c64:	stp	x26, x25, [sp, #64]
    1c68:	stp	x24, x23, [sp, #80]
    1c6c:	stp	x22, x21, [sp, #96]
    1c70:	stp	x20, x19, [sp, #112]
    1c74:	add	x29, sp, #0x20
    1c78:	ldr	w22, [x0, #24]
    1c7c:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1c80:	ldr	d0, [x9]
    1c84:	mov	x8, sp
    1c88:	mov	x21, x2
    1c8c:	mov	x20, x1
    1c90:	mov	x19, x0
    1c94:	add	x1, x8, #0x10
    1c98:	cmp	w22, #0x5
    1c9c:	str	x1, [sp]
    1ca0:	str	d0, [sp, #8]
    1ca4:	b.cc	1cc0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x68>  // b.lo, b.ul, b.last
    1ca8:	mov	x0, sp
    1cac:	mov	w3, #0x4                   	// #4
    1cb0:	mov	x2, x22
    1cb4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1cb8:	ldr	w8, [sp, #12]
    1cbc:	b	1cc4 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x6c>
    1cc0:	mov	w8, #0x4                   	// #4
    1cc4:	cmp	x8, x22
    1cc8:	b.cc	1ec0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x268>  // b.lo, b.ul, b.last
    1ccc:	str	w22, [sp, #8]
    1cd0:	cbz	w22, 1ce4 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x8c>
    1cd4:	ldr	x0, [sp]
    1cd8:	lsl	x2, x22, #2
    1cdc:	mov	w1, wzr
    1ce0:	bl	0 <memset>
    1ce4:	cbz	x21, 1d50 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0xf8>
    1ce8:	ldr	x8, [x19, #112]
    1cec:	ldr	x9, [sp]
    1cf0:	lsl	x10, x21, #1
    1cf4:	ldrh	w11, [x20]
    1cf8:	add	x12, x8, x11, lsl #5
    1cfc:	ldr	w12, [x12, #16]
    1d00:	cbz	w12, 1d28 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0xd0>
    1d04:	ldr	w13, [sp, #8]
    1d08:	cmp	w13, w12
    1d0c:	b.ls	1e80 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x228>  // b.plast
    1d10:	add	x13, x8, x11, lsl #5
    1d14:	lsl	x12, x12, #2
    1d18:	ldr	w13, [x13, #20]
    1d1c:	ldr	w14, [x9, x12]
    1d20:	add	w13, w14, w13
    1d24:	str	w13, [x9, x12]
    1d28:	ldr	w12, [sp, #8]
    1d2c:	cbz	w12, 1e80 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x228>
    1d30:	add	x11, x8, x11, lsl #5
    1d34:	ldr	w12, [x9]
    1d38:	ldr	w11, [x11, #20]
    1d3c:	subs	x10, x10, #0x2
    1d40:	add	x20, x20, #0x2
    1d44:	add	w11, w12, w11
    1d48:	str	w11, [x9]
    1d4c:	b.ne	1cf4 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x9c>  // b.any
    1d50:	ldr	w23, [x19, #24]
    1d54:	cbz	w23, 1e40 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x1e8>
    1d58:	adrp	x26, 0 <_ZN4llvm9DebugFlagE>
    1d5c:	ldr	x26, [x26]
    1d60:	adrp	x22, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1d64:	mov	x24, xzr
    1d68:	mov	w20, wzr
    1d6c:	mov	w25, #0x4                   	// #4
    1d70:	add	x22, x22, #0x0
    1d74:	mov	w27, #0x1                   	// #1
    1d78:	b	1dc8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x170>
    1d7c:	ldur	q0, [x22, #27]
    1d80:	ldp	q2, q1, [x22]
    1d84:	stur	q0, [x8, #27]
    1d88:	stp	q2, q1, [x8]
    1d8c:	ldr	x8, [x0, #24]
    1d90:	add	x8, x8, #0x2b
    1d94:	str	x8, [x0, #24]
    1d98:	ldur	w9, [x21, #-4]
    1d9c:	mov	w8, w9
    1da0:	ldr	w10, [x28, x25]
    1da4:	add	w8, w10, w8
    1da8:	lsl	w10, w27, w24
    1dac:	cmp	w9, w8
    1db0:	csel	w8, w10, wzr, cc  // cc = lo, ul, last
    1db4:	orr	w20, w8, w20
    1db8:	add	x24, x24, #0x1
    1dbc:	cmp	x23, x24
    1dc0:	add	x25, x25, #0x14
    1dc4:	b.eq	1e44 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x1ec>  // b.none
    1dc8:	ldr	w8, [sp, #8]
    1dcc:	cmp	x24, x8
    1dd0:	b.cs	1e80 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x228>  // b.hs, b.nlast
    1dd4:	ldr	x8, [sp]
    1dd8:	ldr	w8, [x8, x24, lsl #2]
    1ddc:	cbz	w8, 1db8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x160>
    1de0:	ldr	w9, [x19, #24]
    1de4:	cmp	x24, x9
    1de8:	b.cs	1ea0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x248>  // b.hs, b.nlast
    1dec:	ldr	x28, [x19, #16]
    1df0:	add	x21, x28, x25
    1df4:	ldur	w9, [x21, #-4]
    1df8:	cbz	w9, 1db8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x160>
    1dfc:	cmp	w9, w8
    1e00:	b.cs	1da0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x148>  // b.hs, b.nlast
    1e04:	ldrb	w8, [x26]
    1e08:	cbz	w8, 1d98 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x140>
    1e0c:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1e10:	add	x0, x0, #0x0
    1e14:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1e18:	tbz	w0, #0, 1d98 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x140>
    1e1c:	bl	0 <_ZN4llvm4dbgsEv>
    1e20:	ldp	x9, x8, [x0, #16]
    1e24:	sub	x9, x9, x8
    1e28:	cmp	x9, #0x2a
    1e2c:	b.hi	1d7c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x124>  // b.pmore
    1e30:	mov	w2, #0x2b                  	// #43
    1e34:	mov	x1, x22
    1e38:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1e3c:	b	1d98 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x140>
    1e40:	mov	w20, wzr
    1e44:	ldr	x0, [sp]
    1e48:	mov	x8, sp
    1e4c:	add	x8, x8, #0x10
    1e50:	cmp	x0, x8
    1e54:	b.eq	1e5c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x204>  // b.none
    1e58:	bl	0 <free>
    1e5c:	mov	w0, w20
    1e60:	ldp	x20, x19, [sp, #112]
    1e64:	ldp	x22, x21, [sp, #96]
    1e68:	ldp	x24, x23, [sp, #80]
    1e6c:	ldp	x26, x25, [sp, #64]
    1e70:	ldp	x28, x27, [sp, #48]
    1e74:	ldp	x29, x30, [sp, #32]
    1e78:	add	sp, sp, #0x80
    1e7c:	ret
    1e80:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1e84:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1e88:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1e8c:	add	x0, x0, #0x0
    1e90:	add	x1, x1, #0x0
    1e94:	add	x3, x3, #0x0
    1e98:	mov	w2, #0x95                  	// #149
    1e9c:	bl	0 <__assert_fail>
    1ea0:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1ea4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1ea8:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1eac:	add	x0, x0, #0x0
    1eb0:	add	x1, x1, #0x0
    1eb4:	add	x3, x3, #0x0
    1eb8:	mov	w2, #0x99                  	// #153
    1ebc:	bl	0 <__assert_fail>
    1ec0:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1ec4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1ec8:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    1ecc:	add	x0, x0, #0x0
    1ed0:	add	x1, x1, #0x0
    1ed4:	add	x3, x3, #0x0
    1ed8:	mov	w2, #0x43                  	// #67
    1edc:	bl	0 <__assert_fail>

0000000000001ee0 <_ZNK4llvm3mca12RegisterFile4dumpEv>:
    1ee0:	stp	x29, x30, [sp, #-96]!
    1ee4:	stp	x28, x27, [sp, #16]
    1ee8:	stp	x26, x25, [sp, #32]
    1eec:	stp	x24, x23, [sp, #48]
    1ef0:	stp	x22, x21, [sp, #64]
    1ef4:	stp	x20, x19, [sp, #80]
    1ef8:	mov	x29, sp
    1efc:	ldr	x8, [x0, #8]
    1f00:	mov	x19, x0
    1f04:	ldr	w22, [x8, #8]
    1f08:	cbz	w22, 221c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x33c>
    1f0c:	mov	x20, xzr
    1f10:	add	x23, x19, #0x88
    1f14:	mov	w26, #0x1                   	// #1
    1f18:	b	1f38 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x58>
    1f1c:	add	x9, x8, #0x1
    1f20:	str	x9, [x0, #24]
    1f24:	mov	w9, #0xa                   	// #10
    1f28:	strb	w9, [x8]
    1f2c:	add	x20, x20, #0x1
    1f30:	cmp	x20, x22
    1f34:	b.eq	221c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x33c>  // b.none
    1f38:	ldr	w8, [x19, #144]
    1f3c:	cmp	x20, x8
    1f40:	b.cs	2384 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4a4>  // b.hs, b.nlast
    1f44:	ldr	x24, [x19, #112]
    1f48:	cmp	w8, #0x41
    1f4c:	lsl	x25, x26, x20
    1f50:	mov	x8, x23
    1f54:	b.cc	1f64 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x84>  // b.lo, b.ul, b.last
    1f58:	ldr	x8, [x23]
    1f5c:	ubfx	x9, x20, #6, #26
    1f60:	add	x8, x8, x9, lsl #3
    1f64:	ldr	x8, [x8]
    1f68:	tst	x8, x25
    1f6c:	b.eq	1f2c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4c>  // b.none
    1f70:	bl	0 <_ZN4llvm4dbgsEv>
    1f74:	ldr	x8, [x19, #8]
    1f78:	ldr	w9, [x8, #8]
    1f7c:	cmp	x20, x9
    1f80:	b.cs	23c4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4e4>  // b.hs, b.nlast
    1f84:	ldr	x9, [x8]
    1f88:	mov	w10, #0x18                  	// #24
    1f8c:	mul	x10, x20, x10
    1f90:	ldr	x8, [x8, #64]
    1f94:	ldr	w9, [x9, x10]
    1f98:	mov	x27, x0
    1f9c:	add	x28, x8, x9
    1fa0:	cbz	x8, 1fb4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0xd4>
    1fa4:	mov	x0, x28
    1fa8:	bl	0 <strlen>
    1fac:	mov	x21, x0
    1fb0:	b	1fb8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0xd8>
    1fb4:	mov	x21, xzr
    1fb8:	ldp	x8, x0, [x27, #16]
    1fbc:	sub	x8, x8, x0
    1fc0:	cmp	x21, x8
    1fc4:	b.ls	1fe4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x104>  // b.plast
    1fc8:	mov	x0, x27
    1fcc:	mov	x1, x28
    1fd0:	mov	x2, x21
    1fd4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1fd8:	mov	x27, x0
    1fdc:	ldr	x0, [x0, #24]
    1fe0:	b	2000 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x120>
    1fe4:	cbz	x21, 2000 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x120>
    1fe8:	mov	x1, x28
    1fec:	mov	x2, x21
    1ff0:	bl	0 <memcpy>
    1ff4:	ldr	x8, [x27, #24]
    1ff8:	add	x0, x8, x21
    1ffc:	str	x0, [x27, #24]
    2000:	ldr	x8, [x27, #16]
    2004:	sub	x8, x8, x0
    2008:	cmp	x8, #0x1
    200c:	b.hi	202c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x14c>  // b.pmore
    2010:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2014:	mov	w2, #0x2                   	// #2
    2018:	mov	x0, x27
    201c:	add	x1, x1, #0x0
    2020:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2024:	mov	x27, x0
    2028:	b	2040 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x160>
    202c:	mov	w8, #0x202c                	// #8236
    2030:	strh	w8, [x0]
    2034:	ldr	x8, [x27, #24]
    2038:	add	x8, x8, #0x2
    203c:	str	x8, [x27, #24]
    2040:	mov	x0, x27
    2044:	mov	x1, x20
    2048:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    204c:	ldp	x9, x8, [x0, #16]
    2050:	sub	x9, x9, x8
    2054:	cmp	x9, #0x5
    2058:	b.hi	2070 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x190>  // b.pmore
    205c:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2060:	mov	w2, #0x6                   	// #6
    2064:	add	x1, x1, #0x0
    2068:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    206c:	b	2090 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x1b0>
    2070:	mov	w9, #0x3d46                	// #15686
    2074:	strh	w9, [x8, #4]
    2078:	mov	w9, #0x202c                	// #8236
    207c:	movk	w9, #0x5250, lsl #16
    2080:	str	w9, [x8]
    2084:	ldr	x8, [x0, #24]
    2088:	add	x8, x8, #0x6
    208c:	str	x8, [x0, #24]
    2090:	add	x8, x24, x20, lsl #5
    2094:	ldr	w1, [x8, #16]
    2098:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    209c:	ldp	x9, x8, [x0, #16]
    20a0:	sub	x9, x9, x8
    20a4:	cmp	x9, #0x6
    20a8:	b.hi	20c0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x1e0>  // b.pmore
    20ac:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    20b0:	mov	w2, #0x7                   	// #7
    20b4:	add	x1, x1, #0x0
    20b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    20bc:	b	20e4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x204>
    20c0:	mov	w9, #0x736f                	// #29551
    20c4:	movk	w9, #0x3d74, lsl #16
    20c8:	stur	w9, [x8, #3]
    20cc:	mov	w9, #0x202c                	// #8236
    20d0:	movk	w9, #0x6f43, lsl #16
    20d4:	str	w9, [x8]
    20d8:	ldr	x8, [x0, #24]
    20dc:	add	x8, x8, #0x7
    20e0:	str	x8, [x0, #24]
    20e4:	add	x8, x24, x20, lsl #5
    20e8:	ldr	w1, [x8, #20]
    20ec:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    20f0:	ldp	x9, x8, [x0, #16]
    20f4:	sub	x9, x9, x8
    20f8:	cmp	x9, #0xa
    20fc:	b.hi	2114 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x234>  // b.pmore
    2100:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2104:	mov	w2, #0xb                   	// #11
    2108:	add	x1, x1, #0x0
    210c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2110:	b	213c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x25c>
    2114:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2118:	add	x9, x9, #0x0
    211c:	ldr	x9, [x9]
    2120:	mov	w10, #0x4165                	// #16741
    2124:	movk	w10, #0x3d73, lsl #16
    2128:	stur	w10, [x8, #7]
    212c:	str	x9, [x8]
    2130:	ldr	x8, [x0, #24]
    2134:	add	x8, x8, #0xb
    2138:	str	x8, [x0, #24]
    213c:	add	x8, x24, x20, lsl #5
    2140:	ldrh	w1, [x8, #24]
    2144:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    2148:	ldp	x9, x8, [x0, #16]
    214c:	sub	x9, x9, x8
    2150:	cmp	x9, #0x8
    2154:	b.hi	216c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x28c>  // b.pmore
    2158:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    215c:	mov	w2, #0x9                   	// #9
    2160:	add	x1, x1, #0x0
    2164:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2168:	b	2190 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x2b0>
    216c:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2170:	add	x9, x9, #0x0
    2174:	ldr	x9, [x9]
    2178:	mov	w10, #0x3d                  	// #61
    217c:	strb	w10, [x8, #8]
    2180:	str	x9, [x8]
    2184:	ldr	x8, [x0, #24]
    2188:	add	x8, x8, #0x9
    218c:	str	x8, [x0, #24]
    2190:	ldr	w8, [x19, #144]
    2194:	cmp	x20, x8
    2198:	b.cs	2384 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4a4>  // b.hs, b.nlast
    219c:	cmp	w8, #0x41
    21a0:	mov	x8, x23
    21a4:	b.cc	21b4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x2d4>  // b.lo, b.ul, b.last
    21a8:	ldr	x8, [x23]
    21ac:	ubfx	x9, x20, #6, #26
    21b0:	add	x8, x8, x9, lsl #3
    21b4:	ldr	x8, [x8]
    21b8:	tst	x8, x25
    21bc:	cset	w1, ne  // ne = any
    21c0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    21c4:	ldp	x9, x8, [x0, #16]
    21c8:	cmp	x9, x8
    21cc:	b.ne	21e4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x304>  // b.any
    21d0:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    21d4:	mov	w2, #0x1                   	// #1
    21d8:	add	x1, x1, #0x0
    21dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    21e0:	b	21f8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x318>
    21e4:	mov	w9, #0x2c                  	// #44
    21e8:	strb	w9, [x8]
    21ec:	ldr	x8, [x0, #24]
    21f0:	add	x8, x8, #0x1
    21f4:	str	x8, [x0, #24]
    21f8:	add	x0, x24, x20, lsl #5
    21fc:	bl	0 <_ZNK4llvm3mca8WriteRef4dumpEv>
    2200:	bl	0 <_ZN4llvm4dbgsEv>
    2204:	ldp	x9, x8, [x0, #16]
    2208:	cmp	x8, x9
    220c:	b.cc	1f1c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x3c>  // b.lo, b.ul, b.last
    2210:	mov	w1, #0xa                   	// #10
    2214:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2218:	b	1f2c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4c>
    221c:	ldr	w24, [x19, #24]
    2220:	cbz	w24, 2368 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x488>
    2224:	adrp	x21, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2228:	adrp	x22, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    222c:	adrp	x23, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2230:	mov	x20, xzr
    2234:	mov	w25, #0x4                   	// #4
    2238:	add	x21, x21, #0x0
    223c:	add	x22, x22, #0x0
    2240:	add	x23, x23, #0x0
    2244:	mov	w26, #0xa                   	// #10
    2248:	b	2268 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x388>
    224c:	add	x9, x8, #0x1
    2250:	str	x9, [x0, #24]
    2254:	strb	w26, [x8]
    2258:	add	x20, x20, #0x1
    225c:	cmp	x24, x20
    2260:	add	x25, x25, #0x14
    2264:	b.eq	2368 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x488>  // b.none
    2268:	bl	0 <_ZN4llvm4dbgsEv>
    226c:	ldp	x9, x8, [x0, #16]
    2270:	sub	x9, x9, x8
    2274:	cmp	x9, #0xe
    2278:	b.hi	228c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x3ac>  // b.pmore
    227c:	mov	w2, #0xf                   	// #15
    2280:	mov	x1, x21
    2284:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2288:	b	22a8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x3c8>
    228c:	ldur	x9, [x21, #7]
    2290:	ldr	x10, [x21]
    2294:	stur	x9, [x8, #7]
    2298:	str	x10, [x8]
    229c:	ldr	x8, [x0, #24]
    22a0:	add	x8, x8, #0xf
    22a4:	str	x8, [x0, #24]
    22a8:	mov	x1, x20
    22ac:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    22b0:	ldr	w8, [x19, #24]
    22b4:	cmp	x20, x8
    22b8:	b.cs	23a4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4c4>  // b.hs, b.nlast
    22bc:	ldr	x27, [x19, #16]
    22c0:	bl	0 <_ZN4llvm4dbgsEv>
    22c4:	ldp	x9, x8, [x0, #16]
    22c8:	sub	x9, x9, x8
    22cc:	cmp	x9, #0x18
    22d0:	b.hi	22e4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x404>  // b.pmore
    22d4:	mov	w2, #0x19                  	// #25
    22d8:	mov	x1, x22
    22dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    22e0:	b	2300 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x420>
    22e4:	ldur	q0, [x22, #9]
    22e8:	ldr	q1, [x22]
    22ec:	stur	q0, [x8, #9]
    22f0:	str	q1, [x8]
    22f4:	ldr	x8, [x0, #24]
    22f8:	add	x8, x8, #0x19
    22fc:	str	x8, [x0, #24]
    2300:	add	x8, x27, x25
    2304:	ldur	w1, [x8, #-4]
    2308:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    230c:	ldp	x9, x8, [x0, #16]
    2310:	sub	x9, x9, x8
    2314:	cmp	x9, #0x18
    2318:	b.hi	232c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x44c>  // b.pmore
    231c:	mov	w2, #0x19                  	// #25
    2320:	mov	x1, x23
    2324:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2328:	b	2348 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x468>
    232c:	ldur	q0, [x23, #9]
    2330:	ldr	q1, [x23]
    2334:	stur	q0, [x8, #9]
    2338:	str	q1, [x8]
    233c:	ldr	x8, [x0, #24]
    2340:	add	x8, x8, #0x19
    2344:	str	x8, [x0, #24]
    2348:	ldr	w1, [x27, x25]
    234c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2350:	ldp	x9, x8, [x0, #16]
    2354:	cmp	x8, x9
    2358:	b.cc	224c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x36c>  // b.lo, b.ul, b.last
    235c:	mov	w1, #0xa                   	// #10
    2360:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2364:	b	2258 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x378>
    2368:	ldp	x20, x19, [sp, #80]
    236c:	ldp	x22, x21, [sp, #64]
    2370:	ldp	x24, x23, [sp, #48]
    2374:	ldp	x26, x25, [sp, #32]
    2378:	ldp	x28, x27, [sp, #16]
    237c:	ldp	x29, x30, [sp], #96
    2380:	ret
    2384:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2388:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    238c:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    2390:	add	x0, x0, #0x0
    2394:	add	x1, x1, #0x0
    2398:	add	x3, x3, #0x0
    239c:	mov	w2, #0x472                 	// #1138
    23a0:	bl	0 <__assert_fail>
    23a4:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    23a8:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    23ac:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    23b0:	add	x0, x0, #0x0
    23b4:	add	x1, x1, #0x0
    23b8:	add	x3, x3, #0x0
    23bc:	mov	w2, #0x99                  	// #153
    23c0:	bl	0 <__assert_fail>
    23c4:	adrp	x0, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    23c8:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    23cc:	adrp	x3, 0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
    23d0:	add	x0, x0, #0x0
    23d4:	add	x1, x1, #0x0
    23d8:	add	x3, x3, #0x0
    23dc:	mov	w2, #0x1b9                 	// #441
    23e0:	bl	0 <__assert_fail>

00000000000023e4 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_>:
    23e4:	stp	x29, x30, [sp, #-80]!
    23e8:	str	x25, [sp, #16]
    23ec:	stp	x24, x23, [sp, #32]
    23f0:	stp	x22, x21, [sp, #48]
    23f4:	stp	x20, x19, [sp, #64]
    23f8:	mov	x29, sp
    23fc:	sub	x25, x1, x0
    2400:	cmp	x25, #0x101
    2404:	b.lt	2620 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x23c>  // b.tstop
    2408:	mov	x21, x1
    240c:	mov	x19, x0
    2410:	mov	x22, x2
    2414:	and	x20, x3, #0xff
    2418:	add	x24, x0, #0x10
    241c:	b	2444 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x60>
    2420:	mov	x0, x23
    2424:	mov	x1, x21
    2428:	mov	x2, x22
    242c:	mov	x3, x20
    2430:	bl	23e4 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_>
    2434:	sub	x25, x23, x19
    2438:	cmp	x25, #0x100
    243c:	mov	x21, x23
    2440:	b.le	2620 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x23c>
    2444:	cbz	x22, 2594 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x1b0>
    2448:	lsr	x8, x25, #1
    244c:	and	x8, x8, #0x7ffffffffffffff0
    2450:	add	x8, x19, x8
    2454:	mov	x9, x8
    2458:	ldr	x10, [x19, #24]
    245c:	ldr	x12, [x9, #8]!
    2460:	ldur	x11, [x21, #-8]
    2464:	sub	x22, x22, #0x1
    2468:	cmp	x10, x12
    246c:	b.cs	2498 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0xb4>  // b.hs, b.nlast
    2470:	cmp	x12, x11
    2474:	b.cs	24c0 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0xdc>  // b.hs, b.nlast
    2478:	ldr	w10, [x8]
    247c:	ldr	w11, [x19]
    2480:	ldr	x13, [x19, #8]
    2484:	str	x12, [x19, #8]
    2488:	str	w10, [x19]
    248c:	str	w11, [x8]
    2490:	str	x13, [x9]
    2494:	b	253c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x158>
    2498:	cmp	x10, x11
    249c:	b.cs	24e8 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x104>  // b.hs, b.nlast
    24a0:	ldr	w8, [x19, #16]
    24a4:	ldr	w9, [x19]
    24a8:	ldr	x11, [x19, #8]
    24ac:	str	x10, [x19, #8]
    24b0:	str	w8, [x19]
    24b4:	str	w9, [x19, #16]
    24b8:	str	x11, [x19, #24]
    24bc:	b	253c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x158>
    24c0:	ldr	w9, [x19]
    24c4:	ldr	x8, [x19, #8]
    24c8:	cmp	x10, x11
    24cc:	b.cs	2510 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x12c>  // b.hs, b.nlast
    24d0:	ldur	w10, [x21, #-16]
    24d4:	str	x11, [x19, #8]
    24d8:	str	w10, [x19]
    24dc:	stur	w9, [x21, #-16]
    24e0:	stur	x8, [x21, #-8]
    24e4:	b	253c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x158>
    24e8:	ldr	w13, [x19]
    24ec:	ldr	x10, [x19, #8]
    24f0:	cmp	x12, x11
    24f4:	b.cs	2528 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x144>  // b.hs, b.nlast
    24f8:	ldur	w8, [x21, #-16]
    24fc:	str	x11, [x19, #8]
    2500:	str	w8, [x19]
    2504:	stur	w13, [x21, #-16]
    2508:	stur	x10, [x21, #-8]
    250c:	b	253c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x158>
    2510:	ldr	w11, [x19, #16]
    2514:	str	x10, [x19, #8]
    2518:	str	w9, [x19, #16]
    251c:	str	x8, [x19, #24]
    2520:	str	w11, [x19]
    2524:	b	253c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x158>
    2528:	ldr	w11, [x8]
    252c:	str	x12, [x19, #8]
    2530:	str	w11, [x19]
    2534:	str	w13, [x8]
    2538:	str	x10, [x9]
    253c:	mov	x8, x21
    2540:	mov	x10, x24
    2544:	ldr	x11, [x19, #8]
    2548:	sub	x23, x10, #0x10
    254c:	ldr	x9, [x23, #24]
    2550:	add	x23, x23, #0x10
    2554:	cmp	x9, x11
    2558:	b.cc	254c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x168>  // b.lo, b.ul, b.last
    255c:	add	x10, x23, #0x10
    2560:	ldur	x12, [x8, #-8]
    2564:	sub	x8, x8, #0x10
    2568:	cmp	x11, x12
    256c:	b.cc	2560 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x17c>  // b.lo, b.ul, b.last
    2570:	cmp	x23, x8
    2574:	b.cs	2420 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x3c>  // b.hs, b.nlast
    2578:	ldr	w11, [x8]
    257c:	ldr	w13, [x23]
    2580:	str	x12, [x23, #8]
    2584:	str	w11, [x23]
    2588:	str	w13, [x8]
    258c:	str	x9, [x8, #8]
    2590:	b	2544 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x160>
    2594:	lsr	x22, x25, #4
    2598:	sub	x8, x22, #0x2
    259c:	sub	x9, x22, #0x1
    25a0:	cmp	x8, #0x0
    25a4:	csel	x8, x9, x8, lt  // lt = tstop
    25a8:	asr	x23, x8, #1
    25ac:	add	x8, x19, x23, lsl #4
    25b0:	add	x24, x8, #0x8
    25b4:	ldp	x3, x4, [x24, #-8]
    25b8:	mov	x0, x19
    25bc:	mov	x1, x23
    25c0:	mov	x2, x22
    25c4:	mov	x5, x20
    25c8:	bl	2638 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_>
    25cc:	sub	x23, x23, #0x1
    25d0:	cmn	x23, #0x1
    25d4:	sub	x24, x24, #0x10
    25d8:	b.ne	25b4 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x1d0>  // b.any
    25dc:	cmp	x25, #0x11
    25e0:	b.lt	2620 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x23c>  // b.tstop
    25e4:	sub	x21, x21, #0x10
    25e8:	ldr	w8, [x19]
    25ec:	ldp	x3, x4, [x21]
    25f0:	sub	x22, x21, x19
    25f4:	asr	x2, x22, #4
    25f8:	str	w8, [x21]
    25fc:	ldr	x8, [x19, #8]
    2600:	mov	x0, x19
    2604:	mov	x1, xzr
    2608:	mov	x5, x20
    260c:	str	x8, [x21, #8]
    2610:	bl	2638 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_>
    2614:	cmp	x22, #0x10
    2618:	sub	x21, x21, #0x10
    261c:	b.gt	25e8 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_SG_T0_T1_+0x204>
    2620:	ldp	x20, x19, [sp, #64]
    2624:	ldp	x22, x21, [sp, #48]
    2628:	ldp	x24, x23, [sp, #32]
    262c:	ldr	x25, [sp, #16]
    2630:	ldp	x29, x30, [sp], #80
    2634:	ret

0000000000002638 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_>:
    2638:	sub	x9, x2, #0x1
    263c:	cmp	x9, #0x0
    2640:	csel	x8, x2, x9, lt  // lt = tstop
    2644:	asr	x10, x8, #1
    2648:	cmp	x10, x1
    264c:	mov	x8, x1
    2650:	b.le	26a4 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0x6c>
    2654:	mov	x11, x1
    2658:	lsl	x8, x11, #1
    265c:	mov	w12, #0x1                   	// #1
    2660:	add	x8, x8, #0x2
    2664:	bfi	x12, x11, #1, #63
    2668:	add	x13, x0, x8, lsl #4
    266c:	add	x14, x0, x12, lsl #4
    2670:	ldr	x13, [x13, #8]
    2674:	ldr	x14, [x14, #8]
    2678:	add	x11, x0, x11, lsl #4
    267c:	cmp	x13, x14
    2680:	csel	x8, x12, x8, cc  // cc = lo, ul, last
    2684:	add	x12, x0, x8, lsl #4
    2688:	ldr	w13, [x12]
    268c:	cmp	x8, x10
    2690:	str	w13, [x11]
    2694:	ldr	x12, [x12, #8]
    2698:	str	x12, [x11, #8]
    269c:	mov	x11, x8
    26a0:	b.lt	2658 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0x20>  // b.tstop
    26a4:	tbnz	w2, #0, 26e0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xa8>
    26a8:	sub	x10, x2, #0x2
    26ac:	cmp	x10, #0x0
    26b0:	csel	x9, x9, x10, lt  // lt = tstop
    26b4:	cmp	x8, x9, asr #1
    26b8:	b.ne	26e0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xa8>  // b.any
    26bc:	mov	w9, #0x1                   	// #1
    26c0:	bfi	x9, x8, #1, #63
    26c4:	add	x10, x0, x9, lsl #4
    26c8:	ldr	w11, [x10]
    26cc:	add	x8, x0, x8, lsl #4
    26d0:	str	w11, [x8]
    26d4:	ldr	x10, [x10, #8]
    26d8:	str	x10, [x8, #8]
    26dc:	mov	x8, x9
    26e0:	cmp	x8, x1
    26e4:	b.le	272c <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xf4>
    26e8:	sub	x9, x8, #0x1
    26ec:	cmp	x9, #0x0
    26f0:	csel	x9, x8, x9, lt  // lt = tstop
    26f4:	asr	x9, x9, #1
    26f8:	add	x10, x0, x9, lsl #4
    26fc:	ldr	x10, [x10, #8]
    2700:	cmp	x10, x4
    2704:	b.cs	272c <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xf4>  // b.hs, b.nlast
    2708:	lsl	x11, x9, #4
    270c:	ldr	w11, [x0, x11]
    2710:	add	x8, x0, x8, lsl #4
    2714:	cmp	x9, x1
    2718:	str	x10, [x8, #8]
    271c:	str	w11, [x8]
    2720:	mov	x8, x9
    2724:	b.gt	26e8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xb0>
    2728:	b	2730 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEE3$_0EEEvT_T0_SH_T1_T2_+0xf8>
    272c:	mov	x9, x8
    2730:	add	x8, x0, x9, lsl #4
    2734:	str	w3, [x8]
    2738:	str	x4, [x8, #8]
    273c:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w11, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	x11, x1
  1c:	b.ls	34 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0x34>  // b.plast
  20:	ldr	w8, [x19, #12]
  24:	cmp	x8, x20
  28:	b.cc	ec <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0xec>  // b.lo, b.ul, b.last
  2c:	str	w20, [x19, #8]
  30:	b	e0 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0xe0>
  34:	b.cs	e0 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0xe0>  // b.hs, b.nlast
  38:	ldr	w8, [x19, #12]
  3c:	cmp	x8, x20
  40:	b.cs	54 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0x54>  // b.hs, b.nlast
  44:	mov	x0, x19
  48:	mov	x1, x20
  4c:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm>
  50:	ldr	w11, [x19, #8]
  54:	cmp	x11, x20
  58:	b.eq	20 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0x20>  // b.none
  5c:	adrp	x8, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
  60:	ldr	x10, [x19]
  64:	ldr	x8, [x8]
  68:	lsl	x9, x11, #4
  6c:	lsl	x12, x20, #4
  70:	sub	x12, x12, x9
  74:	ldr	w8, [x8]
  78:	subs	x12, x12, #0x10
  7c:	add	x9, x10, x9
  80:	b.eq	c4 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0xc4>  // b.none
  84:	lsr	x12, x12, #4
  88:	add	x13, x10, x11, lsl #4
  8c:	add	x11, x12, #0x1
  90:	and	x12, x11, #0x1ffffffffffffffe
  94:	add	x9, x9, x12, lsl #4
  98:	add	x13, x13, #0x10
  9c:	mov	x14, x12
  a0:	stur	w8, [x13, #-16]
  a4:	str	w8, [x13]
  a8:	stur	xzr, [x13, #-8]
  ac:	str	xzr, [x13, #8]
  b0:	subs	x14, x14, #0x2
  b4:	add	x13, x13, #0x20
  b8:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0xa0>  // b.any
  bc:	cmp	x11, x12
  c0:	b.eq	20 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0x20>  // b.none
  c4:	add	x10, x10, x20, lsl #4
  c8:	str	w8, [x9]
  cc:	str	xzr, [x9, #8]
  d0:	add	x9, x9, #0x10
  d4:	cmp	x9, x10
  d8:	b.ne	c8 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0xc8>  // b.any
  dc:	b	20 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm+0x20>
  e0:	ldp	x20, x19, [sp, #16]
  e4:	ldp	x29, x30, [sp], #32
  e8:	ret
  ec:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm>
  f0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm>
  f4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca8WriteRefEE6resizeEm>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x43                  	// #67
 108:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca12RegisterFileD2Ev:

0000000000000000 <_ZN4llvm3mca12RegisterFileD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileD2Ev>
  10:	ldr	w8, [x0, #144]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	cmp	w8, #0x41
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	b.cc	38 <_ZN4llvm3mca12RegisterFileD2Ev+0x38>  // b.lo, b.ul, b.last
  2c:	ldr	x0, [x19, #136]
  30:	cbz	x0, 38 <_ZN4llvm3mca12RegisterFileD2Ev+0x38>
  34:	bl	0 <_ZdaPv>
  38:	ldr	x0, [x19, #112]
  3c:	cbz	x0, 44 <_ZN4llvm3mca12RegisterFileD2Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #16]
  48:	add	x8, x19, #0x20
  4c:	cmp	x0, x8
  50:	b.eq	58 <_ZN4llvm3mca12RegisterFileD2Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	mov	x0, x19
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca12RegisterFileD0Ev:

0000000000000000 <_ZN4llvm3mca12RegisterFileD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN4llvm3mca12RegisterFileD0Ev>
  10:	ldr	w8, [x0, #144]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	cmp	w8, #0x41
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	b.cc	38 <_ZN4llvm3mca12RegisterFileD0Ev+0x38>  // b.lo, b.ul, b.last
  2c:	ldr	x0, [x19, #136]
  30:	cbz	x0, 38 <_ZN4llvm3mca12RegisterFileD0Ev+0x38>
  34:	bl	0 <_ZdaPv>
  38:	ldr	x0, [x19, #112]
  3c:	cbz	x0, 44 <_ZN4llvm3mca12RegisterFileD0Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #16]
  48:	add	x8, x19, #0x20
  4c:	cmp	x0, x8
  50:	b.eq	58 <_ZN4llvm3mca12RegisterFileD0Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  60:	mov	x0, x19
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

ResourceManager.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca16ResourceStrategyD0Ev>:
       0:	brk	#0x1

0000000000000004 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm>:
       4:	stp	x29, x30, [sp, #-16]!
       8:	mov	x29, sp
       c:	ldr	x9, [x0, #16]
      10:	ands	x8, x9, x1
      14:	b.ne	44 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x40>  // b.any
      18:	ldr	x9, [x0, #8]
      1c:	ldr	x8, [x0, #24]
      20:	eor	x10, x8, x9
      24:	ands	x8, x10, x1
      28:	stp	x10, xzr, [x0, #16]
      2c:	b.eq	38 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x34>  // b.none
      30:	mov	x9, x10
      34:	b	44 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x40>
      38:	ands	x8, x9, x1
      3c:	str	x9, [x0, #16]
      40:	b.eq	70 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x6c>  // b.none
      44:	clz	x8, x8
      48:	eor	x8, x8, #0x3f
      4c:	mov	w10, #0x1                   	// #1
      50:	lsl	x8, x10, x8
      54:	sub	x10, x8, #0x1
      58:	orr	x10, x10, x8
      5c:	and	x9, x10, x9
      60:	str	x9, [x0, #16]
      64:	mov	x0, x8
      68:	ldp	x29, x30, [sp], #16
      6c:	ret
      70:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
      74:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
      78:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
      7c:	add	x0, x0, #0x0
      80:	add	x1, x1, #0x0
      84:	add	x3, x3, #0x0
      88:	mov	w2, #0x64                  	// #100
      8c:	bl	0 <__assert_fail>

0000000000000090 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>:
      90:	ldr	x8, [x0, #16]
      94:	cmp	x8, x1
      98:	b.cs	ac <_ZN4llvm3mca23DefaultResourceStrategy4usedEm+0x1c>  // b.hs, b.nlast
      9c:	ldr	x8, [x0, #24]
      a0:	orr	x8, x8, x1
      a4:	str	x8, [x0, #24]
      a8:	ret
      ac:	bics	x8, x8, x1
      b0:	str	x8, [x0, #16]
      b4:	b.eq	bc <_ZN4llvm3mca23DefaultResourceStrategy4usedEm+0x2c>  // b.none
      b8:	ret
      bc:	ldr	x8, [x0, #8]
      c0:	ldr	x9, [x0, #24]
      c4:	eor	x8, x9, x8
      c8:	stp	x8, xzr, [x0, #16]
      cc:	ret

00000000000000d0 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm>:
      d0:	stp	x29, x30, [sp, #-16]!
      d4:	mov	x29, sp
      d8:	fmov	d0, x3
      dc:	str	w2, [x0]
      e0:	str	x3, [x0, #8]
      e4:	cnt	v0.8b, v0.8b
      e8:	uaddlv	h0, v0.8b
      ec:	ldr	w8, [x1, #16]
      f0:	fmov	w9, s0
      f4:	cmp	w9, #0x1
      f8:	cset	w10, hi  // hi = pmore
      fc:	cmp	w9, #0x2
     100:	str	w8, [x0, #32]
     104:	strb	w10, [x0, #41]
     108:	b.cc	124 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x54>  // b.lo, b.ul, b.last
     10c:	cbz	x3, 150 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x80>
     110:	clz	x9, x3
     114:	eor	x9, x9, #0x3f
     118:	mov	w10, #0x1                   	// #1
     11c:	lsl	x9, x10, x9
     120:	b	130 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x60>
     124:	ldr	w9, [x1, #8]
     128:	mov	x3, #0xffffffffffffffff    	// #-1
     12c:	lsl	x9, x3, x9
     130:	cmn	w8, #0x1
     134:	eor	x9, x9, x3
     138:	csel	w8, wzr, w8, eq  // eq = none
     13c:	stp	x9, x9, [x0, #16]
     140:	str	w8, [x0, #36]
     144:	strb	wzr, [x0, #40]
     148:	ldp	x29, x30, [sp], #16
     14c:	ret
     150:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     154:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     158:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     15c:	add	x0, x0, #0x0
     160:	add	x1, x1, #0x0
     164:	add	x3, x3, #0x0
     168:	mov	w2, #0x64                  	// #100
     16c:	bl	0 <__assert_fail>

0000000000000170 <_ZNK4llvm3mca13ResourceState7isReadyEj>:
     170:	ldrb	w8, [x0, #40]
     174:	cbz	w8, 188 <_ZNK4llvm3mca13ResourceState7isReadyEj+0x18>
     178:	ldr	w8, [x0, #32]
     17c:	cbz	w8, 188 <_ZNK4llvm3mca13ResourceState7isReadyEj+0x18>
     180:	mov	w0, wzr
     184:	ret
     188:	ldr	d0, [x0, #24]
     18c:	cnt	v0.8b, v0.8b
     190:	uaddlv	h0, v0.8b
     194:	fmov	w8, s0
     198:	cmp	w8, w1
     19c:	cset	w0, cs  // cs = hs, nlast
     1a0:	ret

00000000000001a4 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv>:
     1a4:	ldr	w8, [x0, #32]
     1a8:	cbz	w8, 1c4 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv+0x20>
     1ac:	cmp	w8, #0x1
     1b0:	b.lt	1d0 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv+0x2c>  // b.tstop
     1b4:	ldr	w8, [x0, #36]
     1b8:	cmp	w8, #0x0
     1bc:	cset	w0, eq  // eq = none
     1c0:	ret
     1c4:	ldrb	w8, [x0, #40]
     1c8:	lsl	w0, w8, #1
     1cc:	ret
     1d0:	mov	w0, wzr
     1d4:	ret

00000000000001d8 <_ZNK4llvm3mca13ResourceState4dumpEv>:
     1d8:	sub	sp, sp, #0x70
     1dc:	stp	x29, x30, [sp, #80]
     1e0:	str	x19, [sp, #96]
     1e4:	add	x29, sp, #0x50
     1e8:	mov	x19, x0
     1ec:	bl	0 <_ZN4llvm4dbgsEv>
     1f0:	ldp	x9, x8, [x0, #16]
     1f4:	sub	x9, x9, x8
     1f8:	cmp	x9, #0x4
     1fc:	b.hi	214 <_ZNK4llvm3mca13ResourceState4dumpEv+0x3c>  // b.pmore
     200:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     204:	add	x1, x1, #0x0
     208:	mov	w2, #0x5                   	// #5
     20c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     210:	b	234 <_ZNK4llvm3mca13ResourceState4dumpEv+0x5c>
     214:	mov	w10, #0x414d                	// #16717
     218:	mov	w9, #0x3d                  	// #61
     21c:	movk	w10, #0x4b53, lsl #16
     220:	strb	w9, [x8, #4]
     224:	str	w10, [x8]
     228:	ldr	x8, [x0, #24]
     22c:	add	x8, x8, #0x5
     230:	str	x8, [x0, #24]
     234:	ldr	x8, [x19, #8]
     238:	mov	w9, #0x10                  	// #16
     23c:	mov	w10, #0x1                   	// #1
     240:	sub	x1, x29, #0x18
     244:	stur	w9, [x29, #-8]
     248:	sturh	w10, [x29, #-4]
     24c:	stp	x8, xzr, [x29, #-24]
     250:	sturb	w10, [x29, #-2]
     254:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     258:	ldp	x9, x8, [x0, #16]
     25c:	sub	x9, x9, x8
     260:	cmp	x9, #0x8
     264:	b.hi	27c <_ZNK4llvm3mca13ResourceState4dumpEv+0xa4>  // b.pmore
     268:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     26c:	add	x1, x1, #0x0
     270:	mov	w2, #0x9                   	// #9
     274:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     278:	b	2a0 <_ZNK4llvm3mca13ResourceState4dumpEv+0xc8>
     27c:	adrp	x9, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     280:	add	x9, x9, #0x0
     284:	ldr	x9, [x9]
     288:	mov	w10, #0x3d                  	// #61
     28c:	strb	w10, [x8, #8]
     290:	str	x9, [x8]
     294:	ldr	x8, [x0, #24]
     298:	add	x8, x8, #0x9
     29c:	str	x8, [x0, #24]
     2a0:	ldr	x8, [x19, #16]
     2a4:	mov	w9, #0x10                  	// #16
     2a8:	mov	w10, #0x1                   	// #1
     2ac:	add	x1, sp, #0x20
     2b0:	str	w9, [sp, #48]
     2b4:	strh	w10, [sp, #52]
     2b8:	stp	x8, xzr, [sp, #32]
     2bc:	strb	w10, [sp, #54]
     2c0:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     2c4:	ldp	x9, x8, [x0, #16]
     2c8:	sub	x9, x9, x8
     2cc:	cmp	x9, #0x9
     2d0:	b.hi	2e8 <_ZNK4llvm3mca13ResourceState4dumpEv+0x110>  // b.pmore
     2d4:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     2d8:	add	x1, x1, #0x0
     2dc:	mov	w2, #0xa                   	// #10
     2e0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2e4:	b	30c <_ZNK4llvm3mca13ResourceState4dumpEv+0x134>
     2e8:	adrp	x9, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     2ec:	add	x9, x9, #0x0
     2f0:	ldr	x9, [x9]
     2f4:	mov	w10, #0x3d4b                	// #15691
     2f8:	strh	w10, [x8, #8]
     2fc:	str	x9, [x8]
     300:	ldr	x8, [x0, #24]
     304:	add	x8, x8, #0xa
     308:	str	x8, [x0, #24]
     30c:	ldr	x8, [x19, #24]
     310:	mov	w9, #0x10                  	// #16
     314:	mov	w10, #0x1                   	// #1
     318:	add	x1, sp, #0x8
     31c:	str	w9, [sp, #24]
     320:	strh	w10, [sp, #28]
     324:	stp	x8, xzr, [sp, #8]
     328:	strb	w10, [sp, #30]
     32c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     330:	ldp	x9, x8, [x0, #16]
     334:	sub	x9, x9, x8
     338:	cmp	x9, #0xc
     33c:	b.hi	354 <_ZNK4llvm3mca13ResourceState4dumpEv+0x17c>  // b.pmore
     340:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     344:	add	x1, x1, #0x0
     348:	mov	w2, #0xd                   	// #13
     34c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     350:	b	378 <_ZNK4llvm3mca13ResourceState4dumpEv+0x1a0>
     354:	adrp	x9, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     358:	add	x9, x9, #0x0
     35c:	ldur	x10, [x9, #5]
     360:	ldr	x9, [x9]
     364:	stur	x10, [x8, #5]
     368:	str	x9, [x8]
     36c:	ldr	x8, [x0, #24]
     370:	add	x8, x8, #0xd
     374:	str	x8, [x0, #24]
     378:	ldrsw	x1, [x19, #32]
     37c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     380:	ldp	x9, x8, [x0, #16]
     384:	sub	x9, x9, x8
     388:	cmp	x9, #0x10
     38c:	b.hi	3a4 <_ZNK4llvm3mca13ResourceState4dumpEv+0x1cc>  // b.pmore
     390:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     394:	add	x1, x1, #0x0
     398:	mov	w2, #0x11                  	// #17
     39c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     3a0:	b	3c8 <_ZNK4llvm3mca13ResourceState4dumpEv+0x1f0>
     3a4:	adrp	x9, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     3a8:	add	x9, x9, #0x0
     3ac:	ldr	q0, [x9]
     3b0:	mov	w9, #0x3d                  	// #61
     3b4:	strb	w9, [x8, #16]
     3b8:	str	q0, [x8]
     3bc:	ldr	x8, [x0, #24]
     3c0:	add	x8, x8, #0x11
     3c4:	str	x8, [x0, #24]
     3c8:	ldr	w1, [x19, #36]
     3cc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     3d0:	ldp	x9, x8, [x0, #16]
     3d4:	sub	x9, x9, x8
     3d8:	cmp	x9, #0xa
     3dc:	b.hi	3f4 <_ZNK4llvm3mca13ResourceState4dumpEv+0x21c>  // b.pmore
     3e0:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     3e4:	add	x1, x1, #0x0
     3e8:	mov	w2, #0xb                   	// #11
     3ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     3f0:	b	41c <_ZNK4llvm3mca13ResourceState4dumpEv+0x244>
     3f4:	adrp	x9, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     3f8:	add	x9, x9, #0x0
     3fc:	ldr	x9, [x9]
     400:	mov	w10, #0x6576                	// #25974
     404:	movk	w10, #0x3d64, lsl #16
     408:	stur	w10, [x8, #7]
     40c:	str	x9, [x8]
     410:	ldr	x8, [x0, #24]
     414:	add	x8, x8, #0xb
     418:	str	x8, [x0, #24]
     41c:	ldrb	w1, [x19, #40]
     420:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     424:	ldp	x9, x8, [x0, #16]
     428:	cmp	x8, x9
     42c:	b.cs	444 <_ZNK4llvm3mca13ResourceState4dumpEv+0x26c>  // b.hs, b.nlast
     430:	add	x9, x8, #0x1
     434:	mov	w10, #0xa                   	// #10
     438:	str	x9, [x0, #24]
     43c:	strb	w10, [x8]
     440:	b	44c <_ZNK4llvm3mca13ResourceState4dumpEv+0x274>
     444:	mov	w1, #0xa                   	// #10
     448:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     44c:	ldr	x19, [sp, #96]
     450:	ldp	x29, x30, [sp, #80]
     454:	add	sp, sp, #0x70
     458:	ret

000000000000045c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE>:
     45c:	sub	sp, sp, #0x80
     460:	str	d8, [sp, #16]
     464:	stp	x29, x30, [sp, #32]
     468:	stp	x28, x27, [sp, #48]
     46c:	stp	x26, x25, [sp, #64]
     470:	stp	x24, x23, [sp, #80]
     474:	stp	x22, x21, [sp, #96]
     478:	stp	x20, x19, [sp, #112]
     47c:	add	x29, sp, #0x10
     480:	adrp	x8, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     484:	ldr	x8, [x8]
     488:	mov	x9, x0
     48c:	mov	x20, x1
     490:	mov	x19, x0
     494:	add	x8, x8, #0x10
     498:	str	x8, [x0]
     49c:	ldr	w8, [x1, #48]
     4a0:	str	xzr, [x9, #8]!
     4a4:	stp	xzr, xzr, [x9, #8]
     4a8:	str	x9, [x29, #8]
     4ac:	subs	w22, w8, #0x1
     4b0:	lsl	x21, x22, #3
     4b4:	b.eq	4c4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x68>  // b.none
     4b8:	mov	x0, x21
     4bc:	bl	0 <_Znwm>
     4c0:	b	4c8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x6c>
     4c4:	mov	x0, xzr
     4c8:	add	x23, x0, x22, lsl #3
     4cc:	stp	x0, x0, [x19, #8]
     4d0:	str	x23, [x19, #24]
     4d4:	cbz	w22, 4e8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x8c>
     4d8:	mov	w1, wzr
     4dc:	mov	x2, x21
     4e0:	bl	0 <memset>
     4e4:	mov	x0, x23
     4e8:	str	x0, [x19, #16]
     4ec:	ldr	w8, [x20, #48]
     4f0:	mov	x9, x19
     4f4:	str	xzr, [x9, #32]!
     4f8:	stp	xzr, xzr, [x9, #8]
     4fc:	subs	w22, w8, #0x1
     500:	lsl	x21, x22, #3
     504:	str	x9, [sp, #8]
     508:	b.eq	518 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xbc>  // b.none
     50c:	mov	x0, x21
     510:	bl	0 <_Znwm>
     514:	b	51c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xc0>
     518:	mov	x0, xzr
     51c:	add	x23, x0, x22, lsl #3
     520:	stp	x0, x0, [x19, #32]
     524:	str	x23, [x19, #48]
     528:	cbz	w22, 53c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xe0>
     52c:	mov	w1, wzr
     530:	mov	x2, x21
     534:	bl	0 <memset>
     538:	mov	x0, x23
     53c:	str	x0, [x19, #40]
     540:	ldr	w8, [x20, #48]
     544:	mov	x25, x19
     548:	str	xzr, [x25, #56]!
     54c:	stp	xzr, xzr, [x25, #8]
     550:	subs	w23, w8, #0x1
     554:	lsl	x22, x23, #3
     558:	b.eq	56c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x110>  // b.none
     55c:	mov	x0, x22
     560:	bl	0 <_Znwm>
     564:	mov	x21, x0
     568:	b	570 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x114>
     56c:	mov	x21, xzr
     570:	add	x8, x21, x23, lsl #3
     574:	stp	x21, x21, [x19, #56]
     578:	str	x8, [x19, #72]
     57c:	cbz	w23, 5cc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x170>
     580:	mov	x0, x21
     584:	mov	w1, wzr
     588:	mov	x2, x22
     58c:	bl	0 <memset>
     590:	cmp	w23, #0x1
     594:	b.ne	5a0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x144>  // b.any
     598:	mov	x8, x23
     59c:	b	5c0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x164>
     5a0:	and	x9, x23, #0xfffffffe
     5a4:	and	x8, x23, #0x1
     5a8:	add	x21, x21, x9, lsl #3
     5ac:	mov	x10, x9
     5b0:	subs	x10, x10, #0x2
     5b4:	b.ne	5b0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x154>  // b.any
     5b8:	cmp	x9, x23
     5bc:	b.eq	5cc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x170>  // b.none
     5c0:	subs	x8, x8, #0x1
     5c4:	add	x21, x21, #0x8
     5c8:	b.ne	5c0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x164>  // b.any
     5cc:	str	x21, [x19, #64]
     5d0:	ldr	w22, [x20, #48]
     5d4:	adrp	x8, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     5d8:	ldr	d8, [x8]
     5dc:	add	x1, x19, #0x60
     5e0:	mov	x21, x19
     5e4:	str	x1, [x21, #80]!
     5e8:	cmp	w22, #0x9
     5ec:	str	d8, [x21, #8]
     5f0:	b.cc	60c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1b0>  // b.lo, b.ul, b.last
     5f4:	mov	w3, #0x8                   	// #8
     5f8:	mov	x0, x21
     5fc:	mov	x2, x22
     600:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     604:	ldr	w8, [x19, #92]
     608:	b	610 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1b4>
     60c:	mov	w8, #0x8                   	// #8
     610:	cmp	x8, x22
     614:	b.cc	a00 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x5a4>  // b.lo, b.ul, b.last
     618:	str	w22, [x19, #88]
     61c:	cbz	w22, 630 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1d4>
     620:	ldr	x0, [x21]
     624:	lsl	x2, x22, #3
     628:	mov	w1, wzr
     62c:	bl	0 <memset>
     630:	ldr	w8, [x20, #48]
     634:	add	x1, x19, #0xb0
     638:	mov	x22, x19
     63c:	str	x1, [x22, #160]!
     640:	sub	w23, w8, #0x1
     644:	cmp	w23, #0x9
     648:	str	d8, [x22, #8]
     64c:	b.cc	668 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x20c>  // b.lo, b.ul, b.last
     650:	mov	w3, #0x4                   	// #4
     654:	mov	x0, x22
     658:	mov	x2, x23
     65c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     660:	ldr	w8, [x19, #172]
     664:	b	66c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x210>
     668:	mov	w8, #0x8                   	// #8
     66c:	cmp	x8, x23
     670:	b.cc	a00 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x5a4>  // b.lo, b.ul, b.last
     674:	str	w23, [x19, #168]
     678:	cbz	w23, 68c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x230>
     67c:	ldr	x0, [x22]
     680:	lsl	x2, x23, #2
     684:	mov	w1, wzr
     688:	bl	0 <memset>
     68c:	adrp	x8, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     690:	ldr	d0, [x8]
     694:	adrp	x9, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     698:	ldr	x1, [x19, #80]
     69c:	ldr	w2, [x19, #88]
     6a0:	str	d0, [x19, #216]
     6a4:	ldr	q0, [x9]
     6a8:	mov	x8, #0xffffffffffffffff    	// #-1
     6ac:	mov	x0, x20
     6b0:	str	xzr, [x19, #208]
     6b4:	stp	x8, x8, [x19, #224]
     6b8:	stp	x8, x8, [x19, #248]
     6bc:	stp	x8, x8, [x19, #272]
     6c0:	stp	x8, x8, [x19, #296]
     6c4:	str	xzr, [x19, #320]
     6c8:	str	q0, [x19, #336]
     6cc:	str	xzr, [x19, #352]
     6d0:	bl	0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>
     6d4:	ldr	w8, [x20, #48]
     6d8:	cmp	w8, #0x2
     6dc:	b.cc	934 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x4d8>  // b.lo, b.ul, b.last
     6e0:	mov	w9, #0x1                   	// #1
     6e4:	ldr	w10, [x19, #88]
     6e8:	cmp	x9, x10
     6ec:	b.cs	980 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x524>  // b.hs, b.nlast
     6f0:	ldr	x10, [x21]
     6f4:	ldr	x10, [x10, x9, lsl #3]
     6f8:	cbz	x10, 960 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x504>
     6fc:	ldr	w11, [x19, #168]
     700:	clz	x10, x10
     704:	eor	x10, x10, #0x3f
     708:	cmp	x10, x11
     70c:	b.cs	9a0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x544>  // b.hs, b.nlast
     710:	ldr	x11, [x22]
     714:	str	w9, [x11, x10, lsl #2]
     718:	add	x9, x9, #0x1
     71c:	cmp	x8, x9
     720:	b.ne	6e4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x288>  // b.any
     724:	ldr	w22, [x20, #48]
     728:	cmp	w22, #0x2
     72c:	b.cc	934 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x4d8>  // b.lo, b.ul, b.last
     730:	adrp	x8, 30 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x2c>
     734:	ldr	x8, [x8]
     738:	mov	w27, #0x30                  	// #48
     73c:	mov	w23, #0x1                   	// #1
     740:	add	x8, x8, #0x10
     744:	str	x8, [sp]
     748:	b	75c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x300>
     74c:	add	x23, x23, #0x1
     750:	cmp	x22, x23
     754:	add	x27, x27, #0x20
     758:	b.eq	890 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x434>  // b.none
     75c:	ldr	w8, [x19, #88]
     760:	cmp	x23, x8
     764:	b.cs	980 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x524>  // b.hs, b.nlast
     768:	ldr	x8, [x21]
     76c:	ldr	x28, [x8, x23, lsl #3]
     770:	cbz	x28, 960 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x504>
     774:	ldr	x8, [x20, #40]
     778:	cbz	x8, 9c0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x564>
     77c:	ldr	w8, [x20, #48]
     780:	cmp	x23, x8
     784:	b.cs	9e0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x584>  // b.hs, b.nlast
     788:	ldr	x24, [x20, #32]
     78c:	clz	x8, x28
     790:	mov	w0, #0x30                  	// #48
     794:	eor	x26, x8, #0x3f
     798:	bl	0 <_Znwm>
     79c:	fmov	d0, x28
     7a0:	str	w23, [x0]
     7a4:	str	x28, [x0, #8]
     7a8:	cnt	v0.8b, v0.8b
     7ac:	uaddlv	h0, v0.8b
     7b0:	ldr	w8, [x24, x27]
     7b4:	fmov	w9, s0
     7b8:	cmp	w9, #0x1
     7bc:	cset	w10, hi  // hi = pmore
     7c0:	cmp	w9, #0x2
     7c4:	str	w8, [x0, #32]
     7c8:	strb	w10, [x0, #41]
     7cc:	b.cc	7dc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x380>  // b.lo, b.ul, b.last
     7d0:	mov	w9, #0x1                   	// #1
     7d4:	lsl	x9, x9, x26
     7d8:	b	7ec <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x390>
     7dc:	add	x9, x24, x27
     7e0:	ldur	w9, [x9, #-8]
     7e4:	mov	x28, #0xffffffffffffffff    	// #-1
     7e8:	lsl	x9, x28, x9
     7ec:	cmn	w8, #0x1
     7f0:	csel	w8, wzr, w8, eq  // eq = none
     7f4:	str	w8, [x0, #36]
     7f8:	ldr	x8, [x29, #8]
     7fc:	eor	x9, x9, x28
     800:	stp	x9, x9, [x0, #16]
     804:	strb	wzr, [x0, #40]
     808:	ldr	x9, [x8]
     80c:	lsl	x28, x26, #3
     810:	ldr	x8, [x9, x28]
     814:	str	x0, [x9, x28]
     818:	cbz	x8, 824 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3c8>
     81c:	mov	x0, x8
     820:	bl	0 <_ZdlPv>
     824:	ldr	x8, [x29, #8]
     828:	ldr	x8, [x8]
     82c:	ldr	x8, [x8, x26, lsl #3]
     830:	ldrb	w9, [x8, #41]
     834:	cbnz	w9, 848 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3ec>
     838:	ldr	x9, [x8, #16]
     83c:	sub	x10, x9, #0x1
     840:	tst	x9, x10
     844:	b.eq	888 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x42c>  // b.none
     848:	ldr	x24, [x8, #24]
     84c:	mov	w0, #0x20                  	// #32
     850:	bl	0 <_Znwm>
     854:	ldr	x8, [sp]
     858:	stp	x24, xzr, [x0, #16]
     85c:	stp	x8, x24, [x0]
     860:	ldr	x8, [sp, #8]
     864:	ldr	x9, [x8]
     868:	ldr	x8, [x9, x28]
     86c:	str	x0, [x9, x28]
     870:	cbz	x8, 74c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x2f0>
     874:	ldr	x9, [x8]
     878:	mov	x0, x8
     87c:	ldr	x9, [x9, #8]
     880:	blr	x9
     884:	b	74c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x2f0>
     888:	mov	x0, xzr
     88c:	b	860 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x404>
     890:	ldr	w8, [x20, #48]
     894:	cmp	w8, #0x2
     898:	b.cc	934 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x4d8>  // b.lo, b.ul, b.last
     89c:	ldr	w9, [x19, #88]
     8a0:	mov	w10, #0x1                   	// #1
     8a4:	mov	w11, #0x1                   	// #1
     8a8:	b	8c4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x468>
     8ac:	ldr	x12, [x19, #320]
     8b0:	orr	x12, x12, x13
     8b4:	str	x12, [x19, #320]
     8b8:	add	w11, w11, #0x1
     8bc:	cmp	w11, w8
     8c0:	b.eq	934 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x4d8>  // b.none
     8c4:	cmp	w9, w11
     8c8:	b.ls	980 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x524>  // b.plast
     8cc:	ldr	x12, [x21]
     8d0:	ldr	x13, [x12, w11, uxtw #3]
     8d4:	cbz	x13, 960 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x504>
     8d8:	ldr	x12, [x29, #8]
     8dc:	ldr	x14, [x12]
     8e0:	clz	x12, x13
     8e4:	eor	x12, x12, #0x3f
     8e8:	ldr	x14, [x14, x12, lsl #3]
     8ec:	ldrb	w14, [x14, #41]
     8f0:	cbz	w14, 8ac <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x450>
     8f4:	lsl	x12, x10, x12
     8f8:	subs	x13, x13, x12
     8fc:	b.eq	8b8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x45c>  // b.none
     900:	neg	x14, x13
     904:	ands	x14, x13, x14
     908:	b.eq	960 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x504>  // b.none
     90c:	ldr	x15, [x25]
     910:	clz	x16, x14
     914:	eor	x16, x16, #0x3f
     918:	lsl	x16, x16, #3
     91c:	ldr	x17, [x15, x16]
     920:	eor	x13, x14, x13
     924:	orr	x17, x17, x12
     928:	str	x17, [x15, x16]
     92c:	cbnz	x13, 900 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x4a4>
     930:	b	8b8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x45c>
     934:	ldr	x8, [x19, #320]
     938:	ldr	d8, [sp, #16]
     93c:	str	x8, [x19, #328]
     940:	ldp	x20, x19, [sp, #112]
     944:	ldp	x22, x21, [sp, #96]
     948:	ldp	x24, x23, [sp, #80]
     94c:	ldp	x26, x25, [sp, #64]
     950:	ldp	x28, x27, [sp, #48]
     954:	ldp	x29, x30, [sp, #32]
     958:	add	sp, sp, #0x80
     95c:	ret
     960:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     964:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     968:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     96c:	add	x0, x0, #0x0
     970:	add	x1, x1, #0x0
     974:	add	x3, x3, #0x0
     978:	mov	w2, #0x64                  	// #100
     97c:	bl	0 <__assert_fail>
     980:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     984:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     988:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     98c:	add	x0, x0, #0x0
     990:	add	x1, x1, #0x0
     994:	add	x3, x3, #0x0
     998:	mov	w2, #0x95                  	// #149
     99c:	bl	0 <__assert_fail>
     9a0:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9a4:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9a8:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9ac:	add	x0, x0, #0x0
     9b0:	add	x1, x1, #0x0
     9b4:	add	x3, x3, #0x0
     9b8:	mov	w2, #0x95                  	// #149
     9bc:	bl	0 <__assert_fail>
     9c0:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9c4:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9c8:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9cc:	add	x0, x0, #0x0
     9d0:	add	x1, x1, #0x0
     9d4:	add	x3, x3, #0x0
     9d8:	mov	w2, #0x154                 	// #340
     9dc:	bl	0 <__assert_fail>
     9e0:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9e4:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9e8:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     9ec:	add	x0, x0, #0x0
     9f0:	add	x1, x1, #0x0
     9f4:	add	x3, x3, #0x0
     9f8:	mov	w2, #0x156                 	// #342
     9fc:	bl	0 <__assert_fail>
     a00:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a04:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a08:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a0c:	add	x0, x0, #0x0
     a10:	add	x1, x1, #0x0
     a14:	add	x3, x3, #0x0
     a18:	mov	w2, #0x43                  	// #67
     a1c:	bl	0 <__assert_fail>

0000000000000a20 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm>:
     a20:	stp	x29, x30, [sp, #-16]!
     a24:	mov	x29, sp
     a28:	cbz	x2, a7c <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x5c>
     a2c:	ldp	x10, x9, [x0, #8]
     a30:	clz	x8, x2
     a34:	eor	x8, x8, #0x3f
     a38:	sub	x9, x9, x10
     a3c:	cmp	x8, x9, asr #3
     a40:	b.cs	a9c <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x7c>  // b.hs, b.nlast
     a44:	ldr	x9, [x1]
     a48:	cbz	x9, abc <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x9c>
     a4c:	ldr	x10, [x0, #32]
     a50:	lsl	x8, x8, #3
     a54:	str	xzr, [x1]
     a58:	ldr	x0, [x10, x8]
     a5c:	str	x9, [x10, x8]
     a60:	cbz	x0, a74 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x54>
     a64:	ldr	x8, [x0]
     a68:	ldr	x1, [x8, #8]
     a6c:	ldp	x29, x30, [sp], #16
     a70:	br	x1
     a74:	ldp	x29, x30, [sp], #16
     a78:	ret
     a7c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a80:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a84:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     a88:	add	x0, x0, #0x0
     a8c:	add	x1, x1, #0x0
     a90:	add	x3, x3, #0x0
     a94:	mov	w2, #0x64                  	// #100
     a98:	bl	0 <__assert_fail>
     a9c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     aa0:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     aa4:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     aa8:	add	x0, x0, #0x0
     aac:	add	x1, x1, #0x0
     ab0:	add	x3, x3, #0x0
     ab4:	mov	w2, #0xa1                  	// #161
     ab8:	bl	0 <__assert_fail>
     abc:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ac0:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ac4:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ac8:	add	x0, x0, #0x0
     acc:	add	x1, x1, #0x0
     ad0:	add	x3, x3, #0x0
     ad4:	mov	w2, #0xa2                  	// #162
     ad8:	bl	0 <__assert_fail>

0000000000000adc <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>:
     adc:	stp	x29, x30, [sp, #-16]!
     ae0:	mov	x29, sp
     ae4:	cbz	x1, b0c <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm+0x30>
     ae8:	ldr	w9, [x0, #168]
     aec:	clz	x8, x1
     af0:	eor	x8, x8, #0x3f
     af4:	cmp	x8, x9
     af8:	b.cs	b2c <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm+0x50>  // b.hs, b.nlast
     afc:	ldr	x9, [x0, #160]
     b00:	ldr	w0, [x9, x8, lsl #2]
     b04:	ldp	x29, x30, [sp], #16
     b08:	ret
     b0c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b10:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b14:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b18:	add	x0, x0, #0x0
     b1c:	add	x1, x1, #0x0
     b20:	add	x3, x3, #0x0
     b24:	mov	w2, #0x64                  	// #100
     b28:	bl	0 <__assert_fail>
     b2c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b30:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b34:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b38:	add	x0, x0, #0x0
     b3c:	add	x1, x1, #0x0
     b40:	add	x3, x3, #0x0
     b44:	mov	w2, #0x99                  	// #153
     b48:	bl	0 <__assert_fail>

0000000000000b4c <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm>:
     b4c:	stp	x29, x30, [sp, #-16]!
     b50:	mov	x29, sp
     b54:	cbz	x1, b94 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm+0x48>
     b58:	ldr	x8, [x0, #8]
     b5c:	clz	x9, x1
     b60:	eor	x9, x9, #0x3f
     b64:	ldr	x8, [x8, x9, lsl #3]
     b68:	ldrb	w9, [x8, #41]
     b6c:	cbz	w9, b7c <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm+0x30>
     b70:	mov	w0, #0x1                   	// #1
     b74:	ldp	x29, x30, [sp], #16
     b78:	ret
     b7c:	ldr	d0, [x8, #16]
     b80:	cnt	v0.8b, v0.8b
     b84:	uaddlv	h0, v0.8b
     b88:	fmov	w0, s0
     b8c:	ldp	x29, x30, [sp], #16
     b90:	ret
     b94:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b98:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     b9c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ba0:	add	x0, x0, #0x0
     ba4:	add	x1, x1, #0x0
     ba8:	add	x3, x3, #0x0
     bac:	mov	w2, #0x64                  	// #100
     bb0:	bl	0 <__assert_fail>

0000000000000bb4 <_ZN4llvm3mca15ResourceManager10selectPipeEm>:
     bb4:	stp	x29, x30, [sp, #-48]!
     bb8:	str	x21, [sp, #16]
     bbc:	stp	x20, x19, [sp, #32]
     bc0:	mov	x29, sp
     bc4:	cbz	x1, c84 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xd0>
     bc8:	ldp	x9, x10, [x0, #8]
     bcc:	clz	x8, x1
     bd0:	eor	x8, x8, #0x3f
     bd4:	mov	x19, x1
     bd8:	sub	x10, x10, x9
     bdc:	mov	x20, x0
     be0:	cmp	x8, x10, asr #3
     be4:	b.cs	ca4 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xf0>  // b.hs, b.nlast
     be8:	ldr	x21, [x9, x8, lsl #3]
     bec:	ldrb	w9, [x21, #40]
     bf0:	cbz	w9, bfc <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x48>
     bf4:	ldr	w9, [x21, #32]
     bf8:	cbnz	w9, c64 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xb0>
     bfc:	ldr	x1, [x21, #24]
     c00:	cbz	x1, c64 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xb0>
     c04:	ldrb	w9, [x21, #41]
     c08:	cbnz	w9, c24 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x70>
     c0c:	ldr	d0, [x21, #16]
     c10:	cnt	v0.8b, v0.8b
     c14:	uaddlv	h0, v0.8b
     c18:	fmov	w9, s0
     c1c:	cmp	x9, #0x1
     c20:	b.eq	c50 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x9c>  // b.none
     c24:	ldr	x9, [x20, #32]
     c28:	ldr	x0, [x9, x8, lsl #3]
     c2c:	ldr	x8, [x0]
     c30:	ldr	x8, [x8, #16]
     c34:	blr	x8
     c38:	ldrb	w8, [x21, #41]
     c3c:	mov	x1, x0
     c40:	cbz	w8, c50 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x9c>
     c44:	mov	x0, x20
     c48:	bl	bb4 <_ZN4llvm3mca15ResourceManager10selectPipeEm>
     c4c:	mov	x19, x0
     c50:	mov	x0, x19
     c54:	ldp	x20, x19, [sp, #32]
     c58:	ldr	x21, [sp, #16]
     c5c:	ldp	x29, x30, [sp], #48
     c60:	ret
     c64:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     c68:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     c6c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     c70:	add	x0, x0, #0x0
     c74:	add	x1, x1, #0x0
     c78:	add	x3, x3, #0x0
     c7c:	mov	w2, #0xb5                  	// #181
     c80:	bl	0 <__assert_fail>
     c84:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     c88:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     c8c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     c90:	add	x0, x0, #0x0
     c94:	add	x1, x1, #0x0
     c98:	add	x3, x3, #0x0
     c9c:	mov	w2, #0x64                  	// #100
     ca0:	bl	0 <__assert_fail>
     ca4:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ca8:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     cac:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     cb0:	add	x0, x0, #0x0
     cb4:	add	x1, x1, #0x0
     cb8:	add	x3, x3, #0x0
     cbc:	mov	w2, #0xb3                  	// #179
     cc0:	bl	0 <__assert_fail>

0000000000000cc4 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE>:
     cc4:	stp	x29, x30, [sp, #-48]!
     cc8:	stp	x22, x21, [sp, #16]
     ccc:	stp	x20, x19, [sp, #32]
     cd0:	mov	x29, sp
     cd4:	ldr	x8, [x1]
     cd8:	cbz	x8, dd0 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x10c>
     cdc:	ldr	x9, [x0, #8]
     ce0:	clz	x8, x8
     ce4:	eor	x21, x8, #0x3f
     ce8:	mov	x19, x1
     cec:	ldr	x22, [x9, x21, lsl #3]
     cf0:	ldr	x1, [x1, #8]
     cf4:	mov	x20, x0
     cf8:	ldr	x8, [x22, #24]
     cfc:	tst	x8, x1
     d00:	b.eq	df0 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x12c>  // b.none
     d04:	ldrb	w9, [x22, #41]
     d08:	eor	x8, x8, x1
     d0c:	str	x8, [x22, #24]
     d10:	cbnz	w9, d38 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x74>
     d14:	ldr	x8, [x22, #16]
     d18:	sub	x9, x8, #0x1
     d1c:	tst	x8, x9
     d20:	b.eq	d38 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x74>  // b.none
     d24:	ldr	x8, [x20, #32]
     d28:	ldr	x0, [x8, x21, lsl #3]
     d2c:	ldr	x8, [x0]
     d30:	ldr	x8, [x8, #24]
     d34:	blr	x8
     d38:	ldrb	w8, [x22, #40]
     d3c:	cbz	w8, d48 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x84>
     d40:	ldr	w8, [x22, #32]
     d44:	cbnz	w8, d50 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x8c>
     d48:	ldr	x8, [x22, #24]
     d4c:	cbnz	x8, dc0 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xfc>
     d50:	ldr	x8, [x19]
     d54:	ldr	x9, [x20, #328]
     d58:	ldr	x10, [x20, #56]
     d5c:	eor	x8, x9, x8
     d60:	str	x8, [x20, #328]
     d64:	ldr	x21, [x10, x21, lsl #3]
     d68:	cbz	x21, dc0 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xfc>
     d6c:	neg	x8, x21
     d70:	ands	x8, x21, x8
     d74:	b.eq	dd0 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x10c>  // b.none
     d78:	ldr	x9, [x20, #8]
     d7c:	clz	x8, x8
     d80:	eor	x8, x8, #0x3f
     d84:	ldr	x1, [x19]
     d88:	ldr	x9, [x9, x8, lsl #3]
     d8c:	ldr	x10, [x9, #24]
     d90:	tst	x10, x1
     d94:	b.eq	df0 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x12c>  // b.none
     d98:	eor	x10, x10, x1
     d9c:	str	x10, [x9, #24]
     da0:	ldr	x9, [x20, #32]
     da4:	ldr	x0, [x9, x8, lsl #3]
     da8:	ldr	x8, [x0]
     dac:	ldr	x8, [x8, #24]
     db0:	blr	x8
     db4:	sub	x8, x21, #0x1
     db8:	ands	x21, x8, x21
     dbc:	b.ne	d6c <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xa8>  // b.any
     dc0:	ldp	x20, x19, [sp, #32]
     dc4:	ldp	x22, x21, [sp, #16]
     dc8:	ldp	x29, x30, [sp], #48
     dcc:	ret
     dd0:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     dd4:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     dd8:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ddc:	add	x0, x0, #0x0
     de0:	add	x1, x1, #0x0
     de4:	add	x3, x3, #0x0
     de8:	mov	w2, #0x64                  	// #100
     dec:	bl	0 <__assert_fail>
     df0:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     df4:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     df8:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     dfc:	add	x0, x0, #0x0
     e00:	add	x1, x1, #0x0
     e04:	add	x3, x3, #0x0
     e08:	mov	w2, #0xf1                  	// #241
     e0c:	bl	0 <__assert_fail>

0000000000000e10 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE>:
     e10:	stp	x29, x30, [sp, #-16]!
     e14:	mov	x29, sp
     e18:	ldr	x8, [x1]
     e1c:	cbz	x8, ee8 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xd8>
     e20:	ldr	x9, [x0, #8]
     e24:	clz	x10, x8
     e28:	eor	x10, x10, #0x3f
     e2c:	ldr	x11, [x9, x10, lsl #3]
     e30:	ldrb	w12, [x11, #40]
     e34:	cbz	w12, e4c <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x3c>
     e38:	ldr	w12, [x11, #32]
     e3c:	cbz	w12, e4c <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x3c>
     e40:	ldr	x12, [x11, #24]
     e44:	mov	w13, wzr
     e48:	b	e58 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x48>
     e4c:	ldr	x12, [x11, #24]
     e50:	cmp	x12, #0x0
     e54:	cset	w13, ne  // ne = any
     e58:	ldr	x14, [x1, #8]
     e5c:	tst	x12, x14
     e60:	b.ne	ec8 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xb8>  // b.any
     e64:	eor	x12, x12, x14
     e68:	str	x12, [x11, #24]
     e6c:	tbnz	w13, #0, ec0 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xb0>
     e70:	ldr	x11, [x0, #328]
     e74:	ldr	x12, [x0, #56]
     e78:	eor	x11, x11, x8
     e7c:	str	x11, [x0, #328]
     e80:	ldr	x10, [x12, x10, lsl #3]
     e84:	cbz	x10, ec0 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xb0>
     e88:	neg	x11, x10
     e8c:	ands	x11, x10, x11
     e90:	b.eq	ee8 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xd8>  // b.none
     e94:	clz	x11, x11
     e98:	eor	x11, x11, #0x3f
     e9c:	ldr	x11, [x9, x11, lsl #3]
     ea0:	ldr	x12, [x11, #24]
     ea4:	tst	x12, x8
     ea8:	b.ne	ec8 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xb8>  // b.any
     eac:	sub	x13, x10, #0x1
     eb0:	eor	x12, x12, x8
     eb4:	ands	x10, x13, x10
     eb8:	str	x12, [x11, #24]
     ebc:	b.ne	e88 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x78>  // b.any
     ec0:	ldp	x29, x30, [sp], #16
     ec4:	ret
     ec8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ecc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ed0:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ed4:	add	x0, x0, #0x0
     ed8:	add	x1, x1, #0x0
     edc:	add	x3, x3, #0x0
     ee0:	mov	w2, #0xf6                  	// #246
     ee4:	bl	0 <__assert_fail>
     ee8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     eec:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ef0:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ef4:	add	x0, x0, #0x0
     ef8:	add	x1, x1, #0x0
     efc:	add	x3, x3, #0x0
     f00:	mov	w2, #0x64                  	// #100
     f04:	bl	0 <__assert_fail>

0000000000000f08 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm>:
     f08:	ldr	x8, [x0, #352]
     f0c:	tst	x8, x1
     f10:	b.eq	f1c <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm+0x14>  // b.none
     f14:	mov	w0, #0x2                   	// #2
     f18:	ret
     f1c:	ldr	x8, [x0, #344]
     f20:	bics	xzr, x1, x8
     f24:	cset	w0, ne  // ne = any
     f28:	ret

0000000000000f2c <_ZN4llvm3mca15ResourceManager14reserveBuffersEm>:
     f2c:	stp	x29, x30, [sp, #-16]!
     f30:	mov	x29, sp
     f34:	cbnz	x1, f48 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x1c>
     f38:	ldp	x29, x30, [sp], #16
     f3c:	ret
     f40:	eor	x1, x8, x1
     f44:	cbz	x1, f38 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xc>
     f48:	neg	x8, x1
     f4c:	ands	x8, x1, x8
     f50:	b.eq	fb8 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x8c>  // b.none
     f54:	ldr	x9, [x0, #8]
     f58:	clz	x10, x8
     f5c:	eor	x10, x10, #0x3f
     f60:	ldr	x9, [x9, x10, lsl #3]
     f64:	ldr	w10, [x9, #32]
     f68:	cbz	w10, fa0 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x74>
     f6c:	cmp	w10, #0x1
     f70:	b.lt	f40 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x14>  // b.tstop
     f74:	ldr	w11, [x9, #36]
     f78:	cbz	w11, fd8 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xac>
     f7c:	sub	w11, w11, #0x1
     f80:	cmp	w11, w10
     f84:	str	w11, [x9, #36]
     f88:	b.hi	ff8 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xcc>  // b.pmore
     f8c:	cbnz	w11, f40 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x14>
     f90:	ldr	x9, [x0, #344]
     f94:	eor	x9, x9, x8
     f98:	str	x9, [x0, #344]
     f9c:	b	f40 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x14>
     fa0:	ldrb	w9, [x9, #40]
     fa4:	cbnz	w9, fd8 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xac>
     fa8:	ldr	x9, [x0, #352]
     fac:	eor	x9, x9, x8
     fb0:	str	x9, [x0, #352]
     fb4:	b	f40 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x14>
     fb8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     fbc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     fc0:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     fc4:	add	x0, x0, #0x0
     fc8:	add	x1, x1, #0x0
     fcc:	add	x3, x3, #0x0
     fd0:	mov	w2, #0x64                  	// #100
     fd4:	bl	0 <__assert_fail>
     fd8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     fdc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     fe0:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     fe4:	add	x0, x0, #0x0
     fe8:	add	x1, x1, #0x0
     fec:	add	x3, x3, #0x0
     ff0:	mov	w2, #0x102                 	// #258
     ff4:	bl	0 <__assert_fail>
     ff8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
     ffc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1000:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1004:	add	x0, x0, #0x0
    1008:	add	x1, x1, #0x0
    100c:	add	x3, x3, #0x0
    1010:	mov	w2, #0x112                 	// #274
    1014:	bl	0 <__assert_fail>

0000000000001018 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm>:
    1018:	stp	x29, x30, [sp, #-16]!
    101c:	mov	x29, sp
    1020:	ldr	x8, [x0, #344]
    1024:	orr	x8, x8, x1
    1028:	str	x8, [x0, #344]
    102c:	cbnz	x1, 1040 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x28>
    1030:	ldp	x29, x30, [sp], #16
    1034:	ret
    1038:	eor	x1, x8, x1
    103c:	cbz	x1, 1030 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x18>
    1040:	neg	x8, x1
    1044:	ands	x8, x1, x8
    1048:	b.eq	109c <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x84>  // b.none
    104c:	ldr	x9, [x0, #8]
    1050:	clz	x10, x8
    1054:	eor	x10, x10, #0x3f
    1058:	ldr	x9, [x9, x10, lsl #3]
    105c:	ldr	w10, [x9, #32]
    1060:	cmp	w10, #0x1
    1064:	b.lt	1038 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x20>  // b.tstop
    1068:	ldr	w11, [x9, #36]
    106c:	add	w11, w11, #0x1
    1070:	cmp	w11, w10
    1074:	str	w11, [x9, #36]
    1078:	b.ls	1038 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x20>  // b.plast
    107c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1080:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1084:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1088:	add	x0, x0, #0x0
    108c:	add	x1, x1, #0x0
    1090:	add	x3, x3, #0x0
    1094:	mov	w2, #0x11d                 	// #285
    1098:	bl	0 <__assert_fail>
    109c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    10a0:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    10a4:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    10a8:	add	x0, x0, #0x0
    10ac:	add	x1, x1, #0x0
    10b0:	add	x3, x3, #0x0
    10b4:	mov	w2, #0x64                  	// #100
    10b8:	bl	0 <__assert_fail>

00000000000010bc <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>:
    10bc:	stp	x29, x30, [sp, #-16]!
    10c0:	mov	x29, sp
    10c4:	ldr	w9, [x1, #184]
    10c8:	cbz	w9, 1154 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x98>
    10cc:	ldr	x10, [x1, #176]
    10d0:	add	x11, x9, x9, lsl #1
    10d4:	mov	x8, xzr
    10d8:	add	x9, x10, #0x14
    10dc:	lsl	x10, x11, #3
    10e0:	b	10f4 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x38>
    10e4:	orr	x8, x12, x8
    10e8:	subs	x10, x10, #0x18
    10ec:	add	x9, x9, #0x18
    10f0:	b.eq	1158 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x9c>  // b.none
    10f4:	ldurb	w11, [x9, #-4]
    10f8:	cbz	w11, 110c <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x50>
    10fc:	mov	w11, wzr
    1100:	ldur	x12, [x9, #-20]
    1104:	cbnz	x12, 1118 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x5c>
    1108:	b	117c <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0xc0>
    110c:	ldr	w11, [x9]
    1110:	ldur	x12, [x9, #-20]
    1114:	cbz	x12, 117c <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0xc0>
    1118:	ldr	x13, [x0, #8]
    111c:	clz	x14, x12
    1120:	eor	x14, x14, #0x3f
    1124:	ldr	x13, [x13, x14, lsl #3]
    1128:	ldrb	w14, [x13, #40]
    112c:	cbz	w14, 1138 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x7c>
    1130:	ldr	w14, [x13, #32]
    1134:	cbnz	w14, 10e4 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x28>
    1138:	ldr	d0, [x13, #24]
    113c:	cnt	v0.8b, v0.8b
    1140:	uaddlv	h0, v0.8b
    1144:	fmov	w13, s0
    1148:	cmp	w11, w13
    114c:	b.hi	10e4 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x28>  // b.pmore
    1150:	b	10e8 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x2c>
    1154:	mov	x8, xzr
    1158:	ldr	x9, [x0, #320]
    115c:	ands	x8, x9, x8
    1160:	b.ne	1170 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0xb4>  // b.any
    1164:	ldr	x8, [x1, #304]
    1168:	ldr	x9, [x0, #336]
    116c:	and	x8, x9, x8
    1170:	mov	x0, x8
    1174:	ldp	x29, x30, [sp], #16
    1178:	ret
    117c:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1180:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1184:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1188:	add	x0, x0, #0x0
    118c:	add	x1, x1, #0x0
    1190:	add	x3, x3, #0x0
    1194:	mov	w2, #0x64                  	// #100
    1198:	bl	0 <__assert_fail>

000000000000119c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>:
    119c:	sub	sp, sp, #0x70
    11a0:	stp	x29, x30, [sp, #32]
    11a4:	stp	x26, x25, [sp, #48]
    11a8:	stp	x24, x23, [sp, #64]
    11ac:	stp	x22, x21, [sp, #80]
    11b0:	stp	x20, x19, [sp, #96]
    11b4:	add	x29, sp, #0x20
    11b8:	ldr	w8, [x1, #184]
    11bc:	cbz	w8, 13d4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x238>
    11c0:	ldr	x22, [x1, #176]
    11c4:	add	x8, x8, x8, lsl #1
    11c8:	mov	x19, x2
    11cc:	mov	x20, x0
    11d0:	add	x21, x0, #0xd0
    11d4:	lsl	x23, x8, #3
    11d8:	mov	w24, #0x1                   	// #1
    11dc:	mov	w25, #0x18                  	// #24
    11e0:	b	1224 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x88>
    11e4:	add	x1, sp, #0x10
    11e8:	add	x2, sp, #0x10
    11ec:	mov	x0, x21
    11f0:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    11f4:	ldr	x9, [sp, #16]
    11f8:	mov	x3, x0
    11fc:	mov	w8, wzr
    1200:	str	x9, [x0]
    1204:	ldr	x9, [sp, #24]
    1208:	str	wzr, [x0, #16]
    120c:	str	x9, [x0, #8]
    1210:	add	w8, w8, w26
    1214:	str	w8, [x3, #16]
    1218:	subs	x23, x23, #0x18
    121c:	add	x22, x22, #0x18
    1220:	b.eq	13d4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x238>  // b.none
    1224:	ldp	w8, w9, [x22, #8]
    1228:	subs	w26, w9, w8
    122c:	b.eq	12b4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x118>  // b.none
    1230:	cbnz	w8, 1430 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x294>
    1234:	ldrb	w8, [x22, #16]
    1238:	cbz	w8, 1304 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x168>
    123c:	ldr	x8, [x22]
    1240:	sub	x9, x8, #0x1
    1244:	tst	x8, x9
    1248:	b.eq	1450 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2b4>  // b.none
    124c:	cbz	x8, 1410 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x274>
    1250:	ldr	x9, [x20, #8]
    1254:	clz	x8, x8
    1258:	eor	x8, x8, #0x3f
    125c:	ldr	x9, [x9, x8, lsl #3]
    1260:	ldrb	w10, [x9, #41]
    1264:	cbz	w10, 13f0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x254>
    1268:	ldrb	w10, [x9, #40]
    126c:	cbnz	w10, 13f0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x254>
    1270:	strb	w24, [x9, #40]
    1274:	ldr	x9, [x20, #336]
    1278:	lsl	x8, x24, x8
    127c:	add	x1, sp, #0x10
    1280:	mov	x2, sp
    1284:	eor	x8, x9, x8
    1288:	str	x8, [x20, #336]
    128c:	ldr	x8, [x22]
    1290:	mov	x0, x21
    1294:	str	x8, [sp, #16]
    1298:	ldr	x8, [x22]
    129c:	str	x8, [sp, #24]
    12a0:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    12a4:	ldr	x3, [sp]
    12a8:	tbz	w0, #0, 11e4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x48>
    12ac:	ldr	w8, [x3, #16]
    12b0:	b	1210 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x74>
    12b4:	ldr	x8, [x22]
    12b8:	cbz	x8, 1410 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x274>
    12bc:	ldr	x9, [x20, #8]
    12c0:	clz	x8, x8
    12c4:	eor	x8, x8, #0x3f
    12c8:	ldr	x9, [x9, x8, lsl #3]
    12cc:	ldrb	w10, [x9, #41]
    12d0:	strb	wzr, [x9, #40]
    12d4:	cbz	w10, 12e8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x14c>
    12d8:	ldr	x10, [x20, #336]
    12dc:	lsl	x11, x24, x8
    12e0:	eor	x10, x10, x11
    12e4:	str	x10, [x20, #336]
    12e8:	ldr	w9, [x9, #32]
    12ec:	cbnz	w9, 1218 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7c>
    12f0:	ldr	x9, [x20, #352]
    12f4:	lsl	x8, x24, x8
    12f8:	eor	x8, x9, x8
    12fc:	str	x8, [x20, #352]
    1300:	b	1218 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7c>
    1304:	ldr	x1, [x22]
    1308:	mov	x0, x20
    130c:	bl	bb4 <_ZN4llvm3mca15ResourceManager10selectPipeEm>
    1310:	stp	x0, x1, [sp, #16]
    1314:	add	x1, sp, #0x10
    1318:	mov	x0, x20
    131c:	bl	cc4 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE>
    1320:	ldp	w9, w8, [x22, #8]
    1324:	add	x1, sp, #0x10
    1328:	mov	x2, sp
    132c:	mov	x0, x21
    1330:	sub	w26, w8, w9
    1334:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1338:	ldr	x3, [sp]
    133c:	tbz	w0, #0, 1348 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1ac>
    1340:	ldr	w8, [x3, #16]
    1344:	b	136c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1d0>
    1348:	add	x1, sp, #0x10
    134c:	add	x2, sp, #0x10
    1350:	mov	x0, x21
    1354:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1358:	ldr	q0, [sp, #16]
    135c:	mov	x3, x0
    1360:	mov	w8, wzr
    1364:	str	wzr, [x0, #16]
    1368:	str	q0, [x0]
    136c:	add	w8, w26, w8
    1370:	str	w8, [x3, #16]
    1374:	ldr	q0, [sp, #16]
    1378:	ldp	w10, w9, [x22, #8]
    137c:	str	q0, [sp]
    1380:	ldp	w8, w11, [x19, #8]
    1384:	sub	w9, w9, w10
    1388:	orr	x26, x9, #0x100000000
    138c:	cmp	w8, w11
    1390:	b.cs	13c0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x224>  // b.hs, b.nlast
    1394:	ldr	x9, [x19]
    1398:	ldr	q0, [sp]
    139c:	umaddl	x8, w8, w25, x9
    13a0:	str	q0, [x8]
    13a4:	str	x26, [x8, #16]
    13a8:	ldp	w8, w9, [x19, #8]
    13ac:	cmp	w8, w9
    13b0:	b.cs	1470 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2d4>  // b.hs, b.nlast
    13b4:	add	w8, w8, #0x1
    13b8:	str	w8, [x19, #8]
    13bc:	b	1218 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7c>
    13c0:	mov	x0, x19
    13c4:	mov	x1, xzr
    13c8:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    13cc:	ldr	w8, [x19, #8]
    13d0:	b	1394 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1f8>
    13d4:	ldp	x20, x19, [sp, #96]
    13d8:	ldp	x22, x21, [sp, #80]
    13dc:	ldp	x24, x23, [sp, #64]
    13e0:	ldp	x26, x25, [sp, #48]
    13e4:	ldp	x29, x30, [sp, #32]
    13e8:	add	sp, sp, #0x70
    13ec:	ret
    13f0:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    13f4:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    13f8:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    13fc:	add	x0, x0, #0x0
    1400:	add	x1, x1, #0x0
    1404:	add	x3, x3, #0x0
    1408:	mov	w2, #0x15b                 	// #347
    140c:	bl	0 <__assert_fail>
    1410:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1414:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1418:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    141c:	add	x0, x0, #0x0
    1420:	add	x1, x1, #0x0
    1424:	add	x3, x3, #0x0
    1428:	mov	w2, #0x64                  	// #100
    142c:	bl	0 <__assert_fail>
    1430:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1434:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1438:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    143c:	add	x0, x0, #0x0
    1440:	add	x1, x1, #0x0
    1444:	add	x3, x3, #0x0
    1448:	mov	w2, #0x133                 	// #307
    144c:	bl	0 <__assert_fail>
    1450:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1454:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1458:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    145c:	add	x0, x0, #0x0
    1460:	add	x1, x1, #0x0
    1464:	add	x3, x3, #0x0
    1468:	mov	w2, #0x13b                 	// #315
    146c:	bl	0 <__assert_fail>
    1470:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1474:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1478:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    147c:	add	x0, x0, #0x0
    1480:	add	x1, x1, #0x0
    1484:	add	x3, x3, #0x0
    1488:	mov	w2, #0x43                  	// #67
    148c:	bl	0 <__assert_fail>

0000000000001490 <_ZN4llvm3mca15ResourceManager15releaseResourceEm>:
    1490:	stp	x29, x30, [sp, #-16]!
    1494:	mov	x29, sp
    1498:	cbz	x1, 14f8 <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x68>
    149c:	ldr	x9, [x0, #8]
    14a0:	clz	x8, x1
    14a4:	eor	x8, x8, #0x3f
    14a8:	ldr	x9, [x9, x8, lsl #3]
    14ac:	ldrb	w10, [x9, #41]
    14b0:	strb	wzr, [x9, #40]
    14b4:	cbz	w10, 14cc <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x3c>
    14b8:	ldr	x10, [x0, #336]
    14bc:	mov	w11, #0x1                   	// #1
    14c0:	lsl	x11, x11, x8
    14c4:	eor	x10, x10, x11
    14c8:	str	x10, [x0, #336]
    14cc:	ldr	w9, [x9, #32]
    14d0:	cbz	w9, 14dc <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x4c>
    14d4:	ldp	x29, x30, [sp], #16
    14d8:	ret
    14dc:	ldr	x9, [x0, #352]
    14e0:	mov	w10, #0x1                   	// #1
    14e4:	lsl	x8, x10, x8
    14e8:	eor	x8, x9, x8
    14ec:	str	x8, [x0, #352]
    14f0:	ldp	x29, x30, [sp], #16
    14f4:	ret
    14f8:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    14fc:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1500:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1504:	add	x0, x0, #0x0
    1508:	add	x1, x1, #0x0
    150c:	add	x3, x3, #0x0
    1510:	mov	w2, #0x64                  	// #100
    1514:	bl	0 <__assert_fail>

0000000000001518 <_ZN4llvm3mca15ResourceManager15reserveResourceEm>:
    1518:	stp	x29, x30, [sp, #-16]!
    151c:	mov	x29, sp
    1520:	cbz	x1, 1584 <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x6c>
    1524:	ldr	x9, [x0, #8]
    1528:	clz	x8, x1
    152c:	eor	x8, x8, #0x3f
    1530:	ldr	x9, [x9, x8, lsl #3]
    1534:	ldrb	w10, [x9, #41]
    1538:	cbz	w10, 1564 <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x4c>
    153c:	ldrb	w10, [x9, #40]
    1540:	cbnz	w10, 1564 <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x4c>
    1544:	mov	w10, #0x1                   	// #1
    1548:	strb	w10, [x9, #40]
    154c:	ldr	x9, [x0, #336]
    1550:	lsl	x8, x10, x8
    1554:	eor	x8, x9, x8
    1558:	str	x8, [x0, #336]
    155c:	ldp	x29, x30, [sp], #16
    1560:	ret
    1564:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1568:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    156c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1570:	add	x0, x0, #0x0
    1574:	add	x1, x1, #0x0
    1578:	add	x3, x3, #0x0
    157c:	mov	w2, #0x15b                 	// #347
    1580:	bl	0 <__assert_fail>
    1584:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1588:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    158c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1590:	add	x0, x0, #0x0
    1594:	add	x1, x1, #0x0
    1598:	add	x3, x3, #0x0
    159c:	mov	w2, #0x64                  	// #100
    15a0:	bl	0 <__assert_fail>

00000000000015a4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE>:
    15a4:	sub	sp, sp, #0x70
    15a8:	stp	x29, x30, [sp, #32]
    15ac:	stp	x26, x25, [sp, #48]
    15b0:	stp	x24, x23, [sp, #64]
    15b4:	stp	x22, x21, [sp, #80]
    15b8:	stp	x20, x19, [sp, #96]
    15bc:	add	x29, sp, #0x20
    15c0:	ldr	w8, [x0, #216]
    15c4:	mov	x20, x1
    15c8:	mov	x21, x0
    15cc:	add	x19, x0, #0xd0
    15d0:	cmp	w8, #0x1
    15d4:	b.hi	15ec <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x48>  // b.pmore
    15d8:	cbz	w8, 1684 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xe0>
    15dc:	add	x9, x19, #0x10
    15e0:	add	x22, x19, #0x70
    15e4:	mov	w10, #0x4                   	// #4
    15e8:	b	1694 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xf0>
    15ec:	tbnz	w8, #0, 160c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x68>
    15f0:	ldr	x22, [x19, #16]
    15f4:	ldr	w9, [x19, #24]
    15f8:	ldr	x24, [x19]
    15fc:	mov	w10, #0x18                  	// #24
    1600:	madd	x23, x9, x10, x22
    1604:	cbnz	w9, 161c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x78>
    1608:	b	16a4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x100>
    160c:	mov	x23, x19
    1610:	ldr	x24, [x23], #112
    1614:	add	x22, x19, #0x10
    1618:	mov	w9, #0x4                   	// #4
    161c:	lsl	x9, x9, #3
    1620:	sub	x9, x9, #0x8
    1624:	lsr	x9, x9, #3
    1628:	mov	w10, #0x18                  	// #24
    162c:	madd	x9, x9, x10, x22
    1630:	and	w8, w8, #0x1
    1634:	add	x9, x9, #0x18
    1638:	b	1648 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xa4>
    163c:	add	x22, x22, #0x18
    1640:	cmp	x22, x23
    1644:	b.eq	166c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xc8>  // b.none
    1648:	ldp	x11, x10, [x22]
    164c:	and	x12, x10, x11
    1650:	cmn	x12, #0x1
    1654:	b.eq	163c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x98>  // b.none
    1658:	cmn	x11, #0x2
    165c:	b.ne	1670 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xcc>  // b.any
    1660:	cmn	x10, #0x2
    1664:	b.eq	163c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x98>  // b.none
    1668:	b	1670 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xcc>
    166c:	mov	x22, x9
    1670:	cbz	w8, 16a4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x100>
    1674:	add	x25, x19, #0x70
    1678:	cmp	x19, x19
    167c:	b.eq	16bc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x118>  // b.none
    1680:	b	1884 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2e0>
    1684:	ldr	x9, [x19, #16]
    1688:	ldr	w10, [x19, #24]
    168c:	mov	w11, #0x18                  	// #24
    1690:	madd	x22, x10, x11, x9
    1694:	ldr	x24, [x19]
    1698:	mov	w11, #0x18                  	// #24
    169c:	madd	x23, x10, x11, x9
    16a0:	cbnz	w8, 1674 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xd0>
    16a4:	ldr	x8, [x19, #16]
    16a8:	ldr	w9, [x19, #24]
    16ac:	mov	w10, #0x18                  	// #24
    16b0:	madd	x25, x9, x10, x8
    16b4:	cmp	x19, x19
    16b8:	b.ne	1884 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2e0>  // b.any
    16bc:	mov	w26, #0x1                   	// #1
    16c0:	b	16d0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x12c>
    16c4:	mov	x22, x23
    16c8:	cmp	x19, x19
    16cc:	b.ne	1884 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2e0>  // b.any
    16d0:	cmp	x22, x25
    16d4:	b.eq	17f8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x254>  // b.none
    16d8:	ldr	w8, [x22, #16]
    16dc:	cbz	w8, 16ec <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x148>
    16e0:	subs	w8, w8, #0x1
    16e4:	str	w8, [x22, #16]
    16e8:	b.ne	1798 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1f4>  // b.any
    16ec:	ldr	x8, [x22]
    16f0:	fmov	d0, x8
    16f4:	cnt	v0.8b, v0.8b
    16f8:	uaddlv	h0, v0.8b
    16fc:	fmov	w9, s0
    1700:	cmp	x9, #0x1
    1704:	b.ne	1718 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x174>  // b.any
    1708:	mov	x0, x21
    170c:	mov	x1, x22
    1710:	bl	e10 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE>
    1714:	ldr	x8, [x22]
    1718:	cbz	x8, 18c4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x320>
    171c:	ldr	x9, [x21, #8]
    1720:	clz	x8, x8
    1724:	eor	x8, x8, #0x3f
    1728:	ldr	x9, [x9, x8, lsl #3]
    172c:	ldrb	w10, [x9, #41]
    1730:	strb	wzr, [x9, #40]
    1734:	cbz	w10, 1748 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1a4>
    1738:	ldr	x10, [x21, #336]
    173c:	lsl	x11, x26, x8
    1740:	eor	x10, x10, x11
    1744:	str	x10, [x21, #336]
    1748:	ldr	w9, [x9, #32]
    174c:	cbnz	w9, 1760 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1bc>
    1750:	ldr	x9, [x21, #352]
    1754:	lsl	x8, x26, x8
    1758:	eor	x8, x9, x8
    175c:	str	x8, [x21, #352]
    1760:	ldp	w8, w9, [x20, #8]
    1764:	cmp	w8, w9
    1768:	b.cs	17e4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x240>  // b.hs, b.nlast
    176c:	ldr	x9, [x20]
    1770:	ldr	q0, [x22]
    1774:	str	q0, [x9, w8, uxtw #4]
    1778:	ldp	w8, w9, [x20, #8]
    177c:	cmp	w8, w9
    1780:	b.cs	18e4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x340>  // b.hs, b.nlast
    1784:	add	w8, w8, #0x1
    1788:	str	w8, [x20, #8]
    178c:	ldr	x8, [x19]
    1790:	cmp	x8, x24
    1794:	b.ne	1904 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x360>  // b.any
    1798:	add	x8, x22, #0x18
    179c:	cmp	x8, x23
    17a0:	b.hi	18a4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x300>  // b.pmore
    17a4:	mov	x22, x23
    17a8:	b.ne	17bc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x218>  // b.any
    17ac:	b	16c8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x124>
    17b0:	add	x8, x8, #0x18
    17b4:	cmp	x8, x23
    17b8:	b.eq	16c4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x120>  // b.none
    17bc:	ldp	x10, x9, [x8]
    17c0:	and	x11, x9, x10
    17c4:	cmn	x11, #0x1
    17c8:	b.eq	17b0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x20c>  // b.none
    17cc:	cmn	x10, #0x2
    17d0:	b.ne	17dc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x238>  // b.any
    17d4:	cmn	x9, #0x2
    17d8:	b.eq	17b0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x20c>  // b.none
    17dc:	mov	x22, x8
    17e0:	b	16c8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x124>
    17e4:	mov	x0, x20
    17e8:	mov	x1, xzr
    17ec:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    17f0:	ldr	w8, [x20, #8]
    17f4:	b	176c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1c8>
    17f8:	ldr	w8, [x20, #8]
    17fc:	cbz	w8, 1868 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2c4>
    1800:	ldr	x20, [x20]
    1804:	lsl	x21, x8, #4
    1808:	mov	x8, #0xfffffffffffffffe    	// #-2
    180c:	dup	v0.2d, x8
    1810:	str	q0, [sp]
    1814:	b	1824 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x280>
    1818:	subs	x21, x21, #0x10
    181c:	add	x20, x20, #0x10
    1820:	b.eq	1868 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2c4>  // b.none
    1824:	sub	x2, x29, #0x8
    1828:	mov	x0, x19
    182c:	mov	x1, x20
    1830:	bl	0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1834:	tbz	w0, #0, 1818 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x274>
    1838:	ldur	x8, [x29, #-8]
    183c:	ldr	q0, [sp]
    1840:	str	q0, [x8]
    1844:	ldr	w8, [x19, #8]
    1848:	cmp	w8, #0x1
    184c:	b.ls	1924 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x380>  // b.plast
    1850:	ldr	w9, [x19, #12]
    1854:	sub	w8, w8, #0x2
    1858:	str	w8, [x19, #8]
    185c:	add	w8, w9, #0x1
    1860:	str	w8, [x19, #12]
    1864:	b	1818 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x274>
    1868:	ldp	x20, x19, [sp, #96]
    186c:	ldp	x22, x21, [sp, #80]
    1870:	ldp	x24, x23, [sp, #64]
    1874:	ldp	x26, x25, [sp, #48]
    1878:	ldp	x29, x30, [sp, #32]
    187c:	add	sp, sp, #0x70
    1880:	ret
    1884:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1888:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    188c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1890:	add	x0, x0, #0x0
    1894:	add	x1, x1, #0x0
    1898:	add	x3, x3, #0x0
    189c:	mov	w2, #0x4ca                 	// #1226
    18a0:	bl	0 <__assert_fail>
    18a4:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    18a8:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    18ac:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    18b0:	add	x0, x0, #0x0
    18b4:	add	x1, x1, #0x0
    18b8:	add	x3, x3, #0x0
    18bc:	mov	w2, #0x4e0                 	// #1248
    18c0:	bl	0 <__assert_fail>
    18c4:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    18c8:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    18cc:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    18d0:	add	x0, x0, #0x0
    18d4:	add	x1, x1, #0x0
    18d8:	add	x3, x3, #0x0
    18dc:	mov	w2, #0x64                  	// #100
    18e0:	bl	0 <__assert_fail>
    18e4:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    18e8:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    18ec:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    18f0:	add	x0, x0, #0x0
    18f4:	add	x1, x1, #0x0
    18f8:	add	x3, x3, #0x0
    18fc:	mov	w2, #0x43                  	// #67
    1900:	bl	0 <__assert_fail>
    1904:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1908:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    190c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1910:	add	x0, x0, #0x0
    1914:	add	x1, x1, #0x0
    1918:	add	x3, x3, #0x0
    191c:	mov	w2, #0x4cf                 	// #1231
    1920:	bl	0 <__assert_fail>
    1924:	adrp	x0, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1928:	adrp	x1, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    192c:	adrp	x3, 0 <_ZN4llvm3mca16ResourceStrategyD0Ev>
    1930:	add	x0, x0, #0x0
    1934:	add	x1, x1, #0x0
    1938:	add	x3, x3, #0x0
    193c:	mov	w2, #0x441                 	// #1089
    1940:	bl	0 <__assert_fail>

0000000000001944 <_ZN4llvm3mca16ResourceStrategyD1Ev>:
    1944:	ret

Disassembly of section .text._ZN4llvm3mca16ResourceStrategy4usedEm:

0000000000000000 <_ZN4llvm3mca16ResourceStrategy4usedEm>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca23DefaultResourceStrategyD0Ev:

0000000000000000 <_ZN4llvm3mca23DefaultResourceStrategyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD2Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x9, 0 <_ZN4llvm3mca15ResourceManagerD2Ev>
  14:	ldrb	w8, [x0, #216]
  18:	ldr	x9, [x9]
  1c:	mov	x19, x0
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	tbnz	w8, #0, 3c <_ZN4llvm3mca15ResourceManagerD2Ev+0x3c>
  2c:	ldr	x0, [x19, #224]
  30:	bl	0 <_ZdlPv>
  34:	ldrb	w8, [x19, #216]
  38:	tbnz	w8, #0, 11c <_ZN4llvm3mca15ResourceManagerD2Ev+0x11c>
  3c:	ldr	x8, [x19, #208]
  40:	ldr	x0, [x19, #160]
  44:	add	x9, x19, #0xb0
  48:	add	x8, x8, #0x1
  4c:	cmp	x0, x9
  50:	str	x8, [x19, #208]
  54:	b.eq	5c <_ZN4llvm3mca15ResourceManagerD2Ev+0x5c>  // b.none
  58:	bl	0 <free>
  5c:	ldr	x0, [x19, #80]
  60:	add	x8, x19, #0x60
  64:	cmp	x0, x8
  68:	b.eq	70 <_ZN4llvm3mca15ResourceManagerD2Ev+0x70>  // b.none
  6c:	bl	0 <free>
  70:	ldr	x0, [x19, #56]
  74:	cbz	x0, 7c <_ZN4llvm3mca15ResourceManagerD2Ev+0x7c>
  78:	bl	0 <_ZdlPv>
  7c:	ldp	x20, x21, [x19, #32]
  80:	cmp	x20, x21
  84:	b.ne	c4 <_ZN4llvm3mca15ResourceManagerD2Ev+0xc4>  // b.any
  88:	cbz	x20, 94 <_ZN4llvm3mca15ResourceManagerD2Ev+0x94>
  8c:	mov	x0, x20
  90:	bl	0 <_ZdlPv>
  94:	ldp	x20, x21, [x19, #8]
  98:	cmp	x20, x21
  9c:	b.ne	e8 <_ZN4llvm3mca15ResourceManagerD2Ev+0xe8>  // b.any
  a0:	cbz	x20, 10c <_ZN4llvm3mca15ResourceManagerD2Ev+0x10c>
  a4:	mov	x0, x20
  a8:	ldp	x20, x19, [sp, #32]
  ac:	ldr	x21, [sp, #16]
  b0:	ldp	x29, x30, [sp], #48
  b4:	b	0 <_ZdlPv>
  b8:	str	xzr, [x20], #8
  bc:	cmp	x21, x20
  c0:	b.eq	f8 <_ZN4llvm3mca15ResourceManagerD2Ev+0xf8>  // b.none
  c4:	ldr	x0, [x20]
  c8:	cbz	x0, b8 <_ZN4llvm3mca15ResourceManagerD2Ev+0xb8>
  cc:	ldr	x8, [x0]
  d0:	ldr	x8, [x8, #8]
  d4:	blr	x8
  d8:	b	b8 <_ZN4llvm3mca15ResourceManagerD2Ev+0xb8>
  dc:	str	xzr, [x20], #8
  e0:	cmp	x21, x20
  e4:	b.eq	104 <_ZN4llvm3mca15ResourceManagerD2Ev+0x104>  // b.none
  e8:	ldr	x0, [x20]
  ec:	cbz	x0, dc <_ZN4llvm3mca15ResourceManagerD2Ev+0xdc>
  f0:	bl	0 <_ZdlPv>
  f4:	b	dc <_ZN4llvm3mca15ResourceManagerD2Ev+0xdc>
  f8:	ldr	x20, [x19, #32]
  fc:	cbnz	x20, 8c <_ZN4llvm3mca15ResourceManagerD2Ev+0x8c>
 100:	b	94 <_ZN4llvm3mca15ResourceManagerD2Ev+0x94>
 104:	ldr	x20, [x19, #8]
 108:	cbnz	x20, a4 <_ZN4llvm3mca15ResourceManagerD2Ev+0xa4>
 10c:	ldp	x20, x19, [sp, #32]
 110:	ldr	x21, [sp, #16]
 114:	ldp	x29, x30, [sp], #48
 118:	ret
 11c:	adrp	x0, 0 <_ZN4llvm3mca15ResourceManagerD2Ev>
 120:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD2Ev>
 124:	adrp	x3, 0 <_ZN4llvm3mca15ResourceManagerD2Ev>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0x45b                 	// #1115
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD0Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca15ResourceManagerD0Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #8]
   c:	tbnz	w8, #0, 20 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x20>
  10:	ldr	w11, [x0, #24]
  14:	cbz	w11, c4 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xc4>
  18:	ldr	x8, [x0, #16]
  1c:	b	28 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x28>
  20:	add	x8, x0, #0x10
  24:	mov	w11, #0x4                   	// #4
  28:	ldp	x9, x10, [x1]
  2c:	and	x12, x10, x9
  30:	cmn	x12, #0x1
  34:	b.eq	13c <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x13c>  // b.none
  38:	cmn	x9, #0x2
  3c:	b.ne	48 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x48>  // b.any
  40:	cmn	x10, #0x2
  44:	b.eq	13c <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x13c>  // b.none
  48:	mov	x13, #0x2500000000          	// #158913789952
  4c:	mov	w14, #0x25                  	// #37
  50:	mov	x15, #0xffffffffffffffff    	// #-1
  54:	sub	w12, w11, #0x1
  58:	mul	x11, x9, x13
  5c:	mul	w13, w10, w14
  60:	orr	x11, x13, x11
  64:	eor	x13, x15, x13, lsl #32
  68:	add	x11, x11, x13
  6c:	eor	x11, x11, x11, lsr #22
  70:	eor	x13, x15, x11, lsl #13
  74:	add	x11, x11, x13
  78:	eor	x11, x11, x11, lsr #8
  7c:	add	x11, x11, x11, lsl #3
  80:	eor	x11, x11, x11, lsr #15
  84:	eor	x13, x15, x11, lsl #27
  88:	add	x11, x11, x13
  8c:	lsr	x13, x11, #31
  90:	eor	w11, w13, w11
  94:	and	w14, w12, w11
  98:	mov	w13, #0x18                  	// #24
  9c:	umaddl	x11, w14, w13, x8
  a0:	ldp	x16, x18, [x11]
  a4:	cmp	x9, x16
  a8:	b.ne	d0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xd0>  // b.any
  ac:	cmp	x10, x18
  b0:	b.ne	d0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xd0>  // b.any
  b4:	mov	w0, #0x1                   	// #1
  b8:	str	x11, [x2]
  bc:	ldp	x29, x30, [sp], #16
  c0:	ret
  c4:	mov	x11, xzr
  c8:	mov	w0, wzr
  cc:	b	b8 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xb8>
  d0:	mov	x15, xzr
  d4:	mov	w1, #0x1                   	// #1
  d8:	mov	x17, #0xfffffffffffffffe    	// #-2
  dc:	and	x0, x18, x16
  e0:	cmn	x0, #0x1
  e4:	b.eq	12c <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0x12c>  // b.none
  e8:	cmn	x18, #0x2
  ec:	add	w14, w14, w1
  f0:	ccmp	x16, x17, #0x0, eq  // eq = none
  f4:	and	w14, w14, w12
  f8:	ccmp	x15, #0x0, #0x0, eq  // eq = none
  fc:	csel	x15, x15, x11, ne  // ne = any
 100:	umaddl	x11, w14, w13, x8
 104:	ldp	x16, x18, [x11]
 108:	add	w3, w1, #0x1
 10c:	mov	w1, w3
 110:	cmp	x9, x16
 114:	b.ne	dc <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xdc>  // b.any
 118:	cmp	x10, x18
 11c:	mov	w0, #0x1                   	// #1
 120:	mov	w1, w3
 124:	b.eq	b8 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xb8>  // b.none
 128:	b	dc <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xdc>
 12c:	cmp	x15, #0x0
 130:	mov	w0, wzr
 134:	csel	x11, x11, x15, eq  // eq = none
 138:	b	b8 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_+0xb8>
 13c:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
 140:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
 144:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E15LookupBucketForIS3_EEbRKT_RPKS8_>
 148:	add	x0, x0, #0x0
 14c:	add	x1, x1, #0x0
 150:	add	x3, x3, #0x0
 154:	mov	w2, #0x252                 	// #594
 158:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	x8, [x0]
  14:	ldr	w9, [x0, #8]
  18:	mov	x20, x2
  1c:	mov	x19, x0
  20:	add	x8, x8, #0x1
  24:	str	x8, [x0]
  28:	lsr	w8, w9, #1
  2c:	tbnz	w9, #0, 38 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x38>
  30:	ldr	w1, [x19, #24]
  34:	b	3c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x3c>
  38:	mov	w1, #0x4                   	// #4
  3c:	lsl	w9, w8, #2
  40:	add	w9, w9, #0x4
  44:	add	w10, w1, w1, lsl #1
  48:	cmp	w9, w10
  4c:	b.cs	b4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xb4>  // b.hs, b.nlast
  50:	ldr	w9, [x19, #12]
  54:	mvn	w8, w8
  58:	add	w8, w1, w8
  5c:	sub	w8, w8, w9
  60:	cmp	w8, w1, lsr #3
  64:	b.ls	b8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xb8>  // b.plast
  68:	cbz	x3, d8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xd8>
  6c:	ldr	w8, [x19, #8]
  70:	lsr	w9, w8, #1
  74:	adds	w9, w9, #0x1
  78:	b.mi	f8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xf8>  // b.first
  7c:	bfi	w8, w9, #1, #31
  80:	str	w8, [x19, #8]
  84:	ldp	x8, x9, [x3]
  88:	and	x8, x9, x8
  8c:	cmn	x8, #0x1
  90:	b.eq	a0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xa0>  // b.none
  94:	ldr	w8, [x19, #12]
  98:	sub	w8, w8, #0x1
  9c:	str	w8, [x19, #12]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldp	x29, x30, [sp, #16]
  a8:	mov	x0, x3
  ac:	add	sp, sp, #0x30
  b0:	ret
  b4:	lsl	w1, w1, #1
  b8:	mov	x0, x19
  bc:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  c0:	add	x2, sp, #0x8
  c4:	mov	x0, x19
  c8:	mov	x1, x20
  cc:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  d0:	ldr	x3, [sp, #8]
  d4:	cbnz	x3, 6c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x6c>
  d8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  dc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  e0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x22f                 	// #559
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  fc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 100:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x441                 	// #1089
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj:

0000000000000000 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>:
   0:	sub	sp, sp, #0x90
   4:	stp	x29, x30, [sp, #96]
   8:	stp	x22, x21, [sp, #112]
   c:	stp	x20, x19, [sp, #128]
  10:	add	x29, sp, #0x60
  14:	cmp	w1, #0x5
  18:	mov	x19, x0
  1c:	b.cc	50 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x50>  // b.lo, b.ul, b.last
  20:	sub	w8, w1, #0x1
  24:	orr	x8, x8, x8, lsr #1
  28:	orr	x8, x8, x8, lsr #2
  2c:	orr	x8, x8, x8, lsr #4
  30:	orr	x8, x8, x8, lsr #8
  34:	orr	x8, x8, x8, lsr #16
  38:	lsr	x9, x8, #32
  3c:	orr	w8, w9, w8
  40:	add	w9, w8, #0x1
  44:	cmp	w9, #0x40
  48:	mov	w9, #0x40                  	// #64
  4c:	csinc	w1, w9, w8, ls  // ls = plast
  50:	ldr	w8, [x19, #8]
  54:	tbnz	w8, #0, 74 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x74>
  58:	ldr	x20, [x19, #16]
  5c:	ldr	w21, [x19, #24]
  60:	cmp	w1, #0x4
  64:	b.hi	b8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xb8>  // b.pmore
  68:	orr	w8, w8, #0x1
  6c:	str	w8, [x19, #8]
  70:	b	cc <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xcc>
  74:	mov	x8, x19
  78:	ldr	x10, [x8, #16]!
  7c:	ldr	x9, [x8, #8]
  80:	and	x11, x9, x10
  84:	cmn	x11, #0x1
  88:	b.eq	f8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xf8>  // b.none
  8c:	cmn	x10, #0x2
  90:	mov	x20, sp
  94:	b.ne	a0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xa0>  // b.any
  98:	cmn	x9, #0x2
  9c:	b.eq	fc <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xfc>  // b.none
  a0:	ldr	q0, [x8]
  a4:	add	x20, x20, #0x18
  a8:	str	q0, [sp]
  ac:	ldr	w8, [x19, #32]
  b0:	str	w8, [sp, #16]
  b4:	b	fc <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xfc>
  b8:	mov	w22, w1
  bc:	add	x8, x22, w1, uxtw #1
  c0:	lsl	x0, x8, #3
  c4:	bl	0 <_Znwm>
  c8:	stp	x0, x22, [x19, #16]
  cc:	mov	w8, #0x18                  	// #24
  d0:	madd	x2, x21, x8, x20
  d4:	mov	x0, x19
  d8:	mov	x1, x20
  dc:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  e0:	mov	x0, x20
  e4:	ldp	x20, x19, [sp, #128]
  e8:	ldp	x22, x21, [sp, #112]
  ec:	ldp	x29, x30, [sp, #96]
  f0:	add	sp, sp, #0x90
  f4:	b	0 <_ZdlPv>
  f8:	mov	x20, sp
  fc:	mov	x8, x19
 100:	ldr	x10, [x8, #40]!
 104:	ldr	x9, [x8, #8]
 108:	and	x11, x9, x10
 10c:	cmn	x11, #0x1
 110:	b.eq	158 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x158>  // b.none
 114:	cmn	x10, #0x2
 118:	b.ne	124 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x124>  // b.any
 11c:	cmn	x9, #0x2
 120:	b.eq	158 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x158>  // b.none
 124:	mov	x9, sp
 128:	sub	x9, x20, x9
 12c:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 130:	asr	x9, x9, #3
 134:	movk	x10, #0xaaab
 138:	mul	x9, x9, x10
 13c:	cmp	x9, #0x3
 140:	b.hi	25c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x25c>  // b.pmore
 144:	ldr	q0, [x8]
 148:	str	q0, [x20]
 14c:	ldr	w8, [x19, #56]
 150:	str	w8, [x20, #16]
 154:	add	x20, x20, #0x18
 158:	mov	x8, x19
 15c:	ldr	x10, [x8, #64]!
 160:	ldr	x9, [x8, #8]
 164:	and	x11, x9, x10
 168:	cmn	x11, #0x1
 16c:	b.eq	1b4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1b4>  // b.none
 170:	cmn	x10, #0x2
 174:	b.ne	180 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x180>  // b.any
 178:	cmn	x9, #0x2
 17c:	b.eq	1b4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1b4>  // b.none
 180:	mov	x9, sp
 184:	sub	x9, x20, x9
 188:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 18c:	asr	x9, x9, #3
 190:	movk	x10, #0xaaab
 194:	mul	x9, x9, x10
 198:	cmp	x9, #0x3
 19c:	b.hi	25c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x25c>  // b.pmore
 1a0:	ldr	q0, [x8]
 1a4:	str	q0, [x20]
 1a8:	ldr	w8, [x19, #80]
 1ac:	str	w8, [x20, #16]
 1b0:	add	x20, x20, #0x18
 1b4:	mov	x8, x19
 1b8:	ldr	x10, [x8, #88]!
 1bc:	ldr	x9, [x8, #8]
 1c0:	and	x11, x9, x10
 1c4:	cmn	x11, #0x1
 1c8:	b.eq	210 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x210>  // b.none
 1cc:	cmn	x10, #0x2
 1d0:	b.ne	1dc <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1dc>  // b.any
 1d4:	cmn	x9, #0x2
 1d8:	b.eq	210 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x210>  // b.none
 1dc:	mov	x9, sp
 1e0:	sub	x9, x20, x9
 1e4:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1e8:	asr	x9, x9, #3
 1ec:	movk	x10, #0xaaab
 1f0:	mul	x9, x9, x10
 1f4:	cmp	x9, #0x3
 1f8:	b.hi	25c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x25c>  // b.pmore
 1fc:	ldr	q0, [x8]
 200:	str	q0, [x20]
 204:	ldr	w8, [x19, #104]
 208:	str	w8, [x20, #16]
 20c:	add	x20, x20, #0x18
 210:	cmp	w1, #0x4
 214:	b.ls	238 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x238>  // b.plast
 218:	ldr	w8, [x19, #8]
 21c:	mov	w21, w1
 220:	add	x9, x21, w1, uxtw #1
 224:	lsl	x0, x9, #3
 228:	and	w8, w8, #0xfffffffe
 22c:	str	w8, [x19, #8]
 230:	bl	0 <_Znwm>
 234:	stp	x0, x21, [x19, #16]
 238:	mov	x1, sp
 23c:	mov	x0, x19
 240:	mov	x2, x20
 244:	bl	0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 248:	ldp	x20, x19, [sp, #128]
 24c:	ldp	x22, x21, [sp, #112]
 250:	ldp	x29, x30, [sp, #96]
 254:	add	sp, sp, #0x90
 258:	ret
 25c:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 260:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 264:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 268:	add	x0, x0, #0x0
 26c:	add	x1, x1, #0x0
 270:	add	x3, x3, #0x0
 274:	mov	w2, #0x402                 	// #1026
 278:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w9, [x0, #8]
  14:	mov	x19, x2
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	and	w8, w9, #0x1
  24:	stp	w8, wzr, [x0, #8]
  28:	tbnz	w9, #0, 38 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x38>
  2c:	ldr	w9, [x21, #24]
  30:	sub	w10, w9, #0x1
  34:	b	40 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x40>
  38:	mov	w10, #0x3                   	// #3
  3c:	mov	w9, #0x4                   	// #4
  40:	tst	w10, w9
  44:	b.ne	154 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x154>  // b.any
  48:	cbnz	w8, 64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x64>
  4c:	ldr	w9, [x21, #24]
  50:	cbz	w9, 84 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x84>
  54:	ldr	x8, [x21, #16]
  58:	mov	w10, #0x18                  	// #24
  5c:	madd	x9, x9, x10, x8
  60:	b	6c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x6c>
  64:	add	x8, x21, #0x10
  68:	add	x9, x21, #0x70
  6c:	mov	x10, #0xffffffffffffffff    	// #-1
  70:	add	x11, x8, #0x18
  74:	cmp	x9, x11
  78:	stp	x10, x10, [x8]
  7c:	mov	x8, x11
  80:	b.ne	70 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x70>  // b.any
  84:	cmp	x20, x19
  88:	b.ne	a8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0xa8>  // b.any
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldr	x21, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret
  9c:	add	x20, x20, #0x18
  a0:	cmp	x19, x20
  a4:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x8c>  // b.none
  a8:	ldp	x9, x8, [x20]
  ac:	and	x10, x8, x9
  b0:	cmn	x10, #0x1
  b4:	b.eq	9c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x9c>  // b.none
  b8:	cmn	x9, #0x2
  bc:	b.ne	c8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0xc8>  // b.any
  c0:	cmn	x8, #0x2
  c4:	b.eq	9c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x9c>  // b.none
  c8:	add	x2, x29, #0x18
  cc:	mov	x0, x21
  d0:	mov	x1, x20
  d4:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
  d8:	tbnz	w0, #0, 114 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x114>
  dc:	ldr	x8, [x29, #24]
  e0:	ldr	x9, [x20]
  e4:	str	x9, [x8]
  e8:	ldr	x9, [x20, #8]
  ec:	str	x9, [x8, #8]
  f0:	ldr	w9, [x20, #16]
  f4:	str	w9, [x8, #16]
  f8:	ldr	w8, [x21, #8]
  fc:	lsr	w9, w8, #1
 100:	adds	w9, w9, #0x1
 104:	b.mi	134 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x134>  // b.first
 108:	bfi	w8, w9, #1, #31
 10c:	str	w8, [x21, #8]
 110:	b	9c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x9c>
 114:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 118:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 11c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0x17a                 	// #378
 130:	bl	0 <__assert_fail>
 134:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 138:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 13c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 140:	add	x0, x0, #0x0
 144:	add	x1, x1, #0x0
 148:	add	x3, x3, #0x0
 14c:	mov	w2, #0x441                 	// #1089
 150:	bl	0 <__assert_fail>
 154:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 158:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 15c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 160:	add	x0, x0, #0x0
 164:	add	x1, x1, #0x0
 168:	add	x3, x3, #0x0
 16c:	mov	w2, #0x15c                 	// #348
 170:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	add	x8, x21, x21, lsl #1
  6c:	lsl	x0, x8, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xec>
  c4:	add	x8, x8, x8, lsl #1
  c8:	lsl	x8, x8, #3
  cc:	mov	x9, x20
  d0:	ldr	x10, [x0, #16]
  d4:	ldr	q0, [x0], #24
  d8:	subs	x8, x8, #0x18
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9], #24
  e4:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xd0>  // b.any
  e8:	ldr	x0, [x19]
  ec:	add	x8, x19, #0x10
  f0:	cmp	x0, x8
  f4:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	str	x20, [x19]
 100:	str	w21, [x19, #12]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImmELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

RetireControlUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x9, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
   c:	ldr	x9, [x9]
  10:	mov	x8, x0
  14:	add	x9, x9, #0x10
  18:	stp	x9, xzr, [x0]
  1c:	ldr	w9, [x1, #4]
  20:	str	xzr, [x0, #32]!
  24:	stp	xzr, xzr, [x0, #8]
  28:	stp	w9, wzr, [x0, #-12]
  2c:	stur	w9, [x0, #-16]
  30:	ldr	x10, [x1, #64]
  34:	cbz	x10, 50 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x50>
  38:	ldr	w11, [x10]
  3c:	cbz	w11, 48 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x48>
  40:	mov	w9, w11
  44:	str	w11, [x8, #20]
  48:	ldr	w10, [x10, #4]
  4c:	str	w10, [x8, #24]
  50:	str	w9, [x8, #16]
  54:	cbz	w9, 74 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x74>
  58:	lsl	w8, w9, #1
  5c:	cbz	w8, 6c <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x6c>
  60:	mov	w1, w8
  64:	ldp	x29, x30, [sp], #16
  68:	b	0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  6c:	ldp	x29, x30, [sp], #16
  70:	ret
  74:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  78:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  7c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0x24                  	// #36
  90:	bl	0 <__assert_fail>

0000000000000094 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>:
  94:	stp	x29, x30, [sp, #-16]!
  98:	mov	x29, sp
  9c:	ldr	x10, [x1, #8]
  a0:	ldp	w9, w11, [x0, #16]
  a4:	ldr	x8, [x10]
  a8:	ldr	w8, [x8, #316]
  ac:	cmp	w9, w8
  b0:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  b4:	cmp	w8, #0x0
  b8:	csinc	w9, w8, wzr, ne  // ne = any
  bc:	cmp	w11, w9
  c0:	b.cc	134 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE+0xa0>  // b.lo, b.ul, b.last
  c4:	ldr	w8, [x0, #8]
  c8:	ldr	x11, [x0, #32]
  cc:	ldr	w12, [x1]
  d0:	mov	w13, #0x18                  	// #24
  d4:	cmp	w9, #0x1
  d8:	madd	x11, x8, x13, x11
  dc:	str	w12, [x11]
  e0:	str	x10, [x11, #8]
  e4:	str	w9, [x11, #16]
  e8:	strb	wzr, [x11, #20]
  ec:	ldp	x12, x11, [x0, #32]
  f0:	ldr	w10, [x0, #8]
  f4:	ldr	w14, [x0, #20]
  f8:	csinc	w13, w9, wzr, hi  // hi = pmore
  fc:	sub	x11, x11, x12
 100:	mov	x12, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 104:	movk	x12, #0xaaab
 108:	asr	x11, x11, #3
 10c:	add	w10, w10, w13
 110:	mul	x11, x11, x12
 114:	udiv	x12, x10, x11
 118:	sub	w9, w14, w9
 11c:	msub	w10, w12, w11, w10
 120:	str	w10, [x0, #8]
 124:	str	w9, [x0, #20]
 128:	mov	w0, w8
 12c:	ldp	x29, x30, [sp], #16
 130:	ret
 134:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 138:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 13c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 140:	add	x0, x0, #0x0
 144:	add	x1, x1, #0x0
 148:	add	x3, x3, #0x0
 14c:	mov	w2, #0x2c                  	// #44
 150:	bl	0 <__assert_fail>

0000000000000154 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>:
 154:	stp	x29, x30, [sp, #-16]!
 158:	mov	x29, sp
 15c:	ldr	w8, [x0, #12]
 160:	ldr	x9, [x0, #32]
 164:	mov	w10, #0x18                  	// #24
 168:	madd	x10, x8, x10, x9
 16c:	ldr	x10, [x10, #8]
 170:	cbz	x10, 184 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv+0x30>
 174:	mov	w10, #0x18                  	// #24
 178:	madd	x0, x8, x10, x9
 17c:	ldp	x29, x30, [sp], #16
 180:	ret
 184:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 188:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 18c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 190:	add	x0, x0, #0x0
 194:	add	x1, x1, #0x0
 198:	add	x3, x3, #0x0
 19c:	mov	w2, #0x3b                  	// #59
 1a0:	bl	0 <__assert_fail>

00000000000001a4 <_ZNK4llvm3mca17RetireControlUnit18computeNextSlotIdxEv>:
 1a4:	stp	x29, x30, [sp, #-16]!
 1a8:	mov	x29, sp
 1ac:	ldr	w8, [x0, #12]
 1b0:	ldr	x9, [x0, #32]
 1b4:	mov	w10, #0x18                  	// #24
 1b8:	madd	x10, x8, x10, x9
 1bc:	ldr	x10, [x10, #8]
 1c0:	cbz	x10, 204 <_ZNK4llvm3mca17RetireControlUnit18computeNextSlotIdxEv+0x60>
 1c4:	mov	w10, #0x18                  	// #24
 1c8:	madd	x10, x8, x10, x9
 1cc:	ldr	x11, [x0, #40]
 1d0:	ldr	w10, [x10, #16]
 1d4:	mov	x12, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1d8:	movk	x12, #0xaaab
 1dc:	sub	x9, x11, x9
 1e0:	cmp	w10, #0x1
 1e4:	asr	x9, x9, #3
 1e8:	csinc	w10, w10, wzr, hi  // hi = pmore
 1ec:	add	w8, w10, w8
 1f0:	mul	x9, x9, x12
 1f4:	udiv	x10, x8, x9
 1f8:	msub	w0, w10, w9, w8
 1fc:	ldp	x29, x30, [sp], #16
 200:	ret
 204:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 208:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 20c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 210:	add	x0, x0, #0x0
 214:	add	x1, x1, #0x0
 218:	add	x3, x3, #0x0
 21c:	mov	w2, #0x3b                  	// #59
 220:	bl	0 <__assert_fail>

0000000000000224 <_ZNK4llvm3mca17RetireControlUnit13peekNextTokenEv>:
 224:	stp	x29, x30, [sp, #-16]!
 228:	mov	x29, sp
 22c:	ldr	w8, [x0, #12]
 230:	ldr	x9, [x0, #32]
 234:	mov	w10, #0x18                  	// #24
 238:	madd	x10, x8, x10, x9
 23c:	ldr	x10, [x10, #8]
 240:	cbz	x10, 288 <_ZNK4llvm3mca17RetireControlUnit13peekNextTokenEv+0x64>
 244:	mov	w10, #0x18                  	// #24
 248:	madd	x12, x8, x10, x9
 24c:	ldr	x11, [x0, #40]
 250:	ldr	w12, [x12, #16]
 254:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 258:	movk	x13, #0xaaab
 25c:	sub	x11, x11, x9
 260:	cmp	w12, #0x1
 264:	asr	x11, x11, #3
 268:	csinc	w12, w12, wzr, hi  // hi = pmore
 26c:	add	w8, w12, w8
 270:	mul	x11, x11, x13
 274:	udiv	x12, x8, x11
 278:	msub	x8, x12, x11, x8
 27c:	madd	x0, x8, x10, x9
 280:	ldp	x29, x30, [sp], #16
 284:	ret
 288:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 28c:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 290:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 294:	add	x0, x0, #0x0
 298:	add	x1, x1, #0x0
 29c:	add	x3, x3, #0x0
 2a0:	mov	w2, #0x3b                  	// #59
 2a4:	bl	0 <__assert_fail>

00000000000002a8 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv>:
 2a8:	stp	x29, x30, [sp, #-16]!
 2ac:	mov	x29, sp
 2b0:	ldr	w8, [x0, #12]
 2b4:	ldr	x10, [x0, #32]
 2b8:	mov	w9, #0x18                  	// #24
 2bc:	madd	x9, x8, x9, x10
 2c0:	ldr	x11, [x9, #8]!
 2c4:	ldr	w12, [x11, #784]
 2c8:	cmp	w12, #0x5
 2cc:	b.ne	338 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv+0x90>  // b.any
 2d0:	mov	w12, #0x6                   	// #6
 2d4:	mov	w13, #0x18                  	// #24
 2d8:	str	w12, [x11, #784]
 2dc:	madd	x11, x8, x13, x10
 2e0:	ldr	w12, [x11, #16]
 2e4:	ldr	x13, [x0, #40]
 2e8:	ldr	w14, [x0, #20]
 2ec:	cmp	w12, #0x1
 2f0:	sub	x10, x13, x10
 2f4:	add	w13, w14, w12
 2f8:	str	w13, [x0, #20]
 2fc:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 300:	movk	x13, #0xaaab
 304:	csinc	w12, w12, wzr, hi  // hi = pmore
 308:	asr	x10, x10, #3
 30c:	add	w8, w12, w8
 310:	mul	x10, x10, x13
 314:	udiv	x12, x8, x10
 318:	msub	w8, w12, w10, w8
 31c:	str	w8, [x0, #12]
 320:	str	wzr, [x11]
 324:	str	xzr, [x9]
 328:	str	wzr, [x11, #16]
 32c:	strb	wzr, [x11, #20]
 330:	ldp	x29, x30, [sp], #16
 334:	ret
 338:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 33c:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 340:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 344:	add	x0, x0, #0x0
 348:	add	x1, x1, #0x0
 34c:	add	x3, x3, #0x0
 350:	mov	w2, #0x21c                 	// #540
 354:	bl	0 <__assert_fail>

0000000000000358 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj>:
 358:	stp	x29, x30, [sp, #-16]!
 35c:	mov	x29, sp
 360:	ldp	x8, x9, [x0, #32]
 364:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 368:	movk	x10, #0xaaab
 36c:	sub	x9, x9, x8
 370:	asr	x9, x9, #3
 374:	mul	x10, x9, x10
 378:	mov	w9, w1
 37c:	cmp	x10, x9
 380:	b.ls	3b4 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x5c>  // b.plast
 384:	mov	w10, #0x18                  	// #24
 388:	madd	x10, x9, x10, x8
 38c:	ldr	x10, [x10, #8]
 390:	cbz	x10, 3d4 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x7c>
 394:	mov	w10, #0x18                  	// #24
 398:	madd	x8, x9, x10, x8
 39c:	ldrb	w9, [x8, #20]!
 3a0:	cbnz	w9, 3f4 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x9c>
 3a4:	mov	w9, #0x1                   	// #1
 3a8:	strb	w9, [x8]
 3ac:	ldp	x29, x30, [sp], #16
 3b0:	ret
 3b4:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3b8:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3bc:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3c0:	add	x0, x0, #0x0
 3c4:	add	x1, x1, #0x0
 3c8:	add	x3, x3, #0x0
 3cc:	mov	w2, #0x56                  	// #86
 3d0:	bl	0 <__assert_fail>
 3d4:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3d8:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3dc:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3e0:	add	x0, x0, #0x0
 3e4:	add	x1, x1, #0x0
 3e8:	add	x3, x3, #0x0
 3ec:	mov	w2, #0x57                  	// #87
 3f0:	bl	0 <__assert_fail>
 3f4:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3f8:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 3fc:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 400:	add	x0, x0, #0x0
 404:	add	x1, x1, #0x0
 408:	add	x3, x3, #0x0
 40c:	mov	w2, #0x58                  	// #88
 410:	bl	0 <__assert_fail>

0000000000000414 <_ZNK4llvm3mca17RetireControlUnit4dumpEv>:
 414:	stp	x29, x30, [sp, #-32]!
 418:	str	x19, [sp, #16]
 41c:	mov	x29, sp
 420:	mov	x19, x0
 424:	bl	0 <_ZN4llvm4dbgsEv>
 428:	ldp	x9, x8, [x0, #16]
 42c:	sub	x9, x9, x8
 430:	cmp	x9, #0x21
 434:	b.hi	44c <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0x38>  // b.pmore
 438:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 43c:	add	x1, x1, #0x0
 440:	mov	w2, #0x22                  	// #34
 444:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 448:	b	470 <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0x5c>
 44c:	adrp	x9, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 450:	add	x9, x9, #0x0
 454:	ldp	q1, q0, [x9]
 458:	mov	w9, #0x3d20                	// #15648
 45c:	strh	w9, [x8, #32]
 460:	stp	q1, q0, [x8]
 464:	ldr	x8, [x0, #24]
 468:	add	x8, x8, #0x22
 46c:	str	x8, [x0, #24]
 470:	ldr	w1, [x19, #16]
 474:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 478:	ldp	x9, x8, [x0, #16]
 47c:	sub	x9, x9, x8
 480:	cmp	x9, #0x17
 484:	b.hi	49c <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0x88>  // b.pmore
 488:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 48c:	add	x1, x1, #0x0
 490:	mov	w2, #0x18                  	// #24
 494:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 498:	b	4c0 <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0xac>
 49c:	adrp	x9, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 4a0:	add	x9, x9, #0x0
 4a4:	ldr	x10, [x9, #16]
 4a8:	ldr	q0, [x9]
 4ac:	str	x10, [x8, #16]
 4b0:	str	q0, [x8]
 4b4:	ldr	x8, [x0, #24]
 4b8:	add	x8, x8, #0x18
 4bc:	str	x8, [x0, #24]
 4c0:	ldr	w1, [x19, #20]
 4c4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 4c8:	ldp	x9, x8, [x0, #16]
 4cc:	sub	x9, x9, x8
 4d0:	cmp	x9, #0x2
 4d4:	b.hi	4f0 <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0xdc>  // b.pmore
 4d8:	ldr	x19, [sp, #16]
 4dc:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
 4e0:	add	x1, x1, #0x0
 4e4:	mov	w2, #0x3                   	// #3
 4e8:	ldp	x29, x30, [sp], #32
 4ec:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 4f0:	mov	w9, #0xa                   	// #10
 4f4:	mov	w10, #0x7d20                	// #32032
 4f8:	strb	w9, [x8, #2]
 4fc:	strh	w10, [x8]
 500:	ldr	x8, [x0, #24]
 504:	ldr	x19, [sp, #16]
 508:	add	x8, x8, #0x3
 50c:	str	x8, [x0, #24]
 510:	ldp	x29, x30, [sp], #32
 514:	ret

Disassembly of section .text._ZN4llvm3mca17RetireControlUnitD2Ev:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17RetireControlUnitD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #32]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca17RetireControlUnitD2Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca17RetireControlUnitD0Ev:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17RetireControlUnitD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #32]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca17RetireControlUnitD0Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	mov	x0, x19
  30:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZdlPv>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	cbz	x1, 140 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x140>
  1c:	mov	x22, x0
  20:	mov	x24, x0
  24:	ldr	x21, [x22, #8]!
  28:	ldr	x26, [x0]
  2c:	ldr	x8, [x24, #16]!
  30:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  34:	movk	x9, #0xaaab
  38:	mov	x19, x1
  3c:	sub	x8, x8, x21
  40:	asr	x8, x8, #3
  44:	mul	x8, x8, x9
  48:	mov	x20, x0
  4c:	cmp	x8, x1
  50:	b.cs	b4 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xb4>  // b.hs, b.nlast
  54:	sub	x10, x21, x26
  58:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  5c:	asr	x10, x10, #3
  60:	movk	x8, #0x555, lsl #48
  64:	mul	x23, x10, x9
  68:	sub	x9, x8, x23
  6c:	cmp	x9, x19
  70:	b.cc	158 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x158>  // b.lo, b.ul, b.last
  74:	cmp	x23, x19
  78:	csel	x9, x19, x23, cc  // cc = lo, ul, last
  7c:	adds	x9, x9, x23
  80:	cset	w10, cs  // cs = hs, nlast
  84:	cmp	x9, x8
  88:	cset	w11, hi  // hi = pmore
  8c:	orr	w10, w10, w11
  90:	cmp	w10, #0x0
  94:	csel	x25, x8, x9, ne  // ne = any
  98:	cbz	x25, d8 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xd8>
  9c:	add	x8, x25, x25, lsl #1
  a0:	lsl	x0, x8, #3
  a4:	bl	0 <_Znwm>
  a8:	ldp	x26, x21, [x20]
  ac:	mov	x22, x0
  b0:	b	dc <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xdc>
  b4:	add	x8, x19, x19, lsl #1
  b8:	lsl	x19, x8, #3
  bc:	mov	x0, x21
  c0:	mov	w1, wzr
  c4:	mov	x2, x19
  c8:	bl	0 <memset>
  cc:	add	x8, x21, x19
  d0:	mov	x24, x22
  d4:	b	13c <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x13c>
  d8:	mov	x22, xzr
  dc:	mov	w8, #0x18                  	// #24
  e0:	add	x9, x19, x19, lsl #1
  e4:	madd	x23, x23, x8, x22
  e8:	lsl	x2, x9, #3
  ec:	mov	x0, x23
  f0:	mov	w1, wzr
  f4:	bl	0 <memset>
  f8:	cmp	x26, x21
  fc:	b.eq	120 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x120>  // b.none
 100:	mov	x8, x22
 104:	ldr	x9, [x26, #16]
 108:	ldr	q0, [x26], #24
 10c:	str	x9, [x8, #16]
 110:	cmp	x21, x26
 114:	str	q0, [x8], #24
 118:	b.ne	104 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x104>  // b.any
 11c:	ldr	x21, [x20]
 120:	cbz	x21, 12c <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x12c>
 124:	mov	x0, x21
 128:	bl	0 <_ZdlPv>
 12c:	mov	w8, #0x18                  	// #24
 130:	madd	x9, x19, x8, x23
 134:	madd	x8, x25, x8, x22
 138:	stp	x22, x9, [x20]
 13c:	str	x8, [x24]
 140:	ldp	x20, x19, [sp, #64]
 144:	ldp	x22, x21, [sp, #48]
 148:	ldp	x24, x23, [sp, #32]
 14c:	ldp	x26, x25, [sp, #16]
 150:	ldp	x29, x30, [sp], #80
 154:	ret
 158:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm>
 15c:	add	x0, x0, #0x0
 160:	bl	0 <_ZSt20__throw_length_errorPKc>

Scheduler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	str	x19, [sp, #16]
       8:	mov	x29, sp
       c:	ldr	x8, [x1]
      10:	mov	x19, x0
      14:	cbz	x8, 20 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x20>
      18:	str	xzr, [x1]
      1c:	b	3c <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x3c>
      20:	mov	w0, #0x8                   	// #8
      24:	bl	0 <_Znwm>
      28:	adrp	x9, 28 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x28>
      2c:	ldr	x9, [x9]
      30:	mov	x8, x0
      34:	add	x9, x9, #0x10
      38:	str	x9, [x0]
      3c:	ldr	x0, [x19, #16]
      40:	str	x8, [x19, #16]
      44:	cbz	x0, 5c <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x5c>
      48:	ldr	x8, [x0]
      4c:	ldr	x19, [sp, #16]
      50:	ldr	x1, [x8, #8]
      54:	ldp	x29, x30, [sp], #32
      58:	br	x1
      5c:	ldr	x19, [sp, #16]
      60:	ldp	x29, x30, [sp], #32
      64:	ret

0000000000000068 <_ZN4llvm3mca17SchedulerStrategyD1Ev>:
      68:	ret

000000000000006c <_ZN4llvm3mca17SchedulerStrategyD0Ev>:
      6c:	brk	#0x1

0000000000000070 <_ZN4llvm3mca24DefaultSchedulerStrategyD0Ev>:
      70:	b	0 <_ZdlPv>

0000000000000074 <_ZNK4llvm3mca9Scheduler4dumpEv>:
      74:	stp	x29, x30, [sp, #-32]!
      78:	stp	x20, x19, [sp, #16]
      7c:	mov	x29, sp
      80:	mov	x19, x0
      84:	bl	0 <_ZN4llvm4dbgsEv>
      88:	ldp	x9, x8, [x0, #16]
      8c:	sub	x9, x9, x8
      90:	cmp	x9, #0x1d
      94:	b.hi	ac <_ZNK4llvm3mca9Scheduler4dumpEv+0x38>  // b.pmore
      98:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
      9c:	add	x1, x1, #0x0
      a0:	mov	w2, #0x1e                  	// #30
      a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      a8:	b	d0 <_ZNK4llvm3mca9Scheduler4dumpEv+0x5c>
      ac:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
      b0:	add	x9, x9, #0x0
      b4:	ldur	q0, [x9, #14]
      b8:	ldr	q1, [x9]
      bc:	stur	q0, [x8, #14]
      c0:	str	q1, [x8]
      c4:	ldr	x8, [x0, #24]
      c8:	add	x8, x8, #0x1e
      cc:	str	x8, [x0, #24]
      d0:	ldp	x9, x8, [x19, #32]
      d4:	sub	x8, x8, x9
      d8:	asr	x1, x8, #4
      dc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
      e0:	ldp	x9, x8, [x0, #16]
      e4:	cmp	x8, x9
      e8:	b.cs	100 <_ZNK4llvm3mca9Scheduler4dumpEv+0x8c>  // b.hs, b.nlast
      ec:	add	x9, x8, #0x1
      f0:	mov	w10, #0xa                   	// #10
      f4:	str	x9, [x0, #24]
      f8:	strb	w10, [x8]
      fc:	b	108 <_ZNK4llvm3mca9Scheduler4dumpEv+0x94>
     100:	mov	w1, #0xa                   	// #10
     104:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     108:	bl	0 <_ZN4llvm4dbgsEv>
     10c:	ldp	x9, x8, [x0, #16]
     110:	sub	x9, x9, x8
     114:	cmp	x9, #0x1e
     118:	b.hi	130 <_ZNK4llvm3mca9Scheduler4dumpEv+0xbc>  // b.pmore
     11c:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     120:	add	x1, x1, #0x0
     124:	mov	w2, #0x1f                  	// #31
     128:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     12c:	b	154 <_ZNK4llvm3mca9Scheduler4dumpEv+0xe0>
     130:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     134:	add	x9, x9, #0x0
     138:	ldur	q0, [x9, #15]
     13c:	ldr	q1, [x9]
     140:	stur	q0, [x8, #15]
     144:	str	q1, [x8]
     148:	ldr	x8, [x0, #24]
     14c:	add	x8, x8, #0x1f
     150:	str	x8, [x0, #24]
     154:	ldp	x9, x8, [x19, #80]
     158:	sub	x8, x8, x9
     15c:	asr	x1, x8, #4
     160:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     164:	ldp	x9, x8, [x0, #16]
     168:	cmp	x8, x9
     16c:	b.cs	184 <_ZNK4llvm3mca9Scheduler4dumpEv+0x110>  // b.hs, b.nlast
     170:	add	x9, x8, #0x1
     174:	mov	w10, #0xa                   	// #10
     178:	str	x9, [x0, #24]
     17c:	strb	w10, [x8]
     180:	b	18c <_ZNK4llvm3mca9Scheduler4dumpEv+0x118>
     184:	mov	w1, #0xa                   	// #10
     188:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     18c:	bl	0 <_ZN4llvm4dbgsEv>
     190:	ldp	x9, x8, [x0, #16]
     194:	sub	x9, x9, x8
     198:	cmp	x9, #0x1f
     19c:	b.hi	1b4 <_ZNK4llvm3mca9Scheduler4dumpEv+0x140>  // b.pmore
     1a0:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     1a4:	add	x1, x1, #0x0
     1a8:	mov	w2, #0x20                  	// #32
     1ac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     1b0:	b	1d0 <_ZNK4llvm3mca9Scheduler4dumpEv+0x15c>
     1b4:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     1b8:	add	x9, x9, #0x0
     1bc:	ldp	q1, q0, [x9]
     1c0:	stp	q1, q0, [x8]
     1c4:	ldr	x8, [x0, #24]
     1c8:	add	x8, x8, #0x20
     1cc:	str	x8, [x0, #24]
     1d0:	ldp	x9, x8, [x19, #104]
     1d4:	sub	x8, x8, x9
     1d8:	asr	x1, x8, #4
     1dc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     1e0:	ldp	x9, x8, [x0, #16]
     1e4:	cmp	x8, x9
     1e8:	b.cs	200 <_ZNK4llvm3mca9Scheduler4dumpEv+0x18c>  // b.hs, b.nlast
     1ec:	add	x9, x8, #0x1
     1f0:	mov	w10, #0xa                   	// #10
     1f4:	str	x9, [x0, #24]
     1f8:	strb	w10, [x8]
     1fc:	b	208 <_ZNK4llvm3mca9Scheduler4dumpEv+0x194>
     200:	mov	w1, #0xa                   	// #10
     204:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     208:	ldr	x8, [x19, #24]
     20c:	ldp	x19, x20, [x8, #8]
     210:	cmp	x19, x20
     214:	b.eq	228 <_ZNK4llvm3mca9Scheduler4dumpEv+0x1b4>  // b.none
     218:	ldr	x0, [x19], #8
     21c:	bl	0 <_ZNK4llvm3mca13ResourceState4dumpEv>
     220:	cmp	x20, x19
     224:	b.ne	218 <_ZNK4llvm3mca9Scheduler4dumpEv+0x1a4>  // b.any
     228:	ldp	x20, x19, [sp, #16]
     22c:	ldp	x29, x30, [sp], #32
     230:	ret

0000000000000234 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE>:
     234:	stp	x29, x30, [sp, #-32]!
     238:	stp	x20, x19, [sp, #16]
     23c:	mov	x29, sp
     240:	ldr	x8, [x1, #8]
     244:	mov	x20, x1
     248:	mov	x19, x0
     24c:	ldr	x0, [x0, #24]
     250:	ldr	x1, [x8, #800]
     254:	bl	0 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm>
     258:	cmp	w0, #0x0
     25c:	cset	w8, ne  // ne = any
     260:	cmp	w0, #0x1
     264:	strb	w8, [x19, #140]
     268:	b.eq	27c <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x48>  // b.none
     26c:	cmp	w0, #0x2
     270:	b.ne	284 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x50>  // b.any
     274:	mov	w0, #0x4                   	// #4
     278:	b	2ac <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x78>
     27c:	mov	w0, #0x3                   	// #3
     280:	b	2ac <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x78>
     284:	ldr	x0, [x19, #8]
     288:	mov	x1, x20
     28c:	ldr	x8, [x0]
     290:	ldr	x8, [x8, #16]
     294:	blr	x8
     298:	cmp	w0, #0x0
     29c:	cset	w8, ne  // ne = any
     2a0:	cmp	w0, #0x3
     2a4:	strb	w8, [x19, #140]
     2a8:	b.cs	2b8 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x84>  // b.hs, b.nlast
     2ac:	ldp	x20, x19, [sp, #16]
     2b0:	ldp	x29, x30, [sp], #32
     2b4:	ret
     2b8:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     2bc:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     2c0:	add	x0, x0, #0x0
     2c4:	add	x1, x1, #0x0
     2c8:	mov	w2, #0x43                  	// #67
     2cc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000002d0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE>:
     2d0:	stp	x29, x30, [sp, #-48]!
     2d4:	str	x21, [sp, #16]
     2d8:	stp	x20, x19, [sp, #32]
     2dc:	mov	x29, sp
     2e0:	ldr	x21, [x1, #8]
     2e4:	mov	x19, x1
     2e8:	mov	x20, x0
     2ec:	ldr	x0, [x0, #24]
     2f0:	ldr	x1, [x21]
     2f4:	bl	0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
     2f8:	ldr	w1, [x19]
     2fc:	mov	x0, x21
     300:	bl	0 <_ZN4llvm3mca11Instruction7executeEj>
     304:	mov	x0, x21
     308:	bl	0 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv>
     30c:	ldr	x8, [x21]
     310:	ldrb	w9, [x8, #324]
     314:	cbnz	w9, 320 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x50>
     318:	ldrb	w8, [x8, #325]
     31c:	cbz	w8, 354 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x84>
     320:	ldr	x0, [x20, #8]
     324:	mov	x1, x19
     328:	ldr	x8, [x0]
     32c:	ldr	x8, [x8, #48]
     330:	blr	x8
     334:	ldr	x0, [x20, #8]
     338:	ldr	w1, [x21, #796]
     33c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     340:	ldr	x8, [x0, #72]
     344:	ldr	w9, [x0, #80]
     348:	add	x10, x21, #0x334
     34c:	str	x8, [x10]
     350:	str	w9, [x10, #8]
     354:	ldr	w8, [x21, #784]
     358:	cmp	w8, #0x5
     35c:	b.eq	398 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xc8>  // b.none
     360:	cmp	w8, #0x4
     364:	b.ne	388 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xb8>  // b.any
     368:	ldp	x1, x8, [x20, #112]
     36c:	cmp	x1, x8
     370:	b.eq	3b8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xe8>  // b.none
     374:	ldr	q0, [x19]
     378:	str	q0, [x1]
     37c:	ldr	x8, [x20, #112]
     380:	add	x8, x8, #0x10
     384:	str	x8, [x20, #112]
     388:	ldp	x20, x19, [sp, #32]
     38c:	ldr	x21, [sp, #16]
     390:	ldp	x29, x30, [sp], #48
     394:	ret
     398:	ldr	x0, [x20, #8]
     39c:	mov	x1, x19
     3a0:	ldp	x20, x19, [sp, #32]
     3a4:	ldr	x21, [sp, #16]
     3a8:	ldr	x8, [x0]
     3ac:	ldr	x2, [x8, #32]
     3b0:	ldp	x29, x30, [sp], #48
     3b4:	br	x2
     3b8:	add	x0, x20, #0x68
     3bc:	mov	x2, x19
     3c0:	ldp	x20, x19, [sp, #32]
     3c4:	ldr	x21, [sp, #16]
     3c8:	ldp	x29, x30, [sp], #48
     3cc:	b	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>

00000000000003d0 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_>:
     3d0:	stp	x29, x30, [sp, #-80]!
     3d4:	stp	x26, x25, [sp, #16]
     3d8:	stp	x24, x23, [sp, #32]
     3dc:	stp	x22, x21, [sp, #48]
     3e0:	stp	x20, x19, [sp, #64]
     3e4:	mov	x29, sp
     3e8:	ldr	x26, [x1, #8]
     3ec:	mov	x20, x0
     3f0:	mov	w9, #0x88                  	// #136
     3f4:	mov	x22, x2
     3f8:	ldr	x0, [x26, #16]
     3fc:	ldr	w8, [x26, #24]
     400:	mov	x23, x1
     404:	mov	x2, xzr
     408:	mov	x19, x4
     40c:	madd	x24, x8, x9, x0
     410:	mov	x1, x24
     414:	mov	x21, x3
     418:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     41c:	ldr	x8, [x26]
     420:	mov	x25, x0
     424:	ldrb	w9, [x8, #324]
     428:	cbnz	w9, 434 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x64>
     42c:	ldrb	w8, [x8, #325]
     430:	cbz	w8, 464 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x94>
     434:	ldr	x8, [x23, #8]
     438:	ldr	x0, [x20, #8]
     43c:	ldr	w1, [x8, #796]
     440:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     444:	ldr	w8, [x0, #12]
     448:	ldr	w9, [x0, #20]
     44c:	ldr	w10, [x0, #32]
     450:	cmp	w8, w9
     454:	cset	w8, ne  // ne = any
     458:	cmp	w10, #0x0
     45c:	cset	w9, ne  // ne = any
     460:	and	w8, w8, w9
     464:	ldr	x0, [x20, #24]
     468:	ldr	x1, [x26, #800]
     46c:	cmp	x25, x24
     470:	cset	w9, ne  // ne = any
     474:	orr	w24, w8, w9
     478:	bl	0 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm>
     47c:	mov	x0, x20
     480:	mov	x1, x23
     484:	mov	x2, x22
     488:	bl	2d0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE>
     48c:	cbz	w24, 4c0 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xf0>
     490:	mov	x0, x20
     494:	mov	x1, x21
     498:	bl	4d8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>
     49c:	tbz	w0, #0, 4c0 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xf0>
     4a0:	mov	x0, x20
     4a4:	mov	x1, x19
     4a8:	ldp	x20, x19, [sp, #64]
     4ac:	ldp	x22, x21, [sp, #48]
     4b0:	ldp	x24, x23, [sp, #32]
     4b4:	ldp	x26, x25, [sp, #16]
     4b8:	ldp	x29, x30, [sp], #80
     4bc:	b	784 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>
     4c0:	ldp	x20, x19, [sp, #64]
     4c4:	ldp	x22, x21, [sp, #48]
     4c8:	ldp	x24, x23, [sp, #32]
     4cc:	ldp	x26, x25, [sp, #16]
     4d0:	ldp	x29, x30, [sp], #80
     4d4:	ret

00000000000004d8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>:
     4d8:	stp	x29, x30, [sp, #-96]!
     4dc:	stp	x28, x27, [sp, #16]
     4e0:	stp	x26, x25, [sp, #32]
     4e4:	stp	x24, x23, [sp, #48]
     4e8:	stp	x22, x21, [sp, #64]
     4ec:	stp	x20, x19, [sp, #80]
     4f0:	mov	x29, sp
     4f4:	mov	x20, x0
     4f8:	ldr	x21, [x20, #32]!
     4fc:	mov	x19, x0
     500:	ldr	x28, [x20, #8]
     504:	cmp	x28, x21
     508:	b.eq	700 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x228>  // b.none
     50c:	adrp	x26, 0 <_ZN4llvm9DebugFlagE>
     510:	ldr	x26, [x26]
     514:	adrp	x24, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     518:	mov	x22, x1
     51c:	mov	w25, wzr
     520:	add	x23, x19, #0x38
     524:	add	x24, x24, #0x0
     528:	b	538 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x60>
     52c:	add	x21, x21, #0x10
     530:	cmp	x28, x21
     534:	b.eq	6f8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x220>  // b.none
     538:	ldr	x27, [x21, #8]
     53c:	cbz	x27, 6f8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x220>
     540:	ldr	w8, [x27, #784]
     544:	cmp	w8, #0x1
     548:	b.ne	558 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x80>  // b.any
     54c:	mov	x0, x27
     550:	bl	0 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
     554:	tbz	w0, #0, 52c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x54>
     558:	ldr	x8, [x27]
     55c:	ldrb	w9, [x8, #324]
     560:	cbnz	w9, 56c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x94>
     564:	ldrb	w8, [x8, #325]
     568:	cbz	w8, 590 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xb8>
     56c:	ldr	x8, [x21, #8]
     570:	ldr	x0, [x19, #8]
     574:	ldr	w1, [x8, #796]
     578:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     57c:	ldp	w8, w9, [x0, #4]
     580:	ldr	w10, [x0]
     584:	add	w8, w9, w8
     588:	cmp	w10, w8
     58c:	b.hi	52c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x54>  // b.pmore
     590:	ldrb	w8, [x26]
     594:	cbz	w8, 654 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x17c>
     598:	mov	x0, x24
     59c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     5a0:	tbz	w0, #0, 654 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x17c>
     5a4:	bl	0 <_ZN4llvm4dbgsEv>
     5a8:	ldp	x9, x8, [x0, #16]
     5ac:	mov	x27, x0
     5b0:	sub	x9, x9, x8
     5b4:	cmp	x9, #0x19
     5b8:	b.hi	5d8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x100>  // b.pmore
     5bc:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     5c0:	mov	w2, #0x1a                  	// #26
     5c4:	mov	x0, x27
     5c8:	add	x1, x1, #0x0
     5cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5d0:	mov	x27, x0
     5d4:	b	5fc <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x124>
     5d8:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     5dc:	add	x9, x9, #0x0
     5e0:	ldur	q0, [x9, #10]
     5e4:	ldr	q1, [x9]
     5e8:	stur	q0, [x8, #10]
     5ec:	str	q1, [x8]
     5f0:	ldr	x8, [x27, #24]
     5f4:	add	x8, x8, #0x1a
     5f8:	str	x8, [x27, #24]
     5fc:	ldr	w1, [x21]
     600:	mov	x0, x27
     604:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     608:	ldp	x9, x8, [x27, #16]
     60c:	sub	x9, x9, x8
     610:	cmp	x9, #0x1d
     614:	b.hi	630 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x158>  // b.pmore
     618:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     61c:	mov	w2, #0x1e                  	// #30
     620:	mov	x0, x27
     624:	add	x1, x1, #0x0
     628:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     62c:	b	654 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x17c>
     630:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     634:	add	x9, x9, #0x0
     638:	ldur	q0, [x9, #14]
     63c:	ldr	q1, [x9]
     640:	stur	q0, [x8, #14]
     644:	str	q1, [x8]
     648:	ldr	x8, [x27, #24]
     64c:	add	x8, x8, #0x1e
     650:	str	x8, [x27, #24]
     654:	ldp	w8, w9, [x22, #8]
     658:	cmp	w8, w9
     65c:	b.cs	6e4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x20c>  // b.hs, b.nlast
     660:	ldr	x9, [x22]
     664:	ldr	q0, [x21]
     668:	str	q0, [x9, w8, uxtw #4]
     66c:	ldp	w8, w9, [x22, #8]
     670:	cmp	w8, w9
     674:	b.cs	764 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x28c>  // b.hs, b.nlast
     678:	add	w8, w8, #0x1
     67c:	str	w8, [x22, #8]
     680:	ldp	x1, x8, [x19, #64]
     684:	cmp	x1, x8
     688:	b.eq	6a4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1cc>  // b.none
     68c:	ldr	q0, [x21]
     690:	str	q0, [x1]
     694:	ldr	x8, [x19, #64]
     698:	add	x8, x8, #0x10
     69c:	str	x8, [x19, #64]
     6a0:	b	6b0 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1d8>
     6a4:	mov	x0, x23
     6a8:	mov	x2, x21
     6ac:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     6b0:	add	w25, w25, #0x1
     6b4:	str	xzr, [x21, #8]
     6b8:	sub	x8, x28, w25, uxtw #4
     6bc:	ldr	w9, [x8]
     6c0:	ldr	w10, [x21]
     6c4:	str	w9, [x21]
     6c8:	ldr	x9, [x8, #8]
     6cc:	str	x9, [x21, #8]
     6d0:	str	w10, [x8]
     6d4:	str	xzr, [x8, #8]
     6d8:	cmp	x28, x21
     6dc:	b.ne	538 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x60>  // b.any
     6e0:	b	6f8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x220>
     6e4:	mov	x0, x22
     6e8:	mov	x1, xzr
     6ec:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     6f0:	ldr	w8, [x22, #8]
     6f4:	b	660 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x188>
     6f8:	ldp	x21, x28, [x19, #32]
     6fc:	b	704 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x22c>
     700:	mov	w25, wzr
     704:	sub	x8, x28, x21
     708:	asr	x9, x8, #4
     70c:	mov	w22, w25
     710:	subs	x8, x9, x22
     714:	b.cs	728 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x250>  // b.hs, b.nlast
     718:	neg	x1, x22
     71c:	mov	x0, x20
     720:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     724:	b	740 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x268>
     728:	cmp	x8, x9
     72c:	b.cs	740 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x268>  // b.hs, b.nlast
     730:	add	x8, x21, x8, lsl #4
     734:	cmp	x8, x28
     738:	b.eq	740 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x268>  // b.none
     73c:	str	x8, [x19, #40]
     740:	cmp	w22, #0x0
     744:	ldp	x20, x19, [sp, #80]
     748:	ldp	x22, x21, [sp, #64]
     74c:	ldp	x24, x23, [sp, #48]
     750:	ldp	x26, x25, [sp, #32]
     754:	ldp	x28, x27, [sp, #16]
     758:	cset	w0, ne  // ne = any
     75c:	ldp	x29, x30, [sp], #96
     760:	ret
     764:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     768:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     76c:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     770:	add	x0, x0, #0x0
     774:	add	x1, x1, #0x0
     778:	add	x3, x3, #0x0
     77c:	mov	w2, #0x43                  	// #67
     780:	bl	0 <__assert_fail>

0000000000000784 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>:
     784:	stp	x29, x30, [sp, #-96]!
     788:	stp	x28, x27, [sp, #16]
     78c:	stp	x26, x25, [sp, #32]
     790:	stp	x24, x23, [sp, #48]
     794:	stp	x22, x21, [sp, #64]
     798:	stp	x20, x19, [sp, #80]
     79c:	mov	x29, sp
     7a0:	mov	x20, x0
     7a4:	ldr	x21, [x20, #56]!
     7a8:	mov	x19, x0
     7ac:	ldr	x28, [x20, #8]
     7b0:	cmp	x28, x21
     7b4:	b.eq	9a8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x224>  // b.none
     7b8:	adrp	x26, 0 <_ZN4llvm9DebugFlagE>
     7bc:	ldr	x26, [x26]
     7c0:	adrp	x24, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     7c4:	mov	x22, x1
     7c8:	mov	w25, wzr
     7cc:	add	x23, x19, #0x50
     7d0:	add	x24, x24, #0x0
     7d4:	b	7e4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x60>
     7d8:	add	x21, x21, #0x10
     7dc:	cmp	x28, x21
     7e0:	b.eq	9a0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x21c>  // b.none
     7e4:	ldr	x27, [x21, #8]
     7e8:	cbz	x27, 9a0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x21c>
     7ec:	ldr	w8, [x27, #784]
     7f0:	cmp	w8, #0x3
     7f4:	b.eq	804 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x80>  // b.none
     7f8:	mov	x0, x27
     7fc:	bl	0 <_ZN4llvm3mca11Instruction13updatePendingEv>
     800:	tbz	w0, #0, 7d8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x54>
     804:	ldr	x8, [x27]
     808:	ldrb	w9, [x8, #324]
     80c:	cbnz	w9, 818 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x94>
     810:	ldrb	w8, [x8, #325]
     814:	cbz	w8, 838 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0xb4>
     818:	ldr	x8, [x21, #8]
     81c:	ldr	x0, [x19, #8]
     820:	ldr	w1, [x8, #796]
     824:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     828:	ldr	w8, [x0, #8]
     82c:	ldr	w9, [x0]
     830:	cmp	w8, w9
     834:	b.ne	7d8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x54>  // b.any
     838:	ldrb	w8, [x26]
     83c:	cbz	w8, 8fc <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x178>
     840:	mov	x0, x24
     844:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     848:	tbz	w0, #0, 8fc <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x178>
     84c:	bl	0 <_ZN4llvm4dbgsEv>
     850:	ldp	x9, x8, [x0, #16]
     854:	mov	x27, x0
     858:	sub	x9, x9, x8
     85c:	cmp	x9, #0x19
     860:	b.hi	880 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0xfc>  // b.pmore
     864:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     868:	mov	w2, #0x1a                  	// #26
     86c:	mov	x0, x27
     870:	add	x1, x1, #0x0
     874:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     878:	mov	x27, x0
     87c:	b	8a4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x120>
     880:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     884:	add	x9, x9, #0x0
     888:	ldur	q0, [x9, #10]
     88c:	ldr	q1, [x9]
     890:	stur	q0, [x8, #10]
     894:	str	q1, [x8]
     898:	ldr	x8, [x27, #24]
     89c:	add	x8, x8, #0x1a
     8a0:	str	x8, [x27, #24]
     8a4:	ldr	w1, [x21]
     8a8:	mov	x0, x27
     8ac:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     8b0:	ldp	x9, x8, [x27, #16]
     8b4:	sub	x9, x9, x8
     8b8:	cmp	x9, #0x1b
     8bc:	b.hi	8d8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x154>  // b.pmore
     8c0:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     8c4:	mov	w2, #0x1c                  	// #28
     8c8:	mov	x0, x27
     8cc:	add	x1, x1, #0x0
     8d0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8d4:	b	8fc <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x178>
     8d8:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     8dc:	add	x9, x9, #0x0
     8e0:	ldur	q0, [x9, #12]
     8e4:	ldr	q1, [x9]
     8e8:	stur	q0, [x8, #12]
     8ec:	str	q1, [x8]
     8f0:	ldr	x8, [x27, #24]
     8f4:	add	x8, x8, #0x1c
     8f8:	str	x8, [x27, #24]
     8fc:	ldp	w8, w9, [x22, #8]
     900:	cmp	w8, w9
     904:	b.cs	98c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x208>  // b.hs, b.nlast
     908:	ldr	x9, [x22]
     90c:	ldr	q0, [x21]
     910:	str	q0, [x9, w8, uxtw #4]
     914:	ldp	w8, w9, [x22, #8]
     918:	cmp	w8, w9
     91c:	b.cs	a0c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x288>  // b.hs, b.nlast
     920:	add	w8, w8, #0x1
     924:	str	w8, [x22, #8]
     928:	ldp	x1, x8, [x19, #88]
     92c:	cmp	x1, x8
     930:	b.eq	94c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1c8>  // b.none
     934:	ldr	q0, [x21]
     938:	str	q0, [x1]
     93c:	ldr	x8, [x19, #88]
     940:	add	x8, x8, #0x10
     944:	str	x8, [x19, #88]
     948:	b	958 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1d4>
     94c:	mov	x0, x23
     950:	mov	x2, x21
     954:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     958:	add	w25, w25, #0x1
     95c:	str	xzr, [x21, #8]
     960:	sub	x8, x28, w25, uxtw #4
     964:	ldr	w9, [x8]
     968:	ldr	w10, [x21]
     96c:	str	w9, [x21]
     970:	ldr	x9, [x8, #8]
     974:	str	x9, [x21, #8]
     978:	str	w10, [x8]
     97c:	str	xzr, [x8, #8]
     980:	cmp	x28, x21
     984:	b.ne	7e4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x60>  // b.any
     988:	b	9a0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x21c>
     98c:	mov	x0, x22
     990:	mov	x1, xzr
     994:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     998:	ldr	w8, [x22, #8]
     99c:	b	908 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x184>
     9a0:	ldp	x21, x28, [x19, #56]
     9a4:	b	9ac <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x228>
     9a8:	mov	w25, wzr
     9ac:	sub	x8, x28, x21
     9b0:	asr	x9, x8, #4
     9b4:	mov	w22, w25
     9b8:	subs	x8, x9, x22
     9bc:	b.cs	9d0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x24c>  // b.hs, b.nlast
     9c0:	neg	x1, x22
     9c4:	mov	x0, x20
     9c8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     9cc:	b	9e8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x264>
     9d0:	cmp	x8, x9
     9d4:	b.cs	9e8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x264>  // b.hs, b.nlast
     9d8:	add	x8, x21, x8, lsl #4
     9dc:	cmp	x8, x28
     9e0:	b.eq	9e8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x264>  // b.none
     9e4:	str	x8, [x19, #64]
     9e8:	cmp	w22, #0x0
     9ec:	ldp	x20, x19, [sp, #80]
     9f0:	ldp	x22, x21, [sp, #64]
     9f4:	ldp	x24, x23, [sp, #48]
     9f8:	ldp	x26, x25, [sp, #32]
     9fc:	ldp	x28, x27, [sp, #16]
     a00:	cset	w0, ne  // ne = any
     a04:	ldp	x29, x30, [sp], #96
     a08:	ret
     a0c:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     a10:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     a14:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     a18:	add	x0, x0, #0x0
     a1c:	add	x1, x1, #0x0
     a20:	add	x3, x3, #0x0
     a24:	mov	w2, #0x43                  	// #67
     a28:	bl	0 <__assert_fail>

0000000000000a2c <_ZN4llvm3mca9Scheduler6selectEv>:
     a2c:	stp	x29, x30, [sp, #-64]!
     a30:	stp	x24, x23, [sp, #16]
     a34:	stp	x22, x21, [sp, #32]
     a38:	stp	x20, x19, [sp, #48]
     a3c:	mov	x29, sp
     a40:	ldp	x21, x8, [x0, #80]
     a44:	mov	x19, x0
     a48:	sub	x9, x8, x21
     a4c:	lsr	x20, x9, #4
     a50:	cbz	w20, ae0 <_ZN4llvm3mca9Scheduler6selectEv+0xb4>
     a54:	ubfx	x9, x9, #4, #32
     a58:	mov	x22, xzr
     a5c:	sub	x23, x9, #0x1
     a60:	mov	w24, #0x8                   	// #8
     a64:	mov	w9, w20
     a68:	sub	x8, x8, x21
     a6c:	cmp	x9, x8, asr #4
     a70:	b.eq	a94 <_ZN4llvm3mca9Scheduler6selectEv+0x68>  // b.none
     a74:	ldr	x0, [x19, #16]
     a78:	add	x10, x21, x24
     a7c:	sub	x1, x10, #0x8
     a80:	add	x2, x21, x9, lsl #4
     a84:	ldr	x8, [x0]
     a88:	ldr	x8, [x8, #16]
     a8c:	blr	x8
     a90:	tbz	w0, #0, ac0 <_ZN4llvm3mca9Scheduler6selectEv+0x94>
     a94:	ldr	x21, [x21, x24]
     a98:	ldr	x0, [x19, #24]
     a9c:	ldr	x1, [x21]
     aa0:	bl	0 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>
     aa4:	cbz	x0, aac <_ZN4llvm3mca9Scheduler6selectEv+0x80>
     aa8:	str	x0, [x21, #832]
     aac:	ldr	x8, [x19, #128]
     ab0:	cmp	x0, #0x0
     ab4:	csel	w20, w20, w22, ne  // ne = any
     ab8:	orr	x8, x8, x0
     abc:	str	x8, [x19, #128]
     ac0:	cmp	x23, x22
     ac4:	b.eq	ad8 <_ZN4llvm3mca9Scheduler6selectEv+0xac>  // b.none
     ac8:	ldp	x21, x8, [x19, #80]
     acc:	add	x22, x22, #0x1
     ad0:	add	x24, x24, #0x10
     ad4:	b	a64 <_ZN4llvm3mca9Scheduler6selectEv+0x38>
     ad8:	ldp	x21, x8, [x19, #80]
     adc:	sub	x9, x8, x21
     ae0:	mov	w10, w20
     ae4:	asr	x9, x9, #4
     ae8:	cmp	x9, x10
     aec:	b.ne	b00 <_ZN4llvm3mca9Scheduler6selectEv+0xd4>  // b.any
     af0:	mov	x8, xzr
     af4:	mov	x9, xzr
     af8:	mov	x1, xzr
     afc:	b	b34 <_ZN4llvm3mca9Scheduler6selectEv+0x108>
     b00:	add	x9, x21, x9, lsl #4
     b04:	ldur	w11, [x9, #-16]
     b08:	add	x10, x21, x10, lsl #4
     b0c:	ldp	x12, x1, [x10]
     b10:	sub	x13, x8, #0x10
     b14:	str	w11, [x10]
     b18:	ldur	x11, [x9, #-8]
     b1c:	and	x8, x12, #0xffffffff00000000
     b20:	str	x11, [x10, #8]
     b24:	stur	w12, [x9, #-16]
     b28:	stur	x1, [x9, #-8]
     b2c:	and	x9, x12, #0xffffffff
     b30:	str	x13, [x19, #88]
     b34:	ldp	x20, x19, [sp, #48]
     b38:	ldp	x22, x21, [sp, #32]
     b3c:	ldp	x24, x23, [sp, #16]
     b40:	orr	x0, x9, x8
     b44:	ldp	x29, x30, [sp], #64
     b48:	ret

0000000000000b4c <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE>:
     b4c:	stp	x29, x30, [sp, #-96]!
     b50:	stp	x28, x27, [sp, #16]
     b54:	stp	x26, x25, [sp, #32]
     b58:	stp	x24, x23, [sp, #48]
     b5c:	stp	x22, x21, [sp, #64]
     b60:	stp	x20, x19, [sp, #80]
     b64:	mov	x29, sp
     b68:	mov	x20, x0
     b6c:	ldr	x21, [x20, #104]!
     b70:	mov	x19, x0
     b74:	ldr	x27, [x20, #8]
     b78:	cmp	x27, x21
     b7c:	b.eq	d0c <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1c0>  // b.none
     b80:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
     b84:	ldr	x24, [x24]
     b88:	adrp	x23, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     b8c:	adrp	x25, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     b90:	mov	x22, x1
     b94:	mov	w28, wzr
     b98:	add	x23, x23, #0x0
     b9c:	add	x25, x25, #0x0
     ba0:	b	bcc <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x80>
     ba4:	ldur	x9, [x25, #13]
     ba8:	ldr	q0, [x25]
     bac:	stur	x9, [x8, #13]
     bb0:	str	q0, [x8]
     bb4:	ldr	x8, [x26, #24]
     bb8:	add	x8, x8, #0x15
     bbc:	str	x8, [x26, #24]
     bc0:	add	x21, x21, #0x10
     bc4:	cmp	x27, x21
     bc8:	b.eq	d04 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1b8>  // b.none
     bcc:	ldr	x8, [x21, #8]
     bd0:	cbz	x8, d04 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1b8>
     bd4:	ldr	w8, [x8, #784]
     bd8:	cmp	w8, #0x5
     bdc:	b.ne	c54 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x108>  // b.any
     be0:	ldr	x0, [x19, #8]
     be4:	mov	x1, x21
     be8:	ldr	x8, [x0]
     bec:	ldr	x8, [x8, #32]
     bf0:	blr	x8
     bf4:	ldp	w8, w9, [x22, #8]
     bf8:	cmp	w8, w9
     bfc:	b.cs	cf0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1a4>  // b.hs, b.nlast
     c00:	ldr	x9, [x22]
     c04:	ldr	q0, [x21]
     c08:	str	q0, [x9, w8, uxtw #4]
     c0c:	ldp	w8, w9, [x22, #8]
     c10:	cmp	w8, w9
     c14:	b.cs	d7c <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x230>  // b.hs, b.nlast
     c18:	add	w8, w8, #0x1
     c1c:	add	w28, w28, #0x1
     c20:	str	w8, [x22, #8]
     c24:	str	xzr, [x21, #8]
     c28:	sub	x8, x27, w28, uxtw #4
     c2c:	ldr	w9, [x8]
     c30:	ldr	w10, [x21]
     c34:	str	w9, [x21]
     c38:	ldr	x9, [x8, #8]
     c3c:	str	x9, [x21, #8]
     c40:	str	w10, [x8]
     c44:	str	xzr, [x8, #8]
     c48:	cmp	x27, x21
     c4c:	b.ne	bcc <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x80>  // b.any
     c50:	b	d04 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1b8>
     c54:	ldrb	w8, [x24]
     c58:	cbz	w8, bc0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x74>
     c5c:	mov	x0, x23
     c60:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     c64:	tbz	w0, #0, bc0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x74>
     c68:	bl	0 <_ZN4llvm4dbgsEv>
     c6c:	ldp	x9, x8, [x0, #16]
     c70:	mov	x26, x0
     c74:	sub	x9, x9, x8
     c78:	cmp	x9, #0x19
     c7c:	b.hi	c9c <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x150>  // b.pmore
     c80:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     c84:	mov	w2, #0x1a                  	// #26
     c88:	mov	x0, x26
     c8c:	add	x1, x1, #0x0
     c90:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     c94:	mov	x26, x0
     c98:	b	cc0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x174>
     c9c:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     ca0:	add	x9, x9, #0x0
     ca4:	ldur	q0, [x9, #10]
     ca8:	ldr	q1, [x9]
     cac:	stur	q0, [x8, #10]
     cb0:	str	q1, [x8]
     cb4:	ldr	x8, [x26, #24]
     cb8:	add	x8, x8, #0x1a
     cbc:	str	x8, [x26, #24]
     cc0:	ldr	w1, [x21]
     cc4:	mov	x0, x26
     cc8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ccc:	ldp	x9, x8, [x26, #16]
     cd0:	sub	x9, x9, x8
     cd4:	cmp	x9, #0x14
     cd8:	b.hi	ba4 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x58>  // b.pmore
     cdc:	mov	w2, #0x15                  	// #21
     ce0:	mov	x0, x26
     ce4:	mov	x1, x25
     ce8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     cec:	b	bc0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x74>
     cf0:	mov	x0, x22
     cf4:	mov	x1, xzr
     cf8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     cfc:	ldr	w8, [x22, #8]
     d00:	b	c00 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xb4>
     d04:	ldp	x21, x27, [x19, #104]
     d08:	b	d10 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1c4>
     d0c:	mov	w28, wzr
     d10:	sub	x8, x27, x21
     d14:	asr	x10, x8, #4
     d18:	mov	w8, w28
     d1c:	subs	x9, x10, x8
     d20:	b.cs	d48 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1fc>  // b.hs, b.nlast
     d24:	mov	x0, x20
     d28:	ldp	x20, x19, [sp, #80]
     d2c:	ldp	x22, x21, [sp, #64]
     d30:	ldp	x24, x23, [sp, #48]
     d34:	ldp	x26, x25, [sp, #32]
     d38:	ldp	x28, x27, [sp, #16]
     d3c:	neg	x1, x8
     d40:	ldp	x29, x30, [sp], #96
     d44:	b	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     d48:	cmp	x9, x10
     d4c:	b.cs	d60 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x214>  // b.hs, b.nlast
     d50:	add	x8, x21, x9, lsl #4
     d54:	cmp	x8, x27
     d58:	b.eq	d60 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x214>  // b.none
     d5c:	str	x8, [x19, #112]
     d60:	ldp	x20, x19, [sp, #80]
     d64:	ldp	x22, x21, [sp, #64]
     d68:	ldp	x24, x23, [sp, #48]
     d6c:	ldp	x26, x25, [sp, #32]
     d70:	ldp	x28, x27, [sp, #16]
     d74:	ldp	x29, x30, [sp], #96
     d78:	ret
     d7c:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     d80:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     d84:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     d88:	add	x0, x0, #0x0
     d8c:	add	x1, x1, #0x0
     d90:	add	x3, x3, #0x0
     d94:	mov	w2, #0x43                  	// #67
     d98:	bl	0 <__assert_fail>

0000000000000d9c <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE>:
     d9c:	stp	x29, x30, [sp, #-32]!
     da0:	str	x19, [sp, #16]
     da4:	mov	x29, sp
     da8:	ldr	x9, [x1]
     dac:	ldr	w10, [x1, #8]
     db0:	ldp	x2, x3, [x0, #80]
     db4:	mov	x8, x1
     db8:	mov	x19, x0
     dbc:	add	x1, x9, x10, lsl #4
     dc0:	mov	x0, x8
     dc4:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     dc8:	ldr	x0, [x19, #128]
     dcc:	ldr	x19, [sp, #16]
     dd0:	ldp	x29, x30, [sp], #32
     dd4:	ret

0000000000000dd8 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_>:
     dd8:	stp	x29, x30, [sp, #-64]!
     ddc:	stp	x24, x23, [sp, #16]
     de0:	stp	x22, x21, [sp, #32]
     de4:	stp	x20, x19, [sp, #48]
     de8:	mov	x29, sp
     dec:	ldr	w8, [x0, #136]
     df0:	ldp	x22, x9, [x0, #56]
     df4:	sub	x23, x9, x8, lsl #4
     df8:	cmp	x22, x23
     dfc:	b.eq	f00 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x128>  // b.none
     e00:	mov	x19, x2
     e04:	mov	x20, x0
     e08:	mov	x21, x1
     e0c:	b	e1c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x44>
     e10:	add	x22, x22, #0x10
     e14:	cmp	x23, x22
     e18:	b.eq	f00 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x128>  // b.none
     e1c:	ldr	x24, [x22, #8]
     e20:	ldr	x0, [x20, #24]
     e24:	ldr	x1, [x24]
     e28:	bl	0 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>
     e2c:	cbnz	x0, e10 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x38>
     e30:	ldr	x8, [x24]
     e34:	ldrb	w9, [x8, #324]
     e38:	cbnz	w9, e44 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x6c>
     e3c:	ldrb	w8, [x8, #325]
     e40:	cbz	w8, e9c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xc4>
     e44:	ldr	x8, [x22, #8]
     e48:	ldr	x0, [x20, #8]
     e4c:	ldr	w1, [x8, #796]
     e50:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     e54:	ldr	w8, [x0, #4]
     e58:	cbz	w8, e9c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xc4>
     e5c:	ldr	w9, [x0, #8]
     e60:	ldr	w10, [x0]
     e64:	add	w8, w9, w8
     e68:	cmp	w8, w10
     e6c:	b.ne	e9c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xc4>  // b.any
     e70:	ldp	w8, w9, [x19, #8]
     e74:	cmp	w8, w9
     e78:	b.cs	eec <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x114>  // b.hs, b.nlast
     e7c:	ldr	x9, [x19]
     e80:	ldr	q0, [x22]
     e84:	str	q0, [x9, w8, uxtw #4]
     e88:	ldp	w8, w9, [x19, #8]
     e8c:	cmp	w8, w9
     e90:	b.cs	f14 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x13c>  // b.hs, b.nlast
     e94:	add	w8, w8, #0x1
     e98:	str	w8, [x19, #8]
     e9c:	ldr	w8, [x24, #784]
     ea0:	cmp	w8, #0x2
     ea4:	b.ne	e10 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x38>  // b.any
     ea8:	ldp	w8, w9, [x21, #8]
     eac:	cmp	w8, w9
     eb0:	b.cs	ed8 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x100>  // b.hs, b.nlast
     eb4:	ldr	x9, [x21]
     eb8:	ldr	q0, [x22]
     ebc:	str	q0, [x9, w8, uxtw #4]
     ec0:	ldp	w8, w9, [x21, #8]
     ec4:	cmp	w8, w9
     ec8:	b.cs	f14 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x13c>  // b.hs, b.nlast
     ecc:	add	w8, w8, #0x1
     ed0:	str	w8, [x21, #8]
     ed4:	b	e10 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x38>
     ed8:	mov	x0, x21
     edc:	mov	x1, xzr
     ee0:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     ee4:	ldr	w8, [x21, #8]
     ee8:	b	eb4 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xdc>
     eec:	mov	x0, x19
     ef0:	mov	x1, xzr
     ef4:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     ef8:	ldr	w8, [x19, #8]
     efc:	b	e7c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xa4>
     f00:	ldp	x20, x19, [sp, #48]
     f04:	ldp	x22, x21, [sp, #32]
     f08:	ldp	x24, x23, [sp, #16]
     f0c:	ldp	x29, x30, [sp], #64
     f10:	ret
     f14:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     f18:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     f1c:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
     f20:	add	x0, x0, #0x0
     f24:	add	x1, x1, #0x0
     f28:	add	x3, x3, #0x0
     f2c:	mov	w2, #0x43                  	// #67
     f30:	bl	0 <__assert_fail>

0000000000000f34 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_>:
     f34:	stp	x29, x30, [sp, #-64]!
     f38:	stp	x24, x23, [sp, #16]
     f3c:	stp	x22, x21, [sp, #32]
     f40:	stp	x20, x19, [sp, #48]
     f44:	mov	x29, sp
     f48:	mov	x19, x0
     f4c:	ldr	x0, [x0, #8]
     f50:	mov	x20, x4
     f54:	mov	x21, x3
     f58:	mov	x22, x2
     f5c:	ldr	x8, [x0]
     f60:	mov	x23, x1
     f64:	ldr	x8, [x8, #56]
     f68:	blr	x8
     f6c:	ldr	x0, [x19, #24]
     f70:	mov	x1, x23
     f74:	bl	0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE>
     f78:	ldp	x23, x24, [x19, #104]
     f7c:	cmp	x23, x24
     f80:	b.eq	f98 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x64>  // b.none
     f84:	ldr	x0, [x23, #8]
     f88:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
     f8c:	add	x23, x23, #0x10
     f90:	cmp	x24, x23
     f94:	b.ne	f84 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x50>  // b.any
     f98:	mov	x0, x19
     f9c:	mov	x1, x22
     fa0:	bl	b4c <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE>
     fa4:	ldp	x22, x23, [x19, #56]
     fa8:	cmp	x22, x23
     fac:	b.eq	fc4 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x90>  // b.none
     fb0:	ldr	x0, [x22, #8]
     fb4:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
     fb8:	add	x22, x22, #0x10
     fbc:	cmp	x23, x22
     fc0:	b.ne	fb0 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x7c>  // b.any
     fc4:	ldp	x22, x23, [x19, #32]
     fc8:	cmp	x22, x23
     fcc:	b.eq	fe4 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0xb0>  // b.none
     fd0:	ldr	x0, [x22, #8]
     fd4:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
     fd8:	add	x22, x22, #0x10
     fdc:	cmp	x23, x22
     fe0:	b.ne	fd0 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x9c>  // b.any
     fe4:	mov	x0, x19
     fe8:	mov	x1, x21
     fec:	bl	4d8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>
     ff0:	mov	x0, x19
     ff4:	mov	x1, x20
     ff8:	bl	784 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>
     ffc:	str	wzr, [x19, #136]
    1000:	str	xzr, [x19, #128]
    1004:	ldp	x20, x19, [sp, #48]
    1008:	ldp	x22, x21, [sp, #32]
    100c:	ldp	x24, x23, [sp, #16]
    1010:	ldp	x29, x30, [sp], #64
    1014:	ret

0000000000001018 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>:
    1018:	ldr	x8, [x1, #8]
    101c:	ldr	x8, [x8]
    1020:	ldr	w9, [x8, #312]
    1024:	cbz	w9, 1038 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE+0x20>
    1028:	ldrb	w8, [x8, #329]
    102c:	cmp	w8, #0x0
    1030:	cset	w0, ne  // ne = any
    1034:	ret
    1038:	ldr	w9, [x8, #184]
    103c:	ldrb	w8, [x8, #329]
    1040:	cmp	w9, #0x0
    1044:	cset	w9, eq  // eq = none
    1048:	cmp	w8, #0x0
    104c:	cset	w8, ne  // ne = any
    1050:	orr	w0, w9, w8
    1054:	ret

0000000000001058 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE>:
    1058:	stp	x29, x30, [sp, #-48]!
    105c:	str	x21, [sp, #16]
    1060:	stp	x20, x19, [sp, #32]
    1064:	mov	x29, sp
    1068:	ldr	x21, [x1, #8]
    106c:	mov	x20, x1
    1070:	mov	x19, x0
    1074:	ldr	x0, [x0, #24]
    1078:	ldr	x1, [x21, #800]
    107c:	bl	0 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm>
    1080:	ldr	x8, [x21]
    1084:	ldrb	w9, [x8, #324]
    1088:	cbnz	w9, 1094 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3c>
    108c:	ldrb	w8, [x8, #325]
    1090:	cbz	w8, 10ac <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x54>
    1094:	ldr	x0, [x19, #8]
    1098:	mov	x1, x20
    109c:	ldr	x8, [x0]
    10a0:	ldr	x8, [x8, #24]
    10a4:	blr	x8
    10a8:	str	w0, [x21, #796]
    10ac:	ldr	w8, [x21, #784]
    10b0:	cmp	w8, #0x1
    10b4:	b.eq	10f0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x98>  // b.none
    10b8:	ldr	x9, [x21]
    10bc:	ldrb	w10, [x9, #324]
    10c0:	cbnz	w10, 10cc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x74>
    10c4:	ldrb	w9, [x9, #325]
    10c8:	cbz	w9, 1148 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xf0>
    10cc:	ldr	x8, [x20, #8]
    10d0:	ldr	x0, [x19, #8]
    10d4:	ldr	w1, [x8, #796]
    10d8:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    10dc:	ldp	w8, w9, [x0, #4]
    10e0:	ldr	w10, [x0]
    10e4:	add	w8, w9, w8
    10e8:	cmp	w10, w8
    10ec:	b.ls	1144 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xec>  // b.plast
    10f0:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    10f4:	ldr	x8, [x8]
    10f8:	ldrb	w8, [x8]
    10fc:	cbz	w8, 125c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x204>
    1100:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1104:	add	x0, x0, #0x0
    1108:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    110c:	tbz	w0, #0, 125c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x204>
    1110:	bl	0 <_ZN4llvm4dbgsEv>
    1114:	ldp	x9, x8, [x0, #16]
    1118:	mov	x21, x0
    111c:	sub	x9, x9, x8
    1120:	cmp	x9, #0x13
    1124:	b.hi	11e4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x18c>  // b.pmore
    1128:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    112c:	add	x1, x1, #0x0
    1130:	mov	w2, #0x14                  	// #20
    1134:	mov	x0, x21
    1138:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    113c:	mov	x21, x0
    1140:	b	120c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1b4>
    1144:	ldr	w8, [x21, #784]
    1148:	cmp	w8, #0x2
    114c:	b.eq	1190 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x138>  // b.none
    1150:	ldr	x9, [x21]
    1154:	ldrb	w10, [x9, #324]
    1158:	cbnz	w10, 1164 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x10c>
    115c:	ldrb	w9, [x9, #325]
    1160:	cbz	w9, 129c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x244>
    1164:	ldr	x8, [x20, #8]
    1168:	ldr	x0, [x19, #8]
    116c:	ldr	w1, [x8, #796]
    1170:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1174:	ldr	w8, [x0, #4]
    1178:	cbz	w8, 1298 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x240>
    117c:	ldr	w9, [x0, #8]
    1180:	ldr	w10, [x0]
    1184:	add	w8, w9, w8
    1188:	cmp	w8, w10
    118c:	b.ne	1298 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x240>  // b.any
    1190:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    1194:	ldr	x8, [x8]
    1198:	ldrb	w8, [x8]
    119c:	cbz	w8, 1378 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x320>
    11a0:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    11a4:	add	x0, x0, #0x0
    11a8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    11ac:	tbz	w0, #0, 1378 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x320>
    11b0:	bl	0 <_ZN4llvm4dbgsEv>
    11b4:	ldp	x9, x8, [x0, #16]
    11b8:	mov	x21, x0
    11bc:	sub	x9, x9, x8
    11c0:	cmp	x9, #0x13
    11c4:	b.hi	12f4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x29c>  // b.pmore
    11c8:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    11cc:	add	x1, x1, #0x0
    11d0:	mov	w2, #0x14                  	// #20
    11d4:	mov	x0, x21
    11d8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    11dc:	mov	x21, x0
    11e0:	b	131c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2c4>
    11e4:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    11e8:	add	x9, x9, #0x0
    11ec:	ldr	q0, [x9]
    11f0:	mov	w9, #0x676e                	// #26478
    11f4:	movk	w9, #0x2320, lsl #16
    11f8:	str	w9, [x8, #16]
    11fc:	str	q0, [x8]
    1200:	ldr	x8, [x21, #24]
    1204:	add	x8, x8, #0x14
    1208:	str	x8, [x21, #24]
    120c:	ldr	w1, [x20]
    1210:	mov	x0, x21
    1214:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1218:	ldp	x9, x8, [x21, #16]
    121c:	sub	x9, x9, x8
    1220:	cmp	x9, #0xf
    1224:	b.hi	1240 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1e8>  // b.pmore
    1228:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    122c:	add	x1, x1, #0x0
    1230:	mov	w2, #0x10                  	// #16
    1234:	mov	x0, x21
    1238:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    123c:	b	125c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x204>
    1240:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1244:	add	x9, x9, #0x0
    1248:	ldr	q0, [x9]
    124c:	str	q0, [x8]
    1250:	ldr	x8, [x21, #24]
    1254:	add	x8, x8, #0x10
    1258:	str	x8, [x21, #24]
    125c:	ldp	x1, x8, [x19, #40]
    1260:	cmp	x1, x8
    1264:	b.eq	1284 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x22c>  // b.none
    1268:	ldr	q0, [x20]
    126c:	mov	w0, wzr
    1270:	str	q0, [x1]
    1274:	ldr	x8, [x19, #40]
    1278:	add	x8, x8, #0x10
    127c:	str	x8, [x19, #40]
    1280:	b	14d8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x480>
    1284:	add	x0, x19, #0x20
    1288:	mov	x2, x20
    128c:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1290:	mov	w0, wzr
    1294:	b	14d8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x480>
    1298:	ldr	w8, [x21, #784]
    129c:	cmp	w8, #0x3
    12a0:	b.ne	14e8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x490>  // b.any
    12a4:	ldr	x8, [x21]
    12a8:	ldrb	w9, [x8, #324]
    12ac:	cbnz	w9, 12b8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x260>
    12b0:	ldrb	w8, [x8, #325]
    12b4:	cbz	w8, 12d8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x280>
    12b8:	ldr	x8, [x20, #8]
    12bc:	ldr	x0, [x19, #8]
    12c0:	ldr	w1, [x8, #796]
    12c4:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    12c8:	ldr	w8, [x0, #8]
    12cc:	ldr	w9, [x0]
    12d0:	cmp	w8, w9
    12d4:	b.ne	14e8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x490>  // b.any
    12d8:	ldr	x8, [x20, #8]
    12dc:	ldr	x8, [x8]
    12e0:	ldr	w9, [x8, #312]
    12e4:	cbz	w9, 13bc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x364>
    12e8:	ldrb	w8, [x8, #329]
    12ec:	cbnz	w8, 14d4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x47c>
    12f0:	b	13d0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x378>
    12f4:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    12f8:	add	x9, x9, #0x0
    12fc:	ldr	q0, [x9]
    1300:	mov	w9, #0x676e                	// #26478
    1304:	movk	w9, #0x2320, lsl #16
    1308:	str	w9, [x8, #16]
    130c:	str	q0, [x8]
    1310:	ldr	x8, [x21, #24]
    1314:	add	x8, x8, #0x14
    1318:	str	x8, [x21, #24]
    131c:	ldr	w1, [x20]
    1320:	mov	x0, x21
    1324:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1328:	ldp	x9, x8, [x21, #16]
    132c:	sub	x9, x9, x8
    1330:	cmp	x9, #0x12
    1334:	b.hi	1350 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2f8>  // b.pmore
    1338:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    133c:	add	x1, x1, #0x0
    1340:	mov	w2, #0x13                  	// #19
    1344:	mov	x0, x21
    1348:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    134c:	b	1378 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x320>
    1350:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1354:	add	x9, x9, #0x0
    1358:	ldr	q0, [x9]
    135c:	mov	w9, #0x6553                	// #25939
    1360:	movk	w9, #0xa74, lsl #16
    1364:	stur	w9, [x8, #15]
    1368:	str	q0, [x8]
    136c:	ldr	x8, [x21, #24]
    1370:	add	x8, x8, #0x13
    1374:	str	x8, [x21, #24]
    1378:	ldp	x1, x8, [x19, #64]
    137c:	cmp	x1, x8
    1380:	b.eq	139c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x344>  // b.none
    1384:	ldr	q0, [x20]
    1388:	str	q0, [x1]
    138c:	ldr	x8, [x19, #64]
    1390:	add	x8, x8, #0x10
    1394:	str	x8, [x19, #64]
    1398:	b	13a8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x350>
    139c:	add	x0, x19, #0x38
    13a0:	mov	x2, x20
    13a4:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    13a8:	ldr	w8, [x19, #136]
    13ac:	mov	w0, wzr
    13b0:	add	w8, w8, #0x1
    13b4:	str	w8, [x19, #136]
    13b8:	b	14d8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x480>
    13bc:	ldr	w9, [x8, #184]
    13c0:	mov	w0, #0x1                   	// #1
    13c4:	cbz	w9, 14d8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x480>
    13c8:	ldrb	w8, [x8, #329]
    13cc:	cbnz	w8, 14d8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x480>
    13d0:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    13d4:	ldr	x8, [x8]
    13d8:	ldrb	w8, [x8]
    13dc:	cbz	w8, 14a4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x44c>
    13e0:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    13e4:	add	x0, x0, #0x0
    13e8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    13ec:	tbz	w0, #0, 14a4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x44c>
    13f0:	bl	0 <_ZN4llvm4dbgsEv>
    13f4:	ldp	x9, x8, [x0, #16]
    13f8:	mov	x21, x0
    13fc:	sub	x9, x9, x8
    1400:	cmp	x9, #0x13
    1404:	b.hi	1424 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3cc>  // b.pmore
    1408:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    140c:	add	x1, x1, #0x0
    1410:	mov	w2, #0x14                  	// #20
    1414:	mov	x0, x21
    1418:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    141c:	mov	x21, x0
    1420:	b	144c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3f4>
    1424:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1428:	add	x9, x9, #0x0
    142c:	ldr	q0, [x9]
    1430:	mov	w9, #0x676e                	// #26478
    1434:	movk	w9, #0x2320, lsl #16
    1438:	str	w9, [x8, #16]
    143c:	str	q0, [x8]
    1440:	ldr	x8, [x21, #24]
    1444:	add	x8, x8, #0x14
    1448:	str	x8, [x21, #24]
    144c:	ldr	w1, [x20]
    1450:	mov	x0, x21
    1454:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1458:	ldp	x9, x8, [x21, #16]
    145c:	sub	x9, x9, x8
    1460:	cmp	x9, #0x10
    1464:	b.hi	1480 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x428>  // b.pmore
    1468:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    146c:	add	x1, x1, #0x0
    1470:	mov	w2, #0x11                  	// #17
    1474:	mov	x0, x21
    1478:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    147c:	b	14a4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x44c>
    1480:	adrp	x9, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    1484:	add	x9, x9, #0x0
    1488:	ldr	q0, [x9]
    148c:	mov	w9, #0xa                   	// #10
    1490:	strb	w9, [x8, #16]
    1494:	str	q0, [x8]
    1498:	ldr	x8, [x21, #24]
    149c:	add	x8, x8, #0x11
    14a0:	str	x8, [x21, #24]
    14a4:	ldp	x1, x8, [x19, #88]
    14a8:	cmp	x1, x8
    14ac:	b.eq	14c8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x470>  // b.none
    14b0:	ldr	q0, [x20]
    14b4:	str	q0, [x1]
    14b8:	ldr	x8, [x19, #88]
    14bc:	add	x8, x8, #0x10
    14c0:	str	x8, [x19, #88]
    14c4:	b	14d4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x47c>
    14c8:	add	x0, x19, #0x50
    14cc:	mov	x2, x20
    14d0:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    14d4:	mov	w0, #0x1                   	// #1
    14d8:	ldp	x20, x19, [sp, #32]
    14dc:	ldr	x21, [sp, #16]
    14e0:	ldp	x29, x30, [sp], #48
    14e4:	ret
    14e8:	adrp	x0, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    14ec:	adrp	x1, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    14f0:	adrp	x3, 0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
    14f4:	add	x0, x0, #0x0
    14f8:	add	x1, x1, #0x0
    14fc:	add	x3, x3, #0x0
    1500:	mov	w2, #0x143                 	// #323
    1504:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase8getGroupEj:

0000000000000000 <_ZN4llvm3mca10LSUnitBase8getGroupEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	w1, e4 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xe4>
   c:	ldr	w9, [x0, #56]
  10:	ldr	x8, [x0, #40]
  14:	cbz	w9, 6c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x6c>
  18:	cmn	w1, #0x2
  1c:	b.cs	104 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x104>  // b.hs, b.nlast
  20:	mov	w10, #0x25                  	// #37
  24:	mul	w11, w1, w10
  28:	sub	w10, w9, #0x1
  2c:	and	w11, w10, w11
  30:	add	x14, x8, w11, uxtw #4
  34:	ldr	w12, [x14]
  38:	cmp	w12, w1
  3c:	b.eq	70 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x70>  // b.none
  40:	mov	w13, #0x1                   	// #1
  44:	cmn	w12, #0x1
  48:	b.eq	6c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x6c>  // b.none
  4c:	add	w11, w11, w13
  50:	and	w11, w11, w10
  54:	add	x14, x8, w11, uxtw #4
  58:	ldr	w12, [x14]
  5c:	add	w13, w13, #0x1
  60:	cmp	w12, w1
  64:	b.eq	70 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x70>  // b.none
  68:	b	44 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x44>
  6c:	add	x14, x8, x9, lsl #4
  70:	add	x10, x8, x9, lsl #4
  74:	cmp	x14, x10
  78:	b.eq	e4 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xe4>  // b.none
  7c:	cbz	w9, d4 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xd4>
  80:	cmn	w1, #0x2
  84:	b.cs	104 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x104>  // b.hs, b.nlast
  88:	mov	w11, #0x25                  	// #37
  8c:	mul	w11, w1, w11
  90:	sub	w9, w9, #0x1
  94:	and	w11, w9, w11
  98:	add	x13, x8, w11, uxtw #4
  9c:	ldr	w12, [x13]
  a0:	cmp	w12, w1
  a4:	b.eq	d8 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xd8>  // b.none
  a8:	mov	w14, #0x1                   	// #1
  ac:	cmn	w12, #0x1
  b0:	b.eq	d4 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xd4>  // b.none
  b4:	add	w11, w11, w14
  b8:	and	w11, w11, w9
  bc:	add	x13, x8, w11, uxtw #4
  c0:	ldr	w12, [x13]
  c4:	add	w14, w14, #0x1
  c8:	cmp	w12, w1
  cc:	b.eq	d8 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xd8>  // b.none
  d0:	b	ac <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xac>
  d4:	mov	x13, x10
  d8:	ldr	x0, [x13, #8]
  dc:	ldp	x29, x30, [sp], #16
  e0:	ret
  e4:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  e8:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  ec:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0x11c                 	// #284
 100:	bl	0 <__assert_fail>
 104:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 108:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 10c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x252                 	// #594
 120:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldr	x25, [x0]
  20:	ldr	w23, [x0, #8]
  24:	mov	x21, x3
  28:	mov	x19, x2
  2c:	sub	x9, x1, x25
  30:	add	x8, x25, x23, lsl #4
  34:	mov	x22, x0
  38:	cmp	x8, x1
  3c:	asr	x26, x9, #4
  40:	b.eq	120 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x120>  // b.none
  44:	cmp	x25, x1
  48:	b.hi	2ac <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x2ac>  // b.pmore
  4c:	cmp	x8, x1
  50:	b.cc	2cc <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x2cc>  // b.lo, b.ul, b.last
  54:	ldr	w8, [x22, #12]
  58:	sub	x27, x21, x19
  5c:	asr	x28, x27, #4
  60:	add	x1, x28, x23
  64:	cmp	x1, x8
  68:	b.ls	7c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x7c>  // b.plast
  6c:	mov	x0, x22
  70:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
  74:	ldr	x25, [x22]
  78:	ldr	w23, [x22, #8]
  7c:	add	x20, x25, x26, lsl #4
  80:	add	x24, x25, x23, lsl #4
  84:	sub	x9, x24, x20
  88:	asr	x8, x9, #4
  8c:	cmp	x8, x28
  90:	b.cs	190 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x190>  // b.hs, b.nlast
  94:	ldr	w11, [x22, #12]
  98:	add	x10, x28, x23
  9c:	cmp	x10, x11
  a0:	b.hi	28c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x28c>  // b.pmore
  a4:	cmp	x26, x23
  a8:	str	w10, [x22, #8]
  ac:	b.eq	d8 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0xd8>  // b.none
  b0:	add	x10, x25, w10, uxtw #4
  b4:	lsl	x11, x23, #4
  b8:	sub	x10, x10, x8, lsl #4
  bc:	sub	x11, x11, x26, lsl #4
  c0:	mov	x12, x20
  c4:	ldr	q0, [x12], #16
  c8:	subs	x11, x11, #0x10
  cc:	str	q0, [x10]
  d0:	add	x10, x10, #0x10
  d4:	b.ne	c4 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0xc4>  // b.any
  d8:	cbz	x9, 100 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x100>
  dc:	mov	x9, x20
  e0:	ldr	w10, [x19]
  e4:	subs	x8, x8, #0x1
  e8:	str	w10, [x9]
  ec:	ldr	x10, [x19, #8]
  f0:	add	x19, x19, #0x10
  f4:	str	x10, [x9, #8]
  f8:	add	x9, x9, #0x10
  fc:	b.ne	e0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0xe0>  // b.any
 100:	cmp	x19, x21
 104:	b.eq	26c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x26c>  // b.none
 108:	ldr	q0, [x19], #16
 10c:	cmp	x21, x19
 110:	str	q0, [x24]
 114:	add	x24, x24, #0x10
 118:	b.ne	108 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x108>  // b.any
 11c:	b	26c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x26c>
 120:	ldr	w8, [x22, #12]
 124:	sub	x9, x21, x19
 128:	asr	x20, x9, #4
 12c:	sub	x8, x8, x23
 130:	cmp	x20, x8
 134:	b.ls	148 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x148>  // b.plast
 138:	add	x1, x20, x23
 13c:	mov	x0, x22
 140:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 144:	ldr	w23, [x22, #8]
 148:	cmp	x19, x21
 14c:	b.eq	170 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x170>  // b.none
 150:	ldr	x8, [x22]
 154:	add	x8, x8, x23, lsl #4
 158:	ldr	q0, [x19], #16
 15c:	cmp	x21, x19
 160:	str	q0, [x8]
 164:	add	x8, x8, #0x10
 168:	b.ne	158 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x158>  // b.any
 16c:	ldr	w23, [x22, #8]
 170:	ldr	w9, [x22, #12]
 174:	add	x8, x23, x20
 178:	cmp	x8, x9
 17c:	b.hi	28c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x28c>  // b.pmore
 180:	ldr	x9, [x22]
 184:	str	w8, [x22, #8]
 188:	add	x20, x9, x26, lsl #4
 18c:	b	26c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x26c>
 190:	ldr	w8, [x22, #12]
 194:	sub	x8, x8, x23
 198:	cmp	x28, x8
 19c:	mov	x8, x23
 1a0:	b.ls	1b4 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1b4>  // b.plast
 1a4:	add	x1, x28, x23
 1a8:	mov	x0, x22
 1ac:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 1b0:	ldr	w8, [x22, #8]
 1b4:	cbz	x27, 1dc <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1dc>
 1b8:	ldr	x9, [x22]
 1bc:	add	x8, x9, x8, lsl #4
 1c0:	neg	x9, x28, lsl #4
 1c4:	ldr	q0, [x24, x9]
 1c8:	adds	x9, x9, #0x10
 1cc:	str	q0, [x8]
 1d0:	add	x8, x8, #0x10
 1d4:	b.ne	1c4 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x1c4>  // b.any
 1d8:	ldr	w8, [x22, #8]
 1dc:	ldr	w9, [x22, #12]
 1e0:	add	x8, x8, x28
 1e4:	cmp	x8, x9
 1e8:	b.hi	28c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x28c>  // b.pmore
 1ec:	sub	x9, x24, x28, lsl #4
 1f0:	sub	x9, x9, x20
 1f4:	cmp	x9, #0x1
 1f8:	str	w8, [x22, #8]
 1fc:	b.lt	234 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x234>  // b.tstop
 200:	lsr	x8, x9, #4
 204:	add	x9, x25, x23, lsl #4
 208:	add	x8, x8, #0x1
 20c:	sub	x9, x9, #0x8
 210:	neg	x10, x28, lsl #4
 214:	add	x11, x9, x10
 218:	ldur	w12, [x11, #-8]
 21c:	sub	x8, x8, #0x1
 220:	cmp	x8, #0x1
 224:	stur	w12, [x9, #-8]
 228:	ldr	x11, [x11]
 22c:	str	x11, [x9], #-16
 230:	b.gt	214 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x214>
 234:	cmp	x27, #0x1
 238:	b.lt	26c <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x26c>  // b.tstop
 23c:	lsr	x8, x27, #4
 240:	add	x8, x8, #0x1
 244:	mov	x9, x20
 248:	ldr	w10, [x19]
 24c:	sub	x8, x8, #0x1
 250:	cmp	x8, #0x1
 254:	str	w10, [x9]
 258:	ldr	x10, [x19, #8]
 25c:	add	x19, x19, #0x10
 260:	str	x10, [x9, #8]
 264:	add	x9, x9, #0x10
 268:	b.gt	248 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_+0x248>
 26c:	mov	x0, x20
 270:	ldp	x20, x19, [sp, #80]
 274:	ldp	x22, x21, [sp, #64]
 278:	ldp	x24, x23, [sp, #48]
 27c:	ldp	x26, x25, [sp, #32]
 280:	ldp	x28, x27, [sp, #16]
 284:	ldp	x29, x30, [sp], #96
 288:	ret
 28c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 290:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 294:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 298:	add	x0, x0, #0x0
 29c:	add	x1, x1, #0x0
 2a0:	add	x3, x3, #0x0
 2a4:	mov	w2, #0x43                  	// #67
 2a8:	bl	0 <__assert_fail>
 2ac:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 2b0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 2b4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 2b8:	add	x0, x0, #0x0
 2bc:	add	x1, x1, #0x0
 2c0:	add	x3, x3, #0x0
 2c4:	mov	w2, #0x24e                 	// #590
 2c8:	bl	0 <__assert_fail>
 2cc:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 2d0:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 2d4:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca7InstRefEE6insertIN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_SaIS2_EEEEvEES7_S7_T_SC_>
 2d8:	add	x0, x0, #0x0
 2dc:	add	x1, x1, #0x0
 2e0:	add	x3, x3, #0x0
 2e4:	mov	w2, #0x24f                 	// #591
 2e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_:

0000000000000000 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_>:
   0:	ldr	x10, [x1, #8]
   4:	ldr	w8, [x1]
   8:	ldr	w9, [x10, #24]
   c:	cbz	w9, 34 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x34>
  10:	ldr	x10, [x10, #16]
  14:	mov	w11, #0x88                  	// #136
  18:	mul	x11, x9, x11
  1c:	sub	x11, x11, #0x88
  20:	cmp	x11, #0x88
  24:	b.cs	3c <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x3c>  // b.hs, b.nlast
  28:	mov	w12, wzr
  2c:	mov	x11, x10
  30:	b	ac <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0xac>
  34:	mov	w12, wzr
  38:	b	d4 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0xd4>
  3c:	mov	x14, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  40:	movk	x14, #0xf0f1
  44:	umulh	x11, x11, x14
  48:	lsr	x11, x11, #7
  4c:	add	x14, x11, #0x1
  50:	mov	w16, #0x88                  	// #136
  54:	and	x15, x14, #0x3fffffffffffffe
  58:	mov	w13, wzr
  5c:	mov	w12, wzr
  60:	madd	x11, x15, x16, x10
  64:	add	x16, x10, #0xc8
  68:	mov	x17, x15
  6c:	ldur	x18, [x16, #-168]
  70:	ldur	w0, [x16, #-136]
  74:	ldr	w1, [x16]
  78:	ldur	x3, [x16, #-32]
  7c:	cmp	x18, #0x0
  80:	add	w13, w0, w13
  84:	add	w12, w1, w12
  88:	cinc	w13, w13, ne  // ne = any
  8c:	cmp	x3, #0x0
  90:	cinc	w12, w12, ne  // ne = any
  94:	subs	x17, x17, #0x2
  98:	add	x16, x16, #0x110
  9c:	b.ne	6c <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x6c>  // b.any
  a0:	cmp	x14, x15
  a4:	add	w12, w12, w13
  a8:	b.eq	d4 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0xd4>  // b.none
  ac:	mov	w13, #0x88                  	// #136
  b0:	madd	x9, x9, x13, x10
  b4:	ldr	x10, [x11, #32]
  b8:	ldr	w13, [x11, #64]
  bc:	add	x11, x11, #0x88
  c0:	cmp	x10, #0x0
  c4:	add	w10, w13, w12
  c8:	cinc	w12, w10, ne  // ne = any
  cc:	cmp	x9, x11
  d0:	b.ne	b4 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0xb4>  // b.any
  d4:	ldr	x13, [x2, #8]
  d8:	ldr	w10, [x2]
  dc:	sub	w9, w8, w12
  e0:	ldr	w11, [x13, #24]
  e4:	cbz	w11, 10c <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x10c>
  e8:	ldr	x12, [x13, #16]
  ec:	mov	w13, #0x88                  	// #136
  f0:	mul	x13, x11, x13
  f4:	sub	x13, x13, #0x88
  f8:	cmp	x13, #0x88
  fc:	b.cs	114 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x114>  // b.hs, b.nlast
 100:	mov	w14, wzr
 104:	mov	x13, x12
 108:	b	184 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x184>
 10c:	mov	w14, wzr
 110:	b	1ac <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x1ac>
 114:	mov	x16, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
 118:	movk	x16, #0xf0f1
 11c:	umulh	x13, x13, x16
 120:	lsr	x13, x13, #7
 124:	add	x16, x13, #0x1
 128:	mov	w18, #0x88                  	// #136
 12c:	and	x17, x16, #0x3fffffffffffffe
 130:	mov	w15, wzr
 134:	mov	w14, wzr
 138:	madd	x13, x17, x18, x12
 13c:	add	x18, x12, #0xc8
 140:	mov	x0, x17
 144:	ldur	x1, [x18, #-168]
 148:	ldur	w2, [x18, #-136]
 14c:	ldr	w3, [x18]
 150:	ldur	x4, [x18, #-32]
 154:	cmp	x1, #0x0
 158:	add	w15, w2, w15
 15c:	add	w14, w3, w14
 160:	cinc	w15, w15, ne  // ne = any
 164:	cmp	x4, #0x0
 168:	cinc	w14, w14, ne  // ne = any
 16c:	subs	x0, x0, #0x2
 170:	add	x18, x18, #0x110
 174:	b.ne	144 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x144>  // b.any
 178:	cmp	x16, x17
 17c:	add	w14, w14, w15
 180:	b.eq	1ac <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x1ac>  // b.none
 184:	mov	w15, #0x88                  	// #136
 188:	madd	x11, x11, x15, x12
 18c:	ldr	x12, [x13, #32]
 190:	ldr	w15, [x13, #64]
 194:	add	x13, x13, #0x88
 198:	cmp	x12, #0x0
 19c:	add	w12, w15, w14
 1a0:	cinc	w14, w12, ne  // ne = any
 1a4:	cmp	x11, x13
 1a8:	b.ne	18c <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x18c>  // b.any
 1ac:	sub	w11, w10, w14
 1b0:	cmp	w8, w10
 1b4:	cset	w8, cc  // cc = lo, ul, last
 1b8:	cmp	w9, w11
 1bc:	cset	w9, lt  // lt = tstop
 1c0:	csel	w0, w8, w9, eq  // eq = none
 1c4:	ret

Disassembly of section .text._ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag>:
   0:	sub	x8, x1, x0
   4:	cmp	x8, #0x199
   8:	b.lt	94 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x94>  // b.tstop
   c:	mov	x9, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  10:	movk	x9, #0xf0f1
  14:	umulh	x8, x8, x9
  18:	lsr	x8, x8, #9
  1c:	add	x8, x8, #0x1
  20:	ldr	x9, [x0, #32]
  24:	ldr	w10, [x0, #64]
  28:	cmp	x9, #0x0
  2c:	csetm	w9, ne  // ne = any
  30:	cmp	w10, w9
  34:	b.ne	128 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x128>  // b.any
  38:	ldr	x9, [x0, #168]
  3c:	ldr	w10, [x0, #200]
  40:	cmp	x9, #0x0
  44:	csetm	w9, ne  // ne = any
  48:	cmp	w10, w9
  4c:	b.ne	114 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x114>  // b.any
  50:	ldr	x9, [x0, #304]
  54:	ldr	w10, [x0, #336]
  58:	cmp	x9, #0x0
  5c:	csetm	w9, ne  // ne = any
  60:	cmp	w10, w9
  64:	b.ne	11c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x11c>  // b.any
  68:	ldr	x9, [x0, #440]
  6c:	ldr	w10, [x0, #472]
  70:	cmp	x9, #0x0
  74:	csetm	w9, ne  // ne = any
  78:	cmp	w10, w9
  7c:	b.ne	124 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x124>  // b.any
  80:	sub	x8, x8, #0x1
  84:	cmp	x8, #0x1
  88:	add	x0, x0, #0x220
  8c:	b.gt	20 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x20>
  90:	sub	x8, x1, x0
  94:	mov	x9, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  98:	asr	x8, x8, #3
  9c:	movk	x9, #0xf0f1
  a0:	mul	x8, x8, x9
  a4:	cmp	x8, #0x1
  a8:	b.eq	f4 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0xf4>  // b.none
  ac:	cmp	x8, #0x2
  b0:	b.eq	d8 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0xd8>  // b.none
  b4:	cmp	x8, #0x3
  b8:	b.ne	10c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x10c>  // b.any
  bc:	ldr	x8, [x0, #32]
  c0:	ldr	w9, [x0, #64]
  c4:	cmp	x8, #0x0
  c8:	csetm	w8, ne  // ne = any
  cc:	cmp	w9, w8
  d0:	b.ne	128 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x128>  // b.any
  d4:	add	x0, x0, #0x88
  d8:	ldr	x8, [x0, #32]
  dc:	ldr	w9, [x0, #64]
  e0:	cmp	x8, #0x0
  e4:	csetm	w8, ne  // ne = any
  e8:	cmp	w9, w8
  ec:	b.ne	128 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x128>  // b.any
  f0:	add	x0, x0, #0x88
  f4:	ldr	x8, [x0, #32]
  f8:	ldr	w9, [x0, #64]
  fc:	cmp	x8, #0x0
 100:	csetm	w8, ne  // ne = any
 104:	cmp	w9, w8
 108:	b.ne	128 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x128>  // b.any
 10c:	mov	x0, x1
 110:	ret
 114:	add	x0, x0, #0x88
 118:	ret
 11c:	add	x0, x0, #0x110
 120:	ret
 124:	add	x0, x0, #0x198
 128:	ret

Disassembly of section .text._ZNK4llvm3mca10LSUnitBase8getGroupEj:

0000000000000000 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	w1, e4 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0xe4>
   c:	ldr	w9, [x0, #56]
  10:	ldr	x8, [x0, #40]
  14:	cbz	w9, 6c <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x6c>
  18:	cmn	w1, #0x2
  1c:	b.cs	104 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x104>  // b.hs, b.nlast
  20:	mov	w10, #0x25                  	// #37
  24:	mul	w11, w1, w10
  28:	sub	w10, w9, #0x1
  2c:	and	w11, w10, w11
  30:	add	x14, x8, w11, uxtw #4
  34:	ldr	w12, [x14]
  38:	cmp	w12, w1
  3c:	b.eq	70 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x70>  // b.none
  40:	mov	w13, #0x1                   	// #1
  44:	cmn	w12, #0x1
  48:	b.eq	6c <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x6c>  // b.none
  4c:	add	w11, w11, w13
  50:	and	w11, w11, w10
  54:	add	x14, x8, w11, uxtw #4
  58:	ldr	w12, [x14]
  5c:	add	w13, w13, #0x1
  60:	cmp	w12, w1
  64:	b.eq	70 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x70>  // b.none
  68:	b	44 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x44>
  6c:	add	x14, x8, x9, lsl #4
  70:	add	x10, x8, x9, lsl #4
  74:	cmp	x14, x10
  78:	b.eq	e4 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0xe4>  // b.none
  7c:	cbz	w9, d4 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0xd4>
  80:	cmn	w1, #0x2
  84:	b.cs	104 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0x104>  // b.hs, b.nlast
  88:	mov	w11, #0x25                  	// #37
  8c:	mul	w11, w1, w11
  90:	sub	w9, w9, #0x1
  94:	and	w11, w9, w11
  98:	add	x13, x8, w11, uxtw #4
  9c:	ldr	w12, [x13]
  a0:	cmp	w12, w1
  a4:	b.eq	d8 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0xd8>  // b.none
  a8:	mov	w14, #0x1                   	// #1
  ac:	cmn	w12, #0x1
  b0:	b.eq	d4 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0xd4>  // b.none
  b4:	add	w11, w11, w14
  b8:	and	w11, w11, w9
  bc:	add	x13, x8, w11, uxtw #4
  c0:	ldr	w12, [x13]
  c4:	add	w14, w14, #0x1
  c8:	cmp	w12, w1
  cc:	b.eq	d8 <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0xd8>  // b.none
  d0:	b	ac <_ZNK4llvm3mca10LSUnitBase8getGroupEj+0xac>
  d4:	mov	x13, x10
  d8:	ldr	x0, [x13, #8]
  dc:	ldp	x29, x30, [sp], #16
  e0:	ret
  e4:	adrp	x0, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  e8:	adrp	x1, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  ec:	adrp	x3, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0x117                 	// #279
 100:	bl	0 <__assert_fail>
 104:	adrp	x0, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
 108:	adrp	x1, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
 10c:	adrp	x3, 0 <_ZNK4llvm3mca10LSUnitBase8getGroupEj>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x252                 	// #594
 120:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	108 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x108>  // b.none
  2c:	asr	x9, x8, #4
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #59
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #4
  70:	cbz	x25, 84 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x84>
  74:	lsl	x0, x25, #4
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	q0, [x23]
  8c:	cmp	x20, x21
  90:	mov	x8, x22
  94:	str	q0, [x22, x26, lsl #4]
  98:	b.eq	b8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb8>  // b.none
  9c:	mov	x8, x22
  a0:	mov	x9, x20
  a4:	ldr	q0, [x9], #16
  a8:	cmp	x21, x9
  ac:	str	q0, [x8]
  b0:	add	x8, x8, #0x10
  b4:	b.ne	a4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa4>  // b.any
  b8:	cmp	x24, x21
  bc:	add	x23, x8, #0x10
  c0:	b.eq	d8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd8>  // b.none
  c4:	ldr	q0, [x21], #16
  c8:	cmp	x24, x21
  cc:	str	q0, [x23]
  d0:	add	x23, x23, #0x10
  d4:	b.ne	c4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xc4>  // b.any
  d8:	cbz	x20, e4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe4>
  dc:	mov	x0, x20
  e0:	bl	0 <_ZdlPv>
  e4:	add	x8, x22, x25, lsl #4
  e8:	stp	x22, x23, [x19]
  ec:	str	x8, [x19, #16]
  f0:	ldp	x20, x19, [sp, #64]
  f4:	ldp	x22, x21, [sp, #48]
  f8:	ldp	x24, x23, [sp, #32]
  fc:	ldp	x26, x25, [sp, #16]
 100:	ldp	x29, x30, [sp], #80
 104:	ret
 108:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 10c:	add	x0, x0, #0x0
 110:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cbz	x1, 194 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x194>
  18:	ldp	x11, x8, [x0, #8]
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	sub	x8, x8, x11
  28:	cmp	x1, x8, asr #4
  2c:	b.ls	88 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x88>  // b.plast
  30:	ldr	x8, [x19]
  34:	sub	x8, x11, x8
  38:	asr	x23, x8, #4
  3c:	eor	x8, x23, #0x7ffffffffffffff
  40:	cmp	x8, x20
  44:	b.cc	1a8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x1a8>  // b.lo, b.ul, b.last
  48:	cmp	x23, x20
  4c:	csel	x8, x20, x23, cc  // cc = lo, ul, last
  50:	adds	x8, x8, x23
  54:	lsr	x10, x8, #59
  58:	cset	w9, cs  // cs = hs, nlast
  5c:	cmp	x10, #0x0
  60:	cset	w10, ne  // ne = any
  64:	orr	w9, w9, w10
  68:	cmp	w9, #0x0
  6c:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  70:	csel	x22, x9, x8, ne  // ne = any
  74:	cbz	x22, f0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xf0>
  78:	lsl	x0, x22, #4
  7c:	bl	0 <_Znwm>
  80:	mov	x21, x0
  84:	b	f4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xf4>
  88:	cmp	x20, #0x2
  8c:	b.cs	9c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x9c>  // b.hs, b.nlast
  90:	mov	x8, x11
  94:	mov	x9, x20
  98:	b	d4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xd4>
  9c:	and	x10, x20, #0xfffffffffffffffe
  a0:	and	x9, x20, #0x1
  a4:	add	x8, x11, x10, lsl #4
  a8:	add	x11, x11, #0x10
  ac:	mov	x12, x10
  b0:	stur	wzr, [x11, #-16]
  b4:	str	wzr, [x11]
  b8:	stur	xzr, [x11, #-8]
  bc:	str	xzr, [x11, #8]
  c0:	subs	x12, x12, #0x2
  c4:	add	x11, x11, #0x20
  c8:	b.ne	b0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xb0>  // b.any
  cc:	cmp	x10, x20
  d0:	b.eq	e8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xe8>  // b.none
  d4:	str	wzr, [x8]
  d8:	str	xzr, [x8, #8]
  dc:	subs	x9, x9, #0x1
  e0:	add	x8, x8, #0x10
  e4:	b.ne	d4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xd4>  // b.any
  e8:	str	x8, [x19, #8]
  ec:	b	194 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x194>
  f0:	mov	x21, xzr
  f4:	add	x23, x21, x23, lsl #4
  f8:	cmp	x20, #0x2
  fc:	mov	x8, x23
 100:	mov	x9, x20
 104:	b.cc	140 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x140>  // b.lo, b.ul, b.last
 108:	and	x10, x20, #0xfffffffffffffffe
 10c:	and	x9, x20, #0x1
 110:	add	x8, x23, x10, lsl #4
 114:	add	x11, x23, #0x10
 118:	mov	x12, x10
 11c:	stur	wzr, [x11, #-16]
 120:	str	wzr, [x11]
 124:	stur	xzr, [x11, #-8]
 128:	str	xzr, [x11, #8]
 12c:	subs	x12, x12, #0x2
 130:	add	x11, x11, #0x20
 134:	b.ne	11c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x11c>  // b.any
 138:	cmp	x10, x20
 13c:	b.eq	154 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x154>  // b.none
 140:	str	wzr, [x8]
 144:	str	xzr, [x8, #8]
 148:	subs	x9, x9, #0x1
 14c:	add	x8, x8, #0x10
 150:	b.ne	140 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x140>  // b.any
 154:	ldp	x0, x8, [x19]
 158:	cmp	x0, x8
 15c:	b.eq	17c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x17c>  // b.none
 160:	mov	x9, x21
 164:	ldr	q0, [x0], #16
 168:	cmp	x8, x0
 16c:	str	q0, [x9]
 170:	add	x9, x9, #0x10
 174:	b.ne	164 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x164>  // b.any
 178:	ldr	x0, [x19]
 17c:	cbz	x0, 184 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x184>
 180:	bl	0 <_ZdlPv>
 184:	add	x8, x23, x20, lsl #4
 188:	add	x9, x21, x22, lsl #4
 18c:	stp	x21, x8, [x19]
 190:	str	x9, [x19, #16]
 194:	ldp	x20, x19, [sp, #48]
 198:	ldp	x22, x21, [sp, #32]
 19c:	ldr	x23, [sp, #16]
 1a0:	ldp	x29, x30, [sp], #64
 1a4:	ret
 1a8:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>
 1ac:	add	x0, x0, #0x0
 1b0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	108 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x108>  // b.none
  2c:	asr	x9, x8, #4
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #59
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #4
  70:	cbz	x25, 84 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x84>
  74:	lsl	x0, x25, #4
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	q0, [x23]
  8c:	cmp	x20, x21
  90:	mov	x8, x22
  94:	str	q0, [x22, x26, lsl #4]
  98:	b.eq	b8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb8>  // b.none
  9c:	mov	x8, x22
  a0:	mov	x9, x20
  a4:	ldr	q0, [x9], #16
  a8:	cmp	x21, x9
  ac:	str	q0, [x8]
  b0:	add	x8, x8, #0x10
  b4:	b.ne	a4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa4>  // b.any
  b8:	cmp	x24, x21
  bc:	add	x23, x8, #0x10
  c0:	b.eq	d8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd8>  // b.none
  c4:	ldr	q0, [x21], #16
  c8:	cmp	x24, x21
  cc:	str	q0, [x23]
  d0:	add	x23, x23, #0x10
  d4:	b.ne	c4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xc4>  // b.any
  d8:	cbz	x20, e4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe4>
  dc:	mov	x0, x20
  e0:	bl	0 <_ZdlPv>
  e4:	add	x8, x22, x25, lsl #4
  e8:	stp	x22, x23, [x19]
  ec:	str	x8, [x19, #16]
  f0:	ldp	x20, x19, [sp, #64]
  f4:	ldp	x22, x21, [sp, #48]
  f8:	ldp	x24, x23, [sp, #32]
  fc:	ldp	x26, x25, [sp, #16]
 100:	ldp	x29, x30, [sp], #80
 104:	ret
 108:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 10c:	add	x0, x0, #0x0
 110:	bl	0 <_ZSt20__throw_length_errorPKc>

InstrBuilder.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	stp	x20, x19, [sp, #16]
       8:	mov	x29, sp
       c:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
      10:	ldr	d0, [x9]
      14:	add	x8, x0, #0x30
      18:	mov	x20, x0
      1c:	stp	x1, x2, [x0]
      20:	stp	x3, x4, [x0, #16]
      24:	str	x8, [x20, #32]!
      28:	mov	w8, #0x101                 	// #257
      2c:	stp	xzr, xzr, [x0, #120]
      30:	str	xzr, [x0, #112]
      34:	str	wzr, [x0, #136]
      38:	stp	xzr, xzr, [x0, #152]
      3c:	str	xzr, [x0, #144]
      40:	str	wzr, [x0, #168]
      44:	str	d0, [x0, #40]
      48:	strh	w8, [x0, #176]
      4c:	ldr	x8, [x1, #152]
      50:	mov	x19, x0
      54:	mov	x0, x20
      58:	ldr	w1, [x8, #48]
      5c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
      60:	ldr	x8, [x19]
      64:	ldr	x1, [x20]
      68:	ldr	w2, [x19, #40]
      6c:	ldp	x20, x19, [sp, #16]
      70:	ldr	x0, [x8, #152]
      74:	ldp	x29, x30, [sp], #32
      78:	b	0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>

000000000000007c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj>:
      7c:	sub	sp, sp, #0xc0
      80:	stp	x29, x30, [sp, #96]
      84:	stp	x28, x27, [sp, #112]
      88:	stp	x26, x25, [sp, #128]
      8c:	stp	x24, x23, [sp, #144]
      90:	stp	x22, x21, [sp, #160]
      94:	stp	x20, x19, [sp, #176]
      98:	add	x29, sp, #0x60
      9c:	ldr	x9, [x0, #8]
      a0:	ldr	w8, [x2]
      a4:	ldr	w10, [x9, #24]
      a8:	cmp	w10, w8
      ac:	b.ls	b84 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xb08>  // b.plast
      b0:	ldr	x10, [x0]
      b4:	mov	x28, x0
      b8:	ldr	x10, [x10, #152]
      bc:	ldr	x11, [x10, #40]
      c0:	cbz	x11, ba4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xb28>
      c4:	ldr	w10, [x10, #52]
      c8:	cmp	w10, w3
      cc:	b.ls	bc4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xb48>  // b.plast
      d0:	ldr	x9, [x9]
      d4:	mov	x23, x2
      d8:	mov	x20, x1
      dc:	mov	w12, w3
      e0:	add	x10, x9, x8, lsl #6
      e4:	mov	x9, x10
      e8:	ldr	x8, [x9, #32]!
      ec:	ldurb	w22, [x9, #-28]
      f0:	stur	x9, [x29, #-16]
      f4:	cbz	x8, 10c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x90>
      f8:	mov	w21, #0xffffffff            	// #-1
      fc:	add	w21, w21, #0x1
     100:	ldrh	w9, [x8, w21, uxtw #1]
     104:	cbnz	w9, fc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x80>
     108:	b	110 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x94>
     10c:	mov	w21, wzr
     110:	mov	w8, #0x18                  	// #24
     114:	str	x11, [sp, #40]
     118:	str	x12, [sp, #24]
     11c:	madd	x8, x12, x8, x11
     120:	ldrh	w9, [x8, #16]!
     124:	mov	x0, x20
     128:	stur	x9, [x29, #-8]
     12c:	str	x8, [sp, #48]
     130:	ldr	w8, [x10, #8]!
     134:	ldr	w9, [x23, #24]
     138:	str	x10, [sp, #16]
     13c:	mov	x11, x10
     140:	ldrh	w10, [x11, #-6]!
     144:	ubfx	w8, w8, #2, #1
     148:	str	x11, [sp]
     14c:	add	w11, w21, w22
     150:	add	w8, w8, w11
     154:	sub	w9, w9, w10
     158:	add	w1, w8, w9
     15c:	str	w11, [sp, #12]
     160:	str	w9, [sp, #36]
     164:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     168:	mov	w19, wzr
     16c:	stp	x23, x28, [x29, #-40]
     170:	cbz	w22, 3b4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x338>
     174:	ldr	w8, [x23, #24]
     178:	cbz	w8, 3b4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x338>
     17c:	ldr	x10, [sp, #40]
     180:	ldr	x11, [sp, #24]
     184:	mov	w9, #0x18                  	// #24
     188:	mov	x24, xzr
     18c:	mov	x25, xzr
     190:	madd	x9, x11, x9, x10
     194:	mov	w19, wzr
     198:	mov	w26, #0x14                  	// #20
     19c:	add	x9, x9, #0xe
     1a0:	stur	x9, [x29, #-24]
     1a4:	ldr	x9, [x23, #16]
     1a8:	ldrb	w9, [x9, x24]
     1ac:	cmp	w9, #0x1
     1b0:	b.ne	398 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x31c>  // b.any
     1b4:	ldr	w8, [x20, #8]
     1b8:	cmp	w8, w19
     1bc:	b.ls	ae4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa68>  // b.plast
     1c0:	ldr	x27, [x20]
     1c4:	ldur	x8, [x29, #-8]
     1c8:	mov	w28, w19
     1cc:	umaddl	x23, w19, w26, x27
     1d0:	cmp	w19, w8
     1d4:	str	w25, [x23]
     1d8:	b.cs	214 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x198>  // b.hs, b.nlast
     1dc:	ldr	x8, [sp, #48]
     1e0:	ldrh	w8, [x8]
     1e4:	cmp	w19, w8
     1e8:	b.cs	b24 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xaa8>  // b.hs, b.nlast
     1ec:	ldp	x8, x9, [x29, #-32]
     1f0:	ldr	x8, [x8]
     1f4:	ldrh	w9, [x9]
     1f8:	ldr	x8, [x8, #136]
     1fc:	add	w9, w19, w9
     200:	lsl	x10, x9, #2
     204:	ldrsh	w10, [x8, x10]
     208:	tbnz	w10, #31, 228 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x1ac>
     20c:	and	w10, w10, #0xffff
     210:	b	22c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x1b0>
     214:	ldr	w9, [x20, #312]
     218:	mov	w8, wzr
     21c:	madd	x10, x28, x26, x27
     220:	str	w9, [x10, #4]
     224:	b	23c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x1c0>
     228:	ldr	w10, [x20, #312]
     22c:	madd	x11, x28, x26, x27
     230:	str	w10, [x11, #4]
     234:	add	x8, x8, x9, lsl #2
     238:	ldrh	w8, [x8, #2]
     23c:	madd	x9, x28, x26, x27
     240:	str	w8, [x9, #12]
     244:	strb	wzr, [x9, #16]
     248:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     24c:	ldr	x8, [x8]
     250:	ldrb	w8, [x8]
     254:	cbz	w8, 38c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x310>
     258:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     25c:	add	x0, x0, #0x0
     260:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     264:	tbz	w0, #0, 38c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x310>
     268:	bl	0 <_ZN4llvm4dbgsEv>
     26c:	ldp	x9, x8, [x0, #16]
     270:	sub	x9, x9, x8
     274:	cmp	x9, #0x10
     278:	b.hi	290 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x214>  // b.pmore
     27c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     280:	mov	w2, #0x11                  	// #17
     284:	add	x1, x1, #0x0
     288:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     28c:	b	2b4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x238>
     290:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     294:	add	x9, x9, #0x0
     298:	ldr	q0, [x9]
     29c:	mov	w9, #0x3d                  	// #61
     2a0:	strb	w9, [x8, #16]
     2a4:	str	q0, [x8]
     2a8:	ldr	x8, [x0, #24]
     2ac:	add	x8, x8, #0x11
     2b0:	str	x8, [x0, #24]
     2b4:	ldrsw	x1, [x23]
     2b8:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     2bc:	ldp	x9, x8, [x0, #16]
     2c0:	sub	x9, x9, x8
     2c4:	cmp	x9, #0x9
     2c8:	b.hi	2e0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x264>  // b.pmore
     2cc:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     2d0:	mov	w2, #0xa                   	// #10
     2d4:	add	x1, x1, #0x0
     2d8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2dc:	b	304 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x288>
     2e0:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     2e4:	add	x9, x9, #0x0
     2e8:	ldr	x9, [x9]
     2ec:	mov	w10, #0x3d79                	// #15737
     2f0:	strh	w10, [x8, #8]
     2f4:	str	x9, [x8]
     2f8:	ldr	x8, [x0, #24]
     2fc:	add	x8, x8, #0xa
     300:	str	x8, [x0, #24]
     304:	madd	x8, x28, x26, x27
     308:	ldr	w1, [x8, #4]
     30c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     310:	ldp	x9, x8, [x0, #16]
     314:	sub	x9, x9, x8
     318:	cmp	x9, #0x11
     31c:	b.hi	334 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x2b8>  // b.pmore
     320:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     324:	mov	w2, #0x12                  	// #18
     328:	add	x1, x1, #0x0
     32c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     330:	b	358 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x2dc>
     334:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     338:	add	x9, x9, #0x0
     33c:	ldr	q0, [x9]
     340:	mov	w9, #0x3d44                	// #15684
     344:	strh	w9, [x8, #16]
     348:	str	q0, [x8]
     34c:	ldr	x8, [x0, #24]
     350:	add	x8, x8, #0x12
     354:	str	x8, [x0, #24]
     358:	madd	x8, x28, x26, x27
     35c:	ldr	w1, [x8, #12]
     360:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     364:	ldp	x9, x8, [x0, #16]
     368:	cmp	x8, x9
     36c:	b.cs	384 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x308>  // b.hs, b.nlast
     370:	add	x9, x8, #0x1
     374:	str	x9, [x0, #24]
     378:	mov	w9, #0xa                   	// #10
     37c:	strb	w9, [x8]
     380:	b	38c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x310>
     384:	mov	w1, #0xa                   	// #10
     388:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     38c:	ldp	x23, x28, [x29, #-40]
     390:	add	w19, w19, #0x1
     394:	ldr	w8, [x23, #24]
     398:	cmp	w19, w22
     39c:	b.cs	3b4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x338>  // b.hs, b.nlast
     3a0:	add	x25, x25, #0x1
     3a4:	mov	w9, w8
     3a8:	cmp	x25, x9
     3ac:	add	x24, x24, #0x10
     3b0:	b.cc	1a4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x128>  // b.lo, b.ul, b.last
     3b4:	cmp	w19, w22
     3b8:	b.ne	be4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xb68>  // b.any
     3bc:	cbz	w21, 708 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x68c>
     3c0:	ldr	x10, [sp, #40]
     3c4:	ldr	x11, [sp, #24]
     3c8:	mov	w12, #0x18                  	// #24
     3cc:	add	x8, x22, w22, uxtw #2
     3d0:	mov	w9, #0x14                  	// #20
     3d4:	madd	x10, x11, x12, x10
     3d8:	lsl	x19, x8, #2
     3dc:	umull	x8, w21, w9
     3e0:	mov	x25, xzr
     3e4:	mov	x23, xzr
     3e8:	mov	w26, #0xffffffff            	// #-1
     3ec:	stur	x8, [x29, #-24]
     3f0:	add	x8, x10, #0xe
     3f4:	str	x8, [sp, #40]
     3f8:	b	424 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x3a8>
     3fc:	add	x9, x8, #0x1
     400:	str	x9, [x0, #24]
     404:	mov	w9, #0xa                   	// #10
     408:	strb	w9, [x8]
     40c:	ldur	x8, [x29, #-24]
     410:	add	x25, x25, #0x14
     414:	add	x23, x23, #0x1
     418:	sub	w26, w26, #0x1
     41c:	cmp	x8, x25
     420:	b.eq	708 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x68c>  // b.none
     424:	ldr	w8, [x20, #8]
     428:	add	x9, x22, x23
     42c:	cmp	x9, x8
     430:	b.cs	ae4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa68>  // b.hs, b.nlast
     434:	ldr	x24, [x20]
     438:	add	x27, x24, x19
     43c:	add	x21, x27, x25
     440:	str	w26, [x21]
     444:	ldp	x8, x10, [x29, #-16]
     448:	ldr	x8, [x8]
     44c:	cmp	x9, x10
     450:	ldrh	w8, [x8, x23, lsl #1]
     454:	strh	w8, [x21, #8]
     458:	b.cs	498 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x41c>  // b.hs, b.nlast
     45c:	ldr	x10, [sp, #48]
     460:	ldrh	w10, [x10]
     464:	cmp	x9, x10
     468:	b.cs	b24 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xaa8>  // b.hs, b.nlast
     46c:	ldr	x10, [sp, #40]
     470:	ldr	x9, [x28]
     474:	add	w11, w22, w23
     478:	ldrh	w10, [x10]
     47c:	ldr	x9, [x9, #136]
     480:	add	w10, w11, w10
     484:	lsl	x11, x10, #2
     488:	ldrsh	w11, [x9, x11]
     48c:	tbnz	w11, #31, 4a8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x42c>
     490:	and	w11, w11, #0xffff
     494:	b	4ac <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x430>
     498:	ldr	w10, [x20, #312]
     49c:	mov	w9, wzr
     4a0:	str	w10, [x21, #4]
     4a4:	b	4c0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x444>
     4a8:	ldr	w11, [x20, #312]
     4ac:	add	x12, x24, x19
     4b0:	add	x12, x12, x25
     4b4:	str	w11, [x12, #4]
     4b8:	add	x9, x9, x10, lsl #2
     4bc:	ldrh	w9, [x9, #2]
     4c0:	add	x10, x24, x19
     4c4:	add	x10, x10, x25
     4c8:	str	w9, [x10, #12]
     4cc:	strb	wzr, [x10, #16]
     4d0:	cbz	w8, b04 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa88>
     4d4:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     4d8:	ldr	x8, [x8]
     4dc:	ldrb	w8, [x8]
     4e0:	cbz	w8, 40c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x390>
     4e4:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     4e8:	add	x0, x0, #0x0
     4ec:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     4f0:	tbz	w0, #0, 40c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x390>
     4f4:	bl	0 <_ZN4llvm4dbgsEv>
     4f8:	ldp	x9, x8, [x0, #16]
     4fc:	sub	x9, x9, x8
     500:	cmp	x9, #0x10
     504:	b.hi	51c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x4a0>  // b.pmore
     508:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     50c:	mov	w2, #0x11                  	// #17
     510:	add	x1, x1, #0x0
     514:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     518:	b	540 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x4c4>
     51c:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     520:	add	x9, x9, #0x0
     524:	ldr	q0, [x9]
     528:	mov	w9, #0x3d                  	// #61
     52c:	strb	w9, [x8, #16]
     530:	str	q0, [x8]
     534:	ldr	x8, [x0, #24]
     538:	add	x8, x8, #0x11
     53c:	str	x8, [x0, #24]
     540:	ldr	w8, [x27, x25]
     544:	mvn	w8, w8
     548:	sxtw	x1, w8
     54c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     550:	ldp	x9, x8, [x0, #16]
     554:	mov	x27, x0
     558:	sub	x9, x9, x8
     55c:	cmp	x9, #0x9
     560:	b.hi	580 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x504>  // b.pmore
     564:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     568:	mov	w2, #0xa                   	// #10
     56c:	mov	x0, x27
     570:	add	x1, x1, #0x0
     574:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     578:	mov	x27, x0
     57c:	b	5a4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x528>
     580:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     584:	add	x9, x9, #0x0
     588:	ldr	x9, [x9]
     58c:	mov	w10, #0x3d67                	// #15719
     590:	strh	w10, [x8, #8]
     594:	str	x9, [x8]
     598:	ldr	x8, [x27, #24]
     59c:	add	x8, x8, #0xa
     5a0:	str	x8, [x27, #24]
     5a4:	ldr	x9, [x28, #16]
     5a8:	ldrh	w8, [x21, #8]
     5ac:	ldr	w10, [x9, #8]
     5b0:	cmp	w10, w8
     5b4:	b.ls	b64 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xae8>  // b.plast
     5b8:	ldr	x10, [x9]
     5bc:	mov	w11, #0x18                  	// #24
     5c0:	mul	x8, x8, x11
     5c4:	ldr	x9, [x9, #64]
     5c8:	ldr	w8, [x10, x8]
     5cc:	add	x28, x9, x8
     5d0:	cbz	x9, 5e4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x568>
     5d4:	mov	x0, x28
     5d8:	bl	0 <strlen>
     5dc:	mov	x21, x0
     5e0:	b	5e8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x56c>
     5e4:	mov	x21, xzr
     5e8:	ldp	x8, x0, [x27, #16]
     5ec:	sub	x8, x8, x0
     5f0:	cmp	x21, x8
     5f4:	b.ls	614 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x598>  // b.plast
     5f8:	mov	x0, x27
     5fc:	mov	x1, x28
     600:	mov	x2, x21
     604:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     608:	mov	x27, x0
     60c:	ldr	x0, [x0, #24]
     610:	b	630 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5b4>
     614:	cbz	x21, 630 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5b4>
     618:	mov	x1, x28
     61c:	mov	x2, x21
     620:	bl	0 <memcpy>
     624:	ldr	x8, [x27, #24]
     628:	add	x0, x8, x21
     62c:	str	x0, [x27, #24]
     630:	ldr	x8, [x27, #16]
     634:	ldur	x28, [x29, #-32]
     638:	sub	x8, x8, x0
     63c:	cmp	x8, #0x9
     640:	b.hi	660 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5e4>  // b.pmore
     644:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     648:	mov	w2, #0xa                   	// #10
     64c:	mov	x0, x27
     650:	add	x1, x1, #0x0
     654:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     658:	mov	x27, x0
     65c:	b	684 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x608>
     660:	adrp	x8, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     664:	add	x8, x8, #0x0
     668:	ldr	x8, [x8]
     66c:	mov	w9, #0x3d79                	// #15737
     670:	strh	w9, [x0, #8]
     674:	str	x8, [x0]
     678:	ldr	x8, [x27, #24]
     67c:	add	x8, x8, #0xa
     680:	str	x8, [x27, #24]
     684:	add	x8, x24, x19
     688:	add	x8, x8, x25
     68c:	ldr	w1, [x8, #4]
     690:	mov	x0, x27
     694:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     698:	ldp	x9, x8, [x0, #16]
     69c:	sub	x9, x9, x8
     6a0:	cmp	x9, #0x11
     6a4:	b.hi	6bc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x640>  // b.pmore
     6a8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     6ac:	mov	w2, #0x12                  	// #18
     6b0:	add	x1, x1, #0x0
     6b4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6b8:	b	6e0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x664>
     6bc:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     6c0:	add	x9, x9, #0x0
     6c4:	ldr	q0, [x9]
     6c8:	mov	w9, #0x3d44                	// #15684
     6cc:	strh	w9, [x8, #16]
     6d0:	str	q0, [x8]
     6d4:	ldr	x8, [x0, #24]
     6d8:	add	x8, x8, #0x12
     6dc:	str	x8, [x0, #24]
     6e0:	add	x8, x24, x19
     6e4:	add	x8, x8, x25
     6e8:	ldr	w1, [x8, #12]
     6ec:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     6f0:	ldp	x9, x8, [x0, #16]
     6f4:	cmp	x8, x9
     6f8:	b.cc	3fc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x380>  // b.lo, b.ul, b.last
     6fc:	mov	w1, #0xa                   	// #10
     700:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     704:	b	40c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x390>
     708:	ldr	x23, [sp, #16]
     70c:	ldur	x27, [x29, #-40]
     710:	ldr	w24, [sp, #12]
     714:	ldrb	w8, [x23]
     718:	tbz	w8, #2, 890 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x814>
     71c:	ldr	w8, [x20, #8]
     720:	cmp	w8, w24
     724:	b.ls	ae4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa68>  // b.plast
     728:	ldr	x8, [sp]
     72c:	ldr	x9, [x20]
     730:	mov	w10, #0x14                  	// #20
     734:	ldrh	w8, [x8]
     738:	umaddl	x22, w24, w10, x9
     73c:	mov	w9, #0x1                   	// #1
     740:	mov	x21, x22
     744:	sub	w8, w8, #0x1
     748:	str	w8, [x22]
     74c:	ldr	w8, [x20, #312]
     750:	mov	x19, x22
     754:	str	w8, [x21, #4]!
     758:	str	wzr, [x19, #12]!
     75c:	strb	w9, [x22, #16]
     760:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     764:	ldr	x8, [x8]
     768:	ldrb	w8, [x8]
     76c:	cbz	w8, 890 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x814>
     770:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     774:	add	x0, x0, #0x0
     778:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     77c:	tbz	w0, #0, 890 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x814>
     780:	bl	0 <_ZN4llvm4dbgsEv>
     784:	ldp	x9, x8, [x0, #16]
     788:	sub	x9, x9, x8
     78c:	cmp	x9, #0x10
     790:	b.hi	7a8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x72c>  // b.pmore
     794:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     798:	add	x1, x1, #0x0
     79c:	mov	w2, #0x11                  	// #17
     7a0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     7a4:	b	7cc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x750>
     7a8:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     7ac:	add	x9, x9, #0x0
     7b0:	ldr	q0, [x9]
     7b4:	mov	w9, #0x3d                  	// #61
     7b8:	strb	w9, [x8, #16]
     7bc:	str	q0, [x8]
     7c0:	ldr	x8, [x0, #24]
     7c4:	add	x8, x8, #0x11
     7c8:	str	x8, [x0, #24]
     7cc:	ldrsw	x1, [x22]
     7d0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     7d4:	ldp	x9, x8, [x0, #16]
     7d8:	sub	x9, x9, x8
     7dc:	cmp	x9, #0x9
     7e0:	b.hi	7f8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x77c>  // b.pmore
     7e4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     7e8:	add	x1, x1, #0x0
     7ec:	mov	w2, #0xa                   	// #10
     7f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     7f4:	b	81c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7a0>
     7f8:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     7fc:	add	x9, x9, #0x0
     800:	ldr	x9, [x9]
     804:	mov	w10, #0x3d79                	// #15737
     808:	strh	w10, [x8, #8]
     80c:	str	x9, [x8]
     810:	ldr	x8, [x0, #24]
     814:	add	x8, x8, #0xa
     818:	str	x8, [x0, #24]
     81c:	ldr	w1, [x21]
     820:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     824:	ldp	x9, x8, [x0, #16]
     828:	sub	x9, x9, x8
     82c:	cmp	x9, #0x11
     830:	b.hi	848 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7cc>  // b.pmore
     834:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     838:	add	x1, x1, #0x0
     83c:	mov	w2, #0x12                  	// #18
     840:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     844:	b	86c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7f0>
     848:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     84c:	add	x9, x9, #0x0
     850:	ldr	q0, [x9]
     854:	mov	w9, #0x3d44                	// #15684
     858:	strh	w9, [x8, #16]
     85c:	str	q0, [x8]
     860:	ldr	x8, [x0, #24]
     864:	add	x8, x8, #0x12
     868:	str	x8, [x0, #24]
     86c:	ldr	w1, [x19]
     870:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     874:	ldp	x9, x8, [x0, #16]
     878:	cmp	x8, x9
     87c:	b.cs	ab4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa38>  // b.hs, b.nlast
     880:	add	x9, x8, #0x1
     884:	mov	w10, #0xa                   	// #10
     888:	str	x9, [x0, #24]
     88c:	strb	w10, [x8]
     890:	ldr	w10, [sp, #36]
     894:	cbz	w10, ac4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa48>
     898:	ldr	x8, [x23]
     89c:	mov	w9, #0x8c0000              	// #9175040
     8a0:	and	x9, x8, x9
     8a4:	ubfx	w8, w8, #2, #1
     8a8:	cmp	x9, #0x80, lsl #12
     8ac:	add	w19, w8, w24
     8b0:	b.ne	8dc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x860>  // b.any
     8b4:	mov	w1, w19
     8b8:	mov	x0, x20
     8bc:	ldp	x20, x19, [sp, #176]
     8c0:	ldp	x22, x21, [sp, #160]
     8c4:	ldp	x24, x23, [sp, #144]
     8c8:	ldp	x26, x25, [sp, #128]
     8cc:	ldp	x28, x27, [sp, #112]
     8d0:	ldp	x29, x30, [sp, #96]
     8d4:	add	sp, sp, #0xc0
     8d8:	b	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     8dc:	ldr	x8, [sp]
     8e0:	adrp	x23, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     8e4:	mov	x21, xzr
     8e8:	mov	w25, #0x14                  	// #20
     8ec:	ldrh	w22, [x8]
     8f0:	add	x23, x23, #0x0
     8f4:	lsl	x26, x22, #4
     8f8:	b	910 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x894>
     8fc:	ldur	x27, [x29, #-40]
     900:	add	x21, x21, #0x1
     904:	cmp	w21, w10
     908:	add	x26, x26, #0x10
     90c:	b.cs	8b4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x838>  // b.hs, b.nlast
     910:	ldr	w8, [x27, #24]
     914:	add	x9, x22, x21
     918:	cmp	x9, x8
     91c:	b.cs	b44 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xac8>  // b.hs, b.nlast
     920:	ldr	x8, [x27, #16]
     924:	ldrb	w8, [x8, x26]
     928:	cmp	w8, #0x1
     92c:	b.ne	900 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x884>  // b.any
     930:	ldr	w8, [x20, #8]
     934:	cmp	w8, w19
     938:	b.ls	ae4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa68>  // b.plast
     93c:	ldr	x8, [x20]
     940:	add	w9, w22, w21
     944:	umaddl	x27, w19, w25, x8
     948:	str	w9, [x27]
     94c:	ldr	w8, [x20, #312]
     950:	mov	x24, x27
     954:	mov	x28, x27
     958:	add	w19, w19, #0x1
     95c:	str	w8, [x24, #4]!
     960:	str	wzr, [x28, #12]!
     964:	strb	wzr, [x27, #16]
     968:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     96c:	ldr	x8, [x8]
     970:	ldrb	w8, [x8]
     974:	cbz	w8, 8fc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x880>
     978:	mov	x0, x23
     97c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     980:	tbz	w0, #0, 9ac <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x930>
     984:	bl	0 <_ZN4llvm4dbgsEv>
     988:	ldp	x9, x8, [x0, #16]
     98c:	sub	x9, x9, x8
     990:	cmp	x9, #0x10
     994:	b.hi	9b4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x938>  // b.pmore
     998:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     99c:	mov	w2, #0x11                  	// #17
     9a0:	add	x1, x1, #0x0
     9a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     9a8:	b	9d8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x95c>
     9ac:	ldur	x27, [x29, #-40]
     9b0:	b	aac <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa30>
     9b4:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     9b8:	add	x9, x9, #0x0
     9bc:	ldr	q0, [x9]
     9c0:	mov	w9, #0x3d                  	// #61
     9c4:	strb	w9, [x8, #16]
     9c8:	str	q0, [x8]
     9cc:	ldr	x8, [x0, #24]
     9d0:	add	x8, x8, #0x11
     9d4:	str	x8, [x0, #24]
     9d8:	ldrsw	x1, [x27]
     9dc:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     9e0:	ldp	x9, x8, [x0, #16]
     9e4:	sub	x9, x9, x8
     9e8:	cmp	x9, #0x9
     9ec:	b.hi	a04 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x988>  // b.pmore
     9f0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     9f4:	mov	w2, #0xa                   	// #10
     9f8:	add	x1, x1, #0x0
     9fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a00:	b	a28 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x9ac>
     a04:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     a08:	add	x9, x9, #0x0
     a0c:	ldr	x9, [x9]
     a10:	mov	w10, #0x3d79                	// #15737
     a14:	strh	w10, [x8, #8]
     a18:	str	x9, [x8]
     a1c:	ldr	x8, [x0, #24]
     a20:	add	x8, x8, #0xa
     a24:	str	x8, [x0, #24]
     a28:	ldr	w1, [x24]
     a2c:	ldur	x27, [x29, #-40]
     a30:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     a34:	ldp	x9, x8, [x0, #16]
     a38:	sub	x9, x9, x8
     a3c:	cmp	x9, #0x11
     a40:	b.hi	a58 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x9dc>  // b.pmore
     a44:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     a48:	mov	w2, #0x12                  	// #18
     a4c:	add	x1, x1, #0x0
     a50:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a54:	b	a7c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa00>
     a58:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     a5c:	add	x9, x9, #0x0
     a60:	ldr	q0, [x9]
     a64:	mov	w9, #0x3d44                	// #15684
     a68:	strh	w9, [x8, #16]
     a6c:	str	q0, [x8]
     a70:	ldr	x8, [x0, #24]
     a74:	add	x8, x8, #0x12
     a78:	str	x8, [x0, #24]
     a7c:	ldr	w1, [x28]
     a80:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     a84:	ldp	x9, x8, [x0, #16]
     a88:	cmp	x8, x9
     a8c:	b.cs	aa4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa28>  // b.hs, b.nlast
     a90:	add	x9, x8, #0x1
     a94:	str	x9, [x0, #24]
     a98:	mov	w9, #0xa                   	// #10
     a9c:	strb	w9, [x8]
     aa0:	b	aac <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa30>
     aa4:	mov	w1, #0xa                   	// #10
     aa8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     aac:	ldr	w10, [sp, #36]
     ab0:	b	900 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x884>
     ab4:	mov	w1, #0xa                   	// #10
     ab8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     abc:	ldr	w10, [sp, #36]
     ac0:	cbnz	w10, 898 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x81c>
     ac4:	ldp	x20, x19, [sp, #176]
     ac8:	ldp	x22, x21, [sp, #160]
     acc:	ldp	x24, x23, [sp, #144]
     ad0:	ldp	x26, x25, [sp, #128]
     ad4:	ldp	x28, x27, [sp, #112]
     ad8:	ldp	x29, x30, [sp, #96]
     adc:	add	sp, sp, #0xc0
     ae0:	ret
     ae4:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ae8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     aec:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     af0:	add	x0, x0, #0x0
     af4:	add	x1, x1, #0x0
     af8:	add	x3, x3, #0x0
     afc:	mov	w2, #0x95                  	// #149
     b00:	bl	0 <__assert_fail>
     b04:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b08:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b0c:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b10:	add	x0, x0, #0x0
     b14:	add	x1, x1, #0x0
     b18:	add	x3, x3, #0x0
     b1c:	mov	w2, #0x166                 	// #358
     b20:	bl	0 <__assert_fail>
     b24:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b28:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b2c:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b30:	add	x0, x0, #0x0
     b34:	add	x1, x1, #0x0
     b38:	add	x3, x3, #0x0
     b3c:	mov	w2, #0xac                  	// #172
     b40:	bl	0 <__assert_fail>
     b44:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b48:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b4c:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b50:	add	x0, x0, #0x0
     b54:	add	x1, x1, #0x0
     b58:	add	x3, x3, #0x0
     b5c:	mov	w2, #0x99                  	// #153
     b60:	bl	0 <__assert_fail>
     b64:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b68:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b6c:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b70:	add	x0, x0, #0x0
     b74:	add	x1, x1, #0x0
     b78:	add	x3, x3, #0x0
     b7c:	mov	w2, #0x1b9                 	// #441
     b80:	bl	0 <__assert_fail>
     b84:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b88:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b8c:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     b90:	add	x0, x0, #0x0
     b94:	add	x1, x1, #0x0
     b98:	add	x3, x3, #0x0
     b9c:	mov	w2, #0x2d                  	// #45
     ba0:	bl	0 <__assert_fail>
     ba4:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ba8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bac:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bb0:	add	x0, x0, #0x0
     bb4:	add	x1, x1, #0x0
     bb8:	add	x3, x3, #0x0
     bbc:	mov	w2, #0x15b                 	// #347
     bc0:	bl	0 <__assert_fail>
     bc4:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bc8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bcc:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bd0:	add	x0, x0, #0x0
     bd4:	add	x1, x1, #0x0
     bd8:	add	x3, x3, #0x0
     bdc:	mov	w2, #0x15d                 	// #349
     be0:	bl	0 <__assert_fail>
     be4:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     be8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bec:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     bf0:	add	x0, x0, #0x0
     bf4:	add	x1, x1, #0x0
     bf8:	add	x3, x3, #0x0
     bfc:	mov	w2, #0x152                 	// #338
     c00:	bl	0 <__assert_fail>

0000000000000c04 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj>:
     c04:	sub	sp, sp, #0xd0
     c08:	stp	x29, x30, [sp, #112]
     c0c:	stp	x28, x27, [sp, #128]
     c10:	stp	x26, x25, [sp, #144]
     c14:	stp	x24, x23, [sp, #160]
     c18:	stp	x22, x21, [sp, #176]
     c1c:	stp	x20, x19, [sp, #192]
     c20:	add	x29, sp, #0x70
     c24:	ldr	x9, [x0, #8]
     c28:	ldr	w8, [x2]
     c2c:	stur	w3, [x29, #-20]
     c30:	str	x0, [sp, #56]
     c34:	ldr	w10, [x9, #24]
     c38:	stur	x1, [x29, #-8]
     c3c:	cmp	w10, w8
     c40:	b.ls	12fc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6f8>  // b.plast
     c44:	ldr	x9, [x9]
     c48:	mov	x20, x2
     c4c:	add	x11, x9, x8, lsl #6
     c50:	mov	x8, x11
     c54:	ldrh	w23, [x8, #2]!
     c58:	mov	x19, x8
     c5c:	str	x8, [sp, #16]
     c60:	mov	x12, x8
     c64:	ldrb	w26, [x19, #2]!
     c68:	ldr	x9, [x12, #22]!
     c6c:	sub	w8, w23, w26
     c70:	cbz	x9, c88 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x84>
     c74:	mov	w24, #0xffffffff            	// #-1
     c78:	add	w24, w24, #0x1
     c7c:	ldrh	w10, [x9, w24, uxtw #1]
     c80:	cbnz	w10, c78 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x74>
     c84:	b	c8c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x88>
     c88:	mov	w24, wzr
     c8c:	stur	x12, [x29, #-48]
     c90:	ldr	x9, [x11, #8]!
     c94:	ldr	w10, [x20, #24]
     c98:	sbfx	x28, x9, #2, #1
     c9c:	add	w21, w8, w28
     ca0:	sub	w9, w10, w23
     ca4:	add	w8, w21, w24
     ca8:	str	x11, [sp, #40]
     cac:	stur	w9, [x29, #-36]
     cb0:	str	w8, [sp, #12]
     cb4:	add	w1, w8, w9
     cb8:	ldur	x8, [x29, #-8]
     cbc:	add	x0, x8, #0x60
     cc0:	stur	x0, [x29, #-16]
     cc4:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     cc8:	str	w26, [sp, #48]
     ccc:	str	w23, [sp, #36]
     cd0:	str	x28, [sp, #24]
     cd4:	cbz	w21, e50 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x24c>
     cd8:	ldrb	w25, [x19]
     cdc:	add	w8, w23, w28
     ce0:	adrp	x23, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ce4:	mov	x22, xzr
     ce8:	mov	w27, wzr
     cec:	add	x23, x23, #0x0
     cf0:	sub	w26, w8, w26
     cf4:	lsl	x28, x25, #4
     cf8:	b	d1c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x118>
     cfc:	add	x9, x8, #0x1
     d00:	str	x9, [x0, #24]
     d04:	mov	w9, #0xa                   	// #10
     d08:	strb	w9, [x8]
     d0c:	add	x22, x22, #0x1
     d10:	cmp	w26, w22
     d14:	add	x28, x28, #0x10
     d18:	b.eq	e54 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x250>  // b.none
     d1c:	ldr	w8, [x20, #24]
     d20:	add	x9, x25, x22
     d24:	cmp	x9, x8
     d28:	b.cs	12bc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6b8>  // b.hs, b.nlast
     d2c:	ldr	x8, [x20, #16]
     d30:	ldrb	w8, [x8, x28]
     d34:	cmp	w8, #0x1
     d38:	b.ne	d0c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x108>  // b.any
     d3c:	ldur	x8, [x29, #-8]
     d40:	ldr	w8, [x8, #104]
     d44:	cmp	w8, w27
     d48:	b.ls	129c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x698>  // b.plast
     d4c:	ldur	x8, [x29, #-16]
     d50:	add	w9, w25, w22
     d54:	ldr	x8, [x8]
     d58:	add	x21, x8, w27, uxtw #4
     d5c:	ldur	w8, [x29, #-20]
     d60:	mov	x19, x21
     d64:	str	w9, [x21]
     d68:	str	w22, [x19, #4]!
     d6c:	str	w8, [x21, #12]
     d70:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     d74:	ldr	x8, [x8]
     d78:	add	w27, w27, #0x1
     d7c:	ldrb	w8, [x8]
     d80:	cbz	w8, d0c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x108>
     d84:	mov	x0, x23
     d88:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     d8c:	tbz	w0, #0, d0c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x108>
     d90:	bl	0 <_ZN4llvm4dbgsEv>
     d94:	ldp	x9, x8, [x0, #16]
     d98:	sub	x9, x9, x8
     d9c:	cmp	x9, #0x10
     da0:	b.hi	db8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x1b4>  // b.pmore
     da4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     da8:	mov	w2, #0x11                  	// #17
     dac:	add	x1, x1, #0x0
     db0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     db4:	b	ddc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x1d8>
     db8:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     dbc:	add	x9, x9, #0x0
     dc0:	ldr	q0, [x9]
     dc4:	mov	w9, #0x3d                  	// #61
     dc8:	strb	w9, [x8, #16]
     dcc:	str	q0, [x8]
     dd0:	ldr	x8, [x0, #24]
     dd4:	add	x8, x8, #0x11
     dd8:	str	x8, [x0, #24]
     ddc:	ldrsw	x1, [x21]
     de0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     de4:	ldp	x9, x8, [x0, #16]
     de8:	sub	x9, x9, x8
     dec:	cmp	x9, #0xa
     df0:	b.hi	e08 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x204>  // b.pmore
     df4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     df8:	mov	w2, #0xb                   	// #11
     dfc:	add	x1, x1, #0x0
     e00:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     e04:	b	e30 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x22c>
     e08:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     e0c:	add	x9, x9, #0x0
     e10:	ldr	x9, [x9]
     e14:	mov	w10, #0x6564                	// #25956
     e18:	movk	w10, #0x3d78, lsl #16
     e1c:	stur	w10, [x8, #7]
     e20:	str	x9, [x8]
     e24:	ldr	x8, [x0, #24]
     e28:	add	x8, x8, #0xb
     e2c:	str	x8, [x0, #24]
     e30:	ldr	w1, [x19]
     e34:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     e38:	ldp	x9, x8, [x0, #16]
     e3c:	cmp	x8, x9
     e40:	b.cc	cfc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xf8>  // b.lo, b.ul, b.last
     e44:	mov	w1, #0xa                   	// #10
     e48:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     e4c:	b	d0c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x108>
     e50:	mov	w27, wzr
     e54:	ldur	x26, [x29, #-48]
     e58:	cbz	w24, 10cc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x4c8>
     e5c:	mov	w8, w24
     e60:	stur	x8, [x29, #-32]
     e64:	ldr	w8, [sp, #36]
     e68:	ldr	x9, [sp, #24]
     e6c:	mov	w28, w27
     e70:	mov	x25, xzr
     e74:	mov	w22, #0xffffffff            	// #-1
     e78:	add	w8, w8, w9
     e7c:	ldr	w9, [sp, #48]
     e80:	lsl	x21, x28, #4
     e84:	str	x28, [sp, #48]
     e88:	sub	w19, w8, w9
     e8c:	b	ebc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x2b8>
     e90:	add	x8, x0, #0x1
     e94:	str	x8, [x28, #24]
     e98:	mov	w8, #0xa                   	// #10
     e9c:	strb	w8, [x0]
     ea0:	ldr	x28, [sp, #48]
     ea4:	ldur	x8, [x29, #-32]
     ea8:	add	x25, x25, #0x1
     eac:	add	x21, x21, #0x10
     eb0:	sub	w22, w22, #0x1
     eb4:	cmp	x8, x25
     eb8:	b.eq	10cc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x4c8>  // b.none
     ebc:	ldur	x8, [x29, #-8]
     ec0:	add	x9, x28, x25
     ec4:	ldr	w8, [x8, #104]
     ec8:	cmp	x9, x8
     ecc:	b.cs	129c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x698>  // b.hs, b.nlast
     ed0:	ldur	x8, [x29, #-16]
     ed4:	add	w9, w19, w25
     ed8:	ldr	x8, [x8]
     edc:	add	x23, x8, x21
     ee0:	stp	w22, w9, [x23]
     ee4:	ldr	x8, [x26]
     ee8:	ldrh	w8, [x8, x25, lsl #1]
     eec:	strh	w8, [x23, #8]
     ef0:	ldur	w8, [x29, #-20]
     ef4:	str	w8, [x23, #12]
     ef8:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     efc:	ldr	x8, [x8]
     f00:	ldrb	w8, [x8]
     f04:	cbz	w8, ea4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x2a0>
     f08:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     f0c:	add	x0, x0, #0x0
     f10:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     f14:	tbz	w0, #0, ea4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x2a0>
     f18:	bl	0 <_ZN4llvm4dbgsEv>
     f1c:	ldp	x9, x8, [x0, #16]
     f20:	sub	x9, x9, x8
     f24:	cmp	x9, #0x10
     f28:	b.hi	f40 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x33c>  // b.pmore
     f2c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     f30:	mov	w2, #0x11                  	// #17
     f34:	add	x1, x1, #0x0
     f38:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f3c:	b	f64 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x360>
     f40:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     f44:	add	x9, x9, #0x0
     f48:	ldr	q0, [x9]
     f4c:	mov	w9, #0x3d                  	// #61
     f50:	strb	w9, [x8, #16]
     f54:	str	q0, [x8]
     f58:	ldr	x8, [x0, #24]
     f5c:	add	x8, x8, #0x11
     f60:	str	x8, [x0, #24]
     f64:	ldr	w8, [x23]
     f68:	mvn	w8, w8
     f6c:	sxtw	x1, w8
     f70:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     f74:	ldp	x9, x8, [x0, #16]
     f78:	sub	x9, x9, x8
     f7c:	cmp	x9, #0xa
     f80:	b.hi	f98 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x394>  // b.pmore
     f84:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     f88:	mov	w2, #0xb                   	// #11
     f8c:	add	x1, x1, #0x0
     f90:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f94:	b	fc0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x3bc>
     f98:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     f9c:	add	x9, x9, #0x0
     fa0:	ldr	x9, [x9]
     fa4:	mov	w10, #0x6564                	// #25956
     fa8:	movk	w10, #0x3d78, lsl #16
     fac:	stur	w10, [x8, #7]
     fb0:	str	x9, [x8]
     fb4:	ldr	x8, [x0, #24]
     fb8:	add	x8, x8, #0xb
     fbc:	str	x8, [x0, #24]
     fc0:	ldr	w1, [x23, #4]
     fc4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     fc8:	ldp	x9, x8, [x0, #16]
     fcc:	mov	x28, x0
     fd0:	sub	x9, x9, x8
     fd4:	cmp	x9, #0xc
     fd8:	b.hi	ff8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x3f4>  // b.pmore
     fdc:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     fe0:	mov	w2, #0xd                   	// #13
     fe4:	mov	x0, x28
     fe8:	add	x1, x1, #0x0
     fec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ff0:	mov	x28, x0
     ff4:	b	101c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x418>
     ff8:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
     ffc:	add	x10, x10, #0x0
    1000:	ldur	x9, [x10, #5]
    1004:	ldr	x10, [x10]
    1008:	stur	x9, [x8, #5]
    100c:	str	x10, [x8]
    1010:	ldr	x8, [x28, #24]
    1014:	add	x8, x8, #0xd
    1018:	str	x8, [x28, #24]
    101c:	ldr	x8, [sp, #56]
    1020:	ldrh	w9, [x23, #8]
    1024:	ldr	x8, [x8, #16]
    1028:	ldr	w10, [x8, #8]
    102c:	cmp	w10, w9
    1030:	b.ls	12dc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6d8>  // b.plast
    1034:	ldr	x10, [x8]
    1038:	mov	w11, #0x18                  	// #24
    103c:	mul	x9, x9, x11
    1040:	ldr	x8, [x8, #64]
    1044:	ldr	w9, [x10, x9]
    1048:	add	x23, x8, x9
    104c:	cbz	x8, 1060 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x45c>
    1050:	mov	x0, x23
    1054:	bl	0 <strlen>
    1058:	mov	x26, x0
    105c:	b	1064 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x460>
    1060:	mov	x26, xzr
    1064:	ldp	x8, x0, [x28, #16]
    1068:	sub	x8, x8, x0
    106c:	cmp	x26, x8
    1070:	b.ls	1090 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x48c>  // b.plast
    1074:	mov	x0, x28
    1078:	mov	x1, x23
    107c:	mov	x2, x26
    1080:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1084:	mov	x28, x0
    1088:	ldr	x0, [x0, #24]
    108c:	b	10ac <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x4a8>
    1090:	cbz	x26, 10ac <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x4a8>
    1094:	mov	x1, x23
    1098:	mov	x2, x26
    109c:	bl	0 <memcpy>
    10a0:	ldr	x8, [x28, #24]
    10a4:	add	x0, x8, x26
    10a8:	str	x0, [x28, #24]
    10ac:	ldr	x8, [x28, #16]
    10b0:	ldur	x26, [x29, #-48]
    10b4:	cmp	x0, x8
    10b8:	b.cc	e90 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x28c>  // b.lo, b.ul, b.last
    10bc:	mov	w1, #0xa                   	// #10
    10c0:	mov	x0, x28
    10c4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    10c8:	b	ea0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x29c>
    10cc:	ldr	x8, [sp, #40]
    10d0:	mov	w9, #0x8c0000              	// #9175040
    10d4:	add	w19, w27, w24
    10d8:	ldr	x8, [x8]
    10dc:	and	x8, x8, x9
    10e0:	cmp	x8, #0x40, lsl #12
    10e4:	b.eq	1274 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x670>  // b.none
    10e8:	ldur	w27, [x29, #-36]
    10ec:	cbz	w27, 1274 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x670>
    10f0:	ldr	x8, [sp, #16]
    10f4:	adrp	x23, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    10f8:	adrp	x25, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    10fc:	mov	x21, xzr
    1100:	ldrh	w22, [x8]
    1104:	ldr	w8, [sp, #12]
    1108:	add	x23, x23, #0x0
    110c:	add	x25, x25, #0x0
    1110:	lsl	x28, x22, #4
    1114:	mov	w24, w8
    1118:	b	1130 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x52c>
    111c:	ldur	w27, [x29, #-36]
    1120:	add	x21, x21, #0x1
    1124:	cmp	w21, w27
    1128:	add	x28, x28, #0x10
    112c:	b.cs	1274 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x670>  // b.hs, b.nlast
    1130:	ldr	w8, [x20, #24]
    1134:	add	x9, x22, x21
    1138:	cmp	x9, x8
    113c:	b.cs	12bc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6b8>  // b.hs, b.nlast
    1140:	ldr	x8, [x20, #16]
    1144:	ldrb	w8, [x8, x28]
    1148:	cmp	w8, #0x1
    114c:	b.ne	1120 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x51c>  // b.any
    1150:	ldur	x8, [x29, #-8]
    1154:	ldr	w8, [x8, #104]
    1158:	cmp	w8, w19
    115c:	b.ls	129c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x698>  // b.plast
    1160:	ldur	x8, [x29, #-16]
    1164:	add	w9, w22, w21
    1168:	add	w10, w24, w21
    116c:	ldr	x8, [x8]
    1170:	add	x27, x8, w19, uxtw #4
    1174:	ldur	w8, [x29, #-20]
    1178:	mov	x26, x27
    117c:	str	w9, [x27]
    1180:	str	w10, [x26, #4]!
    1184:	str	w8, [x27, #12]
    1188:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    118c:	ldr	x8, [x8]
    1190:	add	w19, w19, #0x1
    1194:	ldrb	w8, [x8]
    1198:	cbz	w8, 111c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x518>
    119c:	mov	x0, x23
    11a0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    11a4:	tbz	w0, #0, 111c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x518>
    11a8:	bl	0 <_ZN4llvm4dbgsEv>
    11ac:	ldp	x9, x8, [x0, #16]
    11b0:	sub	x9, x9, x8
    11b4:	cmp	x9, #0x10
    11b8:	b.hi	11cc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5c8>  // b.pmore
    11bc:	mov	w2, #0x11                  	// #17
    11c0:	mov	x1, x25
    11c4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    11c8:	b	11e8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5e4>
    11cc:	ldr	q0, [x25]
    11d0:	mov	w9, #0x3d                  	// #61
    11d4:	strb	w9, [x8, #16]
    11d8:	str	q0, [x8]
    11dc:	ldr	x8, [x0, #24]
    11e0:	add	x8, x8, #0x11
    11e4:	str	x8, [x0, #24]
    11e8:	ldrsw	x1, [x27]
    11ec:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    11f0:	ldp	x9, x8, [x0, #16]
    11f4:	sub	x9, x9, x8
    11f8:	cmp	x9, #0xa
    11fc:	b.hi	1214 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x610>  // b.pmore
    1200:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1204:	mov	w2, #0xb                   	// #11
    1208:	add	x1, x1, #0x0
    120c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1210:	b	123c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x638>
    1214:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1218:	add	x9, x9, #0x0
    121c:	ldr	x9, [x9]
    1220:	mov	w10, #0x6564                	// #25956
    1224:	movk	w10, #0x3d78, lsl #16
    1228:	stur	w10, [x8, #7]
    122c:	str	x9, [x8]
    1230:	ldr	x8, [x0, #24]
    1234:	add	x8, x8, #0xb
    1238:	str	x8, [x0, #24]
    123c:	ldr	w1, [x26]
    1240:	ldur	w27, [x29, #-36]
    1244:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1248:	ldp	x9, x8, [x0, #16]
    124c:	cmp	x8, x9
    1250:	b.cs	1268 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x664>  // b.hs, b.nlast
    1254:	add	x9, x8, #0x1
    1258:	str	x9, [x0, #24]
    125c:	mov	w9, #0xa                   	// #10
    1260:	strb	w9, [x8]
    1264:	b	1120 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x51c>
    1268:	mov	w1, #0xa                   	// #10
    126c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1270:	b	1120 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x51c>
    1274:	mov	w1, w19
    1278:	ldur	x0, [x29, #-16]
    127c:	ldp	x20, x19, [sp, #192]
    1280:	ldp	x22, x21, [sp, #176]
    1284:	ldp	x24, x23, [sp, #160]
    1288:	ldp	x26, x25, [sp, #144]
    128c:	ldp	x28, x27, [sp, #128]
    1290:	ldp	x29, x30, [sp, #112]
    1294:	add	sp, sp, #0xd0
    1298:	b	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    129c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    12a0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    12a4:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    12a8:	add	x0, x0, #0x0
    12ac:	add	x1, x1, #0x0
    12b0:	add	x3, x3, #0x0
    12b4:	mov	w2, #0x95                  	// #149
    12b8:	bl	0 <__assert_fail>
    12bc:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    12c0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    12c4:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    12c8:	add	x0, x0, #0x0
    12cc:	add	x1, x1, #0x0
    12d0:	add	x3, x3, #0x0
    12d4:	mov	w2, #0x99                  	// #153
    12d8:	bl	0 <__assert_fail>
    12dc:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    12e0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    12e4:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    12e8:	add	x0, x0, #0x0
    12ec:	add	x1, x1, #0x0
    12f0:	add	x3, x3, #0x0
    12f4:	mov	w2, #0x1b9                 	// #441
    12f8:	bl	0 <__assert_fail>
    12fc:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1300:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1304:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1308:	add	x0, x0, #0x0
    130c:	add	x1, x1, #0x0
    1310:	add	x3, x3, #0x0
    1314:	mov	w2, #0x2d                  	// #45
    1318:	bl	0 <__assert_fail>

000000000000131c <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE>:
    131c:	sub	sp, sp, #0x70
    1320:	stp	x29, x30, [sp, #48]
    1324:	stp	x24, x23, [sp, #64]
    1328:	stp	x22, x21, [sp, #80]
    132c:	stp	x20, x19, [sp, #96]
    1330:	add	x29, sp, #0x30
    1334:	ldr	w9, [x1, #316]
    1338:	mov	x19, x8
    133c:	cbnz	w9, 1368 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x4c>
    1340:	ldrb	w8, [x1, #324]
    1344:	ldrb	w9, [x1, #325]
    1348:	mov	x20, x2
    134c:	orr	w8, w9, w8
    1350:	tst	w8, #0xff
    1354:	b.ne	1388 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x6c>  // b.any
    1358:	ldr	x9, [x1, #288]
    135c:	cbnz	x9, 1388 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x6c>
    1360:	ldr	w9, [x1, #184]
    1364:	cbnz	w9, 1388 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x6c>
    1368:	mov	w8, #0x1                   	// #1
    136c:	str	x8, [x19]
    1370:	ldp	x20, x19, [sp, #96]
    1374:	ldp	x22, x21, [sp, #80]
    1378:	ldp	x24, x23, [sp, #64]
    137c:	ldp	x29, x30, [sp, #48]
    1380:	add	sp, sp, #0x70
    1384:	ret
    1388:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    138c:	adrp	x11, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1390:	tst	w8, #0xff
    1394:	mov	w8, #0x65                  	// #101
    1398:	mov	w9, #0x6d                  	// #109
    139c:	add	x10, x10, #0x0
    13a0:	add	x11, x11, #0x0
    13a4:	mov	w0, #0x30                  	// #48
    13a8:	csel	x22, x9, x8, ne  // ne = any
    13ac:	csel	x23, x11, x10, ne  // ne = any
    13b0:	bl	0 <_Znwm>
    13b4:	add	x8, sp, #0x8
    13b8:	mov	x21, x0
    13bc:	add	x24, x8, #0x10
    13c0:	add	x0, sp, #0x8
    13c4:	sub	x1, x29, #0x8
    13c8:	mov	x2, xzr
    13cc:	str	x24, [sp, #8]
    13d0:	stur	x22, [x29, #-8]
    13d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    13d8:	ldur	x8, [x29, #-8]
    13dc:	mov	x1, x23
    13e0:	mov	x2, x22
    13e4:	str	x0, [sp, #8]
    13e8:	str	x8, [sp, #24]
    13ec:	bl	0 <memcpy>
    13f0:	ldur	x8, [x29, #-8]
    13f4:	ldr	x9, [sp, #8]
    13f8:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    13fc:	str	x8, [sp, #16]
    1400:	strb	wzr, [x9, x8]
    1404:	ldr	x8, [sp, #8]
    1408:	ldr	x10, [x10]
    140c:	add	x9, x21, #0x18
    1410:	cmp	x8, x24
    1414:	add	x10, x10, #0x10
    1418:	stp	x10, x9, [x21]
    141c:	b.eq	1430 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x114>  // b.none
    1420:	ldr	x9, [sp, #24]
    1424:	str	x8, [x21, #8]
    1428:	str	x9, [x21, #24]
    142c:	b	1438 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x11c>
    1430:	ldr	q0, [x24]
    1434:	str	q0, [x9]
    1438:	ldr	x8, [sp, #16]
    143c:	orr	x9, x21, #0x1
    1440:	str	x20, [x21, #40]
    1444:	str	x9, [x19]
    1448:	str	x8, [x21, #16]
    144c:	b	1370 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x54>

0000000000001450 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE>:
    1450:	sub	sp, sp, #0x190
    1454:	stp	x29, x30, [sp, #304]
    1458:	stp	x28, x27, [sp, #320]
    145c:	stp	x26, x25, [sp, #336]
    1460:	stp	x24, x23, [sp, #352]
    1464:	stp	x22, x21, [sp, #368]
    1468:	stp	x20, x19, [sp, #384]
    146c:	add	x29, sp, #0x130
    1470:	ldr	x9, [x0]
    1474:	str	x8, [sp, #88]
    1478:	ldr	x20, [x9, #152]
    147c:	ldr	x25, [x20, #40]
    1480:	cbz	x25, 3738 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x22e8>
    1484:	ldr	x8, [x0, #8]
    1488:	ldrh	w10, [x1]
    148c:	mov	x23, x1
    1490:	ldr	w9, [x8, #24]
    1494:	cmp	w9, w10
    1498:	b.ls	3758 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2308>  // b.plast
    149c:	ldr	x8, [x8]
    14a0:	stp	x8, x10, [sp, #72]
    14a4:	add	x8, x8, x10, lsl #6
    14a8:	ldrh	w1, [x8, #6]
    14ac:	ldr	w8, [x20, #52]
    14b0:	cmp	w8, w1
    14b4:	b.ls	368c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x223c>  // b.plast
    14b8:	mov	w9, #0x18                  	// #24
    14bc:	madd	x9, x1, x9, x25
    14c0:	ldrh	w9, [x9, #8]
    14c4:	str	x0, [sp, #144]
    14c8:	and	w24, w9, #0x3fff
    14cc:	mov	w9, #0x3ffe                	// #16382
    14d0:	cmp	w24, w9
    14d4:	b.ne	1554 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x104>  // b.any
    14d8:	cbz	w1, 15d0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x180>
    14dc:	ldr	w19, [x20, #28]
    14e0:	mov	w21, #0x18                  	// #24
    14e4:	mov	w22, #0x3ffe                	// #16382
    14e8:	ldr	w8, [x20, #52]
    14ec:	ldr	x10, [sp, #144]
    14f0:	cmp	w8, w1
    14f4:	b.ls	368c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x223c>  // b.plast
    14f8:	umaddl	x9, w1, w21, x25
    14fc:	ldrh	w9, [x9, #8]
    1500:	and	w9, w9, #0x3fff
    1504:	cmp	w9, w22
    1508:	b.ne	1554 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x104>  // b.any
    150c:	ldr	x0, [x10]
    1510:	mov	x2, x23
    1514:	mov	w3, w19
    1518:	ldr	x8, [x0]
    151c:	ldr	x8, [x8, #16]
    1520:	blr	x8
    1524:	cbz	w0, 15d0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x180>
    1528:	ldr	x25, [x20, #40]
    152c:	mov	w1, w0
    1530:	cbnz	x25, 14e8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x98>
    1534:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1538:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    153c:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1540:	add	x0, x0, #0x0
    1544:	add	x1, x1, #0x0
    1548:	add	x3, x3, #0x0
    154c:	mov	w2, #0x15b                 	// #347
    1550:	bl	0 <__assert_fail>
    1554:	cmp	w8, w1
    1558:	b.ls	368c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x223c>  // b.plast
    155c:	mov	w8, #0x18                  	// #24
    1560:	umaddl	x21, w1, w8, x25
    1564:	str	x21, [sp, #120]
    1568:	ldrh	w8, [x21, #8]!
    156c:	mvn	w8, w8
    1570:	tst	w8, #0x3fff
    1574:	b.ne	1664 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x214>  // b.any
    1578:	mov	w0, #0x30                  	// #48
    157c:	bl	0 <_Znwm>
    1580:	sub	x8, x29, #0x28
    1584:	mov	x19, x0
    1588:	mov	w9, #0x40                  	// #64
    158c:	add	x20, x8, #0x10
    1590:	sub	x0, x29, #0x28
    1594:	sub	x1, x29, #0x50
    1598:	mov	x2, xzr
    159c:	stur	x20, [x29, #-40]
    15a0:	stur	x9, [x29, #-80]
    15a4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    15a8:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    15ac:	add	x9, x9, #0x0
    15b0:	ldur	x8, [x29, #-80]
    15b4:	ldp	q1, q0, [x9]
    15b8:	ldp	q3, q2, [x9, #32]
    15bc:	stur	x0, [x29, #-40]
    15c0:	stur	x8, [x29, #-24]
    15c4:	stp	q1, q0, [x0]
    15c8:	stp	q3, q2, [x0, #32]
    15cc:	b	162c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1dc>
    15d0:	mov	w0, #0x30                  	// #48
    15d4:	bl	0 <_Znwm>
    15d8:	sub	x8, x29, #0x28
    15dc:	mov	x19, x0
    15e0:	mov	w9, #0x35                  	// #53
    15e4:	add	x20, x8, #0x10
    15e8:	sub	x0, x29, #0x28
    15ec:	sub	x1, x29, #0x50
    15f0:	mov	x2, xzr
    15f4:	stur	x20, [x29, #-40]
    15f8:	stur	x9, [x29, #-80]
    15fc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1600:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1604:	add	x9, x9, #0x0
    1608:	ldur	x8, [x29, #-80]
    160c:	ldur	x10, [x9, #45]
    1610:	ldp	q1, q0, [x9]
    1614:	ldr	q2, [x9, #32]
    1618:	stur	x0, [x29, #-40]
    161c:	stur	x8, [x29, #-24]
    1620:	stp	q1, q0, [x0]
    1624:	str	q2, [x0, #32]
    1628:	stur	x10, [x0, #45]
    162c:	stur	x8, [x29, #-32]
    1630:	strb	wzr, [x0, x8]
    1634:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1638:	ldur	x8, [x29, #-40]
    163c:	ldr	x10, [x10]
    1640:	add	x9, x19, #0x18
    1644:	cmp	x8, x20
    1648:	add	x10, x10, #0x10
    164c:	stp	x10, x9, [x19]
    1650:	b.eq	16c4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x274>  // b.none
    1654:	ldur	x9, [x29, #-24]
    1658:	str	x8, [x19, #8]
    165c:	str	x9, [x19, #24]
    1660:	b	16cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x27c>
    1664:	str	w24, [sp, #4]
    1668:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    166c:	ldr	x8, [x8]
    1670:	mov	w24, w1
    1674:	str	x1, [sp, #48]
    1678:	ldrb	w8, [x8]
    167c:	cbz	w8, 1860 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x410>
    1680:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1684:	add	x0, x0, #0x0
    1688:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    168c:	tbz	w0, #0, 17c4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x374>
    1690:	bl	0 <_ZN4llvm4dbgsEv>
    1694:	ldp	x9, x8, [x0, #16]
    1698:	mov	x19, x0
    169c:	sub	x9, x9, x8
    16a0:	cmp	x9, #0xf
    16a4:	b.hi	16f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2a8>  // b.pmore
    16a8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    16ac:	add	x1, x1, #0x0
    16b0:	mov	w2, #0x10                  	// #16
    16b4:	mov	x0, x19
    16b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    16bc:	mov	x19, x0
    16c0:	b	1714 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2c4>
    16c4:	ldr	q0, [x20]
    16c8:	str	q0, [x9]
    16cc:	ldr	x10, [sp, #88]
    16d0:	ldur	x8, [x29, #-32]
    16d4:	str	x23, [x19, #40]
    16d8:	ldrb	w9, [x10, #8]
    16dc:	str	x8, [x19, #16]
    16e0:	ands	x8, x19, #0xfffffffffffffffe
    16e4:	orr	w9, w9, #0x3
    16e8:	strb	w9, [x10, #8]
    16ec:	b.eq	3778 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2328>  // b.none
    16f0:	str	x8, [x10]
    16f4:	b	32e8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e98>
    16f8:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    16fc:	add	x9, x9, #0x0
    1700:	ldr	q0, [x9]
    1704:	str	q0, [x8]
    1708:	ldr	x8, [x19, #24]
    170c:	add	x8, x8, #0x10
    1710:	str	x8, [x19, #24]
    1714:	ldr	x8, [sp, #144]
    1718:	ldr	x10, [sp, #80]
    171c:	ldr	x8, [x8, #8]
    1720:	ldr	w9, [x8, #24]
    1724:	cmp	w9, w10
    1728:	b.ls	37e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2390>  // b.plast
    172c:	ldp	x9, x8, [x8, #8]
    1730:	ldr	w9, [x9, x10, lsl #2]
    1734:	add	x20, x8, x9
    1738:	cbz	x8, 174c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2fc>
    173c:	mov	x0, x20
    1740:	bl	0 <strlen>
    1744:	mov	x22, x0
    1748:	b	1750 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x300>
    174c:	mov	x22, xzr
    1750:	ldp	x8, x0, [x19, #16]
    1754:	sub	x8, x8, x0
    1758:	cmp	x22, x8
    175c:	b.ls	177c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x32c>  // b.plast
    1760:	mov	x0, x19
    1764:	mov	x1, x20
    1768:	mov	x2, x22
    176c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1770:	mov	x19, x0
    1774:	ldr	x0, [x0, #24]
    1778:	b	1798 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x348>
    177c:	cbz	x22, 1798 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x348>
    1780:	mov	x1, x20
    1784:	mov	x2, x22
    1788:	bl	0 <memcpy>
    178c:	ldr	x8, [x19, #24]
    1790:	add	x0, x8, x22
    1794:	str	x0, [x19, #24]
    1798:	ldr	x8, [x19, #16]
    179c:	cmp	x0, x8
    17a0:	b.cs	17b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x368>  // b.hs, b.nlast
    17a4:	add	x8, x0, #0x1
    17a8:	mov	w9, #0xa                   	// #10
    17ac:	str	x8, [x19, #24]
    17b0:	strb	w9, [x0]
    17b4:	b	17c4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x374>
    17b8:	mov	w1, #0xa                   	// #10
    17bc:	mov	x0, x19
    17c0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    17c4:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    17c8:	ldr	x8, [x8]
    17cc:	ldrb	w8, [x8]
    17d0:	cbz	w8, 1860 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x410>
    17d4:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    17d8:	add	x0, x0, #0x0
    17dc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    17e0:	tbz	w0, #0, 1860 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x410>
    17e4:	bl	0 <_ZN4llvm4dbgsEv>
    17e8:	ldp	x9, x8, [x0, #16]
    17ec:	sub	x9, x9, x8
    17f0:	cmp	x9, #0xe
    17f4:	b.hi	180c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x3bc>  // b.pmore
    17f8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    17fc:	add	x1, x1, #0x0
    1800:	mov	w2, #0xf                   	// #15
    1804:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1808:	b	1830 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x3e0>
    180c:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1810:	add	x9, x9, #0x0
    1814:	ldur	x10, [x9, #7]
    1818:	ldr	x9, [x9]
    181c:	stur	x10, [x8, #7]
    1820:	str	x9, [x8]
    1824:	ldr	x8, [x0, #24]
    1828:	add	x8, x8, #0xf
    182c:	str	x8, [x0, #24]
    1830:	mov	x1, x24
    1834:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1838:	ldp	x9, x8, [x0, #16]
    183c:	cmp	x8, x9
    1840:	b.cs	1858 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x408>  // b.hs, b.nlast
    1844:	add	x9, x8, #0x1
    1848:	mov	w10, #0xa                   	// #10
    184c:	str	x9, [x0, #24]
    1850:	strb	w10, [x8]
    1854:	b	1860 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x410>
    1858:	mov	w1, #0xa                   	// #10
    185c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1860:	mov	w0, #0x150                 	// #336
    1864:	bl	0 <_Znwm>
    1868:	adrp	x8, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    186c:	ldr	d1, [x8]
    1870:	movi	v0.2d, #0x0
    1874:	mov	x9, x0
    1878:	mov	x11, x0
    187c:	mov	x12, x0
    1880:	mov	x10, x0
    1884:	str	q0, [x9, #16]!
    1888:	stp	q0, q0, [x0, #32]
    188c:	stp	q0, q0, [x0, #64]
    1890:	stp	q0, q0, [x0, #128]
    1894:	stp	q0, q0, [x0, #208]
    1898:	stp	q0, q0, [x0, #240]
    189c:	stp	q0, q0, [x0, #272]
    18a0:	stp	q0, q0, [x0, #304]
    18a4:	str	q0, [x11, #176]!
    18a8:	str	q0, [x12, #192]!
    18ac:	str	q0, [x10, #112]!
    18b0:	str	q0, [x0, #96]
    18b4:	str	q0, [x0, #160]
    18b8:	stp	x10, x9, [sp, #16]
    18bc:	str	x9, [x0]
    18c0:	str	x10, [x0, #96]
    18c4:	str	d1, [x0, #8]
    18c8:	str	d1, [x0, #104]
    18cc:	str	x12, [x11]
    18d0:	str	d1, [x0, #184]
    18d4:	ldrh	w8, [x21]
    18d8:	ldr	x9, [sp, #48]
    18dc:	str	x11, [sp, #32]
    18e0:	str	x12, [sp, #8]
    18e4:	and	w8, w8, #0x3fff
    18e8:	str	w9, [x0, #320]
    18ec:	str	w8, [x0, #316]
    18f0:	ldp	x9, x8, [sp, #72]
    18f4:	str	x0, [sp, #96]
    18f8:	add	x9, x9, x8, lsl #6
    18fc:	ldr	x8, [x9, #8]!
    1900:	str	x9, [sp, #56]
    1904:	tbnz	w8, #6, 1910 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4c0>
    1908:	ldr	x11, [sp, #144]
    190c:	b	1a10 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5c0>
    1910:	ldr	x11, [sp, #144]
    1914:	ldrb	w9, [x11, #176]
    1918:	cbz	w9, 1a10 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5c0>
    191c:	bl	0 <_ZN4llvm9WithColor7warningEv>
    1920:	ldp	x9, x8, [x0, #16]
    1924:	sub	x9, x9, x8
    1928:	cmp	x9, #0x2c
    192c:	b.hi	1944 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4f4>  // b.pmore
    1930:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1934:	add	x1, x1, #0x0
    1938:	mov	w2, #0x2d                  	// #45
    193c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1940:	b	1968 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x518>
    1944:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1948:	add	x9, x9, #0x0
    194c:	ldur	q0, [x9, #29]
    1950:	ldp	q2, q1, [x9]
    1954:	stur	q0, [x8, #29]
    1958:	stp	q2, q1, [x8]
    195c:	ldr	x8, [x0, #24]
    1960:	add	x8, x8, #0x2d
    1964:	str	x8, [x0, #24]
    1968:	bl	0 <_ZN4llvm9WithColor4noteEv>
    196c:	ldp	x9, x8, [x0, #16]
    1970:	sub	x9, x9, x8
    1974:	cmp	x9, #0x2c
    1978:	b.hi	1994 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x544>  // b.pmore
    197c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1980:	add	x1, x1, #0x0
    1984:	mov	w2, #0x2d                  	// #45
    1988:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    198c:	ldr	x8, [x0, #24]
    1990:	b	19b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x568>
    1994:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1998:	add	x9, x9, #0x0
    199c:	ldur	q0, [x9, #29]
    19a0:	ldp	q2, q1, [x9]
    19a4:	stur	q0, [x8, #29]
    19a8:	stp	q2, q1, [x8]
    19ac:	ldr	x8, [x0, #24]
    19b0:	add	x8, x8, #0x2d
    19b4:	str	x8, [x0, #24]
    19b8:	ldr	x9, [x0, #16]
    19bc:	sub	x9, x9, x8
    19c0:	cmp	x9, #0x1a
    19c4:	b.hi	19dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x58c>  // b.pmore
    19c8:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    19cc:	add	x1, x1, #0x0
    19d0:	mov	w2, #0x1b                  	// #27
    19d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    19d8:	b	1a00 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5b0>
    19dc:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    19e0:	add	x9, x9, #0x0
    19e4:	ldur	q0, [x9, #11]
    19e8:	ldr	q1, [x9]
    19ec:	stur	q0, [x8, #11]
    19f0:	str	q1, [x8]
    19f4:	ldr	x8, [x0, #24]
    19f8:	add	x8, x8, #0x1b
    19fc:	str	x8, [x0, #24]
    1a00:	ldr	x11, [sp, #144]
    1a04:	ldr	x8, [sp, #56]
    1a08:	strb	wzr, [x11, #176]
    1a0c:	ldr	x8, [x8]
    1a10:	tbz	w8, #4, 1b14 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x6c4>
    1a14:	ldrb	w9, [x11, #177]
    1a18:	cbz	w9, 1b14 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x6c4>
    1a1c:	bl	0 <_ZN4llvm9WithColor7warningEv>
    1a20:	ldp	x9, x8, [x0, #16]
    1a24:	sub	x9, x9, x8
    1a28:	cmp	x9, #0x26
    1a2c:	b.hi	1a48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5f8>  // b.pmore
    1a30:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1a34:	add	x1, x1, #0x0
    1a38:	mov	w2, #0x27                  	// #39
    1a3c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1a40:	ldr	x8, [x0, #24]
    1a44:	b	1a6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x61c>
    1a48:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1a4c:	add	x9, x9, #0x0
    1a50:	ldur	x10, [x9, #31]
    1a54:	ldp	q1, q0, [x9]
    1a58:	stur	x10, [x8, #31]
    1a5c:	stp	q1, q0, [x8]
    1a60:	ldr	x8, [x0, #24]
    1a64:	add	x8, x8, #0x27
    1a68:	str	x8, [x0, #24]
    1a6c:	ldr	x9, [x0, #16]
    1a70:	sub	x9, x9, x8
    1a74:	cmp	x9, #0x13
    1a78:	b.hi	1a90 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x640>  // b.pmore
    1a7c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1a80:	add	x1, x1, #0x0
    1a84:	mov	w2, #0x14                  	// #20
    1a88:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1a8c:	b	1ab8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x668>
    1a90:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1a94:	add	x9, x9, #0x0
    1a98:	ldr	q0, [x9]
    1a9c:	mov	w9, #0x6563                	// #25955
    1aa0:	movk	w9, #0xa2e, lsl #16
    1aa4:	str	w9, [x8, #16]
    1aa8:	str	q0, [x8]
    1aac:	ldr	x8, [x0, #24]
    1ab0:	add	x8, x8, #0x14
    1ab4:	str	x8, [x0, #24]
    1ab8:	bl	0 <_ZN4llvm9WithColor4noteEv>
    1abc:	ldp	x9, x8, [x0, #16]
    1ac0:	sub	x9, x9, x8
    1ac4:	cmp	x9, #0x24
    1ac8:	b.hi	1ae0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x690>  // b.pmore
    1acc:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1ad0:	add	x1, x1, #0x0
    1ad4:	mov	w2, #0x25                  	// #37
    1ad8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1adc:	b	1b04 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x6b4>
    1ae0:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1ae4:	add	x9, x9, #0x0
    1ae8:	ldur	x10, [x9, #29]
    1aec:	ldp	q1, q0, [x9]
    1af0:	stur	x10, [x8, #29]
    1af4:	stp	q1, q0, [x8]
    1af8:	ldr	x8, [x0, #24]
    1afc:	add	x8, x8, #0x25
    1b00:	str	x8, [x0, #24]
    1b04:	ldr	x11, [sp, #144]
    1b08:	ldr	x8, [sp, #56]
    1b0c:	strb	wzr, [x11, #177]
    1b10:	ldr	x8, [x8]
    1b14:	ldr	x12, [sp, #96]
    1b18:	ubfx	w9, w8, #18, #1
    1b1c:	ubfx	w10, w8, #19, #1
    1b20:	ubfx	w8, w8, #23, #1
    1b24:	strb	w9, [x12, #324]
    1b28:	strb	w10, [x12, #325]
    1b2c:	strb	w8, [x12, #326]
    1b30:	ldrh	w8, [x21]
    1b34:	ubfx	w8, w8, #14, #1
    1b38:	strb	w8, [x12, #327]
    1b3c:	ldrh	w8, [x21]
    1b40:	lsr	w8, w8, #15
    1b44:	strb	w8, [x12, #328]
    1b48:	ldr	x10, [x11]
    1b4c:	ldr	x8, [x11, #32]
    1b50:	ldr	w9, [x11, #40]
    1b54:	str	x10, [sp, #136]
    1b58:	ldr	x10, [x10, #152]
    1b5c:	stp	xzr, xzr, [x29, #-40]
    1b60:	stur	wzr, [x29, #-16]
    1b64:	stur	xzr, [x29, #-24]
    1b68:	stur	x10, [x29, #-136]
    1b6c:	ldr	w10, [x10, #48]
    1b70:	stur	w10, [x29, #-88]
    1b74:	cbz	w10, 3798 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2348>
    1b78:	cmp	w10, #0x40
    1b7c:	str	x10, [sp, #40]
    1b80:	stur	x8, [x29, #-144]
    1b84:	str	x9, [sp, #152]
    1b88:	b.hi	1b94 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x744>  // b.pmore
    1b8c:	stur	xzr, [x29, #-96]
    1b90:	b	1ba4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x754>
    1b94:	sub	x0, x29, #0x60
    1b98:	mov	x1, xzr
    1b9c:	mov	w2, wzr
    1ba0:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    1ba4:	mov	w8, #0x18                  	// #24
    1ba8:	madd	x8, x24, x8, x25
    1bac:	ldrh	w8, [x8, #12]
    1bb0:	str	x23, [sp, #64]
    1bb4:	stur	x8, [x29, #-112]
    1bb8:	cbz	x8, 216c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd1c>
    1bbc:	ldur	x21, [x29, #-136]
    1bc0:	ldr	x23, [sp, #136]
    1bc4:	mov	w8, #0x18                  	// #24
    1bc8:	madd	x8, x24, x8, x25
    1bcc:	mov	x28, xzr
    1bd0:	mov	x1, xzr
    1bd4:	mov	x27, xzr
    1bd8:	mov	x15, xzr
    1bdc:	add	x8, x8, #0xa
    1be0:	mov	w24, #0x1                   	// #1
    1be4:	stur	wzr, [x29, #-128]
    1be8:	stur	x8, [x29, #-120]
    1bec:	b	1c54 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x804>
    1bf0:	mov	w22, w16
    1bf4:	mov	x21, x15
    1bf8:	mov	x24, x1
    1bfc:	mov	x3, xzr
    1c00:	sub	x0, x29, #0x28
    1c04:	sub	x1, x29, #0x50
    1c08:	sub	x2, x29, #0x50
    1c0c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1c10:	ldur	x8, [x29, #-80]
    1c14:	mov	x1, x24
    1c18:	mov	x15, x21
    1c1c:	mov	w16, w22
    1c20:	str	wzr, [x0, #8]
    1c24:	str	x8, [x0]
    1c28:	ldr	w8, [x0, #8]
    1c2c:	add	w8, w8, w19
    1c30:	str	w8, [x0, #8]
    1c34:	ldur	x21, [x29, #-136]
    1c38:	cmp	w20, #0x0
    1c3c:	add	x27, x27, #0x18
    1c40:	cset	w24, ne  // ne = any
    1c44:	ldur	x8, [x29, #-112]
    1c48:	add	x28, x28, #0x1
    1c4c:	cmp	x28, x8
    1c50:	b.eq	217c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd2c>  // b.none
    1c54:	ldr	x8, [x21, #40]
    1c58:	cbz	x8, 366c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x221c>
    1c5c:	ldur	x9, [x29, #-120]
    1c60:	ldr	x8, [x23, #128]
    1c64:	lsl	x10, x28, #2
    1c68:	ldrh	w9, [x9]
    1c6c:	add	x8, x8, x9, lsl #2
    1c70:	ldrh	w19, [x8, x10]
    1c74:	ldr	w9, [x21, #48]
    1c78:	cmp	w9, w19
    1c7c:	b.ls	35ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x215c>  // b.plast
    1c80:	add	x25, x8, x28, lsl #2
    1c84:	ldr	x21, [x21, #32]
    1c88:	ldrh	w8, [x25, #2]!
    1c8c:	cbz	w8, 1cf0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8a0>
    1c90:	ldr	x9, [sp, #152]
    1c94:	cmp	x9, x19
    1c98:	b.ls	35cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x217c>  // b.plast
    1c9c:	ldur	x9, [x29, #-144]
    1ca0:	add	x10, x21, x19, lsl #5
    1ca4:	ldr	x22, [x9, x19, lsl #3]
    1ca8:	ldr	w9, [x10, #16]!
    1cac:	tbnz	w9, #31, 1d30 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8e0>
    1cb0:	cbz	x22, 35ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x219c>
    1cb4:	ldur	w11, [x29, #-88]
    1cb8:	clz	x12, x22
    1cbc:	eor	w12, w12, #0x3f
    1cc0:	cmp	w11, w12
    1cc4:	b.ls	360c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x21bc>  // b.plast
    1cc8:	cmp	w11, #0x40
    1ccc:	mov	w11, #0x1                   	// #1
    1cd0:	lsl	x11, x11, x12
    1cd4:	b.hi	1d38 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8e8>  // b.pmore
    1cd8:	ldur	x8, [x29, #-96]
    1cdc:	orr	x8, x8, x11
    1ce0:	stur	x8, [x29, #-96]
    1ce4:	ldr	w9, [x10]
    1ce8:	ldrh	w8, [x25]
    1cec:	b	1d48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8f8>
    1cf0:	mov	w23, w16
    1cf4:	mov	x26, x15
    1cf8:	mov	x22, x1
    1cfc:	bl	0 <_ZN4llvm9WithColor7warningEv>
    1d00:	ldp	x9, x8, [x0, #16]
    1d04:	mov	x20, x0
    1d08:	sub	x9, x9, x8
    1d0c:	cmp	x9, #0x3b
    1d10:	b.hi	1f1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xacc>  // b.pmore
    1d14:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1d18:	mov	w2, #0x3c                  	// #60
    1d1c:	mov	x0, x20
    1d20:	add	x1, x1, #0x0
    1d24:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d28:	mov	x20, x0
    1d2c:	b	1f48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xaf8>
    1d30:	mov	w20, wzr
    1d34:	b	1d68 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x918>
    1d38:	ldur	x10, [x29, #-96]
    1d3c:	ldr	x12, [x10]
    1d40:	orr	x11, x12, x11
    1d44:	str	x11, [x10]
    1d48:	cmp	w9, #0x0
    1d4c:	cset	w10, eq  // eq = none
    1d50:	cmp	w9, #0x2
    1d54:	ldur	w9, [x29, #-128]
    1d58:	orr	w9, w9, w10
    1d5c:	stur	w9, [x29, #-128]
    1d60:	cset	w9, lt  // lt = tstop
    1d64:	and	w20, w24, w9
    1d68:	and	w16, w16, #0xffffff00
    1d6c:	cmp	x15, x27
    1d70:	lsl	x26, x8, #32
    1d74:	b.eq	1d88 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x938>  // b.none
    1d78:	mov	w8, #0x1                   	// #1
    1d7c:	stp	x22, x26, [x27]
    1d80:	stp	w16, w8, [x27, #16]
    1d84:	b	1e68 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa18>
    1d88:	sub	x8, x27, x1
    1d8c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
    1d90:	cmp	x8, x9
    1d94:	str	w20, [sp, #112]
    1d98:	str	w16, [sp, #128]
    1d9c:	b.eq	372c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x22dc>  // b.none
    1da0:	asr	x9, x8, #3
    1da4:	cmp	x8, #0x0
    1da8:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1dac:	movk	x8, #0xaaab
    1db0:	mul	x27, x9, x8
    1db4:	csinc	x8, x27, xzr, ne  // ne = any
    1db8:	mov	x11, #0x5555555555555555    	// #6148914691236517205
    1dbc:	adds	x8, x8, x27
    1dc0:	movk	x11, #0x555, lsl #48
    1dc4:	cset	w9, cs  // cs = hs, nlast
    1dc8:	cmp	x8, x11
    1dcc:	cset	w10, hi  // hi = pmore
    1dd0:	orr	w9, w9, w10
    1dd4:	cmp	w9, #0x0
    1dd8:	csel	x8, x11, x8, ne  // ne = any
    1ddc:	str	x8, [sp, #104]
    1de0:	add	x8, x8, x8, lsl #1
    1de4:	lsl	x0, x8, #3
    1de8:	mov	x24, x21
    1dec:	mov	x23, x15
    1df0:	mov	x21, x1
    1df4:	bl	0 <_Znwm>
    1df8:	ldr	w16, [sp, #128]
    1dfc:	mov	x20, x0
    1e00:	mov	w8, #0x18                  	// #24
    1e04:	madd	x8, x27, x8, x0
    1e08:	cmp	x23, x21
    1e0c:	mov	w9, #0x1                   	// #1
    1e10:	mov	x0, x21
    1e14:	mov	x27, x20
    1e18:	stp	x22, x26, [x8]
    1e1c:	stp	w16, w9, [x8, #16]
    1e20:	b.eq	2154 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd04>  // b.none
    1e24:	mov	x8, x0
    1e28:	mov	x21, x24
    1e2c:	ldr	x9, [x8, #16]
    1e30:	ldr	q0, [x8], #24
    1e34:	str	x9, [x27, #16]
    1e38:	cmp	x23, x8
    1e3c:	str	q0, [x27], #24
    1e40:	b.ne	1e2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x9dc>  // b.any
    1e44:	cbz	x0, 1e50 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa00>
    1e48:	bl	0 <_ZdlPv>
    1e4c:	ldr	w16, [sp, #128]
    1e50:	ldr	x9, [sp, #104]
    1e54:	mov	w8, #0x18                  	// #24
    1e58:	mov	x1, x20
    1e5c:	ldr	x23, [sp, #136]
    1e60:	madd	x15, x9, x8, x20
    1e64:	ldr	w20, [sp, #112]
    1e68:	add	x8, x21, x19, lsl #5
    1e6c:	ldr	w8, [x8, #12]
    1e70:	cbz	w8, 1c34 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7e4>
    1e74:	ldr	x9, [sp, #152]
    1e78:	cmp	w9, w8
    1e7c:	b.ls	35cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x217c>  // b.plast
    1e80:	ldur	x9, [x29, #-144]
    1e84:	ldur	w10, [x29, #-16]
    1e88:	ldr	x8, [x9, x8, lsl #3]
    1e8c:	stur	x8, [x29, #-80]
    1e90:	ldrh	w19, [x25]
    1e94:	cbz	w10, 1bf0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7a0>
    1e98:	cmn	x8, #0x2
    1e9c:	b.cs	364c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x21fc>  // b.hs, b.nlast
    1ea0:	ldur	x9, [x29, #-32]
    1ea4:	mov	w11, #0x25                  	// #37
    1ea8:	mul	w11, w8, w11
    1eac:	sub	w10, w10, #0x1
    1eb0:	and	w11, w10, w11
    1eb4:	add	x0, x9, w11, uxtw #4
    1eb8:	ldr	x13, [x0]
    1ebc:	cmp	x8, x13
    1ec0:	b.eq	1c28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7d8>  // b.none
    1ec4:	mov	x12, xzr
    1ec8:	mov	w14, #0x1                   	// #1
    1ecc:	mov	w22, w16
    1ed0:	mov	x21, x15
    1ed4:	mov	x24, x1
    1ed8:	cmn	x13, #0x1
    1edc:	b.eq	2160 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd10>  // b.none
    1ee0:	cmp	x12, #0x0
    1ee4:	add	w11, w11, w14
    1ee8:	mov	x15, #0xfffffffffffffffe    	// #-2
    1eec:	ccmp	x13, x15, #0x0, eq  // eq = none
    1ef0:	and	w11, w11, w10
    1ef4:	csel	x12, x12, x0, ne  // ne = any
    1ef8:	add	x0, x9, w11, uxtw #4
    1efc:	ldr	x13, [x0]
    1f00:	add	w14, w14, #0x1
    1f04:	mov	x1, x24
    1f08:	mov	x15, x21
    1f0c:	cmp	x8, x13
    1f10:	mov	w16, w22
    1f14:	b.eq	1c28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7d8>  // b.none
    1f18:	b	1ecc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa7c>
    1f1c:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1f20:	add	x9, x9, #0x0
    1f24:	ldur	q0, [x9, #44]
    1f28:	ldp	q2, q1, [x9, #16]
    1f2c:	ldr	q3, [x9]
    1f30:	stur	q0, [x8, #44]
    1f34:	stp	q2, q1, [x8, #16]
    1f38:	str	q3, [x8]
    1f3c:	ldr	x8, [x20, #24]
    1f40:	add	x8, x8, #0x3c
    1f44:	str	x8, [x20, #24]
    1f48:	lsl	x8, x19, #5
    1f4c:	ldr	x19, [x21, x8]
    1f50:	cbz	x19, 1f64 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb14>
    1f54:	mov	x0, x19
    1f58:	bl	0 <strlen>
    1f5c:	mov	x25, x0
    1f60:	b	1f68 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb18>
    1f64:	mov	x25, xzr
    1f68:	ldp	x8, x0, [x20, #16]
    1f6c:	sub	x8, x8, x0
    1f70:	cmp	x25, x8
    1f74:	b.ls	1f94 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb44>  // b.plast
    1f78:	mov	x0, x20
    1f7c:	mov	x1, x19
    1f80:	mov	x2, x25
    1f84:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1f88:	mov	x20, x0
    1f8c:	ldr	x0, [x0, #24]
    1f90:	b	1fb0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb60>
    1f94:	cbz	x25, 1fb0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb60>
    1f98:	mov	x1, x19
    1f9c:	mov	x2, x25
    1fa0:	bl	0 <memcpy>
    1fa4:	ldr	x8, [x20, #24]
    1fa8:	add	x0, x8, x25
    1fac:	str	x0, [x20, #24]
    1fb0:	ldr	x8, [x20, #16]
    1fb4:	cmp	x8, x0
    1fb8:	b.ne	1fd4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb84>  // b.any
    1fbc:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    1fc0:	mov	w2, #0x1                   	// #1
    1fc4:	mov	x0, x20
    1fc8:	add	x1, x1, #0x0
    1fcc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1fd0:	b	1fe8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb98>
    1fd4:	mov	w8, #0xa                   	// #10
    1fd8:	strb	w8, [x0]
    1fdc:	ldr	x8, [x20, #24]
    1fe0:	add	x8, x8, #0x1
    1fe4:	str	x8, [x20, #24]
    1fe8:	bl	0 <_ZN4llvm9WithColor4noteEv>
    1fec:	ldp	x9, x8, [x0, #16]
    1ff0:	mov	x20, x0
    1ff4:	sub	x9, x9, x8
    1ff8:	cmp	x9, #0x19
    1ffc:	b.hi	201c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xbcc>  // b.pmore
    2000:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2004:	mov	w2, #0x1a                  	// #26
    2008:	mov	x0, x20
    200c:	add	x1, x1, #0x0
    2010:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2014:	mov	x20, x0
    2018:	b	2040 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xbf0>
    201c:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2020:	add	x9, x9, #0x0
    2024:	ldur	q0, [x9, #10]
    2028:	ldr	q1, [x9]
    202c:	stur	q0, [x8, #10]
    2030:	str	q1, [x8]
    2034:	ldr	x8, [x20, #24]
    2038:	add	x8, x8, #0x1a
    203c:	str	x8, [x20, #24]
    2040:	ldr	x8, [sp, #120]
    2044:	ldr	x19, [x8]
    2048:	cbz	x19, 205c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc0c>
    204c:	mov	x0, x19
    2050:	bl	0 <strlen>
    2054:	mov	x25, x0
    2058:	b	2060 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc10>
    205c:	mov	x25, xzr
    2060:	ldp	x8, x0, [x20, #16]
    2064:	sub	x8, x8, x0
    2068:	cmp	x25, x8
    206c:	b.ls	208c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc3c>  // b.plast
    2070:	mov	x0, x20
    2074:	mov	x1, x19
    2078:	mov	x2, x25
    207c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2080:	mov	x20, x0
    2084:	ldr	x0, [x0, #24]
    2088:	b	20a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc58>
    208c:	cbz	x25, 20a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc58>
    2090:	mov	x1, x19
    2094:	mov	x2, x25
    2098:	bl	0 <memcpy>
    209c:	ldr	x8, [x20, #24]
    20a0:	add	x0, x8, x25
    20a4:	str	x0, [x20, #24]
    20a8:	ldr	x8, [x20, #16]
    20ac:	ldur	x21, [x29, #-136]
    20b0:	sub	x8, x8, x0
    20b4:	cmp	x8, #0xe
    20b8:	b.hi	20d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc88>  // b.pmore
    20bc:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    20c0:	mov	w2, #0xf                   	// #15
    20c4:	mov	x0, x20
    20c8:	add	x1, x1, #0x0
    20cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    20d0:	mov	x20, x0
    20d4:	b	20fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcac>
    20d8:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    20dc:	add	x9, x9, #0x0
    20e0:	ldur	x8, [x9, #7]
    20e4:	ldr	x9, [x9]
    20e8:	stur	x8, [x0, #7]
    20ec:	str	x9, [x0]
    20f0:	ldr	x8, [x20, #24]
    20f4:	add	x8, x8, #0xf
    20f8:	str	x8, [x20, #24]
    20fc:	mov	x0, x20
    2100:	mov	x1, x28
    2104:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2108:	ldp	x9, x8, [x0, #16]
    210c:	sub	x9, x9, x8
    2110:	cmp	x9, #0x1
    2114:	b.hi	212c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcdc>  // b.pmore
    2118:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    211c:	mov	w2, #0x2                   	// #2
    2120:	add	x1, x1, #0x0
    2124:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2128:	b	2140 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcf0>
    212c:	mov	w9, #0xa29                 	// #2601
    2130:	strh	w9, [x8]
    2134:	ldr	x8, [x0, #24]
    2138:	add	x8, x8, #0x2
    213c:	str	x8, [x0, #24]
    2140:	mov	w16, w23
    2144:	ldr	x23, [sp, #136]
    2148:	mov	x1, x22
    214c:	mov	x15, x26
    2150:	b	1c44 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7f4>
    2154:	mov	x21, x24
    2158:	cbnz	x0, 1e48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x9f8>
    215c:	b	1e50 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa00>
    2160:	cmp	x12, #0x0
    2164:	csel	x3, x0, x12, eq  // eq = none
    2168:	b	1c00 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x7b0>
    216c:	mov	x27, xzr
    2170:	mov	x1, xzr
    2174:	mov	w24, #0x1                   	// #1
    2178:	stur	wzr, [x29, #-128]
    217c:	ldur	w8, [x29, #-128]
    2180:	ldr	x21, [sp, #96]
    2184:	subs	x19, x27, x1
    2188:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    218c:	and	w8, w8, w24
    2190:	movk	x9, #0xaaab
    2194:	asr	x10, x19, #3
    2198:	and	w8, w8, #0x1
    219c:	mul	x2, x10, x9
    21a0:	strb	w8, [x21, #329]
    21a4:	stur	x2, [x29, #-120]
    21a8:	b.eq	24dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x108c>  // b.none
    21ac:	clz	x8, x2
    21b0:	mov	w9, #0x7e                  	// #126
    21b4:	sub	x2, x9, x8, lsl #1
    21b8:	mov	x0, x1
    21bc:	mov	x20, x1
    21c0:	mov	x1, x27
    21c4:	mov	x3, xzr
    21c8:	bl	40b8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_>
    21cc:	cmp	x19, #0x181
    21d0:	b.lt	2308 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xeb8>  // b.tstop
    21d4:	ldur	x2, [x29, #-120]
    21d8:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    21dc:	add	x8, x20, #0x8
    21e0:	add	x9, x20, #0x20
    21e4:	mov	w10, #0x1                   	// #1
    21e8:	movk	x11, #0xaaab
    21ec:	mov	x14, x20
    21f0:	mov	x12, x20
    21f4:	mov	x1, x20
    21f8:	b	221c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdcc>
    21fc:	str	x13, [x1]
    2200:	ldur	q0, [x29, #-80]
    2204:	str	q0, [x8]
    2208:	add	x10, x10, #0x1
    220c:	cmp	x10, #0x10
    2210:	add	x9, x9, #0x18
    2214:	mov	x14, x12
    2218:	b.eq	2444 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xff4>  // b.none
    221c:	ldr	x13, [x12, #24]!
    2220:	ldr	x16, [x1]
    2224:	fmov	d0, x13
    2228:	fmov	d1, x16
    222c:	cnt	v0.8b, v0.8b
    2230:	cnt	v1.8b, v1.8b
    2234:	uaddlv	h0, v0.8b
    2238:	uaddlv	h1, v1.8b
    223c:	fmov	w15, s0
    2240:	fmov	w17, s1
    2244:	cmp	w15, w17
    2248:	b.cc	225c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe0c>  // b.lo, b.ul, b.last
    224c:	cmp	x13, x16
    2250:	b.cs	22a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe58>  // b.hs, b.nlast
    2254:	cmp	w15, w17
    2258:	b.hi	22a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe58>  // b.pmore
    225c:	ldr	q0, [x14, #32]
    2260:	sub	x14, x12, x1
    2264:	cmp	x14, #0x1
    2268:	stur	q0, [x29, #-80]
    226c:	b.lt	21fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdac>  // b.tstop
    2270:	umulh	x14, x14, x11
    2274:	lsr	x14, x14, #4
    2278:	add	x14, x14, #0x1
    227c:	mov	x15, x9
    2280:	ldur	x16, [x15, #-32]
    2284:	ldur	q0, [x15, #-24]
    2288:	sub	x14, x14, #0x1
    228c:	cmp	x14, #0x1
    2290:	stur	x16, [x15, #-8]
    2294:	sub	x16, x15, #0x18
    2298:	str	q0, [x15]
    229c:	mov	x15, x16
    22a0:	b.gt	2280 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe30>
    22a4:	b	21fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdac>
    22a8:	ldr	q0, [x14, #32]
    22ac:	mov	x16, x12
    22b0:	stur	q0, [x29, #-80]
    22b4:	b	22cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe7c>
    22b8:	str	x17, [x16]
    22bc:	ldur	q0, [x14, #8]
    22c0:	stur	q0, [x16, #8]
    22c4:	mov	x16, x14
    22c8:	sub	x14, x14, #0x18
    22cc:	ldr	x17, [x14]
    22d0:	fmov	d0, x17
    22d4:	cnt	v0.8b, v0.8b
    22d8:	uaddlv	h0, v0.8b
    22dc:	fmov	w18, s0
    22e0:	cmp	w15, w18
    22e4:	b.cc	22b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe68>  // b.lo, b.ul, b.last
    22e8:	cmp	x13, x17
    22ec:	b.cs	22f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xea8>  // b.hs, b.nlast
    22f0:	cmp	w15, w18
    22f4:	b.ls	22b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe68>  // b.plast
    22f8:	str	x13, [x16]
    22fc:	ldur	q0, [x29, #-80]
    2300:	stur	q0, [x16, #8]
    2304:	b	2208 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdb8>
    2308:	ldur	x2, [x29, #-120]
    230c:	add	x8, x20, #0x18
    2310:	cmp	x8, x27
    2314:	mov	x1, x20
    2318:	b.eq	24dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x108c>  // b.none
    231c:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2320:	add	x9, x1, #0x8
    2324:	add	x10, x1, #0x20
    2328:	movk	x11, #0xaaab
    232c:	mov	x12, x1
    2330:	b	2354 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf04>
    2334:	str	x13, [x1]
    2338:	ldur	q0, [x29, #-80]
    233c:	str	q0, [x9]
    2340:	add	x8, x8, #0x18
    2344:	add	x12, x12, #0x18
    2348:	cmp	x8, x27
    234c:	add	x10, x10, #0x18
    2350:	b.eq	24dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x108c>  // b.none
    2354:	ldr	x13, [x8]
    2358:	ldr	x15, [x1]
    235c:	fmov	d0, x13
    2360:	fmov	d1, x15
    2364:	cnt	v0.8b, v0.8b
    2368:	cnt	v1.8b, v1.8b
    236c:	uaddlv	h0, v0.8b
    2370:	uaddlv	h1, v1.8b
    2374:	fmov	w14, s0
    2378:	fmov	w16, s1
    237c:	cmp	w14, w16
    2380:	b.cc	2394 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf44>  // b.lo, b.ul, b.last
    2384:	cmp	x13, x15
    2388:	b.cs	23e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf90>  // b.hs, b.nlast
    238c:	cmp	w14, w16
    2390:	b.hi	23e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf90>  // b.pmore
    2394:	ldr	q0, [x12, #32]
    2398:	sub	x14, x8, x1
    239c:	cmp	x14, #0x1
    23a0:	stur	q0, [x29, #-80]
    23a4:	b.lt	2334 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xee4>  // b.tstop
    23a8:	umulh	x14, x14, x11
    23ac:	lsr	x14, x14, #4
    23b0:	add	x14, x14, #0x1
    23b4:	mov	x15, x10
    23b8:	ldur	x16, [x15, #-32]
    23bc:	ldur	q0, [x15, #-24]
    23c0:	sub	x14, x14, #0x1
    23c4:	cmp	x14, #0x1
    23c8:	stur	x16, [x15, #-8]
    23cc:	sub	x16, x15, #0x18
    23d0:	str	q0, [x15]
    23d4:	mov	x15, x16
    23d8:	b.gt	23b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf68>
    23dc:	b	2334 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xee4>
    23e0:	ldr	q0, [x12, #32]
    23e4:	mov	x15, x12
    23e8:	mov	x16, x8
    23ec:	stur	q0, [x29, #-80]
    23f0:	b	2408 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfb8>
    23f4:	str	x17, [x16]
    23f8:	ldur	q0, [x15, #8]
    23fc:	stur	q0, [x16, #8]
    2400:	mov	x16, x15
    2404:	sub	x15, x15, #0x18
    2408:	ldr	x17, [x15]
    240c:	fmov	d0, x17
    2410:	cnt	v0.8b, v0.8b
    2414:	uaddlv	h0, v0.8b
    2418:	fmov	w18, s0
    241c:	cmp	w14, w18
    2420:	b.cc	23f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfa4>  // b.lo, b.ul, b.last
    2424:	cmp	x13, x17
    2428:	b.cs	2434 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfe4>  // b.hs, b.nlast
    242c:	cmp	w14, w18
    2430:	b.ls	23f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfa4>  // b.plast
    2434:	str	x13, [x16]
    2438:	ldur	q0, [x29, #-80]
    243c:	stur	q0, [x16, #8]
    2440:	b	2340 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xef0>
    2444:	add	x8, x1, #0x180
    2448:	cmp	x8, x27
    244c:	b.eq	24dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x108c>  // b.none
    2450:	add	x9, x1, #0x188
    2454:	b	2474 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1024>
    2458:	stur	x10, [x11, #-8]
    245c:	ldur	q0, [x29, #-80]
    2460:	add	x8, x8, #0x18
    2464:	cmp	x8, x27
    2468:	add	x9, x9, #0x18
    246c:	str	q0, [x11]
    2470:	b.eq	24dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x108c>  // b.none
    2474:	ldr	x10, [x8]
    2478:	ldur	q0, [x8, #8]
    247c:	mov	x11, x9
    2480:	fmov	d1, x10
    2484:	cnt	v1.8b, v1.8b
    2488:	uaddlv	h1, v1.8b
    248c:	fmov	w12, s1
    2490:	stur	q0, [x29, #-80]
    2494:	b	24ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x105c>
    2498:	ldur	q0, [x11, #-24]
    249c:	stur	x13, [x11, #-8]
    24a0:	sub	x13, x11, #0x18
    24a4:	str	q0, [x11]
    24a8:	mov	x11, x13
    24ac:	ldur	x13, [x11, #-32]
    24b0:	fmov	d0, x13
    24b4:	cnt	v0.8b, v0.8b
    24b8:	uaddlv	h0, v0.8b
    24bc:	fmov	w14, s0
    24c0:	cmp	w12, w14
    24c4:	b.cc	2498 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1048>  // b.lo, b.ul, b.last
    24c8:	cmp	x10, x13
    24cc:	b.cs	2458 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1008>  // b.hs, b.nlast
    24d0:	cmp	w12, w14
    24d4:	b.ls	2498 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1048>  // b.plast
    24d8:	b	2458 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1008>
    24dc:	stur	x1, [x29, #-112]
    24e0:	cbz	w2, 2748 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x12f8>
    24e4:	mov	x26, xzr
    24e8:	mov	x22, xzr
    24ec:	mov	x20, xzr
    24f0:	and	x8, x2, #0xffffffff
    24f4:	mov	w25, #0x18                  	// #24
    24f8:	mov	w23, #0x1                   	// #1
    24fc:	stur	x8, [x29, #-128]
    2500:	b	2524 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10d4>
    2504:	ldr	x21, [sp, #96]
    2508:	ldr	x20, [sp, #128]
    250c:	ldr	x22, [sp, #112]
    2510:	ldr	x26, [sp, #136]
    2514:	ldur	x8, [x29, #-128]
    2518:	add	x23, x23, #0x1
    251c:	cmp	x26, x8
    2520:	b.eq	2750 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1300>  // b.none
    2524:	madd	x19, x26, x25, x1
    2528:	mov	x28, x19
    252c:	mov	x24, x19
    2530:	ldr	w8, [x28, #12]!
    2534:	ldr	w9, [x24, #8]!
    2538:	cmp	w8, w9
    253c:	b.ne	2578 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1128>  // b.any
    2540:	ldr	x8, [x19]
    2544:	sub	x9, x8, #0x1
    2548:	tst	x8, x9
    254c:	b.eq	36cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x227c>  // b.none
    2550:	clz	x9, x8
    2554:	cmp	x8, #0x0
    2558:	mov	w8, #0x3f                  	// #63
    255c:	sub	w8, w8, w9
    2560:	mov	w9, #0x1                   	// #1
    2564:	lsl	x8, x9, x8
    2568:	csel	x8, xzr, x8, eq  // eq = none
    256c:	orr	x20, x8, x20
    2570:	add	x26, x26, #0x1
    2574:	b	2514 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10c4>
    2578:	ldp	w8, w9, [x21, #184]
    257c:	cmp	w8, w9
    2580:	b.cs	2730 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x12e0>  // b.hs, b.nlast
    2584:	ldr	x9, [x21, #176]
    2588:	ldr	x10, [x19, #16]
    258c:	ldr	q0, [x19]
    2590:	umaddl	x8, w8, w25, x9
    2594:	str	x10, [x8, #16]
    2598:	str	q0, [x8]
    259c:	ldp	w8, w9, [x21, #184]
    25a0:	cmp	w8, w9
    25a4:	b.cs	36ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x229c>  // b.hs, b.nlast
    25a8:	add	w8, w8, #0x1
    25ac:	str	w8, [x21, #184]
    25b0:	mov	x11, x26
    25b4:	ldr	x26, [x19]
    25b8:	fmov	d0, x26
    25bc:	cnt	v0.8b, v0.8b
    25c0:	uaddlv	h0, v0.8b
    25c4:	fmov	w8, s0
    25c8:	cmp	x8, #0x1
    25cc:	b.ne	25d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1188>  // b.any
    25d0:	orr	x22, x26, x22
    25d4:	b	25fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11ac>
    25d8:	clz	x8, x26
    25dc:	mov	w9, #0x3f                  	// #63
    25e0:	sub	w8, w9, w8
    25e4:	mov	w9, #0x1                   	// #1
    25e8:	cmp	x26, #0x0
    25ec:	lsl	x8, x9, x8
    25f0:	csel	x8, xzr, x8, eq  // eq = none
    25f4:	eor	x26, x8, x26
    25f8:	orr	x20, x8, x20
    25fc:	ldur	x8, [x29, #-128]
    2600:	add	x11, x11, #0x1
    2604:	str	x11, [sp, #136]
    2608:	cmp	x11, x8
    260c:	b.cs	2510 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10c0>  // b.hs, b.nlast
    2610:	mov	x21, x23
    2614:	str	x22, [sp, #112]
    2618:	str	x20, [sp, #128]
    261c:	b	262c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11dc>
    2620:	add	x21, x21, #0x1
    2624:	cmp	w21, w2
    2628:	b.eq	2504 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10b4>  // b.none
    262c:	madd	x22, x21, x25, x1
    2630:	ldr	x8, [x22]
    2634:	bics	xzr, x26, x8
    2638:	b.ne	2620 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11d0>  // b.any
    263c:	ldr	w20, [x28]
    2640:	ldur	w10, [x29, #-16]
    2644:	ldr	w27, [x24]
    2648:	cbz	w10, 26bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x126c>
    264c:	ldr	x8, [x19]
    2650:	cmn	x8, #0x2
    2654:	b.cs	364c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x21fc>  // b.hs, b.nlast
    2658:	ldur	x9, [x29, #-32]
    265c:	mov	w11, #0x25                  	// #37
    2660:	mul	w11, w8, w11
    2664:	sub	w10, w10, #0x1
    2668:	and	w11, w11, w10
    266c:	add	x0, x9, w11, uxtw #4
    2670:	ldr	x13, [x0]
    2674:	cmp	x8, x13
    2678:	b.eq	26e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1290>  // b.none
    267c:	mov	x12, xzr
    2680:	mov	w14, #0x1                   	// #1
    2684:	cmn	x13, #0x1
    2688:	b.eq	2724 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x12d4>  // b.none
    268c:	cmp	x12, #0x0
    2690:	add	w11, w11, w14
    2694:	mov	x15, #0xfffffffffffffffe    	// #-2
    2698:	ccmp	x13, x15, #0x0, eq  // eq = none
    269c:	and	w11, w11, w10
    26a0:	csel	x12, x12, x0, ne  // ne = any
    26a4:	add	x0, x9, w11, uxtw #4
    26a8:	ldr	x13, [x0]
    26ac:	add	w14, w14, #0x1
    26b0:	cmp	x8, x13
    26b4:	b.eq	26e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1290>  // b.none
    26b8:	b	2684 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1234>
    26bc:	mov	x3, xzr
    26c0:	sub	x0, x29, #0x28
    26c4:	mov	x1, x19
    26c8:	mov	x2, x19
    26cc:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    26d0:	ldr	x8, [x19]
    26d4:	str	wzr, [x0, #8]
    26d8:	str	x8, [x0]
    26dc:	ldp	x2, x1, [x29, #-120]
    26e0:	ldr	w9, [x0, #8]
    26e4:	madd	x8, x21, x25, x1
    26e8:	ldr	w10, [x8, #12]!
    26ec:	sub	w11, w20, w27
    26f0:	sub	w9, w11, w9
    26f4:	subs	w9, w10, w9
    26f8:	b.cc	362c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x21dc>  // b.lo, b.ul, b.last
    26fc:	str	w9, [x8]
    2700:	ldr	x8, [x22]
    2704:	sub	x9, x8, #0x1
    2708:	tst	x8, x9
    270c:	b.eq	2620 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11d0>  // b.none
    2710:	madd	x8, x21, x25, x1
    2714:	ldr	w9, [x8, #20]
    2718:	add	w9, w9, #0x1
    271c:	str	w9, [x8, #20]
    2720:	b	2620 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11d0>
    2724:	cmp	x12, #0x0
    2728:	csel	x3, x0, x12, eq  // eq = none
    272c:	b	26c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1270>
    2730:	ldr	x0, [sp, #32]
    2734:	mov	x1, xzr
    2738:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    273c:	ldp	x2, x1, [x29, #-120]
    2740:	ldr	w8, [x21, #184]
    2744:	b	2584 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1134>
    2748:	mov	x20, xzr
    274c:	mov	x22, xzr
    2750:	ldr	w8, [x21, #184]
    2754:	ldr	x23, [sp, #88]
    2758:	ldp	x0, x2, [x29, #-144]
    275c:	ldr	x1, [sp, #152]
    2760:	ldr	x3, [sp, #40]
    2764:	cbz	w8, 27d0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1380>
    2768:	ldr	x10, [x21, #176]
    276c:	add	x9, x8, x8, lsl #1
    2770:	mov	w8, #0x3f                  	// #63
    2774:	lsl	x9, x9, #3
    2778:	add	x10, x10, #0x10
    277c:	mov	w11, #0x1                   	// #1
    2780:	b	2790 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1340>
    2784:	subs	x9, x9, #0x18
    2788:	add	x10, x10, #0x18
    278c:	b.eq	27d0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1380>  // b.none
    2790:	ldur	x12, [x10, #-16]
    2794:	sub	x13, x12, #0x1
    2798:	tst	x12, x13
    279c:	b.eq	2784 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1334>  // b.none
    27a0:	ldrb	w13, [x10]
    27a4:	cbnz	w13, 2784 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1334>
    27a8:	clz	x13, x12
    27ac:	sub	w13, w8, w13
    27b0:	lsl	x13, x11, x13
    27b4:	cmp	x12, #0x0
    27b8:	csel	x13, xzr, x13, eq  // eq = none
    27bc:	eor	x12, x13, x12
    27c0:	bics	xzr, x12, x22
    27c4:	b.ne	2784 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1334>  // b.any
    27c8:	strb	w11, [x10]
    27cc:	b	2784 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1334>
    27d0:	ldur	w12, [x29, #-16]
    27d4:	ldp	x8, x11, [x29, #-40]
    27d8:	ldur	w13, [x29, #-24]
    27dc:	add	x9, x11, x12, lsl #4
    27e0:	mov	x10, x9
    27e4:	cbz	w13, 280c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13bc>
    27e8:	cbz	w12, 2918 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14c8>
    27ec:	lsl	x12, x12, #4
    27f0:	add	x10, x12, x11
    27f4:	ldr	x13, [x11]
    27f8:	cmn	x13, #0x2
    27fc:	b.cc	2928 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14d8>  // b.lo, b.ul, b.last
    2800:	subs	x12, x12, #0x10
    2804:	add	x11, x11, #0x10
    2808:	b.ne	27f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13a4>  // b.any
    280c:	cmp	x10, x9
    2810:	b.eq	2934 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14e4>  // b.none
    2814:	mov	w11, #0x1                   	// #1
    2818:	b	2828 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13d8>
    281c:	mov	x10, x12
    2820:	cmp	x10, x9
    2824:	b.eq	2934 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14e4>  // b.none
    2828:	cmp	w3, #0x2
    282c:	b.cc	28e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1494>  // b.lo, b.ul, b.last
    2830:	ldr	x12, [x2, #40]
    2834:	cbz	x12, 366c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x221c>
    2838:	ldur	w12, [x29, #-88]
    283c:	ldr	w13, [x2, #48]
    2840:	mov	w14, #0x30                  	// #48
    2844:	mov	w15, #0x1                   	// #1
    2848:	b	286c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x141c>
    284c:	ldur	x17, [x29, #-96]
    2850:	ldr	x18, [x17]
    2854:	orr	x16, x18, x16
    2858:	str	x16, [x17]
    285c:	add	x15, x15, #0x1
    2860:	cmp	x3, x15
    2864:	add	x14, x14, #0x20
    2868:	b.eq	28d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1488>  // b.none
    286c:	cmp	x15, x13
    2870:	b.cs	35ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x215c>  // b.hs, b.nlast
    2874:	ldr	x16, [x2, #32]
    2878:	ldr	w16, [x16, x14]
    287c:	cmn	w16, #0x1
    2880:	b.eq	285c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x140c>  // b.none
    2884:	cmp	x15, x1
    2888:	b.cs	35cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x217c>  // b.hs, b.nlast
    288c:	ldr	x16, [x0, x15, lsl #3]
    2890:	ldr	x17, [x10]
    2894:	cmp	x16, x17
    2898:	b.eq	285c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x140c>  // b.none
    289c:	and	x18, x17, x16
    28a0:	cmp	x18, x17
    28a4:	b.ne	285c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x140c>  // b.any
    28a8:	cbz	x16, 35ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x219c>
    28ac:	clz	x16, x16
    28b0:	eor	w16, w16, #0x3f
    28b4:	cmp	w12, w16
    28b8:	b.ls	360c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x21bc>  // b.plast
    28bc:	cmp	w12, #0x40
    28c0:	lsl	x16, x11, x16
    28c4:	b.hi	284c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13fc>  // b.pmore
    28c8:	ldur	x17, [x29, #-96]
    28cc:	orr	x16, x17, x16
    28d0:	stur	x16, [x29, #-96]
    28d4:	b	285c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x140c>
    28d8:	ldur	x12, [x29, #-40]
    28dc:	cmp	x12, x8
    28e0:	b.ne	370c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x22bc>  // b.any
    28e4:	add	x12, x10, #0x10
    28e8:	cmp	x12, x9
    28ec:	b.hi	36ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x225c>  // b.pmore
    28f0:	mov	x10, x9
    28f4:	b.eq	2820 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13d0>  // b.none
    28f8:	ldr	x10, [x12]
    28fc:	cmn	x10, #0x2
    2900:	b.cc	281c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13cc>  // b.lo, b.ul, b.last
    2904:	add	x12, x12, #0x10
    2908:	cmp	x9, x12
    290c:	b.ne	28f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14a8>  // b.any
    2910:	mov	x10, x9
    2914:	b	2820 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13d0>
    2918:	mov	x10, x11
    291c:	cmp	x10, x9
    2920:	b.ne	2814 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13c4>  // b.any
    2924:	b	2934 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14e4>
    2928:	mov	x10, x11
    292c:	cmp	x10, x9
    2930:	b.ne	2814 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13c4>  // b.any
    2934:	ldur	w19, [x29, #-88]
    2938:	cmp	w19, #0x41
    293c:	b.cs	2948 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14f8>  // b.hs, b.nlast
    2940:	sub	x8, x29, #0x60
    2944:	b	2960 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1510>
    2948:	sub	x0, x29, #0x60
    294c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    2950:	sub	w8, w19, w0
    2954:	cmp	w8, #0x41
    2958:	b.cs	37b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2368>  // b.hs, b.nlast
    295c:	ldur	x8, [x29, #-96]
    2960:	adrp	x9, 0 <_ZN4llvm9DebugFlagE>
    2964:	ldr	x8, [x8]
    2968:	ldr	x9, [x9]
    296c:	str	x20, [x21, #304]
    2970:	stp	x8, x22, [x21, #288]
    2974:	ldrb	w9, [x9]
    2978:	cbz	w9, 2dbc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x196c>
    297c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2980:	add	x0, x0, #0x0
    2984:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2988:	tbz	w0, #0, 2dbc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x196c>
    298c:	ldr	w8, [x21, #184]
    2990:	cbz	w8, 2bd0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1780>
    2994:	ldr	x9, [sp, #96]
    2998:	adrp	x19, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    299c:	adrp	x24, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    29a0:	adrp	x25, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    29a4:	ldr	x20, [x9, #176]
    29a8:	mov	w9, #0x18                  	// #24
    29ac:	adrp	x26, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    29b0:	add	x19, x19, #0x0
    29b4:	mov	w21, #0x10                  	// #16
    29b8:	mov	w22, #0x1                   	// #1
    29bc:	add	x24, x24, #0x0
    29c0:	add	x25, x25, #0x0
    29c4:	add	x26, x26, #0x0
    29c8:	mov	w27, #0x3d                  	// #61
    29cc:	mov	w28, #0x202c                	// #8236
    29d0:	madd	x23, x8, x9, x20
    29d4:	b	29f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15a4>
    29d8:	add	x9, x8, #0x1
    29dc:	str	x9, [x0, #24]
    29e0:	mov	w9, #0xa                   	// #10
    29e4:	strb	w9, [x8]
    29e8:	add	x20, x20, #0x18
    29ec:	cmp	x20, x23
    29f0:	b.eq	2bd0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1780>  // b.none
    29f4:	bl	0 <_ZN4llvm4dbgsEv>
    29f8:	ldp	x9, x8, [x0, #16]
    29fc:	sub	x9, x9, x8
    2a00:	cmp	x9, #0xf
    2a04:	b.hi	2a18 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15c8>  // b.pmore
    2a08:	mov	w2, #0x10                  	// #16
    2a0c:	mov	x1, x19
    2a10:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2a14:	b	2a2c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15dc>
    2a18:	ldr	q0, [x19]
    2a1c:	str	q0, [x8]
    2a20:	ldr	x8, [x0, #24]
    2a24:	add	x8, x8, #0x10
    2a28:	str	x8, [x0, #24]
    2a2c:	ldr	x8, [x20]
    2a30:	sub	x1, x29, #0x50
    2a34:	stur	w21, [x29, #-64]
    2a38:	sturh	w22, [x29, #-60]
    2a3c:	stp	x8, xzr, [x29, #-80]
    2a40:	sturb	w22, [x29, #-58]
    2a44:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    2a48:	ldp	x9, x8, [x0, #16]
    2a4c:	sub	x9, x9, x8
    2a50:	cmp	x9, #0x1
    2a54:	b.hi	2a6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x161c>  // b.pmore
    2a58:	mov	w2, #0x2                   	// #2
    2a5c:	mov	x1, x24
    2a60:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2a64:	ldr	x8, [x0, #24]
    2a68:	b	2a7c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x162c>
    2a6c:	strh	w28, [x8]
    2a70:	ldr	x8, [x0, #24]
    2a74:	add	x8, x8, #0x2
    2a78:	str	x8, [x0, #24]
    2a7c:	ldr	x9, [x0, #16]
    2a80:	sub	x9, x9, x8
    2a84:	cmp	x9, #0x8
    2a88:	b.hi	2a9c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x164c>  // b.pmore
    2a8c:	mov	w2, #0x9                   	// #9
    2a90:	mov	x1, x25
    2a94:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2a98:	b	2ab4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1664>
    2a9c:	ldr	x9, [x25]
    2aa0:	strb	w27, [x8, #8]
    2aa4:	str	x9, [x8]
    2aa8:	ldr	x8, [x0, #24]
    2aac:	add	x8, x8, #0x9
    2ab0:	str	x8, [x0, #24]
    2ab4:	ldrb	w1, [x20, #16]
    2ab8:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    2abc:	ldp	x9, x8, [x0, #16]
    2ac0:	sub	x9, x9, x8
    2ac4:	cmp	x9, #0x1
    2ac8:	b.hi	2ae0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1690>  // b.pmore
    2acc:	mov	w2, #0x2                   	// #2
    2ad0:	mov	x1, x24
    2ad4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2ad8:	ldr	x8, [x0, #24]
    2adc:	b	2af0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x16a0>
    2ae0:	strh	w28, [x8]
    2ae4:	ldr	x8, [x0, #24]
    2ae8:	add	x8, x8, #0x2
    2aec:	str	x8, [x0, #24]
    2af0:	ldr	x9, [x0, #16]
    2af4:	sub	x9, x9, x8
    2af8:	cmp	x9, #0x6
    2afc:	b.hi	2b10 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x16c0>  // b.pmore
    2b00:	mov	w2, #0x7                   	// #7
    2b04:	mov	x1, x26
    2b08:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2b0c:	b	2b34 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x16e4>
    2b10:	mov	w9, #0x7469                	// #29801
    2b14:	movk	w9, #0x3d73, lsl #16
    2b18:	stur	w9, [x8, #3]
    2b1c:	mov	w9, #0x5523                	// #21795
    2b20:	movk	w9, #0x696e, lsl #16
    2b24:	str	w9, [x8]
    2b28:	ldr	x8, [x0, #24]
    2b2c:	add	x8, x8, #0x7
    2b30:	str	x8, [x0, #24]
    2b34:	ldr	w1, [x20, #20]
    2b38:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2b3c:	ldp	x9, x8, [x0, #16]
    2b40:	sub	x9, x9, x8
    2b44:	cmp	x9, #0x1
    2b48:	b.hi	2b60 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1710>  // b.pmore
    2b4c:	mov	w2, #0x2                   	// #2
    2b50:	mov	x1, x24
    2b54:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2b58:	ldr	x8, [x0, #24]
    2b5c:	b	2b70 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1720>
    2b60:	strh	w28, [x8]
    2b64:	ldr	x8, [x0, #24]
    2b68:	add	x8, x8, #0x2
    2b6c:	str	x8, [x0, #24]
    2b70:	ldr	x9, [x0, #16]
    2b74:	sub	x9, x9, x8
    2b78:	cmp	x9, #0x2
    2b7c:	b.hi	2b94 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1744>  // b.pmore
    2b80:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2b84:	mov	w2, #0x3                   	// #3
    2b88:	add	x1, x1, #0x0
    2b8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2b90:	b	2bac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x175c>
    2b94:	mov	w9, #0x7963                	// #31075
    2b98:	strb	w27, [x8, #2]
    2b9c:	strh	w9, [x8]
    2ba0:	ldr	x8, [x0, #24]
    2ba4:	add	x8, x8, #0x3
    2ba8:	str	x8, [x0, #24]
    2bac:	ldp	w9, w8, [x20, #8]
    2bb0:	sub	w1, w8, w9
    2bb4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2bb8:	ldp	x9, x8, [x0, #16]
    2bbc:	cmp	x8, x9
    2bc0:	b.cc	29d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1588>  // b.lo, b.ul, b.last
    2bc4:	mov	w1, #0xa                   	// #10
    2bc8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2bcc:	b	29e8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1598>
    2bd0:	ldr	x8, [sp, #96]
    2bd4:	ldr	x20, [x8, #288]
    2bd8:	cbz	x20, 2c84 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1834>
    2bdc:	adrp	x19, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2be0:	add	x19, x19, #0x0
    2be4:	mov	w21, #0x10                  	// #16
    2be8:	mov	w22, #0x1                   	// #1
    2bec:	mov	w23, #0xa                   	// #10
    2bf0:	b	2c08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x17b8>
    2bf4:	add	x9, x8, #0x1
    2bf8:	str	x9, [x0, #24]
    2bfc:	strb	w23, [x8]
    2c00:	eor	x20, x24, x20
    2c04:	cbz	x20, 2c84 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1834>
    2c08:	neg	x8, x20
    2c0c:	and	x24, x20, x8
    2c10:	bl	0 <_ZN4llvm4dbgsEv>
    2c14:	ldp	x9, x8, [x0, #16]
    2c18:	sub	x9, x9, x8
    2c1c:	cmp	x9, #0xd
    2c20:	b.hi	2c34 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x17e4>  // b.pmore
    2c24:	mov	w2, #0xe                   	// #14
    2c28:	mov	x1, x19
    2c2c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2c30:	b	2c50 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1800>
    2c34:	ldur	x9, [x19, #6]
    2c38:	ldr	x10, [x19]
    2c3c:	stur	x9, [x8, #6]
    2c40:	str	x10, [x8]
    2c44:	ldr	x8, [x0, #24]
    2c48:	add	x8, x8, #0xe
    2c4c:	str	x8, [x0, #24]
    2c50:	sub	x1, x29, #0x50
    2c54:	stp	x24, xzr, [x29, #-80]
    2c58:	stur	w21, [x29, #-64]
    2c5c:	sturh	w22, [x29, #-60]
    2c60:	sturb	w22, [x29, #-58]
    2c64:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    2c68:	ldp	x9, x8, [x0, #16]
    2c6c:	cmp	x8, x9
    2c70:	b.cc	2bf4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x17a4>  // b.lo, b.ul, b.last
    2c74:	mov	w1, #0xa                   	// #10
    2c78:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2c7c:	eor	x20, x24, x20
    2c80:	cbnz	x20, 2c08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x17b8>
    2c84:	bl	0 <_ZN4llvm4dbgsEv>
    2c88:	ldp	x9, x8, [x0, #16]
    2c8c:	sub	x9, x9, x8
    2c90:	cmp	x9, #0xd
    2c94:	b.hi	2cac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x185c>  // b.pmore
    2c98:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2c9c:	add	x1, x1, #0x0
    2ca0:	mov	w2, #0xe                   	// #14
    2ca4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2ca8:	b	2cd0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1880>
    2cac:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2cb0:	add	x9, x9, #0x0
    2cb4:	ldur	x10, [x9, #6]
    2cb8:	ldr	x9, [x9]
    2cbc:	stur	x10, [x8, #6]
    2cc0:	str	x9, [x8]
    2cc4:	ldr	x8, [x0, #24]
    2cc8:	add	x8, x8, #0xe
    2ccc:	str	x8, [x0, #24]
    2cd0:	ldr	x21, [sp, #96]
    2cd4:	mov	w9, #0x10                  	// #16
    2cd8:	mov	w10, #0x1                   	// #1
    2cdc:	sub	x1, x29, #0x50
    2ce0:	ldr	x8, [x21, #296]
    2ce4:	stur	w9, [x29, #-64]
    2ce8:	sturh	w10, [x29, #-60]
    2cec:	sturb	w10, [x29, #-58]
    2cf0:	stp	x8, xzr, [x29, #-80]
    2cf4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    2cf8:	ldp	x9, x8, [x0, #16]
    2cfc:	ldr	x23, [sp, #88]
    2d00:	cmp	x8, x9
    2d04:	b.cs	2d1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x18cc>  // b.hs, b.nlast
    2d08:	add	x9, x8, #0x1
    2d0c:	mov	w10, #0xa                   	// #10
    2d10:	str	x9, [x0, #24]
    2d14:	strb	w10, [x8]
    2d18:	b	2d24 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x18d4>
    2d1c:	mov	w1, #0xa                   	// #10
    2d20:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2d24:	bl	0 <_ZN4llvm4dbgsEv>
    2d28:	ldp	x9, x8, [x0, #16]
    2d2c:	sub	x9, x9, x8
    2d30:	cmp	x9, #0xd
    2d34:	b.hi	2d4c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x18fc>  // b.pmore
    2d38:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2d3c:	add	x1, x1, #0x0
    2d40:	mov	w2, #0xe                   	// #14
    2d44:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2d48:	b	2d70 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1920>
    2d4c:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2d50:	add	x9, x9, #0x0
    2d54:	ldur	x10, [x9, #6]
    2d58:	ldr	x9, [x9]
    2d5c:	stur	x10, [x8, #6]
    2d60:	str	x9, [x8]
    2d64:	ldr	x8, [x0, #24]
    2d68:	add	x8, x8, #0xe
    2d6c:	str	x8, [x0, #24]
    2d70:	ldr	x8, [x21, #304]
    2d74:	mov	w9, #0x10                  	// #16
    2d78:	mov	w10, #0x1                   	// #1
    2d7c:	sub	x1, x29, #0x50
    2d80:	stur	w9, [x29, #-64]
    2d84:	sturh	w10, [x29, #-60]
    2d88:	stp	x8, xzr, [x29, #-80]
    2d8c:	sturb	w10, [x29, #-58]
    2d90:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    2d94:	ldp	x9, x8, [x0, #16]
    2d98:	cmp	x8, x9
    2d9c:	b.cs	2db4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1964>  // b.hs, b.nlast
    2da0:	add	x9, x8, #0x1
    2da4:	mov	w10, #0xa                   	// #10
    2da8:	str	x9, [x0, #24]
    2dac:	strb	w10, [x8]
    2db0:	b	2dbc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x196c>
    2db4:	mov	w1, #0xa                   	// #10
    2db8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2dbc:	ldur	w8, [x29, #-88]
    2dc0:	cmp	w8, #0x41
    2dc4:	b.cc	2dd4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1984>  // b.lo, b.ul, b.last
    2dc8:	ldur	x0, [x29, #-96]
    2dcc:	cbz	x0, 2dd4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1984>
    2dd0:	bl	0 <_ZdaPv>
    2dd4:	ldur	x0, [x29, #-32]
    2dd8:	bl	0 <_ZdlPv>
    2ddc:	ldur	x0, [x29, #-112]
    2de0:	cbz	x0, 2de8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1998>
    2de4:	bl	0 <_ZdlPv>
    2de8:	ldr	x8, [sp, #56]
    2dec:	mov	w19, #0x64                  	// #100
    2df0:	ldrb	w8, [x8]
    2df4:	tbnz	w8, #6, 2e10 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x19c0>
    2df8:	ldr	x8, [sp, #144]
    2dfc:	ldr	x1, [sp, #120]
    2e00:	ldr	x0, [x8]
    2e04:	bl	0 <_ZN4llvm12MCSchedModel19computeInstrLatencyERKNS_15MCSubtargetInfoERKNS_16MCSchedClassDescE>
    2e08:	cmp	w0, #0x0
    2e0c:	csel	w19, w19, w0, lt  // lt = tstop
    2e10:	ldp	x8, x13, [sp, #72]
    2e14:	str	w19, [x21, #312]
    2e18:	add	x8, x8, x13, lsl #6
    2e1c:	ldrb	w10, [x8, #4]
    2e20:	ldr	x8, [sp, #64]
    2e24:	ldr	w8, [x8, #24]
    2e28:	cbz	w10, 2e64 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a14>
    2e2c:	cbz	w8, 2e64 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a14>
    2e30:	ldr	x9, [sp, #64]
    2e34:	ldr	x11, [x9, #16]
    2e38:	mov	x9, xzr
    2e3c:	ldrb	w12, [x11], #16
    2e40:	add	x9, x9, #0x1
    2e44:	cmp	w12, #0x1
    2e48:	cset	w12, eq  // eq = none
    2e4c:	cmp	x9, x8
    2e50:	sub	w10, w10, w12
    2e54:	b.cs	2e5c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a0c>  // b.hs, b.nlast
    2e58:	cbnz	w10, 2e3c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x19ec>
    2e5c:	cbnz	w10, 2e68 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a18>
    2e60:	b	2f20 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ad0>
    2e64:	cbz	w10, 2f1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1acc>
    2e68:	mov	w0, #0x30                  	// #48
    2e6c:	bl	0 <_Znwm>
    2e70:	sub	x8, x29, #0x28
    2e74:	mov	x19, x0
    2e78:	mov	w9, #0x2b                  	// #43
    2e7c:	add	x20, x8, #0x10
    2e80:	sub	x0, x29, #0x28
    2e84:	sub	x1, x29, #0x50
    2e88:	mov	x2, xzr
    2e8c:	stur	x20, [x29, #-40]
    2e90:	stur	x9, [x29, #-80]
    2e94:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    2e98:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2e9c:	add	x9, x9, #0x0
    2ea0:	ldur	x8, [x29, #-80]
    2ea4:	ldur	q0, [x9, #27]
    2ea8:	ldp	q1, q2, [x9]
    2eac:	stur	x0, [x29, #-40]
    2eb0:	stur	x8, [x29, #-24]
    2eb4:	stur	q0, [x0, #27]
    2eb8:	stp	q1, q2, [x0]
    2ebc:	stur	x8, [x29, #-32]
    2ec0:	strb	wzr, [x0, x8]
    2ec4:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2ec8:	ldur	x8, [x29, #-40]
    2ecc:	ldr	x10, [x10]
    2ed0:	add	x9, x19, #0x18
    2ed4:	cmp	x8, x20
    2ed8:	add	x10, x10, #0x10
    2edc:	stp	x10, x9, [x19]
    2ee0:	b.eq	2ef4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1aa4>  // b.none
    2ee4:	ldur	x9, [x29, #-24]
    2ee8:	str	x8, [x19, #8]
    2eec:	str	x9, [x19, #24]
    2ef0:	b	2efc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1aac>
    2ef4:	ldr	q0, [x20]
    2ef8:	str	q0, [x9]
    2efc:	ldr	x8, [sp, #64]
    2f00:	ldur	x9, [x29, #-32]
    2f04:	ldr	x20, [sp, #144]
    2f08:	str	x8, [x19, #40]
    2f0c:	orr	x8, x19, #0x1
    2f10:	str	x9, [x19, #16]
    2f14:	stur	x8, [x29, #-104]
    2f18:	b	30c8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c78>
    2f1c:	mov	w9, wzr
    2f20:	ldr	x10, [sp, #56]
    2f24:	ldr	x20, [sp, #144]
    2f28:	ldrb	w10, [x10]
    2f2c:	tbnz	w10, #2, 2f3c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1aec>
    2f30:	mov	w8, #0x1                   	// #1
    2f34:	stur	x8, [x29, #-104]
    2f38:	b	30c8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c78>
    2f3c:	ldr	x10, [sp, #72]
    2f40:	add	x10, x10, x13, lsl #6
    2f44:	ldrh	w10, [x10, #2]
    2f48:	sub	w10, w10, #0x1
    2f4c:	cmp	w8, w10
    2f50:	b.ls	3800 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x23b0>  // b.plast
    2f54:	cmp	w9, w8
    2f58:	b.eq	2f74 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b24>  // b.none
    2f5c:	ldr	x8, [sp, #64]
    2f60:	lsl	x9, x10, #4
    2f64:	ldr	x8, [x8, #16]
    2f68:	ldrb	w8, [x8, x9]
    2f6c:	cmp	w8, #0x1
    2f70:	b.eq	2f30 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ae0>  // b.none
    2f74:	sub	x8, x29, #0x50
    2f78:	mov	w9, #0x64                  	// #100
    2f7c:	add	x21, x8, #0x10
    2f80:	sub	x0, x29, #0x50
    2f84:	sub	x1, x29, #0x28
    2f88:	mov	x2, xzr
    2f8c:	stur	x21, [x29, #-80]
    2f90:	stur	x9, [x29, #-40]
    2f94:	sub	x22, x29, #0x28
    2f98:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    2f9c:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    2fa0:	add	x9, x9, #0x0
    2fa4:	ldur	x8, [x29, #-40]
    2fa8:	ldp	q0, q1, [x9]
    2fac:	ldp	q2, q3, [x9, #64]
    2fb0:	stur	x0, [x29, #-80]
    2fb4:	stur	x8, [x29, #-64]
    2fb8:	stp	q0, q1, [x0]
    2fbc:	ldp	q0, q1, [x9, #32]
    2fc0:	mov	w9, #0x657a                	// #25978
    2fc4:	movk	w9, #0x2e64, lsl #16
    2fc8:	str	w9, [x0, #96]
    2fcc:	stp	q2, q3, [x0, #64]
    2fd0:	stp	q0, q1, [x0, #32]
    2fd4:	stur	x8, [x29, #-72]
    2fd8:	strb	wzr, [x0, x8]
    2fdc:	mov	w0, #0x30                  	// #48
    2fe0:	bl	0 <_Znwm>
    2fe4:	ldp	x20, x24, [x29, #-80]
    2fe8:	mov	x19, x0
    2fec:	add	x22, x22, #0x10
    2ff0:	stur	x22, [x29, #-40]
    2ff4:	cbnz	x20, 2ffc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1bac>
    2ff8:	cbnz	x24, 3820 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x23d0>
    2ffc:	cmp	x24, #0x10
    3000:	mov	x0, x22
    3004:	stur	x24, [x29, #-96]
    3008:	b.cc	3028 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1bd8>  // b.lo, b.ul, b.last
    300c:	sub	x0, x29, #0x28
    3010:	sub	x1, x29, #0x60
    3014:	mov	x2, xzr
    3018:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    301c:	ldur	x8, [x29, #-96]
    3020:	stur	x0, [x29, #-40]
    3024:	stur	x8, [x29, #-24]
    3028:	cbz	x24, 304c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1bfc>
    302c:	cmp	x24, #0x1
    3030:	b.ne	3040 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1bf0>  // b.any
    3034:	ldrb	w8, [x20]
    3038:	strb	w8, [x0]
    303c:	b	304c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1bfc>
    3040:	mov	x1, x20
    3044:	mov	x2, x24
    3048:	bl	0 <memcpy>
    304c:	ldur	x8, [x29, #-96]
    3050:	ldur	x9, [x29, #-40]
    3054:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3058:	stur	x8, [x29, #-32]
    305c:	strb	wzr, [x9, x8]
    3060:	ldur	x8, [x29, #-40]
    3064:	ldr	x10, [x10]
    3068:	add	x9, x19, #0x18
    306c:	cmp	x8, x22
    3070:	add	x10, x10, #0x10
    3074:	stp	x10, x9, [x19]
    3078:	b.eq	308c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c3c>  // b.none
    307c:	ldur	x9, [x29, #-24]
    3080:	str	x8, [x19, #8]
    3084:	str	x9, [x19, #24]
    3088:	b	3094 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c44>
    308c:	ldr	q0, [x22]
    3090:	str	q0, [x9]
    3094:	ldur	x0, [x29, #-80]
    3098:	ldr	x8, [sp, #64]
    309c:	ldur	x9, [x29, #-32]
    30a0:	cmp	x0, x21
    30a4:	str	x8, [x19, #40]
    30a8:	orr	x8, x19, #0x1
    30ac:	str	x9, [x19, #16]
    30b0:	stur	x8, [x29, #-104]
    30b4:	b.eq	30c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c70>  // b.none
    30b8:	bl	0 <_ZdlPv>
    30bc:	ldur	x8, [x29, #-104]
    30c0:	ldr	x20, [sp, #144]
    30c4:	ldr	x21, [sp, #96]
    30c8:	tst	x8, #0xfffffffffffffffe
    30cc:	and	x10, x8, #0xfffffffffffffffe
    30d0:	cset	w9, ne  // ne = any
    30d4:	orr	x9, x10, x9
    30d8:	stur	x9, [x29, #-104]
    30dc:	cbz	x10, 30ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c9c>
    30e0:	ldrb	w9, [x23, #8]
    30e4:	stur	xzr, [x29, #-104]
    30e8:	b	328c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e3c>
    30ec:	cbnz	x9, 37d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2388>
    30f0:	ldr	x19, [sp, #64]
    30f4:	ldr	x22, [sp, #48]
    30f8:	mov	x0, x20
    30fc:	mov	x1, x21
    3100:	mov	x2, x19
    3104:	mov	w3, w22
    3108:	bl	7c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj>
    310c:	mov	x0, x20
    3110:	mov	x1, x21
    3114:	mov	x2, x19
    3118:	mov	w3, w22
    311c:	bl	c04 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj>
    3120:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    3124:	ldr	x8, [x8]
    3128:	ldrb	w8, [x8]
    312c:	cbz	w8, 3258 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e08>
    3130:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3134:	add	x0, x0, #0x0
    3138:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    313c:	tbz	w0, #0, 31bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d6c>
    3140:	bl	0 <_ZN4llvm4dbgsEv>
    3144:	ldp	x9, x8, [x0, #16]
    3148:	sub	x9, x9, x8
    314c:	cmp	x9, #0xc
    3150:	b.hi	3168 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d18>  // b.pmore
    3154:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3158:	add	x1, x1, #0x0
    315c:	mov	w2, #0xd                   	// #13
    3160:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3164:	b	318c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d3c>
    3168:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    316c:	add	x9, x9, #0x0
    3170:	ldur	x10, [x9, #5]
    3174:	ldr	x9, [x9]
    3178:	stur	x10, [x8, #5]
    317c:	str	x9, [x8]
    3180:	ldr	x8, [x0, #24]
    3184:	add	x8, x8, #0xd
    3188:	str	x8, [x0, #24]
    318c:	ldr	w1, [x21, #312]
    3190:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    3194:	ldp	x9, x8, [x0, #16]
    3198:	cmp	x8, x9
    319c:	b.cs	31b4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d64>  // b.hs, b.nlast
    31a0:	add	x9, x8, #0x1
    31a4:	mov	w10, #0xa                   	// #10
    31a8:	str	x9, [x0, #24]
    31ac:	strb	w10, [x8]
    31b0:	b	31bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d6c>
    31b4:	mov	w1, #0xa                   	// #10
    31b8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    31bc:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
    31c0:	ldr	x8, [x8]
    31c4:	ldrb	w8, [x8]
    31c8:	cbz	w8, 3258 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e08>
    31cc:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    31d0:	add	x0, x0, #0x0
    31d4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    31d8:	tbz	w0, #0, 3258 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e08>
    31dc:	bl	0 <_ZN4llvm4dbgsEv>
    31e0:	ldp	x9, x8, [x0, #16]
    31e4:	sub	x9, x9, x8
    31e8:	cmp	x9, #0xd
    31ec:	b.hi	3204 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1db4>  // b.pmore
    31f0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    31f4:	add	x1, x1, #0x0
    31f8:	mov	w2, #0xe                   	// #14
    31fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3200:	b	3228 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1dd8>
    3204:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3208:	add	x9, x9, #0x0
    320c:	ldur	x10, [x9, #6]
    3210:	ldr	x9, [x9]
    3214:	stur	x10, [x8, #6]
    3218:	str	x9, [x8]
    321c:	ldr	x8, [x0, #24]
    3220:	add	x8, x8, #0xe
    3224:	str	x8, [x0, #24]
    3228:	ldr	w1, [x21, #316]
    322c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    3230:	ldp	x9, x8, [x0, #16]
    3234:	cmp	x8, x9
    3238:	b.cs	3250 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e00>  // b.hs, b.nlast
    323c:	add	x9, x8, #0x1
    3240:	mov	w10, #0xa                   	// #10
    3244:	str	x9, [x0, #24]
    3248:	strb	w10, [x8]
    324c:	b	3258 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e08>
    3250:	mov	w1, #0xa                   	// #10
    3254:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    3258:	ldr	x2, [sp, #64]
    325c:	sub	x8, x29, #0x28
    3260:	mov	x1, x21
    3264:	bl	131c <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE>
    3268:	ldur	x8, [x29, #-40]
    326c:	tst	x8, #0xfffffffffffffffe
    3270:	and	x10, x8, #0xfffffffffffffffe
    3274:	cset	w9, ne  // ne = any
    3278:	orr	x9, x10, x9
    327c:	stur	x9, [x29, #-40]
    3280:	cbz	x10, 3308 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1eb8>
    3284:	ldrb	w9, [x23, #8]
    3288:	stur	xzr, [x29, #-40]
    328c:	orr	w9, w9, #0x3
    3290:	ands	x8, x8, #0xfffffffffffffffe
    3294:	strb	w9, [x23, #8]
    3298:	b.eq	3778 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2328>  // b.none
    329c:	str	x8, [x23]
    32a0:	ldr	x8, [sp, #32]
    32a4:	ldr	x9, [sp, #8]
    32a8:	ldr	x0, [x8]
    32ac:	cmp	x0, x9
    32b0:	b.eq	32b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e68>  // b.none
    32b4:	bl	0 <free>
    32b8:	ldr	x0, [x21, #96]
    32bc:	ldr	x8, [sp, #16]
    32c0:	cmp	x0, x8
    32c4:	b.eq	32cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e7c>  // b.none
    32c8:	bl	0 <free>
    32cc:	ldr	x0, [x21]
    32d0:	ldr	x8, [sp, #24]
    32d4:	cmp	x0, x8
    32d8:	b.eq	32e0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e90>  // b.none
    32dc:	bl	0 <free>
    32e0:	mov	x0, x21
    32e4:	bl	0 <_ZdlPv>
    32e8:	ldp	x20, x19, [sp, #384]
    32ec:	ldp	x22, x21, [sp, #368]
    32f0:	ldp	x24, x23, [sp, #352]
    32f4:	ldp	x26, x25, [sp, #336]
    32f8:	ldp	x28, x27, [sp, #320]
    32fc:	ldp	x29, x30, [sp, #304]
    3300:	add	sp, sp, #0x190
    3304:	ret
    3308:	cbnz	x9, 382c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x23dc>
    330c:	ldr	w9, [sp, #4]
    3310:	ldr	x11, [sp, #144]
    3314:	mov	w8, #0x3ffe                	// #16382
    3318:	cmp	w9, w8
    331c:	b.eq	33c4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f74>  // b.none
    3320:	ldr	x8, [sp, #56]
    3324:	ldr	x8, [x8]
    3328:	tbnz	w8, #1, 33c4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f74>
    332c:	ldr	x8, [sp, #64]
    3330:	add	x19, x11, #0x70
    3334:	ldr	w8, [x8]
    3338:	sturh	w8, [x29, #-40]
    333c:	ldr	w10, [x11, #136]
    3340:	cbz	w10, 344c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ffc>
    3344:	and	x8, x8, #0xffff
    3348:	mov	w9, #0xfffe                	// #65534
    334c:	cmp	w8, w9
    3350:	b.cs	3834 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x23e4>  // b.hs, b.nlast
    3354:	ldr	x9, [x11, #120]
    3358:	mov	w11, #0x25                  	// #37
    335c:	mul	x11, x8, x11
    3360:	sub	w10, w10, #0x1
    3364:	and	x11, x10, x11
    3368:	add	x0, x9, x11, lsl #4
    336c:	ldrh	w14, [x0]
    3370:	cmp	w14, w8
    3374:	b.eq	346c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x201c>  // b.none
    3378:	ldp	x23, x21, [sp, #88]
    337c:	mov	x12, xzr
    3380:	mov	w15, #0x1                   	// #1
    3384:	mov	w13, #0xfffe                	// #65534
    3388:	mvn	w16, w14
    338c:	tst	w16, #0xffff
    3390:	b.eq	358c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x213c>  // b.none
    3394:	and	w14, w14, #0xffff
    3398:	cmp	x12, #0x0
    339c:	add	w11, w11, w15
    33a0:	ccmp	w14, w13, #0x0, eq  // eq = none
    33a4:	and	w11, w11, w10
    33a8:	csel	x12, x12, x0, ne  // ne = any
    33ac:	add	x0, x9, w11, uxtw #4
    33b0:	ldrh	w14, [x0]
    33b4:	add	w15, w15, #0x1
    33b8:	cmp	w14, w8
    33bc:	b.eq	346c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x201c>  // b.none
    33c0:	b	3388 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f38>
    33c4:	ldr	x8, [sp, #64]
    33c8:	add	x19, x11, #0x90
    33cc:	sub	x1, x29, #0x28
    33d0:	mov	x0, x19
    33d4:	stur	x8, [x29, #-40]
    33d8:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    33dc:	ldr	x20, [x0]
    33e0:	str	x21, [x0]
    33e4:	cbz	x20, 342c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fdc>
    33e8:	ldr	x0, [x20, #176]
    33ec:	add	x8, x20, #0xc0
    33f0:	cmp	x0, x8
    33f4:	b.eq	33fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fac>  // b.none
    33f8:	bl	0 <free>
    33fc:	ldr	x0, [x20, #96]
    3400:	add	x8, x20, #0x70
    3404:	cmp	x0, x8
    3408:	b.eq	3410 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fc0>  // b.none
    340c:	bl	0 <free>
    3410:	mov	x8, x20
    3414:	ldr	x0, [x8], #16
    3418:	cmp	x0, x8
    341c:	b.eq	3424 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fd4>  // b.none
    3420:	bl	0 <free>
    3424:	mov	x0, x20
    3428:	bl	0 <_ZdlPv>
    342c:	ldr	x8, [sp, #64]
    3430:	sub	x1, x29, #0x28
    3434:	mov	x0, x19
    3438:	stur	x8, [x29, #-40]
    343c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3440:	ldrb	w8, [x23, #8]
    3444:	ldr	x9, [x0]
    3448:	b	3578 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2128>
    344c:	mov	x3, xzr
    3450:	sub	x1, x29, #0x28
    3454:	sub	x2, x29, #0x28
    3458:	mov	x0, x19
    345c:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3460:	ldurh	w8, [x29, #-40]
    3464:	str	xzr, [x0, #8]
    3468:	strh	w8, [x0]
    346c:	ldr	x20, [x0, #8]
    3470:	str	x21, [x0, #8]
    3474:	cbz	x20, 34bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x206c>
    3478:	ldr	x0, [x20, #176]
    347c:	add	x8, x20, #0xc0
    3480:	cmp	x0, x8
    3484:	b.eq	348c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x203c>  // b.none
    3488:	bl	0 <free>
    348c:	ldr	x0, [x20, #96]
    3490:	add	x8, x20, #0x70
    3494:	cmp	x0, x8
    3498:	b.eq	34a0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2050>  // b.none
    349c:	bl	0 <free>
    34a0:	mov	x8, x20
    34a4:	ldr	x0, [x8], #16
    34a8:	cmp	x0, x8
    34ac:	b.eq	34b4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2064>  // b.none
    34b0:	bl	0 <free>
    34b4:	mov	x0, x20
    34b8:	bl	0 <_ZdlPv>
    34bc:	ldr	x8, [sp, #64]
    34c0:	ldr	w8, [x8]
    34c4:	sturh	w8, [x29, #-40]
    34c8:	ldr	w10, [x19, #24]
    34cc:	cbz	w10, 3550 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2100>
    34d0:	and	x8, x8, #0xffff
    34d4:	mov	w9, #0xfffe                	// #65534
    34d8:	cmp	w8, w9
    34dc:	b.cs	3834 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x23e4>  // b.hs, b.nlast
    34e0:	ldr	x9, [x19, #8]
    34e4:	mov	w11, #0x25                  	// #37
    34e8:	mul	x11, x8, x11
    34ec:	sub	w10, w10, #0x1
    34f0:	and	x11, x10, x11
    34f4:	add	x0, x9, x11, lsl #4
    34f8:	ldrh	w14, [x0]
    34fc:	cmp	w14, w8
    3500:	b.eq	3570 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2120>  // b.none
    3504:	ldr	x23, [sp, #88]
    3508:	mov	x12, xzr
    350c:	mov	w15, #0x1                   	// #1
    3510:	mov	w13, #0xfffe                	// #65534
    3514:	mvn	w16, w14
    3518:	tst	w16, #0xffff
    351c:	b.eq	359c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x214c>  // b.none
    3520:	and	w14, w14, #0xffff
    3524:	cmp	x12, #0x0
    3528:	add	w11, w11, w15
    352c:	ccmp	w14, w13, #0x0, eq  // eq = none
    3530:	and	w11, w11, w10
    3534:	csel	x12, x12, x0, ne  // ne = any
    3538:	add	x0, x9, w11, uxtw #4
    353c:	ldrh	w14, [x0]
    3540:	add	w15, w15, #0x1
    3544:	cmp	w14, w8
    3548:	b.eq	3570 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2120>  // b.none
    354c:	b	3514 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20c4>
    3550:	mov	x3, xzr
    3554:	sub	x1, x29, #0x28
    3558:	sub	x2, x29, #0x28
    355c:	mov	x0, x19
    3560:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3564:	ldurh	w8, [x29, #-40]
    3568:	str	xzr, [x0, #8]
    356c:	strh	w8, [x0]
    3570:	ldrb	w8, [x23, #8]
    3574:	ldr	x9, [x0, #8]
    3578:	and	w8, w8, #0xfc
    357c:	orr	w8, w8, #0x2
    3580:	strb	w8, [x23, #8]
    3584:	str	x9, [x23]
    3588:	b	32e8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e98>
    358c:	ldp	x23, x21, [sp, #88]
    3590:	cmp	x12, #0x0
    3594:	csel	x3, x0, x12, eq  // eq = none
    3598:	b	3450 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2000>
    359c:	ldr	x23, [sp, #88]
    35a0:	cmp	x12, #0x0
    35a4:	csel	x3, x0, x12, eq  // eq = none
    35a8:	b	3554 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2104>
    35ac:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    35b0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    35b4:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    35b8:	add	x0, x0, #0x0
    35bc:	add	x1, x1, #0x0
    35c0:	add	x3, x3, #0x0
    35c4:	mov	w2, #0x156                 	// #342
    35c8:	bl	0 <__assert_fail>
    35cc:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    35d0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    35d4:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    35d8:	add	x0, x0, #0x0
    35dc:	add	x1, x1, #0x0
    35e0:	add	x3, x3, #0x0
    35e4:	mov	w2, #0xfa                  	// #250
    35e8:	bl	0 <__assert_fail>
    35ec:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    35f0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    35f4:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    35f8:	add	x0, x0, #0x0
    35fc:	add	x1, x1, #0x0
    3600:	add	x3, x3, #0x0
    3604:	mov	w2, #0x64                  	// #100
    3608:	bl	0 <__assert_fail>
    360c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3610:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3614:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3618:	add	x0, x0, #0x0
    361c:	add	x1, x1, #0x0
    3620:	add	x3, x3, #0x0
    3624:	mov	w2, #0x59d                 	// #1437
    3628:	bl	0 <__assert_fail>
    362c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3630:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3634:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3638:	add	x0, x0, #0x0
    363c:	add	x1, x1, #0x0
    3640:	add	x3, x3, #0x0
    3644:	mov	w2, #0x141                 	// #321
    3648:	bl	0 <__assert_fail>
    364c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3650:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3654:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3658:	add	x0, x0, #0x0
    365c:	add	x1, x1, #0x0
    3660:	add	x3, x3, #0x0
    3664:	mov	w2, #0x252                 	// #594
    3668:	bl	0 <__assert_fail>
    366c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3670:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3674:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3678:	add	x0, x0, #0x0
    367c:	add	x1, x1, #0x0
    3680:	add	x3, x3, #0x0
    3684:	mov	w2, #0x154                 	// #340
    3688:	bl	0 <__assert_fail>
    368c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3690:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3694:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3698:	add	x0, x0, #0x0
    369c:	add	x1, x1, #0x0
    36a0:	add	x3, x3, #0x0
    36a4:	mov	w2, #0x15d                 	// #349
    36a8:	bl	0 <__assert_fail>
    36ac:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    36b0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    36b4:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    36b8:	add	x0, x0, #0x0
    36bc:	add	x1, x1, #0x0
    36c0:	add	x3, x3, #0x0
    36c4:	mov	w2, #0x4e0                 	// #1248
    36c8:	bl	0 <__assert_fail>
    36cc:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    36d0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    36d4:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    36d8:	add	x0, x0, #0x0
    36dc:	add	x1, x1, #0x0
    36e0:	add	x3, x3, #0x0
    36e4:	mov	w2, #0x75                  	// #117
    36e8:	bl	0 <__assert_fail>
    36ec:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    36f0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    36f4:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    36f8:	add	x0, x0, #0x0
    36fc:	add	x1, x1, #0x0
    3700:	add	x3, x3, #0x0
    3704:	mov	w2, #0x43                  	// #67
    3708:	bl	0 <__assert_fail>
    370c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3710:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3714:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3718:	add	x0, x0, #0x0
    371c:	add	x1, x1, #0x0
    3720:	add	x3, x3, #0x0
    3724:	mov	w2, #0x4cf                 	// #1231
    3728:	bl	0 <__assert_fail>
    372c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3730:	add	x0, x0, #0x0
    3734:	bl	0 <_ZSt20__throw_length_errorPKc>
    3738:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    373c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3740:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3744:	add	x0, x0, #0x0
    3748:	add	x1, x1, #0x0
    374c:	add	x3, x3, #0x0
    3750:	mov	w2, #0x1ff                 	// #511
    3754:	bl	0 <__assert_fail>
    3758:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    375c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3760:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3764:	add	x0, x0, #0x0
    3768:	add	x1, x1, #0x0
    376c:	add	x3, x3, #0x0
    3770:	mov	w2, #0x2d                  	// #45
    3774:	bl	0 <__assert_fail>
    3778:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    377c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3780:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3784:	add	x0, x0, #0x0
    3788:	add	x1, x1, #0x0
    378c:	add	x3, x3, #0x0
    3790:	mov	w2, #0x1ce                 	// #462
    3794:	bl	0 <__assert_fail>
    3798:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    379c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    37a0:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    37a4:	add	x0, x0, #0x0
    37a8:	add	x1, x1, #0x0
    37ac:	add	x3, x3, #0x0
    37b0:	mov	w2, #0x117                 	// #279
    37b4:	bl	0 <__assert_fail>
    37b8:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    37bc:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    37c0:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    37c4:	add	x0, x0, #0x0
    37c8:	add	x1, x1, #0x0
    37cc:	add	x3, x3, #0x0
    37d0:	mov	w2, #0x657                 	// #1623
    37d4:	bl	0 <__assert_fail>
    37d8:	sub	x0, x29, #0x68
    37dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    37e0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    37e4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    37e8:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    37ec:	add	x0, x0, #0x0
    37f0:	add	x1, x1, #0x0
    37f4:	add	x3, x3, #0x0
    37f8:	mov	w2, #0x33                  	// #51
    37fc:	bl	0 <__assert_fail>
    3800:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3804:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3808:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    380c:	add	x0, x0, #0x0
    3810:	add	x1, x1, #0x0
    3814:	add	x3, x3, #0x0
    3818:	mov	w2, #0x99                  	// #153
    381c:	bl	0 <__assert_fail>
    3820:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3824:	add	x0, x0, #0x0
    3828:	bl	0 <_ZSt19__throw_logic_errorPKc>
    382c:	sub	x0, x29, #0x28
    3830:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    3834:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3838:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    383c:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3840:	add	x0, x0, #0x0
    3844:	add	x1, x1, #0x0
    3848:	add	x3, x3, #0x0
    384c:	mov	w2, #0x252                 	// #594
    3850:	bl	0 <__assert_fail>

0000000000003854 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE>:
    3854:	sub	sp, sp, #0x30
    3858:	stp	x29, x30, [sp, #16]
    385c:	str	x19, [sp, #32]
    3860:	add	x29, sp, #0x10
    3864:	ldrh	w9, [x1]
    3868:	ldr	w11, [x0, #136]
    386c:	ldr	x10, [x0, #120]
    3870:	mov	x19, x8
    3874:	cbz	w11, 38d4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x80>
    3878:	mov	w8, #0xfffe                	// #65534
    387c:	cmp	w9, w8
    3880:	b.cs	3a6c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x218>  // b.hs, b.nlast
    3884:	mov	w8, #0x25                  	// #37
    3888:	mul	x12, x9, x8
    388c:	sub	w8, w11, #0x1
    3890:	and	x12, x8, x12
    3894:	add	x15, x10, x12, lsl #4
    3898:	ldrh	w13, [x15]
    389c:	cmp	w13, w9
    38a0:	b.eq	38d8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x84>  // b.none
    38a4:	mov	w14, #0x1                   	// #1
    38a8:	mvn	w13, w13
    38ac:	tst	w13, #0xffff
    38b0:	b.eq	38d4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x80>  // b.none
    38b4:	add	w12, w12, w14
    38b8:	and	w12, w12, w8
    38bc:	add	x15, x10, w12, uxtw #4
    38c0:	ldrh	w13, [x15]
    38c4:	add	w14, w14, #0x1
    38c8:	cmp	w13, w9
    38cc:	b.eq	38d8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x84>  // b.none
    38d0:	b	38a8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x54>
    38d4:	add	x15, x10, x11, lsl #4
    38d8:	add	x8, x10, x11, lsl #4
    38dc:	cmp	x15, x8
    38e0:	b.eq	3960 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x10c>  // b.none
    38e4:	strh	w9, [x29, #28]
    38e8:	cbz	w11, 39c4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x170>
    38ec:	mov	w8, #0xfffe                	// #65534
    38f0:	cmp	w9, w8
    38f4:	b.cs	3aac <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x258>  // b.hs, b.nlast
    38f8:	mov	w8, #0x25                  	// #37
    38fc:	mul	w8, w9, w8
    3900:	sub	w11, w11, #0x1
    3904:	and	w12, w11, w8
    3908:	add	x8, x10, w12, uxtw #4
    390c:	ldrh	w15, [x8]
    3910:	cmp	w15, w9
    3914:	b.eq	39e8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x194>  // b.none
    3918:	mov	x13, xzr
    391c:	mov	w16, #0x1                   	// #1
    3920:	mov	w14, #0xfffe                	// #65534
    3924:	mvn	w17, w15
    3928:	tst	w17, #0xffff
    392c:	b.eq	3a60 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x20c>  // b.none
    3930:	and	w15, w15, #0xffff
    3934:	cmp	x13, #0x0
    3938:	add	w12, w12, w16
    393c:	ccmp	w15, w14, #0x0, eq  // eq = none
    3940:	and	w12, w12, w11
    3944:	csel	x13, x13, x8, ne  // ne = any
    3948:	add	x8, x10, w12, uxtw #4
    394c:	ldrh	w15, [x8]
    3950:	add	w16, w16, #0x1
    3954:	cmp	w15, w9
    3958:	b.eq	39e8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x194>  // b.none
    395c:	b	3924 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xd0>
    3960:	ldr	w8, [x0, #168]
    3964:	ldr	x9, [x0, #152]
    3968:	cbz	w8, 3a04 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1b0>
    396c:	orr	x10, x1, #0x8
    3970:	cmn	x10, #0x8
    3974:	b.eq	3a8c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x238>  // b.none
    3978:	ubfx	x10, x1, #4, #28
    397c:	eor	w11, w10, w1, lsr #9
    3980:	sub	w10, w8, #0x1
    3984:	and	w11, w10, w11
    3988:	add	x14, x9, w11, uxtw #4
    398c:	ldr	x12, [x14]
    3990:	cmp	x12, x1
    3994:	b.eq	3a08 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1b4>  // b.none
    3998:	mov	w13, #0x1                   	// #1
    399c:	cmn	x12, #0x8
    39a0:	b.eq	3a04 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1b0>  // b.none
    39a4:	add	w11, w11, w13
    39a8:	and	w11, w11, w10
    39ac:	add	x14, x9, w11, uxtw #4
    39b0:	ldr	x12, [x14]
    39b4:	add	w13, w13, #0x1
    39b8:	cmp	x12, x1
    39bc:	b.eq	3a08 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1b4>  // b.none
    39c0:	b	399c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x148>
    39c4:	mov	x3, xzr
    39c8:	add	x0, x0, #0x70
    39cc:	add	x1, x29, #0x1c
    39d0:	add	x2, x29, #0x1c
    39d4:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    39d8:	ldrh	w9, [x29, #28]
    39dc:	mov	x8, x0
    39e0:	str	xzr, [x0, #8]
    39e4:	strh	w9, [x0]
    39e8:	ldrb	w9, [x19, #8]
    39ec:	ldr	x8, [x8, #8]
    39f0:	and	w9, w9, #0xfc
    39f4:	orr	w9, w9, #0x2
    39f8:	strb	w9, [x19, #8]
    39fc:	str	x8, [x19]
    3a00:	b	3a3c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1e8>
    3a04:	add	x14, x9, x8, lsl #4
    3a08:	add	x8, x9, x8, lsl #4
    3a0c:	cmp	x14, x8
    3a10:	b.eq	3a4c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1f8>  // b.none
    3a14:	add	x0, x0, #0x90
    3a18:	str	x1, [sp, #8]
    3a1c:	add	x1, sp, #0x8
    3a20:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3a24:	ldrb	w8, [x19, #8]
    3a28:	ldr	x9, [x0]
    3a2c:	and	w8, w8, #0xfc
    3a30:	orr	w8, w8, #0x2
    3a34:	strb	w8, [x19, #8]
    3a38:	str	x9, [x19]
    3a3c:	ldr	x19, [sp, #32]
    3a40:	ldp	x29, x30, [sp, #16]
    3a44:	add	sp, sp, #0x30
    3a48:	ret
    3a4c:	mov	x8, x19
    3a50:	ldr	x19, [sp, #32]
    3a54:	ldp	x29, x30, [sp, #16]
    3a58:	add	sp, sp, #0x30
    3a5c:	b	1450 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE>
    3a60:	cmp	x13, #0x0
    3a64:	csel	x3, x8, x13, eq  // eq = none
    3a68:	b	39c8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x174>
    3a6c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3a70:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3a74:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3a78:	add	x0, x0, #0x0
    3a7c:	add	x1, x1, #0x0
    3a80:	add	x3, x3, #0x0
    3a84:	mov	w2, #0x252                 	// #594
    3a88:	bl	0 <__assert_fail>
    3a8c:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3a90:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3a94:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3a98:	add	x0, x0, #0x0
    3a9c:	add	x1, x1, #0x0
    3aa0:	add	x3, x3, #0x0
    3aa4:	mov	w2, #0x252                 	// #594
    3aa8:	bl	0 <__assert_fail>
    3aac:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3ab0:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3ab4:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3ab8:	add	x0, x0, #0x0
    3abc:	add	x1, x1, #0x0
    3ac0:	add	x3, x3, #0x0
    3ac4:	mov	w2, #0x252                 	// #594
    3ac8:	bl	0 <__assert_fail>

0000000000003acc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE>:
    3acc:	sub	sp, sp, #0xd0
    3ad0:	str	d8, [sp, #96]
    3ad4:	stp	x29, x30, [sp, #112]
    3ad8:	stp	x28, x27, [sp, #128]
    3adc:	stp	x26, x25, [sp, #144]
    3ae0:	stp	x24, x23, [sp, #160]
    3ae4:	stp	x22, x21, [sp, #176]
    3ae8:	stp	x20, x19, [sp, #192]
    3aec:	add	x29, sp, #0x60
    3af0:	mov	x19, x8
    3af4:	sub	x8, x29, #0x10
    3af8:	mov	x20, x1
    3afc:	mov	x22, x0
    3b00:	bl	3854 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE>
    3b04:	ldurb	w10, [x29, #-8]
    3b08:	ubfiz	w9, w10, #1, #1
    3b0c:	and	w8, w10, #0xfffffffd
    3b10:	orr	w11, w9, w8
    3b14:	sturb	w11, [x29, #-8]
    3b18:	tbnz	w10, #0, 3bdc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x110>
    3b1c:	cbnz	w9, 4090 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5c4>
    3b20:	ldur	x23, [x29, #-16]
    3b24:	mov	w0, #0x350                 	// #848
    3b28:	bl	0 <_Znwm>
    3b2c:	adrp	x10, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3b30:	adrp	x9, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3b34:	ldr	d0, [x10]
    3b38:	ldr	d8, [x9]
    3b3c:	add	x8, x0, #0x20
    3b40:	mov	x11, x0
    3b44:	str	x23, [x0]
    3b48:	strb	wzr, [x0, #8]
    3b4c:	add	x10, x0, #0x250
    3b50:	str	x8, [x11, #16]!
    3b54:	str	d0, [x0, #784]
    3b58:	movi	v0.2d, #0x0
    3b5c:	stp	x10, x22, [sp, #16]
    3b60:	str	x10, [x0, #576]
    3b64:	str	d0, [x0, #792]
    3b68:	str	d8, [x0, #24]
    3b6c:	str	d8, [x0, #584]
    3b70:	ldr	x8, [x23, #288]
    3b74:	mov	w9, #0x1                   	// #1
    3b78:	stur	w9, [x29, #-24]
    3b7c:	stur	xzr, [x29, #-32]
    3b80:	str	x8, [x0, #800]
    3b84:	add	x8, x0, #0x328
    3b88:	strb	wzr, [x8, #32]
    3b8c:	stp	q0, q0, [x8]
    3b90:	mov	x21, x0
    3b94:	ldr	x0, [x22, #24]
    3b98:	str	x11, [sp, #8]
    3b9c:	str	x19, [sp, #32]
    3ba0:	cbz	x0, 3c04 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x138>
    3ba4:	ldr	x8, [x22]
    3ba8:	ldr	x9, [x0]
    3bac:	sub	x2, x29, #0x20
    3bb0:	mov	x1, x20
    3bb4:	ldr	x8, [x8, #152]
    3bb8:	ldr	w26, [x8, #28]
    3bbc:	ldr	x8, [x9, #80]
    3bc0:	mov	w3, w26
    3bc4:	blr	x8
    3bc8:	and	w8, w0, #0x1
    3bcc:	str	w8, [x29, #12]
    3bd0:	tbz	w0, #0, 3c10 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x144>
    3bd4:	mov	w25, #0x1                   	// #1
    3bd8:	b	3c30 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x164>
    3bdc:	ldur	x9, [x29, #-16]
    3be0:	ldrb	w10, [x19, #8]
    3be4:	sturb	w8, [x29, #-8]
    3be8:	stur	xzr, [x29, #-16]
    3bec:	ands	x9, x9, #0xfffffffffffffffe
    3bf0:	orr	w10, w10, #0x3
    3bf4:	strb	w10, [x19, #8]
    3bf8:	b.eq	4098 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5cc>  // b.none
    3bfc:	str	x9, [x19]
    3c00:	b	3fac <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4e0>
    3c04:	str	wzr, [x29, #12]
    3c08:	mov	w25, wzr
    3c0c:	b	3c54 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x188>
    3c10:	ldr	x0, [x22, #24]
    3c14:	sub	x2, x29, #0x20
    3c18:	mov	x1, x20
    3c1c:	mov	w3, w26
    3c20:	ldr	x8, [x0]
    3c24:	ldr	x8, [x8, #88]
    3c28:	blr	x8
    3c2c:	mov	w25, w0
    3c30:	ldr	x0, [x22, #24]
    3c34:	mov	x1, x20
    3c38:	mov	w2, w26
    3c3c:	ldr	x8, [x0]
    3c40:	ldr	x8, [x8, #96]
    3c44:	blr	x8
    3c48:	tbz	w0, #0, 3c54 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x188>
    3c4c:	mov	w8, #0x1                   	// #1
    3c50:	strb	w8, [x21, #8]
    3c54:	ldr	w8, [x23, #104]
    3c58:	str	x23, [sp, #40]
    3c5c:	cbz	w8, 3db8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2ec>
    3c60:	add	x9, x21, #0x240
    3c64:	str	x9, [sp]
    3c68:	ldr	x9, [sp, #40]
    3c6c:	lsl	x22, x8, #4
    3c70:	mov	w24, #0x30                  	// #48
    3c74:	mov	w19, #0xfffffe00            	// #-512
    3c78:	ldr	x26, [x9, #96]
    3c7c:	mov	w27, #0x1                   	// #1
    3c80:	b	3c9c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1d0>
    3c84:	ldr	w8, [x26]
    3c88:	tbnz	w8, #31, 3c90 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1c4>
    3c8c:	strb	w27, [x28, #42]
    3c90:	subs	x22, x22, #0x10
    3c94:	add	x26, x26, #0x10
    3c98:	b.eq	3db8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2ec>  // b.none
    3c9c:	ldr	w8, [x26]
    3ca0:	tbnz	w8, #31, 3cd8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x20c>
    3ca4:	ldr	w9, [x20, #24]
    3ca8:	cmp	w9, w8
    3cac:	b.ls	3ff0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x524>  // b.plast
    3cb0:	ldr	x9, [x20, #16]
    3cb4:	lsl	x10, x8, #4
    3cb8:	ldrb	w10, [x9, x10]
    3cbc:	cmp	w10, #0x1
    3cc0:	b.ne	3c90 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1c4>  // b.any
    3cc4:	add	x8, x9, x8, lsl #4
    3cc8:	ldr	w28, [x8, #8]
    3ccc:	tst	w28, #0xffff
    3cd0:	b.ne	3ce4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x218>  // b.any
    3cd4:	b	3c90 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1c4>
    3cd8:	ldrh	w28, [x26, #8]
    3cdc:	tst	w28, #0xffff
    3ce0:	b.eq	3c90 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1c4>  // b.none
    3ce4:	ldr	w8, [x21, #584]
    3ce8:	ldr	w9, [x21, #588]
    3cec:	cmp	w8, w9
    3cf0:	b.cs	3d9c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2d0>  // b.hs, b.nlast
    3cf4:	ldr	x9, [x21, #576]
    3cf8:	umaddl	x8, w8, w24, x9
    3cfc:	str	x26, [x8]
    3d00:	strh	w28, [x8, #8]
    3d04:	stp	wzr, wzr, [x8, #12]
    3d08:	str	w19, [x8, #20]
    3d0c:	stp	xzr, xzr, [x8, #24]
    3d10:	strh	w27, [x8, #40]
    3d14:	strb	wzr, [x8, #42]
    3d18:	ldr	w8, [x21, #584]
    3d1c:	ldr	w9, [x21, #588]
    3d20:	cmp	w8, w9
    3d24:	b.cs	4010 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x544>  // b.hs, b.nlast
    3d28:	add	x8, x8, #0x1
    3d2c:	str	w8, [x21, #584]
    3d30:	tbz	w25, #0, 3c90 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1c4>
    3d34:	ldr	x9, [x21, #576]
    3d38:	ldur	w23, [x29, #-24]
    3d3c:	madd	x8, x8, x24, x9
    3d40:	cmp	w23, #0x40
    3d44:	sub	x28, x8, #0x30
    3d48:	b.hi	3d58 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x28c>  // b.pmore
    3d4c:	ldur	x8, [x29, #-32]
    3d50:	cbnz	x8, 3d68 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x29c>
    3d54:	b	3c84 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1b8>
    3d58:	sub	x0, x29, #0x20
    3d5c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    3d60:	cmp	w0, w23
    3d64:	b.eq	3c84 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1b8>  // b.none
    3d68:	ldr	w8, [x26, #4]
    3d6c:	cmp	w23, w8
    3d70:	b.ls	3c90 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1c4>  // b.plast
    3d74:	ldur	x9, [x29, #-32]
    3d78:	ubfx	x10, x8, #6, #26
    3d7c:	cmp	w23, #0x41
    3d80:	add	x9, x9, w10, uxtw #3
    3d84:	sub	x10, x29, #0x20
    3d88:	csel	x9, x10, x9, cc  // cc = lo, ul, last
    3d8c:	ldr	x9, [x9]
    3d90:	lsr	x8, x9, x8
    3d94:	tbnz	w8, #0, 3c8c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1c0>
    3d98:	b	3c90 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1c4>
    3d9c:	ldr	x0, [sp]
    3da0:	ldr	x1, [sp, #16]
    3da4:	mov	w3, #0x30                  	// #48
    3da8:	mov	x2, xzr
    3dac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3db0:	ldr	w8, [x21, #584]
    3db4:	b	3cf4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x228>
    3db8:	ldr	x22, [sp, #40]
    3dbc:	ldr	w8, [x22, #8]
    3dc0:	cbz	w8, 3dd8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x30c>
    3dc4:	cmp	w8, #0x40
    3dc8:	str	w8, [sp, #56]
    3dcc:	b.hi	3df4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x328>  // b.pmore
    3dd0:	str	xzr, [sp, #48]
    3dd4:	b	3e04 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x338>
    3dd8:	ldr	x9, [sp, #32]
    3ddc:	ldrb	w8, [x9, #8]
    3de0:	str	x21, [x9]
    3de4:	and	w8, w8, #0xfc
    3de8:	orr	w8, w8, #0x2
    3dec:	strb	w8, [x9, #8]
    3df0:	b	3f90 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4c4>
    3df4:	add	x0, sp, #0x30
    3df8:	mov	x1, xzr
    3dfc:	mov	w2, wzr
    3e00:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    3e04:	ldr	x9, [sp, #24]
    3e08:	ldr	x0, [x9, #24]
    3e0c:	cbz	x0, 3e28 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x35c>
    3e10:	ldr	x8, [x0]
    3e14:	ldr	x1, [x9, #16]
    3e18:	add	x3, sp, #0x30
    3e1c:	mov	x2, x20
    3e20:	ldr	x8, [x8, #72]
    3e24:	blr	x8
    3e28:	ldr	w8, [x22, #8]
    3e2c:	cbz	w8, 3f60 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x494>
    3e30:	ldr	x22, [x22]
    3e34:	mov	w9, #0x14                  	// #20
    3e38:	mov	w19, wzr
    3e3c:	add	x23, sp, #0x30
    3e40:	mov	w24, #0x88                  	// #136
    3e44:	mov	w25, #0xfffffe00            	// #-512
    3e48:	madd	x26, x8, x9, x22
    3e4c:	movi	v0.2d, #0x0
    3e50:	b	3e64 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x398>
    3e54:	add	x22, x22, #0x14
    3e58:	cmp	x22, x26
    3e5c:	add	w19, w19, #0x1
    3e60:	b.eq	3f60 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x494>  // b.none
    3e64:	ldr	w8, [x22]
    3e68:	tbnz	w8, #31, 3ea0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3d4>
    3e6c:	ldr	w9, [x20, #24]
    3e70:	cmp	w9, w8
    3e74:	b.ls	3ff0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x524>  // b.plast
    3e78:	ldr	x9, [x20, #16]
    3e7c:	lsl	x10, x8, #4
    3e80:	ldrb	w10, [x9, x10]
    3e84:	cmp	w10, #0x1
    3e88:	b.ne	4030 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x564>  // b.any
    3e8c:	add	x8, x9, x8, lsl #4
    3e90:	ldr	w27, [x8, #8]
    3e94:	ldrb	w8, [x22, #16]
    3e98:	cbnz	w8, 3eac <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3e0>
    3e9c:	b	3eb4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3e8>
    3ea0:	ldrh	w27, [x22, #8]
    3ea4:	ldrb	w8, [x22, #16]
    3ea8:	cbz	w8, 3eb4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3e8>
    3eac:	tst	w27, #0xffff
    3eb0:	b.eq	3e54 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x388>  // b.none
    3eb4:	tst	w27, #0xffff
    3eb8:	b.eq	4050 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x584>  // b.none
    3ebc:	ldr	w8, [sp, #56]
    3ec0:	cmp	w8, w19
    3ec4:	b.ls	4070 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5a4>  // b.plast
    3ec8:	ldr	x9, [sp, #48]
    3ecc:	lsr	w10, w19, #6
    3ed0:	cmp	w8, #0x41
    3ed4:	add	x8, x9, w10, uxtw #3
    3ed8:	csel	x8, x23, x8, cc  // cc = lo, ul, last
    3edc:	ldr	x9, [x8]
    3ee0:	ldp	w8, w10, [x21, #24]
    3ee4:	lsr	x9, x9, x19
    3ee8:	cmp	w8, w10
    3eec:	and	w28, w9, #0x1
    3ef0:	b.cs	3f48 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x47c>  // b.hs, b.nlast
    3ef4:	ldr	x9, [x21, #16]
    3ef8:	umaddl	x8, w8, w24, x9
    3efc:	ldr	w9, [x29, #12]
    3f00:	str	x22, [x8]
    3f04:	str	w25, [x8, #8]
    3f08:	strh	w27, [x8, #12]
    3f0c:	strb	w9, [x8, #21]
    3f10:	add	x9, x8, #0x48
    3f14:	str	wzr, [x8, #16]
    3f18:	strb	w28, [x8, #20]
    3f1c:	strb	wzr, [x8, #22]
    3f20:	stur	q0, [x8, #40]
    3f24:	stur	q0, [x8, #24]
    3f28:	str	d8, [x8, #64]
    3f2c:	str	x9, [x8, #56]
    3f30:	ldp	w8, w9, [x21, #24]
    3f34:	cmp	w8, w9
    3f38:	b.cs	4010 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x544>  // b.hs, b.nlast
    3f3c:	add	w8, w8, #0x1
    3f40:	str	w8, [x21, #24]
    3f44:	b	3e54 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x388>
    3f48:	ldr	x0, [sp, #8]
    3f4c:	mov	x1, xzr
    3f50:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3f54:	ldr	w8, [x21, #24]
    3f58:	movi	v0.2d, #0x0
    3f5c:	b	3ef4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x428>
    3f60:	ldr	x10, [sp, #32]
    3f64:	ldr	w9, [sp, #56]
    3f68:	ldrb	w8, [x10, #8]
    3f6c:	cmp	w9, #0x41
    3f70:	str	x21, [x10]
    3f74:	and	w8, w8, #0xfc
    3f78:	orr	w8, w8, #0x2
    3f7c:	strb	w8, [x10, #8]
    3f80:	b.cc	3f90 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4c4>  // b.lo, b.ul, b.last
    3f84:	ldr	x0, [sp, #48]
    3f88:	cbz	x0, 3f90 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4c4>
    3f8c:	bl	0 <_ZdaPv>
    3f90:	ldur	w8, [x29, #-24]
    3f94:	cmp	w8, #0x41
    3f98:	b.cc	3fa8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4dc>  // b.lo, b.ul, b.last
    3f9c:	ldur	x0, [x29, #-32]
    3fa0:	cbz	x0, 3fa8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4dc>
    3fa4:	bl	0 <_ZdaPv>
    3fa8:	ldurb	w8, [x29, #-8]
    3fac:	tbnz	w8, #1, 4090 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5c4>
    3fb0:	tbz	w8, #0, 3fcc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x500>
    3fb4:	ldur	x0, [x29, #-16]
    3fb8:	cbz	x0, 3fc8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4fc>
    3fbc:	ldr	x8, [x0]
    3fc0:	ldr	x8, [x8, #8]
    3fc4:	blr	x8
    3fc8:	stur	xzr, [x29, #-16]
    3fcc:	ldp	x20, x19, [sp, #192]
    3fd0:	ldp	x22, x21, [sp, #176]
    3fd4:	ldp	x24, x23, [sp, #160]
    3fd8:	ldp	x26, x25, [sp, #144]
    3fdc:	ldp	x28, x27, [sp, #128]
    3fe0:	ldp	x29, x30, [sp, #112]
    3fe4:	ldr	d8, [sp, #96]
    3fe8:	add	sp, sp, #0xd0
    3fec:	ret
    3ff0:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3ff4:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3ff8:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    3ffc:	add	x0, x0, #0x0
    4000:	add	x1, x1, #0x0
    4004:	add	x3, x3, #0x0
    4008:	mov	w2, #0x99                  	// #153
    400c:	bl	0 <__assert_fail>
    4010:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4014:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4018:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    401c:	add	x0, x0, #0x0
    4020:	add	x1, x1, #0x0
    4024:	add	x3, x3, #0x0
    4028:	mov	w2, #0x43                  	// #67
    402c:	bl	0 <__assert_fail>
    4030:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4034:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4038:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    403c:	add	x0, x0, #0x0
    4040:	add	x1, x1, #0x0
    4044:	add	x3, x3, #0x0
    4048:	mov	w2, #0x41                  	// #65
    404c:	bl	0 <__assert_fail>
    4050:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4054:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4058:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    405c:	add	x0, x0, #0x0
    4060:	add	x1, x1, #0x0
    4064:	add	x3, x3, #0x0
    4068:	mov	w2, #0x2bb                 	// #699
    406c:	bl	0 <__assert_fail>
    4070:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4074:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4078:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    407c:	add	x0, x0, #0x0
    4080:	add	x1, x1, #0x0
    4084:	add	x3, x3, #0x0
    4088:	mov	w2, #0x472                 	// #1138
    408c:	bl	0 <__assert_fail>
    4090:	sub	x0, x29, #0x10
    4094:	bl	0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    4098:	adrp	x0, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    409c:	adrp	x1, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    40a0:	adrp	x3, 0 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>
    40a4:	add	x0, x0, #0x0
    40a8:	add	x1, x1, #0x0
    40ac:	add	x3, x3, #0x0
    40b0:	mov	w2, #0x1ce                 	// #462
    40b4:	bl	0 <__assert_fail>

00000000000040b8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_>:
    40b8:	sub	sp, sp, #0xb0
    40bc:	stp	x29, x30, [sp, #80]
    40c0:	stp	x28, x27, [sp, #96]
    40c4:	stp	x26, x25, [sp, #112]
    40c8:	stp	x24, x23, [sp, #128]
    40cc:	stp	x22, x21, [sp, #144]
    40d0:	stp	x20, x19, [sp, #160]
    40d4:	add	x29, sp, #0x50
    40d8:	sub	x26, x1, x0
    40dc:	cmp	x26, #0x181
    40e0:	b.lt	4410 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x358>  // b.tstop
    40e4:	mov	x27, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    40e8:	mov	x21, x1
    40ec:	mov	x19, x0
    40f0:	mov	x22, x2
    40f4:	and	x20, x3, #0xff
    40f8:	add	x25, x0, #0x18
    40fc:	add	x24, x0, #0x8
    4100:	add	x8, x0, #0x20
    4104:	movk	x27, #0xaaab
    4108:	mov	w28, #0x18                  	// #24
    410c:	str	x8, [sp, #8]
    4110:	b	4138 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x80>
    4114:	mov	x0, x23
    4118:	mov	x1, x21
    411c:	mov	x2, x22
    4120:	mov	x3, x20
    4124:	bl	40b8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_>
    4128:	sub	x26, x23, x19
    412c:	cmp	x26, #0x180
    4130:	mov	x21, x23
    4134:	b.le	4410 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x358>
    4138:	cbz	x22, 4340 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x288>
    413c:	umulh	x8, x26, x27
    4140:	lsr	x8, x8, #5
    4144:	madd	x10, x8, x28, x19
    4148:	ldr	x9, [x19, #24]
    414c:	ldr	x11, [x10]
    4150:	sub	x22, x22, #0x1
    4154:	fmov	d0, x9
    4158:	fmov	d1, x11
    415c:	cnt	v0.8b, v0.8b
    4160:	cnt	v1.8b, v1.8b
    4164:	uaddlv	h0, v0.8b
    4168:	uaddlv	h1, v1.8b
    416c:	fmov	w12, s0
    4170:	fmov	w13, s1
    4174:	cmp	w12, w13
    4178:	b.cc	418c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0xd4>  // b.lo, b.ul, b.last
    417c:	cmp	x9, x11
    4180:	b.cs	41e4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x12c>  // b.hs, b.nlast
    4184:	cmp	w12, w13
    4188:	b.hi	41e4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x12c>  // b.pmore
    418c:	ldur	x14, [x21, #-24]
    4190:	fmov	d0, x14
    4194:	cnt	v0.8b, v0.8b
    4198:	uaddlv	h0, v0.8b
    419c:	fmov	w15, s0
    41a0:	cmp	w13, w15
    41a4:	b.cc	41b8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x100>  // b.lo, b.ul, b.last
    41a8:	cmp	x11, x14
    41ac:	b.cs	422c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x174>  // b.hs, b.nlast
    41b0:	cmp	w13, w15
    41b4:	b.hi	422c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x174>  // b.pmore
    41b8:	ldr	x9, [x19]
    41bc:	str	x11, [x19]
    41c0:	madd	x8, x8, x28, x19
    41c4:	str	x9, [x10]
    41c8:	ldr	q0, [x24]
    41cc:	stur	q0, [x29, #-32]
    41d0:	ldur	q0, [x8, #8]
    41d4:	str	q0, [x24]
    41d8:	ldur	q0, [x29, #-32]
    41dc:	stur	q0, [x8, #8]
    41e0:	b	4294 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1dc>
    41e4:	ldur	x14, [x21, #-24]
    41e8:	fmov	d0, x14
    41ec:	cnt	v0.8b, v0.8b
    41f0:	uaddlv	h0, v0.8b
    41f4:	fmov	w15, s0
    41f8:	cmp	w12, w15
    41fc:	b.cc	426c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1b4>  // b.lo, b.ul, b.last
    4200:	cmp	x9, x14
    4204:	b.cs	4210 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x158>  // b.hs, b.nlast
    4208:	cmp	w12, w15
    420c:	b.ls	426c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1b4>  // b.plast
    4210:	cmp	w13, w15
    4214:	b.cc	4244 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x18c>  // b.lo, b.ul, b.last
    4218:	cmp	x11, x14
    421c:	b.cs	41b8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x100>  // b.hs, b.nlast
    4220:	cmp	w13, w15
    4224:	b.ls	4244 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x18c>  // b.plast
    4228:	b	41b8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x100>
    422c:	cmp	w12, w15
    4230:	b.cc	4244 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x18c>  // b.lo, b.ul, b.last
    4234:	cmp	x9, x14
    4238:	b.cs	426c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1b4>  // b.hs, b.nlast
    423c:	cmp	w12, w15
    4240:	b.hi	426c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1b4>  // b.pmore
    4244:	ldr	x8, [x19]
    4248:	str	x14, [x19]
    424c:	stur	x8, [x21, #-24]
    4250:	ldr	q0, [x24]
    4254:	stur	q0, [x29, #-32]
    4258:	ldur	q0, [x21, #-16]
    425c:	str	q0, [x24]
    4260:	ldur	q0, [x29, #-32]
    4264:	stur	q0, [x21, #-16]
    4268:	b	4294 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1dc>
    426c:	ldr	x8, [x19]
    4270:	str	x9, [x19]
    4274:	str	x8, [x19, #24]
    4278:	ldr	q0, [x24]
    427c:	ldr	x8, [sp, #8]
    4280:	stur	q0, [x29, #-32]
    4284:	ldr	q0, [x8]
    4288:	str	q0, [x24]
    428c:	ldur	q0, [x29, #-32]
    4290:	str	q0, [x8]
    4294:	mov	x8, x21
    4298:	mov	x23, x25
    429c:	ldr	x9, [x19]
    42a0:	fmov	d0, x9
    42a4:	cnt	v0.8b, v0.8b
    42a8:	uaddlv	h0, v0.8b
    42ac:	fmov	w10, s0
    42b0:	b	42b8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x200>
    42b4:	add	x23, x23, #0x18
    42b8:	ldr	x11, [x23]
    42bc:	fmov	d0, x11
    42c0:	cnt	v0.8b, v0.8b
    42c4:	uaddlv	h0, v0.8b
    42c8:	fmov	w12, s0
    42cc:	cmp	w12, w10
    42d0:	b.cc	42b4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1fc>  // b.lo, b.ul, b.last
    42d4:	cmp	x11, x9
    42d8:	b.cs	42e4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x22c>  // b.hs, b.nlast
    42dc:	cmp	w12, w10
    42e0:	b.ls	42b4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1fc>  // b.plast
    42e4:	ldr	x12, [x8, #-24]!
    42e8:	fmov	d0, x12
    42ec:	cnt	v0.8b, v0.8b
    42f0:	uaddlv	h0, v0.8b
    42f4:	fmov	w13, s0
    42f8:	cmp	w10, w13
    42fc:	b.cc	42e4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x22c>  // b.lo, b.ul, b.last
    4300:	cmp	x9, x12
    4304:	b.cs	4310 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x258>  // b.hs, b.nlast
    4308:	cmp	w10, w13
    430c:	b.ls	42e4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x22c>  // b.plast
    4310:	cmp	x8, x23
    4314:	b.ls	4114 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x5c>  // b.plast
    4318:	str	x12, [x23]
    431c:	str	x11, [x8]
    4320:	ldur	q0, [x23, #8]
    4324:	stur	q0, [x29, #-32]
    4328:	ldur	q0, [x8, #8]
    432c:	stur	q0, [x23, #8]
    4330:	ldur	q0, [x29, #-32]
    4334:	add	x23, x23, #0x18
    4338:	stur	q0, [x8, #8]
    433c:	b	429c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x1e4>
    4340:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4344:	movk	x8, #0xaaab
    4348:	umulh	x8, x26, x8
    434c:	lsr	x22, x8, #4
    4350:	sub	x8, x22, #0x2
    4354:	sub	x9, x22, #0x1
    4358:	cmp	x8, #0x0
    435c:	csel	x8, x9, x8, lt  // lt = tstop
    4360:	asr	x23, x8, #1
    4364:	mov	w8, #0x18                  	// #24
    4368:	madd	x25, x23, x8, x19
    436c:	ldr	x8, [x25, #16]
    4370:	ldr	q0, [x25], #-24
    4374:	sub	x3, x29, #0x20
    4378:	mov	x0, x19
    437c:	mov	x1, x23
    4380:	mov	x2, x22
    4384:	mov	x4, x20
    4388:	stur	x8, [x29, #-16]
    438c:	stur	q0, [x29, #-32]
    4390:	bl	4430 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_>
    4394:	sub	x23, x23, #0x1
    4398:	cmn	x23, #0x1
    439c:	b.ne	436c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x2b4>  // b.any
    43a0:	cmp	x26, #0x19
    43a4:	b.lt	4410 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x358>  // b.tstop
    43a8:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    43ac:	sub	x21, x21, #0x18
    43b0:	movk	x22, #0xaaab
    43b4:	ldr	x8, [x21, #16]
    43b8:	ldr	q0, [x21]
    43bc:	sub	x23, x21, x19
    43c0:	asr	x9, x23, #3
    43c4:	stur	x8, [x29, #-16]
    43c8:	stur	q0, [x29, #-32]
    43cc:	ldr	x8, [x19]
    43d0:	mul	x2, x9, x22
    43d4:	add	x3, sp, #0x10
    43d8:	mov	x0, x19
    43dc:	str	x8, [x21]
    43e0:	ldr	q0, [x24]
    43e4:	mov	x1, xzr
    43e8:	mov	x4, x20
    43ec:	stur	q0, [x21, #8]
    43f0:	ldur	q0, [x29, #-32]
    43f4:	ldur	x8, [x29, #-16]
    43f8:	str	q0, [sp, #16]
    43fc:	str	x8, [sp, #32]
    4400:	bl	4430 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_>
    4404:	cmp	x23, #0x18
    4408:	sub	x21, x21, #0x18
    440c:	b.gt	43b4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_SQ_T0_T1_+0x2fc>
    4410:	ldp	x20, x19, [sp, #160]
    4414:	ldp	x22, x21, [sp, #144]
    4418:	ldp	x24, x23, [sp, #128]
    441c:	ldp	x26, x25, [sp, #112]
    4420:	ldp	x28, x27, [sp, #96]
    4424:	ldp	x29, x30, [sp, #80]
    4428:	add	sp, sp, #0xb0
    442c:	ret

0000000000004430 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_>:
    4430:	sub	sp, sp, #0x10
    4434:	sub	x9, x2, #0x1
    4438:	cmp	x9, #0x0
    443c:	csel	x8, x2, x9, lt  // lt = tstop
    4440:	asr	x10, x8, #1
    4444:	cmp	x10, x1
    4448:	mov	x8, x1
    444c:	b.le	44e0 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0xb0>
    4450:	mov	w11, #0x18                  	// #24
    4454:	mov	x12, x1
    4458:	b	4484 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x54>
    445c:	mov	x14, x15
    4460:	mov	x8, x13
    4464:	madd	x12, x12, x11, x0
    4468:	str	x14, [x12]
    446c:	madd	x13, x8, x11, x0
    4470:	ldur	q0, [x13, #8]
    4474:	cmp	x8, x10
    4478:	stur	q0, [x12, #8]
    447c:	mov	x12, x8
    4480:	b.ge	44e0 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0xb0>  // b.tcont
    4484:	lsl	x8, x12, #1
    4488:	mov	w13, #0x1                   	// #1
    448c:	add	x8, x8, #0x2
    4490:	bfi	x13, x12, #1, #63
    4494:	mul	x14, x8, x11
    4498:	mul	x15, x13, x11
    449c:	ldr	x14, [x0, x14]
    44a0:	ldr	x15, [x0, x15]
    44a4:	fmov	d0, x14
    44a8:	fmov	d1, x15
    44ac:	cnt	v0.8b, v0.8b
    44b0:	cnt	v1.8b, v1.8b
    44b4:	uaddlv	h0, v0.8b
    44b8:	uaddlv	h1, v1.8b
    44bc:	fmov	w16, s0
    44c0:	fmov	w17, s1
    44c4:	cmp	w16, w17
    44c8:	b.cc	445c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x2c>  // b.lo, b.ul, b.last
    44cc:	cmp	x14, x15
    44d0:	b.cs	4464 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x34>  // b.hs, b.nlast
    44d4:	cmp	w16, w17
    44d8:	b.ls	445c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x2c>  // b.plast
    44dc:	b	4464 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x34>
    44e0:	tbnz	w2, #0, 4520 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0xf0>
    44e4:	sub	x10, x2, #0x2
    44e8:	cmp	x10, #0x0
    44ec:	csel	x9, x9, x10, lt  // lt = tstop
    44f0:	cmp	x8, x9, asr #1
    44f4:	b.ne	4520 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0xf0>  // b.any
    44f8:	mov	w9, #0x1                   	// #1
    44fc:	bfi	x9, x8, #1, #63
    4500:	mov	w10, #0x18                  	// #24
    4504:	madd	x11, x9, x10, x0
    4508:	ldr	x12, [x11]
    450c:	madd	x8, x8, x10, x0
    4510:	str	x12, [x8]
    4514:	ldur	q0, [x11, #8]
    4518:	stur	q0, [x8, #8]
    451c:	mov	x8, x9
    4520:	ldur	q0, [x3, #8]
    4524:	ldr	x9, [x3]
    4528:	cmp	x8, x1
    452c:	str	q0, [sp]
    4530:	b.le	45ac <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x17c>
    4534:	fmov	d0, x9
    4538:	cnt	v0.8b, v0.8b
    453c:	uaddlv	h0, v0.8b
    4540:	fmov	w11, s0
    4544:	mov	w12, #0x18                  	// #24
    4548:	b	456c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x13c>
    454c:	madd	x8, x8, x12, x0
    4550:	str	x13, [x8]
    4554:	madd	x13, x10, x12, x0
    4558:	ldur	q0, [x13, #8]
    455c:	cmp	x10, x1
    4560:	stur	q0, [x8, #8]
    4564:	mov	x8, x10
    4568:	b.le	45b0 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x180>
    456c:	sub	x10, x8, #0x1
    4570:	cmp	x10, #0x0
    4574:	csel	x10, x8, x10, lt  // lt = tstop
    4578:	asr	x10, x10, #1
    457c:	mul	x13, x10, x12
    4580:	ldr	x13, [x0, x13]
    4584:	fmov	d0, x13
    4588:	cnt	v0.8b, v0.8b
    458c:	uaddlv	h0, v0.8b
    4590:	fmov	w14, s0
    4594:	cmp	w14, w11
    4598:	b.cc	454c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x11c>  // b.lo, b.ul, b.last
    459c:	cmp	x13, x9
    45a0:	b.cs	45ac <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x17c>  // b.hs, b.nlast
    45a4:	cmp	w14, w11
    45a8:	b.ls	454c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEE3$_0EEEvT_T0_SR_T1_T2_+0x11c>  // b.plast
    45ac:	mov	x10, x8
    45b0:	mov	w8, #0x18                  	// #24
    45b4:	madd	x8, x10, x8, x0
    45b8:	str	x9, [x8]
    45bc:	ldr	q0, [sp], #16
    45c0:	stur	q0, [x8, #8]
    45c4:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplImE6resizeEm:

0000000000000000 <_ZN4llvm15SmallVectorImplImE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	x8, x1
  1c:	b.ls	34 <_ZN4llvm15SmallVectorImplImE6resizeEm+0x34>  // b.plast
  20:	ldr	w8, [x19, #12]
  24:	cmp	x8, x20
  28:	b.cc	90 <_ZN4llvm15SmallVectorImplImE6resizeEm+0x90>  // b.lo, b.ul, b.last
  2c:	str	w20, [x19, #8]
  30:	b	84 <_ZN4llvm15SmallVectorImplImE6resizeEm+0x84>
  34:	b.cs	84 <_ZN4llvm15SmallVectorImplImE6resizeEm+0x84>  // b.hs, b.nlast
  38:	ldr	w9, [x19, #12]
  3c:	cmp	x9, x20
  40:	b.cs	5c <_ZN4llvm15SmallVectorImplImE6resizeEm+0x5c>  // b.hs, b.nlast
  44:	add	x1, x19, #0x10
  48:	mov	w3, #0x8                   	// #8
  4c:	mov	x0, x19
  50:	mov	x2, x20
  54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  58:	ldr	w8, [x19, #8]
  5c:	cmp	x8, x20
  60:	b.eq	20 <_ZN4llvm15SmallVectorImplImE6resizeEm+0x20>  // b.none
  64:	ldr	x9, [x19]
  68:	lsl	x8, x8, #3
  6c:	lsl	x10, x20, #3
  70:	sub	x2, x10, x8
  74:	add	x0, x9, x8
  78:	mov	w1, wzr
  7c:	bl	0 <memset>
  80:	b	20 <_ZN4llvm15SmallVectorImplImE6resizeEm+0x20>
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6resizeEm>
  94:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6resizeEm>
  98:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6resizeEm>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x43                  	// #67
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	x8, x1
  1c:	b.ls	34 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x34>  // b.plast
  20:	ldr	w8, [x19, #12]
  24:	cmp	x8, x20
  28:	b.cc	b0 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0xb0>  // b.lo, b.ul, b.last
  2c:	str	w20, [x19, #8]
  30:	b	a4 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0xa4>
  34:	b.cs	a4 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0xa4>  // b.hs, b.nlast
  38:	ldr	w9, [x19, #12]
  3c:	cmp	x9, x20
  40:	b.cs	5c <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x5c>  // b.hs, b.nlast
  44:	add	x1, x19, #0x10
  48:	mov	w3, #0x14                  	// #20
  4c:	mov	x0, x19
  50:	mov	x2, x20
  54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  58:	ldr	w8, [x19, #8]
  5c:	cmp	x8, x20
  60:	b.eq	20 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x20>  // b.none
  64:	ldr	x9, [x19]
  68:	mov	x11, #0xffffffffffffffec    	// #-20
  6c:	mov	w10, #0x14                  	// #20
  70:	mul	x11, x8, x11
  74:	mov	x12, #0xcccccccccccccccc    	// #-3689348814741910324
  78:	madd	x11, x20, x10, x11
  7c:	movk	x12, #0xcccd
  80:	sub	x11, x11, #0x14
  84:	madd	x0, x8, x10, x9
  88:	umulh	x8, x11, x12
  8c:	lsr	x8, x8, #4
  90:	mul	x8, x8, x10
  94:	add	x2, x8, #0x14
  98:	mov	w1, wzr
  9c:	bl	0 <memset>
  a0:	b	20 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm+0x20>
  a4:	ldp	x20, x19, [sp, #16]
  a8:	ldp	x29, x30, [sp], #32
  ac:	ret
  b0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm>
  b4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm>
  b8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca15WriteDescriptorEE6resizeEm>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x43                  	// #67
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	x8, x1
  1c:	b.ls	34 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x34>  // b.plast
  20:	ldr	w8, [x19, #12]
  24:	cmp	x8, x20
  28:	b.cc	90 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x90>  // b.lo, b.ul, b.last
  2c:	str	w20, [x19, #8]
  30:	b	84 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x84>
  34:	b.cs	84 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x84>  // b.hs, b.nlast
  38:	ldr	w9, [x19, #12]
  3c:	cmp	x9, x20
  40:	b.cs	5c <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x5c>  // b.hs, b.nlast
  44:	add	x1, x19, #0x10
  48:	mov	w3, #0x10                  	// #16
  4c:	mov	x0, x19
  50:	mov	x2, x20
  54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  58:	ldr	w8, [x19, #8]
  5c:	cmp	x8, x20
  60:	b.eq	20 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x20>  // b.none
  64:	ldr	x9, [x19]
  68:	lsl	x8, x8, #4
  6c:	lsl	x10, x20, #4
  70:	sub	x2, x10, x8
  74:	add	x0, x9, x8
  78:	mov	w1, wzr
  7c:	bl	0 <memset>
  80:	b	20 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm+0x20>
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	ret
  90:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm>
  94:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm>
  98:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca14ReadDescriptorEE6resizeEm>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x43                  	// #67
  ac:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_EixEOS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_EixEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #24]
  10:	mov	x19, x1
  14:	cbz	w8, 8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_EixEOS4_+0x8c>
  18:	ldr	x9, [x19]
  1c:	orr	x10, x9, #0x8
  20:	cmn	x10, #0x8
  24:	b.eq	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_EixEOS4_+0xc4>  // b.none
  28:	ldr	x10, [x0, #8]
  2c:	ubfx	x11, x9, #4, #28
  30:	eor	w12, w11, w9, lsr #9
  34:	sub	w11, w8, #0x1
  38:	and	w12, w12, w11
  3c:	add	x8, x10, w12, uxtw #4
  40:	ldr	x14, [x8]
  44:	cmp	x14, x9
  48:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_EixEOS4_+0xa8>  // b.none
  4c:	mov	x13, xzr
  50:	mov	w16, #0x1                   	// #1
  54:	mov	x15, #0xfffffffffffffff0    	// #-16
  58:	cmn	x14, #0x8
  5c:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_EixEOS4_+0xb8>  // b.none
  60:	cmp	x13, #0x0
  64:	add	w12, w12, w16
  68:	ccmp	x14, x15, #0x0, eq  // eq = none
  6c:	and	w12, w12, w11
  70:	csel	x13, x13, x8, ne  // ne = any
  74:	add	x8, x10, w12, uxtw #4
  78:	ldr	x14, [x8]
  7c:	add	w16, w16, #0x1
  80:	cmp	x14, x9
  84:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_EixEOS4_+0xa8>  // b.none
  88:	b	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_EixEOS4_+0x58>
  8c:	mov	x3, xzr
  90:	mov	x1, x19
  94:	mov	x2, x19
  98:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_EixEOS4_>
  9c:	ldr	x9, [x19]
  a0:	mov	x8, x0
  a4:	stp	x9, xzr, [x0]
  a8:	ldr	x19, [sp, #16]
  ac:	add	x0, x8, #0x8
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret
  b8:	cmp	x13, #0x0
  bc:	csel	x3, x8, x13, eq  // eq = none
  c0:	b	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_EixEOS4_+0x90>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_EixEOS4_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_EixEOS4_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_EixEOS4_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x252                 	// #594
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	110 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x110>  // b.plast
  54:	cbz	x3, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x19c>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x1
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x19c>
  a0:	ldr	x8, [x20]
  a4:	cmn	x8, #0x2
  a8:	b.cs	1bc <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x1bc>  // b.hs, b.nlast
  ac:	ldr	x9, [x19, #8]
  b0:	mov	w11, #0x25                  	// #37
  b4:	mul	w11, w8, w11
  b8:	sub	w10, w10, #0x1
  bc:	and	w11, w11, w10
  c0:	add	x3, x9, w11, uxtw #4
  c4:	ldr	x13, [x3]
  c8:	cmp	x8, x13
  cc:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x54>  // b.none
  d0:	mov	x12, xzr
  d4:	mov	w15, #0x1                   	// #1
  d8:	mov	x14, #0xfffffffffffffffe    	// #-2
  dc:	cmn	x13, #0x1
  e0:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x190>  // b.none
  e4:	cmp	x12, #0x0
  e8:	add	w11, w11, w15
  ec:	ccmp	x13, x14, #0x0, eq  // eq = none
  f0:	and	w11, w11, w10
  f4:	csel	x12, x12, x3, ne  // ne = any
  f8:	add	x3, x9, w11, uxtw #4
  fc:	ldr	x13, [x3]
 100:	add	w15, w15, #0x1
 104:	cmp	x8, x13
 108:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x54>  // b.none
 10c:	b	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0xdc>
 110:	mov	x0, x19
 114:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
 118:	ldr	w10, [x19, #24]
 11c:	cbz	w10, 19c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x19c>
 120:	ldr	x8, [x20]
 124:	cmn	x8, #0x2
 128:	b.cs	1bc <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x1bc>  // b.hs, b.nlast
 12c:	ldr	x9, [x19, #8]
 130:	mov	w11, #0x25                  	// #37
 134:	mul	w11, w8, w11
 138:	sub	w10, w10, #0x1
 13c:	and	w11, w11, w10
 140:	add	x3, x9, w11, uxtw #4
 144:	ldr	x13, [x3]
 148:	cmp	x8, x13
 14c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x54>  // b.none
 150:	mov	x12, xzr
 154:	mov	w15, #0x1                   	// #1
 158:	mov	x14, #0xfffffffffffffffe    	// #-2
 15c:	cmn	x13, #0x1
 160:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x190>  // b.none
 164:	cmp	x12, #0x0
 168:	add	w11, w11, w15
 16c:	ccmp	x13, x14, #0x0, eq  // eq = none
 170:	and	w11, w11, w10
 174:	csel	x12, x12, x3, ne  // ne = any
 178:	add	x3, x9, w11, uxtw #4
 17c:	ldr	x13, [x3]
 180:	add	w15, w15, #0x1
 184:	cmp	x8, x13
 188:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x54>  // b.none
 18c:	b	15c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x15c>
 190:	cmp	x12, #0x0
 194:	csel	x3, x3, x12, eq  // eq = none
 198:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_+0x54>
 19c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
 1a0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
 1a4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
 1a8:	add	x0, x0, #0x0
 1ac:	add	x1, x1, #0x0
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0x22f                 	// #559
 1b8:	bl	0 <__assert_fail>
 1bc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
 1c0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
 1c4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E20InsertIntoBucketImplImEEPS6_RKmRKT_SA_>
 1c8:	add	x0, x0, #0x0
 1cc:	add	x1, x1, #0x0
 1d0:	add	x3, x3, #0x0
 1d4:	mov	w2, #0x252                 	// #594
 1d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xffffffffffffffff    	// #-1
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xffffffffffffffff    	// #-1
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	15c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x15c>  // b.any
  1c:	ldr	x8, [x0, #8]
  20:	cbz	w9, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x80>
  24:	lsl	x10, x9, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x8, #0x10
  40:	add	x10, x8, x12, lsl #4
  44:	mov	x14, #0xffffffffffffffff    	// #-1
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x80>
  68:	mov	x10, x8
  6c:	add	x9, x8, x9, lsl #4
  70:	mov	x11, #0xffffffffffffffff    	// #-1
  74:	str	x11, [x10], #16
  78:	cmp	x9, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	134 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x134>  // b.none
  88:	mov	w9, #0x25                  	// #37
  8c:	mov	x10, #0xfffffffffffffffe    	// #-2
  90:	b	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0xc0>
  94:	cmp	x15, #0x0
  98:	csel	x12, x13, x15, eq  // eq = none
  9c:	str	x11, [x12]
  a0:	ldr	w11, [x1, #8]
  a4:	str	w11, [x12, #8]
  a8:	ldr	w11, [x0, #16]
  ac:	add	w11, w11, #0x1
  b0:	str	w11, [x0, #16]
  b4:	add	x1, x1, #0x10
  b8:	cmp	x1, x2
  bc:	b.eq	134 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x134>  // b.none
  c0:	ldr	x11, [x1]
  c4:	cmn	x11, #0x3
  c8:	b.hi	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0xb4>  // b.pmore
  cc:	ldr	w12, [x0, #24]
  d0:	cbz	w12, 12c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x12c>
  d4:	mul	w13, w11, w9
  d8:	sub	w12, w12, #0x1
  dc:	and	w14, w12, w13
  e0:	add	x13, x8, w14, uxtw #4
  e4:	ldr	x16, [x13]
  e8:	cmp	x11, x16
  ec:	b.eq	13c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x13c>  // b.none
  f0:	mov	x15, xzr
  f4:	mov	w17, #0x1                   	// #1
  f8:	cmn	x16, #0x1
  fc:	b.eq	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x94>  // b.none
 100:	cmp	x15, #0x0
 104:	add	w14, w14, w17
 108:	ccmp	x16, x10, #0x0, eq  // eq = none
 10c:	and	w14, w14, w12
 110:	csel	x15, x15, x13, ne  // ne = any
 114:	add	x13, x8, w14, uxtw #4
 118:	ldr	x16, [x13]
 11c:	add	w17, w17, #0x1
 120:	cmp	x11, x16
 124:	b.ne	f8 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0xf8>  // b.any
 128:	b	13c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x13c>
 12c:	mov	x12, xzr
 130:	b	9c <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_+0x9c>
 134:	ldp	x29, x30, [sp], #16
 138:	ret
 13c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
 140:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
 144:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
 148:	add	x0, x0, #0x0
 14c:	add	x1, x1, #0x0
 150:	add	x3, x3, #0x0
 154:	mov	w2, #0x17a                 	// #378
 158:	bl	0 <__assert_fail>
 15c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
 160:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
 164:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapImjNS_12DenseMapInfoImEENS_6detail12DenseMapPairImjEEEEmjS3_S6_E18moveFromOldBucketsEPS6_S9_>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x15c                 	// #348
 178:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	add	x8, x21, x21, lsl #1
  6c:	lsl	x0, x8, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xec>
  c4:	add	x8, x8, x8, lsl #1
  c8:	lsl	x8, x8, #3
  cc:	mov	x9, x20
  d0:	ldr	x10, [x0, #16]
  d4:	ldr	q0, [x0], #24
  d8:	subs	x8, x8, #0x18
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9], #24
  e4:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xd0>  // b.any
  e8:	ldr	x0, [x19]
  ec:	add	x8, x19, #0x10
  f0:	cmp	x0, x8
  f4:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseISt4pairImNS_3mca13ResourceUsageEELb0EE4growEm+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	str	x20, [x19]
 100:	str	w21, [x19, #12]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret

Disassembly of section .text._ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev:

0000000000000000 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev>:
   0:	adrp	x9, 0 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev>
   4:	mov	x8, x0
   8:	ldr	x0, [x0, #8]
   c:	ldr	x9, [x9]
  10:	add	x10, x8, #0x18
  14:	cmp	x0, x10
  18:	add	x9, x9, #0x10
  1c:	str	x9, [x8]
  20:	b.eq	28 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev+0x28>  // b.none
  24:	b	0 <_ZdlPv>
  28:	ret

Disassembly of section .text._ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev:

0000000000000000 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #8]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x18
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca16InstructionErrorINS_6MCInstEE3logERNS_11raw_ostreamE:

0000000000000000 <_ZNK4llvm3mca16InstructionErrorINS_6MCInstEE3logERNS_11raw_ostreamE>:
   0:	ldp	x8, x2, [x0, #8]
   4:	mov	x0, x1
   8:	mov	x1, x8
   c:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	sub	sp, sp, #0x90
   4:	stp	x29, x30, [sp, #96]
   8:	stp	x22, x21, [sp, #112]
   c:	stp	x20, x19, [sp, #128]
  10:	add	x29, sp, #0x60
  14:	sturb	wzr, [x29, #-24]
  18:	stp	xzr, xzr, [sp, #24]
  1c:	adrp	x11, 0 <_ZTVN4llvm18raw_string_ostreamE>
  20:	ldr	x11, [x11]
  24:	sub	x9, x29, #0x28
  28:	mov	w10, #0x1                   	// #1
  2c:	str	w10, [sp, #40]
  30:	add	x22, x9, #0x10
  34:	add	x10, x11, #0x10
  38:	stp	x22, xzr, [x29, #-40]
  3c:	stp	x10, xzr, [sp, #8]
  40:	str	x9, [sp, #48]
  44:	ldr	x9, [x0]
  48:	add	x1, sp, #0x8
  4c:	mov	x19, x8
  50:	ldr	x9, [x9, #16]
  54:	blr	x9
  58:	ldr	x8, [sp, #32]
  5c:	ldr	x9, [sp, #16]
  60:	cmp	x8, x9
  64:	b.eq	70 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x70>  // b.none
  68:	add	x0, sp, #0x8
  6c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  70:	ldr	x8, [sp, #48]
  74:	add	x0, x19, #0x10
  78:	str	x0, [x19]
  7c:	ldp	x20, x21, [x8]
  80:	cbnz	x20, 88 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x88>
  84:	cbnz	x21, 110 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x110>
  88:	cmp	x21, #0x10
  8c:	stur	x21, [x29, #-8]
  90:	b.cc	b0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb0>  // b.lo, b.ul, b.last
  94:	sub	x1, x29, #0x8
  98:	mov	x0, x19
  9c:	mov	x2, xzr
  a0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  a4:	ldur	x8, [x29, #-8]
  a8:	str	x0, [x19]
  ac:	str	x8, [x19, #16]
  b0:	cbz	x21, d4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xd4>
  b4:	cmp	x21, #0x1
  b8:	b.ne	c8 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xc8>  // b.any
  bc:	ldrb	w8, [x20]
  c0:	strb	w8, [x0]
  c4:	b	d4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xd4>
  c8:	mov	x1, x20
  cc:	mov	x2, x21
  d0:	bl	0 <memcpy>
  d4:	ldur	x8, [x29, #-8]
  d8:	ldr	x9, [x19]
  dc:	add	x0, sp, #0x8
  e0:	str	x8, [x19, #8]
  e4:	strb	wzr, [x9, x8]
  e8:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  ec:	ldur	x0, [x29, #-40]
  f0:	cmp	x0, x22
  f4:	b.eq	fc <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xfc>  // b.none
  f8:	bl	0 <_ZdlPv>
  fc:	ldp	x20, x19, [sp, #128]
 100:	ldp	x22, x21, [sp, #112]
 104:	ldp	x29, x30, [sp, #96]
 108:	add	sp, sp, #0x90
 10c:	ret
 110:	adrp	x0, 0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
 114:	add	x0, x0, #0x0
 118:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNK4llvm3mca16InstructionErrorINS_6MCInstEE18convertToErrorCodeEv:

0000000000000000 <_ZNK4llvm3mca16InstructionErrorINS_6MCInstEE18convertToErrorCodeEv>:
   0:	b	0 <_ZN4llvm22inconvertibleErrorCodeEv>

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv>:
   0:	adrp	x8, 0 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv>
   4:	ldr	x8, [x8]
   8:	adrp	x9, 0 <_ZN4llvm13ErrorInfoBase2IDE>
   c:	ldr	x9, [x9]
  10:	cmp	x1, x8
  14:	cset	w8, eq  // eq = none
  18:	cmp	x1, x9
  1c:	cset	w9, eq  // eq = none
  20:	orr	w0, w8, w9
  24:	ret

Disassembly of section .text._ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	ldp	x9, x8, [x0, #16]
  18:	sub	x9, x9, x8
  1c:	cmp	x9, #0x39
  20:	b.hi	38 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x38>  // b.pmore
  24:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  28:	add	x1, x1, #0x0
  2c:	mov	w2, #0x3a                  	// #58
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	b	64 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x64>
  38:	adrp	x9, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  3c:	add	x9, x9, #0x0
  40:	ldur	q0, [x9, #42]
  44:	ldp	q2, q1, [x9, #16]
  48:	ldr	q3, [x9]
  4c:	stur	q0, [x8, #42]
  50:	stp	q2, q1, [x8, #16]
  54:	str	q3, [x8]
  58:	ldr	x8, [x0, #24]
  5c:	add	x8, x8, #0x3a
  60:	str	x8, [x0, #24]
  64:	ldrb	w20, [x19, #8]
  68:	bl	0 <_ZN4llvm4dbgsEv>
  6c:	ldp	x9, x8, [x0, #16]
  70:	sub	x9, x9, x8
  74:	tbnz	w20, #0, 94 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x94>
  78:	cmp	x9, #0x82
  7c:	b.hi	d4 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0xd4>  // b.pmore
  80:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x83                  	// #131
  8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  90:	bl	0 <abort>
  94:	cmp	x9, #0x26
  98:	b.hi	118 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x118>  // b.pmore
  9c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  a0:	add	x1, x1, #0x0
  a4:	mov	w2, #0x27                  	// #39
  a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ac:	ldrb	w8, [x19, #8]
  b0:	tbz	w8, #0, 144 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x144>
  b4:	ldr	x19, [x19]
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	ldr	x8, [x19]
  c0:	mov	x1, x0
  c4:	mov	x0, x19
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	bl	0 <abort>
  d4:	adrp	x9, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  d8:	add	x9, x9, #0x0
  dc:	ldp	q1, q0, [x9, #32]
  e0:	ldp	q2, q3, [x9]
  e4:	stp	q1, q0, [x8, #32]
  e8:	ldp	q0, q1, [x9, #96]
  ec:	stp	q2, q3, [x8]
  f0:	ldp	q2, q3, [x9, #64]
  f4:	mov	w9, #0x2964                	// #10596
  f8:	movk	w9, #0xa2e, lsl #16
  fc:	stur	w9, [x8, #127]
 100:	stp	q0, q1, [x8, #96]
 104:	stp	q2, q3, [x8, #64]
 108:	ldr	x8, [x0, #24]
 10c:	add	x8, x8, #0x83
 110:	str	x8, [x0, #24]
 114:	bl	0 <abort>
 118:	adrp	x9, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
 11c:	add	x9, x9, #0x0
 120:	ldur	x10, [x9, #31]
 124:	ldp	q1, q0, [x9]
 128:	stur	x10, [x8, #31]
 12c:	stp	q1, q0, [x8]
 130:	ldr	x8, [x0, #24]
 134:	add	x8, x8, #0x27
 138:	str	x8, [x0, #24]
 13c:	ldrb	w8, [x19, #8]
 140:	tbnz	w8, #0, b4 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0xb4>
 144:	adrp	x0, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
 148:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
 14c:	adrp	x3, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x281                 	// #641
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	11c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x11c>  // b.plast
  54:	cbz	x3, 1b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x1b4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldrsh	w8, [x3]
  68:	cmn	w8, #0x1
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x1b4>
  a0:	ldrh	w8, [x20]
  a4:	mov	w9, #0xfffe                	// #65534
  a8:	cmp	w8, w9
  ac:	b.cs	1d4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x1d4>  // b.hs, b.nlast
  b0:	ldr	x9, [x19, #8]
  b4:	mov	w11, #0x25                  	// #37
  b8:	mul	w11, w8, w11
  bc:	sub	w10, w10, #0x1
  c0:	and	x11, x11, x10
  c4:	add	x3, x9, x11, lsl #4
  c8:	ldrh	w14, [x3]
  cc:	cmp	w8, w14
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	w13, #0xfffe                	// #65534
  e0:	mvn	w16, w14
  e4:	tst	w16, #0xffff
  e8:	b.eq	1a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x1a8>  // b.none
  ec:	and	w14, w14, #0xffff
  f0:	cmp	x12, #0x0
  f4:	add	w11, w11, w15
  f8:	ccmp	w14, w13, #0x0, eq  // eq = none
  fc:	and	w11, w11, w10
 100:	csel	x12, x12, x3, ne  // ne = any
 104:	add	x3, x9, w11, uxtw #4
 108:	ldrh	w14, [x3]
 10c:	add	w15, w15, #0x1
 110:	cmp	w8, w14
 114:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x54>  // b.none
 118:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0xe0>
 11c:	mov	x0, x19
 120:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
 124:	ldr	w10, [x19, #24]
 128:	cbz	w10, 1b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x1b4>
 12c:	ldrh	w8, [x20]
 130:	mov	w9, #0xfffe                	// #65534
 134:	cmp	w8, w9
 138:	b.cs	1d4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x1d4>  // b.hs, b.nlast
 13c:	ldr	x9, [x19, #8]
 140:	mov	w11, #0x25                  	// #37
 144:	mul	w11, w8, w11
 148:	sub	w10, w10, #0x1
 14c:	and	x11, x11, x10
 150:	add	x3, x9, x11, lsl #4
 154:	ldrh	w14, [x3]
 158:	cmp	w8, w14
 15c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x54>  // b.none
 160:	mov	x12, xzr
 164:	mov	w15, #0x1                   	// #1
 168:	mov	w13, #0xfffe                	// #65534
 16c:	mvn	w16, w14
 170:	tst	w16, #0xffff
 174:	b.eq	1a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x1a8>  // b.none
 178:	and	w14, w14, #0xffff
 17c:	cmp	x12, #0x0
 180:	add	w11, w11, w15
 184:	ccmp	w14, w13, #0x0, eq  // eq = none
 188:	and	w11, w11, w10
 18c:	csel	x12, x12, x3, ne  // ne = any
 190:	add	x3, x9, w11, uxtw #4
 194:	ldrh	w14, [x3]
 198:	add	w15, w15, #0x1
 19c:	cmp	w8, w14
 1a0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x54>  // b.none
 1a4:	b	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x16c>
 1a8:	cmp	x12, #0x0
 1ac:	csel	x3, x3, x12, eq  // eq = none
 1b0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_+0x54>
 1b4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
 1b8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
 1bc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
 1c0:	add	x0, x0, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x3, x3, #0x0
 1cc:	mov	w2, #0x22f                 	// #559
 1d0:	bl	0 <__assert_fail>
 1d4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
 1d8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
 1dc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E20InsertIntoBucketImplItEEPSD_RKtRKT_SH_>
 1e0:	add	x0, x0, #0x0
 1e4:	add	x1, x1, #0x0
 1e8:	add	x3, x3, #0x0
 1ec:	mov	w2, #0x252                 	// #594
 1f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	w13, #0xffff                	// #65535
  c0:	mov	x14, x11
  c4:	sturh	w13, [x12, #-16]
  c8:	strh	w13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	w10, #0xffff                	// #65535
  ec:	strh	w10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS4_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS7_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	w8, [x0, #24]
  1c:	str	xzr, [x0, #16]
  20:	sub	w9, w8, #0x1
  24:	tst	w8, w9
  28:	b.ne	1f0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x1f0>  // b.any
  2c:	mov	x19, x2
  30:	mov	x20, x1
  34:	mov	x21, x0
  38:	cbz	w8, 9c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x9c>
  3c:	ldr	x9, [x21, #8]
  40:	lsl	x10, x8, #4
  44:	subs	x10, x10, #0x10
  48:	b.eq	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x84>  // b.none
  4c:	lsr	x10, x10, #4
  50:	add	x11, x10, #0x1
  54:	and	x12, x11, #0x1ffffffffffffffe
  58:	add	x13, x9, #0x10
  5c:	add	x10, x9, x12, lsl #4
  60:	mov	w14, #0xffff                	// #65535
  64:	mov	x15, x12
  68:	sturh	w14, [x13, #-16]
  6c:	strh	w14, [x13], #32
  70:	subs	x15, x15, #0x2
  74:	b.ne	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x68>  // b.any
  78:	cmp	x11, x12
  7c:	b.ne	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x88>  // b.any
  80:	b	9c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x9c>
  84:	mov	x10, x9
  88:	add	x8, x9, x8, lsl #4
  8c:	mov	w9, #0xffff                	// #65535
  90:	strh	w9, [x10], #16
  94:	cmp	x8, x10
  98:	b.ne	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x90>  // b.any
  9c:	cmp	x20, x19
  a0:	b.eq	1b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x1b8>  // b.none
  a4:	mov	w23, #0xfffd                	// #65533
  a8:	mov	w24, #0x25                  	// #37
  ac:	mov	w25, #0xfffe                	// #65534
  b0:	b	cc <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0xcc>
  b4:	mov	x0, x22
  b8:	bl	0 <_ZdlPv>
  bc:	str	xzr, [x20, #8]
  c0:	add	x20, x20, #0x10
  c4:	cmp	x20, x19
  c8:	b.eq	1b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x1b8>  // b.none
  cc:	ldrh	w8, [x20]
  d0:	cmp	x8, x23
  d4:	b.hi	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0xc0>  // b.pmore
  d8:	ldr	w10, [x21, #24]
  dc:	cbz	w10, 150 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x150>
  e0:	ldr	x9, [x21, #8]
  e4:	mul	x11, x8, x24
  e8:	sub	w10, w10, #0x1
  ec:	and	x12, x10, x11
  f0:	add	x11, x9, x12, lsl #4
  f4:	ldrh	w14, [x11]
  f8:	cmp	w8, w14
  fc:	b.eq	1d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x1d0>  // b.none
 100:	mov	x13, xzr
 104:	mov	w15, #0x1                   	// #1
 108:	mvn	w16, w14
 10c:	tst	w16, #0xffff
 110:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x144>  // b.none
 114:	and	w14, w14, #0xffff
 118:	cmp	x13, #0x0
 11c:	add	w12, w12, w15
 120:	ccmp	w14, w25, #0x0, eq  // eq = none
 124:	and	w12, w12, w10
 128:	csel	x13, x13, x11, ne  // ne = any
 12c:	add	x11, x9, w12, uxtw #4
 130:	ldrh	w14, [x11]
 134:	add	w15, w15, #0x1
 138:	cmp	w8, w14
 13c:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x108>  // b.any
 140:	b	1d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x1d0>
 144:	cmp	x13, #0x0
 148:	csel	x9, x11, x13, eq  // eq = none
 14c:	b	154 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x154>
 150:	mov	x9, xzr
 154:	strh	w8, [x9]
 158:	ldr	x8, [x20, #8]
 15c:	str	xzr, [x20, #8]
 160:	str	x8, [x9, #8]
 164:	ldr	w8, [x21, #16]
 168:	add	w8, w8, #0x1
 16c:	str	w8, [x21, #16]
 170:	ldr	x22, [x20, #8]
 174:	cbz	x22, bc <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0xbc>
 178:	ldr	x0, [x22, #176]
 17c:	add	x8, x22, #0xc0
 180:	cmp	x0, x8
 184:	b.eq	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x18c>  // b.none
 188:	bl	0 <free>
 18c:	ldr	x0, [x22, #96]
 190:	add	x8, x22, #0x70
 194:	cmp	x0, x8
 198:	b.eq	1a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0x1a0>  // b.none
 19c:	bl	0 <free>
 1a0:	mov	x8, x22
 1a4:	ldr	x0, [x8], #16
 1a8:	cmp	x0, x8
 1ac:	b.eq	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0xb4>  // b.none
 1b0:	bl	0 <free>
 1b4:	b	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_+0xb4>
 1b8:	ldp	x20, x19, [sp, #64]
 1bc:	ldp	x22, x21, [sp, #48]
 1c0:	ldp	x24, x23, [sp, #32]
 1c4:	ldr	x25, [sp, #16]
 1c8:	ldp	x29, x30, [sp], #80
 1cc:	ret
 1d0:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
 1d4:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
 1d8:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
 1dc:	add	x0, x0, #0x0
 1e0:	add	x1, x1, #0x0
 1e4:	add	x3, x3, #0x0
 1e8:	mov	w2, #0x17a                 	// #378
 1ec:	bl	0 <__assert_fail>
 1f0:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
 1f4:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
 1f8:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapItSt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS5_EENS_12DenseMapInfoItEENS_6detail12DenseMapPairItS8_EEEEtS8_SA_SD_E18moveFromOldBucketsEPSD_SG_>
 1fc:	add	x0, x0, #0x0
 200:	add	x1, x1, #0x0
 204:	add	x3, x3, #0x0
 208:	mov	w2, #0x15c                 	// #348
 20c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E20InsertIntoBucketImplIS4_EEPSG_RKS4_RKT_SK_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w8, [x0, #24]
  18:	str	xzr, [x0, #16]
  1c:	sub	w9, w8, #0x1
  20:	tst	w8, w9
  24:	b.ne	208 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x208>  // b.any
  28:	mov	x19, x2
  2c:	mov	x20, x1
  30:	mov	x21, x0
  34:	cbz	w8, 98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x98>
  38:	ldr	x9, [x21, #8]
  3c:	lsl	x10, x8, #4
  40:	subs	x10, x10, #0x10
  44:	b.eq	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x80>  // b.none
  48:	lsr	x10, x10, #4
  4c:	add	x11, x10, #0x1
  50:	and	x12, x11, #0x1ffffffffffffffe
  54:	add	x13, x9, #0x10
  58:	add	x10, x9, x12, lsl #4
  5c:	mov	x14, #0xfffffffffffffff8    	// #-8
  60:	mov	x15, x12
  64:	stur	x14, [x13, #-16]
  68:	str	x14, [x13], #32
  6c:	subs	x15, x15, #0x2
  70:	b.ne	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x64>  // b.any
  74:	cmp	x11, x12
  78:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x84>  // b.any
  7c:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x98>
  80:	mov	x10, x9
  84:	add	x8, x9, x8, lsl #4
  88:	mov	x9, #0xfffffffffffffff8    	// #-8
  8c:	str	x9, [x10], #16
  90:	cmp	x8, x10
  94:	b.ne	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x8c>  // b.any
  98:	cmp	x20, x19
  9c:	b.eq	1b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x1b4>  // b.none
  a0:	mov	x23, #0xfffffffffffffff0    	// #-16
  a4:	b	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0xc0>
  a8:	mov	x0, x22
  ac:	bl	0 <_ZdlPv>
  b0:	str	xzr, [x20, #8]
  b4:	add	x20, x20, #0x10
  b8:	cmp	x20, x19
  bc:	b.eq	1b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x1b4>  // b.none
  c0:	ldr	x8, [x20]
  c4:	orr	x9, x8, #0x8
  c8:	cmn	x9, #0x8
  cc:	b.eq	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0xb4>  // b.none
  d0:	ldr	w10, [x21, #24]
  d4:	cbz	w10, 14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x14c>
  d8:	cmn	x8, #0x8
  dc:	b.eq	1e8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x1e8>  // b.none
  e0:	ldr	x9, [x21, #8]
  e4:	ubfx	x11, x8, #4, #28
  e8:	eor	w11, w11, w8, lsr #9
  ec:	sub	w10, w10, #0x1
  f0:	and	w12, w11, w10
  f4:	add	x11, x9, w12, uxtw #4
  f8:	ldr	x14, [x11]
  fc:	cmp	x14, x8
 100:	b.eq	1c8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x1c8>  // b.none
 104:	mov	x13, xzr
 108:	mov	w15, #0x1                   	// #1
 10c:	cmn	x14, #0x8
 110:	b.eq	140 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x140>  // b.none
 114:	cmp	x13, #0x0
 118:	add	w12, w12, w15
 11c:	ccmp	x14, x23, #0x0, eq  // eq = none
 120:	and	w12, w12, w10
 124:	csel	x13, x13, x11, ne  // ne = any
 128:	add	x11, x9, w12, uxtw #4
 12c:	ldr	x14, [x11]
 130:	add	w15, w15, #0x1
 134:	cmp	x14, x8
 138:	b.ne	10c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x10c>  // b.any
 13c:	b	1c8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x1c8>
 140:	cmp	x13, #0x0
 144:	csel	x9, x11, x13, eq  // eq = none
 148:	b	150 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x150>
 14c:	mov	x9, xzr
 150:	str	x8, [x9]
 154:	ldr	x8, [x20, #8]
 158:	str	xzr, [x20, #8]
 15c:	str	x8, [x9, #8]
 160:	ldr	w8, [x21, #16]
 164:	add	w8, w8, #0x1
 168:	str	w8, [x21, #16]
 16c:	ldr	x22, [x20, #8]
 170:	cbz	x22, b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0xb0>
 174:	ldr	x0, [x22, #176]
 178:	add	x8, x22, #0xc0
 17c:	cmp	x0, x8
 180:	b.eq	188 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x188>  // b.none
 184:	bl	0 <free>
 188:	ldr	x0, [x22, #96]
 18c:	add	x8, x22, #0x70
 190:	cmp	x0, x8
 194:	b.eq	19c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0x19c>  // b.none
 198:	bl	0 <free>
 19c:	mov	x8, x22
 1a0:	ldr	x0, [x8], #16
 1a4:	cmp	x0, x8
 1a8:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0xa8>  // b.none
 1ac:	bl	0 <free>
 1b0:	b	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_+0xa8>
 1b4:	ldp	x20, x19, [sp, #48]
 1b8:	ldp	x22, x21, [sp, #32]
 1bc:	ldr	x23, [sp, #16]
 1c0:	ldp	x29, x30, [sp], #64
 1c4:	ret
 1c8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 1cc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 1d0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 1d4:	add	x0, x0, #0x0
 1d8:	add	x1, x1, #0x0
 1dc:	add	x3, x3, #0x0
 1e0:	mov	w2, #0x17a                 	// #378
 1e4:	bl	0 <__assert_fail>
 1e8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 1ec:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 1f0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0x252                 	// #594
 204:	bl	0 <__assert_fail>
 208:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 20c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 210:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS8_EENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_SB_EEEES4_SB_SD_SG_E18moveFromOldBucketsEPSG_SJ_>
 214:	add	x0, x0, #0x0
 218:	add	x1, x1, #0x0
 21c:	add	x3, x3, #0x0
 220:	mov	w2, #0x15c                 	// #348
 224:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>:
   0:	str	d8, [sp, #-80]!
   4:	stp	x29, x30, [sp, #8]
   8:	str	x25, [sp, #24]
   c:	stp	x24, x23, [sp, #32]
  10:	stp	x22, x21, [sp, #48]
  14:	stp	x20, x19, [sp, #64]
  18:	mov	x29, sp
  1c:	mov	x20, x1
  20:	lsr	x8, x1, #32
  24:	mov	x19, x0
  28:	cbz	x8, 3c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x3c>
  2c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  30:	add	x0, x0, #0x0
  34:	mov	w1, #0x1                   	// #1
  38:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  3c:	ldr	w8, [x19, #12]
  40:	add	x8, x8, #0x2
  44:	orr	x8, x8, x8, lsr #1
  48:	orr	x8, x8, x8, lsr #2
  4c:	orr	x8, x8, x8, lsr #4
  50:	orr	x8, x8, x8, lsr #8
  54:	orr	x8, x8, x8, lsr #16
  58:	orr	x8, x8, x8, lsr #32
  5c:	add	x9, x8, #0x1
  60:	cmp	x9, x20
  64:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  68:	mov	w9, #0xffffffff            	// #-1
  6c:	cmp	x8, x9
  70:	csel	x23, x8, x9, cc  // cc = lo, ul, last
  74:	add	x8, x23, x23, lsl #4
  78:	lsl	x0, x8, #3
  7c:	bl	0 <malloc>
  80:	mov	x20, x0
  84:	cbnz	x0, c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xc4>
  88:	cbz	x23, a4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xa4>
  8c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  90:	add	x0, x0, #0x0
  94:	mov	w1, #0x1                   	// #1
  98:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  9c:	mov	x20, xzr
  a0:	b	c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xc4>
  a4:	mov	w0, #0x1                   	// #1
  a8:	bl	0 <malloc>
  ac:	mov	x20, x0
  b0:	cbnz	x0, c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xc4>
  b4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  b8:	add	x0, x0, #0x0
  bc:	mov	w1, #0x1                   	// #1
  c0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  c4:	ldr	w8, [x19, #8]
  c8:	ldr	x21, [x19]
  cc:	cbz	w8, 184 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x184>
  d0:	adrp	x10, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  d4:	ldr	d8, [x10]
  d8:	mov	w9, #0x88                  	// #136
  dc:	madd	x24, x8, x9, x21
  e0:	add	x22, x20, #0x38
  e4:	add	x21, x21, #0x38
  e8:	b	100 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x100>
  ec:	add	x8, x25, #0x88
  f0:	add	x22, x22, #0x88
  f4:	cmp	x8, x24
  f8:	add	x21, x21, #0x88
  fc:	b.eq	144 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x144>  // b.none
 100:	ldur	q0, [x21, #-56]
 104:	ldur	q1, [x21, #-40]
 108:	ldur	x8, [x21, #-8]
 10c:	ldur	q2, [x21, #-24]
 110:	add	x9, x22, #0x10
 114:	stur	q1, [x22, #-40]
 118:	stp	x8, x9, [x22, #-8]
 11c:	stur	q2, [x22, #-24]
 120:	stur	q0, [x22, #-56]
 124:	str	d8, [x22, #8]
 128:	ldr	w8, [x21, #8]
 12c:	sub	x25, x21, #0x38
 130:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xec>
 134:	mov	x0, x22
 138:	mov	x1, x21
 13c:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
 140:	b	ec <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xec>
 144:	ldr	w8, [x19, #8]
 148:	ldr	x21, [x19]
 14c:	cbz	w8, 184 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x184>
 150:	add	x8, x8, x8, lsl #4
 154:	lsl	x22, x8, #3
 158:	b	164 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x164>
 15c:	subs	x22, x22, #0x88
 160:	b.eq	180 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x180>  // b.none
 164:	add	x8, x21, x22
 168:	ldur	x0, [x8, #-80]
 16c:	sub	x8, x8, #0x40
 170:	cmp	x8, x0
 174:	b.eq	15c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x15c>  // b.none
 178:	bl	0 <free>
 17c:	b	15c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x15c>
 180:	ldr	x21, [x19]
 184:	add	x8, x19, #0x10
 188:	cmp	x21, x8
 18c:	b.eq	198 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x198>  // b.none
 190:	mov	x0, x21
 194:	bl	0 <free>
 198:	str	x20, [x19]
 19c:	str	w23, [x19, #12]
 1a0:	ldp	x20, x19, [sp, #64]
 1a4:	ldp	x22, x21, [sp, #48]
 1a8:	ldp	x24, x23, [sp, #32]
 1ac:	ldr	x25, [sp, #24]
 1b0:	ldp	x29, x30, [sp, #8]
 1b4:	ldr	d8, [sp], #80
 1b8:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	120 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x120>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w8, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w8, w20
  2c:	b.cs	60 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x60>  // b.hs, b.nlast
  30:	ldr	w9, [x19, #12]
  34:	cmp	w9, w20
  38:	b.cs	98 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x98>  // b.hs, b.nlast
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	str	wzr, [x19, #8]
  48:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  4c:	ldr	w9, [x21, #8]
  50:	mov	x8, xzr
  54:	cmp	x8, x9
  58:	b.ne	e0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xe0>  // b.any
  5c:	b	110 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x110>
  60:	cbz	w20, 110 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x110>
  64:	ldr	x8, [x21]
  68:	ldr	x9, [x19]
  6c:	add	x10, x20, #0x1
  70:	ldr	x11, [x8]
  74:	sub	x10, x10, #0x1
  78:	cmp	x10, #0x1
  7c:	str	x11, [x9]
  80:	ldr	w11, [x8, #8]
  84:	add	x8, x8, #0x10
  88:	str	w11, [x9, #8]
  8c:	add	x9, x9, #0x10
  90:	b.gt	70 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x70>
  94:	b	110 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x110>
  98:	cbz	w8, d0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xd0>
  9c:	ldr	x9, [x21]
  a0:	ldr	x10, [x19]
  a4:	add	x11, x8, #0x1
  a8:	ldr	x12, [x9]
  ac:	sub	x11, x11, #0x1
  b0:	cmp	x11, #0x1
  b4:	str	x12, [x10]
  b8:	ldr	w12, [x9, #8]
  bc:	add	x9, x9, #0x10
  c0:	str	w12, [x10, #8]
  c4:	add	x10, x10, #0x10
  c8:	b.gt	a8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xa8>
  cc:	b	d4 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xd4>
  d0:	mov	x8, xzr
  d4:	mov	x9, x20
  d8:	cmp	x8, x9
  dc:	b.eq	110 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x110>  // b.none
  e0:	ldr	x10, [x19]
  e4:	ldr	x11, [x21]
  e8:	lsl	x12, x8, #4
  ec:	lsl	x13, x9, #4
  f0:	add	x8, x10, x12
  f4:	add	x9, x11, x12
  f8:	sub	x10, x13, x12
  fc:	ldr	q0, [x9], #16
 100:	subs	x10, x10, #0x10
 104:	str	q0, [x8]
 108:	add	x8, x8, #0x10
 10c:	b.ne	fc <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xfc>  // b.any
 110:	ldr	w8, [x19, #12]
 114:	cmp	w8, w20
 118:	b.cc	134 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x134>  // b.lo, b.ul, b.last
 11c:	str	w20, [x19, #8]
 120:	mov	x0, x19
 124:	ldp	x20, x19, [sp, #32]
 128:	ldr	x21, [sp, #16]
 12c:	ldp	x29, x30, [sp], #48
 130:	ret
 134:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 138:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 13c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 140:	add	x0, x0, #0x0
 144:	add	x1, x1, #0x0
 148:	add	x3, x3, #0x0
 14c:	mov	w2, #0x43                  	// #67
 150:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Instruction.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>:
       0:	strh	w2, [x0, #48]
       4:	str	w3, [x0, #52]
       8:	stp	w3, w1, [x0, #40]
       c:	str	xzr, [x0, #24]
      10:	ret

0000000000000014 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>:
      14:	stp	x29, x30, [sp, #-16]!
      18:	mov	x29, sp
      1c:	ldr	w8, [x0, #16]
      20:	cbz	w8, 7c <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x68>
      24:	ldr	w9, [x0, #20]
      28:	cmn	w9, #0x200
      2c:	b.ne	9c <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x88>  // b.any
      30:	ldr	w9, [x0, #24]
      34:	sub	w8, w8, #0x1
      38:	str	w8, [x0, #16]
      3c:	cmp	w9, w3
      40:	b.cc	50 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x3c>  // b.lo, b.ul, b.last
      44:	cbz	w8, 64 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x50>
      48:	ldp	x29, x30, [sp], #16
      4c:	ret
      50:	mov	w9, w3
      54:	strh	w2, [x0, #32]
      58:	str	w3, [x0, #36]
      5c:	stp	w3, w1, [x0, #24]
      60:	cbnz	w8, 48 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x34>
      64:	cmp	w9, #0x0
      68:	cset	w8, eq  // eq = none
      6c:	str	w9, [x0, #20]
      70:	strb	w8, [x0, #40]
      74:	ldp	x29, x30, [sp], #16
      78:	ret
      7c:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      80:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      84:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      88:	add	x0, x0, #0x0
      8c:	add	x1, x1, #0x0
      90:	add	x3, x3, #0x0
      94:	mov	w2, #0x1f                  	// #31
      98:	bl	0 <__assert_fail>
      9c:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      a0:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      a4:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      a8:	add	x0, x0, #0x0
      ac:	add	x1, x1, #0x0
      b0:	add	x3, x3, #0x0
      b4:	mov	w2, #0x20                  	// #32
      b8:	bl	0 <__assert_fail>

00000000000000bc <_ZN4llvm3mca10WriteState19onInstructionIssuedEj>:
      bc:	stp	x29, x30, [sp, #-16]!
      c0:	mov	x29, sp
      c4:	ldr	w8, [x0, #8]
      c8:	cmn	w8, #0x200
      cc:	b.ne	1c8 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x10c>  // b.any
      d0:	ldr	x8, [x0]
      d4:	ldr	w11, [x0, #64]
      d8:	ldr	w8, [x8, #4]
      dc:	str	w8, [x0, #8]
      e0:	cbz	w11, 164 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xa8>
      e4:	ldr	x9, [x0, #56]
      e8:	ldrh	w10, [x0, #12]
      ec:	add	x11, x9, x11, lsl #4
      f0:	b	104 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x48>
      f4:	cbz	w13, 150 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x94>
      f8:	add	x9, x9, #0x10
      fc:	cmp	x9, x11
     100:	b.eq	164 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xa8>  // b.none
     104:	ldr	x12, [x9]
     108:	ldr	w13, [x12, #16]
     10c:	cbz	w13, 188 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xcc>
     110:	ldr	w14, [x12, #20]
     114:	cmn	w14, #0x200
     118:	b.ne	1a8 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xec>  // b.any
     11c:	ldr	w15, [x9, #8]
     120:	ldr	w14, [x12, #24]
     124:	sub	w13, w13, #0x1
     128:	str	w13, [x12, #16]
     12c:	sub	w15, w8, w15
     130:	bic	w16, w15, w15, asr #31
     134:	cmp	w14, w16
     138:	b.cs	f4 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x38>  // b.hs, b.nlast
     13c:	mov	w14, w15
     140:	strh	w10, [x12, #32]
     144:	str	w16, [x12, #36]
     148:	stp	w16, w1, [x12, #24]
     14c:	b	f4 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x38>
     150:	cmp	w14, #0x0
     154:	cset	w13, eq  // eq = none
     158:	str	w14, [x12, #20]
     15c:	strb	w13, [x12, #40]
     160:	b	f8 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x3c>
     164:	ldr	x9, [x0, #32]
     168:	cbz	x9, 180 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xc4>
     16c:	ldrh	w10, [x0, #12]
     170:	str	w8, [x9, #52]
     174:	stp	w8, w1, [x9, #40]
     178:	str	xzr, [x9, #24]
     17c:	strh	w10, [x9, #48]
     180:	ldp	x29, x30, [sp], #16
     184:	ret
     188:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     18c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     190:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     194:	add	x0, x0, #0x0
     198:	add	x1, x1, #0x0
     19c:	add	x3, x3, #0x0
     1a0:	mov	w2, #0x1f                  	// #31
     1a4:	bl	0 <__assert_fail>
     1a8:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     1ac:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     1b0:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     1b4:	add	x0, x0, #0x0
     1b8:	add	x1, x1, #0x0
     1bc:	add	x3, x3, #0x0
     1c0:	mov	w2, #0x20                  	// #32
     1c4:	bl	0 <__assert_fail>
     1c8:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     1cc:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     1d0:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     1d4:	add	x0, x0, #0x0
     1d8:	add	x1, x1, #0x0
     1dc:	add	x3, x3, #0x0
     1e0:	mov	w2, #0x36                  	// #54
     1e4:	bl	0 <__assert_fail>

00000000000001e8 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi>:
     1e8:	stp	x29, x30, [sp, #-48]!
     1ec:	stp	x22, x21, [sp, #16]
     1f0:	stp	x20, x19, [sp, #32]
     1f4:	mov	x29, sp
     1f8:	ldr	w8, [x0, #8]
     1fc:	mov	w21, w3
     200:	mov	x19, x2
     204:	mov	x20, x0
     208:	cmn	w8, #0x200
     20c:	b.ne	244 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x5c>  // b.any
     210:	ldp	w8, w9, [x20, #64]
     214:	add	x22, x20, #0x38
     218:	cmp	w8, w9
     21c:	b.cs	2ac <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xc4>  // b.hs, b.nlast
     220:	ldr	x10, [x22]
     224:	cmp	w8, w9
     228:	add	x9, x10, w8, uxtw #4
     22c:	str	x19, [x9]
     230:	str	w21, [x9, #8]
     234:	b.cs	2c0 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xd8>  // b.hs, b.nlast
     238:	add	w8, w8, #0x1
     23c:	str	w8, [x20, #64]
     240:	b	29c <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xb4>
     244:	ldr	w9, [x19, #16]
     248:	cbz	w9, 2e0 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xf8>
     24c:	ldr	w10, [x19, #20]
     250:	cmn	w10, #0x200
     254:	b.ne	300 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x118>  // b.any
     258:	ldr	w10, [x19, #24]
     25c:	ldrh	w12, [x20, #12]
     260:	sub	w8, w8, w21
     264:	bic	w11, w8, w8, asr #31
     268:	sub	w9, w9, #0x1
     26c:	cmp	w10, w11
     270:	str	w9, [x19, #16]
     274:	b.cs	288 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xa0>  // b.hs, b.nlast
     278:	mov	w10, w8
     27c:	strh	w12, [x19, #32]
     280:	str	w11, [x19, #36]
     284:	stp	w11, w1, [x19, #24]
     288:	cbnz	w9, 29c <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xb4>
     28c:	cmp	w10, #0x0
     290:	cset	w8, eq  // eq = none
     294:	str	w10, [x19, #20]
     298:	strb	w8, [x19, #40]
     29c:	ldp	x20, x19, [sp, #32]
     2a0:	ldp	x22, x21, [sp, #16]
     2a4:	ldp	x29, x30, [sp], #48
     2a8:	ret
     2ac:	mov	x0, x22
     2b0:	mov	x1, xzr
     2b4:	bl	0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2b8:	ldp	w8, w9, [x20, #64]
     2bc:	b	220 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x38>
     2c0:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2c4:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2c8:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2cc:	add	x0, x0, #0x0
     2d0:	add	x1, x1, #0x0
     2d4:	add	x3, x3, #0x0
     2d8:	mov	w2, #0x43                  	// #67
     2dc:	bl	0 <__assert_fail>
     2e0:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2e4:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2e8:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2ec:	add	x0, x0, #0x0
     2f0:	add	x1, x1, #0x0
     2f4:	add	x3, x3, #0x0
     2f8:	mov	w2, #0x1f                  	// #31
     2fc:	bl	0 <__assert_fail>
     300:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     304:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     308:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     30c:	add	x0, x0, #0x0
     310:	add	x1, x1, #0x0
     314:	add	x3, x3, #0x0
     318:	mov	w2, #0x20                  	// #32
     31c:	bl	0 <__assert_fail>

0000000000000320 <_ZN4llvm3mca10WriteState7addUserEjPS1_>:
     320:	stp	x29, x30, [sp, #-16]!
     324:	mov	x29, sp
     328:	ldr	w8, [x0, #8]
     32c:	cmn	w8, #0x200
     330:	b.ne	344 <_ZN4llvm3mca10WriteState7addUserEjPS1_+0x24>  // b.any
     334:	ldr	x8, [x0, #32]
     338:	cbnz	x8, 368 <_ZN4llvm3mca10WriteState7addUserEjPS1_+0x48>
     33c:	str	x2, [x0, #32]
     340:	b	35c <_ZN4llvm3mca10WriteState7addUserEjPS1_+0x3c>
     344:	ldrh	w9, [x0, #12]
     348:	bic	w8, w8, w8, asr #31
     34c:	str	w8, [x2, #52]
     350:	stp	w8, w1, [x2, #40]
     354:	strh	w9, [x2, #48]
     358:	mov	x0, xzr
     35c:	str	x0, [x2, #24]
     360:	ldp	x29, x30, [sp], #16
     364:	ret
     368:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     36c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     370:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     374:	add	x0, x0, #0x0
     378:	add	x1, x1, #0x0
     37c:	add	x3, x3, #0x0
     380:	mov	w2, #0x5a                  	// #90
     384:	bl	0 <__assert_fail>

0000000000000388 <_ZN4llvm3mca10WriteState10cycleEventEv>:
     388:	ldr	w8, [x0, #8]
     38c:	cmn	w8, #0x200
     390:	b.eq	39c <_ZN4llvm3mca10WriteState10cycleEventEv+0x14>  // b.none
     394:	sub	w8, w8, #0x1
     398:	str	w8, [x0, #8]
     39c:	ldr	w8, [x0, #40]
     3a0:	cbz	w8, 3ac <_ZN4llvm3mca10WriteState10cycleEventEv+0x24>
     3a4:	sub	w8, w8, #0x1
     3a8:	str	w8, [x0, #40]
     3ac:	ret

00000000000003b0 <_ZN4llvm3mca9ReadState10cycleEventEv>:
     3b0:	ldr	w8, [x0, #16]
     3b4:	cbz	w8, 3cc <_ZN4llvm3mca9ReadState10cycleEventEv+0x1c>
     3b8:	ldr	w8, [x0, #24]
     3bc:	cbz	w8, 3cc <_ZN4llvm3mca9ReadState10cycleEventEv+0x1c>
     3c0:	sub	w8, w8, #0x1
     3c4:	str	w8, [x0, #24]
     3c8:	ret
     3cc:	ldr	w8, [x0, #20]
     3d0:	cmn	w8, #0x200
     3d4:	b.eq	3dc <_ZN4llvm3mca9ReadState10cycleEventEv+0x2c>  // b.none
     3d8:	cbnz	w8, 3e0 <_ZN4llvm3mca9ReadState10cycleEventEv+0x30>
     3dc:	ret
     3e0:	subs	w8, w8, #0x1
     3e4:	str	w8, [x0, #20]
     3e8:	cset	w8, eq  // eq = none
     3ec:	strb	w8, [x0, #40]
     3f0:	ret

00000000000003f4 <_ZNK4llvm3mca10WriteState4dumpEv>:
     3f4:	stp	x29, x30, [sp, #-32]!
     3f8:	str	x19, [sp, #16]
     3fc:	mov	x29, sp
     400:	mov	x19, x0
     404:	bl	0 <_ZN4llvm4dbgsEv>
     408:	ldp	x9, x8, [x0, #16]
     40c:	sub	x9, x9, x8
     410:	cmp	x9, #0x7
     414:	b.hi	42c <_ZNK4llvm3mca10WriteState4dumpEv+0x38>  // b.pmore
     418:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     41c:	add	x1, x1, #0x0
     420:	mov	w2, #0x8                   	// #8
     424:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     428:	b	44c <_ZNK4llvm3mca10WriteState4dumpEv+0x58>
     42c:	mov	x9, #0x207b                	// #8315
     430:	movk	x9, #0x704f, lsl #16
     434:	movk	x9, #0x6449, lsl #32
     438:	movk	x9, #0x3d78, lsl #48
     43c:	str	x9, [x8]
     440:	ldr	x8, [x0, #24]
     444:	add	x8, x8, #0x8
     448:	str	x8, [x0, #24]
     44c:	ldr	x8, [x19]
     450:	ldrsw	x1, [x8]
     454:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     458:	ldp	x9, x8, [x0, #16]
     45c:	sub	x9, x9, x8
     460:	cmp	x9, #0x5
     464:	b.hi	47c <_ZNK4llvm3mca10WriteState4dumpEv+0x88>  // b.pmore
     468:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     46c:	add	x1, x1, #0x0
     470:	mov	w2, #0x6                   	// #6
     474:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     478:	b	49c <_ZNK4llvm3mca10WriteState4dumpEv+0xa8>
     47c:	mov	w10, #0x202c                	// #8236
     480:	mov	w9, #0x3d74                	// #15732
     484:	movk	w10, #0x614c, lsl #16
     488:	strh	w9, [x8, #4]
     48c:	str	w10, [x8]
     490:	ldr	x8, [x0, #24]
     494:	add	x8, x8, #0x6
     498:	str	x8, [x0, #24]
     49c:	ldr	x8, [x19]
     4a0:	ldr	w1, [x8, #4]
     4a4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     4a8:	ldp	x9, x8, [x0, #16]
     4ac:	sub	x9, x9, x8
     4b0:	cmp	x9, #0x7
     4b4:	b.hi	4cc <_ZNK4llvm3mca10WriteState4dumpEv+0xd8>  // b.pmore
     4b8:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     4bc:	add	x1, x1, #0x0
     4c0:	mov	w2, #0x8                   	// #8
     4c4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     4c8:	b	4ec <_ZNK4llvm3mca10WriteState4dumpEv+0xf8>
     4cc:	mov	x9, #0x202c                	// #8236
     4d0:	movk	x9, #0x6552, lsl #16
     4d4:	movk	x9, #0x4967, lsl #32
     4d8:	movk	x9, #0x2044, lsl #48
     4dc:	str	x9, [x8]
     4e0:	ldr	x8, [x0, #24]
     4e4:	add	x8, x8, #0x8
     4e8:	str	x8, [x0, #24]
     4ec:	ldrh	w1, [x19, #12]
     4f0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     4f4:	ldp	x9, x8, [x0, #16]
     4f8:	sub	x9, x9, x8
     4fc:	cmp	x9, #0xd
     500:	b.hi	518 <_ZNK4llvm3mca10WriteState4dumpEv+0x124>  // b.pmore
     504:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     508:	add	x1, x1, #0x0
     50c:	mov	w2, #0xe                   	// #14
     510:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     514:	b	53c <_ZNK4llvm3mca10WriteState4dumpEv+0x148>
     518:	adrp	x9, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     51c:	add	x9, x9, #0x0
     520:	ldur	x10, [x9, #6]
     524:	ldr	x9, [x9]
     528:	stur	x10, [x8, #6]
     52c:	str	x9, [x8]
     530:	ldr	x8, [x0, #24]
     534:	add	x8, x8, #0xe
     538:	str	x8, [x0, #24]
     53c:	ldrsw	x1, [x19, #8]
     540:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     544:	ldp	x9, x8, [x0, #16]
     548:	sub	x9, x9, x8
     54c:	cmp	x9, #0x1
     550:	b.hi	56c <_ZNK4llvm3mca10WriteState4dumpEv+0x178>  // b.pmore
     554:	ldr	x19, [sp, #16]
     558:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     55c:	add	x1, x1, #0x0
     560:	mov	w2, #0x2                   	// #2
     564:	ldp	x29, x30, [sp], #32
     568:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     56c:	mov	w9, #0x7d20                	// #32032
     570:	strh	w9, [x8]
     574:	ldr	x8, [x0, #24]
     578:	ldr	x19, [sp, #16]
     57c:	add	x8, x8, #0x2
     580:	str	x8, [x0, #24]
     584:	ldp	x29, x30, [sp], #32
     588:	ret

000000000000058c <_ZNK4llvm3mca8WriteRef4dumpEv>:
     58c:	stp	x29, x30, [sp, #-32]!
     590:	str	x19, [sp, #16]
     594:	mov	x29, sp
     598:	mov	x19, x0
     59c:	bl	0 <_ZN4llvm4dbgsEv>
     5a0:	ldp	x9, x8, [x0, #16]
     5a4:	sub	x9, x9, x8
     5a8:	cmp	x9, #0x3
     5ac:	b.hi	5c4 <_ZNK4llvm3mca8WriteRef4dumpEv+0x38>  // b.pmore
     5b0:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     5b4:	add	x1, x1, #0x0
     5b8:	mov	w2, #0x4                   	// #4
     5bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5c0:	b	5dc <_ZNK4llvm3mca8WriteRef4dumpEv+0x50>
     5c4:	mov	w9, #0x4949                	// #18761
     5c8:	movk	w9, #0x3d44, lsl #16
     5cc:	str	w9, [x8]
     5d0:	ldr	x8, [x0, #24]
     5d4:	add	x8, x8, #0x4
     5d8:	str	x8, [x0, #24]
     5dc:	ldr	w1, [x19]
     5e0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     5e4:	ldp	x9, x8, [x0, #16]
     5e8:	cmp	x8, x9
     5ec:	b.cs	60c <_ZNK4llvm3mca8WriteRef4dumpEv+0x80>  // b.hs, b.nlast
     5f0:	add	x9, x8, #0x1
     5f4:	mov	w10, #0x20                  	// #32
     5f8:	str	x9, [x0, #24]
     5fc:	strb	w10, [x8]
     600:	ldr	x0, [x19, #8]
     604:	cbnz	x0, 61c <_ZNK4llvm3mca8WriteRef4dumpEv+0x90>
     608:	b	634 <_ZNK4llvm3mca8WriteRef4dumpEv+0xa8>
     60c:	mov	w1, #0x20                  	// #32
     610:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     614:	ldr	x0, [x19, #8]
     618:	cbz	x0, 634 <_ZNK4llvm3mca8WriteRef4dumpEv+0xa8>
     61c:	ldr	w8, [x19]
     620:	cmn	w8, #0x1
     624:	b.eq	634 <_ZNK4llvm3mca8WriteRef4dumpEv+0xa8>  // b.none
     628:	ldr	x19, [sp, #16]
     62c:	ldp	x29, x30, [sp], #32
     630:	b	3f4 <_ZNK4llvm3mca10WriteState4dumpEv>
     634:	bl	0 <_ZN4llvm4dbgsEv>
     638:	ldp	x9, x8, [x0, #16]
     63c:	sub	x9, x9, x8
     640:	cmp	x9, #0x5
     644:	b.hi	660 <_ZNK4llvm3mca8WriteRef4dumpEv+0xd4>  // b.pmore
     648:	ldr	x19, [sp, #16]
     64c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     650:	add	x1, x1, #0x0
     654:	mov	w2, #0x6                   	// #6
     658:	ldp	x29, x30, [sp], #32
     65c:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     660:	mov	w10, #0x6e28                	// #28200
     664:	mov	w9, #0x296c                	// #10604
     668:	movk	w10, #0x6c75, lsl #16
     66c:	strh	w9, [x8, #4]
     670:	str	w10, [x8]
     674:	ldr	x8, [x0, #24]
     678:	ldr	x19, [sp, #16]
     67c:	add	x8, x8, #0x6
     680:	str	x8, [x0, #24]
     684:	ldp	x29, x30, [sp], #32
     688:	ret

000000000000068c <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv>:
     68c:	ldr	w9, [x0, #816]
     690:	mov	x8, x0
     694:	add	x0, x0, #0x328
     698:	cbz	w9, 6a0 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x14>
     69c:	ret
     6a0:	ldr	w9, [x8, #24]
     6a4:	cbz	w9, 6e4 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x58>
     6a8:	ldr	x10, [x8, #16]
     6ac:	add	x9, x9, x9, lsl #4
     6b0:	lsl	x9, x9, #3
     6b4:	add	x10, x10, #0x34
     6b8:	b	6c8 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x3c>
     6bc:	subs	x9, x9, #0x88
     6c0:	add	x10, x10, #0x88
     6c4:	b.eq	6e4 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x58>  // b.none
     6c8:	ldr	w11, [x10]
     6cc:	cbz	w11, 6bc <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x30>
     6d0:	ldr	w11, [x10]
     6d4:	ldur	x12, [x10, #-8]
     6d8:	str	w11, [x0, #8]
     6dc:	str	x12, [x0]
     6e0:	b	6bc <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x30>
     6e4:	ldr	w9, [x8, #584]
     6e8:	cbz	w9, 69c <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x10>
     6ec:	ldr	x10, [x8, #576]
     6f0:	add	x8, x9, x9, lsl #1
     6f4:	lsl	x8, x8, #4
     6f8:	add	x9, x10, #0x24
     6fc:	b	70c <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x80>
     700:	subs	x8, x8, #0x30
     704:	add	x9, x9, #0x30
     708:	b.eq	69c <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x10>  // b.none
     70c:	ldr	w10, [x9]
     710:	cbz	w10, 700 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x74>
     714:	ldr	w10, [x9]
     718:	ldur	x11, [x9, #-8]
     71c:	str	w10, [x0, #8]
     720:	str	x11, [x0]
     724:	b	700 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x74>

0000000000000728 <_ZN4llvm3mca11Instruction8dispatchEj>:
     728:	stp	x29, x30, [sp, #-32]!
     72c:	str	x19, [sp, #16]
     730:	mov	x29, sp
     734:	ldr	w8, [x0, #784]
     738:	cbnz	w8, 770 <_ZN4llvm3mca11Instruction8dispatchEj+0x48>
     73c:	mov	w8, #0x1                   	// #1
     740:	mov	x19, x0
     744:	str	w8, [x0, #784]
     748:	str	w1, [x0, #792]
     74c:	bl	790 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
     750:	tbz	w0, #0, 764 <_ZN4llvm3mca11Instruction8dispatchEj+0x3c>
     754:	mov	x0, x19
     758:	ldr	x19, [sp, #16]
     75c:	ldp	x29, x30, [sp], #32
     760:	b	a1c <_ZN4llvm3mca11Instruction13updatePendingEv>
     764:	ldr	x19, [sp, #16]
     768:	ldp	x29, x30, [sp], #32
     76c:	ret
     770:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     774:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     778:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     77c:	add	x0, x0, #0x0
     780:	add	x1, x1, #0x0
     784:	add	x3, x3, #0x0
     788:	mov	w2, #0x9f                  	// #159
     78c:	bl	0 <__assert_fail>

0000000000000790 <_ZN4llvm3mca11Instruction16updateDispatchedEv>:
     790:	stp	x29, x30, [sp, #-16]!
     794:	mov	x29, sp
     798:	ldr	w8, [x0, #784]
     79c:	cmp	w8, #0x1
     7a0:	b.ne	9fc <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x26c>  // b.any
     7a4:	ldr	w11, [x0, #584]
     7a8:	ldr	x8, [x0, #576]
     7ac:	add	x9, x11, x11, lsl #1
     7b0:	lsl	x10, x9, #4
     7b4:	cmp	x10, #0x91
     7b8:	add	x9, x8, x10
     7bc:	b.cc	860 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xd0>  // b.lo, b.ul, b.last
     7c0:	lsr	x10, x11, #2
     7c4:	add	x10, x10, #0x1
     7c8:	b	7e4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x54>
     7cc:	ldrb	w11, [x8, #184]
     7d0:	cbz	w11, 8ac <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x11c>
     7d4:	sub	x10, x10, #0x1
     7d8:	cmp	x10, #0x1
     7dc:	add	x8, x8, #0xc0
     7e0:	b.le	85c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xcc>
     7e4:	ldrb	w11, [x8, #42]
     7e8:	cbz	w11, 7f8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x68>
     7ec:	ldrb	w11, [x8, #40]
     7f0:	cbnz	w11, 804 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x74>
     7f4:	b	8f8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x168>
     7f8:	ldr	w11, [x8, #20]
     7fc:	cmp	w11, #0x0
     800:	b.le	7ec <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x5c>
     804:	ldrb	w11, [x8, #90]
     808:	cbz	w11, 818 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x88>
     80c:	ldrb	w11, [x8, #88]
     810:	cbnz	w11, 824 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x94>
     814:	b	89c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x10c>
     818:	ldr	w11, [x8, #68]
     81c:	cmp	w11, #0x0
     820:	b.le	80c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x7c>
     824:	ldrb	w11, [x8, #138]
     828:	cbz	w11, 838 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xa8>
     82c:	ldrb	w11, [x8, #136]
     830:	cbnz	w11, 844 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xb4>
     834:	b	8a4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x114>
     838:	ldr	w11, [x8, #116]
     83c:	cmp	w11, #0x0
     840:	b.le	82c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x9c>
     844:	ldrb	w11, [x8, #186]
     848:	cbnz	w11, 7cc <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x3c>
     84c:	ldr	w11, [x8, #164]
     850:	cmp	w11, #0x0
     854:	b.gt	7d4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x44>
     858:	b	7cc <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x3c>
     85c:	sub	x10, x9, x8
     860:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     864:	asr	x10, x10, #4
     868:	movk	x11, #0xaaab
     86c:	mul	x10, x10, x11
     870:	cmp	x10, #0x1
     874:	b.eq	8e8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x158>  // b.none
     878:	cmp	x10, #0x2
     87c:	b.eq	8c4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x134>  // b.none
     880:	cmp	x10, #0x3
     884:	b.ne	910 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x180>  // b.any
     888:	ldrb	w10, [x8, #42]
     88c:	cbz	w10, 8b4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x124>
     890:	ldrb	w10, [x8, #40]
     894:	cbnz	w10, 8c0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x130>
     898:	b	8f8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x168>
     89c:	add	x8, x8, #0x30
     8a0:	b	8f8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x168>
     8a4:	add	x8, x8, #0x60
     8a8:	b	8f8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x168>
     8ac:	add	x8, x8, #0x90
     8b0:	b	8f8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x168>
     8b4:	ldr	w10, [x8, #20]
     8b8:	cmp	w10, #0x0
     8bc:	b.le	890 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x100>
     8c0:	add	x8, x8, #0x30
     8c4:	ldrb	w10, [x8, #42]
     8c8:	cbz	w10, 8d8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x148>
     8cc:	ldrb	w10, [x8, #40]
     8d0:	cbnz	w10, 8e4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x154>
     8d4:	b	8f8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x168>
     8d8:	ldr	w10, [x8, #20]
     8dc:	cmp	w10, #0x0
     8e0:	b.le	8cc <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x13c>
     8e4:	add	x8, x8, #0x30
     8e8:	ldrb	w10, [x8, #42]
     8ec:	cbz	w10, 904 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x174>
     8f0:	ldrb	w10, [x8, #40]
     8f4:	cbnz	w10, 910 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x180>
     8f8:	cmp	x8, x9
     8fc:	b.ne	9d0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x240>  // b.any
     900:	b	910 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x180>
     904:	ldr	w10, [x8, #20]
     908:	cmp	w10, #0x0
     90c:	b.le	8f0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x160>
     910:	ldr	w11, [x0, #24]
     914:	ldr	x8, [x0, #16]
     918:	add	x9, x11, x11, lsl #4
     91c:	lsl	x10, x9, #3
     920:	cmp	x10, #0x199
     924:	add	x9, x8, x10
     928:	b.cc	968 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1d8>  // b.lo, b.ul, b.last
     92c:	lsr	x10, x11, #2
     930:	add	x10, x10, #0x1
     934:	ldr	x11, [x8, #24]
     938:	cbnz	x11, 9c8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x238>
     93c:	ldr	x11, [x8, #160]
     940:	cbnz	x11, 9b4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x224>
     944:	ldr	x11, [x8, #296]
     948:	cbnz	x11, 9c4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x234>
     94c:	ldr	x11, [x8, #432]
     950:	cbnz	x11, 9dc <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x24c>
     954:	sub	x10, x10, #0x1
     958:	cmp	x10, #0x1
     95c:	add	x8, x8, #0x220
     960:	b.gt	934 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a4>
     964:	sub	x10, x9, x8
     968:	mov	x11, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     96c:	asr	x10, x10, #3
     970:	movk	x11, #0xf0f1
     974:	mul	x10, x10, x11
     978:	cmp	x10, #0x1
     97c:	b.eq	9a8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x218>  // b.none
     980:	cmp	x10, #0x2
     984:	b.eq	99c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x20c>  // b.none
     988:	cmp	x10, #0x3
     98c:	b.ne	9e8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x258>  // b.any
     990:	ldr	x10, [x8, #24]
     994:	cbnz	x10, 9c8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x238>
     998:	add	x8, x8, #0x88
     99c:	ldr	x10, [x8, #24]
     9a0:	cbnz	x10, 9c8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x238>
     9a4:	add	x8, x8, #0x88
     9a8:	ldr	x10, [x8, #24]
     9ac:	cbnz	x10, 9c8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x238>
     9b0:	b	9e8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x258>
     9b4:	add	x8, x8, #0x88
     9b8:	cmp	x8, x9
     9bc:	b.ne	9d0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x240>  // b.any
     9c0:	b	9e8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x258>
     9c4:	add	x8, x8, #0x110
     9c8:	cmp	x8, x9
     9cc:	b.eq	9e8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x258>  // b.none
     9d0:	mov	w0, wzr
     9d4:	ldp	x29, x30, [sp], #16
     9d8:	ret
     9dc:	add	x8, x8, #0x198
     9e0:	cmp	x8, x9
     9e4:	b.ne	9d0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x240>  // b.any
     9e8:	mov	w8, #0x2                   	// #2
     9ec:	str	w8, [x0, #784]
     9f0:	mov	w0, #0x1                   	// #1
     9f4:	ldp	x29, x30, [sp], #16
     9f8:	ret
     9fc:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     a00:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     a04:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     a08:	add	x0, x0, #0x0
     a0c:	add	x1, x1, #0x0
     a10:	add	x3, x3, #0x0
     a14:	mov	w2, #0xcc                  	// #204
     a18:	bl	0 <__assert_fail>

0000000000000a1c <_ZN4llvm3mca11Instruction13updatePendingEv>:
     a1c:	stp	x29, x30, [sp, #-16]!
     a20:	mov	x29, sp
     a24:	ldr	w8, [x0, #784]
     a28:	cmp	w8, #0x2
     a2c:	b.ne	c98 <_ZN4llvm3mca11Instruction13updatePendingEv+0x27c>  // b.any
     a30:	ldr	w11, [x0, #584]
     a34:	ldr	x8, [x0, #576]
     a38:	add	x9, x11, x11, lsl #1
     a3c:	lsl	x10, x9, #4
     a40:	cmp	x10, #0x91
     a44:	add	x9, x8, x10
     a48:	b.cc	a90 <_ZN4llvm3mca11Instruction13updatePendingEv+0x74>  // b.lo, b.ul, b.last
     a4c:	lsr	x10, x11, #2
     a50:	add	x10, x10, #0x1
     a54:	add	x8, x8, #0x60
     a58:	ldurb	w11, [x8, #-56]
     a5c:	cbz	w11, adc <_ZN4llvm3mca11Instruction13updatePendingEv+0xc0>
     a60:	ldurb	w11, [x8, #-8]
     a64:	cbz	w11, aec <_ZN4llvm3mca11Instruction13updatePendingEv+0xd0>
     a68:	ldrb	w11, [x8, #40]
     a6c:	cbz	w11, af0 <_ZN4llvm3mca11Instruction13updatePendingEv+0xd4>
     a70:	ldrb	w11, [x8, #88]
     a74:	cbz	w11, bbc <_ZN4llvm3mca11Instruction13updatePendingEv+0x1a0>
     a78:	sub	x10, x10, #0x1
     a7c:	cmp	x10, #0x1
     a80:	add	x8, x8, #0xc0
     a84:	b.gt	a58 <_ZN4llvm3mca11Instruction13updatePendingEv+0x3c>
     a88:	sub	x8, x8, #0x60
     a8c:	sub	x10, x9, x8
     a90:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     a94:	asr	x10, x10, #4
     a98:	movk	x11, #0xaaab
     a9c:	mul	x10, x10, x11
     aa0:	cmp	x10, #0x1
     aa4:	b.eq	ad0 <_ZN4llvm3mca11Instruction13updatePendingEv+0xb4>  // b.none
     aa8:	cmp	x10, #0x2
     aac:	b.eq	ac4 <_ZN4llvm3mca11Instruction13updatePendingEv+0xa8>  // b.none
     ab0:	cmp	x10, #0x3
     ab4:	b.ne	af8 <_ZN4llvm3mca11Instruction13updatePendingEv+0xdc>  // b.any
     ab8:	ldrb	w10, [x8, #40]
     abc:	cbz	w10, af0 <_ZN4llvm3mca11Instruction13updatePendingEv+0xd4>
     ac0:	add	x8, x8, #0x30
     ac4:	ldrb	w10, [x8, #40]
     ac8:	cbz	w10, af0 <_ZN4llvm3mca11Instruction13updatePendingEv+0xd4>
     acc:	add	x8, x8, #0x30
     ad0:	ldrb	w10, [x8, #40]
     ad4:	cbnz	w10, af8 <_ZN4llvm3mca11Instruction13updatePendingEv+0xdc>
     ad8:	b	af0 <_ZN4llvm3mca11Instruction13updatePendingEv+0xd4>
     adc:	sub	x8, x8, #0x60
     ae0:	cmp	x8, x9
     ae4:	b.ne	c60 <_ZN4llvm3mca11Instruction13updatePendingEv+0x244>  // b.any
     ae8:	b	af8 <_ZN4llvm3mca11Instruction13updatePendingEv+0xdc>
     aec:	sub	x8, x8, #0x30
     af0:	cmp	x8, x9
     af4:	b.ne	c60 <_ZN4llvm3mca11Instruction13updatePendingEv+0x244>  // b.any
     af8:	ldr	w11, [x0, #24]
     afc:	ldr	x8, [x0, #16]
     b00:	add	x9, x11, x11, lsl #4
     b04:	lsl	x10, x9, #3
     b08:	cmp	x10, #0x199
     b0c:	add	x9, x8, x10
     b10:	b.cc	be0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1c4>  // b.lo, b.ul, b.last
     b14:	lsr	x10, x11, #2
     b18:	add	x10, x10, #0x1
     b1c:	b	b30 <_ZN4llvm3mca11Instruction13updatePendingEv+0x114>
     b20:	sub	x10, x10, #0x1
     b24:	cmp	x10, #0x1
     b28:	add	x8, x8, #0x220
     b2c:	b.le	bdc <_ZN4llvm3mca11Instruction13updatePendingEv+0x1c0>
     b30:	ldr	x11, [x8, #24]
     b34:	cbnz	x11, c58 <_ZN4llvm3mca11Instruction13updatePendingEv+0x23c>
     b38:	ldr	w11, [x8, #40]
     b3c:	cbz	w11, b50 <_ZN4llvm3mca11Instruction13updatePendingEv+0x134>
     b40:	ldr	x12, [x8]
     b44:	ldr	w12, [x12, #4]
     b48:	cmp	w11, w12
     b4c:	b.cs	c58 <_ZN4llvm3mca11Instruction13updatePendingEv+0x23c>  // b.hs, b.nlast
     b50:	ldr	x11, [x8, #160]
     b54:	cbnz	x11, bcc <_ZN4llvm3mca11Instruction13updatePendingEv+0x1b0>
     b58:	ldr	w11, [x8, #176]
     b5c:	cbz	w11, b70 <_ZN4llvm3mca11Instruction13updatePendingEv+0x154>
     b60:	ldr	x12, [x8, #136]
     b64:	ldr	w12, [x12, #4]
     b68:	cmp	w11, w12
     b6c:	b.cs	bcc <_ZN4llvm3mca11Instruction13updatePendingEv+0x1b0>  // b.hs, b.nlast
     b70:	ldr	x12, [x8, #296]
     b74:	add	x11, x8, #0x110
     b78:	cbnz	x12, bd4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1b8>
     b7c:	ldr	w12, [x8, #312]
     b80:	cbz	w12, b94 <_ZN4llvm3mca11Instruction13updatePendingEv+0x178>
     b84:	ldr	x13, [x8, #272]
     b88:	ldr	w13, [x13, #4]
     b8c:	cmp	w12, w13
     b90:	b.cs	bd4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1b8>  // b.hs, b.nlast
     b94:	ldr	x11, [x8, #432]
     b98:	cbnz	x11, bb4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x198>
     b9c:	ldr	w11, [x8, #448]
     ba0:	cbz	w11, b20 <_ZN4llvm3mca11Instruction13updatePendingEv+0x104>
     ba4:	ldr	x12, [x8, #408]
     ba8:	ldr	w12, [x12, #4]
     bac:	cmp	w11, w12
     bb0:	b.cc	b20 <_ZN4llvm3mca11Instruction13updatePendingEv+0x104>  // b.lo, b.ul, b.last
     bb4:	add	x8, x8, #0x198
     bb8:	b	c58 <_ZN4llvm3mca11Instruction13updatePendingEv+0x23c>
     bbc:	add	x8, x8, #0x30
     bc0:	cmp	x8, x9
     bc4:	b.ne	c60 <_ZN4llvm3mca11Instruction13updatePendingEv+0x244>  // b.any
     bc8:	b	af8 <_ZN4llvm3mca11Instruction13updatePendingEv+0xdc>
     bcc:	add	x8, x8, #0x88
     bd0:	b	c58 <_ZN4llvm3mca11Instruction13updatePendingEv+0x23c>
     bd4:	mov	x8, x11
     bd8:	b	c58 <_ZN4llvm3mca11Instruction13updatePendingEv+0x23c>
     bdc:	sub	x10, x9, x8
     be0:	mov	x11, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     be4:	asr	x10, x10, #3
     be8:	movk	x11, #0xf0f1
     bec:	mul	x10, x10, x11
     bf0:	cmp	x10, #0x1
     bf4:	b.eq	c50 <_ZN4llvm3mca11Instruction13updatePendingEv+0x234>  // b.none
     bf8:	cmp	x10, #0x2
     bfc:	b.eq	c2c <_ZN4llvm3mca11Instruction13updatePendingEv+0x210>  // b.none
     c00:	cmp	x10, #0x3
     c04:	b.ne	c84 <_ZN4llvm3mca11Instruction13updatePendingEv+0x268>  // b.any
     c08:	ldr	x10, [x8, #24]
     c0c:	cbnz	x10, c58 <_ZN4llvm3mca11Instruction13updatePendingEv+0x23c>
     c10:	ldr	w10, [x8, #40]
     c14:	cbz	w10, c28 <_ZN4llvm3mca11Instruction13updatePendingEv+0x20c>
     c18:	ldr	x11, [x8]
     c1c:	ldr	w11, [x11, #4]
     c20:	cmp	w10, w11
     c24:	b.cs	c58 <_ZN4llvm3mca11Instruction13updatePendingEv+0x23c>  // b.hs, b.nlast
     c28:	add	x8, x8, #0x88
     c2c:	ldr	x10, [x8, #24]
     c30:	cbnz	x10, c58 <_ZN4llvm3mca11Instruction13updatePendingEv+0x23c>
     c34:	ldr	w10, [x8, #40]
     c38:	cbz	w10, c4c <_ZN4llvm3mca11Instruction13updatePendingEv+0x230>
     c3c:	ldr	x11, [x8]
     c40:	ldr	w11, [x11, #4]
     c44:	cmp	w10, w11
     c48:	b.cs	c58 <_ZN4llvm3mca11Instruction13updatePendingEv+0x23c>  // b.hs, b.nlast
     c4c:	add	x8, x8, #0x88
     c50:	ldr	x10, [x8, #24]
     c54:	cbz	x10, c6c <_ZN4llvm3mca11Instruction13updatePendingEv+0x250>
     c58:	cmp	x8, x9
     c5c:	b.eq	c84 <_ZN4llvm3mca11Instruction13updatePendingEv+0x268>  // b.none
     c60:	mov	w0, wzr
     c64:	ldp	x29, x30, [sp], #16
     c68:	ret
     c6c:	ldr	w10, [x8, #40]
     c70:	cbz	w10, c84 <_ZN4llvm3mca11Instruction13updatePendingEv+0x268>
     c74:	ldr	x11, [x8]
     c78:	ldr	w11, [x11, #4]
     c7c:	cmp	w10, w11
     c80:	b.cs	c58 <_ZN4llvm3mca11Instruction13updatePendingEv+0x23c>  // b.hs, b.nlast
     c84:	mov	w8, #0x3                   	// #3
     c88:	str	w8, [x0, #784]
     c8c:	mov	w0, #0x1                   	// #1
     c90:	ldp	x29, x30, [sp], #16
     c94:	ret
     c98:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     c9c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     ca0:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     ca4:	add	x0, x0, #0x0
     ca8:	add	x1, x1, #0x0
     cac:	add	x3, x3, #0x0
     cb0:	mov	w2, #0xbe                  	// #190
     cb4:	bl	0 <__assert_fail>

0000000000000cb8 <_ZN4llvm3mca11Instruction7executeEj>:
     cb8:	stp	x29, x30, [sp, #-48]!
     cbc:	stp	x22, x21, [sp, #16]
     cc0:	stp	x20, x19, [sp, #32]
     cc4:	mov	x29, sp
     cc8:	ldr	w8, [x0, #784]
     ccc:	cmp	w8, #0x3
     cd0:	b.ne	d3c <_ZN4llvm3mca11Instruction7executeEj+0x84>  // b.any
     cd4:	ldr	x8, [x0]
     cd8:	mov	w9, #0x4                   	// #4
     cdc:	str	w9, [x0, #784]
     ce0:	ldr	w9, [x0, #24]
     ce4:	ldr	w8, [x8, #312]
     ce8:	mov	x19, x0
     cec:	str	w8, [x0, #788]
     cf0:	cbz	w9, d20 <_ZN4llvm3mca11Instruction7executeEj+0x68>
     cf4:	ldr	x21, [x19, #16]
     cf8:	add	x8, x9, x9, lsl #4
     cfc:	mov	w20, w1
     d00:	lsl	x22, x8, #3
     d04:	mov	x0, x21
     d08:	mov	w1, w20
     d0c:	bl	bc <_ZN4llvm3mca10WriteState19onInstructionIssuedEj>
     d10:	subs	x22, x22, #0x88
     d14:	add	x21, x21, #0x88
     d18:	b.ne	d04 <_ZN4llvm3mca11Instruction7executeEj+0x4c>  // b.any
     d1c:	ldr	w8, [x19, #788]
     d20:	cbnz	w8, d2c <_ZN4llvm3mca11Instruction7executeEj+0x74>
     d24:	mov	w8, #0x5                   	// #5
     d28:	str	w8, [x19, #784]
     d2c:	ldp	x20, x19, [sp, #32]
     d30:	ldp	x22, x21, [sp, #16]
     d34:	ldp	x29, x30, [sp], #48
     d38:	ret
     d3c:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     d40:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     d44:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     d48:	add	x0, x0, #0x0
     d4c:	add	x1, x1, #0x0
     d50:	add	x3, x3, #0x0
     d54:	mov	w2, #0xa9                  	// #169
     d58:	bl	0 <__assert_fail>

0000000000000d5c <_ZN4llvm3mca11Instruction13forceExecutedEv>:
     d5c:	stp	x29, x30, [sp, #-16]!
     d60:	mov	x29, sp
     d64:	ldr	w8, [x0, #784]
     d68:	cmp	w8, #0x3
     d6c:	b.ne	d84 <_ZN4llvm3mca11Instruction13forceExecutedEv+0x28>  // b.any
     d70:	adrp	x8, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     d74:	ldr	d0, [x8]
     d78:	str	d0, [x0, #784]
     d7c:	ldp	x29, x30, [sp], #16
     d80:	ret
     d84:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     d88:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     d8c:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     d90:	add	x0, x0, #0x0
     d94:	add	x1, x1, #0x0
     d98:	add	x3, x3, #0x0
     d9c:	mov	w2, #0xb8                  	// #184
     da0:	bl	0 <__assert_fail>

0000000000000da4 <_ZN4llvm3mca11Instruction6updateEv>:
     da4:	stp	x29, x30, [sp, #-32]!
     da8:	str	x19, [sp, #16]
     dac:	mov	x29, sp
     db0:	ldr	w8, [x0, #784]
     db4:	mov	x19, x0
     db8:	cmp	w8, #0x1
     dbc:	b.ne	dcc <_ZN4llvm3mca11Instruction6updateEv+0x28>  // b.any
     dc0:	mov	x0, x19
     dc4:	bl	790 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
     dc8:	ldr	w8, [x19, #784]
     dcc:	cmp	w8, #0x2
     dd0:	b.ne	de4 <_ZN4llvm3mca11Instruction6updateEv+0x40>  // b.any
     dd4:	mov	x0, x19
     dd8:	ldr	x19, [sp, #16]
     ddc:	ldp	x29, x30, [sp], #32
     de0:	b	a1c <_ZN4llvm3mca11Instruction13updatePendingEv>
     de4:	ldr	x19, [sp, #16]
     de8:	ldp	x29, x30, [sp], #32
     dec:	ret

0000000000000df0 <_ZN4llvm3mca11Instruction10cycleEventEv>:
     df0:	stp	x29, x30, [sp, #-32]!
     df4:	str	x19, [sp, #16]
     df8:	mov	x29, sp
     dfc:	ldr	w8, [x0, #784]
     e00:	cmp	w8, #0x3
     e04:	b.eq	106c <_ZN4llvm3mca11Instruction10cycleEventEv+0x27c>  // b.none
     e08:	sub	w9, w8, #0x1
     e0c:	mov	x19, x0
     e10:	cmp	w9, #0x2
     e14:	b.cs	f24 <_ZN4llvm3mca11Instruction10cycleEventEv+0x134>  // b.hs, b.nlast
     e18:	ldr	w9, [x19, #584]
     e1c:	cbz	w9, e7c <_ZN4llvm3mca11Instruction10cycleEventEv+0x8c>
     e20:	ldr	x10, [x19, #576]
     e24:	add	x9, x9, x9, lsl #1
     e28:	lsl	x9, x9, #4
     e2c:	add	x10, x10, #0x14
     e30:	b	e48 <_ZN4llvm3mca11Instruction10cycleEventEv+0x58>
     e34:	sub	w11, w11, #0x1
     e38:	str	w11, [x10, #4]
     e3c:	subs	x9, x9, #0x30
     e40:	add	x10, x10, #0x30
     e44:	b.eq	e7c <_ZN4llvm3mca11Instruction10cycleEventEv+0x8c>  // b.none
     e48:	ldur	w11, [x10, #-4]
     e4c:	cbz	w11, e58 <_ZN4llvm3mca11Instruction10cycleEventEv+0x68>
     e50:	ldr	w11, [x10, #4]
     e54:	cbnz	w11, e34 <_ZN4llvm3mca11Instruction10cycleEventEv+0x44>
     e58:	ldr	w11, [x10]
     e5c:	cmn	w11, #0x200
     e60:	b.eq	e3c <_ZN4llvm3mca11Instruction10cycleEventEv+0x4c>  // b.none
     e64:	cbz	w11, e3c <_ZN4llvm3mca11Instruction10cycleEventEv+0x4c>
     e68:	subs	w11, w11, #0x1
     e6c:	str	w11, [x10]
     e70:	cset	w11, eq  // eq = none
     e74:	strb	w11, [x10, #20]
     e78:	b	e3c <_ZN4llvm3mca11Instruction10cycleEventEv+0x4c>
     e7c:	ldr	w10, [x19, #24]
     e80:	cbz	w10, fe4 <_ZN4llvm3mca11Instruction10cycleEventEv+0x1f4>
     e84:	ldr	x11, [x19, #16]
     e88:	mov	w9, #0x88                  	// #136
     e8c:	mul	x9, x10, x9
     e90:	sub	x12, x9, #0x88
     e94:	cmp	x12, #0x87
     e98:	mov	x9, x11
     e9c:	b.ls	1010 <_ZN4llvm3mca11Instruction10cycleEventEv+0x220>  // b.plast
     ea0:	mov	x9, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     ea4:	movk	x9, #0xf0f1
     ea8:	umulh	x9, x12, x9
     eac:	lsr	x9, x9, #7
     eb0:	add	x12, x9, #0x1
     eb4:	mov	w14, #0x88                  	// #136
     eb8:	and	x13, x12, #0x3fffffffffffffe
     ebc:	madd	x9, x13, x14, x11
     ec0:	add	x14, x11, #0xb0
     ec4:	mov	x15, x13
     ec8:	b	ed8 <_ZN4llvm3mca11Instruction10cycleEventEv+0xe8>
     ecc:	subs	x15, x15, #0x2
     ed0:	add	x14, x14, #0x110
     ed4:	b.eq	fdc <_ZN4llvm3mca11Instruction10cycleEventEv+0x1ec>  // b.none
     ed8:	ldur	w17, [x14, #-168]
     edc:	ldur	w16, [x14, #-32]
     ee0:	cmn	w17, #0x200
     ee4:	b.eq	ef0 <_ZN4llvm3mca11Instruction10cycleEventEv+0x100>  // b.none
     ee8:	sub	w17, w17, #0x1
     eec:	stur	w17, [x14, #-168]
     ef0:	cmn	w16, #0x200
     ef4:	b.eq	f00 <_ZN4llvm3mca11Instruction10cycleEventEv+0x110>  // b.none
     ef8:	sub	w16, w16, #0x1
     efc:	stur	w16, [x14, #-32]
     f00:	ldur	w17, [x14, #-136]
     f04:	ldr	w16, [x14]
     f08:	cbz	w17, f14 <_ZN4llvm3mca11Instruction10cycleEventEv+0x124>
     f0c:	sub	w17, w17, #0x1
     f10:	stur	w17, [x14, #-136]
     f14:	cbz	w16, ecc <_ZN4llvm3mca11Instruction10cycleEventEv+0xdc>
     f18:	sub	w16, w16, #0x1
     f1c:	str	w16, [x14]
     f20:	b	ecc <_ZN4llvm3mca11Instruction10cycleEventEv+0xdc>
     f24:	cmp	w8, #0x4
     f28:	b.ne	10b8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x2c8>  // b.any
     f2c:	ldr	w8, [x19, #788]
     f30:	cbz	w8, 10d8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x2e8>
     f34:	ldr	w10, [x19, #24]
     f38:	cbz	w10, 1058 <_ZN4llvm3mca11Instruction10cycleEventEv+0x268>
     f3c:	ldr	x11, [x19, #16]
     f40:	mov	w9, #0x88                  	// #136
     f44:	mul	x9, x10, x9
     f48:	sub	x12, x9, #0x88
     f4c:	cmp	x12, #0x87
     f50:	mov	x9, x11
     f54:	b.ls	1078 <_ZN4llvm3mca11Instruction10cycleEventEv+0x288>  // b.plast
     f58:	mov	x9, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     f5c:	movk	x9, #0xf0f1
     f60:	umulh	x9, x12, x9
     f64:	lsr	x9, x9, #7
     f68:	add	x12, x9, #0x1
     f6c:	mov	w14, #0x88                  	// #136
     f70:	and	x13, x12, #0x3fffffffffffffe
     f74:	madd	x9, x13, x14, x11
     f78:	add	x14, x11, #0xb0
     f7c:	mov	x15, x13
     f80:	b	f90 <_ZN4llvm3mca11Instruction10cycleEventEv+0x1a0>
     f84:	subs	x15, x15, #0x2
     f88:	add	x14, x14, #0x110
     f8c:	b.eq	1050 <_ZN4llvm3mca11Instruction10cycleEventEv+0x260>  // b.none
     f90:	ldur	w17, [x14, #-168]
     f94:	ldur	w16, [x14, #-32]
     f98:	cmn	w17, #0x200
     f9c:	b.eq	fa8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x1b8>  // b.none
     fa0:	sub	w17, w17, #0x1
     fa4:	stur	w17, [x14, #-168]
     fa8:	cmn	w16, #0x200
     fac:	b.eq	fb8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x1c8>  // b.none
     fb0:	sub	w16, w16, #0x1
     fb4:	stur	w16, [x14, #-32]
     fb8:	ldur	w17, [x14, #-136]
     fbc:	ldr	w16, [x14]
     fc0:	cbz	w17, fcc <_ZN4llvm3mca11Instruction10cycleEventEv+0x1dc>
     fc4:	sub	w17, w17, #0x1
     fc8:	stur	w17, [x14, #-136]
     fcc:	cbz	w16, f84 <_ZN4llvm3mca11Instruction10cycleEventEv+0x194>
     fd0:	sub	w16, w16, #0x1
     fd4:	str	w16, [x14]
     fd8:	b	f84 <_ZN4llvm3mca11Instruction10cycleEventEv+0x194>
     fdc:	cmp	x12, x13
     fe0:	b.ne	1010 <_ZN4llvm3mca11Instruction10cycleEventEv+0x220>  // b.any
     fe4:	cmp	w8, #0x1
     fe8:	b.ne	ff8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x208>  // b.any
     fec:	mov	x0, x19
     ff0:	bl	790 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
     ff4:	ldr	w8, [x19, #784]
     ff8:	cmp	w8, #0x2
     ffc:	b.ne	106c <_ZN4llvm3mca11Instruction10cycleEventEv+0x27c>  // b.any
    1000:	mov	x0, x19
    1004:	ldr	x19, [sp, #16]
    1008:	ldp	x29, x30, [sp], #32
    100c:	b	a1c <_ZN4llvm3mca11Instruction13updatePendingEv>
    1010:	mov	w12, #0x88                  	// #136
    1014:	madd	x10, x10, x12, x11
    1018:	b	1028 <_ZN4llvm3mca11Instruction10cycleEventEv+0x238>
    101c:	add	x9, x9, #0x88
    1020:	cmp	x10, x9
    1024:	b.eq	fe4 <_ZN4llvm3mca11Instruction10cycleEventEv+0x1f4>  // b.none
    1028:	ldr	w11, [x9, #8]
    102c:	cmn	w11, #0x200
    1030:	b.eq	103c <_ZN4llvm3mca11Instruction10cycleEventEv+0x24c>  // b.none
    1034:	sub	w11, w11, #0x1
    1038:	str	w11, [x9, #8]
    103c:	ldr	w11, [x9, #40]
    1040:	cbz	w11, 101c <_ZN4llvm3mca11Instruction10cycleEventEv+0x22c>
    1044:	sub	w11, w11, #0x1
    1048:	str	w11, [x9, #40]
    104c:	b	101c <_ZN4llvm3mca11Instruction10cycleEventEv+0x22c>
    1050:	cmp	x12, x13
    1054:	b.ne	1078 <_ZN4llvm3mca11Instruction10cycleEventEv+0x288>  // b.any
    1058:	subs	w8, w8, #0x1
    105c:	str	w8, [x19, #788]
    1060:	b.ne	106c <_ZN4llvm3mca11Instruction10cycleEventEv+0x27c>  // b.any
    1064:	mov	w8, #0x5                   	// #5
    1068:	str	w8, [x19, #784]
    106c:	ldr	x19, [sp, #16]
    1070:	ldp	x29, x30, [sp], #32
    1074:	ret
    1078:	mov	w12, #0x88                  	// #136
    107c:	madd	x10, x10, x12, x11
    1080:	b	1090 <_ZN4llvm3mca11Instruction10cycleEventEv+0x2a0>
    1084:	add	x9, x9, #0x88
    1088:	cmp	x10, x9
    108c:	b.eq	1058 <_ZN4llvm3mca11Instruction10cycleEventEv+0x268>  // b.none
    1090:	ldr	w11, [x9, #8]
    1094:	cmn	w11, #0x200
    1098:	b.eq	10a4 <_ZN4llvm3mca11Instruction10cycleEventEv+0x2b4>  // b.none
    109c:	sub	w11, w11, #0x1
    10a0:	str	w11, [x9, #8]
    10a4:	ldr	w11, [x9, #40]
    10a8:	cbz	w11, 1084 <_ZN4llvm3mca11Instruction10cycleEventEv+0x294>
    10ac:	sub	w11, w11, #0x1
    10b0:	str	w11, [x9, #40]
    10b4:	b	1084 <_ZN4llvm3mca11Instruction10cycleEventEv+0x294>
    10b8:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    10bc:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    10c0:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    10c4:	add	x0, x0, #0x0
    10c8:	add	x1, x1, #0x0
    10cc:	add	x3, x3, #0x0
    10d0:	mov	w2, #0xf2                  	// #242
    10d4:	bl	0 <__assert_fail>
    10d8:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    10dc:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    10e0:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    10e4:	add	x0, x0, #0x0
    10e8:	add	x1, x1, #0x0
    10ec:	add	x3, x3, #0x0
    10f0:	mov	w2, #0xf3                  	// #243
    10f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Pipeline.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	cbz	x1, d0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0xd0>
  20:	ldr	x9, [x20, #96]
  24:	add	x24, x20, #0x50
  28:	add	x21, x20, #0x58
  2c:	cbz	x9, 60 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x60>
  30:	ldr	x8, [x9, #32]
  34:	mov	x22, x9
  38:	add	x9, x9, #0x10
  3c:	add	x10, x22, #0x18
  40:	cmp	x8, x19
  44:	csel	x9, x9, x10, hi  // hi = pmore
  48:	ldr	x9, [x9]
  4c:	cbnz	x9, 30 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x30>
  50:	cmp	x8, x19
  54:	mov	x0, x22
  58:	b.hi	64 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x64>  // b.pmore
  5c:	b	78 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x78>
  60:	mov	x22, x21
  64:	ldr	x8, [x24, #24]
  68:	cmp	x8, x22
  6c:	b.eq	84 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x84>  // b.none
  70:	mov	x0, x22
  74:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  78:	ldr	x8, [x0, #32]
  7c:	cmp	x8, x19
  80:	b.cs	d0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0xd0>  // b.hs, b.nlast
  84:	cbz	x22, d0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0xd0>
  88:	cmp	x21, x22
  8c:	b.eq	a0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0xa0>  // b.none
  90:	ldr	x8, [x22, #32]
  94:	cmp	x8, x19
  98:	cset	w23, hi  // hi = pmore
  9c:	b	a4 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0xa4>
  a0:	mov	w23, #0x1                   	// #1
  a4:	mov	w0, #0x28                  	// #40
  a8:	bl	0 <_Znwm>
  ac:	mov	x1, x0
  b0:	str	x19, [x0, #32]
  b4:	mov	w0, w23
  b8:	mov	x2, x22
  bc:	mov	x3, x21
  c0:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  c4:	ldr	x8, [x24, #40]
  c8:	add	x8, x8, #0x1
  cc:	str	x8, [x24, #40]
  d0:	ldr	w8, [x20, #8]
  d4:	cbz	w8, f4 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0xf4>
  d8:	ldr	x20, [x20]
  dc:	lsl	x21, x8, #3
  e0:	ldr	x0, [x20], #8
  e4:	mov	x1, x19
  e8:	bl	0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>
  ec:	subs	x21, x21, #0x8
  f0:	b.ne	e0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0xe0>  // b.any
  f4:	ldp	x20, x19, [sp, #48]
  f8:	ldp	x22, x21, [sp, #32]
  fc:	ldp	x24, x23, [sp, #16]
 100:	ldp	x29, x30, [sp], #64
 104:	ret

0000000000000108 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>:
 108:	stp	x29, x30, [sp, #-48]!
 10c:	str	x21, [sp, #16]
 110:	stp	x20, x19, [sp, #32]
 114:	mov	x29, sp
 118:	ldr	w9, [x0, #8]
 11c:	ldr	x19, [x0]
 120:	lsl	x8, x9, #3
 124:	cmp	w9, #0x4
 128:	add	x20, x19, x8
 12c:	b.cc	19c <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x94>  // b.lo, b.ul, b.last
 130:	lsr	x8, x9, #2
 134:	add	x21, x8, #0x1
 138:	ldr	x0, [x19]
 13c:	ldr	x8, [x0]
 140:	ldr	x8, [x8, #24]
 144:	blr	x8
 148:	tbnz	w0, #0, 218 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
 14c:	ldr	x0, [x19, #8]
 150:	ldr	x8, [x0]
 154:	ldr	x8, [x8, #24]
 158:	blr	x8
 15c:	tbnz	w0, #0, 204 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xfc>
 160:	ldr	x0, [x19, #16]
 164:	ldr	x8, [x0]
 168:	ldr	x8, [x8, #24]
 16c:	blr	x8
 170:	tbnz	w0, #0, 20c <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x104>
 174:	ldr	x0, [x19, #24]
 178:	ldr	x8, [x0]
 17c:	ldr	x8, [x8, #24]
 180:	blr	x8
 184:	tbnz	w0, #0, 214 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x10c>
 188:	sub	x21, x21, #0x1
 18c:	cmp	x21, #0x1
 190:	add	x19, x19, #0x20
 194:	b.gt	138 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x30>
 198:	sub	x8, x20, x19
 19c:	asr	x8, x8, #3
 1a0:	cmp	x8, #0x1
 1a4:	b.eq	1e8 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xe0>  // b.none
 1a8:	cmp	x8, #0x2
 1ac:	b.eq	1d0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xc8>  // b.none
 1b0:	cmp	x8, #0x3
 1b4:	b.ne	1fc <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xf4>  // b.any
 1b8:	ldr	x0, [x19]
 1bc:	ldr	x8, [x0]
 1c0:	ldr	x8, [x8, #24]
 1c4:	blr	x8
 1c8:	tbnz	w0, #0, 218 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
 1cc:	add	x19, x19, #0x8
 1d0:	ldr	x0, [x19]
 1d4:	ldr	x8, [x0]
 1d8:	ldr	x8, [x8, #24]
 1dc:	blr	x8
 1e0:	tbnz	w0, #0, 218 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
 1e4:	add	x19, x19, #0x8
 1e8:	ldr	x0, [x19]
 1ec:	ldr	x8, [x0]
 1f0:	ldr	x8, [x8, #24]
 1f4:	blr	x8
 1f8:	tbnz	w0, #0, 218 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
 1fc:	mov	x19, x20
 200:	b	218 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
 204:	add	x19, x19, #0x8
 208:	b	218 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
 20c:	add	x19, x19, #0x10
 210:	b	218 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x110>
 214:	add	x19, x19, #0x18
 218:	cmp	x19, x20
 21c:	ldp	x20, x19, [sp, #32]
 220:	ldr	x21, [sp, #16]
 224:	cset	w0, ne  // ne = any
 228:	ldp	x29, x30, [sp], #48
 22c:	ret

0000000000000230 <_ZN4llvm3mca8Pipeline3runEv>:
 230:	sub	sp, sp, #0x30
 234:	stp	x29, x30, [sp, #16]
 238:	stp	x20, x19, [sp, #32]
 23c:	add	x29, sp, #0x10
 240:	ldr	w9, [x0, #8]
 244:	cbz	w9, 2f4 <_ZN4llvm3mca8Pipeline3runEv+0xc4>
 248:	mov	x20, x0
 24c:	mov	x19, x8
 250:	mov	x0, x20
 254:	bl	334 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv>
 258:	add	x8, sp, #0x8
 25c:	mov	x0, x20
 260:	bl	420 <_ZN4llvm3mca8Pipeline8runCycleEv>
 264:	ldr	x8, [sp, #8]
 268:	tst	x8, #0xfffffffffffffffe
 26c:	and	x10, x8, #0xfffffffffffffffe
 270:	cset	w9, ne  // ne = any
 274:	orr	x9, x10, x9
 278:	str	x9, [sp, #8]
 27c:	cbnz	x10, 2c0 <_ZN4llvm3mca8Pipeline3runEv+0x90>
 280:	cbnz	x9, 2ec <_ZN4llvm3mca8Pipeline3runEv+0xbc>
 284:	mov	x0, x20
 288:	bl	5c4 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv>
 28c:	ldr	w8, [x20, #128]
 290:	mov	x0, x20
 294:	add	w8, w8, #0x1
 298:	str	w8, [x20, #128]
 29c:	bl	108 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 2a0:	tbnz	w0, #0, 250 <_ZN4llvm3mca8Pipeline3runEv+0x20>
 2a4:	ldrb	w8, [x19, #8]
 2a8:	and	w8, w8, #0xfc
 2ac:	orr	w8, w8, #0x2
 2b0:	strb	w8, [x19, #8]
 2b4:	ldr	w8, [x20, #128]
 2b8:	str	w8, [x19]
 2bc:	b	2dc <_ZN4llvm3mca8Pipeline3runEv+0xac>
 2c0:	ldrb	w9, [x19, #8]
 2c4:	ands	x8, x8, #0xfffffffffffffffe
 2c8:	str	xzr, [sp, #8]
 2cc:	orr	w9, w9, #0x3
 2d0:	strb	w9, [x19, #8]
 2d4:	b.eq	314 <_ZN4llvm3mca8Pipeline3runEv+0xe4>  // b.none
 2d8:	str	x8, [x19]
 2dc:	ldp	x20, x19, [sp, #32]
 2e0:	ldp	x29, x30, [sp, #16]
 2e4:	add	sp, sp, #0x30
 2e8:	ret
 2ec:	add	x0, sp, #0x8
 2f0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 2f4:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 2f8:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 2fc:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 300:	add	x0, x0, #0x0
 304:	add	x1, x1, #0x0
 308:	add	x3, x3, #0x0
 30c:	mov	w2, #0x26                  	// #38
 310:	bl	0 <__assert_fail>
 314:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 318:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 31c:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 320:	add	x0, x0, #0x0
 324:	add	x1, x1, #0x0
 328:	add	x3, x3, #0x0
 32c:	mov	w2, #0x1ce                 	// #462
 330:	bl	0 <__assert_fail>

0000000000000334 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv>:
 334:	stp	x29, x30, [sp, #-32]!
 338:	stp	x20, x19, [sp, #16]
 33c:	mov	x29, sp
 340:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 344:	ldr	x8, [x8]
 348:	mov	x19, x0
 34c:	ldrb	w8, [x8]
 350:	cbz	w8, 3e0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xac>
 354:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 358:	add	x0, x0, #0x0
 35c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 360:	tbz	w0, #0, 3e0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xac>
 364:	bl	0 <_ZN4llvm4dbgsEv>
 368:	ldp	x9, x8, [x0, #16]
 36c:	sub	x9, x9, x8
 370:	cmp	x9, #0x11
 374:	b.hi	38c <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x58>  // b.pmore
 378:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 37c:	add	x1, x1, #0x0
 380:	mov	w2, #0x12                  	// #18
 384:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 388:	b	3b0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x7c>
 38c:	adrp	x9, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 390:	add	x9, x9, #0x0
 394:	ldr	q0, [x9]
 398:	mov	w9, #0x203a                	// #8250
 39c:	strh	w9, [x8, #16]
 3a0:	str	q0, [x8]
 3a4:	ldr	x8, [x0, #24]
 3a8:	add	x8, x8, #0x12
 3ac:	str	x8, [x0, #24]
 3b0:	ldr	w1, [x19, #128]
 3b4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 3b8:	ldp	x9, x8, [x0, #16]
 3bc:	cmp	x8, x9
 3c0:	b.cs	3d8 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xa4>  // b.hs, b.nlast
 3c4:	add	x9, x8, #0x1
 3c8:	mov	w10, #0xa                   	// #10
 3cc:	str	x9, [x0, #24]
 3d0:	strb	w10, [x8]
 3d4:	b	3e0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xac>
 3d8:	mov	w1, #0xa                   	// #10
 3dc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 3e0:	ldr	x20, [x19, #104]
 3e4:	add	x19, x19, #0x58
 3e8:	cmp	x20, x19
 3ec:	b.eq	414 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xe0>  // b.none
 3f0:	ldr	x0, [x20, #32]
 3f4:	ldr	x8, [x0]
 3f8:	ldr	x8, [x8]
 3fc:	blr	x8
 400:	mov	x0, x20
 404:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 408:	mov	x20, x0
 40c:	cmp	x0, x19
 410:	b.ne	3f0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xbc>  // b.any
 414:	ldp	x20, x19, [sp, #16]
 418:	ldp	x29, x30, [sp], #32
 41c:	ret

0000000000000420 <_ZN4llvm3mca8Pipeline8runCycleEv>:
 420:	sub	sp, sp, #0x50
 424:	stp	x29, x30, [sp, #32]
 428:	stp	x22, x21, [sp, #48]
 42c:	stp	x20, x19, [sp, #64]
 430:	add	x29, sp, #0x20
 434:	mov	x19, x8
 438:	mov	w8, #0x1                   	// #1
 43c:	str	x8, [x19]
 440:	ldr	w9, [x0, #8]
 444:	mov	x20, x0
 448:	cbz	w9, 4a8 <_ZN4llvm3mca8Pipeline8runCycleEv+0x88>
 44c:	ldr	x8, [x20]
 450:	lsl	x21, x9, #3
 454:	sub	x22, x8, #0x8
 458:	mov	w8, #0x1                   	// #1
 45c:	tst	x8, #0xfffffffffffffffe
 460:	and	x9, x8, #0xfffffffffffffffe
 464:	cset	w8, ne  // ne = any
 468:	orr	x8, x9, x8
 46c:	str	x8, [x19]
 470:	cbnz	x9, 4a4 <_ZN4llvm3mca8Pipeline8runCycleEv+0x84>
 474:	ldr	x0, [x22, x21]
 478:	ldr	x8, [x0]
 47c:	ldr	x9, [x8, #32]
 480:	add	x8, sp, #0x10
 484:	blr	x9
 488:	ldr	x8, [x19]
 48c:	cbnz	x8, 59c <_ZN4llvm3mca8Pipeline8runCycleEv+0x17c>
 490:	ldr	x8, [sp, #16]
 494:	subs	x21, x21, #0x8
 498:	orr	x8, x8, #0x1
 49c:	str	x8, [x19]
 4a0:	b.ne	45c <_ZN4llvm3mca8Pipeline8runCycleEv+0x3c>  // b.any
 4a4:	ldr	w9, [x20, #8]
 4a8:	str	wzr, [sp, #16]
 4ac:	str	xzr, [sp, #24]
 4b0:	cbz	w9, 5a4 <_ZN4llvm3mca8Pipeline8runCycleEv+0x184>
 4b4:	ldr	x22, [x20]
 4b8:	tst	x8, #0xfffffffffffffffe
 4bc:	and	x10, x8, #0xfffffffffffffffe
 4c0:	cset	w8, ne  // ne = any
 4c4:	ldr	x21, [x22]
 4c8:	orr	x8, x10, x8
 4cc:	str	x8, [x19]
 4d0:	cbz	x10, 518 <_ZN4llvm3mca8Pipeline8runCycleEv+0xf8>
 4d4:	add	x8, x22, w9, uxtw #3
 4d8:	b	540 <_ZN4llvm3mca8Pipeline8runCycleEv+0x120>
 4dc:	ldr	x8, [x21]
 4e0:	add	x1, sp, #0x10
 4e4:	mov	x0, x21
 4e8:	ldr	x9, [x8, #48]
 4ec:	add	x8, sp, #0x8
 4f0:	blr	x9
 4f4:	ldr	x8, [x19]
 4f8:	cbnz	x8, 59c <_ZN4llvm3mca8Pipeline8runCycleEv+0x17c>
 4fc:	ldr	x8, [sp, #8]
 500:	tst	x8, #0xfffffffffffffffe
 504:	and	x9, x8, #0xfffffffffffffffe
 508:	cset	w8, ne  // ne = any
 50c:	orr	x8, x9, x8
 510:	str	x8, [x19]
 514:	cbnz	x9, 530 <_ZN4llvm3mca8Pipeline8runCycleEv+0x110>
 518:	ldr	x8, [x21]
 51c:	add	x1, sp, #0x10
 520:	mov	x0, x21
 524:	ldr	x8, [x8, #16]
 528:	blr	x8
 52c:	tbnz	w0, #0, 4dc <_ZN4llvm3mca8Pipeline8runCycleEv+0xbc>
 530:	ldr	w8, [x20, #8]
 534:	cbz	w8, 588 <_ZN4llvm3mca8Pipeline8runCycleEv+0x168>
 538:	ldr	x22, [x20]
 53c:	add	x8, x22, x8, lsl #3
 540:	sub	x20, x8, #0x8
 544:	ldr	x0, [x22]
 548:	ldr	x8, [x0]
 54c:	ldr	x9, [x8, #40]
 550:	add	x8, sp, #0x8
 554:	blr	x9
 558:	ldr	x8, [x19]
 55c:	cbnz	x8, 59c <_ZN4llvm3mca8Pipeline8runCycleEv+0x17c>
 560:	ldr	x8, [sp, #8]
 564:	tst	x8, #0xfffffffffffffffe
 568:	and	x9, x8, #0xfffffffffffffffe
 56c:	cset	w8, ne  // ne = any
 570:	orr	x8, x9, x8
 574:	str	x8, [x19]
 578:	cbnz	x9, 588 <_ZN4llvm3mca8Pipeline8runCycleEv+0x168>
 57c:	cmp	x20, x22
 580:	add	x22, x22, #0x8
 584:	b.ne	544 <_ZN4llvm3mca8Pipeline8runCycleEv+0x124>  // b.any
 588:	ldp	x20, x19, [sp, #64]
 58c:	ldp	x22, x21, [sp, #48]
 590:	ldp	x29, x30, [sp, #32]
 594:	add	sp, sp, #0x50
 598:	ret
 59c:	mov	x0, x19
 5a0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 5a4:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 5a8:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 5ac:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 5b0:	add	x0, x0, #0x0
 5b4:	add	x1, x1, #0x0
 5b8:	add	x3, x3, #0x0
 5bc:	mov	w2, #0x95                  	// #149
 5c0:	bl	0 <__assert_fail>

00000000000005c4 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv>:
 5c4:	stp	x29, x30, [sp, #-32]!
 5c8:	stp	x20, x19, [sp, #16]
 5cc:	mov	x29, sp
 5d0:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
 5d4:	ldr	x8, [x8]
 5d8:	mov	x19, x0
 5dc:	ldrb	w8, [x8]
 5e0:	cbz	w8, 67c <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xb8>
 5e4:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 5e8:	add	x0, x0, #0x0
 5ec:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 5f0:	tbz	w0, #0, 67c <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xb8>
 5f4:	bl	0 <_ZN4llvm4dbgsEv>
 5f8:	ldp	x9, x8, [x0, #16]
 5fc:	sub	x9, x9, x8
 600:	cmp	x9, #0xe
 604:	b.hi	61c <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x58>  // b.pmore
 608:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 60c:	add	x1, x1, #0x0
 610:	mov	w2, #0xf                   	// #15
 614:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 618:	b	640 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x7c>
 61c:	adrp	x9, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 620:	add	x9, x9, #0x0
 624:	ldur	x10, [x9, #7]
 628:	ldr	x9, [x9]
 62c:	stur	x10, [x8, #7]
 630:	str	x9, [x8]
 634:	ldr	x8, [x0, #24]
 638:	add	x8, x8, #0xf
 63c:	str	x8, [x0, #24]
 640:	ldr	w1, [x19, #128]
 644:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 648:	ldp	x9, x8, [x0, #16]
 64c:	cmp	x9, x8
 650:	b.ne	668 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xa4>  // b.any
 654:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 658:	add	x1, x1, #0x0
 65c:	mov	w2, #0x1                   	// #1
 660:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 664:	b	67c <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xb8>
 668:	mov	w9, #0xa                   	// #10
 66c:	strb	w9, [x8]
 670:	ldr	x8, [x0, #24]
 674:	add	x8, x8, #0x1
 678:	str	x8, [x0, #24]
 67c:	ldr	x20, [x19, #104]
 680:	add	x19, x19, #0x58
 684:	cmp	x20, x19
 688:	b.eq	6b0 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xec>  // b.none
 68c:	ldr	x0, [x20, #32]
 690:	ldr	x8, [x0]
 694:	ldr	x8, [x8, #8]
 698:	blr	x8
 69c:	mov	x0, x20
 6a0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 6a4:	mov	x20, x0
 6a8:	cmp	x0, x19
 6ac:	b.ne	68c <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xc8>  // b.any
 6b0:	ldp	x20, x19, [sp, #16]
 6b4:	ldp	x29, x30, [sp], #32
 6b8:	ret

00000000000006bc <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>:
 6bc:	stp	x29, x30, [sp, #-32]!
 6c0:	stp	x20, x19, [sp, #16]
 6c4:	mov	x29, sp
 6c8:	ldr	x9, [x1]
 6cc:	cbz	x9, 744 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x88>
 6d0:	ldr	w8, [x0, #8]
 6d4:	mov	x20, x1
 6d8:	mov	x19, x0
 6dc:	cbz	w8, 6f8 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x3c>
 6e0:	ldr	x10, [x19]
 6e4:	add	x10, x10, x8, lsl #3
 6e8:	ldur	x10, [x10, #-8]
 6ec:	ldr	x11, [x10, #8]
 6f0:	cbnz	x11, 784 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0xc8>
 6f4:	str	x9, [x10, #8]
 6f8:	ldr	w9, [x19, #12]
 6fc:	cmp	w8, w9
 700:	b.cs	730 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x74>  // b.hs, b.nlast
 704:	ldr	x10, [x19]
 708:	ldr	x11, [x20]
 70c:	cmp	w8, w9
 710:	str	xzr, [x20]
 714:	str	x11, [x10, w8, uxtw #3]
 718:	b.cs	764 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0xa8>  // b.hs, b.nlast
 71c:	add	w8, w8, #0x1
 720:	str	w8, [x19, #8]
 724:	ldp	x20, x19, [sp, #16]
 728:	ldp	x29, x30, [sp], #32
 72c:	ret
 730:	mov	x0, x19
 734:	mov	x1, xzr
 738:	bl	0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 73c:	ldp	w8, w9, [x19, #8]
 740:	b	704 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x48>
 744:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 748:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 74c:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 750:	add	x0, x0, #0x0
 754:	add	x1, x1, #0x0
 758:	add	x3, x3, #0x0
 75c:	mov	w2, #0x4c                  	// #76
 760:	bl	0 <__assert_fail>
 764:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 768:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 76c:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 770:	add	x0, x0, #0x0
 774:	add	x1, x1, #0x0
 778:	add	x3, x3, #0x0
 77c:	mov	w2, #0x43                  	// #67
 780:	bl	0 <__assert_fail>
 784:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 788:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 78c:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>
 790:	add	x0, x0, #0x0
 794:	add	x1, x1, #0x0
 798:	add	x3, x3, #0x0
 79c:	mov	w2, #0x3a                  	// #58
 7a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  6c:	lsl	x0, x21, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, 11c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x11c>
  c4:	lsl	x22, x8, #3
  c8:	mov	x9, x22
  cc:	mov	x10, x20
  d0:	ldr	x11, [x0]
  d4:	str	xzr, [x0], #8
  d8:	subs	x9, x9, #0x8
  dc:	str	x11, [x10], #8
  e0:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xd0>  // b.any
  e4:	ldr	x0, [x19]
  e8:	cbz	w8, 11c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x11c>
  ec:	sub	x23, x0, #0x8
  f0:	b	100 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x100>
  f4:	str	xzr, [x23, x22]
  f8:	subs	x22, x22, #0x8
  fc:	b.eq	118 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x118>  // b.none
 100:	ldr	x0, [x23, x22]
 104:	cbz	x0, f4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xf4>
 108:	ldr	x8, [x0]
 10c:	ldr	x8, [x8, #8]
 110:	blr	x8
 114:	b	f4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0xf4>
 118:	ldr	x0, [x19]
 11c:	add	x8, x19, #0x10
 120:	cmp	x0, x8
 124:	b.eq	12c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca5StageESt14default_deleteIS3_EELb0EE4growEm+0x12c>  // b.none
 128:	bl	0 <free>
 12c:	str	x20, [x19]
 130:	str	w21, [x19, #12]
 134:	ldp	x20, x19, [sp, #48]
 138:	ldp	x22, x21, [sp, #32]
 13c:	ldr	x23, [sp, #16]
 140:	ldp	x29, x30, [sp], #64
 144:	ret

DispatchStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>:
   0:	str	xzr, [x0, #8]
   4:	adrp	x9, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
   8:	ldr	x9, [x9]
   c:	mov	x8, x0
  10:	str	wzr, [x8, #24]!
  14:	stp	w3, w3, [x0, #64]
  18:	add	x9, x9, #0x10
  1c:	str	wzr, [x0, #72]
  20:	str	wzr, [x0, #80]
  24:	stp	xzr, x1, [x0, #88]
  28:	stp	xzr, x8, [x0, #32]
  2c:	stp	x8, xzr, [x0, #48]
  30:	str	x9, [x0]
  34:	stp	x4, x5, [x0, #104]
  38:	cbz	w3, 40 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE+0x40>
  3c:	ret
  40:	ldr	x8, [x1, #152]
  44:	ldr	w8, [x8]
  48:	str	w8, [x0, #64]
  4c:	ret

0000000000000050 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>:
  50:	sub	sp, sp, #0x70
  54:	stp	x29, x30, [sp, #48]
  58:	stp	x24, x23, [sp, #64]
  5c:	stp	x22, x21, [sp, #80]
  60:	stp	x20, x19, [sp, #96]
  64:	add	x29, sp, #0x30
  68:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
  6c:	ldr	x8, [x8]
  70:	mov	w19, w4
  74:	mov	x20, x3
  78:	mov	x21, x2
  7c:	ldrb	w8, [x8]
  80:	mov	x22, x1
  84:	mov	x23, x0
  88:	cbz	w8, 12c <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xdc>
  8c:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
  90:	add	x0, x0, #0x0
  94:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
  98:	tbz	w0, #0, 12c <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xdc>
  9c:	bl	0 <_ZN4llvm4dbgsEv>
  a0:	ldp	x9, x8, [x0, #16]
  a4:	mov	x24, x0
  a8:	sub	x9, x9, x8
  ac:	cmp	x9, #0x1c
  b0:	b.hi	d0 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x80>  // b.pmore
  b4:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
  b8:	add	x1, x1, #0x0
  bc:	mov	w2, #0x1d                  	// #29
  c0:	mov	x0, x24
  c4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  c8:	mov	x24, x0
  cc:	b	f4 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xa4>
  d0:	adrp	x9, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
  d4:	add	x9, x9, #0x0
  d8:	ldur	q0, [x9, #13]
  dc:	ldr	q1, [x9]
  e0:	stur	q0, [x8, #13]
  e4:	str	q1, [x8]
  e8:	ldr	x8, [x24, #24]
  ec:	add	x8, x8, #0x1d
  f0:	str	x8, [x24, #24]
  f4:	ldr	w1, [x22]
  f8:	mov	x0, x24
  fc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 100:	ldp	x9, x8, [x24, #16]
 104:	cmp	x8, x9
 108:	b.cs	120 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xd0>  // b.hs, b.nlast
 10c:	add	x9, x8, #0x1
 110:	mov	w10, #0xa                   	// #10
 114:	str	x9, [x24, #24]
 118:	strb	w10, [x8]
 11c:	b	12c <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xdc>
 120:	mov	w1, #0xa                   	// #10
 124:	mov	x0, x24
 128:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 12c:	mov	w8, #0x6                   	// #6
 130:	stp	x22, x21, [sp, #16]
 134:	str	x20, [sp, #32]
 138:	str	w8, [sp, #8]
 13c:	str	w19, [sp, #40]
 140:	ldr	x19, [x23, #40]
 144:	add	x20, x23, #0x18
 148:	cmp	x19, x20
 14c:	b.eq	178 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x128>  // b.none
 150:	ldr	x0, [x19, #32]
 154:	add	x1, sp, #0x8
 158:	ldr	x8, [x0]
 15c:	ldr	x8, [x8, #16]
 160:	blr	x8
 164:	mov	x0, x19
 168:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 16c:	mov	x19, x0
 170:	cmp	x0, x20
 174:	b.ne	150 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x100>  // b.any
 178:	ldp	x20, x19, [sp, #96]
 17c:	ldp	x22, x21, [sp, #80]
 180:	ldp	x24, x23, [sp, #64]
 184:	ldp	x29, x30, [sp, #48]
 188:	add	sp, sp, #0x70
 18c:	ret

0000000000000190 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>:
 190:	sub	sp, sp, #0x70
 194:	stp	x29, x30, [sp, #48]
 198:	stp	x24, x23, [sp, #64]
 19c:	stp	x22, x21, [sp, #80]
 1a0:	stp	x20, x19, [sp, #96]
 1a4:	add	x29, sp, #0x30
 1a8:	adrp	x8, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 1ac:	ldr	d0, [x8]
 1b0:	add	x8, sp, #0x18
 1b4:	add	x21, x8, #0x10
 1b8:	str	x21, [sp, #24]
 1bc:	str	d0, [sp, #32]
 1c0:	ldr	x10, [x1, #8]
 1c4:	mov	x19, x1
 1c8:	mov	x20, x0
 1cc:	ldr	w9, [x10, #24]
 1d0:	cbz	w9, 248 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xb8>
 1d4:	ldr	x10, [x10, #16]
 1d8:	add	x9, x9, x9, lsl #4
 1dc:	mov	w8, wzr
 1e0:	lsl	x22, x9, #3
 1e4:	add	x23, x10, #0xc
 1e8:	mov	w9, #0x4                   	// #4
 1ec:	mov	x1, x21
 1f0:	ldrh	w24, [x23]
 1f4:	cmp	w8, w9
 1f8:	b.cs	220 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x90>  // b.hs, b.nlast
 1fc:	cmp	w8, w9
 200:	strh	w24, [x1, w8, uxtw #1]
 204:	b.cs	2d8 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x148>  // b.hs, b.nlast
 208:	add	w8, w8, #0x1
 20c:	subs	x22, x22, #0x88
 210:	add	x23, x23, #0x88
 214:	str	w8, [sp, #32]
 218:	b.ne	1f0 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x60>  // b.any
 21c:	b	240 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xb0>
 220:	add	x0, sp, #0x18
 224:	mov	w3, #0x2                   	// #2
 228:	mov	x1, x21
 22c:	mov	x2, xzr
 230:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 234:	ldp	w8, w9, [sp, #32]
 238:	ldr	x1, [sp, #24]
 23c:	b	1fc <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x6c>
 240:	mov	w2, w8
 244:	b	250 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xc0>
 248:	mov	x2, xzr
 24c:	mov	x1, x21
 250:	ldr	x0, [x20, #112]
 254:	bl	0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE>
 258:	mov	w21, #0x1                   	// #1
 25c:	cbz	w0, 2a4 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x114>
 260:	str	w21, [sp, #8]
 264:	str	x19, [sp, #16]
 268:	ldr	x19, [x20, #40]
 26c:	add	x20, x20, #0x18
 270:	cmp	x19, x20
 274:	b.eq	2a0 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x110>  // b.none
 278:	ldr	x0, [x19, #32]
 27c:	add	x1, sp, #0x8
 280:	ldr	x8, [x0]
 284:	ldr	x8, [x8, #24]
 288:	blr	x8
 28c:	mov	x0, x19
 290:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 294:	mov	x19, x0
 298:	cmp	x0, x20
 29c:	b.ne	278 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xe8>  // b.any
 2a0:	mov	w21, wzr
 2a4:	ldr	x0, [sp, #24]
 2a8:	add	x8, sp, #0x18
 2ac:	add	x8, x8, #0x10
 2b0:	cmp	x0, x8
 2b4:	b.eq	2bc <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x12c>  // b.none
 2b8:	bl	0 <free>
 2bc:	mov	w0, w21
 2c0:	ldp	x20, x19, [sp, #96]
 2c4:	ldp	x22, x21, [sp, #80]
 2c8:	ldp	x24, x23, [sp, #64]
 2cc:	ldp	x29, x30, [sp, #48]
 2d0:	add	sp, sp, #0x70
 2d4:	ret
 2d8:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 2dc:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 2e0:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 2e4:	add	x0, x0, #0x0
 2e8:	add	x1, x1, #0x0
 2ec:	add	x3, x3, #0x0
 2f0:	mov	w2, #0x43                  	// #67
 2f4:	bl	0 <__assert_fail>

00000000000002f8 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE>:
 2f8:	sub	sp, sp, #0x30
 2fc:	stp	x29, x30, [sp, #16]
 300:	stp	x20, x19, [sp, #32]
 304:	add	x29, sp, #0x10
 308:	ldr	x8, [x1, #8]
 30c:	ldr	x9, [x0, #104]
 310:	ldr	x8, [x8]
 314:	ldp	w10, w9, [x9, #16]
 318:	ldr	w8, [x8, #316]
 31c:	cmp	w10, w8
 320:	csel	w8, w10, w8, cc  // cc = lo, ul, last
 324:	cmp	w8, #0x0
 328:	csinc	w8, w8, wzr, ne  // ne = any
 32c:	cmp	w9, w8
 330:	b.cs	380 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x88>  // b.hs, b.nlast
 334:	mov	w8, #0x2                   	// #2
 338:	str	w8, [sp]
 33c:	str	x1, [sp, #8]
 340:	ldr	x19, [x0, #40]
 344:	add	x20, x0, #0x18
 348:	cmp	x19, x20
 34c:	b.eq	378 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x80>  // b.none
 350:	ldr	x0, [x19, #32]
 354:	mov	x1, sp
 358:	ldr	x8, [x0]
 35c:	ldr	x8, [x8, #24]
 360:	blr	x8
 364:	mov	x0, x19
 368:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 36c:	mov	x19, x0
 370:	cmp	x0, x20
 374:	b.ne	350 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x58>  // b.any
 378:	mov	w0, wzr
 37c:	b	384 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x8c>
 380:	mov	w0, #0x1                   	// #1
 384:	ldp	x20, x19, [sp, #32]
 388:	ldp	x29, x30, [sp, #16]
 38c:	add	sp, sp, #0x30
 390:	ret

0000000000000394 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>:
 394:	sub	sp, sp, #0x40
 398:	stp	x29, x30, [sp, #16]
 39c:	stp	x22, x21, [sp, #32]
 3a0:	stp	x20, x19, [sp, #48]
 3a4:	add	x29, sp, #0x10
 3a8:	ldr	x8, [x1, #8]
 3ac:	ldr	x9, [x0, #104]
 3b0:	mov	x19, x1
 3b4:	mov	x20, x0
 3b8:	ldr	x8, [x8]
 3bc:	ldp	w10, w9, [x9, #16]
 3c0:	ldr	w8, [x8, #316]
 3c4:	cmp	w10, w8
 3c8:	csel	w8, w10, w8, cc  // cc = lo, ul, last
 3cc:	cmp	w8, #0x0
 3d0:	csinc	w8, w8, wzr, ne  // ne = any
 3d4:	cmp	w9, w8
 3d8:	b.cs	428 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0x94>  // b.hs, b.nlast
 3dc:	mov	w8, #0x2                   	// #2
 3e0:	str	w8, [sp]
 3e4:	str	x19, [sp, #8]
 3e8:	ldr	x21, [x20, #40]
 3ec:	add	x22, x20, #0x18
 3f0:	cmp	x21, x22
 3f4:	b.eq	420 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0x8c>  // b.none
 3f8:	ldr	x0, [x21, #32]
 3fc:	mov	x1, sp
 400:	ldr	x8, [x0]
 404:	ldr	x8, [x8, #24]
 408:	blr	x8
 40c:	mov	x0, x21
 410:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 414:	mov	x21, x0
 418:	cmp	x0, x22
 41c:	b.ne	3f8 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0x64>  // b.any
 420:	mov	w21, wzr
 424:	b	42c <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0x98>
 428:	mov	w21, #0x1                   	// #1
 42c:	mov	x0, x20
 430:	mov	x1, x19
 434:	bl	190 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>
 438:	ldr	x8, [x20, #8]
 43c:	and	w20, w21, w0
 440:	cbz	x8, 45c <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0xc8>
 444:	ldr	x9, [x8]
 448:	mov	x0, x8
 44c:	mov	x1, x19
 450:	ldr	x9, [x9, #16]
 454:	blr	x9
 458:	b	460 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0xcc>
 45c:	mov	w0, wzr
 460:	and	w0, w20, w0
 464:	ldp	x20, x19, [sp, #48]
 468:	ldp	x22, x21, [sp, #32]
 46c:	ldp	x29, x30, [sp, #16]
 470:	add	sp, sp, #0x40
 474:	ret

0000000000000478 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE>:
 478:	sub	sp, sp, #0x70
 47c:	stp	x29, x30, [sp, #48]
 480:	stp	x24, x23, [sp, #64]
 484:	stp	x22, x21, [sp, #80]
 488:	stp	x20, x19, [sp, #96]
 48c:	add	x29, sp, #0x30
 490:	stp	x1, x2, [x29, #-16]
 494:	ldr	w9, [x0, #72]
 498:	cbnz	w9, 6c0 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x248>
 49c:	mov	x19, x8
 4a0:	ldr	x8, [x2]
 4a4:	ldp	w11, w10, [x0, #64]
 4a8:	mov	x21, x2
 4ac:	mov	x20, x0
 4b0:	ldr	w23, [x8, #316]
 4b4:	subs	w9, w23, w11
 4b8:	b.ls	4dc <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x64>  // b.plast
 4bc:	cmp	w10, w11
 4c0:	b.ne	740 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x2c8>  // b.any
 4c4:	stp	wzr, w9, [x20, #68]
 4c8:	str	w1, [x20, #80]
 4cc:	str	x21, [x20, #88]
 4d0:	ldrb	w8, [x8, #328]
 4d4:	cbnz	w8, 4f0 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x78>
 4d8:	b	4f4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x7c>
 4dc:	subs	w9, w10, w23
 4e0:	b.cc	760 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x2e8>  // b.lo, b.ul, b.last
 4e4:	str	w9, [x20, #68]
 4e8:	ldrb	w8, [x8, #328]
 4ec:	cbz	w8, 4f4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x7c>
 4f0:	str	wzr, [x20, #68]
 4f4:	ldrb	w8, [x21, #8]
 4f8:	cbz	w8, 530 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xb8>
 4fc:	ldr	w8, [x21, #24]
 500:	cmp	w8, #0x1
 504:	b.ne	700 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x288>  // b.any
 508:	ldr	w8, [x21, #584]
 50c:	cmp	w8, #0x1
 510:	b.ne	720 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x2a8>  // b.any
 514:	ldr	x0, [x20, #112]
 518:	ldr	x1, [x21, #16]
 51c:	ldr	x2, [x21, #576]
 520:	bl	0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE>
 524:	tbz	w0, #0, 530 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xb8>
 528:	mov	w8, #0x1                   	// #1
 52c:	strb	w8, [x21, #840]
 530:	ldrb	w8, [x21, #840]
 534:	cbnz	w8, 568 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xf0>
 538:	ldr	w8, [x21, #584]
 53c:	cbz	w8, 568 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xf0>
 540:	ldr	x22, [x21, #576]
 544:	add	x8, x8, x8, lsl #1
 548:	lsl	x24, x8, #4
 54c:	ldr	x0, [x20, #112]
 550:	ldr	x2, [x20, #96]
 554:	mov	x1, x22
 558:	bl	0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE>
 55c:	subs	x24, x24, #0x30
 560:	add	x22, x22, #0x30
 564:	b.ne	54c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xd4>  // b.any
 568:	ldr	x8, [x20, #112]
 56c:	mov	x9, sp
 570:	add	x1, x9, #0x10
 574:	ldr	w22, [x8, #24]
 578:	adrp	x8, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 57c:	ldr	d0, [x8]
 580:	str	x1, [sp]
 584:	cmp	w22, #0x5
 588:	str	d0, [sp, #8]
 58c:	b.cc	5a8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x130>  // b.lo, b.ul, b.last
 590:	mov	x0, sp
 594:	mov	w3, #0x4                   	// #4
 598:	mov	x2, x22
 59c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 5a0:	ldr	w8, [sp, #12]
 5a4:	b	5ac <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x134>
 5a8:	mov	w8, #0x4                   	// #4
 5ac:	cmp	x8, x22
 5b0:	b.cc	6e0 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x268>  // b.lo, b.ul, b.last
 5b4:	str	w22, [sp, #8]
 5b8:	cbz	w22, 5cc <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x154>
 5bc:	ldr	x0, [sp]
 5c0:	lsl	x2, x22, #2
 5c4:	mov	w1, wzr
 5c8:	bl	0 <memset>
 5cc:	ldr	w8, [x21, #24]
 5d0:	cbz	w8, 604 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x18c>
 5d4:	ldr	x22, [x21, #16]
 5d8:	add	x8, x8, x8, lsl #4
 5dc:	lsl	x24, x8, #3
 5e0:	ldr	x0, [x20, #112]
 5e4:	ldur	w1, [x29, #-16]
 5e8:	ldr	x3, [sp]
 5ec:	ldr	w4, [sp, #8]
 5f0:	mov	x2, x22
 5f4:	bl	0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE>
 5f8:	subs	x24, x24, #0x88
 5fc:	add	x22, x22, #0x88
 600:	b.ne	5e0 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x168>  // b.any
 604:	ldr	x0, [x20, #104]
 608:	sub	x1, x29, #0x10
 60c:	bl	0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 610:	mov	w1, w0
 614:	mov	x0, x21
 618:	bl	0 <_ZN4llvm3mca11Instruction8dispatchEj>
 61c:	ldr	w8, [x20, #64]
 620:	ldr	x2, [sp]
 624:	ldr	w3, [sp, #8]
 628:	sub	x1, x29, #0x10
 62c:	cmp	w23, w8
 630:	csel	w4, w23, w8, cc  // cc = lo, ul, last
 634:	mov	x0, x20
 638:	bl	50 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>
 63c:	ldr	x0, [x20, #8]
 640:	cbz	x0, 6a0 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x228>
 644:	ldr	x8, [x0]
 648:	sub	x1, x29, #0x10
 64c:	ldr	x8, [x8, #16]
 650:	blr	x8
 654:	tbz	w0, #0, 6a0 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x228>
 658:	ldr	x0, [x20, #8]
 65c:	sub	x1, x29, #0x10
 660:	ldr	x8, [x0]
 664:	ldr	x9, [x8, #48]
 668:	mov	x8, x19
 66c:	blr	x9
 670:	ldr	x0, [sp]
 674:	mov	x8, sp
 678:	add	x8, x8, #0x10
 67c:	cmp	x0, x8
 680:	b.eq	688 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x210>  // b.none
 684:	bl	0 <free>
 688:	ldp	x20, x19, [sp, #96]
 68c:	ldp	x22, x21, [sp, #80]
 690:	ldp	x24, x23, [sp, #64]
 694:	ldp	x29, x30, [sp, #48]
 698:	add	sp, sp, #0x70
 69c:	ret
 6a0:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6a4:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6a8:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6ac:	add	x0, x0, #0x0
 6b0:	add	x1, x1, #0x0
 6b4:	add	x3, x3, #0x0
 6b8:	mov	w2, #0x47                  	// #71
 6bc:	bl	0 <__assert_fail>
 6c0:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6c4:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6c8:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6cc:	add	x0, x0, #0x0
 6d0:	add	x1, x1, #0x0
 6d4:	add	x3, x3, #0x0
 6d8:	mov	w2, #0x4f                  	// #79
 6dc:	bl	0 <__assert_fail>
 6e0:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6e4:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6e8:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 6ec:	add	x0, x0, #0x0
 6f0:	add	x1, x1, #0x0
 6f4:	add	x3, x3, #0x0
 6f8:	mov	w2, #0x43                  	// #67
 6fc:	bl	0 <__assert_fail>
 700:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 704:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 708:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 70c:	add	x0, x0, #0x0
 710:	add	x1, x1, #0x0
 714:	add	x3, x3, #0x0
 718:	mov	w2, #0x63                  	// #99
 71c:	bl	0 <__assert_fail>
 720:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 724:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 728:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 72c:	add	x0, x0, #0x0
 730:	add	x1, x1, #0x0
 734:	add	x3, x3, #0x0
 738:	mov	w2, #0x64                  	// #100
 73c:	bl	0 <__assert_fail>
 740:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 744:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 748:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 74c:	add	x0, x0, #0x0
 750:	add	x1, x1, #0x0
 754:	add	x3, x3, #0x0
 758:	mov	w2, #0x54                  	// #84
 75c:	bl	0 <__assert_fail>
 760:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 764:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 768:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 76c:	add	x0, x0, #0x0
 770:	add	x1, x1, #0x0
 774:	add	x3, x3, #0x0
 778:	mov	w2, #0x59                  	// #89
 77c:	bl	0 <__assert_fail>

0000000000000780 <_ZN4llvm3mca13DispatchStage10cycleStartEv>:
 780:	sub	sp, sp, #0x70
 784:	stp	x29, x30, [sp, #48]
 788:	str	x23, [sp, #64]
 78c:	stp	x22, x21, [sp, #80]
 790:	stp	x20, x19, [sp, #96]
 794:	add	x29, sp, #0x30
 798:	mov	x20, x0
 79c:	ldr	x0, [x0, #112]
 7a0:	mov	x19, x8
 7a4:	bl	0 <_ZN4llvm3mca12RegisterFile10cycleStartEv>
 7a8:	ldr	w9, [x20, #72]
 7ac:	ldr	w8, [x20, #64]
 7b0:	cbz	w9, 810 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x90>
 7b4:	subs	w10, w8, w9
 7b8:	ldr	x11, [x20, #88]
 7bc:	csel	w10, wzr, w10, cc  // cc = lo, ul, last
 7c0:	sub	w21, w8, w10
 7c4:	sub	w8, w9, w21
 7c8:	stp	w10, w8, [x20, #68]
 7cc:	cbz	x11, 8b8 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x138>
 7d0:	ldr	x8, [x20, #112]
 7d4:	mov	x9, sp
 7d8:	add	x1, x9, #0x10
 7dc:	ldr	w22, [x8, #24]
 7e0:	adrp	x8, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 7e4:	ldr	d0, [x8]
 7e8:	str	x1, [sp]
 7ec:	cmp	w22, #0x9
 7f0:	str	d0, [sp, #8]
 7f4:	b.cc	820 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xa0>  // b.lo, b.ul, b.last
 7f8:	mov	x0, sp
 7fc:	mov	w3, #0x4                   	// #4
 800:	mov	x2, x22
 804:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 808:	ldr	w8, [sp, #12]
 80c:	b	824 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xa4>
 810:	str	w8, [x20, #68]
 814:	mov	w8, #0x1                   	// #1
 818:	str	x8, [x19]
 81c:	b	8a0 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x120>
 820:	mov	w8, #0x8                   	// #8
 824:	cmp	x8, x22
 828:	b.cc	8d8 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x158>  // b.lo, b.ul, b.last
 82c:	ldr	x2, [sp]
 830:	add	x23, x20, #0x50
 834:	str	w22, [sp, #8]
 838:	cbz	w22, 85c <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xdc>
 83c:	lsl	x8, x22, #2
 840:	mov	x0, x2
 844:	mov	w1, wzr
 848:	mov	x2, x8
 84c:	bl	0 <memset>
 850:	ldr	x2, [sp]
 854:	ldr	w3, [sp, #8]
 858:	b	860 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xe0>
 85c:	mov	x3, xzr
 860:	mov	x0, x20
 864:	mov	x1, x23
 868:	mov	w4, w21
 86c:	bl	50 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>
 870:	ldr	w8, [x20, #72]
 874:	cbnz	w8, 880 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x100>
 878:	str	wzr, [x20, #80]
 87c:	str	xzr, [x20, #88]
 880:	ldr	x0, [sp]
 884:	mov	x9, sp
 888:	add	x9, x9, #0x10
 88c:	mov	w8, #0x1                   	// #1
 890:	cmp	x0, x9
 894:	str	x8, [x19]
 898:	b.eq	8a0 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x120>  // b.none
 89c:	bl	0 <free>
 8a0:	ldp	x20, x19, [sp, #96]
 8a4:	ldp	x22, x21, [sp, #80]
 8a8:	ldr	x23, [sp, #64]
 8ac:	ldp	x29, x30, [sp, #48]
 8b0:	add	sp, sp, #0x70
 8b4:	ret
 8b8:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 8bc:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 8c0:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 8c4:	add	x0, x0, #0x0
 8c8:	add	x1, x1, #0x0
 8cc:	add	x3, x3, #0x0
 8d0:	mov	w2, #0x95                  	// #149
 8d4:	bl	0 <__assert_fail>
 8d8:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 8dc:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 8e0:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 8e4:	add	x0, x0, #0x0
 8e8:	add	x1, x1, #0x0
 8ec:	add	x3, x3, #0x0
 8f0:	mov	w2, #0x43                  	// #67
 8f4:	bl	0 <__assert_fail>

00000000000008f8 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE>:
 8f8:	sub	sp, sp, #0x40
 8fc:	stp	x29, x30, [sp, #16]
 900:	stp	x22, x21, [sp, #32]
 904:	stp	x20, x19, [sp, #48]
 908:	add	x29, sp, #0x10
 90c:	ldr	x8, [x1, #8]
 910:	ldp	w10, w11, [x0, #64]
 914:	ldr	x9, [x8]
 918:	ldr	w8, [x9, #316]
 91c:	cmp	w10, w8
 920:	csel	w12, w10, w8, cc  // cc = lo, ul, last
 924:	cmp	w12, w11
 928:	b.hi	944 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x4c>  // b.pmore
 92c:	mov	x19, x1
 930:	mov	x20, x0
 934:	cmp	w11, w10
 938:	b.eq	94c <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x54>  // b.none
 93c:	ldrb	w9, [x9, #327]
 940:	cbz	w9, 94c <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x54>
 944:	mov	w0, wzr
 948:	b	9f4 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0xfc>
 94c:	ldr	x9, [x20, #104]
 950:	ldp	w10, w9, [x9, #16]
 954:	cmp	w10, w8
 958:	csel	w8, w10, w8, cc  // cc = lo, ul, last
 95c:	cmp	w8, #0x0
 960:	csinc	w8, w8, wzr, ne  // ne = any
 964:	cmp	w9, w8
 968:	b.cs	9b8 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0xc0>  // b.hs, b.nlast
 96c:	mov	w8, #0x2                   	// #2
 970:	str	w8, [sp]
 974:	str	x19, [sp, #8]
 978:	ldr	x21, [x20, #40]
 97c:	add	x22, x20, #0x18
 980:	cmp	x21, x22
 984:	b.eq	9b0 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0xb8>  // b.none
 988:	ldr	x0, [x21, #32]
 98c:	mov	x1, sp
 990:	ldr	x8, [x0]
 994:	ldr	x8, [x8, #24]
 998:	blr	x8
 99c:	mov	x0, x21
 9a0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 9a4:	mov	x21, x0
 9a8:	cmp	x0, x22
 9ac:	b.ne	988 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x90>  // b.any
 9b0:	mov	w21, wzr
 9b4:	b	9bc <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0xc4>
 9b8:	mov	w21, #0x1                   	// #1
 9bc:	mov	x0, x20
 9c0:	mov	x1, x19
 9c4:	bl	190 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>
 9c8:	ldr	x8, [x20, #8]
 9cc:	and	w20, w21, w0
 9d0:	cbz	x8, 9ec <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0xf4>
 9d4:	ldr	x9, [x8]
 9d8:	mov	x0, x8
 9dc:	mov	x1, x19
 9e0:	ldr	x9, [x9, #16]
 9e4:	blr	x9
 9e8:	b	9f0 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0xf8>
 9ec:	mov	w0, wzr
 9f0:	and	w0, w20, w0
 9f4:	ldp	x20, x19, [sp, #48]
 9f8:	ldp	x22, x21, [sp, #32]
 9fc:	ldp	x29, x30, [sp, #16]
 a00:	add	sp, sp, #0x40
 a04:	ret

0000000000000a08 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE>:
 a08:	sub	sp, sp, #0x50
 a0c:	stp	x29, x30, [sp, #16]
 a10:	str	x23, [sp, #32]
 a14:	stp	x22, x21, [sp, #48]
 a18:	stp	x20, x19, [sp, #64]
 a1c:	add	x29, sp, #0x10
 a20:	ldr	x9, [x1, #8]
 a24:	ldr	x10, [x0, #104]
 a28:	mov	x20, x1
 a2c:	mov	x19, x0
 a30:	ldr	x9, [x9]
 a34:	ldp	w11, w10, [x10, #16]
 a38:	mov	x21, x8
 a3c:	ldr	w9, [x9, #316]
 a40:	cmp	w11, w9
 a44:	csel	w9, w11, w9, cc  // cc = lo, ul, last
 a48:	cmp	w9, #0x0
 a4c:	csinc	w9, w9, wzr, ne  // ne = any
 a50:	cmp	w10, w9
 a54:	b.cs	aa4 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x9c>  // b.hs, b.nlast
 a58:	mov	w8, #0x2                   	// #2
 a5c:	str	w8, [sp]
 a60:	str	x20, [sp, #8]
 a64:	ldr	x22, [x19, #40]
 a68:	add	x23, x19, #0x18
 a6c:	cmp	x22, x23
 a70:	b.eq	a9c <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x94>  // b.none
 a74:	ldr	x0, [x22, #32]
 a78:	mov	x1, sp
 a7c:	ldr	x8, [x0]
 a80:	ldr	x8, [x8, #24]
 a84:	blr	x8
 a88:	mov	x0, x22
 a8c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 a90:	mov	x22, x0
 a94:	cmp	x0, x23
 a98:	b.ne	a74 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x6c>  // b.any
 a9c:	mov	w22, wzr
 aa0:	b	aa8 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0xa0>
 aa4:	mov	w22, #0x1                   	// #1
 aa8:	mov	x0, x19
 aac:	mov	x1, x20
 ab0:	bl	190 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>
 ab4:	ldr	x8, [x19, #8]
 ab8:	cbz	x8, b08 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x100>
 abc:	ldr	x9, [x8]
 ac0:	and	w22, w22, w0
 ac4:	mov	x0, x8
 ac8:	mov	x1, x20
 acc:	ldr	x9, [x9, #16]
 ad0:	blr	x9
 ad4:	cmp	w22, #0x1
 ad8:	b.ne	b08 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x100>  // b.any
 adc:	tbz	w0, #0, b08 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x100>
 ae0:	ldp	x1, x2, [x20]
 ae4:	mov	x8, x21
 ae8:	mov	x0, x19
 aec:	bl	478 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE>
 af0:	ldp	x20, x19, [sp, #64]
 af4:	ldp	x22, x21, [sp, #48]
 af8:	ldr	x23, [sp, #32]
 afc:	ldp	x29, x30, [sp, #16]
 b00:	add	sp, sp, #0x50
 b04:	ret
 b08:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 b0c:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 b10:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 b14:	add	x0, x0, #0x0
 b18:	add	x1, x1, #0x0
 b1c:	add	x3, x3, #0x0
 b20:	mov	w2, #0xb0                  	// #176
 b24:	bl	0 <__assert_fail>

0000000000000b28 <_ZNK4llvm3mca13DispatchStage4dumpEv>:
 b28:	stp	x29, x30, [sp, #-32]!
 b2c:	str	x19, [sp, #16]
 b30:	mov	x29, sp
 b34:	mov	x19, x0
 b38:	ldr	x0, [x0, #112]
 b3c:	bl	0 <_ZNK4llvm3mca12RegisterFile4dumpEv>
 b40:	ldr	x0, [x19, #104]
 b44:	ldr	x19, [sp, #16]
 b48:	ldp	x29, x30, [sp], #32
 b4c:	b	0 <_ZNK4llvm3mca17RetireControlUnit4dumpEv>

Disassembly of section .text._ZN4llvm3mca13DispatchStageD0Ev:

0000000000000000 <_ZN4llvm3mca13DispatchStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca13DispatchStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca13DispatchStage17hasWorkToCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

EntryStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>:
   0:	ldr	x8, [x0, #72]
   4:	cmp	x8, #0x0
   8:	cset	w0, ne  // ne = any
   c:	ret

0000000000000010 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE>:
  10:	ldr	x8, [x0, #72]
  14:	cbz	x8, 34 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE+0x24>
  18:	ldr	x8, [x0, #8]
  1c:	cbz	x8, 34 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE+0x24>
  20:	ldr	x9, [x8]
  24:	add	x1, x0, #0x40
  28:	mov	x0, x8
  2c:	ldr	x2, [x9, #16]
  30:	br	x2
  34:	mov	w0, wzr
  38:	ret

000000000000003c <_ZN4llvm3mca10EntryStage18getNextInstructionEv>:
  3c:	str	d8, [sp, #-64]!
  40:	stp	x29, x30, [sp, #16]
  44:	stp	x22, x21, [sp, #32]
  48:	stp	x20, x19, [sp, #48]
  4c:	mov	x29, sp
  50:	ldr	x8, [x0, #72]
  54:	cbnz	x8, 16c <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x130>
  58:	ldr	x8, [x0, #224]
  5c:	mov	x19, x0
  60:	ldp	w21, w10, [x8, #16]
  64:	ldr	x9, [x8, #8]
  68:	mul	x10, x9, x10
  6c:	cmp	x10, x21
  70:	b.ls	144 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x108>  // b.plast
  74:	ldr	x8, [x8]
  78:	udiv	x10, x21, x9
  7c:	msub	x9, x10, x9, x21
  80:	mov	w0, #0x350                 	// #848
  84:	ldr	x22, [x8, x9, lsl #3]
  88:	bl	0 <_Znwm>
  8c:	adrp	x11, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
  90:	ldr	x8, [x22]
  94:	ldrb	w9, [x22, #8]
  98:	ldr	d8, [x11]
  9c:	mov	x20, x0
  a0:	add	x10, x0, #0x20
  a4:	strb	w9, [x0, #8]
  a8:	str	x8, [x0]
  ac:	str	x10, [x0, #16]!
  b0:	str	d8, [x20, #24]
  b4:	ldr	w8, [x22, #24]
  b8:	cbz	w8, c4 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x88>
  bc:	add	x1, x22, #0x10
  c0:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
  c4:	add	x8, x20, #0x250
  c8:	str	x8, [x20, #576]
  cc:	str	d8, [x20, #584]
  d0:	ldr	w8, [x22, #584]
  d4:	cbz	w8, e4 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0xa8>
  d8:	add	x0, x20, #0x240
  dc:	add	x1, x22, #0x240
  e0:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
  e4:	add	x9, x22, #0x310
  e8:	ldp	q0, q1, [x22, #784]
  ec:	ldur	q2, [x9, #41]
  f0:	ldr	q3, [x22, #816]
  f4:	add	x8, x20, #0x310
  f8:	stp	q0, q1, [x20, #784]
  fc:	stur	q2, [x8, #41]
 100:	str	q3, [x20, #816]
 104:	ldp	w8, w9, [x19, #88]
 108:	str	w21, [x19, #64]
 10c:	add	x21, x19, #0x50
 110:	str	x20, [x19, #72]
 114:	cmp	w8, w9
 118:	b.cs	158 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x11c>  // b.hs, b.nlast
 11c:	ldr	x10, [x21]
 120:	cmp	w8, w9
 124:	str	x20, [x10, w8, uxtw #3]
 128:	b.cs	18c <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x150>  // b.hs, b.nlast
 12c:	ldr	x9, [x19, #224]
 130:	add	w8, w8, #0x1
 134:	str	w8, [x19, #88]
 138:	ldr	w8, [x9, #16]
 13c:	add	w8, w8, #0x1
 140:	str	w8, [x9, #16]
 144:	ldp	x20, x19, [sp, #48]
 148:	ldp	x22, x21, [sp, #32]
 14c:	ldp	x29, x30, [sp, #16]
 150:	ldr	d8, [sp], #64
 154:	ret
 158:	mov	x0, x21
 15c:	mov	x1, xzr
 160:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 164:	ldp	w8, w9, [x19, #88]
 168:	b	11c <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0xe0>
 16c:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 170:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 174:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x20                  	// #32
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 190:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 194:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x43                  	// #67
 1a8:	bl	0 <__assert_fail>

00000000000001ac <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE>:
 1ac:	stp	x29, x30, [sp, #-48]!
 1b0:	str	x21, [sp, #16]
 1b4:	stp	x20, x19, [sp, #32]
 1b8:	mov	x29, sp
 1bc:	ldr	x9, [x0, #72]
 1c0:	cbz	x9, 268 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0xbc>
 1c4:	mov	x20, x0
 1c8:	ldr	x0, [x0, #8]
 1cc:	cbz	x0, 248 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0x9c>
 1d0:	mov	x19, x8
 1d4:	ldr	x8, [x0]
 1d8:	add	x21, x20, #0x40
 1dc:	mov	x1, x21
 1e0:	ldr	x8, [x8, #16]
 1e4:	blr	x8
 1e8:	tbz	w0, #0, 248 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0x9c>
 1ec:	ldr	x0, [x20, #8]
 1f0:	mov	x1, x21
 1f4:	ldr	x8, [x0]
 1f8:	ldr	x9, [x8, #48]
 1fc:	mov	x8, x19
 200:	blr	x9
 204:	ldr	x8, [x19]
 208:	tst	x8, #0xfffffffffffffffe
 20c:	and	x9, x8, #0xfffffffffffffffe
 210:	cset	w8, ne  // ne = any
 214:	orr	x8, x9, x8
 218:	str	x8, [x19]
 21c:	cbnz	x9, 238 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0x8c>
 220:	cbnz	x8, 288 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0xdc>
 224:	mov	x0, x20
 228:	str	xzr, [x20, #72]
 22c:	bl	3c <_ZN4llvm3mca10EntryStage18getNextInstructionEv>
 230:	mov	w8, #0x1                   	// #1
 234:	str	x8, [x19]
 238:	ldp	x20, x19, [sp, #32]
 23c:	ldr	x21, [sp, #16]
 240:	ldp	x29, x30, [sp], #48
 244:	ret
 248:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 24c:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 250:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 254:	add	x0, x0, #0x0
 258:	add	x1, x1, #0x0
 25c:	add	x3, x3, #0x0
 260:	mov	w2, #0x47                  	// #71
 264:	bl	0 <__assert_fail>
 268:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 26c:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 270:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 274:	add	x0, x0, #0x0
 278:	add	x1, x1, #0x0
 27c:	add	x3, x3, #0x0
 280:	mov	w2, #0x2b                  	// #43
 284:	bl	0 <__assert_fail>
 288:	mov	x0, x19
 28c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000290 <_ZN4llvm3mca10EntryStage10cycleStartEv>:
 290:	stp	x29, x30, [sp, #-32]!
 294:	str	x19, [sp, #16]
 298:	mov	x29, sp
 29c:	ldr	x9, [x0, #72]
 2a0:	mov	x19, x8
 2a4:	cbnz	x9, 2ac <_ZN4llvm3mca10EntryStage10cycleStartEv+0x1c>
 2a8:	bl	3c <_ZN4llvm3mca10EntryStage18getNextInstructionEv>
 2ac:	mov	w8, #0x1                   	// #1
 2b0:	str	x8, [x19]
 2b4:	ldr	x19, [sp, #16]
 2b8:	ldp	x29, x30, [sp], #32
 2bc:	ret

00000000000002c0 <_ZN4llvm3mca10EntryStage8cycleEndEv>:
 2c0:	stp	x29, x30, [sp, #-32]!
 2c4:	stp	x20, x19, [sp, #16]
 2c8:	mov	x29, sp
 2cc:	ldr	w10, [x0, #232]
 2d0:	ldr	w9, [x0, #88]
 2d4:	cmp	w9, w10
 2d8:	b.ls	404 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x144>  // b.plast
 2dc:	mov	x19, x0
 2e0:	add	x0, x0, #0x50
 2e4:	ldr	x1, [x0]
 2e8:	mov	x20, x8
 2ec:	add	x2, x1, x10, lsl #3
 2f0:	add	x8, x1, x9, lsl #3
 2f4:	sub	x10, x8, x2
 2f8:	cmp	x10, #0x20
 2fc:	b.lt	35c <_ZN4llvm3mca10EntryStage8cycleEndEv+0x9c>  // b.tstop
 300:	lsr	x10, x10, #5
 304:	add	x10, x10, #0x1
 308:	ldr	x11, [x2]
 30c:	ldr	w11, [x11, #784]
 310:	cmp	w11, #0x6
 314:	b.ne	3cc <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>  // b.any
 318:	ldr	x11, [x2, #8]
 31c:	ldr	w11, [x11, #784]
 320:	cmp	w11, #0x6
 324:	b.ne	3b8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xf8>  // b.any
 328:	ldr	x11, [x2, #16]
 32c:	ldr	w11, [x11, #784]
 330:	cmp	w11, #0x6
 334:	b.ne	3c0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x100>  // b.any
 338:	ldr	x11, [x2, #24]
 33c:	ldr	w11, [x11, #784]
 340:	cmp	w11, #0x6
 344:	b.ne	3c8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x108>  // b.any
 348:	sub	x10, x10, #0x1
 34c:	cmp	x10, #0x1
 350:	add	x2, x2, #0x20
 354:	b.gt	308 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x48>
 358:	sub	x10, x8, x2
 35c:	asr	x10, x10, #3
 360:	cmp	x10, #0x1
 364:	b.eq	3a0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xe0>  // b.none
 368:	cmp	x10, #0x2
 36c:	b.eq	38c <_ZN4llvm3mca10EntryStage8cycleEndEv+0xcc>  // b.none
 370:	cmp	x10, #0x3
 374:	b.ne	3b0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xf0>  // b.any
 378:	ldr	x10, [x2]
 37c:	ldr	w10, [x10, #784]
 380:	cmp	w10, #0x6
 384:	b.ne	3cc <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>  // b.any
 388:	add	x2, x2, #0x8
 38c:	ldr	x10, [x2]
 390:	ldr	w10, [x10, #784]
 394:	cmp	w10, #0x6
 398:	b.ne	3cc <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>  // b.any
 39c:	add	x2, x2, #0x8
 3a0:	ldr	x10, [x2]
 3a4:	ldr	w10, [x10, #784]
 3a8:	cmp	w10, #0x6
 3ac:	b.ne	3cc <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>  // b.any
 3b0:	mov	x2, x8
 3b4:	b	3cc <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>
 3b8:	add	x2, x2, #0x8
 3bc:	b	3cc <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>
 3c0:	add	x2, x2, #0x10
 3c4:	b	3cc <_ZN4llvm3mca10EntryStage8cycleEndEv+0x10c>
 3c8:	add	x2, x2, #0x18
 3cc:	sub	x8, x2, x1
 3d0:	lsr	x10, x8, #3
 3d4:	lsr	x8, x8, #2
 3d8:	and	x8, x8, #0xfffffffe
 3dc:	cmp	x8, x9
 3e0:	str	w10, [x19, #232]
 3e4:	b.cc	3f0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x130>  // b.lo, b.ul, b.last
 3e8:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3ec:	str	wzr, [x19, #232]
 3f0:	mov	w8, #0x1                   	// #1
 3f4:	str	x8, [x20]
 3f8:	ldp	x20, x19, [sp, #16]
 3fc:	ldp	x29, x30, [sp], #32
 400:	ret
 404:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 408:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 40c:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 410:	add	x0, x0, #0x0
 414:	add	x1, x1, #0x0
 418:	add	x3, x3, #0x0
 41c:	mov	w2, #0x95                  	// #149
 420:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldr	x8, [x0]
  20:	cmp	x8, x1
  24:	b.hi	1e4 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x1e4>  // b.pmore
  28:	mov	x20, x1
  2c:	mov	x21, x2
  30:	cmp	x1, x2
  34:	b.hi	204 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x204>  // b.pmore
  38:	ldr	w9, [x0, #8]
  3c:	mov	x19, x0
  40:	add	x10, x8, x9, lsl #3
  44:	subs	x10, x10, x21
  48:	b.cc	224 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x224>  // b.lo, b.ul, b.last
  4c:	cmp	x10, #0x1
  50:	b.lt	108 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x108>  // b.tstop
  54:	lsr	x25, x10, #3
  58:	mov	x24, x20
  5c:	b	78 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x78>
  60:	mov	x0, x22
  64:	bl	0 <_ZdlPv>
  68:	add	x21, x21, #0x8
  6c:	subs	x25, x25, #0x1
  70:	add	x24, x24, #0x8
  74:	b.le	fc <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xfc>
  78:	ldr	x8, [x21]
  7c:	str	xzr, [x21]
  80:	ldr	x22, [x24]
  84:	str	x8, [x24]
  88:	cbz	x22, 68 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x68>
  8c:	ldr	x0, [x22, #576]
  90:	add	x8, x22, #0x250
  94:	cmp	x0, x8
  98:	b.eq	a0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xa0>  // b.none
  9c:	bl	0 <free>
  a0:	mov	x26, x22
  a4:	ldr	x23, [x26, #16]!
  a8:	ldr	w8, [x26, #8]
  ac:	cbz	w8, e4 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xe4>
  b0:	add	x8, x8, x8, lsl #4
  b4:	lsl	x27, x8, #3
  b8:	b	c4 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xc4>
  bc:	subs	x27, x27, #0x88
  c0:	b.eq	e0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xe0>  // b.none
  c4:	add	x8, x23, x27
  c8:	ldur	x0, [x8, #-80]
  cc:	sub	x8, x8, #0x40
  d0:	cmp	x8, x0
  d4:	b.eq	bc <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xbc>  // b.none
  d8:	bl	0 <free>
  dc:	b	bc <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0xbc>
  e0:	ldr	x23, [x26]
  e4:	add	x8, x26, #0x10
  e8:	cmp	x23, x8
  ec:	b.eq	60 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x60>  // b.none
  f0:	mov	x0, x23
  f4:	bl	0 <free>
  f8:	b	60 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x60>
  fc:	ldr	x8, [x19]
 100:	ldr	w9, [x19, #8]
 104:	b	10c <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x10c>
 108:	mov	x24, x20
 10c:	add	x23, x8, x9, lsl #3
 110:	cmp	x23, x24
 114:	b.ne	130 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x130>  // b.any
 118:	b	1ac <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x1ac>
 11c:	mov	x0, x21
 120:	bl	0 <_ZdlPv>
 124:	cmp	x23, x24
 128:	str	xzr, [x23]
 12c:	b.eq	1a8 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x1a8>  // b.none
 130:	ldr	x21, [x23, #-8]!
 134:	cbz	x21, 124 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x124>
 138:	ldr	x0, [x21, #576]
 13c:	add	x8, x21, #0x250
 140:	cmp	x0, x8
 144:	b.eq	14c <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x14c>  // b.none
 148:	bl	0 <free>
 14c:	mov	x25, x21
 150:	ldr	x22, [x25, #16]!
 154:	ldr	w8, [x25, #8]
 158:	cbz	w8, 190 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x190>
 15c:	add	x8, x8, x8, lsl #4
 160:	lsl	x26, x8, #3
 164:	b	170 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x170>
 168:	subs	x26, x26, #0x88
 16c:	b.eq	18c <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x18c>  // b.none
 170:	add	x8, x22, x26
 174:	ldur	x0, [x8, #-80]
 178:	sub	x8, x8, #0x40
 17c:	cmp	x8, x0
 180:	b.eq	168 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x168>  // b.none
 184:	bl	0 <free>
 188:	b	168 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x168>
 18c:	ldr	x22, [x25]
 190:	add	x8, x25, #0x10
 194:	cmp	x22, x8
 198:	b.eq	11c <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x11c>  // b.none
 19c:	mov	x0, x22
 1a0:	bl	0 <free>
 1a4:	b	11c <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x11c>
 1a8:	ldr	x8, [x19]
 1ac:	ldr	w9, [x19, #12]
 1b0:	sub	x8, x24, x8
 1b4:	cmp	x9, x8, asr #3
 1b8:	b.cc	244 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_+0x244>  // b.lo, b.ul, b.last
 1bc:	lsr	x8, x8, #3
 1c0:	str	w8, [x19, #8]
 1c4:	mov	x0, x20
 1c8:	ldp	x20, x19, [sp, #80]
 1cc:	ldp	x22, x21, [sp, #64]
 1d0:	ldp	x24, x23, [sp, #48]
 1d4:	ldp	x26, x25, [sp, #32]
 1d8:	ldr	x27, [sp, #16]
 1dc:	ldp	x29, x30, [sp], #96
 1e0:	ret
 1e4:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 1e8:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 1ec:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 1f0:	add	x0, x0, #0x0
 1f4:	add	x1, x1, #0x0
 1f8:	add	x3, x3, #0x0
 1fc:	mov	w2, #0x1c6                 	// #454
 200:	bl	0 <__assert_fail>
 204:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 208:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 20c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 210:	add	x0, x0, #0x0
 214:	add	x1, x1, #0x0
 218:	add	x3, x3, #0x0
 21c:	mov	w2, #0x1c7                 	// #455
 220:	bl	0 <__assert_fail>
 224:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 228:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 22c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 230:	add	x0, x0, #0x0
 234:	add	x1, x1, #0x0
 238:	add	x3, x3, #0x0
 23c:	mov	w2, #0x1c8                 	// #456
 240:	bl	0 <__assert_fail>
 244:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 248:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 24c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EEE5eraseEPKS6_S9_>
 250:	add	x0, x0, #0x0
 254:	add	x1, x1, #0x0
 258:	add	x3, x3, #0x0
 25c:	mov	w2, #0x43                  	// #67
 260:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca10EntryStageD2Ev:

0000000000000000 <_ZN4llvm3mca10EntryStageD2Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	adrp	x8, 0 <_ZN4llvm3mca10EntryStageD2Ev>
  1c:	ldr	x8, [x8]
  20:	mov	x23, x0
  24:	mov	x19, x0
  28:	add	x8, x8, #0x10
  2c:	str	x8, [x0]
  30:	ldr	x20, [x23, #80]!
  34:	ldr	w8, [x0, #88]
  38:	cbz	w8, d4 <_ZN4llvm3mca10EntryStageD2Ev+0xd4>
  3c:	add	x24, x20, x8, lsl #3
  40:	b	58 <_ZN4llvm3mca10EntryStageD2Ev+0x58>
  44:	mov	x0, x21
  48:	bl	0 <_ZdlPv>
  4c:	cmp	x24, x20
  50:	str	xzr, [x24]
  54:	b.eq	d0 <_ZN4llvm3mca10EntryStageD2Ev+0xd0>  // b.none
  58:	ldr	x21, [x24, #-8]!
  5c:	cbz	x21, 4c <_ZN4llvm3mca10EntryStageD2Ev+0x4c>
  60:	ldr	x0, [x21, #576]
  64:	add	x8, x21, #0x250
  68:	cmp	x0, x8
  6c:	b.eq	74 <_ZN4llvm3mca10EntryStageD2Ev+0x74>  // b.none
  70:	bl	0 <free>
  74:	mov	x25, x21
  78:	ldr	x22, [x25, #16]!
  7c:	ldr	w8, [x25, #8]
  80:	cbz	w8, b8 <_ZN4llvm3mca10EntryStageD2Ev+0xb8>
  84:	add	x8, x8, x8, lsl #4
  88:	lsl	x26, x8, #3
  8c:	b	98 <_ZN4llvm3mca10EntryStageD2Ev+0x98>
  90:	subs	x26, x26, #0x88
  94:	b.eq	b4 <_ZN4llvm3mca10EntryStageD2Ev+0xb4>  // b.none
  98:	add	x8, x22, x26
  9c:	ldur	x0, [x8, #-80]
  a0:	sub	x8, x8, #0x40
  a4:	cmp	x8, x0
  a8:	b.eq	90 <_ZN4llvm3mca10EntryStageD2Ev+0x90>  // b.none
  ac:	bl	0 <free>
  b0:	b	90 <_ZN4llvm3mca10EntryStageD2Ev+0x90>
  b4:	ldr	x22, [x25]
  b8:	add	x8, x25, #0x10
  bc:	cmp	x22, x8
  c0:	b.eq	44 <_ZN4llvm3mca10EntryStageD2Ev+0x44>  // b.none
  c4:	mov	x0, x22
  c8:	bl	0 <free>
  cc:	b	44 <_ZN4llvm3mca10EntryStageD2Ev+0x44>
  d0:	ldr	x20, [x23]
  d4:	add	x8, x23, #0x10
  d8:	cmp	x20, x8
  dc:	b.eq	e8 <_ZN4llvm3mca10EntryStageD2Ev+0xe8>  // b.none
  e0:	mov	x0, x20
  e4:	bl	0 <free>
  e8:	mov	x0, x19
  ec:	ldp	x20, x19, [sp, #64]
  f0:	ldp	x22, x21, [sp, #48]
  f4:	ldp	x24, x23, [sp, #32]
  f8:	ldp	x26, x25, [sp, #16]
  fc:	ldp	x29, x30, [sp], #80
 100:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca10EntryStageD0Ev:

0000000000000000 <_ZN4llvm3mca10EntryStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca10EntryStageD0Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>:
   0:	str	d8, [sp, #-80]!
   4:	stp	x29, x30, [sp, #8]
   8:	str	x25, [sp, #24]
   c:	stp	x24, x23, [sp, #32]
  10:	stp	x22, x21, [sp, #48]
  14:	stp	x20, x19, [sp, #64]
  18:	mov	x29, sp
  1c:	mov	x19, x0
  20:	cmp	x0, x1
  24:	b.eq	1f4 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x1f4>  // b.none
  28:	ldr	w20, [x1, #8]
  2c:	ldr	w22, [x19, #8]
  30:	mov	x21, x1
  34:	cmp	w22, w20
  38:	b.cs	80 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x80>  // b.hs, b.nlast
  3c:	ldr	w8, [x19, #12]
  40:	cmp	w8, w20
  44:	b.cs	d8 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xd8>  // b.hs, b.nlast
  48:	cbz	w22, 124 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x124>
  4c:	ldr	x23, [x19]
  50:	add	x8, x22, x22, lsl #4
  54:	lsl	x22, x8, #3
  58:	b	64 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x64>
  5c:	subs	x22, x22, #0x88
  60:	b.eq	124 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x124>  // b.none
  64:	add	x8, x23, x22
  68:	ldur	x0, [x8, #-80]
  6c:	sub	x8, x8, #0x40
  70:	cmp	x8, x0
  74:	b.eq	5c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x5c>  // b.none
  78:	bl	0 <free>
  7c:	b	5c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x5c>
  80:	ldr	x23, [x19]
  84:	cbz	w20, 1d0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x1d0>
  88:	ldr	x21, [x21]
  8c:	add	x22, x20, #0x1
  90:	ldp	q2, q0, [x21, #16]
  94:	ldr	x8, [x21, #48]
  98:	ldr	q1, [x21]
  9c:	add	x0, x23, #0x38
  a0:	add	x1, x21, #0x38
  a4:	str	x8, [x23, #48]
  a8:	stp	q2, q0, [x23, #16]
  ac:	str	q1, [x23]
  b0:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
  b4:	sub	x22, x22, #0x1
  b8:	add	x23, x23, #0x88
  bc:	cmp	x22, #0x1
  c0:	add	x21, x21, #0x88
  c4:	b.gt	90 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x90>
  c8:	mov	x21, x23
  cc:	ldr	x23, [x19]
  d0:	ldr	w22, [x19, #8]
  d4:	b	1d4 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x1d4>
  d8:	cbz	w22, 134 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x134>
  dc:	ldr	x23, [x21]
  e0:	ldr	x24, [x19]
  e4:	add	x25, x22, #0x1
  e8:	ldp	q2, q0, [x23, #16]
  ec:	ldr	x8, [x23, #48]
  f0:	ldr	q1, [x23]
  f4:	add	x0, x24, #0x38
  f8:	add	x1, x23, #0x38
  fc:	str	x8, [x24, #48]
 100:	stp	q2, q0, [x24, #16]
 104:	str	q1, [x24]
 108:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 10c:	sub	x25, x25, #0x1
 110:	add	x24, x24, #0x88
 114:	cmp	x25, #0x1
 118:	add	x23, x23, #0x88
 11c:	b.gt	e8 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xe8>
 120:	b	138 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x138>
 124:	mov	x0, x19
 128:	mov	x1, x20
 12c:	str	wzr, [x19, #8]
 130:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 134:	mov	x22, xzr
 138:	ldr	w8, [x21, #8]
 13c:	cmp	x22, x8
 140:	b.eq	1e4 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x1e4>  // b.none
 144:	ldr	x9, [x21]
 148:	ldr	x11, [x19]
 14c:	adrp	x13, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 150:	add	x12, x22, x22, lsl #4
 154:	ldr	d8, [x13]
 158:	mov	w10, #0x88                  	// #136
 15c:	lsl	x12, x12, #3
 160:	madd	x23, x8, x10, x9
 164:	add	x8, x11, x12
 168:	add	x9, x9, x12
 16c:	add	x21, x8, #0x38
 170:	add	x22, x9, #0x38
 174:	b	18c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x18c>
 178:	add	x8, x24, #0x88
 17c:	add	x21, x21, #0x88
 180:	cmp	x8, x23
 184:	add	x22, x22, #0x88
 188:	b.eq	1e4 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x1e4>  // b.none
 18c:	ldur	q0, [x22, #-56]
 190:	ldur	q1, [x22, #-40]
 194:	ldur	x8, [x22, #-8]
 198:	ldur	q2, [x22, #-24]
 19c:	add	x9, x21, #0x10
 1a0:	stur	q1, [x21, #-40]
 1a4:	stp	x8, x9, [x21, #-8]
 1a8:	stur	q2, [x21, #-24]
 1ac:	stur	q0, [x21, #-56]
 1b0:	str	d8, [x21, #8]
 1b4:	ldr	w8, [x22, #8]
 1b8:	sub	x24, x22, #0x38
 1bc:	cbz	w8, 178 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x178>
 1c0:	mov	x0, x21
 1c4:	mov	x1, x22
 1c8:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 1cc:	b	178 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x178>
 1d0:	mov	x21, x23
 1d4:	mov	w8, #0x88                  	// #136
 1d8:	madd	x8, x22, x8, x23
 1dc:	cmp	x8, x21
 1e0:	b.ne	220 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x220>  // b.any
 1e4:	ldr	w8, [x19, #12]
 1e8:	cmp	w8, w20
 1ec:	b.cc	23c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x23c>  // b.lo, b.ul, b.last
 1f0:	str	w20, [x19, #8]
 1f4:	mov	x0, x19
 1f8:	ldp	x20, x19, [sp, #64]
 1fc:	ldp	x22, x21, [sp, #48]
 200:	ldp	x24, x23, [sp, #32]
 204:	ldr	x25, [sp, #24]
 208:	ldp	x29, x30, [sp, #8]
 20c:	ldr	d8, [sp], #80
 210:	ret
 214:	cmp	x21, x22
 218:	mov	x8, x22
 21c:	b.eq	1e4 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x1e4>  // b.none
 220:	ldur	x0, [x8, #-80]
 224:	sub	x9, x8, #0x40
 228:	sub	x22, x8, #0x88
 22c:	cmp	x9, x0
 230:	b.eq	214 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x214>  // b.none
 234:	bl	0 <free>
 238:	b	214 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x214>
 23c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 240:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 244:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 248:	add	x0, x0, #0x0
 24c:	add	x1, x1, #0x0
 250:	add	x3, x3, #0x0
 254:	mov	w2, #0x43                  	// #67
 258:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>:
   0:	str	d8, [sp, #-80]!
   4:	stp	x29, x30, [sp, #8]
   8:	str	x25, [sp, #24]
   c:	stp	x24, x23, [sp, #32]
  10:	stp	x22, x21, [sp, #48]
  14:	stp	x20, x19, [sp, #64]
  18:	mov	x29, sp
  1c:	mov	x20, x1
  20:	lsr	x8, x1, #32
  24:	mov	x19, x0
  28:	cbz	x8, 3c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x3c>
  2c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  30:	add	x0, x0, #0x0
  34:	mov	w1, #0x1                   	// #1
  38:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  3c:	ldr	w8, [x19, #12]
  40:	add	x8, x8, #0x2
  44:	orr	x8, x8, x8, lsr #1
  48:	orr	x8, x8, x8, lsr #2
  4c:	orr	x8, x8, x8, lsr #4
  50:	orr	x8, x8, x8, lsr #8
  54:	orr	x8, x8, x8, lsr #16
  58:	orr	x8, x8, x8, lsr #32
  5c:	add	x9, x8, #0x1
  60:	cmp	x9, x20
  64:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  68:	mov	w9, #0xffffffff            	// #-1
  6c:	cmp	x8, x9
  70:	csel	x23, x8, x9, cc  // cc = lo, ul, last
  74:	add	x8, x23, x23, lsl #4
  78:	lsl	x0, x8, #3
  7c:	bl	0 <malloc>
  80:	mov	x20, x0
  84:	cbnz	x0, c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xc4>
  88:	cbz	x23, a4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xa4>
  8c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  90:	add	x0, x0, #0x0
  94:	mov	w1, #0x1                   	// #1
  98:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  9c:	mov	x20, xzr
  a0:	b	c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xc4>
  a4:	mov	w0, #0x1                   	// #1
  a8:	bl	0 <malloc>
  ac:	mov	x20, x0
  b0:	cbnz	x0, c4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xc4>
  b4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  b8:	add	x0, x0, #0x0
  bc:	mov	w1, #0x1                   	// #1
  c0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  c4:	ldr	w8, [x19, #8]
  c8:	ldr	x21, [x19]
  cc:	cbz	w8, 184 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x184>
  d0:	adrp	x10, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  d4:	ldr	d8, [x10]
  d8:	mov	w9, #0x88                  	// #136
  dc:	madd	x24, x8, x9, x21
  e0:	add	x22, x20, #0x38
  e4:	add	x21, x21, #0x38
  e8:	b	100 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x100>
  ec:	add	x8, x25, #0x88
  f0:	add	x22, x22, #0x88
  f4:	cmp	x8, x24
  f8:	add	x21, x21, #0x88
  fc:	b.eq	144 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x144>  // b.none
 100:	ldur	q0, [x21, #-56]
 104:	ldur	q1, [x21, #-40]
 108:	ldur	x8, [x21, #-8]
 10c:	ldur	q2, [x21, #-24]
 110:	add	x9, x22, #0x10
 114:	stur	q1, [x22, #-40]
 118:	stp	x8, x9, [x22, #-8]
 11c:	stur	q2, [x22, #-24]
 120:	stur	q0, [x22, #-56]
 124:	str	d8, [x22, #8]
 128:	ldr	w8, [x21, #8]
 12c:	sub	x25, x21, #0x38
 130:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xec>
 134:	mov	x0, x22
 138:	mov	x1, x21
 13c:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
 140:	b	ec <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xec>
 144:	ldr	w8, [x19, #8]
 148:	ldr	x21, [x19]
 14c:	cbz	w8, 184 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x184>
 150:	add	x8, x8, x8, lsl #4
 154:	lsl	x22, x8, #3
 158:	b	164 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x164>
 15c:	subs	x22, x22, #0x88
 160:	b.eq	180 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x180>  // b.none
 164:	add	x8, x21, x22
 168:	ldur	x0, [x8, #-80]
 16c:	sub	x8, x8, #0x40
 170:	cmp	x8, x0
 174:	b.eq	15c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x15c>  // b.none
 178:	bl	0 <free>
 17c:	b	15c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x15c>
 180:	ldr	x21, [x19]
 184:	add	x8, x19, #0x10
 188:	cmp	x21, x8
 18c:	b.eq	198 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x198>  // b.none
 190:	mov	x0, x21
 194:	bl	0 <free>
 198:	str	x20, [x19]
 19c:	str	w23, [x19, #12]
 1a0:	ldp	x20, x19, [sp, #64]
 1a4:	ldp	x22, x21, [sp, #48]
 1a8:	ldp	x24, x23, [sp, #32]
 1ac:	ldr	x25, [sp, #24]
 1b0:	ldp	x29, x30, [sp, #8]
 1b4:	ldr	d8, [sp], #80
 1b8:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	120 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x120>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w8, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w8, w20
  2c:	b.cs	60 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x60>  // b.hs, b.nlast
  30:	ldr	w9, [x19, #12]
  34:	cmp	w9, w20
  38:	b.cs	98 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x98>  // b.hs, b.nlast
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	str	wzr, [x19, #8]
  48:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
  4c:	ldr	w9, [x21, #8]
  50:	mov	x8, xzr
  54:	cmp	x8, x9
  58:	b.ne	e0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xe0>  // b.any
  5c:	b	110 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x110>
  60:	cbz	w20, 110 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x110>
  64:	ldr	x8, [x21]
  68:	ldr	x9, [x19]
  6c:	add	x10, x20, #0x1
  70:	ldr	x11, [x8]
  74:	sub	x10, x10, #0x1
  78:	cmp	x10, #0x1
  7c:	str	x11, [x9]
  80:	ldr	w11, [x8, #8]
  84:	add	x8, x8, #0x10
  88:	str	w11, [x9, #8]
  8c:	add	x9, x9, #0x10
  90:	b.gt	70 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x70>
  94:	b	110 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x110>
  98:	cbz	w8, d0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xd0>
  9c:	ldr	x9, [x21]
  a0:	ldr	x10, [x19]
  a4:	add	x11, x8, #0x1
  a8:	ldr	x12, [x9]
  ac:	sub	x11, x11, #0x1
  b0:	cmp	x11, #0x1
  b4:	str	x12, [x10]
  b8:	ldr	w12, [x9, #8]
  bc:	add	x9, x9, #0x10
  c0:	str	w12, [x10, #8]
  c4:	add	x10, x10, #0x10
  c8:	b.gt	a8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xa8>
  cc:	b	d4 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xd4>
  d0:	mov	x8, xzr
  d4:	mov	x9, x20
  d8:	cmp	x8, x9
  dc:	b.eq	110 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x110>  // b.none
  e0:	ldr	x10, [x19]
  e4:	ldr	x11, [x21]
  e8:	lsl	x12, x8, #4
  ec:	lsl	x13, x9, #4
  f0:	add	x8, x10, x12
  f4:	add	x9, x11, x12
  f8:	sub	x10, x13, x12
  fc:	ldr	q0, [x9], #16
 100:	subs	x10, x10, #0x10
 104:	str	q0, [x8]
 108:	add	x8, x8, #0x10
 10c:	b.ne	fc <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xfc>  // b.any
 110:	ldr	w8, [x19, #12]
 114:	cmp	w8, w20
 118:	b.cc	134 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x134>  // b.lo, b.ul, b.last
 11c:	str	w20, [x19, #8]
 120:	mov	x0, x19
 124:	ldp	x20, x19, [sp, #32]
 128:	ldr	x21, [sp, #16]
 12c:	ldp	x29, x30, [sp], #48
 130:	ret
 134:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 138:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 13c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 140:	add	x0, x0, #0x0
 144:	add	x1, x1, #0x0
 148:	add	x3, x3, #0x0
 14c:	mov	w2, #0x43                  	// #67
 150:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	d4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xd4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	74 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x74>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x30                  	// #48
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	90 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x90>
  58:	cbz	w20, c4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xc4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	add	x8, x20, x20, lsl #1
  68:	lsl	x2, x8, #4
  6c:	bl	0 <memmove>
  70:	b	c4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xc4>
  74:	cbz	w22, 90 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x90>
  78:	ldr	x1, [x21]
  7c:	ldr	x0, [x19]
  80:	add	x8, x22, x22, lsl #1
  84:	lsl	x2, x8, #4
  88:	bl	0 <memmove>
  8c:	b	94 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x94>
  90:	mov	x22, xzr
  94:	ldr	w8, [x21, #8]
  98:	cmp	x22, x8
  9c:	b.eq	c4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xc4>  // b.none
  a0:	ldr	x9, [x21]
  a4:	ldr	x11, [x19]
  a8:	mov	w10, #0x30                  	// #48
  ac:	mov	w12, #0x30                  	// #48
  b0:	madd	x1, x22, x10, x9
  b4:	madd	x8, x8, x12, x9
  b8:	madd	x0, x22, x12, x11
  bc:	sub	x2, x8, x1
  c0:	bl	0 <memcpy>
  c4:	ldr	w8, [x19, #12]
  c8:	cmp	w8, w20
  cc:	b.cc	e8 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xe8>  // b.lo, b.ul, b.last
  d0:	str	w20, [x19, #8]
  d4:	mov	x0, x19
  d8:	ldp	x20, x19, [sp, #32]
  dc:	ldp	x22, x21, [sp, #16]
  e0:	ldp	x29, x30, [sp], #48
  e4:	ret
  e8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
  ec:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
  f0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
  f4:	add	x0, x0, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x43                  	// #67
 104:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x20, x1
  20:	lsr	x8, x1, #32
  24:	mov	x19, x0
  28:	cbz	x8, 3c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x3c>
  2c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>
  30:	add	x0, x0, #0x0
  34:	mov	w1, #0x1                   	// #1
  38:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  3c:	ldr	w8, [x19, #12]
  40:	add	x8, x8, #0x2
  44:	orr	x8, x8, x8, lsr #1
  48:	orr	x8, x8, x8, lsr #2
  4c:	orr	x8, x8, x8, lsr #4
  50:	orr	x8, x8, x8, lsr #8
  54:	orr	x8, x8, x8, lsr #16
  58:	orr	x8, x8, x8, lsr #32
  5c:	add	x9, x8, #0x1
  60:	cmp	x9, x20
  64:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  68:	mov	w9, #0xffffffff            	// #-1
  6c:	cmp	x8, x9
  70:	csel	x24, x8, x9, cc  // cc = lo, ul, last
  74:	lsl	x0, x24, #3
  78:	bl	0 <malloc>
  7c:	mov	x20, x0
  80:	cbnz	x0, c0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xc0>
  84:	cbz	x24, a0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xa0>
  88:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>
  8c:	add	x0, x0, #0x0
  90:	mov	w1, #0x1                   	// #1
  94:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  98:	mov	x20, xzr
  9c:	b	c0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xc0>
  a0:	mov	w0, #0x1                   	// #1
  a4:	bl	0 <malloc>
  a8:	mov	x20, x0
  ac:	cbnz	x0, c0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xc0>
  b0:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>
  b4:	add	x0, x0, #0x0
  b8:	mov	w1, #0x1                   	// #1
  bc:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  c0:	ldr	w8, [x19, #8]
  c4:	ldr	x21, [x19]
  c8:	cbz	w8, 188 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x188>
  cc:	lsl	x9, x8, #3
  d0:	mov	x10, x20
  d4:	ldr	x11, [x21]
  d8:	str	xzr, [x21], #8
  dc:	subs	x9, x9, #0x8
  e0:	str	x11, [x10], #8
  e4:	b.ne	d4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xd4>  // b.any
  e8:	ldr	x21, [x19]
  ec:	cbz	w8, 188 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x188>
  f0:	add	x25, x21, x8, lsl #3
  f4:	b	10c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x10c>
  f8:	mov	x0, x22
  fc:	bl	0 <_ZdlPv>
 100:	cmp	x25, x21
 104:	str	xzr, [x25]
 108:	b.eq	184 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x184>  // b.none
 10c:	ldr	x22, [x25, #-8]!
 110:	cbz	x22, 100 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x100>
 114:	ldr	x0, [x22, #576]
 118:	add	x8, x22, #0x250
 11c:	cmp	x0, x8
 120:	b.eq	128 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x128>  // b.none
 124:	bl	0 <free>
 128:	mov	x26, x22
 12c:	ldr	x23, [x26, #16]!
 130:	ldr	w8, [x26, #8]
 134:	cbz	w8, 16c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x16c>
 138:	add	x8, x8, x8, lsl #4
 13c:	lsl	x27, x8, #3
 140:	b	14c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x14c>
 144:	subs	x27, x27, #0x88
 148:	b.eq	168 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x168>  // b.none
 14c:	add	x8, x23, x27
 150:	ldur	x0, [x8, #-80]
 154:	sub	x8, x8, #0x40
 158:	cmp	x8, x0
 15c:	b.eq	144 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x144>  // b.none
 160:	bl	0 <free>
 164:	b	144 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x144>
 168:	ldr	x23, [x26]
 16c:	add	x8, x26, #0x10
 170:	cmp	x23, x8
 174:	b.eq	f8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xf8>  // b.none
 178:	mov	x0, x23
 17c:	bl	0 <free>
 180:	b	f8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xf8>
 184:	ldr	x21, [x19]
 188:	add	x8, x19, #0x10
 18c:	cmp	x21, x8
 190:	b.eq	19c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x19c>  // b.none
 194:	mov	x0, x21
 198:	bl	0 <free>
 19c:	str	x20, [x19]
 1a0:	str	w24, [x19, #12]
 1a4:	ldp	x20, x19, [sp, #80]
 1a8:	ldp	x22, x21, [sp, #64]
 1ac:	ldp	x24, x23, [sp, #48]
 1b0:	ldp	x26, x25, [sp, #32]
 1b4:	ldr	x27, [sp, #16]
 1b8:	ldp	x29, x30, [sp], #96
 1bc:	ret

ExecuteStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	mov	x29, sp
       8:	cmp	w0, #0x5
       c:	b.cs	24 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE+0x24>  // b.hs, b.nlast
      10:	adrp	x8, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
      14:	add	x8, x8, #0x0
      18:	ldr	w0, [x8, w0, sxtw #2]
      1c:	ldp	x29, x30, [sp], #16
      20:	ret
      24:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
      28:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
      2c:	add	x0, x0, #0x0
      30:	add	x1, x1, #0x0
      34:	mov	w2, #0x28                  	// #40
      38:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000003c <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE>:
      3c:	sub	sp, sp, #0x30
      40:	stp	x29, x30, [sp, #16]
      44:	stp	x20, x19, [sp, #32]
      48:	add	x29, sp, #0x10
      4c:	mov	x19, x0
      50:	ldr	x0, [x0, #64]
      54:	mov	x20, x1
      58:	bl	0 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE>
      5c:	cmp	w0, #0x4
      60:	b.hi	f0 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0xb4>  // b.pmore
      64:	adrp	x10, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
      68:	mov	w9, w0
      6c:	add	x10, x10, #0x0
      70:	adr	x11, 88 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x4c>
      74:	ldrb	w12, [x10, x9]
      78:	add	x11, x11, x12, lsl #2
      7c:	mov	w8, #0x5                   	// #5
      80:	mov	w0, #0x1                   	// #1
      84:	br	x11
      88:	mov	w8, #0x6                   	// #6
      8c:	b	9c <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x60>
      90:	mov	w8, #0x3                   	// #3
      94:	b	9c <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x60>
      98:	mov	w8, #0x4                   	// #4
      9c:	str	w8, [sp]
      a0:	str	x20, [sp, #8]
      a4:	ldr	x20, [x19, #40]
      a8:	add	x19, x19, #0x18
      ac:	cmp	x20, x19
      b0:	b.eq	dc <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0xa0>  // b.none
      b4:	ldr	x0, [x20, #32]
      b8:	mov	x1, sp
      bc:	ldr	x8, [x0]
      c0:	ldr	x8, [x8, #24]
      c4:	blr	x8
      c8:	mov	x0, x20
      cc:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
      d0:	mov	x20, x0
      d4:	cmp	x0, x19
      d8:	b.ne	b4 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x78>  // b.any
      dc:	mov	w0, wzr
      e0:	ldp	x20, x19, [sp, #32]
      e4:	ldp	x29, x30, [sp, #16]
      e8:	add	sp, sp, #0x30
      ec:	ret
      f0:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
      f4:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
      f8:	add	x0, x0, #0x0
      fc:	add	x1, x1, #0x0
     100:	mov	w2, #0x28                  	// #40
     104:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000108 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>:
     108:	sub	sp, sp, #0x150
     10c:	stp	x29, x30, [sp, #272]
     110:	str	x28, [sp, #288]
     114:	stp	x22, x21, [sp, #304]
     118:	stp	x20, x19, [sp, #320]
     11c:	add	x29, sp, #0x110
     120:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     124:	ldr	d0, [x9]
     128:	sub	x9, x29, #0x70
     12c:	add	x9, x9, #0x10
     130:	stur	x9, [x29, #-112]
     134:	add	x9, sp, #0x50
     138:	add	x9, x9, #0x10
     13c:	str	x9, [sp, #80]
     140:	mov	x9, sp
     144:	add	x9, x9, #0x10
     148:	str	x9, [sp]
     14c:	stur	d0, [x29, #-104]
     150:	str	d0, [sp, #88]
     154:	str	d0, [sp, #8]
     158:	mov	x19, x0
     15c:	ldr	x0, [x0, #64]
     160:	sub	x2, x29, #0x70
     164:	add	x3, sp, #0x50
     168:	mov	x4, sp
     16c:	mov	x21, x1
     170:	mov	x20, x8
     174:	bl	0 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_>
     178:	ldr	x22, [x21, #8]
     17c:	ldr	w9, [x19, #76]
     180:	mov	x0, x19
     184:	mov	x1, x21
     188:	ldr	x8, [x22]
     18c:	mov	w2, wzr
     190:	ldr	w8, [x8, #316]
     194:	add	w8, w9, w8
     198:	str	w8, [x19, #76]
     19c:	bl	304 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>
     1a0:	ldur	x2, [x29, #-112]
     1a4:	ldur	w3, [x29, #-104]
     1a8:	mov	x0, x19
     1ac:	mov	x1, x21
     1b0:	bl	4dc <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
     1b4:	ldr	w8, [x22, #784]
     1b8:	cmp	w8, #0x5
     1bc:	b.ne	224 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x11c>  // b.any
     1c0:	mov	x0, x19
     1c4:	mov	x1, x21
     1c8:	bl	7e8 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
     1cc:	ldr	x0, [x19, #8]
     1d0:	cbz	x0, 2dc <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1d4>
     1d4:	ldr	x8, [x0]
     1d8:	mov	x1, x21
     1dc:	ldr	x8, [x8, #16]
     1e0:	blr	x8
     1e4:	tbz	w0, #0, 2dc <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1d4>
     1e8:	ldr	x0, [x19, #8]
     1ec:	mov	x1, x21
     1f0:	ldr	x8, [x0]
     1f4:	ldr	x9, [x8, #48]
     1f8:	mov	x8, x20
     1fc:	blr	x9
     200:	ldr	x9, [x20]
     204:	tst	x9, #0xfffffffffffffffe
     208:	and	x8, x9, #0xfffffffffffffffe
     20c:	cset	w9, ne  // ne = any
     210:	orr	x9, x8, x9
     214:	str	x9, [x20]
     218:	cbnz	x8, 220 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x118>
     21c:	cbnz	x9, 2fc <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1f4>
     220:	cbnz	x8, 27c <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x174>
     224:	ldr	w8, [sp, #88]
     228:	cbz	w8, 24c <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x144>
     22c:	ldr	x21, [sp, #80]
     230:	lsl	x22, x8, #4
     234:	mov	x0, x19
     238:	mov	x1, x21
     23c:	bl	90c <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
     240:	subs	x22, x22, #0x10
     244:	add	x21, x21, #0x10
     248:	b.ne	234 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x12c>  // b.any
     24c:	ldr	w8, [sp, #8]
     250:	cbz	w8, 274 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x16c>
     254:	ldr	x21, [sp]
     258:	lsl	x22, x8, #4
     25c:	mov	x0, x19
     260:	mov	x1, x21
     264:	bl	a30 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
     268:	subs	x22, x22, #0x10
     26c:	add	x21, x21, #0x10
     270:	b.ne	25c <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x154>  // b.any
     274:	mov	w8, #0x1                   	// #1
     278:	str	x8, [x20]
     27c:	ldr	x0, [sp]
     280:	mov	x8, sp
     284:	add	x8, x8, #0x10
     288:	cmp	x0, x8
     28c:	b.eq	294 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x18c>  // b.none
     290:	bl	0 <free>
     294:	ldr	x0, [sp, #80]
     298:	add	x8, sp, #0x50
     29c:	add	x8, x8, #0x10
     2a0:	cmp	x0, x8
     2a4:	b.eq	2ac <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1a4>  // b.none
     2a8:	bl	0 <free>
     2ac:	ldur	x0, [x29, #-112]
     2b0:	sub	x8, x29, #0x70
     2b4:	add	x8, x8, #0x10
     2b8:	cmp	x0, x8
     2bc:	b.eq	2c4 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1bc>  // b.none
     2c0:	bl	0 <free>
     2c4:	ldp	x20, x19, [sp, #320]
     2c8:	ldp	x22, x21, [sp, #304]
     2cc:	ldr	x28, [sp, #288]
     2d0:	ldp	x29, x30, [sp, #272]
     2d4:	add	sp, sp, #0x150
     2d8:	ret
     2dc:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     2e0:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     2e4:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     2e8:	add	x0, x0, #0x0
     2ec:	add	x1, x1, #0x0
     2f0:	add	x3, x3, #0x0
     2f4:	mov	w2, #0x47                  	// #71
     2f8:	bl	0 <__assert_fail>
     2fc:	mov	x0, x20
     300:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000304 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>:
     304:	sub	sp, sp, #0x70
     308:	stp	x29, x30, [sp, #32]
     30c:	str	x25, [sp, #48]
     310:	stp	x24, x23, [sp, #64]
     314:	stp	x22, x21, [sp, #80]
     318:	stp	x20, x19, [sp, #96]
     31c:	add	x29, sp, #0x20
     320:	ldr	x8, [x1, #8]
     324:	ldr	x8, [x8]
     328:	ldr	x23, [x8, #288]
     32c:	cbz	x23, 480 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x17c>
     330:	fmov	d0, x23
     334:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     338:	cnt	v0.8b, v0.8b
     33c:	ldr	d1, [x9]
     340:	uaddlv	h0, v0.8b
     344:	mov	x8, sp
     348:	fmov	w22, s0
     34c:	mov	w20, w2
     350:	mov	x19, x1
     354:	mov	x21, x0
     358:	add	x1, x8, #0x10
     35c:	cmp	x22, #0x5
     360:	str	x1, [sp]
     364:	str	d1, [sp, #8]
     368:	b.cc	384 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x80>  // b.lo, b.ul, b.last
     36c:	mov	x0, sp
     370:	mov	w3, #0x4                   	// #4
     374:	mov	x2, x22
     378:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     37c:	ldr	w8, [sp, #12]
     380:	b	388 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x84>
     384:	mov	w8, #0x4                   	// #4
     388:	cmp	x8, x22
     38c:	b.cc	4bc <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x1b8>  // b.lo, b.ul, b.last
     390:	ldr	x0, [sp]
     394:	lsl	x2, x22, #2
     398:	mov	w1, wzr
     39c:	str	w22, [sp, #8]
     3a0:	bl	0 <memset>
     3a4:	ldr	w24, [sp, #8]
     3a8:	cbz	w24, 3ec <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xe8>
     3ac:	mov	x25, xzr
     3b0:	ldr	x8, [x21, #64]
     3b4:	ldr	x0, [x8, #24]
     3b8:	neg	x8, x23
     3bc:	and	x22, x23, x8
     3c0:	mov	x1, x22
     3c4:	bl	0 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>
     3c8:	ldr	w8, [sp, #8]
     3cc:	cmp	x25, x8
     3d0:	b.cs	49c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x198>  // b.hs, b.nlast
     3d4:	ldr	x8, [sp]
     3d8:	eor	x23, x22, x23
     3dc:	str	w0, [x8, x25, lsl #2]
     3e0:	add	x25, x25, #0x1
     3e4:	cmp	x24, x25
     3e8:	b.ne	3b0 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xac>  // b.any
     3ec:	ldr	x22, [x21, #40]
     3f0:	add	x21, x21, #0x18
     3f4:	cmp	x22, x21
     3f8:	tbz	w20, #0, 434 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x130>
     3fc:	b.eq	468 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x164>  // b.none
     400:	ldr	x0, [x22, #32]
     404:	ldr	x2, [sp]
     408:	ldr	w3, [sp, #8]
     40c:	mov	x1, x19
     410:	ldr	x8, [x0]
     414:	ldr	x8, [x8, #48]
     418:	blr	x8
     41c:	mov	x0, x22
     420:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     424:	mov	x22, x0
     428:	cmp	x0, x21
     42c:	b.ne	400 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xfc>  // b.any
     430:	b	468 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x164>
     434:	b.eq	468 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x164>  // b.none
     438:	ldr	x0, [x22, #32]
     43c:	ldr	x2, [sp]
     440:	ldr	w3, [sp, #8]
     444:	mov	x1, x19
     448:	ldr	x8, [x0]
     44c:	ldr	x8, [x8, #56]
     450:	blr	x8
     454:	mov	x0, x22
     458:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     45c:	mov	x22, x0
     460:	cmp	x0, x21
     464:	b.ne	438 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x134>  // b.any
     468:	ldr	x0, [sp]
     46c:	mov	x8, sp
     470:	add	x8, x8, #0x10
     474:	cmp	x0, x8
     478:	b.eq	480 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x17c>  // b.none
     47c:	bl	0 <free>
     480:	ldp	x20, x19, [sp, #96]
     484:	ldp	x22, x21, [sp, #80]
     488:	ldp	x24, x23, [sp, #64]
     48c:	ldr	x25, [sp, #48]
     490:	ldp	x29, x30, [sp, #32]
     494:	add	sp, sp, #0x70
     498:	ret
     49c:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     4a0:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     4a4:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     4a8:	add	x0, x0, #0x0
     4ac:	add	x1, x1, #0x0
     4b0:	add	x3, x3, #0x0
     4b4:	mov	w2, #0x95                  	// #149
     4b8:	bl	0 <__assert_fail>
     4bc:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     4c0:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     4c4:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     4c8:	add	x0, x0, #0x0
     4cc:	add	x1, x1, #0x0
     4d0:	add	x3, x3, #0x0
     4d4:	mov	w2, #0x43                  	// #67
     4d8:	bl	0 <__assert_fail>

00000000000004dc <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>:
     4dc:	sub	sp, sp, #0x90
     4e0:	stp	x29, x30, [sp, #48]
     4e4:	stp	x28, x27, [sp, #64]
     4e8:	stp	x26, x25, [sp, #80]
     4ec:	stp	x24, x23, [sp, #96]
     4f0:	stp	x22, x21, [sp, #112]
     4f4:	stp	x20, x19, [sp, #128]
     4f8:	add	x29, sp, #0x30
     4fc:	stp	x2, x1, [sp]
     500:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     504:	ldr	x8, [x8]
     508:	mov	x19, x3
     50c:	mov	x22, x0
     510:	ldrb	w8, [x8]
     514:	cbz	w8, 728 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x24c>
     518:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     51c:	add	x0, x0, #0x0
     520:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     524:	tbz	w0, #0, 728 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x24c>
     528:	bl	0 <_ZN4llvm4dbgsEv>
     52c:	ldp	x9, x8, [x0, #16]
     530:	mov	x23, x0
     534:	sub	x9, x9, x8
     538:	cmp	x9, #0x18
     53c:	b.hi	55c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x80>  // b.pmore
     540:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     544:	add	x1, x1, #0x0
     548:	mov	w2, #0x19                  	// #25
     54c:	mov	x0, x23
     550:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     554:	mov	x23, x0
     558:	b	580 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa4>
     55c:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     560:	add	x9, x9, #0x0
     564:	ldur	q0, [x9, #9]
     568:	ldr	q1, [x9]
     56c:	stur	q0, [x8, #9]
     570:	str	q1, [x8]
     574:	ldr	x8, [x23, #24]
     578:	add	x8, x8, #0x19
     57c:	str	x8, [x23, #24]
     580:	ldp	x24, x8, [sp]
     584:	mov	x0, x23
     588:	ldr	w1, [x8]
     58c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     590:	ldp	x9, x8, [x23, #16]
     594:	cmp	x8, x9
     598:	b.cs	5b4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xd8>  // b.hs, b.nlast
     59c:	add	x9, x8, #0x1
     5a0:	mov	w10, #0xa                   	// #10
     5a4:	str	x9, [x23, #24]
     5a8:	strb	w10, [x8]
     5ac:	cbnz	x19, 5c4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xe8>
     5b0:	b	75c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x280>
     5b4:	mov	w1, #0xa                   	// #10
     5b8:	mov	x0, x23
     5bc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     5c0:	cbz	x19, 75c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x280>
     5c4:	mov	x21, #0x7963                	// #31075
     5c8:	movk	x21, #0x6c63, lsl #16
     5cc:	add	x8, x19, x19, lsl #1
     5d0:	adrp	x23, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     5d4:	movk	x21, #0x7365, lsl #32
     5d8:	mov	w25, #0x3a64                	// #14948
     5dc:	add	x26, x24, #0x10
     5e0:	add	x23, x23, #0x0
     5e4:	mov	w28, #0xa                   	// #10
     5e8:	movk	x21, #0x203a, lsl #48
     5ec:	mov	w27, #0x20                  	// #32
     5f0:	mov	w24, #0x2c5d                	// #11357
     5f4:	lsl	x20, x8, #3
     5f8:	movk	w25, #0x5b20, lsl #16
     5fc:	b	618 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x13c>
     600:	add	x9, x8, #0x1
     604:	str	x9, [x0, #24]
     608:	strb	w28, [x8]
     60c:	subs	x20, x20, #0x18
     610:	add	x26, x26, #0x18
     614:	b.eq	728 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x24c>  // b.none
     618:	ldr	w8, [x26, #4]
     61c:	cmp	w8, #0x1
     620:	b.ne	7c8 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2ec>  // b.any
     624:	bl	0 <_ZN4llvm4dbgsEv>
     628:	ldp	x9, x8, [x0, #16]
     62c:	sub	x9, x9, x8
     630:	cmp	x9, #0x13
     634:	b.hi	648 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x16c>  // b.pmore
     638:	mov	w2, #0x14                  	// #20
     63c:	mov	x1, x23
     640:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     644:	b	660 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x184>
     648:	ldr	q0, [x23]
     64c:	str	w25, [x8, #16]
     650:	str	q0, [x8]
     654:	ldr	x8, [x0, #24]
     658:	add	x8, x8, #0x14
     65c:	str	x8, [x0, #24]
     660:	ldur	x1, [x26, #-16]
     664:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     668:	ldp	x9, x8, [x0, #16]
     66c:	cmp	x8, x9
     670:	b.cs	688 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1ac>  // b.hs, b.nlast
     674:	add	x9, x8, #0x1
     678:	str	x9, [x0, #24]
     67c:	mov	w9, #0x2e                  	// #46
     680:	strb	w9, [x8]
     684:	b	690 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1b4>
     688:	mov	w1, #0x2e                  	// #46
     68c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     690:	ldur	x1, [x26, #-8]
     694:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     698:	ldp	x9, x8, [x0, #16]
     69c:	sub	x9, x9, x8
     6a0:	cmp	x9, #0x2
     6a4:	b.hi	6bc <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1e0>  // b.pmore
     6a8:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     6ac:	mov	w2, #0x3                   	// #3
     6b0:	add	x1, x1, #0x0
     6b4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6b8:	b	6d0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1f4>
     6bc:	strb	w27, [x8, #2]
     6c0:	strh	w24, [x8]
     6c4:	ldr	x8, [x0, #24]
     6c8:	add	x8, x8, #0x3
     6cc:	str	x8, [x0, #24]
     6d0:	bl	0 <_ZN4llvm4dbgsEv>
     6d4:	ldp	x9, x8, [x0, #16]
     6d8:	sub	x9, x9, x8
     6dc:	cmp	x9, #0x7
     6e0:	b.hi	6f8 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x21c>  // b.pmore
     6e4:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     6e8:	mov	w2, #0x8                   	// #8
     6ec:	add	x1, x1, #0x0
     6f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6f4:	b	708 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x22c>
     6f8:	str	x21, [x8]
     6fc:	ldr	x8, [x0, #24]
     700:	add	x8, x8, #0x8
     704:	str	x8, [x0, #24]
     708:	ldr	w1, [x26]
     70c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     710:	ldp	x9, x8, [x0, #16]
     714:	cmp	x8, x9
     718:	b.cc	600 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x124>  // b.lo, b.ul, b.last
     71c:	mov	w1, #0xa                   	// #10
     720:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     724:	b	60c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x130>
     728:	ldr	x24, [sp]
     72c:	cbz	x19, 75c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x280>
     730:	add	x8, x19, x19, lsl #1
     734:	lsl	x20, x8, #3
     738:	mov	x21, x24
     73c:	ldr	x8, [x22, #64]
     740:	ldr	x1, [x21]
     744:	ldr	x0, [x8, #24]
     748:	bl	0 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>
     74c:	mov	w8, w0
     750:	subs	x20, x20, #0x18
     754:	str	x8, [x21], #24
     758:	b.ne	73c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x260>  // b.any
     75c:	ldr	x9, [sp, #8]
     760:	mov	w8, #0x4                   	// #4
     764:	str	w8, [sp, #16]
     768:	str	x19, [sp, #40]
     76c:	stp	x9, x24, [sp, #24]
     770:	ldr	x19, [x22, #40]
     774:	add	x20, x22, #0x18
     778:	cmp	x19, x20
     77c:	b.eq	7a8 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2cc>  // b.none
     780:	ldr	x0, [x19, #32]
     784:	add	x1, sp, #0x10
     788:	ldr	x8, [x0]
     78c:	ldr	x8, [x8, #16]
     790:	blr	x8
     794:	mov	x0, x19
     798:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     79c:	mov	x19, x0
     7a0:	cmp	x0, x20
     7a4:	b.ne	780 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2a4>  // b.any
     7a8:	ldp	x20, x19, [sp, #128]
     7ac:	ldp	x22, x21, [sp, #112]
     7b0:	ldp	x24, x23, [sp, #96]
     7b4:	ldp	x26, x25, [sp, #80]
     7b8:	ldp	x28, x27, [sp, #64]
     7bc:	ldp	x29, x30, [sp, #48]
     7c0:	add	sp, sp, #0x90
     7c4:	ret
     7c8:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     7cc:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     7d0:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     7d4:	add	x0, x0, #0x0
     7d8:	add	x1, x1, #0x0
     7dc:	add	x3, x3, #0x0
     7e0:	mov	w2, #0x102                 	// #258
     7e4:	bl	0 <__assert_fail>

00000000000007e8 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>:
     7e8:	sub	sp, sp, #0x40
     7ec:	stp	x29, x30, [sp, #16]
     7f0:	str	x21, [sp, #32]
     7f4:	stp	x20, x19, [sp, #48]
     7f8:	add	x29, sp, #0x10
     7fc:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     800:	ldr	x8, [x8]
     804:	mov	x19, x1
     808:	mov	x20, x0
     80c:	ldrb	w8, [x8]
     810:	cbz	w8, 8b4 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0xcc>
     814:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     818:	add	x0, x0, #0x0
     81c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     820:	tbz	w0, #0, 8b4 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0xcc>
     824:	bl	0 <_ZN4llvm4dbgsEv>
     828:	ldp	x9, x8, [x0, #16]
     82c:	mov	x21, x0
     830:	sub	x9, x9, x8
     834:	cmp	x9, #0x1a
     838:	b.hi	858 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x70>  // b.pmore
     83c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     840:	add	x1, x1, #0x0
     844:	mov	w2, #0x1b                  	// #27
     848:	mov	x0, x21
     84c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     850:	mov	x21, x0
     854:	b	87c <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x94>
     858:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     85c:	add	x9, x9, #0x0
     860:	ldur	q0, [x9, #11]
     864:	ldr	q1, [x9]
     868:	stur	q0, [x8, #11]
     86c:	str	q1, [x8]
     870:	ldr	x8, [x21, #24]
     874:	add	x8, x8, #0x1b
     878:	str	x8, [x21, #24]
     87c:	ldr	w1, [x19]
     880:	mov	x0, x21
     884:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     888:	ldp	x9, x8, [x21, #16]
     88c:	cmp	x8, x9
     890:	b.cs	8a8 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0xc0>  // b.hs, b.nlast
     894:	add	x9, x8, #0x1
     898:	mov	w10, #0xa                   	// #10
     89c:	str	x9, [x21, #24]
     8a0:	strb	w10, [x8]
     8a4:	b	8b4 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0xcc>
     8a8:	mov	w1, #0xa                   	// #10
     8ac:	mov	x0, x21
     8b0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     8b4:	mov	w8, #0x5                   	// #5
     8b8:	str	w8, [sp]
     8bc:	str	x19, [sp, #8]
     8c0:	ldr	x19, [x20, #40]
     8c4:	add	x20, x20, #0x18
     8c8:	cmp	x19, x20
     8cc:	b.eq	8f8 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x110>  // b.none
     8d0:	ldr	x0, [x19, #32]
     8d4:	mov	x1, sp
     8d8:	ldr	x8, [x0]
     8dc:	ldr	x8, [x8, #16]
     8e0:	blr	x8
     8e4:	mov	x0, x19
     8e8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     8ec:	mov	x19, x0
     8f0:	cmp	x0, x20
     8f4:	b.ne	8d0 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0xe8>  // b.any
     8f8:	ldp	x20, x19, [sp, #48]
     8fc:	ldr	x21, [sp, #32]
     900:	ldp	x29, x30, [sp, #16]
     904:	add	sp, sp, #0x40
     908:	ret

000000000000090c <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>:
     90c:	sub	sp, sp, #0x40
     910:	stp	x29, x30, [sp, #16]
     914:	str	x21, [sp, #32]
     918:	stp	x20, x19, [sp, #48]
     91c:	add	x29, sp, #0x10
     920:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     924:	ldr	x8, [x8]
     928:	mov	x19, x1
     92c:	mov	x20, x0
     930:	ldrb	w8, [x8]
     934:	cbz	w8, 9d8 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0xcc>
     938:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     93c:	add	x0, x0, #0x0
     940:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     944:	tbz	w0, #0, 9d8 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0xcc>
     948:	bl	0 <_ZN4llvm4dbgsEv>
     94c:	ldp	x9, x8, [x0, #16]
     950:	mov	x21, x0
     954:	sub	x9, x9, x8
     958:	cmp	x9, #0x19
     95c:	b.hi	97c <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x70>  // b.pmore
     960:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     964:	add	x1, x1, #0x0
     968:	mov	w2, #0x1a                  	// #26
     96c:	mov	x0, x21
     970:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     974:	mov	x21, x0
     978:	b	9a0 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x94>
     97c:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     980:	add	x9, x9, #0x0
     984:	ldur	q0, [x9, #10]
     988:	ldr	q1, [x9]
     98c:	stur	q0, [x8, #10]
     990:	str	q1, [x8]
     994:	ldr	x8, [x21, #24]
     998:	add	x8, x8, #0x1a
     99c:	str	x8, [x21, #24]
     9a0:	ldr	w1, [x19]
     9a4:	mov	x0, x21
     9a8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     9ac:	ldp	x9, x8, [x21, #16]
     9b0:	cmp	x8, x9
     9b4:	b.cs	9cc <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0xc0>  // b.hs, b.nlast
     9b8:	add	x9, x8, #0x1
     9bc:	mov	w10, #0xa                   	// #10
     9c0:	str	x9, [x21, #24]
     9c4:	strb	w10, [x8]
     9c8:	b	9d8 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0xcc>
     9cc:	mov	w1, #0xa                   	// #10
     9d0:	mov	x0, x21
     9d4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     9d8:	mov	w8, #0x2                   	// #2
     9dc:	str	w8, [sp]
     9e0:	str	x19, [sp, #8]
     9e4:	ldr	x19, [x20, #40]
     9e8:	add	x20, x20, #0x18
     9ec:	cmp	x19, x20
     9f0:	b.eq	a1c <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x110>  // b.none
     9f4:	ldr	x0, [x19, #32]
     9f8:	mov	x1, sp
     9fc:	ldr	x8, [x0]
     a00:	ldr	x8, [x8, #16]
     a04:	blr	x8
     a08:	mov	x0, x19
     a0c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     a10:	mov	x19, x0
     a14:	cmp	x0, x20
     a18:	b.ne	9f4 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0xe8>  // b.any
     a1c:	ldp	x20, x19, [sp, #48]
     a20:	ldr	x21, [sp, #32]
     a24:	ldp	x29, x30, [sp, #16]
     a28:	add	sp, sp, #0x40
     a2c:	ret

0000000000000a30 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>:
     a30:	sub	sp, sp, #0x40
     a34:	stp	x29, x30, [sp, #16]
     a38:	str	x21, [sp, #32]
     a3c:	stp	x20, x19, [sp, #48]
     a40:	add	x29, sp, #0x10
     a44:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     a48:	ldr	x8, [x8]
     a4c:	mov	x19, x1
     a50:	mov	x20, x0
     a54:	ldrb	w8, [x8]
     a58:	cbz	w8, afc <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0xcc>
     a5c:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     a60:	add	x0, x0, #0x0
     a64:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     a68:	tbz	w0, #0, afc <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0xcc>
     a6c:	bl	0 <_ZN4llvm4dbgsEv>
     a70:	ldp	x9, x8, [x0, #16]
     a74:	mov	x21, x0
     a78:	sub	x9, x9, x8
     a7c:	cmp	x9, #0x17
     a80:	b.hi	aa0 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x70>  // b.pmore
     a84:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     a88:	add	x1, x1, #0x0
     a8c:	mov	w2, #0x18                  	// #24
     a90:	mov	x0, x21
     a94:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a98:	mov	x21, x0
     a9c:	b	ac4 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x94>
     aa0:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     aa4:	add	x9, x9, #0x0
     aa8:	ldr	x10, [x9, #16]
     aac:	ldr	q0, [x9]
     ab0:	str	x10, [x8, #16]
     ab4:	str	q0, [x8]
     ab8:	ldr	x8, [x21, #24]
     abc:	add	x8, x8, #0x18
     ac0:	str	x8, [x21, #24]
     ac4:	ldr	w1, [x19]
     ac8:	mov	x0, x21
     acc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ad0:	ldp	x9, x8, [x21, #16]
     ad4:	cmp	x8, x9
     ad8:	b.cs	af0 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0xc0>  // b.hs, b.nlast
     adc:	add	x9, x8, #0x1
     ae0:	mov	w10, #0xa                   	// #10
     ae4:	str	x9, [x21, #24]
     ae8:	strb	w10, [x8]
     aec:	b	afc <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0xcc>
     af0:	mov	w1, #0xa                   	// #10
     af4:	mov	x0, x21
     af8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     afc:	mov	w8, #0x3                   	// #3
     b00:	str	w8, [sp]
     b04:	str	x19, [sp, #8]
     b08:	ldr	x19, [x20, #40]
     b0c:	add	x20, x20, #0x18
     b10:	cmp	x19, x20
     b14:	b.eq	b40 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x110>  // b.none
     b18:	ldr	x0, [x19, #32]
     b1c:	mov	x1, sp
     b20:	ldr	x8, [x0]
     b24:	ldr	x8, [x8, #16]
     b28:	blr	x8
     b2c:	mov	x0, x19
     b30:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     b34:	mov	x19, x0
     b38:	cmp	x0, x20
     b3c:	b.ne	b18 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0xe8>  // b.any
     b40:	ldp	x20, x19, [sp, #48]
     b44:	ldr	x21, [sp, #32]
     b48:	ldp	x29, x30, [sp, #16]
     b4c:	add	sp, sp, #0x40
     b50:	ret

0000000000000b54 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv>:
     b54:	sub	sp, sp, #0x30
     b58:	stp	x29, x30, [sp, #16]
     b5c:	stp	x20, x19, [sp, #32]
     b60:	add	x29, sp, #0x10
     b64:	mov	x20, x0
     b68:	ldr	x0, [x0, #64]
     b6c:	mov	x19, x8
     b70:	bl	0 <_ZN4llvm3mca9Scheduler6selectEv>
     b74:	str	x0, [sp]
     b78:	str	x1, [sp, #8]
     b7c:	cbz	x1, bc8 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x74>
     b80:	mov	x1, sp
     b84:	mov	x8, x19
     b88:	mov	x0, x20
     b8c:	bl	108 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>
     b90:	ldr	x9, [x19]
     b94:	tst	x9, #0xfffffffffffffffe
     b98:	and	x8, x9, #0xfffffffffffffffe
     b9c:	cset	w9, ne  // ne = any
     ba0:	orr	x9, x8, x9
     ba4:	str	x9, [x19]
     ba8:	cbnz	x8, bb0 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x5c>
     bac:	cbnz	x9, be0 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x8c>
     bb0:	cbnz	x8, bd0 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x7c>
     bb4:	ldr	x0, [x20, #64]
     bb8:	bl	0 <_ZN4llvm3mca9Scheduler6selectEv>
     bbc:	str	w0, [sp]
     bc0:	str	x1, [sp, #8]
     bc4:	cbnz	x1, b80 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x2c>
     bc8:	mov	w8, #0x1                   	// #1
     bcc:	str	x8, [x19]
     bd0:	ldp	x20, x19, [sp, #32]
     bd4:	ldp	x29, x30, [sp, #16]
     bd8:	add	sp, sp, #0x30
     bdc:	ret
     be0:	mov	x0, x19
     be4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000be8 <_ZN4llvm3mca12ExecuteStage10cycleStartEv>:
     be8:	sub	sp, sp, #0x1c0
     bec:	stp	x29, x30, [sp, #384]
     bf0:	str	x28, [sp, #400]
     bf4:	stp	x22, x21, [sp, #416]
     bf8:	stp	x20, x19, [sp, #432]
     bfc:	add	x29, sp, #0x180
     c00:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     c04:	ldr	d0, [x9]
     c08:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     c0c:	mov	x19, x0
     c10:	sub	x1, x29, #0x90
     c14:	stur	d0, [x29, #-136]
     c18:	ldr	d0, [x9]
     c1c:	sub	x9, x29, #0x90
     c20:	add	x9, x9, #0x10
     c24:	stur	x9, [x29, #-144]
     c28:	add	x9, sp, #0xa0
     c2c:	add	x9, x9, #0x10
     c30:	str	x9, [sp, #160]
     c34:	add	x9, sp, #0x50
     c38:	add	x9, x9, #0x10
     c3c:	str	x9, [sp, #80]
     c40:	mov	x9, sp
     c44:	add	x9, x9, #0x10
     c48:	str	x9, [sp]
     c4c:	str	d0, [sp, #168]
     c50:	str	d0, [sp, #88]
     c54:	str	d0, [sp, #8]
     c58:	ldr	x0, [x0, #64]
     c5c:	add	x2, sp, #0xa0
     c60:	add	x3, sp, #0x50
     c64:	mov	x4, sp
     c68:	mov	x20, x8
     c6c:	bl	0 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_>
     c70:	str	xzr, [x19, #72]
     c74:	ldur	w8, [x29, #-136]
     c78:	cbz	w8, c9c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0xb4>
     c7c:	ldur	x21, [x29, #-144]
     c80:	lsl	x22, x8, #4
     c84:	mov	x0, x19
     c88:	mov	x1, x21
     c8c:	bl	e18 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE>
     c90:	subs	x22, x22, #0x10
     c94:	add	x21, x21, #0x10
     c98:	b.ne	c84 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x9c>  // b.any
     c9c:	ldr	w8, [sp, #168]
     ca0:	cbz	w8, d1c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x134>
     ca4:	ldr	x21, [sp, #160]
     ca8:	lsl	x22, x8, #4
     cac:	mov	x0, x19
     cb0:	mov	x1, x21
     cb4:	bl	7e8 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
     cb8:	ldr	x0, [x19, #8]
     cbc:	cbz	x0, df0 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x208>
     cc0:	ldr	x8, [x0]
     cc4:	mov	x1, x21
     cc8:	ldr	x8, [x8, #16]
     ccc:	blr	x8
     cd0:	tbz	w0, #0, df0 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x208>
     cd4:	ldr	x0, [x19, #8]
     cd8:	mov	x1, x21
     cdc:	ldr	x8, [x0]
     ce0:	ldr	x9, [x8, #48]
     ce4:	mov	x8, x20
     ce8:	blr	x9
     cec:	ldr	x9, [x20]
     cf0:	tst	x9, #0xfffffffffffffffe
     cf4:	and	x8, x9, #0xfffffffffffffffe
     cf8:	cset	w9, ne  // ne = any
     cfc:	orr	x9, x8, x9
     d00:	str	x9, [x20]
     d04:	cbnz	x8, d0c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x124>
     d08:	cbnz	x9, e10 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x228>
     d0c:	cbnz	x8, d78 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x190>
     d10:	subs	x22, x22, #0x10
     d14:	add	x21, x21, #0x10
     d18:	b.ne	cac <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0xc4>  // b.any
     d1c:	ldr	w8, [sp, #88]
     d20:	cbz	w8, d44 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x15c>
     d24:	ldr	x21, [sp, #80]
     d28:	lsl	x22, x8, #4
     d2c:	mov	x0, x19
     d30:	mov	x1, x21
     d34:	bl	90c <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
     d38:	subs	x22, x22, #0x10
     d3c:	add	x21, x21, #0x10
     d40:	b.ne	d2c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x144>  // b.any
     d44:	ldr	w8, [sp, #8]
     d48:	cbz	w8, d6c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x184>
     d4c:	ldr	x21, [sp]
     d50:	lsl	x22, x8, #4
     d54:	mov	x0, x19
     d58:	mov	x1, x21
     d5c:	bl	a30 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
     d60:	subs	x22, x22, #0x10
     d64:	add	x21, x21, #0x10
     d68:	b.ne	d54 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x16c>  // b.any
     d6c:	mov	x8, x20
     d70:	mov	x0, x19
     d74:	bl	b54 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv>
     d78:	ldr	x0, [sp]
     d7c:	mov	x8, sp
     d80:	add	x8, x8, #0x10
     d84:	cmp	x0, x8
     d88:	b.eq	d90 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1a8>  // b.none
     d8c:	bl	0 <free>
     d90:	ldr	x0, [sp, #80]
     d94:	add	x8, sp, #0x50
     d98:	add	x8, x8, #0x10
     d9c:	cmp	x0, x8
     da0:	b.eq	da8 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1c0>  // b.none
     da4:	bl	0 <free>
     da8:	ldr	x0, [sp, #160]
     dac:	add	x8, sp, #0xa0
     db0:	add	x8, x8, #0x10
     db4:	cmp	x0, x8
     db8:	b.eq	dc0 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1d8>  // b.none
     dbc:	bl	0 <free>
     dc0:	ldur	x0, [x29, #-144]
     dc4:	sub	x8, x29, #0x90
     dc8:	add	x8, x8, #0x10
     dcc:	cmp	x0, x8
     dd0:	b.eq	dd8 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1f0>  // b.none
     dd4:	bl	0 <free>
     dd8:	ldp	x20, x19, [sp, #432]
     ddc:	ldp	x22, x21, [sp, #416]
     de0:	ldr	x28, [sp, #400]
     de4:	ldp	x29, x30, [sp, #384]
     de8:	add	sp, sp, #0x1c0
     dec:	ret
     df0:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     df4:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     df8:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     dfc:	add	x0, x0, #0x0
     e00:	add	x1, x1, #0x0
     e04:	add	x3, x3, #0x0
     e08:	mov	w2, #0x47                  	// #71
     e0c:	bl	0 <__assert_fail>
     e10:	mov	x0, x20
     e14:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000e18 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE>:
     e18:	stp	x29, x30, [sp, #-48]!
     e1c:	str	x21, [sp, #16]
     e20:	stp	x20, x19, [sp, #32]
     e24:	mov	x29, sp
     e28:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
     e2c:	ldr	x8, [x8]
     e30:	mov	x19, x1
     e34:	mov	x20, x0
     e38:	ldrb	w8, [x8]
     e3c:	cbz	w8, f0c <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xf4>
     e40:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     e44:	add	x0, x0, #0x0
     e48:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     e4c:	tbz	w0, #0, f0c <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xf4>
     e50:	bl	0 <_ZN4llvm4dbgsEv>
     e54:	ldp	x9, x8, [x0, #16]
     e58:	sub	x9, x9, x8
     e5c:	cmp	x9, #0x18
     e60:	b.hi	e78 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x60>  // b.pmore
     e64:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     e68:	add	x1, x1, #0x0
     e6c:	mov	w2, #0x19                  	// #25
     e70:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     e74:	b	e9c <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x84>
     e78:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     e7c:	add	x9, x9, #0x0
     e80:	ldur	q0, [x9, #9]
     e84:	ldr	q1, [x9]
     e88:	stur	q0, [x8, #9]
     e8c:	str	q1, [x8]
     e90:	ldr	x8, [x0, #24]
     e94:	add	x8, x8, #0x19
     e98:	str	x8, [x0, #24]
     e9c:	ldr	x1, [x19]
     ea0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ea4:	ldp	x9, x8, [x0, #16]
     ea8:	cmp	x8, x9
     eac:	b.cs	ec4 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xac>  // b.hs, b.nlast
     eb0:	add	x9, x8, #0x1
     eb4:	mov	w10, #0x2e                  	// #46
     eb8:	str	x9, [x0, #24]
     ebc:	strb	w10, [x8]
     ec0:	b	ecc <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xb4>
     ec4:	mov	w1, #0x2e                  	// #46
     ec8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     ecc:	ldr	x1, [x19, #8]
     ed0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ed4:	ldp	x9, x8, [x0, #16]
     ed8:	sub	x9, x9, x8
     edc:	cmp	x9, #0x1
     ee0:	b.hi	ef8 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xe0>  // b.pmore
     ee4:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     ee8:	add	x1, x1, #0x0
     eec:	mov	w2, #0x2                   	// #2
     ef0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ef4:	b	f0c <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xf4>
     ef8:	mov	w9, #0xa5d                 	// #2653
     efc:	strh	w9, [x8]
     f00:	ldr	x8, [x0, #24]
     f04:	add	x8, x8, #0x2
     f08:	str	x8, [x0, #24]
     f0c:	ldr	x21, [x20, #40]
     f10:	add	x20, x20, #0x18
     f14:	cmp	x21, x20
     f18:	b.eq	f44 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x12c>  // b.none
     f1c:	ldr	x0, [x21, #32]
     f20:	mov	x1, x19
     f24:	ldr	x8, [x0]
     f28:	ldr	x8, [x8, #40]
     f2c:	blr	x8
     f30:	mov	x0, x21
     f34:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     f38:	mov	x21, x0
     f3c:	cmp	x0, x20
     f40:	b.ne	f1c <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x104>  // b.any
     f44:	ldp	x20, x19, [sp, #32]
     f48:	ldr	x21, [sp, #16]
     f4c:	ldp	x29, x30, [sp], #48
     f50:	ret

0000000000000f54 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>:
     f54:	str	d8, [sp, #-80]!
     f58:	stp	x29, x30, [sp, #16]
     f5c:	stp	x28, x23, [sp, #32]
     f60:	stp	x22, x21, [sp, #48]
     f64:	stp	x20, x19, [sp, #64]
     f68:	mov	x29, sp
     f6c:	sub	sp, sp, #0x1d0
     f70:	ldrb	w9, [x0, #80]
     f74:	mov	x19, x8
     f78:	cbz	w9, 1008 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xb4>
     f7c:	mov	x20, x0
     f80:	ldr	x0, [x0, #64]
     f84:	ldrb	w8, [x0, #140]
     f88:	cbnz	w8, f98 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x44>
     f8c:	ldp	w8, w9, [x20, #72]
     f90:	cmp	w8, w9
     f94:	b.ls	1008 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xb4>  // b.plast
     f98:	adrp	x8, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     f9c:	ldr	d8, [x8]
     fa0:	sub	x8, x29, #0x90
     fa4:	add	x8, x8, #0x10
     fa8:	sub	x1, x29, #0x90
     fac:	stur	x8, [x29, #-144]
     fb0:	stur	d8, [x29, #-136]
     fb4:	bl	0 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE>
     fb8:	adrp	x22, 0 <_ZN4llvm9DebugFlagE>
     fbc:	ldr	x22, [x22]
     fc0:	cbz	x0, 10d8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x184>
     fc4:	ldrb	w8, [x22]
     fc8:	mov	x21, x0
     fcc:	cbz	w8, 1088 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x134>
     fd0:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     fd4:	add	x0, x0, #0x0
     fd8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     fdc:	tbz	w0, #0, 1088 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x134>
     fe0:	bl	0 <_ZN4llvm4dbgsEv>
     fe4:	ldp	x9, x8, [x0, #16]
     fe8:	sub	x9, x9, x8
     fec:	cmp	x9, #0x45
     ff0:	b.hi	1014 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xc0>  // b.pmore
     ff4:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     ff8:	add	x1, x1, #0x0
     ffc:	mov	w2, #0x46                  	// #70
    1000:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1004:	b	1040 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xec>
    1008:	mov	w8, #0x1                   	// #1
    100c:	str	x8, [x19]
    1010:	b	12e4 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x390>
    1014:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1018:	add	x9, x9, #0x0
    101c:	ldp	q0, q3, [x9]
    1020:	ldur	x10, [x9, #62]
    1024:	ldp	q1, q2, [x9, #32]
    1028:	stp	q0, q3, [x8]
    102c:	stur	x10, [x8, #62]
    1030:	stp	q1, q2, [x8, #32]
    1034:	ldr	x8, [x0, #24]
    1038:	add	x8, x8, #0x46
    103c:	str	x8, [x0, #24]
    1040:	mov	w8, #0x10                  	// #16
    1044:	mov	w9, #0x1                   	// #1
    1048:	add	x1, sp, #0xb0
    104c:	stp	x21, xzr, [sp, #176]
    1050:	str	w8, [sp, #192]
    1054:	strh	w9, [sp, #196]
    1058:	strb	w9, [sp, #198]
    105c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    1060:	ldp	x9, x8, [x0, #16]
    1064:	cmp	x8, x9
    1068:	b.cs	1080 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x12c>  // b.hs, b.nlast
    106c:	add	x9, x8, #0x1
    1070:	mov	w10, #0xa                   	// #10
    1074:	str	x9, [x0, #24]
    1078:	strb	w10, [x8]
    107c:	b	1088 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x134>
    1080:	mov	w1, #0xa                   	// #10
    1084:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1088:	ldur	x8, [x29, #-144]
    108c:	ldur	w9, [x29, #-136]
    1090:	mov	w10, #0x1                   	// #1
    1094:	str	w10, [sp, #176]
    1098:	str	x21, [sp, #200]
    109c:	stp	x8, x9, [sp, #184]
    10a0:	ldr	x21, [x20, #40]
    10a4:	add	x23, x20, #0x18
    10a8:	cmp	x21, x23
    10ac:	b.eq	10d8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x184>  // b.none
    10b0:	ldr	x0, [x21, #32]
    10b4:	add	x1, sp, #0xb0
    10b8:	ldr	x8, [x0]
    10bc:	ldr	x8, [x8, #32]
    10c0:	blr	x8
    10c4:	mov	x0, x21
    10c8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    10cc:	mov	x21, x0
    10d0:	cmp	x0, x23
    10d4:	b.ne	10b0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x15c>  // b.any
    10d8:	add	x8, sp, #0xb0
    10dc:	add	x9, sp, #0x20
    10e0:	add	x8, x8, #0x10
    10e4:	add	x9, x9, #0x10
    10e8:	str	d8, [sp, #184]
    10ec:	str	x8, [sp, #176]
    10f0:	str	x9, [sp, #32]
    10f4:	str	d8, [sp, #40]
    10f8:	ldr	x0, [x20, #64]
    10fc:	add	x1, sp, #0xb0
    1100:	add	x2, sp, #0x20
    1104:	bl	0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_>
    1108:	ldr	w8, [sp, #184]
    110c:	cbz	w8, 11d0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x27c>
    1110:	ldrb	w8, [x22]
    1114:	cbz	w8, 1180 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x22c>
    1118:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    111c:	add	x0, x0, #0x0
    1120:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1124:	tbz	w0, #0, 1180 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x22c>
    1128:	bl	0 <_ZN4llvm4dbgsEv>
    112c:	ldp	x9, x8, [x0, #16]
    1130:	sub	x9, x9, x8
    1134:	cmp	x9, #0x33
    1138:	b.hi	1150 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1fc>  // b.pmore
    113c:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1140:	add	x1, x1, #0x0
    1144:	mov	w2, #0x34                  	// #52
    1148:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    114c:	b	1180 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x22c>
    1150:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1154:	add	x9, x9, #0x0
    1158:	ldp	q2, q0, [x9, #16]
    115c:	ldr	q1, [x9]
    1160:	mov	w9, #0x6569                	// #25961
    1164:	movk	w9, #0xa73, lsl #16
    1168:	str	w9, [x8, #48]
    116c:	stp	q2, q0, [x8, #16]
    1170:	str	q1, [x8]
    1174:	ldr	x8, [x0, #24]
    1178:	add	x8, x8, #0x34
    117c:	str	x8, [x0, #24]
    1180:	ldr	x8, [sp, #176]
    1184:	ldr	w9, [sp, #184]
    1188:	mov	w10, #0x2                   	// #2
    118c:	str	w10, [sp]
    1190:	str	xzr, [sp, #24]
    1194:	stp	x8, x9, [sp, #8]
    1198:	ldr	x21, [x20, #40]
    119c:	add	x23, x20, #0x18
    11a0:	cmp	x21, x23
    11a4:	b.eq	11d0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x27c>  // b.none
    11a8:	ldr	x0, [x21, #32]
    11ac:	mov	x1, sp
    11b0:	ldr	x8, [x0]
    11b4:	ldr	x8, [x8, #32]
    11b8:	blr	x8
    11bc:	mov	x0, x21
    11c0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    11c4:	mov	x21, x0
    11c8:	cmp	x0, x23
    11cc:	b.ne	11a8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x254>  // b.any
    11d0:	ldr	w8, [sp, #40]
    11d4:	cbz	w8, 1294 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x340>
    11d8:	ldrb	w8, [x22]
    11dc:	cbz	w8, 1244 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x2f0>
    11e0:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    11e4:	add	x0, x0, #0x0
    11e8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    11ec:	tbz	w0, #0, 1244 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x2f0>
    11f0:	bl	0 <_ZN4llvm4dbgsEv>
    11f4:	ldp	x9, x8, [x0, #16]
    11f8:	sub	x9, x9, x8
    11fc:	cmp	x9, #0x31
    1200:	b.hi	1218 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x2c4>  // b.pmore
    1204:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1208:	add	x1, x1, #0x0
    120c:	mov	w2, #0x32                  	// #50
    1210:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1214:	b	1244 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x2f0>
    1218:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    121c:	add	x9, x9, #0x0
    1220:	ldp	q2, q0, [x9, #16]
    1224:	ldr	q1, [x9]
    1228:	mov	w9, #0xa73                 	// #2675
    122c:	strh	w9, [x8, #48]
    1230:	stp	q2, q0, [x8, #16]
    1234:	str	q1, [x8]
    1238:	ldr	x8, [x0, #24]
    123c:	add	x8, x8, #0x32
    1240:	str	x8, [x0, #24]
    1244:	ldr	x8, [sp, #32]
    1248:	ldr	w9, [sp, #40]
    124c:	mov	w10, #0x3                   	// #3
    1250:	str	w10, [sp]
    1254:	str	xzr, [sp, #24]
    1258:	stp	x8, x9, [sp, #8]
    125c:	ldr	x21, [x20, #40]
    1260:	add	x20, x20, #0x18
    1264:	cmp	x21, x20
    1268:	b.eq	1294 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x340>  // b.none
    126c:	ldr	x0, [x21, #32]
    1270:	mov	x1, sp
    1274:	ldr	x8, [x0]
    1278:	ldr	x8, [x8, #32]
    127c:	blr	x8
    1280:	mov	x0, x21
    1284:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    1288:	mov	x21, x0
    128c:	cmp	x0, x20
    1290:	b.ne	126c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x318>  // b.any
    1294:	ldr	x0, [sp, #32]
    1298:	add	x9, sp, #0x20
    129c:	add	x9, x9, #0x10
    12a0:	mov	w8, #0x1                   	// #1
    12a4:	cmp	x0, x9
    12a8:	str	x8, [x19]
    12ac:	b.eq	12b4 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x360>  // b.none
    12b0:	bl	0 <free>
    12b4:	ldr	x0, [sp, #176]
    12b8:	add	x8, sp, #0xb0
    12bc:	add	x8, x8, #0x10
    12c0:	cmp	x0, x8
    12c4:	b.eq	12cc <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x378>  // b.none
    12c8:	bl	0 <free>
    12cc:	ldur	x0, [x29, #-144]
    12d0:	sub	x8, x29, #0x90
    12d4:	add	x8, x8, #0x10
    12d8:	cmp	x0, x8
    12dc:	b.eq	12e4 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x390>  // b.none
    12e0:	bl	0 <free>
    12e4:	add	sp, sp, #0x1d0
    12e8:	ldp	x20, x19, [sp, #64]
    12ec:	ldp	x22, x21, [sp, #48]
    12f0:	ldp	x28, x23, [sp, #32]
    12f4:	ldp	x29, x30, [sp, #16]
    12f8:	ldr	d8, [sp], #80
    12fc:	ret

0000000000001300 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE>:
    1300:	stp	x29, x30, [sp, #-48]!
    1304:	str	x21, [sp, #16]
    1308:	stp	x20, x19, [sp, #32]
    130c:	mov	x29, sp
    1310:	ldr	x9, [x1, #8]
    1314:	ldrb	w10, [x9, #840]
    1318:	cbz	w10, 1400 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x100>
    131c:	mov	x21, x8
    1320:	ldr	w8, [x9, #784]
    1324:	cmp	w8, #0x3
    1328:	b.ne	1420 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x120>  // b.any
    132c:	ldr	x8, [x9]
    1330:	ldrb	w9, [x8, #324]
    1334:	cbnz	w9, 13c0 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xc0>
    1338:	ldrb	w8, [x8, #325]
    133c:	cbnz	w8, 13c0 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xc0>
    1340:	mov	x19, x1
    1344:	mov	x20, x0
    1348:	bl	90c <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    134c:	mov	x0, x20
    1350:	mov	x1, x19
    1354:	bl	a30 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
    1358:	mov	x0, x20
    135c:	mov	x1, x19
    1360:	mov	x2, xzr
    1364:	mov	x3, xzr
    1368:	bl	4dc <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
    136c:	ldr	x0, [x19, #8]
    1370:	bl	0 <_ZN4llvm3mca11Instruction13forceExecutedEv>
    1374:	mov	x0, x20
    1378:	mov	x1, x19
    137c:	bl	7e8 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
    1380:	ldr	x0, [x20, #8]
    1384:	cbz	x0, 13e0 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xe0>
    1388:	ldr	x8, [x0]
    138c:	mov	x1, x19
    1390:	ldr	x8, [x8, #16]
    1394:	blr	x8
    1398:	tbz	w0, #0, 13e0 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xe0>
    139c:	ldr	x0, [x20, #8]
    13a0:	mov	x1, x19
    13a4:	ldp	x20, x19, [sp, #32]
    13a8:	ldr	x8, [x0]
    13ac:	ldr	x2, [x8, #48]
    13b0:	mov	x8, x21
    13b4:	ldr	x21, [sp, #16]
    13b8:	ldp	x29, x30, [sp], #48
    13bc:	br	x2
    13c0:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    13c4:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    13c8:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    13cc:	add	x0, x0, #0x0
    13d0:	add	x1, x1, #0x0
    13d4:	add	x3, x3, #0x0
    13d8:	mov	w2, #0xa9                  	// #169
    13dc:	bl	0 <__assert_fail>
    13e0:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    13e4:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    13e8:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    13ec:	add	x0, x0, #0x0
    13f0:	add	x1, x1, #0x0
    13f4:	add	x3, x3, #0x0
    13f8:	mov	w2, #0x47                  	// #71
    13fc:	bl	0 <__assert_fail>
    1400:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1404:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1408:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    140c:	add	x0, x0, #0x0
    1410:	add	x1, x1, #0x0
    1414:	add	x3, x3, #0x0
    1418:	mov	w2, #0xa3                  	// #163
    141c:	bl	0 <__assert_fail>
    1420:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1424:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1428:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    142c:	add	x0, x0, #0x0
    1430:	add	x1, x1, #0x0
    1434:	add	x3, x3, #0x0
    1438:	mov	w2, #0xa4                  	// #164
    143c:	bl	0 <__assert_fail>

0000000000001440 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE>:
    1440:	sub	sp, sp, #0x50
    1444:	stp	x29, x30, [sp, #16]
    1448:	str	x23, [sp, #32]
    144c:	stp	x22, x21, [sp, #48]
    1450:	stp	x20, x19, [sp, #64]
    1454:	add	x29, sp, #0x10
    1458:	mov	x20, x0
    145c:	ldr	x0, [x0, #64]
    1460:	mov	x19, x1
    1464:	mov	x21, x8
    1468:	bl	0 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE>
    146c:	cbnz	w0, 156c <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x12c>
    1470:	ldr	x0, [x20, #64]
    1474:	mov	x1, x19
    1478:	bl	0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    147c:	ldr	x8, [x19, #8]
    1480:	ldrb	w8, [x8, #840]
    1484:	cbz	w8, 14ac <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x6c>
    1488:	mov	x8, x21
    148c:	mov	x0, x20
    1490:	mov	x1, x19
    1494:	ldp	x20, x19, [sp, #64]
    1498:	ldp	x22, x21, [sp, #48]
    149c:	ldr	x23, [sp, #32]
    14a0:	ldp	x29, x30, [sp, #16]
    14a4:	add	sp, sp, #0x50
    14a8:	b	1300 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE>
    14ac:	ldr	x0, [x20, #64]
    14b0:	mov	x1, x19
    14b4:	bl	0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE>
    14b8:	ldr	x23, [x19, #8]
    14bc:	ldr	w9, [x20, #72]
    14c0:	mov	w22, w0
    14c4:	mov	w2, #0x1                   	// #1
    14c8:	ldr	x8, [x23]
    14cc:	mov	x0, x20
    14d0:	mov	x1, x19
    14d4:	ldr	w8, [x8, #316]
    14d8:	add	w8, w9, w8
    14dc:	str	w8, [x20, #72]
    14e0:	bl	304 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>
    14e4:	tbz	w22, #0, 1534 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xf4>
    14e8:	mov	x0, x20
    14ec:	mov	x1, x19
    14f0:	bl	90c <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    14f4:	mov	x0, x20
    14f8:	mov	x1, x19
    14fc:	bl	a30 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
    1500:	ldr	x0, [x20, #64]
    1504:	mov	x1, x19
    1508:	bl	0 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>
    150c:	tbz	w0, #0, 154c <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x10c>
    1510:	mov	x8, x21
    1514:	mov	x0, x20
    1518:	mov	x1, x19
    151c:	ldp	x20, x19, [sp, #64]
    1520:	ldp	x22, x21, [sp, #48]
    1524:	ldr	x23, [sp, #32]
    1528:	ldp	x29, x30, [sp, #16]
    152c:	add	sp, sp, #0x50
    1530:	b	108 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>
    1534:	ldr	w8, [x23, #784]
    1538:	cmp	w8, #0x2
    153c:	b.ne	154c <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x10c>  // b.any
    1540:	mov	x0, x20
    1544:	mov	x1, x19
    1548:	bl	90c <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    154c:	mov	w8, #0x1                   	// #1
    1550:	str	x8, [x21]
    1554:	ldp	x20, x19, [sp, #64]
    1558:	ldp	x22, x21, [sp, #48]
    155c:	ldr	x23, [sp, #32]
    1560:	ldp	x29, x30, [sp, #16]
    1564:	add	sp, sp, #0x50
    1568:	ret
    156c:	sub	w8, w0, #0x1
    1570:	cmp	w8, #0x3
    1574:	b.hi	159c <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x15c>  // b.pmore
    1578:	adrp	x9, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    157c:	add	x9, x9, #0x0
    1580:	adr	x10, 1594 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x154>
    1584:	ldrb	w11, [x9, x8]
    1588:	add	x10, x10, x11, lsl #2
    158c:	mov	w8, #0x5                   	// #5
    1590:	br	x10
    1594:	mov	w8, #0x6                   	// #6
    1598:	b	15c0 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x180>
    159c:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    15a0:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    15a4:	add	x0, x0, #0x0
    15a8:	add	x1, x1, #0x0
    15ac:	mov	w2, #0x28                  	// #40
    15b0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    15b4:	mov	w8, #0x4                   	// #4
    15b8:	b	15c0 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x180>
    15bc:	mov	w8, #0x3                   	// #3
    15c0:	str	w8, [sp]
    15c4:	str	x19, [sp, #8]
    15c8:	ldr	x19, [x20, #40]
    15cc:	add	x20, x20, #0x18
    15d0:	cmp	x19, x20
    15d4:	b.eq	1600 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x1c0>  // b.none
    15d8:	ldr	x0, [x19, #32]
    15dc:	mov	x1, sp
    15e0:	ldr	x8, [x0]
    15e4:	ldr	x8, [x8, #24]
    15e8:	blr	x8
    15ec:	mov	x0, x19
    15f0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    15f4:	mov	x19, x0
    15f8:	cmp	x0, x20
    15fc:	b.ne	15d8 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x198>  // b.any
    1600:	adrp	x0, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1604:	adrp	x1, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    1608:	adrp	x3, 0 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
    160c:	add	x0, x0, #0x0
    1610:	add	x1, x1, #0x0
    1614:	add	x3, x3, #0x0
    1618:	mov	w2, #0xbb                  	// #187
    161c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x8, [x19, #40]
  14:	ldr	x0, [x0, #32]
  18:	mov	x20, x1
  1c:	mov	x2, x20
  20:	mov	x1, x8
  24:	bl	0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  28:	ldr	x8, [x19, #40]
  2c:	cmp	x8, x0
  30:	b.ne	70 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE+0x70>  // b.any
  34:	ldp	x0, x1, [x19, #80]
  38:	mov	x2, x20
  3c:	bl	0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  40:	ldr	x8, [x19, #88]
  44:	cmp	x8, x0
  48:	b.ne	90 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE+0x90>  // b.any
  4c:	ldp	x0, x1, [x19, #104]
  50:	mov	x2, x20
  54:	bl	0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  58:	ldr	x8, [x19, #112]
  5c:	cmp	x8, x0
  60:	b.ne	b0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE+0xb0>  // b.any
  64:	ldp	x20, x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret
  70:	adrp	x0, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  74:	adrp	x1, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  78:	adrp	x3, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  7c:	add	x0, x0, #0x0
  80:	add	x1, x1, #0x0
  84:	add	x3, x3, #0x0
  88:	mov	w2, #0x10e                 	// #270
  8c:	bl	0 <__assert_fail>
  90:	adrp	x0, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  94:	adrp	x1, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  98:	adrp	x3, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x10f                 	// #271
  ac:	bl	0 <__assert_fail>
  b0:	adrp	x0, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  b4:	adrp	x1, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  b8:	adrp	x3, 0 <_ZNK4llvm3mca9Scheduler11sanityCheckERKNS0_7InstRefE>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x110                 	// #272
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca12ExecuteStageD0Ev:

0000000000000000 <_ZN4llvm3mca12ExecuteStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca12ExecuteStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca12ExecuteStage17hasWorkToCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag>:
   0:	sub	x11, x1, x0
   4:	cmp	x11, #0x40
   8:	b.lt	ac <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xac>  // b.tstop
   c:	ldr	w9, [x2]
  10:	ldr	x10, [x2, #8]
  14:	lsr	x8, x11, #6
  18:	add	x11, x8, #0x1
  1c:	mov	x8, x0
  20:	b	34 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x34>
  24:	sub	x11, x11, #0x1
  28:	cmp	x11, #0x1
  2c:	add	x8, x8, #0x40
  30:	b.le	a4 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xa4>
  34:	ldr	w12, [x8]
  38:	cmp	w12, w9
  3c:	b.ne	4c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x4c>  // b.any
  40:	ldr	x12, [x8, #8]
  44:	cmp	x12, x10
  48:	b.eq	d8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xd8>  // b.none
  4c:	ldr	w12, [x8, #16]
  50:	cmp	w12, w9
  54:	b.ne	64 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x64>  // b.any
  58:	ldr	x12, [x8, #24]
  5c:	cmp	x12, x10
  60:	b.eq	9c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x9c>  // b.none
  64:	ldr	w12, [x8, #32]
  68:	cmp	w12, w9
  6c:	b.ne	7c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x7c>  // b.any
  70:	ldr	x12, [x8, #40]
  74:	cmp	x12, x10
  78:	b.eq	110 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x110>  // b.none
  7c:	ldr	w12, [x8, #48]
  80:	cmp	w12, w9
  84:	b.ne	24 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x24>  // b.any
  88:	ldr	x12, [x8, #56]
  8c:	cmp	x12, x10
  90:	b.ne	24 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x24>  // b.any
  94:	add	x0, x8, #0x30
  98:	ret
  9c:	add	x8, x8, #0x10
  a0:	b	d8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xd8>
  a4:	sub	x11, x1, x8
  a8:	mov	x0, x8
  ac:	asr	x8, x11, #4
  b0:	cmp	x8, #0x3
  b4:	b.eq	e0 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe0>  // b.none
  b8:	cmp	x8, #0x2
  bc:	b.eq	104 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x104>  // b.none
  c0:	cmp	x8, #0x1
  c4:	mov	x8, x1
  c8:	b.ne	d8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xd8>  // b.any
  cc:	ldr	w8, [x2]
  d0:	ldr	x9, [x2, #8]
  d4:	b	13c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x13c>
  d8:	mov	x0, x8
  dc:	ret
  e0:	ldr	w10, [x0]
  e4:	ldr	w8, [x2]
  e8:	ldr	x9, [x2, #8]
  ec:	cmp	w10, w8
  f0:	b.ne	118 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x118>  // b.any
  f4:	ldr	x10, [x0, #8]
  f8:	cmp	x10, x9
  fc:	b.ne	118 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x118>  // b.any
 100:	ret
 104:	ldr	w8, [x2]
 108:	ldr	x9, [x2, #8]
 10c:	b	11c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x11c>
 110:	add	x0, x8, #0x20
 114:	ret
 118:	add	x0, x0, #0x10
 11c:	ldr	w10, [x0]
 120:	cmp	w10, w8
 124:	b.ne	138 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x138>  // b.any
 128:	ldr	x10, [x0, #8]
 12c:	cmp	x10, x9
 130:	b.ne	138 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x138>  // b.any
 134:	ret
 138:	add	x0, x0, #0x10
 13c:	ldr	x10, [x0, #8]
 140:	ldr	w11, [x0]
 144:	cmp	x10, x9
 148:	ccmp	w11, w8, #0x0, eq  // eq = none
 14c:	csel	x0, x0, x1, eq  // eq = none
 150:	ret

InstructionTables.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #80]
   8:	stp	x28, x27, [sp, #96]
   c:	stp	x26, x25, [sp, #112]
  10:	stp	x24, x23, [sp, #128]
  14:	stp	x22, x21, [sp, #144]
  18:	stp	x20, x19, [sp, #160]
  1c:	add	x29, sp, #0x50
  20:	stp	x1, x8, [sp]
  24:	ldr	x9, [x1, #8]
  28:	mov	x21, x0
  2c:	mov	w8, wzr
  30:	ldr	x10, [x9]
  34:	str	wzr, [x0, #80]
  38:	ldr	w9, [x10, #184]
  3c:	cbz	w9, 2d8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x2d8>
  40:	ldr	x16, [x10, #176]
  44:	mov	w17, #0x18                  	// #24
  48:	add	x10, x21, #0x48
  4c:	mov	w0, #0x1                   	// #1
  50:	madd	x18, x9, x17, x16
  54:	stp	x18, x10, [sp, #16]
  58:	b	68 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x68>
  5c:	add	x16, x16, #0x18
  60:	cmp	x16, x18
  64:	b.eq	2d8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x2d8>  // b.none
  68:	ldp	w9, w10, [x16, #8]
  6c:	subs	w9, w10, w9
  70:	b.eq	5c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x5c>  // b.none
  74:	ldr	w11, [x21, #192]
  78:	ldr	x10, [x21, #184]
  7c:	ldr	x13, [x16]
  80:	lsl	x14, x11, #3
  84:	cmp	w11, #0x4
  88:	add	x12, x10, x14
  8c:	b.cc	e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe8>  // b.lo, b.ul, b.last
  90:	lsr	x11, x11, #2
  94:	add	x14, x11, #0x1
  98:	add	x11, x10, #0x10
  9c:	ldur	x15, [x11, #-16]
  a0:	cmp	x15, x13
  a4:	b.eq	13c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x13c>  // b.none
  a8:	ldur	x15, [x11, #-8]
  ac:	cmp	x15, x13
  b0:	b.eq	144 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x144>  // b.none
  b4:	ldr	x15, [x11]
  b8:	cmp	x15, x13
  bc:	b.eq	150 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x150>  // b.none
  c0:	ldr	x15, [x11, #8]
  c4:	cmp	x15, x13
  c8:	b.eq	14c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x14c>  // b.none
  cc:	sub	x14, x14, #0x1
  d0:	cmp	x14, #0x1
  d4:	add	x11, x11, #0x20
  d8:	b.gt	9c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x9c>
  dc:	sub	x11, x11, #0x10
  e0:	sub	x14, x12, x11
  e4:	b	ec <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xec>
  e8:	mov	x11, x10
  ec:	asr	x14, x14, #3
  f0:	cmp	x14, #0x1
  f4:	b.eq	128 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x128>  // b.none
  f8:	cmp	x14, #0x2
  fc:	b.eq	118 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x118>  // b.none
 100:	cmp	x14, #0x3
 104:	b.ne	134 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x134>  // b.any
 108:	ldr	x14, [x11]
 10c:	cmp	x14, x13
 110:	b.eq	150 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x150>  // b.none
 114:	add	x11, x11, #0x8
 118:	ldr	x14, [x11]
 11c:	cmp	x14, x13
 120:	b.eq	150 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x150>  // b.none
 124:	add	x11, x11, #0x8
 128:	ldr	x14, [x11]
 12c:	cmp	x14, x13
 130:	b.eq	150 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x150>  // b.none
 134:	mov	x11, x12
 138:	b	150 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x150>
 13c:	sub	x11, x11, #0x10
 140:	b	150 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x150>
 144:	sub	x11, x11, #0x8
 148:	b	150 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x150>
 14c:	add	x11, x11, #0x8
 150:	ldr	x12, [x21, #64]
 154:	ldr	x13, [x12, #40]
 158:	cbz	x13, 398 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x398>
 15c:	ldr	w13, [x12, #48]
 160:	sub	x10, x11, x10
 164:	lsr	x11, x10, #3
 168:	cmp	w13, w11
 16c:	b.ls	378 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x378>  // b.plast
 170:	ldr	x11, [x12, #32]
 174:	ubfx	x19, x10, #3, #32
 178:	add	x13, x11, x19, lsl #5
 17c:	ldr	x10, [x13, #24]!
 180:	ldur	w27, [x13, #-16]
 184:	cbz	x10, 25c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x25c>
 188:	cbz	w27, 5c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x5c>
 18c:	mov	w19, wzr
 190:	mov	w26, w9
 194:	ldr	w20, [x10]
 198:	ldr	w9, [x12, #48]
 19c:	cmp	w9, w20
 1a0:	b.ls	378 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x378>  // b.plast
 1a4:	ldr	x9, [x12, #32]
 1a8:	add	x25, x9, x20, lsl #5
 1ac:	ldr	w10, [x25, #8]!
 1b0:	cbz	w10, 238 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x238>
 1b4:	ldr	w9, [x21, #84]
 1b8:	mov	w23, wzr
 1bc:	sub	w28, w10, #0x1
 1c0:	mul	w10, w10, w27
 1c4:	mov	x22, x26
 1c8:	lsl	w24, w0, w23
 1cc:	cmp	w8, w9
 1d0:	bfi	x22, x10, #32, #32
 1d4:	b.cs	210 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x210>  // b.hs, b.nlast
 1d8:	ldr	x9, [x21, #72]
 1dc:	umaddl	x8, w8, w17, x9
 1e0:	stp	x20, x24, [x8]
 1e4:	str	x22, [x8, #16]
 1e8:	ldp	w8, w9, [x21, #80]
 1ec:	cmp	w8, w9
 1f0:	b.cs	358 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x358>  // b.hs, b.nlast
 1f4:	add	w8, w8, #0x1
 1f8:	cmp	w28, w23
 1fc:	str	w8, [x21, #80]
 200:	b.eq	238 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x238>  // b.none
 204:	ldr	w10, [x25]
 208:	add	w23, w23, #0x1
 20c:	b	1c0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1c0>
 210:	ldr	x0, [sp, #24]
 214:	mov	x1, xzr
 218:	stp	x13, x16, [sp, #32]
 21c:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 220:	ldp	x13, x16, [sp, #32]
 224:	ldr	x18, [sp, #16]
 228:	ldr	w8, [x21, #80]
 22c:	mov	w0, #0x1                   	// #1
 230:	mov	w17, #0x18                  	// #24
 234:	b	1d8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1d8>
 238:	add	w19, w19, #0x1
 23c:	cmp	w19, w27
 240:	b.eq	5c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x5c>  // b.none
 244:	ldr	x12, [x21, #64]
 248:	ldr	x9, [x13]
 24c:	ldr	x11, [x12, #40]
 250:	add	x10, x9, w19, uxtw #2
 254:	cbnz	x11, 194 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x194>
 258:	b	398 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x398>
 25c:	cbz	w27, 5c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x5c>
 260:	ldr	w10, [x21, #84]
 264:	mov	w22, w9
 268:	mov	w20, wzr
 26c:	bfi	x22, x27, #32, #32
 270:	cmp	w8, w10
 274:	lsl	w23, w0, w20
 278:	b.cs	2b0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x2b0>  // b.hs, b.nlast
 27c:	ldr	x9, [x21, #72]
 280:	umaddl	x8, w8, w17, x9
 284:	stp	x19, x23, [x8]
 288:	str	x22, [x8, #16]
 28c:	ldp	w8, w10, [x21, #80]
 290:	cmp	w8, w10
 294:	b.cs	358 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x358>  // b.hs, b.nlast
 298:	add	w20, w20, #0x1
 29c:	add	w8, w8, #0x1
 2a0:	cmp	w27, w20
 2a4:	str	w8, [x21, #80]
 2a8:	b.ne	270 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x270>  // b.any
 2ac:	b	5c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x5c>
 2b0:	ldr	x0, [sp, #24]
 2b4:	mov	x1, xzr
 2b8:	mov	x24, x16
 2bc:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 2c0:	ldr	x18, [sp, #16]
 2c4:	ldr	w8, [x21, #80]
 2c8:	mov	w0, #0x1                   	// #1
 2cc:	mov	w17, #0x18                  	// #24
 2d0:	mov	x16, x24
 2d4:	b	27c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x27c>
 2d8:	mov	w10, #0x4                   	// #4
 2dc:	ldr	x9, [x21, #72]
 2e0:	stur	w10, [x29, #-32]
 2e4:	ldr	x10, [sp]
 2e8:	mov	w8, w8
 2ec:	stur	x8, [x29, #-8]
 2f0:	add	x19, x21, #0x18
 2f4:	stp	x10, x9, [x29, #-24]
 2f8:	ldr	x20, [x21, #40]
 2fc:	cmp	x20, x19
 300:	b.eq	32c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x32c>  // b.none
 304:	ldr	x0, [x20, #32]
 308:	sub	x1, x29, #0x20
 30c:	ldr	x8, [x0]
 310:	ldr	x8, [x8, #16]
 314:	blr	x8
 318:	mov	x0, x20
 31c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 320:	mov	x20, x0
 324:	cmp	x0, x19
 328:	b.ne	304 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x304>  // b.any
 32c:	ldr	x9, [sp, #8]
 330:	ldp	x20, x19, [sp, #160]
 334:	ldp	x22, x21, [sp, #144]
 338:	ldp	x24, x23, [sp, #128]
 33c:	ldp	x26, x25, [sp, #112]
 340:	ldp	x28, x27, [sp, #96]
 344:	ldp	x29, x30, [sp, #80]
 348:	mov	w8, #0x1                   	// #1
 34c:	str	x8, [x9]
 350:	add	sp, sp, #0xb0
 354:	ret
 358:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 35c:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 360:	adrp	x3, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 364:	add	x0, x0, #0x0
 368:	add	x1, x1, #0x0
 36c:	add	x3, x3, #0x0
 370:	mov	w2, #0x43                  	// #67
 374:	bl	0 <__assert_fail>
 378:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 37c:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 380:	adrp	x3, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 384:	add	x0, x0, #0x0
 388:	add	x1, x1, #0x0
 38c:	add	x3, x3, #0x0
 390:	mov	w2, #0x156                 	// #342
 394:	bl	0 <__assert_fail>
 398:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 39c:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 3a0:	adrp	x3, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 3a4:	add	x0, x0, #0x0
 3a8:	add	x1, x1, #0x0
 3ac:	add	x3, x3, #0x0
 3b0:	mov	w2, #0x154                 	// #340
 3b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca17InstructionTablesD2Ev:

0000000000000000 <_ZN4llvm3mca17InstructionTablesD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17InstructionTablesD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #184]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0xc8
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca17InstructionTablesD2Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #72]
  38:	add	x8, x19, #0x58
  3c:	cmp	x0, x8
  40:	b.eq	48 <_ZN4llvm3mca17InstructionTablesD2Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	mov	x0, x19
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca17InstructionTablesD0Ev:

0000000000000000 <_ZN4llvm3mca17InstructionTablesD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17InstructionTablesD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #184]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0xc8
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca17InstructionTablesD0Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #72]
  38:	add	x8, x19, #0x58
  3c:	cmp	x0, x8
  40:	b.eq	48 <_ZN4llvm3mca17InstructionTablesD0Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  50:	mov	x0, x19
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3mca17InstructionTables17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca17InstructionTables17hasWorkToCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm3mca5Stage10cycleStartEv:

0000000000000000 <_ZN4llvm3mca5Stage10cycleStartEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	add	x8, x21, x21, lsl #1
  6c:	lsl	x0, x8, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xec>
  c4:	add	x8, x8, x8, lsl #1
  c8:	lsl	x8, x8, #3
  cc:	mov	x9, x20
  d0:	ldr	x10, [x0, #16]
  d4:	ldr	q0, [x0], #24
  d8:	subs	x8, x8, #0x18
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9], #24
  e4:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xd0>  // b.any
  e8:	ldr	x0, [x19]
  ec:	add	x8, x19, #0x10
  f0:	cmp	x0, x8
  f4:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	str	x20, [x19]
 100:	str	w21, [x19, #12]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret

MicroOpQueueStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w9, [x0, #212]
  14:	ldr	w10, [x0, #72]
  18:	cmp	w10, w9
  1c:	b.ls	15c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x15c>  // b.plast
  20:	mov	x20, x8
  24:	ldr	x8, [x0, #64]
  28:	mov	x19, x0
  2c:	ldr	q0, [x8, x9, lsl #4]
  30:	str	q0, [sp]
  34:	ldr	x8, [sp, #8]
  38:	cbz	x8, 11c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x11c>
  3c:	ldr	x0, [x19, #8]
  40:	cbz	x0, 11c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x11c>
  44:	ldr	x8, [x0]
  48:	mov	x1, sp
  4c:	ldr	x8, [x8, #16]
  50:	blr	x8
  54:	tbz	w0, #0, 11c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x11c>
  58:	ldr	x0, [x19, #8]
  5c:	cbz	x0, 134 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x134>
  60:	ldr	x8, [x0]
  64:	mov	x1, sp
  68:	ldr	x8, [x8, #16]
  6c:	blr	x8
  70:	tbz	w0, #0, 134 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x134>
  74:	ldr	x0, [x19, #8]
  78:	mov	x1, sp
  7c:	ldr	x8, [x0]
  80:	ldr	x9, [x8, #48]
  84:	mov	x8, x20
  88:	blr	x9
  8c:	ldr	x9, [x20]
  90:	tst	x9, #0xfffffffffffffffe
  94:	and	x8, x9, #0xfffffffffffffffe
  98:	cset	w9, ne  // ne = any
  9c:	orr	x9, x8, x9
  a0:	str	x9, [x20]
  a4:	cbnz	x8, ac <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0xac>
  a8:	cbnz	x9, 154 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x154>
  ac:	cbnz	x8, 124 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x124>
  b0:	ldr	w8, [x19, #212]
  b4:	ldr	w9, [x19, #72]
  b8:	cmp	w9, w8
  bc:	b.ls	15c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x15c>  // b.plast
  c0:	ldr	x10, [x19, #64]
  c4:	add	x11, x10, x8, lsl #4
  c8:	str	xzr, [x11, #8]
  cc:	ldr	x11, [sp, #8]
  d0:	ldr	w12, [x19, #224]
  d4:	ldr	x11, [x11]
  d8:	ldr	w11, [x11, #316]
  dc:	cmp	w11, w9
  e0:	csel	w11, w11, w9, cc  // cc = lo, ul, last
  e4:	cmp	w11, #0x0
  e8:	csinc	w11, w11, wzr, ne  // ne = any
  ec:	add	w8, w11, w8
  f0:	add	w11, w12, w11
  f4:	udiv	w12, w8, w9
  f8:	msub	w8, w12, w9, w8
  fc:	str	w11, [x19, #224]
 100:	str	w8, [x19, #212]
 104:	add	x8, x10, w8, uxtw #4
 108:	ldr	w9, [x8]
 10c:	str	w9, [sp]
 110:	ldr	x8, [x8, #8]
 114:	str	x8, [sp, #8]
 118:	cbnz	x8, 3c <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x3c>
 11c:	mov	w8, #0x1                   	// #1
 120:	str	x8, [x20]
 124:	ldp	x20, x19, [sp, #32]
 128:	ldp	x29, x30, [sp, #16]
 12c:	add	sp, sp, #0x30
 130:	ret
 134:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 138:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 13c:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 140:	add	x0, x0, #0x0
 144:	add	x1, x1, #0x0
 148:	add	x3, x3, #0x0
 14c:	mov	w2, #0x47                  	// #71
 150:	bl	0 <__assert_fail>
 154:	mov	x0, x20
 158:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 15c:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 160:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 164:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x95                  	// #149
 178:	bl	0 <__assert_fail>

000000000000017c <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb>:
 17c:	stp	x29, x30, [sp, #-32]!
 180:	stp	x20, x19, [sp, #16]
 184:	mov	x29, sp
 188:	str	xzr, [x0, #8]
 18c:	adrp	x11, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 190:	ldr	x11, [x11]
 194:	adrp	x12, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 198:	ldr	d0, [x12]
 19c:	mov	x9, x0
 1a0:	cmp	w1, #0x0
 1a4:	add	x10, x0, #0x50
 1a8:	str	wzr, [x9, #24]!
 1ac:	add	x11, x11, #0x10
 1b0:	csinc	w20, w1, wzr, ne  // ne = any
 1b4:	mov	x19, x0
 1b8:	and	w8, w3, #0x1
 1bc:	stp	xzr, x9, [x0, #32]
 1c0:	stp	x9, xzr, [x0, #48]
 1c4:	str	x11, [x0]
 1c8:	str	x10, [x0, #64]!
 1cc:	cmp	w20, #0x8
 1d0:	str	xzr, [x19, #208]
 1d4:	stp	w2, wzr, [x19, #216]
 1d8:	str	d0, [x19, #72]
 1dc:	strb	w8, [x19, #228]
 1e0:	b.ls	200 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0x84>  // b.plast
 1e4:	mov	x1, x20
 1e8:	bl	0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 1ec:	ldr	w9, [x19, #72]
 1f0:	cmp	w9, w20
 1f4:	b.eq	274 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xf8>  // b.none
 1f8:	ldr	x10, [x19, #64]
 1fc:	b	204 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0x88>
 200:	mov	w9, wzr
 204:	mov	w12, w9
 208:	add	x8, x10, x20, lsl #4
 20c:	mvn	x11, x12
 210:	add	x11, x8, x11, lsl #4
 214:	sub	x11, x11, x10
 218:	lsr	x11, x11, #4
 21c:	add	x9, x10, w9, uxtw #4
 220:	cbz	x11, 260 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xe4>
 224:	add	x11, x11, #0x1
 228:	add	x12, x10, x12, lsl #4
 22c:	and	x10, x11, #0x1ffffffffffffffe
 230:	add	x9, x9, x10, lsl #4
 234:	add	x12, x12, #0x10
 238:	mov	x13, x10
 23c:	stur	wzr, [x12, #-16]
 240:	str	wzr, [x12]
 244:	stur	xzr, [x12, #-8]
 248:	str	xzr, [x12, #8]
 24c:	subs	x13, x13, #0x2
 250:	add	x12, x12, #0x20
 254:	b.ne	23c <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xc0>  // b.any
 258:	cmp	x11, x10
 25c:	b.eq	274 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xf8>  // b.none
 260:	str	wzr, [x9]
 264:	str	xzr, [x9, #8]
 268:	add	x9, x9, #0x10
 26c:	cmp	x9, x8
 270:	b.ne	260 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xe4>  // b.any
 274:	ldr	w8, [x19, #76]
 278:	cmp	w8, w20
 27c:	b.cc	294 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0x118>  // b.lo, b.ul, b.last
 280:	str	w20, [x19, #72]
 284:	str	w20, [x19, #224]
 288:	ldp	x20, x19, [sp, #16]
 28c:	ldp	x29, x30, [sp], #32
 290:	ret
 294:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 298:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 29c:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 2a0:	add	x0, x0, #0x0
 2a4:	add	x1, x1, #0x0
 2a8:	add	x3, x3, #0x0
 2ac:	mov	w2, #0x43                  	// #67
 2b0:	bl	0 <__assert_fail>

00000000000002b4 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>:
 2b4:	stp	x29, x30, [sp, #-16]!
 2b8:	mov	x29, sp
 2bc:	ldr	w9, [x0, #208]
 2c0:	ldr	w10, [x0, #72]
 2c4:	cmp	w10, w9
 2c8:	b.ls	334 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE+0x80>  // b.plast
 2cc:	ldr	x11, [x0, #64]
 2d0:	ldr	w12, [x1]
 2d4:	add	x11, x11, x9, lsl #4
 2d8:	str	w12, [x11]
 2dc:	ldr	x12, [x1, #8]
 2e0:	str	x12, [x11, #8]
 2e4:	ldr	x11, [x1, #8]
 2e8:	ldp	w12, w13, [x0, #220]
 2ec:	ldr	x11, [x11]
 2f0:	add	w12, w12, #0x1
 2f4:	ldr	w11, [x11, #316]
 2f8:	str	w12, [x0, #220]
 2fc:	mov	w12, #0x1                   	// #1
 300:	cmp	w11, w10
 304:	csel	w11, w11, w10, cc  // cc = lo, ul, last
 308:	cmp	w11, #0x0
 30c:	csinc	w11, w11, wzr, ne  // ne = any
 310:	add	w9, w11, w9
 314:	sub	w11, w13, w11
 318:	udiv	w13, w9, w10
 31c:	msub	w9, w13, w10, w9
 320:	str	w11, [x0, #224]
 324:	str	w9, [x0, #208]
 328:	str	x12, [x8]
 32c:	ldp	x29, x30, [sp], #16
 330:	ret
 334:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 338:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 33c:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 340:	add	x0, x0, #0x0
 344:	add	x1, x1, #0x0
 348:	add	x3, x3, #0x0
 34c:	mov	w2, #0x95                  	// #149
 350:	bl	0 <__assert_fail>

0000000000000354 <_ZN4llvm3mca17MicroOpQueueStage10cycleStartEv>:
 354:	ldrb	w9, [x0, #228]
 358:	str	wzr, [x0, #220]
 35c:	cbz	w9, 36c <_ZN4llvm3mca17MicroOpQueueStage10cycleStartEv+0x18>
 360:	mov	w9, #0x1                   	// #1
 364:	str	x9, [x8]
 368:	ret
 36c:	b	0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>

0000000000000370 <_ZN4llvm3mca17MicroOpQueueStage8cycleEndEv>:
 370:	ldrb	w9, [x0, #228]
 374:	cbz	w9, 37c <_ZN4llvm3mca17MicroOpQueueStage8cycleEndEv+0xc>
 378:	b	0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 37c:	mov	w9, #0x1                   	// #1
 380:	str	x9, [x8]
 384:	ret

Disassembly of section .text._ZN4llvm3mca17MicroOpQueueStageD2Ev:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStageD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17MicroOpQueueStageD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #64]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x50
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca17MicroOpQueueStageD2Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca17MicroOpQueueStageD0Ev:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm3mca17MicroOpQueueStageD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #64]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x50
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm3mca17MicroOpQueueStageD0Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE>:
   0:	ldr	w8, [x0, #216]
   4:	cbz	w8, 1c <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE+0x1c>
   8:	ldr	w9, [x0, #220]
   c:	cmp	w9, w8
  10:	b.ne	1c <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE+0x1c>  // b.any
  14:	mov	w0, wzr
  18:	ret
  1c:	ldr	x8, [x1, #8]
  20:	ldr	w9, [x0, #72]
  24:	ldr	w10, [x0, #224]
  28:	ldr	x8, [x8]
  2c:	ldr	w8, [x8, #316]
  30:	cmp	w8, w9
  34:	csel	w8, w8, w9, cc  // cc = lo, ul, last
  38:	cmp	w8, #0x0
  3c:	csinc	w8, w8, wzr, ne  // ne = any
  40:	cmp	w8, w10
  44:	cset	w0, ls  // ls = plast
  48:	ret

Disassembly of section .text._ZNK4llvm3mca17MicroOpQueueStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca17MicroOpQueueStage17hasWorkToCompleteEv>:
   0:	ldr	w8, [x0, #224]
   4:	ldr	w9, [x0, #72]
   8:	cmp	w9, w8
   c:	cset	w0, ne  // ne = any
  10:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

RetireStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca11RetireStage10cycleStartEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #64]
  18:	mov	x20, x8
  1c:	ldp	w10, w9, [x0, #16]
  20:	cmp	w9, w10
  24:	b.eq	6c <_ZN4llvm3mca11RetireStage10cycleStartEv+0x6c>  // b.none
  28:	ldr	w21, [x0, #24]
  2c:	mov	w22, w21
  30:	cbz	w21, 38 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x38>
  34:	cbz	w22, 6c <_ZN4llvm3mca11RetireStage10cycleStartEv+0x6c>
  38:	bl	0 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>
  3c:	ldrb	w8, [x0, #20]
  40:	cbz	w8, 6c <_ZN4llvm3mca11RetireStage10cycleStartEv+0x6c>
  44:	mov	x1, x0
  48:	mov	x0, x19
  4c:	bl	84 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE>
  50:	ldr	x0, [x19, #64]
  54:	bl	0 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv>
  58:	ldr	x0, [x19, #64]
  5c:	sub	w22, w22, #0x1
  60:	ldp	w9, w8, [x0, #16]
  64:	cmp	w8, w9
  68:	b.ne	30 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x30>  // b.any
  6c:	mov	w8, #0x1                   	// #1
  70:	str	x8, [x20]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldp	x22, x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret

0000000000000084 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE>:
  84:	sub	sp, sp, #0x70
  88:	stp	x29, x30, [sp, #64]
  8c:	stp	x22, x21, [sp, #80]
  90:	stp	x20, x19, [sp, #96]
  94:	add	x29, sp, #0x40
  98:	adrp	x8, 0 <_ZN4llvm9DebugFlagE>
  9c:	ldr	x8, [x8]
  a0:	mov	x20, x1
  a4:	mov	x19, x0
  a8:	ldrb	w8, [x8]
  ac:	cbz	w8, 150 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xcc>
  b0:	adrp	x0, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
  b4:	add	x0, x0, #0x0
  b8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
  bc:	tbz	w0, #0, 150 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xcc>
  c0:	bl	0 <_ZN4llvm4dbgsEv>
  c4:	ldp	x9, x8, [x0, #16]
  c8:	mov	x21, x0
  cc:	sub	x9, x9, x8
  d0:	cmp	x9, #0x19
  d4:	b.hi	f4 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x70>  // b.pmore
  d8:	adrp	x1, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
  dc:	add	x1, x1, #0x0
  e0:	mov	w2, #0x1a                  	// #26
  e4:	mov	x0, x21
  e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ec:	mov	x21, x0
  f0:	b	118 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x94>
  f4:	adrp	x9, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
  f8:	add	x9, x9, #0x0
  fc:	ldur	q0, [x9, #10]
 100:	ldr	q1, [x9]
 104:	stur	q0, [x8, #10]
 108:	str	q1, [x8]
 10c:	ldr	x8, [x21, #24]
 110:	add	x8, x8, #0x1a
 114:	str	x8, [x21, #24]
 118:	ldr	w1, [x20]
 11c:	mov	x0, x21
 120:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 124:	ldp	x9, x8, [x21, #16]
 128:	cmp	x8, x9
 12c:	b.cs	144 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xc0>  // b.hs, b.nlast
 130:	add	x9, x8, #0x1
 134:	mov	w10, #0xa                   	// #10
 138:	str	x9, [x21, #24]
 13c:	strb	w10, [x8]
 140:	b	150 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xcc>
 144:	mov	w1, #0xa                   	// #10
 148:	mov	x0, x21
 14c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 150:	ldr	x8, [x19, #72]
 154:	add	x9, sp, #0x20
 158:	add	x1, x9, #0x10
 15c:	ldr	w21, [x8, #24]
 160:	adrp	x8, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
 164:	ldr	d0, [x8]
 168:	str	x1, [sp, #32]
 16c:	cmp	w21, #0x5
 170:	str	d0, [sp, #40]
 174:	b.cc	190 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x10c>  // b.lo, b.ul, b.last
 178:	add	x0, sp, #0x20
 17c:	mov	w3, #0x4                   	// #4
 180:	mov	x2, x21
 184:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 188:	ldr	w8, [sp, #44]
 18c:	b	194 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x110>
 190:	mov	w8, #0x4                   	// #4
 194:	cmp	x8, x21
 198:	b.cc	290 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x20c>  // b.lo, b.ul, b.last
 19c:	str	w21, [sp, #40]
 1a0:	cbz	w21, 1b4 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x130>
 1a4:	ldr	x0, [sp, #32]
 1a8:	lsl	x2, x21, #2
 1ac:	mov	w1, wzr
 1b0:	bl	0 <memset>
 1b4:	ldr	x21, [x20, #8]
 1b8:	ldr	x8, [x21]
 1bc:	ldrb	w9, [x8, #324]
 1c0:	cbnz	w9, 1cc <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x148>
 1c4:	ldrb	w8, [x8, #325]
 1c8:	cbz	w8, 1e0 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x15c>
 1cc:	ldr	x0, [x19, #80]
 1d0:	mov	x1, x20
 1d4:	ldr	x8, [x0]
 1d8:	ldr	x8, [x8, #40]
 1dc:	blr	x8
 1e0:	ldr	w8, [x21, #24]
 1e4:	cbz	w8, 214 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x190>
 1e8:	ldr	x21, [x21, #16]
 1ec:	add	x8, x8, x8, lsl #4
 1f0:	lsl	x22, x8, #3
 1f4:	ldr	x0, [x19, #72]
 1f8:	ldr	x2, [sp, #32]
 1fc:	ldr	w3, [sp, #40]
 200:	mov	x1, x21
 204:	bl	0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE>
 208:	subs	x22, x22, #0x88
 20c:	add	x21, x21, #0x88
 210:	b.ne	1f4 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x170>  // b.any
 214:	ldr	x0, [sp, #32]
 218:	ldr	w8, [sp, #40]
 21c:	mov	w9, #0x1                   	// #1
 220:	str	w9, [sp]
 224:	stp	x20, x0, [sp, #8]
 228:	str	x8, [sp, #24]
 22c:	ldr	x20, [x19, #40]
 230:	add	x19, x19, #0x18
 234:	cmp	x20, x19
 238:	b.eq	268 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x1e4>  // b.none
 23c:	ldr	x0, [x20, #32]
 240:	mov	x1, sp
 244:	ldr	x8, [x0]
 248:	ldr	x8, [x8, #16]
 24c:	blr	x8
 250:	mov	x0, x20
 254:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 258:	mov	x20, x0
 25c:	cmp	x0, x19
 260:	b.ne	23c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x1b8>  // b.any
 264:	ldr	x0, [sp, #32]
 268:	add	x8, sp, #0x20
 26c:	add	x8, x8, #0x10
 270:	cmp	x0, x8
 274:	b.eq	27c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x1f8>  // b.none
 278:	bl	0 <free>
 27c:	ldp	x20, x19, [sp, #96]
 280:	ldp	x22, x21, [sp, #80]
 284:	ldp	x29, x30, [sp, #64]
 288:	add	sp, sp, #0x70
 28c:	ret
 290:	adrp	x0, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
 294:	adrp	x1, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
 298:	adrp	x3, 0 <_ZN4llvm3mca11RetireStage10cycleStartEv>
 29c:	add	x0, x0, #0x0
 2a0:	add	x1, x1, #0x0
 2a4:	add	x3, x3, #0x0
 2a8:	mov	w2, #0x43                  	// #67
 2ac:	bl	0 <__assert_fail>

00000000000002b0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>:
 2b0:	stp	x29, x30, [sp, #-32]!
 2b4:	str	x19, [sp, #16]
 2b8:	mov	x29, sp
 2bc:	ldr	x9, [x1, #8]
 2c0:	ldr	x0, [x0, #64]
 2c4:	mov	x19, x8
 2c8:	ldr	w1, [x9, #792]
 2cc:	bl	0 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj>
 2d0:	mov	w8, #0x1                   	// #1
 2d4:	str	x8, [x19]
 2d8:	ldr	x19, [sp, #16]
 2dc:	ldp	x29, x30, [sp], #32
 2e0:	ret

Disassembly of section .text._ZN4llvm3mca11RetireStageD0Ev:

0000000000000000 <_ZN4llvm3mca11RetireStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3mca11RetireStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca11RetireStage17hasWorkToCompleteEv>:
   0:	ldr	x8, [x0, #64]
   4:	ldp	w8, w9, [x8, #16]
   8:	cmp	w9, w8
   c:	cset	w0, ne  // ne = any
  10:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Stage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca5StageD1Ev>:
   0:	adrp	x8, 0 <_ZN4llvm3mca5StageD1Ev>
   4:	ldr	x1, [x0, #32]
   8:	ldr	x8, [x8]
   c:	add	x9, x8, #0x10
  10:	add	x8, x0, #0x10
  14:	str	x9, [x0]
  18:	mov	x0, x8
  1c:	b	0 <_ZN4llvm3mca5StageD1Ev>

0000000000000020 <_ZN4llvm3mca5StageD0Ev>:
  20:	brk	#0x1

0000000000000024 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>:
  24:	stp	x29, x30, [sp, #-64]!
  28:	str	x23, [sp, #16]
  2c:	stp	x22, x21, [sp, #32]
  30:	stp	x20, x19, [sp, #48]
  34:	mov	x29, sp
  38:	ldr	x9, [x0, #32]
  3c:	mov	x19, x1
  40:	add	x23, x0, #0x10
  44:	add	x20, x0, #0x18
  48:	cbz	x9, 7c <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x58>
  4c:	ldr	x8, [x9, #32]
  50:	mov	x21, x9
  54:	add	x9, x9, #0x10
  58:	add	x10, x21, #0x18
  5c:	cmp	x8, x19
  60:	csel	x9, x9, x10, hi  // hi = pmore
  64:	ldr	x9, [x9]
  68:	cbnz	x9, 4c <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x28>
  6c:	cmp	x8, x19
  70:	mov	x0, x21
  74:	b.hi	80 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x5c>  // b.pmore
  78:	b	94 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x70>
  7c:	mov	x21, x20
  80:	ldr	x8, [x23, #24]
  84:	cmp	x8, x21
  88:	b.eq	a0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x7c>  // b.none
  8c:	mov	x0, x21
  90:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  94:	ldr	x8, [x0, #32]
  98:	cmp	x8, x19
  9c:	b.cs	ec <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xc8>  // b.hs, b.nlast
  a0:	cbz	x21, ec <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xc8>
  a4:	cmp	x20, x21
  a8:	b.eq	bc <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x98>  // b.none
  ac:	ldr	x8, [x21, #32]
  b0:	cmp	x8, x19
  b4:	cset	w22, hi  // hi = pmore
  b8:	b	c0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x9c>
  bc:	mov	w22, #0x1                   	// #1
  c0:	mov	w0, #0x28                  	// #40
  c4:	bl	0 <_Znwm>
  c8:	mov	x1, x0
  cc:	str	x19, [x0, #32]
  d0:	mov	w0, w22
  d4:	mov	x2, x21
  d8:	mov	x3, x20
  dc:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  e0:	ldr	x8, [x23, #40]
  e4:	add	x8, x8, #0x1
  e8:	str	x8, [x23, #40]
  ec:	ldp	x20, x19, [sp, #48]
  f0:	ldp	x22, x21, [sp, #32]
  f4:	ldr	x23, [sp, #16]
  f8:	ldp	x29, x30, [sp], #64
  fc:	ret

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm3mca5Stage10cycleStartEv:

0000000000000000 <_ZN4llvm3mca5Stage10cycleStartEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	w9, #0x1                   	// #1
   4:	str	x9, [x8]
   8:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 3c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x3c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
  28:	ldr	x21, [x20, #16]
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	mov	x20, x21
  38:	cbnz	x21, 1c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x1c>
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Support.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca14ResourceCyclespLERKS1_>:
   0:	ldr	w8, [x0, #4]
   4:	ldr	w9, [x1, #4]
   8:	cmp	w8, w9
   c:	b.ne	24 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x24>  // b.any
  10:	ldr	w8, [x1]
  14:	ldr	w9, [x0]
  18:	add	w8, w9, w8
  1c:	str	w8, [x0]
  20:	ret
  24:	mov	x10, x8
  28:	cbz	w9, 48 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x48>
  2c:	mov	x11, x8
  30:	mov	x12, x9
  34:	mov	x10, x12
  38:	udiv	x12, x11, x12
  3c:	msub	x12, x12, x10, x11
  40:	mov	x11, x10
  44:	cbnz	x12, 34 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x34>
  48:	ldr	w12, [x0]
  4c:	mul	w11, w9, w8
  50:	ldr	w13, [x1]
  54:	udiv	w10, w11, w10
  58:	udiv	w8, w10, w8
  5c:	udiv	w9, w10, w9
  60:	mul	w8, w8, w12
  64:	madd	w8, w9, w13, w8
  68:	stp	w8, w10, [x0]
  6c:	ret

0000000000000070 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>:
  70:	sub	sp, sp, #0x90
  74:	stp	x29, x30, [sp, #48]
  78:	stp	x28, x27, [sp, #64]
  7c:	stp	x26, x25, [sp, #80]
  80:	stp	x24, x23, [sp, #96]
  84:	stp	x22, x21, [sp, #112]
  88:	stp	x20, x19, [sp, #128]
  8c:	add	x29, sp, #0x30
  90:	ldr	w9, [x0, #48]
  94:	cmp	x2, x9
  98:	b.ne	4d4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x464>  // b.any
  9c:	mov	x20, x2
  a0:	cbz	x2, 474 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x404>
  a4:	mov	x19, x0
  a8:	mov	x21, x1
  ac:	cmp	w9, #0x2
  b0:	str	xzr, [x1]
  b4:	b.cc	18c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x11c>  // b.lo, b.ul, b.last
  b8:	ldr	x8, [x19, #40]
  bc:	cbz	x8, 494 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x424>
  c0:	ldr	x11, [x19, #32]
  c4:	mov	w8, wzr
  c8:	mov	w10, #0x1                   	// #1
  cc:	mov	w12, #0x1                   	// #1
  d0:	add	x11, x11, #0x38
  d4:	b	e8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x78>
  d8:	add	x12, x12, #0x1
  dc:	cmp	x20, x12
  e0:	add	x11, x11, #0x20
  e4:	b.eq	108 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x98>  // b.none
  e8:	ldr	x13, [x11]
  ec:	cbnz	x13, d8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x68>
  f0:	cmp	x20, x12
  f4:	b.ls	474 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x404>  // b.plast
  f8:	lsl	x13, x10, x8
  fc:	add	w8, w8, #0x1
 100:	str	x13, [x21, x12, lsl #3]
 104:	b	d8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x68>
 108:	cmp	w9, #0x2
 10c:	b.cc	18c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x11c>  // b.lo, b.ul, b.last
 110:	ldr	x9, [x19, #40]
 114:	cbz	x9, 494 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x424>
 118:	ldr	x9, [x19, #32]
 11c:	mov	w10, #0x1                   	// #1
 120:	mov	w11, #0x1                   	// #1
 124:	b	138 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xc8>
 128:	add	w8, w8, #0x1
 12c:	add	x11, x11, #0x1
 130:	cmp	x11, x20
 134:	b.eq	18c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x11c>  // b.none
 138:	add	x12, x9, x11, lsl #5
 13c:	ldr	x12, [x12, #24]
 140:	cbz	x12, 12c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xbc>
 144:	cmp	x20, x11
 148:	b.ls	474 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x404>  // b.plast
 14c:	lsl	x13, x10, x8
 150:	str	x13, [x21, x11, lsl #3]
 154:	add	x14, x9, x11, lsl #5
 158:	ldr	w14, [x14, #8]
 15c:	cbz	w14, 128 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xb8>
 160:	mov	x15, xzr
 164:	ldr	w16, [x12, x15, lsl #2]
 168:	cmp	x20, x16
 16c:	b.ls	474 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x404>  // b.plast
 170:	ldr	x16, [x21, x16, lsl #3]
 174:	add	x15, x15, #0x1
 178:	cmp	x15, x14
 17c:	orr	x13, x13, x16
 180:	str	x13, [x21, x11, lsl #3]
 184:	b.cc	164 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xf4>  // b.lo, b.ul, b.last
 188:	b	128 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xb8>
 18c:	adrp	x28, 0 <_ZN4llvm9DebugFlagE>
 190:	ldr	x28, [x28]
 194:	ldrb	w8, [x28]
 198:	cbz	w8, 218 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1a8>
 19c:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1a0:	add	x0, x0, #0x0
 1a4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 1a8:	tbz	w0, #0, 218 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1a8>
 1ac:	bl	0 <_ZN4llvm4dbgsEv>
 1b0:	ldp	x9, x8, [x0, #16]
 1b4:	sub	x9, x9, x8
 1b8:	cmp	x9, #0x19
 1bc:	b.hi	1d8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x168>  // b.pmore
 1c0:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1c4:	add	x1, x1, #0x0
 1c8:	mov	w2, #0x1a                  	// #26
 1cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 1d0:	ldr	x8, [x0, #24]
 1d4:	b	1fc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x18c>
 1d8:	adrp	x9, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 1dc:	add	x9, x9, #0x0
 1e0:	ldur	q0, [x9, #10]
 1e4:	ldr	q1, [x9]
 1e8:	stur	q0, [x8, #10]
 1ec:	str	q1, [x8]
 1f0:	ldr	x8, [x0, #24]
 1f4:	add	x8, x8, #0x1a
 1f8:	str	x8, [x0, #24]
 1fc:	ldr	x9, [x0, #16]
 200:	cmp	x9, x8
 204:	b.ne	438 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3c8>  // b.any
 208:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 20c:	add	x1, x1, #0x0
 210:	mov	w2, #0x1                   	// #1
 214:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 218:	ldr	w23, [x19, #48]
 21c:	cbz	w23, 454 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3e4>
 220:	adrp	x22, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 224:	mov	x24, xzr
 228:	add	x22, x22, #0x0
 22c:	b	24c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1dc>
 230:	add	x8, x0, #0x1
 234:	str	x8, [x25, #24]
 238:	mov	w8, #0xa                   	// #10
 23c:	strb	w8, [x0]
 240:	add	x24, x24, #0x1
 244:	cmp	x24, x23
 248:	b.eq	454 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3e4>  // b.none
 24c:	ldr	x8, [x19, #40]
 250:	cbz	x8, 494 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x424>
 254:	ldr	w8, [x19, #48]
 258:	cmp	x24, x8
 25c:	b.cs	4b4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x444>  // b.hs, b.nlast
 260:	ldrb	w8, [x28]
 264:	cbz	w8, 240 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1d0>
 268:	ldr	x26, [x19, #32]
 26c:	mov	x0, x22
 270:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 274:	tbz	w0, #0, 240 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1d0>
 278:	bl	0 <_ZN4llvm4dbgsEv>
 27c:	ldp	x9, x8, [x0, #16]
 280:	cmp	x8, x9
 284:	b.cs	29c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x22c>  // b.hs, b.nlast
 288:	add	x9, x8, #0x1
 28c:	str	x9, [x0, #24]
 290:	mov	w9, #0x5b                  	// #91
 294:	strb	w9, [x8]
 298:	b	2a4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x234>
 29c:	mov	w1, #0x5b                  	// #91
 2a0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 2a4:	mov	w8, #0x2                   	// #2
 2a8:	add	x1, sp, #0x18
 2ac:	stp	xzr, x24, [sp, #24]
 2b0:	str	w8, [sp, #40]
 2b4:	strh	wzr, [sp, #44]
 2b8:	strb	wzr, [sp, #46]
 2bc:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
 2c0:	ldp	x9, x8, [x0, #16]
 2c4:	sub	x9, x9, x8
 2c8:	cmp	x9, #0x1
 2cc:	b.hi	2e8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x278>  // b.pmore
 2d0:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 2d4:	mov	w2, #0x2                   	// #2
 2d8:	add	x1, x1, #0x0
 2dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 2e0:	ldr	x8, [x0, #24]
 2e4:	b	2fc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x28c>
 2e8:	mov	w9, #0x205d                	// #8285
 2ec:	strh	w9, [x8]
 2f0:	ldr	x8, [x0, #24]
 2f4:	add	x8, x8, #0x2
 2f8:	str	x8, [x0, #24]
 2fc:	ldr	x9, [x0, #16]
 300:	sub	x9, x9, x8
 304:	cmp	x9, #0x2
 308:	b.hi	320 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x2b0>  // b.pmore
 30c:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 310:	mov	w2, #0x3                   	// #3
 314:	add	x1, x1, #0x0
 318:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 31c:	b	33c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x2cc>
 320:	mov	w9, #0x20                  	// #32
 324:	strb	w9, [x8, #2]
 328:	mov	w9, #0x2d20                	// #11552
 32c:	strh	w9, [x8]
 330:	ldr	x8, [x0, #24]
 334:	add	x8, x8, #0x3
 338:	str	x8, [x0, #24]
 33c:	cmp	x20, x24
 340:	b.ls	474 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x404>  // b.plast
 344:	ldr	x8, [x21, x24, lsl #3]
 348:	mov	w9, #0x10                  	// #16
 34c:	str	w9, [sp, #16]
 350:	mov	w9, #0x1                   	// #1
 354:	mov	x1, sp
 358:	strh	w9, [sp, #20]
 35c:	stp	x8, xzr, [sp]
 360:	strb	w9, [sp, #22]
 364:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
 368:	ldp	x9, x8, [x0, #16]
 36c:	mov	x25, x0
 370:	sub	x9, x9, x8
 374:	cmp	x9, #0x2
 378:	b.hi	398 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x328>  // b.pmore
 37c:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 380:	mov	w2, #0x3                   	// #3
 384:	mov	x0, x25
 388:	add	x1, x1, #0x0
 38c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 390:	mov	x25, x0
 394:	b	3b4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x344>
 398:	mov	w9, #0x20                  	// #32
 39c:	strb	w9, [x8, #2]
 3a0:	mov	w9, #0x2d20                	// #11552
 3a4:	strh	w9, [x8]
 3a8:	ldr	x8, [x25, #24]
 3ac:	add	x8, x8, #0x3
 3b0:	str	x8, [x25, #24]
 3b4:	lsl	x8, x24, #5
 3b8:	ldr	x26, [x26, x8]
 3bc:	cbz	x26, 3d0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x360>
 3c0:	mov	x0, x26
 3c4:	bl	0 <strlen>
 3c8:	mov	x27, x0
 3cc:	b	3d4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x364>
 3d0:	mov	x27, xzr
 3d4:	ldp	x8, x0, [x25, #16]
 3d8:	sub	x8, x8, x0
 3dc:	cmp	x27, x8
 3e0:	b.ls	400 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x390>  // b.plast
 3e4:	mov	x0, x25
 3e8:	mov	x1, x26
 3ec:	mov	x2, x27
 3f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3f4:	mov	x25, x0
 3f8:	ldr	x0, [x0, #24]
 3fc:	b	41c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3ac>
 400:	cbz	x27, 41c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3ac>
 404:	mov	x1, x26
 408:	mov	x2, x27
 40c:	bl	0 <memcpy>
 410:	ldr	x8, [x25, #24]
 414:	add	x0, x8, x27
 418:	str	x0, [x25, #24]
 41c:	ldr	x8, [x25, #16]
 420:	cmp	x0, x8
 424:	b.cc	230 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1c0>  // b.lo, b.ul, b.last
 428:	mov	w1, #0xa                   	// #10
 42c:	mov	x0, x25
 430:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 434:	b	240 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1d0>
 438:	mov	w9, #0xa                   	// #10
 43c:	strb	w9, [x8]
 440:	ldr	x8, [x0, #24]
 444:	add	x8, x8, #0x1
 448:	str	x8, [x0, #24]
 44c:	ldr	w23, [x19, #48]
 450:	cbnz	w23, 220 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1b0>
 454:	ldp	x20, x19, [sp, #128]
 458:	ldp	x22, x21, [sp, #112]
 45c:	ldp	x24, x23, [sp, #96]
 460:	ldp	x26, x25, [sp, #80]
 464:	ldp	x28, x27, [sp, #64]
 468:	ldp	x29, x30, [sp, #48]
 46c:	add	sp, sp, #0x90
 470:	ret
 474:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 478:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 47c:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 480:	add	x0, x0, #0x0
 484:	add	x1, x1, #0x0
 488:	add	x3, x3, #0x0
 48c:	mov	w2, #0x1ab                 	// #427
 490:	bl	0 <__assert_fail>
 494:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 498:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 49c:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4a0:	add	x0, x0, #0x0
 4a4:	add	x1, x1, #0x0
 4a8:	add	x3, x3, #0x0
 4ac:	mov	w2, #0x154                 	// #340
 4b0:	bl	0 <__assert_fail>
 4b4:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4b8:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4bc:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4c0:	add	x0, x0, #0x0
 4c4:	add	x1, x1, #0x0
 4c8:	add	x3, x3, #0x0
 4cc:	mov	w2, #0x156                 	// #342
 4d0:	bl	0 <__assert_fail>
 4d4:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4d8:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4dc:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4e0:	add	x0, x0, #0x0
 4e4:	add	x1, x1, #0x0
 4e8:	add	x3, x3, #0x0
 4ec:	mov	w2, #0x2c                  	// #44
 4f0:	bl	0 <__assert_fail>

00000000000004f4 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE>:
 4f4:	stp	x29, x30, [sp, #-16]!
 4f8:	mov	x29, sp
 4fc:	ldr	w8, [x0, #48]
 500:	ucvtf	d0, w2
 504:	ucvtf	d1, w1
 508:	fdiv	d0, d0, d1
 50c:	cbz	w8, 55c <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x68>
 510:	ldp	x10, x9, [x0, #32]
 514:	add	x10, x10, #0x8
 518:	b	530 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x3c>
 51c:	sub	x4, x4, #0x1
 520:	add	x3, x3, #0x4
 524:	subs	x8, x8, #0x1
 528:	add	x10, x10, #0x20
 52c:	b.eq	55c <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x68>  // b.none
 530:	cbz	x4, 564 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x70>
 534:	ldr	w11, [x3]
 538:	cbz	w11, 51c <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x28>
 53c:	cbz	x9, 584 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x90>
 540:	ldr	s1, [x10]
 544:	ucvtf	d2, w11
 548:	ucvtf	d1, d1
 54c:	fdiv	d1, d2, d1
 550:	fcmp	d0, d1
 554:	fcsel	d0, d1, d0, mi  // mi = first
 558:	b	51c <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x28>
 55c:	ldp	x29, x30, [sp], #16
 560:	ret
 564:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 568:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 56c:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 570:	add	x0, x0, #0x0
 574:	add	x1, x1, #0x0
 578:	add	x3, x3, #0x0
 57c:	mov	w2, #0xfa                  	// #250
 580:	bl	0 <__assert_fail>
 584:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 588:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 58c:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 590:	add	x0, x0, #0x0
 594:	add	x1, x1, #0x0
 598:	add	x3, x3, #0x0
 59c:	mov	w2, #0x154                 	// #340
 5a0:	bl	0 <__assert_fail>
