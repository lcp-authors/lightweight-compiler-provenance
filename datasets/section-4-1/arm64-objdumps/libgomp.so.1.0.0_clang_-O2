
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libgomp.so.1.0.0_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000008588 <.init>:
    8588:	stp	x29, x30, [sp, #-16]!
    858c:	mov	x29, sp
    8590:	bl	b14c <fprintf@plt+0x263c>
    8594:	ldp	x29, x30, [sp], #16
    8598:	ret

Disassembly of section .plt:

00000000000085a0 <memcpy@plt-0x20>:
    85a0:	stp	x16, x30, [sp, #-16]!
    85a4:	adrp	x16, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    85a8:	ldr	x17, [x16, #4088]
    85ac:	add	x16, x16, #0xff8
    85b0:	br	x17
    85b4:	nop
    85b8:	nop
    85bc:	nop

00000000000085c0 <memcpy@plt>:
    85c0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    85c4:	ldr	x17, [x16]
    85c8:	add	x16, x16, #0x0
    85cc:	br	x17

00000000000085d0 <memmove@plt>:
    85d0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    85d4:	ldr	x17, [x16, #8]
    85d8:	add	x16, x16, #0x8
    85dc:	br	x17

00000000000085e0 <strtoul@plt>:
    85e0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    85e4:	ldr	x17, [x16, #16]
    85e8:	add	x16, x16, #0x10
    85ec:	br	x17

00000000000085f0 <strlen@plt>:
    85f0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    85f4:	ldr	x17, [x16, #24]
    85f8:	add	x16, x16, #0x18
    85fc:	br	x17

0000000000008600 <fputs@plt>:
    8600:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8604:	ldr	x17, [x16, #32]
    8608:	add	x16, x16, #0x20
    860c:	br	x17

0000000000008610 <exit@plt>:
    8610:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8614:	ldr	x17, [x16, #40]
    8618:	add	x16, x16, #0x28
    861c:	br	x17

0000000000008620 <acc_wait_all@plt>:
    8620:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8624:	ldr	x17, [x16, #48]
    8628:	add	x16, x16, #0x30
    862c:	br	x17

0000000000008630 <secure_getenv@plt>:
    8630:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8634:	ldr	x17, [x16, #56]
    8638:	add	x16, x16, #0x38
    863c:	br	x17

0000000000008640 <pthread_key_create@plt>:
    8640:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8644:	ldr	x17, [x16, #64]
    8648:	add	x16, x16, #0x40
    864c:	br	x17

0000000000008650 <acc_copyout_finalize@plt>:
    8650:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8654:	ldr	x17, [x16, #72]
    8658:	add	x16, x16, #0x48
    865c:	br	x17

0000000000008660 <__cxa_finalize@plt>:
    8660:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8664:	ldr	x17, [x16, #80]
    8668:	add	x16, x16, #0x50
    866c:	br	x17

0000000000008670 <sprintf@plt>:
    8670:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8674:	ldr	x17, [x16, #88]
    8678:	add	x16, x16, #0x58
    867c:	br	x17

0000000000008680 <getloadavg@plt>:
    8680:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8684:	ldr	x17, [x16, #96]
    8688:	add	x16, x16, #0x60
    868c:	br	x17

0000000000008690 <__cxa_atexit@plt>:
    8690:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8694:	ldr	x17, [x16, #104]
    8698:	add	x16, x16, #0x68
    869c:	br	x17

00000000000086a0 <pthread_attr_init@plt>:
    86a0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    86a4:	ldr	x17, [x16, #112]
    86a8:	add	x16, x16, #0x70
    86ac:	br	x17

00000000000086b0 <fputc@plt>:
    86b0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    86b4:	ldr	x17, [x16, #120]
    86b8:	add	x16, x16, #0x78
    86bc:	br	x17

00000000000086c0 <clock_gettime@plt>:
    86c0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    86c4:	ldr	x17, [x16, #128]
    86c8:	add	x16, x16, #0x80
    86cc:	br	x17

00000000000086d0 <acc_copyin@plt>:
    86d0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    86d4:	ldr	x17, [x16, #136]
    86d8:	add	x16, x16, #0x88
    86dc:	br	x17

00000000000086e0 <acc_delete_finalize@plt>:
    86e0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    86e4:	ldr	x17, [x16, #144]
    86e8:	add	x16, x16, #0x90
    86ec:	br	x17

00000000000086f0 <__ctype_tolower_loc@plt>:
    86f0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    86f4:	ldr	x17, [x16, #152]
    86f8:	add	x16, x16, #0x98
    86fc:	br	x17

0000000000008700 <acc_create@plt>:
    8700:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8704:	ldr	x17, [x16, #160]
    8708:	add	x16, x16, #0xa0
    870c:	br	x17

0000000000008710 <acc_unmap_data@plt>:
    8710:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8714:	ldr	x17, [x16, #168]
    8718:	add	x16, x16, #0xa8
    871c:	br	x17

0000000000008720 <acc_wait_async@plt>:
    8720:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8724:	ldr	x17, [x16, #176]
    8728:	add	x16, x16, #0xb0
    872c:	br	x17

0000000000008730 <fclose@plt>:
    8730:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8734:	ldr	x17, [x16, #184]
    8738:	add	x16, x16, #0xb8
    873c:	br	x17

0000000000008740 <getpid@plt>:
    8740:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8744:	ldr	x17, [x16, #192]
    8748:	add	x16, x16, #0xc0
    874c:	br	x17

0000000000008750 <fopen@plt>:
    8750:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8754:	ldr	x17, [x16, #200]
    8758:	add	x16, x16, #0xc8
    875c:	br	x17

0000000000008760 <malloc@plt>:
    8760:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8764:	ldr	x17, [x16, #208]
    8768:	add	x16, x16, #0xd0
    876c:	br	x17

0000000000008770 <acc_async_test@plt>:
    8770:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8774:	ldr	x17, [x16, #216]
    8778:	add	x16, x16, #0xd8
    877c:	br	x17

0000000000008780 <pthread_attr_destroy@plt>:
    8780:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8784:	ldr	x17, [x16, #224]
    8788:	add	x16, x16, #0xe0
    878c:	br	x17

0000000000008790 <strncmp@plt>:
    8790:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8794:	ldr	x17, [x16, #232]
    8798:	add	x16, x16, #0xe8
    879c:	br	x17

00000000000087a0 <aligned_alloc@plt>:
    87a0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    87a4:	ldr	x17, [x16, #240]
    87a8:	add	x16, x16, #0xf0
    87ac:	br	x17

00000000000087b0 <pthread_detach@plt>:
    87b0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    87b4:	ldr	x17, [x16, #248]
    87b8:	add	x16, x16, #0xf8
    87bc:	br	x17

00000000000087c0 <memset@plt>:
    87c0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    87c4:	ldr	x17, [x16, #256]
    87c8:	add	x16, x16, #0x100
    87cc:	br	x17

00000000000087d0 <pthread_attr_setstacksize@plt>:
    87d0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    87d4:	ldr	x17, [x16, #264]
    87d8:	add	x16, x16, #0x108
    87dc:	br	x17

00000000000087e0 <calloc@plt>:
    87e0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    87e4:	ldr	x17, [x16, #272]
    87e8:	add	x16, x16, #0x110
    87ec:	br	x17

00000000000087f0 <acc_is_present@plt>:
    87f0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    87f4:	ldr	x17, [x16, #280]
    87f8:	add	x16, x16, #0x118
    87fc:	br	x17

0000000000008800 <strcasecmp@plt>:
    8800:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8804:	ldr	x17, [x16, #288]
    8808:	add	x16, x16, #0x120
    880c:	br	x17

0000000000008810 <realloc@plt>:
    8810:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8814:	ldr	x17, [x16, #296]
    8818:	add	x16, x16, #0x128
    881c:	br	x17

0000000000008820 <strdup@plt>:
    8820:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8824:	ldr	x17, [x16, #304]
    8828:	add	x16, x16, #0x130
    882c:	br	x17

0000000000008830 <strerror@plt>:
    8830:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8834:	ldr	x17, [x16, #312]
    8838:	add	x16, x16, #0x138
    883c:	br	x17

0000000000008840 <pthread_create@plt>:
    8840:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8844:	ldr	x17, [x16, #320]
    8848:	add	x16, x16, #0x140
    884c:	br	x17

0000000000008850 <__gmon_start__@plt>:
    8850:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8854:	ldr	x17, [x16, #328]
    8858:	add	x16, x16, #0x148
    885c:	br	x17

0000000000008860 <pthread_join@plt>:
    8860:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8864:	ldr	x17, [x16, #336]
    8868:	add	x16, x16, #0x150
    886c:	br	x17

0000000000008870 <abort@plt>:
    8870:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8874:	ldr	x17, [x16, #344]
    8878:	add	x16, x16, #0x158
    887c:	br	x17

0000000000008880 <pthread_exit@plt>:
    8880:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8884:	ldr	x17, [x16, #352]
    8888:	add	x16, x16, #0x160
    888c:	br	x17

0000000000008890 <memcmp@plt>:
    8890:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8894:	ldr	x17, [x16, #360]
    8898:	add	x16, x16, #0x168
    889c:	br	x17

00000000000088a0 <strcmp@plt>:
    88a0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    88a4:	ldr	x17, [x16, #368]
    88a8:	add	x16, x16, #0x170
    88ac:	br	x17

00000000000088b0 <__ctype_b_loc@plt>:
    88b0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    88b4:	ldr	x17, [x16, #376]
    88b8:	add	x16, x16, #0x178
    88bc:	br	x17

00000000000088c0 <strtol@plt>:
    88c0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    88c4:	ldr	x17, [x16, #384]
    88c8:	add	x16, x16, #0x180
    88cc:	br	x17

00000000000088d0 <acc_wait_all_async@plt>:
    88d0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    88d4:	ldr	x17, [x16, #392]
    88d8:	add	x16, x16, #0x188
    88dc:	br	x17

00000000000088e0 <acc_deviceptr@plt>:
    88e0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    88e4:	ldr	x17, [x16, #400]
    88e8:	add	x16, x16, #0x190
    88ec:	br	x17

00000000000088f0 <clock_getres@plt>:
    88f0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    88f4:	ldr	x17, [x16, #408]
    88f8:	add	x16, x16, #0x198
    88fc:	br	x17

0000000000008900 <free@plt>:
    8900:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8904:	ldr	x17, [x16, #416]
    8908:	add	x16, x16, #0x1a0
    890c:	br	x17

0000000000008910 <acc_delete@plt>:
    8910:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8914:	ldr	x17, [x16, #424]
    8918:	add	x16, x16, #0x1a8
    891c:	br	x17

0000000000008920 <GOMP_offload_unregister_ver@plt>:
    8920:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8924:	ldr	x17, [x16, #432]
    8928:	add	x16, x16, #0x1b0
    892c:	br	x17

0000000000008930 <pthread_key_delete@plt>:
    8930:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8934:	ldr	x17, [x16, #440]
    8938:	add	x16, x16, #0x1b8
    893c:	br	x17

0000000000008940 <strncasecmp@plt>:
    8940:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8944:	ldr	x17, [x16, #448]
    8948:	add	x16, x16, #0x1c0
    894c:	br	x17

0000000000008950 <pthread_once@plt>:
    8950:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8954:	ldr	x17, [x16, #456]
    8958:	add	x16, x16, #0x1c8
    895c:	br	x17

0000000000008960 <pthread_getaffinity_np@plt>:
    8960:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8964:	ldr	x17, [x16, #464]
    8968:	add	x16, x16, #0x1d0
    896c:	br	x17

0000000000008970 <acc_init@plt>:
    8970:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8974:	ldr	x17, [x16, #472]
    8978:	add	x16, x16, #0x1d8
    897c:	br	x17

0000000000008980 <acc_copyout@plt>:
    8980:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8984:	ldr	x17, [x16, #480]
    8988:	add	x16, x16, #0x1e0
    898c:	br	x17

0000000000008990 <acc_wait@plt>:
    8990:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8994:	ldr	x17, [x16, #488]
    8998:	add	x16, x16, #0x1e8
    899c:	br	x17

00000000000089a0 <strchr@plt>:
    89a0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    89a4:	ldr	x17, [x16, #496]
    89a8:	add	x16, x16, #0x1f0
    89ac:	br	x17

00000000000089b0 <pthread_setspecific@plt>:
    89b0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    89b4:	ldr	x17, [x16, #504]
    89b8:	add	x16, x16, #0x1f8
    89bc:	br	x17

00000000000089c0 <strtoull@plt>:
    89c0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    89c4:	ldr	x17, [x16, #512]
    89c8:	add	x16, x16, #0x200
    89cc:	br	x17

00000000000089d0 <fwrite@plt>:
    89d0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    89d4:	ldr	x17, [x16, #520]
    89d8:	add	x16, x16, #0x208
    89dc:	br	x17

00000000000089e0 <__sched_cpucount@plt>:
    89e0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    89e4:	ldr	x17, [x16, #528]
    89e8:	add	x16, x16, #0x210
    89ec:	br	x17

00000000000089f0 <acc_update_self@plt>:
    89f0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    89f4:	ldr	x17, [x16, #536]
    89f8:	add	x16, x16, #0x218
    89fc:	br	x17

0000000000008a00 <pthread_attr_getstacksize@plt>:
    8a00:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8a04:	ldr	x17, [x16, #544]
    8a08:	add	x16, x16, #0x220
    8a0c:	br	x17

0000000000008a10 <GOMP_offload_register_ver@plt>:
    8a10:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8a14:	ldr	x17, [x16, #552]
    8a18:	add	x16, x16, #0x228
    8a1c:	br	x17

0000000000008a20 <GOACC_enter_exit_data@plt>:
    8a20:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8a24:	ldr	x17, [x16, #560]
    8a28:	add	x16, x16, #0x230
    8a2c:	br	x17

0000000000008a30 <sysconf@plt>:
    8a30:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8a34:	ldr	x17, [x16, #568]
    8a38:	add	x16, x16, #0x238
    8a3c:	br	x17

0000000000008a40 <gethostname@plt>:
    8a40:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8a44:	ldr	x17, [x16, #576]
    8a48:	add	x16, x16, #0x240
    8a4c:	br	x17

0000000000008a50 <omp_get_team_num@plt>:
    8a50:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8a54:	ldr	x17, [x16, #584]
    8a58:	add	x16, x16, #0x248
    8a5c:	br	x17

0000000000008a60 <pthread_attr_setaffinity_np@plt>:
    8a60:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8a64:	ldr	x17, [x16, #592]
    8a68:	add	x16, x16, #0x250
    8a6c:	br	x17

0000000000008a70 <pthread_setaffinity_np@plt>:
    8a70:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8a74:	ldr	x17, [x16, #600]
    8a78:	add	x16, x16, #0x258
    8a7c:	br	x17

0000000000008a80 <omp_get_num_teams@plt>:
    8a80:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8a84:	ldr	x17, [x16, #608]
    8a88:	add	x16, x16, #0x260
    8a8c:	br	x17

0000000000008a90 <pthread_self@plt>:
    8a90:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8a94:	ldr	x17, [x16, #616]
    8a98:	add	x16, x16, #0x268
    8a9c:	br	x17

0000000000008aa0 <vfprintf@plt>:
    8aa0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8aa4:	ldr	x17, [x16, #624]
    8aa8:	add	x16, x16, #0x270
    8aac:	br	x17

0000000000008ab0 <__assert_fail@plt>:
    8ab0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8ab4:	ldr	x17, [x16, #632]
    8ab8:	add	x16, x16, #0x278
    8abc:	br	x17

0000000000008ac0 <__errno_location@plt>:
    8ac0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8ac4:	ldr	x17, [x16, #640]
    8ac8:	add	x16, x16, #0x280
    8acc:	br	x17

0000000000008ad0 <getenv@plt>:
    8ad0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8ad4:	ldr	x17, [x16, #648]
    8ad8:	add	x16, x16, #0x288
    8adc:	br	x17

0000000000008ae0 <syscall@plt>:
    8ae0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8ae4:	ldr	x17, [x16, #656]
    8ae8:	add	x16, x16, #0x290
    8aec:	br	x17

0000000000008af0 <__getdelim@plt>:
    8af0:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8af4:	ldr	x17, [x16, #664]
    8af8:	add	x16, x16, #0x298
    8afc:	br	x17

0000000000008b00 <acc_update_device@plt>:
    8b00:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8b04:	ldr	x17, [x16, #672]
    8b08:	add	x16, x16, #0x2a0
    8b0c:	br	x17

0000000000008b10 <fprintf@plt>:
    8b10:	adrp	x16, 40000 <memcpy@GLIBC_2.17>
    8b14:	ldr	x17, [x16, #680]
    8b18:	add	x16, x16, #0x2a8
    8b1c:	br	x17

Disassembly of section .text:

0000000000008b20 <GOMP_atomic_start@@GOMP_1.0-0x27f8>:
    8b20:	sub	sp, sp, #0x250
    8b24:	mov	x4, x1
    8b28:	mov	x3, x0
    8b2c:	stp	x29, x30, [sp]
    8b30:	mov	x29, sp
    8b34:	stp	x23, x24, [sp, #48]
    8b38:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    8b3c:	mov	x23, x1
    8b40:	stp	x25, x26, [sp, #64]
    8b44:	mov	w25, w2
    8b48:	add	x26, sp, #0x50
    8b4c:	ldr	x2, [x24, #824]
    8b50:	mov	w5, w25
    8b54:	mov	x1, #0x200                 	// #512
    8b58:	stp	x19, x20, [sp, #16]
    8b5c:	adrp	x19, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    8b60:	stp	x21, x22, [sp, #32]
    8b64:	mov	x21, x0
    8b68:	mov	x0, x26
    8b6c:	bl	26b48 <omp_get_affinity_format@@OMP_5.0+0x348>
    8b70:	mov	x20, x0
    8b74:	cmp	x0, #0x1ff
    8b78:	add	x22, x0, #0x1
    8b7c:	b.hi	8bbc <fprintf@plt+0xac>  // b.pmore
    8b80:	ldr	x19, [x19, #4040]
    8b84:	mov	w3, #0xa                   	// #10
    8b88:	strb	w3, [x26, x20]
    8b8c:	mov	x2, x22
    8b90:	mov	x0, x26
    8b94:	mov	x1, #0x1                   	// #1
    8b98:	ldr	x3, [x19]
    8b9c:	bl	89d0 <fwrite@plt>
    8ba0:	ldp	x29, x30, [sp]
    8ba4:	ldp	x19, x20, [sp, #16]
    8ba8:	ldp	x21, x22, [sp, #32]
    8bac:	ldp	x23, x24, [sp, #48]
    8bb0:	ldp	x25, x26, [sp, #64]
    8bb4:	add	sp, sp, #0x250
    8bb8:	ret
    8bbc:	mov	x0, x22
    8bc0:	bl	b220 <fprintf@plt+0x2710>
    8bc4:	ldr	x2, [x24, #824]
    8bc8:	mov	w5, w25
    8bcc:	mov	x4, x23
    8bd0:	mov	x3, x21
    8bd4:	mov	x1, x22
    8bd8:	mov	x21, x0
    8bdc:	bl	26b48 <omp_get_affinity_format@@OMP_5.0+0x348>
    8be0:	ldr	x19, [x19, #4040]
    8be4:	mov	w3, #0xa                   	// #10
    8be8:	strb	w3, [x21, x20]
    8bec:	mov	x2, x22
    8bf0:	mov	x0, x21
    8bf4:	mov	x1, #0x1                   	// #1
    8bf8:	ldr	x3, [x19]
    8bfc:	bl	89d0 <fwrite@plt>
    8c00:	mov	x0, x21
    8c04:	ldp	x29, x30, [sp]
    8c08:	ldp	x19, x20, [sp, #16]
    8c0c:	ldp	x21, x22, [sp, #32]
    8c10:	ldp	x23, x24, [sp, #48]
    8c14:	ldp	x25, x26, [sp, #64]
    8c18:	add	sp, sp, #0x250
    8c1c:	b	8900 <free@plt>
    8c20:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    8c24:	ldr	w0, [x0, #1696]
    8c28:	b	8930 <pthread_key_delete@plt>
    8c2c:	nop
    8c30:	stp	x29, x30, [sp, #-48]!
    8c34:	mov	x29, sp
    8c38:	stp	x21, x22, [sp, #32]
    8c3c:	mov	x22, x1
    8c40:	mov	x21, x0
    8c44:	bl	8ad0 <getenv@plt>
    8c48:	cbz	x0, 8cd0 <fprintf@plt+0x1c0>
    8c4c:	stp	x19, x20, [sp, #16]
    8c50:	mov	x19, x0
    8c54:	bl	88b0 <__ctype_b_loc@plt>
    8c58:	ldr	x20, [x0]
    8c5c:	b	8c64 <fprintf@plt+0x154>
    8c60:	add	x19, x19, #0x1
    8c64:	ldrb	w2, [x19]
    8c68:	ldrh	w2, [x20, x2, lsl #1]
    8c6c:	tbnz	w2, #13, 8c60 <fprintf@plt+0x150>
    8c70:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    8c74:	mov	x0, x19
    8c78:	add	x1, x1, #0x368
    8c7c:	mov	x2, #0x4                   	// #4
    8c80:	bl	8940 <strncasecmp@plt>
    8c84:	cbz	w0, 8cdc <fprintf@plt+0x1cc>
    8c88:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    8c8c:	mov	x0, x19
    8c90:	add	x1, x1, #0x370
    8c94:	mov	x2, #0x5                   	// #5
    8c98:	bl	8940 <strncasecmp@plt>
    8c9c:	cbnz	w0, 8d08 <fprintf@plt+0x1f8>
    8ca0:	add	x19, x19, #0x5
    8ca4:	strb	wzr, [x22]
    8ca8:	ldrb	w1, [x19]
    8cac:	ubfiz	x0, x1, #1, #8
    8cb0:	ldrh	w0, [x20, x0]
    8cb4:	tbz	w0, #13, 8cc8 <fprintf@plt+0x1b8>
    8cb8:	ldrb	w1, [x19, #1]!
    8cbc:	ubfiz	x0, x1, #1, #8
    8cc0:	ldrh	w2, [x20, x0]
    8cc4:	tbnz	w2, #13, 8cb8 <fprintf@plt+0x1a8>
    8cc8:	cbnz	w1, 8cec <fprintf@plt+0x1dc>
    8ccc:	ldp	x19, x20, [sp, #16]
    8cd0:	ldp	x21, x22, [sp, #32]
    8cd4:	ldp	x29, x30, [sp], #48
    8cd8:	ret
    8cdc:	mov	w0, #0x1                   	// #1
    8ce0:	add	x19, x19, #0x4
    8ce4:	strb	w0, [x22]
    8ce8:	b	8ca8 <fprintf@plt+0x198>
    8cec:	mov	x1, x21
    8cf0:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    8cf4:	ldp	x19, x20, [sp, #16]
    8cf8:	add	x0, x0, #0x378
    8cfc:	ldp	x21, x22, [sp, #32]
    8d00:	ldp	x29, x30, [sp], #48
    8d04:	b	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    8d08:	adrp	x19, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    8d0c:	add	x19, x19, #0x360
    8d10:	b	8ca8 <fprintf@plt+0x198>
    8d14:	nop
    8d18:	stp	x29, x30, [sp, #-80]!
    8d1c:	tst	w3, #0xff
    8d20:	mov	x29, sp
    8d24:	stp	x19, x20, [sp, #16]
    8d28:	mov	x20, x0
    8d2c:	stp	x21, x22, [sp, #32]
    8d30:	mov	x21, x1
    8d34:	and	w22, w2, #0xff
    8d38:	b.eq	8d9c <fprintf@plt+0x28c>  // b.none
    8d3c:	bl	8630 <secure_getenv@plt>
    8d40:	mov	x19, x0
    8d44:	cbz	x19, 8da8 <fprintf@plt+0x298>
    8d48:	stp	x23, x24, [sp, #48]
    8d4c:	bl	88b0 <__ctype_b_loc@plt>
    8d50:	mov	x23, x0
    8d54:	ldr	x4, [x0]
    8d58:	b	8d60 <fprintf@plt+0x250>
    8d5c:	add	x19, x19, #0x1
    8d60:	ldrb	w2, [x19]
    8d64:	ubfiz	x3, x2, #1, #8
    8d68:	ldrh	w3, [x4, x3]
    8d6c:	tbnz	w3, #13, 8d5c <fprintf@plt+0x24c>
    8d70:	cbnz	w2, 8db0 <fprintf@plt+0x2a0>
    8d74:	mov	x1, x20
    8d78:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    8d7c:	add	x0, x0, #0x378
    8d80:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    8d84:	ldp	x23, x24, [sp, #48]
    8d88:	mov	w0, #0x0                   	// #0
    8d8c:	ldp	x19, x20, [sp, #16]
    8d90:	ldp	x21, x22, [sp, #32]
    8d94:	ldp	x29, x30, [sp], #80
    8d98:	ret
    8d9c:	bl	8ad0 <getenv@plt>
    8da0:	mov	x19, x0
    8da4:	cbnz	x19, 8d48 <fprintf@plt+0x238>
    8da8:	mov	w0, #0x0                   	// #0
    8dac:	b	8d8c <fprintf@plt+0x27c>
    8db0:	bl	8ac0 <__errno_location@plt>
    8db4:	mov	x24, x0
    8db8:	add	x1, sp, #0x48
    8dbc:	mov	x0, x19
    8dc0:	mov	w2, #0xa                   	// #10
    8dc4:	str	wzr, [x24]
    8dc8:	bl	85e0 <strtoul@plt>
    8dcc:	mov	x5, x0
    8dd0:	ldr	w1, [x24]
    8dd4:	cbnz	w1, 8d74 <fprintf@plt+0x264>
    8dd8:	neg	w22, w22
    8ddc:	cmp	x0, w22, sxtw
    8de0:	b.le	8d74 <fprintf@plt+0x264>
    8de4:	ldr	x2, [sp, #72]
    8de8:	ldr	x4, [x23]
    8dec:	ldrb	w0, [x2]
    8df0:	ldrb	w1, [x2]
    8df4:	ldrh	w0, [x4, x0, lsl #1]
    8df8:	tbz	w0, #13, 8e14 <fprintf@plt+0x304>
    8dfc:	add	x2, x2, #0x1
    8e00:	str	x2, [sp, #72]
    8e04:	ldrb	w1, [x2], #1
    8e08:	ubfiz	x3, x1, #1, #8
    8e0c:	ldrh	w3, [x4, x3]
    8e10:	tbnz	w3, #13, 8e00 <fprintf@plt+0x2f0>
    8e14:	cbnz	w1, 8d74 <fprintf@plt+0x264>
    8e18:	mov	w0, #0x1                   	// #1
    8e1c:	ldp	x23, x24, [sp, #48]
    8e20:	str	x5, [x21]
    8e24:	b	8d8c <fprintf@plt+0x27c>
    8e28:	stp	x29, x30, [sp, #-160]!
    8e2c:	mov	x29, sp
    8e30:	stp	x21, x22, [sp, #32]
    8e34:	adrp	x22, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    8e38:	stp	x25, x26, [sp, #64]
    8e3c:	ldr	x25, [x22, #1568]
    8e40:	stp	x19, x20, [sp, #16]
    8e44:	ldr	x20, [x0]
    8e48:	str	x1, [sp, #96]
    8e4c:	stp	x0, x2, [sp, #112]
    8e50:	str	x3, [sp, #128]
    8e54:	str	x20, [sp, #152]
    8e58:	cbz	x25, 8e68 <fprintf@plt+0x358>
    8e5c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    8e60:	ldr	x0, [x0, #1608]
    8e64:	ldr	x25, [x25, x0, lsl #3]
    8e68:	ldr	x0, [sp, #96]
    8e6c:	strb	wzr, [x0]
    8e70:	bl	88b0 <__ctype_b_loc@plt>
    8e74:	mov	x19, x0
    8e78:	mov	x0, x20
    8e7c:	ldr	x4, [x19]
    8e80:	b	8e88 <fprintf@plt+0x378>
    8e84:	str	x0, [sp, #152]
    8e88:	mov	x1, x0
    8e8c:	ldrb	w2, [x0], #1
    8e90:	ubfiz	x3, x2, #1, #8
    8e94:	ldrh	w3, [x4, x3]
    8e98:	tbnz	w3, #13, 8e84 <fprintf@plt+0x374>
    8e9c:	cmp	w2, #0x21
    8ea0:	b.eq	9144 <fprintf@plt+0x634>  // b.none
    8ea4:	cmp	w2, #0x7b
    8ea8:	b.ne	901c <fprintf@plt+0x50c>  // b.any
    8eac:	add	x21, x1, #0x1
    8eb0:	stp	x23, x24, [sp, #48]
    8eb4:	stp	x27, x28, [sp, #80]
    8eb8:	str	x21, [sp, #152]
    8ebc:	ldrb	w0, [x1, #1]
    8ec0:	ldrh	w0, [x4, x0, lsl #1]
    8ec4:	tbz	w0, #13, 8ee8 <fprintf@plt+0x3d8>
    8ec8:	add	x0, x1, #0x2
    8ecc:	nop
    8ed0:	mov	x21, x0
    8ed4:	str	x0, [sp, #152]
    8ed8:	add	x0, x0, #0x1
    8edc:	ldrb	w1, [x21]
    8ee0:	ldrh	w1, [x4, x1, lsl #1]
    8ee4:	tbnz	w1, #13, 8ed0 <fprintf@plt+0x3c0>
    8ee8:	add	x23, sp, #0x98
    8eec:	mov	w28, #0x0                   	// #0
    8ef0:	mov	w24, #0x0                   	// #0
    8ef4:	str	x21, [sp, #152]
    8ef8:	bl	8ac0 <__errno_location@plt>
    8efc:	mov	x27, x0
    8f00:	mov	x0, x21
    8f04:	ldrb	w26, [x0]
    8f08:	cmp	w26, #0x21
    8f0c:	cset	w20, eq  // eq = none
    8f10:	b.eq	8fb8 <fprintf@plt+0x4a8>  // b.none
    8f14:	nop
    8f18:	str	wzr, [x27]
    8f1c:	mov	x1, x23
    8f20:	mov	w2, #0xa                   	// #10
    8f24:	bl	85e0 <strtoul@plt>
    8f28:	mov	x8, x0
    8f2c:	ldr	w1, [x27]
    8f30:	cbnz	w1, 9014 <fprintf@plt+0x504>
    8f34:	ldr	x4, [sp, #152]
    8f38:	ldr	x5, [x19]
    8f3c:	ldrb	w2, [x4]
    8f40:	ubfiz	x0, x2, #1, #8
    8f44:	ldrh	w0, [x5, x0]
    8f48:	tbz	w0, #13, 8f68 <fprintf@plt+0x458>
    8f4c:	add	x1, x4, #0x1
    8f50:	str	x1, [sp, #152]
    8f54:	mov	x4, x1
    8f58:	ldrb	w2, [x1], #1
    8f5c:	ubfiz	x3, x2, #1, #8
    8f60:	ldrh	w3, [x5, x3]
    8f64:	tbnz	w3, #13, 8f50 <fprintf@plt+0x440>
    8f68:	mov	x3, #0x1                   	// #1
    8f6c:	cmp	w2, #0x3a
    8f70:	mov	x9, x3
    8f74:	b.eq	9078 <fprintf@plt+0x568>  // b.none
    8f78:	ldr	x0, [x22, #1568]
    8f7c:	cbz	x0, 8f88 <fprintf@plt+0x478>
    8f80:	cmp	w20, w24
    8f84:	b.eq	9034 <fprintf@plt+0x524>  // b.none
    8f88:	ldr	x0, [sp, #152]
    8f8c:	ldrb	w1, [x0]
    8f90:	cmp	w1, #0x7d
    8f94:	b.eq	9068 <fprintf@plt+0x558>  // b.none
    8f98:	cmp	w1, #0x2c
    8f9c:	b.ne	9014 <fprintf@plt+0x504>  // b.any
    8fa0:	add	x0, x0, #0x1
    8fa4:	str	x0, [sp, #152]
    8fa8:	ldrb	w26, [x0]
    8fac:	cmp	w26, #0x21
    8fb0:	cset	w20, eq  // eq = none
    8fb4:	b.ne	8f18 <fprintf@plt+0x408>  // b.any
    8fb8:	add	x1, x0, #0x1
    8fbc:	str	x1, [sp, #152]
    8fc0:	ldr	x3, [x19]
    8fc4:	ldrb	w2, [x0, #1]
    8fc8:	ldr	x4, [x22, #1568]
    8fcc:	ldrh	w2, [x3, x2, lsl #1]
    8fd0:	cmp	x4, #0x0
    8fd4:	csinc	w28, w28, wzr, eq  // eq = none
    8fd8:	tbz	w2, #13, 9218 <fprintf@plt+0x708>
    8fdc:	add	x1, x0, #0x2
    8fe0:	mov	x0, x1
    8fe4:	str	x1, [sp, #152]
    8fe8:	add	x1, x1, #0x1
    8fec:	ldrb	w2, [x0]
    8ff0:	ldrh	w2, [x3, x2, lsl #1]
    8ff4:	tbnz	w2, #13, 8fe0 <fprintf@plt+0x4d0>
    8ff8:	str	wzr, [x27]
    8ffc:	mov	x1, x23
    9000:	mov	w2, #0xa                   	// #10
    9004:	bl	85e0 <strtoul@plt>
    9008:	mov	x8, x0
    900c:	ldr	w1, [x27]
    9010:	cbz	w1, 8f34 <fprintf@plt+0x424>
    9014:	ldp	x23, x24, [sp, #48]
    9018:	ldp	x27, x28, [sp, #80]
    901c:	mov	w0, #0x0                   	// #0
    9020:	ldp	x19, x20, [sp, #16]
    9024:	ldp	x21, x22, [sp, #32]
    9028:	ldp	x25, x26, [sp, #64]
    902c:	ldp	x29, x30, [sp], #160
    9030:	ret
    9034:	cmp	w26, #0x21
    9038:	b.eq	912c <fprintf@plt+0x61c>  // b.none
    903c:	mov	x2, x9
    9040:	mov	x1, x8
    9044:	mov	x0, x25
    9048:	mov	w4, #0x0                   	// #0
    904c:	bl	1bd98 <omp_pause_resource_all_@@OMP_5.0+0xf0>
    9050:	tst	w0, #0xff
    9054:	b.eq	9014 <fprintf@plt+0x504>  // b.none
    9058:	ldr	x0, [sp, #152]
    905c:	ldrb	w1, [x0]
    9060:	cmp	w1, #0x7d
    9064:	b.ne	8f98 <fprintf@plt+0x488>  // b.any
    9068:	cbz	w28, 9228 <fprintf@plt+0x718>
    906c:	cbnz	w24, 9228 <fprintf@plt+0x718>
    9070:	mov	w24, #0x1                   	// #1
    9074:	b	8ef4 <fprintf@plt+0x3e4>
    9078:	add	x0, x4, x3
    907c:	str	x0, [sp, #152]
    9080:	ldrb	w1, [x4, #1]
    9084:	ldrh	w1, [x5, x1, lsl #1]
    9088:	tbz	w1, #13, 90a8 <fprintf@plt+0x598>
    908c:	add	x4, x4, #0x2
    9090:	mov	x0, x4
    9094:	str	x4, [sp, #152]
    9098:	add	x4, x4, #0x1
    909c:	ldrb	w1, [x0]
    90a0:	ldrh	w1, [x5, x1, lsl #1]
    90a4:	tbnz	w1, #13, 9090 <fprintf@plt+0x580>
    90a8:	str	wzr, [x27]
    90ac:	mov	x1, x23
    90b0:	mov	w2, #0xa                   	// #10
    90b4:	str	x8, [sp, #104]
    90b8:	bl	85e0 <strtoul@plt>
    90bc:	mov	x9, x0
    90c0:	ldr	w1, [x27]
    90c4:	cmp	w1, #0x0
    90c8:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    90cc:	b.eq	9014 <fprintf@plt+0x504>  // b.none
    90d0:	ldr	x4, [sp, #152]
    90d4:	ldr	x5, [x19]
    90d8:	ldrb	w2, [x4]
    90dc:	ldr	x8, [sp, #104]
    90e0:	ubfiz	x0, x2, #1, #8
    90e4:	ldrh	w0, [x5, x0]
    90e8:	tbz	w0, #13, 9108 <fprintf@plt+0x5f8>
    90ec:	add	x1, x4, #0x1
    90f0:	str	x1, [sp, #152]
    90f4:	mov	x4, x1
    90f8:	ldrb	w2, [x1], #1
    90fc:	ubfiz	x3, x2, #1, #8
    9100:	ldrh	w3, [x5, x3]
    9104:	tbnz	w3, #13, 90f0 <fprintf@plt+0x5e0>
    9108:	cmp	w2, #0x3a
    910c:	mov	x3, #0x1                   	// #1
    9110:	b.eq	9184 <fprintf@plt+0x674>  // b.none
    9114:	cmp	w20, #0x0
    9118:	ccmp	x9, #0x1, #0x4, ne  // ne = any
    911c:	b.eq	8f78 <fprintf@plt+0x468>  // b.none
    9120:	ldp	x23, x24, [sp, #48]
    9124:	ldp	x27, x28, [sp, #80]
    9128:	b	901c <fprintf@plt+0x50c>
    912c:	mov	x1, x8
    9130:	mov	x0, x25
    9134:	bl	1c298 <omp_pause_resource_all_@@OMP_5.0+0x5f0>
    9138:	tst	w0, #0xff
    913c:	b.ne	8f88 <fprintf@plt+0x478>  // b.any
    9140:	b	9014 <fprintf@plt+0x504>
    9144:	ldr	x3, [sp, #96]
    9148:	mov	w2, #0x1                   	// #1
    914c:	str	x0, [sp, #152]
    9150:	strb	w2, [x3]
    9154:	ldrb	w2, [x1, #1]
    9158:	ubfiz	x3, x2, #1, #8
    915c:	ldrh	w3, [x4, x3]
    9160:	tbz	w3, #13, 9220 <fprintf@plt+0x710>
    9164:	add	x0, x1, #0x2
    9168:	str	x0, [sp, #152]
    916c:	mov	x1, x0
    9170:	ldrb	w2, [x0], #1
    9174:	ubfiz	x3, x2, #1, #8
    9178:	ldrh	w3, [x4, x3]
    917c:	tbnz	w3, #13, 9168 <fprintf@plt+0x658>
    9180:	b	8ea4 <fprintf@plt+0x394>
    9184:	add	x0, x4, x3
    9188:	str	x0, [sp, #152]
    918c:	ldrb	w1, [x4, #1]
    9190:	ldrh	w1, [x5, x1, lsl #1]
    9194:	tbz	w1, #13, 91b8 <fprintf@plt+0x6a8>
    9198:	add	x4, x4, #0x2
    919c:	nop
    91a0:	mov	x0, x4
    91a4:	str	x4, [sp, #152]
    91a8:	add	x4, x4, #0x1
    91ac:	ldrb	w1, [x0]
    91b0:	ldrh	w1, [x5, x1, lsl #1]
    91b4:	tbnz	w1, #13, 91a0 <fprintf@plt+0x690>
    91b8:	str	wzr, [x27]
    91bc:	mov	x1, x23
    91c0:	mov	w2, #0xa                   	// #10
    91c4:	str	x8, [sp, #104]
    91c8:	str	x9, [sp, #136]
    91cc:	bl	88c0 <strtol@plt>
    91d0:	ldr	w1, [x27]
    91d4:	mov	x3, x0
    91d8:	cbnz	w1, 9014 <fprintf@plt+0x504>
    91dc:	ldr	x0, [sp, #152]
    91e0:	ldr	x2, [x19]
    91e4:	ldrb	w1, [x0]
    91e8:	ldr	x8, [sp, #104]
    91ec:	ldr	x9, [sp, #136]
    91f0:	ldrh	w1, [x2, x1, lsl #1]
    91f4:	tbz	w1, #13, 9114 <fprintf@plt+0x604>
    91f8:	add	x0, x0, #0x1
    91fc:	nop
    9200:	str	x0, [sp, #152]
    9204:	add	x0, x0, #0x1
    9208:	ldurb	w1, [x0, #-1]
    920c:	ldrh	w1, [x2, x1, lsl #1]
    9210:	tbnz	w1, #13, 9200 <fprintf@plt+0x6f0>
    9214:	b	9114 <fprintf@plt+0x604>
    9218:	mov	x0, x1
    921c:	b	8f18 <fprintf@plt+0x408>
    9220:	mov	x1, x0
    9224:	b	8ea4 <fprintf@plt+0x394>
    9228:	add	x1, x0, #0x1
    922c:	str	x1, [sp, #152]
    9230:	ldr	x3, [x19]
    9234:	ldrb	w2, [x0, #1]
    9238:	ubfiz	x4, x2, #1, #8
    923c:	ldrh	w4, [x3, x4]
    9240:	tbz	w4, #13, 9260 <fprintf@plt+0x750>
    9244:	add	x0, x0, #0x2
    9248:	str	x0, [sp, #152]
    924c:	mov	x1, x0
    9250:	ldrb	w2, [x0], #1
    9254:	ubfiz	x4, x2, #1, #8
    9258:	ldrh	w4, [x3, x4]
    925c:	tbnz	w4, #13, 9248 <fprintf@plt+0x738>
    9260:	cmp	w2, #0x3a
    9264:	mov	x2, #0x1                   	// #1
    9268:	mov	x20, x2
    926c:	b.eq	9298 <fprintf@plt+0x788>  // b.none
    9270:	ldr	x1, [sp, #112]
    9274:	ldr	x0, [sp, #152]
    9278:	ldp	x23, x24, [sp, #48]
    927c:	ldp	x27, x28, [sp, #80]
    9280:	str	x0, [x1]
    9284:	ldp	x0, x1, [sp, #120]
    9288:	str	x20, [x0]
    928c:	mov	w0, #0x1                   	// #1
    9290:	str	x2, [x1]
    9294:	b	9020 <fprintf@plt+0x510>
    9298:	add	x20, x1, x2
    929c:	str	x20, [sp, #152]
    92a0:	ldrb	w0, [x1, #1]
    92a4:	ldrh	w0, [x3, x0, lsl #1]
    92a8:	tbz	w0, #13, 92c8 <fprintf@plt+0x7b8>
    92ac:	add	x1, x1, #0x2
    92b0:	mov	x20, x1
    92b4:	str	x1, [sp, #152]
    92b8:	add	x1, x1, #0x1
    92bc:	ldrb	w0, [x20]
    92c0:	ldrh	w0, [x3, x0, lsl #1]
    92c4:	tbnz	w0, #13, 92b0 <fprintf@plt+0x7a0>
    92c8:	bl	8ac0 <__errno_location@plt>
    92cc:	mov	x21, x0
    92d0:	mov	x1, x23
    92d4:	mov	x0, x20
    92d8:	mov	w2, #0xa                   	// #10
    92dc:	str	wzr, [x21]
    92e0:	bl	85e0 <strtoul@plt>
    92e4:	mov	x20, x0
    92e8:	ldr	w1, [x21]
    92ec:	cbnz	w1, 9014 <fprintf@plt+0x504>
    92f0:	sub	x1, x0, #0x1
    92f4:	mov	x0, #0xfffe                	// #65534
    92f8:	cmp	x1, x0
    92fc:	b.hi	9014 <fprintf@plt+0x504>  // b.pmore
    9300:	ldr	x1, [sp, #152]
    9304:	ldr	x3, [x19]
    9308:	ldrb	w0, [x1]
    930c:	ubfiz	x2, x0, #1, #8
    9310:	ldrh	w2, [x3, x2]
    9314:	tbz	w2, #13, 9334 <fprintf@plt+0x824>
    9318:	add	x2, x1, #0x1
    931c:	str	x2, [sp, #152]
    9320:	mov	x1, x2
    9324:	ldrb	w0, [x2], #1
    9328:	ubfiz	x4, x0, #1, #8
    932c:	ldrh	w4, [x3, x4]
    9330:	tbnz	w4, #13, 931c <fprintf@plt+0x80c>
    9334:	cmp	w0, #0x3a
    9338:	mov	x2, #0x1                   	// #1
    933c:	b.eq	9358 <fprintf@plt+0x848>  // b.none
    9340:	ldr	x0, [sp, #96]
    9344:	ldrb	w0, [x0]
    9348:	cbz	w0, 9270 <fprintf@plt+0x760>
    934c:	cmp	x20, #0x1
    9350:	b.ne	9014 <fprintf@plt+0x504>  // b.any
    9354:	b	9270 <fprintf@plt+0x760>
    9358:	add	x0, x1, x2
    935c:	str	x0, [sp, #152]
    9360:	ldrb	w2, [x1, #1]
    9364:	ldrh	w2, [x3, x2, lsl #1]
    9368:	tbz	w2, #13, 9388 <fprintf@plt+0x878>
    936c:	add	x1, x1, #0x2
    9370:	mov	x0, x1
    9374:	str	x1, [sp, #152]
    9378:	add	x1, x1, #0x1
    937c:	ldrb	w2, [x0]
    9380:	ldrh	w2, [x3, x2, lsl #1]
    9384:	tbnz	w2, #13, 9370 <fprintf@plt+0x860>
    9388:	str	wzr, [x21]
    938c:	mov	x1, x23
    9390:	mov	w2, #0xa                   	// #10
    9394:	bl	88c0 <strtol@plt>
    9398:	mov	x2, x0
    939c:	ldr	w1, [x21]
    93a0:	cbnz	w1, 9014 <fprintf@plt+0x504>
    93a4:	ldr	x0, [sp, #152]
    93a8:	ldr	x3, [x19]
    93ac:	ldrb	w1, [x0]
    93b0:	ldrh	w1, [x3, x1, lsl #1]
    93b4:	tbz	w1, #13, 9340 <fprintf@plt+0x830>
    93b8:	add	x0, x0, #0x1
    93bc:	str	x0, [sp, #152]
    93c0:	add	x0, x0, #0x1
    93c4:	ldurb	w1, [x0, #-1]
    93c8:	ldrh	w1, [x3, x1, lsl #1]
    93cc:	tbnz	w1, #13, 93bc <fprintf@plt+0x8ac>
    93d0:	b	9340 <fprintf@plt+0x830>
    93d4:	nop
    93d8:	stp	x29, x30, [sp, #-80]!
    93dc:	mov	x29, sp
    93e0:	stp	x19, x20, [sp, #16]
    93e4:	mov	x20, x0
    93e8:	stp	x21, x22, [sp, #32]
    93ec:	mov	x21, x1
    93f0:	bl	8ad0 <getenv@plt>
    93f4:	cbz	x0, 9544 <fprintf@plt+0xa34>
    93f8:	mov	x19, x0
    93fc:	bl	88b0 <__ctype_b_loc@plt>
    9400:	mov	x22, x0
    9404:	ldr	x4, [x0]
    9408:	b	9410 <fprintf@plt+0x900>
    940c:	add	x19, x19, #0x1
    9410:	ldrb	w2, [x19]
    9414:	ubfiz	x3, x2, #1, #8
    9418:	ldrh	w3, [x4, x3]
    941c:	tbnz	w3, #13, 940c <fprintf@plt+0x8fc>
    9420:	cbnz	w2, 9448 <fprintf@plt+0x938>
    9424:	mov	x1, x20
    9428:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    942c:	add	x0, x0, #0x378
    9430:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    9434:	mov	w0, #0x0                   	// #0
    9438:	ldp	x19, x20, [sp, #16]
    943c:	ldp	x21, x22, [sp, #32]
    9440:	ldp	x29, x30, [sp], #80
    9444:	ret
    9448:	stp	x23, x24, [sp, #48]
    944c:	bl	8ac0 <__errno_location@plt>
    9450:	mov	x23, x0
    9454:	add	x1, sp, #0x48
    9458:	mov	x0, x19
    945c:	mov	w2, #0xa                   	// #10
    9460:	str	wzr, [x23]
    9464:	bl	85e0 <strtoul@plt>
    9468:	mov	x24, x0
    946c:	ldr	w1, [x23]
    9470:	cbnz	w1, 9518 <fprintf@plt+0xa08>
    9474:	ldr	x19, [sp, #72]
    9478:	ldr	x22, [x22]
    947c:	ldrb	w0, [x19]
    9480:	ldrb	w3, [x19]
    9484:	mov	x23, x0
    9488:	ldrh	w0, [x22, x0, lsl #1]
    948c:	tbz	w0, #13, 94b4 <fprintf@plt+0x9a4>
    9490:	add	x2, x19, #0x1
    9494:	nop
    9498:	str	x2, [sp, #72]
    949c:	mov	x19, x2
    94a0:	ldrb	w3, [x2], #1
    94a4:	and	x23, x3, #0xff
    94a8:	ubfiz	x1, x3, #1, #8
    94ac:	ldrh	w1, [x22, x1]
    94b0:	tbnz	w1, #13, 9498 <fprintf@plt+0x988>
    94b4:	cbz	w3, 9520 <fprintf@plt+0xa10>
    94b8:	bl	86f0 <__ctype_tolower_loc@plt>
    94bc:	ldr	x0, [x0]
    94c0:	ldr	w0, [x0, x23, lsl #2]
    94c4:	cmp	w0, #0x6b
    94c8:	b.eq	9564 <fprintf@plt+0xa54>  // b.none
    94cc:	b.gt	954c <fprintf@plt+0xa3c>
    94d0:	cmp	w0, #0x62
    94d4:	b.eq	955c <fprintf@plt+0xa4c>  // b.none
    94d8:	cmp	w0, #0x67
    94dc:	mov	x0, #0x1e                  	// #30
    94e0:	b.ne	9518 <fprintf@plt+0xa08>  // b.any
    94e4:	add	x1, x19, #0x1
    94e8:	str	x1, [sp, #72]
    94ec:	ldrb	w2, [x19, #1]
    94f0:	ldrb	w1, [x19, #1]
    94f4:	ldrh	w2, [x22, x2, lsl #1]
    94f8:	tbz	w2, #13, 9514 <fprintf@plt+0xa04>
    94fc:	add	x19, x19, #0x2
    9500:	str	x19, [sp, #72]
    9504:	ldrb	w1, [x19], #1
    9508:	ubfiz	x2, x1, #1, #8
    950c:	ldrh	w2, [x22, x2]
    9510:	tbnz	w2, #13, 9500 <fprintf@plt+0x9f0>
    9514:	cbz	w1, 9524 <fprintf@plt+0xa14>
    9518:	ldp	x23, x24, [sp, #48]
    951c:	b	9424 <fprintf@plt+0x914>
    9520:	mov	x0, #0xa                   	// #10
    9524:	lsl	x1, x24, x0
    9528:	lsr	x0, x1, x0
    952c:	cmp	x0, x24
    9530:	b.ne	9518 <fprintf@plt+0xa08>  // b.any
    9534:	mov	w0, #0x1                   	// #1
    9538:	ldp	x23, x24, [sp, #48]
    953c:	str	x1, [x21]
    9540:	b	9438 <fprintf@plt+0x928>
    9544:	mov	w0, #0x0                   	// #0
    9548:	b	9438 <fprintf@plt+0x928>
    954c:	cmp	w0, #0x6d
    9550:	b.ne	9518 <fprintf@plt+0xa08>  // b.any
    9554:	mov	x0, #0x14                  	// #20
    9558:	b	94e4 <fprintf@plt+0x9d4>
    955c:	mov	x0, #0x0                   	// #0
    9560:	b	94e4 <fprintf@plt+0x9d4>
    9564:	mov	x0, #0xa                   	// #10
    9568:	b	94e4 <fprintf@plt+0x9d4>
    956c:	nop
    9570:	stp	x29, x30, [sp, #-48]!
    9574:	mov	w3, w2
    9578:	mov	w2, #0x1                   	// #1
    957c:	mov	x29, sp
    9580:	stp	x19, x20, [sp, #16]
    9584:	mov	x19, x1
    9588:	mov	x20, x0
    958c:	add	x1, sp, #0x28
    9590:	bl	8d18 <fprintf@plt+0x208>
    9594:	ands	w0, w0, #0xff
    9598:	b.eq	95b0 <fprintf@plt+0xaa0>  // b.none
    959c:	ldr	x1, [sp, #40]
    95a0:	mov	x2, #0x7fffffff            	// #2147483647
    95a4:	cmp	x1, x2
    95a8:	b.hi	95bc <fprintf@plt+0xaac>  // b.pmore
    95ac:	str	w1, [x19]
    95b0:	ldp	x19, x20, [sp, #16]
    95b4:	ldp	x29, x30, [sp], #48
    95b8:	ret
    95bc:	mov	x1, x20
    95c0:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    95c4:	add	x0, x0, #0x378
    95c8:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    95cc:	mov	w0, #0x0                   	// #0
    95d0:	b	95b0 <fprintf@plt+0xaa0>
    95d4:	nop
    95d8:	stp	x29, x30, [sp, #-208]!
    95dc:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    95e0:	add	x0, x0, #0x3d8
    95e4:	mov	x29, sp
    95e8:	stp	x19, x20, [sp, #16]
    95ec:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    95f0:	stp	x21, x22, [sp, #32]
    95f4:	stp	x23, x24, [sp, #48]
    95f8:	stp	x25, x26, [sp, #64]
    95fc:	stp	x27, x28, [sp, #80]
    9600:	str	xzr, [sp, #168]
    9604:	bl	8ad0 <getenv@plt>
    9608:	cbz	x0, 96a0 <fprintf@plt+0xb90>
    960c:	mov	x20, x0
    9610:	bl	88b0 <__ctype_b_loc@plt>
    9614:	mov	x23, x0
    9618:	ldr	x22, [x0]
    961c:	b	9624 <fprintf@plt+0xb14>
    9620:	add	x20, x20, #0x1
    9624:	ldrb	w0, [x20]
    9628:	ldrh	w0, [x22, x0, lsl #1]
    962c:	tbnz	w0, #13, 9620 <fprintf@plt+0xb10>
    9630:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9634:	mov	x0, x20
    9638:	add	x1, x1, #0x3e8
    963c:	mov	x2, #0x9                   	// #9
    9640:	bl	8940 <strncasecmp@plt>
    9644:	cbz	w0, 9df4 <fprintf@plt+0x12e4>
    9648:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    964c:	mov	x0, x20
    9650:	add	x1, x1, #0x3f8
    9654:	mov	x2, #0xc                   	// #12
    9658:	bl	8940 <strncasecmp@plt>
    965c:	cbnz	w0, aa70 <fprintf@plt+0x1f60>
    9660:	add	x20, x20, #0xc
    9664:	mov	w21, #0xffffffff            	// #-1
    9668:	ldrb	w0, [x20]
    966c:	ldrb	w1, [x20]
    9670:	ldrh	w0, [x22, x0, lsl #1]
    9674:	tbz	w0, #13, 9688 <fprintf@plt+0xb78>
    9678:	ldrb	w1, [x20, #1]!
    967c:	ubfiz	x0, x1, #1, #8
    9680:	ldrh	w0, [x22, x0]
    9684:	tbnz	w0, #13, 9678 <fprintf@plt+0xb68>
    9688:	cmp	w1, #0x3a
    968c:	b.eq	a844 <fprintf@plt+0x1d34>  // b.none
    9690:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    9694:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9698:	add	x0, x0, #0x428
    969c:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    96a0:	add	x20, x19, #0x2b8
    96a4:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    96a8:	add	x1, x20, #0x18
    96ac:	add	x0, x0, #0x4a8
    96b0:	bl	8c30 <fprintf@plt+0x120>
    96b4:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    96b8:	add	x1, x20, #0x19
    96bc:	add	x21, x23, #0x554
    96c0:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    96c4:	add	x0, x0, #0x4b8
    96c8:	bl	8c30 <fprintf@plt+0x120>
    96cc:	mov	x1, x21
    96d0:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    96d4:	add	x0, x0, #0x4c8
    96d8:	bl	8c30 <fprintf@plt+0x120>
    96dc:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    96e0:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    96e4:	add	x0, x0, #0x4e0
    96e8:	add	x1, x1, #0x5f0
    96ec:	bl	8c30 <fprintf@plt+0x120>
    96f0:	add	x1, x20, #0x10
    96f4:	mov	w2, #0x0                   	// #0
    96f8:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    96fc:	add	x0, x0, #0x4f8
    9700:	bl	9570 <fprintf@plt+0xa60>
    9704:	add	x1, x21, #0x4
    9708:	mov	w2, #0x0                   	// #0
    970c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9710:	add	x0, x0, #0x510
    9714:	bl	9570 <fprintf@plt+0xa60>
    9718:	add	x1, x20, #0x28
    971c:	mov	w3, #0x0                   	// #0
    9720:	mov	w2, #0x1                   	// #1
    9724:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9728:	add	x0, x0, #0x528
    972c:	bl	8d18 <fprintf@plt+0x208>
    9730:	add	x1, sp, #0xa0
    9734:	mov	w3, #0x0                   	// #0
    9738:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    973c:	mov	w2, #0x0                   	// #0
    9740:	add	x0, x0, #0x540
    9744:	bl	8d18 <fprintf@plt+0x208>
    9748:	tst	w0, #0xff
    974c:	b.eq	9768 <fprintf@plt+0xc58>  // b.none
    9750:	ldr	x0, [sp, #160]
    9754:	mov	x2, #0x7fffffff            	// #2147483647
    9758:	mov	x1, #0xffffffff            	// #4294967295
    975c:	cmp	x0, x2
    9760:	csel	x0, x0, x1, ls  // ls = plast
    9764:	str	w0, [x20, #20]
    9768:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    976c:	add	x1, x1, #0x600
    9770:	mov	w2, #0x1                   	// #1
    9774:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9778:	add	x0, x0, #0x558
    977c:	bl	9570 <fprintf@plt+0xa60>
    9780:	bl	1a448 <omp_test_nest_lock@OMP_1.0+0x398>
    9784:	adrp	x22, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9788:	ldr	x2, [x19, #696]
    978c:	add	x1, x19, #0x2b8
    9790:	add	x0, x22, #0x568
    9794:	str	x2, [x1, #48]
    9798:	bl	8ad0 <getenv@plt>
    979c:	mov	x20, x0
    97a0:	cbz	x0, 97e8 <fprintf@plt+0xcd8>
    97a4:	bl	88b0 <__ctype_b_loc@plt>
    97a8:	mov	x26, x0
    97ac:	ldr	x2, [x0]
    97b0:	b	97b8 <fprintf@plt+0xca8>
    97b4:	add	x20, x20, #0x1
    97b8:	ldrb	w1, [x20]
    97bc:	ubfiz	x0, x1, #1, #8
    97c0:	ldrh	w0, [x2, x0]
    97c4:	tbnz	w0, #13, 97b4 <fprintf@plt+0xca4>
    97c8:	cbnz	w1, 9e00 <fprintf@plt+0x12f0>
    97cc:	mov	x20, #0x0                   	// #0
    97d0:	mov	x0, x20
    97d4:	bl	8900 <free@plt>
    97d8:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    97dc:	add	x1, x22, #0x568
    97e0:	add	x0, x0, #0x378
    97e4:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    97e8:	add	x0, x19, #0x2b8
    97ec:	ldr	x0, [x0, #48]
    97f0:	str	x0, [x19, #696]
    97f4:	adrp	x21, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    97f8:	add	x0, x21, #0x5b8
    97fc:	bl	8ad0 <getenv@plt>
    9800:	mov	x20, x0
    9804:	cbz	x0, abd4 <fprintf@plt+0x20c4>
    9808:	bl	88b0 <__ctype_b_loc@plt>
    980c:	ldr	x28, [x0]
    9810:	b	9818 <fprintf@plt+0xd08>
    9814:	add	x20, x20, #0x1
    9818:	ldrb	w0, [x20]
    981c:	ubfiz	x1, x0, #1, #8
    9820:	ldrh	w1, [x28, x1]
    9824:	tbnz	w1, #13, 9814 <fprintf@plt+0xd04>
    9828:	cbz	w0, 9860 <fprintf@plt+0xd50>
    982c:	add	x22, x19, #0x2b8
    9830:	mov	w24, #0x0                   	// #0
    9834:	add	x22, x22, #0x38
    9838:	ldrb	w25, [x22, #7]
    983c:	mov	x1, x22
    9840:	mov	x0, x20
    9844:	add	x22, x22, #0xc
    9848:	mov	x2, x25
    984c:	bl	8940 <strncasecmp@plt>
    9850:	cbz	w0, a6c4 <fprintf@plt+0x1bb4>
    9854:	add	w24, w24, #0x1
    9858:	cmp	w24, #0x5
    985c:	b.ne	9838 <fprintf@plt+0xd28>  // b.any
    9860:	mov	x26, #0x0                   	// #0
    9864:	mov	x0, x26
    9868:	bl	8900 <free@plt>
    986c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9870:	add	x1, x21, #0x5b8
    9874:	add	x0, x0, #0x378
    9878:	mov	w24, #0x0                   	// #0
    987c:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    9880:	adrp	x22, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9884:	add	x0, x22, #0x5c8
    9888:	bl	8ad0 <getenv@plt>
    988c:	str	x0, [sp, #176]
    9890:	mov	x20, x0
    9894:	cbz	x0, 99fc <fprintf@plt+0xeec>
    9898:	bl	88b0 <__ctype_b_loc@plt>
    989c:	mov	x21, x0
    98a0:	mov	x1, x20
    98a4:	ldr	x25, [x0]
    98a8:	b	98b0 <fprintf@plt+0xda0>
    98ac:	str	x1, [sp, #176]
    98b0:	mov	x28, x1
    98b4:	ldrb	w0, [x1], #1
    98b8:	ubfiz	x2, x0, #1, #8
    98bc:	ldrh	w2, [x25, x2]
    98c0:	tbnz	w2, #13, 98ac <fprintf@plt+0xd9c>
    98c4:	cbz	w0, 9dac <fprintf@plt+0x129c>
    98c8:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    98cc:	mov	x0, x28
    98d0:	add	x1, x1, #0x5d8
    98d4:	mov	x2, #0x7                   	// #7
    98d8:	bl	8940 <strncasecmp@plt>
    98dc:	cbnz	w0, 9f28 <fprintf@plt+0x1418>
    98e0:	add	x28, x28, #0x7
    98e4:	mov	w26, #0x1                   	// #1
    98e8:	str	x28, [sp, #176]
    98ec:	ldr	x1, [sp, #176]
    98f0:	mov	x0, x1
    98f4:	ldrb	w2, [x0], #1
    98f8:	ubfiz	x3, x2, #1, #8
    98fc:	ldrh	w3, [x25, x3]
    9900:	tbz	w3, #13, 9920 <fprintf@plt+0xe10>
    9904:	nop
    9908:	str	x0, [sp, #176]
    990c:	mov	x1, x0
    9910:	ldrb	w2, [x0], #1
    9914:	ubfiz	x3, x2, #1, #8
    9918:	ldrh	w3, [x25, x3]
    991c:	tbnz	w3, #13, 9908 <fprintf@plt+0xdf8>
    9920:	cbz	w2, a9d8 <fprintf@plt+0x1ec8>
    9924:	add	x20, x1, #0x1
    9928:	str	x20, [sp, #176]
    992c:	ldrb	w0, [x1]
    9930:	cmp	w0, #0x28
    9934:	b.ne	9dac <fprintf@plt+0x129c>  // b.any
    9938:	ldrb	w0, [x1, #1]
    993c:	ldrh	w0, [x25, x0, lsl #1]
    9940:	tbz	w0, #13, 9960 <fprintf@plt+0xe50>
    9944:	add	x1, x1, #0x2
    9948:	mov	x20, x1
    994c:	str	x1, [sp, #176]
    9950:	add	x1, x1, #0x1
    9954:	ldrb	w0, [x20]
    9958:	ldrh	w0, [x25, x0, lsl #1]
    995c:	tbnz	w0, #13, 9948 <fprintf@plt+0xe38>
    9960:	bl	8ac0 <__errno_location@plt>
    9964:	mov	x25, x0
    9968:	add	x1, sp, #0xb8
    996c:	mov	w2, #0xa                   	// #10
    9970:	mov	x0, x20
    9974:	str	wzr, [x25]
    9978:	bl	85e0 <strtoul@plt>
    997c:	mov	x1, x0
    9980:	ldr	w2, [x25]
    9984:	cbnz	w2, 9dac <fprintf@plt+0x129c>
    9988:	ldr	x6, [sp, #184]
    998c:	str	x6, [sp, #176]
    9990:	ldr	x5, [x21]
    9994:	ldrb	w0, [x6]
    9998:	ldrb	w3, [x6]
    999c:	ldrh	w0, [x5, x0, lsl #1]
    99a0:	tbz	w0, #13, 99c0 <fprintf@plt+0xeb0>
    99a4:	add	x2, x6, #0x1
    99a8:	str	x2, [sp, #176]
    99ac:	mov	x6, x2
    99b0:	ldrb	w3, [x2], #1
    99b4:	ubfiz	x4, x3, #1, #8
    99b8:	ldrh	w4, [x5, x4]
    99bc:	tbnz	w4, #13, 99a8 <fprintf@plt+0xe98>
    99c0:	cmp	w3, #0x29
    99c4:	b.ne	9dac <fprintf@plt+0x129c>  // b.any
    99c8:	add	x6, x6, #0x1
    99cc:	str	x6, [sp, #176]
    99d0:	b	99d8 <fprintf@plt+0xec8>
    99d4:	str	x0, [sp, #176]
    99d8:	ldr	x2, [sp, #176]
    99dc:	add	x0, x2, #0x1
    99e0:	ldrb	w3, [x2]
    99e4:	ldrb	w4, [x2]
    99e8:	ldrh	w2, [x5, x3, lsl #1]
    99ec:	tbnz	w2, #13, 99d4 <fprintf@plt+0xec4>
    99f0:	cbnz	w4, 9dac <fprintf@plt+0x129c>
    99f4:	cbz	w24, aae8 <fprintf@plt+0x1fd8>
    99f8:	mov	w24, #0x1                   	// #1
    99fc:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9a00:	add	x0, x0, #0x650
    9a04:	bl	8ad0 <getenv@plt>
    9a08:	str	x0, [sp, #136]
    9a0c:	cbz	x0, 9bd0 <fprintf@plt+0x10c0>
    9a10:	bl	88b0 <__ctype_b_loc@plt>
    9a14:	add	x21, sp, #0xc8
    9a18:	str	x0, [sp, #96]
    9a1c:	bl	8ac0 <__errno_location@plt>
    9a20:	mov	x20, x0
    9a24:	mov	x26, #0x0                   	// #0
    9a28:	mov	w25, #0x0                   	// #0
    9a2c:	mov	x27, #0xffff                	// #65535
    9a30:	adrp	x22, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    9a34:	ldr	x0, [sp, #96]
    9a38:	ldr	x6, [sp, #136]
    9a3c:	ldr	x0, [x0]
    9a40:	ldrb	w1, [x6]
    9a44:	ldrh	w1, [x0, x1, lsl #1]
    9a48:	tbnz	w1, #13, 9bb4 <fprintf@plt+0x10a4>
    9a4c:	str	wzr, [x20]
    9a50:	mov	x1, x21
    9a54:	mov	x0, x6
    9a58:	mov	w2, #0x0                   	// #0
    9a5c:	bl	85e0 <strtoul@plt>
    9a60:	mov	x28, x0
    9a64:	ldr	w1, [x20]
    9a68:	cmp	w1, #0x0
    9a6c:	ccmp	x0, x27, #0x2, eq  // eq = none
    9a70:	b.hi	9dd8 <fprintf@plt+0x12c8>  // b.pmore
    9a74:	ldr	x6, [sp, #200]
    9a78:	ldrb	w1, [x6]
    9a7c:	cmp	w1, #0x2d
    9a80:	b.eq	9b60 <fprintf@plt+0x1050>  // b.none
    9a84:	mov	x2, #0x1                   	// #1
    9a88:	mov	x5, #0x0                   	// #0
    9a8c:	mov	x8, x2
    9a90:	cbnz	w25, 9af8 <fprintf@plt+0xfe8>
    9a94:	add	x26, x26, x2
    9a98:	ldr	x0, [sp, #96]
    9a9c:	ubfiz	x2, x1, #1, #8
    9aa0:	ldr	x0, [x0]
    9aa4:	ldrh	w2, [x0, x2]
    9aa8:	tbz	w2, #13, 9ac0 <fprintf@plt+0xfb0>
    9aac:	nop
    9ab0:	ldrb	w1, [x6, #1]!
    9ab4:	ubfiz	x2, x1, #1, #8
    9ab8:	ldrh	w2, [x0, x2]
    9abc:	tbnz	w2, #13, 9ab0 <fprintf@plt+0xfa0>
    9ac0:	cmp	w1, #0x2c
    9ac4:	b.eq	9bb4 <fprintf@plt+0x10a4>  // b.none
    9ac8:	cbnz	w1, 9a40 <fprintf@plt+0xf30>
    9acc:	cbz	w25, ac90 <fprintf@plt+0x2180>
    9ad0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    9ad4:	ldr	x0, [x0, #1608]
    9ad8:	cbz	x0, 9bbc <fprintf@plt+0x10ac>
    9adc:	add	x0, x19, #0x2b8
    9ae0:	ldrb	w1, [x0, #26]
    9ae4:	cbnz	w1, 9aec <fprintf@plt+0xfdc>
    9ae8:	strb	w25, [x0, #26]
    9aec:	bl	1c6e0 <omp_pause_resource_all_@@OMP_5.0+0xa38>
    9af0:	b	9bdc <fprintf@plt+0x10cc>
    9af4:	cbz	x2, 9b58 <fprintf@plt+0x1048>
    9af8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    9afc:	sub	x5, x5, #0x1
    9b00:	ldr	x1, [x22, #1608]
    9b04:	stp	x8, x6, [sp, #120]
    9b08:	ldr	x0, [x0, #1568]
    9b0c:	ldr	x0, [x0, x1, lsl #3]
    9b10:	stp	x0, x5, [sp, #104]
    9b14:	bl	1bd88 <omp_pause_resource_all_@@OMP_5.0+0xe0>
    9b18:	ldr	x0, [sp, #104]
    9b1c:	mov	x1, x28
    9b20:	mov	w4, #0x1                   	// #1
    9b24:	mov	x3, #0x0                   	// #0
    9b28:	mov	x2, #0x1                   	// #1
    9b2c:	bl	1bd98 <omp_pause_resource_all_@@OMP_5.0+0xf0>
    9b30:	tst	w0, #0xff
    9b34:	ldp	x5, x8, [sp, #112]
    9b38:	ldr	x6, [sp, #128]
    9b3c:	add	x28, x28, x8
    9b40:	b.eq	9b50 <fprintf@plt+0x1040>  // b.none
    9b44:	ldr	x1, [x22, #1608]
    9b48:	add	x1, x1, #0x1
    9b4c:	str	x1, [x22, #1608]
    9b50:	cmn	x5, #0x1
    9b54:	b.ne	9af8 <fprintf@plt+0xfe8>  // b.any
    9b58:	ldrb	w1, [x6]
    9b5c:	b	9a98 <fprintf@plt+0xf88>
    9b60:	mov	x1, x21
    9b64:	add	x0, x6, #0x1
    9b68:	mov	w2, #0x0                   	// #0
    9b6c:	bl	85e0 <strtoul@plt>
    9b70:	ldr	w1, [x20]
    9b74:	mov	x5, x0
    9b78:	cbnz	w1, 9dd8 <fprintf@plt+0x12c8>
    9b7c:	cmp	x0, x27
    9b80:	ccmp	x28, x0, #0x2, ls  // ls = plast
    9b84:	b.hi	9dd8 <fprintf@plt+0x12c8>  // b.pmore
    9b88:	ldr	x6, [sp, #200]
    9b8c:	mov	x8, #0x1                   	// #1
    9b90:	ldrb	w0, [x6]
    9b94:	cmp	w0, #0x3a
    9b98:	b.eq	9d70 <fprintf@plt+0x1260>  // b.none
    9b9c:	sub	x5, x5, x28
    9ba0:	udiv	x5, x5, x8
    9ba4:	add	x2, x5, #0x1
    9ba8:	cbnz	w25, 9af4 <fprintf@plt+0xfe4>
    9bac:	ldrb	w1, [x6]
    9bb0:	b	9a94 <fprintf@plt+0xf84>
    9bb4:	add	x6, x6, #0x1
    9bb8:	b	9a40 <fprintf@plt+0xf30>
    9bbc:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    9bc0:	ldr	x0, [x25, #1568]
    9bc4:	bl	8900 <free@plt>
    9bc8:	str	xzr, [x25, #1568]
    9bcc:	nop
    9bd0:	add	x0, x19, #0x2b8
    9bd4:	ldrb	w0, [x0, #26]
    9bd8:	cbnz	w0, 9aec <fprintf@plt+0xfdc>
    9bdc:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9be0:	add	x0, x0, #0x6a0
    9be4:	bl	8ad0 <getenv@plt>
    9be8:	mov	x20, x0
    9bec:	cbz	x0, 9c00 <fprintf@plt+0x10f0>
    9bf0:	bl	85f0 <strlen@plt>
    9bf4:	mov	x1, x0
    9bf8:	mov	x0, x20
    9bfc:	bl	26718 <acc_set_cuda_stream@@OACC_2.0+0x580>
    9c00:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9c04:	add	x0, x0, #0x6b8
    9c08:	bl	8ad0 <getenv@plt>
    9c0c:	mov	x20, x0
    9c10:	cbz	x0, 9c98 <fprintf@plt+0x1188>
    9c14:	bl	88b0 <__ctype_b_loc@plt>
    9c18:	ldr	x22, [x0]
    9c1c:	b	9c24 <fprintf@plt+0x1114>
    9c20:	add	x20, x20, #0x1
    9c24:	ldrb	w0, [x20]
    9c28:	ldrh	w0, [x22, x0, lsl #1]
    9c2c:	tbnz	w0, #13, 9c20 <fprintf@plt+0x1110>
    9c30:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9c34:	mov	x0, x20
    9c38:	add	x1, x1, #0x6d8
    9c3c:	mov	x2, #0x6                   	// #6
    9c40:	bl	8940 <strncasecmp@plt>
    9c44:	cbz	w0, 9de8 <fprintf@plt+0x12d8>
    9c48:	mov	x0, x20
    9c4c:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9c50:	mov	x2, #0x7                   	// #7
    9c54:	add	x1, x1, #0x6e0
    9c58:	bl	8940 <strncasecmp@plt>
    9c5c:	mov	w21, w0
    9c60:	cbnz	w0, aa34 <fprintf@plt+0x1f24>
    9c64:	add	x20, x20, #0x7
    9c68:	ldrb	w0, [x20]
    9c6c:	ubfiz	x1, x0, #1, #8
    9c70:	ldrh	w1, [x22, x1]
    9c74:	tbz	w1, #13, 9c88 <fprintf@plt+0x1178>
    9c78:	ldrb	w0, [x20, #1]!
    9c7c:	ubfiz	x1, x0, #1, #8
    9c80:	ldrh	w1, [x22, x1]
    9c84:	tbnz	w1, #13, 9c78 <fprintf@plt+0x1168>
    9c88:	cbz	w0, a7ac <fprintf@plt+0x1c9c>
    9c8c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9c90:	add	x0, x0, #0x6e8
    9c94:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    9c98:	adrp	x22, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9c9c:	add	x0, x22, #0x6c8
    9ca0:	bl	8ad0 <getenv@plt>
    9ca4:	mov	x20, x0
    9ca8:	cbz	x0, aab0 <fprintf@plt+0x1fa0>
    9cac:	mov	w21, #0xffffffff            	// #-1
    9cb0:	bl	88b0 <__ctype_b_loc@plt>
    9cb4:	mov	x25, x0
    9cb8:	ldr	x24, [x0]
    9cbc:	b	9cc4 <fprintf@plt+0x11b4>
    9cc0:	add	x20, x20, #0x1
    9cc4:	ldrb	w1, [x20]
    9cc8:	ubfiz	x0, x1, #1, #8
    9ccc:	ldrh	w0, [x24, x0]
    9cd0:	tbnz	w0, #13, 9cc0 <fprintf@plt+0x11b0>
    9cd4:	cbz	w1, 9ff0 <fprintf@plt+0x14e0>
    9cd8:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9cdc:	mov	x0, x20
    9ce0:	add	x1, x1, #0x720
    9ce4:	mov	x2, #0x8                   	// #8
    9ce8:	bl	8940 <strncasecmp@plt>
    9cec:	cbz	w0, 9d08 <fprintf@plt+0x11f8>
    9cf0:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9cf4:	mov	x0, x20
    9cf8:	add	x1, x1, #0x730
    9cfc:	mov	x2, #0x8                   	// #8
    9d00:	bl	8940 <strncasecmp@plt>
    9d04:	cbnz	w0, 9f68 <fprintf@plt+0x1458>
    9d08:	add	x20, x20, #0x8
    9d0c:	mov	x4, #0x1                   	// #1
    9d10:	mov	x26, #0xffffffffffffffff    	// #-1
    9d14:	str	x20, [sp, #200]
    9d18:	ldr	x1, [sp, #200]
    9d1c:	ldrb	w2, [x1], #1
    9d20:	ubfiz	x0, x2, #1, #8
    9d24:	ldrh	w0, [x24, x0]
    9d28:	tbz	w0, #13, 9d44 <fprintf@plt+0x1234>
    9d2c:	nop
    9d30:	str	x1, [sp, #200]
    9d34:	ldrb	w2, [x1], #1
    9d38:	ubfiz	x3, x2, #1, #8
    9d3c:	ldrh	w3, [x24, x3]
    9d40:	tbnz	w3, #13, 9d30 <fprintf@plt+0x1220>
    9d44:	cbnz	w2, 9ff0 <fprintf@plt+0x14e0>
    9d48:	umulh	x0, x26, x4
    9d4c:	cbnz	x0, ae94 <fprintf@plt+0x2384>
    9d50:	mul	x4, x4, x26
    9d54:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    9d58:	cmp	w21, #0x1
    9d5c:	str	x4, [x24, #1584]
    9d60:	b.eq	a01c <fprintf@plt+0x150c>  // b.none
    9d64:	cbnz	w21, aac0 <fprintf@plt+0x1fb0>
    9d68:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    9d6c:	b	a02c <fprintf@plt+0x151c>
    9d70:	add	x0, x6, x8
    9d74:	mov	x1, x21
    9d78:	mov	w2, #0x0                   	// #0
    9d7c:	str	x5, [sp, #104]
    9d80:	bl	85e0 <strtoul@plt>
    9d84:	mov	x8, x0
    9d88:	ldr	w1, [x20]
    9d8c:	cbnz	w1, 9dd8 <fprintf@plt+0x12c8>
    9d90:	sub	x1, x0, #0x1
    9d94:	mov	x0, #0xfffe                	// #65534
    9d98:	cmp	x1, x0
    9d9c:	b.hi	9dd8 <fprintf@plt+0x12c8>  // b.pmore
    9da0:	ldr	x5, [sp, #104]
    9da4:	ldr	x6, [sp, #200]
    9da8:	b	9b9c <fprintf@plt+0x108c>
    9dac:	adrp	x28, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    9db0:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    9db4:	ldr	x0, [x25, #1568]
    9db8:	bl	8900 <free@plt>
    9dbc:	str	xzr, [x25, #1568]
    9dc0:	add	x1, x22, #0x5c8
    9dc4:	str	xzr, [x28, #1608]
    9dc8:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9dcc:	add	x0, x0, #0x378
    9dd0:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    9dd4:	b	99fc <fprintf@plt+0xeec>
    9dd8:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9ddc:	add	x0, x0, #0x668
    9de0:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    9de4:	b	9bd0 <fprintf@plt+0x10c0>
    9de8:	add	x20, x20, #0x6
    9dec:	mov	w21, #0x1                   	// #1
    9df0:	b	9c68 <fprintf@plt+0x1158>
    9df4:	add	x20, x20, #0x9
    9df8:	mov	w21, #0x1                   	// #1
    9dfc:	b	9668 <fprintf@plt+0xb58>
    9e00:	bl	8ac0 <__errno_location@plt>
    9e04:	mov	x25, x0
    9e08:	add	x21, sp, #0xc8
    9e0c:	mov	x0, x20
    9e10:	mov	x1, x21
    9e14:	mov	w2, #0xa                   	// #10
    9e18:	str	wzr, [x25]
    9e1c:	bl	85e0 <strtoul@plt>
    9e20:	mov	x27, x0
    9e24:	ldr	w1, [x25]
    9e28:	cbnz	w1, 97cc <fprintf@plt+0xcbc>
    9e2c:	cmp	x0, #0x0
    9e30:	b.le	97cc <fprintf@plt+0xcbc>
    9e34:	ldr	x1, [sp, #200]
    9e38:	ldr	x4, [x26]
    9e3c:	ldrb	w0, [x1]
    9e40:	ldrb	w2, [x1]
    9e44:	ldrh	w0, [x4, x0, lsl #1]
    9e48:	tbz	w0, #13, 9e64 <fprintf@plt+0x1354>
    9e4c:	add	x1, x1, #0x1
    9e50:	str	x1, [sp, #200]
    9e54:	ldrb	w2, [x1], #1
    9e58:	ubfiz	x0, x2, #1, #8
    9e5c:	ldrh	w0, [x4, x0]
    9e60:	tbnz	w0, #13, 9e50 <fprintf@plt+0x1340>
    9e64:	cbz	w2, acfc <fprintf@plt+0x21ec>
    9e68:	cmp	w2, #0x2c
    9e6c:	b.ne	97cc <fprintf@plt+0xcbc>  // b.any
    9e70:	mov	x28, #0x0                   	// #0
    9e74:	mov	x20, #0x0                   	// #0
    9e78:	str	xzr, [sp, #96]
    9e7c:	ldr	x0, [sp, #96]
    9e80:	ldr	x2, [sp, #200]
    9e84:	cmp	x28, x0
    9e88:	add	x24, x2, #0x1
    9e8c:	b.eq	ae9c <fprintf@plt+0x238c>  // b.none
    9e90:	ldrb	w0, [x2, #1]
    9e94:	ldrb	w1, [x2, #1]
    9e98:	ldrh	w0, [x4, x0, lsl #1]
    9e9c:	tbz	w0, #13, 9eb0 <fprintf@plt+0x13a0>
    9ea0:	ldrb	w1, [x24, #1]!
    9ea4:	ubfiz	x0, x1, #1, #8
    9ea8:	ldrh	w0, [x4, x0]
    9eac:	tbnz	w0, #13, 9ea0 <fprintf@plt+0x1390>
    9eb0:	cbz	w1, 97d0 <fprintf@plt+0xcc0>
    9eb4:	str	wzr, [x25]
    9eb8:	mov	x1, x21
    9ebc:	mov	x0, x24
    9ec0:	mov	w2, #0xa                   	// #10
    9ec4:	bl	85e0 <strtoul@plt>
    9ec8:	mov	x27, x0
    9ecc:	ldr	w1, [x25]
    9ed0:	cbnz	w1, 97d0 <fprintf@plt+0xcc0>
    9ed4:	cmp	x0, #0x0
    9ed8:	b.le	97d0 <fprintf@plt+0xcc0>
    9edc:	ldr	x1, [sp, #200]
    9ee0:	str	x0, [x20, x28, lsl #3]
    9ee4:	ldr	x4, [x26]
    9ee8:	add	x3, x28, #0x1
    9eec:	ldrb	w0, [x1]
    9ef0:	ldrb	w2, [x1]
    9ef4:	ldrh	w0, [x4, x0, lsl #1]
    9ef8:	tbz	w0, #13, 9f14 <fprintf@plt+0x1404>
    9efc:	add	x1, x1, #0x1
    9f00:	str	x1, [sp, #200]
    9f04:	ldrb	w2, [x1], #1
    9f08:	ubfiz	x0, x2, #1, #8
    9f0c:	ldrh	w0, [x4, x0]
    9f10:	tbnz	w0, #13, 9f00 <fprintf@plt+0x13f0>
    9f14:	cbz	w2, b008 <fprintf@plt+0x24f8>
    9f18:	cmp	w2, #0x2c
    9f1c:	b.ne	97d0 <fprintf@plt+0xcc0>  // b.any
    9f20:	mov	x28, x3
    9f24:	b	9e7c <fprintf@plt+0x136c>
    9f28:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9f2c:	mov	x0, x28
    9f30:	add	x1, x1, #0x5e0
    9f34:	mov	x2, #0x5                   	// #5
    9f38:	bl	8940 <strncasecmp@plt>
    9f3c:	cbz	w0, aa78 <fprintf@plt+0x1f68>
    9f40:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9f44:	mov	x0, x28
    9f48:	add	x1, x1, #0x5e8
    9f4c:	mov	x2, #0x7                   	// #7
    9f50:	bl	8940 <strncasecmp@plt>
    9f54:	cbnz	w0, ad20 <fprintf@plt+0x2210>
    9f58:	add	x28, x28, #0x7
    9f5c:	mov	w26, #0x3                   	// #3
    9f60:	str	x28, [sp, #176]
    9f64:	b	98ec <fprintf@plt+0xddc>
    9f68:	bl	8ac0 <__errno_location@plt>
    9f6c:	mov	x24, x0
    9f70:	add	x1, sp, #0xc8
    9f74:	mov	x0, x20
    9f78:	mov	w2, #0xa                   	// #10
    9f7c:	str	wzr, [x24]
    9f80:	bl	89c0 <strtoull@plt>
    9f84:	mov	x26, x0
    9f88:	ldr	w1, [x24]
    9f8c:	cbnz	w1, 9ff0 <fprintf@plt+0x14e0>
    9f90:	ldr	x20, [sp, #200]
    9f94:	ldr	x24, [x25]
    9f98:	ldrb	w0, [x20]
    9f9c:	ldrb	w2, [x20]
    9fa0:	mov	x25, x0
    9fa4:	ldrh	w0, [x24, x0, lsl #1]
    9fa8:	tbz	w0, #13, 9fcc <fprintf@plt+0x14bc>
    9fac:	add	x1, x20, #0x1
    9fb0:	str	x1, [sp, #200]
    9fb4:	mov	x20, x1
    9fb8:	ldrb	w2, [x1], #1
    9fbc:	and	x25, x2, #0xff
    9fc0:	ubfiz	x3, x2, #1, #8
    9fc4:	ldrh	w3, [x24, x3]
    9fc8:	tbnz	w3, #13, 9fb0 <fprintf@plt+0x14a0>
    9fcc:	cbz	w2, ae48 <fprintf@plt+0x2338>
    9fd0:	bl	86f0 <__ctype_tolower_loc@plt>
    9fd4:	ldr	x0, [x0]
    9fd8:	ldr	w0, [x0, x25, lsl #2]
    9fdc:	cmp	w0, #0x6d
    9fe0:	b.eq	ae88 <fprintf@plt+0x2378>  // b.none
    9fe4:	b.le	ab18 <fprintf@plt+0x2008>
    9fe8:	cmp	w0, #0x74
    9fec:	b.eq	ae6c <fprintf@plt+0x235c>  // b.none
    9ff0:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    9ff4:	add	x1, x22, #0x6c8
    9ff8:	add	x0, x0, #0x378
    9ffc:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    a000:	cmp	w21, #0x1
    a004:	b.ne	ac80 <fprintf@plt+0x2170>  // b.any
    a008:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a00c:	mov	x0, #0xac00                	// #44032
    a010:	movk	x0, #0xfc23, lsl #16
    a014:	movk	x0, #0x6, lsl #32
    a018:	str	x0, [x24, #1584]
    a01c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a020:	mov	x1, #0x3e8                 	// #1000
    a024:	mov	w21, #0x1                   	// #1
    a028:	str	x1, [x0, #1600]
    a02c:	ldr	x1, [x24, #1584]
    a030:	ldr	x2, [x0, #1600]
    a034:	cmp	x2, x1
    a038:	b.ls	a040 <fprintf@plt+0x1530>  // b.plast
    a03c:	str	x1, [x0, #1600]
    a040:	add	x20, sp, #0xa8
    a044:	adrp	x22, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a048:	add	x0, x22, #0x660
    a04c:	bl	86a0 <pthread_attr_init@plt>
    a050:	mov	x1, x20
    a054:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a058:	add	x0, x0, #0x740
    a05c:	bl	93d8 <fprintf@plt+0x8c8>
    a060:	tst	w0, #0xff
    a064:	b.ne	a080 <fprintf@plt+0x1570>  // b.any
    a068:	mov	x1, x20
    a06c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a070:	add	x0, x0, #0x750
    a074:	bl	93d8 <fprintf@plt+0x8c8>
    a078:	tst	w0, #0xff
    a07c:	b.eq	a098 <fprintf@plt+0x1588>  // b.none
    a080:	ldr	x1, [sp, #168]
    a084:	add	x0, x22, #0x660
    a088:	bl	87d0 <pthread_attr_setstacksize@plt>
    a08c:	cmp	w0, #0x16
    a090:	b.eq	a9b4 <fprintf@plt+0x1ea4>  // b.none
    a094:	cbnz	w0, ac40 <fprintf@plt+0x2130>
    a098:	ldr	x1, [sp, #168]
    a09c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a0a0:	add	x0, x0, #0x7d0
    a0a4:	str	x1, [sp, #96]
    a0a8:	bl	8ad0 <getenv@plt>
    a0ac:	mov	x20, x0
    a0b0:	cbz	x0, a548 <fprintf@plt+0x1a38>
    a0b4:	bl	88b0 <__ctype_b_loc@plt>
    a0b8:	ldr	x22, [x0]
    a0bc:	b	a0c4 <fprintf@plt+0x15b4>
    a0c0:	add	x20, x20, #0x1
    a0c4:	ldrb	w0, [x20]
    a0c8:	ldrh	w0, [x22, x0, lsl #1]
    a0cc:	tbnz	w0, #13, a0c0 <fprintf@plt+0x15b0>
    a0d0:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a0d4:	mov	x0, x20
    a0d8:	add	x1, x1, #0x368
    a0dc:	mov	x2, #0x4                   	// #4
    a0e0:	bl	8940 <strncasecmp@plt>
    a0e4:	cbnz	w0, a7c4 <fprintf@plt+0x1cb4>
    a0e8:	add	x20, x20, #0x4
    a0ec:	mov	w25, #0x1                   	// #1
    a0f0:	str	wzr, [sp, #128]
    a0f4:	ldrb	w0, [x20]
    a0f8:	ubfiz	x1, x0, #1, #8
    a0fc:	ldrh	w1, [x22, x1]
    a100:	tbz	w1, #13, a118 <fprintf@plt+0x1608>
    a104:	nop
    a108:	ldrb	w0, [x20, #1]!
    a10c:	ubfiz	x1, x0, #1, #8
    a110:	ldrh	w1, [x22, x1]
    a114:	tbnz	w1, #13, a108 <fprintf@plt+0x15f8>
    a118:	cbnz	w0, a640 <fprintf@plt+0x1b30>
    a11c:	cbz	w25, a548 <fprintf@plt+0x1a38>
    a120:	adrp	x20, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    a124:	mov	x2, #0x22                  	// #34
    a128:	mov	x1, #0x1                   	// #1
    a12c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a130:	ldr	x22, [x20, #4040]
    a134:	add	x0, x0, #0x820
    a138:	add	x28, x19, #0x2b8
    a13c:	adrp	x25, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a140:	adrp	x27, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a144:	add	x25, x25, #0x3b0
    a148:	ldr	x3, [x22]
    a14c:	add	x27, x27, #0x3a8
    a150:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a154:	bl	89d0 <fwrite@plt>
    a158:	ldr	x3, [x22]
    a15c:	mov	x2, #0x15                  	// #21
    a160:	mov	x1, #0x1                   	// #1
    a164:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a168:	add	x0, x0, #0x848
    a16c:	bl	89d0 <fwrite@plt>
    a170:	ldrb	w1, [x28, #24]
    a174:	ldr	x0, [x22]
    a178:	cmp	w1, #0x0
    a17c:	csel	x2, x27, x25, ne  // ne = any
    a180:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a184:	add	x1, x1, #0x860
    a188:	bl	8b10 <fprintf@plt>
    a18c:	ldrb	w2, [x28, #25]
    a190:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a194:	ldr	x0, [x22]
    a198:	cmp	w2, #0x0
    a19c:	csel	x2, x27, x25, ne  // ne = any
    a1a0:	add	x1, x1, #0x878
    a1a4:	bl	8b10 <fprintf@plt>
    a1a8:	ldr	x2, [x19, #696]
    a1ac:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a1b0:	ldr	x0, [x22]
    a1b4:	add	x1, x1, #0x890
    a1b8:	bl	8b10 <fprintf@plt>
    a1bc:	ldr	x0, [x26, #1624]
    a1c0:	cmp	x0, #0x1
    a1c4:	b.ls	a204 <fprintf@plt+0x16f4>  // b.plast
    a1c8:	adrp	x27, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a1cc:	add	x27, x27, #0x8c8
    a1d0:	mov	x25, x22
    a1d4:	adrp	x28, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a1d8:	mov	x22, #0x1                   	// #1
    a1dc:	nop
    a1e0:	ldr	x2, [x28, #1504]
    a1e4:	mov	x1, x27
    a1e8:	ldr	x0, [x25]
    a1ec:	ldr	x2, [x2, x22, lsl #3]
    a1f0:	add	x22, x22, #0x1
    a1f4:	bl	8b10 <fprintf@plt>
    a1f8:	ldr	x0, [x26, #1624]
    a1fc:	cmp	x0, x22
    a200:	b.hi	a1e0 <fprintf@plt+0x16d0>  // b.pmore
    a204:	ldr	x22, [x20, #4040]
    a208:	mov	x2, #0x2                   	// #2
    a20c:	mov	x1, #0x1                   	// #1
    a210:	adrp	x26, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a214:	add	x0, x26, #0xa20
    a218:	ldr	x3, [x22]
    a21c:	bl	89d0 <fwrite@plt>
    a220:	ldr	x3, [x22]
    a224:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a228:	mov	x2, #0x12                  	// #18
    a22c:	add	x0, x0, #0x8b0
    a230:	mov	x1, #0x1                   	// #1
    a234:	bl	89d0 <fwrite@plt>
    a238:	add	x0, x19, #0x2b8
    a23c:	ldr	w0, [x0, #8]
    a240:	tbnz	w0, #31, abf8 <fprintf@plt+0x20e8>
    a244:	cmp	w0, #0x1
    a248:	b.eq	ae50 <fprintf@plt+0x2340>  // b.none
    a24c:	add	x22, x19, #0x2b8
    a250:	ldr	x25, [x20, #4040]
    a254:	ldr	w1, [x22, #8]
    a258:	and	w0, w1, #0x7fffffff
    a25c:	cmp	w0, #0x3
    a260:	ldr	x3, [x25]
    a264:	b.eq	adf8 <fprintf@plt+0x22e8>  // b.none
    a268:	tst	w1, #0x7ffffffc
    a26c:	b.ne	a824 <fprintf@plt+0x1d14>  // b.any
    a270:	cmp	w0, #0x2
    a274:	b.eq	ae08 <fprintf@plt+0x22f8>  // b.none
    a278:	cmp	w0, #0x3
    a27c:	b.ne	a650 <fprintf@plt+0x1b40>  // b.any
    a280:	ldr	x22, [x20, #4040]
    a284:	mov	x2, #0x2                   	// #2
    a288:	mov	x1, #0x1                   	// #1
    a28c:	add	x0, x26, #0xa20
    a290:	ldr	x3, [x22]
    a294:	bl	89d0 <fwrite@plt>
    a298:	ldr	x3, [x22]
    a29c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a2a0:	mov	x2, #0x13                  	// #19
    a2a4:	add	x0, x0, #0x920
    a2a8:	mov	x1, #0x1                   	// #1
    a2ac:	bl	89d0 <fwrite@plt>
    a2b0:	add	x0, x19, #0x2b8
    a2b4:	ldrb	w0, [x0, #26]
    a2b8:	cmp	w0, #0x2
    a2bc:	b.eq	ada4 <fprintf@plt+0x2294>  // b.none
    a2c0:	b.hi	a7ec <fprintf@plt+0x1cdc>  // b.pmore
    a2c4:	cbz	w0, addc <fprintf@plt+0x22cc>
    a2c8:	ldr	x3, [x22]
    a2cc:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a2d0:	mov	x2, #0x4                   	// #4
    a2d4:	add	x0, x0, #0x3a8
    a2d8:	mov	x1, #0x1                   	// #1
    a2dc:	bl	89d0 <fwrite@plt>
    a2e0:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a2e4:	ldr	x0, [x20, #4040]
    a2e8:	ldr	x1, [x25, #1528]
    a2ec:	ldr	x3, [x0]
    a2f0:	cmp	x1, #0x1
    a2f4:	b.ls	a370 <fprintf@plt+0x1860>  // b.plast
    a2f8:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a2fc:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a300:	add	x1, x1, #0x958
    a304:	add	x28, x0, #0x960
    a308:	mov	x22, #0x1                   	// #1
    a30c:	adrp	x27, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a310:	str	x1, [sp, #104]
    a314:	b	a330 <fprintf@plt+0x1820>
    a318:	cmp	w0, #0x2
    a31c:	b.eq	a6a4 <fprintf@plt+0x1b94>  // b.none
    a320:	ldr	x0, [x25, #1528]
    a324:	add	x22, x22, #0x1
    a328:	cmp	x0, x22
    a32c:	b.ls	a370 <fprintf@plt+0x1860>  // b.plast
    a330:	ldr	x0, [x27, #1544]
    a334:	ldrb	w0, [x0, x22]
    a338:	cmp	w0, #0x3
    a33c:	b.eq	a688 <fprintf@plt+0x1b78>  // b.none
    a340:	cmp	w0, #0x4
    a344:	b.ne	a318 <fprintf@plt+0x1808>  // b.any
    a348:	mov	x0, x28
    a34c:	mov	x2, #0x7                   	// #7
    a350:	mov	x1, #0x1                   	// #1
    a354:	bl	89d0 <fwrite@plt>
    a358:	ldr	x0, [x20, #4040]
    a35c:	add	x22, x22, #0x1
    a360:	ldr	x3, [x0]
    a364:	ldr	x0, [x25, #1528]
    a368:	cmp	x0, x22
    a36c:	b.hi	a330 <fprintf@plt+0x1820>  // b.pmore
    a370:	ldr	x27, [x20, #4040]
    a374:	mov	x2, #0x2                   	// #2
    a378:	mov	x1, #0x1                   	// #1
    a37c:	add	x0, x26, #0xa20
    a380:	adrp	x28, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a384:	ldr	x3, [x27]
    a388:	bl	89d0 <fwrite@plt>
    a38c:	ldr	x3, [x27]
    a390:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a394:	mov	x2, #0x10                  	// #16
    a398:	add	x0, x0, #0x968
    a39c:	mov	x1, #0x1                   	// #1
    a3a0:	bl	89d0 <fwrite@plt>
    a3a4:	ldr	x0, [x28, #1608]
    a3a8:	cbz	x0, a414 <fprintf@plt+0x1904>
    a3ac:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a3b0:	add	x0, x0, #0x3c0
    a3b4:	mov	x22, #0x0                   	// #0
    a3b8:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a3bc:	stp	x27, x0, [sp, #104]
    a3c0:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a3c4:	add	x0, x0, #0x3b8
    a3c8:	str	x0, [sp, #120]
    a3cc:	nop
    a3d0:	ldr	x1, [x27]
    a3d4:	mov	w0, #0x7b                  	// #123
    a3d8:	bl	86b0 <fputc@plt>
    a3dc:	ldr	x0, [x25, #1568]
    a3e0:	ldr	x0, [x0, x22, lsl #3]
    a3e4:	add	x22, x22, #0x1
    a3e8:	bl	1c760 <omp_pause_resource_all_@@OMP_5.0+0xab8>
    a3ec:	ldp	x1, x2, [sp, #104]
    a3f0:	ldr	x0, [x28, #1608]
    a3f4:	cmp	x0, x22
    a3f8:	ldr	x1, [x1]
    a3fc:	ldr	x0, [sp, #120]
    a400:	csel	x0, x0, x2, ne  // ne = any
    a404:	bl	8600 <fputs@plt>
    a408:	ldr	x0, [x28, #1608]
    a40c:	cmp	x0, x22
    a410:	b.hi	a3d0 <fprintf@plt+0x18c0>  // b.pmore
    a414:	ldr	x22, [x20, #4040]
    a418:	mov	x2, #0x2                   	// #2
    a41c:	mov	x1, #0x1                   	// #1
    a420:	add	x0, x26, #0xa20
    a424:	add	x19, x19, #0x2b8
    a428:	adrp	x25, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a42c:	ldr	x3, [x22]
    a430:	add	x25, x25, #0x3a8
    a434:	bl	89d0 <fwrite@plt>
    a438:	ldr	x0, [x22]
    a43c:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a440:	ldr	x2, [sp, #96]
    a444:	add	x1, x1, #0x980
    a448:	bl	8b10 <fprintf@plt>
    a44c:	ldr	x0, [x22]
    a450:	cmp	w21, #0x1
    a454:	adrp	x3, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a458:	add	x3, x3, #0x3d0
    a45c:	adrp	x2, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a460:	add	x2, x2, #0x3c8
    a464:	csel	x2, x2, x3, eq  // eq = none
    a468:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a46c:	add	x1, x1, #0x9a0
    a470:	bl	8b10 <fprintf@plt>
    a474:	ldr	w2, [x19, #20]
    a478:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a47c:	ldr	x0, [x22]
    a480:	add	x1, x1, #0x9c0
    a484:	adrp	x21, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a488:	add	x21, x21, #0x3b0
    a48c:	bl	8b10 <fprintf@plt>
    a490:	ldr	x0, [x22]
    a494:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a498:	ldr	x2, [x19, #40]
    a49c:	add	x1, x1, #0x9e0
    a4a0:	bl	8b10 <fprintf@plt>
    a4a4:	ldrb	w1, [x23, #1364]
    a4a8:	add	x23, x23, #0x554
    a4ac:	ldr	x0, [x22]
    a4b0:	cmp	w1, #0x0
    a4b4:	csel	x2, x25, x21, ne  // ne = any
    a4b8:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a4bc:	add	x1, x1, #0xa08
    a4c0:	bl	8b10 <fprintf@plt>
    a4c4:	ldr	w2, [x19, #16]
    a4c8:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a4cc:	ldr	x0, [x22]
    a4d0:	add	x1, x1, #0xa28
    a4d4:	bl	8b10 <fprintf@plt>
    a4d8:	ldr	w2, [x23, #4]
    a4dc:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a4e0:	ldr	x0, [x22]
    a4e4:	add	x1, x1, #0xa48
    a4e8:	bl	8b10 <fprintf@plt>
    a4ec:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a4f0:	ldrb	w1, [x0, #1520]
    a4f4:	ldr	x0, [x22]
    a4f8:	cmp	w1, #0x0
    a4fc:	csel	x2, x25, x21, ne  // ne = any
    a500:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a504:	add	x1, x1, #0xa68
    a508:	bl	8b10 <fprintf@plt>
    a50c:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a510:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a514:	ldr	x0, [x22]
    a518:	add	x1, x1, #0xa88
    a51c:	ldr	x2, [x2, #824]
    a520:	bl	8b10 <fprintf@plt>
    a524:	ldr	w0, [sp, #128]
    a528:	cbnz	w0, acb8 <fprintf@plt+0x21a8>
    a52c:	ldr	x20, [x20, #4040]
    a530:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a534:	mov	x2, #0x1f                  	// #31
    a538:	add	x0, x0, #0xb08
    a53c:	mov	x1, #0x1                   	// #1
    a540:	ldr	x3, [x20]
    a544:	bl	89d0 <fwrite@plt>
    a548:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a54c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a550:	add	x1, x19, #0x650
    a554:	add	x0, x0, #0xb28
    a558:	mov	w2, #0x0                   	// #0
    a55c:	bl	9570 <fprintf@plt+0xa60>
    a560:	tst	w0, #0xff
    a564:	b.ne	a56c <fprintf@plt+0x1a5c>  // b.any
    a568:	str	wzr, [x19, #1616]
    a56c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a570:	add	x0, x0, #0xb38
    a574:	bl	8ad0 <getenv@plt>
    a578:	cbz	x0, a584 <fprintf@plt+0x1a74>
    a57c:	ldrb	w1, [x0]
    a580:	cbnz	w1, a9e4 <fprintf@plt+0x1ed4>
    a584:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a588:	str	xzr, [x0, #1512]
    a58c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a590:	add	x0, x0, #0xb48
    a594:	bl	8ad0 <getenv@plt>
    a598:	mov	x19, x0
    a59c:	cbz	x0, a620 <fprintf@plt+0x1b10>
    a5a0:	ldrb	w0, [x0]
    a5a4:	mov	x21, #0x1                   	// #1
    a5a8:	cbz	w0, a620 <fprintf@plt+0x1b10>
    a5ac:	adrp	x22, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a5b0:	add	x23, sp, #0xc8
    a5b4:	add	x22, x22, #0x60c
    a5b8:	ldrb	w0, [x19]
    a5bc:	cmp	w0, #0x3a
    a5c0:	b.eq	a600 <fprintf@plt+0x1af0>  // b.none
    a5c4:	bl	8ac0 <__errno_location@plt>
    a5c8:	mov	x20, x0
    a5cc:	mov	x1, x23
    a5d0:	mov	x0, x19
    a5d4:	mov	w2, #0xa                   	// #10
    a5d8:	str	wzr, [x20]
    a5dc:	bl	88c0 <strtol@plt>
    a5e0:	ldr	w1, [x20]
    a5e4:	cmp	w1, #0x0
    a5e8:	ccmp	x0, #0x0, #0x1, eq  // eq = none
    a5ec:	b.lt	a620 <fprintf@plt+0x1b10>  // b.tstop
    a5f0:	tst	x0, #0xffffffff00000000
    a5f4:	b.ne	a620 <fprintf@plt+0x1b10>  // b.any
    a5f8:	ldr	x19, [sp, #200]
    a5fc:	str	w0, [x22, x21, lsl #2]
    a600:	ldrb	w0, [x19]
    a604:	add	x19, x19, #0x1
    a608:	cmp	w0, #0x0
    a60c:	ccmp	w21, #0x3, #0x4, ne  // ne = any
    a610:	b.eq	a620 <fprintf@plt+0x1b10>  // b.none
    a614:	add	x21, x21, #0x1
    a618:	cmp	w0, #0x3a
    a61c:	b.eq	a5b8 <fprintf@plt+0x1aa8>  // b.none
    a620:	bl	24678 <acc_on_device@@OACC_2.0+0x10>
    a624:	ldp	x19, x20, [sp, #16]
    a628:	ldp	x21, x22, [sp, #32]
    a62c:	ldp	x23, x24, [sp, #48]
    a630:	ldp	x25, x26, [sp, #64]
    a634:	ldp	x27, x28, [sp, #80]
    a638:	ldp	x29, x30, [sp], #208
    a63c:	ret
    a640:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a644:	add	x0, x0, #0x7e8
    a648:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    a64c:	b	a11c <fprintf@plt+0x160c>
    a650:	cbnz	w0, a818 <fprintf@plt+0x1d08>
    a654:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a658:	add	x0, x0, #0x8f0
    a65c:	mov	x2, #0x7                   	// #7
    a660:	mov	x1, #0x1                   	// #1
    a664:	bl	89d0 <fwrite@plt>
    a668:	ldr	w2, [x22, #12]
    a66c:	cmp	w2, #0x1
    a670:	b.eq	a280 <fprintf@plt+0x1770>  // b.none
    a674:	ldr	x0, [x25]
    a678:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a67c:	add	x1, x1, #0x8f8
    a680:	bl	8b10 <fprintf@plt>
    a684:	b	a280 <fprintf@plt+0x1770>
    a688:	ldr	x0, [sp, #104]
    a68c:	mov	x2, #0x6                   	// #6
    a690:	mov	x1, #0x1                   	// #1
    a694:	bl	89d0 <fwrite@plt>
    a698:	ldr	x0, [x20, #4040]
    a69c:	ldr	x3, [x0]
    a6a0:	b	a320 <fprintf@plt+0x1810>
    a6a4:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a6a8:	mov	x2, #0x7                   	// #7
    a6ac:	add	x0, x0, #0x950
    a6b0:	mov	x1, #0x1                   	// #1
    a6b4:	bl	89d0 <fwrite@plt>
    a6b8:	ldr	x0, [x20, #4040]
    a6bc:	ldr	x3, [x0]
    a6c0:	b	a320 <fprintf@plt+0x1810>
    a6c4:	ldrb	w2, [x20, x25]
    a6c8:	add	x1, x19, #0x2b8
    a6cc:	sxtw	x24, w24
    a6d0:	mov	x3, #0xc                   	// #12
    a6d4:	ldrb	w0, [x20, x25]
    a6d8:	add	x27, x20, x25
    a6dc:	madd	x24, x24, x3, x1
    a6e0:	ldrh	w1, [x28, x2, lsl #1]
    a6e4:	ldrb	w20, [x24, #64]
    a6e8:	tbz	w1, #13, a700 <fprintf@plt+0x1bf0>
    a6ec:	nop
    a6f0:	ldrb	w0, [x27, #1]!
    a6f4:	ubfiz	x1, x0, #1, #8
    a6f8:	ldrh	w1, [x28, x1]
    a6fc:	tbnz	w1, #13, a6f0 <fprintf@plt+0x1be0>
    a700:	cbz	w0, aa18 <fprintf@plt+0x1f08>
    a704:	cmp	w0, #0x2c
    a708:	cset	w24, ne  // ne = any
    a70c:	cmp	w20, #0x1
    a710:	cset	w0, ls  // ls = plast
    a714:	orr	w24, w24, w0
    a718:	cbnz	w24, 9860 <fprintf@plt+0xd50>
    a71c:	add	x0, x19, #0x2b8
    a720:	stp	xzr, x0, [sp, #104]
    a724:	add	x0, x0, #0x38
    a728:	str	x0, [sp, #120]
    a72c:	mov	x6, #0x0                   	// #0
    a730:	ldr	x0, [sp, #104]
    a734:	mov	x4, x6
    a738:	add	x22, x27, #0x1
    a73c:	mov	x26, #0x0                   	// #0
    a740:	cmp	x6, x0
    a744:	b.eq	aba8 <fprintf@plt+0x2098>  // b.none
    a748:	ldrb	w0, [x27, #1]
    a74c:	ubfiz	x1, x0, #1, #8
    a750:	ldrh	w1, [x28, x1]
    a754:	tbz	w1, #13, a768 <fprintf@plt+0x1c58>
    a758:	ldrb	w0, [x22, #1]!
    a75c:	ubfiz	x1, x0, #1, #8
    a760:	ldrh	w1, [x28, x1]
    a764:	tbnz	w1, #13, a758 <fprintf@plt+0x1c48>
    a768:	cbz	w0, 9864 <fprintf@plt+0xd54>
    a76c:	ldr	x0, [sp, #112]
    a770:	mov	w20, #0x2                   	// #2
    a774:	add	x27, x0, #0x50
    a778:	ldrb	w25, [x27, #7]
    a77c:	mov	x1, x27
    a780:	mov	x0, x22
    a784:	str	x4, [sp, #96]
    a788:	mov	x2, x25
    a78c:	bl	8940 <strncasecmp@plt>
    a790:	add	x27, x27, #0xc
    a794:	ldr	x4, [sp, #96]
    a798:	cbz	w0, ab48 <fprintf@plt+0x2038>
    a79c:	add	w20, w20, #0x1
    a7a0:	cmp	w20, #0x5
    a7a4:	b.ne	a778 <fprintf@plt+0x1c68>  // b.any
    a7a8:	b	9864 <fprintf@plt+0xd54>
    a7ac:	adrp	x22, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a7b0:	add	x0, x22, #0x6c8
    a7b4:	bl	8ad0 <getenv@plt>
    a7b8:	mov	x20, x0
    a7bc:	cbnz	x0, 9cb0 <fprintf@plt+0x11a0>
    a7c0:	b	a000 <fprintf@plt+0x14f0>
    a7c4:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a7c8:	mov	x0, x20
    a7cc:	add	x1, x1, #0x370
    a7d0:	mov	x2, #0x5                   	// #5
    a7d4:	bl	8940 <strncasecmp@plt>
    a7d8:	cbnz	w0, aa44 <fprintf@plt+0x1f34>
    a7dc:	add	x20, x20, #0x5
    a7e0:	mov	w25, #0x0                   	// #0
    a7e4:	str	wzr, [sp, #128]
    a7e8:	b	a0f4 <fprintf@plt+0x15e4>
    a7ec:	cmp	w0, #0x3
    a7f0:	b.eq	adc0 <fprintf@plt+0x22b0>  // b.none
    a7f4:	cmp	w0, #0x4
    a7f8:	b.ne	a2e0 <fprintf@plt+0x17d0>  // b.any
    a7fc:	ldr	x3, [x22]
    a800:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a804:	mov	x2, #0x6                   	// #6
    a808:	mov	x1, #0x1                   	// #1
    a80c:	add	x0, x0, #0x948
    a810:	bl	89d0 <fwrite@plt>
    a814:	b	a2e0 <fprintf@plt+0x17d0>
    a818:	cmp	w0, #0x1
    a81c:	b.ne	a280 <fprintf@plt+0x1770>  // b.any
    a820:	b	ac04 <fprintf@plt+0x20f4>
    a824:	cmp	w0, #0x4
    a828:	b.ne	a280 <fprintf@plt+0x1770>  // b.any
    a82c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a830:	mov	x2, #0x4                   	// #4
    a834:	mov	x1, #0x1                   	// #1
    a838:	add	x0, x0, #0x918
    a83c:	bl	89d0 <fwrite@plt>
    a840:	b	a280 <fprintf@plt+0x1770>
    a844:	ldrb	w0, [x20, #1]
    a848:	add	x20, x20, #0x1
    a84c:	ldrh	w0, [x22, x0, lsl #1]
    a850:	tbz	w0, #13, a864 <fprintf@plt+0x1d54>
    a854:	nop
    a858:	ldrb	w0, [x20, #1]!
    a85c:	ldrh	w0, [x22, x0, lsl #1]
    a860:	tbnz	w0, #13, a858 <fprintf@plt+0x1d48>
    a864:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a868:	mov	x0, x20
    a86c:	add	x1, x1, #0x408
    a870:	mov	x2, #0x6                   	// #6
    a874:	bl	8940 <strncasecmp@plt>
    a878:	cbnz	w0, a96c <fprintf@plt+0x1e5c>
    a87c:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a880:	add	x0, x19, #0x2b8
    a884:	add	x20, x20, #0x6
    a888:	mov	w1, #0x1                   	// #1
    a88c:	str	w1, [x0, #8]
    a890:	cmp	w21, #0x1
    a894:	b.eq	aa04 <fprintf@plt+0x1ef4>  // b.none
    a898:	cbz	w21, a9f4 <fprintf@plt+0x1ee4>
    a89c:	ldrb	w0, [x20]
    a8a0:	ldrb	w1, [x20]
    a8a4:	ldrh	w0, [x22, x0, lsl #1]
    a8a8:	tbz	w0, #13, a8c0 <fprintf@plt+0x1db0>
    a8ac:	nop
    a8b0:	ldrb	w1, [x20, #1]!
    a8b4:	ubfiz	x0, x1, #1, #8
    a8b8:	ldrh	w0, [x22, x0]
    a8bc:	tbnz	w0, #13, a8b0 <fprintf@plt+0x1da0>
    a8c0:	cbz	w1, abdc <fprintf@plt+0x20cc>
    a8c4:	cmp	w1, #0x2c
    a8c8:	b.ne	9694 <fprintf@plt+0xb84>  // b.any
    a8cc:	ldrb	w0, [x20, #1]
    a8d0:	add	x21, x20, #0x1
    a8d4:	ldrb	w1, [x20, #1]
    a8d8:	ldrh	w0, [x22, x0, lsl #1]
    a8dc:	tbz	w0, #13, a8f0 <fprintf@plt+0x1de0>
    a8e0:	ldrb	w1, [x21, #1]!
    a8e4:	ubfiz	x0, x1, #1, #8
    a8e8:	ldrh	w0, [x22, x0]
    a8ec:	tbnz	w0, #13, a8e0 <fprintf@plt+0x1dd0>
    a8f0:	cbz	w1, ab38 <fprintf@plt+0x2028>
    a8f4:	bl	8ac0 <__errno_location@plt>
    a8f8:	mov	x20, x0
    a8fc:	add	x1, sp, #0xc8
    a900:	mov	x0, x21
    a904:	mov	w2, #0xa                   	// #10
    a908:	str	wzr, [x20]
    a90c:	bl	85e0 <strtoul@plt>
    a910:	ldr	w1, [x20]
    a914:	cbnz	w1, ab38 <fprintf@plt+0x2028>
    a918:	ldr	x5, [x23]
    a91c:	b	a924 <fprintf@plt+0x1e14>
    a920:	str	x3, [sp, #200]
    a924:	ldr	x1, [sp, #200]
    a928:	add	x3, x1, #0x1
    a92c:	ldrb	w2, [x1]
    a930:	ldrb	w4, [x1]
    a934:	ldrh	w1, [x5, x2, lsl #1]
    a938:	tbnz	w1, #13, a920 <fprintf@plt+0x1e10>
    a93c:	cbnz	w4, ab38 <fprintf@plt+0x2028>
    a940:	cmp	x0, w0, sxtw
    a944:	b.ne	ab38 <fprintf@plt+0x2028>  // b.any
    a948:	cbnz	x0, a960 <fprintf@plt+0x1e50>
    a94c:	add	x0, x19, #0x2b8
    a950:	ldr	w0, [x0, #8]
    a954:	and	w0, w0, #0x7fffffff
    a958:	cmp	w0, #0x1
    a95c:	cset	x0, ne  // ne = any
    a960:	add	x1, x19, #0x2b8
    a964:	str	w0, [x1, #12]
    a968:	b	96a0 <fprintf@plt+0xb90>
    a96c:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a970:	mov	x0, x20
    a974:	add	x1, x1, #0x410
    a978:	mov	x2, #0x7                   	// #7
    a97c:	bl	8940 <strncasecmp@plt>
    a980:	cbz	w0, aa88 <fprintf@plt+0x1f78>
    a984:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a988:	mov	x0, x20
    a98c:	add	x1, x1, #0x418
    a990:	mov	x2, #0x6                   	// #6
    a994:	bl	8940 <strncasecmp@plt>
    a998:	cbnz	w0, ae18 <fprintf@plt+0x2308>
    a99c:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a9a0:	add	x0, x19, #0x2b8
    a9a4:	mov	w1, #0x3                   	// #3
    a9a8:	add	x20, x20, #0x6
    a9ac:	str	w1, [x0, #8]
    a9b0:	b	a890 <fprintf@plt+0x1d80>
    a9b4:	ldr	x1, [sp, #168]
    a9b8:	mov	x0, #0x1ffff               	// #131071
    a9bc:	cmp	x1, x0
    a9c0:	b.hi	aaa0 <fprintf@plt+0x1f90>  // b.pmore
    a9c4:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    a9c8:	mov	x1, #0x80                  	// #128
    a9cc:	add	x0, x0, #0x760
    a9d0:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    a9d4:	b	a098 <fprintf@plt+0x1588>
    a9d8:	mov	x1, #0xffffffffffffffff    	// #-1
    a9dc:	cbnz	w24, 99f8 <fprintf@plt+0xee8>
    a9e0:	b	aae8 <fprintf@plt+0x1fd8>
    a9e4:	bl	8820 <strdup@plt>
    a9e8:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    a9ec:	str	x0, [x1, #1512]
    a9f0:	b	a58c <fprintf@plt+0x1a7c>
    a9f4:	add	x0, x19, #0x2b8
    a9f8:	ldr	w0, [x0, #8]
    a9fc:	cmp	w0, #0x1
    aa00:	b.ne	a89c <fprintf@plt+0x1d8c>  // b.any
    aa04:	add	x1, x19, #0x2b8
    aa08:	ldr	w0, [x1, #8]
    aa0c:	orr	w0, w0, #0x80000000
    aa10:	str	w0, [x1, #8]
    aa14:	b	a89c <fprintf@plt+0x1d8c>
    aa18:	add	x0, x19, #0x2b8
    aa1c:	strb	w20, [x0, #26]
    aa20:	add	x0, x19, #0x2b8
    aa24:	ldrb	w0, [x0, #26]
    aa28:	cmp	w0, #0x0
    aa2c:	cset	w24, eq  // eq = none
    aa30:	b	9880 <fprintf@plt+0xd70>
    aa34:	adrp	x20, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    aa38:	mov	w21, #0xffffffff            	// #-1
    aa3c:	add	x20, x20, #0x360
    aa40:	b	9c68 <fprintf@plt+0x1158>
    aa44:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    aa48:	mov	x0, x20
    aa4c:	add	x1, x1, #0x7e0
    aa50:	mov	x2, #0x7                   	// #7
    aa54:	bl	8940 <strncasecmp@plt>
    aa58:	cbnz	w0, aad4 <fprintf@plt+0x1fc4>
    aa5c:	mov	w0, #0x1                   	// #1
    aa60:	add	x20, x20, #0x7
    aa64:	mov	w25, w0
    aa68:	str	w0, [sp, #128]
    aa6c:	b	a0f4 <fprintf@plt+0x15e4>
    aa70:	mov	w21, #0x0                   	// #0
    aa74:	b	a864 <fprintf@plt+0x1d54>
    aa78:	add	x28, x28, #0x5
    aa7c:	mov	w26, #0x2                   	// #2
    aa80:	str	x28, [sp, #176]
    aa84:	b	98ec <fprintf@plt+0xddc>
    aa88:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    aa8c:	add	x0, x19, #0x2b8
    aa90:	mov	w1, #0x2                   	// #2
    aa94:	add	x20, x20, #0x7
    aa98:	str	w1, [x0, #8]
    aa9c:	b	a890 <fprintf@plt+0x1d80>
    aaa0:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    aaa4:	add	x0, x0, #0x788
    aaa8:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    aaac:	b	a098 <fprintf@plt+0x1588>
    aab0:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    aab4:	mov	x0, #0x93e0                	// #37856
    aab8:	movk	x0, #0x4, lsl #16
    aabc:	str	x0, [x24, #1584]
    aac0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    aac4:	mov	x1, #0x64                  	// #100
    aac8:	mov	w21, #0xffffffff            	// #-1
    aacc:	str	x1, [x0, #1600]
    aad0:	b	a02c <fprintf@plt+0x151c>
    aad4:	adrp	x20, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    aad8:	mov	w25, #0x0                   	// #0
    aadc:	add	x20, x20, #0x360
    aae0:	str	wzr, [sp, #128]
    aae4:	b	a0f4 <fprintf@plt+0x15e4>
    aae8:	mov	w0, w26
    aaec:	mov	w2, #0x0                   	// #0
    aaf0:	bl	1c5b0 <omp_pause_resource_all_@@OMP_5.0+0x908>
    aaf4:	ands	w24, w0, #0xff
    aaf8:	b.eq	99fc <fprintf@plt+0xeec>  // b.none
    aafc:	add	x0, x19, #0x2b8
    ab00:	ldrb	w1, [x0, #26]
    ab04:	cbnz	w1, 99f8 <fprintf@plt+0xee8>
    ab08:	mov	w1, #0x1                   	// #1
    ab0c:	mov	w24, #0x1                   	// #1
    ab10:	strb	w1, [x0, #26]
    ab14:	b	99fc <fprintf@plt+0xeec>
    ab18:	cmp	w0, #0x67
    ab1c:	b.eq	ae7c <fprintf@plt+0x236c>  // b.none
    ab20:	cmp	w0, #0x6b
    ab24:	mov	x4, #0x3e8                 	// #1000
    ab28:	b.ne	9ff0 <fprintf@plt+0x14e0>  // b.any
    ab2c:	add	x20, x20, #0x1
    ab30:	str	x20, [sp, #200]
    ab34:	b	9d18 <fprintf@plt+0x1208>
    ab38:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    ab3c:	add	x0, x0, #0x460
    ab40:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    ab44:	b	96a0 <fprintf@plt+0xb90>
    ab48:	sbfiz	x0, x20, #1, #32
    ab4c:	add	x6, x4, #0x1
    ab50:	add	x20, x0, w20, sxtw
    ab54:	add	x27, x22, x25
    ab58:	ldr	x0, [sp, #120]
    ab5c:	add	x20, x0, x20, lsl #2
    ab60:	ldrb	w20, [x20, #8]
    ab64:	strb	w20, [x26, x4]
    ab68:	ldrb	w0, [x22, x25]
    ab6c:	ubfiz	x1, x0, #1, #8
    ab70:	ldrh	w1, [x28, x1]
    ab74:	tbz	w1, #13, ab88 <fprintf@plt+0x2078>
    ab78:	ldrb	w0, [x27, #1]!
    ab7c:	ubfiz	x1, x0, #1, #8
    ab80:	ldrh	w1, [x28, x1]
    ab84:	tbnz	w1, #13, ab78 <fprintf@plt+0x2068>
    ab88:	cbz	w0, af00 <fprintf@plt+0x23f0>
    ab8c:	cmp	w0, #0x2c
    ab90:	b.ne	9864 <fprintf@plt+0xd54>  // b.any
    ab94:	ldr	x0, [sp, #104]
    ab98:	mov	x4, x6
    ab9c:	add	x22, x27, #0x1
    aba0:	cmp	x6, x0
    aba4:	b.ne	a748 <fprintf@plt+0x1c38>  // b.any
    aba8:	str	x6, [sp, #96]
    abac:	cbz	x0, ac58 <fprintf@plt+0x2148>
    abb0:	lsl	x0, x0, #1
    abb4:	mov	x1, x0
    abb8:	mov	x0, x26
    abbc:	str	x1, [sp, #104]
    abc0:	bl	8810 <realloc@plt>
    abc4:	ldr	x4, [sp, #96]
    abc8:	cbz	x0, b0dc <fprintf@plt+0x25cc>
    abcc:	mov	x26, x0
    abd0:	b	a748 <fprintf@plt+0x1c38>
    abd4:	mov	w24, #0x0                   	// #0
    abd8:	b	9880 <fprintf@plt+0xd70>
    abdc:	add	x1, x19, #0x2b8
    abe0:	ldr	w0, [x1, #8]
    abe4:	and	w0, w0, #0x7fffffff
    abe8:	cmp	w0, #0x1
    abec:	cset	w0, ne  // ne = any
    abf0:	str	w0, [x1, #12]
    abf4:	b	96a0 <fprintf@plt+0xb90>
    abf8:	mov	w1, #0x80000001            	// #-2147483647
    abfc:	cmp	w0, w1
    ac00:	b.ne	ad04 <fprintf@plt+0x21f4>  // b.any
    ac04:	ldr	x22, [x20, #4040]
    ac08:	mov	x2, #0x6                   	// #6
    ac0c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    ac10:	mov	x1, #0x1                   	// #1
    ac14:	add	x0, x0, #0x900
    ac18:	ldr	x3, [x22]
    ac1c:	bl	89d0 <fwrite@plt>
    ac20:	add	x0, x19, #0x2b8
    ac24:	ldr	w2, [x0, #12]
    ac28:	cbz	w2, a280 <fprintf@plt+0x1770>
    ac2c:	ldr	x0, [x22]
    ac30:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    ac34:	add	x1, x1, #0x8f8
    ac38:	bl	8b10 <fprintf@plt>
    ac3c:	b	a280 <fprintf@plt+0x1770>
    ac40:	bl	8830 <strerror@plt>
    ac44:	mov	x1, x0
    ac48:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    ac4c:	add	x0, x0, #0x7b0
    ac50:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    ac54:	b	a098 <fprintf@plt+0x1588>
    ac58:	mov	x0, x26
    ac5c:	mov	x1, #0x10                  	// #16
    ac60:	bl	8810 <realloc@plt>
    ac64:	cbz	x0, b0dc <fprintf@plt+0x25cc>
    ac68:	mov	x1, #0x10                  	// #16
    ac6c:	mov	x26, x0
    ac70:	mov	x4, #0x1                   	// #1
    ac74:	strb	w20, [x0]
    ac78:	str	x1, [sp, #104]
    ac7c:	b	a748 <fprintf@plt+0x1c38>
    ac80:	cbnz	w21, aab0 <fprintf@plt+0x1fa0>
    ac84:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    ac88:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    ac8c:	b	a02c <fprintf@plt+0x151c>
    ac90:	cbnz	w24, 9bd0 <fprintf@plt+0x10c0>
    ac94:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    ac98:	mov	x0, x26
    ac9c:	str	xzr, [x22, #1608]
    aca0:	mov	w1, #0x1                   	// #1
    aca4:	bl	1bcd0 <omp_pause_resource_all_@@OMP_5.0+0x28>
    aca8:	str	x0, [x25, #1568]
    acac:	mov	w25, #0x1                   	// #1
    acb0:	cbnz	x0, 9a34 <fprintf@plt+0xf24>
    acb4:	b	9bd0 <fprintf@plt+0x10c0>
    acb8:	ldr	x3, [x22]
    acbc:	mov	x2, #0x19                  	// #25
    acc0:	mov	x1, #0x1                   	// #1
    acc4:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    acc8:	add	x0, x0, #0xaa8
    accc:	bl	89d0 <fwrite@plt>
    acd0:	ldr	x0, [x22]
    acd4:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    acd8:	ldr	x2, [sp, #96]
    acdc:	add	x1, x1, #0xac8
    ace0:	bl	8b10 <fprintf@plt>
    ace4:	ldr	x2, [x24, #1584]
    ace8:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    acec:	ldr	x0, [x22]
    acf0:	add	x1, x1, #0xae8
    acf4:	bl	8b10 <fprintf@plt>
    acf8:	b	a52c <fprintf@plt+0x1a1c>
    acfc:	str	x27, [x19, #696]
    ad00:	b	97f4 <fprintf@plt+0xce4>
    ad04:	ldr	x3, [x22]
    ad08:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    ad0c:	mov	x2, #0xa                   	// #10
    ad10:	mov	x1, #0x1                   	// #1
    ad14:	add	x0, x0, #0x8d0
    ad18:	bl	89d0 <fwrite@plt>
    ad1c:	b	a24c <fprintf@plt+0x173c>
    ad20:	add	x21, sp, #0xc8
    ad24:	add	x25, sp, #0xb8
    ad28:	add	x26, sp, #0xc0
    ad2c:	add	x20, sp, #0x9f
    ad30:	mov	x27, #0x0                   	// #0
    ad34:	str	wzr, [sp, #96]
    ad38:	str	x28, [sp, #184]
    ad3c:	b	ad74 <fprintf@plt+0x2264>
    ad40:	ldr	w1, [sp, #96]
    ad44:	cbnz	w1, ad58 <fprintf@plt+0x2248>
    ad48:	add	x27, x27, #0x1
    ad4c:	str	w0, [sp, #96]
    ad50:	cmp	x27, #0x10, lsl #12
    ad54:	b.hi	9dac <fprintf@plt+0x129c>  // b.pmore
    ad58:	ldr	x0, [sp, #184]
    ad5c:	add	x1, x0, #0x1
    ad60:	ldrb	w0, [x0]
    ad64:	cmp	w0, #0x2c
    ad68:	cbz	w0, af20 <fprintf@plt+0x2410>
    ad6c:	b.ne	9dac <fprintf@plt+0x129c>  // b.any
    ad70:	str	x1, [sp, #184]
    ad74:	mov	x3, x21
    ad78:	mov	x2, x26
    ad7c:	mov	x1, x20
    ad80:	mov	x0, x25
    ad84:	bl	8e28 <fprintf@plt+0x318>
    ad88:	tst	w0, #0xff
    ad8c:	b.eq	9dac <fprintf@plt+0x129c>  // b.none
    ad90:	ldrb	w0, [sp, #159]
    ad94:	cbnz	w0, ad40 <fprintf@plt+0x2230>
    ad98:	ldr	x0, [sp, #192]
    ad9c:	add	x27, x27, x0
    ada0:	b	ad50 <fprintf@plt+0x2240>
    ada4:	ldr	x3, [x22]
    ada8:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    adac:	mov	x2, #0x6                   	// #6
    adb0:	mov	x1, #0x1                   	// #1
    adb4:	add	x0, x0, #0x938
    adb8:	bl	89d0 <fwrite@plt>
    adbc:	b	a2e0 <fprintf@plt+0x17d0>
    adc0:	ldr	x3, [x22]
    adc4:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    adc8:	mov	x2, #0x5                   	// #5
    adcc:	mov	x1, #0x1                   	// #1
    add0:	add	x0, x0, #0x940
    add4:	bl	89d0 <fwrite@plt>
    add8:	b	a2e0 <fprintf@plt+0x17d0>
    addc:	ldr	x3, [x22]
    ade0:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    ade4:	mov	x2, #0x5                   	// #5
    ade8:	mov	x1, #0x1                   	// #1
    adec:	add	x0, x0, #0x3b0
    adf0:	bl	89d0 <fwrite@plt>
    adf4:	b	a2e0 <fprintf@plt+0x17d0>
    adf8:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    adfc:	mov	x2, #0x6                   	// #6
    ae00:	add	x0, x0, #0x910
    ae04:	b	a660 <fprintf@plt+0x1b50>
    ae08:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    ae0c:	mov	x2, #0x7                   	// #7
    ae10:	add	x0, x0, #0x908
    ae14:	b	a660 <fprintf@plt+0x1b50>
    ae18:	mov	x0, x20
    ae1c:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    ae20:	mov	x2, #0x4                   	// #4
    ae24:	add	x1, x1, #0x420
    ae28:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    ae2c:	bl	8940 <strncasecmp@plt>
    ae30:	cbnz	w0, 9694 <fprintf@plt+0xb84>
    ae34:	add	x0, x19, #0x2b8
    ae38:	mov	w1, #0x4                   	// #4
    ae3c:	add	x20, x20, #0x4
    ae40:	str	w1, [x0, #8]
    ae44:	b	a890 <fprintf@plt+0x1d80>
    ae48:	mov	x4, #0x1                   	// #1
    ae4c:	b	9d50 <fprintf@plt+0x1240>
    ae50:	ldr	x3, [x22]
    ae54:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    ae58:	mov	x2, #0xd                   	// #13
    ae5c:	mov	x1, #0x1                   	// #1
    ae60:	add	x0, x0, #0x8e0
    ae64:	bl	89d0 <fwrite@plt>
    ae68:	b	a24c <fprintf@plt+0x173c>
    ae6c:	mov	x4, #0x1000                	// #4096
    ae70:	movk	x4, #0xd4a5, lsl #16
    ae74:	movk	x4, #0xe8, lsl #32
    ae78:	b	ab2c <fprintf@plt+0x201c>
    ae7c:	mov	x4, #0xca00                	// #51712
    ae80:	movk	x4, #0x3b9a, lsl #16
    ae84:	b	ab2c <fprintf@plt+0x201c>
    ae88:	mov	x4, #0x4240                	// #16960
    ae8c:	movk	x4, #0xf, lsl #16
    ae90:	b	ab2c <fprintf@plt+0x201c>
    ae94:	mov	x4, #0xffffffffffffffff    	// #-1
    ae98:	b	9d54 <fprintf@plt+0x1244>
    ae9c:	cbz	x28, aecc <fprintf@plt+0x23bc>
    aea0:	lsl	x1, x28, #4
    aea4:	mov	x0, x20
    aea8:	str	x2, [sp, #96]
    aeac:	bl	8810 <realloc@plt>
    aeb0:	lsl	x1, x28, #1
    aeb4:	ldr	x2, [sp, #96]
    aeb8:	cbz	x0, b0f8 <fprintf@plt+0x25e8>
    aebc:	mov	x20, x0
    aec0:	str	x1, [sp, #96]
    aec4:	ldr	x4, [x26]
    aec8:	b	9e90 <fprintf@plt+0x1380>
    aecc:	mov	x0, x20
    aed0:	mov	x1, #0x80                  	// #128
    aed4:	str	x2, [sp, #104]
    aed8:	bl	8810 <realloc@plt>
    aedc:	cbz	x0, b0f8 <fprintf@plt+0x25e8>
    aee0:	mov	x1, #0x10                  	// #16
    aee4:	mov	x20, x0
    aee8:	mov	x28, #0x1                   	// #1
    aeec:	str	x27, [x0]
    aef0:	str	x1, [sp, #96]
    aef4:	ldr	x4, [x26]
    aef8:	ldr	x2, [sp, #104]
    aefc:	b	9e90 <fprintf@plt+0x1380>
    af00:	add	x0, x19, #0x2b8
    af04:	adrp	x27, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    af08:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    af0c:	ldrb	w1, [x26]
    af10:	str	x26, [x27, #1544]
    af14:	str	x6, [x2, #1528]
    af18:	strb	w1, [x0, #26]
    af1c:	b	aa20 <fprintf@plt+0x1f10>
    af20:	cbnz	w24, 99f8 <fprintf@plt+0xee8>
    af24:	adrp	x28, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    af28:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    af2c:	mov	x0, x27
    af30:	mov	w1, #0x0                   	// #0
    af34:	str	xzr, [x28, #1608]
    af38:	bl	1bcd0 <omp_pause_resource_all_@@OMP_5.0+0x28>
    af3c:	str	x0, [x25, #1568]
    af40:	cbz	x0, 99fc <fprintf@plt+0xeec>
    af44:	add	x0, sp, #0xb0
    af48:	str	x0, [sp, #96]
    af4c:	ldr	x1, [x28, #1608]
    af50:	add	x27, x28, #0x648
    af54:	ldr	x0, [x25, #1568]
    af58:	ldr	x0, [x0, x1, lsl #3]
    af5c:	bl	1bd88 <omp_pause_resource_all_@@OMP_5.0+0xe0>
    af60:	ldr	x0, [sp, #96]
    af64:	mov	x3, x21
    af68:	mov	x2, x26
    af6c:	mov	x1, x20
    af70:	bl	8e28 <fprintf@plt+0x318>
    af74:	tst	w0, #0xff
    af78:	b.eq	9db4 <fprintf@plt+0x12a4>  // b.none
    af7c:	ldrb	w0, [sp, #159]
    af80:	cbnz	w0, b024 <fprintf@plt+0x2514>
    af84:	ldr	x2, [sp, #192]
    af88:	cmp	x2, #0x1
    af8c:	b.ne	afb4 <fprintf@plt+0x24a4>  // b.any
    af90:	ldr	x0, [x27]
    af94:	add	x0, x0, #0x1
    af98:	str	x0, [x27]
    af9c:	ldr	x0, [sp, #176]
    afa0:	ldrb	w1, [x0]
    afa4:	cbz	w1, b0a0 <fprintf@plt+0x2590>
    afa8:	add	x0, x0, #0x1
    afac:	str	x0, [sp, #176]
    afb0:	b	af4c <fprintf@plt+0x243c>
    afb4:	mov	x27, #0x0                   	// #0
    afb8:	b	afe8 <fprintf@plt+0x24d8>
    afbc:	ldr	x3, [x25, #1568]
    afc0:	add	x1, x27, x1
    afc4:	add	x0, x1, #0x1
    afc8:	add	x27, x27, #0x1
    afcc:	ldr	x2, [sp, #200]
    afd0:	ldr	x0, [x3, x0, lsl #3]
    afd4:	ldr	x1, [x3, x1, lsl #3]
    afd8:	bl	1c328 <omp_pause_resource_all_@@OMP_5.0+0x680>
    afdc:	tst	w0, #0xff
    afe0:	b.eq	9db4 <fprintf@plt+0x12a4>  // b.none
    afe4:	ldr	x2, [sp, #192]
    afe8:	sub	x0, x2, #0x1
    afec:	ldr	x1, [x28, #1608]
    aff0:	add	x3, x28, #0x648
    aff4:	cmp	x27, x0
    aff8:	b.cc	afbc <fprintf@plt+0x24ac>  // b.lo, b.ul, b.last
    affc:	add	x1, x2, x1
    b000:	str	x1, [x3]
    b004:	b	af9c <fprintf@plt+0x248c>
    b008:	adrp	x28, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b00c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b010:	ldr	x1, [x20]
    b014:	str	x20, [x28, #1504]
    b018:	str	x3, [x0, #1624]
    b01c:	str	x1, [x19, #696]
    b020:	b	97f4 <fprintf@plt+0xce4>
    b024:	mov	x27, #0x0                   	// #0
    b028:	b	b048 <fprintf@plt+0x2538>
    b02c:	ldr	x2, [x25, #1568]
    b030:	ldr	x1, [x2, x0, lsl #3]
    b034:	ldr	x0, [x2, x27, lsl #3]
    b038:	bl	1c428 <omp_pause_resource_all_@@OMP_5.0+0x780>
    b03c:	tst	w0, #0xff
    b040:	b.ne	b054 <fprintf@plt+0x2544>  // b.any
    b044:	add	x27, x27, #0x1
    b048:	ldr	x0, [x28, #1608]
    b04c:	cmp	x27, x0
    b050:	b.cc	b02c <fprintf@plt+0x251c>  // b.lo, b.ul, b.last
    b054:	ldr	x0, [x28, #1608]
    b058:	cmp	x27, x0
    b05c:	b.eq	b0cc <fprintf@plt+0x25bc>  // b.none
    b060:	ldr	x3, [x25, #1568]
    b064:	lsl	x5, x27, #3
    b068:	sub	x0, x0, #0x1
    b06c:	add	x1, x5, #0x8
    b070:	sub	x2, x0, x27
    b074:	add	x1, x3, x1
    b078:	add	x0, x3, x27, lsl #3
    b07c:	lsl	x2, x2, #3
    b080:	ldr	x27, [x3, x5]
    b084:	bl	85d0 <memmove@plt>
    b088:	ldr	x0, [x28, #1608]
    b08c:	ldr	x1, [x25, #1568]
    b090:	sub	x0, x0, #0x1
    b094:	str	x0, [x28, #1608]
    b098:	str	x27, [x1, x0, lsl #3]
    b09c:	b	af9c <fprintf@plt+0x248c>
    b0a0:	ldr	x0, [x28, #1608]
    b0a4:	cbz	x0, b0bc <fprintf@plt+0x25ac>
    b0a8:	mov	w0, #0x0                   	// #0
    b0ac:	bl	1c450 <omp_pause_resource_all_@@OMP_5.0+0x7a8>
    b0b0:	tst	w0, #0xff
    b0b4:	b.ne	aafc <fprintf@plt+0x1fec>  // b.any
    b0b8:	b	9db4 <fprintf@plt+0x12a4>
    b0bc:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    b0c0:	add	x0, x0, #0x630
    b0c4:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    b0c8:	b	9db4 <fprintf@plt+0x12a4>
    b0cc:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    b0d0:	add	x0, x0, #0x5f0
    b0d4:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    b0d8:	b	9db4 <fprintf@plt+0x12a4>
    b0dc:	mov	x0, x26
    b0e0:	bl	8900 <free@plt>
    b0e4:	add	x1, x21, #0x5b8
    b0e8:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    b0ec:	add	x0, x0, #0x578
    b0f0:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    b0f4:	b	9880 <fprintf@plt+0xd70>
    b0f8:	mov	x0, x20
    b0fc:	bl	8900 <free@plt>
    b100:	add	x1, x22, #0x568
    b104:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    b108:	add	x0, x0, #0x578
    b10c:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
    b110:	b	97e8 <fprintf@plt+0xcd8>
    b114:	nop
    b118:	stp	x29, x30, [sp, #-16]!
    b11c:	adrp	x1, 19000 <omp_in_final@@OMP_3.1+0xfd8>
    b120:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b124:	mov	x29, sp
    b128:	add	x1, x1, #0x500
    b12c:	add	x0, x0, #0x6a0
    b130:	bl	8640 <pthread_key_create@plt>
    b134:	cbnz	w0, b140 <fprintf@plt+0x2630>
    b138:	ldp	x29, x30, [sp], #16
    b13c:	ret
    b140:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    b144:	add	x0, x0, #0xe08
    b148:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
    b14c:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b150:	ldr	x0, [x0, #4056]
    b154:	cbz	x0, b15c <fprintf@plt+0x264c>
    b158:	b	8850 <__gmon_start__@plt>
    b15c:	ret
    b160:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b164:	add	x0, x0, #0x548
    b168:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b16c:	add	x1, x1, #0x548
    b170:	cmp	x1, x0
    b174:	b.eq	b18c <fprintf@plt+0x267c>  // b.none
    b178:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b17c:	ldr	x1, [x1, #4024]
    b180:	cbz	x1, b18c <fprintf@plt+0x267c>
    b184:	mov	x16, x1
    b188:	br	x16
    b18c:	ret
    b190:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b194:	add	x0, x0, #0x548
    b198:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b19c:	add	x1, x1, #0x548
    b1a0:	sub	x1, x1, x0
    b1a4:	lsr	x2, x1, #63
    b1a8:	add	x1, x2, x1, asr #3
    b1ac:	cmp	xzr, x1, asr #1
    b1b0:	asr	x1, x1, #1
    b1b4:	b.eq	b1cc <fprintf@plt+0x26bc>  // b.none
    b1b8:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b1bc:	ldr	x2, [x2, #4064]
    b1c0:	cbz	x2, b1cc <fprintf@plt+0x26bc>
    b1c4:	mov	x16, x2
    b1c8:	br	x16
    b1cc:	ret
    b1d0:	stp	x29, x30, [sp, #-32]!
    b1d4:	mov	x29, sp
    b1d8:	str	x19, [sp, #16]
    b1dc:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b1e0:	ldrb	w0, [x19, #1352]
    b1e4:	cbnz	w0, b20c <fprintf@plt+0x26fc>
    b1e8:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b1ec:	ldr	x0, [x0, #4032]
    b1f0:	cbz	x0, b200 <fprintf@plt+0x26f0>
    b1f4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b1f8:	ldr	x0, [x0, #688]
    b1fc:	bl	8660 <__cxa_finalize@plt>
    b200:	bl	b160 <fprintf@plt+0x2650>
    b204:	mov	w0, #0x1                   	// #1
    b208:	strb	w0, [x19, #1352]
    b20c:	ldr	x19, [sp, #16]
    b210:	ldp	x29, x30, [sp], #32
    b214:	ret
    b218:	b	b190 <fprintf@plt+0x2680>
    b21c:	nop
    b220:	stp	x29, x30, [sp, #-32]!
    b224:	mov	x29, sp
    b228:	str	x19, [sp, #16]
    b22c:	mov	x19, x0
    b230:	bl	8760 <malloc@plt>
    b234:	cbz	x0, b244 <fprintf@plt+0x2734>
    b238:	ldr	x19, [sp, #16]
    b23c:	ldp	x29, x30, [sp], #32
    b240:	ret
    b244:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    b248:	mov	x1, x19
    b24c:	add	x0, x0, #0x338
    b250:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
    b254:	nop
    b258:	stp	x29, x30, [sp, #-32]!
    b25c:	mov	x29, sp
    b260:	str	x19, [sp, #16]
    b264:	mov	x19, x0
    b268:	mov	x1, x19
    b26c:	mov	x0, #0x1                   	// #1
    b270:	bl	87e0 <calloc@plt>
    b274:	cbz	x0, b284 <fprintf@plt+0x2774>
    b278:	ldr	x19, [sp, #16]
    b27c:	ldp	x29, x30, [sp], #32
    b280:	ret
    b284:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    b288:	mov	x1, x19
    b28c:	add	x0, x0, #0x338
    b290:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
    b294:	nop
    b298:	stp	x29, x30, [sp, #-32]!
    b29c:	mov	x29, sp
    b2a0:	str	x19, [sp, #16]
    b2a4:	mov	x19, x1
    b2a8:	bl	8810 <realloc@plt>
    b2ac:	cbz	x0, b2bc <fprintf@plt+0x27ac>
    b2b0:	ldr	x19, [sp, #16]
    b2b4:	ldp	x29, x30, [sp], #32
    b2b8:	ret
    b2bc:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    b2c0:	mov	x1, x19
    b2c4:	add	x0, x0, #0x338
    b2c8:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
    b2cc:	nop
    b2d0:	stp	x29, x30, [sp, #-32]!
    b2d4:	mov	x2, #0x8                   	// #8
    b2d8:	cmp	x0, x2
    b2dc:	mov	x29, sp
    b2e0:	csel	x0, x0, x2, cs  // cs = hs, nlast
    b2e4:	str	x19, [sp, #16]
    b2e8:	mov	x19, x1
    b2ec:	bl	87a0 <aligned_alloc@plt>
    b2f0:	cbz	x0, b300 <fprintf@plt+0x27f0>
    b2f4:	ldr	x19, [sp, #16]
    b2f8:	ldp	x29, x30, [sp], #32
    b2fc:	ret
    b300:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    b304:	mov	x1, x19
    b308:	add	x0, x0, #0x338
    b30c:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
    b310:	b	8900 <free@plt>
    b314:	nop

000000000000b318 <GOMP_atomic_start@@GOMP_1.0>:
    b318:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b31c:	add	x0, x0, #0x54c
    b320:	mov	w2, #0x1                   	// #1
    b324:	ldaxr	w1, [x0]
    b328:	cbnz	w1, b334 <GOMP_atomic_start@@GOMP_1.0+0x1c>
    b32c:	stxr	w3, w2, [x0]
    b330:	cbnz	w3, b324 <GOMP_atomic_start@@GOMP_1.0+0xc>
    b334:	cmp	w1, #0x0
    b338:	b.ne	b340 <GOMP_atomic_start@@GOMP_1.0+0x28>  // b.any
    b33c:	ret
    b340:	b	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    b344:	nop

000000000000b348 <GOMP_atomic_end@@GOMP_1.0>:
    b348:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b34c:	add	x0, x0, #0x54c
    b350:	ldxr	w1, [x0]
    b354:	stlxr	w2, wzr, [x0]
    b358:	cbnz	w2, b350 <GOMP_atomic_end@@GOMP_1.0+0x8>
    b35c:	tbnz	w1, #31, b364 <GOMP_atomic_end@@GOMP_1.0+0x1c>
    b360:	ret
    b364:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>

000000000000b368 <GOMP_barrier@@GOMP_1.0>:
    b368:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b36c:	ldr	x0, [x0, #4016]
    b370:	mrs	x1, tpidr_el0
    b374:	add	x0, x1, x0
    b378:	ldr	x0, [x0, #16]
    b37c:	cbz	x0, b388 <GOMP_barrier@@GOMP_1.0+0x20>
    b380:	add	x0, x0, #0x80
    b384:	b	1ae58 <omp_get_num_procs@@OMP_1.0+0x7b0>
    b388:	ret
    b38c:	nop

000000000000b390 <GOMP_barrier_cancel@@GOMP_4.0>:
    b390:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b394:	ldr	x0, [x0, #4016]
    b398:	mrs	x1, tpidr_el0
    b39c:	add	x0, x1, x0
    b3a0:	ldr	x0, [x0, #16]
    b3a4:	add	x0, x0, #0x80
    b3a8:	b	1b0b8 <omp_get_num_procs@@OMP_1.0+0xa10>
    b3ac:	nop

000000000000b3b0 <GOMP_critical_start@@GOMP_1.0>:
    b3b0:	dmb	ish
    b3b4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b3b8:	add	x0, x0, #0x550
    b3bc:	mov	w2, #0x1                   	// #1
    b3c0:	ldaxr	w1, [x0]
    b3c4:	cbnz	w1, b3d0 <GOMP_critical_start@@GOMP_1.0+0x20>
    b3c8:	stxr	w3, w2, [x0]
    b3cc:	cbnz	w3, b3c0 <GOMP_critical_start@@GOMP_1.0+0x10>
    b3d0:	cmp	w1, #0x0
    b3d4:	b.ne	b3dc <GOMP_critical_start@@GOMP_1.0+0x2c>  // b.any
    b3d8:	ret
    b3dc:	b	1a140 <omp_test_nest_lock@OMP_1.0+0x90>

000000000000b3e0 <GOMP_critical_end@@GOMP_1.0>:
    b3e0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b3e4:	add	x0, x0, #0x550
    b3e8:	ldxr	w1, [x0]
    b3ec:	stlxr	w2, wzr, [x0]
    b3f0:	cbnz	w2, b3e8 <GOMP_critical_end@@GOMP_1.0+0x8>
    b3f4:	tbnz	w1, #31, b3fc <GOMP_critical_end@@GOMP_1.0+0x1c>
    b3f8:	ret
    b3fc:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>

000000000000b400 <GOMP_critical_name_start@@GOMP_1.0>:
    b400:	mov	x2, x0
    b404:	mov	w3, #0x1                   	// #1
    b408:	ldaxr	w1, [x2]
    b40c:	cbnz	w1, b418 <GOMP_critical_name_start@@GOMP_1.0+0x18>
    b410:	stxr	w4, w3, [x2]
    b414:	cbnz	w4, b408 <GOMP_critical_name_start@@GOMP_1.0+0x8>
    b418:	cmp	w1, #0x0
    b41c:	b.ne	b424 <GOMP_critical_name_start@@GOMP_1.0+0x24>  // b.any
    b420:	ret
    b424:	b	1a140 <omp_test_nest_lock@OMP_1.0+0x90>

000000000000b428 <GOMP_critical_name_end@@GOMP_1.0>:
    b428:	mov	x1, x0
    b42c:	ldxr	w2, [x1]
    b430:	stlxr	w3, wzr, [x1]
    b434:	cbnz	w3, b42c <GOMP_critical_name_end@@GOMP_1.0+0x4>
    b438:	tbnz	w2, #31, b440 <GOMP_critical_name_end@@GOMP_1.0+0x18>
    b43c:	ret
    b440:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
    b444:	nop
    b448:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b44c:	mov	x0, x2
    b450:	ldr	w2, [x3, #1536]
    b454:	cbnz	w2, b45c <GOMP_critical_name_end@@GOMP_1.0+0x34>
    b458:	ret
    b45c:	stp	x29, x30, [sp, #-48]!
    b460:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b464:	mov	x29, sp
    b468:	ldp	x4, x5, [x0]
    b46c:	stp	x4, x5, [sp, #16]
    b470:	add	x2, sp, #0x10
    b474:	ldr	x3, [x3, #4040]
    b478:	ldp	x4, x5, [x0, #16]
    b47c:	stp	x4, x5, [sp, #32]
    b480:	ldr	x0, [x3]
    b484:	bl	8aa0 <vfprintf@plt>
    b488:	ldp	x29, x30, [sp], #48
    b48c:	ret
    b490:	stp	x29, x30, [sp, #-288]!
    b494:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b498:	mov	w9, #0xffffffd0            	// #-48
    b49c:	mov	x29, sp
    b4a0:	add	x10, sp, #0xf0
    b4a4:	add	x11, sp, #0x120
    b4a8:	mov	w8, #0xffffff80            	// #-128
    b4ac:	stp	x11, x11, [sp, #48]
    b4b0:	ldr	w0, [x0, #1536]
    b4b4:	str	x10, [sp, #64]
    b4b8:	stp	w9, w8, [sp, #72]
    b4bc:	ldp	x10, x11, [sp, #48]
    b4c0:	stp	x10, x11, [sp, #80]
    b4c4:	ldp	x8, x9, [sp, #64]
    b4c8:	stp	x8, x9, [sp, #96]
    b4cc:	str	q0, [sp, #112]
    b4d0:	str	q1, [sp, #128]
    b4d4:	str	q2, [sp, #144]
    b4d8:	str	q3, [sp, #160]
    b4dc:	str	q4, [sp, #176]
    b4e0:	str	q5, [sp, #192]
    b4e4:	str	q6, [sp, #208]
    b4e8:	str	q7, [sp, #224]
    b4ec:	stp	x2, x3, [sp, #240]
    b4f0:	stp	x4, x5, [sp, #256]
    b4f4:	stp	x6, x7, [sp, #272]
    b4f8:	cbnz	w0, b504 <GOMP_critical_name_end@@GOMP_1.0+0xdc>
    b4fc:	ldp	x29, x30, [sp], #288
    b500:	ret
    b504:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b508:	stp	x10, x11, [sp, #16]
    b50c:	add	x2, sp, #0x10
    b510:	ldr	x0, [x0, #4040]
    b514:	stp	x8, x9, [sp, #32]
    b518:	ldr	x0, [x0]
    b51c:	bl	8aa0 <vfprintf@plt>
    b520:	ldp	x29, x30, [sp], #288
    b524:	ret
    b528:	stp	x29, x30, [sp, #-80]!
    b52c:	mov	x2, #0xa                   	// #10
    b530:	mov	x29, sp
    b534:	stp	x19, x20, [sp, #16]
    b538:	adrp	x19, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b53c:	mov	x20, x1
    b540:	ldr	x19, [x19, #4040]
    b544:	mov	x1, #0x1                   	// #1
    b548:	ldr	x3, [x19]
    b54c:	str	x21, [sp, #32]
    b550:	mov	x21, x0
    b554:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
    b558:	add	x0, x0, #0xb80
    b55c:	bl	89d0 <fwrite@plt>
    b560:	ldp	x6, x7, [x20]
    b564:	mov	x1, x21
    b568:	ldp	x4, x5, [x20, #16]
    b56c:	add	x2, sp, #0x30
    b570:	ldr	x0, [x19]
    b574:	stp	x6, x7, [sp, #48]
    b578:	stp	x4, x5, [sp, #64]
    b57c:	bl	8aa0 <vfprintf@plt>
    b580:	ldr	x1, [x19]
    b584:	mov	w0, #0xa                   	// #10
    b588:	ldp	x19, x20, [sp, #16]
    b58c:	ldr	x21, [sp, #32]
    b590:	ldp	x29, x30, [sp], #80
    b594:	b	86b0 <fputc@plt>
    b598:	stp	x29, x30, [sp, #-272]!
    b59c:	mov	w9, #0xffffffc8            	// #-56
    b5a0:	mov	w8, #0xffffff80            	// #-128
    b5a4:	mov	x29, sp
    b5a8:	add	x10, sp, #0xd0
    b5ac:	add	x11, sp, #0x110
    b5b0:	stp	x11, x11, [sp, #48]
    b5b4:	str	x10, [sp, #64]
    b5b8:	stp	w9, w8, [sp, #72]
    b5bc:	ldp	x10, x11, [sp, #48]
    b5c0:	stp	x10, x11, [sp, #16]
    b5c4:	ldp	x8, x9, [sp, #64]
    b5c8:	stp	x8, x9, [sp, #32]
    b5cc:	str	q0, [sp, #80]
    b5d0:	str	q1, [sp, #96]
    b5d4:	str	q2, [sp, #112]
    b5d8:	str	q3, [sp, #128]
    b5dc:	str	q4, [sp, #144]
    b5e0:	str	q5, [sp, #160]
    b5e4:	str	q6, [sp, #176]
    b5e8:	str	q7, [sp, #192]
    b5ec:	stp	x1, x2, [sp, #216]
    b5f0:	add	x1, sp, #0x10
    b5f4:	stp	x3, x4, [sp, #232]
    b5f8:	stp	x5, x6, [sp, #248]
    b5fc:	str	x7, [sp, #264]
    b600:	bl	b528 <GOMP_critical_name_end@@GOMP_1.0+0x100>
    b604:	ldp	x29, x30, [sp], #272
    b608:	ret
    b60c:	nop
    b610:	mov	x2, x1
    b614:	stp	x29, x30, [sp, #-48]!
    b618:	mov	x29, sp
    b61c:	ldp	x4, x5, [x2]
    b620:	stp	x4, x5, [sp, #16]
    b624:	add	x1, sp, #0x10
    b628:	ldp	x2, x3, [x2, #16]
    b62c:	stp	x2, x3, [sp, #32]
    b630:	bl	b528 <GOMP_critical_name_end@@GOMP_1.0+0x100>
    b634:	mov	w0, #0x1                   	// #1
    b638:	bl	8610 <exit@plt>
    b63c:	nop
    b640:	stp	x29, x30, [sp, #-272]!
    b644:	mov	w9, #0xffffffc8            	// #-56
    b648:	mov	w8, #0xffffff80            	// #-128
    b64c:	mov	x29, sp
    b650:	add	x10, sp, #0xd0
    b654:	add	x11, sp, #0x110
    b658:	stp	x11, x11, [sp, #48]
    b65c:	str	x10, [sp, #64]
    b660:	stp	w9, w8, [sp, #72]
    b664:	ldp	x10, x11, [sp, #48]
    b668:	stp	x10, x11, [sp, #16]
    b66c:	ldp	x8, x9, [sp, #64]
    b670:	stp	x8, x9, [sp, #32]
    b674:	str	q0, [sp, #80]
    b678:	str	q1, [sp, #96]
    b67c:	str	q2, [sp, #112]
    b680:	str	q3, [sp, #128]
    b684:	str	q4, [sp, #144]
    b688:	str	q5, [sp, #160]
    b68c:	str	q6, [sp, #176]
    b690:	str	q7, [sp, #192]
    b694:	stp	x1, x2, [sp, #216]
    b698:	add	x1, sp, #0x10
    b69c:	stp	x3, x4, [sp, #232]
    b6a0:	stp	x5, x6, [sp, #248]
    b6a4:	str	x7, [sp, #264]
    b6a8:	bl	b610 <GOMP_critical_name_end@@GOMP_1.0+0x1e8>
    b6ac:	nop

000000000000b6b0 <omp_set_num_threads@@OMP_1.0>:
    b6b0:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b6b4:	ldr	x2, [x2, #4016]
    b6b8:	mrs	x1, tpidr_el0
    b6bc:	stp	x29, x30, [sp, #-32]!
    b6c0:	add	x1, x1, x2
    b6c4:	mov	x29, sp
    b6c8:	str	x19, [sp, #16]
    b6cc:	mov	w19, w0
    b6d0:	ldr	x0, [x1, #80]
    b6d4:	cbz	x0, b6f8 <omp_set_num_threads@@OMP_1.0+0x48>
    b6d8:	add	x0, x0, #0x90
    b6dc:	cmp	w19, #0x0
    b6e0:	csinc	w19, w19, wzr, gt
    b6e4:	sxtw	x19, w19
    b6e8:	str	x19, [x0]
    b6ec:	ldr	x19, [sp, #16]
    b6f0:	ldp	x29, x30, [sp], #32
    b6f4:	ret
    b6f8:	bl	19758 <omp_in_final@@OMP_3.1+0x1730>
    b6fc:	cmp	w19, #0x0
    b700:	csinc	w19, w19, wzr, gt
    b704:	sxtw	x19, w19
    b708:	str	x19, [x0]
    b70c:	ldr	x19, [sp, #16]
    b710:	ldp	x29, x30, [sp], #32
    b714:	ret

000000000000b718 <omp_set_dynamic@@OMP_1.0>:
    b718:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b71c:	ldr	x2, [x2, #4016]
    b720:	mrs	x1, tpidr_el0
    b724:	stp	x29, x30, [sp, #-32]!
    b728:	add	x1, x1, x2
    b72c:	mov	x29, sp
    b730:	ldr	x1, [x1, #80]
    b734:	str	x19, [sp, #16]
    b738:	mov	w19, w0
    b73c:	cbz	x1, b75c <omp_set_dynamic@@OMP_1.0+0x44>
    b740:	add	x1, x1, #0x90
    b744:	cmp	w19, #0x0
    b748:	cset	w0, ne  // ne = any
    b74c:	ldr	x19, [sp, #16]
    b750:	strb	w0, [x1, #24]
    b754:	ldp	x29, x30, [sp], #32
    b758:	ret
    b75c:	bl	19758 <omp_in_final@@OMP_3.1+0x1730>
    b760:	mov	x1, x0
    b764:	cmp	w19, #0x0
    b768:	cset	w0, ne  // ne = any
    b76c:	strb	w0, [x1, #24]
    b770:	ldr	x19, [sp, #16]
    b774:	ldp	x29, x30, [sp], #32
    b778:	ret
    b77c:	nop

000000000000b780 <omp_get_dynamic@@OMP_1.0>:
    b780:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b784:	ldr	x2, [x2, #4016]
    b788:	mrs	x1, tpidr_el0
    b78c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b790:	add	x0, x0, #0x2b8
    b794:	add	x1, x1, x2
    b798:	ldr	x1, [x1, #80]
    b79c:	cmp	x1, #0x0
    b7a0:	add	x1, x1, #0x90
    b7a4:	csel	x0, x0, x1, eq  // eq = none
    b7a8:	ldrb	w0, [x0, #24]
    b7ac:	ret

000000000000b7b0 <omp_set_nested@@OMP_1.0>:
    b7b0:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b7b4:	ldr	x2, [x2, #4016]
    b7b8:	mrs	x1, tpidr_el0
    b7bc:	stp	x29, x30, [sp, #-32]!
    b7c0:	add	x1, x1, x2
    b7c4:	mov	x29, sp
    b7c8:	ldr	x1, [x1, #80]
    b7cc:	str	x19, [sp, #16]
    b7d0:	mov	w19, w0
    b7d4:	cbz	x1, b7f4 <omp_set_nested@@OMP_1.0+0x44>
    b7d8:	add	x1, x1, #0x90
    b7dc:	cmp	w19, #0x0
    b7e0:	cset	w0, ne  // ne = any
    b7e4:	ldr	x19, [sp, #16]
    b7e8:	strb	w0, [x1, #25]
    b7ec:	ldp	x29, x30, [sp], #32
    b7f0:	ret
    b7f4:	bl	19758 <omp_in_final@@OMP_3.1+0x1730>
    b7f8:	mov	x1, x0
    b7fc:	cmp	w19, #0x0
    b800:	cset	w0, ne  // ne = any
    b804:	strb	w0, [x1, #25]
    b808:	ldr	x19, [sp, #16]
    b80c:	ldp	x29, x30, [sp], #32
    b810:	ret
    b814:	nop

000000000000b818 <omp_get_nested@@OMP_1.0>:
    b818:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b81c:	ldr	x2, [x2, #4016]
    b820:	mrs	x1, tpidr_el0
    b824:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b828:	add	x0, x0, #0x2b8
    b82c:	add	x1, x1, x2
    b830:	ldr	x1, [x1, #80]
    b834:	cmp	x1, #0x0
    b838:	add	x1, x1, #0x90
    b83c:	csel	x0, x0, x1, eq  // eq = none
    b840:	ldrb	w0, [x0, #25]
    b844:	ret

000000000000b848 <omp_set_schedule@@OMP_3.0>:
    b848:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b84c:	ldr	x3, [x3, #4016]
    b850:	mrs	x2, tpidr_el0
    b854:	stp	x29, x30, [sp, #-32]!
    b858:	add	x2, x2, x3
    b85c:	mov	x29, sp
    b860:	stp	x19, x20, [sp, #16]
    b864:	mov	w19, w0
    b868:	mov	w20, w1
    b86c:	ldr	x0, [x2, #80]
    b870:	cbz	x0, b8c4 <omp_set_schedule@@OMP_3.0+0x7c>
    b874:	add	x0, x0, #0x90
    b878:	tst	w19, #0x7ffffffc
    b87c:	and	w1, w19, #0x7fffffff
    b880:	b.ne	b8b0 <omp_set_schedule@@OMP_3.0+0x68>  // b.any
    b884:	tst	w19, #0x7ffffffe
    b888:	b.ne	b8cc <omp_set_schedule@@OMP_3.0+0x84>  // b.any
    b88c:	cmp	w1, #0x1
    b890:	b.ne	b8a4 <omp_set_schedule@@OMP_3.0+0x5c>  // b.any
    b894:	cmp	w20, #0x0
    b898:	csel	w20, w20, wzr, ge  // ge = tcont
    b89c:	str	w20, [x0, #12]
    b8a0:	str	w19, [x0, #8]
    b8a4:	ldp	x19, x20, [sp, #16]
    b8a8:	ldp	x29, x30, [sp], #32
    b8ac:	ret
    b8b0:	cmp	w1, #0x4
    b8b4:	b.eq	b8a0 <omp_set_schedule@@OMP_3.0+0x58>  // b.none
    b8b8:	ldp	x19, x20, [sp, #16]
    b8bc:	ldp	x29, x30, [sp], #32
    b8c0:	ret
    b8c4:	bl	19758 <omp_in_final@@OMP_3.1+0x1730>
    b8c8:	b	b878 <omp_set_schedule@@OMP_3.0+0x30>
    b8cc:	cmp	w20, #0x0
    b8d0:	csinc	w20, w20, wzr, gt
    b8d4:	str	w20, [x0, #12]
    b8d8:	b	b8a0 <omp_set_schedule@@OMP_3.0+0x58>
    b8dc:	nop

000000000000b8e0 <omp_get_schedule@@OMP_3.0>:
    b8e0:	adrp	x4, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b8e4:	ldr	x4, [x4, #4016]
    b8e8:	mrs	x3, tpidr_el0
    b8ec:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b8f0:	add	x2, x2, #0x2b8
    b8f4:	add	x3, x3, x4
    b8f8:	ldr	x3, [x3, #80]
    b8fc:	cmp	x3, #0x0
    b900:	add	x3, x3, #0x90
    b904:	csel	x2, x2, x3, eq  // eq = none
    b908:	ldr	w3, [x2, #8]
    b90c:	str	w3, [x0]
    b910:	ldr	w0, [x2, #12]
    b914:	str	w0, [x1]
    b918:	ret
    b91c:	nop

000000000000b920 <omp_get_max_threads@@OMP_1.0>:
    b920:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b924:	ldr	x2, [x2, #4016]
    b928:	mrs	x1, tpidr_el0
    b92c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b930:	add	x0, x0, #0x2b8
    b934:	add	x1, x1, x2
    b938:	ldr	x1, [x1, #80]
    b93c:	cmp	x1, #0x0
    b940:	add	x1, x1, #0x90
    b944:	csel	x0, x0, x1, eq  // eq = none
    b948:	ldr	w0, [x0]
    b94c:	ret

000000000000b950 <omp_get_thread_limit@@OMP_3.0>:
    b950:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b954:	ldr	x0, [x0, #4016]
    b958:	mrs	x2, tpidr_el0
    b95c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b960:	add	x1, x1, #0x2b8
    b964:	add	x2, x2, x0
    b968:	mov	w3, #0x7fffffff            	// #2147483647
    b96c:	ldr	x2, [x2, #80]
    b970:	cmp	x2, #0x0
    b974:	add	x2, x2, #0x90
    b978:	csel	x1, x1, x2, eq  // eq = none
    b97c:	ldr	w0, [x1, #20]
    b980:	cmp	w0, #0x0
    b984:	csel	w0, w0, w3, ge  // ge = tcont
    b988:	ret
    b98c:	nop

000000000000b990 <omp_set_max_active_levels@@OMP_3.0>:
    b990:	tbnz	w0, #31, b9a0 <omp_set_max_active_levels@@OMP_3.0+0x10>
    b994:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b998:	sxtw	x0, w0
    b99c:	str	x0, [x1, #736]
    b9a0:	ret
    b9a4:	nop

000000000000b9a8 <omp_get_max_active_levels@@OMP_3.0>:
    b9a8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b9ac:	ldr	w0, [x0, #736]
    b9b0:	ret
    b9b4:	nop

000000000000b9b8 <omp_get_cancellation@@OMP_4.0>:
    b9b8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b9bc:	ldrb	w0, [x0, #1364]
    b9c0:	ret
    b9c4:	nop

000000000000b9c8 <omp_get_max_task_priority@@OMP_4.5>:
    b9c8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b9cc:	ldr	w0, [x0, #1368]
    b9d0:	ret
    b9d4:	nop

000000000000b9d8 <omp_get_proc_bind@@OMP_4.0>:
    b9d8:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    b9dc:	ldr	x2, [x2, #4016]
    b9e0:	mrs	x1, tpidr_el0
    b9e4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    b9e8:	add	x0, x0, #0x2b8
    b9ec:	add	x1, x1, x2
    b9f0:	ldr	x1, [x1, #80]
    b9f4:	cmp	x1, #0x0
    b9f8:	add	x1, x1, #0x90
    b9fc:	csel	x0, x0, x1, eq  // eq = none
    ba00:	ldrb	w0, [x0, #26]
    ba04:	ret

000000000000ba08 <omp_get_initial_device@@OMP_4.5>:
    ba08:	mov	w0, #0xfffffffe            	// #-2
    ba0c:	ret

000000000000ba10 <omp_get_num_places@@OMP_4.5>:
    ba10:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    ba14:	ldr	w0, [x0, #1608]
    ba18:	ret
    ba1c:	nop

000000000000ba20 <omp_get_place_num@@OMP_4.5>:
    ba20:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    ba24:	ldr	x0, [x0, #1568]
    ba28:	cbz	x0, ba78 <omp_get_place_num@@OMP_4.5+0x58>
    ba2c:	stp	x29, x30, [sp, #-32]!
    ba30:	mrs	x0, tpidr_el0
    ba34:	mov	x29, sp
    ba38:	str	x19, [sp, #16]
    ba3c:	adrp	x19, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    ba40:	ldr	x19, [x19, #4016]
    ba44:	add	x19, x0, x19
    ba48:	ldr	w0, [x19, #92]
    ba4c:	cbz	w0, ba60 <omp_get_place_num@@OMP_4.5+0x40>
    ba50:	sub	w0, w0, #0x1
    ba54:	ldr	x19, [sp, #16]
    ba58:	ldp	x29, x30, [sp], #32
    ba5c:	ret
    ba60:	bl	1c6e0 <omp_pause_resource_all_@@OMP_5.0+0xa38>
    ba64:	ldr	w0, [x19, #92]
    ba68:	ldr	x19, [sp, #16]
    ba6c:	sub	w0, w0, #0x1
    ba70:	ldp	x29, x30, [sp], #32
    ba74:	ret
    ba78:	mov	w0, #0xffffffff            	// #-1
    ba7c:	ret

000000000000ba80 <omp_get_partition_num_places@@OMP_4.5>:
    ba80:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    ba84:	ldr	x0, [x0, #1568]
    ba88:	cbz	x0, badc <omp_get_partition_num_places@@OMP_4.5+0x5c>
    ba8c:	stp	x29, x30, [sp, #-32]!
    ba90:	mov	x29, sp
    ba94:	stp	x19, x20, [sp, #16]
    ba98:	mrs	x19, tpidr_el0
    ba9c:	adrp	x20, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    baa0:	ldr	x20, [x20, #4016]
    baa4:	add	x0, x19, x20
    baa8:	ldr	w0, [x0, #92]
    baac:	cbz	w0, bac4 <omp_get_partition_num_places@@OMP_4.5+0x44>
    bab0:	add	x19, x19, x20
    bab4:	ldr	w0, [x19, #56]
    bab8:	ldp	x19, x20, [sp, #16]
    babc:	ldp	x29, x30, [sp], #32
    bac0:	ret
    bac4:	add	x19, x19, x20
    bac8:	bl	1c6e0 <omp_pause_resource_all_@@OMP_5.0+0xa38>
    bacc:	ldr	w0, [x19, #56]
    bad0:	ldp	x19, x20, [sp, #16]
    bad4:	ldp	x29, x30, [sp], #32
    bad8:	ret
    badc:	mov	w0, #0x0                   	// #0
    bae0:	ret
    bae4:	nop

000000000000bae8 <omp_get_partition_place_nums@@OMP_4.5>:
    bae8:	stp	x29, x30, [sp, #-48]!
    baec:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    baf0:	mov	x29, sp
    baf4:	stp	x19, x20, [sp, #16]
    baf8:	mov	x20, x0
    bafc:	ldr	x0, [x1, #1568]
    bb00:	cbz	x0, bb50 <omp_get_partition_place_nums@@OMP_4.5+0x68>
    bb04:	str	x21, [sp, #32]
    bb08:	mrs	x19, tpidr_el0
    bb0c:	adrp	x21, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    bb10:	ldr	x21, [x21, #4016]
    bb14:	add	x0, x19, x21
    bb18:	ldr	w0, [x0, #92]
    bb1c:	cbz	w0, bb5c <omp_get_partition_place_nums@@OMP_4.5+0x74>
    bb20:	add	x3, x19, x21
    bb24:	ldr	w0, [x3, #56]
    bb28:	cbz	w0, bb4c <omp_get_partition_place_nums@@OMP_4.5+0x64>
    bb2c:	mov	x1, #0x0                   	// #0
    bb30:	ldr	w2, [x3, #52]
    bb34:	add	w2, w2, w1
    bb38:	str	w2, [x20, x1, lsl #2]
    bb3c:	add	x1, x1, #0x1
    bb40:	ldr	w2, [x3, #56]
    bb44:	cmp	w2, w1
    bb48:	b.hi	bb30 <omp_get_partition_place_nums@@OMP_4.5+0x48>  // b.pmore
    bb4c:	ldr	x21, [sp, #32]
    bb50:	ldp	x19, x20, [sp, #16]
    bb54:	ldp	x29, x30, [sp], #48
    bb58:	ret
    bb5c:	bl	1c6e0 <omp_pause_resource_all_@@OMP_5.0+0xa38>
    bb60:	b	bb20 <omp_get_partition_place_nums@@OMP_4.5+0x38>
    bb64:	nop

000000000000bb68 <omp_set_default_device@@OMP_4.0>:
    bb68:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    bb6c:	ldr	x2, [x2, #4016]
    bb70:	mrs	x1, tpidr_el0
    bb74:	stp	x29, x30, [sp, #-32]!
    bb78:	add	x1, x1, x2
    bb7c:	mov	x29, sp
    bb80:	str	x19, [sp, #16]
    bb84:	mov	w19, w0
    bb88:	ldr	x0, [x1, #80]
    bb8c:	cbz	x0, bbac <omp_set_default_device@@OMP_4.0+0x44>
    bb90:	add	x0, x0, #0x90
    bb94:	cmp	w19, #0x0
    bb98:	csel	w19, w19, wzr, ge  // ge = tcont
    bb9c:	str	w19, [x0, #16]
    bba0:	ldr	x19, [sp, #16]
    bba4:	ldp	x29, x30, [sp], #32
    bba8:	ret
    bbac:	bl	19758 <omp_in_final@@OMP_3.1+0x1730>
    bbb0:	cmp	w19, #0x0
    bbb4:	csel	w19, w19, wzr, ge  // ge = tcont
    bbb8:	str	w19, [x0, #16]
    bbbc:	ldr	x19, [sp, #16]
    bbc0:	ldp	x29, x30, [sp], #32
    bbc4:	ret

000000000000bbc8 <omp_get_default_device@@OMP_4.0>:
    bbc8:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    bbcc:	ldr	x2, [x2, #4016]
    bbd0:	mrs	x1, tpidr_el0
    bbd4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    bbd8:	add	x0, x0, #0x2b8
    bbdc:	add	x1, x1, x2
    bbe0:	ldr	x1, [x1, #80]
    bbe4:	cmp	x1, #0x0
    bbe8:	add	x1, x1, #0x90
    bbec:	csel	x0, x0, x1, eq  // eq = none
    bbf0:	ldr	w0, [x0, #16]
    bbf4:	ret

000000000000bbf8 <omp_get_num_devices@@OMP_4.0>:
    bbf8:	b	1e0e8 <omp_get_place_proc_ids@@OMP_4.5+0x17e8>
    bbfc:	nop

000000000000bc00 <omp_is_initial_device@@OMP_4.0>:
    bc00:	mov	w0, #0x1                   	// #1
    bc04:	ret
    bc08:	adrp	x5, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    bc0c:	ldr	x5, [x5, #4016]
    bc10:	mrs	x10, tpidr_el0
    bc14:	mov	x8, x0
    bc18:	add	x2, x10, x5
    bc1c:	ldp	x6, x4, [x2, #16]
    bc20:	ldr	x7, [x2, #72]
    bc24:	cbz	x6, bd20 <omp_is_initial_device@@OMP_4.0+0x120>
    bc28:	ldr	w3, [x6]
    bc2c:	cmn	x7, #0x1
    bc30:	mov	w0, #0xffffffff            	// #-1
    bc34:	b.eq	bcb0 <omp_is_initial_device@@OMP_4.0+0xb0>  // b.none
    bc38:	cmp	x3, #0x1
    bc3c:	b.eq	bd2c <omp_is_initial_device@@OMP_4.0+0x12c>  // b.none
    bc40:	ldr	x6, [x4, #8]
    bc44:	cbnz	x6, bcb4 <omp_is_initial_device@@OMP_4.0+0xb4>
    bc48:	mov	w0, #0x1                   	// #1
    bc4c:	cbnz	x7, bcb0 <omp_is_initial_device@@OMP_4.0+0xb0>
    bc50:	ldp	x0, x7, [x4, #16]
    bc54:	mov	x6, #0x1                   	// #1
    bc58:	ldr	x9, [x4, #72]
    bc5c:	ldr	w4, [x2, #40]
    bc60:	cmp	x7, #0x0
    bc64:	sub	x0, x0, x9
    bc68:	cneg	x6, x6, gt
    bc6c:	add	x6, x7, x6
    bc70:	add	x0, x0, x6
    bc74:	sdiv	x0, x0, x7
    bc78:	udiv	x2, x0, x3
    bc7c:	msub	x3, x2, x3, x0
    bc80:	cmp	x4, x3
    bc84:	b.cs	bc90 <omp_is_initial_device@@OMP_4.0+0x90>  // b.hs, b.nlast
    bc88:	add	x2, x2, #0x1
    bc8c:	mov	x3, #0x0                   	// #0
    bc90:	madd	x3, x2, x4, x3
    bc94:	add	x2, x2, x3
    bc98:	cmp	x3, x2
    bc9c:	b.cc	bd58 <omp_is_initial_device@@OMP_4.0+0x158>  // b.lo, b.ul, b.last
    bca0:	add	x5, x10, x5
    bca4:	mov	x1, #0x1                   	// #1
    bca8:	mov	w0, w1
    bcac:	str	x1, [x5, #72]
    bcb0:	ret
    bcb4:	ldp	x5, x9, [x4, #16]
    bcb8:	mov	x0, #0x1                   	// #1
    bcbc:	ldr	x11, [x4, #72]
    bcc0:	ldr	w12, [x2, #40]
    bcc4:	cmp	x9, #0x0
    bcc8:	cneg	x4, x0, gt
    bccc:	add	x10, x9, x4
    bcd0:	sub	x4, x5, x11
    bcd4:	add	x4, x4, x10
    bcd8:	madd	x3, x3, x7, x12
    bcdc:	sdiv	x4, x4, x9
    bce0:	mul	x3, x3, x6
    bce4:	cmp	x4, x3
    bce8:	b.ls	bcb0 <omp_is_initial_device@@OMP_4.0+0xb0>  // b.plast
    bcec:	add	x6, x6, x3
    bcf0:	madd	x3, x3, x9, x11
    bcf4:	cmp	x4, x6
    bcf8:	str	x3, [x8]
    bcfc:	csel	x0, x4, x6, ls  // ls = plast
    bd00:	madd	x9, x0, x9, x11
    bd04:	str	x9, [x1]
    bd08:	b.ls	bd84 <omp_is_initial_device@@OMP_4.0+0x184>  // b.plast
    bd0c:	ldr	x1, [x2, #72]
    bd10:	mov	w0, #0x0                   	// #0
    bd14:	add	x1, x1, #0x1
    bd18:	str	x1, [x2, #72]
    bd1c:	ret
    bd20:	cmn	x7, #0x1
    bd24:	mov	w0, #0xffffffff            	// #-1
    bd28:	b.eq	bcb0 <omp_is_initial_device@@OMP_4.0+0xb0>  // b.none
    bd2c:	ldr	x0, [x4, #72]
    bd30:	str	x0, [x8]
    bd34:	add	x5, x10, x5
    bd38:	mov	x2, #0xffffffffffffffff    	// #-1
    bd3c:	ldr	x0, [x4, #16]
    bd40:	str	x0, [x1]
    bd44:	ldr	x1, [x4, #72]
    bd48:	str	x2, [x5, #72]
    bd4c:	cmp	x1, x0
    bd50:	cset	w0, eq  // eq = none
    bd54:	ret
    bd58:	madd	x3, x3, x7, x9
    bd5c:	add	x5, x10, x5
    bd60:	madd	x7, x2, x7, x9
    bd64:	str	x3, [x8]
    bd68:	cmp	x0, x2
    bd6c:	str	x7, [x1]
    bd70:	mov	w0, #0x0                   	// #0
    bd74:	mov	x1, #0x1                   	// #1
    bd78:	cneg	x1, x1, eq  // eq = none
    bd7c:	str	x1, [x5, #72]
    bd80:	ret
    bd84:	mov	x1, #0xffffffffffffffff    	// #-1
    bd88:	mov	w0, #0x0                   	// #0
    bd8c:	str	x1, [x2, #72]
    bd90:	ret
    bd94:	nop
    bd98:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    bd9c:	ldr	x3, [x3, #4016]
    bda0:	mrs	x2, tpidr_el0
    bda4:	add	x2, x2, x3
    bda8:	ldr	x3, [x2, #24]
    bdac:	ldr	x2, [x3, #16]
    bdb0:	ldr	x4, [x3, #72]
    bdb4:	cmp	x2, x4
    bdb8:	b.eq	be0c <omp_is_initial_device@@OMP_4.0+0x20c>  // b.none
    bdbc:	ldr	x6, [x3, #8]
    bdc0:	sub	x2, x2, x4
    bdc4:	ldr	x7, [x3, #24]
    bdc8:	cmp	x6, x2
    bdcc:	csel	x5, x6, x2, le
    bdd0:	tbnz	x7, #63, bdec <omp_is_initial_device@@OMP_4.0+0x1ec>
    bdd4:	add	x2, x5, x4
    bdd8:	str	x2, [x3, #72]
    bddc:	str	x4, [x0]
    bde0:	mov	w0, #0x1                   	// #1
    bde4:	str	x2, [x1]
    bde8:	ret
    bdec:	cmp	x6, x2
    bdf0:	csel	x5, x6, x2, ge  // ge = tcont
    bdf4:	add	x2, x5, x4
    bdf8:	str	x2, [x3, #72]
    bdfc:	str	x4, [x0]
    be00:	mov	w0, #0x1                   	// #1
    be04:	str	x2, [x1]
    be08:	b	bde8 <omp_is_initial_device@@OMP_4.0+0x1e8>
    be0c:	mov	w0, #0x0                   	// #0
    be10:	ret
    be14:	nop
    be18:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    be1c:	ldr	x3, [x3, #4016]
    be20:	mrs	x2, tpidr_el0
    be24:	add	x2, x2, x3
    be28:	ldr	x2, [x2, #24]
    be2c:	add	x4, x2, #0x48
    be30:	ldr	w7, [x2, #4]
    be34:	ldr	x3, [x2, #8]
    be38:	ldp	x5, x6, [x2, #16]
    be3c:	cbz	w7, beac <omp_is_initial_device@@OMP_4.0+0x2ac>
    be40:	ldxr	x2, [x4]
    be44:	add	x7, x2, x3
    be48:	stlxr	w8, x7, [x4]
    be4c:	cbnz	w8, be40 <omp_is_initial_device@@OMP_4.0+0x240>
    be50:	dmb	ish
    be54:	cmp	x6, #0x0
    be58:	b.le	be88 <omp_is_initial_device@@OMP_4.0+0x288>
    be5c:	cmp	x5, x2
    be60:	b.gt	be6c <omp_is_initial_device@@OMP_4.0+0x26c>
    be64:	mov	w0, #0x0                   	// #0
    be68:	ret
    be6c:	add	x3, x3, x2
    be70:	str	x2, [x0]
    be74:	cmp	x5, x3
    be78:	mov	w0, #0x1                   	// #1
    be7c:	csel	x3, x5, x3, le
    be80:	str	x3, [x1]
    be84:	ret
    be88:	cmp	x5, x2
    be8c:	b.ge	be64 <omp_is_initial_device@@OMP_4.0+0x264>  // b.tcont
    be90:	add	x3, x3, x2
    be94:	str	x2, [x0]
    be98:	cmp	x5, x3
    be9c:	mov	w0, #0x1                   	// #1
    bea0:	csel	x3, x5, x3, ge  // ge = tcont
    bea4:	str	x3, [x1]
    bea8:	ret
    beac:	ldr	x2, [x4]
    beb0:	cmp	x2, x5
    beb4:	sub	x7, x5, x2
    beb8:	b.eq	be64 <omp_is_initial_device@@OMP_4.0+0x264>  // b.none
    bebc:	tbnz	x6, #63, befc <omp_is_initial_device@@OMP_4.0+0x2fc>
    bec0:	cmp	x3, x7
    bec4:	csel	x3, x3, x7, le
    bec8:	add	x7, x2, x3
    becc:	ldxr	x8, [x4]
    bed0:	cmp	x8, x2
    bed4:	b.ne	bee0 <omp_is_initial_device@@OMP_4.0+0x2e0>  // b.any
    bed8:	stlxr	w9, x7, [x4]
    bedc:	cbnz	w9, becc <omp_is_initial_device@@OMP_4.0+0x2cc>
    bee0:	dmb	ish
    bee4:	cmp	x2, x8
    bee8:	b.ne	bf08 <omp_is_initial_device@@OMP_4.0+0x308>  // b.any
    beec:	str	x2, [x0]
    bef0:	mov	w0, #0x1                   	// #1
    bef4:	str	x7, [x1]
    bef8:	ret
    befc:	cmp	x3, x7
    bf00:	csel	x3, x3, x7, ge  // ge = tcont
    bf04:	b	bec8 <omp_is_initial_device@@OMP_4.0+0x2c8>
    bf08:	mov	x2, x8
    bf0c:	b	beb0 <omp_is_initial_device@@OMP_4.0+0x2b0>
    bf10:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    bf14:	ldr	x2, [x2, #4016]
    bf18:	mrs	x3, tpidr_el0
    bf1c:	mov	x9, #0x1                   	// #1
    bf20:	add	x2, x3, x2
    bf24:	ldp	x3, x4, [x2, #16]
    bf28:	cbz	x3, bf30 <omp_is_initial_device@@OMP_4.0+0x330>
    bf2c:	ldr	w9, [x3]
    bf30:	ldr	x2, [x4, #16]
    bf34:	mov	w10, #0x0                   	// #0
    bf38:	ldr	x6, [x4, #72]
    bf3c:	cmp	x6, x2
    bf40:	b.eq	bf84 <omp_is_initial_device@@OMP_4.0+0x384>  // b.none
    bf44:	ldr	x7, [x4, #24]
    bf48:	sub	x8, x2, x6
    bf4c:	ldr	x5, [x4, #8]
    bf50:	mov	w10, #0x1                   	// #1
    bf54:	sdiv	x8, x8, x7
    bf58:	sub	x3, x8, #0x1
    bf5c:	add	x3, x3, x9
    bf60:	udiv	x3, x3, x9
    bf64:	cmp	x5, x3
    bf68:	csel	x3, x5, x3, cs  // cs = hs, nlast
    bf6c:	cmp	x3, x8
    bf70:	madd	x3, x7, x3, x6
    bf74:	csel	x2, x3, x2, ls  // ls = plast
    bf78:	str	x2, [x4, #72]
    bf7c:	str	x6, [x0]
    bf80:	str	x2, [x1]
    bf84:	mov	w0, w10
    bf88:	ret
    bf8c:	nop
    bf90:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    bf94:	ldr	x2, [x2, #4016]
    bf98:	mrs	x3, tpidr_el0
    bf9c:	mov	x6, #0x1                   	// #1
    bfa0:	add	x2, x3, x2
    bfa4:	ldp	x3, x2, [x2, #16]
    bfa8:	cbz	x3, bfb0 <omp_is_initial_device@@OMP_4.0+0x3b0>
    bfac:	ldr	w6, [x3]
    bfb0:	add	x5, x2, #0x48
    bfb4:	ldr	x3, [x5]
    bfb8:	ldp	x8, x7, [x2, #8]
    bfbc:	sub	x10, x6, #0x1
    bfc0:	ldr	x9, [x2, #24]
    bfc4:	sub	x4, x7, x3
    bfc8:	cmp	x3, x7
    bfcc:	b.eq	c038 <omp_is_initial_device@@OMP_4.0+0x438>  // b.none
    bfd0:	sdiv	x4, x4, x9
    bfd4:	add	x2, x10, x4
    bfd8:	udiv	x2, x2, x6
    bfdc:	cmp	x8, x2
    bfe0:	csel	x2, x8, x2, cs  // cs = hs, nlast
    bfe4:	cmp	x2, x4
    bfe8:	b.hi	c024 <omp_is_initial_device@@OMP_4.0+0x424>  // b.pmore
    bfec:	madd	x2, x9, x2, x3
    bff0:	mov	x11, x2
    bff4:	ldxr	x4, [x5]
    bff8:	cmp	x4, x3
    bffc:	b.ne	c008 <omp_is_initial_device@@OMP_4.0+0x408>  // b.any
    c000:	stlxr	w12, x2, [x5]
    c004:	cbnz	w12, bff4 <omp_is_initial_device@@OMP_4.0+0x3f4>
    c008:	dmb	ish
    c00c:	cmp	x3, x4
    c010:	b.ne	c030 <omp_is_initial_device@@OMP_4.0+0x430>  // b.any
    c014:	str	x3, [x0]
    c018:	mov	w0, #0x1                   	// #1
    c01c:	str	x11, [x1]
    c020:	ret
    c024:	mov	x2, x7
    c028:	mov	x11, x7
    c02c:	b	bff4 <omp_is_initial_device@@OMP_4.0+0x3f4>
    c030:	mov	x3, x4
    c034:	b	bfc4 <omp_is_initial_device@@OMP_4.0+0x3c4>
    c038:	mov	w0, #0x0                   	// #0
    c03c:	ret
    c040:	adrp	x5, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    c044:	ldr	x5, [x5, #4016]
    c048:	mrs	x4, tpidr_el0
    c04c:	mov	x9, x0
    c050:	add	x2, x4, x5
    c054:	ldp	x7, x3, [x2, #16]
    c058:	ldr	x6, [x2, #72]
    c05c:	cbz	x7, c158 <omp_is_initial_device@@OMP_4.0+0x558>
    c060:	ldr	w2, [x7]
    c064:	cmn	x6, #0x1
    c068:	mov	w0, #0xffffffff            	// #-1
    c06c:	b.eq	c0e8 <omp_is_initial_device@@OMP_4.0+0x4e8>  // b.none
    c070:	cmp	x2, #0x1
    c074:	b.eq	c164 <omp_is_initial_device@@OMP_4.0+0x564>  // b.none
    c078:	ldr	x8, [x3, #8]
    c07c:	cbz	x8, c0ec <omp_is_initial_device@@OMP_4.0+0x4ec>
    c080:	ldp	x7, x10, [x3, #16]
    c084:	ldr	w12, [x3, #4]
    c088:	ldr	x11, [x3, #72]
    c08c:	add	x0, x10, x7
    c090:	cbnz	w12, c1e0 <omp_is_initial_device@@OMP_4.0+0x5e0>
    c094:	mvn	x3, x11
    c098:	add	x3, x3, x0
    c09c:	udiv	x3, x3, x10
    c0a0:	add	x4, x4, x5
    c0a4:	mov	w0, #0x1                   	// #1
    c0a8:	ldr	w5, [x4, #40]
    c0ac:	madd	x2, x2, x6, x5
    c0b0:	mul	x2, x2, x8
    c0b4:	cmp	x3, x2
    c0b8:	b.ls	c0e8 <omp_is_initial_device@@OMP_4.0+0x4e8>  // b.plast
    c0bc:	add	x8, x8, x2
    c0c0:	madd	x2, x2, x10, x11
    c0c4:	cmp	x3, x8
    c0c8:	str	x2, [x9]
    c0cc:	csel	x0, x3, x8, ls  // ls = plast
    c0d0:	madd	x10, x0, x10, x11
    c0d4:	str	x10, [x1]
    c0d8:	b.ls	c1bc <omp_is_initial_device@@OMP_4.0+0x5bc>  // b.plast
    c0dc:	add	x6, x6, #0x1
    c0e0:	mov	w0, #0x0                   	// #0
    c0e4:	str	x6, [x4, #72]
    c0e8:	ret
    c0ec:	mov	w0, #0x1                   	// #1
    c0f0:	cbnz	x6, c0e8 <omp_is_initial_device@@OMP_4.0+0x4e8>
    c0f4:	ldp	x0, x7, [x3, #16]
    c0f8:	ldr	w10, [x3, #4]
    c0fc:	ldr	x8, [x3, #72]
    c100:	add	x6, x7, x0
    c104:	cbnz	w10, c1cc <omp_is_initial_device@@OMP_4.0+0x5cc>
    c108:	mvn	x3, x8
    c10c:	add	x3, x3, x6
    c110:	udiv	x3, x3, x7
    c114:	add	x6, x4, x5
    c118:	udiv	x0, x3, x2
    c11c:	ldr	w6, [x6, #40]
    c120:	msub	x2, x0, x2, x3
    c124:	cmp	x6, x2
    c128:	b.cs	c134 <omp_is_initial_device@@OMP_4.0+0x534>  // b.hs, b.nlast
    c12c:	add	x0, x0, #0x1
    c130:	mov	x2, #0x0                   	// #0
    c134:	madd	x2, x0, x6, x2
    c138:	add	x0, x0, x2
    c13c:	cmp	x2, x0
    c140:	b.cc	c190 <omp_is_initial_device@@OMP_4.0+0x590>  // b.lo, b.ul, b.last
    c144:	add	x4, x4, x5
    c148:	mov	x1, #0x1                   	// #1
    c14c:	mov	w0, w1
    c150:	str	x1, [x4, #72]
    c154:	ret
    c158:	cmn	x6, #0x1
    c15c:	mov	w0, #0xffffffff            	// #-1
    c160:	b.eq	c0e8 <omp_is_initial_device@@OMP_4.0+0x4e8>  // b.none
    c164:	ldr	x0, [x3, #72]
    c168:	str	x0, [x9]
    c16c:	add	x4, x4, x5
    c170:	mov	x2, #0xffffffffffffffff    	// #-1
    c174:	ldr	x0, [x3, #16]
    c178:	str	x0, [x1]
    c17c:	ldr	x1, [x3, #72]
    c180:	str	x2, [x4, #72]
    c184:	cmp	x1, x0
    c188:	cset	w0, eq  // eq = none
    c18c:	ret
    c190:	madd	x2, x7, x2, x8
    c194:	add	x4, x4, x5
    c198:	madd	x7, x7, x0, x8
    c19c:	str	x2, [x9]
    c1a0:	cmp	x3, x0
    c1a4:	str	x7, [x1]
    c1a8:	mov	w0, #0x0                   	// #0
    c1ac:	mov	x1, #0x1                   	// #1
    c1b0:	cneg	x1, x1, eq  // eq = none
    c1b4:	str	x1, [x4, #72]
    c1b8:	ret
    c1bc:	mov	x1, #0xffffffffffffffff    	// #-1
    c1c0:	mov	w0, #0x0                   	// #0
    c1c4:	str	x1, [x4, #72]
    c1c8:	ret
    c1cc:	sub	x0, x8, #0x1
    c1d0:	neg	x3, x7
    c1d4:	sub	x0, x0, x6
    c1d8:	udiv	x3, x0, x3
    c1dc:	b	c114 <omp_is_initial_device@@OMP_4.0+0x514>
    c1e0:	sub	x7, x11, #0x1
    c1e4:	neg	x3, x10
    c1e8:	sub	x7, x7, x0
    c1ec:	udiv	x3, x7, x3
    c1f0:	b	c0a0 <omp_is_initial_device@@OMP_4.0+0x4a0>
    c1f4:	nop
    c1f8:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    c1fc:	ldr	x3, [x3, #4016]
    c200:	mrs	x2, tpidr_el0
    c204:	add	x2, x2, x3
    c208:	ldr	x2, [x2, #24]
    c20c:	ldr	x3, [x2, #16]
    c210:	ldr	x4, [x2, #72]
    c214:	cmp	x3, x4
    c218:	b.eq	c24c <omp_is_initial_device@@OMP_4.0+0x64c>  // b.none
    c21c:	ldr	x6, [x2, #8]
    c220:	sub	x3, x3, x4
    c224:	ldr	w7, [x2, #4]
    c228:	cmp	x6, x3
    c22c:	csel	x5, x6, x3, ls  // ls = plast
    c230:	tbnz	w7, #1, c254 <omp_is_initial_device@@OMP_4.0+0x654>
    c234:	add	x3, x5, x4
    c238:	str	x3, [x2, #72]
    c23c:	str	x4, [x0]
    c240:	mov	w0, #0x1                   	// #1
    c244:	str	x3, [x1]
    c248:	ret
    c24c:	mov	w0, #0x0                   	// #0
    c250:	ret
    c254:	cmp	x6, x3
    c258:	csel	x5, x6, x3, cs  // cs = hs, nlast
    c25c:	b	c234 <omp_is_initial_device@@OMP_4.0+0x634>
    c260:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    c264:	ldr	x3, [x3, #4016]
    c268:	mrs	x2, tpidr_el0
    c26c:	add	x2, x2, x3
    c270:	ldr	x2, [x2, #24]
    c274:	add	x4, x2, #0x48
    c278:	ldr	w6, [x2, #4]
    c27c:	ldp	x3, x5, [x2, #8]
    c280:	tbz	w6, #0, c2cc <omp_is_initial_device@@OMP_4.0+0x6cc>
    c284:	ldxr	x6, [x4]
    c288:	add	x7, x6, x3
    c28c:	stlxr	w8, x7, [x4]
    c290:	cbnz	w8, c284 <omp_is_initial_device@@OMP_4.0+0x684>
    c294:	dmb	ish
    c298:	ldr	w2, [x2, #4]
    c29c:	tbnz	w2, #1, c320 <omp_is_initial_device@@OMP_4.0+0x720>
    c2a0:	cmp	x5, x6
    c2a4:	b.hi	c2b0 <omp_is_initial_device@@OMP_4.0+0x6b0>  // b.pmore
    c2a8:	mov	w0, #0x0                   	// #0
    c2ac:	ret
    c2b0:	add	x3, x3, x6
    c2b4:	str	x6, [x0]
    c2b8:	cmp	x5, x3
    c2bc:	mov	w0, #0x1                   	// #1
    c2c0:	csel	x3, x5, x3, ls  // ls = plast
    c2c4:	str	x3, [x1]
    c2c8:	ret
    c2cc:	ldr	x6, [x4]
    c2d0:	cmp	x6, x5
    c2d4:	sub	x7, x5, x6
    c2d8:	b.eq	c2a8 <omp_is_initial_device@@OMP_4.0+0x6a8>  // b.none
    c2dc:	ldr	w8, [x2, #4]
    c2e0:	tbnz	w8, #1, c34c <omp_is_initial_device@@OMP_4.0+0x74c>
    c2e4:	cmp	x3, x7
    c2e8:	csel	x3, x3, x7, ls  // ls = plast
    c2ec:	add	x7, x6, x3
    c2f0:	ldxr	x8, [x4]
    c2f4:	cmp	x8, x6
    c2f8:	b.ne	c304 <omp_is_initial_device@@OMP_4.0+0x704>  // b.any
    c2fc:	stlxr	w9, x7, [x4]
    c300:	cbnz	w9, c2f0 <omp_is_initial_device@@OMP_4.0+0x6f0>
    c304:	dmb	ish
    c308:	cmp	x6, x8
    c30c:	b.ne	c344 <omp_is_initial_device@@OMP_4.0+0x744>  // b.any
    c310:	str	x6, [x0]
    c314:	mov	w0, #0x1                   	// #1
    c318:	str	x7, [x1]
    c31c:	ret
    c320:	cmp	x5, x6
    c324:	b.cs	c2a8 <omp_is_initial_device@@OMP_4.0+0x6a8>  // b.hs, b.nlast
    c328:	add	x2, x3, x6
    c32c:	str	x6, [x0]
    c330:	cmp	x5, x2
    c334:	mov	w0, #0x1                   	// #1
    c338:	csel	x3, x5, x2, cs  // cs = hs, nlast
    c33c:	str	x3, [x1]
    c340:	ret
    c344:	mov	x6, x8
    c348:	b	c2d0 <omp_is_initial_device@@OMP_4.0+0x6d0>
    c34c:	cmp	x3, x7
    c350:	csel	x3, x3, x7, cs  // cs = hs, nlast
    c354:	b	c2ec <omp_is_initial_device@@OMP_4.0+0x6ec>
    c358:	sub	sp, sp, #0x10
    c35c:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    c360:	ldr	x3, [x3, #4016]
    c364:	mrs	x2, tpidr_el0
    c368:	mov	x8, #0x1                   	// #1
    c36c:	str	x1, [sp, #8]
    c370:	add	x1, x2, x3
    c374:	ldr	x7, [sp, #8]
    c378:	ldp	x3, x2, [x1, #16]
    c37c:	cbz	x3, c384 <omp_is_initial_device@@OMP_4.0+0x784>
    c380:	ldr	w8, [x3]
    c384:	ldr	x3, [x2, #16]
    c388:	mov	w9, #0x0                   	// #0
    c38c:	ldr	x5, [x2, #72]
    c390:	cmp	x5, x3
    c394:	b.eq	c3e0 <omp_is_initial_device@@OMP_4.0+0x7e0>  // b.none
    c398:	ldr	w1, [x2, #4]
    c39c:	ldr	x10, [x2, #24]
    c3a0:	cbnz	w1, c3ec <omp_is_initial_device@@OMP_4.0+0x7ec>
    c3a4:	sub	x6, x3, x5
    c3a8:	udiv	x6, x6, x10
    c3ac:	sub	x4, x8, #0x1
    c3b0:	mov	w9, #0x1                   	// #1
    c3b4:	add	x4, x4, x6
    c3b8:	ldr	x1, [x2, #8]
    c3bc:	udiv	x4, x4, x8
    c3c0:	cmp	x1, x4
    c3c4:	csel	x1, x1, x4, cs  // cs = hs, nlast
    c3c8:	cmp	x6, x1
    c3cc:	madd	x1, x1, x10, x5
    c3d0:	csel	x3, x1, x3, cs  // cs = hs, nlast
    c3d4:	str	x3, [x2, #72]
    c3d8:	str	x5, [x0]
    c3dc:	str	x3, [x7]
    c3e0:	mov	w0, w9
    c3e4:	add	sp, sp, #0x10
    c3e8:	ret
    c3ec:	sub	x6, x5, x3
    c3f0:	neg	x1, x10
    c3f4:	udiv	x6, x6, x1
    c3f8:	b	c3ac <omp_is_initial_device@@OMP_4.0+0x7ac>
    c3fc:	nop
    c400:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    c404:	ldr	x2, [x2, #4016]
    c408:	mrs	x3, tpidr_el0
    c40c:	mov	x9, #0x1                   	// #1
    c410:	add	x2, x3, x2
    c414:	ldp	x3, x4, [x2, #16]
    c418:	cbz	x3, c420 <omp_is_initial_device@@OMP_4.0+0x820>
    c41c:	ldr	w9, [x3]
    c420:	add	x7, x4, #0x48
    c424:	ldr	x3, [x7]
    c428:	ldp	x10, x6, [x4, #8]
    c42c:	sub	x11, x9, #0x1
    c430:	ldr	x8, [x4, #24]
    c434:	neg	x12, x8
    c438:	sub	x5, x6, x3
    c43c:	cmp	x3, x6
    c440:	b.eq	c4b0 <omp_is_initial_device@@OMP_4.0+0x8b0>  // b.none
    c444:	ldr	w2, [x4, #4]
    c448:	cbnz	w2, c49c <omp_is_initial_device@@OMP_4.0+0x89c>
    c44c:	udiv	x5, x5, x8
    c450:	add	x2, x11, x5
    c454:	udiv	x2, x2, x9
    c458:	cmp	x10, x2
    c45c:	csel	x2, x10, x2, cs  // cs = hs, nlast
    c460:	cmp	x5, x2
    c464:	madd	x2, x2, x8, x3
    c468:	csel	x2, x2, x6, cs  // cs = hs, nlast
    c46c:	ldxr	x5, [x7]
    c470:	cmp	x5, x3
    c474:	b.ne	c480 <omp_is_initial_device@@OMP_4.0+0x880>  // b.any
    c478:	stlxr	w13, x2, [x7]
    c47c:	cbnz	w13, c46c <omp_is_initial_device@@OMP_4.0+0x86c>
    c480:	dmb	ish
    c484:	cmp	x3, x5
    c488:	b.ne	c4a8 <omp_is_initial_device@@OMP_4.0+0x8a8>  // b.any
    c48c:	str	x3, [x0]
    c490:	mov	w0, #0x1                   	// #1
    c494:	str	x2, [x1]
    c498:	ret
    c49c:	sub	x5, x3, x6
    c4a0:	udiv	x5, x5, x12
    c4a4:	b	c450 <omp_is_initial_device@@OMP_4.0+0x850>
    c4a8:	mov	x3, x5
    c4ac:	b	c438 <omp_is_initial_device@@OMP_4.0+0x838>
    c4b0:	mov	w0, #0x0                   	// #0
    c4b4:	ret
    c4b8:	tst	x0, #0x7ffffffc
    c4bc:	and	x0, x0, #0x7fffffff
    c4c0:	b.ne	c524 <omp_is_initial_device@@OMP_4.0+0x924>  // b.any
    c4c4:	cbnz	x0, c538 <omp_is_initial_device@@OMP_4.0+0x938>
    c4c8:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    c4cc:	ldr	x3, [x3, #4016]
    c4d0:	mrs	x0, tpidr_el0
    c4d4:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    c4d8:	add	x2, x2, #0x2b8
    c4dc:	add	x0, x0, x3
    c4e0:	ldr	x0, [x0, #80]
    c4e4:	cmp	x0, #0x0
    c4e8:	add	x0, x0, #0x90
    c4ec:	csel	x2, x2, x0, eq  // eq = none
    c4f0:	ldr	w0, [x2, #8]
    c4f4:	tst	w0, #0x7ffffffc
    c4f8:	and	w0, w0, #0x7fffffff
    c4fc:	b.ne	c510 <omp_is_initial_device@@OMP_4.0+0x910>  // b.any
    c500:	cbz	w0, c52c <omp_is_initial_device@@OMP_4.0+0x92c>
    c504:	ldrsw	x2, [x2, #12]
    c508:	str	x2, [x1]
    c50c:	ret
    c510:	cmp	w0, #0x4
    c514:	b.ne	c52c <omp_is_initial_device@@OMP_4.0+0x92c>  // b.any
    c518:	mov	x0, #0x1                   	// #1
    c51c:	str	xzr, [x1]
    c520:	ret
    c524:	cmp	x0, #0x4
    c528:	b.eq	c4c8 <omp_is_initial_device@@OMP_4.0+0x8c8>  // b.none
    c52c:	stp	x29, x30, [sp, #-16]!
    c530:	mov	x29, sp
    c534:	bl	8870 <abort@plt>
    c538:	ret
    c53c:	nop
    c540:	stp	x29, x30, [sp, #-96]!
    c544:	mov	x29, sp
    c548:	stp	x25, x26, [sp, #64]
    c54c:	mov	x25, x1
    c550:	mov	w1, #0x0                   	// #0
    c554:	stp	x19, x20, [sp, #16]
    c558:	mov	x19, x4
    c55c:	mov	x20, x7
    c560:	stp	x21, x22, [sp, #32]
    c564:	mov	x21, x3
    c568:	mov	x22, x5
    c56c:	stp	x23, x24, [sp, #48]
    c570:	mov	w23, w6
    c574:	mov	x24, x0
    c578:	mov	w0, w2
    c57c:	str	x27, [sp, #80]
    c580:	ldr	w27, [sp, #96]
    c584:	bl	10cb0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2e0>
    c588:	mov	w26, w0
    c58c:	bl	181f8 <omp_in_final@@OMP_3.1+0x1d0>
    c590:	add	x6, x0, #0x100
    c594:	str	w23, [x0, #256]
    c598:	cmp	x22, #0x0
    c59c:	mov	x4, x0
    c5a0:	ccmp	x21, x19, #0x4, gt
    c5a4:	str	x20, [x6, #8]
    c5a8:	b.gt	c5f8 <omp_is_initial_device@@OMP_4.0+0x9f8>
    c5ac:	cmp	x22, #0x0
    c5b0:	str	x21, [x6, #72]
    c5b4:	ccmp	x21, x19, #0x0, lt  // lt = tstop
    c5b8:	csel	x19, x19, x21, ge  // ge = tcont
    c5bc:	stp	x19, x22, [x6, #16]
    c5c0:	cmp	w23, #0x2
    c5c4:	b.eq	c60c <omp_is_initial_device@@OMP_4.0+0xa0c>  // b.none
    c5c8:	mov	w3, w27
    c5cc:	mov	w2, w26
    c5d0:	mov	x1, x25
    c5d4:	mov	x0, x24
    c5d8:	ldp	x19, x20, [sp, #16]
    c5dc:	mov	x5, #0x0                   	// #0
    c5e0:	ldp	x21, x22, [sp, #32]
    c5e4:	ldp	x23, x24, [sp, #48]
    c5e8:	ldp	x25, x26, [sp, #64]
    c5ec:	ldr	x27, [sp, #80]
    c5f0:	ldp	x29, x30, [sp], #96
    c5f4:	b	18348 <omp_in_final@@OMP_3.1+0x320>
    c5f8:	mov	x19, x21
    c5fc:	stp	x19, x22, [x6, #16]
    c600:	cmp	w23, #0x2
    c604:	str	x21, [x6, #72]
    c608:	b.ne	c5c8 <omp_is_initial_device@@OMP_4.0+0x9c8>  // b.any
    c60c:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    c610:	ldr	x0, [x0, #4016]
    c614:	mrs	x5, tpidr_el0
    c618:	mul	x20, x22, x20
    c61c:	mov	x1, #0x1                   	// #1
    c620:	add	x5, x5, x0
    c624:	str	x20, [x6, #8]
    c628:	ldr	x0, [x5, #16]
    c62c:	cbz	x0, c634 <omp_is_initial_device@@OMP_4.0+0xa34>
    c630:	ldr	w1, [x0]
    c634:	cmp	x22, #0x0
    c638:	b.le	c668 <omp_is_initial_device@@OMP_4.0+0xa68>
    c63c:	orr	x2, x20, x1
    c640:	mov	x0, #0x7fffffff            	// #2147483647
    c644:	cmp	x2, x0
    c648:	b.hi	c69c <omp_is_initial_device@@OMP_4.0+0xa9c>  // b.pmore
    c64c:	madd	x20, x1, x20, x20
    c650:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    c654:	sub	x20, x0, x20
    c658:	cmp	x19, x20
    c65c:	cset	w0, lt  // lt = tstop
    c660:	str	w0, [x6, #4]
    c664:	b	c5c8 <omp_is_initial_device@@OMP_4.0+0x9c8>
    c668:	neg	x5, x20
    c66c:	mov	x0, #0x7fffffff            	// #2147483647
    c670:	orr	x2, x1, x5
    c674:	cmp	x2, x0
    c678:	b.hi	c69c <omp_is_initial_device@@OMP_4.0+0xa9c>  // b.pmore
    c67c:	madd	x5, x1, x5, x5
    c680:	mov	x0, #0x2                   	// #2
    c684:	movk	x0, #0x8000, lsl #48
    c688:	add	x5, x5, x0
    c68c:	cmp	x19, x5
    c690:	cset	w0, ge  // ge = tcont
    c694:	str	w0, [x6, #4]
    c698:	b	c5c8 <omp_is_initial_device@@OMP_4.0+0x9c8>
    c69c:	str	wzr, [x6, #4]
    c6a0:	b	c5c8 <omp_is_initial_device@@OMP_4.0+0x9c8>
    c6a4:	nop

000000000000c6a8 <GOMP_loop_static_start@@GOMP_1.0>:
    c6a8:	stp	x29, x30, [sp, #-96]!
    c6ac:	mov	x29, sp
    c6b0:	stp	x25, x26, [sp, #64]
    c6b4:	mov	x25, x3
    c6b8:	adrp	x26, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    c6bc:	ldr	x26, [x26, #4016]
    c6c0:	stp	x23, x24, [sp, #48]
    c6c4:	mrs	x24, tpidr_el0
    c6c8:	mov	x23, x5
    c6cc:	str	x27, [sp, #80]
    c6d0:	add	x27, x24, x26
    c6d4:	stp	x19, x20, [sp, #16]
    c6d8:	mov	x20, x0
    c6dc:	mov	x19, x1
    c6e0:	stp	x21, x22, [sp, #32]
    c6e4:	mov	x0, #0x0                   	// #0
    c6e8:	mov	x21, x2
    c6ec:	mov	x22, x4
    c6f0:	str	xzr, [x27, #72]
    c6f4:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    c6f8:	tst	w0, #0xff
    c6fc:	b.eq	c758 <GOMP_loop_static_start@@GOMP_1.0+0xb0>  // b.none
    c700:	ldr	x1, [x27, #24]
    c704:	mov	w0, #0x1                   	// #1
    c708:	cmp	x21, #0x0
    c70c:	ccmp	x20, x19, #0x4, gt
    c710:	str	w0, [x1]
    c714:	str	x25, [x1, #8]
    c718:	b.gt	c788 <GOMP_loop_static_start@@GOMP_1.0+0xe0>
    c71c:	cmp	x21, #0x0
    c720:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    c724:	csel	x19, x19, x20, ge  // ge = tcont
    c728:	add	x24, x24, x26
    c72c:	str	x20, [x1, #72]
    c730:	ldr	x0, [x24, #32]
    c734:	stp	x19, x21, [x1, #16]
    c738:	cbz	x0, c758 <GOMP_loop_static_start@@GOMP_1.0+0xb0>
    c73c:	add	x0, x0, #0x50
    c740:	ldxr	x2, [x0]
    c744:	stlxr	w3, x1, [x0]
    c748:	cbnz	w3, c740 <GOMP_loop_static_start@@GOMP_1.0+0x98>
    c74c:	cmp	x2, #0x1
    c750:	b.eq	c758 <GOMP_loop_static_start@@GOMP_1.0+0xb0>  // b.none
    c754:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    c758:	mov	x1, x23
    c75c:	mov	x0, x22
    c760:	bl	bc08 <omp_is_initial_device@@OMP_4.0+0x8>
    c764:	cmp	w0, #0x0
    c768:	cset	w0, eq  // eq = none
    c76c:	ldp	x19, x20, [sp, #16]
    c770:	ldp	x21, x22, [sp, #32]
    c774:	ldp	x23, x24, [sp, #48]
    c778:	ldp	x25, x26, [sp, #64]
    c77c:	ldr	x27, [sp, #80]
    c780:	ldp	x29, x30, [sp], #96
    c784:	ret
    c788:	mov	x19, x20
    c78c:	b	c728 <GOMP_loop_static_start@@GOMP_1.0+0x80>

000000000000c790 <GOMP_loop_dynamic_start@@GOMP_1.0>:
    c790:	stp	x29, x30, [sp, #-64]!
    c794:	mov	x29, sp
    c798:	stp	x19, x20, [sp, #16]
    c79c:	mov	x19, x1
    c7a0:	mov	x20, x2
    c7a4:	stp	x21, x22, [sp, #32]
    c7a8:	mov	x21, x0
    c7ac:	mov	x22, x5
    c7b0:	mov	x0, #0x0                   	// #0
    c7b4:	stp	x23, x24, [sp, #48]
    c7b8:	mov	x23, x3
    c7bc:	mov	x24, x4
    c7c0:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    c7c4:	tst	w0, #0xff
    c7c8:	b.ne	c7e8 <GOMP_loop_dynamic_start@@GOMP_1.0+0x58>  // b.any
    c7cc:	mov	x1, x22
    c7d0:	mov	x0, x24
    c7d4:	ldp	x19, x20, [sp, #16]
    c7d8:	ldp	x21, x22, [sp, #32]
    c7dc:	ldp	x23, x24, [sp, #48]
    c7e0:	ldp	x29, x30, [sp], #64
    c7e4:	b	be18 <omp_is_initial_device@@OMP_4.0+0x218>
    c7e8:	adrp	x5, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    c7ec:	ldr	x5, [x5, #4016]
    c7f0:	mrs	x3, tpidr_el0
    c7f4:	mov	w4, #0x2                   	// #2
    c7f8:	cmp	x20, #0x0
    c7fc:	add	x2, x3, x5
    c800:	mul	x0, x20, x23
    c804:	ccmp	x21, x19, #0x4, gt
    c808:	ldr	x1, [x2, #24]
    c80c:	ldr	x2, [x2, #16]
    c810:	str	w4, [x1]
    c814:	str	x23, [x1, #8]
    c818:	b.le	c8ac <GOMP_loop_dynamic_start@@GOMP_1.0+0x11c>
    c81c:	stp	x0, x21, [x1, #8]
    c820:	mov	x19, x21
    c824:	mov	x4, #0x1                   	// #1
    c828:	str	x20, [x1, #24]
    c82c:	str	x21, [x1, #72]
    c830:	cbz	x2, c840 <GOMP_loop_dynamic_start@@GOMP_1.0+0xb0>
    c834:	ldr	w4, [x2]
    c838:	cmp	x20, #0x0
    c83c:	b.le	c8d0 <GOMP_loop_dynamic_start@@GOMP_1.0+0x140>
    c840:	orr	x6, x0, x4
    c844:	mov	x2, #0x7fffffff            	// #2147483647
    c848:	cmp	x6, x2
    c84c:	b.hi	c904 <GOMP_loop_dynamic_start@@GOMP_1.0+0x174>  // b.pmore
    c850:	madd	x0, x4, x0, x0
    c854:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    c858:	sub	x0, x2, x0
    c85c:	cmp	x0, x19
    c860:	cset	w0, gt
    c864:	str	w0, [x1, #4]
    c868:	add	x3, x3, x5
    c86c:	ldr	x0, [x3, #32]
    c870:	cbz	x0, c7cc <GOMP_loop_dynamic_start@@GOMP_1.0+0x3c>
    c874:	add	x0, x0, #0x50
    c878:	ldxr	x2, [x0]
    c87c:	stlxr	w3, x1, [x0]
    c880:	cbnz	w3, c878 <GOMP_loop_dynamic_start@@GOMP_1.0+0xe8>
    c884:	cmp	x2, #0x1
    c888:	b.eq	c7cc <GOMP_loop_dynamic_start@@GOMP_1.0+0x3c>  // b.none
    c88c:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    c890:	mov	x1, x22
    c894:	mov	x0, x24
    c898:	ldp	x19, x20, [sp, #16]
    c89c:	ldp	x21, x22, [sp, #32]
    c8a0:	ldp	x23, x24, [sp, #48]
    c8a4:	ldp	x29, x30, [sp], #64
    c8a8:	b	be18 <omp_is_initial_device@@OMP_4.0+0x218>
    c8ac:	cmp	x20, #0x0
    c8b0:	str	x20, [x1, #24]
    c8b4:	ccmp	x21, x19, #0x0, lt  // lt = tstop
    c8b8:	str	x21, [x1, #72]
    c8bc:	csel	x19, x19, x21, ge  // ge = tcont
    c8c0:	stp	x0, x19, [x1, #8]
    c8c4:	mov	x4, #0x1                   	// #1
    c8c8:	cbnz	x2, c834 <GOMP_loop_dynamic_start@@GOMP_1.0+0xa4>
    c8cc:	b	c838 <GOMP_loop_dynamic_start@@GOMP_1.0+0xa8>
    c8d0:	neg	x2, x0
    c8d4:	mov	x0, #0x7fffffff            	// #2147483647
    c8d8:	orr	x6, x4, x2
    c8dc:	cmp	x6, x0
    c8e0:	b.hi	c904 <GOMP_loop_dynamic_start@@GOMP_1.0+0x174>  // b.pmore
    c8e4:	madd	x0, x4, x2, x2
    c8e8:	mov	x2, #0x2                   	// #2
    c8ec:	movk	x2, #0x8000, lsl #48
    c8f0:	add	x0, x0, x2
    c8f4:	cmp	x0, x19
    c8f8:	cset	w0, le
    c8fc:	str	w0, [x1, #4]
    c900:	b	c868 <GOMP_loop_dynamic_start@@GOMP_1.0+0xd8>
    c904:	str	wzr, [x1, #4]
    c908:	b	c868 <GOMP_loop_dynamic_start@@GOMP_1.0+0xd8>
    c90c:	nop

000000000000c910 <GOMP_loop_guided_start@@GOMP_1.0>:
    c910:	stp	x29, x30, [sp, #-64]!
    c914:	mov	x29, sp
    c918:	stp	x19, x20, [sp, #16]
    c91c:	mov	x20, x0
    c920:	mov	x19, x1
    c924:	mov	x0, #0x0                   	// #0
    c928:	stp	x21, x22, [sp, #32]
    c92c:	mov	x21, x2
    c930:	mov	x22, x4
    c934:	stp	x23, x24, [sp, #48]
    c938:	mov	x24, x3
    c93c:	mov	x23, x5
    c940:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    c944:	tst	w0, #0xff
    c948:	b.eq	c9b4 <GOMP_loop_guided_start@@GOMP_1.0+0xa4>  // b.none
    c94c:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    c950:	ldr	x2, [x2, #4016]
    c954:	mrs	x0, tpidr_el0
    c958:	mov	w3, #0x3                   	// #3
    c95c:	cmp	x21, #0x0
    c960:	add	x1, x0, x2
    c964:	ccmp	x20, x19, #0x4, gt
    c968:	ldr	x1, [x1, #24]
    c96c:	str	w3, [x1]
    c970:	str	x24, [x1, #8]
    c974:	b.gt	c9d0 <GOMP_loop_guided_start@@GOMP_1.0+0xc0>
    c978:	cmp	x21, #0x0
    c97c:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    c980:	csel	x19, x19, x20, ge  // ge = tcont
    c984:	add	x0, x0, x2
    c988:	str	x20, [x1, #72]
    c98c:	ldr	x0, [x0, #32]
    c990:	stp	x19, x21, [x1, #16]
    c994:	cbz	x0, c9b4 <GOMP_loop_guided_start@@GOMP_1.0+0xa4>
    c998:	add	x0, x0, #0x50
    c99c:	ldxr	x2, [x0]
    c9a0:	stlxr	w3, x1, [x0]
    c9a4:	cbnz	w3, c99c <GOMP_loop_guided_start@@GOMP_1.0+0x8c>
    c9a8:	cmp	x2, #0x1
    c9ac:	b.eq	c9b4 <GOMP_loop_guided_start@@GOMP_1.0+0xa4>  // b.none
    c9b0:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    c9b4:	mov	x1, x23
    c9b8:	mov	x0, x22
    c9bc:	ldp	x19, x20, [sp, #16]
    c9c0:	ldp	x21, x22, [sp, #32]
    c9c4:	ldp	x23, x24, [sp, #48]
    c9c8:	ldp	x29, x30, [sp], #64
    c9cc:	b	bf90 <omp_is_initial_device@@OMP_4.0+0x390>
    c9d0:	mov	x19, x20
    c9d4:	b	c984 <GOMP_loop_guided_start@@GOMP_1.0+0x74>

000000000000c9d8 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0>:
    c9d8:	adrp	x5, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    c9dc:	ldr	x5, [x5, #4016]
    c9e0:	mrs	x7, tpidr_el0
    c9e4:	adrp	x6, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    c9e8:	add	x6, x6, #0x2b8
    c9ec:	add	x7, x7, x5
    c9f0:	mov	x8, x3
    c9f4:	mov	x5, x4
    c9f8:	ldr	x7, [x7, #80]
    c9fc:	cmp	x7, #0x0
    ca00:	add	x7, x7, #0x90
    ca04:	csel	x6, x6, x7, eq  // eq = none
    ca08:	ldr	w3, [x6, #8]
    ca0c:	and	w7, w3, #0x7fffffff
    ca10:	cmp	w7, #0x3
    ca14:	b.eq	ca5c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x84>  // b.none
    ca18:	tst	w3, #0x7ffffffc
    ca1c:	b.ne	ca34 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x5c>  // b.any
    ca20:	cmp	w7, #0x1
    ca24:	b.ne	ca48 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x70>  // b.any
    ca28:	ldrsw	x3, [x6, #12]
    ca2c:	mov	x4, x8
    ca30:	b	c6a8 <GOMP_loop_static_start@@GOMP_1.0>
    ca34:	cmp	w7, #0x4
    ca38:	b.ne	ca68 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x90>  // b.any
    ca3c:	mov	x4, x8
    ca40:	mov	x3, #0x0                   	// #0
    ca44:	b	c6a8 <GOMP_loop_static_start@@GOMP_1.0>
    ca48:	cmp	w7, #0x2
    ca4c:	b.ne	ca68 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x90>  // b.any
    ca50:	ldrsw	x3, [x6, #12]
    ca54:	mov	x4, x8
    ca58:	b	c790 <GOMP_loop_dynamic_start@@GOMP_1.0>
    ca5c:	ldrsw	x3, [x6, #12]
    ca60:	mov	x4, x8
    ca64:	b	c910 <GOMP_loop_guided_start@@GOMP_1.0>
    ca68:	stp	x29, x30, [sp, #-16]!
    ca6c:	mov	x29, sp
    ca70:	bl	8870 <abort@plt>
    ca74:	nop

000000000000ca78 <GOMP_loop_ordered_static_start@@GOMP_1.0>:
    ca78:	stp	x29, x30, [sp, #-96]!
    ca7c:	mov	x29, sp
    ca80:	stp	x25, x26, [sp, #64]
    ca84:	mov	x26, x3
    ca88:	adrp	x25, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    ca8c:	ldr	x25, [x25, #4016]
    ca90:	stp	x23, x24, [sp, #48]
    ca94:	mrs	x24, tpidr_el0
    ca98:	mov	x23, x5
    ca9c:	str	x27, [sp, #80]
    caa0:	add	x27, x24, x25
    caa4:	stp	x19, x20, [sp, #16]
    caa8:	mov	x20, x0
    caac:	mov	x19, x1
    cab0:	stp	x21, x22, [sp, #32]
    cab4:	mov	x0, #0x1                   	// #1
    cab8:	mov	x21, x2
    cabc:	mov	x22, x4
    cac0:	str	xzr, [x27, #72]
    cac4:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    cac8:	tst	w0, #0xff
    cacc:	b.eq	cb30 <GOMP_loop_ordered_static_start@@GOMP_1.0+0xb8>  // b.none
    cad0:	ldr	x0, [x27, #24]
    cad4:	mov	w1, #0x1                   	// #1
    cad8:	cmp	x21, #0x0
    cadc:	ccmp	x20, x19, #0x4, gt
    cae0:	str	w1, [x0]
    cae4:	str	x26, [x0, #8]
    cae8:	b.gt	cb60 <GOMP_loop_ordered_static_start@@GOMP_1.0+0xe8>
    caec:	cmp	x21, #0x0
    caf0:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    caf4:	csel	x19, x19, x20, ge  // ge = tcont
    caf8:	add	x24, x24, x25
    cafc:	stp	x19, x21, [x0, #16]
    cb00:	str	x20, [x0, #72]
    cb04:	bl	fdd0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2a8>
    cb08:	ldr	x0, [x24, #32]
    cb0c:	cbz	x0, cb30 <GOMP_loop_ordered_static_start@@GOMP_1.0+0xb8>
    cb10:	ldr	x2, [x24, #24]
    cb14:	add	x0, x0, #0x50
    cb18:	ldxr	x1, [x0]
    cb1c:	stlxr	w3, x2, [x0]
    cb20:	cbnz	w3, cb18 <GOMP_loop_ordered_static_start@@GOMP_1.0+0xa0>
    cb24:	cmp	x1, #0x1
    cb28:	b.eq	cb30 <GOMP_loop_ordered_static_start@@GOMP_1.0+0xb8>  // b.none
    cb2c:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    cb30:	mov	x1, x23
    cb34:	mov	x0, x22
    cb38:	bl	bc08 <omp_is_initial_device@@OMP_4.0+0x8>
    cb3c:	cmp	w0, #0x0
    cb40:	cset	w0, eq  // eq = none
    cb44:	ldp	x19, x20, [sp, #16]
    cb48:	ldp	x21, x22, [sp, #32]
    cb4c:	ldp	x23, x24, [sp, #48]
    cb50:	ldp	x25, x26, [sp, #64]
    cb54:	ldr	x27, [sp, #80]
    cb58:	ldp	x29, x30, [sp], #96
    cb5c:	ret
    cb60:	mov	x19, x20
    cb64:	b	caf8 <GOMP_loop_ordered_static_start@@GOMP_1.0+0x80>

000000000000cb68 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0>:
    cb68:	stp	x29, x30, [sp, #-80]!
    cb6c:	mov	x29, sp
    cb70:	stp	x19, x20, [sp, #16]
    cb74:	mov	x20, x1
    cb78:	adrp	x19, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    cb7c:	ldr	x19, [x19, #4016]
    cb80:	stp	x21, x22, [sp, #32]
    cb84:	mov	x22, x0
    cb88:	mov	x21, x2
    cb8c:	mov	x0, #0x1                   	// #1
    cb90:	stp	x23, x24, [sp, #48]
    cb94:	mov	x23, x3
    cb98:	mov	x24, x4
    cb9c:	stp	x25, x26, [sp, #64]
    cba0:	mov	x25, x5
    cba4:	mrs	x26, tpidr_el0
    cba8:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    cbac:	tst	w0, #0xff
    cbb0:	b.ne	cc2c <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0xc4>  // b.any
    cbb4:	add	x0, x26, x19
    cbb8:	mov	w2, #0x1                   	// #1
    cbbc:	ldr	x0, [x0, #24]
    cbc0:	add	x0, x0, #0x40
    cbc4:	ldaxr	w1, [x0]
    cbc8:	cbnz	w1, cbd4 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x6c>
    cbcc:	stxr	w3, w2, [x0]
    cbd0:	cbnz	w3, cbc4 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x5c>
    cbd4:	cmp	w1, #0x0
    cbd8:	b.ne	cd94 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x22c>  // b.any
    cbdc:	mov	x1, x25
    cbe0:	mov	x0, x24
    cbe4:	bl	bd98 <omp_is_initial_device@@OMP_4.0+0x198>
    cbe8:	mov	w20, w0
    cbec:	tst	w0, #0xff
    cbf0:	b.ne	cd08 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x1a0>  // b.any
    cbf4:	add	x19, x26, x19
    cbf8:	ldr	x1, [x19, #24]
    cbfc:	add	x1, x1, #0x40
    cc00:	ldxr	w0, [x1]
    cc04:	stlxr	w2, wzr, [x1]
    cc08:	cbnz	w2, cc00 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x98>
    cc0c:	tbnz	w0, #31, cd34 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x1cc>
    cc10:	mov	w0, w20
    cc14:	ldp	x19, x20, [sp, #16]
    cc18:	ldp	x21, x22, [sp, #32]
    cc1c:	ldp	x23, x24, [sp, #48]
    cc20:	ldp	x25, x26, [sp, #64]
    cc24:	ldp	x29, x30, [sp], #80
    cc28:	ret
    cc2c:	add	x2, x26, x19
    cc30:	mov	w3, #0x2                   	// #2
    cc34:	cmp	x21, #0x0
    cc38:	mul	x1, x21, x23
    cc3c:	ccmp	x22, x20, #0x4, gt
    cc40:	ldr	x0, [x2, #24]
    cc44:	ldr	x2, [x2, #16]
    cc48:	str	w3, [x0]
    cc4c:	str	x23, [x0, #8]
    cc50:	b.le	cd10 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x1a8>
    cc54:	stp	x1, x22, [x0, #8]
    cc58:	mov	x20, x22
    cc5c:	mov	x3, #0x1                   	// #1
    cc60:	str	x21, [x0, #24]
    cc64:	str	x22, [x0, #72]
    cc68:	cbz	x2, cc78 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x110>
    cc6c:	ldr	w3, [x2]
    cc70:	cmp	x21, #0x0
    cc74:	b.le	cd58 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x1f0>
    cc78:	orr	x4, x1, x3
    cc7c:	mov	x2, #0x7fffffff            	// #2147483647
    cc80:	cmp	x4, x2
    cc84:	b.hi	cd8c <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x224>  // b.pmore
    cc88:	madd	x1, x3, x1, x1
    cc8c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    cc90:	sub	x1, x2, x1
    cc94:	cmp	x1, x20
    cc98:	cset	w1, gt
    cc9c:	str	w1, [x0, #4]
    cca0:	add	x0, x0, #0x40
    cca4:	mov	w2, #0x1                   	// #1
    cca8:	ldaxr	w1, [x0]
    ccac:	cbnz	w1, ccb8 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x150>
    ccb0:	stxr	w3, w2, [x0]
    ccb4:	cbnz	w3, cca8 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x140>
    ccb8:	cmp	w1, #0x0
    ccbc:	b.ne	cd9c <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x234>  // b.any
    ccc0:	add	x1, x26, x19
    ccc4:	ldr	x0, [x1, #32]
    ccc8:	cbz	x0, cbdc <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x74>
    cccc:	ldr	x2, [x1, #24]
    ccd0:	add	x0, x0, #0x50
    ccd4:	ldxr	x1, [x0]
    ccd8:	stlxr	w3, x2, [x0]
    ccdc:	cbnz	w3, ccd4 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x16c>
    cce0:	cmp	x1, #0x1
    cce4:	b.eq	cbdc <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x74>  // b.none
    cce8:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    ccec:	mov	x1, x25
    ccf0:	mov	x0, x24
    ccf4:	bl	bd98 <omp_is_initial_device@@OMP_4.0+0x198>
    ccf8:	mov	w20, w0
    ccfc:	tst	w0, #0xff
    cd00:	b.eq	cbf4 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x8c>  // b.none
    cd04:	nop
    cd08:	bl	fb90 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x68>
    cd0c:	b	cbf4 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x8c>
    cd10:	cmp	x21, #0x0
    cd14:	str	x21, [x0, #24]
    cd18:	ccmp	x22, x20, #0x0, lt  // lt = tstop
    cd1c:	str	x22, [x0, #72]
    cd20:	csel	x20, x20, x22, ge  // ge = tcont
    cd24:	stp	x1, x20, [x0, #8]
    cd28:	mov	x3, #0x1                   	// #1
    cd2c:	cbnz	x2, cc6c <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x104>
    cd30:	b	cc70 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x108>
    cd34:	mov	x0, x1
    cd38:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
    cd3c:	mov	w0, w20
    cd40:	ldp	x19, x20, [sp, #16]
    cd44:	ldp	x21, x22, [sp, #32]
    cd48:	ldp	x23, x24, [sp, #48]
    cd4c:	ldp	x25, x26, [sp, #64]
    cd50:	ldp	x29, x30, [sp], #80
    cd54:	ret
    cd58:	neg	x2, x1
    cd5c:	mov	x1, #0x7fffffff            	// #2147483647
    cd60:	orr	x4, x3, x2
    cd64:	cmp	x4, x1
    cd68:	b.hi	cd8c <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x224>  // b.pmore
    cd6c:	madd	x1, x3, x2, x2
    cd70:	mov	x2, #0x2                   	// #2
    cd74:	movk	x2, #0x8000, lsl #48
    cd78:	add	x1, x1, x2
    cd7c:	cmp	x1, x20
    cd80:	cset	w1, le
    cd84:	str	w1, [x0, #4]
    cd88:	b	cca0 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x138>
    cd8c:	str	wzr, [x0, #4]
    cd90:	b	cca0 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x138>
    cd94:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    cd98:	b	cbdc <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x74>
    cd9c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    cda0:	b	ccc0 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x158>
    cda4:	nop

000000000000cda8 <GOMP_loop_ordered_guided_start@@GOMP_1.0>:
    cda8:	stp	x29, x30, [sp, #-80]!
    cdac:	mov	x29, sp
    cdb0:	stp	x19, x20, [sp, #16]
    cdb4:	mov	x20, x1
    cdb8:	mrs	x19, tpidr_el0
    cdbc:	stp	x21, x22, [sp, #32]
    cdc0:	mov	x21, x0
    cdc4:	mov	x22, x2
    cdc8:	mov	x0, #0x1                   	// #1
    cdcc:	stp	x23, x24, [sp, #48]
    cdd0:	mov	x23, x4
    cdd4:	mov	x24, x5
    cdd8:	stp	x25, x26, [sp, #64]
    cddc:	mov	x26, x3
    cde0:	adrp	x25, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    cde4:	ldr	x25, [x25, #4016]
    cde8:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    cdec:	tst	w0, #0xff
    cdf0:	b.eq	ce94 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xec>  // b.none
    cdf4:	add	x1, x19, x25
    cdf8:	mov	w0, #0x3                   	// #3
    cdfc:	cmp	x22, #0x0
    ce00:	ccmp	x21, x20, #0x4, gt
    ce04:	ldr	x1, [x1, #24]
    ce08:	str	w0, [x1]
    ce0c:	str	x26, [x1, #8]
    ce10:	b.gt	cf0c <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x164>
    ce14:	cmp	x22, #0x0
    ce18:	ccmp	x21, x20, #0x0, lt  // lt = tstop
    ce1c:	csel	x20, x20, x21, ge  // ge = tcont
    ce20:	add	x0, x1, #0x40
    ce24:	mov	w2, #0x1                   	// #1
    ce28:	stp	x20, x22, [x1, #16]
    ce2c:	str	x21, [x1, #72]
    ce30:	ldaxr	w1, [x0]
    ce34:	cbnz	w1, ce40 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x98>
    ce38:	stxr	w3, w2, [x0]
    ce3c:	cbnz	w3, ce30 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x88>
    ce40:	cmp	w1, #0x0
    ce44:	b.ne	cf40 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x198>  // b.any
    ce48:	add	x1, x19, x25
    ce4c:	ldr	x0, [x1, #32]
    ce50:	cbz	x0, cebc <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x114>
    ce54:	ldr	x2, [x1, #24]
    ce58:	add	x0, x0, #0x50
    ce5c:	ldxr	x1, [x0]
    ce60:	stlxr	w3, x2, [x0]
    ce64:	cbnz	w3, ce5c <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xb4>
    ce68:	cmp	x1, #0x1
    ce6c:	b.eq	cebc <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x114>  // b.none
    ce70:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    ce74:	mov	x1, x24
    ce78:	mov	x0, x23
    ce7c:	bl	bf10 <omp_is_initial_device@@OMP_4.0+0x310>
    ce80:	mov	w20, w0
    ce84:	tst	w0, #0xff
    ce88:	b.eq	ced4 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x12c>  // b.none
    ce8c:	bl	fb90 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x68>
    ce90:	b	ced4 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x12c>
    ce94:	add	x0, x19, x25
    ce98:	mov	w2, #0x1                   	// #1
    ce9c:	ldr	x0, [x0, #24]
    cea0:	add	x0, x0, #0x40
    cea4:	ldaxr	w1, [x0]
    cea8:	cbnz	w1, ceb4 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x10c>
    ceac:	stxr	w3, w2, [x0]
    ceb0:	cbnz	w3, cea4 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xfc>
    ceb4:	cmp	w1, #0x0
    ceb8:	b.ne	cf38 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x190>  // b.any
    cebc:	mov	x1, x24
    cec0:	mov	x0, x23
    cec4:	bl	bf10 <omp_is_initial_device@@OMP_4.0+0x310>
    cec8:	mov	w20, w0
    cecc:	tst	w0, #0xff
    ced0:	b.ne	ce8c <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xe4>  // b.any
    ced4:	add	x19, x19, x25
    ced8:	ldr	x1, [x19, #24]
    cedc:	add	x1, x1, #0x40
    cee0:	ldxr	w0, [x1]
    cee4:	stlxr	w2, wzr, [x1]
    cee8:	cbnz	w2, cee0 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x138>
    ceec:	tbnz	w0, #31, cf14 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x16c>
    cef0:	mov	w0, w20
    cef4:	ldp	x19, x20, [sp, #16]
    cef8:	ldp	x21, x22, [sp, #32]
    cefc:	ldp	x23, x24, [sp, #48]
    cf00:	ldp	x25, x26, [sp, #64]
    cf04:	ldp	x29, x30, [sp], #80
    cf08:	ret
    cf0c:	mov	x20, x21
    cf10:	b	ce20 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x78>
    cf14:	mov	x0, x1
    cf18:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
    cf1c:	mov	w0, w20
    cf20:	ldp	x19, x20, [sp, #16]
    cf24:	ldp	x21, x22, [sp, #32]
    cf28:	ldp	x23, x24, [sp, #48]
    cf2c:	ldp	x25, x26, [sp, #64]
    cf30:	ldp	x29, x30, [sp], #80
    cf34:	ret
    cf38:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    cf3c:	b	cebc <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x114>
    cf40:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    cf44:	b	ce48 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xa0>

000000000000cf48 <GOMP_loop_ordered_runtime_start@@GOMP_1.0>:
    cf48:	adrp	x5, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    cf4c:	ldr	x5, [x5, #4016]
    cf50:	mrs	x7, tpidr_el0
    cf54:	adrp	x6, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    cf58:	add	x6, x6, #0x2b8
    cf5c:	add	x7, x7, x5
    cf60:	mov	x8, x3
    cf64:	mov	x5, x4
    cf68:	ldr	x7, [x7, #80]
    cf6c:	cmp	x7, #0x0
    cf70:	add	x7, x7, #0x90
    cf74:	csel	x6, x6, x7, eq  // eq = none
    cf78:	ldr	w3, [x6, #8]
    cf7c:	and	w7, w3, #0x7fffffff
    cf80:	cmp	w7, #0x3
    cf84:	b.eq	cfcc <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x84>  // b.none
    cf88:	tst	w3, #0x7ffffffc
    cf8c:	b.ne	cfa4 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x5c>  // b.any
    cf90:	cmp	w7, #0x1
    cf94:	b.ne	cfb8 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x70>  // b.any
    cf98:	ldrsw	x3, [x6, #12]
    cf9c:	mov	x4, x8
    cfa0:	b	ca78 <GOMP_loop_ordered_static_start@@GOMP_1.0>
    cfa4:	cmp	w7, #0x4
    cfa8:	b.ne	cfd8 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x90>  // b.any
    cfac:	mov	x4, x8
    cfb0:	mov	x3, #0x0                   	// #0
    cfb4:	b	ca78 <GOMP_loop_ordered_static_start@@GOMP_1.0>
    cfb8:	cmp	w7, #0x2
    cfbc:	b.ne	cfd8 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x90>  // b.any
    cfc0:	ldrsw	x3, [x6, #12]
    cfc4:	mov	x4, x8
    cfc8:	b	cb68 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0>
    cfcc:	ldrsw	x3, [x6, #12]
    cfd0:	mov	x4, x8
    cfd4:	b	cda8 <GOMP_loop_ordered_guided_start@@GOMP_1.0>
    cfd8:	stp	x29, x30, [sp, #-16]!
    cfdc:	mov	x29, sp
    cfe0:	bl	8870 <abort@plt>
    cfe4:	nop

000000000000cfe8 <GOMP_loop_ordered_start@@GOMP_5.0>:
    cfe8:	stp	x29, x30, [sp, #-112]!
    cfec:	mov	x29, sp
    cff0:	stp	x19, x20, [sp, #16]
    cff4:	mov	x20, x3
    cff8:	adrp	x19, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    cffc:	ldr	x19, [x19, #4016]
    d000:	stp	x21, x22, [sp, #32]
    d004:	mrs	x21, tpidr_el0
    d008:	mov	x22, x7
    d00c:	str	x4, [sp, #104]
    d010:	add	x4, x21, x19
    d014:	stp	x23, x24, [sp, #48]
    d018:	mov	x24, x5
    d01c:	stp	x25, x26, [sp, #64]
    d020:	mov	x26, x1
    d024:	mov	x25, x6
    d028:	stp	x27, x28, [sp, #80]
    d02c:	mov	x27, x0
    d030:	mov	x28, x2
    d034:	str	xzr, [x4, #72]
    d038:	ldr	x23, [sp, #112]
    d03c:	cbz	x7, d044 <GOMP_loop_ordered_start@@GOMP_5.0+0x5c>
    d040:	bl	17f28 <GOMP_task_reduction_remap@@GOMP_5.0+0x470>
    d044:	mov	x0, #0x1                   	// #1
    d048:	cbz	x23, d054 <GOMP_loop_ordered_start@@GOMP_5.0+0x6c>
    d04c:	ldr	x0, [x23]
    d050:	add	x0, x0, #0x1
    d054:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    d058:	tst	w0, #0xff
    d05c:	b.ne	d1c4 <GOMP_loop_ordered_start@@GOMP_5.0+0x1dc>  // b.any
    d060:	add	x20, x21, x19
    d064:	ldr	x1, [x20, #24]
    d068:	cbz	x22, d07c <GOMP_loop_ordered_start@@GOMP_5.0+0x94>
    d06c:	ldr	x1, [x1, #88]
    d070:	mov	x0, x22
    d074:	bl	17d50 <GOMP_task_reduction_remap@@GOMP_5.0+0x298>
    d078:	ldr	x1, [x20, #24]
    d07c:	ldr	w20, [x1]
    d080:	cmp	x20, #0x1
    d084:	b.eq	d144 <GOMP_loop_ordered_start@@GOMP_5.0+0x15c>  // b.none
    d088:	add	x0, x1, #0x40
    d08c:	mov	w2, #0x1                   	// #1
    d090:	ldaxr	w1, [x0]
    d094:	cbnz	w1, d0a0 <GOMP_loop_ordered_start@@GOMP_5.0+0xb8>
    d098:	stxr	w3, w2, [x0]
    d09c:	cbnz	w3, d090 <GOMP_loop_ordered_start@@GOMP_5.0+0xa8>
    d0a0:	cmp	w1, #0x0
    d0a4:	b.ne	d314 <GOMP_loop_ordered_start@@GOMP_5.0+0x32c>  // b.any
    d0a8:	cbz	x23, d0e0 <GOMP_loop_ordered_start@@GOMP_5.0+0xf8>
    d0ac:	add	x0, x21, x19
    d0b0:	ldr	x1, [x0, #24]
    d0b4:	add	x3, x21, x19
    d0b8:	ldr	x0, [x1, #32]
    d0bc:	mov	x2, #0x4                   	// #4
    d0c0:	ldr	x1, [x3, #16]
    d0c4:	cbz	x1, d0d0 <GOMP_loop_ordered_start@@GOMP_5.0+0xe8>
    d0c8:	ldr	w2, [x1]
    d0cc:	lsl	x2, x2, #2
    d0d0:	add	x0, x0, x2
    d0d4:	add	x0, x0, #0x7
    d0d8:	and	x0, x0, #0xfffffffffffffff8
    d0dc:	str	x0, [x23]
    d0e0:	cmp	x20, #0x2
    d0e4:	b.eq	d1a8 <GOMP_loop_ordered_start@@GOMP_5.0+0x1c0>  // b.none
    d0e8:	b.le	d188 <GOMP_loop_ordered_start@@GOMP_5.0+0x1a0>
    d0ec:	cmp	x20, #0x3
    d0f0:	b.ne	d17c <GOMP_loop_ordered_start@@GOMP_5.0+0x194>  // b.any
    d0f4:	mov	x1, x25
    d0f8:	mov	x0, x24
    d0fc:	bl	bf10 <omp_is_initial_device@@OMP_4.0+0x310>
    d100:	and	w20, w0, #0xff
    d104:	cbnz	w20, d1bc <GOMP_loop_ordered_start@@GOMP_5.0+0x1d4>
    d108:	add	x19, x21, x19
    d10c:	ldr	x0, [x19, #24]
    d110:	add	x0, x0, #0x40
    d114:	ldxr	w1, [x0]
    d118:	stlxr	w2, wzr, [x0]
    d11c:	cbnz	w2, d114 <GOMP_loop_ordered_start@@GOMP_5.0+0x12c>
    d120:	tbnz	w1, #31, d30c <GOMP_loop_ordered_start@@GOMP_5.0+0x324>
    d124:	mov	w0, w20
    d128:	ldp	x19, x20, [sp, #16]
    d12c:	ldp	x21, x22, [sp, #32]
    d130:	ldp	x23, x24, [sp, #48]
    d134:	ldp	x25, x26, [sp, #64]
    d138:	ldp	x27, x28, [sp, #80]
    d13c:	ldp	x29, x30, [sp], #112
    d140:	ret
    d144:	cbnz	x23, d0b4 <GOMP_loop_ordered_start@@GOMP_5.0+0xcc>
    d148:	mov	x1, x25
    d14c:	mov	x0, x24
    d150:	bl	bc08 <omp_is_initial_device@@OMP_4.0+0x8>
    d154:	cmp	w0, #0x0
    d158:	cset	w20, eq  // eq = none
    d15c:	mov	w0, w20
    d160:	ldp	x19, x20, [sp, #16]
    d164:	ldp	x21, x22, [sp, #32]
    d168:	ldp	x23, x24, [sp, #48]
    d16c:	ldp	x25, x26, [sp, #64]
    d170:	ldp	x27, x28, [sp, #80]
    d174:	ldp	x29, x30, [sp], #112
    d178:	ret
    d17c:	cmp	x20, #0x4
    d180:	b.eq	d148 <GOMP_loop_ordered_start@@GOMP_5.0+0x160>  // b.none
    d184:	bl	8870 <abort@plt>
    d188:	cmp	x20, #0x1
    d18c:	b.ne	d184 <GOMP_loop_ordered_start@@GOMP_5.0+0x19c>  // b.any
    d190:	mov	x1, x25
    d194:	mov	x0, x24
    d198:	bl	bc08 <omp_is_initial_device@@OMP_4.0+0x8>
    d19c:	cmp	w0, #0x0
    d1a0:	cset	w20, eq  // eq = none
    d1a4:	b	d15c <GOMP_loop_ordered_start@@GOMP_5.0+0x174>
    d1a8:	mov	x1, x25
    d1ac:	mov	x0, x24
    d1b0:	bl	bd98 <omp_is_initial_device@@OMP_4.0+0x198>
    d1b4:	and	w20, w0, #0xff
    d1b8:	cbz	w20, d108 <GOMP_loop_ordered_start@@GOMP_5.0+0x120>
    d1bc:	bl	fb90 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x68>
    d1c0:	b	d108 <GOMP_loop_ordered_start@@GOMP_5.0+0x120>
    d1c4:	mov	x0, x20
    d1c8:	add	x1, sp, #0x68
    d1cc:	bl	c4b8 <omp_is_initial_device@@OMP_4.0+0x8b8>
    d1d0:	mov	x20, x0
    d1d4:	add	x2, x21, x19
    d1d8:	cmp	x28, #0x0
    d1dc:	ldr	x1, [sp, #104]
    d1e0:	ccmp	x27, x26, #0x4, gt
    d1e4:	ldr	x0, [x2, #24]
    d1e8:	mov	w2, w20
    d1ec:	str	w20, [x0]
    d1f0:	str	x1, [x0, #8]
    d1f4:	b.gt	d29c <GOMP_loop_ordered_start@@GOMP_5.0+0x2b4>
    d1f8:	cmp	x28, #0x0
    d1fc:	str	x27, [x0, #72]
    d200:	ccmp	x27, x26, #0x0, lt  // lt = tstop
    d204:	csel	x26, x26, x27, ge  // ge = tcont
    d208:	stp	x26, x28, [x0, #16]
    d20c:	cmp	w2, #0x2
    d210:	b.eq	d2b0 <GOMP_loop_ordered_start@@GOMP_5.0+0x2c8>  // b.none
    d214:	cbz	x22, d23c <GOMP_loop_ordered_start@@GOMP_5.0+0x254>
    d218:	mov	x0, x22
    d21c:	bl	15d78 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    d220:	add	x0, x21, x19
    d224:	mov	w2, #0x1                   	// #1
    d228:	ldr	x1, [x0, #80]
    d22c:	ldr	x0, [x0, #24]
    d230:	ldr	x1, [x1, #40]
    d234:	strb	w2, [x1, #50]
    d238:	str	x22, [x0, #88]
    d23c:	cmp	x20, #0x1
    d240:	b.eq	d304 <GOMP_loop_ordered_start@@GOMP_5.0+0x31c>  // b.none
    d244:	add	x0, x21, x19
    d248:	ldr	x0, [x0, #24]
    d24c:	add	x0, x0, #0x40
    d250:	mov	w2, #0x1                   	// #1
    d254:	ldaxr	w1, [x0]
    d258:	cbnz	w1, d264 <GOMP_loop_ordered_start@@GOMP_5.0+0x27c>
    d25c:	stxr	w3, w2, [x0]
    d260:	cbnz	w3, d254 <GOMP_loop_ordered_start@@GOMP_5.0+0x26c>
    d264:	cmp	w1, #0x0
    d268:	b.ne	d360 <GOMP_loop_ordered_start@@GOMP_5.0+0x378>  // b.any
    d26c:	add	x1, x21, x19
    d270:	ldr	x0, [x1, #32]
    d274:	cbz	x0, d0a8 <GOMP_loop_ordered_start@@GOMP_5.0+0xc0>
    d278:	ldr	x2, [x1, #24]
    d27c:	add	x0, x0, #0x50
    d280:	ldxr	x1, [x0]
    d284:	stlxr	w3, x2, [x0]
    d288:	cbnz	w3, d280 <GOMP_loop_ordered_start@@GOMP_5.0+0x298>
    d28c:	cmp	x1, #0x1
    d290:	b.eq	d0a8 <GOMP_loop_ordered_start@@GOMP_5.0+0xc0>  // b.none
    d294:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    d298:	b	d0a8 <GOMP_loop_ordered_start@@GOMP_5.0+0xc0>
    d29c:	mov	x26, x27
    d2a0:	stp	x26, x28, [x0, #16]
    d2a4:	cmp	w2, #0x2
    d2a8:	str	x27, [x0, #72]
    d2ac:	b.ne	d214 <GOMP_loop_ordered_start@@GOMP_5.0+0x22c>  // b.any
    d2b0:	add	x2, x21, x19
    d2b4:	mul	x1, x1, x28
    d2b8:	mov	x3, #0x1                   	// #1
    d2bc:	ldr	x2, [x2, #16]
    d2c0:	str	x1, [x0, #8]
    d2c4:	cbz	x2, d2cc <GOMP_loop_ordered_start@@GOMP_5.0+0x2e4>
    d2c8:	ldr	w3, [x2]
    d2cc:	cmp	x28, #0x0
    d2d0:	b.le	d328 <GOMP_loop_ordered_start@@GOMP_5.0+0x340>
    d2d4:	orr	x4, x1, x3
    d2d8:	mov	x2, #0x7fffffff            	// #2147483647
    d2dc:	cmp	x4, x2
    d2e0:	b.hi	d31c <GOMP_loop_ordered_start@@GOMP_5.0+0x334>  // b.pmore
    d2e4:	madd	x1, x3, x1, x1
    d2e8:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    d2ec:	sub	x1, x2, x1
    d2f0:	cmp	x26, x1
    d2f4:	cset	w1, lt  // lt = tstop
    d2f8:	str	w1, [x0, #4]
    d2fc:	cbnz	x22, d218 <GOMP_loop_ordered_start@@GOMP_5.0+0x230>
    d300:	b	d24c <GOMP_loop_ordered_start@@GOMP_5.0+0x264>
    d304:	bl	fdd0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2a8>
    d308:	b	d26c <GOMP_loop_ordered_start@@GOMP_5.0+0x284>
    d30c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
    d310:	b	d124 <GOMP_loop_ordered_start@@GOMP_5.0+0x13c>
    d314:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    d318:	b	d0a8 <GOMP_loop_ordered_start@@GOMP_5.0+0xc0>
    d31c:	str	wzr, [x0, #4]
    d320:	cbnz	x22, d218 <GOMP_loop_ordered_start@@GOMP_5.0+0x230>
    d324:	b	d24c <GOMP_loop_ordered_start@@GOMP_5.0+0x264>
    d328:	neg	x2, x1
    d32c:	mov	x1, #0x7fffffff            	// #2147483647
    d330:	orr	x4, x3, x2
    d334:	cmp	x4, x1
    d338:	b.hi	d31c <GOMP_loop_ordered_start@@GOMP_5.0+0x334>  // b.pmore
    d33c:	madd	x1, x3, x2, x2
    d340:	mov	x2, #0x2                   	// #2
    d344:	movk	x2, #0x8000, lsl #48
    d348:	add	x1, x1, x2
    d34c:	cmp	x26, x1
    d350:	cset	w1, ge  // ge = tcont
    d354:	str	w1, [x0, #4]
    d358:	cbnz	x22, d218 <GOMP_loop_ordered_start@@GOMP_5.0+0x230>
    d35c:	b	d24c <GOMP_loop_ordered_start@@GOMP_5.0+0x264>
    d360:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    d364:	b	d26c <GOMP_loop_ordered_start@@GOMP_5.0+0x284>

000000000000d368 <GOMP_loop_doacross_static_start@@GOMP_4.5>:
    d368:	stp	x29, x30, [sp, #-64]!
    d36c:	mrs	x5, tpidr_el0
    d370:	mov	x29, sp
    d374:	stp	x19, x20, [sp, #16]
    d378:	mov	x20, x3
    d37c:	adrp	x19, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    d380:	ldr	x19, [x19, #4016]
    d384:	stp	x21, x22, [sp, #32]
    d388:	mov	x22, x1
    d38c:	add	x19, x5, x19
    d390:	stp	x23, x24, [sp, #48]
    d394:	mov	x21, x4
    d398:	mov	w23, w0
    d39c:	mov	x24, x2
    d3a0:	mov	x0, #0x0                   	// #0
    d3a4:	str	xzr, [x19, #72]
    d3a8:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    d3ac:	tst	w0, #0xff
    d3b0:	b.ne	d3dc <GOMP_loop_doacross_static_start@@GOMP_4.5+0x74>  // b.any
    d3b4:	mov	x1, x21
    d3b8:	mov	x0, x20
    d3bc:	bl	bc08 <omp_is_initial_device@@OMP_4.0+0x8>
    d3c0:	cmp	w0, #0x0
    d3c4:	cset	w0, eq  // eq = none
    d3c8:	ldp	x19, x20, [sp, #16]
    d3cc:	ldp	x21, x22, [sp, #32]
    d3d0:	ldp	x23, x24, [sp, #48]
    d3d4:	ldp	x29, x30, [sp], #64
    d3d8:	ret
    d3dc:	ldr	x0, [x22]
    d3e0:	mov	w2, #0x1                   	// #1
    d3e4:	ldr	x4, [x19, #24]
    d3e8:	cmp	x0, #0x0
    d3ec:	csel	x5, x0, xzr, ge  // ge = tcont
    d3f0:	mov	x6, #0x1                   	// #1
    d3f4:	mov	w0, w23
    d3f8:	mov	x1, x22
    d3fc:	str	w2, [x4]
    d400:	mov	x3, #0x0                   	// #0
    d404:	stp	x24, x5, [x4, #8]
    d408:	mov	x2, x24
    d40c:	str	x6, [x4, #24]
    d410:	str	xzr, [x4, #72]
    d414:	bl	ff88 <GOMP_ordered_end@@GOMP_1.0+0x8>
    d418:	ldr	x0, [x19, #32]
    d41c:	cbz	x0, d3b4 <GOMP_loop_doacross_static_start@@GOMP_4.5+0x4c>
    d420:	ldr	x2, [x19, #24]
    d424:	add	x0, x0, #0x50
    d428:	ldxr	x1, [x0]
    d42c:	stlxr	w3, x2, [x0]
    d430:	cbnz	w3, d428 <GOMP_loop_doacross_static_start@@GOMP_4.5+0xc0>
    d434:	cmp	x1, #0x1
    d438:	b.eq	d3b4 <GOMP_loop_doacross_static_start@@GOMP_4.5+0x4c>  // b.none
    d43c:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    d440:	b	d3b4 <GOMP_loop_doacross_static_start@@GOMP_4.5+0x4c>
    d444:	nop

000000000000d448 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5>:
    d448:	stp	x29, x30, [sp, #-80]!
    d44c:	mov	x29, sp
    d450:	stp	x19, x20, [sp, #16]
    d454:	mov	x19, x2
    d458:	mov	x20, x3
    d45c:	stp	x21, x22, [sp, #32]
    d460:	mov	x22, x1
    d464:	mov	x21, x4
    d468:	stp	x23, x24, [sp, #48]
    d46c:	mov	w23, w0
    d470:	mov	x0, #0x0                   	// #0
    d474:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    d478:	tst	w0, #0xff
    d47c:	b.ne	d49c <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x54>  // b.any
    d480:	mov	x1, x21
    d484:	mov	x0, x20
    d488:	ldp	x19, x20, [sp, #16]
    d48c:	ldp	x21, x22, [sp, #32]
    d490:	ldp	x23, x24, [sp, #48]
    d494:	ldp	x29, x30, [sp], #80
    d498:	b	be18 <omp_is_initial_device@@OMP_4.0+0x218>
    d49c:	ldr	x0, [x22]
    d4a0:	str	x25, [sp, #64]
    d4a4:	adrp	x25, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    d4a8:	ldr	x25, [x25, #4016]
    d4ac:	mrs	x24, tpidr_el0
    d4b0:	cmp	x0, #0x0
    d4b4:	mov	x3, #0x1                   	// #1
    d4b8:	add	x4, x24, x25
    d4bc:	csel	x0, x0, xzr, ge  // ge = tcont
    d4c0:	mov	w5, #0x2                   	// #2
    d4c4:	mov	x2, x3
    d4c8:	ldr	x1, [x4, #24]
    d4cc:	ldr	x4, [x4, #16]
    d4d0:	str	w5, [x1]
    d4d4:	stp	x19, x0, [x1, #8]
    d4d8:	str	x3, [x1, #24]
    d4dc:	str	xzr, [x1, #72]
    d4e0:	cbz	x4, d4e8 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0xa0>
    d4e4:	ldr	w2, [x4]
    d4e8:	orr	x4, x19, x2
    d4ec:	mov	x3, #0x7fffffff            	// #2147483647
    d4f0:	cmp	x4, x3
    d4f4:	b.hi	d590 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x148>  // b.pmore
    d4f8:	madd	x2, x2, x19, x19
    d4fc:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
    d500:	sub	x2, x3, x2
    d504:	cmp	x2, x0
    d508:	cset	w0, gt
    d50c:	add	x24, x24, x25
    d510:	str	w0, [x1, #4]
    d514:	mov	x2, x19
    d518:	mov	w0, w23
    d51c:	mov	x1, x22
    d520:	mov	x3, #0x0                   	// #0
    d524:	bl	ff88 <GOMP_ordered_end@@GOMP_1.0+0x8>
    d528:	ldr	x0, [x24, #32]
    d52c:	cbz	x0, d570 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x128>
    d530:	ldr	x2, [x24, #24]
    d534:	add	x0, x0, #0x50
    d538:	ldxr	x1, [x0]
    d53c:	stlxr	w3, x2, [x0]
    d540:	cbnz	w3, d538 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0xf0>
    d544:	cmp	x1, #0x1
    d548:	b.eq	d570 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x128>  // b.none
    d54c:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    d550:	mov	x1, x21
    d554:	mov	x0, x20
    d558:	ldp	x19, x20, [sp, #16]
    d55c:	ldp	x21, x22, [sp, #32]
    d560:	ldp	x23, x24, [sp, #48]
    d564:	ldr	x25, [sp, #64]
    d568:	ldp	x29, x30, [sp], #80
    d56c:	b	be18 <omp_is_initial_device@@OMP_4.0+0x218>
    d570:	mov	x1, x21
    d574:	mov	x0, x20
    d578:	ldp	x19, x20, [sp, #16]
    d57c:	ldp	x21, x22, [sp, #32]
    d580:	ldp	x23, x24, [sp, #48]
    d584:	ldr	x25, [sp, #64]
    d588:	ldp	x29, x30, [sp], #80
    d58c:	b	be18 <omp_is_initial_device@@OMP_4.0+0x218>
    d590:	mov	w0, #0x0                   	// #0
    d594:	b	d50c <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0xc4>

000000000000d598 <GOMP_loop_doacross_guided_start@@GOMP_4.5>:
    d598:	stp	x29, x30, [sp, #-64]!
    d59c:	mov	x29, sp
    d5a0:	stp	x19, x20, [sp, #16]
    d5a4:	mov	x19, x3
    d5a8:	mov	x20, x4
    d5ac:	stp	x21, x22, [sp, #32]
    d5b0:	mov	x21, x1
    d5b4:	stp	x23, x24, [sp, #48]
    d5b8:	mov	w23, w0
    d5bc:	mov	x24, x2
    d5c0:	mov	x0, #0x0                   	// #0
    d5c4:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    d5c8:	tst	w0, #0xff
    d5cc:	b.ne	d5ec <GOMP_loop_doacross_guided_start@@GOMP_4.5+0x54>  // b.any
    d5d0:	mov	x1, x20
    d5d4:	mov	x0, x19
    d5d8:	ldp	x19, x20, [sp, #16]
    d5dc:	ldp	x21, x22, [sp, #32]
    d5e0:	ldp	x23, x24, [sp, #48]
    d5e4:	ldp	x29, x30, [sp], #64
    d5e8:	b	bf90 <omp_is_initial_device@@OMP_4.0+0x390>
    d5ec:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    d5f0:	ldr	x0, [x0, #4016]
    d5f4:	mrs	x22, tpidr_el0
    d5f8:	ldr	x1, [x21]
    d5fc:	add	x22, x22, x0
    d600:	mov	w7, #0x3                   	// #3
    d604:	mov	x6, #0x1                   	// #1
    d608:	cmp	x1, #0x0
    d60c:	mov	w0, w23
    d610:	ldr	x4, [x22, #24]
    d614:	csel	x5, x1, xzr, ge  // ge = tcont
    d618:	mov	x2, x24
    d61c:	mov	x1, x21
    d620:	mov	x3, #0x0                   	// #0
    d624:	str	w7, [x4]
    d628:	stp	x24, x5, [x4, #8]
    d62c:	str	x6, [x4, #24]
    d630:	str	xzr, [x4, #72]
    d634:	bl	ff88 <GOMP_ordered_end@@GOMP_1.0+0x8>
    d638:	ldr	x0, [x22, #32]
    d63c:	cbz	x0, d5d0 <GOMP_loop_doacross_guided_start@@GOMP_4.5+0x38>
    d640:	ldr	x2, [x22, #24]
    d644:	add	x0, x0, #0x50
    d648:	ldxr	x1, [x0]
    d64c:	stlxr	w3, x2, [x0]
    d650:	cbnz	w3, d648 <GOMP_loop_doacross_guided_start@@GOMP_4.5+0xb0>
    d654:	cmp	x1, #0x1
    d658:	b.eq	d5d0 <GOMP_loop_doacross_guided_start@@GOMP_4.5+0x38>  // b.none
    d65c:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    d660:	mov	x1, x20
    d664:	mov	x0, x19
    d668:	ldp	x19, x20, [sp, #16]
    d66c:	ldp	x21, x22, [sp, #32]
    d670:	ldp	x23, x24, [sp, #48]
    d674:	ldp	x29, x30, [sp], #64
    d678:	b	bf90 <omp_is_initial_device@@OMP_4.0+0x390>
    d67c:	nop

000000000000d680 <GOMP_loop_doacross_runtime_start@@GOMP_4.5>:
    d680:	adrp	x4, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    d684:	ldr	x4, [x4, #4016]
    d688:	mrs	x6, tpidr_el0
    d68c:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    d690:	add	x5, x5, #0x2b8
    d694:	add	x6, x6, x4
    d698:	mov	x7, x2
    d69c:	mov	x4, x3
    d6a0:	ldr	x6, [x6, #80]
    d6a4:	cmp	x6, #0x0
    d6a8:	add	x6, x6, #0x90
    d6ac:	csel	x5, x5, x6, eq  // eq = none
    d6b0:	ldr	w2, [x5, #8]
    d6b4:	and	w6, w2, #0x7fffffff
    d6b8:	cmp	w6, #0x3
    d6bc:	b.eq	d704 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x84>  // b.none
    d6c0:	tst	w2, #0x7ffffffc
    d6c4:	b.ne	d6dc <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x5c>  // b.any
    d6c8:	cmp	w6, #0x1
    d6cc:	b.ne	d6f0 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x70>  // b.any
    d6d0:	ldrsw	x2, [x5, #12]
    d6d4:	mov	x3, x7
    d6d8:	b	d368 <GOMP_loop_doacross_static_start@@GOMP_4.5>
    d6dc:	cmp	w6, #0x4
    d6e0:	b.ne	d710 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x90>  // b.any
    d6e4:	mov	x3, x7
    d6e8:	mov	x2, #0x0                   	// #0
    d6ec:	b	d368 <GOMP_loop_doacross_static_start@@GOMP_4.5>
    d6f0:	cmp	w6, #0x2
    d6f4:	b.ne	d710 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x90>  // b.any
    d6f8:	ldrsw	x2, [x5, #12]
    d6fc:	mov	x3, x7
    d700:	b	d448 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5>
    d704:	ldrsw	x2, [x5, #12]
    d708:	mov	x3, x7
    d70c:	b	d598 <GOMP_loop_doacross_guided_start@@GOMP_4.5>
    d710:	stp	x29, x30, [sp, #-16]!
    d714:	mov	x29, sp
    d718:	bl	8870 <abort@plt>
    d71c:	nop

000000000000d720 <GOMP_loop_static_next@@GOMP_1.0>:
    d720:	stp	x29, x30, [sp, #-16]!
    d724:	mov	x29, sp
    d728:	bl	bc08 <omp_is_initial_device@@OMP_4.0+0x8>
    d72c:	cmp	w0, #0x0
    d730:	cset	w0, eq  // eq = none
    d734:	ldp	x29, x30, [sp], #16
    d738:	ret
    d73c:	nop

000000000000d740 <GOMP_loop_dynamic_next@@GOMP_1.0>:
    d740:	b	be18 <omp_is_initial_device@@OMP_4.0+0x218>
    d744:	nop

000000000000d748 <GOMP_loop_guided_next@@GOMP_1.0>:
    d748:	b	bf90 <omp_is_initial_device@@OMP_4.0+0x390>
    d74c:	nop

000000000000d750 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0>:
    d750:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    d754:	ldr	x3, [x3, #4016]
    d758:	mrs	x2, tpidr_el0
    d75c:	add	x2, x2, x3
    d760:	ldr	x2, [x2, #24]
    d764:	ldr	w2, [x2]
    d768:	cmp	w2, #0x2
    d76c:	b.eq	d7c4 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x74>  // b.none
    d770:	stp	x29, x30, [sp, #-16]!
    d774:	mov	x3, x0
    d778:	mov	x4, x1
    d77c:	mov	x29, sp
    d780:	b.ls	d794 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x44>  // b.plast
    d784:	cmp	w2, #0x3
    d788:	b.ne	d7b8 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x68>  // b.any
    d78c:	ldp	x29, x30, [sp], #16
    d790:	b	bf90 <omp_is_initial_device@@OMP_4.0+0x390>
    d794:	cmp	w2, #0x1
    d798:	b.ne	d7c0 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x70>  // b.any
    d79c:	mov	x1, x4
    d7a0:	mov	x0, x3
    d7a4:	bl	bc08 <omp_is_initial_device@@OMP_4.0+0x8>
    d7a8:	cmp	w0, #0x0
    d7ac:	cset	w0, eq  // eq = none
    d7b0:	ldp	x29, x30, [sp], #16
    d7b4:	ret
    d7b8:	cmp	w2, #0x4
    d7bc:	b.eq	d79c <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x4c>  // b.none
    d7c0:	bl	8870 <abort@plt>
    d7c4:	b	be18 <omp_is_initial_device@@OMP_4.0+0x218>

000000000000d7c8 <GOMP_loop_start@@GOMP_5.0>:
    d7c8:	stp	x29, x30, [sp, #-112]!
    d7cc:	mov	x29, sp
    d7d0:	stp	x19, x20, [sp, #16]
    d7d4:	mov	x20, x7
    d7d8:	adrp	x19, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    d7dc:	ldr	x19, [x19, #4016]
    d7e0:	stp	x25, x26, [sp, #64]
    d7e4:	mrs	x26, tpidr_el0
    d7e8:	mov	x25, x6
    d7ec:	stp	x27, x28, [sp, #80]
    d7f0:	add	x28, x26, x19
    d7f4:	mov	x27, x3
    d7f8:	stp	x21, x22, [sp, #32]
    d7fc:	mov	x22, x1
    d800:	mov	x21, x5
    d804:	stp	x23, x24, [sp, #48]
    d808:	mov	x23, x0
    d80c:	mov	x24, x2
    d810:	str	xzr, [x28, #72]
    d814:	str	x4, [sp, #104]
    d818:	cbz	x7, d890 <GOMP_loop_start@@GOMP_5.0+0xc8>
    d81c:	bl	17f28 <GOMP_task_reduction_remap@@GOMP_5.0+0x470>
    d820:	mov	x0, #0x0                   	// #0
    d824:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    d828:	tst	w0, #0xff
    d82c:	b.ne	d8a0 <GOMP_loop_start@@GOMP_5.0+0xd8>  // b.any
    d830:	ldr	x1, [x28, #24]
    d834:	mov	x0, x20
    d838:	ldr	x1, [x1, #88]
    d83c:	bl	17d50 <GOMP_task_reduction_remap@@GOMP_5.0+0x298>
    d840:	ldr	x0, [sp, #112]
    d844:	cbz	x0, d85c <GOMP_loop_start@@GOMP_5.0+0x94>
    d848:	add	x19, x26, x19
    d84c:	ldr	x1, [sp, #112]
    d850:	ldr	x0, [x19, #24]
    d854:	ldr	x0, [x0, #32]
    d858:	str	x0, [x1]
    d85c:	mov	w0, #0x1                   	// #1
    d860:	cbz	x21, d874 <GOMP_loop_start@@GOMP_5.0+0xac>
    d864:	mov	x1, x25
    d868:	mov	x0, x21
    d86c:	bl	d750 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
    d870:	and	w0, w0, #0xff
    d874:	ldp	x19, x20, [sp, #16]
    d878:	ldp	x21, x22, [sp, #32]
    d87c:	ldp	x23, x24, [sp, #48]
    d880:	ldp	x25, x26, [sp, #64]
    d884:	ldp	x27, x28, [sp, #80]
    d888:	ldp	x29, x30, [sp], #112
    d88c:	ret
    d890:	mov	x0, #0x0                   	// #0
    d894:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    d898:	tst	w0, #0xff
    d89c:	b.eq	d840 <GOMP_loop_start@@GOMP_5.0+0x78>  // b.none
    d8a0:	add	x1, sp, #0x68
    d8a4:	mov	x0, x27
    d8a8:	bl	c4b8 <omp_is_initial_device@@OMP_4.0+0x8b8>
    d8ac:	add	x1, x26, x19
    d8b0:	cmp	x24, #0x0
    d8b4:	ldr	x2, [sp, #104]
    d8b8:	ccmp	x23, x22, #0x4, gt
    d8bc:	ldr	x1, [x1, #24]
    d8c0:	str	w0, [x1]
    d8c4:	str	x2, [x1, #8]
    d8c8:	b.gt	d96c <GOMP_loop_start@@GOMP_5.0+0x1a4>
    d8cc:	cmp	x24, #0x0
    d8d0:	str	x23, [x1, #72]
    d8d4:	ccmp	x23, x22, #0x0, lt  // lt = tstop
    d8d8:	csel	x22, x22, x23, ge  // ge = tcont
    d8dc:	stp	x22, x24, [x1, #16]
    d8e0:	cmp	w0, #0x2
    d8e4:	b.eq	d980 <GOMP_loop_start@@GOMP_5.0+0x1b8>  // b.none
    d8e8:	cbz	x20, d910 <GOMP_loop_start@@GOMP_5.0+0x148>
    d8ec:	mov	x0, x20
    d8f0:	bl	15d78 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    d8f4:	add	x0, x26, x19
    d8f8:	mov	w2, #0x1                   	// #1
    d8fc:	ldr	x1, [x0, #80]
    d900:	ldr	x0, [x0, #24]
    d904:	ldr	x1, [x1, #40]
    d908:	strb	w2, [x1, #50]
    d90c:	str	x20, [x0, #88]
    d910:	ldr	x0, [sp, #112]
    d914:	cbz	x0, d93c <GOMP_loop_start@@GOMP_5.0+0x174>
    d918:	add	x1, x26, x19
    d91c:	ldr	x0, [x0]
    d920:	ldr	x20, [x1, #24]
    d924:	cmp	x0, #0x20
    d928:	b.ls	d9d0 <GOMP_loop_start@@GOMP_5.0+0x208>  // b.plast
    d92c:	bl	b258 <fprintf@plt+0x2748>
    d930:	str	x0, [x20, #32]
    d934:	ldr	x1, [sp, #112]
    d938:	str	x0, [x1]
    d93c:	add	x19, x26, x19
    d940:	ldr	x0, [x19, #32]
    d944:	cbz	x0, d85c <GOMP_loop_start@@GOMP_5.0+0x94>
    d948:	ldr	x2, [x19, #24]
    d94c:	add	x0, x0, #0x50
    d950:	ldxr	x1, [x0]
    d954:	stlxr	w3, x2, [x0]
    d958:	cbnz	w3, d950 <GOMP_loop_start@@GOMP_5.0+0x188>
    d95c:	cmp	x1, #0x1
    d960:	b.eq	d85c <GOMP_loop_start@@GOMP_5.0+0x94>  // b.none
    d964:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    d968:	b	d85c <GOMP_loop_start@@GOMP_5.0+0x94>
    d96c:	mov	x22, x23
    d970:	stp	x22, x24, [x1, #16]
    d974:	cmp	w0, #0x2
    d978:	str	x23, [x1, #72]
    d97c:	b.ne	d8e8 <GOMP_loop_start@@GOMP_5.0+0x120>  // b.any
    d980:	add	x0, x26, x19
    d984:	mul	x2, x2, x24
    d988:	mov	x3, #0x1                   	// #1
    d98c:	ldr	x0, [x0, #16]
    d990:	str	x2, [x1, #8]
    d994:	cbz	x0, d99c <GOMP_loop_start@@GOMP_5.0+0x1d4>
    d998:	ldr	w3, [x0]
    d99c:	cmp	x24, #0x0
    d9a0:	b.le	d9ec <GOMP_loop_start@@GOMP_5.0+0x224>
    d9a4:	orr	x4, x2, x3
    d9a8:	mov	x0, #0x7fffffff            	// #2147483647
    d9ac:	cmp	x4, x0
    d9b0:	b.hi	da20 <GOMP_loop_start@@GOMP_5.0+0x258>  // b.pmore
    d9b4:	madd	x2, x3, x2, x2
    d9b8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    d9bc:	sub	x2, x0, x2
    d9c0:	cmp	x22, x2
    d9c4:	cset	w0, lt  // lt = tstop
    d9c8:	str	w0, [x1, #4]
    d9cc:	b	d8e8 <GOMP_loop_start@@GOMP_5.0+0x120>
    d9d0:	mov	x2, x0
    d9d4:	mov	w1, #0x0                   	// #0
    d9d8:	add	x0, x20, #0x60
    d9dc:	bl	87c0 <memset@plt>
    d9e0:	ldr	x1, [sp, #112]
    d9e4:	str	x0, [x1]
    d9e8:	b	d93c <GOMP_loop_start@@GOMP_5.0+0x174>
    d9ec:	neg	x0, x2
    d9f0:	mov	x2, #0x7fffffff            	// #2147483647
    d9f4:	orr	x4, x3, x0
    d9f8:	cmp	x4, x2
    d9fc:	b.hi	da20 <GOMP_loop_start@@GOMP_5.0+0x258>  // b.pmore
    da00:	madd	x0, x3, x0, x0
    da04:	mov	x2, #0x2                   	// #2
    da08:	movk	x2, #0x8000, lsl #48
    da0c:	add	x0, x0, x2
    da10:	cmp	x22, x0
    da14:	cset	w0, ge  // ge = tcont
    da18:	str	w0, [x1, #4]
    da1c:	b	d8e8 <GOMP_loop_start@@GOMP_5.0+0x120>
    da20:	str	wzr, [x1, #4]
    da24:	b	d8e8 <GOMP_loop_start@@GOMP_5.0+0x120>

000000000000da28 <GOMP_loop_doacross_start@@GOMP_5.0>:
    da28:	stp	x29, x30, [sp, #-112]!
    da2c:	mov	x29, sp
    da30:	stp	x25, x26, [sp, #64]
    da34:	mov	w26, w0
    da38:	adrp	x25, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    da3c:	ldr	x25, [x25, #4016]
    da40:	stp	x19, x20, [sp, #16]
    da44:	mrs	x20, tpidr_el0
    da48:	mov	x19, x7
    da4c:	stp	x27, x28, [sp, #80]
    da50:	add	x28, x20, x25
    da54:	mov	x27, x2
    da58:	stp	x21, x22, [sp, #32]
    da5c:	mov	x22, x4
    da60:	mov	x21, x6
    da64:	stp	x23, x24, [sp, #48]
    da68:	mov	x24, x1
    da6c:	mov	x23, x5
    da70:	str	xzr, [x28, #72]
    da74:	str	x3, [sp, #104]
    da78:	cbz	x6, db94 <GOMP_loop_doacross_start@@GOMP_5.0+0x16c>
    da7c:	bl	17f28 <GOMP_task_reduction_remap@@GOMP_5.0+0x470>
    da80:	mov	x0, #0x0                   	// #0
    da84:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    da88:	tst	w0, #0xff
    da8c:	b.eq	db80 <GOMP_loop_doacross_start@@GOMP_5.0+0x158>  // b.none
    da90:	mov	x28, #0x0                   	// #0
    da94:	cbz	x19, da9c <GOMP_loop_doacross_start@@GOMP_5.0+0x74>
    da98:	ldr	x28, [x19]
    da9c:	add	x1, sp, #0x68
    daa0:	mov	x0, x27
    daa4:	bl	c4b8 <omp_is_initial_device@@OMP_4.0+0x8b8>
    daa8:	add	x3, x20, x25
    daac:	mov	x5, #0x1                   	// #1
    dab0:	ldr	x4, [x24]
    dab4:	ldr	x1, [x3, #24]
    dab8:	cmp	x4, #0x0
    dabc:	ldr	x2, [sp, #104]
    dac0:	csel	x4, x4, xzr, ge  // ge = tcont
    dac4:	str	w0, [x1]
    dac8:	cmp	w0, #0x2
    dacc:	stp	x2, x4, [x1, #8]
    dad0:	str	x5, [x1, #24]
    dad4:	str	xzr, [x1, #72]
    dad8:	b.eq	dbb0 <GOMP_loop_doacross_start@@GOMP_5.0+0x188>  // b.none
    dadc:	mov	x3, x28
    dae0:	mov	x1, x24
    dae4:	mov	w0, w26
    dae8:	bl	ff88 <GOMP_ordered_end@@GOMP_1.0+0x8>
    daec:	cbz	x21, db14 <GOMP_loop_doacross_start@@GOMP_5.0+0xec>
    daf0:	mov	x0, x21
    daf4:	bl	15d78 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    daf8:	add	x0, x20, x25
    dafc:	mov	w2, #0x1                   	// #1
    db00:	ldr	x1, [x0, #80]
    db04:	ldr	x0, [x0, #24]
    db08:	ldr	x1, [x1, #40]
    db0c:	strb	w2, [x1, #50]
    db10:	str	x21, [x0, #88]
    db14:	add	x1, x20, x25
    db18:	ldr	x0, [x1, #32]
    db1c:	cbz	x0, db40 <GOMP_loop_doacross_start@@GOMP_5.0+0x118>
    db20:	ldr	x2, [x1, #24]
    db24:	add	x0, x0, #0x50
    db28:	ldxr	x1, [x0]
    db2c:	stlxr	w3, x2, [x0]
    db30:	cbnz	w3, db28 <GOMP_loop_doacross_start@@GOMP_5.0+0x100>
    db34:	cmp	x1, #0x1
    db38:	b.eq	db40 <GOMP_loop_doacross_start@@GOMP_5.0+0x118>  // b.none
    db3c:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    db40:	cbz	x19, db58 <GOMP_loop_doacross_start@@GOMP_5.0+0x130>
    db44:	add	x20, x20, x25
    db48:	ldr	x0, [x20, #24]
    db4c:	ldr	x0, [x0, #32]
    db50:	ldr	x0, [x0, #48]
    db54:	str	x0, [x19]
    db58:	mov	x1, x23
    db5c:	mov	x0, x22
    db60:	bl	d750 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
    db64:	ldp	x19, x20, [sp, #16]
    db68:	ldp	x21, x22, [sp, #32]
    db6c:	ldp	x23, x24, [sp, #48]
    db70:	ldp	x25, x26, [sp, #64]
    db74:	ldp	x27, x28, [sp, #80]
    db78:	ldp	x29, x30, [sp], #112
    db7c:	ret
    db80:	ldr	x1, [x28, #24]
    db84:	mov	x0, x21
    db88:	ldr	x1, [x1, #88]
    db8c:	bl	17d50 <GOMP_task_reduction_remap@@GOMP_5.0+0x298>
    db90:	b	db40 <GOMP_loop_doacross_start@@GOMP_5.0+0x118>
    db94:	mov	x0, #0x0                   	// #0
    db98:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    db9c:	tst	w0, #0xff
    dba0:	b.eq	db40 <GOMP_loop_doacross_start@@GOMP_5.0+0x118>  // b.none
    dba4:	mov	x28, #0x0                   	// #0
    dba8:	cbnz	x19, da98 <GOMP_loop_doacross_start@@GOMP_5.0+0x70>
    dbac:	b	da9c <GOMP_loop_doacross_start@@GOMP_5.0+0x74>
    dbb0:	ldr	x0, [x3, #16]
    dbb4:	cbz	x0, dbbc <GOMP_loop_doacross_start@@GOMP_5.0+0x194>
    dbb8:	ldr	w5, [x0]
    dbbc:	orr	x3, x2, x5
    dbc0:	mov	x0, #0x7fffffff            	// #2147483647
    dbc4:	cmp	x3, x0
    dbc8:	b.hi	dbfc <GOMP_loop_doacross_start@@GOMP_5.0+0x1d4>  // b.pmore
    dbcc:	madd	x5, x5, x2, x2
    dbd0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    dbd4:	mov	x3, x28
    dbd8:	sub	x5, x0, x5
    dbdc:	cmp	x5, x4
    dbe0:	cset	w0, gt
    dbe4:	str	w0, [x1, #4]
    dbe8:	mov	x1, x24
    dbec:	mov	w0, w26
    dbf0:	bl	ff88 <GOMP_ordered_end@@GOMP_1.0+0x8>
    dbf4:	cbnz	x21, daf0 <GOMP_loop_doacross_start@@GOMP_5.0+0xc8>
    dbf8:	b	db14 <GOMP_loop_doacross_start@@GOMP_5.0+0xec>
    dbfc:	str	wzr, [x1, #4]
    dc00:	b	dadc <GOMP_loop_doacross_start@@GOMP_5.0+0xb4>
    dc04:	nop

000000000000dc08 <GOMP_loop_ordered_static_next@@GOMP_1.0>:
    dc08:	stp	x29, x30, [sp, #-48]!
    dc0c:	mov	x29, sp
    dc10:	stp	x21, x22, [sp, #32]
    dc14:	mov	x21, x1
    dc18:	adrp	x22, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    dc1c:	ldr	x22, [x22, #4016]
    dc20:	stp	x19, x20, [sp, #16]
    dc24:	mov	x19, x0
    dc28:	mrs	x20, tpidr_el0
    dc2c:	bl	fec8 <GOMP_ordered_start@@GOMP_1.0>
    dc30:	add	x1, x20, x22
    dc34:	mov	w0, #0x1                   	// #1
    dc38:	ldr	x2, [x1, #24]
    dc3c:	add	x2, x2, #0x40
    dc40:	ldaxr	w1, [x2]
    dc44:	cbnz	w1, dc50 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x48>
    dc48:	stxr	w3, w0, [x2]
    dc4c:	cbnz	w3, dc40 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x38>
    dc50:	cmp	w1, #0x0
    dc54:	b.ne	dcc4 <GOMP_loop_ordered_static_next@@GOMP_1.0+0xbc>  // b.any
    dc58:	mov	x0, x19
    dc5c:	mov	x1, x21
    dc60:	bl	bc08 <omp_is_initial_device@@OMP_4.0+0x8>
    dc64:	mov	w19, w0
    dc68:	tbnz	w0, #31, dc70 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x68>
    dc6c:	bl	fe30 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x308>
    dc70:	add	x20, x20, x22
    dc74:	ldr	x1, [x20, #24]
    dc78:	add	x1, x1, #0x40
    dc7c:	ldxr	w0, [x1]
    dc80:	stlxr	w2, wzr, [x1]
    dc84:	cbnz	w2, dc7c <GOMP_loop_ordered_static_next@@GOMP_1.0+0x74>
    dc88:	tbnz	w0, #31, dca4 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x9c>
    dc8c:	cmp	w19, #0x0
    dc90:	cset	w0, eq  // eq = none
    dc94:	ldp	x19, x20, [sp, #16]
    dc98:	ldp	x21, x22, [sp, #32]
    dc9c:	ldp	x29, x30, [sp], #48
    dca0:	ret
    dca4:	mov	x0, x1
    dca8:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
    dcac:	cmp	w19, #0x0
    dcb0:	cset	w0, eq  // eq = none
    dcb4:	ldp	x19, x20, [sp, #16]
    dcb8:	ldp	x21, x22, [sp, #32]
    dcbc:	ldp	x29, x30, [sp], #48
    dcc0:	ret
    dcc4:	mov	x0, x2
    dcc8:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    dccc:	b	dc58 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x50>

000000000000dcd0 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0>:
    dcd0:	stp	x29, x30, [sp, #-48]!
    dcd4:	mov	x29, sp
    dcd8:	stp	x21, x22, [sp, #32]
    dcdc:	mov	x21, x1
    dce0:	adrp	x22, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    dce4:	ldr	x22, [x22, #4016]
    dce8:	stp	x19, x20, [sp, #16]
    dcec:	mov	x19, x0
    dcf0:	mrs	x20, tpidr_el0
    dcf4:	bl	fec8 <GOMP_ordered_start@@GOMP_1.0>
    dcf8:	add	x1, x20, x22
    dcfc:	mov	w0, #0x1                   	// #1
    dd00:	ldr	x2, [x1, #24]
    dd04:	add	x2, x2, #0x40
    dd08:	ldaxr	w1, [x2]
    dd0c:	cbnz	w1, dd18 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x48>
    dd10:	stxr	w3, w0, [x2]
    dd14:	cbnz	w3, dd08 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x38>
    dd18:	cmp	w1, #0x0
    dd1c:	b.ne	dd90 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0xc0>  // b.any
    dd20:	mov	x0, x19
    dd24:	mov	x1, x21
    dd28:	bl	bd98 <omp_is_initial_device@@OMP_4.0+0x198>
    dd2c:	mov	w19, w0
    dd30:	tst	w0, #0xff
    dd34:	b.eq	dd6c <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x9c>  // b.none
    dd38:	bl	fcd0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1a8>
    dd3c:	add	x20, x20, x22
    dd40:	ldr	x1, [x20, #24]
    dd44:	add	x1, x1, #0x40
    dd48:	ldxr	w0, [x1]
    dd4c:	stlxr	w2, wzr, [x1]
    dd50:	cbnz	w2, dd48 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x78>
    dd54:	tbnz	w0, #31, dd74 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0xa4>
    dd58:	mov	w0, w19
    dd5c:	ldp	x19, x20, [sp, #16]
    dd60:	ldp	x21, x22, [sp, #32]
    dd64:	ldp	x29, x30, [sp], #48
    dd68:	ret
    dd6c:	bl	fc28 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x100>
    dd70:	b	dd3c <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x6c>
    dd74:	mov	x0, x1
    dd78:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
    dd7c:	mov	w0, w19
    dd80:	ldp	x19, x20, [sp, #16]
    dd84:	ldp	x21, x22, [sp, #32]
    dd88:	ldp	x29, x30, [sp], #48
    dd8c:	ret
    dd90:	mov	x0, x2
    dd94:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    dd98:	b	dd20 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x50>
    dd9c:	nop

000000000000dda0 <GOMP_loop_ordered_guided_next@@GOMP_1.0>:
    dda0:	stp	x29, x30, [sp, #-48]!
    dda4:	mov	x29, sp
    dda8:	stp	x21, x22, [sp, #32]
    ddac:	mov	x21, x1
    ddb0:	adrp	x22, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    ddb4:	ldr	x22, [x22, #4016]
    ddb8:	stp	x19, x20, [sp, #16]
    ddbc:	mov	x19, x0
    ddc0:	mrs	x20, tpidr_el0
    ddc4:	bl	fec8 <GOMP_ordered_start@@GOMP_1.0>
    ddc8:	add	x1, x20, x22
    ddcc:	mov	w0, #0x1                   	// #1
    ddd0:	ldr	x2, [x1, #24]
    ddd4:	add	x2, x2, #0x40
    ddd8:	ldaxr	w1, [x2]
    dddc:	cbnz	w1, dde8 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x48>
    dde0:	stxr	w3, w0, [x2]
    dde4:	cbnz	w3, ddd8 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x38>
    dde8:	cmp	w1, #0x0
    ddec:	b.ne	de60 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0xc0>  // b.any
    ddf0:	mov	x0, x19
    ddf4:	mov	x1, x21
    ddf8:	bl	bf10 <omp_is_initial_device@@OMP_4.0+0x310>
    ddfc:	mov	w19, w0
    de00:	tst	w0, #0xff
    de04:	b.eq	de3c <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x9c>  // b.none
    de08:	bl	fcd0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1a8>
    de0c:	add	x20, x20, x22
    de10:	ldr	x1, [x20, #24]
    de14:	add	x1, x1, #0x40
    de18:	ldxr	w0, [x1]
    de1c:	stlxr	w2, wzr, [x1]
    de20:	cbnz	w2, de18 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x78>
    de24:	tbnz	w0, #31, de44 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0xa4>
    de28:	mov	w0, w19
    de2c:	ldp	x19, x20, [sp, #16]
    de30:	ldp	x21, x22, [sp, #32]
    de34:	ldp	x29, x30, [sp], #48
    de38:	ret
    de3c:	bl	fc28 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x100>
    de40:	b	de0c <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x6c>
    de44:	mov	x0, x1
    de48:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
    de4c:	mov	w0, w19
    de50:	ldp	x19, x20, [sp, #16]
    de54:	ldp	x21, x22, [sp, #32]
    de58:	ldp	x29, x30, [sp], #48
    de5c:	ret
    de60:	mov	x0, x2
    de64:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    de68:	b	ddf0 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x50>
    de6c:	nop

000000000000de70 <GOMP_loop_ordered_runtime_next@@GOMP_1.0>:
    de70:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    de74:	ldr	x3, [x3, #4016]
    de78:	mrs	x2, tpidr_el0
    de7c:	add	x2, x2, x3
    de80:	ldr	x2, [x2, #24]
    de84:	ldr	w2, [x2]
    de88:	cmp	w2, #0x2
    de8c:	b.eq	ded0 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x60>  // b.none
    de90:	mov	x3, x0
    de94:	mov	x4, x1
    de98:	b.ls	dea8 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x38>  // b.plast
    de9c:	cmp	w2, #0x3
    dea0:	b.ne	debc <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x4c>  // b.any
    dea4:	b	dda0 <GOMP_loop_ordered_guided_next@@GOMP_1.0>
    dea8:	cmp	w2, #0x1
    deac:	b.ne	dec4 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x54>  // b.any
    deb0:	mov	x1, x4
    deb4:	mov	x0, x3
    deb8:	b	dc08 <GOMP_loop_ordered_static_next@@GOMP_1.0>
    debc:	cmp	w2, #0x4
    dec0:	b.eq	deb0 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x40>  // b.none
    dec4:	stp	x29, x30, [sp, #-16]!
    dec8:	mov	x29, sp
    decc:	bl	8870 <abort@plt>
    ded0:	b	dcd0 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0>
    ded4:	nop

000000000000ded8 <GOMP_parallel_loop_static_start@@GOMP_1.0>:
    ded8:	sub	sp, sp, #0x20
    dedc:	mov	x7, x6
    dee0:	mov	w6, #0x1                   	// #1
    dee4:	stp	x29, x30, [sp, #16]
    dee8:	add	x29, sp, #0x10
    deec:	str	wzr, [sp]
    def0:	bl	c540 <omp_is_initial_device@@OMP_4.0+0x940>
    def4:	ldp	x29, x30, [sp, #16]
    def8:	add	sp, sp, #0x20
    defc:	ret

000000000000df00 <GOMP_parallel_loop_dynamic_start@@GOMP_1.0>:
    df00:	sub	sp, sp, #0x20
    df04:	mov	x7, x6
    df08:	mov	w6, #0x2                   	// #2
    df0c:	stp	x29, x30, [sp, #16]
    df10:	add	x29, sp, #0x10
    df14:	str	wzr, [sp]
    df18:	bl	c540 <omp_is_initial_device@@OMP_4.0+0x940>
    df1c:	ldp	x29, x30, [sp, #16]
    df20:	add	sp, sp, #0x20
    df24:	ret

000000000000df28 <GOMP_parallel_loop_guided_start@@GOMP_1.0>:
    df28:	sub	sp, sp, #0x20
    df2c:	mov	x7, x6
    df30:	mov	w6, #0x3                   	// #3
    df34:	stp	x29, x30, [sp, #16]
    df38:	add	x29, sp, #0x10
    df3c:	str	wzr, [sp]
    df40:	bl	c540 <omp_is_initial_device@@OMP_4.0+0x940>
    df44:	ldp	x29, x30, [sp, #16]
    df48:	add	sp, sp, #0x20
    df4c:	ret

000000000000df50 <GOMP_parallel_loop_runtime_start@@GOMP_1.0>:
    df50:	sub	sp, sp, #0x20
    df54:	adrp	x8, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    df58:	ldr	x8, [x8, #4016]
    df5c:	mrs	x7, tpidr_el0
    df60:	adrp	x6, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    df64:	add	x7, x7, x8
    df68:	add	x6, x6, #0x2b8
    df6c:	stp	x29, x30, [sp, #16]
    df70:	add	x29, sp, #0x10
    df74:	ldr	x7, [x7, #80]
    df78:	cmp	x7, #0x0
    df7c:	add	x7, x7, #0x90
    df80:	csel	x6, x6, x7, eq  // eq = none
    df84:	ldrsw	x7, [x6, #12]
    df88:	ldr	w6, [x6, #8]
    df8c:	str	wzr, [sp]
    df90:	and	w6, w6, #0x7fffffff
    df94:	bl	c540 <omp_is_initial_device@@OMP_4.0+0x940>
    df98:	ldp	x29, x30, [sp, #16]
    df9c:	add	sp, sp, #0x20
    dfa0:	ret
    dfa4:	nop

000000000000dfa8 <GOMP_parallel_loop_static@@GOMP_4.0>:
    dfa8:	sub	sp, sp, #0x30
    dfac:	mov	w8, w7
    dfb0:	mov	x7, x6
    dfb4:	mov	w6, #0x1                   	// #1
    dfb8:	stp	x29, x30, [sp, #16]
    dfbc:	add	x29, sp, #0x10
    dfc0:	str	w8, [sp]
    dfc4:	stp	x19, x20, [sp, #32]
    dfc8:	mov	x20, x1
    dfcc:	mov	x19, x0
    dfd0:	bl	c540 <omp_is_initial_device@@OMP_4.0+0x940>
    dfd4:	mov	x0, x20
    dfd8:	blr	x19
    dfdc:	ldp	x29, x30, [sp, #16]
    dfe0:	ldp	x19, x20, [sp, #32]
    dfe4:	add	sp, sp, #0x30
    dfe8:	b	10e98 <GOMP_parallel_end@@GOMP_1.0>
    dfec:	nop

000000000000dff0 <GOMP_parallel_loop_dynamic@@GOMP_4.0>:
    dff0:	sub	sp, sp, #0x30
    dff4:	mov	w8, w7
    dff8:	mov	x7, x6
    dffc:	mov	w6, #0x2                   	// #2
    e000:	stp	x29, x30, [sp, #16]
    e004:	add	x29, sp, #0x10
    e008:	str	w8, [sp]
    e00c:	stp	x19, x20, [sp, #32]
    e010:	mov	x20, x1
    e014:	mov	x19, x0
    e018:	bl	c540 <omp_is_initial_device@@OMP_4.0+0x940>
    e01c:	mov	x0, x20
    e020:	blr	x19
    e024:	ldp	x29, x30, [sp, #16]
    e028:	ldp	x19, x20, [sp, #32]
    e02c:	add	sp, sp, #0x30
    e030:	b	10e98 <GOMP_parallel_end@@GOMP_1.0>
    e034:	nop

000000000000e038 <GOMP_parallel_loop_guided@@GOMP_4.0>:
    e038:	sub	sp, sp, #0x30
    e03c:	mov	w8, w7
    e040:	mov	x7, x6
    e044:	mov	w6, #0x3                   	// #3
    e048:	stp	x29, x30, [sp, #16]
    e04c:	add	x29, sp, #0x10
    e050:	str	w8, [sp]
    e054:	stp	x19, x20, [sp, #32]
    e058:	mov	x20, x1
    e05c:	mov	x19, x0
    e060:	bl	c540 <omp_is_initial_device@@OMP_4.0+0x940>
    e064:	mov	x0, x20
    e068:	blr	x19
    e06c:	ldp	x29, x30, [sp, #16]
    e070:	ldp	x19, x20, [sp, #32]
    e074:	add	sp, sp, #0x30
    e078:	b	10e98 <GOMP_parallel_end@@GOMP_1.0>
    e07c:	nop

000000000000e080 <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0>:
    e080:	sub	sp, sp, #0x30
    e084:	adrp	x9, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    e088:	ldr	x9, [x9, #4016]
    e08c:	mrs	x7, tpidr_el0
    e090:	adrp	x8, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    e094:	add	x7, x7, x9
    e098:	add	x8, x8, #0x2b8
    e09c:	stp	x29, x30, [sp, #16]
    e0a0:	add	x29, sp, #0x10
    e0a4:	ldr	x7, [x7, #80]
    e0a8:	stp	x19, x20, [sp, #32]
    e0ac:	mov	x20, x1
    e0b0:	cmp	x7, #0x0
    e0b4:	add	x7, x7, #0x90
    e0b8:	csel	x8, x8, x7, eq  // eq = none
    e0bc:	mov	x19, x0
    e0c0:	ldrsw	x7, [x8, #12]
    e0c4:	ldr	w8, [x8, #8]
    e0c8:	str	w6, [sp]
    e0cc:	and	w6, w8, #0x7fffffff
    e0d0:	bl	c540 <omp_is_initial_device@@OMP_4.0+0x940>
    e0d4:	mov	x0, x20
    e0d8:	blr	x19
    e0dc:	ldp	x29, x30, [sp, #16]
    e0e0:	ldp	x19, x20, [sp, #32]
    e0e4:	add	sp, sp, #0x30
    e0e8:	b	10e98 <GOMP_parallel_end@@GOMP_1.0>
    e0ec:	nop

000000000000e0f0 <GOMP_loop_end@@GOMP_1.0>:
    e0f0:	b	19a00 <omp_in_final@@OMP_3.1+0x19d8>
    e0f4:	nop

000000000000e0f8 <GOMP_loop_end_cancel@@GOMP_4.0>:
    e0f8:	b	19b10 <omp_in_final@@OMP_3.1+0x1ae8>
    e0fc:	nop

000000000000e100 <GOMP_loop_end_nowait@@GOMP_1.0>:
    e100:	b	19be0 <omp_in_final@@OMP_3.1+0x1bb8>
    e104:	nop
    e108:	tst	x0, #0x7ffffffc
    e10c:	and	x0, x0, #0x7fffffff
    e110:	b.ne	e174 <GOMP_loop_end_nowait@@GOMP_1.0+0x74>  // b.any
    e114:	cbnz	x0, e188 <GOMP_loop_end_nowait@@GOMP_1.0+0x88>
    e118:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    e11c:	ldr	x3, [x3, #4016]
    e120:	mrs	x0, tpidr_el0
    e124:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    e128:	add	x2, x2, #0x2b8
    e12c:	add	x0, x0, x3
    e130:	ldr	x0, [x0, #80]
    e134:	cmp	x0, #0x0
    e138:	add	x0, x0, #0x90
    e13c:	csel	x2, x2, x0, eq  // eq = none
    e140:	ldr	w0, [x2, #8]
    e144:	tst	w0, #0x7ffffffc
    e148:	and	w0, w0, #0x7fffffff
    e14c:	b.ne	e160 <GOMP_loop_end_nowait@@GOMP_1.0+0x60>  // b.any
    e150:	cbz	w0, e17c <GOMP_loop_end_nowait@@GOMP_1.0+0x7c>
    e154:	ldrsw	x2, [x2, #12]
    e158:	str	x2, [x1]
    e15c:	ret
    e160:	cmp	w0, #0x4
    e164:	b.ne	e17c <GOMP_loop_end_nowait@@GOMP_1.0+0x7c>  // b.any
    e168:	mov	x0, #0x1                   	// #1
    e16c:	str	xzr, [x1]
    e170:	ret
    e174:	cmp	x0, #0x4
    e178:	b.eq	e118 <GOMP_loop_end_nowait@@GOMP_1.0+0x18>  // b.none
    e17c:	stp	x29, x30, [sp, #-16]!
    e180:	mov	x29, sp
    e184:	bl	8870 <abort@plt>
    e188:	ret
    e18c:	nop

000000000000e190 <GOMP_loop_ull_static_start@@GOMP_2.0>:
    e190:	stp	x29, x30, [sp, #-96]!
    e194:	mov	x29, sp
    e198:	stp	x23, x24, [sp, #48]
    e19c:	mov	x23, x3
    e1a0:	adrp	x24, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    e1a4:	ldr	x24, [x24, #4016]
    e1a8:	stp	x27, x28, [sp, #80]
    e1ac:	mrs	x28, tpidr_el0
    e1b0:	and	w27, w0, #0xff
    e1b4:	stp	x25, x26, [sp, #64]
    e1b8:	add	x26, x28, x24
    e1bc:	mov	x25, x4
    e1c0:	stp	x19, x20, [sp, #16]
    e1c4:	mov	x0, #0x0                   	// #0
    e1c8:	mov	x19, x1
    e1cc:	stp	x21, x22, [sp, #32]
    e1d0:	mov	x20, x5
    e1d4:	mov	x22, x2
    e1d8:	mov	x21, x6
    e1dc:	str	xzr, [x26, #72]
    e1e0:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    e1e4:	tst	w0, #0xff
    e1e8:	b.eq	e23c <GOMP_loop_ull_static_start@@GOMP_2.0+0xac>  // b.none
    e1ec:	ldr	x7, [x26, #24]
    e1f0:	mov	w0, #0x1                   	// #1
    e1f4:	cmp	w27, #0x0
    e1f8:	ccmp	x19, x22, #0x0, ne  // ne = any
    e1fc:	str	w0, [x7]
    e200:	str	x25, [x7, #8]
    e204:	b.ls	e26c <GOMP_loop_ull_static_start@@GOMP_2.0+0xdc>  // b.plast
    e208:	str	wzr, [x7, #4]
    e20c:	stp	x19, x23, [x7, #16]
    e210:	str	x19, [x7, #72]
    e214:	add	x24, x28, x24
    e218:	ldr	x0, [x24, #32]
    e21c:	cbz	x0, e23c <GOMP_loop_ull_static_start@@GOMP_2.0+0xac>
    e220:	add	x0, x0, #0x50
    e224:	ldxr	x1, [x0]
    e228:	stlxr	w2, x7, [x0]
    e22c:	cbnz	w2, e224 <GOMP_loop_ull_static_start@@GOMP_2.0+0x94>
    e230:	cmp	x1, #0x1
    e234:	b.eq	e23c <GOMP_loop_ull_static_start@@GOMP_2.0+0xac>  // b.none
    e238:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    e23c:	mov	x1, x21
    e240:	mov	x0, x20
    e244:	bl	c040 <omp_is_initial_device@@OMP_4.0+0x440>
    e248:	cmp	w0, #0x0
    e24c:	cset	w0, eq  // eq = none
    e250:	ldp	x19, x20, [sp, #16]
    e254:	ldp	x21, x22, [sp, #32]
    e258:	ldp	x23, x24, [sp, #48]
    e25c:	ldp	x25, x26, [sp, #64]
    e260:	ldp	x27, x28, [sp, #80]
    e264:	ldp	x29, x30, [sp], #96
    e268:	ret
    e26c:	cmp	x19, x22
    e270:	eor	w0, w27, w0
    e274:	cset	w1, cc  // cc = lo, ul, last
    e278:	tst	w1, w0
    e27c:	b.ne	e29c <GOMP_loop_ull_static_start@@GOMP_2.0+0x10c>  // b.any
    e280:	str	wzr, [x7, #4]
    e284:	stp	x22, x23, [x7, #16]
    e288:	str	x19, [x7, #72]
    e28c:	cbnz	w27, e214 <GOMP_loop_ull_static_start@@GOMP_2.0+0x84>
    e290:	mov	w0, #0x2                   	// #2
    e294:	str	w0, [x7, #4]
    e298:	b	e214 <GOMP_loop_ull_static_start@@GOMP_2.0+0x84>
    e29c:	stp	x19, x23, [x7, #16]
    e2a0:	str	x19, [x7, #72]
    e2a4:	b	e290 <GOMP_loop_ull_static_start@@GOMP_2.0+0x100>

000000000000e2a8 <GOMP_loop_ull_dynamic_start@@GOMP_2.0>:
    e2a8:	stp	x29, x30, [sp, #-80]!
    e2ac:	mov	x29, sp
    e2b0:	stp	x19, x20, [sp, #16]
    e2b4:	mov	x19, x1
    e2b8:	mov	x20, x5
    e2bc:	stp	x21, x22, [sp, #32]
    e2c0:	mov	x22, x4
    e2c4:	mov	x21, x6
    e2c8:	stp	x23, x24, [sp, #48]
    e2cc:	mov	x24, x2
    e2d0:	mov	x23, x3
    e2d4:	str	x25, [sp, #64]
    e2d8:	and	w25, w0, #0xff
    e2dc:	mov	x0, #0x0                   	// #0
    e2e0:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    e2e4:	tst	w0, #0xff
    e2e8:	b.ne	e30c <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x64>  // b.any
    e2ec:	mov	x1, x21
    e2f0:	mov	x0, x20
    e2f4:	ldp	x19, x20, [sp, #16]
    e2f8:	ldp	x21, x22, [sp, #32]
    e2fc:	ldp	x23, x24, [sp, #48]
    e300:	ldr	x25, [sp, #64]
    e304:	ldp	x29, x30, [sp], #80
    e308:	b	c260 <omp_is_initial_device@@OMP_4.0+0x660>
    e30c:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    e310:	ldr	x3, [x3, #4016]
    e314:	mrs	x6, tpidr_el0
    e318:	mov	w4, #0x2                   	// #2
    e31c:	cmp	w25, #0x0
    e320:	add	x2, x6, x3
    e324:	mul	x0, x23, x22
    e328:	ccmp	x19, x24, #0x0, ne  // ne = any
    e32c:	ldr	x1, [x2, #24]
    e330:	ldr	x2, [x2, #16]
    e334:	str	w4, [x1]
    e338:	str	x22, [x1, #8]
    e33c:	b.hi	e3e4 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x13c>  // b.pmore
    e340:	cmp	x19, x24
    e344:	str	wzr, [x1, #4]
    e348:	str	x0, [x1, #8]
    e34c:	eor	w4, w25, #0x1
    e350:	cset	w5, cc  // cc = lo, ul, last
    e354:	tst	w5, w4
    e358:	b.ne	e404 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x15c>  // b.any
    e35c:	stp	x24, x23, [x1, #16]
    e360:	str	x19, [x1, #72]
    e364:	mov	x19, x24
    e368:	cbz	x2, e448 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x1a0>
    e36c:	ldr	w5, [x2]
    e370:	mov	x4, x5
    e374:	cbz	w25, e418 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x170>
    e378:	orr	x4, x0, x4
    e37c:	mov	x2, #0x7fffffff            	// #2147483647
    e380:	cmp	x4, x2
    e384:	b.hi	e39c <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0xf4>  // b.pmore
    e388:	madd	x0, x5, x0, x0
    e38c:	mvn	x0, x0
    e390:	cmp	x0, x19
    e394:	cset	w0, hi  // hi = pmore
    e398:	str	w0, [x1, #4]
    e39c:	add	x3, x6, x3
    e3a0:	ldr	x0, [x3, #32]
    e3a4:	cbz	x0, e2ec <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x44>
    e3a8:	add	x0, x0, #0x50
    e3ac:	ldxr	x2, [x0]
    e3b0:	stlxr	w3, x1, [x0]
    e3b4:	cbnz	w3, e3ac <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x104>
    e3b8:	cmp	x2, #0x1
    e3bc:	b.eq	e2ec <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x44>  // b.none
    e3c0:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    e3c4:	mov	x1, x21
    e3c8:	mov	x0, x20
    e3cc:	ldp	x19, x20, [sp, #16]
    e3d0:	ldp	x21, x22, [sp, #32]
    e3d4:	ldp	x23, x24, [sp, #48]
    e3d8:	ldr	x25, [sp, #64]
    e3dc:	ldp	x29, x30, [sp], #80
    e3e0:	b	c260 <omp_is_initial_device@@OMP_4.0+0x660>
    e3e4:	str	wzr, [x1, #4]
    e3e8:	stp	x0, x19, [x1, #8]
    e3ec:	str	x23, [x1, #24]
    e3f0:	str	x19, [x1, #72]
    e3f4:	cbnz	x2, e36c <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0xc4>
    e3f8:	mov	x4, #0x1                   	// #1
    e3fc:	mov	x5, x4
    e400:	b	e378 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0xd0>
    e404:	stp	x19, x23, [x1, #16]
    e408:	mov	x4, #0x1                   	// #1
    e40c:	mov	x5, x4
    e410:	str	x19, [x1, #72]
    e414:	cbnz	x2, e36c <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0xc4>
    e418:	neg	x2, x0
    e41c:	mov	x0, #0x7fffffff            	// #2147483647
    e420:	orr	x4, x4, x2
    e424:	cmp	x4, x0
    e428:	b.hi	e454 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x1ac>  // b.pmore
    e42c:	madd	x0, x5, x2, x2
    e430:	add	x0, x0, #0x1
    e434:	cmp	x0, x19
    e438:	cset	w0, cc  // cc = lo, ul, last
    e43c:	orr	w0, w0, #0x2
    e440:	str	w0, [x1, #4]
    e444:	b	e39c <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0xf4>
    e448:	mov	x4, #0x1                   	// #1
    e44c:	mov	x5, x4
    e450:	b	e374 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0xcc>
    e454:	ldr	w0, [x1, #4]
    e458:	b	e43c <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x194>
    e45c:	nop

000000000000e460 <GOMP_loop_ull_guided_start@@GOMP_2.0>:
    e460:	stp	x29, x30, [sp, #-80]!
    e464:	mov	x29, sp
    e468:	stp	x19, x20, [sp, #16]
    e46c:	mov	x19, x1
    e470:	mov	x20, x5
    e474:	stp	x21, x22, [sp, #32]
    e478:	mov	x22, x2
    e47c:	mov	x21, x6
    e480:	stp	x23, x24, [sp, #48]
    e484:	mov	x23, x3
    e488:	mov	x24, x4
    e48c:	str	x25, [sp, #64]
    e490:	and	w25, w0, #0xff
    e494:	mov	x0, #0x0                   	// #0
    e498:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    e49c:	tst	w0, #0xff
    e4a0:	b.eq	e504 <GOMP_loop_ull_guided_start@@GOMP_2.0+0xa4>  // b.none
    e4a4:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    e4a8:	ldr	x1, [x1, #4016]
    e4ac:	mrs	x0, tpidr_el0
    e4b0:	mov	w2, #0x3                   	// #3
    e4b4:	cmp	w25, #0x0
    e4b8:	add	x3, x0, x1
    e4bc:	ccmp	x19, x22, #0x0, ne  // ne = any
    e4c0:	ldr	x7, [x3, #24]
    e4c4:	str	w2, [x7]
    e4c8:	str	x24, [x7, #8]
    e4cc:	b.ls	e524 <GOMP_loop_ull_guided_start@@GOMP_2.0+0xc4>  // b.plast
    e4d0:	str	wzr, [x7, #4]
    e4d4:	stp	x19, x23, [x7, #16]
    e4d8:	str	x19, [x7, #72]
    e4dc:	add	x0, x0, x1
    e4e0:	ldr	x0, [x0, #32]
    e4e4:	cbz	x0, e504 <GOMP_loop_ull_guided_start@@GOMP_2.0+0xa4>
    e4e8:	add	x0, x0, #0x50
    e4ec:	ldxr	x1, [x0]
    e4f0:	stlxr	w2, x7, [x0]
    e4f4:	cbnz	w2, e4ec <GOMP_loop_ull_guided_start@@GOMP_2.0+0x8c>
    e4f8:	cmp	x1, #0x1
    e4fc:	b.eq	e504 <GOMP_loop_ull_guided_start@@GOMP_2.0+0xa4>  // b.none
    e500:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    e504:	mov	x1, x21
    e508:	mov	x0, x20
    e50c:	ldp	x19, x20, [sp, #16]
    e510:	ldp	x21, x22, [sp, #32]
    e514:	ldp	x23, x24, [sp, #48]
    e518:	ldr	x25, [sp, #64]
    e51c:	ldp	x29, x30, [sp], #80
    e520:	b	c400 <omp_is_initial_device@@OMP_4.0+0x800>
    e524:	cmp	x19, x22
    e528:	eor	w2, w25, #0x1
    e52c:	cset	w3, cc  // cc = lo, ul, last
    e530:	tst	w3, w2
    e534:	b.ne	e554 <GOMP_loop_ull_guided_start@@GOMP_2.0+0xf4>  // b.any
    e538:	str	wzr, [x7, #4]
    e53c:	stp	x22, x23, [x7, #16]
    e540:	str	x19, [x7, #72]
    e544:	cbnz	w25, e4dc <GOMP_loop_ull_guided_start@@GOMP_2.0+0x7c>
    e548:	mov	w2, #0x2                   	// #2
    e54c:	str	w2, [x7, #4]
    e550:	b	e4dc <GOMP_loop_ull_guided_start@@GOMP_2.0+0x7c>
    e554:	stp	x19, x23, [x7, #16]
    e558:	str	x19, [x7, #72]
    e55c:	b	e548 <GOMP_loop_ull_guided_start@@GOMP_2.0+0xe8>

000000000000e560 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0>:
    e560:	adrp	x6, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    e564:	ldr	x6, [x6, #4016]
    e568:	mrs	x8, tpidr_el0
    e56c:	adrp	x7, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    e570:	add	x7, x7, #0x2b8
    e574:	add	x8, x8, x6
    e578:	mov	x9, x4
    e57c:	mov	x6, x5
    e580:	and	w0, w0, #0xff
    e584:	ldr	x8, [x8, #80]
    e588:	cmp	x8, #0x0
    e58c:	add	x8, x8, #0x90
    e590:	csel	x7, x7, x8, eq  // eq = none
    e594:	ldr	w4, [x7, #8]
    e598:	and	w8, w4, #0x7fffffff
    e59c:	cmp	w8, #0x3
    e5a0:	b.eq	e5e8 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x88>  // b.none
    e5a4:	tst	w4, #0x7ffffffc
    e5a8:	b.ne	e5c0 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x60>  // b.any
    e5ac:	cmp	w8, #0x1
    e5b0:	b.ne	e5d4 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x74>  // b.any
    e5b4:	ldrsw	x4, [x7, #12]
    e5b8:	mov	x5, x9
    e5bc:	b	e190 <GOMP_loop_ull_static_start@@GOMP_2.0>
    e5c0:	cmp	w8, #0x4
    e5c4:	b.ne	e5f4 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x94>  // b.any
    e5c8:	mov	x5, x9
    e5cc:	mov	x4, #0x0                   	// #0
    e5d0:	b	e190 <GOMP_loop_ull_static_start@@GOMP_2.0>
    e5d4:	cmp	w8, #0x2
    e5d8:	b.ne	e5f4 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x94>  // b.any
    e5dc:	ldrsw	x4, [x7, #12]
    e5e0:	mov	x5, x9
    e5e4:	b	e2a8 <GOMP_loop_ull_dynamic_start@@GOMP_2.0>
    e5e8:	ldrsw	x4, [x7, #12]
    e5ec:	mov	x5, x9
    e5f0:	b	e460 <GOMP_loop_ull_guided_start@@GOMP_2.0>
    e5f4:	stp	x29, x30, [sp, #-16]!
    e5f8:	mov	x29, sp
    e5fc:	bl	8870 <abort@plt>

000000000000e600 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0>:
    e600:	stp	x29, x30, [sp, #-96]!
    e604:	mov	x29, sp
    e608:	stp	x25, x26, [sp, #64]
    e60c:	mov	x25, x4
    e610:	adrp	x26, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    e614:	ldr	x26, [x26, #4016]
    e618:	stp	x21, x22, [sp, #32]
    e61c:	mrs	x22, tpidr_el0
    e620:	mov	x21, x6
    e624:	stp	x27, x28, [sp, #80]
    e628:	add	x28, x22, x26
    e62c:	and	w27, w0, #0xff
    e630:	stp	x19, x20, [sp, #16]
    e634:	mov	x0, #0x1                   	// #1
    e638:	mov	x19, x1
    e63c:	stp	x23, x24, [sp, #48]
    e640:	mov	x20, x5
    e644:	mov	x23, x2
    e648:	mov	x24, x3
    e64c:	str	xzr, [x28, #72]
    e650:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    e654:	tst	w0, #0xff
    e658:	b.eq	e6b4 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0xb4>  // b.none
    e65c:	ldr	x0, [x28, #24]
    e660:	mov	w1, #0x1                   	// #1
    e664:	cmp	w27, #0x0
    e668:	ccmp	x19, x23, #0x0, ne  // ne = any
    e66c:	str	w1, [x0]
    e670:	str	x25, [x0, #8]
    e674:	b.ls	e6e4 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0xe4>  // b.plast
    e678:	str	wzr, [x0, #4]
    e67c:	stp	x19, x24, [x0, #16]
    e680:	str	x19, [x0, #72]
    e684:	add	x22, x22, x26
    e688:	bl	fdd0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2a8>
    e68c:	ldr	x0, [x22, #32]
    e690:	cbz	x0, e6b4 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0xb4>
    e694:	ldr	x2, [x22, #24]
    e698:	add	x0, x0, #0x50
    e69c:	ldxr	x1, [x0]
    e6a0:	stlxr	w3, x2, [x0]
    e6a4:	cbnz	w3, e69c <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x9c>
    e6a8:	cmp	x1, #0x1
    e6ac:	b.eq	e6b4 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0xb4>  // b.none
    e6b0:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    e6b4:	mov	x1, x21
    e6b8:	mov	x0, x20
    e6bc:	bl	c040 <omp_is_initial_device@@OMP_4.0+0x440>
    e6c0:	cmp	w0, #0x0
    e6c4:	cset	w0, eq  // eq = none
    e6c8:	ldp	x19, x20, [sp, #16]
    e6cc:	ldp	x21, x22, [sp, #32]
    e6d0:	ldp	x23, x24, [sp, #48]
    e6d4:	ldp	x25, x26, [sp, #64]
    e6d8:	ldp	x27, x28, [sp, #80]
    e6dc:	ldp	x29, x30, [sp], #96
    e6e0:	ret
    e6e4:	cmp	x19, x23
    e6e8:	eor	w1, w27, w1
    e6ec:	cset	w2, cc  // cc = lo, ul, last
    e6f0:	tst	w2, w1
    e6f4:	b.ne	e714 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x114>  // b.any
    e6f8:	str	wzr, [x0, #4]
    e6fc:	stp	x23, x24, [x0, #16]
    e700:	str	x19, [x0, #72]
    e704:	cbnz	w27, e684 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x84>
    e708:	mov	w1, #0x2                   	// #2
    e70c:	str	w1, [x0, #4]
    e710:	b	e684 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x84>
    e714:	stp	x19, x24, [x0, #16]
    e718:	str	x19, [x0, #72]
    e71c:	b	e708 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x108>

000000000000e720 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0>:
    e720:	stp	x29, x30, [sp, #-96]!
    e724:	mov	x29, sp
    e728:	stp	x19, x20, [sp, #16]
    e72c:	mov	x20, x1
    e730:	adrp	x19, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    e734:	ldr	x19, [x19, #4016]
    e738:	stp	x21, x22, [sp, #32]
    e73c:	mov	x21, x2
    e740:	mov	x22, x3
    e744:	stp	x23, x24, [sp, #48]
    e748:	mov	x23, x4
    e74c:	mov	x24, x5
    e750:	stp	x25, x26, [sp, #64]
    e754:	mov	x26, x6
    e758:	and	w25, w0, #0xff
    e75c:	mov	x0, #0x1                   	// #1
    e760:	str	x27, [sp, #80]
    e764:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    e768:	mrs	x27, tpidr_el0
    e76c:	tst	w0, #0xff
    e770:	b.ne	e7f0 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0xd0>  // b.any
    e774:	add	x0, x27, x19
    e778:	mov	w2, #0x1                   	// #1
    e77c:	ldr	x0, [x0, #24]
    e780:	add	x0, x0, #0x40
    e784:	ldaxr	w1, [x0]
    e788:	cbnz	w1, e794 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x74>
    e78c:	stxr	w3, w2, [x0]
    e790:	cbnz	w3, e784 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x64>
    e794:	cmp	w1, #0x0
    e798:	b.ne	e980 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x260>  // b.any
    e79c:	mov	x1, x26
    e7a0:	mov	x0, x24
    e7a4:	bl	c1f8 <omp_is_initial_device@@OMP_4.0+0x5f8>
    e7a8:	mov	w20, w0
    e7ac:	tst	w0, #0xff
    e7b0:	b.ne	e8d8 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x1b8>  // b.any
    e7b4:	add	x19, x27, x19
    e7b8:	ldr	x1, [x19, #24]
    e7bc:	add	x1, x1, #0x40
    e7c0:	ldxr	w0, [x1]
    e7c4:	stlxr	w2, wzr, [x1]
    e7c8:	cbnz	w2, e7c0 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0xa0>
    e7cc:	tbnz	w0, #31, e900 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x1e0>
    e7d0:	mov	w0, w20
    e7d4:	ldp	x19, x20, [sp, #16]
    e7d8:	ldp	x21, x22, [sp, #32]
    e7dc:	ldp	x23, x24, [sp, #48]
    e7e0:	ldp	x25, x26, [sp, #64]
    e7e4:	ldr	x27, [sp, #80]
    e7e8:	ldp	x29, x30, [sp], #96
    e7ec:	ret
    e7f0:	add	x2, x27, x19
    e7f4:	mov	w3, #0x2                   	// #2
    e7f8:	cmp	w25, #0x0
    e7fc:	mul	x1, x22, x23
    e800:	ccmp	x20, x21, #0x0, ne  // ne = any
    e804:	ldr	x0, [x2, #24]
    e808:	ldr	x2, [x2, #16]
    e80c:	str	w3, [x0]
    e810:	str	x23, [x0, #8]
    e814:	b.hi	e8e0 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x1c0>  // b.pmore
    e818:	cmp	x20, x21
    e81c:	str	wzr, [x0, #4]
    e820:	str	x1, [x0, #8]
    e824:	eor	w3, w25, #0x1
    e828:	cset	w4, cc  // cc = lo, ul, last
    e82c:	tst	w4, w3
    e830:	b.ne	e928 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x208>  // b.any
    e834:	stp	x21, x22, [x0, #16]
    e838:	str	x20, [x0, #72]
    e83c:	mov	x20, x21
    e840:	cbz	x2, e96c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x24c>
    e844:	ldr	w4, [x2]
    e848:	mov	x3, x4
    e84c:	cbz	w25, e93c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x21c>
    e850:	orr	x3, x3, x1
    e854:	mov	x2, #0x7fffffff            	// #2147483647
    e858:	cmp	x3, x2
    e85c:	b.hi	e874 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x154>  // b.pmore
    e860:	madd	x1, x4, x1, x1
    e864:	mvn	x1, x1
    e868:	cmp	x1, x20
    e86c:	cset	w1, hi  // hi = pmore
    e870:	str	w1, [x0, #4]
    e874:	add	x0, x0, #0x40
    e878:	mov	w2, #0x1                   	// #1
    e87c:	ldaxr	w1, [x0]
    e880:	cbnz	w1, e88c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x16c>
    e884:	stxr	w3, w2, [x0]
    e888:	cbnz	w3, e87c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x15c>
    e88c:	cmp	w1, #0x0
    e890:	b.ne	e988 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x268>  // b.any
    e894:	add	x1, x27, x19
    e898:	ldr	x0, [x1, #32]
    e89c:	cbz	x0, e79c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x7c>
    e8a0:	ldr	x2, [x1, #24]
    e8a4:	add	x0, x0, #0x50
    e8a8:	ldxr	x1, [x0]
    e8ac:	stlxr	w3, x2, [x0]
    e8b0:	cbnz	w3, e8a8 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x188>
    e8b4:	cmp	x1, #0x1
    e8b8:	b.eq	e79c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x7c>  // b.none
    e8bc:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    e8c0:	mov	x1, x26
    e8c4:	mov	x0, x24
    e8c8:	bl	c1f8 <omp_is_initial_device@@OMP_4.0+0x5f8>
    e8cc:	mov	w20, w0
    e8d0:	tst	w0, #0xff
    e8d4:	b.eq	e7b4 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x94>  // b.none
    e8d8:	bl	fb90 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x68>
    e8dc:	b	e7b4 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x94>
    e8e0:	str	wzr, [x0, #4]
    e8e4:	stp	x1, x20, [x0, #8]
    e8e8:	str	x22, [x0, #24]
    e8ec:	str	x20, [x0, #72]
    e8f0:	cbnz	x2, e844 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x124>
    e8f4:	mov	x3, #0x1                   	// #1
    e8f8:	mov	x4, x3
    e8fc:	b	e850 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x130>
    e900:	mov	x0, x1
    e904:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
    e908:	mov	w0, w20
    e90c:	ldp	x19, x20, [sp, #16]
    e910:	ldp	x21, x22, [sp, #32]
    e914:	ldp	x23, x24, [sp, #48]
    e918:	ldp	x25, x26, [sp, #64]
    e91c:	ldr	x27, [sp, #80]
    e920:	ldp	x29, x30, [sp], #96
    e924:	ret
    e928:	stp	x20, x22, [x0, #16]
    e92c:	mov	x3, #0x1                   	// #1
    e930:	mov	x4, x3
    e934:	str	x20, [x0, #72]
    e938:	cbnz	x2, e844 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x124>
    e93c:	neg	x2, x1
    e940:	mov	x1, #0x7fffffff            	// #2147483647
    e944:	orr	x3, x3, x2
    e948:	cmp	x3, x1
    e94c:	b.hi	e978 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x258>  // b.pmore
    e950:	madd	x1, x4, x2, x2
    e954:	add	x1, x1, #0x1
    e958:	cmp	x1, x20
    e95c:	cset	w1, cc  // cc = lo, ul, last
    e960:	orr	w1, w1, #0x2
    e964:	str	w1, [x0, #4]
    e968:	b	e874 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x154>
    e96c:	mov	x3, #0x1                   	// #1
    e970:	mov	x4, x3
    e974:	b	e84c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x12c>
    e978:	ldr	w1, [x0, #4]
    e97c:	b	e960 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x240>
    e980:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    e984:	b	e79c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x7c>
    e988:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    e98c:	b	e894 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x174>

000000000000e990 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0>:
    e990:	stp	x29, x30, [sp, #-96]!
    e994:	mov	x29, sp
    e998:	stp	x19, x20, [sp, #16]
    e99c:	mov	x20, x1
    e9a0:	mrs	x19, tpidr_el0
    e9a4:	stp	x21, x22, [sp, #32]
    e9a8:	mov	x22, x5
    e9ac:	mov	x21, x6
    e9b0:	stp	x23, x24, [sp, #48]
    e9b4:	mov	x23, x2
    e9b8:	mov	x24, x3
    e9bc:	stp	x25, x26, [sp, #64]
    e9c0:	mov	x25, x4
    e9c4:	and	w26, w0, #0xff
    e9c8:	mov	x0, #0x1                   	// #1
    e9cc:	str	x27, [sp, #80]
    e9d0:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    e9d4:	adrp	x27, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    e9d8:	ldr	x27, [x27, #4016]
    e9dc:	tst	w0, #0xff
    e9e0:	b.eq	ea7c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xec>  // b.none
    e9e4:	add	x0, x19, x27
    e9e8:	mov	w1, #0x3                   	// #3
    e9ec:	cmp	w26, #0x0
    e9f0:	ccmp	x20, x23, #0x0, ne  // ne = any
    e9f4:	ldr	x0, [x0, #24]
    e9f8:	str	w1, [x0]
    e9fc:	str	x25, [x0, #8]
    ea00:	b.ls	eaf8 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x168>  // b.plast
    ea04:	str	wzr, [x0, #4]
    ea08:	stp	x20, x24, [x0, #16]
    ea0c:	str	x20, [x0, #72]
    ea10:	add	x0, x0, #0x40
    ea14:	mov	w2, #0x1                   	// #1
    ea18:	ldaxr	w1, [x0]
    ea1c:	cbnz	w1, ea28 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x98>
    ea20:	stxr	w3, w2, [x0]
    ea24:	cbnz	w3, ea18 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x88>
    ea28:	cmp	w1, #0x0
    ea2c:	b.ne	eb64 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x1d4>  // b.any
    ea30:	add	x1, x19, x27
    ea34:	ldr	x0, [x1, #32]
    ea38:	cbz	x0, eaa4 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x114>
    ea3c:	ldr	x2, [x1, #24]
    ea40:	add	x0, x0, #0x50
    ea44:	ldxr	x1, [x0]
    ea48:	stlxr	w3, x2, [x0]
    ea4c:	cbnz	w3, ea44 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xb4>
    ea50:	cmp	x1, #0x1
    ea54:	b.eq	eaa4 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x114>  // b.none
    ea58:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    ea5c:	mov	x1, x21
    ea60:	mov	x0, x22
    ea64:	bl	c358 <omp_is_initial_device@@OMP_4.0+0x758>
    ea68:	mov	w20, w0
    ea6c:	tst	w0, #0xff
    ea70:	b.eq	eabc <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x12c>  // b.none
    ea74:	bl	fb90 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x68>
    ea78:	b	eabc <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x12c>
    ea7c:	add	x0, x19, x27
    ea80:	mov	w2, #0x1                   	// #1
    ea84:	ldr	x0, [x0, #24]
    ea88:	add	x0, x0, #0x40
    ea8c:	ldaxr	w1, [x0]
    ea90:	cbnz	w1, ea9c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x10c>
    ea94:	stxr	w3, w2, [x0]
    ea98:	cbnz	w3, ea8c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xfc>
    ea9c:	cmp	w1, #0x0
    eaa0:	b.ne	eb5c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x1cc>  // b.any
    eaa4:	mov	x1, x21
    eaa8:	mov	x0, x22
    eaac:	bl	c358 <omp_is_initial_device@@OMP_4.0+0x758>
    eab0:	mov	w20, w0
    eab4:	tst	w0, #0xff
    eab8:	b.ne	ea74 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xe4>  // b.any
    eabc:	add	x19, x19, x27
    eac0:	ldr	x1, [x19, #24]
    eac4:	add	x1, x1, #0x40
    eac8:	ldxr	w0, [x1]
    eacc:	stlxr	w2, wzr, [x1]
    ead0:	cbnz	w2, eac8 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x138>
    ead4:	tbnz	w0, #31, eb34 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x1a4>
    ead8:	mov	w0, w20
    eadc:	ldp	x19, x20, [sp, #16]
    eae0:	ldp	x21, x22, [sp, #32]
    eae4:	ldp	x23, x24, [sp, #48]
    eae8:	ldp	x25, x26, [sp, #64]
    eaec:	ldr	x27, [sp, #80]
    eaf0:	ldp	x29, x30, [sp], #96
    eaf4:	ret
    eaf8:	cmp	x20, x23
    eafc:	eor	w1, w26, #0x1
    eb00:	cset	w2, cc  // cc = lo, ul, last
    eb04:	tst	w2, w1
    eb08:	b.ne	eb28 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x198>  // b.any
    eb0c:	str	wzr, [x0, #4]
    eb10:	stp	x23, x24, [x0, #16]
    eb14:	str	x20, [x0, #72]
    eb18:	cbnz	w26, ea10 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x80>
    eb1c:	mov	w1, #0x2                   	// #2
    eb20:	str	w1, [x0, #4]
    eb24:	b	ea10 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x80>
    eb28:	stp	x20, x24, [x0, #16]
    eb2c:	str	x20, [x0, #72]
    eb30:	b	eb1c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x18c>
    eb34:	mov	x0, x1
    eb38:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
    eb3c:	mov	w0, w20
    eb40:	ldp	x19, x20, [sp, #16]
    eb44:	ldp	x21, x22, [sp, #32]
    eb48:	ldp	x23, x24, [sp, #48]
    eb4c:	ldp	x25, x26, [sp, #64]
    eb50:	ldr	x27, [sp, #80]
    eb54:	ldp	x29, x30, [sp], #96
    eb58:	ret
    eb5c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    eb60:	b	eaa4 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x114>
    eb64:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    eb68:	b	ea30 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xa0>
    eb6c:	nop

000000000000eb70 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0>:
    eb70:	adrp	x6, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    eb74:	ldr	x6, [x6, #4016]
    eb78:	mrs	x8, tpidr_el0
    eb7c:	adrp	x7, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    eb80:	add	x7, x7, #0x2b8
    eb84:	add	x8, x8, x6
    eb88:	mov	x9, x4
    eb8c:	mov	x6, x5
    eb90:	and	w0, w0, #0xff
    eb94:	ldr	x8, [x8, #80]
    eb98:	cmp	x8, #0x0
    eb9c:	add	x8, x8, #0x90
    eba0:	csel	x7, x7, x8, eq  // eq = none
    eba4:	ldr	w4, [x7, #8]
    eba8:	and	w8, w4, #0x7fffffff
    ebac:	cmp	w8, #0x3
    ebb0:	b.eq	ebf8 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x88>  // b.none
    ebb4:	tst	w4, #0x7ffffffc
    ebb8:	b.ne	ebd0 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x60>  // b.any
    ebbc:	cmp	w8, #0x1
    ebc0:	b.ne	ebe4 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x74>  // b.any
    ebc4:	ldrsw	x4, [x7, #12]
    ebc8:	mov	x5, x9
    ebcc:	b	e600 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0>
    ebd0:	cmp	w8, #0x4
    ebd4:	b.ne	ec04 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x94>  // b.any
    ebd8:	mov	x5, x9
    ebdc:	mov	x4, #0x0                   	// #0
    ebe0:	b	e600 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0>
    ebe4:	cmp	w8, #0x2
    ebe8:	b.ne	ec04 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x94>  // b.any
    ebec:	ldrsw	x4, [x7, #12]
    ebf0:	mov	x5, x9
    ebf4:	b	e720 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0>
    ebf8:	ldrsw	x4, [x7, #12]
    ebfc:	mov	x5, x9
    ec00:	b	e990 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0>
    ec04:	stp	x29, x30, [sp, #-16]!
    ec08:	mov	x29, sp
    ec0c:	bl	8870 <abort@plt>

000000000000ec10 <GOMP_loop_ull_ordered_start@@GOMP_5.0>:
    ec10:	stp	x29, x30, [sp, #-112]!
    ec14:	mov	x29, sp
    ec18:	stp	x19, x20, [sp, #16]
    ec1c:	mrs	x19, tpidr_el0
    ec20:	adrp	x20, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    ec24:	ldr	x20, [x20, #4016]
    ec28:	stp	x21, x22, [sp, #32]
    ec2c:	mov	x22, x1
    ec30:	add	x8, x19, x20
    ec34:	stp	x25, x26, [sp, #64]
    ec38:	mov	x26, x2
    ec3c:	ldp	x25, x21, [sp, #112]
    ec40:	stp	x23, x24, [sp, #48]
    ec44:	mov	x23, x6
    ec48:	stp	x27, x28, [sp, #80]
    ec4c:	mov	x24, x7
    ec50:	mov	x27, x4
    ec54:	str	xzr, [x8, #72]
    ec58:	and	w28, w0, #0xff
    ec5c:	stp	x3, x5, [sp, #96]
    ec60:	cbz	x25, ec68 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x58>
    ec64:	bl	17f28 <GOMP_task_reduction_remap@@GOMP_5.0+0x470>
    ec68:	mov	x0, #0x1                   	// #1
    ec6c:	cbz	x21, ec78 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x68>
    ec70:	ldr	x0, [x21]
    ec74:	add	x0, x0, #0x1
    ec78:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    ec7c:	tst	w0, #0xff
    ec80:	b.ne	ede8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1d8>  // b.any
    ec84:	add	x22, x19, x20
    ec88:	ldr	x1, [x22, #24]
    ec8c:	cbz	x25, eca0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x90>
    ec90:	ldr	x1, [x1, #88]
    ec94:	mov	x0, x25
    ec98:	bl	17d50 <GOMP_task_reduction_remap@@GOMP_5.0+0x298>
    ec9c:	ldr	x1, [x22, #24]
    eca0:	ldr	w27, [x1]
    eca4:	cmp	x27, #0x1
    eca8:	b.eq	ed68 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x158>  // b.none
    ecac:	add	x0, x1, #0x40
    ecb0:	mov	w2, #0x1                   	// #1
    ecb4:	ldaxr	w1, [x0]
    ecb8:	cbnz	w1, ecc4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xb4>
    ecbc:	stxr	w3, w2, [x0]
    ecc0:	cbnz	w3, ecb4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xa4>
    ecc4:	cmp	w1, #0x0
    ecc8:	b.ne	efb0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x3a0>  // b.any
    eccc:	cbz	x21, ed04 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xf4>
    ecd0:	add	x0, x19, x20
    ecd4:	ldr	x1, [x0, #24]
    ecd8:	add	x3, x19, x20
    ecdc:	ldr	x0, [x1, #32]
    ece0:	mov	x2, #0x4                   	// #4
    ece4:	ldr	x1, [x3, #16]
    ece8:	cbz	x1, ecf4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xe4>
    ecec:	ldr	w2, [x1]
    ecf0:	lsl	x2, x2, #2
    ecf4:	add	x0, x0, x2
    ecf8:	add	x0, x0, #0x7
    ecfc:	and	x0, x0, #0xfffffffffffffff8
    ed00:	str	x0, [x21]
    ed04:	cmp	x27, #0x2
    ed08:	b.eq	edcc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1bc>  // b.none
    ed0c:	b.le	edac <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x19c>
    ed10:	cmp	x27, #0x3
    ed14:	b.ne	eda0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x190>  // b.any
    ed18:	mov	x1, x24
    ed1c:	mov	x0, x23
    ed20:	bl	c358 <omp_is_initial_device@@OMP_4.0+0x758>
    ed24:	and	w21, w0, #0xff
    ed28:	cbnz	w21, ede0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1d0>
    ed2c:	add	x19, x19, x20
    ed30:	ldr	x0, [x19, #24]
    ed34:	add	x0, x0, #0x40
    ed38:	ldxr	w1, [x0]
    ed3c:	stlxr	w2, wzr, [x0]
    ed40:	cbnz	w2, ed38 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x128>
    ed44:	tbnz	w1, #31, efa8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x398>
    ed48:	mov	w0, w21
    ed4c:	ldp	x19, x20, [sp, #16]
    ed50:	ldp	x21, x22, [sp, #32]
    ed54:	ldp	x23, x24, [sp, #48]
    ed58:	ldp	x25, x26, [sp, #64]
    ed5c:	ldp	x27, x28, [sp, #80]
    ed60:	ldp	x29, x30, [sp], #112
    ed64:	ret
    ed68:	cbnz	x21, ecd8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xc8>
    ed6c:	mov	x1, x24
    ed70:	mov	x0, x23
    ed74:	bl	c040 <omp_is_initial_device@@OMP_4.0+0x440>
    ed78:	cmp	w0, #0x0
    ed7c:	cset	w21, eq  // eq = none
    ed80:	mov	w0, w21
    ed84:	ldp	x19, x20, [sp, #16]
    ed88:	ldp	x21, x22, [sp, #32]
    ed8c:	ldp	x23, x24, [sp, #48]
    ed90:	ldp	x25, x26, [sp, #64]
    ed94:	ldp	x27, x28, [sp, #80]
    ed98:	ldp	x29, x30, [sp], #112
    ed9c:	ret
    eda0:	cmp	x27, #0x4
    eda4:	b.eq	ed6c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x15c>  // b.none
    eda8:	bl	8870 <abort@plt>
    edac:	cmp	x27, #0x1
    edb0:	b.ne	eda8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x198>  // b.any
    edb4:	mov	x1, x24
    edb8:	mov	x0, x23
    edbc:	bl	c040 <omp_is_initial_device@@OMP_4.0+0x440>
    edc0:	cmp	w0, #0x0
    edc4:	cset	w21, eq  // eq = none
    edc8:	b	ed80 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x170>
    edcc:	mov	x1, x24
    edd0:	mov	x0, x23
    edd4:	bl	c1f8 <omp_is_initial_device@@OMP_4.0+0x5f8>
    edd8:	and	w21, w0, #0xff
    eddc:	cbz	w21, ed2c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x11c>
    ede0:	bl	fb90 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x68>
    ede4:	b	ed2c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x11c>
    ede8:	mov	x0, x27
    edec:	add	x1, sp, #0x68
    edf0:	bl	e108 <GOMP_loop_end_nowait@@GOMP_1.0+0x8>
    edf4:	mov	x27, x0
    edf8:	add	x2, x19, x20
    edfc:	cmp	w28, #0x0
    ee00:	ldr	x1, [sp, #104]
    ee04:	ccmp	x22, x26, #0x0, ne  // ne = any
    ee08:	ldr	x0, [x2, #24]
    ee0c:	str	w27, [x0]
    ee10:	str	x1, [x0, #8]
    ee14:	b.ls	ef04 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2f4>  // b.plast
    ee18:	ldr	x3, [sp, #96]
    ee1c:	str	wzr, [x0, #4]
    ee20:	stp	x22, x3, [x0, #16]
    ee24:	cmp	w27, #0x2
    ee28:	str	x22, [x0, #72]
    ee2c:	b.ne	ee7c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x26c>  // b.any
    ee30:	ldr	x3, [sp, #96]
    ee34:	ldr	x2, [x2, #16]
    ee38:	mul	x1, x1, x3
    ee3c:	mov	x3, #0x1                   	// #1
    ee40:	str	x1, [x0, #8]
    ee44:	mov	x4, x3
    ee48:	cbz	x2, ee58 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x248>
    ee4c:	ldr	w4, [x2]
    ee50:	mov	x3, x4
    ee54:	cbz	w28, ef70 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x360>
    ee58:	orr	x3, x1, x3
    ee5c:	mov	x2, #0x7fffffff            	// #2147483647
    ee60:	cmp	x3, x2
    ee64:	b.hi	ee7c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x26c>  // b.pmore
    ee68:	madd	x1, x4, x1, x1
    ee6c:	mvn	x1, x1
    ee70:	cmp	x1, x22
    ee74:	cset	w1, hi  // hi = pmore
    ee78:	str	w1, [x0, #4]
    ee7c:	cbz	x25, eea4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x294>
    ee80:	mov	x0, x25
    ee84:	bl	15d78 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    ee88:	add	x0, x19, x20
    ee8c:	mov	w2, #0x1                   	// #1
    ee90:	ldr	x1, [x0, #80]
    ee94:	ldr	x0, [x0, #24]
    ee98:	ldr	x1, [x1, #40]
    ee9c:	strb	w2, [x1, #50]
    eea0:	str	x25, [x0, #88]
    eea4:	cmp	x27, #0x1
    eea8:	b.eq	efa0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x390>  // b.none
    eeac:	add	x0, x19, x20
    eeb0:	mov	w2, #0x1                   	// #1
    eeb4:	ldr	x0, [x0, #24]
    eeb8:	add	x0, x0, #0x40
    eebc:	ldaxr	w1, [x0]
    eec0:	cbnz	w1, eecc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2bc>
    eec4:	stxr	w3, w2, [x0]
    eec8:	cbnz	w3, eebc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2ac>
    eecc:	cmp	w1, #0x0
    eed0:	b.ne	efe8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x3d8>  // b.any
    eed4:	add	x1, x19, x20
    eed8:	ldr	x0, [x1, #32]
    eedc:	cbz	x0, eccc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xbc>
    eee0:	ldr	x2, [x1, #24]
    eee4:	add	x0, x0, #0x50
    eee8:	ldxr	x1, [x0]
    eeec:	stlxr	w3, x2, [x0]
    eef0:	cbnz	w3, eee8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2d8>
    eef4:	cmp	x1, #0x1
    eef8:	b.eq	eccc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xbc>  // b.none
    eefc:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    ef00:	b	eccc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xbc>
    ef04:	cmp	x22, x26
    ef08:	str	wzr, [x0, #4]
    ef0c:	eor	w3, w28, #0x1
    ef10:	cset	w5, cc  // cc = lo, ul, last
    ef14:	tst	w5, w3
    ef18:	b.ne	ef40 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x330>  // b.any
    ef1c:	ldr	x3, [sp, #96]
    ef20:	stp	x26, x3, [x0, #16]
    ef24:	cmp	w27, #0x2
    ef28:	str	x22, [x0, #72]
    ef2c:	b.eq	efb8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x3a8>  // b.none
    ef30:	cbnz	w28, ee7c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x26c>
    ef34:	mov	w1, #0x2                   	// #2
    ef38:	str	w1, [x0, #4]
    ef3c:	b	ee7c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x26c>
    ef40:	ldr	x3, [sp, #96]
    ef44:	stp	x22, x3, [x0, #16]
    ef48:	cmp	w27, #0x2
    ef4c:	str	x22, [x0, #72]
    ef50:	b.ne	ef34 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x324>  // b.any
    ef54:	ldr	x3, [sp, #96]
    ef58:	ldr	x2, [x2, #16]
    ef5c:	mul	x1, x1, x3
    ef60:	mov	x3, #0x1                   	// #1
    ef64:	str	x1, [x0, #8]
    ef68:	mov	x4, x3
    ef6c:	cbnz	x2, ee4c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x23c>
    ef70:	neg	x2, x1
    ef74:	mov	x1, #0x7fffffff            	// #2147483647
    ef78:	orr	x3, x2, x3
    ef7c:	cmp	x3, x1
    ef80:	b.hi	efd8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x3c8>  // b.pmore
    ef84:	madd	x1, x4, x2, x2
    ef88:	add	x1, x1, #0x1
    ef8c:	cmp	x1, x22
    ef90:	cset	w1, cc  // cc = lo, ul, last
    ef94:	orr	w1, w1, #0x2
    ef98:	str	w1, [x0, #4]
    ef9c:	b	ee7c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x26c>
    efa0:	bl	fdd0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2a8>
    efa4:	b	eed4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2c4>
    efa8:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
    efac:	b	ed48 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x138>
    efb0:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    efb4:	b	eccc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xbc>
    efb8:	ldr	x2, [x2, #16]
    efbc:	mul	x1, x1, x3
    efc0:	str	x1, [x0, #8]
    efc4:	mov	x22, x26
    efc8:	cbnz	x2, ee4c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x23c>
    efcc:	mov	x3, #0x1                   	// #1
    efd0:	mov	x4, x3
    efd4:	b	ee54 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x244>
    efd8:	ldr	w1, [x0, #4]
    efdc:	orr	w1, w1, #0x2
    efe0:	str	w1, [x0, #4]
    efe4:	b	ee7c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x26c>
    efe8:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    efec:	b	eed4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2c4>

000000000000eff0 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5>:
    eff0:	stp	x29, x30, [sp, #-64]!
    eff4:	mrs	x5, tpidr_el0
    eff8:	mov	x29, sp
    effc:	stp	x19, x20, [sp, #16]
    f000:	mov	x20, x3
    f004:	adrp	x19, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    f008:	ldr	x19, [x19, #4016]
    f00c:	stp	x21, x22, [sp, #32]
    f010:	mov	x22, x1
    f014:	add	x19, x5, x19
    f018:	stp	x23, x24, [sp, #48]
    f01c:	mov	x21, x4
    f020:	mov	w23, w0
    f024:	mov	x24, x2
    f028:	mov	x0, #0x0                   	// #0
    f02c:	str	xzr, [x19, #72]
    f030:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    f034:	tst	w0, #0xff
    f038:	b.ne	f064 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0x74>  // b.any
    f03c:	mov	x1, x21
    f040:	mov	x0, x20
    f044:	bl	c040 <omp_is_initial_device@@OMP_4.0+0x440>
    f048:	cmp	w0, #0x0
    f04c:	cset	w0, eq  // eq = none
    f050:	ldp	x19, x20, [sp, #16]
    f054:	ldp	x21, x22, [sp, #32]
    f058:	ldp	x23, x24, [sp, #48]
    f05c:	ldp	x29, x30, [sp], #64
    f060:	ret
    f064:	ldr	x4, [x19, #24]
    f068:	mov	x5, #0x1                   	// #1
    f06c:	ldr	x3, [x22]
    f070:	mov	w0, w23
    f074:	stp	x5, x24, [x4]
    f078:	mov	x2, x24
    f07c:	mov	x1, x22
    f080:	stp	x3, x5, [x4, #16]
    f084:	mov	x3, #0x0                   	// #0
    f088:	str	xzr, [x4, #72]
    f08c:	bl	105d8 <GOMP_doacross_wait@@GOMP_4.5+0x260>
    f090:	ldr	x0, [x19, #32]
    f094:	cbz	x0, f03c <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0x4c>
    f098:	ldr	x2, [x19, #24]
    f09c:	add	x0, x0, #0x50
    f0a0:	ldxr	x1, [x0]
    f0a4:	stlxr	w3, x2, [x0]
    f0a8:	cbnz	w3, f0a0 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0xb0>
    f0ac:	cmp	x1, #0x1
    f0b0:	b.eq	f03c <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0x4c>  // b.none
    f0b4:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    f0b8:	b	f03c <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0x4c>
    f0bc:	nop

000000000000f0c0 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5>:
    f0c0:	stp	x29, x30, [sp, #-80]!
    f0c4:	mov	x29, sp
    f0c8:	stp	x19, x20, [sp, #16]
    f0cc:	mov	x19, x2
    f0d0:	mov	x20, x3
    f0d4:	stp	x21, x22, [sp, #32]
    f0d8:	mov	x22, x1
    f0dc:	mov	x21, x4
    f0e0:	stp	x23, x24, [sp, #48]
    f0e4:	mov	w23, w0
    f0e8:	mov	x0, #0x0                   	// #0
    f0ec:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    f0f0:	tst	w0, #0xff
    f0f4:	b.ne	f114 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x54>  // b.any
    f0f8:	mov	x1, x21
    f0fc:	mov	x0, x20
    f100:	ldp	x19, x20, [sp, #16]
    f104:	ldp	x21, x22, [sp, #32]
    f108:	ldp	x23, x24, [sp, #48]
    f10c:	ldp	x29, x30, [sp], #80
    f110:	b	c260 <omp_is_initial_device@@OMP_4.0+0x660>
    f114:	ldr	x3, [x22]
    f118:	str	x25, [sp, #64]
    f11c:	adrp	x25, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    f120:	ldr	x25, [x25, #4016]
    f124:	mrs	x24, tpidr_el0
    f128:	mov	x4, #0x2                   	// #2
    f12c:	mov	x1, #0x1                   	// #1
    f130:	add	x2, x24, x25
    f134:	ldr	x0, [x2, #24]
    f138:	stp	x4, x19, [x0]
    f13c:	ldr	x2, [x2, #16]
    f140:	str	x3, [x0, #16]
    f144:	str	x1, [x0, #24]
    f148:	str	xzr, [x0, #72]
    f14c:	cbz	x2, f1fc <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x13c>
    f150:	ldr	w2, [x2]
    f154:	mov	x1, x2
    f158:	orr	x1, x19, x1
    f15c:	mov	x4, #0x7fffffff            	// #2147483647
    f160:	cmp	x1, x4
    f164:	b.hi	f17c <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0xbc>  // b.pmore
    f168:	madd	x2, x2, x19, x19
    f16c:	mvn	x2, x2
    f170:	cmp	x3, x2
    f174:	cset	w1, cc  // cc = lo, ul, last
    f178:	str	w1, [x0, #4]
    f17c:	add	x24, x24, x25
    f180:	mov	w0, w23
    f184:	mov	x2, x19
    f188:	mov	x1, x22
    f18c:	mov	x3, #0x0                   	// #0
    f190:	bl	105d8 <GOMP_doacross_wait@@GOMP_4.5+0x260>
    f194:	ldr	x0, [x24, #32]
    f198:	cbz	x0, f1dc <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x11c>
    f19c:	ldr	x2, [x24, #24]
    f1a0:	add	x0, x0, #0x50
    f1a4:	ldxr	x1, [x0]
    f1a8:	stlxr	w3, x2, [x0]
    f1ac:	cbnz	w3, f1a4 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0xe4>
    f1b0:	cmp	x1, #0x1
    f1b4:	b.eq	f1dc <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x11c>  // b.none
    f1b8:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    f1bc:	mov	x1, x21
    f1c0:	mov	x0, x20
    f1c4:	ldp	x19, x20, [sp, #16]
    f1c8:	ldp	x21, x22, [sp, #32]
    f1cc:	ldp	x23, x24, [sp, #48]
    f1d0:	ldr	x25, [sp, #64]
    f1d4:	ldp	x29, x30, [sp], #80
    f1d8:	b	c260 <omp_is_initial_device@@OMP_4.0+0x660>
    f1dc:	mov	x1, x21
    f1e0:	mov	x0, x20
    f1e4:	ldp	x19, x20, [sp, #16]
    f1e8:	ldp	x21, x22, [sp, #32]
    f1ec:	ldp	x23, x24, [sp, #48]
    f1f0:	ldr	x25, [sp, #64]
    f1f4:	ldp	x29, x30, [sp], #80
    f1f8:	b	c260 <omp_is_initial_device@@OMP_4.0+0x660>
    f1fc:	mov	x2, x1
    f200:	b	f158 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x98>
    f204:	nop

000000000000f208 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5>:
    f208:	stp	x29, x30, [sp, #-64]!
    f20c:	mov	x29, sp
    f210:	stp	x19, x20, [sp, #16]
    f214:	mov	x19, x3
    f218:	mov	x20, x4
    f21c:	stp	x21, x22, [sp, #32]
    f220:	mov	x22, x2
    f224:	stp	x23, x24, [sp, #48]
    f228:	mov	w23, w0
    f22c:	mov	x24, x1
    f230:	mov	x0, #0x0                   	// #0
    f234:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    f238:	tst	w0, #0xff
    f23c:	b.ne	f25c <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0x54>  // b.any
    f240:	mov	x1, x20
    f244:	mov	x0, x19
    f248:	ldp	x19, x20, [sp, #16]
    f24c:	ldp	x21, x22, [sp, #32]
    f250:	ldp	x23, x24, [sp, #48]
    f254:	ldp	x29, x30, [sp], #64
    f258:	b	c400 <omp_is_initial_device@@OMP_4.0+0x800>
    f25c:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    f260:	ldr	x0, [x0, #4016]
    f264:	mrs	x21, tpidr_el0
    f268:	ldr	x6, [x24]
    f26c:	add	x21, x21, x0
    f270:	mov	x5, #0x1                   	// #1
    f274:	mov	x7, #0x3                   	// #3
    f278:	mov	w0, w23
    f27c:	mov	x2, x22
    f280:	ldr	x4, [x21, #24]
    f284:	mov	x1, x24
    f288:	mov	x3, #0x0                   	// #0
    f28c:	stp	x7, x22, [x4]
    f290:	stp	x6, x5, [x4, #16]
    f294:	str	xzr, [x4, #72]
    f298:	bl	105d8 <GOMP_doacross_wait@@GOMP_4.5+0x260>
    f29c:	ldr	x0, [x21, #32]
    f2a0:	cbz	x0, f240 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0x38>
    f2a4:	ldr	x2, [x21, #24]
    f2a8:	add	x0, x0, #0x50
    f2ac:	ldxr	x1, [x0]
    f2b0:	stlxr	w3, x2, [x0]
    f2b4:	cbnz	w3, f2ac <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0xa4>
    f2b8:	cmp	x1, #0x1
    f2bc:	b.eq	f240 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0x38>  // b.none
    f2c0:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    f2c4:	mov	x1, x20
    f2c8:	mov	x0, x19
    f2cc:	ldp	x19, x20, [sp, #16]
    f2d0:	ldp	x21, x22, [sp, #32]
    f2d4:	ldp	x23, x24, [sp, #48]
    f2d8:	ldp	x29, x30, [sp], #64
    f2dc:	b	c400 <omp_is_initial_device@@OMP_4.0+0x800>

000000000000f2e0 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5>:
    f2e0:	adrp	x4, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    f2e4:	ldr	x4, [x4, #4016]
    f2e8:	mrs	x6, tpidr_el0
    f2ec:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
    f2f0:	add	x5, x5, #0x2b8
    f2f4:	add	x6, x6, x4
    f2f8:	mov	x7, x2
    f2fc:	mov	x4, x3
    f300:	ldr	x6, [x6, #80]
    f304:	cmp	x6, #0x0
    f308:	add	x6, x6, #0x90
    f30c:	csel	x5, x5, x6, eq  // eq = none
    f310:	ldr	w2, [x5, #8]
    f314:	and	w6, w2, #0x7fffffff
    f318:	cmp	w6, #0x3
    f31c:	b.eq	f364 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x84>  // b.none
    f320:	tst	w2, #0x7ffffffc
    f324:	b.ne	f33c <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x5c>  // b.any
    f328:	cmp	w6, #0x1
    f32c:	b.ne	f350 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x70>  // b.any
    f330:	ldrsw	x2, [x5, #12]
    f334:	mov	x3, x7
    f338:	b	eff0 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5>
    f33c:	cmp	w6, #0x4
    f340:	b.ne	f370 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x90>  // b.any
    f344:	mov	x3, x7
    f348:	mov	x2, #0x0                   	// #0
    f34c:	b	eff0 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5>
    f350:	cmp	w6, #0x2
    f354:	b.ne	f370 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x90>  // b.any
    f358:	ldrsw	x2, [x5, #12]
    f35c:	mov	x3, x7
    f360:	b	f0c0 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5>
    f364:	ldrsw	x2, [x5, #12]
    f368:	mov	x3, x7
    f36c:	b	f208 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5>
    f370:	stp	x29, x30, [sp, #-16]!
    f374:	mov	x29, sp
    f378:	bl	8870 <abort@plt>
    f37c:	nop

000000000000f380 <GOMP_loop_ull_static_next@@GOMP_2.0>:
    f380:	stp	x29, x30, [sp, #-16]!
    f384:	mov	x29, sp
    f388:	bl	c040 <omp_is_initial_device@@OMP_4.0+0x440>
    f38c:	cmp	w0, #0x0
    f390:	cset	w0, eq  // eq = none
    f394:	ldp	x29, x30, [sp], #16
    f398:	ret
    f39c:	nop

000000000000f3a0 <GOMP_loop_ull_dynamic_next@@GOMP_2.0>:
    f3a0:	b	c260 <omp_is_initial_device@@OMP_4.0+0x660>
    f3a4:	nop

000000000000f3a8 <GOMP_loop_ull_guided_next@@GOMP_2.0>:
    f3a8:	b	c400 <omp_is_initial_device@@OMP_4.0+0x800>
    f3ac:	nop

000000000000f3b0 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0>:
    f3b0:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    f3b4:	ldr	x3, [x3, #4016]
    f3b8:	mrs	x2, tpidr_el0
    f3bc:	add	x2, x2, x3
    f3c0:	ldr	x2, [x2, #24]
    f3c4:	ldr	w2, [x2]
    f3c8:	cmp	w2, #0x2
    f3cc:	b.eq	f424 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x74>  // b.none
    f3d0:	stp	x29, x30, [sp, #-16]!
    f3d4:	mov	x3, x0
    f3d8:	mov	x4, x1
    f3dc:	mov	x29, sp
    f3e0:	b.ls	f3f4 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x44>  // b.plast
    f3e4:	cmp	w2, #0x3
    f3e8:	b.ne	f418 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x68>  // b.any
    f3ec:	ldp	x29, x30, [sp], #16
    f3f0:	b	c400 <omp_is_initial_device@@OMP_4.0+0x800>
    f3f4:	cmp	w2, #0x1
    f3f8:	b.ne	f420 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x70>  // b.any
    f3fc:	mov	x1, x4
    f400:	mov	x0, x3
    f404:	bl	c040 <omp_is_initial_device@@OMP_4.0+0x440>
    f408:	cmp	w0, #0x0
    f40c:	cset	w0, eq  // eq = none
    f410:	ldp	x29, x30, [sp], #16
    f414:	ret
    f418:	cmp	w2, #0x4
    f41c:	b.eq	f3fc <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x4c>  // b.none
    f420:	bl	8870 <abort@plt>
    f424:	b	c260 <omp_is_initial_device@@OMP_4.0+0x660>

000000000000f428 <GOMP_loop_ull_start@@GOMP_5.0>:
    f428:	stp	x29, x30, [sp, #-112]!
    f42c:	mov	x29, sp
    f430:	stp	x19, x20, [sp, #16]
    f434:	mov	x20, x1
    f438:	adrp	x19, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    f43c:	ldr	x19, [x19, #4016]
    f440:	stp	x23, x24, [sp, #48]
    f444:	mrs	x24, tpidr_el0
    f448:	add	x8, x24, x19
    f44c:	stp	x27, x28, [sp, #80]
    f450:	mov	x23, x2
    f454:	and	w28, w0, #0xff
    f458:	ldr	x27, [sp, #112]
    f45c:	stp	x21, x22, [sp, #32]
    f460:	mov	x21, x6
    f464:	stp	x25, x26, [sp, #64]
    f468:	mov	x22, x7
    f46c:	mov	x25, x3
    f470:	str	xzr, [x8, #72]
    f474:	mov	x26, x4
    f478:	stp	x8, x5, [sp, #96]
    f47c:	cbz	x27, f4ec <GOMP_loop_ull_start@@GOMP_5.0+0xc4>
    f480:	bl	17f28 <GOMP_task_reduction_remap@@GOMP_5.0+0x470>
    f484:	mov	x0, #0x0                   	// #0
    f488:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    f48c:	tst	w0, #0xff
    f490:	ldr	x8, [sp, #96]
    f494:	b.ne	f4fc <GOMP_loop_ull_start@@GOMP_5.0+0xd4>  // b.any
    f498:	ldr	x1, [x8, #24]
    f49c:	mov	x0, x27
    f4a0:	ldr	x1, [x1, #88]
    f4a4:	bl	17d50 <GOMP_task_reduction_remap@@GOMP_5.0+0x298>
    f4a8:	ldr	x0, [sp, #120]
    f4ac:	cbz	x0, f4c4 <GOMP_loop_ull_start@@GOMP_5.0+0x9c>
    f4b0:	add	x19, x24, x19
    f4b4:	ldr	x1, [sp, #120]
    f4b8:	ldr	x0, [x19, #24]
    f4bc:	ldr	x0, [x0, #32]
    f4c0:	str	x0, [x1]
    f4c4:	mov	x1, x22
    f4c8:	mov	x0, x21
    f4cc:	bl	f3b0 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
    f4d0:	ldp	x19, x20, [sp, #16]
    f4d4:	ldp	x21, x22, [sp, #32]
    f4d8:	ldp	x23, x24, [sp, #48]
    f4dc:	ldp	x25, x26, [sp, #64]
    f4e0:	ldp	x27, x28, [sp, #80]
    f4e4:	ldp	x29, x30, [sp], #112
    f4e8:	ret
    f4ec:	mov	x0, #0x0                   	// #0
    f4f0:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    f4f4:	tst	w0, #0xff
    f4f8:	b.eq	f4a8 <GOMP_loop_ull_start@@GOMP_5.0+0x80>  // b.none
    f4fc:	add	x1, sp, #0x68
    f500:	mov	x0, x26
    f504:	bl	e108 <GOMP_loop_end_nowait@@GOMP_1.0+0x8>
    f508:	add	x3, x24, x19
    f50c:	cmp	w28, #0x0
    f510:	ldr	x2, [sp, #104]
    f514:	ccmp	x20, x23, #0x0, ne  // ne = any
    f518:	ldr	x1, [x3, #24]
    f51c:	str	w0, [x1]
    f520:	str	x2, [x1, #8]
    f524:	b.ls	f608 <GOMP_loop_ull_start@@GOMP_5.0+0x1e0>  // b.plast
    f528:	str	wzr, [x1, #4]
    f52c:	cmp	w0, #0x2
    f530:	stp	x20, x25, [x1, #16]
    f534:	str	x20, [x1, #72]
    f538:	b.ne	f584 <GOMP_loop_ull_start@@GOMP_5.0+0x15c>  // b.any
    f53c:	ldr	x0, [x3, #16]
    f540:	mul	x25, x2, x25
    f544:	str	x25, [x1, #8]
    f548:	mov	x3, #0x1                   	// #1
    f54c:	mov	x2, x3
    f550:	cbz	x0, f560 <GOMP_loop_ull_start@@GOMP_5.0+0x138>
    f554:	ldr	w2, [x0]
    f558:	mov	x3, x2
    f55c:	cbz	w28, f688 <GOMP_loop_ull_start@@GOMP_5.0+0x260>
    f560:	orr	x3, x3, x25
    f564:	mov	x0, #0x7fffffff            	// #2147483647
    f568:	cmp	x3, x0
    f56c:	b.hi	f584 <GOMP_loop_ull_start@@GOMP_5.0+0x15c>  // b.pmore
    f570:	madd	x25, x2, x25, x25
    f574:	mvn	x2, x25
    f578:	cmp	x2, x20
    f57c:	cset	w0, hi  // hi = pmore
    f580:	str	w0, [x1, #4]
    f584:	cbz	x27, f5ac <GOMP_loop_ull_start@@GOMP_5.0+0x184>
    f588:	mov	x0, x27
    f58c:	bl	15d78 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    f590:	add	x0, x24, x19
    f594:	mov	w2, #0x1                   	// #1
    f598:	ldr	x1, [x0, #80]
    f59c:	ldr	x0, [x0, #24]
    f5a0:	ldr	x1, [x1, #40]
    f5a4:	strb	w2, [x1, #50]
    f5a8:	str	x27, [x0, #88]
    f5ac:	ldr	x0, [sp, #120]
    f5b0:	cbz	x0, f5d8 <GOMP_loop_ull_start@@GOMP_5.0+0x1b0>
    f5b4:	add	x1, x24, x19
    f5b8:	ldr	x0, [x0]
    f5bc:	ldr	x20, [x1, #24]
    f5c0:	cmp	x0, #0x20
    f5c4:	b.ls	f640 <GOMP_loop_ull_start@@GOMP_5.0+0x218>  // b.plast
    f5c8:	bl	b258 <fprintf@plt+0x2748>
    f5cc:	str	x0, [x20, #32]
    f5d0:	ldr	x1, [sp, #120]
    f5d4:	str	x0, [x1]
    f5d8:	add	x19, x24, x19
    f5dc:	ldr	x0, [x19, #32]
    f5e0:	cbz	x0, f4c4 <GOMP_loop_ull_start@@GOMP_5.0+0x9c>
    f5e4:	ldr	x2, [x19, #24]
    f5e8:	add	x0, x0, #0x50
    f5ec:	ldxr	x1, [x0]
    f5f0:	stlxr	w3, x2, [x0]
    f5f4:	cbnz	w3, f5ec <GOMP_loop_ull_start@@GOMP_5.0+0x1c4>
    f5f8:	cmp	x1, #0x1
    f5fc:	b.eq	f4c4 <GOMP_loop_ull_start@@GOMP_5.0+0x9c>  // b.none
    f600:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    f604:	b	f4c4 <GOMP_loop_ull_start@@GOMP_5.0+0x9c>
    f608:	cmp	x20, x23
    f60c:	str	wzr, [x1, #4]
    f610:	eor	w4, w28, #0x1
    f614:	cset	w5, cc  // cc = lo, ul, last
    f618:	tst	w5, w4
    f61c:	b.ne	f65c <GOMP_loop_ull_start@@GOMP_5.0+0x234>  // b.any
    f620:	stp	x23, x25, [x1, #16]
    f624:	cmp	w0, #0x2
    f628:	str	x20, [x1, #72]
    f62c:	b.eq	f6b8 <GOMP_loop_ull_start@@GOMP_5.0+0x290>  // b.none
    f630:	cbnz	w28, f584 <GOMP_loop_ull_start@@GOMP_5.0+0x15c>
    f634:	mov	w0, #0x2                   	// #2
    f638:	str	w0, [x1, #4]
    f63c:	b	f584 <GOMP_loop_ull_start@@GOMP_5.0+0x15c>
    f640:	mov	x2, x0
    f644:	mov	w1, #0x0                   	// #0
    f648:	add	x0, x20, #0x60
    f64c:	bl	87c0 <memset@plt>
    f650:	ldr	x1, [sp, #120]
    f654:	str	x0, [x1]
    f658:	b	f5d8 <GOMP_loop_ull_start@@GOMP_5.0+0x1b0>
    f65c:	stp	x20, x25, [x1, #16]
    f660:	cmp	w0, #0x2
    f664:	str	x20, [x1, #72]
    f668:	b.ne	f634 <GOMP_loop_ull_start@@GOMP_5.0+0x20c>  // b.any
    f66c:	ldr	x0, [x3, #16]
    f670:	mul	x25, x2, x25
    f674:	str	x25, [x1, #8]
    f678:	mov	x3, #0x1                   	// #1
    f67c:	mov	x2, x3
    f680:	cbnz	x0, f554 <GOMP_loop_ull_start@@GOMP_5.0+0x12c>
    f684:	nop
    f688:	neg	x0, x25
    f68c:	mov	x4, #0x7fffffff            	// #2147483647
    f690:	orr	x3, x0, x3
    f694:	cmp	x3, x4
    f698:	b.hi	f6d8 <GOMP_loop_ull_start@@GOMP_5.0+0x2b0>  // b.pmore
    f69c:	madd	x0, x2, x0, x0
    f6a0:	add	x0, x0, #0x1
    f6a4:	cmp	x20, x0
    f6a8:	cset	w0, hi  // hi = pmore
    f6ac:	orr	w0, w0, #0x2
    f6b0:	str	w0, [x1, #4]
    f6b4:	b	f584 <GOMP_loop_ull_start@@GOMP_5.0+0x15c>
    f6b8:	ldr	x0, [x3, #16]
    f6bc:	mul	x25, x2, x25
    f6c0:	str	x25, [x1, #8]
    f6c4:	mov	x20, x23
    f6c8:	cbnz	x0, f554 <GOMP_loop_ull_start@@GOMP_5.0+0x12c>
    f6cc:	mov	x3, #0x1                   	// #1
    f6d0:	mov	x2, x3
    f6d4:	b	f55c <GOMP_loop_ull_start@@GOMP_5.0+0x134>
    f6d8:	ldr	w0, [x1, #4]
    f6dc:	orr	w0, w0, #0x2
    f6e0:	str	w0, [x1, #4]
    f6e4:	b	f584 <GOMP_loop_ull_start@@GOMP_5.0+0x15c>

000000000000f6e8 <GOMP_loop_ull_doacross_start@@GOMP_5.0>:
    f6e8:	stp	x29, x30, [sp, #-112]!
    f6ec:	mov	x29, sp
    f6f0:	stp	x19, x20, [sp, #16]
    f6f4:	mov	x19, x7
    f6f8:	adrp	x20, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    f6fc:	ldr	x20, [x20, #4016]
    f700:	stp	x25, x26, [sp, #64]
    f704:	mrs	x25, tpidr_el0
    f708:	mov	w26, w0
    f70c:	stp	x27, x28, [sp, #80]
    f710:	add	x28, x25, x20
    f714:	mov	x27, x2
    f718:	stp	x21, x22, [sp, #32]
    f71c:	mov	x22, x4
    f720:	mov	x21, x6
    f724:	stp	x23, x24, [sp, #48]
    f728:	mov	x24, x1
    f72c:	mov	x23, x5
    f730:	str	xzr, [x28, #72]
    f734:	str	x3, [sp, #104]
    f738:	cbz	x6, f84c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x164>
    f73c:	bl	17f28 <GOMP_task_reduction_remap@@GOMP_5.0+0x470>
    f740:	mov	x0, #0x0                   	// #0
    f744:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    f748:	tst	w0, #0xff
    f74c:	b.eq	f838 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x150>  // b.none
    f750:	mov	x28, #0x0                   	// #0
    f754:	cbz	x19, f75c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x74>
    f758:	ldr	x28, [x19]
    f75c:	add	x1, sp, #0x68
    f760:	mov	x0, x27
    f764:	bl	e108 <GOMP_loop_end_nowait@@GOMP_1.0+0x8>
    f768:	add	x3, x25, x20
    f76c:	mov	x4, #0x1                   	// #1
    f770:	ldr	x5, [x24]
    f774:	cmp	w0, #0x2
    f778:	ldr	x1, [x3, #24]
    f77c:	ldr	x2, [sp, #104]
    f780:	stp	w0, wzr, [x1]
    f784:	stp	x2, x5, [x1, #8]
    f788:	str	x4, [x1, #24]
    f78c:	str	xzr, [x1, #72]
    f790:	b.eq	f868 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x180>  // b.none
    f794:	mov	x3, x28
    f798:	mov	x1, x24
    f79c:	mov	w0, w26
    f7a0:	bl	105d8 <GOMP_doacross_wait@@GOMP_4.5+0x260>
    f7a4:	cbz	x21, f7cc <GOMP_loop_ull_doacross_start@@GOMP_5.0+0xe4>
    f7a8:	mov	x0, x21
    f7ac:	bl	15d78 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    f7b0:	add	x0, x25, x20
    f7b4:	mov	w2, #0x1                   	// #1
    f7b8:	ldr	x1, [x0, #80]
    f7bc:	ldr	x0, [x0, #24]
    f7c0:	ldr	x1, [x1, #40]
    f7c4:	strb	w2, [x1, #50]
    f7c8:	str	x21, [x0, #88]
    f7cc:	add	x1, x25, x20
    f7d0:	ldr	x0, [x1, #32]
    f7d4:	cbz	x0, f7f8 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x110>
    f7d8:	ldr	x2, [x1, #24]
    f7dc:	add	x0, x0, #0x50
    f7e0:	ldxr	x1, [x0]
    f7e4:	stlxr	w3, x2, [x0]
    f7e8:	cbnz	w3, f7e0 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0xf8>
    f7ec:	cmp	x1, #0x1
    f7f0:	b.eq	f7f8 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x110>  // b.none
    f7f4:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
    f7f8:	cbz	x19, f810 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x128>
    f7fc:	add	x20, x25, x20
    f800:	ldr	x0, [x20, #24]
    f804:	ldr	x0, [x0, #32]
    f808:	ldr	x0, [x0, #48]
    f80c:	str	x0, [x19]
    f810:	mov	x1, x23
    f814:	mov	x0, x22
    f818:	bl	f3b0 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
    f81c:	ldp	x19, x20, [sp, #16]
    f820:	ldp	x21, x22, [sp, #32]
    f824:	ldp	x23, x24, [sp, #48]
    f828:	ldp	x25, x26, [sp, #64]
    f82c:	ldp	x27, x28, [sp, #80]
    f830:	ldp	x29, x30, [sp], #112
    f834:	ret
    f838:	ldr	x1, [x28, #24]
    f83c:	mov	x0, x21
    f840:	ldr	x1, [x1, #88]
    f844:	bl	17d50 <GOMP_task_reduction_remap@@GOMP_5.0+0x298>
    f848:	b	f7f8 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x110>
    f84c:	mov	x0, #0x0                   	// #0
    f850:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
    f854:	tst	w0, #0xff
    f858:	b.eq	f7f8 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x110>  // b.none
    f85c:	mov	x28, #0x0                   	// #0
    f860:	cbnz	x19, f758 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x70>
    f864:	b	f75c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x74>
    f868:	ldr	x0, [x3, #16]
    f86c:	cbz	x0, f8b4 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x1cc>
    f870:	ldr	w0, [x0]
    f874:	mov	x4, x0
    f878:	orr	x4, x2, x4
    f87c:	mov	x3, #0x7fffffff            	// #2147483647
    f880:	cmp	x4, x3
    f884:	b.hi	f794 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0xac>  // b.pmore
    f888:	madd	x0, x0, x2, x2
    f88c:	mov	x3, x28
    f890:	mvn	x0, x0
    f894:	cmp	x5, x0
    f898:	cset	w0, cc  // cc = lo, ul, last
    f89c:	str	w0, [x1, #4]
    f8a0:	mov	x1, x24
    f8a4:	mov	w0, w26
    f8a8:	bl	105d8 <GOMP_doacross_wait@@GOMP_4.5+0x260>
    f8ac:	cbnz	x21, f7a8 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0xc0>
    f8b0:	b	f7cc <GOMP_loop_ull_doacross_start@@GOMP_5.0+0xe4>
    f8b4:	mov	x0, x4
    f8b8:	b	f878 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x190>
    f8bc:	nop

000000000000f8c0 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0>:
    f8c0:	stp	x29, x30, [sp, #-48]!
    f8c4:	mov	x29, sp
    f8c8:	stp	x21, x22, [sp, #32]
    f8cc:	mov	x21, x1
    f8d0:	adrp	x22, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    f8d4:	ldr	x22, [x22, #4016]
    f8d8:	stp	x19, x20, [sp, #16]
    f8dc:	mov	x19, x0
    f8e0:	mrs	x20, tpidr_el0
    f8e4:	bl	fec8 <GOMP_ordered_start@@GOMP_1.0>
    f8e8:	add	x1, x20, x22
    f8ec:	mov	w0, #0x1                   	// #1
    f8f0:	ldr	x2, [x1, #24]
    f8f4:	add	x2, x2, #0x40
    f8f8:	ldaxr	w1, [x2]
    f8fc:	cbnz	w1, f908 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x48>
    f900:	stxr	w3, w0, [x2]
    f904:	cbnz	w3, f8f8 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x38>
    f908:	cmp	w1, #0x0
    f90c:	b.ne	f97c <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0xbc>  // b.any
    f910:	mov	x0, x19
    f914:	mov	x1, x21
    f918:	bl	c040 <omp_is_initial_device@@OMP_4.0+0x440>
    f91c:	mov	w19, w0
    f920:	tbnz	w0, #31, f928 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x68>
    f924:	bl	fe30 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x308>
    f928:	add	x20, x20, x22
    f92c:	ldr	x1, [x20, #24]
    f930:	add	x1, x1, #0x40
    f934:	ldxr	w0, [x1]
    f938:	stlxr	w2, wzr, [x1]
    f93c:	cbnz	w2, f934 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x74>
    f940:	tbnz	w0, #31, f95c <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x9c>
    f944:	cmp	w19, #0x0
    f948:	cset	w0, eq  // eq = none
    f94c:	ldp	x19, x20, [sp, #16]
    f950:	ldp	x21, x22, [sp, #32]
    f954:	ldp	x29, x30, [sp], #48
    f958:	ret
    f95c:	mov	x0, x1
    f960:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
    f964:	cmp	w19, #0x0
    f968:	cset	w0, eq  // eq = none
    f96c:	ldp	x19, x20, [sp, #16]
    f970:	ldp	x21, x22, [sp, #32]
    f974:	ldp	x29, x30, [sp], #48
    f978:	ret
    f97c:	mov	x0, x2
    f980:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    f984:	b	f910 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x50>

000000000000f988 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0>:
    f988:	stp	x29, x30, [sp, #-48]!
    f98c:	mov	x29, sp
    f990:	stp	x21, x22, [sp, #32]
    f994:	mov	x21, x1
    f998:	adrp	x22, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    f99c:	ldr	x22, [x22, #4016]
    f9a0:	stp	x19, x20, [sp, #16]
    f9a4:	mov	x19, x0
    f9a8:	mrs	x20, tpidr_el0
    f9ac:	bl	fec8 <GOMP_ordered_start@@GOMP_1.0>
    f9b0:	add	x1, x20, x22
    f9b4:	mov	w0, #0x1                   	// #1
    f9b8:	ldr	x2, [x1, #24]
    f9bc:	add	x2, x2, #0x40
    f9c0:	ldaxr	w1, [x2]
    f9c4:	cbnz	w1, f9d0 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x48>
    f9c8:	stxr	w3, w0, [x2]
    f9cc:	cbnz	w3, f9c0 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x38>
    f9d0:	cmp	w1, #0x0
    f9d4:	b.ne	fa48 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0xc0>  // b.any
    f9d8:	mov	x0, x19
    f9dc:	mov	x1, x21
    f9e0:	bl	c1f8 <omp_is_initial_device@@OMP_4.0+0x5f8>
    f9e4:	mov	w19, w0
    f9e8:	tst	w0, #0xff
    f9ec:	b.eq	fa24 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x9c>  // b.none
    f9f0:	bl	fcd0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1a8>
    f9f4:	add	x20, x20, x22
    f9f8:	ldr	x1, [x20, #24]
    f9fc:	add	x1, x1, #0x40
    fa00:	ldxr	w0, [x1]
    fa04:	stlxr	w2, wzr, [x1]
    fa08:	cbnz	w2, fa00 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x78>
    fa0c:	tbnz	w0, #31, fa2c <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0xa4>
    fa10:	mov	w0, w19
    fa14:	ldp	x19, x20, [sp, #16]
    fa18:	ldp	x21, x22, [sp, #32]
    fa1c:	ldp	x29, x30, [sp], #48
    fa20:	ret
    fa24:	bl	fc28 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x100>
    fa28:	b	f9f4 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x6c>
    fa2c:	mov	x0, x1
    fa30:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
    fa34:	mov	w0, w19
    fa38:	ldp	x19, x20, [sp, #16]
    fa3c:	ldp	x21, x22, [sp, #32]
    fa40:	ldp	x29, x30, [sp], #48
    fa44:	ret
    fa48:	mov	x0, x2
    fa4c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    fa50:	b	f9d8 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x50>
    fa54:	nop

000000000000fa58 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0>:
    fa58:	stp	x29, x30, [sp, #-48]!
    fa5c:	mov	x29, sp
    fa60:	stp	x21, x22, [sp, #32]
    fa64:	mov	x21, x1
    fa68:	adrp	x22, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    fa6c:	ldr	x22, [x22, #4016]
    fa70:	stp	x19, x20, [sp, #16]
    fa74:	mov	x19, x0
    fa78:	mrs	x20, tpidr_el0
    fa7c:	bl	fec8 <GOMP_ordered_start@@GOMP_1.0>
    fa80:	add	x1, x20, x22
    fa84:	mov	w0, #0x1                   	// #1
    fa88:	ldr	x2, [x1, #24]
    fa8c:	add	x2, x2, #0x40
    fa90:	ldaxr	w1, [x2]
    fa94:	cbnz	w1, faa0 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x48>
    fa98:	stxr	w3, w0, [x2]
    fa9c:	cbnz	w3, fa90 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x38>
    faa0:	cmp	w1, #0x0
    faa4:	b.ne	fb18 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0xc0>  // b.any
    faa8:	mov	x0, x19
    faac:	mov	x1, x21
    fab0:	bl	c358 <omp_is_initial_device@@OMP_4.0+0x758>
    fab4:	mov	w19, w0
    fab8:	tst	w0, #0xff
    fabc:	b.eq	faf4 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x9c>  // b.none
    fac0:	bl	fcd0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1a8>
    fac4:	add	x20, x20, x22
    fac8:	ldr	x1, [x20, #24]
    facc:	add	x1, x1, #0x40
    fad0:	ldxr	w0, [x1]
    fad4:	stlxr	w2, wzr, [x1]
    fad8:	cbnz	w2, fad0 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x78>
    fadc:	tbnz	w0, #31, fafc <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0xa4>
    fae0:	mov	w0, w19
    fae4:	ldp	x19, x20, [sp, #16]
    fae8:	ldp	x21, x22, [sp, #32]
    faec:	ldp	x29, x30, [sp], #48
    faf0:	ret
    faf4:	bl	fc28 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x100>
    faf8:	b	fac4 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x6c>
    fafc:	mov	x0, x1
    fb00:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
    fb04:	mov	w0, w19
    fb08:	ldp	x19, x20, [sp, #16]
    fb0c:	ldp	x21, x22, [sp, #32]
    fb10:	ldp	x29, x30, [sp], #48
    fb14:	ret
    fb18:	mov	x0, x2
    fb1c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
    fb20:	b	faa8 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x50>
    fb24:	nop

000000000000fb28 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0>:
    fb28:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    fb2c:	ldr	x3, [x3, #4016]
    fb30:	mrs	x2, tpidr_el0
    fb34:	add	x2, x2, x3
    fb38:	ldr	x2, [x2, #24]
    fb3c:	ldr	w2, [x2]
    fb40:	cmp	w2, #0x2
    fb44:	b.eq	fb88 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x60>  // b.none
    fb48:	mov	x3, x0
    fb4c:	mov	x4, x1
    fb50:	b.ls	fb60 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x38>  // b.plast
    fb54:	cmp	w2, #0x3
    fb58:	b.ne	fb74 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x4c>  // b.any
    fb5c:	b	fa58 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0>
    fb60:	cmp	w2, #0x1
    fb64:	b.ne	fb7c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x54>  // b.any
    fb68:	mov	x1, x4
    fb6c:	mov	x0, x3
    fb70:	b	f8c0 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0>
    fb74:	cmp	w2, #0x4
    fb78:	b.eq	fb68 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x40>  // b.none
    fb7c:	stp	x29, x30, [sp, #-16]!
    fb80:	mov	x29, sp
    fb84:	bl	8870 <abort@plt>
    fb88:	b	f988 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0>
    fb8c:	nop
    fb90:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    fb94:	ldr	x1, [x1, #4016]
    fb98:	mrs	x0, tpidr_el0
    fb9c:	add	x1, x0, x1
    fba0:	ldr	x3, [x1, #16]
    fba4:	cbz	x3, fbec <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xc4>
    fba8:	ldr	w0, [x3]
    fbac:	cmp	w0, #0x1
    fbb0:	b.eq	fbec <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xc4>  // b.none
    fbb4:	ldr	x2, [x1, #24]
    fbb8:	ldr	w4, [x1, #40]
    fbbc:	ldr	w6, [x2, #40]
    fbc0:	ldr	w1, [x2, #48]
    fbc4:	ldr	x5, [x2, #32]
    fbc8:	add	w1, w1, w6
    fbcc:	cmp	w0, w1
    fbd0:	sub	w0, w1, w0
    fbd4:	csel	w0, w0, w1, ls  // ls = plast
    fbd8:	str	w4, [x5, x0, lsl #2]
    fbdc:	ldr	w0, [x2, #40]
    fbe0:	add	w1, w0, #0x1
    fbe4:	str	w1, [x2, #40]
    fbe8:	cbz	w0, fbf0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xc8>
    fbec:	ret
    fbf0:	ldr	x0, [x3, #80]
    fbf4:	ldr	x0, [x0, w4, uxtw #3]
    fbf8:	ldr	w1, [x0]
    fbfc:	add	w2, w1, #0x1
    fc00:	and	w2, w2, #0x7fffffff
    fc04:	ldxr	w3, [x0]
    fc08:	cmp	w3, w1
    fc0c:	b.ne	fc18 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xf0>  // b.any
    fc10:	stlxr	w4, w2, [x0]
    fc14:	cmp	w4, #0x0
    fc18:	mov	w1, w3
    fc1c:	b.ne	fbfc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xd4>  // b.any
    fc20:	tbz	w3, #31, fbec <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xc4>
    fc24:	b	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
    fc28:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    fc2c:	ldr	x0, [x0, #4016]
    fc30:	mrs	x1, tpidr_el0
    fc34:	add	x0, x1, x0
    fc38:	ldr	x2, [x0, #16]
    fc3c:	cbz	x2, fcb8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x190>
    fc40:	ldr	w3, [x2]
    fc44:	cmp	w3, #0x1
    fc48:	b.eq	fcb8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x190>  // b.none
    fc4c:	ldr	x0, [x0, #24]
    fc50:	mov	w4, #0xffffffff            	// #-1
    fc54:	ldr	w1, [x0, #40]
    fc58:	add	w1, w1, w4
    fc5c:	stp	w1, w4, [x0, #40]
    fc60:	cbz	w1, fcb8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x190>
    fc64:	ldr	w1, [x0, #48]
    fc68:	add	w1, w1, #0x1
    fc6c:	cmp	w3, w1
    fc70:	b.eq	fcbc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x194>  // b.none
    fc74:	ubfiz	x3, x1, #2, #32
    fc78:	ldr	x4, [x0, #32]
    fc7c:	str	w1, [x0, #48]
    fc80:	ldr	x0, [x2, #80]
    fc84:	ldr	w1, [x4, x3]
    fc88:	ldr	x0, [x0, x1, lsl #3]
    fc8c:	ldr	w1, [x0]
    fc90:	add	w2, w1, #0x1
    fc94:	and	w2, w2, #0x7fffffff
    fc98:	ldxr	w3, [x0]
    fc9c:	cmp	w3, w1
    fca0:	b.ne	fcac <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x184>  // b.any
    fca4:	stlxr	w4, w2, [x0]
    fca8:	cmp	w4, #0x0
    fcac:	mov	w1, w3
    fcb0:	b.ne	fc90 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x168>  // b.any
    fcb4:	tbnz	w3, #31, fcc8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1a0>
    fcb8:	ret
    fcbc:	mov	x3, #0x0                   	// #0
    fcc0:	mov	w1, #0x0                   	// #0
    fcc4:	b	fc78 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x150>
    fcc8:	b	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
    fccc:	nop
    fcd0:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    fcd4:	ldr	x0, [x0, #4016]
    fcd8:	mrs	x1, tpidr_el0
    fcdc:	add	x0, x1, x0
    fce0:	ldr	x4, [x0, #16]
    fce4:	cbz	x4, fd88 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x260>
    fce8:	ldr	w1, [x4]
    fcec:	cmp	w1, #0x1
    fcf0:	b.eq	fd88 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x260>  // b.none
    fcf4:	ldr	x3, [x0, #24]
    fcf8:	mov	w2, #0xffffffff            	// #-1
    fcfc:	ldr	x7, [x4, #80]
    fd00:	ldr	w5, [x3, #40]
    fd04:	str	w2, [x3, #44]
    fd08:	cmp	w5, #0x1
    fd0c:	b.eq	fd98 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x270>  // b.none
    fd10:	ldr	w2, [x3, #48]
    fd14:	cmp	w1, w5
    fd18:	ldr	x6, [x3, #32]
    fd1c:	b.ls	fd40 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x218>  // b.plast
    fd20:	add	w2, w5, w2
    fd24:	ldr	w0, [x0, #40]
    fd28:	cmp	w1, w2
    fd2c:	sub	w1, w2, w1
    fd30:	csel	w1, w1, w2, ls  // ls = plast
    fd34:	str	w0, [x6, x1, lsl #2]
    fd38:	ldr	w2, [x3, #48]
    fd3c:	ldr	w1, [x4]
    fd40:	add	w0, w2, #0x1
    fd44:	cmp	w1, w0
    fd48:	b.eq	fd8c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x264>  // b.none
    fd4c:	add	x6, x6, w0, uxtw #2
    fd50:	str	w0, [x3, #48]
    fd54:	ldr	w0, [x6]
    fd58:	ldr	x0, [x7, x0, lsl #3]
    fd5c:	ldr	w1, [x0]
    fd60:	add	w2, w1, #0x1
    fd64:	and	w2, w2, #0x7fffffff
    fd68:	ldxr	w3, [x0]
    fd6c:	cmp	w3, w1
    fd70:	b.ne	fd7c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x254>  // b.any
    fd74:	stlxr	w4, w2, [x0]
    fd78:	cmp	w4, #0x0
    fd7c:	mov	w1, w3
    fd80:	b.ne	fd60 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x238>  // b.any
    fd84:	tbnz	w1, #31, fd94 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x26c>
    fd88:	ret
    fd8c:	mov	w0, #0x0                   	// #0
    fd90:	b	fd50 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x228>
    fd94:	b	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
    fd98:	ldr	w0, [x0, #40]
    fd9c:	ldr	x0, [x7, x0, lsl #3]
    fda0:	ldr	w1, [x0]
    fda4:	add	w2, w1, #0x1
    fda8:	and	w2, w2, #0x7fffffff
    fdac:	ldxr	w3, [x0]
    fdb0:	cmp	w3, w1
    fdb4:	b.ne	fdc0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x298>  // b.any
    fdb8:	stlxr	w4, w2, [x0]
    fdbc:	cmp	w4, #0x0
    fdc0:	mov	w1, w3
    fdc4:	b.ne	fda4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x27c>  // b.any
    fdc8:	tbz	w1, #31, fd88 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x260>
    fdcc:	b	fd94 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x26c>
    fdd0:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    fdd4:	ldr	x0, [x0, #4016]
    fdd8:	mrs	x1, tpidr_el0
    fddc:	add	x0, x1, x0
    fde0:	ldr	x0, [x0, #16]
    fde4:	cbz	x0, fe28 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x300>
    fde8:	ldr	w1, [x0]
    fdec:	cmp	w1, #0x1
    fdf0:	b.eq	fe28 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x300>  // b.none
    fdf4:	ldr	x0, [x0, #80]
    fdf8:	ldr	x0, [x0]
    fdfc:	ldr	w1, [x0]
    fe00:	add	w2, w1, #0x1
    fe04:	and	w2, w2, #0x7fffffff
    fe08:	ldxr	w3, [x0]
    fe0c:	cmp	w3, w1
    fe10:	b.ne	fe1c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2f4>  // b.any
    fe14:	stlxr	w4, w2, [x0]
    fe18:	cmp	w4, #0x0
    fe1c:	mov	w1, w3
    fe20:	b.ne	fe00 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2d8>  // b.any
    fe24:	tbnz	w3, #31, fe2c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x304>
    fe28:	ret
    fe2c:	b	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
    fe30:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    fe34:	ldr	x0, [x0, #4016]
    fe38:	mrs	x1, tpidr_el0
    fe3c:	add	x0, x1, x0
    fe40:	ldr	x2, [x0, #16]
    fe44:	cbz	x2, feb0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x388>
    fe48:	ldr	w3, [x2]
    fe4c:	cmp	w3, #0x1
    fe50:	b.eq	feb0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x388>  // b.none
    fe54:	ldr	x4, [x0, #24]
    fe58:	mov	w5, #0xffffffff            	// #-1
    fe5c:	ldr	w1, [x0, #40]
    fe60:	str	w5, [x4, #44]
    fe64:	add	w1, w1, #0x1
    fe68:	cmp	w3, w1
    fe6c:	b.eq	feb4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x38c>  // b.none
    fe70:	ubfiz	x0, x1, #3, #32
    fe74:	ldr	x3, [x2, #80]
    fe78:	ldr	x2, [x4, #32]
    fe7c:	ldr	x0, [x3, x0]
    fe80:	str	w1, [x2]
    fe84:	ldr	w1, [x0]
    fe88:	add	w2, w1, #0x1
    fe8c:	and	w2, w2, #0x7fffffff
    fe90:	ldxr	w3, [x0]
    fe94:	cmp	w3, w1
    fe98:	b.ne	fea4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x37c>  // b.any
    fe9c:	stlxr	w4, w2, [x0]
    fea0:	cmp	w4, #0x0
    fea4:	mov	w1, w3
    fea8:	b.ne	fe88 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x360>  // b.any
    feac:	tbnz	w3, #31, fec0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x398>
    feb0:	ret
    feb4:	mov	x0, #0x0                   	// #0
    feb8:	mov	w1, #0x0                   	// #0
    febc:	b	fe74 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x34c>
    fec0:	b	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
    fec4:	nop

000000000000fec8 <GOMP_ordered_start@@GOMP_1.0>:
    fec8:	stp	x29, x30, [sp, #-48]!
    fecc:	mov	x29, sp
    fed0:	stp	x19, x20, [sp, #16]
    fed4:	mrs	x19, tpidr_el0
    fed8:	adrp	x20, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    fedc:	ldr	x20, [x20, #4016]
    fee0:	add	x1, x19, x20
    fee4:	ldr	x0, [x1, #16]
    fee8:	cbz	x0, ff18 <GOMP_ordered_start@@GOMP_1.0+0x50>
    feec:	ldr	w2, [x0]
    fef0:	cmp	w2, #0x1
    fef4:	b.eq	ff18 <GOMP_ordered_start@@GOMP_1.0+0x50>  // b.none
    fef8:	str	x21, [sp, #32]
    fefc:	ldr	x21, [x1, #24]
    ff00:	dmb	ish
    ff04:	ldr	w1, [x1, #40]
    ff08:	ldr	w2, [x21, #44]
    ff0c:	cmp	w2, w1
    ff10:	b.ne	ff24 <GOMP_ordered_start@@GOMP_1.0+0x5c>  // b.any
    ff14:	ldr	x21, [sp, #32]
    ff18:	ldp	x19, x20, [sp, #16]
    ff1c:	ldp	x29, x30, [sp], #48
    ff20:	ret
    ff24:	ldr	x0, [x0, #80]
    ff28:	ldr	x0, [x0, w1, uxtw #3]
    ff2c:	ldr	w1, [x0]
    ff30:	tst	x1, #0x7fffffff
    ff34:	b.eq	ff74 <GOMP_ordered_start@@GOMP_1.0+0xac>  // b.none
    ff38:	sub	w3, w1, #0x1
    ff3c:	ldaxr	w2, [x0]
    ff40:	cmp	w2, w1
    ff44:	b.ne	ff50 <GOMP_ordered_start@@GOMP_1.0+0x88>  // b.any
    ff48:	stxr	w4, w3, [x0]
    ff4c:	cmp	w4, #0x0
    ff50:	mov	w1, w2
    ff54:	b.ne	ff30 <GOMP_ordered_start@@GOMP_1.0+0x68>  // b.any
    ff58:	add	x19, x19, x20
    ff5c:	ldr	w0, [x19, #40]
    ff60:	str	w0, [x21, #44]
    ff64:	ldp	x19, x20, [sp, #16]
    ff68:	ldr	x21, [sp, #32]
    ff6c:	ldp	x29, x30, [sp], #48
    ff70:	ret
    ff74:	bl	1a6b0 <omp_get_num_procs@@OMP_1.0+0x8>
    ff78:	b	ff58 <GOMP_ordered_start@@GOMP_1.0+0x90>
    ff7c:	nop

000000000000ff80 <GOMP_ordered_end@@GOMP_1.0>:
    ff80:	ret
    ff84:	nop
    ff88:	adrp	x4, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
    ff8c:	ldr	x4, [x4, #4016]
    ff90:	mrs	x5, tpidr_el0
    ff94:	stp	x29, x30, [sp, #-368]!
    ff98:	add	x4, x5, x4
    ff9c:	mov	x29, sp
    ffa0:	stp	x21, x22, [sp, #32]
    ffa4:	stp	x23, x24, [sp, #48]
    ffa8:	mov	x23, x1
    ffac:	ldp	x1, x22, [x4, #16]
    ffb0:	stp	x25, x26, [sp, #64]
    ffb4:	mov	x25, x3
    ffb8:	cbz	x1, 10150 <GOMP_ordered_end@@GOMP_1.0+0x1d0>
    ffbc:	ldr	w24, [x1]
    ffc0:	cmp	w24, #0x1
    ffc4:	b.eq	10150 <GOMP_ordered_end@@GOMP_1.0+0x1d0>  // b.none
    ffc8:	stp	x19, x20, [sp, #16]
    ffcc:	mov	x21, x2
    ffd0:	mov	w20, w0
    ffd4:	mov	x5, #0x0                   	// #0
    ffd8:	add	x0, x3, #0x77
    ffdc:	mov	w19, #0x0                   	// #0
    ffe0:	cbz	w20, 10264 <GOMP_ordered_end@@GOMP_1.0+0x2e4>
    ffe4:	add	x7, sp, #0x70
    ffe8:	mov	w2, #0x1                   	// #1
    ffec:	mov	w1, #0x40                  	// #64
    fff0:	b	10018 <GOMP_ordered_end@@GOMP_1.0+0x98>
    fff4:	add	x5, x5, #0x1
    fff8:	mov	w19, #0x41                  	// #65
    fffc:	cmp	w20, w5
   10000:	b.ls	10238 <GOMP_ordered_end@@GOMP_1.0+0x2b8>  // b.plast
   10004:	ldr	x3, [x23, x5, lsl #3]
   10008:	cbz	x3, 1014c <GOMP_ordered_end@@GOMP_1.0+0x1cc>
   1000c:	add	x5, x5, #0x1
   10010:	cmp	w20, w5
   10014:	b.ls	10058 <GOMP_ordered_end@@GOMP_1.0+0xd8>  // b.plast
   10018:	ldr	x6, [x23, x5, lsl #3]
   1001c:	cmp	w19, #0x40
   10020:	sub	x4, x6, #0x1
   10024:	clz	x4, x4
   10028:	cbz	x6, 1014c <GOMP_ordered_end@@GOMP_1.0+0x1cc>
   1002c:	sub	w4, w1, w4
   10030:	b.hi	1000c <GOMP_ordered_end@@GOMP_1.0+0x8c>  // b.pmore
   10034:	cmp	x6, #0x1
   10038:	csel	w4, w4, w2, ne  // ne = any
   1003c:	add	w19, w19, w4
   10040:	cmp	w19, #0x40
   10044:	b.hi	fff4 <GOMP_ordered_end@@GOMP_1.0+0x74>  // b.pmore
   10048:	str	w4, [x7, x5, lsl #2]
   1004c:	add	x5, x5, #0x1
   10050:	cmp	w20, w5
   10054:	b.hi	10018 <GOMP_ordered_end@@GOMP_1.0+0x98>  // b.pmore
   10058:	stp	x27, x28, [sp, #80]
   1005c:	ldr	w1, [x22]
   10060:	mov	w24, w24
   10064:	cmp	w1, #0x1
   10068:	b.eq	10084 <GOMP_ordered_end@@GOMP_1.0+0x104>  // b.none
   1006c:	cmp	w1, #0x3
   10070:	ldr	x24, [x23]
   10074:	b.eq	10084 <GOMP_ordered_end@@GOMP_1.0+0x104>  // b.none
   10078:	sub	x24, x24, #0x1
   1007c:	sdiv	x24, x24, x21
   10080:	add	x24, x24, #0x1
   10084:	cmp	w19, #0x40
   10088:	b.ls	10194 <GOMP_ordered_end@@GOMP_1.0+0x214>  // b.plast
   1008c:	mov	x27, #0x3f                  	// #63
   10090:	mov	x1, #0x77                  	// #119
   10094:	add	x27, x27, w20, uxtw #3
   10098:	str	x1, [sp, #104]
   1009c:	and	x27, x27, #0xffffffffffffffc0
   100a0:	mov	x1, #0x0                   	// #0
   100a4:	mul	x28, x24, x27
   100a8:	add	x1, x28, x1
   100ac:	add	x0, x1, x0
   100b0:	bl	b220 <fprintf@plt+0x2710>
   100b4:	mov	x26, x0
   100b8:	strb	wzr, [x0, #20]
   100bc:	ldr	x0, [sp, #104]
   100c0:	stp	x21, x27, [x26]
   100c4:	add	x0, x26, x0
   100c8:	str	w20, [x26, #16]
   100cc:	and	x0, x0, #0xffffffffffffffc0
   100d0:	str	x0, [x26, #24]
   100d4:	cbnz	x25, 10220 <GOMP_ordered_end@@GOMP_1.0+0x2a0>
   100d8:	str	xzr, [x26, #48]
   100dc:	cmp	w19, #0x40
   100e0:	b.ls	101a8 <GOMP_ordered_end@@GOMP_1.0+0x228>  // b.plast
   100e4:	ubfiz	x20, x20, #3, #32
   100e8:	mov	x25, #0x0                   	// #0
   100ec:	mov	x19, #0x0                   	// #0
   100f0:	cbz	x24, 1011c <GOMP_ordered_end@@GOMP_1.0+0x19c>
   100f4:	nop
   100f8:	ldr	x0, [x26, #24]
   100fc:	add	x19, x19, #0x1
   10100:	mov	x2, x20
   10104:	mov	w1, #0x0                   	// #0
   10108:	add	x0, x0, x25
   1010c:	bl	87c0 <memset@plt>
   10110:	add	x25, x25, x27
   10114:	cmp	x24, x19
   10118:	b.ne	100f8 <GOMP_ordered_end@@GOMP_1.0+0x178>  // b.any
   1011c:	ldr	w0, [x22]
   10120:	cmp	x21, #0x0
   10124:	ccmp	w0, #0x1, #0x0, eq  // eq = none
   10128:	b.eq	10244 <GOMP_ordered_end@@GOMP_1.0+0x2c4>  // b.none
   1012c:	ldp	x19, x20, [sp, #16]
   10130:	ldp	x27, x28, [sp, #80]
   10134:	str	x26, [x22, #32]
   10138:	ldp	x21, x22, [sp, #32]
   1013c:	ldp	x23, x24, [sp, #48]
   10140:	ldp	x25, x26, [sp, #64]
   10144:	ldp	x29, x30, [sp], #368
   10148:	ret
   1014c:	ldp	x19, x20, [sp, #16]
   10150:	cbnz	x25, 1016c <GOMP_ordered_end@@GOMP_1.0+0x1ec>
   10154:	str	xzr, [x22, #32]
   10158:	ldp	x21, x22, [sp, #32]
   1015c:	ldp	x23, x24, [sp, #48]
   10160:	ldp	x25, x26, [sp, #64]
   10164:	ldp	x29, x30, [sp], #368
   10168:	ret
   1016c:	add	x0, x25, #0x38
   10170:	bl	b258 <fprintf@plt+0x2748>
   10174:	add	x1, x0, #0x38
   10178:	str	x1, [x0, #48]
   1017c:	str	x0, [x22, #32]
   10180:	ldp	x21, x22, [sp, #32]
   10184:	ldp	x23, x24, [sp, #48]
   10188:	ldp	x25, x26, [sp, #64]
   1018c:	ldp	x29, x30, [sp], #368
   10190:	ret
   10194:	ubfiz	x1, x20, #2, #32
   10198:	mov	x27, #0x40                  	// #64
   1019c:	add	x2, x1, #0x77
   101a0:	str	x2, [sp, #104]
   101a4:	b	100a4 <GOMP_ordered_end@@GOMP_1.0+0x124>
   101a8:	mov	w0, #0x1                   	// #1
   101ac:	strb	w0, [x26, #20]
   101b0:	cbz	w20, 101f8 <GOMP_ordered_end@@GOMP_1.0+0x278>
   101b4:	sub	w2, w20, #0x1
   101b8:	add	x0, sp, #0x70
   101bc:	mvn	x5, x2
   101c0:	mov	x1, #0x0                   	// #0
   101c4:	lsl	x2, x2, #2
   101c8:	mov	w3, #0x0                   	// #0
   101cc:	add	x4, x2, #0x38
   101d0:	lsl	x5, x5, #2
   101d4:	add	x4, x26, x4
   101d8:	add	x2, x0, x2
   101dc:	nop
   101e0:	ldr	w0, [x2, x1]
   101e4:	str	w3, [x4, x1]
   101e8:	sub	x1, x1, #0x4
   101ec:	cmp	x5, x1
   101f0:	add	w3, w3, w0
   101f4:	b.ne	101e0 <GOMP_ordered_end@@GOMP_1.0+0x260>  // b.any
   101f8:	cbz	x24, 1011c <GOMP_ordered_end@@GOMP_1.0+0x19c>
   101fc:	ldr	x2, [x26, #24]
   10200:	mov	x1, #0x0                   	// #0
   10204:	nop
   10208:	str	xzr, [x2]
   1020c:	add	x1, x1, #0x1
   10210:	cmp	x24, x1
   10214:	add	x2, x2, x27
   10218:	b.ne	10208 <GOMP_ordered_end@@GOMP_1.0+0x288>  // b.any
   1021c:	b	1011c <GOMP_ordered_end@@GOMP_1.0+0x19c>
   10220:	add	x0, x0, x28
   10224:	mov	x2, x25
   10228:	mov	w1, #0x0                   	// #0
   1022c:	str	x0, [x26, #48]
   10230:	bl	87c0 <memset@plt>
   10234:	b	100dc <GOMP_ordered_end@@GOMP_1.0+0x15c>
   10238:	mov	w19, #0x41                  	// #65
   1023c:	stp	x27, x28, [sp, #80]
   10240:	b	1005c <GOMP_ordered_end@@GOMP_1.0+0xdc>
   10244:	ldr	x1, [x23]
   10248:	udiv	x0, x1, x24
   1024c:	msub	x24, x0, x24, x1
   10250:	str	x0, [x26]
   10254:	madd	x0, x0, x24, x24
   10258:	str	x24, [x26, #32]
   1025c:	str	x0, [x26, #40]
   10260:	b	1012c <GOMP_ordered_end@@GOMP_1.0+0x1ac>
   10264:	mov	w19, w20
   10268:	stp	x27, x28, [sp, #80]
   1026c:	b	1005c <GOMP_ordered_end@@GOMP_1.0+0xdc>

0000000000010270 <GOMP_doacross_post@@GOMP_4.5>:
   10270:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   10274:	ldr	x2, [x2, #4016]
   10278:	mrs	x1, tpidr_el0
   1027c:	add	x2, x1, x2
   10280:	ldr	x3, [x2, #24]
   10284:	ldr	x1, [x3, #32]
   10288:	cbz	x1, 10314 <GOMP_doacross_post@@GOMP_4.5+0xa4>
   1028c:	ldr	x4, [x1, #24]
   10290:	cbz	x4, 10314 <GOMP_doacross_post@@GOMP_4.5+0xa4>
   10294:	ldr	w3, [x3]
   10298:	cmp	w3, #0x1
   1029c:	b.ne	1031c <GOMP_doacross_post@@GOMP_4.5+0xac>  // b.any
   102a0:	ldr	w7, [x2, #40]
   102a4:	ldrb	w2, [x1, #20]
   102a8:	ldr	x3, [x1, #8]
   102ac:	madd	x7, x7, x3, x4
   102b0:	cbz	w2, 10334 <GOMP_doacross_post@@GOMP_4.5+0xc4>
   102b4:	ldr	x3, [x0]
   102b8:	ldr	w2, [x1, #56]
   102bc:	ldr	w6, [x1, #16]
   102c0:	lsl	x3, x3, x2
   102c4:	cmp	w6, #0x1
   102c8:	b.ls	102f4 <GOMP_doacross_post@@GOMP_4.5+0x84>  // b.plast
   102cc:	add	x4, x1, #0x38
   102d0:	mov	x1, #0x1                   	// #1
   102d4:	nop
   102d8:	ldr	x2, [x0, x1, lsl #3]
   102dc:	ldr	w5, [x4, x1, lsl #2]
   102e0:	add	x1, x1, #0x1
   102e4:	cmp	w6, w1
   102e8:	lsl	x2, x2, x5
   102ec:	orr	x3, x3, x2
   102f0:	b.hi	102d8 <GOMP_doacross_post@@GOMP_4.5+0x68>  // b.pmore
   102f4:	add	x3, x3, #0x1
   102f8:	ldar	x0, [x7]
   102fc:	cmp	x0, x3
   10300:	b.eq	1030c <GOMP_doacross_post@@GOMP_4.5+0x9c>  // b.none
   10304:	stlr	x3, [x7]
   10308:	ret
   1030c:	dmb	ish
   10310:	ret
   10314:	dmb	ish
   10318:	ret
   1031c:	cmp	w3, #0x3
   10320:	ldr	x7, [x0]
   10324:	b.eq	102a4 <GOMP_doacross_post@@GOMP_4.5+0x34>  // b.none
   10328:	ldr	x2, [x1]
   1032c:	sdiv	x7, x7, x2
   10330:	b	102a4 <GOMP_doacross_post@@GOMP_4.5+0x34>
   10334:	dmb	ishld
   10338:	ldr	w2, [x1, #16]
   1033c:	sub	w1, w2, #0x1
   10340:	lsl	x1, x1, #3
   10344:	cbz	w2, 10308 <GOMP_doacross_post@@GOMP_4.5+0x98>
   10348:	ldr	x2, [x0, x1]
   1034c:	add	x3, x7, x1
   10350:	add	x2, x2, #0x1
   10354:	ldr	x4, [x3]
   10358:	cmp	x2, x4
   1035c:	b.eq	10364 <GOMP_doacross_post@@GOMP_4.5+0xf4>  // b.none
   10360:	stlr	x2, [x3]
   10364:	sub	x1, x1, #0x8
   10368:	cmn	x1, #0x8
   1036c:	b.ne	10348 <GOMP_doacross_post@@GOMP_4.5+0xd8>  // b.any
   10370:	ret
   10374:	nop

0000000000010378 <GOMP_doacross_wait@@GOMP_4.5>:
   10378:	sub	sp, sp, #0x60
   1037c:	adrp	x9, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   10380:	ldr	x9, [x9, #4016]
   10384:	mrs	x8, tpidr_el0
   10388:	stp	x1, x2, [sp, #40]
   1038c:	add	x1, x8, x9
   10390:	stp	x3, x4, [sp, #56]
   10394:	ldr	x3, [x1, #24]
   10398:	stp	x5, x6, [sp, #72]
   1039c:	str	x7, [sp, #88]
   103a0:	ldr	x2, [x3, #32]
   103a4:	cbz	x2, 10598 <GOMP_doacross_wait@@GOMP_4.5+0x220>
   103a8:	ldr	x5, [x2, #24]
   103ac:	cbz	x5, 10598 <GOMP_doacross_wait@@GOMP_4.5+0x220>
   103b0:	ldr	w4, [x3]
   103b4:	cmp	w4, #0x1
   103b8:	b.ne	105b8 <GOMP_doacross_wait@@GOMP_4.5+0x240>  // b.any
   103bc:	ldr	x3, [x3, #8]
   103c0:	cbz	x3, 10570 <GOMP_doacross_wait@@GOMP_4.5+0x1f8>
   103c4:	ldr	x1, [x1, #16]
   103c8:	sdiv	x3, x0, x3
   103cc:	ldr	w1, [x1]
   103d0:	sdiv	x4, x3, x1
   103d4:	msub	x4, x4, x1, x3
   103d8:	ldrb	w7, [x2, #20]
   103dc:	add	x10, sp, #0x20
   103e0:	ldr	x1, [x2, #8]
   103e4:	mov	w9, #0xffffffc8            	// #-56
   103e8:	madd	x4, x4, x1, x5
   103ec:	add	x1, x0, #0x1
   103f0:	cbz	w7, 104e4 <GOMP_doacross_wait@@GOMP_4.5+0x16c>
   103f4:	ldr	w1, [x2, #56]
   103f8:	add	x5, sp, #0x20
   103fc:	ldr	w8, [x2, #16]
   10400:	add	x6, sp, #0x60
   10404:	mov	w3, #0xffffffc8            	// #-56
   10408:	stp	x6, x6, [sp]
   1040c:	cmp	w8, #0x1
   10410:	str	x5, [sp, #16]
   10414:	lsl	x0, x0, x1
   10418:	stp	w3, wzr, [sp, #24]
   1041c:	b.ls	104b0 <GOMP_doacross_wait@@GOMP_4.5+0x138>  // b.plast
   10420:	sub	w8, w8, #0x2
   10424:	add	x5, x2, #0x40
   10428:	add	x1, x2, #0x3c
   1042c:	mov	x11, x6
   10430:	add	x8, x5, w8, uxtw #2
   10434:	mov	w9, #0x0                   	// #0
   10438:	mov	x5, x6
   1043c:	mov	w10, #0x0                   	// #0
   10440:	b	10468 <GOMP_doacross_wait@@GOMP_4.5+0xf0>
   10444:	mov	x2, x5
   10448:	ldr	w6, [x1], #4
   1044c:	mov	w9, w7
   10450:	add	x5, x5, #0x8
   10454:	cmp	x8, x1
   10458:	ldr	x2, [x2]
   1045c:	lsl	x2, x2, x6
   10460:	orr	x0, x0, x2
   10464:	b.eq	104a0 <GOMP_doacross_wait@@GOMP_4.5+0x128>  // b.none
   10468:	add	w6, w3, #0x8
   1046c:	tbz	w3, #31, 10444 <GOMP_doacross_wait@@GOMP_4.5+0xcc>
   10470:	add	x2, x11, w3, sxtw
   10474:	mov	w10, w7
   10478:	mov	w3, w6
   1047c:	cmp	w6, #0x0
   10480:	b.gt	10444 <GOMP_doacross_wait@@GOMP_4.5+0xcc>
   10484:	ldr	x2, [x2]
   10488:	ldr	w6, [x1], #4
   1048c:	cmp	x8, x1
   10490:	lsl	x2, x2, x6
   10494:	orr	x0, x0, x2
   10498:	b.ne	10468 <GOMP_doacross_wait@@GOMP_4.5+0xf0>  // b.any
   1049c:	nop
   104a0:	cbz	w10, 104a8 <GOMP_doacross_wait@@GOMP_4.5+0x130>
   104a4:	str	w3, [sp, #24]
   104a8:	cbz	w9, 104b0 <GOMP_doacross_wait@@GOMP_4.5+0x138>
   104ac:	str	x5, [sp]
   104b0:	ldar	x1, [x4]
   104b4:	cmp	x1, x0
   104b8:	b.hi	104cc <GOMP_doacross_wait@@GOMP_4.5+0x154>  // b.pmore
   104bc:	nop
   104c0:	ldr	x1, [x4]
   104c4:	cmp	x1, x0
   104c8:	b.ls	104c0 <GOMP_doacross_wait@@GOMP_4.5+0x148>  // b.plast
   104cc:	dmb	ish
   104d0:	add	sp, sp, #0x60
   104d4:	ret
   104d8:	mov	w0, w6
   104dc:	cmp	w6, w0
   104e0:	b.eq	10598 <GOMP_doacross_wait@@GOMP_4.5+0x220>  // b.none
   104e4:	ldr	w6, [x2, #16]
   104e8:	add	x0, sp, #0x60
   104ec:	stp	x0, x0, [sp]
   104f0:	mov	w0, w6
   104f4:	str	x10, [sp, #16]
   104f8:	stp	w9, wzr, [sp, #24]
   104fc:	cbz	w6, 104dc <GOMP_doacross_wait@@GOMP_4.5+0x164>
   10500:	mov	w0, #0x0                   	// #0
   10504:	b	10538 <GOMP_doacross_wait@@GOMP_4.5+0x1c0>
   10508:	and	x7, x7, #0xfffffffffffffff8
   1050c:	str	x7, [sp]
   10510:	ldr	x3, [x3]
   10514:	add	x3, x3, #0x1
   10518:	add	x5, x4, w0, uxtw #3
   1051c:	ldr	x5, [x5]
   10520:	cmp	x3, x5
   10524:	b.cc	104d8 <GOMP_doacross_wait@@GOMP_4.5+0x160>  // b.lo, b.ul, b.last
   10528:	b.hi	104dc <GOMP_doacross_wait@@GOMP_4.5+0x164>  // b.pmore
   1052c:	add	w0, w0, #0x1
   10530:	cmp	w6, w0
   10534:	b.ls	104dc <GOMP_doacross_wait@@GOMP_4.5+0x164>  // b.plast
   10538:	mov	x3, x1
   1053c:	cbz	w0, 10518 <GOMP_doacross_wait@@GOMP_4.5+0x1a0>
   10540:	ldr	w5, [sp, #24]
   10544:	ldr	x3, [sp]
   10548:	add	w8, w5, #0x8
   1054c:	add	x7, x3, #0xf
   10550:	tbz	w5, #31, 10508 <GOMP_doacross_wait@@GOMP_4.5+0x190>
   10554:	str	w8, [sp, #24]
   10558:	add	x7, x3, #0xf
   1055c:	cmp	w8, #0x0
   10560:	and	x7, x7, #0xfffffffffffffff8
   10564:	b.le	1058c <GOMP_doacross_wait@@GOMP_4.5+0x214>
   10568:	str	x7, [sp]
   1056c:	b	10510 <GOMP_doacross_wait@@GOMP_4.5+0x198>
   10570:	ldr	x1, [x2, #40]
   10574:	ldr	x4, [x2]
   10578:	cmp	x1, x0
   1057c:	b.le	105a4 <GOMP_doacross_wait@@GOMP_4.5+0x22c>
   10580:	add	x4, x4, #0x1
   10584:	sdiv	x4, x0, x4
   10588:	b	103d8 <GOMP_doacross_wait@@GOMP_4.5+0x60>
   1058c:	ldr	x3, [sp, #8]
   10590:	add	x3, x3, w5, sxtw
   10594:	b	10510 <GOMP_doacross_wait@@GOMP_4.5+0x198>
   10598:	dmb	ish
   1059c:	add	sp, sp, #0x60
   105a0:	ret
   105a4:	sub	x1, x0, x1
   105a8:	ldr	x3, [x2, #32]
   105ac:	sdiv	x4, x1, x4
   105b0:	add	x4, x4, x3
   105b4:	b	103d8 <GOMP_doacross_wait@@GOMP_4.5+0x60>
   105b8:	cmp	w4, #0x3
   105bc:	b.eq	105cc <GOMP_doacross_wait@@GOMP_4.5+0x254>  // b.none
   105c0:	ldr	x1, [x2]
   105c4:	sdiv	x4, x0, x1
   105c8:	b	103d8 <GOMP_doacross_wait@@GOMP_4.5+0x60>
   105cc:	mov	x4, x0
   105d0:	b	103d8 <GOMP_doacross_wait@@GOMP_4.5+0x60>
   105d4:	nop
   105d8:	adrp	x4, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   105dc:	ldr	x4, [x4, #4016]
   105e0:	mrs	x5, tpidr_el0
   105e4:	stp	x29, x30, [sp, #-368]!
   105e8:	add	x4, x5, x4
   105ec:	mov	x29, sp
   105f0:	stp	x19, x20, [sp, #16]
   105f4:	mov	w20, w0
   105f8:	stp	x21, x22, [sp, #32]
   105fc:	ldp	x0, x22, [x4, #16]
   10600:	stp	x25, x26, [sp, #64]
   10604:	mov	x26, x3
   10608:	cbz	x0, 10798 <GOMP_doacross_wait@@GOMP_4.5+0x420>
   1060c:	stp	x23, x24, [sp, #48]
   10610:	ldr	w24, [x0]
   10614:	cmp	w24, #0x1
   10618:	b.eq	10794 <GOMP_doacross_wait@@GOMP_4.5+0x41c>  // b.none
   1061c:	mov	x23, x1
   10620:	mov	x21, x2
   10624:	mov	x5, #0x0                   	// #0
   10628:	mov	w19, #0x0                   	// #0
   1062c:	cbz	w20, 108a4 <GOMP_doacross_wait@@GOMP_4.5+0x52c>
   10630:	add	x3, sp, #0x70
   10634:	mov	w1, #0x1                   	// #1
   10638:	mov	w0, #0x40                  	// #64
   1063c:	b	10664 <GOMP_doacross_wait@@GOMP_4.5+0x2ec>
   10640:	add	x5, x5, #0x1
   10644:	mov	w19, #0x41                  	// #65
   10648:	cmp	w20, w5
   1064c:	b.ls	10878 <GOMP_doacross_wait@@GOMP_4.5+0x500>  // b.plast
   10650:	ldr	x2, [x23, x5, lsl #3]
   10654:	cbz	x2, 10794 <GOMP_doacross_wait@@GOMP_4.5+0x41c>
   10658:	add	x5, x5, #0x1
   1065c:	cmp	w20, w5
   10660:	b.ls	106a4 <GOMP_doacross_wait@@GOMP_4.5+0x32c>  // b.plast
   10664:	ldr	x6, [x23, x5, lsl #3]
   10668:	cmp	w19, #0x40
   1066c:	sub	x4, x6, #0x1
   10670:	clz	x4, x4
   10674:	cbz	x6, 10794 <GOMP_doacross_wait@@GOMP_4.5+0x41c>
   10678:	sub	w4, w0, w4
   1067c:	b.hi	10658 <GOMP_doacross_wait@@GOMP_4.5+0x2e0>  // b.pmore
   10680:	cmp	x6, #0x1
   10684:	csel	w4, w4, w1, ne  // ne = any
   10688:	add	w19, w19, w4
   1068c:	cmp	w19, #0x40
   10690:	b.hi	10640 <GOMP_doacross_wait@@GOMP_4.5+0x2c8>  // b.pmore
   10694:	str	w4, [x3, x5, lsl #2]
   10698:	add	x5, x5, #0x1
   1069c:	cmp	w20, w5
   106a0:	b.hi	10664 <GOMP_doacross_wait@@GOMP_4.5+0x2ec>  // b.pmore
   106a4:	stp	x27, x28, [sp, #80]
   106a8:	ldr	w0, [x22]
   106ac:	mov	w24, w24
   106b0:	cmp	w0, #0x1
   106b4:	b.eq	106d0 <GOMP_doacross_wait@@GOMP_4.5+0x358>  // b.none
   106b8:	cmp	w0, #0x3
   106bc:	ldr	x24, [x23]
   106c0:	b.eq	106d0 <GOMP_doacross_wait@@GOMP_4.5+0x358>  // b.none
   106c4:	sub	x24, x24, #0x1
   106c8:	udiv	x24, x24, x21
   106cc:	add	x24, x24, #0x1
   106d0:	cmp	w19, #0x40
   106d4:	b.ls	107dc <GOMP_doacross_wait@@GOMP_4.5+0x464>  // b.plast
   106d8:	mov	x27, #0x3f                  	// #63
   106dc:	mov	x28, #0x77                  	// #119
   106e0:	add	x27, x27, w20, uxtw #3
   106e4:	and	x27, x27, #0xffffffffffffffc0
   106e8:	mul	x1, x24, x27
   106ec:	str	x1, [sp, #104]
   106f0:	add	x0, x1, x28
   106f4:	bl	b220 <fprintf@plt+0x2710>
   106f8:	add	x28, x0, x28
   106fc:	and	x28, x28, #0xffffffffffffffc0
   10700:	stp	x21, x27, [x0]
   10704:	mov	x25, x0
   10708:	str	w20, [x0, #16]
   1070c:	strb	wzr, [x0, #20]
   10710:	str	x28, [x0, #24]
   10714:	str	xzr, [x0, #40]
   10718:	ldr	x1, [sp, #104]
   1071c:	cbnz	x26, 10860 <GOMP_doacross_wait@@GOMP_4.5+0x4e8>
   10720:	str	xzr, [x0, #48]
   10724:	cmp	w19, #0x40
   10728:	b.ls	107ec <GOMP_doacross_wait@@GOMP_4.5+0x474>  // b.plast
   1072c:	ubfiz	x20, x20, #3, #32
   10730:	mov	x26, #0x0                   	// #0
   10734:	mov	x19, #0x0                   	// #0
   10738:	cbz	x24, 10764 <GOMP_doacross_wait@@GOMP_4.5+0x3ec>
   1073c:	nop
   10740:	ldr	x0, [x25, #24]
   10744:	add	x19, x19, #0x1
   10748:	mov	x2, x20
   1074c:	mov	w1, #0x0                   	// #0
   10750:	add	x0, x0, x26
   10754:	bl	87c0 <memset@plt>
   10758:	add	x26, x26, x27
   1075c:	cmp	x24, x19
   10760:	b.ne	10740 <GOMP_doacross_wait@@GOMP_4.5+0x3c8>  // b.any
   10764:	ldr	w0, [x22]
   10768:	cmp	x21, #0x0
   1076c:	ccmp	w0, #0x1, #0x0, eq  // eq = none
   10770:	b.eq	10884 <GOMP_doacross_wait@@GOMP_4.5+0x50c>  // b.none
   10774:	ldp	x23, x24, [sp, #48]
   10778:	ldp	x27, x28, [sp, #80]
   1077c:	str	x25, [x22, #32]
   10780:	ldp	x19, x20, [sp, #16]
   10784:	ldp	x21, x22, [sp, #32]
   10788:	ldp	x25, x26, [sp, #64]
   1078c:	ldp	x29, x30, [sp], #368
   10790:	ret
   10794:	ldp	x23, x24, [sp, #48]
   10798:	cbnz	x26, 107b4 <GOMP_doacross_wait@@GOMP_4.5+0x43c>
   1079c:	str	xzr, [x22, #32]
   107a0:	ldp	x19, x20, [sp, #16]
   107a4:	ldp	x21, x22, [sp, #32]
   107a8:	ldp	x25, x26, [sp, #64]
   107ac:	ldp	x29, x30, [sp], #368
   107b0:	ret
   107b4:	add	x0, x26, #0x38
   107b8:	bl	b258 <fprintf@plt+0x2748>
   107bc:	add	x1, x0, #0x38
   107c0:	str	x1, [x0, #48]
   107c4:	str	x0, [x22, #32]
   107c8:	ldp	x19, x20, [sp, #16]
   107cc:	ldp	x21, x22, [sp, #32]
   107d0:	ldp	x25, x26, [sp, #64]
   107d4:	ldp	x29, x30, [sp], #368
   107d8:	ret
   107dc:	mov	x28, #0x77                  	// #119
   107e0:	mov	x27, #0x40                  	// #64
   107e4:	add	x28, x28, w20, uxtw #2
   107e8:	b	106e8 <GOMP_doacross_wait@@GOMP_4.5+0x370>
   107ec:	mov	w0, #0x1                   	// #1
   107f0:	strb	w0, [x25, #20]
   107f4:	cbz	w20, 10838 <GOMP_doacross_wait@@GOMP_4.5+0x4c0>
   107f8:	sub	w2, w20, #0x1
   107fc:	add	x3, sp, #0x70
   10800:	mvn	x5, x2
   10804:	mov	x1, #0x0                   	// #0
   10808:	lsl	x2, x2, #2
   1080c:	mov	w0, #0x0                   	// #0
   10810:	add	x4, x2, #0x38
   10814:	lsl	x5, x5, #2
   10818:	add	x4, x25, x4
   1081c:	add	x3, x3, x2
   10820:	ldr	w2, [x3, x1]
   10824:	str	w0, [x4, x1]
   10828:	sub	x1, x1, #0x4
   1082c:	cmp	x5, x1
   10830:	add	w0, w0, w2
   10834:	b.ne	10820 <GOMP_doacross_wait@@GOMP_4.5+0x4a8>  // b.any
   10838:	cbz	x24, 10764 <GOMP_doacross_wait@@GOMP_4.5+0x3ec>
   1083c:	ldr	x1, [x25, #24]
   10840:	mov	x0, #0x0                   	// #0
   10844:	nop
   10848:	str	xzr, [x1]
   1084c:	add	x0, x0, #0x1
   10850:	cmp	x24, x0
   10854:	add	x1, x1, x27
   10858:	b.ne	10848 <GOMP_doacross_wait@@GOMP_4.5+0x4d0>  // b.any
   1085c:	b	10764 <GOMP_doacross_wait@@GOMP_4.5+0x3ec>
   10860:	add	x0, x28, x1
   10864:	mov	x2, x26
   10868:	mov	w1, #0x0                   	// #0
   1086c:	str	x0, [x25, #48]
   10870:	bl	87c0 <memset@plt>
   10874:	b	10724 <GOMP_doacross_wait@@GOMP_4.5+0x3ac>
   10878:	mov	w19, #0x41                  	// #65
   1087c:	stp	x27, x28, [sp, #80]
   10880:	b	106a8 <GOMP_doacross_wait@@GOMP_4.5+0x330>
   10884:	ldr	x1, [x23]
   10888:	udiv	x0, x1, x24
   1088c:	msub	x24, x0, x24, x1
   10890:	str	x0, [x25]
   10894:	madd	x0, x0, x24, x24
   10898:	str	x24, [x25, #32]
   1089c:	str	x0, [x25, #40]
   108a0:	b	10774 <GOMP_doacross_wait@@GOMP_4.5+0x3fc>
   108a4:	mov	w19, w20
   108a8:	stp	x27, x28, [sp, #80]
   108ac:	b	106a8 <GOMP_doacross_wait@@GOMP_4.5+0x330>

00000000000108b0 <GOMP_doacross_ull_post@@GOMP_4.5>:
   108b0:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   108b4:	ldr	x2, [x2, #4016]
   108b8:	mrs	x1, tpidr_el0
   108bc:	add	x2, x1, x2
   108c0:	ldr	x3, [x2, #24]
   108c4:	ldr	x1, [x3, #32]
   108c8:	cbz	x1, 10954 <GOMP_doacross_ull_post@@GOMP_4.5+0xa4>
   108cc:	ldr	x4, [x1, #24]
   108d0:	cbz	x4, 10954 <GOMP_doacross_ull_post@@GOMP_4.5+0xa4>
   108d4:	ldr	w3, [x3]
   108d8:	cmp	w3, #0x1
   108dc:	b.ne	1095c <GOMP_doacross_ull_post@@GOMP_4.5+0xac>  // b.any
   108e0:	ldr	w7, [x2, #40]
   108e4:	ldrb	w2, [x1, #20]
   108e8:	cbz	w2, 10974 <GOMP_doacross_ull_post@@GOMP_4.5+0xc4>
   108ec:	ldr	x3, [x0]
   108f0:	ldr	x5, [x1, #8]
   108f4:	ldr	w2, [x1, #56]
   108f8:	ldr	w6, [x1, #16]
   108fc:	madd	x7, x7, x5, x4
   10900:	cmp	w6, #0x1
   10904:	lsl	x3, x3, x2
   10908:	b.ls	10934 <GOMP_doacross_ull_post@@GOMP_4.5+0x84>  // b.plast
   1090c:	add	x4, x1, #0x38
   10910:	mov	x1, #0x1                   	// #1
   10914:	nop
   10918:	ldr	x2, [x0, x1, lsl #3]
   1091c:	ldr	w5, [x4, x1, lsl #2]
   10920:	add	x1, x1, #0x1
   10924:	cmp	w6, w1
   10928:	lsl	x2, x2, x5
   1092c:	orr	x3, x3, x2
   10930:	b.hi	10918 <GOMP_doacross_ull_post@@GOMP_4.5+0x68>  // b.pmore
   10934:	add	x3, x3, #0x1
   10938:	ldar	x0, [x7]
   1093c:	cmp	x0, x3
   10940:	b.eq	1094c <GOMP_doacross_ull_post@@GOMP_4.5+0x9c>  // b.none
   10944:	stlr	x3, [x7]
   10948:	ret
   1094c:	dmb	ish
   10950:	ret
   10954:	dmb	ish
   10958:	ret
   1095c:	cmp	w3, #0x3
   10960:	ldr	x7, [x0]
   10964:	b.eq	108e4 <GOMP_doacross_ull_post@@GOMP_4.5+0x34>  // b.none
   10968:	ldr	x2, [x1]
   1096c:	udiv	x7, x7, x2
   10970:	b	108e4 <GOMP_doacross_ull_post@@GOMP_4.5+0x34>
   10974:	dmb	ishld
   10978:	ldr	w3, [x1, #16]
   1097c:	ldr	x4, [x1, #8]
   10980:	ldr	x2, [x1, #24]
   10984:	sub	w1, w3, #0x1
   10988:	mul	x7, x7, x4
   1098c:	cbz	w3, 10948 <GOMP_doacross_ull_post@@GOMP_4.5+0x98>
   10990:	ubfiz	x1, x1, #3, #32
   10994:	add	x7, x7, x1
   10998:	add	x1, x0, x1
   1099c:	add	x7, x2, x7
   109a0:	ldr	x2, [x1]
   109a4:	add	x2, x2, #0x1
   109a8:	ldr	x3, [x7]
   109ac:	cmp	x2, x3
   109b0:	b.eq	109b8 <GOMP_doacross_ull_post@@GOMP_4.5+0x108>  // b.none
   109b4:	stlr	x2, [x7]
   109b8:	cmp	x1, x0
   109bc:	sub	x7, x7, #0x8
   109c0:	sub	x1, x1, #0x8
   109c4:	b.ne	109a0 <GOMP_doacross_ull_post@@GOMP_4.5+0xf0>  // b.any
   109c8:	ret
   109cc:	nop

00000000000109d0 <GOMP_doacross_ull_wait@@GOMP_4.5>:
   109d0:	sub	sp, sp, #0x60
   109d4:	adrp	x9, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   109d8:	ldr	x9, [x9, #4016]
   109dc:	mrs	x8, tpidr_el0
   109e0:	stp	x1, x2, [sp, #40]
   109e4:	add	x1, x8, x9
   109e8:	stp	x3, x4, [sp, #56]
   109ec:	ldr	x3, [x1, #24]
   109f0:	stp	x5, x6, [sp, #72]
   109f4:	str	x7, [sp, #88]
   109f8:	ldr	x2, [x3, #32]
   109fc:	cbz	x2, 10bf4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x224>
   10a00:	ldr	x5, [x2, #24]
   10a04:	cbz	x5, 10bf4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x224>
   10a08:	ldr	w4, [x3]
   10a0c:	cmp	w4, #0x1
   10a10:	b.ne	10c14 <GOMP_doacross_ull_wait@@GOMP_4.5+0x244>  // b.any
   10a14:	ldr	x6, [x3, #8]
   10a18:	cbz	x6, 10bcc <GOMP_doacross_ull_wait@@GOMP_4.5+0x1fc>
   10a1c:	ldr	x3, [x1, #16]
   10a20:	udiv	x1, x0, x6
   10a24:	ldr	w3, [x3]
   10a28:	udiv	x6, x1, x3
   10a2c:	msub	x6, x6, x3, x1
   10a30:	ldrb	w7, [x2, #20]
   10a34:	add	x11, sp, #0x20
   10a38:	ldr	x1, [x2, #8]
   10a3c:	mov	w10, #0xffffffc8            	// #-56
   10a40:	mul	x6, x6, x1
   10a44:	add	x1, x0, #0x1
   10a48:	cbz	w7, 10b3c <GOMP_doacross_ull_wait@@GOMP_4.5+0x16c>
   10a4c:	add	x8, sp, #0x60
   10a50:	ldr	w1, [x2, #56]
   10a54:	add	x4, sp, #0x20
   10a58:	mov	w3, #0xffffffc8            	// #-56
   10a5c:	stp	x8, x8, [sp]
   10a60:	add	x5, x5, x6
   10a64:	ldr	w8, [x2, #16]
   10a68:	str	x4, [sp, #16]
   10a6c:	lsl	x0, x0, x1
   10a70:	stp	w3, wzr, [sp, #24]
   10a74:	cmp	w8, #0x1
   10a78:	b.ls	10b08 <GOMP_doacross_ull_wait@@GOMP_4.5+0x138>  // b.plast
   10a7c:	sub	w8, w8, #0x2
   10a80:	add	x4, x2, #0x40
   10a84:	add	x1, x2, #0x3c
   10a88:	mov	w9, #0x0                   	// #0
   10a8c:	add	x8, x4, w8, uxtw #2
   10a90:	add	x4, sp, #0x60
   10a94:	mov	x11, x4
   10a98:	mov	w10, #0x0                   	// #0
   10a9c:	b	10ac4 <GOMP_doacross_ull_wait@@GOMP_4.5+0xf4>
   10aa0:	mov	x2, x4
   10aa4:	ldr	w6, [x1], #4
   10aa8:	mov	w9, w7
   10aac:	add	x4, x4, #0x8
   10ab0:	cmp	x1, x8
   10ab4:	ldr	x2, [x2]
   10ab8:	lsl	x2, x2, x6
   10abc:	orr	x0, x0, x2
   10ac0:	b.eq	10af8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x128>  // b.none
   10ac4:	add	w6, w3, #0x8
   10ac8:	tbz	w3, #31, 10aa0 <GOMP_doacross_ull_wait@@GOMP_4.5+0xd0>
   10acc:	add	x2, x11, w3, sxtw
   10ad0:	mov	w10, w7
   10ad4:	mov	w3, w6
   10ad8:	cmp	w6, #0x0
   10adc:	b.gt	10aa0 <GOMP_doacross_ull_wait@@GOMP_4.5+0xd0>
   10ae0:	ldr	x2, [x2]
   10ae4:	ldr	w6, [x1], #4
   10ae8:	cmp	x1, x8
   10aec:	lsl	x2, x2, x6
   10af0:	orr	x0, x0, x2
   10af4:	b.ne	10ac4 <GOMP_doacross_ull_wait@@GOMP_4.5+0xf4>  // b.any
   10af8:	cbz	w10, 10b00 <GOMP_doacross_ull_wait@@GOMP_4.5+0x130>
   10afc:	str	w3, [sp, #24]
   10b00:	cbz	w9, 10b08 <GOMP_doacross_ull_wait@@GOMP_4.5+0x138>
   10b04:	str	x4, [sp]
   10b08:	ldar	x1, [x5]
   10b0c:	cmp	x1, x0
   10b10:	b.hi	10b24 <GOMP_doacross_ull_wait@@GOMP_4.5+0x154>  // b.pmore
   10b14:	nop
   10b18:	ldr	x1, [x5]
   10b1c:	cmp	x1, x0
   10b20:	b.ls	10b18 <GOMP_doacross_ull_wait@@GOMP_4.5+0x148>  // b.plast
   10b24:	dmb	ish
   10b28:	add	sp, sp, #0x60
   10b2c:	ret
   10b30:	mov	w0, w7
   10b34:	cmp	w7, w0
   10b38:	b.eq	10bf4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x224>  // b.none
   10b3c:	ldr	w7, [x2, #16]
   10b40:	add	x0, sp, #0x60
   10b44:	stp	x0, x0, [sp]
   10b48:	mov	w0, w7
   10b4c:	str	x11, [sp, #16]
   10b50:	stp	w10, wzr, [sp, #24]
   10b54:	cbz	w7, 10b34 <GOMP_doacross_ull_wait@@GOMP_4.5+0x164>
   10b58:	mov	w0, #0x0                   	// #0
   10b5c:	b	10b94 <GOMP_doacross_ull_wait@@GOMP_4.5+0x1c4>
   10b60:	and	x8, x8, #0xfffffffffffffff8
   10b64:	str	x8, [sp]
   10b68:	ldr	x4, [x3]
   10b6c:	add	x4, x4, #0x1
   10b70:	add	x3, x6, w0, uxtw #3
   10b74:	add	x3, x5, x3
   10b78:	ldr	x3, [x3]
   10b7c:	cmp	x4, x3
   10b80:	b.cc	10b30 <GOMP_doacross_ull_wait@@GOMP_4.5+0x160>  // b.lo, b.ul, b.last
   10b84:	b.hi	10b34 <GOMP_doacross_ull_wait@@GOMP_4.5+0x164>  // b.pmore
   10b88:	add	w0, w0, #0x1
   10b8c:	cmp	w7, w0
   10b90:	b.ls	10b34 <GOMP_doacross_ull_wait@@GOMP_4.5+0x164>  // b.plast
   10b94:	mov	x4, x1
   10b98:	cbz	w0, 10b70 <GOMP_doacross_ull_wait@@GOMP_4.5+0x1a0>
   10b9c:	ldr	w4, [sp, #24]
   10ba0:	ldr	x3, [sp]
   10ba4:	add	w9, w4, #0x8
   10ba8:	add	x8, x3, #0xf
   10bac:	tbz	w4, #31, 10b60 <GOMP_doacross_ull_wait@@GOMP_4.5+0x190>
   10bb0:	str	w9, [sp, #24]
   10bb4:	add	x8, x3, #0xf
   10bb8:	cmp	w9, #0x0
   10bbc:	and	x8, x8, #0xfffffffffffffff8
   10bc0:	b.le	10be8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x218>
   10bc4:	str	x8, [sp]
   10bc8:	b	10b68 <GOMP_doacross_ull_wait@@GOMP_4.5+0x198>
   10bcc:	ldr	x1, [x2, #40]
   10bd0:	ldr	x3, [x2]
   10bd4:	cmp	x1, x0
   10bd8:	b.ls	10c00 <GOMP_doacross_ull_wait@@GOMP_4.5+0x230>  // b.plast
   10bdc:	add	x6, x3, #0x1
   10be0:	udiv	x6, x0, x6
   10be4:	b	10a30 <GOMP_doacross_ull_wait@@GOMP_4.5+0x60>
   10be8:	ldr	x3, [sp, #8]
   10bec:	add	x3, x3, w4, sxtw
   10bf0:	b	10b68 <GOMP_doacross_ull_wait@@GOMP_4.5+0x198>
   10bf4:	dmb	ish
   10bf8:	add	sp, sp, #0x60
   10bfc:	ret
   10c00:	sub	x6, x0, x1
   10c04:	ldr	x1, [x2, #32]
   10c08:	udiv	x6, x6, x3
   10c0c:	add	x6, x6, x1
   10c10:	b	10a30 <GOMP_doacross_ull_wait@@GOMP_4.5+0x60>
   10c14:	cmp	w4, #0x3
   10c18:	mov	x6, x0
   10c1c:	b.eq	10a30 <GOMP_doacross_ull_wait@@GOMP_4.5+0x60>  // b.none
   10c20:	ldr	x6, [x2]
   10c24:	udiv	x6, x0, x6
   10c28:	b	10a30 <GOMP_doacross_ull_wait@@GOMP_4.5+0x60>
   10c2c:	nop
   10c30:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   10c34:	ldr	x1, [x1, #4016]
   10c38:	mrs	x2, tpidr_el0
   10c3c:	tst	w0, #0x6
   10c40:	add	x1, x2, x1
   10c44:	ldr	x2, [x1, #16]
   10c48:	b.eq	10c64 <GOMP_doacross_ull_wait@@GOMP_4.5+0x294>  // b.none
   10c4c:	mov	w0, #0x0                   	// #0
   10c50:	cbz	x2, 10c60 <GOMP_doacross_ull_wait@@GOMP_4.5+0x290>
   10c54:	ldr	w0, [x2, #1332]
   10c58:	cmp	w0, #0x0
   10c5c:	cset	w0, ne  // ne = any
   10c60:	ret
   10c64:	tbz	w0, #3, 10c98 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2c8>
   10c68:	ldr	x0, [x1, #80]
   10c6c:	ldr	x1, [x0, #40]
   10c70:	cbz	x1, 10c98 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2c8>
   10c74:	ldrb	w0, [x1, #49]
   10c78:	cbnz	w0, 10c60 <GOMP_doacross_ull_wait@@GOMP_4.5+0x290>
   10c7c:	ldrb	w0, [x1, #50]
   10c80:	cbz	w0, 10c98 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2c8>
   10c84:	ldr	x0, [x1]
   10c88:	cbz	x0, 10c98 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2c8>
   10c8c:	ldrb	w0, [x0, #49]
   10c90:	cbnz	w0, 10c60 <GOMP_doacross_ull_wait@@GOMP_4.5+0x290>
   10c94:	nop
   10c98:	mov	w0, #0x0                   	// #0
   10c9c:	cbz	x2, 10c60 <GOMP_doacross_ull_wait@@GOMP_4.5+0x290>
   10ca0:	ldr	w0, [x2, #132]
   10ca4:	ubfx	x0, x0, #2, #1
   10ca8:	ret
   10cac:	nop
   10cb0:	stp	x29, x30, [sp, #-64]!
   10cb4:	mov	x29, sp
   10cb8:	stp	x21, x22, [sp, #32]
   10cbc:	mrs	x21, tpidr_el0
   10cc0:	adrp	x22, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   10cc4:	ldr	x22, [x22, #4016]
   10cc8:	stp	x19, x20, [sp, #16]
   10ccc:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   10cd0:	add	x3, x21, x22
   10cd4:	add	x20, x20, #0x2b8
   10cd8:	ldr	x2, [x3, #80]
   10cdc:	cmp	x2, #0x0
   10ce0:	add	x2, x2, #0x90
   10ce4:	csel	x20, x20, x2, eq  // eq = none
   10ce8:	cmp	w0, #0x1
   10cec:	b.eq	10d54 <GOMP_doacross_ull_wait@@GOMP_4.5+0x384>  // b.none
   10cf0:	ldr	w2, [x3, #48]
   10cf4:	str	x23, [sp, #48]
   10cf8:	mov	w23, w1
   10cfc:	cbz	w2, 10d08 <GOMP_doacross_ull_wait@@GOMP_4.5+0x338>
   10d00:	ldrb	w3, [x20, #25]
   10d04:	cbz	w3, 10d50 <GOMP_doacross_ull_wait@@GOMP_4.5+0x380>
   10d08:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   10d0c:	ldr	x3, [x3, #736]
   10d10:	cmp	x3, w2, uxtw
   10d14:	b.ls	10d50 <GOMP_doacross_ull_wait@@GOMP_4.5+0x380>  // b.plast
   10d18:	mov	w19, w0
   10d1c:	cbnz	w0, 10d24 <GOMP_doacross_ull_wait@@GOMP_4.5+0x354>
   10d20:	ldr	w19, [x20]
   10d24:	ldrb	w0, [x20, #24]
   10d28:	cbnz	w0, 10d6c <GOMP_doacross_ull_wait@@GOMP_4.5+0x39c>
   10d2c:	ldr	w0, [x20, #20]
   10d30:	cmn	w0, #0x1
   10d34:	b.ne	10d88 <GOMP_doacross_ull_wait@@GOMP_4.5+0x3b8>  // b.any
   10d38:	mov	w0, w19
   10d3c:	ldp	x19, x20, [sp, #16]
   10d40:	ldp	x21, x22, [sp, #32]
   10d44:	ldr	x23, [sp, #48]
   10d48:	ldp	x29, x30, [sp], #64
   10d4c:	ret
   10d50:	ldr	x23, [sp, #48]
   10d54:	mov	w19, #0x1                   	// #1
   10d58:	mov	w0, w19
   10d5c:	ldp	x19, x20, [sp, #16]
   10d60:	ldp	x21, x22, [sp, #32]
   10d64:	ldp	x29, x30, [sp], #64
   10d68:	ret
   10d6c:	bl	1a600 <omp_test_nest_lock@OMP_1.0+0x550>
   10d70:	cmp	w19, w0
   10d74:	csel	w19, w19, w0, ls  // ls = plast
   10d78:	cmp	w23, #0x0
   10d7c:	ccmp	w19, w23, #0x0, ne  // ne = any
   10d80:	csel	w19, w19, w23, ls  // ls = plast
   10d84:	b	10d2c <GOMP_doacross_ull_wait@@GOMP_4.5+0x35c>
   10d88:	cmp	w19, #0x1
   10d8c:	b.eq	10d50 <GOMP_doacross_ull_wait@@GOMP_4.5+0x380>  // b.none
   10d90:	add	x21, x21, x22
   10d94:	ldr	x1, [x21, #16]
   10d98:	ldr	x9, [x21, #96]
   10d9c:	cbz	x1, 10e14 <GOMP_doacross_ull_wait@@GOMP_4.5+0x444>
   10da0:	cbz	x9, 10e30 <GOMP_doacross_ull_wait@@GOMP_4.5+0x460>
   10da4:	mov	w6, w19
   10da8:	add	x5, x9, #0x18
   10dac:	mov	x4, #0x1                   	// #1
   10db0:	b	10db8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x3e8>
   10db4:	ldr	w0, [x20, #20]
   10db8:	ldr	x1, [x9, #24]
   10dbc:	mov	x3, x6
   10dc0:	mov	w8, w19
   10dc4:	sub	x2, x4, x1
   10dc8:	sub	w7, w4, w1
   10dcc:	add	x2, x2, w0, uxtw
   10dd0:	cmp	x2, x6
   10dd4:	b.cs	10de0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x410>  // b.hs, b.nlast
   10dd8:	add	w8, w7, w0
   10ddc:	add	w3, w7, w0
   10de0:	sub	x0, x1, #0x1
   10de4:	add	x0, x0, x3
   10de8:	ldxr	x2, [x5]
   10dec:	cmp	x2, x1
   10df0:	b.ne	10dfc <GOMP_doacross_ull_wait@@GOMP_4.5+0x42c>  // b.any
   10df4:	stlxr	w3, x0, [x5]
   10df8:	cbnz	w3, 10de8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x418>
   10dfc:	dmb	ish
   10e00:	cmp	x2, x1
   10e04:	b.ne	10db4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x3e4>  // b.any
   10e08:	mov	w19, w8
   10e0c:	ldr	x23, [sp, #48]
   10e10:	b	10d58 <GOMP_doacross_ull_wait@@GOMP_4.5+0x388>
   10e14:	cmp	w19, w0
   10e18:	csel	w19, w19, w0, ls  // ls = plast
   10e1c:	cbz	x9, 10d38 <GOMP_doacross_ull_wait@@GOMP_4.5+0x368>
   10e20:	mov	w0, w19
   10e24:	ldr	x23, [sp, #48]
   10e28:	str	x0, [x9, #24]
   10e2c:	b	10d58 <GOMP_doacross_ull_wait@@GOMP_4.5+0x388>
   10e30:	cmp	w19, w0
   10e34:	csel	w19, w19, w0, ls  // ls = plast
   10e38:	ldr	x23, [sp, #48]
   10e3c:	b	10d58 <GOMP_doacross_ull_wait@@GOMP_4.5+0x388>

0000000000010e40 <GOMP_parallel_start@@GOMP_1.0>:
   10e40:	stp	x29, x30, [sp, #-48]!
   10e44:	mov	x29, sp
   10e48:	stp	x19, x20, [sp, #16]
   10e4c:	mov	x20, x1
   10e50:	mov	w1, #0x0                   	// #0
   10e54:	mov	x19, x0
   10e58:	mov	w0, w2
   10e5c:	str	x21, [sp, #32]
   10e60:	bl	10cb0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2e0>
   10e64:	mov	w21, w0
   10e68:	bl	181f8 <omp_in_final@@OMP_3.1+0x1d0>
   10e6c:	mov	w2, w21
   10e70:	mov	x4, x0
   10e74:	mov	x1, x20
   10e78:	mov	x0, x19
   10e7c:	ldp	x19, x20, [sp, #16]
   10e80:	mov	x5, #0x0                   	// #0
   10e84:	ldr	x21, [sp, #32]
   10e88:	mov	w3, #0x0                   	// #0
   10e8c:	ldp	x29, x30, [sp], #48
   10e90:	b	18348 <omp_in_final@@OMP_3.1+0x320>
   10e94:	nop

0000000000010e98 <GOMP_parallel_end@@GOMP_1.0>:
   10e98:	stp	x29, x30, [sp, #-32]!
   10e9c:	mrs	x0, tpidr_el0
   10ea0:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   10ea4:	mov	x29, sp
   10ea8:	stp	x19, x20, [sp, #16]
   10eac:	add	x1, x1, #0x2b8
   10eb0:	adrp	x19, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   10eb4:	ldr	x19, [x19, #4016]
   10eb8:	add	x19, x0, x19
   10ebc:	ldr	x0, [x19, #80]
   10ec0:	cmp	x0, #0x0
   10ec4:	add	x0, x0, #0x90
   10ec8:	csel	x0, x1, x0, eq  // eq = none
   10ecc:	ldr	w0, [x0, #20]
   10ed0:	cmn	w0, #0x1
   10ed4:	b.ne	10ee4 <GOMP_parallel_end@@GOMP_1.0+0x4c>  // b.any
   10ed8:	ldp	x19, x20, [sp, #16]
   10edc:	ldp	x29, x30, [sp], #32
   10ee0:	b	19348 <omp_in_final@@OMP_3.1+0x1320>
   10ee4:	ldr	x0, [x19, #16]
   10ee8:	cbz	x0, 10ed8 <GOMP_parallel_end@@GOMP_1.0+0x40>
   10eec:	ldr	w20, [x0]
   10ef0:	bl	19348 <omp_in_final@@OMP_3.1+0x1320>
   10ef4:	cmp	w20, #0x1
   10ef8:	b.ls	10f28 <GOMP_parallel_end@@GOMP_1.0+0x90>  // b.plast
   10efc:	ldr	x0, [x19, #16]
   10f00:	cbz	x0, 10f34 <GOMP_parallel_end@@GOMP_1.0+0x9c>
   10f04:	ldr	x0, [x19, #96]
   10f08:	mov	x1, #0x1                   	// #1
   10f0c:	sub	x20, x1, w20, uxtw
   10f10:	add	x0, x0, #0x18
   10f14:	ldxr	x1, [x0]
   10f18:	add	x1, x1, x20
   10f1c:	stlxr	w2, x1, [x0]
   10f20:	cbnz	w2, 10f14 <GOMP_parallel_end@@GOMP_1.0+0x7c>
   10f24:	dmb	ish
   10f28:	ldp	x19, x20, [sp, #16]
   10f2c:	ldp	x29, x30, [sp], #32
   10f30:	ret
   10f34:	ldr	x0, [x19, #96]
   10f38:	mov	x1, #0x1                   	// #1
   10f3c:	str	x1, [x0, #24]
   10f40:	b	10f28 <GOMP_parallel_end@@GOMP_1.0+0x90>
   10f44:	nop

0000000000010f48 <GOMP_parallel@@GOMP_4.0>:
   10f48:	stp	x29, x30, [sp, #-48]!
   10f4c:	mov	x29, sp
   10f50:	stp	x19, x20, [sp, #16]
   10f54:	mov	x20, x1
   10f58:	mov	w1, #0x0                   	// #0
   10f5c:	mov	x19, x0
   10f60:	mov	w0, w2
   10f64:	stp	x21, x22, [sp, #32]
   10f68:	mov	w22, w3
   10f6c:	bl	10cb0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2e0>
   10f70:	mov	w21, w0
   10f74:	bl	181f8 <omp_in_final@@OMP_3.1+0x1d0>
   10f78:	mov	w3, w22
   10f7c:	mov	w2, w21
   10f80:	mov	x4, x0
   10f84:	mov	x1, x20
   10f88:	mov	x5, #0x0                   	// #0
   10f8c:	mov	x0, x19
   10f90:	bl	18348 <omp_in_final@@OMP_3.1+0x320>
   10f94:	mov	x0, x20
   10f98:	blr	x19
   10f9c:	ldp	x19, x20, [sp, #16]
   10fa0:	ldp	x21, x22, [sp, #32]
   10fa4:	ldp	x29, x30, [sp], #48
   10fa8:	b	10e98 <GOMP_parallel_end@@GOMP_1.0>
   10fac:	nop

0000000000010fb0 <GOMP_parallel_reductions@@GOMP_5.0>:
   10fb0:	stp	x29, x30, [sp, #-64]!
   10fb4:	mov	x29, sp
   10fb8:	stp	x19, x20, [sp, #16]
   10fbc:	mov	x20, x1
   10fc0:	mov	w1, #0x0                   	// #0
   10fc4:	stp	x21, x22, [sp, #32]
   10fc8:	mov	x22, x0
   10fcc:	mov	w0, w2
   10fd0:	str	x23, [sp, #48]
   10fd4:	mov	w23, w3
   10fd8:	bl	10cb0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2e0>
   10fdc:	mov	w19, w0
   10fe0:	mov	w1, w0
   10fe4:	ldr	x0, [x20]
   10fe8:	bl	17c28 <GOMP_task_reduction_remap@@GOMP_5.0+0x170>
   10fec:	mov	x21, x0
   10ff0:	mov	w0, w19
   10ff4:	bl	181f8 <omp_in_final@@OMP_3.1+0x1d0>
   10ff8:	mov	x5, x21
   10ffc:	mov	x4, x0
   11000:	mov	w3, w23
   11004:	mov	w2, w19
   11008:	mov	x1, x20
   1100c:	mov	x0, x22
   11010:	bl	18348 <omp_in_final@@OMP_3.1+0x320>
   11014:	mov	x0, x20
   11018:	blr	x22
   1101c:	bl	10e98 <GOMP_parallel_end@@GOMP_1.0>
   11020:	mov	x0, x21
   11024:	bl	8900 <free@plt>
   11028:	mov	w0, w19
   1102c:	ldp	x19, x20, [sp, #16]
   11030:	ldp	x21, x22, [sp, #32]
   11034:	ldr	x23, [sp, #48]
   11038:	ldp	x29, x30, [sp], #64
   1103c:	ret

0000000000011040 <GOMP_cancellation_point@@GOMP_4.0>:
   11040:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   11044:	ldrb	w1, [x1, #1364]
   11048:	cbz	w1, 11050 <GOMP_cancellation_point@@GOMP_4.0+0x10>
   1104c:	b	10c30 <GOMP_doacross_ull_wait@@GOMP_4.5+0x260>
   11050:	mov	w0, #0x0                   	// #0
   11054:	ret

0000000000011058 <GOMP_cancel@@GOMP_4.0>:
   11058:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1105c:	ldrb	w2, [x2, #1364]
   11060:	cbz	w2, 11110 <GOMP_cancel@@GOMP_4.0+0xb8>
   11064:	stp	x29, x30, [sp, #-48]!
   11068:	mov	x29, sp
   1106c:	stp	x19, x20, [sp, #16]
   11070:	and	w19, w1, #0xff
   11074:	cbz	w19, 1114c <GOMP_cancel@@GOMP_4.0+0xf4>
   11078:	mov	w1, w0
   1107c:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   11080:	ldr	x0, [x0, #4016]
   11084:	mrs	x2, tpidr_el0
   11088:	tst	w1, #0x6
   1108c:	add	x2, x2, x0
   11090:	ldr	x0, [x2, #16]
   11094:	b.ne	11118 <GOMP_cancel@@GOMP_4.0+0xc0>  // b.any
   11098:	tbz	w1, #3, 11138 <GOMP_cancel@@GOMP_4.0+0xe0>
   1109c:	ldr	x1, [x2, #80]
   110a0:	ldr	x20, [x1, #40]
   110a4:	cbz	x20, 110fc <GOMP_cancel@@GOMP_4.0+0xa4>
   110a8:	ldrb	w1, [x20, #50]
   110ac:	cbz	w1, 110bc <GOMP_cancel@@GOMP_4.0+0x64>
   110b0:	ldr	x1, [x20]
   110b4:	cmp	x1, #0x0
   110b8:	csel	x20, x20, x1, eq  // eq = none
   110bc:	ldrb	w1, [x20, #49]
   110c0:	cbnz	w1, 110fc <GOMP_cancel@@GOMP_4.0+0xa4>
   110c4:	add	x0, x0, #0x500
   110c8:	mov	w2, #0x1                   	// #1
   110cc:	ldaxr	w1, [x0]
   110d0:	cbnz	w1, 110dc <GOMP_cancel@@GOMP_4.0+0x84>
   110d4:	stxr	w3, w2, [x0]
   110d8:	cbnz	w3, 110cc <GOMP_cancel@@GOMP_4.0+0x74>
   110dc:	cmp	w1, #0x0
   110e0:	b.ne	11164 <GOMP_cancel@@GOMP_4.0+0x10c>  // b.any
   110e4:	mov	w1, #0x1                   	// #1
   110e8:	strb	w1, [x20, #49]
   110ec:	ldxr	w1, [x0]
   110f0:	stlxr	w2, wzr, [x0]
   110f4:	cbnz	w2, 110ec <GOMP_cancel@@GOMP_4.0+0x94>
   110f8:	tbnz	w1, #31, 11158 <GOMP_cancel@@GOMP_4.0+0x100>
   110fc:	mov	w2, w19
   11100:	mov	w0, w2
   11104:	ldp	x19, x20, [sp, #16]
   11108:	ldp	x29, x30, [sp], #48
   1110c:	ret
   11110:	mov	w0, w2
   11114:	ret
   11118:	cbz	x0, 110fc <GOMP_cancel@@GOMP_4.0+0xa4>
   1111c:	mov	w2, w19
   11120:	mov	w1, #0x1                   	// #1
   11124:	str	w1, [x0, #1332]
   11128:	mov	w0, w2
   1112c:	ldp	x19, x20, [sp, #16]
   11130:	ldp	x29, x30, [sp], #48
   11134:	ret
   11138:	mov	w1, #0x1                   	// #1
   1113c:	str	w1, [x0, #1336]
   11140:	bl	1b0e8 <omp_get_num_procs@@OMP_1.0+0xa40>
   11144:	mov	w2, w19
   11148:	b	11100 <GOMP_cancel@@GOMP_4.0+0xa8>
   1114c:	ldp	x19, x20, [sp, #16]
   11150:	ldp	x29, x30, [sp], #48
   11154:	b	10c30 <GOMP_doacross_ull_wait@@GOMP_4.5+0x260>
   11158:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1115c:	mov	w2, w19
   11160:	b	11128 <GOMP_cancel@@GOMP_4.0+0xd0>
   11164:	str	x0, [sp, #40]
   11168:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   1116c:	ldr	x0, [sp, #40]
   11170:	b	110e4 <GOMP_cancel@@GOMP_4.0+0x8c>
   11174:	nop

0000000000011178 <omp_get_num_threads@@OMP_1.0>:
   11178:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1117c:	ldr	x2, [x2, #4016]
   11180:	mrs	x1, tpidr_el0
   11184:	mov	w0, #0x1                   	// #1
   11188:	add	x1, x1, x2
   1118c:	ldr	x1, [x1, #16]
   11190:	cbz	x1, 11198 <omp_get_num_threads@@OMP_1.0+0x20>
   11194:	ldr	w0, [x1]
   11198:	ret
   1119c:	nop

00000000000111a0 <omp_get_thread_num@@OMP_1.0>:
   111a0:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   111a4:	ldr	x0, [x0, #4016]
   111a8:	mrs	x1, tpidr_el0
   111ac:	add	x0, x1, x0
   111b0:	ldr	w0, [x0, #40]
   111b4:	ret

00000000000111b8 <omp_in_parallel@@OMP_1.0>:
   111b8:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   111bc:	ldr	x0, [x0, #4016]
   111c0:	mrs	x1, tpidr_el0
   111c4:	add	x0, x1, x0
   111c8:	ldr	w0, [x0, #48]
   111cc:	cmp	w0, #0x0
   111d0:	cset	w0, ne  // ne = any
   111d4:	ret

00000000000111d8 <omp_get_level@@OMP_3.0>:
   111d8:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   111dc:	ldr	x0, [x0, #4016]
   111e0:	mrs	x1, tpidr_el0
   111e4:	add	x0, x1, x0
   111e8:	ldr	w0, [x0, #44]
   111ec:	ret

00000000000111f0 <omp_get_ancestor_thread_num@@OMP_3.0>:
   111f0:	tbnz	w0, #31, 11238 <omp_get_ancestor_thread_num@@OMP_3.0+0x48>
   111f4:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   111f8:	ldr	x1, [x1, #4016]
   111fc:	mrs	x2, tpidr_el0
   11200:	add	x1, x2, x1
   11204:	ldr	w2, [x1, #44]
   11208:	cmp	w2, w0
   1120c:	b.cc	11238 <omp_get_ancestor_thread_num@@OMP_3.0+0x48>  // b.lo, b.ul, b.last
   11210:	sub	w2, w2, w0
   11214:	add	x0, x1, #0x10
   11218:	cmp	w2, #0x0
   1121c:	b.le	11230 <omp_get_ancestor_thread_num@@OMP_3.0+0x40>
   11220:	ldr	x0, [x0]
   11224:	subs	w2, w2, #0x1
   11228:	add	x0, x0, #0x8
   1122c:	b.ne	11220 <omp_get_ancestor_thread_num@@OMP_3.0+0x30>  // b.any
   11230:	ldr	w0, [x0, #24]
   11234:	ret
   11238:	mov	w0, #0xffffffff            	// #-1
   1123c:	ret

0000000000011240 <omp_get_team_size@@OMP_3.0>:
   11240:	sub	sp, sp, #0x10
   11244:	mov	w2, w0
   11248:	str	w0, [sp, #12]
   1124c:	tbnz	w2, #31, 112a8 <omp_get_team_size@@OMP_3.0+0x68>
   11250:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   11254:	ldr	x0, [x0, #4016]
   11258:	mrs	x1, tpidr_el0
   1125c:	add	x0, x1, x0
   11260:	ldr	w1, [x0, #44]
   11264:	cmp	w1, w2
   11268:	b.cc	112a8 <omp_get_team_size@@OMP_3.0+0x68>  // b.lo, b.ul, b.last
   1126c:	sub	w1, w1, w2
   11270:	add	x0, x0, #0x10
   11274:	cmp	w1, #0x0
   11278:	b.le	11290 <omp_get_team_size@@OMP_3.0+0x50>
   1127c:	nop
   11280:	ldr	x0, [x0]
   11284:	subs	w1, w1, #0x1
   11288:	add	x0, x0, #0x8
   1128c:	b.ne	11280 <omp_get_team_size@@OMP_3.0+0x40>  // b.any
   11290:	ldr	x1, [x0]
   11294:	mov	w0, #0x1                   	// #1
   11298:	cbz	x1, 112a0 <omp_get_team_size@@OMP_3.0+0x60>
   1129c:	ldr	w0, [x1]
   112a0:	add	sp, sp, #0x10
   112a4:	ret
   112a8:	mov	w0, #0xffffffff            	// #-1
   112ac:	b	112a0 <omp_get_team_size@@OMP_3.0+0x60>

00000000000112b0 <omp_get_active_level@@OMP_3.0>:
   112b0:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   112b4:	ldr	x0, [x0, #4016]
   112b8:	mrs	x1, tpidr_el0
   112bc:	add	x0, x1, x0
   112c0:	ldr	w0, [x0, #48]
   112c4:	ret

00000000000112c8 <GOMP_sections_start@@GOMP_1.0>:
   112c8:	stp	x29, x30, [sp, #-48]!
   112cc:	mov	x29, sp
   112d0:	str	x19, [sp, #16]
   112d4:	mov	w19, w0
   112d8:	mov	x0, #0x0                   	// #0
   112dc:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
   112e0:	tst	w0, #0xff
   112e4:	b.eq	11340 <GOMP_sections_start@@GOMP_1.0+0x78>  // b.none
   112e8:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   112ec:	ldr	x2, [x2, #4016]
   112f0:	mrs	x0, tpidr_el0
   112f4:	mov	x4, #0x2                   	// #2
   112f8:	mov	x3, #0x1                   	// #1
   112fc:	add	x0, x0, x2
   11300:	movk	x4, #0x1, lsl #32
   11304:	mov	w1, w19
   11308:	add	x1, x1, #0x1
   1130c:	ldr	x2, [x0, #24]
   11310:	stp	x4, x3, [x2]
   11314:	ldr	x0, [x0, #32]
   11318:	stp	x1, x3, [x2, #16]
   1131c:	str	x3, [x2, #72]
   11320:	cbz	x0, 11340 <GOMP_sections_start@@GOMP_1.0+0x78>
   11324:	add	x0, x0, #0x50
   11328:	ldxr	x1, [x0]
   1132c:	stlxr	w3, x2, [x0]
   11330:	cbnz	w3, 11328 <GOMP_sections_start@@GOMP_1.0+0x60>
   11334:	cmp	x1, #0x1
   11338:	b.eq	11340 <GOMP_sections_start@@GOMP_1.0+0x78>  // b.none
   1133c:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
   11340:	add	x1, sp, #0x28
   11344:	add	x0, sp, #0x20
   11348:	bl	be18 <omp_is_initial_device@@OMP_4.0+0x218>
   1134c:	sxtb	w0, w0
   11350:	ldr	w1, [sp, #32]
   11354:	cmp	w0, #0x0
   11358:	mov	w2, #0x0                   	// #0
   1135c:	csel	w0, w1, w2, ne  // ne = any
   11360:	ldr	x19, [sp, #16]
   11364:	ldp	x29, x30, [sp], #48
   11368:	ret
   1136c:	nop

0000000000011370 <GOMP_sections2_start@@GOMP_5.0>:
   11370:	stp	x29, x30, [sp, #-96]!
   11374:	mov	x29, sp
   11378:	stp	x19, x20, [sp, #16]
   1137c:	mov	w19, w0
   11380:	mov	x20, x2
   11384:	stp	x21, x22, [sp, #32]
   11388:	cbz	x1, 114cc <GOMP_sections2_start@@GOMP_5.0+0x15c>
   1138c:	mov	x21, x1
   11390:	bl	17f28 <GOMP_task_reduction_remap@@GOMP_5.0+0x470>
   11394:	mov	x0, #0x0                   	// #0
   11398:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
   1139c:	tst	w0, #0xff
   113a0:	b.eq	11454 <GOMP_sections2_start@@GOMP_5.0+0xe4>  // b.none
   113a4:	adrp	x22, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   113a8:	ldr	x22, [x22, #4016]
   113ac:	mov	x2, #0x2                   	// #2
   113b0:	stp	x23, x24, [sp, #48]
   113b4:	mrs	x23, tpidr_el0
   113b8:	mov	x24, #0x1                   	// #1
   113bc:	str	x25, [sp, #64]
   113c0:	add	x25, x23, x22
   113c4:	movk	x2, #0x1, lsl #32
   113c8:	add	x19, x19, #0x1
   113cc:	mov	x0, x21
   113d0:	ldr	x1, [x25, #24]
   113d4:	stp	x2, x24, [x1]
   113d8:	stp	x19, x24, [x1, #16]
   113dc:	str	x24, [x1, #72]
   113e0:	bl	15d78 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   113e4:	ldr	x1, [x25, #80]
   113e8:	ldr	x0, [x25, #24]
   113ec:	ldr	x1, [x1, #40]
   113f0:	ldr	x25, [sp, #64]
   113f4:	strb	w24, [x1, #50]
   113f8:	str	x21, [x0, #88]
   113fc:	cbz	x20, 11420 <GOMP_sections2_start@@GOMP_5.0+0xb0>
   11400:	add	x1, x23, x22
   11404:	ldr	x0, [x20]
   11408:	ldr	x19, [x1, #24]
   1140c:	cmp	x0, #0x20
   11410:	b.ls	11518 <GOMP_sections2_start@@GOMP_5.0+0x1a8>  // b.plast
   11414:	bl	b258 <fprintf@plt+0x2748>
   11418:	str	x0, [x19, #32]
   1141c:	str	x0, [x20]
   11420:	add	x22, x23, x22
   11424:	ldr	x0, [x22, #32]
   11428:	cbz	x0, 114c4 <GOMP_sections2_start@@GOMP_5.0+0x154>
   1142c:	ldr	x2, [x22, #24]
   11430:	add	x0, x0, #0x50
   11434:	ldxr	x1, [x0]
   11438:	stlxr	w3, x2, [x0]
   1143c:	cbnz	w3, 11434 <GOMP_sections2_start@@GOMP_5.0+0xc4>
   11440:	cmp	x1, #0x1
   11444:	b.eq	114c4 <GOMP_sections2_start@@GOMP_5.0+0x154>  // b.none
   11448:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
   1144c:	ldp	x23, x24, [sp, #48]
   11450:	b	11494 <GOMP_sections2_start@@GOMP_5.0+0x124>
   11454:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   11458:	ldr	x2, [x2, #4016]
   1145c:	mrs	x1, tpidr_el0
   11460:	mov	x0, x21
   11464:	add	x1, x1, x2
   11468:	ldr	x1, [x1, #24]
   1146c:	ldr	x1, [x1, #88]
   11470:	bl	17d50 <GOMP_task_reduction_remap@@GOMP_5.0+0x298>
   11474:	cbz	x20, 11494 <GOMP_sections2_start@@GOMP_5.0+0x124>
   11478:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1147c:	ldr	x0, [x0, #4016]
   11480:	mrs	x1, tpidr_el0
   11484:	add	x0, x1, x0
   11488:	ldr	x0, [x0, #24]
   1148c:	ldr	x0, [x0, #32]
   11490:	str	x0, [x20]
   11494:	add	x1, sp, #0x58
   11498:	add	x0, sp, #0x50
   1149c:	bl	be18 <omp_is_initial_device@@OMP_4.0+0x218>
   114a0:	sxtb	w0, w0
   114a4:	ldr	w1, [sp, #80]
   114a8:	cmp	w0, #0x0
   114ac:	mov	w2, #0x0                   	// #0
   114b0:	csel	w0, w1, w2, ne  // ne = any
   114b4:	ldp	x19, x20, [sp, #16]
   114b8:	ldp	x21, x22, [sp, #32]
   114bc:	ldp	x29, x30, [sp], #96
   114c0:	ret
   114c4:	ldp	x23, x24, [sp, #48]
   114c8:	b	11494 <GOMP_sections2_start@@GOMP_5.0+0x124>
   114cc:	mov	x0, #0x0                   	// #0
   114d0:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
   114d4:	tst	w0, #0xff
   114d8:	b.eq	11474 <GOMP_sections2_start@@GOMP_5.0+0x104>  // b.none
   114dc:	adrp	x22, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   114e0:	ldr	x22, [x22, #4016]
   114e4:	mov	w0, w19
   114e8:	stp	x23, x24, [sp, #48]
   114ec:	mrs	x23, tpidr_el0
   114f0:	add	x1, x23, x22
   114f4:	mov	x3, #0x2                   	// #2
   114f8:	mov	x2, #0x1                   	// #1
   114fc:	add	x0, x0, #0x1
   11500:	movk	x3, #0x1, lsl #32
   11504:	ldr	x1, [x1, #24]
   11508:	stp	x3, x2, [x1]
   1150c:	stp	x0, x2, [x1, #16]
   11510:	str	x2, [x1, #72]
   11514:	b	113fc <GOMP_sections2_start@@GOMP_5.0+0x8c>
   11518:	mov	x2, x0
   1151c:	mov	w1, #0x0                   	// #0
   11520:	add	x0, x19, #0x60
   11524:	bl	87c0 <memset@plt>
   11528:	str	x0, [x20]
   1152c:	b	11420 <GOMP_sections2_start@@GOMP_5.0+0xb0>

0000000000011530 <GOMP_sections_next@@GOMP_1.0>:
   11530:	stp	x29, x30, [sp, #-32]!
   11534:	mov	x29, sp
   11538:	add	x1, sp, #0x18
   1153c:	add	x0, sp, #0x10
   11540:	bl	be18 <omp_is_initial_device@@OMP_4.0+0x218>
   11544:	sxtb	w1, w0
   11548:	ldr	w2, [sp, #16]
   1154c:	cmp	w1, #0x0
   11550:	mov	w0, #0x0                   	// #0
   11554:	ldp	x29, x30, [sp], #32
   11558:	csel	w0, w2, w0, ne  // ne = any
   1155c:	ret

0000000000011560 <GOMP_parallel_sections_start@@GOMP_1.0>:
   11560:	stp	x29, x30, [sp, #-48]!
   11564:	mov	x29, sp
   11568:	stp	x19, x20, [sp, #16]
   1156c:	mov	w19, w3
   11570:	mov	x20, x0
   11574:	stp	x21, x22, [sp, #32]
   11578:	mov	x21, x1
   1157c:	mov	w1, w19
   11580:	mov	w0, w2
   11584:	bl	10cb0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2e0>
   11588:	mov	w22, w0
   1158c:	add	x19, x19, #0x1
   11590:	bl	181f8 <omp_in_final@@OMP_3.1+0x1d0>
   11594:	mov	x4, x0
   11598:	mov	x8, #0x2                   	// #2
   1159c:	mov	x7, #0x1                   	// #1
   115a0:	movk	x8, #0x1, lsl #32
   115a4:	mov	w2, w22
   115a8:	stp	x8, x7, [x4, #256]
   115ac:	mov	x1, x21
   115b0:	mov	x0, x20
   115b4:	stp	x19, x7, [x4, #272]
   115b8:	mov	x5, #0x0                   	// #0
   115bc:	mov	w3, #0x0                   	// #0
   115c0:	str	x7, [x4, #328]
   115c4:	ldp	x19, x20, [sp, #16]
   115c8:	ldp	x21, x22, [sp, #32]
   115cc:	ldp	x29, x30, [sp], #48
   115d0:	b	18348 <omp_in_final@@OMP_3.1+0x320>
   115d4:	nop

00000000000115d8 <GOMP_parallel_sections@@GOMP_4.0>:
   115d8:	stp	x29, x30, [sp, #-64]!
   115dc:	mov	x29, sp
   115e0:	stp	x19, x20, [sp, #16]
   115e4:	mov	w19, w3
   115e8:	mov	x20, x0
   115ec:	stp	x21, x22, [sp, #32]
   115f0:	mov	x21, x1
   115f4:	mov	w1, w19
   115f8:	mov	w0, w2
   115fc:	str	x23, [sp, #48]
   11600:	mov	w23, w4
   11604:	bl	10cb0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x2e0>
   11608:	mov	w22, w0
   1160c:	bl	181f8 <omp_in_final@@OMP_3.1+0x1d0>
   11610:	mov	x4, x0
   11614:	mov	x8, #0x2                   	// #2
   11618:	mov	x7, #0x1                   	// #1
   1161c:	mov	w3, w23
   11620:	mov	w2, w22
   11624:	mov	x1, x21
   11628:	movk	x8, #0x1, lsl #32
   1162c:	add	x19, x19, #0x1
   11630:	stp	x8, x7, [x4, #256]
   11634:	mov	x5, #0x0                   	// #0
   11638:	mov	x0, x20
   1163c:	stp	x19, x7, [x4, #272]
   11640:	str	x7, [x4, #328]
   11644:	bl	18348 <omp_in_final@@OMP_3.1+0x320>
   11648:	mov	x0, x21
   1164c:	blr	x20
   11650:	ldp	x19, x20, [sp, #16]
   11654:	ldp	x21, x22, [sp, #32]
   11658:	ldr	x23, [sp, #48]
   1165c:	ldp	x29, x30, [sp], #64
   11660:	b	10e98 <GOMP_parallel_end@@GOMP_1.0>
   11664:	nop

0000000000011668 <GOMP_sections_end@@GOMP_1.0>:
   11668:	b	19a00 <omp_in_final@@OMP_3.1+0x19d8>
   1166c:	nop

0000000000011670 <GOMP_sections_end_cancel@@GOMP_4.0>:
   11670:	b	19b10 <omp_in_final@@OMP_3.1+0x1ae8>
   11674:	nop

0000000000011678 <GOMP_sections_end_nowait@@GOMP_1.0>:
   11678:	b	19be0 <omp_in_final@@OMP_3.1+0x1bb8>
   1167c:	nop

0000000000011680 <GOMP_single_start@@GOMP_1.0>:
   11680:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   11684:	ldr	x0, [x0, #4016]
   11688:	mrs	x1, tpidr_el0
   1168c:	add	x0, x1, x0
   11690:	ldr	x1, [x0, #16]
   11694:	cbz	x1, 116c8 <GOMP_single_start@@GOMP_1.0+0x48>
   11698:	ldr	x2, [x0, #64]
   1169c:	add	x1, x1, #0x70
   116a0:	add	x3, x2, #0x1
   116a4:	str	x3, [x0, #64]
   116a8:	ldxr	x0, [x1]
   116ac:	cmp	x0, x2
   116b0:	b.ne	116bc <GOMP_single_start@@GOMP_1.0+0x3c>  // b.any
   116b4:	stlxr	w4, x3, [x1]
   116b8:	cbnz	w4, 116a8 <GOMP_single_start@@GOMP_1.0+0x28>
   116bc:	cset	w0, eq  // eq = none
   116c0:	dmb	ish
   116c4:	ret
   116c8:	mov	w0, #0x1                   	// #1
   116cc:	ret

00000000000116d0 <GOMP_single_copy_start@@GOMP_1.0>:
   116d0:	stp	x29, x30, [sp, #-32]!
   116d4:	mov	x0, #0x0                   	// #0
   116d8:	mov	x29, sp
   116dc:	str	x19, [sp, #16]
   116e0:	bl	19868 <omp_in_final@@OMP_3.1+0x1840>
   116e4:	tst	w0, #0xff
   116e8:	b.eq	1174c <GOMP_single_copy_start@@GOMP_1.0+0x7c>  // b.none
   116ec:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   116f0:	ldr	x1, [x1, #4016]
   116f4:	mrs	x0, tpidr_el0
   116f8:	add	x1, x0, x1
   116fc:	ldr	x0, [x1, #32]
   11700:	cbz	x0, 11738 <GOMP_single_copy_start@@GOMP_1.0+0x68>
   11704:	ldr	x2, [x1, #24]
   11708:	add	x0, x0, #0x50
   1170c:	ldxr	x1, [x0]
   11710:	stlxr	w3, x2, [x0]
   11714:	cbnz	w3, 1170c <GOMP_single_copy_start@@GOMP_1.0+0x3c>
   11718:	cmp	x1, #0x1
   1171c:	b.eq	11738 <GOMP_single_copy_start@@GOMP_1.0+0x68>  // b.none
   11720:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
   11724:	mov	x19, #0x0                   	// #0
   11728:	mov	x0, x19
   1172c:	ldr	x19, [sp, #16]
   11730:	ldp	x29, x30, [sp], #32
   11734:	ret
   11738:	mov	x19, #0x0                   	// #0
   1173c:	mov	x0, x19
   11740:	ldr	x19, [sp, #16]
   11744:	ldp	x29, x30, [sp], #32
   11748:	ret
   1174c:	adrp	x19, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   11750:	ldr	x19, [x19, #4016]
   11754:	mrs	x0, tpidr_el0
   11758:	add	x19, x0, x19
   1175c:	ldr	x0, [x19, #16]
   11760:	add	x0, x0, #0x80
   11764:	bl	1ae58 <omp_get_num_procs@@OMP_1.0+0x7b0>
   11768:	ldr	x0, [x19, #24]
   1176c:	ldr	x19, [x0, #72]
   11770:	bl	19be0 <omp_in_final@@OMP_3.1+0x1bb8>
   11774:	mov	x0, x19
   11778:	ldr	x19, [sp, #16]
   1177c:	ldp	x29, x30, [sp], #32
   11780:	ret
   11784:	nop

0000000000011788 <GOMP_single_copy_end@@GOMP_1.0>:
   11788:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1178c:	ldr	x1, [x1, #4016]
   11790:	mrs	x2, tpidr_el0
   11794:	add	x1, x2, x1
   11798:	mov	x2, x0
   1179c:	ldr	x0, [x1, #16]
   117a0:	cbz	x0, 117c4 <GOMP_single_copy_end@@GOMP_1.0+0x3c>
   117a4:	stp	x29, x30, [sp, #-16]!
   117a8:	add	x0, x0, #0x80
   117ac:	mov	x29, sp
   117b0:	ldr	x1, [x1, #24]
   117b4:	str	x2, [x1, #72]
   117b8:	bl	1ae58 <omp_get_num_procs@@OMP_1.0+0x7b0>
   117bc:	ldp	x29, x30, [sp], #16
   117c0:	b	19be0 <omp_in_final@@OMP_3.1+0x1bb8>
   117c4:	b	19be0 <omp_in_final@@OMP_3.1+0x1bb8>
   117c8:	ldr	w8, [x0, #24]
   117cc:	adrp	x7, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   117d0:	add	x5, x7, #0xc08
   117d4:	mov	x4, x0
   117d8:	ldr	x6, [x1]
   117dc:	lsl	x1, x8, #4
   117e0:	add	x3, x5, x1
   117e4:	eor	x2, x6, x6, lsr #32
   117e8:	ldr	w5, [x5, x1]
   117ec:	ldr	w1, [x3, #4]
   117f0:	and	x11, x2, #0xffffffff
   117f4:	ldr	w10, [x3, #12]
   117f8:	mul	x1, x1, x11
   117fc:	lsr	x0, x1, #32
   11800:	sub	w1, w2, w0
   11804:	add	w1, w0, w1, lsr #1
   11808:	lsr	w1, w1, w10
   1180c:	msub	w1, w1, w5, w2
   11810:	add	x0, x4, w1, uxtw #3
   11814:	ldr	x0, [x0, #32]
   11818:	cbz	x0, 1189c <GOMP_single_copy_end@@GOMP_1.0+0x114>
   1181c:	cmp	x0, #0x1
   11820:	b.eq	11830 <GOMP_single_copy_end@@GOMP_1.0+0xa8>  // b.none
   11824:	ldr	x3, [x0]
   11828:	cmp	x6, x3
   1182c:	b.eq	11898 <GOMP_single_copy_end@@GOMP_1.0+0x110>  // b.none
   11830:	add	x9, x7, #0xc08
   11834:	sub	w7, w5, #0x2
   11838:	add	x8, x9, x8, lsl #4
   1183c:	add	w9, w2, #0x1
   11840:	ldr	x5, [x4]
   11844:	ldr	w0, [x8, #8]
   11848:	mul	x0, x0, x11
   1184c:	lsr	x0, x0, #32
   11850:	sub	w3, w2, w0
   11854:	add	w3, w0, w3, lsr #1
   11858:	lsr	w3, w3, w10
   1185c:	msub	w3, w3, w7, w9
   11860:	add	w2, w1, w3
   11864:	mov	x1, x2
   11868:	cmp	x5, w2, uxtw
   1186c:	b.hi	11878 <GOMP_single_copy_end@@GOMP_1.0+0xf0>  // b.pmore
   11870:	sub	w2, w2, w5
   11874:	mov	x1, x2
   11878:	add	x2, x2, #0x4
   1187c:	ldr	x0, [x4, x2, lsl #3]
   11880:	cmp	x0, #0x1
   11884:	cbz	x0, 1189c <GOMP_single_copy_end@@GOMP_1.0+0x114>
   11888:	b.eq	11860 <GOMP_single_copy_end@@GOMP_1.0+0xd8>  // b.none
   1188c:	ldr	x2, [x0]
   11890:	cmp	x6, x2
   11894:	b.ne	11860 <GOMP_single_copy_end@@GOMP_1.0+0xd8>  // b.any
   11898:	ret
   1189c:	mov	x0, #0x0                   	// #0
   118a0:	ret
   118a4:	nop
   118a8:	cbz	x1, 1190c <GOMP_single_copy_end@@GOMP_1.0+0x184>
   118ac:	stp	x29, x30, [sp, #-48]!
   118b0:	mov	x29, sp
   118b4:	stp	x19, x20, [sp, #16]
   118b8:	mov	x19, x1
   118bc:	str	x21, [sp, #32]
   118c0:	mov	x21, x0
   118c4:	ldr	x3, [x19, #8]
   118c8:	mov	x0, x19
   118cc:	ldp	x20, x19, [x19, #24]
   118d0:	cbz	x3, 118e8 <GOMP_single_copy_end@@GOMP_1.0+0x160>
   118d4:	mov	x2, x3
   118d8:	stur	xzr, [x2, #-112]
   118dc:	ldr	x2, [x2]
   118e0:	cmp	x3, x2
   118e4:	b.ne	118d8 <GOMP_single_copy_end@@GOMP_1.0+0x150>  // b.any
   118e8:	bl	8900 <free@plt>
   118ec:	mov	x1, x20
   118f0:	mov	x0, x21
   118f4:	bl	118a8 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   118f8:	cbnz	x19, 118c4 <GOMP_single_copy_end@@GOMP_1.0+0x13c>
   118fc:	ldp	x19, x20, [sp, #16]
   11900:	ldr	x21, [sp, #32]
   11904:	ldp	x29, x30, [sp], #48
   11908:	ret
   1190c:	ret
   11910:	stp	x29, x30, [sp, #-48]!
   11914:	adrp	x2, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   11918:	mov	w3, #0x0                   	// #0
   1191c:	mov	x29, sp
   11920:	add	x4, x2, #0xc08
   11924:	stp	x19, x20, [sp, #16]
   11928:	mov	w20, #0x1e                  	// #30
   1192c:	str	x21, [sp, #32]
   11930:	b	11950 <GOMP_single_copy_end@@GOMP_1.0+0x1c8>
   11934:	sub	w1, w20, w3
   11938:	add	w1, w3, w1, lsr #1
   1193c:	ubfiz	x5, x1, #4, #32
   11940:	ldr	w5, [x4, x5]
   11944:	cmp	x0, x5
   11948:	b.hi	119b0 <GOMP_single_copy_end@@GOMP_1.0+0x228>  // b.pmore
   1194c:	mov	w20, w1
   11950:	cmp	w20, w3
   11954:	b.ne	11934 <GOMP_single_copy_end@@GOMP_1.0+0x1ac>  // b.any
   11958:	add	x2, x2, #0xc08
   1195c:	ubfiz	x1, x20, #4, #32
   11960:	ldr	w21, [x2, x1]
   11964:	cmp	x0, x21
   11968:	b.hi	119b8 <GOMP_single_copy_end@@GOMP_1.0+0x230>  // b.pmore
   1196c:	add	x19, x21, #0x4
   11970:	lsl	x19, x19, #3
   11974:	mov	x0, x19
   11978:	bl	b220 <fprintf@plt+0x2710>
   1197c:	sub	x2, x19, #0x20
   11980:	mov	x19, x0
   11984:	mov	w1, #0x0                   	// #0
   11988:	add	x0, x0, #0x20
   1198c:	stp	x21, xzr, [x19]
   11990:	str	xzr, [x19, #16]
   11994:	str	w20, [x19, #24]
   11998:	bl	87c0 <memset@plt>
   1199c:	mov	x0, x19
   119a0:	ldp	x19, x20, [sp, #16]
   119a4:	ldr	x21, [sp, #32]
   119a8:	ldp	x29, x30, [sp], #48
   119ac:	ret
   119b0:	add	w3, w1, #0x1
   119b4:	b	11950 <GOMP_single_copy_end@@GOMP_1.0+0x1c8>
   119b8:	bl	8870 <abort@plt>
   119bc:	nop
   119c0:	add	x4, x0, #0x20
   119c4:	mov	x5, x0
   119c8:	ldr	w0, [x0, #24]
   119cc:	adrp	x2, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   119d0:	add	x2, x2, #0xc08
   119d4:	lsl	x0, x0, #4
   119d8:	add	x7, x2, x0
   119dc:	ldr	w6, [x2, x0]
   119e0:	ldr	w2, [x7, #4]
   119e4:	ldr	w8, [x7, #12]
   119e8:	umull	x2, w1, w2
   119ec:	lsr	x3, x2, #32
   119f0:	sub	w2, w1, w3
   119f4:	add	w2, w3, w2, lsr #1
   119f8:	lsr	w2, w2, w8
   119fc:	msub	w2, w2, w6, w1
   11a00:	add	x0, x4, w2, uxtw #3
   11a04:	ldr	x3, [x4, w2, uxtw #3]
   11a08:	cbz	x3, 11a6c <GOMP_single_copy_end@@GOMP_1.0+0x2e4>
   11a0c:	cmp	x3, #0x1
   11a10:	b.eq	11a70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>  // b.none
   11a14:	ldr	w0, [x7, #8]
   11a18:	add	w3, w1, #0x1
   11a1c:	sub	w6, w6, #0x2
   11a20:	ldr	x5, [x5]
   11a24:	umull	x0, w1, w0
   11a28:	lsr	x0, x0, #32
   11a2c:	sub	w1, w1, w0
   11a30:	add	w1, w0, w1, lsr #1
   11a34:	lsr	w1, w1, w8
   11a38:	msub	w1, w1, w6, w3
   11a3c:	b	11a48 <GOMP_single_copy_end@@GOMP_1.0+0x2c0>
   11a40:	cmp	x3, #0x1
   11a44:	b.eq	11a70 <GOMP_single_copy_end@@GOMP_1.0+0x2e8>  // b.none
   11a48:	add	w0, w2, w1
   11a4c:	mov	x2, x0
   11a50:	cmp	x5, w0, uxtw
   11a54:	b.hi	11a60 <GOMP_single_copy_end@@GOMP_1.0+0x2d8>  // b.pmore
   11a58:	sub	w0, w0, w5
   11a5c:	mov	x2, x0
   11a60:	ldr	x3, [x4, x0, lsl #3]
   11a64:	add	x0, x4, x0, lsl #3
   11a68:	cbnz	x3, 11a40 <GOMP_single_copy_end@@GOMP_1.0+0x2b8>
   11a6c:	ret
   11a70:	stp	x29, x30, [sp, #-16]!
   11a74:	mov	x29, sp
   11a78:	bl	8870 <abort@plt>
   11a7c:	nop
   11a80:	stp	x29, x30, [sp, #-96]!
   11a84:	cmp	w2, #0x1
   11a88:	mov	x29, sp
   11a8c:	stp	x19, x20, [sp, #16]
   11a90:	ldr	x7, [x1]
   11a94:	stp	x21, x22, [sp, #32]
   11a98:	mov	x21, x1
   11a9c:	ldr	x20, [x0]
   11aa0:	mov	w22, w2
   11aa4:	eor	x19, x7, x7, lsr #32
   11aa8:	ldr	x8, [x20]
   11aac:	b.eq	11bd0 <GOMP_single_copy_end@@GOMP_1.0+0x448>  // b.none
   11ab0:	ldr	w5, [x20, #24]
   11ab4:	adrp	x9, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   11ab8:	add	x3, x9, #0xc08
   11abc:	and	x10, x19, #0xffffffff
   11ac0:	lsl	x2, x5, #4
   11ac4:	add	x0, x3, x2
   11ac8:	ldr	w2, [x3, x2]
   11acc:	ldr	w3, [x0, #4]
   11ad0:	ldr	w11, [x0, #12]
   11ad4:	mul	x3, x3, x10
   11ad8:	lsr	x3, x3, #32
   11adc:	sub	w4, w19, w3
   11ae0:	add	w3, w3, w4, lsr #1
   11ae4:	lsr	w3, w3, w11
   11ae8:	msub	w6, w3, w2, w19
   11aec:	add	x1, x6, #0x4
   11af0:	mov	x3, x6
   11af4:	ldr	x0, [x20, x1, lsl #3]
   11af8:	cbz	x0, 11bf8 <GOMP_single_copy_end@@GOMP_1.0+0x470>
   11afc:	cmp	x0, #0x1
   11b00:	b.eq	11bf0 <GOMP_single_copy_end@@GOMP_1.0+0x468>  // b.none
   11b04:	ldr	x6, [x0]
   11b08:	mov	x0, #0x0                   	// #0
   11b0c:	ldr	x4, [x21]
   11b10:	cmp	x6, x4
   11b14:	b.eq	11c20 <GOMP_single_copy_end@@GOMP_1.0+0x498>  // b.none
   11b18:	add	x9, x9, #0xc08
   11b1c:	sub	w2, w2, #0x2
   11b20:	add	x5, x9, x5, lsl #4
   11b24:	add	w4, w19, #0x1
   11b28:	ldr	w1, [x5, #8]
   11b2c:	mul	x1, x1, x10
   11b30:	lsr	x1, x1, #32
   11b34:	sub	w7, w19, w1
   11b38:	add	w7, w1, w7, lsr #1
   11b3c:	lsr	w7, w7, w11
   11b40:	msub	w7, w7, w2, w4
   11b44:	nop
   11b48:	add	w6, w3, w7
   11b4c:	mov	x3, x6
   11b50:	cmp	x8, w6, uxtw
   11b54:	b.hi	11b60 <GOMP_single_copy_end@@GOMP_1.0+0x3d8>  // b.pmore
   11b58:	sub	w6, w6, w8
   11b5c:	mov	x3, x6
   11b60:	add	x5, x6, #0x4
   11b64:	ldr	x4, [x20, x5, lsl #3]
   11b68:	cmp	x4, #0x1
   11b6c:	cbz	x4, 11ba8 <GOMP_single_copy_end@@GOMP_1.0+0x420>
   11b70:	b.eq	11b98 <GOMP_single_copy_end@@GOMP_1.0+0x410>  // b.none
   11b74:	ldr	x6, [x4]
   11b78:	ldr	x4, [x21]
   11b7c:	cmp	x6, x4
   11b80:	b.ne	11b48 <GOMP_single_copy_end@@GOMP_1.0+0x3c0>  // b.any
   11b84:	add	x0, x20, x5, lsl #3
   11b88:	ldp	x19, x20, [sp, #16]
   11b8c:	ldp	x21, x22, [sp, #32]
   11b90:	ldp	x29, x30, [sp], #96
   11b94:	ret
   11b98:	add	x5, x20, x5, lsl #3
   11b9c:	cmp	x0, #0x0
   11ba0:	csel	x0, x5, x0, eq  // eq = none
   11ba4:	b	11b48 <GOMP_single_copy_end@@GOMP_1.0+0x3c0>
   11ba8:	cbz	w22, 11ce4 <GOMP_single_copy_end@@GOMP_1.0+0x55c>
   11bac:	cbz	x0, 11bfc <GOMP_single_copy_end@@GOMP_1.0+0x474>
   11bb0:	ldr	x1, [x20, #16]
   11bb4:	ldp	x21, x22, [sp, #32]
   11bb8:	sub	x1, x1, #0x1
   11bbc:	str	x1, [x20, #16]
   11bc0:	str	xzr, [x0]
   11bc4:	ldp	x19, x20, [sp, #16]
   11bc8:	ldp	x29, x30, [sp], #96
   11bcc:	ret
   11bd0:	stp	x23, x24, [sp, #48]
   11bd4:	mov	x24, x0
   11bd8:	add	x1, x8, x8, lsl #1
   11bdc:	ldr	x0, [x20, #8]
   11be0:	cmp	x1, x0, lsl #2
   11be4:	b.ls	11c34 <GOMP_single_copy_end@@GOMP_1.0+0x4ac>  // b.plast
   11be8:	ldp	x23, x24, [sp, #48]
   11bec:	b	11ab0 <GOMP_single_copy_end@@GOMP_1.0+0x328>
   11bf0:	add	x0, x20, x1, lsl #3
   11bf4:	b	11b18 <GOMP_single_copy_end@@GOMP_1.0+0x390>
   11bf8:	cbz	w22, 11b88 <GOMP_single_copy_end@@GOMP_1.0+0x400>
   11bfc:	ldr	x1, [x20, #8]
   11c00:	add	x6, x6, #0x4
   11c04:	ldp	x21, x22, [sp, #32]
   11c08:	add	x1, x1, #0x1
   11c0c:	str	x1, [x20, #8]
   11c10:	add	x0, x20, x6, lsl #3
   11c14:	ldp	x19, x20, [sp, #16]
   11c18:	ldp	x29, x30, [sp], #96
   11c1c:	ret
   11c20:	add	x0, x20, x1, lsl #3
   11c24:	ldp	x19, x20, [sp, #16]
   11c28:	ldp	x21, x22, [sp, #32]
   11c2c:	ldp	x29, x30, [sp], #96
   11c30:	ret
   11c34:	ldr	x1, [x20, #16]
   11c38:	stp	x25, x26, [sp, #64]
   11c3c:	add	x23, x20, #0x20
   11c40:	sub	x1, x0, x1
   11c44:	str	x27, [sp, #80]
   11c48:	add	x26, x23, x8, lsl #3
   11c4c:	cmp	x8, x1, lsl #1
   11c50:	lsl	x0, x1, #1
   11c54:	b.cc	11c74 <GOMP_single_copy_end@@GOMP_1.0+0x4ec>  // b.lo, b.ul, b.last
   11c58:	lsl	x1, x1, #3
   11c5c:	mov	x2, #0x20                  	// #32
   11c60:	cmp	x1, x2
   11c64:	csel	x1, x1, x2, cs  // cs = hs, nlast
   11c68:	cmp	x1, x8
   11c6c:	b.cc	11c74 <GOMP_single_copy_end@@GOMP_1.0+0x4ec>  // b.lo, b.ul, b.last
   11c70:	sub	x0, x8, #0x1
   11c74:	bl	11910 <GOMP_single_copy_end@@GOMP_1.0+0x188>
   11c78:	mov	x27, x0
   11c7c:	ldp	x0, x1, [x20, #8]
   11c80:	sub	x0, x0, x1
   11c84:	str	x0, [x27, #8]
   11c88:	b	11c94 <GOMP_single_copy_end@@GOMP_1.0+0x50c>
   11c8c:	cmp	x26, x23
   11c90:	b.ls	11cc0 <GOMP_single_copy_end@@GOMP_1.0+0x538>  // b.plast
   11c94:	ldr	x25, [x23]
   11c98:	add	x23, x23, #0x8
   11c9c:	cmp	x25, #0x1
   11ca0:	b.ls	11c8c <GOMP_single_copy_end@@GOMP_1.0+0x504>  // b.plast
   11ca4:	ldr	x1, [x25]
   11ca8:	mov	x0, x27
   11cac:	eor	x1, x1, x1, lsr #32
   11cb0:	bl	119c0 <GOMP_single_copy_end@@GOMP_1.0+0x238>
   11cb4:	str	x25, [x0]
   11cb8:	cmp	x26, x23
   11cbc:	b.hi	11c94 <GOMP_single_copy_end@@GOMP_1.0+0x50c>  // b.pmore
   11cc0:	mov	x0, x20
   11cc4:	bl	8900 <free@plt>
   11cc8:	mov	x20, x27
   11ccc:	ldr	x8, [x27]
   11cd0:	ldp	x25, x26, [sp, #64]
   11cd4:	str	x27, [x24]
   11cd8:	ldp	x23, x24, [sp, #48]
   11cdc:	ldr	x27, [sp, #80]
   11ce0:	b	11ab0 <GOMP_single_copy_end@@GOMP_1.0+0x328>
   11ce4:	mov	x0, #0x0                   	// #0
   11ce8:	b	11b88 <GOMP_single_copy_end@@GOMP_1.0+0x400>
   11cec:	nop
   11cf0:	stp	x29, x30, [sp, #-96]!
   11cf4:	mov	x29, sp
   11cf8:	ldp	x5, x6, [x2]
   11cfc:	stp	x19, x20, [sp, #16]
   11d00:	mov	x20, x0
   11d04:	stp	x21, x22, [sp, #32]
   11d08:	mov	x22, x1
   11d0c:	stp	x27, x28, [sp, #80]
   11d10:	cbz	x5, 11f44 <GOMP_single_copy_end@@GOMP_1.0+0x7bc>
   11d14:	add	x2, x2, #0x10
   11d18:	add	x0, x0, #0xd0
   11d1c:	mov	x28, #0x0                   	// #0
   11d20:	cmp	x28, x6
   11d24:	add	x0, x0, #0x28
   11d28:	ldr	x4, [x2, x28, lsl #3]
   11d2c:	cset	w3, cs  // cs = hs, nlast
   11d30:	stur	x4, [x0, #-40]
   11d34:	add	x28, x28, #0x1
   11d38:	sturb	w3, [x0, #-8]
   11d3c:	cmp	x5, x28
   11d40:	b.ne	11d20 <GOMP_single_copy_end@@GOMP_1.0+0x598>  // b.any
   11d44:	ldr	x8, [x22, #56]
   11d48:	stp	x28, xzr, [x20, #72]
   11d4c:	cbz	x8, 12038 <GOMP_single_copy_end@@GOMP_1.0+0x8b0>
   11d50:	add	x22, x22, #0x38
   11d54:	stp	x25, x26, [sp, #64]
   11d58:	add	x25, x20, #0xd0
   11d5c:	mov	x21, #0x0                   	// #0
   11d60:	stp	x23, x24, [sp, #48]
   11d64:	mov	x24, #0x1                   	// #1
   11d68:	stp	xzr, xzr, [x25, #8]
   11d6c:	mov	x1, x25
   11d70:	mov	x0, x22
   11d74:	str	x20, [x25, #24]
   11d78:	mov	w2, #0x1                   	// #1
   11d7c:	strb	wzr, [x25, #33]
   11d80:	strb	wzr, [x25, #34]
   11d84:	bl	11a80 <GOMP_single_copy_end@@GOMP_1.0+0x2f8>
   11d88:	mov	x23, x0
   11d8c:	ldr	x19, [x0]
   11d90:	cbz	x19, 11ef0 <GOMP_single_copy_end@@GOMP_1.0+0x768>
   11d94:	ldr	x0, [x19, #24]
   11d98:	cmp	x0, x20
   11d9c:	b.eq	11f30 <GOMP_single_copy_end@@GOMP_1.0+0x7a8>  // b.none
   11da0:	ldrb	w3, [x25, #32]
   11da4:	mov	x0, #0x0                   	// #0
   11da8:	mov	x26, #0x0                   	// #0
   11dac:	b	11e14 <GOMP_single_copy_end@@GOMP_1.0+0x68c>
   11db0:	cbnz	w1, 11ec0 <GOMP_single_copy_end@@GOMP_1.0+0x738>
   11db4:	ldr	x27, [x19, #24]
   11db8:	mov	x26, x19
   11dbc:	ldr	x0, [x27, #48]
   11dc0:	cbz	x0, 11e38 <GOMP_single_copy_end@@GOMP_1.0+0x6b0>
   11dc4:	ldr	x1, [x0]
   11dc8:	mov	x2, #0x1                   	// #1
   11dcc:	cbz	x1, 11de0 <GOMP_single_copy_end@@GOMP_1.0+0x658>
   11dd0:	add	x2, x1, #0x1
   11dd4:	ldr	x5, [x0, x2, lsl #3]
   11dd8:	cmp	x5, x20
   11ddc:	b.eq	11e04 <GOMP_single_copy_end@@GOMP_1.0+0x67c>  // b.none
   11de0:	ldr	x5, [x0, #8]
   11de4:	cmp	x1, x5
   11de8:	b.eq	11ec8 <GOMP_single_copy_end@@GOMP_1.0+0x740>  // b.none
   11dec:	add	x1, x1, #0x2
   11df0:	str	x2, [x0]
   11df4:	ldr	x2, [x20, #80]
   11df8:	str	x20, [x0, x1, lsl #3]
   11dfc:	add	x2, x2, #0x1
   11e00:	str	x2, [x20, #80]
   11e04:	ldr	x1, [x19, #8]
   11e08:	mov	x0, x19
   11e0c:	cbz	x1, 11e70 <GOMP_single_copy_end@@GOMP_1.0+0x6e8>
   11e10:	mov	x19, x1
   11e14:	ldrb	w1, [x19, #34]
   11e18:	cbnz	w1, 11f3c <GOMP_single_copy_end@@GOMP_1.0+0x7b4>
   11e1c:	ldrb	w1, [x19, #32]
   11e20:	cbnz	w3, 11db0 <GOMP_single_copy_end@@GOMP_1.0+0x628>
   11e24:	ldr	x27, [x19, #24]
   11e28:	cmp	w1, #0x0
   11e2c:	csel	x26, x26, x19, ne  // ne = any
   11e30:	ldr	x0, [x27, #48]
   11e34:	cbnz	x0, 11dc4 <GOMP_single_copy_end@@GOMP_1.0+0x63c>
   11e38:	mov	x0, #0x40                  	// #64
   11e3c:	bl	b220 <fprintf@plt+0x2710>
   11e40:	ldr	x1, [x20, #80]
   11e44:	mov	x2, #0x6                   	// #6
   11e48:	ldrb	w3, [x25, #32]
   11e4c:	add	x1, x1, #0x1
   11e50:	str	x0, [x27, #48]
   11e54:	str	x1, [x20, #80]
   11e58:	ldr	x1, [x19, #8]
   11e5c:	stp	x24, x2, [x0]
   11e60:	str	x20, [x0, #16]
   11e64:	mov	x0, x19
   11e68:	cbnz	x1, 11e10 <GOMP_single_copy_end@@GOMP_1.0+0x688>
   11e6c:	nop
   11e70:	ldr	x0, [x23]
   11e74:	str	x0, [x25, #8]
   11e78:	cmp	x26, #0x0
   11e7c:	eor	w3, w3, #0x1
   11e80:	cset	w1, ne  // ne = any
   11e84:	str	x25, [x0, #16]
   11e88:	tst	w1, w3
   11e8c:	str	x25, [x23]
   11e90:	b.ne	11ef8 <GOMP_single_copy_end@@GOMP_1.0+0x770>  // b.any
   11e94:	add	x21, x21, #0x1
   11e98:	add	x25, x25, #0x28
   11e9c:	cmp	x28, x21
   11ea0:	b.hi	11d68 <GOMP_single_copy_end@@GOMP_1.0+0x5e0>  // b.pmore
   11ea4:	ldp	x19, x20, [sp, #16]
   11ea8:	ldp	x21, x22, [sp, #32]
   11eac:	ldp	x23, x24, [sp, #48]
   11eb0:	ldp	x25, x26, [sp, #64]
   11eb4:	ldp	x27, x28, [sp, #80]
   11eb8:	ldp	x29, x30, [sp], #96
   11ebc:	ret
   11ec0:	mov	w3, w1
   11ec4:	b	11e04 <GOMP_single_copy_end@@GOMP_1.0+0x67c>
   11ec8:	lsl	x2, x2, #1
   11ecc:	str	x2, [x0, #8]
   11ed0:	add	x2, x2, #0x2
   11ed4:	lsl	x1, x2, #3
   11ed8:	bl	b298 <fprintf@plt+0x2788>
   11edc:	ldr	x1, [x0]
   11ee0:	ldrb	w3, [x25, #32]
   11ee4:	add	x2, x1, #0x1
   11ee8:	str	x0, [x27, #48]
   11eec:	b	11dec <GOMP_single_copy_end@@GOMP_1.0+0x664>
   11ef0:	str	x25, [x0]
   11ef4:	b	11e94 <GOMP_single_copy_end@@GOMP_1.0+0x70c>
   11ef8:	cmp	x26, x19
   11efc:	b.eq	11f24 <GOMP_single_copy_end@@GOMP_1.0+0x79c>  // b.none
   11f00:	ldp	x1, x0, [x26, #8]
   11f04:	str	x0, [x1, #16]
   11f08:	str	x1, [x0, #8]
   11f0c:	ldr	x0, [x19, #8]
   11f10:	stp	x0, x19, [x26, #8]
   11f14:	str	x26, [x19, #8]
   11f18:	ldr	x0, [x26, #8]
   11f1c:	cbz	x0, 11f24 <GOMP_single_copy_end@@GOMP_1.0+0x79c>
   11f20:	str	x26, [x0, #16]
   11f24:	mov	w0, #0x1                   	// #1
   11f28:	strb	w0, [x26, #34]
   11f2c:	b	11e94 <GOMP_single_copy_end@@GOMP_1.0+0x70c>
   11f30:	mov	w0, #0x1                   	// #1
   11f34:	strb	w0, [x25, #33]
   11f38:	b	11e94 <GOMP_single_copy_end@@GOMP_1.0+0x70c>
   11f3c:	mov	x19, x0
   11f40:	b	11e70 <GOMP_single_copy_end@@GOMP_1.0+0x6e8>
   11f44:	ldp	x9, x0, [x2, #16]
   11f48:	ldr	x7, [x2, #32]
   11f4c:	add	x9, x9, x0
   11f50:	add	x7, x7, x9
   11f54:	cmp	x7, x6
   11f58:	b.cs	1207c <GOMP_single_copy_end@@GOMP_1.0+0x8f4>  // b.hs, b.nlast
   11f5c:	add	x3, x2, #0x28
   11f60:	mov	x4, x7
   11f64:	mov	x0, #0x0                   	// #0
   11f68:	ldr	x5, [x3, x4, lsl #3]
   11f6c:	ldr	x1, [x5, #8]
   11f70:	cmp	x1, #0x1
   11f74:	b.eq	11f9c <GOMP_single_copy_end@@GOMP_1.0+0x814>  // b.none
   11f78:	sub	x8, x1, #0x2
   11f7c:	cmp	x8, #0x2
   11f80:	b.hi	12090 <GOMP_single_copy_end@@GOMP_1.0+0x908>  // b.pmore
   11f84:	add	x2, x0, x0, lsl #2
   11f88:	add	x0, x0, #0x1
   11f8c:	ldr	x5, [x5]
   11f90:	add	x2, x20, x2, lsl #3
   11f94:	str	x5, [x2, #208]
   11f98:	strb	wzr, [x2, #240]
   11f9c:	add	x4, x4, #0x1
   11fa0:	cmp	x4, x6
   11fa4:	b.ne	11f68 <GOMP_single_copy_end@@GOMP_1.0+0x7e0>  // b.any
   11fa8:	ldr	x8, [x22, #56]
   11fac:	cbz	x7, 11ff8 <GOMP_single_copy_end@@GOMP_1.0+0x870>
   11fb0:	add	x4, x0, x0, lsl #2
   11fb4:	mov	x2, #0x0                   	// #0
   11fb8:	add	x4, x20, x4, lsl #3
   11fbc:	nop
   11fc0:	cmp	x9, x2
   11fc4:	add	x4, x4, #0x28
   11fc8:	ldr	x5, [x3, x2, lsl #3]
   11fcc:	cset	w1, ls  // ls = plast
   11fd0:	str	x5, [x4, #168]
   11fd4:	add	x2, x2, #0x1
   11fd8:	strb	w1, [x4, #200]
   11fdc:	cmp	x7, x2
   11fe0:	b.hi	11fc0 <GOMP_single_copy_end@@GOMP_1.0+0x838>  // b.pmore
   11fe4:	cmp	x7, #0x0
   11fe8:	csinc	x1, x7, xzr, ne  // ne = any
   11fec:	cmp	x7, x6
   11ff0:	add	x0, x0, x1
   11ff4:	b.cs	12068 <GOMP_single_copy_end@@GOMP_1.0+0x8e0>  // b.hs, b.nlast
   11ff8:	ldr	x1, [x3, x7, lsl #3]
   11ffc:	ldr	x2, [x1, #8]
   12000:	cmp	x2, #0x1
   12004:	b.ne	12020 <GOMP_single_copy_end@@GOMP_1.0+0x898>  // b.any
   12008:	add	x4, x0, x0, lsl #2
   1200c:	add	x0, x0, #0x1
   12010:	ldr	x5, [x1]
   12014:	add	x1, x20, x4, lsl #3
   12018:	str	x5, [x1, #208]
   1201c:	strb	w2, [x1, #240]
   12020:	add	x7, x7, #0x1
   12024:	cmp	x7, x6
   12028:	b.cc	11ff8 <GOMP_single_copy_end@@GOMP_1.0+0x870>  // b.lo, b.ul, b.last
   1202c:	mov	x28, x6
   12030:	stp	x28, xzr, [x20, #72]
   12034:	cbnz	x8, 11d50 <GOMP_single_copy_end@@GOMP_1.0+0x5c8>
   12038:	lsl	x0, x28, #1
   1203c:	mov	x1, #0xc                   	// #12
   12040:	cmp	x0, x1
   12044:	csel	x0, x0, x1, cs  // cs = hs, nlast
   12048:	bl	11910 <GOMP_single_copy_end@@GOMP_1.0+0x188>
   1204c:	str	x0, [x22, #56]
   12050:	cbnz	x28, 11d50 <GOMP_single_copy_end@@GOMP_1.0+0x5c8>
   12054:	ldp	x19, x20, [sp, #16]
   12058:	ldp	x21, x22, [sp, #32]
   1205c:	ldp	x27, x28, [sp, #80]
   12060:	ldp	x29, x30, [sp], #96
   12064:	ret
   12068:	stp	x6, xzr, [x20, #72]
   1206c:	mov	x28, x6
   12070:	cbz	x8, 12038 <GOMP_single_copy_end@@GOMP_1.0+0x8b0>
   12074:	cbz	x28, 12054 <GOMP_single_copy_end@@GOMP_1.0+0x8cc>
   12078:	b	11d50 <GOMP_single_copy_end@@GOMP_1.0+0x5c8>
   1207c:	ldr	x8, [x1, #56]
   12080:	cbz	x7, 12068 <GOMP_single_copy_end@@GOMP_1.0+0x8e0>
   12084:	add	x3, x2, #0x28
   12088:	mov	x0, #0x0                   	// #0
   1208c:	b	11fb0 <GOMP_single_copy_end@@GOMP_1.0+0x828>
   12090:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   12094:	add	x0, x0, #0xb90
   12098:	stp	x23, x24, [sp, #48]
   1209c:	stp	x25, x26, [sp, #64]
   120a0:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   120a4:	nop
   120a8:	stp	x29, x30, [sp, #-80]!
   120ac:	mov	x29, sp
   120b0:	ldr	x3, [x0, #72]
   120b4:	stp	x23, x24, [sp, #48]
   120b8:	ldr	x24, [x0]
   120bc:	cbz	x3, 1211c <GOMP_single_copy_end@@GOMP_1.0+0x994>
   120c0:	stp	x19, x20, [sp, #16]
   120c4:	add	x19, x0, #0xd8
   120c8:	mov	x20, #0x0                   	// #0
   120cc:	stp	x21, x22, [sp, #32]
   120d0:	mov	x21, x0
   120d4:	mov	x22, #0x1                   	// #1
   120d8:	str	x25, [sp, #64]
   120dc:	add	x25, x24, #0x38
   120e0:	ldrb	w1, [x19, #25]
   120e4:	cbnz	w1, 12100 <GOMP_single_copy_end@@GOMP_1.0+0x978>
   120e8:	ldp	x2, x1, [x19]
   120ec:	cbz	x2, 120f8 <GOMP_single_copy_end@@GOMP_1.0+0x970>
   120f0:	str	x1, [x2, #16]
   120f4:	ldr	x1, [x19, #8]
   120f8:	cbz	x1, 12128 <GOMP_single_copy_end@@GOMP_1.0+0x9a0>
   120fc:	str	x2, [x1, #8]
   12100:	add	x20, x20, #0x1
   12104:	add	x19, x19, #0x28
   12108:	cmp	x3, x20
   1210c:	b.hi	120e0 <GOMP_single_copy_end@@GOMP_1.0+0x958>  // b.pmore
   12110:	ldp	x19, x20, [sp, #16]
   12114:	ldp	x21, x22, [sp, #32]
   12118:	ldr	x25, [sp, #64]
   1211c:	ldp	x23, x24, [sp, #48]
   12120:	ldp	x29, x30, [sp], #80
   12124:	ret
   12128:	sub	x23, x19, #0x8
   1212c:	mov	x0, x25
   12130:	mov	x1, x23
   12134:	mov	w2, #0x0                   	// #0
   12138:	bl	11a80 <GOMP_single_copy_end@@GOMP_1.0+0x2f8>
   1213c:	ldr	x1, [x0]
   12140:	cmp	x1, x23
   12144:	b.ne	12198 <GOMP_single_copy_end@@GOMP_1.0+0xa10>  // b.any
   12148:	ldr	x1, [x19]
   1214c:	cbz	x1, 1215c <GOMP_single_copy_end@@GOMP_1.0+0x9d4>
   12150:	ldr	x3, [x21, #72]
   12154:	str	x1, [x0]
   12158:	b	12100 <GOMP_single_copy_end@@GOMP_1.0+0x978>
   1215c:	ldr	x1, [x24, #56]
   12160:	add	x3, x1, #0x20
   12164:	cmp	x0, x3
   12168:	b.cc	12198 <GOMP_single_copy_end@@GOMP_1.0+0xa10>  // b.lo, b.ul, b.last
   1216c:	ldr	x2, [x1]
   12170:	add	x2, x3, x2, lsl #3
   12174:	cmp	x0, x2
   12178:	ccmp	x19, #0x9, #0x4, cc  // cc = lo, ul, last
   1217c:	b.eq	12198 <GOMP_single_copy_end@@GOMP_1.0+0xa10>  // b.none
   12180:	ldr	x2, [x1, #16]
   12184:	ldr	x3, [x21, #72]
   12188:	str	x22, [x0]
   1218c:	add	x0, x2, #0x1
   12190:	str	x0, [x1, #16]
   12194:	b	12100 <GOMP_single_copy_end@@GOMP_1.0+0x978>
   12198:	bl	8870 <abort@plt>
   1219c:	nop
   121a0:	mov	x1, x0
   121a4:	ldxr	w2, [x1]
   121a8:	stlxr	w3, wzr, [x1]
   121ac:	cbnz	w3, 121a4 <GOMP_single_copy_end@@GOMP_1.0+0xa1c>
   121b0:	tbnz	w2, #31, 121b8 <GOMP_single_copy_end@@GOMP_1.0+0xa30>
   121b4:	ret
   121b8:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   121bc:	nop
   121c0:	stp	x29, x30, [sp, #-48]!
   121c4:	mov	w0, #0x1                   	// #1
   121c8:	mov	x29, sp
   121cc:	stp	x21, x22, [sp, #32]
   121d0:	adrp	x21, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   121d4:	ldr	x21, [x21, #4016]
   121d8:	stp	x19, x20, [sp, #16]
   121dc:	bl	181f8 <omp_in_final@@OMP_3.1+0x1d0>
   121e0:	mrs	x20, tpidr_el0
   121e4:	add	x1, x20, x21
   121e8:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   121ec:	add	x2, x2, #0x2b8
   121f0:	add	x3, x0, #0x5d0
   121f4:	add	x19, x0, #0x540
   121f8:	add	x9, x0, #0x100
   121fc:	ldr	x22, [x1, #80]
   12200:	ldp	x4, x5, [x1, #16]
   12204:	cmp	x22, #0x0
   12208:	add	x8, x22, #0x90
   1220c:	stp	x4, x5, [x0, #8]
   12210:	csel	x2, x2, x8, eq  // eq = none
   12214:	ldp	x4, x5, [x1, #32]
   12218:	stp	x4, x5, [x0, #24]
   1221c:	ldp	x4, x5, [x1, #48]
   12220:	stp	x4, x5, [x0, #40]
   12224:	ldp	x4, x5, [x1, #64]
   12228:	stp	x4, x5, [x0, #56]
   1222c:	ldp	x4, x5, [x2]
   12230:	str	xzr, [x0, #1344]
   12234:	stp	x4, x5, [x3]
   12238:	ldp	x4, x5, [x2, #16]
   1223c:	stp	x4, x5, [x3, #16]
   12240:	ldr	x2, [x2, #32]
   12244:	str	x2, [x0, #1520]
   12248:	str	xzr, [x19, #64]
   1224c:	str	xzr, [x0, #1352]
   12250:	str	xzr, [x0, #1368]
   12254:	str	xzr, [x0, #1376]
   12258:	str	xzr, [x0, #1544]
   1225c:	stp	x0, x9, [x1, #16]
   12260:	str	xzr, [x1, #32]
   12264:	str	wzr, [x1, #40]
   12268:	stp	xzr, xzr, [x19, #40]
   1226c:	str	xzr, [x19, #56]
   12270:	stp	xzr, xzr, [x1, #64]
   12274:	str	xzr, [x19, #72]
   12278:	str	x19, [x1, #80]
   1227c:	cbz	x22, 122a8 <GOMP_single_copy_end@@GOMP_1.0+0xb20>
   12280:	ldr	x0, [x22, #56]
   12284:	cbnz	x0, 122c0 <GOMP_single_copy_end@@GOMP_1.0+0xb38>
   12288:	add	x20, x20, x21
   1228c:	mov	x0, x22
   12290:	bl	8900 <free@plt>
   12294:	ldp	x21, x22, [sp, #32]
   12298:	str	x19, [x20, #80]
   1229c:	ldp	x19, x20, [sp, #16]
   122a0:	ldp	x29, x30, [sp], #48
   122a4:	ret
   122a8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   122ac:	ldp	x19, x20, [sp, #16]
   122b0:	ldp	x21, x22, [sp, #32]
   122b4:	ldp	x29, x30, [sp], #48
   122b8:	ldr	w0, [x0, #1696]
   122bc:	b	89b0 <pthread_setspecific@plt>
   122c0:	bl	8900 <free@plt>
   122c4:	b	12288 <GOMP_single_copy_end@@GOMP_1.0+0xb00>
   122c8:	stp	x29, x30, [sp, #-80]!
   122cc:	mov	x29, sp
   122d0:	stp	x19, x20, [sp, #16]
   122d4:	mov	x19, x0
   122d8:	mov	x20, x2
   122dc:	stp	x21, x22, [sp, #32]
   122e0:	cbz	x1, 1231c <GOMP_single_copy_end@@GOMP_1.0+0xb94>
   122e4:	add	x21, x0, #0x70
   122e8:	ldr	x0, [x1, #8]
   122ec:	cbnz	x0, 1241c <GOMP_single_copy_end@@GOMP_1.0+0xc94>
   122f0:	ldr	x0, [x1, #24]
   122f4:	ldr	x2, [x19, #112]
   122f8:	cmp	x0, x21
   122fc:	b.eq	1253c <GOMP_single_copy_end@@GOMP_1.0+0xdb4>  // b.none
   12300:	cmp	x0, x2
   12304:	b.eq	12314 <GOMP_single_copy_end@@GOMP_1.0+0xb8c>  // b.none
   12308:	ldr	w3, [x2, #88]
   1230c:	cmp	w3, #0x2
   12310:	b.eq	123d4 <GOMP_single_copy_end@@GOMP_1.0+0xc4c>  // b.none
   12314:	ldrb	w0, [x19, #207]
   12318:	cbnz	w0, 125d8 <GOMP_single_copy_end@@GOMP_1.0+0xe50>
   1231c:	ldr	x21, [x19, #40]
   12320:	cbz	x21, 1235c <GOMP_single_copy_end@@GOMP_1.0+0xbd4>
   12324:	ldr	x0, [x21, #8]
   12328:	add	x22, x19, #0x80
   1232c:	cbnz	x0, 124ac <GOMP_single_copy_end@@GOMP_1.0+0xd24>
   12330:	ldr	x0, [x21, #24]
   12334:	ldr	x1, [x19, #128]
   12338:	cmp	x22, x0
   1233c:	b.eq	1254c <GOMP_single_copy_end@@GOMP_1.0+0xdc4>  // b.none
   12340:	cmp	x1, x0
   12344:	b.eq	12354 <GOMP_single_copy_end@@GOMP_1.0+0xbcc>  // b.none
   12348:	ldr	w2, [x1, #72]
   1234c:	cmp	w2, #0x2
   12350:	b.eq	123f8 <GOMP_single_copy_end@@GOMP_1.0+0xc70>  // b.none
   12354:	ldrb	w0, [x19, #207]
   12358:	cbnz	w0, 125ac <GOMP_single_copy_end@@GOMP_1.0+0xe24>
   1235c:	ldr	x0, [x20, #1288]
   12360:	add	x2, x19, #0x60
   12364:	cbnz	x0, 1255c <GOMP_single_copy_end@@GOMP_1.0+0xdd4>
   12368:	ldp	x0, x1, [x19, #96]
   1236c:	ldr	x4, [x20, #1304]
   12370:	cmp	x2, x4
   12374:	str	x0, [x1]
   12378:	str	x1, [x0, #8]
   1237c:	b.eq	123c4 <GOMP_single_copy_end@@GOMP_1.0+0xc3c>  // b.none
   12380:	ldr	w0, [x20, #1324]
   12384:	mov	w1, #0x3                   	// #3
   12388:	stp	xzr, xzr, [x19, #96]
   1238c:	sub	w0, w0, #0x1
   12390:	str	w1, [x19, #200]
   12394:	str	w0, [x20, #1324]
   12398:	cbnz	w0, 123a8 <GOMP_single_copy_end@@GOMP_1.0+0xc20>
   1239c:	ldr	w0, [x20, #132]
   123a0:	and	w0, w0, #0xfffffffe
   123a4:	str	w0, [x20, #132]
   123a8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   123ac:	ldrb	w0, [x0, #1364]
   123b0:	cbnz	w0, 1256c <GOMP_single_copy_end@@GOMP_1.0+0xde4>
   123b4:	ldp	x19, x20, [sp, #16]
   123b8:	ldp	x21, x22, [sp, #32]
   123bc:	ldp	x29, x30, [sp], #80
   123c0:	ret
   123c4:	cmp	x2, x0
   123c8:	csel	x0, x0, xzr, ne  // ne = any
   123cc:	str	x0, [x20, #1304]
   123d0:	b	12380 <GOMP_single_copy_end@@GOMP_1.0+0xbf8>
   123d4:	ldr	x3, [x19, #120]
   123d8:	str	x2, [x3]
   123dc:	str	x3, [x2, #8]
   123e0:	ldr	x2, [x0, #8]
   123e4:	stp	x0, x2, [x19, #112]
   123e8:	ldr	x2, [x0, #8]
   123ec:	str	x21, [x2]
   123f0:	str	x21, [x0, #8]
   123f4:	b	12314 <GOMP_single_copy_end@@GOMP_1.0+0xb8c>
   123f8:	ldr	x2, [x19, #136]
   123fc:	str	x1, [x2]
   12400:	str	x2, [x1, #8]
   12404:	ldr	x1, [x0, #8]
   12408:	stp	x0, x1, [x19, #128]
   1240c:	ldr	x1, [x0, #8]
   12410:	str	x22, [x1]
   12414:	str	x22, [x0, #8]
   12418:	b	12354 <GOMP_single_copy_end@@GOMP_1.0+0xbcc>
   1241c:	ldr	w2, [x19, #88]
   12420:	add	x0, x1, #0x8
   12424:	add	x1, sp, #0x38
   12428:	str	w2, [sp, #56]
   1242c:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   12430:	ldr	x1, [x0, #8]
   12434:	cmp	x1, x21
   12438:	b.eq	12604 <GOMP_single_copy_end@@GOMP_1.0+0xe7c>  // b.none
   1243c:	ldr	x2, [x19, #112]
   12440:	cmp	x1, x2
   12444:	b.eq	12478 <GOMP_single_copy_end@@GOMP_1.0+0xcf0>  // b.none
   12448:	ldr	w3, [x2, #88]
   1244c:	cmp	w3, #0x2
   12450:	b.ne	12478 <GOMP_single_copy_end@@GOMP_1.0+0xcf0>  // b.any
   12454:	ldr	x3, [x19, #120]
   12458:	str	x2, [x3]
   1245c:	ldr	x2, [x19, #112]
   12460:	str	x3, [x2, #8]
   12464:	ldr	x2, [x1, #8]
   12468:	stp	x1, x2, [x19, #112]
   1246c:	ldr	x2, [x1, #8]
   12470:	str	x21, [x2]
   12474:	str	x21, [x1, #8]
   12478:	ldrb	w1, [x19, #207]
   1247c:	cbz	w1, 1231c <GOMP_single_copy_end@@GOMP_1.0+0xb94>
   12480:	ldr	x1, [x0, #16]
   12484:	cmp	x1, x21
   12488:	b.ne	1231c <GOMP_single_copy_end@@GOMP_1.0+0xb94>  // b.any
   1248c:	ldr	x1, [x19, #120]
   12490:	cmp	x1, x21
   12494:	b.eq	124a4 <GOMP_single_copy_end@@GOMP_1.0+0xd1c>  // b.none
   12498:	ldr	w3, [x1, #88]
   1249c:	cmp	w3, #0x2
   124a0:	b.eq	1264c <GOMP_single_copy_end@@GOMP_1.0+0xec4>  // b.none
   124a4:	str	xzr, [x0, #16]
   124a8:	b	1231c <GOMP_single_copy_end@@GOMP_1.0+0xb94>
   124ac:	ldr	w2, [x19, #88]
   124b0:	add	x1, sp, #0x38
   124b4:	add	x0, x21, #0x8
   124b8:	str	w2, [sp, #56]
   124bc:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   124c0:	ldr	x1, [x0, #8]
   124c4:	cmp	x22, x1
   124c8:	b.eq	12610 <GOMP_single_copy_end@@GOMP_1.0+0xe88>  // b.none
   124cc:	ldr	x2, [x19, #128]
   124d0:	cmp	x1, x2
   124d4:	b.eq	12508 <GOMP_single_copy_end@@GOMP_1.0+0xd80>  // b.none
   124d8:	ldr	w3, [x2, #72]
   124dc:	cmp	w3, #0x2
   124e0:	b.ne	12508 <GOMP_single_copy_end@@GOMP_1.0+0xd80>  // b.any
   124e4:	ldr	x3, [x19, #136]
   124e8:	str	x2, [x3]
   124ec:	ldr	x2, [x19, #128]
   124f0:	str	x3, [x2, #8]
   124f4:	ldr	x2, [x1, #8]
   124f8:	stp	x1, x2, [x19, #128]
   124fc:	ldr	x2, [x1, #8]
   12500:	str	x22, [x2]
   12504:	str	x22, [x1, #8]
   12508:	ldrb	w1, [x19, #207]
   1250c:	cbz	w1, 1235c <GOMP_single_copy_end@@GOMP_1.0+0xbd4>
   12510:	ldr	x1, [x0, #16]
   12514:	cmp	x22, x1
   12518:	b.ne	1235c <GOMP_single_copy_end@@GOMP_1.0+0xbd4>  // b.any
   1251c:	ldr	x1, [x19, #136]
   12520:	cmp	x22, x1
   12524:	b.eq	12534 <GOMP_single_copy_end@@GOMP_1.0+0xdac>  // b.none
   12528:	ldr	w3, [x1, #72]
   1252c:	cmp	w3, #0x2
   12530:	b.eq	1263c <GOMP_single_copy_end@@GOMP_1.0+0xeb4>  // b.none
   12534:	str	xzr, [x0, #16]
   12538:	b	1235c <GOMP_single_copy_end@@GOMP_1.0+0xbd4>
   1253c:	ldrb	w0, [x19, #207]
   12540:	str	x2, [x1, #24]
   12544:	cbz	w0, 1231c <GOMP_single_copy_end@@GOMP_1.0+0xb94>
   12548:	b	125d8 <GOMP_single_copy_end@@GOMP_1.0+0xe50>
   1254c:	ldrb	w0, [x19, #207]
   12550:	str	x1, [x21, #24]
   12554:	cbz	w0, 1235c <GOMP_single_copy_end@@GOMP_1.0+0xbd4>
   12558:	b	125ac <GOMP_single_copy_end@@GOMP_1.0+0xe24>
   1255c:	add	x1, x20, #0x508
   12560:	mov	w0, #0x0                   	// #0
   12564:	bl	265d8 <acc_set_cuda_stream@@OACC_2.0+0x440>
   12568:	b	12380 <GOMP_single_copy_end@@GOMP_1.0+0xbf8>
   1256c:	ldrb	w1, [x19, #206]
   12570:	cbnz	w1, 125a4 <GOMP_single_copy_end@@GOMP_1.0+0xe1c>
   12574:	ldr	w1, [x20, #132]
   12578:	tbnz	w1, #2, 123b4 <GOMP_single_copy_end@@GOMP_1.0+0xc2c>
   1257c:	mov	w0, #0x0                   	// #0
   12580:	cbz	x21, 123b4 <GOMP_single_copy_end@@GOMP_1.0+0xc2c>
   12584:	ldrb	w0, [x21, #49]
   12588:	cbnz	w0, 123b4 <GOMP_single_copy_end@@GOMP_1.0+0xc2c>
   1258c:	ldrb	w1, [x21, #50]
   12590:	cbz	w1, 123b4 <GOMP_single_copy_end@@GOMP_1.0+0xc2c>
   12594:	ldr	x1, [x21]
   12598:	cbz	x1, 123b4 <GOMP_single_copy_end@@GOMP_1.0+0xc2c>
   1259c:	ldrb	w0, [x1, #49]
   125a0:	b	123b4 <GOMP_single_copy_end@@GOMP_1.0+0xc2c>
   125a4:	mov	w0, #0x0                   	// #0
   125a8:	b	123b4 <GOMP_single_copy_end@@GOMP_1.0+0xc2c>
   125ac:	ldr	x0, [x21, #32]
   125b0:	cmp	x22, x0
   125b4:	b.ne	1235c <GOMP_single_copy_end@@GOMP_1.0+0xbd4>  // b.any
   125b8:	ldr	x0, [x19, #136]
   125bc:	cmp	x22, x0
   125c0:	b.eq	125d0 <GOMP_single_copy_end@@GOMP_1.0+0xe48>  // b.none
   125c4:	ldr	w2, [x0, #72]
   125c8:	cmp	w2, #0x2
   125cc:	b.eq	1261c <GOMP_single_copy_end@@GOMP_1.0+0xe94>  // b.none
   125d0:	str	xzr, [x21, #32]
   125d4:	b	1235c <GOMP_single_copy_end@@GOMP_1.0+0xbd4>
   125d8:	ldr	x0, [x1, #32]
   125dc:	cmp	x0, x21
   125e0:	b.ne	1231c <GOMP_single_copy_end@@GOMP_1.0+0xb94>  // b.any
   125e4:	ldr	x0, [x19, #120]
   125e8:	cmp	x0, x21
   125ec:	b.eq	125fc <GOMP_single_copy_end@@GOMP_1.0+0xe74>  // b.none
   125f0:	ldr	w3, [x0, #88]
   125f4:	cmp	w3, #0x2
   125f8:	b.eq	1262c <GOMP_single_copy_end@@GOMP_1.0+0xea4>  // b.none
   125fc:	str	xzr, [x1, #32]
   12600:	b	1231c <GOMP_single_copy_end@@GOMP_1.0+0xb94>
   12604:	ldr	x1, [x19, #112]
   12608:	str	x1, [x0, #8]
   1260c:	b	12478 <GOMP_single_copy_end@@GOMP_1.0+0xcf0>
   12610:	ldr	x1, [x19, #128]
   12614:	str	x1, [x0, #8]
   12618:	b	12508 <GOMP_single_copy_end@@GOMP_1.0+0xd80>
   1261c:	ldrb	w1, [x0, #79]
   12620:	cbz	w1, 125d0 <GOMP_single_copy_end@@GOMP_1.0+0xe48>
   12624:	str	x0, [x21, #32]
   12628:	b	1235c <GOMP_single_copy_end@@GOMP_1.0+0xbd4>
   1262c:	ldrb	w2, [x0, #95]
   12630:	cbz	w2, 125fc <GOMP_single_copy_end@@GOMP_1.0+0xe74>
   12634:	str	x0, [x1, #32]
   12638:	b	1231c <GOMP_single_copy_end@@GOMP_1.0+0xb94>
   1263c:	ldrb	w2, [x1, #79]
   12640:	cbz	w2, 12534 <GOMP_single_copy_end@@GOMP_1.0+0xdac>
   12644:	str	x1, [x0, #16]
   12648:	b	1235c <GOMP_single_copy_end@@GOMP_1.0+0xbd4>
   1264c:	ldrb	w2, [x1, #95]
   12650:	cbz	w2, 124a4 <GOMP_single_copy_end@@GOMP_1.0+0xd1c>
   12654:	str	x1, [x0, #16]
   12658:	b	1231c <GOMP_single_copy_end@@GOMP_1.0+0xb94>
   1265c:	nop
   12660:	stp	x29, x30, [sp, #-176]!
   12664:	mov	x29, sp
   12668:	stp	x23, x24, [sp, #48]
   1266c:	mov	x23, x0
   12670:	ldr	x0, [x0, #48]
   12674:	stp	x25, x26, [sp, #64]
   12678:	stp	x27, x28, [sp, #80]
   1267c:	ldr	x26, [x0]
   12680:	ldr	x28, [x23]
   12684:	cbz	x26, 12bd4 <GOMP_single_copy_end@@GOMP_1.0+0x144c>
   12688:	add	x24, x1, #0x508
   1268c:	stp	x19, x20, [sp, #16]
   12690:	mov	x20, x1
   12694:	add	x1, sp, #0x98
   12698:	mov	x25, #0x0                   	// #0
   1269c:	stp	x21, x22, [sp, #32]
   126a0:	mov	x21, #0x0                   	// #0
   126a4:	str	x1, [sp, #104]
   126a8:	add	x1, x28, #0x8
   126ac:	str	x1, [sp, #112]
   126b0:	add	x1, x21, #0x2
   126b4:	ldr	x19, [x0, x1, lsl #3]
   126b8:	ldr	x2, [x19, #80]
   126bc:	sub	x2, x2, #0x1
   126c0:	str	x2, [x19, #80]
   126c4:	cbnz	x2, 127e8 <GOMP_single_copy_end@@GOMP_1.0+0x1060>
   126c8:	ldr	w27, [x19, #88]
   126cc:	ldr	x22, [x19, #40]
   126d0:	cbz	x28, 1274c <GOMP_single_copy_end@@GOMP_1.0+0xfc4>
   126d4:	ldr	x0, [x28, #8]
   126d8:	add	x2, x19, #0x70
   126dc:	ldrb	w5, [x19, #207]
   126e0:	cbnz	x0, 129d4 <GOMP_single_copy_end@@GOMP_1.0+0x124c>
   126e4:	cmp	w27, #0x0
   126e8:	ldr	x0, [x28, #24]
   126ec:	b.gt	12988 <GOMP_single_copy_end@@GOMP_1.0+0x1200>
   126f0:	cbz	x0, 128ec <GOMP_single_copy_end@@GOMP_1.0+0x1164>
   126f4:	ldr	x1, [x28, #32]
   126f8:	cmp	x1, #0x0
   126fc:	ccmp	w5, #0x0, #0x0, ne  // ne = any
   12700:	b.eq	12b24 <GOMP_single_copy_end@@GOMP_1.0+0x139c>  // b.none
   12704:	ldr	x1, [x0, #8]
   12708:	stp	x0, x1, [x19, #112]
   1270c:	str	x2, [x28, #24]
   12710:	ldr	x0, [x19, #112]
   12714:	str	x2, [x0, #8]
   12718:	ldr	x0, [x19, #120]
   1271c:	str	x2, [x0]
   12720:	ldr	x0, [x28, #32]
   12724:	cmp	x0, #0x0
   12728:	ccmp	w5, #0x0, #0x4, eq  // eq = none
   1272c:	b.ne	12904 <GOMP_single_copy_end@@GOMP_1.0+0x117c>  // b.any
   12730:	ldr	x0, [x28, #64]
   12734:	cbz	x0, 12748 <GOMP_single_copy_end@@GOMP_1.0+0xfc0>
   12738:	ldrb	w1, [x0]
   1273c:	cbnz	w1, 1290c <GOMP_single_copy_end@@GOMP_1.0+0x1184>
   12740:	ldrb	w1, [x0, #1]
   12744:	cbnz	w1, 12948 <GOMP_single_copy_end@@GOMP_1.0+0x11c0>
   12748:	ldr	w27, [x19, #88]
   1274c:	cbz	x22, 12798 <GOMP_single_copy_end@@GOMP_1.0+0x1010>
   12750:	ldr	x0, [x22, #8]
   12754:	add	x5, x22, #0x8
   12758:	add	x2, x19, #0x80
   1275c:	cbnz	x0, 12a80 <GOMP_single_copy_end@@GOMP_1.0+0x12f8>
   12760:	cmp	w27, #0x0
   12764:	ldr	x0, [x22, #24]
   12768:	b.gt	12a40 <GOMP_single_copy_end@@GOMP_1.0+0x12b8>
   1276c:	cbz	x0, 128e0 <GOMP_single_copy_end@@GOMP_1.0+0x1158>
   12770:	ldr	x1, [x0, #8]
   12774:	stp	x0, x1, [x19, #128]
   12778:	str	x2, [x22, #24]
   1277c:	ldr	x0, [x19, #128]
   12780:	str	x2, [x0, #8]
   12784:	ldr	x0, [x19, #136]
   12788:	str	x2, [x0]
   1278c:	ldrb	w0, [x22, #48]
   12790:	cbnz	w0, 12830 <GOMP_single_copy_end@@GOMP_1.0+0x10a8>
   12794:	ldr	w27, [x19, #88]
   12798:	ldr	x0, [x20, #1288]
   1279c:	add	x22, x19, #0x60
   127a0:	cbnz	x0, 128ac <GOMP_single_copy_end@@GOMP_1.0+0x1124>
   127a4:	cmp	w27, #0x0
   127a8:	ldr	x0, [x20, #1304]
   127ac:	b.gt	12878 <GOMP_single_copy_end@@GOMP_1.0+0x10f0>
   127b0:	cbz	x0, 1286c <GOMP_single_copy_end@@GOMP_1.0+0x10e4>
   127b4:	ldr	x1, [x0, #8]
   127b8:	stp	x0, x1, [x19, #96]
   127bc:	str	x22, [x0, #8]
   127c0:	ldr	x0, [x19, #104]
   127c4:	str	x22, [x0]
   127c8:	ldr	w2, [x20, #1320]
   127cc:	add	x25, x25, #0x1
   127d0:	ldr	w1, [x20, #1324]
   127d4:	add	w2, w2, #0x1
   127d8:	add	w1, w1, #0x1
   127dc:	ldr	x0, [x23, #48]
   127e0:	str	w2, [x20, #1320]
   127e4:	str	w1, [x20, #1324]
   127e8:	add	x21, x21, #0x1
   127ec:	cmp	x26, x21
   127f0:	b.ne	126b0 <GOMP_single_copy_end@@GOMP_1.0+0xf28>  // b.any
   127f4:	bl	8900 <free@plt>
   127f8:	str	xzr, [x23, #48]
   127fc:	cmp	x25, #0x1
   12800:	b.ls	12b04 <GOMP_single_copy_end@@GOMP_1.0+0x137c>  // b.plast
   12804:	ldr	w0, [x20, #132]
   12808:	ldp	x21, x22, [sp, #32]
   1280c:	orr	w0, w0, #0x1
   12810:	str	w0, [x20, #132]
   12814:	mov	x0, x25
   12818:	ldp	x19, x20, [sp, #16]
   1281c:	ldp	x23, x24, [sp, #48]
   12820:	ldp	x25, x26, [sp, #64]
   12824:	ldp	x27, x28, [sp, #80]
   12828:	ldp	x29, x30, [sp], #176
   1282c:	ret
   12830:	ldr	w1, [x22, #52]
   12834:	add	x0, x22, #0x34
   12838:	strb	wzr, [x22, #48]
   1283c:	add	w2, w1, #0x1
   12840:	and	w2, w2, #0x7fffffff
   12844:	ldxr	w5, [x0]
   12848:	cmp	w5, w1
   1284c:	b.ne	12858 <GOMP_single_copy_end@@GOMP_1.0+0x10d0>  // b.any
   12850:	stlxr	w3, w2, [x0]
   12854:	cmp	w3, #0x0
   12858:	mov	w1, w5
   1285c:	b.ne	1283c <GOMP_single_copy_end@@GOMP_1.0+0x10b4>  // b.any
   12860:	tbz	w5, #31, 12794 <GOMP_single_copy_end@@GOMP_1.0+0x100c>
   12864:	bl	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
   12868:	b	12794 <GOMP_single_copy_end@@GOMP_1.0+0x100c>
   1286c:	stp	x22, x22, [x19, #96]
   12870:	str	x22, [x20, #1304]
   12874:	b	127c8 <GOMP_single_copy_end@@GOMP_1.0+0x1040>
   12878:	cbz	x0, 12ac4 <GOMP_single_copy_end@@GOMP_1.0+0x133c>
   1287c:	mov	x0, #0x28                  	// #40
   12880:	bl	b220 <fprintf@plt+0x2710>
   12884:	ldp	x5, x2, [x24, #16]
   12888:	mov	x1, x0
   1288c:	mov	x0, x24
   12890:	str	wzr, [x1]
   12894:	stp	x5, x2, [x1, #8]
   12898:	stp	xzr, xzr, [x1, #24]
   1289c:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   128a0:	str	xzr, [x24, #16]
   128a4:	ldr	x0, [x24]
   128a8:	cbz	x0, 12ac4 <GOMP_single_copy_end@@GOMP_1.0+0x133c>
   128ac:	ldr	x1, [sp, #104]
   128b0:	mov	x0, x24
   128b4:	str	w27, [sp, #152]
   128b8:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   128bc:	cbz	x0, 12ac4 <GOMP_single_copy_end@@GOMP_1.0+0x133c>
   128c0:	ldr	x1, [x0, #8]
   128c4:	cbz	x1, 12af8 <GOMP_single_copy_end@@GOMP_1.0+0x1370>
   128c8:	ldr	x0, [x1, #8]
   128cc:	stp	x1, x0, [x19, #96]
   128d0:	str	x22, [x1, #8]
   128d4:	ldr	x0, [x19, #104]
   128d8:	str	x22, [x0]
   128dc:	b	127c8 <GOMP_single_copy_end@@GOMP_1.0+0x1040>
   128e0:	stp	x2, x2, [x19, #128]
   128e4:	str	x2, [x22, #24]
   128e8:	b	1278c <GOMP_single_copy_end@@GOMP_1.0+0x1004>
   128ec:	stp	x2, x2, [x19, #112]
   128f0:	ldr	x0, [x28, #32]
   128f4:	str	x2, [x28, #24]
   128f8:	cmp	x0, #0x0
   128fc:	ccmp	w5, #0x0, #0x4, eq  // eq = none
   12900:	b.eq	12730 <GOMP_single_copy_end@@GOMP_1.0+0xfa8>  // b.none
   12904:	str	x2, [x28, #32]
   12908:	b	12730 <GOMP_single_copy_end@@GOMP_1.0+0xfa8>
   1290c:	ldr	w1, [x0, #16]
   12910:	strb	wzr, [x0], #16
   12914:	add	w2, w1, #0x1
   12918:	and	w2, w2, #0x7fffffff
   1291c:	ldxr	w5, [x0]
   12920:	cmp	w5, w1
   12924:	b.ne	12930 <GOMP_single_copy_end@@GOMP_1.0+0x11a8>  // b.any
   12928:	stlxr	w3, w2, [x0]
   1292c:	cmp	w3, #0x0
   12930:	mov	w1, w5
   12934:	b.ne	12914 <GOMP_single_copy_end@@GOMP_1.0+0x118c>  // b.any
   12938:	tbz	w5, #31, 12748 <GOMP_single_copy_end@@GOMP_1.0+0xfc0>
   1293c:	bl	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
   12940:	ldr	w27, [x19, #88]
   12944:	b	1274c <GOMP_single_copy_end@@GOMP_1.0+0xfc4>
   12948:	ldr	w1, [x0, #16]
   1294c:	add	x5, x0, #0x10
   12950:	strb	wzr, [x0, #1]
   12954:	add	w2, w1, #0x1
   12958:	and	w2, w2, #0x7fffffff
   1295c:	ldxr	w0, [x5]
   12960:	cmp	w0, w1
   12964:	b.ne	12970 <GOMP_single_copy_end@@GOMP_1.0+0x11e8>  // b.any
   12968:	stlxr	w3, w2, [x5]
   1296c:	cmp	w3, #0x0
   12970:	mov	w1, w0
   12974:	b.ne	12954 <GOMP_single_copy_end@@GOMP_1.0+0x11cc>  // b.any
   12978:	tbz	w0, #31, 12748 <GOMP_single_copy_end@@GOMP_1.0+0xfc0>
   1297c:	mov	x0, x5
   12980:	bl	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
   12984:	b	12940 <GOMP_single_copy_end@@GOMP_1.0+0x11b8>
   12988:	cbz	x0, 12b30 <GOMP_single_copy_end@@GOMP_1.0+0x13a8>
   1298c:	mov	x0, #0x28                  	// #40
   12990:	str	w5, [sp, #120]
   12994:	str	x2, [sp, #128]
   12998:	bl	b220 <fprintf@plt+0x2710>
   1299c:	ldr	x2, [sp, #112]
   129a0:	mov	x1, x0
   129a4:	mov	x0, x2
   129a8:	ldp	x7, x6, [x2, #16]
   129ac:	str	wzr, [x1]
   129b0:	stp	x7, x6, [x1, #8]
   129b4:	stp	xzr, xzr, [x1, #24]
   129b8:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   129bc:	ldr	x1, [sp, #112]
   129c0:	ldr	w5, [sp, #120]
   129c4:	ldr	x2, [sp, #128]
   129c8:	str	xzr, [x1, #16]
   129cc:	ldr	x0, [x1]
   129d0:	cbz	x0, 12b30 <GOMP_single_copy_end@@GOMP_1.0+0x13a8>
   129d4:	ldp	x1, x0, [sp, #104]
   129d8:	str	w5, [sp, #120]
   129dc:	str	x2, [sp, #128]
   129e0:	str	w27, [sp, #152]
   129e4:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   129e8:	ldr	w5, [sp, #120]
   129ec:	ldr	x2, [sp, #128]
   129f0:	cbz	x0, 12b30 <GOMP_single_copy_end@@GOMP_1.0+0x13a8>
   129f4:	ldr	x1, [x0, #8]
   129f8:	cbz	x1, 12b74 <GOMP_single_copy_end@@GOMP_1.0+0x13ec>
   129fc:	ldr	x6, [x0, #16]
   12a00:	cmp	x6, #0x0
   12a04:	ccmp	w5, #0x0, #0x0, ne  // ne = any
   12a08:	b.eq	12bc8 <GOMP_single_copy_end@@GOMP_1.0+0x1440>  // b.none
   12a0c:	ldr	x6, [x1, #8]
   12a10:	stp	x1, x6, [x19, #112]
   12a14:	str	x2, [x0, #8]
   12a18:	ldr	x1, [x19, #112]
   12a1c:	str	x2, [x1, #8]
   12a20:	ldr	x1, [x19, #120]
   12a24:	str	x2, [x1]
   12a28:	ldr	x1, [x0, #16]
   12a2c:	cmp	x1, #0x0
   12a30:	ccmp	w5, #0x0, #0x4, eq  // eq = none
   12a34:	b.eq	12730 <GOMP_single_copy_end@@GOMP_1.0+0xfa8>  // b.none
   12a38:	str	x2, [x0, #16]
   12a3c:	b	12730 <GOMP_single_copy_end@@GOMP_1.0+0xfa8>
   12a40:	cbz	x0, 12b80 <GOMP_single_copy_end@@GOMP_1.0+0x13f8>
   12a44:	mov	x0, #0x28                  	// #40
   12a48:	stp	x5, x2, [sp, #120]
   12a4c:	bl	b220 <fprintf@plt+0x2710>
   12a50:	ldr	x5, [sp, #120]
   12a54:	mov	x1, x0
   12a58:	mov	x0, x5
   12a5c:	ldp	x7, x6, [x5, #16]
   12a60:	str	wzr, [x1]
   12a64:	stp	x7, x6, [x1, #8]
   12a68:	stp	xzr, xzr, [x1, #24]
   12a6c:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   12a70:	ldr	x0, [x22, #8]
   12a74:	ldp	x5, x2, [sp, #120]
   12a78:	str	xzr, [x5, #16]
   12a7c:	cbz	x0, 12b80 <GOMP_single_copy_end@@GOMP_1.0+0x13f8>
   12a80:	ldr	x1, [sp, #104]
   12a84:	mov	x0, x5
   12a88:	stp	x5, x2, [sp, #120]
   12a8c:	str	w27, [sp, #152]
   12a90:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   12a94:	ldp	x5, x2, [sp, #120]
   12a98:	cbz	x0, 12b80 <GOMP_single_copy_end@@GOMP_1.0+0x13f8>
   12a9c:	ldr	x1, [x0, #8]
   12aa0:	cbz	x1, 12bbc <GOMP_single_copy_end@@GOMP_1.0+0x1434>
   12aa4:	ldr	x5, [x1, #8]
   12aa8:	stp	x1, x5, [x19, #128]
   12aac:	str	x2, [x0, #8]
   12ab0:	ldr	x0, [x19, #128]
   12ab4:	str	x2, [x0, #8]
   12ab8:	ldr	x0, [x19, #136]
   12abc:	str	x2, [x0]
   12ac0:	b	1278c <GOMP_single_copy_end@@GOMP_1.0+0x1004>
   12ac4:	mov	x0, #0x28                  	// #40
   12ac8:	bl	b220 <fprintf@plt+0x2710>
   12acc:	mov	x1, x0
   12ad0:	mov	x0, x24
   12ad4:	str	x1, [sp, #120]
   12ad8:	str	w27, [x1]
   12adc:	stp	xzr, xzr, [x1, #8]
   12ae0:	stp	xzr, xzr, [x1, #24]
   12ae4:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   12ae8:	ldr	x1, [sp, #120]
   12aec:	mov	x0, x1
   12af0:	ldr	x1, [x0, #8]
   12af4:	cbnz	x1, 128c8 <GOMP_single_copy_end@@GOMP_1.0+0x1140>
   12af8:	stp	x22, x22, [x19, #96]
   12afc:	str	x22, [x0, #8]
   12b00:	b	127c8 <GOMP_single_copy_end@@GOMP_1.0+0x1040>
   12b04:	mov	x0, x25
   12b08:	ldp	x19, x20, [sp, #16]
   12b0c:	ldp	x21, x22, [sp, #32]
   12b10:	ldp	x23, x24, [sp, #48]
   12b14:	ldp	x25, x26, [sp, #64]
   12b18:	ldp	x27, x28, [sp, #80]
   12b1c:	ldp	x29, x30, [sp], #176
   12b20:	ret
   12b24:	ldr	x0, [x1]
   12b28:	stp	x0, x1, [x19, #112]
   12b2c:	b	12714 <GOMP_single_copy_end@@GOMP_1.0+0xf8c>
   12b30:	mov	x0, #0x28                  	// #40
   12b34:	str	w5, [sp, #128]
   12b38:	str	x2, [sp, #136]
   12b3c:	bl	b220 <fprintf@plt+0x2710>
   12b40:	mov	x1, x0
   12b44:	str	x1, [sp, #120]
   12b48:	ldr	x0, [sp, #112]
   12b4c:	str	w27, [x1]
   12b50:	stp	xzr, xzr, [x1, #8]
   12b54:	stp	xzr, xzr, [x1, #24]
   12b58:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   12b5c:	ldr	x1, [sp, #120]
   12b60:	ldr	w5, [sp, #128]
   12b64:	mov	x0, x1
   12b68:	ldr	x2, [sp, #136]
   12b6c:	ldr	x1, [x0, #8]
   12b70:	cbnz	x1, 129fc <GOMP_single_copy_end@@GOMP_1.0+0x1274>
   12b74:	stp	x2, x2, [x19, #112]
   12b78:	str	x2, [x0, #8]
   12b7c:	b	12a28 <GOMP_single_copy_end@@GOMP_1.0+0x12a0>
   12b80:	mov	x0, #0x28                  	// #40
   12b84:	stp	x5, x2, [sp, #120]
   12b88:	bl	b220 <fprintf@plt+0x2710>
   12b8c:	mov	x1, x0
   12b90:	ldr	x5, [sp, #120]
   12b94:	str	x1, [sp, #120]
   12b98:	str	w27, [x1]
   12b9c:	stp	xzr, xzr, [x1, #8]
   12ba0:	mov	x0, x5
   12ba4:	stp	xzr, xzr, [x1, #24]
   12ba8:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   12bac:	ldp	x1, x2, [sp, #120]
   12bb0:	mov	x0, x1
   12bb4:	ldr	x1, [x0, #8]
   12bb8:	cbnz	x1, 12aa4 <GOMP_single_copy_end@@GOMP_1.0+0x131c>
   12bbc:	stp	x2, x2, [x19, #128]
   12bc0:	str	x2, [x0, #8]
   12bc4:	b	1278c <GOMP_single_copy_end@@GOMP_1.0+0x1004>
   12bc8:	ldr	x1, [x6]
   12bcc:	stp	x1, x6, [x19, #112]
   12bd0:	b	12a1c <GOMP_single_copy_end@@GOMP_1.0+0x1294>
   12bd4:	bl	8900 <free@plt>
   12bd8:	str	xzr, [x23, #48]
   12bdc:	mov	x25, #0x0                   	// #0
   12be0:	mov	x0, x25
   12be4:	ldp	x23, x24, [sp, #48]
   12be8:	ldp	x25, x26, [sp, #64]
   12bec:	ldp	x27, x28, [sp, #80]
   12bf0:	ldp	x29, x30, [sp], #176
   12bf4:	ret
   12bf8:	stp	x29, x30, [sp, #-112]!
   12bfc:	mov	x29, sp
   12c00:	stp	x21, x22, [sp, #32]
   12c04:	ldr	x21, [x1]
   12c08:	stp	x19, x20, [sp, #16]
   12c0c:	mov	x19, x1
   12c10:	stp	x23, x24, [sp, #48]
   12c14:	mov	x24, x0
   12c18:	stp	x25, x26, [sp, #64]
   12c1c:	cbz	x21, 12c94 <GOMP_single_copy_end@@GOMP_1.0+0x150c>
   12c20:	mov	x1, x21
   12c24:	ldr	x0, [x1, #8]!
   12c28:	add	x3, x1, #0x8
   12c2c:	cbnz	x0, 12ee0 <GOMP_single_copy_end@@GOMP_1.0+0x1758>
   12c30:	ldp	x1, x0, [x19, #112]
   12c34:	add	x2, x19, #0x70
   12c38:	ldr	x4, [x3, #8]
   12c3c:	cmp	x2, x4
   12c40:	str	x1, [x0]
   12c44:	str	x0, [x1, #8]
   12c48:	b.eq	12e6c <GOMP_single_copy_end@@GOMP_1.0+0x16e4>  // b.none
   12c4c:	ldrb	w0, [x19, #207]
   12c50:	mov	x1, x4
   12c54:	cbz	x4, 12f38 <GOMP_single_copy_end@@GOMP_1.0+0x17b0>
   12c58:	ldr	x4, [x3, #16]
   12c5c:	cmp	x4, #0x0
   12c60:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   12c64:	b.eq	12ebc <GOMP_single_copy_end@@GOMP_1.0+0x1734>  // b.none
   12c68:	ldr	x4, [x1, #8]
   12c6c:	stp	x1, x4, [x19, #112]
   12c70:	str	x2, [x3, #8]
   12c74:	ldr	x1, [x19, #112]
   12c78:	str	x2, [x1, #8]
   12c7c:	ldr	x1, [x19, #120]
   12c80:	str	x2, [x1]
   12c84:	ldr	x1, [x3, #16]
   12c88:	cmp	x1, #0x0
   12c8c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   12c90:	b.ne	12fb0 <GOMP_single_copy_end@@GOMP_1.0+0x1828>  // b.any
   12c94:	ldr	x20, [x19, #40]
   12c98:	cbz	x20, 12cec <GOMP_single_copy_end@@GOMP_1.0+0x1564>
   12c9c:	mov	x1, x20
   12ca0:	ldr	x2, [x1, #8]!
   12ca4:	add	x0, x1, #0x8
   12ca8:	cbnz	x2, 12ec8 <GOMP_single_copy_end@@GOMP_1.0+0x1740>
   12cac:	ldp	x1, x3, [x19, #128]
   12cb0:	add	x2, x19, #0x80
   12cb4:	ldr	x4, [x0, #8]
   12cb8:	cmp	x2, x4
   12cbc:	str	x1, [x3]
   12cc0:	str	x3, [x1, #8]
   12cc4:	b.eq	12e08 <GOMP_single_copy_end@@GOMP_1.0+0x1680>  // b.none
   12cc8:	mov	x1, x4
   12ccc:	cbz	x4, 12e10 <GOMP_single_copy_end@@GOMP_1.0+0x1688>
   12cd0:	ldr	x3, [x1, #8]
   12cd4:	stp	x1, x3, [x19, #128]
   12cd8:	str	x2, [x0, #8]
   12cdc:	ldr	x0, [x19, #128]
   12ce0:	str	x2, [x0, #8]
   12ce4:	ldr	x0, [x19, #136]
   12ce8:	str	x2, [x0]
   12cec:	ldr	x1, [x24, #1288]
   12cf0:	add	x26, x24, #0x508
   12cf4:	ldr	w23, [x19, #88]
   12cf8:	add	x22, x19, #0x60
   12cfc:	cbnz	x1, 12e30 <GOMP_single_copy_end@@GOMP_1.0+0x16a8>
   12d00:	cmp	w23, #0x0
   12d04:	ldr	x1, [x24, #1304]
   12d08:	b.gt	12f44 <GOMP_single_copy_end@@GOMP_1.0+0x17bc>
   12d0c:	cbz	x1, 12dfc <GOMP_single_copy_end@@GOMP_1.0+0x1674>
   12d10:	ldr	x0, [x1, #8]
   12d14:	stp	x1, x0, [x19, #96]
   12d18:	str	x22, [x24, #1304]
   12d1c:	ldr	x0, [x19, #96]
   12d20:	str	x22, [x0, #8]
   12d24:	ldr	x0, [x19, #104]
   12d28:	str	x22, [x0]
   12d2c:	mov	w1, #0x2                   	// #2
   12d30:	str	w1, [x19, #200]
   12d34:	cbz	x21, 12d50 <GOMP_single_copy_end@@GOMP_1.0+0x15c8>
   12d38:	ldr	x1, [x21, #64]
   12d3c:	cbz	x1, 12d50 <GOMP_single_copy_end@@GOMP_1.0+0x15c8>
   12d40:	ldrb	w0, [x1]
   12d44:	cbnz	w0, 12efc <GOMP_single_copy_end@@GOMP_1.0+0x1774>
   12d48:	ldrb	w0, [x1, #1]
   12d4c:	cbnz	w0, 12e80 <GOMP_single_copy_end@@GOMP_1.0+0x16f8>
   12d50:	cbz	x20, 12d5c <GOMP_single_copy_end@@GOMP_1.0+0x15d4>
   12d54:	ldrb	w0, [x20, #48]
   12d58:	cbnz	w0, 12d9c <GOMP_single_copy_end@@GOMP_1.0+0x1614>
   12d5c:	ldr	w2, [x24, #132]
   12d60:	ldr	w1, [x24, #1324]
   12d64:	orr	w2, w2, #0x1
   12d68:	str	w2, [x24, #132]
   12d6c:	add	w1, w1, #0x1
   12d70:	ldr	w2, [x24]
   12d74:	str	w1, [x24, #1324]
   12d78:	ldr	w1, [x24, #1328]
   12d7c:	cmp	w2, w1
   12d80:	b.hi	12dd8 <GOMP_single_copy_end@@GOMP_1.0+0x1650>  // b.pmore
   12d84:	ldp	x19, x20, [sp, #16]
   12d88:	ldp	x21, x22, [sp, #32]
   12d8c:	ldp	x23, x24, [sp, #48]
   12d90:	ldp	x25, x26, [sp, #64]
   12d94:	ldp	x29, x30, [sp], #112
   12d98:	ret
   12d9c:	ldr	w1, [x20, #52]
   12da0:	add	x0, x20, #0x34
   12da4:	strb	wzr, [x20, #48]
   12da8:	add	w2, w1, #0x1
   12dac:	and	w2, w2, #0x7fffffff
   12db0:	ldxr	w3, [x0]
   12db4:	cmp	w3, w1
   12db8:	b.ne	12dc4 <GOMP_single_copy_end@@GOMP_1.0+0x163c>  // b.any
   12dbc:	stlxr	w4, w2, [x0]
   12dc0:	cmp	w4, #0x0
   12dc4:	mov	w1, w3
   12dc8:	b.ne	12da8 <GOMP_single_copy_end@@GOMP_1.0+0x1620>  // b.any
   12dcc:	tbz	w3, #31, 12d5c <GOMP_single_copy_end@@GOMP_1.0+0x15d4>
   12dd0:	bl	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
   12dd4:	b	12d5c <GOMP_single_copy_end@@GOMP_1.0+0x15d4>
   12dd8:	add	x0, x24, #0x80
   12ddc:	mov	w1, #0x1                   	// #1
   12de0:	bl	1abd8 <omp_get_num_procs@@OMP_1.0+0x530>
   12de4:	ldp	x19, x20, [sp, #16]
   12de8:	ldp	x21, x22, [sp, #32]
   12dec:	ldp	x23, x24, [sp, #48]
   12df0:	ldp	x25, x26, [sp, #64]
   12df4:	ldp	x29, x30, [sp], #112
   12df8:	ret
   12dfc:	stp	x22, x22, [x19, #96]
   12e00:	str	x22, [x24, #1304]
   12e04:	b	12d2c <GOMP_single_copy_end@@GOMP_1.0+0x15a4>
   12e08:	cmp	x2, x1
   12e0c:	b.ne	12cd0 <GOMP_single_copy_end@@GOMP_1.0+0x1548>  // b.any
   12e10:	ldr	x1, [x24, #1288]
   12e14:	stp	x2, x2, [x19, #128]
   12e18:	ldr	w23, [x19, #88]
   12e1c:	str	x2, [x0, #8]
   12e20:	add	x26, x24, #0x508
   12e24:	add	x22, x19, #0x60
   12e28:	cbz	x1, 12d00 <GOMP_single_copy_end@@GOMP_1.0+0x1578>
   12e2c:	nop
   12e30:	add	x1, sp, #0x58
   12e34:	mov	x0, x26
   12e38:	str	w23, [sp, #88]
   12e3c:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   12e40:	cbz	x0, 12f78 <GOMP_single_copy_end@@GOMP_1.0+0x17f0>
   12e44:	ldr	x1, [x0, #8]
   12e48:	cbz	x1, 12fa4 <GOMP_single_copy_end@@GOMP_1.0+0x181c>
   12e4c:	ldr	x2, [x1, #8]
   12e50:	stp	x1, x2, [x19, #96]
   12e54:	str	x22, [x0, #8]
   12e58:	ldr	x0, [x19, #96]
   12e5c:	str	x22, [x0, #8]
   12e60:	ldr	x0, [x19, #104]
   12e64:	str	x22, [x0]
   12e68:	b	12d2c <GOMP_single_copy_end@@GOMP_1.0+0x15a4>
   12e6c:	ldrb	w0, [x19, #207]
   12e70:	cmp	x2, x1
   12e74:	b.eq	12f38 <GOMP_single_copy_end@@GOMP_1.0+0x17b0>  // b.none
   12e78:	str	x1, [x3, #8]
   12e7c:	b	12c58 <GOMP_single_copy_end@@GOMP_1.0+0x14d0>
   12e80:	ldr	w2, [x1, #16]
   12e84:	add	x0, x1, #0x10
   12e88:	strb	wzr, [x1, #1]
   12e8c:	add	w1, w2, #0x1
   12e90:	and	w1, w1, #0x7fffffff
   12e94:	ldxr	w3, [x0]
   12e98:	cmp	w3, w2
   12e9c:	b.ne	12ea8 <GOMP_single_copy_end@@GOMP_1.0+0x1720>  // b.any
   12ea0:	stlxr	w4, w1, [x0]
   12ea4:	cmp	w4, #0x0
   12ea8:	mov	w2, w3
   12eac:	b.ne	12e8c <GOMP_single_copy_end@@GOMP_1.0+0x1704>  // b.any
   12eb0:	tbz	w3, #31, 12d50 <GOMP_single_copy_end@@GOMP_1.0+0x15c8>
   12eb4:	bl	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
   12eb8:	b	12d50 <GOMP_single_copy_end@@GOMP_1.0+0x15c8>
   12ebc:	ldr	x1, [x4]
   12ec0:	stp	x1, x4, [x19, #112]
   12ec4:	b	12c78 <GOMP_single_copy_end@@GOMP_1.0+0x14f0>
   12ec8:	ldr	w2, [x19, #88]
   12ecc:	mov	x0, x1
   12ed0:	add	x1, sp, #0x58
   12ed4:	str	w2, [sp, #88]
   12ed8:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   12edc:	b	12cac <GOMP_single_copy_end@@GOMP_1.0+0x1524>
   12ee0:	ldr	w2, [x19, #88]
   12ee4:	mov	x0, x1
   12ee8:	add	x1, sp, #0x58
   12eec:	str	w2, [sp, #88]
   12ef0:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   12ef4:	mov	x3, x0
   12ef8:	b	12c30 <GOMP_single_copy_end@@GOMP_1.0+0x14a8>
   12efc:	ldr	w0, [x1, #16]
   12f00:	strb	wzr, [x1], #16
   12f04:	add	w2, w0, #0x1
   12f08:	and	w2, w2, #0x7fffffff
   12f0c:	ldxr	w3, [x1]
   12f10:	cmp	w3, w0
   12f14:	b.ne	12f20 <GOMP_single_copy_end@@GOMP_1.0+0x1798>  // b.any
   12f18:	stlxr	w4, w2, [x1]
   12f1c:	cmp	w4, #0x0
   12f20:	mov	w0, w3
   12f24:	b.ne	12f04 <GOMP_single_copy_end@@GOMP_1.0+0x177c>  // b.any
   12f28:	tbz	w3, #31, 12d50 <GOMP_single_copy_end@@GOMP_1.0+0x15c8>
   12f2c:	mov	x0, x1
   12f30:	bl	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
   12f34:	b	12d50 <GOMP_single_copy_end@@GOMP_1.0+0x15c8>
   12f38:	stp	x2, x2, [x19, #112]
   12f3c:	str	x2, [x3, #8]
   12f40:	b	12c84 <GOMP_single_copy_end@@GOMP_1.0+0x14fc>
   12f44:	cbz	x1, 12f78 <GOMP_single_copy_end@@GOMP_1.0+0x17f0>
   12f48:	mov	x0, #0x28                  	// #40
   12f4c:	bl	b220 <fprintf@plt+0x2710>
   12f50:	ldp	x3, x2, [x26, #16]
   12f54:	mov	x1, x0
   12f58:	mov	x0, x26
   12f5c:	str	wzr, [x1]
   12f60:	stp	x3, x2, [x1, #8]
   12f64:	stp	xzr, xzr, [x1, #24]
   12f68:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   12f6c:	ldr	x0, [x24, #1288]
   12f70:	str	xzr, [x26, #16]
   12f74:	cbnz	x0, 12e30 <GOMP_single_copy_end@@GOMP_1.0+0x16a8>
   12f78:	mov	x0, #0x28                  	// #40
   12f7c:	bl	b220 <fprintf@plt+0x2710>
   12f80:	mov	x25, x0
   12f84:	mov	x0, x26
   12f88:	mov	x1, x25
   12f8c:	str	w23, [x25]
   12f90:	stp	xzr, xzr, [x25, #8]
   12f94:	stp	xzr, xzr, [x25, #24]
   12f98:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   12f9c:	mov	x0, x25
   12fa0:	b	12e44 <GOMP_single_copy_end@@GOMP_1.0+0x16bc>
   12fa4:	stp	x22, x22, [x19, #96]
   12fa8:	str	x22, [x0, #8]
   12fac:	b	12d2c <GOMP_single_copy_end@@GOMP_1.0+0x15a4>
   12fb0:	str	x2, [x3, #16]
   12fb4:	b	12c94 <GOMP_single_copy_end@@GOMP_1.0+0x150c>
   12fb8:	mov	x3, x0
   12fbc:	ldp	x6, x7, [x2]
   12fc0:	str	x1, [x3], #144
   12fc4:	stp	x6, x7, [x0, #144]
   12fc8:	ldp	x6, x7, [x2, #16]
   12fcc:	stp	x6, x7, [x3, #16]
   12fd0:	ldr	x1, [x2, #32]
   12fd4:	str	x1, [x3, #32]
   12fd8:	str	xzr, [x0, #8]
   12fdc:	stp	xzr, xzr, [x0, #24]
   12fe0:	stp	xzr, xzr, [x0, #40]
   12fe4:	stp	xzr, xzr, [x0, #56]
   12fe8:	str	xzr, [x0, #72]
   12fec:	str	xzr, [x0, #200]
   12ff0:	ret
   12ff4:	nop
   12ff8:	stp	x29, x30, [sp, #-48]!
   12ffc:	mov	x29, sp
   13000:	str	x21, [sp, #32]
   13004:	adrp	x21, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   13008:	ldr	x21, [x21, #4016]
   1300c:	stp	x19, x20, [sp, #16]
   13010:	mrs	x19, tpidr_el0
   13014:	add	x0, x19, x21
   13018:	ldr	x20, [x0, #80]
   1301c:	ldr	x0, [x20, #56]
   13020:	cbnz	x0, 13040 <GOMP_single_copy_end@@GOMP_1.0+0x18b8>
   13024:	add	x19, x19, x21
   13028:	ldr	x0, [x20]
   1302c:	ldr	x21, [sp, #32]
   13030:	str	x0, [x19, #80]
   13034:	ldp	x19, x20, [sp, #16]
   13038:	ldp	x29, x30, [sp], #48
   1303c:	ret
   13040:	add	x19, x19, x21
   13044:	bl	8900 <free@plt>
   13048:	ldr	x0, [x20]
   1304c:	ldr	x21, [sp, #32]
   13050:	str	x0, [x19, #80]
   13054:	ldp	x19, x20, [sp, #16]
   13058:	ldp	x29, x30, [sp], #48
   1305c:	ret

0000000000013060 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1>:
   13060:	stp	x29, x30, [sp, #-48]!
   13064:	mov	w2, #0x1                   	// #1
   13068:	mov	x29, sp
   1306c:	stp	x21, x22, [sp, #32]
   13070:	ldp	x22, x21, [x0, #56]
   13074:	stp	x19, x20, [sp, #16]
   13078:	mov	x19, x0
   1307c:	add	x20, x21, #0x500
   13080:	ldaxr	w1, [x20]
   13084:	cbnz	w1, 13090 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x30>
   13088:	stxr	w0, w2, [x20]
   1308c:	cbnz	w0, 13080 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x20>
   13090:	cmp	w1, #0x0
   13094:	b.ne	130fc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9c>  // b.any
   13098:	ldr	w0, [x19, #44]
   1309c:	cmp	w0, #0x3
   130a0:	mov	w0, #0x5                   	// #5
   130a4:	str	w0, [x19, #44]
   130a8:	b.eq	130d8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x78>  // b.none
   130ac:	mov	x1, x22
   130b0:	mov	x0, x21
   130b4:	bl	12bf8 <GOMP_single_copy_end@@GOMP_1.0+0x1470>
   130b8:	ldxr	w0, [x20]
   130bc:	stlxr	w1, wzr, [x20]
   130c0:	cbnz	w1, 130b8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x58>
   130c4:	tbnz	w0, #31, 130e8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x88>
   130c8:	ldp	x19, x20, [sp, #16]
   130cc:	ldp	x21, x22, [sp, #32]
   130d0:	ldp	x29, x30, [sp], #48
   130d4:	ret
   130d8:	ldxr	w0, [x20]
   130dc:	stlxr	w1, wzr, [x20]
   130e0:	cbnz	w1, 130d8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x78>
   130e4:	tbz	w0, #31, 130c8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x68>
   130e8:	mov	x0, x20
   130ec:	ldp	x19, x20, [sp, #16]
   130f0:	ldp	x21, x22, [sp, #32]
   130f4:	ldp	x29, x30, [sp], #48
   130f8:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   130fc:	mov	x0, x20
   13100:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   13104:	b	13098 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x38>
   13108:	adrp	x8, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1310c:	ldr	x8, [x8, #4016]
   13110:	mrs	x9, tpidr_el0
   13114:	stp	x29, x30, [sp, #-208]!
   13118:	mov	x13, x1
   1311c:	add	x10, x9, x8
   13120:	mov	x29, sp
   13124:	stp	x25, x26, [sp, #64]
   13128:	ldr	x26, [x10, #16]
   1312c:	stp	x7, x8, [sp, #112]
   13130:	adrp	x8, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   13134:	cmp	x26, #0x0
   13138:	stp	x21, x22, [sp, #32]
   1313c:	ldrb	w11, [x8, #1364]
   13140:	stp	x23, x24, [sp, #48]
   13144:	mov	x22, x2
   13148:	mov	x21, x5
   1314c:	stp	x27, x28, [sp, #80]
   13150:	mov	x27, x4
   13154:	stp	x3, x0, [sp, #96]
   13158:	cset	w0, ne  // ne = any
   1315c:	tst	w0, w11
   13160:	str	x9, [sp, #128]
   13164:	str	w6, [sp, #140]
   13168:	b.ne	13818 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7b8>  // b.any
   1316c:	ldr	x25, [x10, #80]
   13170:	stp	x19, x20, [sp, #16]
   13174:	ldr	x23, [x25, #40]
   13178:	ldr	x0, [sp, #112]
   1317c:	cbz	x0, 13584 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x524>
   13180:	ldr	x7, [x0]
   13184:	cbz	x7, 13524 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4c4>
   13188:	add	x7, x7, x7, lsl #2
   1318c:	lsl	x20, x7, #3
   13190:	add	x14, x20, #0xd0
   13194:	sub	x10, x20, #0x1
   13198:	cbz	x13, 1352c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4cc>
   1319c:	cbz	x22, 1352c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4cc>
   131a0:	mov	x1, #0x0                   	// #0
   131a4:	mov	x2, #0x0                   	// #0
   131a8:	mov	x6, #0x0                   	// #0
   131ac:	mov	x15, #0x1                   	// #1
   131b0:	ldrh	w0, [x21, x1, lsl #1]
   131b4:	and	w3, w0, #0xff
   131b8:	cmp	w3, #0xc
   131bc:	b.ne	131e8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x188>  // b.any
   131c0:	lsr	w0, w0, #8
   131c4:	sub	x2, x2, #0x1
   131c8:	ldr	x16, [x27, x1, lsl #3]
   131cc:	lsl	x0, x15, x0
   131d0:	add	x2, x2, x0
   131d4:	neg	x3, x0
   131d8:	cmp	x6, x0
   131dc:	and	x2, x3, x2
   131e0:	csel	x6, x6, x0, cs  // cs = hs, nlast
   131e4:	add	x2, x2, x16
   131e8:	add	x1, x1, #0x1
   131ec:	cmp	x22, x1
   131f0:	b.ne	131b0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x150>  // b.any
   131f4:	add	x2, x6, x2
   131f8:	cmp	x6, #0x0
   131fc:	add	x2, x10, x2
   13200:	csel	x2, x2, x20, ne  // ne = any
   13204:	lsl	x10, x22, #3
   13208:	lsl	x0, x22, #1
   1320c:	stp	x13, x0, [sp, #160]
   13210:	add	x0, x10, x22
   13214:	mov	x28, x10
   13218:	add	x0, x2, x0, lsl #1
   1321c:	stp	x6, x14, [sp, #144]
   13220:	add	x0, x0, #0x120
   13224:	bl	b220 <fprintf@plt+0x2710>
   13228:	mov	x24, x0
   1322c:	ldp	x3, x1, [sp, #120]
   13230:	mov	x15, x0
   13234:	ldp	x14, x13, [sp, #152]
   13238:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1323c:	add	x2, x2, #0x2b8
   13240:	str	x25, [x15], #144
   13244:	add	x1, x1, x3
   13248:	add	x19, x0, x14
   1324c:	ldr	x0, [x1, #80]
   13250:	add	x3, x19, #0x50
   13254:	str	x3, [sp, #152]
   13258:	cmp	x0, #0x0
   1325c:	add	x0, x0, #0x90
   13260:	csel	x2, x2, x0, eq  // eq = none
   13264:	ldp	x0, x1, [x2]
   13268:	stp	x0, x1, [x24, #144]
   1326c:	ldp	x0, x1, [x2, #16]
   13270:	stp	x0, x1, [x15, #16]
   13274:	ldr	x0, [x2, #32]
   13278:	str	x0, [x15, #32]
   1327c:	mov	x1, #0x2                   	// #2
   13280:	str	x1, [x24, #200]
   13284:	str	xzr, [x24, #8]
   13288:	mov	x0, x3
   1328c:	ldrb	w1, [x25, #204]
   13290:	mov	x2, x28
   13294:	stp	xzr, xzr, [x24, #24]
   13298:	str	x23, [x24, #40]
   1329c:	str	xzr, [x24, #48]
   132a0:	str	xzr, [x24, #56]
   132a4:	str	xzr, [x24, #64]
   132a8:	str	xzr, [x24, #72]
   132ac:	str	wzr, [x24, #88]
   132b0:	strb	w1, [x24, #204]
   132b4:	ldr	x1, [sp, #104]
   132b8:	str	x1, [x24, x14]
   132bc:	ldr	x1, [sp, #96]
   132c0:	stp	x13, x22, [x19, #8]
   132c4:	ldr	x3, [sp, #208]
   132c8:	str	x3, [x19, #72]
   132cc:	bl	85c0 <memcpy@plt>
   132d0:	add	x0, x28, #0x50
   132d4:	mov	x2, x28
   132d8:	add	x0, x19, x0
   132dc:	str	x0, [x19, #24]
   132e0:	mov	x1, x27
   132e4:	bl	85c0 <memcpy@plt>
   132e8:	ldr	x0, [x19, #24]
   132ec:	lsl	x2, x22, #1
   132f0:	mov	x1, x21
   132f4:	add	x0, x0, x28
   132f8:	str	x0, [x19, #32]
   132fc:	bl	85c0 <memcpy@plt>
   13300:	ldr	x6, [sp, #144]
   13304:	cbnz	x6, 13480 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x420>
   13308:	ldr	w0, [sp, #140]
   1330c:	add	x21, x26, #0x500
   13310:	str	w0, [x19, #40]
   13314:	ldr	w0, [sp, #216]
   13318:	str	w0, [x19, #44]
   1331c:	stp	x24, x26, [x19, #56]
   13320:	mov	w0, #0x1                   	// #1
   13324:	stp	xzr, x19, [x24, #184]
   13328:	strb	wzr, [x24, #205]
   1332c:	ldaxr	w1, [x21]
   13330:	cbnz	w1, 1333c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2dc>
   13334:	stxr	w2, w0, [x21]
   13338:	cbnz	w2, 1332c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2cc>
   1333c:	cmp	w1, #0x0
   13340:	b.ne	13a08 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9a8>  // b.any
   13344:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   13348:	ldrb	w22, [x0, #1364]
   1334c:	cbnz	w22, 1369c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x63c>
   13350:	cbnz	x20, 13538 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4d8>
   13354:	ldr	w0, [sp, #216]
   13358:	cbz	w0, 136fc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x69c>
   1335c:	cbz	x23, 1336c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x30c>
   13360:	ldr	x0, [x23, #56]
   13364:	add	x0, x0, #0x1
   13368:	str	x0, [x23, #56]
   1336c:	ldr	x1, [sp, #104]
   13370:	add	x22, x25, #0x8
   13374:	add	x20, x24, #0x70
   13378:	ldr	x0, [x25, #8]
   1337c:	cbz	x1, 13388 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x328>
   13380:	ldr	w1, [x1, #8]
   13384:	tbnz	w1, #2, 135cc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x56c>
   13388:	cbnz	x0, 137b4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x754>
   1338c:	ldr	x0, [x25, #24]
   13390:	cbz	x0, 135c0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x560>
   13394:	ldr	x1, [x0, #8]
   13398:	stp	x0, x1, [x24, #112]
   1339c:	str	x20, [x25, #24]
   133a0:	ldr	x0, [x24, #112]
   133a4:	str	x20, [x0, #8]
   133a8:	ldr	x0, [x24, #120]
   133ac:	str	x20, [x0]
   133b0:	cbz	x23, 133e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x384>
   133b4:	ldr	x0, [x23, #8]
   133b8:	add	x19, x24, #0x80
   133bc:	cbnz	x0, 13854 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7f4>
   133c0:	ldr	x0, [x23, #24]
   133c4:	cbz	x0, 136f0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x690>
   133c8:	ldr	x1, [x0, #8]
   133cc:	stp	x0, x1, [x24, #128]
   133d0:	str	x19, [x23, #24]
   133d4:	ldr	x0, [x24, #128]
   133d8:	str	x19, [x0, #8]
   133dc:	ldr	x0, [x24, #136]
   133e0:	str	x19, [x0]
   133e4:	ldr	x0, [x26, #1288]
   133e8:	add	x19, x24, #0x60
   133ec:	cbnz	x0, 13754 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6f4>
   133f0:	ldr	x0, [x26, #1304]
   133f4:	cbz	x0, 13748 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6e8>
   133f8:	ldr	x1, [x0, #8]
   133fc:	stp	x0, x1, [x24, #96]
   13400:	str	x19, [x0, #8]
   13404:	ldr	x0, [x24, #104]
   13408:	str	x19, [x0]
   1340c:	ldr	w0, [x26, #1324]
   13410:	ldrb	w19, [x25, #204]
   13414:	add	w0, w0, #0x1
   13418:	str	w0, [x26, #1324]
   1341c:	ldr	w0, [x26, #1328]
   13420:	eor	w19, w19, #0x1
   13424:	ldr	w2, [x26, #132]
   13428:	ldr	w1, [x26, #1320]
   1342c:	add	w19, w19, w0
   13430:	ldr	w20, [x26]
   13434:	orr	w2, w2, #0x1
   13438:	add	w1, w1, #0x1
   1343c:	str	w2, [x26, #132]
   13440:	str	w1, [x26, #1320]
   13444:	ldxr	w0, [x21]
   13448:	stlxr	w1, wzr, [x21]
   1344c:	cbnz	w1, 13444 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3e4>
   13450:	tbnz	w0, #31, 13894 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x834>
   13454:	cmp	w19, w20
   13458:	b.cc	13590 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x530>  // b.lo, b.ul, b.last
   1345c:	ldp	x19, x20, [sp, #16]
   13460:	mov	w22, #0x1                   	// #1
   13464:	mov	w0, w22
   13468:	ldp	x21, x22, [sp, #32]
   1346c:	ldp	x23, x24, [sp, #48]
   13470:	ldp	x25, x26, [sp, #64]
   13474:	ldp	x27, x28, [sp, #80]
   13478:	ldp	x29, x30, [sp], #208
   1347c:	ret
   13480:	ldr	x13, [x19, #32]
   13484:	lsl	x1, x22, #1
   13488:	sub	x0, x6, #0x1
   1348c:	add	x13, x13, x1
   13490:	ands	x0, x13, x0
   13494:	sub	x6, x6, x0
   13498:	add	x6, x13, x6
   1349c:	csel	x13, x6, x13, ne  // ne = any
   134a0:	cbz	x22, 13308 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2a8>
   134a4:	mov	x28, #0x0                   	// #0
   134a8:	mov	x10, #0x0                   	// #0
   134ac:	b	134bc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x45c>
   134b0:	add	x28, x28, #0x1
   134b4:	cmp	x22, x28
   134b8:	b.eq	13308 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2a8>  // b.none
   134bc:	ldrh	w0, [x21, x28, lsl #1]
   134c0:	and	w1, w0, #0xff
   134c4:	cmp	w1, #0xc
   134c8:	b.ne	134b0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x450>  // b.any
   134cc:	lsr	w0, w0, #8
   134d0:	mov	x1, #0x1                   	// #1
   134d4:	sub	x10, x10, #0x1
   134d8:	str	x13, [sp, #144]
   134dc:	lsl	x0, x1, x0
   134e0:	add	x10, x10, x0
   134e4:	ldr	x1, [sp, #96]
   134e8:	neg	x0, x0
   134ec:	and	x10, x0, x10
   134f0:	str	x10, [sp, #160]
   134f4:	ldr	x2, [x27, x28, lsl #3]
   134f8:	add	x14, x13, x10
   134fc:	ldr	x1, [x1, x28, lsl #3]
   13500:	mov	x0, x14
   13504:	bl	85c0 <memcpy@plt>
   13508:	mov	x14, x0
   1350c:	ldp	x13, x1, [sp, #144]
   13510:	ldr	x0, [x27, x28, lsl #3]
   13514:	ldr	x10, [sp, #160]
   13518:	str	x14, [x1, x28, lsl #3]
   1351c:	add	x10, x10, x0
   13520:	b	134b0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x450>
   13524:	ldr	x7, [x0, #8]
   13528:	b	13188 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x128>
   1352c:	mov	x2, x20
   13530:	mov	x6, #0x0                   	// #0
   13534:	b	13204 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1a4>
   13538:	ldr	x2, [sp, #112]
   1353c:	mov	x0, x24
   13540:	mov	x1, x25
   13544:	bl	11cf0 <GOMP_single_copy_end@@GOMP_1.0+0x568>
   13548:	ldr	x0, [x24, #80]
   1354c:	cbz	x0, 13354 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2f4>
   13550:	cbz	x23, 13560 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x500>
   13554:	ldr	x0, [x23, #56]
   13558:	add	x0, x0, #0x1
   1355c:	str	x0, [x23, #56]
   13560:	ldxr	w0, [x21]
   13564:	stlxr	w1, wzr, [x21]
   13568:	cbnz	w1, 13560 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x500>
   1356c:	tbz	w0, #31, 1345c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3fc>
   13570:	mov	x0, x21
   13574:	mov	w22, #0x1                   	// #1
   13578:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1357c:	ldp	x19, x20, [sp, #16]
   13580:	b	13464 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x404>
   13584:	mov	x14, #0xd0                  	// #208
   13588:	mov	x20, #0x0                   	// #0
   1358c:	b	13194 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x134>
   13590:	add	x0, x26, #0x80
   13594:	mov	w22, #0x1                   	// #1
   13598:	mov	w1, w22
   1359c:	bl	1abd8 <omp_get_num_procs@@OMP_1.0+0x530>
   135a0:	mov	w0, w22
   135a4:	ldp	x19, x20, [sp, #16]
   135a8:	ldp	x21, x22, [sp, #32]
   135ac:	ldp	x23, x24, [sp, #48]
   135b0:	ldp	x25, x26, [sp, #64]
   135b4:	ldp	x27, x28, [sp, #80]
   135b8:	ldp	x29, x30, [sp], #208
   135bc:	ret
   135c0:	stp	x20, x20, [x24, #112]
   135c4:	str	x20, [x25, #24]
   135c8:	b	133b0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x350>
   135cc:	cbnz	x0, 13920 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8c0>
   135d0:	ldr	x0, [x25, #24]
   135d4:	cbz	x0, 13904 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8a4>
   135d8:	ldr	x1, [x0, #8]
   135dc:	stp	x0, x1, [x24, #112]
   135e0:	str	x20, [x0, #8]
   135e4:	ldr	x0, [x24, #120]
   135e8:	str	x20, [x0]
   135ec:	cbz	x23, 13618 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5b8>
   135f0:	ldr	x0, [x23, #8]
   135f4:	add	x22, x24, #0x80
   135f8:	cbnz	x0, 13990 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x930>
   135fc:	ldr	x0, [x23, #24]
   13600:	cbz	x0, 138d8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x878>
   13604:	ldr	x1, [x0, #8]
   13608:	stp	x0, x1, [x24, #128]
   1360c:	str	x22, [x0, #8]
   13610:	ldr	x0, [x24, #136]
   13614:	str	x22, [x0]
   13618:	ldr	w0, [x26, #1320]
   1361c:	mov	w1, #0x3                   	// #3
   13620:	stp	xzr, xzr, [x24, #96]
   13624:	add	w0, w0, #0x1
   13628:	str	w1, [x24, #200]
   1362c:	str	w0, [x26, #1320]
   13630:	ldxr	w0, [x21]
   13634:	stlxr	w1, wzr, [x21]
   13638:	cbnz	w1, 13630 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5d0>
   1363c:	tbnz	w0, #31, 139e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x984>
   13640:	ldp	x2, x1, [sp, #120]
   13644:	ldr	x0, [x24, #192]
   13648:	add	x23, x1, x2
   1364c:	str	x24, [x23, #80]
   13650:	bl	21210 <GOMP_target_enter_exit_data@@GOMP_4.5+0x240>
   13654:	mov	w0, #0x1                   	// #1
   13658:	str	x25, [x23, #80]
   1365c:	ldaxr	w1, [x21]
   13660:	cbnz	w1, 1366c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x60c>
   13664:	stxr	w2, w0, [x21]
   13668:	cbnz	w2, 1365c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5fc>
   1366c:	cmp	w1, #0x0
   13670:	b.ne	13a14 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9b4>  // b.any
   13674:	ldr	w1, [x19, #44]
   13678:	mov	w0, #0x4                   	// #4
   1367c:	str	w0, [x24, #200]
   13680:	cmp	w1, #0x5
   13684:	b.eq	13910 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8b0>  // b.none
   13688:	str	w0, [x19, #44]
   1368c:	ldxr	w0, [x21]
   13690:	stlxr	w1, wzr, [x21]
   13694:	cbz	w1, 1356c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x50c>
   13698:	b	1368c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x62c>
   1369c:	ldr	w0, [x26, #132]
   136a0:	tbnz	w0, #2, 136c8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x668>
   136a4:	cbz	x23, 13350 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2f0>
   136a8:	ldrb	w0, [x23, #49]
   136ac:	cbnz	w0, 136c8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x668>
   136b0:	ldrb	w0, [x23, #50]
   136b4:	cbz	w0, 13350 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2f0>
   136b8:	ldr	x0, [x23]
   136bc:	cbz	x0, 13350 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2f0>
   136c0:	ldrb	w0, [x0, #49]
   136c4:	cbz	w0, 13350 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2f0>
   136c8:	ldxr	w0, [x21]
   136cc:	stlxr	w1, wzr, [x21]
   136d0:	cbnz	w1, 136c8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x668>
   136d4:	tbnz	w0, #31, 139fc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x99c>
   136d8:	ldr	x0, [x24, #56]
   136dc:	cbnz	x0, 138e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x884>
   136e0:	mov	x0, x24
   136e4:	bl	8900 <free@plt>
   136e8:	ldp	x19, x20, [sp, #16]
   136ec:	b	13464 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x404>
   136f0:	stp	x19, x19, [x24, #128]
   136f4:	str	x19, [x23, #24]
   136f8:	b	133e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x384>
   136fc:	mov	x0, x24
   13700:	bl	120a8 <GOMP_single_copy_end@@GOMP_1.0+0x920>
   13704:	ldxr	w0, [x21]
   13708:	stlxr	w1, wzr, [x21]
   1370c:	cbnz	w1, 13704 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6a4>
   13710:	tbnz	w0, #31, 13984 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x924>
   13714:	ldr	x0, [x24, #56]
   13718:	cbnz	x0, 1397c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x91c>
   1371c:	mov	x0, x24
   13720:	mov	w22, #0x0                   	// #0
   13724:	bl	8900 <free@plt>
   13728:	mov	w0, w22
   1372c:	ldp	x19, x20, [sp, #16]
   13730:	ldp	x21, x22, [sp, #32]
   13734:	ldp	x23, x24, [sp, #48]
   13738:	ldp	x25, x26, [sp, #64]
   1373c:	ldp	x27, x28, [sp, #80]
   13740:	ldp	x29, x30, [sp], #208
   13744:	ret
   13748:	stp	x19, x19, [x24, #96]
   1374c:	str	x19, [x26, #1304]
   13750:	b	1340c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3ac>
   13754:	add	x22, x26, #0x508
   13758:	add	x1, sp, #0xb8
   1375c:	mov	x0, x22
   13760:	str	wzr, [sp, #184]
   13764:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   13768:	cbnz	x0, 13794 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x734>
   1376c:	mov	x0, #0x28                  	// #40
   13770:	bl	b220 <fprintf@plt+0x2710>
   13774:	mov	x20, x0
   13778:	mov	x0, x22
   1377c:	mov	x1, x20
   13780:	str	wzr, [x20]
   13784:	stp	xzr, xzr, [x20, #8]
   13788:	stp	xzr, xzr, [x20, #24]
   1378c:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   13790:	mov	x0, x20
   13794:	ldr	x1, [x0, #8]
   13798:	cbz	x1, 138f8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x898>
   1379c:	ldr	x0, [x1, #8]
   137a0:	stp	x1, x0, [x24, #96]
   137a4:	str	x19, [x1, #8]
   137a8:	ldr	x0, [x24, #104]
   137ac:	str	x19, [x0]
   137b0:	b	1340c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3ac>
   137b4:	add	x1, sp, #0xb8
   137b8:	mov	x0, x22
   137bc:	str	wzr, [sp, #184]
   137c0:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   137c4:	cbnz	x0, 137f0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x790>
   137c8:	mov	x0, #0x28                  	// #40
   137cc:	bl	b220 <fprintf@plt+0x2710>
   137d0:	mov	x19, x0
   137d4:	mov	x0, x22
   137d8:	mov	x1, x19
   137dc:	str	wzr, [x19]
   137e0:	stp	xzr, xzr, [x19, #8]
   137e4:	stp	xzr, xzr, [x19, #24]
   137e8:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   137ec:	mov	x0, x19
   137f0:	ldr	x1, [x0, #8]
   137f4:	cbz	x1, 138ec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x88c>
   137f8:	ldr	x2, [x1, #8]
   137fc:	stp	x1, x2, [x24, #112]
   13800:	str	x20, [x0, #8]
   13804:	ldr	x0, [x24, #112]
   13808:	str	x20, [x0, #8]
   1380c:	ldr	x0, [x24, #120]
   13810:	str	x20, [x0]
   13814:	b	133b0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x350>
   13818:	ldr	w0, [x26, #132]
   1381c:	tbnz	w0, #2, 13460 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x400>
   13820:	ldr	x25, [x10, #80]
   13824:	ldr	x23, [x25, #40]
   13828:	cbz	x23, 1384c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7ec>
   1382c:	ldrb	w0, [x23, #49]
   13830:	cbnz	w0, 13460 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x400>
   13834:	ldrb	w0, [x23, #50]
   13838:	cbz	w0, 1384c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7ec>
   1383c:	ldr	x0, [x23]
   13840:	cbz	x0, 1384c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7ec>
   13844:	ldrb	w0, [x0, #49]
   13848:	cbnz	w0, 13460 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x400>
   1384c:	stp	x19, x20, [sp, #16]
   13850:	b	13178 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x118>
   13854:	add	x23, x23, #0x8
   13858:	add	x1, sp, #0xb8
   1385c:	mov	x0, x23
   13860:	str	wzr, [sp, #184]
   13864:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   13868:	cbz	x0, 138a0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x840>
   1386c:	ldr	x1, [x0, #8]
   13870:	cbz	x1, 138cc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x86c>
   13874:	ldr	x2, [x1, #8]
   13878:	stp	x1, x2, [x24, #128]
   1387c:	str	x19, [x0, #8]
   13880:	ldr	x0, [x24, #128]
   13884:	str	x19, [x0, #8]
   13888:	ldr	x0, [x24, #136]
   1388c:	str	x19, [x0]
   13890:	b	133e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x384>
   13894:	mov	x0, x21
   13898:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1389c:	b	13454 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3f4>
   138a0:	mov	x0, #0x28                  	// #40
   138a4:	bl	b220 <fprintf@plt+0x2710>
   138a8:	mov	x20, x0
   138ac:	mov	x0, x23
   138b0:	mov	x1, x20
   138b4:	str	wzr, [x20]
   138b8:	stp	xzr, xzr, [x20, #8]
   138bc:	stp	xzr, xzr, [x20, #24]
   138c0:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   138c4:	mov	x0, x20
   138c8:	b	1386c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x80c>
   138cc:	stp	x19, x19, [x24, #128]
   138d0:	str	x19, [x0, #8]
   138d4:	b	133e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x384>
   138d8:	stp	x22, x22, [x24, #128]
   138dc:	str	x22, [x23, #24]
   138e0:	b	13618 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5b8>
   138e4:	bl	8900 <free@plt>
   138e8:	b	136e0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x680>
   138ec:	stp	x20, x20, [x24, #112]
   138f0:	str	x20, [x0, #8]
   138f4:	b	133b0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x350>
   138f8:	stp	x19, x19, [x24, #96]
   138fc:	str	x19, [x0, #8]
   13900:	b	1340c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3ac>
   13904:	stp	x20, x20, [x24, #112]
   13908:	str	x20, [x25, #24]
   1390c:	b	135ec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x58c>
   13910:	mov	x1, x24
   13914:	mov	x0, x26
   13918:	bl	12bf8 <GOMP_single_copy_end@@GOMP_1.0+0x1470>
   1391c:	b	1368c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x62c>
   13920:	add	x1, sp, #0xb8
   13924:	mov	x0, x22
   13928:	str	wzr, [sp, #184]
   1392c:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   13930:	cbnz	x0, 1395c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8fc>
   13934:	mov	x0, #0x28                  	// #40
   13938:	bl	b220 <fprintf@plt+0x2710>
   1393c:	mov	x1, x0
   13940:	mov	x0, x22
   13944:	mov	x22, x1
   13948:	str	wzr, [x1]
   1394c:	stp	xzr, xzr, [x1, #8]
   13950:	stp	xzr, xzr, [x1, #24]
   13954:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   13958:	mov	x0, x22
   1395c:	ldr	x1, [x0, #8]
   13960:	cbz	x1, 139f0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x990>
   13964:	ldr	x0, [x1, #8]
   13968:	stp	x1, x0, [x24, #112]
   1396c:	str	x20, [x1, #8]
   13970:	ldr	x0, [x24, #120]
   13974:	str	x20, [x0]
   13978:	b	135ec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x58c>
   1397c:	bl	8900 <free@plt>
   13980:	b	1371c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6bc>
   13984:	mov	x0, x21
   13988:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1398c:	b	13714 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6b4>
   13990:	add	x23, x23, #0x8
   13994:	add	x1, sp, #0xb8
   13998:	mov	x0, x23
   1399c:	str	wzr, [sp, #184]
   139a0:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   139a4:	mov	x20, x0
   139a8:	cbnz	x0, 139d0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x970>
   139ac:	mov	x0, #0x28                  	// #40
   139b0:	bl	b220 <fprintf@plt+0x2710>
   139b4:	mov	x20, x0
   139b8:	mov	x0, x23
   139bc:	mov	x1, x20
   139c0:	str	wzr, [x20]
   139c4:	stp	xzr, xzr, [x20, #8]
   139c8:	stp	xzr, xzr, [x20, #24]
   139cc:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   139d0:	ldr	x0, [x20, #8]
   139d4:	cbnz	x0, 13604 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5a4>
   139d8:	stp	x22, x22, [x24, #128]
   139dc:	str	x22, [x20, #8]
   139e0:	b	13618 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5b8>
   139e4:	mov	x0, x21
   139e8:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   139ec:	b	13640 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5e0>
   139f0:	stp	x20, x20, [x24, #112]
   139f4:	str	x20, [x0, #8]
   139f8:	b	135ec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x58c>
   139fc:	mov	x0, x21
   13a00:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   13a04:	b	136d8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x678>
   13a08:	mov	x0, x21
   13a0c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   13a10:	b	13344 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x2e4>
   13a14:	mov	x0, x21
   13a18:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   13a1c:	b	13674 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x614>
   13a20:	stp	x29, x30, [sp, #-160]!
   13a24:	mov	w2, #0x1                   	// #1
   13a28:	mov	x29, sp
   13a2c:	stp	x21, x22, [sp, #32]
   13a30:	adrp	x22, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   13a34:	ldr	x22, [x22, #4016]
   13a38:	stp	x23, x24, [sp, #48]
   13a3c:	mrs	x23, tpidr_el0
   13a40:	add	x1, x23, x22
   13a44:	stp	x19, x20, [sp, #16]
   13a48:	mov	w24, w0
   13a4c:	ldr	x20, [x1, #16]
   13a50:	stp	x25, x26, [sp, #64]
   13a54:	ldr	x26, [x1, #80]
   13a58:	add	x21, x20, #0x500
   13a5c:	ldaxr	w1, [x21]
   13a60:	cbnz	w1, 13a6c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa0c>
   13a64:	stxr	w0, w2, [x21]
   13a68:	cbnz	w0, 13a5c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9fc>
   13a6c:	cmp	w1, #0x0
   13a70:	b.ne	14010 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfb0>  // b.any
   13a74:	tbz	w24, #0, 13f84 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf24>
   13a78:	ldr	w0, [x20, #1320]
   13a7c:	cbz	w0, 13dbc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd5c>
   13a80:	ldr	w0, [x20, #132]
   13a84:	stp	x27, x28, [sp, #80]
   13a88:	orr	w0, w0, #0x2
   13a8c:	str	w0, [x20, #132]
   13a90:	and	w0, w24, #0xfffffff8
   13a94:	add	x25, x20, #0x508
   13a98:	add	w0, w0, #0x8
   13a9c:	str	w0, [sp, #116]
   13aa0:	add	x0, sp, #0x9f
   13aa4:	str	x0, [sp, #120]
   13aa8:	add	x0, x20, #0x80
   13aac:	str	x0, [sp, #104]
   13ab0:	ldr	x0, [x20, #1288]
   13ab4:	mov	w24, #0x0                   	// #0
   13ab8:	mov	x28, #0x0                   	// #0
   13abc:	cbnz	x0, 13ca0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc40>
   13ac0:	ldr	x19, [x25, #16]
   13ac4:	cbz	x19, 13b00 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xaa0>
   13ac8:	sub	x19, x19, #0x60
   13acc:	mov	w0, #0x1                   	// #1
   13ad0:	strb	w0, [sp, #159]
   13ad4:	ldr	x1, [x19]
   13ad8:	mov	x2, x20
   13adc:	mov	x0, x19
   13ae0:	bl	122c8 <GOMP_single_copy_end@@GOMP_1.0+0xb40>
   13ae4:	ands	w27, w0, #0xff
   13ae8:	b.ne	13ce8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc88>  // b.any
   13aec:	ldr	w0, [x20, #1328]
   13af0:	mov	w1, #0x1                   	// #1
   13af4:	add	w0, w0, #0x1
   13af8:	str	w0, [x20, #1328]
   13afc:	strb	w1, [x19, #204]
   13b00:	ldxr	w0, [x21]
   13b04:	stlxr	w1, wzr, [x21]
   13b08:	cbnz	w1, 13b00 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xaa0>
   13b0c:	tbnz	w0, #31, 13d10 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcb0>
   13b10:	cbnz	w24, 13d00 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xca0>
   13b14:	cbz	x28, 13b28 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xac8>
   13b18:	ldr	x0, [x28, #56]
   13b1c:	cbnz	x0, 13f58 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xef8>
   13b20:	mov	x0, x28
   13b24:	bl	8900 <free@plt>
   13b28:	cbz	x19, 13e48 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xde8>
   13b2c:	ldp	x1, x0, [x19, #184]
   13b30:	add	x24, x23, x22
   13b34:	str	x19, [x24, #80]
   13b38:	cbz	x1, 13e70 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe10>
   13b3c:	blr	x1
   13b40:	add	x0, x23, x22
   13b44:	mov	w2, #0x1                   	// #1
   13b48:	str	x26, [x0, #80]
   13b4c:	ldaxr	w1, [x21]
   13b50:	cbnz	w1, 13b5c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xafc>
   13b54:	stxr	w0, w2, [x21]
   13b58:	cbnz	w0, 13b4c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xaec>
   13b5c:	cmp	w1, #0x0
   13b60:	b.ne	14030 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfd0>  // b.any
   13b64:	mov	w27, #0x0                   	// #0
   13b68:	mov	w24, #0x0                   	// #0
   13b6c:	ldr	x28, [x19, #72]
   13b70:	ldr	x4, [x19]
   13b74:	cbz	x28, 13ba0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb40>
   13b78:	cbz	x4, 13dfc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd9c>
   13b7c:	mov	x0, x19
   13b80:	bl	120a8 <GOMP_single_copy_end@@GOMP_1.0+0x920>
   13b84:	ldr	x0, [x19, #48]
   13b88:	cbz	x0, 13e64 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe04>
   13b8c:	mov	x1, x20
   13b90:	mov	x0, x19
   13b94:	bl	12660 <GOMP_single_copy_end@@GOMP_1.0+0xed8>
   13b98:	mov	x28, x0
   13b9c:	ldr	x4, [x19]
   13ba0:	cbz	x4, 13bd4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb74>
   13ba4:	ldrb	w0, [x19, #207]
   13ba8:	cbnz	w0, 13ed4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe74>
   13bac:	ldr	x0, [x4, #8]
   13bb0:	add	x2, x19, #0x70
   13bb4:	cbnz	x0, 13f34 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xed4>
   13bb8:	ldp	x0, x1, [x19, #112]
   13bbc:	ldr	x8, [x4, #24]
   13bc0:	cmp	x2, x8
   13bc4:	str	x0, [x1]
   13bc8:	str	x1, [x0, #8]
   13bcc:	b.eq	13d20 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcc0>  // b.none
   13bd0:	stp	xzr, xzr, [x19, #112]
   13bd4:	ldr	x1, [x19, #8]
   13bd8:	cbnz	x1, 13e10 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xdb0>
   13bdc:	ldr	x0, [x19, #24]
   13be0:	mov	x1, x0
   13be4:	cbz	x0, 13bf8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb98>
   13be8:	stur	xzr, [x1, #-112]
   13bec:	ldr	x1, [x1]
   13bf0:	cmp	x0, x1
   13bf4:	b.ne	13be8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb88>  // b.any
   13bf8:	ldr	x4, [x19, #40]
   13bfc:	cbz	x4, 13c50 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbf0>
   13c00:	ldr	x0, [x4, #8]
   13c04:	add	x2, x19, #0x80
   13c08:	cbnz	x0, 13f60 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf00>
   13c0c:	ldp	x0, x1, [x19, #128]
   13c10:	add	x7, x4, #0x10
   13c14:	ldr	x9, [x7, #8]
   13c18:	mov	w8, #0x0                   	// #0
   13c1c:	cmp	x2, x9
   13c20:	str	x0, [x1]
   13c24:	str	x1, [x0, #8]
   13c28:	b.eq	13e20 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xdc0>  // b.none
   13c2c:	ldr	x0, [x4, #56]
   13c30:	stp	xzr, xzr, [x19, #128]
   13c34:	cmp	x0, #0x1
   13c38:	b.ls	13e3c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xddc>  // b.plast
   13c3c:	sub	x0, x0, #0x1
   13c40:	str	x0, [x4, #56]
   13c44:	cbz	w8, 13c50 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbf0>
   13c48:	ldrb	w0, [x4, #48]
   13c4c:	cbnz	w0, 13d80 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd20>
   13c50:	cbnz	w27, 13c60 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc00>
   13c54:	ldr	w0, [x20, #1328]
   13c58:	sub	w0, w0, #0x1
   13c5c:	str	w0, [x20, #1328]
   13c60:	cmp	x28, #0x1
   13c64:	b.ls	13c7c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc1c>  // b.plast
   13c68:	ldr	w5, [x20]
   13c6c:	ldr	w0, [x20, #1328]
   13c70:	sub	w24, w5, w0
   13c74:	cmp	x28, w24, sxtw
   13c78:	csel	w24, w28, w24, cc  // cc = lo, ul, last
   13c7c:	ldr	w0, [x20, #1320]
   13c80:	sub	w0, w0, #0x1
   13c84:	str	w0, [x20, #1320]
   13c88:	cbnz	w0, 13c94 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc34>
   13c8c:	ldr	w0, [x20, #132]
   13c90:	tbnz	w0, #1, 13d30 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcd0>
   13c94:	mov	x28, x19
   13c98:	ldr	x0, [x20, #1288]
   13c9c:	cbz	x0, 13ac0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa60>
   13ca0:	ldr	x4, [sp, #120]
   13ca4:	mov	x1, x25
   13ca8:	mov	x3, #0x0                   	// #0
   13cac:	mov	w2, #0x3e7                 	// #999
   13cb0:	mov	w0, #0x0                   	// #0
   13cb4:	bl	26410 <acc_set_cuda_stream@@OACC_2.0+0x278>
   13cb8:	mov	x19, x0
   13cbc:	cbnz	x0, 13ad4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa74>
   13cc0:	ldr	x0, [x25]
   13cc4:	mov	x2, x20
   13cc8:	ldr	x19, [x0, #8]
   13ccc:	sub	x19, x19, #0x60
   13cd0:	ldr	x1, [x19]
   13cd4:	mov	x0, x19
   13cd8:	bl	122c8 <GOMP_single_copy_end@@GOMP_1.0+0xb40>
   13cdc:	ands	w27, w0, #0xff
   13ce0:	b.eq	13aec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa8c>  // b.none
   13ce4:	nop
   13ce8:	cbz	x28, 13b6c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb0c>
   13cec:	ldr	x0, [x28, #56]
   13cf0:	cbnz	x0, 1401c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfbc>
   13cf4:	mov	x0, x28
   13cf8:	bl	8900 <free@plt>
   13cfc:	b	13b6c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb0c>
   13d00:	ldr	x0, [sp, #104]
   13d04:	mov	w1, w24
   13d08:	bl	1abd8 <omp_get_num_procs@@OMP_1.0+0x530>
   13d0c:	b	13b14 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xab4>
   13d10:	mov	x0, x21
   13d14:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   13d18:	cbz	w24, 13b14 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xab4>
   13d1c:	b	13d00 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xca0>
   13d20:	cmp	x2, x0
   13d24:	b.eq	13f8c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf2c>  // b.none
   13d28:	str	x0, [x4, #24]
   13d2c:	b	13bd0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb70>
   13d30:	ldr	w0, [sp, #116]
   13d34:	str	w0, [x20, #132]
   13d38:	ldxr	w0, [x21]
   13d3c:	stlxr	w1, wzr, [x21]
   13d40:	cbnz	w1, 13d38 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcd8>
   13d44:	tbnz	w0, #31, 13fe8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf88>
   13d48:	ldr	x0, [sp, #104]
   13d4c:	mov	w1, #0x0                   	// #0
   13d50:	bl	1abd8 <omp_get_num_procs@@OMP_1.0+0x530>
   13d54:	mov	w0, #0x1                   	// #1
   13d58:	ldaxr	w1, [x21]
   13d5c:	cbnz	w1, 13d68 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd08>
   13d60:	stxr	w2, w0, [x21]
   13d64:	cbnz	w2, 13d58 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcf8>
   13d68:	cmp	w1, #0x0
   13d6c:	b.eq	13c94 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc34>  // b.none
   13d70:	mov	x0, x21
   13d74:	mov	x28, x19
   13d78:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   13d7c:	b	13c98 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc38>
   13d80:	ldr	w1, [x4, #52]
   13d84:	add	x0, x4, #0x34
   13d88:	strb	wzr, [x4, #48]
   13d8c:	add	w2, w1, #0x1
   13d90:	and	w2, w2, #0x7fffffff
   13d94:	ldxr	w4, [x0]
   13d98:	cmp	w4, w1
   13d9c:	b.ne	13da8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd48>  // b.any
   13da0:	stlxr	w3, w2, [x0]
   13da4:	cmp	w3, #0x0
   13da8:	mov	w1, w4
   13dac:	b.ne	13d8c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd2c>  // b.any
   13db0:	tbz	w4, #31, 13c50 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbf0>
   13db4:	bl	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
   13db8:	b	13c50 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbf0>
   13dbc:	and	w0, w24, #0xfffffff8
   13dc0:	add	w0, w0, #0x8
   13dc4:	str	w0, [x20, #132]
   13dc8:	ldxr	w0, [x21]
   13dcc:	stlxr	w1, wzr, [x21]
   13dd0:	cbnz	w1, 13dc8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd68>
   13dd4:	tbnz	w0, #31, 14024 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfc4>
   13dd8:	add	x0, x20, #0x80
   13ddc:	mov	w1, #0x0                   	// #0
   13de0:	bl	1abd8 <omp_get_num_procs@@OMP_1.0+0x530>
   13de4:	ldp	x19, x20, [sp, #16]
   13de8:	ldp	x21, x22, [sp, #32]
   13dec:	ldp	x23, x24, [sp, #48]
   13df0:	ldp	x25, x26, [sp, #64]
   13df4:	ldp	x29, x30, [sp], #160
   13df8:	ret
   13dfc:	ldr	x0, [x19, #48]
   13e00:	mov	x28, #0x0                   	// #0
   13e04:	cbnz	x0, 13b8c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb2c>
   13e08:	ldr	x1, [x19, #8]
   13e0c:	cbz	x1, 13bdc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb7c>
   13e10:	add	x0, x19, #0x8
   13e14:	bl	118a8 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   13e18:	str	xzr, [x19, #8]
   13e1c:	b	13bf8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb98>
   13e20:	cmp	x2, x0
   13e24:	b.eq	13fdc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf7c>  // b.none
   13e28:	str	x0, [x7, #8]
   13e2c:	ldr	x0, [x4, #56]
   13e30:	stp	xzr, xzr, [x19, #128]
   13e34:	cmp	x0, #0x1
   13e38:	b.hi	13c3c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbdc>  // b.pmore
   13e3c:	add	x0, x4, #0x38
   13e40:	stlr	xzr, [x0]
   13e44:	b	13c44 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbe4>
   13e48:	ldp	x19, x20, [sp, #16]
   13e4c:	ldp	x21, x22, [sp, #32]
   13e50:	ldp	x23, x24, [sp, #48]
   13e54:	ldp	x25, x26, [sp, #64]
   13e58:	ldp	x27, x28, [sp, #80]
   13e5c:	ldp	x29, x30, [sp], #160
   13e60:	ret
   13e64:	mov	x28, #0x0                   	// #0
   13e68:	ldr	x4, [x19]
   13e6c:	b	13ba0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb40>
   13e70:	bl	21210 <GOMP_target_enter_exit_data@@GOMP_4.5+0x240>
   13e74:	tst	w0, #0xff
   13e78:	b.eq	13b40 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xae0>  // b.none
   13e7c:	mov	w0, #0x1                   	// #1
   13e80:	str	x26, [x24, #80]
   13e84:	ldaxr	w1, [x21]
   13e88:	cbnz	w1, 13e94 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe34>
   13e8c:	stxr	w2, w0, [x21]
   13e90:	cbnz	w2, 13e84 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe24>
   13e94:	cmp	w1, #0x0
   13e98:	b.ne	14044 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfe4>  // b.any
   13e9c:	ldr	x1, [x19, #192]
   13ea0:	mov	w2, #0x4                   	// #4
   13ea4:	ldr	w0, [x20, #1328]
   13ea8:	str	w2, [x19, #200]
   13eac:	sub	w0, w0, #0x1
   13eb0:	str	w0, [x20, #1328]
   13eb4:	ldr	w0, [x1, #44]
   13eb8:	cmp	w0, #0x5
   13ebc:	b.eq	13ff4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf94>  // b.none
   13ec0:	mov	x19, #0x0                   	// #0
   13ec4:	mov	w24, #0x0                   	// #0
   13ec8:	mov	x28, x19
   13ecc:	str	w2, [x1, #44]
   13ed0:	b	13c98 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc38>
   13ed4:	ldr	x1, [x4, #64]
   13ed8:	ldr	x0, [x1, #8]
   13edc:	sub	x0, x0, #0x1
   13ee0:	str	x0, [x1, #8]
   13ee4:	cbnz	x0, 13bac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb4c>
   13ee8:	ldrb	w0, [x1, #1]
   13eec:	cbz	w0, 13bac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb4c>
   13ef0:	ldr	w2, [x1, #16]
   13ef4:	add	x0, x1, #0x10
   13ef8:	strb	wzr, [x1, #1]
   13efc:	add	w1, w2, #0x1
   13f00:	and	w1, w1, #0x7fffffff
   13f04:	ldxr	w7, [x0]
   13f08:	cmp	w7, w2
   13f0c:	b.ne	13f18 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xeb8>  // b.any
   13f10:	stlxr	w3, w1, [x0]
   13f14:	cmp	w3, #0x0
   13f18:	mov	w2, w7
   13f1c:	b.ne	13efc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe9c>  // b.any
   13f20:	tbz	w7, #31, 13bac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb4c>
   13f24:	str	x4, [sp, #128]
   13f28:	bl	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
   13f2c:	ldr	x4, [sp, #128]
   13f30:	b	13bac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb4c>
   13f34:	add	x1, x4, #0x8
   13f38:	mov	w0, #0x1                   	// #1
   13f3c:	stp	x1, x4, [sp, #128]
   13f40:	bl	265d8 <acc_set_cuda_stream@@OACC_2.0+0x440>
   13f44:	ldp	x1, x4, [sp, #128]
   13f48:	ldr	x0, [x4, #8]
   13f4c:	cbnz	x0, 13bd0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb70>
   13f50:	stlr	xzr, [x1]
   13f54:	b	13f94 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf34>
   13f58:	bl	8900 <free@plt>
   13f5c:	b	13b20 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xac0>
   13f60:	add	x1, x4, #0x8
   13f64:	mov	w0, #0x2                   	// #2
   13f68:	str	x4, [sp, #128]
   13f6c:	bl	265d8 <acc_set_cuda_stream@@OACC_2.0+0x440>
   13f70:	ldr	x4, [sp, #128]
   13f74:	ldr	x0, [x4, #8]
   13f78:	cmp	x0, #0x0
   13f7c:	cset	w8, eq  // eq = none
   13f80:	b	13c2c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbcc>
   13f84:	stp	x27, x28, [sp, #80]
   13f88:	b	13a90 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa30>
   13f8c:	add	x0, x4, #0x18
   13f90:	stlr	xzr, [x0]
   13f94:	ldr	x0, [x4, #64]
   13f98:	cbz	x0, 13bd0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb70>
   13f9c:	ldrb	w1, [x0]
   13fa0:	cbz	w1, 13bd0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb70>
   13fa4:	ldr	w1, [x0, #16]
   13fa8:	strb	wzr, [x0], #16
   13fac:	add	w2, w1, #0x1
   13fb0:	and	w2, w2, #0x7fffffff
   13fb4:	ldxr	w4, [x0]
   13fb8:	cmp	w4, w1
   13fbc:	b.ne	13fc8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf68>  // b.any
   13fc0:	stlxr	w3, w2, [x0]
   13fc4:	cmp	w3, #0x0
   13fc8:	mov	w1, w4
   13fcc:	b.ne	13fac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf4c>  // b.any
   13fd0:	tbz	w4, #31, 13bd0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb70>
   13fd4:	bl	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
   13fd8:	b	13bd0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb70>
   13fdc:	mov	w8, #0x1                   	// #1
   13fe0:	str	xzr, [x7, #8]
   13fe4:	b	13c2c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbcc>
   13fe8:	mov	x0, x21
   13fec:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   13ff0:	b	13d48 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xce8>
   13ff4:	mov	x1, x19
   13ff8:	mov	x0, x20
   13ffc:	mov	x19, #0x0                   	// #0
   14000:	mov	w24, #0x0                   	// #0
   14004:	mov	x28, x19
   14008:	bl	12bf8 <GOMP_single_copy_end@@GOMP_1.0+0x1470>
   1400c:	b	13c98 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc38>
   14010:	mov	x0, x21
   14014:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   14018:	b	13a74 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa14>
   1401c:	bl	8900 <free@plt>
   14020:	b	13cf4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc94>
   14024:	mov	x0, x21
   14028:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1402c:	b	13dd8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd78>
   14030:	mov	x0, x21
   14034:	mov	w27, #0x0                   	// #0
   14038:	mov	w24, #0x0                   	// #0
   1403c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   14040:	b	13b6c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb0c>
   14044:	mov	x0, x21
   14048:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   1404c:	b	13e9c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe3c>

0000000000014050 <GOMP_taskwait@@GOMP_2.0>:
   14050:	stp	x29, x30, [sp, #-160]!
   14054:	mov	x29, sp
   14058:	stp	x23, x24, [sp, #48]
   1405c:	adrp	x23, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   14060:	ldr	x23, [x23, #4016]
   14064:	stp	x21, x22, [sp, #32]
   14068:	mrs	x22, tpidr_el0
   1406c:	add	x0, x22, x23
   14070:	stp	x25, x26, [sp, #64]
   14074:	ldr	x26, [x0, #80]
   14078:	cbz	x26, 140a0 <GOMP_taskwait@@GOMP_2.0+0x50>
   1407c:	ldr	x1, [x26, #8]
   14080:	add	x24, x26, #0x8
   14084:	ldr	x21, [x0, #16]
   14088:	cbnz	x1, 14530 <GOMP_taskwait@@GOMP_2.0+0x4e0>
   1408c:	add	x0, x26, #0x18
   14090:	ldar	x0, [x0]
   14094:	cmp	x0, #0x0
   14098:	cset	w0, eq  // eq = none
   1409c:	cbz	w0, 140b4 <GOMP_taskwait@@GOMP_2.0+0x64>
   140a0:	ldp	x21, x22, [sp, #32]
   140a4:	ldp	x23, x24, [sp, #48]
   140a8:	ldp	x25, x26, [sp, #64]
   140ac:	ldp	x29, x30, [sp], #160
   140b0:	ret
   140b4:	stp	x19, x20, [sp, #16]
   140b8:	add	x20, x21, #0x500
   140bc:	mov	w0, #0x1                   	// #1
   140c0:	stp	x27, x28, [sp, #80]
   140c4:	strb	wzr, [sp, #135]
   140c8:	stp	xzr, xzr, [sp, #136]
   140cc:	str	xzr, [sp, #152]
   140d0:	ldaxr	w1, [x20]
   140d4:	cbnz	w1, 140e0 <GOMP_taskwait@@GOMP_2.0+0x90>
   140d8:	stxr	w2, w0, [x20]
   140dc:	cbnz	w2, 140d0 <GOMP_taskwait@@GOMP_2.0+0x80>
   140e0:	cmp	w1, #0x0
   140e4:	b.ne	145c4 <GOMP_taskwait@@GOMP_2.0+0x574>  // b.any
   140e8:	add	x25, sp, #0x88
   140ec:	mov	w27, #0x0                   	// #0
   140f0:	add	x0, x25, #0x10
   140f4:	str	x0, [sp, #112]
   140f8:	add	x0, sp, #0x87
   140fc:	str	x0, [sp, #104]
   14100:	add	x0, sp, #0x98
   14104:	str	x0, [sp, #96]
   14108:	ldr	x0, [x26, #8]
   1410c:	mov	x28, #0x0                   	// #0
   14110:	cbnz	x0, 142a8 <GOMP_taskwait@@GOMP_2.0+0x258>
   14114:	nop
   14118:	ldr	x19, [x24, #16]
   1411c:	cbz	x19, 143fc <GOMP_taskwait@@GOMP_2.0+0x3ac>
   14120:	sub	x19, x19, #0x70
   14124:	mov	w0, #0x1                   	// #1
   14128:	strb	w0, [sp, #135]
   1412c:	ldr	w0, [x19, #200]
   14130:	cmp	w0, #0x2
   14134:	b.eq	14344 <GOMP_taskwait@@GOMP_2.0+0x2f4>  // b.none
   14138:	ldr	x0, [x26, #64]
   1413c:	cbz	x0, 14334 <GOMP_taskwait@@GOMP_2.0+0x2e4>
   14140:	mov	w0, #0x1                   	// #1
   14144:	mov	x19, #0x0                   	// #0
   14148:	strb	w0, [sp, #136]
   1414c:	ldxr	w0, [x20]
   14150:	stlxr	w1, wzr, [x20]
   14154:	cbnz	w1, 1414c <GOMP_taskwait@@GOMP_2.0+0xfc>
   14158:	tbnz	w0, #31, 14440 <GOMP_taskwait@@GOMP_2.0+0x3f0>
   1415c:	cbnz	w27, 142d8 <GOMP_taskwait@@GOMP_2.0+0x288>
   14160:	cbz	x28, 14174 <GOMP_taskwait@@GOMP_2.0+0x124>
   14164:	ldr	x0, [x28, #56]
   14168:	cbnz	x0, 14504 <GOMP_taskwait@@GOMP_2.0+0x4b4>
   1416c:	mov	x0, x28
   14170:	bl	8900 <free@plt>
   14174:	cbz	x19, 14374 <GOMP_taskwait@@GOMP_2.0+0x324>
   14178:	ldp	x1, x0, [x19, #184]
   1417c:	add	x27, x22, x23
   14180:	str	x19, [x27, #80]
   14184:	cbz	x1, 14470 <GOMP_taskwait@@GOMP_2.0+0x420>
   14188:	blr	x1
   1418c:	add	x0, x22, x23
   14190:	mov	w2, #0x1                   	// #1
   14194:	str	x26, [x0, #80]
   14198:	ldaxr	w1, [x20]
   1419c:	cbnz	w1, 141a8 <GOMP_taskwait@@GOMP_2.0+0x158>
   141a0:	stxr	w0, w2, [x20]
   141a4:	cbnz	w0, 14198 <GOMP_taskwait@@GOMP_2.0+0x148>
   141a8:	cmp	w1, #0x0
   141ac:	mov	w27, #0x0                   	// #0
   141b0:	b.ne	145b8 <GOMP_taskwait@@GOMP_2.0+0x568>  // b.any
   141b4:	ldr	x0, [x19, #72]
   141b8:	cbz	x0, 142e8 <GOMP_taskwait@@GOMP_2.0+0x298>
   141bc:	ldr	x0, [x19]
   141c0:	cbz	x0, 141cc <GOMP_taskwait@@GOMP_2.0+0x17c>
   141c4:	mov	x0, x19
   141c8:	bl	120a8 <GOMP_single_copy_end@@GOMP_1.0+0x920>
   141cc:	ldr	x0, [x19, #48]
   141d0:	cbz	x0, 142e8 <GOMP_taskwait@@GOMP_2.0+0x298>
   141d4:	mov	x1, x21
   141d8:	mov	x0, x19
   141dc:	bl	12660 <GOMP_single_copy_end@@GOMP_1.0+0xed8>
   141e0:	mov	x28, x0
   141e4:	ldrb	w0, [sp, #135]
   141e8:	cbnz	w0, 142f4 <GOMP_taskwait@@GOMP_2.0+0x2a4>
   141ec:	ldr	x1, [x19, #8]
   141f0:	cbnz	x1, 14324 <GOMP_taskwait@@GOMP_2.0+0x2d4>
   141f4:	ldr	x2, [x19, #24]
   141f8:	mov	x1, x2
   141fc:	cbz	x2, 14210 <GOMP_taskwait@@GOMP_2.0+0x1c0>
   14200:	stur	xzr, [x1, #-112]
   14204:	ldr	x1, [x1]
   14208:	cmp	x2, x1
   1420c:	b.ne	14200 <GOMP_taskwait@@GOMP_2.0+0x1b0>  // b.any
   14210:	ldr	x3, [x19, #40]
   14214:	cbz	x3, 14268 <GOMP_taskwait@@GOMP_2.0+0x218>
   14218:	ldr	x0, [x3, #8]
   1421c:	add	x2, x19, #0x80
   14220:	cbnz	x0, 1450c <GOMP_taskwait@@GOMP_2.0+0x4bc>
   14224:	ldp	x0, x1, [x19, #128]
   14228:	add	x5, x3, #0x10
   1422c:	ldr	x9, [x5, #8]
   14230:	mov	w8, #0x0                   	// #0
   14234:	cmp	x2, x9
   14238:	str	x0, [x1]
   1423c:	str	x1, [x0, #8]
   14240:	b.eq	143d4 <GOMP_taskwait@@GOMP_2.0+0x384>  // b.none
   14244:	ldr	x0, [x3, #56]
   14248:	stp	xzr, xzr, [x19, #128]
   1424c:	cmp	x0, #0x1
   14250:	b.ls	143f0 <GOMP_taskwait@@GOMP_2.0+0x3a0>  // b.plast
   14254:	sub	x0, x0, #0x1
   14258:	str	x0, [x3, #56]
   1425c:	cbz	w8, 14268 <GOMP_taskwait@@GOMP_2.0+0x218>
   14260:	ldrb	w0, [x3, #48]
   14264:	cbnz	w0, 144c8 <GOMP_taskwait@@GOMP_2.0+0x478>
   14268:	ldr	w0, [x21, #1320]
   1426c:	cmp	x28, #0x1
   14270:	sub	w0, w0, #0x1
   14274:	str	w0, [x21, #1320]
   14278:	b.ls	1429c <GOMP_taskwait@@GOMP_2.0+0x24c>  // b.plast
   1427c:	ldrb	w0, [x26, #204]
   14280:	ldr	w7, [x21]
   14284:	ldr	w1, [x21, #1328]
   14288:	eor	w0, w0, #0x1
   1428c:	sub	w7, w7, w1
   14290:	sub	w27, w7, w0
   14294:	cmp	x28, w27, sxtw
   14298:	csel	w27, w28, w27, cc  // cc = lo, ul, last
   1429c:	mov	x28, x19
   142a0:	ldr	x0, [x26, #8]
   142a4:	cbz	x0, 14118 <GOMP_taskwait@@GOMP_2.0+0xc8>
   142a8:	ldr	x4, [sp, #104]
   142ac:	add	x3, x21, #0x508
   142b0:	mov	x1, x24
   142b4:	mov	w2, #0x0                   	// #0
   142b8:	mov	w0, #0x1                   	// #1
   142bc:	bl	26410 <acc_set_cuda_stream@@OACC_2.0+0x278>
   142c0:	mov	x19, x0
   142c4:	cbnz	x0, 1412c <GOMP_taskwait@@GOMP_2.0+0xdc>
   142c8:	ldr	x0, [x24]
   142cc:	ldr	x19, [x0, #8]
   142d0:	sub	x19, x19, #0x70
   142d4:	b	1412c <GOMP_taskwait@@GOMP_2.0+0xdc>
   142d8:	mov	w1, w27
   142dc:	add	x0, x21, #0x80
   142e0:	bl	1abd8 <omp_get_num_procs@@OMP_1.0+0x530>
   142e4:	b	14160 <GOMP_taskwait@@GOMP_2.0+0x110>
   142e8:	ldrb	w0, [sp, #135]
   142ec:	mov	x28, #0x0                   	// #0
   142f0:	cbz	w0, 141ec <GOMP_taskwait@@GOMP_2.0+0x19c>
   142f4:	ldr	x0, [x26, #8]
   142f8:	add	x2, x19, #0x70
   142fc:	cbnz	x0, 14560 <GOMP_taskwait@@GOMP_2.0+0x510>
   14300:	ldp	x0, x1, [x19, #112]
   14304:	ldr	x5, [x26, #24]
   14308:	cmp	x2, x5
   1430c:	str	x0, [x1]
   14310:	str	x1, [x0, #8]
   14314:	b.eq	14450 <GOMP_taskwait@@GOMP_2.0+0x400>  // b.none
   14318:	stp	xzr, xzr, [x19, #112]
   1431c:	ldr	x1, [x19, #8]
   14320:	cbz	x1, 141f4 <GOMP_taskwait@@GOMP_2.0+0x1a4>
   14324:	add	x0, x19, #0x8
   14328:	bl	118a8 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   1432c:	str	xzr, [x19, #8]
   14330:	b	14210 <GOMP_taskwait@@GOMP_2.0+0x1c0>
   14334:	str	x25, [x26, #64]
   14338:	strb	wzr, [sp, #137]
   1433c:	str	wzr, [sp, #152]
   14340:	b	14140 <GOMP_taskwait@@GOMP_2.0+0xf0>
   14344:	mov	x2, x21
   14348:	mov	x1, x26
   1434c:	mov	x0, x19
   14350:	bl	122c8 <GOMP_single_copy_end@@GOMP_1.0+0xb40>
   14354:	tst	w0, #0xff
   14358:	b.eq	1414c <GOMP_taskwait@@GOMP_2.0+0xfc>  // b.none
   1435c:	cbz	x28, 141b4 <GOMP_taskwait@@GOMP_2.0+0x164>
   14360:	ldr	x0, [x28, #56]
   14364:	cbnz	x0, 145a4 <GOMP_taskwait@@GOMP_2.0+0x554>
   14368:	mov	x0, x28
   1436c:	bl	8900 <free@plt>
   14370:	b	141b4 <GOMP_taskwait@@GOMP_2.0+0x164>
   14374:	ldr	w1, [sp, #152]
   14378:	tst	x1, #0x7fffffff
   1437c:	b.eq	14574 <GOMP_taskwait@@GOMP_2.0+0x524>  // b.none
   14380:	sub	w2, w1, #0x1
   14384:	ldr	x3, [sp, #96]
   14388:	ldaxr	w0, [x3]
   1438c:	cmp	w0, w1
   14390:	b.ne	1439c <GOMP_taskwait@@GOMP_2.0+0x34c>  // b.any
   14394:	stxr	w4, w2, [x3]
   14398:	cmp	w4, #0x0
   1439c:	mov	w1, w0
   143a0:	b.ne	14378 <GOMP_taskwait@@GOMP_2.0+0x328>  // b.any
   143a4:	mov	w0, #0x1                   	// #1
   143a8:	ldaxr	w1, [x20]
   143ac:	cbnz	w1, 143b8 <GOMP_taskwait@@GOMP_2.0+0x368>
   143b0:	stxr	w2, w0, [x20]
   143b4:	cbnz	w2, 143a8 <GOMP_taskwait@@GOMP_2.0+0x358>
   143b8:	cmp	w1, #0x0
   143bc:	mov	w27, #0x0                   	// #0
   143c0:	b.eq	1429c <GOMP_taskwait@@GOMP_2.0+0x24c>  // b.none
   143c4:	mov	x0, x20
   143c8:	mov	x28, x19
   143cc:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   143d0:	b	142a0 <GOMP_taskwait@@GOMP_2.0+0x250>
   143d4:	cmp	x2, x0
   143d8:	b.eq	14554 <GOMP_taskwait@@GOMP_2.0+0x504>  // b.none
   143dc:	str	x0, [x5, #8]
   143e0:	ldr	x0, [x3, #56]
   143e4:	stp	xzr, xzr, [x19, #128]
   143e8:	cmp	x0, #0x1
   143ec:	b.hi	14254 <GOMP_taskwait@@GOMP_2.0+0x204>  // b.pmore
   143f0:	add	x0, x3, #0x38
   143f4:	stlr	xzr, [x0]
   143f8:	b	1425c <GOMP_taskwait@@GOMP_2.0+0x20c>
   143fc:	str	xzr, [x26, #64]
   14400:	ldxr	w0, [x20]
   14404:	stlxr	w1, wzr, [x20]
   14408:	cbnz	w1, 14400 <GOMP_taskwait@@GOMP_2.0+0x3b0>
   1440c:	tbnz	w0, #31, 14544 <GOMP_taskwait@@GOMP_2.0+0x4f4>
   14410:	cbz	x28, 14464 <GOMP_taskwait@@GOMP_2.0+0x414>
   14414:	ldr	x0, [x28, #56]
   14418:	cbnz	x0, 14580 <GOMP_taskwait@@GOMP_2.0+0x530>
   1441c:	mov	x0, x28
   14420:	bl	8900 <free@plt>
   14424:	ldp	x19, x20, [sp, #16]
   14428:	ldp	x21, x22, [sp, #32]
   1442c:	ldp	x23, x24, [sp, #48]
   14430:	ldp	x25, x26, [sp, #64]
   14434:	ldp	x27, x28, [sp, #80]
   14438:	ldp	x29, x30, [sp], #160
   1443c:	ret
   14440:	mov	x0, x20
   14444:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   14448:	cbz	w27, 14160 <GOMP_taskwait@@GOMP_2.0+0x110>
   1444c:	b	142d8 <GOMP_taskwait@@GOMP_2.0+0x288>
   14450:	cmp	x2, x0
   14454:	csel	x0, x0, xzr, ne  // ne = any
   14458:	str	x0, [x26, #24]
   1445c:	stp	xzr, xzr, [x19, #112]
   14460:	b	1431c <GOMP_taskwait@@GOMP_2.0+0x2cc>
   14464:	ldp	x19, x20, [sp, #16]
   14468:	ldp	x27, x28, [sp, #80]
   1446c:	b	140a0 <GOMP_taskwait@@GOMP_2.0+0x50>
   14470:	bl	21210 <GOMP_target_enter_exit_data@@GOMP_4.5+0x240>
   14474:	tst	w0, #0xff
   14478:	b.eq	1418c <GOMP_taskwait@@GOMP_2.0+0x13c>  // b.none
   1447c:	mov	w0, #0x1                   	// #1
   14480:	str	x26, [x27, #80]
   14484:	ldaxr	w1, [x20]
   14488:	cbnz	w1, 14494 <GOMP_taskwait@@GOMP_2.0+0x444>
   1448c:	stxr	w2, w0, [x20]
   14490:	cbnz	w2, 14484 <GOMP_taskwait@@GOMP_2.0+0x434>
   14494:	cmp	w1, #0x0
   14498:	b.ne	145ac <GOMP_taskwait@@GOMP_2.0+0x55c>  // b.any
   1449c:	ldr	x0, [x19, #192]
   144a0:	mov	w1, #0x4                   	// #4
   144a4:	ldr	w2, [x0, #44]
   144a8:	str	w1, [x19, #200]
   144ac:	cmp	w2, #0x5
   144b0:	b.eq	14588 <GOMP_taskwait@@GOMP_2.0+0x538>  // b.none
   144b4:	mov	x19, #0x0                   	// #0
   144b8:	mov	w27, #0x0                   	// #0
   144bc:	mov	x28, x19
   144c0:	str	w1, [x0, #44]
   144c4:	b	142a0 <GOMP_taskwait@@GOMP_2.0+0x250>
   144c8:	ldr	w1, [x3, #52]
   144cc:	add	x0, x3, #0x34
   144d0:	strb	wzr, [x3, #48]
   144d4:	add	w2, w1, #0x1
   144d8:	and	w2, w2, #0x7fffffff
   144dc:	ldxr	w3, [x0]
   144e0:	cmp	w3, w1
   144e4:	b.ne	144f0 <GOMP_taskwait@@GOMP_2.0+0x4a0>  // b.any
   144e8:	stlxr	w4, w2, [x0]
   144ec:	cmp	w4, #0x0
   144f0:	mov	w1, w3
   144f4:	b.ne	144d4 <GOMP_taskwait@@GOMP_2.0+0x484>  // b.any
   144f8:	tbz	w3, #31, 14268 <GOMP_taskwait@@GOMP_2.0+0x218>
   144fc:	bl	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
   14500:	b	14268 <GOMP_taskwait@@GOMP_2.0+0x218>
   14504:	bl	8900 <free@plt>
   14508:	b	1416c <GOMP_taskwait@@GOMP_2.0+0x11c>
   1450c:	add	x1, x3, #0x8
   14510:	mov	w0, #0x2                   	// #2
   14514:	str	x3, [sp, #120]
   14518:	bl	265d8 <acc_set_cuda_stream@@OACC_2.0+0x440>
   1451c:	ldr	x3, [sp, #120]
   14520:	ldr	x0, [x3, #8]
   14524:	cmp	x0, #0x0
   14528:	cset	w8, eq  // eq = none
   1452c:	b	14244 <GOMP_taskwait@@GOMP_2.0+0x1f4>
   14530:	ldar	x0, [x24]
   14534:	cmp	x0, #0x0
   14538:	cset	w0, eq  // eq = none
   1453c:	cbnz	w0, 140a0 <GOMP_taskwait@@GOMP_2.0+0x50>
   14540:	b	140b4 <GOMP_taskwait@@GOMP_2.0+0x64>
   14544:	mov	x0, x20
   14548:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1454c:	cbnz	x28, 14414 <GOMP_taskwait@@GOMP_2.0+0x3c4>
   14550:	b	14464 <GOMP_taskwait@@GOMP_2.0+0x414>
   14554:	mov	w8, #0x1                   	// #1
   14558:	str	xzr, [x5, #8]
   1455c:	b	14244 <GOMP_taskwait@@GOMP_2.0+0x1f4>
   14560:	mov	x1, x24
   14564:	mov	w0, #0x1                   	// #1
   14568:	bl	265d8 <acc_set_cuda_stream@@OACC_2.0+0x440>
   1456c:	stp	xzr, xzr, [x19, #112]
   14570:	b	1431c <GOMP_taskwait@@GOMP_2.0+0x2cc>
   14574:	ldr	x0, [sp, #112]
   14578:	bl	1a6b0 <omp_get_num_procs@@OMP_1.0+0x8>
   1457c:	b	143a4 <GOMP_taskwait@@GOMP_2.0+0x354>
   14580:	bl	8900 <free@plt>
   14584:	b	1441c <GOMP_taskwait@@GOMP_2.0+0x3cc>
   14588:	mov	x1, x19
   1458c:	mov	x0, x21
   14590:	mov	x19, #0x0                   	// #0
   14594:	mov	w27, #0x0                   	// #0
   14598:	mov	x28, x19
   1459c:	bl	12bf8 <GOMP_single_copy_end@@GOMP_1.0+0x1470>
   145a0:	b	142a0 <GOMP_taskwait@@GOMP_2.0+0x250>
   145a4:	bl	8900 <free@plt>
   145a8:	b	14368 <GOMP_taskwait@@GOMP_2.0+0x318>
   145ac:	mov	x0, x20
   145b0:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   145b4:	b	1449c <GOMP_taskwait@@GOMP_2.0+0x44c>
   145b8:	mov	x0, x20
   145bc:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   145c0:	b	141b4 <GOMP_taskwait@@GOMP_2.0+0x164>
   145c4:	mov	x0, x20
   145c8:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   145cc:	b	140e8 <GOMP_taskwait@@GOMP_2.0+0x98>
   145d0:	stp	x29, x30, [sp, #-256]!
   145d4:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   145d8:	ldr	x1, [x1, #4016]
   145dc:	mov	x29, sp
   145e0:	stp	x23, x24, [sp, #48]
   145e4:	mov	x24, x0
   145e8:	mrs	x0, tpidr_el0
   145ec:	stp	x19, x20, [sp, #16]
   145f0:	stp	x21, x22, [sp, #32]
   145f4:	ldp	x19, x22, [x24]
   145f8:	stp	x1, x0, [sp, #112]
   145fc:	add	x0, x0, x1
   14600:	stp	x25, x26, [sp, #64]
   14604:	stp	x27, x28, [sp, #80]
   14608:	ldr	x25, [x0, #16]
   1460c:	ldr	x28, [x0, #80]
   14610:	cbz	x19, 14c1c <GOMP_taskwait@@GOMP_2.0+0xbcc>
   14614:	add	x0, x25, #0x500
   14618:	mov	x2, x0
   1461c:	mov	w0, #0x1                   	// #1
   14620:	str	x2, [sp, #104]
   14624:	ldaxr	w1, [x2]
   14628:	cbnz	w1, 14634 <GOMP_taskwait@@GOMP_2.0+0x5e4>
   1462c:	stxr	w3, w0, [x2]
   14630:	cbnz	w3, 14624 <GOMP_taskwait@@GOMP_2.0+0x5d4>
   14634:	cmp	w1, #0x0
   14638:	b.ne	14d2c <GOMP_taskwait@@GOMP_2.0+0xcdc>  // b.any
   1463c:	mov	x23, x19
   14640:	mov	x21, #0x2                   	// #2
   14644:	add	x21, x24, x21, lsl #3
   14648:	add	x24, sp, #0xd8
   1464c:	add	x0, sp, #0xc0
   14650:	mov	x26, #0x0                   	// #0
   14654:	mov	x20, #0x0                   	// #0
   14658:	mov	w27, #0x1                   	// #1
   1465c:	str	x0, [sp, #128]
   14660:	cmp	x20, x22
   14664:	ldr	x0, [x21, x20, lsl #3]
   14668:	cset	w1, cs  // cs = hs, nlast
   1466c:	str	x0, [sp, #216]
   14670:	cmp	x20, x19
   14674:	strb	w1, [sp, #248]
   14678:	b.cs	14978 <GOMP_taskwait@@GOMP_2.0+0x928>  // b.hs, b.nlast
   1467c:	ldr	x0, [x28, #56]
   14680:	mov	x1, x24
   14684:	bl	117c8 <GOMP_single_copy_end@@GOMP_1.0+0x40>
   14688:	mov	x2, x0
   1468c:	cbz	x0, 146d8 <GOMP_taskwait@@GOMP_2.0+0x688>
   14690:	ldrb	w4, [sp, #248]
   14694:	add	x10, x28, #0x8
   14698:	cbz	w4, 146a4 <GOMP_taskwait@@GOMP_2.0+0x654>
   1469c:	ldrb	w0, [x2, #32]
   146a0:	cbnz	w0, 146d0 <GOMP_taskwait@@GOMP_2.0+0x680>
   146a4:	ldr	x3, [x2, #24]
   146a8:	ldrb	w0, [x3, #207]
   146ac:	cbnz	w0, 146d0 <GOMP_taskwait@@GOMP_2.0+0x680>
   146b0:	ldr	x0, [x3, #80]
   146b4:	strb	w27, [x3, #207]
   146b8:	add	x26, x26, #0x1
   146bc:	cbnz	x0, 146d0 <GOMP_taskwait@@GOMP_2.0+0x680>
   146c0:	ldr	w0, [x3, #200]
   146c4:	cmp	w0, #0x2
   146c8:	b.eq	14938 <GOMP_taskwait@@GOMP_2.0+0x8e8>  // b.none
   146cc:	nop
   146d0:	ldr	x2, [x2, #8]
   146d4:	cbnz	x2, 14698 <GOMP_taskwait@@GOMP_2.0+0x648>
   146d8:	add	x20, x20, #0x1
   146dc:	cmp	x20, x23
   146e0:	b.cc	14660 <GOMP_taskwait@@GOMP_2.0+0x610>  // b.lo, b.ul, b.last
   146e4:	cbz	x26, 14b38 <GOMP_taskwait@@GOMP_2.0+0xae8>
   146e8:	stp	xzr, xzr, [sp, #192]
   146ec:	add	x22, x28, #0x8
   146f0:	add	x27, sp, #0xc0
   146f4:	stp	x26, xzr, [sp, #200]
   146f8:	add	x26, sp, #0xbf
   146fc:	add	x0, sp, #0xd0
   14700:	mov	w24, #0x0                   	// #0
   14704:	mov	x23, #0x0                   	// #0
   14708:	mov	w21, #0x1                   	// #1
   1470c:	str	x27, [x28, #64]
   14710:	str	x0, [sp, #128]
   14714:	nop
   14718:	ldr	x0, [x28, #8]
   1471c:	cbnz	x0, 14b58 <GOMP_taskwait@@GOMP_2.0+0xb08>
   14720:	ldr	x19, [x22, #16]
   14724:	strb	w21, [sp, #191]
   14728:	sub	x19, x19, #0x70
   1472c:	ldr	w0, [x19, #200]
   14730:	cmp	w0, #0x2
   14734:	b.eq	149e0 <GOMP_taskwait@@GOMP_2.0+0x990>  // b.none
   14738:	mov	x19, #0x0                   	// #0
   1473c:	strb	w21, [sp, #193]
   14740:	ldr	x1, [sp, #104]
   14744:	ldxr	w0, [x1]
   14748:	stlxr	w2, wzr, [x1]
   1474c:	cbnz	w2, 14744 <GOMP_taskwait@@GOMP_2.0+0x6f4>
   14750:	tbnz	w0, #31, 14b28 <GOMP_taskwait@@GOMP_2.0+0xad8>
   14754:	cbnz	w24, 14928 <GOMP_taskwait@@GOMP_2.0+0x8d8>
   14758:	cbz	x23, 1476c <GOMP_taskwait@@GOMP_2.0+0x71c>
   1475c:	ldr	x0, [x23, #56]
   14760:	cbnz	x0, 14c74 <GOMP_taskwait@@GOMP_2.0+0xc24>
   14764:	mov	x0, x23
   14768:	bl	8900 <free@plt>
   1476c:	cbz	x19, 14a38 <GOMP_taskwait@@GOMP_2.0+0x9e8>
   14770:	ldp	x1, x0, [sp, #112]
   14774:	add	x20, x0, x1
   14778:	ldp	x1, x0, [x19, #184]
   1477c:	str	x19, [x20, #80]
   14780:	cbz	x1, 14b88 <GOMP_taskwait@@GOMP_2.0+0xb38>
   14784:	blr	x1
   14788:	ldp	x1, x0, [sp, #112]
   1478c:	mov	w2, #0x1                   	// #1
   14790:	add	x0, x0, x1
   14794:	str	x28, [x0, #80]
   14798:	ldr	x0, [sp, #104]
   1479c:	ldaxr	w1, [x0]
   147a0:	cbnz	w1, 147ac <GOMP_taskwait@@GOMP_2.0+0x75c>
   147a4:	stxr	w3, w2, [x0]
   147a8:	cbnz	w3, 1479c <GOMP_taskwait@@GOMP_2.0+0x74c>
   147ac:	cmp	w1, #0x0
   147b0:	mov	w24, #0x0                   	// #0
   147b4:	b.ne	14d40 <GOMP_taskwait@@GOMP_2.0+0xcf0>  // b.any
   147b8:	ldr	x0, [x19, #72]
   147bc:	cbz	x0, 149d8 <GOMP_taskwait@@GOMP_2.0+0x988>
   147c0:	ldr	x0, [x19]
   147c4:	cbz	x0, 147d0 <GOMP_taskwait@@GOMP_2.0+0x780>
   147c8:	mov	x0, x19
   147cc:	bl	120a8 <GOMP_single_copy_end@@GOMP_1.0+0x920>
   147d0:	ldr	x0, [x19, #48]
   147d4:	cbz	x0, 149d8 <GOMP_taskwait@@GOMP_2.0+0x988>
   147d8:	mov	x1, x25
   147dc:	mov	x0, x19
   147e0:	bl	12660 <GOMP_single_copy_end@@GOMP_1.0+0xed8>
   147e4:	mov	x20, x0
   147e8:	ldrb	w0, [x19, #207]
   147ec:	cbz	w0, 147fc <GOMP_taskwait@@GOMP_2.0+0x7ac>
   147f0:	ldr	x0, [sp, #200]
   147f4:	sub	x0, x0, #0x1
   147f8:	str	x0, [sp, #200]
   147fc:	ldr	x0, [x28, #8]
   14800:	add	x2, x19, #0x70
   14804:	cbnz	x0, 14c64 <GOMP_taskwait@@GOMP_2.0+0xc14>
   14808:	ldp	x0, x1, [x19, #112]
   1480c:	ldr	x7, [x28, #24]
   14810:	cmp	x2, x7
   14814:	str	x0, [x1]
   14818:	str	x1, [x0, #8]
   1481c:	b.eq	14a10 <GOMP_taskwait@@GOMP_2.0+0x9c0>  // b.none
   14820:	ldr	x1, [x19, #8]
   14824:	stp	xzr, xzr, [x19, #112]
   14828:	cbnz	x1, 14a28 <GOMP_taskwait@@GOMP_2.0+0x9d8>
   1482c:	ldr	x2, [x19, #24]
   14830:	mov	x1, x2
   14834:	cbz	x2, 14848 <GOMP_taskwait@@GOMP_2.0+0x7f8>
   14838:	stur	xzr, [x1, #-112]
   1483c:	ldr	x1, [x1]
   14840:	cmp	x2, x1
   14844:	b.ne	14838 <GOMP_taskwait@@GOMP_2.0+0x7e8>  // b.any
   14848:	ldr	x23, [x19, #40]
   1484c:	cbz	x23, 148a0 <GOMP_taskwait@@GOMP_2.0+0x850>
   14850:	ldr	x0, [x23, #8]
   14854:	add	x2, x19, #0x80
   14858:	cbnz	x0, 14cc0 <GOMP_taskwait@@GOMP_2.0+0xc70>
   1485c:	ldp	x0, x1, [x19, #128]
   14860:	add	x8, x23, #0x10
   14864:	ldr	x9, [x8, #8]
   14868:	mov	w7, #0x0                   	// #0
   1486c:	cmp	x2, x9
   14870:	str	x0, [x1]
   14874:	str	x1, [x0, #8]
   14878:	b.eq	14b00 <GOMP_taskwait@@GOMP_2.0+0xab0>  // b.none
   1487c:	ldr	x0, [x23, #56]
   14880:	stp	xzr, xzr, [x19, #128]
   14884:	cmp	x0, #0x1
   14888:	b.ls	14b1c <GOMP_taskwait@@GOMP_2.0+0xacc>  // b.plast
   1488c:	sub	x0, x0, #0x1
   14890:	str	x0, [x23, #56]
   14894:	cbz	w7, 148a0 <GOMP_taskwait@@GOMP_2.0+0x850>
   14898:	ldrb	w0, [x23, #48]
   1489c:	cbnz	w0, 14be0 <GOMP_taskwait@@GOMP_2.0+0xb90>
   148a0:	ldr	w0, [x25, #1320]
   148a4:	cmp	x20, #0x1
   148a8:	sub	w0, w0, #0x1
   148ac:	str	w0, [x25, #1320]
   148b0:	b.ls	148d4 <GOMP_taskwait@@GOMP_2.0+0x884>  // b.plast
   148b4:	ldrb	w0, [x28, #204]
   148b8:	ldr	w6, [x25]
   148bc:	ldr	w1, [x25, #1328]
   148c0:	eor	w0, w0, #0x1
   148c4:	sub	w6, w6, w1
   148c8:	sub	w24, w6, w0
   148cc:	cmp	x20, w24, sxtw
   148d0:	csel	w24, w20, w24, cc  // cc = lo, ul, last
   148d4:	mov	x23, x19
   148d8:	ldr	x0, [sp, #200]
   148dc:	cbnz	x0, 14718 <GOMP_taskwait@@GOMP_2.0+0x6c8>
   148e0:	ldr	x1, [sp, #104]
   148e4:	str	xzr, [x28, #64]
   148e8:	ldxr	w0, [x1]
   148ec:	stlxr	w2, wzr, [x1]
   148f0:	cbnz	w2, 148e8 <GOMP_taskwait@@GOMP_2.0+0x898>
   148f4:	tbnz	w0, #31, 14cdc <GOMP_taskwait@@GOMP_2.0+0xc8c>
   148f8:	cbz	x23, 1490c <GOMP_taskwait@@GOMP_2.0+0x8bc>
   148fc:	ldr	x0, [x23, #56]
   14900:	cbnz	x0, 14ce8 <GOMP_taskwait@@GOMP_2.0+0xc98>
   14904:	mov	x0, x23
   14908:	bl	8900 <free@plt>
   1490c:	ldp	x19, x20, [sp, #16]
   14910:	ldp	x21, x22, [sp, #32]
   14914:	ldp	x23, x24, [sp, #48]
   14918:	ldp	x25, x26, [sp, #64]
   1491c:	ldp	x27, x28, [sp, #80]
   14920:	ldp	x29, x30, [sp], #256
   14924:	ret
   14928:	mov	w1, w24
   1492c:	add	x0, x25, #0x80
   14930:	bl	1abd8 <omp_get_num_procs@@OMP_1.0+0x530>
   14934:	b	14758 <GOMP_taskwait@@GOMP_2.0+0x708>
   14938:	ldr	x0, [x28, #8]
   1493c:	add	x9, x3, #0x70
   14940:	cbnz	x0, 14a98 <GOMP_taskwait@@GOMP_2.0+0xa48>
   14944:	ldr	x0, [x28, #32]
   14948:	cbz	x0, 149a0 <GOMP_taskwait@@GOMP_2.0+0x950>
   1494c:	ldp	x11, x1, [x3, #112]
   14950:	str	x11, [x1]
   14954:	ldr	x12, [x3, #112]
   14958:	ldr	x11, [x0]
   1495c:	str	x1, [x12, #8]
   14960:	stp	x11, x0, [x3, #112]
   14964:	str	x9, [x0]
   14968:	ldr	x0, [x3, #112]
   1496c:	str	x9, [x0, #8]
   14970:	str	x9, [x28, #32]
   14974:	b	146d0 <GOMP_taskwait@@GOMP_2.0+0x680>
   14978:	ldr	x1, [x0, #8]
   1497c:	cmp	x1, #0x1
   14980:	b.eq	14994 <GOMP_taskwait@@GOMP_2.0+0x944>  // b.none
   14984:	sub	x2, x1, #0x2
   14988:	cmp	x2, #0x2
   1498c:	b.hi	14d20 <GOMP_taskwait@@GOMP_2.0+0xcd0>  // b.pmore
   14990:	strb	wzr, [sp, #248]
   14994:	ldr	x0, [x0]
   14998:	str	x0, [sp, #216]
   1499c:	b	1467c <GOMP_taskwait@@GOMP_2.0+0x62c>
   149a0:	ldr	x0, [x28, #24]
   149a4:	cmp	x9, x0
   149a8:	b.eq	14970 <GOMP_taskwait@@GOMP_2.0+0x920>  // b.none
   149ac:	ldp	x1, x11, [x3, #112]
   149b0:	str	x1, [x11]
   149b4:	str	x11, [x1, #8]
   149b8:	ldr	x1, [x0, #8]
   149bc:	stp	x0, x1, [x3, #112]
   149c0:	str	x9, [x28, #24]
   149c4:	str	x9, [x1]
   149c8:	ldr	x0, [x3, #112]
   149cc:	str	x9, [x0, #8]
   149d0:	str	x9, [x28, #32]
   149d4:	b	146d0 <GOMP_taskwait@@GOMP_2.0+0x680>
   149d8:	mov	x20, #0x0                   	// #0
   149dc:	b	147e8 <GOMP_taskwait@@GOMP_2.0+0x798>
   149e0:	mov	x2, x25
   149e4:	mov	x1, x28
   149e8:	mov	x0, x19
   149ec:	bl	122c8 <GOMP_single_copy_end@@GOMP_1.0+0xb40>
   149f0:	tst	w0, #0xff
   149f4:	b.eq	14740 <GOMP_taskwait@@GOMP_2.0+0x6f0>  // b.none
   149f8:	cbz	x23, 147b8 <GOMP_taskwait@@GOMP_2.0+0x768>
   149fc:	ldr	x0, [x23, #56]
   14a00:	cbnz	x0, 14d0c <GOMP_taskwait@@GOMP_2.0+0xcbc>
   14a04:	mov	x0, x23
   14a08:	bl	8900 <free@plt>
   14a0c:	b	147b8 <GOMP_taskwait@@GOMP_2.0+0x768>
   14a10:	cmp	x2, x0
   14a14:	ldr	x1, [x19, #8]
   14a18:	csel	x0, x0, xzr, ne  // ne = any
   14a1c:	str	x0, [x28, #24]
   14a20:	stp	xzr, xzr, [x19, #112]
   14a24:	cbz	x1, 1482c <GOMP_taskwait@@GOMP_2.0+0x7dc>
   14a28:	add	x0, x19, #0x8
   14a2c:	bl	118a8 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   14a30:	str	xzr, [x19, #8]
   14a34:	b	14848 <GOMP_taskwait@@GOMP_2.0+0x7f8>
   14a38:	ldr	w1, [sp, #208]
   14a3c:	tst	x1, #0x7fffffff
   14a40:	b.eq	14cf0 <GOMP_taskwait@@GOMP_2.0+0xca0>  // b.none
   14a44:	sub	w2, w1, #0x1
   14a48:	ldr	x3, [sp, #128]
   14a4c:	ldaxr	w0, [x3]
   14a50:	cmp	w0, w1
   14a54:	b.ne	14a60 <GOMP_taskwait@@GOMP_2.0+0xa10>  // b.any
   14a58:	stxr	w4, w2, [x3]
   14a5c:	cmp	w4, #0x0
   14a60:	mov	w1, w0
   14a64:	b.ne	14a3c <GOMP_taskwait@@GOMP_2.0+0x9ec>  // b.any
   14a68:	ldr	x2, [sp, #104]
   14a6c:	mov	w0, #0x1                   	// #1
   14a70:	ldaxr	w1, [x2]
   14a74:	cbnz	w1, 14a80 <GOMP_taskwait@@GOMP_2.0+0xa30>
   14a78:	stxr	w3, w0, [x2]
   14a7c:	cbnz	w3, 14a70 <GOMP_taskwait@@GOMP_2.0+0xa20>
   14a80:	cmp	w1, #0x0
   14a84:	mov	w24, #0x0                   	// #0
   14a88:	b.eq	148d4 <GOMP_taskwait@@GOMP_2.0+0x884>  // b.none
   14a8c:	ldr	x0, [sp, #104]
   14a90:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   14a94:	b	148d4 <GOMP_taskwait@@GOMP_2.0+0x884>
   14a98:	ldr	x1, [sp, #128]
   14a9c:	stp	x10, x3, [sp, #136]
   14aa0:	ldr	w0, [x3, #88]
   14aa4:	str	x2, [sp, #152]
   14aa8:	str	w4, [sp, #164]
   14aac:	str	x9, [sp, #168]
   14ab0:	str	w0, [sp, #192]
   14ab4:	mov	x0, x10
   14ab8:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   14abc:	ldr	x1, [x0, #16]
   14ac0:	ldr	w4, [sp, #164]
   14ac4:	ldp	x10, x3, [sp, #136]
   14ac8:	ldr	x2, [sp, #152]
   14acc:	ldr	x9, [sp, #168]
   14ad0:	cbz	x1, 14c7c <GOMP_taskwait@@GOMP_2.0+0xc2c>
   14ad4:	ldp	x12, x11, [x3, #112]
   14ad8:	str	x12, [x11]
   14adc:	ldr	x13, [x3, #112]
   14ae0:	ldr	x12, [x1]
   14ae4:	str	x11, [x13, #8]
   14ae8:	stp	x12, x1, [x3, #112]
   14aec:	str	x9, [x1]
   14af0:	ldr	x1, [x3, #112]
   14af4:	str	x9, [x1, #8]
   14af8:	str	x9, [x0, #16]
   14afc:	b	146d0 <GOMP_taskwait@@GOMP_2.0+0x680>
   14b00:	cmp	x2, x0
   14b04:	b.eq	14cb4 <GOMP_taskwait@@GOMP_2.0+0xc64>  // b.none
   14b08:	str	x0, [x8, #8]
   14b0c:	ldr	x0, [x23, #56]
   14b10:	stp	xzr, xzr, [x19, #128]
   14b14:	cmp	x0, #0x1
   14b18:	b.hi	1488c <GOMP_taskwait@@GOMP_2.0+0x83c>  // b.pmore
   14b1c:	add	x0, x23, #0x38
   14b20:	stlr	xzr, [x0]
   14b24:	b	14894 <GOMP_taskwait@@GOMP_2.0+0x844>
   14b28:	ldr	x0, [sp, #104]
   14b2c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   14b30:	cbz	w24, 14758 <GOMP_taskwait@@GOMP_2.0+0x708>
   14b34:	b	14928 <GOMP_taskwait@@GOMP_2.0+0x8d8>
   14b38:	ldr	x1, [sp, #104]
   14b3c:	ldxr	w0, [x1]
   14b40:	stlxr	w2, wzr, [x1]
   14b44:	cbnz	w2, 14b3c <GOMP_taskwait@@GOMP_2.0+0xaec>
   14b48:	tbz	w0, #31, 1490c <GOMP_taskwait@@GOMP_2.0+0x8bc>
   14b4c:	ldr	x0, [sp, #104]
   14b50:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   14b54:	b	1490c <GOMP_taskwait@@GOMP_2.0+0x8bc>
   14b58:	mov	x4, x26
   14b5c:	mov	x1, x22
   14b60:	mov	x3, #0x0                   	// #0
   14b64:	mov	w2, #0x3e7                 	// #999
   14b68:	mov	w0, #0x1                   	// #1
   14b6c:	bl	26410 <acc_set_cuda_stream@@OACC_2.0+0x278>
   14b70:	mov	x19, x0
   14b74:	cbnz	x0, 1472c <GOMP_taskwait@@GOMP_2.0+0x6dc>
   14b78:	ldr	x0, [x22]
   14b7c:	ldr	x19, [x0, #8]
   14b80:	sub	x19, x19, #0x70
   14b84:	b	1472c <GOMP_taskwait@@GOMP_2.0+0x6dc>
   14b88:	bl	21210 <GOMP_target_enter_exit_data@@GOMP_4.5+0x240>
   14b8c:	tst	w0, #0xff
   14b90:	b.eq	14788 <GOMP_taskwait@@GOMP_2.0+0x738>  // b.none
   14b94:	ldr	x2, [sp, #104]
   14b98:	mov	w0, #0x1                   	// #1
   14b9c:	str	x28, [x20, #80]
   14ba0:	ldaxr	w1, [x2]
   14ba4:	cbnz	w1, 14bb0 <GOMP_taskwait@@GOMP_2.0+0xb60>
   14ba8:	stxr	w3, w0, [x2]
   14bac:	cbnz	w3, 14ba0 <GOMP_taskwait@@GOMP_2.0+0xb50>
   14bb0:	cmp	w1, #0x0
   14bb4:	b.ne	14d14 <GOMP_taskwait@@GOMP_2.0+0xcc4>  // b.any
   14bb8:	ldr	x0, [x19, #192]
   14bbc:	mov	w1, #0x4                   	// #4
   14bc0:	ldr	w2, [x0, #44]
   14bc4:	str	w1, [x19, #200]
   14bc8:	cmp	w2, #0x5
   14bcc:	b.eq	14cfc <GOMP_taskwait@@GOMP_2.0+0xcac>  // b.none
   14bd0:	str	w1, [x0, #44]
   14bd4:	mov	w24, #0x0                   	// #0
   14bd8:	mov	x23, #0x0                   	// #0
   14bdc:	b	148d8 <GOMP_taskwait@@GOMP_2.0+0x888>
   14be0:	ldr	w1, [x23, #52]
   14be4:	add	x0, x23, #0x34
   14be8:	strb	wzr, [x23, #48]
   14bec:	add	w2, w1, #0x1
   14bf0:	and	w2, w2, #0x7fffffff
   14bf4:	ldxr	w3, [x0]
   14bf8:	cmp	w3, w1
   14bfc:	b.ne	14c08 <GOMP_taskwait@@GOMP_2.0+0xbb8>  // b.any
   14c00:	stlxr	w4, w2, [x0]
   14c04:	cmp	w4, #0x0
   14c08:	mov	w1, w3
   14c0c:	b.ne	14bec <GOMP_taskwait@@GOMP_2.0+0xb9c>  // b.any
   14c10:	tbz	w3, #31, 148a0 <GOMP_taskwait@@GOMP_2.0+0x850>
   14c14:	bl	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
   14c18:	b	148a0 <GOMP_taskwait@@GOMP_2.0+0x850>
   14c1c:	ldp	x2, x1, [x24, #16]
   14c20:	add	x3, x25, #0x500
   14c24:	ldr	x19, [x24, #32]
   14c28:	mov	w0, #0x1                   	// #1
   14c2c:	str	x3, [sp, #104]
   14c30:	add	x20, x2, x1
   14c34:	add	x19, x19, x20
   14c38:	ldaxr	w1, [x3]
   14c3c:	cbnz	w1, 14c48 <GOMP_taskwait@@GOMP_2.0+0xbf8>
   14c40:	stxr	w2, w0, [x3]
   14c44:	cbnz	w2, 14c38 <GOMP_taskwait@@GOMP_2.0+0xbe8>
   14c48:	cmp	w1, #0x0
   14c4c:	b.ne	14d4c <GOMP_taskwait@@GOMP_2.0+0xcfc>  // b.any
   14c50:	cbz	x22, 14b38 <GOMP_taskwait@@GOMP_2.0+0xae8>
   14c54:	mov	x23, x22
   14c58:	mov	x21, #0x5                   	// #5
   14c5c:	mov	x22, x20
   14c60:	b	14644 <GOMP_taskwait@@GOMP_2.0+0x5f4>
   14c64:	mov	x1, x22
   14c68:	mov	w0, #0x1                   	// #1
   14c6c:	bl	265d8 <acc_set_cuda_stream@@OACC_2.0+0x440>
   14c70:	b	14820 <GOMP_taskwait@@GOMP_2.0+0x7d0>
   14c74:	bl	8900 <free@plt>
   14c78:	b	14764 <GOMP_taskwait@@GOMP_2.0+0x714>
   14c7c:	ldr	x1, [x0, #8]
   14c80:	cmp	x9, x1
   14c84:	b.eq	14af8 <GOMP_taskwait@@GOMP_2.0+0xaa8>  // b.none
   14c88:	ldp	x11, x12, [x3, #112]
   14c8c:	str	x11, [x12]
   14c90:	str	x12, [x11, #8]
   14c94:	ldr	x11, [x1, #8]
   14c98:	stp	x1, x11, [x3, #112]
   14c9c:	str	x9, [x0, #8]
   14ca0:	str	x9, [x11]
   14ca4:	ldr	x1, [x3, #112]
   14ca8:	str	x9, [x1, #8]
   14cac:	str	x9, [x0, #16]
   14cb0:	b	146d0 <GOMP_taskwait@@GOMP_2.0+0x680>
   14cb4:	mov	w7, #0x1                   	// #1
   14cb8:	str	xzr, [x8, #8]
   14cbc:	b	1487c <GOMP_taskwait@@GOMP_2.0+0x82c>
   14cc0:	mov	w0, #0x2                   	// #2
   14cc4:	add	x1, x23, #0x8
   14cc8:	bl	265d8 <acc_set_cuda_stream@@OACC_2.0+0x440>
   14ccc:	ldr	x0, [x23, #8]
   14cd0:	cmp	x0, #0x0
   14cd4:	cset	w7, eq  // eq = none
   14cd8:	b	1487c <GOMP_taskwait@@GOMP_2.0+0x82c>
   14cdc:	ldr	x0, [sp, #104]
   14ce0:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   14ce4:	b	148f8 <GOMP_taskwait@@GOMP_2.0+0x8a8>
   14ce8:	bl	8900 <free@plt>
   14cec:	b	14904 <GOMP_taskwait@@GOMP_2.0+0x8b4>
   14cf0:	add	x0, x27, #0x10
   14cf4:	bl	1a6b0 <omp_get_num_procs@@OMP_1.0+0x8>
   14cf8:	b	14a68 <GOMP_taskwait@@GOMP_2.0+0xa18>
   14cfc:	mov	x1, x19
   14d00:	mov	x0, x25
   14d04:	bl	12bf8 <GOMP_single_copy_end@@GOMP_1.0+0x1470>
   14d08:	b	14bd4 <GOMP_taskwait@@GOMP_2.0+0xb84>
   14d0c:	bl	8900 <free@plt>
   14d10:	b	14a04 <GOMP_taskwait@@GOMP_2.0+0x9b4>
   14d14:	ldr	x0, [sp, #104]
   14d18:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   14d1c:	b	14bb8 <GOMP_taskwait@@GOMP_2.0+0xb68>
   14d20:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   14d24:	add	x0, x0, #0xb90
   14d28:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   14d2c:	ldr	x0, [sp, #104]
   14d30:	mov	x23, x19
   14d34:	mov	x21, #0x2                   	// #2
   14d38:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   14d3c:	b	14644 <GOMP_taskwait@@GOMP_2.0+0x5f4>
   14d40:	ldr	x0, [sp, #104]
   14d44:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   14d48:	b	147b8 <GOMP_taskwait@@GOMP_2.0+0x768>
   14d4c:	ldr	x0, [sp, #104]
   14d50:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   14d54:	cbz	x22, 14b38 <GOMP_taskwait@@GOMP_2.0+0xae8>
   14d58:	mov	x23, x22
   14d5c:	mov	x21, #0x5                   	// #5
   14d60:	mov	x22, x20
   14d64:	b	14644 <GOMP_taskwait@@GOMP_2.0+0x5f4>

0000000000014d68 <GOMP_task@@GOMP_2.0>:
   14d68:	stp	x29, x30, [sp, #-352]!
   14d6c:	adrp	x9, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   14d70:	and	w5, w5, #0xff
   14d74:	mov	x29, sp
   14d78:	stp	x21, x22, [sp, #32]
   14d7c:	mov	w22, w6
   14d80:	adrp	x21, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   14d84:	ldr	x21, [x21, #4016]
   14d88:	stp	x23, x24, [sp, #48]
   14d8c:	mrs	x24, tpidr_el0
   14d90:	add	x10, x24, x21
   14d94:	stp	x19, x20, [sp, #16]
   14d98:	ldrb	w11, [x9, #1364]
   14d9c:	ldr	x20, [x10, #16]
   14da0:	stp	x25, x26, [sp, #64]
   14da4:	mov	x26, x0
   14da8:	cmp	x20, #0x0
   14dac:	stp	x27, x28, [sp, #80]
   14db0:	cset	w0, ne  // ne = any
   14db4:	mov	x27, x2
   14db8:	mov	x28, x4
   14dbc:	tst	w0, w11
   14dc0:	b.ne	1532c <GOMP_task@@GOMP_2.0+0x5c4>  // b.any
   14dc4:	ldr	x19, [x10, #80]
   14dc8:	mov	w25, #0x0                   	// #0
   14dcc:	tbnz	w22, #4, 14f48 <GOMP_task@@GOMP_2.0+0x1e0>
   14dd0:	cmp	x20, #0x0
   14dd4:	eor	w5, w5, #0x1
   14dd8:	cset	w0, eq  // eq = none
   14ddc:	and	w2, w22, #0x8
   14de0:	orr	w5, w0, w5
   14de4:	cbnz	w5, 14ec8 <GOMP_task@@GOMP_2.0+0x160>
   14de8:	cbz	x19, 14eb8 <GOMP_task@@GOMP_2.0+0x150>
   14dec:	ldrb	w0, [x19, #205]
   14df0:	cbz	w0, 14eb8 <GOMP_task@@GOMP_2.0+0x150>
   14df4:	cbnz	w2, 14ed0 <GOMP_task@@GOMP_2.0+0x168>
   14df8:	ldp	x6, x7, [x19, #144]
   14dfc:	stp	x6, x7, [x29, #288]
   14e00:	mov	x2, #0x1                   	// #1
   14e04:	ldp	x6, x7, [x19, #160]
   14e08:	stp	x6, x7, [x29, #304]
   14e0c:	ldr	x4, [x19, #176]
   14e10:	str	x2, [x29, #344]
   14e14:	str	x19, [x29, #144]
   14e18:	ldrb	w0, [x19, #205]
   14e1c:	str	xzr, [x29, #152]
   14e20:	stp	xzr, xzr, [x29, #168]
   14e24:	stp	xzr, xzr, [x29, #184]
   14e28:	stp	xzr, xzr, [x29, #200]
   14e2c:	str	xzr, [x29, #216]
   14e30:	str	x4, [x29, #320]
   14e34:	cbnz	w0, 14e3c <GOMP_task@@GOMP_2.0+0xd4>
   14e38:	tbz	w22, #1, 151d8 <GOMP_task@@GOMP_2.0+0x470>
   14e3c:	str	w25, [x29, #232]
   14e40:	strb	w2, [x29, #349]
   14e44:	ldrb	w0, [x19, #204]
   14e48:	ldr	x2, [x19, #40]
   14e4c:	str	x2, [x29, #184]
   14e50:	strb	w0, [x29, #348]
   14e54:	add	x0, x24, x21
   14e58:	add	x19, x29, #0x90
   14e5c:	str	x19, [x0, #80]
   14e60:	cbnz	x27, 151e0 <GOMP_task@@GOMP_2.0+0x478>
   14e64:	mov	x0, x1
   14e68:	blr	x26
   14e6c:	ldr	x0, [x29, #152]
   14e70:	cbnz	x0, 14f78 <GOMP_task@@GOMP_2.0+0x210>
   14e74:	ldr	x0, [x29, #168]
   14e78:	cbnz	x0, 14f78 <GOMP_task@@GOMP_2.0+0x210>
   14e7c:	add	x0, x24, x21
   14e80:	ldr	x19, [x0, #80]
   14e84:	ldr	x0, [x19, #56]
   14e88:	cbnz	x0, 1521c <GOMP_task@@GOMP_2.0+0x4b4>
   14e8c:	add	x21, x24, x21
   14e90:	ldr	x0, [x19]
   14e94:	str	x0, [x21, #80]
   14e98:	mov	sp, x29
   14e9c:	ldp	x19, x20, [sp, #16]
   14ea0:	ldp	x21, x22, [sp, #32]
   14ea4:	ldp	x23, x24, [sp, #48]
   14ea8:	ldp	x25, x26, [sp, #64]
   14eac:	ldp	x27, x28, [sp, #80]
   14eb0:	ldp	x29, x30, [sp], #352
   14eb4:	ret
   14eb8:	ldr	w4, [x20]
   14ebc:	ldr	w0, [x20, #1320]
   14ec0:	cmp	w0, w4, lsl #6
   14ec4:	b.ls	14fe8 <GOMP_task@@GOMP_2.0+0x280>  // b.plast
   14ec8:	cbz	w2, 14ef0 <GOMP_task@@GOMP_2.0+0x188>
   14ecc:	cbz	x19, 14ef4 <GOMP_task@@GOMP_2.0+0x18c>
   14ed0:	ldr	x0, [x19, #56]
   14ed4:	cbz	x0, 14df8 <GOMP_task@@GOMP_2.0+0x90>
   14ed8:	mov	x0, x7
   14edc:	stp	x3, x1, [x29, #128]
   14ee0:	bl	145d0 <GOMP_taskwait@@GOMP_2.0+0x580>
   14ee4:	add	x0, x24, x21
   14ee8:	ldp	x3, x1, [x29, #128]
   14eec:	ldr	x19, [x0, #80]
   14ef0:	cbnz	x19, 14df8 <GOMP_task@@GOMP_2.0+0x90>
   14ef4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   14ef8:	add	x0, x0, #0x2b8
   14efc:	mov	w2, #0x1                   	// #1
   14f00:	stp	xzr, xzr, [x29, #144]
   14f04:	ldp	x6, x7, [x0]
   14f08:	stp	xzr, xzr, [x29, #168]
   14f0c:	ldp	x4, x5, [x0, #16]
   14f10:	stp	xzr, xzr, [x29, #184]
   14f14:	ldr	x0, [x0, #32]
   14f18:	stp	xzr, xzr, [x29, #200]
   14f1c:	str	xzr, [x29, #216]
   14f20:	stp	x6, x7, [x29, #288]
   14f24:	stp	x4, x5, [x29, #304]
   14f28:	str	x0, [x29, #320]
   14f2c:	str	w2, [x29, #344]
   14f30:	strb	wzr, [x29, #348]
   14f34:	strh	wzr, [x29, #350]
   14f38:	tbz	w22, #1, 14fdc <GOMP_task@@GOMP_2.0+0x274>
   14f3c:	str	w25, [x29, #232]
   14f40:	strb	w2, [x29, #349]
   14f44:	b	14e54 <GOMP_task@@GOMP_2.0+0xec>
   14f48:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   14f4c:	eor	w5, w5, #0x1
   14f50:	and	w2, w22, #0x8
   14f54:	ldr	w25, [x0, #1368]
   14f58:	ldr	w0, [x29, #352]
   14f5c:	cmp	w25, w0
   14f60:	csel	w25, w25, w0, le
   14f64:	cmp	x20, #0x0
   14f68:	cset	w0, eq  // eq = none
   14f6c:	orr	w5, w0, w5
   14f70:	cbnz	w5, 14ec8 <GOMP_task@@GOMP_2.0+0x160>
   14f74:	b	14de8 <GOMP_task@@GOMP_2.0+0x80>
   14f78:	add	x20, x20, #0x500
   14f7c:	mov	w0, #0x1                   	// #1
   14f80:	ldaxr	w1, [x20]
   14f84:	cbnz	w1, 14f90 <GOMP_task@@GOMP_2.0+0x228>
   14f88:	stxr	w2, w0, [x20]
   14f8c:	cbnz	w2, 14f80 <GOMP_task@@GOMP_2.0+0x218>
   14f90:	cmp	w1, #0x0
   14f94:	b.ne	155dc <GOMP_task@@GOMP_2.0+0x874>  // b.any
   14f98:	ldr	x1, [x29, #152]
   14f9c:	cbnz	x1, 153e4 <GOMP_task@@GOMP_2.0+0x67c>
   14fa0:	ldr	x1, [x29, #168]
   14fa4:	mov	x0, x1
   14fa8:	cbz	x1, 14fc0 <GOMP_task@@GOMP_2.0+0x258>
   14fac:	nop
   14fb0:	stur	xzr, [x0, #-112]
   14fb4:	ldr	x0, [x0]
   14fb8:	cmp	x1, x0
   14fbc:	b.ne	14fb0 <GOMP_task@@GOMP_2.0+0x248>  // b.any
   14fc0:	ldxr	w0, [x20]
   14fc4:	stlxr	w1, wzr, [x20]
   14fc8:	cbnz	w1, 14fc0 <GOMP_task@@GOMP_2.0+0x258>
   14fcc:	tbz	w0, #31, 14e7c <GOMP_task@@GOMP_2.0+0x114>
   14fd0:	mov	x0, x20
   14fd4:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   14fd8:	b	14e7c <GOMP_task@@GOMP_2.0+0x114>
   14fdc:	str	w25, [x29, #232]
   14fe0:	strb	wzr, [x29, #349]
   14fe4:	b	14e54 <GOMP_task@@GOMP_2.0+0xec>
   14fe8:	mov	x10, #0x0                   	// #0
   14fec:	ldr	x11, [x19, #40]
   14ff0:	cbz	w2, 15004 <GOMP_task@@GOMP_2.0+0x29c>
   14ff4:	ldr	x10, [x7]
   14ff8:	cbz	x10, 1542c <GOMP_task@@GOMP_2.0+0x6c4>
   14ffc:	add	x10, x10, x10, lsl #2
   15000:	lsl	x10, x10, #3
   15004:	add	x4, x28, #0xcf
   15008:	stp	x7, x1, [x29, #96]
   1500c:	add	x0, x3, x4
   15010:	add	x0, x0, x10
   15014:	stp	x11, x4, [x29, #112]
   15018:	neg	x28, x28
   1501c:	stp	x3, x10, [x29, #128]
   15020:	bl	b220 <fprintf@plt+0x2710>
   15024:	add	x6, x24, x21
   15028:	ldp	x11, x4, [x29, #112]
   1502c:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   15030:	ldp	x3, x10, [x29, #128]
   15034:	add	x2, x2, #0x2b8
   15038:	ldr	x5, [x6, #80]
   1503c:	mov	x23, x0
   15040:	str	x19, [x0], #144
   15044:	cmp	x5, #0x0
   15048:	add	x5, x5, #0x90
   1504c:	csel	x2, x2, x5, eq  // eq = none
   15050:	add	x4, x10, x4
   15054:	add	x4, x23, x4
   15058:	and	x28, x4, x28
   1505c:	ldp	x4, x5, [x2]
   15060:	stp	x4, x5, [x23, #144]
   15064:	ldp	x4, x5, [x2, #16]
   15068:	stp	x4, x5, [x0, #16]
   1506c:	ldr	x2, [x2, #32]
   15070:	str	x2, [x0, #32]
   15074:	mov	x0, #0x1                   	// #1
   15078:	str	x0, [x23, #200]
   1507c:	ldp	x7, x1, [x29, #96]
   15080:	str	xzr, [x23, #8]
   15084:	ldrb	w0, [x19, #204]
   15088:	stp	xzr, xzr, [x23, #24]
   1508c:	str	x11, [x23, #40]
   15090:	str	xzr, [x23, #48]
   15094:	str	xzr, [x23, #56]
   15098:	str	xzr, [x23, #64]
   1509c:	str	xzr, [x23, #72]
   150a0:	str	x23, [x6, #80]
   150a4:	str	w25, [x23, #88]
   150a8:	stp	x7, x11, [x29, #120]
   150ac:	strb	w0, [x23, #204]
   150b0:	cbz	x27, 1540c <GOMP_task@@GOMP_2.0+0x6a4>
   150b4:	mov	x0, x28
   150b8:	blr	x27
   150bc:	ldp	x7, x11, [x29, #120]
   150c0:	mov	w0, #0x1                   	// #1
   150c4:	ldr	x10, [x29, #136]
   150c8:	adrp	x9, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   150cc:	strb	w0, [x23, #206]
   150d0:	add	x21, x24, x21
   150d4:	stp	x26, x28, [x23, #184]
   150d8:	add	x26, x20, #0x500
   150dc:	ubfx	x22, x22, #1, #1
   150e0:	mov	w1, #0x2                   	// #2
   150e4:	mov	w0, #0x1                   	// #1
   150e8:	str	x19, [x21, #80]
   150ec:	str	w1, [x23, #200]
   150f0:	strb	w22, [x23, #205]
   150f4:	ldaxr	w1, [x26]
   150f8:	cbnz	w1, 15104 <GOMP_task@@GOMP_2.0+0x39c>
   150fc:	stxr	w2, w0, [x26]
   15100:	cbnz	w2, 150f4 <GOMP_task@@GOMP_2.0+0x38c>
   15104:	cmp	w1, #0x0
   15108:	b.ne	155fc <GOMP_task@@GOMP_2.0+0x894>  // b.any
   1510c:	ldrb	w0, [x9, #1364]
   15110:	cbnz	w0, 15370 <GOMP_task@@GOMP_2.0+0x608>
   15114:	cbz	x11, 15124 <GOMP_task@@GOMP_2.0+0x3bc>
   15118:	ldr	x0, [x11, #56]
   1511c:	add	x0, x0, #0x1
   15120:	str	x0, [x11, #56]
   15124:	cbz	x10, 15148 <GOMP_task@@GOMP_2.0+0x3e0>
   15128:	mov	x0, x23
   1512c:	mov	x2, x7
   15130:	mov	x1, x19
   15134:	str	x11, [x29, #136]
   15138:	bl	11cf0 <GOMP_single_copy_end@@GOMP_1.0+0x568>
   1513c:	ldr	x0, [x23, #80]
   15140:	ldr	x11, [x29, #136]
   15144:	cbnz	x0, 153c8 <GOMP_task@@GOMP_2.0+0x660>
   15148:	ldr	x0, [x19, #8]
   1514c:	add	x24, x19, #0x8
   15150:	add	x21, x23, #0x70
   15154:	cbnz	x0, 15470 <GOMP_task@@GOMP_2.0+0x708>
   15158:	cmp	w25, #0x0
   1515c:	ldr	x0, [x19, #24]
   15160:	b.gt	15434 <GOMP_task@@GOMP_2.0+0x6cc>
   15164:	cbz	x0, 153f4 <GOMP_task@@GOMP_2.0+0x68c>
   15168:	ldr	x1, [x0, #8]
   1516c:	stp	x0, x1, [x23, #112]
   15170:	str	x21, [x19, #24]
   15174:	ldr	x0, [x23, #112]
   15178:	str	x21, [x0, #8]
   1517c:	ldr	x0, [x23, #120]
   15180:	str	x21, [x0]
   15184:	cbz	x11, 15298 <GOMP_task@@GOMP_2.0+0x530>
   15188:	ldr	x0, [x11, #8]
   1518c:	add	x24, x11, #0x8
   15190:	add	x21, x23, #0x80
   15194:	cbnz	x0, 15260 <GOMP_task@@GOMP_2.0+0x4f8>
   15198:	cmp	w25, #0x0
   1519c:	ldr	x0, [x11, #24]
   151a0:	b.gt	15224 <GOMP_task@@GOMP_2.0+0x4bc>
   151a4:	cbz	x0, 15364 <GOMP_task@@GOMP_2.0+0x5fc>
   151a8:	ldr	x1, [x0, #8]
   151ac:	stp	x0, x1, [x23, #128]
   151b0:	str	x21, [x11, #24]
   151b4:	ldr	x0, [x23, #128]
   151b8:	str	x21, [x0, #8]
   151bc:	ldr	x0, [x23, #136]
   151c0:	str	x21, [x0]
   151c4:	ldr	x0, [x20, #1288]
   151c8:	add	x21, x20, #0x508
   151cc:	cbnz	x0, 154e8 <GOMP_task@@GOMP_2.0+0x780>
   151d0:	ldr	x0, [x20, #1304]
   151d4:	b	152b0 <GOMP_task@@GOMP_2.0+0x548>
   151d8:	str	w25, [x29, #232]
   151dc:	b	14e44 <GOMP_task@@GOMP_2.0+0xdc>
   151e0:	add	x3, x3, x28
   151e4:	mov	x22, sp
   151e8:	add	x3, x3, #0xe
   151ec:	sub	x0, x28, #0x1
   151f0:	and	x3, x3, #0xfffffffffffffff0
   151f4:	neg	x28, x28
   151f8:	sub	sp, sp, x3
   151fc:	add	x0, sp, x0
   15200:	and	x28, x0, x28
   15204:	mov	x0, x28
   15208:	blr	x27
   1520c:	mov	x0, x28
   15210:	blr	x26
   15214:	mov	sp, x22
   15218:	b	14e6c <GOMP_task@@GOMP_2.0+0x104>
   1521c:	bl	8900 <free@plt>
   15220:	b	14e8c <GOMP_task@@GOMP_2.0+0x124>
   15224:	cbz	x0, 155a4 <GOMP_task@@GOMP_2.0+0x83c>
   15228:	mov	x0, #0x28                  	// #40
   1522c:	str	x11, [x29, #136]
   15230:	bl	b220 <fprintf@plt+0x2710>
   15234:	mov	x1, x0
   15238:	ldp	x3, x2, [x24, #16]
   1523c:	mov	x0, x24
   15240:	str	wzr, [x1]
   15244:	stp	x3, x2, [x1, #8]
   15248:	stp	xzr, xzr, [x1, #24]
   1524c:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   15250:	ldr	x11, [x29, #136]
   15254:	ldr	x0, [x11, #8]
   15258:	str	xzr, [x24, #16]
   1525c:	cbz	x0, 155a4 <GOMP_task@@GOMP_2.0+0x83c>
   15260:	add	x1, x29, #0x90
   15264:	mov	x0, x24
   15268:	str	w25, [x29, #144]
   1526c:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   15270:	cbz	x0, 155a4 <GOMP_task@@GOMP_2.0+0x83c>
   15274:	ldr	x1, [x0, #8]
   15278:	cbz	x1, 155d0 <GOMP_task@@GOMP_2.0+0x868>
   1527c:	ldr	x2, [x1, #8]
   15280:	stp	x1, x2, [x23, #128]
   15284:	str	x21, [x0, #8]
   15288:	ldr	x0, [x23, #128]
   1528c:	str	x21, [x0, #8]
   15290:	ldr	x0, [x23, #136]
   15294:	str	x21, [x0]
   15298:	ldr	x0, [x20, #1288]
   1529c:	add	x21, x20, #0x508
   152a0:	cbnz	x0, 154e8 <GOMP_task@@GOMP_2.0+0x780>
   152a4:	cmp	w25, #0x0
   152a8:	ldr	x0, [x21, #16]
   152ac:	b.gt	154b4 <GOMP_task@@GOMP_2.0+0x74c>
   152b0:	add	x1, x23, #0x60
   152b4:	cbz	x0, 15400 <GOMP_task@@GOMP_2.0+0x698>
   152b8:	ldr	x2, [x0, #8]
   152bc:	stp	x0, x2, [x23, #96]
   152c0:	str	x1, [x0, #8]
   152c4:	ldr	x0, [x23, #104]
   152c8:	str	x1, [x0]
   152cc:	ldr	w0, [x20, #1324]
   152d0:	ldrb	w19, [x19, #204]
   152d4:	add	w0, w0, #0x1
   152d8:	str	w0, [x20, #1324]
   152dc:	ldr	w0, [x20, #1328]
   152e0:	eor	w19, w19, #0x1
   152e4:	ldr	w2, [x20, #132]
   152e8:	ldr	w1, [x20, #1320]
   152ec:	add	w19, w19, w0
   152f0:	ldr	w21, [x20]
   152f4:	orr	w2, w2, #0x1
   152f8:	add	w1, w1, #0x1
   152fc:	str	w2, [x20, #132]
   15300:	str	w1, [x20, #1320]
   15304:	ldxr	w0, [x26]
   15308:	stlxr	w1, wzr, [x26]
   1530c:	cbnz	w1, 15304 <GOMP_task@@GOMP_2.0+0x59c>
   15310:	tbnz	w0, #31, 15520 <GOMP_task@@GOMP_2.0+0x7b8>
   15314:	cmp	w19, w21
   15318:	b.cs	14e98 <GOMP_task@@GOMP_2.0+0x130>  // b.hs, b.nlast
   1531c:	add	x0, x20, #0x80
   15320:	mov	w1, #0x1                   	// #1
   15324:	bl	1abd8 <omp_get_num_procs@@OMP_1.0+0x530>
   15328:	b	14e98 <GOMP_task@@GOMP_2.0+0x130>
   1532c:	ldr	w0, [x20, #132]
   15330:	tbnz	w0, #2, 14e98 <GOMP_task@@GOMP_2.0+0x130>
   15334:	ldr	x19, [x10, #80]
   15338:	ldr	x0, [x19, #40]
   1533c:	cbz	x0, 14dc8 <GOMP_task@@GOMP_2.0+0x60>
   15340:	ldrb	w2, [x0, #49]
   15344:	cbnz	w2, 14e98 <GOMP_task@@GOMP_2.0+0x130>
   15348:	ldrb	w2, [x0, #50]
   1534c:	cbz	w2, 14dc8 <GOMP_task@@GOMP_2.0+0x60>
   15350:	ldr	x0, [x0]
   15354:	cbz	x0, 14dc8 <GOMP_task@@GOMP_2.0+0x60>
   15358:	ldrb	w0, [x0, #49]
   1535c:	cbz	w0, 14dc8 <GOMP_task@@GOMP_2.0+0x60>
   15360:	b	14e98 <GOMP_task@@GOMP_2.0+0x130>
   15364:	stp	x21, x21, [x23, #128]
   15368:	str	x21, [x11, #24]
   1536c:	b	151c4 <GOMP_task@@GOMP_2.0+0x45c>
   15370:	ldrb	w0, [x23, #206]
   15374:	cbnz	w0, 15114 <GOMP_task@@GOMP_2.0+0x3ac>
   15378:	ldr	w0, [x20, #132]
   1537c:	tbnz	w0, #2, 153a4 <GOMP_task@@GOMP_2.0+0x63c>
   15380:	cbz	x11, 15124 <GOMP_task@@GOMP_2.0+0x3bc>
   15384:	ldrb	w0, [x11, #49]
   15388:	cbnz	w0, 153a4 <GOMP_task@@GOMP_2.0+0x63c>
   1538c:	ldrb	w0, [x11, #50]
   15390:	cbz	w0, 15118 <GOMP_task@@GOMP_2.0+0x3b0>
   15394:	ldr	x0, [x11]
   15398:	cbz	x0, 15118 <GOMP_task@@GOMP_2.0+0x3b0>
   1539c:	ldrb	w0, [x0, #49]
   153a0:	cbz	w0, 15118 <GOMP_task@@GOMP_2.0+0x3b0>
   153a4:	ldxr	w0, [x26]
   153a8:	stlxr	w1, wzr, [x26]
   153ac:	cbnz	w1, 153a4 <GOMP_task@@GOMP_2.0+0x63c>
   153b0:	tbnz	w0, #31, 155f0 <GOMP_task@@GOMP_2.0+0x888>
   153b4:	ldr	x0, [x23, #56]
   153b8:	cbnz	x0, 155e8 <GOMP_task@@GOMP_2.0+0x880>
   153bc:	mov	x0, x23
   153c0:	bl	8900 <free@plt>
   153c4:	b	14e98 <GOMP_task@@GOMP_2.0+0x130>
   153c8:	ldxr	w0, [x26]
   153cc:	stlxr	w1, wzr, [x26]
   153d0:	cbnz	w1, 153c8 <GOMP_task@@GOMP_2.0+0x660>
   153d4:	tbz	w0, #31, 14e98 <GOMP_task@@GOMP_2.0+0x130>
   153d8:	mov	x0, x26
   153dc:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   153e0:	b	14e98 <GOMP_task@@GOMP_2.0+0x130>
   153e4:	add	x0, x19, #0x8
   153e8:	bl	118a8 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   153ec:	str	xzr, [x29, #152]
   153f0:	b	14fc0 <GOMP_task@@GOMP_2.0+0x258>
   153f4:	stp	x21, x21, [x23, #112]
   153f8:	str	x21, [x19, #24]
   153fc:	b	15184 <GOMP_task@@GOMP_2.0+0x41c>
   15400:	stp	x1, x1, [x23, #96]
   15404:	str	x1, [x20, #1304]
   15408:	b	152cc <GOMP_task@@GOMP_2.0+0x564>
   1540c:	mov	x2, x3
   15410:	mov	x0, x28
   15414:	str	x10, [x29, #136]
   15418:	bl	85c0 <memcpy@plt>
   1541c:	adrp	x9, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   15420:	ldp	x7, x11, [x29, #120]
   15424:	ldr	x10, [x29, #136]
   15428:	b	150d0 <GOMP_task@@GOMP_2.0+0x368>
   1542c:	ldr	x10, [x7, #8]
   15430:	b	14ffc <GOMP_task@@GOMP_2.0+0x294>
   15434:	cbz	x0, 1552c <GOMP_task@@GOMP_2.0+0x7c4>
   15438:	mov	x0, #0x28                  	// #40
   1543c:	str	x11, [x29, #136]
   15440:	bl	b220 <fprintf@plt+0x2710>
   15444:	mov	x1, x0
   15448:	ldp	x3, x2, [x24, #16]
   1544c:	mov	x0, x24
   15450:	str	wzr, [x1]
   15454:	stp	x3, x2, [x1, #8]
   15458:	stp	xzr, xzr, [x1, #24]
   1545c:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   15460:	str	xzr, [x24, #16]
   15464:	ldr	x0, [x24]
   15468:	ldr	x11, [x29, #136]
   1546c:	cbz	x0, 1552c <GOMP_task@@GOMP_2.0+0x7c4>
   15470:	add	x1, x29, #0x90
   15474:	mov	x0, x24
   15478:	str	x11, [x29, #136]
   1547c:	str	w25, [x29, #144]
   15480:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   15484:	ldr	x11, [x29, #136]
   15488:	cbz	x0, 1552c <GOMP_task@@GOMP_2.0+0x7c4>
   1548c:	ldr	x1, [x0, #8]
   15490:	cbz	x1, 15598 <GOMP_task@@GOMP_2.0+0x830>
   15494:	ldr	x2, [x1, #8]
   15498:	stp	x1, x2, [x23, #112]
   1549c:	str	x21, [x0, #8]
   154a0:	ldr	x0, [x23, #112]
   154a4:	str	x21, [x0, #8]
   154a8:	ldr	x0, [x23, #120]
   154ac:	str	x21, [x0]
   154b0:	b	15184 <GOMP_task@@GOMP_2.0+0x41c>
   154b4:	cbz	x0, 15560 <GOMP_task@@GOMP_2.0+0x7f8>
   154b8:	mov	x0, #0x28                  	// #40
   154bc:	bl	b220 <fprintf@plt+0x2710>
   154c0:	ldp	x3, x2, [x21, #16]
   154c4:	mov	x1, x0
   154c8:	mov	x0, x21
   154cc:	str	wzr, [x1]
   154d0:	stp	x3, x2, [x1, #8]
   154d4:	stp	xzr, xzr, [x1, #24]
   154d8:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   154dc:	ldr	x0, [x20, #1288]
   154e0:	str	xzr, [x21, #16]
   154e4:	cbz	x0, 15560 <GOMP_task@@GOMP_2.0+0x7f8>
   154e8:	add	x1, x29, #0x90
   154ec:	mov	x0, x21
   154f0:	str	w25, [x29, #144]
   154f4:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   154f8:	cbz	x0, 15560 <GOMP_task@@GOMP_2.0+0x7f8>
   154fc:	ldr	x1, [x0, #8]
   15500:	add	x2, x23, #0x60
   15504:	cbz	x1, 1558c <GOMP_task@@GOMP_2.0+0x824>
   15508:	ldr	x0, [x1, #8]
   1550c:	stp	x1, x0, [x23, #96]
   15510:	str	x2, [x1, #8]
   15514:	ldr	x0, [x23, #104]
   15518:	str	x2, [x0]
   1551c:	b	152cc <GOMP_task@@GOMP_2.0+0x564>
   15520:	mov	x0, x26
   15524:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   15528:	b	15314 <GOMP_task@@GOMP_2.0+0x5ac>
   1552c:	mov	x0, #0x28                  	// #40
   15530:	str	x11, [x29, #136]
   15534:	bl	b220 <fprintf@plt+0x2710>
   15538:	mov	x22, x0
   1553c:	mov	x1, x22
   15540:	mov	x0, x24
   15544:	str	w25, [x22]
   15548:	stp	xzr, xzr, [x22, #8]
   1554c:	stp	xzr, xzr, [x22, #24]
   15550:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   15554:	mov	x0, x22
   15558:	ldr	x11, [x29, #136]
   1555c:	b	1548c <GOMP_task@@GOMP_2.0+0x724>
   15560:	mov	x0, #0x28                  	// #40
   15564:	bl	b220 <fprintf@plt+0x2710>
   15568:	mov	x1, x0
   1556c:	mov	x0, x21
   15570:	mov	x21, x1
   15574:	str	w25, [x1]
   15578:	stp	xzr, xzr, [x1, #8]
   1557c:	stp	xzr, xzr, [x1, #24]
   15580:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   15584:	mov	x0, x21
   15588:	b	154fc <GOMP_task@@GOMP_2.0+0x794>
   1558c:	stp	x2, x2, [x23, #96]
   15590:	str	x2, [x0, #8]
   15594:	b	152cc <GOMP_task@@GOMP_2.0+0x564>
   15598:	stp	x21, x21, [x23, #112]
   1559c:	str	x21, [x0, #8]
   155a0:	b	15184 <GOMP_task@@GOMP_2.0+0x41c>
   155a4:	mov	x0, #0x28                  	// #40
   155a8:	bl	b220 <fprintf@plt+0x2710>
   155ac:	mov	x22, x0
   155b0:	mov	x0, x24
   155b4:	mov	x1, x22
   155b8:	str	w25, [x22]
   155bc:	stp	xzr, xzr, [x22, #8]
   155c0:	stp	xzr, xzr, [x22, #24]
   155c4:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   155c8:	mov	x0, x22
   155cc:	b	15274 <GOMP_task@@GOMP_2.0+0x50c>
   155d0:	stp	x21, x21, [x23, #128]
   155d4:	str	x21, [x0, #8]
   155d8:	b	15298 <GOMP_task@@GOMP_2.0+0x530>
   155dc:	mov	x0, x20
   155e0:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   155e4:	b	14f98 <GOMP_task@@GOMP_2.0+0x230>
   155e8:	bl	8900 <free@plt>
   155ec:	b	153bc <GOMP_task@@GOMP_2.0+0x654>
   155f0:	mov	x0, x26
   155f4:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   155f8:	b	153b4 <GOMP_task@@GOMP_2.0+0x64c>
   155fc:	mov	x0, x26
   15600:	stp	x7, x11, [x29, #120]
   15604:	str	x10, [x29, #136]
   15608:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   1560c:	adrp	x9, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   15610:	ldp	x7, x11, [x29, #120]
   15614:	ldr	x10, [x29, #136]
   15618:	b	1510c <GOMP_task@@GOMP_2.0+0x3a4>
   1561c:	nop

0000000000015620 <GOMP_taskwait_depend@@GOMP_5.0>:
   15620:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   15624:	ldr	x1, [x1, #4016]
   15628:	mrs	x2, tpidr_el0
   1562c:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   15630:	add	x1, x2, x1
   15634:	ldrb	w3, [x3, #1364]
   15638:	ldr	x2, [x1, #16]
   1563c:	cmp	x2, #0x0
   15640:	cset	w4, ne  // ne = any
   15644:	tst	w4, w3
   15648:	b.ne	15660 <GOMP_taskwait_depend@@GOMP_5.0+0x40>  // b.any
   1564c:	ldr	x1, [x1, #80]
   15650:	cbz	x1, 15694 <GOMP_taskwait_depend@@GOMP_5.0+0x74>
   15654:	ldr	x1, [x1, #56]
   15658:	cbz	x1, 15694 <GOMP_taskwait_depend@@GOMP_5.0+0x74>
   1565c:	b	145d0 <GOMP_taskwait@@GOMP_2.0+0x580>
   15660:	ldr	w2, [x2, #132]
   15664:	tbnz	w2, #2, 15694 <GOMP_taskwait_depend@@GOMP_5.0+0x74>
   15668:	ldr	x1, [x1, #80]
   1566c:	ldr	x2, [x1, #40]
   15670:	cbz	x2, 15654 <GOMP_taskwait_depend@@GOMP_5.0+0x34>
   15674:	ldrb	w3, [x2, #49]
   15678:	cbnz	w3, 15694 <GOMP_taskwait_depend@@GOMP_5.0+0x74>
   1567c:	ldrb	w3, [x2, #50]
   15680:	cbz	w3, 15654 <GOMP_taskwait_depend@@GOMP_5.0+0x34>
   15684:	ldr	x2, [x2]
   15688:	cbz	x2, 15654 <GOMP_taskwait_depend@@GOMP_5.0+0x34>
   1568c:	ldrb	w2, [x2, #49]
   15690:	cbz	w2, 15654 <GOMP_taskwait_depend@@GOMP_5.0+0x34>
   15694:	ret

0000000000015698 <GOMP_taskyield@@GOMP_3.0>:
   15698:	ret
   1569c:	nop

00000000000156a0 <GOMP_taskgroup_start@@GOMP_4.0>:
   156a0:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   156a4:	ldr	x0, [x0, #4016]
   156a8:	mrs	x1, tpidr_el0
   156ac:	add	x0, x1, x0
   156b0:	ldr	x1, [x0, #16]
   156b4:	cbz	x1, 15710 <GOMP_taskgroup_start@@GOMP_4.0+0x70>
   156b8:	stp	x29, x30, [sp, #-32]!
   156bc:	mov	x29, sp
   156c0:	stp	x19, x20, [sp, #16]
   156c4:	ldr	x20, [x0, #80]
   156c8:	mov	x0, #0x40                  	// #64
   156cc:	ldr	x19, [x20, #40]
   156d0:	bl	b220 <fprintf@plt+0x2710>
   156d4:	mov	x1, x0
   156d8:	str	x19, [x1], #8
   156dc:	str	xzr, [x0, #8]
   156e0:	stp	xzr, xzr, [x1, #16]
   156e4:	cbz	x19, 156ec <GOMP_taskgroup_start@@GOMP_4.0+0x4c>
   156e8:	ldr	x19, [x19, #40]
   156ec:	str	x19, [x0, #40]
   156f0:	strh	wzr, [x0, #48]
   156f4:	strb	wzr, [x0, #50]
   156f8:	str	wzr, [x0, #52]
   156fc:	str	xzr, [x0, #56]
   15700:	str	x0, [x20, #40]
   15704:	ldp	x19, x20, [sp, #16]
   15708:	ldp	x29, x30, [sp], #32
   1570c:	ret
   15710:	ret
   15714:	nop

0000000000015718 <GOMP_taskgroup_end@@GOMP_4.0>:
   15718:	stp	x29, x30, [sp, #-144]!
   1571c:	mov	x29, sp
   15720:	stp	x23, x24, [sp, #48]
   15724:	mrs	x24, tpidr_el0
   15728:	adrp	x23, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1572c:	ldr	x23, [x23, #4016]
   15730:	stp	x21, x22, [sp, #32]
   15734:	add	x0, x24, x23
   15738:	ldr	x21, [x0, #16]
   1573c:	cbz	x21, 159d8 <GOMP_taskgroup_end@@GOMP_4.0+0x2c0>
   15740:	ldr	x22, [x0, #80]
   15744:	stp	x19, x20, [sp, #16]
   15748:	ldr	x20, [x22, #40]
   1574c:	cbz	x20, 15d04 <GOMP_taskgroup_end@@GOMP_4.0+0x5ec>
   15750:	add	x0, x20, #0x38
   15754:	ldar	x0, [x0]
   15758:	cbz	x0, 159c4 <GOMP_taskgroup_end@@GOMP_4.0+0x2ac>
   1575c:	add	x19, x21, #0x500
   15760:	mov	w0, #0x1                   	// #1
   15764:	stp	x25, x26, [sp, #64]
   15768:	stp	x27, x28, [sp, #80]
   1576c:	ldaxr	w1, [x19]
   15770:	cbnz	w1, 1577c <GOMP_taskgroup_end@@GOMP_4.0+0x64>
   15774:	stxr	w2, w0, [x19]
   15778:	cbnz	w2, 1576c <GOMP_taskgroup_end@@GOMP_4.0+0x54>
   1577c:	cmp	w1, #0x0
   15780:	b.ne	15d5c <GOMP_taskgroup_end@@GOMP_4.0+0x644>  // b.any
   15784:	add	x0, sp, #0x8f
   15788:	str	x0, [sp, #96]
   1578c:	add	x0, x21, #0x508
   15790:	str	x0, [sp, #104]
   15794:	ldr	x0, [x20, #8]
   15798:	add	x25, x20, #0x8
   1579c:	mov	w28, #0x0                   	// #0
   157a0:	mov	x27, #0x0                   	// #0
   157a4:	cbnz	x0, 15960 <GOMP_taskgroup_end@@GOMP_4.0+0x248>
   157a8:	ldr	x3, [x25, #16]
   157ac:	cbnz	x3, 15a18 <GOMP_taskgroup_end@@GOMP_4.0+0x300>
   157b0:	ldr	x0, [x20, #56]
   157b4:	cbz	x0, 1598c <GOMP_taskgroup_end@@GOMP_4.0+0x274>
   157b8:	ldr	x0, [x22, #8]
   157bc:	cbnz	x0, 15cb4 <GOMP_taskgroup_end@@GOMP_4.0+0x59c>
   157c0:	ldr	x3, [x22, #24]
   157c4:	cbnz	x3, 15a60 <GOMP_taskgroup_end@@GOMP_4.0+0x348>
   157c8:	mov	w0, #0x1                   	// #1
   157cc:	mov	x26, #0x0                   	// #0
   157d0:	strb	w0, [x20, #48]
   157d4:	ldxr	w0, [x19]
   157d8:	stlxr	w1, wzr, [x19]
   157dc:	cbnz	w1, 157d4 <GOMP_taskgroup_end@@GOMP_4.0+0xbc>
   157e0:	tbnz	w0, #31, 159f8 <GOMP_taskgroup_end@@GOMP_4.0+0x2e0>
   157e4:	cbnz	w28, 159e8 <GOMP_taskgroup_end@@GOMP_4.0+0x2d0>
   157e8:	cbz	x27, 157fc <GOMP_taskgroup_end@@GOMP_4.0+0xe4>
   157ec:	ldr	x0, [x27, #56]
   157f0:	cbnz	x0, 15bc0 <GOMP_taskgroup_end@@GOMP_4.0+0x4a8>
   157f4:	mov	x0, x27
   157f8:	bl	8900 <free@plt>
   157fc:	cbz	x26, 15a98 <GOMP_taskgroup_end@@GOMP_4.0+0x380>
   15800:	ldp	x1, x0, [x26, #184]
   15804:	add	x27, x24, x23
   15808:	str	x26, [x27, #80]
   1580c:	cbz	x1, 15b20 <GOMP_taskgroup_end@@GOMP_4.0+0x408>
   15810:	blr	x1
   15814:	add	x0, x24, x23
   15818:	str	x22, [x0, #80]
   1581c:	mov	w0, #0x1                   	// #1
   15820:	ldaxr	w1, [x19]
   15824:	cbnz	w1, 15830 <GOMP_taskgroup_end@@GOMP_4.0+0x118>
   15828:	stxr	w2, w0, [x19]
   1582c:	cbnz	w2, 15820 <GOMP_taskgroup_end@@GOMP_4.0+0x108>
   15830:	cmp	w1, #0x0
   15834:	mov	w28, #0x0                   	// #0
   15838:	b.ne	15d68 <GOMP_taskgroup_end@@GOMP_4.0+0x650>  // b.any
   1583c:	ldr	x27, [x26, #72]
   15840:	ldr	x5, [x26]
   15844:	cbz	x27, 15870 <GOMP_taskgroup_end@@GOMP_4.0+0x158>
   15848:	cbz	x5, 15a70 <GOMP_taskgroup_end@@GOMP_4.0+0x358>
   1584c:	mov	x0, x26
   15850:	bl	120a8 <GOMP_single_copy_end@@GOMP_1.0+0x920>
   15854:	ldr	x0, [x26, #48]
   15858:	cbz	x0, 15bb4 <GOMP_taskgroup_end@@GOMP_4.0+0x49c>
   1585c:	mov	x1, x21
   15860:	mov	x0, x26
   15864:	bl	12660 <GOMP_single_copy_end@@GOMP_1.0+0xed8>
   15868:	mov	x27, x0
   1586c:	ldr	x5, [x26]
   15870:	cbz	x5, 158a4 <GOMP_taskgroup_end@@GOMP_4.0+0x18c>
   15874:	ldrb	w0, [x26, #207]
   15878:	cbnz	w0, 15bc8 <GOMP_taskgroup_end@@GOMP_4.0+0x4b0>
   1587c:	ldr	x0, [x5, #8]
   15880:	add	x2, x26, #0x70
   15884:	cbnz	x0, 15c28 <GOMP_taskgroup_end@@GOMP_4.0+0x510>
   15888:	ldp	x0, x1, [x26, #112]
   1588c:	ldr	x8, [x5, #24]
   15890:	cmp	x2, x8
   15894:	str	x0, [x1]
   15898:	str	x1, [x0, #8]
   1589c:	b.eq	15a08 <GOMP_taskgroup_end@@GOMP_4.0+0x2f0>  // b.none
   158a0:	stp	xzr, xzr, [x26, #112]
   158a4:	ldr	x1, [x26, #8]
   158a8:	cbnz	x1, 15a88 <GOMP_taskgroup_end@@GOMP_4.0+0x370>
   158ac:	ldr	x0, [x26, #24]
   158b0:	mov	x1, x0
   158b4:	cbz	x0, 158c8 <GOMP_taskgroup_end@@GOMP_4.0+0x1b0>
   158b8:	stur	xzr, [x1, #-112]
   158bc:	ldr	x1, [x1]
   158c0:	cmp	x0, x1
   158c4:	b.ne	158b8 <GOMP_taskgroup_end@@GOMP_4.0+0x1a0>  // b.any
   158c8:	ldr	x5, [x26, #40]
   158cc:	cbz	x5, 15920 <GOMP_taskgroup_end@@GOMP_4.0+0x208>
   158d0:	ldr	x0, [x5, #8]
   158d4:	add	x2, x26, #0x80
   158d8:	cbnz	x0, 15c90 <GOMP_taskgroup_end@@GOMP_4.0+0x578>
   158dc:	ldp	x0, x1, [x26, #128]
   158e0:	add	x7, x5, #0x10
   158e4:	ldr	x9, [x7, #8]
   158e8:	mov	w8, #0x0                   	// #0
   158ec:	cmp	x2, x9
   158f0:	str	x0, [x1]
   158f4:	str	x1, [x0, #8]
   158f8:	b.eq	15af8 <GOMP_taskgroup_end@@GOMP_4.0+0x3e0>  // b.none
   158fc:	ldr	x0, [x5, #56]
   15900:	stp	xzr, xzr, [x26, #128]
   15904:	cmp	x0, #0x1
   15908:	b.ls	15b14 <GOMP_taskgroup_end@@GOMP_4.0+0x3fc>  // b.plast
   1590c:	sub	x0, x0, #0x1
   15910:	str	x0, [x5, #56]
   15914:	cbz	w8, 15920 <GOMP_taskgroup_end@@GOMP_4.0+0x208>
   15918:	ldrb	w0, [x5, #48]
   1591c:	cbnz	w0, 15b78 <GOMP_taskgroup_end@@GOMP_4.0+0x460>
   15920:	ldr	w0, [x21, #1320]
   15924:	cmp	x27, #0x1
   15928:	sub	w0, w0, #0x1
   1592c:	str	w0, [x21, #1320]
   15930:	b.ls	15954 <GOMP_taskgroup_end@@GOMP_4.0+0x23c>  // b.plast
   15934:	ldrb	w0, [x22, #204]
   15938:	ldr	w6, [x21]
   1593c:	ldr	w1, [x21, #1328]
   15940:	eor	w0, w0, #0x1
   15944:	sub	w6, w6, w1
   15948:	sub	w28, w6, w0
   1594c:	cmp	x27, w28, sxtw
   15950:	csel	w28, w27, w28, cc  // cc = lo, ul, last
   15954:	mov	x27, x26
   15958:	ldr	x0, [x20, #8]
   1595c:	cbz	x0, 157a8 <GOMP_taskgroup_end@@GOMP_4.0+0x90>
   15960:	ldp	x4, x3, [sp, #96]
   15964:	mov	x1, x25
   15968:	mov	w2, #0x0                   	// #0
   1596c:	mov	w0, #0x2                   	// #2
   15970:	bl	26410 <acc_set_cuda_stream@@OACC_2.0+0x278>
   15974:	mov	x26, x0
   15978:	cbnz	x0, 15a24 <GOMP_taskgroup_end@@GOMP_4.0+0x30c>
   1597c:	ldr	x0, [x25]
   15980:	ldr	x3, [x0, #8]
   15984:	sub	x26, x3, #0x80
   15988:	b	15a24 <GOMP_taskgroup_end@@GOMP_4.0+0x30c>
   1598c:	ldxr	w0, [x19]
   15990:	stlxr	w1, wzr, [x19]
   15994:	cbnz	w1, 1598c <GOMP_taskgroup_end@@GOMP_4.0+0x274>
   15998:	tbz	w0, #31, 159a8 <GOMP_taskgroup_end@@GOMP_4.0+0x290>
   1599c:	mov	x0, x19
   159a0:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   159a4:	nop
   159a8:	cbz	x27, 15cec <GOMP_taskgroup_end@@GOMP_4.0+0x5d4>
   159ac:	ldr	x0, [x27, #56]
   159b0:	cbnz	x0, 15d24 <GOMP_taskgroup_end@@GOMP_4.0+0x60c>
   159b4:	mov	x0, x27
   159b8:	bl	8900 <free@plt>
   159bc:	ldp	x25, x26, [sp, #64]
   159c0:	ldp	x27, x28, [sp, #80]
   159c4:	ldr	x0, [x20]
   159c8:	str	x0, [x22, #40]
   159cc:	mov	x0, x20
   159d0:	bl	8900 <free@plt>
   159d4:	ldp	x19, x20, [sp, #16]
   159d8:	ldp	x21, x22, [sp, #32]
   159dc:	ldp	x23, x24, [sp, #48]
   159e0:	ldp	x29, x30, [sp], #144
   159e4:	ret
   159e8:	mov	w1, w28
   159ec:	add	x0, x21, #0x80
   159f0:	bl	1abd8 <omp_get_num_procs@@OMP_1.0+0x530>
   159f4:	b	157e8 <GOMP_taskgroup_end@@GOMP_4.0+0xd0>
   159f8:	mov	x0, x19
   159fc:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   15a00:	cbz	w28, 157e8 <GOMP_taskgroup_end@@GOMP_4.0+0xd0>
   15a04:	b	159e8 <GOMP_taskgroup_end@@GOMP_4.0+0x2d0>
   15a08:	cmp	x2, x0
   15a0c:	b.eq	15ce0 <GOMP_taskgroup_end@@GOMP_4.0+0x5c8>  // b.none
   15a10:	str	x0, [x5, #24]
   15a14:	b	158a0 <GOMP_taskgroup_end@@GOMP_4.0+0x188>
   15a18:	sub	x26, x3, #0x80
   15a1c:	mov	w0, #0x1                   	// #1
   15a20:	strb	w0, [sp, #143]
   15a24:	ldr	w0, [x26, #200]
   15a28:	cmp	w0, #0x2
   15a2c:	b.ne	157c8 <GOMP_taskgroup_end@@GOMP_4.0+0xb0>  // b.any
   15a30:	ldr	x1, [x26]
   15a34:	mov	x2, x21
   15a38:	mov	x0, x26
   15a3c:	bl	122c8 <GOMP_single_copy_end@@GOMP_1.0+0xb40>
   15a40:	tst	w0, #0xff
   15a44:	b.eq	157d4 <GOMP_taskgroup_end@@GOMP_4.0+0xbc>  // b.none
   15a48:	cbz	x27, 1583c <GOMP_taskgroup_end@@GOMP_4.0+0x124>
   15a4c:	ldr	x0, [x27, #56]
   15a50:	cbnz	x0, 15d48 <GOMP_taskgroup_end@@GOMP_4.0+0x630>
   15a54:	mov	x0, x27
   15a58:	bl	8900 <free@plt>
   15a5c:	b	1583c <GOMP_taskgroup_end@@GOMP_4.0+0x124>
   15a60:	mov	w0, #0x1                   	// #1
   15a64:	sub	x26, x3, #0x70
   15a68:	strb	w0, [sp, #143]
   15a6c:	b	15a24 <GOMP_taskgroup_end@@GOMP_4.0+0x30c>
   15a70:	ldr	x0, [x26, #48]
   15a74:	mov	x27, #0x0                   	// #0
   15a78:	cbnz	x0, 1585c <GOMP_taskgroup_end@@GOMP_4.0+0x144>
   15a7c:	ldr	x1, [x26, #8]
   15a80:	cbz	x1, 158ac <GOMP_taskgroup_end@@GOMP_4.0+0x194>
   15a84:	nop
   15a88:	add	x0, x26, #0x8
   15a8c:	bl	118a8 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   15a90:	str	xzr, [x26, #8]
   15a94:	b	158c8 <GOMP_taskgroup_end@@GOMP_4.0+0x1b0>
   15a98:	ldr	w1, [x20, #52]
   15a9c:	add	x0, x20, #0x34
   15aa0:	tst	x1, #0x7fffffff
   15aa4:	b.eq	15d1c <GOMP_taskgroup_end@@GOMP_4.0+0x604>  // b.none
   15aa8:	sub	w4, w1, #0x1
   15aac:	ldaxr	w2, [x0]
   15ab0:	cmp	w2, w1
   15ab4:	b.ne	15ac0 <GOMP_taskgroup_end@@GOMP_4.0+0x3a8>  // b.any
   15ab8:	stxr	w3, w4, [x0]
   15abc:	cmp	w3, #0x0
   15ac0:	mov	w1, w2
   15ac4:	b.ne	15aa0 <GOMP_taskgroup_end@@GOMP_4.0+0x388>  // b.any
   15ac8:	mov	w0, #0x1                   	// #1
   15acc:	ldaxr	w1, [x19]
   15ad0:	cbnz	w1, 15adc <GOMP_taskgroup_end@@GOMP_4.0+0x3c4>
   15ad4:	stxr	w2, w0, [x19]
   15ad8:	cbnz	w2, 15acc <GOMP_taskgroup_end@@GOMP_4.0+0x3b4>
   15adc:	cmp	w1, #0x0
   15ae0:	mov	w28, #0x0                   	// #0
   15ae4:	b.eq	15954 <GOMP_taskgroup_end@@GOMP_4.0+0x23c>  // b.none
   15ae8:	mov	x0, x19
   15aec:	mov	x27, x26
   15af0:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   15af4:	b	15958 <GOMP_taskgroup_end@@GOMP_4.0+0x240>
   15af8:	cmp	x2, x0
   15afc:	b.eq	15cf8 <GOMP_taskgroup_end@@GOMP_4.0+0x5e0>  // b.none
   15b00:	str	x0, [x7, #8]
   15b04:	ldr	x0, [x5, #56]
   15b08:	stp	xzr, xzr, [x26, #128]
   15b0c:	cmp	x0, #0x1
   15b10:	b.hi	1590c <GOMP_taskgroup_end@@GOMP_4.0+0x1f4>  // b.pmore
   15b14:	add	x0, x5, #0x38
   15b18:	stlr	xzr, [x0]
   15b1c:	b	15914 <GOMP_taskgroup_end@@GOMP_4.0+0x1fc>
   15b20:	bl	21210 <GOMP_target_enter_exit_data@@GOMP_4.5+0x240>
   15b24:	tst	w0, #0xff
   15b28:	b.eq	15814 <GOMP_taskgroup_end@@GOMP_4.0+0xfc>  // b.none
   15b2c:	mov	w0, #0x1                   	// #1
   15b30:	str	x22, [x27, #80]
   15b34:	ldaxr	w1, [x19]
   15b38:	cbnz	w1, 15b44 <GOMP_taskgroup_end@@GOMP_4.0+0x42c>
   15b3c:	stxr	w2, w0, [x19]
   15b40:	cbnz	w2, 15b34 <GOMP_taskgroup_end@@GOMP_4.0+0x41c>
   15b44:	cmp	w1, #0x0
   15b48:	b.ne	15d50 <GOMP_taskgroup_end@@GOMP_4.0+0x638>  // b.any
   15b4c:	ldr	x0, [x26, #192]
   15b50:	mov	w1, #0x4                   	// #4
   15b54:	ldr	w2, [x0, #44]
   15b58:	str	w1, [x26, #200]
   15b5c:	cmp	w2, #0x5
   15b60:	b.eq	15d2c <GOMP_taskgroup_end@@GOMP_4.0+0x614>  // b.none
   15b64:	mov	x26, #0x0                   	// #0
   15b68:	mov	w28, #0x0                   	// #0
   15b6c:	mov	x27, x26
   15b70:	str	w1, [x0, #44]
   15b74:	b	15958 <GOMP_taskgroup_end@@GOMP_4.0+0x240>
   15b78:	ldr	w1, [x5, #52]
   15b7c:	add	x0, x5, #0x34
   15b80:	strb	wzr, [x5, #48]
   15b84:	add	w2, w1, #0x1
   15b88:	and	w2, w2, #0x7fffffff
   15b8c:	ldxr	w5, [x0]
   15b90:	cmp	w5, w1
   15b94:	b.ne	15ba0 <GOMP_taskgroup_end@@GOMP_4.0+0x488>  // b.any
   15b98:	stlxr	w3, w2, [x0]
   15b9c:	cmp	w3, #0x0
   15ba0:	mov	w1, w5
   15ba4:	b.ne	15b84 <GOMP_taskgroup_end@@GOMP_4.0+0x46c>  // b.any
   15ba8:	tbz	w5, #31, 15920 <GOMP_taskgroup_end@@GOMP_4.0+0x208>
   15bac:	bl	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
   15bb0:	b	15920 <GOMP_taskgroup_end@@GOMP_4.0+0x208>
   15bb4:	mov	x27, #0x0                   	// #0
   15bb8:	ldr	x5, [x26]
   15bbc:	b	15870 <GOMP_taskgroup_end@@GOMP_4.0+0x158>
   15bc0:	bl	8900 <free@plt>
   15bc4:	b	157f4 <GOMP_taskgroup_end@@GOMP_4.0+0xdc>
   15bc8:	ldr	x1, [x5, #64]
   15bcc:	ldr	x0, [x1, #8]
   15bd0:	sub	x0, x0, #0x1
   15bd4:	str	x0, [x1, #8]
   15bd8:	cbnz	x0, 1587c <GOMP_taskgroup_end@@GOMP_4.0+0x164>
   15bdc:	ldrb	w0, [x1, #1]
   15be0:	cbz	w0, 1587c <GOMP_taskgroup_end@@GOMP_4.0+0x164>
   15be4:	ldr	w2, [x1, #16]
   15be8:	add	x0, x1, #0x10
   15bec:	strb	wzr, [x1, #1]
   15bf0:	add	w1, w2, #0x1
   15bf4:	and	w1, w1, #0x7fffffff
   15bf8:	ldxr	w7, [x0]
   15bfc:	cmp	w7, w2
   15c00:	b.ne	15c0c <GOMP_taskgroup_end@@GOMP_4.0+0x4f4>  // b.any
   15c04:	stlxr	w3, w1, [x0]
   15c08:	cmp	w3, #0x0
   15c0c:	mov	w2, w7
   15c10:	b.ne	15bf0 <GOMP_taskgroup_end@@GOMP_4.0+0x4d8>  // b.any
   15c14:	tbz	w7, #31, 1587c <GOMP_taskgroup_end@@GOMP_4.0+0x164>
   15c18:	str	x5, [sp, #112]
   15c1c:	bl	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
   15c20:	ldr	x5, [sp, #112]
   15c24:	b	1587c <GOMP_taskgroup_end@@GOMP_4.0+0x164>
   15c28:	add	x1, x5, #0x8
   15c2c:	mov	w0, #0x1                   	// #1
   15c30:	stp	x1, x5, [sp, #112]
   15c34:	bl	265d8 <acc_set_cuda_stream@@OACC_2.0+0x440>
   15c38:	ldp	x1, x5, [sp, #112]
   15c3c:	ldr	x0, [x5, #8]
   15c40:	cbnz	x0, 158a0 <GOMP_taskgroup_end@@GOMP_4.0+0x188>
   15c44:	stlr	xzr, [x1]
   15c48:	ldr	x0, [x5, #64]
   15c4c:	cbz	x0, 158a0 <GOMP_taskgroup_end@@GOMP_4.0+0x188>
   15c50:	ldrb	w1, [x0]
   15c54:	cbz	w1, 158a0 <GOMP_taskgroup_end@@GOMP_4.0+0x188>
   15c58:	ldr	w1, [x0, #16]
   15c5c:	strb	wzr, [x0], #16
   15c60:	add	w2, w1, #0x1
   15c64:	and	w2, w2, #0x7fffffff
   15c68:	ldxr	w5, [x0]
   15c6c:	cmp	w5, w1
   15c70:	b.ne	15c7c <GOMP_taskgroup_end@@GOMP_4.0+0x564>  // b.any
   15c74:	stlxr	w3, w2, [x0]
   15c78:	cmp	w3, #0x0
   15c7c:	mov	w1, w5
   15c80:	b.ne	15c60 <GOMP_taskgroup_end@@GOMP_4.0+0x548>  // b.any
   15c84:	tbz	w5, #31, 158a0 <GOMP_taskgroup_end@@GOMP_4.0+0x188>
   15c88:	bl	1a978 <omp_get_num_procs@@OMP_1.0+0x2d0>
   15c8c:	b	158a0 <GOMP_taskgroup_end@@GOMP_4.0+0x188>
   15c90:	add	x1, x5, #0x8
   15c94:	mov	w0, #0x2                   	// #2
   15c98:	str	x5, [sp, #112]
   15c9c:	bl	265d8 <acc_set_cuda_stream@@OACC_2.0+0x440>
   15ca0:	ldr	x5, [sp, #112]
   15ca4:	ldr	x0, [x5, #8]
   15ca8:	cmp	x0, #0x0
   15cac:	cset	w8, eq  // eq = none
   15cb0:	b	158fc <GOMP_taskgroup_end@@GOMP_4.0+0x1e4>
   15cb4:	ldp	x4, x3, [sp, #96]
   15cb8:	add	x1, x22, #0x8
   15cbc:	mov	w2, #0x0                   	// #0
   15cc0:	mov	w0, #0x1                   	// #1
   15cc4:	bl	26410 <acc_set_cuda_stream@@OACC_2.0+0x278>
   15cc8:	mov	x26, x0
   15ccc:	cbnz	x0, 15a24 <GOMP_taskgroup_end@@GOMP_4.0+0x30c>
   15cd0:	ldr	x0, [x22, #8]
   15cd4:	ldr	x3, [x0, #8]
   15cd8:	sub	x26, x3, #0x70
   15cdc:	b	15a24 <GOMP_taskgroup_end@@GOMP_4.0+0x30c>
   15ce0:	add	x0, x5, #0x18
   15ce4:	stlr	xzr, [x0]
   15ce8:	b	15c48 <GOMP_taskgroup_end@@GOMP_4.0+0x530>
   15cec:	ldp	x25, x26, [sp, #64]
   15cf0:	ldp	x27, x28, [sp, #80]
   15cf4:	b	159c4 <GOMP_taskgroup_end@@GOMP_4.0+0x2ac>
   15cf8:	mov	w8, #0x1                   	// #1
   15cfc:	str	xzr, [x7, #8]
   15d00:	b	158fc <GOMP_taskgroup_end@@GOMP_4.0+0x1e4>
   15d04:	ldr	w0, [x0, #44]
   15d08:	cbnz	w0, 15750 <GOMP_taskgroup_end@@GOMP_4.0+0x38>
   15d0c:	add	x0, x21, #0x80
   15d10:	bl	1ae58 <omp_get_num_procs@@OMP_1.0+0x7b0>
   15d14:	ldp	x19, x20, [sp, #16]
   15d18:	b	159d8 <GOMP_taskgroup_end@@GOMP_4.0+0x2c0>
   15d1c:	bl	1a6b0 <omp_get_num_procs@@OMP_1.0+0x8>
   15d20:	b	15ac8 <GOMP_taskgroup_end@@GOMP_4.0+0x3b0>
   15d24:	bl	8900 <free@plt>
   15d28:	b	159b4 <GOMP_taskgroup_end@@GOMP_4.0+0x29c>
   15d2c:	mov	x1, x26
   15d30:	mov	x0, x21
   15d34:	mov	x26, #0x0                   	// #0
   15d38:	mov	w28, #0x0                   	// #0
   15d3c:	mov	x27, x26
   15d40:	bl	12bf8 <GOMP_single_copy_end@@GOMP_1.0+0x1470>
   15d44:	b	15958 <GOMP_taskgroup_end@@GOMP_4.0+0x240>
   15d48:	bl	8900 <free@plt>
   15d4c:	b	15a54 <GOMP_taskgroup_end@@GOMP_4.0+0x33c>
   15d50:	mov	x0, x19
   15d54:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   15d58:	b	15b4c <GOMP_taskgroup_end@@GOMP_4.0+0x434>
   15d5c:	mov	x0, x19
   15d60:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   15d64:	b	15784 <GOMP_taskgroup_end@@GOMP_4.0+0x6c>
   15d68:	mov	x0, x19
   15d6c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   15d70:	b	1583c <GOMP_taskgroup_end@@GOMP_4.0+0x124>
   15d74:	nop

0000000000015d78 <GOMP_taskgroup_reduction_register@@GOMP_5.0>:
   15d78:	stp	x29, x30, [sp, #-96]!
   15d7c:	mov	x29, sp
   15d80:	stp	x19, x20, [sp, #16]
   15d84:	mrs	x19, tpidr_el0
   15d88:	adrp	x20, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   15d8c:	ldr	x20, [x20, #4016]
   15d90:	stp	x21, x22, [sp, #32]
   15d94:	add	x21, x19, x20
   15d98:	stp	x23, x24, [sp, #48]
   15d9c:	ldr	x1, [x21, #16]
   15da0:	stp	x25, x26, [sp, #64]
   15da4:	mov	x25, x0
   15da8:	cbz	x1, 15f10 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x198>
   15dac:	add	x0, x19, x20
   15db0:	ldr	w22, [x1]
   15db4:	mov	x19, x25
   15db8:	mov	x23, #0x0                   	// #0
   15dbc:	ldr	x26, [x0, #80]
   15dc0:	ldr	x0, [x26, #40]
   15dc4:	ldr	x24, [x0, #40]
   15dc8:	b	15dd0 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x58>
   15dcc:	mov	x19, x0
   15dd0:	ldp	x20, x0, [x19, #8]
   15dd4:	mul	x20, x22, x20
   15dd8:	mov	x1, x20
   15ddc:	bl	b2d0 <fprintf@plt+0x27c0>
   15de0:	mov	x2, x20
   15de4:	mov	x21, x0
   15de8:	mov	w1, #0x0                   	// #0
   15dec:	bl	87c0 <memset@plt>
   15df0:	ldr	x0, [x19, #32]
   15df4:	add	x20, x20, x21
   15df8:	ldr	x1, [x19]
   15dfc:	str	x21, [x19, #16]
   15e00:	stp	xzr, x20, [x19, #40]
   15e04:	add	x23, x23, x1
   15e08:	cbnz	x0, 15dcc <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x54>
   15e0c:	str	x24, [x19, #32]
   15e10:	cbz	x24, 15e1c <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xa4>
   15e14:	ldr	x20, [x24, #40]
   15e18:	cbnz	x20, 15e84 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x10c>
   15e1c:	mov	x0, x23
   15e20:	bl	11910 <GOMP_single_copy_end@@GOMP_1.0+0x188>
   15e24:	str	x0, [sp, #88]
   15e28:	mov	x22, x25
   15e2c:	add	x23, sp, #0x58
   15e30:	ldr	x0, [x22]
   15e34:	add	x20, x22, #0x38
   15e38:	mov	x21, #0x0                   	// #0
   15e3c:	cbz	x0, 15e70 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xf8>
   15e40:	str	x22, [x20, #16]
   15e44:	mov	x19, x20
   15e48:	mov	x0, x23
   15e4c:	mov	w2, #0x1                   	// #1
   15e50:	mov	x1, x19
   15e54:	bl	11a80 <GOMP_single_copy_end@@GOMP_1.0+0x2f8>
   15e58:	ldr	x1, [x22]
   15e5c:	str	x19, [x0]
   15e60:	add	x21, x21, #0x1
   15e64:	add	x20, x20, #0x18
   15e68:	cmp	x21, x1
   15e6c:	b.cc	15e40 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xc8>  // b.lo, b.ul, b.last
   15e70:	ldr	x0, [x22, #32]
   15e74:	cmp	x24, x0
   15e78:	b.eq	15ee8 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x170>  // b.none
   15e7c:	mov	x22, x0
   15e80:	b	15e30 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xb8>
   15e84:	ldp	x0, x1, [x20, #8]
   15e88:	mov	x19, x20
   15e8c:	sub	x0, x0, x1
   15e90:	add	x0, x0, x23
   15e94:	bl	11910 <GOMP_single_copy_end@@GOMP_1.0+0x188>
   15e98:	mov	x22, x0
   15e9c:	ldp	x0, x1, [x20, #8]
   15ea0:	ldr	x21, [x19], #32
   15ea4:	str	x22, [sp, #88]
   15ea8:	sub	x0, x0, x1
   15eac:	add	x21, x19, x21, lsl #3
   15eb0:	str	x0, [x22, #8]
   15eb4:	b	15ec0 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x148>
   15eb8:	cmp	x21, x19
   15ebc:	b.ls	15e28 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xb0>  // b.plast
   15ec0:	ldr	x20, [x19]
   15ec4:	add	x19, x19, #0x8
   15ec8:	cmp	x20, #0x1
   15ecc:	b.ls	15eb8 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x140>  // b.plast
   15ed0:	ldr	x1, [x20]
   15ed4:	mov	x0, x22
   15ed8:	eor	x1, x1, x1, lsr #32
   15edc:	bl	119c0 <GOMP_single_copy_end@@GOMP_1.0+0x238>
   15ee0:	str	x20, [x0]
   15ee4:	b	15eb8 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x140>
   15ee8:	ldr	x0, [x26, #40]
   15eec:	ldr	x1, [sp, #88]
   15ef0:	ldp	x19, x20, [sp, #16]
   15ef4:	ldp	x23, x24, [sp, #48]
   15ef8:	str	x1, [x22, #40]
   15efc:	ldp	x21, x22, [sp, #32]
   15f00:	str	x25, [x0, #40]
   15f04:	ldp	x25, x26, [sp, #64]
   15f08:	ldp	x29, x30, [sp], #96
   15f0c:	ret
   15f10:	bl	121c0 <GOMP_single_copy_end@@GOMP_1.0+0xa38>
   15f14:	bl	156a0 <GOMP_taskgroup_start@@GOMP_4.0>
   15f18:	ldr	x1, [x21, #16]
   15f1c:	b	15dac <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x34>

0000000000015f20 <GOMP_taskloop@@GOMP_4.5>:
   15f20:	adrp	x10, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   15f24:	ldr	x10, [x10, #4016]
   15f28:	mrs	x11, tpidr_el0
   15f2c:	stp	x29, x30, [sp, #-416]!
   15f30:	add	x8, x11, x10
   15f34:	mov	x29, sp
   15f38:	stp	x19, x20, [sp, #16]
   15f3c:	mov	w19, w7
   15f40:	ldr	x20, [x8, #16]
   15f44:	stp	x21, x22, [sp, #32]
   15f48:	mov	w22, w5
   15f4c:	stp	x23, x24, [sp, #48]
   15f50:	stp	x25, x26, [sp, #64]
   15f54:	mov	x25, x2
   15f58:	stp	x27, x28, [sp, #80]
   15f5c:	mov	x28, x1
   15f60:	stp	x3, x0, [x29, #184]
   15f64:	ldr	x24, [x29, #416]
   15f68:	ldr	x3, [x29, #424]
   15f6c:	cbz	x20, 15f78 <GOMP_taskloop@@GOMP_4.5+0x58>
   15f70:	ldr	w0, [x20, #132]
   15f74:	tbnz	w0, #2, 161e4 <GOMP_taskloop@@GOMP_4.5+0x2c4>
   15f78:	ldr	x0, [x29, #432]
   15f7c:	cmp	x0, #0x0
   15f80:	b.le	16204 <GOMP_taskloop@@GOMP_4.5+0x2e4>
   15f84:	cmp	x24, x3
   15f88:	b.ge	161e4 <GOMP_taskloop@@GOMP_4.5+0x2c4>  // b.tcont
   15f8c:	sub	x21, x0, #0x1
   15f90:	sub	x23, x3, x24
   15f94:	ldr	x0, [x29, #432]
   15f98:	add	x21, x23, x21
   15f9c:	sdiv	x21, x21, x0
   15fa0:	tbz	w22, #9, 16228 <GOMP_taskloop@@GOMP_4.5+0x308>
   15fa4:	udiv	x0, x21, x6
   15fa8:	str	x0, [x29, #200]
   15fac:	cmp	x0, #0x1
   15fb0:	b.ls	16468 <GOMP_taskloop@@GOMP_4.5+0x548>  // b.plast
   15fb4:	cmp	x6, x0
   15fb8:	b.hi	1649c <GOMP_taskloop@@GOMP_4.5+0x57c>  // b.pmore
   15fbc:	ldr	x1, [x29, #432]
   15fc0:	mul	x0, x6, x0
   15fc4:	cmp	x21, x0
   15fc8:	mul	x23, x6, x1
   15fcc:	b.eq	15fe0 <GOMP_taskloop@@GOMP_4.5+0xc0>  // b.none
   15fd0:	sub	x21, x21, x0
   15fd4:	add	x23, x23, x1
   15fd8:	sub	x21, x21, #0x1
   15fdc:	nop
   15fe0:	and	w0, w22, #0x800
   15fe4:	str	w0, [x29, #164]
   15fe8:	tbz	w22, #11, 1642c <GOMP_taskloop@@GOMP_4.5+0x50c>
   15fec:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   15ff0:	ldrb	w0, [x0, #1364]
   15ff4:	cbnz	w0, 16b24 <GOMP_taskloop@@GOMP_4.5+0xc04>
   15ff8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   15ffc:	ldr	w7, [x0, #1368]
   16000:	cmp	w7, w19
   16004:	csel	w19, w7, w19, le
   16008:	tst	x22, #0x400
   1600c:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   16010:	b.ne	16260 <GOMP_taskloop@@GOMP_4.5+0x340>  // b.any
   16014:	cbnz	x25, 16818 <GOMP_taskloop@@GOMP_4.5+0x8f8>
   16018:	ldr	x0, [x29, #200]
   1601c:	cbz	x0, 161d8 <GOMP_taskloop@@GOMP_4.5+0x2b8>
   16020:	add	x11, x11, x10
   16024:	and	w0, w22, #0x2
   16028:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1602c:	mov	x22, #0x0                   	// #0
   16030:	add	x1, x29, #0xd0
   16034:	str	w0, [x29, #176]
   16038:	add	x0, x26, #0x2b8
   1603c:	mov	x27, x23
   16040:	add	x26, x29, #0x160
   16044:	mov	x23, x24
   16048:	mov	x25, #0x1                   	// #1
   1604c:	mov	x24, x11
   16050:	str	x20, [x29, #168]
   16054:	mov	x20, x28
   16058:	mov	x28, x22
   1605c:	mov	w22, w19
   16060:	mov	x19, x1
   16064:	str	x0, [x29, #184]
   16068:	ldr	x0, [x11, #80]
   1606c:	b	16094 <GOMP_taskloop@@GOMP_4.5+0x174>
   16070:	ldr	x1, [x24, #80]
   16074:	ldr	x0, [x1, #56]
   16078:	cbnz	x0, 161b0 <GOMP_taskloop@@GOMP_4.5+0x290>
   1607c:	ldr	x0, [x1]
   16080:	str	x0, [x24, #80]
   16084:	ldr	x1, [x29, #200]
   16088:	add	x28, x28, #0x1
   1608c:	cmp	x1, x28
   16090:	b.eq	161d8 <GOMP_taskloop@@GOMP_4.5+0x2b8>  // b.none
   16094:	ldr	x2, [x29, #184]
   16098:	cmp	x0, #0x0
   1609c:	add	x1, x0, #0x90
   160a0:	csel	x1, x2, x1, eq  // eq = none
   160a4:	ldp	x4, x5, [x1]
   160a8:	stp	x4, x5, [x26]
   160ac:	ldp	x4, x5, [x1, #16]
   160b0:	stp	x4, x5, [x26, #16]
   160b4:	ldr	x1, [x1, #32]
   160b8:	stp	x0, xzr, [x29, #208]
   160bc:	stp	xzr, xzr, [x29, #232]
   160c0:	str	x25, [x29, #408]
   160c4:	str	x1, [x26, #32]
   160c8:	stp	xzr, xzr, [x29, #248]
   160cc:	stp	xzr, xzr, [x29, #264]
   160d0:	str	xzr, [x29, #280]
   160d4:	str	w22, [x29, #296]
   160d8:	cbz	x0, 16474 <GOMP_taskloop@@GOMP_4.5+0x554>
   160dc:	ldrb	w1, [x0, #205]
   160e0:	cbnz	w1, 160ec <GOMP_taskloop@@GOMP_4.5+0x1cc>
   160e4:	ldr	w1, [x29, #176]
   160e8:	cbz	w1, 160f4 <GOMP_taskloop@@GOMP_4.5+0x1d4>
   160ec:	mov	w1, #0x1                   	// #1
   160f0:	strb	w1, [x29, #413]
   160f4:	ldrb	w1, [x0, #204]
   160f8:	ldr	x0, [x0, #40]
   160fc:	str	x0, [x29, #248]
   16100:	strb	w1, [x29, #412]
   16104:	ldr	x1, [x29, #192]
   16108:	cmp	x21, x28
   1610c:	ldr	x0, [x29, #432]
   16110:	str	x19, [x24, #80]
   16114:	str	x23, [x20]
   16118:	add	x23, x23, x27
   1611c:	str	x23, [x20, #8]
   16120:	sub	x0, x27, x0
   16124:	csel	x27, x0, x27, eq  // eq = none
   16128:	mov	x0, x20
   1612c:	blr	x1
   16130:	ldr	x0, [x29, #216]
   16134:	cbnz	x0, 16140 <GOMP_taskloop@@GOMP_4.5+0x220>
   16138:	ldr	x0, [x29, #232]
   1613c:	cbz	x0, 16070 <GOMP_taskloop@@GOMP_4.5+0x150>
   16140:	ldr	x0, [x29, #168]
   16144:	add	x4, x0, #0x500
   16148:	mov	w0, #0x1                   	// #1
   1614c:	ldaxr	w1, [x4]
   16150:	cbnz	w1, 1615c <GOMP_taskloop@@GOMP_4.5+0x23c>
   16154:	stxr	w2, w0, [x4]
   16158:	cbnz	w2, 1614c <GOMP_taskloop@@GOMP_4.5+0x22c>
   1615c:	cmp	w1, #0x0
   16160:	b.ne	16c84 <GOMP_taskloop@@GOMP_4.5+0xd64>  // b.any
   16164:	ldr	x1, [x29, #216]
   16168:	cbnz	x1, 16484 <GOMP_taskloop@@GOMP_4.5+0x564>
   1616c:	ldr	x1, [x29, #232]
   16170:	mov	x0, x1
   16174:	cbz	x1, 16188 <GOMP_taskloop@@GOMP_4.5+0x268>
   16178:	stur	xzr, [x0, #-112]
   1617c:	ldr	x0, [x0]
   16180:	cmp	x1, x0
   16184:	b.ne	16178 <GOMP_taskloop@@GOMP_4.5+0x258>  // b.any
   16188:	ldxr	w0, [x4]
   1618c:	stlxr	w1, wzr, [x4]
   16190:	cbnz	w1, 16188 <GOMP_taskloop@@GOMP_4.5+0x268>
   16194:	tbz	w0, #31, 16070 <GOMP_taskloop@@GOMP_4.5+0x150>
   16198:	mov	x0, x4
   1619c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   161a0:	ldr	x1, [x24, #80]
   161a4:	ldr	x0, [x1, #56]
   161a8:	cbz	x0, 1607c <GOMP_taskloop@@GOMP_4.5+0x15c>
   161ac:	nop
   161b0:	str	x1, [x29, #152]
   161b4:	bl	8900 <free@plt>
   161b8:	ldr	x1, [x29, #152]
   161bc:	add	x28, x28, #0x1
   161c0:	ldr	x0, [x1]
   161c4:	str	x0, [x24, #80]
   161c8:	ldr	x1, [x29, #200]
   161cc:	cmp	x1, x28
   161d0:	b.ne	16094 <GOMP_taskloop@@GOMP_4.5+0x174>  // b.any
   161d4:	nop
   161d8:	ldr	w0, [x29, #164]
   161dc:	cbnz	w0, 161e4 <GOMP_taskloop@@GOMP_4.5+0x2c4>
   161e0:	bl	15718 <GOMP_taskgroup_end@@GOMP_4.0>
   161e4:	mov	sp, x29
   161e8:	ldp	x19, x20, [sp, #16]
   161ec:	ldp	x21, x22, [sp, #32]
   161f0:	ldp	x23, x24, [sp, #48]
   161f4:	ldp	x25, x26, [sp, #64]
   161f8:	ldp	x27, x28, [sp, #80]
   161fc:	ldp	x29, x30, [sp], #416
   16200:	ret
   16204:	cmp	x24, x3
   16208:	b.le	161e4 <GOMP_taskloop@@GOMP_4.5+0x2c4>
   1620c:	ldr	x0, [x29, #432]
   16210:	sub	x23, x3, x24
   16214:	add	x21, x0, #0x1
   16218:	ldr	x0, [x29, #432]
   1621c:	add	x21, x23, x21
   16220:	sdiv	x21, x21, x0
   16224:	tbnz	w22, #9, 15fa4 <GOMP_taskloop@@GOMP_4.5+0x84>
   16228:	cbnz	x6, 16234 <GOMP_taskloop@@GOMP_4.5+0x314>
   1622c:	cbz	x20, 16458 <GOMP_taskloop@@GOMP_4.5+0x538>
   16230:	ldr	w6, [x20]
   16234:	cmp	x6, x21
   16238:	b.cs	16418 <GOMP_taskloop@@GOMP_4.5+0x4f8>  // b.hs, b.nlast
   1623c:	udiv	x3, x21, x6
   16240:	str	x6, [x29, #200]
   16244:	ldr	x0, [x29, #432]
   16248:	msub	x6, x3, x6, x21
   1624c:	mul	x23, x3, x0
   16250:	cbz	x6, 15fe0 <GOMP_taskloop@@GOMP_4.5+0xc0>
   16254:	add	x23, x23, x0
   16258:	sub	x21, x6, #0x1
   1625c:	b	15fe0 <GOMP_taskloop@@GOMP_4.5+0xc0>
   16260:	add	x0, x11, x10
   16264:	ldr	x27, [x0, #80]
   16268:	cbz	x27, 16274 <GOMP_taskloop@@GOMP_4.5+0x354>
   1626c:	ldrb	w0, [x27, #205]
   16270:	cbnz	w0, 16014 <GOMP_taskloop@@GOMP_4.5+0xf4>
   16274:	ldr	w0, [x20]
   16278:	ldr	x2, [x29, #200]
   1627c:	ldr	w1, [x20, #1320]
   16280:	lsl	w0, w0, #6
   16284:	add	x1, x1, x2
   16288:	cmp	x1, x0
   1628c:	b.hi	16014 <GOMP_taskloop@@GOMP_4.5+0xf4>  // b.pmore
   16290:	ldr	x1, [x29, #200]
   16294:	mov	x2, sp
   16298:	str	x2, [x29, #104]
   1629c:	ldr	x26, [x27, #40]
   162a0:	lsl	x0, x1, #3
   162a4:	add	x0, x0, #0xf
   162a8:	and	x0, x0, #0xfffffffffffffff0
   162ac:	sub	sp, sp, x0
   162b0:	mov	x0, sp
   162b4:	str	x0, [x29, #176]
   162b8:	cbz	x1, 164cc <GOMP_taskloop@@GOMP_4.5+0x5ac>
   162bc:	ubfx	x1, x22, #1, #1
   162c0:	add	x0, x4, #0xcf
   162c4:	stp	x0, x1, [x29, #136]
   162c8:	neg	x1, x4
   162cc:	mov	x22, #0x0                   	// #0
   162d0:	str	x1, [x29, #128]
   162d4:	add	x10, x11, x10
   162d8:	ldr	x1, [x29, #184]
   162dc:	str	x20, [x29, #96]
   162e0:	str	x21, [x29, #112]
   162e4:	mov	x21, x10
   162e8:	add	x1, x0, x1
   162ec:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   162f0:	add	x0, x0, #0x2b8
   162f4:	str	x0, [x29, #120]
   162f8:	mov	x0, x22
   162fc:	mov	x20, x1
   16300:	mov	x22, x23
   16304:	mov	x23, x0
   16308:	str	x26, [x29, #152]
   1630c:	str	w19, [x29, #168]
   16310:	b	1636c <GOMP_taskloop@@GOMP_4.5+0x44c>
   16314:	blr	x25
   16318:	mov	w0, #0x1                   	// #1
   1631c:	strb	w0, [x19, #206]
   16320:	ldr	x0, [x29, #112]
   16324:	str	x24, [x26]
   16328:	add	x24, x24, x22
   1632c:	str	x24, [x26, #8]
   16330:	cmp	x0, x23
   16334:	add	x23, x23, #0x1
   16338:	ldr	x0, [x29, #192]
   1633c:	stp	x0, x26, [x19, #184]
   16340:	ldr	x0, [x29, #432]
   16344:	str	x27, [x21, #80]
   16348:	sub	x0, x22, x0
   1634c:	csel	x22, x0, x22, eq  // eq = none
   16350:	mov	w0, #0x2                   	// #2
   16354:	str	w0, [x19, #200]
   16358:	ldr	x0, [x29, #200]
   1635c:	cmp	x0, x23
   16360:	ldrb	w0, [x29, #144]
   16364:	strb	w0, [x19, #205]
   16368:	b.eq	164c0 <GOMP_taskloop@@GOMP_4.5+0x5a0>  // b.none
   1636c:	mov	x0, x20
   16370:	bl	b220 <fprintf@plt+0x2710>
   16374:	mov	x19, x0
   16378:	mov	x11, x0
   1637c:	ldr	x0, [x29, #176]
   16380:	mov	x1, x28
   16384:	ldr	x2, [x21, #80]
   16388:	str	x27, [x11], #144
   1638c:	str	x19, [x0, x23, lsl #3]
   16390:	cmp	x2, #0x0
   16394:	add	x0, x2, #0x90
   16398:	ldr	x2, [x29, #120]
   1639c:	ldr	x3, [x29, #136]
   163a0:	csel	x0, x2, x0, eq  // eq = none
   163a4:	mov	x2, #0x1                   	// #1
   163a8:	add	x4, x19, x3
   163ac:	ldp	x8, x9, [x0]
   163b0:	stp	x8, x9, [x19, #144]
   163b4:	ldp	x8, x9, [x0, #16]
   163b8:	stp	x8, x9, [x11, #16]
   163bc:	ldr	x0, [x0, #32]
   163c0:	str	x0, [x11, #32]
   163c4:	str	x2, [x19, #200]
   163c8:	ldr	x0, [x29, #128]
   163cc:	str	xzr, [x19, #8]
   163d0:	ldr	x3, [x29, #152]
   163d4:	stp	xzr, xzr, [x19, #24]
   163d8:	ldrb	w2, [x27, #204]
   163dc:	str	x3, [x19, #40]
   163e0:	and	x26, x4, x0
   163e4:	ldr	w3, [x29, #168]
   163e8:	mov	x0, x26
   163ec:	str	xzr, [x19, #48]
   163f0:	str	xzr, [x19, #56]
   163f4:	str	xzr, [x19, #64]
   163f8:	str	xzr, [x19, #72]
   163fc:	str	x19, [x21, #80]
   16400:	str	w3, [x19, #88]
   16404:	strb	w2, [x19, #204]
   16408:	cbnz	x25, 16314 <GOMP_taskloop@@GOMP_4.5+0x3f4>
   1640c:	ldr	x2, [x29, #184]
   16410:	bl	85c0 <memcpy@plt>
   16414:	b	16320 <GOMP_taskloop@@GOMP_4.5+0x400>
   16418:	and	w0, w22, #0x800
   1641c:	str	w0, [x29, #164]
   16420:	str	x21, [x29, #200]
   16424:	ldr	x23, [x29, #432]
   16428:	tbnz	w22, #11, 15fec <GOMP_taskloop@@GOMP_4.5+0xcc>
   1642c:	str	x11, [x29, #152]
   16430:	stp	x10, x4, [x29, #168]
   16434:	bl	156a0 <GOMP_taskgroup_start@@GOMP_4.0>
   16438:	ldr	x11, [x29, #152]
   1643c:	ldp	x10, x4, [x29, #168]
   16440:	tbz	w22, #12, 15ff8 <GOMP_taskloop@@GOMP_4.5+0xd8>
   16444:	ldr	x0, [x28, #16]
   16448:	bl	15d78 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   1644c:	ldr	x11, [x29, #152]
   16450:	ldp	x10, x4, [x29, #168]
   16454:	b	15ff8 <GOMP_taskloop@@GOMP_4.5+0xd8>
   16458:	cmp	x21, #0x1
   1645c:	b.ls	16418 <GOMP_taskloop@@GOMP_4.5+0x4f8>  // b.plast
   16460:	ldr	x0, [x29, #432]
   16464:	mul	x23, x21, x0
   16468:	mov	x0, #0x1                   	// #1
   1646c:	str	x0, [x29, #200]
   16470:	b	15fe0 <GOMP_taskloop@@GOMP_4.5+0xc0>
   16474:	ldr	w0, [x29, #176]
   16478:	cbz	w0, 16104 <GOMP_taskloop@@GOMP_4.5+0x1e4>
   1647c:	strb	w25, [x29, #413]
   16480:	b	16104 <GOMP_taskloop@@GOMP_4.5+0x1e4>
   16484:	add	x0, x19, #0x8
   16488:	str	x4, [x29, #152]
   1648c:	bl	118a8 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   16490:	str	xzr, [x29, #216]
   16494:	ldr	x4, [x29, #152]
   16498:	b	16188 <GOMP_taskloop@@GOMP_4.5+0x268>
   1649c:	ldr	x0, [x29, #200]
   164a0:	ldr	x1, [x29, #432]
   164a4:	udiv	x3, x21, x0
   164a8:	msub	x0, x3, x0, x21
   164ac:	mul	x23, x3, x1
   164b0:	cbz	x0, 15fe0 <GOMP_taskloop@@GOMP_4.5+0xc0>
   164b4:	add	x23, x23, x1
   164b8:	sub	x21, x0, #0x1
   164bc:	b	15fe0 <GOMP_taskloop@@GOMP_4.5+0xc0>
   164c0:	ldr	w19, [x29, #168]
   164c4:	ldr	x20, [x29, #96]
   164c8:	ldr	x26, [x29, #152]
   164cc:	add	x0, x20, #0x500
   164d0:	mov	x2, x0
   164d4:	mov	w0, #0x1                   	// #1
   164d8:	str	x2, [x29, #168]
   164dc:	ldaxr	w1, [x2]
   164e0:	cbnz	w1, 164ec <GOMP_taskloop@@GOMP_4.5+0x5cc>
   164e4:	stxr	w3, w0, [x2]
   164e8:	cbnz	w3, 164dc <GOMP_taskloop@@GOMP_4.5+0x5bc>
   164ec:	cmp	w1, #0x0
   164f0:	b.ne	16ca0 <GOMP_taskloop@@GOMP_4.5+0xd80>  // b.any
   164f4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   164f8:	cmp	x25, #0x0
   164fc:	cset	w1, eq  // eq = none
   16500:	ldrb	w0, [x0, #1364]
   16504:	tst	w1, w0
   16508:	b.ne	16c08 <GOMP_taskloop@@GOMP_4.5+0xce8>  // b.any
   1650c:	cbz	x26, 16520 <GOMP_taskloop@@GOMP_4.5+0x600>
   16510:	ldr	x0, [x26, #56]
   16514:	ldr	x1, [x29, #200]
   16518:	add	x0, x0, x1
   1651c:	str	x0, [x26, #56]
   16520:	ldr	x0, [x29, #200]
   16524:	add	x22, x27, #0x8
   16528:	mov	x24, #0x0                   	// #0
   1652c:	cbz	x0, 1661c <GOMP_taskloop@@GOMP_4.5+0x6fc>
   16530:	add	x25, x29, #0xd0
   16534:	add	x28, x26, #0x8
   16538:	stp	x28, x25, [x29, #184]
   1653c:	mov	x25, x22
   16540:	add	x21, x20, #0x508
   16544:	ldr	x22, [x29, #176]
   16548:	mov	x28, x27
   1654c:	nop
   16550:	ldr	x0, [x28, #8]
   16554:	ldr	x23, [x22, x24, lsl #3]
   16558:	add	x27, x23, #0x70
   1655c:	cbnz	x0, 167d0 <GOMP_taskloop@@GOMP_4.5+0x8b0>
   16560:	cmp	w19, #0x0
   16564:	ldr	x0, [x28, #24]
   16568:	b.gt	1679c <GOMP_taskloop@@GOMP_4.5+0x87c>
   1656c:	cbz	x0, 16758 <GOMP_taskloop@@GOMP_4.5+0x838>
   16570:	ldr	x1, [x0, #8]
   16574:	stp	x0, x1, [x23, #112]
   16578:	str	x27, [x28, #24]
   1657c:	ldr	x0, [x23, #112]
   16580:	str	x27, [x0, #8]
   16584:	ldr	x0, [x23, #120]
   16588:	str	x27, [x0]
   1658c:	cbz	x26, 166d8 <GOMP_taskloop@@GOMP_4.5+0x7b8>
   16590:	ldr	x0, [x26, #8]
   16594:	add	x27, x23, #0x80
   16598:	cbnz	x0, 166a0 <GOMP_taskloop@@GOMP_4.5+0x780>
   1659c:	cmp	w19, #0x0
   165a0:	ldr	x0, [x26, #24]
   165a4:	b.gt	16664 <GOMP_taskloop@@GOMP_4.5+0x744>
   165a8:	cbz	x0, 1680c <GOMP_taskloop@@GOMP_4.5+0x8ec>
   165ac:	ldr	x1, [x0, #8]
   165b0:	stp	x0, x1, [x23, #128]
   165b4:	str	x27, [x26, #24]
   165b8:	ldr	x0, [x23, #128]
   165bc:	str	x27, [x0, #8]
   165c0:	ldr	x0, [x23, #136]
   165c4:	str	x27, [x0]
   165c8:	ldr	x0, [x20, #1288]
   165cc:	cbnz	x0, 16764 <GOMP_taskloop@@GOMP_4.5+0x844>
   165d0:	ldr	x0, [x20, #1304]
   165d4:	add	x1, x23, #0x60
   165d8:	cbz	x0, 1674c <GOMP_taskloop@@GOMP_4.5+0x82c>
   165dc:	ldr	x5, [x0, #8]
   165e0:	stp	x0, x5, [x23, #96]
   165e4:	str	x1, [x0, #8]
   165e8:	ldr	x0, [x23, #104]
   165ec:	str	x1, [x0]
   165f0:	ldr	w1, [x20, #1320]
   165f4:	add	x24, x24, #0x1
   165f8:	ldr	w0, [x20, #1324]
   165fc:	ldr	x2, [x29, #200]
   16600:	add	w1, w1, #0x1
   16604:	add	w0, w0, #0x1
   16608:	str	w1, [x20, #1320]
   1660c:	str	w0, [x20, #1324]
   16610:	cmp	x2, x24
   16614:	b.ne	16550 <GOMP_taskloop@@GOMP_4.5+0x630>  // b.any
   16618:	mov	x27, x28
   1661c:	ldr	w0, [x20, #132]
   16620:	ldrb	w1, [x27, #204]
   16624:	orr	w0, w0, #0x1
   16628:	ldr	w2, [x20, #1328]
   1662c:	eor	w1, w1, #0x1
   16630:	str	w0, [x20, #132]
   16634:	ldr	w0, [x20]
   16638:	add	w3, w2, w1
   1663c:	cmp	w3, w0
   16640:	b.cc	16994 <GOMP_taskloop@@GOMP_4.5+0xa74>  // b.lo, b.ul, b.last
   16644:	ldr	x1, [x29, #168]
   16648:	ldxr	w0, [x1]
   1664c:	stlxr	w2, wzr, [x1]
   16650:	cbnz	w2, 16648 <GOMP_taskloop@@GOMP_4.5+0x728>
   16654:	tbnz	w0, #31, 16bfc <GOMP_taskloop@@GOMP_4.5+0xcdc>
   16658:	ldr	x0, [x29, #104]
   1665c:	mov	sp, x0
   16660:	b	161d8 <GOMP_taskloop@@GOMP_4.5+0x2b8>
   16664:	cbz	x0, 16b90 <GOMP_taskloop@@GOMP_4.5+0xc70>
   16668:	mov	x0, #0x28                  	// #40
   1666c:	bl	b220 <fprintf@plt+0x2710>
   16670:	ldr	x2, [x29, #184]
   16674:	mov	x1, x0
   16678:	mov	x0, x2
   1667c:	ldp	x6, x5, [x2, #16]
   16680:	str	wzr, [x1]
   16684:	stp	x6, x5, [x1, #8]
   16688:	stp	xzr, xzr, [x1, #24]
   1668c:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   16690:	ldr	x1, [x29, #184]
   16694:	ldr	x0, [x1]
   16698:	str	xzr, [x1, #16]
   1669c:	cbz	x0, 16b90 <GOMP_taskloop@@GOMP_4.5+0xc70>
   166a0:	ldp	x0, x1, [x29, #184]
   166a4:	str	w19, [x29, #208]
   166a8:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   166ac:	cbz	x0, 16b90 <GOMP_taskloop@@GOMP_4.5+0xc70>
   166b0:	ldr	x1, [x0, #8]
   166b4:	cbz	x1, 16bd0 <GOMP_taskloop@@GOMP_4.5+0xcb0>
   166b8:	ldr	x5, [x1, #8]
   166bc:	stp	x1, x5, [x23, #128]
   166c0:	str	x27, [x0, #8]
   166c4:	ldr	x0, [x23, #128]
   166c8:	str	x27, [x0, #8]
   166cc:	ldr	x0, [x23, #136]
   166d0:	str	x27, [x0]
   166d4:	nop
   166d8:	ldr	x0, [x20, #1288]
   166dc:	cbnz	x0, 16764 <GOMP_taskloop@@GOMP_4.5+0x844>
   166e0:	cmp	w19, #0x0
   166e4:	ldr	x0, [x21, #16]
   166e8:	b.le	165d4 <GOMP_taskloop@@GOMP_4.5+0x6b4>
   166ec:	cbz	x0, 16720 <GOMP_taskloop@@GOMP_4.5+0x800>
   166f0:	mov	x0, #0x28                  	// #40
   166f4:	bl	b220 <fprintf@plt+0x2710>
   166f8:	ldp	x6, x5, [x21, #16]
   166fc:	mov	x1, x0
   16700:	mov	x0, x21
   16704:	str	wzr, [x1]
   16708:	stp	x6, x5, [x1, #8]
   1670c:	stp	xzr, xzr, [x1, #24]
   16710:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   16714:	str	xzr, [x21, #16]
   16718:	ldr	x0, [x21]
   1671c:	cbnz	x0, 16764 <GOMP_taskloop@@GOMP_4.5+0x844>
   16720:	mov	x0, #0x28                  	// #40
   16724:	bl	b220 <fprintf@plt+0x2710>
   16728:	mov	x27, x0
   1672c:	mov	x0, x21
   16730:	mov	x1, x27
   16734:	str	w19, [x27]
   16738:	stp	xzr, xzr, [x27, #8]
   1673c:	stp	xzr, xzr, [x27, #24]
   16740:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   16744:	mov	x0, x27
   16748:	b	16778 <GOMP_taskloop@@GOMP_4.5+0x858>
   1674c:	stp	x1, x1, [x23, #96]
   16750:	str	x1, [x20, #1304]
   16754:	b	165f0 <GOMP_taskloop@@GOMP_4.5+0x6d0>
   16758:	stp	x27, x27, [x23, #112]
   1675c:	str	x27, [x28, #24]
   16760:	b	1658c <GOMP_taskloop@@GOMP_4.5+0x66c>
   16764:	ldr	x1, [x29, #192]
   16768:	mov	x0, x21
   1676c:	str	w19, [x29, #208]
   16770:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   16774:	cbz	x0, 16720 <GOMP_taskloop@@GOMP_4.5+0x800>
   16778:	ldr	x1, [x0, #8]
   1677c:	add	x5, x23, #0x60
   16780:	cbz	x1, 16b84 <GOMP_taskloop@@GOMP_4.5+0xc64>
   16784:	ldr	x0, [x1, #8]
   16788:	stp	x1, x0, [x23, #96]
   1678c:	str	x5, [x1, #8]
   16790:	ldr	x0, [x23, #104]
   16794:	str	x5, [x0]
   16798:	b	165f0 <GOMP_taskloop@@GOMP_4.5+0x6d0>
   1679c:	cbz	x0, 16af4 <GOMP_taskloop@@GOMP_4.5+0xbd4>
   167a0:	mov	x0, #0x28                  	// #40
   167a4:	bl	b220 <fprintf@plt+0x2710>
   167a8:	ldp	x6, x5, [x25, #16]
   167ac:	mov	x1, x0
   167b0:	mov	x0, x25
   167b4:	str	wzr, [x1]
   167b8:	stp	x6, x5, [x1, #8]
   167bc:	stp	xzr, xzr, [x1, #24]
   167c0:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   167c4:	str	xzr, [x25, #16]
   167c8:	ldr	x0, [x25]
   167cc:	cbz	x0, 16af4 <GOMP_taskloop@@GOMP_4.5+0xbd4>
   167d0:	ldr	x1, [x29, #192]
   167d4:	mov	x0, x25
   167d8:	str	w19, [x29, #208]
   167dc:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   167e0:	cbz	x0, 16af4 <GOMP_taskloop@@GOMP_4.5+0xbd4>
   167e4:	ldr	x1, [x0, #8]
   167e8:	cbz	x1, 16b78 <GOMP_taskloop@@GOMP_4.5+0xc58>
   167ec:	ldr	x5, [x1, #8]
   167f0:	stp	x1, x5, [x23, #112]
   167f4:	str	x27, [x0, #8]
   167f8:	ldr	x0, [x23, #112]
   167fc:	str	x27, [x0, #8]
   16800:	ldr	x0, [x23, #120]
   16804:	str	x27, [x0]
   16808:	b	1658c <GOMP_taskloop@@GOMP_4.5+0x66c>
   1680c:	stp	x27, x27, [x23, #128]
   16810:	str	x27, [x26, #24]
   16814:	b	165c8 <GOMP_taskloop@@GOMP_4.5+0x6a8>
   16818:	ldr	x0, [x29, #184]
   1681c:	neg	x2, x4
   16820:	sub	x3, x4, #0x1
   16824:	mov	x1, sp
   16828:	add	x0, x0, x4
   1682c:	add	x12, x11, x10
   16830:	ldr	x4, [x29, #200]
   16834:	sub	x0, x0, #0x1
   16838:	and	x5, x0, x2
   1683c:	stp	x5, x1, [x29, #168]
   16840:	add	x0, x4, x4, lsl #1
   16844:	add	x0, x4, x0, lsl #2
   16848:	sub	x6, x1, x0, lsl #4
   1684c:	madd	x1, x5, x4, x3
   16850:	mov	sp, x6
   16854:	str	x6, [x29, #152]
   16858:	add	x1, x1, #0xf
   1685c:	lsl	x0, x0, #4
   16860:	and	x1, x1, #0xfffffffffffffff0
   16864:	sub	sp, sp, x1
   16868:	add	x1, sp, x3
   1686c:	and	x27, x1, x2
   16870:	ldr	x2, [x12, #80]
   16874:	cbz	x4, 16988 <GOMP_taskloop@@GOMP_4.5+0xa68>
   16878:	add	x4, x0, x6
   1687c:	and	w0, w22, #0x2
   16880:	mov	x22, x6
   16884:	str	w0, [x29, #184]
   16888:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1688c:	add	x6, x0, #0x2b8
   16890:	mov	x3, x2
   16894:	mov	x26, x6
   16898:	stp	x11, x10, [x29, #104]
   1689c:	stp	x27, x20, [x29, #120]
   168a0:	mov	x20, x27
   168a4:	mov	x27, x28
   168a8:	mov	x28, x12
   168ac:	stp	x21, x23, [x29, #136]
   168b0:	mov	x21, x5
   168b4:	mov	x23, x2
   168b8:	str	x24, [x29, #416]
   168bc:	mov	x24, x22
   168c0:	mov	x22, x4
   168c4:	b	16914 <GOMP_taskloop@@GOMP_4.5+0x9f4>
   168c8:	ldrb	w4, [x3, #205]
   168cc:	cbnz	w4, 168d8 <GOMP_taskloop@@GOMP_4.5+0x9b8>
   168d0:	ldr	w0, [x29, #184]
   168d4:	cbz	w0, 168e0 <GOMP_taskloop@@GOMP_4.5+0x9c0>
   168d8:	mov	w0, #0x1                   	// #1
   168dc:	strb	w0, [x24, #205]
   168e0:	ldrb	w4, [x3, #204]
   168e4:	ldr	x3, [x3, #40]
   168e8:	str	x3, [x24, #40]
   168ec:	strb	w4, [x24, #204]
   168f0:	str	x24, [x28, #80]
   168f4:	mov	x0, x20
   168f8:	mov	x1, x27
   168fc:	add	x24, x24, #0xd0
   16900:	blr	x25
   16904:	add	x20, x20, x21
   16908:	cmp	x22, x24
   1690c:	b.eq	169e0 <GOMP_taskloop@@GOMP_4.5+0xac0>  // b.none
   16910:	ldr	x3, [x28, #80]
   16914:	mov	x5, x24
   16918:	cmp	x3, #0x0
   1691c:	add	x4, x3, #0x90
   16920:	csel	x4, x26, x4, eq  // eq = none
   16924:	mov	w0, #0x1                   	// #1
   16928:	str	x23, [x5], #144
   1692c:	ldp	x6, x7, [x4]
   16930:	stp	x6, x7, [x24, #144]
   16934:	ldp	x6, x7, [x4, #16]
   16938:	stp	x6, x7, [x5, #16]
   1693c:	ldr	x4, [x4, #32]
   16940:	str	x4, [x5, #32]
   16944:	str	xzr, [x24, #8]
   16948:	stp	xzr, xzr, [x24, #24]
   1694c:	stp	xzr, xzr, [x24, #40]
   16950:	stp	xzr, xzr, [x24, #56]
   16954:	str	xzr, [x24, #72]
   16958:	str	w19, [x24, #88]
   1695c:	str	w0, [x24, #200]
   16960:	strb	wzr, [x24, #204]
   16964:	strb	wzr, [x24, #205]
   16968:	strb	wzr, [x24, #206]
   1696c:	strb	wzr, [x24, #207]
   16970:	cbnz	x3, 168c8 <GOMP_taskloop@@GOMP_4.5+0x9a8>
   16974:	ldr	w0, [x29, #184]
   16978:	cbz	w0, 168f0 <GOMP_taskloop@@GOMP_4.5+0x9d0>
   1697c:	mov	w0, #0x1                   	// #1
   16980:	strb	w0, [x24, #205]
   16984:	b	168f0 <GOMP_taskloop@@GOMP_4.5+0x9d0>
   16988:	ldr	x0, [x29, #176]
   1698c:	mov	sp, x0
   16990:	b	161d8 <GOMP_taskloop@@GOMP_4.5+0x2b8>
   16994:	sub	w0, w0, w2
   16998:	sub	w1, w0, w1
   1699c:	ldr	x0, [x29, #200]
   169a0:	ldr	x2, [x29, #168]
   169a4:	cmp	x0, w1, sxtw
   169a8:	csel	w1, w0, w1, cc  // cc = lo, ul, last
   169ac:	ldxr	w0, [x2]
   169b0:	stlxr	w3, wzr, [x2]
   169b4:	cbnz	w3, 169ac <GOMP_taskloop@@GOMP_4.5+0xa8c>
   169b8:	tbnz	w0, #31, 169cc <GOMP_taskloop@@GOMP_4.5+0xaac>
   169bc:	cbz	w1, 16658 <GOMP_taskloop@@GOMP_4.5+0x738>
   169c0:	add	x0, x20, #0x80
   169c4:	bl	1abd8 <omp_get_num_procs@@OMP_1.0+0x530>
   169c8:	b	16658 <GOMP_taskloop@@GOMP_4.5+0x738>
   169cc:	ldr	x0, [x29, #168]
   169d0:	str	w1, [x29, #200]
   169d4:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   169d8:	ldr	w1, [x29, #200]
   169dc:	b	169bc <GOMP_taskloop@@GOMP_4.5+0xa9c>
   169e0:	ldp	x11, x10, [x29, #104]
   169e4:	mov	x26, #0x0                   	// #0
   169e8:	ldp	x27, x20, [x29, #120]
   169ec:	mov	w19, #0x1                   	// #1
   169f0:	ldp	x21, x23, [x29, #136]
   169f4:	ldr	x0, [x29, #152]
   169f8:	add	x25, x11, x10
   169fc:	add	x20, x20, #0x500
   16a00:	add	x22, x0, #0x8
   16a04:	mov	x0, x26
   16a08:	mov	x26, x23
   16a0c:	mov	x23, x21
   16a10:	mov	x21, x0
   16a14:	ldr	x28, [x29, #168]
   16a18:	ldr	x24, [x29, #416]
   16a1c:	b	16a48 <GOMP_taskloop@@GOMP_4.5+0xb28>
   16a20:	ldr	x1, [x25, #80]
   16a24:	ldr	x0, [x1, #56]
   16a28:	cbnz	x0, 16ae4 <GOMP_taskloop@@GOMP_4.5+0xbc4>
   16a2c:	ldr	x0, [x1]
   16a30:	str	x0, [x25, #80]
   16a34:	ldr	x0, [x29, #200]
   16a38:	add	x21, x21, #0x1
   16a3c:	add	x22, x22, #0xd0
   16a40:	cmp	x0, x21
   16a44:	b.eq	16988 <GOMP_taskloop@@GOMP_4.5+0xa68>  // b.none
   16a48:	sub	x0, x22, #0x8
   16a4c:	str	x0, [x25, #80]
   16a50:	ldr	x1, [x29, #192]
   16a54:	cmp	x23, x21
   16a58:	ldr	x0, [x29, #432]
   16a5c:	str	x24, [x27]
   16a60:	add	x24, x24, x26
   16a64:	str	x24, [x27, #8]
   16a68:	sub	x0, x26, x0
   16a6c:	csel	x26, x0, x26, eq  // eq = none
   16a70:	mov	x0, x27
   16a74:	blr	x1
   16a78:	add	x27, x27, x28
   16a7c:	ldr	x0, [x22]
   16a80:	cbnz	x0, 16a8c <GOMP_taskloop@@GOMP_4.5+0xb6c>
   16a84:	ldr	x0, [x22, #16]
   16a88:	cbz	x0, 16a20 <GOMP_taskloop@@GOMP_4.5+0xb00>
   16a8c:	ldaxr	w1, [x20]
   16a90:	cbnz	w1, 16a9c <GOMP_taskloop@@GOMP_4.5+0xb7c>
   16a94:	stxr	w0, w19, [x20]
   16a98:	cbnz	w0, 16a8c <GOMP_taskloop@@GOMP_4.5+0xb6c>
   16a9c:	cmp	w1, #0x0
   16aa0:	b.ne	16cac <GOMP_taskloop@@GOMP_4.5+0xd8c>  // b.any
   16aa4:	ldr	x1, [x22]
   16aa8:	cbnz	x1, 16bc0 <GOMP_taskloop@@GOMP_4.5+0xca0>
   16aac:	ldr	x1, [x22, #16]
   16ab0:	mov	x0, x1
   16ab4:	cbz	x1, 16ac8 <GOMP_taskloop@@GOMP_4.5+0xba8>
   16ab8:	stur	xzr, [x0, #-112]
   16abc:	ldr	x0, [x0]
   16ac0:	cmp	x1, x0
   16ac4:	b.ne	16ab8 <GOMP_taskloop@@GOMP_4.5+0xb98>  // b.any
   16ac8:	ldxr	w0, [x20]
   16acc:	stlxr	w1, wzr, [x20]
   16ad0:	cbnz	w1, 16ac8 <GOMP_taskloop@@GOMP_4.5+0xba8>
   16ad4:	tbz	w0, #31, 16a20 <GOMP_taskloop@@GOMP_4.5+0xb00>
   16ad8:	mov	x0, x20
   16adc:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   16ae0:	b	16a20 <GOMP_taskloop@@GOMP_4.5+0xb00>
   16ae4:	str	x1, [x29, #184]
   16ae8:	bl	8900 <free@plt>
   16aec:	ldr	x1, [x29, #184]
   16af0:	b	16a2c <GOMP_taskloop@@GOMP_4.5+0xb0c>
   16af4:	mov	x0, #0x28                  	// #40
   16af8:	bl	b220 <fprintf@plt+0x2710>
   16afc:	mov	x1, x0
   16b00:	mov	x0, x25
   16b04:	str	x1, [x29, #176]
   16b08:	str	w19, [x1]
   16b0c:	stp	xzr, xzr, [x1, #8]
   16b10:	stp	xzr, xzr, [x1, #24]
   16b14:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   16b18:	ldr	x1, [x29, #176]
   16b1c:	mov	x0, x1
   16b20:	b	167e4 <GOMP_taskloop@@GOMP_4.5+0x8c4>
   16b24:	add	x0, x11, x10
   16b28:	ldr	x27, [x0, #80]
   16b2c:	cbz	x27, 16bdc <GOMP_taskloop@@GOMP_4.5+0xcbc>
   16b30:	ldr	x0, [x27, #40]
   16b34:	cbz	x0, 16b58 <GOMP_taskloop@@GOMP_4.5+0xc38>
   16b38:	ldrb	w1, [x0, #49]
   16b3c:	cbnz	w1, 161e4 <GOMP_taskloop@@GOMP_4.5+0x2c4>
   16b40:	ldrb	w1, [x0, #50]
   16b44:	cbz	w1, 16b58 <GOMP_taskloop@@GOMP_4.5+0xc38>
   16b48:	ldr	x0, [x0]
   16b4c:	cbz	x0, 16b58 <GOMP_taskloop@@GOMP_4.5+0xc38>
   16b50:	ldrb	w0, [x0, #49]
   16b54:	cbnz	w0, 161e4 <GOMP_taskloop@@GOMP_4.5+0x2c4>
   16b58:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   16b5c:	ldr	w0, [x0, #1368]
   16b60:	cmp	w0, w19
   16b64:	csel	w19, w0, w19, le
   16b68:	tst	x22, #0x400
   16b6c:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   16b70:	b.eq	16014 <GOMP_taskloop@@GOMP_4.5+0xf4>  // b.none
   16b74:	b	1626c <GOMP_taskloop@@GOMP_4.5+0x34c>
   16b78:	stp	x27, x27, [x23, #112]
   16b7c:	str	x27, [x0, #8]
   16b80:	b	1658c <GOMP_taskloop@@GOMP_4.5+0x66c>
   16b84:	stp	x5, x5, [x23, #96]
   16b88:	str	x5, [x0, #8]
   16b8c:	b	165f0 <GOMP_taskloop@@GOMP_4.5+0x6d0>
   16b90:	mov	x0, #0x28                  	// #40
   16b94:	bl	b220 <fprintf@plt+0x2710>
   16b98:	mov	x1, x0
   16b9c:	str	x1, [x29, #176]
   16ba0:	ldr	x0, [x29, #184]
   16ba4:	str	w19, [x1]
   16ba8:	stp	xzr, xzr, [x1, #8]
   16bac:	stp	xzr, xzr, [x1, #24]
   16bb0:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   16bb4:	ldr	x1, [x29, #176]
   16bb8:	mov	x0, x1
   16bbc:	b	166b0 <GOMP_taskloop@@GOMP_4.5+0x790>
   16bc0:	mov	x0, x22
   16bc4:	bl	118a8 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   16bc8:	str	xzr, [x22]
   16bcc:	b	16ac8 <GOMP_taskloop@@GOMP_4.5+0xba8>
   16bd0:	stp	x27, x27, [x23, #128]
   16bd4:	str	x27, [x0, #8]
   16bd8:	b	166d8 <GOMP_taskloop@@GOMP_4.5+0x7b8>
   16bdc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   16be0:	ldr	w0, [x0, #1368]
   16be4:	cmp	w0, w19
   16be8:	csel	w19, w0, w19, le
   16bec:	tst	x22, #0x400
   16bf0:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   16bf4:	b.eq	16014 <GOMP_taskloop@@GOMP_4.5+0xf4>  // b.none
   16bf8:	b	16274 <GOMP_taskloop@@GOMP_4.5+0x354>
   16bfc:	ldr	x0, [x29, #168]
   16c00:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   16c04:	b	16658 <GOMP_taskloop@@GOMP_4.5+0x738>
   16c08:	ldr	w0, [x20, #132]
   16c0c:	tbnz	w0, #2, 16c34 <GOMP_taskloop@@GOMP_4.5+0xd14>
   16c10:	cbz	x26, 16520 <GOMP_taskloop@@GOMP_4.5+0x600>
   16c14:	ldrb	w0, [x26, #49]
   16c18:	cbnz	w0, 16c34 <GOMP_taskloop@@GOMP_4.5+0xd14>
   16c1c:	ldrb	w0, [x26, #50]
   16c20:	cbz	w0, 16510 <GOMP_taskloop@@GOMP_4.5+0x5f0>
   16c24:	ldr	x0, [x26]
   16c28:	cbz	x0, 16510 <GOMP_taskloop@@GOMP_4.5+0x5f0>
   16c2c:	ldrb	w0, [x0, #49]
   16c30:	cbz	w0, 16510 <GOMP_taskloop@@GOMP_4.5+0x5f0>
   16c34:	ldr	x0, [x29, #168]
   16c38:	mov	x19, #0x0                   	// #0
   16c3c:	bl	121a0 <GOMP_single_copy_end@@GOMP_1.0+0xa18>
   16c40:	ldr	x0, [x29, #200]
   16c44:	cbz	x0, 16c70 <GOMP_taskloop@@GOMP_4.5+0xd50>
   16c48:	ldr	x0, [x29, #176]
   16c4c:	ldr	x20, [x0, x19, lsl #3]
   16c50:	add	x19, x19, #0x1
   16c54:	ldr	x0, [x20, #56]
   16c58:	cbnz	x0, 16c98 <GOMP_taskloop@@GOMP_4.5+0xd78>
   16c5c:	mov	x0, x20
   16c60:	bl	8900 <free@plt>
   16c64:	ldr	x0, [x29, #200]
   16c68:	cmp	x0, x19
   16c6c:	b.ne	16c48 <GOMP_taskloop@@GOMP_4.5+0xd28>  // b.any
   16c70:	ldr	w0, [x29, #164]
   16c74:	cbz	w0, 16cb8 <GOMP_taskloop@@GOMP_4.5+0xd98>
   16c78:	ldr	x0, [x29, #104]
   16c7c:	mov	sp, x0
   16c80:	b	161e4 <GOMP_taskloop@@GOMP_4.5+0x2c4>
   16c84:	mov	x0, x4
   16c88:	str	x4, [x29, #152]
   16c8c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   16c90:	ldr	x4, [x29, #152]
   16c94:	b	16164 <GOMP_taskloop@@GOMP_4.5+0x244>
   16c98:	bl	8900 <free@plt>
   16c9c:	b	16c5c <GOMP_taskloop@@GOMP_4.5+0xd3c>
   16ca0:	ldr	x0, [x29, #168]
   16ca4:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   16ca8:	b	164f4 <GOMP_taskloop@@GOMP_4.5+0x5d4>
   16cac:	mov	x0, x20
   16cb0:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   16cb4:	b	16aa4 <GOMP_taskloop@@GOMP_4.5+0xb84>
   16cb8:	bl	15718 <GOMP_taskgroup_end@@GOMP_4.0>
   16cbc:	b	16c78 <GOMP_taskloop@@GOMP_4.5+0xd58>

0000000000016cc0 <GOMP_taskloop_ull@@GOMP_4.5>:
   16cc0:	stp	x29, x30, [sp, #-432]!
   16cc4:	mrs	x10, tpidr_el0
   16cc8:	adrp	x9, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   16ccc:	ldr	x9, [x9, #4016]
   16cd0:	mov	x29, sp
   16cd4:	add	x8, x10, x9
   16cd8:	stp	x19, x20, [sp, #16]
   16cdc:	mov	w19, w7
   16ce0:	stp	x21, x22, [sp, #32]
   16ce4:	mov	w21, w5
   16ce8:	stp	x23, x24, [sp, #48]
   16cec:	stp	x25, x26, [sp, #64]
   16cf0:	mov	x25, x2
   16cf4:	stp	x27, x28, [sp, #80]
   16cf8:	mov	x28, x1
   16cfc:	stp	x3, x0, [x29, #200]
   16d00:	ldp	x3, x0, [x29, #440]
   16d04:	str	w7, [x29, #216]
   16d08:	ldr	x20, [x8, #16]
   16d0c:	ldr	x24, [x29, #432]
   16d10:	sub	x1, x0, #0x1
   16d14:	cbz	x20, 16d20 <GOMP_taskloop_ull@@GOMP_4.5+0x60>
   16d18:	ldr	w0, [x20, #132]
   16d1c:	tbnz	w0, #2, 16f84 <GOMP_taskloop_ull@@GOMP_4.5+0x2c4>
   16d20:	tbz	w21, #8, 16fa4 <GOMP_taskloop_ull@@GOMP_4.5+0x2e4>
   16d24:	cmp	x24, x3
   16d28:	b.cs	16f84 <GOMP_taskloop_ull@@GOMP_4.5+0x2c4>  // b.hs, b.nlast
   16d2c:	sub	x22, x3, x24
   16d30:	ldr	x0, [x29, #448]
   16d34:	add	x22, x22, x1
   16d38:	udiv	x22, x22, x0
   16d3c:	tbz	w21, #9, 16fcc <GOMP_taskloop_ull@@GOMP_4.5+0x30c>
   16d40:	udiv	x0, x22, x6
   16d44:	str	x0, [x29, #216]
   16d48:	cmp	x0, #0x1
   16d4c:	b.ls	17200 <GOMP_taskloop_ull@@GOMP_4.5+0x540>  // b.plast
   16d50:	ldr	x0, [x29, #216]
   16d54:	cmp	x6, x0
   16d58:	ccmn	x0, #0x1, #0x4, ls  // ls = plast
   16d5c:	b.eq	17238 <GOMP_taskloop_ull@@GOMP_4.5+0x578>  // b.none
   16d60:	ldr	x1, [x29, #448]
   16d64:	mul	x0, x6, x0
   16d68:	cmp	x22, x0
   16d6c:	mul	x23, x1, x6
   16d70:	b.eq	16d80 <GOMP_taskloop_ull@@GOMP_4.5+0xc0>  // b.none
   16d74:	sub	x22, x22, x0
   16d78:	add	x23, x23, x1
   16d7c:	sub	x22, x22, #0x1
   16d80:	and	w0, w21, #0x800
   16d84:	str	w0, [x29, #180]
   16d88:	tbz	w21, #11, 171d4 <GOMP_taskloop_ull@@GOMP_4.5+0x514>
   16d8c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   16d90:	ldrb	w0, [x0, #1364]
   16d94:	cbnz	w0, 178d8 <GOMP_taskloop_ull@@GOMP_4.5+0xc18>
   16d98:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   16d9c:	ldr	w0, [x0, #1368]
   16da0:	cmp	w0, w19
   16da4:	csel	w19, w0, w19, le
   16da8:	tst	x21, #0x400
   16dac:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   16db0:	b.ne	17004 <GOMP_taskloop_ull@@GOMP_4.5+0x344>  // b.any
   16db4:	cbnz	x25, 175b0 <GOMP_taskloop_ull@@GOMP_4.5+0x8f0>
   16db8:	ldr	x0, [x29, #216]
   16dbc:	cbz	x0, 16f78 <GOMP_taskloop_ull@@GOMP_4.5+0x2b8>
   16dc0:	add	x9, x10, x9
   16dc4:	and	w0, w21, #0x2
   16dc8:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   16dcc:	mov	x21, #0x0                   	// #0
   16dd0:	add	x1, x29, #0xe0
   16dd4:	str	w0, [x29, #192]
   16dd8:	add	x0, x26, #0x2b8
   16ddc:	mov	x27, x23
   16de0:	add	x26, x29, #0x170
   16de4:	mov	x23, x24
   16de8:	mov	x25, #0x1                   	// #1
   16dec:	mov	x24, x9
   16df0:	str	x20, [x29, #184]
   16df4:	mov	x20, x28
   16df8:	mov	x28, x21
   16dfc:	mov	w21, w19
   16e00:	mov	x19, x1
   16e04:	str	x0, [x29, #200]
   16e08:	ldr	x0, [x9, #80]
   16e0c:	b	16e34 <GOMP_taskloop_ull@@GOMP_4.5+0x174>
   16e10:	ldr	x1, [x24, #80]
   16e14:	ldr	x0, [x1, #56]
   16e18:	cbnz	x0, 16f50 <GOMP_taskloop_ull@@GOMP_4.5+0x290>
   16e1c:	ldr	x0, [x1]
   16e20:	str	x0, [x24, #80]
   16e24:	ldr	x1, [x29, #216]
   16e28:	add	x28, x28, #0x1
   16e2c:	cmp	x1, x28
   16e30:	b.eq	16f78 <GOMP_taskloop_ull@@GOMP_4.5+0x2b8>  // b.none
   16e34:	ldr	x2, [x29, #200]
   16e38:	cmp	x0, #0x0
   16e3c:	add	x1, x0, #0x90
   16e40:	csel	x1, x2, x1, eq  // eq = none
   16e44:	ldp	x4, x5, [x1]
   16e48:	stp	x4, x5, [x26]
   16e4c:	ldp	x4, x5, [x1, #16]
   16e50:	stp	x4, x5, [x26, #16]
   16e54:	ldr	x1, [x1, #32]
   16e58:	stp	x0, xzr, [x29, #224]
   16e5c:	stp	xzr, xzr, [x29, #248]
   16e60:	str	x25, [x29, #424]
   16e64:	str	x1, [x26, #32]
   16e68:	stp	xzr, xzr, [x29, #264]
   16e6c:	stp	xzr, xzr, [x29, #280]
   16e70:	str	xzr, [x29, #296]
   16e74:	str	w21, [x29, #312]
   16e78:	cbz	x0, 17210 <GOMP_taskloop_ull@@GOMP_4.5+0x550>
   16e7c:	ldrb	w1, [x0, #205]
   16e80:	cbnz	w1, 16e8c <GOMP_taskloop_ull@@GOMP_4.5+0x1cc>
   16e84:	ldr	w1, [x29, #192]
   16e88:	cbz	w1, 16e94 <GOMP_taskloop_ull@@GOMP_4.5+0x1d4>
   16e8c:	mov	w1, #0x1                   	// #1
   16e90:	strb	w1, [x29, #429]
   16e94:	ldrb	w1, [x0, #204]
   16e98:	ldr	x0, [x0, #40]
   16e9c:	str	x0, [x29, #264]
   16ea0:	strb	w1, [x29, #428]
   16ea4:	ldr	x1, [x29, #208]
   16ea8:	cmp	x22, x28
   16eac:	ldr	x0, [x29, #448]
   16eb0:	str	x19, [x24, #80]
   16eb4:	str	x23, [x20]
   16eb8:	add	x23, x23, x27
   16ebc:	str	x23, [x20, #8]
   16ec0:	sub	x0, x27, x0
   16ec4:	csel	x27, x0, x27, eq  // eq = none
   16ec8:	mov	x0, x20
   16ecc:	blr	x1
   16ed0:	ldr	x0, [x29, #232]
   16ed4:	cbnz	x0, 16ee0 <GOMP_taskloop_ull@@GOMP_4.5+0x220>
   16ed8:	ldr	x0, [x29, #248]
   16edc:	cbz	x0, 16e10 <GOMP_taskloop_ull@@GOMP_4.5+0x150>
   16ee0:	ldr	x0, [x29, #184]
   16ee4:	add	x4, x0, #0x500
   16ee8:	mov	w0, #0x1                   	// #1
   16eec:	ldaxr	w1, [x4]
   16ef0:	cbnz	w1, 16efc <GOMP_taskloop_ull@@GOMP_4.5+0x23c>
   16ef4:	stxr	w2, w0, [x4]
   16ef8:	cbnz	w2, 16eec <GOMP_taskloop_ull@@GOMP_4.5+0x22c>
   16efc:	cmp	w1, #0x0
   16f00:	b.ne	17a38 <GOMP_taskloop_ull@@GOMP_4.5+0xd78>  // b.any
   16f04:	ldr	x1, [x29, #232]
   16f08:	cbnz	x1, 17220 <GOMP_taskloop_ull@@GOMP_4.5+0x560>
   16f0c:	ldr	x1, [x29, #248]
   16f10:	mov	x0, x1
   16f14:	cbz	x1, 16f28 <GOMP_taskloop_ull@@GOMP_4.5+0x268>
   16f18:	stur	xzr, [x0, #-112]
   16f1c:	ldr	x0, [x0]
   16f20:	cmp	x1, x0
   16f24:	b.ne	16f18 <GOMP_taskloop_ull@@GOMP_4.5+0x258>  // b.any
   16f28:	ldxr	w0, [x4]
   16f2c:	stlxr	w1, wzr, [x4]
   16f30:	cbnz	w1, 16f28 <GOMP_taskloop_ull@@GOMP_4.5+0x268>
   16f34:	tbz	w0, #31, 16e10 <GOMP_taskloop_ull@@GOMP_4.5+0x150>
   16f38:	mov	x0, x4
   16f3c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   16f40:	ldr	x1, [x24, #80]
   16f44:	ldr	x0, [x1, #56]
   16f48:	cbz	x0, 16e1c <GOMP_taskloop_ull@@GOMP_4.5+0x15c>
   16f4c:	nop
   16f50:	str	x1, [x29, #168]
   16f54:	bl	8900 <free@plt>
   16f58:	ldr	x1, [x29, #168]
   16f5c:	add	x28, x28, #0x1
   16f60:	ldr	x0, [x1]
   16f64:	str	x0, [x24, #80]
   16f68:	ldr	x1, [x29, #216]
   16f6c:	cmp	x1, x28
   16f70:	b.ne	16e34 <GOMP_taskloop_ull@@GOMP_4.5+0x174>  // b.any
   16f74:	nop
   16f78:	ldr	w0, [x29, #180]
   16f7c:	cbnz	w0, 16f84 <GOMP_taskloop_ull@@GOMP_4.5+0x2c4>
   16f80:	bl	15718 <GOMP_taskgroup_end@@GOMP_4.0>
   16f84:	mov	sp, x29
   16f88:	ldp	x19, x20, [sp, #16]
   16f8c:	ldp	x21, x22, [sp, #32]
   16f90:	ldp	x23, x24, [sp, #48]
   16f94:	ldp	x25, x26, [sp, #64]
   16f98:	ldp	x27, x28, [sp, #80]
   16f9c:	ldp	x29, x30, [sp], #432
   16fa0:	ret
   16fa4:	cmp	x24, x3
   16fa8:	b.ls	16f84 <GOMP_taskloop_ull@@GOMP_4.5+0x2c4>  // b.plast
   16fac:	ldr	x0, [x29, #448]
   16fb0:	sub	x22, x24, x3
   16fb4:	mvn	x0, x0
   16fb8:	add	x22, x22, x0
   16fbc:	ldr	x0, [x29, #448]
   16fc0:	neg	x0, x0
   16fc4:	udiv	x22, x22, x0
   16fc8:	tbnz	w21, #9, 16d40 <GOMP_taskloop_ull@@GOMP_4.5+0x80>
   16fcc:	cbnz	x6, 16fd8 <GOMP_taskloop_ull@@GOMP_4.5+0x318>
   16fd0:	cbz	x20, 1787c <GOMP_taskloop_ull@@GOMP_4.5+0xbbc>
   16fd4:	ldr	w6, [x20]
   16fd8:	cmp	x22, x6
   16fdc:	b.ls	171c0 <GOMP_taskloop_ull@@GOMP_4.5+0x500>  // b.plast
   16fe0:	udiv	x3, x22, x6
   16fe4:	str	x6, [x29, #216]
   16fe8:	ldr	x0, [x29, #448]
   16fec:	msub	x6, x3, x6, x22
   16ff0:	mul	x23, x3, x0
   16ff4:	cbz	x6, 16d80 <GOMP_taskloop_ull@@GOMP_4.5+0xc0>
   16ff8:	add	x23, x23, x0
   16ffc:	sub	x22, x6, #0x1
   17000:	b	16d80 <GOMP_taskloop_ull@@GOMP_4.5+0xc0>
   17004:	add	x0, x10, x9
   17008:	ldr	x27, [x0, #80]
   1700c:	cbz	x27, 17018 <GOMP_taskloop_ull@@GOMP_4.5+0x358>
   17010:	ldrb	w0, [x27, #205]
   17014:	cbnz	w0, 16db4 <GOMP_taskloop_ull@@GOMP_4.5+0xf4>
   17018:	ldr	w0, [x20]
   1701c:	ldr	x2, [x29, #216]
   17020:	ldr	w1, [x20, #1320]
   17024:	lsl	w0, w0, #6
   17028:	add	x1, x1, x2
   1702c:	cmp	x1, x0
   17030:	b.hi	16db4 <GOMP_taskloop_ull@@GOMP_4.5+0xf4>  // b.pmore
   17034:	ldr	x1, [x29, #216]
   17038:	mov	x2, sp
   1703c:	str	x2, [x29, #112]
   17040:	ldr	x26, [x27, #40]
   17044:	lsl	x0, x1, #3
   17048:	add	x0, x0, #0xf
   1704c:	and	x0, x0, #0xfffffffffffffff0
   17050:	sub	sp, sp, x0
   17054:	mov	x0, sp
   17058:	str	x0, [x29, #184]
   1705c:	cbz	x1, 17268 <GOMP_taskloop_ull@@GOMP_4.5+0x5a8>
   17060:	ubfx	x1, x21, #1, #1
   17064:	add	x0, x4, #0xcf
   17068:	stp	x0, x1, [x29, #144]
   1706c:	neg	x1, x4
   17070:	mov	x21, #0x0                   	// #0
   17074:	str	x1, [x29, #136]
   17078:	add	x9, x10, x9
   1707c:	ldr	x1, [x29, #200]
   17080:	str	x20, [x29, #104]
   17084:	str	x22, [x29, #120]
   17088:	mov	x22, x9
   1708c:	add	x1, x0, x1
   17090:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   17094:	add	x0, x0, #0x2b8
   17098:	str	x0, [x29, #128]
   1709c:	mov	x0, x21
   170a0:	mov	x20, x1
   170a4:	mov	x21, x23
   170a8:	mov	x23, x0
   170ac:	str	x26, [x29, #160]
   170b0:	str	w19, [x29, #168]
   170b4:	b	17110 <GOMP_taskloop_ull@@GOMP_4.5+0x450>
   170b8:	blr	x25
   170bc:	mov	w0, #0x1                   	// #1
   170c0:	strb	w0, [x19, #206]
   170c4:	ldr	x0, [x29, #120]
   170c8:	str	x24, [x26]
   170cc:	add	x24, x24, x21
   170d0:	str	x24, [x26, #8]
   170d4:	cmp	x0, x23
   170d8:	add	x23, x23, #0x1
   170dc:	ldr	x0, [x29, #208]
   170e0:	stp	x0, x26, [x19, #184]
   170e4:	ldr	x0, [x29, #448]
   170e8:	str	x27, [x22, #80]
   170ec:	sub	x0, x21, x0
   170f0:	csel	x21, x0, x21, eq  // eq = none
   170f4:	mov	w0, #0x2                   	// #2
   170f8:	str	w0, [x19, #200]
   170fc:	ldr	x0, [x29, #216]
   17100:	cmp	x0, x23
   17104:	ldrb	w0, [x29, #152]
   17108:	strb	w0, [x19, #205]
   1710c:	b.eq	1725c <GOMP_taskloop_ull@@GOMP_4.5+0x59c>  // b.none
   17110:	mov	x0, x20
   17114:	bl	b220 <fprintf@plt+0x2710>
   17118:	ldr	x3, [x29, #184]
   1711c:	str	x0, [x29, #192]
   17120:	ldr	x0, [x22, #80]
   17124:	mov	x1, x28
   17128:	ldr	x19, [x29, #192]
   1712c:	str	x19, [x3, x23, lsl #3]
   17130:	ldr	x3, [x29, #128]
   17134:	cmp	x0, #0x0
   17138:	add	x0, x0, #0x90
   1713c:	mov	x2, x19
   17140:	csel	x0, x3, x0, eq  // eq = none
   17144:	ldr	x3, [x29, #144]
   17148:	str	x27, [x2], #144
   1714c:	ldp	x8, x9, [x0]
   17150:	stp	x8, x9, [x19, #144]
   17154:	add	x4, x19, x3
   17158:	ldp	x8, x9, [x0, #16]
   1715c:	stp	x8, x9, [x2, #16]
   17160:	ldr	x0, [x0, #32]
   17164:	str	x0, [x2, #32]
   17168:	mov	x2, #0x1                   	// #1
   1716c:	str	x2, [x19, #200]
   17170:	ldr	x0, [x29, #136]
   17174:	str	xzr, [x19, #8]
   17178:	ldr	x3, [x29, #160]
   1717c:	stp	xzr, xzr, [x19, #24]
   17180:	ldrb	w2, [x27, #204]
   17184:	str	x3, [x19, #40]
   17188:	and	x26, x4, x0
   1718c:	ldr	w3, [x29, #168]
   17190:	mov	x0, x26
   17194:	str	xzr, [x19, #48]
   17198:	str	xzr, [x19, #56]
   1719c:	str	xzr, [x19, #64]
   171a0:	str	xzr, [x19, #72]
   171a4:	str	x19, [x22, #80]
   171a8:	str	w3, [x19, #88]
   171ac:	strb	w2, [x19, #204]
   171b0:	cbnz	x25, 170b8 <GOMP_taskloop_ull@@GOMP_4.5+0x3f8>
   171b4:	ldr	x2, [x29, #200]
   171b8:	bl	85c0 <memcpy@plt>
   171bc:	b	170c4 <GOMP_taskloop_ull@@GOMP_4.5+0x404>
   171c0:	and	w0, w21, #0x800
   171c4:	str	w0, [x29, #180]
   171c8:	str	x22, [x29, #216]
   171cc:	ldr	x23, [x29, #448]
   171d0:	tbnz	w21, #11, 16d8c <GOMP_taskloop_ull@@GOMP_4.5+0xcc>
   171d4:	str	x10, [x29, #168]
   171d8:	stp	x9, x4, [x29, #184]
   171dc:	bl	156a0 <GOMP_taskgroup_start@@GOMP_4.0>
   171e0:	ldr	x10, [x29, #168]
   171e4:	ldp	x9, x4, [x29, #184]
   171e8:	tbz	w21, #12, 16d98 <GOMP_taskloop_ull@@GOMP_4.5+0xd8>
   171ec:	ldr	x0, [x28, #16]
   171f0:	bl	15d78 <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   171f4:	ldr	x10, [x29, #168]
   171f8:	ldp	x9, x4, [x29, #184]
   171fc:	b	16d98 <GOMP_taskloop_ull@@GOMP_4.5+0xd8>
   17200:	mov	x0, #0x1                   	// #1
   17204:	sub	x23, x3, x24
   17208:	str	x0, [x29, #216]
   1720c:	b	16d80 <GOMP_taskloop_ull@@GOMP_4.5+0xc0>
   17210:	ldr	w0, [x29, #192]
   17214:	cbz	w0, 16ea4 <GOMP_taskloop_ull@@GOMP_4.5+0x1e4>
   17218:	strb	w25, [x29, #429]
   1721c:	b	16ea4 <GOMP_taskloop_ull@@GOMP_4.5+0x1e4>
   17220:	add	x0, x19, #0x8
   17224:	str	x4, [x29, #168]
   17228:	bl	118a8 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   1722c:	str	xzr, [x29, #232]
   17230:	ldr	x4, [x29, #168]
   17234:	b	16f28 <GOMP_taskloop_ull@@GOMP_4.5+0x268>
   17238:	ldr	x0, [x29, #216]
   1723c:	ldr	x1, [x29, #448]
   17240:	udiv	x3, x22, x0
   17244:	msub	x0, x3, x0, x22
   17248:	mul	x23, x3, x1
   1724c:	cbz	x0, 16d80 <GOMP_taskloop_ull@@GOMP_4.5+0xc0>
   17250:	add	x23, x23, x1
   17254:	sub	x22, x0, #0x1
   17258:	b	16d80 <GOMP_taskloop_ull@@GOMP_4.5+0xc0>
   1725c:	ldr	w19, [x29, #168]
   17260:	ldr	x20, [x29, #104]
   17264:	ldr	x26, [x29, #160]
   17268:	add	x0, x20, #0x500
   1726c:	mov	x2, x0
   17270:	mov	w0, #0x1                   	// #1
   17274:	str	x2, [x29, #192]
   17278:	ldaxr	w1, [x2]
   1727c:	cbnz	w1, 17288 <GOMP_taskloop_ull@@GOMP_4.5+0x5c8>
   17280:	stxr	w3, w0, [x2]
   17284:	cbnz	w3, 17278 <GOMP_taskloop_ull@@GOMP_4.5+0x5b8>
   17288:	cmp	w1, #0x0
   1728c:	b.ne	17a54 <GOMP_taskloop_ull@@GOMP_4.5+0xd94>  // b.any
   17290:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   17294:	cmp	x25, #0x0
   17298:	cset	w1, eq  // eq = none
   1729c:	ldrb	w0, [x0, #1364]
   172a0:	tst	w1, w0
   172a4:	b.ne	179bc <GOMP_taskloop_ull@@GOMP_4.5+0xcfc>  // b.any
   172a8:	cbz	x26, 172bc <GOMP_taskloop_ull@@GOMP_4.5+0x5fc>
   172ac:	ldr	x0, [x26, #56]
   172b0:	ldr	x1, [x29, #216]
   172b4:	add	x0, x0, x1
   172b8:	str	x0, [x26, #56]
   172bc:	ldr	x0, [x29, #216]
   172c0:	add	x22, x27, #0x8
   172c4:	mov	x24, #0x0                   	// #0
   172c8:	cbz	x0, 173b4 <GOMP_taskloop_ull@@GOMP_4.5+0x6f4>
   172cc:	add	x25, x29, #0xe0
   172d0:	add	x28, x26, #0x8
   172d4:	stp	x28, x25, [x29, #200]
   172d8:	mov	x25, x22
   172dc:	add	x21, x20, #0x508
   172e0:	ldr	x22, [x29, #184]
   172e4:	mov	x28, x27
   172e8:	ldr	x0, [x28, #8]
   172ec:	ldr	x23, [x22, x24, lsl #3]
   172f0:	add	x27, x23, #0x70
   172f4:	cbnz	x0, 17568 <GOMP_taskloop_ull@@GOMP_4.5+0x8a8>
   172f8:	cmp	w19, #0x0
   172fc:	ldr	x0, [x28, #24]
   17300:	b.gt	17534 <GOMP_taskloop_ull@@GOMP_4.5+0x874>
   17304:	cbz	x0, 174f0 <GOMP_taskloop_ull@@GOMP_4.5+0x830>
   17308:	ldr	x1, [x0, #8]
   1730c:	stp	x0, x1, [x23, #112]
   17310:	str	x27, [x28, #24]
   17314:	ldr	x0, [x23, #112]
   17318:	str	x27, [x0, #8]
   1731c:	ldr	x0, [x23, #120]
   17320:	str	x27, [x0]
   17324:	cbz	x26, 17470 <GOMP_taskloop_ull@@GOMP_4.5+0x7b0>
   17328:	ldr	x0, [x26, #8]
   1732c:	add	x27, x23, #0x80
   17330:	cbnz	x0, 17438 <GOMP_taskloop_ull@@GOMP_4.5+0x778>
   17334:	cmp	w19, #0x0
   17338:	ldr	x0, [x26, #24]
   1733c:	b.gt	173fc <GOMP_taskloop_ull@@GOMP_4.5+0x73c>
   17340:	cbz	x0, 175a4 <GOMP_taskloop_ull@@GOMP_4.5+0x8e4>
   17344:	ldr	x1, [x0, #8]
   17348:	stp	x0, x1, [x23, #128]
   1734c:	str	x27, [x26, #24]
   17350:	ldr	x0, [x23, #128]
   17354:	str	x27, [x0, #8]
   17358:	ldr	x0, [x23, #136]
   1735c:	str	x27, [x0]
   17360:	ldr	x0, [x20, #1288]
   17364:	cbnz	x0, 174fc <GOMP_taskloop_ull@@GOMP_4.5+0x83c>
   17368:	ldr	x0, [x20, #1304]
   1736c:	add	x1, x23, #0x60
   17370:	cbz	x0, 174e4 <GOMP_taskloop_ull@@GOMP_4.5+0x824>
   17374:	ldr	x5, [x0, #8]
   17378:	stp	x0, x5, [x23, #96]
   1737c:	str	x1, [x0, #8]
   17380:	ldr	x0, [x23, #104]
   17384:	str	x1, [x0]
   17388:	ldr	w1, [x20, #1320]
   1738c:	add	x24, x24, #0x1
   17390:	ldr	w0, [x20, #1324]
   17394:	ldr	x2, [x29, #216]
   17398:	add	w1, w1, #0x1
   1739c:	add	w0, w0, #0x1
   173a0:	str	w1, [x20, #1320]
   173a4:	str	w0, [x20, #1324]
   173a8:	cmp	x2, x24
   173ac:	b.ne	172e8 <GOMP_taskloop_ull@@GOMP_4.5+0x628>  // b.any
   173b0:	mov	x27, x28
   173b4:	ldr	w0, [x20, #132]
   173b8:	ldrb	w1, [x27, #204]
   173bc:	orr	w0, w0, #0x1
   173c0:	ldr	w2, [x20, #1328]
   173c4:	eor	w1, w1, #0x1
   173c8:	str	w0, [x20, #132]
   173cc:	ldr	w0, [x20]
   173d0:	add	w3, w2, w1
   173d4:	cmp	w3, w0
   173d8:	b.cc	1772c <GOMP_taskloop_ull@@GOMP_4.5+0xa6c>  // b.lo, b.ul, b.last
   173dc:	ldr	x1, [x29, #192]
   173e0:	ldxr	w0, [x1]
   173e4:	stlxr	w2, wzr, [x1]
   173e8:	cbnz	w2, 173e0 <GOMP_taskloop_ull@@GOMP_4.5+0x720>
   173ec:	tbnz	w0, #31, 179b0 <GOMP_taskloop_ull@@GOMP_4.5+0xcf0>
   173f0:	ldr	x0, [x29, #112]
   173f4:	mov	sp, x0
   173f8:	b	16f78 <GOMP_taskloop_ull@@GOMP_4.5+0x2b8>
   173fc:	cbz	x0, 17944 <GOMP_taskloop_ull@@GOMP_4.5+0xc84>
   17400:	mov	x0, #0x28                  	// #40
   17404:	bl	b220 <fprintf@plt+0x2710>
   17408:	ldr	x2, [x29, #200]
   1740c:	mov	x1, x0
   17410:	mov	x0, x2
   17414:	ldp	x6, x5, [x2, #16]
   17418:	str	wzr, [x1]
   1741c:	stp	x6, x5, [x1, #8]
   17420:	stp	xzr, xzr, [x1, #24]
   17424:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   17428:	ldr	x1, [x29, #200]
   1742c:	ldr	x0, [x1]
   17430:	str	xzr, [x1, #16]
   17434:	cbz	x0, 17944 <GOMP_taskloop_ull@@GOMP_4.5+0xc84>
   17438:	ldp	x0, x1, [x29, #200]
   1743c:	str	w19, [x29, #224]
   17440:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   17444:	cbz	x0, 17944 <GOMP_taskloop_ull@@GOMP_4.5+0xc84>
   17448:	ldr	x1, [x0, #8]
   1744c:	cbz	x1, 17984 <GOMP_taskloop_ull@@GOMP_4.5+0xcc4>
   17450:	ldr	x5, [x1, #8]
   17454:	stp	x1, x5, [x23, #128]
   17458:	str	x27, [x0, #8]
   1745c:	ldr	x0, [x23, #128]
   17460:	str	x27, [x0, #8]
   17464:	ldr	x0, [x23, #136]
   17468:	str	x27, [x0]
   1746c:	nop
   17470:	ldr	x0, [x20, #1288]
   17474:	cbnz	x0, 174fc <GOMP_taskloop_ull@@GOMP_4.5+0x83c>
   17478:	cmp	w19, #0x0
   1747c:	ldr	x0, [x21, #16]
   17480:	b.le	1736c <GOMP_taskloop_ull@@GOMP_4.5+0x6ac>
   17484:	cbz	x0, 174b8 <GOMP_taskloop_ull@@GOMP_4.5+0x7f8>
   17488:	mov	x0, #0x28                  	// #40
   1748c:	bl	b220 <fprintf@plt+0x2710>
   17490:	ldp	x6, x5, [x21, #16]
   17494:	mov	x1, x0
   17498:	mov	x0, x21
   1749c:	str	wzr, [x1]
   174a0:	stp	x6, x5, [x1, #8]
   174a4:	stp	xzr, xzr, [x1, #24]
   174a8:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   174ac:	str	xzr, [x21, #16]
   174b0:	ldr	x0, [x21]
   174b4:	cbnz	x0, 174fc <GOMP_taskloop_ull@@GOMP_4.5+0x83c>
   174b8:	mov	x0, #0x28                  	// #40
   174bc:	bl	b220 <fprintf@plt+0x2710>
   174c0:	mov	x27, x0
   174c4:	mov	x0, x21
   174c8:	mov	x1, x27
   174cc:	str	w19, [x27]
   174d0:	stp	xzr, xzr, [x27, #8]
   174d4:	stp	xzr, xzr, [x27, #24]
   174d8:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   174dc:	mov	x0, x27
   174e0:	b	17510 <GOMP_taskloop_ull@@GOMP_4.5+0x850>
   174e4:	stp	x1, x1, [x23, #96]
   174e8:	str	x1, [x20, #1304]
   174ec:	b	17388 <GOMP_taskloop_ull@@GOMP_4.5+0x6c8>
   174f0:	stp	x27, x27, [x23, #112]
   174f4:	str	x27, [x28, #24]
   174f8:	b	17324 <GOMP_taskloop_ull@@GOMP_4.5+0x664>
   174fc:	ldr	x1, [x29, #208]
   17500:	mov	x0, x21
   17504:	str	w19, [x29, #224]
   17508:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   1750c:	cbz	x0, 174b8 <GOMP_taskloop_ull@@GOMP_4.5+0x7f8>
   17510:	ldr	x1, [x0, #8]
   17514:	add	x5, x23, #0x60
   17518:	cbz	x1, 17938 <GOMP_taskloop_ull@@GOMP_4.5+0xc78>
   1751c:	ldr	x0, [x1, #8]
   17520:	stp	x1, x0, [x23, #96]
   17524:	str	x5, [x1, #8]
   17528:	ldr	x0, [x23, #104]
   1752c:	str	x5, [x0]
   17530:	b	17388 <GOMP_taskloop_ull@@GOMP_4.5+0x6c8>
   17534:	cbz	x0, 178a8 <GOMP_taskloop_ull@@GOMP_4.5+0xbe8>
   17538:	mov	x0, #0x28                  	// #40
   1753c:	bl	b220 <fprintf@plt+0x2710>
   17540:	ldp	x6, x5, [x25, #16]
   17544:	mov	x1, x0
   17548:	mov	x0, x25
   1754c:	str	wzr, [x1]
   17550:	stp	x6, x5, [x1, #8]
   17554:	stp	xzr, xzr, [x1, #24]
   17558:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   1755c:	str	xzr, [x25, #16]
   17560:	ldr	x0, [x25]
   17564:	cbz	x0, 178a8 <GOMP_taskloop_ull@@GOMP_4.5+0xbe8>
   17568:	ldr	x1, [x29, #208]
   1756c:	mov	x0, x25
   17570:	str	w19, [x29, #224]
   17574:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   17578:	cbz	x0, 178a8 <GOMP_taskloop_ull@@GOMP_4.5+0xbe8>
   1757c:	ldr	x1, [x0, #8]
   17580:	cbz	x1, 1792c <GOMP_taskloop_ull@@GOMP_4.5+0xc6c>
   17584:	ldr	x5, [x1, #8]
   17588:	stp	x1, x5, [x23, #112]
   1758c:	str	x27, [x0, #8]
   17590:	ldr	x0, [x23, #112]
   17594:	str	x27, [x0, #8]
   17598:	ldr	x0, [x23, #120]
   1759c:	str	x27, [x0]
   175a0:	b	17324 <GOMP_taskloop_ull@@GOMP_4.5+0x664>
   175a4:	stp	x27, x27, [x23, #128]
   175a8:	str	x27, [x26, #24]
   175ac:	b	17360 <GOMP_taskloop_ull@@GOMP_4.5+0x6a0>
   175b0:	ldr	x0, [x29, #200]
   175b4:	neg	x2, x4
   175b8:	ldr	x3, [x29, #216]
   175bc:	add	x0, x0, x4
   175c0:	sub	x0, x0, #0x1
   175c4:	sub	x4, x4, #0x1
   175c8:	and	x5, x0, x2
   175cc:	mov	x1, sp
   175d0:	add	x0, x3, x3, lsl #1
   175d4:	stp	x5, x1, [x29, #184]
   175d8:	add	x6, x10, x9
   175dc:	add	x0, x3, x0, lsl #2
   175e0:	sub	x7, x1, x0, lsl #4
   175e4:	madd	x1, x5, x3, x4
   175e8:	mov	sp, x7
   175ec:	str	x7, [x29, #168]
   175f0:	add	x1, x1, #0xf
   175f4:	lsl	x0, x0, #4
   175f8:	and	x1, x1, #0xfffffffffffffff0
   175fc:	sub	sp, sp, x1
   17600:	add	x4, sp, x4
   17604:	and	x27, x4, x2
   17608:	ldr	x2, [x6, #80]
   1760c:	cbz	x3, 17720 <GOMP_taskloop_ull@@GOMP_4.5+0xa60>
   17610:	add	x4, x0, x7
   17614:	and	w0, w21, #0x2
   17618:	mov	x21, x7
   1761c:	str	w0, [x29, #200]
   17620:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   17624:	add	x7, x0, #0x2b8
   17628:	mov	x3, x2
   1762c:	mov	x26, x7
   17630:	stp	x10, x9, [x29, #120]
   17634:	stp	x27, x20, [x29, #136]
   17638:	mov	x20, x27
   1763c:	mov	x27, x28
   17640:	mov	x28, x6
   17644:	stp	x22, x23, [x29, #152]
   17648:	mov	x22, x5
   1764c:	mov	x23, x2
   17650:	str	x24, [x29, #432]
   17654:	mov	x24, x21
   17658:	mov	x21, x4
   1765c:	b	176ac <GOMP_taskloop_ull@@GOMP_4.5+0x9ec>
   17660:	ldrb	w4, [x3, #205]
   17664:	cbnz	w4, 17670 <GOMP_taskloop_ull@@GOMP_4.5+0x9b0>
   17668:	ldr	w0, [x29, #200]
   1766c:	cbz	w0, 17678 <GOMP_taskloop_ull@@GOMP_4.5+0x9b8>
   17670:	mov	w0, #0x1                   	// #1
   17674:	strb	w0, [x24, #205]
   17678:	ldrb	w4, [x3, #204]
   1767c:	ldr	x3, [x3, #40]
   17680:	str	x3, [x24, #40]
   17684:	strb	w4, [x24, #204]
   17688:	str	x24, [x28, #80]
   1768c:	mov	x0, x20
   17690:	mov	x1, x27
   17694:	add	x24, x24, #0xd0
   17698:	blr	x25
   1769c:	add	x20, x20, x22
   176a0:	cmp	x21, x24
   176a4:	b.eq	17778 <GOMP_taskloop_ull@@GOMP_4.5+0xab8>  // b.none
   176a8:	ldr	x3, [x28, #80]
   176ac:	mov	x5, x24
   176b0:	cmp	x3, #0x0
   176b4:	add	x4, x3, #0x90
   176b8:	csel	x4, x26, x4, eq  // eq = none
   176bc:	mov	w0, #0x1                   	// #1
   176c0:	str	x23, [x5], #144
   176c4:	ldp	x8, x9, [x4]
   176c8:	stp	x8, x9, [x24, #144]
   176cc:	ldp	x8, x9, [x4, #16]
   176d0:	stp	x8, x9, [x5, #16]
   176d4:	ldr	x4, [x4, #32]
   176d8:	str	x4, [x5, #32]
   176dc:	str	xzr, [x24, #8]
   176e0:	stp	xzr, xzr, [x24, #24]
   176e4:	stp	xzr, xzr, [x24, #40]
   176e8:	stp	xzr, xzr, [x24, #56]
   176ec:	str	xzr, [x24, #72]
   176f0:	str	w19, [x24, #88]
   176f4:	str	w0, [x24, #200]
   176f8:	strb	wzr, [x24, #204]
   176fc:	strb	wzr, [x24, #205]
   17700:	strb	wzr, [x24, #206]
   17704:	strb	wzr, [x24, #207]
   17708:	cbnz	x3, 17660 <GOMP_taskloop_ull@@GOMP_4.5+0x9a0>
   1770c:	ldr	w0, [x29, #200]
   17710:	cbz	w0, 17688 <GOMP_taskloop_ull@@GOMP_4.5+0x9c8>
   17714:	mov	w0, #0x1                   	// #1
   17718:	strb	w0, [x24, #205]
   1771c:	b	17688 <GOMP_taskloop_ull@@GOMP_4.5+0x9c8>
   17720:	ldr	x0, [x29, #192]
   17724:	mov	sp, x0
   17728:	b	16f78 <GOMP_taskloop_ull@@GOMP_4.5+0x2b8>
   1772c:	sub	w0, w0, w2
   17730:	sub	w1, w0, w1
   17734:	ldr	x0, [x29, #216]
   17738:	ldr	x2, [x29, #192]
   1773c:	cmp	x0, w1, sxtw
   17740:	csel	w1, w0, w1, cc  // cc = lo, ul, last
   17744:	ldxr	w0, [x2]
   17748:	stlxr	w3, wzr, [x2]
   1774c:	cbnz	w3, 17744 <GOMP_taskloop_ull@@GOMP_4.5+0xa84>
   17750:	tbnz	w0, #31, 17764 <GOMP_taskloop_ull@@GOMP_4.5+0xaa4>
   17754:	cbz	w1, 173f0 <GOMP_taskloop_ull@@GOMP_4.5+0x730>
   17758:	add	x0, x20, #0x80
   1775c:	bl	1abd8 <omp_get_num_procs@@OMP_1.0+0x530>
   17760:	b	173f0 <GOMP_taskloop_ull@@GOMP_4.5+0x730>
   17764:	ldr	x0, [x29, #192]
   17768:	str	w1, [x29, #216]
   1776c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   17770:	ldr	w1, [x29, #216]
   17774:	b	17754 <GOMP_taskloop_ull@@GOMP_4.5+0xa94>
   17778:	ldp	x10, x9, [x29, #120]
   1777c:	mov	x26, #0x0                   	// #0
   17780:	ldp	x27, x20, [x29, #136]
   17784:	mov	w19, #0x1                   	// #1
   17788:	ldp	x22, x23, [x29, #152]
   1778c:	ldr	x0, [x29, #168]
   17790:	add	x25, x10, x9
   17794:	add	x20, x20, #0x500
   17798:	add	x21, x0, #0x8
   1779c:	mov	x0, x26
   177a0:	mov	x26, x23
   177a4:	mov	x23, x0
   177a8:	ldr	x28, [x29, #184]
   177ac:	ldr	x24, [x29, #432]
   177b0:	b	177dc <GOMP_taskloop_ull@@GOMP_4.5+0xb1c>
   177b4:	ldr	x1, [x25, #80]
   177b8:	ldr	x0, [x1, #56]
   177bc:	cbnz	x0, 17898 <GOMP_taskloop_ull@@GOMP_4.5+0xbd8>
   177c0:	ldr	x0, [x1]
   177c4:	str	x0, [x25, #80]
   177c8:	ldr	x0, [x29, #216]
   177cc:	add	x23, x23, #0x1
   177d0:	add	x21, x21, #0xd0
   177d4:	cmp	x0, x23
   177d8:	b.eq	17720 <GOMP_taskloop_ull@@GOMP_4.5+0xa60>  // b.none
   177dc:	sub	x0, x21, #0x8
   177e0:	str	x0, [x25, #80]
   177e4:	ldr	x1, [x29, #208]
   177e8:	cmp	x22, x23
   177ec:	ldr	x0, [x29, #448]
   177f0:	str	x24, [x27]
   177f4:	add	x24, x24, x26
   177f8:	str	x24, [x27, #8]
   177fc:	sub	x0, x26, x0
   17800:	csel	x26, x0, x26, eq  // eq = none
   17804:	mov	x0, x27
   17808:	blr	x1
   1780c:	add	x27, x27, x28
   17810:	ldr	x0, [x21]
   17814:	cbnz	x0, 17820 <GOMP_taskloop_ull@@GOMP_4.5+0xb60>
   17818:	ldr	x0, [x21, #16]
   1781c:	cbz	x0, 177b4 <GOMP_taskloop_ull@@GOMP_4.5+0xaf4>
   17820:	ldaxr	w1, [x20]
   17824:	cbnz	w1, 17830 <GOMP_taskloop_ull@@GOMP_4.5+0xb70>
   17828:	stxr	w0, w19, [x20]
   1782c:	cbnz	w0, 17820 <GOMP_taskloop_ull@@GOMP_4.5+0xb60>
   17830:	cmp	w1, #0x0
   17834:	b.ne	17a60 <GOMP_taskloop_ull@@GOMP_4.5+0xda0>  // b.any
   17838:	ldr	x1, [x21]
   1783c:	cbnz	x1, 17974 <GOMP_taskloop_ull@@GOMP_4.5+0xcb4>
   17840:	ldr	x1, [x21, #16]
   17844:	mov	x0, x1
   17848:	cbz	x1, 17860 <GOMP_taskloop_ull@@GOMP_4.5+0xba0>
   1784c:	nop
   17850:	stur	xzr, [x0, #-112]
   17854:	ldr	x0, [x0]
   17858:	cmp	x1, x0
   1785c:	b.ne	17850 <GOMP_taskloop_ull@@GOMP_4.5+0xb90>  // b.any
   17860:	ldxr	w0, [x20]
   17864:	stlxr	w1, wzr, [x20]
   17868:	cbnz	w1, 17860 <GOMP_taskloop_ull@@GOMP_4.5+0xba0>
   1786c:	tbz	w0, #31, 177b4 <GOMP_taskloop_ull@@GOMP_4.5+0xaf4>
   17870:	mov	x0, x20
   17874:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   17878:	b	177b4 <GOMP_taskloop_ull@@GOMP_4.5+0xaf4>
   1787c:	cmp	x22, #0x1
   17880:	b.ls	171c0 <GOMP_taskloop_ull@@GOMP_4.5+0x500>  // b.plast
   17884:	ldr	x0, [x29, #448]
   17888:	mul	x23, x22, x0
   1788c:	mov	x0, #0x1                   	// #1
   17890:	str	x0, [x29, #216]
   17894:	b	16d80 <GOMP_taskloop_ull@@GOMP_4.5+0xc0>
   17898:	str	x1, [x29, #200]
   1789c:	bl	8900 <free@plt>
   178a0:	ldr	x1, [x29, #200]
   178a4:	b	177c0 <GOMP_taskloop_ull@@GOMP_4.5+0xb00>
   178a8:	mov	x0, #0x28                  	// #40
   178ac:	bl	b220 <fprintf@plt+0x2710>
   178b0:	mov	x1, x0
   178b4:	mov	x0, x25
   178b8:	str	x1, [x29, #184]
   178bc:	str	w19, [x1]
   178c0:	stp	xzr, xzr, [x1, #8]
   178c4:	stp	xzr, xzr, [x1, #24]
   178c8:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   178cc:	ldr	x1, [x29, #184]
   178d0:	mov	x0, x1
   178d4:	b	1757c <GOMP_taskloop_ull@@GOMP_4.5+0x8bc>
   178d8:	add	x0, x10, x9
   178dc:	ldr	x27, [x0, #80]
   178e0:	cbz	x27, 17990 <GOMP_taskloop_ull@@GOMP_4.5+0xcd0>
   178e4:	ldr	x0, [x27, #40]
   178e8:	cbz	x0, 1790c <GOMP_taskloop_ull@@GOMP_4.5+0xc4c>
   178ec:	ldrb	w1, [x0, #49]
   178f0:	cbnz	w1, 16f84 <GOMP_taskloop_ull@@GOMP_4.5+0x2c4>
   178f4:	ldrb	w1, [x0, #50]
   178f8:	cbz	w1, 1790c <GOMP_taskloop_ull@@GOMP_4.5+0xc4c>
   178fc:	ldr	x0, [x0]
   17900:	cbz	x0, 1790c <GOMP_taskloop_ull@@GOMP_4.5+0xc4c>
   17904:	ldrb	w0, [x0, #49]
   17908:	cbnz	w0, 16f84 <GOMP_taskloop_ull@@GOMP_4.5+0x2c4>
   1790c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   17910:	ldr	w0, [x0, #1368]
   17914:	cmp	w0, w19
   17918:	csel	w19, w0, w19, le
   1791c:	tst	x21, #0x400
   17920:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   17924:	b.eq	16db4 <GOMP_taskloop_ull@@GOMP_4.5+0xf4>  // b.none
   17928:	b	17010 <GOMP_taskloop_ull@@GOMP_4.5+0x350>
   1792c:	stp	x27, x27, [x23, #112]
   17930:	str	x27, [x0, #8]
   17934:	b	17324 <GOMP_taskloop_ull@@GOMP_4.5+0x664>
   17938:	stp	x5, x5, [x23, #96]
   1793c:	str	x5, [x0, #8]
   17940:	b	17388 <GOMP_taskloop_ull@@GOMP_4.5+0x6c8>
   17944:	mov	x0, #0x28                  	// #40
   17948:	bl	b220 <fprintf@plt+0x2710>
   1794c:	mov	x1, x0
   17950:	str	x1, [x29, #184]
   17954:	ldr	x0, [x29, #200]
   17958:	str	w19, [x1]
   1795c:	stp	xzr, xzr, [x1, #8]
   17960:	stp	xzr, xzr, [x1, #24]
   17964:	bl	26490 <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   17968:	ldr	x1, [x29, #184]
   1796c:	mov	x0, x1
   17970:	b	17448 <GOMP_taskloop_ull@@GOMP_4.5+0x788>
   17974:	mov	x0, x21
   17978:	bl	118a8 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   1797c:	str	xzr, [x21]
   17980:	b	17860 <GOMP_taskloop_ull@@GOMP_4.5+0xba0>
   17984:	stp	x27, x27, [x23, #128]
   17988:	str	x27, [x0, #8]
   1798c:	b	17470 <GOMP_taskloop_ull@@GOMP_4.5+0x7b0>
   17990:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   17994:	ldr	w0, [x0, #1368]
   17998:	cmp	w0, w19
   1799c:	csel	w19, w0, w19, le
   179a0:	tst	x21, #0x400
   179a4:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   179a8:	b.eq	16db4 <GOMP_taskloop_ull@@GOMP_4.5+0xf4>  // b.none
   179ac:	b	17018 <GOMP_taskloop_ull@@GOMP_4.5+0x358>
   179b0:	ldr	x0, [x29, #192]
   179b4:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   179b8:	b	173f0 <GOMP_taskloop_ull@@GOMP_4.5+0x730>
   179bc:	ldr	w0, [x20, #132]
   179c0:	tbnz	w0, #2, 179e8 <GOMP_taskloop_ull@@GOMP_4.5+0xd28>
   179c4:	cbz	x26, 172bc <GOMP_taskloop_ull@@GOMP_4.5+0x5fc>
   179c8:	ldrb	w0, [x26, #49]
   179cc:	cbnz	w0, 179e8 <GOMP_taskloop_ull@@GOMP_4.5+0xd28>
   179d0:	ldrb	w0, [x26, #50]
   179d4:	cbz	w0, 172ac <GOMP_taskloop_ull@@GOMP_4.5+0x5ec>
   179d8:	ldr	x0, [x26]
   179dc:	cbz	x0, 172ac <GOMP_taskloop_ull@@GOMP_4.5+0x5ec>
   179e0:	ldrb	w0, [x0, #49]
   179e4:	cbz	w0, 172ac <GOMP_taskloop_ull@@GOMP_4.5+0x5ec>
   179e8:	ldr	x0, [x29, #192]
   179ec:	mov	x19, #0x0                   	// #0
   179f0:	bl	121a0 <GOMP_single_copy_end@@GOMP_1.0+0xa18>
   179f4:	ldr	x0, [x29, #216]
   179f8:	cbz	x0, 17a24 <GOMP_taskloop_ull@@GOMP_4.5+0xd64>
   179fc:	ldr	x0, [x29, #184]
   17a00:	ldr	x20, [x0, x19, lsl #3]
   17a04:	add	x19, x19, #0x1
   17a08:	ldr	x0, [x20, #56]
   17a0c:	cbnz	x0, 17a4c <GOMP_taskloop_ull@@GOMP_4.5+0xd8c>
   17a10:	mov	x0, x20
   17a14:	bl	8900 <free@plt>
   17a18:	ldr	x0, [x29, #216]
   17a1c:	cmp	x0, x19
   17a20:	b.ne	179fc <GOMP_taskloop_ull@@GOMP_4.5+0xd3c>  // b.any
   17a24:	ldr	w0, [x29, #180]
   17a28:	cbz	w0, 17a6c <GOMP_taskloop_ull@@GOMP_4.5+0xdac>
   17a2c:	ldr	x0, [x29, #112]
   17a30:	mov	sp, x0
   17a34:	b	16f84 <GOMP_taskloop_ull@@GOMP_4.5+0x2c4>
   17a38:	mov	x0, x4
   17a3c:	str	x4, [x29, #168]
   17a40:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   17a44:	ldr	x4, [x29, #168]
   17a48:	b	16f04 <GOMP_taskloop_ull@@GOMP_4.5+0x244>
   17a4c:	bl	8900 <free@plt>
   17a50:	b	17a10 <GOMP_taskloop_ull@@GOMP_4.5+0xd50>
   17a54:	ldr	x0, [x29, #192]
   17a58:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   17a5c:	b	17290 <GOMP_taskloop_ull@@GOMP_4.5+0x5d0>
   17a60:	mov	x0, x20
   17a64:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   17a68:	b	17838 <GOMP_taskloop_ull@@GOMP_4.5+0xb78>
   17a6c:	bl	15718 <GOMP_taskgroup_end@@GOMP_4.0>
   17a70:	b	17a2c <GOMP_taskloop_ull@@GOMP_4.5+0xd6c>
   17a74:	nop

0000000000017a78 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0>:
   17a78:	stp	x29, x30, [sp, #-32]!
   17a7c:	mov	x29, sp
   17a80:	str	x19, [sp, #16]
   17a84:	mov	x19, x0
   17a88:	ldr	x0, [x0, #40]
   17a8c:	bl	8900 <free@plt>
   17a90:	b	17a9c <GOMP_taskgroup_reduction_unregister@@GOMP_5.0+0x24>
   17a94:	ldr	x0, [x19, #40]
   17a98:	cbnz	x0, 17aac <GOMP_taskgroup_reduction_unregister@@GOMP_5.0+0x34>
   17a9c:	ldr	x0, [x19, #16]
   17aa0:	bl	b310 <fprintf@plt+0x2800>
   17aa4:	ldr	x19, [x19, #32]
   17aa8:	cbnz	x19, 17a94 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0+0x1c>
   17aac:	ldr	x19, [sp, #16]
   17ab0:	ldp	x29, x30, [sp], #32
   17ab4:	ret

0000000000017ab8 <GOMP_task_reduction_remap@@GOMP_5.0>:
   17ab8:	adrp	x4, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   17abc:	ldr	x4, [x4, #4016]
   17ac0:	mrs	x3, tpidr_el0
   17ac4:	stp	x29, x30, [sp, #-32]!
   17ac8:	mov	x14, x0
   17acc:	add	x3, x3, x4
   17ad0:	mov	x29, sp
   17ad4:	stp	x19, x20, [sp, #16]
   17ad8:	ldr	w15, [x3, #40]
   17adc:	ldr	x0, [x3, #80]
   17ae0:	ldr	x0, [x0, #40]
   17ae4:	ldr	x20, [x0, #40]
   17ae8:	ldr	x19, [x20, #40]
   17aec:	cbz	x14, 17c10 <GOMP_task_reduction_remap@@GOMP_5.0+0x158>
   17af0:	mov	x18, x1
   17af4:	mov	x12, x2
   17af8:	mov	w15, w15
   17afc:	mov	x13, #0x0                   	// #0
   17b00:	b	17b30 <GOMP_task_reduction_remap@@GOMP_5.0+0x78>
   17b04:	ldp	x4, x3, [x0, #8]
   17b08:	cmp	x13, x18
   17b0c:	ldp	x1, x2, [x3, #8]
   17b10:	add	x2, x2, x4
   17b14:	madd	x1, x15, x1, x2
   17b18:	str	x1, [x12]
   17b1c:	b.cc	17bf8 <GOMP_task_reduction_remap@@GOMP_5.0+0x140>  // b.lo, b.ul, b.last
   17b20:	add	x13, x13, #0x1
   17b24:	add	x12, x12, #0x8
   17b28:	cmp	x14, x13
   17b2c:	b.eq	17c10 <GOMP_task_reduction_remap@@GOMP_5.0+0x158>  // b.none
   17b30:	mov	x1, x12
   17b34:	mov	x0, x19
   17b38:	bl	117c8 <GOMP_single_copy_end@@GOMP_1.0+0x40>
   17b3c:	cbnz	x0, 17b04 <GOMP_task_reduction_remap@@GOMP_5.0+0x4c>
   17b40:	ldr	x4, [x12]
   17b44:	mov	x2, x20
   17b48:	ldr	x3, [x2, #16]
   17b4c:	cmp	x4, x3
   17b50:	b.cc	17b60 <GOMP_task_reduction_remap@@GOMP_5.0+0xa8>  // b.lo, b.ul, b.last
   17b54:	ldr	x0, [x2, #48]
   17b58:	cmp	x4, x0
   17b5c:	b.cc	17b78 <GOMP_task_reduction_remap@@GOMP_5.0+0xc0>  // b.lo, b.ul, b.last
   17b60:	ldr	x2, [x2, #32]
   17b64:	cbnz	x2, 17b48 <GOMP_task_reduction_remap@@GOMP_5.0+0x90>
   17b68:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   17b6c:	mov	x1, x4
   17b70:	add	x0, x0, #0xbb8
   17b74:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   17b78:	ldr	x0, [x2, #8]
   17b7c:	sub	x4, x4, x3
   17b80:	cmp	x13, x18
   17b84:	udiv	x1, x4, x0
   17b88:	msub	x4, x1, x0, x4
   17b8c:	madd	x0, x15, x0, x4
   17b90:	add	x3, x0, x3
   17b94:	str	x3, [x12]
   17b98:	b.cs	17b20 <GOMP_task_reduction_remap@@GOMP_5.0+0x68>  // b.hs, b.nlast
   17b9c:	ldr	x5, [x2]
   17ba0:	mov	x6, #0x0                   	// #0
   17ba4:	sub	x5, x5, #0x1
   17ba8:	b	17bb8 <GOMP_task_reduction_remap@@GOMP_5.0+0x100>
   17bac:	add	x6, x1, #0x1
   17bb0:	cmp	x5, x6
   17bb4:	b.cc	17be8 <GOMP_task_reduction_remap@@GOMP_5.0+0x130>  // b.lo, b.ul, b.last
   17bb8:	add	x1, x6, x5
   17bbc:	and	x0, x1, #0xfffffffffffffffe
   17bc0:	lsr	x1, x1, #1
   17bc4:	add	x0, x0, x1
   17bc8:	add	x0, x2, x0, lsl #3
   17bcc:	ldr	x7, [x0, #64]
   17bd0:	cmp	x7, x4
   17bd4:	b.cc	17bac <GOMP_task_reduction_remap@@GOMP_5.0+0xf4>  // b.lo, b.ul, b.last
   17bd8:	b.eq	17c1c <GOMP_task_reduction_remap@@GOMP_5.0+0x164>  // b.none
   17bdc:	sub	x5, x1, #0x1
   17be0:	cmp	x5, x6
   17be4:	b.cs	17bb8 <GOMP_task_reduction_remap@@GOMP_5.0+0x100>  // b.hs, b.nlast
   17be8:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   17bec:	mov	x1, x3
   17bf0:	add	x0, x0, #0xbb8
   17bf4:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   17bf8:	ldr	x0, [x0]
   17bfc:	str	x0, [x12, x14, lsl #3]
   17c00:	add	x13, x13, #0x1
   17c04:	add	x12, x12, #0x8
   17c08:	cmp	x14, x13
   17c0c:	b.ne	17b30 <GOMP_task_reduction_remap@@GOMP_5.0+0x78>  // b.any
   17c10:	ldp	x19, x20, [sp, #16]
   17c14:	ldp	x29, x30, [sp], #32
   17c18:	ret
   17c1c:	ldr	x0, [x0, #56]
   17c20:	str	x0, [x12, x14, lsl #3]
   17c24:	b	17b20 <GOMP_task_reduction_remap@@GOMP_5.0+0x68>
   17c28:	stp	x29, x30, [sp, #-96]!
   17c2c:	mov	x29, sp
   17c30:	stp	x19, x20, [sp, #16]
   17c34:	stp	x21, x22, [sp, #32]
   17c38:	mov	w22, w1
   17c3c:	stp	x23, x24, [sp, #48]
   17c40:	mov	x23, #0x0                   	// #0
   17c44:	str	x25, [sp, #64]
   17c48:	mov	x25, x0
   17c4c:	mov	x0, #0x40                  	// #64
   17c50:	bl	b220 <fprintf@plt+0x2710>
   17c54:	mov	x24, x0
   17c58:	str	xzr, [x0], #8
   17c5c:	mov	x19, x25
   17c60:	str	xzr, [x24, #8]
   17c64:	stp	xzr, xzr, [x0, #16]
   17c68:	str	xzr, [x24, #40]
   17c6c:	strh	wzr, [x24, #48]
   17c70:	strb	wzr, [x24, #50]
   17c74:	str	wzr, [x24, #52]
   17c78:	str	xzr, [x24, #56]
   17c7c:	nop
   17c80:	ldp	x20, x0, [x19, #8]
   17c84:	mul	x20, x22, x20
   17c88:	mov	x1, x20
   17c8c:	bl	b2d0 <fprintf@plt+0x27c0>
   17c90:	mov	x2, x20
   17c94:	mov	x21, x0
   17c98:	mov	w1, #0x0                   	// #0
   17c9c:	bl	87c0 <memset@plt>
   17ca0:	ldr	x0, [x19, #32]
   17ca4:	add	x20, x20, x21
   17ca8:	ldr	x1, [x19]
   17cac:	str	x21, [x19, #16]
   17cb0:	stp	xzr, x20, [x19, #40]
   17cb4:	mov	x19, x0
   17cb8:	add	x23, x23, x1
   17cbc:	cbnz	x0, 17c80 <GOMP_task_reduction_remap@@GOMP_5.0+0x1c8>
   17cc0:	mov	x0, x23
   17cc4:	mov	x22, x25
   17cc8:	add	x23, sp, #0x58
   17ccc:	bl	11910 <GOMP_single_copy_end@@GOMP_1.0+0x188>
   17cd0:	str	x0, [sp, #88]
   17cd4:	nop
   17cd8:	ldr	x0, [x22]
   17cdc:	add	x20, x22, #0x38
   17ce0:	mov	x21, #0x0                   	// #0
   17ce4:	cbz	x0, 17d18 <GOMP_task_reduction_remap@@GOMP_5.0+0x260>
   17ce8:	str	x22, [x20, #16]
   17cec:	mov	x19, x20
   17cf0:	mov	x0, x23
   17cf4:	mov	w2, #0x1                   	// #1
   17cf8:	mov	x1, x19
   17cfc:	bl	11a80 <GOMP_single_copy_end@@GOMP_1.0+0x2f8>
   17d00:	ldr	x1, [x22]
   17d04:	str	x19, [x0]
   17d08:	add	x21, x21, #0x1
   17d0c:	add	x20, x20, #0x18
   17d10:	cmp	x21, x1
   17d14:	b.cc	17ce8 <GOMP_task_reduction_remap@@GOMP_5.0+0x230>  // b.lo, b.ul, b.last
   17d18:	ldr	x0, [x22, #32]
   17d1c:	cbz	x0, 17d28 <GOMP_task_reduction_remap@@GOMP_5.0+0x270>
   17d20:	mov	x22, x0
   17d24:	b	17cd8 <GOMP_task_reduction_remap@@GOMP_5.0+0x220>
   17d28:	ldr	x0, [sp, #88]
   17d2c:	ldp	x19, x20, [sp, #16]
   17d30:	str	x0, [x22, #40]
   17d34:	str	x25, [x24, #40]
   17d38:	mov	x0, x24
   17d3c:	ldp	x21, x22, [sp, #32]
   17d40:	ldp	x23, x24, [sp, #48]
   17d44:	ldr	x25, [sp, #64]
   17d48:	ldp	x29, x30, [sp], #96
   17d4c:	ret
   17d50:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   17d54:	ldr	x3, [x3, #4016]
   17d58:	mrs	x2, tpidr_el0
   17d5c:	stp	x29, x30, [sp, #-112]!
   17d60:	add	x2, x2, x3
   17d64:	mov	x29, sp
   17d68:	stp	x25, x26, [sp, #64]
   17d6c:	mov	x25, x0
   17d70:	ldr	x26, [x2, #80]
   17d74:	stp	x19, x20, [sp, #16]
   17d78:	mov	x19, x0
   17d7c:	stp	x21, x22, [sp, #32]
   17d80:	mov	x22, x1
   17d84:	ldr	x1, [x2, #16]
   17d88:	stp	x23, x24, [sp, #48]
   17d8c:	ldr	x0, [x26, #40]
   17d90:	ldr	w23, [x1]
   17d94:	ldr	x24, [x0, #40]
   17d98:	str	x27, [sp, #80]
   17d9c:	mov	x27, #0x0                   	// #0
   17da0:	cbnz	x22, 17df0 <GOMP_task_reduction_remap@@GOMP_5.0+0x338>
   17da4:	nop
   17da8:	ldp	x20, x0, [x19, #8]
   17dac:	mul	x20, x23, x20
   17db0:	mov	x1, x20
   17db4:	bl	b2d0 <fprintf@plt+0x27c0>
   17db8:	mov	x2, x20
   17dbc:	mov	x21, x0
   17dc0:	mov	w1, #0x0                   	// #0
   17dc4:	bl	87c0 <memset@plt>
   17dc8:	ldr	x0, [x19, #32]
   17dcc:	add	x20, x20, x21
   17dd0:	ldr	x1, [x19]
   17dd4:	str	x21, [x19, #16]
   17dd8:	str	xzr, [x19, #40]
   17ddc:	str	x20, [x19, #48]
   17de0:	add	x27, x27, x1
   17de4:	cbz	x0, 17e18 <GOMP_task_reduction_remap@@GOMP_5.0+0x360>
   17de8:	mov	x19, x0
   17dec:	cbz	x22, 17da8 <GOMP_task_reduction_remap@@GOMP_5.0+0x2f0>
   17df0:	ldr	x0, [x22, #16]
   17df4:	str	x0, [x19, #16]
   17df8:	ldr	x1, [x19]
   17dfc:	ldr	x0, [x22, #48]
   17e00:	str	x0, [x19, #48]
   17e04:	ldr	x0, [x19, #32]
   17e08:	add	x27, x27, x1
   17e0c:	ldr	x22, [x22, #32]
   17e10:	str	xzr, [x19, #40]
   17e14:	cbnz	x0, 17de8 <GOMP_task_reduction_remap@@GOMP_5.0+0x330>
   17e18:	str	x24, [x19, #32]
   17e1c:	cbz	x24, 17e28 <GOMP_task_reduction_remap@@GOMP_5.0+0x370>
   17e20:	ldr	x20, [x24, #40]
   17e24:	cbnz	x20, 17e94 <GOMP_task_reduction_remap@@GOMP_5.0+0x3dc>
   17e28:	mov	x0, x27
   17e2c:	bl	11910 <GOMP_single_copy_end@@GOMP_1.0+0x188>
   17e30:	str	x0, [sp, #104]
   17e34:	mov	x22, x25
   17e38:	add	x23, sp, #0x68
   17e3c:	nop
   17e40:	ldr	x0, [x22]
   17e44:	add	x20, x22, #0x38
   17e48:	mov	x21, #0x0                   	// #0
   17e4c:	cbz	x0, 17e80 <GOMP_task_reduction_remap@@GOMP_5.0+0x3c8>
   17e50:	str	x22, [x20, #16]
   17e54:	mov	x19, x20
   17e58:	mov	x0, x23
   17e5c:	mov	w2, #0x1                   	// #1
   17e60:	mov	x1, x19
   17e64:	bl	11a80 <GOMP_single_copy_end@@GOMP_1.0+0x2f8>
   17e68:	ldr	x1, [x22]
   17e6c:	str	x19, [x0]
   17e70:	add	x21, x21, #0x1
   17e74:	add	x20, x20, #0x18
   17e78:	cmp	x21, x1
   17e7c:	b.cc	17e50 <GOMP_task_reduction_remap@@GOMP_5.0+0x398>  // b.lo, b.ul, b.last
   17e80:	ldr	x0, [x22, #32]
   17e84:	cmp	x24, x0
   17e88:	b.eq	17ef8 <GOMP_task_reduction_remap@@GOMP_5.0+0x440>  // b.none
   17e8c:	mov	x22, x0
   17e90:	b	17e40 <GOMP_task_reduction_remap@@GOMP_5.0+0x388>
   17e94:	ldp	x0, x1, [x20, #8]
   17e98:	mov	x19, x20
   17e9c:	sub	x0, x0, x1
   17ea0:	add	x0, x0, x27
   17ea4:	bl	11910 <GOMP_single_copy_end@@GOMP_1.0+0x188>
   17ea8:	mov	x22, x0
   17eac:	ldp	x0, x1, [x20, #8]
   17eb0:	ldr	x21, [x19], #32
   17eb4:	str	x22, [sp, #104]
   17eb8:	sub	x0, x0, x1
   17ebc:	add	x21, x19, x21, lsl #3
   17ec0:	str	x0, [x22, #8]
   17ec4:	b	17ed0 <GOMP_task_reduction_remap@@GOMP_5.0+0x418>
   17ec8:	cmp	x21, x19
   17ecc:	b.ls	17e34 <GOMP_task_reduction_remap@@GOMP_5.0+0x37c>  // b.plast
   17ed0:	ldr	x20, [x19]
   17ed4:	add	x19, x19, #0x8
   17ed8:	cmp	x20, #0x1
   17edc:	b.ls	17ec8 <GOMP_task_reduction_remap@@GOMP_5.0+0x410>  // b.plast
   17ee0:	ldr	x1, [x20]
   17ee4:	mov	x0, x22
   17ee8:	eor	x1, x1, x1, lsr #32
   17eec:	bl	119c0 <GOMP_single_copy_end@@GOMP_1.0+0x238>
   17ef0:	str	x20, [x0]
   17ef4:	b	17ec8 <GOMP_task_reduction_remap@@GOMP_5.0+0x410>
   17ef8:	ldr	x0, [x26, #40]
   17efc:	ldr	x1, [sp, #104]
   17f00:	ldp	x19, x20, [sp, #16]
   17f04:	ldp	x23, x24, [sp, #48]
   17f08:	ldr	x27, [sp, #80]
   17f0c:	str	x1, [x22, #40]
   17f10:	ldp	x21, x22, [sp, #32]
   17f14:	str	x25, [x0, #40]
   17f18:	ldp	x25, x26, [sp, #64]
   17f1c:	ldp	x29, x30, [sp], #112
   17f20:	ret
   17f24:	nop
   17f28:	stp	x29, x30, [sp, #-32]!
   17f2c:	mov	x29, sp
   17f30:	stp	x19, x20, [sp, #16]
   17f34:	mrs	x19, tpidr_el0
   17f38:	adrp	x20, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   17f3c:	ldr	x20, [x20, #4016]
   17f40:	add	x0, x19, x20
   17f44:	ldr	x0, [x0, #16]
   17f48:	cbz	x0, 17fa0 <GOMP_task_reduction_remap@@GOMP_5.0+0x4e8>
   17f4c:	add	x19, x19, x20
   17f50:	mov	x0, #0x40                  	// #64
   17f54:	ldr	x20, [x19, #80]
   17f58:	ldr	x19, [x20, #40]
   17f5c:	bl	b220 <fprintf@plt+0x2710>
   17f60:	mov	x1, x0
   17f64:	str	x19, [x1], #8
   17f68:	str	xzr, [x0, #8]
   17f6c:	stp	xzr, xzr, [x1, #16]
   17f70:	cbz	x19, 17f78 <GOMP_task_reduction_remap@@GOMP_5.0+0x4c0>
   17f74:	ldr	x19, [x19, #40]
   17f78:	str	x19, [x0, #40]
   17f7c:	strh	wzr, [x0, #48]
   17f80:	mov	w1, #0x1                   	// #1
   17f84:	str	wzr, [x0, #52]
   17f88:	str	xzr, [x0, #56]
   17f8c:	str	x0, [x20, #40]
   17f90:	strb	w1, [x0, #50]
   17f94:	ldp	x19, x20, [sp, #16]
   17f98:	ldp	x29, x30, [sp], #32
   17f9c:	ret
   17fa0:	bl	121c0 <GOMP_single_copy_end@@GOMP_1.0+0xa38>
   17fa4:	b	17f4c <GOMP_task_reduction_remap@@GOMP_5.0+0x494>

0000000000017fa8 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0>:
   17fa8:	stp	x29, x30, [sp, #-48]!
   17fac:	mrs	x1, tpidr_el0
   17fb0:	mov	x29, sp
   17fb4:	stp	x19, x20, [sp, #16]
   17fb8:	and	w20, w0, #0xff
   17fbc:	adrp	x19, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   17fc0:	ldr	x19, [x19, #4016]
   17fc4:	stp	x21, x22, [sp, #32]
   17fc8:	add	x19, x1, x19
   17fcc:	ldr	x0, [x19, #80]
   17fd0:	ldr	x22, [x19, #16]
   17fd4:	ldr	x0, [x0, #40]
   17fd8:	ldr	x21, [x0, #40]
   17fdc:	bl	15718 <GOMP_taskgroup_end@@GOMP_4.0>
   17fe0:	ldr	w0, [x19, #40]
   17fe4:	cbnz	w0, 18004 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x5c>
   17fe8:	mov	x0, x21
   17fec:	bl	17a78 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0>
   17ff0:	cbz	w20, 18010 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x68>
   17ff4:	ldp	x19, x20, [sp, #16]
   17ff8:	ldp	x21, x22, [sp, #32]
   17ffc:	ldp	x29, x30, [sp], #48
   18000:	ret
   18004:	ldr	x0, [x21, #40]
   18008:	bl	8900 <free@plt>
   1800c:	cbnz	w20, 17ff4 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x4c>
   18010:	add	x0, x22, #0x80
   18014:	ldp	x19, x20, [sp, #16]
   18018:	ldp	x21, x22, [sp, #32]
   1801c:	ldp	x29, x30, [sp], #48
   18020:	b	1ae58 <omp_get_num_procs@@OMP_1.0+0x7b0>
   18024:	nop

0000000000018028 <omp_in_final@@OMP_3.1>:
   18028:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1802c:	ldr	x2, [x2, #4016]
   18030:	mrs	x1, tpidr_el0
   18034:	mov	w0, #0x0                   	// #0
   18038:	add	x1, x1, x2
   1803c:	ldr	x1, [x1, #80]
   18040:	cbz	x1, 18048 <omp_in_final@@OMP_3.1+0x20>
   18044:	ldrb	w0, [x1, #205]
   18048:	ret
   1804c:	nop
   18050:	stp	x29, x30, [sp, #-16]!
   18054:	add	x0, x0, #0x40
   18058:	mov	x29, sp
   1805c:	bl	1aba8 <omp_get_num_procs@@OMP_1.0+0x500>
   18060:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   18064:	ldr	x0, [x0, #3992]
   18068:	mrs	x1, tpidr_el0
   1806c:	add	x0, x1, x0
   18070:	str	xzr, [x0, #80]
   18074:	str	xzr, [x0, #96]
   18078:	bl	8a90 <pthread_self@plt>
   1807c:	bl	87b0 <pthread_detach@plt>
   18080:	mov	x0, #0x0                   	// #0
   18084:	bl	8880 <pthread_exit@plt>
   18088:	stp	x29, x30, [sp, #-16]!
   1808c:	add	x0, x0, #0x40
   18090:	mov	x29, sp
   18094:	bl	1aba8 <omp_get_num_procs@@OMP_1.0+0x500>
   18098:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1809c:	ldr	x2, [x2, #3992]
   180a0:	mrs	x1, tpidr_el0
   180a4:	mov	x0, #0x0                   	// #0
   180a8:	add	x1, x1, x2
   180ac:	str	xzr, [x1, #80]
   180b0:	str	xzr, [x1, #96]
   180b4:	bl	8880 <pthread_exit@plt>
   180b8:	stp	x29, x30, [sp, #-80]!
   180bc:	mov	x29, sp
   180c0:	stp	x23, x24, [sp, #48]
   180c4:	mrs	x24, tpidr_el0
   180c8:	adrp	x23, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   180cc:	ldr	x23, [x23, #3992]
   180d0:	ldp	x2, x3, [x0, #16]
   180d4:	add	x1, x24, x23
   180d8:	ldr	w11, [x0, #96]
   180dc:	add	x10, x1, #0x58
   180e0:	stp	x19, x20, [sp, #16]
   180e4:	stp	x21, x22, [sp, #32]
   180e8:	mov	x4, x2
   180ec:	ldp	x20, x21, [x0]
   180f0:	ldp	x8, x9, [x0, #32]
   180f4:	ldr	x22, [x0, #80]
   180f8:	str	x25, [sp, #64]
   180fc:	ldr	x25, [x0, #88]
   18100:	stp	x8, x9, [x1, #32]
   18104:	ldrb	w8, [x0, #100]
   18108:	ldr	w7, [x1, #40]
   1810c:	ldr	x9, [x2, #80]
   18110:	stp	x2, x3, [x1, #16]
   18114:	ldp	x2, x3, [x0, #48]
   18118:	stp	x2, x3, [x1, #48]
   1811c:	ldp	x2, x3, [x0, #64]
   18120:	stp	x2, x3, [x1, #64]
   18124:	str	x22, [x1, #80]
   18128:	str	wzr, [x1, #88]
   1812c:	str	w11, [x1, #92]
   18130:	str	x25, [x1, #96]
   18134:	str	x10, [x9, x7, lsl #3]
   18138:	cbz	w8, 18198 <omp_in_final@@OMP_3.1+0x170>
   1813c:	add	x19, x4, #0x80
   18140:	mov	x0, x19
   18144:	bl	1ab78 <omp_get_num_procs@@OMP_1.0+0x4d0>
   18148:	mov	x0, x21
   1814c:	blr	x20
   18150:	mov	x0, x19
   18154:	bl	1ae88 <omp_get_num_procs@@OMP_1.0+0x7e0>
   18158:	ldr	x0, [x22, #56]
   1815c:	cbnz	x0, 181ec <omp_in_final@@OMP_3.1+0x1c4>
   18160:	mov	x0, x19
   18164:	bl	1aba8 <omp_get_num_procs@@OMP_1.0+0x500>
   18168:	add	x23, x24, x23
   1816c:	bl	8a90 <pthread_self@plt>
   18170:	bl	87b0 <pthread_detach@plt>
   18174:	ldp	x19, x20, [sp, #16]
   18178:	mov	x0, #0x0                   	// #0
   1817c:	ldp	x21, x22, [sp, #32]
   18180:	ldr	x25, [sp, #64]
   18184:	str	xzr, [x23, #80]
   18188:	str	xzr, [x23, #96]
   1818c:	ldp	x23, x24, [sp, #48]
   18190:	ldp	x29, x30, [sp], #80
   18194:	ret
   18198:	ldr	x2, [x25], #64
   1819c:	mov	x19, x1
   181a0:	mov	x0, x25
   181a4:	str	x1, [x2, x7, lsl #3]
   181a8:	bl	1ab78 <omp_get_num_procs@@OMP_1.0+0x4d0>
   181ac:	b	181c4 <omp_in_final@@OMP_3.1+0x19c>
   181b0:	mov	x0, x25
   181b4:	bl	1ab78 <omp_get_num_procs@@OMP_1.0+0x4d0>
   181b8:	ldp	x20, x21, [x19]
   181bc:	str	xzr, [x19]
   181c0:	cbz	x20, 18168 <omp_in_final@@OMP_3.1+0x140>
   181c4:	mov	x0, x21
   181c8:	ldr	x21, [x19, #16]
   181cc:	ldr	x22, [x19, #80]
   181d0:	blr	x20
   181d4:	add	x0, x21, #0x80
   181d8:	bl	1ae88 <omp_get_num_procs@@OMP_1.0+0x7e0>
   181dc:	ldr	x0, [x22, #56]
   181e0:	cbz	x0, 181b0 <omp_in_final@@OMP_3.1+0x188>
   181e4:	bl	8900 <free@plt>
   181e8:	b	181b0 <omp_in_final@@OMP_3.1+0x188>
   181ec:	bl	8900 <free@plt>
   181f0:	b	18160 <omp_in_final@@OMP_3.1+0x138>
   181f4:	nop
   181f8:	stp	x29, x30, [sp, #-48]!
   181fc:	mrs	x1, tpidr_el0
   18200:	mov	x29, sp
   18204:	stp	x19, x20, [sp, #16]
   18208:	adrp	x19, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1820c:	ldr	x19, [x19, #3992]
   18210:	stp	x21, x22, [sp, #32]
   18214:	mov	w22, w0
   18218:	add	x19, x1, x19
   1821c:	mov	x20, x22
   18220:	ldr	x0, [x19, #16]
   18224:	cbz	x0, 182f4 <omp_in_final@@OMP_3.1+0x2cc>
   18228:	mov	w1, #0xd8                  	// #216
   1822c:	mov	x0, #0x540                 	// #1344
   18230:	umaddl	x0, w20, w1, x0
   18234:	bl	b220 <fprintf@plt+0x2710>
   18238:	mov	x19, x0
   1823c:	str	w20, [x0]
   18240:	stp	w20, wzr, [x0, #128]
   18244:	stp	w20, w20, [x0, #192]
   18248:	str	wzr, [x0, #1280]
   1824c:	add	x0, x19, #0x100
   18250:	mov	w1, #0x8                   	// #8
   18254:	str	w1, [x19, #4]
   18258:	mov	w2, w20
   1825c:	str	x0, [x19, #88]
   18260:	mov	x1, #0x0                   	// #0
   18264:	str	xzr, [x19, #112]
   18268:	bl	197b0 <omp_in_final@@OMP_3.1+0x1788>
   1826c:	str	wzr, [x19, #72]
   18270:	mov	w1, #0xd0                  	// #208
   18274:	mov	x2, #0x540                 	// #1344
   18278:	add	x0, x19, #0x180
   1827c:	add	x8, x19, #0x200
   18280:	umaddl	x20, w20, w1, x2
   18284:	add	x7, x19, #0x280
   18288:	add	x1, x19, #0x518
   1828c:	add	x6, x19, #0x300
   18290:	add	x5, x19, #0x380
   18294:	add	x4, x19, #0x400
   18298:	add	x2, x19, x20
   1829c:	add	x3, x19, #0x480
   182a0:	str	x2, [x19, #80]
   182a4:	add	x2, x19, #0x48
   182a8:	stp	x0, xzr, [x19, #96]
   182ac:	mov	x0, x19
   182b0:	str	xzr, [x19, #312]
   182b4:	str	x8, [x19, #464]
   182b8:	str	x7, [x19, #592]
   182bc:	str	x6, [x19, #720]
   182c0:	str	x5, [x19, #848]
   182c4:	str	x4, [x19, #976]
   182c8:	str	x3, [x19, #1104]
   182cc:	str	xzr, [x19, #1232]
   182d0:	str	x2, [x19, x20]
   182d4:	str	xzr, [x19, #1288]
   182d8:	stp	xzr, xzr, [x1]
   182dc:	stp	xzr, xzr, [x1, #16]
   182e0:	str	wzr, [x19, #1336]
   182e4:	ldp	x19, x20, [sp, #16]
   182e8:	ldp	x21, x22, [sp, #32]
   182ec:	ldp	x29, x30, [sp], #48
   182f0:	ret
   182f4:	ldr	x21, [x19, #96]
   182f8:	cbz	x21, 18318 <omp_in_final@@OMP_3.1+0x2f0>
   182fc:	ldr	x19, [x21, #16]
   18300:	cbz	x19, 18228 <omp_in_final@@OMP_3.1+0x200>
   18304:	ldr	w0, [x19]
   18308:	cmp	w20, w0
   1830c:	b.ne	18228 <omp_in_final@@OMP_3.1+0x200>  // b.any
   18310:	str	xzr, [x21, #16]
   18314:	b	1824c <omp_in_final@@OMP_3.1+0x224>
   18318:	mov	x0, #0xc0                  	// #192
   1831c:	bl	b220 <fprintf@plt+0x2710>
   18320:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   18324:	mov	x21, x0
   18328:	mov	x1, x19
   1832c:	str	x21, [x19, #96]
   18330:	ldr	w0, [x2, #1696]
   18334:	stp	xzr, xzr, [x21]
   18338:	stp	xzr, x22, [x21, #16]
   1833c:	bl	89b0 <pthread_setspecific@plt>
   18340:	b	182fc <omp_in_final@@OMP_3.1+0x2d4>
   18344:	nop
   18348:	stp	x29, x30, [sp, #-336]!
   1834c:	mrs	x7, tpidr_el0
   18350:	adrp	x6, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   18354:	ldr	x6, [x6, #3992]
   18358:	mov	x29, sp
   1835c:	stp	x23, x24, [sp, #48]
   18360:	add	x24, x7, x6
   18364:	stp	x19, x20, [sp, #16]
   18368:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1836c:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   18370:	stp	x21, x22, [sp, #32]
   18374:	add	x19, x19, #0x2b8
   18378:	stp	x25, x26, [sp, #64]
   1837c:	mov	x26, x4
   18380:	stp	x27, x28, [sp, #80]
   18384:	stp	x6, x7, [x29, #168]
   18388:	ldr	w6, [x24, #44]
   1838c:	ldr	x7, [x20, #1568]
   18390:	cmp	w6, #0x0
   18394:	ldr	x22, [x24, #80]
   18398:	cset	w8, ne  // ne = any
   1839c:	str	w6, [x29, #136]
   183a0:	str	w8, [x29, #196]
   183a4:	add	x9, x22, #0x90
   183a8:	stp	x1, x0, [x29, #208]
   183ac:	cmp	x22, #0x0
   183b0:	csel	x19, x19, x9, eq  // eq = none
   183b4:	str	x5, [x29, #232]
   183b8:	mov	w5, w6
   183bc:	str	w2, [x29, #252]
   183c0:	ldr	x21, [x24, #96]
   183c4:	cbnz	x7, 18d24 <omp_in_final@@OMP_3.1+0xcfc>
   183c8:	ldp	x1, x0, [x29, #168]
   183cc:	add	w5, w5, #0x1
   183d0:	add	x2, x0, x1
   183d4:	ldr	w0, [x29, #252]
   183d8:	cmp	w0, #0x1
   183dc:	ldp	x0, x1, [x2, #16]
   183e0:	stp	x0, x1, [x26, #8]
   183e4:	ldp	x0, x1, [x2, #32]
   183e8:	stp	x0, x1, [x26, #24]
   183ec:	ldp	x0, x1, [x2, #48]
   183f0:	stp	x0, x1, [x26, #40]
   183f4:	ldp	x0, x1, [x2, #64]
   183f8:	str	x26, [x2, #16]
   183fc:	stp	wzr, w5, [x2, #40]
   18400:	stp	x0, x1, [x26, #56]
   18404:	b.ls	18414 <omp_in_final@@OMP_3.1+0x3ec>  // b.plast
   18408:	ldr	w0, [x2, #48]
   1840c:	add	w0, w0, #0x1
   18410:	str	w0, [x2, #48]
   18414:	ldp	x1, x0, [x29, #168]
   18418:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1841c:	add	x4, x26, #0x100
   18420:	str	x4, [x29, #224]
   18424:	ldr	x2, [x2, #1504]
   18428:	add	x1, x0, x1
   1842c:	add	x0, x26, #0x540
   18430:	stp	x4, xzr, [x1, #24]
   18434:	stp	xzr, xzr, [x1, #64]
   18438:	str	x0, [x1, #80]
   1843c:	ldr	x1, [x19]
   18440:	str	x1, [x29, #240]
   18444:	cbnz	x2, 18d58 <omp_in_final@@OMP_3.1+0xd30>
   18448:	ldrb	w1, [x19, #26]
   1844c:	str	w1, [x29, #192]
   18450:	cbz	w1, 18464 <omp_in_final@@OMP_3.1+0x43c>
   18454:	tst	x3, #0x7
   18458:	and	w3, w3, #0x7
   1845c:	csel	w1, w3, w1, ne  // ne = any
   18460:	str	w1, [x29, #192]
   18464:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   18468:	ldr	w2, [x29, #192]
   1846c:	str	w2, [x29, #248]
   18470:	ldr	x1, [x1, #1544]
   18474:	cbnz	x1, 18d78 <omp_in_final@@OMP_3.1+0xd50>
   18478:	mov	x2, x19
   1847c:	mov	x1, x22
   18480:	bl	12fb8 <GOMP_single_copy_end@@GOMP_1.0+0x1830>
   18484:	ldp	x1, x0, [x29, #168]
   18488:	ldr	x2, [x29, #232]
   1848c:	add	x1, x0, x1
   18490:	ldr	w0, [x29, #252]
   18494:	cmp	w0, #0x1
   18498:	ldr	x0, [x1, #80]
   1849c:	str	x2, [x0, #40]
   184a0:	ldr	x0, [x29, #240]
   184a4:	str	x0, [x26, #1488]
   184a8:	ldrb	w0, [x29, #248]
   184ac:	strb	w0, [x26, #1514]
   184b0:	b.eq	18700 <omp_in_final@@OMP_3.1+0x6d8>  // b.none
   184b4:	ldr	x0, [x20, #1568]
   184b8:	cbnz	x0, 18d9c <omp_in_final@@OMP_3.1+0xd74>
   184bc:	str	wzr, [x29, #124]
   184c0:	str	wzr, [x29, #140]
   184c4:	stp	wzr, wzr, [x29, #160]
   184c8:	str	wzr, [x29, #192]
   184cc:	ldr	w1, [x29, #136]
   184d0:	cbz	w1, 18720 <omp_in_final@@OMP_3.1+0x6f8>
   184d4:	ldr	w1, [x29, #252]
   184d8:	cbnz	w1, 19038 <omp_in_final@@OMP_3.1+0x1010>
   184dc:	mov	w25, #0x1                   	// #1
   184e0:	str	wzr, [x29, #112]
   184e4:	stp	wzr, wzr, [x29, #144]
   184e8:	str	xzr, [x29, #152]
   184ec:	cbnz	x0, 18ec0 <omp_in_final@@OMP_3.1+0xe98>
   184f0:	ldr	w2, [x29, #252]
   184f4:	adrp	x27, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   184f8:	mov	w1, #0x70                  	// #112
   184fc:	sub	w0, w2, w25
   18500:	cmp	w25, w2
   18504:	add	x2, x27, #0x660
   18508:	str	x2, [x29, #128]
   1850c:	mov	x2, sp
   18510:	umsubl	x0, w0, w1, x2
   18514:	mov	sp, x0
   18518:	mov	x23, sp
   1851c:	b.cs	186b0 <omp_in_final@@OMP_3.1+0x688>  // b.hs, b.nlast
   18520:	adrp	x28, 18000 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x58>
   18524:	add	x0, x28, #0xb8
   18528:	str	x0, [x29, #184]
   1852c:	mov	w7, #0xd0                  	// #208
   18530:	ldr	x1, [x29, #168]
   18534:	umaddl	x7, w25, w7, x26
   18538:	ldr	x0, [x29, #176]
   1853c:	ubfiz	x27, x25, #3, #32
   18540:	add	x24, x7, #0x540
   18544:	str	x21, [x29, #200]
   18548:	add	x28, x0, x1
   1854c:	ldr	w1, [x29, #124]
   18550:	ldr	w0, [x29, #252]
   18554:	mov	x21, x26
   18558:	mov	x26, x28
   1855c:	mov	x28, x27
   18560:	sub	w0, w0, w1
   18564:	str	w0, [x29, #104]
   18568:	mov	w0, w25
   1856c:	mov	x27, x24
   18570:	mov	x25, x22
   18574:	mov	x24, x19
   18578:	mov	x22, x23
   1857c:	mov	w23, w0
   18580:	ldr	x19, [x29, #128]
   18584:	b	18628 <omp_in_final@@OMP_3.1+0x600>
   18588:	ldp	x0, x3, [x29, #216]
   1858c:	str	x0, [x22]
   18590:	ldr	w6, [x21, #36]
   18594:	mov	x2, x24
   18598:	ldr	w10, [x26, #48]
   1859c:	mov	x1, x25
   185a0:	add	w6, w6, #0x1
   185a4:	stp	x21, x3, [x22, #16]
   185a8:	ldr	x0, [x29, #208]
   185ac:	str	x0, [x22, #8]
   185b0:	str	xzr, [x22, #32]
   185b4:	mov	x0, x27
   185b8:	stp	w23, w6, [x22, #40]
   185bc:	str	w10, [x22, #48]
   185c0:	stp	xzr, xzr, [x22, #64]
   185c4:	str	x27, [x22, #80]
   185c8:	bl	12fb8 <GOMP_single_copy_end@@GOMP_1.0+0x1830>
   185cc:	ldr	x0, [x22, #80]
   185d0:	mov	x3, x22
   185d4:	ldp	x4, x1, [x29, #232]
   185d8:	str	x1, [x27, #144]
   185dc:	ldrb	w1, [x29, #248]
   185e0:	strb	w1, [x27, #170]
   185e4:	mov	x1, x19
   185e8:	str	x4, [x0, #40]
   185ec:	add	x0, x22, #0x68
   185f0:	ldr	x4, [x29, #200]
   185f4:	str	x4, [x22, #88]
   185f8:	ldrb	w4, [x29, #196]
   185fc:	add	x22, x22, #0x70
   18600:	ldr	x2, [x29, #184]
   18604:	sturb	w4, [x22, #-12]
   18608:	bl	8840 <pthread_create@plt>
   1860c:	cbnz	w0, 19270 <omp_in_final@@OMP_3.1+0x1248>
   18610:	ldr	w0, [x29, #252]
   18614:	add	w23, w23, #0x1
   18618:	add	x28, x28, #0x8
   1861c:	add	x27, x27, #0xd0
   18620:	cmp	w0, w23
   18624:	b.eq	1868c <omp_in_final@@OMP_3.1+0x664>  // b.none
   18628:	ldr	x0, [x20, #1568]
   1862c:	str	wzr, [x22, #96]
   18630:	ldur	x1, [x26, #52]
   18634:	stur	x1, [x22, #52]
   18638:	cbz	x0, 18588 <omp_in_final@@OMP_3.1+0x560>
   1863c:	ldr	w0, [x29, #192]
   18640:	cmp	w0, #0x3
   18644:	b.eq	188e4 <omp_in_final@@OMP_3.1+0x8bc>  // b.none
   18648:	cmp	w0, #0x4
   1864c:	b.eq	1890c <omp_in_final@@OMP_3.1+0x8e4>  // b.none
   18650:	cmp	w0, #0x1
   18654:	b.eq	188e4 <omp_in_final@@OMP_3.1+0x8bc>  // b.none
   18658:	ldr	w0, [x29, #164]
   1865c:	add	w0, w0, #0x1
   18660:	str	w0, [x22, #96]
   18664:	ldr	x0, [x29, #152]
   18668:	cbz	x0, 1867c <omp_in_final@@OMP_3.1+0x654>
   1866c:	ldr	x0, [x29, #200]
   18670:	ldr	x0, [x0]
   18674:	ldr	x0, [x0, x28]
   18678:	cbnz	x0, 18610 <omp_in_final@@OMP_3.1+0x5e8>
   1867c:	ldr	w1, [x29, #164]
   18680:	mov	x0, x19
   18684:	bl	1bcb0 <omp_pause_resource_all_@@OMP_5.0+0x8>
   18688:	b	18588 <omp_in_final@@OMP_3.1+0x560>
   1868c:	ldr	x0, [x29, #128]
   18690:	add	x28, x29, #0x110
   18694:	mov	x26, x21
   18698:	mov	x23, x22
   1869c:	cmp	x0, x28
   186a0:	ldr	x21, [x29, #200]
   186a4:	b.ne	186b0 <omp_in_final@@OMP_3.1+0x688>  // b.any
   186a8:	mov	x0, x28
   186ac:	bl	8780 <pthread_attr_destroy@plt>
   186b0:	ldr	w0, [x29, #136]
   186b4:	cbz	w0, 18960 <omp_in_final@@OMP_3.1+0x938>
   186b8:	add	x0, x26, #0x80
   186bc:	bl	1ab78 <omp_get_num_procs@@OMP_1.0+0x4d0>
   186c0:	ldr	w1, [x29, #144]
   186c4:	ldr	w0, [x29, #252]
   186c8:	cmp	w0, w1
   186cc:	b.cc	18dd4 <omp_in_final@@OMP_3.1+0xdac>  // b.lo, b.ul, b.last
   186d0:	ldr	w0, [x29, #148]
   186d4:	cbnz	w0, 18eb4 <omp_in_final@@OMP_3.1+0xe8c>
   186d8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   186dc:	ldrb	w0, [x0, #1520]
   186e0:	cbnz	w0, 18e2c <omp_in_final@@OMP_3.1+0xe04>
   186e4:	ldr	x0, [x29, #152]
   186e8:	cbz	x0, 18700 <omp_in_final@@OMP_3.1+0x6d8>
   186ec:	ldr	w0, [x26, #48]
   186f0:	cmp	w0, #0x40
   186f4:	b.ls	18700 <omp_in_final@@OMP_3.1+0x6d8>  // b.plast
   186f8:	ldr	x0, [x29, #152]
   186fc:	bl	8900 <free@plt>
   18700:	mov	sp, x29
   18704:	ldp	x19, x20, [sp, #16]
   18708:	ldp	x21, x22, [sp, #32]
   1870c:	ldp	x23, x24, [sp, #48]
   18710:	ldp	x25, x26, [sp, #64]
   18714:	ldp	x27, x28, [sp, #80]
   18718:	ldp	x29, x30, [sp], #336
   1871c:	ret
   18720:	ldr	w0, [x21, #12]
   18724:	ldr	w1, [x29, #252]
   18728:	str	w0, [x29, #144]
   1872c:	str	w1, [x29, #200]
   18730:	cmp	w1, w0
   18734:	b.hi	18b80 <omp_in_final@@OMP_3.1+0xb58>  // b.pmore
   18738:	ldr	w1, [x29, #252]
   1873c:	ldr	w0, [x21, #8]
   18740:	str	w1, [x21, #12]
   18744:	cmp	w0, w1
   18748:	b.ls	18ba4 <omp_in_final@@OMP_3.1+0xb7c>  // b.plast
   1874c:	ldr	w0, [x29, #200]
   18750:	cmp	w0, #0x1
   18754:	b.ls	19128 <omp_in_final@@OMP_3.1+0x1100>  // b.plast
   18758:	ldr	w1, [x29, #144]
   1875c:	mov	w25, #0x1                   	// #1
   18760:	ldr	w0, [x29, #252]
   18764:	ldr	x3, [x29, #168]
   18768:	sub	w0, w0, w1
   1876c:	ubfiz	x2, x1, #3, #32
   18770:	sub	w1, w1, #0x1
   18774:	lsl	x0, x0, #3
   18778:	stp	x0, x2, [x29, #96]
   1877c:	ldr	x2, [x29, #176]
   18780:	str	wzr, [x29, #112]
   18784:	str	w1, [x29, #128]
   18788:	add	x24, x2, x3
   1878c:	str	wzr, [x29, #148]
   18790:	mov	x0, x24
   18794:	mov	w24, w25
   18798:	mov	x25, x26
   1879c:	mov	x26, x0
   187a0:	str	xzr, [x29, #152]
   187a4:	str	x23, [x29, #184]
   187a8:	b	18858 <omp_in_final@@OMP_3.1+0x830>
   187ac:	ldr	x0, [x21]
   187b0:	mov	w7, w24
   187b4:	ubfiz	x28, x24, #3, #32
   187b8:	mov	w13, #0x0                   	// #0
   187bc:	ldr	x27, [x0, x7, lsl #3]
   187c0:	add	x4, x7, x7, lsl #1
   187c4:	ldr	w1, [x25, #36]
   187c8:	mov	x2, x19
   187cc:	add	x4, x7, x4, lsl #2
   187d0:	str	xzr, [x27, #32]
   187d4:	add	w1, w1, #0x1
   187d8:	stp	w24, w1, [x27, #40]
   187dc:	lsl	x23, x4, #4
   187e0:	ldr	w1, [x26, #48]
   187e4:	ldr	x0, [x29, #224]
   187e8:	stp	x25, x0, [x27, #16]
   187ec:	add	x0, x23, #0x540
   187f0:	add	x0, x25, x0
   187f4:	str	w1, [x27, #48]
   187f8:	stp	w9, w12, [x27, #52]
   187fc:	mov	x1, x22
   18800:	stp	xzr, xzr, [x27, #64]
   18804:	str	x0, [x27, #80]
   18808:	str	w13, [x27, #92]
   1880c:	bl	12fb8 <GOMP_single_copy_end@@GOMP_1.0+0x1830>
   18810:	add	x4, x25, x23
   18814:	ldrb	w0, [x29, #248]
   18818:	add	x1, x27, #0x58
   1881c:	strb	w0, [x4, #1514]
   18820:	ldp	x3, x0, [x29, #232]
   18824:	ldr	x2, [x27, #80]
   18828:	str	x0, [x4, #1488]
   1882c:	ldr	x0, [x25, #80]
   18830:	str	x3, [x2, #40]
   18834:	ldr	x2, [x29, #216]
   18838:	str	x2, [x27]
   1883c:	ldr	x2, [x29, #208]
   18840:	str	x2, [x27, #8]
   18844:	str	x1, [x0, x28]
   18848:	ldr	w0, [x29, #200]
   1884c:	add	w24, w24, #0x1
   18850:	cmp	w0, w24
   18854:	b.ls	1896c <omp_in_final@@OMP_3.1+0x944>  // b.plast
   18858:	ldr	x0, [x20, #1568]
   1885c:	ldp	w9, w12, [x26, #52]
   18860:	cbz	x0, 187ac <omp_in_final@@OMP_3.1+0x784>
   18864:	ldr	w0, [x29, #192]
   18868:	cmp	w0, #0x3
   1886c:	b.eq	18ae8 <omp_in_final@@OMP_3.1+0xac0>  // b.none
   18870:	cmp	w0, #0x4
   18874:	b.eq	189b0 <omp_in_final@@OMP_3.1+0x988>  // b.none
   18878:	cmp	w0, #0x1
   1887c:	b.eq	18ae8 <omp_in_final@@OMP_3.1+0xac0>  // b.none
   18880:	ldr	x0, [x29, #152]
   18884:	cbz	x0, 18b0c <omp_in_final@@OMP_3.1+0xae4>
   18888:	ldr	w0, [x29, #148]
   1888c:	cbz	w0, 18fe4 <omp_in_final@@OMP_3.1+0xfbc>
   18890:	ldr	w2, [x25, #44]
   18894:	ldr	w0, [x29, #164]
   18898:	ldr	x3, [x29, #152]
   1889c:	sub	w0, w0, w2
   188a0:	ldr	x27, [x3, x0, lsl #3]
   188a4:	add	x1, x3, x0, lsl #3
   188a8:	cbz	x27, 18c84 <omp_in_final@@OMP_3.1+0xc5c>
   188ac:	ldr	w2, [x29, #148]
   188b0:	mov	w7, w24
   188b4:	ldr	x0, [x21]
   188b8:	sub	w2, w2, #0x1
   188bc:	ubfiz	x28, x24, #3, #32
   188c0:	str	w2, [x29, #148]
   188c4:	ldr	x2, [x27, #8]
   188c8:	str	x2, [x1]
   188cc:	mov	w1, #0x1                   	// #1
   188d0:	str	x27, [x0, x7, lsl #3]
   188d4:	str	w1, [x29, #112]
   188d8:	ldr	w0, [x29, #164]
   188dc:	add	w13, w0, #0x1
   188e0:	b	187c0 <omp_in_final@@OMP_3.1+0x798>
   188e4:	ldr	w0, [x29, #140]
   188e8:	ldr	w1, [x29, #160]
   188ec:	cmp	w0, w1
   188f0:	ldr	w0, [x29, #164]
   188f4:	add	w0, w0, #0x1
   188f8:	b.eq	18cf0 <omp_in_final@@OMP_3.1+0xcc8>  // b.none
   188fc:	ldr	w1, [x29, #160]
   18900:	add	w1, w1, #0x1
   18904:	str	w1, [x29, #160]
   18908:	b	18660 <omp_in_final@@OMP_3.1+0x638>
   1890c:	ldr	w0, [x29, #160]
   18910:	cbnz	w0, 18b48 <omp_in_final@@OMP_3.1+0xb20>
   18914:	ldr	w1, [x29, #164]
   18918:	ldp	w2, w0, [x21, #44]
   1891c:	ldr	w3, [x29, #124]
   18920:	ldr	w4, [x29, #140]
   18924:	add	w0, w2, w0
   18928:	cmp	w3, w1
   1892c:	add	w1, w4, w1
   18930:	cinc	w1, w1, hi  // hi = pmore
   18934:	cmp	w0, w1
   18938:	csel	w1, w1, w2, ne  // ne = any
   1893c:	str	w1, [x22, #52]
   18940:	str	w1, [x29, #164]
   18944:	cmp	w3, w1
   18948:	add	w0, w1, #0x1
   1894c:	b.ls	18c04 <omp_in_final@@OMP_3.1+0xbdc>  // b.plast
   18950:	add	w1, w4, #0x1
   18954:	str	w1, [x22, #56]
   18958:	b	18660 <omp_in_final@@OMP_3.1+0x638>
   1895c:	str	xzr, [x29, #152]
   18960:	add	x0, x21, #0x40
   18964:	bl	1ab78 <omp_get_num_procs@@OMP_1.0+0x4d0>
   18968:	b	186c0 <omp_in_final@@OMP_3.1+0x698>
   1896c:	ldr	x0, [x29, #152]
   18970:	mov	x26, x25
   18974:	mov	w25, w24
   18978:	ldr	x23, [x29, #184]
   1897c:	cbnz	x0, 18ff8 <omp_in_final@@OMP_3.1+0xfd0>
   18980:	ldr	w0, [x29, #252]
   18984:	cmp	w0, w25
   18988:	b.eq	1895c <omp_in_final@@OMP_3.1+0x934>  // b.none
   1898c:	ldr	w0, [x29, #148]
   18990:	ldr	w1, [x29, #252]
   18994:	str	xzr, [x29, #152]
   18998:	add	w0, w0, w1
   1899c:	ldr	w1, [x29, #144]
   189a0:	cmp	w1, w0
   189a4:	b.cc	18f3c <omp_in_final@@OMP_3.1+0xf14>  // b.lo, b.ul, b.last
   189a8:	ldr	x0, [x20, #1568]
   189ac:	b	184ec <omp_in_final@@OMP_3.1+0x4c4>
   189b0:	ldr	w0, [x29, #160]
   189b4:	cbz	w0, 18bcc <omp_in_final@@OMP_3.1+0xba4>
   189b8:	ldr	w1, [x29, #140]
   189bc:	ldr	w0, [x29, #160]
   189c0:	cmp	w0, w1
   189c4:	b.eq	19058 <omp_in_final@@OMP_3.1+0x1030>  // b.none
   189c8:	ldr	w0, [x29, #160]
   189cc:	mov	w12, #0x1                   	// #1
   189d0:	add	w0, w0, #0x1
   189d4:	str	w0, [x29, #160]
   189d8:	ldr	x0, [x29, #152]
   189dc:	ldr	w9, [x29, #164]
   189e0:	cbnz	x0, 18888 <omp_in_final@@OMP_3.1+0x860>
   189e4:	ldr	x0, [x21]
   189e8:	mov	w7, w24
   189ec:	ubfiz	x28, x24, #3, #32
   189f0:	ldr	x27, [x0, x7, lsl #3]
   189f4:	ldr	w0, [x27, #92]
   189f8:	ldr	w1, [x29, #164]
   189fc:	add	w1, w1, #0x1
   18a00:	cmp	w1, w0
   18a04:	b.eq	18b2c <omp_in_final@@OMP_3.1+0xb04>  // b.none
   18a08:	ldr	w23, [x25, #48]
   18a0c:	cmp	w23, #0x40
   18a10:	ubfiz	x2, x23, #3, #32
   18a14:	b.hi	1909c <omp_in_final@@OMP_3.1+0x1074>  // b.pmore
   18a18:	add	x0, x2, #0xf
   18a1c:	and	x0, x0, #0xfffffffffffffff0
   18a20:	sub	sp, sp, x0
   18a24:	mov	x0, sp
   18a28:	str	x0, [x29, #152]
   18a2c:	ldr	x0, [x29, #152]
   18a30:	mov	w1, #0x0                   	// #0
   18a34:	str	x7, [x29, #112]
   18a38:	str	w12, [x29, #148]
   18a3c:	str	w9, [x29, #200]
   18a40:	bl	87c0 <memset@plt>
   18a44:	ldp	w0, w12, [x29, #144]
   18a48:	ldr	w9, [x29, #200]
   18a4c:	cmp	w0, w24
   18a50:	ldr	x7, [x29, #112]
   18a54:	b.ls	18ac0 <omp_in_final@@OMP_3.1+0xa98>  // b.plast
   18a58:	ldr	w0, [x29, #128]
   18a5c:	ldr	x4, [x21]
   18a60:	sub	w2, w0, w24
   18a64:	ldr	w3, [x25, #44]
   18a68:	add	x2, x2, x7
   18a6c:	add	x0, x4, #0x8
   18a70:	ldr	x5, [x29, #152]
   18a74:	add	x4, x4, x7, lsl #3
   18a78:	mvn	w13, w3
   18a7c:	add	x2, x0, x2, lsl #3
   18a80:	add	w7, w3, w23
   18a84:	nop
   18a88:	ldr	x1, [x4]
   18a8c:	ldr	w0, [x1, #92]
   18a90:	cmp	w0, w3
   18a94:	b.ls	18ab4 <omp_in_final@@OMP_3.1+0xa8c>  // b.plast
   18a98:	cmp	w0, w7
   18a9c:	b.hi	18ab4 <omp_in_final@@OMP_3.1+0xa8c>  // b.pmore
   18aa0:	add	w0, w13, w0
   18aa4:	ldr	x6, [x5, x0, lsl #3]
   18aa8:	str	x6, [x1, #8]
   18aac:	ldr	x1, [x4]
   18ab0:	str	x1, [x5, x0, lsl #3]
   18ab4:	str	xzr, [x4], #8
   18ab8:	cmp	x4, x2
   18abc:	b.ne	18a88 <omp_in_final@@OMP_3.1+0xa60>  // b.any
   18ac0:	ldr	w1, [x29, #144]
   18ac4:	ldr	w0, [x29, #252]
   18ac8:	cmp	w0, w1
   18acc:	b.hi	190cc <omp_in_final@@OMP_3.1+0x10a4>  // b.pmore
   18ad0:	ldr	w0, [x29, #144]
   18ad4:	sub	w0, w0, w24
   18ad8:	str	w0, [x29, #148]
   18adc:	ldr	w0, [x29, #252]
   18ae0:	str	w0, [x29, #200]
   18ae4:	b	18888 <omp_in_final@@OMP_3.1+0x860>
   18ae8:	ldr	w1, [x29, #140]
   18aec:	ldr	w0, [x29, #160]
   18af0:	cmp	w0, w1
   18af4:	b.eq	18c10 <omp_in_final@@OMP_3.1+0xbe8>  // b.none
   18af8:	ldr	w0, [x29, #160]
   18afc:	add	w0, w0, #0x1
   18b00:	str	w0, [x29, #160]
   18b04:	ldr	x0, [x29, #152]
   18b08:	cbnz	x0, 18888 <omp_in_final@@OMP_3.1+0x860>
   18b0c:	ldr	x0, [x21]
   18b10:	mov	w7, w24
   18b14:	ldr	w1, [x29, #192]
   18b18:	ubfiz	x28, x24, #3, #32
   18b1c:	ldr	x27, [x0, x7, lsl #3]
   18b20:	cmp	w1, #0x1
   18b24:	ldr	w0, [x27, #92]
   18b28:	b.ne	189f8 <omp_in_final@@OMP_3.1+0x9d0>  // b.any
   18b2c:	cmp	w0, w9
   18b30:	b.ls	18a08 <omp_in_final@@OMP_3.1+0x9e0>  // b.plast
   18b34:	add	w1, w9, w12
   18b38:	cmp	w1, w0
   18b3c:	b.cc	18a08 <omp_in_final@@OMP_3.1+0x9e0>  // b.lo, b.ul, b.last
   18b40:	str	xzr, [x29, #152]
   18b44:	b	188d8 <omp_in_final@@OMP_3.1+0x8b0>
   18b48:	ldr	w0, [x29, #140]
   18b4c:	ldr	w1, [x29, #160]
   18b50:	cmp	w0, w1
   18b54:	ldr	w0, [x29, #164]
   18b58:	add	w0, w0, #0x1
   18b5c:	b.eq	18c50 <omp_in_final@@OMP_3.1+0xc28>  // b.none
   18b60:	ldr	w1, [x29, #160]
   18b64:	add	w1, w1, #0x1
   18b68:	str	w1, [x29, #160]
   18b6c:	ldr	w1, [x29, #164]
   18b70:	str	w1, [x22, #52]
   18b74:	mov	w1, #0x1                   	// #1
   18b78:	str	w1, [x22, #56]
   18b7c:	b	18660 <omp_in_final@@OMP_3.1+0x638>
   18b80:	cbnz	w0, 18f0c <omp_in_final@@OMP_3.1+0xee4>
   18b84:	stp	w1, wzr, [x21, #64]
   18b88:	stp	w1, w1, [x21, #128]
   18b8c:	ldr	w1, [x29, #252]
   18b90:	ldr	w0, [x21, #8]
   18b94:	str	w1, [x21, #12]
   18b98:	str	wzr, [x29, #200]
   18b9c:	cmp	w0, w1
   18ba0:	b.hi	1874c <omp_in_final@@OMP_3.1+0x724>  // b.pmore
   18ba4:	ldr	x0, [x21]
   18ba8:	add	w1, w1, #0x1
   18bac:	str	w1, [x21, #8]
   18bb0:	ubfiz	x1, x1, #3, #32
   18bb4:	bl	b298 <fprintf@plt+0x2788>
   18bb8:	str	x0, [x21]
   18bbc:	ldp	x2, x1, [x29, #168]
   18bc0:	add	x1, x1, x2
   18bc4:	str	x1, [x0]
   18bc8:	b	1874c <omp_in_final@@OMP_3.1+0x724>
   18bcc:	ldr	w2, [x29, #164]
   18bd0:	ldp	w1, w0, [x25, #44]
   18bd4:	ldr	w3, [x29, #124]
   18bd8:	ldr	w4, [x29, #140]
   18bdc:	add	w0, w1, w0
   18be0:	cmp	w3, w2
   18be4:	add	w2, w2, w4
   18be8:	cinc	w2, w2, hi  // hi = pmore
   18bec:	cmp	w0, w2
   18bf0:	csel	w0, w2, w1, ne  // ne = any
   18bf4:	str	w0, [x29, #164]
   18bf8:	cmp	w3, w0
   18bfc:	cinc	w12, w4, hi  // hi = pmore
   18c00:	b	189d8 <omp_in_final@@OMP_3.1+0x9b0>
   18c04:	ldr	w1, [x29, #140]
   18c08:	str	w1, [x22, #56]
   18c0c:	b	18660 <omp_in_final@@OMP_3.1+0x638>
   18c10:	ldr	w0, [x29, #164]
   18c14:	ldp	w2, w1, [x25, #44]
   18c18:	add	w3, w0, #0x1
   18c1c:	ldr	w4, [x29, #124]
   18c20:	ldr	w0, [x29, #252]
   18c24:	add	w1, w2, w1
   18c28:	cmp	w1, w3
   18c2c:	mov	w1, #0x1                   	// #1
   18c30:	sub	w0, w0, w4
   18c34:	csel	w2, w3, w2, ne  // ne = any
   18c38:	cmp	w0, w24
   18c3c:	ldr	w0, [x29, #140]
   18c40:	stp	w1, w2, [x29, #160]
   18c44:	csel	w0, w0, w1, ne  // ne = any
   18c48:	str	w0, [x29, #140]
   18c4c:	b	18880 <omp_in_final@@OMP_3.1+0x858>
   18c50:	ldp	w2, w1, [x21, #44]
   18c54:	mov	w3, #0x1                   	// #1
   18c58:	add	w1, w2, w1
   18c5c:	cmp	w1, w0
   18c60:	ldr	w1, [x29, #104]
   18c64:	csel	w0, w2, w0, eq  // eq = none
   18c68:	stp	w3, w0, [x29, #160]
   18c6c:	cmp	w1, w23
   18c70:	ldr	w1, [x29, #140]
   18c74:	add	w0, w0, w3
   18c78:	csel	w1, w1, w3, ne  // ne = any
   18c7c:	str	w1, [x29, #140]
   18c80:	b	18b6c <omp_in_final@@OMP_3.1+0xb44>
   18c84:	ldr	w0, [x29, #192]
   18c88:	cmp	w0, #0x1
   18c8c:	mov	w0, #0x1                   	// #1
   18c90:	str	w0, [x29, #112]
   18c94:	b.ne	18848 <omp_in_final@@OMP_3.1+0x820>  // b.any
   18c98:	add	w10, w9, w12
   18c9c:	cmp	w9, w10
   18ca0:	b.cs	19284 <omp_in_final@@OMP_3.1+0x125c>  // b.hs, b.nlast
   18ca4:	sub	w0, w9, w2
   18ca8:	sub	w7, w10, w2
   18cac:	add	w4, w2, #0x1
   18cb0:	ldr	x27, [x3, w0, uxtw #3]
   18cb4:	add	x1, x3, w0, uxtw #3
   18cb8:	cbnz	x27, 188ac <omp_in_final@@OMP_3.1+0x884>
   18cbc:	add	w1, w4, w0
   18cc0:	add	w0, w0, #0x1
   18cc4:	cmp	w7, w0
   18cc8:	b.ne	18cb0 <omp_in_final@@OMP_3.1+0xc88>  // b.any
   18ccc:	mov	w0, #0x1                   	// #1
   18cd0:	str	w0, [x29, #112]
   18cd4:	cmp	w1, w10
   18cd8:	b.eq	18848 <omp_in_final@@OMP_3.1+0x820>  // b.none
   18cdc:	ldr	x0, [x29, #152]
   18ce0:	sub	w2, w1, w2
   18ce4:	add	x1, x0, x2, lsl #3
   18ce8:	ldr	x27, [x0, x2, lsl #3]
   18cec:	b	188ac <omp_in_final@@OMP_3.1+0x884>
   18cf0:	ldp	w2, w1, [x21, #44]
   18cf4:	mov	w3, #0x1                   	// #1
   18cf8:	add	w1, w2, w1
   18cfc:	cmp	w1, w0
   18d00:	ldr	w1, [x29, #104]
   18d04:	csel	w0, w2, w0, eq  // eq = none
   18d08:	stp	w3, w0, [x29, #160]
   18d0c:	cmp	w1, w23
   18d10:	ldr	w1, [x29, #140]
   18d14:	add	w0, w0, w3
   18d18:	csel	w1, w1, w3, ne  // ne = any
   18d1c:	str	w1, [x29, #140]
   18d20:	b	18660 <omp_in_final@@OMP_3.1+0x638>
   18d24:	ldr	w0, [x24, #92]
   18d28:	cbnz	w0, 183c8 <omp_in_final@@OMP_3.1+0x3a0>
   18d2c:	str	w3, [x29, #248]
   18d30:	bl	1c6e0 <omp_pause_resource_all_@@OMP_5.0+0xa38>
   18d34:	ldp	w3, w1, [x29, #248]
   18d38:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   18d3c:	cmp	w1, #0x1
   18d40:	ldrb	w0, [x0, #1520]
   18d44:	cset	w1, eq  // eq = none
   18d48:	tst	w1, w0
   18d4c:	b.ne	1928c <omp_in_final@@OMP_3.1+0x1264>  // b.any
   18d50:	ldr	w5, [x24, #44]
   18d54:	b	183c8 <omp_in_final@@OMP_3.1+0x3a0>
   18d58:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   18d5c:	mov	w7, w5
   18d60:	ldr	x1, [x1, #1624]
   18d64:	cmp	x1, w5, uxtw
   18d68:	b.ls	18448 <omp_in_final@@OMP_3.1+0x420>  // b.plast
   18d6c:	ldr	x1, [x2, x7, lsl #3]
   18d70:	str	x1, [x29, #240]
   18d74:	b	18448 <omp_in_final@@OMP_3.1+0x420>
   18d78:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   18d7c:	ldr	w3, [x29, #192]
   18d80:	str	w3, [x29, #248]
   18d84:	ldr	x2, [x2, #1528]
   18d88:	cmp	x2, w5, uxtw
   18d8c:	b.ls	18478 <omp_in_final@@OMP_3.1+0x450>  // b.plast
   18d90:	ldrb	w1, [x1, w5, uxtw]
   18d94:	str	w1, [x29, #248]
   18d98:	b	18478 <omp_in_final@@OMP_3.1+0x450>
   18d9c:	ldr	w2, [x1, #92]
   18da0:	ldr	w3, [x29, #192]
   18da4:	sub	w2, w2, #0x1
   18da8:	str	w2, [x29, #164]
   18dac:	cmp	w3, #0x3
   18db0:	b.eq	190f4 <omp_in_final@@OMP_3.1+0x10cc>  // b.none
   18db4:	cmp	w3, #0x4
   18db8:	b.eq	18f6c <omp_in_final@@OMP_3.1+0xf44>  // b.none
   18dbc:	cmp	w3, #0x1
   18dc0:	b.eq	190f4 <omp_in_final@@OMP_3.1+0x10cc>  // b.none
   18dc4:	str	wzr, [x29, #124]
   18dc8:	str	wzr, [x29, #140]
   18dcc:	str	wzr, [x29, #160]
   18dd0:	b	184cc <omp_in_final@@OMP_3.1+0x4a4>
   18dd4:	ldr	w0, [x29, #144]
   18dd8:	ldr	w2, [x29, #252]
   18ddc:	sub	x2, x2, w0, uxtw
   18de0:	ldr	w0, [x29, #148]
   18de4:	cbnz	w0, 18eb4 <omp_in_final@@OMP_3.1+0xe8c>
   18de8:	ldr	w1, [x21, #64]
   18dec:	add	x0, x21, #0x80
   18df0:	ldr	w3, [x29, #252]
   18df4:	sub	w1, w3, w1
   18df8:	ldaxr	w4, [x0]
   18dfc:	add	w4, w4, w1
   18e00:	stlxr	w5, w4, [x0]
   18e04:	cbnz	w5, 18df8 <omp_in_final@@OMP_3.1+0xdd0>
   18e08:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   18e0c:	add	x0, x0, #0x330
   18e10:	str	w3, [x21, #64]
   18e14:	ldxr	x1, [x0]
   18e18:	add	x1, x1, x2
   18e1c:	stlxr	w3, x1, [x0]
   18e20:	cbnz	w3, 18e14 <omp_in_final@@OMP_3.1+0xdec>
   18e24:	dmb	ish
   18e28:	b	186d8 <omp_in_final@@OMP_3.1+0x6b0>
   18e2c:	ldr	w0, [x29, #196]
   18e30:	ldr	w1, [x29, #144]
   18e34:	cmp	w0, #0x0
   18e38:	ldr	w0, [x29, #252]
   18e3c:	ccmp	w0, w1, #0x0, eq  // eq = none
   18e40:	b.ne	192dc <omp_in_final@@OMP_3.1+0x12b4>  // b.any
   18e44:	ldr	w0, [x29, #112]
   18e48:	cbz	w0, 186e4 <omp_in_final@@OMP_3.1+0x6bc>
   18e4c:	bl	8a90 <pthread_self@plt>
   18e50:	mov	x19, x0
   18e54:	ldp	x2, x1, [x29, #168]
   18e58:	add	x2, x1, x2
   18e5c:	add	x1, x2, #0x10
   18e60:	ldr	w2, [x2, #92]
   18e64:	bl	8b20 <fprintf@plt+0x10>
   18e68:	ldp	x1, x0, [x29, #168]
   18e6c:	mov	x23, #0x8                   	// #8
   18e70:	mov	w22, #0x1                   	// #1
   18e74:	add	x24, x0, x1
   18e78:	sub	x25, x19, x24
   18e7c:	ldr	w0, [x29, #252]
   18e80:	cmp	w22, w0
   18e84:	b.cs	186e4 <omp_in_final@@OMP_3.1+0x6bc>  // b.hs, b.nlast
   18e88:	ldr	x0, [x21]
   18e8c:	add	w22, w22, #0x1
   18e90:	ldr	x1, [x0, x23]
   18e94:	add	x23, x23, #0x8
   18e98:	cmp	x24, x1
   18e9c:	add	x0, x1, x25
   18ea0:	ldr	w2, [x1, #92]
   18ea4:	csel	x0, x0, x19, ne  // ne = any
   18ea8:	add	x1, x1, #0x10
   18eac:	bl	8b20 <fprintf@plt+0x10>
   18eb0:	b	18e7c <omp_in_final@@OMP_3.1+0xe54>
   18eb4:	ldr	w0, [x29, #148]
   18eb8:	neg	w2, w0
   18ebc:	b	18de8 <omp_in_final@@OMP_3.1+0xdc0>
   18ec0:	add	x28, x29, #0x110
   18ec4:	mov	x0, x28
   18ec8:	bl	86a0 <pthread_attr_init@plt>
   18ecc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   18ed0:	add	x1, x29, #0x108
   18ed4:	add	x0, x0, #0x660
   18ed8:	bl	8a00 <pthread_attr_getstacksize@plt>
   18edc:	cbz	w0, 18fd4 <omp_in_final@@OMP_3.1+0xfac>
   18ee0:	ldr	w2, [x29, #252]
   18ee4:	mov	w1, #0x70                  	// #112
   18ee8:	sub	w0, w2, w25
   18eec:	cmp	w25, w2
   18ef0:	mov	x2, sp
   18ef4:	umsubl	x0, w0, w1, x2
   18ef8:	mov	sp, x0
   18efc:	mov	x23, sp
   18f00:	b.cs	186a8 <omp_in_final@@OMP_3.1+0x680>  // b.hs, b.nlast
   18f04:	str	x28, [x29, #128]
   18f08:	b	18520 <omp_in_final@@OMP_3.1+0x4f8>
   18f0c:	ldr	w1, [x21, #64]
   18f10:	add	x0, x21, #0x80
   18f14:	ldr	w2, [x29, #252]
   18f18:	sub	w1, w2, w1
   18f1c:	ldaxr	w3, [x0]
   18f20:	add	w3, w3, w1
   18f24:	stlxr	w4, w3, [x0]
   18f28:	cbnz	w4, 18f1c <omp_in_final@@OMP_3.1+0xef4>
   18f2c:	ldr	w0, [x29, #144]
   18f30:	str	w2, [x21, #64]
   18f34:	str	w0, [x29, #200]
   18f38:	b	18738 <omp_in_final@@OMP_3.1+0x710>
   18f3c:	ldr	w1, [x29, #144]
   18f40:	sub	x0, x0, w1, uxtw
   18f44:	cbz	w1, 1904c <omp_in_final@@OMP_3.1+0x1024>
   18f48:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   18f4c:	add	x1, x1, #0x330
   18f50:	ldxr	x2, [x1]
   18f54:	add	x2, x2, x0
   18f58:	stlxr	w3, x2, [x1]
   18f5c:	cbnz	w3, 18f50 <omp_in_final@@OMP_3.1+0xf28>
   18f60:	dmb	ish
   18f64:	ldr	x0, [x20, #1568]
   18f68:	b	184ec <omp_in_final@@OMP_3.1+0x4c4>
   18f6c:	ldr	w2, [x1, #56]
   18f70:	ldr	w3, [x29, #252]
   18f74:	cmp	w2, w3
   18f78:	b.cc	191b0 <omp_in_final@@OMP_3.1+0x1188>  // b.lo, b.ul, b.last
   18f7c:	udiv	w4, w2, w3
   18f80:	ldr	w1, [x1, #52]
   18f84:	msub	w2, w4, w3, w2
   18f88:	add	w3, w4, #0x1
   18f8c:	madd	w2, w4, w2, w2
   18f90:	str	w4, [x29, #140]
   18f94:	ldr	w4, [x29, #164]
   18f98:	add	w2, w2, w1
   18f9c:	str	w2, [x29, #124]
   18fa0:	cmp	w4, w2
   18fa4:	b.cs	191d8 <omp_in_final@@OMP_3.1+0x11b0>  // b.hs, b.nlast
   18fa8:	sub	w1, w4, w1
   18fac:	udiv	w2, w1, w3
   18fb0:	msub	w1, w2, w3, w1
   18fb4:	sub	w1, w4, w1
   18fb8:	str	w1, [x29, #164]
   18fbc:	ldp	x2, x1, [x29, #168]
   18fc0:	str	wzr, [x29, #160]
   18fc4:	add	x1, x1, x2
   18fc8:	ldr	w2, [x29, #164]
   18fcc:	stp	w2, w3, [x1, #52]
   18fd0:	b	184cc <omp_in_final@@OMP_3.1+0x4a4>
   18fd4:	ldr	x1, [x29, #264]
   18fd8:	mov	x0, x28
   18fdc:	bl	87d0 <pthread_attr_setstacksize@plt>
   18fe0:	b	18ee0 <omp_in_final@@OMP_3.1+0xeb8>
   18fe4:	ldr	x23, [x29, #184]
   18fe8:	mov	x26, x25
   18fec:	mov	w25, w24
   18ff0:	mov	w0, #0x1                   	// #1
   18ff4:	str	w0, [x29, #112]
   18ff8:	ldr	w1, [x29, #144]
   18ffc:	ldr	w0, [x29, #252]
   19000:	cmp	w0, w1
   19004:	b.hi	1918c <omp_in_final@@OMP_3.1+0x1164>  // b.pmore
   19008:	sub	w0, w1, w0
   1900c:	ldr	w1, [x29, #148]
   19010:	cmp	w0, w1
   19014:	cset	w0, eq  // eq = none
   19018:	cbz	w0, 19138 <omp_in_final@@OMP_3.1+0x1110>
   1901c:	ldr	w0, [x26, #48]
   19020:	str	wzr, [x29, #148]
   19024:	cmp	w0, #0x40
   19028:	b.ls	18980 <omp_in_final@@OMP_3.1+0x958>  // b.plast
   1902c:	ldr	x0, [x29, #152]
   19030:	bl	8900 <free@plt>
   19034:	b	18980 <omp_in_final@@OMP_3.1+0x958>
   19038:	ldr	w0, [x29, #252]
   1903c:	mov	w25, #0x1                   	// #1
   19040:	str	wzr, [x29, #112]
   19044:	str	wzr, [x29, #148]
   19048:	str	xzr, [x29, #152]
   1904c:	sub	x0, x0, #0x1
   19050:	str	wzr, [x29, #144]
   19054:	b	18f48 <omp_in_final@@OMP_3.1+0xf20>
   19058:	ldr	w0, [x29, #164]
   1905c:	ldp	w2, w1, [x25, #44]
   19060:	add	w4, w0, #0x1
   19064:	ldr	w3, [x29, #124]
   19068:	ldr	w0, [x29, #252]
   1906c:	add	w1, w2, w1
   19070:	cmp	w1, w4
   19074:	sub	w0, w0, w3
   19078:	csel	w2, w4, w2, ne  // ne = any
   1907c:	cmp	w0, w24
   19080:	ldr	w0, [x29, #140]
   19084:	mov	w3, #0x1                   	// #1
   19088:	csel	w12, w3, w3, ne  // ne = any
   1908c:	csel	w0, w0, w3, ne  // ne = any
   19090:	str	w0, [x29, #140]
   19094:	stp	w3, w2, [x29, #160]
   19098:	b	189d8 <omp_in_final@@OMP_3.1+0x9b0>
   1909c:	mov	x0, x2
   190a0:	str	x7, [x29, #112]
   190a4:	str	w12, [x29, #148]
   190a8:	str	w9, [x29, #200]
   190ac:	bl	b220 <fprintf@plt+0x2710>
   190b0:	ldr	w23, [x25, #48]
   190b4:	ldr	w12, [x29, #148]
   190b8:	ldr	w9, [x29, #200]
   190bc:	ubfiz	x2, x23, #3, #32
   190c0:	str	x0, [x29, #152]
   190c4:	ldr	x7, [x29, #112]
   190c8:	b	18a2c <omp_in_final@@OMP_3.1+0xa04>
   190cc:	ldp	x2, x3, [x29, #96]
   190d0:	mov	w1, #0x0                   	// #0
   190d4:	ldr	x0, [x21]
   190d8:	str	w12, [x29, #148]
   190dc:	str	w9, [x29, #200]
   190e0:	add	x0, x0, x3
   190e4:	bl	87c0 <memset@plt>
   190e8:	ldr	w12, [x29, #148]
   190ec:	ldr	w9, [x29, #200]
   190f0:	b	18ad0 <omp_in_final@@OMP_3.1+0xaa8>
   190f4:	ldp	x2, x1, [x29, #168]
   190f8:	add	x1, x1, x2
   190fc:	ldr	w2, [x29, #252]
   19100:	ldr	w1, [x1, #56]
   19104:	cmp	w1, w2
   19108:	b.cs	1919c <omp_in_final@@OMP_3.1+0x1174>  // b.hs, b.nlast
   1910c:	udiv	w3, w2, w1
   19110:	mov	w4, #0x1                   	// #1
   19114:	str	w4, [x29, #160]
   19118:	msub	w1, w3, w1, w2
   1911c:	str	w3, [x29, #140]
   19120:	str	w1, [x29, #124]
   19124:	b	184cc <omp_in_final@@OMP_3.1+0x4a4>
   19128:	mov	w25, #0x1                   	// #1
   1912c:	str	wzr, [x29, #112]
   19130:	str	wzr, [x29, #148]
   19134:	b	1898c <omp_in_final@@OMP_3.1+0x964>
   19138:	ldr	w0, [x29, #192]
   1913c:	cmp	w0, #0x3
   19140:	b.eq	19234 <omp_in_final@@OMP_3.1+0x120c>  // b.none
   19144:	cmp	w0, #0x4
   19148:	b.eq	19200 <omp_in_final@@OMP_3.1+0x11d8>  // b.none
   1914c:	cmp	w0, #0x1
   19150:	b.eq	19234 <omp_in_final@@OMP_3.1+0x120c>  // b.none
   19154:	ldr	w1, [x29, #148]
   19158:	mov	w25, #0x1                   	// #1
   1915c:	ldr	w0, [x29, #252]
   19160:	add	w0, w0, w1
   19164:	cbz	w1, 1899c <omp_in_final@@OMP_3.1+0x974>
   19168:	ldr	w2, [x21, #64]
   1916c:	add	x1, x21, #0x80
   19170:	sub	w2, w0, w2
   19174:	ldaxr	w3, [x1]
   19178:	add	w3, w3, w2
   1917c:	stlxr	w4, w3, [x1]
   19180:	cbnz	w4, 19174 <omp_in_final@@OMP_3.1+0x114c>
   19184:	str	w0, [x21, #64]
   19188:	b	1899c <omp_in_final@@OMP_3.1+0x974>
   1918c:	ldr	w0, [x29, #144]
   19190:	cmp	w0, w25
   19194:	cset	w0, eq  // eq = none
   19198:	b	19018 <omp_in_final@@OMP_3.1+0xff0>
   1919c:	mov	w1, #0x1                   	// #1
   191a0:	str	wzr, [x29, #124]
   191a4:	str	w1, [x29, #140]
   191a8:	str	w1, [x29, #160]
   191ac:	b	184cc <omp_in_final@@OMP_3.1+0x4a4>
   191b0:	ldr	w5, [x29, #252]
   191b4:	mov	w3, #0x1                   	// #1
   191b8:	ldr	w6, [x29, #164]
   191bc:	stp	w6, w3, [x1, #52]
   191c0:	str	w3, [x29, #160]
   191c4:	udiv	w4, w5, w2
   191c8:	msub	w1, w4, w2, w5
   191cc:	str	w4, [x29, #140]
   191d0:	str	w1, [x29, #124]
   191d4:	b	184cc <omp_in_final@@OMP_3.1+0x4a4>
   191d8:	ldr	w5, [x29, #164]
   191dc:	ldr	w1, [x29, #124]
   191e0:	ldr	w4, [x29, #140]
   191e4:	sub	w2, w5, w1
   191e8:	mov	w3, w4
   191ec:	udiv	w1, w2, w4
   191f0:	msub	w1, w1, w4, w2
   191f4:	sub	w1, w5, w1
   191f8:	str	w1, [x29, #164]
   191fc:	b	18fbc <omp_in_final@@OMP_3.1+0xf94>
   19200:	ldp	x1, x0, [x29, #168]
   19204:	add	x0, x0, x1
   19208:	ldr	w0, [x0, #52]
   1920c:	str	w0, [x29, #164]
   19210:	ldr	w0, [x29, #160]
   19214:	cbz	w0, 19154 <omp_in_final@@OMP_3.1+0x112c>
   19218:	mov	w1, #0x1                   	// #1
   1921c:	ldr	w0, [x26, #48]
   19220:	str	w1, [x29, #160]
   19224:	ldr	w1, [x29, #252]
   19228:	udiv	w0, w1, w0
   1922c:	str	w0, [x29, #140]
   19230:	b	19154 <omp_in_final@@OMP_3.1+0x112c>
   19234:	ldp	x1, x0, [x29, #168]
   19238:	add	x0, x0, x1
   1923c:	ldr	w1, [x29, #252]
   19240:	ldr	w0, [x0, #56]
   19244:	cmp	w0, w1
   19248:	b.cs	19254 <omp_in_final@@OMP_3.1+0x122c>  // b.hs, b.nlast
   1924c:	udiv	w0, w1, w0
   19250:	str	w0, [x29, #140]
   19254:	ldp	x1, x0, [x29, #168]
   19258:	add	x0, x0, x1
   1925c:	mov	w1, #0x1                   	// #1
   19260:	ldr	w0, [x0, #92]
   19264:	sub	w0, w0, #0x1
   19268:	stp	w1, w0, [x29, #160]
   1926c:	b	19154 <omp_in_final@@OMP_3.1+0x112c>
   19270:	bl	8830 <strerror@plt>
   19274:	mov	x1, x0
   19278:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1927c:	add	x0, x0, #0xde8
   19280:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   19284:	mov	w1, w9
   19288:	b	18ccc <omp_in_final@@OMP_3.1+0xca4>
   1928c:	str	w3, [x29, #248]
   19290:	bl	8a90 <pthread_self@plt>
   19294:	ldr	w2, [x24, #92]
   19298:	add	x25, x24, #0x10
   1929c:	mov	x1, x25
   192a0:	bl	8b20 <fprintf@plt+0x10>
   192a4:	ldp	x0, x1, [x24, #16]
   192a8:	stp	x0, x1, [x26, #8]
   192ac:	ldr	w5, [x24, #44]
   192b0:	ldp	x0, x1, [x24, #32]
   192b4:	stp	x0, x1, [x26, #24]
   192b8:	add	w5, w5, #0x1
   192bc:	ldp	x0, x1, [x24, #48]
   192c0:	stp	x0, x1, [x26, #40]
   192c4:	ldr	w3, [x29, #248]
   192c8:	ldp	x0, x1, [x24, #64]
   192cc:	str	x26, [x24, #16]
   192d0:	stp	wzr, w5, [x24, #40]
   192d4:	stp	x0, x1, [x26, #56]
   192d8:	b	18414 <omp_in_final@@OMP_3.1+0x3ec>
   192dc:	bl	8a90 <pthread_self@plt>
   192e0:	mov	x19, x0
   192e4:	ldp	x2, x1, [x29, #168]
   192e8:	add	x2, x1, x2
   192ec:	add	x1, x2, #0x10
   192f0:	ldr	w2, [x2, #92]
   192f4:	bl	8b20 <fprintf@plt+0x10>
   192f8:	ldr	w0, [x29, #136]
   192fc:	cbz	w0, 18e68 <omp_in_final@@OMP_3.1+0xe40>
   19300:	ldr	w0, [x29, #252]
   19304:	mov	x1, #0x10                  	// #16
   19308:	mov	w21, #0x1                   	// #1
   1930c:	sub	w19, w0, #0x1
   19310:	mov	w0, #0x70                  	// #112
   19314:	umsubl	x19, w19, w0, x1
   19318:	add	x19, x23, x19
   1931c:	ldr	w0, [x29, #252]
   19320:	cmp	w21, w0
   19324:	b.cs	186e4 <omp_in_final@@OMP_3.1+0x6bc>  // b.hs, b.nlast
   19328:	ldr	w2, [x19, #80]
   1932c:	mov	x1, x19
   19330:	ldr	x0, [x19, #88]
   19334:	add	w21, w21, #0x1
   19338:	add	x19, x19, #0x70
   1933c:	bl	8b20 <fprintf@plt+0x10>
   19340:	b	1931c <omp_in_final@@OMP_3.1+0x12f4>
   19344:	nop
   19348:	stp	x29, x30, [sp, #-80]!
   1934c:	mov	x29, sp
   19350:	stp	x21, x22, [sp, #32]
   19354:	adrp	x22, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   19358:	ldr	x22, [x22, #3992]
   1935c:	stp	x19, x20, [sp, #16]
   19360:	mrs	x20, tpidr_el0
   19364:	add	x21, x20, x22
   19368:	stp	x23, x24, [sp, #48]
   1936c:	ldr	x19, [x21, #16]
   19370:	add	x23, x19, #0x80
   19374:	mov	x0, x23
   19378:	bl	1ae88 <omp_get_num_procs@@OMP_1.0+0x7e0>
   1937c:	ldr	w0, [x19, #1336]
   19380:	cbnz	w0, 19444 <omp_in_final@@OMP_3.1+0x141c>
   19384:	ldr	x0, [x21, #24]
   19388:	bl	19850 <omp_in_final@@OMP_3.1+0x1828>
   1938c:	bl	12ff8 <GOMP_single_copy_end@@GOMP_1.0+0x1870>
   19390:	add	x0, x20, x22
   19394:	ldp	x4, x5, [x19, #8]
   19398:	add	x1, x0, #0x10
   1939c:	stp	x4, x5, [x0, #16]
   193a0:	ldp	x4, x5, [x19, #24]
   193a4:	stp	x4, x5, [x0, #32]
   193a8:	ldr	w0, [x0, #44]
   193ac:	ldp	x4, x5, [x19, #40]
   193b0:	stp	x4, x5, [x1, #32]
   193b4:	ldp	x2, x3, [x19, #56]
   193b8:	stp	x2, x3, [x1, #48]
   193bc:	cbnz	w0, 194c8 <omp_in_final@@OMP_3.1+0x14a0>
   193c0:	ldr	x21, [x19, #312]
   193c4:	cbnz	x21, 19408 <omp_in_final@@OMP_3.1+0x13e0>
   193c8:	add	x20, x20, x22
   193cc:	ldr	x0, [x20, #16]
   193d0:	cbnz	x0, 1942c <omp_in_final@@OMP_3.1+0x1404>
   193d4:	ldr	w0, [x19]
   193d8:	cmp	w0, #0x1
   193dc:	b.eq	1942c <omp_in_final@@OMP_3.1+0x1404>  // b.none
   193e0:	ldr	x20, [x20, #96]
   193e4:	ldr	x0, [x20, #16]
   193e8:	cbz	x0, 193f0 <omp_in_final@@OMP_3.1+0x13c8>
   193ec:	bl	8900 <free@plt>
   193f0:	ldp	x21, x22, [sp, #32]
   193f4:	ldp	x23, x24, [sp, #48]
   193f8:	str	x19, [x20, #16]
   193fc:	ldp	x19, x20, [sp, #16]
   19400:	ldp	x29, x30, [sp], #80
   19404:	ret
   19408:	mov	x0, x21
   1940c:	ldr	x21, [x21, #56]
   19410:	bl	8900 <free@plt>
   19414:	cbz	x21, 193c8 <omp_in_final@@OMP_3.1+0x13a0>
   19418:	mov	x0, x21
   1941c:	ldr	x21, [x21, #56]
   19420:	bl	8900 <free@plt>
   19424:	cbnz	x21, 19408 <omp_in_final@@OMP_3.1+0x13e0>
   19428:	b	193c8 <omp_in_final@@OMP_3.1+0x13a0>
   1942c:	mov	x0, x19
   19430:	ldp	x19, x20, [sp, #16]
   19434:	ldp	x21, x22, [sp, #32]
   19438:	ldp	x23, x24, [sp, #48]
   1943c:	ldp	x29, x30, [sp], #80
   19440:	b	8900 <free@plt>
   19444:	ldr	x24, [x19, #88]
   19448:	str	x25, [sp, #64]
   1944c:	mov	x25, #0x1                   	// #1
   19450:	add	x21, x24, #0x50
   19454:	ldar	x0, [x21]
   19458:	mov	x1, x0
   1945c:	cmp	x0, #0x2
   19460:	b.hi	194b8 <omp_in_final@@OMP_3.1+0x1490>  // b.pmore
   19464:	ldaxr	x0, [x21]
   19468:	cbnz	x0, 19474 <omp_in_final@@OMP_3.1+0x144c>
   1946c:	stxr	w1, x25, [x21]
   19470:	cbnz	w1, 19464 <omp_in_final@@OMP_3.1+0x143c>
   19474:	cmp	x0, #0x0
   19478:	b.ne	194a8 <omp_in_final@@OMP_3.1+0x1480>  // b.any
   1947c:	ldxr	x0, [x21]
   19480:	stlxr	w1, x24, [x21]
   19484:	cbnz	w1, 1947c <omp_in_final@@OMP_3.1+0x1454>
   19488:	cmp	x0, #0x1
   1948c:	b.eq	19498 <omp_in_final@@OMP_3.1+0x1470>  // b.none
   19490:	mov	x0, x21
   19494:	bl	1b300 <omp_get_num_procs@@OMP_1.0+0xc58>
   19498:	mov	x0, x24
   1949c:	bl	19850 <omp_in_final@@OMP_3.1+0x1828>
   194a0:	ldr	x25, [sp, #64]
   194a4:	b	1938c <omp_in_final@@OMP_3.1+0x1364>
   194a8:	mov	x0, x21
   194ac:	bl	1b1e0 <omp_get_num_procs@@OMP_1.0+0xb38>
   194b0:	mov	x1, x0
   194b4:	cbz	x0, 1947c <omp_in_final@@OMP_3.1+0x1454>
   194b8:	mov	x0, x24
   194bc:	mov	x24, x1
   194c0:	bl	19850 <omp_in_final@@OMP_3.1+0x1828>
   194c4:	b	19450 <omp_in_final@@OMP_3.1+0x1428>
   194c8:	ldr	w2, [x19]
   194cc:	mov	x1, #0x1                   	// #1
   194d0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   194d4:	add	x0, x0, #0x330
   194d8:	sub	x1, x1, x2
   194dc:	ldxr	x2, [x0]
   194e0:	add	x2, x2, x1
   194e4:	stlxr	w3, x2, [x0]
   194e8:	cbnz	w3, 194dc <omp_in_final@@OMP_3.1+0x14b4>
   194ec:	mov	x0, x23
   194f0:	dmb	ish
   194f4:	bl	1ab78 <omp_get_num_procs@@OMP_1.0+0x4d0>
   194f8:	b	193c0 <omp_in_final@@OMP_3.1+0x1398>
   194fc:	nop
   19500:	stp	x29, x30, [sp, #-48]!
   19504:	mov	x29, sp
   19508:	stp	x21, x22, [sp, #32]
   1950c:	adrp	x21, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   19510:	ldr	x21, [x21, #3992]
   19514:	stp	x19, x20, [sp, #16]
   19518:	mrs	x20, tpidr_el0
   1951c:	add	x0, x20, x21
   19520:	ldr	x19, [x0, #96]
   19524:	cbz	x19, 195bc <omp_in_final@@OMP_3.1+0x1594>
   19528:	ldr	w2, [x19, #12]
   1952c:	cbz	w2, 19598 <omp_in_final@@OMP_3.1+0x1570>
   19530:	cmp	w2, #0x1
   19534:	b.ls	1955c <omp_in_final@@OMP_3.1+0x1534>  // b.plast
   19538:	ldr	x4, [x19]
   1953c:	adrp	x3, 18000 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x58>
   19540:	add	x3, x3, #0x50
   19544:	mov	x0, #0x1                   	// #1
   19548:	ldr	x1, [x4, x0, lsl #3]
   1954c:	add	x0, x0, #0x1
   19550:	cmp	w2, w0
   19554:	stp	x3, x19, [x1]
   19558:	b.hi	19548 <omp_in_final@@OMP_3.1+0x1520>  // b.pmore
   1955c:	add	x22, x19, #0x40
   19560:	mov	x0, x22
   19564:	bl	1ab78 <omp_get_num_procs@@OMP_1.0+0x4d0>
   19568:	mov	x0, x22
   1956c:	bl	1ab78 <omp_get_num_procs@@OMP_1.0+0x4d0>
   19570:	ldr	w2, [x19, #12]
   19574:	mov	x1, #0x1                   	// #1
   19578:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1957c:	add	x0, x0, #0x330
   19580:	sub	x1, x1, x2
   19584:	ldxr	x2, [x0]
   19588:	add	x2, x2, x1
   1958c:	stlxr	w3, x2, [x0]
   19590:	cbnz	w3, 19584 <omp_in_final@@OMP_3.1+0x155c>
   19594:	dmb	ish
   19598:	ldr	x0, [x19, #16]
   1959c:	cbz	x0, 195a4 <omp_in_final@@OMP_3.1+0x157c>
   195a0:	bl	8900 <free@plt>
   195a4:	ldr	x0, [x19]
   195a8:	bl	8900 <free@plt>
   195ac:	mov	x0, x19
   195b0:	bl	8900 <free@plt>
   195b4:	add	x0, x20, x21
   195b8:	str	xzr, [x0, #96]
   195bc:	add	x0, x20, x21
   195c0:	ldr	w1, [x0, #44]
   195c4:	cbnz	w1, 195d0 <omp_in_final@@OMP_3.1+0x15a8>
   195c8:	ldr	x0, [x0, #16]
   195cc:	cbnz	x0, 19604 <omp_in_final@@OMP_3.1+0x15dc>
   195d0:	add	x20, x20, x21
   195d4:	ldr	x19, [x20, #80]
   195d8:	cbz	x19, 195f4 <omp_in_final@@OMP_3.1+0x15cc>
   195dc:	bl	12ff8 <GOMP_single_copy_end@@GOMP_1.0+0x1870>
   195e0:	mov	x0, x19
   195e4:	ldp	x19, x20, [sp, #16]
   195e8:	ldp	x21, x22, [sp, #32]
   195ec:	ldp	x29, x30, [sp], #48
   195f0:	b	8900 <free@plt>
   195f4:	ldp	x19, x20, [sp, #16]
   195f8:	ldp	x21, x22, [sp, #32]
   195fc:	ldp	x29, x30, [sp], #48
   19600:	ret
   19604:	bl	19348 <omp_in_final@@OMP_3.1+0x1320>
   19608:	b	195d0 <omp_in_final@@OMP_3.1+0x15a8>
   1960c:	nop
   19610:	stp	x29, x30, [sp, #-64]!
   19614:	mov	x29, sp
   19618:	stp	x23, x24, [sp, #48]
   1961c:	adrp	x23, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   19620:	ldr	x23, [x23, #3992]
   19624:	stp	x21, x22, [sp, #32]
   19628:	mrs	x22, tpidr_el0
   1962c:	stp	x19, x20, [sp, #16]
   19630:	add	x19, x22, x23
   19634:	ldr	w0, [x19, #44]
   19638:	ldr	x20, [x19, #96]
   1963c:	cbnz	w0, 19750 <omp_in_final@@OMP_3.1+0x1728>
   19640:	cbz	x20, 19738 <omp_in_final@@OMP_3.1+0x1710>
   19644:	ldr	w24, [x20, #12]
   19648:	cbz	w24, 19710 <omp_in_final@@OMP_3.1+0x16e8>
   1964c:	ubfiz	x0, x24, #3, #32
   19650:	cmp	w24, #0x1
   19654:	add	x0, x0, #0xf
   19658:	and	x0, x0, #0xffffffff0
   1965c:	sub	sp, sp, x0
   19660:	mov	x21, sp
   19664:	b.ls	196ac <omp_in_final@@OMP_3.1+0x1684>  // b.plast
   19668:	bl	8a90 <pthread_self@plt>
   1966c:	sub	x6, x0, x19
   19670:	ldr	x7, [x20]
   19674:	adrp	x5, 18000 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x58>
   19678:	mov	x4, x19
   1967c:	add	x5, x5, #0x88
   19680:	mov	x1, #0x1                   	// #1
   19684:	nop
   19688:	ldr	x2, [x7, x1, lsl #3]
   1968c:	cmp	x4, x2
   19690:	add	x3, x2, x6
   19694:	csel	x3, x3, x0, ne  // ne = any
   19698:	stp	x5, x20, [x2]
   1969c:	str	x3, [x21, x1, lsl #3]
   196a0:	add	x1, x1, #0x1
   196a4:	cmp	w24, w1
   196a8:	b.hi	19688 <omp_in_final@@OMP_3.1+0x1660>  // b.pmore
   196ac:	add	x19, x20, #0x40
   196b0:	mov	x0, x19
   196b4:	bl	1ab78 <omp_get_num_procs@@OMP_1.0+0x4d0>
   196b8:	mov	x0, x19
   196bc:	bl	1ab78 <omp_get_num_procs@@OMP_1.0+0x4d0>
   196c0:	ldr	w1, [x20, #12]
   196c4:	mov	x19, #0x1                   	// #1
   196c8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   196cc:	add	x0, x0, #0x330
   196d0:	sub	x1, x19, x1
   196d4:	ldxr	x2, [x0]
   196d8:	add	x2, x2, x1
   196dc:	stlxr	w3, x2, [x0]
   196e0:	cbnz	w3, 196d4 <omp_in_final@@OMP_3.1+0x16ac>
   196e4:	dmb	ish
   196e8:	ldr	w0, [x20, #12]
   196ec:	cmp	w0, #0x1
   196f0:	b.ls	19710 <omp_in_final@@OMP_3.1+0x16e8>  // b.plast
   196f4:	ldr	x0, [x21, x19, lsl #3]
   196f8:	mov	x1, #0x0                   	// #0
   196fc:	add	x19, x19, #0x1
   19700:	bl	8860 <pthread_join@plt>
   19704:	ldr	w0, [x20, #12]
   19708:	cmp	w0, w19
   1970c:	b.hi	196f4 <omp_in_final@@OMP_3.1+0x16cc>  // b.pmore
   19710:	ldr	x0, [x20, #16]
   19714:	cbz	x0, 1971c <omp_in_final@@OMP_3.1+0x16f4>
   19718:	bl	8900 <free@plt>
   1971c:	ldr	x0, [x20]
   19720:	add	x22, x22, x23
   19724:	bl	8900 <free@plt>
   19728:	mov	x0, x20
   1972c:	bl	8900 <free@plt>
   19730:	mov	w0, #0x0                   	// #0
   19734:	str	xzr, [x22, #96]
   19738:	mov	sp, x29
   1973c:	ldp	x19, x20, [sp, #16]
   19740:	ldp	x21, x22, [sp, #32]
   19744:	ldp	x23, x24, [sp, #48]
   19748:	ldp	x29, x30, [sp], #64
   1974c:	ret
   19750:	mov	w0, #0xffffffff            	// #-1
   19754:	b	19738 <omp_in_final@@OMP_3.1+0x1710>
   19758:	stp	x29, x30, [sp, #-32]!
   1975c:	mov	x0, #0xd0                  	// #208
   19760:	mov	x29, sp
   19764:	str	x19, [sp, #16]
   19768:	bl	b220 <fprintf@plt+0x2710>
   1976c:	mov	x1, #0x0                   	// #0
   19770:	mov	x19, x0
   19774:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   19778:	add	x2, x2, #0x2b8
   1977c:	bl	12fb8 <GOMP_single_copy_end@@GOMP_1.0+0x1830>
   19780:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   19784:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   19788:	ldr	x2, [x2, #3992]
   1978c:	mrs	x1, tpidr_el0
   19790:	ldr	w0, [x0, #1696]
   19794:	add	x1, x1, x2
   19798:	str	x19, [x1, #80]
   1979c:	bl	89b0 <pthread_setspecific@plt>
   197a0:	add	x0, x19, #0x90
   197a4:	ldr	x19, [sp, #16]
   197a8:	ldp	x29, x30, [sp], #32
   197ac:	ret
   197b0:	stp	x29, x30, [sp, #-32]!
   197b4:	mov	x29, sp
   197b8:	stp	x19, x20, [sp, #16]
   197bc:	mov	x19, x0
   197c0:	str	wzr, [x0, #64]
   197c4:	cbnz	x1, 197e4 <omp_in_final@@OMP_3.1+0x17bc>
   197c8:	add	x0, x0, #0x60
   197cc:	str	x0, [x19, #32]
   197d0:	str	wzr, [x19, #68]
   197d4:	str	xzr, [x19, #80]
   197d8:	ldp	x19, x20, [sp, #16]
   197dc:	ldp	x29, x30, [sp], #32
   197e0:	ret
   197e4:	ubfiz	x20, x2, #2, #32
   197e8:	sub	x2, x1, #0x1
   197ec:	add	x0, x20, #0x7
   197f0:	cmp	x1, #0x1
   197f4:	and	x0, x0, #0xfffffffffffffff8
   197f8:	add	x0, x0, x2
   197fc:	csel	x20, x20, x0, eq  // eq = none
   19800:	cmp	x20, #0x20
   19804:	b.hi	1983c <omp_in_final@@OMP_3.1+0x1814>  // b.pmore
   19808:	add	x0, x19, #0x60
   1980c:	str	x0, [x19, #32]
   19810:	mov	x2, x20
   19814:	mov	w1, #0x0                   	// #0
   19818:	bl	87c0 <memset@plt>
   1981c:	str	wzr, [x19, #48]
   19820:	mov	x0, #0xffffffff00000000    	// #-4294967296
   19824:	str	x0, [x19, #40]
   19828:	str	wzr, [x19, #68]
   1982c:	str	xzr, [x19, #80]
   19830:	ldp	x19, x20, [sp, #16]
   19834:	ldp	x29, x30, [sp], #32
   19838:	ret
   1983c:	mov	x0, x20
   19840:	bl	b220 <fprintf@plt+0x2710>
   19844:	str	x0, [x19, #32]
   19848:	b	19810 <omp_in_final@@OMP_3.1+0x17e8>
   1984c:	nop
   19850:	add	x1, x0, #0x60
   19854:	ldr	x0, [x0, #32]
   19858:	cmp	x0, x1
   1985c:	b.eq	19864 <omp_in_final@@OMP_3.1+0x183c>  // b.none
   19860:	b	8900 <free@plt>
   19864:	ret
   19868:	stp	x29, x30, [sp, #-64]!
   1986c:	mov	x29, sp
   19870:	stp	x21, x22, [sp, #32]
   19874:	adrp	x21, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   19878:	ldr	x21, [x21, #4016]
   1987c:	stp	x19, x20, [sp, #16]
   19880:	mrs	x19, tpidr_el0
   19884:	add	x20, x19, x21
   19888:	ldr	x22, [x20, #16]
   1988c:	str	x23, [sp, #48]
   19890:	mov	x23, x0
   19894:	cbz	x22, 19954 <omp_in_final@@OMP_3.1+0x192c>
   19898:	ldr	x1, [x20, #24]
   1989c:	str	x1, [x20, #32]
   198a0:	add	x1, x1, #0x50
   198a4:	ldar	x2, [x1]
   198a8:	cmp	x2, #0x2
   198ac:	b.hi	1991c <omp_in_final@@OMP_3.1+0x18f4>  // b.pmore
   198b0:	mov	x0, #0x1                   	// #1
   198b4:	ldaxr	x2, [x1]
   198b8:	cbnz	x2, 198c4 <omp_in_final@@OMP_3.1+0x189c>
   198bc:	stxr	w3, x0, [x1]
   198c0:	cbnz	w3, 198b4 <omp_in_final@@OMP_3.1+0x188c>
   198c4:	cmp	x2, #0x0
   198c8:	b.ne	1990c <omp_in_final@@OMP_3.1+0x18e4>  // b.any
   198cc:	ldr	x20, [x22, #96]
   198d0:	cbz	x20, 1993c <omp_in_final@@OMP_3.1+0x1914>
   198d4:	ldr	x0, [x20, #80]
   198d8:	str	x0, [x22, #96]
   198dc:	ldr	w2, [x22]
   198e0:	add	x19, x19, x21
   198e4:	mov	x1, x23
   198e8:	mov	x0, x20
   198ec:	bl	197b0 <omp_in_final@@OMP_3.1+0x1788>
   198f0:	str	x20, [x19, #24]
   198f4:	mov	w0, #0x1                   	// #1
   198f8:	ldp	x19, x20, [sp, #16]
   198fc:	ldp	x21, x22, [sp, #32]
   19900:	ldr	x23, [sp, #48]
   19904:	ldp	x29, x30, [sp], #64
   19908:	ret
   1990c:	mov	x0, x1
   19910:	bl	1b1e0 <omp_get_num_procs@@OMP_1.0+0xb38>
   19914:	mov	x2, x0
   19918:	cbz	x0, 198cc <omp_in_final@@OMP_3.1+0x18a4>
   1991c:	add	x19, x19, x21
   19920:	mov	w0, #0x0                   	// #0
   19924:	ldp	x21, x22, [sp, #32]
   19928:	str	x2, [x19, #24]
   1992c:	ldp	x19, x20, [sp, #16]
   19930:	ldr	x23, [sp, #48]
   19934:	ldp	x29, x30, [sp], #64
   19938:	ret
   1993c:	ldr	x0, [x22, #104]
   19940:	cbz	x0, 19988 <omp_in_final@@OMP_3.1+0x1960>
   19944:	ldr	x20, [x0, #80]
   19948:	cbz	x20, 19988 <omp_in_final@@OMP_3.1+0x1960>
   1994c:	str	xzr, [x0, #80]
   19950:	b	198d4 <omp_in_final@@OMP_3.1+0x18ac>
   19954:	mov	x0, #0x80                  	// #128
   19958:	bl	b220 <fprintf@plt+0x2710>
   1995c:	mov	x1, x23
   19960:	mov	x19, x0
   19964:	mov	w2, #0x1                   	// #1
   19968:	bl	197b0 <omp_in_final@@OMP_3.1+0x1788>
   1996c:	str	x19, [x20, #24]
   19970:	mov	w0, #0x1                   	// #1
   19974:	ldp	x19, x20, [sp, #16]
   19978:	ldp	x21, x22, [sp, #32]
   1997c:	ldr	x23, [sp, #48]
   19980:	ldp	x29, x30, [sp], #64
   19984:	ret
   19988:	ldr	w1, [x22, #4]
   1998c:	mov	x0, #0x40                  	// #64
   19990:	lsl	w1, w1, #1
   19994:	str	w1, [x22, #4]
   19998:	lsl	x1, x1, #7
   1999c:	bl	b2d0 <fprintf@plt+0x27c0>
   199a0:	mov	x20, x0
   199a4:	ldr	w1, [x22, #4]
   199a8:	ldr	x2, [x22, #312]
   199ac:	add	x0, x0, #0x80
   199b0:	str	x2, [x20, #56]
   199b4:	sub	w2, w1, #0x1
   199b8:	str	x0, [x22, #96]
   199bc:	cmp	w2, #0x1
   199c0:	str	x20, [x22, #312]
   199c4:	b.ls	199f8 <omp_in_final@@OMP_3.1+0x19d0>  // b.plast
   199c8:	sub	w2, w1, #0x3
   199cc:	add	x0, x20, #0x100
   199d0:	ubfiz	x1, x2, #7, #32
   199d4:	add	x1, x1, #0x180
   199d8:	add	x1, x20, x1
   199dc:	nop
   199e0:	stur	x0, [x0, #-48]
   199e4:	add	x0, x0, #0x80
   199e8:	cmp	x1, x0
   199ec:	b.ne	199e0 <omp_in_final@@OMP_3.1+0x19b8>  // b.any
   199f0:	add	x0, x2, #0x2
   199f4:	add	x0, x20, x0, lsl #7
   199f8:	str	xzr, [x0, #80]
   199fc:	b	198dc <omp_in_final@@OMP_3.1+0x18b4>
   19a00:	stp	x29, x30, [sp, #-80]!
   19a04:	mov	x29, sp
   19a08:	stp	x21, x22, [sp, #32]
   19a0c:	adrp	x21, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   19a10:	ldr	x21, [x21, #4016]
   19a14:	stp	x19, x20, [sp, #16]
   19a18:	mrs	x20, tpidr_el0
   19a1c:	add	x2, x20, x21
   19a20:	ldr	x19, [x2, #16]
   19a24:	cbz	x19, 19ad8 <omp_in_final@@OMP_3.1+0x1ab0>
   19a28:	add	x0, x19, #0x84
   19a2c:	str	x23, [sp, #48]
   19a30:	add	x23, x19, #0x80
   19a34:	ldar	w1, [x0]
   19a38:	and	w1, w1, #0xfffffffc
   19a3c:	add	x0, x19, #0xc0
   19a40:	ldaxr	w3, [x0]
   19a44:	sub	w3, w3, #0x1
   19a48:	stlxr	w4, w3, [x0]
   19a4c:	cbnz	w4, 19a40 <omp_in_final@@OMP_3.1+0x1a18>
   19a50:	cmp	w3, #0x0
   19a54:	orr	w0, w1, #0x1
   19a58:	csel	w1, w0, w1, eq  // eq = none
   19a5c:	tbz	w1, #0, 19ab4 <omp_in_final@@OMP_3.1+0x1a8c>
   19a60:	ldr	x22, [x2, #32]
   19a64:	cbz	x22, 19ab4 <omp_in_final@@OMP_3.1+0x1a8c>
   19a68:	ldr	x0, [x2, #24]
   19a6c:	str	x0, [x19, #88]
   19a70:	ldr	x0, [x22, #32]
   19a74:	add	x2, x22, #0x60
   19a78:	cmp	x0, x2
   19a7c:	b.eq	19a8c <omp_in_final@@OMP_3.1+0x1a64>  // b.none
   19a80:	str	w1, [sp, #76]
   19a84:	bl	8900 <free@plt>
   19a88:	ldr	w1, [sp, #76]
   19a8c:	add	x0, x19, #0x68
   19a90:	ldr	x2, [x19, #104]
   19a94:	str	x2, [x22, #80]
   19a98:	ldxr	x3, [x0]
   19a9c:	cmp	x3, x2
   19aa0:	b.ne	19aac <omp_in_final@@OMP_3.1+0x1a84>  // b.any
   19aa4:	stlxr	w4, x22, [x0]
   19aa8:	cbnz	w4, 19a98 <omp_in_final@@OMP_3.1+0x1a70>
   19aac:	dmb	ish
   19ab0:	b.ne	19a90 <omp_in_final@@OMP_3.1+0x1a68>  // b.any
   19ab4:	add	x20, x20, x21
   19ab8:	mov	x0, x23
   19abc:	bl	1ac70 <omp_get_num_procs@@OMP_1.0+0x5c8>
   19ac0:	ldr	x23, [sp, #48]
   19ac4:	str	xzr, [x20, #32]
   19ac8:	ldp	x19, x20, [sp, #16]
   19acc:	ldp	x21, x22, [sp, #32]
   19ad0:	ldp	x29, x30, [sp], #80
   19ad4:	ret
   19ad8:	ldr	x19, [x2, #24]
   19adc:	add	x1, x19, #0x60
   19ae0:	ldr	x0, [x19, #32]
   19ae4:	cmp	x0, x1
   19ae8:	b.eq	19af0 <omp_in_final@@OMP_3.1+0x1ac8>  // b.none
   19aec:	bl	8900 <free@plt>
   19af0:	add	x20, x20, x21
   19af4:	mov	x0, x19
   19af8:	bl	8900 <free@plt>
   19afc:	ldp	x21, x22, [sp, #32]
   19b00:	str	xzr, [x20, #24]
   19b04:	ldp	x19, x20, [sp, #16]
   19b08:	ldp	x29, x30, [sp], #80
   19b0c:	ret
   19b10:	stp	x29, x30, [sp, #-80]!
   19b14:	mov	x29, sp
   19b18:	stp	x21, x22, [sp, #32]
   19b1c:	adrp	x21, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   19b20:	ldr	x21, [x21, #4016]
   19b24:	stp	x19, x20, [sp, #16]
   19b28:	mrs	x20, tpidr_el0
   19b2c:	add	x2, x20, x21
   19b30:	ldr	x19, [x2, #16]
   19b34:	str	x23, [sp, #48]
   19b38:	add	x0, x19, #0x84
   19b3c:	add	x23, x19, #0x80
   19b40:	ldar	w1, [x0]
   19b44:	and	w1, w1, #0xfffffffc
   19b48:	add	x0, x19, #0xc0
   19b4c:	ldaxr	w3, [x0]
   19b50:	sub	w3, w3, #0x1
   19b54:	stlxr	w4, w3, [x0]
   19b58:	cbnz	w4, 19b4c <omp_in_final@@OMP_3.1+0x1b24>
   19b5c:	cmp	w3, #0x0
   19b60:	orr	w0, w1, #0x1
   19b64:	csel	w1, w0, w1, eq  // eq = none
   19b68:	tbz	w1, #0, 19bc0 <omp_in_final@@OMP_3.1+0x1b98>
   19b6c:	ldr	x22, [x2, #32]
   19b70:	cbz	x22, 19bc0 <omp_in_final@@OMP_3.1+0x1b98>
   19b74:	ldr	x0, [x2, #24]
   19b78:	str	x0, [x19, #88]
   19b7c:	ldr	x0, [x22, #32]
   19b80:	add	x2, x22, #0x60
   19b84:	cmp	x0, x2
   19b88:	b.eq	19b98 <omp_in_final@@OMP_3.1+0x1b70>  // b.none
   19b8c:	str	w1, [sp, #76]
   19b90:	bl	8900 <free@plt>
   19b94:	ldr	w1, [sp, #76]
   19b98:	add	x0, x19, #0x68
   19b9c:	ldr	x2, [x19, #104]
   19ba0:	str	x2, [x22, #80]
   19ba4:	ldxr	x3, [x0]
   19ba8:	cmp	x3, x2
   19bac:	b.ne	19bb8 <omp_in_final@@OMP_3.1+0x1b90>  // b.any
   19bb0:	stlxr	w4, x22, [x0]
   19bb4:	cbnz	w4, 19ba4 <omp_in_final@@OMP_3.1+0x1b7c>
   19bb8:	dmb	ish
   19bbc:	b.ne	19b9c <omp_in_final@@OMP_3.1+0x1b74>  // b.any
   19bc0:	add	x20, x20, x21
   19bc4:	mov	x0, x23
   19bc8:	ldp	x21, x22, [sp, #32]
   19bcc:	ldr	x23, [sp, #48]
   19bd0:	str	xzr, [x20, #32]
   19bd4:	ldp	x19, x20, [sp, #16]
   19bd8:	ldp	x29, x30, [sp], #80
   19bdc:	b	1aec0 <omp_get_num_procs@@OMP_1.0+0x818>
   19be0:	stp	x29, x30, [sp, #-48]!
   19be4:	mov	x29, sp
   19be8:	stp	x21, x22, [sp, #32]
   19bec:	adrp	x22, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   19bf0:	ldr	x22, [x22, #4016]
   19bf4:	stp	x19, x20, [sp, #16]
   19bf8:	mrs	x20, tpidr_el0
   19bfc:	add	x1, x20, x22
   19c00:	ldp	x21, x19, [x1, #16]
   19c04:	cbz	x21, 19c94 <omp_in_final@@OMP_3.1+0x1c6c>
   19c08:	ldr	x0, [x1, #32]
   19c0c:	cbz	x0, 19c3c <omp_in_final@@OMP_3.1+0x1c14>
   19c10:	add	x0, x19, #0x44
   19c14:	ldxr	w2, [x0]
   19c18:	add	w2, w2, #0x1
   19c1c:	stlxr	w3, w2, [x0]
   19c20:	cbnz	w3, 19c14 <omp_in_final@@OMP_3.1+0x1bec>
   19c24:	dmb	ish
   19c28:	ldr	w0, [x21]
   19c2c:	cmp	w0, w2
   19c30:	b.eq	19c4c <omp_in_final@@OMP_3.1+0x1c24>  // b.none
   19c34:	add	x20, x20, x22
   19c38:	str	xzr, [x20, #32]
   19c3c:	ldp	x19, x20, [sp, #16]
   19c40:	ldp	x21, x22, [sp, #32]
   19c44:	ldp	x29, x30, [sp], #48
   19c48:	ret
   19c4c:	ldp	x0, x19, [x1, #24]
   19c50:	str	x0, [x21, #88]
   19c54:	ldr	x0, [x19, #32]
   19c58:	add	x1, x19, #0x60
   19c5c:	cmp	x0, x1
   19c60:	b.eq	19c68 <omp_in_final@@OMP_3.1+0x1c40>  // b.none
   19c64:	bl	8900 <free@plt>
   19c68:	add	x0, x21, #0x68
   19c6c:	ldr	x1, [x21, #104]
   19c70:	str	x1, [x19, #80]
   19c74:	ldxr	x2, [x0]
   19c78:	cmp	x2, x1
   19c7c:	b.ne	19c88 <omp_in_final@@OMP_3.1+0x1c60>  // b.any
   19c80:	stlxr	w3, x19, [x0]
   19c84:	cbnz	w3, 19c74 <omp_in_final@@OMP_3.1+0x1c4c>
   19c88:	dmb	ish
   19c8c:	b.eq	19c34 <omp_in_final@@OMP_3.1+0x1c0c>  // b.none
   19c90:	b	19c6c <omp_in_final@@OMP_3.1+0x1c44>
   19c94:	ldr	x0, [x19, #32]
   19c98:	add	x1, x19, #0x60
   19c9c:	cmp	x0, x1
   19ca0:	b.eq	19ca8 <omp_in_final@@OMP_3.1+0x1c80>  // b.none
   19ca4:	bl	8900 <free@plt>
   19ca8:	add	x20, x20, x22
   19cac:	mov	x0, x19
   19cb0:	bl	8900 <free@plt>
   19cb4:	str	xzr, [x20, #24]
   19cb8:	b	19c3c <omp_in_final@@OMP_3.1+0x1c14>
   19cbc:	nop

0000000000019cc0 <omp_init_lock@@OMP_3.0>:
   19cc0:	str	wzr, [x0]
   19cc4:	ret

0000000000019cc8 <omp_destroy_lock@OMP_1.0>:
   19cc8:	ret
   19ccc:	nop

0000000000019cd0 <omp_set_lock@@OMP_3.0>:
   19cd0:	mov	x2, x0
   19cd4:	mov	w3, #0x1                   	// #1
   19cd8:	ldaxr	w1, [x2]
   19cdc:	cbnz	w1, 19ce8 <omp_set_lock@@OMP_3.0+0x18>
   19ce0:	stxr	w4, w3, [x2]
   19ce4:	cbnz	w4, 19cd8 <omp_set_lock@@OMP_3.0+0x8>
   19ce8:	cmp	w1, #0x0
   19cec:	b.ne	19cf4 <omp_set_lock@@OMP_3.0+0x24>  // b.any
   19cf0:	ret
   19cf4:	b	1a140 <omp_test_nest_lock@OMP_1.0+0x90>

0000000000019cf8 <omp_unset_lock@@OMP_3.0>:
   19cf8:	mov	x1, x0
   19cfc:	ldxr	w2, [x1]
   19d00:	stlxr	w3, wzr, [x1]
   19d04:	cbnz	w3, 19cfc <omp_unset_lock@@OMP_3.0+0x4>
   19d08:	tbnz	w2, #31, 19d10 <omp_unset_lock@@OMP_3.0+0x18>
   19d0c:	ret
   19d10:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   19d14:	nop

0000000000019d18 <omp_test_lock@OMP_1.0>:
   19d18:	mov	w1, #0x1                   	// #1
   19d1c:	ldaxr	w2, [x0]
   19d20:	cbnz	w2, 19d2c <omp_test_lock@OMP_1.0+0x14>
   19d24:	stxr	w3, w1, [x0]
   19d28:	cbnz	w3, 19d1c <omp_test_lock@OMP_1.0+0x4>
   19d2c:	cmp	w2, #0x0
   19d30:	cset	w0, eq  // eq = none
   19d34:	ret

0000000000019d38 <omp_init_nest_lock@@OMP_3.0>:
   19d38:	stp	xzr, xzr, [x0]
   19d3c:	ret

0000000000019d40 <omp_destroy_nest_lock@@OMP_3.0>:
   19d40:	ret
   19d44:	nop

0000000000019d48 <omp_set_nest_lock@@OMP_3.0>:
   19d48:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   19d4c:	ldr	x2, [x2, #4016]
   19d50:	mrs	x1, tpidr_el0
   19d54:	stp	x29, x30, [sp, #-32]!
   19d58:	add	x1, x1, x2
   19d5c:	mov	x29, sp
   19d60:	stp	x19, x20, [sp, #16]
   19d64:	mov	x19, x0
   19d68:	ldr	x20, [x1, #80]
   19d6c:	cbz	x20, 19db8 <omp_set_nest_lock@@OMP_3.0+0x70>
   19d70:	add	x20, x20, #0x90
   19d74:	ldr	x0, [x19, #8]
   19d78:	cmp	x0, x20
   19d7c:	b.eq	19da0 <omp_set_nest_lock@@OMP_3.0+0x58>  // b.none
   19d80:	mov	w0, #0x1                   	// #1
   19d84:	ldaxr	w1, [x19]
   19d88:	cbnz	w1, 19d94 <omp_set_nest_lock@@OMP_3.0+0x4c>
   19d8c:	stxr	w2, w0, [x19]
   19d90:	cbnz	w2, 19d84 <omp_set_nest_lock@@OMP_3.0+0x3c>
   19d94:	cmp	w1, #0x0
   19d98:	b.ne	19dc4 <omp_set_nest_lock@@OMP_3.0+0x7c>  // b.any
   19d9c:	str	x20, [x19, #8]
   19da0:	ldr	w0, [x19, #4]
   19da4:	add	w0, w0, #0x1
   19da8:	str	w0, [x19, #4]
   19dac:	ldp	x19, x20, [sp, #16]
   19db0:	ldp	x29, x30, [sp], #32
   19db4:	ret
   19db8:	bl	19758 <omp_in_final@@OMP_3.1+0x1730>
   19dbc:	mov	x20, x0
   19dc0:	b	19d74 <omp_set_nest_lock@@OMP_3.0+0x2c>
   19dc4:	mov	x0, x19
   19dc8:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   19dcc:	b	19d9c <omp_set_nest_lock@@OMP_3.0+0x54>

0000000000019dd0 <omp_unset_nest_lock@@OMP_3.0>:
   19dd0:	ldr	w2, [x0, #4]
   19dd4:	mov	x1, x0
   19dd8:	sub	w2, w2, #0x1
   19ddc:	str	w2, [x0, #4]
   19de0:	cbz	w2, 19de8 <omp_unset_nest_lock@@OMP_3.0+0x18>
   19de4:	ret
   19de8:	str	xzr, [x0, #8]
   19dec:	ldxr	w2, [x1]
   19df0:	stlxr	w3, wzr, [x1]
   19df4:	cbnz	w3, 19dec <omp_unset_nest_lock@@OMP_3.0+0x1c>
   19df8:	tbz	w2, #31, 19de4 <omp_unset_nest_lock@@OMP_3.0+0x14>
   19dfc:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>

0000000000019e00 <omp_test_nest_lock@@OMP_3.0>:
   19e00:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   19e04:	ldr	x2, [x2, #4016]
   19e08:	mrs	x1, tpidr_el0
   19e0c:	stp	x29, x30, [sp, #-32]!
   19e10:	add	x1, x1, x2
   19e14:	mov	x29, sp
   19e18:	ldr	x1, [x1, #80]
   19e1c:	str	x19, [sp, #16]
   19e20:	mov	x19, x0
   19e24:	cbz	x1, 19e6c <omp_test_nest_lock@@OMP_3.0+0x6c>
   19e28:	ldr	x0, [x19, #8]
   19e2c:	add	x1, x1, #0x90
   19e30:	mov	w2, #0x1                   	// #1
   19e34:	cmp	x0, x1
   19e38:	b.eq	19e84 <omp_test_nest_lock@@OMP_3.0+0x84>  // b.none
   19e3c:	ldaxr	w0, [x19]
   19e40:	cbnz	w0, 19e4c <omp_test_nest_lock@@OMP_3.0+0x4c>
   19e44:	stxr	w3, w2, [x19]
   19e48:	cbnz	w3, 19e3c <omp_test_nest_lock@@OMP_3.0+0x3c>
   19e4c:	cmp	w0, #0x0
   19e50:	b.ne	19e9c <omp_test_nest_lock@@OMP_3.0+0x9c>  // b.any
   19e54:	mov	w0, w2
   19e58:	str	w2, [x19, #4]
   19e5c:	str	x1, [x19, #8]
   19e60:	ldr	x19, [sp, #16]
   19e64:	ldp	x29, x30, [sp], #32
   19e68:	ret
   19e6c:	bl	19758 <omp_in_final@@OMP_3.1+0x1730>
   19e70:	mov	x1, x0
   19e74:	ldr	x0, [x19, #8]
   19e78:	mov	w2, #0x1                   	// #1
   19e7c:	cmp	x0, x1
   19e80:	b.ne	19e3c <omp_test_nest_lock@@OMP_3.0+0x3c>  // b.any
   19e84:	ldr	w0, [x19, #4]
   19e88:	add	w0, w0, #0x1
   19e8c:	str	w0, [x19, #4]
   19e90:	ldr	x19, [sp, #16]
   19e94:	ldp	x29, x30, [sp], #32
   19e98:	ret
   19e9c:	mov	w0, #0x0                   	// #0
   19ea0:	b	19e60 <omp_test_nest_lock@@OMP_3.0+0x60>
   19ea4:	nop

0000000000019ea8 <omp_init_nest_lock@OMP_1.0>:
   19ea8:	str	xzr, [x0]
   19eac:	ret

0000000000019eb0 <omp_destroy_nest_lock@OMP_1.0>:
   19eb0:	ret
   19eb4:	nop

0000000000019eb8 <omp_set_nest_lock@OMP_1.0>:
   19eb8:	stp	x29, x30, [sp, #-64]!
   19ebc:	mov	x29, sp
   19ec0:	stp	x21, x22, [sp, #32]
   19ec4:	mrs	x22, tpidr_el0
   19ec8:	adrp	x21, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   19ecc:	ldr	x21, [x21, #4000]
   19ed0:	stp	x19, x20, [sp, #16]
   19ed4:	mov	x19, x0
   19ed8:	stp	x23, x24, [sp, #48]
   19edc:	ldr	w20, [x22, x21]
   19ee0:	cbz	w20, 19f24 <omp_set_nest_lock@OMP_1.0+0x6c>
   19ee4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   19ee8:	add	x21, x0, #0x330
   19eec:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   19ef0:	ldaxr	w0, [x19]
   19ef4:	cbnz	w0, 19f00 <omp_set_nest_lock@OMP_1.0+0x48>
   19ef8:	stxr	w1, w20, [x19]
   19efc:	cbnz	w1, 19ef0 <omp_set_nest_lock@OMP_1.0+0x38>
   19f00:	cmp	w0, #0x0
   19f04:	b.ne	19f38 <omp_set_nest_lock@OMP_1.0+0x80>  // b.any
   19f08:	mov	w0, #0x1                   	// #1
   19f0c:	str	w0, [x19, #4]
   19f10:	ldp	x19, x20, [sp, #16]
   19f14:	ldp	x21, x22, [sp, #32]
   19f18:	ldp	x23, x24, [sp, #48]
   19f1c:	ldp	x29, x30, [sp], #64
   19f20:	ret
   19f24:	mov	x0, #0xb2                  	// #178
   19f28:	bl	8ae0 <syscall@plt>
   19f2c:	mov	x20, x0
   19f30:	str	w0, [x22, x21]
   19f34:	b	19ee4 <omp_set_nest_lock@OMP_1.0+0x2c>
   19f38:	mov	w22, w0
   19f3c:	adrp	x4, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   19f40:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   19f44:	cmp	w20, w22
   19f48:	b.eq	1a010 <omp_set_nest_lock@OMP_1.0+0x158>  // b.none
   19f4c:	ldr	x1, [x23, #1584]
   19f50:	ldr	x2, [x21]
   19f54:	ldr	x0, [x4, #744]
   19f58:	cmp	x2, x0
   19f5c:	b.hi	1a008 <omp_set_nest_lock@OMP_1.0+0x150>  // b.pmore
   19f60:	cbz	x1, 19fa4 <omp_set_nest_lock@OMP_1.0+0xec>
   19f64:	mov	x0, #0x0                   	// #0
   19f68:	b	19f78 <omp_set_nest_lock@OMP_1.0+0xc0>
   19f6c:	add	x0, x0, #0x1
   19f70:	cmp	x0, x1
   19f74:	b.eq	19fa4 <omp_set_nest_lock@OMP_1.0+0xec>  // b.none
   19f78:	ldr	w2, [x19]
   19f7c:	cmp	w22, w2
   19f80:	b.eq	19f6c <omp_set_nest_lock@OMP_1.0+0xb4>  // b.none
   19f84:	ldaxr	w0, [x19]
   19f88:	cbnz	w0, 19f94 <omp_set_nest_lock@OMP_1.0+0xdc>
   19f8c:	stxr	w1, w20, [x19]
   19f90:	cbnz	w1, 19f84 <omp_set_nest_lock@OMP_1.0+0xcc>
   19f94:	cmp	w0, #0x0
   19f98:	mov	w22, w0
   19f9c:	b.eq	19f08 <omp_set_nest_lock@OMP_1.0+0x50>  // b.none
   19fa0:	b	19f44 <omp_set_nest_lock@OMP_1.0+0x8c>
   19fa4:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   19fa8:	mov	w3, w22
   19fac:	mov	x1, x19
   19fb0:	mov	x4, #0x0                   	// #0
   19fb4:	ldr	w2, [x24, #832]
   19fb8:	mov	x0, #0x62                  	// #98
   19fbc:	bl	8ae0 <syscall@plt>
   19fc0:	tbz	w0, #31, 19ef0 <omp_set_nest_lock@OMP_1.0+0x38>
   19fc4:	bl	8ac0 <__errno_location@plt>
   19fc8:	ldr	w0, [x0]
   19fcc:	cmp	w0, #0x26
   19fd0:	b.ne	19ef0 <omp_set_nest_lock@OMP_1.0+0x38>  // b.any
   19fd4:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   19fd8:	ldr	w2, [x24, #832]
   19fdc:	mov	w3, w22
   19fe0:	mov	x1, x19
   19fe4:	ldr	w0, [x5, #836]
   19fe8:	and	w2, w2, #0xffffff7f
   19fec:	mov	x4, #0x0                   	// #0
   19ff0:	str	w2, [x24, #832]
   19ff4:	and	w0, w0, #0xffffff7f
   19ff8:	str	w0, [x5, #836]
   19ffc:	mov	x0, #0x62                  	// #98
   1a000:	bl	8ae0 <syscall@plt>
   1a004:	b	19ef0 <omp_set_nest_lock@OMP_1.0+0x38>
   1a008:	ldr	x1, [x3, #1600]
   1a00c:	b	19f60 <omp_set_nest_lock@OMP_1.0+0xa8>
   1a010:	ldr	w0, [x19, #4]
   1a014:	add	w0, w0, #0x1
   1a018:	str	w0, [x19, #4]
   1a01c:	b	19f10 <omp_set_nest_lock@OMP_1.0+0x58>

000000000001a020 <omp_unset_nest_lock@OMP_1.0>:
   1a020:	stp	x29, x30, [sp, #-32]!
   1a024:	mov	x29, sp
   1a028:	stp	x19, x20, [sp, #16]
   1a02c:	mov	x19, x0
   1a030:	ldr	w0, [x0, #4]
   1a034:	sub	w0, w0, #0x1
   1a038:	str	w0, [x19, #4]
   1a03c:	cbz	w0, 1a04c <omp_unset_nest_lock@OMP_1.0+0x2c>
   1a040:	ldp	x19, x20, [sp, #16]
   1a044:	ldp	x29, x30, [sp], #32
   1a048:	ret
   1a04c:	stlr	wzr, [x19]
   1a050:	mov	x1, x19
   1a054:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a058:	mov	w3, #0x1                   	// #1
   1a05c:	mov	x0, #0x62                  	// #98
   1a060:	ldr	w2, [x20, #836]
   1a064:	bl	8ae0 <syscall@plt>
   1a068:	tbz	w0, #31, 1a040 <omp_unset_nest_lock@OMP_1.0+0x20>
   1a06c:	bl	8ac0 <__errno_location@plt>
   1a070:	ldr	w0, [x0]
   1a074:	cmp	w0, #0x26
   1a078:	b.ne	1a040 <omp_unset_nest_lock@OMP_1.0+0x20>  // b.any
   1a07c:	ldr	w2, [x20, #836]
   1a080:	mov	x1, x19
   1a084:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a088:	mov	w3, #0x1                   	// #1
   1a08c:	and	w2, w2, #0xffffff7f
   1a090:	str	w2, [x20, #836]
   1a094:	ldp	x19, x20, [sp, #16]
   1a098:	mov	x0, #0x62                  	// #98
   1a09c:	ldp	x29, x30, [sp], #32
   1a0a0:	ldr	w4, [x5, #832]
   1a0a4:	and	w4, w4, #0xffffff7f
   1a0a8:	str	w4, [x5, #832]
   1a0ac:	b	8ae0 <syscall@plt>

000000000001a0b0 <omp_test_nest_lock@OMP_1.0>:
   1a0b0:	stp	x29, x30, [sp, #-48]!
   1a0b4:	mov	x29, sp
   1a0b8:	stp	x19, x20, [sp, #16]
   1a0bc:	mov	x19, x0
   1a0c0:	adrp	x20, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1a0c4:	ldr	x20, [x20, #4000]
   1a0c8:	str	x21, [sp, #32]
   1a0cc:	mrs	x21, tpidr_el0
   1a0d0:	ldr	w0, [x21, x20]
   1a0d4:	cbz	w0, 1a10c <omp_test_nest_lock@OMP_1.0+0x5c>
   1a0d8:	ldaxr	w1, [x19]
   1a0dc:	cbnz	w1, 1a0e8 <omp_test_nest_lock@OMP_1.0+0x38>
   1a0e0:	stxr	w2, w0, [x19]
   1a0e4:	cbnz	w2, 1a0d8 <omp_test_nest_lock@OMP_1.0+0x28>
   1a0e8:	cmp	w1, #0x0
   1a0ec:	b.ne	1a11c <omp_test_nest_lock@OMP_1.0+0x6c>  // b.any
   1a0f0:	mov	w1, #0x1                   	// #1
   1a0f4:	mov	w0, w1
   1a0f8:	str	w1, [x19, #4]
   1a0fc:	ldp	x19, x20, [sp, #16]
   1a100:	ldr	x21, [sp, #32]
   1a104:	ldp	x29, x30, [sp], #48
   1a108:	ret
   1a10c:	mov	x0, #0xb2                  	// #178
   1a110:	bl	8ae0 <syscall@plt>
   1a114:	str	w0, [x21, x20]
   1a118:	b	1a0d8 <omp_test_nest_lock@OMP_1.0+0x28>
   1a11c:	cmp	w0, w1
   1a120:	b.eq	1a12c <omp_test_nest_lock@OMP_1.0+0x7c>  // b.none
   1a124:	mov	w0, #0x0                   	// #0
   1a128:	b	1a0fc <omp_test_nest_lock@OMP_1.0+0x4c>
   1a12c:	ldr	w0, [x19, #4]
   1a130:	add	w0, w0, #0x1
   1a134:	str	w0, [x19, #4]
   1a138:	b	1a0fc <omp_test_nest_lock@OMP_1.0+0x4c>
   1a13c:	nop
   1a140:	stp	x29, x30, [sp, #-64]!
   1a144:	adrp	x6, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a148:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a14c:	mov	x29, sp
   1a150:	stp	x19, x20, [sp, #16]
   1a154:	mov	x19, x0
   1a158:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a15c:	add	x2, x0, #0x330
   1a160:	adrp	x4, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a164:	mov	w7, #0x1                   	// #1
   1a168:	cmp	w1, #0x1
   1a16c:	b.ne	1a320 <omp_test_nest_lock@OMP_1.0+0x270>  // b.any
   1a170:	ldr	x0, [x6, #1584]
   1a174:	ldr	x8, [x2]
   1a178:	ldr	x3, [x5, #744]
   1a17c:	ldr	x1, [x4, #1600]
   1a180:	cmp	x8, x3
   1a184:	csel	x0, x1, x0, hi  // hi = pmore
   1a188:	cbz	x0, 1a1d0 <omp_test_nest_lock@OMP_1.0+0x120>
   1a18c:	mov	x1, #0x0                   	// #0
   1a190:	b	1a1a0 <omp_test_nest_lock@OMP_1.0+0xf0>
   1a194:	add	x1, x1, #0x1
   1a198:	cmp	x1, x0
   1a19c:	b.eq	1a1d0 <omp_test_nest_lock@OMP_1.0+0x120>  // b.none
   1a1a0:	ldr	w3, [x19]
   1a1a4:	cmp	w3, #0x1
   1a1a8:	b.eq	1a194 <omp_test_nest_lock@OMP_1.0+0xe4>  // b.none
   1a1ac:	ldaxr	w1, [x19]
   1a1b0:	cbnz	w1, 1a1bc <omp_test_nest_lock@OMP_1.0+0x10c>
   1a1b4:	stxr	w0, w7, [x19]
   1a1b8:	cbnz	w0, 1a1ac <omp_test_nest_lock@OMP_1.0+0xfc>
   1a1bc:	cmp	w1, #0x0
   1a1c0:	b.ne	1a168 <omp_test_nest_lock@OMP_1.0+0xb8>  // b.any
   1a1c4:	ldp	x19, x20, [sp, #16]
   1a1c8:	ldp	x29, x30, [sp], #64
   1a1cc:	ret
   1a1d0:	mov	w20, #0xffffffff            	// #-1
   1a1d4:	ldaxr	w0, [x19]
   1a1d8:	stxr	w1, w20, [x19]
   1a1dc:	cbnz	w1, 1a1d4 <omp_test_nest_lock@OMP_1.0+0x124>
   1a1e0:	cbz	w0, 1a1c4 <omp_test_nest_lock@OMP_1.0+0x114>
   1a1e4:	stp	x21, x22, [sp, #32]
   1a1e8:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a1ec:	mov	w3, w20
   1a1f0:	ldr	w2, [x21, #832]
   1a1f4:	mov	x1, x19
   1a1f8:	add	x22, x21, #0x340
   1a1fc:	mov	x4, #0x0                   	// #0
   1a200:	mov	x0, #0x62                  	// #98
   1a204:	str	x23, [sp, #48]
   1a208:	bl	8ae0 <syscall@plt>
   1a20c:	tbnz	w0, #31, 1a2e0 <omp_test_nest_lock@OMP_1.0+0x230>
   1a210:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a214:	add	x20, x20, #0x330
   1a218:	adrp	x22, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a21c:	mov	w4, #0xffffffff            	// #-1
   1a220:	adrp	x6, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a224:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a228:	ldaxr	w0, [x19]
   1a22c:	stxr	w1, w4, [x19]
   1a230:	cbnz	w1, 1a228 <omp_test_nest_lock@OMP_1.0+0x178>
   1a234:	cbz	w0, 1a2d4 <omp_test_nest_lock@OMP_1.0+0x224>
   1a238:	ldr	x0, [x22, #1584]
   1a23c:	ldr	x3, [x20]
   1a240:	ldr	x2, [x6, #744]
   1a244:	ldr	x1, [x5, #1600]
   1a248:	cmp	x3, x2
   1a24c:	csel	x0, x1, x0, hi  // hi = pmore
   1a250:	cbz	x0, 1a270 <omp_test_nest_lock@OMP_1.0+0x1c0>
   1a254:	mov	x1, #0x0                   	// #0
   1a258:	ldr	w2, [x19]
   1a25c:	cmn	w2, #0x1
   1a260:	b.ne	1a228 <omp_test_nest_lock@OMP_1.0+0x178>  // b.any
   1a264:	add	x1, x1, #0x1
   1a268:	cmp	x1, x0
   1a26c:	b.ne	1a258 <omp_test_nest_lock@OMP_1.0+0x1a8>  // b.any
   1a270:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a274:	mov	x1, x19
   1a278:	add	x23, x21, #0x340
   1a27c:	mov	x4, #0x0                   	// #0
   1a280:	ldr	w2, [x21, #832]
   1a284:	mov	w3, #0xffffffff            	// #-1
   1a288:	mov	x0, #0x62                  	// #98
   1a28c:	bl	8ae0 <syscall@plt>
   1a290:	tbz	w0, #31, 1a21c <omp_test_nest_lock@OMP_1.0+0x16c>
   1a294:	bl	8ac0 <__errno_location@plt>
   1a298:	ldr	w0, [x0]
   1a29c:	cmp	w0, #0x26
   1a2a0:	b.ne	1a21c <omp_test_nest_lock@OMP_1.0+0x16c>  // b.any
   1a2a4:	ldr	w5, [x23, #4]
   1a2a8:	mov	x1, x19
   1a2ac:	ldr	w2, [x21, #832]
   1a2b0:	mov	x4, #0x0                   	// #0
   1a2b4:	and	w5, w5, #0xffffff7f
   1a2b8:	mov	w3, #0xffffffff            	// #-1
   1a2bc:	and	w2, w2, #0xffffff7f
   1a2c0:	mov	x0, #0x62                  	// #98
   1a2c4:	str	w2, [x21, #832]
   1a2c8:	str	w5, [x23, #4]
   1a2cc:	bl	8ae0 <syscall@plt>
   1a2d0:	b	1a21c <omp_test_nest_lock@OMP_1.0+0x16c>
   1a2d4:	ldp	x21, x22, [sp, #32]
   1a2d8:	ldr	x23, [sp, #48]
   1a2dc:	b	1a1c4 <omp_test_nest_lock@OMP_1.0+0x114>
   1a2e0:	bl	8ac0 <__errno_location@plt>
   1a2e4:	ldr	w0, [x0]
   1a2e8:	cmp	w0, #0x26
   1a2ec:	b.ne	1a210 <omp_test_nest_lock@OMP_1.0+0x160>  // b.any
   1a2f0:	ldr	w5, [x22, #4]
   1a2f4:	mov	w3, w20
   1a2f8:	ldr	w2, [x21, #832]
   1a2fc:	mov	x1, x19
   1a300:	and	w5, w5, #0xffffff7f
   1a304:	mov	x4, #0x0                   	// #0
   1a308:	and	w2, w2, #0xffffff7f
   1a30c:	mov	x0, #0x62                  	// #98
   1a310:	str	w2, [x21, #832]
   1a314:	str	w5, [x22, #4]
   1a318:	bl	8ae0 <syscall@plt>
   1a31c:	b	1a210 <omp_test_nest_lock@OMP_1.0+0x160>
   1a320:	stp	x21, x22, [sp, #32]
   1a324:	str	x23, [sp, #48]
   1a328:	b	1a210 <omp_test_nest_lock@OMP_1.0+0x160>
   1a32c:	nop
   1a330:	stp	x29, x30, [sp, #-48]!
   1a334:	mov	w3, #0x1                   	// #1
   1a338:	mov	x29, sp
   1a33c:	stp	x19, x20, [sp, #16]
   1a340:	mov	x19, x0
   1a344:	mov	x1, x19
   1a348:	str	x21, [sp, #32]
   1a34c:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a350:	add	x20, x21, #0x340
   1a354:	mov	x0, #0x62                  	// #98
   1a358:	ldr	w2, [x20, #4]
   1a35c:	bl	8ae0 <syscall@plt>
   1a360:	tbnz	w0, #31, 1a374 <omp_test_nest_lock@OMP_1.0+0x2c4>
   1a364:	ldp	x19, x20, [sp, #16]
   1a368:	ldr	x21, [sp, #32]
   1a36c:	ldp	x29, x30, [sp], #48
   1a370:	ret
   1a374:	bl	8ac0 <__errno_location@plt>
   1a378:	ldr	w0, [x0]
   1a37c:	cmp	w0, #0x26
   1a380:	b.ne	1a364 <omp_test_nest_lock@OMP_1.0+0x2b4>  // b.any
   1a384:	ldr	w4, [x21, #832]
   1a388:	mov	x1, x19
   1a38c:	ldr	w2, [x20, #4]
   1a390:	mov	w3, #0x1                   	// #1
   1a394:	and	w4, w4, #0xffffff7f
   1a398:	str	w4, [x21, #832]
   1a39c:	and	w2, w2, #0xffffff7f
   1a3a0:	str	w2, [x20, #4]
   1a3a4:	ldp	x19, x20, [sp, #16]
   1a3a8:	mov	x0, #0x62                  	// #98
   1a3ac:	ldr	x21, [sp, #32]
   1a3b0:	ldp	x29, x30, [sp], #48
   1a3b4:	b	8ae0 <syscall@plt>
   1a3b8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a3bc:	ldr	x0, [x0, #1568]
   1a3c0:	cbz	x0, 1a3d0 <omp_test_nest_lock@OMP_1.0+0x320>
   1a3c4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a3c8:	ldr	w0, [x0, #744]
   1a3cc:	ret
   1a3d0:	stp	x29, x30, [sp, #-32]!
   1a3d4:	mov	x29, sp
   1a3d8:	stp	x19, x20, [sp, #16]
   1a3dc:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a3e0:	ldr	x19, [x20, #1712]
   1a3e4:	cbz	x19, 1a404 <omp_test_nest_lock@OMP_1.0+0x354>
   1a3e8:	bl	8a90 <pthread_self@plt>
   1a3ec:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a3f0:	mov	x2, x19
   1a3f4:	ldr	x19, [x1, #1376]
   1a3f8:	mov	x1, x19
   1a3fc:	bl	8960 <pthread_getaffinity_np@plt>
   1a400:	cbz	w0, 1a418 <omp_test_nest_lock@OMP_1.0+0x368>
   1a404:	mov	w0, #0x54                  	// #84
   1a408:	bl	8a30 <sysconf@plt>
   1a40c:	ldp	x19, x20, [sp, #16]
   1a410:	ldp	x29, x30, [sp], #32
   1a414:	ret
   1a418:	ldr	x1, [x20, #1712]
   1a41c:	mov	x0, x19
   1a420:	bl	89e0 <__sched_cpucount@plt>
   1a424:	cmp	w0, #0x0
   1a428:	csinc	w0, w0, wzr, ne  // ne = any
   1a42c:	b	1a40c <omp_test_nest_lock@OMP_1.0+0x35c>
   1a430:	stp	x29, x30, [sp, #-16]!
   1a434:	mov	x29, sp
   1a438:	bl	89e0 <__sched_cpucount@plt>
   1a43c:	sxtw	x0, w0
   1a440:	ldp	x29, x30, [sp], #16
   1a444:	ret
   1a448:	stp	x29, x30, [sp, #-80]!
   1a44c:	mov	w0, #0x53                  	// #83
   1a450:	mov	x29, sp
   1a454:	stp	x19, x20, [sp, #16]
   1a458:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a45c:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a460:	stp	x21, x22, [sp, #32]
   1a464:	mov	x21, #0x80                  	// #128
   1a468:	stp	x23, x24, [sp, #48]
   1a46c:	bl	8a30 <sysconf@plt>
   1a470:	add	x0, x0, #0x3f
   1a474:	lsr	x0, x0, #6
   1a478:	lsl	x0, x0, #3
   1a47c:	str	x0, [x19, #1704]
   1a480:	bl	b220 <fprintf@plt+0x2710>
   1a484:	str	x0, [x20, #1712]
   1a488:	str	x0, [sp, #72]
   1a48c:	bl	8a90 <pthread_self@plt>
   1a490:	ldr	x2, [sp, #72]
   1a494:	mov	x22, x0
   1a498:	ldr	x1, [x19, #1704]
   1a49c:	mov	x0, x22
   1a4a0:	add	x24, x19, #0x6a8
   1a4a4:	add	x23, x20, #0x6b0
   1a4a8:	bl	8960 <pthread_getaffinity_np@plt>
   1a4ac:	cbz	w0, 1a508 <omp_test_nest_lock@OMP_1.0+0x458>
   1a4b0:	ldr	x2, [x20, #1712]
   1a4b4:	cmp	w0, #0x16
   1a4b8:	mov	x1, #0x80                  	// #128
   1a4bc:	b.ne	1a578 <omp_test_nest_lock@OMP_1.0+0x4c8>  // b.any
   1a4c0:	ldr	x3, [x19, #1704]
   1a4c4:	mov	x0, x2
   1a4c8:	cmp	x3, #0x7f
   1a4cc:	b.ls	1a560 <omp_test_nest_lock@OMP_1.0+0x4b0>  // b.plast
   1a4d0:	lsl	x1, x3, #1
   1a4d4:	str	x1, [x19, #1704]
   1a4d8:	cmp	x1, #0x3ff
   1a4dc:	b.ls	1a564 <omp_test_nest_lock@OMP_1.0+0x4b4>  // b.plast
   1a4e0:	bl	8810 <realloc@plt>
   1a4e4:	mov	x2, x0
   1a4e8:	cbz	x0, 1a5f0 <omp_test_nest_lock@OMP_1.0+0x540>
   1a4ec:	ldr	x1, [x19, #1704]
   1a4f0:	str	x0, [x20, #1712]
   1a4f4:	add	x24, x19, #0x6a8
   1a4f8:	mov	x0, x22
   1a4fc:	add	x23, x20, #0x6b0
   1a500:	bl	8960 <pthread_getaffinity_np@plt>
   1a504:	cbnz	w0, 1a4b0 <omp_test_nest_lock@OMP_1.0+0x400>
   1a508:	ldr	x1, [x20, #1712]
   1a50c:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a510:	ldr	x0, [x24]
   1a514:	bl	89e0 <__sched_cpucount@plt>
   1a518:	sxtw	x0, w0
   1a51c:	str	x0, [x21, #696]
   1a520:	cbnz	x0, 1a580 <omp_test_nest_lock@OMP_1.0+0x4d0>
   1a524:	ldr	x2, [x20, #1712]
   1a528:	mov	x1, #0x1                   	// #1
   1a52c:	mov	x0, x2
   1a530:	str	x1, [x21, #696]
   1a534:	str	xzr, [x19, #1704]
   1a538:	bl	8900 <free@plt>
   1a53c:	mov	w0, #0x54                  	// #84
   1a540:	str	xzr, [x20, #1712]
   1a544:	bl	8a30 <sysconf@plt>
   1a548:	str	x0, [x21, #696]
   1a54c:	ldp	x19, x20, [sp, #16]
   1a550:	ldp	x21, x22, [sp, #32]
   1a554:	ldp	x23, x24, [sp, #48]
   1a558:	ldp	x29, x30, [sp], #80
   1a55c:	ret
   1a560:	str	x21, [x19, #1704]
   1a564:	mov	x0, x2
   1a568:	bl	b298 <fprintf@plt+0x2788>
   1a56c:	mov	x2, x0
   1a570:	str	x0, [x20, #1712]
   1a574:	b	1a498 <omp_test_nest_lock@OMP_1.0+0x3e8>
   1a578:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a57c:	b	1a528 <omp_test_nest_lock@OMP_1.0+0x478>
   1a580:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a584:	ldr	x2, [x24]
   1a588:	str	x2, [x0, #1376]
   1a58c:	cmp	xzr, x2, lsl #3
   1a590:	lsl	x0, x2, #3
   1a594:	b.eq	1a5c4 <omp_test_nest_lock@OMP_1.0+0x514>  // b.none
   1a598:	ldr	x4, [x20, #1712]
   1a59c:	nop
   1a5a0:	mov	x3, x0
   1a5a4:	sub	x0, x0, #0x1
   1a5a8:	lsr	x1, x0, #6
   1a5ac:	cmp	x2, x0, lsr #3
   1a5b0:	b.ls	1a5c0 <omp_test_nest_lock@OMP_1.0+0x510>  // b.plast
   1a5b4:	ldr	x1, [x4, x1, lsl #3]
   1a5b8:	lsr	x1, x1, x0
   1a5bc:	tbnz	w1, #0, 1a5dc <omp_test_nest_lock@OMP_1.0+0x52c>
   1a5c0:	cbnz	x0, 1a5a0 <omp_test_nest_lock@OMP_1.0+0x4f0>
   1a5c4:	str	x0, [x19, #1704]
   1a5c8:	ldp	x19, x20, [sp, #16]
   1a5cc:	ldp	x21, x22, [sp, #32]
   1a5d0:	ldp	x23, x24, [sp, #48]
   1a5d4:	ldp	x29, x30, [sp], #80
   1a5d8:	ret
   1a5dc:	add	x0, x3, #0x3f
   1a5e0:	lsr	x0, x0, #6
   1a5e4:	lsl	x0, x0, #3
   1a5e8:	str	x0, [x19, #1704]
   1a5ec:	b	1a5c8 <omp_test_nest_lock@OMP_1.0+0x518>
   1a5f0:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a5f4:	ldr	x2, [x23]
   1a5f8:	b	1a528 <omp_test_nest_lock@OMP_1.0+0x478>
   1a5fc:	nop
   1a600:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1a604:	ldr	x2, [x2, #4016]
   1a608:	mrs	x1, tpidr_el0
   1a60c:	stp	x29, x30, [sp, #-64]!
   1a610:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a614:	add	x1, x1, x2
   1a618:	mov	x29, sp
   1a61c:	add	x0, x0, #0x2b8
   1a620:	stp	x19, x20, [sp, #16]
   1a624:	ldr	x1, [x1, #80]
   1a628:	cmp	x1, #0x0
   1a62c:	add	x1, x1, #0x90
   1a630:	csel	x0, x0, x1, eq  // eq = none
   1a634:	ldr	x20, [x0]
   1a638:	bl	1a3b8 <omp_test_nest_lock@OMP_1.0+0x308>
   1a63c:	mov	w19, w0
   1a640:	mov	w1, #0x3                   	// #3
   1a644:	cmp	w20, w19
   1a648:	add	x0, sp, #0x28
   1a64c:	csel	w19, w20, w19, ls  // ls = plast
   1a650:	bl	8680 <getloadavg@plt>
   1a654:	cmp	w0, #0x3
   1a658:	b.eq	1a678 <omp_test_nest_lock@OMP_1.0+0x5c8>  // b.none
   1a65c:	mov	w0, #0x0                   	// #0
   1a660:	cmp	w0, w19
   1a664:	sub	w0, w19, w0
   1a668:	csinc	w0, w0, wzr, cc  // cc = lo, ul, last
   1a66c:	ldp	x19, x20, [sp, #16]
   1a670:	ldp	x29, x30, [sp], #64
   1a674:	ret
   1a678:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1a67c:	ldr	d0, [sp, #56]
   1a680:	ldr	d1, [x0, #3640]
   1a684:	fadd	d0, d0, d1
   1a688:	fcvtzu	w0, d0
   1a68c:	cmp	w0, w19
   1a690:	sub	w0, w19, w0
   1a694:	csinc	w0, w0, wzr, cc  // cc = lo, ul, last
   1a698:	ldp	x19, x20, [sp, #16]
   1a69c:	ldp	x29, x30, [sp], #64
   1a6a0:	ret
   1a6a4:	nop

000000000001a6a8 <omp_get_num_procs@@OMP_1.0>:
   1a6a8:	b	1a3b8 <omp_test_nest_lock@OMP_1.0+0x308>
   1a6ac:	nop
   1a6b0:	stp	x29, x30, [sp, #-64]!
   1a6b4:	mov	w2, w1
   1a6b8:	mov	x29, sp
   1a6bc:	stp	x19, x20, [sp, #16]
   1a6c0:	mov	x19, x0
   1a6c4:	cbnz	w1, 1a750 <omp_get_num_procs@@OMP_1.0+0xa8>
   1a6c8:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a6cc:	add	x3, x3, #0x330
   1a6d0:	adrp	x7, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a6d4:	adrp	x6, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a6d8:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a6dc:	mov	w8, #0x80000000            	// #-2147483648
   1a6e0:	ldr	x1, [x7, #1584]
   1a6e4:	ldr	x4, [x3]
   1a6e8:	ldr	x2, [x6, #744]
   1a6ec:	ldr	x0, [x5, #1600]
   1a6f0:	cmp	x4, x2
   1a6f4:	csel	x1, x0, x1, hi  // hi = pmore
   1a6f8:	cbz	x1, 1a75c <omp_get_num_procs@@OMP_1.0+0xb4>
   1a6fc:	mov	x0, #0x0                   	// #0
   1a700:	b	1a710 <omp_get_num_procs@@OMP_1.0+0x68>
   1a704:	add	x0, x0, #0x1
   1a708:	cmp	x0, x1
   1a70c:	b.eq	1a75c <omp_get_num_procs@@OMP_1.0+0xb4>  // b.none
   1a710:	ldr	w2, [x19]
   1a714:	cbz	w2, 1a704 <omp_get_num_procs@@OMP_1.0+0x5c>
   1a718:	ldr	w2, [x19]
   1a71c:	cmp	w2, #0x0
   1a720:	b.lt	1a750 <omp_get_num_procs@@OMP_1.0+0xa8>  // b.tstop
   1a724:	b.eq	1a6e0 <omp_get_num_procs@@OMP_1.0+0x38>  // b.none
   1a728:	sub	w0, w2, #0x1
   1a72c:	ldaxr	w1, [x19]
   1a730:	cmp	w1, w2
   1a734:	b.ne	1a740 <omp_get_num_procs@@OMP_1.0+0x98>  // b.any
   1a738:	stxr	w4, w0, [x19]
   1a73c:	cbnz	w4, 1a72c <omp_get_num_procs@@OMP_1.0+0x84>
   1a740:	b.eq	1a7f0 <omp_get_num_procs@@OMP_1.0+0x148>  // b.none
   1a744:	mov	w2, w1
   1a748:	cbz	w1, 1a6e0 <omp_get_num_procs@@OMP_1.0+0x38>
   1a74c:	nop
   1a750:	stp	x21, x22, [sp, #32]
   1a754:	str	x23, [sp, #48]
   1a758:	b	1a7a0 <omp_get_num_procs@@OMP_1.0+0xf8>
   1a75c:	ldaxr	w0, [x19]
   1a760:	cbnz	w0, 1a76c <omp_get_num_procs@@OMP_1.0+0xc4>
   1a764:	stxr	w1, w8, [x19]
   1a768:	cbnz	w1, 1a75c <omp_get_num_procs@@OMP_1.0+0xb4>
   1a76c:	cmp	w0, #0x0
   1a770:	b.ne	1a718 <omp_get_num_procs@@OMP_1.0+0x70>  // b.any
   1a774:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a778:	mov	x1, x19
   1a77c:	mov	x4, #0x0                   	// #0
   1a780:	mov	w3, #0x80000000            	// #-2147483648
   1a784:	ldr	w2, [x20, #832]
   1a788:	mov	x0, #0x62                  	// #98
   1a78c:	stp	x21, x22, [sp, #32]
   1a790:	str	x23, [sp, #48]
   1a794:	bl	8ae0 <syscall@plt>
   1a798:	tbnz	w0, #31, 1a934 <omp_get_num_procs@@OMP_1.0+0x28c>
   1a79c:	ldr	w2, [x19]
   1a7a0:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a7a4:	add	x21, x21, #0x330
   1a7a8:	mov	w20, #0x80000000            	// #-2147483648
   1a7ac:	adrp	x22, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a7b0:	mov	w1, w2
   1a7b4:	ands	w0, w2, #0x7fffffff
   1a7b8:	b.eq	1a7fc <omp_get_num_procs@@OMP_1.0+0x154>  // b.none
   1a7bc:	sub	w0, w0, #0x1
   1a7c0:	orr	w0, w0, #0x80000000
   1a7c4:	ldaxr	w3, [x19]
   1a7c8:	cmp	w3, w2
   1a7cc:	b.ne	1a7d8 <omp_get_num_procs@@OMP_1.0+0x130>  // b.any
   1a7d0:	stxr	w4, w0, [x19]
   1a7d4:	cbnz	w4, 1a7c4 <omp_get_num_procs@@OMP_1.0+0x11c>
   1a7d8:	mov	w2, w3
   1a7dc:	b.ne	1a7b0 <omp_get_num_procs@@OMP_1.0+0x108>  // b.any
   1a7e0:	tst	w1, #0x7ffffffe
   1a7e4:	b.ne	1a8cc <omp_get_num_procs@@OMP_1.0+0x224>  // b.any
   1a7e8:	ldp	x21, x22, [sp, #32]
   1a7ec:	ldr	x23, [sp, #48]
   1a7f0:	ldp	x19, x20, [sp, #16]
   1a7f4:	ldp	x29, x30, [sp], #64
   1a7f8:	ret
   1a7fc:	ldaxr	w0, [x19]
   1a800:	cmp	w0, w2
   1a804:	b.ne	1a810 <omp_get_num_procs@@OMP_1.0+0x168>  // b.any
   1a808:	stxr	w1, w20, [x19]
   1a80c:	cbnz	w1, 1a7fc <omp_get_num_procs@@OMP_1.0+0x154>
   1a810:	mov	w2, w0
   1a814:	b.ne	1a7b0 <omp_get_num_procs@@OMP_1.0+0x108>  // b.any
   1a818:	ldr	x0, [x22, #1584]
   1a81c:	ldr	x3, [x21]
   1a820:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a824:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a828:	ldr	x2, [x2, #744]
   1a82c:	ldr	x1, [x1, #1600]
   1a830:	cmp	x3, x2
   1a834:	csel	x0, x1, x0, hi  // hi = pmore
   1a838:	cbz	x0, 1a864 <omp_get_num_procs@@OMP_1.0+0x1bc>
   1a83c:	mov	x1, #0x0                   	// #0
   1a840:	b	1a850 <omp_get_num_procs@@OMP_1.0+0x1a8>
   1a844:	add	x1, x1, #0x1
   1a848:	cmp	x1, x0
   1a84c:	b.eq	1a864 <omp_get_num_procs@@OMP_1.0+0x1bc>  // b.none
   1a850:	ldr	w2, [x19]
   1a854:	cmp	w2, w20
   1a858:	b.eq	1a844 <omp_get_num_procs@@OMP_1.0+0x19c>  // b.none
   1a85c:	ldr	w2, [x19]
   1a860:	b	1a7b0 <omp_get_num_procs@@OMP_1.0+0x108>
   1a864:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a868:	mov	x1, x19
   1a86c:	mov	x4, #0x0                   	// #0
   1a870:	mov	w3, #0x80000000            	// #-2147483648
   1a874:	ldr	w2, [x23, #832]
   1a878:	mov	x0, #0x62                  	// #98
   1a87c:	bl	8ae0 <syscall@plt>
   1a880:	tbz	w0, #31, 1a85c <omp_get_num_procs@@OMP_1.0+0x1b4>
   1a884:	bl	8ac0 <__errno_location@plt>
   1a888:	ldr	w0, [x0]
   1a88c:	cmp	w0, #0x26
   1a890:	b.ne	1a85c <omp_get_num_procs@@OMP_1.0+0x1b4>  // b.any
   1a894:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a898:	ldr	w2, [x23, #832]
   1a89c:	mov	x1, x19
   1a8a0:	mov	x4, #0x0                   	// #0
   1a8a4:	ldr	w0, [x5, #836]
   1a8a8:	and	w2, w2, #0xffffff7f
   1a8ac:	mov	w3, #0x80000000            	// #-2147483648
   1a8b0:	str	w2, [x23, #832]
   1a8b4:	and	w0, w0, #0xffffff7f
   1a8b8:	str	w0, [x5, #836]
   1a8bc:	mov	x0, #0x62                  	// #98
   1a8c0:	bl	8ae0 <syscall@plt>
   1a8c4:	ldr	w2, [x19]
   1a8c8:	b	1a7b0 <omp_get_num_procs@@OMP_1.0+0x108>
   1a8cc:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a8d0:	mov	x1, x19
   1a8d4:	mov	w3, #0x1                   	// #1
   1a8d8:	mov	x0, #0x62                  	// #98
   1a8dc:	ldr	w2, [x20, #836]
   1a8e0:	bl	8ae0 <syscall@plt>
   1a8e4:	tbz	w0, #31, 1a7e8 <omp_get_num_procs@@OMP_1.0+0x140>
   1a8e8:	bl	8ac0 <__errno_location@plt>
   1a8ec:	ldr	w0, [x0]
   1a8f0:	cmp	w0, #0x26
   1a8f4:	b.ne	1a7e8 <omp_get_num_procs@@OMP_1.0+0x140>  // b.any
   1a8f8:	ldr	w2, [x20, #836]
   1a8fc:	mov	x1, x19
   1a900:	ldp	x21, x22, [sp, #32]
   1a904:	and	w2, w2, #0xffffff7f
   1a908:	str	w2, [x20, #836]
   1a90c:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a910:	ldp	x19, x20, [sp, #16]
   1a914:	mov	w3, #0x1                   	// #1
   1a918:	ldr	x23, [sp, #48]
   1a91c:	mov	x0, #0x62                  	// #98
   1a920:	ldp	x29, x30, [sp], #64
   1a924:	ldr	w4, [x5, #832]
   1a928:	and	w4, w4, #0xffffff7f
   1a92c:	str	w4, [x5, #832]
   1a930:	b	8ae0 <syscall@plt>
   1a934:	bl	8ac0 <__errno_location@plt>
   1a938:	ldr	w0, [x0]
   1a93c:	cmp	w0, #0x26
   1a940:	b.ne	1a79c <omp_get_num_procs@@OMP_1.0+0xf4>  // b.any
   1a944:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a948:	ldr	w2, [x20, #832]
   1a94c:	mov	x1, x19
   1a950:	mov	x4, #0x0                   	// #0
   1a954:	ldr	w0, [x5, #836]
   1a958:	and	w2, w2, #0xffffff7f
   1a95c:	mov	w3, #0x80000000            	// #-2147483648
   1a960:	str	w2, [x20, #832]
   1a964:	and	w0, w0, #0xffffff7f
   1a968:	str	w0, [x5, #836]
   1a96c:	mov	x0, #0x62                  	// #98
   1a970:	bl	8ae0 <syscall@plt>
   1a974:	b	1a79c <omp_get_num_procs@@OMP_1.0+0xf4>
   1a978:	stp	x29, x30, [sp, #-32]!
   1a97c:	mov	x1, x0
   1a980:	mov	w3, #0x1                   	// #1
   1a984:	mov	x29, sp
   1a988:	stp	x19, x20, [sp, #16]
   1a98c:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a990:	mov	x19, x0
   1a994:	ldr	w2, [x20, #836]
   1a998:	mov	x0, #0x62                  	// #98
   1a99c:	bl	8ae0 <syscall@plt>
   1a9a0:	tbnz	w0, #31, 1a9b0 <omp_get_num_procs@@OMP_1.0+0x308>
   1a9a4:	ldp	x19, x20, [sp, #16]
   1a9a8:	ldp	x29, x30, [sp], #32
   1a9ac:	ret
   1a9b0:	bl	8ac0 <__errno_location@plt>
   1a9b4:	ldr	w0, [x0]
   1a9b8:	cmp	w0, #0x26
   1a9bc:	b.ne	1a9a4 <omp_get_num_procs@@OMP_1.0+0x2fc>  // b.any
   1a9c0:	ldr	w2, [x20, #836]
   1a9c4:	mov	x1, x19
   1a9c8:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1a9cc:	mov	w3, #0x1                   	// #1
   1a9d0:	and	w2, w2, #0xffffff7f
   1a9d4:	str	w2, [x20, #836]
   1a9d8:	ldp	x19, x20, [sp, #16]
   1a9dc:	mov	x0, #0x62                  	// #98
   1a9e0:	ldp	x29, x30, [sp], #32
   1a9e4:	ldr	w4, [x5, #832]
   1a9e8:	and	w4, w4, #0xffffff7f
   1a9ec:	str	w4, [x5, #832]
   1a9f0:	b	8ae0 <syscall@plt>
   1a9f4:	nop
   1a9f8:	stp	x29, x30, [sp, #-80]!
   1a9fc:	mov	x29, sp
   1aa00:	stp	x19, x20, [sp, #16]
   1aa04:	mov	w19, w1
   1aa08:	stp	x23, x24, [sp, #48]
   1aa0c:	add	x23, x0, #0x4
   1aa10:	tbnz	w19, #0, 1ab00 <omp_get_num_procs@@OMP_1.0+0x458>
   1aa14:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1aa18:	add	x20, x20, #0x340
   1aa1c:	stp	x21, x22, [sp, #32]
   1aa20:	adrp	x22, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1aa24:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1aa28:	add	x22, x22, #0x330
   1aa2c:	add	x21, x21, #0x344
   1aa30:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1aa34:	str	x25, [sp, #64]
   1aa38:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1aa3c:	nop
   1aa40:	ldr	x0, [x24, #1584]
   1aa44:	ldr	x4, [x22]
   1aa48:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1aa4c:	ldr	x3, [x25, #744]
   1aa50:	ldr	x2, [x2, #1600]
   1aa54:	cmp	x4, x3
   1aa58:	csel	x0, x2, x0, hi  // hi = pmore
   1aa5c:	cbz	x0, 1aaa4 <omp_get_num_procs@@OMP_1.0+0x3fc>
   1aa60:	mov	x2, #0x0                   	// #0
   1aa64:	b	1aa74 <omp_get_num_procs@@OMP_1.0+0x3cc>
   1aa68:	add	x2, x2, #0x1
   1aa6c:	cmp	x2, x0
   1aa70:	b.eq	1aaa4 <omp_get_num_procs@@OMP_1.0+0x3fc>  // b.none
   1aa74:	ldr	w3, [x23]
   1aa78:	cmp	w19, w3
   1aa7c:	b.eq	1aa68 <omp_get_num_procs@@OMP_1.0+0x3c0>  // b.none
   1aa80:	ldar	w0, [x23]
   1aa84:	cmp	w0, w19
   1aa88:	b.eq	1aa40 <omp_get_num_procs@@OMP_1.0+0x398>  // b.none
   1aa8c:	ldp	x21, x22, [sp, #32]
   1aa90:	ldr	x25, [sp, #64]
   1aa94:	ldp	x19, x20, [sp, #16]
   1aa98:	ldp	x23, x24, [sp, #48]
   1aa9c:	ldp	x29, x30, [sp], #80
   1aaa0:	ret
   1aaa4:	ldr	w2, [x20]
   1aaa8:	mov	w3, w19
   1aaac:	mov	x1, x23
   1aab0:	mov	x4, #0x0                   	// #0
   1aab4:	mov	x0, #0x62                  	// #98
   1aab8:	bl	8ae0 <syscall@plt>
   1aabc:	tbz	w0, #31, 1aa80 <omp_get_num_procs@@OMP_1.0+0x3d8>
   1aac0:	bl	8ac0 <__errno_location@plt>
   1aac4:	ldr	w0, [x0]
   1aac8:	cmp	w0, #0x26
   1aacc:	b.ne	1aa80 <omp_get_num_procs@@OMP_1.0+0x3d8>  // b.any
   1aad0:	ldr	w5, [x21]
   1aad4:	mov	w3, w19
   1aad8:	ldr	w2, [x20]
   1aadc:	mov	x1, x23
   1aae0:	and	w5, w5, #0xffffff7f
   1aae4:	mov	x4, #0x0                   	// #0
   1aae8:	and	w2, w2, #0xffffff7f
   1aaec:	mov	x0, #0x62                  	// #98
   1aaf0:	str	w2, [x20]
   1aaf4:	str	w5, [x21]
   1aaf8:	bl	8ae0 <syscall@plt>
   1aafc:	b	1aa80 <omp_get_num_procs@@OMP_1.0+0x3d8>
   1ab00:	ldp	w2, w1, [x0]
   1ab04:	str	w2, [x0, #64]
   1ab08:	add	w1, w1, #0x8
   1ab0c:	stlr	w1, [x23]
   1ab10:	mov	x1, x23
   1ab14:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1ab18:	mov	w3, #0x7fffffff            	// #2147483647
   1ab1c:	mov	x0, #0x62                  	// #98
   1ab20:	ldr	w2, [x19, #836]
   1ab24:	bl	8ae0 <syscall@plt>
   1ab28:	tbz	w0, #31, 1aa94 <omp_get_num_procs@@OMP_1.0+0x3ec>
   1ab2c:	bl	8ac0 <__errno_location@plt>
   1ab30:	ldr	w0, [x0]
   1ab34:	cmp	w0, #0x26
   1ab38:	b.ne	1aa94 <omp_get_num_procs@@OMP_1.0+0x3ec>  // b.any
   1ab3c:	ldr	w2, [x19, #836]
   1ab40:	mov	x1, x23
   1ab44:	ldp	x23, x24, [sp, #48]
   1ab48:	and	w2, w2, #0xffffff7f
   1ab4c:	str	w2, [x19, #836]
   1ab50:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1ab54:	ldp	x19, x20, [sp, #16]
   1ab58:	mov	w3, #0x7fffffff            	// #2147483647
   1ab5c:	ldp	x29, x30, [sp], #80
   1ab60:	mov	x0, #0x62                  	// #98
   1ab64:	ldr	w4, [x5, #832]
   1ab68:	and	w4, w4, #0xffffff7f
   1ab6c:	str	w4, [x5, #832]
   1ab70:	b	8ae0 <syscall@plt>
   1ab74:	nop
   1ab78:	add	x1, x0, #0x4
   1ab7c:	ldar	w1, [x1]
   1ab80:	and	w1, w1, #0xfffffffc
   1ab84:	add	x2, x0, #0x40
   1ab88:	ldaxr	w3, [x2]
   1ab8c:	sub	w3, w3, #0x1
   1ab90:	stlxr	w4, w3, [x2]
   1ab94:	cbnz	w4, 1ab88 <omp_get_num_procs@@OMP_1.0+0x4e0>
   1ab98:	cmp	w3, #0x0
   1ab9c:	orr	w2, w1, #0x1
   1aba0:	csel	w1, w2, w1, eq  // eq = none
   1aba4:	b	1a9f8 <omp_get_num_procs@@OMP_1.0+0x350>
   1aba8:	add	x1, x0, #0x4
   1abac:	ldar	w1, [x1]
   1abb0:	add	x2, x0, #0x40
   1abb4:	ldaxr	w3, [x2]
   1abb8:	sub	w3, w3, #0x1
   1abbc:	stlxr	w4, w3, [x2]
   1abc0:	cbnz	w4, 1abb4 <omp_get_num_procs@@OMP_1.0+0x50c>
   1abc4:	cbnz	w3, 1abd4 <omp_get_num_procs@@OMP_1.0+0x52c>
   1abc8:	and	w1, w1, #0xfffffffc
   1abcc:	orr	w1, w1, #0x1
   1abd0:	b	1a9f8 <omp_get_num_procs@@OMP_1.0+0x350>
   1abd4:	ret
   1abd8:	stp	x29, x30, [sp, #-48]!
   1abdc:	cmp	w1, #0x0
   1abe0:	mov	x29, sp
   1abe4:	str	x21, [sp, #32]
   1abe8:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1abec:	stp	x19, x20, [sp, #16]
   1abf0:	add	x20, x0, #0x4
   1abf4:	ldr	w2, [x21, #836]
   1abf8:	mov	w0, #0x7fffffff            	// #2147483647
   1abfc:	csel	w19, w1, w0, ne  // ne = any
   1ac00:	mov	w3, w19
   1ac04:	mov	x1, x20
   1ac08:	mov	x0, #0x62                  	// #98
   1ac0c:	bl	8ae0 <syscall@plt>
   1ac10:	tbnz	w0, #31, 1ac24 <omp_get_num_procs@@OMP_1.0+0x57c>
   1ac14:	ldp	x19, x20, [sp, #16]
   1ac18:	ldr	x21, [sp, #32]
   1ac1c:	ldp	x29, x30, [sp], #48
   1ac20:	ret
   1ac24:	bl	8ac0 <__errno_location@plt>
   1ac28:	ldr	w0, [x0]
   1ac2c:	cmp	w0, #0x26
   1ac30:	b.ne	1ac14 <omp_get_num_procs@@OMP_1.0+0x56c>  // b.any
   1ac34:	ldr	w2, [x21, #836]
   1ac38:	mov	w3, w19
   1ac3c:	mov	x1, x20
   1ac40:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1ac44:	and	w2, w2, #0xffffff7f
   1ac48:	str	w2, [x21, #836]
   1ac4c:	ldp	x19, x20, [sp, #16]
   1ac50:	mov	x0, #0x62                  	// #98
   1ac54:	ldr	x21, [sp, #32]
   1ac58:	ldp	x29, x30, [sp], #48
   1ac5c:	ldr	w4, [x5, #832]
   1ac60:	and	w4, w4, #0xffffff7f
   1ac64:	str	w4, [x5, #832]
   1ac68:	b	8ae0 <syscall@plt>
   1ac6c:	nop
   1ac70:	stp	x29, x30, [sp, #-96]!
   1ac74:	mov	x29, sp
   1ac78:	stp	x19, x20, [sp, #16]
   1ac7c:	mov	w19, w1
   1ac80:	str	x27, [sp, #80]
   1ac84:	add	x27, x0, #0x4
   1ac88:	tbnz	w19, #0, 1ada0 <omp_get_num_procs@@OMP_1.0+0x6f8>
   1ac8c:	stp	x21, x22, [sp, #32]
   1ac90:	stp	x23, x24, [sp, #48]
   1ac94:	stp	x25, x26, [sp, #64]
   1ac98:	and	w22, w19, #0xfffffffb
   1ac9c:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1aca0:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1aca4:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1aca8:	add	w26, w22, #0x8
   1acac:	add	x23, x23, #0x330
   1acb0:	add	x20, x20, #0x340
   1acb4:	add	x21, x21, #0x344
   1acb8:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1acbc:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1acc0:	ldr	x0, [x25, #1584]
   1acc4:	ldr	x4, [x23]
   1acc8:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1accc:	ldr	x3, [x24, #744]
   1acd0:	ldr	x2, [x2, #1600]
   1acd4:	cmp	x4, x3
   1acd8:	csel	x0, x2, x0, hi  // hi = pmore
   1acdc:	cbz	x0, 1ad34 <omp_get_num_procs@@OMP_1.0+0x68c>
   1ace0:	mov	x2, #0x0                   	// #0
   1ace4:	b	1acf4 <omp_get_num_procs@@OMP_1.0+0x64c>
   1ace8:	add	x2, x2, #0x1
   1acec:	cmp	x2, x0
   1acf0:	b.eq	1ad34 <omp_get_num_procs@@OMP_1.0+0x68c>  // b.none
   1acf4:	ldr	w3, [x27]
   1acf8:	cmp	w19, w3
   1acfc:	b.eq	1ace8 <omp_get_num_procs@@OMP_1.0+0x640>  // b.none
   1ad00:	ldar	w0, [x27]
   1ad04:	tbnz	w0, #0, 1ad90 <omp_get_num_procs@@OMP_1.0+0x6e8>
   1ad08:	and	w2, w0, #0x2
   1ad0c:	cmp	w0, w26
   1ad10:	orr	w19, w19, w2
   1ad14:	b.ne	1acc0 <omp_get_num_procs@@OMP_1.0+0x618>  // b.any
   1ad18:	ldp	x21, x22, [sp, #32]
   1ad1c:	ldp	x23, x24, [sp, #48]
   1ad20:	ldp	x25, x26, [sp, #64]
   1ad24:	ldp	x19, x20, [sp, #16]
   1ad28:	ldr	x27, [sp, #80]
   1ad2c:	ldp	x29, x30, [sp], #96
   1ad30:	ret
   1ad34:	ldr	w2, [x20]
   1ad38:	mov	w3, w19
   1ad3c:	mov	x1, x27
   1ad40:	mov	x4, #0x0                   	// #0
   1ad44:	mov	x0, #0x62                  	// #98
   1ad48:	bl	8ae0 <syscall@plt>
   1ad4c:	tbz	w0, #31, 1ad00 <omp_get_num_procs@@OMP_1.0+0x658>
   1ad50:	bl	8ac0 <__errno_location@plt>
   1ad54:	ldr	w0, [x0]
   1ad58:	cmp	w0, #0x26
   1ad5c:	b.ne	1ad00 <omp_get_num_procs@@OMP_1.0+0x658>  // b.any
   1ad60:	ldr	w5, [x21]
   1ad64:	mov	w3, w19
   1ad68:	ldr	w2, [x20]
   1ad6c:	mov	x1, x27
   1ad70:	and	w5, w5, #0xffffff7f
   1ad74:	mov	x4, #0x0                   	// #0
   1ad78:	and	w2, w2, #0xffffff7f
   1ad7c:	mov	x0, #0x62                  	// #98
   1ad80:	str	w2, [x20]
   1ad84:	str	w5, [x21]
   1ad88:	bl	8ae0 <syscall@plt>
   1ad8c:	b	1ad00 <omp_get_num_procs@@OMP_1.0+0x658>
   1ad90:	mov	w0, w22
   1ad94:	bl	13a20 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9c0>
   1ad98:	ldar	w0, [x27]
   1ad9c:	b	1ad08 <omp_get_num_procs@@OMP_1.0+0x660>
   1ada0:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1ada4:	ldr	x2, [x2, #4016]
   1ada8:	mrs	x1, tpidr_el0
   1adac:	ldr	w3, [x0]
   1adb0:	add	x1, x1, x2
   1adb4:	str	w3, [x0, #64]
   1adb8:	ldr	x0, [x1, #16]
   1adbc:	ldr	w1, [x0, #1320]
   1adc0:	str	wzr, [x0, #1332]
   1adc4:	cbnz	w1, 1ae38 <omp_get_num_procs@@OMP_1.0+0x790>
   1adc8:	and	w0, w19, #0xfffffffb
   1adcc:	add	w0, w0, #0x7
   1add0:	stlr	w0, [x27]
   1add4:	mov	x1, x27
   1add8:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1addc:	mov	w3, #0x7fffffff            	// #2147483647
   1ade0:	mov	x0, #0x62                  	// #98
   1ade4:	ldr	w2, [x19, #836]
   1ade8:	bl	8ae0 <syscall@plt>
   1adec:	tbz	w0, #31, 1ad24 <omp_get_num_procs@@OMP_1.0+0x67c>
   1adf0:	bl	8ac0 <__errno_location@plt>
   1adf4:	ldr	w0, [x0]
   1adf8:	cmp	w0, #0x26
   1adfc:	b.ne	1ad24 <omp_get_num_procs@@OMP_1.0+0x67c>  // b.any
   1ae00:	ldr	w2, [x19, #836]
   1ae04:	mov	x1, x27
   1ae08:	ldr	x27, [sp, #80]
   1ae0c:	and	w2, w2, #0xffffff7f
   1ae10:	str	w2, [x19, #836]
   1ae14:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1ae18:	ldp	x19, x20, [sp, #16]
   1ae1c:	mov	w3, #0x7fffffff            	// #2147483647
   1ae20:	ldp	x29, x30, [sp], #96
   1ae24:	mov	x0, #0x62                  	// #98
   1ae28:	ldr	w4, [x5, #832]
   1ae2c:	and	w4, w4, #0xffffff7f
   1ae30:	str	w4, [x5, #832]
   1ae34:	b	8ae0 <syscall@plt>
   1ae38:	mov	w0, w19
   1ae3c:	and	w19, w19, #0xfffffffe
   1ae40:	stp	x21, x22, [sp, #32]
   1ae44:	stp	x23, x24, [sp, #48]
   1ae48:	stp	x25, x26, [sp, #64]
   1ae4c:	bl	13a20 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9c0>
   1ae50:	b	1ac98 <omp_get_num_procs@@OMP_1.0+0x5f0>
   1ae54:	nop
   1ae58:	add	x1, x0, #0x4
   1ae5c:	ldar	w1, [x1]
   1ae60:	and	w1, w1, #0xfffffffc
   1ae64:	add	x2, x0, #0x40
   1ae68:	ldaxr	w3, [x2]
   1ae6c:	sub	w3, w3, #0x1
   1ae70:	stlxr	w4, w3, [x2]
   1ae74:	cbnz	w4, 1ae68 <omp_get_num_procs@@OMP_1.0+0x7c0>
   1ae78:	cmp	w3, #0x0
   1ae7c:	orr	w2, w1, #0x1
   1ae80:	csel	w1, w2, w1, eq  // eq = none
   1ae84:	b	1ac70 <omp_get_num_procs@@OMP_1.0+0x5c8>
   1ae88:	add	x1, x0, #0x4
   1ae8c:	ldar	w1, [x1]
   1ae90:	and	w1, w1, #0xfffffffc
   1ae94:	add	x2, x0, #0x44
   1ae98:	ldaxr	w3, [x2]
   1ae9c:	sub	w3, w3, #0x1
   1aea0:	stlxr	w4, w3, [x2]
   1aea4:	cbnz	w4, 1ae98 <omp_get_num_procs@@OMP_1.0+0x7f0>
   1aea8:	cbnz	w3, 1aeb8 <omp_get_num_procs@@OMP_1.0+0x810>
   1aeac:	ldr	w2, [x0]
   1aeb0:	orr	w1, w1, #0x1
   1aeb4:	str	w2, [x0, #68]
   1aeb8:	b	1ac70 <omp_get_num_procs@@OMP_1.0+0x5c8>
   1aebc:	nop
   1aec0:	stp	x29, x30, [sp, #-80]!
   1aec4:	mov	x29, sp
   1aec8:	stp	x19, x20, [sp, #16]
   1aecc:	mov	x19, x0
   1aed0:	stp	x25, x26, [sp, #64]
   1aed4:	mov	w25, w1
   1aed8:	tbnz	w25, #0, 1b014 <omp_get_num_procs@@OMP_1.0+0x96c>
   1aedc:	tbnz	w25, #2, 1aff0 <omp_get_num_procs@@OMP_1.0+0x948>
   1aee0:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1aee4:	add	x19, x19, #0x4
   1aee8:	add	x26, x26, #0x330
   1aeec:	mov	w20, w25
   1aef0:	stp	x21, x22, [sp, #32]
   1aef4:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1aef8:	adrp	x22, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1aefc:	add	x21, x21, #0x340
   1af00:	add	x22, x22, #0x344
   1af04:	stp	x23, x24, [sp, #48]
   1af08:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1af0c:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1af10:	ldr	x0, [x24, #1584]
   1af14:	ldr	x4, [x26]
   1af18:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1af1c:	ldr	x3, [x23, #744]
   1af20:	ldr	x2, [x2, #1600]
   1af24:	cmp	x4, x3
   1af28:	csel	x0, x2, x0, hi  // hi = pmore
   1af2c:	cbz	x0, 1af8c <omp_get_num_procs@@OMP_1.0+0x8e4>
   1af30:	mov	x2, #0x0                   	// #0
   1af34:	b	1af44 <omp_get_num_procs@@OMP_1.0+0x89c>
   1af38:	add	x2, x2, #0x1
   1af3c:	cmp	x2, x0
   1af40:	b.eq	1af8c <omp_get_num_procs@@OMP_1.0+0x8e4>  // b.none
   1af44:	ldr	w3, [x19]
   1af48:	cmp	w20, w3
   1af4c:	b.eq	1af38 <omp_get_num_procs@@OMP_1.0+0x890>  // b.none
   1af50:	ldar	w0, [x19]
   1af54:	tbnz	w0, #2, 1afe8 <omp_get_num_procs@@OMP_1.0+0x940>
   1af58:	tbnz	w0, #0, 1b004 <omp_get_num_procs@@OMP_1.0+0x95c>
   1af5c:	and	w3, w0, #0x2
   1af60:	add	w2, w25, #0x8
   1af64:	orr	w20, w20, w3
   1af68:	cmp	w2, w0
   1af6c:	b.ne	1af10 <omp_get_num_procs@@OMP_1.0+0x868>  // b.any
   1af70:	ldp	x21, x22, [sp, #32]
   1af74:	ldp	x23, x24, [sp, #48]
   1af78:	mov	w0, #0x0                   	// #0
   1af7c:	ldp	x19, x20, [sp, #16]
   1af80:	ldp	x25, x26, [sp, #64]
   1af84:	ldp	x29, x30, [sp], #80
   1af88:	ret
   1af8c:	ldr	w2, [x21]
   1af90:	mov	w3, w20
   1af94:	mov	x1, x19
   1af98:	mov	x4, #0x0                   	// #0
   1af9c:	mov	x0, #0x62                  	// #98
   1afa0:	bl	8ae0 <syscall@plt>
   1afa4:	tbz	w0, #31, 1af50 <omp_get_num_procs@@OMP_1.0+0x8a8>
   1afa8:	bl	8ac0 <__errno_location@plt>
   1afac:	ldr	w0, [x0]
   1afb0:	cmp	w0, #0x26
   1afb4:	b.ne	1af50 <omp_get_num_procs@@OMP_1.0+0x8a8>  // b.any
   1afb8:	ldr	w5, [x22]
   1afbc:	mov	w3, w20
   1afc0:	ldr	w2, [x21]
   1afc4:	mov	x1, x19
   1afc8:	and	w5, w5, #0xffffff7f
   1afcc:	mov	x4, #0x0                   	// #0
   1afd0:	and	w2, w2, #0xffffff7f
   1afd4:	mov	x0, #0x62                  	// #98
   1afd8:	str	w2, [x21]
   1afdc:	str	w5, [x22]
   1afe0:	bl	8ae0 <syscall@plt>
   1afe4:	b	1af50 <omp_get_num_procs@@OMP_1.0+0x8a8>
   1afe8:	ldp	x21, x22, [sp, #32]
   1afec:	ldp	x23, x24, [sp, #48]
   1aff0:	mov	w0, #0x1                   	// #1
   1aff4:	ldp	x19, x20, [sp, #16]
   1aff8:	ldp	x25, x26, [sp, #64]
   1affc:	ldp	x29, x30, [sp], #80
   1b000:	ret
   1b004:	mov	w0, w25
   1b008:	bl	13a20 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9c0>
   1b00c:	ldar	w0, [x19]
   1b010:	b	1af5c <omp_get_num_procs@@OMP_1.0+0x8b4>
   1b014:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1b018:	ldr	x1, [x1, #4016]
   1b01c:	mrs	x0, tpidr_el0
   1b020:	ldr	w2, [x19]
   1b024:	add	x0, x0, x1
   1b028:	ldr	x0, [x0, #16]
   1b02c:	ldr	w1, [x0, #1320]
   1b030:	str	w2, [x19, #64]
   1b034:	str	wzr, [x0, #1332]
   1b038:	cbnz	w1, 1b0a8 <omp_get_num_procs@@OMP_1.0+0xa00>
   1b03c:	add	x19, x19, #0x4
   1b040:	add	w25, w25, #0x7
   1b044:	stlr	w25, [x19]
   1b048:	mov	x1, x19
   1b04c:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1b050:	mov	w3, #0x7fffffff            	// #2147483647
   1b054:	mov	x0, #0x62                  	// #98
   1b058:	ldr	w2, [x20, #836]
   1b05c:	bl	8ae0 <syscall@plt>
   1b060:	tbz	w0, #31, 1af78 <omp_get_num_procs@@OMP_1.0+0x8d0>
   1b064:	bl	8ac0 <__errno_location@plt>
   1b068:	ldr	w0, [x0]
   1b06c:	cmp	w0, #0x26
   1b070:	b.ne	1af78 <omp_get_num_procs@@OMP_1.0+0x8d0>  // b.any
   1b074:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1b078:	ldr	w2, [x20, #836]
   1b07c:	mov	x1, x19
   1b080:	mov	w3, #0x7fffffff            	// #2147483647
   1b084:	ldr	w4, [x5, #832]
   1b088:	and	w2, w2, #0xffffff7f
   1b08c:	mov	x0, #0x62                  	// #98
   1b090:	str	w2, [x20, #836]
   1b094:	and	w4, w4, #0xffffff7f
   1b098:	str	w4, [x5, #832]
   1b09c:	bl	8ae0 <syscall@plt>
   1b0a0:	mov	w0, #0x0                   	// #0
   1b0a4:	b	1af7c <omp_get_num_procs@@OMP_1.0+0x8d4>
   1b0a8:	mov	w0, w25
   1b0ac:	and	w25, w25, #0xfffffffe
   1b0b0:	bl	13a20 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9c0>
   1b0b4:	b	1aedc <omp_get_num_procs@@OMP_1.0+0x834>
   1b0b8:	add	x1, x0, #0x4
   1b0bc:	ldar	w1, [x1]
   1b0c0:	and	w1, w1, #0xfffffffc
   1b0c4:	add	x2, x0, #0x40
   1b0c8:	ldaxr	w3, [x2]
   1b0cc:	sub	w3, w3, #0x1
   1b0d0:	stlxr	w4, w3, [x2]
   1b0d4:	cbnz	w4, 1b0c8 <omp_get_num_procs@@OMP_1.0+0xa20>
   1b0d8:	cmp	w3, #0x0
   1b0dc:	orr	w2, w1, #0x1
   1b0e0:	csel	w1, w2, w1, eq  // eq = none
   1b0e4:	b	1aec0 <omp_get_num_procs@@OMP_1.0+0x818>
   1b0e8:	stp	x29, x30, [sp, #-48]!
   1b0ec:	mov	w2, #0x1                   	// #1
   1b0f0:	mov	x29, sp
   1b0f4:	stp	x19, x20, [sp, #16]
   1b0f8:	mov	x19, x0
   1b0fc:	add	x0, x0, #0x500
   1b100:	ldaxr	w1, [x0]
   1b104:	cbnz	w1, 1b110 <omp_get_num_procs@@OMP_1.0+0xa68>
   1b108:	stxr	w3, w2, [x0]
   1b10c:	cbnz	w3, 1b100 <omp_get_num_procs@@OMP_1.0+0xa58>
   1b110:	cmp	w1, #0x0
   1b114:	b.ne	1b1cc <omp_get_num_procs@@OMP_1.0+0xb24>  // b.any
   1b118:	ldr	w1, [x19, #132]
   1b11c:	tbnz	w1, #2, 1b164 <omp_get_num_procs@@OMP_1.0+0xabc>
   1b120:	orr	w1, w1, #0x4
   1b124:	str	w1, [x19, #132]
   1b128:	ldxr	w1, [x0]
   1b12c:	stlxr	w2, wzr, [x0]
   1b130:	cbnz	w2, 1b128 <omp_get_num_procs@@OMP_1.0+0xa80>
   1b134:	tbnz	w1, #31, 1b180 <omp_get_num_procs@@OMP_1.0+0xad8>
   1b138:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1b13c:	add	x19, x19, #0x84
   1b140:	mov	x1, x19
   1b144:	mov	w3, #0x7fffffff            	// #2147483647
   1b148:	ldr	w2, [x20, #836]
   1b14c:	mov	x0, #0x62                  	// #98
   1b150:	bl	8ae0 <syscall@plt>
   1b154:	tbnz	w0, #31, 1b188 <omp_get_num_procs@@OMP_1.0+0xae0>
   1b158:	ldp	x19, x20, [sp, #16]
   1b15c:	ldp	x29, x30, [sp], #48
   1b160:	ret
   1b164:	ldxr	w1, [x0]
   1b168:	stlxr	w2, wzr, [x0]
   1b16c:	cbnz	w2, 1b164 <omp_get_num_procs@@OMP_1.0+0xabc>
   1b170:	tbz	w1, #31, 1b158 <omp_get_num_procs@@OMP_1.0+0xab0>
   1b174:	ldp	x19, x20, [sp, #16]
   1b178:	ldp	x29, x30, [sp], #48
   1b17c:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1b180:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1b184:	b	1b138 <omp_get_num_procs@@OMP_1.0+0xa90>
   1b188:	bl	8ac0 <__errno_location@plt>
   1b18c:	ldr	w0, [x0]
   1b190:	cmp	w0, #0x26
   1b194:	b.ne	1b158 <omp_get_num_procs@@OMP_1.0+0xab0>  // b.any
   1b198:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1b19c:	ldr	w2, [x20, #836]
   1b1a0:	mov	x1, x19
   1b1a4:	mov	w3, #0x7fffffff            	// #2147483647
   1b1a8:	ldr	w4, [x5, #832]
   1b1ac:	and	w2, w2, #0xffffff7f
   1b1b0:	str	w2, [x20, #836]
   1b1b4:	mov	x0, #0x62                  	// #98
   1b1b8:	and	w4, w4, #0xffffff7f
   1b1bc:	str	w4, [x5, #832]
   1b1c0:	ldp	x19, x20, [sp, #16]
   1b1c4:	ldp	x29, x30, [sp], #48
   1b1c8:	b	8ae0 <syscall@plt>
   1b1cc:	str	x0, [sp, #40]
   1b1d0:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   1b1d4:	ldr	x0, [sp, #40]
   1b1d8:	b	1b118 <omp_get_num_procs@@OMP_1.0+0xa70>
   1b1dc:	nop
   1b1e0:	stp	x29, x30, [sp, #-80]!
   1b1e4:	mov	x1, #0x2                   	// #2
   1b1e8:	mov	x29, sp
   1b1ec:	stp	x19, x20, [sp, #16]
   1b1f0:	mov	x20, x0
   1b1f4:	stp	x21, x22, [sp, #32]
   1b1f8:	stp	x23, x24, [sp, #48]
   1b1fc:	str	x25, [sp, #64]
   1b200:	ldxr	x0, [x20]
   1b204:	cmp	x0, #0x1
   1b208:	b.ne	1b214 <omp_get_num_procs@@OMP_1.0+0xb6c>  // b.any
   1b20c:	stxr	w2, x1, [x20]
   1b210:	cbnz	w2, 1b200 <omp_get_num_procs@@OMP_1.0+0xb58>
   1b214:	mov	x19, x20
   1b218:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1b21c:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1b220:	adrp	x22, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1b224:	add	x23, x23, #0x330
   1b228:	add	x21, x21, #0x340
   1b22c:	add	x22, x22, #0x344
   1b230:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1b234:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1b238:	ldr	x2, [x25, #1584]
   1b23c:	ldr	x0, [x23]
   1b240:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1b244:	ldr	x3, [x24, #744]
   1b248:	ldr	x1, [x1, #1600]
   1b24c:	cmp	x0, x3
   1b250:	csel	x2, x1, x2, hi  // hi = pmore
   1b254:	cbz	x2, 1b2a0 <omp_get_num_procs@@OMP_1.0+0xbf8>
   1b258:	mov	x3, #0x0                   	// #0
   1b25c:	b	1b26c <omp_get_num_procs@@OMP_1.0+0xbc4>
   1b260:	add	x3, x3, #0x1
   1b264:	cmp	x3, x2
   1b268:	b.eq	1b2a0 <omp_get_num_procs@@OMP_1.0+0xbf8>  // b.none
   1b26c:	ldr	w0, [x19]
   1b270:	cmp	w0, #0x2
   1b274:	b.eq	1b260 <omp_get_num_procs@@OMP_1.0+0xbb8>  // b.none
   1b278:	ldr	w1, [x19]
   1b27c:	cmp	w1, #0x2
   1b280:	b.eq	1b238 <omp_get_num_procs@@OMP_1.0+0xb90>  // b.none
   1b284:	ldar	x0, [x20]
   1b288:	ldp	x19, x20, [sp, #16]
   1b28c:	ldp	x21, x22, [sp, #32]
   1b290:	ldp	x23, x24, [sp, #48]
   1b294:	ldr	x25, [sp, #64]
   1b298:	ldp	x29, x30, [sp], #80
   1b29c:	ret
   1b2a0:	ldr	w2, [x21]
   1b2a4:	mov	x1, x19
   1b2a8:	mov	x4, #0x0                   	// #0
   1b2ac:	mov	w3, #0x2                   	// #2
   1b2b0:	mov	x0, #0x62                  	// #98
   1b2b4:	bl	8ae0 <syscall@plt>
   1b2b8:	tbz	w0, #31, 1b278 <omp_get_num_procs@@OMP_1.0+0xbd0>
   1b2bc:	bl	8ac0 <__errno_location@plt>
   1b2c0:	ldr	w0, [x0]
   1b2c4:	cmp	w0, #0x26
   1b2c8:	b.ne	1b278 <omp_get_num_procs@@OMP_1.0+0xbd0>  // b.any
   1b2cc:	ldr	w5, [x22]
   1b2d0:	mov	x1, x19
   1b2d4:	ldr	w2, [x21]
   1b2d8:	mov	x4, #0x0                   	// #0
   1b2dc:	and	w5, w5, #0xffffff7f
   1b2e0:	mov	w3, #0x2                   	// #2
   1b2e4:	and	w2, w2, #0xffffff7f
   1b2e8:	mov	x0, #0x62                  	// #98
   1b2ec:	str	w2, [x21]
   1b2f0:	str	w5, [x22]
   1b2f4:	bl	8ae0 <syscall@plt>
   1b2f8:	b	1b278 <omp_get_num_procs@@OMP_1.0+0xbd0>
   1b2fc:	nop
   1b300:	stp	x29, x30, [sp, #-32]!
   1b304:	mov	x29, sp
   1b308:	stp	x19, x20, [sp, #16]
   1b30c:	mov	x19, x0
   1b310:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1b314:	mov	x1, x19
   1b318:	mov	w3, #0x7fffffff            	// #2147483647
   1b31c:	mov	x0, #0x62                  	// #98
   1b320:	ldr	w2, [x20, #836]
   1b324:	bl	8ae0 <syscall@plt>
   1b328:	tbnz	w0, #31, 1b338 <omp_get_num_procs@@OMP_1.0+0xc90>
   1b32c:	ldp	x19, x20, [sp, #16]
   1b330:	ldp	x29, x30, [sp], #32
   1b334:	ret
   1b338:	bl	8ac0 <__errno_location@plt>
   1b33c:	ldr	w0, [x0]
   1b340:	cmp	w0, #0x26
   1b344:	b.ne	1b32c <omp_get_num_procs@@OMP_1.0+0xc84>  // b.any
   1b348:	ldr	w2, [x20, #836]
   1b34c:	mov	x1, x19
   1b350:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1b354:	mov	w3, #0x7fffffff            	// #2147483647
   1b358:	and	w2, w2, #0xffffff7f
   1b35c:	str	w2, [x20, #836]
   1b360:	ldp	x19, x20, [sp, #16]
   1b364:	mov	x0, #0x62                  	// #98
   1b368:	ldp	x29, x30, [sp], #32
   1b36c:	ldr	w4, [x5, #832]
   1b370:	and	w4, w4, #0xffffff7f
   1b374:	str	w4, [x5, #832]
   1b378:	b	8ae0 <syscall@plt>
   1b37c:	nop

000000000001b380 <omp_get_wtime@@OMP_2.0>:
   1b380:	stp	x29, x30, [sp, #-48]!
   1b384:	mov	w0, #0x1                   	// #1
   1b388:	mov	x29, sp
   1b38c:	str	x19, [sp, #16]
   1b390:	add	x19, sp, #0x20
   1b394:	mov	x1, x19
   1b398:	bl	86c0 <clock_gettime@plt>
   1b39c:	tbnz	w0, #31, 1b3cc <omp_get_wtime@@OMP_2.0+0x4c>
   1b3a0:	ldp	d2, d0, [sp, #32]
   1b3a4:	mov	x0, #0xcd6500000000        	// #225833675390976
   1b3a8:	movk	x0, #0x41cd, lsl #48
   1b3ac:	fmov	d3, x0
   1b3b0:	ldr	x19, [sp, #16]
   1b3b4:	scvtf	d1, d0
   1b3b8:	scvtf	d2, d2
   1b3bc:	ldp	x29, x30, [sp], #48
   1b3c0:	fdiv	d0, d1, d3
   1b3c4:	fadd	d0, d0, d2
   1b3c8:	ret
   1b3cc:	mov	x1, x19
   1b3d0:	mov	w0, #0x0                   	// #0
   1b3d4:	bl	86c0 <clock_gettime@plt>
   1b3d8:	b	1b3a0 <omp_get_wtime@@OMP_2.0+0x20>
   1b3dc:	nop

000000000001b3e0 <omp_get_wtick@@OMP_2.0>:
   1b3e0:	stp	x29, x30, [sp, #-48]!
   1b3e4:	mov	w0, #0x1                   	// #1
   1b3e8:	mov	x29, sp
   1b3ec:	str	x19, [sp, #16]
   1b3f0:	add	x19, sp, #0x20
   1b3f4:	mov	x1, x19
   1b3f8:	bl	88f0 <clock_getres@plt>
   1b3fc:	tbnz	w0, #31, 1b42c <omp_get_wtick@@OMP_2.0+0x4c>
   1b400:	ldp	d2, d0, [sp, #32]
   1b404:	mov	x0, #0xcd6500000000        	// #225833675390976
   1b408:	movk	x0, #0x41cd, lsl #48
   1b40c:	fmov	d3, x0
   1b410:	ldr	x19, [sp, #16]
   1b414:	scvtf	d1, d0
   1b418:	scvtf	d2, d2
   1b41c:	ldp	x29, x30, [sp], #48
   1b420:	fdiv	d0, d1, d3
   1b424:	fadd	d0, d0, d2
   1b428:	ret
   1b42c:	mov	x1, x19
   1b430:	mov	w0, #0x0                   	// #0
   1b434:	bl	88f0 <clock_getres@plt>
   1b438:	b	1b400 <omp_get_wtick@@OMP_2.0+0x20>
   1b43c:	nop

000000000001b440 <omp_init_lock_@@OMP_3.0>:
   1b440:	b	19cc0 <omp_init_lock@@OMP_3.0>
   1b444:	nop

000000000001b448 <omp_init_nest_lock_@@OMP_3.0>:
   1b448:	stp	x29, x30, [sp, #-32]!
   1b44c:	mov	x29, sp
   1b450:	str	x19, [sp, #16]
   1b454:	mov	x19, x0
   1b458:	mov	x0, #0x10                  	// #16
   1b45c:	bl	8760 <malloc@plt>
   1b460:	str	x0, [x19]
   1b464:	ldr	x19, [sp, #16]
   1b468:	ldp	x29, x30, [sp], #32
   1b46c:	b	19d38 <omp_init_nest_lock@@OMP_3.0>

000000000001b470 <omp_destroy_lock_@@OMP_3.0>:
   1b470:	b	19cc8 <omp_destroy_lock@OMP_1.0>
   1b474:	nop

000000000001b478 <omp_destroy_nest_lock_@@OMP_3.0>:
   1b478:	stp	x29, x30, [sp, #-32]!
   1b47c:	mov	x29, sp
   1b480:	str	x19, [sp, #16]
   1b484:	mov	x19, x0
   1b488:	ldr	x0, [x0]
   1b48c:	bl	19d40 <omp_destroy_nest_lock@@OMP_3.0>
   1b490:	ldr	x0, [x19]
   1b494:	bl	8900 <free@plt>
   1b498:	str	xzr, [x19]
   1b49c:	ldr	x19, [sp, #16]
   1b4a0:	ldp	x29, x30, [sp], #32
   1b4a4:	ret

000000000001b4a8 <omp_set_lock_@@OMP_3.0>:
   1b4a8:	b	19cd0 <omp_set_lock@@OMP_3.0>
   1b4ac:	nop

000000000001b4b0 <omp_set_nest_lock_@@OMP_3.0>:
   1b4b0:	ldr	x0, [x0]
   1b4b4:	b	19d48 <omp_set_nest_lock@@OMP_3.0>

000000000001b4b8 <omp_unset_lock_@@OMP_3.0>:
   1b4b8:	b	19cf8 <omp_unset_lock@@OMP_3.0>
   1b4bc:	nop

000000000001b4c0 <omp_unset_nest_lock_@@OMP_3.0>:
   1b4c0:	ldr	x0, [x0]
   1b4c4:	b	19dd0 <omp_unset_nest_lock@@OMP_3.0>

000000000001b4c8 <omp_test_lock_@@OMP_3.0>:
   1b4c8:	b	19d18 <omp_test_lock@OMP_1.0>
   1b4cc:	nop

000000000001b4d0 <omp_test_nest_lock_@@OMP_3.0>:
   1b4d0:	ldr	x0, [x0]
   1b4d4:	b	19e00 <omp_test_nest_lock@@OMP_3.0>

000000000001b4d8 <omp_init_lock_@OMP_1.0>:
   1b4d8:	b	19cc0 <omp_init_lock@@OMP_3.0>
   1b4dc:	nop

000000000001b4e0 <omp_init_nest_lock_@OMP_1.0>:
   1b4e0:	b	19ea8 <omp_init_nest_lock@OMP_1.0>
   1b4e4:	nop

000000000001b4e8 <omp_destroy_lock_@OMP_1.0>:
   1b4e8:	b	19cc8 <omp_destroy_lock@OMP_1.0>
   1b4ec:	nop

000000000001b4f0 <omp_destroy_nest_lock_@OMP_1.0>:
   1b4f0:	b	19eb0 <omp_destroy_nest_lock@OMP_1.0>
   1b4f4:	nop

000000000001b4f8 <omp_set_lock_@OMP_1.0>:
   1b4f8:	b	19cd0 <omp_set_lock@@OMP_3.0>
   1b4fc:	nop

000000000001b500 <omp_set_nest_lock_@OMP_1.0>:
   1b500:	b	19eb8 <omp_set_nest_lock@OMP_1.0>
   1b504:	nop

000000000001b508 <omp_unset_lock_@OMP_1.0>:
   1b508:	b	19cf8 <omp_unset_lock@@OMP_3.0>
   1b50c:	nop

000000000001b510 <omp_unset_nest_lock_@OMP_1.0>:
   1b510:	b	1a020 <omp_unset_nest_lock@OMP_1.0>
   1b514:	nop

000000000001b518 <omp_test_lock_@OMP_1.0>:
   1b518:	b	19d18 <omp_test_lock@OMP_1.0>
   1b51c:	nop

000000000001b520 <omp_test_nest_lock_@OMP_1.0>:
   1b520:	b	1a0b0 <omp_test_nest_lock@OMP_1.0>
   1b524:	nop

000000000001b528 <omp_set_dynamic_@@OMP_1.0>:
   1b528:	ldr	w0, [x0]
   1b52c:	b	b718 <omp_set_dynamic@@OMP_1.0>

000000000001b530 <omp_set_dynamic_8_@@OMP_1.0>:
   1b530:	ldr	x0, [x0]
   1b534:	cmp	x0, #0x0
   1b538:	cset	w0, ne  // ne = any
   1b53c:	b	b718 <omp_set_dynamic@@OMP_1.0>

000000000001b540 <omp_set_nested_@@OMP_1.0>:
   1b540:	ldr	w0, [x0]
   1b544:	b	b7b0 <omp_set_nested@@OMP_1.0>

000000000001b548 <omp_set_nested_8_@@OMP_1.0>:
   1b548:	ldr	x0, [x0]
   1b54c:	cmp	x0, #0x0
   1b550:	cset	w0, ne  // ne = any
   1b554:	b	b7b0 <omp_set_nested@@OMP_1.0>

000000000001b558 <omp_set_num_threads_@@OMP_1.0>:
   1b558:	ldr	w0, [x0]
   1b55c:	b	b6b0 <omp_set_num_threads@@OMP_1.0>

000000000001b560 <omp_set_num_threads_8_@@OMP_1.0>:
   1b560:	mov	x1, x0
   1b564:	mov	x2, #0xffffffff80000001    	// #-2147483647
   1b568:	mov	w0, #0x80000000            	// #-2147483648
   1b56c:	ldr	x1, [x1]
   1b570:	cmp	x1, x2
   1b574:	b.lt	1b584 <omp_set_num_threads_8_@@OMP_1.0+0x24>  // b.tstop
   1b578:	mov	x0, #0x7fffffff            	// #2147483647
   1b57c:	cmp	x1, x0
   1b580:	csel	x0, x1, x0, le
   1b584:	b	b6b0 <omp_set_num_threads@@OMP_1.0>

000000000001b588 <omp_get_dynamic_@@OMP_1.0>:
   1b588:	b	b780 <omp_get_dynamic@@OMP_1.0>
   1b58c:	nop

000000000001b590 <omp_get_nested_@@OMP_1.0>:
   1b590:	b	b818 <omp_get_nested@@OMP_1.0>
   1b594:	nop

000000000001b598 <omp_in_parallel_@@OMP_1.0>:
   1b598:	b	111b8 <omp_in_parallel@@OMP_1.0>
   1b59c:	nop

000000000001b5a0 <omp_get_max_threads_@@OMP_1.0>:
   1b5a0:	b	b920 <omp_get_max_threads@@OMP_1.0>
   1b5a4:	nop

000000000001b5a8 <omp_get_num_procs_@@OMP_1.0>:
   1b5a8:	b	1a6a8 <omp_get_num_procs@@OMP_1.0>
   1b5ac:	nop

000000000001b5b0 <omp_get_num_threads_@@OMP_1.0>:
   1b5b0:	b	11178 <omp_get_num_threads@@OMP_1.0>
   1b5b4:	nop

000000000001b5b8 <omp_get_thread_num_@@OMP_1.0>:
   1b5b8:	b	111a0 <omp_get_thread_num@@OMP_1.0>
   1b5bc:	nop

000000000001b5c0 <omp_get_wtick_@@OMP_2.0>:
   1b5c0:	b	1b3e0 <omp_get_wtick@@OMP_2.0>
   1b5c4:	nop

000000000001b5c8 <omp_get_wtime_@@OMP_2.0>:
   1b5c8:	b	1b380 <omp_get_wtime@@OMP_2.0>
   1b5cc:	nop

000000000001b5d0 <omp_set_schedule_@@OMP_3.0>:
   1b5d0:	ldr	w0, [x0]
   1b5d4:	ldr	w1, [x1]
   1b5d8:	b	b848 <omp_set_schedule@@OMP_3.0>
   1b5dc:	nop

000000000001b5e0 <omp_set_schedule_8_@@OMP_3.0>:
   1b5e0:	mov	x2, x1
   1b5e4:	mov	x3, #0xffffffff80000001    	// #-2147483647
   1b5e8:	ldr	w0, [x0]
   1b5ec:	mov	w1, #0x80000000            	// #-2147483648
   1b5f0:	ldr	x2, [x2]
   1b5f4:	cmp	x2, x3
   1b5f8:	b.lt	1b608 <omp_set_schedule_8_@@OMP_3.0+0x28>  // b.tstop
   1b5fc:	mov	x1, #0x7fffffff            	// #2147483647
   1b600:	cmp	x2, x1
   1b604:	csel	x1, x2, x1, le
   1b608:	b	b848 <omp_set_schedule@@OMP_3.0>
   1b60c:	nop

000000000001b610 <omp_get_schedule_@@OMP_3.0>:
   1b610:	stp	x29, x30, [sp, #-48]!
   1b614:	mov	x29, sp
   1b618:	stp	x19, x20, [sp, #16]
   1b61c:	mov	x20, x0
   1b620:	mov	x19, x1
   1b624:	add	x0, sp, #0x28
   1b628:	add	x1, sp, #0x2c
   1b62c:	bl	b8e0 <omp_get_schedule@@OMP_3.0>
   1b630:	ldp	w0, w1, [sp, #40]
   1b634:	and	w0, w0, #0x7fffffff
   1b638:	str	w0, [x20]
   1b63c:	str	w1, [x19]
   1b640:	ldp	x19, x20, [sp, #16]
   1b644:	ldp	x29, x30, [sp], #48
   1b648:	ret
   1b64c:	nop

000000000001b650 <omp_get_schedule_8_@@OMP_3.0>:
   1b650:	stp	x29, x30, [sp, #-48]!
   1b654:	mov	x29, sp
   1b658:	stp	x19, x20, [sp, #16]
   1b65c:	mov	x20, x0
   1b660:	mov	x19, x1
   1b664:	add	x0, sp, #0x28
   1b668:	add	x1, sp, #0x2c
   1b66c:	bl	b8e0 <omp_get_schedule@@OMP_3.0>
   1b670:	ldr	w0, [sp, #40]
   1b674:	ldrsw	x1, [sp, #44]
   1b678:	and	w0, w0, #0x7fffffff
   1b67c:	str	w0, [x20]
   1b680:	str	x1, [x19]
   1b684:	ldp	x19, x20, [sp, #16]
   1b688:	ldp	x29, x30, [sp], #48
   1b68c:	ret

000000000001b690 <omp_get_thread_limit_@@OMP_3.0>:
   1b690:	b	b950 <omp_get_thread_limit@@OMP_3.0>
   1b694:	nop

000000000001b698 <omp_set_max_active_levels_@@OMP_3.0>:
   1b698:	ldr	w0, [x0]
   1b69c:	b	b990 <omp_set_max_active_levels@@OMP_3.0>

000000000001b6a0 <omp_set_max_active_levels_8_@@OMP_3.0>:
   1b6a0:	mov	x1, x0
   1b6a4:	mov	x2, #0xffffffff80000001    	// #-2147483647
   1b6a8:	mov	w0, #0x80000000            	// #-2147483648
   1b6ac:	ldr	x1, [x1]
   1b6b0:	cmp	x1, x2
   1b6b4:	b.lt	1b6c4 <omp_set_max_active_levels_8_@@OMP_3.0+0x24>  // b.tstop
   1b6b8:	mov	x0, #0x7fffffff            	// #2147483647
   1b6bc:	cmp	x1, x0
   1b6c0:	csel	x0, x1, x0, le
   1b6c4:	b	b990 <omp_set_max_active_levels@@OMP_3.0>

000000000001b6c8 <omp_get_max_active_levels_@@OMP_3.0>:
   1b6c8:	b	b9a8 <omp_get_max_active_levels@@OMP_3.0>
   1b6cc:	nop

000000000001b6d0 <omp_get_level_@@OMP_3.0>:
   1b6d0:	b	111d8 <omp_get_level@@OMP_3.0>
   1b6d4:	nop

000000000001b6d8 <omp_get_ancestor_thread_num_@@OMP_3.0>:
   1b6d8:	ldr	w0, [x0]
   1b6dc:	b	111f0 <omp_get_ancestor_thread_num@@OMP_3.0>

000000000001b6e0 <omp_get_ancestor_thread_num_8_@@OMP_3.0>:
   1b6e0:	ldr	x0, [x0]
   1b6e4:	mov	x1, #0xffffffff80000001    	// #-2147483647
   1b6e8:	cmp	x0, x1
   1b6ec:	b.lt	1b700 <omp_get_ancestor_thread_num_8_@@OMP_3.0+0x20>  // b.tstop
   1b6f0:	mov	x1, #0x7fffffff            	// #2147483647
   1b6f4:	cmp	x0, x1
   1b6f8:	csel	x0, x0, x1, le
   1b6fc:	b	111f0 <omp_get_ancestor_thread_num@@OMP_3.0>
   1b700:	mov	w0, #0x80000000            	// #-2147483648
   1b704:	b	111f0 <omp_get_ancestor_thread_num@@OMP_3.0>

000000000001b708 <omp_get_team_size_@@OMP_3.0>:
   1b708:	ldr	w0, [x0]
   1b70c:	b	11240 <omp_get_team_size@@OMP_3.0>

000000000001b710 <omp_get_team_size_8_@@OMP_3.0>:
   1b710:	ldr	x0, [x0]
   1b714:	mov	x1, #0xffffffff80000001    	// #-2147483647
   1b718:	cmp	x0, x1
   1b71c:	b.lt	1b730 <omp_get_team_size_8_@@OMP_3.0+0x20>  // b.tstop
   1b720:	mov	x1, #0x7fffffff            	// #2147483647
   1b724:	cmp	x0, x1
   1b728:	csel	x0, x0, x1, le
   1b72c:	b	11240 <omp_get_team_size@@OMP_3.0>
   1b730:	mov	w0, #0x80000000            	// #-2147483648
   1b734:	b	11240 <omp_get_team_size@@OMP_3.0>

000000000001b738 <omp_get_active_level_@@OMP_3.0>:
   1b738:	b	112b0 <omp_get_active_level@@OMP_3.0>
   1b73c:	nop

000000000001b740 <omp_in_final_@@OMP_3.1>:
   1b740:	b	18028 <omp_in_final@@OMP_3.1>
   1b744:	nop

000000000001b748 <omp_get_cancellation_@@OMP_4.0>:
   1b748:	b	b9b8 <omp_get_cancellation@@OMP_4.0>
   1b74c:	nop

000000000001b750 <omp_get_proc_bind_@@OMP_4.0>:
   1b750:	b	b9d8 <omp_get_proc_bind@@OMP_4.0>
   1b754:	nop

000000000001b758 <omp_get_num_places_@@OMP_4.5>:
   1b758:	b	ba10 <omp_get_num_places@@OMP_4.5>
   1b75c:	nop

000000000001b760 <omp_get_place_num_procs_@@OMP_4.5>:
   1b760:	ldr	w0, [x0]
   1b764:	b	1c8a8 <omp_get_place_num_procs@@OMP_4.5>

000000000001b768 <omp_get_place_num_procs_8_@@OMP_4.5>:
   1b768:	ldr	x0, [x0]
   1b76c:	mov	x1, #0xffffffff80000001    	// #-2147483647
   1b770:	cmp	x0, x1
   1b774:	b.lt	1b788 <omp_get_place_num_procs_8_@@OMP_4.5+0x20>  // b.tstop
   1b778:	mov	x1, #0x7fffffff            	// #2147483647
   1b77c:	cmp	x0, x1
   1b780:	csel	x0, x0, x1, le
   1b784:	b	1c8a8 <omp_get_place_num_procs@@OMP_4.5>
   1b788:	mov	w0, #0x80000000            	// #-2147483648
   1b78c:	b	1c8a8 <omp_get_place_num_procs@@OMP_4.5>

000000000001b790 <omp_get_place_proc_ids_@@OMP_4.5>:
   1b790:	ldr	w0, [x0]
   1b794:	b	1c900 <omp_get_place_proc_ids@@OMP_4.5>

000000000001b798 <omp_get_place_proc_ids_8_@@OMP_4.5>:
   1b798:	mov	x2, x0
   1b79c:	mov	x3, #0xffffffff80000001    	// #-2147483647
   1b7a0:	mov	w0, #0x80000000            	// #-2147483648
   1b7a4:	ldr	x2, [x2]
   1b7a8:	cmp	x2, x3
   1b7ac:	b.lt	1b7bc <omp_get_place_proc_ids_8_@@OMP_4.5+0x24>  // b.tstop
   1b7b0:	mov	x0, #0x7fffffff            	// #2147483647
   1b7b4:	cmp	x2, x0
   1b7b8:	csel	x0, x2, x0, le
   1b7bc:	b	1c978 <omp_get_place_proc_ids@@OMP_4.5+0x78>

000000000001b7c0 <omp_get_place_num_@@OMP_4.5>:
   1b7c0:	b	ba20 <omp_get_place_num@@OMP_4.5>
   1b7c4:	nop

000000000001b7c8 <omp_get_partition_num_places_@@OMP_4.5>:
   1b7c8:	b	ba80 <omp_get_partition_num_places@@OMP_4.5>
   1b7cc:	nop

000000000001b7d0 <omp_get_partition_place_nums_@@OMP_4.5>:
   1b7d0:	b	bae8 <omp_get_partition_place_nums@@OMP_4.5>
   1b7d4:	nop

000000000001b7d8 <omp_get_partition_place_nums_8_@@OMP_4.5>:
   1b7d8:	stp	x29, x30, [sp, #-48]!
   1b7dc:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1b7e0:	mov	x29, sp
   1b7e4:	stp	x19, x20, [sp, #16]
   1b7e8:	mov	x19, x0
   1b7ec:	ldr	x0, [x1, #1568]
   1b7f0:	cbz	x0, 1b848 <omp_get_partition_place_nums_8_@@OMP_4.5+0x70>
   1b7f4:	str	x21, [sp, #32]
   1b7f8:	mrs	x20, tpidr_el0
   1b7fc:	adrp	x21, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1b800:	ldr	x21, [x21, #4016]
   1b804:	add	x0, x20, x21
   1b808:	ldr	w0, [x0, #92]
   1b80c:	cbz	w0, 1b854 <omp_get_partition_place_nums_8_@@OMP_4.5+0x7c>
   1b810:	add	x20, x20, x21
   1b814:	ldr	w1, [x20, #56]
   1b818:	cbz	w1, 1b844 <omp_get_partition_place_nums_8_@@OMP_4.5+0x6c>
   1b81c:	ldr	w2, [x20, #52]
   1b820:	sub	w3, w1, #0x1
   1b824:	add	x1, x2, #0x1
   1b828:	sub	x4, x19, x2, lsl #3
   1b82c:	add	x0, x3, x1
   1b830:	str	x2, [x4, x2, lsl #3]
   1b834:	cmp	x1, x0
   1b838:	mov	x2, x1
   1b83c:	add	x1, x1, #0x1
   1b840:	b.ne	1b830 <omp_get_partition_place_nums_8_@@OMP_4.5+0x58>  // b.any
   1b844:	ldr	x21, [sp, #32]
   1b848:	ldp	x19, x20, [sp, #16]
   1b84c:	ldp	x29, x30, [sp], #48
   1b850:	ret
   1b854:	bl	1c6e0 <omp_pause_resource_all_@@OMP_5.0+0xa38>
   1b858:	b	1b810 <omp_get_partition_place_nums_8_@@OMP_4.5+0x38>
   1b85c:	nop

000000000001b860 <omp_set_default_device_@@OMP_4.0>:
   1b860:	ldr	w0, [x0]
   1b864:	b	bb68 <omp_set_default_device@@OMP_4.0>

000000000001b868 <omp_set_default_device_8_@@OMP_4.0>:
   1b868:	mov	x1, x0
   1b86c:	mov	x2, #0xffffffff80000001    	// #-2147483647
   1b870:	mov	w0, #0x80000000            	// #-2147483648
   1b874:	ldr	x1, [x1]
   1b878:	cmp	x1, x2
   1b87c:	b.lt	1b88c <omp_set_default_device_8_@@OMP_4.0+0x24>  // b.tstop
   1b880:	mov	x0, #0x7fffffff            	// #2147483647
   1b884:	cmp	x1, x0
   1b888:	csel	x0, x1, x0, le
   1b88c:	b	bb68 <omp_set_default_device@@OMP_4.0>

000000000001b890 <omp_get_default_device_@@OMP_4.0>:
   1b890:	b	bbc8 <omp_get_default_device@@OMP_4.0>
   1b894:	nop

000000000001b898 <omp_get_num_devices_@@OMP_4.0>:
   1b898:	b	bbf8 <omp_get_num_devices@@OMP_4.0>
   1b89c:	nop

000000000001b8a0 <omp_get_num_teams_@@OMP_4.0>:
   1b8a0:	b	272f8 <omp_get_num_teams@@OMP_4.0>
   1b8a4:	nop

000000000001b8a8 <omp_get_team_num_@@OMP_4.0>:
   1b8a8:	b	27308 <omp_get_team_num@@OMP_4.0>
   1b8ac:	nop

000000000001b8b0 <omp_is_initial_device_@@OMP_4.0>:
   1b8b0:	b	bc00 <omp_is_initial_device@@OMP_4.0>
   1b8b4:	nop

000000000001b8b8 <omp_get_initial_device_@@OMP_4.5>:
   1b8b8:	b	ba08 <omp_get_initial_device@@OMP_4.5>
   1b8bc:	nop

000000000001b8c0 <omp_get_max_task_priority_@@OMP_4.5>:
   1b8c0:	b	b9c8 <omp_get_max_task_priority@@OMP_4.5>
   1b8c4:	nop

000000000001b8c8 <omp_set_affinity_format_@@OMP_5.0>:
   1b8c8:	b	26718 <acc_set_cuda_stream@@OACC_2.0+0x580>
   1b8cc:	nop

000000000001b8d0 <omp_get_affinity_format_@@OMP_5.0>:
   1b8d0:	stp	x29, x30, [sp, #-48]!
   1b8d4:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1b8d8:	mov	x29, sp
   1b8dc:	stp	x21, x22, [sp, #32]
   1b8e0:	mov	x21, x0
   1b8e4:	ldr	x22, [x2, #824]
   1b8e8:	stp	x19, x20, [sp, #16]
   1b8ec:	mov	x20, x1
   1b8f0:	mov	x0, x22
   1b8f4:	bl	85f0 <strlen@plt>
   1b8f8:	mov	x19, x0
   1b8fc:	cbz	x20, 1b928 <omp_get_affinity_format_@@OMP_5.0+0x58>
   1b900:	cmp	x0, x20
   1b904:	b.cs	1b93c <omp_get_affinity_format_@@OMP_5.0+0x6c>  // b.hs, b.nlast
   1b908:	mov	x2, x0
   1b90c:	mov	x1, x22
   1b910:	mov	x0, x21
   1b914:	bl	85c0 <memcpy@plt>
   1b918:	sub	x2, x20, x19
   1b91c:	add	x0, x21, x19
   1b920:	mov	w1, #0x20                  	// #32
   1b924:	bl	87c0 <memset@plt>
   1b928:	mov	w0, w19
   1b92c:	ldp	x19, x20, [sp, #16]
   1b930:	ldp	x21, x22, [sp, #32]
   1b934:	ldp	x29, x30, [sp], #48
   1b938:	ret
   1b93c:	mov	x2, x20
   1b940:	mov	x1, x22
   1b944:	mov	x0, x21
   1b948:	bl	85c0 <memcpy@plt>
   1b94c:	mov	w0, w19
   1b950:	ldp	x19, x20, [sp, #16]
   1b954:	ldp	x21, x22, [sp, #32]
   1b958:	ldp	x29, x30, [sp], #48
   1b95c:	ret

000000000001b960 <omp_display_affinity_@@OMP_5.0>:
   1b960:	sub	sp, sp, #0x360
   1b964:	stp	x29, x30, [sp]
   1b968:	mov	x29, sp
   1b96c:	stp	x19, x20, [sp, #16]
   1b970:	mov	x19, x1
   1b974:	stp	x21, x22, [sp, #32]
   1b978:	mov	x22, x0
   1b97c:	stp	x23, x24, [sp, #48]
   1b980:	stp	x25, x26, [sp, #64]
   1b984:	stp	x27, x28, [sp, #80]
   1b988:	bl	8a90 <pthread_self@plt>
   1b98c:	mov	x20, x0
   1b990:	cbz	x19, 1ba34 <omp_display_affinity_@@OMP_5.0+0xd4>
   1b994:	add	x23, sp, #0x60
   1b998:	cmp	x19, #0xff
   1b99c:	mov	w25, #0x0                   	// #0
   1b9a0:	b.hi	1bb18 <omp_display_affinity_@@OMP_5.0+0x1b8>  // b.pmore
   1b9a4:	adrp	x21, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1b9a8:	ldr	x21, [x21, #4016]
   1b9ac:	mov	x1, x22
   1b9b0:	mov	x2, x19
   1b9b4:	mrs	x24, tpidr_el0
   1b9b8:	mov	x0, x23
   1b9bc:	bl	85c0 <memcpy@plt>
   1b9c0:	add	x1, x24, x21
   1b9c4:	strb	wzr, [x23, x19]
   1b9c8:	add	x22, sp, #0x160
   1b9cc:	add	x4, x1, #0x10
   1b9d0:	mov	x0, x22
   1b9d4:	mov	x3, x20
   1b9d8:	ldr	w5, [x1, #92]
   1b9dc:	mov	x2, x23
   1b9e0:	mov	x1, #0x200                 	// #512
   1b9e4:	bl	26b48 <omp_get_affinity_format@@OMP_5.0+0x348>
   1b9e8:	mov	x19, x0
   1b9ec:	cmp	x0, #0x1ff
   1b9f0:	b.hi	1bb00 <omp_display_affinity_@@OMP_5.0+0x1a0>  // b.pmore
   1b9f4:	mov	w2, #0xa                   	// #10
   1b9f8:	add	x1, x0, #0x1
   1b9fc:	mov	x0, x22
   1ba00:	strb	w2, [x22, x19]
   1ba04:	bl	26700 <acc_set_cuda_stream@@OACC_2.0+0x568>
   1ba08:	cbz	w25, 1ba14 <omp_display_affinity_@@OMP_5.0+0xb4>
   1ba0c:	mov	x0, x23
   1ba10:	bl	8900 <free@plt>
   1ba14:	ldp	x29, x30, [sp]
   1ba18:	ldp	x19, x20, [sp, #16]
   1ba1c:	ldp	x21, x22, [sp, #32]
   1ba20:	ldp	x23, x24, [sp, #48]
   1ba24:	ldp	x25, x26, [sp, #64]
   1ba28:	ldp	x27, x28, [sp, #80]
   1ba2c:	add	sp, sp, #0x360
   1ba30:	ret
   1ba34:	adrp	x21, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1ba38:	ldr	x21, [x21, #4016]
   1ba3c:	mrs	x24, tpidr_el0
   1ba40:	adrp	x27, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1ba44:	add	x22, sp, #0x160
   1ba48:	add	x1, x24, x21
   1ba4c:	mov	x0, x22
   1ba50:	ldr	x2, [x27, #824]
   1ba54:	add	x4, x1, #0x10
   1ba58:	ldr	w5, [x1, #92]
   1ba5c:	mov	x3, x20
   1ba60:	mov	x1, #0x200                 	// #512
   1ba64:	bl	26b48 <omp_get_affinity_format@@OMP_5.0+0x348>
   1ba68:	mov	x19, x0
   1ba6c:	cmp	x0, #0x1ff
   1ba70:	b.ls	1bacc <omp_display_affinity_@@OMP_5.0+0x16c>  // b.plast
   1ba74:	add	x28, x19, #0x1
   1ba78:	mov	w25, #0x0                   	// #0
   1ba7c:	mov	x0, x28
   1ba80:	bl	b220 <fprintf@plt+0x2710>
   1ba84:	ldr	x2, [x27, #824]
   1ba88:	mov	x26, x0
   1ba8c:	mov	x23, #0x0                   	// #0
   1ba90:	add	x21, x24, x21
   1ba94:	mov	x3, x20
   1ba98:	add	x4, x21, #0x10
   1ba9c:	mov	x0, x22
   1baa0:	mov	x1, #0x200                 	// #512
   1baa4:	ldr	w5, [x21, #92]
   1baa8:	bl	26b48 <omp_get_affinity_format@@OMP_5.0+0x348>
   1baac:	mov	x1, x28
   1bab0:	mov	w0, #0xa                   	// #10
   1bab4:	strb	w0, [x26, x19]
   1bab8:	mov	x0, x26
   1babc:	bl	26700 <acc_set_cuda_stream@@OACC_2.0+0x568>
   1bac0:	mov	x0, x26
   1bac4:	bl	8900 <free@plt>
   1bac8:	b	1ba08 <omp_display_affinity_@@OMP_5.0+0xa8>
   1bacc:	mov	w2, #0xa                   	// #10
   1bad0:	add	x1, x0, #0x1
   1bad4:	mov	x0, x22
   1bad8:	strb	w2, [x22, x19]
   1badc:	bl	26700 <acc_set_cuda_stream@@OACC_2.0+0x568>
   1bae0:	ldp	x29, x30, [sp]
   1bae4:	ldp	x19, x20, [sp, #16]
   1bae8:	ldp	x21, x22, [sp, #32]
   1baec:	ldp	x23, x24, [sp, #48]
   1baf0:	ldp	x25, x26, [sp, #64]
   1baf4:	ldp	x27, x28, [sp, #80]
   1baf8:	add	sp, sp, #0x360
   1bafc:	ret
   1bb00:	add	x28, x0, #0x1
   1bb04:	mov	x0, x28
   1bb08:	bl	b220 <fprintf@plt+0x2710>
   1bb0c:	mov	x2, x23
   1bb10:	mov	x26, x0
   1bb14:	b	1ba90 <omp_display_affinity_@@OMP_5.0+0x130>
   1bb18:	add	x0, x19, #0x1
   1bb1c:	bl	b220 <fprintf@plt+0x2710>
   1bb20:	cmp	x0, #0x0
   1bb24:	mov	x23, x0
   1bb28:	cset	w25, ne  // ne = any
   1bb2c:	b	1b9a4 <omp_display_affinity_@@OMP_5.0+0x44>

000000000001bb30 <omp_capture_affinity_@@OMP_5.0>:
   1bb30:	stp	x29, x30, [sp, #-320]!
   1bb34:	mov	x29, sp
   1bb38:	stp	x19, x20, [sp, #16]
   1bb3c:	mov	x20, x2
   1bb40:	mov	x19, x3
   1bb44:	stp	x21, x22, [sp, #32]
   1bb48:	mov	x21, x0
   1bb4c:	str	x23, [sp, #48]
   1bb50:	mov	x23, x1
   1bb54:	bl	8a90 <pthread_self@plt>
   1bb58:	mov	x22, x0
   1bb5c:	cbz	x19, 1bbe4 <omp_capture_affinity_@@OMP_5.0+0xb4>
   1bb60:	cmp	x19, #0xff
   1bb64:	b.hi	1bc38 <omp_capture_affinity_@@OMP_5.0+0x108>  // b.pmore
   1bb68:	add	x6, sp, #0x40
   1bb6c:	mov	x2, x19
   1bb70:	mov	x1, x23
   1bb74:	mov	x0, x6
   1bb78:	bl	85c0 <memcpy@plt>
   1bb7c:	mov	x6, x0
   1bb80:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1bb84:	ldr	x0, [x0, #4016]
   1bb88:	mrs	x5, tpidr_el0
   1bb8c:	mov	x2, x6
   1bb90:	mov	x3, x22
   1bb94:	add	x5, x5, x0
   1bb98:	strb	wzr, [x6, x19]
   1bb9c:	add	x4, x5, #0x10
   1bba0:	mov	x1, x20
   1bba4:	mov	x0, x21
   1bba8:	ldr	w5, [x5, #92]
   1bbac:	bl	26b48 <omp_get_affinity_format@@OMP_5.0+0x348>
   1bbb0:	mov	x19, x0
   1bbb4:	cmp	x20, x19
   1bbb8:	b.ls	1bc20 <omp_capture_affinity_@@OMP_5.0+0xf0>  // b.plast
   1bbbc:	sub	x2, x20, x19
   1bbc0:	add	x0, x21, x19
   1bbc4:	mov	w1, #0x20                  	// #32
   1bbc8:	bl	87c0 <memset@plt>
   1bbcc:	mov	w0, w19
   1bbd0:	ldp	x19, x20, [sp, #16]
   1bbd4:	ldp	x21, x22, [sp, #32]
   1bbd8:	ldr	x23, [sp, #48]
   1bbdc:	ldp	x29, x30, [sp], #320
   1bbe0:	ret
   1bbe4:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1bbe8:	ldr	x0, [x0, #4016]
   1bbec:	mrs	x1, tpidr_el0
   1bbf0:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1bbf4:	mov	x3, x22
   1bbf8:	add	x0, x1, x0
   1bbfc:	mov	x1, x20
   1bc00:	ldr	x2, [x2, #824]
   1bc04:	add	x4, x0, #0x10
   1bc08:	ldr	w5, [x0, #92]
   1bc0c:	mov	x0, x21
   1bc10:	bl	26b48 <omp_get_affinity_format@@OMP_5.0+0x348>
   1bc14:	mov	x19, x0
   1bc18:	cmp	x20, x19
   1bc1c:	b.hi	1bbbc <omp_capture_affinity_@@OMP_5.0+0x8c>  // b.pmore
   1bc20:	mov	w0, w19
   1bc24:	ldp	x19, x20, [sp, #16]
   1bc28:	ldp	x21, x22, [sp, #32]
   1bc2c:	ldr	x23, [sp, #48]
   1bc30:	ldp	x29, x30, [sp], #320
   1bc34:	ret
   1bc38:	add	x0, x19, #0x1
   1bc3c:	bl	b220 <fprintf@plt+0x2710>
   1bc40:	mov	x1, x23
   1bc44:	mov	x2, x19
   1bc48:	mov	x23, x0
   1bc4c:	bl	85c0 <memcpy@plt>
   1bc50:	adrp	x5, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1bc54:	ldr	x5, [x5, #4016]
   1bc58:	mrs	x0, tpidr_el0
   1bc5c:	mov	x3, x22
   1bc60:	mov	x2, x23
   1bc64:	add	x5, x0, x5
   1bc68:	strb	wzr, [x23, x19]
   1bc6c:	add	x4, x5, #0x10
   1bc70:	mov	x1, x20
   1bc74:	mov	x0, x21
   1bc78:	ldr	w5, [x5, #92]
   1bc7c:	bl	26b48 <omp_get_affinity_format@@OMP_5.0+0x348>
   1bc80:	mov	x19, x0
   1bc84:	cbz	x23, 1bc18 <omp_capture_affinity_@@OMP_5.0+0xe8>
   1bc88:	mov	x0, x23
   1bc8c:	bl	8900 <free@plt>
   1bc90:	b	1bc18 <omp_capture_affinity_@@OMP_5.0+0xe8>
   1bc94:	nop

000000000001bc98 <omp_pause_resource_@@OMP_5.0>:
   1bc98:	ldr	w0, [x0]
   1bc9c:	ldr	w1, [x1]
   1bca0:	b	21f80 <omp_pause_resource@@OMP_5.0>
   1bca4:	nop

000000000001bca8 <omp_pause_resource_all_@@OMP_5.0>:
   1bca8:	ldr	w0, [x0]
   1bcac:	b	21fd8 <omp_pause_resource_all@@OMP_5.0>
   1bcb0:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1bcb4:	mov	w3, w1
   1bcb8:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1bcbc:	ldr	x2, [x2, #1568]
   1bcc0:	ldr	x1, [x1, #1704]
   1bcc4:	ldr	x2, [x2, w3, uxtw #3]
   1bcc8:	b	8a60 <pthread_attr_setaffinity_np@plt>
   1bccc:	nop
   1bcd0:	stp	x29, x30, [sp, #-48]!
   1bcd4:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1bcd8:	mov	x29, sp
   1bcdc:	stp	x19, x20, [sp, #16]
   1bce0:	ldr	x20, [x2, #1712]
   1bce4:	stp	x21, x22, [sp, #32]
   1bce8:	and	w22, w1, #0xff
   1bcec:	cbz	x20, 1bd44 <omp_pause_resource_all_@@OMP_5.0+0x9c>
   1bcf0:	mov	x21, x0
   1bcf4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1bcf8:	ldr	x19, [x0, #1704]
   1bcfc:	add	x0, x19, #0x8
   1bd00:	mul	x0, x0, x21
   1bd04:	bl	8760 <malloc@plt>
   1bd08:	mov	x20, x0
   1bd0c:	cbz	x0, 1bd70 <omp_pause_resource_all_@@OMP_5.0+0xc8>
   1bd10:	add	x1, x0, x21, lsl #3
   1bd14:	cbz	x21, 1bd30 <omp_pause_resource_all_@@OMP_5.0+0x88>
   1bd18:	mov	x2, x0
   1bd1c:	mov	x0, x1
   1bd20:	str	x1, [x2], #8
   1bd24:	add	x1, x1, x19
   1bd28:	cmp	x2, x0
   1bd2c:	b.ne	1bd20 <omp_pause_resource_all_@@OMP_5.0+0x78>  // b.any
   1bd30:	mov	x0, x20
   1bd34:	ldp	x19, x20, [sp, #16]
   1bd38:	ldp	x21, x22, [sp, #32]
   1bd3c:	ldp	x29, x30, [sp], #48
   1bd40:	ret
   1bd44:	cbz	w22, 1bd60 <omp_pause_resource_all_@@OMP_5.0+0xb8>
   1bd48:	mov	x20, #0x0                   	// #0
   1bd4c:	mov	x0, x20
   1bd50:	ldp	x19, x20, [sp, #16]
   1bd54:	ldp	x21, x22, [sp, #32]
   1bd58:	ldp	x29, x30, [sp], #48
   1bd5c:	ret
   1bd60:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1bd64:	add	x0, x0, #0xe40
   1bd68:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1bd6c:	b	1bd30 <omp_pause_resource_all_@@OMP_5.0+0x88>
   1bd70:	cbnz	w22, 1bd48 <omp_pause_resource_all_@@OMP_5.0+0xa0>
   1bd74:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1bd78:	add	x0, x0, #0xe60
   1bd7c:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1bd80:	b	1bd30 <omp_pause_resource_all_@@OMP_5.0+0x88>
   1bd84:	nop
   1bd88:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1bd8c:	mov	w1, #0x0                   	// #0
   1bd90:	ldr	x2, [x2, #1704]
   1bd94:	b	87c0 <memset@plt>
   1bd98:	stp	x29, x30, [sp, #-32]!
   1bd9c:	adrp	x8, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1bda0:	mov	x9, #0x1                   	// #1
   1bda4:	mov	x29, sp
   1bda8:	ldr	x5, [x8, #1704]
   1bdac:	str	x19, [sp, #16]
   1bdb0:	and	w19, w4, #0xff
   1bdb4:	lsl	x10, x5, #3
   1bdb8:	cmp	x1, x5, lsl #3
   1bdbc:	b.cc	1bddc <omp_pause_resource_all_@@OMP_5.0+0x134>  // b.lo, b.ul, b.last
   1bdc0:	b	1be34 <omp_pause_resource_all_@@OMP_5.0+0x18c>
   1bdc4:	b.eq	1bdcc <omp_pause_resource_all_@@OMP_5.0+0x124>  // b.none
   1bdc8:	cbnz	x6, 1be1c <omp_pause_resource_all_@@OMP_5.0+0x174>
   1bdcc:	cmp	x10, x5
   1bdd0:	mov	x1, x5
   1bdd4:	b.ls	1be38 <omp_pause_resource_all_@@OMP_5.0+0x190>  // b.plast
   1bdd8:	ldr	x5, [x8, #1704]
   1bddc:	lsr	x6, x1, #6
   1bde0:	cmp	x5, x1, lsr #3
   1bde4:	lsl	x7, x9, x1
   1bde8:	b.ls	1bdf8 <omp_pause_resource_all_@@OMP_5.0+0x150>  // b.plast
   1bdec:	ldr	x5, [x0, x6, lsl #3]
   1bdf0:	orr	x5, x5, x7
   1bdf4:	str	x5, [x0, x6, lsl #3]
   1bdf8:	subs	x2, x2, #0x1
   1bdfc:	b.eq	1be5c <omp_pause_resource_all_@@OMP_5.0+0x1b4>  // b.none
   1be00:	adds	x5, x3, x1
   1be04:	cset	x6, cs  // cs = hs, nlast
   1be08:	mov	x7, x5
   1be0c:	cmp	x3, #0x0
   1be10:	b.ge	1bdc4 <omp_pause_resource_all_@@OMP_5.0+0x11c>  // b.tcont
   1be14:	cmp	x1, x5
   1be18:	b.cs	1bdcc <omp_pause_resource_all_@@OMP_5.0+0x124>  // b.hs, b.nlast
   1be1c:	cbz	w19, 1be70 <omp_pause_resource_all_@@OMP_5.0+0x1c8>
   1be20:	mov	w19, #0x0                   	// #0
   1be24:	mov	w0, w19
   1be28:	ldr	x19, [sp, #16]
   1be2c:	ldp	x29, x30, [sp], #32
   1be30:	ret
   1be34:	mov	x7, x1
   1be38:	cbnz	w19, 1be20 <omp_pause_resource_all_@@OMP_5.0+0x178>
   1be3c:	mov	x1, x7
   1be40:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1be44:	add	x0, x0, #0xe90
   1be48:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1be4c:	mov	w0, w19
   1be50:	ldr	x19, [sp, #16]
   1be54:	ldp	x29, x30, [sp], #32
   1be58:	ret
   1be5c:	mov	w19, #0x1                   	// #1
   1be60:	mov	w0, w19
   1be64:	ldr	x19, [sp, #16]
   1be68:	ldp	x29, x30, [sp], #32
   1be6c:	ret
   1be70:	mov	x2, x3
   1be74:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1be78:	add	x0, x0, #0xeb8
   1be7c:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1be80:	mov	w0, w19
   1be84:	ldr	x19, [sp, #16]
   1be88:	ldp	x29, x30, [sp], #32
   1be8c:	ret
   1be90:	stp	x29, x30, [sp, #-256]!
   1be94:	mov	x29, sp
   1be98:	stp	x21, x22, [sp, #32]
   1be9c:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1bea0:	ldr	x6, [x21, #1704]
   1bea4:	stp	x23, x24, [sp, #48]
   1bea8:	mov	w24, w0
   1beac:	and	w0, w5, #0xff
   1beb0:	str	w0, [sp, #168]
   1beb4:	stp	xzr, xzr, [sp, #232]
   1beb8:	cmp	xzr, x6, lsl #3
   1bebc:	b.eq	1c22c <omp_pause_resource_all_@@OMP_5.0+0x584>  // b.none
   1bec0:	cmp	w1, #0x3
   1bec4:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1bec8:	add	x0, x0, #0xee8
   1becc:	stp	x25, x26, [sp, #64]
   1bed0:	mov	w25, w1
   1bed4:	adrp	x1, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1bed8:	add	x1, x1, #0xee0
   1bedc:	csel	x0, x1, x0, eq  // eq = none
   1bee0:	mov	x26, #0x0                   	// #0
   1bee4:	stp	x19, x20, [sp, #16]
   1bee8:	mov	x19, x2
   1beec:	adrp	x2, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1bef0:	str	x0, [sp, #120]
   1bef4:	add	x0, x2, #0xef0
   1bef8:	mov	x22, x3
   1befc:	stp	x27, x28, [sp, #80]
   1bf00:	lsl	x28, x6, #3
   1bf04:	str	x0, [sp, #128]
   1bf08:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1bf0c:	add	x0, x0, #0xf10
   1bf10:	str	w25, [sp, #172]
   1bf14:	mov	x25, x26
   1bf18:	mov	x26, x4
   1bf1c:	adrp	x27, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1bf20:	str	x0, [sp, #136]
   1bf24:	add	x0, sp, #0xf0
   1bf28:	str	x0, [sp, #144]
   1bf2c:	ldr	x0, [x27, #1608]
   1bf30:	cmp	x0, x19
   1bf34:	b.cs	1bfbc <omp_pause_resource_all_@@OMP_5.0+0x314>  // b.hs, b.nlast
   1bf38:	ldr	x0, [x21, #1704]
   1bf3c:	lsr	x20, x25, #3
   1bf40:	cmp	x0, x25, lsr #3
   1bf44:	b.ls	1bfb0 <omp_pause_resource_all_@@OMP_5.0+0x308>  // b.plast
   1bf48:	lsr	x23, x25, #6
   1bf4c:	and	w0, w25, #0x3f
   1bf50:	mov	w1, w0
   1bf54:	str	w1, [sp, #108]
   1bf58:	ldr	x0, [x22, x23, lsl #3]
   1bf5c:	lsr	x0, x0, x1
   1bf60:	tbz	w0, #0, 1bfb0 <omp_pause_resource_all_@@OMP_5.0+0x308>
   1bf64:	ldp	x3, x1, [sp, #120]
   1bf68:	mov	x2, x25
   1bf6c:	add	x0, x26, #0x1b
   1bf70:	bl	8670 <sprintf@plt>
   1bf74:	ldr	x1, [sp, #136]
   1bf78:	mov	x0, x26
   1bf7c:	bl	8750 <fopen@plt>
   1bf80:	str	x0, [sp, #96]
   1bf84:	cbz	x0, 1bfe0 <omp_pause_resource_all_@@OMP_5.0+0x338>
   1bf88:	ldr	x3, [sp, #96]
   1bf8c:	add	x0, sp, #0xe8
   1bf90:	ldr	x1, [sp, #144]
   1bf94:	mov	w2, #0xa                   	// #10
   1bf98:	bl	8af0 <__getdelim@plt>
   1bf9c:	cmp	x0, #0x0
   1bfa0:	b.gt	1c008 <omp_pause_resource_all_@@OMP_5.0+0x360>
   1bfa4:	ldr	x0, [sp, #96]
   1bfa8:	bl	8730 <fclose@plt>
   1bfac:	nop
   1bfb0:	add	x25, x25, #0x1
   1bfb4:	cmp	x28, x25
   1bfb8:	b.ne	1bf2c <omp_pause_resource_all_@@OMP_5.0+0x284>  // b.any
   1bfbc:	ldr	x0, [sp, #232]
   1bfc0:	ldp	x19, x20, [sp, #16]
   1bfc4:	ldp	x25, x26, [sp, #64]
   1bfc8:	ldp	x27, x28, [sp, #80]
   1bfcc:	bl	8900 <free@plt>
   1bfd0:	ldp	x21, x22, [sp, #32]
   1bfd4:	ldp	x23, x24, [sp, #48]
   1bfd8:	ldp	x29, x30, [sp], #256
   1bfdc:	ret
   1bfe0:	ldr	x0, [x21, #1704]
   1bfe4:	cmp	x20, x0
   1bfe8:	b.cs	1bfb0 <omp_pause_resource_all_@@OMP_5.0+0x308>  // b.hs, b.nlast
   1bfec:	ldrb	w2, [sp, #108]
   1bff0:	mov	x0, #0x1                   	// #1
   1bff4:	ldr	x1, [x22, x23, lsl #3]
   1bff8:	lsl	x0, x0, x2
   1bffc:	bic	x0, x1, x0
   1c000:	str	x0, [x22, x23, lsl #3]
   1c004:	b	1bfb0 <omp_pause_resource_all_@@OMP_5.0+0x308>
   1c008:	ldr	w0, [sp, #172]
   1c00c:	ldr	x2, [x27, #1608]
   1c010:	cmp	w0, w24
   1c014:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c018:	ldr	x1, [sp, #232]
   1c01c:	str	x1, [sp, #248]
   1c020:	ldr	x0, [x0, #1568]
   1c024:	ldr	x0, [x0, x2, lsl #3]
   1c028:	str	x0, [sp, #152]
   1c02c:	b.eq	1c244 <omp_pause_resource_all_@@OMP_5.0+0x59c>  // b.none
   1c030:	ldrb	w0, [x1]
   1c034:	cmp	w0, #0x0
   1c038:	ccmp	w0, #0xa, #0x4, ne  // ne = any
   1c03c:	b.eq	1c290 <omp_pause_resource_all_@@OMP_5.0+0x5e8>  // b.none
   1c040:	str	x1, [sp, #112]
   1c044:	bl	8ac0 <__errno_location@plt>
   1c048:	add	x1, sp, #0xf8
   1c04c:	str	x1, [sp, #160]
   1c050:	ldr	x1, [sp, #112]
   1c054:	stp	x20, x28, [sp, #192]
   1c058:	ldr	w20, [sp, #172]
   1c05c:	stp	x25, x23, [sp, #208]
   1c060:	mov	x25, x0
   1c064:	mov	x23, x22
   1c068:	mov	x0, x1
   1c06c:	stp	x19, x26, [sp, #176]
   1c070:	mov	w2, #0xa                   	// #10
   1c074:	ldr	x1, [sp, #160]
   1c078:	str	wzr, [x25]
   1c07c:	bl	85e0 <strtoul@plt>
   1c080:	mov	x26, x0
   1c084:	ldr	w1, [x25]
   1c088:	cbnz	w1, 1c184 <omp_pause_resource_all_@@OMP_5.0+0x4dc>
   1c08c:	mov	x22, x0
   1c090:	ldr	x0, [sp, #248]
   1c094:	ldrb	w1, [x0]
   1c098:	cmp	w1, #0x2d
   1c09c:	b.eq	1c204 <omp_pause_resource_all_@@OMP_5.0+0x55c>  // b.none
   1c0a0:	mov	w28, w20
   1c0a4:	str	x25, [sp, #112]
   1c0a8:	mov	x25, x23
   1c0ac:	mov	x23, x22
   1c0b0:	ldr	x2, [x21, #1704]
   1c0b4:	lsr	x20, x26, #3
   1c0b8:	cmp	x2, x26, lsr #3
   1c0bc:	b.ls	1c140 <omp_pause_resource_all_@@OMP_5.0+0x498>  // b.plast
   1c0c0:	lsr	x22, x26, #6
   1c0c4:	and	w19, w26, #0x3f
   1c0c8:	ldr	x0, [x25, x22, lsl #3]
   1c0cc:	lsr	x0, x0, x19
   1c0d0:	tbz	w0, #0, 1c140 <omp_pause_resource_all_@@OMP_5.0+0x498>
   1c0d4:	cmp	w28, #0x3
   1c0d8:	ccmp	w28, w24, #0x4, eq  // eq = none
   1c0dc:	b.gt	1c1c8 <omp_pause_resource_all_@@OMP_5.0+0x520>
   1c0e0:	cmp	w24, #0x1
   1c0e4:	b.eq	1c1e4 <omp_pause_resource_all_@@OMP_5.0+0x53c>  // b.none
   1c0e8:	ldr	x0, [sp, #152]
   1c0ec:	mov	x1, x26
   1c0f0:	mov	w4, #0x1                   	// #1
   1c0f4:	mov	x3, #0x0                   	// #0
   1c0f8:	mov	x2, #0x1                   	// #1
   1c0fc:	bl	1bd98 <omp_pause_resource_all_@@OMP_5.0+0xf0>
   1c100:	tst	w0, #0xff
   1c104:	b.eq	1c140 <omp_pause_resource_all_@@OMP_5.0+0x498>  // b.none
   1c108:	ldr	x0, [x21, #1704]
   1c10c:	cmp	x20, x0
   1c110:	b.cs	1c128 <omp_pause_resource_all_@@OMP_5.0+0x480>  // b.hs, b.nlast
   1c114:	ldr	x0, [x25, x22, lsl #3]
   1c118:	mov	x1, #0x1                   	// #1
   1c11c:	lsl	x19, x1, x19
   1c120:	bic	x19, x0, x19
   1c124:	str	x19, [x25, x22, lsl #3]
   1c128:	cmp	w24, #0x1
   1c12c:	b.ne	1c140 <omp_pause_resource_all_@@OMP_5.0+0x498>  // b.any
   1c130:	ldr	x0, [x27, #1608]
   1c134:	add	x0, x0, #0x1
   1c138:	str	x0, [x27, #1608]
   1c13c:	nop
   1c140:	add	x26, x26, #0x1
   1c144:	cmp	x23, x26
   1c148:	b.cs	1c0b0 <omp_pause_resource_all_@@OMP_5.0+0x408>  // b.hs, b.nlast
   1c14c:	ldr	x0, [sp, #248]
   1c150:	mov	x23, x25
   1c154:	mov	w20, w28
   1c158:	ldr	x25, [sp, #112]
   1c15c:	ldrb	w2, [x0]
   1c160:	cmp	w2, #0x2c
   1c164:	b.ne	1c178 <omp_pause_resource_all_@@OMP_5.0+0x4d0>  // b.any
   1c168:	add	x1, x0, #0x1
   1c16c:	str	x1, [sp, #248]
   1c170:	ldrb	w2, [x0, #1]
   1c174:	mov	x0, x1
   1c178:	cmp	w2, #0x0
   1c17c:	ccmp	w2, #0xa, #0x4, ne  // ne = any
   1c180:	b.ne	1c070 <omp_pause_resource_all_@@OMP_5.0+0x3c8>  // b.any
   1c184:	ldr	w0, [sp, #172]
   1c188:	mov	x22, x23
   1c18c:	ldp	x19, x26, [sp, #176]
   1c190:	cmp	w0, w24
   1c194:	ldr	x0, [x21, #1704]
   1c198:	ldp	x20, x28, [sp, #192]
   1c19c:	ldp	x25, x23, [sp, #208]
   1c1a0:	b.eq	1c268 <omp_pause_resource_all_@@OMP_5.0+0x5c0>  // b.none
   1c1a4:	cmp	x20, x0
   1c1a8:	b.cs	1bfa4 <omp_pause_resource_all_@@OMP_5.0+0x2fc>  // b.hs, b.nlast
   1c1ac:	ldr	x1, [x22, x23, lsl #3]
   1c1b0:	mov	x0, #0x1                   	// #1
   1c1b4:	ldrb	w2, [sp, #108]
   1c1b8:	lsl	x0, x0, x2
   1c1bc:	bic	x0, x1, x0
   1c1c0:	str	x0, [x22, x23, lsl #3]
   1c1c4:	b	1bfa4 <omp_pause_resource_all_@@OMP_5.0+0x2fc>
   1c1c8:	ldp	x2, x4, [sp, #176]
   1c1cc:	mov	x3, x25
   1c1d0:	ldrb	w5, [sp, #168]
   1c1d4:	mov	w0, w24
   1c1d8:	mov	w1, #0x2                   	// #2
   1c1dc:	bl	1be90 <omp_pause_resource_all_@@OMP_5.0+0x1e8>
   1c1e0:	b	1c140 <omp_pause_resource_all_@@OMP_5.0+0x498>
   1c1e4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c1e8:	mov	w1, #0x0                   	// #0
   1c1ec:	ldr	x3, [x27, #1608]
   1c1f0:	ldr	x0, [x0, #1568]
   1c1f4:	ldr	x0, [x0, x3, lsl #3]
   1c1f8:	str	x0, [sp, #152]
   1c1fc:	bl	87c0 <memset@plt>
   1c200:	b	1c0e8 <omp_pause_resource_all_@@OMP_5.0+0x440>
   1c204:	ldr	x1, [sp, #160]
   1c208:	add	x0, x0, #0x1
   1c20c:	mov	w2, #0xa                   	// #10
   1c210:	bl	85e0 <strtoul@plt>
   1c214:	mov	x22, x0
   1c218:	ldr	w1, [x25]
   1c21c:	cmp	w1, #0x0
   1c220:	ccmp	x26, x0, #0x2, eq  // eq = none
   1c224:	b.ls	1c0a0 <omp_pause_resource_all_@@OMP_5.0+0x3f8>  // b.plast
   1c228:	b	1c184 <omp_pause_resource_all_@@OMP_5.0+0x4dc>
   1c22c:	mov	x0, #0x0                   	// #0
   1c230:	bl	8900 <free@plt>
   1c234:	ldp	x21, x22, [sp, #32]
   1c238:	ldp	x23, x24, [sp, #48]
   1c23c:	ldp	x29, x30, [sp], #256
   1c240:	ret
   1c244:	ldr	x2, [x21, #1704]
   1c248:	mov	w1, #0x0                   	// #0
   1c24c:	bl	87c0 <memset@plt>
   1c250:	ldr	x1, [sp, #248]
   1c254:	ldrb	w0, [x1]
   1c258:	cmp	w0, #0x0
   1c25c:	ccmp	w0, #0xa, #0x4, ne  // ne = any
   1c260:	b.ne	1c040 <omp_pause_resource_all_@@OMP_5.0+0x398>  // b.any
   1c264:	ldr	x0, [x21, #1704]
   1c268:	cmp	x20, x0
   1c26c:	b.cs	1c280 <omp_pause_resource_all_@@OMP_5.0+0x5d8>  // b.hs, b.nlast
   1c270:	ldr	x1, [x22, x23, lsl #3]
   1c274:	ldrb	w2, [sp, #108]
   1c278:	lsr	x2, x1, x2
   1c27c:	tbnz	w2, #0, 1c1b0 <omp_pause_resource_all_@@OMP_5.0+0x508>
   1c280:	ldr	x1, [x27, #1608]
   1c284:	add	x1, x1, #0x1
   1c288:	str	x1, [x27, #1608]
   1c28c:	b	1c1a4 <omp_pause_resource_all_@@OMP_5.0+0x4fc>
   1c290:	ldr	x0, [x21, #1704]
   1c294:	b	1c1a4 <omp_pause_resource_all_@@OMP_5.0+0x4fc>
   1c298:	stp	x29, x30, [sp, #-16]!
   1c29c:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c2a0:	mov	x29, sp
   1c2a4:	ldr	x4, [x3, #1704]
   1c2a8:	cmp	x1, x4, lsl #3
   1c2ac:	b.cs	1c30c <omp_pause_resource_all_@@OMP_5.0+0x664>  // b.hs, b.nlast
   1c2b0:	mov	x2, x1
   1c2b4:	cmp	x4, x1, lsr #3
   1c2b8:	b.ls	1c2f0 <omp_pause_resource_all_@@OMP_5.0+0x648>  // b.plast
   1c2bc:	lsr	x4, x1, #6
   1c2c0:	and	w6, w1, #0x3f
   1c2c4:	mov	x3, x0
   1c2c8:	ldr	x5, [x0, x4, lsl #3]
   1c2cc:	lsr	x0, x5, x6
   1c2d0:	tbz	w0, #0, 1c2f0 <omp_pause_resource_all_@@OMP_5.0+0x648>
   1c2d4:	mov	x1, #0x1                   	// #1
   1c2d8:	mov	w0, w1
   1c2dc:	lsl	x1, x1, x6
   1c2e0:	bic	x1, x5, x1
   1c2e4:	str	x1, [x3, x4, lsl #3]
   1c2e8:	ldp	x29, x30, [sp], #16
   1c2ec:	ret
   1c2f0:	mov	x1, x2
   1c2f4:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1c2f8:	add	x0, x0, #0xf18
   1c2fc:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1c300:	mov	w0, #0x0                   	// #0
   1c304:	ldp	x29, x30, [sp], #16
   1c308:	ret
   1c30c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1c310:	add	x0, x0, #0xe90
   1c314:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1c318:	mov	w0, #0x0                   	// #0
   1c31c:	ldp	x29, x30, [sp], #16
   1c320:	ret
   1c324:	nop
   1c328:	stp	x29, x30, [sp, #-64]!
   1c32c:	mov	x29, sp
   1c330:	stp	x21, x22, [sp, #32]
   1c334:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c338:	mov	x22, x1
   1c33c:	stp	x19, x20, [sp, #16]
   1c340:	mov	w1, #0x0                   	// #0
   1c344:	mov	x20, x2
   1c348:	ldr	x19, [x21, #1704]
   1c34c:	str	x23, [sp, #48]
   1c350:	mov	x23, x0
   1c354:	mov	x2, x19
   1c358:	bl	87c0 <memset@plt>
   1c35c:	lsl	x19, x19, #3
   1c360:	mov	x1, #0x0                   	// #0
   1c364:	mov	x0, #0x1                   	// #1
   1c368:	cbnz	x19, 1c3a4 <omp_pause_resource_all_@@OMP_5.0+0x6fc>
   1c36c:	b	1c40c <omp_pause_resource_all_@@OMP_5.0+0x764>
   1c370:	b.eq	1c380 <omp_pause_resource_all_@@OMP_5.0+0x6d8>  // b.none
   1c374:	cmp	x6, #0x0
   1c378:	ccmp	x19, x2, #0x0, eq  // eq = none
   1c37c:	b.ls	1c3e4 <omp_pause_resource_all_@@OMP_5.0+0x73c>  // b.plast
   1c380:	cmp	x3, x2, lsr #3
   1c384:	b.ls	1c398 <omp_pause_resource_all_@@OMP_5.0+0x6f0>  // b.plast
   1c388:	ldr	x2, [x23, x5, lsl #3]
   1c38c:	orr	x4, x2, x4
   1c390:	str	x4, [x23, x5, lsl #3]
   1c394:	nop
   1c398:	add	x1, x1, #0x1
   1c39c:	cmp	x19, x1
   1c3a0:	b.eq	1c40c <omp_pause_resource_all_@@OMP_5.0+0x764>  // b.none
   1c3a4:	ldr	x3, [x21, #1704]
   1c3a8:	lsr	x5, x1, #6
   1c3ac:	cmp	x3, x1, lsr #3
   1c3b0:	b.ls	1c398 <omp_pause_resource_all_@@OMP_5.0+0x6f0>  // b.plast
   1c3b4:	ldr	x5, [x22, x5, lsl #3]
   1c3b8:	lsr	x5, x5, x1
   1c3bc:	tbz	w5, #0, 1c398 <omp_pause_resource_all_@@OMP_5.0+0x6f0>
   1c3c0:	adds	x2, x1, x20
   1c3c4:	add	w4, w1, w20
   1c3c8:	cset	x6, cs  // cs = hs, nlast
   1c3cc:	cmp	x20, #0x0
   1c3d0:	lsr	x5, x2, #6
   1c3d4:	lsl	x4, x0, x4
   1c3d8:	b.ge	1c370 <omp_pause_resource_all_@@OMP_5.0+0x6c8>  // b.tcont
   1c3dc:	cmp	x2, x1
   1c3e0:	b.ls	1c380 <omp_pause_resource_all_@@OMP_5.0+0x6d8>  // b.plast
   1c3e4:	mov	x2, x20
   1c3e8:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1c3ec:	add	x0, x0, #0xeb8
   1c3f0:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1c3f4:	mov	w0, #0x0                   	// #0
   1c3f8:	ldp	x19, x20, [sp, #16]
   1c3fc:	ldp	x21, x22, [sp, #32]
   1c400:	ldr	x23, [sp, #48]
   1c404:	ldp	x29, x30, [sp], #64
   1c408:	ret
   1c40c:	mov	w0, #0x1                   	// #1
   1c410:	ldp	x19, x20, [sp, #16]
   1c414:	ldp	x21, x22, [sp, #32]
   1c418:	ldr	x23, [sp, #48]
   1c41c:	ldp	x29, x30, [sp], #64
   1c420:	ret
   1c424:	nop
   1c428:	stp	x29, x30, [sp, #-16]!
   1c42c:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c430:	mov	x29, sp
   1c434:	ldr	x2, [x2, #1704]
   1c438:	bl	8890 <memcmp@plt>
   1c43c:	cmp	w0, #0x0
   1c440:	cset	w0, eq  // eq = none
   1c444:	ldp	x29, x30, [sp], #16
   1c448:	ret
   1c44c:	nop
   1c450:	stp	x29, x30, [sp, #-80]!
   1c454:	mov	x29, sp
   1c458:	stp	x21, x22, [sp, #32]
   1c45c:	adrp	x22, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c460:	stp	x23, x24, [sp, #48]
   1c464:	and	w24, w0, #0xff
   1c468:	ldr	x0, [x22, #1608]
   1c46c:	cbz	x0, 1c55c <omp_pause_resource_all_@@OMP_5.0+0x8b4>
   1c470:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c474:	stp	x19, x20, [sp, #16]
   1c478:	mov	x20, #0x0                   	// #0
   1c47c:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c480:	stp	x25, x26, [sp, #64]
   1c484:	mov	x25, #0x0                   	// #0
   1c488:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c48c:	nop
   1c490:	ldr	x0, [x19, #1704]
   1c494:	lsl	x21, x25, #3
   1c498:	ldr	x1, [x26, #1568]
   1c49c:	ldr	x4, [x23, #1712]
   1c4a0:	cmp	xzr, x0, lsr #3
   1c4a4:	lsr	x5, x0, #3
   1c4a8:	ldr	x1, [x1, x25, lsl #3]
   1c4ac:	b.eq	1c4d8 <omp_pause_resource_all_@@OMP_5.0+0x830>  // b.none
   1c4b0:	mov	x0, #0x0                   	// #0
   1c4b4:	nop
   1c4b8:	ldr	x2, [x1, x0, lsl #3]
   1c4bc:	ldr	x3, [x4, x0, lsl #3]
   1c4c0:	and	x2, x2, x3
   1c4c4:	str	x2, [x1, x0, lsl #3]
   1c4c8:	add	x0, x0, #0x1
   1c4cc:	cmp	x5, x0
   1c4d0:	b.ne	1c4b8 <omp_pause_resource_all_@@OMP_5.0+0x810>  // b.any
   1c4d4:	ldr	x0, [x19, #1704]
   1c4d8:	bl	1a430 <omp_test_nest_lock@OMP_1.0+0x380>
   1c4dc:	cbz	x0, 1c4f0 <omp_pause_resource_all_@@OMP_5.0+0x848>
   1c4e0:	ldr	x0, [x26, #1568]
   1c4e4:	ldr	x1, [x0, x21]
   1c4e8:	str	x1, [x0, x20, lsl #3]
   1c4ec:	add	x20, x20, #0x1
   1c4f0:	ldr	x1, [x22, #1608]
   1c4f4:	add	x25, x25, #0x1
   1c4f8:	cmp	x1, x25
   1c4fc:	b.hi	1c490 <omp_pause_resource_all_@@OMP_5.0+0x7e8>  // b.pmore
   1c500:	cbz	x20, 1c554 <omp_pause_resource_all_@@OMP_5.0+0x8ac>
   1c504:	cmp	x1, x20
   1c508:	b.ls	1c534 <omp_pause_resource_all_@@OMP_5.0+0x88c>  // b.plast
   1c50c:	cbz	w24, 1c578 <omp_pause_resource_all_@@OMP_5.0+0x8d0>
   1c510:	mov	w24, #0x1                   	// #1
   1c514:	str	x20, [x22, #1608]
   1c518:	mov	w0, w24
   1c51c:	ldp	x19, x20, [sp, #16]
   1c520:	ldp	x21, x22, [sp, #32]
   1c524:	ldp	x23, x24, [sp, #48]
   1c528:	ldp	x25, x26, [sp, #64]
   1c52c:	ldp	x29, x30, [sp], #80
   1c530:	ret
   1c534:	mov	w24, #0x1                   	// #1
   1c538:	mov	w0, w24
   1c53c:	ldp	x19, x20, [sp, #16]
   1c540:	ldp	x21, x22, [sp, #32]
   1c544:	ldp	x23, x24, [sp, #48]
   1c548:	ldp	x25, x26, [sp, #64]
   1c54c:	ldp	x29, x30, [sp], #80
   1c550:	ret
   1c554:	ldp	x19, x20, [sp, #16]
   1c558:	ldp	x25, x26, [sp, #64]
   1c55c:	cbz	w24, 1c58c <omp_pause_resource_all_@@OMP_5.0+0x8e4>
   1c560:	mov	w24, #0x0                   	// #0
   1c564:	mov	w0, w24
   1c568:	ldp	x21, x22, [sp, #32]
   1c56c:	ldp	x23, x24, [sp, #48]
   1c570:	ldp	x29, x30, [sp], #80
   1c574:	ret
   1c578:	mov	x2, x20
   1c57c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1c580:	add	x0, x0, #0xf78
   1c584:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1c588:	b	1c510 <omp_pause_resource_all_@@OMP_5.0+0x868>
   1c58c:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1c590:	add	x0, x0, #0xf48
   1c594:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1c598:	mov	w0, w24
   1c59c:	ldp	x21, x22, [sp, #32]
   1c5a0:	ldp	x23, x24, [sp, #48]
   1c5a4:	ldp	x29, x30, [sp], #80
   1c5a8:	ret
   1c5ac:	nop
   1c5b0:	stp	x29, x30, [sp, #-160]!
   1c5b4:	mov	x29, sp
   1c5b8:	stp	x23, x24, [sp, #48]
   1c5bc:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c5c0:	stp	x19, x20, [sp, #16]
   1c5c4:	mov	w20, w0
   1c5c8:	mov	x19, x1
   1c5cc:	ldr	x0, [x24, #1712]
   1c5d0:	stp	x21, x22, [sp, #32]
   1c5d4:	and	w21, w2, #0xff
   1c5d8:	cbz	x0, 1c5f4 <omp_pause_resource_all_@@OMP_5.0+0x94c>
   1c5dc:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c5e0:	mov	x1, x0
   1c5e4:	ldr	x0, [x2, #1704]
   1c5e8:	bl	1a430 <omp_test_nest_lock@OMP_1.0+0x380>
   1c5ec:	cmp	x19, x0
   1c5f0:	csel	x19, x19, x0, ls  // ls = plast
   1c5f4:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c5f8:	adrp	x22, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c5fc:	mov	w1, w21
   1c600:	mov	x0, x19
   1c604:	bl	1bcd0 <omp_pause_resource_all_@@OMP_5.0+0x28>
   1c608:	str	xzr, [x22, #1608]
   1c60c:	str	x0, [x23, #1568]
   1c610:	mov	x1, x0
   1c614:	mov	w0, #0x0                   	// #0
   1c618:	cbz	x1, 1c68c <omp_pause_resource_all_@@OMP_5.0+0x9e4>
   1c61c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c620:	adrp	x5, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1c624:	add	x5, x5, #0xfe0
   1c628:	ldr	x2, [x0, #1704]
   1c62c:	ldp	x6, x7, [x5]
   1c630:	add	x0, x2, #0xf
   1c634:	and	x0, x0, #0xfffffffffffffff0
   1c638:	ldr	w4, [x5, #24]
   1c63c:	sub	sp, sp, x0
   1c640:	stp	x6, x7, [x29, #72]
   1c644:	mov	x3, sp
   1c648:	ldr	x1, [x24, #1712]
   1c64c:	mov	x0, x3
   1c650:	ldr	x5, [x5, #16]
   1c654:	add	x24, x29, #0x48
   1c658:	str	x5, [x29, #88]
   1c65c:	str	w4, [x29, #96]
   1c660:	bl	85c0 <memcpy@plt>
   1c664:	mov	x3, x0
   1c668:	mov	w1, #0x3                   	// #3
   1c66c:	mov	w0, w20
   1c670:	mov	w5, w21
   1c674:	mov	x4, x24
   1c678:	mov	x2, x19
   1c67c:	bl	1be90 <omp_pause_resource_all_@@OMP_5.0+0x1e8>
   1c680:	ldr	x1, [x22, #1608]
   1c684:	mov	w0, #0x1                   	// #1
   1c688:	cbz	x1, 1c6a4 <omp_pause_resource_all_@@OMP_5.0+0x9fc>
   1c68c:	mov	sp, x29
   1c690:	ldp	x19, x20, [sp, #16]
   1c694:	ldp	x21, x22, [sp, #32]
   1c698:	ldp	x23, x24, [sp, #48]
   1c69c:	ldp	x29, x30, [sp], #160
   1c6a0:	ret
   1c6a4:	cbz	w21, 1c6d0 <omp_pause_resource_all_@@OMP_5.0+0xa28>
   1c6a8:	ldr	x0, [x23, #1568]
   1c6ac:	bl	8900 <free@plt>
   1c6b0:	str	xzr, [x23, #1568]
   1c6b4:	mov	w0, #0x0                   	// #0
   1c6b8:	mov	sp, x29
   1c6bc:	ldp	x19, x20, [sp, #16]
   1c6c0:	ldp	x21, x22, [sp, #32]
   1c6c4:	ldp	x23, x24, [sp, #48]
   1c6c8:	ldp	x29, x30, [sp], #160
   1c6cc:	ret
   1c6d0:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1c6d4:	add	x0, x0, #0x0
   1c6d8:	bl	b598 <GOMP_critical_name_end@@GOMP_1.0+0x170>
   1c6dc:	b	1c6a8 <omp_pause_resource_all_@@OMP_5.0+0xa00>
   1c6e0:	stp	x29, x30, [sp, #-32]!
   1c6e4:	mov	x29, sp
   1c6e8:	stp	x19, x20, [sp, #16]
   1c6ec:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c6f0:	ldr	x19, [x20, #1568]
   1c6f4:	cbz	x19, 1c73c <omp_pause_resource_all_@@OMP_5.0+0xa94>
   1c6f8:	bl	8a90 <pthread_self@plt>
   1c6fc:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c700:	ldr	x2, [x19]
   1c704:	ldr	x1, [x1, #1704]
   1c708:	bl	8a70 <pthread_setaffinity_np@plt>
   1c70c:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1c710:	ldr	x1, [x1, #4016]
   1c714:	mrs	x0, tpidr_el0
   1c718:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c71c:	add	x0, x0, x1
   1c720:	mov	w1, #0x1                   	// #1
   1c724:	ldr	x2, [x2, #1608]
   1c728:	stp	wzr, w2, [x0, #52]
   1c72c:	str	w1, [x0, #92]
   1c730:	ldp	x19, x20, [sp, #16]
   1c734:	ldp	x29, x30, [sp], #32
   1c738:	ret
   1c73c:	mov	w2, #0x1                   	// #1
   1c740:	mov	x1, #0xffffffffffffffff    	// #-1
   1c744:	mov	w0, #0x1                   	// #1
   1c748:	bl	1c5b0 <omp_pause_resource_all_@@OMP_5.0+0x908>
   1c74c:	tst	w0, #0xff
   1c750:	b.eq	1c730 <omp_pause_resource_all_@@OMP_5.0+0xa88>  // b.none
   1c754:	ldr	x19, [x20, #1568]
   1c758:	b	1c6f8 <omp_pause_resource_all_@@OMP_5.0+0xa50>
   1c75c:	nop
   1c760:	stp	x29, x30, [sp, #-96]!
   1c764:	mov	x29, sp
   1c768:	stp	x25, x26, [sp, #64]
   1c76c:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c770:	ldr	x2, [x26, #1704]
   1c774:	cmp	xzr, x2, lsl #3
   1c778:	b.eq	1c83c <omp_pause_resource_all_@@OMP_5.0+0xb94>  // b.none
   1c77c:	stp	x21, x22, [sp, #32]
   1c780:	adrp	x22, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1c784:	mov	x21, x0
   1c788:	ldr	x22, [x22, #4040]
   1c78c:	stp	x19, x20, [sp, #16]
   1c790:	mov	x19, #0x0                   	// #0
   1c794:	stp	x23, x24, [sp, #48]
   1c798:	mov	x25, x22
   1c79c:	adrp	x23, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1c7a0:	str	x27, [sp, #80]
   1c7a4:	add	x23, x23, #0x30
   1c7a8:	lsl	x27, x2, #3
   1c7ac:	cmp	x2, x19, lsr #3
   1c7b0:	mov	w24, #0x0                   	// #0
   1c7b4:	mov	x20, #0x0                   	// #0
   1c7b8:	b.ls	1c80c <omp_pause_resource_all_@@OMP_5.0+0xb64>  // b.plast
   1c7bc:	nop
   1c7c0:	lsr	x0, x19, #6
   1c7c4:	ldr	x1, [x21, x0, lsl #3]
   1c7c8:	lsr	x1, x1, x19
   1c7cc:	tbz	w1, #0, 1c80c <omp_pause_resource_all_@@OMP_5.0+0xb64>
   1c7d0:	cbnz	x20, 1c7f0 <omp_pause_resource_all_@@OMP_5.0+0xb48>
   1c7d4:	ldr	x0, [x25]
   1c7d8:	cbnz	w24, 1c894 <omp_pause_resource_all_@@OMP_5.0+0xbec>
   1c7dc:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1c7e0:	mov	x2, x19
   1c7e4:	add	x1, x1, #0x28
   1c7e8:	mov	w24, #0x1                   	// #1
   1c7ec:	bl	8b10 <fprintf@plt>
   1c7f0:	add	x20, x20, #0x1
   1c7f4:	add	x19, x19, #0x1
   1c7f8:	cmp	x27, x19
   1c7fc:	b.eq	1c824 <omp_pause_resource_all_@@OMP_5.0+0xb7c>  // b.none
   1c800:	ldr	x2, [x26, #1704]
   1c804:	cmp	x2, x19, lsr #3
   1c808:	b.hi	1c7c0 <omp_pause_resource_all_@@OMP_5.0+0xb18>  // b.pmore
   1c80c:	cmp	x20, #0x1
   1c810:	b.hi	1c848 <omp_pause_resource_all_@@OMP_5.0+0xba0>  // b.pmore
   1c814:	add	x19, x19, #0x1
   1c818:	mov	x20, #0x0                   	// #0
   1c81c:	cmp	x27, x19
   1c820:	b.ne	1c800 <omp_pause_resource_all_@@OMP_5.0+0xb58>  // b.any
   1c824:	cmp	x20, #0x1
   1c828:	b.hi	1c860 <omp_pause_resource_all_@@OMP_5.0+0xbb8>  // b.pmore
   1c82c:	ldp	x19, x20, [sp, #16]
   1c830:	ldp	x21, x22, [sp, #32]
   1c834:	ldp	x23, x24, [sp, #48]
   1c838:	ldr	x27, [sp, #80]
   1c83c:	ldp	x25, x26, [sp, #64]
   1c840:	ldp	x29, x30, [sp], #96
   1c844:	ret
   1c848:	ldr	x0, [x22]
   1c84c:	mov	x2, x20
   1c850:	mov	x1, x23
   1c854:	mov	x20, #0x0                   	// #0
   1c858:	bl	8b10 <fprintf@plt>
   1c85c:	b	1c7f4 <omp_pause_resource_all_@@OMP_5.0+0xb4c>
   1c860:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1c864:	mov	x2, x20
   1c868:	ldp	x19, x20, [sp, #16]
   1c86c:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1c870:	ldr	x0, [x0, #4040]
   1c874:	add	x1, x1, #0x30
   1c878:	ldp	x21, x22, [sp, #32]
   1c87c:	ldp	x23, x24, [sp, #48]
   1c880:	ldp	x25, x26, [sp, #64]
   1c884:	ldr	x27, [sp, #80]
   1c888:	ldp	x29, x30, [sp], #96
   1c88c:	ldr	x0, [x0]
   1c890:	b	8b10 <fprintf@plt>
   1c894:	mov	x1, x0
   1c898:	mov	w0, #0x2c                  	// #44
   1c89c:	bl	86b0 <fputc@plt>
   1c8a0:	ldr	x0, [x25]
   1c8a4:	b	1c7dc <omp_pause_resource_all_@@OMP_5.0+0xb34>

000000000001c8a8 <omp_get_place_num_procs@@OMP_4.5>:
   1c8a8:	tbnz	w0, #31, 1c8f4 <omp_get_place_num_procs@@OMP_4.5+0x4c>
   1c8ac:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c8b0:	mov	w1, w0
   1c8b4:	sxtw	x3, w0
   1c8b8:	mov	w0, #0x0                   	// #0
   1c8bc:	ldr	x2, [x2, #1608]
   1c8c0:	cmp	x2, w1, sxtw
   1c8c4:	b.hi	1c8cc <omp_get_place_num_procs@@OMP_4.5+0x24>  // b.pmore
   1c8c8:	ret
   1c8cc:	stp	x29, x30, [sp, #-16]!
   1c8d0:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c8d4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c8d8:	mov	x29, sp
   1c8dc:	ldr	x1, [x1, #1568]
   1c8e0:	ldr	x0, [x0, #1704]
   1c8e4:	ldr	x1, [x1, x3, lsl #3]
   1c8e8:	bl	1a430 <omp_test_nest_lock@OMP_1.0+0x380>
   1c8ec:	ldp	x29, x30, [sp], #16
   1c8f0:	ret
   1c8f4:	mov	w0, #0x0                   	// #0
   1c8f8:	ret
   1c8fc:	nop

000000000001c900 <omp_get_place_proc_ids@@OMP_4.5>:
   1c900:	tbnz	w0, #31, 1c970 <omp_get_place_proc_ids@@OMP_4.5+0x70>
   1c904:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c908:	sxtw	x4, w0
   1c90c:	ldr	x2, [x2, #1608]
   1c910:	cmp	x2, w0, sxtw
   1c914:	b.ls	1c970 <omp_get_place_proc_ids@@OMP_4.5+0x70>  // b.plast
   1c918:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c91c:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c920:	ldr	x0, [x0, #1568]
   1c924:	ldr	x3, [x2, #1704]
   1c928:	ldr	x6, [x0, x4, lsl #3]
   1c92c:	cmp	xzr, x3, lsl #3
   1c930:	lsl	x5, x3, #3
   1c934:	b.eq	1c970 <omp_get_place_proc_ids@@OMP_4.5+0x70>  // b.none
   1c938:	mov	x0, #0x0                   	// #0
   1c93c:	nop
   1c940:	lsr	x2, x0, #6
   1c944:	cmp	x3, x0, lsr #3
   1c948:	b.ls	1c964 <omp_get_place_proc_ids@@OMP_4.5+0x64>  // b.plast
   1c94c:	ldr	x2, [x6, x2, lsl #3]
   1c950:	mov	x4, x1
   1c954:	lsr	x2, x2, x0
   1c958:	tbz	w2, #0, 1c964 <omp_get_place_proc_ids@@OMP_4.5+0x64>
   1c95c:	str	w0, [x4], #4
   1c960:	mov	x1, x4
   1c964:	add	x0, x0, #0x1
   1c968:	cmp	x5, x0
   1c96c:	b.ne	1c940 <omp_get_place_proc_ids@@OMP_4.5+0x40>  // b.any
   1c970:	ret
   1c974:	nop
   1c978:	tbnz	w0, #31, 1c9ec <omp_get_place_proc_ids@@OMP_4.5+0xec>
   1c97c:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c980:	sxtw	x3, w0
   1c984:	ldr	x2, [x2, #1608]
   1c988:	cmp	x2, w0, sxtw
   1c98c:	b.ls	1c9ec <omp_get_place_proc_ids@@OMP_4.5+0xec>  // b.plast
   1c990:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c994:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1c998:	ldr	x0, [x0, #1568]
   1c99c:	ldr	x2, [x5, #1704]
   1c9a0:	ldr	x7, [x0, x3, lsl #3]
   1c9a4:	cmp	xzr, x2, lsl #3
   1c9a8:	lsl	x6, x2, #3
   1c9ac:	b.eq	1c9ec <omp_get_place_proc_ids@@OMP_4.5+0xec>  // b.none
   1c9b0:	mov	x0, #0x0                   	// #0
   1c9b4:	b	1c9bc <omp_get_place_proc_ids@@OMP_4.5+0xbc>
   1c9b8:	ldr	x2, [x5, #1704]
   1c9bc:	lsr	x3, x0, #6
   1c9c0:	cmp	x2, x0, lsr #3
   1c9c4:	b.ls	1c9e0 <omp_get_place_proc_ids@@OMP_4.5+0xe0>  // b.plast
   1c9c8:	ldr	x2, [x7, x3, lsl #3]
   1c9cc:	mov	x4, x1
   1c9d0:	lsr	x2, x2, x0
   1c9d4:	tbz	w2, #0, 1c9e0 <omp_get_place_proc_ids@@OMP_4.5+0xe0>
   1c9d8:	str	x0, [x4], #8
   1c9dc:	mov	x1, x4
   1c9e0:	add	x0, x0, #0x1
   1c9e4:	cmp	x6, x0
   1c9e8:	b.ne	1c9b8 <omp_get_place_proc_ids@@OMP_4.5+0xb8>  // b.any
   1c9ec:	ret
   1c9f0:	stp	x29, x30, [sp, #-144]!
   1c9f4:	mov	x29, sp
   1c9f8:	stp	x19, x20, [sp, #16]
   1c9fc:	stp	x23, x24, [sp, #48]
   1ca00:	mov	x23, x0
   1ca04:	mov	x24, x1
   1ca08:	stp	x25, x26, [sp, #64]
   1ca0c:	mov	x25, x2
   1ca10:	tbnz	w3, #31, 1ca28 <omp_get_place_proc_ids@@OMP_4.5+0x128>
   1ca14:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1ca18:	sxtw	x1, w3
   1ca1c:	ldr	x0, [x0, #1608]
   1ca20:	cmp	x0, w3, sxtw
   1ca24:	b.hi	1cb38 <omp_get_place_proc_ids@@OMP_4.5+0x238>  // b.pmore
   1ca28:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1ca2c:	ldr	x26, [x0, #1712]
   1ca30:	cbz	x26, 1cb50 <omp_get_place_proc_ids@@OMP_4.5+0x250>
   1ca34:	stp	x21, x22, [sp, #32]
   1ca38:	stp	x27, x28, [sp, #80]
   1ca3c:	adrp	x22, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1ca40:	add	x20, sp, #0x70
   1ca44:	adrp	x27, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1ca48:	ldr	x5, [x22, #1704]
   1ca4c:	add	x0, x20, #0x1
   1ca50:	mov	x19, #0x0                   	// #0
   1ca54:	str	x0, [sp, #104]
   1ca58:	add	x0, x27, #0x40
   1ca5c:	mov	w27, #0x0                   	// #0
   1ca60:	lsl	x28, x5, #3
   1ca64:	str	x0, [sp, #96]
   1ca68:	mov	x21, x28
   1ca6c:	b	1cae0 <omp_get_place_proc_ids@@OMP_4.5+0x1e0>
   1ca70:	lsr	x0, x19, #6
   1ca74:	ldr	x0, [x26, x0, lsl #3]
   1ca78:	lsr	x0, x0, x19
   1ca7c:	tbz	w0, #0, 1caf4 <omp_get_place_proc_ids@@OMP_4.5+0x1f4>
   1ca80:	cbnz	w27, 1cad4 <omp_get_place_proc_ids@@OMP_4.5+0x1d4>
   1ca84:	cmp	x28, x21
   1ca88:	mov	x0, x20
   1ca8c:	b.eq	1ca9c <omp_get_place_proc_ids@@OMP_4.5+0x19c>  // b.none
   1ca90:	ldr	x0, [sp, #104]
   1ca94:	mov	w1, #0x2c                  	// #44
   1ca98:	strb	w1, [sp, #112]
   1ca9c:	mov	x21, x19
   1caa0:	mov	w27, #0x1                   	// #1
   1caa4:	mov	x2, x19
   1caa8:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1caac:	add	x1, x1, #0x28
   1cab0:	bl	8670 <sprintf@plt>
   1cab4:	mov	x0, x20
   1cab8:	bl	85f0 <strlen@plt>
   1cabc:	mov	x3, x20
   1cac0:	mov	x4, x0
   1cac4:	mov	x2, x25
   1cac8:	mov	x1, x24
   1cacc:	mov	x0, x23
   1cad0:	bl	26888 <omp_get_affinity_format@@OMP_5.0+0x88>
   1cad4:	cmp	x28, x19
   1cad8:	add	x19, x19, #0x1
   1cadc:	b.eq	1cb1c <omp_get_place_proc_ids@@OMP_4.5+0x21c>  // b.none
   1cae0:	cmp	x28, x19
   1cae4:	b.eq	1caf4 <omp_get_place_proc_ids@@OMP_4.5+0x1f4>  // b.none
   1cae8:	ldr	x0, [x22, #1704]
   1caec:	cmp	x0, x19, lsr #3
   1caf0:	b.hi	1ca70 <omp_get_place_proc_ids@@OMP_4.5+0x170>  // b.pmore
   1caf4:	cbz	w27, 1cad4 <omp_get_place_proc_ids@@OMP_4.5+0x1d4>
   1caf8:	add	x0, x21, #0x1
   1cafc:	mov	w27, #0x0                   	// #0
   1cb00:	cmp	x0, x19
   1cb04:	b.eq	1cad4 <omp_get_place_proc_ids@@OMP_4.5+0x1d4>  // b.none
   1cb08:	ldr	x1, [sp, #96]
   1cb0c:	sub	x2, x19, #0x1
   1cb10:	mov	x0, x20
   1cb14:	bl	8670 <sprintf@plt>
   1cb18:	b	1cab4 <omp_get_place_proc_ids@@OMP_4.5+0x1b4>
   1cb1c:	ldp	x19, x20, [sp, #16]
   1cb20:	ldp	x21, x22, [sp, #32]
   1cb24:	ldp	x23, x24, [sp, #48]
   1cb28:	ldp	x25, x26, [sp, #64]
   1cb2c:	ldp	x27, x28, [sp, #80]
   1cb30:	ldp	x29, x30, [sp], #144
   1cb34:	ret
   1cb38:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1cb3c:	stp	x21, x22, [sp, #32]
   1cb40:	ldr	x0, [x0, #1568]
   1cb44:	stp	x27, x28, [sp, #80]
   1cb48:	ldr	x26, [x0, x1, lsl #3]
   1cb4c:	b	1ca3c <omp_get_place_proc_ids@@OMP_4.5+0x13c>
   1cb50:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1cb54:	add	x19, sp, #0x70
   1cb58:	ldr	x2, [x0, #744]
   1cb5c:	cmp	x2, #0x1
   1cb60:	b.ls	1cbac <omp_get_place_proc_ids@@OMP_4.5+0x2ac>  // b.plast
   1cb64:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1cb68:	sub	x2, x2, #0x1
   1cb6c:	mov	x0, x19
   1cb70:	add	x1, x1, #0x38
   1cb74:	bl	8670 <sprintf@plt>
   1cb78:	mov	x0, x19
   1cb7c:	bl	85f0 <strlen@plt>
   1cb80:	mov	x3, x19
   1cb84:	mov	x4, x0
   1cb88:	mov	x2, x25
   1cb8c:	mov	x1, x24
   1cb90:	mov	x0, x23
   1cb94:	bl	26888 <omp_get_affinity_format@@OMP_5.0+0x88>
   1cb98:	ldp	x19, x20, [sp, #16]
   1cb9c:	ldp	x23, x24, [sp, #48]
   1cba0:	ldp	x25, x26, [sp, #64]
   1cba4:	ldp	x29, x30, [sp], #144
   1cba8:	ret
   1cbac:	mov	w0, #0x30                  	// #48
   1cbb0:	strh	w0, [sp, #112]
   1cbb4:	b	1cb78 <omp_get_place_proc_ids@@OMP_4.5+0x278>
   1cbb8:	sub	sp, sp, #0xa0
   1cbbc:	cmp	w3, #0x1
   1cbc0:	stp	x29, x30, [sp, #32]
   1cbc4:	add	x29, sp, #0x20
   1cbc8:	stp	x21, x22, [sp, #64]
   1cbcc:	mov	x21, x0
   1cbd0:	stp	x23, x24, [sp, #80]
   1cbd4:	mov	x23, x2
   1cbd8:	stp	x27, x28, [sp, #112]
   1cbdc:	mov	x28, x4
   1cbe0:	ldr	x24, [sp, #160]
   1cbe4:	b.eq	1cd2c <omp_get_place_proc_ids@@OMP_4.5+0x42c>  // b.none
   1cbe8:	stp	x19, x20, [sp, #48]
   1cbec:	b.le	1ce20 <omp_get_place_proc_ids@@OMP_4.5+0x520>
   1cbf0:	ldr	x19, [x7, #8]
   1cbf4:	umulh	x0, x2, x19
   1cbf8:	mul	x19, x2, x19
   1cbfc:	cbnz	x0, 1cd0c <omp_get_place_proc_ids@@OMP_4.5+0x40c>
   1cc00:	ldr	x20, [x24, #8]
   1cc04:	umulh	x0, x2, x20
   1cc08:	mul	x20, x2, x20
   1cc0c:	cbnz	x0, 1cd0c <omp_get_place_proc_ids@@OMP_4.5+0x40c>
   1cc10:	mov	x8, #0x2                   	// #2
   1cc14:	b	1cc3c <omp_get_place_proc_ids@@OMP_4.5+0x33c>
   1cc18:	ldr	x9, [x7, x8, lsl #3]
   1cc1c:	umulh	x10, x19, x9
   1cc20:	mul	x19, x19, x9
   1cc24:	cbnz	x10, 1cd0c <omp_get_place_proc_ids@@OMP_4.5+0x40c>
   1cc28:	ldr	x9, [x24, x8, lsl #3]
   1cc2c:	add	x8, x8, #0x1
   1cc30:	umulh	x10, x20, x9
   1cc34:	mul	x20, x20, x9
   1cc38:	cbnz	x10, 1cd0c <omp_get_place_proc_ids@@OMP_4.5+0x40c>
   1cc3c:	cmp	w3, w8
   1cc40:	b.gt	1cc18 <omp_get_place_proc_ids@@OMP_4.5+0x318>
   1cc44:	ldr	x8, [x5]
   1cc48:	umulh	x0, x19, x8
   1cc4c:	mul	x8, x19, x8
   1cc50:	cbnz	x0, 1cd0c <omp_get_place_proc_ids@@OMP_4.5+0x40c>
   1cc54:	ldr	x0, [x6]
   1cc58:	umulh	x2, x20, x0
   1cc5c:	mul	x0, x20, x0
   1cc60:	cmp	x2, #0x0
   1cc64:	cset	x22, ne  // ne = any
   1cc68:	b.ne	1cd0c <omp_get_place_proc_ids@@OMP_4.5+0x40c>  // b.any
   1cc6c:	ldr	x2, [x28]
   1cc70:	cbz	x2, 1cd00 <omp_get_place_proc_ids@@OMP_4.5+0x400>
   1cc74:	add	x2, x24, #0x8
   1cc78:	sub	w3, w3, #0x1
   1cc7c:	add	x7, x7, #0x8
   1cc80:	add	x21, x21, x8
   1cc84:	add	x24, x1, x0
   1cc88:	add	x27, x28, #0x8
   1cc8c:	stp	x25, x26, [sp, #96]
   1cc90:	add	x25, x5, #0x8
   1cc94:	add	x26, x6, #0x8
   1cc98:	str	x2, [sp, #152]
   1cc9c:	ldr	x0, [sp, #152]
   1cca0:	str	x0, [sp]
   1cca4:	ldr	x0, [sp, #168]
   1cca8:	str	x0, [sp, #8]
   1ccac:	ldr	x0, [sp, #176]
   1ccb0:	str	x0, [sp, #16]
   1ccb4:	mov	x6, x26
   1ccb8:	mov	x5, x25
   1ccbc:	mov	x4, x27
   1ccc0:	mov	x2, x23
   1ccc4:	mov	x1, x24
   1ccc8:	add	x22, x22, #0x1
   1cccc:	mov	x0, x21
   1ccd0:	str	w3, [sp, #140]
   1ccd4:	str	x7, [sp, #144]
   1ccd8:	bl	1cbb8 <omp_get_place_proc_ids@@OMP_4.5+0x2b8>
   1ccdc:	cbnz	w0, 1cdb0 <omp_get_place_proc_ids@@OMP_4.5+0x4b0>
   1cce0:	ldr	x0, [x28]
   1cce4:	add	x21, x21, x19
   1cce8:	ldr	w3, [sp, #140]
   1ccec:	add	x24, x24, x20
   1ccf0:	cmp	x0, x22
   1ccf4:	ldr	x7, [sp, #144]
   1ccf8:	b.hi	1cc9c <omp_get_place_proc_ids@@OMP_4.5+0x39c>  // b.pmore
   1ccfc:	ldp	x25, x26, [sp, #96]
   1cd00:	mov	w0, #0x0                   	// #0
   1cd04:	ldp	x19, x20, [sp, #48]
   1cd08:	b	1cd14 <omp_get_place_proc_ids@@OMP_4.5+0x414>
   1cd0c:	ldp	x19, x20, [sp, #48]
   1cd10:	mov	w0, #0x16                  	// #22
   1cd14:	ldp	x29, x30, [sp, #32]
   1cd18:	ldp	x21, x22, [sp, #64]
   1cd1c:	ldp	x23, x24, [sp, #80]
   1cd20:	ldp	x27, x28, [sp, #112]
   1cd24:	add	sp, sp, #0xa0
   1cd28:	ret
   1cd2c:	ldr	x2, [x4]
   1cd30:	umulh	x0, x23, x2
   1cd34:	mul	x2, x23, x2
   1cd38:	cbnz	x0, 1cd10 <omp_get_place_proc_ids@@OMP_4.5+0x410>
   1cd3c:	ldr	x0, [x5]
   1cd40:	umulh	x3, x23, x0
   1cd44:	mul	x4, x23, x0
   1cd48:	cbnz	x3, 1cd10 <omp_get_place_proc_ids@@OMP_4.5+0x410>
   1cd4c:	ldr	x0, [x6]
   1cd50:	umulh	x3, x23, x0
   1cd54:	mul	x23, x23, x0
   1cd58:	cbnz	x3, 1cd10 <omp_get_place_proc_ids@@OMP_4.5+0x410>
   1cd5c:	ldp	x0, x3, [sp, #168]
   1cd60:	orr	x0, x0, x3
   1cd64:	cbz	x0, 1cdbc <omp_get_place_proc_ids@@OMP_4.5+0x4bc>
   1cd68:	ldr	x0, [sp, #176]
   1cd6c:	cbz	x0, 1cdf8 <omp_get_place_proc_ids@@OMP_4.5+0x4f8>
   1cd70:	ldr	x0, [sp, #168]
   1cd74:	cbz	x0, 1cdd0 <omp_get_place_proc_ids@@OMP_4.5+0x4d0>
   1cd78:	ldp	x0, x3, [sp, #168]
   1cd7c:	cmp	x0, x3
   1cd80:	b.ne	1cd10 <omp_get_place_proc_ids@@OMP_4.5+0x410>  // b.any
   1cd84:	mov	x3, x2
   1cd88:	ldr	w0, [x0, #12]
   1cd8c:	ldr	x2, [sp, #168]
   1cd90:	ldr	x5, [x2, #128]
   1cd94:	add	x2, x1, x23
   1cd98:	add	x1, x21, x4
   1cd9c:	blr	x5
   1cda0:	and	w1, w0, #0xff
   1cda4:	mov	w0, #0x0                   	// #0
   1cda8:	cbnz	w1, 1cd14 <omp_get_place_proc_ids@@OMP_4.5+0x414>
   1cdac:	b	1cd10 <omp_get_place_proc_ids@@OMP_4.5+0x410>
   1cdb0:	ldp	x19, x20, [sp, #48]
   1cdb4:	ldp	x25, x26, [sp, #96]
   1cdb8:	b	1cd14 <omp_get_place_proc_ids@@OMP_4.5+0x414>
   1cdbc:	add	x1, x1, x23
   1cdc0:	add	x0, x21, x4
   1cdc4:	bl	85c0 <memcpy@plt>
   1cdc8:	mov	w0, #0x0                   	// #0
   1cdcc:	b	1cd14 <omp_get_place_proc_ids@@OMP_4.5+0x414>
   1cdd0:	mov	x3, x2
   1cdd4:	ldr	x0, [sp, #176]
   1cdd8:	ldr	x2, [sp, #176]
   1cddc:	ldr	w0, [x0, #12]
   1cde0:	ldr	x5, [x2, #112]
   1cde4:	add	x2, x1, x23
   1cde8:	add	x1, x21, x4
   1cdec:	blr	x5
   1cdf0:	and	w1, w0, #0xff
   1cdf4:	b	1cda4 <omp_get_place_proc_ids@@OMP_4.5+0x4a4>
   1cdf8:	mov	x3, x2
   1cdfc:	ldr	x0, [sp, #168]
   1ce00:	ldr	x2, [sp, #168]
   1ce04:	ldr	w0, [x0, #12]
   1ce08:	ldr	x5, [x2, #120]
   1ce0c:	add	x2, x1, x23
   1ce10:	add	x1, x21, x4
   1ce14:	blr	x5
   1ce18:	and	w1, w0, #0xff
   1ce1c:	b	1cda4 <omp_get_place_proc_ids@@OMP_4.5+0x4a4>
   1ce20:	mov	x20, x2
   1ce24:	mov	x19, x2
   1ce28:	b	1cc44 <omp_get_place_proc_ids@@OMP_4.5+0x344>
   1ce2c:	nop
   1ce30:	stp	x29, x30, [sp, #-32]!
   1ce34:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1ce38:	mov	x0, #0x0                   	// #0
   1ce3c:	mov	x29, sp
   1ce40:	str	wzr, [x1, #1384]
   1ce44:	str	x19, [sp, #16]
   1ce48:	add	x19, x1, #0x568
   1ce4c:	bl	8760 <malloc@plt>
   1ce50:	mov	x1, x0
   1ce54:	adrp	x0, 1d000 <omp_get_place_proc_ids@@OMP_4.5+0x700>
   1ce58:	add	x0, x0, #0x40
   1ce5c:	str	wzr, [x19, #4]
   1ce60:	str	x1, [x19, #8]
   1ce64:	bl	27318 <omp_get_team_num@@OMP_4.0+0x10>
   1ce68:	cbnz	w0, 1ce78 <omp_get_place_proc_ids@@OMP_4.5+0x578>
   1ce6c:	ldr	x19, [sp, #16]
   1ce70:	ldp	x29, x30, [sp], #32
   1ce74:	ret
   1ce78:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1ce7c:	add	x0, x0, #0x48
   1ce80:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1ce84:	nop
   1ce88:	mov	x1, x0
   1ce8c:	ldxr	w2, [x1]
   1ce90:	stlxr	w3, wzr, [x1]
   1ce94:	cbnz	w3, 1ce8c <omp_get_place_proc_ids@@OMP_4.5+0x58c>
   1ce98:	tbnz	w2, #31, 1cea0 <omp_get_place_proc_ids@@OMP_4.5+0x5a0>
   1ce9c:	ret
   1cea0:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1cea4:	nop
   1cea8:	stp	x29, x30, [sp, #-144]!
   1ceac:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1ceb0:	adrp	x4, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1ceb4:	ldr	x4, [x4, #4016]
   1ceb8:	mov	x29, sp
   1cebc:	str	x19, [sp, #16]
   1cec0:	mrs	x19, tpidr_el0
   1cec4:	add	x2, x19, x4
   1cec8:	ldr	x5, [x3, #1568]
   1cecc:	mov	x3, x0
   1ced0:	ldp	x6, x7, [x2]
   1ced4:	stp	x6, x7, [sp, #40]
   1ced8:	mov	x0, x1
   1cedc:	ldp	x6, x7, [x2, #16]
   1cee0:	stp	x6, x7, [sp, #56]
   1cee4:	ldr	w8, [x2, #92]
   1cee8:	ldp	x6, x7, [x2, #32]
   1ceec:	stp	x6, x7, [sp, #72]
   1cef0:	ldp	x6, x7, [x2, #48]
   1cef4:	stp	x6, x7, [sp, #88]
   1cef8:	ldp	x6, x7, [x2, #64]
   1cefc:	stp	x6, x7, [sp, #104]
   1cf00:	ldp	x6, x7, [x2, #80]
   1cf04:	stp	xzr, xzr, [x2]
   1cf08:	ldr	x1, [x2, #96]
   1cf0c:	stp	xzr, xzr, [x2, #16]
   1cf10:	stp	xzr, xzr, [x2, #32]
   1cf14:	stp	xzr, xzr, [x2, #48]
   1cf18:	stp	xzr, xzr, [x2, #64]
   1cf1c:	stp	xzr, xzr, [x2, #80]
   1cf20:	str	xzr, [x2, #96]
   1cf24:	stp	x6, x7, [sp, #120]
   1cf28:	str	x1, [sp, #136]
   1cf2c:	cbz	x5, 1cf40 <omp_get_place_proc_ids@@OMP_4.5+0x640>
   1cf30:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1cf34:	str	w8, [x2, #92]
   1cf38:	ldr	x1, [x1, #1608]
   1cf3c:	str	w1, [x2, #56]
   1cf40:	add	x19, x19, x4
   1cf44:	blr	x3
   1cf48:	mov	x0, x19
   1cf4c:	bl	19500 <omp_in_final@@OMP_3.1+0x14d8>
   1cf50:	ldp	x0, x1, [sp, #40]
   1cf54:	stp	x0, x1, [x19]
   1cf58:	ldp	x0, x1, [sp, #56]
   1cf5c:	stp	x0, x1, [x19, #16]
   1cf60:	ldp	x0, x1, [sp, #72]
   1cf64:	stp	x0, x1, [x19, #32]
   1cf68:	ldp	x0, x1, [sp, #88]
   1cf6c:	stp	x0, x1, [x19, #48]
   1cf70:	ldp	x0, x1, [sp, #104]
   1cf74:	stp	x0, x1, [x19, #64]
   1cf78:	ldp	x0, x1, [sp, #120]
   1cf7c:	stp	x0, x1, [x19, #80]
   1cf80:	ldr	x0, [sp, #136]
   1cf84:	str	x0, [x19, #96]
   1cf88:	ldr	x19, [sp, #16]
   1cf8c:	ldp	x29, x30, [sp], #144
   1cf90:	ret
   1cf94:	nop
   1cf98:	stp	x29, x30, [sp, #-32]!
   1cf9c:	mov	x29, sp
   1cfa0:	stp	x19, x20, [sp, #16]
   1cfa4:	mov	x19, x0
   1cfa8:	ldr	w0, [x0, #12]
   1cfac:	mov	x20, x1
   1cfb0:	ldr	x2, [x19, #104]
   1cfb4:	blr	x2
   1cfb8:	tst	w0, #0xff
   1cfbc:	b.eq	1cfcc <omp_get_place_proc_ids@@OMP_4.5+0x6cc>  // b.none
   1cfc0:	ldp	x19, x20, [sp, #16]
   1cfc4:	ldp	x29, x30, [sp], #32
   1cfc8:	ret
   1cfcc:	add	x0, x19, #0xa8
   1cfd0:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1cfd4:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1cfd8:	mov	x1, x20
   1cfdc:	add	x0, x0, #0x58
   1cfe0:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1cfe4:	nop
   1cfe8:	stp	x29, x30, [sp, #-32]!
   1cfec:	mov	x29, sp
   1cff0:	str	x19, [sp, #16]
   1cff4:	mov	x19, x0
   1cff8:	ldr	x0, [x0, #24]
   1cffc:	cbnz	x0, 1d018 <omp_get_place_proc_ids@@OMP_4.5+0x718>
   1d000:	ldr	x0, [x19, #8]
   1d004:	bl	8900 <free@plt>
   1d008:	mov	x0, x19
   1d00c:	ldr	x19, [sp, #16]
   1d010:	ldp	x29, x30, [sp], #32
   1d014:	b	8900 <free@plt>
   1d018:	ldr	x1, [x19, #32]
   1d01c:	ldr	x0, [x19, #56]
   1d020:	bl	1cf98 <omp_get_place_proc_ids@@OMP_4.5+0x698>
   1d024:	ldr	x0, [x19, #8]
   1d028:	bl	8900 <free@plt>
   1d02c:	mov	x0, x19
   1d030:	ldr	x19, [sp, #16]
   1d034:	ldp	x29, x30, [sp], #32
   1d038:	b	8900 <free@plt>
   1d03c:	nop
   1d040:	stp	x29, x30, [sp, #-80]!
   1d044:	mov	x29, sp
   1d048:	stp	x23, x24, [sp, #48]
   1d04c:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1d050:	ldr	w0, [x23, #1384]
   1d054:	cmp	w0, #0x0
   1d058:	b.le	1d144 <omp_get_place_proc_ids@@OMP_4.5+0x844>
   1d05c:	add	x23, x23, #0x568
   1d060:	mov	w24, #0x2                   	// #2
   1d064:	stp	x19, x20, [sp, #16]
   1d068:	stp	x21, x22, [sp, #32]
   1d06c:	mov	x21, #0x0                   	// #0
   1d070:	mov	w22, #0x0                   	// #0
   1d074:	str	x25, [sp, #64]
   1d078:	mov	w25, #0x1                   	// #1
   1d07c:	b	1d0a4 <omp_get_place_proc_ids@@OMP_4.5+0x7a4>
   1d080:	ldxr	w0, [x20]
   1d084:	stlxr	w1, wzr, [x20]
   1d088:	cbnz	w1, 1d080 <omp_get_place_proc_ids@@OMP_4.5+0x780>
   1d08c:	tbnz	w0, #31, 1d118 <omp_get_place_proc_ids@@OMP_4.5+0x818>
   1d090:	ldr	w0, [x23]
   1d094:	add	w22, w22, #0x1
   1d098:	add	x21, x21, #0x130
   1d09c:	cmp	w0, w22
   1d0a0:	b.le	1d138 <omp_get_place_proc_ids@@OMP_4.5+0x838>
   1d0a4:	ldr	x19, [x23, #8]
   1d0a8:	add	x19, x19, x21
   1d0ac:	add	x20, x19, #0xa8
   1d0b0:	ldaxr	w1, [x20]
   1d0b4:	cbnz	w1, 1d0c0 <omp_get_place_proc_ids@@OMP_4.5+0x7c0>
   1d0b8:	stxr	w0, w25, [x20]
   1d0bc:	cbnz	w0, 1d0b0 <omp_get_place_proc_ids@@OMP_4.5+0x7b0>
   1d0c0:	cmp	w1, #0x0
   1d0c4:	b.ne	1d150 <omp_get_place_proc_ids@@OMP_4.5+0x850>  // b.any
   1d0c8:	ldr	w0, [x19, #172]
   1d0cc:	cmp	w0, #0x1
   1d0d0:	b.ne	1d080 <omp_get_place_proc_ids@@OMP_4.5+0x780>  // b.any
   1d0d4:	ldr	w0, [x19, #12]
   1d0d8:	ldr	x1, [x19, #64]
   1d0dc:	blr	x1
   1d0e0:	str	w24, [x19, #172]
   1d0e4:	and	w19, w0, #0xff
   1d0e8:	ldxr	w0, [x20]
   1d0ec:	stlxr	w1, wzr, [x20]
   1d0f0:	cbnz	w1, 1d0e8 <omp_get_place_proc_ids@@OMP_4.5+0x7e8>
   1d0f4:	tbnz	w0, #31, 1d108 <omp_get_place_proc_ids@@OMP_4.5+0x808>
   1d0f8:	cbnz	w19, 1d090 <omp_get_place_proc_ids@@OMP_4.5+0x790>
   1d0fc:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d100:	add	x0, x0, #0x88
   1d104:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1d108:	mov	x0, x20
   1d10c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1d110:	cbnz	w19, 1d090 <omp_get_place_proc_ids@@OMP_4.5+0x790>
   1d114:	b	1d0fc <omp_get_place_proc_ids@@OMP_4.5+0x7fc>
   1d118:	mov	x0, x20
   1d11c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1d120:	ldr	w0, [x23]
   1d124:	add	w22, w22, #0x1
   1d128:	add	x21, x21, #0x130
   1d12c:	cmp	w0, w22
   1d130:	b.gt	1d0a4 <omp_get_place_proc_ids@@OMP_4.5+0x7a4>
   1d134:	nop
   1d138:	ldp	x19, x20, [sp, #16]
   1d13c:	ldp	x21, x22, [sp, #32]
   1d140:	ldr	x25, [sp, #64]
   1d144:	ldp	x23, x24, [sp, #48]
   1d148:	ldp	x29, x30, [sp], #80
   1d14c:	ret
   1d150:	mov	x0, x20
   1d154:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   1d158:	b	1d0c8 <omp_get_place_proc_ids@@OMP_4.5+0x7c8>
   1d15c:	nop
   1d160:	stp	x29, x30, [sp, #-48]!
   1d164:	mov	x29, sp
   1d168:	stp	x19, x20, [sp, #16]
   1d16c:	mov	x19, x0
   1d170:	mov	x20, x3
   1d174:	stp	x21, x22, [sp, #32]
   1d178:	mov	x21, x1
   1d17c:	mov	x22, x2
   1d180:	cbz	x4, 1d1f8 <omp_get_place_proc_ids@@OMP_4.5+0x8f8>
   1d184:	ldp	x1, x12, [x4, #8]
   1d188:	ldr	x7, [x4, #24]
   1d18c:	add	x0, x12, x7, lsl #4
   1d190:	ldr	x10, [x1, #16]
   1d194:	ldur	x0, [x0, #-8]
   1d198:	sub	x10, x21, x10
   1d19c:	cmp	x0, x10
   1d1a0:	b.ls	1d1f8 <omp_get_place_proc_ids@@OMP_4.5+0x8f8>  // b.plast
   1d1a4:	subs	x7, x7, #0x1
   1d1a8:	b.mi	1d1f8 <omp_get_place_proc_ids@@OMP_4.5+0x8f8>  // b.first
   1d1ac:	mov	x8, #0x0                   	// #0
   1d1b0:	b	1d1c0 <omp_get_place_proc_ids@@OMP_4.5+0x8c0>
   1d1b4:	add	x8, x6, #0x1
   1d1b8:	cmp	x7, x8
   1d1bc:	b.lt	1d1f8 <omp_get_place_proc_ids@@OMP_4.5+0x8f8>  // b.tstop
   1d1c0:	add	x6, x7, x8
   1d1c4:	asr	x6, x6, #1
   1d1c8:	lsl	x9, x6, #4
   1d1cc:	add	x11, x12, x9
   1d1d0:	ldr	x11, [x11, #8]
   1d1d4:	cmp	x11, x10
   1d1d8:	b.ls	1d1b4 <omp_get_place_proc_ids@@OMP_4.5+0x8b4>  // b.plast
   1d1dc:	ldr	x7, [x12, x9]
   1d1e0:	cmp	x7, x10
   1d1e4:	b.ls	1d228 <omp_get_place_proc_ids@@OMP_4.5+0x928>  // b.plast
   1d1e8:	sub	x7, x6, #0x1
   1d1ec:	cmp	x7, x8
   1d1f0:	b.ge	1d1c0 <omp_get_place_proc_ids@@OMP_4.5+0x8c0>  // b.tcont
   1d1f4:	nop
   1d1f8:	ldr	w0, [x19, #12]
   1d1fc:	mov	x3, x20
   1d200:	ldr	x4, [x19, #120]
   1d204:	mov	x2, x22
   1d208:	mov	x1, x21
   1d20c:	blr	x4
   1d210:	tst	w0, #0xff
   1d214:	b.eq	1d25c <omp_get_place_proc_ids@@OMP_4.5+0x95c>  // b.none
   1d218:	ldp	x19, x20, [sp, #16]
   1d21c:	ldp	x21, x22, [sp, #32]
   1d220:	ldp	x29, x30, [sp], #48
   1d224:	ret
   1d228:	add	x0, x10, x20
   1d22c:	cmp	x11, x0
   1d230:	b.cc	1d290 <omp_get_place_proc_ids@@OMP_4.5+0x990>  // b.lo, b.ul, b.last
   1d234:	ldr	x1, [x12]
   1d238:	mov	x2, x20
   1d23c:	ldp	x19, x20, [sp, #16]
   1d240:	sub	x10, x10, x1
   1d244:	mov	x1, x22
   1d248:	ldp	x21, x22, [sp, #32]
   1d24c:	ldp	x29, x30, [sp], #48
   1d250:	ldr	x0, [x4]
   1d254:	add	x0, x0, x10
   1d258:	b	85c0 <memcpy@plt>
   1d25c:	add	x0, x19, #0xa8
   1d260:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1d264:	adrp	x4, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d268:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d26c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d270:	add	x6, x21, x20
   1d274:	add	x4, x4, #0xc8
   1d278:	add	x1, x1, #0x8c8
   1d27c:	mov	x5, x21
   1d280:	add	x0, x0, #0xd0
   1d284:	add	x3, x22, x20
   1d288:	mov	x2, x22
   1d28c:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1d290:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d294:	add	x0, x0, #0xa8
   1d298:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1d29c:	nop
   1d2a0:	stp	x29, x30, [sp, #-144]!
   1d2a4:	mov	x29, sp
   1d2a8:	stp	x19, x20, [sp, #16]
   1d2ac:	mov	x19, x0
   1d2b0:	stp	x21, x22, [sp, #32]
   1d2b4:	mov	x21, x2
   1d2b8:	stp	x23, x24, [sp, #48]
   1d2bc:	str	x1, [sp, #88]
   1d2c0:	ldr	x23, [x0, #56]
   1d2c4:	cbz	x1, 1d368 <omp_get_place_proc_ids@@OMP_4.5+0xa68>
   1d2c8:	add	x5, x1, x3
   1d2cc:	add	x24, sp, #0x58
   1d2d0:	add	x2, x5, #0x1
   1d2d4:	str	x25, [sp, #64]
   1d2d8:	add	x25, x23, #0xa0
   1d2dc:	mov	x20, x3
   1d2e0:	mov	x22, x4
   1d2e4:	mov	x1, x24
   1d2e8:	mov	x0, x25
   1d2ec:	stp	x5, x2, [sp, #88]
   1d2f0:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1d2f4:	ldr	x3, [sp, #96]
   1d2f8:	mov	x5, x0
   1d2fc:	sub	x3, x3, #0x1
   1d300:	str	x3, [sp, #96]
   1d304:	cbz	x0, 1d398 <omp_get_place_proc_ids@@OMP_4.5+0xa98>
   1d308:	ldr	x6, [sp, #88]
   1d30c:	mov	x4, x22
   1d310:	ldr	x1, [x5, #16]
   1d314:	add	x2, x24, #0x18
   1d318:	ldr	x3, [x5]
   1d31c:	mov	x0, x23
   1d320:	ldr	x1, [x1, #16]
   1d324:	sub	x6, x6, x3
   1d328:	ldr	x3, [x5, #24]
   1d32c:	add	x5, x6, x1
   1d330:	ldr	x1, [x19, #16]
   1d334:	sub	x20, x3, x20
   1d338:	add	x20, x5, x20
   1d33c:	mov	x3, #0x8                   	// #8
   1d340:	add	x1, x21, x1
   1d344:	str	x6, [sp, #88]
   1d348:	str	x20, [sp, #112]
   1d34c:	bl	1d160 <omp_get_place_proc_ids@@OMP_4.5+0x860>
   1d350:	ldp	x19, x20, [sp, #16]
   1d354:	ldp	x21, x22, [sp, #32]
   1d358:	ldp	x23, x24, [sp, #48]
   1d35c:	ldr	x25, [sp, #64]
   1d360:	ldp	x29, x30, [sp], #144
   1d364:	ret
   1d368:	ldr	x1, [x19, #16]
   1d36c:	mov	x0, x23
   1d370:	add	x2, sp, #0x70
   1d374:	mov	x3, #0x8                   	// #8
   1d378:	add	x1, x21, x1
   1d37c:	str	xzr, [sp, #112]
   1d380:	bl	1d160 <omp_get_place_proc_ids@@OMP_4.5+0x860>
   1d384:	ldp	x19, x20, [sp, #16]
   1d388:	ldp	x21, x22, [sp, #32]
   1d38c:	ldp	x23, x24, [sp, #48]
   1d390:	ldp	x29, x30, [sp], #144
   1d394:	ret
   1d398:	ldr	x2, [sp, #88]
   1d39c:	mov	x1, x24
   1d3a0:	mov	x0, x25
   1d3a4:	sub	x2, x2, #0x1
   1d3a8:	str	x2, [sp, #88]
   1d3ac:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1d3b0:	mov	x5, x0
   1d3b4:	ldr	x6, [sp, #88]
   1d3b8:	add	x6, x6, #0x1
   1d3bc:	str	x6, [sp, #88]
   1d3c0:	cbnz	x0, 1d30c <omp_get_place_proc_ids@@OMP_4.5+0xa0c>
   1d3c4:	mov	x0, x25
   1d3c8:	mov	x1, x24
   1d3cc:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1d3d0:	mov	x5, x0
   1d3d4:	cbnz	x0, 1d308 <omp_get_place_proc_ids@@OMP_4.5+0xa08>
   1d3d8:	add	x0, x23, #0xa8
   1d3dc:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1d3e0:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d3e4:	add	x0, x0, #0x110
   1d3e8:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1d3ec:	nop
   1d3f0:	stp	x29, x30, [sp, #-48]!
   1d3f4:	add	x0, x0, #0xa8
   1d3f8:	mov	x29, sp
   1d3fc:	stp	x19, x20, [sp, #16]
   1d400:	mov	x19, x1
   1d404:	mov	x20, x2
   1d408:	ldxr	w1, [x0]
   1d40c:	stlxr	w2, wzr, [x0]
   1d410:	cbnz	w2, 1d408 <omp_get_place_proc_ids@@OMP_4.5+0xb08>
   1d414:	tbnz	w1, #31, 1d430 <omp_get_place_proc_ids@@OMP_4.5+0xb30>
   1d418:	ldr	x2, [x3]
   1d41c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d420:	ldp	x3, x4, [x19]
   1d424:	add	x0, x0, #0x140
   1d428:	ldr	x1, [x20]
   1d42c:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1d430:	str	x3, [sp, #40]
   1d434:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1d438:	ldr	x3, [sp, #40]
   1d43c:	b	1d418 <omp_get_place_proc_ids@@OMP_4.5+0xb18>
   1d440:	stp	x29, x30, [sp, #-112]!
   1d444:	mov	x29, sp
   1d448:	str	x21, [sp, #32]
   1d44c:	mov	x21, x1
   1d450:	stp	x19, x20, [sp, #16]
   1d454:	mov	x19, x0
   1d458:	add	x20, x0, #0xa8
   1d45c:	mov	w0, #0x1                   	// #1
   1d460:	ldaxr	w1, [x20]
   1d464:	cbnz	w1, 1d470 <omp_get_place_proc_ids@@OMP_4.5+0xb70>
   1d468:	stxr	w2, w0, [x20]
   1d46c:	cbnz	w2, 1d460 <omp_get_place_proc_ids@@OMP_4.5+0xb60>
   1d470:	cmp	w1, #0x0
   1d474:	b.ne	1d504 <omp_get_place_proc_ids@@OMP_4.5+0xc04>  // b.any
   1d478:	ldr	w0, [x19, #172]
   1d47c:	cmp	w0, #0x2
   1d480:	b.eq	1d4c4 <omp_get_place_proc_ids@@OMP_4.5+0xbc4>  // b.none
   1d484:	add	x2, x21, #0x1
   1d488:	add	x0, x19, #0xa0
   1d48c:	add	x1, sp, #0x38
   1d490:	stp	x21, x2, [sp, #56]
   1d494:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1d498:	mov	x19, x0
   1d49c:	ldxr	w0, [x20]
   1d4a0:	stlxr	w1, wzr, [x20]
   1d4a4:	cbnz	w1, 1d49c <omp_get_place_proc_ids@@OMP_4.5+0xb9c>
   1d4a8:	tbnz	w0, #31, 1d4e8 <omp_get_place_proc_ids@@OMP_4.5+0xbe8>
   1d4ac:	cbz	x19, 1d4d4 <omp_get_place_proc_ids@@OMP_4.5+0xbd4>
   1d4b0:	ldr	x0, [x19, #24]
   1d4b4:	ldp	x19, x20, [sp, #16]
   1d4b8:	ldr	x21, [sp, #32]
   1d4bc:	ldp	x29, x30, [sp], #112
   1d4c0:	ret
   1d4c4:	ldxr	w0, [x20]
   1d4c8:	stlxr	w1, wzr, [x20]
   1d4cc:	cbnz	w1, 1d4c4 <omp_get_place_proc_ids@@OMP_4.5+0xbc4>
   1d4d0:	tbnz	w0, #31, 1d4f4 <omp_get_place_proc_ids@@OMP_4.5+0xbf4>
   1d4d4:	mov	x0, #0x0                   	// #0
   1d4d8:	ldp	x19, x20, [sp, #16]
   1d4dc:	ldr	x21, [sp, #32]
   1d4e0:	ldp	x29, x30, [sp], #112
   1d4e4:	ret
   1d4e8:	mov	x0, x20
   1d4ec:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1d4f0:	b	1d4ac <omp_get_place_proc_ids@@OMP_4.5+0xbac>
   1d4f4:	mov	x0, x20
   1d4f8:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1d4fc:	mov	x0, #0x0                   	// #0
   1d500:	b	1d4d8 <omp_get_place_proc_ids@@OMP_4.5+0xbd8>
   1d504:	mov	x0, x20
   1d508:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   1d50c:	b	1d478 <omp_get_place_proc_ids@@OMP_4.5+0xb78>
   1d510:	stp	x29, x30, [sp, #-208]!
   1d514:	mov	x29, sp
   1d518:	stp	x19, x20, [sp, #16]
   1d51c:	mov	x20, x0
   1d520:	mov	w0, #0x7                   	// #7
   1d524:	stp	x21, x22, [sp, #32]
   1d528:	mov	w22, #0xff                  	// #255
   1d52c:	stp	x25, x26, [sp, #64]
   1d530:	ands	w26, w5, #0xff
   1d534:	csel	w22, w22, w0, ne  // ne = any
   1d538:	str	x4, [sp, #104]
   1d53c:	cmp	x20, #0x0
   1d540:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1d544:	b.eq	1d6c0 <omp_get_place_proc_ids@@OMP_4.5+0xdc0>  // b.none
   1d548:	add	x0, x20, #0xa8
   1d54c:	stp	x23, x24, [sp, #48]
   1d550:	mov	x23, x3
   1d554:	stp	x27, x28, [sp, #80]
   1d558:	mov	x27, x1
   1d55c:	mov	x21, x2
   1d560:	mov	x2, x0
   1d564:	mov	w0, #0x1                   	// #1
   1d568:	str	x2, [sp, #112]
   1d56c:	ldaxr	w1, [x2]
   1d570:	cbnz	w1, 1d57c <omp_get_place_proc_ids@@OMP_4.5+0xc7c>
   1d574:	stxr	w3, w0, [x2]
   1d578:	cbnz	w3, 1d56c <omp_get_place_proc_ids@@OMP_4.5+0xc6c>
   1d57c:	cmp	w1, #0x0
   1d580:	b.ne	1d7a8 <omp_get_place_proc_ids@@OMP_4.5+0xea8>  // b.any
   1d584:	ldr	w0, [x20, #172]
   1d588:	mov	x19, #0x0                   	// #0
   1d58c:	cmp	w0, #0x2
   1d590:	b.eq	1d74c <omp_get_place_proc_ids@@OMP_4.5+0xe4c>  // b.none
   1d594:	add	x25, sp, #0x98
   1d598:	add	x24, x20, #0xa0
   1d59c:	b	1d5ac <omp_get_place_proc_ids@@OMP_4.5+0xcac>
   1d5a0:	add	x19, x19, #0x1
   1d5a4:	cmp	x27, x19
   1d5a8:	b.ls	1d6a4 <omp_get_place_proc_ids@@OMP_4.5+0xda4>  // b.plast
   1d5ac:	ldr	x2, [x23, x19, lsl #3]
   1d5b0:	cbz	x2, 1d5a0 <omp_get_place_proc_ids@@OMP_4.5+0xca0>
   1d5b4:	ldr	x4, [x21, x19, lsl #3]
   1d5b8:	mov	x1, x25
   1d5bc:	mov	x0, x24
   1d5c0:	add	x2, x2, x4
   1d5c4:	stp	x4, x2, [sp, #152]
   1d5c8:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1d5cc:	mov	x28, x0
   1d5d0:	cbz	x0, 1d5a0 <omp_get_place_proc_ids@@OMP_4.5+0xca0>
   1d5d4:	sxtw	x0, w19
   1d5d8:	ldr	x1, [sp, #104]
   1d5dc:	cbz	w26, 1d6d4 <omp_get_place_proc_ids@@OMP_4.5+0xdd4>
   1d5e0:	ldrh	w5, [x1, x0, lsl #1]
   1d5e4:	ldr	x1, [x28]
   1d5e8:	ldr	x8, [sp, #152]
   1d5ec:	cmp	x1, x8
   1d5f0:	b.hi	1d774 <omp_get_place_proc_ids@@OMP_4.5+0xe74>  // b.pmore
   1d5f4:	ldr	x0, [x28, #8]
   1d5f8:	ldr	x3, [sp, #160]
   1d5fc:	cmp	x0, x3
   1d600:	b.cc	1d774 <omp_get_place_proc_ids@@OMP_4.5+0xe74>  // b.lo, b.ul, b.last
   1d604:	ldp	x2, x0, [x28, #16]
   1d608:	and	w5, w22, w5
   1d60c:	mov	w4, #0xd                   	// #13
   1d610:	and	w4, w5, w4
   1d614:	sub	x3, x3, x8
   1d618:	cmp	w4, #0x1
   1d61c:	ldr	x2, [x2, #16]
   1d620:	add	x0, x8, x0
   1d624:	sub	x2, x2, x1
   1d628:	add	x28, x2, x0
   1d62c:	b.eq	1d6dc <omp_get_place_proc_ids@@OMP_4.5+0xddc>  // b.none
   1d630:	and	w5, w5, #0xe
   1d634:	cmp	w5, #0x2
   1d638:	b.ne	1d5a0 <omp_get_place_proc_ids@@OMP_4.5+0xca0>  // b.any
   1d63c:	ldr	w0, [x20, #12]
   1d640:	mov	x1, x8
   1d644:	ldr	x4, [x20, #112]
   1d648:	mov	x2, x28
   1d64c:	stp	x8, x3, [sp, #120]
   1d650:	blr	x4
   1d654:	tst	w0, #0xff
   1d658:	ldp	x8, x3, [sp, #120]
   1d65c:	b.ne	1d5a0 <omp_get_place_proc_ids@@OMP_4.5+0xca0>  // b.any
   1d660:	ldr	x0, [sp, #112]
   1d664:	str	x8, [sp, #104]
   1d668:	str	x3, [sp, #120]
   1d66c:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1d670:	ldr	x8, [sp, #104]
   1d674:	adrp	x4, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d678:	ldr	x3, [sp, #120]
   1d67c:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d680:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d684:	add	x4, x4, #0x8c8
   1d688:	add	x6, x8, x3
   1d68c:	add	x1, x1, #0xc8
   1d690:	add	x0, x0, #0xd0
   1d694:	mov	x2, x28
   1d698:	mov	x5, x8
   1d69c:	add	x3, x28, x3
   1d6a0:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1d6a4:	ldr	x1, [sp, #112]
   1d6a8:	ldxr	w0, [x1]
   1d6ac:	stlxr	w2, wzr, [x1]
   1d6b0:	cbnz	w2, 1d6a8 <omp_get_place_proc_ids@@OMP_4.5+0xda8>
   1d6b4:	tbnz	w0, #31, 1d760 <omp_get_place_proc_ids@@OMP_4.5+0xe60>
   1d6b8:	ldp	x23, x24, [sp, #48]
   1d6bc:	ldp	x27, x28, [sp, #80]
   1d6c0:	ldp	x19, x20, [sp, #16]
   1d6c4:	ldp	x21, x22, [sp, #32]
   1d6c8:	ldp	x25, x26, [sp, #64]
   1d6cc:	ldp	x29, x30, [sp], #208
   1d6d0:	ret
   1d6d4:	ldrb	w5, [x1, x0]
   1d6d8:	b	1d5e4 <omp_get_place_proc_ids@@OMP_4.5+0xce4>
   1d6dc:	ldr	w0, [x20, #12]
   1d6e0:	mov	x2, x8
   1d6e4:	ldr	x4, [x20, #120]
   1d6e8:	mov	x1, x28
   1d6ec:	stp	x8, x3, [sp, #120]
   1d6f0:	str	w5, [sp, #140]
   1d6f4:	blr	x4
   1d6f8:	ldr	w5, [sp, #140]
   1d6fc:	tst	w0, #0xff
   1d700:	ldp	x8, x3, [sp, #120]
   1d704:	b.ne	1d630 <omp_get_place_proc_ids@@OMP_4.5+0xd30>  // b.any
   1d708:	ldr	x0, [sp, #112]
   1d70c:	str	x8, [sp, #104]
   1d710:	str	x3, [sp, #120]
   1d714:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1d718:	ldr	x8, [sp, #104]
   1d71c:	adrp	x4, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d720:	ldr	x3, [sp, #120]
   1d724:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d728:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d72c:	add	x4, x4, #0xc8
   1d730:	add	x6, x28, x3
   1d734:	add	x1, x1, #0x8c8
   1d738:	mov	x5, x28
   1d73c:	add	x0, x0, #0xd0
   1d740:	add	x3, x8, x3
   1d744:	mov	x2, x8
   1d748:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1d74c:	ldr	x1, [sp, #112]
   1d750:	ldxr	w0, [x1]
   1d754:	stlxr	w2, wzr, [x1]
   1d758:	cbnz	w2, 1d750 <omp_get_place_proc_ids@@OMP_4.5+0xe50>
   1d75c:	tbz	w0, #31, 1d6b8 <omp_get_place_proc_ids@@OMP_4.5+0xdb8>
   1d760:	ldr	x0, [sp, #112]
   1d764:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1d768:	ldp	x23, x24, [sp, #48]
   1d76c:	ldp	x27, x28, [sp, #80]
   1d770:	b	1d6c0 <omp_get_place_proc_ids@@OMP_4.5+0xdc0>
   1d774:	ldr	x1, [sp, #112]
   1d778:	ldxr	w0, [x1]
   1d77c:	stlxr	w2, wzr, [x1]
   1d780:	cbnz	w2, 1d778 <omp_get_place_proc_ids@@OMP_4.5+0xe78>
   1d784:	tbnz	w0, #31, 1d79c <omp_get_place_proc_ids@@OMP_4.5+0xe9c>
   1d788:	ldp	x3, x4, [x28]
   1d78c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d790:	ldp	x1, x2, [sp, #152]
   1d794:	add	x0, x0, #0x190
   1d798:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1d79c:	ldr	x0, [sp, #112]
   1d7a0:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1d7a4:	b	1d788 <omp_get_place_proc_ids@@OMP_4.5+0xe88>
   1d7a8:	ldr	x0, [sp, #112]
   1d7ac:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   1d7b0:	b	1d584 <omp_get_place_proc_ids@@OMP_4.5+0xc84>
   1d7b4:	nop
   1d7b8:	stp	x29, x30, [sp, #-144]!
   1d7bc:	mov	x5, x2
   1d7c0:	mov	x2, x3
   1d7c4:	mov	x29, sp
   1d7c8:	stp	x23, x24, [sp, #48]
   1d7cc:	mov	x23, x0
   1d7d0:	and	w0, w4, #0xff
   1d7d4:	stp	x25, x26, [sp, #64]
   1d7d8:	add	x3, sp, #0x88
   1d7dc:	str	w0, [sp, #124]
   1d7e0:	ldr	x0, [x5, #16]
   1d7e4:	stp	x27, x28, [sp, #80]
   1d7e8:	ldr	x25, [x5, #24]
   1d7ec:	stp	x19, x20, [sp, #16]
   1d7f0:	ldp	x27, x26, [x5]
   1d7f4:	sub	x25, x25, x0
   1d7f8:	stp	x21, x22, [sp, #32]
   1d7fc:	lsr	x4, x25, #63
   1d800:	add	x25, x4, x25, asr #3
   1d804:	str	xzr, [sp, #136]
   1d808:	ldr	x4, [x23, #80]
   1d80c:	asr	x20, x25, #1
   1d810:	sub	x26, x26, x27
   1d814:	stp	x20, x0, [sp, #104]
   1d818:	ldr	w0, [x23, #12]
   1d81c:	asr	x26, x26, #3
   1d820:	add	w22, w20, w26
   1d824:	blr	x4
   1d828:	mov	w19, w0
   1d82c:	cmp	w22, w0
   1d830:	b.ne	1d9e8 <omp_get_place_proc_ids@@OMP_4.5+0x10e8>  // b.any
   1d834:	mov	x0, #0x40                  	// #64
   1d838:	bl	b220 <fprintf@plt+0x2710>
   1d83c:	mov	w1, #0x48                  	// #72
   1d840:	mov	x20, x0
   1d844:	smull	x0, w22, w1
   1d848:	mov	x22, #0xffffffffffffffff    	// #-1
   1d84c:	bl	b220 <fprintf@plt+0x2710>
   1d850:	stp	x22, x0, [x20]
   1d854:	mov	x19, x0
   1d858:	stp	xzr, xzr, [x20, #16]
   1d85c:	cmp	w26, #0x0
   1d860:	stp	xzr, xzr, [x20, #32]
   1d864:	stp	xzr, x23, [x20, #48]
   1d868:	b.le	1d8d4 <omp_get_place_proc_ids@@OMP_4.5+0xfd4>
   1d86c:	mov	w28, w26
   1d870:	add	x25, x23, #0xa0
   1d874:	mov	x21, x0
   1d878:	mov	x24, #0x0                   	// #0
   1d87c:	nop
   1d880:	ldr	x3, [x27, x24, lsl #3]
   1d884:	lsl	x4, x24, #4
   1d888:	ldr	x5, [sp, #136]
   1d88c:	add	x6, x3, #0x1
   1d890:	stp	x3, x6, [x21]
   1d894:	mov	x1, x21
   1d898:	add	x24, x24, #0x1
   1d89c:	ldr	x3, [x5, x4]
   1d8a0:	str	x20, [x21, #16]
   1d8a4:	stp	x3, x22, [x21, #24]
   1d8a8:	mov	x0, x25
   1d8ac:	stp	xzr, xzr, [x21, #48]
   1d8b0:	add	x21, x21, #0x48
   1d8b4:	stur	xzr, [x21, #-8]
   1d8b8:	bl	221b0 <omp_pause_resource_all@@OMP_5.0+0x1d8>
   1d8bc:	cmp	w28, w24
   1d8c0:	b.gt	1d880 <omp_get_place_proc_ids@@OMP_4.5+0xf80>
   1d8c4:	sub	w0, w26, #0x1
   1d8c8:	add	x0, x0, #0x1
   1d8cc:	add	x0, x0, x0, lsl #3
   1d8d0:	add	x19, x19, x0, lsl #3
   1d8d4:	ldr	w0, [sp, #104]
   1d8d8:	cmp	w0, #0x0
   1d8dc:	b.le	1d970 <omp_get_place_proc_ids@@OMP_4.5+0x1070>
   1d8e0:	ldr	w0, [sp, #104]
   1d8e4:	sbfiz	x22, x26, #4, #32
   1d8e8:	ldr	x27, [sp, #112]
   1d8ec:	sub	w25, w0, #0x1
   1d8f0:	add	x21, x25, #0x1
   1d8f4:	add	x25, x23, #0xa0
   1d8f8:	sub	x22, x22, x27
   1d8fc:	add	x21, x21, x21, lsl #3
   1d900:	add	x21, x19, x21, lsl #3
   1d904:	nop
   1d908:	ldr	x2, [sp, #136]
   1d90c:	add	x0, x22, x27
   1d910:	ldr	x1, [x27, #8]
   1d914:	add	x3, x2, x0
   1d918:	ldr	x4, [x2, x0]
   1d91c:	ldr	x0, [x3, #8]
   1d920:	sub	x0, x0, x4
   1d924:	cmp	x1, x0
   1d928:	b.ne	1d994 <omp_get_place_proc_ids@@OMP_4.5+0x1094>  // b.any
   1d92c:	mvn	x3, x1
   1d930:	and	x2, x1, #0x7fffffffffffffff
   1d934:	ldr	x5, [x27], #16
   1d938:	lsr	x3, x3, #63
   1d93c:	sub	x3, x3, #0x2
   1d940:	stp	x20, x4, [x19, #16]
   1d944:	add	x2, x2, x5
   1d948:	stp	x5, x2, [x19]
   1d94c:	mov	x1, x19
   1d950:	mov	x0, x25
   1d954:	str	x3, [x19, #32]
   1d958:	stp	xzr, xzr, [x19, #48]
   1d95c:	add	x19, x19, #0x48
   1d960:	stur	xzr, [x19, #-8]
   1d964:	bl	221b0 <omp_pause_resource_all@@OMP_5.0+0x1d8>
   1d968:	cmp	x19, x21
   1d96c:	b.ne	1d908 <omp_get_place_proc_ids@@OMP_4.5+0x1008>  // b.any
   1d970:	ldr	x0, [sp, #136]
   1d974:	bl	8900 <free@plt>
   1d978:	ldp	x19, x20, [sp, #16]
   1d97c:	ldp	x21, x22, [sp, #32]
   1d980:	ldp	x23, x24, [sp, #48]
   1d984:	ldp	x25, x26, [sp, #64]
   1d988:	ldp	x27, x28, [sp, #80]
   1d98c:	ldp	x29, x30, [sp], #144
   1d990:	ret
   1d994:	add	x0, x23, #0xa8
   1d998:	ldxr	w1, [x0]
   1d99c:	stlxr	w2, wzr, [x0]
   1d9a0:	cbnz	w2, 1d998 <omp_get_place_proc_ids@@OMP_4.5+0x1098>
   1d9a4:	tbnz	w1, #31, 1d9e0 <omp_get_place_proc_ids@@OMP_4.5+0x10e0>
   1d9a8:	ldr	w0, [sp, #124]
   1d9ac:	cbnz	w0, 1d9bc <omp_get_place_proc_ids@@OMP_4.5+0x10bc>
   1d9b0:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d9b4:	add	x0, x0, #0x210
   1d9b8:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1d9bc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1d9c0:	add	x0, x0, #0x568
   1d9c4:	add	x0, x0, #0x10
   1d9c8:	ldxr	w1, [x0]
   1d9cc:	stlxr	w2, wzr, [x0]
   1d9d0:	cbnz	w2, 1d9c8 <omp_get_place_proc_ids@@OMP_4.5+0x10c8>
   1d9d4:	tbz	w1, #31, 1d9b0 <omp_get_place_proc_ids@@OMP_4.5+0x10b0>
   1d9d8:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1d9dc:	b	1d9b0 <omp_get_place_proc_ids@@OMP_4.5+0x10b0>
   1d9e0:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1d9e4:	b	1d9a8 <omp_get_place_proc_ids@@OMP_4.5+0x10a8>
   1d9e8:	add	x0, x23, #0xa8
   1d9ec:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1d9f0:	ldr	w0, [sp, #124]
   1d9f4:	cbnz	w0, 1da0c <omp_get_place_proc_ids@@OMP_4.5+0x110c>
   1d9f8:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1d9fc:	mov	w2, w19
   1da00:	mov	w1, w22
   1da04:	add	x0, x0, #0x1d0
   1da08:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1da0c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1da10:	add	x0, x0, #0x568
   1da14:	add	x0, x0, #0x10
   1da18:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1da1c:	b	1d9f8 <omp_get_place_proc_ids@@OMP_4.5+0x10f8>
   1da20:	stp	x29, x30, [sp, #-192]!
   1da24:	mov	x29, sp
   1da28:	stp	x21, x22, [sp, #32]
   1da2c:	mov	x21, x1
   1da30:	stp	x23, x24, [sp, #48]
   1da34:	mov	x23, x3
   1da38:	mov	x24, x4
   1da3c:	stp	x25, x26, [sp, #64]
   1da40:	mov	x25, x0
   1da44:	add	x0, x0, #0xa8
   1da48:	str	x2, [sp, #104]
   1da4c:	mov	x2, x0
   1da50:	mov	w0, #0x1                   	// #1
   1da54:	str	x2, [sp, #120]
   1da58:	ldaxr	w1, [x2]
   1da5c:	cbnz	w1, 1da68 <omp_get_place_proc_ids@@OMP_4.5+0x1168>
   1da60:	stxr	w3, w0, [x2]
   1da64:	cbnz	w3, 1da58 <omp_get_place_proc_ids@@OMP_4.5+0x1158>
   1da68:	cmp	w1, #0x0
   1da6c:	b.ne	1dcdc <omp_get_place_proc_ids@@OMP_4.5+0x13dc>  // b.any
   1da70:	ldr	w0, [x25, #172]
   1da74:	cmp	w0, #0x2
   1da78:	b.eq	1dcb8 <omp_get_place_proc_ids@@OMP_4.5+0x13b8>  // b.none
   1da7c:	mov	x26, #0x0                   	// #0
   1da80:	cbz	x21, 1db8c <omp_get_place_proc_ids@@OMP_4.5+0x128c>
   1da84:	stp	x19, x20, [sp, #16]
   1da88:	add	x20, x25, #0xa0
   1da8c:	stp	x27, x28, [sp, #80]
   1da90:	add	x28, sp, #0x88
   1da94:	nop
   1da98:	ldrh	w2, [x24, x26, lsl #1]
   1da9c:	and	w22, w2, #0xff
   1daa0:	cmp	w22, #0x1f
   1daa4:	b.hi	1dac0 <omp_get_place_proc_ids@@OMP_4.5+0x11c0>  // b.pmore
   1daa8:	mov	x0, #0x1                   	// #1
   1daac:	mov	x1, #0x8084                	// #32900
   1dab0:	lsl	x0, x0, x22
   1dab4:	movk	x1, #0x8084, lsl #16
   1dab8:	tst	x0, x1
   1dabc:	b.ne	1dae4 <omp_get_place_proc_ids@@OMP_4.5+0x11e4>  // b.any
   1dac0:	ldr	x1, [sp, #120]
   1dac4:	ldxr	w0, [x1]
   1dac8:	stlxr	w2, wzr, [x1]
   1dacc:	cbnz	w2, 1dac4 <omp_get_place_proc_ids@@OMP_4.5+0x11c4>
   1dad0:	tbnz	w0, #31, 1dce8 <omp_get_place_proc_ids@@OMP_4.5+0x13e8>
   1dad4:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1dad8:	mov	w1, w22
   1dadc:	add	x0, x0, #0x240
   1dae0:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1dae4:	ldr	x0, [sp, #104]
   1dae8:	cmp	w22, #0x1f
   1daec:	and	w3, w22, #0xffffffef
   1daf0:	cset	w19, eq  // eq = none
   1daf4:	cmp	w3, #0xf
   1daf8:	ldr	x1, [x0, x26, lsl #3]
   1dafc:	ldr	x0, [x23, x26, lsl #3]
   1db00:	add	x0, x1, x0
   1db04:	stp	x1, x0, [sp, #136]
   1db08:	b.ne	1dbb4 <omp_get_place_proc_ids@@OMP_4.5+0x12b4>  // b.any
   1db0c:	cmp	x1, x0
   1db10:	b.ne	1dbb4 <omp_get_place_proc_ids@@OMP_4.5+0x12b4>  // b.any
   1db14:	add	x3, x1, #0x1
   1db18:	mov	x0, x20
   1db1c:	mov	x1, x28
   1db20:	str	x3, [sp, #144]
   1db24:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1db28:	mov	x27, x0
   1db2c:	ldr	x1, [sp, #144]
   1db30:	sub	x1, x1, #0x1
   1db34:	str	x1, [sp, #144]
   1db38:	cbz	x27, 1db78 <omp_get_place_proc_ids@@OMP_4.5+0x1278>
   1db3c:	ldr	x0, [x27, #32]
   1db40:	cmp	w22, #0x7
   1db44:	csinc	w19, w19, wzr, ne  // ne = any
   1db48:	sub	x1, x0, #0x1
   1db4c:	cmn	x1, #0x3
   1db50:	b.hi	1dc60 <omp_get_place_proc_ids@@OMP_4.5+0x1360>  // b.pmore
   1db54:	str	x1, [x27, #32]
   1db58:	cbz	w19, 1dbc8 <omp_get_place_proc_ids@@OMP_4.5+0x12c8>
   1db5c:	str	xzr, [x27, #32]
   1db60:	cmp	w22, #0x2
   1db64:	b.eq	1dbd8 <omp_get_place_proc_ids@@OMP_4.5+0x12d8>  // b.none
   1db68:	cmp	w22, #0x12
   1db6c:	b.eq	1dbd8 <omp_get_place_proc_ids@@OMP_4.5+0x12d8>  // b.none
   1db70:	ldr	x0, [x27, #32]
   1db74:	cbz	x0, 1dc78 <omp_get_place_proc_ids@@OMP_4.5+0x1378>
   1db78:	add	x26, x26, #0x1
   1db7c:	cmp	x21, x26
   1db80:	b.ne	1da98 <omp_get_place_proc_ids@@OMP_4.5+0x1198>  // b.any
   1db84:	ldp	x19, x20, [sp, #16]
   1db88:	ldp	x27, x28, [sp, #80]
   1db8c:	ldr	x1, [sp, #120]
   1db90:	ldxr	w0, [x1]
   1db94:	stlxr	w2, wzr, [x1]
   1db98:	cbnz	w2, 1db90 <omp_get_place_proc_ids@@OMP_4.5+0x1290>
   1db9c:	tbnz	w0, #31, 1dcd0 <omp_get_place_proc_ids@@OMP_4.5+0x13d0>
   1dba0:	ldp	x21, x22, [sp, #32]
   1dba4:	ldp	x23, x24, [sp, #48]
   1dba8:	ldp	x25, x26, [sp, #64]
   1dbac:	ldp	x29, x30, [sp], #192
   1dbb0:	ret
   1dbb4:	mov	x1, x28
   1dbb8:	mov	x0, x20
   1dbbc:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1dbc0:	mov	x27, x0
   1dbc4:	b	1db38 <omp_get_place_proc_ids@@OMP_4.5+0x1238>
   1dbc8:	cmp	w22, #0x2
   1dbcc:	b.ne	1db68 <omp_get_place_proc_ids@@OMP_4.5+0x1268>  // b.any
   1dbd0:	ldr	x0, [x27, #32]
   1dbd4:	cbnz	x0, 1db78 <omp_get_place_proc_ids@@OMP_4.5+0x1278>
   1dbd8:	ldr	x2, [x27, #16]
   1dbdc:	ldp	x5, x3, [sp, #136]
   1dbe0:	str	x5, [sp, #112]
   1dbe4:	ldr	x0, [x27]
   1dbe8:	ldr	x19, [x2, #16]
   1dbec:	ldr	x2, [x27, #24]
   1dbf0:	sub	x19, x19, x0
   1dbf4:	ldr	w0, [x25, #12]
   1dbf8:	sub	x22, x3, x5
   1dbfc:	ldr	x7, [x25, #112]
   1dc00:	add	x2, x5, x2
   1dc04:	add	x19, x19, x2
   1dc08:	mov	x1, x5
   1dc0c:	mov	x2, x19
   1dc10:	mov	x3, x22
   1dc14:	blr	x7
   1dc18:	tst	w0, #0xff
   1dc1c:	ldr	x5, [sp, #112]
   1dc20:	b.ne	1db70 <omp_get_place_proc_ids@@OMP_4.5+0x1270>  // b.any
   1dc24:	ldr	x1, [sp, #120]
   1dc28:	ldxr	w0, [x1]
   1dc2c:	stlxr	w2, wzr, [x1]
   1dc30:	cbnz	w2, 1dc28 <omp_get_place_proc_ids@@OMP_4.5+0x1328>
   1dc34:	tbnz	w0, #31, 1dcf4 <omp_get_place_proc_ids@@OMP_4.5+0x13f4>
   1dc38:	adrp	x4, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1dc3c:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1dc40:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1dc44:	add	x4, x4, #0x8c8
   1dc48:	add	x1, x1, #0xc8
   1dc4c:	add	x6, x5, x22
   1dc50:	add	x0, x0, #0xd0
   1dc54:	add	x3, x19, x22
   1dc58:	mov	x2, x19
   1dc5c:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1dc60:	cbz	w19, 1dbc8 <omp_get_place_proc_ids@@OMP_4.5+0x12c8>
   1dc64:	cmn	x0, #0x1
   1dc68:	b.ne	1db5c <omp_get_place_proc_ids@@OMP_4.5+0x125c>  // b.any
   1dc6c:	cmp	w22, #0x2
   1dc70:	b.ne	1db68 <omp_get_place_proc_ids@@OMP_4.5+0x1268>  // b.any
   1dc74:	b	1db78 <omp_get_place_proc_ids@@OMP_4.5+0x1278>
   1dc78:	mov	x1, x27
   1dc7c:	mov	x0, x20
   1dc80:	bl	22268 <omp_pause_resource_all@@OMP_5.0+0x290>
   1dc84:	ldr	x1, [x27, #48]
   1dc88:	cbz	x1, 1dc94 <omp_get_place_proc_ids@@OMP_4.5+0x1394>
   1dc8c:	mov	x0, x20
   1dc90:	bl	221b0 <omp_pause_resource_all@@OMP_5.0+0x1d8>
   1dc94:	ldr	x0, [x27, #16]
   1dc98:	ldr	x1, [x0]
   1dc9c:	cmp	x1, #0x1
   1dca0:	b.ls	1dcb0 <omp_get_place_proc_ids@@OMP_4.5+0x13b0>  // b.plast
   1dca4:	sub	x1, x1, #0x1
   1dca8:	str	x1, [x0]
   1dcac:	b	1db78 <omp_get_place_proc_ids@@OMP_4.5+0x1278>
   1dcb0:	bl	1cfe8 <omp_get_place_proc_ids@@OMP_4.5+0x6e8>
   1dcb4:	b	1db78 <omp_get_place_proc_ids@@OMP_4.5+0x1278>
   1dcb8:	ldr	x1, [sp, #120]
   1dcbc:	ldxr	w0, [x1]
   1dcc0:	stlxr	w2, wzr, [x1]
   1dcc4:	cbnz	w2, 1dcbc <omp_get_place_proc_ids@@OMP_4.5+0x13bc>
   1dcc8:	tbz	w0, #31, 1dba0 <omp_get_place_proc_ids@@OMP_4.5+0x12a0>
   1dccc:	nop
   1dcd0:	ldr	x0, [sp, #120]
   1dcd4:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1dcd8:	b	1dba0 <omp_get_place_proc_ids@@OMP_4.5+0x12a0>
   1dcdc:	ldr	x0, [sp, #120]
   1dce0:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   1dce4:	b	1da70 <omp_get_place_proc_ids@@OMP_4.5+0x1170>
   1dce8:	ldr	x0, [sp, #120]
   1dcec:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1dcf0:	b	1dad4 <omp_get_place_proc_ids@@OMP_4.5+0x11d4>
   1dcf4:	ldr	x0, [sp, #120]
   1dcf8:	str	x5, [sp, #104]
   1dcfc:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1dd00:	ldr	x5, [sp, #104]
   1dd04:	b	1dc38 <omp_get_place_proc_ids@@OMP_4.5+0x1338>
   1dd08:	stp	x29, x30, [sp, #-176]!
   1dd0c:	mov	x29, sp
   1dd10:	stp	x19, x20, [sp, #16]
   1dd14:	mov	x19, x3
   1dd18:	mov	x20, x2
   1dd1c:	ldr	x8, [x4, x3, lsl #3]
   1dd20:	stp	x25, x26, [sp, #64]
   1dd24:	mov	x25, x0
   1dd28:	ldr	x3, [x5, x3, lsl #3]
   1dd2c:	mov	x26, x6
   1dd30:	ldr	x0, [x0, #56]
   1dd34:	add	x3, x3, x8
   1dd38:	stp	x23, x24, [sp, #48]
   1dd3c:	add	x24, sp, #0x78
   1dd40:	add	x23, x0, #0xa0
   1dd44:	stp	x21, x22, [sp, #32]
   1dd48:	mov	x21, x1
   1dd4c:	mov	x1, x24
   1dd50:	stp	x27, x28, [sp, #80]
   1dd54:	mov	x27, x4
   1dd58:	mov	x28, x5
   1dd5c:	stp	x0, x7, [sp, #96]
   1dd60:	mov	x0, x23
   1dd64:	stp	x8, x3, [sp, #120]
   1dd68:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1dd6c:	ldrh	w26, [x26, w19, sxtw #1]
   1dd70:	cbz	x0, 1dd88 <omp_get_place_proc_ids@@OMP_4.5+0x1488>
   1dd74:	mov	x22, x0
   1dd78:	ldr	x0, [x21, #16]
   1dd7c:	ldr	x4, [x22, #16]
   1dd80:	cmp	x4, x0
   1dd84:	b.eq	1df70 <omp_get_place_proc_ids@@OMP_4.5+0x1670>  // b.none
   1dd88:	ldr	x0, [x28, x19, lsl #3]
   1dd8c:	cbnz	x0, 1e040 <omp_get_place_proc_ids@@OMP_4.5+0x1740>
   1dd90:	add	x20, x27, x20, lsl #3
   1dd94:	ldr	x0, [sp, #120]
   1dd98:	ldur	x1, [x20, #-8]
   1dd9c:	cmp	x1, x0
   1dda0:	b.cc	1de98 <omp_get_place_proc_ids@@OMP_4.5+0x1598>  // b.lo, b.ul, b.last
   1dda4:	ldr	x4, [sp, #128]
   1dda8:	add	x4, x4, #0x1
   1ddac:	mov	x1, x24
   1ddb0:	mov	x0, x23
   1ddb4:	str	x4, [sp, #128]
   1ddb8:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1ddbc:	mov	x20, x0
   1ddc0:	ldr	x4, [sp, #128]
   1ddc4:	sub	x4, x4, #0x1
   1ddc8:	str	x4, [sp, #128]
   1ddcc:	cbz	x0, 1e040 <omp_get_place_proc_ids@@OMP_4.5+0x1740>
   1ddd0:	ldr	x5, [x0, #16]
   1ddd4:	ldr	x0, [x21, #16]
   1ddd8:	cmp	x5, x0
   1dddc:	b.ne	1e040 <omp_get_place_proc_ids@@OMP_4.5+0x1740>  // b.any
   1dde0:	ldr	x6, [x20]
   1dde4:	ldr	x2, [x21]
   1dde8:	ldr	x1, [x20, #24]
   1ddec:	sub	x2, x6, x2
   1ddf0:	ldr	x0, [x21, #24]
   1ddf4:	sub	x0, x1, x0
   1ddf8:	cmp	x2, x0
   1ddfc:	b.ne	1e040 <omp_get_place_proc_ids@@OMP_4.5+0x1740>  // b.any
   1de00:	and	w0, w26, #0xff
   1de04:	add	x19, x25, x19, lsl #5
   1de08:	and	w7, w26, #0xe
   1de0c:	sub	w3, w0, #0x12
   1de10:	ldr	x2, [sp, #120]
   1de14:	cmp	w7, #0x2
   1de18:	and	w3, w3, #0xff
   1de1c:	cset	w9, eq  // eq = none
   1de20:	cmp	w3, #0x1
   1de24:	sub	x7, x2, x6
   1de28:	cset	w8, ls  // ls = plast
   1de2c:	sub	x3, x4, x2
   1de30:	str	x20, [x19, #64]
   1de34:	tst	x26, #0x80
   1de38:	strb	w9, [x19, #72]
   1de3c:	add	x1, x1, x2
   1de40:	strb	w8, [x19, #73]
   1de44:	ccmp	x6, x2, #0x2, eq  // eq = none
   1de48:	stp	x7, x3, [x19, #80]
   1de4c:	b.hi	1e068 <omp_get_place_proc_ids@@OMP_4.5+0x1768>  // b.pmore
   1de50:	ldr	x7, [x20, #8]
   1de54:	cmp	x4, x7
   1de58:	b.hi	1e068 <omp_get_place_proc_ids@@OMP_4.5+0x1768>  // b.pmore
   1de5c:	and	w0, w0, #0xfffffffd
   1de60:	cmp	w0, #0x11
   1de64:	b.eq	1e010 <omp_get_place_proc_ids@@OMP_4.5+0x1710>  // b.none
   1de68:	ldr	x0, [x20, #32]
   1de6c:	cmn	x0, #0x1
   1de70:	b.eq	1de7c <omp_get_place_proc_ids@@OMP_4.5+0x157c>  // b.none
   1de74:	add	x0, x0, #0x1
   1de78:	str	x0, [x20, #32]
   1de7c:	ldp	x19, x20, [sp, #16]
   1de80:	ldp	x21, x22, [sp, #32]
   1de84:	ldp	x23, x24, [sp, #48]
   1de88:	ldp	x25, x26, [sp, #64]
   1de8c:	ldp	x27, x28, [sp, #80]
   1de90:	ldp	x29, x30, [sp], #176
   1de94:	ret
   1de98:	sub	x3, x0, #0x1
   1de9c:	mov	x1, x24
   1dea0:	mov	x0, x23
   1dea4:	str	x3, [sp, #120]
   1dea8:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1deac:	mov	x20, x0
   1deb0:	ldr	x2, [sp, #120]
   1deb4:	add	x2, x2, #0x1
   1deb8:	str	x2, [sp, #120]
   1debc:	cbz	x0, 1dda4 <omp_get_place_proc_ids@@OMP_4.5+0x14a4>
   1dec0:	ldr	x0, [x0, #16]
   1dec4:	ldr	x1, [x21, #16]
   1dec8:	ldr	x4, [sp, #128]
   1decc:	cmp	x0, x1
   1ded0:	b.ne	1dda8 <omp_get_place_proc_ids@@OMP_4.5+0x14a8>  // b.any
   1ded4:	ldr	x8, [x20]
   1ded8:	ldr	x7, [x21]
   1dedc:	ldr	x3, [x20, #24]
   1dee0:	sub	x7, x8, x7
   1dee4:	ldr	x9, [x21, #24]
   1dee8:	add	x1, x2, x3
   1deec:	sub	x3, x3, x9
   1def0:	cmp	x7, x3
   1def4:	b.ne	1dda8 <omp_get_place_proc_ids@@OMP_4.5+0x14a8>  // b.any
   1def8:	and	w5, w26, #0xff
   1defc:	add	x19, x25, x19, lsl #5
   1df00:	and	w6, w26, #0xe
   1df04:	sub	w3, w5, #0x12
   1df08:	cmp	w6, #0x2
   1df0c:	and	w3, w3, #0xff
   1df10:	cset	w9, eq  // eq = none
   1df14:	cmp	w3, #0x1
   1df18:	cset	w7, ls  // ls = plast
   1df1c:	sub	x6, x2, x8
   1df20:	sub	x3, x4, x2
   1df24:	str	x20, [x19, #64]
   1df28:	strb	w9, [x19, #72]
   1df2c:	tst	x26, #0x80
   1df30:	strb	w7, [x19, #73]
   1df34:	ccmp	x2, x8, #0x0, eq  // eq = none
   1df38:	stp	x6, x3, [x19, #80]
   1df3c:	b.cc	1e0b8 <omp_get_place_proc_ids@@OMP_4.5+0x17b8>  // b.lo, b.ul, b.last
   1df40:	ldr	x6, [x20, #8]
   1df44:	cmp	x6, x4
   1df48:	b.cc	1e0b8 <omp_get_place_proc_ids@@OMP_4.5+0x17b8>  // b.lo, b.ul, b.last
   1df4c:	and	w5, w5, #0xfffffffd
   1df50:	cmp	w5, #0x11
   1df54:	b.ne	1de68 <omp_get_place_proc_ids@@OMP_4.5+0x1568>  // b.any
   1df58:	ldr	x0, [x0, #16]
   1df5c:	sub	x8, x0, x8
   1df60:	ldp	x0, x4, [sp, #96]
   1df64:	add	x1, x8, x1
   1df68:	bl	1d160 <omp_get_place_proc_ids@@OMP_4.5+0x860>
   1df6c:	b	1de68 <omp_get_place_proc_ids@@OMP_4.5+0x1568>
   1df70:	ldr	x1, [x21]
   1df74:	ldr	x8, [x22]
   1df78:	ldr	x0, [x21, #24]
   1df7c:	sub	x1, x8, x1
   1df80:	ldr	x7, [x22, #24]
   1df84:	sub	x0, x7, x0
   1df88:	cmp	x1, x0
   1df8c:	b.ne	1dd88 <omp_get_place_proc_ids@@OMP_4.5+0x1488>  // b.any
   1df90:	ldp	x2, x6, [sp, #120]
   1df94:	and	w0, w26, #0xff
   1df98:	add	x19, x25, x19, lsl #5
   1df9c:	and	w3, w26, #0xe
   1dfa0:	sub	w1, w0, #0x12
   1dfa4:	cmp	w3, #0x2
   1dfa8:	and	w1, w1, #0xff
   1dfac:	cset	w10, eq  // eq = none
   1dfb0:	cmp	w1, #0x1
   1dfb4:	str	x22, [x19, #64]
   1dfb8:	cset	w9, ls  // ls = plast
   1dfbc:	sub	x1, x2, x8
   1dfc0:	sub	x3, x6, x2
   1dfc4:	strb	w10, [x19, #72]
   1dfc8:	strb	w9, [x19, #73]
   1dfcc:	tst	x26, #0x80
   1dfd0:	stp	x1, x3, [x19, #80]
   1dfd4:	add	x7, x7, x2
   1dfd8:	ccmp	x8, x2, #0x2, eq  // eq = none
   1dfdc:	b.hi	1e0a4 <omp_get_place_proc_ids@@OMP_4.5+0x17a4>  // b.pmore
   1dfe0:	ldr	x1, [x22, #8]
   1dfe4:	cmp	x6, x1
   1dfe8:	b.hi	1e0a4 <omp_get_place_proc_ids@@OMP_4.5+0x17a4>  // b.pmore
   1dfec:	and	w0, w0, #0xfffffffd
   1dff0:	cmp	w0, #0x11
   1dff4:	b.eq	1e028 <omp_get_place_proc_ids@@OMP_4.5+0x1728>  // b.none
   1dff8:	ldr	x0, [x22, #32]
   1dffc:	cmn	x0, #0x1
   1e000:	b.eq	1de7c <omp_get_place_proc_ids@@OMP_4.5+0x157c>  // b.none
   1e004:	add	x0, x0, #0x1
   1e008:	str	x0, [x22, #32]
   1e00c:	b	1de7c <omp_get_place_proc_ids@@OMP_4.5+0x157c>
   1e010:	ldr	x0, [x5, #16]
   1e014:	sub	x6, x0, x6
   1e018:	ldp	x0, x4, [sp, #96]
   1e01c:	add	x1, x6, x1
   1e020:	bl	1d160 <omp_get_place_proc_ids@@OMP_4.5+0x860>
   1e024:	b	1de68 <omp_get_place_proc_ids@@OMP_4.5+0x1568>
   1e028:	ldr	x1, [x4, #16]
   1e02c:	ldp	x0, x4, [sp, #96]
   1e030:	sub	x1, x1, x8
   1e034:	add	x1, x1, x7
   1e038:	bl	1d160 <omp_get_place_proc_ids@@OMP_4.5+0x860>
   1e03c:	b	1dff8 <omp_get_place_proc_ids@@OMP_4.5+0x16f8>
   1e040:	ldr	x0, [sp, #96]
   1e044:	add	x0, x0, #0xa8
   1e048:	ldxr	w1, [x0]
   1e04c:	stlxr	w2, wzr, [x0]
   1e050:	cbnz	w2, 1e048 <omp_get_place_proc_ids@@OMP_4.5+0x1748>
   1e054:	tbnz	w1, #31, 1e094 <omp_get_place_proc_ids@@OMP_4.5+0x1794>
   1e058:	ldp	x1, x2, [sp, #120]
   1e05c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1e060:	add	x0, x0, #0x278
   1e064:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1e068:	ldr	x0, [sp, #96]
   1e06c:	add	x0, x0, #0xa8
   1e070:	ldxr	w1, [x0]
   1e074:	stlxr	w2, wzr, [x0]
   1e078:	cbnz	w2, 1e070 <omp_get_place_proc_ids@@OMP_4.5+0x1770>
   1e07c:	tbnz	w1, #31, 1e09c <omp_get_place_proc_ids@@OMP_4.5+0x179c>
   1e080:	ldp	x3, x4, [x20]
   1e084:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1e088:	ldp	x1, x2, [sp, #120]
   1e08c:	add	x0, x0, #0x140
   1e090:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1e094:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1e098:	b	1e058 <omp_get_place_proc_ids@@OMP_4.5+0x1758>
   1e09c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1e0a0:	b	1e080 <omp_get_place_proc_ids@@OMP_4.5+0x1780>
   1e0a4:	ldr	x0, [sp, #96]
   1e0a8:	mov	x1, x22
   1e0ac:	add	x3, x24, #0x8
   1e0b0:	mov	x2, x24
   1e0b4:	bl	1d3f0 <omp_get_place_proc_ids@@OMP_4.5+0xaf0>
   1e0b8:	ldr	x0, [sp, #96]
   1e0bc:	add	x0, x0, #0xa8
   1e0c0:	ldxr	w1, [x0]
   1e0c4:	stlxr	w2, wzr, [x0]
   1e0c8:	cbz	w2, 1e07c <omp_get_place_proc_ids@@OMP_4.5+0x177c>
   1e0cc:	b	1e0c0 <omp_get_place_proc_ids@@OMP_4.5+0x17c0>
   1e0d0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1e0d4:	add	x0, x0, #0x568
   1e0d8:	add	x0, x0, #0x14
   1e0dc:	adrp	x1, 1c000 <omp_pause_resource_all_@@OMP_5.0+0x358>
   1e0e0:	add	x1, x1, #0xe30
   1e0e4:	b	8950 <pthread_once@plt>
   1e0e8:	stp	x29, x30, [sp, #-32]!
   1e0ec:	adrp	x1, 1c000 <omp_pause_resource_all_@@OMP_5.0+0x358>
   1e0f0:	add	x1, x1, #0xe30
   1e0f4:	mov	x29, sp
   1e0f8:	str	x19, [sp, #16]
   1e0fc:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1e100:	add	x19, x19, #0x568
   1e104:	add	x0, x19, #0x14
   1e108:	bl	8950 <pthread_once@plt>
   1e10c:	ldr	w0, [x19, #4]
   1e110:	ldr	x19, [sp, #16]
   1e114:	ldp	x29, x30, [sp], #32
   1e118:	ret
   1e11c:	nop
   1e120:	stp	x29, x30, [sp, #-368]!
   1e124:	mov	x29, sp
   1e128:	stp	x19, x20, [sp, #16]
   1e12c:	mov	x19, x1
   1e130:	mov	w1, #0x8                   	// #8
   1e134:	stp	x21, x22, [sp, #32]
   1e138:	ands	w21, w6, #0xff
   1e13c:	mov	w6, #0x3                   	// #3
   1e140:	csel	w1, w6, w1, eq  // eq = none
   1e144:	cmp	w21, #0x0
   1e148:	add	x6, x19, #0x2
   1e14c:	stp	w7, w1, [x29, #192]
   1e150:	mov	w1, #0xff                  	// #255
   1e154:	mov	x20, x5
   1e158:	mov	w22, #0x7                   	// #7
   1e15c:	csel	w22, w22, w1, eq  // eq = none
   1e160:	stp	x23, x24, [sp, #48]
   1e164:	mov	x24, x0
   1e168:	mov	x23, x4
   1e16c:	lsl	x0, x6, #5
   1e170:	stp	x25, x26, [sp, #64]
   1e174:	mov	w26, w7
   1e178:	stp	x27, x28, [sp, #80]
   1e17c:	mov	x28, x2
   1e180:	str	x3, [x29, #176]
   1e184:	bl	b220 <fprintf@plt+0x2710>
   1e188:	mov	x25, x0
   1e18c:	cmp	w26, #0x3
   1e190:	cset	x0, ne  // ne = any
   1e194:	str	x0, [x25]
   1e198:	stp	x19, x24, [x25, #48]
   1e19c:	cbz	x19, 1e9dc <omp_get_place_proc_ids@@OMP_4.5+0x20dc>
   1e1a0:	ldr	w0, [x29, #192]
   1e1a4:	str	xzr, [x29, #272]
   1e1a8:	cmp	w0, #0x1
   1e1ac:	mov	x0, #0xffffffffffffffff    	// #-1
   1e1b0:	cset	w1, eq  // eq = none
   1e1b4:	str	w1, [x29, #120]
   1e1b8:	stp	xzr, x0, [x29, #288]
   1e1bc:	cmp	w1, #0x0
   1e1c0:	ccmp	x19, #0x1, #0x2, eq  // eq = none
   1e1c4:	str	xzr, [x29, #304]
   1e1c8:	b.hi	1e420 <omp_get_place_proc_ids@@OMP_4.5+0x1b20>  // b.pmore
   1e1cc:	mov	x0, #0x8                   	// #8
   1e1d0:	str	xzr, [x29, #200]
   1e1d4:	str	x0, [x29, #216]
   1e1d8:	add	x0, x24, #0xa8
   1e1dc:	mov	x2, x0
   1e1e0:	mov	w0, #0x1                   	// #1
   1e1e4:	str	x2, [x29, #144]
   1e1e8:	ldaxr	w1, [x2]
   1e1ec:	cbnz	w1, 1e1f8 <omp_get_place_proc_ids@@OMP_4.5+0x18f8>
   1e1f0:	stxr	w3, w0, [x2]
   1e1f4:	cbnz	w3, 1e1e8 <omp_get_place_proc_ids@@OMP_4.5+0x18e8>
   1e1f8:	cmp	w1, #0x0
   1e1fc:	b.ne	1f71c <omp_get_place_proc_ids@@OMP_4.5+0x2e1c>  // b.any
   1e200:	ldr	w0, [x24, #172]
   1e204:	cmp	w0, #0x2
   1e208:	b.eq	1f5fc <omp_get_place_proc_ids@@OMP_4.5+0x2cfc>  // b.none
   1e20c:	add	x0, x24, #0xa0
   1e210:	stp	x0, x19, [x29, #240]
   1e214:	mov	x26, #0x0                   	// #0
   1e218:	ldr	x0, [x29, #200]
   1e21c:	str	x0, [x29, #232]
   1e220:	add	x0, x25, #0x40
   1e224:	str	x0, [x29, #128]
   1e228:	add	x0, x29, #0x138
   1e22c:	str	x0, [x29, #224]
   1e230:	mov	x0, x20
   1e234:	mov	x27, #0x5                   	// #5
   1e238:	mov	x20, x28
   1e23c:	mov	x28, x26
   1e240:	mov	x26, x25
   1e244:	mov	x25, x0
   1e248:	movk	x27, #0x4, lsl #16
   1e24c:	str	x24, [x29, #136]
   1e250:	str	wzr, [x29, #168]
   1e254:	str	xzr, [x29, #208]
   1e258:	sxtw	x0, w28
   1e25c:	cbz	w21, 1e484 <omp_get_place_proc_ids@@OMP_4.5+0x1b84>
   1e260:	ldrh	w24, [x25, x0, lsl #1]
   1e264:	lsl	x2, x28, #3
   1e268:	ldr	x0, [x20, x28, lsl #3]
   1e26c:	add	x3, x20, x2
   1e270:	cbz	x0, 1e498 <omp_get_place_proc_ids@@OMP_4.5+0x1b98>
   1e274:	and	w4, w22, w24
   1e278:	cmp	w4, #0xd
   1e27c:	b.eq	1e498 <omp_get_place_proc_ids@@OMP_4.5+0x1b98>  // b.none
   1e280:	cmp	w4, #0xe
   1e284:	b.eq	1e604 <omp_get_place_proc_ids@@OMP_4.5+0x1d04>  // b.none
   1e288:	cmp	w4, #0x1c
   1e28c:	b.eq	1e668 <omp_get_place_proc_ids@@OMP_4.5+0x1d68>  // b.none
   1e290:	cmp	w4, #0x1d
   1e294:	b.eq	1e72c <omp_get_place_proc_ids@@OMP_4.5+0x1e2c>  // b.none
   1e298:	str	x0, [x29, #312]
   1e29c:	cmp	w4, #0x4
   1e2a0:	b.eq	1e4b0 <omp_get_place_proc_ids@@OMP_4.5+0x1bb0>  // b.none
   1e2a4:	ldr	x2, [x23, x2]
   1e2a8:	cmp	w4, #0xc
   1e2ac:	add	x1, x0, x2
   1e2b0:	str	x1, [x29, #320]
   1e2b4:	b.eq	1e794 <omp_get_place_proc_ids@@OMP_4.5+0x1e94>  // b.none
   1e2b8:	cmp	w4, #0xf
   1e2bc:	b.ne	1e4b8 <omp_get_place_proc_ids@@OMP_4.5+0x1bb8>  // b.any
   1e2c0:	str	w4, [x29, #184]
   1e2c4:	cmp	x0, x1
   1e2c8:	b.eq	1e750 <omp_get_place_proc_ids@@OMP_4.5+0x1e50>  // b.none
   1e2cc:	ldr	x1, [x29, #224]
   1e2d0:	ldr	x0, [x29, #240]
   1e2d4:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1e2d8:	mov	x7, x0
   1e2dc:	ldr	w4, [x29, #184]
   1e2e0:	cbz	x7, 1e77c <omp_get_place_proc_ids@@OMP_4.5+0x1e7c>
   1e2e4:	ldp	x2, x1, [x29, #312]
   1e2e8:	ldr	x0, [x7, #32]
   1e2ec:	cmn	x0, #0x2
   1e2f0:	sub	x3, x1, x2
   1e2f4:	b.eq	1e4dc <omp_get_place_proc_ids@@OMP_4.5+0x1bdc>  // b.none
   1e2f8:	add	x11, x26, x28, lsl #5
   1e2fc:	and	w13, w4, #0xe
   1e300:	sub	w5, w4, #0x12
   1e304:	cmp	w13, #0x2
   1e308:	ldr	x12, [x7]
   1e30c:	and	w5, w5, #0xff
   1e310:	cset	w14, eq  // eq = none
   1e314:	cmp	w5, #0x1
   1e318:	cset	w13, ls  // ls = plast
   1e31c:	sxtb	w4, w4
   1e320:	sub	x5, x2, x12
   1e324:	str	x7, [x11, #64]
   1e328:	strb	w14, [x11, #72]
   1e32c:	cmp	w4, #0x0
   1e330:	strb	w13, [x11, #73]
   1e334:	ccmp	x12, x2, #0x2, ge  // ge = tcont
   1e338:	stp	x5, x3, [x11, #80]
   1e33c:	b.hi	1f69c <omp_get_place_proc_ids@@OMP_4.5+0x2d9c>  // b.pmore
   1e340:	ldr	x5, [x7, #8]
   1e344:	cmp	x5, x1
   1e348:	b.cc	1f69c <omp_get_place_proc_ids@@OMP_4.5+0x2d9c>  // b.lo, b.ul, b.last
   1e34c:	and	w4, w4, #0xfffffffd
   1e350:	cmp	w4, #0x11
   1e354:	b.eq	1e9e4 <omp_get_place_proc_ids@@OMP_4.5+0x20e4>  // b.none
   1e358:	add	x28, x28, #0x1
   1e35c:	cmn	x0, #0x1
   1e360:	b.eq	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>  // b.none
   1e364:	add	x0, x0, #0x1
   1e368:	str	x0, [x7, #32]
   1e36c:	nop
   1e370:	ldr	x0, [x29, #248]
   1e374:	cmp	x0, x28
   1e378:	b.hi	1e258 <omp_get_place_proc_ids@@OMP_4.5+0x1958>  // b.pmore
   1e37c:	mov	x19, x0
   1e380:	mov	x28, x20
   1e384:	ldr	x0, [x29, #176]
   1e388:	mov	x20, x25
   1e38c:	mov	x25, x26
   1e390:	ldr	x24, [x29, #136]
   1e394:	cbz	x0, 1ea54 <omp_get_place_proc_ids@@OMP_4.5+0x2154>
   1e398:	cmp	x19, #0x1
   1e39c:	b.ne	1f728 <omp_get_place_proc_ids@@OMP_4.5+0x2e28>  // b.any
   1e3a0:	ldr	x0, [x29, #176]
   1e3a4:	ldr	x2, [x29, #208]
   1e3a8:	ldr	x1, [x0]
   1e3ac:	stp	xzr, x1, [x26, #8]
   1e3b0:	cmp	x2, #0x0
   1e3b4:	ldr	x0, [x23]
   1e3b8:	mov	x27, x1
   1e3bc:	add	x0, x1, x0
   1e3c0:	stp	x0, x1, [x26, #24]
   1e3c4:	ldr	w0, [x29, #168]
   1e3c8:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   1e3cc:	b.ne	1eae8 <omp_get_place_proc_ids@@OMP_4.5+0x21e8>  // b.any
   1e3d0:	ldr	w0, [x29, #192]
   1e3d4:	cmp	w0, #0x1
   1e3d8:	b.eq	1edc0 <omp_get_place_proc_ids@@OMP_4.5+0x24c0>  // b.none
   1e3dc:	ldr	w0, [x29, #192]
   1e3e0:	cmp	w0, #0x3
   1e3e4:	b.eq	1e46c <omp_get_place_proc_ids@@OMP_4.5+0x1b6c>  // b.none
   1e3e8:	ldr	x1, [x29, #144]
   1e3ec:	ldxr	w0, [x1]
   1e3f0:	stlxr	w2, wzr, [x1]
   1e3f4:	cbnz	w2, 1e3ec <omp_get_place_proc_ids@@OMP_4.5+0x1aec>
   1e3f8:	tbnz	w0, #31, 1f55c <omp_get_place_proc_ids@@OMP_4.5+0x2c5c>
   1e3fc:	mov	sp, x29
   1e400:	mov	x0, x25
   1e404:	ldp	x19, x20, [sp, #16]
   1e408:	ldp	x21, x22, [sp, #32]
   1e40c:	ldp	x23, x24, [sp, #48]
   1e410:	ldp	x25, x26, [sp, #64]
   1e414:	ldp	x27, x28, [sp, #80]
   1e418:	ldp	x29, x30, [sp], #368
   1e41c:	ret
   1e420:	lsl	x0, x19, #4
   1e424:	ldr	w1, [x29, #192]
   1e428:	add	x0, x0, #0x10
   1e42c:	sub	sp, sp, x0
   1e430:	cmp	w1, #0x1
   1e434:	mov	x0, sp
   1e438:	str	x0, [x29, #288]
   1e43c:	b.ne	1f38c <omp_get_place_proc_ids@@OMP_4.5+0x2a8c>  // b.any
   1e440:	cmp	x19, #0x1
   1e444:	lsl	x3, x19, #3
   1e448:	cset	x1, hi  // hi = pmore
   1e44c:	mov	x2, #0x1                   	// #1
   1e450:	mov	x4, #0x20                  	// #32
   1e454:	add	x1, x1, x2
   1e458:	stp	xzr, x3, [x0]
   1e45c:	str	x3, [x29, #200]
   1e460:	str	x4, [x29, #216]
   1e464:	stp	x2, x1, [x29, #296]
   1e468:	b	1e1d8 <omp_get_place_proc_ids@@OMP_4.5+0x18d8>
   1e46c:	ldr	x0, [x25]
   1e470:	cbnz	x0, 1e3e8 <omp_get_place_proc_ids@@OMP_4.5+0x1ae8>
   1e474:	mov	x0, x25
   1e478:	mov	x25, #0x0                   	// #0
   1e47c:	bl	8900 <free@plt>
   1e480:	b	1e3e8 <omp_get_place_proc_ids@@OMP_4.5+0x1ae8>
   1e484:	ldrb	w24, [x25, x0]
   1e488:	lsl	x2, x28, #3
   1e48c:	ldr	x0, [x20, x28, lsl #3]
   1e490:	add	x3, x20, x2
   1e494:	cbnz	x0, 1e274 <omp_get_place_proc_ids@@OMP_4.5+0x1974>
   1e498:	add	x1, x26, x28, lsl #5
   1e49c:	mov	x2, #0xffffffffffffffff    	// #-1
   1e4a0:	add	x28, x28, #0x1
   1e4a4:	str	xzr, [x1, #64]
   1e4a8:	str	x2, [x1, #80]
   1e4ac:	b	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   1e4b0:	add	x0, x0, #0x8
   1e4b4:	str	x0, [x29, #320]
   1e4b8:	ldr	x1, [x29, #224]
   1e4bc:	str	w4, [x29, #184]
   1e4c0:	ldr	x0, [x29, #240]
   1e4c4:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1e4c8:	mov	x7, x0
   1e4cc:	ldr	w4, [x29, #184]
   1e4d0:	cbnz	x0, 1e2e4 <omp_get_place_proc_ids@@OMP_4.5+0x19e4>
   1e4d4:	ldp	x2, x1, [x29, #312]
   1e4d8:	sub	x3, x1, x2
   1e4dc:	ldrb	w0, [x29, #196]
   1e4e0:	add	x7, x26, x28, lsl #5
   1e4e4:	ldp	x8, x6, [x29, #208]
   1e4e8:	asr	w5, w24, w0
   1e4ec:	str	xzr, [x7, #64]
   1e4f0:	ldr	x0, [x29, #232]
   1e4f4:	sub	x24, x0, #0x1
   1e4f8:	mov	x0, #0x1                   	// #1
   1e4fc:	lsl	x5, x0, x5
   1e500:	add	x24, x24, x5
   1e504:	cmp	x6, x5
   1e508:	neg	x7, x5
   1e50c:	and	x7, x7, x24
   1e510:	csel	x5, x6, x5, cs  // cs = hs, nlast
   1e514:	add	x8, x8, x0
   1e518:	stp	x8, x5, [x29, #208]
   1e51c:	add	x5, x7, x3
   1e520:	str	x5, [x29, #232]
   1e524:	cmp	w4, #0x12
   1e528:	b.gt	1e54c <omp_get_place_proc_ids@@OMP_4.5+0x1c4c>
   1e52c:	lsl	x0, x0, x4
   1e530:	tst	x0, x27
   1e534:	b.ne	1e594 <omp_get_place_proc_ids@@OMP_4.5+0x1c94>  // b.any
   1e538:	sub	x3, x3, #0x1
   1e53c:	mov	x0, #0x7fff                	// #32767
   1e540:	cmp	x3, x0
   1e544:	b.ls	1e564 <omp_get_place_proc_ids@@OMP_4.5+0x1c64>  // b.plast
   1e548:	b	1e594 <omp_get_place_proc_ids@@OMP_4.5+0x1c94>
   1e54c:	cmp	w4, #0x80
   1e550:	b.eq	1e724 <omp_get_place_proc_ids@@OMP_4.5+0x1e24>  // b.none
   1e554:	sub	x3, x3, #0x1
   1e558:	mov	x0, #0x7fff                	// #32767
   1e55c:	cmp	x3, x0
   1e560:	b.hi	1e724 <omp_get_place_proc_ids@@OMP_4.5+0x1e24>  // b.pmore
   1e564:	ldr	x0, [x29, #296]
   1e568:	cmp	x0, #0x0
   1e56c:	cbnz	x0, 1ea14 <omp_get_place_proc_ids@@OMP_4.5+0x2114>
   1e570:	ldr	x5, [x29, #288]
   1e574:	mov	x0, #0x1                   	// #1
   1e578:	mov	x3, #0x0                   	// #0
   1e57c:	add	x11, x5, x3
   1e580:	str	x7, [x5, x3]
   1e584:	ldr	x5, [x29, #232]
   1e588:	mov	x3, #0x1                   	// #1
   1e58c:	str	x5, [x11, #8]
   1e590:	stp	x0, x3, [x29, #296]
   1e594:	add	x28, x28, #0x1
   1e598:	cmp	w4, #0x5
   1e59c:	b.ne	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>  // b.any
   1e5a0:	ldr	x0, [x29, #248]
   1e5a4:	cmp	x0, x28
   1e5a8:	b.ls	1e37c <omp_get_place_proc_ids@@OMP_4.5+0x1a7c>  // b.plast
   1e5ac:	ldr	x4, [x29, #128]
   1e5b0:	ldr	x3, [x29, #248]
   1e5b4:	b	1e5f4 <omp_get_place_proc_ids@@OMP_4.5+0x1cf4>
   1e5b8:	ldrh	w0, [x25, x0, lsl #1]
   1e5bc:	and	w0, w22, w0
   1e5c0:	cmp	w0, #0x4
   1e5c4:	b.ne	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>  // b.any
   1e5c8:	ldr	x0, [x20, x28, lsl #3]
   1e5cc:	cmp	x0, x2
   1e5d0:	b.cc	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>  // b.lo, b.ul, b.last
   1e5d4:	add	x0, x0, #0x8
   1e5d8:	cmp	x0, x1
   1e5dc:	b.hi	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>  // b.pmore
   1e5e0:	lsl	x0, x28, #5
   1e5e4:	add	x28, x28, #0x1
   1e5e8:	cmp	x3, x28
   1e5ec:	str	xzr, [x4, x0]
   1e5f0:	b.ls	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>  // b.plast
   1e5f4:	sxtw	x0, w28
   1e5f8:	cbnz	w21, 1e5b8 <omp_get_place_proc_ids@@OMP_4.5+0x1cb8>
   1e5fc:	ldrb	w0, [x25, x0]
   1e600:	b	1e5bc <omp_get_place_proc_ids@@OMP_4.5+0x1cbc>
   1e604:	add	x3, x0, #0x1
   1e608:	stp	x0, x3, [x29, #312]
   1e60c:	ldr	x1, [x29, #224]
   1e610:	str	x2, [x29, #184]
   1e614:	ldr	x0, [x29, #240]
   1e618:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1e61c:	ldp	x3, x1, [x29, #312]
   1e620:	ldr	x2, [x29, #184]
   1e624:	sub	x1, x1, #0x1
   1e628:	str	x1, [x29, #320]
   1e62c:	cbz	x0, 1ec14 <omp_get_place_proc_ids@@OMP_4.5+0x2314>
   1e630:	ldp	x1, x5, [x0, #16]
   1e634:	add	x7, x26, x28, lsl #5
   1e638:	ldr	x4, [x0]
   1e63c:	add	x28, x28, #0x1
   1e640:	sub	x3, x3, x4
   1e644:	str	x3, [x29, #312]
   1e648:	ldr	x1, [x1, #16]
   1e64c:	str	xzr, [x7, #64]
   1e650:	add	x0, x3, x1
   1e654:	mov	x1, #0xffffffffffffffff    	// #-1
   1e658:	add	x0, x0, x5
   1e65c:	str	x0, [x20, x2]
   1e660:	str	x1, [x7, #80]
   1e664:	b	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   1e668:	ldr	x7, [x23, x2]
   1e66c:	add	x2, x26, x28, lsl #5
   1e670:	str	x0, [x29, #312]
   1e674:	mov	x1, x2
   1e678:	add	x19, x7, x28
   1e67c:	mov	x8, #0xfffffffffffffffd    	// #-3
   1e680:	str	xzr, [x2, #64]
   1e684:	add	x2, x28, #0x1
   1e688:	str	x8, [x1, #80]
   1e68c:	ldr	x4, [x23, x19, lsl #3]
   1e690:	stp	x3, x7, [x29, #152]
   1e694:	ldr	x0, [x20, x19, lsl #3]
   1e698:	str	x2, [x29, #184]
   1e69c:	ldr	x1, [x29, #224]
   1e6a0:	add	x0, x0, x4
   1e6a4:	str	x0, [x29, #320]
   1e6a8:	ldr	x0, [x29, #240]
   1e6ac:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1e6b0:	ldp	x3, x7, [x29, #152]
   1e6b4:	ldr	x2, [x29, #184]
   1e6b8:	cbz	x0, 1e868 <omp_get_place_proc_ids@@OMP_4.5+0x1f68>
   1e6bc:	mov	x28, x2
   1e6c0:	cmp	x2, x19
   1e6c4:	b.hi	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>  // b.pmore
   1e6c8:	mov	x24, x2
   1e6cc:	str	w22, [x29, #184]
   1e6d0:	mov	x22, x25
   1e6d4:	mov	w25, w21
   1e6d8:	mov	x21, x20
   1e6dc:	mov	x20, x0
   1e6e0:	mov	x3, x28
   1e6e4:	mov	x6, x22
   1e6e8:	mov	x5, x23
   1e6ec:	mov	x4, x21
   1e6f0:	mov	x2, x24
   1e6f4:	add	x28, x28, #0x1
   1e6f8:	mov	x1, x20
   1e6fc:	mov	x0, x26
   1e700:	mov	x7, #0x0                   	// #0
   1e704:	bl	1dd08 <omp_get_place_proc_ids@@OMP_4.5+0x1408>
   1e708:	cmp	x19, x28
   1e70c:	b.cs	1e6e0 <omp_get_place_proc_ids@@OMP_4.5+0x1de0>  // b.hs, b.nlast
   1e710:	mov	x20, x21
   1e714:	mov	w21, w25
   1e718:	mov	x25, x22
   1e71c:	ldr	w22, [x29, #184]
   1e720:	b	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   1e724:	add	x28, x28, #0x1
   1e728:	b	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   1e72c:	add	x1, x26, x28, lsl #5
   1e730:	mov	x2, #0xfffffffffffffffe    	// #-2
   1e734:	mov	x0, x1
   1e738:	add	x28, x28, #0x1
   1e73c:	str	xzr, [x1, #64]
   1e740:	mov	w1, #0x1                   	// #1
   1e744:	str	x2, [x0, #80]
   1e748:	str	w1, [x29, #168]
   1e74c:	b	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   1e750:	add	x0, x0, #0x1
   1e754:	str	x0, [x29, #320]
   1e758:	ldr	x1, [x29, #224]
   1e75c:	ldr	x0, [x29, #240]
   1e760:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1e764:	mov	x7, x0
   1e768:	ldr	x1, [x29, #320]
   1e76c:	ldr	w4, [x29, #184]
   1e770:	sub	x1, x1, #0x1
   1e774:	str	x1, [x29, #320]
   1e778:	cbnz	x7, 1e2e4 <omp_get_place_proc_ids@@OMP_4.5+0x19e4>
   1e77c:	add	x1, x26, x28, lsl #5
   1e780:	mov	x2, #0xfffffffffffffffe    	// #-2
   1e784:	add	x28, x28, #0x1
   1e788:	str	xzr, [x1, #64]
   1e78c:	str	x2, [x1, #80]
   1e790:	b	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   1e794:	add	x4, x26, x28, lsl #5
   1e798:	ldrb	w0, [x29, #196]
   1e79c:	ldr	x1, [x29, #232]
   1e7a0:	mov	x5, #0x1                   	// #1
   1e7a4:	str	xzr, [x4, #64]
   1e7a8:	asr	w0, w24, w0
   1e7ac:	ldr	x4, [x29, #216]
   1e7b0:	sub	x1, x1, #0x1
   1e7b4:	lsl	x0, x5, x0
   1e7b8:	add	x3, x1, x0
   1e7bc:	cmp	x4, x0
   1e7c0:	neg	x1, x0
   1e7c4:	and	x1, x1, x3
   1e7c8:	csel	x0, x4, x0, cs  // cs = hs, nlast
   1e7cc:	str	x0, [x29, #216]
   1e7d0:	add	x0, x2, x1
   1e7d4:	str	x0, [x29, #232]
   1e7d8:	sub	x3, x2, #0x1
   1e7dc:	mov	x0, #0x7fff                	// #32767
   1e7e0:	cmp	x3, x0
   1e7e4:	b.hi	1e858 <omp_get_place_proc_ids@@OMP_4.5+0x1f58>  // b.pmore
   1e7e8:	ldr	x0, [x29, #296]
   1e7ec:	cmp	x0, #0x0
   1e7f0:	cbz	x0, 1e834 <omp_get_place_proc_ids@@OMP_4.5+0x1f34>
   1e7f4:	b.lt	1e858 <omp_get_place_proc_ids@@OMP_4.5+0x1f58>  // b.tstop
   1e7f8:	ldr	x3, [x29, #288]
   1e7fc:	lsl	x2, x0, #4
   1e800:	sub	x4, x2, #0x10
   1e804:	add	x4, x3, x4
   1e808:	ldr	x5, [x4, #8]
   1e80c:	cmp	x1, x5
   1e810:	b.cc	1f5f0 <omp_get_place_proc_ids@@OMP_4.5+0x2cf0>  // b.lo, b.ul, b.last
   1e814:	add	x5, x5, #0x1, lsl #12
   1e818:	cmp	x1, x5
   1e81c:	ldr	x5, [x29, #304]
   1e820:	b.cc	1f57c <omp_get_place_proc_ids@@OMP_4.5+0x2c7c>  // b.lo, b.ul, b.last
   1e824:	cmp	x5, #0x1
   1e828:	b.eq	1f678 <omp_get_place_proc_ids@@OMP_4.5+0x2d78>  // b.none
   1e82c:	add	x0, x0, #0x1
   1e830:	b	1e840 <omp_get_place_proc_ids@@OMP_4.5+0x1f40>
   1e834:	ldr	x3, [x29, #288]
   1e838:	mov	x0, x5
   1e83c:	mov	x2, #0x0                   	// #0
   1e840:	add	x4, x3, x2
   1e844:	str	x1, [x3, x2]
   1e848:	ldr	x2, [x29, #232]
   1e84c:	mov	x1, #0x1                   	// #1
   1e850:	str	x2, [x4, #8]
   1e854:	stp	x0, x1, [x29, #296]
   1e858:	mov	w0, #0x1                   	// #1
   1e85c:	add	x28, x28, #0x1
   1e860:	str	w0, [x29, #168]
   1e864:	b	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   1e868:	ldrb	w1, [x29, #196]
   1e86c:	ldp	x5, x4, [x29, #312]
   1e870:	ldr	x0, [x3, #8]
   1e874:	asr	w3, w24, w1
   1e878:	ldp	x8, x6, [x29, #208]
   1e87c:	ldr	x1, [x29, #232]
   1e880:	sub	x0, x1, x0
   1e884:	sub	x1, x5, #0x1
   1e888:	add	x0, x0, x1
   1e88c:	mov	x1, #0x1                   	// #1
   1e890:	lsl	x3, x1, x3
   1e894:	add	x0, x0, x3
   1e898:	neg	x24, x3
   1e89c:	cmp	x6, x3
   1e8a0:	sub	x5, x4, x5
   1e8a4:	and	x0, x24, x0
   1e8a8:	csel	x3, x6, x3, cs  // cs = hs, nlast
   1e8ac:	add	x7, x8, x7
   1e8b0:	add	x0, x5, x0
   1e8b4:	stp	x7, x3, [x29, #208]
   1e8b8:	cmp	x2, x19
   1e8bc:	str	x0, [x29, #232]
   1e8c0:	b.hi	1f5d4 <omp_get_place_proc_ids@@OMP_4.5+0x2cd4>  // b.pmore
   1e8c4:	mov	x28, x2
   1e8c8:	sub	x4, x0, x4
   1e8cc:	mov	w14, #0x0                   	// #0
   1e8d0:	mov	w13, #0x0                   	// #0
   1e8d4:	mov	x12, #0x7fff                	// #32767
   1e8d8:	ldr	x6, [x29, #128]
   1e8dc:	ldp	x7, x3, [x29, #288]
   1e8e0:	ldr	x5, [x29, #304]
   1e8e4:	b	1e954 <omp_get_place_proc_ids@@OMP_4.5+0x2054>
   1e8e8:	ldrh	w0, [x25, x2, lsl #1]
   1e8ec:	and	w0, w22, w0
   1e8f0:	cmp	w0, #0x12
   1e8f4:	b.gt	1e974 <omp_get_place_proc_ids@@OMP_4.5+0x2074>
   1e8f8:	lsl	x0, x1, x0
   1e8fc:	tst	x0, x27
   1e900:	b.ne	1e948 <omp_get_place_proc_ids@@OMP_4.5+0x2048>  // b.any
   1e904:	ldr	x0, [x23, x28, lsl #3]
   1e908:	sub	x2, x0, #0x1
   1e90c:	cmp	x2, x12
   1e910:	b.hi	1e948 <omp_get_place_proc_ids@@OMP_4.5+0x2048>  // b.pmore
   1e914:	ldr	x2, [x20, x28, lsl #3]
   1e918:	cmp	x3, #0x0
   1e91c:	add	x2, x2, x4
   1e920:	cbnz	x3, 1e99c <omp_get_place_proc_ids@@OMP_4.5+0x209c>
   1e924:	add	x0, x2, x0
   1e928:	mov	x8, #0x0                   	// #0
   1e92c:	add	x9, x7, x8
   1e930:	mov	x5, #0x1                   	// #1
   1e934:	add	x3, x3, #0x1
   1e938:	mov	w13, w5
   1e93c:	str	x2, [x7, x8]
   1e940:	mov	w14, #0x1                   	// #1
   1e944:	str	x0, [x9, #8]
   1e948:	add	x28, x28, #0x1
   1e94c:	cmp	x19, x28
   1e950:	b.cc	1e988 <omp_get_place_proc_ids@@OMP_4.5+0x2088>  // b.lo, b.ul, b.last
   1e954:	lsl	x0, x28, #5
   1e958:	sxtw	x2, w28
   1e95c:	str	xzr, [x6, x0]
   1e960:	cbnz	w21, 1e8e8 <omp_get_place_proc_ids@@OMP_4.5+0x1fe8>
   1e964:	ldrb	w0, [x25, x2]
   1e968:	and	w0, w22, w0
   1e96c:	cmp	w0, #0x12
   1e970:	b.le	1e8f8 <omp_get_place_proc_ids@@OMP_4.5+0x1ff8>
   1e974:	cmp	w0, #0x80
   1e978:	b.ne	1e904 <omp_get_place_proc_ids@@OMP_4.5+0x2004>  // b.any
   1e97c:	add	x28, x28, #0x1
   1e980:	cmp	x19, x28
   1e984:	b.cs	1e954 <omp_get_place_proc_ids@@OMP_4.5+0x2054>  // b.hs, b.nlast
   1e988:	cbz	w13, 1e990 <omp_get_place_proc_ids@@OMP_4.5+0x2090>
   1e98c:	str	x3, [x29, #296]
   1e990:	cbz	w14, 1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   1e994:	str	x5, [x29, #304]
   1e998:	b	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   1e99c:	b.lt	1e948 <omp_get_place_proc_ids@@OMP_4.5+0x2048>  // b.tstop
   1e9a0:	lsl	x8, x3, #4
   1e9a4:	sub	x9, x8, #0x10
   1e9a8:	add	x9, x7, x9
   1e9ac:	ldr	x10, [x9, #8]
   1e9b0:	cmp	x2, x10
   1e9b4:	b.cc	1f380 <omp_get_place_proc_ids@@OMP_4.5+0x2a80>  // b.lo, b.ul, b.last
   1e9b8:	add	x10, x10, #0x1, lsl #12
   1e9bc:	add	x0, x2, x0
   1e9c0:	cmp	x2, x10
   1e9c4:	b.cc	1eda8 <omp_get_place_proc_ids@@OMP_4.5+0x24a8>  // b.lo, b.ul, b.last
   1e9c8:	cmp	x5, #0x1
   1e9cc:	b.ne	1e92c <omp_get_place_proc_ids@@OMP_4.5+0x202c>  // b.any
   1e9d0:	sub	x3, x3, #0x1
   1e9d4:	lsl	x8, x3, #4
   1e9d8:	b	1e92c <omp_get_place_proc_ids@@OMP_4.5+0x202c>
   1e9dc:	stp	xzr, xzr, [x25, #16]
   1e9e0:	b	1e3fc <omp_get_place_proc_ids@@OMP_4.5+0x1afc>
   1e9e4:	ldp	x0, x1, [x7, #16]
   1e9e8:	mov	x4, #0x0                   	// #0
   1e9ec:	str	x7, [x29, #184]
   1e9f0:	ldr	x0, [x0, #16]
   1e9f4:	add	x1, x2, x1
   1e9f8:	sub	x12, x0, x12
   1e9fc:	ldr	x0, [x29, #136]
   1ea00:	add	x1, x12, x1
   1ea04:	bl	1d160 <omp_get_place_proc_ids@@OMP_4.5+0x860>
   1ea08:	ldr	x7, [x29, #184]
   1ea0c:	ldr	x0, [x7, #32]
   1ea10:	b	1e358 <omp_get_place_proc_ids@@OMP_4.5+0x1a58>
   1ea14:	b.lt	1e594 <omp_get_place_proc_ids@@OMP_4.5+0x1c94>  // b.tstop
   1ea18:	ldr	x5, [x29, #288]
   1ea1c:	lsl	x3, x0, #4
   1ea20:	sub	x11, x3, #0x10
   1ea24:	add	x11, x5, x11
   1ea28:	ldr	x12, [x11, #8]
   1ea2c:	cmp	x7, x12
   1ea30:	b.cc	1ed9c <omp_get_place_proc_ids@@OMP_4.5+0x249c>  // b.lo, b.ul, b.last
   1ea34:	add	x12, x12, #0x1, lsl #12
   1ea38:	cmp	x7, x12
   1ea3c:	ldr	x12, [x29, #304]
   1ea40:	b.cc	1f568 <omp_get_place_proc_ids@@OMP_4.5+0x2c68>  // b.lo, b.ul, b.last
   1ea44:	cmp	x12, #0x1
   1ea48:	b.eq	1f5e4 <omp_get_place_proc_ids@@OMP_4.5+0x2ce4>  // b.none
   1ea4c:	add	x0, x0, #0x1
   1ea50:	b	1e57c <omp_get_place_proc_ids@@OMP_4.5+0x1c7c>
   1ea54:	ldr	x0, [x29, #208]
   1ea58:	cmp	x0, #0x0
   1ea5c:	ldr	w0, [x29, #120]
   1ea60:	cset	w26, ne  // ne = any
   1ea64:	cmp	w0, #0x0
   1ea68:	ccmp	w26, #0x0, #0x0, eq  // eq = none
   1ea6c:	b.eq	1f508 <omp_get_place_proc_ids@@OMP_4.5+0x2c08>  // b.none
   1ea70:	ldr	w0, [x24, #12]
   1ea74:	ldr	x3, [x24, #96]
   1ea78:	ldr	x1, [x29, #216]
   1ea7c:	ldr	x2, [x29, #232]
   1ea80:	add	x1, x1, x2
   1ea84:	sub	x1, x1, #0x1
   1ea88:	blr	x3
   1ea8c:	str	x0, [x25, #32]
   1ea90:	cbz	x0, 1f774 <omp_get_place_proc_ids@@OMP_4.5+0x2e74>
   1ea94:	ldr	x2, [x29, #216]
   1ea98:	sub	x1, x2, #0x1
   1ea9c:	neg	x27, x2
   1eaa0:	add	x0, x0, x1
   1eaa4:	and	x27, x0, x27
   1eaa8:	ldr	x0, [x29, #232]
   1eaac:	ldr	x1, [x29, #304]
   1eab0:	add	x0, x27, x0
   1eab4:	stp	x27, x0, [x25, #16]
   1eab8:	cmp	x1, #0x1
   1eabc:	ldr	x0, [x29, #296]
   1eac0:	b.ne	1eacc <omp_get_place_proc_ids@@OMP_4.5+0x21cc>  // b.any
   1eac4:	sub	x0, x0, #0x1
   1eac8:	str	x0, [x29, #296]
   1eacc:	ldr	w1, [x29, #168]
   1ead0:	cmp	x0, #0x0
   1ead4:	orr	w26, w26, w1
   1ead8:	b.gt	1f59c <omp_get_place_proc_ids@@OMP_4.5+0x2c9c>
   1eadc:	str	xzr, [x25, #8]
   1eae0:	cbz	w26, 1edc4 <omp_get_place_proc_ids@@OMP_4.5+0x24c4>
   1eae4:	nop
   1eae8:	ldr	x0, [x29, #208]
   1eaec:	cbnz	x0, 1ed7c <omp_get_place_proc_ids@@OMP_4.5+0x247c>
   1eaf0:	mov	x27, #0x0                   	// #0
   1eaf4:	str	xzr, [x29, #176]
   1eaf8:	add	x0, x29, #0x138
   1eafc:	str	x24, [x29, #248]
   1eb00:	mov	x24, x19
   1eb04:	mov	x19, x25
   1eb08:	mov	x25, x27
   1eb0c:	mov	x26, x28
   1eb10:	ldr	x27, [x29, #176]
   1eb14:	mov	x8, #0x0                   	// #0
   1eb18:	mov	x28, x8
   1eb1c:	str	x0, [x29, #160]
   1eb20:	add	x0, x29, #0x150
   1eb24:	add	x1, x29, #0x108
   1eb28:	str	x1, [x29, #104]
   1eb2c:	stp	xzr, xzr, [x29, #120]
   1eb30:	str	x0, [x29, #136]
   1eb34:	mov	x0, #0xffffffffffffffff    	// #-1
   1eb38:	str	x0, [x29, #152]
   1eb3c:	nop
   1eb40:	lsl	x3, x28, #5
   1eb44:	add	x5, x19, x3
   1eb48:	ldr	x0, [x5, #64]
   1eb4c:	cbz	x0, 1ec58 <omp_get_place_proc_ids@@OMP_4.5+0x2358>
   1eb50:	add	x28, x28, #0x1
   1eb54:	cmp	x24, x28
   1eb58:	b.hi	1eb40 <omp_get_place_proc_ids@@OMP_4.5+0x2240>  // b.pmore
   1eb5c:	ldr	w0, [x29, #192]
   1eb60:	mov	x25, x19
   1eb64:	mov	x28, x26
   1eb68:	mov	x19, x24
   1eb6c:	cmp	w0, #0x1
   1eb70:	ldr	x24, [x29, #248]
   1eb74:	b.eq	1f394 <omp_get_place_proc_ids@@OMP_4.5+0x2a94>  // b.none
   1eb78:	ldr	x0, [x29, #176]
   1eb7c:	cbz	x0, 1e3dc <omp_get_place_proc_ids@@OMP_4.5+0x1adc>
   1eb80:	ldr	x0, [x29, #296]
   1eb84:	ldr	x2, [x29, #272]
   1eb88:	cmp	x0, #0x0
   1eb8c:	b.le	1ebf8 <omp_get_place_proc_ids@@OMP_4.5+0x22f8>
   1eb90:	mov	x21, #0x0                   	// #0
   1eb94:	nop
   1eb98:	ldr	x3, [x29, #288]
   1eb9c:	lsl	x1, x21, #4
   1eba0:	ldr	w0, [x24, #12]
   1eba4:	add	x4, x3, x1
   1eba8:	ldr	x19, [x3]
   1ebac:	ldr	x1, [x3, x1]
   1ebb0:	ldr	x22, [x4, #8]
   1ebb4:	sub	x19, x1, x19
   1ebb8:	ldr	x20, [x25, #16]
   1ebbc:	sub	x22, x22, x1
   1ebc0:	ldr	x4, [x24, #120]
   1ebc4:	add	x20, x1, x20
   1ebc8:	add	x19, x2, x19
   1ebcc:	mov	x3, x22
   1ebd0:	mov	x2, x19
   1ebd4:	mov	x1, x20
   1ebd8:	blr	x4
   1ebdc:	tst	w0, #0xff
   1ebe0:	b.eq	1f6dc <omp_get_place_proc_ids@@OMP_4.5+0x2ddc>  // b.none
   1ebe4:	ldr	x0, [x29, #296]
   1ebe8:	add	x21, x21, #0x1
   1ebec:	ldr	x2, [x29, #272]
   1ebf0:	cmp	x0, x21
   1ebf4:	b.gt	1eb98 <omp_get_place_proc_ids@@OMP_4.5+0x2298>
   1ebf8:	mov	x0, x2
   1ebfc:	bl	8900 <free@plt>
   1ec00:	ldr	w0, [x29, #192]
   1ec04:	str	xzr, [x29, #272]
   1ec08:	cmp	w0, #0x3
   1ec0c:	b.ne	1e3e8 <omp_get_place_proc_ids@@OMP_4.5+0x1ae8>  // b.any
   1ec10:	b	1e46c <omp_get_place_proc_ids@@OMP_4.5+0x1b6c>
   1ec14:	ldr	x1, [x29, #224]
   1ec18:	sub	x3, x3, #0x1
   1ec1c:	ldr	x0, [x29, #240]
   1ec20:	str	x3, [x29, #312]
   1ec24:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1ec28:	ldr	x3, [x29, #312]
   1ec2c:	ldr	x2, [x29, #184]
   1ec30:	add	x3, x3, #0x1
   1ec34:	str	x3, [x29, #312]
   1ec38:	cbnz	x0, 1e630 <omp_get_place_proc_ids@@OMP_4.5+0x1d30>
   1ec3c:	ldr	x1, [x29, #224]
   1ec40:	ldr	x0, [x29, #240]
   1ec44:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1ec48:	cbz	x0, 1f748 <omp_get_place_proc_ids@@OMP_4.5+0x2e48>
   1ec4c:	ldr	x2, [x29, #184]
   1ec50:	ldr	x3, [x29, #312]
   1ec54:	b	1e630 <omp_get_place_proc_ids@@OMP_4.5+0x1d30>
   1ec58:	sxtw	x0, w28
   1ec5c:	cbz	w21, 1ef80 <omp_get_place_proc_ids@@OMP_4.5+0x2680>
   1ec60:	ldrh	w6, [x20, x0, lsl #1]
   1ec64:	ldr	x2, [x26, x28, lsl #3]
   1ec68:	lsl	x7, x28, #3
   1ec6c:	add	x15, x26, x7
   1ec70:	cbz	x2, 1eb50 <omp_get_place_proc_ids@@OMP_4.5+0x2250>
   1ec74:	ldr	x0, [x29, #200]
   1ec78:	and	w4, w22, w6
   1ec7c:	cmp	w4, #0x1c
   1ec80:	sub	x14, x0, #0x1
   1ec84:	b.eq	1ef88 <omp_get_place_proc_ids@@OMP_4.5+0x2688>  // b.none
   1ec88:	b.gt	1ee80 <omp_get_place_proc_ids@@OMP_4.5+0x2580>
   1ec8c:	cmp	w4, #0xc
   1ec90:	b.eq	1f02c <omp_get_place_proc_ids@@OMP_4.5+0x272c>  // b.none
   1ec94:	sub	w0, w4, #0xd
   1ec98:	cmp	w0, #0x2
   1ec9c:	b.ls	1eb50 <omp_get_place_proc_ids@@OMP_4.5+0x2250>  // b.plast
   1eca0:	str	x2, [x25]
   1eca4:	cmp	w4, #0x4
   1eca8:	add	x0, x2, #0x8
   1ecac:	b.ne	1f07c <omp_get_place_proc_ids@@OMP_4.5+0x277c>  // b.any
   1ecb0:	str	x0, [x25, #8]
   1ecb4:	mov	x1, x25
   1ecb8:	ldr	x0, [x29, #240]
   1ecbc:	str	w6, [x29, #168]
   1ecc0:	str	w4, [x29, #184]
   1ecc4:	stp	x3, x14, [x29, #208]
   1ecc8:	stp	x5, x7, [x29, #224]
   1eccc:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1ecd0:	ldr	w6, [x29, #168]
   1ecd4:	ldr	w4, [x29, #184]
   1ecd8:	mov	x13, x0
   1ecdc:	ldp	x3, x14, [x29, #208]
   1ece0:	ldp	x5, x7, [x29, #224]
   1ece4:	cbz	x0, 1f378 <omp_get_place_proc_ids@@OMP_4.5+0x2a78>
   1ece8:	ldr	x0, [x0, #32]
   1ecec:	cmn	x0, #0x2
   1ecf0:	b.eq	1f0a0 <omp_get_place_proc_ids@@OMP_4.5+0x27a0>  // b.none
   1ecf4:	and	w2, w4, #0xe
   1ecf8:	sub	w1, w4, #0x12
   1ecfc:	cmp	w2, #0x2
   1ed00:	and	w1, w1, #0xff
   1ed04:	cset	w2, eq  // eq = none
   1ed08:	cmp	w1, #0x1
   1ed0c:	cset	w1, ls  // ls = plast
   1ed10:	str	x13, [x5, #64]
   1ed14:	strb	w2, [x5, #72]
   1ed18:	add	x6, x19, x3
   1ed1c:	strb	w1, [x5, #73]
   1ed20:	sxtb	w4, w4
   1ed24:	ldr	x5, [x13]
   1ed28:	cmp	w4, #0x0
   1ed2c:	ldr	x2, [x25]
   1ed30:	sub	x1, x2, x5
   1ed34:	str	x1, [x6, #80]
   1ed38:	ccmp	x2, x5, #0x0, ge  // ge = tcont
   1ed3c:	ldr	x1, [x25, #8]
   1ed40:	sub	x3, x1, x2
   1ed44:	str	x3, [x6, #88]
   1ed48:	b.cc	1f75c <omp_get_place_proc_ids@@OMP_4.5+0x2e5c>  // b.lo, b.ul, b.last
   1ed4c:	ldr	x6, [x13, #8]
   1ed50:	cmp	x1, x6
   1ed54:	b.hi	1f75c <omp_get_place_proc_ids@@OMP_4.5+0x2e5c>  // b.pmore
   1ed58:	and	w4, w4, #0xfffffffd
   1ed5c:	cmp	w4, #0x11
   1ed60:	b.eq	1f51c <omp_get_place_proc_ids@@OMP_4.5+0x2c1c>  // b.none
   1ed64:	add	x28, x28, #0x1
   1ed68:	cmn	x0, #0x1
   1ed6c:	b.eq	1eb54 <omp_get_place_proc_ids@@OMP_4.5+0x2254>  // b.none
   1ed70:	add	x0, x0, #0x1
   1ed74:	str	x0, [x13, #32]
   1ed78:	b	1eb54 <omp_get_place_proc_ids@@OMP_4.5+0x2254>
   1ed7c:	str	xzr, [x29, #176]
   1ed80:	ldr	x0, [x29, #208]
   1ed84:	add	x0, x0, x0, lsl #3
   1ed88:	lsl	x0, x0, #3
   1ed8c:	bl	b220 <fprintf@plt+0x2710>
   1ed90:	mov	x27, x0
   1ed94:	str	x0, [x25, #8]
   1ed98:	b	1eaf8 <omp_get_place_proc_ids@@OMP_4.5+0x21f8>
   1ed9c:	mov	x0, #0xffffffffffffffff    	// #-1
   1eda0:	str	x0, [x29, #296]
   1eda4:	b	1e594 <omp_get_place_proc_ids@@OMP_4.5+0x1c94>
   1eda8:	add	x5, x5, #0x1
   1edac:	mov	w14, #0x1                   	// #1
   1edb0:	str	x0, [x9, #8]
   1edb4:	b	1e948 <omp_get_place_proc_ids@@OMP_4.5+0x2048>
   1edb8:	str	xzr, [x25, #8]
   1edbc:	cbnz	w26, 1eae8 <omp_get_place_proc_ids@@OMP_4.5+0x21e8>
   1edc0:	str	xzr, [x29, #176]
   1edc4:	add	x23, x25, #0x40
   1edc8:	sub	x20, x28, #0x8
   1edcc:	add	x21, x29, #0x150
   1edd0:	mov	x1, x27
   1edd4:	mov	x22, #0x0                   	// #0
   1edd8:	ldr	x26, [x29, #176]
   1eddc:	b	1ee1c <omp_get_place_proc_ids@@OMP_4.5+0x251c>
   1ede0:	ldp	x4, x2, [x2, #16]
   1ede4:	ldr	x5, [x4, #16]
   1ede8:	add	x3, x3, x2
   1edec:	add	x5, x3, x5
   1edf0:	add	x1, x1, x0
   1edf4:	mov	x4, x26
   1edf8:	mov	x2, x21
   1edfc:	mov	x0, x24
   1ee00:	mov	x3, #0x8                   	// #8
   1ee04:	str	x5, [x29, #336]
   1ee08:	bl	1d160 <omp_get_place_proc_ids@@OMP_4.5+0x860>
   1ee0c:	add	x23, x23, #0x20
   1ee10:	cmp	x19, x22
   1ee14:	b.eq	1eb78 <omp_get_place_proc_ids@@OMP_4.5+0x2278>  // b.none
   1ee18:	ldr	x1, [x25, #16]
   1ee1c:	add	x22, x22, #0x1
   1ee20:	ldr	x2, [x23]
   1ee24:	lsl	x0, x22, #3
   1ee28:	sub	x0, x0, #0x8
   1ee2c:	ldr	x3, [x23, #16]
   1ee30:	cbnz	x2, 1ede0 <omp_get_place_proc_ids@@OMP_4.5+0x24e0>
   1ee34:	cmn	x3, #0x1
   1ee38:	b.eq	1f370 <omp_get_place_proc_ids@@OMP_4.5+0x2a70>  // b.none
   1ee3c:	cmn	x3, #0x2
   1ee40:	mov	x5, #0x0                   	// #0
   1ee44:	b.eq	1edf0 <omp_get_place_proc_ids@@OMP_4.5+0x24f0>  // b.none
   1ee48:	cmn	x3, #0x3
   1ee4c:	add	x5, x1, x3
   1ee50:	b.ne	1edf0 <omp_get_place_proc_ids@@OMP_4.5+0x24f0>  // b.any
   1ee54:	ldr	x2, [x23, #32]
   1ee58:	ldr	x4, [x28, x22, lsl #3]
   1ee5c:	ldp	x6, x5, [x2, #16]
   1ee60:	ldr	x3, [x20, x22, lsl #3]
   1ee64:	sub	x3, x3, x4
   1ee68:	ldr	x4, [x23, #48]
   1ee6c:	ldr	x2, [x6, #16]
   1ee70:	add	x5, x5, x4
   1ee74:	add	x3, x3, x5
   1ee78:	add	x5, x3, x2
   1ee7c:	b	1edf0 <omp_get_place_proc_ids@@OMP_4.5+0x24f0>
   1ee80:	cmp	w4, #0x1d
   1ee84:	b.ne	1f078 <omp_get_place_proc_ids@@OMP_4.5+0x2778>  // b.any
   1ee88:	add	x0, x2, #0x8
   1ee8c:	stp	x2, x0, [x29, #312]
   1ee90:	ldr	x1, [x29, #160]
   1ee94:	stp	x3, x5, [x29, #216]
   1ee98:	ldr	x0, [x29, #240]
   1ee9c:	str	x7, [x29, #232]
   1eea0:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1eea4:	mov	x6, x0
   1eea8:	cbz	x0, 1f6c8 <omp_get_place_proc_ids@@OMP_4.5+0x2dc8>
   1eeac:	ldr	x13, [x0]
   1eeb0:	ldr	x1, [x29, #312]
   1eeb4:	cmp	x13, x1
   1eeb8:	b.hi	1f6c8 <omp_get_place_proc_ids@@OMP_4.5+0x2dc8>  // b.pmore
   1eebc:	ldr	x2, [x0, #8]
   1eec0:	ldr	x0, [x29, #320]
   1eec4:	ldp	x3, x5, [x29, #216]
   1eec8:	cmp	x2, x0
   1eecc:	ldr	x7, [x29, #232]
   1eed0:	b.cc	1f6c8 <omp_get_place_proc_ids@@OMP_4.5+0x2dc8>  // b.lo, b.ul, b.last
   1eed4:	sub	w0, w28, #0x1
   1eed8:	sxtw	x2, w0
   1eedc:	cbz	w21, 1f088 <omp_get_place_proc_ids@@OMP_4.5+0x2788>
   1eee0:	ldrh	w0, [x20, x2, lsl #1]
   1eee4:	and	w0, w22, w0
   1eee8:	cmp	w0, #0x1d
   1eeec:	b.eq	1f098 <omp_get_place_proc_ids@@OMP_4.5+0x2798>  // b.none
   1eef0:	sub	x4, x28, #0x1
   1eef4:	ldr	x2, [x5, #32]
   1eef8:	add	x0, x19, x4, lsl #5
   1eefc:	ldr	x0, [x0, #80]
   1ef00:	cbz	x2, 1f31c <omp_get_place_proc_ids@@OMP_4.5+0x2a1c>
   1ef04:	ldp	x4, x3, [x2, #16]
   1ef08:	ldr	x2, [x4, #16]
   1ef0c:	add	x0, x0, x3
   1ef10:	add	x0, x0, x2
   1ef14:	str	x0, [x29, #336]
   1ef18:	cbz	x0, 1ef28 <omp_get_place_proc_ids@@OMP_4.5+0x2628>
   1ef1c:	ldr	x2, [x23, x7]
   1ef20:	sub	x0, x0, x2
   1ef24:	str	x0, [x29, #336]
   1ef28:	ldp	x0, x2, [x6, #16]
   1ef2c:	mov	x3, #0x8                   	// #8
   1ef30:	mov	x4, x27
   1ef34:	str	x6, [x29, #232]
   1ef38:	add	x28, x28, #0x1
   1ef3c:	ldr	x0, [x0, #16]
   1ef40:	add	x1, x1, x2
   1ef44:	ldr	x2, [x29, #136]
   1ef48:	sub	x13, x0, x13
   1ef4c:	ldr	x0, [x29, #248]
   1ef50:	add	x1, x13, x1
   1ef54:	bl	1d160 <omp_get_place_proc_ids@@OMP_4.5+0x860>
   1ef58:	ldr	x6, [x29, #232]
   1ef5c:	ldr	x2, [x29, #312]
   1ef60:	ldp	x0, x1, [x6, #16]
   1ef64:	ldr	x3, [x6]
   1ef68:	ldr	x0, [x0, #16]
   1ef6c:	add	x1, x1, x2
   1ef70:	sub	x0, x0, x3
   1ef74:	add	x0, x0, x1
   1ef78:	str	x0, [x29, #336]
   1ef7c:	b	1eb54 <omp_get_place_proc_ids@@OMP_4.5+0x2254>
   1ef80:	ldrb	w6, [x20, x0]
   1ef84:	b	1ec64 <omp_get_place_proc_ids@@OMP_4.5+0x2364>
   1ef88:	ldr	x13, [x23, x7]
   1ef8c:	ldr	x1, [x5, #96]
   1ef90:	add	x13, x28, x13
   1ef94:	ldr	x0, [x26, x13, lsl #3]
   1ef98:	ldr	x3, [x23, x13, lsl #3]
   1ef9c:	add	x0, x0, x3
   1efa0:	stp	x2, x0, [x29, #312]
   1efa4:	add	x2, x28, #0x1
   1efa8:	mov	x28, x2
   1efac:	cbnz	x1, 1eb54 <omp_get_place_proc_ids@@OMP_4.5+0x2254>
   1efb0:	ldr	x1, [x29, #160]
   1efb4:	str	x2, [x29, #168]
   1efb8:	ldr	x0, [x29, #240]
   1efbc:	str	w6, [x29, #184]
   1efc0:	stp	x14, x13, [x29, #208]
   1efc4:	stp	x15, x7, [x29, #224]
   1efc8:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1efcc:	ldr	w6, [x29, #184]
   1efd0:	ldp	x14, x13, [x29, #208]
   1efd4:	ldp	x15, x7, [x29, #224]
   1efd8:	cbnz	x0, 1f39c <omp_get_place_proc_ids@@OMP_4.5+0x2a9c>
   1efdc:	ldrb	w0, [x29, #196]
   1efe0:	mov	x1, #0x1                   	// #1
   1efe4:	ldr	x2, [x26, x7]
   1efe8:	str	x13, [x29, #152]
   1efec:	ldr	x4, [x15, #8]
   1eff0:	asr	w0, w6, w0
   1eff4:	add	x14, x2, x14
   1eff8:	lsl	x0, x1, x0
   1effc:	sub	x1, x0, x4
   1f000:	neg	x0, x0
   1f004:	ldr	x3, [x29, #320]
   1f008:	add	x1, x1, x14
   1f00c:	and	x0, x1, x0
   1f010:	sub	x2, x4, x2
   1f014:	add	x1, x2, x0
   1f018:	sub	x0, x3, x4
   1f01c:	add	x0, x0, x1
   1f020:	stp	x4, x1, [x29, #120]
   1f024:	str	x0, [x29, #200]
   1f028:	b	1eb54 <omp_get_place_proc_ids@@OMP_4.5+0x2254>
   1f02c:	ldrb	w1, [x29, #196]
   1f030:	add	x0, x19, x3
   1f034:	ldr	x3, [x23, x7]
   1f038:	add	x28, x28, #0x1
   1f03c:	asr	w6, w6, w1
   1f040:	mov	x1, #0x1                   	// #1
   1f044:	lsl	x6, x1, x6
   1f048:	add	x14, x6, x14
   1f04c:	neg	x6, x6
   1f050:	mov	x4, x27
   1f054:	and	x6, x14, x6
   1f058:	ldr	x1, [x19, #16]
   1f05c:	str	x6, [x0, #80]
   1f060:	add	x0, x6, x3
   1f064:	str	x0, [x29, #200]
   1f068:	ldr	x0, [x29, #248]
   1f06c:	add	x1, x6, x1
   1f070:	bl	1d160 <omp_get_place_proc_ids@@OMP_4.5+0x860>
   1f074:	b	1eb54 <omp_get_place_proc_ids@@OMP_4.5+0x2254>
   1f078:	str	x2, [x25]
   1f07c:	ldr	x0, [x23, x7]
   1f080:	add	x0, x2, x0
   1f084:	b	1ecb0 <omp_get_place_proc_ids@@OMP_4.5+0x23b0>
   1f088:	ldrb	w0, [x20, w0, sxtw]
   1f08c:	and	w0, w22, w0
   1f090:	cmp	w0, #0x1d
   1f094:	b.ne	1eef0 <omp_get_place_proc_ids@@OMP_4.5+0x25f0>  // b.any
   1f098:	ldr	x0, [x29, #336]
   1f09c:	b	1ef18 <omp_get_place_proc_ids@@OMP_4.5+0x2618>
   1f0a0:	ldr	x0, [x29, #240]
   1f0a4:	str	xzr, [x25, #48]
   1f0a8:	mov	x1, x13
   1f0ac:	str	w6, [x29, #116]
   1f0b0:	str	w4, [x29, #168]
   1f0b4:	str	x3, [x29, #184]
   1f0b8:	stp	x14, x5, [x29, #208]
   1f0bc:	stp	x7, x13, [x29, #224]
   1f0c0:	bl	22268 <omp_pause_resource_all@@OMP_5.0+0x290>
   1f0c4:	ldr	w6, [x29, #116]
   1f0c8:	ldp	x14, x5, [x29, #208]
   1f0cc:	ldr	w4, [x29, #168]
   1f0d0:	ldr	x3, [x29, #184]
   1f0d4:	ldp	x7, x13, [x29, #224]
   1f0d8:	str	x13, [x25, #48]
   1f0dc:	ldp	x0, x2, [x25]
   1f0e0:	str	x25, [x5, #64]
   1f0e4:	ldr	x1, [x29, #152]
   1f0e8:	str	x19, [x25, #16]
   1f0ec:	cmn	x1, #0x1
   1f0f0:	sub	x2, x2, x0
   1f0f4:	b.eq	1f344 <omp_get_place_proc_ids@@OMP_4.5+0x2a44>  // b.none
   1f0f8:	ldr	x8, [x29, #120]
   1f0fc:	cmp	x28, x1
   1f100:	csinv	x1, x1, xzr, ne  // ne = any
   1f104:	str	x1, [x29, #152]
   1f108:	sub	x0, x0, x8
   1f10c:	ldr	x8, [x29, #128]
   1f110:	add	x0, x0, x8
   1f114:	str	x0, [x25, #24]
   1f118:	and	w1, w4, #0xe
   1f11c:	and	w0, w4, #0xfffffffe
   1f120:	cmp	w1, #0x2
   1f124:	add	x3, x19, x3
   1f128:	cset	w1, eq  // eq = none
   1f12c:	cmp	w0, #0x12
   1f130:	cset	w0, eq  // eq = none
   1f134:	strb	w1, [x5, #72]
   1f138:	strb	w0, [x5, #73]
   1f13c:	mov	x1, x25
   1f140:	stp	xzr, x2, [x3, #80]
   1f144:	mov	x3, #0x1                   	// #1
   1f148:	ldr	x2, [x19]
   1f14c:	stp	x3, xzr, [x25, #32]
   1f150:	ldr	x0, [x29, #240]
   1f154:	add	x2, x2, x3
   1f158:	str	x2, [x19]
   1f15c:	stp	xzr, xzr, [x25, #56]
   1f160:	str	x13, [x29, #184]
   1f164:	str	w6, [x29, #208]
   1f168:	str	x7, [x29, #216]
   1f16c:	str	w4, [x29, #224]
   1f170:	str	x5, [x29, #232]
   1f174:	bl	221b0 <omp_pause_resource_all@@OMP_5.0+0x1d8>
   1f178:	ldr	w4, [x29, #224]
   1f17c:	ldr	x13, [x29, #184]
   1f180:	cmp	w4, #0x5
   1f184:	ldr	x5, [x29, #232]
   1f188:	b.eq	1f420 <omp_get_place_proc_ids@@OMP_4.5+0x2b20>  // b.none
   1f18c:	ldr	w6, [x29, #208]
   1f190:	b.le	1f234 <omp_get_place_proc_ids@@OMP_4.5+0x2934>
   1f194:	cmp	w4, #0x11
   1f198:	b.eq	1f1c0 <omp_get_place_proc_ids@@OMP_4.5+0x28c0>  // b.none
   1f19c:	b.le	1f268 <omp_get_place_proc_ids@@OMP_4.5+0x2968>
   1f1a0:	cmp	w4, #0x80
   1f1a4:	b.eq	1f1e8 <omp_get_place_proc_ids@@OMP_4.5+0x28e8>  // b.none
   1f1a8:	b.le	1f2e0 <omp_get_place_proc_ids@@OMP_4.5+0x29e0>
   1f1ac:	cmp	w4, #0x82
   1f1b0:	b.eq	1f1e8 <omp_get_place_proc_ids@@OMP_4.5+0x28e8>  // b.none
   1f1b4:	and	w4, w4, #0xfffffffd
   1f1b8:	cmp	w4, #0x81
   1f1bc:	b.ne	1f2b4 <omp_get_place_proc_ids@@OMP_4.5+0x29b4>  // b.any
   1f1c0:	ldp	x2, x3, [x25]
   1f1c4:	mov	x4, x27
   1f1c8:	ldr	x5, [x19, #16]
   1f1cc:	str	x13, [x29, #232]
   1f1d0:	ldr	x0, [x29, #248]
   1f1d4:	ldr	x1, [x25, #24]
   1f1d8:	sub	x3, x3, x2
   1f1dc:	add	x1, x5, x1
   1f1e0:	bl	1d160 <omp_get_place_proc_ids@@OMP_4.5+0x860>
   1f1e4:	ldr	x13, [x29, #232]
   1f1e8:	ldr	x0, [x25, #48]
   1f1ec:	cbz	x0, 1f22c <omp_get_place_proc_ids@@OMP_4.5+0x292c>
   1f1f0:	ldr	x5, [x29, #248]
   1f1f4:	mov	x3, #0x8                   	// #8
   1f1f8:	ldr	x4, [x19, #16]
   1f1fc:	ldr	x1, [x25, #24]
   1f200:	ldr	w0, [x5, #12]
   1f204:	add	x4, x4, x1
   1f208:	str	x4, [x29, #264]
   1f20c:	ldr	x1, [x13, #24]
   1f210:	str	x1, [x29, #232]
   1f214:	ldr	x2, [x29, #104]
   1f218:	ldr	x5, [x5, #120]
   1f21c:	blr	x5
   1f220:	tst	w0, #0xff
   1f224:	ldr	x1, [x29, #232]
   1f228:	b.eq	1f7b0 <omp_get_place_proc_ids@@OMP_4.5+0x2eb0>  // b.none
   1f22c:	add	x25, x25, #0x48
   1f230:	b	1eb50 <omp_get_place_proc_ids@@OMP_4.5+0x2250>
   1f234:	cmp	w4, #0x4
   1f238:	ldr	x7, [x29, #216]
   1f23c:	b.ne	1f2ac <omp_get_place_proc_ids@@OMP_4.5+0x29ac>  // b.any
   1f240:	ldr	x1, [x25]
   1f244:	mov	x4, x27
   1f248:	ldr	x3, [x23, x7]
   1f24c:	mov	x0, x19
   1f250:	ldr	x1, [x1]
   1f254:	str	x13, [x29, #232]
   1f258:	ldr	x2, [x25, #24]
   1f25c:	bl	1d2a0 <omp_get_place_proc_ids@@OMP_4.5+0x9a0>
   1f260:	ldr	x13, [x29, #232]
   1f264:	b	1f1e8 <omp_get_place_proc_ids@@OMP_4.5+0x28e8>
   1f268:	cmp	w4, #0x6
   1f26c:	b.eq	1f788 <omp_get_place_proc_ids@@OMP_4.5+0x2e88>  // b.none
   1f270:	cmp	w4, #0x8
   1f274:	b.ne	1f2b4 <omp_get_place_proc_ids@@OMP_4.5+0x29b4>  // b.any
   1f278:	ldp	x2, x3, [x25]
   1f27c:	sub	x3, x3, x2
   1f280:	cmp	x3, #0x8
   1f284:	b.ne	1f7f0 <omp_get_place_proc_ids@@OMP_4.5+0x2ef0>  // b.any
   1f288:	ldr	x5, [x19, #16]
   1f28c:	mov	x4, x27
   1f290:	ldr	x0, [x29, #248]
   1f294:	str	x13, [x29, #232]
   1f298:	ldr	x1, [x25, #24]
   1f29c:	add	x1, x5, x1
   1f2a0:	bl	1d160 <omp_get_place_proc_ids@@OMP_4.5+0x860>
   1f2a4:	ldr	x13, [x29, #232]
   1f2a8:	b	1f1e8 <omp_get_place_proc_ids@@OMP_4.5+0x28e8>
   1f2ac:	cmp	w4, #0x5
   1f2b0:	b.ne	1f2f4 <omp_get_place_proc_ids@@OMP_4.5+0x29f4>  // b.any
   1f2b4:	ldr	x0, [x29, #144]
   1f2b8:	str	w6, [x29, #248]
   1f2bc:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1f2c0:	ldr	w6, [x29, #248]
   1f2c4:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f2c8:	add	x1, x1, #0x490
   1f2cc:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f2d0:	add	x1, x1, #0x10
   1f2d4:	add	x0, x0, #0x408
   1f2d8:	mov	w2, w6
   1f2dc:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1f2e0:	cmp	w4, #0x12
   1f2e4:	b.eq	1f1e8 <omp_get_place_proc_ids@@OMP_4.5+0x28e8>  // b.none
   1f2e8:	cmp	w4, #0x13
   1f2ec:	b.eq	1f1c0 <omp_get_place_proc_ids@@OMP_4.5+0x28c0>  // b.none
   1f2f0:	b	1f2b4 <omp_get_place_proc_ids@@OMP_4.5+0x29b4>
   1f2f4:	cmp	w4, #0x2
   1f2f8:	b.eq	1f1e8 <omp_get_place_proc_ids@@OMP_4.5+0x28e8>  // b.none
   1f2fc:	b.le	1f30c <omp_get_place_proc_ids@@OMP_4.5+0x2a0c>
   1f300:	cmp	w4, #0x3
   1f304:	b.eq	1f1c0 <omp_get_place_proc_ids@@OMP_4.5+0x28c0>  // b.none
   1f308:	b	1f2b4 <omp_get_place_proc_ids@@OMP_4.5+0x29b4>
   1f30c:	cbz	w4, 1f1e8 <omp_get_place_proc_ids@@OMP_4.5+0x28e8>
   1f310:	cmp	w4, #0x1
   1f314:	b.eq	1f1c0 <omp_get_place_proc_ids@@OMP_4.5+0x28c0>  // b.none
   1f318:	b	1f2b4 <omp_get_place_proc_ids@@OMP_4.5+0x29b4>
   1f31c:	cmn	x0, #0x1
   1f320:	b.eq	1f590 <omp_get_place_proc_ids@@OMP_4.5+0x2c90>  // b.none
   1f324:	cmn	x0, #0x2
   1f328:	b.eq	1f5dc <omp_get_place_proc_ids@@OMP_4.5+0x2cdc>  // b.none
   1f32c:	cmn	x0, #0x3
   1f330:	b.eq	1f620 <omp_get_place_proc_ids@@OMP_4.5+0x2d20>  // b.none
   1f334:	ldr	x2, [x19, #16]
   1f338:	add	x0, x0, x2
   1f33c:	str	x0, [x29, #336]
   1f340:	b	1ef18 <omp_get_place_proc_ids@@OMP_4.5+0x2618>
   1f344:	ldrb	w0, [x29, #196]
   1f348:	mov	x1, #0x1                   	// #1
   1f34c:	asr	w0, w6, w0
   1f350:	lsl	x0, x1, x0
   1f354:	add	x14, x0, x14
   1f358:	neg	x0, x0
   1f35c:	and	x0, x14, x0
   1f360:	str	x0, [x25, #24]
   1f364:	add	x0, x0, x2
   1f368:	str	x0, [x29, #200]
   1f36c:	b	1f118 <omp_get_place_proc_ids@@OMP_4.5+0x2818>
   1f370:	ldr	x5, [x20, x22, lsl #3]
   1f374:	b	1edf0 <omp_get_place_proc_ids@@OMP_4.5+0x24f0>
   1f378:	str	xzr, [x25, #48]
   1f37c:	b	1f0dc <omp_get_place_proc_ids@@OMP_4.5+0x27dc>
   1f380:	mov	w13, #0x1                   	// #1
   1f384:	mov	x3, #0xffffffffffffffff    	// #-1
   1f388:	b	1e948 <omp_get_place_proc_ids@@OMP_4.5+0x2048>
   1f38c:	str	xzr, [x29, #296]
   1f390:	b	1e1cc <omp_get_place_proc_ids@@OMP_4.5+0x18cc>
   1f394:	ldr	x27, [x25, #16]
   1f398:	b	1edc4 <omp_get_place_proc_ids@@OMP_4.5+0x24c4>
   1f39c:	cmp	x28, x13
   1f3a0:	ldr	x2, [x29, #168]
   1f3a4:	b.hi	1eb54 <omp_get_place_proc_ids@@OMP_4.5+0x2254>  // b.pmore
   1f3a8:	str	x24, [x29, #216]
   1f3ac:	mov	x24, x20
   1f3b0:	mov	x20, x0
   1f3b4:	str	w22, [x29, #224]
   1f3b8:	mov	x22, x28
   1f3bc:	mov	w28, w21
   1f3c0:	mov	x21, x19
   1f3c4:	mov	x19, x13
   1f3c8:	str	x25, [x29, #232]
   1f3cc:	mov	x25, x2
   1f3d0:	mov	x3, x22
   1f3d4:	mov	x7, x27
   1f3d8:	mov	x6, x24
   1f3dc:	mov	x5, x23
   1f3e0:	mov	x4, x26
   1f3e4:	mov	x2, x25
   1f3e8:	add	x22, x22, #0x1
   1f3ec:	mov	x1, x20
   1f3f0:	mov	x0, x21
   1f3f4:	bl	1dd08 <omp_get_place_proc_ids@@OMP_4.5+0x1408>
   1f3f8:	cmp	x19, x22
   1f3fc:	b.cs	1f3d0 <omp_get_place_proc_ids@@OMP_4.5+0x2ad0>  // b.hs, b.nlast
   1f400:	mov	x19, x21
   1f404:	mov	x20, x24
   1f408:	mov	w21, w28
   1f40c:	mov	x28, x22
   1f410:	ldr	w22, [x29, #224]
   1f414:	ldr	x24, [x29, #216]
   1f418:	ldr	x25, [x29, #232]
   1f41c:	b	1eb54 <omp_get_place_proc_ids@@OMP_4.5+0x2254>
   1f420:	ldp	x2, x3, [x25]
   1f424:	mov	x4, x27
   1f428:	ldr	x6, [x19, #16]
   1f42c:	stp	x13, x5, [x29, #224]
   1f430:	ldr	x0, [x29, #248]
   1f434:	sub	x3, x3, x2
   1f438:	ldr	x1, [x25, #24]
   1f43c:	add	x1, x6, x1
   1f440:	bl	1d160 <omp_get_place_proc_ids@@OMP_4.5+0x860>
   1f444:	add	x6, x28, #0x1
   1f448:	cmp	x24, x6
   1f44c:	ldr	x13, [x29, #224]
   1f450:	b.ls	1f1e8 <omp_get_place_proc_ids@@OMP_4.5+0x28e8>  // b.plast
   1f454:	ldr	x5, [x29, #232]
   1f458:	mov	x28, x6
   1f45c:	str	x23, [x29, #232]
   1f460:	mov	x23, x27
   1f464:	mov	x27, x5
   1f468:	b	1f4f4 <omp_get_place_proc_ids@@OMP_4.5+0x2bf4>
   1f46c:	ldrh	w0, [x20, x0, lsl #1]
   1f470:	and	w0, w22, w0
   1f474:	cmp	w0, #0x4
   1f478:	b.ne	1f54c <omp_get_place_proc_ids@@OMP_4.5+0x2c4c>  // b.any
   1f47c:	ldr	x2, [x26, x28, lsl #3]
   1f480:	ldr	x7, [x25]
   1f484:	cmp	x2, x7
   1f488:	b.cc	1f54c <omp_get_place_proc_ids@@OMP_4.5+0x2c4c>  // b.lo, b.ul, b.last
   1f48c:	ldr	x0, [x25, #8]
   1f490:	add	x1, x2, #0x8
   1f494:	cmp	x1, x0
   1f498:	b.hi	1f54c <omp_get_place_proc_ids@@OMP_4.5+0x2c4c>  // b.pmore
   1f49c:	ldr	x0, [x25, #32]
   1f4a0:	str	x25, [x27, #96]
   1f4a4:	strb	wzr, [x27, #104]
   1f4a8:	strb	wzr, [x27, #105]
   1f4ac:	cmn	x0, #0x1
   1f4b0:	b.eq	1f4bc <omp_get_place_proc_ids@@OMP_4.5+0x2bbc>  // b.none
   1f4b4:	add	x0, x0, #0x1
   1f4b8:	str	x0, [x25, #32]
   1f4bc:	ldr	x3, [x29, #232]
   1f4c0:	mov	x0, x19
   1f4c4:	ldr	x6, [x25, #24]
   1f4c8:	mov	x4, x23
   1f4cc:	ldr	x1, [x2]
   1f4d0:	sub	x6, x6, x7
   1f4d4:	ldr	x3, [x3, x28, lsl #3]
   1f4d8:	add	x2, x2, x6
   1f4dc:	add	x27, x27, #0x20
   1f4e0:	bl	1d2a0 <omp_get_place_proc_ids@@OMP_4.5+0x9a0>
   1f4e4:	add	x0, x28, #0x1
   1f4e8:	cmp	x24, x0
   1f4ec:	b.ls	1f654 <omp_get_place_proc_ids@@OMP_4.5+0x2d54>  // b.plast
   1f4f0:	mov	x28, x0
   1f4f4:	sub	x3, x28, #0x1
   1f4f8:	sxtw	x0, w28
   1f4fc:	cbnz	w21, 1f46c <omp_get_place_proc_ids@@OMP_4.5+0x2b6c>
   1f500:	ldrb	w0, [x20, x0]
   1f504:	b	1f470 <omp_get_place_proc_ids@@OMP_4.5+0x2b70>
   1f508:	ldr	w0, [x29, #168]
   1f50c:	stp	xzr, xzr, [x25, #8]
   1f510:	stp	xzr, xzr, [x25, #24]
   1f514:	cbz	w0, 1e3dc <omp_get_place_proc_ids@@OMP_4.5+0x1adc>
   1f518:	b	1eaf0 <omp_get_place_proc_ids@@OMP_4.5+0x21f0>
   1f51c:	ldp	x0, x1, [x13, #16]
   1f520:	mov	x4, x27
   1f524:	str	x13, [x29, #232]
   1f528:	ldr	x0, [x0, #16]
   1f52c:	add	x1, x2, x1
   1f530:	sub	x5, x0, x5
   1f534:	ldr	x0, [x29, #248]
   1f538:	add	x1, x5, x1
   1f53c:	bl	1d160 <omp_get_place_proc_ids@@OMP_4.5+0x860>
   1f540:	ldr	x13, [x29, #232]
   1f544:	ldr	x0, [x13, #32]
   1f548:	b	1ed64 <omp_get_place_proc_ids@@OMP_4.5+0x2464>
   1f54c:	mov	x27, x23
   1f550:	mov	x28, x3
   1f554:	ldp	x13, x23, [x29, #224]
   1f558:	b	1f1e8 <omp_get_place_proc_ids@@OMP_4.5+0x28e8>
   1f55c:	ldr	x0, [x29, #144]
   1f560:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1f564:	b	1e3fc <omp_get_place_proc_ids@@OMP_4.5+0x1afc>
   1f568:	ldr	x0, [x29, #232]
   1f56c:	str	x0, [x11, #8]
   1f570:	add	x12, x12, #0x1
   1f574:	str	x12, [x29, #304]
   1f578:	b	1e594 <omp_get_place_proc_ids@@OMP_4.5+0x1c94>
   1f57c:	ldr	x0, [x29, #232]
   1f580:	str	x0, [x4, #8]
   1f584:	add	x5, x5, #0x1
   1f588:	str	x5, [x29, #304]
   1f58c:	b	1e858 <omp_get_place_proc_ids@@OMP_4.5+0x1f58>
   1f590:	ldr	x0, [x26, x4, lsl #3]
   1f594:	str	x0, [x29, #336]
   1f598:	b	1ef18 <omp_get_place_proc_ids@@OMP_4.5+0x2618>
   1f59c:	ldr	x1, [x29, #288]
   1f5a0:	add	x0, x1, x0, lsl #4
   1f5a4:	ldr	x1, [x1]
   1f5a8:	ldur	x0, [x0, #-8]
   1f5ac:	sub	x0, x0, x1
   1f5b0:	bl	8760 <malloc@plt>
   1f5b4:	str	x0, [x29, #272]
   1f5b8:	cbz	x0, 1edb8 <omp_get_place_proc_ids@@OMP_4.5+0x24b8>
   1f5bc:	str	xzr, [x25, #8]
   1f5c0:	str	x25, [x29, #280]
   1f5c4:	cbnz	w26, 1f660 <omp_get_place_proc_ids@@OMP_4.5+0x2d60>
   1f5c8:	add	x0, x29, #0x110
   1f5cc:	str	x0, [x29, #176]
   1f5d0:	b	1edc4 <omp_get_place_proc_ids@@OMP_4.5+0x24c4>
   1f5d4:	mov	x28, x2
   1f5d8:	b	1e370 <omp_get_place_proc_ids@@OMP_4.5+0x1a70>
   1f5dc:	str	xzr, [x29, #336]
   1f5e0:	b	1ef28 <omp_get_place_proc_ids@@OMP_4.5+0x2628>
   1f5e4:	sub	x3, x0, #0x1
   1f5e8:	lsl	x3, x3, #4
   1f5ec:	b	1e57c <omp_get_place_proc_ids@@OMP_4.5+0x1c7c>
   1f5f0:	mov	x0, #0xffffffffffffffff    	// #-1
   1f5f4:	str	x0, [x29, #296]
   1f5f8:	b	1e858 <omp_get_place_proc_ids@@OMP_4.5+0x1f58>
   1f5fc:	ldr	x1, [x29, #144]
   1f600:	ldxr	w0, [x1]
   1f604:	stlxr	w2, wzr, [x1]
   1f608:	cbnz	w2, 1f600 <omp_get_place_proc_ids@@OMP_4.5+0x2d00>
   1f60c:	tbnz	w0, #31, 1f690 <omp_get_place_proc_ids@@OMP_4.5+0x2d90>
   1f610:	mov	x0, x25
   1f614:	mov	x25, #0x0                   	// #0
   1f618:	bl	8900 <free@plt>
   1f61c:	b	1e3fc <omp_get_place_proc_ids@@OMP_4.5+0x1afc>
   1f620:	ldr	x2, [x5, #64]
   1f624:	add	x3, x19, x3
   1f628:	ldr	x0, [x26, x4, lsl #3]
   1f62c:	ldp	x5, x2, [x2, #16]
   1f630:	ldr	x3, [x3, #80]
   1f634:	ldr	x4, [x26, x7]
   1f638:	add	x2, x2, x3
   1f63c:	ldr	x3, [x5, #16]
   1f640:	sub	x0, x0, x4
   1f644:	add	x0, x0, x2
   1f648:	add	x0, x0, x3
   1f64c:	str	x0, [x29, #336]
   1f650:	b	1ef18 <omp_get_place_proc_ids@@OMP_4.5+0x2618>
   1f654:	mov	x27, x23
   1f658:	ldp	x13, x23, [x29, #224]
   1f65c:	b	1f1e8 <omp_get_place_proc_ids@@OMP_4.5+0x28e8>
   1f660:	ldr	x0, [x29, #208]
   1f664:	cbnz	x0, 1f684 <omp_get_place_proc_ids@@OMP_4.5+0x2d84>
   1f668:	add	x0, x29, #0x110
   1f66c:	mov	x27, #0x0                   	// #0
   1f670:	str	x0, [x29, #176]
   1f674:	b	1eaf8 <omp_get_place_proc_ids@@OMP_4.5+0x21f8>
   1f678:	sub	x2, x0, #0x1
   1f67c:	lsl	x2, x2, #4
   1f680:	b	1e840 <omp_get_place_proc_ids@@OMP_4.5+0x1f40>
   1f684:	add	x0, x29, #0x110
   1f688:	str	x0, [x29, #176]
   1f68c:	b	1ed80 <omp_get_place_proc_ids@@OMP_4.5+0x2480>
   1f690:	ldr	x0, [x29, #144]
   1f694:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1f698:	b	1f610 <omp_get_place_proc_ids@@OMP_4.5+0x2d10>
   1f69c:	ldr	x1, [x29, #144]
   1f6a0:	mov	x6, x7
   1f6a4:	ldxr	w0, [x1]
   1f6a8:	stlxr	w2, wzr, [x1]
   1f6ac:	cbnz	w2, 1f6a4 <omp_get_place_proc_ids@@OMP_4.5+0x2da4>
   1f6b0:	tbnz	w0, #31, 1f810 <omp_get_place_proc_ids@@OMP_4.5+0x2f10>
   1f6b4:	ldp	x3, x4, [x6]
   1f6b8:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f6bc:	ldp	x1, x2, [x29, #312]
   1f6c0:	add	x0, x0, #0x140
   1f6c4:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1f6c8:	ldr	x0, [x29, #144]
   1f6cc:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1f6d0:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f6d4:	add	x0, x0, #0x360
   1f6d8:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1f6dc:	ldr	x1, [x29, #144]
   1f6e0:	ldxr	w0, [x1]
   1f6e4:	stlxr	w2, wzr, [x1]
   1f6e8:	cbnz	w2, 1f6e0 <omp_get_place_proc_ids@@OMP_4.5+0x2de0>
   1f6ec:	tbnz	w0, #31, 1f73c <omp_get_place_proc_ids@@OMP_4.5+0x2e3c>
   1f6f0:	adrp	x4, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f6f4:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f6f8:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f6fc:	add	x4, x4, #0xc8
   1f700:	add	x1, x1, #0x8c8
   1f704:	add	x6, x20, x22
   1f708:	add	x0, x0, #0xd0
   1f70c:	mov	x5, x20
   1f710:	add	x3, x19, x22
   1f714:	mov	x2, x19
   1f718:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1f71c:	ldr	x0, [x29, #144]
   1f720:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   1f724:	b	1e200 <omp_get_place_proc_ids@@OMP_4.5+0x1900>
   1f728:	ldr	x0, [x29, #144]
   1f72c:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1f730:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f734:	add	x0, x0, #0x328
   1f738:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1f73c:	ldr	x0, [x29, #144]
   1f740:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1f744:	b	1f6f0 <omp_get_place_proc_ids@@OMP_4.5+0x2df0>
   1f748:	ldr	x0, [x29, #144]
   1f74c:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1f750:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f754:	add	x0, x0, #0x300
   1f758:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1f75c:	ldr	x24, [x29, #248]
   1f760:	mov	x1, x13
   1f764:	add	x3, x25, #0x8
   1f768:	mov	x2, x25
   1f76c:	mov	x0, x24
   1f770:	bl	1d3f0 <omp_get_place_proc_ids@@OMP_4.5+0xaf0>
   1f774:	ldr	x0, [x29, #144]
   1f778:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1f77c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f780:	add	x0, x0, #0x340
   1f784:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1f788:	ldp	x1, x19, [x25]
   1f78c:	ldr	x0, [x29, #144]
   1f790:	sub	x19, x19, x1
   1f794:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1f798:	ldr	x1, [x25]
   1f79c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f7a0:	mov	x3, x19
   1f7a4:	mov	x2, x19
   1f7a8:	add	x0, x0, #0x380
   1f7ac:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1f7b0:	mov	x5, x1
   1f7b4:	ldr	x1, [x29, #144]
   1f7b8:	ldxr	w0, [x1]
   1f7bc:	stlxr	w2, wzr, [x1]
   1f7c0:	cbnz	w2, 1f7b8 <omp_get_place_proc_ids@@OMP_4.5+0x2eb8>
   1f7c4:	tbnz	w0, #31, 1f824 <omp_get_place_proc_ids@@OMP_4.5+0x2f24>
   1f7c8:	ldr	x2, [x29, #104]
   1f7cc:	adrp	x4, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f7d0:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f7d4:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f7d8:	add	x4, x4, #0xc8
   1f7dc:	add	x1, x1, #0x8c8
   1f7e0:	add	x6, x5, #0x8
   1f7e4:	add	x0, x0, #0xd0
   1f7e8:	add	x3, x2, #0x8
   1f7ec:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1f7f0:	adrp	x3, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f7f4:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f7f8:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1f7fc:	add	x3, x3, #0x490
   1f800:	add	x1, x1, #0x3b8
   1f804:	add	x0, x0, #0x3d8
   1f808:	mov	w2, #0x3b4                 	// #948
   1f80c:	bl	8ab0 <__assert_fail@plt>
   1f810:	ldr	x0, [x29, #144]
   1f814:	str	x6, [x29, #248]
   1f818:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1f81c:	ldr	x6, [x29, #248]
   1f820:	b	1f6b4 <omp_get_place_proc_ids@@OMP_4.5+0x2db4>
   1f824:	ldr	x0, [x29, #144]
   1f828:	str	x5, [x29, #248]
   1f82c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1f830:	ldr	x5, [x29, #248]
   1f834:	b	1f7c8 <omp_get_place_proc_ids@@OMP_4.5+0x2ec8>
   1f838:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   1f83c:	ldr	x1, [x1, #4016]
   1f840:	mrs	x0, tpidr_el0
   1f844:	stp	x29, x30, [sp, #-32]!
   1f848:	add	x0, x0, x1
   1f84c:	mov	x29, sp
   1f850:	ldr	x0, [x0, #80]
   1f854:	str	x19, [sp, #16]
   1f858:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1f85c:	add	x19, x19, #0x2b8
   1f860:	cmp	x0, #0x0
   1f864:	add	x0, x0, #0x90
   1f868:	csel	x19, x19, x0, eq  // eq = none
   1f86c:	ldr	x0, [x19, #32]
   1f870:	cbz	x0, 1f8a4 <omp_get_place_proc_ids@@OMP_4.5+0x2fa4>
   1f874:	mov	x1, #0x0                   	// #0
   1f878:	mov	w7, #0x2                   	// #2
   1f87c:	mov	w6, #0x0                   	// #0
   1f880:	mov	x5, #0x0                   	// #0
   1f884:	mov	x4, #0x0                   	// #0
   1f888:	mov	x3, #0x0                   	// #0
   1f88c:	mov	x2, #0x0                   	// #0
   1f890:	mov	x0, #0x0                   	// #0
   1f894:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   1f898:	ldr	x1, [x19, #32]
   1f89c:	str	x1, [x0, #40]
   1f8a0:	str	x0, [x19, #32]
   1f8a4:	ldr	x19, [sp, #16]
   1f8a8:	ldp	x29, x30, [sp], #32
   1f8ac:	ret
   1f8b0:	stp	x29, x30, [sp, #-32]!
   1f8b4:	mov	x29, sp
   1f8b8:	stp	x19, x20, [sp, #16]
   1f8bc:	mov	x19, x1
   1f8c0:	add	x20, x0, #0xa0
   1f8c4:	mov	x0, x20
   1f8c8:	bl	22268 <omp_pause_resource_all@@OMP_5.0+0x290>
   1f8cc:	ldr	x1, [x19, #48]
   1f8d0:	cbz	x1, 1f8dc <omp_get_place_proc_ids@@OMP_4.5+0x2fdc>
   1f8d4:	mov	x0, x20
   1f8d8:	bl	221b0 <omp_pause_resource_all@@OMP_5.0+0x1d8>
   1f8dc:	ldr	x2, [x19, #16]
   1f8e0:	ldr	x1, [x2]
   1f8e4:	cmp	x1, #0x1
   1f8e8:	b.ls	1f904 <omp_get_place_proc_ids@@OMP_4.5+0x3004>  // b.plast
   1f8ec:	sub	x1, x1, #0x1
   1f8f0:	str	x1, [x2]
   1f8f4:	mov	w0, #0x0                   	// #0
   1f8f8:	ldp	x19, x20, [sp, #16]
   1f8fc:	ldp	x29, x30, [sp], #32
   1f900:	ret
   1f904:	mov	x0, x2
   1f908:	bl	1cfe8 <omp_get_place_proc_ids@@OMP_4.5+0x6e8>
   1f90c:	mov	w0, #0x1                   	// #1
   1f910:	ldp	x19, x20, [sp, #16]
   1f914:	ldp	x29, x30, [sp], #32
   1f918:	ret
   1f91c:	nop
   1f920:	stp	x29, x30, [sp, #-176]!
   1f924:	mov	x29, sp
   1f928:	stp	x19, x20, [sp, #16]
   1f92c:	mov	x20, x3
   1f930:	stp	x25, x26, [sp, #64]
   1f934:	ldp	x19, x26, [x2, #16]
   1f938:	stp	x27, x28, [sp, #80]
   1f93c:	ldp	x28, x4, [x2]
   1f940:	stp	x23, x24, [sp, #48]
   1f944:	mov	x23, x0
   1f948:	sub	x26, x26, x19
   1f94c:	lsr	x0, x26, #63
   1f950:	add	x26, x0, x26, asr #3
   1f954:	sub	x4, x4, x28
   1f958:	asr	x26, x26, #1
   1f95c:	asr	x4, x4, #3
   1f960:	orr	w0, w26, w4
   1f964:	cbz	w0, 1fa90 <omp_get_place_proc_ids@@OMP_4.5+0x3190>
   1f968:	stp	x21, x22, [sp, #32]
   1f96c:	mov	w24, w1
   1f970:	str	x4, [sp, #104]
   1f974:	cbz	w4, 1fac0 <omp_get_place_proc_ids@@OMP_4.5+0x31c0>
   1f978:	ldr	x2, [x28]
   1f97c:	add	x21, x23, #0xa0
   1f980:	add	x22, sp, #0x78
   1f984:	mov	w27, w4
   1f988:	add	x3, x2, #0x1
   1f98c:	mov	x1, x22
   1f990:	mov	x0, x21
   1f994:	stp	x2, x3, [sp, #120]
   1f998:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1f99c:	mov	x25, x0
   1f9a0:	ldr	w0, [x23, #12]
   1f9a4:	mov	x2, x20
   1f9a8:	ldr	x3, [x23, #88]
   1f9ac:	mov	w1, w24
   1f9b0:	blr	x3
   1f9b4:	tst	w0, #0xff
   1f9b8:	ldr	x4, [sp, #104]
   1f9bc:	b.eq	1faac <omp_get_place_proc_ids@@OMP_4.5+0x31ac>  // b.none
   1f9c0:	cmp	x25, #0x0
   1f9c4:	mov	x20, #0x0                   	// #0
   1f9c8:	cset	w24, ne  // ne = any
   1f9cc:	cmp	w4, #0x0
   1f9d0:	b.le	1f9fc <omp_get_place_proc_ids@@OMP_4.5+0x30fc>
   1f9d4:	nop
   1f9d8:	ldr	x2, [x28, x20, lsl #3]
   1f9dc:	mov	x1, x22
   1f9e0:	add	x20, x20, #0x1
   1f9e4:	mov	x0, x21
   1f9e8:	add	x3, x2, #0x1
   1f9ec:	stp	x2, x3, [sp, #120]
   1f9f0:	bl	22268 <omp_pause_resource_all@@OMP_5.0+0x290>
   1f9f4:	cmp	w27, w20
   1f9f8:	b.gt	1f9d8 <omp_get_place_proc_ids@@OMP_4.5+0x30d8>
   1f9fc:	cmp	w26, #0x0
   1fa00:	b.le	1fa70 <omp_get_place_proc_ids@@OMP_4.5+0x3170>
   1fa04:	sub	w20, w26, #0x1
   1fa08:	add	x0, x19, #0x10
   1fa0c:	mov	w26, #0x0                   	// #0
   1fa10:	add	x20, x0, w20, uxtw #4
   1fa14:	b	1fa2c <omp_get_place_proc_ids@@OMP_4.5+0x312c>
   1fa18:	mov	x0, x21
   1fa1c:	add	x19, x19, #0x10
   1fa20:	bl	22268 <omp_pause_resource_all@@OMP_5.0+0x290>
   1fa24:	cmp	x20, x19
   1fa28:	b.eq	1fa68 <omp_get_place_proc_ids@@OMP_4.5+0x3168>  // b.none
   1fa2c:	ldp	x2, x0, [x19]
   1fa30:	and	x1, x0, #0x7fffffffffffffff
   1fa34:	add	x1, x1, x2
   1fa38:	stp	x2, x1, [sp, #120]
   1fa3c:	mov	x1, x22
   1fa40:	tbz	x0, #63, 1fa18 <omp_get_place_proc_ids@@OMP_4.5+0x3118>
   1fa44:	mov	x0, x21
   1fa48:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1fa4c:	add	x19, x19, #0x10
   1fa50:	mov	x1, x0
   1fa54:	mov	x0, x23
   1fa58:	bl	1f8b0 <omp_get_place_proc_ids@@OMP_4.5+0x2fb0>
   1fa5c:	cmp	x20, x19
   1fa60:	and	w26, w0, #0xff
   1fa64:	b.ne	1fa2c <omp_get_place_proc_ids@@OMP_4.5+0x312c>  // b.any
   1fa68:	eor	w26, w26, #0x1
   1fa6c:	and	w24, w24, w26
   1fa70:	cbnz	w24, 1fb0c <omp_get_place_proc_ids@@OMP_4.5+0x320c>
   1fa74:	ldp	x21, x22, [sp, #32]
   1fa78:	ldp	x19, x20, [sp, #16]
   1fa7c:	ldp	x23, x24, [sp, #48]
   1fa80:	ldp	x25, x26, [sp, #64]
   1fa84:	ldp	x27, x28, [sp, #80]
   1fa88:	ldp	x29, x30, [sp], #176
   1fa8c:	ret
   1fa90:	mov	x2, x3
   1fa94:	ldr	w0, [x23, #12]
   1fa98:	ldr	x3, [x23, #88]
   1fa9c:	blr	x3
   1faa0:	tst	w0, #0xff
   1faa4:	b.ne	1fa78 <omp_get_place_proc_ids@@OMP_4.5+0x3178>  // b.any
   1faa8:	stp	x21, x22, [sp, #32]
   1faac:	add	x0, x23, #0xa8
   1fab0:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1fab4:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1fab8:	add	x0, x0, #0x428
   1fabc:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1fac0:	ldr	x2, [x19]
   1fac4:	add	x22, sp, #0x78
   1fac8:	add	x21, x23, #0xa0
   1facc:	mov	x1, x22
   1fad0:	add	x3, x2, #0x1
   1fad4:	mov	x0, x21
   1fad8:	stp	x2, x3, [sp, #120]
   1fadc:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   1fae0:	mov	x25, x0
   1fae4:	ldr	w0, [x23, #12]
   1fae8:	mov	x2, x20
   1faec:	ldr	x3, [x23, #88]
   1faf0:	mov	w1, w24
   1faf4:	blr	x3
   1faf8:	tst	w0, #0xff
   1fafc:	b.eq	1faac <omp_get_place_proc_ids@@OMP_4.5+0x31ac>  // b.none
   1fb00:	cmp	x25, #0x0
   1fb04:	cset	w24, ne  // ne = any
   1fb08:	b	1f9fc <omp_get_place_proc_ids@@OMP_4.5+0x30fc>
   1fb0c:	ldr	x0, [x25, #16]
   1fb10:	bl	8900 <free@plt>
   1fb14:	mov	x0, x25
   1fb18:	bl	8900 <free@plt>
   1fb1c:	ldp	x19, x20, [sp, #16]
   1fb20:	ldp	x21, x22, [sp, #32]
   1fb24:	ldp	x23, x24, [sp, #48]
   1fb28:	ldp	x25, x26, [sp, #64]
   1fb2c:	ldp	x27, x28, [sp, #80]
   1fb30:	ldp	x29, x30, [sp], #176
   1fb34:	ret
   1fb38:	stp	x29, x30, [sp, #-112]!
   1fb3c:	mov	x29, sp
   1fb40:	stp	x23, x24, [sp, #48]
   1fb44:	and	w24, w1, #0xff
   1fb48:	ldr	x1, [x0, #48]
   1fb4c:	cbz	x1, 1fd00 <omp_get_place_proc_ids@@OMP_4.5+0x3400>
   1fb50:	stp	x25, x26, [sp, #64]
   1fb54:	mov	x26, x0
   1fb58:	mov	w0, #0x1                   	// #1
   1fb5c:	stp	x27, x28, [sp, #80]
   1fb60:	ldr	x27, [x26, #56]
   1fb64:	add	x1, x27, #0xa8
   1fb68:	str	x1, [sp, #104]
   1fb6c:	mov	x2, x1
   1fb70:	ldaxr	w1, [x2]
   1fb74:	cbnz	w1, 1fb80 <omp_get_place_proc_ids@@OMP_4.5+0x3280>
   1fb78:	stxr	w3, w0, [x2]
   1fb7c:	cbnz	w3, 1fb70 <omp_get_place_proc_ids@@OMP_4.5+0x3270>
   1fb80:	cmp	w1, #0x0
   1fb84:	b.ne	1fd84 <omp_get_place_proc_ids@@OMP_4.5+0x3484>  // b.any
   1fb88:	ldr	w0, [x27, #172]
   1fb8c:	cmp	w0, #0x2
   1fb90:	b.eq	1fcd8 <omp_get_place_proc_ids@@OMP_4.5+0x33d8>  // b.none
   1fb94:	ldr	x0, [x26, #48]
   1fb98:	stp	x19, x20, [sp, #16]
   1fb9c:	add	x20, x26, #0x40
   1fba0:	stp	x21, x22, [sp, #32]
   1fba4:	mov	x21, #0x0                   	// #0
   1fba8:	cbz	x0, 1fc3c <omp_get_place_proc_ids@@OMP_4.5+0x333c>
   1fbac:	nop
   1fbb0:	ldr	x19, [x20]
   1fbb4:	cbz	x19, 1fc2c <omp_get_place_proc_ids@@OMP_4.5+0x332c>
   1fbb8:	ldr	x1, [x19, #32]
   1fbbc:	sub	x2, x1, #0x2
   1fbc0:	cmn	x2, #0x4
   1fbc4:	b.hi	1fc80 <omp_get_place_proc_ids@@OMP_4.5+0x3380>  // b.pmore
   1fbc8:	ldrb	w2, [x20, #9]
   1fbcc:	sub	x1, x1, #0x1
   1fbd0:	str	x1, [x19, #32]
   1fbd4:	cbz	w2, 1fc2c <omp_get_place_proc_ids@@OMP_4.5+0x332c>
   1fbd8:	mov	w28, #0x0                   	// #0
   1fbdc:	ldp	x1, x22, [x19, #16]
   1fbe0:	ldp	x5, x23, [x20, #16]
   1fbe4:	ldr	w0, [x27, #12]
   1fbe8:	ldr	x25, [x19]
   1fbec:	ldr	x2, [x1, #16]
   1fbf0:	add	x22, x5, x22
   1fbf4:	ldr	x4, [x27, #112]
   1fbf8:	add	x25, x5, x25
   1fbfc:	add	x22, x22, x2
   1fc00:	mov	x1, x25
   1fc04:	mov	x2, x22
   1fc08:	mov	x3, x23
   1fc0c:	blr	x4
   1fc10:	tst	w0, #0xff
   1fc14:	b.eq	1fd44 <omp_get_place_proc_ids@@OMP_4.5+0x3444>  // b.none
   1fc18:	cbz	w28, 1fcc0 <omp_get_place_proc_ids@@OMP_4.5+0x33c0>
   1fc1c:	mov	x1, x19
   1fc20:	mov	x0, x27
   1fc24:	bl	1f8b0 <omp_get_place_proc_ids@@OMP_4.5+0x2fb0>
   1fc28:	ldr	x0, [x26, #48]
   1fc2c:	add	x21, x21, #0x1
   1fc30:	cmp	x0, x21
   1fc34:	add	x20, x20, #0x20
   1fc38:	b.hi	1fbb0 <omp_get_place_proc_ids@@OMP_4.5+0x32b0>  // b.pmore
   1fc3c:	ldr	x0, [x26]
   1fc40:	cmp	x0, #0x1
   1fc44:	b.ls	1fd0c <omp_get_place_proc_ids@@OMP_4.5+0x340c>  // b.plast
   1fc48:	sub	x0, x0, #0x1
   1fc4c:	str	x0, [x26]
   1fc50:	ldr	x1, [sp, #104]
   1fc54:	ldxr	w0, [x1]
   1fc58:	stlxr	w2, wzr, [x1]
   1fc5c:	cbnz	w2, 1fc54 <omp_get_place_proc_ids@@OMP_4.5+0x3354>
   1fc60:	tbnz	w0, #31, 1fd18 <omp_get_place_proc_ids@@OMP_4.5+0x3418>
   1fc64:	ldp	x19, x20, [sp, #16]
   1fc68:	ldp	x21, x22, [sp, #32]
   1fc6c:	ldp	x23, x24, [sp, #48]
   1fc70:	ldp	x25, x26, [sp, #64]
   1fc74:	ldp	x27, x28, [sp, #80]
   1fc78:	ldp	x29, x30, [sp], #112
   1fc7c:	ret
   1fc80:	cmp	x1, #0x1
   1fc84:	b.eq	1fca4 <omp_get_place_proc_ids@@OMP_4.5+0x33a4>  // b.none
   1fc88:	ldrb	w1, [x20, #9]
   1fc8c:	cbnz	w1, 1fbd8 <omp_get_place_proc_ids@@OMP_4.5+0x32d8>
   1fc90:	add	x21, x21, #0x1
   1fc94:	add	x20, x20, #0x20
   1fc98:	cmp	x0, x21
   1fc9c:	b.hi	1fbb0 <omp_get_place_proc_ids@@OMP_4.5+0x32b0>  // b.pmore
   1fca0:	b	1fc3c <omp_get_place_proc_ids@@OMP_4.5+0x333c>
   1fca4:	str	xzr, [x19, #32]
   1fca8:	cbz	w24, 1fcb4 <omp_get_place_proc_ids@@OMP_4.5+0x33b4>
   1fcac:	ldrb	w28, [x20, #8]
   1fcb0:	cbnz	w28, 1fbdc <omp_get_place_proc_ids@@OMP_4.5+0x32dc>
   1fcb4:	ldrb	w28, [x20, #9]
   1fcb8:	cbnz	w28, 1fbdc <omp_get_place_proc_ids@@OMP_4.5+0x32dc>
   1fcbc:	b	1fc1c <omp_get_place_proc_ids@@OMP_4.5+0x331c>
   1fcc0:	ldr	x0, [x26, #48]
   1fcc4:	add	x21, x21, #0x1
   1fcc8:	add	x20, x20, #0x20
   1fccc:	cmp	x0, x21
   1fcd0:	b.hi	1fbb0 <omp_get_place_proc_ids@@OMP_4.5+0x32b0>  // b.pmore
   1fcd4:	b	1fc3c <omp_get_place_proc_ids@@OMP_4.5+0x333c>
   1fcd8:	ldr	x1, [sp, #104]
   1fcdc:	ldxr	w0, [x1]
   1fce0:	stlxr	w2, wzr, [x1]
   1fce4:	cbnz	w2, 1fcdc <omp_get_place_proc_ids@@OMP_4.5+0x33dc>
   1fce8:	tbnz	w0, #31, 1fd38 <omp_get_place_proc_ids@@OMP_4.5+0x3438>
   1fcec:	ldr	x0, [x26, #8]
   1fcf0:	bl	8900 <free@plt>
   1fcf4:	mov	x0, x26
   1fcf8:	ldp	x25, x26, [sp, #64]
   1fcfc:	ldp	x27, x28, [sp, #80]
   1fd00:	ldp	x23, x24, [sp, #48]
   1fd04:	ldp	x29, x30, [sp], #112
   1fd08:	b	8900 <free@plt>
   1fd0c:	mov	x0, x26
   1fd10:	bl	1cfe8 <omp_get_place_proc_ids@@OMP_4.5+0x6e8>
   1fd14:	b	1fc50 <omp_get_place_proc_ids@@OMP_4.5+0x3350>
   1fd18:	ldp	x19, x20, [sp, #16]
   1fd1c:	ldp	x21, x22, [sp, #32]
   1fd20:	ldp	x23, x24, [sp, #48]
   1fd24:	ldp	x25, x26, [sp, #64]
   1fd28:	ldp	x27, x28, [sp, #80]
   1fd2c:	ldr	x0, [sp, #104]
   1fd30:	ldp	x29, x30, [sp], #112
   1fd34:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1fd38:	ldr	x0, [sp, #104]
   1fd3c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1fd40:	b	1fcec <omp_get_place_proc_ids@@OMP_4.5+0x33ec>
   1fd44:	ldr	x1, [sp, #104]
   1fd48:	ldxr	w0, [x1]
   1fd4c:	stlxr	w2, wzr, [x1]
   1fd50:	cbnz	w2, 1fd48 <omp_get_place_proc_ids@@OMP_4.5+0x3448>
   1fd54:	tbnz	w0, #31, 1fd90 <omp_get_place_proc_ids@@OMP_4.5+0x3490>
   1fd58:	adrp	x4, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1fd5c:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1fd60:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1fd64:	add	x4, x4, #0x8c8
   1fd68:	add	x1, x1, #0xc8
   1fd6c:	add	x6, x25, x23
   1fd70:	add	x0, x0, #0xd0
   1fd74:	mov	x5, x25
   1fd78:	add	x3, x22, x23
   1fd7c:	mov	x2, x22
   1fd80:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1fd84:	ldr	x0, [sp, #104]
   1fd88:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   1fd8c:	b	1fb88 <omp_get_place_proc_ids@@OMP_4.5+0x3288>
   1fd90:	ldr	x0, [sp, #104]
   1fd94:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1fd98:	b	1fd58 <omp_get_place_proc_ids@@OMP_4.5+0x3458>
   1fd9c:	nop

000000000001fda0 <GOMP_offload_register_ver@@GOMP_4.5>:
   1fda0:	stp	x29, x30, [sp, #-96]!
   1fda4:	mov	x29, sp
   1fda8:	stp	x19, x20, [sp, #16]
   1fdac:	stp	x21, x22, [sp, #32]
   1fdb0:	stp	x23, x24, [sp, #48]
   1fdb4:	mov	w24, w0
   1fdb8:	lsr	w0, w0, #16
   1fdbc:	stp	x25, x26, [sp, #64]
   1fdc0:	cmp	w0, #0x1
   1fdc4:	stp	x27, x28, [sp, #80]
   1fdc8:	b.hi	1ff54 <GOMP_offload_register_ver@@GOMP_4.5+0x1b4>  // b.pmore
   1fdcc:	adrp	x27, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1fdd0:	add	x0, x27, #0x568
   1fdd4:	mov	x26, x1
   1fdd8:	mov	x25, x3
   1fddc:	add	x0, x0, #0x10
   1fde0:	mov	w28, w2
   1fde4:	mov	w2, #0x1                   	// #1
   1fde8:	ldaxr	w1, [x0]
   1fdec:	cbnz	w1, 1fdf8 <GOMP_offload_register_ver@@GOMP_4.5+0x58>
   1fdf0:	stxr	w3, w2, [x0]
   1fdf4:	cbnz	w3, 1fde8 <GOMP_offload_register_ver@@GOMP_4.5+0x48>
   1fdf8:	cmp	w1, #0x0
   1fdfc:	b.ne	1ff4c <GOMP_offload_register_ver@@GOMP_4.5+0x1ac>  // b.any
   1fe00:	ldr	w0, [x27, #1384]
   1fe04:	add	x23, x27, #0x568
   1fe08:	mov	x22, #0x0                   	// #0
   1fe0c:	mov	w21, #0x0                   	// #0
   1fe10:	cmp	w0, #0x0
   1fe14:	mov	w5, #0x1                   	// #1
   1fe18:	b.gt	1fe44 <GOMP_offload_register_ver@@GOMP_4.5+0xa4>
   1fe1c:	b	1fe9c <GOMP_offload_register_ver@@GOMP_4.5+0xfc>
   1fe20:	ldxr	w0, [x20]
   1fe24:	stlxr	w1, wzr, [x20]
   1fe28:	cbnz	w1, 1fe20 <GOMP_offload_register_ver@@GOMP_4.5+0x80>
   1fe2c:	tbnz	w0, #31, 1ff0c <GOMP_offload_register_ver@@GOMP_4.5+0x16c>
   1fe30:	ldr	w4, [x23]
   1fe34:	add	w21, w21, #0x1
   1fe38:	add	x22, x22, #0x130
   1fe3c:	cmp	w4, w21
   1fe40:	b.le	1fe9c <GOMP_offload_register_ver@@GOMP_4.5+0xfc>
   1fe44:	ldr	x19, [x23, #8]
   1fe48:	add	x19, x19, x22
   1fe4c:	add	x20, x19, #0xa8
   1fe50:	ldaxr	w1, [x20]
   1fe54:	cbnz	w1, 1fe60 <GOMP_offload_register_ver@@GOMP_4.5+0xc0>
   1fe58:	stxr	w0, w5, [x20]
   1fe5c:	cbnz	w0, 1fe50 <GOMP_offload_register_ver@@GOMP_4.5+0xb0>
   1fe60:	cmp	w1, #0x0
   1fe64:	b.ne	1ff3c <GOMP_offload_register_ver@@GOMP_4.5+0x19c>  // b.any
   1fe68:	ldr	w0, [x19, #16]
   1fe6c:	cmp	w0, w28
   1fe70:	b.ne	1fe20 <GOMP_offload_register_ver@@GOMP_4.5+0x80>  // b.any
   1fe74:	ldr	w4, [x19, #172]
   1fe78:	cmp	w4, #0x1
   1fe7c:	b.ne	1fe20 <GOMP_offload_register_ver@@GOMP_4.5+0x80>  // b.any
   1fe80:	mov	x0, x19
   1fe84:	mov	x3, x25
   1fe88:	mov	x2, x26
   1fe8c:	mov	w1, w24
   1fe90:	bl	1d7b8 <omp_get_place_proc_ids@@OMP_4.5+0xeb8>
   1fe94:	mov	w5, #0x1                   	// #1
   1fe98:	b	1fe20 <GOMP_offload_register_ver@@GOMP_4.5+0x80>
   1fe9c:	add	x19, x27, #0x568
   1fea0:	mov	w20, #0x18                  	// #24
   1fea4:	ldr	w21, [x19, #24]
   1fea8:	ldr	x0, [x19, #32]
   1feac:	add	w21, w21, #0x1
   1feb0:	smull	x20, w21, w20
   1feb4:	mov	x1, x20
   1feb8:	bl	8810 <realloc@plt>
   1febc:	cbz	x0, 1ff68 <GOMP_offload_register_ver@@GOMP_4.5+0x1c8>
   1fec0:	sub	x20, x20, #0x18
   1fec4:	add	x19, x19, #0x10
   1fec8:	add	x1, x0, x20
   1fecc:	str	w21, [x19, #8]
   1fed0:	str	x0, [x19, #16]
   1fed4:	str	w24, [x0, x20]
   1fed8:	str	w28, [x1, #4]
   1fedc:	stp	x26, x25, [x1, #8]
   1fee0:	ldxr	w0, [x19]
   1fee4:	stlxr	w1, wzr, [x19]
   1fee8:	cbnz	w1, 1fee0 <GOMP_offload_register_ver@@GOMP_4.5+0x140>
   1feec:	tbnz	w0, #31, 1ff1c <GOMP_offload_register_ver@@GOMP_4.5+0x17c>
   1fef0:	ldp	x19, x20, [sp, #16]
   1fef4:	ldp	x21, x22, [sp, #32]
   1fef8:	ldp	x23, x24, [sp, #48]
   1fefc:	ldp	x25, x26, [sp, #64]
   1ff00:	ldp	x27, x28, [sp, #80]
   1ff04:	ldp	x29, x30, [sp], #96
   1ff08:	ret
   1ff0c:	mov	x0, x20
   1ff10:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1ff14:	mov	w5, #0x1                   	// #1
   1ff18:	b	1fe30 <GOMP_offload_register_ver@@GOMP_4.5+0x90>
   1ff1c:	mov	x0, x19
   1ff20:	ldp	x19, x20, [sp, #16]
   1ff24:	ldp	x21, x22, [sp, #32]
   1ff28:	ldp	x23, x24, [sp, #48]
   1ff2c:	ldp	x25, x26, [sp, #64]
   1ff30:	ldp	x27, x28, [sp, #80]
   1ff34:	ldp	x29, x30, [sp], #96
   1ff38:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   1ff3c:	mov	x0, x20
   1ff40:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   1ff44:	mov	w5, #0x1                   	// #1
   1ff48:	b	1fe68 <GOMP_offload_register_ver@@GOMP_4.5+0xc8>
   1ff4c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   1ff50:	b	1fe00 <GOMP_offload_register_ver@@GOMP_4.5+0x60>
   1ff54:	mov	w2, w0
   1ff58:	mov	w1, #0x1                   	// #1
   1ff5c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   1ff60:	add	x0, x0, #0x440
   1ff64:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   1ff68:	add	x0, x19, #0x10
   1ff6c:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   1ff70:	adrp	x0, 27000 <omp_get_affinity_format@@OMP_5.0+0x800>
   1ff74:	mov	x1, x20
   1ff78:	add	x0, x0, #0x338
   1ff7c:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>

000000000001ff80 <GOMP_offload_register@@GOMP_4.0.1>:
   1ff80:	mov	w4, w1
   1ff84:	mov	x3, x2
   1ff88:	mov	x1, x0
   1ff8c:	mov	w2, w4
   1ff90:	mov	w0, #0x0                   	// #0
   1ff94:	b	8a10 <GOMP_offload_register_ver@plt>

000000000001ff98 <GOMP_offload_unregister_ver@@GOMP_4.5>:
   1ff98:	stp	x29, x30, [sp, #-112]!
   1ff9c:	mov	x29, sp
   1ffa0:	stp	x27, x28, [sp, #80]
   1ffa4:	adrp	x27, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   1ffa8:	add	x4, x27, #0x568
   1ffac:	add	x4, x4, #0x10
   1ffb0:	stp	x25, x26, [sp, #64]
   1ffb4:	mov	x25, x1
   1ffb8:	mov	x26, x3
   1ffbc:	mov	w28, w2
   1ffc0:	mov	w2, #0x1                   	// #1
   1ffc4:	stp	x21, x22, [sp, #32]
   1ffc8:	stp	x23, x24, [sp, #48]
   1ffcc:	str	w0, [sp, #108]
   1ffd0:	ldaxr	w1, [x4]
   1ffd4:	cbnz	w1, 1ffe0 <GOMP_offload_unregister_ver@@GOMP_4.5+0x48>
   1ffd8:	stxr	w0, w2, [x4]
   1ffdc:	cbnz	w0, 1ffd0 <GOMP_offload_unregister_ver@@GOMP_4.5+0x38>
   1ffe0:	cmp	w1, #0x0
   1ffe4:	b.ne	2014c <GOMP_offload_unregister_ver@@GOMP_4.5+0x1b4>  // b.any
   1ffe8:	ldr	w0, [x27, #1384]
   1ffec:	add	x23, x27, #0x568
   1fff0:	mov	x22, #0x0                   	// #0
   1fff4:	mov	w21, #0x0                   	// #0
   1fff8:	cmp	w0, #0x0
   1fffc:	mov	w24, #0x1                   	// #1
   20000:	b.le	20088 <GOMP_offload_unregister_ver@@GOMP_4.5+0xf0>
   20004:	stp	x19, x20, [sp, #16]
   20008:	b	20030 <GOMP_offload_unregister_ver@@GOMP_4.5+0x98>
   2000c:	ldxr	w4, [x20]
   20010:	stlxr	w0, wzr, [x20]
   20014:	cbnz	w0, 2000c <GOMP_offload_unregister_ver@@GOMP_4.5+0x74>
   20018:	add	w21, w21, #0x1
   2001c:	tbnz	w4, #31, 2011c <GOMP_offload_unregister_ver@@GOMP_4.5+0x184>
   20020:	ldr	w4, [x23]
   20024:	add	x22, x22, #0x130
   20028:	cmp	w4, w21
   2002c:	b.le	20084 <GOMP_offload_unregister_ver@@GOMP_4.5+0xec>
   20030:	ldr	x19, [x23, #8]
   20034:	add	x19, x19, x22
   20038:	add	x20, x19, #0xa8
   2003c:	ldaxr	w1, [x20]
   20040:	cbnz	w1, 2004c <GOMP_offload_unregister_ver@@GOMP_4.5+0xb4>
   20044:	stxr	w0, w24, [x20]
   20048:	cbnz	w0, 2003c <GOMP_offload_unregister_ver@@GOMP_4.5+0xa4>
   2004c:	cmp	w1, #0x0
   20050:	b.ne	20140 <GOMP_offload_unregister_ver@@GOMP_4.5+0x1a8>  // b.any
   20054:	ldr	w0, [x19, #16]
   20058:	cmp	w0, w28
   2005c:	b.ne	2000c <GOMP_offload_unregister_ver@@GOMP_4.5+0x74>  // b.any
   20060:	ldr	w0, [x19, #172]
   20064:	cmp	w0, #0x1
   20068:	b.ne	2000c <GOMP_offload_unregister_ver@@GOMP_4.5+0x74>  // b.any
   2006c:	ldr	w1, [sp, #108]
   20070:	mov	x0, x19
   20074:	mov	x3, x26
   20078:	mov	x2, x25
   2007c:	bl	1f920 <omp_get_place_proc_ids@@OMP_4.5+0x3020>
   20080:	b	2000c <GOMP_offload_unregister_ver@@GOMP_4.5+0x74>
   20084:	ldp	x19, x20, [sp, #16]
   20088:	add	x1, x27, #0x568
   2008c:	ldr	w0, [x1, #24]
   20090:	cmp	w0, #0x0
   20094:	b.le	200ec <GOMP_offload_unregister_ver@@GOMP_4.5+0x154>
   20098:	ldr	x4, [x1, #32]
   2009c:	sub	w3, w0, #0x1
   200a0:	mov	w2, #0x18                  	// #24
   200a4:	add	x1, x4, #0x18
   200a8:	mov	x0, x4
   200ac:	umaddl	x2, w3, w2, x1
   200b0:	b	200c0 <GOMP_offload_unregister_ver@@GOMP_4.5+0x128>
   200b4:	add	x0, x0, #0x18
   200b8:	cmp	x0, x2
   200bc:	b.eq	200ec <GOMP_offload_unregister_ver@@GOMP_4.5+0x154>  // b.none
   200c0:	ldr	x1, [x0, #16]
   200c4:	cmp	x1, x26
   200c8:	b.ne	200b4 <GOMP_offload_unregister_ver@@GOMP_4.5+0x11c>  // b.any
   200cc:	mov	w1, #0x18                  	// #24
   200d0:	add	x2, x27, #0x568
   200d4:	smaddl	x4, w3, w1, x4
   200d8:	str	w3, [x2, #24]
   200dc:	ldp	x2, x3, [x4]
   200e0:	stp	x2, x3, [x0]
   200e4:	ldr	x1, [x4, #16]
   200e8:	str	x1, [x0, #16]
   200ec:	add	x0, x27, #0x568
   200f0:	add	x0, x0, #0x10
   200f4:	ldxr	w1, [x0]
   200f8:	stlxr	w2, wzr, [x0]
   200fc:	cbnz	w2, 200f4 <GOMP_offload_unregister_ver@@GOMP_4.5+0x15c>
   20100:	tbnz	w1, #31, 20128 <GOMP_offload_unregister_ver@@GOMP_4.5+0x190>
   20104:	ldp	x21, x22, [sp, #32]
   20108:	ldp	x23, x24, [sp, #48]
   2010c:	ldp	x25, x26, [sp, #64]
   20110:	ldp	x27, x28, [sp, #80]
   20114:	ldp	x29, x30, [sp], #112
   20118:	ret
   2011c:	mov	x0, x20
   20120:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   20124:	b	20020 <GOMP_offload_unregister_ver@@GOMP_4.5+0x88>
   20128:	ldp	x21, x22, [sp, #32]
   2012c:	ldp	x23, x24, [sp, #48]
   20130:	ldp	x25, x26, [sp, #64]
   20134:	ldp	x27, x28, [sp, #80]
   20138:	ldp	x29, x30, [sp], #112
   2013c:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   20140:	mov	x0, x20
   20144:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   20148:	b	20054 <GOMP_offload_unregister_ver@@GOMP_4.5+0xbc>
   2014c:	mov	x0, x4
   20150:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   20154:	b	1ffe8 <GOMP_offload_unregister_ver@@GOMP_4.5+0x50>

0000000000020158 <GOMP_offload_unregister@@GOMP_4.0.1>:
   20158:	mov	w4, w1
   2015c:	mov	x3, x2
   20160:	mov	x1, x0
   20164:	mov	w2, w4
   20168:	mov	w0, #0x0                   	// #0
   2016c:	b	8920 <GOMP_offload_unregister_ver@plt>
   20170:	stp	x29, x30, [sp, #-48]!
   20174:	mov	x29, sp
   20178:	stp	x21, x22, [sp, #32]
   2017c:	mov	x22, x0
   20180:	ldr	w0, [x0, #12]
   20184:	stp	x19, x20, [sp, #16]
   20188:	ldr	x1, [x22, #56]
   2018c:	blr	x1
   20190:	tst	w0, #0xff
   20194:	b.eq	20228 <GOMP_offload_unregister@@GOMP_4.0.1+0xd0>  // b.none
   20198:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   2019c:	add	x0, x0, #0x568
   201a0:	mov	x21, x0
   201a4:	mov	x19, #0x0                   	// #0
   201a8:	mov	w20, #0x0                   	// #0
   201ac:	ldr	w0, [x0, #24]
   201b0:	cmp	w0, #0x0
   201b4:	b.gt	201d0 <GOMP_offload_unregister@@GOMP_4.0.1+0x78>
   201b8:	b	20210 <GOMP_offload_unregister@@GOMP_4.0.1+0xb8>
   201bc:	ldr	w1, [x21, #24]
   201c0:	add	w20, w20, #0x1
   201c4:	add	x19, x19, #0x18
   201c8:	cmp	w1, w20
   201cc:	b.le	20210 <GOMP_offload_unregister@@GOMP_4.0.1+0xb8>
   201d0:	ldr	x1, [x21, #32]
   201d4:	ldr	w2, [x22, #16]
   201d8:	add	x3, x1, x19
   201dc:	ldr	w4, [x3, #4]
   201e0:	cmp	w4, w2
   201e4:	b.ne	201bc <GOMP_offload_unregister@@GOMP_4.0.1+0x64>  // b.any
   201e8:	ldp	x2, x3, [x3, #8]
   201ec:	mov	x0, x22
   201f0:	ldr	w1, [x1, x19]
   201f4:	mov	w4, #0x0                   	// #0
   201f8:	add	w20, w20, #0x1
   201fc:	add	x19, x19, #0x18
   20200:	bl	1d7b8 <omp_get_place_proc_ids@@OMP_4.5+0xeb8>
   20204:	ldr	w1, [x21, #24]
   20208:	cmp	w1, w20
   2020c:	b.gt	201d0 <GOMP_offload_unregister@@GOMP_4.0.1+0x78>
   20210:	mov	w0, #0x1                   	// #1
   20214:	ldp	x19, x20, [sp, #16]
   20218:	str	w0, [x22, #172]
   2021c:	ldp	x21, x22, [sp, #32]
   20220:	ldp	x29, x30, [sp], #48
   20224:	ret
   20228:	add	x0, x22, #0xa8
   2022c:	bl	1ce88 <omp_get_place_proc_ids@@OMP_4.5+0x588>
   20230:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   20234:	add	x0, x0, #0x470
   20238:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   2023c:	nop
   20240:	stp	x29, x30, [sp, #-48]!
   20244:	cmn	w0, #0x1
   20248:	mov	x29, sp
   2024c:	stp	x19, x20, [sp, #16]
   20250:	mov	w19, w0
   20254:	b.eq	20300 <GOMP_offload_unregister@@GOMP_4.0.1+0x1a8>  // b.none
   20258:	tbnz	w19, #31, 20330 <GOMP_offload_unregister@@GOMP_4.0.1+0x1d8>
   2025c:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   20260:	str	x21, [sp, #32]
   20264:	add	x21, x20, #0x568
   20268:	adrp	x1, 1c000 <omp_pause_resource_all_@@OMP_5.0+0x358>
   2026c:	add	x0, x21, #0x14
   20270:	add	x1, x1, #0xe30
   20274:	bl	8950 <pthread_once@plt>
   20278:	ldr	w0, [x21, #4]
   2027c:	cmp	w19, w0
   20280:	b.ge	20364 <GOMP_offload_unregister@@GOMP_4.0.1+0x20c>  // b.tcont
   20284:	mov	w1, #0x130                 	// #304
   20288:	mov	w2, #0x1                   	// #1
   2028c:	ldr	x0, [x21, #8]
   20290:	smull	x19, w19, w1
   20294:	add	x0, x0, x19
   20298:	add	x0, x0, #0xa8
   2029c:	ldaxr	w1, [x0]
   202a0:	cbnz	w1, 202ac <GOMP_offload_unregister@@GOMP_4.0.1+0x154>
   202a4:	stxr	w3, w2, [x0]
   202a8:	cbnz	w3, 2029c <GOMP_offload_unregister@@GOMP_4.0.1+0x144>
   202ac:	cmp	w1, #0x0
   202b0:	b.ne	20388 <GOMP_offload_unregister@@GOMP_4.0.1+0x230>  // b.any
   202b4:	add	x21, x20, #0x568
   202b8:	ldr	x0, [x21, #8]
   202bc:	add	x0, x0, x19
   202c0:	ldr	w1, [x0, #172]
   202c4:	cbz	w1, 20340 <GOMP_offload_unregister@@GOMP_4.0.1+0x1e8>
   202c8:	add	x0, x0, #0xa8
   202cc:	cmp	w1, #0x2
   202d0:	b.eq	20354 <GOMP_offload_unregister@@GOMP_4.0.1+0x1fc>  // b.none
   202d4:	ldxr	w1, [x0]
   202d8:	stlxr	w2, wzr, [x0]
   202dc:	cbnz	w2, 202d4 <GOMP_offload_unregister@@GOMP_4.0.1+0x17c>
   202e0:	tbnz	w1, #31, 20370 <GOMP_offload_unregister@@GOMP_4.0.1+0x218>
   202e4:	add	x20, x20, #0x568
   202e8:	ldr	x21, [sp, #32]
   202ec:	ldr	x0, [x20, #8]
   202f0:	add	x0, x0, x19
   202f4:	ldp	x19, x20, [sp, #16]
   202f8:	ldp	x29, x30, [sp], #48
   202fc:	ret
   20300:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   20304:	ldr	x2, [x2, #4016]
   20308:	mrs	x1, tpidr_el0
   2030c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   20310:	add	x0, x0, #0x2b8
   20314:	add	x1, x1, x2
   20318:	ldr	x1, [x1, #80]
   2031c:	cmp	x1, #0x0
   20320:	add	x1, x1, #0x90
   20324:	csel	x0, x0, x1, eq  // eq = none
   20328:	ldr	w19, [x0, #16]
   2032c:	tbz	w19, #31, 2025c <GOMP_offload_unregister@@GOMP_4.0.1+0x104>
   20330:	mov	x0, #0x0                   	// #0
   20334:	ldp	x19, x20, [sp, #16]
   20338:	ldp	x29, x30, [sp], #48
   2033c:	ret
   20340:	bl	20170 <GOMP_offload_unregister@@GOMP_4.0.1+0x18>
   20344:	ldr	x0, [x21, #8]
   20348:	add	x0, x0, x19
   2034c:	add	x0, x0, #0xa8
   20350:	b	202d4 <GOMP_offload_unregister@@GOMP_4.0.1+0x17c>
   20354:	ldxr	w1, [x0]
   20358:	stlxr	w2, wzr, [x0]
   2035c:	cbnz	w2, 20354 <GOMP_offload_unregister@@GOMP_4.0.1+0x1fc>
   20360:	tbnz	w1, #31, 20378 <GOMP_offload_unregister@@GOMP_4.0.1+0x220>
   20364:	mov	x0, #0x0                   	// #0
   20368:	ldr	x21, [sp, #32]
   2036c:	b	20334 <GOMP_offload_unregister@@GOMP_4.0.1+0x1dc>
   20370:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   20374:	b	202e4 <GOMP_offload_unregister@@GOMP_4.0.1+0x18c>
   20378:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   2037c:	mov	x0, #0x0                   	// #0
   20380:	ldr	x21, [sp, #32]
   20384:	b	202f4 <GOMP_offload_unregister@@GOMP_4.0.1+0x19c>
   20388:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   2038c:	b	202b4 <GOMP_offload_unregister@@GOMP_4.0.1+0x15c>
   20390:	stp	x29, x30, [sp, #-48]!
   20394:	mov	x29, sp
   20398:	stp	x21, x22, [sp, #32]
   2039c:	mov	x21, x0
   203a0:	ldr	w0, [x0, #172]
   203a4:	cmp	w0, #0x1
   203a8:	b.eq	203b8 <GOMP_offload_unregister@@GOMP_4.0.1+0x260>  // b.none
   203ac:	ldp	x21, x22, [sp, #32]
   203b0:	ldp	x29, x30, [sp], #48
   203b4:	ret
   203b8:	stp	x19, x20, [sp, #16]
   203bc:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   203c0:	add	x20, x20, #0x568
   203c4:	ldr	w0, [x20, #24]
   203c8:	cbz	w0, 20420 <GOMP_offload_unregister@@GOMP_4.0.1+0x2c8>
   203cc:	mov	w19, #0x0                   	// #0
   203d0:	mov	w22, #0x18                  	// #24
   203d4:	b	203e4 <GOMP_offload_unregister@@GOMP_4.0.1+0x28c>
   203d8:	ldr	w0, [x20, #24]
   203dc:	cmp	w0, w19
   203e0:	b.ls	20420 <GOMP_offload_unregister@@GOMP_4.0.1+0x2c8>  // b.plast
   203e4:	ldr	x1, [x20, #32]
   203e8:	umull	x0, w19, w22
   203ec:	ldr	w2, [x21, #16]
   203f0:	add	w19, w19, #0x1
   203f4:	add	x3, x1, x0
   203f8:	ldr	w4, [x3, #4]
   203fc:	cmp	w4, w2
   20400:	b.ne	203d8 <GOMP_offload_unregister@@GOMP_4.0.1+0x280>  // b.any
   20404:	ldp	x2, x3, [x3, #8]
   20408:	ldr	w1, [x1, x0]
   2040c:	mov	x0, x21
   20410:	bl	1f920 <omp_get_place_proc_ids@@OMP_4.5+0x3020>
   20414:	ldr	w0, [x20, #24]
   20418:	cmp	w0, w19
   2041c:	b.hi	203e4 <GOMP_offload_unregister@@GOMP_4.0.1+0x28c>  // b.pmore
   20420:	ldp	x19, x20, [sp, #16]
   20424:	ldp	x21, x22, [sp, #32]
   20428:	ldp	x29, x30, [sp], #48
   2042c:	ret
   20430:	ldr	x1, [x0]
   20434:	cbz	x1, 20478 <GOMP_offload_unregister@@GOMP_4.0.1+0x320>
   20438:	stp	x29, x30, [sp, #-32]!
   2043c:	mov	x29, sp
   20440:	stp	x19, x20, [sp, #16]
   20444:	mov	x20, x0
   20448:	mov	x0, x20
   2044c:	ldr	x19, [x1, #16]
   20450:	bl	22268 <omp_pause_resource_all@@OMP_5.0+0x290>
   20454:	ldr	x0, [x19, #8]
   20458:	bl	8900 <free@plt>
   2045c:	mov	x0, x19
   20460:	bl	8900 <free@plt>
   20464:	ldr	x1, [x20]
   20468:	cbnz	x1, 20448 <GOMP_offload_unregister@@GOMP_4.0.1+0x2f0>
   2046c:	ldp	x19, x20, [sp, #16]
   20470:	ldp	x29, x30, [sp], #32
   20474:	ret
   20478:	ret
   2047c:	nop

0000000000020480 <GOMP_target@@GOMP_4.0>:
   20480:	stp	x29, x30, [sp, #-80]!
   20484:	mov	x29, sp
   20488:	stp	x19, x20, [sp, #16]
   2048c:	mov	x20, x1
   20490:	stp	x21, x22, [sp, #32]
   20494:	mov	x22, x3
   20498:	mov	x21, x4
   2049c:	stp	x23, x24, [sp, #48]
   204a0:	mov	x23, x5
   204a4:	mov	x24, x6
   204a8:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   204ac:	cbz	x0, 20548 <GOMP_target@@GOMP_4.0+0xc8>
   204b0:	ldr	w2, [x0, #8]
   204b4:	mov	w1, #0x5                   	// #5
   204b8:	mov	x19, x0
   204bc:	and	w1, w2, w1
   204c0:	cmp	w1, #0x4
   204c4:	b.ne	20548 <GOMP_target@@GOMP_4.0+0xc8>  // b.any
   204c8:	str	x25, [sp, #64]
   204cc:	mov	x25, x20
   204d0:	tbnz	w2, #1, 204e0 <GOMP_target@@GOMP_4.0+0x60>
   204d4:	mov	x1, x20
   204d8:	bl	1d440 <omp_get_place_proc_ids@@OMP_4.5+0xb40>
   204dc:	mov	x25, x0
   204e0:	cbz	x25, 20544 <GOMP_target@@GOMP_4.0+0xc4>
   204e4:	mov	x5, x24
   204e8:	mov	x4, x23
   204ec:	mov	x2, x21
   204f0:	mov	x1, x22
   204f4:	mov	w7, #0x1                   	// #1
   204f8:	mov	w6, #0x0                   	// #0
   204fc:	mov	x0, x19
   20500:	mov	x3, #0x0                   	// #0
   20504:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   20508:	mov	x20, x0
   2050c:	ldr	w0, [x19, #12]
   20510:	mov	x1, x25
   20514:	ldr	x4, [x19, #144]
   20518:	mov	x3, #0x0                   	// #0
   2051c:	ldr	x2, [x20, #16]
   20520:	blr	x4
   20524:	mov	x0, x20
   20528:	mov	w1, #0x1                   	// #1
   2052c:	ldp	x19, x20, [sp, #16]
   20530:	ldp	x21, x22, [sp, #32]
   20534:	ldp	x23, x24, [sp, #48]
   20538:	ldr	x25, [sp, #64]
   2053c:	ldp	x29, x30, [sp], #80
   20540:	b	1fb38 <omp_get_place_proc_ids@@OMP_4.5+0x3238>
   20544:	ldr	x25, [sp, #64]
   20548:	mov	x1, x21
   2054c:	mov	x0, x20
   20550:	ldp	x19, x20, [sp, #16]
   20554:	ldp	x21, x22, [sp, #32]
   20558:	ldp	x23, x24, [sp, #48]
   2055c:	ldp	x29, x30, [sp], #80
   20560:	b	1cea8 <omp_get_place_proc_ids@@OMP_4.5+0x5a8>
   20564:	nop

0000000000020568 <GOMP_target_ext@@GOMP_4.5>:
   20568:	stp	x29, x30, [sp, #-144]!
   2056c:	mov	x29, sp
   20570:	stp	x19, x20, [sp, #16]
   20574:	mov	x20, x2
   20578:	mov	x19, x5
   2057c:	stp	x21, x22, [sp, #32]
   20580:	mov	x22, x4
   20584:	stp	x23, x24, [sp, #48]
   20588:	mov	x23, x1
   2058c:	mov	x24, x3
   20590:	stp	x25, x26, [sp, #64]
   20594:	mov	w25, w6
   20598:	mov	x26, x7
   2059c:	stp	x27, x28, [sp, #80]
   205a0:	sub	sp, sp, #0x10
   205a4:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   205a8:	mov	x21, x0
   205ac:	tbz	w25, #0, 2070c <GOMP_target_ext@@GOMP_4.5+0x1a4>
   205b0:	adrp	x28, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   205b4:	ldr	x28, [x28, #4016]
   205b8:	mrs	x27, tpidr_el0
   205bc:	add	x3, x27, x28
   205c0:	ldr	x0, [x3, #16]
   205c4:	cbz	x0, 20670 <GOMP_target_ext@@GOMP_4.5+0x108>
   205c8:	add	x27, x27, x28
   205cc:	ldr	x0, [x27, #80]
   205d0:	ldrb	w1, [x0, #205]
   205d4:	cbz	w1, 20af8 <GOMP_target_ext@@GOMP_4.5+0x590>
   205d8:	cbnz	x26, 20728 <GOMP_target_ext@@GOMP_4.5+0x1c0>
   205dc:	nop
   205e0:	cbz	x21, 207d4 <GOMP_target_ext@@GOMP_4.5+0x26c>
   205e4:	ldr	w0, [x21, #8]
   205e8:	tbz	w0, #2, 207d4 <GOMP_target_ext@@GOMP_4.5+0x26c>
   205ec:	mov	x25, #0x0                   	// #0
   205f0:	mov	x27, #0x0                   	// #0
   205f4:	mov	w28, #0x0                   	// #0
   205f8:	mov	x26, x23
   205fc:	tbnz	w0, #1, 20610 <GOMP_target_ext@@GOMP_4.5+0xa8>
   20600:	mov	x1, x23
   20604:	mov	x0, x21
   20608:	bl	1d440 <omp_get_place_proc_ids@@OMP_4.5+0xb40>
   2060c:	mov	x26, x0
   20610:	cbz	x26, 208d0 <GOMP_target_ext@@GOMP_4.5+0x368>
   20614:	ldr	x1, [x21, #136]
   20618:	cbz	x1, 2062c <GOMP_target_ext@@GOMP_4.5+0xc4>
   2061c:	mov	x0, x26
   20620:	blr	x1
   20624:	tst	w0, #0xff
   20628:	b.eq	208d0 <GOMP_target_ext@@GOMP_4.5+0x368>  // b.none
   2062c:	ldr	w0, [x21, #8]
   20630:	tbz	w0, #0, 20a88 <GOMP_target_ext@@GOMP_4.5+0x520>
   20634:	cbz	w28, 20994 <GOMP_target_ext@@GOMP_4.5+0x42c>
   20638:	ldr	w0, [x21, #12]
   2063c:	ldr	x4, [x21, #144]
   20640:	mov	x2, x24
   20644:	ldr	x3, [x29, #144]
   20648:	mov	x1, x26
   2064c:	blr	x4
   20650:	mov	sp, x29
   20654:	ldp	x19, x20, [sp, #16]
   20658:	ldp	x21, x22, [sp, #32]
   2065c:	ldp	x23, x24, [sp, #48]
   20660:	ldp	x25, x26, [sp, #64]
   20664:	ldp	x27, x28, [sp, #80]
   20668:	ldp	x29, x30, [sp], #144
   2066c:	ret
   20670:	mov	w0, #0x1                   	// #1
   20674:	str	x3, [x29, #136]
   20678:	bl	181f8 <omp_in_final@@OMP_3.1+0x1d0>
   2067c:	mov	x6, x0
   20680:	ldr	x3, [x29, #136]
   20684:	ldr	x7, [x3, #80]
   20688:	cbz	x7, 20b30 <GOMP_target_ext@@GOMP_4.5+0x5c8>
   2068c:	ldp	x4, x5, [x3, #16]
   20690:	stp	x4, x5, [x0, #8]
   20694:	add	x8, x0, #0x540
   20698:	ldp	x4, x5, [x3, #32]
   2069c:	stp	x4, x5, [x6, #24]
   206a0:	add	x11, x6, #0x100
   206a4:	ldp	x4, x5, [x3, #48]
   206a8:	stp	x4, x5, [x6, #40]
   206ac:	mov	x0, x8
   206b0:	ldp	x4, x5, [x3, #64]
   206b4:	stp	x4, x5, [x6, #56]
   206b8:	add	x2, x7, #0x90
   206bc:	mov	x1, #0x0                   	// #0
   206c0:	stp	x6, x11, [x3, #16]
   206c4:	str	xzr, [x3, #32]
   206c8:	str	wzr, [x3, #40]
   206cc:	stp	xzr, xzr, [x3, #64]
   206d0:	str	x8, [x3, #80]
   206d4:	stp	x8, x7, [x29, #120]
   206d8:	bl	12fb8 <GOMP_single_copy_end@@GOMP_1.0+0x1830>
   206dc:	ldp	x7, x3, [x29, #128]
   206e0:	str	x7, [x3, #80]
   206e4:	bl	12ff8 <GOMP_single_copy_end@@GOMP_1.0+0x1870>
   206e8:	ldr	x7, [x29, #128]
   206ec:	mov	x0, x7
   206f0:	bl	8900 <free@plt>
   206f4:	ldr	x3, [x29, #136]
   206f8:	ldr	x8, [x29, #120]
   206fc:	str	x8, [x3, #80]
   20700:	add	x0, x27, x28
   20704:	ldr	x0, [x0, #16]
   20708:	cbnz	x0, 205c8 <GOMP_target_ext@@GOMP_4.5+0x60>
   2070c:	cbz	x26, 205e0 <GOMP_target_ext@@GOMP_4.5+0x78>
   20710:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   20714:	ldr	x0, [x0, #4016]
   20718:	mrs	x1, tpidr_el0
   2071c:	add	x0, x1, x0
   20720:	ldr	x0, [x0, #80]
   20724:	cbz	x0, 205e0 <GOMP_target_ext@@GOMP_4.5+0x78>
   20728:	ldr	x0, [x0, #56]
   2072c:	cbz	x0, 205e0 <GOMP_target_ext@@GOMP_4.5+0x78>
   20730:	cbz	x20, 20b98 <GOMP_target_ext@@GOMP_4.5+0x630>
   20734:	mov	x25, #0x0                   	// #0
   20738:	mov	x27, #0x0                   	// #0
   2073c:	mov	x1, #0x0                   	// #0
   20740:	mov	x4, #0x1                   	// #1
   20744:	nop
   20748:	ldrh	w0, [x19, x1, lsl #1]
   2074c:	and	w2, w0, #0xff
   20750:	cmp	w2, #0xc
   20754:	b.ne	20780 <GOMP_target_ext@@GOMP_4.5+0x218>  // b.any
   20758:	lsr	w0, w0, #8
   2075c:	sub	x25, x25, #0x1
   20760:	ldr	x2, [x22, x1, lsl #3]
   20764:	lsl	x0, x4, x0
   20768:	add	x25, x25, x0
   2076c:	neg	x3, x0
   20770:	cmp	x27, x0
   20774:	and	x25, x25, x3
   20778:	csel	x27, x27, x0, cs  // cs = hs, nlast
   2077c:	add	x25, x25, x2
   20780:	add	x1, x1, #0x1
   20784:	cmp	x20, x1
   20788:	b.ne	20748 <GOMP_target_ext@@GOMP_4.5+0x1e0>  // b.any
   2078c:	cbnz	x27, 208dc <GOMP_target_ext@@GOMP_4.5+0x374>
   20790:	mov	x0, x26
   20794:	bl	145d0 <GOMP_taskwait@@GOMP_2.0+0x580>
   20798:	cbz	x21, 207a8 <GOMP_target_ext@@GOMP_4.5+0x240>
   2079c:	ldr	w0, [x21, #8]
   207a0:	mov	w28, #0x1                   	// #1
   207a4:	tbnz	w0, #2, 205f8 <GOMP_target_ext@@GOMP_4.5+0x90>
   207a8:	mov	x1, x24
   207ac:	mov	x0, x23
   207b0:	bl	1cea8 <omp_get_place_proc_ids@@OMP_4.5+0x5a8>
   207b4:	mov	sp, x29
   207b8:	ldp	x19, x20, [sp, #16]
   207bc:	ldp	x21, x22, [sp, #32]
   207c0:	ldp	x23, x24, [sp, #48]
   207c4:	ldp	x25, x26, [sp, #64]
   207c8:	ldp	x27, x28, [sp, #80]
   207cc:	ldp	x29, x30, [sp], #144
   207d0:	ret
   207d4:	mov	x27, #0x0                   	// #0
   207d8:	mov	x25, #0x0                   	// #0
   207dc:	cbz	x20, 207a8 <GOMP_target_ext@@GOMP_4.5+0x240>
   207e0:	mov	x1, #0x0                   	// #0
   207e4:	mov	x4, #0x1                   	// #1
   207e8:	ldrh	w0, [x19, x1, lsl #1]
   207ec:	and	w2, w0, #0xff
   207f0:	cmp	w2, #0xc
   207f4:	b.ne	20820 <GOMP_target_ext@@GOMP_4.5+0x2b8>  // b.any
   207f8:	lsr	w0, w0, #8
   207fc:	sub	x25, x25, #0x1
   20800:	ldr	x2, [x22, x1, lsl #3]
   20804:	lsl	x0, x4, x0
   20808:	add	x25, x25, x0
   2080c:	neg	x3, x0
   20810:	cmp	x27, x0
   20814:	and	x25, x25, x3
   20818:	csel	x27, x27, x0, cs  // cs = hs, nlast
   2081c:	add	x25, x25, x2
   20820:	add	x1, x1, #0x1
   20824:	cmp	x20, x1
   20828:	b.hi	207e8 <GOMP_target_ext@@GOMP_4.5+0x280>  // b.pmore
   2082c:	cbz	x27, 207a8 <GOMP_target_ext@@GOMP_4.5+0x240>
   20830:	add	x0, x25, x27
   20834:	sub	x1, x27, #0x1
   20838:	add	x0, x0, #0xe
   2083c:	and	x0, x0, #0xfffffffffffffff0
   20840:	sub	sp, sp, x0
   20844:	add	x28, sp, #0x10
   20848:	ands	x0, x28, x1
   2084c:	sub	x27, x27, x0
   20850:	add	x27, x28, x27
   20854:	csel	x28, x27, x28, ne  // ne = any
   20858:	cbz	x20, 207a8 <GOMP_target_ext@@GOMP_4.5+0x240>
   2085c:	add	x20, x19, x20, lsl #1
   20860:	mov	x25, x24
   20864:	mov	x21, #0x0                   	// #0
   20868:	mov	x26, #0x1                   	// #1
   2086c:	b	20880 <GOMP_target_ext@@GOMP_4.5+0x318>
   20870:	add	x25, x25, #0x8
   20874:	add	x22, x22, #0x8
   20878:	cmp	x20, x19
   2087c:	b.eq	207a8 <GOMP_target_ext@@GOMP_4.5+0x240>  // b.none
   20880:	ldrh	w0, [x19]
   20884:	add	x19, x19, #0x2
   20888:	and	w1, w0, #0xff
   2088c:	cmp	w1, #0xc
   20890:	b.ne	20870 <GOMP_target_ext@@GOMP_4.5+0x308>  // b.any
   20894:	lsr	w0, w0, #8
   20898:	sub	x21, x21, #0x1
   2089c:	ldr	x1, [x25]
   208a0:	lsl	x0, x26, x0
   208a4:	add	x21, x21, x0
   208a8:	neg	x0, x0
   208ac:	and	x21, x0, x21
   208b0:	add	x3, x28, x21
   208b4:	ldr	x27, [x22]
   208b8:	mov	x0, x3
   208bc:	mov	x2, x27
   208c0:	add	x21, x21, x27
   208c4:	bl	85c0 <memcpy@plt>
   208c8:	str	x0, [x25]
   208cc:	b	20870 <GOMP_target_ext@@GOMP_4.5+0x308>
   208d0:	cbnz	w28, 207a8 <GOMP_target_ext@@GOMP_4.5+0x240>
   208d4:	cbnz	x20, 207e0 <GOMP_target_ext@@GOMP_4.5+0x278>
   208d8:	b	2082c <GOMP_target_ext@@GOMP_4.5+0x2c4>
   208dc:	add	x0, x27, x25
   208e0:	sub	x1, x27, #0x1
   208e4:	add	x0, x0, #0xe
   208e8:	mov	x4, x19
   208ec:	and	x0, x0, #0xfffffffffffffff0
   208f0:	mov	x5, x24
   208f4:	sub	sp, sp, x0
   208f8:	mov	x6, x22
   208fc:	add	x28, sp, #0x10
   20900:	add	x7, x19, x20, lsl #1
   20904:	ands	x0, x28, x1
   20908:	mov	x3, #0x0                   	// #0
   2090c:	sub	x1, x27, x0
   20910:	add	x0, x28, x1
   20914:	csel	x28, x0, x28, ne  // ne = any
   20918:	b	2092c <GOMP_target_ext@@GOMP_4.5+0x3c4>
   2091c:	add	x5, x5, #0x8
   20920:	add	x6, x6, #0x8
   20924:	cmp	x7, x4
   20928:	b.eq	20790 <GOMP_target_ext@@GOMP_4.5+0x228>  // b.none
   2092c:	ldrh	w0, [x4]
   20930:	add	x4, x4, #0x2
   20934:	and	w1, w0, #0xff
   20938:	cmp	w1, #0xc
   2093c:	b.ne	2091c <GOMP_target_ext@@GOMP_4.5+0x3b4>  // b.any
   20940:	lsr	w0, w0, #8
   20944:	mov	x2, #0x1                   	// #1
   20948:	sub	x3, x3, #0x1
   2094c:	stp	x4, x7, [x29, #96]
   20950:	lsl	x0, x2, x0
   20954:	add	x3, x3, x0
   20958:	neg	x0, x0
   2095c:	and	x3, x0, x3
   20960:	stp	x5, x6, [x29, #112]
   20964:	add	x9, x28, x3
   20968:	ldr	x2, [x6]
   2096c:	mov	x0, x9
   20970:	ldr	x1, [x5]
   20974:	stp	x3, x2, [x29, #128]
   20978:	bl	85c0 <memcpy@plt>
   2097c:	ldp	x3, x2, [x29, #128]
   20980:	ldp	x5, x6, [x29, #112]
   20984:	str	x0, [x5]
   20988:	ldp	x4, x7, [x29, #96]
   2098c:	add	x3, x3, x2
   20990:	b	2091c <GOMP_target_ext@@GOMP_4.5+0x3b4>
   20994:	mov	x1, #0x0                   	// #0
   20998:	mov	x4, #0x1                   	// #1
   2099c:	cbz	x20, 209e4 <GOMP_target_ext@@GOMP_4.5+0x47c>
   209a0:	ldrh	w0, [x19, x1, lsl #1]
   209a4:	and	w2, w0, #0xff
   209a8:	cmp	w2, #0xc
   209ac:	b.ne	209d8 <GOMP_target_ext@@GOMP_4.5+0x470>  // b.any
   209b0:	lsr	w0, w0, #8
   209b4:	sub	x25, x25, #0x1
   209b8:	ldr	x2, [x22, x1, lsl #3]
   209bc:	lsl	x0, x4, x0
   209c0:	add	x25, x25, x0
   209c4:	neg	x3, x0
   209c8:	cmp	x27, x0
   209cc:	and	x25, x25, x3
   209d0:	csel	x27, x27, x0, cs  // cs = hs, nlast
   209d4:	add	x25, x25, x2
   209d8:	add	x1, x1, #0x1
   209dc:	cmp	x20, x1
   209e0:	b.ne	209a0 <GOMP_target_ext@@GOMP_4.5+0x438>  // b.any
   209e4:	cbz	x27, 20638 <GOMP_target_ext@@GOMP_4.5+0xd0>
   209e8:	add	x0, x25, x27
   209ec:	sub	x1, x27, #0x1
   209f0:	add	x0, x0, #0xe
   209f4:	and	x0, x0, #0xfffffffffffffff0
   209f8:	sub	sp, sp, x0
   209fc:	add	x28, sp, #0x10
   20a00:	ands	x0, x28, x1
   20a04:	sub	x27, x27, x0
   20a08:	add	x0, x28, x27
   20a0c:	csel	x28, x0, x28, ne  // ne = any
   20a10:	cbz	x20, 20638 <GOMP_target_ext@@GOMP_4.5+0xd0>
   20a14:	add	x20, x19, x20, lsl #1
   20a18:	mov	x27, x24
   20a1c:	mov	x23, #0x0                   	// #0
   20a20:	b	20a34 <GOMP_target_ext@@GOMP_4.5+0x4cc>
   20a24:	add	x27, x27, #0x8
   20a28:	add	x22, x22, #0x8
   20a2c:	cmp	x20, x19
   20a30:	b.eq	20638 <GOMP_target_ext@@GOMP_4.5+0xd0>  // b.none
   20a34:	ldrh	w0, [x19]
   20a38:	add	x19, x19, #0x2
   20a3c:	and	w1, w0, #0xff
   20a40:	cmp	w1, #0xc
   20a44:	b.ne	20a24 <GOMP_target_ext@@GOMP_4.5+0x4bc>  // b.any
   20a48:	lsr	w0, w0, #8
   20a4c:	mov	x2, #0x1                   	// #1
   20a50:	sub	x23, x23, #0x1
   20a54:	lsl	x0, x2, x0
   20a58:	add	x23, x23, x0
   20a5c:	neg	x0, x0
   20a60:	and	x23, x0, x23
   20a64:	ldr	x1, [x27]
   20a68:	add	x3, x28, x23
   20a6c:	ldr	x25, [x22]
   20a70:	mov	x0, x3
   20a74:	mov	x2, x25
   20a78:	add	x23, x23, x25
   20a7c:	bl	85c0 <memcpy@plt>
   20a80:	str	x0, [x27]
   20a84:	b	20a24 <GOMP_target_ext@@GOMP_4.5+0x4bc>
   20a88:	mov	x5, x19
   20a8c:	mov	x4, x22
   20a90:	mov	w7, #0x1                   	// #1
   20a94:	mov	x1, x20
   20a98:	mov	w6, w7
   20a9c:	mov	x2, x24
   20aa0:	mov	x0, x21
   20aa4:	mov	x3, #0x0                   	// #0
   20aa8:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   20aac:	mov	x19, x0
   20ab0:	ldr	w0, [x21, #12]
   20ab4:	ldr	x4, [x21, #144]
   20ab8:	cbz	x19, 20640 <GOMP_target_ext@@GOMP_4.5+0xd8>
   20abc:	ldr	x2, [x19, #16]
   20ac0:	mov	x1, x26
   20ac4:	ldr	x3, [x29, #144]
   20ac8:	blr	x4
   20acc:	mov	x0, x19
   20ad0:	mov	w1, #0x1                   	// #1
   20ad4:	bl	1fb38 <omp_get_place_proc_ids@@OMP_4.5+0x3238>
   20ad8:	mov	sp, x29
   20adc:	ldp	x19, x20, [sp, #16]
   20ae0:	ldp	x21, x22, [sp, #32]
   20ae4:	ldp	x23, x24, [sp, #48]
   20ae8:	ldp	x25, x26, [sp, #64]
   20aec:	ldp	x27, x28, [sp, #80]
   20af0:	ldp	x29, x30, [sp], #144
   20af4:	ret
   20af8:	ldr	x1, [x29, #144]
   20afc:	mov	w0, #0x1                   	// #1
   20b00:	str	x1, [sp]
   20b04:	mov	x7, x26
   20b08:	str	w0, [sp, #8]
   20b0c:	mov	w6, w25
   20b10:	mov	x5, x19
   20b14:	mov	x4, x22
   20b18:	mov	x3, x24
   20b1c:	mov	x2, x20
   20b20:	mov	x1, x23
   20b24:	mov	x0, x21
   20b28:	bl	13108 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa8>
   20b2c:	b	20650 <GOMP_target_ext@@GOMP_4.5+0xe8>
   20b30:	ldp	x4, x5, [x3, #16]
   20b34:	stp	x4, x5, [x0, #8]
   20b38:	add	x7, x6, #0x100
   20b3c:	ldp	x4, x5, [x3, #32]
   20b40:	stp	x4, x5, [x6, #24]
   20b44:	add	x0, x0, #0x540
   20b48:	ldp	x4, x5, [x3, #48]
   20b4c:	stp	x4, x5, [x6, #40]
   20b50:	mov	x1, #0x0                   	// #0
   20b54:	ldp	x4, x5, [x3, #64]
   20b58:	stp	x4, x5, [x6, #56]
   20b5c:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   20b60:	add	x2, x2, #0x2b8
   20b64:	stp	x6, x7, [x3, #16]
   20b68:	str	xzr, [x3, #32]
   20b6c:	str	wzr, [x3, #40]
   20b70:	stp	xzr, xzr, [x3, #64]
   20b74:	str	x0, [x3, #80]
   20b78:	str	x3, [x29, #136]
   20b7c:	bl	12fb8 <GOMP_single_copy_end@@GOMP_1.0+0x1830>
   20b80:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   20b84:	ldr	x3, [x29, #136]
   20b88:	ldr	w0, [x0, #1696]
   20b8c:	mov	x1, x3
   20b90:	bl	89b0 <pthread_setspecific@plt>
   20b94:	b	20700 <GOMP_target_ext@@GOMP_4.5+0x198>
   20b98:	mov	x27, #0x0                   	// #0
   20b9c:	mov	x25, #0x0                   	// #0
   20ba0:	b	20790 <GOMP_target_ext@@GOMP_4.5+0x228>
   20ba4:	nop

0000000000020ba8 <GOMP_target_data@@GOMP_4.0>:
   20ba8:	stp	x29, x30, [sp, #-48]!
   20bac:	mov	x29, sp
   20bb0:	stp	x19, x20, [sp, #16]
   20bb4:	mov	x19, x2
   20bb8:	mov	x20, x4
   20bbc:	stp	x21, x22, [sp, #32]
   20bc0:	mov	x22, x3
   20bc4:	mov	x21, x5
   20bc8:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   20bcc:	cbz	x0, 20be4 <GOMP_target_data@@GOMP_4.0+0x3c>
   20bd0:	ldr	w1, [x0, #8]
   20bd4:	mov	w2, #0x5                   	// #5
   20bd8:	and	w1, w1, w2
   20bdc:	cmp	w1, #0x4
   20be0:	b.eq	20bf4 <GOMP_target_data@@GOMP_4.0+0x4c>  // b.none
   20be4:	ldp	x19, x20, [sp, #16]
   20be8:	ldp	x21, x22, [sp, #32]
   20bec:	ldp	x29, x30, [sp], #48
   20bf0:	b	1f838 <omp_get_place_proc_ids@@OMP_4.5+0x2f38>
   20bf4:	mov	x1, x19
   20bf8:	mov	x2, x22
   20bfc:	mov	x5, x21
   20c00:	mov	x4, x20
   20c04:	mov	w7, #0x2                   	// #2
   20c08:	mov	w6, #0x0                   	// #0
   20c0c:	mov	x3, #0x0                   	// #0
   20c10:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   20c14:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   20c18:	ldr	x2, [x2, #4016]
   20c1c:	mrs	x1, tpidr_el0
   20c20:	mov	x19, x0
   20c24:	add	x1, x1, x2
   20c28:	ldr	x1, [x1, #80]
   20c2c:	cbz	x1, 20c50 <GOMP_target_data@@GOMP_4.0+0xa8>
   20c30:	ldr	x0, [x1, #176]
   20c34:	add	x1, x1, #0x90
   20c38:	ldp	x21, x22, [sp, #32]
   20c3c:	str	x0, [x19, #40]
   20c40:	str	x19, [x1, #32]
   20c44:	ldp	x19, x20, [sp, #16]
   20c48:	ldp	x29, x30, [sp], #48
   20c4c:	ret
   20c50:	bl	19758 <omp_in_final@@OMP_3.1+0x1730>
   20c54:	mov	x1, x0
   20c58:	ldp	x21, x22, [sp, #32]
   20c5c:	ldr	x0, [x1, #32]
   20c60:	str	x0, [x19, #40]
   20c64:	str	x19, [x1, #32]
   20c68:	ldp	x19, x20, [sp, #16]
   20c6c:	ldp	x29, x30, [sp], #48
   20c70:	ret
   20c74:	nop

0000000000020c78 <GOMP_target_data_ext@@GOMP_4.5>:
   20c78:	stp	x29, x30, [sp, #-48]!
   20c7c:	mov	x29, sp
   20c80:	stp	x19, x20, [sp, #16]
   20c84:	mov	x19, x1
   20c88:	mov	x20, x3
   20c8c:	stp	x21, x22, [sp, #32]
   20c90:	mov	x22, x2
   20c94:	mov	x21, x4
   20c98:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   20c9c:	cbz	x0, 20cb4 <GOMP_target_data_ext@@GOMP_4.5+0x3c>
   20ca0:	ldr	w5, [x0, #8]
   20ca4:	mov	w1, #0x5                   	// #5
   20ca8:	and	w5, w5, w1
   20cac:	cmp	w5, #0x4
   20cb0:	b.eq	20cc4 <GOMP_target_data_ext@@GOMP_4.5+0x4c>  // b.none
   20cb4:	ldp	x19, x20, [sp, #16]
   20cb8:	ldp	x21, x22, [sp, #32]
   20cbc:	ldp	x29, x30, [sp], #48
   20cc0:	b	1f838 <omp_get_place_proc_ids@@OMP_4.5+0x2f38>
   20cc4:	mov	x1, x19
   20cc8:	mov	x2, x22
   20ccc:	mov	x5, x21
   20cd0:	mov	x4, x20
   20cd4:	mov	w7, #0x2                   	// #2
   20cd8:	mov	w6, #0x1                   	// #1
   20cdc:	mov	x3, #0x0                   	// #0
   20ce0:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   20ce4:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   20ce8:	ldr	x2, [x2, #4016]
   20cec:	mrs	x1, tpidr_el0
   20cf0:	mov	x19, x0
   20cf4:	add	x1, x1, x2
   20cf8:	ldr	x1, [x1, #80]
   20cfc:	cbz	x1, 20d20 <GOMP_target_data_ext@@GOMP_4.5+0xa8>
   20d00:	ldr	x0, [x1, #176]
   20d04:	add	x1, x1, #0x90
   20d08:	ldp	x21, x22, [sp, #32]
   20d0c:	str	x0, [x19, #40]
   20d10:	str	x19, [x1, #32]
   20d14:	ldp	x19, x20, [sp, #16]
   20d18:	ldp	x29, x30, [sp], #48
   20d1c:	ret
   20d20:	bl	19758 <omp_in_final@@OMP_3.1+0x1730>
   20d24:	mov	x1, x0
   20d28:	ldp	x21, x22, [sp, #32]
   20d2c:	ldr	x0, [x1, #32]
   20d30:	str	x0, [x19, #40]
   20d34:	str	x19, [x1, #32]
   20d38:	ldp	x19, x20, [sp, #16]
   20d3c:	ldp	x29, x30, [sp], #48
   20d40:	ret
   20d44:	nop

0000000000020d48 <GOMP_target_end_data@@GOMP_4.0>:
   20d48:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   20d4c:	ldr	x2, [x2, #4016]
   20d50:	mrs	x0, tpidr_el0
   20d54:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   20d58:	add	x1, x1, #0x2b8
   20d5c:	add	x0, x0, x2
   20d60:	ldr	x0, [x0, #80]
   20d64:	cmp	x0, #0x0
   20d68:	add	x0, x0, #0x90
   20d6c:	csel	x1, x1, x0, eq  // eq = none
   20d70:	ldr	x0, [x1, #32]
   20d74:	cbz	x0, 20d88 <GOMP_target_end_data@@GOMP_4.0+0x40>
   20d78:	ldr	x2, [x0, #40]
   20d7c:	str	x2, [x1, #32]
   20d80:	mov	w1, #0x1                   	// #1
   20d84:	b	1fb38 <omp_get_place_proc_ids@@OMP_4.5+0x3238>
   20d88:	ret
   20d8c:	nop

0000000000020d90 <GOMP_target_update@@GOMP_4.0>:
   20d90:	stp	x29, x30, [sp, #-64]!
   20d94:	mov	x29, sp
   20d98:	stp	x19, x20, [sp, #16]
   20d9c:	mov	x20, x4
   20da0:	mov	x19, x2
   20da4:	stp	x21, x22, [sp, #32]
   20da8:	mov	x22, x3
   20dac:	mov	x21, x5
   20db0:	str	x2, [sp, #56]
   20db4:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   20db8:	cbz	x0, 20dd0 <GOMP_target_update@@GOMP_4.0+0x40>
   20dbc:	ldr	w1, [x0, #8]
   20dc0:	mov	w2, #0x5                   	// #5
   20dc4:	and	w1, w1, w2
   20dc8:	cmp	w1, #0x4
   20dcc:	b.eq	20de0 <GOMP_target_update@@GOMP_4.0+0x50>  // b.none
   20dd0:	ldp	x19, x20, [sp, #16]
   20dd4:	ldp	x21, x22, [sp, #32]
   20dd8:	ldp	x29, x30, [sp], #64
   20ddc:	ret
   20de0:	mov	x4, x21
   20de4:	mov	x3, x20
   20de8:	mov	x2, x22
   20dec:	mov	x1, x19
   20df0:	ldp	x19, x20, [sp, #16]
   20df4:	mov	w5, #0x0                   	// #0
   20df8:	ldp	x21, x22, [sp, #32]
   20dfc:	ldp	x29, x30, [sp], #64
   20e00:	b	1d510 <omp_get_place_proc_ids@@OMP_4.5+0xc10>
   20e04:	nop

0000000000020e08 <GOMP_target_update_ext@@GOMP_4.5>:
   20e08:	sub	sp, sp, #0x60
   20e0c:	stp	x29, x30, [sp, #16]
   20e10:	add	x29, sp, #0x10
   20e14:	stp	x19, x20, [sp, #32]
   20e18:	mov	x20, x6
   20e1c:	stp	x21, x22, [sp, #48]
   20e20:	mov	x21, x1
   20e24:	mov	x22, x2
   20e28:	stp	x23, x24, [sp, #64]
   20e2c:	mov	x23, x3
   20e30:	mov	x24, x4
   20e34:	str	x25, [sp, #80]
   20e38:	mov	w25, w5
   20e3c:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   20e40:	mov	x19, x0
   20e44:	cbz	x20, 20e9c <GOMP_target_update_ext@@GOMP_4.5+0x94>
   20e48:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   20e4c:	ldr	x1, [x1, #4016]
   20e50:	mrs	x2, tpidr_el0
   20e54:	add	x1, x2, x1
   20e58:	ldr	x2, [x1, #80]
   20e5c:	cbz	x2, 20e9c <GOMP_target_update_ext@@GOMP_4.5+0x94>
   20e60:	ldr	x3, [x2, #56]
   20e64:	cbz	x3, 20e9c <GOMP_target_update_ext@@GOMP_4.5+0x94>
   20e68:	ldr	x1, [x1, #16]
   20e6c:	tbz	w25, #0, 20e7c <GOMP_target_update_ext@@GOMP_4.5+0x74>
   20e70:	cbz	x1, 20e94 <GOMP_target_update_ext@@GOMP_4.5+0x8c>
   20e74:	ldrb	w3, [x2, #205]
   20e78:	cbz	w3, 20f64 <GOMP_target_update_ext@@GOMP_4.5+0x15c>
   20e7c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   20e80:	cmp	x1, #0x0
   20e84:	cset	w3, ne  // ne = any
   20e88:	ldrb	w0, [x0, #1364]
   20e8c:	tst	w3, w0
   20e90:	b.ne	20f98 <GOMP_target_update_ext@@GOMP_4.5+0x190>  // b.any
   20e94:	mov	x0, x20
   20e98:	bl	145d0 <GOMP_taskwait@@GOMP_2.0+0x580>
   20e9c:	cbz	x19, 20f48 <GOMP_target_update_ext@@GOMP_4.5+0x140>
   20ea0:	ldr	w0, [x19, #8]
   20ea4:	mov	w1, #0x5                   	// #5
   20ea8:	and	w0, w0, w1
   20eac:	cmp	w0, #0x4
   20eb0:	b.ne	20f48 <GOMP_target_update_ext@@GOMP_4.5+0x140>  // b.any
   20eb4:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   20eb8:	ldr	x1, [x1, #4016]
   20ebc:	mrs	x0, tpidr_el0
   20ec0:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   20ec4:	add	x0, x0, x1
   20ec8:	ldrb	w2, [x2, #1364]
   20ecc:	ldr	x1, [x0, #16]
   20ed0:	cmp	x1, #0x0
   20ed4:	cset	w3, ne  // ne = any
   20ed8:	tst	w3, w2
   20edc:	b.ne	20f14 <GOMP_target_update_ext@@GOMP_4.5+0x10c>  // b.any
   20ee0:	mov	x4, x24
   20ee4:	mov	x3, x23
   20ee8:	mov	x2, x22
   20eec:	mov	x1, x21
   20ef0:	mov	x0, x19
   20ef4:	mov	w5, #0x1                   	// #1
   20ef8:	ldp	x29, x30, [sp, #16]
   20efc:	ldp	x19, x20, [sp, #32]
   20f00:	ldp	x21, x22, [sp, #48]
   20f04:	ldp	x23, x24, [sp, #64]
   20f08:	ldr	x25, [sp, #80]
   20f0c:	add	sp, sp, #0x60
   20f10:	b	1d510 <omp_get_place_proc_ids@@OMP_4.5+0xc10>
   20f14:	ldr	w1, [x1, #132]
   20f18:	tbnz	w1, #2, 20f48 <GOMP_target_update_ext@@GOMP_4.5+0x140>
   20f1c:	ldr	x0, [x0, #80]
   20f20:	ldr	x0, [x0, #40]
   20f24:	cbz	x0, 20ee0 <GOMP_target_update_ext@@GOMP_4.5+0xd8>
   20f28:	ldrb	w1, [x0, #49]
   20f2c:	cbnz	w1, 20f48 <GOMP_target_update_ext@@GOMP_4.5+0x140>
   20f30:	ldrb	w1, [x0, #50]
   20f34:	cbz	w1, 20ee0 <GOMP_target_update_ext@@GOMP_4.5+0xd8>
   20f38:	ldr	x0, [x0]
   20f3c:	cbz	x0, 20ee0 <GOMP_target_update_ext@@GOMP_4.5+0xd8>
   20f40:	ldrb	w0, [x0, #49]
   20f44:	cbz	w0, 20ee0 <GOMP_target_update_ext@@GOMP_4.5+0xd8>
   20f48:	ldp	x29, x30, [sp, #16]
   20f4c:	ldp	x19, x20, [sp, #32]
   20f50:	ldp	x21, x22, [sp, #48]
   20f54:	ldp	x23, x24, [sp, #64]
   20f58:	ldr	x25, [sp, #80]
   20f5c:	add	sp, sp, #0x60
   20f60:	ret
   20f64:	str	xzr, [sp]
   20f68:	mov	x7, x20
   20f6c:	str	wzr, [sp, #8]
   20f70:	orr	w6, w25, #0x80000000
   20f74:	mov	x5, x24
   20f78:	mov	x4, x23
   20f7c:	mov	x3, x22
   20f80:	mov	x2, x21
   20f84:	mov	x1, #0x0                   	// #0
   20f88:	bl	13108 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa8>
   20f8c:	tst	w0, #0xff
   20f90:	b.eq	20e9c <GOMP_target_update_ext@@GOMP_4.5+0x94>  // b.none
   20f94:	b	20f48 <GOMP_target_update_ext@@GOMP_4.5+0x140>
   20f98:	ldr	w0, [x1, #132]
   20f9c:	tbnz	w0, #2, 20f48 <GOMP_target_update_ext@@GOMP_4.5+0x140>
   20fa0:	ldr	x0, [x2, #40]
   20fa4:	cbz	x0, 20e94 <GOMP_target_update_ext@@GOMP_4.5+0x8c>
   20fa8:	ldrb	w1, [x0, #49]
   20fac:	cbnz	w1, 20f48 <GOMP_target_update_ext@@GOMP_4.5+0x140>
   20fb0:	ldrb	w1, [x0, #50]
   20fb4:	cbz	w1, 20e94 <GOMP_target_update_ext@@GOMP_4.5+0x8c>
   20fb8:	ldr	x0, [x0]
   20fbc:	cbz	x0, 20e94 <GOMP_target_update_ext@@GOMP_4.5+0x8c>
   20fc0:	ldrb	w0, [x0, #49]
   20fc4:	cbz	w0, 20e94 <GOMP_target_update_ext@@GOMP_4.5+0x8c>
   20fc8:	b	20f48 <GOMP_target_update_ext@@GOMP_4.5+0x140>
   20fcc:	nop

0000000000020fd0 <GOMP_target_enter_exit_data@@GOMP_4.5>:
   20fd0:	sub	sp, sp, #0x60
   20fd4:	stp	x29, x30, [sp, #16]
   20fd8:	add	x29, sp, #0x10
   20fdc:	stp	x19, x20, [sp, #32]
   20fe0:	mov	x20, x4
   20fe4:	mov	x19, x6
   20fe8:	stp	x21, x22, [sp, #48]
   20fec:	mov	x22, x1
   20ff0:	mov	x21, x3
   20ff4:	stp	x23, x24, [sp, #64]
   20ff8:	mov	x23, x2
   20ffc:	str	x25, [sp, #80]
   21000:	mov	w25, w5
   21004:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   21008:	mov	x24, x0
   2100c:	cbz	x19, 21064 <GOMP_target_enter_exit_data@@GOMP_4.5+0x94>
   21010:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   21014:	ldr	x1, [x1, #4016]
   21018:	mrs	x2, tpidr_el0
   2101c:	add	x1, x2, x1
   21020:	ldr	x2, [x1, #80]
   21024:	cbz	x2, 21064 <GOMP_target_enter_exit_data@@GOMP_4.5+0x94>
   21028:	ldr	x3, [x2, #56]
   2102c:	cbz	x3, 21064 <GOMP_target_enter_exit_data@@GOMP_4.5+0x94>
   21030:	ldr	x1, [x1, #16]
   21034:	tbz	w25, #0, 21044 <GOMP_target_enter_exit_data@@GOMP_4.5+0x74>
   21038:	cbz	x1, 2105c <GOMP_target_enter_exit_data@@GOMP_4.5+0x8c>
   2103c:	ldrb	w3, [x2, #205]
   21040:	cbz	w3, 2116c <GOMP_target_enter_exit_data@@GOMP_4.5+0x19c>
   21044:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   21048:	cmp	x1, #0x0
   2104c:	cset	w3, ne  // ne = any
   21050:	ldrb	w0, [x0, #1364]
   21054:	tst	w3, w0
   21058:	b.ne	211d8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x208>  // b.any
   2105c:	mov	x0, x19
   21060:	bl	145d0 <GOMP_taskwait@@GOMP_2.0+0x580>
   21064:	cbz	x24, 2107c <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   21068:	ldr	w0, [x24, #8]
   2106c:	mov	w1, #0x5                   	// #5
   21070:	and	w0, w0, w1
   21074:	cmp	w0, #0x4
   21078:	b.eq	21098 <GOMP_target_enter_exit_data@@GOMP_4.5+0xc8>  // b.none
   2107c:	ldp	x29, x30, [sp, #16]
   21080:	ldp	x19, x20, [sp, #32]
   21084:	ldp	x21, x22, [sp, #48]
   21088:	ldp	x23, x24, [sp, #64]
   2108c:	ldr	x25, [sp, #80]
   21090:	add	sp, sp, #0x60
   21094:	ret
   21098:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   2109c:	ldr	x1, [x1, #4016]
   210a0:	mrs	x0, tpidr_el0
   210a4:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   210a8:	add	x0, x0, x1
   210ac:	ldrb	w2, [x2, #1364]
   210b0:	ldr	x1, [x0, #16]
   210b4:	cmp	x1, #0x0
   210b8:	cset	w3, ne  // ne = any
   210bc:	tst	w3, w2
   210c0:	b.ne	211a0 <GOMP_target_enter_exit_data@@GOMP_4.5+0x1d0>  // b.any
   210c4:	tbnz	w25, #1, 2113c <GOMP_target_enter_exit_data@@GOMP_4.5+0x16c>
   210c8:	cbz	x22, 2107c <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   210cc:	mov	x19, #0x0                   	// #0
   210d0:	b	210f4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x124>
   210d4:	mov	w7, #0x3                   	// #3
   210d8:	mov	w6, #0x1                   	// #1
   210dc:	mov	x3, #0x0                   	// #0
   210e0:	mov	x1, #0x1                   	// #1
   210e4:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   210e8:	add	x19, x19, #0x1
   210ec:	cmp	x22, x19
   210f0:	b.ls	2107c <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>  // b.plast
   210f4:	lsl	x7, x19, #1
   210f8:	lsl	x6, x19, #3
   210fc:	add	x5, x20, x7
   21100:	add	x2, x23, x6
   21104:	add	x4, x21, x6
   21108:	mov	x0, x24
   2110c:	ldrb	w1, [x20, x7]
   21110:	cmp	w1, #0x1c
   21114:	b.ne	210d4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x104>  // b.any
   21118:	ldr	x1, [x21, x19, lsl #3]
   2111c:	mov	w7, #0x3                   	// #3
   21120:	mov	w6, #0x1                   	// #1
   21124:	mov	x3, #0x0                   	// #0
   21128:	add	x1, x1, #0x1
   2112c:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   21130:	ldr	x0, [x21, x19, lsl #3]
   21134:	add	x19, x19, x0
   21138:	b	210e8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x118>
   2113c:	mov	x4, x20
   21140:	mov	x3, x21
   21144:	mov	x2, x23
   21148:	mov	x1, x22
   2114c:	mov	x0, x24
   21150:	ldp	x29, x30, [sp, #16]
   21154:	ldp	x19, x20, [sp, #32]
   21158:	ldp	x21, x22, [sp, #48]
   2115c:	ldp	x23, x24, [sp, #64]
   21160:	ldr	x25, [sp, #80]
   21164:	add	sp, sp, #0x60
   21168:	b	1da20 <omp_get_place_proc_ids@@OMP_4.5+0x1120>
   2116c:	str	xzr, [sp]
   21170:	mov	x7, x19
   21174:	str	wzr, [sp, #8]
   21178:	mov	w6, w25
   2117c:	mov	x5, x20
   21180:	mov	x4, x21
   21184:	mov	x3, x23
   21188:	mov	x2, x22
   2118c:	mov	x1, #0x0                   	// #0
   21190:	bl	13108 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa8>
   21194:	tst	w0, #0xff
   21198:	b.eq	21064 <GOMP_target_enter_exit_data@@GOMP_4.5+0x94>  // b.none
   2119c:	b	2107c <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   211a0:	ldr	w1, [x1, #132]
   211a4:	tbnz	w1, #2, 2107c <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   211a8:	ldr	x0, [x0, #80]
   211ac:	ldr	x0, [x0, #40]
   211b0:	cbz	x0, 210c4 <GOMP_target_enter_exit_data@@GOMP_4.5+0xf4>
   211b4:	ldrb	w1, [x0, #49]
   211b8:	cbnz	w1, 2107c <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   211bc:	ldrb	w1, [x0, #50]
   211c0:	cbz	w1, 210c4 <GOMP_target_enter_exit_data@@GOMP_4.5+0xf4>
   211c4:	ldr	x0, [x0]
   211c8:	cbz	x0, 210c4 <GOMP_target_enter_exit_data@@GOMP_4.5+0xf4>
   211cc:	ldrb	w0, [x0, #49]
   211d0:	cbz	w0, 210c4 <GOMP_target_enter_exit_data@@GOMP_4.5+0xf4>
   211d4:	b	2107c <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   211d8:	ldr	w0, [x1, #132]
   211dc:	tbnz	w0, #2, 2107c <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   211e0:	ldr	x0, [x2, #40]
   211e4:	cbz	x0, 2105c <GOMP_target_enter_exit_data@@GOMP_4.5+0x8c>
   211e8:	ldrb	w1, [x0, #49]
   211ec:	cbnz	w1, 2107c <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   211f0:	ldrb	w1, [x0, #50]
   211f4:	cbz	w1, 2105c <GOMP_target_enter_exit_data@@GOMP_4.5+0x8c>
   211f8:	ldr	x0, [x0]
   211fc:	cbz	x0, 2105c <GOMP_target_enter_exit_data@@GOMP_4.5+0x8c>
   21200:	ldrb	w0, [x0, #49]
   21204:	cbz	w0, 2105c <GOMP_target_enter_exit_data@@GOMP_4.5+0x8c>
   21208:	b	2107c <GOMP_target_enter_exit_data@@GOMP_4.5+0xac>
   2120c:	nop
   21210:	stp	x29, x30, [sp, #-48]!
   21214:	mov	x29, sp
   21218:	stp	x19, x20, [sp, #16]
   2121c:	mov	x19, x0
   21220:	ldr	x0, [x0, #8]
   21224:	stp	x21, x22, [sp, #32]
   21228:	ldr	x21, [x19]
   2122c:	cbz	x0, 212e4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x314>
   21230:	cbz	x21, 212c0 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2f0>
   21234:	ldr	w1, [x21, #8]
   21238:	tbz	w1, #2, 212c0 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2f0>
   2123c:	tbnz	w1, #1, 213d0 <GOMP_target_enter_exit_data@@GOMP_4.5+0x400>
   21240:	mov	x1, x0
   21244:	mov	x0, x21
   21248:	bl	1d440 <omp_get_place_proc_ids@@OMP_4.5+0xb40>
   2124c:	mov	x20, x0
   21250:	cbz	x0, 212bc <GOMP_target_enter_exit_data@@GOMP_4.5+0x2ec>
   21254:	ldr	x1, [x21, #136]
   21258:	cbz	x1, 2126c <GOMP_target_enter_exit_data@@GOMP_4.5+0x29c>
   2125c:	mov	x0, x20
   21260:	blr	x1
   21264:	tst	w0, #0xff
   21268:	b.eq	212bc <GOMP_target_enter_exit_data@@GOMP_4.5+0x2ec>  // b.none
   2126c:	ldr	w0, [x19, #44]
   21270:	cmp	w0, #0x5
   21274:	b.eq	213b8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3e8>  // b.none
   21278:	ldr	w0, [x21, #8]
   2127c:	add	x2, x19, #0x50
   21280:	tbz	w0, #0, 213d8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x408>
   21284:	str	xzr, [x19, #48]
   21288:	ldr	w0, [x21, #12]
   2128c:	mov	w1, #0x3                   	// #3
   21290:	ldr	x3, [x19, #72]
   21294:	mov	x4, x19
   21298:	ldr	x5, [x21, #152]
   2129c:	str	w1, [x19, #44]
   212a0:	mov	x1, x20
   212a4:	blr	x5
   212a8:	mov	w0, #0x1                   	// #1
   212ac:	ldp	x19, x20, [sp, #16]
   212b0:	ldp	x21, x22, [sp, #32]
   212b4:	ldp	x29, x30, [sp], #48
   212b8:	ret
   212bc:	ldr	x0, [x19, #8]
   212c0:	mov	w1, #0x2                   	// #2
   212c4:	str	w1, [x19, #44]
   212c8:	add	x1, x19, #0x50
   212cc:	bl	1cea8 <omp_get_place_proc_ids@@OMP_4.5+0x5a8>
   212d0:	mov	w0, #0x0                   	// #0
   212d4:	ldp	x19, x20, [sp, #16]
   212d8:	ldp	x21, x22, [sp, #32]
   212dc:	ldp	x29, x30, [sp], #48
   212e0:	ret
   212e4:	cbz	x21, 213a4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3d4>
   212e8:	ldr	w0, [x21, #8]
   212ec:	mov	w1, #0x5                   	// #5
   212f0:	and	w0, w0, w1
   212f4:	cmp	w0, #0x4
   212f8:	b.ne	213a4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3d4>  // b.any
   212fc:	ldr	w0, [x19, #40]
   21300:	ldr	x1, [x19, #16]
   21304:	tbnz	w0, #31, 21400 <GOMP_target_enter_exit_data@@GOMP_4.5+0x430>
   21308:	tbnz	w0, #1, 21394 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3c4>
   2130c:	cbz	x1, 213a4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3d4>
   21310:	mov	x20, #0x0                   	// #0
   21314:	b	2133c <GOMP_target_enter_exit_data@@GOMP_4.5+0x36c>
   21318:	mov	w7, #0x3                   	// #3
   2131c:	mov	w6, #0x1                   	// #1
   21320:	mov	x3, #0x0                   	// #0
   21324:	mov	x1, #0x1                   	// #1
   21328:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   2132c:	ldr	x0, [x19, #16]
   21330:	add	x20, x20, #0x1
   21334:	cmp	x0, x20
   21338:	b.ls	213a4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3d4>  // b.plast
   2133c:	ldp	x3, x1, [x19, #24]
   21340:	lsl	x5, x20, #1
   21344:	add	x2, x20, #0xa
   21348:	mov	x0, x21
   2134c:	lsl	x2, x2, #3
   21350:	sub	x22, x2, #0x50
   21354:	add	x2, x19, x2
   21358:	ldrb	w6, [x1, x5]
   2135c:	add	x4, x3, x22
   21360:	add	x5, x1, x5
   21364:	cmp	w6, #0x1c
   21368:	b.ne	21318 <GOMP_target_enter_exit_data@@GOMP_4.5+0x348>  // b.any
   2136c:	ldr	x1, [x3, x22]
   21370:	mov	w7, #0x3                   	// #3
   21374:	mov	w6, #0x1                   	// #1
   21378:	mov	x3, #0x0                   	// #0
   2137c:	add	x1, x1, #0x1
   21380:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   21384:	ldr	x0, [x19, #24]
   21388:	ldr	x0, [x0, x22]
   2138c:	add	x20, x20, x0
   21390:	b	2132c <GOMP_target_enter_exit_data@@GOMP_4.5+0x35c>
   21394:	ldp	x3, x4, [x19, #24]
   21398:	mov	x0, x21
   2139c:	add	x2, x19, #0x50
   213a0:	bl	1da20 <omp_get_place_proc_ids@@OMP_4.5+0x1120>
   213a4:	mov	w0, #0x0                   	// #0
   213a8:	ldp	x19, x20, [sp, #16]
   213ac:	ldp	x21, x22, [sp, #32]
   213b0:	ldp	x29, x30, [sp], #48
   213b4:	ret
   213b8:	ldr	x0, [x19, #48]
   213bc:	cbz	x0, 213a4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3d4>
   213c0:	mov	w1, #0x1                   	// #1
   213c4:	bl	1fb38 <omp_get_place_proc_ids@@OMP_4.5+0x3238>
   213c8:	mov	w0, #0x0                   	// #0
   213cc:	b	212d4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x304>
   213d0:	mov	x20, x0
   213d4:	b	21254 <GOMP_target_enter_exit_data@@GOMP_4.5+0x284>
   213d8:	ldp	x1, x4, [x19, #16]
   213dc:	mov	w7, #0x1                   	// #1
   213e0:	ldr	x5, [x19, #32]
   213e4:	mov	w6, w7
   213e8:	mov	x0, x21
   213ec:	mov	x3, #0x0                   	// #0
   213f0:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   213f4:	ldr	x2, [x0, #16]
   213f8:	str	x0, [x19, #48]
   213fc:	b	21288 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2b8>
   21400:	ldp	x3, x4, [x19, #24]
   21404:	mov	x0, x21
   21408:	add	x2, x19, #0x50
   2140c:	mov	w5, #0x1                   	// #1
   21410:	bl	1d510 <omp_get_place_proc_ids@@OMP_4.5+0xc10>
   21414:	mov	w0, #0x0                   	// #0
   21418:	b	212d4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x304>
   2141c:	nop

0000000000021420 <GOMP_teams@@GOMP_4.0>:
   21420:	cbz	w1, 21468 <GOMP_teams@@GOMP_4.0+0x48>
   21424:	stp	x29, x30, [sp, #-32]!
   21428:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   2142c:	ldr	x0, [x0, #4016]
   21430:	mov	x29, sp
   21434:	str	x19, [sp, #16]
   21438:	mov	w19, w1
   2143c:	mrs	x1, tpidr_el0
   21440:	add	x0, x1, x0
   21444:	ldr	x0, [x0, #80]
   21448:	cbz	x0, 2146c <GOMP_teams@@GOMP_4.0+0x4c>
   2144c:	add	x0, x0, #0x90
   21450:	cmp	w19, #0x0
   21454:	csinv	w19, w19, wzr, ge  // ge = tcont
   21458:	str	w19, [x0, #20]
   2145c:	ldr	x19, [sp, #16]
   21460:	ldp	x29, x30, [sp], #32
   21464:	ret
   21468:	ret
   2146c:	bl	19758 <omp_in_final@@OMP_3.1+0x1730>
   21470:	cmp	w19, #0x0
   21474:	csinv	w19, w19, wzr, ge  // ge = tcont
   21478:	str	w19, [x0, #20]
   2147c:	ldr	x19, [sp, #16]
   21480:	ldp	x29, x30, [sp], #32
   21484:	ret

0000000000021488 <omp_target_alloc@@OMP_4.5>:
   21488:	cmn	w1, #0x2
   2148c:	b.eq	21530 <omp_target_alloc@@OMP_4.5+0xa8>  // b.none
   21490:	stp	x29, x30, [sp, #-48]!
   21494:	mov	x29, sp
   21498:	stp	x19, x20, [sp, #16]
   2149c:	tbnz	w1, #31, 21534 <omp_target_alloc@@OMP_4.5+0xac>
   214a0:	mov	x20, x0
   214a4:	mov	w0, w1
   214a8:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   214ac:	mov	x19, x0
   214b0:	cbz	x0, 21534 <omp_target_alloc@@OMP_4.5+0xac>
   214b4:	ldr	w0, [x0, #8]
   214b8:	mov	w1, #0x5                   	// #5
   214bc:	and	w0, w0, w1
   214c0:	cmp	w0, #0x4
   214c4:	b.ne	21524 <omp_target_alloc@@OMP_4.5+0x9c>  // b.any
   214c8:	str	x21, [sp, #32]
   214cc:	add	x21, x19, #0xa8
   214d0:	mov	w0, #0x1                   	// #1
   214d4:	ldaxr	w1, [x21]
   214d8:	cbnz	w1, 214e4 <omp_target_alloc@@OMP_4.5+0x5c>
   214dc:	stxr	w2, w0, [x21]
   214e0:	cbnz	w2, 214d4 <omp_target_alloc@@OMP_4.5+0x4c>
   214e4:	cmp	w1, #0x0
   214e8:	b.ne	21558 <omp_target_alloc@@OMP_4.5+0xd0>  // b.any
   214ec:	ldr	w0, [x19, #12]
   214f0:	mov	x1, x20
   214f4:	ldr	x2, [x19, #96]
   214f8:	blr	x2
   214fc:	mov	x19, x0
   21500:	ldxr	w0, [x21]
   21504:	stlxr	w1, wzr, [x21]
   21508:	cbnz	w1, 21500 <omp_target_alloc@@OMP_4.5+0x78>
   2150c:	tbnz	w0, #31, 21548 <omp_target_alloc@@OMP_4.5+0xc0>
   21510:	ldr	x21, [sp, #32]
   21514:	mov	x0, x19
   21518:	ldp	x19, x20, [sp, #16]
   2151c:	ldp	x29, x30, [sp], #48
   21520:	ret
   21524:	mov	x0, x20
   21528:	ldp	x19, x20, [sp, #16]
   2152c:	ldp	x29, x30, [sp], #48
   21530:	b	8760 <malloc@plt>
   21534:	mov	x19, #0x0                   	// #0
   21538:	mov	x0, x19
   2153c:	ldp	x19, x20, [sp, #16]
   21540:	ldp	x29, x30, [sp], #48
   21544:	ret
   21548:	mov	x0, x21
   2154c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   21550:	ldr	x21, [sp, #32]
   21554:	b	21514 <omp_target_alloc@@OMP_4.5+0x8c>
   21558:	mov	x0, x21
   2155c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   21560:	b	214ec <omp_target_alloc@@OMP_4.5+0x64>
   21564:	nop

0000000000021568 <omp_target_free@@OMP_4.5>:
   21568:	cbz	x0, 2160c <omp_target_free@@OMP_4.5+0xa4>
   2156c:	stp	x29, x30, [sp, #-48]!
   21570:	cmn	w1, #0x2
   21574:	mov	x29, sp
   21578:	stp	x19, x20, [sp, #16]
   2157c:	mov	x19, x0
   21580:	b.eq	215fc <omp_target_free@@OMP_4.5+0x94>  // b.none
   21584:	tbnz	w1, #31, 215f0 <omp_target_free@@OMP_4.5+0x88>
   21588:	mov	w0, w1
   2158c:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   21590:	mov	x20, x0
   21594:	cbz	x0, 215f0 <omp_target_free@@OMP_4.5+0x88>
   21598:	ldr	w0, [x0, #8]
   2159c:	mov	w1, #0x5                   	// #5
   215a0:	and	w0, w0, w1
   215a4:	cmp	w0, #0x4
   215a8:	b.ne	215fc <omp_target_free@@OMP_4.5+0x94>  // b.any
   215ac:	str	x21, [sp, #32]
   215b0:	add	x21, x20, #0xa8
   215b4:	mov	w0, #0x1                   	// #1
   215b8:	ldaxr	w1, [x21]
   215bc:	cbnz	w1, 215c8 <omp_target_free@@OMP_4.5+0x60>
   215c0:	stxr	w2, w0, [x21]
   215c4:	cbnz	w2, 215b8 <omp_target_free@@OMP_4.5+0x50>
   215c8:	cmp	w1, #0x0
   215cc:	b.ne	21624 <omp_target_free@@OMP_4.5+0xbc>  // b.any
   215d0:	mov	x1, x19
   215d4:	mov	x0, x20
   215d8:	bl	1cf98 <omp_get_place_proc_ids@@OMP_4.5+0x698>
   215dc:	ldxr	w0, [x21]
   215e0:	stlxr	w1, wzr, [x21]
   215e4:	cbnz	w1, 215dc <omp_target_free@@OMP_4.5+0x74>
   215e8:	tbnz	w0, #31, 21610 <omp_target_free@@OMP_4.5+0xa8>
   215ec:	ldr	x21, [sp, #32]
   215f0:	ldp	x19, x20, [sp, #16]
   215f4:	ldp	x29, x30, [sp], #48
   215f8:	ret
   215fc:	mov	x0, x19
   21600:	ldp	x19, x20, [sp, #16]
   21604:	ldp	x29, x30, [sp], #48
   21608:	b	8900 <free@plt>
   2160c:	ret
   21610:	mov	x0, x21
   21614:	ldp	x19, x20, [sp, #16]
   21618:	ldr	x21, [sp, #32]
   2161c:	ldp	x29, x30, [sp], #48
   21620:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   21624:	mov	x0, x21
   21628:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   2162c:	b	215d0 <omp_target_free@@OMP_4.5+0x68>

0000000000021630 <omp_target_is_present@@OMP_4.5>:
   21630:	stp	x29, x30, [sp, #-112]!
   21634:	cmp	x0, #0x0
   21638:	ccmn	w1, #0x2, #0x4, ne  // ne = any
   2163c:	mov	x29, sp
   21640:	stp	x19, x20, [sp, #16]
   21644:	b.eq	216e4 <omp_target_is_present@@OMP_4.5+0xb4>  // b.none
   21648:	tbnz	w1, #31, 216f8 <omp_target_is_present@@OMP_4.5+0xc8>
   2164c:	mov	x19, x0
   21650:	mov	w0, w1
   21654:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   21658:	mov	x20, x0
   2165c:	cbz	x0, 216f8 <omp_target_is_present@@OMP_4.5+0xc8>
   21660:	ldr	w0, [x0, #8]
   21664:	mov	w1, #0x5                   	// #5
   21668:	and	w0, w0, w1
   2166c:	cmp	w0, #0x4
   21670:	b.ne	216e4 <omp_target_is_present@@OMP_4.5+0xb4>  // b.any
   21674:	str	x21, [sp, #32]
   21678:	add	x21, x20, #0xa8
   2167c:	mov	w0, #0x1                   	// #1
   21680:	ldaxr	w1, [x21]
   21684:	cbnz	w1, 21690 <omp_target_is_present@@OMP_4.5+0x60>
   21688:	stxr	w2, w0, [x21]
   2168c:	cbnz	w2, 21680 <omp_target_is_present@@OMP_4.5+0x50>
   21690:	cmp	w1, #0x0
   21694:	b.ne	2171c <omp_target_is_present@@OMP_4.5+0xec>  // b.any
   21698:	add	x2, x19, #0x1
   2169c:	add	x1, sp, #0x38
   216a0:	add	x0, x20, #0xa0
   216a4:	stp	x19, x2, [sp, #56]
   216a8:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   216ac:	cmp	x0, #0x0
   216b0:	ldr	x1, [sp, #64]
   216b4:	cset	w19, ne  // ne = any
   216b8:	sub	x1, x1, #0x1
   216bc:	str	x1, [sp, #64]
   216c0:	ldxr	w0, [x21]
   216c4:	stlxr	w1, wzr, [x21]
   216c8:	cbnz	w1, 216c0 <omp_target_is_present@@OMP_4.5+0x90>
   216cc:	tbnz	w0, #31, 2170c <omp_target_is_present@@OMP_4.5+0xdc>
   216d0:	mov	w0, w19
   216d4:	ldp	x19, x20, [sp, #16]
   216d8:	ldr	x21, [sp, #32]
   216dc:	ldp	x29, x30, [sp], #112
   216e0:	ret
   216e4:	mov	w19, #0x1                   	// #1
   216e8:	mov	w0, w19
   216ec:	ldp	x19, x20, [sp, #16]
   216f0:	ldp	x29, x30, [sp], #112
   216f4:	ret
   216f8:	mov	w19, #0x0                   	// #0
   216fc:	mov	w0, w19
   21700:	ldp	x19, x20, [sp, #16]
   21704:	ldp	x29, x30, [sp], #112
   21708:	ret
   2170c:	mov	x0, x21
   21710:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   21714:	ldr	x21, [sp, #32]
   21718:	b	216e8 <omp_target_is_present@@OMP_4.5+0xb8>
   2171c:	mov	x0, x21
   21720:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   21724:	b	21698 <omp_target_is_present@@OMP_4.5+0x68>

0000000000021728 <omp_target_memcpy@@OMP_4.5>:
   21728:	stp	x29, x30, [sp, #-80]!
   2172c:	cmn	w5, #0x2
   21730:	mov	x29, sp
   21734:	stp	x19, x20, [sp, #16]
   21738:	mov	w19, w6
   2173c:	stp	x21, x22, [sp, #32]
   21740:	mov	x21, x0
   21744:	mov	x22, x1
   21748:	stp	x23, x24, [sp, #48]
   2174c:	mov	x23, x2
   21750:	mov	x24, x3
   21754:	str	x25, [sp, #64]
   21758:	mov	x25, x4
   2175c:	b.eq	21788 <omp_target_memcpy@@OMP_4.5+0x60>  // b.none
   21760:	tbnz	w5, #31, 21810 <omp_target_memcpy@@OMP_4.5+0xe8>
   21764:	mov	w0, w5
   21768:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   2176c:	mov	x20, x0
   21770:	cbz	x0, 21810 <omp_target_memcpy@@OMP_4.5+0xe8>
   21774:	ldr	w0, [x0, #8]
   21778:	mov	w1, #0x5                   	// #5
   2177c:	and	w0, w0, w1
   21780:	cmp	w0, #0x4
   21784:	b.eq	21888 <omp_target_memcpy@@OMP_4.5+0x160>  // b.none
   21788:	cmn	w19, #0x2
   2178c:	mov	x20, #0x0                   	// #0
   21790:	b.eq	21910 <omp_target_memcpy@@OMP_4.5+0x1e8>  // b.none
   21794:	tbnz	w19, #31, 21810 <omp_target_memcpy@@OMP_4.5+0xe8>
   21798:	mov	w0, w19
   2179c:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   217a0:	mov	x19, x0
   217a4:	cbz	x0, 21810 <omp_target_memcpy@@OMP_4.5+0xe8>
   217a8:	ldr	w0, [x0, #8]
   217ac:	mov	w1, #0x5                   	// #5
   217b0:	and	w0, w0, w1
   217b4:	cmp	w0, #0x4
   217b8:	b.eq	2182c <omp_target_memcpy@@OMP_4.5+0x104>  // b.none
   217bc:	cbz	x20, 21910 <omp_target_memcpy@@OMP_4.5+0x1e8>
   217c0:	add	x19, x20, #0xa8
   217c4:	mov	w0, #0x1                   	// #1
   217c8:	ldaxr	w1, [x19]
   217cc:	cbnz	w1, 217d8 <omp_target_memcpy@@OMP_4.5+0xb0>
   217d0:	stxr	w2, w0, [x19]
   217d4:	cbnz	w2, 217c8 <omp_target_memcpy@@OMP_4.5+0xa0>
   217d8:	cmp	w1, #0x0
   217dc:	b.ne	21964 <omp_target_memcpy@@OMP_4.5+0x23c>  // b.any
   217e0:	ldr	w0, [x20, #12]
   217e4:	mov	x3, x23
   217e8:	ldr	x4, [x20, #120]
   217ec:	add	x2, x22, x25
   217f0:	add	x1, x21, x24
   217f4:	blr	x4
   217f8:	and	w20, w0, #0xff
   217fc:	ldxr	w0, [x19]
   21800:	stlxr	w1, wzr, [x19]
   21804:	cbnz	w1, 217fc <omp_target_memcpy@@OMP_4.5+0xd4>
   21808:	tbnz	w0, #31, 2193c <omp_target_memcpy@@OMP_4.5+0x214>
   2180c:	cbnz	w20, 218f4 <omp_target_memcpy@@OMP_4.5+0x1cc>
   21810:	mov	w0, #0x16                  	// #22
   21814:	ldp	x19, x20, [sp, #16]
   21818:	ldp	x21, x22, [sp, #32]
   2181c:	ldp	x23, x24, [sp, #48]
   21820:	ldr	x25, [sp, #64]
   21824:	ldp	x29, x30, [sp], #80
   21828:	ret
   2182c:	cbz	x20, 21898 <omp_target_memcpy@@OMP_4.5+0x170>
   21830:	cmp	x19, x20
   21834:	b.ne	21810 <omp_target_memcpy@@OMP_4.5+0xe8>  // b.any
   21838:	add	x19, x20, #0xa8
   2183c:	mov	w0, #0x1                   	// #1
   21840:	ldaxr	w1, [x19]
   21844:	cbnz	w1, 21850 <omp_target_memcpy@@OMP_4.5+0x128>
   21848:	stxr	w2, w0, [x19]
   2184c:	cbnz	w2, 21840 <omp_target_memcpy@@OMP_4.5+0x118>
   21850:	cmp	w1, #0x0
   21854:	b.ne	21958 <omp_target_memcpy@@OMP_4.5+0x230>  // b.any
   21858:	ldr	w0, [x20, #12]
   2185c:	mov	x3, x23
   21860:	ldr	x4, [x20, #128]
   21864:	add	x2, x22, x25
   21868:	add	x1, x21, x24
   2186c:	blr	x4
   21870:	and	w20, w0, #0xff
   21874:	ldxr	w0, [x19]
   21878:	stlxr	w1, wzr, [x19]
   2187c:	cbnz	w1, 21874 <omp_target_memcpy@@OMP_4.5+0x14c>
   21880:	tbz	w0, #31, 2180c <omp_target_memcpy@@OMP_4.5+0xe4>
   21884:	b	2193c <omp_target_memcpy@@OMP_4.5+0x214>
   21888:	cmn	w19, #0x2
   2188c:	b.eq	217c0 <omp_target_memcpy@@OMP_4.5+0x98>  // b.none
   21890:	tbz	w19, #31, 21798 <omp_target_memcpy@@OMP_4.5+0x70>
   21894:	b	21810 <omp_target_memcpy@@OMP_4.5+0xe8>
   21898:	add	x20, x19, #0xa8
   2189c:	mov	w0, #0x1                   	// #1
   218a0:	ldaxr	w1, [x20]
   218a4:	cbnz	w1, 218b0 <omp_target_memcpy@@OMP_4.5+0x188>
   218a8:	stxr	w2, w0, [x20]
   218ac:	cbnz	w2, 218a0 <omp_target_memcpy@@OMP_4.5+0x178>
   218b0:	cmp	w1, #0x0
   218b4:	b.ne	2194c <omp_target_memcpy@@OMP_4.5+0x224>  // b.any
   218b8:	ldr	w0, [x19, #12]
   218bc:	mov	x3, x23
   218c0:	ldr	x4, [x19, #112]
   218c4:	add	x2, x22, x25
   218c8:	add	x1, x21, x24
   218cc:	blr	x4
   218d0:	and	w19, w0, #0xff
   218d4:	ldxr	w0, [x20]
   218d8:	stlxr	w1, wzr, [x20]
   218dc:	cbnz	w1, 218d4 <omp_target_memcpy@@OMP_4.5+0x1ac>
   218e0:	tbz	w0, #31, 218f0 <omp_target_memcpy@@OMP_4.5+0x1c8>
   218e4:	mov	x0, x20
   218e8:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   218ec:	nop
   218f0:	cbz	w19, 21810 <omp_target_memcpy@@OMP_4.5+0xe8>
   218f4:	mov	w0, #0x0                   	// #0
   218f8:	ldp	x19, x20, [sp, #16]
   218fc:	ldp	x21, x22, [sp, #32]
   21900:	ldp	x23, x24, [sp, #48]
   21904:	ldr	x25, [sp, #64]
   21908:	ldp	x29, x30, [sp], #80
   2190c:	ret
   21910:	add	x1, x22, x25
   21914:	mov	x2, x23
   21918:	add	x0, x21, x24
   2191c:	bl	85c0 <memcpy@plt>
   21920:	mov	w0, #0x0                   	// #0
   21924:	ldp	x19, x20, [sp, #16]
   21928:	ldp	x21, x22, [sp, #32]
   2192c:	ldp	x23, x24, [sp, #48]
   21930:	ldr	x25, [sp, #64]
   21934:	ldp	x29, x30, [sp], #80
   21938:	ret
   2193c:	mov	x0, x19
   21940:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   21944:	cbz	w20, 21810 <omp_target_memcpy@@OMP_4.5+0xe8>
   21948:	b	218f4 <omp_target_memcpy@@OMP_4.5+0x1cc>
   2194c:	mov	x0, x20
   21950:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   21954:	b	218b8 <omp_target_memcpy@@OMP_4.5+0x190>
   21958:	mov	x0, x19
   2195c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   21960:	b	21858 <omp_target_memcpy@@OMP_4.5+0x130>
   21964:	mov	x0, x19
   21968:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   2196c:	b	217e0 <omp_target_memcpy@@OMP_4.5+0xb8>

0000000000021970 <omp_target_memcpy_rect@@OMP_4.5>:
   21970:	sub	sp, sp, #0x90
   21974:	stp	x29, x30, [sp, #32]
   21978:	add	x29, sp, #0x20
   2197c:	stp	x19, x20, [sp, #48]
   21980:	mov	x19, x0
   21984:	mov	x20, x1
   21988:	stp	x21, x22, [sp, #64]
   2198c:	orr	x1, x0, x1
   21990:	ldr	w22, [sp, #160]
   21994:	stp	x27, x28, [sp, #112]
   21998:	mov	x28, x2
   2199c:	ldr	w0, [sp, #152]
   219a0:	ldr	x2, [sp, #144]
   219a4:	cbz	x1, 21aa8 <omp_target_memcpy_rect@@OMP_4.5+0x138>
   219a8:	stp	x23, x24, [sp, #80]
   219ac:	mov	w27, w3
   219b0:	mov	x24, x6
   219b4:	stp	x25, x26, [sp, #96]
   219b8:	mov	x23, x7
   219bc:	mov	x26, x4
   219c0:	mov	x25, x5
   219c4:	cmn	w0, #0x2
   219c8:	b.eq	219f8 <omp_target_memcpy_rect@@OMP_4.5+0x88>  // b.none
   219cc:	tbnz	w0, #31, 21a80 <omp_target_memcpy_rect@@OMP_4.5+0x110>
   219d0:	str	x2, [sp, #128]
   219d4:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   219d8:	mov	x21, x0
   219dc:	cbz	x0, 21a80 <omp_target_memcpy_rect@@OMP_4.5+0x110>
   219e0:	ldr	w0, [x0, #8]
   219e4:	mov	w1, #0x5                   	// #5
   219e8:	ldr	x2, [sp, #128]
   219ec:	and	w0, w0, w1
   219f0:	cmp	w0, #0x4
   219f4:	b.eq	21b60 <omp_target_memcpy_rect@@OMP_4.5+0x1f0>  // b.none
   219f8:	cmn	w22, #0x2
   219fc:	mov	x21, #0x0                   	// #0
   21a00:	b.eq	21a38 <omp_target_memcpy_rect@@OMP_4.5+0xc8>  // b.none
   21a04:	str	x2, [sp, #128]
   21a08:	tbnz	w22, #31, 21a80 <omp_target_memcpy_rect@@OMP_4.5+0x110>
   21a0c:	mov	w0, w22
   21a10:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   21a14:	mov	x22, x0
   21a18:	cbz	x0, 21a80 <omp_target_memcpy_rect@@OMP_4.5+0x110>
   21a1c:	ldr	w0, [x0, #8]
   21a20:	mov	w1, #0x5                   	// #5
   21a24:	ldr	x2, [sp, #128]
   21a28:	and	w0, w0, w1
   21a2c:	cmp	w0, #0x4
   21a30:	b.eq	21ac8 <omp_target_memcpy_rect@@OMP_4.5+0x158>  // b.none
   21a34:	cbnz	x21, 21b68 <omp_target_memcpy_rect@@OMP_4.5+0x1f8>
   21a38:	mov	x7, x23
   21a3c:	mov	x6, x24
   21a40:	mov	x5, x25
   21a44:	mov	x4, x26
   21a48:	mov	w3, w27
   21a4c:	mov	x1, x20
   21a50:	mov	x0, x19
   21a54:	stp	x2, xzr, [sp, #144]
   21a58:	mov	x2, x28
   21a5c:	ldp	x29, x30, [sp, #32]
   21a60:	str	xzr, [sp, #160]
   21a64:	ldp	x19, x20, [sp, #48]
   21a68:	ldp	x21, x22, [sp, #64]
   21a6c:	ldp	x23, x24, [sp, #80]
   21a70:	ldp	x25, x26, [sp, #96]
   21a74:	ldp	x27, x28, [sp, #112]
   21a78:	add	sp, sp, #0x90
   21a7c:	b	1cbb8 <omp_get_place_proc_ids@@OMP_4.5+0x2b8>
   21a80:	ldp	x23, x24, [sp, #80]
   21a84:	mov	w19, #0x16                  	// #22
   21a88:	ldp	x25, x26, [sp, #96]
   21a8c:	mov	w0, w19
   21a90:	ldp	x29, x30, [sp, #32]
   21a94:	ldp	x19, x20, [sp, #48]
   21a98:	ldp	x21, x22, [sp, #64]
   21a9c:	ldp	x27, x28, [sp, #112]
   21aa0:	add	sp, sp, #0x90
   21aa4:	ret
   21aa8:	mov	w19, #0x7fffffff            	// #2147483647
   21aac:	mov	w0, w19
   21ab0:	ldp	x29, x30, [sp, #32]
   21ab4:	ldp	x19, x20, [sp, #48]
   21ab8:	ldp	x21, x22, [sp, #64]
   21abc:	ldp	x27, x28, [sp, #112]
   21ac0:	add	sp, sp, #0x90
   21ac4:	ret
   21ac8:	cmp	x21, #0x0
   21acc:	add	x8, x22, #0xa8
   21ad0:	ccmp	x22, x21, #0x4, ne  // ne = any
   21ad4:	mov	w0, #0x1                   	// #1
   21ad8:	b.ne	21a80 <omp_target_memcpy_rect@@OMP_4.5+0x110>  // b.any
   21adc:	ldaxr	w1, [x8]
   21ae0:	cbnz	w1, 21aec <omp_target_memcpy_rect@@OMP_4.5+0x17c>
   21ae4:	stxr	w3, w0, [x8]
   21ae8:	cbnz	w3, 21adc <omp_target_memcpy_rect@@OMP_4.5+0x16c>
   21aec:	cmp	w1, #0x0
   21af0:	b.ne	21bf0 <omp_target_memcpy_rect@@OMP_4.5+0x280>  // b.any
   21af4:	stp	x2, x21, [sp]
   21af8:	mov	x0, x19
   21afc:	mov	x7, x23
   21b00:	str	x22, [sp, #16]
   21b04:	mov	x6, x24
   21b08:	mov	x5, x25
   21b0c:	mov	x4, x26
   21b10:	mov	w3, w27
   21b14:	mov	x1, x20
   21b18:	mov	x2, x28
   21b1c:	str	x8, [sp, #128]
   21b20:	bl	1cbb8 <omp_get_place_proc_ids@@OMP_4.5+0x2b8>
   21b24:	mov	w19, w0
   21b28:	ldr	x8, [sp, #128]
   21b2c:	ldxr	w0, [x8]
   21b30:	stlxr	w1, wzr, [x8]
   21b34:	cbnz	w1, 21b2c <omp_target_memcpy_rect@@OMP_4.5+0x1bc>
   21b38:	tbnz	w0, #31, 21bdc <omp_target_memcpy_rect@@OMP_4.5+0x26c>
   21b3c:	mov	w0, w19
   21b40:	ldp	x29, x30, [sp, #32]
   21b44:	ldp	x19, x20, [sp, #48]
   21b48:	ldp	x21, x22, [sp, #64]
   21b4c:	ldp	x23, x24, [sp, #80]
   21b50:	ldp	x25, x26, [sp, #96]
   21b54:	ldp	x27, x28, [sp, #112]
   21b58:	add	sp, sp, #0x90
   21b5c:	ret
   21b60:	cmn	w22, #0x2
   21b64:	b.ne	21a04 <omp_target_memcpy_rect@@OMP_4.5+0x94>  // b.any
   21b68:	add	x22, x21, #0xa8
   21b6c:	mov	w0, #0x1                   	// #1
   21b70:	ldaxr	w1, [x22]
   21b74:	cbnz	w1, 21b80 <omp_target_memcpy_rect@@OMP_4.5+0x210>
   21b78:	stxr	w3, w0, [x22]
   21b7c:	cbnz	w3, 21b70 <omp_target_memcpy_rect@@OMP_4.5+0x200>
   21b80:	cmp	w1, #0x0
   21b84:	b.ne	21c04 <omp_target_memcpy_rect@@OMP_4.5+0x294>  // b.any
   21b88:	stp	x2, x21, [sp]
   21b8c:	mov	x0, x19
   21b90:	mov	x7, x23
   21b94:	str	xzr, [sp, #16]
   21b98:	mov	x6, x24
   21b9c:	mov	x5, x25
   21ba0:	mov	x4, x26
   21ba4:	mov	w3, w27
   21ba8:	mov	x1, x20
   21bac:	mov	x2, x28
   21bb0:	bl	1cbb8 <omp_get_place_proc_ids@@OMP_4.5+0x2b8>
   21bb4:	mov	w19, w0
   21bb8:	ldxr	w0, [x22]
   21bbc:	stlxr	w1, wzr, [x22]
   21bc0:	cbnz	w1, 21bb8 <omp_target_memcpy_rect@@OMP_4.5+0x248>
   21bc4:	tbz	w0, #31, 21b3c <omp_target_memcpy_rect@@OMP_4.5+0x1cc>
   21bc8:	mov	x0, x22
   21bcc:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   21bd0:	ldp	x23, x24, [sp, #80]
   21bd4:	ldp	x25, x26, [sp, #96]
   21bd8:	b	21a8c <omp_target_memcpy_rect@@OMP_4.5+0x11c>
   21bdc:	mov	x0, x8
   21be0:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   21be4:	ldp	x23, x24, [sp, #80]
   21be8:	ldp	x25, x26, [sp, #96]
   21bec:	b	21a8c <omp_target_memcpy_rect@@OMP_4.5+0x11c>
   21bf0:	mov	x0, x8
   21bf4:	stp	x8, x2, [sp, #128]
   21bf8:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   21bfc:	ldp	x8, x2, [sp, #128]
   21c00:	b	21af4 <omp_target_memcpy_rect@@OMP_4.5+0x184>
   21c04:	mov	x0, x22
   21c08:	str	x2, [sp, #128]
   21c0c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   21c10:	ldr	x2, [sp, #128]
   21c14:	b	21b88 <omp_target_memcpy_rect@@OMP_4.5+0x218>

0000000000021c18 <omp_target_associate_ptr@@OMP_4.5>:
   21c18:	stp	x29, x30, [sp, #-128]!
   21c1c:	mov	x29, sp
   21c20:	stp	x19, x20, [sp, #16]
   21c24:	tbnz	w4, #31, 21d0c <omp_target_associate_ptr@@OMP_4.5+0xf4>
   21c28:	mov	x19, x0
   21c2c:	mov	x20, x2
   21c30:	mov	w0, w4
   21c34:	stp	x21, x22, [sp, #32]
   21c38:	mov	x22, x3
   21c3c:	stp	x23, x24, [sp, #48]
   21c40:	mov	x23, x1
   21c44:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   21c48:	mov	x21, x0
   21c4c:	cbz	x0, 21d04 <omp_target_associate_ptr@@OMP_4.5+0xec>
   21c50:	ldr	w0, [x0, #8]
   21c54:	mov	w1, #0x5                   	// #5
   21c58:	and	w0, w0, w1
   21c5c:	cmp	w0, #0x4
   21c60:	b.ne	21d04 <omp_target_associate_ptr@@OMP_4.5+0xec>  // b.any
   21c64:	add	x24, x21, #0xa8
   21c68:	mov	w0, #0x1                   	// #1
   21c6c:	ldaxr	w1, [x24]
   21c70:	cbnz	w1, 21c7c <omp_target_associate_ptr@@OMP_4.5+0x64>
   21c74:	stxr	w2, w0, [x24]
   21c78:	cbnz	w2, 21c6c <omp_target_associate_ptr@@OMP_4.5+0x54>
   21c7c:	cmp	w1, #0x0
   21c80:	b.ne	21df4 <omp_target_associate_ptr@@OMP_4.5+0x1dc>  // b.any
   21c84:	add	x2, x19, x20
   21c88:	stp	x19, x2, [sp, #72]
   21c8c:	cmp	x19, x2
   21c90:	add	x22, x23, x22
   21c94:	add	x20, x21, #0xa0
   21c98:	b.ne	21d20 <omp_target_associate_ptr@@OMP_4.5+0x108>  // b.any
   21c9c:	add	x23, sp, #0x48
   21ca0:	add	x19, x19, #0x1
   21ca4:	mov	x1, x23
   21ca8:	mov	x0, x20
   21cac:	str	x19, [sp, #80]
   21cb0:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   21cb4:	ldr	x2, [sp, #80]
   21cb8:	sub	x2, x2, #0x1
   21cbc:	str	x2, [sp, #80]
   21cc0:	cbz	x0, 21da8 <omp_target_associate_ptr@@OMP_4.5+0x190>
   21cc4:	ldp	x1, x2, [x0, #16]
   21cc8:	mov	w19, #0x16                  	// #22
   21ccc:	ldr	x1, [x1, #16]
   21cd0:	add	x1, x1, x2
   21cd4:	cmp	x1, x22
   21cd8:	b.eq	21d84 <omp_target_associate_ptr@@OMP_4.5+0x16c>  // b.none
   21cdc:	ldxr	w0, [x24]
   21ce0:	stlxr	w1, wzr, [x24]
   21ce4:	cbnz	w1, 21cdc <omp_target_associate_ptr@@OMP_4.5+0xc4>
   21ce8:	tbnz	w0, #31, 21de0 <omp_target_associate_ptr@@OMP_4.5+0x1c8>
   21cec:	mov	w0, w19
   21cf0:	ldp	x19, x20, [sp, #16]
   21cf4:	ldp	x21, x22, [sp, #32]
   21cf8:	ldp	x23, x24, [sp, #48]
   21cfc:	ldp	x29, x30, [sp], #128
   21d00:	ret
   21d04:	ldp	x21, x22, [sp, #32]
   21d08:	ldp	x23, x24, [sp, #48]
   21d0c:	mov	w19, #0x16                  	// #22
   21d10:	mov	w0, w19
   21d14:	ldp	x19, x20, [sp, #16]
   21d18:	ldp	x29, x30, [sp], #128
   21d1c:	ret
   21d20:	add	x1, sp, #0x48
   21d24:	mov	x0, x20
   21d28:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   21d2c:	cbnz	x0, 21cc4 <omp_target_associate_ptr@@OMP_4.5+0xac>
   21d30:	mov	x0, #0x40                  	// #64
   21d34:	bl	b220 <fprintf@plt+0x2710>
   21d38:	mov	x23, x0
   21d3c:	mov	x0, #0x48                  	// #72
   21d40:	bl	b220 <fprintf@plt+0x2710>
   21d44:	mov	x1, x0
   21d48:	ldp	x4, x3, [sp, #72]
   21d4c:	mov	x5, #0x1                   	// #1
   21d50:	mov	x2, #0xffffffffffffffff    	// #-1
   21d54:	stp	x4, x3, [x1]
   21d58:	mov	x0, x20
   21d5c:	stp	x5, x1, [x23]
   21d60:	mov	w19, #0x0                   	// #0
   21d64:	stp	x23, x22, [x1, #16]
   21d68:	stp	xzr, xzr, [x23, #16]
   21d6c:	str	x2, [x1, #32]
   21d70:	stp	xzr, xzr, [x23, #32]
   21d74:	stp	xzr, x21, [x23, #48]
   21d78:	stp	xzr, xzr, [x1, #56]
   21d7c:	bl	221b0 <omp_pause_resource_all@@OMP_5.0+0x1d8>
   21d80:	b	21cdc <omp_target_associate_ptr@@OMP_4.5+0xc4>
   21d84:	ldr	x2, [x0]
   21d88:	ldr	x1, [sp, #72]
   21d8c:	cmp	x2, x1
   21d90:	b.hi	21cdc <omp_target_associate_ptr@@OMP_4.5+0xc4>  // b.pmore
   21d94:	ldr	x0, [x0, #8]
   21d98:	ldr	x1, [sp, #80]
   21d9c:	cmp	x0, x1
   21da0:	csel	w19, w19, wzr, cc  // cc = lo, ul, last
   21da4:	b	21cdc <omp_target_associate_ptr@@OMP_4.5+0xc4>
   21da8:	ldr	x2, [sp, #72]
   21dac:	mov	x1, x23
   21db0:	mov	x0, x20
   21db4:	sub	x2, x2, #0x1
   21db8:	str	x2, [sp, #72]
   21dbc:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   21dc0:	ldr	x1, [sp, #72]
   21dc4:	add	x1, x1, #0x1
   21dc8:	str	x1, [sp, #72]
   21dcc:	cbnz	x0, 21cc4 <omp_target_associate_ptr@@OMP_4.5+0xac>
   21dd0:	mov	x1, x23
   21dd4:	mov	x0, x20
   21dd8:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   21ddc:	b	21d2c <omp_target_associate_ptr@@OMP_4.5+0x114>
   21de0:	mov	x0, x24
   21de4:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   21de8:	ldp	x21, x22, [sp, #32]
   21dec:	ldp	x23, x24, [sp, #48]
   21df0:	b	21d10 <omp_target_associate_ptr@@OMP_4.5+0xf8>
   21df4:	mov	x0, x24
   21df8:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   21dfc:	b	21c84 <omp_target_associate_ptr@@OMP_4.5+0x6c>

0000000000021e00 <omp_target_disassociate_ptr@@OMP_4.5>:
   21e00:	stp	x29, x30, [sp, #-112]!
   21e04:	mov	x29, sp
   21e08:	stp	x19, x20, [sp, #16]
   21e0c:	tbnz	w1, #31, 21eb8 <omp_target_disassociate_ptr@@OMP_4.5+0xb8>
   21e10:	mov	x20, x0
   21e14:	mov	w0, w1
   21e18:	bl	20240 <GOMP_offload_unregister@@GOMP_4.0.1+0xe8>
   21e1c:	mov	x19, x0
   21e20:	cbz	x0, 21eb8 <omp_target_disassociate_ptr@@OMP_4.5+0xb8>
   21e24:	ldr	w0, [x0, #8]
   21e28:	tbz	w0, #2, 21eb8 <omp_target_disassociate_ptr@@OMP_4.5+0xb8>
   21e2c:	stp	x21, x22, [sp, #32]
   21e30:	add	x21, x19, #0xa8
   21e34:	mov	w0, #0x1                   	// #1
   21e38:	ldaxr	w1, [x21]
   21e3c:	cbnz	w1, 21e48 <omp_target_disassociate_ptr@@OMP_4.5+0x48>
   21e40:	stxr	w2, w0, [x21]
   21e44:	cbnz	w2, 21e38 <omp_target_disassociate_ptr@@OMP_4.5+0x38>
   21e48:	cmp	w1, #0x0
   21e4c:	b.ne	21f70 <omp_target_disassociate_ptr@@OMP_4.5+0x170>  // b.any
   21e50:	add	x2, x20, #0x1
   21e54:	add	x19, x19, #0xa0
   21e58:	add	x22, sp, #0x38
   21e5c:	mov	x0, x19
   21e60:	mov	x1, x22
   21e64:	stp	x20, x2, [sp, #56]
   21e68:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   21e6c:	ldr	x2, [sp, #64]
   21e70:	mov	x20, x0
   21e74:	sub	x2, x2, #0x1
   21e78:	str	x2, [sp, #64]
   21e7c:	cbz	x0, 21ecc <omp_target_disassociate_ptr@@OMP_4.5+0xcc>
   21e80:	ldr	x0, [sp, #56]
   21e84:	ldr	x1, [x20]
   21e88:	cmp	x1, x0
   21e8c:	b.eq	21f10 <omp_target_disassociate_ptr@@OMP_4.5+0x110>  // b.none
   21e90:	mov	w19, #0x16                  	// #22
   21e94:	ldxr	w0, [x21]
   21e98:	stlxr	w1, wzr, [x21]
   21e9c:	cbnz	w1, 21e94 <omp_target_disassociate_ptr@@OMP_4.5+0x94>
   21ea0:	tbnz	w0, #31, 21f60 <omp_target_disassociate_ptr@@OMP_4.5+0x160>
   21ea4:	mov	w0, w19
   21ea8:	ldp	x19, x20, [sp, #16]
   21eac:	ldp	x21, x22, [sp, #32]
   21eb0:	ldp	x29, x30, [sp], #112
   21eb4:	ret
   21eb8:	mov	w19, #0x16                  	// #22
   21ebc:	mov	w0, w19
   21ec0:	ldp	x19, x20, [sp, #16]
   21ec4:	ldp	x29, x30, [sp], #112
   21ec8:	ret
   21ecc:	ldr	x2, [sp, #56]
   21ed0:	mov	x1, x22
   21ed4:	mov	x0, x19
   21ed8:	sub	x2, x2, #0x1
   21edc:	str	x2, [sp, #56]
   21ee0:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   21ee4:	mov	x20, x0
   21ee8:	ldr	x1, [sp, #56]
   21eec:	add	x0, x1, #0x1
   21ef0:	str	x0, [sp, #56]
   21ef4:	cbnz	x20, 21e84 <omp_target_disassociate_ptr@@OMP_4.5+0x84>
   21ef8:	mov	x1, x22
   21efc:	mov	x0, x19
   21f00:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   21f04:	mov	x20, x0
   21f08:	cbz	x0, 21e90 <omp_target_disassociate_ptr@@OMP_4.5+0x90>
   21f0c:	b	21e80 <omp_target_disassociate_ptr@@OMP_4.5+0x80>
   21f10:	ldr	x0, [x20, #32]
   21f14:	cmn	x0, #0x1
   21f18:	b.ne	21e90 <omp_target_disassociate_ptr@@OMP_4.5+0x90>  // b.any
   21f1c:	ldr	x0, [x20, #16]
   21f20:	ldr	x1, [x0, #16]
   21f24:	cbnz	x1, 21e90 <omp_target_disassociate_ptr@@OMP_4.5+0x90>
   21f28:	ldr	x1, [x0, #32]
   21f2c:	cbnz	x1, 21e90 <omp_target_disassociate_ptr@@OMP_4.5+0x90>
   21f30:	ldr	x1, [x0]
   21f34:	cmp	x1, #0x1
   21f38:	b.ne	21e90 <omp_target_disassociate_ptr@@OMP_4.5+0x90>  // b.any
   21f3c:	ldr	x0, [x0, #48]
   21f40:	cbnz	x0, 21e90 <omp_target_disassociate_ptr@@OMP_4.5+0x90>
   21f44:	mov	x0, x19
   21f48:	mov	x1, x20
   21f4c:	bl	22268 <omp_pause_resource_all@@OMP_5.0+0x290>
   21f50:	mov	w19, #0x0                   	// #0
   21f54:	ldr	x0, [x20, #16]
   21f58:	bl	1cfe8 <omp_get_place_proc_ids@@OMP_4.5+0x6e8>
   21f5c:	b	21e94 <omp_target_disassociate_ptr@@OMP_4.5+0x94>
   21f60:	mov	x0, x21
   21f64:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   21f68:	ldp	x21, x22, [sp, #32]
   21f6c:	b	21ebc <omp_target_disassociate_ptr@@OMP_4.5+0xbc>
   21f70:	mov	x0, x21
   21f74:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   21f78:	b	21e50 <omp_target_disassociate_ptr@@OMP_4.5+0x50>
   21f7c:	nop

0000000000021f80 <omp_pause_resource@@OMP_5.0>:
   21f80:	cmn	w1, #0x2
   21f84:	b.eq	21fcc <omp_pause_resource@@OMP_5.0+0x4c>  // b.none
   21f88:	stp	x29, x30, [sp, #-32]!
   21f8c:	mov	x29, sp
   21f90:	stp	x19, x20, [sp, #16]
   21f94:	mov	w19, w1
   21f98:	tbnz	w1, #31, 21fd0 <omp_pause_resource@@OMP_5.0+0x50>
   21f9c:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   21fa0:	add	x20, x20, #0x568
   21fa4:	add	x0, x20, #0x14
   21fa8:	adrp	x1, 1c000 <omp_pause_resource_all_@@OMP_5.0+0x358>
   21fac:	add	x1, x1, #0xe30
   21fb0:	bl	8950 <pthread_once@plt>
   21fb4:	ldr	w0, [x20, #4]
   21fb8:	cmp	w19, w0
   21fbc:	csetm	w0, ge  // ge = tcont
   21fc0:	ldp	x19, x20, [sp, #16]
   21fc4:	ldp	x29, x30, [sp], #32
   21fc8:	ret
   21fcc:	b	19610 <omp_in_final@@OMP_3.1+0x15e8>
   21fd0:	mov	w0, #0xffffffff            	// #-1
   21fd4:	b	21fc0 <omp_pause_resource@@OMP_5.0+0x40>

0000000000021fd8 <omp_pause_resource_all@@OMP_5.0>:
   21fd8:	stp	x29, x30, [sp, #-16]!
   21fdc:	mov	x29, sp
   21fe0:	bl	19610 <omp_in_final@@OMP_3.1+0x15e8>
   21fe4:	cmp	w0, #0x0
   21fe8:	csetm	w0, ne  // ne = any
   21fec:	ldp	x29, x30, [sp], #16
   21ff0:	ret
   21ff4:	nop
   21ff8:	cbz	x0, 2204c <omp_pause_resource_all@@OMP_5.0+0x74>
   21ffc:	stp	x29, x30, [sp, #-48]!
   22000:	mov	x29, sp
   22004:	stp	x19, x20, [sp, #16]
   22008:	mov	x19, x0
   2200c:	mov	x20, x2
   22010:	str	x21, [sp, #32]
   22014:	mov	x21, x1
   22018:	mov	x0, x19
   2201c:	mov	x1, x20
   22020:	blr	x21
   22024:	ldr	x0, [x19, #56]
   22028:	mov	x2, x20
   2202c:	mov	x1, x21
   22030:	bl	21ff8 <omp_pause_resource_all@@OMP_5.0+0x20>
   22034:	ldr	x19, [x19, #64]
   22038:	cbnz	x19, 22018 <omp_pause_resource_all@@OMP_5.0+0x40>
   2203c:	ldp	x19, x20, [sp, #16]
   22040:	ldr	x21, [sp, #32]
   22044:	ldp	x29, x30, [sp], #48
   22048:	ret
   2204c:	ret
   22050:	ldr	x2, [x0]
   22054:	ldp	x4, x3, [x1]
   22058:	ldr	x5, [x2]
   2205c:	cmp	x4, x3
   22060:	b.eq	220c4 <omp_pause_resource_all@@OMP_5.0+0xec>  // b.none
   22064:	cmp	x3, x5
   22068:	b.ls	220d8 <omp_pause_resource_all@@OMP_5.0+0x100>  // b.plast
   2206c:	ldr	x1, [x2, #8]
   22070:	cmp	x4, x1
   22074:	b.cs	2207c <omp_pause_resource_all@@OMP_5.0+0xa4>  // b.hs, b.nlast
   22078:	ret
   2207c:	ldr	x1, [x2, #64]
   22080:	mov	w7, #0x1                   	// #1
   22084:	cbz	x1, 22078 <omp_pause_resource_all@@OMP_5.0+0xa0>
   22088:	cmp	x4, x3
   2208c:	ldr	x6, [x1]
   22090:	b.eq	220e4 <omp_pause_resource_all@@OMP_5.0+0x10c>  // b.none
   22094:	cmp	x3, x6
   22098:	b.ls	220f8 <omp_pause_resource_all@@OMP_5.0+0x120>  // b.plast
   2209c:	ldr	x6, [x1, #8]
   220a0:	cmp	x4, x6
   220a4:	b.cs	2214c <omp_pause_resource_all@@OMP_5.0+0x174>  // b.hs, b.nlast
   220a8:	cmn	w7, #0x1
   220ac:	b.eq	22188 <omp_pause_resource_all@@OMP_5.0+0x1b0>  // b.none
   220b0:	ldr	x3, [x1, #56]
   220b4:	str	x2, [x1, #56]
   220b8:	str	x3, [x2, #64]
   220bc:	str	x1, [x0]
   220c0:	ret
   220c4:	ldr	x1, [x2, #8]
   220c8:	cmp	x1, x5
   220cc:	b.eq	22078 <omp_pause_resource_all@@OMP_5.0+0xa0>  // b.none
   220d0:	cmp	x3, x5
   220d4:	b.hi	2206c <omp_pause_resource_all@@OMP_5.0+0x94>  // b.pmore
   220d8:	mov	w7, #0xffffffff            	// #-1
   220dc:	ldr	x1, [x2, #56]
   220e0:	b	22084 <omp_pause_resource_all@@OMP_5.0+0xac>
   220e4:	ldr	x8, [x1, #8]
   220e8:	cmp	x6, x8
   220ec:	b.eq	220a8 <omp_pause_resource_all@@OMP_5.0+0xd0>  // b.none
   220f0:	cmp	x3, x6
   220f4:	b.hi	2209c <omp_pause_resource_all@@OMP_5.0+0xc4>  // b.pmore
   220f8:	ldr	x6, [x1, #56]
   220fc:	cbz	x6, 220a8 <omp_pause_resource_all@@OMP_5.0+0xd0>
   22100:	cmn	w7, #0x1
   22104:	b.ne	22134 <omp_pause_resource_all@@OMP_5.0+0x15c>  // b.any
   22108:	ldr	x5, [x6, #64]
   2210c:	str	x1, [x6, #64]
   22110:	str	x5, [x1, #56]
   22114:	ldr	x5, [x6]
   22118:	str	x6, [x2, #56]
   2211c:	ldr	x1, [x6, #64]
   22120:	str	x2, [x6, #64]
   22124:	str	x1, [x2, #56]
   22128:	mov	x2, x6
   2212c:	str	x6, [x0]
   22130:	b	2205c <omp_pause_resource_all@@OMP_5.0+0x84>
   22134:	cmp	w7, #0x0
   22138:	b.le	2205c <omp_pause_resource_all@@OMP_5.0+0x84>
   2213c:	ldr	x5, [x6, #64]
   22140:	str	x1, [x6, #64]
   22144:	str	x5, [x1, #56]
   22148:	b	22168 <omp_pause_resource_all@@OMP_5.0+0x190>
   2214c:	ldr	x6, [x1, #64]
   22150:	cbz	x6, 220a8 <omp_pause_resource_all@@OMP_5.0+0xd0>
   22154:	cmp	w7, #0x1
   22158:	b.ne	2219c <omp_pause_resource_all@@OMP_5.0+0x1c4>  // b.any
   2215c:	ldr	x5, [x6, #56]
   22160:	str	x1, [x6, #56]
   22164:	str	x5, [x1, #64]
   22168:	ldr	x5, [x6]
   2216c:	str	x6, [x2, #64]
   22170:	ldr	x1, [x6, #56]
   22174:	str	x2, [x6, #56]
   22178:	str	x1, [x2, #64]
   2217c:	mov	x2, x6
   22180:	str	x6, [x0]
   22184:	b	2205c <omp_pause_resource_all@@OMP_5.0+0x84>
   22188:	ldr	x3, [x1, #64]
   2218c:	str	x2, [x1, #64]
   22190:	str	x3, [x2, #56]
   22194:	str	x1, [x0]
   22198:	ret
   2219c:	tbz	w7, #31, 2205c <omp_pause_resource_all@@OMP_5.0+0x84>
   221a0:	ldr	x5, [x6, #56]
   221a4:	str	x1, [x6, #56]
   221a8:	str	x5, [x1, #64]
   221ac:	b	22114 <omp_pause_resource_all@@OMP_5.0+0x13c>
   221b0:	ldr	x2, [x0]
   221b4:	mov	x10, x0
   221b8:	mov	x9, x1
   221bc:	cbz	x2, 22258 <omp_pause_resource_all@@OMP_5.0+0x280>
   221c0:	stp	x29, x30, [sp, #-16]!
   221c4:	mov	x29, sp
   221c8:	bl	22050 <omp_pause_resource_all@@OMP_5.0+0x78>
   221cc:	ldr	x0, [x0]
   221d0:	cbz	x0, 22248 <omp_pause_resource_all@@OMP_5.0+0x270>
   221d4:	ldp	x2, x1, [x0]
   221d8:	ldr	x3, [x9]
   221dc:	cmp	x2, x1
   221e0:	b.eq	22204 <omp_pause_resource_all@@OMP_5.0+0x22c>  // b.none
   221e4:	cmp	x1, x3
   221e8:	b.ls	22218 <omp_pause_resource_all@@OMP_5.0+0x240>  // b.plast
   221ec:	ldr	x1, [x9, #8]
   221f0:	cmp	x2, x1
   221f4:	b.cs	22230 <omp_pause_resource_all@@OMP_5.0+0x258>  // b.hs, b.nlast
   221f8:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   221fc:	add	x0, x0, #0x4b0
   22200:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   22204:	ldr	x4, [x9, #8]
   22208:	cmp	x3, x4
   2220c:	b.eq	221f8 <omp_pause_resource_all@@OMP_5.0+0x220>  // b.none
   22210:	cmp	x1, x3
   22214:	b.hi	221ec <omp_pause_resource_all@@OMP_5.0+0x214>  // b.pmore
   22218:	ldr	x1, [x0, #64]
   2221c:	stp	x0, x1, [x9, #56]
   22220:	str	xzr, [x0, #64]
   22224:	str	x9, [x10]
   22228:	ldp	x29, x30, [sp], #16
   2222c:	ret
   22230:	ldr	x1, [x0, #56]
   22234:	stp	x1, x0, [x9, #56]
   22238:	str	xzr, [x0, #56]
   2223c:	str	x9, [x10]
   22240:	ldp	x29, x30, [sp], #16
   22244:	ret
   22248:	stp	xzr, xzr, [x9, #56]
   2224c:	str	x9, [x10]
   22250:	ldp	x29, x30, [sp], #16
   22254:	ret
   22258:	stp	xzr, xzr, [x1, #56]
   2225c:	str	x1, [x10]
   22260:	ret
   22264:	nop
   22268:	ldr	x2, [x0]
   2226c:	cbz	x2, 222f0 <omp_pause_resource_all@@OMP_5.0+0x318>
   22270:	mov	x9, x0
   22274:	mov	x10, x1
   22278:	stp	x29, x30, [sp, #-16]!
   2227c:	mov	x29, sp
   22280:	bl	22050 <omp_pause_resource_all@@OMP_5.0+0x78>
   22284:	ldr	x0, [x0]
   22288:	cbz	x0, 222d0 <omp_pause_resource_all@@OMP_5.0+0x2f8>
   2228c:	ldp	x2, x1, [x0]
   22290:	ldr	x3, [x10]
   22294:	cmp	x2, x1
   22298:	b.eq	222d8 <omp_pause_resource_all@@OMP_5.0+0x300>  // b.none
   2229c:	cmp	x1, x3
   222a0:	b.ls	222d0 <omp_pause_resource_all@@OMP_5.0+0x2f8>  // b.plast
   222a4:	ldr	x1, [x10, #8]
   222a8:	cmp	x2, x1
   222ac:	b.cs	222d0 <omp_pause_resource_all@@OMP_5.0+0x2f8>  // b.hs, b.nlast
   222b0:	ldp	x1, x2, [x0, #56]
   222b4:	cbz	x1, 222f4 <omp_pause_resource_all@@OMP_5.0+0x31c>
   222b8:	str	x1, [x9]
   222bc:	cbz	x2, 222d0 <omp_pause_resource_all@@OMP_5.0+0x2f8>
   222c0:	mov	x0, x1
   222c4:	ldr	x1, [x1, #64]
   222c8:	cbnz	x1, 222c0 <omp_pause_resource_all@@OMP_5.0+0x2e8>
   222cc:	str	x2, [x0, #64]
   222d0:	ldp	x29, x30, [sp], #16
   222d4:	ret
   222d8:	ldr	x4, [x10, #8]
   222dc:	cmp	x3, x4
   222e0:	b.eq	222b0 <omp_pause_resource_all@@OMP_5.0+0x2d8>  // b.none
   222e4:	cmp	x1, x3
   222e8:	b.hi	222a4 <omp_pause_resource_all@@OMP_5.0+0x2cc>  // b.pmore
   222ec:	b	222d0 <omp_pause_resource_all@@OMP_5.0+0x2f8>
   222f0:	ret
   222f4:	str	x2, [x9]
   222f8:	b	222d0 <omp_pause_resource_all@@OMP_5.0+0x2f8>
   222fc:	nop
   22300:	ldr	x2, [x0]
   22304:	cbz	x2, 22368 <omp_pause_resource_all@@OMP_5.0+0x390>
   22308:	mov	x10, x1
   2230c:	stp	x29, x30, [sp, #-16]!
   22310:	mov	x29, sp
   22314:	bl	22050 <omp_pause_resource_all@@OMP_5.0+0x78>
   22318:	ldr	x0, [x0]
   2231c:	cbz	x0, 2234c <omp_pause_resource_all@@OMP_5.0+0x374>
   22320:	ldp	x2, x1, [x0]
   22324:	ldr	x3, [x10]
   22328:	cmp	x2, x1
   2232c:	b.eq	22358 <omp_pause_resource_all@@OMP_5.0+0x380>  // b.none
   22330:	cmp	x1, x3
   22334:	b.ls	2234c <omp_pause_resource_all@@OMP_5.0+0x374>  // b.plast
   22338:	ldr	x1, [x10, #8]
   2233c:	cmp	x2, x1
   22340:	b.cs	2234c <omp_pause_resource_all@@OMP_5.0+0x374>  // b.hs, b.nlast
   22344:	ldp	x29, x30, [sp], #16
   22348:	ret
   2234c:	mov	x0, #0x0                   	// #0
   22350:	ldp	x29, x30, [sp], #16
   22354:	ret
   22358:	ldr	x4, [x10, #8]
   2235c:	cmp	x3, x4
   22360:	b.ne	22330 <omp_pause_resource_all@@OMP_5.0+0x358>  // b.any
   22364:	b	22344 <omp_pause_resource_all@@OMP_5.0+0x36c>
   22368:	mov	x0, #0x0                   	// #0
   2236c:	ret
   22370:	ldr	x0, [x0]
   22374:	b	21ff8 <omp_pause_resource_all@@OMP_5.0+0x20>

0000000000022378 <GOMP_PLUGIN_malloc@@GOMP_PLUGIN_1.0>:
   22378:	b	b220 <fprintf@plt+0x2710>
   2237c:	nop

0000000000022380 <GOMP_PLUGIN_malloc_cleared@@GOMP_PLUGIN_1.0>:
   22380:	b	b258 <fprintf@plt+0x2748>
   22384:	nop

0000000000022388 <GOMP_PLUGIN_realloc@@GOMP_PLUGIN_1.0>:
   22388:	b	b298 <fprintf@plt+0x2788>
   2238c:	nop

0000000000022390 <GOMP_PLUGIN_debug@@GOMP_PLUGIN_1.0>:
   22390:	stp	x29, x30, [sp, #-256]!
   22394:	adrp	x8, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   22398:	mov	w10, #0xffffffd0            	// #-48
   2239c:	mov	x29, sp
   223a0:	ldr	w8, [x8, #1536]
   223a4:	add	x11, sp, #0xd0
   223a8:	mov	w9, #0xffffff80            	// #-128
   223ac:	str	x11, [sp, #64]
   223b0:	stp	w10, w9, [sp, #72]
   223b4:	str	q0, [sp, #80]
   223b8:	str	q1, [sp, #96]
   223bc:	str	q2, [sp, #112]
   223c0:	str	q3, [sp, #128]
   223c4:	str	q4, [sp, #144]
   223c8:	str	q5, [sp, #160]
   223cc:	str	q6, [sp, #176]
   223d0:	str	q7, [sp, #192]
   223d4:	stp	x2, x3, [sp, #208]
   223d8:	add	x2, sp, #0x100
   223dc:	stp	x2, x2, [sp, #48]
   223e0:	stp	x4, x5, [sp, #224]
   223e4:	stp	x6, x7, [sp, #240]
   223e8:	cbnz	w8, 223f4 <GOMP_PLUGIN_debug@@GOMP_PLUGIN_1.0+0x64>
   223ec:	ldp	x29, x30, [sp], #256
   223f0:	ret
   223f4:	ldp	x6, x7, [sp, #48]
   223f8:	add	x2, sp, #0x10
   223fc:	ldp	x4, x5, [sp, #64]
   22400:	stp	x6, x7, [sp, #16]
   22404:	stp	x4, x5, [sp, #32]
   22408:	bl	b448 <GOMP_critical_name_end@@GOMP_1.0+0x20>
   2240c:	ldp	x29, x30, [sp], #256
   22410:	ret
   22414:	nop

0000000000022418 <GOMP_PLUGIN_error@@GOMP_PLUGIN_1.0>:
   22418:	stp	x29, x30, [sp, #-272]!
   2241c:	mov	w9, #0xffffffc8            	// #-56
   22420:	mov	w8, #0xffffff80            	// #-128
   22424:	mov	x29, sp
   22428:	add	x10, sp, #0xd0
   2242c:	add	x11, sp, #0x110
   22430:	stp	x11, x11, [sp, #48]
   22434:	str	x10, [sp, #64]
   22438:	stp	w9, w8, [sp, #72]
   2243c:	ldp	x10, x11, [sp, #48]
   22440:	stp	x10, x11, [sp, #16]
   22444:	ldp	x8, x9, [sp, #64]
   22448:	stp	x8, x9, [sp, #32]
   2244c:	str	q0, [sp, #80]
   22450:	str	q1, [sp, #96]
   22454:	str	q2, [sp, #112]
   22458:	str	q3, [sp, #128]
   2245c:	str	q4, [sp, #144]
   22460:	str	q5, [sp, #160]
   22464:	str	q6, [sp, #176]
   22468:	str	q7, [sp, #192]
   2246c:	stp	x1, x2, [sp, #216]
   22470:	add	x1, sp, #0x10
   22474:	stp	x3, x4, [sp, #232]
   22478:	stp	x5, x6, [sp, #248]
   2247c:	str	x7, [sp, #264]
   22480:	bl	b528 <GOMP_critical_name_end@@GOMP_1.0+0x100>
   22484:	ldp	x29, x30, [sp], #272
   22488:	ret
   2248c:	nop

0000000000022490 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0>:
   22490:	stp	x29, x30, [sp, #-272]!
   22494:	mov	w9, #0xffffffc8            	// #-56
   22498:	mov	w8, #0xffffff80            	// #-128
   2249c:	mov	x29, sp
   224a0:	add	x10, sp, #0xd0
   224a4:	add	x11, sp, #0x110
   224a8:	stp	x11, x11, [sp, #48]
   224ac:	str	x10, [sp, #64]
   224b0:	stp	w9, w8, [sp, #72]
   224b4:	ldp	x10, x11, [sp, #48]
   224b8:	stp	x10, x11, [sp, #16]
   224bc:	ldp	x8, x9, [sp, #64]
   224c0:	stp	x8, x9, [sp, #32]
   224c4:	str	q0, [sp, #80]
   224c8:	str	q1, [sp, #96]
   224cc:	str	q2, [sp, #112]
   224d0:	str	q3, [sp, #128]
   224d4:	str	q4, [sp, #144]
   224d8:	str	q5, [sp, #160]
   224dc:	str	q6, [sp, #176]
   224e0:	str	q7, [sp, #192]
   224e4:	stp	x1, x2, [sp, #216]
   224e8:	add	x1, sp, #0x10
   224ec:	stp	x3, x4, [sp, #232]
   224f0:	stp	x5, x6, [sp, #248]
   224f4:	str	x7, [sp, #264]
   224f8:	bl	b610 <GOMP_critical_name_end@@GOMP_1.0+0x1e8>
   224fc:	nop
   22500:	cbz	w1, 225f8 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x168>
   22504:	stp	x29, x30, [sp, #-48]!
   22508:	mov	x29, sp
   2250c:	stp	x19, x20, [sp, #16]
   22510:	mov	x20, x2
   22514:	stp	x21, x22, [sp, #32]
   22518:	mov	w22, w0
   2251c:	mov	w21, w1
   22520:	b	2256c <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xdc>
   22524:	add	x2, x1, #0xb
   22528:	and	x2, x2, #0xfffffffffffffff8
   2252c:	str	x2, [x20]
   22530:	ldr	w19, [x1]
   22534:	cmn	w19, #0x1
   22538:	b.eq	225a0 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x110>  // b.none
   2253c:	mov	w0, w19
   22540:	bl	8770 <acc_async_test@plt>
   22544:	cbnz	w0, 22564 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xd4>
   22548:	cmn	w22, #0x2
   2254c:	b.eq	225c8 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x138>  // b.none
   22550:	cmp	w19, w22
   22554:	b.eq	22564 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xd4>  // b.none
   22558:	mov	w0, w19
   2255c:	mov	w1, w22
   22560:	bl	8720 <acc_wait_async@plt>
   22564:	subs	w21, w21, #0x1
   22568:	b.eq	225d8 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x148>  // b.none
   2256c:	ldr	w2, [x20, #24]
   22570:	ldr	x1, [x20]
   22574:	tbz	w2, #31, 22524 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x94>
   22578:	add	w0, w2, #0x8
   2257c:	str	w0, [x20, #24]
   22580:	cmp	w0, #0x0
   22584:	b.le	225bc <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x12c>
   22588:	add	x0, x1, #0xb
   2258c:	ldr	w19, [x1]
   22590:	and	x0, x0, #0xfffffffffffffff8
   22594:	str	x0, [x20]
   22598:	cmn	w19, #0x1
   2259c:	b.ne	2253c <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xac>  // b.any
   225a0:	cmn	w22, #0x2
   225a4:	b.eq	225e8 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x158>  // b.none
   225a8:	mov	w0, w22
   225ac:	ldp	x19, x20, [sp, #16]
   225b0:	ldp	x21, x22, [sp, #32]
   225b4:	ldp	x29, x30, [sp], #48
   225b8:	b	88d0 <acc_wait_all_async@plt>
   225bc:	ldr	x1, [x20, #8]
   225c0:	add	x1, x1, w2, sxtw
   225c4:	b	22530 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xa0>
   225c8:	mov	w0, w19
   225cc:	bl	8990 <acc_wait@plt>
   225d0:	subs	w21, w21, #0x1
   225d4:	b.ne	2256c <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xdc>  // b.any
   225d8:	ldp	x19, x20, [sp, #16]
   225dc:	ldp	x21, x22, [sp, #32]
   225e0:	ldp	x29, x30, [sp], #48
   225e4:	ret
   225e8:	ldp	x19, x20, [sp, #16]
   225ec:	ldp	x21, x22, [sp, #32]
   225f0:	ldp	x29, x30, [sp], #48
   225f4:	b	8620 <acc_wait_all@plt>
   225f8:	ret
   225fc:	nop

0000000000022600 <GOACC_parallel_keyed@@GOACC_2.0.1>:
   22600:	stp	x29, x30, [sp, #-352]!
   22604:	adrp	x8, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   22608:	mov	x29, sp
   2260c:	ldr	w8, [x8, #1536]
   22610:	stp	x19, x20, [sp, #16]
   22614:	mvn	w19, w0
   22618:	mov	x20, x5
   2261c:	stp	x21, x22, [sp, #32]
   22620:	mov	x22, x3
   22624:	stp	x23, x24, [sp, #48]
   22628:	mov	x23, x4
   2262c:	stp	x25, x26, [sp, #64]
   22630:	mov	x25, x1
   22634:	stp	x27, x28, [sp, #80]
   22638:	mov	x27, x2
   2263c:	str	q0, [x29, #208]
   22640:	str	q1, [x29, #224]
   22644:	str	q2, [x29, #240]
   22648:	str	q3, [x29, #256]
   2264c:	str	q4, [x29, #272]
   22650:	str	q5, [x29, #288]
   22654:	str	q6, [x29, #304]
   22658:	str	q7, [x29, #320]
   2265c:	stp	x6, x7, [x29, #336]
   22660:	cbnz	w8, 22b0c <GOACC_parallel_keyed@@GOACC_2.0.1+0x50c>
   22664:	bl	24738 <acc_on_device@@OACC_2.0+0xd0>
   22668:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   2266c:	ldr	x0, [x0, #4048]
   22670:	mrs	x3, tpidr_el0
   22674:	sub	w5, w27, #0x1
   22678:	mov	x2, #0x1                   	// #1
   2267c:	mov	x1, #0x0                   	// #0
   22680:	mov	x6, #0x8                   	// #8
   22684:	ldr	x0, [x3, x0]
   22688:	ldr	x24, [x0, #8]
   2268c:	cbnz	x27, 226a4 <GOACC_parallel_keyed@@GOACC_2.0.1+0xa4>
   22690:	b	226e0 <GOACC_parallel_keyed@@GOACC_2.0.1+0xe0>
   22694:	add	x1, x1, #0x1
   22698:	add	x2, x2, #0x1
   2269c:	cmp	x27, x1
   226a0:	b.eq	226e0 <GOACC_parallel_keyed@@GOACC_2.0.1+0xe0>  // b.none
   226a4:	ldrh	w3, [x20, x1, lsl #1]
   226a8:	and	w0, w3, #0xff
   226ac:	cmp	w0, #0x8
   226b0:	b.ne	22694 <GOACC_parallel_keyed@@GOACC_2.0.1+0x94>  // b.any
   226b4:	cmp	w5, w1
   226b8:	ldr	x0, [x23, x1, lsl #3]
   226bc:	b.gt	228fc <GOACC_parallel_keyed@@GOACC_2.0.1+0x2fc>
   226c0:	cmp	x0, #0x8
   226c4:	b.eq	22694 <GOACC_parallel_keyed@@GOACC_2.0.1+0x94>  // b.none
   226c8:	add	x0, x22, x1, lsl #3
   226cc:	str	xzr, [x0]
   226d0:	add	x1, x1, #0x1
   226d4:	add	x2, x2, #0x1
   226d8:	cmp	x27, x1
   226dc:	b.ne	226a4 <GOACC_parallel_keyed@@GOACC_2.0.1+0xa4>  // b.any
   226e0:	tbnz	w19, #0, 22a98 <GOACC_parallel_keyed@@GOACC_2.0.1+0x498>
   226e4:	ldr	w0, [x24, #16]
   226e8:	cmp	w0, #0x2
   226ec:	b.eq	22acc <GOACC_parallel_keyed@@GOACC_2.0.1+0x4cc>  // b.none
   226f0:	mov	w2, #0xfffffff0            	// #-16
   226f4:	add	x26, x29, #0x78
   226f8:	mov	w1, w2
   226fc:	add	x21, x29, #0x68
   22700:	add	x4, x29, #0x150
   22704:	add	x0, x29, #0x160
   22708:	mov	w3, #0xffffff80            	// #-128
   2270c:	mov	w28, #0xfffffffe            	// #-2
   22710:	str	xzr, [x29, #104]
   22714:	str	wzr, [x29, #112]
   22718:	stp	x0, x0, [x29, #120]
   2271c:	str	x4, [x29, #136]
   22720:	stp	w2, w3, [x29, #144]
   22724:	nop
   22728:	tbnz	w1, #31, 22778 <GOACC_parallel_keyed@@GOACC_2.0.1+0x178>
   2272c:	ldr	w19, [x0]
   22730:	add	x1, x0, #0xb
   22734:	and	x1, x1, #0xfffffffffffffff8
   22738:	str	x1, [x29, #120]
   2273c:	cbz	w19, 22798 <GOACC_parallel_keyed@@GOACC_2.0.1+0x198>
   22740:	ubfx	x1, x19, #16, #12
   22744:	cbnz	w1, 22b44 <GOACC_parallel_keyed@@GOACC_2.0.1+0x544>
   22748:	lsr	w1, w19, #28
   2274c:	cmp	w1, #0x2
   22750:	b.eq	22958 <GOACC_parallel_keyed@@GOACC_2.0.1+0x358>  // b.none
   22754:	cmp	w1, #0x3
   22758:	b.ne	22944 <GOACC_parallel_keyed@@GOACC_2.0.1+0x344>  // b.any
   2275c:	and	w1, w19, #0xffff
   22760:	mov	w0, w28
   22764:	mov	x2, x26
   22768:	bl	22500 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x70>
   2276c:	ldr	w1, [x29, #144]
   22770:	ldr	x0, [x29, #120]
   22774:	tbz	w1, #31, 2272c <GOACC_parallel_keyed@@GOACC_2.0.1+0x12c>
   22778:	add	w2, w1, #0x8
   2277c:	str	w2, [x29, #144]
   22780:	cmp	w2, #0x0
   22784:	b.gt	2272c <GOACC_parallel_keyed@@GOACC_2.0.1+0x12c>
   22788:	ldr	x0, [x29, #128]
   2278c:	add	x0, x0, w1, sxtw
   22790:	ldr	w19, [x0]
   22794:	cbnz	w19, 22740 <GOACC_parallel_keyed@@GOACC_2.0.1+0x140>
   22798:	ldr	x1, [x24, #248]
   2279c:	mov	w0, w28
   227a0:	blr	x1
   227a4:	ldr	w0, [x24, #8]
   227a8:	tbnz	w0, #1, 227fc <GOACC_parallel_keyed@@GOACC_2.0.1+0x1fc>
   227ac:	add	x0, x25, #0x1
   227b0:	add	x21, x24, #0xa8
   227b4:	stp	x25, x0, [x29, #152]
   227b8:	mov	w0, #0x1                   	// #1
   227bc:	ldaxr	w1, [x21]
   227c0:	cbnz	w1, 227cc <GOACC_parallel_keyed@@GOACC_2.0.1+0x1cc>
   227c4:	stxr	w2, w0, [x21]
   227c8:	cbnz	w2, 227bc <GOACC_parallel_keyed@@GOACC_2.0.1+0x1bc>
   227cc:	cmp	w1, #0x0
   227d0:	b.ne	22b5c <GOACC_parallel_keyed@@GOACC_2.0.1+0x55c>  // b.any
   227d4:	add	x1, x29, #0x98
   227d8:	add	x0, x24, #0xa0
   227dc:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   227e0:	mov	x25, x0
   227e4:	ldxr	w0, [x21]
   227e8:	stlxr	w1, wzr, [x21]
   227ec:	cbnz	w1, 227e4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1e4>
   227f0:	tbnz	w0, #31, 22b38 <GOACC_parallel_keyed@@GOACC_2.0.1+0x538>
   227f4:	cbz	x25, 22b50 <GOACC_parallel_keyed@@GOACC_2.0.1+0x550>
   227f8:	ldr	x25, [x25, #24]
   227fc:	mov	x5, x20
   22800:	mov	x2, x22
   22804:	mov	x1, x27
   22808:	mov	x3, #0x0                   	// #0
   2280c:	mov	x4, x23
   22810:	mov	x0, x24
   22814:	mov	w7, #0x0                   	// #0
   22818:	mov	w6, #0x1                   	// #1
   2281c:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   22820:	lsl	x1, x27, #3
   22824:	mov	x20, x0
   22828:	add	x1, x1, #0xf
   2282c:	mov	x5, #0x0                   	// #0
   22830:	and	x1, x1, #0xfffffffffffffff0
   22834:	mov	x2, #0x0                   	// #0
   22838:	sub	sp, sp, x1
   2283c:	mov	x3, sp
   22840:	cbz	x27, 2287c <GOACC_parallel_keyed@@GOACC_2.0.1+0x27c>
   22844:	nop
   22848:	add	x4, x20, x2, lsl #5
   2284c:	add	w2, w19, #0x1
   22850:	mov	x19, x2
   22854:	cmp	x2, x27
   22858:	ldr	x7, [x4, #80]
   2285c:	ldr	x4, [x4, #64]
   22860:	ldp	x8, x1, [x4, #16]
   22864:	ldr	x4, [x8, #16]
   22868:	add	x1, x1, x7
   2286c:	add	x1, x1, x4
   22870:	str	x1, [x3, x5, lsl #3]
   22874:	mov	x5, x2
   22878:	b.cc	22848 <GOACC_parallel_keyed@@GOACC_2.0.1+0x248>  // b.lo, b.ul, b.last
   2287c:	ldr	x7, [x24, #184]
   22880:	mov	x0, x25
   22884:	mov	x2, x22
   22888:	mov	x1, x27
   2288c:	mov	x6, x20
   22890:	add	x5, x29, #0x68
   22894:	mov	w4, w28
   22898:	blr	x7
   2289c:	add	w0, w28, #0x2
   228a0:	cmp	w28, #0x0
   228a4:	ccmp	w0, #0x1, #0x0, lt  // lt = tstop
   228a8:	b.hi	22a60 <GOACC_parallel_keyed@@GOACC_2.0.1+0x460>  // b.pmore
   228ac:	cmn	w28, #0x2
   228b0:	b.eq	22a60 <GOACC_parallel_keyed@@GOACC_2.0.1+0x460>  // b.none
   228b4:	ldr	x3, [x20, #48]
   228b8:	add	x4, x20, #0x40
   228bc:	mov	x1, #0x0                   	// #0
   228c0:	cbz	x3, 228ec <GOACC_parallel_keyed@@GOACC_2.0.1+0x2ec>
   228c4:	nop
   228c8:	lsl	x0, x1, #5
   228cc:	ldr	x2, [x4, x0]
   228d0:	cbz	x2, 228e0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2e0>
   228d4:	ldr	x0, [x2, #32]
   228d8:	cmp	x0, #0x1
   228dc:	b.eq	22af4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x4f4>  // b.none
   228e0:	add	x1, x1, #0x1
   228e4:	cmp	x1, x3
   228e8:	b.ne	228c8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2c8>  // b.any
   228ec:	mov	x0, x20
   228f0:	mov	w1, #0x0                   	// #0
   228f4:	bl	1fb38 <omp_get_place_proc_ids@@OMP_4.5+0x3238>
   228f8:	b	22a6c <GOACC_parallel_keyed@@GOACC_2.0.1+0x46c>
   228fc:	ldrh	w4, [x20, x2, lsl #1]
   22900:	cmp	x0, #0x8
   22904:	and	w4, w4, #0xff
   22908:	b.eq	22694 <GOACC_parallel_keyed@@GOACC_2.0.1+0x94>  // b.none
   2290c:	cmp	w4, #0x4
   22910:	add	x0, x22, x1, lsl #3
   22914:	b.ne	226cc <GOACC_parallel_keyed@@GOACC_2.0.1+0xcc>  // b.any
   22918:	ldr	x4, [x23, x2, lsl #3]
   2291c:	cbnz	x4, 226cc <GOACC_parallel_keyed@@GOACC_2.0.1+0xcc>
   22920:	ldr	x4, [x22, x2, lsl #3]
   22924:	ldr	x7, [x22, x1, lsl #3]
   22928:	ldr	x4, [x4]
   2292c:	cmp	x7, x4
   22930:	b.ne	226cc <GOACC_parallel_keyed@@GOACC_2.0.1+0xcc>  // b.any
   22934:	strh	w3, [x20, x2, lsl #1]
   22938:	str	x6, [x23, x2, lsl #3]
   2293c:	str	xzr, [x0]
   22940:	b	226d0 <GOACC_parallel_keyed@@GOACC_2.0.1+0xd0>
   22944:	cmp	w1, #0x1
   22948:	b.eq	2298c <GOACC_parallel_keyed@@GOACC_2.0.1+0x38c>  // b.none
   2294c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22950:	add	x0, x0, #0x530
   22954:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   22958:	mov	w0, #0xffff                	// #65535
   2295c:	ldr	w1, [x29, #144]
   22960:	and	w28, w19, w0
   22964:	cmp	w0, w19, uxth
   22968:	ldr	x0, [x29, #120]
   2296c:	b.ne	22728 <GOACC_parallel_keyed@@GOACC_2.0.1+0x128>  // b.any
   22970:	tbnz	w1, #31, 22a1c <GOACC_parallel_keyed@@GOACC_2.0.1+0x41c>
   22974:	mov	x3, x0
   22978:	add	x2, x0, #0xb
   2297c:	and	x0, x2, #0xfffffffffffffff8
   22980:	str	x0, [x29, #120]
   22984:	ldr	w28, [x3]
   22988:	b	22728 <GOACC_parallel_keyed@@GOACC_2.0.1+0x128>
   2298c:	ldp	x5, x7, [x29, #120]
   22990:	and	w19, w19, #0xffff
   22994:	ldr	w1, [x29, #144]
   22998:	mov	x6, #0x0                   	// #0
   2299c:	mov	w2, #0x0                   	// #0
   229a0:	mov	x0, x5
   229a4:	lsr	w3, w19, w6
   229a8:	tbz	w3, #0, 229c8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x3c8>
   229ac:	tbnz	w1, #31, 229e0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x3e0>
   229b0:	add	x4, x0, #0xb
   229b4:	mov	x3, x0
   229b8:	and	x0, x4, #0xfffffffffffffff8
   229bc:	mov	w2, #0x1                   	// #1
   229c0:	ldr	w3, [x3]
   229c4:	str	w3, [x21, x6, lsl #2]
   229c8:	add	x6, x6, #0x1
   229cc:	cmp	x6, #0x3
   229d0:	b.ne	229a4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x3a4>  // b.any
   229d4:	cbz	w2, 22a08 <GOACC_parallel_keyed@@GOACC_2.0.1+0x408>
   229d8:	str	x0, [x29, #120]
   229dc:	b	22728 <GOACC_parallel_keyed@@GOACC_2.0.1+0x128>
   229e0:	add	w4, w1, #0x8
   229e4:	str	w4, [x29, #144]
   229e8:	cmp	w4, #0x0
   229ec:	b.le	22a10 <GOACC_parallel_keyed@@GOACC_2.0.1+0x410>
   229f0:	add	x8, x0, #0xb
   229f4:	mov	x3, x0
   229f8:	mov	w1, w4
   229fc:	and	x0, x8, #0xfffffffffffffff8
   22a00:	mov	w2, #0x1                   	// #1
   22a04:	b	229c0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x3c0>
   22a08:	mov	x0, x5
   22a0c:	b	22728 <GOACC_parallel_keyed@@GOACC_2.0.1+0x128>
   22a10:	add	x3, x7, w1, sxtw
   22a14:	mov	w1, w4
   22a18:	b	229c0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x3c0>
   22a1c:	add	w2, w1, #0x8
   22a20:	str	w2, [x29, #144]
   22a24:	cmp	w2, #0x0
   22a28:	b.le	22a4c <GOACC_parallel_keyed@@GOACC_2.0.1+0x44c>
   22a2c:	add	x3, x0, #0xb
   22a30:	mov	w1, w2
   22a34:	and	x2, x3, #0xfffffffffffffff8
   22a38:	mov	x3, x0
   22a3c:	mov	x0, x2
   22a40:	str	x2, [x29, #120]
   22a44:	ldr	w28, [x3]
   22a48:	b	22728 <GOACC_parallel_keyed@@GOACC_2.0.1+0x128>
   22a4c:	ldr	x3, [x29, #128]
   22a50:	add	x3, x3, w1, sxtw
   22a54:	mov	w1, w2
   22a58:	ldr	w28, [x3]
   22a5c:	b	22728 <GOACC_parallel_keyed@@GOACC_2.0.1+0x128>
   22a60:	mov	x0, x20
   22a64:	mov	w1, #0x1                   	// #1
   22a68:	bl	1fb38 <omp_get_place_proc_ids@@OMP_4.5+0x3238>
   22a6c:	ldr	x1, [x24, #248]
   22a70:	mov	w0, #0xfffffffe            	// #-2
   22a74:	blr	x1
   22a78:	mov	sp, x29
   22a7c:	ldp	x19, x20, [sp, #16]
   22a80:	ldp	x21, x22, [sp, #32]
   22a84:	ldp	x23, x24, [sp, #48]
   22a88:	ldp	x25, x26, [sp, #64]
   22a8c:	ldp	x27, x28, [sp, #80]
   22a90:	ldp	x29, x30, [sp], #352
   22a94:	ret
   22a98:	mov	w0, #0x2                   	// #2
   22a9c:	bl	246b8 <acc_on_device@@OACC_2.0+0x50>
   22aa0:	mov	x0, x22
   22aa4:	blr	x25
   22aa8:	bl	24718 <acc_on_device@@OACC_2.0+0xb0>
   22aac:	mov	sp, x29
   22ab0:	ldp	x19, x20, [sp, #16]
   22ab4:	ldp	x21, x22, [sp, #32]
   22ab8:	ldp	x23, x24, [sp, #48]
   22abc:	ldp	x25, x26, [sp, #64]
   22ac0:	ldp	x27, x28, [sp, #80]
   22ac4:	ldp	x29, x30, [sp], #352
   22ac8:	ret
   22acc:	mov	x0, x22
   22ad0:	blr	x25
   22ad4:	mov	sp, x29
   22ad8:	ldp	x19, x20, [sp, #16]
   22adc:	ldp	x21, x22, [sp, #32]
   22ae0:	ldp	x23, x24, [sp, #48]
   22ae4:	ldp	x25, x26, [sp, #64]
   22ae8:	ldp	x27, x28, [sp, #80]
   22aec:	ldp	x29, x30, [sp], #352
   22af0:	ret
   22af4:	ldr	x2, [x20, #56]
   22af8:	mov	w1, w28
   22afc:	mov	x0, x20
   22b00:	ldr	x2, [x2, #192]
   22b04:	blr	x2
   22b08:	b	22a6c <GOACC_parallel_keyed@@GOACC_2.0.1+0x46c>
   22b0c:	mov	x6, x5
   22b10:	adrp	x2, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22b14:	mov	x5, x4
   22b18:	add	x2, x2, #0x6a0
   22b1c:	mov	x4, x3
   22b20:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22b24:	mov	x3, x27
   22b28:	add	x1, x1, #0x4c0
   22b2c:	mov	w0, #0x0                   	// #0
   22b30:	bl	b490 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   22b34:	b	22664 <GOACC_parallel_keyed@@GOACC_2.0.1+0x64>
   22b38:	mov	x0, x21
   22b3c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   22b40:	b	227f4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1f4>
   22b44:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22b48:	add	x0, x0, #0x4f8
   22b4c:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   22b50:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22b54:	add	x0, x0, #0x568
   22b58:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   22b5c:	mov	x0, x21
   22b60:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   22b64:	b	227d4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1d4>

0000000000022b68 <GOACC_parallel@@GOACC_2.0>:
   22b68:	stp	x29, x30, [sp, #-32]!
   22b6c:	mov	w0, #0x2                   	// #2
   22b70:	mov	x29, sp
   22b74:	stp	x19, x20, [sp, #16]
   22b78:	mov	x20, x3
   22b7c:	mov	x19, x1
   22b80:	bl	246b8 <acc_on_device@@OACC_2.0+0x50>
   22b84:	mov	x0, x20
   22b88:	blr	x19
   22b8c:	bl	24718 <acc_on_device@@OACC_2.0+0xb0>
   22b90:	ldp	x19, x20, [sp, #16]
   22b94:	ldp	x29, x30, [sp], #32
   22b98:	ret
   22b9c:	nop

0000000000022ba0 <GOACC_data_start@@GOACC_2.0>:
   22ba0:	stp	x29, x30, [sp, #-80]!
   22ba4:	mov	x29, sp
   22ba8:	stp	x25, x26, [sp, #64]
   22bac:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   22bb0:	ldr	w5, [x25, #1536]
   22bb4:	stp	x19, x20, [sp, #16]
   22bb8:	mvn	w19, w0
   22bbc:	stp	x21, x22, [sp, #32]
   22bc0:	mov	x21, x1
   22bc4:	mov	x22, x2
   22bc8:	stp	x23, x24, [sp, #48]
   22bcc:	mov	x23, x3
   22bd0:	mov	x24, x4
   22bd4:	cbnz	w5, 22ce0 <GOACC_data_start@@GOACC_2.0+0x140>
   22bd8:	bl	24738 <acc_on_device@@OACC_2.0+0xd0>
   22bdc:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   22be0:	ldr	x0, [x0, #4048]
   22be4:	mrs	x1, tpidr_el0
   22be8:	ldr	x20, [x1, x0]
   22bec:	ldr	x26, [x20, #8]
   22bf0:	ldr	w0, [x26, #8]
   22bf4:	orr	w19, w19, w0
   22bf8:	tbnz	w19, #0, 22c58 <GOACC_data_start@@GOACC_2.0+0xb8>
   22bfc:	ldr	w0, [x25, #1536]
   22c00:	cbnz	w0, 22cc0 <GOACC_data_start@@GOACC_2.0+0x120>
   22c04:	mov	x1, x21
   22c08:	mov	x5, x24
   22c0c:	mov	x4, x23
   22c10:	mov	x2, x22
   22c14:	mov	x0, x26
   22c18:	mov	w7, #0x0                   	// #0
   22c1c:	mov	w6, #0x1                   	// #1
   22c20:	mov	x3, #0x0                   	// #0
   22c24:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   22c28:	mov	x19, x0
   22c2c:	ldr	w1, [x25, #1536]
   22c30:	cbnz	w1, 22ca0 <GOACC_data_start@@GOACC_2.0+0x100>
   22c34:	ldr	x0, [x20, #24]
   22c38:	str	x0, [x19, #40]
   22c3c:	str	x19, [x20, #24]
   22c40:	ldp	x19, x20, [sp, #16]
   22c44:	ldp	x21, x22, [sp, #32]
   22c48:	ldp	x23, x24, [sp, #48]
   22c4c:	ldp	x25, x26, [sp, #64]
   22c50:	ldp	x29, x30, [sp], #80
   22c54:	ret
   22c58:	mov	w7, #0x0                   	// #0
   22c5c:	mov	w6, #0x1                   	// #1
   22c60:	mov	x5, #0x0                   	// #0
   22c64:	mov	x4, #0x0                   	// #0
   22c68:	mov	x3, #0x0                   	// #0
   22c6c:	mov	x2, #0x0                   	// #0
   22c70:	mov	x1, #0x0                   	// #0
   22c74:	mov	x0, #0x0                   	// #0
   22c78:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   22c7c:	ldr	x1, [x20, #24]
   22c80:	str	x1, [x0, #40]
   22c84:	str	x0, [x20, #24]
   22c88:	ldp	x19, x20, [sp, #16]
   22c8c:	ldp	x21, x22, [sp, #32]
   22c90:	ldp	x23, x24, [sp, #48]
   22c94:	ldp	x25, x26, [sp, #64]
   22c98:	ldp	x29, x30, [sp], #80
   22c9c:	ret
   22ca0:	adrp	x2, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22ca4:	add	x2, x2, #0x6a0
   22ca8:	add	x2, x2, #0x18
   22cac:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22cb0:	mov	w0, #0x0                   	// #0
   22cb4:	add	x1, x1, #0x5a0
   22cb8:	bl	b490 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   22cbc:	b	22c34 <GOACC_data_start@@GOACC_2.0+0x94>
   22cc0:	adrp	x2, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22cc4:	add	x2, x2, #0x6a0
   22cc8:	add	x2, x2, #0x18
   22ccc:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22cd0:	mov	w0, #0x0                   	// #0
   22cd4:	add	x1, x1, #0x588
   22cd8:	bl	b490 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   22cdc:	b	22c04 <GOACC_data_start@@GOACC_2.0+0x64>
   22ce0:	adrp	x2, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22ce4:	add	x2, x2, #0x6a0
   22ce8:	mov	x6, x4
   22cec:	mov	x5, x3
   22cf0:	add	x2, x2, #0x18
   22cf4:	mov	x4, x22
   22cf8:	mov	x3, x21
   22cfc:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22d00:	mov	w0, #0x0                   	// #0
   22d04:	add	x1, x1, #0x4c0
   22d08:	bl	b490 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   22d0c:	b	22bd8 <GOACC_data_start@@GOACC_2.0+0x38>

0000000000022d10 <GOACC_data_end@@GOACC_2.0>:
   22d10:	stp	x29, x30, [sp, #-48]!
   22d14:	mrs	x1, tpidr_el0
   22d18:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   22d1c:	ldr	x0, [x0, #4048]
   22d20:	mov	x29, sp
   22d24:	stp	x19, x20, [sp, #16]
   22d28:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   22d2c:	ldr	w2, [x19, #1536]
   22d30:	str	x21, [sp, #32]
   22d34:	ldr	x21, [x1, x0]
   22d38:	ldr	x20, [x21, #24]
   22d3c:	cbnz	w2, 22d6c <GOACC_data_end@@GOACC_2.0+0x5c>
   22d40:	ldr	x0, [x20, #40]
   22d44:	str	x0, [x21, #24]
   22d48:	mov	w1, #0x1                   	// #1
   22d4c:	mov	x0, x20
   22d50:	bl	1fb38 <omp_get_place_proc_ids@@OMP_4.5+0x3238>
   22d54:	ldr	w0, [x19, #1536]
   22d58:	cbnz	w0, 22da4 <GOACC_data_end@@GOACC_2.0+0x94>
   22d5c:	ldp	x19, x20, [sp, #16]
   22d60:	ldr	x21, [sp, #32]
   22d64:	ldp	x29, x30, [sp], #48
   22d68:	ret
   22d6c:	adrp	x2, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22d70:	add	x2, x2, #0x6a0
   22d74:	add	x2, x2, #0x30
   22d78:	mov	w0, #0x0                   	// #0
   22d7c:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22d80:	add	x1, x1, #0x5c0
   22d84:	bl	b490 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   22d88:	ldr	x0, [x20, #40]
   22d8c:	str	x0, [x21, #24]
   22d90:	mov	w1, #0x1                   	// #1
   22d94:	mov	x0, x20
   22d98:	bl	1fb38 <omp_get_place_proc_ids@@OMP_4.5+0x3238>
   22d9c:	ldr	w0, [x19, #1536]
   22da0:	cbz	w0, 22d5c <GOACC_data_end@@GOACC_2.0+0x4c>
   22da4:	ldp	x19, x20, [sp, #16]
   22da8:	adrp	x2, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22dac:	ldr	x21, [sp, #32]
   22db0:	add	x2, x2, #0x6a0
   22db4:	ldp	x29, x30, [sp], #48
   22db8:	add	x2, x2, #0x30
   22dbc:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   22dc0:	mov	w0, #0x0                   	// #0
   22dc4:	add	x1, x1, #0x5d8
   22dc8:	b	b490 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   22dcc:	nop

0000000000022dd0 <GOACC_enter_exit_data@@GOACC_2.0>:
   22dd0:	stp	x29, x30, [sp, #-256]!
   22dd4:	mov	x29, sp
   22dd8:	stp	x19, x20, [sp, #16]
   22ddc:	mov	w19, w0
   22de0:	mov	x20, x1
   22de4:	stp	x21, x22, [sp, #32]
   22de8:	mov	x21, x2
   22dec:	mov	x22, x3
   22df0:	stp	x23, x24, [sp, #48]
   22df4:	mov	x24, x4
   22df8:	stp	x25, x26, [sp, #64]
   22dfc:	mov	w25, w5
   22e00:	mov	w26, w6
   22e04:	str	q0, [sp, #112]
   22e08:	str	q1, [sp, #128]
   22e0c:	str	q2, [sp, #144]
   22e10:	str	q3, [sp, #160]
   22e14:	str	q4, [sp, #176]
   22e18:	str	q5, [sp, #192]
   22e1c:	str	q6, [sp, #208]
   22e20:	str	q7, [sp, #224]
   22e24:	str	x7, [sp, #248]
   22e28:	bl	24738 <acc_on_device@@OACC_2.0+0xd0>
   22e2c:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   22e30:	ldr	x0, [x0, #4048]
   22e34:	mrs	x1, tpidr_el0
   22e38:	ldr	x0, [x1, x0]
   22e3c:	ldr	x23, [x0, #8]
   22e40:	ldr	w0, [x23, #8]
   22e44:	orn	w0, w0, w19
   22e48:	tbnz	w0, #0, 22e6c <GOACC_enter_exit_data@@GOACC_2.0+0x9c>
   22e4c:	cbnz	w26, 2302c <GOACC_enter_exit_data@@GOACC_2.0+0x25c>
   22e50:	ldr	x1, [x23, #248]
   22e54:	cbnz	x20, 22e84 <GOACC_enter_exit_data@@GOACC_2.0+0xb4>
   22e58:	mov	w0, w25
   22e5c:	blr	x1
   22e60:	ldr	x1, [x23, #248]
   22e64:	mov	w0, #0xfffffffe            	// #-2
   22e68:	blr	x1
   22e6c:	ldp	x19, x20, [sp, #16]
   22e70:	ldp	x21, x22, [sp, #32]
   22e74:	ldp	x23, x24, [sp, #48]
   22e78:	ldp	x25, x26, [sp, #64]
   22e7c:	ldp	x29, x30, [sp], #256
   22e80:	ret
   22e84:	ldrh	w26, [x24]
   22e88:	mov	w0, w25
   22e8c:	blr	x1
   22e90:	mov	x2, #0x0                   	// #0
   22e94:	ldrh	w1, [x24, x2, lsl #1]
   22e98:	and	w1, w1, #0xff
   22e9c:	sub	w0, w1, #0x4
   22ea0:	and	w0, w0, #0xff
   22ea4:	cmp	w0, #0x1
   22ea8:	b.ls	23078 <GOACC_enter_exit_data@@GOACC_2.0+0x2a8>  // b.plast
   22eac:	cmp	w1, #0x6
   22eb0:	b.eq	23024 <GOACC_enter_exit_data@@GOACC_2.0+0x254>  // b.none
   22eb4:	tst	w1, #0x7e
   22eb8:	mov	x19, #0x0                   	// #0
   22ebc:	b.eq	22f90 <GOACC_enter_exit_data@@GOACC_2.0+0x1c0>  // b.none
   22ec0:	and	w0, w1, #0xffffffef
   22ec4:	cmp	w0, #0x7
   22ec8:	b.ne	230cc <GOACC_enter_exit_data@@GOACC_2.0+0x2fc>  // b.any
   22ecc:	and	w0, w26, #0xff
   22ed0:	mov	x19, #0x0                   	// #0
   22ed4:	cmp	w0, #0x7
   22ed8:	cset	w26, eq  // eq = none
   22edc:	cmp	w0, #0x82
   22ee0:	csinc	w26, w26, wzr, ne  // ne = any
   22ee4:	b	22f0c <GOACC_enter_exit_data@@GOACC_2.0+0x13c>
   22ee8:	ldr	x0, [x21, x19, lsl #3]
   22eec:	ldr	x1, [x22, x19, lsl #3]
   22ef0:	cbz	w26, 23070 <GOACC_enter_exit_data@@GOACC_2.0+0x2a0>
   22ef4:	nop
   22ef8:	bl	8650 <acc_copyout_finalize@plt>
   22efc:	nop
   22f00:	add	x19, x19, #0x1
   22f04:	cmp	x20, x19
   22f08:	b.ls	22e60 <GOACC_enter_exit_data@@GOACC_2.0+0x90>  // b.plast
   22f0c:	ldrh	w1, [x24, x19, lsl #1]
   22f10:	add	w0, w19, #0x1
   22f14:	and	w1, w1, #0xff
   22f18:	cmp	x20, w0, sxtw
   22f1c:	b.ls	22f38 <GOACC_enter_exit_data@@GOACC_2.0+0x168>  // b.plast
   22f20:	add	x0, x24, w19, sxtw #1
   22f24:	ldrb	w0, [x0, #2]
   22f28:	cmp	w0, #0x5
   22f2c:	b.eq	23090 <GOACC_enter_exit_data@@GOACC_2.0+0x2c0>  // b.none
   22f30:	cmp	w0, #0x4
   22f34:	b.eq	230c0 <GOACC_enter_exit_data@@GOACC_2.0+0x2f0>  // b.none
   22f38:	cmp	w1, #0x17
   22f3c:	b.eq	22f54 <GOACC_enter_exit_data@@GOACC_2.0+0x184>  // b.none
   22f40:	b.hi	2305c <GOACC_enter_exit_data@@GOACC_2.0+0x28c>  // b.pmore
   22f44:	cmp	w1, #0x2
   22f48:	b.eq	22ee8 <GOACC_enter_exit_data@@GOACC_2.0+0x118>  // b.none
   22f4c:	cmp	w1, #0x7
   22f50:	b.ne	230d8 <GOACC_enter_exit_data@@GOACC_2.0+0x308>  // b.any
   22f54:	ldr	x1, [x22, x19, lsl #3]
   22f58:	ldr	x0, [x21, x19, lsl #3]
   22f5c:	bl	87f0 <acc_is_present@plt>
   22f60:	cbz	w0, 22f00 <GOACC_enter_exit_data@@GOACC_2.0+0x130>
   22f64:	ldr	x0, [x21, x19, lsl #3]
   22f68:	ldr	x1, [x22, x19, lsl #3]
   22f6c:	cbz	w26, 23088 <GOACC_enter_exit_data@@GOACC_2.0+0x2b8>
   22f70:	bl	86e0 <acc_delete_finalize@plt>
   22f74:	b	22f00 <GOACC_enter_exit_data@@GOACC_2.0+0x130>
   22f78:	ldr	x1, [x22, x19, lsl #3]
   22f7c:	ldr	x0, [x21, x19, lsl #3]
   22f80:	bl	8700 <acc_create@plt>
   22f84:	add	x19, x19, #0x1
   22f88:	cmp	x20, x19
   22f8c:	b.ls	22e60 <GOACC_enter_exit_data@@GOACC_2.0+0x90>  // b.plast
   22f90:	lsl	x0, x19, #1
   22f94:	add	w5, w19, #0x1
   22f98:	add	x3, x24, x0
   22f9c:	cmp	x20, w5, sxtw
   22fa0:	ldrb	w0, [x24, x0]
   22fa4:	b.ls	22fc0 <GOACC_enter_exit_data@@GOACC_2.0+0x1f0>  // b.plast
   22fa8:	add	x1, x24, w19, sxtw #1
   22fac:	ldrb	w1, [x1, #2]
   22fb0:	cmp	w1, #0x5
   22fb4:	b.eq	22ff8 <GOACC_enter_exit_data@@GOACC_2.0+0x228>  // b.none
   22fb8:	cmp	w1, #0x4
   22fbc:	b.eq	23018 <GOACC_enter_exit_data@@GOACC_2.0+0x248>  // b.none
   22fc0:	cmp	w0, #0x80
   22fc4:	b.eq	22f78 <GOACC_enter_exit_data@@GOACC_2.0+0x1a8>  // b.none
   22fc8:	b.hi	22fe8 <GOACC_enter_exit_data@@GOACC_2.0+0x218>  // b.pmore
   22fcc:	cbz	w0, 22f78 <GOACC_enter_exit_data@@GOACC_2.0+0x1a8>
   22fd0:	cmp	w0, #0x1
   22fd4:	b.ne	22ff0 <GOACC_enter_exit_data@@GOACC_2.0+0x220>  // b.any
   22fd8:	ldr	x1, [x22, x19, lsl #3]
   22fdc:	ldr	x0, [x21, x19, lsl #3]
   22fe0:	bl	86d0 <acc_copyin@plt>
   22fe4:	b	22f84 <GOACC_enter_exit_data@@GOACC_2.0+0x1b4>
   22fe8:	cmp	w0, #0x81
   22fec:	b.eq	22fd8 <GOACC_enter_exit_data@@GOACC_2.0+0x208>  // b.none
   22ff0:	mov	w1, w0
   22ff4:	b	230d8 <GOACC_enter_exit_data@@GOACC_2.0+0x308>
   22ff8:	mov	x2, #0x2                   	// #2
   22ffc:	mov	x0, #0x3                   	// #3
   23000:	lsl	x1, x19, #3
   23004:	add	x19, x19, x2
   23008:	add	x2, x22, x1
   2300c:	add	x1, x21, x1
   23010:	bl	259b0 <acc_update_self_async@@OACC_2.5+0x18>
   23014:	b	22f84 <GOACC_enter_exit_data@@GOACC_2.0+0x1b4>
   23018:	mov	x2, #0x1                   	// #1
   2301c:	mov	x0, #0x2                   	// #2
   23020:	b	23000 <GOACC_enter_exit_data@@GOACC_2.0+0x230>
   23024:	mov	x19, #0x0                   	// #0
   23028:	b	22f90 <GOACC_enter_exit_data@@GOACC_2.0+0x1c0>
   2302c:	add	x5, sp, #0xf0
   23030:	add	x6, sp, #0x100
   23034:	mov	w4, #0xfffffff8            	// #-8
   23038:	mov	w3, #0xffffff80            	// #-128
   2303c:	mov	w1, w26
   23040:	add	x2, sp, #0x50
   23044:	mov	w0, w25
   23048:	stp	x6, x6, [sp, #80]
   2304c:	str	x5, [sp, #96]
   23050:	stp	w4, w3, [sp, #104]
   23054:	bl	22500 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x70>
   23058:	b	22e50 <GOACC_enter_exit_data@@GOACC_2.0+0x80>
   2305c:	cmp	w1, #0x82
   23060:	b.ne	230d8 <GOACC_enter_exit_data@@GOACC_2.0+0x308>  // b.any
   23064:	ldr	x0, [x21, x19, lsl #3]
   23068:	ldr	x1, [x22, x19, lsl #3]
   2306c:	cbnz	w26, 22ef8 <GOACC_enter_exit_data@@GOACC_2.0+0x128>
   23070:	bl	8980 <acc_copyout@plt>
   23074:	b	22f00 <GOACC_enter_exit_data@@GOACC_2.0+0x130>
   23078:	add	x2, x2, #0x1
   2307c:	cmp	x20, x2
   23080:	b.ne	22e94 <GOACC_enter_exit_data@@GOACC_2.0+0xc4>  // b.any
   23084:	b	22ecc <GOACC_enter_exit_data@@GOACC_2.0+0xfc>
   23088:	bl	8910 <acc_delete@plt>
   2308c:	b	22f00 <GOACC_enter_exit_data@@GOACC_2.0+0x130>
   23090:	mov	x2, #0x2                   	// #2
   23094:	mov	w5, #0x3                   	// #3
   23098:	and	w0, w1, #0x7f
   2309c:	mov	w4, w26
   230a0:	cmp	w0, #0x2
   230a4:	mov	w3, w25
   230a8:	ldr	x1, [x22, x19, lsl #3]
   230ac:	ldr	x0, [x21, x19, lsl #3]
   230b0:	add	x19, x19, x2
   230b4:	cset	w2, eq  // eq = none
   230b8:	bl	25be8 <acc_update_self_async@@OACC_2.5+0x250>
   230bc:	b	22f00 <GOACC_enter_exit_data@@GOACC_2.0+0x130>
   230c0:	mov	x2, #0x1                   	// #1
   230c4:	mov	w5, #0x2                   	// #2
   230c8:	b	23098 <GOACC_enter_exit_data@@GOACC_2.0+0x2c8>
   230cc:	and	w0, w1, #0x7f
   230d0:	cmp	w0, #0x2
   230d4:	b.eq	22ecc <GOACC_enter_exit_data@@GOACC_2.0+0xfc>  // b.none
   230d8:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   230dc:	add	x0, x0, #0x5f8
   230e0:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   230e4:	nop

00000000000230e8 <GOACC_update@@GOACC_2.0>:
   230e8:	stp	x29, x30, [sp, #-256]!
   230ec:	mov	x29, sp
   230f0:	stp	x19, x20, [sp, #16]
   230f4:	mov	w19, w0
   230f8:	mov	x20, x2
   230fc:	stp	x21, x22, [sp, #32]
   23100:	mov	x21, x1
   23104:	mov	x22, x4
   23108:	stp	x23, x24, [sp, #48]
   2310c:	mov	x23, x3
   23110:	stp	x25, x26, [sp, #64]
   23114:	mov	w25, w5
   23118:	mov	w26, w6
   2311c:	str	q0, [sp, #112]
   23120:	str	q1, [sp, #128]
   23124:	str	q2, [sp, #144]
   23128:	str	q3, [sp, #160]
   2312c:	str	q4, [sp, #176]
   23130:	str	q5, [sp, #192]
   23134:	str	q6, [sp, #208]
   23138:	str	q7, [sp, #224]
   2313c:	str	x7, [sp, #248]
   23140:	bl	24738 <acc_on_device@@OACC_2.0+0xd0>
   23144:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   23148:	ldr	x0, [x0, #4048]
   2314c:	mrs	x1, tpidr_el0
   23150:	ldr	x0, [x1, x0]
   23154:	ldr	x24, [x0, #8]
   23158:	ldr	w0, [x24, #8]
   2315c:	orn	w0, w0, w19
   23160:	tbnz	w0, #0, 231fc <GOACC_update@@GOACC_2.0+0x114>
   23164:	cbnz	w26, 232a8 <GOACC_update@@GOACC_2.0+0x1c0>
   23168:	ldr	x1, [x24, #248]
   2316c:	mov	w0, w25
   23170:	mov	x19, #0x0                   	// #0
   23174:	blr	x1
   23178:	mov	w1, #0x0                   	// #0
   2317c:	cbnz	x21, 231b0 <GOACC_update@@GOACC_2.0+0xc8>
   23180:	b	231f0 <GOACC_update@@GOACC_2.0+0x108>
   23184:	cmp	w0, #0x2
   23188:	b.eq	2328c <GOACC_update@@GOACC_2.0+0x1a4>  // b.none
   2318c:	b.ls	23214 <GOACC_update@@GOACC_2.0+0x12c>  // b.plast
   23190:	sub	w2, w0, #0x4
   23194:	and	w2, w2, #0xff
   23198:	cmp	w2, #0x1
   2319c:	b.hi	232d8 <GOACC_update@@GOACC_2.0+0x1f0>  // b.pmore
   231a0:	add	x19, x19, #0x1
   231a4:	add	x20, x20, #0x8
   231a8:	cmp	x21, x19
   231ac:	b.eq	231f0 <GOACC_update@@GOACC_2.0+0x108>  // b.none
   231b0:	ldrh	w0, [x22, x19, lsl #1]
   231b4:	and	w0, w0, #0xff
   231b8:	cmp	w0, #0x1d
   231bc:	b.eq	23258 <GOACC_update@@GOACC_2.0+0x170>  // b.none
   231c0:	b.ls	23184 <GOACC_update@@GOACC_2.0+0x9c>  // b.plast
   231c4:	cmp	w0, #0x81
   231c8:	b.ne	23238 <GOACC_update@@GOACC_2.0+0x150>  // b.any
   231cc:	add	x25, x23, x19, lsl #3
   231d0:	ldr	x0, [x20]
   231d4:	add	x19, x19, #0x1
   231d8:	ldr	x1, [x25]
   231dc:	add	x20, x20, #0x8
   231e0:	bl	8b00 <acc_update_device@plt>
   231e4:	cmp	x21, x19
   231e8:	mov	w1, #0x1                   	// #1
   231ec:	b.ne	231b0 <GOACC_update@@GOACC_2.0+0xc8>  // b.any
   231f0:	ldr	x1, [x24, #248]
   231f4:	mov	w0, #0xfffffffe            	// #-2
   231f8:	blr	x1
   231fc:	ldp	x19, x20, [sp, #16]
   23200:	ldp	x21, x22, [sp, #32]
   23204:	ldp	x23, x24, [sp, #48]
   23208:	ldp	x25, x26, [sp, #64]
   2320c:	ldp	x29, x30, [sp], #256
   23210:	ret
   23214:	cmp	w0, #0x1
   23218:	b.ne	232d8 <GOACC_update@@GOACC_2.0+0x1f0>  // b.any
   2321c:	ldr	x1, [x23, x19, lsl #3]
   23220:	add	x25, x23, x19, lsl #3
   23224:	ldr	x0, [x20]
   23228:	bl	87f0 <acc_is_present@plt>
   2322c:	cbnz	w0, 231d0 <GOACC_update@@GOACC_2.0+0xe8>
   23230:	mov	w1, #0x0                   	// #0
   23234:	b	231a0 <GOACC_update@@GOACC_2.0+0xb8>
   23238:	cmp	w0, #0x82
   2323c:	b.ne	232d8 <GOACC_update@@GOACC_2.0+0x1f0>  // b.any
   23240:	add	x25, x23, x19, lsl #3
   23244:	ldr	x1, [x25]
   23248:	ldr	x0, [x20]
   2324c:	bl	89f0 <acc_update_self@plt>
   23250:	mov	w1, #0x0                   	// #0
   23254:	b	231a0 <GOACC_update@@GOACC_2.0+0xb8>
   23258:	cbz	w1, 23230 <GOACC_update@@GOACC_2.0+0x148>
   2325c:	ldur	x0, [x20, #-8]
   23260:	bl	88e0 <acc_deviceptr@plt>
   23264:	mov	x2, x0
   23268:	ldr	x0, [x20]
   2326c:	mov	x1, #0x8                   	// #8
   23270:	ldr	x25, [x0]
   23274:	str	x2, [x0]
   23278:	bl	8b00 <acc_update_device@plt>
   2327c:	ldr	x0, [x20]
   23280:	mov	w1, #0x0                   	// #0
   23284:	str	x25, [x0]
   23288:	b	231a0 <GOACC_update@@GOACC_2.0+0xb8>
   2328c:	ldr	x1, [x23, x19, lsl #3]
   23290:	add	x25, x23, x19, lsl #3
   23294:	ldr	x0, [x20]
   23298:	bl	87f0 <acc_is_present@plt>
   2329c:	cbnz	w0, 23244 <GOACC_update@@GOACC_2.0+0x15c>
   232a0:	mov	w1, #0x0                   	// #0
   232a4:	b	231a0 <GOACC_update@@GOACC_2.0+0xb8>
   232a8:	add	x5, sp, #0xf0
   232ac:	add	x6, sp, #0x100
   232b0:	mov	w4, #0xfffffff8            	// #-8
   232b4:	mov	w3, #0xffffff80            	// #-128
   232b8:	mov	w1, w26
   232bc:	add	x2, sp, #0x50
   232c0:	mov	w0, w25
   232c4:	stp	x6, x6, [sp, #80]
   232c8:	str	x5, [sp, #96]
   232cc:	stp	w4, w3, [sp, #104]
   232d0:	bl	22500 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x70>
   232d4:	b	23168 <GOACC_update@@GOACC_2.0+0x80>
   232d8:	mov	w1, w0
   232dc:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   232e0:	add	x0, x0, #0x630
   232e4:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>

00000000000232e8 <GOACC_wait@@GOACC_2.0>:
   232e8:	stp	x29, x30, [sp, #-224]!
   232ec:	mov	x29, sp
   232f0:	str	q0, [sp, #48]
   232f4:	str	q1, [sp, #64]
   232f8:	str	q2, [sp, #80]
   232fc:	str	q3, [sp, #96]
   23300:	str	q4, [sp, #112]
   23304:	str	q5, [sp, #128]
   23308:	str	q6, [sp, #144]
   2330c:	str	q7, [sp, #160]
   23310:	stp	x2, x3, [sp, #176]
   23314:	stp	x4, x5, [sp, #192]
   23318:	stp	x6, x7, [sp, #208]
   2331c:	cbnz	w1, 23340 <GOACC_wait@@GOACC_2.0+0x58>
   23320:	cmn	w0, #0x2
   23324:	b.eq	23334 <GOACC_wait@@GOACC_2.0+0x4c>  // b.none
   23328:	bl	88d0 <acc_wait_all_async@plt>
   2332c:	ldp	x29, x30, [sp], #224
   23330:	ret
   23334:	bl	8620 <acc_wait_all@plt>
   23338:	ldp	x29, x30, [sp], #224
   2333c:	ret
   23340:	add	x5, sp, #0xb0
   23344:	add	x6, sp, #0xe0
   23348:	mov	w4, #0xffffffd0            	// #-48
   2334c:	mov	w3, #0xffffff80            	// #-128
   23350:	add	x2, sp, #0x10
   23354:	stp	x6, x6, [sp, #16]
   23358:	str	x5, [sp, #32]
   2335c:	stp	w4, w3, [sp, #40]
   23360:	bl	22500 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x70>
   23364:	ldp	x29, x30, [sp], #224
   23368:	ret
   2336c:	nop

0000000000023370 <GOACC_get_num_threads@@GOACC_2.0>:
   23370:	mov	w0, #0x1                   	// #1
   23374:	ret

0000000000023378 <GOACC_get_thread_num@@GOACC_2.0>:
   23378:	mov	w0, #0x0                   	// #0
   2337c:	ret

0000000000023380 <GOACC_declare@@GOACC_2.0.1>:
   23380:	cbz	x1, 234e0 <GOACC_declare@@GOACC_2.0.1+0x160>
   23384:	stp	x29, x30, [sp, #-80]!
   23388:	mov	x29, sp
   2338c:	stp	x19, x20, [sp, #16]
   23390:	mov	x20, x1
   23394:	mov	x19, #0x0                   	// #0
   23398:	stp	x21, x22, [sp, #32]
   2339c:	mov	x21, x2
   233a0:	mov	x22, x3
   233a4:	stp	x23, x24, [sp, #48]
   233a8:	mov	w23, w0
   233ac:	mov	x24, x4
   233b0:	stp	x25, x26, [sp, #64]
   233b4:	b	233ec <GOACC_declare@@GOACC_2.0.1+0x6c>
   233b8:	lsl	x2, x19, #3
   233bc:	mov	w6, #0x0                   	// #0
   233c0:	add	x3, x22, x2
   233c4:	add	x2, x21, x2
   233c8:	mov	x4, x24
   233cc:	mov	w0, w23
   233d0:	mov	w5, #0xfffffffe            	// #-2
   233d4:	mov	x1, #0x1                   	// #1
   233d8:	bl	8a20 <GOACC_enter_exit_data@plt>
   233dc:	add	x19, x19, #0x1
   233e0:	add	x24, x24, #0x2
   233e4:	cmp	x19, x20
   233e8:	b.eq	234c8 <GOACC_declare@@GOACC_2.0.1+0x148>  // b.none
   233ec:	ldrb	w5, [x24]
   233f0:	sub	w6, w5, #0x4
   233f4:	and	w6, w6, #0xff
   233f8:	cmp	w6, #0x1
   233fc:	b.ls	233dc <GOACC_declare@@GOACC_2.0.1+0x5c>  // b.plast
   23400:	cmp	w5, #0x2
   23404:	b.eq	233b8 <GOACC_declare@@GOACC_2.0.1+0x38>  // b.none
   23408:	b.ls	2348c <GOACC_declare@@GOACC_2.0.1+0x10c>  // b.plast
   2340c:	cmp	w5, #0x8
   23410:	b.eq	233dc <GOACC_declare@@GOACC_2.0.1+0x5c>  // b.none
   23414:	b.ls	23454 <GOACC_declare@@GOACC_2.0.1+0xd4>  // b.plast
   23418:	cmp	w5, #0x17
   2341c:	b.eq	233b8 <GOACC_declare@@GOACC_2.0.1+0x38>  // b.none
   23420:	sub	w5, w5, #0x80
   23424:	and	w5, w5, #0xff
   23428:	cmp	w5, #0x2
   2342c:	b.ls	233b8 <GOACC_declare@@GOACC_2.0.1+0x38>  // b.plast
   23430:	adrp	x3, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23434:	add	x3, x3, #0x6a0
   23438:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   2343c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23440:	add	x3, x3, #0x40
   23444:	add	x1, x1, #0x670
   23448:	add	x0, x0, #0x698
   2344c:	mov	w2, #0x2cc                 	// #716
   23450:	bl	8ab0 <__assert_fail@plt>
   23454:	cmp	w5, #0x6
   23458:	b.ne	234bc <GOACC_declare@@GOACC_2.0.1+0x13c>  // b.any
   2345c:	ldr	x1, [x22, x19, lsl #3]
   23460:	lsl	x2, x19, #3
   23464:	ldr	x0, [x21, x19, lsl #3]
   23468:	add	x26, x21, x2
   2346c:	add	x25, x22, x2
   23470:	bl	87f0 <acc_is_present@plt>
   23474:	cbnz	w0, 233dc <GOACC_declare@@GOACC_2.0.1+0x5c>
   23478:	ldr	x2, [x25]
   2347c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23480:	ldr	x1, [x26]
   23484:	add	x0, x0, #0x658
   23488:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   2348c:	cbnz	w5, 233b8 <GOACC_declare@@GOACC_2.0.1+0x38>
   23490:	ldr	x1, [x22, x19, lsl #3]
   23494:	lsl	x3, x19, #3
   23498:	ldr	x0, [x21, x19, lsl #3]
   2349c:	add	x26, x21, x3
   234a0:	add	x25, x22, x3
   234a4:	bl	87f0 <acc_is_present@plt>
   234a8:	cbnz	w0, 233dc <GOACC_declare@@GOACC_2.0.1+0x5c>
   234ac:	mov	x3, x25
   234b0:	mov	x2, x26
   234b4:	mov	w6, #0x0                   	// #0
   234b8:	b	233c8 <GOACC_declare@@GOACC_2.0.1+0x48>
   234bc:	cmp	w5, #0x7
   234c0:	b.eq	233b8 <GOACC_declare@@GOACC_2.0.1+0x38>  // b.none
   234c4:	b	23430 <GOACC_declare@@GOACC_2.0.1+0xb0>
   234c8:	ldp	x19, x20, [sp, #16]
   234cc:	ldp	x21, x22, [sp, #32]
   234d0:	ldp	x23, x24, [sp, #48]
   234d4:	ldp	x25, x26, [sp, #64]
   234d8:	ldp	x29, x30, [sp], #80
   234dc:	ret
   234e0:	ret
   234e4:	nop
   234e8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   234ec:	ldr	x0, [x0, #840]
   234f0:	ret
   234f4:	nop
   234f8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   234fc:	ldr	w0, [x0, #848]
   23500:	ret
   23504:	nop
   23508:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   2350c:	ldr	w0, [x0, #856]
   23510:	ret
   23514:	nop
   23518:	mov	w0, #0x1                   	// #1
   2351c:	ret
   23520:	mov	w0, #0x1                   	// #1
   23524:	ret
   23528:	mov	w0, #0x1                   	// #1
   2352c:	ret
   23530:	mov	w0, #0x0                   	// #0
   23534:	ret
   23538:	mov	w0, #0x1                   	// #1
   2353c:	ret
   23540:	mov	w0, #0x1                   	// #1
   23544:	ret
   23548:	mov	x0, x2
   2354c:	mov	x16, x1
   23550:	br	x16
   23554:	nop
   23558:	mov	x16, x0
   2355c:	mov	x0, x2
   23560:	br	x16
   23564:	nop
   23568:	ret
   2356c:	nop
   23570:	mov	w0, #0x1                   	// #1
   23574:	ret
   23578:	ret
   2357c:	nop
   23580:	ret
   23584:	nop
   23588:	ret
   2358c:	nop
   23590:	mov	x0, #0x0                   	// #0
   23594:	ret
   23598:	ret
   2359c:	nop
   235a0:	stp	x29, x30, [sp, #-16]!
   235a4:	mov	x0, x1
   235a8:	mov	x29, sp
   235ac:	bl	8900 <free@plt>
   235b0:	mov	w0, #0x1                   	// #1
   235b4:	ldp	x29, x30, [sp], #16
   235b8:	ret
   235bc:	nop
   235c0:	mov	x0, x1
   235c4:	b	b220 <fprintf@plt+0x2710>
   235c8:	mov	w0, #0x1                   	// #1
   235cc:	ret
   235d0:	mov	w0, #0x1                   	// #1
   235d4:	ret
   235d8:	ret
   235dc:	nop
   235e0:	mov	w0, #0x1                   	// #1
   235e4:	ret
   235e8:	ret
   235ec:	nop
   235f0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   235f4:	add	x0, x0, #0x348
   235f8:	str	wzr, [x0, #168]
   235fc:	b	23a20 <GOACC_declare@@GOACC_2.0.1+0x6a0>
   23600:	mov	x1, x0
   23604:	ldxr	w2, [x1]
   23608:	stlxr	w3, wzr, [x1]
   2360c:	cbnz	w3, 23604 <GOACC_declare@@GOACC_2.0.1+0x284>
   23610:	tbnz	w2, #31, 23618 <GOACC_declare@@GOACC_2.0.1+0x298>
   23614:	ret
   23618:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   2361c:	nop
   23620:	cmp	w0, #0x2
   23624:	b.eq	23678 <GOACC_declare@@GOACC_2.0.1+0x2f8>  // b.none
   23628:	b.gt	23644 <GOACC_declare@@GOACC_2.0.1+0x2c4>
   2362c:	cbz	w0, 23660 <GOACC_declare@@GOACC_2.0.1+0x2e0>
   23630:	cmp	w0, #0x1
   23634:	b.ne	23684 <GOACC_declare@@GOACC_2.0.1+0x304>  // b.any
   23638:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   2363c:	add	x0, x0, #0x708
   23640:	ret
   23644:	cmp	w0, #0x4
   23648:	b.eq	2366c <GOACC_declare@@GOACC_2.0.1+0x2ec>  // b.none
   2364c:	cmp	w0, #0x5
   23650:	b.ne	23684 <GOACC_declare@@GOACC_2.0.1+0x304>  // b.any
   23654:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23658:	add	x0, x0, #0x710
   2365c:	ret
   23660:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23664:	add	x0, x0, #0x700
   23668:	ret
   2366c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23670:	add	x0, x0, #0x6f0
   23674:	ret
   23678:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   2367c:	add	x0, x0, #0x8c8
   23680:	ret
   23684:	stp	x29, x30, [sp, #-16]!
   23688:	mov	w1, w0
   2368c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23690:	mov	x29, sp
   23694:	add	x0, x0, #0x718
   23698:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   2369c:	nop
   236a0:	stp	x29, x30, [sp, #-16]!
   236a4:	mov	x29, sp
   236a8:	cbnz	w2, 236c0 <GOACC_declare@@GOACC_2.0.1+0x340>
   236ac:	bl	23620 <GOACC_declare@@GOACC_2.0.1+0x2a0>
   236b0:	mov	x1, x0
   236b4:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   236b8:	add	x0, x0, #0x730
   236bc:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   236c0:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   236c4:	add	x0, x0, #0x750
   236c8:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   236cc:	nop
   236d0:	stp	x29, x30, [sp, #-112]!
   236d4:	and	w1, w1, #0xff
   236d8:	cmp	w0, #0x2
   236dc:	mov	x29, sp
   236e0:	stp	x19, x20, [sp, #16]
   236e4:	mov	w20, w0
   236e8:	stp	x25, x26, [sp, #64]
   236ec:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   236f0:	str	w1, [sp, #108]
   236f4:	b.eq	23778 <GOACC_declare@@GOACC_2.0.1+0x3f8>  // b.none
   236f8:	cmp	w0, #0x4
   236fc:	b.eq	23748 <GOACC_declare@@GOACC_2.0.1+0x3c8>  // b.none
   23700:	cmp	w0, #0x1
   23704:	b.eq	23730 <GOACC_declare@@GOACC_2.0.1+0x3b0>  // b.none
   23708:	cmp	w0, #0x6
   2370c:	b.le	23884 <GOACC_declare@@GOACC_2.0.1+0x504>
   23710:	ldr	w0, [sp, #108]
   23714:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   23718:	cbnz	w0, 2378c <GOACC_declare@@GOACC_2.0.1+0x40c>
   2371c:	mov	x0, #0x0                   	// #0
   23720:	ldp	x19, x20, [sp, #16]
   23724:	ldp	x25, x26, [sp, #64]
   23728:	ldp	x29, x30, [sp], #112
   2372c:	ret
   23730:	stp	x27, x28, [sp, #80]
   23734:	adrp	x28, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   23738:	ldr	x0, [x28, #1512]
   2373c:	cbnz	x0, 237bc <GOACC_declare@@GOACC_2.0.1+0x43c>
   23740:	ldp	x27, x28, [sp, #80]
   23744:	nop
   23748:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   2374c:	add	x0, x25, #0x590
   23750:	ldr	x0, [x0, #40]
   23754:	cbz	x0, 23768 <GOACC_declare@@GOACC_2.0.1+0x3e8>
   23758:	ldr	x0, [x0, #48]
   2375c:	blr	x0
   23760:	cmp	w0, #0x0
   23764:	b.gt	238c0 <GOACC_declare@@GOACC_2.0.1+0x540>
   23768:	cmp	w20, #0x1
   2376c:	b.ne	2384c <GOACC_declare@@GOACC_2.0.1+0x4cc>  // b.any
   23770:	mov	w20, #0x2                   	// #2
   23774:	nop
   23778:	add	x0, x25, #0x590
   2377c:	ldr	x0, [x0, w20, sxtw #3]
   23780:	cbnz	x0, 23720 <GOACC_declare@@GOACC_2.0.1+0x3a0>
   23784:	ldr	w0, [sp, #108]
   23788:	cbz	w0, 2371c <GOACC_declare@@GOACC_2.0.1+0x39c>
   2378c:	add	x0, x25, #0x590
   23790:	stp	x21, x22, [sp, #32]
   23794:	add	x0, x0, #0x30
   23798:	stp	x23, x24, [sp, #48]
   2379c:	stp	x27, x28, [sp, #80]
   237a0:	bl	23600 <GOACC_declare@@GOACC_2.0.1+0x280>
   237a4:	mov	w0, w20
   237a8:	bl	23620 <GOACC_declare@@GOACC_2.0.1+0x2a0>
   237ac:	mov	x1, x0
   237b0:	adrp	x2, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   237b4:	add	x0, x2, #0x770
   237b8:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   237bc:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   237c0:	adrp	x27, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   237c4:	add	x27, x27, #0x768
   237c8:	stp	x23, x24, [sp, #48]
   237cc:	adrp	x24, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   237d0:	add	x23, x25, #0x590
   237d4:	add	x24, x24, #0x710
   237d8:	mov	x19, #0x2                   	// #2
   237dc:	stp	x21, x22, [sp, #32]
   237e0:	mov	w20, w19
   237e4:	ldr	x21, [x23, x19, lsl #3]
   237e8:	cbz	x21, 23824 <GOACC_declare@@GOACC_2.0.1+0x4a4>
   237ec:	ldr	x22, [x21]
   237f0:	mov	x1, x27
   237f4:	ldr	x26, [x28, #1512]
   237f8:	mov	x0, x22
   237fc:	bl	88a0 <strcmp@plt>
   23800:	cmp	w0, #0x0
   23804:	csel	x1, x24, x22, eq  // eq = none
   23808:	mov	x0, x26
   2380c:	bl	8800 <strcasecmp@plt>
   23810:	cbnz	w0, 23824 <GOACC_declare@@GOACC_2.0.1+0x4a4>
   23814:	ldr	x0, [x21, #48]
   23818:	blr	x0
   2381c:	cmp	w0, #0x0
   23820:	b.gt	23878 <GOACC_declare@@GOACC_2.0.1+0x4f8>
   23824:	add	x19, x19, #0x1
   23828:	cmp	x19, #0x6
   2382c:	b.ne	237e0 <GOACC_declare@@GOACC_2.0.1+0x460>  // b.any
   23830:	ldr	w0, [sp, #108]
   23834:	cbnz	w0, 238d4 <GOACC_declare@@GOACC_2.0.1+0x554>
   23838:	mov	x0, #0x0                   	// #0
   2383c:	ldp	x21, x22, [sp, #32]
   23840:	ldp	x23, x24, [sp, #48]
   23844:	ldp	x27, x28, [sp, #80]
   23848:	b	23720 <GOACC_declare@@GOACC_2.0.1+0x3a0>
   2384c:	ldr	w0, [sp, #108]
   23850:	cbz	w0, 2371c <GOACC_declare@@GOACC_2.0.1+0x39c>
   23854:	add	x0, x25, #0x590
   23858:	stp	x21, x22, [sp, #32]
   2385c:	add	x0, x0, #0x30
   23860:	stp	x23, x24, [sp, #48]
   23864:	stp	x27, x28, [sp, #80]
   23868:	bl	23600 <GOACC_declare@@GOACC_2.0.1+0x280>
   2386c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23870:	add	x0, x0, #0x790
   23874:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   23878:	ldp	x21, x22, [sp, #32]
   2387c:	ldp	x23, x24, [sp, #48]
   23880:	ldp	x27, x28, [sp, #80]
   23884:	cmp	w20, #0x1
   23888:	ccmp	w20, #0x4, #0x4, hi  // hi = pmore
   2388c:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   23890:	b.ne	23778 <GOACC_declare@@GOACC_2.0.1+0x3f8>  // b.any
   23894:	adrp	x3, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23898:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   2389c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   238a0:	add	x3, x3, #0x9f0
   238a4:	add	x1, x1, #0x7a0
   238a8:	add	x0, x0, #0x7c0
   238ac:	mov	w2, #0xb6                  	// #182
   238b0:	stp	x21, x22, [sp, #32]
   238b4:	stp	x23, x24, [sp, #48]
   238b8:	stp	x27, x28, [sp, #80]
   238bc:	bl	8ab0 <__assert_fail@plt>
   238c0:	add	x0, x25, #0x590
   238c4:	mov	w20, #0x5                   	// #5
   238c8:	ldr	x0, [x0, w20, sxtw #3]
   238cc:	cbnz	x0, 23720 <GOACC_declare@@GOACC_2.0.1+0x3a0>
   238d0:	b	23784 <GOACC_declare@@GOACC_2.0.1+0x404>
   238d4:	add	x0, x25, #0x590
   238d8:	add	x0, x0, #0x30
   238dc:	bl	23600 <GOACC_declare@@GOACC_2.0.1+0x280>
   238e0:	ldr	x1, [x28, #1512]
   238e4:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   238e8:	add	x0, x0, #0x770
   238ec:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   238f0:	stp	x29, x30, [sp, #-32]!
   238f4:	mov	w2, #0x1                   	// #1
   238f8:	mov	x29, sp
   238fc:	stp	x19, x20, [sp, #16]
   23900:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   23904:	add	x1, x20, #0x590
   23908:	mov	x19, x0
   2390c:	add	x0, x1, #0x34
   23910:	ldaxr	w1, [x0]
   23914:	cbnz	w1, 23920 <GOACC_declare@@GOACC_2.0.1+0x5a0>
   23918:	stxr	w3, w2, [x0]
   2391c:	cbnz	w3, 23910 <GOACC_declare@@GOACC_2.0.1+0x590>
   23920:	cmp	w1, #0x0
   23924:	b.ne	239f0 <GOACC_declare@@GOACC_2.0.1+0x670>  // b.any
   23928:	cbz	x19, 239b8 <GOACC_declare@@GOACC_2.0.1+0x638>
   2392c:	ldr	x1, [x19, #8]
   23930:	cbz	x1, 23948 <GOACC_declare@@GOACC_2.0.1+0x5c8>
   23934:	ldr	x0, [x19, #40]
   23938:	cbz	x0, 23948 <GOACC_declare@@GOACC_2.0.1+0x5c8>
   2393c:	ldr	x1, [x1, #264]
   23940:	blr	x1
   23944:	str	xzr, [x19, #40]
   23948:	ldr	x0, [x19, #24]
   2394c:	cbnz	x0, 239f8 <GOACC_declare@@GOACC_2.0.1+0x678>
   23950:	add	x0, x20, #0x590
   23954:	ldr	x2, [x0, #56]
   23958:	cbz	x2, 23988 <GOACC_declare@@GOACC_2.0.1+0x608>
   2395c:	cmp	x19, x2
   23960:	ldr	x1, [x2, #32]
   23964:	b.eq	239dc <GOACC_declare@@GOACC_2.0.1+0x65c>  // b.none
   23968:	cbz	x1, 23988 <GOACC_declare@@GOACC_2.0.1+0x608>
   2396c:	nop
   23970:	cmp	x1, x19
   23974:	ldr	x0, [x1, #32]
   23978:	b.eq	239ac <GOACC_declare@@GOACC_2.0.1+0x62c>  // b.none
   2397c:	mov	x2, x1
   23980:	mov	x1, x0
   23984:	cbnz	x1, 23970 <GOACC_declare@@GOACC_2.0.1+0x5f0>
   23988:	adrp	x3, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   2398c:	add	x3, x3, #0x9f0
   23990:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23994:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23998:	add	x3, x3, #0x10
   2399c:	add	x1, x1, #0x7a0
   239a0:	add	x0, x0, #0x828
   239a4:	mov	w2, #0x17c                 	// #380
   239a8:	bl	8ab0 <__assert_fail@plt>
   239ac:	str	x0, [x2, #32]
   239b0:	mov	x0, x19
   239b4:	bl	8900 <free@plt>
   239b8:	add	x0, x20, #0x590
   239bc:	add	x0, x0, #0x34
   239c0:	ldxr	w1, [x0]
   239c4:	stlxr	w2, wzr, [x0]
   239c8:	cbnz	w2, 239c0 <GOACC_declare@@GOACC_2.0.1+0x640>
   239cc:	tbnz	w1, #31, 239e4 <GOACC_declare@@GOACC_2.0.1+0x664>
   239d0:	ldp	x19, x20, [sp, #16]
   239d4:	ldp	x29, x30, [sp], #32
   239d8:	ret
   239dc:	str	x1, [x0, #56]
   239e0:	b	239b0 <GOACC_declare@@GOACC_2.0.1+0x630>
   239e4:	ldp	x19, x20, [sp, #16]
   239e8:	ldp	x29, x30, [sp], #32
   239ec:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   239f0:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   239f4:	b	23928 <GOACC_declare@@GOACC_2.0.1+0x5a8>
   239f8:	adrp	x3, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   239fc:	add	x3, x3, #0x9f0
   23a00:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23a04:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23a08:	add	x3, x3, #0x10
   23a0c:	add	x1, x1, #0x7a0
   23a10:	add	x0, x0, #0x810
   23a14:	mov	w2, #0x16b                 	// #363
   23a18:	bl	8ab0 <__assert_fail@plt>
   23a1c:	nop
   23a20:	stp	x29, x30, [sp, #-32]!
   23a24:	mov	x29, sp
   23a28:	stp	x19, x20, [sp, #16]
   23a2c:	mov	x20, x0
   23a30:	ldr	w0, [x0, #12]
   23a34:	cbnz	w0, 23a98 <GOACC_declare@@GOACC_2.0.1+0x718>
   23a38:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   23a3c:	add	x0, x19, #0x590
   23a40:	add	x0, x0, #0x30
   23a44:	mov	w2, #0x1                   	// #1
   23a48:	ldaxr	w1, [x0]
   23a4c:	cbnz	w1, 23a58 <GOACC_declare@@GOACC_2.0.1+0x6d8>
   23a50:	stxr	w3, w2, [x0]
   23a54:	cbnz	w3, 23a48 <GOACC_declare@@GOACC_2.0.1+0x6c8>
   23a58:	cmp	w1, #0x0
   23a5c:	b.ne	23af8 <GOACC_declare@@GOACC_2.0.1+0x778>  // b.any
   23a60:	ldr	w0, [x20, #16]
   23a64:	cmp	w0, #0x4
   23a68:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   23a6c:	b.ls	23ab0 <GOACC_declare@@GOACC_2.0.1+0x730>  // b.plast
   23a70:	add	x1, x19, #0x590
   23a74:	mov	w0, w0
   23a78:	ldr	x2, [x1, x0, lsl #3]
   23a7c:	cbnz	x2, 23ad4 <GOACC_declare@@GOACC_2.0.1+0x754>
   23a80:	str	x20, [x1, x0, lsl #3]
   23a84:	add	x0, x1, #0x30
   23a88:	ldxr	w1, [x0]
   23a8c:	stlxr	w2, wzr, [x0]
   23a90:	cbnz	w2, 23a88 <GOACC_declare@@GOACC_2.0.1+0x708>
   23a94:	tbnz	w1, #31, 23aa4 <GOACC_declare@@GOACC_2.0.1+0x724>
   23a98:	ldp	x19, x20, [sp, #16]
   23a9c:	ldp	x29, x30, [sp], #32
   23aa0:	ret
   23aa4:	ldp	x19, x20, [sp, #16]
   23aa8:	ldp	x29, x30, [sp], #32
   23aac:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   23ab0:	adrp	x3, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23ab4:	add	x3, x3, #0x9f0
   23ab8:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23abc:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23ac0:	add	x3, x3, #0x28
   23ac4:	add	x1, x1, #0x7a0
   23ac8:	add	x0, x0, #0x830
   23acc:	mov	w2, #0x4c                  	// #76
   23ad0:	bl	8ab0 <__assert_fail@plt>
   23ad4:	adrp	x3, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23ad8:	add	x3, x3, #0x9f0
   23adc:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23ae0:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23ae4:	add	x3, x3, #0x28
   23ae8:	add	x1, x1, #0x7a0
   23aec:	add	x0, x0, #0x8d0
   23af0:	mov	w2, #0x4f                  	// #79
   23af4:	bl	8ab0 <__assert_fail@plt>
   23af8:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   23afc:	b	23a60 <GOACC_declare@@GOACC_2.0.1+0x6e0>
   23b00:	stp	x29, x30, [sp, #-80]!
   23b04:	mov	x29, sp
   23b08:	stp	x21, x22, [sp, #32]
   23b0c:	mrs	x21, tpidr_el0
   23b10:	adrp	x22, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   23b14:	ldr	x22, [x22, #4008]
   23b18:	stp	x23, x24, [sp, #48]
   23b1c:	stp	x19, x20, [sp, #16]
   23b20:	mov	w19, w0
   23b24:	ldr	x23, [x21, x22]
   23b28:	cbz	x23, 23bc8 <GOACC_declare@@GOACC_2.0.1+0x848>
   23b2c:	ldr	x0, [x23, #8]
   23b30:	cbz	x0, 23ba8 <GOACC_declare@@GOACC_2.0.1+0x828>
   23b34:	ldr	w0, [x0, #12]
   23b38:	cmp	w19, #0x0
   23b3c:	ccmp	w0, w19, #0x4, ge  // ge = tcont
   23b40:	b.eq	23c14 <GOACC_declare@@GOACC_2.0.1+0x894>  // b.none
   23b44:	ldr	x20, [x23]
   23b48:	cbz	x20, 23bc0 <GOACC_declare@@GOACC_2.0.1+0x840>
   23b4c:	ldr	x0, [x20, #48]
   23b50:	blr	x0
   23b54:	mov	w2, w0
   23b58:	cmp	w19, #0x0
   23b5c:	csel	w0, w19, wzr, ge  // ge = tcont
   23b60:	cmp	w2, w0
   23b64:	b.le	23c94 <GOACC_declare@@GOACC_2.0.1+0x914>
   23b68:	mov	w1, #0x130                 	// #304
   23b6c:	mov	w0, w19
   23b70:	smaddl	x19, w19, w1, x20
   23b74:	ldr	x1, [x19, #256]
   23b78:	stp	x20, x19, [x23]
   23b7c:	stp	xzr, xzr, [x23, #16]
   23b80:	blr	x1
   23b84:	ldp	x21, x22, [sp, #32]
   23b88:	ldr	x1, [x19, #248]
   23b8c:	ldp	x19, x20, [sp, #16]
   23b90:	str	x0, [x23, #40]
   23b94:	ldp	x23, x24, [sp, #48]
   23b98:	mov	x16, x1
   23b9c:	ldp	x29, x30, [sp], #80
   23ba0:	mov	w0, #0xfffffffe            	// #-2
   23ba4:	br	x16
   23ba8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   23bac:	cmp	w19, #0x0
   23bb0:	ldr	x20, [x23]
   23bb4:	ldr	w0, [x0, #1616]
   23bb8:	csel	w19, w0, w19, lt  // lt = tstop
   23bbc:	cbnz	x20, 23b4c <GOACC_declare@@GOACC_2.0.1+0x7cc>
   23bc0:	str	x25, [sp, #64]
   23bc4:	b	23bdc <GOACC_declare@@GOACC_2.0.1+0x85c>
   23bc8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   23bcc:	cmp	w19, #0x0
   23bd0:	str	x25, [sp, #64]
   23bd4:	ldr	w0, [x0, #1616]
   23bd8:	csel	w19, w0, w19, lt  // lt = tstop
   23bdc:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   23be0:	add	x24, x25, #0x590
   23be4:	ldr	x20, [x24, #64]
   23be8:	cbz	x20, 23ca4 <GOACC_declare@@GOACC_2.0.1+0x924>
   23bec:	ldr	x0, [x20, #48]
   23bf0:	blr	x0
   23bf4:	mov	w2, w0
   23bf8:	cmp	w19, #0x0
   23bfc:	csel	w0, w19, wzr, ge  // ge = tcont
   23c00:	cmp	w0, w2
   23c04:	b.ge	23c98 <GOACC_declare@@GOACC_2.0.1+0x918>  // b.tcont
   23c08:	cbz	x23, 23c28 <GOACC_declare@@GOACC_2.0.1+0x8a8>
   23c0c:	ldr	x25, [sp, #64]
   23c10:	b	23b68 <GOACC_declare@@GOACC_2.0.1+0x7e8>
   23c14:	ldp	x19, x20, [sp, #16]
   23c18:	ldp	x21, x22, [sp, #32]
   23c1c:	ldp	x23, x24, [sp, #48]
   23c20:	ldp	x29, x30, [sp], #80
   23c24:	ret
   23c28:	mov	x0, #0x30                  	// #48
   23c2c:	bl	b220 <fprintf@plt+0x2710>
   23c30:	mov	x1, x0
   23c34:	mov	x23, x0
   23c38:	str	x0, [x21, x22]
   23c3c:	add	x24, x24, #0x34
   23c40:	ldr	w0, [x24, #20]
   23c44:	bl	89b0 <pthread_setspecific@plt>
   23c48:	mov	w0, #0x1                   	// #1
   23c4c:	ldaxr	w1, [x24]
   23c50:	cbnz	w1, 23c5c <GOACC_declare@@GOACC_2.0.1+0x8dc>
   23c54:	stxr	w2, w0, [x24]
   23c58:	cbnz	w2, 23c4c <GOACC_declare@@GOACC_2.0.1+0x8cc>
   23c5c:	cmp	w1, #0x0
   23c60:	b.ne	23cc8 <GOACC_declare@@GOACC_2.0.1+0x948>  // b.any
   23c64:	add	x25, x25, #0x590
   23c68:	add	x0, x25, #0x34
   23c6c:	ldr	x1, [x25, #56]
   23c70:	str	x1, [x23, #32]
   23c74:	str	x23, [x25, #56]
   23c78:	ldxr	w1, [x0]
   23c7c:	stlxr	w2, wzr, [x0]
   23c80:	cbnz	w2, 23c78 <GOACC_declare@@GOACC_2.0.1+0x8f8>
   23c84:	tbz	w1, #31, 23c0c <GOACC_declare@@GOACC_2.0.1+0x88c>
   23c88:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   23c8c:	ldr	x25, [sp, #64]
   23c90:	b	23b68 <GOACC_declare@@GOACC_2.0.1+0x7e8>
   23c94:	str	x25, [sp, #64]
   23c98:	ldr	w0, [x20, #16]
   23c9c:	mov	w1, w19
   23ca0:	bl	236a0 <GOACC_declare@@GOACC_2.0.1+0x320>
   23ca4:	adrp	x3, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23ca8:	add	x3, x3, #0x9f0
   23cac:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23cb0:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23cb4:	add	x3, x3, #0x38
   23cb8:	add	x1, x1, #0x7a0
   23cbc:	add	x0, x0, #0x8f0
   23cc0:	mov	w2, #0x19a                 	// #410
   23cc4:	bl	8ab0 <__assert_fail@plt>
   23cc8:	mov	x0, x24
   23ccc:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   23cd0:	b	23c64 <GOACC_declare@@GOACC_2.0.1+0x8e4>
   23cd4:	nop

0000000000023cd8 <acc_init@@OACC_2.0>:
   23cd8:	stp	x29, x30, [sp, #-48]!
   23cdc:	mov	x29, sp
   23ce0:	stp	x19, x20, [sp, #16]
   23ce4:	stp	x21, x22, [sp, #32]
   23ce8:	mov	w22, w0
   23cec:	bl	1e0d0 <omp_get_place_proc_ids@@OMP_4.5+0x17d0>
   23cf0:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   23cf4:	add	x2, x21, #0x590
   23cf8:	add	x2, x2, #0x30
   23cfc:	mov	w0, #0x1                   	// #1
   23d00:	ldaxr	w1, [x2]
   23d04:	cbnz	w1, 23d10 <acc_init@@OACC_2.0+0x38>
   23d08:	stxr	w3, w0, [x2]
   23d0c:	cbnz	w3, 23d00 <acc_init@@OACC_2.0+0x28>
   23d10:	cmp	w1, #0x0
   23d14:	b.ne	23e08 <acc_init@@OACC_2.0+0x130>  // b.any
   23d18:	mov	w1, #0x1                   	// #1
   23d1c:	mov	w0, w22
   23d20:	bl	236d0 <GOACC_declare@@GOACC_2.0.1+0x350>
   23d24:	mov	x20, x0
   23d28:	ldr	x0, [x0, #48]
   23d2c:	blr	x0
   23d30:	cmp	w0, #0x0
   23d34:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   23d38:	b.le	23dd8 <acc_init@@OACC_2.0+0x100>
   23d3c:	ldr	w19, [x1, #1616]
   23d40:	cmp	w0, w19
   23d44:	b.le	23dd8 <acc_init@@OACC_2.0+0x100>
   23d48:	mov	w1, #0x130                 	// #304
   23d4c:	mov	w0, #0x1                   	// #1
   23d50:	smaddl	x19, w19, w1, x20
   23d54:	add	x22, x19, #0xa8
   23d58:	ldaxr	w1, [x22]
   23d5c:	cbnz	w1, 23d68 <acc_init@@OACC_2.0+0x90>
   23d60:	stxr	w2, w0, [x22]
   23d64:	cbnz	w2, 23d58 <acc_init@@OACC_2.0+0x80>
   23d68:	cmp	w1, #0x0
   23d6c:	b.ne	23de8 <acc_init@@OACC_2.0+0x110>  // b.any
   23d70:	ldr	w0, [x19, #172]
   23d74:	cmp	w0, #0x1
   23d78:	b.eq	23df4 <acc_init@@OACC_2.0+0x11c>  // b.none
   23d7c:	mov	x0, x19
   23d80:	bl	20170 <GOMP_offload_unregister@@GOMP_4.0.1+0x18>
   23d84:	ldxr	w0, [x22]
   23d88:	stlxr	w1, wzr, [x22]
   23d8c:	cbnz	w1, 23d84 <acc_init@@OACC_2.0+0xac>
   23d90:	tbnz	w0, #31, 23dc4 <acc_init@@OACC_2.0+0xec>
   23d94:	add	x21, x21, #0x590
   23d98:	add	x0, x21, #0x30
   23d9c:	str	x20, [x21, #64]
   23da0:	ldxr	w1, [x0]
   23da4:	stlxr	w2, wzr, [x0]
   23da8:	cbnz	w2, 23da0 <acc_init@@OACC_2.0+0xc8>
   23dac:	tbnz	w1, #31, 23dd0 <acc_init@@OACC_2.0+0xf8>
   23db0:	ldp	x19, x20, [sp, #16]
   23db4:	mov	w0, #0xffffffff            	// #-1
   23db8:	ldp	x21, x22, [sp, #32]
   23dbc:	ldp	x29, x30, [sp], #48
   23dc0:	b	23b00 <GOACC_declare@@GOACC_2.0.1+0x780>
   23dc4:	mov	x0, x22
   23dc8:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   23dcc:	b	23d94 <acc_init@@OACC_2.0+0xbc>
   23dd0:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   23dd4:	b	23db0 <acc_init@@OACC_2.0+0xd8>
   23dd8:	ldr	w1, [x1, #1616]
   23ddc:	mov	w2, w0
   23de0:	mov	w0, w22
   23de4:	bl	236a0 <GOACC_declare@@GOACC_2.0.1+0x320>
   23de8:	mov	x0, x22
   23dec:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   23df0:	b	23d70 <acc_init@@OACC_2.0+0x98>
   23df4:	mov	x0, x22
   23df8:	bl	23600 <GOACC_declare@@GOACC_2.0.1+0x280>
   23dfc:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   23e00:	add	x0, x0, #0x900
   23e04:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   23e08:	mov	x0, x2
   23e0c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   23e10:	b	23d18 <acc_init@@OACC_2.0+0x40>
   23e14:	nop

0000000000023e18 <acc_shutdown@@OACC_2.0>:
   23e18:	stp	x29, x30, [sp, #-80]!
   23e1c:	mov	x29, sp
   23e20:	stp	x19, x20, [sp, #16]
   23e24:	mov	w19, w0
   23e28:	stp	x21, x22, [sp, #32]
   23e2c:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   23e30:	stp	x23, x24, [sp, #48]
   23e34:	str	x25, [sp, #64]
   23e38:	bl	1e0d0 <omp_get_place_proc_ids@@OMP_4.5+0x17d0>
   23e3c:	add	x2, x21, #0x590
   23e40:	mov	w0, #0x1                   	// #1
   23e44:	add	x2, x2, #0x30
   23e48:	ldaxr	w1, [x2]
   23e4c:	cbnz	w1, 23e58 <acc_shutdown@@OACC_2.0+0x40>
   23e50:	stxr	w3, w0, [x2]
   23e54:	cbnz	w3, 23e48 <acc_shutdown@@OACC_2.0+0x30>
   23e58:	cmp	w1, #0x0
   23e5c:	b.ne	24130 <acc_shutdown@@OACC_2.0+0x318>  // b.any
   23e60:	mov	w1, #0x1                   	// #1
   23e64:	mov	w0, w19
   23e68:	bl	236d0 <GOACC_declare@@GOACC_2.0.1+0x350>
   23e6c:	mov	x20, x0
   23e70:	ldr	x0, [x0, #48]
   23e74:	blr	x0
   23e78:	mov	w22, w0
   23e7c:	cmp	w0, #0x0
   23e80:	b.le	23ee0 <acc_shutdown@@OACC_2.0+0xc8>
   23e84:	sub	w23, w0, #0x1
   23e88:	add	x0, x20, #0x1d8
   23e8c:	mov	w1, #0x130                 	// #304
   23e90:	add	x19, x20, #0xa8
   23e94:	mov	w25, #0x1                   	// #1
   23e98:	umaddl	x23, w23, w1, x0
   23e9c:	nop
   23ea0:	sub	x24, x19, #0xa8
   23ea4:	ldaxr	w1, [x19]
   23ea8:	cbnz	w1, 23eb4 <acc_shutdown@@OACC_2.0+0x9c>
   23eac:	stxr	w0, w25, [x19]
   23eb0:	cbnz	w0, 23ea4 <acc_shutdown@@OACC_2.0+0x8c>
   23eb4:	cmp	w1, #0x0
   23eb8:	b.ne	24114 <acc_shutdown@@OACC_2.0+0x2fc>  // b.any
   23ebc:	mov	x0, x24
   23ec0:	bl	20390 <GOMP_offload_unregister@@GOMP_4.0.1+0x238>
   23ec4:	ldxr	w0, [x19]
   23ec8:	stlxr	w1, wzr, [x19]
   23ecc:	cbnz	w1, 23ec4 <acc_shutdown@@OACC_2.0+0xac>
   23ed0:	tbnz	w0, #31, 24080 <acc_shutdown@@OACC_2.0+0x268>
   23ed4:	add	x19, x19, #0x130
   23ed8:	cmp	x19, x23
   23edc:	b.ne	23ea0 <acc_shutdown@@OACC_2.0+0x88>  // b.any
   23ee0:	add	x2, x21, #0x590
   23ee4:	mov	w0, #0x1                   	// #1
   23ee8:	add	x2, x2, #0x34
   23eec:	ldaxr	w1, [x2]
   23ef0:	cbnz	w1, 23efc <acc_shutdown@@OACC_2.0+0xe4>
   23ef4:	stxr	w3, w0, [x2]
   23ef8:	cbnz	w3, 23eec <acc_shutdown@@OACC_2.0+0xd4>
   23efc:	cmp	w1, #0x0
   23f00:	b.ne	2413c <acc_shutdown@@OACC_2.0+0x324>  // b.any
   23f04:	add	x0, x21, #0x590
   23f08:	ldr	x19, [x0, #56]
   23f0c:	cbz	x19, 23f90 <acc_shutdown@@OACC_2.0+0x178>
   23f10:	mov	w23, #0x1                   	// #1
   23f14:	nop
   23f18:	ldr	x0, [x19, #40]
   23f1c:	cbz	x0, 23f28 <acc_shutdown@@OACC_2.0+0x110>
   23f20:	ldr	x1, [x20, #264]
   23f24:	blr	x1
   23f28:	ldr	x0, [x19, #24]
   23f2c:	str	xzr, [x19, #40]
   23f30:	cbnz	x0, 240b8 <acc_shutdown@@OACC_2.0+0x2a0>
   23f34:	ldr	x0, [x19, #16]
   23f38:	cbnz	x0, 240dc <acc_shutdown@@OACC_2.0+0x2c4>
   23f3c:	ldr	x0, [x19, #8]
   23f40:	cbz	x0, 23f88 <acc_shutdown@@OACC_2.0+0x170>
   23f44:	add	x0, x0, #0xa8
   23f48:	ldaxr	w1, [x0]
   23f4c:	cbnz	w1, 23f58 <acc_shutdown@@OACC_2.0+0x140>
   23f50:	stxr	w2, w23, [x0]
   23f54:	cbnz	w2, 23f48 <acc_shutdown@@OACC_2.0+0x130>
   23f58:	cmp	w1, #0x0
   23f5c:	b.ne	24100 <acc_shutdown@@OACC_2.0+0x2e8>  // b.any
   23f60:	ldr	x0, [x19, #8]
   23f64:	add	x0, x0, #0xa0
   23f68:	bl	20430 <GOMP_offload_unregister@@GOMP_4.0.1+0x2d8>
   23f6c:	ldr	x0, [x19, #8]
   23f70:	add	x0, x0, #0xa8
   23f74:	ldxr	w1, [x0]
   23f78:	stlxr	w2, wzr, [x0]
   23f7c:	cbnz	w2, 23f74 <acc_shutdown@@OACC_2.0+0x15c>
   23f80:	tbnz	w1, #31, 24078 <acc_shutdown@@OACC_2.0+0x260>
   23f84:	stp	xzr, xzr, [x19]
   23f88:	ldr	x19, [x19, #32]
   23f8c:	cbnz	x19, 23f18 <acc_shutdown@@OACC_2.0+0x100>
   23f90:	add	x0, x21, #0x590
   23f94:	add	x0, x0, #0x34
   23f98:	ldxr	w1, [x0]
   23f9c:	stlxr	w2, wzr, [x0]
   23fa0:	cbnz	w2, 23f98 <acc_shutdown@@OACC_2.0+0x180>
   23fa4:	tbnz	w1, #31, 240b0 <acc_shutdown@@OACC_2.0+0x298>
   23fa8:	cmp	w22, #0x0
   23fac:	b.le	2408c <acc_shutdown@@OACC_2.0+0x274>
   23fb0:	add	x19, x20, #0xa8
   23fb4:	mov	w24, #0x0                   	// #0
   23fb8:	mov	w20, #0x1                   	// #1
   23fbc:	mov	w23, #0x0                   	// #0
   23fc0:	mov	w25, w20
   23fc4:	b	23fd8 <acc_shutdown@@OACC_2.0+0x1c0>
   23fc8:	add	w23, w23, #0x1
   23fcc:	add	x19, x19, #0x130
   23fd0:	cmp	w22, w23
   23fd4:	b.le	24040 <acc_shutdown@@OACC_2.0+0x228>
   23fd8:	ldaxr	w1, [x19]
   23fdc:	cbnz	w1, 23fe8 <acc_shutdown@@OACC_2.0+0x1d0>
   23fe0:	stxr	w0, w25, [x19]
   23fe4:	cbnz	w0, 23fd8 <acc_shutdown@@OACC_2.0+0x1c0>
   23fe8:	cmp	w1, #0x0
   23fec:	b.ne	24108 <acc_shutdown@@OACC_2.0+0x2f0>  // b.any
   23ff0:	ldr	w1, [x19, #4]
   23ff4:	cmp	w1, #0x1
   23ff8:	b.ne	24014 <acc_shutdown@@OACC_2.0+0x1fc>  // b.any
   23ffc:	ldur	w0, [x19, #-156]
   24000:	mov	w24, w1
   24004:	ldur	x1, [x19, #-104]
   24008:	blr	x1
   2400c:	and	w20, w20, w0
   24010:	str	wzr, [x19, #4]
   24014:	ldxr	w0, [x19]
   24018:	stlxr	w1, wzr, [x19]
   2401c:	cbnz	w1, 24014 <acc_shutdown@@OACC_2.0+0x1fc>
   24020:	tbz	w0, #31, 23fc8 <acc_shutdown@@OACC_2.0+0x1b0>
   24024:	mov	x0, x19
   24028:	add	w23, w23, #0x1
   2402c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   24030:	add	x19, x19, #0x130
   24034:	cmp	w22, w23
   24038:	b.gt	23fd8 <acc_shutdown@@OACC_2.0+0x1c0>
   2403c:	nop
   24040:	cbz	w20, 24148 <acc_shutdown@@OACC_2.0+0x330>
   24044:	cbz	w24, 2408c <acc_shutdown@@OACC_2.0+0x274>
   24048:	add	x0, x21, #0x590
   2404c:	add	x0, x0, #0x30
   24050:	ldxr	w1, [x0]
   24054:	stlxr	w2, wzr, [x0]
   24058:	cbnz	w2, 24050 <acc_shutdown@@OACC_2.0+0x238>
   2405c:	tbnz	w1, #31, 24098 <acc_shutdown@@OACC_2.0+0x280>
   24060:	ldp	x19, x20, [sp, #16]
   24064:	ldp	x21, x22, [sp, #32]
   24068:	ldp	x23, x24, [sp, #48]
   2406c:	ldr	x25, [sp, #64]
   24070:	ldp	x29, x30, [sp], #80
   24074:	ret
   24078:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   2407c:	b	23f84 <acc_shutdown@@OACC_2.0+0x16c>
   24080:	mov	x0, x19
   24084:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   24088:	b	23ed4 <acc_shutdown@@OACC_2.0+0xbc>
   2408c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24090:	add	x0, x0, #0x958
   24094:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   24098:	ldp	x19, x20, [sp, #16]
   2409c:	ldp	x21, x22, [sp, #32]
   240a0:	ldp	x23, x24, [sp, #48]
   240a4:	ldr	x25, [sp, #64]
   240a8:	ldp	x29, x30, [sp], #80
   240ac:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   240b0:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   240b4:	b	23fa8 <acc_shutdown@@OACC_2.0+0x190>
   240b8:	add	x0, x21, #0x590
   240bc:	add	x0, x0, #0x34
   240c0:	ldxr	w1, [x0]
   240c4:	stlxr	w2, wzr, [x0]
   240c8:	cbnz	w2, 240c0 <acc_shutdown@@OACC_2.0+0x2a8>
   240cc:	tbnz	w1, #31, 24120 <acc_shutdown@@OACC_2.0+0x308>
   240d0:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   240d4:	add	x0, x0, #0x918
   240d8:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   240dc:	add	x0, x21, #0x590
   240e0:	add	x0, x0, #0x34
   240e4:	ldxr	w1, [x0]
   240e8:	stlxr	w2, wzr, [x0]
   240ec:	cbnz	w2, 240e4 <acc_shutdown@@OACC_2.0+0x2cc>
   240f0:	tbnz	w1, #31, 24128 <acc_shutdown@@OACC_2.0+0x310>
   240f4:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   240f8:	add	x0, x0, #0x938
   240fc:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   24100:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   24104:	b	23f60 <acc_shutdown@@OACC_2.0+0x148>
   24108:	mov	x0, x19
   2410c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   24110:	b	23ff0 <acc_shutdown@@OACC_2.0+0x1d8>
   24114:	mov	x0, x19
   24118:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   2411c:	b	23ebc <acc_shutdown@@OACC_2.0+0xa4>
   24120:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   24124:	b	240d0 <acc_shutdown@@OACC_2.0+0x2b8>
   24128:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   2412c:	b	240f4 <acc_shutdown@@OACC_2.0+0x2dc>
   24130:	mov	x0, x2
   24134:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   24138:	b	23e60 <acc_shutdown@@OACC_2.0+0x48>
   2413c:	mov	x0, x2
   24140:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   24144:	b	23f04 <acc_shutdown@@OACC_2.0+0xec>
   24148:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   2414c:	add	x0, x0, #0x88
   24150:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   24154:	nop

0000000000024158 <acc_get_num_devices@@OACC_2.0>:
   24158:	cbnz	w0, 24164 <acc_get_num_devices@@OACC_2.0+0xc>
   2415c:	mov	w0, #0x0                   	// #0
   24160:	ret
   24164:	stp	x29, x30, [sp, #-32]!
   24168:	mov	x29, sp
   2416c:	stp	x19, x20, [sp, #16]
   24170:	mov	w19, w0
   24174:	bl	1e0d0 <omp_get_place_proc_ids@@OMP_4.5+0x17d0>
   24178:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   2417c:	add	x0, x20, #0x590
   24180:	add	x0, x0, #0x30
   24184:	mov	w2, #0x1                   	// #1
   24188:	ldaxr	w1, [x0]
   2418c:	cbnz	w1, 24198 <acc_get_num_devices@@OACC_2.0+0x40>
   24190:	stxr	w3, w2, [x0]
   24194:	cbnz	w3, 24188 <acc_get_num_devices@@OACC_2.0+0x30>
   24198:	cmp	w1, #0x0
   2419c:	b.ne	24204 <acc_get_num_devices@@OACC_2.0+0xac>  // b.any
   241a0:	mov	w0, w19
   241a4:	mov	w1, #0x0                   	// #0
   241a8:	bl	236d0 <GOACC_declare@@GOACC_2.0.1+0x350>
   241ac:	mov	x19, x0
   241b0:	add	x1, x20, #0x590
   241b4:	add	x1, x1, #0x30
   241b8:	ldxr	w0, [x1]
   241bc:	stlxr	w2, wzr, [x1]
   241c0:	cbnz	w2, 241b8 <acc_get_num_devices@@OACC_2.0+0x60>
   241c4:	tbnz	w0, #31, 241f8 <acc_get_num_devices@@OACC_2.0+0xa0>
   241c8:	cbz	x19, 241e8 <acc_get_num_devices@@OACC_2.0+0x90>
   241cc:	ldr	x0, [x19, #48]
   241d0:	blr	x0
   241d4:	cmp	w0, #0x0
   241d8:	csel	w0, w0, wzr, ge  // ge = tcont
   241dc:	ldp	x19, x20, [sp, #16]
   241e0:	ldp	x29, x30, [sp], #32
   241e4:	ret
   241e8:	mov	w0, #0x0                   	// #0
   241ec:	ldp	x19, x20, [sp, #16]
   241f0:	ldp	x29, x30, [sp], #32
   241f4:	ret
   241f8:	mov	x0, x1
   241fc:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   24200:	b	241c8 <acc_get_num_devices@@OACC_2.0+0x70>
   24204:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   24208:	b	241a0 <acc_get_num_devices@@OACC_2.0+0x48>
   2420c:	nop

0000000000024210 <acc_set_device_type@@OACC_2.0>:
   24210:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   24214:	ldr	x1, [x1, #4008]
   24218:	mrs	x2, tpidr_el0
   2421c:	stp	x29, x30, [sp, #-64]!
   24220:	mov	x29, sp
   24224:	stp	x19, x20, [sp, #16]
   24228:	mov	w20, w0
   2422c:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   24230:	stp	x21, x22, [sp, #32]
   24234:	str	x23, [sp, #48]
   24238:	ldr	x23, [x2, x1]
   2423c:	bl	1e0d0 <omp_get_place_proc_ids@@OMP_4.5+0x17d0>
   24240:	add	x2, x19, #0x590
   24244:	mov	w0, #0x1                   	// #1
   24248:	add	x2, x2, #0x30
   2424c:	ldaxr	w1, [x2]
   24250:	cbnz	w1, 2425c <acc_set_device_type@@OACC_2.0+0x4c>
   24254:	stxr	w3, w0, [x2]
   24258:	cbnz	w3, 2424c <acc_set_device_type@@OACC_2.0+0x3c>
   2425c:	cmp	w1, #0x0
   24260:	b.ne	24340 <acc_set_device_type@@OACC_2.0+0x130>  // b.any
   24264:	mov	w0, w20
   24268:	mov	w1, #0x1                   	// #1
   2426c:	bl	236d0 <GOACC_declare@@GOACC_2.0.1+0x350>
   24270:	mov	x20, x0
   24274:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   24278:	mov	w1, #0x130                 	// #304
   2427c:	add	x0, x19, #0x590
   24280:	ldr	w21, [x2, #1616]
   24284:	mov	w2, #0x1                   	// #1
   24288:	str	x20, [x0, #64]
   2428c:	smaddl	x21, w21, w1, x20
   24290:	add	x22, x21, #0xa8
   24294:	ldaxr	w1, [x22]
   24298:	cbnz	w1, 242a4 <acc_set_device_type@@OACC_2.0+0x94>
   2429c:	stxr	w0, w2, [x22]
   242a0:	cbnz	w0, 24294 <acc_set_device_type@@OACC_2.0+0x84>
   242a4:	cmp	w1, #0x0
   242a8:	b.ne	24334 <acc_set_device_type@@OACC_2.0+0x124>  // b.any
   242ac:	ldr	w0, [x21, #172]
   242b0:	cbz	w0, 24310 <acc_set_device_type@@OACC_2.0+0x100>
   242b4:	ldxr	w0, [x22]
   242b8:	stlxr	w1, wzr, [x22]
   242bc:	cbnz	w1, 242b4 <acc_set_device_type@@OACC_2.0+0xa4>
   242c0:	tbnz	w0, #31, 24328 <acc_set_device_type@@OACC_2.0+0x118>
   242c4:	add	x19, x19, #0x590
   242c8:	add	x19, x19, #0x30
   242cc:	ldxr	w0, [x19]
   242d0:	stlxr	w1, wzr, [x19]
   242d4:	cbnz	w1, 242cc <acc_set_device_type@@OACC_2.0+0xbc>
   242d8:	tbnz	w0, #31, 2431c <acc_set_device_type@@OACC_2.0+0x10c>
   242dc:	cbz	x23, 242f8 <acc_set_device_type@@OACC_2.0+0xe8>
   242e0:	ldr	x0, [x23]
   242e4:	cmp	x0, x20
   242e8:	b.eq	242f8 <acc_set_device_type@@OACC_2.0+0xe8>  // b.none
   242ec:	ldr	x0, [x23, #24]
   242f0:	stp	xzr, xzr, [x23]
   242f4:	cbnz	x0, 2434c <acc_set_device_type@@OACC_2.0+0x13c>
   242f8:	ldp	x19, x20, [sp, #16]
   242fc:	mov	w0, #0xffffffff            	// #-1
   24300:	ldp	x21, x22, [sp, #32]
   24304:	ldr	x23, [sp, #48]
   24308:	ldp	x29, x30, [sp], #64
   2430c:	b	23b00 <GOACC_declare@@GOACC_2.0.1+0x780>
   24310:	mov	x0, x21
   24314:	bl	20170 <GOMP_offload_unregister@@GOMP_4.0.1+0x18>
   24318:	b	242b4 <acc_set_device_type@@OACC_2.0+0xa4>
   2431c:	mov	x0, x19
   24320:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   24324:	b	242dc <acc_set_device_type@@OACC_2.0+0xcc>
   24328:	mov	x0, x22
   2432c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   24330:	b	242c4 <acc_set_device_type@@OACC_2.0+0xb4>
   24334:	mov	x0, x22
   24338:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   2433c:	b	242ac <acc_set_device_type@@OACC_2.0+0x9c>
   24340:	mov	x0, x2
   24344:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   24348:	b	24264 <acc_set_device_type@@OACC_2.0+0x54>
   2434c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24350:	add	x0, x0, #0x970
   24354:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>

0000000000024358 <acc_get_device_type@@OACC_2.0>:
   24358:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   2435c:	ldr	x0, [x0, #4008]
   24360:	mrs	x1, tpidr_el0
   24364:	stp	x29, x30, [sp, #-32]!
   24368:	mov	x29, sp
   2436c:	ldr	x0, [x1, x0]
   24370:	cbz	x0, 24394 <acc_get_device_type@@OACC_2.0+0x3c>
   24374:	ldr	x0, [x0]
   24378:	cbz	x0, 24394 <acc_get_device_type@@OACC_2.0+0x3c>
   2437c:	ldr	w0, [x0, #16]
   24380:	cmp	w0, #0x1
   24384:	ccmp	w0, #0x4, #0x4, ne  // ne = any
   24388:	b.eq	24404 <acc_get_device_type@@OACC_2.0+0xac>  // b.none
   2438c:	ldp	x29, x30, [sp], #32
   24390:	ret
   24394:	str	x19, [sp, #16]
   24398:	bl	1e0d0 <omp_get_place_proc_ids@@OMP_4.5+0x17d0>
   2439c:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   243a0:	add	x0, x19, #0x590
   243a4:	add	x0, x0, #0x30
   243a8:	mov	w2, #0x1                   	// #1
   243ac:	ldaxr	w1, [x0]
   243b0:	cbnz	w1, 243bc <acc_get_device_type@@OACC_2.0+0x64>
   243b4:	stxr	w3, w2, [x0]
   243b8:	cbnz	w3, 243ac <acc_get_device_type@@OACC_2.0+0x54>
   243bc:	cmp	w1, #0x0
   243c0:	b.ne	2442c <acc_get_device_type@@OACC_2.0+0xd4>  // b.any
   243c4:	mov	w1, #0x1                   	// #1
   243c8:	mov	w0, #0x1                   	// #1
   243cc:	bl	236d0 <GOACC_declare@@GOACC_2.0.1+0x350>
   243d0:	add	x1, x19, #0x590
   243d4:	mov	x19, x0
   243d8:	add	x1, x1, #0x30
   243dc:	ldxr	w0, [x1]
   243e0:	stlxr	w2, wzr, [x1]
   243e4:	cbnz	w2, 243dc <acc_get_device_type@@OACC_2.0+0x84>
   243e8:	tbnz	w0, #31, 243f8 <acc_get_device_type@@OACC_2.0+0xa0>
   243ec:	ldr	w0, [x19, #16]
   243f0:	ldr	x19, [sp, #16]
   243f4:	b	24380 <acc_get_device_type@@OACC_2.0+0x28>
   243f8:	mov	x0, x1
   243fc:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   24400:	b	243ec <acc_get_device_type@@OACC_2.0+0x94>
   24404:	adrp	x3, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24408:	add	x3, x3, #0x9f0
   2440c:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24410:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24414:	add	x3, x3, #0x60
   24418:	add	x1, x1, #0x7a0
   2441c:	add	x0, x0, #0x9a0
   24420:	mov	w2, #0x226                 	// #550
   24424:	str	x19, [sp, #16]
   24428:	bl	8ab0 <__assert_fail@plt>
   2442c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   24430:	b	243c4 <acc_get_device_type@@OACC_2.0+0x6c>
   24434:	nop

0000000000024438 <acc_get_device_num@@OACC_2.0>:
   24438:	stp	x29, x30, [sp, #-48]!
   2443c:	mrs	x2, tpidr_el0
   24440:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   24444:	ldr	x1, [x1, #4008]
   24448:	mov	x29, sp
   2444c:	stp	x19, x20, [sp, #16]
   24450:	cmp	w0, #0x5
   24454:	mov	w20, w0
   24458:	str	x21, [sp, #32]
   2445c:	ldr	x21, [x2, x1]
   24460:	b.gt	24508 <acc_get_device_num@@OACC_2.0+0xd0>
   24464:	bl	1e0d0 <omp_get_place_proc_ids@@OMP_4.5+0x17d0>
   24468:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   2446c:	add	x0, x19, #0x590
   24470:	mov	w2, #0x1                   	// #1
   24474:	add	x0, x0, #0x30
   24478:	ldaxr	w1, [x0]
   2447c:	cbnz	w1, 24488 <acc_get_device_num@@OACC_2.0+0x50>
   24480:	stxr	w3, w2, [x0]
   24484:	cbnz	w3, 24478 <acc_get_device_num@@OACC_2.0+0x40>
   24488:	cmp	w1, #0x0
   2448c:	b.ne	24518 <acc_get_device_num@@OACC_2.0+0xe0>  // b.any
   24490:	mov	w1, #0x1                   	// #1
   24494:	mov	w0, w20
   24498:	bl	236d0 <GOACC_declare@@GOACC_2.0.1+0x350>
   2449c:	add	x1, x19, #0x590
   244a0:	mov	x19, x0
   244a4:	add	x1, x1, #0x30
   244a8:	ldxr	w0, [x1]
   244ac:	stlxr	w2, wzr, [x1]
   244b0:	cbnz	w2, 244a8 <acc_get_device_num@@OACC_2.0+0x70>
   244b4:	tbnz	w0, #31, 244fc <acc_get_device_num@@OACC_2.0+0xc4>
   244b8:	cbz	x21, 244c8 <acc_get_device_num@@OACC_2.0+0x90>
   244bc:	ldr	x0, [x21]
   244c0:	cmp	x0, x19
   244c4:	b.eq	244e0 <acc_get_device_num@@OACC_2.0+0xa8>  // b.none
   244c8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   244cc:	ldp	x19, x20, [sp, #16]
   244d0:	ldr	w0, [x0, #1616]
   244d4:	ldr	x21, [sp, #32]
   244d8:	ldp	x29, x30, [sp], #48
   244dc:	ret
   244e0:	ldr	x0, [x21, #8]
   244e4:	cbz	x0, 244c8 <acc_get_device_num@@OACC_2.0+0x90>
   244e8:	ldr	w0, [x0, #12]
   244ec:	ldp	x19, x20, [sp, #16]
   244f0:	ldr	x21, [sp, #32]
   244f4:	ldp	x29, x30, [sp], #48
   244f8:	ret
   244fc:	mov	x0, x1
   24500:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   24504:	b	244b8 <acc_get_device_num@@OACC_2.0+0x80>
   24508:	mov	w1, w0
   2450c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24510:	add	x0, x0, #0x718
   24514:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   24518:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   2451c:	b	24490 <acc_get_device_num@@OACC_2.0+0x58>

0000000000024520 <acc_set_device_num@@OACC_2.0>:
   24520:	stp	x29, x30, [sp, #-48]!
   24524:	mov	x29, sp
   24528:	stp	x19, x20, [sp, #16]
   2452c:	mov	w19, w0
   24530:	stp	x21, x22, [sp, #32]
   24534:	mov	w21, w1
   24538:	bl	1e0d0 <omp_get_place_proc_ids@@OMP_4.5+0x17d0>
   2453c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   24540:	cmp	w19, #0x0
   24544:	ldr	w0, [x0, #1616]
   24548:	csel	w19, w0, w19, lt  // lt = tstop
   2454c:	cbz	w21, 24600 <acc_set_device_num@@OACC_2.0+0xe0>
   24550:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   24554:	add	x0, x20, #0x590
   24558:	add	x0, x0, #0x30
   2455c:	mov	w2, #0x1                   	// #1
   24560:	ldaxr	w1, [x0]
   24564:	cbnz	w1, 24570 <acc_set_device_num@@OACC_2.0+0x50>
   24568:	stxr	w3, w2, [x0]
   2456c:	cbnz	w3, 24560 <acc_set_device_num@@OACC_2.0+0x40>
   24570:	cmp	w1, #0x0
   24574:	b.ne	2465c <acc_set_device_num@@OACC_2.0+0x13c>  // b.any
   24578:	mov	w1, #0x1                   	// #1
   2457c:	mov	w0, w21
   24580:	bl	236d0 <GOACC_declare@@GOACC_2.0.1+0x350>
   24584:	mov	x22, x0
   24588:	add	x0, x20, #0x590
   2458c:	ldr	x1, [x22, #48]
   24590:	str	x22, [x0, #64]
   24594:	blr	x1
   24598:	cmp	w19, #0x0
   2459c:	csel	w1, w19, wzr, ge  // ge = tcont
   245a0:	cmp	w0, w1
   245a4:	b.le	2464c <acc_set_device_num@@OACC_2.0+0x12c>
   245a8:	mov	w0, #0x130                 	// #304
   245ac:	mov	w2, #0x1                   	// #1
   245b0:	smaddl	x22, w19, w0, x22
   245b4:	add	x21, x22, #0xa8
   245b8:	ldaxr	w1, [x21]
   245bc:	cbnz	w1, 245c8 <acc_set_device_num@@OACC_2.0+0xa8>
   245c0:	stxr	w0, w2, [x21]
   245c4:	cbnz	w0, 245b8 <acc_set_device_num@@OACC_2.0+0x98>
   245c8:	cmp	w1, #0x0
   245cc:	b.ne	24640 <acc_set_device_num@@OACC_2.0+0x120>  // b.any
   245d0:	ldr	w0, [x22, #172]
   245d4:	cbz	w0, 24620 <acc_set_device_num@@OACC_2.0+0x100>
   245d8:	ldxr	w0, [x21]
   245dc:	stlxr	w1, wzr, [x21]
   245e0:	cbnz	w1, 245d8 <acc_set_device_num@@OACC_2.0+0xb8>
   245e4:	tbnz	w0, #31, 24634 <acc_set_device_num@@OACC_2.0+0x114>
   245e8:	add	x0, x20, #0x590
   245ec:	add	x0, x0, #0x30
   245f0:	ldxr	w1, [x0]
   245f4:	stlxr	w2, wzr, [x0]
   245f8:	cbnz	w2, 245f0 <acc_set_device_num@@OACC_2.0+0xd0>
   245fc:	tbnz	w1, #31, 2462c <acc_set_device_num@@OACC_2.0+0x10c>
   24600:	mov	w0, w19
   24604:	bl	23b00 <GOACC_declare@@GOACC_2.0.1+0x780>
   24608:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   2460c:	ldp	x21, x22, [sp, #32]
   24610:	str	w19, [x0, #1616]
   24614:	ldp	x19, x20, [sp, #16]
   24618:	ldp	x29, x30, [sp], #48
   2461c:	ret
   24620:	mov	x0, x22
   24624:	bl	20170 <GOMP_offload_unregister@@GOMP_4.0.1+0x18>
   24628:	b	245d8 <acc_set_device_num@@OACC_2.0+0xb8>
   2462c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   24630:	b	24600 <acc_set_device_num@@OACC_2.0+0xe0>
   24634:	mov	x0, x21
   24638:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   2463c:	b	245e8 <acc_set_device_num@@OACC_2.0+0xc8>
   24640:	mov	x0, x21
   24644:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   24648:	b	245d0 <acc_set_device_num@@OACC_2.0+0xb0>
   2464c:	mov	w2, w0
   24650:	mov	w1, w19
   24654:	mov	w0, w21
   24658:	bl	236a0 <GOACC_declare@@GOACC_2.0.1+0x320>
   2465c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   24660:	b	24578 <acc_set_device_num@@OACC_2.0+0x58>
   24664:	nop

0000000000024668 <acc_on_device@@OACC_2.0>:
   24668:	tst	w0, #0xfffffffd
   2466c:	cset	w0, eq  // eq = none
   24670:	ret
   24674:	nop
   24678:	stp	x29, x30, [sp, #-32]!
   2467c:	adrp	x1, 23000 <GOACC_enter_exit_data@@GOACC_2.0+0x230>
   24680:	add	x1, x1, #0x8f0
   24684:	mov	x29, sp
   24688:	str	x19, [sp, #16]
   2468c:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   24690:	add	x19, x19, #0x590
   24694:	add	x0, x19, #0x48
   24698:	str	wzr, [x19, #48]
   2469c:	bl	8640 <pthread_key_create@plt>
   246a0:	str	wzr, [x19, #52]
   246a4:	stp	xzr, xzr, [x19, #56]
   246a8:	ldr	x19, [sp, #16]
   246ac:	ldp	x29, x30, [sp], #32
   246b0:	b	235f0 <GOACC_declare@@GOACC_2.0.1+0x270>
   246b4:	nop
   246b8:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   246bc:	ldr	x1, [x1, #4008]
   246c0:	mrs	x2, tpidr_el0
   246c4:	ldr	x1, [x2, x1]
   246c8:	ldr	x2, [x1, #16]
   246cc:	cbnz	x2, 246ec <acc_on_device@@OACC_2.0+0x84>
   246d0:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   246d4:	add	x2, x2, #0x590
   246d8:	ldr	x3, [x1, #8]
   246dc:	str	x3, [x1, #16]
   246e0:	ldr	x0, [x2, w0, sxtw #3]
   246e4:	str	x0, [x1, #8]
   246e8:	ret
   246ec:	stp	x29, x30, [sp, #-16]!
   246f0:	adrp	x3, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   246f4:	add	x3, x3, #0x9f0
   246f8:	mov	x29, sp
   246fc:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24700:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24704:	add	x3, x3, #0x78
   24708:	add	x1, x1, #0x7a0
   2470c:	add	x0, x0, #0x9d8
   24710:	mov	w2, #0x29b                 	// #667
   24714:	bl	8ab0 <__assert_fail@plt>
   24718:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   2471c:	ldr	x0, [x0, #4008]
   24720:	mrs	x1, tpidr_el0
   24724:	ldr	x0, [x1, x0]
   24728:	ldr	x1, [x0, #16]
   2472c:	stp	x1, xzr, [x0, #8]
   24730:	ret
   24734:	nop
   24738:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   2473c:	ldr	x0, [x0, #4008]
   24740:	mrs	x1, tpidr_el0
   24744:	ldr	x0, [x1, x0]
   24748:	cbz	x0, 24758 <acc_on_device@@OACC_2.0+0xf0>
   2474c:	ldr	x0, [x0, #8]
   24750:	cbz	x0, 24758 <acc_on_device@@OACC_2.0+0xf0>
   24754:	ret
   24758:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   2475c:	ldr	x0, [x0, #1488]
   24760:	cbz	x0, 2476c <acc_on_device@@OACC_2.0+0x104>
   24764:	mov	w0, #0xffffffff            	// #-1
   24768:	b	23b00 <GOACC_declare@@GOACC_2.0.1+0x780>
   2476c:	mov	w0, #0x1                   	// #1
   24770:	b	8970 <acc_init@plt>
   24774:	nop
   24778:	mov	x1, x0
   2477c:	ldxr	w2, [x1]
   24780:	stlxr	w3, wzr, [x1]
   24784:	cbnz	w3, 2477c <acc_on_device@@OACC_2.0+0x114>
   24788:	tbnz	w2, #31, 24790 <acc_on_device@@OACC_2.0+0x128>
   2478c:	ret
   24790:	b	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   24794:	nop
   24798:	adrp	x6, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   2479c:	ldr	x6, [x6, #4048]
   247a0:	mrs	x7, tpidr_el0
   247a4:	stp	x29, x30, [sp, #-80]!
   247a8:	mov	x29, sp
   247ac:	stp	x23, x24, [sp, #48]
   247b0:	ldr	x23, [x7, x6]
   247b4:	stp	x19, x20, [sp, #16]
   247b8:	stp	x21, x22, [sp, #32]
   247bc:	str	x25, [sp, #64]
   247c0:	cbz	x23, 248a0 <acc_on_device@@OACC_2.0+0x238>
   247c4:	ldr	x6, [x23, #8]
   247c8:	cbz	x6, 248a0 <acc_on_device@@OACC_2.0+0x238>
   247cc:	and	w25, w0, #0xff
   247d0:	ldr	w0, [x6, #8]
   247d4:	mov	x20, x2
   247d8:	mov	x21, x3
   247dc:	mov	x22, x1
   247e0:	tbnz	w0, #0, 24874 <acc_on_device@@OACC_2.0+0x20c>
   247e4:	mov	w19, w4
   247e8:	mov	x24, x5
   247ec:	cmn	w4, #0x1
   247f0:	b.lt	24804 <acc_on_device@@OACC_2.0+0x19c>  // b.tstop
   247f4:	ldr	x1, [x6, #248]
   247f8:	mov	w0, w4
   247fc:	blr	x1
   24800:	ldr	x6, [x23, #8]
   24804:	ldr	w0, [x6, #12]
   24808:	cbnz	w25, 24858 <acc_on_device@@OACC_2.0+0x1f0>
   2480c:	ldr	x4, [x6, #120]
   24810:	mov	x2, x20
   24814:	mov	x3, x21
   24818:	mov	x1, x22
   2481c:	blr	x4
   24820:	and	w20, w0, #0xff
   24824:	cmn	w19, #0x1
   24828:	b.lt	2483c <acc_on_device@@OACC_2.0+0x1d4>  // b.tstop
   2482c:	ldr	x1, [x23, #8]
   24830:	mov	w0, #0xfffffffe            	// #-2
   24834:	ldr	x1, [x1, #248]
   24838:	blr	x1
   2483c:	cbz	w20, 248c0 <acc_on_device@@OACC_2.0+0x258>
   24840:	ldp	x19, x20, [sp, #16]
   24844:	ldp	x21, x22, [sp, #32]
   24848:	ldp	x23, x24, [sp, #48]
   2484c:	ldr	x25, [sp, #64]
   24850:	ldp	x29, x30, [sp], #80
   24854:	ret
   24858:	ldr	x4, [x6, #112]
   2485c:	mov	x1, x20
   24860:	mov	x3, x21
   24864:	mov	x2, x22
   24868:	blr	x4
   2486c:	and	w20, w0, #0xff
   24870:	b	24824 <acc_on_device@@OACC_2.0+0x1bc>
   24874:	mov	x2, x3
   24878:	mov	x0, x20
   2487c:	cbnz	w25, 24888 <acc_on_device@@OACC_2.0+0x220>
   24880:	mov	x1, x20
   24884:	mov	x0, x22
   24888:	ldp	x19, x20, [sp, #16]
   2488c:	ldp	x21, x22, [sp, #32]
   24890:	ldp	x23, x24, [sp, #48]
   24894:	ldr	x25, [sp, #64]
   24898:	ldp	x29, x30, [sp], #80
   2489c:	b	85d0 <memmove@plt>
   248a0:	adrp	x3, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   248a4:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   248a8:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   248ac:	add	x3, x3, #0xcc8
   248b0:	add	x1, x1, #0xa80
   248b4:	add	x0, x0, #0xaa0
   248b8:	mov	w2, #0xa4                  	// #164
   248bc:	bl	8ab0 <__assert_fail@plt>
   248c0:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   248c4:	mov	x1, x24
   248c8:	add	x0, x0, #0xab0
   248cc:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   248d0:	cbz	x0, 2493c <acc_on_device@@OACC_2.0+0x2d4>
   248d4:	add	x4, x1, x2
   248d8:	ldr	x3, [x0, #16]
   248dc:	cmp	x3, x1
   248e0:	b.hi	248f0 <acc_on_device@@OACC_2.0+0x288>  // b.pmore
   248e4:	ldr	x2, [x0, #24]
   248e8:	cmp	x2, x4
   248ec:	b.cs	248fc <acc_on_device@@OACC_2.0+0x294>  // b.hs, b.nlast
   248f0:	ldr	x0, [x0, #40]
   248f4:	cbnz	x0, 248d8 <acc_on_device@@OACC_2.0+0x270>
   248f8:	ret
   248fc:	ldr	x7, [x0, #48]
   24900:	cbz	x7, 2493c <acc_on_device@@OACC_2.0+0x2d4>
   24904:	ldr	x0, [x0, #8]
   24908:	mov	x4, #0x0                   	// #0
   2490c:	nop
   24910:	ldp	x6, x5, [x0]
   24914:	add	x4, x4, #0x1
   24918:	ldr	x2, [x0, #24]
   2491c:	add	x2, x2, x6
   24920:	sub	x2, x2, x3
   24924:	add	x2, x1, x2
   24928:	cmp	x2, x5
   2492c:	b.ls	248f8 <acc_on_device@@OACC_2.0+0x290>  // b.plast
   24930:	add	x0, x0, #0x48
   24934:	cmp	x7, x4
   24938:	b.ne	24910 <acc_on_device@@OACC_2.0+0x2a8>  // b.any
   2493c:	mov	x0, #0x0                   	// #0
   24940:	ret
   24944:	nop
   24948:	stp	x29, x30, [sp, #-144]!
   2494c:	mov	x29, sp
   24950:	stp	x19, x20, [sp, #16]
   24954:	mov	x19, x1
   24958:	stp	x21, x22, [sp, #32]
   2495c:	mov	x22, x2
   24960:	mov	w21, w3
   24964:	stp	x23, x24, [sp, #48]
   24968:	mov	w23, w0
   2496c:	bl	24738 <acc_on_device@@OACC_2.0+0xd0>
   24970:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   24974:	ldr	x1, [x1, #4048]
   24978:	mrs	x0, tpidr_el0
   2497c:	ldr	x0, [x0, x1]
   24980:	ldr	x20, [x0, #8]
   24984:	ldr	w0, [x20, #8]
   24988:	tbnz	w0, #0, 24a38 <acc_on_device@@OACC_2.0+0x3d0>
   2498c:	add	x24, x20, #0xa8
   24990:	mov	w0, #0x1                   	// #1
   24994:	str	x25, [sp, #64]
   24998:	ldaxr	w1, [x24]
   2499c:	cbnz	w1, 249a8 <acc_on_device@@OACC_2.0+0x340>
   249a0:	stxr	w2, w0, [x24]
   249a4:	cbnz	w2, 24998 <acc_on_device@@OACC_2.0+0x330>
   249a8:	cmp	w1, #0x0
   249ac:	b.ne	24a74 <acc_on_device@@OACC_2.0+0x40c>  // b.any
   249b0:	add	x2, x22, x19
   249b4:	add	x1, sp, #0x58
   249b8:	add	x0, x20, #0xa0
   249bc:	stp	x19, x2, [sp, #88]
   249c0:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   249c4:	cbz	x0, 24a80 <acc_on_device@@OACC_2.0+0x418>
   249c8:	ldp	x1, x25, [x0, #16]
   249cc:	cmn	w21, #0x1
   249d0:	ldr	x2, [x0]
   249d4:	ldr	x1, [x1, #16]
   249d8:	add	x25, x19, x25
   249dc:	sub	x1, x1, x2
   249e0:	add	x25, x1, x25
   249e4:	b.lt	249f4 <acc_on_device@@OACC_2.0+0x38c>  // b.tstop
   249e8:	ldr	x1, [x20, #248]
   249ec:	mov	w0, w21
   249f0:	blr	x1
   249f4:	ldr	w0, [x20, #12]
   249f8:	cbnz	w23, 24a4c <acc_on_device@@OACC_2.0+0x3e4>
   249fc:	ldr	x4, [x20, #112]
   24a00:	mov	x3, x22
   24a04:	mov	x2, x25
   24a08:	mov	x1, x19
   24a0c:	blr	x4
   24a10:	cmn	w21, #0x1
   24a14:	b.lt	24a24 <acc_on_device@@OACC_2.0+0x3bc>  // b.tstop
   24a18:	ldr	x1, [x20, #248]
   24a1c:	mov	w0, #0xfffffffe            	// #-2
   24a20:	blr	x1
   24a24:	ldxr	w0, [x24]
   24a28:	stlxr	w1, wzr, [x24]
   24a2c:	cbnz	w1, 24a24 <acc_on_device@@OACC_2.0+0x3bc>
   24a30:	tbnz	w0, #31, 24a64 <acc_on_device@@OACC_2.0+0x3fc>
   24a34:	ldr	x25, [sp, #64]
   24a38:	ldp	x19, x20, [sp, #16]
   24a3c:	ldp	x21, x22, [sp, #32]
   24a40:	ldp	x23, x24, [sp, #48]
   24a44:	ldp	x29, x30, [sp], #144
   24a48:	ret
   24a4c:	ldr	x4, [x20, #120]
   24a50:	mov	x3, x22
   24a54:	mov	x2, x19
   24a58:	mov	x1, x25
   24a5c:	blr	x4
   24a60:	b	24a10 <acc_on_device@@OACC_2.0+0x3a8>
   24a64:	mov	x0, x24
   24a68:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   24a6c:	ldr	x25, [sp, #64]
   24a70:	b	24a38 <acc_on_device@@OACC_2.0+0x3d0>
   24a74:	mov	x0, x24
   24a78:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   24a7c:	b	249b0 <acc_on_device@@OACC_2.0+0x348>
   24a80:	mov	x0, x24
   24a84:	bl	24778 <acc_on_device@@OACC_2.0+0x110>
   24a88:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24a8c:	mov	w2, w22
   24a90:	mov	x1, x19
   24a94:	add	x0, x0, #0xac0
   24a98:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   24a9c:	nop
   24aa0:	adrp	x5, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   24aa4:	ldr	x5, [x5, #4048]
   24aa8:	mrs	x6, tpidr_el0
   24aac:	stp	x29, x30, [sp, #-144]!
   24ab0:	mov	x29, sp
   24ab4:	stp	x19, x20, [sp, #16]
   24ab8:	mov	x20, x1
   24abc:	ldr	x1, [x6, x5]
   24ac0:	stp	x25, x26, [sp, #64]
   24ac4:	ldr	x25, [x1, #8]
   24ac8:	ldr	w1, [x25, #8]
   24acc:	tbnz	w1, #0, 24ba8 <acc_on_device@@OACC_2.0+0x540>
   24ad0:	mov	w26, w3
   24ad4:	stp	x21, x22, [sp, #32]
   24ad8:	add	x21, x25, #0xa8
   24adc:	stp	x23, x24, [sp, #48]
   24ae0:	mov	x24, x2
   24ae4:	mov	w23, w0
   24ae8:	mov	w0, #0x1                   	// #1
   24aec:	ldaxr	w1, [x21]
   24af0:	cbnz	w1, 24afc <acc_on_device@@OACC_2.0+0x494>
   24af4:	stxr	w2, w0, [x21]
   24af8:	cbnz	w2, 24aec <acc_on_device@@OACC_2.0+0x484>
   24afc:	cmp	w1, #0x0
   24b00:	b.ne	24cb8 <acc_on_device@@OACC_2.0+0x650>  // b.any
   24b04:	add	x2, x20, x24
   24b08:	add	x1, sp, #0x58
   24b0c:	add	x0, x25, #0xa0
   24b10:	stp	x20, x2, [sp, #88]
   24b14:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   24b18:	mov	x19, x0
   24b1c:	cbz	x0, 24cd8 <acc_on_device@@OACC_2.0+0x670>
   24b20:	ldp	x7, x22, [x0]
   24b24:	ldp	x5, x1, [x0, #16]
   24b28:	cmp	x20, x7
   24b2c:	sub	x22, x22, x7
   24b30:	ccmp	x24, x22, #0x0, eq  // eq = none
   24b34:	add	x6, x20, x1
   24b38:	ldr	x9, [x5, #16]
   24b3c:	b.ne	24c94 <acc_on_device@@OACC_2.0+0x62c>  // b.any
   24b40:	ldr	x1, [x0, #32]
   24b44:	cmn	x1, #0x1
   24b48:	mov	x0, x1
   24b4c:	b.eq	24bb8 <acc_on_device@@OACC_2.0+0x550>  // b.none
   24b50:	ldr	x8, [x19, #40]
   24b54:	cmp	x1, x8
   24b58:	b.cc	24cc4 <acc_on_device@@OACC_2.0+0x65c>  // b.lo, b.ul, b.last
   24b5c:	tbnz	w23, #1, 24bcc <acc_on_device@@OACC_2.0+0x564>
   24b60:	cbz	x8, 24b70 <acc_on_device@@OACC_2.0+0x508>
   24b64:	sub	x8, x8, #0x1
   24b68:	sub	x1, x1, #0x1
   24b6c:	stp	x1, x8, [x19, #32]
   24b70:	cbnz	x1, 24b90 <acc_on_device@@OACC_2.0+0x528>
   24b74:	ldr	x0, [x5]
   24b78:	cmp	x0, #0x2
   24b7c:	b.eq	24c1c <acc_on_device@@OACC_2.0+0x5b4>  // b.none
   24b80:	tbnz	w23, #0, 24bd8 <acc_on_device@@OACC_2.0+0x570>
   24b84:	mov	x1, x19
   24b88:	mov	x0, x25
   24b8c:	bl	1f8b0 <omp_get_place_proc_ids@@OMP_4.5+0x2fb0>
   24b90:	ldxr	w0, [x21]
   24b94:	stlxr	w1, wzr, [x21]
   24b98:	cbnz	w1, 24b90 <acc_on_device@@OACC_2.0+0x528>
   24b9c:	tbnz	w0, #31, 24c68 <acc_on_device@@OACC_2.0+0x600>
   24ba0:	ldp	x21, x22, [sp, #32]
   24ba4:	ldp	x23, x24, [sp, #48]
   24ba8:	ldp	x19, x20, [sp, #16]
   24bac:	ldp	x25, x26, [sp, #64]
   24bb0:	ldp	x29, x30, [sp], #144
   24bb4:	ret
   24bb8:	stp	xzr, xzr, [x19, #32]
   24bbc:	mov	x1, #0x0                   	// #0
   24bc0:	tbz	w23, #1, 24b70 <acc_on_device@@OACC_2.0+0x508>
   24bc4:	mov	x8, #0x0                   	// #0
   24bc8:	mov	x0, #0x0                   	// #0
   24bcc:	sub	x1, x0, x8
   24bd0:	stp	x1, xzr, [x19, #32]
   24bd4:	b	24b70 <acc_on_device@@OACC_2.0+0x508>
   24bd8:	sub	x7, x9, x7
   24bdc:	cmn	w26, #0x1
   24be0:	add	x22, x7, x6
   24be4:	b.lt	24c4c <acc_on_device@@OACC_2.0+0x5e4>  // b.tstop
   24be8:	ldr	x1, [x25, #248]
   24bec:	mov	w0, w26
   24bf0:	blr	x1
   24bf4:	ldr	w0, [x25, #12]
   24bf8:	mov	x1, x20
   24bfc:	ldr	x4, [x25, #112]
   24c00:	mov	x3, x24
   24c04:	mov	x2, x22
   24c08:	blr	x4
   24c0c:	ldr	x1, [x25, #248]
   24c10:	mov	w0, #0xfffffffe            	// #-2
   24c14:	blr	x1
   24c18:	b	24b84 <acc_on_device@@OACC_2.0+0x51c>
   24c1c:	ldr	x2, [x25, #176]
   24c20:	cbz	x2, 24b80 <acc_on_device@@OACC_2.0+0x518>
   24c24:	cmp	x5, x2
   24c28:	ldr	x1, [x2, #40]
   24c2c:	b.eq	24c7c <acc_on_device@@OACC_2.0+0x614>  // b.none
   24c30:	cbz	x1, 24b80 <acc_on_device@@OACC_2.0+0x518>
   24c34:	cmp	x5, x1
   24c38:	ldr	x0, [x1, #40]
   24c3c:	b.eq	24c88 <acc_on_device@@OACC_2.0+0x620>  // b.none
   24c40:	mov	x2, x1
   24c44:	mov	x1, x0
   24c48:	b	24c30 <acc_on_device@@OACC_2.0+0x5c8>
   24c4c:	ldr	w0, [x25, #12]
   24c50:	mov	x3, x24
   24c54:	ldr	x4, [x25, #112]
   24c58:	mov	x2, x22
   24c5c:	mov	x1, x20
   24c60:	blr	x4
   24c64:	b	24b84 <acc_on_device@@OACC_2.0+0x51c>
   24c68:	mov	x0, x21
   24c6c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   24c70:	ldp	x21, x22, [sp, #32]
   24c74:	ldp	x23, x24, [sp, #48]
   24c78:	b	24ba8 <acc_on_device@@OACC_2.0+0x540>
   24c7c:	str	x1, [x25, #176]
   24c80:	tbz	w23, #0, 24b84 <acc_on_device@@OACC_2.0+0x51c>
   24c84:	b	24bd8 <acc_on_device@@OACC_2.0+0x570>
   24c88:	str	x0, [x2, #40]
   24c8c:	tbz	w23, #0, 24b84 <acc_on_device@@OACC_2.0+0x51c>
   24c90:	b	24bd8 <acc_on_device@@OACC_2.0+0x570>
   24c94:	mov	x0, x21
   24c98:	bl	24778 <acc_on_device@@OACC_2.0+0x110>
   24c9c:	ldr	x1, [x19]
   24ca0:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24ca4:	mov	w4, w24
   24ca8:	mov	x3, x20
   24cac:	mov	w2, w22
   24cb0:	add	x0, x0, #0xad8
   24cb4:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   24cb8:	mov	x0, x21
   24cbc:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   24cc0:	b	24b04 <acc_on_device@@OACC_2.0+0x49c>
   24cc4:	mov	x0, x21
   24cc8:	bl	24778 <acc_on_device@@OACC_2.0+0x110>
   24ccc:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24cd0:	add	x0, x0, #0xaf8
   24cd4:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   24cd8:	mov	x0, x21
   24cdc:	bl	24778 <acc_on_device@@OACC_2.0+0x110>
   24ce0:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24ce4:	mov	w2, w24
   24ce8:	mov	x1, x20
   24cec:	add	x0, x0, #0xac0
   24cf0:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   24cf4:	nop
   24cf8:	stp	x29, x30, [sp, #-144]!
   24cfc:	cmp	x1, #0x0
   24d00:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   24d04:	mov	x29, sp
   24d08:	stp	x19, x20, [sp, #16]
   24d0c:	stp	x21, x22, [sp, #32]
   24d10:	stp	x23, x24, [sp, #48]
   24d14:	str	x2, [sp, #72]
   24d18:	b.eq	24f10 <acc_on_device@@OACC_2.0+0x8a8>  // b.none
   24d1c:	mov	x19, x1
   24d20:	mov	w20, w0
   24d24:	mov	w23, w3
   24d28:	bl	24738 <acc_on_device@@OACC_2.0+0xd0>
   24d2c:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   24d30:	ldr	x0, [x0, #4048]
   24d34:	mrs	x1, tpidr_el0
   24d38:	ldr	x0, [x1, x0]
   24d3c:	ldr	x22, [x0, #8]
   24d40:	ldr	w0, [x22, #8]
   24d44:	tbnz	w0, #0, 24df4 <acc_on_device@@OACC_2.0+0x78c>
   24d48:	add	x21, x22, #0xa8
   24d4c:	mov	w0, #0x1                   	// #1
   24d50:	ldaxr	w1, [x21]
   24d54:	cbnz	w1, 24d60 <acc_on_device@@OACC_2.0+0x6f8>
   24d58:	stxr	w2, w0, [x21]
   24d5c:	cbnz	w2, 24d50 <acc_on_device@@OACC_2.0+0x6e8>
   24d60:	cmp	w1, #0x0
   24d64:	b.ne	24f1c <acc_on_device@@OACC_2.0+0x8b4>  // b.any
   24d68:	ldr	x3, [sp, #72]
   24d6c:	add	x24, sp, #0x58
   24d70:	mov	x1, x24
   24d74:	add	x0, x22, #0xa0
   24d78:	add	x3, x3, x19
   24d7c:	stp	x19, x3, [sp, #88]
   24d80:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   24d84:	cbz	x0, 24e10 <acc_on_device@@OACC_2.0+0x7a8>
   24d88:	ldp	x1, x3, [x0, #16]
   24d8c:	ldr	x23, [x1, #16]
   24d90:	add	x23, x23, x3
   24d94:	tbz	w20, #0, 24f44 <acc_on_device@@OACC_2.0+0x8dc>
   24d98:	ldr	x1, [sp, #72]
   24d9c:	ldr	x2, [x0, #8]
   24da0:	add	x1, x19, x1
   24da4:	cmp	x1, x2
   24da8:	b.hi	24f28 <acc_on_device@@OACC_2.0+0x8c0>  // b.pmore
   24dac:	ldr	x1, [x0, #32]
   24db0:	cmn	x1, #0x1
   24db4:	b.eq	24dcc <acc_on_device@@OACC_2.0+0x764>  // b.none
   24db8:	ldr	x2, [x0, #40]
   24dbc:	add	x1, x1, #0x1
   24dc0:	str	x1, [x0, #32]
   24dc4:	add	x1, x2, #0x1
   24dc8:	str	x1, [x0, #40]
   24dcc:	ldxr	w0, [x21]
   24dd0:	stlxr	w1, wzr, [x21]
   24dd4:	cbnz	w1, 24dcc <acc_on_device@@OACC_2.0+0x764>
   24dd8:	tbnz	w0, #31, 24ec0 <acc_on_device@@OACC_2.0+0x858>
   24ddc:	mov	x0, x23
   24de0:	ldp	x19, x20, [sp, #16]
   24de4:	ldp	x21, x22, [sp, #32]
   24de8:	ldp	x23, x24, [sp, #48]
   24dec:	ldp	x29, x30, [sp], #144
   24df0:	ret
   24df4:	mov	x23, x19
   24df8:	mov	x0, x23
   24dfc:	ldp	x19, x20, [sp, #16]
   24e00:	ldp	x21, x22, [sp, #32]
   24e04:	ldp	x23, x24, [sp, #48]
   24e08:	ldp	x29, x30, [sp], #144
   24e0c:	ret
   24e10:	tbz	w20, #1, 24f28 <acc_on_device@@OACC_2.0+0x8c0>
   24e14:	ubfx	x20, x20, #2, #1
   24e18:	strh	w20, [sp, #86]
   24e1c:	str	x19, [sp, #88]
   24e20:	ldxr	w0, [x21]
   24e24:	stlxr	w1, wzr, [x21]
   24e28:	cbnz	w1, 24e20 <acc_on_device@@OACC_2.0+0x7b8>
   24e2c:	tbnz	w0, #31, 24f04 <acc_on_device@@OACC_2.0+0x89c>
   24e30:	cmn	w23, #0x1
   24e34:	b.lt	24ecc <acc_on_device@@OACC_2.0+0x864>  // b.tstop
   24e38:	ldr	x1, [x22, #248]
   24e3c:	mov	w0, w23
   24e40:	blr	x1
   24e44:	mov	x2, x24
   24e48:	mov	x3, #0x0                   	// #0
   24e4c:	mov	x1, #0x1                   	// #1
   24e50:	add	x5, sp, #0x56
   24e54:	add	x4, sp, #0x48
   24e58:	mov	x0, x22
   24e5c:	mov	w7, #0x0                   	// #0
   24e60:	mov	w6, #0x1                   	// #1
   24e64:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   24e68:	mov	x19, x0
   24e6c:	ldr	x1, [x22, #248]
   24e70:	mov	x3, #0x1                   	// #1
   24e74:	ldr	x2, [x19, #64]
   24e78:	mov	w0, #0xfffffffe            	// #-2
   24e7c:	str	x3, [x2, #40]
   24e80:	blr	x1
   24e84:	mov	w0, #0x1                   	// #1
   24e88:	ldaxr	w1, [x21]
   24e8c:	cbnz	w1, 24e98 <acc_on_device@@OACC_2.0+0x830>
   24e90:	stxr	w2, w0, [x21]
   24e94:	cbnz	w2, 24e88 <acc_on_device@@OACC_2.0+0x820>
   24e98:	cmp	w1, #0x0
   24e9c:	b.ne	24f68 <acc_on_device@@OACC_2.0+0x900>  // b.any
   24ea0:	ldr	x0, [x22, #176]
   24ea4:	str	x0, [x19, #40]
   24ea8:	ldr	x23, [x19, #32]
   24eac:	str	x19, [x22, #176]
   24eb0:	ldxr	w0, [x21]
   24eb4:	stlxr	w1, wzr, [x21]
   24eb8:	cbnz	w1, 24eb0 <acc_on_device@@OACC_2.0+0x848>
   24ebc:	tbz	w0, #31, 24ddc <acc_on_device@@OACC_2.0+0x774>
   24ec0:	mov	x0, x21
   24ec4:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   24ec8:	b	24ddc <acc_on_device@@OACC_2.0+0x774>
   24ecc:	mov	x1, #0x1                   	// #1
   24ed0:	mov	x2, x24
   24ed4:	add	x5, sp, #0x56
   24ed8:	add	x4, sp, #0x48
   24edc:	mov	x0, x22
   24ee0:	mov	w7, #0x0                   	// #0
   24ee4:	mov	w6, #0x1                   	// #1
   24ee8:	mov	x3, #0x0                   	// #0
   24eec:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   24ef0:	mov	x19, x0
   24ef4:	ldr	x0, [x0, #64]
   24ef8:	mov	x1, #0x1                   	// #1
   24efc:	str	x1, [x0, #40]
   24f00:	b	24e84 <acc_on_device@@OACC_2.0+0x81c>
   24f04:	mov	x0, x21
   24f08:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   24f0c:	b	24e30 <acc_on_device@@OACC_2.0+0x7c8>
   24f10:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24f14:	add	x0, x0, #0xb20
   24f18:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   24f1c:	mov	x0, x21
   24f20:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   24f24:	b	24d68 <acc_on_device@@OACC_2.0+0x700>
   24f28:	mov	x0, x21
   24f2c:	bl	24778 <acc_on_device@@OACC_2.0+0x110>
   24f30:	ldr	w2, [sp, #72]
   24f34:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24f38:	mov	x1, x19
   24f3c:	add	x0, x0, #0xb60
   24f40:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   24f44:	mov	x0, x21
   24f48:	bl	24778 <acc_on_device@@OACC_2.0+0x110>
   24f4c:	ldr	x2, [sp, #72]
   24f50:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24f54:	mov	x3, x23
   24f58:	mov	x1, x19
   24f5c:	add	x0, x0, #0xb38
   24f60:	mov	w4, w2
   24f64:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   24f68:	mov	x0, x21
   24f6c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   24f70:	b	24ea0 <acc_on_device@@OACC_2.0+0x838>
   24f74:	nop

0000000000024f78 <acc_malloc@@OACC_2.0>:
   24f78:	cbz	x0, 24fcc <acc_malloc@@OACC_2.0+0x54>
   24f7c:	stp	x29, x30, [sp, #-32]!
   24f80:	mov	x29, sp
   24f84:	str	x19, [sp, #16]
   24f88:	mov	x19, x0
   24f8c:	bl	24738 <acc_on_device@@OACC_2.0+0xd0>
   24f90:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   24f94:	ldr	x0, [x0, #4048]
   24f98:	mrs	x1, tpidr_el0
   24f9c:	ldr	x0, [x1, x0]
   24fa0:	ldr	x2, [x0, #8]
   24fa4:	cbz	x2, 24fe0 <acc_malloc@@OACC_2.0+0x68>
   24fa8:	ldr	w0, [x2, #8]
   24fac:	tbnz	w0, #0, 24fd0 <acc_malloc@@OACC_2.0+0x58>
   24fb0:	mov	x1, x19
   24fb4:	ldr	w0, [x2, #12]
   24fb8:	ldr	x19, [sp, #16]
   24fbc:	ldp	x29, x30, [sp], #32
   24fc0:	ldr	x2, [x2, #96]
   24fc4:	mov	x16, x2
   24fc8:	br	x16
   24fcc:	ret
   24fd0:	mov	x0, x19
   24fd4:	ldr	x19, [sp, #16]
   24fd8:	ldp	x29, x30, [sp], #32
   24fdc:	b	8760 <malloc@plt>
   24fe0:	adrp	x3, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24fe4:	add	x3, x3, #0xcc8
   24fe8:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24fec:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   24ff0:	add	x3, x3, #0x18
   24ff4:	add	x1, x1, #0xa80
   24ff8:	add	x0, x0, #0xb78
   24ffc:	mov	w2, #0x6a                  	// #106
   25000:	bl	8ab0 <__assert_fail@plt>
   25004:	nop

0000000000025008 <acc_memcpy_to_device@@OACC_2.0>:
   25008:	mov	x4, x1
   2500c:	adrp	x5, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25010:	add	x5, x5, #0xcc8
   25014:	mov	x1, x0
   25018:	mov	x3, x2
   2501c:	add	x5, x5, #0x28
   25020:	mov	x2, x4
   25024:	mov	w0, #0x0                   	// #0
   25028:	mov	w4, #0xfffffffe            	// #-2
   2502c:	b	24798 <acc_on_device@@OACC_2.0+0x130>

0000000000025030 <acc_memcpy_to_device_async@@OACC_2.5>:
   25030:	mov	x4, x1
   25034:	mov	x6, x2
   25038:	adrp	x5, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   2503c:	add	x5, x5, #0xcc8
   25040:	mov	x1, x0
   25044:	mov	x2, x4
   25048:	add	x5, x5, #0x40
   2504c:	mov	w4, w3
   25050:	mov	w0, #0x0                   	// #0
   25054:	mov	x3, x6
   25058:	b	24798 <acc_on_device@@OACC_2.0+0x130>
   2505c:	nop

0000000000025060 <acc_memcpy_from_device@@OACC_2.0>:
   25060:	adrp	x5, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25064:	add	x5, x5, #0xcc8
   25068:	mov	x3, x2
   2506c:	add	x5, x5, #0x60
   25070:	mov	x2, x0
   25074:	mov	w4, #0xfffffffe            	// #-2
   25078:	mov	w0, #0x1                   	// #1
   2507c:	b	24798 <acc_on_device@@OACC_2.0+0x130>

0000000000025080 <acc_memcpy_from_device_async@@OACC_2.5>:
   25080:	mov	x6, x2
   25084:	adrp	x5, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25088:	add	x5, x5, #0xcc8
   2508c:	mov	x2, x0
   25090:	mov	w4, w3
   25094:	add	x5, x5, #0x78
   25098:	mov	x3, x6
   2509c:	mov	w0, #0x1                   	// #1
   250a0:	b	24798 <acc_on_device@@OACC_2.0+0x130>
   250a4:	nop

00000000000250a8 <acc_deviceptr@@OACC_2.0>:
   250a8:	stp	x29, x30, [sp, #-112]!
   250ac:	mov	x29, sp
   250b0:	stp	x19, x20, [sp, #16]
   250b4:	mov	x20, x0
   250b8:	bl	24738 <acc_on_device@@OACC_2.0+0xd0>
   250bc:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   250c0:	ldr	x0, [x0, #4048]
   250c4:	mrs	x1, tpidr_el0
   250c8:	ldr	x0, [x1, x0]
   250cc:	ldr	x19, [x0, #8]
   250d0:	ldr	w0, [x19, #8]
   250d4:	tbnz	w0, #0, 25154 <acc_deviceptr@@OACC_2.0+0xac>
   250d8:	str	x21, [sp, #32]
   250dc:	add	x21, x19, #0xa8
   250e0:	mov	w0, #0x1                   	// #1
   250e4:	ldaxr	w1, [x21]
   250e8:	cbnz	w1, 250f4 <acc_deviceptr@@OACC_2.0+0x4c>
   250ec:	stxr	w2, w0, [x21]
   250f0:	cbnz	w2, 250e4 <acc_deviceptr@@OACC_2.0+0x3c>
   250f4:	cmp	w1, #0x0
   250f8:	b.ne	25188 <acc_deviceptr@@OACC_2.0+0xe0>  // b.any
   250fc:	add	x2, x20, #0x1
   25100:	add	x0, x19, #0xa0
   25104:	add	x1, sp, #0x38
   25108:	stp	x20, x2, [sp, #56]
   2510c:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   25110:	mov	x19, x0
   25114:	cbz	x0, 25168 <acc_deviceptr@@OACC_2.0+0xc0>
   25118:	ldr	x2, [x0]
   2511c:	ldp	x0, x1, [x0, #16]
   25120:	ldr	x0, [x0, #16]
   25124:	sub	x19, x0, x2
   25128:	add	x19, x19, x1
   2512c:	add	x19, x20, x19
   25130:	ldxr	w0, [x21]
   25134:	stlxr	w1, wzr, [x21]
   25138:	cbnz	w1, 25130 <acc_deviceptr@@OACC_2.0+0x88>
   2513c:	tbnz	w0, #31, 25178 <acc_deviceptr@@OACC_2.0+0xd0>
   25140:	ldr	x21, [sp, #32]
   25144:	mov	x0, x19
   25148:	ldp	x19, x20, [sp, #16]
   2514c:	ldp	x29, x30, [sp], #112
   25150:	ret
   25154:	mov	x19, x20
   25158:	mov	x0, x19
   2515c:	ldp	x19, x20, [sp, #16]
   25160:	ldp	x29, x30, [sp], #112
   25164:	ret
   25168:	ldxr	w0, [x21]
   2516c:	stlxr	w1, wzr, [x21]
   25170:	cbnz	w1, 25168 <acc_deviceptr@@OACC_2.0+0xc0>
   25174:	tbz	w0, #31, 25140 <acc_deviceptr@@OACC_2.0+0x98>
   25178:	mov	x0, x21
   2517c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   25180:	ldr	x21, [sp, #32]
   25184:	b	25144 <acc_deviceptr@@OACC_2.0+0x9c>
   25188:	mov	x0, x21
   2518c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   25190:	b	250fc <acc_deviceptr@@OACC_2.0+0x54>
   25194:	nop

0000000000025198 <acc_hostptr@@OACC_2.0>:
   25198:	stp	x29, x30, [sp, #-48]!
   2519c:	mov	x29, sp
   251a0:	stp	x19, x20, [sp, #16]
   251a4:	mov	x19, x0
   251a8:	str	x21, [sp, #32]
   251ac:	bl	24738 <acc_on_device@@OACC_2.0+0xd0>
   251b0:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   251b4:	ldr	x0, [x0, #4048]
   251b8:	mrs	x1, tpidr_el0
   251bc:	ldr	x0, [x1, x0]
   251c0:	ldr	x21, [x0, #8]
   251c4:	ldr	w0, [x21, #8]
   251c8:	tbnz	w0, #0, 2522c <acc_hostptr@@OACC_2.0+0x94>
   251cc:	add	x20, x21, #0xa8
   251d0:	mov	w0, #0x1                   	// #1
   251d4:	ldaxr	w1, [x20]
   251d8:	cbnz	w1, 251e4 <acc_hostptr@@OACC_2.0+0x4c>
   251dc:	stxr	w2, w0, [x20]
   251e0:	cbnz	w2, 251d4 <acc_hostptr@@OACC_2.0+0x3c>
   251e4:	cmp	w1, #0x0
   251e8:	b.ne	25260 <acc_hostptr@@OACC_2.0+0xc8>  // b.any
   251ec:	ldr	x0, [x21, #176]
   251f0:	cbz	x0, 25240 <acc_hostptr@@OACC_2.0+0xa8>
   251f4:	mov	x1, x19
   251f8:	mov	x2, #0x1                   	// #1
   251fc:	bl	248d0 <acc_on_device@@OACC_2.0+0x268>
   25200:	cbz	x0, 25240 <acc_hostptr@@OACC_2.0+0xa8>
   25204:	ldr	x2, [x0]
   25208:	ldp	x1, x0, [x0, #16]
   2520c:	ldr	x1, [x1, #16]
   25210:	add	x0, x0, x2
   25214:	sub	x0, x0, x1
   25218:	add	x19, x19, x0
   2521c:	ldxr	w0, [x20]
   25220:	stlxr	w1, wzr, [x20]
   25224:	cbnz	w1, 2521c <acc_hostptr@@OACC_2.0+0x84>
   25228:	tbnz	w0, #31, 25254 <acc_hostptr@@OACC_2.0+0xbc>
   2522c:	mov	x0, x19
   25230:	ldp	x19, x20, [sp, #16]
   25234:	ldr	x21, [sp, #32]
   25238:	ldp	x29, x30, [sp], #48
   2523c:	ret
   25240:	ldxr	w0, [x20]
   25244:	stlxr	w1, wzr, [x20]
   25248:	cbnz	w1, 25240 <acc_hostptr@@OACC_2.0+0xa8>
   2524c:	mov	x19, #0x0                   	// #0
   25250:	tbz	w0, #31, 2522c <acc_hostptr@@OACC_2.0+0x94>
   25254:	mov	x0, x20
   25258:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   2525c:	b	2522c <acc_hostptr@@OACC_2.0+0x94>
   25260:	mov	x0, x20
   25264:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   25268:	b	251ec <acc_hostptr@@OACC_2.0+0x54>
   2526c:	nop

0000000000025270 <acc_is_present@@OACC_2.0>:
   25270:	stp	x29, x30, [sp, #-128]!
   25274:	cmp	x1, #0x0
   25278:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2527c:	mov	x29, sp
   25280:	stp	x21, x22, [sp, #32]
   25284:	mov	w21, #0x0                   	// #0
   25288:	b.ne	2529c <acc_is_present@@OACC_2.0+0x2c>  // b.any
   2528c:	mov	w0, w21
   25290:	ldp	x21, x22, [sp, #32]
   25294:	ldp	x29, x30, [sp], #128
   25298:	ret
   2529c:	stp	x19, x20, [sp, #16]
   252a0:	mov	x20, x1
   252a4:	mov	x19, x0
   252a8:	str	x23, [sp, #48]
   252ac:	bl	24738 <acc_on_device@@OACC_2.0+0xd0>
   252b0:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   252b4:	ldr	x0, [x0, #4048]
   252b8:	mrs	x1, tpidr_el0
   252bc:	mov	w21, #0x1                   	// #1
   252c0:	ldr	x0, [x1, x0]
   252c4:	ldr	x23, [x0, #8]
   252c8:	ldr	w0, [x23, #8]
   252cc:	tbnz	w0, #0, 25324 <acc_is_present@@OACC_2.0+0xb4>
   252d0:	add	x22, x23, #0xa8
   252d4:	ldaxr	w1, [x22]
   252d8:	cbnz	w1, 252e4 <acc_is_present@@OACC_2.0+0x74>
   252dc:	stxr	w0, w21, [x22]
   252e0:	cbnz	w0, 252d4 <acc_is_present@@OACC_2.0+0x64>
   252e4:	cmp	w1, #0x0
   252e8:	b.ne	2536c <acc_is_present@@OACC_2.0+0xfc>  // b.any
   252ec:	add	x0, x23, #0xa0
   252f0:	add	x1, sp, #0x48
   252f4:	add	x23, x20, x19
   252f8:	mov	w21, #0x0                   	// #0
   252fc:	stp	x19, x23, [sp, #72]
   25300:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   25304:	cbz	x0, 25314 <acc_is_present@@OACC_2.0+0xa4>
   25308:	ldr	x1, [x0]
   2530c:	cmp	x19, x1
   25310:	b.cs	2533c <acc_is_present@@OACC_2.0+0xcc>  // b.hs, b.nlast
   25314:	ldxr	w0, [x22]
   25318:	stlxr	w1, wzr, [x22]
   2531c:	cbnz	w1, 25314 <acc_is_present@@OACC_2.0+0xa4>
   25320:	tbnz	w0, #31, 25358 <acc_is_present@@OACC_2.0+0xe8>
   25324:	mov	w0, w21
   25328:	ldp	x19, x20, [sp, #16]
   2532c:	ldp	x21, x22, [sp, #32]
   25330:	ldr	x23, [sp, #48]
   25334:	ldp	x29, x30, [sp], #128
   25338:	ret
   2533c:	ldr	x0, [x0, #8]
   25340:	cmp	x23, x0
   25344:	b.hi	25314 <acc_is_present@@OACC_2.0+0xa4>  // b.pmore
   25348:	sub	x1, x0, x1
   2534c:	cmp	x20, x1
   25350:	cset	w21, ls  // ls = plast
   25354:	b	25314 <acc_is_present@@OACC_2.0+0xa4>
   25358:	mov	x0, x22
   2535c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   25360:	ldp	x19, x20, [sp, #16]
   25364:	ldr	x23, [sp, #48]
   25368:	b	2528c <acc_is_present@@OACC_2.0+0x1c>
   2536c:	mov	x0, x22
   25370:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   25374:	b	252ec <acc_is_present@@OACC_2.0+0x7c>

0000000000025378 <acc_map_data@@OACC_2.0>:
   25378:	stp	x29, x30, [sp, #-160]!
   2537c:	mov	x29, sp
   25380:	stp	x19, x20, [sp, #16]
   25384:	mov	x20, x0
   25388:	stp	x21, x22, [sp, #32]
   2538c:	mov	x22, x2
   25390:	stp	x23, x24, [sp, #48]
   25394:	mov	x23, x1
   25398:	strh	wzr, [sp, #78]
   2539c:	stp	x0, x1, [sp, #80]
   253a0:	str	x2, [sp, #96]
   253a4:	bl	24738 <acc_on_device@@OACC_2.0+0xd0>
   253a8:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   253ac:	ldr	x0, [x0, #4048]
   253b0:	mrs	x1, tpidr_el0
   253b4:	ldr	x24, [x1, x0]
   253b8:	ldr	x21, [x24, #8]
   253bc:	ldr	w0, [x21, #8]
   253c0:	tbz	w0, #0, 25420 <acc_map_data@@OACC_2.0+0xa8>
   253c4:	cmp	x20, x23
   253c8:	b.ne	254f4 <acc_map_data@@OACC_2.0+0x17c>  // b.any
   253cc:	add	x19, x21, #0xa8
   253d0:	mov	x20, #0x0                   	// #0
   253d4:	mov	w0, #0x1                   	// #1
   253d8:	ldaxr	w1, [x19]
   253dc:	cbnz	w1, 253e8 <acc_map_data@@OACC_2.0+0x70>
   253e0:	stxr	w2, w0, [x19]
   253e4:	cbnz	w2, 253d8 <acc_map_data@@OACC_2.0+0x60>
   253e8:	cmp	w1, #0x0
   253ec:	b.ne	2550c <acc_map_data@@OACC_2.0+0x194>  // b.any
   253f0:	ldr	x0, [x21, #176]
   253f4:	str	x0, [x20, #40]
   253f8:	str	x20, [x21, #176]
   253fc:	ldxr	w0, [x19]
   25400:	stlxr	w1, wzr, [x19]
   25404:	cbnz	w1, 253fc <acc_map_data@@OACC_2.0+0x84>
   25408:	tbnz	w0, #31, 254cc <acc_map_data@@OACC_2.0+0x154>
   2540c:	ldp	x19, x20, [sp, #16]
   25410:	ldp	x21, x22, [sp, #32]
   25414:	ldp	x23, x24, [sp, #48]
   25418:	ldp	x29, x30, [sp], #160
   2541c:	ret
   25420:	cmp	x23, #0x0
   25424:	ccmp	x22, #0x0, #0x4, ne  // ne = any
   25428:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   2542c:	b.eq	254d8 <acc_map_data@@OACC_2.0+0x160>  // b.none
   25430:	add	x19, x21, #0xa8
   25434:	mov	w0, #0x1                   	// #1
   25438:	ldaxr	w1, [x19]
   2543c:	cbnz	w1, 25448 <acc_map_data@@OACC_2.0+0xd0>
   25440:	stxr	w2, w0, [x19]
   25444:	cbnz	w2, 25438 <acc_map_data@@OACC_2.0+0xc0>
   25448:	cmp	w1, #0x0
   2544c:	b.ne	25518 <acc_map_data@@OACC_2.0+0x1a0>  // b.any
   25450:	add	x2, x22, x20
   25454:	add	x1, sp, #0x68
   25458:	add	x0, x21, #0xa0
   2545c:	stp	x20, x2, [sp, #104]
   25460:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   25464:	cbnz	x0, 25524 <acc_map_data@@OACC_2.0+0x1ac>
   25468:	ldr	x0, [x24, #8]
   2546c:	ldr	x0, [x0, #176]
   25470:	cbz	x0, 25484 <acc_map_data@@OACC_2.0+0x10c>
   25474:	mov	x2, x22
   25478:	mov	x1, x23
   2547c:	bl	248d0 <acc_on_device@@OACC_2.0+0x268>
   25480:	cbnz	x0, 25540 <acc_map_data@@OACC_2.0+0x1c8>
   25484:	ldxr	w0, [x19]
   25488:	stlxr	w1, wzr, [x19]
   2548c:	cbnz	w1, 25484 <acc_map_data@@OACC_2.0+0x10c>
   25490:	tbnz	w0, #31, 25500 <acc_map_data@@OACC_2.0+0x188>
   25494:	mov	x1, #0x1                   	// #1
   25498:	add	x5, sp, #0x4e
   2549c:	add	x4, sp, #0x60
   254a0:	add	x3, sp, #0x58
   254a4:	add	x2, sp, #0x50
   254a8:	mov	x0, x21
   254ac:	mov	w7, #0x0                   	// #0
   254b0:	mov	w6, #0x1                   	// #1
   254b4:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   254b8:	mov	x20, x0
   254bc:	ldr	x0, [x0, #64]
   254c0:	mov	x1, #0xffffffffffffffff    	// #-1
   254c4:	str	x1, [x0, #32]
   254c8:	b	253d4 <acc_map_data@@OACC_2.0+0x5c>
   254cc:	mov	x0, x19
   254d0:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   254d4:	b	2540c <acc_map_data@@OACC_2.0+0x94>
   254d8:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   254dc:	mov	x3, x23
   254e0:	mov	x1, x20
   254e4:	mov	w4, w22
   254e8:	add	x0, x0, #0xbb0
   254ec:	mov	w2, w22
   254f0:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   254f4:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   254f8:	add	x0, x0, #0xb88
   254fc:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   25500:	mov	x0, x19
   25504:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   25508:	b	25494 <acc_map_data@@OACC_2.0+0x11c>
   2550c:	mov	x0, x19
   25510:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   25514:	b	253f0 <acc_map_data@@OACC_2.0+0x78>
   25518:	mov	x0, x19
   2551c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   25520:	b	25450 <acc_map_data@@OACC_2.0+0xd8>
   25524:	mov	x0, x19
   25528:	bl	24778 <acc_on_device@@OACC_2.0+0x110>
   2552c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25530:	mov	w2, w22
   25534:	mov	x1, x20
   25538:	add	x0, x0, #0xbd0
   2553c:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   25540:	mov	x0, x19
   25544:	bl	24778 <acc_on_device@@OACC_2.0+0x110>
   25548:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   2554c:	mov	w2, w22
   25550:	mov	x1, x23
   25554:	add	x0, x0, #0xc00
   25558:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   2555c:	nop

0000000000025560 <acc_unmap_data@@OACC_2.0>:
   25560:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   25564:	ldr	x1, [x1, #4048]
   25568:	mrs	x2, tpidr_el0
   2556c:	stp	x29, x30, [sp, #-128]!
   25570:	mov	x29, sp
   25574:	stp	x19, x20, [sp, #16]
   25578:	mov	x19, x0
   2557c:	ldr	x0, [x2, x1]
   25580:	stp	x21, x22, [sp, #32]
   25584:	ldr	x21, [x0, #8]
   25588:	ldr	w0, [x21, #8]
   2558c:	tbnz	w0, #0, 25614 <acc_unmap_data@@OACC_2.0+0xb4>
   25590:	add	x22, x21, #0xa8
   25594:	mov	w0, #0x1                   	// #1
   25598:	str	x23, [sp, #48]
   2559c:	ldaxr	w1, [x22]
   255a0:	cbnz	w1, 255ac <acc_unmap_data@@OACC_2.0+0x4c>
   255a4:	stxr	w2, w0, [x22]
   255a8:	cbnz	w2, 2559c <acc_unmap_data@@OACC_2.0+0x3c>
   255ac:	cmp	w1, #0x0
   255b0:	b.ne	2567c <acc_unmap_data@@OACC_2.0+0x11c>  // b.any
   255b4:	add	x2, x19, #0x1
   255b8:	add	x1, sp, #0x48
   255bc:	add	x0, x21, #0xa0
   255c0:	stp	x19, x2, [sp, #72]
   255c4:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   255c8:	mov	x20, x0
   255cc:	cbz	x0, 256ac <acc_unmap_data@@OACC_2.0+0x14c>
   255d0:	ldr	x23, [x0]
   255d4:	cmp	x23, x19
   255d8:	b.ne	25688 <acc_unmap_data@@OACC_2.0+0x128>  // b.any
   255dc:	ldr	x19, [x20, #16]
   255e0:	mov	x0, #0x1                   	// #1
   255e4:	str	x0, [x20, #32]
   255e8:	ldr	x0, [x19]
   255ec:	cmp	x0, #0x2
   255f0:	b.eq	25624 <acc_unmap_data@@OACC_2.0+0xc4>  // b.none
   255f4:	ldxr	w0, [x22]
   255f8:	stlxr	w1, wzr, [x22]
   255fc:	cbnz	w1, 255f4 <acc_unmap_data@@OACC_2.0+0x94>
   25600:	tbnz	w0, #31, 25668 <acc_unmap_data@@OACC_2.0+0x108>
   25604:	mov	x0, x19
   25608:	mov	w1, #0x1                   	// #1
   2560c:	bl	1fb38 <omp_get_place_proc_ids@@OMP_4.5+0x3238>
   25610:	ldr	x23, [sp, #48]
   25614:	ldp	x19, x20, [sp, #16]
   25618:	ldp	x21, x22, [sp, #32]
   2561c:	ldp	x29, x30, [sp], #128
   25620:	ret
   25624:	ldr	x2, [x21, #176]
   25628:	stp	xzr, xzr, [x19, #24]
   2562c:	cbz	x2, 25658 <acc_unmap_data@@OACC_2.0+0xf8>
   25630:	cmp	x19, x2
   25634:	ldr	x0, [x2, #40]
   25638:	b.eq	25674 <acc_unmap_data@@OACC_2.0+0x114>  // b.none
   2563c:	cbz	x0, 25658 <acc_unmap_data@@OACC_2.0+0xf8>
   25640:	cmp	x0, x19
   25644:	ldr	x1, [x0, #40]
   25648:	b.eq	25660 <acc_unmap_data@@OACC_2.0+0x100>  // b.none
   2564c:	mov	x2, x0
   25650:	mov	x0, x1
   25654:	cbnz	x0, 25640 <acc_unmap_data@@OACC_2.0+0xe0>
   25658:	mov	x19, #0x0                   	// #0
   2565c:	b	255f4 <acc_unmap_data@@OACC_2.0+0x94>
   25660:	str	x1, [x2, #40]
   25664:	b	255f4 <acc_unmap_data@@OACC_2.0+0x94>
   25668:	mov	x0, x22
   2566c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   25670:	b	25604 <acc_unmap_data@@OACC_2.0+0xa4>
   25674:	str	x0, [x21, #176]
   25678:	b	255f4 <acc_unmap_data@@OACC_2.0+0x94>
   2567c:	mov	x0, x22
   25680:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   25684:	b	255b4 <acc_unmap_data@@OACC_2.0+0x54>
   25688:	mov	x0, x22
   2568c:	ldr	x21, [x20, #8]
   25690:	bl	24778 <acc_on_device@@OACC_2.0+0x110>
   25694:	ldr	x1, [x20]
   25698:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   2569c:	sub	w2, w21, w23
   256a0:	mov	x3, x19
   256a4:	add	x0, x0, #0xc50
   256a8:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   256ac:	mov	x0, x22
   256b0:	bl	24778 <acc_on_device@@OACC_2.0+0x110>
   256b4:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   256b8:	mov	x1, x19
   256bc:	add	x0, x0, #0xc30
   256c0:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   256c4:	nop

00000000000256c8 <acc_free@@OACC_2.0>:
   256c8:	cbz	x0, 257bc <acc_free@@OACC_2.0+0xf4>
   256cc:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   256d0:	ldr	x1, [x1, #4048]
   256d4:	mrs	x2, tpidr_el0
   256d8:	stp	x29, x30, [sp, #-64]!
   256dc:	mov	x29, sp
   256e0:	ldr	x1, [x2, x1]
   256e4:	stp	x19, x20, [sp, #16]
   256e8:	cbz	x1, 257d8 <acc_free@@OACC_2.0+0x110>
   256ec:	ldr	x20, [x1, #8]
   256f0:	cbz	x20, 257d8 <acc_free@@OACC_2.0+0x110>
   256f4:	ldr	w1, [x20, #8]
   256f8:	tbnz	w1, #0, 257b0 <acc_free@@OACC_2.0+0xe8>
   256fc:	stp	x21, x22, [sp, #32]
   25700:	add	x22, x20, #0xa8
   25704:	mov	x19, x0
   25708:	mov	w0, #0x1                   	// #1
   2570c:	ldaxr	w1, [x22]
   25710:	cbnz	w1, 2571c <acc_free@@OACC_2.0+0x54>
   25714:	stxr	w2, w0, [x22]
   25718:	cbnz	w2, 2570c <acc_free@@OACC_2.0+0x44>
   2571c:	cmp	w1, #0x0
   25720:	b.ne	25820 <acc_free@@OACC_2.0+0x158>  // b.any
   25724:	ldr	x0, [x20, #176]
   25728:	cbz	x0, 25778 <acc_free@@OACC_2.0+0xb0>
   2572c:	mov	x1, x19
   25730:	mov	x2, #0x1                   	// #1
   25734:	bl	248d0 <acc_on_device@@OACC_2.0+0x268>
   25738:	mov	x21, x0
   2573c:	cbz	x0, 25778 <acc_free@@OACC_2.0+0xb0>
   25740:	stp	x23, x24, [sp, #48]
   25744:	ldp	x0, x23, [x0, #16]
   25748:	ldr	x24, [x0, #16]
   2574c:	ldxr	w0, [x22]
   25750:	stlxr	w1, wzr, [x22]
   25754:	cbnz	w1, 2574c <acc_free@@OACC_2.0+0x84>
   25758:	tbnz	w0, #31, 257cc <acc_free@@OACC_2.0+0x104>
   2575c:	ldr	x0, [x21]
   25760:	add	x0, x23, x0
   25764:	sub	x0, x0, x24
   25768:	add	x0, x19, x0
   2576c:	bl	8710 <acc_unmap_data@plt>
   25770:	ldp	x23, x24, [sp, #48]
   25774:	b	25788 <acc_free@@OACC_2.0+0xc0>
   25778:	ldxr	w0, [x22]
   2577c:	stlxr	w1, wzr, [x22]
   25780:	cbnz	w1, 25778 <acc_free@@OACC_2.0+0xb0>
   25784:	tbnz	w0, #31, 257c0 <acc_free@@OACC_2.0+0xf8>
   25788:	ldr	w0, [x20, #12]
   2578c:	mov	x1, x19
   25790:	ldr	x2, [x20, #104]
   25794:	blr	x2
   25798:	tst	w0, #0xff
   2579c:	b.eq	25804 <acc_free@@OACC_2.0+0x13c>  // b.none
   257a0:	ldp	x19, x20, [sp, #16]
   257a4:	ldp	x21, x22, [sp, #32]
   257a8:	ldp	x29, x30, [sp], #64
   257ac:	ret
   257b0:	ldp	x19, x20, [sp, #16]
   257b4:	ldp	x29, x30, [sp], #64
   257b8:	b	8900 <free@plt>
   257bc:	ret
   257c0:	mov	x0, x22
   257c4:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   257c8:	b	25788 <acc_free@@OACC_2.0+0xc0>
   257cc:	mov	x0, x22
   257d0:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   257d4:	b	2575c <acc_free@@OACC_2.0+0x94>
   257d8:	adrp	x3, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   257dc:	add	x3, x3, #0xcc8
   257e0:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   257e4:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   257e8:	add	x3, x3, #0x98
   257ec:	add	x1, x1, #0xa80
   257f0:	add	x0, x0, #0xaa0
   257f4:	mov	w2, #0x7f                  	// #127
   257f8:	stp	x21, x22, [sp, #32]
   257fc:	stp	x23, x24, [sp, #48]
   25800:	bl	8ab0 <__assert_fail@plt>
   25804:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25808:	add	x1, x1, #0xcc8
   2580c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25810:	add	x1, x1, #0xa8
   25814:	add	x0, x0, #0xc68
   25818:	stp	x23, x24, [sp, #48]
   2581c:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   25820:	mov	x0, x22
   25824:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   25828:	b	25724 <acc_free@@OACC_2.0+0x5c>
   2582c:	nop

0000000000025830 <acc_create@@OACC_2.0>:
   25830:	mov	x2, x1
   25834:	mov	w3, #0xfffffffe            	// #-2
   25838:	mov	x1, x0
   2583c:	mov	w0, #0x3                   	// #3
   25840:	b	24cf8 <acc_on_device@@OACC_2.0+0x690>
   25844:	nop

0000000000025848 <acc_create_async@@OACC_2.5>:
   25848:	mov	x4, x1
   2584c:	mov	w3, w2
   25850:	mov	x1, x0
   25854:	mov	x2, x4
   25858:	mov	w0, #0x3                   	// #3
   2585c:	b	24cf8 <acc_on_device@@OACC_2.0+0x690>

0000000000025860 <acc_copyin@@OACC_2.0>:
   25860:	mov	x2, x1
   25864:	mov	w3, #0xfffffffe            	// #-2
   25868:	mov	x1, x0
   2586c:	mov	w0, #0x7                   	// #7
   25870:	b	24cf8 <acc_on_device@@OACC_2.0+0x690>
   25874:	nop

0000000000025878 <acc_copyin_async@@OACC_2.5>:
   25878:	mov	x4, x1
   2587c:	mov	w3, w2
   25880:	mov	x1, x0
   25884:	mov	x2, x4
   25888:	mov	w0, #0x7                   	// #7
   2588c:	b	24cf8 <acc_on_device@@OACC_2.0+0x690>

0000000000025890 <acc_delete@@OACC_2.0>:
   25890:	mov	x2, x1
   25894:	mov	w3, #0xfffffffe            	// #-2
   25898:	mov	x1, x0
   2589c:	mov	w0, #0x0                   	// #0
   258a0:	b	24aa0 <acc_on_device@@OACC_2.0+0x438>
   258a4:	nop

00000000000258a8 <acc_delete_async@@OACC_2.5>:
   258a8:	mov	x4, x1
   258ac:	mov	w3, w2
   258b0:	mov	x1, x0
   258b4:	mov	x2, x4
   258b8:	mov	w0, #0x0                   	// #0
   258bc:	b	24aa0 <acc_on_device@@OACC_2.0+0x438>

00000000000258c0 <acc_delete_finalize@@OACC_2.5>:
   258c0:	mov	x2, x1
   258c4:	mov	w3, #0xfffffffe            	// #-2
   258c8:	mov	x1, x0
   258cc:	mov	w0, #0x2                   	// #2
   258d0:	b	24aa0 <acc_on_device@@OACC_2.0+0x438>
   258d4:	nop

00000000000258d8 <acc_delete_finalize_async@@OACC_2.5>:
   258d8:	mov	x4, x1
   258dc:	mov	w3, w2
   258e0:	mov	x1, x0
   258e4:	mov	x2, x4
   258e8:	mov	w0, #0x2                   	// #2
   258ec:	b	24aa0 <acc_on_device@@OACC_2.0+0x438>

00000000000258f0 <acc_copyout@@OACC_2.0>:
   258f0:	mov	x2, x1
   258f4:	mov	w3, #0xfffffffe            	// #-2
   258f8:	mov	x1, x0
   258fc:	mov	w0, #0x1                   	// #1
   25900:	b	24aa0 <acc_on_device@@OACC_2.0+0x438>
   25904:	nop

0000000000025908 <acc_copyout_async@@OACC_2.5>:
   25908:	mov	x4, x1
   2590c:	mov	w3, w2
   25910:	mov	x1, x0
   25914:	mov	x2, x4
   25918:	mov	w0, #0x1                   	// #1
   2591c:	b	24aa0 <acc_on_device@@OACC_2.0+0x438>

0000000000025920 <acc_copyout_finalize@@OACC_2.5>:
   25920:	mov	x2, x1
   25924:	mov	w3, #0xfffffffe            	// #-2
   25928:	mov	x1, x0
   2592c:	mov	w0, #0x3                   	// #3
   25930:	b	24aa0 <acc_on_device@@OACC_2.0+0x438>
   25934:	nop

0000000000025938 <acc_copyout_finalize_async@@OACC_2.5>:
   25938:	mov	x4, x1
   2593c:	mov	w3, w2
   25940:	mov	x1, x0
   25944:	mov	x2, x4
   25948:	mov	w0, #0x3                   	// #3
   2594c:	b	24aa0 <acc_on_device@@OACC_2.0+0x438>

0000000000025950 <acc_update_device@@OACC_2.0>:
   25950:	mov	x2, x1
   25954:	mov	w3, #0xfffffffe            	// #-2
   25958:	mov	x1, x0
   2595c:	mov	w0, #0x1                   	// #1
   25960:	b	24948 <acc_on_device@@OACC_2.0+0x2e0>
   25964:	nop

0000000000025968 <acc_update_device_async@@OACC_2.5>:
   25968:	mov	x4, x1
   2596c:	mov	w3, w2
   25970:	mov	x1, x0
   25974:	mov	x2, x4
   25978:	mov	w0, #0x1                   	// #1
   2597c:	b	24948 <acc_on_device@@OACC_2.0+0x2e0>

0000000000025980 <acc_update_self@@OACC_2.0>:
   25980:	mov	x2, x1
   25984:	mov	w3, #0xfffffffe            	// #-2
   25988:	mov	x1, x0
   2598c:	mov	w0, #0x0                   	// #0
   25990:	b	24948 <acc_on_device@@OACC_2.0+0x2e0>
   25994:	nop

0000000000025998 <acc_update_self_async@@OACC_2.5>:
   25998:	mov	x4, x1
   2599c:	mov	w3, w2
   259a0:	mov	x1, x0
   259a4:	mov	x2, x4
   259a8:	mov	w0, #0x0                   	// #0
   259ac:	b	24948 <acc_on_device@@OACC_2.0+0x2e0>
   259b0:	adrp	x4, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   259b4:	ldr	x4, [x4, #4048]
   259b8:	mrs	x6, tpidr_el0
   259bc:	stp	x29, x30, [sp, #-144]!
   259c0:	mov	x29, sp
   259c4:	stp	x21, x22, [sp, #32]
   259c8:	mov	x22, x2
   259cc:	mov	x21, x0
   259d0:	ldr	x2, [x6, x4]
   259d4:	stp	x19, x20, [sp, #16]
   259d8:	mov	x19, x1
   259dc:	ldr	x0, [x1]
   259e0:	stp	x23, x24, [sp, #48]
   259e4:	mov	x23, x3
   259e8:	ldr	x1, [x22]
   259ec:	ldr	x24, [x2, #8]
   259f0:	add	x20, x24, #0xa8
   259f4:	bl	87f0 <acc_is_present@plt>
   259f8:	cbz	w0, 25acc <acc_update_self_async@@OACC_2.5+0x134>
   259fc:	mov	w0, #0x1                   	// #1
   25a00:	ldaxr	w1, [x20]
   25a04:	cbnz	w1, 25a10 <acc_update_self_async@@OACC_2.5+0x78>
   25a08:	stxr	w2, w0, [x20]
   25a0c:	cbnz	w2, 25a00 <acc_update_self_async@@OACC_2.5+0x68>
   25a10:	cmp	w1, #0x0
   25a14:	b.ne	25bdc <acc_update_self_async@@OACC_2.5+0x244>  // b.any
   25a18:	ldr	x3, [x19]
   25a1c:	add	x0, x24, #0xa0
   25a20:	ldr	x2, [x22]
   25a24:	add	x1, sp, #0x58
   25a28:	add	x2, x2, x3
   25a2c:	stp	x3, x2, [sp, #88]
   25a30:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   25a34:	mov	x19, x0
   25a38:	ldxr	w0, [x20]
   25a3c:	stlxr	w1, wzr, [x20]
   25a40:	cbnz	w1, 25a38 <acc_update_self_async@@OACC_2.5+0xa0>
   25a44:	tbnz	w0, #31, 25ba4 <acc_update_self_async@@OACC_2.5+0x20c>
   25a48:	ldr	x4, [x19, #16]
   25a4c:	ldr	x3, [x4, #48]
   25a50:	cbz	x3, 25bc0 <acc_update_self_async@@OACC_2.5+0x228>
   25a54:	add	x4, x4, #0x40
   25a58:	mov	x1, #0x0                   	// #0
   25a5c:	b	25a6c <acc_update_self_async@@OACC_2.5+0xd4>
   25a60:	add	x1, x1, #0x1
   25a64:	cmp	x1, x3
   25a68:	b.eq	25bc0 <acc_update_self_async@@OACC_2.5+0x228>  // b.none
   25a6c:	lsl	x2, x1, #5
   25a70:	ldr	x2, [x4, x2]
   25a74:	cmp	x2, x19
   25a78:	b.ne	25a60 <acc_update_self_async@@OACC_2.5+0xc8>  // b.any
   25a7c:	add	x6, x21, x1
   25a80:	cbz	x21, 25b54 <acc_update_self_async@@OACC_2.5+0x1bc>
   25a84:	nop
   25a88:	cmp	x3, x1
   25a8c:	b.ls	25aac <acc_update_self_async@@OACC_2.5+0x114>  // b.plast
   25a90:	lsl	x0, x1, #5
   25a94:	ldr	x0, [x4, x0]
   25a98:	cbz	x0, 25aac <acc_update_self_async@@OACC_2.5+0x114>
   25a9c:	ldp	x5, x2, [x0, #32]
   25aa0:	add	x5, x5, #0x1
   25aa4:	add	x2, x2, #0x1
   25aa8:	stp	x5, x2, [x0, #32]
   25aac:	add	x1, x1, #0x1
   25ab0:	cmp	x6, x1
   25ab4:	b.ne	25a88 <acc_update_self_async@@OACC_2.5+0xf0>  // b.any
   25ab8:	ldp	x19, x20, [sp, #16]
   25abc:	ldp	x21, x22, [sp, #32]
   25ac0:	ldp	x23, x24, [sp, #48]
   25ac4:	ldp	x29, x30, [sp], #144
   25ac8:	ret
   25acc:	str	x25, [sp, #64]
   25ad0:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   25ad4:	ldr	w1, [x25, #1536]
   25ad8:	cbnz	w1, 25b88 <acc_update_self_async@@OACC_2.5+0x1f0>
   25adc:	mov	x2, x19
   25ae0:	mov	x1, x21
   25ae4:	mov	x5, x23
   25ae8:	mov	x4, x22
   25aec:	mov	x0, x24
   25af0:	mov	w7, #0x0                   	// #0
   25af4:	mov	w6, #0x1                   	// #1
   25af8:	mov	x3, #0x0                   	// #0
   25afc:	bl	1e120 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   25b00:	mov	x19, x0
   25b04:	ldr	w1, [x25, #1536]
   25b08:	cbnz	w1, 25b68 <acc_update_self_async@@OACC_2.5+0x1d0>
   25b0c:	ldr	x1, [x19, #64]
   25b10:	mov	x0, #0x1                   	// #1
   25b14:	mov	w2, w0
   25b18:	str	x0, [x1, #40]
   25b1c:	ldaxr	w1, [x20]
   25b20:	cbnz	w1, 25b2c <acc_update_self_async@@OACC_2.5+0x194>
   25b24:	stxr	w0, w2, [x20]
   25b28:	cbnz	w0, 25b1c <acc_update_self_async@@OACC_2.5+0x184>
   25b2c:	cmp	w1, #0x0
   25b30:	b.ne	25bd0 <acc_update_self_async@@OACC_2.5+0x238>  // b.any
   25b34:	ldr	x0, [x24, #176]
   25b38:	str	x0, [x19, #40]
   25b3c:	str	x19, [x24, #176]
   25b40:	ldxr	w0, [x20]
   25b44:	stlxr	w1, wzr, [x20]
   25b48:	cbnz	w1, 25b40 <acc_update_self_async@@OACC_2.5+0x1a8>
   25b4c:	tbnz	w0, #31, 25bb0 <acc_update_self_async@@OACC_2.5+0x218>
   25b50:	ldr	x25, [sp, #64]
   25b54:	ldp	x19, x20, [sp, #16]
   25b58:	ldp	x21, x22, [sp, #32]
   25b5c:	ldp	x23, x24, [sp, #48]
   25b60:	ldp	x29, x30, [sp], #144
   25b64:	ret
   25b68:	adrp	x2, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25b6c:	add	x2, x2, #0xcc8
   25b70:	add	x2, x2, #0xb8
   25b74:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25b78:	mov	w0, #0x0                   	// #0
   25b7c:	add	x1, x1, #0x5a0
   25b80:	bl	b490 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   25b84:	b	25b0c <acc_update_self_async@@OACC_2.5+0x174>
   25b88:	adrp	x2, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25b8c:	add	x2, x2, #0xcc8
   25b90:	add	x2, x2, #0xb8
   25b94:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25b98:	add	x1, x1, #0x588
   25b9c:	bl	b490 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   25ba0:	b	25adc <acc_update_self_async@@OACC_2.5+0x144>
   25ba4:	mov	x0, x20
   25ba8:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   25bac:	b	25a48 <acc_update_self_async@@OACC_2.5+0xb0>
   25bb0:	mov	x0, x20
   25bb4:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   25bb8:	ldr	x25, [sp, #64]
   25bbc:	b	25b54 <acc_update_self_async@@OACC_2.5+0x1bc>
   25bc0:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25bc4:	add	x0, x0, #0xc90
   25bc8:	str	x25, [sp, #64]
   25bcc:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   25bd0:	mov	x0, x20
   25bd4:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   25bd8:	b	25b34 <acc_update_self_async@@OACC_2.5+0x19c>
   25bdc:	mov	x0, x20
   25be0:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   25be4:	b	25a18 <acc_update_self_async@@OACC_2.5+0x80>
   25be8:	adrp	x6, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   25bec:	ldr	x6, [x6, #4048]
   25bf0:	mrs	x7, tpidr_el0
   25bf4:	stp	x29, x30, [sp, #-160]!
   25bf8:	cmp	w5, #0x1
   25bfc:	mov	x29, sp
   25c00:	ldr	x5, [x7, x6]
   25c04:	stp	x21, x22, [sp, #32]
   25c08:	mov	w22, w3
   25c0c:	mov	x21, x0
   25c10:	stp	x23, x24, [sp, #48]
   25c14:	cset	w24, ne  // ne = any
   25c18:	and	w23, w2, #0xff
   25c1c:	stp	x25, x26, [sp, #64]
   25c20:	mov	w25, w4
   25c24:	ldr	x26, [x5, #8]
   25c28:	bl	87f0 <acc_is_present@plt>
   25c2c:	cbz	w0, 25d44 <acc_update_self_async@@OACC_2.5+0x3ac>
   25c30:	add	w24, w24, #0x2
   25c34:	stp	x19, x20, [sp, #16]
   25c38:	add	x20, x26, #0xa8
   25c3c:	mov	w0, #0x1                   	// #1
   25c40:	str	x27, [sp, #80]
   25c44:	ldaxr	w1, [x20]
   25c48:	cbnz	w1, 25c54 <acc_update_self_async@@OACC_2.5+0x2bc>
   25c4c:	stxr	w2, w0, [x20]
   25c50:	cbnz	w2, 25c44 <acc_update_self_async@@OACC_2.5+0x2ac>
   25c54:	cmp	w1, #0x0
   25c58:	b.ne	25e48 <acc_update_self_async@@OACC_2.5+0x4b0>  // b.any
   25c5c:	add	x2, x21, #0x1
   25c60:	add	x1, sp, #0x68
   25c64:	add	x0, x26, #0xa0
   25c68:	stp	x21, x2, [sp, #104]
   25c6c:	bl	22300 <omp_pause_resource_all@@OMP_5.0+0x328>
   25c70:	mov	x19, x0
   25c74:	cbz	x0, 25e30 <acc_update_self_async@@OACC_2.5+0x498>
   25c78:	adrp	x27, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   25c7c:	ldr	w0, [x27, #1536]
   25c80:	cbnz	w0, 25ddc <acc_update_self_async@@OACC_2.5+0x444>
   25c84:	ldp	x0, x1, [x19, #32]
   25c88:	ldr	x21, [x19, #16]
   25c8c:	cmp	x0, x1
   25c90:	b.cc	25e1c <acc_update_self_async@@OACC_2.5+0x484>  // b.lo, b.ul, b.last
   25c94:	cbz	w25, 25d58 <acc_update_self_async@@OACC_2.5+0x3c0>
   25c98:	sub	x0, x0, x1
   25c9c:	stp	x0, xzr, [x19, #32]
   25ca0:	ldxr	w0, [x20]
   25ca4:	stlxr	w1, wzr, [x20]
   25ca8:	cbnz	w1, 25ca0 <acc_update_self_async@@OACC_2.5+0x308>
   25cac:	tbnz	w0, #31, 25e08 <acc_update_self_async@@OACC_2.5+0x470>
   25cb0:	ldr	x1, [x19, #32]
   25cb4:	cbnz	x1, 25d24 <acc_update_self_async@@OACC_2.5+0x38c>
   25cb8:	ldr	x0, [x21]
   25cbc:	sxtw	x4, w24
   25cc0:	cmp	x0, w24, sxtw
   25cc4:	b.eq	25d6c <acc_update_self_async@@OACC_2.5+0x3d4>  // b.none
   25cc8:	ldr	x2, [x21, #48]
   25ccc:	mov	x0, #0x1                   	// #1
   25cd0:	str	x0, [x19, #32]
   25cd4:	str	x4, [x21]
   25cd8:	cbz	x2, 25d08 <acc_update_self_async@@OACC_2.5+0x370>
   25cdc:	add	x3, x21, #0x40
   25ce0:	b	25cf0 <acc_update_self_async@@OACC_2.5+0x358>
   25ce4:	add	x1, x1, #0x1
   25ce8:	cmp	x2, x1
   25cec:	b.eq	25d08 <acc_update_self_async@@OACC_2.5+0x370>  // b.none
   25cf0:	lsl	x0, x1, #5
   25cf4:	ldr	x0, [x3, x0]
   25cf8:	cmp	x0, x19
   25cfc:	b.ne	25ce4 <acc_update_self_async@@OACC_2.5+0x34c>  // b.any
   25d00:	add	x1, x21, x1, lsl #5
   25d04:	strb	w23, [x1, #72]
   25d08:	cmn	w22, #0x1
   25d0c:	b.lt	25da4 <acc_update_self_async@@OACC_2.5+0x40c>  // b.tstop
   25d10:	ldr	x2, [x21, #56]
   25d14:	mov	w1, w22
   25d18:	mov	x0, x21
   25d1c:	ldr	x2, [x2, #192]
   25d20:	blr	x2
   25d24:	ldxr	w0, [x20]
   25d28:	stlxr	w1, wzr, [x20]
   25d2c:	cbnz	w1, 25d24 <acc_update_self_async@@OACC_2.5+0x38c>
   25d30:	tbnz	w0, #31, 25dfc <acc_update_self_async@@OACC_2.5+0x464>
   25d34:	ldr	w0, [x27, #1536]
   25d38:	cbnz	w0, 25db4 <acc_update_self_async@@OACC_2.5+0x41c>
   25d3c:	ldp	x19, x20, [sp, #16]
   25d40:	ldr	x27, [sp, #80]
   25d44:	ldp	x21, x22, [sp, #32]
   25d48:	ldp	x23, x24, [sp, #48]
   25d4c:	ldp	x25, x26, [sp, #64]
   25d50:	ldp	x29, x30, [sp], #160
   25d54:	ret
   25d58:	cbz	x1, 25ca0 <acc_update_self_async@@OACC_2.5+0x308>
   25d5c:	sub	x1, x1, #0x1
   25d60:	sub	x0, x0, #0x1
   25d64:	stp	x0, x1, [x19, #32]
   25d68:	b	25ca0 <acc_update_self_async@@OACC_2.5+0x308>
   25d6c:	ldr	x0, [x26, #176]
   25d70:	cbz	x0, 25e54 <acc_update_self_async@@OACC_2.5+0x4bc>
   25d74:	mov	x3, #0x0                   	// #0
   25d78:	ldr	x21, [x19, #16]
   25d7c:	b	25d8c <acc_update_self_async@@OACC_2.5+0x3f4>
   25d80:	mov	x3, x0
   25d84:	cbz	x2, 25e54 <acc_update_self_async@@OACC_2.5+0x4bc>
   25d88:	mov	x0, x2
   25d8c:	cmp	x0, x21
   25d90:	ldr	x2, [x0, #40]
   25d94:	b.ne	25d80 <acc_update_self_async@@OACC_2.5+0x3e8>  // b.any
   25d98:	cbz	x3, 25e14 <acc_update_self_async@@OACC_2.5+0x47c>
   25d9c:	str	x2, [x3, #40]
   25da0:	b	25cc8 <acc_update_self_async@@OACC_2.5+0x330>
   25da4:	mov	x0, x21
   25da8:	mov	w1, #0x1                   	// #1
   25dac:	bl	1fb38 <omp_get_place_proc_ids@@OMP_4.5+0x3238>
   25db0:	b	25d24 <acc_update_self_async@@OACC_2.5+0x38c>
   25db4:	adrp	x2, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25db8:	add	x2, x2, #0xcc8
   25dbc:	add	x2, x2, #0xd0
   25dc0:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25dc4:	mov	w0, #0x0                   	// #0
   25dc8:	add	x1, x1, #0x5d8
   25dcc:	bl	b490 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   25dd0:	ldp	x19, x20, [sp, #16]
   25dd4:	ldr	x27, [sp, #80]
   25dd8:	b	25d44 <acc_update_self_async@@OACC_2.5+0x3ac>
   25ddc:	adrp	x2, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25de0:	add	x2, x2, #0xcc8
   25de4:	add	x2, x2, #0xd0
   25de8:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25dec:	mov	w0, #0x0                   	// #0
   25df0:	add	x1, x1, #0x5c0
   25df4:	bl	b490 <GOMP_critical_name_end@@GOMP_1.0+0x68>
   25df8:	b	25c84 <acc_update_self_async@@OACC_2.5+0x2ec>
   25dfc:	mov	x0, x20
   25e00:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   25e04:	b	25d34 <acc_update_self_async@@OACC_2.5+0x39c>
   25e08:	mov	x0, x20
   25e0c:	bl	1a330 <omp_test_nest_lock@OMP_1.0+0x280>
   25e10:	b	25cb0 <acc_update_self_async@@OACC_2.5+0x318>
   25e14:	str	x2, [x26, #176]
   25e18:	b	25cc8 <acc_update_self_async@@OACC_2.5+0x330>
   25e1c:	mov	x0, x20
   25e20:	bl	24778 <acc_on_device@@OACC_2.0+0x110>
   25e24:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25e28:	add	x0, x0, #0xaf8
   25e2c:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   25e30:	mov	x0, x20
   25e34:	bl	24778 <acc_on_device@@OACC_2.0+0x110>
   25e38:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25e3c:	mov	x1, x21
   25e40:	add	x0, x0, #0xc30
   25e44:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   25e48:	mov	x0, x20
   25e4c:	bl	1a140 <omp_test_nest_lock@OMP_1.0+0x90>
   25e50:	b	25c5c <acc_update_self_async@@OACC_2.5+0x2c4>
   25e54:	mov	x0, #0x0                   	// #0
   25e58:	mov	x1, #0x1                   	// #1
   25e5c:	str	x1, [x19, #32]
   25e60:	str	xzr, [x0]
   25e64:	brk	#0x3e8

0000000000025e68 <acc_async_test@@OACC_2.0>:
   25e68:	stp	x29, x30, [sp, #-16]!
   25e6c:	cmp	w0, #0x0
   25e70:	add	w2, w0, #0x2
   25e74:	mov	x29, sp
   25e78:	ccmp	w2, #0x1, #0x0, lt  // lt = tstop
   25e7c:	b.hi	25eb8 <acc_async_test@@OACC_2.0+0x50>  // b.pmore
   25e80:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   25e84:	ldr	x1, [x1, #4048]
   25e88:	mrs	x2, tpidr_el0
   25e8c:	ldr	x1, [x2, x1]
   25e90:	cbz	x1, 25eac <acc_async_test@@OACC_2.0+0x44>
   25e94:	ldr	x1, [x1, #8]
   25e98:	cbz	x1, 25eac <acc_async_test@@OACC_2.0+0x44>
   25e9c:	ldp	x29, x30, [sp], #16
   25ea0:	ldr	x1, [x1, #200]
   25ea4:	mov	x16, x1
   25ea8:	br	x16
   25eac:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25eb0:	add	x0, x0, #0xdb0
   25eb4:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   25eb8:	mov	w1, w0
   25ebc:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25ec0:	add	x0, x0, #0xdc8
   25ec4:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>

0000000000025ec8 <acc_async_test_all@@OACC_2.0>:
   25ec8:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   25ecc:	ldr	x0, [x0, #4048]
   25ed0:	mrs	x1, tpidr_el0
   25ed4:	ldr	x0, [x1, x0]
   25ed8:	cbz	x0, 25ef0 <acc_async_test_all@@OACC_2.0+0x28>
   25edc:	ldr	x0, [x0, #8]
   25ee0:	cbz	x0, 25ef0 <acc_async_test_all@@OACC_2.0+0x28>
   25ee4:	ldr	x0, [x0, #208]
   25ee8:	mov	x16, x0
   25eec:	br	x16
   25ef0:	stp	x29, x30, [sp, #-16]!
   25ef4:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25ef8:	add	x0, x0, #0xdb0
   25efc:	mov	x29, sp
   25f00:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   25f04:	nop

0000000000025f08 <acc_async_wait@@OACC_2.0.1>:
   25f08:	stp	x29, x30, [sp, #-16]!
   25f0c:	cmp	w0, #0x0
   25f10:	add	w2, w0, #0x2
   25f14:	mov	x29, sp
   25f18:	ccmp	w2, #0x1, #0x0, lt  // lt = tstop
   25f1c:	b.hi	25f58 <acc_async_wait@@OACC_2.0.1+0x50>  // b.pmore
   25f20:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   25f24:	ldr	x1, [x1, #4048]
   25f28:	mrs	x2, tpidr_el0
   25f2c:	ldr	x1, [x2, x1]
   25f30:	cbz	x1, 25f4c <acc_async_wait@@OACC_2.0.1+0x44>
   25f34:	ldr	x1, [x1, #8]
   25f38:	cbz	x1, 25f4c <acc_async_wait@@OACC_2.0.1+0x44>
   25f3c:	ldp	x29, x30, [sp], #16
   25f40:	ldr	x1, [x1, #216]
   25f44:	mov	x16, x1
   25f48:	br	x16
   25f4c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25f50:	add	x0, x0, #0xdb0
   25f54:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   25f58:	mov	w1, w0
   25f5c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25f60:	add	x0, x0, #0xdc8
   25f64:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>

0000000000025f68 <acc_wait_async@@OACC_2.0>:
   25f68:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   25f6c:	ldr	x2, [x2, #4048]
   25f70:	mrs	x3, tpidr_el0
   25f74:	ldr	x2, [x3, x2]
   25f78:	cbz	x2, 25f90 <acc_wait_async@@OACC_2.0+0x28>
   25f7c:	ldr	x2, [x2, #8]
   25f80:	cbz	x2, 25f90 <acc_wait_async@@OACC_2.0+0x28>
   25f84:	ldr	x2, [x2, #224]
   25f88:	mov	x16, x2
   25f8c:	br	x16
   25f90:	stp	x29, x30, [sp, #-16]!
   25f94:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25f98:	add	x0, x0, #0xdb0
   25f9c:	mov	x29, sp
   25fa0:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   25fa4:	nop

0000000000025fa8 <acc_async_wait_all@@OACC_2.0.1>:
   25fa8:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   25fac:	ldr	x0, [x0, #4048]
   25fb0:	mrs	x1, tpidr_el0
   25fb4:	ldr	x0, [x1, x0]
   25fb8:	cbz	x0, 25fd0 <acc_async_wait_all@@OACC_2.0.1+0x28>
   25fbc:	ldr	x0, [x0, #8]
   25fc0:	cbz	x0, 25fd0 <acc_async_wait_all@@OACC_2.0.1+0x28>
   25fc4:	ldr	x0, [x0, #232]
   25fc8:	mov	x16, x0
   25fcc:	br	x16
   25fd0:	stp	x29, x30, [sp, #-16]!
   25fd4:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   25fd8:	add	x0, x0, #0xdb0
   25fdc:	mov	x29, sp
   25fe0:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   25fe4:	nop

0000000000025fe8 <acc_wait_all_async@@OACC_2.0>:
   25fe8:	stp	x29, x30, [sp, #-16]!
   25fec:	cmp	w0, #0x0
   25ff0:	add	w2, w0, #0x2
   25ff4:	mov	x29, sp
   25ff8:	ccmp	w2, #0x1, #0x0, lt  // lt = tstop
   25ffc:	b.hi	26038 <acc_wait_all_async@@OACC_2.0+0x50>  // b.pmore
   26000:	adrp	x1, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   26004:	ldr	x1, [x1, #4048]
   26008:	mrs	x2, tpidr_el0
   2600c:	ldr	x1, [x2, x1]
   26010:	cbz	x1, 2602c <acc_wait_all_async@@OACC_2.0+0x44>
   26014:	ldr	x1, [x1, #8]
   26018:	cbz	x1, 2602c <acc_wait_all_async@@OACC_2.0+0x44>
   2601c:	ldp	x29, x30, [sp], #16
   26020:	ldr	x1, [x1, #240]
   26024:	mov	x16, x1
   26028:	br	x16
   2602c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   26030:	add	x0, x0, #0xdb0
   26034:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   26038:	mov	w1, w0
   2603c:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   26040:	add	x0, x0, #0xdc8
   26044:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>

0000000000026048 <GOMP_PLUGIN_async_unmap_vars@@GOMP_PLUGIN_1.0>:
   26048:	stp	x29, x30, [sp, #-32]!
   2604c:	mov	x29, sp
   26050:	stp	x19, x20, [sp, #16]
   26054:	mov	x19, x0
   26058:	mov	w0, w1
   2605c:	ldr	x20, [x19, #56]
   26060:	ldr	x1, [x20, #248]
   26064:	blr	x1
   26068:	mov	x0, x19
   2606c:	mov	w1, #0x1                   	// #1
   26070:	bl	1fb38 <omp_get_place_proc_ids@@OMP_4.5+0x3238>
   26074:	ldr	x1, [x20, #248]
   26078:	mov	w0, #0xfffffffe            	// #-2
   2607c:	ldp	x19, x20, [sp, #16]
   26080:	mov	x16, x1
   26084:	ldp	x29, x30, [sp], #32
   26088:	br	x16
   2608c:	nop

0000000000026090 <GOMP_PLUGIN_acc_thread@@GOMP_PLUGIN_1.0>:
   26090:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   26094:	ldr	x0, [x0, #4048]
   26098:	mrs	x1, tpidr_el0
   2609c:	ldr	x0, [x1, x0]
   260a0:	cbz	x0, 260a8 <GOMP_PLUGIN_acc_thread@@GOMP_PLUGIN_1.0+0x18>
   260a4:	ldr	x0, [x0, #40]
   260a8:	ret
   260ac:	nop

00000000000260b0 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2>:
   260b0:	cmp	w0, #0x2
   260b4:	b.hi	260c8 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0x18>  // b.pmore
   260b8:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   260bc:	add	x1, x1, #0x610
   260c0:	ldr	w0, [x1, w0, uxtw #2]
   260c4:	ret
   260c8:	stp	x29, x30, [sp, #-16]!
   260cc:	mov	w1, w0
   260d0:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   260d4:	mov	x29, sp
   260d8:	add	x0, x0, #0xde8
   260dc:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>

00000000000260e0 <acc_get_current_cuda_device@@OACC_2.0>:
   260e0:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   260e4:	ldr	x0, [x0, #4048]
   260e8:	mrs	x1, tpidr_el0
   260ec:	ldr	x0, [x1, x0]
   260f0:	cbz	x0, 2610c <acc_get_current_cuda_device@@OACC_2.0+0x2c>
   260f4:	ldr	x0, [x0, #8]
   260f8:	cbz	x0, 2610c <acc_get_current_cuda_device@@OACC_2.0+0x2c>
   260fc:	ldr	x0, [x0, #272]
   26100:	cbz	x0, 2610c <acc_get_current_cuda_device@@OACC_2.0+0x2c>
   26104:	mov	x16, x0
   26108:	br	x16
   2610c:	mov	x0, #0x0                   	// #0
   26110:	ret
   26114:	nop

0000000000026118 <acc_get_current_cuda_context@@OACC_2.0>:
   26118:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   2611c:	ldr	x0, [x0, #4048]
   26120:	mrs	x1, tpidr_el0
   26124:	ldr	x0, [x1, x0]
   26128:	cbz	x0, 26144 <acc_get_current_cuda_context@@OACC_2.0+0x2c>
   2612c:	ldr	x0, [x0, #8]
   26130:	cbz	x0, 26144 <acc_get_current_cuda_context@@OACC_2.0+0x2c>
   26134:	ldr	x0, [x0, #280]
   26138:	cbz	x0, 26144 <acc_get_current_cuda_context@@OACC_2.0+0x2c>
   2613c:	mov	x16, x0
   26140:	br	x16
   26144:	mov	x0, #0x0                   	// #0
   26148:	ret
   2614c:	nop

0000000000026150 <acc_get_cuda_stream@@OACC_2.0>:
   26150:	adrp	x2, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   26154:	ldr	x2, [x2, #4048]
   26158:	mrs	x3, tpidr_el0
   2615c:	add	w1, w0, #0x2
   26160:	cmp	w0, #0x0
   26164:	ccmp	w1, #0x1, #0x0, lt  // lt = tstop
   26168:	ldr	x1, [x3, x2]
   2616c:	b.hi	2618c <acc_get_cuda_stream@@OACC_2.0+0x3c>  // b.pmore
   26170:	cbz	x1, 2618c <acc_get_cuda_stream@@OACC_2.0+0x3c>
   26174:	ldr	x1, [x1, #8]
   26178:	cbz	x1, 2618c <acc_get_cuda_stream@@OACC_2.0+0x3c>
   2617c:	ldr	x1, [x1, #288]
   26180:	cbz	x1, 2618c <acc_get_cuda_stream@@OACC_2.0+0x3c>
   26184:	mov	x16, x1
   26188:	br	x16
   2618c:	mov	x0, #0x0                   	// #0
   26190:	ret
   26194:	nop

0000000000026198 <acc_set_cuda_stream@@OACC_2.0>:
   26198:	stp	x29, x30, [sp, #-32]!
   2619c:	cmp	w0, #0x0
   261a0:	mov	x29, sp
   261a4:	stp	x19, x20, [sp, #16]
   261a8:	mov	w19, w0
   261ac:	add	w0, w0, #0x2
   261b0:	ccmp	w0, #0x1, #0x0, lt  // lt = tstop
   261b4:	b.hi	26200 <acc_set_cuda_stream@@OACC_2.0+0x68>  // b.pmore
   261b8:	mov	x20, x1
   261bc:	cbz	x1, 26200 <acc_set_cuda_stream@@OACC_2.0+0x68>
   261c0:	bl	24738 <acc_on_device@@OACC_2.0+0xd0>
   261c4:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   261c8:	ldr	x0, [x0, #4048]
   261cc:	mrs	x1, tpidr_el0
   261d0:	ldr	x0, [x1, x0]
   261d4:	cbz	x0, 26210 <acc_set_cuda_stream@@OACC_2.0+0x78>
   261d8:	ldr	x0, [x0, #8]
   261dc:	cbz	x0, 26210 <acc_set_cuda_stream@@OACC_2.0+0x78>
   261e0:	ldr	x2, [x0, #296]
   261e4:	cbz	x2, 26210 <acc_set_cuda_stream@@OACC_2.0+0x78>
   261e8:	mov	x1, x20
   261ec:	mov	w0, w19
   261f0:	ldp	x19, x20, [sp, #16]
   261f4:	mov	x16, x2
   261f8:	ldp	x29, x30, [sp], #32
   261fc:	br	x16
   26200:	mov	w0, #0x0                   	// #0
   26204:	ldp	x19, x20, [sp, #16]
   26208:	ldp	x29, x30, [sp], #32
   2620c:	ret
   26210:	mov	w0, #0xffffffff            	// #-1
   26214:	b	26204 <acc_set_cuda_stream@@OACC_2.0+0x6c>
   26218:	cbz	x1, 26280 <acc_set_cuda_stream@@OACC_2.0+0xe8>
   2621c:	stp	x29, x30, [sp, #-48]!
   26220:	mov	x29, sp
   26224:	stp	x19, x20, [sp, #16]
   26228:	sxtw	x20, w0
   2622c:	add	x20, x20, #0x6
   26230:	mov	x19, x1
   26234:	str	x21, [sp, #32]
   26238:	neg	x20, x20, lsl #4
   2623c:	mov	w21, w0
   26240:	ldr	x1, [x19, #32]
   26244:	mov	w0, w21
   26248:	bl	26218 <acc_set_cuda_stream@@OACC_2.0+0x80>
   2624c:	cbnz	x0, 26270 <acc_set_cuda_stream@@OACC_2.0+0xd8>
   26250:	ldr	x0, [x19, #8]
   26254:	add	x0, x0, x20
   26258:	ldr	w1, [x0, #200]
   2625c:	cmp	w1, #0x2
   26260:	b.eq	26270 <acc_set_cuda_stream@@OACC_2.0+0xd8>  // b.none
   26264:	ldr	x19, [x19, #24]
   26268:	cbnz	x19, 26240 <acc_set_cuda_stream@@OACC_2.0+0xa8>
   2626c:	mov	x0, #0x0                   	// #0
   26270:	ldp	x19, x20, [sp, #16]
   26274:	ldr	x21, [sp, #32]
   26278:	ldp	x29, x30, [sp], #48
   2627c:	ret
   26280:	mov	x0, #0x0                   	// #0
   26284:	ret
   26288:	cbz	x0, 262dc <acc_set_cuda_stream@@OACC_2.0+0x144>
   2628c:	stp	x29, x30, [sp, #-48]!
   26290:	mov	x29, sp
   26294:	stp	x19, x20, [sp, #16]
   26298:	mov	x19, x0
   2629c:	mov	x20, x2
   262a0:	str	x21, [sp, #32]
   262a4:	mov	x21, x1
   262a8:	mov	x0, x19
   262ac:	mov	x1, x20
   262b0:	blr	x21
   262b4:	ldr	x0, [x19, #24]
   262b8:	mov	x2, x20
   262bc:	mov	x1, x21
   262c0:	bl	26288 <acc_set_cuda_stream@@OACC_2.0+0xf0>
   262c4:	ldr	x19, [x19, #32]
   262c8:	cbnz	x19, 262a8 <acc_set_cuda_stream@@OACC_2.0+0x110>
   262cc:	ldp	x19, x20, [sp, #16]
   262d0:	ldr	x21, [sp, #32]
   262d4:	ldp	x29, x30, [sp], #48
   262d8:	ret
   262dc:	ret
   262e0:	ldr	x2, [x0]
   262e4:	ldr	w3, [x1]
   262e8:	ldr	w4, [x2]
   262ec:	cmp	w4, w3
   262f0:	b.eq	26360 <acc_set_cuda_stream@@OACC_2.0+0x1c8>  // b.none
   262f4:	mov	w7, #0xffffffff            	// #-1
   262f8:	mov	w6, #0x1                   	// #1
   262fc:	ldp	x1, x5, [x2, #24]
   26300:	cmp	w3, w4
   26304:	csel	x1, x1, x5, lt  // lt = tstop
   26308:	csel	w5, w7, w6, lt  // lt = tstop
   2630c:	cbz	x1, 26360 <acc_set_cuda_stream@@OACC_2.0+0x1c8>
   26310:	ldr	w4, [x1]
   26314:	cmp	w4, w3
   26318:	b.eq	263a8 <acc_set_cuda_stream@@OACC_2.0+0x210>  // b.none
   2631c:	b.gt	26364 <acc_set_cuda_stream@@OACC_2.0+0x1cc>
   26320:	ldr	x4, [x1, #32]
   26324:	cbz	x4, 263a8 <acc_set_cuda_stream@@OACC_2.0+0x210>
   26328:	cmp	w5, #0x1
   2632c:	b.ne	263dc <acc_set_cuda_stream@@OACC_2.0+0x244>  // b.any
   26330:	ldr	x5, [x4, #24]
   26334:	str	x1, [x4, #24]
   26338:	str	x5, [x1, #32]
   2633c:	str	x4, [x2, #32]
   26340:	ldr	x1, [x4, #24]
   26344:	str	x2, [x4, #24]
   26348:	str	x1, [x2, #32]
   2634c:	mov	x2, x4
   26350:	str	x4, [x0]
   26354:	ldr	w4, [x2]
   26358:	cmp	w4, w3
   2635c:	b.ne	262fc <acc_set_cuda_stream@@OACC_2.0+0x164>  // b.any
   26360:	ret
   26364:	ldr	x4, [x1, #24]
   26368:	cbz	x4, 263a8 <acc_set_cuda_stream@@OACC_2.0+0x210>
   2636c:	cmn	w5, #0x1
   26370:	b.ne	263c4 <acc_set_cuda_stream@@OACC_2.0+0x22c>  // b.any
   26374:	ldr	x5, [x4, #32]
   26378:	str	x1, [x4, #32]
   2637c:	str	x5, [x1, #24]
   26380:	str	x4, [x2, #24]
   26384:	ldr	x1, [x4, #32]
   26388:	str	x2, [x4, #32]
   2638c:	str	x1, [x2, #24]
   26390:	mov	x2, x4
   26394:	str	x4, [x0]
   26398:	ldr	w4, [x2]
   2639c:	cmp	w4, w3
   263a0:	b.ne	262fc <acc_set_cuda_stream@@OACC_2.0+0x164>  // b.any
   263a4:	ret
   263a8:	cmn	w5, #0x1
   263ac:	b.eq	263f8 <acc_set_cuda_stream@@OACC_2.0+0x260>  // b.none
   263b0:	ldr	x3, [x1, #24]
   263b4:	str	x2, [x1, #24]
   263b8:	str	x3, [x2, #32]
   263bc:	str	x1, [x0]
   263c0:	ret
   263c4:	cmp	w5, #0x0
   263c8:	b.le	263f0 <acc_set_cuda_stream@@OACC_2.0+0x258>
   263cc:	ldr	x5, [x4, #32]
   263d0:	str	x1, [x4, #32]
   263d4:	str	x5, [x1, #24]
   263d8:	b	2633c <acc_set_cuda_stream@@OACC_2.0+0x1a4>
   263dc:	tbz	w5, #31, 263f0 <acc_set_cuda_stream@@OACC_2.0+0x258>
   263e0:	ldr	x5, [x4, #24]
   263e4:	str	x1, [x4, #24]
   263e8:	str	x5, [x1, #32]
   263ec:	b	26380 <acc_set_cuda_stream@@OACC_2.0+0x1e8>
   263f0:	ldr	x2, [x0]
   263f4:	b	26398 <acc_set_cuda_stream@@OACC_2.0+0x200>
   263f8:	ldr	x3, [x1, #32]
   263fc:	str	x2, [x1, #32]
   26400:	str	x3, [x2, #24]
   26404:	str	x1, [x0]
   26408:	ret
   2640c:	nop
   26410:	stp	x29, x30, [sp, #-16]!
   26414:	mov	x29, sp
   26418:	ldr	x1, [x1]
   2641c:	bl	26218 <acc_set_cuda_stream@@OACC_2.0+0x80>
   26420:	cmp	x0, #0x0
   26424:	mov	x5, x0
   26428:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   2642c:	b.ne	26444 <acc_set_cuda_stream@@OACC_2.0+0x2ac>  // b.any
   26430:	mov	w0, #0x1                   	// #1
   26434:	strb	w0, [x4]
   26438:	ldp	x29, x30, [sp], #16
   2643c:	mov	x0, x5
   26440:	ret
   26444:	ldr	x1, [x3]
   26448:	mov	w0, w2
   2644c:	bl	26218 <acc_set_cuda_stream@@OACC_2.0+0x80>
   26450:	cbz	x0, 26430 <acc_set_cuda_stream@@OACC_2.0+0x298>
   26454:	ldr	w1, [x0, #88]
   26458:	ldr	w2, [x5, #88]
   2645c:	cmp	w2, w1
   26460:	b.gt	26430 <acc_set_cuda_stream@@OACC_2.0+0x298>
   26464:	b.lt	26478 <acc_set_cuda_stream@@OACC_2.0+0x2e0>  // b.tstop
   26468:	ldrb	w1, [x0, #207]
   2646c:	cbz	w1, 26430 <acc_set_cuda_stream@@OACC_2.0+0x298>
   26470:	ldrb	w1, [x5, #207]
   26474:	cbnz	w1, 26430 <acc_set_cuda_stream@@OACC_2.0+0x298>
   26478:	mov	x5, x0
   2647c:	strb	wzr, [x4]
   26480:	mov	x0, x5
   26484:	ldp	x29, x30, [sp], #16
   26488:	ret
   2648c:	nop
   26490:	ldr	x2, [x0]
   26494:	mov	x9, x0
   26498:	mov	x8, x1
   2649c:	cbz	x2, 26508 <acc_set_cuda_stream@@OACC_2.0+0x370>
   264a0:	stp	x29, x30, [sp, #-16]!
   264a4:	mov	x29, sp
   264a8:	bl	262e0 <acc_set_cuda_stream@@OACC_2.0+0x148>
   264ac:	ldr	x0, [x0]
   264b0:	cbz	x0, 264f8 <acc_set_cuda_stream@@OACC_2.0+0x360>
   264b4:	ldr	w2, [x0]
   264b8:	ldr	w1, [x8]
   264bc:	cmp	w2, w1
   264c0:	b.eq	26514 <acc_set_cuda_stream@@OACC_2.0+0x37c>  // b.none
   264c4:	b.lt	264e0 <acc_set_cuda_stream@@OACC_2.0+0x348>  // b.tstop
   264c8:	ldr	x1, [x0, #24]
   264cc:	stp	x1, x0, [x8, #24]
   264d0:	str	xzr, [x0, #24]
   264d4:	str	x8, [x9]
   264d8:	ldp	x29, x30, [sp], #16
   264dc:	ret
   264e0:	ldr	x1, [x0, #32]
   264e4:	stp	x0, x1, [x8, #24]
   264e8:	str	xzr, [x0, #32]
   264ec:	str	x8, [x9]
   264f0:	ldp	x29, x30, [sp], #16
   264f4:	ret
   264f8:	stp	xzr, xzr, [x8, #24]
   264fc:	str	x8, [x9]
   26500:	ldp	x29, x30, [sp], #16
   26504:	ret
   26508:	stp	xzr, xzr, [x1, #24]
   2650c:	str	x1, [x9]
   26510:	ret
   26514:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   26518:	add	x0, x0, #0x4b0
   2651c:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   26520:	ldr	x2, [x0]
   26524:	cbz	x2, 2655c <acc_set_cuda_stream@@OACC_2.0+0x3c4>
   26528:	mov	x9, x1
   2652c:	mov	x8, x0
   26530:	stp	x29, x30, [sp, #-16]!
   26534:	mov	x29, sp
   26538:	bl	262e0 <acc_set_cuda_stream@@OACC_2.0+0x148>
   2653c:	ldr	x1, [x0]
   26540:	cbz	x1, 26554 <acc_set_cuda_stream@@OACC_2.0+0x3bc>
   26544:	ldr	w2, [x1]
   26548:	ldr	w0, [x9]
   2654c:	cmp	w2, w0
   26550:	b.eq	26560 <acc_set_cuda_stream@@OACC_2.0+0x3c8>  // b.none
   26554:	ldp	x29, x30, [sp], #16
   26558:	ret
   2655c:	ret
   26560:	ldp	x0, x2, [x1, #24]
   26564:	cbz	x0, 26584 <acc_set_cuda_stream@@OACC_2.0+0x3ec>
   26568:	str	x0, [x8]
   2656c:	cbz	x2, 26554 <acc_set_cuda_stream@@OACC_2.0+0x3bc>
   26570:	mov	x1, x0
   26574:	ldr	x0, [x0, #32]
   26578:	cbnz	x0, 26570 <acc_set_cuda_stream@@OACC_2.0+0x3d8>
   2657c:	str	x2, [x1, #32]
   26580:	b	26554 <acc_set_cuda_stream@@OACC_2.0+0x3bc>
   26584:	str	x2, [x8]
   26588:	b	26554 <acc_set_cuda_stream@@OACC_2.0+0x3bc>
   2658c:	nop
   26590:	ldr	x2, [x0]
   26594:	cbz	x2, 265cc <acc_set_cuda_stream@@OACC_2.0+0x434>
   26598:	mov	x9, x1
   2659c:	stp	x29, x30, [sp, #-16]!
   265a0:	mov	x29, sp
   265a4:	bl	262e0 <acc_set_cuda_stream@@OACC_2.0+0x148>
   265a8:	ldr	x0, [x0]
   265ac:	cbz	x0, 265c0 <acc_set_cuda_stream@@OACC_2.0+0x428>
   265b0:	ldr	w2, [x0]
   265b4:	ldr	w1, [x9]
   265b8:	cmp	w2, w1
   265bc:	b.eq	265c4 <acc_set_cuda_stream@@OACC_2.0+0x42c>  // b.none
   265c0:	mov	x0, #0x0                   	// #0
   265c4:	ldp	x29, x30, [sp], #16
   265c8:	ret
   265cc:	mov	x0, #0x0                   	// #0
   265d0:	ret
   265d4:	nop
   265d8:	mov	x10, x1
   265dc:	sub	x0, x2, w0, sxtw #4
   265e0:	ldr	x1, [x1]
   265e4:	mov	x8, x2
   265e8:	ldur	w2, [x0, #-8]
   265ec:	cbz	x1, 2665c <acc_set_cuda_stream@@OACC_2.0+0x4c4>
   265f0:	stp	x29, x30, [sp, #-48]!
   265f4:	mov	x0, x10
   265f8:	mov	x29, sp
   265fc:	add	x1, sp, #0x18
   26600:	str	w2, [sp, #24]
   26604:	bl	26590 <acc_set_cuda_stream@@OACC_2.0+0x3f8>
   26608:	mov	x11, x0
   2660c:	ldp	x0, x1, [x8]
   26610:	ldr	x2, [x11, #8]
   26614:	cmp	x8, x2
   26618:	str	x0, [x1]
   2661c:	str	x1, [x0, #8]
   26620:	b.eq	2662c <acc_set_cuda_stream@@OACC_2.0+0x494>  // b.none
   26624:	ldp	x29, x30, [sp], #48
   26628:	ret
   2662c:	cmp	x8, x0
   26630:	b.eq	26640 <acc_set_cuda_stream@@OACC_2.0+0x4a8>  // b.none
   26634:	str	x0, [x11, #8]
   26638:	ldp	x29, x30, [sp], #48
   2663c:	ret
   26640:	mov	x1, x11
   26644:	str	xzr, [x11, #8]
   26648:	mov	x0, x10
   2664c:	bl	26520 <acc_set_cuda_stream@@OACC_2.0+0x388>
   26650:	mov	x0, x11
   26654:	bl	8900 <free@plt>
   26658:	b	26624 <acc_set_cuda_stream@@OACC_2.0+0x48c>
   2665c:	ldp	x0, x2, [x8]
   26660:	str	x0, [x2]
   26664:	str	x2, [x0, #8]
   26668:	ldr	x0, [x1, #8]
   2666c:	brk	#0x3e8
   26670:	ldr	x0, [x0]
   26674:	b	26288 <acc_set_cuda_stream@@OACC_2.0+0xf0>
   26678:	stp	x29, x30, [sp, #-48]!
   2667c:	cmp	x1, #0x0
   26680:	mov	x5, x1
   26684:	mov	x29, sp
   26688:	str	x21, [sp, #32]
   2668c:	ldr	x21, [x2]
   26690:	stp	x19, x20, [sp, #16]
   26694:	mov	x19, x4
   26698:	mov	x20, x2
   2669c:	ccmp	x21, x1, #0x2, ne  // ne = any
   266a0:	mov	x4, x21
   266a4:	b.cc	266c8 <acc_set_cuda_stream@@OACC_2.0+0x530>  // b.lo, b.ul, b.last
   266a8:	add	x4, x19, x4
   266ac:	str	x4, [x20]
   266b0:	cmp	x4, x21
   266b4:	b.cc	266f4 <acc_set_cuda_stream@@OACC_2.0+0x55c>  // b.lo, b.ul, b.last
   266b8:	ldp	x19, x20, [sp, #16]
   266bc:	ldr	x21, [sp, #32]
   266c0:	ldp	x29, x30, [sp], #48
   266c4:	ret
   266c8:	sub	x5, x5, x21
   266cc:	and	w1, w3, #0xff
   266d0:	cmp	x5, x19
   266d4:	add	x0, x0, x21
   266d8:	csel	x2, x5, x19, ls  // ls = plast
   266dc:	bl	87c0 <memset@plt>
   266e0:	ldr	x4, [x20]
   266e4:	add	x4, x19, x4
   266e8:	str	x4, [x20]
   266ec:	cmp	x4, x21
   266f0:	b.cs	266b8 <acc_set_cuda_stream@@OACC_2.0+0x520>  // b.hs, b.nlast
   266f4:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   266f8:	add	x0, x0, #0xe08
   266fc:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   26700:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   26704:	mov	x2, x1
   26708:	mov	x1, #0x1                   	// #1
   2670c:	ldr	x3, [x3, #4040]
   26710:	ldr	x3, [x3]
   26714:	b	89d0 <fwrite@plt>
   26718:	stp	x29, x30, [sp, #-64]!
   2671c:	mov	x29, sp
   26720:	stp	x21, x22, [sp, #32]
   26724:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   26728:	stp	x19, x20, [sp, #16]
   2672c:	mov	x19, x1
   26730:	mov	x20, x0
   26734:	ldr	x1, [x21, #1592]
   26738:	cmp	x1, x19
   2673c:	b.hi	267a8 <acc_set_cuda_stream@@OACC_2.0+0x610>  // b.pmore
   26740:	str	x23, [sp, #48]
   26744:	add	x22, x19, #0x1
   26748:	cbnz	x1, 26790 <acc_set_cuda_stream@@OACC_2.0+0x5f8>
   2674c:	mov	x0, x22
   26750:	bl	b220 <fprintf@plt+0x2710>
   26754:	mov	x3, x0
   26758:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   2675c:	mov	x1, x20
   26760:	mov	x2, x19
   26764:	mov	x0, x3
   26768:	bl	85c0 <memcpy@plt>
   2676c:	mov	x3, x0
   26770:	str	x0, [x23, #824]
   26774:	str	x22, [x21, #1592]
   26778:	ldr	x23, [sp, #48]
   2677c:	strb	wzr, [x3, x19]
   26780:	ldp	x19, x20, [sp, #16]
   26784:	ldp	x21, x22, [sp, #32]
   26788:	ldp	x29, x30, [sp], #64
   2678c:	ret
   26790:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   26794:	mov	x1, x22
   26798:	ldr	x0, [x23, #824]
   2679c:	bl	b298 <fprintf@plt+0x2788>
   267a0:	mov	x3, x0
   267a4:	b	2675c <acc_set_cuda_stream@@OACC_2.0+0x5c4>
   267a8:	adrp	x21, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   267ac:	mov	x1, x0
   267b0:	mov	x2, x19
   267b4:	ldr	x0, [x21, #824]
   267b8:	bl	85c0 <memcpy@plt>
   267bc:	ldr	x3, [x21, #824]
   267c0:	strb	wzr, [x3, x19]
   267c4:	ldp	x19, x20, [sp, #16]
   267c8:	ldp	x21, x22, [sp, #32]
   267cc:	ldp	x29, x30, [sp], #64
   267d0:	ret
   267d4:	nop

00000000000267d8 <omp_set_affinity_format@@OMP_5.0>:
   267d8:	stp	x29, x30, [sp, #-32]!
   267dc:	mov	x29, sp
   267e0:	str	x19, [sp, #16]
   267e4:	mov	x19, x0
   267e8:	bl	85f0 <strlen@plt>
   267ec:	mov	x1, x0
   267f0:	mov	x0, x19
   267f4:	ldr	x19, [sp, #16]
   267f8:	ldp	x29, x30, [sp], #32
   267fc:	b	26718 <acc_set_cuda_stream@@OACC_2.0+0x580>

0000000000026800 <omp_get_affinity_format@@OMP_5.0>:
   26800:	stp	x29, x30, [sp, #-48]!
   26804:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   26808:	mov	x29, sp
   2680c:	stp	x21, x22, [sp, #32]
   26810:	mov	x21, x0
   26814:	ldr	x22, [x2, #824]
   26818:	stp	x19, x20, [sp, #16]
   2681c:	mov	x19, x1
   26820:	mov	x0, x22
   26824:	bl	85f0 <strlen@plt>
   26828:	mov	x20, x0
   2682c:	cbz	x19, 26848 <omp_get_affinity_format@@OMP_5.0+0x48>
   26830:	cmp	x0, x19
   26834:	b.cs	2685c <omp_get_affinity_format@@OMP_5.0+0x5c>  // b.hs, b.nlast
   26838:	mov	x1, x22
   2683c:	mov	x0, x21
   26840:	add	x2, x20, #0x1
   26844:	bl	85c0 <memcpy@plt>
   26848:	mov	x0, x20
   2684c:	ldp	x19, x20, [sp, #16]
   26850:	ldp	x21, x22, [sp, #32]
   26854:	ldp	x29, x30, [sp], #48
   26858:	ret
   2685c:	sub	x19, x19, #0x1
   26860:	mov	x1, x22
   26864:	mov	x2, x19
   26868:	mov	x0, x21
   2686c:	bl	85c0 <memcpy@plt>
   26870:	strb	wzr, [x21, x19]
   26874:	mov	x0, x20
   26878:	ldp	x19, x20, [sp, #16]
   2687c:	ldp	x21, x22, [sp, #32]
   26880:	ldp	x29, x30, [sp], #48
   26884:	ret
   26888:	stp	x29, x30, [sp, #-48]!
   2688c:	cmp	x1, #0x0
   26890:	mov	x29, sp
   26894:	str	x21, [sp, #32]
   26898:	ldr	x21, [x2]
   2689c:	stp	x19, x20, [sp, #16]
   268a0:	mov	x19, x4
   268a4:	mov	x20, x2
   268a8:	ccmp	x21, x1, #0x2, ne  // ne = any
   268ac:	mov	x4, x21
   268b0:	b.cc	268d4 <omp_get_affinity_format@@OMP_5.0+0xd4>  // b.lo, b.ul, b.last
   268b4:	add	x4, x19, x4
   268b8:	str	x4, [x20]
   268bc:	cmp	x4, x21
   268c0:	b.cc	26900 <omp_get_affinity_format@@OMP_5.0+0x100>  // b.lo, b.ul, b.last
   268c4:	ldp	x19, x20, [sp, #16]
   268c8:	ldr	x21, [sp, #32]
   268cc:	ldp	x29, x30, [sp], #48
   268d0:	ret
   268d4:	sub	x5, x1, x21
   268d8:	add	x0, x0, x21
   268dc:	cmp	x5, x19
   268e0:	mov	x1, x3
   268e4:	csel	x2, x5, x19, ls  // ls = plast
   268e8:	bl	85c0 <memcpy@plt>
   268ec:	ldr	x4, [x20]
   268f0:	add	x4, x19, x4
   268f4:	str	x4, [x20]
   268f8:	cmp	x4, x21
   268fc:	b.cs	268c4 <omp_get_affinity_format@@OMP_5.0+0xc4>  // b.hs, b.nlast
   26900:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   26904:	add	x0, x0, #0xe08
   26908:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   2690c:	nop
   26910:	stp	x29, x30, [sp, #-64]!
   26914:	cmp	x4, x6
   26918:	ccmn	x4, #0x1, #0x4, hi  // hi = pmore
   2691c:	mov	x29, sp
   26920:	stp	x19, x20, [sp, #16]
   26924:	mov	x20, x6
   26928:	stp	x21, x22, [sp, #32]
   2692c:	mov	x21, x5
   26930:	b.eq	269b8 <omp_get_affinity_format@@OMP_5.0+0x1b8>  // b.none
   26934:	stp	x23, x24, [sp, #48]
   26938:	and	w3, w3, #0xff
   2693c:	mov	x22, x0
   26940:	mov	x23, x1
   26944:	mov	x24, x2
   26948:	sub	x19, x4, x6
   2694c:	cbz	w3, 26984 <omp_get_affinity_format@@OMP_5.0+0x184>
   26950:	mov	x4, x19
   26954:	mov	w3, #0x20                  	// #32
   26958:	bl	26678 <acc_set_cuda_stream@@OACC_2.0+0x4e0>
   2695c:	mov	x4, x20
   26960:	mov	x3, x21
   26964:	mov	x2, x24
   26968:	mov	x1, x23
   2696c:	mov	x0, x22
   26970:	ldp	x19, x20, [sp, #16]
   26974:	ldp	x21, x22, [sp, #32]
   26978:	ldp	x23, x24, [sp, #48]
   2697c:	ldp	x29, x30, [sp], #64
   26980:	b	26888 <omp_get_affinity_format@@OMP_5.0+0x88>
   26984:	mov	x4, x6
   26988:	mov	x3, x5
   2698c:	bl	26888 <omp_get_affinity_format@@OMP_5.0+0x88>
   26990:	mov	x4, x19
   26994:	mov	x2, x24
   26998:	mov	x1, x23
   2699c:	mov	x0, x22
   269a0:	ldp	x19, x20, [sp, #16]
   269a4:	mov	w3, #0x20                  	// #32
   269a8:	ldp	x21, x22, [sp, #32]
   269ac:	ldp	x23, x24, [sp, #48]
   269b0:	ldp	x29, x30, [sp], #64
   269b4:	b	26678 <acc_set_cuda_stream@@OACC_2.0+0x4e0>
   269b8:	ldp	x19, x20, [sp, #16]
   269bc:	mov	x4, x6
   269c0:	ldp	x21, x22, [sp, #32]
   269c4:	mov	x3, x5
   269c8:	ldp	x29, x30, [sp], #64
   269cc:	b	26888 <omp_get_affinity_format@@OMP_5.0+0x88>
   269d0:	stp	x29, x30, [sp, #-80]!
   269d4:	mov	x29, sp
   269d8:	stp	x19, x20, [sp, #16]
   269dc:	mov	x19, x5
   269e0:	mov	x20, x6
   269e4:	stp	x21, x22, [sp, #32]
   269e8:	mov	x22, x0
   269ec:	mov	x0, x6
   269f0:	stp	x23, x24, [sp, #48]
   269f4:	mov	x23, x1
   269f8:	mov	x24, x2
   269fc:	stp	x25, x26, [sp, #64]
   26a00:	and	w25, w3, #0xff
   26a04:	and	w26, w4, #0xff
   26a08:	bl	85f0 <strlen@plt>
   26a0c:	cmp	x0, x19
   26a10:	mov	x21, x0
   26a14:	ccmn	x19, #0x1, #0x4, cc  // cc = lo, ul, last
   26a18:	b.eq	26a78 <omp_get_affinity_format@@OMP_5.0+0x278>  // b.none
   26a1c:	sub	x19, x19, x0
   26a20:	cbz	w25, 26aa4 <omp_get_affinity_format@@OMP_5.0+0x2a4>
   26a24:	ldrb	w0, [x20]
   26a28:	mov	x4, #0x1                   	// #1
   26a2c:	cmp	w0, #0x2d
   26a30:	b.eq	26b18 <omp_get_affinity_format@@OMP_5.0+0x318>  // b.none
   26a34:	cmp	w0, #0x30
   26a38:	b.eq	26b08 <omp_get_affinity_format@@OMP_5.0+0x308>  // b.none
   26a3c:	mov	x0, x22
   26a40:	mov	x4, x19
   26a44:	mov	x2, x24
   26a48:	mov	x1, x23
   26a4c:	mov	w3, #0x30                  	// #48
   26a50:	bl	26678 <acc_set_cuda_stream@@OACC_2.0+0x4e0>
   26a54:	ldrb	w0, [x20]
   26a58:	cmp	w0, #0x2d
   26a5c:	b.eq	26b30 <omp_get_affinity_format@@OMP_5.0+0x330>  // b.none
   26a60:	cmp	w0, #0x30
   26a64:	b.ne	26a78 <omp_get_affinity_format@@OMP_5.0+0x278>  // b.any
   26a68:	ldrb	w0, [x20, #1]
   26a6c:	cmp	w0, #0x78
   26a70:	b.eq	26b3c <omp_get_affinity_format@@OMP_5.0+0x33c>  // b.none
   26a74:	nop
   26a78:	mov	x4, x21
   26a7c:	mov	x3, x20
   26a80:	mov	x2, x24
   26a84:	mov	x1, x23
   26a88:	mov	x0, x22
   26a8c:	ldp	x19, x20, [sp, #16]
   26a90:	ldp	x21, x22, [sp, #32]
   26a94:	ldp	x23, x24, [sp, #48]
   26a98:	ldp	x25, x26, [sp, #64]
   26a9c:	ldp	x29, x30, [sp], #80
   26aa0:	b	26888 <omp_get_affinity_format@@OMP_5.0+0x88>
   26aa4:	cbz	w26, 26ac4 <omp_get_affinity_format@@OMP_5.0+0x2c4>
   26aa8:	mov	x4, x19
   26aac:	mov	x2, x24
   26ab0:	mov	x1, x23
   26ab4:	mov	x0, x22
   26ab8:	mov	w3, #0x20                  	// #32
   26abc:	bl	26678 <acc_set_cuda_stream@@OACC_2.0+0x4e0>
   26ac0:	b	26a78 <omp_get_affinity_format@@OMP_5.0+0x278>
   26ac4:	mov	x4, x0
   26ac8:	mov	x3, x20
   26acc:	mov	x2, x24
   26ad0:	mov	x1, x23
   26ad4:	mov	x0, x22
   26ad8:	bl	26888 <omp_get_affinity_format@@OMP_5.0+0x88>
   26adc:	mov	x4, x19
   26ae0:	mov	x2, x24
   26ae4:	mov	x1, x23
   26ae8:	mov	x0, x22
   26aec:	ldp	x19, x20, [sp, #16]
   26af0:	mov	w3, #0x20                  	// #32
   26af4:	ldp	x21, x22, [sp, #32]
   26af8:	ldp	x23, x24, [sp, #48]
   26afc:	ldp	x25, x26, [sp, #64]
   26b00:	ldp	x29, x30, [sp], #80
   26b04:	b	26678 <acc_set_cuda_stream@@OACC_2.0+0x4e0>
   26b08:	ldrb	w0, [x20, #1]
   26b0c:	cmp	w0, #0x78
   26b10:	b.ne	26a3c <omp_get_affinity_format@@OMP_5.0+0x23c>  // b.any
   26b14:	mov	x4, #0x2                   	// #2
   26b18:	mov	x3, x20
   26b1c:	mov	x2, x24
   26b20:	mov	x1, x23
   26b24:	mov	x0, x22
   26b28:	bl	26888 <omp_get_affinity_format@@OMP_5.0+0x88>
   26b2c:	b	26a3c <omp_get_affinity_format@@OMP_5.0+0x23c>
   26b30:	sub	x4, x21, #0x1
   26b34:	add	x3, x20, #0x1
   26b38:	b	26a80 <omp_get_affinity_format@@OMP_5.0+0x280>
   26b3c:	sub	x4, x21, #0x2
   26b40:	add	x3, x20, #0x2
   26b44:	b	26a80 <omp_get_affinity_format@@OMP_5.0+0x280>
   26b48:	stp	x29, x30, [sp, #-416]!
   26b4c:	mov	x29, sp
   26b50:	stp	x19, x20, [sp, #16]
   26b54:	add	x20, sp, #0xa0
   26b58:	stp	x21, x22, [sp, #32]
   26b5c:	mov	x22, x1
   26b60:	mov	x21, x2
   26b64:	stp	x23, x24, [sp, #48]
   26b68:	mov	x23, x0
   26b6c:	sub	w0, w5, #0x1
   26b70:	stp	x25, x26, [sp, #64]
   26b74:	add	x25, sp, #0x98
   26b78:	stp	x27, x28, [sp, #80]
   26b7c:	adrp	x28, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   26b80:	str	x4, [sp, #120]
   26b84:	str	w0, [sp, #132]
   26b88:	add	x0, x28, #0xde0
   26b8c:	str	x0, [sp, #112]
   26b90:	str	x3, [sp, #136]
   26b94:	str	xzr, [sp, #152]
   26b98:	mov	x0, x21
   26b9c:	mov	w1, #0x25                  	// #37
   26ba0:	bl	89a0 <strchr@plt>
   26ba4:	mov	x19, x0
   26ba8:	cbz	x0, 26c94 <omp_get_affinity_format@@OMP_5.0+0x494>
   26bac:	nop
   26bb0:	cmp	x21, x19
   26bb4:	b.eq	26bd0 <omp_get_affinity_format@@OMP_5.0+0x3d0>  // b.none
   26bb8:	sub	x4, x19, x21
   26bbc:	mov	x3, x21
   26bc0:	mov	x2, x25
   26bc4:	mov	x1, x22
   26bc8:	mov	x0, x23
   26bcc:	bl	26888 <omp_get_affinity_format@@OMP_5.0+0x88>
   26bd0:	ldrb	w0, [x19]
   26bd4:	cbz	w0, 2700c <omp_get_affinity_format@@OMP_5.0+0x80c>
   26bd8:	ldrb	w1, [x19, #1]
   26bdc:	cmp	w1, #0x25
   26be0:	b.eq	26f4c <omp_get_affinity_format@@OMP_5.0+0x74c>  // b.none
   26be4:	cmp	w1, #0x30
   26be8:	b.eq	26e3c <omp_get_affinity_format@@OMP_5.0+0x63c>  // b.none
   26bec:	add	x19, x19, #0x1
   26bf0:	cmp	w1, #0x2e
   26bf4:	b.eq	26f08 <omp_get_affinity_format@@OMP_5.0+0x708>  // b.none
   26bf8:	sub	w0, w1, #0x31
   26bfc:	and	w0, w0, #0xff
   26c00:	cmp	w0, #0x8
   26c04:	b.ls	27084 <omp_get_affinity_format@@OMP_5.0+0x884>  // b.plast
   26c08:	str	wzr, [sp, #108]
   26c0c:	cmp	w1, #0x7b
   26c10:	str	wzr, [sp, #128]
   26c14:	mov	x21, #0xffffffffffffffff    	// #-1
   26c18:	b.eq	26e94 <omp_get_affinity_format@@OMP_5.0+0x694>  // b.none
   26c1c:	cmp	w1, #0x54
   26c20:	b.eq	26f40 <omp_get_affinity_format@@OMP_5.0+0x740>  // b.none
   26c24:	b.hi	26dcc <omp_get_affinity_format@@OMP_5.0+0x5cc>  // b.pmore
   26c28:	cmp	w1, #0x4c
   26c2c:	b.eq	26f7c <omp_get_affinity_format@@OMP_5.0+0x77c>  // b.none
   26c30:	b.ls	26cb8 <omp_get_affinity_format@@OMP_5.0+0x4b8>  // b.plast
   26c34:	cmp	w1, #0x4e
   26c38:	b.ne	26ca4 <omp_get_affinity_format@@OMP_5.0+0x4a4>  // b.any
   26c3c:	ldr	x0, [sp, #120]
   26c40:	mov	w2, #0x1                   	// #1
   26c44:	ldr	x0, [x0]
   26c48:	cbz	x0, 26c50 <omp_get_affinity_format@@OMP_5.0+0x450>
   26c4c:	ldr	w2, [x0]
   26c50:	ldr	x1, [sp, #112]
   26c54:	mov	x0, x20
   26c58:	bl	8670 <sprintf@plt>
   26c5c:	ldrb	w4, [sp, #128]
   26c60:	mov	x6, x20
   26c64:	ldrb	w3, [sp, #108]
   26c68:	mov	x5, x21
   26c6c:	mov	x2, x25
   26c70:	mov	x1, x22
   26c74:	mov	x0, x23
   26c78:	bl	269d0 <omp_get_affinity_format@@OMP_5.0+0x1d0>
   26c7c:	add	x21, x19, #0x1
   26c80:	mov	x0, x21
   26c84:	mov	w1, #0x25                  	// #37
   26c88:	bl	89a0 <strchr@plt>
   26c8c:	mov	x19, x0
   26c90:	cbnz	x0, 26bb0 <omp_get_affinity_format@@OMP_5.0+0x3b0>
   26c94:	mov	x0, x21
   26c98:	bl	85f0 <strlen@plt>
   26c9c:	add	x19, x21, x0
   26ca0:	b	26bb0 <omp_get_affinity_format@@OMP_5.0+0x3b0>
   26ca4:	cmp	w1, #0x50
   26ca8:	b.ne	27058 <omp_get_affinity_format@@OMP_5.0+0x858>  // b.any
   26cac:	bl	8740 <getpid@plt>
   26cb0:	mov	w2, w0
   26cb4:	b	26c50 <omp_get_affinity_format@@OMP_5.0+0x450>
   26cb8:	cmp	w1, #0x41
   26cbc:	b.ne	26d0c <omp_get_affinity_format@@OMP_5.0+0x50c>  // b.any
   26cc0:	cmn	x21, #0x1
   26cc4:	b.eq	26cf0 <omp_get_affinity_format@@OMP_5.0+0x4f0>  // b.none
   26cc8:	ldp	w0, w3, [sp, #128]
   26ccc:	cbz	w0, 26fc4 <omp_get_affinity_format@@OMP_5.0+0x7c4>
   26cd0:	mov	x2, x20
   26cd4:	mov	x1, #0x0                   	// #0
   26cd8:	mov	x0, #0x0                   	// #0
   26cdc:	str	xzr, [sp, #160]
   26ce0:	bl	1c9f0 <omp_get_place_proc_ids@@OMP_4.5+0xf0>
   26ce4:	ldr	x4, [sp, #160]
   26ce8:	cmp	x4, x21
   26cec:	b.cc	2702c <omp_get_affinity_format@@OMP_5.0+0x82c>  // b.lo, b.ul, b.last
   26cf0:	ldr	w3, [sp, #132]
   26cf4:	mov	x2, x25
   26cf8:	mov	x1, x22
   26cfc:	mov	x0, x23
   26d00:	add	x21, x19, #0x1
   26d04:	bl	1c9f0 <omp_get_place_proc_ids@@OMP_4.5+0xf0>
   26d08:	b	26c80 <omp_get_affinity_format@@OMP_5.0+0x480>
   26d0c:	cmp	w1, #0x48
   26d10:	b.ne	27058 <omp_get_affinity_format@@OMP_5.0+0x858>  // b.any
   26d14:	mov	x24, x20
   26d18:	mov	x27, #0x100                 	// #256
   26d1c:	sub	x26, x27, #0x1
   26d20:	mov	x0, x24
   26d24:	mov	x1, x26
   26d28:	strb	wzr, [x24, x26]
   26d2c:	bl	8a40 <gethostname@plt>
   26d30:	cbnz	w0, 26d48 <omp_get_affinity_format@@OMP_5.0+0x548>
   26d34:	mov	x0, x24
   26d38:	bl	85f0 <strlen@plt>
   26d3c:	cmp	x26, x0
   26d40:	b.hi	26d94 <omp_get_affinity_format@@OMP_5.0+0x594>  // b.pmore
   26d44:	nop
   26d48:	cmp	x27, #0x100, lsl #12
   26d4c:	b.eq	26f88 <omp_get_affinity_format@@OMP_5.0+0x788>  // b.none
   26d50:	lsl	x27, x27, #1
   26d54:	cmp	x27, #0x200
   26d58:	b.eq	26e2c <omp_get_affinity_format@@OMP_5.0+0x62c>  // b.none
   26d5c:	mov	x0, x24
   26d60:	mov	x1, x27
   26d64:	sub	x26, x27, #0x1
   26d68:	bl	b298 <fprintf@plt+0x2788>
   26d6c:	mov	x24, x0
   26d70:	mov	x1, x26
   26d74:	mov	x0, x24
   26d78:	strb	wzr, [x24, x26]
   26d7c:	bl	8a40 <gethostname@plt>
   26d80:	cbnz	w0, 26d48 <omp_get_affinity_format@@OMP_5.0+0x548>
   26d84:	mov	x0, x24
   26d88:	bl	85f0 <strlen@plt>
   26d8c:	cmp	x26, x0
   26d90:	b.ls	26d48 <omp_get_affinity_format@@OMP_5.0+0x548>  // b.plast
   26d94:	ldrb	w3, [sp, #128]
   26d98:	mov	x6, x0
   26d9c:	mov	x4, x21
   26da0:	mov	x5, x24
   26da4:	mov	x2, x25
   26da8:	mov	x1, x22
   26dac:	mov	x0, x23
   26db0:	bl	26910 <omp_get_affinity_format@@OMP_5.0+0x110>
   26db4:	cmp	x24, x20
   26db8:	b.eq	26c7c <omp_get_affinity_format@@OMP_5.0+0x47c>  // b.none
   26dbc:	mov	x0, x24
   26dc0:	add	x21, x19, #0x1
   26dc4:	bl	8900 <free@plt>
   26dc8:	b	26c80 <omp_get_affinity_format@@OMP_5.0+0x480>
   26dcc:	cmp	w1, #0x6e
   26dd0:	b.eq	26f70 <omp_get_affinity_format@@OMP_5.0+0x770>  // b.none
   26dd4:	b.ls	26dec <omp_get_affinity_format@@OMP_5.0+0x5ec>  // b.plast
   26dd8:	cmp	w1, #0x74
   26ddc:	b.ne	27058 <omp_get_affinity_format@@OMP_5.0+0x858>  // b.any
   26de0:	bl	8a50 <omp_get_team_num@plt>
   26de4:	mov	w2, w0
   26de8:	b	26c50 <omp_get_affinity_format@@OMP_5.0+0x450>
   26dec:	cmp	w1, #0x61
   26df0:	b.ne	26e0c <omp_get_affinity_format@@OMP_5.0+0x60c>  // b.any
   26df4:	ldr	x0, [sp, #120]
   26df8:	mov	w2, #0xffffffff            	// #-1
   26dfc:	ldr	x0, [x0]
   26e00:	cbz	x0, 26c50 <omp_get_affinity_format@@OMP_5.0+0x450>
   26e04:	ldr	w2, [x0, #32]
   26e08:	b	26c50 <omp_get_affinity_format@@OMP_5.0+0x450>
   26e0c:	cmp	w1, #0x69
   26e10:	b.ne	27058 <omp_get_affinity_format@@OMP_5.0+0x858>  // b.any
   26e14:	ldr	x2, [sp, #136]
   26e18:	mov	x0, x20
   26e1c:	adrp	x1, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   26e20:	add	x1, x1, #0xf30
   26e24:	bl	8670 <sprintf@plt>
   26e28:	b	26c5c <omp_get_affinity_format@@OMP_5.0+0x45c>
   26e2c:	mov	x0, x27
   26e30:	bl	b220 <fprintf@plt+0x2710>
   26e34:	mov	x24, x0
   26e38:	b	26d1c <omp_get_affinity_format@@OMP_5.0+0x51c>
   26e3c:	ldrb	w0, [x19, #2]
   26e40:	add	x19, x19, #0x2
   26e44:	cmp	w0, #0x2e
   26e48:	b.ne	27070 <omp_get_affinity_format@@OMP_5.0+0x870>  // b.any
   26e4c:	mov	w0, #0x1                   	// #1
   26e50:	str	w0, [sp, #108]
   26e54:	ldrb	w1, [x19, #1]
   26e58:	add	x0, x19, #0x1
   26e5c:	sub	w1, w1, #0x31
   26e60:	and	w1, w1, #0xff
   26e64:	cmp	w1, #0x8
   26e68:	b.hi	27064 <omp_get_affinity_format@@OMP_5.0+0x864>  // b.pmore
   26e6c:	mov	w1, #0x1                   	// #1
   26e70:	str	w1, [sp, #128]
   26e74:	mov	x1, x20
   26e78:	mov	w2, #0xa                   	// #10
   26e7c:	bl	85e0 <strtoul@plt>
   26e80:	mov	x21, x0
   26e84:	ldr	x19, [sp, #160]
   26e88:	ldrb	w1, [x19]
   26e8c:	cmp	w1, #0x7b
   26e90:	b.ne	26c1c <omp_get_affinity_format@@OMP_5.0+0x41c>  // b.any
   26e94:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   26e98:	add	x27, x19, #0x1
   26e9c:	add	x26, x0, #0x478
   26ea0:	mov	w28, #0x0                   	// #0
   26ea4:	nop
   26ea8:	ldrb	w24, [x26, #18]
   26eac:	mov	x1, x26
   26eb0:	mov	x0, x27
   26eb4:	mov	x2, x24
   26eb8:	bl	8790 <strncmp@plt>
   26ebc:	cbnz	w0, 26ed4 <omp_get_affinity_format@@OMP_5.0+0x6d4>
   26ec0:	add	x2, x24, #0x1
   26ec4:	add	x4, x19, x2
   26ec8:	ldrb	w0, [x19, x2]
   26ecc:	cmp	w0, #0x7d
   26ed0:	b.eq	26f10 <omp_get_affinity_format@@OMP_5.0+0x710>  // b.none
   26ed4:	add	w28, w28, #0x1
   26ed8:	add	x26, x26, #0x14
   26edc:	cmp	w28, #0xa
   26ee0:	b.ne	26ea8 <omp_get_affinity_format@@OMP_5.0+0x6a8>  // b.any
   26ee4:	mov	x0, x27
   26ee8:	mov	w1, #0x7d                  	// #125
   26eec:	bl	89a0 <strchr@plt>
   26ef0:	cbz	x0, 27048 <omp_get_affinity_format@@OMP_5.0+0x848>
   26ef4:	sub	w1, w0, w27
   26ef8:	mov	x2, x27
   26efc:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   26f00:	add	x0, x0, #0xeb8
   26f04:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   26f08:	str	wzr, [sp, #108]
   26f0c:	b	26e54 <omp_get_affinity_format@@OMP_5.0+0x654>
   26f10:	sbfiz	x1, x28, #2, #32
   26f14:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   26f18:	add	x3, x1, w28, sxtw
   26f1c:	add	x0, x0, #0x478
   26f20:	add	x3, x0, x3, lsl #2
   26f24:	ldrb	w1, [x3, #19]
   26f28:	cmp	w1, #0x7b
   26f2c:	b.eq	2707c <omp_get_affinity_format@@OMP_5.0+0x87c>  // b.none
   26f30:	mov	x19, x4
   26f34:	cmp	w1, #0x54
   26f38:	b.ne	26c24 <omp_get_affinity_format@@OMP_5.0+0x424>  // b.any
   26f3c:	nop
   26f40:	bl	8a80 <omp_get_num_teams@plt>
   26f44:	mov	w2, w0
   26f48:	b	26c50 <omp_get_affinity_format@@OMP_5.0+0x450>
   26f4c:	add	x21, x19, #0x2
   26f50:	mov	x2, x25
   26f54:	mov	x1, x22
   26f58:	mov	x0, x23
   26f5c:	adrp	x3, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   26f60:	mov	x4, #0x1                   	// #1
   26f64:	add	x3, x3, #0xe30
   26f68:	bl	26888 <omp_get_affinity_format@@OMP_5.0+0x88>
   26f6c:	b	26b98 <omp_get_affinity_format@@OMP_5.0+0x398>
   26f70:	ldr	x0, [sp, #120]
   26f74:	ldr	w2, [x0, #24]
   26f78:	b	26c50 <omp_get_affinity_format@@OMP_5.0+0x450>
   26f7c:	ldr	x0, [sp, #120]
   26f80:	ldr	w2, [x0, #28]
   26f84:	b	26c50 <omp_get_affinity_format@@OMP_5.0+0x450>
   26f88:	cmp	x24, x20
   26f8c:	b.eq	26f98 <omp_get_affinity_format@@OMP_5.0+0x798>  // b.none
   26f90:	mov	x0, x24
   26f94:	bl	8900 <free@plt>
   26f98:	ldrb	w3, [sp, #128]
   26f9c:	mov	x4, x21
   26fa0:	mov	x2, x25
   26fa4:	mov	x1, x22
   26fa8:	mov	x0, x23
   26fac:	adrp	x5, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   26fb0:	mov	x6, #0x4                   	// #4
   26fb4:	add	x5, x5, #0xf28
   26fb8:	add	x21, x19, #0x1
   26fbc:	bl	26910 <omp_get_affinity_format@@OMP_5.0+0x110>
   26fc0:	b	26c80 <omp_get_affinity_format@@OMP_5.0+0x480>
   26fc4:	mov	x0, x23
   26fc8:	mov	x2, x25
   26fcc:	mov	x1, x22
   26fd0:	ldr	x24, [sp, #152]
   26fd4:	bl	1c9f0 <omp_get_place_proc_ids@@OMP_4.5+0xf0>
   26fd8:	ldr	x4, [sp, #152]
   26fdc:	sub	x0, x4, x24
   26fe0:	cmp	x0, x21
   26fe4:	b.cs	26c7c <omp_get_affinity_format@@OMP_5.0+0x47c>  // b.hs, b.nlast
   26fe8:	sub	x4, x24, x4
   26fec:	mov	x2, x25
   26ff0:	add	x4, x4, x21
   26ff4:	mov	x1, x22
   26ff8:	mov	x0, x23
   26ffc:	mov	w3, #0x20                  	// #32
   27000:	add	x21, x19, #0x1
   27004:	bl	26678 <acc_set_cuda_stream@@OACC_2.0+0x4e0>
   27008:	b	26c80 <omp_get_affinity_format@@OMP_5.0+0x480>
   2700c:	ldp	x19, x20, [sp, #16]
   27010:	ldp	x21, x22, [sp, #32]
   27014:	ldp	x23, x24, [sp, #48]
   27018:	ldp	x25, x26, [sp, #64]
   2701c:	ldp	x27, x28, [sp, #80]
   27020:	ldr	x0, [sp, #152]
   27024:	ldp	x29, x30, [sp], #416
   27028:	ret
   2702c:	sub	x4, x21, x4
   27030:	mov	x2, x25
   27034:	mov	x1, x22
   27038:	mov	x0, x23
   2703c:	mov	w3, #0x20                  	// #32
   27040:	bl	26678 <acc_set_cuda_stream@@OACC_2.0+0x4e0>
   27044:	b	26cf0 <omp_get_affinity_format@@OMP_5.0+0x4f0>
   27048:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   2704c:	mov	x1, x27
   27050:	add	x0, x0, #0xef0
   27054:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   27058:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   2705c:	add	x0, x0, #0xf38
   27060:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   27064:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   27068:	add	x0, x0, #0xe70
   2706c:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   27070:	adrp	x0, 28000 <omp_get_team_num@@OMP_4.0+0xcf8>
   27074:	add	x0, x0, #0xe38
   27078:	bl	b640 <GOMP_critical_name_end@@GOMP_1.0+0x218>
   2707c:	add	x27, x4, #0x1
   27080:	b	26ee4 <omp_get_affinity_format@@OMP_5.0+0x6e4>
   27084:	mov	x0, x19
   27088:	str	wzr, [sp, #108]
   2708c:	str	wzr, [sp, #128]
   27090:	b	26e74 <omp_get_affinity_format@@OMP_5.0+0x674>
   27094:	nop

0000000000027098 <omp_capture_affinity@@OMP_5.0>:
   27098:	stp	x29, x30, [sp, #-48]!
   2709c:	mov	x29, sp
   270a0:	stp	x19, x20, [sp, #16]
   270a4:	mov	x20, x1
   270a8:	str	x21, [sp, #32]
   270ac:	mov	x21, x0
   270b0:	cbz	x2, 27114 <omp_capture_affinity@@OMP_5.0+0x7c>
   270b4:	ldrb	w0, [x2]
   270b8:	mov	x19, x2
   270bc:	cbz	w0, 27114 <omp_capture_affinity@@OMP_5.0+0x7c>
   270c0:	bl	8a90 <pthread_self@plt>
   270c4:	mov	x3, x0
   270c8:	adrp	x5, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   270cc:	ldr	x5, [x5, #4016]
   270d0:	mrs	x4, tpidr_el0
   270d4:	mov	x2, x19
   270d8:	mov	x1, x20
   270dc:	add	x5, x4, x5
   270e0:	mov	x0, x21
   270e4:	add	x4, x5, #0x10
   270e8:	ldr	w5, [x5, #92]
   270ec:	bl	26b48 <omp_get_affinity_format@@OMP_5.0+0x348>
   270f0:	cbz	x20, 27104 <omp_capture_affinity@@OMP_5.0+0x6c>
   270f4:	cmp	x20, x0
   270f8:	b.hi	27120 <omp_capture_affinity@@OMP_5.0+0x88>  // b.pmore
   270fc:	add	x20, x21, x20
   27100:	sturb	wzr, [x20, #-1]
   27104:	ldp	x19, x20, [sp, #16]
   27108:	ldr	x21, [sp, #32]
   2710c:	ldp	x29, x30, [sp], #48
   27110:	ret
   27114:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   27118:	ldr	x19, [x0, #824]
   2711c:	b	270c0 <omp_capture_affinity@@OMP_5.0+0x28>
   27120:	strb	wzr, [x21, x0]
   27124:	ldp	x19, x20, [sp, #16]
   27128:	ldr	x21, [sp, #32]
   2712c:	ldp	x29, x30, [sp], #48
   27130:	ret
   27134:	nop

0000000000027138 <omp_display_affinity@@OMP_5.0>:
   27138:	sub	sp, sp, #0x230
   2713c:	mov	x2, x0
   27140:	mov	x1, #0x200                 	// #512
   27144:	stp	x29, x30, [sp]
   27148:	mov	x29, sp
   2714c:	str	x21, [sp, #32]
   27150:	add	x21, sp, #0x30
   27154:	stp	x19, x20, [sp, #16]
   27158:	mov	x20, x0
   2715c:	mov	x0, x21
   27160:	bl	27098 <omp_capture_affinity@@OMP_5.0>
   27164:	mov	x19, x0
   27168:	cmp	x0, #0x1ff
   2716c:	b.ls	271c8 <omp_display_affinity@@OMP_5.0+0x90>  // b.plast
   27170:	add	x21, x0, #0x1
   27174:	mov	x0, x21
   27178:	bl	b220 <fprintf@plt+0x2710>
   2717c:	mov	x2, x20
   27180:	mov	x1, x21
   27184:	mov	x20, x0
   27188:	bl	27098 <omp_capture_affinity@@OMP_5.0>
   2718c:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   27190:	mov	w4, #0xa                   	// #10
   27194:	mov	x2, x21
   27198:	mov	x0, x20
   2719c:	ldr	x3, [x3, #4040]
   271a0:	strb	w4, [x20, x19]
   271a4:	mov	x1, #0x1                   	// #1
   271a8:	ldr	x3, [x3]
   271ac:	bl	89d0 <fwrite@plt>
   271b0:	mov	x0, x20
   271b4:	ldp	x29, x30, [sp]
   271b8:	ldp	x19, x20, [sp, #16]
   271bc:	ldr	x21, [sp, #32]
   271c0:	add	sp, sp, #0x230
   271c4:	b	8900 <free@plt>
   271c8:	adrp	x3, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   271cc:	mov	w4, #0xa                   	// #10
   271d0:	add	x2, x0, #0x1
   271d4:	mov	x1, #0x1                   	// #1
   271d8:	ldr	x3, [x3, #4040]
   271dc:	mov	x0, x21
   271e0:	strb	w4, [x21, x19]
   271e4:	ldr	x3, [x3]
   271e8:	bl	89d0 <fwrite@plt>
   271ec:	ldp	x29, x30, [sp]
   271f0:	ldp	x19, x20, [sp, #16]
   271f4:	ldr	x21, [sp, #32]
   271f8:	add	sp, sp, #0x230
   271fc:	ret

0000000000027200 <GOMP_teams_reg@@GOMP_5.0>:
   27200:	stp	x29, x30, [sp, #-80]!
   27204:	mov	x29, sp
   27208:	stp	x19, x20, [sp, #16]
   2720c:	mov	w20, w2
   27210:	stp	x21, x22, [sp, #32]
   27214:	mov	x21, x0
   27218:	mov	x22, x1
   2721c:	stp	x23, x24, [sp, #48]
   27220:	mov	w23, w3
   27224:	str	x25, [sp, #64]
   27228:	mov	w25, #0x0                   	// #0
   2722c:	cbz	w3, 2725c <GOMP_teams_reg@@GOMP_5.0+0x5c>
   27230:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   27234:	ldr	x0, [x0, #4016]
   27238:	mrs	x1, tpidr_el0
   2723c:	add	x0, x1, x0
   27240:	ldr	x0, [x0, #80]
   27244:	cbz	x0, 272e4 <GOMP_teams_reg@@GOMP_5.0+0xe4>
   27248:	add	x0, x0, #0x90
   2724c:	cmp	w23, #0x0
   27250:	ldr	w25, [x0, #20]
   27254:	csinv	w1, w23, wzr, ge  // ge = tcont
   27258:	str	w1, [x0, #20]
   2725c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   27260:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   27264:	cmp	w20, #0x0
   27268:	add	x19, x0, #0x5dc
   2726c:	mov	w1, #0x3                   	// #3
   27270:	str	wzr, [x0, #1500]
   27274:	csel	w20, w20, w1, ne  // ne = any
   27278:	str	w20, [x24, #1344]
   2727c:	nop
   27280:	mov	x0, x22
   27284:	blr	x21
   27288:	ldr	w4, [x19]
   2728c:	add	w4, w4, #0x1
   27290:	str	w4, [x19]
   27294:	cmp	w4, w20
   27298:	b.cc	27280 <GOMP_teams_reg@@GOMP_5.0+0x80>  // b.lo, b.ul, b.last
   2729c:	mov	w0, #0x1                   	// #1
   272a0:	str	w0, [x24, #1344]
   272a4:	str	wzr, [x19]
   272a8:	cbz	w23, 272cc <GOMP_teams_reg@@GOMP_5.0+0xcc>
   272ac:	adrp	x0, 3f000 <omp_get_team_num@@OMP_4.0+0x17cf8>
   272b0:	ldr	x0, [x0, #4016]
   272b4:	mrs	x1, tpidr_el0
   272b8:	add	x0, x1, x0
   272bc:	ldr	x0, [x0, #80]
   272c0:	cbz	x0, 272ec <GOMP_teams_reg@@GOMP_5.0+0xec>
   272c4:	add	x0, x0, #0x90
   272c8:	str	w25, [x0, #20]
   272cc:	ldp	x19, x20, [sp, #16]
   272d0:	ldp	x21, x22, [sp, #32]
   272d4:	ldp	x23, x24, [sp, #48]
   272d8:	ldr	x25, [sp, #64]
   272dc:	ldp	x29, x30, [sp], #80
   272e0:	ret
   272e4:	bl	19758 <omp_in_final@@OMP_3.1+0x1730>
   272e8:	b	2724c <GOMP_teams_reg@@GOMP_5.0+0x4c>
   272ec:	bl	19758 <omp_in_final@@OMP_3.1+0x1730>
   272f0:	str	w25, [x0, #20]
   272f4:	b	272cc <GOMP_teams_reg@@GOMP_5.0+0xcc>

00000000000272f8 <omp_get_num_teams@@OMP_4.0>:
   272f8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   272fc:	ldr	w0, [x0, #1344]
   27300:	ret
   27304:	nop

0000000000027308 <omp_get_team_num@@OMP_4.0>:
   27308:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   2730c:	ldr	w0, [x0, #1500]
   27310:	ret
   27314:	nop
   27318:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x18cf8>
   2731c:	mov	x1, #0x0                   	// #0
   27320:	ldr	x2, [x2, #688]
   27324:	b	8690 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000027328 <.fini>:
   27328:	stp	x29, x30, [sp, #-16]!
   2732c:	mov	x29, sp
   27330:	ldp	x29, x30, [sp], #16
   27334:	ret
