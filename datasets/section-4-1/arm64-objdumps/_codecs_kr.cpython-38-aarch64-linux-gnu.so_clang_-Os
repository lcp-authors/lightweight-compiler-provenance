
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_codecs_kr.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002738 <.init>:
    2738:	stp	x29, x30, [sp, #-16]!
    273c:	mov	x29, sp
    2740:	bl	2860 <PyCapsule_New@plt+0x10>
    2744:	ldp	x29, x30, [sp], #16
    2748:	ret

Disassembly of section .plt:

0000000000002750 <PyObject_GetAttrString@plt-0x20>:
    2750:	stp	x16, x30, [sp, #-16]!
    2754:	adrp	x16, 2f000 <PyInit__codecs_kr@@Base+0x2c6cc>
    2758:	ldr	x17, [x16, #4088]
    275c:	add	x16, x16, #0xff8
    2760:	br	x17
    2764:	nop
    2768:	nop
    276c:	nop

0000000000002770 <PyObject_GetAttrString@plt>:
    2770:	adrp	x16, 30000 <PyObject_GetAttrString>
    2774:	ldr	x17, [x16]
    2778:	add	x16, x16, #0x0
    277c:	br	x17

0000000000002780 <__cxa_finalize@plt>:
    2780:	adrp	x16, 30000 <PyObject_GetAttrString>
    2784:	ldr	x17, [x16, #8]
    2788:	add	x16, x16, #0x8
    278c:	br	x17

0000000000002790 <_Py_Dealloc@plt>:
    2790:	adrp	x16, 30000 <PyObject_GetAttrString>
    2794:	ldr	x17, [x16, #16]
    2798:	add	x16, x16, #0x10
    279c:	br	x17

00000000000027a0 <PyErr_SetString@plt>:
    27a0:	adrp	x16, 30000 <PyObject_GetAttrString>
    27a4:	ldr	x17, [x16, #24]
    27a8:	add	x16, x16, #0x18
    27ac:	br	x17

00000000000027b0 <memset@plt>:
    27b0:	adrp	x16, 30000 <PyObject_GetAttrString>
    27b4:	ldr	x17, [x16, #32]
    27b8:	add	x16, x16, #0x20
    27bc:	br	x17

00000000000027c0 <__gmon_start__@plt>:
    27c0:	adrp	x16, 30000 <PyObject_GetAttrString>
    27c4:	ldr	x17, [x16, #40]
    27c8:	add	x16, x16, #0x28
    27cc:	br	x17

00000000000027d0 <PyModule_Create2@plt>:
    27d0:	adrp	x16, 30000 <PyObject_GetAttrString>
    27d4:	ldr	x17, [x16, #48]
    27d8:	add	x16, x16, #0x30
    27dc:	br	x17

00000000000027e0 <PyImport_ImportModuleNoBlock@plt>:
    27e0:	adrp	x16, 30000 <PyObject_GetAttrString>
    27e4:	ldr	x17, [x16, #56]
    27e8:	add	x16, x16, #0x38
    27ec:	br	x17

00000000000027f0 <PyObject_CallFunctionObjArgs@plt>:
    27f0:	adrp	x16, 30000 <PyObject_GetAttrString>
    27f4:	ldr	x17, [x16, #64]
    27f8:	add	x16, x16, #0x40
    27fc:	br	x17

0000000000002800 <strcmp@plt>:
    2800:	adrp	x16, 30000 <PyObject_GetAttrString>
    2804:	ldr	x17, [x16, #72]
    2808:	add	x16, x16, #0x48
    280c:	br	x17

0000000000002810 <_PyUnicodeWriter_WriteChar@plt>:
    2810:	adrp	x16, 30000 <PyObject_GetAttrString>
    2814:	ldr	x17, [x16, #80]
    2818:	add	x16, x16, #0x50
    281c:	br	x17

0000000000002820 <PyUnicode_AsUTF8@plt>:
    2820:	adrp	x16, 30000 <PyObject_GetAttrString>
    2824:	ldr	x17, [x16, #88]
    2828:	add	x16, x16, #0x58
    282c:	br	x17

0000000000002830 <strcpy@plt>:
    2830:	adrp	x16, 30000 <PyObject_GetAttrString>
    2834:	ldr	x17, [x16, #96]
    2838:	add	x16, x16, #0x60
    283c:	br	x17

0000000000002840 <PyModule_AddObject@plt>:
    2840:	adrp	x16, 30000 <PyObject_GetAttrString>
    2844:	ldr	x17, [x16, #104]
    2848:	add	x16, x16, #0x68
    284c:	br	x17

0000000000002850 <PyCapsule_New@plt>:
    2850:	adrp	x16, 30000 <PyObject_GetAttrString>
    2854:	ldr	x17, [x16, #112]
    2858:	add	x16, x16, #0x70
    285c:	br	x17

Disassembly of section .text:

0000000000002860 <PyInit__codecs_kr@@Base-0xd4>:
    2860:	adrp	x0, 2f000 <PyInit__codecs_kr@@Base+0x2c6cc>
    2864:	ldr	x0, [x0, #4048]
    2868:	cbz	x0, 2870 <PyCapsule_New@plt+0x20>
    286c:	b	27c0 <__gmon_start__@plt>
    2870:	ret
    2874:	nop
    2878:	adrp	x0, 30000 <PyInit__codecs_kr@@Base+0x2d6cc>
    287c:	add	x0, x0, #0x128
    2880:	adrp	x1, 30000 <PyInit__codecs_kr@@Base+0x2d6cc>
    2884:	add	x1, x1, #0x128
    2888:	cmp	x1, x0
    288c:	b.eq	28a4 <PyCapsule_New@plt+0x54>  // b.none
    2890:	adrp	x1, 2f000 <PyInit__codecs_kr@@Base+0x2c6cc>
    2894:	ldr	x1, [x1, #4024]
    2898:	cbz	x1, 28a4 <PyCapsule_New@plt+0x54>
    289c:	mov	x16, x1
    28a0:	br	x16
    28a4:	ret
    28a8:	adrp	x0, 30000 <PyInit__codecs_kr@@Base+0x2d6cc>
    28ac:	add	x0, x0, #0x128
    28b0:	adrp	x1, 30000 <PyInit__codecs_kr@@Base+0x2d6cc>
    28b4:	add	x1, x1, #0x128
    28b8:	sub	x1, x1, x0
    28bc:	lsr	x2, x1, #63
    28c0:	add	x1, x2, x1, asr #3
    28c4:	cmp	xzr, x1, asr #1
    28c8:	asr	x1, x1, #1
    28cc:	b.eq	28e4 <PyCapsule_New@plt+0x94>  // b.none
    28d0:	adrp	x2, 2f000 <PyInit__codecs_kr@@Base+0x2c6cc>
    28d4:	ldr	x2, [x2, #4056]
    28d8:	cbz	x2, 28e4 <PyCapsule_New@plt+0x94>
    28dc:	mov	x16, x2
    28e0:	br	x16
    28e4:	ret
    28e8:	stp	x29, x30, [sp, #-32]!
    28ec:	mov	x29, sp
    28f0:	str	x19, [sp, #16]
    28f4:	adrp	x19, 30000 <PyInit__codecs_kr@@Base+0x2d6cc>
    28f8:	ldrb	w0, [x19, #296]
    28fc:	cbnz	w0, 2924 <PyCapsule_New@plt+0xd4>
    2900:	adrp	x0, 2f000 <PyInit__codecs_kr@@Base+0x2c6cc>
    2904:	ldr	x0, [x0, #4032]
    2908:	cbz	x0, 2918 <PyCapsule_New@plt+0xc8>
    290c:	adrp	x0, 30000 <PyInit__codecs_kr@@Base+0x2d6cc>
    2910:	ldr	x0, [x0, #120]
    2914:	bl	2780 <__cxa_finalize@plt>
    2918:	bl	2878 <PyCapsule_New@plt+0x28>
    291c:	mov	w0, #0x1                   	// #1
    2920:	strb	w0, [x19, #296]
    2924:	ldr	x19, [sp, #16]
    2928:	ldp	x29, x30, [sp], #32
    292c:	ret
    2930:	b	28a8 <PyCapsule_New@plt+0x58>

0000000000002934 <PyInit__codecs_kr@@Base>:
    2934:	sub	sp, sp, #0x150
    2938:	stp	x29, x30, [sp, #256]
    293c:	str	x28, [sp, #272]
    2940:	stp	x24, x23, [sp, #288]
    2944:	stp	x22, x21, [sp, #304]
    2948:	stp	x20, x19, [sp, #320]
    294c:	add	x29, sp, #0x100
    2950:	adrp	x0, 30000 <PyInit__codecs_kr@@Base+0x2d6cc>
    2954:	add	x0, x0, #0x80
    2958:	mov	w1, #0x3f5                 	// #1013
    295c:	bl	27d0 <PyModule_Create2@plt>
    2960:	mov	x19, x0
    2964:	cbz	x0, 29e4 <PyInit__codecs_kr@@Base+0xb0>
    2968:	mov	x8, sp
    296c:	adrp	x20, 2f000 <PyInit__codecs_kr@@Base+0x2c6cc>
    2970:	mov	w23, #0x5f5f                	// #24415
    2974:	adrp	x22, 3000 <PyInit__codecs_kr@@Base+0x6cc>
    2978:	add	x20, x20, #0xd70
    297c:	movk	w23, #0x616d, lsl #16
    2980:	mov	w24, #0x5f70                	// #24432
    2984:	add	x21, x8, #0x6
    2988:	add	x22, x22, #0x79c
    298c:	mov	x0, sp
    2990:	mov	w2, #0x100                 	// #256
    2994:	mov	w1, wzr
    2998:	bl	27b0 <memset@plt>
    299c:	ldr	x1, [x20]
    29a0:	mov	x0, x21
    29a4:	str	w23, [sp]
    29a8:	strh	w24, [sp, #4]
    29ac:	bl	2830 <strcpy@plt>
    29b0:	mov	x0, x20
    29b4:	mov	x1, x22
    29b8:	mov	x2, xzr
    29bc:	bl	2850 <PyCapsule_New@plt>
    29c0:	mov	x2, x0
    29c4:	mov	x1, sp
    29c8:	mov	x0, x19
    29cc:	bl	2840 <PyModule_AddObject@plt>
    29d0:	cmn	w0, #0x1
    29d4:	b.eq	29e4 <PyInit__codecs_kr@@Base+0xb0>  // b.none
    29d8:	ldr	x8, [x20, #24]!
    29dc:	ldrb	w8, [x8]
    29e0:	cbnz	w8, 298c <PyInit__codecs_kr@@Base+0x58>
    29e4:	mov	x0, x19
    29e8:	ldp	x20, x19, [sp, #320]
    29ec:	ldp	x22, x21, [sp, #304]
    29f0:	ldp	x24, x23, [sp, #288]
    29f4:	ldr	x28, [sp, #272]
    29f8:	ldp	x29, x30, [sp, #256]
    29fc:	add	sp, sp, #0x150
    2a00:	ret
    2a04:	stp	x29, x30, [sp, #-48]!
    2a08:	stp	x22, x21, [sp, #16]
    2a0c:	stp	x20, x19, [sp, #32]
    2a10:	mov	x29, sp
    2a14:	ldr	x8, [x1, #8]
    2a18:	ldrb	w8, [x8, #171]
    2a1c:	tbnz	w8, #4, 2a40 <PyInit__codecs_kr@@Base+0x10c>
    2a20:	adrp	x8, 2f000 <PyInit__codecs_kr@@Base+0x2c6cc>
    2a24:	ldr	x8, [x8, #4040]
    2a28:	adrp	x1, 3000 <PyInit__codecs_kr@@Base+0x6cc>
    2a2c:	add	x1, x1, #0x760
    2a30:	ldr	x0, [x8]
    2a34:	bl	27a0 <PyErr_SetString@plt>
    2a38:	mov	x19, xzr
    2a3c:	b	2ae0 <PyInit__codecs_kr@@Base+0x1ac>
    2a40:	mov	x0, x1
    2a44:	bl	2820 <PyUnicode_AsUTF8@plt>
    2a48:	mov	x19, x0
    2a4c:	cbz	x0, 2ae0 <PyInit__codecs_kr@@Base+0x1ac>
    2a50:	adrp	x22, 30000 <PyInit__codecs_kr@@Base+0x2d6cc>
    2a54:	ldr	x20, [x22, #304]
    2a58:	cbz	x20, 2af4 <PyInit__codecs_kr@@Base+0x1c0>
    2a5c:	adrp	x21, 2c000 <PyInit__codecs_kr@@Base+0x296cc>
    2a60:	adrp	x0, 3000 <PyInit__codecs_kr@@Base+0x6cc>
    2a64:	add	x21, x21, #0xc50
    2a68:	add	x0, x0, #0x7d2
    2a6c:	mov	x1, x19
    2a70:	bl	2800 <strcmp@plt>
    2a74:	cbz	w0, 2a98 <PyInit__codecs_kr@@Base+0x164>
    2a78:	ldr	x0, [x21, #72]!
    2a7c:	ldrb	w8, [x0]
    2a80:	cbnz	w8, 2a6c <PyInit__codecs_kr@@Base+0x138>
    2a84:	adrp	x8, 2f000 <PyInit__codecs_kr@@Base+0x2c6cc>
    2a88:	ldr	x8, [x8, #4064]
    2a8c:	adrp	x1, 3000 <PyInit__codecs_kr@@Base+0x6cc>
    2a90:	add	x1, x1, #0x780
    2a94:	b	2a30 <PyInit__codecs_kr@@Base+0xfc>
    2a98:	adrp	x1, 3000 <PyInit__codecs_kr@@Base+0x6cc>
    2a9c:	add	x1, x1, #0x79c
    2aa0:	mov	x0, x21
    2aa4:	mov	x2, xzr
    2aa8:	bl	2850 <PyCapsule_New@plt>
    2aac:	cbz	x0, 2a38 <PyInit__codecs_kr@@Base+0x104>
    2ab0:	mov	x21, x0
    2ab4:	mov	x0, x20
    2ab8:	mov	x1, x21
    2abc:	mov	x2, xzr
    2ac0:	bl	27f0 <PyObject_CallFunctionObjArgs@plt>
    2ac4:	ldr	x8, [x21]
    2ac8:	mov	x19, x0
    2acc:	subs	x8, x8, #0x1
    2ad0:	str	x8, [x21]
    2ad4:	b.ne	2ae0 <PyInit__codecs_kr@@Base+0x1ac>  // b.any
    2ad8:	mov	x0, x21
    2adc:	bl	2790 <_Py_Dealloc@plt>
    2ae0:	mov	x0, x19
    2ae4:	ldp	x20, x19, [sp, #32]
    2ae8:	ldp	x22, x21, [sp, #16]
    2aec:	ldp	x29, x30, [sp], #48
    2af0:	ret
    2af4:	adrp	x0, 3000 <PyInit__codecs_kr@@Base+0x6cc>
    2af8:	add	x0, x0, #0x7b3
    2afc:	bl	27e0 <PyImport_ImportModuleNoBlock@plt>
    2b00:	cbz	x0, 2a38 <PyInit__codecs_kr@@Base+0x104>
    2b04:	adrp	x1, 3000 <PyInit__codecs_kr@@Base+0x6cc>
    2b08:	add	x1, x1, #0x7c3
    2b0c:	mov	x21, x0
    2b10:	bl	2770 <PyObject_GetAttrString@plt>
    2b14:	str	x0, [x22, #304]
    2b18:	ldr	x8, [x21]
    2b1c:	mov	x20, x0
    2b20:	subs	x8, x8, #0x1
    2b24:	str	x8, [x21]
    2b28:	b.eq	2b34 <PyInit__codecs_kr@@Base+0x200>  // b.none
    2b2c:	cbnz	x20, 2a5c <PyInit__codecs_kr@@Base+0x128>
    2b30:	b	2a38 <PyInit__codecs_kr@@Base+0x104>
    2b34:	mov	x0, x21
    2b38:	bl	2790 <_Py_Dealloc@plt>
    2b3c:	ldr	x20, [x22, #304]
    2b40:	cbnz	x20, 2a5c <PyInit__codecs_kr@@Base+0x128>
    2b44:	b	2a38 <PyInit__codecs_kr@@Base+0x104>
    2b48:	str	x23, [sp, #-48]!
    2b4c:	stp	x22, x21, [sp, #16]
    2b50:	stp	x20, x19, [sp, #32]
    2b54:	ldr	x19, [x4]
    2b58:	cmp	x19, x5
    2b5c:	b.ge	2d2c <PyInit__codecs_kr@@Base+0x3f8>  // b.tcont
    2b60:	adrp	x8, 2c000 <PyInit__codecs_kr@@Base+0x296cc>
    2b64:	mov	w12, #0x5c4d                	// #23629
    2b68:	adrp	x13, 3000 <PyInit__codecs_kr@@Base+0x6cc>
    2b6c:	mov	w14, #0x4925                	// #18725
    2b70:	mov	w15, #0x6187                	// #24967
    2b74:	adrp	x17, 3000 <PyInit__codecs_kr@@Base+0x6cc>
    2b78:	adrp	x1, 3000 <PyInit__codecs_kr@@Base+0x6cc>
    2b7c:	mov	w0, #0x1                   	// #1
    2b80:	add	x8, x8, #0xd70
    2b84:	mov	w9, #0xa4                  	// #164
    2b88:	mov	w10, #0xd4                  	// #212
    2b8c:	mov	w11, #0xffff5400            	// #-44032
    2b90:	movk	w12, #0xdee9, lsl #16
    2b94:	add	x13, x13, #0x7f6
    2b98:	movk	w14, #0x2492, lsl #16
    2b9c:	movk	w15, #0x8618, lsl #16
    2ba0:	mov	w16, #0x15                  	// #21
    2ba4:	add	x17, x17, #0x809
    2ba8:	mov	w18, #0x1c                  	// #28
    2bac:	add	x1, x1, #0x81e
    2bb0:	cmp	w2, #0x2
    2bb4:	b.eq	2bc8 <PyInit__codecs_kr@@Base+0x294>  // b.none
    2bb8:	cmp	w2, #0x1
    2bbc:	b.ne	2bd0 <PyInit__codecs_kr@@Base+0x29c>  // b.any
    2bc0:	ldrb	w19, [x3, x19]
    2bc4:	b	2bd4 <PyInit__codecs_kr@@Base+0x2a0>
    2bc8:	ldrh	w19, [x3, x19, lsl #1]
    2bcc:	b	2bd4 <PyInit__codecs_kr@@Base+0x2a0>
    2bd0:	ldr	w19, [x3, x19, lsl #2]
    2bd4:	cmp	w19, #0x7f
    2bd8:	b.hi	2bf8 <PyInit__codecs_kr@@Base+0x2c4>  // b.pmore
    2bdc:	cmp	x7, #0x1
    2be0:	b.lt	2d40 <PyInit__codecs_kr@@Base+0x40c>  // b.tstop
    2be4:	ldr	x21, [x6]
    2be8:	mov	x20, #0xffffffffffffffff    	// #-1
    2bec:	strb	w19, [x21]
    2bf0:	mov	w21, #0x1                   	// #1
    2bf4:	b	2d08 <PyInit__codecs_kr@@Base+0x3d4>
    2bf8:	lsr	w20, w19, #16
    2bfc:	cbnz	w20, 2d30 <PyInit__codecs_kr@@Base+0x3fc>
    2c00:	cmp	x7, #0x2
    2c04:	b.lt	2d40 <PyInit__codecs_kr@@Base+0x40c>  // b.tstop
    2c08:	lsr	w21, w19, #8
    2c0c:	lsl	x20, x21, #4
    2c10:	ldr	x20, [x8, x20]
    2c14:	cbz	x20, 2d30 <PyInit__codecs_kr@@Base+0x3fc>
    2c18:	add	x22, x8, x21, lsl #4
    2c1c:	ldrb	w21, [x22, #8]
    2c20:	and	w23, w19, #0xff
    2c24:	subs	w21, w23, w21
    2c28:	b.cc	2d30 <PyInit__codecs_kr@@Base+0x3fc>  // b.lo, b.ul, b.last
    2c2c:	ldrb	w22, [x22, #9]
    2c30:	cmp	w23, w22
    2c34:	b.hi	2d30 <PyInit__codecs_kr@@Base+0x3fc>  // b.pmore
    2c38:	ldrsh	w20, [x20, w21, uxtw #1]
    2c3c:	cmn	w20, #0x1
    2c40:	b.eq	2d30 <PyInit__codecs_kr@@Base+0x3fc>  // b.none
    2c44:	tbnz	w20, #31, 2c70 <PyInit__codecs_kr@@Base+0x33c>
    2c48:	ldr	x19, [x6]
    2c4c:	lsr	w21, w20, #8
    2c50:	orr	w21, w21, #0x80
    2c54:	strb	w21, [x19]
    2c58:	ldr	x19, [x6]
    2c5c:	orr	w21, w20, #0x80
    2c60:	mov	x20, #0xfffffffffffffffe    	// #-2
    2c64:	strb	w21, [x19, #1]
    2c68:	mov	w21, #0x2                   	// #2
    2c6c:	b	2d08 <PyInit__codecs_kr@@Base+0x3d4>
    2c70:	cmp	x7, #0x8
    2c74:	b.lt	2d40 <PyInit__codecs_kr@@Base+0x40c>  // b.tstop
    2c78:	ldr	x20, [x6]
    2c7c:	add	w19, w19, w11
    2c80:	umull	x21, w19, w12
    2c84:	lsr	x21, x21, #41
    2c88:	strb	w9, [x20]
    2c8c:	ldr	x20, [x6]
    2c90:	ldrb	w21, [x13, x21]
    2c94:	lsr	w22, w19, #2
    2c98:	umull	x22, w22, w14
    2c9c:	strb	w10, [x20, #1]
    2ca0:	ldr	x20, [x6]
    2ca4:	lsr	x22, x22, #32
    2ca8:	mul	x23, x22, x15
    2cac:	msub	w19, w22, w18, w19
    2cb0:	strb	w9, [x20, #2]
    2cb4:	ldr	x20, [x6]
    2cb8:	ldrb	w19, [x1, w19, uxtw]
    2cbc:	strb	w21, [x20, #3]
    2cc0:	ldr	x20, [x6]
    2cc4:	lsr	x21, x23, #32
    2cc8:	sub	w23, w22, w21
    2ccc:	add	w21, w21, w23, lsr #1
    2cd0:	add	x23, x20, #0x4
    2cd4:	lsr	w21, w21, #4
    2cd8:	str	x23, [x6]
    2cdc:	msub	w21, w21, w16, w22
    2ce0:	strb	w9, [x20, #4]
    2ce4:	ldrb	w21, [x17, w21, uxtw]
    2ce8:	ldr	x20, [x6]
    2cec:	strb	w21, [x20, #1]
    2cf0:	ldr	x20, [x6]
    2cf4:	strb	w9, [x20, #2]
    2cf8:	ldr	x21, [x6]
    2cfc:	mov	x20, #0xfffffffffffffff8    	// #-8
    2d00:	strb	w19, [x21, #3]
    2d04:	mov	w21, #0x4                   	// #4
    2d08:	ldr	x19, [x4]
    2d0c:	add	x7, x7, x20
    2d10:	add	x19, x19, #0x1
    2d14:	str	x19, [x4]
    2d18:	ldr	x22, [x6]
    2d1c:	cmp	x19, x5
    2d20:	add	x21, x22, x21
    2d24:	str	x21, [x6]
    2d28:	b.lt	2bb0 <PyInit__codecs_kr@@Base+0x27c>  // b.tstop
    2d2c:	mov	x0, xzr
    2d30:	ldp	x20, x19, [sp, #32]
    2d34:	ldp	x22, x21, [sp, #16]
    2d38:	ldr	x23, [sp], #48
    2d3c:	ret
    2d40:	mov	x0, #0xffffffffffffffff    	// #-1
    2d44:	b	2d30 <PyInit__codecs_kr@@Base+0x3fc>
    2d48:	stp	x29, x30, [sp, #-96]!
    2d4c:	stp	x28, x27, [sp, #16]
    2d50:	stp	x26, x25, [sp, #32]
    2d54:	stp	x24, x23, [sp, #48]
    2d58:	stp	x22, x21, [sp, #64]
    2d5c:	stp	x20, x19, [sp, #80]
    2d60:	mov	x29, sp
    2d64:	cmp	x3, #0x1
    2d68:	b.lt	2f44 <PyInit__codecs_kr@@Base+0x610>  // b.tstop
    2d6c:	ldr	x8, [x2]
    2d70:	adrp	x23, 2d000 <PyInit__codecs_kr@@Base+0x2a6cc>
    2d74:	mov	x20, x4
    2d78:	mov	x21, x3
    2d7c:	mov	x22, x2
    2d80:	mov	w19, #0x1                   	// #1
    2d84:	mov	w24, #0xff41                	// #65345
    2d88:	mov	w25, #0x7f                  	// #127
    2d8c:	mov	w27, #0x1c                  	// #28
    2d90:	mov	w28, #0xac00                	// #44032
    2d94:	add	x23, x23, #0xd70
    2d98:	mov	w26, #0xfffe                	// #65534
    2d9c:	ldrsb	w9, [x8]
    2da0:	and	w1, w9, #0xff
    2da4:	tbnz	w9, #31, 2dc0 <PyInit__codecs_kr@@Base+0x48c>
    2da8:	mov	x0, x20
    2dac:	bl	2810 <_PyUnicodeWriter_WriteChar@plt>
    2db0:	tbnz	w0, #31, 2f4c <PyInit__codecs_kr@@Base+0x618>
    2db4:	mov	x8, #0xffffffffffffffff    	// #-1
    2db8:	mov	w9, #0x1                   	// #1
    2dbc:	b	2f2c <PyInit__codecs_kr@@Base+0x5f8>
    2dc0:	cmp	x21, #0x2
    2dc4:	b.lt	2f54 <PyInit__codecs_kr@@Base+0x620>  // b.tstop
    2dc8:	cmp	w1, #0xa4
    2dcc:	b.ne	2e30 <PyInit__codecs_kr@@Base+0x4fc>  // b.any
    2dd0:	ldrb	w10, [x8, #1]
    2dd4:	cmp	w10, #0xd4
    2dd8:	b.ne	2e30 <PyInit__codecs_kr@@Base+0x4fc>  // b.any
    2ddc:	cmp	x21, #0x8
    2de0:	b.lt	2f54 <PyInit__codecs_kr@@Base+0x620>  // b.tstop
    2de4:	ldrb	w9, [x8, #2]
    2de8:	cmp	w9, #0xa4
    2dec:	b.ne	2f58 <PyInit__codecs_kr@@Base+0x624>  // b.any
    2df0:	ldrb	w9, [x8, #4]
    2df4:	cmp	w9, #0xa4
    2df8:	b.ne	2f58 <PyInit__codecs_kr@@Base+0x624>  // b.any
    2dfc:	ldrb	w9, [x8, #6]
    2e00:	cmp	w9, #0xa4
    2e04:	b.ne	2f58 <PyInit__codecs_kr@@Base+0x624>  // b.any
    2e08:	ldrb	w9, [x8, #3]
    2e0c:	add	w10, w9, #0x5f
    2e10:	and	w10, w10, #0xff
    2e14:	cmp	w10, #0x1d
    2e18:	b.hi	2e90 <PyInit__codecs_kr@@Base+0x55c>  // b.pmore
    2e1c:	adrp	x10, 13000 <PyInit__codecs_kr@@Base+0x106cc>
    2e20:	add	x10, x10, #0xb14
    2e24:	add	x9, x9, x10
    2e28:	ldurb	w9, [x9, #-161]
    2e2c:	b	2e94 <PyInit__codecs_kr@@Base+0x560>
    2e30:	and	x9, x9, #0xff
    2e34:	eor	x10, x9, #0x80
    2e38:	lsl	x9, x10, #4
    2e3c:	ldr	x9, [x23, x9]
    2e40:	cbz	x9, 2f58 <PyInit__codecs_kr@@Base+0x624>
    2e44:	ldrb	w12, [x8, #1]
    2e48:	add	x11, x23, x10, lsl #4
    2e4c:	ldrb	w8, [x11, #8]
    2e50:	eor	x10, x12, #0x80
    2e54:	cmp	w10, w8
    2e58:	b.cc	2f58 <PyInit__codecs_kr@@Base+0x624>  // b.lo, b.ul, b.last
    2e5c:	ldrb	w11, [x11, #9]
    2e60:	cmp	w10, w11
    2e64:	b.hi	2f58 <PyInit__codecs_kr@@Base+0x624>  // b.pmore
    2e68:	sub	x8, x10, x8
    2e6c:	ldrh	w1, [x9, x8, lsl #1]
    2e70:	cmp	w1, w26
    2e74:	b.eq	2f58 <PyInit__codecs_kr@@Base+0x624>  // b.none
    2e78:	mov	x0, x20
    2e7c:	bl	2810 <_PyUnicodeWriter_WriteChar@plt>
    2e80:	tbnz	w0, #31, 2f4c <PyInit__codecs_kr@@Base+0x618>
    2e84:	mov	x8, #0xfffffffffffffffe    	// #-2
    2e88:	mov	w9, #0x2                   	// #2
    2e8c:	b	2f2c <PyInit__codecs_kr@@Base+0x5f8>
    2e90:	mov	w9, #0x7f                  	// #127
    2e94:	ldrb	w11, [x8, #7]
    2e98:	ldrb	w10, [x8, #5]
    2e9c:	cmp	x11, #0xd4
    2ea0:	b.ne	2eac <PyInit__codecs_kr@@Base+0x578>  // b.any
    2ea4:	mov	w8, wzr
    2ea8:	b	2ed4 <PyInit__codecs_kr@@Base+0x5a0>
    2eac:	add	w8, w11, #0x5f
    2eb0:	and	w8, w8, #0xff
    2eb4:	cmp	w8, #0x1d
    2eb8:	b.hi	2ed0 <PyInit__codecs_kr@@Base+0x59c>  // b.pmore
    2ebc:	adrp	x8, 13000 <PyInit__codecs_kr@@Base+0x106cc>
    2ec0:	add	x8, x8, #0xb32
    2ec4:	add	x8, x11, x8
    2ec8:	ldurb	w8, [x8, #-161]
    2ecc:	b	2ed4 <PyInit__codecs_kr@@Base+0x5a0>
    2ed0:	mov	w8, #0x7f                  	// #127
    2ed4:	cmp	w9, #0x7f
    2ed8:	b.eq	2f58 <PyInit__codecs_kr@@Base+0x624>  // b.none
    2edc:	add	w11, w10, #0x41
    2ee0:	add	w10, w10, w24
    2ee4:	and	w11, w11, #0xff
    2ee8:	and	w10, w10, #0xffff
    2eec:	cmp	w11, #0x15
    2ef0:	csel	w10, w10, w25, cc  // cc = lo, ul, last
    2ef4:	cmp	w10, #0x7f
    2ef8:	b.eq	2f58 <PyInit__codecs_kr@@Base+0x624>  // b.none
    2efc:	cmp	w8, #0x7f
    2f00:	b.eq	2f58 <PyInit__codecs_kr@@Base+0x624>  // b.none
    2f04:	mul	w10, w10, w27
    2f08:	mov	w11, #0x24c                 	// #588
    2f0c:	madd	w9, w9, w11, w10
    2f10:	add	w8, w9, w8
    2f14:	add	w1, w8, w28
    2f18:	mov	x0, x20
    2f1c:	bl	2810 <_PyUnicodeWriter_WriteChar@plt>
    2f20:	tbnz	w0, #31, 2f4c <PyInit__codecs_kr@@Base+0x618>
    2f24:	mov	x8, #0xfffffffffffffff8    	// #-8
    2f28:	mov	w9, #0x8                   	// #8
    2f2c:	ldr	x10, [x22]
    2f30:	add	x21, x21, x8
    2f34:	cmp	x21, #0x0
    2f38:	add	x8, x10, x9
    2f3c:	str	x8, [x22]
    2f40:	b.gt	2d9c <PyInit__codecs_kr@@Base+0x468>
    2f44:	mov	x19, xzr
    2f48:	b	2f58 <PyInit__codecs_kr@@Base+0x624>
    2f4c:	mov	x19, #0xfffffffffffffffc    	// #-4
    2f50:	b	2f58 <PyInit__codecs_kr@@Base+0x624>
    2f54:	mov	x19, #0xfffffffffffffffe    	// #-2
    2f58:	mov	x0, x19
    2f5c:	ldp	x20, x19, [sp, #80]
    2f60:	ldp	x22, x21, [sp, #64]
    2f64:	ldp	x24, x23, [sp, #48]
    2f68:	ldp	x26, x25, [sp, #32]
    2f6c:	ldp	x28, x27, [sp, #16]
    2f70:	ldp	x29, x30, [sp], #96
    2f74:	ret
    2f78:	ldr	x9, [x4]
    2f7c:	cmp	x9, x5
    2f80:	b.ge	3074 <PyInit__codecs_kr@@Base+0x740>  // b.tcont
    2f84:	adrp	x8, 2c000 <PyInit__codecs_kr@@Base+0x296cc>
    2f88:	mov	w0, #0x1                   	// #1
    2f8c:	add	x8, x8, #0xd70
    2f90:	cmp	w2, #0x2
    2f94:	b.eq	2fa8 <PyInit__codecs_kr@@Base+0x674>  // b.none
    2f98:	cmp	w2, #0x1
    2f9c:	b.ne	2fb0 <PyInit__codecs_kr@@Base+0x67c>  // b.any
    2fa0:	ldrb	w9, [x3, x9]
    2fa4:	b	2fb4 <PyInit__codecs_kr@@Base+0x680>
    2fa8:	ldrh	w9, [x3, x9, lsl #1]
    2fac:	b	2fb4 <PyInit__codecs_kr@@Base+0x680>
    2fb0:	ldr	w9, [x3, x9, lsl #2]
    2fb4:	cmp	w9, #0x7f
    2fb8:	b.hi	2fd8 <PyInit__codecs_kr@@Base+0x6a4>  // b.pmore
    2fbc:	cmp	x7, #0x1
    2fc0:	b.lt	307c <PyInit__codecs_kr@@Base+0x748>  // b.tstop
    2fc4:	ldr	x11, [x6]
    2fc8:	mov	x10, #0xffffffffffffffff    	// #-1
    2fcc:	strb	w9, [x11]
    2fd0:	mov	w11, #0x1                   	// #1
    2fd4:	b	3050 <PyInit__codecs_kr@@Base+0x71c>
    2fd8:	lsr	w10, w9, #16
    2fdc:	cbnz	w10, 3078 <PyInit__codecs_kr@@Base+0x744>
    2fe0:	cmp	x7, #0x2
    2fe4:	b.lt	307c <PyInit__codecs_kr@@Base+0x748>  // b.tstop
    2fe8:	lsr	w11, w9, #8
    2fec:	lsl	x10, x11, #4
    2ff0:	ldr	x10, [x8, x10]
    2ff4:	cbz	x10, 3078 <PyInit__codecs_kr@@Base+0x744>
    2ff8:	add	x11, x8, x11, lsl #4
    2ffc:	ldrb	w13, [x11, #8]
    3000:	and	w12, w9, #0xff
    3004:	subs	w9, w12, w13
    3008:	b.cc	3078 <PyInit__codecs_kr@@Base+0x744>  // b.lo, b.ul, b.last
    300c:	ldrb	w11, [x11, #9]
    3010:	cmp	w12, w11
    3014:	b.hi	3078 <PyInit__codecs_kr@@Base+0x744>  // b.pmore
    3018:	ldrsh	w9, [x10, w9, uxtw #1]
    301c:	cmn	w9, #0x1
    3020:	b.eq	3078 <PyInit__codecs_kr@@Base+0x744>  // b.none
    3024:	ldr	x10, [x6]
    3028:	lsr	w11, w9, #8
    302c:	orr	w11, w11, #0x80
    3030:	orr	w12, w9, #0x80
    3034:	strb	w11, [x10]
    3038:	ldr	x11, [x6]
    303c:	cmp	w9, #0x0
    3040:	csel	w9, w12, w9, ge  // ge = tcont
    3044:	mov	x10, #0xfffffffffffffffe    	// #-2
    3048:	strb	w9, [x11, #1]
    304c:	mov	w11, #0x2                   	// #2
    3050:	ldr	x9, [x4]
    3054:	add	x7, x7, x10
    3058:	add	x9, x9, #0x1
    305c:	str	x9, [x4]
    3060:	ldr	x12, [x6]
    3064:	cmp	x9, x5
    3068:	add	x11, x12, x11
    306c:	str	x11, [x6]
    3070:	b.lt	2f90 <PyInit__codecs_kr@@Base+0x65c>  // b.tstop
    3074:	mov	x0, xzr
    3078:	ret
    307c:	mov	x0, #0xffffffffffffffff    	// #-1
    3080:	ret
    3084:	stp	x29, x30, [sp, #-80]!
    3088:	str	x25, [sp, #16]
    308c:	stp	x24, x23, [sp, #32]
    3090:	stp	x22, x21, [sp, #48]
    3094:	stp	x20, x19, [sp, #64]
    3098:	mov	x29, sp
    309c:	cmp	x3, #0x1
    30a0:	b.lt	31b8 <PyInit__codecs_kr@@Base+0x884>  // b.tstop
    30a4:	ldr	x9, [x2]
    30a8:	adrp	x23, 2d000 <PyInit__codecs_kr@@Base+0x2a6cc>
    30ac:	adrp	x24, 2e000 <PyInit__codecs_kr@@Base+0x2b6cc>
    30b0:	mov	x20, x4
    30b4:	mov	x21, x3
    30b8:	mov	x22, x2
    30bc:	mov	w19, #0x1                   	// #1
    30c0:	add	x23, x23, #0xd70
    30c4:	add	x24, x24, #0xd70
    30c8:	mov	w25, #0xfffe                	// #65534
    30cc:	ldrsb	w8, [x9]
    30d0:	and	w1, w8, #0xff
    30d4:	tbnz	w8, #31, 30f0 <PyInit__codecs_kr@@Base+0x7bc>
    30d8:	mov	x0, x20
    30dc:	bl	2810 <_PyUnicodeWriter_WriteChar@plt>
    30e0:	tbnz	w0, #31, 31c0 <PyInit__codecs_kr@@Base+0x88c>
    30e4:	mov	x8, #0xffffffffffffffff    	// #-1
    30e8:	mov	w9, #0x1                   	// #1
    30ec:	b	3190 <PyInit__codecs_kr@@Base+0x85c>
    30f0:	cmp	x21, #0x2
    30f4:	b.lt	31c8 <PyInit__codecs_kr@@Base+0x894>  // b.tstop
    30f8:	and	x8, x8, #0xff
    30fc:	eor	x10, x8, #0x80
    3100:	lsl	x8, x10, #4
    3104:	ldr	x8, [x23, x8]
    3108:	cbz	x8, 3140 <PyInit__codecs_kr@@Base+0x80c>
    310c:	ldrb	w11, [x9, #1]
    3110:	add	x12, x23, x10, lsl #4
    3114:	ldrb	w10, [x12, #8]
    3118:	eor	x11, x11, #0x80
    311c:	cmp	w11, w10
    3120:	b.cc	3140 <PyInit__codecs_kr@@Base+0x80c>  // b.lo, b.ul, b.last
    3124:	ldrb	w12, [x12, #9]
    3128:	cmp	w11, w12
    312c:	b.hi	3140 <PyInit__codecs_kr@@Base+0x80c>  // b.pmore
    3130:	sub	x10, x11, x10
    3134:	ldrh	w8, [x8, x10, lsl #1]
    3138:	cmp	w8, w25
    313c:	b.ne	31ac <PyInit__codecs_kr@@Base+0x878>  // b.any
    3140:	lsl	x8, x1, #4
    3144:	ldr	x8, [x24, x8]
    3148:	cbz	x8, 31cc <PyInit__codecs_kr@@Base+0x898>
    314c:	add	x11, x24, x1, lsl #4
    3150:	ldrb	w9, [x9, #1]
    3154:	ldrb	w10, [x11, #8]
    3158:	cmp	w9, w10
    315c:	b.cc	31cc <PyInit__codecs_kr@@Base+0x898>  // b.lo, b.ul, b.last
    3160:	ldrb	w11, [x11, #9]
    3164:	cmp	w9, w11
    3168:	b.hi	31cc <PyInit__codecs_kr@@Base+0x898>  // b.pmore
    316c:	sub	x9, x9, x10
    3170:	ldrh	w1, [x8, x9, lsl #1]
    3174:	cmp	w1, w25
    3178:	b.eq	31cc <PyInit__codecs_kr@@Base+0x898>  // b.none
    317c:	mov	x0, x20
    3180:	bl	2810 <_PyUnicodeWriter_WriteChar@plt>
    3184:	tbnz	w0, #31, 31c0 <PyInit__codecs_kr@@Base+0x88c>
    3188:	mov	x8, #0xfffffffffffffffe    	// #-2
    318c:	mov	w9, #0x2                   	// #2
    3190:	ldr	x10, [x22]
    3194:	add	x21, x21, x8
    3198:	cmp	x21, #0x0
    319c:	add	x9, x10, x9
    31a0:	str	x9, [x22]
    31a4:	b.gt	30cc <PyInit__codecs_kr@@Base+0x798>
    31a8:	b	31b8 <PyInit__codecs_kr@@Base+0x884>
    31ac:	mov	x0, x20
    31b0:	mov	w1, w8
    31b4:	b	3180 <PyInit__codecs_kr@@Base+0x84c>
    31b8:	mov	x19, xzr
    31bc:	b	31cc <PyInit__codecs_kr@@Base+0x898>
    31c0:	mov	x19, #0xfffffffffffffffc    	// #-4
    31c4:	b	31cc <PyInit__codecs_kr@@Base+0x898>
    31c8:	mov	x19, #0xfffffffffffffffe    	// #-2
    31cc:	mov	x0, x19
    31d0:	ldp	x20, x19, [sp, #64]
    31d4:	ldp	x22, x21, [sp, #48]
    31d8:	ldp	x24, x23, [sp, #32]
    31dc:	ldr	x25, [sp, #16]
    31e0:	ldp	x29, x30, [sp], #80
    31e4:	ret
    31e8:	stp	x29, x30, [sp, #-96]!
    31ec:	stp	x28, x27, [sp, #16]
    31f0:	stp	x26, x25, [sp, #32]
    31f4:	stp	x24, x23, [sp, #48]
    31f8:	stp	x22, x21, [sp, #64]
    31fc:	stp	x20, x19, [sp, #80]
    3200:	ldr	x27, [x4]
    3204:	cmp	x27, x5
    3208:	b.ge	3450 <PyInit__codecs_kr@@Base+0xb1c>  // b.tcont
    320c:	mov	w9, #0x5c4d                	// #23629
    3210:	adrp	x10, 1c000 <PyInit__codecs_kr@@Base+0x196cc>
    3214:	mov	w11, #0x4925                	// #18725
    3218:	mov	w12, #0x6187                	// #24967
    321c:	adrp	x14, 1c000 <PyInit__codecs_kr@@Base+0x196cc>
    3220:	adrp	x16, 1c000 <PyInit__codecs_kr@@Base+0x196cc>
    3224:	adrp	x18, 1c000 <PyInit__codecs_kr@@Base+0x196cc>
    3228:	adrp	x1, 2c000 <PyInit__codecs_kr@@Base+0x296cc>
    322c:	mov	w0, #0x1                   	// #1
    3230:	mov	w8, #0xffff5400            	// #-44032
    3234:	movk	w9, #0xdee9, lsl #16
    3238:	add	x10, x10, #0x7ca
    323c:	movk	w11, #0x2492, lsl #16
    3240:	movk	w12, #0x8618, lsl #16
    3244:	mov	w13, #0x15                  	// #21
    3248:	add	x14, x14, #0x7ea
    324c:	mov	w15, #0x1c                  	// #28
    3250:	add	x16, x16, #0x7aa
    3254:	mov	w17, #0xffffcecf            	// #-12593
    3258:	add	x18, x18, #0x744
    325c:	add	x1, x1, #0xd70
    3260:	mov	w19, #0xffff                	// #65535
    3264:	mov	w20, #0xffffdf00            	// #-8448
    3268:	mov	w22, #0x176                 	// #374
    326c:	mov	w23, #0x191                 	// #401
    3270:	mov	w24, #0x5e                  	// #94
    3274:	mov	w25, #0x43                  	// #67
    3278:	mov	w26, #0x31                  	// #49
    327c:	cmp	w2, #0x2
    3280:	b.eq	3294 <PyInit__codecs_kr@@Base+0x960>  // b.none
    3284:	cmp	w2, #0x1
    3288:	b.ne	329c <PyInit__codecs_kr@@Base+0x968>  // b.any
    328c:	ldrb	w27, [x3, x27]
    3290:	b	32a0 <PyInit__codecs_kr@@Base+0x96c>
    3294:	ldrh	w27, [x3, x27, lsl #1]
    3298:	b	32a0 <PyInit__codecs_kr@@Base+0x96c>
    329c:	ldr	w27, [x3, x27, lsl #2]
    32a0:	cmp	w27, #0x7f
    32a4:	b.hi	32c4 <PyInit__codecs_kr@@Base+0x990>  // b.pmore
    32a8:	cmp	x7, #0x1
    32ac:	b.lt	3458 <PyInit__codecs_kr@@Base+0xb24>  // b.tstop
    32b0:	ldr	x29, [x6]
    32b4:	mov	x28, #0xffffffffffffffff    	// #-1
    32b8:	strb	w27, [x29]
    32bc:	mov	w29, #0x1                   	// #1
    32c0:	b	342c <PyInit__codecs_kr@@Base+0xaf8>
    32c4:	lsr	w28, w27, #16
    32c8:	cbnz	w28, 345c <PyInit__codecs_kr@@Base+0xb28>
    32cc:	cmp	x7, #0x2
    32d0:	b.lt	3458 <PyInit__codecs_kr@@Base+0xb24>  // b.tstop
    32d4:	add	w28, w27, w8
    32d8:	lsr	w29, w28, #2
    32dc:	cmp	w29, #0xae8
    32e0:	b.hi	3340 <PyInit__codecs_kr@@Base+0xa0c>  // b.pmore
    32e4:	ubfx	w29, w28, #2, #14
    32e8:	umull	x29, w29, w11
    32ec:	lsr	x29, x29, #32
    32f0:	mul	x30, x29, x12
    32f4:	lsr	x30, x30, #32
    32f8:	sub	w21, w29, w30
    32fc:	add	w21, w30, w21, lsr #1
    3300:	and	w27, w28, #0xffff
    3304:	lsr	w21, w21, #4
    3308:	umull	x27, w27, w9
    330c:	msub	w21, w21, w13, w29
    3310:	lsr	x27, x27, #41
    3314:	msub	w28, w29, w15, w28
    3318:	ldrb	w21, [x14, w21, uxtw]
    331c:	ldrb	w27, [x10, x27]
    3320:	and	x28, x28, #0xffff
    3324:	ldrb	w28, [x16, x28]
    3328:	lsl	w29, w21, #5
    332c:	orr	w29, w29, w27, lsl #10
    3330:	orr	w27, w28, w21, lsl #5
    3334:	lsr	w21, w29, #8
    3338:	orr	w28, w21, #0xffffff80
    333c:	b	3354 <PyInit__codecs_kr@@Base+0xa20>
    3340:	add	w28, w27, w17
    3344:	cmp	w28, #0x32
    3348:	b.hi	336c <PyInit__codecs_kr@@Base+0xa38>  // b.pmore
    334c:	ldrh	w27, [x18, w28, uxtw #1]
    3350:	lsr	w28, w27, #8
    3354:	ldr	x21, [x6]
    3358:	strb	w28, [x21]
    335c:	ldr	x21, [x6]
    3360:	mov	x28, #0xfffffffffffffffe    	// #-2
    3364:	strb	w27, [x21, #1]
    3368:	b	3428 <PyInit__codecs_kr@@Base+0xaf4>
    336c:	lsr	w29, w27, #8
    3370:	lsl	x21, x29, #4
    3374:	ldr	x28, [x1, x21]
    3378:	cbz	x28, 345c <PyInit__codecs_kr@@Base+0xb28>
    337c:	add	x29, x1, x29, lsl #4
    3380:	ldrb	w21, [x29, #8]
    3384:	and	w30, w27, #0xff
    3388:	subs	w27, w30, w21
    338c:	b.cc	345c <PyInit__codecs_kr@@Base+0xb28>  // b.lo, b.ul, b.last
    3390:	ldrb	w21, [x29, #9]
    3394:	cmp	w30, w21
    3398:	b.hi	345c <PyInit__codecs_kr@@Base+0xb28>  // b.pmore
    339c:	ldrh	w27, [x28, w27, uxtw #1]
    33a0:	cmp	w27, w19
    33a4:	b.eq	345c <PyInit__codecs_kr@@Base+0xb28>  // b.none
    33a8:	add	w21, w27, w20
    33ac:	cmp	w21, #0xc00
    33b0:	b.cc	33c8 <PyInit__codecs_kr@@Base+0xa94>  // b.lo, b.ul, b.last
    33b4:	mov	w21, #0xffffb600            	// #-18944
    33b8:	add	w21, w27, w21
    33bc:	ubfx	w21, w21, #10, #6
    33c0:	cmp	w21, #0xc
    33c4:	b.hi	345c <PyInit__codecs_kr@@Base+0xb28>  // b.pmore
    33c8:	and	w21, w27, #0xff
    33cc:	sub	w21, w21, #0x21
    33d0:	and	w21, w21, #0xffff
    33d4:	cmp	w21, #0x5d
    33d8:	b.hi	345c <PyInit__codecs_kr@@Base+0xb28>  // b.pmore
    33dc:	lsr	w28, w27, #9
    33e0:	cmp	w28, #0x25
    33e4:	lsr	w21, w27, #8
    33e8:	csel	w28, w23, w22, cc  // cc = lo, ul, last
    33ec:	ldr	x29, [x6]
    33f0:	add	w21, w28, w21
    33f4:	lsr	w28, w21, #1
    33f8:	sbfx	w21, w21, #0, #1
    33fc:	and	w21, w21, w24
    3400:	add	w21, w27, w21
    3404:	strb	w28, [x29]
    3408:	add	w21, w21, #0xdf
    340c:	ldr	x27, [x6]
    3410:	and	w28, w21, #0xfe
    3414:	cmp	w28, #0x4e
    3418:	csel	w28, w26, w25, cc  // cc = lo, ul, last
    341c:	add	w21, w28, w21
    3420:	mov	x28, #0xfffffffffffffffe    	// #-2
    3424:	strb	w21, [x27, #1]
    3428:	mov	w29, #0x2                   	// #2
    342c:	ldr	x21, [x4]
    3430:	add	x7, x7, x28
    3434:	add	x27, x21, #0x1
    3438:	str	x27, [x4]
    343c:	ldr	x21, [x6]
    3440:	cmp	x27, x5
    3444:	add	x21, x21, x29
    3448:	str	x21, [x6]
    344c:	b.lt	327c <PyInit__codecs_kr@@Base+0x948>  // b.tstop
    3450:	mov	x0, xzr
    3454:	b	345c <PyInit__codecs_kr@@Base+0xb28>
    3458:	mov	x0, #0xffffffffffffffff    	// #-1
    345c:	ldp	x20, x19, [sp, #80]
    3460:	ldp	x22, x21, [sp, #64]
    3464:	ldp	x24, x23, [sp, #48]
    3468:	ldp	x26, x25, [sp, #32]
    346c:	ldp	x28, x27, [sp, #16]
    3470:	ldp	x29, x30, [sp], #96
    3474:	ret
    3478:	stp	x29, x30, [sp, #-96]!
    347c:	stp	x28, x27, [sp, #16]
    3480:	stp	x26, x25, [sp, #32]
    3484:	stp	x24, x23, [sp, #48]
    3488:	stp	x22, x21, [sp, #64]
    348c:	stp	x20, x19, [sp, #80]
    3490:	mov	x29, sp
    3494:	cmp	x3, #0x1
    3498:	b.lt	3708 <PyInit__codecs_kr@@Base+0xdd4>  // b.tstop
    349c:	ldr	x8, [x2]
    34a0:	mov	w26, #0x303                 	// #771
    34a4:	mov	w27, #0x1                   	// #1
    34a8:	adrp	x25, 2d000 <PyInit__codecs_kr@@Base+0x2a6cc>
    34ac:	mov	x20, x4
    34b0:	mov	x21, x3
    34b4:	mov	x22, x2
    34b8:	mov	w19, #0x1                   	// #1
    34bc:	movk	w26, #0xc303, lsl #16
    34c0:	movk	w27, #0xc004, lsl #16
    34c4:	mov	w23, #0x4e                  	// #78
    34c8:	mov	w24, #0xffffffbd            	// #-67
    34cc:	mov	w28, #0xffffffcf            	// #-49
    34d0:	add	x25, x25, #0xd70
    34d4:	ldrsb	w9, [x8]
    34d8:	and	w1, w9, #0xff
    34dc:	tbnz	w9, #31, 34f8 <PyInit__codecs_kr@@Base+0xbc4>
    34e0:	mov	x0, x20
    34e4:	bl	2810 <_PyUnicodeWriter_WriteChar@plt>
    34e8:	tbnz	w0, #31, 3710 <PyInit__codecs_kr@@Base+0xddc>
    34ec:	mov	x8, #0xffffffffffffffff    	// #-1
    34f0:	mov	w9, #0x1                   	// #1
    34f4:	b	36f0 <PyInit__codecs_kr@@Base+0xdbc>
    34f8:	cmp	x21, #0x2
    34fc:	b.lt	3718 <PyInit__codecs_kr@@Base+0xde4>  // b.tstop
    3500:	ldrb	w8, [x8, #1]
    3504:	cmp	w1, #0xd7
    3508:	and	x9, x9, #0xff
    350c:	b.hi	355c <PyInit__codecs_kr@@Base+0xc28>  // b.pmore
    3510:	ubfx	x10, x9, #2, #5
    3514:	sub	x11, x10, #0x1
    3518:	cmp	x11, #0x13
    351c:	b.hi	371c <PyInit__codecs_kr@@Base+0xde8>  // b.pmore
    3520:	ubfx	x11, x8, #5, #27
    3524:	bfi	w11, w9, #3, #2
    3528:	lsr	x9, x26, x11
    352c:	tbnz	w9, #0, 371c <PyInit__codecs_kr@@Base+0xde8>
    3530:	and	x8, x8, #0x1f
    3534:	lsr	x9, x27, x8
    3538:	tbnz	w9, #0, 371c <PyInit__codecs_kr@@Base+0xde8>
    353c:	cmp	w10, #0x1
    3540:	b.ne	3648 <PyInit__codecs_kr@@Base+0xd14>  // b.any
    3544:	cmp	w11, #0x2
    3548:	b.ne	3668 <PyInit__codecs_kr@@Base+0xd34>  // b.any
    354c:	cmp	w8, #0x1
    3550:	b.ne	36c8 <PyInit__codecs_kr@@Base+0xd94>  // b.any
    3554:	mov	w1, #0x3000                	// #12288
    3558:	b	36dc <PyInit__codecs_kr@@Base+0xda8>
    355c:	cmp	w8, #0x31
    3560:	b.cc	371c <PyInit__codecs_kr@@Base+0xde8>  // b.lo, b.ul, b.last
    3564:	sub	w10, w9, #0xdf
    3568:	cmp	w10, #0x20
    356c:	b.hi	3584 <PyInit__codecs_kr@@Base+0xc50>  // b.pmore
    3570:	mov	x11, #0x1f8000000           	// #8455716864
    3574:	lsl	x10, x19, x10
    3578:	movk	x11, #0x1
    357c:	tst	x10, x11
    3580:	b.ne	371c <PyInit__codecs_kr@@Base+0xde8>  // b.any
    3584:	sxtb	w10, w8
    3588:	cmp	w10, #0x0
    358c:	cset	w10, lt  // lt = tstop
    3590:	cmp	w8, #0x91
    3594:	cset	w11, cc  // cc = lo, ul, last
    3598:	and	w10, w10, w11
    359c:	tbnz	w10, #0, 371c <PyInit__codecs_kr@@Base+0xde8>
    35a0:	and	w10, w8, #0x7f
    35a4:	cmp	w10, #0x7f
    35a8:	b.eq	371c <PyInit__codecs_kr@@Base+0xde8>  // b.none
    35ac:	cmp	w9, #0xda
    35b0:	b.ne	35c4 <PyInit__codecs_kr@@Base+0xc90>  // b.any
    35b4:	add	w9, w8, #0x5f
    35b8:	and	w9, w9, #0xff
    35bc:	cmp	w9, #0x33
    35c0:	b.cc	371c <PyInit__codecs_kr@@Base+0xde8>  // b.lo, b.ul, b.last
    35c4:	cmp	w1, #0xe0
    35c8:	mov	w9, #0x69                  	// #105
    35cc:	csel	w11, w23, w9, cc  // cc = lo, ul, last
    35d0:	cmp	w8, #0x91
    35d4:	csel	w9, w28, w24, cc  // cc = lo, ul, last
    35d8:	add	w9, w9, w8
    35dc:	and	w10, w9, #0xff
    35e0:	cmp	w10, #0x5d
    35e4:	add	w8, w11, w1, lsl #1
    35e8:	cinc	w8, w8, hi  // hi = pmore
    35ec:	add	w8, w8, #0x21
    35f0:	and	x11, x8, #0xff
    35f4:	lsl	x8, x11, #4
    35f8:	ldr	x8, [x25, x8]
    35fc:	cbz	x8, 371c <PyInit__codecs_kr@@Base+0xde8>
    3600:	add	x12, x25, x11, lsl #4
    3604:	ldrb	w11, [x12, #8]
    3608:	sub	w13, w9, #0x5e
    360c:	cmp	w10, #0x5e
    3610:	csel	w9, w9, w13, cc  // cc = lo, ul, last
    3614:	add	w9, w9, #0x21
    3618:	cmp	w11, w9, uxtb
    361c:	b.hi	371c <PyInit__codecs_kr@@Base+0xde8>  // b.pmore
    3620:	ldrb	w10, [x12, #9]
    3624:	and	x9, x9, #0xff
    3628:	cmp	w9, w10
    362c:	b.hi	371c <PyInit__codecs_kr@@Base+0xde8>  // b.pmore
    3630:	sub	x9, x9, x11
    3634:	ldrh	w1, [x8, x9, lsl #1]
    3638:	mov	w8, #0xfffe                	// #65534
    363c:	cmp	w1, w8
    3640:	b.ne	36dc <PyInit__codecs_kr@@Base+0xda8>  // b.any
    3644:	b	371c <PyInit__codecs_kr@@Base+0xde8>
    3648:	cmp	w11, #0x2
    364c:	b.ne	3680 <PyInit__codecs_kr@@Base+0xd4c>  // b.any
    3650:	cmp	w8, #0x1
    3654:	b.ne	371c <PyInit__codecs_kr@@Base+0xde8>  // b.any
    3658:	adrp	x8, 1c000 <PyInit__codecs_kr@@Base+0x196cc>
    365c:	add	x8, x8, #0x8aa
    3660:	ldrb	w8, [x8, x10]
    3664:	b	36d4 <PyInit__codecs_kr@@Base+0xda0>
    3668:	cmp	w8, #0x1
    366c:	b.ne	371c <PyInit__codecs_kr@@Base+0xde8>  // b.any
    3670:	adrp	x8, 1c000 <PyInit__codecs_kr@@Base+0x196cc>
    3674:	add	x8, x8, #0x88a
    3678:	ldrb	w8, [x8, x11]
    367c:	b	36d4 <PyInit__codecs_kr@@Base+0xda0>
    3680:	adrp	x9, 1c000 <PyInit__codecs_kr@@Base+0x196cc>
    3684:	adrp	x12, 1c000 <PyInit__codecs_kr@@Base+0x196cc>
    3688:	add	x9, x9, #0x84a
    368c:	add	x12, x12, #0x80a
    3690:	ldrb	w9, [x9, x8]
    3694:	ldrb	w10, [x12, x10]
    3698:	adrp	x12, 1c000 <PyInit__codecs_kr@@Base+0x196cc>
    369c:	add	x12, x12, #0x82a
    36a0:	ldrb	w11, [x12, x11]
    36a4:	cmp	w8, #0x1
    36a8:	csel	w8, wzr, w9, eq  // eq = none
    36ac:	mov	w9, #0x24c                 	// #588
    36b0:	madd	w8, w10, w9, w8
    36b4:	mov	w9, #0x1c                  	// #28
    36b8:	madd	w8, w11, w9, w8
    36bc:	mov	w9, #0xac00                	// #44032
    36c0:	add	w1, w8, w9
    36c4:	b	36dc <PyInit__codecs_kr@@Base+0xda8>
    36c8:	adrp	x9, 1c000 <PyInit__codecs_kr@@Base+0x196cc>
    36cc:	add	x9, x9, #0x86a
    36d0:	ldrb	w8, [x9, x8]
    36d4:	mov	w9, #0x3100                	// #12544
    36d8:	orr	w1, w8, w9
    36dc:	mov	x0, x20
    36e0:	bl	2810 <_PyUnicodeWriter_WriteChar@plt>
    36e4:	tbnz	w0, #31, 3710 <PyInit__codecs_kr@@Base+0xddc>
    36e8:	mov	x8, #0xfffffffffffffffe    	// #-2
    36ec:	mov	w9, #0x2                   	// #2
    36f0:	ldr	x10, [x22]
    36f4:	add	x21, x21, x8
    36f8:	cmp	x21, #0x0
    36fc:	add	x8, x10, x9
    3700:	str	x8, [x22]
    3704:	b.gt	34d4 <PyInit__codecs_kr@@Base+0xba0>
    3708:	mov	x19, xzr
    370c:	b	371c <PyInit__codecs_kr@@Base+0xde8>
    3710:	mov	x19, #0xfffffffffffffffc    	// #-4
    3714:	b	371c <PyInit__codecs_kr@@Base+0xde8>
    3718:	mov	x19, #0xfffffffffffffffe    	// #-2
    371c:	mov	x0, x19
    3720:	ldp	x20, x19, [sp, #80]
    3724:	ldp	x22, x21, [sp, #64]
    3728:	ldp	x24, x23, [sp, #48]
    372c:	ldp	x26, x25, [sp, #32]
    3730:	ldp	x28, x27, [sp, #16]
    3734:	ldp	x29, x30, [sp], #96
    3738:	ret

Disassembly of section .fini:

000000000000373c <.fini>:
    373c:	stp	x29, x30, [sp, #-16]!
    3740:	mov	x29, sp
    3744:	ldp	x29, x30, [sp], #16
    3748:	ret
