
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-reply-password_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400ce8 <_init>:
  400ce8:	stp	x29, x30, [sp, #-16]!
  400cec:	mov	x29, sp
  400cf0:	bl	400f00 <call_weak_fn>
  400cf4:	ldp	x29, x30, [sp], #16
  400cf8:	ret

Disassembly of section .plt:

0000000000400d00 <__libc_start_main@plt-0x20>:
  400d00:	stp	x16, x30, [sp, #-16]!
  400d04:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400d08:	ldr	x17, [x16, #3888]
  400d0c:	add	x16, x16, #0xf30
  400d10:	br	x17
  400d14:	nop
  400d18:	nop
  400d1c:	nop

0000000000400d20 <__libc_start_main@plt>:
  400d20:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400d24:	ldr	x17, [x16, #3896]
  400d28:	add	x16, x16, #0xf38
  400d2c:	br	x17

0000000000400d30 <abort@plt>:
  400d30:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400d34:	ldr	x17, [x16, #3904]
  400d38:	add	x16, x16, #0xf40
  400d3c:	br	x17

0000000000400d40 <__gmon_start__@plt>:
  400d40:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400d44:	ldr	x17, [x16, #3912]
  400d48:	add	x16, x16, #0xf48
  400d4c:	br	x17

0000000000400d50 <log_setup_service@plt>:
  400d50:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400d54:	ldr	x17, [x16, #3920]
  400d58:	add	x16, x16, #0xf50
  400d5c:	br	x17

0000000000400d60 <strcmp@plt>:
  400d60:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400d64:	ldr	x17, [x16, #3928]
  400d68:	add	x16, x16, #0xf58
  400d6c:	br	x17

0000000000400d70 <log_get_max_level_realm@plt>:
  400d70:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400d74:	ldr	x17, [x16, #3936]
  400d78:	add	x16, x16, #0xf60
  400d7c:	br	x17

0000000000400d80 <log_internal_realm@plt>:
  400d80:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400d84:	ldr	x17, [x16, #3944]
  400d88:	add	x16, x16, #0xf68
  400d8c:	br	x17

0000000000400d90 <safe_close@plt>:
  400d90:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400d94:	ldr	x17, [x16, #3952]
  400d98:	add	x16, x16, #0xf70
  400d9c:	br	x17

0000000000400da0 <read_line_full@plt>:
  400da0:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400da4:	ldr	x17, [x16, #3960]
  400da8:	add	x16, x16, #0xf78
  400dac:	br	x17

0000000000400db0 <strjoin_real@plt>:
  400db0:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400db4:	ldr	x17, [x16, #3968]
  400db8:	add	x16, x16, #0xf80
  400dbc:	br	x17

0000000000400dc0 <strlen@plt>:
  400dc0:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400dc4:	ldr	x17, [x16, #3976]
  400dc8:	add	x16, x16, #0xf88
  400dcc:	br	x17

0000000000400dd0 <strdup@plt>:
  400dd0:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400dd4:	ldr	x17, [x16, #3984]
  400dd8:	add	x16, x16, #0xf90
  400ddc:	br	x17

0000000000400de0 <log_oom_internal@plt>:
  400de0:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400de4:	ldr	x17, [x16, #3992]
  400de8:	add	x16, x16, #0xf98
  400dec:	br	x17

0000000000400df0 <malloc_usable_size@plt>:
  400df0:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400df4:	ldr	x17, [x16, #4000]
  400df8:	add	x16, x16, #0xfa0
  400dfc:	br	x17

0000000000400e00 <explicit_bzero@plt>:
  400e00:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400e04:	ldr	x17, [x16, #4008]
  400e08:	add	x16, x16, #0xfa8
  400e0c:	br	x17

0000000000400e10 <free@plt>:
  400e10:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400e14:	ldr	x17, [x16, #4016]
  400e18:	add	x16, x16, #0xfb0
  400e1c:	br	x17

0000000000400e20 <socket@plt>:
  400e20:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400e24:	ldr	x17, [x16, #4024]
  400e28:	add	x16, x16, #0xfb8
  400e2c:	br	x17

0000000000400e30 <sockaddr_un_set_path@plt>:
  400e30:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400e34:	ldr	x17, [x16, #4032]
  400e38:	add	x16, x16, #0xfc0
  400e3c:	br	x17

0000000000400e40 <sendto@plt>:
  400e40:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400e44:	ldr	x17, [x16, #4040]
  400e48:	add	x16, x16, #0xfc8
  400e4c:	br	x17

0000000000400e50 <__errno_location@plt>:
  400e50:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400e54:	ldr	x17, [x16, #4048]
  400e58:	add	x16, x16, #0xfd0
  400e5c:	br	x17

0000000000400e60 <ask_password_agent_close@plt>:
  400e60:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400e64:	ldr	x17, [x16, #4056]
  400e68:	add	x16, x16, #0xfd8
  400e6c:	br	x17

0000000000400e70 <polkit_agent_close@plt>:
  400e70:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400e74:	ldr	x17, [x16, #4064]
  400e78:	add	x16, x16, #0xfe0
  400e7c:	br	x17

0000000000400e80 <pager_close@plt>:
  400e80:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400e84:	ldr	x17, [x16, #4072]
  400e88:	add	x16, x16, #0xfe8
  400e8c:	br	x17

0000000000400e90 <mac_selinux_finish@plt>:
  400e90:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400e94:	ldr	x17, [x16, #4080]
  400e98:	add	x16, x16, #0xff0
  400e9c:	br	x17

0000000000400ea0 <log_assert_failed_realm@plt>:
  400ea0:	adrp	x16, 41f000 <__FRAME_END__+0x1d848>
  400ea4:	ldr	x17, [x16, #4088]
  400ea8:	add	x16, x16, #0xff8
  400eac:	br	x17

Disassembly of section .text:

0000000000400eb0 <_start>:
  400eb0:	mov	x29, #0x0                   	// #0
  400eb4:	mov	x30, #0x0                   	// #0
  400eb8:	mov	x5, x0
  400ebc:	ldr	x1, [sp]
  400ec0:	add	x2, sp, #0x8
  400ec4:	mov	x6, sp
  400ec8:	movz	x0, #0x0, lsl #48
  400ecc:	movk	x0, #0x0, lsl #32
  400ed0:	movk	x0, #0x40, lsl #16
  400ed4:	movk	x0, #0xfdc
  400ed8:	movz	x3, #0x0, lsl #48
  400edc:	movk	x3, #0x0, lsl #32
  400ee0:	movk	x3, #0x40, lsl #16
  400ee4:	movk	x3, #0x14c0
  400ee8:	movz	x4, #0x0, lsl #48
  400eec:	movk	x4, #0x0, lsl #32
  400ef0:	movk	x4, #0x40, lsl #16
  400ef4:	movk	x4, #0x1540
  400ef8:	bl	400d20 <__libc_start_main@plt>
  400efc:	bl	400d30 <abort@plt>

0000000000400f00 <call_weak_fn>:
  400f00:	adrp	x0, 41f000 <__FRAME_END__+0x1d848>
  400f04:	ldr	x0, [x0, #3848]
  400f08:	cbz	x0, 400f10 <call_weak_fn+0x10>
  400f0c:	b	400d40 <__gmon_start__@plt>
  400f10:	ret

0000000000400f14 <deregister_tm_clones>:
  400f14:	adrp	x0, 420000 <completed.8445>
  400f18:	add	x1, x0, #0x0
  400f1c:	adrp	x0, 420000 <completed.8445>
  400f20:	add	x0, x0, #0x0
  400f24:	cmp	x1, x0
  400f28:	b.eq	400f54 <deregister_tm_clones+0x40>  // b.none
  400f2c:	sub	sp, sp, #0x10
  400f30:	adrp	x1, 401000 <main+0x24>
  400f34:	ldr	x1, [x1, #1368]
  400f38:	str	x1, [sp, #8]
  400f3c:	cbz	x1, 400f4c <deregister_tm_clones+0x38>
  400f40:	mov	x16, x1
  400f44:	add	sp, sp, #0x10
  400f48:	br	x16
  400f4c:	add	sp, sp, #0x10
  400f50:	ret
  400f54:	ret

0000000000400f58 <register_tm_clones>:
  400f58:	adrp	x0, 420000 <completed.8445>
  400f5c:	add	x1, x0, #0x0
  400f60:	adrp	x0, 420000 <completed.8445>
  400f64:	add	x0, x0, #0x0
  400f68:	sub	x1, x1, x0
  400f6c:	mov	x2, #0x2                   	// #2
  400f70:	asr	x1, x1, #3
  400f74:	sdiv	x1, x1, x2
  400f78:	cbz	x1, 400fa4 <register_tm_clones+0x4c>
  400f7c:	sub	sp, sp, #0x10
  400f80:	adrp	x2, 401000 <main+0x24>
  400f84:	ldr	x2, [x2, #1376]
  400f88:	str	x2, [sp, #8]
  400f8c:	cbz	x2, 400f9c <register_tm_clones+0x44>
  400f90:	mov	x16, x2
  400f94:	add	sp, sp, #0x10
  400f98:	br	x16
  400f9c:	add	sp, sp, #0x10
  400fa0:	ret
  400fa4:	ret

0000000000400fa8 <__do_global_dtors_aux>:
  400fa8:	stp	x29, x30, [sp, #-32]!
  400fac:	mov	x29, sp
  400fb0:	str	x19, [sp, #16]
  400fb4:	adrp	x19, 420000 <completed.8445>
  400fb8:	ldrb	w0, [x19]
  400fbc:	cbnz	w0, 400fcc <__do_global_dtors_aux+0x24>
  400fc0:	bl	400f14 <deregister_tm_clones>
  400fc4:	mov	w0, #0x1                   	// #1
  400fc8:	strb	w0, [x19]
  400fcc:	ldr	x19, [sp, #16]
  400fd0:	ldp	x29, x30, [sp], #32
  400fd4:	ret

0000000000400fd8 <frame_dummy>:
  400fd8:	b	400f58 <register_tm_clones>

0000000000400fdc <main>:
  400fdc:	sub	sp, sp, #0xc0
  400fe0:	adrp	x8, 420000 <completed.8445>
  400fe4:	adrp	x9, 420000 <completed.8445>
  400fe8:	stp	x29, x30, [sp, #128]
  400fec:	stp	x24, x23, [sp, #144]
  400ff0:	stp	x22, x21, [sp, #160]
  400ff4:	stp	x20, x19, [sp, #176]
  400ff8:	add	x29, sp, #0x80
  400ffc:	mov	x20, x1
  401000:	mov	w19, w0
  401004:	str	w0, [x8, #8]
  401008:	str	x1, [x9, #16]
  40100c:	bl	400d50 <log_setup_service@plt>
  401010:	cmp	w19, #0x3
  401014:	b.ne	401088 <main+0xac>  // b.any
  401018:	ldr	x19, [x20, #8]
  40101c:	adrp	x1, 401000 <main+0x24>
  401020:	add	x1, x1, #0x5ae
  401024:	mov	x0, x19
  401028:	bl	400d60 <strcmp@plt>
  40102c:	cbz	w0, 4010dc <main+0x100>
  401030:	adrp	x1, 401000 <main+0x24>
  401034:	add	x1, x1, #0x5ee
  401038:	mov	x0, x19
  40103c:	bl	400d60 <strcmp@plt>
  401040:	cbz	w0, 401138 <main+0x15c>
  401044:	mov	w0, wzr
  401048:	bl	400d70 <log_get_max_level_realm@plt>
  40104c:	cmp	w0, #0x3
  401050:	b.lt	4010cc <main+0xf0>  // b.tstop
  401054:	adrp	x2, 401000 <main+0x24>
  401058:	adrp	x4, 401000 <main+0x24>
  40105c:	adrp	x5, 401000 <main+0x24>
  401060:	mov	w1, #0x16                  	// #22
  401064:	add	x2, x2, #0x56b
  401068:	add	x4, x4, #0x58f
  40106c:	add	x5, x5, #0x5f2
  401070:	mov	w0, #0x3                   	// #3
  401074:	movk	w1, #0x4000, lsl #16
  401078:	mov	w3, #0x48                  	// #72
  40107c:	mov	x6, x19
  401080:	bl	400d80 <log_internal_realm@plt>
  401084:	b	4010c4 <main+0xe8>
  401088:	mov	w0, wzr
  40108c:	bl	400d70 <log_get_max_level_realm@plt>
  401090:	cmp	w0, #0x3
  401094:	b.lt	4010cc <main+0xf0>  // b.tstop
  401098:	adrp	x2, 401000 <main+0x24>
  40109c:	adrp	x4, 401000 <main+0x24>
  4010a0:	adrp	x5, 401000 <main+0x24>
  4010a4:	mov	w1, #0x16                  	// #22
  4010a8:	add	x2, x2, #0x56b
  4010ac:	add	x4, x4, #0x58f
  4010b0:	add	x5, x5, #0x593
  4010b4:	mov	w0, #0x3                   	// #3
  4010b8:	movk	w1, #0x4000, lsl #16
  4010bc:	mov	w3, #0x2d                  	// #45
  4010c0:	bl	400d80 <log_internal_realm@plt>
  4010c4:	mov	w21, w0
  4010c8:	b	4010d0 <main+0xf4>
  4010cc:	mov	w21, #0xffffffea            	// #-22
  4010d0:	mov	w0, #0xffffffff            	// #-1
  4010d4:	bl	400d90 <safe_close@plt>
  4010d8:	b	40140c <main+0x430>
  4010dc:	adrp	x8, 420000 <completed.8445>
  4010e0:	ldr	x0, [x8, #24]
  4010e4:	mov	x3, sp
  4010e8:	mov	w1, #0x100000              	// #1048576
  4010ec:	mov	w2, wzr
  4010f0:	str	xzr, [sp]
  4010f4:	bl	400da0 <read_line_full@plt>
  4010f8:	mov	w19, w0
  4010fc:	tbnz	w0, #31, 401154 <main+0x178>
  401100:	cbz	w19, 40118c <main+0x1b0>
  401104:	ldr	x1, [sp]
  401108:	adrp	x0, 401000 <main+0x24>
  40110c:	add	x0, x0, #0x5ec
  401110:	mov	x2, xzr
  401114:	bl	400db0 <strjoin_real@plt>
  401118:	cbz	x0, 4011fc <main+0x220>
  40111c:	ldr	x22, [sp]
  401120:	mov	x19, x0
  401124:	mov	x0, x22
  401128:	bl	400dc0 <strlen@plt>
  40112c:	add	x23, x0, #0x2
  401130:	mov	w24, #0x1                   	// #1
  401134:	b	401230 <main+0x254>
  401138:	adrp	x0, 401000 <main+0x24>
  40113c:	add	x0, x0, #0x5f0
  401140:	bl	400dd0 <strdup@plt>
  401144:	cbz	x0, 4011d0 <main+0x1f4>
  401148:	mov	x19, x0
  40114c:	mov	w23, #0x1                   	// #1
  401150:	b	401258 <main+0x27c>
  401154:	mov	w0, wzr
  401158:	bl	400d70 <log_get_max_level_realm@plt>
  40115c:	cmp	w0, #0x3
  401160:	b.lt	4011ec <main+0x210>  // b.tstop
  401164:	adrp	x2, 401000 <main+0x24>
  401168:	adrp	x4, 401000 <main+0x24>
  40116c:	adrp	x5, 401000 <main+0x24>
  401170:	add	x2, x2, #0x56b
  401174:	add	x4, x4, #0x58f
  401178:	add	x5, x5, #0x5b0
  40117c:	mov	w0, #0x3                   	// #3
  401180:	mov	w3, #0x34                  	// #52
  401184:	mov	w1, w19
  401188:	b	4011c8 <main+0x1ec>
  40118c:	mov	w0, wzr
  401190:	bl	400d70 <log_get_max_level_realm@plt>
  401194:	cmp	w0, #0x3
  401198:	b.lt	40121c <main+0x240>  // b.tstop
  40119c:	mov	w8, #0x16                  	// #22
  4011a0:	movk	w8, #0x4000, lsl #16
  4011a4:	adrp	x2, 401000 <main+0x24>
  4011a8:	adrp	x4, 401000 <main+0x24>
  4011ac:	adrp	x5, 401000 <main+0x24>
  4011b0:	sub	w1, w8, #0x11
  4011b4:	add	x2, x2, #0x56b
  4011b8:	add	x4, x4, #0x58f
  4011bc:	add	x5, x5, #0x5cc
  4011c0:	mov	w0, #0x3                   	// #3
  4011c4:	mov	w3, #0x37                  	// #55
  4011c8:	bl	400d80 <log_internal_realm@plt>
  4011cc:	b	401214 <main+0x238>
  4011d0:	adrp	x1, 401000 <main+0x24>
  4011d4:	adrp	x3, 401000 <main+0x24>
  4011d8:	add	x1, x1, #0x56b
  4011dc:	add	x3, x3, #0x58f
  4011e0:	mov	w2, #0x42                  	// #66
  4011e4:	bl	400de0 <log_oom_internal@plt>
  4011e8:	b	4010c4 <main+0xe8>
  4011ec:	mov	w8, wzr
  4011f0:	neg	w9, w19
  4011f4:	sub	w21, w8, w9, uxtb
  4011f8:	b	401220 <main+0x244>
  4011fc:	adrp	x1, 401000 <main+0x24>
  401200:	adrp	x3, 401000 <main+0x24>
  401204:	add	x1, x1, #0x56b
  401208:	add	x3, x3, #0x58f
  40120c:	mov	w2, #0x3b                  	// #59
  401210:	bl	400de0 <log_oom_internal@plt>
  401214:	mov	w21, w0
  401218:	b	401220 <main+0x244>
  40121c:	mov	w21, #0xfffffffb            	// #-5
  401220:	ldr	x22, [sp]
  401224:	mov	x19, xzr
  401228:	mov	w24, wzr
  40122c:	mov	x23, xzr
  401230:	cbz	x22, 401254 <main+0x278>
  401234:	mov	x0, x22
  401238:	bl	400df0 <malloc_usable_size@plt>
  40123c:	cbz	x0, 40124c <main+0x270>
  401240:	mov	x1, x0
  401244:	mov	x0, x22
  401248:	bl	400e00 <explicit_bzero@plt>
  40124c:	mov	x0, x22
  401250:	bl	400e10 <free@plt>
  401254:	tbz	w24, #0, 4012d0 <main+0x2f4>
  401258:	mov	w1, #0x802                 	// #2050
  40125c:	mov	w0, #0x1                   	// #1
  401260:	movk	w1, #0x8, lsl #16
  401264:	mov	w2, wzr
  401268:	bl	400e20 <socket@plt>
  40126c:	mov	w22, w0
  401270:	tbnz	w0, #31, 4012d8 <main+0x2fc>
  401274:	ldr	x20, [x20, #16]
  401278:	movi	v0.2d, #0x0
  40127c:	stp	q0, q0, [sp, #96]
  401280:	stp	q0, q0, [sp, #64]
  401284:	stp	q0, q0, [sp, #32]
  401288:	stp	q0, q0, [sp]
  40128c:	cbz	x20, 401478 <main+0x49c>
  401290:	cbz	x19, 401498 <main+0x4bc>
  401294:	mov	x0, sp
  401298:	mov	x1, x20
  40129c:	bl	400e30 <sockaddr_un_set_path@plt>
  4012a0:	mov	w21, w0
  4012a4:	tbnz	w0, #31, 401320 <main+0x344>
  4012a8:	mov	x4, sp
  4012ac:	mov	w3, #0x4000                	// #16384
  4012b0:	mov	w0, w22
  4012b4:	mov	x1, x19
  4012b8:	mov	x2, x23
  4012bc:	mov	w5, w21
  4012c0:	bl	400e40 <sendto@plt>
  4012c4:	tbnz	x0, #63, 401380 <main+0x3a4>
  4012c8:	mov	w21, wzr
  4012cc:	b	4013e4 <main+0x408>
  4012d0:	mov	w22, #0xffffffff            	// #-1
  4012d4:	b	401370 <main+0x394>
  4012d8:	bl	400e50 <__errno_location@plt>
  4012dc:	ldr	w20, [x0]
  4012e0:	mov	w0, wzr
  4012e4:	bl	400d70 <log_get_max_level_realm@plt>
  4012e8:	cmp	w0, #0x3
  4012ec:	b.lt	401360 <main+0x384>  // b.tstop
  4012f0:	adrp	x2, 401000 <main+0x24>
  4012f4:	adrp	x4, 401000 <main+0x24>
  4012f8:	adrp	x5, 401000 <main+0x24>
  4012fc:	add	x2, x2, #0x56b
  401300:	add	x4, x4, #0x58f
  401304:	add	x5, x5, #0x60c
  401308:	mov	w0, #0x3                   	// #3
  40130c:	mov	w3, #0x4c                  	// #76
  401310:	mov	w1, w20
  401314:	bl	400d80 <log_internal_realm@plt>
  401318:	mov	w21, w0
  40131c:	b	401370 <main+0x394>
  401320:	mov	w0, wzr
  401324:	bl	400d70 <log_get_max_level_realm@plt>
  401328:	cmp	w0, #0x3
  40132c:	b.lt	4013c8 <main+0x3ec>  // b.tstop
  401330:	adrp	x2, 401000 <main+0x24>
  401334:	adrp	x4, 401000 <main+0x24>
  401338:	adrp	x5, 401000 <main+0x24>
  40133c:	add	x2, x2, #0x56b
  401340:	add	x4, x4, #0x66f
  401344:	add	x5, x5, #0x67e
  401348:	mov	w0, #0x3                   	// #3
  40134c:	mov	w3, #0x1c                  	// #28
  401350:	mov	w1, w21
  401354:	mov	x6, x20
  401358:	bl	400d80 <log_internal_realm@plt>
  40135c:	b	4013c0 <main+0x3e4>
  401360:	cmp	w20, #0x0
  401364:	mov	w8, wzr
  401368:	cneg	w9, w20, mi  // mi = first
  40136c:	sub	w21, w8, w9, uxtb
  401370:	mov	w0, w22
  401374:	bl	400d90 <safe_close@plt>
  401378:	cbnz	x19, 4013ec <main+0x410>
  40137c:	b	40140c <main+0x430>
  401380:	bl	400e50 <__errno_location@plt>
  401384:	ldr	w20, [x0]
  401388:	mov	w0, wzr
  40138c:	bl	400d70 <log_get_max_level_realm@plt>
  401390:	cmp	w0, #0x3
  401394:	b.lt	4013d4 <main+0x3f8>  // b.tstop
  401398:	adrp	x2, 401000 <main+0x24>
  40139c:	adrp	x4, 401000 <main+0x24>
  4013a0:	adrp	x5, 401000 <main+0x24>
  4013a4:	add	x2, x2, #0x56b
  4013a8:	add	x4, x4, #0x66f
  4013ac:	add	x5, x5, #0x6bd
  4013b0:	mov	w0, #0x3                   	// #3
  4013b4:	mov	w3, #0x1f                  	// #31
  4013b8:	mov	w1, w20
  4013bc:	bl	400d80 <log_internal_realm@plt>
  4013c0:	mov	w21, w0
  4013c4:	b	4013e4 <main+0x408>
  4013c8:	mov	w8, wzr
  4013cc:	neg	w9, w21
  4013d0:	b	4013e0 <main+0x404>
  4013d4:	cmp	w20, #0x0
  4013d8:	mov	w8, wzr
  4013dc:	cneg	w9, w20, mi  // mi = first
  4013e0:	sub	w21, w8, w9, uxtb
  4013e4:	mov	w0, w22
  4013e8:	bl	400d90 <safe_close@plt>
  4013ec:	mov	x0, x19
  4013f0:	bl	400df0 <malloc_usable_size@plt>
  4013f4:	cbz	x0, 401404 <main+0x428>
  4013f8:	mov	x1, x0
  4013fc:	mov	x0, x19
  401400:	bl	400e00 <explicit_bzero@plt>
  401404:	mov	x0, x19
  401408:	bl	400e10 <free@plt>
  40140c:	bl	400e60 <ask_password_agent_close@plt>
  401410:	bl	400e70 <polkit_agent_close@plt>
  401414:	bl	400e80 <pager_close@plt>
  401418:	bl	400e90 <mac_selinux_finish@plt>
  40141c:	adrp	x8, 41f000 <__FRAME_END__+0x1d848>
  401420:	ldr	x8, [x8, #3856]
  401424:	adrp	x19, 41f000 <__FRAME_END__+0x1d848>
  401428:	ldr	x19, [x19, #3864]
  40142c:	add	x9, x8, #0x7
  401430:	and	x20, x9, #0xfffffffffffffff8
  401434:	cmp	x20, x19
  401438:	cset	w9, cs  // cs = hs, nlast
  40143c:	cmp	x8, #0x0
  401440:	cset	w8, eq  // eq = none
  401444:	orr	w8, w8, w9
  401448:	tbnz	w8, #0, 40145c <main+0x480>
  40144c:	ldp	x0, x8, [x20], #16
  401450:	blr	x8
  401454:	cmp	x20, x19
  401458:	b.cc	40144c <main+0x470>  // b.lo, b.ul, b.last
  40145c:	lsr	w0, w21, #31
  401460:	ldp	x20, x19, [sp, #176]
  401464:	ldp	x22, x21, [sp, #160]
  401468:	ldp	x24, x23, [sp, #144]
  40146c:	ldp	x29, x30, [sp, #128]
  401470:	add	sp, sp, #0xc0
  401474:	ret
  401478:	adrp	x1, 401000 <main+0x24>
  40147c:	adrp	x2, 401000 <main+0x24>
  401480:	adrp	x4, 401000 <main+0x24>
  401484:	add	x1, x1, #0x65c
  401488:	add	x2, x2, #0x56b
  40148c:	add	x4, x4, #0x620
  401490:	mov	w3, #0x17                  	// #23
  401494:	b	4014b4 <main+0x4d8>
  401498:	adrp	x1, 401000 <main+0x24>
  40149c:	adrp	x2, 401000 <main+0x24>
  4014a0:	adrp	x4, 401000 <main+0x24>
  4014a4:	add	x1, x1, #0x668
  4014a8:	add	x2, x2, #0x56b
  4014ac:	add	x4, x4, #0x620
  4014b0:	mov	w3, #0x18                  	// #24
  4014b4:	mov	w0, wzr
  4014b8:	bl	400ea0 <log_assert_failed_realm@plt>
  4014bc:	udf	#0

00000000004014c0 <__libc_csu_init>:
  4014c0:	stp	x29, x30, [sp, #-64]!
  4014c4:	mov	x29, sp
  4014c8:	stp	x19, x20, [sp, #16]
  4014cc:	adrp	x20, 41f000 <__FRAME_END__+0x1d848>
  4014d0:	add	x20, x20, #0xce0
  4014d4:	stp	x21, x22, [sp, #32]
  4014d8:	adrp	x21, 41f000 <__FRAME_END__+0x1d848>
  4014dc:	add	x21, x21, #0xcd8
  4014e0:	sub	x20, x20, x21
  4014e4:	mov	w22, w0
  4014e8:	stp	x23, x24, [sp, #48]
  4014ec:	mov	x23, x1
  4014f0:	mov	x24, x2
  4014f4:	bl	400ce8 <_init>
  4014f8:	cmp	xzr, x20, asr #3
  4014fc:	b.eq	401528 <__libc_csu_init+0x68>  // b.none
  401500:	asr	x20, x20, #3
  401504:	mov	x19, #0x0                   	// #0
  401508:	ldr	x3, [x21, x19, lsl #3]
  40150c:	mov	x2, x24
  401510:	add	x19, x19, #0x1
  401514:	mov	x1, x23
  401518:	mov	w0, w22
  40151c:	blr	x3
  401520:	cmp	x20, x19
  401524:	b.ne	401508 <__libc_csu_init+0x48>  // b.any
  401528:	ldp	x19, x20, [sp, #16]
  40152c:	ldp	x21, x22, [sp, #32]
  401530:	ldp	x23, x24, [sp, #48]
  401534:	ldp	x29, x30, [sp], #64
  401538:	ret
  40153c:	nop

0000000000401540 <__libc_csu_fini>:
  401540:	ret

Disassembly of section .fini:

0000000000401544 <_fini>:
  401544:	stp	x29, x30, [sp, #-16]!
  401548:	mov	x29, sp
  40154c:	ldp	x29, x30, [sp], #16
  401550:	ret
