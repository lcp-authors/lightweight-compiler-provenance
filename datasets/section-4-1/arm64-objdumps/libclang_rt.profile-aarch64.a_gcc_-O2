In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.profile-aarch64.a_gcc_-O2:

GCDAProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <llvm_writeout_files>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x0, 10 <llvm_writeout_files+0x10>
   8:	mov	x29, sp
   c:	ldr	x0, [x0]
  10:	stp	x19, x20, [sp, #16]
  14:	ldr	x19, [x0]
  18:	cbz	x19, 4c <llvm_writeout_files+0x4c>
  1c:	adrp	x20, 0 <llvm_writeout_files>
  20:	add	x20, x20, #0x0
  24:	b	30 <llvm_writeout_files+0x30>
  28:	ldr	x19, [x19, #16]
  2c:	cbz	x19, 4c <llvm_writeout_files+0x4c>
  30:	ldr	x0, [x19]
  34:	cmp	x0, x20
  38:	b.ne	28 <llvm_writeout_files+0x28>  // b.any
  3c:	ldr	x0, [x19, #8]
  40:	blr	x0
  44:	ldr	x19, [x19, #16]
  48:	cbnz	x19, 30 <llvm_writeout_files+0x30>
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

0000000000000058 <read_le_32bit_value.part.0>:
  58:	adrp	x5, 0 <llvm_writeout_files>
  5c:	add	x2, x5, #0x0
  60:	mov	x1, #0x0                   	// #0
  64:	mov	w0, #0x0                   	// #0
  68:	ldp	x4, x6, [x2, #8]
  6c:	add	x4, x4, x6
  70:	ldrb	w2, [x4, x1]
  74:	lsl	w3, w1, #3
  78:	add	x1, x1, #0x1
  7c:	cmp	x1, #0x4
  80:	lsl	w2, w2, w3
  84:	orr	w0, w0, w2
  88:	b.ne	70 <read_le_32bit_value.part.0+0x18>  // b.any
  8c:	add	x5, x5, #0x0
  90:	add	x6, x6, #0x4
  94:	str	x6, [x5, #16]
  98:	ret
  9c:	nop

00000000000000a0 <fn_list_insert.isra.0>:
  a0:	stp	x29, x30, [sp, #-48]!
  a4:	mov	x29, sp
  a8:	stp	x19, x20, [sp, #16]
  ac:	mov	x20, x0
  b0:	mov	x19, x1
  b4:	mov	x0, #0x18                  	// #24
  b8:	str	x21, [sp, #32]
  bc:	mov	x21, x2
  c0:	bl	0 <malloc>
  c4:	ldr	x2, [x20]
  c8:	adrp	x1, 0 <llvm_writeout_files>
  cc:	add	x1, x1, #0x0
  d0:	stp	x1, x21, [x0]
  d4:	str	xzr, [x0, #16]
  d8:	cbz	x2, f8 <fn_list_insert.isra.0+0x58>
  dc:	ldr	x1, [x19]
  e0:	ldr	x21, [sp, #32]
  e4:	str	x0, [x1, #16]
  e8:	str	x0, [x19]
  ec:	ldp	x19, x20, [sp, #16]
  f0:	ldp	x29, x30, [sp], #48
  f4:	ret
  f8:	str	x0, [x19]
  fc:	str	x0, [x20]
 100:	ldp	x19, x20, [sp, #16]
 104:	ldr	x21, [sp, #32]
 108:	ldp	x29, x30, [sp], #48
 10c:	ret

0000000000000110 <resize_write_buffer.part.0>:
 110:	stp	x29, x30, [sp, #-32]!
 114:	mov	x29, sp
 118:	stp	x19, x20, [sp, #16]
 11c:	adrp	x20, 0 <llvm_writeout_files>
 120:	add	x20, x20, #0x0
 124:	ldp	x1, x2, [x20, #16]
 128:	add	x1, x0, x1
 12c:	cmp	x1, x2
 130:	b.ls	154 <resize_write_buffer.part.0+0x44>  // b.plast
 134:	ldr	x0, [x20, #8]
 138:	sub	x19, x1, #0x1
 13c:	and	x19, x19, #0xfffffffffffe0000
 140:	add	x19, x19, #0x20, lsl #12
 144:	mov	x1, x19
 148:	bl	0 <realloc>
 14c:	str	x0, [x20, #8]
 150:	str	x19, [x20, #24]
 154:	ldp	x19, x20, [sp, #16]
 158:	ldp	x29, x30, [sp], #32
 15c:	ret

0000000000000160 <write_bytes>:
 160:	stp	x29, x30, [sp, #-48]!
 164:	mov	x29, sp
 168:	stp	x19, x20, [sp, #16]
 16c:	adrp	x19, 0 <llvm_writeout_files>
 170:	add	x2, x19, #0x0
 174:	str	x21, [sp, #32]
 178:	mov	x21, x0
 17c:	mov	x20, x1
 180:	ldr	w0, [x2, #32]
 184:	cbz	w0, 190 <write_bytes+0x30>
 188:	mov	x0, x1
 18c:	bl	110 <resize_write_buffer.part.0>
 190:	add	x19, x19, #0x0
 194:	mov	x1, x21
 198:	mov	x2, x20
 19c:	ldp	x0, x21, [x19, #8]
 1a0:	add	x20, x21, x20
 1a4:	add	x0, x0, x21
 1a8:	bl	0 <memcpy>
 1ac:	str	x20, [x19, #16]
 1b0:	ldp	x19, x20, [sp, #16]
 1b4:	ldr	x21, [sp, #32]
 1b8:	ldp	x29, x30, [sp], #48
 1bc:	ret

00000000000001c0 <fn_list_remove.isra.0>:
 1c0:	stp	x29, x30, [sp, #-64]!
 1c4:	mov	x29, sp
 1c8:	stp	x19, x20, [sp, #16]
 1cc:	ldr	x19, [x0]
 1d0:	cbz	x19, 214 <fn_list_remove.isra.0+0x54>
 1d4:	stp	x21, x22, [sp, #32]
 1d8:	adrp	x21, 0 <llvm_writeout_files>
 1dc:	mov	x22, x0
 1e0:	add	x21, x21, #0x0
 1e4:	str	x23, [sp, #48]
 1e8:	mov	x23, x1
 1ec:	mov	x20, #0x0                   	// #0
 1f0:	ldr	x3, [x19]
 1f4:	mov	x2, x19
 1f8:	ldr	x19, [x19, #16]
 1fc:	cmp	x3, x21
 200:	b.eq	220 <fn_list_remove.isra.0+0x60>  // b.none
 204:	mov	x20, x2
 208:	cbnz	x19, 1f0 <fn_list_remove.isra.0+0x30>
 20c:	ldp	x21, x22, [sp, #32]
 210:	ldr	x23, [sp, #48]
 214:	ldp	x19, x20, [sp, #16]
 218:	ldp	x29, x30, [sp], #64
 21c:	ret
 220:	ldr	x1, [x22]
 224:	mov	x0, x2
 228:	cmp	x1, x2
 22c:	b.eq	258 <fn_list_remove.isra.0+0x98>  // b.none
 230:	ldr	x1, [x23]
 234:	cmp	x1, x2
 238:	b.eq	250 <fn_list_remove.isra.0+0x90>  // b.none
 23c:	cbz	x20, 244 <fn_list_remove.isra.0+0x84>
 240:	str	x19, [x20, #16]
 244:	bl	0 <free>
 248:	cbnz	x19, 1f0 <fn_list_remove.isra.0+0x30>
 24c:	b	20c <fn_list_remove.isra.0+0x4c>
 250:	str	x20, [x23]
 254:	b	23c <fn_list_remove.isra.0+0x7c>
 258:	str	x19, [x22]
 25c:	b	230 <fn_list_remove.isra.0+0x70>

0000000000000260 <llvm_delete_writeout_function_list>:
 260:	adrp	x0, 10 <llvm_writeout_files+0x10>
 264:	ldr	x0, [x0]
 268:	add	x1, x0, #0x8
 26c:	b	1c0 <fn_list_remove.isra.0>

0000000000000270 <llvm_delete_flush_function_list>:
 270:	adrp	x0, 10 <llvm_writeout_files+0x10>
 274:	ldr	x0, [x0]
 278:	add	x1, x0, #0x8
 27c:	b	1c0 <fn_list_remove.isra.0>

0000000000000280 <llvm_gcda_start_file>:
 280:	stp	x29, x30, [sp, #-96]!
 284:	mov	x29, sp
 288:	stp	x23, x24, [sp, #48]
 28c:	add	x24, sp, #0x58
 290:	mov	x23, x0
 294:	add	x0, sp, #0x54
 298:	stp	x19, x20, [sp, #16]
 29c:	mov	w20, w2
 2a0:	stp	x21, x22, [sp, #32]
 2a4:	mov	x21, x1
 2a8:	mov	x1, x24
 2ac:	str	x25, [sp, #64]
 2b0:	bl	0 <lprofGetPathPrefix>
 2b4:	cbz	x0, 474 <llvm_gcda_start_file+0x1f4>
 2b8:	mov	x22, x0
 2bc:	mov	x0, x23
 2c0:	bl	0 <strlen>
 2c4:	ldr	x25, [sp, #88]
 2c8:	add	x1, x25, #0x2
 2cc:	add	x0, x1, x0
 2d0:	bl	0 <malloc>
 2d4:	mov	x19, x0
 2d8:	ldr	w4, [sp, #84]
 2dc:	mov	x3, x25
 2e0:	mov	x2, x22
 2e4:	mov	x1, x23
 2e8:	bl	0 <lprofApplyPathPrefix>
 2ec:	adrp	x23, 0 <llvm_writeout_files>
 2f0:	add	x25, x23, #0x0
 2f4:	adrp	x22, 0 <llvm_writeout_files>
 2f8:	mov	x0, x19
 2fc:	mov	w1, #0x2                   	// #2
 300:	str	wzr, [x25, #32]
 304:	str	x19, [x25, #40]
 308:	bl	0 <open>
 30c:	str	w0, [x22]
 310:	adrp	x19, 0 <llvm_writeout_files>
 314:	cmn	w0, #0x1
 318:	add	x19, x19, #0x0
 31c:	b.eq	3ec <llvm_gcda_start_file+0x16c>  // b.none
 320:	bl	0 <lprofLockFd>
 324:	ldr	w0, [x22]
 328:	mov	x1, x19
 32c:	add	x19, x23, #0x0
 330:	bl	0 <fdopen>
 334:	stp	xzr, xzr, [x19, #8]
 338:	ldr	w1, [x19, #32]
 33c:	str	xzr, [x19, #24]
 340:	str	x0, [x19, #48]
 344:	cbnz	w1, 3d0 <llvm_gcda_start_file+0x150>
 348:	mov	x1, #0x0                   	// #0
 34c:	mov	w2, #0x2                   	// #2
 350:	bl	0 <fseek>
 354:	ldr	x0, [x19, #48]
 358:	bl	0 <ftell>
 35c:	str	x0, [x19, #56]
 360:	mov	x1, x0
 364:	cbz	x0, 4b8 <llvm_gcda_start_file+0x238>
 368:	ldr	w4, [x22]
 36c:	mov	x5, #0x0                   	// #0
 370:	mov	w3, #0x1                   	// #1
 374:	mov	w2, #0x3                   	// #3
 378:	mov	x0, #0x0                   	// #0
 37c:	bl	0 <mmap>
 380:	str	x0, [x19, #8]
 384:	cmn	x0, #0x1
 388:	b.eq	484 <llvm_gcda_start_file+0x204>  // b.none
 38c:	mov	x1, #0x4                   	// #4
 390:	adrp	x0, 0 <llvm_writeout_files>
 394:	add	x0, x0, #0x0
 398:	bl	160 <write_bytes>
 39c:	mov	x0, x21
 3a0:	mov	x1, #0x4                   	// #4
 3a4:	bl	160 <write_bytes>
 3a8:	str	w20, [sp, #88]
 3ac:	mov	x0, x24
 3b0:	mov	x1, #0x4                   	// #4
 3b4:	bl	160 <write_bytes>
 3b8:	ldp	x19, x20, [sp, #16]
 3bc:	ldp	x21, x22, [sp, #32]
 3c0:	ldp	x23, x24, [sp, #48]
 3c4:	ldr	x25, [sp, #64]
 3c8:	ldp	x29, x30, [sp], #96
 3cc:	ret
 3d0:	mov	x0, #0x20000               	// #131072
 3d4:	bl	110 <resize_write_buffer.part.0>
 3d8:	ldr	x0, [x19, #8]
 3dc:	mov	x2, #0x20000               	// #131072
 3e0:	mov	w1, #0x0                   	// #0
 3e4:	bl	0 <memset>
 3e8:	b	38c <llvm_gcda_start_file+0x10c>
 3ec:	ldr	x0, [x25, #40]
 3f0:	mov	w3, #0x1                   	// #1
 3f4:	mov	w2, #0x1a4                 	// #420
 3f8:	mov	w1, #0x42                  	// #66
 3fc:	str	w3, [x25, #32]
 400:	adrp	x19, 0 <llvm_writeout_files>
 404:	bl	0 <open>
 408:	str	w0, [x22]
 40c:	add	x19, x19, #0x0
 410:	cmn	w0, #0x1
 414:	b.ne	320 <llvm_gcda_start_file+0xa0>  // b.any
 418:	ldr	x0, [x25, #40]
 41c:	bl	0 <__llvm_profile_recursive_mkdir>
 420:	ldr	x0, [x25, #40]
 424:	mov	w2, #0x1a4                 	// #420
 428:	mov	w1, #0x42                  	// #66
 42c:	bl	0 <open>
 430:	str	w0, [x22]
 434:	cmn	w0, #0x1
 438:	b.ne	320 <llvm_gcda_start_file+0xa0>  // b.any
 43c:	bl	0 <__errno_location>
 440:	ldr	w0, [x0]
 444:	adrp	x1, 0 <stderr>
 448:	ldr	x20, [x25, #40]
 44c:	ldr	x1, [x1]
 450:	ldr	x19, [x1]
 454:	bl	0 <strerror>
 458:	mov	x2, x20
 45c:	mov	x3, x0
 460:	adrp	x1, 0 <llvm_writeout_files>
 464:	mov	x0, x19
 468:	add	x1, x1, #0x0
 46c:	bl	0 <fprintf>
 470:	b	3b8 <llvm_gcda_start_file+0x138>
 474:	mov	x0, x23
 478:	bl	0 <strdup>
 47c:	mov	x19, x0
 480:	b	2ec <llvm_gcda_start_file+0x6c>
 484:	bl	0 <__errno_location>
 488:	ldr	w0, [x0]
 48c:	adrp	x1, 0 <stderr>
 490:	ldr	x22, [x19, #40]
 494:	ldr	x1, [x1]
 498:	ldr	x19, [x1]
 49c:	bl	0 <strerror>
 4a0:	adrp	x1, 0 <llvm_writeout_files>
 4a4:	mov	x3, x0
 4a8:	mov	x2, x22
 4ac:	mov	x0, x19
 4b0:	add	x1, x1, #0x0
 4b4:	bl	0 <fprintf>
 4b8:	add	x23, x23, #0x0
 4bc:	mov	w1, #0x1                   	// #1
 4c0:	mov	x0, #0x20000               	// #131072
 4c4:	str	xzr, [x23, #8]
 4c8:	str	xzr, [x23, #24]
 4cc:	str	w1, [x23, #32]
 4d0:	bl	110 <resize_write_buffer.part.0>
 4d4:	ldr	x0, [x23, #8]
 4d8:	mov	x2, #0x20000               	// #131072
 4dc:	mov	w1, #0x0                   	// #0
 4e0:	bl	0 <memset>
 4e4:	b	38c <llvm_gcda_start_file+0x10c>

00000000000004e8 <llvm_gcda_increment_indirect_counter>:
 4e8:	ldr	w0, [x0]
 4ec:	cmn	w0, #0x1
 4f0:	b.eq	508 <llvm_gcda_increment_indirect_counter+0x20>  // b.none
 4f4:	ldr	x0, [x1, w0, uxtw #3]
 4f8:	cbz	x0, 508 <llvm_gcda_increment_indirect_counter+0x20>
 4fc:	ldr	x1, [x0]
 500:	add	x1, x1, #0x1
 504:	str	x1, [x0]
 508:	ret
 50c:	nop

0000000000000510 <llvm_gcda_emit_function>:
 510:	stp	x29, x30, [sp, #-96]!
 514:	adrp	x5, 0 <llvm_writeout_files>
 518:	mov	x29, sp
 51c:	ldr	x5, [x5]
 520:	stp	x21, x22, [sp, #32]
 524:	ands	w22, w3, #0xff
 528:	cbz	x5, 614 <llvm_gcda_emit_function+0x104>
 52c:	cset	w3, ne  // ne = any
 530:	mov	w21, w2
 534:	stp	x19, x20, [sp, #16]
 538:	mov	x19, x1
 53c:	add	w20, w3, #0x2
 540:	mov	x1, #0x4                   	// #4
 544:	stp	x23, x24, [sp, #48]
 548:	mov	w23, w0
 54c:	mov	w24, w4
 550:	stp	x25, x26, [sp, #64]
 554:	adrp	x25, 0 <llvm_writeout_files>
 558:	add	x0, x25, #0x0
 55c:	bl	160 <write_bytes>
 560:	cbz	x19, 620 <llvm_gcda_emit_function+0x110>
 564:	mov	x0, x19
 568:	bl	0 <strlen>
 56c:	add	w3, w20, #0x2
 570:	lsr	x20, x0, #2
 574:	add	w3, w3, w20
 578:	add	x26, sp, #0x5c
 57c:	mov	x0, x26
 580:	mov	x1, #0x4                   	// #4
 584:	str	w3, [sp, #92]
 588:	bl	160 <write_bytes>
 58c:	str	w23, [sp, #92]
 590:	mov	x0, x26
 594:	mov	x1, #0x4                   	// #4
 598:	bl	160 <write_bytes>
 59c:	str	w21, [sp, #92]
 5a0:	mov	x0, x26
 5a4:	mov	x1, #0x4                   	// #4
 5a8:	bl	160 <write_bytes>
 5ac:	cbnz	w22, 690 <llvm_gcda_emit_function+0x180>
 5b0:	mov	x0, x19
 5b4:	bl	0 <strlen>
 5b8:	mov	x2, x0
 5bc:	mov	x1, #0x4                   	// #4
 5c0:	mov	x0, x26
 5c4:	lsr	x2, x2, #2
 5c8:	add	w2, w2, #0x1
 5cc:	str	w2, [sp, #92]
 5d0:	bl	160 <write_bytes>
 5d4:	mov	x0, x19
 5d8:	bl	0 <strlen>
 5dc:	mov	x1, x0
 5e0:	mov	x0, x19
 5e4:	bl	160 <write_bytes>
 5e8:	mov	x0, x19
 5ec:	bl	0 <strlen>
 5f0:	and	x1, x0, #0x3
 5f4:	mov	x2, #0x4                   	// #4
 5f8:	add	x0, x25, #0x0
 5fc:	add	x0, x0, #0x8
 600:	sub	x1, x2, x1
 604:	bl	160 <write_bytes>
 608:	ldp	x19, x20, [sp, #16]
 60c:	ldp	x23, x24, [sp, #48]
 610:	ldp	x25, x26, [sp, #64]
 614:	ldp	x21, x22, [sp, #32]
 618:	ldp	x29, x30, [sp], #96
 61c:	ret
 620:	add	x19, sp, #0x5c
 624:	mov	x1, #0x4                   	// #4
 628:	mov	x0, x19
 62c:	str	w20, [sp, #92]
 630:	bl	160 <write_bytes>
 634:	str	w23, [sp, #92]
 638:	mov	x0, x19
 63c:	mov	x1, #0x4                   	// #4
 640:	bl	160 <write_bytes>
 644:	str	w21, [sp, #92]
 648:	mov	x0, x19
 64c:	mov	x1, #0x4                   	// #4
 650:	bl	160 <write_bytes>
 654:	cbnz	w22, 670 <llvm_gcda_emit_function+0x160>
 658:	ldp	x19, x20, [sp, #16]
 65c:	ldp	x21, x22, [sp, #32]
 660:	ldp	x23, x24, [sp, #48]
 664:	ldp	x25, x26, [sp, #64]
 668:	ldp	x29, x30, [sp], #96
 66c:	ret
 670:	mov	x0, x19
 674:	mov	x1, #0x4                   	// #4
 678:	str	w24, [sp, #92]
 67c:	bl	160 <write_bytes>
 680:	ldp	x19, x20, [sp, #16]
 684:	ldp	x23, x24, [sp, #48]
 688:	ldp	x25, x26, [sp, #64]
 68c:	b	614 <llvm_gcda_emit_function+0x104>
 690:	mov	x0, x26
 694:	mov	x1, #0x4                   	// #4
 698:	str	w24, [sp, #92]
 69c:	bl	160 <write_bytes>
 6a0:	b	5b0 <llvm_gcda_emit_function+0xa0>
 6a4:	nop

00000000000006a8 <llvm_gcda_emit_arcs>:
 6a8:	stp	x29, x30, [sp, #-96]!
 6ac:	mov	x29, sp
 6b0:	stp	x19, x20, [sp, #16]
 6b4:	adrp	x20, 0 <llvm_writeout_files>
 6b8:	add	x19, x20, #0x0
 6bc:	stp	x23, x24, [sp, #48]
 6c0:	mov	w23, w0
 6c4:	ldr	x0, [x19, #48]
 6c8:	cbz	x0, 830 <llvm_gcda_emit_arcs+0x188>
 6cc:	ldr	w0, [x19, #32]
 6d0:	stp	x21, x22, [sp, #32]
 6d4:	mov	x21, x1
 6d8:	stp	x25, x26, [sp, #64]
 6dc:	ldr	x25, [x19, #16]
 6e0:	cbnz	w0, 840 <llvm_gcda_emit_arcs+0x198>
 6e4:	bl	58 <read_le_32bit_value.part.0>
 6e8:	cmn	w0, #0x1
 6ec:	b.eq	840 <llvm_gcda_emit_arcs+0x198>  // b.none
 6f0:	mov	w1, #0x1a10000             	// #27328512
 6f4:	cmp	w0, w1
 6f8:	b.ne	808 <llvm_gcda_emit_arcs+0x160>  // b.any
 6fc:	ldp	x0, x2, [x19, #8]
 700:	ldr	w3, [x0, x2]
 704:	add	x1, x2, #0x4
 708:	str	x1, [x19, #16]
 70c:	add	x22, x0, x2
 710:	cmn	w3, #0x1
 714:	b.eq	880 <llvm_gcda_emit_arcs+0x1d8>  // b.none
 718:	cmp	w23, w3, lsr #1
 71c:	b.ne	880 <llvm_gcda_emit_arcs+0x1d8>  // b.any
 720:	ubfiz	x0, x23, #3, #32
 724:	lsl	w26, w23, #1
 728:	bl	0 <malloc>
 72c:	mov	x24, x0
 730:	cbz	w23, 8b8 <llvm_gcda_emit_arcs+0x210>
 734:	sub	w4, w23, #0x1
 738:	add	x5, x22, #0x8
 73c:	add	x4, x4, #0x1
 740:	add	x2, x22, #0x4
 744:	mov	x0, #0x0                   	// #0
 748:	lsl	x4, x4, #3
 74c:	nop
 750:	ldr	w1, [x5, x0]
 754:	ldr	w3, [x2, x0]
 758:	orr	x1, x3, x1, lsl #32
 75c:	str	x1, [x24, x0]
 760:	add	x0, x0, #0x8
 764:	cmp	x4, x0
 768:	b.ne	750 <llvm_gcda_emit_arcs+0xa8>  // b.any
 76c:	add	x20, x20, #0x0
 770:	adrp	x0, 0 <llvm_writeout_files>
 774:	add	x0, x0, #0x0
 778:	mov	x1, #0x4                   	// #4
 77c:	add	x0, x0, #0x10
 780:	add	x22, sp, #0x5c
 784:	str	x25, [x20, #16]
 788:	bl	160 <write_bytes>
 78c:	mov	x0, x22
 790:	mov	x1, #0x4                   	// #4
 794:	str	w26, [sp, #92]
 798:	bl	160 <write_bytes>
 79c:	nop
 7a0:	mov	x20, #0x0                   	// #0
 7a4:	nop
 7a8:	mov	x0, x22
 7ac:	mov	x1, #0x4                   	// #4
 7b0:	ldr	x19, [x21, x20, lsl #3]
 7b4:	cbz	x24, 7c0 <llvm_gcda_emit_arcs+0x118>
 7b8:	ldr	x2, [x24, x20, lsl #3]
 7bc:	add	x19, x19, x2
 7c0:	str	x19, [x21, x20, lsl #3]
 7c4:	add	x20, x20, #0x1
 7c8:	str	w19, [sp, #92]
 7cc:	lsr	x19, x19, #32
 7d0:	bl	160 <write_bytes>
 7d4:	str	w19, [sp, #92]
 7d8:	mov	x0, x22
 7dc:	mov	x1, #0x4                   	// #4
 7e0:	bl	160 <write_bytes>
 7e4:	cmp	w23, w20
 7e8:	b.hi	7a8 <llvm_gcda_emit_arcs+0x100>  // b.pmore
 7ec:	mov	x0, x24
 7f0:	ldp	x19, x20, [sp, #16]
 7f4:	ldp	x21, x22, [sp, #32]
 7f8:	ldp	x23, x24, [sp, #48]
 7fc:	ldp	x25, x26, [sp, #64]
 800:	ldp	x29, x30, [sp], #96
 804:	b	0 <free>
 808:	adrp	x4, 0 <stderr>
 80c:	mov	w3, w0
 810:	ldr	x2, [x19, #40]
 814:	adrp	x1, 0 <llvm_writeout_files>
 818:	ldr	x0, [x4]
 81c:	add	x1, x1, #0x0
 820:	ldr	x0, [x0]
 824:	bl	0 <fprintf>
 828:	ldp	x21, x22, [sp, #32]
 82c:	ldp	x25, x26, [sp, #64]
 830:	ldp	x19, x20, [sp, #16]
 834:	ldp	x23, x24, [sp, #48]
 838:	ldp	x29, x30, [sp], #96
 83c:	ret
 840:	add	x20, x20, #0x0
 844:	adrp	x0, 0 <llvm_writeout_files>
 848:	add	x0, x0, #0x0
 84c:	mov	x1, #0x4                   	// #4
 850:	add	x0, x0, #0x10
 854:	add	x22, sp, #0x5c
 858:	str	x25, [x20, #16]
 85c:	bl	160 <write_bytes>
 860:	lsl	w2, w23, #1
 864:	mov	x0, x22
 868:	mov	x24, #0x0                   	// #0
 86c:	mov	x1, #0x4                   	// #4
 870:	str	w2, [sp, #92]
 874:	bl	160 <write_bytes>
 878:	cbnz	w23, 7a0 <llvm_gcda_emit_arcs+0xf8>
 87c:	b	7ec <llvm_gcda_emit_arcs+0x144>
 880:	adrp	x0, 0 <stderr>
 884:	add	x20, x20, #0x0
 888:	adrp	x1, 0 <llvm_writeout_files>
 88c:	add	x1, x1, #0x0
 890:	ldr	x0, [x0]
 894:	ldr	x2, [x20, #40]
 898:	ldr	x0, [x0]
 89c:	bl	0 <fprintf>
 8a0:	ldp	x19, x20, [sp, #16]
 8a4:	ldp	x21, x22, [sp, #32]
 8a8:	ldp	x23, x24, [sp, #48]
 8ac:	ldp	x25, x26, [sp, #64]
 8b0:	ldp	x29, x30, [sp], #96
 8b4:	ret
 8b8:	adrp	x0, 0 <llvm_writeout_files>
 8bc:	add	x0, x0, #0x0
 8c0:	add	x0, x0, #0x10
 8c4:	mov	x1, #0x4                   	// #4
 8c8:	str	x25, [x19, #16]
 8cc:	bl	160 <write_bytes>
 8d0:	add	x0, sp, #0x5c
 8d4:	mov	x1, #0x4                   	// #4
 8d8:	str	wzr, [sp, #92]
 8dc:	bl	160 <write_bytes>
 8e0:	b	7ec <llvm_gcda_emit_arcs+0x144>
 8e4:	nop

00000000000008e8 <llvm_gcda_summary_info>:
 8e8:	stp	x29, x30, [sp, #-80]!
 8ec:	mov	x29, sp
 8f0:	stp	x21, x22, [sp, #32]
 8f4:	adrp	x21, 0 <llvm_writeout_files>
 8f8:	add	x7, x21, #0x0
 8fc:	ldr	x0, [x7, #48]
 900:	cbz	x0, 964 <llvm_gcda_summary_info+0x7c>
 904:	ldr	w0, [x7, #32]
 908:	ldr	x8, [x7, #16]
 90c:	str	x23, [sp, #48]
 910:	cbnz	w0, 970 <llvm_gcda_summary_info+0x88>
 914:	bl	58 <read_le_32bit_value.part.0>
 918:	cmn	w0, #0x1
 91c:	b.eq	970 <llvm_gcda_summary_info+0x88>  // b.none
 920:	mov	w1, #0xa1000000            	// #-1593835520
 924:	cmp	w0, w1
 928:	b.ne	a54 <llvm_gcda_summary_info+0x16c>  // b.any
 92c:	ldp	x0, x1, [x7, #8]
 930:	ldr	w3, [x0, x1]
 934:	add	x2, x1, #0x4
 938:	str	x2, [x7, #16]
 93c:	cmp	w3, #0x9
 940:	b.eq	a38 <llvm_gcda_summary_info+0x150>  // b.none
 944:	adrp	x0, 0 <stderr>
 948:	adrp	x1, 0 <llvm_writeout_files>
 94c:	ldr	x2, [x7, #40]
 950:	add	x1, x1, #0x0
 954:	ldr	x0, [x0]
 958:	ldr	x0, [x0]
 95c:	bl	0 <fprintf>
 960:	ldr	x23, [sp, #48]
 964:	ldp	x21, x22, [sp, #32]
 968:	ldp	x29, x30, [sp], #80
 96c:	ret
 970:	mov	w23, #0x1                   	// #1
 974:	stp	x19, x20, [sp, #16]
 978:	add	x2, x21, #0x0
 97c:	adrp	x22, 0 <llvm_writeout_files>
 980:	add	x0, x22, #0x0
 984:	add	x0, x0, #0x18
 988:	mov	x1, #0x4                   	// #4
 98c:	str	x8, [x2, #16]
 990:	bl	160 <write_bytes>
 994:	mov	w2, #0x9                   	// #9
 998:	add	x20, sp, #0x4c
 99c:	mov	x0, x20
 9a0:	mov	x1, #0x4                   	// #4
 9a4:	str	w2, [sp, #76]
 9a8:	bl	160 <write_bytes>
 9ac:	mov	x0, x20
 9b0:	mov	x1, #0x4                   	// #4
 9b4:	str	wzr, [sp, #76]
 9b8:	bl	160 <write_bytes>
 9bc:	mov	x0, x20
 9c0:	mov	x1, #0x4                   	// #4
 9c4:	str	wzr, [sp, #76]
 9c8:	bl	160 <write_bytes>
 9cc:	mov	x0, x20
 9d0:	mov	w19, #0x6                   	// #6
 9d4:	mov	x1, #0x4                   	// #4
 9d8:	str	w23, [sp, #76]
 9dc:	bl	160 <write_bytes>
 9e0:	mov	x0, x20
 9e4:	mov	x1, #0x4                   	// #4
 9e8:	str	wzr, [sp, #76]
 9ec:	bl	160 <write_bytes>
 9f0:	subs	w19, w19, #0x1
 9f4:	b.ne	9e0 <llvm_gcda_summary_info+0xf8>  // b.any
 9f8:	add	x0, x22, #0x0
 9fc:	add	x21, x21, #0x0
 a00:	add	x0, x0, #0x20
 a04:	mov	x1, #0x4                   	// #4
 a08:	bl	160 <write_bytes>
 a0c:	str	wzr, [sp, #76]
 a10:	mov	x0, x20
 a14:	mov	x1, #0x4                   	// #4
 a18:	bl	160 <write_bytes>
 a1c:	mov	w0, #0x1                   	// #1
 a20:	str	w0, [x21, #64]
 a24:	ldp	x19, x20, [sp, #16]
 a28:	ldp	x21, x22, [sp, #32]
 a2c:	ldr	x23, [sp, #48]
 a30:	ldp	x29, x30, [sp], #80
 a34:	ret
 a38:	add	x0, x0, x1
 a3c:	ldr	w1, [x7, #64]
 a40:	stp	x19, x20, [sp, #16]
 a44:	cmp	w1, #0x0
 a48:	ldr	w23, [x0, #12]
 a4c:	cinc	w23, w23, eq  // eq = none
 a50:	b	978 <llvm_gcda_summary_info+0x90>
 a54:	adrp	x4, 0 <stderr>
 a58:	mov	w3, w0
 a5c:	ldr	x2, [x7, #40]
 a60:	adrp	x1, 0 <llvm_writeout_files>
 a64:	ldr	x0, [x4]
 a68:	add	x1, x1, #0x0
 a6c:	ldr	x0, [x0]
 a70:	bl	0 <fprintf>
 a74:	ldp	x21, x22, [sp, #32]
 a78:	ldr	x23, [sp, #48]
 a7c:	ldp	x29, x30, [sp], #80
 a80:	ret
 a84:	nop

0000000000000a88 <llvm_gcda_end_file>:
 a88:	stp	x29, x30, [sp, #-48]!
 a8c:	mov	x29, sp
 a90:	stp	x19, x20, [sp, #16]
 a94:	adrp	x19, 0 <llvm_writeout_files>
 a98:	add	x20, x19, #0x0
 a9c:	str	x21, [sp, #32]
 aa0:	ldr	x21, [x20, #48]
 aa4:	cbz	x21, b1c <llvm_gcda_end_file+0x94>
 aa8:	adrp	x0, 0 <llvm_writeout_files>
 aac:	add	x0, x0, #0x0
 ab0:	add	x0, x0, #0x28
 ab4:	mov	x1, #0x8                   	// #8
 ab8:	bl	160 <write_bytes>
 abc:	ldr	w0, [x20, #32]
 ac0:	cbnz	w0, b34 <llvm_gcda_end_file+0xac>
 ac4:	ldr	x0, [x20, #8]
 ac8:	mov	w2, #0x4                   	// #4
 acc:	ldr	x1, [x20, #56]
 ad0:	bl	0 <msync>
 ad4:	cmn	w0, #0x1
 ad8:	b.eq	b50 <llvm_gcda_end_file+0xc8>  // b.none
 adc:	add	x20, x19, #0x0
 ae0:	ldr	x0, [x20, #8]
 ae4:	ldr	x1, [x20, #56]
 ae8:	bl	0 <munmap>
 aec:	str	xzr, [x20, #8]
 af0:	str	xzr, [x20, #56]
 af4:	add	x20, x19, #0x0
 af8:	ldr	x0, [x20, #48]
 afc:	bl	0 <fflush>
 b00:	adrp	x0, 0 <llvm_writeout_files>
 b04:	ldr	w0, [x0]
 b08:	bl	0 <lprofUnlockFd>
 b0c:	ldr	x0, [x20, #48]
 b10:	bl	0 <fclose>
 b14:	str	xzr, [x20, #8]
 b18:	str	xzr, [x20, #48]
 b1c:	add	x19, x19, #0x0
 b20:	ldr	x21, [sp, #32]
 b24:	ldr	x0, [x19, #40]
 b28:	ldp	x19, x20, [sp, #16]
 b2c:	ldp	x29, x30, [sp], #48
 b30:	b	0 <free>
 b34:	ldp	x0, x1, [x20, #8]
 b38:	mov	x3, x21
 b3c:	mov	x2, #0x1                   	// #1
 b40:	bl	0 <fwrite>
 b44:	ldr	x0, [x20, #8]
 b48:	bl	0 <free>
 b4c:	b	af4 <llvm_gcda_end_file+0x6c>
 b50:	bl	0 <__errno_location>
 b54:	ldr	w0, [x0]
 b58:	adrp	x1, 0 <stderr>
 b5c:	ldr	x21, [x20, #40]
 b60:	ldr	x1, [x1]
 b64:	ldr	x20, [x1]
 b68:	bl	0 <strerror>
 b6c:	mov	x2, x21
 b70:	mov	x3, x0
 b74:	adrp	x1, 0 <llvm_writeout_files>
 b78:	mov	x0, x20
 b7c:	add	x1, x1, #0x0
 b80:	bl	0 <fprintf>
 b84:	b	adc <llvm_gcda_end_file+0x54>

0000000000000b88 <llvm_register_writeout_function>:
 b88:	adrp	x1, 10 <llvm_writeout_files+0x10>
 b8c:	mov	x2, x0
 b90:	ldr	x0, [x1]
 b94:	add	x1, x0, #0x8
 b98:	b	a0 <fn_list_insert.isra.0>
 b9c:	nop

0000000000000ba0 <llvm_register_flush_function>:
 ba0:	adrp	x1, 10 <llvm_writeout_files+0x10>
 ba4:	mov	x2, x0
 ba8:	ldr	x0, [x1]
 bac:	add	x1, x0, #0x8
 bb0:	b	a0 <fn_list_insert.isra.0>
 bb4:	nop

0000000000000bb8 <__gcov_flush>:
 bb8:	stp	x29, x30, [sp, #-32]!
 bbc:	adrp	x0, 10 <llvm_writeout_files+0x10>
 bc0:	mov	x29, sp
 bc4:	ldr	x0, [x0]
 bc8:	str	x19, [sp, #16]
 bcc:	ldr	x19, [x0]
 bd0:	cbz	x19, be8 <__gcov_flush+0x30>
 bd4:	nop
 bd8:	ldr	x0, [x19, #8]
 bdc:	blr	x0
 be0:	ldr	x19, [x19, #16]
 be4:	cbnz	x19, bd8 <__gcov_flush+0x20>
 be8:	ldr	x19, [sp, #16]
 bec:	ldp	x29, x30, [sp], #32
 bf0:	ret
 bf4:	nop

0000000000000bf8 <llvm_gcov_init>:
 bf8:	stp	x29, x30, [sp, #-32]!
 bfc:	mov	x29, sp
 c00:	str	x19, [sp, #16]
 c04:	mov	x19, x1
 c08:	cbz	x0, c20 <llvm_gcov_init+0x28>
 c0c:	mov	x2, x0
 c10:	adrp	x0, 10 <llvm_writeout_files+0x10>
 c14:	ldr	x0, [x0]
 c18:	add	x1, x0, #0x8
 c1c:	bl	a0 <fn_list_insert.isra.0>
 c20:	cbz	x19, c38 <llvm_gcov_init+0x40>
 c24:	adrp	x0, 10 <llvm_writeout_files+0x10>
 c28:	mov	x2, x19
 c2c:	ldr	x0, [x0]
 c30:	add	x1, x0, #0x8
 c34:	bl	a0 <fn_list_insert.isra.0>
 c38:	adrp	x1, 0 <llvm_writeout_files>
 c3c:	add	x1, x1, #0x0
 c40:	ldr	w0, [x1, #68]
 c44:	cbz	w0, c54 <llvm_gcov_init+0x5c>
 c48:	ldr	x19, [sp, #16]
 c4c:	ldp	x29, x30, [sp], #32
 c50:	ret
 c54:	mov	w2, #0x1                   	// #1
 c58:	adrp	x0, 270 <llvm_delete_flush_function_list>
 c5c:	add	x0, x0, #0x0
 c60:	str	w2, [x1, #68]
 c64:	bl	0 <atexit>
 c68:	adrp	x0, 260 <llvm_delete_writeout_function_list>
 c6c:	add	x0, x0, #0x0
 c70:	bl	0 <atexit>
 c74:	ldr	x19, [sp, #16]
 c78:	adrp	x0, 0 <llvm_writeout_files>
 c7c:	ldp	x29, x30, [sp], #32
 c80:	add	x0, x0, #0x0
 c84:	b	0 <atexit>

InstrProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_get_magic>:
   0:	mov	x0, #0x7281                	// #29313
   4:	movk	x0, #0x6f66, lsl #16
   8:	movk	x0, #0x7072, lsl #32
   c:	movk	x0, #0xff6c, lsl #48
  10:	ret
  14:	nop

0000000000000018 <lprofProfileDumped>:
  18:	adrp	x0, 0 <__llvm_profile_get_magic>
  1c:	ldr	w0, [x0]
  20:	ret
  24:	nop

0000000000000028 <lprofSetProfileDumped>:
  28:	adrp	x0, 0 <__llvm_profile_get_magic>
  2c:	mov	w1, #0x1                   	// #1
  30:	str	w1, [x0]
  34:	ret

0000000000000038 <__llvm_profile_set_dumped>:
  38:	adrp	x0, 0 <__llvm_profile_get_magic>
  3c:	mov	w1, #0x1                   	// #1
  40:	str	w1, [x0]
  44:	ret

0000000000000048 <__llvm_profile_get_num_padding_bytes>:
  48:	neg	w0, w0
  4c:	and	w0, w0, #0x7
  50:	ret
  54:	nop

0000000000000058 <__llvm_profile_get_version>:
  58:	adrp	x0, 0 <__llvm_profile_get_magic>
  5c:	ldr	x0, [x0]
  60:	ldr	x0, [x0]
  64:	ret

0000000000000068 <__llvm_profile_reset_counters>:
  68:	stp	x29, x30, [sp, #-32]!
  6c:	mov	x29, sp
  70:	str	x19, [sp, #16]
  74:	bl	0 <__llvm_profile_begin_counters>
  78:	mov	x19, x0
  7c:	bl	0 <__llvm_profile_end_counters>
  80:	sub	x2, x0, x19
  84:	mov	w1, #0x0                   	// #0
  88:	mov	x0, x19
  8c:	bl	0 <memset>
  90:	bl	0 <__llvm_profile_begin_data>
  94:	mov	x19, x0
  98:	bl	0 <__llvm_profile_end_data>
  9c:	cmp	x19, x0
  a0:	b.cs	f8 <__llvm_profile_reset_counters+0x90>  // b.hs, b.nlast
  a4:	mov	x4, x0
  a8:	ldr	x3, [x19, #32]
  ac:	cbz	x3, ec <__llvm_profile_reset_counters+0x84>
  b0:	ldrh	w2, [x19, #44]
  b4:	ldrh	w0, [x19, #46]
  b8:	adds	x2, x2, x0
  bc:	b.eq	ec <__llvm_profile_reset_counters+0x84>  // b.none
  c0:	mov	w1, #0x0                   	// #0
  c4:	mov	x0, #0x0                   	// #0
  c8:	ldr	x0, [x3, x0, lsl #3]
  cc:	cbz	x0, dc <__llvm_profile_reset_counters+0x74>
  d0:	str	xzr, [x0, #8]
  d4:	ldr	x0, [x0, #16]
  d8:	cbnz	x0, d0 <__llvm_profile_reset_counters+0x68>
  dc:	add	w0, w1, #0x1
  e0:	mov	x1, x0
  e4:	cmp	x2, w0, uxtw
  e8:	b.hi	c8 <__llvm_profile_reset_counters+0x60>  // b.pmore
  ec:	add	x19, x19, #0x30
  f0:	cmp	x4, x19
  f4:	b.hi	a8 <__llvm_profile_reset_counters+0x40>  // b.pmore
  f8:	adrp	x0, 0 <__llvm_profile_get_magic>
  fc:	ldr	x19, [sp, #16]
 100:	str	wzr, [x0]
 104:	ldp	x29, x30, [sp], #32
 108:	ret

InstrProfilingValue.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <getValueProfRecordHeaderSize>:
   0:	add	w0, w0, #0xf
   4:	and	w0, w0, #0xfffffff8
   8:	ret
   c:	nop

0000000000000010 <getFirstValueProfRecord>:
  10:	add	x0, x0, #0x8
  14:	ret

0000000000000018 <getNumValueSitesRT>:
  18:	ldr	x0, [x0]
  1c:	add	x1, x0, w1, uxtw #1
  20:	ldrh	w0, [x1, #44]
  24:	ret

0000000000000028 <getNumValueDataRT>:
  28:	ldr	x2, [x0, #24]
  2c:	mov	w1, w1
  30:	ldr	x3, [x2, x1, lsl #3]
  34:	cbz	x3, 68 <getNumValueDataRT+0x40>
  38:	ldr	x0, [x0]
  3c:	add	x1, x0, x1, lsl #1
  40:	ldrh	w4, [x1, #44]
  44:	cbz	w4, 68 <getNumValueDataRT+0x40>
  48:	mov	x1, #0x0                   	// #0
  4c:	mov	w0, #0x0                   	// #0
  50:	ldrb	w2, [x3, x1]
  54:	add	x1, x1, #0x1
  58:	cmp	w4, w1
  5c:	add	w0, w0, w2
  60:	b.hi	50 <getNumValueDataRT+0x28>  // b.pmore
  64:	ret
  68:	mov	w0, #0x0                   	// #0
  6c:	ret

0000000000000070 <getNumValueDataForSiteRT>:
  70:	ldr	x0, [x0, #24]
  74:	ldr	x0, [x0, w1, uxtw #3]
  78:	ldrb	w0, [x0, w2, uxtw]
  7c:	ret

0000000000000080 <initializeValueProfRuntimeRecord>:
  80:	adrp	x3, 0 <getValueProfRecordHeaderSize>
  84:	add	x2, x3, #0x0
  88:	mov	x5, x2
  8c:	mov	x8, x2
  90:	add	x12, x0, #0x2c
  94:	str	x0, [x3]
  98:	mov	x6, #0x0                   	// #0
  9c:	mov	w11, #0x0                   	// #0
  a0:	mov	w10, #0xff                  	// #255
  a4:	str	x1, [x2, #24]
  a8:	ldr	x7, [x0, #32]
  ac:	mov	w0, #0x0                   	// #0
  b0:	ldrh	w4, [x12, x6]
  b4:	cbnz	w4, cc <initializeValueProfRuntimeRecord+0x4c>
  b8:	add	x6, x6, #0x2
  bc:	add	x5, x5, #0x8
  c0:	cmp	x6, #0x4
  c4:	b.ne	b0 <initializeValueProfRuntimeRecord+0x30>  // b.any
  c8:	ret
  cc:	cmp	x7, #0x0
  d0:	add	x1, x7, w11, uxtw #3
  d4:	add	w0, w0, #0x1
  d8:	lsl	x9, x6, #2
  dc:	csel	x1, x1, xzr, ne  // ne = any
  e0:	mov	x3, #0x0                   	// #0
  e4:	str	x1, [x5, #8]
  e8:	mov	w2, #0x0                   	// #0
  ec:	cbz	x7, 118 <initializeValueProfRuntimeRecord+0x98>
  f0:	ldr	x1, [x5, #8]
  f4:	ldr	x1, [x1, x3, lsl #3]
  f8:	cbz	x1, 118 <initializeValueProfRuntimeRecord+0x98>
  fc:	nop
 100:	ldr	x1, [x1, #16]
 104:	add	w2, w2, #0x1
 108:	cbnz	x1, 100 <initializeValueProfRuntimeRecord+0x80>
 10c:	cmp	w2, #0xff
 110:	csel	w2, w2, w10, ls  // ls = plast
 114:	and	w2, w2, #0xff
 118:	ldr	x1, [x8, #24]
 11c:	ldr	x1, [x1, x9]
 120:	strb	w2, [x1, x3]
 124:	add	x3, x3, #0x1
 128:	cmp	w4, w3
 12c:	b.hi	e8 <initializeValueProfRuntimeRecord+0x68>  // b.pmore
 130:	add	w11, w11, w4
 134:	b	b8 <initializeValueProfRuntimeRecord+0x38>

0000000000000138 <getNextNValueData>:
 138:	mov	w5, w0
 13c:	mov	x0, x3
 140:	cbz	x3, 178 <getNextNValueData+0x40>
 144:	cbz	w4, 174 <getNextNValueData+0x3c>
 148:	sub	w4, w4, #0x1
 14c:	add	x3, x2, #0x10
 150:	add	x3, x3, w4, uxtw #4
 154:	nop
 158:	ldr	x1, [x0]
 15c:	str	x1, [x2]
 160:	add	x2, x2, #0x10
 164:	ldp	x1, x0, [x0, #8]
 168:	stur	x1, [x2, #-8]
 16c:	cmp	x2, x3
 170:	b.ne	158 <getNextNValueData+0x20>  // b.any
 174:	ret
 178:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 17c:	add	x0, x0, #0x0
 180:	add	x0, x0, w5, uxtw #3
 184:	ldr	x0, [x0, #8]
 188:	ldr	x0, [x0, w1, uxtw #3]
 18c:	b	144 <getNextNValueData+0xc>

0000000000000190 <getNumValueDataForSiteWrapper>:
 190:	adrp	x2, 0 <getValueProfRecordHeaderSize>
 194:	ldr	x2, [x2]
 198:	ldr	x0, [x2, w0, uxtw #3]
 19c:	ldrb	w0, [x0, w1, uxtw]
 1a0:	ret
 1a4:	nop

00000000000001a8 <allocateValueProfileCounters>:
 1a8:	stp	x29, x30, [sp, #-32]!
 1ac:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 1b0:	adrp	x2, 0 <getValueProfRecordHeaderSize>
 1b4:	mov	x29, sp
 1b8:	ldr	w1, [x1]
 1bc:	str	wzr, [x2]
 1c0:	str	x19, [sp, #16]
 1c4:	mov	x19, x0
 1c8:	cbnz	w1, 1d8 <allocateValueProfileCounters+0x30>
 1cc:	add	x3, x2, #0x0
 1d0:	mov	w0, #0xff                  	// #255
 1d4:	str	w0, [x3, #4]
 1d8:	ldrh	w2, [x19, #44]
 1dc:	mov	x1, #0x8                   	// #8
 1e0:	ldrh	w0, [x19, #46]
 1e4:	add	x0, x2, x0
 1e8:	bl	0 <calloc>
 1ec:	mov	x1, x0
 1f0:	cbz	x0, 228 <allocateValueProfileCounters+0x80>
 1f4:	add	x19, x19, #0x20
 1f8:	ldxr	x2, [x19]
 1fc:	cbnz	x2, 208 <allocateValueProfileCounters+0x60>
 200:	stlxr	w3, x1, [x19]
 204:	cbnz	w3, 1f8 <allocateValueProfileCounters+0x50>
 208:	dmb	ish
 20c:	cmp	x2, #0x0
 210:	mov	w1, #0x1                   	// #1
 214:	b.ne	230 <allocateValueProfileCounters+0x88>  // b.any
 218:	mov	w0, w1
 21c:	ldr	x19, [sp, #16]
 220:	ldp	x29, x30, [sp], #32
 224:	ret
 228:	mov	w1, #0x0                   	// #0
 22c:	b	218 <allocateValueProfileCounters+0x70>
 230:	bl	0 <free>
 234:	mov	w1, #0x0                   	// #0
 238:	b	218 <allocateValueProfileCounters+0x70>
 23c:	nop

0000000000000240 <allocateOneNode>:
 240:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 244:	ldr	w0, [x0]
 248:	cbz	w0, 2b8 <allocateOneNode+0x78>
 24c:	adrp	x0, 0 <CurrentVNode>
 250:	adrp	x2, 0 <EndVNode>
 254:	add	x1, x0, #0x0
 258:	ldr	x0, [x0]
 25c:	ldr	x3, [x2]
 260:	add	x0, x0, #0x18
 264:	cmp	x3, x0
 268:	b.cc	294 <allocateOneNode+0x54>  // b.lo, b.ul, b.last
 26c:	ldxr	x0, [x1]
 270:	add	x3, x0, #0x18
 274:	stlxr	w4, x3, [x1]
 278:	cbnz	w4, 26c <allocateOneNode+0x2c>
 27c:	dmb	ish
 280:	ldr	x2, [x2]
 284:	add	x1, x0, #0x18
 288:	cmp	x2, x1
 28c:	b.cc	2b0 <allocateOneNode+0x70>  // b.lo, b.ul, b.last
 290:	ret
 294:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 298:	add	x0, x0, #0x0
 29c:	ldr	w1, [x0, #36]
 2a0:	add	w2, w1, #0x1
 2a4:	str	w2, [x0, #36]
 2a8:	cmp	w1, #0x9
 2ac:	b.le	2c4 <allocateOneNode+0x84>
 2b0:	mov	x0, #0x0                   	// #0
 2b4:	ret
 2b8:	mov	x1, #0x18                  	// #24
 2bc:	mov	x0, #0x1                   	// #1
 2c0:	b	0 <calloc>
 2c4:	stp	x29, x30, [sp, #-16]!
 2c8:	adrp	x0, 0 <stderr>
 2cc:	adrp	x2, 0 <getValueProfRecordHeaderSize>
 2d0:	mov	x29, sp
 2d4:	ldr	x0, [x0]
 2d8:	add	x2, x2, #0x0
 2dc:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 2e0:	add	x1, x1, #0x0
 2e4:	ldr	x0, [x0]
 2e8:	bl	0 <fprintf>
 2ec:	mov	x0, #0x0                   	// #0
 2f0:	ldp	x29, x30, [sp], #16
 2f4:	ret

00000000000002f8 <getValueProfRecordSize>:
 2f8:	add	w0, w0, #0xf
 2fc:	and	w0, w0, #0xfffffff8
 300:	add	w0, w0, w1, lsl #4
 304:	ret

0000000000000308 <getValueProfRecordValueData>:
 308:	ldr	w1, [x0, #4]
 30c:	add	w1, w1, #0xf
 310:	and	x1, x1, #0xfffffff8
 314:	add	x0, x0, x1
 318:	ret
 31c:	nop

0000000000000320 <getValueProfRecordNumValueData>:
 320:	mov	x1, x0
 324:	ldr	w0, [x0, #4]
 328:	cbz	w0, 350 <getValueProfRecordNumValueData+0x30>
 32c:	sub	w0, w0, #0x1
 330:	add	x3, x1, #0x9
 334:	add	x1, x1, #0x8
 338:	add	x3, x3, x0
 33c:	mov	w0, #0x0                   	// #0
 340:	ldrb	w2, [x1], #1
 344:	add	w0, w0, w2
 348:	cmp	x1, x3
 34c:	b.ne	340 <getValueProfRecordNumValueData+0x20>  // b.any
 350:	ret
 354:	nop

0000000000000358 <getValueProfRecordNext>:
 358:	ldr	w5, [x0, #4]
 35c:	cbz	w5, 39c <getValueProfRecordNext+0x44>
 360:	sub	w1, w5, #0x1
 364:	add	x4, x0, #0x9
 368:	add	x4, x4, x1
 36c:	add	x1, x0, #0x8
 370:	mov	w2, #0x0                   	// #0
 374:	nop
 378:	ldrb	w3, [x1], #1
 37c:	add	w2, w2, w3
 380:	cmp	x4, x1
 384:	b.ne	378 <getValueProfRecordNext+0x20>  // b.any
 388:	add	w5, w5, #0xf
 38c:	and	w5, w5, #0xfffffff8
 390:	add	w2, w5, w2, lsl #4
 394:	add	x0, x0, x2
 398:	ret
 39c:	mov	x2, #0x8                   	// #8
 3a0:	add	x0, x0, x2
 3a4:	ret

00000000000003a8 <getValueProfDataSize>:
 3a8:	stp	x29, x30, [sp, #-64]!
 3ac:	mov	x29, sp
 3b0:	stp	x21, x22, [sp, #32]
 3b4:	mov	x21, x0
 3b8:	stp	x19, x20, [sp, #16]
 3bc:	mov	w20, #0x0                   	// #0
 3c0:	ldr	x22, [x0]
 3c4:	str	x23, [sp, #48]
 3c8:	mov	w23, #0x8                   	// #8
 3cc:	ldr	x2, [x21, #16]
 3d0:	mov	w1, w20
 3d4:	mov	x0, x22
 3d8:	blr	x2
 3dc:	mov	w19, w0
 3e0:	mov	w1, w20
 3e4:	mov	x0, x22
 3e8:	cbz	w19, 404 <getValueProfDataSize+0x5c>
 3ec:	ldr	x2, [x21, #24]
 3f0:	add	w19, w19, #0xf
 3f4:	and	w19, w19, #0xfffffff8
 3f8:	add	w19, w19, w23
 3fc:	blr	x2
 400:	add	w23, w19, w0, lsl #4
 404:	cbz	w20, 420 <getValueProfDataSize+0x78>
 408:	mov	w0, w23
 40c:	ldp	x19, x20, [sp, #16]
 410:	ldp	x21, x22, [sp, #32]
 414:	ldr	x23, [sp, #48]
 418:	ldp	x29, x30, [sp], #64
 41c:	ret
 420:	mov	w20, #0x1                   	// #1
 424:	b	3cc <getValueProfDataSize+0x24>

0000000000000428 <getValueProfDataSizeWrapper>:
 428:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 42c:	add	x0, x0, #0x0
 430:	b	3a8 <getValueProfDataSize>
 434:	nop

0000000000000438 <serializeValueProfRecordFrom>:
 438:	stp	x29, x30, [sp, #-80]!
 43c:	mov	x29, sp
 440:	stp	x21, x22, [sp, #32]
 444:	add	w21, w3, #0xf
 448:	and	x21, x21, #0xfffffff8
 44c:	stp	x23, x24, [sp, #48]
 450:	add	x21, x0, x21
 454:	ldr	x24, [x1]
 458:	stp	w2, w3, [x0]
 45c:	cbz	w3, 4d4 <serializeValueProfRecordFrom+0x9c>
 460:	mov	x22, x1
 464:	mov	w23, w2
 468:	stp	x25, x26, [sp, #64]
 46c:	sub	w26, w3, #0x1
 470:	add	x25, x0, #0x8
 474:	stp	x19, x20, [sp, #16]
 478:	mov	x20, #0x0                   	// #0
 47c:	nop
 480:	mov	w2, w20
 484:	ldr	x3, [x22, #32]
 488:	mov	w1, w23
 48c:	mov	x0, x24
 490:	blr	x3
 494:	strb	w0, [x25, x20]
 498:	mov	w19, w0
 49c:	mov	w3, w20
 4a0:	ldr	x4, [x22, #48]
 4a4:	mov	x1, x21
 4a8:	mov	x0, x24
 4ac:	mov	w2, w23
 4b0:	ubfiz	x19, x19, #4, #32
 4b4:	blr	x4
 4b8:	add	x21, x21, x19
 4bc:	mov	x0, x20
 4c0:	add	x20, x20, #0x1
 4c4:	cmp	x26, x0
 4c8:	b.ne	480 <serializeValueProfRecordFrom+0x48>  // b.any
 4cc:	ldp	x19, x20, [sp, #16]
 4d0:	ldp	x25, x26, [sp, #64]
 4d4:	ldp	x21, x22, [sp, #32]
 4d8:	ldp	x23, x24, [sp, #48]
 4dc:	ldp	x29, x30, [sp], #80
 4e0:	ret
 4e4:	nop

00000000000004e8 <serializeValueProfDataFrom>:
 4e8:	stp	x29, x30, [sp, #-48]!
 4ec:	mov	x29, sp
 4f0:	stp	x19, x20, [sp, #16]
 4f4:	mov	x19, x0
 4f8:	stp	x21, x22, [sp, #32]
 4fc:	cbz	x1, 5ac <serializeValueProfDataFrom+0xc4>
 500:	ldr	w21, [x1]
 504:	mov	x20, x1
 508:	ldp	x0, x1, [x19]
 50c:	str	w21, [x20]
 510:	add	x21, x20, #0x8
 514:	mov	w22, #0x0                   	// #0
 518:	blr	x1
 51c:	str	w0, [x20, #4]
 520:	ldr	x0, [x19]
 524:	mov	w1, w22
 528:	ldr	x2, [x19, #16]
 52c:	blr	x2
 530:	cbnz	w0, 54c <serializeValueProfDataFrom+0x64>
 534:	cbz	w22, 5a4 <serializeValueProfDataFrom+0xbc>
 538:	mov	x0, x20
 53c:	ldp	x19, x20, [sp, #16]
 540:	ldp	x21, x22, [sp, #32]
 544:	ldp	x29, x30, [sp], #48
 548:	ret
 54c:	mov	w3, w0
 550:	mov	w2, w22
 554:	mov	x1, x19
 558:	mov	x0, x21
 55c:	bl	438 <serializeValueProfRecordFrom>
 560:	ldr	w2, [x21, #4]
 564:	cbz	w2, 5c8 <serializeValueProfDataFrom+0xe0>
 568:	add	x1, x21, #0x9
 56c:	sub	w0, w2, #0x1
 570:	add	x0, x0, x1
 574:	add	x1, x21, #0x8
 578:	mov	w3, #0x0                   	// #0
 57c:	nop
 580:	ldrb	w4, [x1], #1
 584:	add	w3, w3, w4
 588:	cmp	x0, x1
 58c:	b.ne	580 <serializeValueProfDataFrom+0x98>  // b.any
 590:	add	w2, w2, #0xf
 594:	and	w2, w2, #0xfffffff8
 598:	add	w3, w2, w3, lsl #4
 59c:	add	x21, x21, x3
 5a0:	cbnz	w22, 538 <serializeValueProfDataFrom+0x50>
 5a4:	mov	w22, #0x1                   	// #1
 5a8:	b	520 <serializeValueProfDataFrom+0x38>
 5ac:	bl	3a8 <getValueProfDataSize>
 5b0:	mov	w21, w0
 5b4:	ldr	x1, [x19, #56]
 5b8:	mov	w0, w0
 5bc:	blr	x1
 5c0:	mov	x20, x0
 5c4:	b	508 <serializeValueProfDataFrom+0x20>
 5c8:	mov	x3, #0x8                   	// #8
 5cc:	add	x21, x21, x3
 5d0:	b	5a0 <serializeValueProfDataFrom+0xb8>
 5d4:	nop

00000000000005d8 <lprofSetupValueProfiler>:
 5d8:	stp	x29, x30, [sp, #-16]!
 5dc:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 5e0:	add	x0, x0, #0x0
 5e4:	mov	x29, sp
 5e8:	bl	0 <getenv>
 5ec:	cbz	x0, 5f8 <lprofSetupValueProfiler+0x20>
 5f0:	ldrb	w1, [x0]
 5f4:	cbnz	w1, 620 <lprofSetupValueProfiler+0x48>
 5f8:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 5fc:	add	x0, x1, #0x0
 600:	ldr	w2, [x0, #4]
 604:	cmp	w2, #0xff
 608:	b.ls	618 <lprofSetupValueProfiler+0x40>  // b.plast
 60c:	add	x1, x1, #0x0
 610:	mov	w0, #0xff                  	// #255
 614:	str	w0, [x1, #4]
 618:	ldp	x29, x30, [sp], #16
 61c:	ret
 620:	mov	w2, #0xa                   	// #10
 624:	mov	x1, #0x0                   	// #0
 628:	bl	0 <strtol>
 62c:	mov	w2, w0
 630:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 634:	add	x4, x1, #0x0
 638:	adrp	x3, 0 <getValueProfRecordHeaderSize>
 63c:	mov	w5, #0x1                   	// #1
 640:	str	w5, [x3]
 644:	str	w0, [x4, #4]
 648:	b	604 <lprofSetupValueProfiler+0x2c>
 64c:	nop

0000000000000650 <lprofSetMaxValsPerSite>:
 650:	adrp	x3, 0 <getValueProfRecordHeaderSize>
 654:	adrp	x1, 0 <getValueProfRecordHeaderSize>
 658:	mov	w2, #0x1                   	// #1
 65c:	str	w0, [x3]
 660:	str	w2, [x1]
 664:	ret

0000000000000668 <__llvm_profile_set_num_value_sites>:
 668:	add	x1, x0, w1, uxtw #1
 66c:	strh	w2, [x1, #44]
 670:	ret
 674:	nop

0000000000000678 <__llvm_profile_iterate_data>:
 678:	add	x0, x0, #0x30
 67c:	ret

0000000000000680 <__llvm_get_function_addr>:
 680:	ldr	x0, [x0, #24]
 684:	ret

0000000000000688 <__llvm_profile_instrument_target>:
 688:	cbz	x1, 7a8 <__llvm_profile_instrument_target+0x120>
 68c:	stp	x29, x30, [sp, #-48]!
 690:	mov	x29, sp
 694:	stp	x19, x20, [sp, #16]
 698:	mov	x20, x0
 69c:	mov	x19, x1
 6a0:	ldr	x0, [x1, #32]
 6a4:	stp	x21, x22, [sp, #32]
 6a8:	mov	w21, w2
 6ac:	cbz	x0, 7ac <__llvm_profile_instrument_target+0x124>
 6b0:	ldr	x19, [x0, w21, uxtw #3]
 6b4:	add	x22, x0, w21, uxtw #3
 6b8:	mov	x5, #0x0                   	// #0
 6bc:	mov	w1, #0x0                   	// #0
 6c0:	cbz	x19, 718 <__llvm_profile_instrument_target+0x90>
 6c4:	mov	x3, #0xffffffffffffffff    	// #-1
 6c8:	b	6e8 <__llvm_profile_instrument_target+0x60>
 6cc:	ldr	x4, [x19, #16]
 6d0:	cmp	x2, x3
 6d4:	csel	x6, x3, x2, cs  // cs = hs, nlast
 6d8:	csel	x5, x5, x19, cs  // cs = hs, nlast
 6dc:	mov	x3, x6
 6e0:	cbz	x4, 718 <__llvm_profile_instrument_target+0x90>
 6e4:	mov	x19, x4
 6e8:	ldr	x2, [x19]
 6ec:	add	w1, w1, #0x1
 6f0:	and	w1, w1, #0xff
 6f4:	cmp	x20, x2
 6f8:	ldr	x2, [x19, #8]
 6fc:	b.ne	6cc <__llvm_profile_instrument_target+0x44>  // b.any
 700:	add	x2, x2, #0x1
 704:	str	x2, [x19, #8]
 708:	ldp	x19, x20, [sp, #16]
 70c:	ldp	x21, x22, [sp, #32]
 710:	ldp	x29, x30, [sp], #48
 714:	ret
 718:	adrp	x21, 0 <getValueProfRecordHeaderSize>
 71c:	add	x0, x21, #0x0
 720:	ldr	w0, [x0, #4]
 724:	cmp	w1, w0
 728:	b.cc	768 <__llvm_profile_instrument_target+0xe0>  // b.lo, b.ul, b.last
 72c:	ldr	x0, [x5, #8]
 730:	cmp	x0, #0x1
 734:	b.hi	750 <__llvm_profile_instrument_target+0xc8>  // b.pmore
 738:	mov	x0, #0x1                   	// #1
 73c:	stp	x20, x0, [x5]
 740:	ldp	x19, x20, [sp, #16]
 744:	ldp	x21, x22, [sp, #32]
 748:	ldp	x29, x30, [sp], #48
 74c:	ret
 750:	sub	x0, x0, #0x1
 754:	str	x0, [x5, #8]
 758:	ldp	x19, x20, [sp, #16]
 75c:	ldp	x21, x22, [sp, #32]
 760:	ldp	x29, x30, [sp], #48
 764:	ret
 768:	bl	240 <allocateOneNode>
 76c:	cbz	x0, 708 <__llvm_profile_instrument_target+0x80>
 770:	ldr	x1, [x0, #8]
 774:	ldr	x2, [x22]
 778:	add	x1, x1, #0x1
 77c:	stp	x20, x1, [x0]
 780:	cbz	x2, 7c0 <__llvm_profile_instrument_target+0x138>
 784:	cbz	x19, 790 <__llvm_profile_instrument_target+0x108>
 788:	ldr	x1, [x19, #16]
 78c:	cbz	x1, 7e4 <__llvm_profile_instrument_target+0x15c>
 790:	ldr	w1, [x21]
 794:	cbnz	w1, 708 <__llvm_profile_instrument_target+0x80>
 798:	ldp	x19, x20, [sp, #16]
 79c:	ldp	x21, x22, [sp, #32]
 7a0:	ldp	x29, x30, [sp], #48
 7a4:	b	0 <free>
 7a8:	ret
 7ac:	mov	x0, x1
 7b0:	bl	1a8 <allocateValueProfileCounters>
 7b4:	cbz	w0, 708 <__llvm_profile_instrument_target+0x80>
 7b8:	ldr	x0, [x19, #32]
 7bc:	b	6b0 <__llvm_profile_instrument_target+0x28>
 7c0:	ldxr	x1, [x22]
 7c4:	cbnz	x1, 7d0 <__llvm_profile_instrument_target+0x148>
 7c8:	stlxr	w2, x0, [x22]
 7cc:	cbnz	w2, 7c0 <__llvm_profile_instrument_target+0x138>
 7d0:	cmp	x1, #0x0
 7d4:	dmb	ish
 7d8:	cset	w1, eq  // eq = none
 7dc:	cbnz	w1, 708 <__llvm_profile_instrument_target+0x80>
 7e0:	b	790 <__llvm_profile_instrument_target+0x108>
 7e4:	add	x19, x19, #0x10
 7e8:	ldxr	x1, [x19]
 7ec:	cbnz	x1, 7d0 <__llvm_profile_instrument_target+0x148>
 7f0:	stlxr	w2, x0, [x19]
 7f4:	cbz	w2, 7d0 <__llvm_profile_instrument_target+0x148>
 7f8:	b	7e8 <__llvm_profile_instrument_target+0x160>
 7fc:	nop

0000000000000800 <__llvm_profile_instrument_target_value>:
 800:	cmp	x1, #0x0
 804:	ccmp	x3, #0x0, #0x4, ne  // ne = any
 808:	b.eq	898 <__llvm_profile_instrument_target_value+0x98>  // b.none
 80c:	stp	x29, x30, [sp, #-80]!
 810:	mov	x29, sp
 814:	stp	x19, x20, [sp, #16]
 818:	mov	x20, x0
 81c:	ldr	x0, [x1, #32]
 820:	stp	x21, x22, [sp, #32]
 824:	mov	x21, x3
 828:	cbz	x0, 90c <__llvm_profile_instrument_target_value+0x10c>
 82c:	str	x23, [sp, #48]
 830:	ldr	x19, [x0, w2, uxtw #3]
 834:	add	x23, x0, w2, uxtw #3
 838:	mov	x6, #0x0                   	// #0
 83c:	mov	w1, #0x0                   	// #0
 840:	cbz	x19, 89c <__llvm_profile_instrument_target_value+0x9c>
 844:	mov	x4, #0xffffffffffffffff    	// #-1
 848:	b	868 <__llvm_profile_instrument_target_value+0x68>
 84c:	ldr	x5, [x19, #16]
 850:	cmp	x4, x2
 854:	csel	x7, x4, x2, ls  // ls = plast
 858:	csel	x6, x6, x19, ls  // ls = plast
 85c:	mov	x4, x7
 860:	cbz	x5, 89c <__llvm_profile_instrument_target_value+0x9c>
 864:	mov	x19, x5
 868:	ldp	x5, x2, [x19]
 86c:	add	w1, w1, #0x1
 870:	and	w1, w1, #0xff
 874:	cmp	x20, x5
 878:	b.ne	84c <__llvm_profile_instrument_target_value+0x4c>  // b.any
 87c:	add	x2, x21, x2
 880:	ldr	x23, [sp, #48]
 884:	str	x2, [x19, #8]
 888:	ldp	x19, x20, [sp, #16]
 88c:	ldp	x21, x22, [sp, #32]
 890:	ldp	x29, x30, [sp], #80
 894:	ret
 898:	ret
 89c:	adrp	x22, 0 <getValueProfRecordHeaderSize>
 8a0:	add	x0, x22, #0x0
 8a4:	ldr	w0, [x0, #4]
 8a8:	cmp	w0, w1
 8ac:	b.hi	8c8 <__llvm_profile_instrument_target_value+0xc8>  // b.pmore
 8b0:	ldr	x0, [x6, #8]
 8b4:	cmp	x21, x0
 8b8:	b.cc	934 <__llvm_profile_instrument_target_value+0x134>  // b.lo, b.ul, b.last
 8bc:	ldr	x23, [sp, #48]
 8c0:	stp	x20, x21, [x6]
 8c4:	b	888 <__llvm_profile_instrument_target_value+0x88>
 8c8:	bl	240 <allocateOneNode>
 8cc:	cbz	x0, 8f8 <__llvm_profile_instrument_target_value+0xf8>
 8d0:	ldr	x2, [x0, #8]
 8d4:	ldr	x1, [x23]
 8d8:	add	x2, x2, x21
 8dc:	stp	x20, x2, [x0]
 8e0:	cbz	x1, 984 <__llvm_profile_instrument_target_value+0x184>
 8e4:	cbz	x19, 8f0 <__llvm_profile_instrument_target_value+0xf0>
 8e8:	ldr	x1, [x19, #16]
 8ec:	cbz	x1, 958 <__llvm_profile_instrument_target_value+0x158>
 8f0:	ldr	w1, [x22]
 8f4:	cbz	w1, 944 <__llvm_profile_instrument_target_value+0x144>
 8f8:	ldr	x23, [sp, #48]
 8fc:	ldp	x19, x20, [sp, #16]
 900:	ldp	x21, x22, [sp, #32]
 904:	ldp	x29, x30, [sp], #80
 908:	ret
 90c:	mov	x0, x1
 910:	str	x1, [sp, #64]
 914:	str	w2, [sp, #76]
 918:	bl	1a8 <allocateValueProfileCounters>
 91c:	cbz	w0, 888 <__llvm_profile_instrument_target_value+0x88>
 920:	ldr	x1, [sp, #64]
 924:	ldr	w2, [sp, #76]
 928:	ldr	x0, [x1, #32]
 92c:	str	x23, [sp, #48]
 930:	b	830 <__llvm_profile_instrument_target_value+0x30>
 934:	sub	x0, x0, x21
 938:	ldr	x23, [sp, #48]
 93c:	str	x0, [x6, #8]
 940:	b	888 <__llvm_profile_instrument_target_value+0x88>
 944:	ldp	x19, x20, [sp, #16]
 948:	ldp	x21, x22, [sp, #32]
 94c:	ldr	x23, [sp, #48]
 950:	ldp	x29, x30, [sp], #80
 954:	b	0 <free>
 958:	add	x19, x19, #0x10
 95c:	ldxr	x1, [x19]
 960:	cbnz	x1, 96c <__llvm_profile_instrument_target_value+0x16c>
 964:	stlxr	w2, x0, [x19]
 968:	cbnz	w2, 95c <__llvm_profile_instrument_target_value+0x15c>
 96c:	cmp	x1, #0x0
 970:	dmb	ish
 974:	cset	w1, eq  // eq = none
 978:	cbz	w1, 8f0 <__llvm_profile_instrument_target_value+0xf0>
 97c:	ldr	x23, [sp, #48]
 980:	b	8fc <__llvm_profile_instrument_target_value+0xfc>
 984:	ldxr	x1, [x23]
 988:	cbnz	x1, 96c <__llvm_profile_instrument_target_value+0x16c>
 98c:	stlxr	w2, x0, [x23]
 990:	cbz	w2, 96c <__llvm_profile_instrument_target_value+0x16c>
 994:	b	984 <__llvm_profile_instrument_target_value+0x184>

0000000000000998 <__llvm_profile_instrument_range>:
 998:	mov	x6, #0x8000000000000000    	// #-9223372036854775808
 99c:	cmp	x5, x6
 9a0:	ccmp	x0, x5, #0x1, ne  // ne = any
 9a4:	b.lt	9b0 <__llvm_profile_instrument_range+0x18>  // b.tstop
 9a8:	mov	x0, x5
 9ac:	b	688 <__llvm_profile_instrument_target>
 9b0:	cmp	x0, x3
 9b4:	ccmp	x0, x4, #0x0, ge  // ge = tcont
 9b8:	csinc	x0, x0, x4, le
 9bc:	b	688 <__llvm_profile_instrument_target>

00000000000009c0 <lprofGetVPDataReader>:
 9c0:	adrp	x0, 0 <getValueProfRecordHeaderSize>
 9c4:	add	x0, x0, #0x0
 9c8:	add	x0, x0, #0x40
 9cc:	ret

InstrProfilingBuffer.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_is_continuous_mode_enabled>:
   0:	adrp	x0, 0 <__llvm_profile_is_continuous_mode_enabled>
   4:	ldr	w0, [x0]
   8:	ret
   c:	nop

0000000000000010 <__llvm_profile_enable_continuous_mode>:
  10:	adrp	x0, 0 <__llvm_profile_is_continuous_mode_enabled>
  14:	mov	w1, #0x1                   	// #1
  18:	str	w1, [x0]
  1c:	ret

0000000000000020 <__llvm_profile_get_data_size>:
  20:	add	x1, x1, #0x2f
  24:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  28:	sub	x1, x1, x0
  2c:	movk	x2, #0xaaab
  30:	umulh	x0, x1, x2
  34:	lsr	x0, x0, #5
  38:	ret
  3c:	nop

0000000000000040 <__llvm_profile_get_padding_sizes_for_counters>:
  40:	stp	x29, x30, [sp, #-64]!
  44:	adrp	x6, 0 <__llvm_profile_is_continuous_mode_enabled>
  48:	mov	x29, sp
  4c:	ldr	w6, [x6]
  50:	stp	x21, x22, [sp, #32]
  54:	mov	x21, x2
  58:	mov	x22, x5
  5c:	stp	x23, x24, [sp, #48]
  60:	mov	x24, x3
  64:	mov	x23, x4
  68:	cbz	w6, ec <__llvm_profile_get_padding_sizes_for_counters+0xac>
  6c:	stp	x19, x20, [sp, #16]
  70:	mov	x19, x0
  74:	mov	x20, x1
  78:	add	x19, x19, x19, lsl #1
  7c:	bl	0 <getpagesize>
  80:	mov	w6, w0
  84:	lsl	x8, x20, #3
  88:	lsl	x19, x19, #4
  8c:	add	x19, x19, #0x50
  90:	udiv	x1, x8, x6
  94:	udiv	x7, x19, x6
  98:	udiv	x0, x21, x6
  9c:	msub	x1, x1, x6, x8
  a0:	msub	x19, x7, x6, x19
  a4:	sub	x3, x6, x1
  a8:	msub	x2, x0, x6, x21
  ac:	sub	x4, x6, x19
  b0:	cmp	x19, #0x0
  b4:	csel	x19, x4, x19, ne  // ne = any
  b8:	cmp	x1, #0x0
  bc:	str	x19, [x24]
  c0:	csel	x1, x3, x1, ne  // ne = any
  c4:	sub	x6, x6, x2
  c8:	cmp	x2, #0x0
  cc:	ldp	x19, x20, [sp, #16]
  d0:	str	x1, [x23]
  d4:	csel	x2, x6, x2, ne  // ne = any
  d8:	str	x2, [x22]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldp	x23, x24, [sp, #48]
  e4:	ldp	x29, x30, [sp], #64
  e8:	ret
  ec:	str	xzr, [x3]
  f0:	mov	x0, x2
  f4:	str	xzr, [x4]
  f8:	bl	0 <__llvm_profile_get_num_padding_bytes>
  fc:	and	x0, x0, #0xff
 100:	str	x0, [x22]
 104:	ldp	x21, x22, [sp, #32]
 108:	ldp	x23, x24, [sp, #48]
 10c:	ldp	x29, x30, [sp], #64
 110:	ret
 114:	nop

0000000000000118 <__llvm_profile_get_size_for_buffer_internal>:
 118:	stp	x29, x30, [sp, #-80]!
 11c:	add	x1, x1, #0x2f
 120:	sub	x0, x1, x0
 124:	mov	x29, sp
 128:	stp	x19, x20, [sp, #16]
 12c:	mov	x19, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 130:	movk	x19, #0xaaab
 134:	sub	x20, x3, x2
 138:	str	x21, [sp, #32]
 13c:	umulh	x0, x0, x19
 140:	sub	x21, x5, x4
 144:	asr	x1, x20, #3
 148:	add	x3, sp, #0x38
 14c:	mov	x2, x21
 150:	add	x5, sp, #0x48
 154:	lsr	x19, x0, #5
 158:	add	x4, sp, #0x40
 15c:	mov	x0, x19
 160:	bl	40 <__llvm_profile_get_padding_sizes_for_counters>
 164:	ldp	x0, x1, [sp, #56]
 168:	add	x19, x19, x19, lsl #1
 16c:	ldr	x2, [sp, #72]
 170:	add	x19, x21, x19, lsl #4
 174:	ldr	x21, [sp, #32]
 178:	add	x2, x2, #0x50
 17c:	add	x0, x0, x1
 180:	add	x0, x0, x2
 184:	add	x0, x0, x19
 188:	add	x0, x0, x20
 18c:	ldp	x19, x20, [sp, #16]
 190:	ldp	x29, x30, [sp], #80
 194:	ret

0000000000000198 <__llvm_profile_get_size_for_buffer>:
 198:	stp	x29, x30, [sp, #-64]!
 19c:	mov	x29, sp
 1a0:	stp	x19, x20, [sp, #16]
 1a4:	stp	x21, x22, [sp, #32]
 1a8:	str	x23, [sp, #48]
 1ac:	bl	0 <__llvm_profile_begin_data>
 1b0:	mov	x19, x0
 1b4:	bl	0 <__llvm_profile_end_data>
 1b8:	mov	x20, x0
 1bc:	bl	0 <__llvm_profile_begin_counters>
 1c0:	mov	x21, x0
 1c4:	bl	0 <__llvm_profile_end_counters>
 1c8:	mov	x22, x0
 1cc:	bl	0 <__llvm_profile_begin_names>
 1d0:	mov	x23, x0
 1d4:	bl	0 <__llvm_profile_end_names>
 1d8:	mov	x4, x23
 1dc:	mov	x5, x0
 1e0:	mov	x3, x22
 1e4:	mov	x2, x21
 1e8:	mov	x1, x20
 1ec:	mov	x0, x19
 1f0:	ldp	x19, x20, [sp, #16]
 1f4:	ldp	x21, x22, [sp, #32]
 1f8:	ldr	x23, [sp, #48]
 1fc:	ldp	x29, x30, [sp], #64
 200:	b	118 <__llvm_profile_get_size_for_buffer_internal>
 204:	nop

0000000000000208 <initBufferWriter>:
 208:	adrp	x2, 0 <lprofBufferWriter>
 20c:	ldr	x2, [x2]
 210:	stp	x2, x1, [x0]
 214:	ret

0000000000000218 <__llvm_profile_write_buffer>:
 218:	stp	x29, x30, [sp, #-32]!
 21c:	adrp	x3, 0 <lprofBufferWriter>
 220:	mov	x4, x0
 224:	mov	x29, sp
 228:	ldr	x3, [x3]
 22c:	add	x0, sp, #0x10
 230:	mov	w2, #0x0                   	// #0
 234:	mov	x1, #0x0                   	// #0
 238:	stp	x3, x4, [sp, #16]
 23c:	bl	0 <lprofWriteData>
 240:	ldp	x29, x30, [sp], #32
 244:	ret

0000000000000248 <__llvm_profile_write_buffer_internal>:
 248:	sub	sp, sp, #0x30
 24c:	adrp	x8, 0 <lprofBufferWriter>
 250:	mov	x9, x0
 254:	mov	x7, x6
 258:	add	x0, sp, #0x20
 25c:	mov	x6, x5
 260:	stp	x29, x30, [sp, #16]
 264:	add	x29, sp, #0x10
 268:	mov	x5, #0x0                   	// #0
 26c:	ldr	x8, [x8]
 270:	str	wzr, [sp]
 274:	stp	x8, x9, [sp, #32]
 278:	bl	0 <lprofWriteDataImpl>
 27c:	ldp	x29, x30, [sp, #16]
 280:	add	sp, sp, #0x30
 284:	ret

InstrProfilingFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <fileWriter>:
       0:	stp	x29, x30, [sp, #-96]!
       4:	mov	x29, sp
       8:	stp	x21, x22, [sp, #32]
       c:	str	xzr, [sp, #88]
      10:	ldr	x22, [x0, #8]
      14:	cbz	w2, f4 <fileWriter+0xf4>
      18:	sub	w2, w2, #0x1
      1c:	stp	x23, x24, [sp, #48]
      20:	add	x23, x1, #0x20
      24:	mov	w0, #0x20                  	// #32
      28:	mov	x24, #0x8                   	// #8
      2c:	stp	x19, x20, [sp, #16]
      30:	mov	x20, x1
      34:	umaddl	x23, w2, w0, x23
      38:	str	x25, [sp, #64]
      3c:	add	x25, sp, #0x58
      40:	b	64 <fileWriter+0x64>
      44:	mov	x3, x22
      48:	bl	0 <fwrite>
      4c:	ldr	x1, [x20, #16]
      50:	cmp	x0, x1
      54:	b.ne	94 <fileWriter+0x94>  // b.any
      58:	add	x20, x20, #0x20
      5c:	cmp	x23, x20
      60:	b.eq	e8 <fileWriter+0xe8>  // b.none
      64:	ldp	x0, x1, [x20]
      68:	ldr	x2, [x20, #16]
      6c:	cbnz	x0, 44 <fileWriter+0x44>
      70:	ldr	w0, [x20, #24]
      74:	mul	x19, x2, x1
      78:	cbnz	w0, b0 <fileWriter+0xb0>
      7c:	mov	x1, x19
      80:	mov	x0, x22
      84:	mov	w2, #0x1                   	// #1
      88:	bl	0 <fseek>
      8c:	cmn	w0, #0x1
      90:	b.ne	58 <fileWriter+0x58>  // b.any
      94:	mov	w0, #0x1                   	// #1
      98:	ldp	x19, x20, [sp, #16]
      9c:	ldp	x21, x22, [sp, #32]
      a0:	ldp	x23, x24, [sp, #48]
      a4:	ldr	x25, [sp, #64]
      a8:	ldp	x29, x30, [sp], #96
      ac:	ret
      b0:	cbnz	x19, c0 <fileWriter+0xc0>
      b4:	b	58 <fileWriter+0x58>
      b8:	subs	x19, x19, x0
      bc:	b.eq	58 <fileWriter+0x58>  // b.none
      c0:	cmp	x19, #0x8
      c4:	mov	x3, x22
      c8:	csel	x21, x19, x24, ls  // ls = plast
      cc:	mov	x0, x25
      d0:	mov	x2, x21
      d4:	mov	x1, #0x1                   	// #1
      d8:	bl	0 <fwrite>
      dc:	cmp	x0, x21
      e0:	b.eq	b8 <fileWriter+0xb8>  // b.none
      e4:	b	94 <fileWriter+0x94>
      e8:	ldp	x19, x20, [sp, #16]
      ec:	ldp	x23, x24, [sp, #48]
      f0:	ldr	x25, [sp, #64]
      f4:	mov	w0, #0x0                   	// #0
      f8:	ldp	x21, x22, [sp, #32]
      fc:	ldp	x29, x30, [sp], #96
     100:	ret
     104:	nop

0000000000000108 <getCurFilenameLength>:
     108:	adrp	x0, 0 <fileWriter>
     10c:	ldr	x1, [x0]
     110:	cbz	x1, 1d8 <getCurFilenameLength+0xd0>
     114:	stp	x29, x30, [sp, #-48]!
     118:	mov	x29, sp
     11c:	stp	x19, x20, [sp, #16]
     120:	add	x20, x0, #0x0
     124:	mov	w0, #0x0                   	// #0
     128:	ldrb	w2, [x1]
     12c:	cbz	w2, 180 <getCurFilenameLength+0x78>
     130:	mov	x0, x1
     134:	stp	x21, x22, [sp, #32]
     138:	bl	0 <strlen>
     13c:	ldr	x1, [x20, #168]
     140:	mov	x19, x0
     144:	ldr	w22, [x20, #176]
     148:	cbz	x1, 18c <getCurFilenameLength+0x84>
     14c:	add	x0, x20, #0x28
     150:	bl	0 <strlen>
     154:	mov	x21, x0
     158:	add	x0, x20, #0x18
     15c:	bl	0 <strlen>
     160:	sub	x2, x0, #0x2
     164:	ldp	w1, w0, [x20, #168]
     168:	sub	x21, x21, #0x2
     16c:	mul	w1, w1, w2
     170:	madd	w21, w0, w21, w1
     174:	add	w0, w21, w19
     178:	cbnz	w22, 1bc <getCurFilenameLength+0xb4>
     17c:	ldp	x21, x22, [sp, #32]
     180:	ldp	x19, x20, [sp, #16]
     184:	ldp	x29, x30, [sp], #48
     188:	ret
     18c:	cbz	w22, 1d0 <getCurFilenameLength+0xc8>
     190:	add	x0, x20, #0x28
     194:	bl	0 <strlen>
     198:	mov	x21, x0
     19c:	add	x0, x20, #0x18
     1a0:	bl	0 <strlen>
     1a4:	sub	x2, x0, #0x2
     1a8:	ldp	w1, w0, [x20, #168]
     1ac:	sub	x21, x21, #0x2
     1b0:	mul	w1, w1, w2
     1b4:	madd	w21, w0, w21, w1
     1b8:	add	w0, w21, w19
     1bc:	add	w0, w0, #0x18
     1c0:	ldp	x19, x20, [sp, #16]
     1c4:	ldp	x21, x22, [sp, #32]
     1c8:	ldp	x29, x30, [sp], #48
     1cc:	ret
     1d0:	ldp	x21, x22, [sp, #32]
     1d4:	b	180 <getCurFilenameLength+0x78>
     1d8:	mov	w0, #0x0                   	// #0
     1dc:	ret

00000000000001e0 <getCurFilename>:
     1e0:	stp	x29, x30, [sp, #-160]!
     1e4:	mov	x29, sp
     1e8:	stp	x19, x20, [sp, #16]
     1ec:	adrp	x19, 0 <fileWriter>
     1f0:	stp	x27, x28, [sp, #80]
     1f4:	ldr	x27, [x19]
     1f8:	cbz	x27, 314 <getCurFilename+0x134>
     1fc:	ldrb	w28, [x27]
     200:	cbz	w28, 428 <getCurFilename+0x248>
     204:	add	x20, x19, #0x0
     208:	stp	x25, x26, [sp, #64]
     20c:	mov	x26, x0
     210:	stp	x21, x22, [sp, #32]
     214:	ldr	x0, [x20, #168]
     218:	cbz	x0, 354 <getCurFilename+0x174>
     21c:	add	x20, x19, #0x0
     220:	stp	x23, x24, [sp, #48]
     224:	add	x0, x20, #0x18
     228:	bl	0 <strlen>
     22c:	adrp	x22, 0 <fileWriter>
     230:	mov	x21, x0
     234:	add	x19, x19, #0x0
     238:	add	x0, x20, #0x28
     23c:	bl	0 <strlen>
     240:	add	x25, x19, #0x28
     244:	mov	x20, x0
     248:	add	x23, sp, #0x80
     24c:	add	x0, x22, #0x0
     250:	mov	w24, #0x0                   	// #0
     254:	mov	w22, #0x0                   	// #0
     258:	mov	x3, #0x0                   	// #0
     25c:	str	w20, [sp, #100]
     260:	str	x0, [sp, #104]
     264:	str	w21, [sp, #112]
     268:	b	288 <getCurFilename+0xa8>
     26c:	add	w24, w24, #0x1
     270:	strb	w28, [x26, x3]
     274:	mov	w22, w5
     278:	sxtw	x3, w24
     27c:	add	x8, x26, x3
     280:	ldrb	w28, [x0]
     284:	cbz	w28, 300 <getCurFilename+0x120>
     288:	add	w5, w22, #0x1
     28c:	cmp	w28, #0x25
     290:	add	x8, x26, x3
     294:	add	x0, x27, w5, sxtw
     298:	b.ne	26c <getCurFilename+0x8c>  // b.any
     29c:	ldrb	w0, [x27, w5, sxtw]
     2a0:	cmp	w0, #0x70
     2a4:	b.eq	3f4 <getCurFilename+0x214>  // b.none
     2a8:	cmp	w0, #0x68
     2ac:	b.eq	328 <getCurFilename+0x148>  // b.none
     2b0:	ldrb	w1, [x27, w5, uxtw]
     2b4:	add	w4, w22, #0x2
     2b8:	mov	w2, w4
     2bc:	cmp	w1, #0x6d
     2c0:	b.ne	2d8 <getCurFilename+0xf8>  // b.any
     2c4:	b	384 <getCurFilename+0x1a4>
     2c8:	ldrb	w1, [x27, w2, uxtw]
     2cc:	cmp	w1, #0x6d
     2d0:	b.eq	380 <getCurFilename+0x1a0>  // b.none
     2d4:	mov	w2, w0
     2d8:	sub	w1, w1, #0x30
     2dc:	add	w0, w2, #0x1
     2e0:	and	w1, w1, #0xff
     2e4:	cmp	w1, #0x9
     2e8:	b.ls	2c8 <getCurFilename+0xe8>  // b.plast
     2ec:	add	x0, x27, w4, sxtw
     2f0:	mov	w22, w4
     2f4:	ldrb	w28, [x0]
     2f8:	cbnz	w28, 288 <getCurFilename+0xa8>
     2fc:	nop
     300:	ldp	x23, x24, [sp, #48]
     304:	strb	wzr, [x8]
     308:	mov	x27, x26
     30c:	ldp	x21, x22, [sp, #32]
     310:	ldp	x25, x26, [sp, #64]
     314:	mov	x0, x27
     318:	ldp	x19, x20, [sp, #16]
     31c:	ldp	x27, x28, [sp, #80]
     320:	ldp	x29, x30, [sp], #160
     324:	ret
     328:	ldr	w0, [sp, #100]
     32c:	add	w22, w22, #0x2
     330:	mov	x2, x20
     334:	mov	x1, x25
     338:	add	w24, w24, w0
     33c:	mov	x0, x8
     340:	bl	0 <memcpy>
     344:	sxtw	x3, w24
     348:	add	x0, x27, w22, sxtw
     34c:	add	x8, x26, x3
     350:	b	280 <getCurFilename+0xa0>
     354:	ldr	w0, [x20, #176]
     358:	cbnz	w0, 21c <getCurFilename+0x3c>
     35c:	str	w1, [sp, #100]
     360:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     364:	cbnz	w0, 440 <getCurFilename+0x260>
     368:	ldr	w1, [sp, #100]
     36c:	ldr	x27, [x19]
     370:	cbnz	w1, 454 <getCurFilename+0x274>
     374:	ldp	x21, x22, [sp, #32]
     378:	ldp	x25, x26, [sp, #64]
     37c:	b	314 <getCurFilename+0x134>
     380:	mov	w5, w2
     384:	str	w5, [sp, #116]
     388:	str	x8, [sp, #120]
     38c:	bl	0 <getpid>
     390:	ldr	w4, [x19, #176]
     394:	udiv	w28, w0, w4
     398:	msub	w28, w28, w4, w0
     39c:	bl	0 <lprofGetLoadModuleSignature>
     3a0:	ldr	x2, [sp, #104]
     3a4:	mov	x3, x0
     3a8:	mov	w4, w28
     3ac:	mov	x0, x23
     3b0:	mov	x1, #0x19                  	// #25
     3b4:	bl	0 <snprintf>
     3b8:	cmp	w0, #0x18
     3bc:	ldr	w5, [sp, #116]
     3c0:	ldr	x8, [sp, #120]
     3c4:	b.le	420 <getCurFilename+0x240>
     3c8:	mov	x2, #0x18                  	// #24
     3cc:	mov	w0, w2
     3d0:	add	w24, w24, w0
     3d4:	add	w22, w5, #0x1
     3d8:	mov	x0, x8
     3dc:	mov	x1, x23
     3e0:	bl	0 <memcpy>
     3e4:	sxtw	x3, w24
     3e8:	add	x0, x27, w22, sxtw
     3ec:	add	x8, x26, x3
     3f0:	b	280 <getCurFilename+0xa0>
     3f4:	ldr	w0, [sp, #112]
     3f8:	add	w22, w22, #0x2
     3fc:	mov	x2, x21
     400:	add	x1, x19, #0x18
     404:	add	w24, w24, w0
     408:	mov	x0, x8
     40c:	bl	0 <memcpy>
     410:	sxtw	x3, w24
     414:	add	x0, x27, w22, sxtw
     418:	add	x8, x26, x3
     41c:	b	280 <getCurFilename+0xa0>
     420:	sxtw	x2, w0
     424:	b	3d0 <getCurFilename+0x1f0>
     428:	mov	x27, #0x0                   	// #0
     42c:	mov	x0, x27
     430:	ldp	x19, x20, [sp, #16]
     434:	ldp	x27, x28, [sp, #80]
     438:	ldp	x29, x30, [sp], #160
     43c:	ret
     440:	ldrb	w28, [x27]
     444:	mov	x8, x26
     448:	cbz	w28, 304 <getCurFilename+0x124>
     44c:	stp	x23, x24, [sp, #48]
     450:	b	224 <getCurFilename+0x44>
     454:	mov	x0, x27
     458:	bl	0 <strlen>
     45c:	mov	x19, x0
     460:	mov	x1, x27
     464:	mov	x0, x26
     468:	mov	x27, x26
     46c:	sxtw	x19, w19
     470:	mov	x2, x19
     474:	bl	0 <memcpy>
     478:	strb	wzr, [x26, x19]
     47c:	ldp	x21, x22, [sp, #32]
     480:	ldp	x25, x26, [sp, #64]
     484:	b	314 <getCurFilename+0x134>

0000000000000488 <createProfileDir>:
     488:	stp	x29, x30, [sp, #-32]!
     48c:	mov	x29, sp
     490:	stp	x19, x20, [sp, #16]
     494:	mov	x19, x0
     498:	bl	0 <strlen>
     49c:	mov	x20, x0
     4a0:	mov	x0, x19
     4a4:	bl	0 <lprofFindFirstDirSeparator>
     4a8:	cbz	x0, 4d0 <createProfileDir+0x48>
     4ac:	add	x0, x20, #0x10
     4b0:	mov	x1, x19
     4b4:	and	x0, x0, #0xfffffffffffffff0
     4b8:	add	x2, x20, #0x1
     4bc:	sub	sp, sp, x0
     4c0:	mov	x3, sp
     4c4:	mov	x0, x3
     4c8:	bl	0 <strncpy>
     4cc:	bl	0 <__llvm_profile_recursive_mkdir>
     4d0:	mov	sp, x29
     4d4:	ldp	x19, x20, [sp, #16]
     4d8:	ldp	x29, x30, [sp], #32
     4dc:	ret

00000000000004e0 <truncateCurrentFile>:
     4e0:	stp	x29, x30, [sp, #-32]!
     4e4:	mov	x29, sp
     4e8:	stp	x19, x20, [sp, #16]
     4ec:	bl	108 <getCurFilenameLength>
     4f0:	add	w0, w0, #0x1
     4f4:	mov	w1, #0x0                   	// #0
     4f8:	sxtw	x0, w0
     4fc:	add	x0, x0, #0xf
     500:	and	x0, x0, #0xfffffffffffffff0
     504:	sub	sp, sp, x0
     508:	mov	x0, sp
     50c:	bl	1e0 <getCurFilename>
     510:	cbz	x0, 52c <truncateCurrentFile+0x4c>
     514:	adrp	x20, 0 <fileWriter>
     518:	add	x20, x20, #0x0
     51c:	mov	x19, x0
     520:	mov	x0, x20
     524:	bl	0 <getenv>
     528:	cbz	x0, 53c <truncateCurrentFile+0x5c>
     52c:	mov	sp, x29
     530:	ldp	x19, x20, [sp, #16]
     534:	ldp	x29, x30, [sp], #32
     538:	ret
     53c:	mov	x1, x20
     540:	mov	w2, #0x1                   	// #1
     544:	mov	x0, x20
     548:	bl	0 <setenv>
     54c:	mov	x0, x19
     550:	bl	488 <createProfileDir>
     554:	adrp	x0, 0 <fileWriter>
     558:	ldr	w0, [x0]
     55c:	cbnz	w0, 52c <truncateCurrentFile+0x4c>
     560:	adrp	x1, 0 <fileWriter>
     564:	mov	x0, x19
     568:	add	x1, x1, #0x0
     56c:	bl	0 <fopen>
     570:	cbz	x0, 52c <truncateCurrentFile+0x4c>
     574:	bl	0 <fclose>
     578:	b	52c <truncateCurrentFile+0x4c>
     57c:	nop

0000000000000580 <getProfileFileSizeForMerging>:
     580:	stp	x29, x30, [sp, #-48]!
     584:	mov	w2, #0x2                   	// #2
     588:	mov	x29, sp
     58c:	stp	x19, x20, [sp, #16]
     590:	mov	x20, x0
     594:	str	x21, [sp, #32]
     598:	mov	x21, x1
     59c:	mov	x1, #0x0                   	// #0
     5a0:	bl	0 <fseek>
     5a4:	cmn	w0, #0x1
     5a8:	b.eq	5fc <getProfileFileSizeForMerging+0x7c>  // b.none
     5ac:	mov	x0, x20
     5b0:	bl	0 <ftell>
     5b4:	str	x0, [x21]
     5b8:	mov	w2, #0x0                   	// #0
     5bc:	mov	x0, x20
     5c0:	mov	x1, #0x0                   	// #0
     5c4:	bl	0 <fseek>
     5c8:	mov	w19, w0
     5cc:	cmn	w0, #0x1
     5d0:	b.eq	658 <getProfileFileSizeForMerging+0xd8>  // b.none
     5d4:	ldr	x0, [x21]
     5d8:	mov	w19, #0x0                   	// #0
     5dc:	sub	x0, x0, #0x1
     5e0:	cmp	x0, #0x4e
     5e4:	b.ls	630 <getProfileFileSizeForMerging+0xb0>  // b.plast
     5e8:	mov	w0, w19
     5ec:	ldp	x19, x20, [sp, #16]
     5f0:	ldr	x21, [sp, #32]
     5f4:	ldp	x29, x30, [sp], #48
     5f8:	ret
     5fc:	mov	w19, w0
     600:	adrp	x0, 0 <stderr>
     604:	ldr	x0, [x0]
     608:	ldr	x20, [x0]
     60c:	bl	0 <__errno_location>
     610:	ldr	w0, [x0]
     614:	bl	0 <strerror>
     618:	mov	x2, x0
     61c:	adrp	x1, 0 <fileWriter>
     620:	mov	x0, x20
     624:	add	x1, x1, #0x0
     628:	bl	0 <fprintf>
     62c:	b	5e8 <getProfileFileSizeForMerging+0x68>
     630:	adrp	x0, 0 <stderr>
     634:	mov	w19, #0xffffffff            	// #-1
     638:	adrp	x2, 0 <fileWriter>
     63c:	adrp	x1, 0 <fileWriter>
     640:	ldr	x0, [x0]
     644:	add	x2, x2, #0x0
     648:	add	x1, x1, #0x0
     64c:	ldr	x0, [x0]
     650:	bl	0 <fprintf>
     654:	b	5e8 <getProfileFileSizeForMerging+0x68>
     658:	adrp	x0, 0 <stderr>
     65c:	ldr	x0, [x0]
     660:	ldr	x20, [x0]
     664:	bl	0 <__errno_location>
     668:	ldr	w0, [x0]
     66c:	bl	0 <strerror>
     670:	mov	x2, x0
     674:	adrp	x1, 0 <fileWriter>
     678:	mov	x0, x20
     67c:	add	x1, x1, #0x0
     680:	bl	0 <fprintf>
     684:	b	5e8 <getProfileFileSizeForMerging+0x68>

0000000000000688 <unlockProfile>:
     688:	stp	x29, x30, [sp, #-32]!
     68c:	mov	x29, sp
     690:	stp	x19, x20, [sp, #16]
     694:	mov	x19, x0
     698:	ldr	w0, [x0]
     69c:	mov	x20, x1
     6a0:	cbz	w0, 6bc <unlockProfile+0x34>
     6a4:	mov	x0, x20
     6a8:	bl	0 <lprofUnlockFileHandle>
     6ac:	str	wzr, [x19]
     6b0:	ldp	x19, x20, [sp, #16]
     6b4:	ldp	x29, x30, [sp], #32
     6b8:	ret
     6bc:	adrp	x0, 0 <stderr>
     6c0:	adrp	x2, 0 <fileWriter>
     6c4:	adrp	x1, 0 <fileWriter>
     6c8:	add	x2, x2, #0x0
     6cc:	ldr	x0, [x0]
     6d0:	add	x1, x1, #0x0
     6d4:	ldr	x0, [x0]
     6d8:	bl	0 <fprintf>
     6dc:	mov	x0, x20
     6e0:	bl	0 <lprofUnlockFileHandle>
     6e4:	str	wzr, [x19]
     6e8:	ldp	x19, x20, [sp, #16]
     6ec:	ldp	x29, x30, [sp], #32
     6f0:	ret
     6f4:	nop

00000000000006f8 <setupIOBuffer>:
     6f8:	stp	x29, x30, [sp, #-16]!
     6fc:	adrp	x0, 0 <fileWriter>
     700:	add	x0, x0, #0x0
     704:	mov	x29, sp
     708:	bl	0 <getenv>
     70c:	cbz	x0, 718 <setupIOBuffer+0x20>
     710:	ldrb	w1, [x0]
     714:	cbnz	w1, 720 <setupIOBuffer+0x28>
     718:	ldp	x29, x30, [sp], #16
     71c:	ret
     720:	mov	w2, #0xa                   	// #10
     724:	mov	x1, #0x0                   	// #0
     728:	bl	0 <strtol>
     72c:	mov	x2, x0
     730:	adrp	x3, 0 <VPBufferSize>
     734:	mov	x1, #0x1                   	// #1
     738:	mov	w0, w0
     73c:	str	w2, [x3]
     740:	bl	0 <calloc>
     744:	adrp	x1, 0 <DynamicBufferIOBuffer>
     748:	ldp	x29, x30, [sp], #16
     74c:	str	x0, [x1]
     750:	ret
     754:	nop

0000000000000758 <mmapProfileForMerging>:
     758:	stp	x29, x30, [sp, #-48]!
     75c:	mov	x29, sp
     760:	str	x21, [sp, #32]
     764:	mov	x21, x2
     768:	stp	x19, x20, [sp, #16]
     76c:	mov	x20, x1
     770:	bl	0 <fileno>
     774:	mov	w3, #0x1                   	// #1
     778:	mov	w4, w0
     77c:	mov	x1, x20
     780:	mov	w2, w3
     784:	mov	x5, #0x0                   	// #0
     788:	mov	x0, #0x0                   	// #0
     78c:	bl	0 <mmap>
     790:	str	x0, [x21]
     794:	cmn	x0, #0x1
     798:	b.eq	7ec <mmapProfileForMerging+0x94>  // b.none
     79c:	mov	x1, x20
     7a0:	bl	0 <__llvm_profile_check_compatibility>
     7a4:	cbnz	w0, 7b8 <mmapProfileForMerging+0x60>
     7a8:	ldp	x19, x20, [sp, #16]
     7ac:	ldr	x21, [sp, #32]
     7b0:	ldp	x29, x30, [sp], #48
     7b4:	ret
     7b8:	ldr	x0, [x21]
     7bc:	mov	x1, x20
     7c0:	bl	0 <munmap>
     7c4:	adrp	x0, 0 <stderr>
     7c8:	adrp	x2, 0 <fileWriter>
     7cc:	adrp	x1, 0 <fileWriter>
     7d0:	add	x2, x2, #0x0
     7d4:	ldr	x0, [x0]
     7d8:	add	x1, x1, #0x0
     7dc:	ldr	x0, [x0]
     7e0:	bl	0 <fprintf>
     7e4:	mov	w0, #0xffffffff            	// #-1
     7e8:	b	7a8 <mmapProfileForMerging+0x50>
     7ec:	mov	x19, x0
     7f0:	adrp	x0, 0 <stderr>
     7f4:	ldr	x0, [x0]
     7f8:	ldr	x20, [x0]
     7fc:	bl	0 <__errno_location>
     800:	ldr	w0, [x0]
     804:	bl	0 <strerror>
     808:	mov	x2, x0
     80c:	adrp	x1, 0 <fileWriter>
     810:	mov	x0, x20
     814:	add	x1, x1, #0x0
     818:	bl	0 <fprintf>
     81c:	mov	w0, w19
     820:	b	7a8 <mmapProfileForMerging+0x50>
     824:	nop

0000000000000828 <writeFile>:
     828:	stp	x29, x30, [sp, #-96]!
     82c:	adrp	x3, 0 <VPMergeHook>
     830:	adrp	x4, 0 <lprofMergeValueProfData>
     834:	mov	x29, sp
     838:	ldr	x3, [x3]
     83c:	stp	x21, x22, [sp, #32]
     840:	adrp	x21, 0 <fileWriter>
     844:	add	x1, x21, #0x0
     848:	stp	x19, x20, [sp, #16]
     84c:	ldr	x4, [x4]
     850:	str	x4, [x3]
     854:	ldr	w2, [x1, #176]
     858:	ldr	w20, [x1, #184]
     85c:	ldr	x19, [x1, #192]
     860:	orr	w20, w20, w2
     864:	cbz	w20, 928 <writeFile+0x100>
     868:	mov	x22, x0
     86c:	cbz	x19, 9b8 <writeFile+0x190>
     870:	mov	x0, x19
     874:	bl	0 <lprofLockFileHandle>
     878:	add	x1, sp, #0x48
     87c:	mov	x0, x19
     880:	bl	580 <getProfileFileSizeForMerging>
     884:	cmn	w0, #0x1
     888:	b.eq	9d4 <writeFile+0x1ac>  // b.none
     88c:	ldr	x1, [sp, #72]
     890:	cbnz	x1, 968 <writeFile+0x140>
     894:	mov	x0, x19
     898:	bl	0 <fileno>
     89c:	mov	x1, #0x0                   	// #0
     8a0:	bl	0 <ftruncate>
     8a4:	mov	w20, w0
     8a8:	cbnz	w0, 9d4 <writeFile+0x1ac>
     8ac:	mov	x0, x19
     8b0:	mov	w2, #0x0                   	// #0
     8b4:	mov	x1, #0x0                   	// #0
     8b8:	bl	0 <fseek>
     8bc:	cmn	w0, #0x1
     8c0:	b.eq	9d4 <writeFile+0x1ac>  // b.none
     8c4:	adrp	x0, 0 <free>
     8c8:	adrp	x1, 0 <FreeHook>
     8cc:	add	x21, x21, #0x0
     8d0:	ldr	x0, [x0]
     8d4:	str	x0, [x1]
     8d8:	bl	6f8 <setupIOBuffer>
     8dc:	adrp	x0, 0 <fileWriter>
     8e0:	add	x0, x0, #0x0
     8e4:	stp	x0, x19, [sp, #80]
     8e8:	bl	0 <lprofGetVPDataReader>
     8ec:	mov	x1, x0
     8f0:	mov	w2, w20
     8f4:	add	x0, sp, #0x50
     8f8:	bl	0 <lprofWriteData>
     8fc:	mov	w20, w0
     900:	ldr	x1, [x21, #192]
     904:	mov	x0, x19
     908:	cmp	x1, x19
     90c:	b.eq	948 <writeFile+0x120>  // b.none
     910:	bl	0 <fclose>
     914:	mov	w0, w20
     918:	ldp	x19, x20, [sp, #16]
     91c:	ldp	x21, x22, [sp, #32]
     920:	ldp	x29, x30, [sp], #96
     924:	ret
     928:	cbnz	x19, 8c4 <writeFile+0x9c>
     92c:	adrp	x1, 0 <fileWriter>
     930:	add	x1, x1, #0x0
     934:	bl	0 <fopen>
     938:	mov	x19, x0
     93c:	cbnz	x0, 8c4 <writeFile+0x9c>
     940:	mov	w20, #0xffffffff            	// #-1
     944:	b	914 <writeFile+0xec>
     948:	bl	0 <fflush>
     94c:	ldr	w1, [x21, #176]
     950:	ldr	w0, [x21, #184]
     954:	orr	w0, w0, w1
     958:	cbz	w0, 914 <writeFile+0xec>
     95c:	mov	x0, x19
     960:	bl	0 <lprofUnlockFileHandle>
     964:	b	914 <writeFile+0xec>
     968:	add	x2, sp, #0x50
     96c:	mov	x0, x19
     970:	bl	758 <mmapProfileForMerging>
     974:	cmn	w0, #0x1
     978:	b.eq	9d4 <writeFile+0x1ac>  // b.none
     97c:	ldp	x1, x0, [sp, #72]
     980:	str	x23, [sp, #48]
     984:	mov	w20, #0x1                   	// #1
     988:	bl	0 <__llvm_profile_merge_from_buffer>
     98c:	mov	x0, x19
     990:	bl	0 <fileno>
     994:	mov	w23, w0
     998:	bl	0 <__llvm_profile_get_size_for_buffer>
     99c:	mov	x1, x0
     9a0:	mov	w0, w23
     9a4:	bl	0 <ftruncate>
     9a8:	ldp	x1, x0, [sp, #72]
     9ac:	bl	0 <munmap>
     9b0:	ldr	x23, [sp, #48]
     9b4:	b	8ac <writeFile+0x84>
     9b8:	bl	488 <createProfileDir>
     9bc:	mov	x0, x22
     9c0:	bl	0 <lprofOpenFileEx>
     9c4:	mov	x19, x0
     9c8:	cbnz	x0, 878 <writeFile+0x50>
     9cc:	mov	w20, #0xffffffff            	// #-1
     9d0:	b	914 <writeFile+0xec>
     9d4:	adrp	x0, 0 <stderr>
     9d8:	mov	w20, #0xffffffff            	// #-1
     9dc:	ldr	x0, [x0]
     9e0:	ldr	x21, [x0]
     9e4:	bl	0 <__errno_location>
     9e8:	ldr	w0, [x0]
     9ec:	bl	0 <strerror>
     9f0:	mov	x3, x0
     9f4:	mov	x2, x22
     9f8:	adrp	x1, 0 <fileWriter>
     9fc:	add	x1, x1, #0x0
     a00:	mov	x0, x21
     a04:	bl	0 <fprintf>
     a08:	mov	x0, x19
     a0c:	bl	0 <fclose>
     a10:	b	914 <writeFile+0xec>
     a14:	nop

0000000000000a18 <writeProfileWithFileObject>:
     a18:	stp	x29, x30, [sp, #-48]!
     a1c:	mov	x29, sp
     a20:	stp	x19, x20, [sp, #16]
     a24:	adrp	x19, 0 <fileWriter>
     a28:	add	x3, x19, #0x0
     a2c:	stp	x21, x22, [sp, #32]
     a30:	mov	x21, x0
     a34:	str	x1, [x3, #192]
     a38:	bl	828 <writeFile>
     a3c:	mov	w20, w0
     a40:	cbnz	w0, a60 <writeProfileWithFileObject+0x48>
     a44:	add	x19, x19, #0x0
     a48:	mov	w0, w20
     a4c:	ldp	x21, x22, [sp, #32]
     a50:	str	xzr, [x19, #192]
     a54:	ldp	x19, x20, [sp, #16]
     a58:	ldp	x29, x30, [sp], #48
     a5c:	ret
     a60:	adrp	x0, 0 <stderr>
     a64:	add	x19, x19, #0x0
     a68:	ldr	x0, [x0]
     a6c:	ldr	x22, [x0]
     a70:	bl	0 <__errno_location>
     a74:	ldr	w0, [x0]
     a78:	bl	0 <strerror>
     a7c:	mov	x3, x0
     a80:	mov	x2, x21
     a84:	mov	x0, x22
     a88:	adrp	x1, 0 <fileWriter>
     a8c:	add	x1, x1, #0x0
     a90:	bl	0 <fprintf>
     a94:	str	xzr, [x19, #192]
     a98:	mov	w0, w20
     a9c:	ldp	x19, x20, [sp, #16]
     aa0:	ldp	x21, x22, [sp, #32]
     aa4:	ldp	x29, x30, [sp], #48
     aa8:	ret
     aac:	nop

0000000000000ab0 <initializeProfileForContinuousMode>:
     ab0:	stp	x29, x30, [sp, #-128]!
     ab4:	mov	x29, sp
     ab8:	stp	x19, x20, [sp, #16]
     abc:	stp	x21, x22, [sp, #32]
     ac0:	stp	x23, x24, [sp, #48]
     ac4:	stp	x25, x26, [sp, #64]
     ac8:	stp	x27, x28, [sp, #80]
     acc:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     ad0:	cbnz	w0, af4 <initializeProfileForContinuousMode+0x44>
     ad4:	mov	sp, x29
     ad8:	ldp	x19, x20, [sp, #16]
     adc:	ldp	x21, x22, [sp, #32]
     ae0:	ldp	x23, x24, [sp, #48]
     ae4:	ldp	x25, x26, [sp, #64]
     ae8:	ldp	x27, x28, [sp, #80]
     aec:	ldp	x29, x30, [sp], #128
     af0:	ret
     af4:	bl	0 <__llvm_profile_begin_data>
     af8:	mov	x19, x0
     afc:	bl	0 <__llvm_profile_end_data>
     b00:	mov	x21, x0
     b04:	bl	0 <__llvm_profile_begin_counters>
     b08:	mov	x20, x0
     b0c:	bl	0 <__llvm_profile_end_counters>
     b10:	mov	x22, x0
     b14:	bl	0 <__llvm_profile_begin_names>
     b18:	mov	x23, x0
     b1c:	bl	0 <__llvm_profile_end_names>
     b20:	mov	x24, x0
     b24:	mov	x1, x21
     b28:	mov	x0, x19
     b2c:	bl	0 <__llvm_profile_get_data_size>
     b30:	mov	x21, x0
     b34:	bl	0 <getpagesize>
     b38:	mov	w25, w0
     b3c:	mov	x26, x25
     b40:	sdiv	x0, x20, x25
     b44:	msub	x0, x0, x25, x20
     b48:	cbnz	x0, d84 <initializeProfileForContinuousMode+0x2d4>
     b4c:	sdiv	x0, x19, x25
     b50:	msub	x0, x0, x25, x19
     b54:	cbnz	x0, d44 <initializeProfileForContinuousMode+0x294>
     b58:	bl	108 <getCurFilenameLength>
     b5c:	add	w2, w0, #0x1
     b60:	mov	w1, #0x0                   	// #0
     b64:	sxtw	x2, w2
     b68:	add	x2, x2, #0xf
     b6c:	and	x2, x2, #0xfffffffffffffff0
     b70:	sub	sp, sp, x2
     b74:	mov	x0, sp
     b78:	bl	1e0 <getCurFilename>
     b7c:	mov	x27, x0
     b80:	cbz	x0, ad4 <initializeProfileForContinuousMode+0x24>
     b84:	adrp	x1, 0 <fileWriter>
     b88:	add	x1, x1, #0x0
     b8c:	str	wzr, [x29, #100]
     b90:	ldr	w2, [x1, #176]
     b94:	ldr	w1, [x1, #184]
     b98:	orr	w1, w1, w2
     b9c:	cbz	w1, c00 <initializeProfileForContinuousMode+0x150>
     ba0:	bl	0 <lprofOpenFileEx>
     ba4:	mov	x19, x0
     ba8:	cbz	x0, d38 <initializeProfileForContinuousMode+0x288>
     bac:	mov	w2, #0x1                   	// #1
     bb0:	add	x26, x29, #0x70
     bb4:	mov	x1, x26
     bb8:	str	w2, [x29, #100]
     bbc:	bl	580 <getProfileFileSizeForMerging>
     bc0:	cmn	w0, #0x1
     bc4:	b.eq	d2c <initializeProfileForContinuousMode+0x27c>  // b.none
     bc8:	ldr	x1, [x29, #112]
     bcc:	cbz	x1, d18 <initializeProfileForContinuousMode+0x268>
     bd0:	add	x27, x29, #0x78
     bd4:	mov	x0, x19
     bd8:	mov	x2, x27
     bdc:	bl	758 <mmapProfileForMerging>
     be0:	cmn	w0, #0x1
     be4:	b.eq	d2c <initializeProfileForContinuousMode+0x27c>  // b.none
     be8:	ldp	x1, x0, [x29, #112]
     bec:	bl	0 <munmap>
     bf0:	cmn	w0, #0x1
     bf4:	b.eq	d2c <initializeProfileForContinuousMode+0x27c>  // b.none
     bf8:	mov	x25, #0x0                   	// #0
     bfc:	b	c44 <initializeProfileForContinuousMode+0x194>
     c00:	adrp	x1, 0 <fileWriter>
     c04:	add	x1, x1, #0x0
     c08:	bl	0 <fopen>
     c0c:	mov	x19, x0
     c10:	cbz	x0, d38 <initializeProfileForContinuousMode+0x288>
     c14:	bl	0 <ftello>
     c18:	mov	x28, x0
     c1c:	sdiv	x0, x0, x25
     c20:	msub	x25, x0, x25, x28
     c24:	cbnz	x25, da8 <initializeProfileForContinuousMode+0x2f8>
     c28:	mov	x0, x27
     c2c:	mov	x1, x19
     c30:	bl	a18 <writeProfileWithFileObject>
     c34:	cbnz	w0, d38 <initializeProfileForContinuousMode+0x288>
     c38:	mov	x25, x28
     c3c:	add	x26, x29, #0x70
     c40:	add	x27, x29, #0x78
     c44:	sub	x22, x22, x20
     c48:	mov	x0, x19
     c4c:	bl	0 <fileno>
     c50:	mov	w28, w0
     c54:	asr	x1, x22, #3
     c58:	mov	x0, x21
     c5c:	mov	x5, x27
     c60:	mov	x4, x26
     c64:	sub	x2, x24, x23
     c68:	add	x3, x29, #0x68
     c6c:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
     c70:	add	x21, x21, x21, lsl #1
     c74:	ldp	x5, x1, [x29, #104]
     c78:	add	x25, x25, x21, lsl #4
     c7c:	mov	w4, w28
     c80:	mov	x0, x20
     c84:	mov	w3, #0x11                  	// #17
     c88:	mov	w2, #0x3                   	// #3
     c8c:	add	x5, x5, #0x50
     c90:	add	x22, x22, x1
     c94:	add	x25, x5, x25
     c98:	mov	x1, x22
     c9c:	mov	x5, x25
     ca0:	bl	0 <mmap>
     ca4:	cmp	x20, x0
     ca8:	b.eq	ce8 <initializeProfileForContinuousMode+0x238>  // b.none
     cac:	adrp	x0, 0 <stderr>
     cb0:	ldr	x0, [x0]
     cb4:	ldr	x21, [x0]
     cb8:	bl	0 <__errno_location>
     cbc:	ldr	w0, [x0]
     cc0:	bl	0 <strerror>
     cc4:	mov	x2, x0
     cc8:	adrp	x1, 0 <fileWriter>
     ccc:	mov	x0, x21
     cd0:	mov	x6, x25
     cd4:	mov	w5, w28
     cd8:	mov	x4, x22
     cdc:	mov	x3, x20
     ce0:	add	x1, x1, #0x0
     ce4:	bl	0 <fprintf>
     ce8:	mov	x1, x19
     cec:	add	x0, x29, #0x64
     cf0:	bl	688 <unlockProfile>
     cf4:	ldr	w2, [x29, #100]
     cf8:	cbz	w2, ad4 <initializeProfileForContinuousMode+0x24>
     cfc:	adrp	x0, 0 <stderr>
     d00:	adrp	x1, 0 <fileWriter>
     d04:	add	x1, x1, #0x0
     d08:	ldr	x0, [x0]
     d0c:	ldr	x0, [x0]
     d10:	bl	0 <fprintf>
     d14:	b	ad4 <initializeProfileForContinuousMode+0x24>
     d18:	mov	x0, x27
     d1c:	mov	x1, x19
     d20:	add	x27, x29, #0x78
     d24:	bl	a18 <writeProfileWithFileObject>
     d28:	cbz	w0, bf8 <initializeProfileForContinuousMode+0x148>
     d2c:	mov	x1, x19
     d30:	add	x0, x29, #0x64
     d34:	bl	688 <unlockProfile>
     d38:	ldr	w2, [x29, #100]
     d3c:	cbz	w2, ad4 <initializeProfileForContinuousMode+0x24>
     d40:	b	cfc <initializeProfileForContinuousMode+0x24c>
     d44:	adrp	x0, 0 <stderr>
     d48:	mov	w3, w25
     d4c:	mov	x2, x19
     d50:	adrp	x1, 0 <fileWriter>
     d54:	ldr	x0, [x0]
     d58:	add	x1, x1, #0x0
     d5c:	ldr	x0, [x0]
     d60:	bl	0 <fprintf>
     d64:	mov	sp, x29
     d68:	ldp	x19, x20, [sp, #16]
     d6c:	ldp	x21, x22, [sp, #32]
     d70:	ldp	x23, x24, [sp, #48]
     d74:	ldp	x25, x26, [sp, #64]
     d78:	ldp	x27, x28, [sp, #80]
     d7c:	ldp	x29, x30, [sp], #128
     d80:	ret
     d84:	adrp	x0, 0 <stderr>
     d88:	mov	w3, w25
     d8c:	mov	x2, x20
     d90:	adrp	x1, 0 <fileWriter>
     d94:	ldr	x0, [x0]
     d98:	add	x1, x1, #0x0
     d9c:	ldr	x0, [x0]
     da0:	bl	0 <fprintf>
     da4:	b	ad4 <initializeProfileForContinuousMode+0x24>
     da8:	adrp	x0, 0 <stderr>
     dac:	mov	w3, w26
     db0:	mov	x2, x28
     db4:	adrp	x1, 0 <fileWriter>
     db8:	ldr	x0, [x0]
     dbc:	add	x1, x1, #0x0
     dc0:	ldr	x0, [x0]
     dc4:	bl	0 <fprintf>
     dc8:	b	d38 <initializeProfileForContinuousMode+0x288>
     dcc:	nop

0000000000000dd0 <parseAndSetFilename>:
     dd0:	stp	x29, x30, [sp, #-112]!
     dd4:	mov	x29, sp
     dd8:	stp	x19, x20, [sp, #16]
     ddc:	adrp	x19, 0 <fileWriter>
     de0:	stp	x21, x22, [sp, #32]
     de4:	add	x21, x19, #0x0
     de8:	stp	x23, x24, [sp, #48]
     dec:	ldr	w23, [x21, #180]
     df0:	cmp	w23, w1
     df4:	b.hi	e48 <parseAndSetFilename+0x78>  // b.pmore
     df8:	ldr	x24, [x19]
     dfc:	stp	x27, x28, [sp, #80]
     e00:	cmp	x0, #0x0
     e04:	mov	x28, x0
     e08:	adrp	x0, 0 <fileWriter>
     e0c:	add	x0, x0, #0x0
     e10:	mov	w20, w1
     e14:	mov	w22, w2
     e18:	csel	x28, x0, x28, eq  // eq = none
     e1c:	cbz	x24, e5c <parseAndSetFilename+0x8c>
     e20:	mov	x1, x28
     e24:	mov	x0, x24
     e28:	bl	0 <strcmp>
     e2c:	cbz	w0, e40 <parseAndSetFilename+0x70>
     e30:	ldr	x0, [x21, #16]
     e34:	cbnz	x0, e64 <parseAndSetFilename+0x94>
     e38:	mov	x0, x24
     e3c:	b	e70 <parseAndSetFilename+0xa0>
     e40:	ldp	x27, x28, [sp, #80]
     e44:	str	w20, [x21, #180]
     e48:	ldp	x19, x20, [sp, #16]
     e4c:	ldp	x21, x22, [sp, #32]
     e50:	ldp	x23, x24, [sp, #48]
     e54:	ldp	x29, x30, [sp], #112
     e58:	ret
     e5c:	ldr	x0, [x21, #16]
     e60:	cbz	x0, e7c <parseAndSetFilename+0xac>
     e64:	bl	0 <free>
     e68:	ldr	x0, [x19]
     e6c:	cbz	x0, e7c <parseAndSetFilename+0xac>
     e70:	add	x1, x19, #0x0
     e74:	ldr	w1, [x1, #8]
     e78:	cbnz	w1, 1194 <parseAndSetFilename+0x3c4>
     e7c:	add	x21, x19, #0x0
     e80:	stp	xzr, xzr, [x21]
     e84:	stp	xzr, xzr, [x21, #16]
     e88:	stp	xzr, xzr, [x21, #32]
     e8c:	stp	xzr, xzr, [x21, #48]
     e90:	stp	xzr, xzr, [x21, #64]
     e94:	stp	xzr, xzr, [x21, #80]
     e98:	stp	xzr, xzr, [x21, #96]
     e9c:	stp	xzr, xzr, [x21, #112]
     ea0:	stp	xzr, xzr, [x21, #128]
     ea4:	stp	xzr, xzr, [x21, #144]
     ea8:	stp	xzr, xzr, [x21, #160]
     eac:	str	xzr, [x21, #176]
     eb0:	cbnz	w22, 1158 <parseAndSetFilename+0x388>
     eb4:	str	x28, [x19]
     eb8:	ldrb	w0, [x28]
     ebc:	cbz	w0, 1274 <parseAndSetFilename+0x4a4>
     ec0:	stp	x25, x26, [sp, #64]
     ec4:	add	x25, x19, #0x0
     ec8:	add	x1, x25, #0x28
     ecc:	adrp	x27, 0 <fileWriter>
     ed0:	mov	w26, #0x0                   	// #0
     ed4:	mov	w22, #0x0                   	// #0
     ed8:	mov	w21, #0x0                   	// #0
     edc:	str	x1, [sp, #104]
     ee0:	add	x1, x27, #0x0
     ee4:	mov	w27, #0x0                   	// #0
     ee8:	str	x1, [sp, #96]
     eec:	nop
     ef0:	add	w2, w27, #0x1
     ef4:	cmp	w0, #0x25
     ef8:	ldrb	w0, [x28, w2, sxtw]
     efc:	b.eq	fbc <parseAndSetFilename+0x1ec>  // b.none
     f00:	mov	w27, w2
     f04:	cbnz	w0, ef0 <parseAndSetFilename+0x120>
     f08:	ldp	x25, x26, [sp, #64]
     f0c:	add	x0, x19, #0x0
     f10:	stp	w21, w22, [x0, #168]
     f14:	add	x0, x19, #0x0
     f18:	str	w20, [x0, #180]
     f1c:	adrp	x0, 0 <fileWriter>
     f20:	add	x0, x0, #0x0
     f24:	cbz	x24, 10f0 <parseAndSetFilename+0x320>
     f28:	bl	0 <getenv>
     f2c:	cbz	x0, fa0 <parseAndSetFilename+0x1d0>
     f30:	adrp	x0, 0 <stderr>
     f34:	cmp	w23, #0x3
     f38:	ldr	x0, [x0]
     f3c:	ldr	x0, [x0]
     f40:	b.eq	11b0 <parseAndSetFilename+0x3e0>  // b.none
     f44:	cmp	w23, #0x4
     f48:	b.eq	117c <parseAndSetFilename+0x3ac>  // b.none
     f4c:	cmp	w23, #0x1
     f50:	b.eq	1170 <parseAndSetFilename+0x3a0>  // b.none
     f54:	cmp	w23, #0x2
     f58:	b.ne	12a0 <parseAndSetFilename+0x4d0>  // b.any
     f5c:	adrp	x3, 0 <fileWriter>
     f60:	add	x3, x3, #0x0
     f64:	ldr	x4, [x19]
     f68:	cmp	w20, #0x3
     f6c:	b.eq	11a4 <parseAndSetFilename+0x3d4>  // b.none
     f70:	cmp	w20, #0x4
     f74:	b.eq	1188 <parseAndSetFilename+0x3b8>  // b.none
     f78:	cmp	w20, #0x2
     f7c:	adrp	x1, 0 <fileWriter>
     f80:	adrp	x5, 0 <fileWriter>
     f84:	add	x1, x1, #0x0
     f88:	add	x5, x5, #0x0
     f8c:	csel	x5, x5, x1, ne  // ne = any
     f90:	adrp	x1, 0 <fileWriter>
     f94:	mov	x2, x24
     f98:	add	x1, x1, #0x0
     f9c:	bl	0 <fprintf>
     fa0:	bl	4e0 <truncateCurrentFile>
     fa4:	ldp	x19, x20, [sp, #16]
     fa8:	ldp	x21, x22, [sp, #32]
     fac:	ldp	x23, x24, [sp, #48]
     fb0:	ldp	x27, x28, [sp, #80]
     fb4:	ldp	x29, x30, [sp], #112
     fb8:	b	ab0 <initializeProfileForContinuousMode>
     fbc:	cmp	w0, #0x70
     fc0:	b.eq	1048 <parseAndSetFilename+0x278>  // b.none
     fc4:	cmp	w0, #0x68
     fc8:	b.eq	1030 <parseAndSetFilename+0x260>  // b.none
     fcc:	cmp	w0, #0x63
     fd0:	b.eq	1060 <parseAndSetFilename+0x290>  // b.none
     fd4:	ldrb	w1, [x28, w2, uxtw]
     fd8:	add	w4, w27, #0x2
     fdc:	mov	w3, w4
     fe0:	mov	w0, #0x0                   	// #0
     fe4:	cmp	w1, #0x6d
     fe8:	b.ne	1004 <parseAndSetFilename+0x234>  // b.any
     fec:	b	119c <parseAndSetFilename+0x3cc>
     ff0:	ldrb	w1, [x28, w3, uxtw]
     ff4:	sub	w0, w0, #0x30
     ff8:	cmp	w1, #0x6d
     ffc:	b.eq	107c <parseAndSetFilename+0x2ac>  // b.none
    1000:	mov	w3, w6
    1004:	add	w0, w0, w0, lsl #2
    1008:	sub	w2, w1, #0x30
    100c:	and	w2, w2, #0xff
    1010:	add	w6, w3, #0x1
    1014:	add	w0, w1, w0, lsl #1
    1018:	cmp	w2, #0x9
    101c:	b.ls	ff0 <parseAndSetFilename+0x220>  // b.plast
    1020:	ldrb	w0, [x28, w4, sxtw]
    1024:	mov	w27, w4
    1028:	cbnz	w0, ef0 <parseAndSetFilename+0x120>
    102c:	b	f08 <parseAndSetFilename+0x138>
    1030:	cbz	w22, 10cc <parseAndSetFilename+0x2fc>
    1034:	add	w27, w27, #0x2
    1038:	add	w22, w22, #0x1
    103c:	ldrb	w0, [x28, w27, sxtw]
    1040:	cbnz	w0, ef0 <parseAndSetFilename+0x120>
    1044:	b	f08 <parseAndSetFilename+0x138>
    1048:	add	w27, w27, #0x2
    104c:	cbz	w21, 10a4 <parseAndSetFilename+0x2d4>
    1050:	ldrb	w0, [x28, w27, sxtw]
    1054:	add	w21, w21, #0x1
    1058:	cbnz	w0, ef0 <parseAndSetFilename+0x120>
    105c:	b	f08 <parseAndSetFilename+0x138>
    1060:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    1064:	cbnz	w0, 11d4 <parseAndSetFilename+0x404>
    1068:	add	w27, w27, #0x3
    106c:	bl	0 <__llvm_profile_enable_continuous_mode>
    1070:	ldrb	w0, [x28, w27, sxtw]
    1074:	cbnz	w0, ef0 <parseAndSetFilename+0x120>
    1078:	b	f08 <parseAndSetFilename+0x138>
    107c:	cmp	w0, #0x0
    1080:	mov	w2, w3
    1084:	csinc	w0, w0, wzr, ne  // ne = any
    1088:	cbnz	w26, 1254 <parseAndSetFilename+0x484>
    108c:	add	w27, w2, #0x1
    1090:	str	w0, [x25, #176]
    1094:	mov	w26, #0x1                   	// #1
    1098:	ldrb	w0, [x28, w27, sxtw]
    109c:	cbnz	w0, ef0 <parseAndSetFilename+0x120>
    10a0:	b	f08 <parseAndSetFilename+0x138>
    10a4:	bl	0 <getpid>
    10a8:	sxtw	x3, w0
    10ac:	ldr	x2, [sp, #96]
    10b0:	add	x0, x25, #0x18
    10b4:	mov	x1, #0x10                  	// #16
    10b8:	mov	w21, #0x1                   	// #1
    10bc:	bl	0 <snprintf>
    10c0:	ldrb	w0, [x28, w27, sxtw]
    10c4:	cbnz	w0, ef0 <parseAndSetFilename+0x120>
    10c8:	b	f08 <parseAndSetFilename+0x138>
    10cc:	ldr	x0, [sp, #104]
    10d0:	mov	w1, #0x80                  	// #128
    10d4:	bl	0 <lprofGetHostName>
    10d8:	cbnz	w0, 1280 <parseAndSetFilename+0x4b0>
    10dc:	add	w27, w27, #0x2
    10e0:	mov	w22, #0x1                   	// #1
    10e4:	ldrb	w0, [x28, w27, sxtw]
    10e8:	cbnz	w0, ef0 <parseAndSetFilename+0x120>
    10ec:	b	f08 <parseAndSetFilename+0x138>
    10f0:	bl	0 <getenv>
    10f4:	cbz	x0, fa0 <parseAndSetFilename+0x1d0>
    10f8:	adrp	x0, 0 <stderr>
    10fc:	cmp	w20, #0x3
    1100:	ldr	x2, [x19]
    1104:	ldr	x0, [x0]
    1108:	ldr	x0, [x0]
    110c:	b.eq	11c8 <parseAndSetFilename+0x3f8>  // b.none
    1110:	cmp	w20, #0x4
    1114:	b.eq	11bc <parseAndSetFilename+0x3ec>  // b.none
    1118:	cmp	w20, #0x2
    111c:	adrp	x1, 0 <fileWriter>
    1120:	adrp	x3, 0 <fileWriter>
    1124:	add	x1, x1, #0x0
    1128:	add	x3, x3, #0x0
    112c:	csel	x3, x3, x1, ne  // ne = any
    1130:	adrp	x1, 0 <fileWriter>
    1134:	add	x1, x1, #0x0
    1138:	bl	0 <fprintf>
    113c:	bl	4e0 <truncateCurrentFile>
    1140:	ldp	x19, x20, [sp, #16]
    1144:	ldp	x21, x22, [sp, #32]
    1148:	ldp	x23, x24, [sp, #48]
    114c:	ldp	x27, x28, [sp, #80]
    1150:	ldp	x29, x30, [sp], #112
    1154:	b	ab0 <initializeProfileForContinuousMode>
    1158:	mov	x0, x28
    115c:	bl	0 <strdup>
    1160:	mov	w1, #0x1                   	// #1
    1164:	str	x0, [x19]
    1168:	str	w1, [x21, #8]
    116c:	b	eb8 <parseAndSetFilename+0xe8>
    1170:	adrp	x3, 0 <fileWriter>
    1174:	add	x3, x3, #0x0
    1178:	b	f64 <parseAndSetFilename+0x194>
    117c:	adrp	x3, 0 <fileWriter>
    1180:	add	x3, x3, #0x0
    1184:	b	f64 <parseAndSetFilename+0x194>
    1188:	adrp	x5, 0 <fileWriter>
    118c:	add	x5, x5, #0x0
    1190:	b	f90 <parseAndSetFilename+0x1c0>
    1194:	bl	0 <free>
    1198:	b	e7c <parseAndSetFilename+0xac>
    119c:	mov	w0, #0x1                   	// #1
    11a0:	b	1088 <parseAndSetFilename+0x2b8>
    11a4:	adrp	x5, 0 <fileWriter>
    11a8:	add	x5, x5, #0x0
    11ac:	b	f90 <parseAndSetFilename+0x1c0>
    11b0:	adrp	x3, 0 <fileWriter>
    11b4:	add	x3, x3, #0x0
    11b8:	b	f64 <parseAndSetFilename+0x194>
    11bc:	adrp	x3, 0 <fileWriter>
    11c0:	add	x3, x3, #0x0
    11c4:	b	1130 <parseAndSetFilename+0x360>
    11c8:	adrp	x3, 0 <fileWriter>
    11cc:	add	x3, x3, #0x0
    11d0:	b	1130 <parseAndSetFilename+0x360>
    11d4:	adrp	x0, 0 <stderr>
    11d8:	adrp	x1, 0 <fileWriter>
    11dc:	mov	x2, x28
    11e0:	add	x1, x1, #0x0
    11e4:	ldr	x0, [x0]
    11e8:	ldr	x0, [x0]
    11ec:	bl	0 <fprintf>
    11f0:	ldr	x0, [x19]
    11f4:	add	x1, x19, #0x0
    11f8:	cbz	x0, 1204 <parseAndSetFilename+0x434>
    11fc:	ldr	w1, [x1, #8]
    1200:	cbnz	w1, 124c <parseAndSetFilename+0x47c>
    1204:	add	x1, x19, #0x0
    1208:	adrp	x2, 0 <fileWriter>
    120c:	add	x2, x2, #0x0
    1210:	str	x2, [x19]
    1214:	stp	xzr, xzr, [x1, #8]
    1218:	stp	xzr, xzr, [x1, #24]
    121c:	stp	xzr, xzr, [x1, #40]
    1220:	stp	xzr, xzr, [x1, #56]
    1224:	stp	xzr, xzr, [x1, #72]
    1228:	stp	xzr, xzr, [x1, #88]
    122c:	stp	xzr, xzr, [x1, #104]
    1230:	stp	xzr, xzr, [x1, #120]
    1234:	stp	xzr, xzr, [x1, #136]
    1238:	stp	xzr, xzr, [x1, #152]
    123c:	str	xzr, [x1, #168]
    1240:	str	wzr, [x1, #176]
    1244:	ldp	x25, x26, [sp, #64]
    1248:	b	f14 <parseAndSetFilename+0x144>
    124c:	bl	0 <free>
    1250:	b	1204 <parseAndSetFilename+0x434>
    1254:	adrp	x0, 0 <stderr>
    1258:	mov	x2, x28
    125c:	adrp	x1, 0 <fileWriter>
    1260:	add	x1, x1, #0x0
    1264:	ldr	x0, [x0]
    1268:	ldr	x0, [x0]
    126c:	bl	0 <fprintf>
    1270:	b	11f0 <parseAndSetFilename+0x420>
    1274:	mov	w22, #0x0                   	// #0
    1278:	mov	w21, #0x0                   	// #0
    127c:	b	f0c <parseAndSetFilename+0x13c>
    1280:	adrp	x0, 0 <stderr>
    1284:	mov	x2, x28
    1288:	adrp	x1, 0 <fileWriter>
    128c:	add	x1, x1, #0x0
    1290:	ldr	x0, [x0]
    1294:	ldr	x0, [x0]
    1298:	bl	0 <fprintf>
    129c:	b	11f0 <parseAndSetFilename+0x420>
    12a0:	adrp	x3, 0 <fileWriter>
    12a4:	add	x3, x3, #0x0
    12a8:	b	f64 <parseAndSetFilename+0x194>
    12ac:	nop

00000000000012b0 <__llvm_profile_set_file_object>:
    12b0:	stp	x29, x30, [sp, #-32]!
    12b4:	mov	x29, sp
    12b8:	stp	x19, x20, [sp, #16]
    12bc:	mov	x19, x0
    12c0:	mov	w20, w1
    12c4:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    12c8:	cbnz	w0, 12e8 <__llvm_profile_set_file_object+0x38>
    12cc:	adrp	x0, 0 <fileWriter>
    12d0:	add	x0, x0, #0x0
    12d4:	str	w20, [x0, #184]
    12d8:	str	x19, [x0, #192]
    12dc:	ldp	x19, x20, [sp, #16]
    12e0:	ldp	x29, x30, [sp], #32
    12e4:	ret
    12e8:	adrp	x1, 0 <stderr>
    12ec:	mov	x0, x19
    12f0:	ldr	x1, [x1]
    12f4:	ldr	x19, [x1]
    12f8:	bl	0 <fileno>
    12fc:	mov	w2, w0
    1300:	adrp	x1, 0 <fileWriter>
    1304:	mov	x0, x19
    1308:	add	x1, x1, #0x0
    130c:	ldp	x19, x20, [sp, #16]
    1310:	ldp	x29, x30, [sp], #32
    1314:	b	0 <fprintf>

0000000000001318 <lprofCreateBufferIOInternal>:
    1318:	stp	x29, x30, [sp, #-32]!
    131c:	adrp	x2, 0 <free>
    1320:	adrp	x3, 0 <FreeHook>
    1324:	mov	x29, sp
    1328:	ldr	x2, [x2]
    132c:	stp	x19, x20, [sp, #16]
    1330:	mov	w19, w1
    1334:	mov	x20, x0
    1338:	str	x2, [x3]
    133c:	mov	w0, w19
    1340:	mov	x1, #0x1                   	// #1
    1344:	bl	0 <calloc>
    1348:	mov	x3, x0
    134c:	adrp	x4, 0 <VPBufferSize>
    1350:	adrp	x2, 0 <DynamicBufferIOBuffer>
    1354:	mov	x1, #0x1                   	// #1
    1358:	mov	x0, #0x10                  	// #16
    135c:	str	w19, [x4]
    1360:	str	x3, [x2]
    1364:	bl	0 <calloc>
    1368:	adrp	x2, 0 <fileWriter>
    136c:	add	x2, x2, #0x0
    1370:	stp	x2, x20, [x0]
    1374:	bl	0 <lprofCreateBufferIO>
    1378:	mov	w1, #0x1                   	// #1
    137c:	ldp	x19, x20, [sp, #16]
    1380:	str	w1, [x0, #8]
    1384:	ldp	x29, x30, [sp], #32
    1388:	ret
    138c:	nop

0000000000001390 <__llvm_profile_get_path_prefix>:
    1390:	stp	x29, x30, [sp, #-48]!
    1394:	mov	x29, sp
    1398:	stp	x19, x20, [sp, #16]
    139c:	adrp	x20, 0 <fileWriter>
    13a0:	add	x20, x20, #0x0
    13a4:	stp	x21, x22, [sp, #32]
    13a8:	ldr	x19, [x20, #16]
    13ac:	cbz	x19, 13c8 <__llvm_profile_get_path_prefix+0x38>
    13b0:	mov	sp, x29
    13b4:	mov	x0, x19
    13b8:	ldp	x19, x20, [sp, #16]
    13bc:	ldp	x21, x22, [sp, #32]
    13c0:	ldp	x29, x30, [sp], #48
    13c4:	ret
    13c8:	bl	108 <getCurFilenameLength>
    13cc:	add	w0, w0, #0x1
    13d0:	mov	w1, #0x0                   	// #0
    13d4:	sxtw	x0, w0
    13d8:	add	x0, x0, #0xf
    13dc:	and	x0, x0, #0xfffffffffffffff0
    13e0:	sub	sp, sp, x0
    13e4:	mov	x0, sp
    13e8:	bl	1e0 <getCurFilename>
    13ec:	mov	x22, x0
    13f0:	cbz	x0, 1464 <__llvm_profile_get_path_prefix+0xd4>
    13f4:	bl	0 <lprofFindLastDirSeparator>
    13f8:	cbz	x0, 1464 <__llvm_profile_get_path_prefix+0xd4>
    13fc:	sub	x21, x0, x22
    1400:	add	w0, w21, #0x2
    1404:	add	w21, w21, #0x1
    1408:	sxtw	x0, w0
    140c:	bl	0 <malloc>
    1410:	mov	x19, x0
    1414:	cbz	x0, 1444 <__llvm_profile_get_path_prefix+0xb4>
    1418:	mov	x1, x22
    141c:	sxtw	x2, w21
    1420:	bl	0 <memcpy>
    1424:	strb	wzr, [x19, w21, sxtw]
    1428:	str	x19, [x20, #16]
    142c:	mov	x0, x19
    1430:	mov	sp, x29
    1434:	ldp	x19, x20, [sp, #16]
    1438:	ldp	x21, x22, [sp, #32]
    143c:	ldp	x29, x30, [sp], #48
    1440:	ret
    1444:	adrp	x0, 0 <stderr>
    1448:	adrp	x2, 0 <fileWriter>
    144c:	adrp	x1, 0 <fileWriter>
    1450:	add	x2, x2, #0x0
    1454:	ldr	x0, [x0]
    1458:	add	x1, x1, #0x0
    145c:	ldr	x0, [x0]
    1460:	bl	0 <fprintf>
    1464:	mov	sp, x29
    1468:	adrp	x19, 0 <fileWriter>
    146c:	add	x19, x19, #0x0
    1470:	mov	x0, x19
    1474:	ldp	x19, x20, [sp, #16]
    1478:	ldp	x21, x22, [sp, #32]
    147c:	ldp	x29, x30, [sp], #48
    1480:	ret
    1484:	nop

0000000000001488 <__llvm_profile_get_filename>:
    1488:	stp	x29, x30, [sp, #-32]!
    148c:	mov	x29, sp
    1490:	str	x19, [sp, #16]
    1494:	bl	108 <getCurFilenameLength>
    1498:	add	w0, w0, #0x1
    149c:	sxtw	x0, w0
    14a0:	bl	0 <malloc>
    14a4:	cbz	x0, 14d4 <__llvm_profile_get_filename+0x4c>
    14a8:	mov	x19, x0
    14ac:	mov	w1, #0x1                   	// #1
    14b0:	bl	1e0 <getCurFilename>
    14b4:	cmp	x0, #0x0
    14b8:	adrp	x1, 0 <fileWriter>
    14bc:	add	x1, x1, #0x0
    14c0:	csel	x19, x1, x19, eq  // eq = none
    14c4:	mov	x0, x19
    14c8:	ldr	x19, [sp, #16]
    14cc:	ldp	x29, x30, [sp], #32
    14d0:	ret
    14d4:	adrp	x0, 0 <stderr>
    14d8:	adrp	x2, 0 <fileWriter>
    14dc:	adrp	x1, 0 <fileWriter>
    14e0:	add	x2, x2, #0x0
    14e4:	ldr	x0, [x0]
    14e8:	add	x1, x1, #0x0
    14ec:	adrp	x19, 0 <fileWriter>
    14f0:	add	x19, x19, #0x0
    14f4:	ldr	x0, [x0]
    14f8:	bl	0 <fprintf>
    14fc:	b	14c4 <__llvm_profile_get_filename+0x3c>

0000000000001500 <__llvm_profile_initialize_file>:
    1500:	stp	x29, x30, [sp, #-32]!
    1504:	adrp	x0, 0 <fileWriter>
    1508:	add	x0, x0, #0x0
    150c:	mov	x29, sp
    1510:	stp	x19, x20, [sp, #16]
    1514:	adrp	x19, 0 <__llvm_profile_filename>
    1518:	ldr	x1, [x19]
    151c:	ldrb	w20, [x1]
    1520:	bl	0 <getenv>
    1524:	cbz	x0, 1544 <__llvm_profile_initialize_file+0x44>
    1528:	ldrb	w1, [x0]
    152c:	cbz	w1, 1544 <__llvm_profile_initialize_file+0x44>
    1530:	ldp	x19, x20, [sp, #16]
    1534:	mov	w2, #0x1                   	// #1
    1538:	ldp	x29, x30, [sp], #32
    153c:	mov	w1, #0x3                   	// #3
    1540:	b	dd0 <parseAndSetFilename>
    1544:	cbnz	w20, 1560 <__llvm_profile_initialize_file+0x60>
    1548:	ldp	x19, x20, [sp, #16]
    154c:	mov	w1, #0x1                   	// #1
    1550:	ldp	x29, x30, [sp], #32
    1554:	mov	x0, #0x0                   	// #0
    1558:	mov	w2, #0x0                   	// #0
    155c:	b	dd0 <parseAndSetFilename>
    1560:	ldr	x0, [x19]
    1564:	mov	w1, #0x2                   	// #2
    1568:	ldp	x19, x20, [sp, #16]
    156c:	mov	w2, #0x0                   	// #0
    1570:	ldp	x29, x30, [sp], #32
    1574:	b	dd0 <parseAndSetFilename>

0000000000001578 <__llvm_profile_set_filename>:
    1578:	stp	x29, x30, [sp, #-32]!
    157c:	mov	x29, sp
    1580:	str	x19, [sp, #16]
    1584:	mov	x19, x0
    1588:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    158c:	cbz	w0, 159c <__llvm_profile_set_filename+0x24>
    1590:	ldr	x19, [sp, #16]
    1594:	ldp	x29, x30, [sp], #32
    1598:	ret
    159c:	mov	x0, x19
    15a0:	mov	w2, #0x1                   	// #1
    15a4:	ldr	x19, [sp, #16]
    15a8:	mov	w1, #0x4                   	// #4
    15ac:	ldp	x29, x30, [sp], #32
    15b0:	b	dd0 <parseAndSetFilename>
    15b4:	nop

00000000000015b8 <__llvm_profile_write_file>:
    15b8:	stp	x29, x30, [sp, #-48]!
    15bc:	mov	x29, sp
    15c0:	stp	x19, x20, [sp, #16]
    15c4:	stp	x21, x22, [sp, #32]
    15c8:	bl	0 <lprofProfileDumped>
    15cc:	cbnz	w0, 15d8 <__llvm_profile_write_file+0x20>
    15d0:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    15d4:	cbz	w0, 1614 <__llvm_profile_write_file+0x5c>
    15d8:	adrp	x0, 0 <stderr>
    15dc:	adrp	x2, 0 <fileWriter>
    15e0:	adrp	x1, 0 <fileWriter>
    15e4:	add	x2, x2, #0x0
    15e8:	ldr	x0, [x0]
    15ec:	add	x1, x1, #0x0
    15f0:	mov	w19, #0x0                   	// #0
    15f4:	ldr	x0, [x0]
    15f8:	bl	0 <fprintf>
    15fc:	mov	sp, x29
    1600:	mov	w0, w19
    1604:	ldp	x19, x20, [sp, #16]
    1608:	ldp	x21, x22, [sp, #32]
    160c:	ldp	x29, x30, [sp], #48
    1610:	ret
    1614:	bl	108 <getCurFilenameLength>
    1618:	add	w0, w0, #0x1
    161c:	mov	w1, #0x0                   	// #0
    1620:	sxtw	x0, w0
    1624:	add	x0, x0, #0xf
    1628:	and	x0, x0, #0xfffffffffffffff0
    162c:	sub	sp, sp, x0
    1630:	mov	x0, sp
    1634:	bl	1e0 <getCurFilename>
    1638:	mov	x20, x0
    163c:	cbz	x0, 16dc <__llvm_profile_write_file+0x124>
    1640:	bl	0 <__llvm_profile_get_version>
    1644:	and	x0, x0, #0xffffffffffffff
    1648:	cmp	x0, #0x5
    164c:	b.ne	16ac <__llvm_profile_write_file+0xf4>  // b.any
    1650:	bl	0 <lprofSuspendSigKill>
    1654:	mov	w21, w0
    1658:	mov	x0, x20
    165c:	bl	828 <writeFile>
    1660:	mov	w19, w0
    1664:	cbnz	w0, 1678 <__llvm_profile_write_file+0xc0>
    1668:	cmp	w21, #0x1
    166c:	b.ne	15fc <__llvm_profile_write_file+0x44>  // b.any
    1670:	bl	0 <lprofRestoreSigKill>
    1674:	b	15fc <__llvm_profile_write_file+0x44>
    1678:	adrp	x0, 0 <stderr>
    167c:	ldr	x0, [x0]
    1680:	ldr	x22, [x0]
    1684:	bl	0 <__errno_location>
    1688:	ldr	w0, [x0]
    168c:	bl	0 <strerror>
    1690:	mov	x3, x0
    1694:	mov	x2, x20
    1698:	mov	x0, x22
    169c:	adrp	x1, 0 <fileWriter>
    16a0:	add	x1, x1, #0x0
    16a4:	bl	0 <fprintf>
    16a8:	b	1668 <__llvm_profile_write_file+0xb0>
    16ac:	adrp	x0, 0 <stderr>
    16b0:	mov	w19, #0xffffffff            	// #-1
    16b4:	ldr	x0, [x0]
    16b8:	ldr	x20, [x0]
    16bc:	bl	0 <__llvm_profile_get_version>
    16c0:	adrp	x1, 0 <fileWriter>
    16c4:	mov	x3, x0
    16c8:	add	x1, x1, #0x0
    16cc:	mov	x0, x20
    16d0:	mov	w2, #0x5                   	// #5
    16d4:	bl	0 <fprintf>
    16d8:	b	15fc <__llvm_profile_write_file+0x44>
    16dc:	adrp	x0, 0 <stderr>
    16e0:	adrp	x2, 0 <fileWriter>
    16e4:	adrp	x1, 0 <fileWriter>
    16e8:	add	x2, x2, #0x0
    16ec:	ldr	x0, [x0]
    16f0:	add	x1, x1, #0x0
    16f4:	mov	w19, #0xffffffff            	// #-1
    16f8:	ldr	x0, [x0]
    16fc:	bl	0 <fprintf>
    1700:	b	15fc <__llvm_profile_write_file+0x44>
    1704:	nop

0000000000001708 <writeFileWithoutReturn>:
    1708:	b	15b8 <__llvm_profile_write_file>
    170c:	nop

0000000000001710 <__llvm_profile_dump>:
    1710:	stp	x29, x30, [sp, #-32]!
    1714:	adrp	x0, 0 <fileWriter>
    1718:	add	x0, x0, #0x0
    171c:	mov	x29, sp
    1720:	ldr	w1, [x0, #176]
    1724:	ldr	w0, [x0, #184]
    1728:	str	x19, [sp, #16]
    172c:	orr	w0, w0, w1
    1730:	cbnz	w0, 1754 <__llvm_profile_dump+0x44>
    1734:	adrp	x0, 0 <stderr>
    1738:	adrp	x2, 0 <fileWriter>
    173c:	adrp	x1, 0 <fileWriter>
    1740:	add	x2, x2, #0x0
    1744:	ldr	x0, [x0]
    1748:	add	x1, x1, #0x0
    174c:	ldr	x0, [x0]
    1750:	bl	0 <fprintf>
    1754:	bl	15b8 <__llvm_profile_write_file>
    1758:	mov	w19, w0
    175c:	bl	0 <lprofSetProfileDumped>
    1760:	mov	w0, w19
    1764:	ldr	x19, [sp, #16]
    1768:	ldp	x29, x30, [sp], #32
    176c:	ret

0000000000001770 <__llvm_orderfile_write_file>:
    1770:	stp	x29, x30, [sp, #-48]!
    1774:	mov	x29, sp
    1778:	stp	x19, x20, [sp, #16]
    177c:	stp	x21, x22, [sp, #32]
    1780:	bl	108 <getCurFilenameLength>
    1784:	add	w0, w0, #0x7
    1788:	mov	w1, #0x1                   	// #1
    178c:	sxtw	x0, w0
    1790:	add	x0, x0, #0xf
    1794:	and	x0, x0, #0xfffffffffffffff0
    1798:	sub	sp, sp, x0
    179c:	mov	x19, sp
    17a0:	mov	x0, x19
    17a4:	bl	1e0 <getCurFilename>
    17a8:	cbz	x0, 18f4 <__llvm_orderfile_write_file+0x184>
    17ac:	mov	x20, x0
    17b0:	bl	0 <strlen>
    17b4:	adrp	x1, 0 <fileWriter>
    17b8:	add	x1, x1, #0x0
    17bc:	add	x3, x19, w0, sxtw
    17c0:	add	w2, w0, #0x6
    17c4:	ldr	w4, [x1]
    17c8:	str	w4, [x19, w0, sxtw]
    17cc:	ldrh	w0, [x1, #4]
    17d0:	strh	w0, [x3, #4]
    17d4:	strb	wzr, [x19, w2, sxtw]
    17d8:	bl	0 <__llvm_profile_get_version>
    17dc:	and	x0, x0, #0xffffffffffffff
    17e0:	cmp	x0, #0x5
    17e4:	b.ne	18c4 <__llvm_orderfile_write_file+0x154>  // b.any
    17e8:	bl	0 <lprofSuspendSigKill>
    17ec:	mov	w21, w0
    17f0:	adrp	x1, 0 <fileWriter>
    17f4:	mov	x0, x20
    17f8:	add	x1, x1, #0x0
    17fc:	bl	0 <fopen>
    1800:	mov	x19, x0
    1804:	cbz	x0, 191c <__llvm_orderfile_write_file+0x1ac>
    1808:	adrp	x0, 0 <free>
    180c:	adrp	x1, 0 <FreeHook>
    1810:	ldr	x0, [x0]
    1814:	str	x0, [x1]
    1818:	bl	6f8 <setupIOBuffer>
    181c:	bl	0 <__llvm_profile_begin_orderfile>
    1820:	mov	x3, x19
    1824:	mov	x2, #0x20000               	// #131072
    1828:	mov	x1, #0x4                   	// #4
    182c:	bl	0 <fwrite>
    1830:	cmp	x0, #0x20, lsl #12
    1834:	b.ne	1864 <__llvm_orderfile_write_file+0xf4>  // b.any
    1838:	mov	x0, x19
    183c:	bl	0 <fclose>
    1840:	cmp	w21, #0x1
    1844:	mov	w19, #0x0                   	// #0
    1848:	b.eq	18a8 <__llvm_orderfile_write_file+0x138>  // b.none
    184c:	mov	sp, x29
    1850:	mov	w0, w19
    1854:	ldp	x19, x20, [sp, #16]
    1858:	ldp	x21, x22, [sp, #32]
    185c:	ldp	x29, x30, [sp], #48
    1860:	ret
    1864:	mov	x0, x19
    1868:	adrp	x22, 0 <stderr>
    186c:	mov	w19, #0x1                   	// #1
    1870:	bl	0 <fclose>
    1874:	ldr	x22, [x22]
    1878:	bl	0 <__errno_location>
    187c:	ldr	w0, [x0]
    1880:	ldr	x22, [x22]
    1884:	bl	0 <strerror>
    1888:	mov	x3, x0
    188c:	mov	x2, x20
    1890:	mov	x0, x22
    1894:	adrp	x1, 0 <fileWriter>
    1898:	add	x1, x1, #0x0
    189c:	bl	0 <fprintf>
    18a0:	cmp	w21, #0x1
    18a4:	b.ne	184c <__llvm_orderfile_write_file+0xdc>  // b.any
    18a8:	bl	0 <lprofRestoreSigKill>
    18ac:	mov	sp, x29
    18b0:	mov	w0, w19
    18b4:	ldp	x19, x20, [sp, #16]
    18b8:	ldp	x21, x22, [sp, #32]
    18bc:	ldp	x29, x30, [sp], #48
    18c0:	ret
    18c4:	adrp	x0, 0 <stderr>
    18c8:	mov	w19, #0xffffffff            	// #-1
    18cc:	ldr	x0, [x0]
    18d0:	ldr	x20, [x0]
    18d4:	bl	0 <__llvm_profile_get_version>
    18d8:	adrp	x1, 0 <fileWriter>
    18dc:	mov	x3, x0
    18e0:	add	x1, x1, #0x0
    18e4:	mov	x0, x20
    18e8:	mov	w2, #0x5                   	// #5
    18ec:	bl	0 <fprintf>
    18f0:	b	184c <__llvm_orderfile_write_file+0xdc>
    18f4:	adrp	x0, 0 <stderr>
    18f8:	adrp	x2, 0 <fileWriter>
    18fc:	adrp	x1, 0 <fileWriter>
    1900:	add	x2, x2, #0x0
    1904:	ldr	x0, [x0]
    1908:	add	x1, x1, #0x0
    190c:	mov	w19, #0xffffffff            	// #-1
    1910:	ldr	x0, [x0]
    1914:	bl	0 <fprintf>
    1918:	b	184c <__llvm_orderfile_write_file+0xdc>
    191c:	adrp	x22, 0 <stderr>
    1920:	mov	x2, x20
    1924:	adrp	x1, 0 <fileWriter>
    1928:	mov	w19, #0xffffffff            	// #-1
    192c:	ldr	x0, [x22]
    1930:	add	x1, x1, #0x0
    1934:	ldr	x0, [x0]
    1938:	bl	0 <fprintf>
    193c:	b	1874 <__llvm_orderfile_write_file+0x104>

0000000000001940 <__llvm_orderfile_dump>:
    1940:	b	1770 <__llvm_orderfile_write_file>
    1944:	nop

0000000000001948 <__llvm_profile_register_write_file_atexit>:
    1948:	stp	x29, x30, [sp, #-32]!
    194c:	mov	x29, sp
    1950:	str	x19, [sp, #16]
    1954:	adrp	x19, 0 <fileWriter>
    1958:	add	x19, x19, #0x0
    195c:	ldr	w0, [x19, #200]
    1960:	cbz	w0, 1974 <__llvm_profile_register_write_file_atexit+0x2c>
    1964:	mov	w0, #0x0                   	// #0
    1968:	ldr	x19, [sp, #16]
    196c:	ldp	x29, x30, [sp], #32
    1970:	ret
    1974:	bl	0 <lprofSetupValueProfiler>
    1978:	mov	w1, #0x1                   	// #1
    197c:	str	w1, [x19, #200]
    1980:	ldr	x19, [sp, #16]
    1984:	adrp	x0, 0 <fileWriter>
    1988:	ldp	x29, x30, [sp], #32
    198c:	add	x0, x0, #0x0
    1990:	b	0 <atexit>

InstrProfilingMerge.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofGetLoadModuleSignature>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	str	x25, [sp, #64]
  18:	bl	0 <__llvm_profile_end_counters>
  1c:	mov	x19, x0
  20:	bl	0 <__llvm_profile_begin_counters>
  24:	mov	x24, x0
  28:	bl	0 <__llvm_profile_begin_data>
  2c:	mov	x20, x0
  30:	bl	0 <__llvm_profile_end_data>
  34:	mov	x1, x0
  38:	mov	x0, x20
  3c:	bl	0 <__llvm_profile_get_data_size>
  40:	mov	x22, x0
  44:	sub	x19, x19, x24
  48:	bl	0 <__llvm_profile_end_names>
  4c:	mov	x21, x0
  50:	bl	0 <__llvm_profile_begin_names>
  54:	mov	x23, x0
  58:	bl	0 <__llvm_profile_end_vnodes>
  5c:	mov	x20, x0
  60:	bl	0 <__llvm_profile_begin_vnodes>
  64:	mov	x25, x0
  68:	sub	x20, x20, x25
  6c:	bl	0 <__llvm_profile_begin_data>
  70:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  74:	sub	x21, x21, x23
  78:	asr	x20, x20, #3
  7c:	movk	x2, #0xaaab
  80:	asr	x19, x19, #3
  84:	lsl	x1, x22, #20
  88:	add	x21, x1, x21, lsl #40
  8c:	mov	x1, x0
  90:	mul	x20, x20, x2
  94:	lsl	x20, x20, #10
  98:	add	x19, x20, x19, lsl #30
  9c:	add	x0, x19, x21
  a0:	cbz	x22, ac <lprofGetLoadModuleSignature+0xac>
  a4:	ldr	x1, [x1]
  a8:	add	x0, x0, x1
  ac:	ldp	x19, x20, [sp, #16]
  b0:	ldp	x21, x22, [sp, #32]
  b4:	ldp	x23, x24, [sp, #48]
  b8:	ldr	x25, [sp, #64]
  bc:	ldp	x29, x30, [sp], #80
  c0:	ret
  c4:	nop

00000000000000c8 <__llvm_profile_check_compatibility>:
  c8:	cmp	x1, #0x4f
  cc:	b.hi	d8 <__llvm_profile_check_compatibility+0x10>  // b.pmore
  d0:	mov	w0, #0x1                   	// #1
  d4:	ret
  d8:	stp	x29, x30, [sp, #-64]!
  dc:	mov	x29, sp
  e0:	stp	x21, x22, [sp, #32]
  e4:	ldr	x21, [x0]
  e8:	stp	x19, x20, [sp, #16]
  ec:	mov	x20, x1
  f0:	mov	x19, x0
  f4:	ldr	x22, [x0, #16]
  f8:	bl	0 <__llvm_profile_get_magic>
  fc:	cmp	x21, x0
 100:	b.eq	118 <__llvm_profile_check_compatibility+0x50>  // b.none
 104:	mov	w0, #0x1                   	// #1
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldp	x21, x22, [sp, #32]
 110:	ldp	x29, x30, [sp], #64
 114:	ret
 118:	ldr	x21, [x19, #8]
 11c:	bl	0 <__llvm_profile_get_version>
 120:	cmp	x21, x0
 124:	b.ne	104 <__llvm_profile_check_compatibility+0x3c>  // b.any
 128:	str	x23, [sp, #48]
 12c:	ldr	x23, [x19, #16]
 130:	bl	0 <__llvm_profile_begin_data>
 134:	mov	x21, x0
 138:	bl	0 <__llvm_profile_end_data>
 13c:	mov	x1, x0
 140:	mov	x0, x21
 144:	bl	0 <__llvm_profile_get_data_size>
 148:	cmp	x23, x0
 14c:	b.eq	158 <__llvm_profile_check_compatibility+0x90>  // b.none
 150:	ldr	x23, [sp, #48]
 154:	b	104 <__llvm_profile_check_compatibility+0x3c>
 158:	ldr	x23, [x19, #32]
 15c:	bl	0 <__llvm_profile_end_counters>
 160:	mov	x21, x0
 164:	bl	0 <__llvm_profile_begin_counters>
 168:	sub	x21, x21, x0
 16c:	cmp	x23, x21, asr #3
 170:	b.ne	150 <__llvm_profile_check_compatibility+0x88>  // b.any
 174:	ldr	x23, [x19, #48]
 178:	bl	0 <__llvm_profile_end_names>
 17c:	mov	x21, x0
 180:	bl	0 <__llvm_profile_begin_names>
 184:	sub	x21, x21, x0
 188:	cmp	x23, x21
 18c:	b.ne	150 <__llvm_profile_check_compatibility+0x88>  // b.any
 190:	ldr	x0, [x19, #72]
 194:	cmp	x0, #0x1
 198:	b.ne	150 <__llvm_profile_check_compatibility+0x88>  // b.any
 19c:	ldr	x0, [x19, #16]
 1a0:	ldr	x2, [x19, #32]
 1a4:	ldr	x1, [x19, #48]
 1a8:	add	x0, x0, x0, lsl #1
 1ac:	add	x1, x1, x2
 1b0:	add	x0, x1, x0, lsl #4
 1b4:	add	x0, x0, #0x50
 1b8:	cmp	x0, x20
 1bc:	b.hi	150 <__llvm_profile_check_compatibility+0x88>  // b.pmore
 1c0:	add	x19, x19, #0x50
 1c4:	mov	x0, #0x30                  	// #48
 1c8:	madd	x22, x22, x0, x19
 1cc:	bl	0 <__llvm_profile_begin_data>
 1d0:	cmp	x19, x22
 1d4:	b.cc	20c <__llvm_profile_check_compatibility+0x144>  // b.lo, b.ul, b.last
 1d8:	b	224 <__llvm_profile_check_compatibility+0x15c>
 1dc:	ldr	x1, [x0, #8]
 1e0:	ldr	x2, [x19, #8]
 1e4:	cmp	x2, x1
 1e8:	b.ne	150 <__llvm_profile_check_compatibility+0x88>  // b.any
 1ec:	ldr	w1, [x0, #40]
 1f0:	add	x19, x19, #0x30
 1f4:	ldur	w2, [x19, #-8]
 1f8:	add	x0, x0, #0x30
 1fc:	cmp	w2, w1
 200:	b.ne	150 <__llvm_profile_check_compatibility+0x88>  // b.any
 204:	cmp	x22, x19
 208:	b.ls	224 <__llvm_profile_check_compatibility+0x15c>  // b.plast
 20c:	ldr	x1, [x0]
 210:	ldr	x2, [x19]
 214:	cmp	x2, x1
 218:	b.eq	1dc <__llvm_profile_check_compatibility+0x114>  // b.none
 21c:	ldr	x23, [sp, #48]
 220:	b	104 <__llvm_profile_check_compatibility+0x3c>
 224:	mov	w0, #0x0                   	// #0
 228:	ldr	x23, [sp, #48]
 22c:	b	108 <__llvm_profile_check_compatibility+0x40>

0000000000000230 <__llvm_profile_merge_from_buffer>:
 230:	stp	x29, x30, [sp, #-64]!
 234:	mov	x29, sp
 238:	stp	x23, x24, [sp, #48]
 23c:	mov	x23, x0
 240:	stp	x19, x20, [sp, #16]
 244:	add	x19, x0, #0x50
 248:	ldr	x0, [x0, #16]
 24c:	stp	x21, x22, [sp, #32]
 250:	ldr	x20, [x23, #32]
 254:	add	x0, x0, x0, lsl #1
 258:	ldr	x22, [x23, #48]
 25c:	add	x21, x19, x0, lsl #4
 260:	lsl	x20, x20, #3
 264:	mov	x0, x22
 268:	add	x22, x20, x22
 26c:	bl	0 <__llvm_profile_get_num_padding_bytes>
 270:	add	x22, x22, w0, uxtb
 274:	bl	0 <__llvm_profile_begin_data>
 278:	add	x22, x21, x22
 27c:	cmp	x19, x21
 280:	b.cs	31c <__llvm_profile_merge_from_buffer+0xec>  // b.hs, b.nlast
 284:	mov	x20, x0
 288:	adrp	x24, 8 <lprofGetLoadModuleSignature+0x8>
 28c:	nop
 290:	ldr	w7, [x19, #40]
 294:	ldr	x6, [x19, #16]
 298:	ldr	x1, [x23, #56]
 29c:	ldr	x4, [x20, #16]
 2a0:	sub	x6, x6, x1
 2a4:	and	x6, x6, #0xfffffffffffffff8
 2a8:	cbz	w7, 2d4 <__llvm_profile_merge_from_buffer+0xa4>
 2ac:	add	x6, x21, x6
 2b0:	mov	x2, #0x0                   	// #0
 2b4:	nop
 2b8:	ldr	x3, [x4, x2, lsl #3]
 2bc:	ldr	x5, [x6, x2, lsl #3]
 2c0:	add	x3, x3, x5
 2c4:	str	x3, [x4, x2, lsl #3]
 2c8:	add	x2, x2, #0x1
 2cc:	cmp	w7, w2
 2d0:	b.hi	2b8 <__llvm_profile_merge_from_buffer+0x88>  // b.pmore
 2d4:	ldr	x2, [x24]
 2d8:	cbz	x2, 30c <__llvm_profile_merge_from_buffer+0xdc>
 2dc:	ldrh	w1, [x19, #44]
 2e0:	ldrh	w0, [x19, #46]
 2e4:	cmp	w1, #0x0
 2e8:	cset	w1, ne  // ne = any
 2ec:	cmp	w0, #0x0
 2f0:	cinc	w1, w1, ne  // ne = any
 2f4:	cbz	w1, 30c <__llvm_profile_merge_from_buffer+0xdc>
 2f8:	mov	x0, x22
 2fc:	mov	x1, x20
 300:	blr	x2
 304:	ldr	w0, [x22]
 308:	add	x22, x22, x0
 30c:	add	x19, x19, #0x30
 310:	add	x20, x20, #0x30
 314:	cmp	x21, x19
 318:	b.hi	290 <__llvm_profile_merge_from_buffer+0x60>  // b.pmore
 31c:	ldp	x19, x20, [sp, #16]
 320:	ldp	x21, x22, [sp, #32]
 324:	ldp	x23, x24, [sp, #48]
 328:	ldp	x29, x30, [sp], #64
 32c:	ret

InstrProfilingMergeFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofMergeValueProfData>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x25, x26, [sp, #64]
   c:	mov	x26, x0
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x23, x1
  18:	bl	0 <getFirstValueProfRecord>
  1c:	mov	x24, x0
  20:	ldr	w0, [x26, #4]
  24:	cbz	w0, d4 <lprofMergeValueProfData+0xd4>
  28:	mov	w25, #0x0                   	// #0
  2c:	stp	x19, x20, [sp, #16]
  30:	stp	x21, x22, [sp, #32]
  34:	mov	w22, #0x0                   	// #0
  38:	str	x27, [sp, #80]
  3c:	nop
  40:	mov	x0, x24
  44:	bl	0 <getValueProfRecordValueData>
  48:	ldr	w1, [x24, #4]
  4c:	mov	x20, x0
  50:	cbz	w1, ac <lprofMergeValueProfData+0xac>
  54:	mov	w19, #0x0                   	// #0
  58:	mov	w27, #0x0                   	// #0
  5c:	nop
  60:	add	x0, x24, w27, uxtw
  64:	ldrb	w21, [x0, #8]
  68:	cbz	w21, 9c <lprofMergeValueProfData+0x9c>
  6c:	add	w21, w21, w19
  70:	ubfiz	x3, x19, #4, #32
  74:	mov	w2, w22
  78:	add	x4, x20, x3
  7c:	add	w19, w19, #0x1
  80:	mov	x1, x23
  84:	ldr	x0, [x20, x3]
  88:	ldr	x3, [x4, #8]
  8c:	bl	0 <__llvm_profile_instrument_target_value>
  90:	cmp	w21, w19
  94:	b.ne	70 <lprofMergeValueProfData+0x70>  // b.any
  98:	ldr	w1, [x24, #4]
  9c:	add	w27, w27, #0x1
  a0:	add	w22, w22, #0x1
  a4:	cmp	w1, w27
  a8:	b.hi	60 <lprofMergeValueProfData+0x60>  // b.pmore
  ac:	mov	x0, x24
  b0:	bl	0 <getValueProfRecordNext>
  b4:	ldr	w1, [x26, #4]
  b8:	add	w25, w25, #0x1
  bc:	mov	x24, x0
  c0:	cmp	w1, w25
  c4:	b.hi	40 <lprofMergeValueProfData+0x40>  // b.pmore
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x21, x22, [sp, #32]
  d0:	ldr	x27, [sp, #80]
  d4:	ldp	x23, x24, [sp, #48]
  d8:	ldp	x25, x26, [sp, #64]
  dc:	ldp	x29, x30, [sp], #96
  e0:	ret

InstrProfilingNameVar.c.o:     file format elf64-littleaarch64


InstrProfilingWriter.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofBufferWriter>:
   0:	cbz	w2, 74 <lprofBufferWriter+0x74>
   4:	stp	x29, x30, [sp, #-48]!
   8:	sub	w2, w2, #0x1
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	add	x22, x1, #0x20
  18:	mov	x21, x0
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x19, x1
  24:	mov	w1, #0x20                  	// #32
  28:	ldr	x0, [x0, #8]
  2c:	umaddl	x22, w2, w1, x22
  30:	ldp	x1, x20, [x19]
  34:	add	x19, x19, #0x20
  38:	ldur	x2, [x19, #-16]
  3c:	mul	x20, x20, x2
  40:	cbz	x1, 50 <lprofBufferWriter+0x50>
  44:	mov	x2, x20
  48:	bl	0 <memcpy>
  4c:	ldr	x0, [x21, #8]
  50:	add	x0, x0, x20
  54:	str	x0, [x21, #8]
  58:	cmp	x19, x22
  5c:	b.ne	30 <lprofBufferWriter+0x30>  // b.any
  60:	mov	w0, #0x0                   	// #0
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x21, x22, [sp, #32]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret
  74:	mov	w0, #0x0                   	// #0
  78:	ret
  7c:	nop

0000000000000080 <lprofCreateBufferIO>:
  80:	adrp	x1, 0 <lprofBufferWriter>
  84:	add	x4, x1, #0x0
  88:	mov	x2, x0
  8c:	ldr	x3, [x1]
  90:	ldr	w4, [x4, #8]
  94:	cbz	x3, b4 <lprofCreateBufferIO+0x34>
  98:	add	x1, x1, #0x0
  9c:	add	x0, x1, #0x10
  a0:	str	wzr, [x0, #8]
  a4:	str	x2, [x1, #16]
  a8:	str	x3, [x0, #16]
  ac:	stp	w4, wzr, [x0, #24]
  b0:	ret
  b4:	add	x1, x1, #0x0
  b8:	mov	w4, #0x2000                	// #8192
  bc:	add	x0, x1, #0x10
  c0:	adrp	x3, 0 <lprofBufferWriter>
  c4:	add	x3, x3, #0x0
  c8:	str	wzr, [x0, #8]
  cc:	str	x3, [x0, #16]
  d0:	str	x2, [x1, #16]
  d4:	stp	w4, wzr, [x0, #24]
  d8:	ret
  dc:	nop

00000000000000e0 <lprofDeleteBufferIO>:
  e0:	stp	x29, x30, [sp, #-32]!
  e4:	mov	x29, sp
  e8:	ldr	w1, [x0, #8]
  ec:	stp	x19, x20, [sp, #16]
  f0:	adrp	x19, 0 <lprofBufferWriter>
  f4:	cbz	w1, 108 <lprofDeleteBufferIO+0x28>
  f8:	add	x1, x19, #0x0
  fc:	ldr	x0, [x0]
 100:	ldr	x1, [x1, #48]
 104:	blr	x1
 108:	ldr	x0, [x19]
 10c:	add	x20, x19, #0x0
 110:	cbz	x0, 124 <lprofDeleteBufferIO+0x44>
 114:	ldr	x1, [x20, #48]
 118:	blr	x1
 11c:	str	xzr, [x19]
 120:	str	wzr, [x20, #8]
 124:	ldp	x19, x20, [sp, #16]
 128:	ldp	x29, x30, [sp], #32
 12c:	ret

0000000000000130 <lprofBufferIOFlush>:
 130:	ldr	w1, [x0, #28]
 134:	cbz	w1, 188 <lprofBufferIOFlush+0x58>
 138:	stp	x29, x30, [sp, #-64]!
 13c:	mov	w1, w1
 140:	mov	x2, #0x1                   	// #1
 144:	mov	x29, sp
 148:	str	x19, [sp, #16]
 14c:	mov	x19, x0
 150:	ldr	x0, [x0]
 154:	ldr	x4, [x19, #16]
 158:	ldr	x3, [x0]
 15c:	stp	x4, x2, [sp, #32]
 160:	str	x1, [sp, #48]
 164:	add	x1, sp, #0x20
 168:	str	wzr, [sp, #56]
 16c:	blr	x3
 170:	cbnz	w0, 190 <lprofBufferIOFlush+0x60>
 174:	mov	w0, #0x0                   	// #0
 178:	str	wzr, [x19, #28]
 17c:	ldr	x19, [sp, #16]
 180:	ldp	x29, x30, [sp], #64
 184:	ret
 188:	mov	w0, #0x0                   	// #0
 18c:	ret
 190:	mov	w0, #0xffffffff            	// #-1
 194:	b	17c <lprofBufferIOFlush+0x4c>

0000000000000198 <lprofBufferIOWrite>:
 198:	stp	x29, x30, [sp, #-96]!
 19c:	mov	x29, sp
 1a0:	stp	x19, x20, [sp, #16]
 1a4:	mov	w20, w2
 1a8:	mov	x19, x0
 1ac:	stp	x21, x22, [sp, #32]
 1b0:	mov	x21, x1
 1b4:	ldp	w1, w2, [x0, #24]
 1b8:	add	w2, w20, w2
 1bc:	cmp	w2, w1
 1c0:	b.hi	20c <lprofBufferIOWrite+0x74>  // b.pmore
 1c4:	mov	w0, w20
 1c8:	mov	x22, #0x1                   	// #1
 1cc:	stp	x21, x22, [sp, #64]
 1d0:	cmp	w20, w1
 1d4:	str	x0, [sp, #80]
 1d8:	str	wzr, [sp, #88]
 1dc:	b.ls	234 <lprofBufferIOWrite+0x9c>  // b.plast
 1e0:	ldr	x0, [x19]
 1e4:	mov	w2, w22
 1e8:	add	x1, sp, #0x40
 1ec:	ldr	x3, [x0]
 1f0:	blr	x3
 1f4:	cmp	w0, #0x0
 1f8:	csetm	w0, ne  // ne = any
 1fc:	ldp	x19, x20, [sp, #16]
 200:	ldp	x21, x22, [sp, #32]
 204:	ldp	x29, x30, [sp], #96
 208:	ret
 20c:	bl	130 <lprofBufferIOFlush>
 210:	cbnz	w0, 280 <lprofBufferIOWrite+0xe8>
 214:	ldr	w1, [x19, #24]
 218:	mov	w0, w20
 21c:	mov	x22, #0x1                   	// #1
 220:	stp	x21, x22, [sp, #64]
 224:	cmp	w20, w1
 228:	str	x0, [sp, #80]
 22c:	str	wzr, [sp, #88]
 230:	b.hi	1e0 <lprofBufferIOWrite+0x48>  // b.pmore
 234:	ldr	x2, [x19, #16]
 238:	add	x20, sp, #0x30
 23c:	ldr	w1, [x19, #28]
 240:	mov	x0, x20
 244:	add	x1, x2, x1
 248:	bl	0 <initBufferWriter>
 24c:	mov	w2, w22
 250:	add	x1, sp, #0x40
 254:	mov	x0, x20
 258:	bl	0 <lprofBufferWriter>
 25c:	ldr	x2, [x19, #16]
 260:	mov	w0, #0x0                   	// #0
 264:	ldr	x1, [sp, #56]
 268:	ldp	x21, x22, [sp, #32]
 26c:	sub	x1, x1, x2
 270:	str	w1, [x19, #28]
 274:	ldp	x19, x20, [sp, #16]
 278:	ldp	x29, x30, [sp], #96
 27c:	ret
 280:	mov	w0, #0xffffffff            	// #-1
 284:	b	1fc <lprofBufferIOWrite+0x64>

0000000000000288 <writeOneValueProfData.constprop.0>:
 288:	stp	x29, x30, [sp, #-160]!
 28c:	mov	x29, sp
 290:	stp	x21, x22, [sp, #32]
 294:	add	x22, x1, #0x2c
 298:	mov	x21, x1
 29c:	stp	x25, x26, [sp, #64]
 2a0:	add	x25, x29, #0x90
 2a4:	stp	x19, x20, [sp, #16]
 2a8:	mov	x19, x22
 2ac:	mov	x20, x25
 2b0:	stp	x23, x24, [sp, #48]
 2b4:	add	x23, x1, #0x30
 2b8:	stp	x27, x28, [sp, #80]
 2bc:	mov	x27, x0
 2c0:	ldrh	w0, [x19]
 2c4:	cbnz	w0, 388 <writeOneValueProfData.constprop.0+0x100>
 2c8:	str	xzr, [x20]
 2cc:	add	x19, x19, #0x2
 2d0:	add	x20, x20, #0x8
 2d4:	cmp	x19, x23
 2d8:	b.ne	2c0 <writeOneValueProfData.constprop.0+0x38>  // b.any
 2dc:	ldr	x2, [x27]
 2e0:	mov	x0, x21
 2e4:	mov	x1, x25
 2e8:	blr	x2
 2ec:	mov	w19, w0
 2f0:	cbz	w0, 364 <writeOneValueProfData.constprop.0+0xdc>
 2f4:	ldr	x0, [x27, #32]
 2f8:	adrp	x20, 0 <lprofBufferWriter>
 2fc:	add	x20, x20, #0x0
 300:	add	x23, x29, #0x78
 304:	add	x21, x20, #0x10
 308:	blr	x0
 30c:	mov	w3, w0
 310:	mov	x1, x23
 314:	mov	x0, x21
 318:	mov	w2, #0x8                   	// #8
 31c:	stp	w3, w19, [x29, #120]
 320:	bl	198 <lprofBufferIOWrite>
 324:	cbnz	w0, 4a0 <writeOneValueProfData.constprop.0+0x218>
 328:	ldr	x1, [x27, #16]
 32c:	mov	x0, x23
 330:	add	x23, x23, #0x8
 334:	blr	x1
 338:	cmp	x23, x0
 33c:	b.ne	4a0 <writeOneValueProfData.constprop.0+0x218>  // b.any
 340:	ldrh	w3, [x22]
 344:	add	x0, x29, #0x80
 348:	stp	x0, xzr, [x29, #96]
 34c:	add	x20, x20, #0x38
 350:	ldr	w23, [x29, #104]
 354:	cbnz	w3, 3c8 <writeOneValueProfData.constprop.0+0x140>
 358:	ldr	x0, [x29, #104]
 35c:	add	x22, x22, #0x2
 360:	cbz	x0, 3b4 <writeOneValueProfData.constprop.0+0x12c>
 364:	mov	sp, x29
 368:	mov	w0, #0x0                   	// #0
 36c:	ldp	x19, x20, [sp, #16]
 370:	ldp	x21, x22, [sp, #32]
 374:	ldp	x23, x24, [sp, #48]
 378:	ldp	x25, x26, [sp, #64]
 37c:	ldp	x27, x28, [sp, #80]
 380:	ldp	x29, x30, [sp], #160
 384:	ret
 388:	ldr	x1, [x27, #8]
 38c:	blr	x1
 390:	sub	w2, w0, #0x8
 394:	add	x0, x2, #0xf
 398:	mov	w1, #0x0                   	// #0
 39c:	and	x0, x0, #0x1fffffff0
 3a0:	sub	sp, sp, x0
 3a4:	mov	x0, sp
 3a8:	str	x0, [x20]
 3ac:	bl	0 <memset>
 3b0:	b	2cc <writeOneValueProfData.constprop.0+0x44>
 3b4:	ldrh	w3, [x22]
 3b8:	mov	x0, #0x1                   	// #1
 3bc:	str	x0, [x29, #104]
 3c0:	ldr	w23, [x29, #104]
 3c4:	cbz	w3, 358 <writeOneValueProfData.constprop.0+0xd0>
 3c8:	ldp	x1, x19, [x29, #96]
 3cc:	mov	x0, x21
 3d0:	mov	w2, #0x8                   	// #8
 3d4:	stp	w19, w3, [x29, #128]
 3d8:	bl	198 <lprofBufferIOWrite>
 3dc:	cbnz	w0, 4a0 <writeOneValueProfData.constprop.0+0x218>
 3e0:	ldrh	w0, [x22]
 3e4:	ldr	x1, [x27, #8]
 3e8:	blr	x1
 3ec:	sub	w2, w0, #0x8
 3f0:	ldr	x1, [x25, x19, lsl #3]
 3f4:	mov	x0, x21
 3f8:	bl	198 <lprofBufferIOWrite>
 3fc:	cbnz	w0, 4a0 <writeOneValueProfData.constprop.0+0x218>
 400:	ldrh	w0, [x22]
 404:	cbz	w0, 358 <writeOneValueProfData.constprop.0+0xd0>
 408:	ldr	x2, [x27, #24]
 40c:	mov	w0, w23
 410:	mov	w26, #0x0                   	// #0
 414:	mov	w1, w26
 418:	blr	x2
 41c:	mov	w19, w0
 420:	cbnz	w0, 450 <writeOneValueProfData.constprop.0+0x1c8>
 424:	nop
 428:	ldrh	w0, [x22]
 42c:	add	w26, w26, #0x1
 430:	cmp	w26, w0
 434:	b.cs	358 <writeOneValueProfData.constprop.0+0xd0>  // b.hs, b.nlast
 438:	ldr	x2, [x27, #24]
 43c:	mov	w1, w26
 440:	mov	w0, w23
 444:	blr	x2
 448:	mov	w19, w0
 44c:	cbz	w0, 428 <writeOneValueProfData.constprop.0+0x1a0>
 450:	mov	x24, #0x0                   	// #0
 454:	b	460 <writeOneValueProfData.constprop.0+0x1d8>
 458:	subs	w19, w19, w28
 45c:	b.eq	428 <writeOneValueProfData.constprop.0+0x1a0>  // b.none
 460:	cmp	w19, #0x10
 464:	mov	w0, #0x10                  	// #16
 468:	ldr	x6, [x27, #40]
 46c:	csel	w28, w19, w0, ls  // ls = plast
 470:	mov	x3, x24
 474:	mov	w4, w28
 478:	mov	x2, x20
 47c:	mov	w1, w26
 480:	mov	w0, w23
 484:	blr	x6
 488:	lsl	w2, w28, #4
 48c:	mov	x24, x0
 490:	mov	x1, x20
 494:	mov	x0, x21
 498:	bl	198 <lprofBufferIOWrite>
 49c:	cbz	w0, 458 <writeOneValueProfData.constprop.0+0x1d0>
 4a0:	mov	sp, x29
 4a4:	mov	w0, #0xffffffff            	// #-1
 4a8:	ldp	x19, x20, [sp, #16]
 4ac:	ldp	x21, x22, [sp, #32]
 4b0:	ldp	x23, x24, [sp, #48]
 4b4:	ldp	x25, x26, [sp, #64]
 4b8:	ldp	x27, x28, [sp, #80]
 4bc:	ldp	x29, x30, [sp], #160
 4c0:	ret
 4c4:	nop

00000000000004c8 <lprofWriteDataImpl>:
 4c8:	stp	x29, x30, [sp, #-432]!
 4cc:	mov	x29, sp
 4d0:	stp	x19, x20, [sp, #16]
 4d4:	mov	x19, x1
 4d8:	mov	x20, x6
 4dc:	mov	x1, x2
 4e0:	stp	x21, x22, [sp, #32]
 4e4:	mov	x22, x4
 4e8:	stp	x23, x24, [sp, #48]
 4ec:	mov	x23, x2
 4f0:	mov	x24, x5
 4f4:	stp	x25, x26, [sp, #64]
 4f8:	mov	x26, x0
 4fc:	mov	x25, x3
 500:	mov	x0, x19
 504:	str	x27, [sp, #80]
 508:	mov	x27, x7
 50c:	bl	0 <__llvm_profile_get_data_size>
 510:	cbnz	x0, 538 <lprofWriteDataImpl+0x70>
 514:	mov	w19, #0x0                   	// #0
 518:	mov	w0, w19
 51c:	ldp	x19, x20, [sp, #16]
 520:	ldp	x21, x22, [sp, #32]
 524:	ldp	x23, x24, [sp, #48]
 528:	ldp	x25, x26, [sp, #64]
 52c:	ldr	x27, [sp, #80]
 530:	ldp	x29, x30, [sp], #432
 534:	ret
 538:	sub	x22, x22, x25
 53c:	sub	x27, x27, x20
 540:	mov	x2, x27
 544:	add	x5, sp, #0x78
 548:	asr	x22, x22, #3
 54c:	add	x4, sp, #0x70
 550:	mov	x1, x22
 554:	add	x3, sp, #0x68
 558:	mov	x21, x0
 55c:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
 560:	bl	0 <__llvm_profile_get_magic>
 564:	str	x0, [sp, #128]
 568:	bl	0 <__llvm_profile_get_version>
 56c:	stp	x0, x21, [sp, #136]
 570:	ldr	w1, [sp, #432]
 574:	ldp	x6, x5, [sp, #104]
 578:	mov	x4, #0x1                   	// #1
 57c:	add	x3, sp, #0x80
 580:	cmp	w1, #0x0
 584:	mov	x9, #0x50                  	// #80
 588:	mov	x8, #0x30                  	// #48
 58c:	mov	x7, #0x8                   	// #8
 590:	stp	x6, x22, [sp, #152]
 594:	add	x1, sp, #0xd0
 598:	stp	x5, x27, [sp, #168]
 59c:	mov	x0, x26
 5a0:	mov	w2, #0x7                   	// #7
 5a4:	stp	x25, x20, [sp, #184]
 5a8:	csel	x20, x20, xzr, eq  // eq = none
 5ac:	stp	x4, x3, [sp, #200]
 5b0:	stp	x9, x4, [sp, #216]
 5b4:	str	wzr, [sp, #232]
 5b8:	stp	x19, x8, [sp, #240]
 5bc:	str	x21, [sp, #256]
 5c0:	str	wzr, [sp, #264]
 5c4:	stp	xzr, x4, [sp, #272]
 5c8:	str	x6, [sp, #288]
 5cc:	str	w4, [sp, #296]
 5d0:	stp	x25, x7, [sp, #304]
 5d4:	str	x22, [sp, #320]
 5d8:	str	wzr, [sp, #328]
 5dc:	stp	xzr, x4, [sp, #336]
 5e0:	str	x5, [sp, #352]
 5e4:	str	w4, [sp, #360]
 5e8:	stp	x20, x4, [sp, #368]
 5ec:	ldr	x3, [x26]
 5f0:	str	x27, [sp, #384]
 5f4:	ldr	x5, [sp, #120]
 5f8:	str	wzr, [sp, #392]
 5fc:	stp	xzr, x4, [sp, #400]
 600:	str	x5, [sp, #416]
 604:	str	w4, [sp, #424]
 608:	blr	x3
 60c:	cbnz	w0, 670 <lprofWriteDataImpl+0x1a8>
 610:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
 614:	cmp	w0, #0x0
 618:	ccmp	x24, #0x0, #0x4, eq  // eq = none
 61c:	b.eq	514 <lprofWriteDataImpl+0x4c>  // b.none
 620:	adrp	x20, 0 <lprofBufferWriter>
 624:	add	x0, x20, #0x0
 628:	ldr	x2, [x20]
 62c:	ldr	w3, [x0, #8]
 630:	cbz	x2, 6b8 <lprofWriteDataImpl+0x1f0>
 634:	add	x1, x20, #0x0
 638:	cmp	x19, x23
 63c:	str	x26, [x1, #16]
 640:	str	wzr, [x1, #24]
 644:	str	x2, [x1, #32]
 648:	stp	w3, wzr, [x1, #40]
 64c:	b.cc	65c <lprofWriteDataImpl+0x194>  // b.lo, b.ul, b.last
 650:	b	694 <lprofWriteDataImpl+0x1cc>
 654:	cmp	x23, x19
 658:	b.ls	694 <lprofWriteDataImpl+0x1cc>  // b.plast
 65c:	mov	x1, x19
 660:	mov	x0, x24
 664:	add	x19, x19, #0x30
 668:	bl	288 <writeOneValueProfData.constprop.0>
 66c:	cbz	w0, 654 <lprofWriteDataImpl+0x18c>
 670:	mov	w19, #0xffffffff            	// #-1
 674:	mov	w0, w19
 678:	ldp	x19, x20, [sp, #16]
 67c:	ldp	x21, x22, [sp, #32]
 680:	ldp	x23, x24, [sp, #48]
 684:	ldp	x25, x26, [sp, #64]
 688:	ldr	x27, [sp, #80]
 68c:	ldp	x29, x30, [sp], #432
 690:	ret
 694:	add	x20, x20, #0x0
 698:	add	x20, x20, #0x10
 69c:	mov	x0, x20
 6a0:	bl	130 <lprofBufferIOFlush>
 6a4:	mov	w19, w0
 6a8:	cbnz	w0, 670 <lprofWriteDataImpl+0x1a8>
 6ac:	mov	x0, x20
 6b0:	bl	e0 <lprofDeleteBufferIO>
 6b4:	b	518 <lprofWriteDataImpl+0x50>
 6b8:	adrp	x2, 0 <lprofBufferWriter>
 6bc:	mov	w3, #0x2000                	// #8192
 6c0:	add	x2, x2, #0x0
 6c4:	b	634 <lprofWriteDataImpl+0x16c>

00000000000006c8 <lprofWriteData>:
 6c8:	sub	sp, sp, #0x60
 6cc:	stp	x29, x30, [sp, #16]
 6d0:	add	x29, sp, #0x10
 6d4:	stp	x19, x20, [sp, #32]
 6d8:	mov	x19, x0
 6dc:	stp	x21, x22, [sp, #48]
 6e0:	stp	x23, x24, [sp, #64]
 6e4:	mov	x24, x1
 6e8:	stp	x25, x26, [sp, #80]
 6ec:	mov	w26, w2
 6f0:	bl	0 <__llvm_profile_begin_data>
 6f4:	mov	x20, x0
 6f8:	bl	0 <__llvm_profile_end_data>
 6fc:	mov	x21, x0
 700:	bl	0 <__llvm_profile_begin_counters>
 704:	mov	x22, x0
 708:	bl	0 <__llvm_profile_end_counters>
 70c:	mov	x23, x0
 710:	bl	0 <__llvm_profile_begin_names>
 714:	mov	x25, x0
 718:	bl	0 <__llvm_profile_end_names>
 71c:	str	w26, [sp]
 720:	mov	x7, x0
 724:	mov	x6, x25
 728:	mov	x5, x24
 72c:	mov	x4, x23
 730:	mov	x3, x22
 734:	mov	x2, x21
 738:	mov	x1, x20
 73c:	mov	x0, x19
 740:	bl	4c8 <lprofWriteDataImpl>
 744:	ldp	x29, x30, [sp, #16]
 748:	ldp	x19, x20, [sp, #32]
 74c:	ldp	x21, x22, [sp, #48]
 750:	ldp	x23, x24, [sp, #64]
 754:	ldp	x25, x26, [sp, #80]
 758:	add	sp, sp, #0x60
 75c:	ret

InstrProfilingPlatformDarwin.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformFuchsia.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformLinux.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_begin_data>:
   0:	adrp	x0, 0 <__start___llvm_prf_data>
   4:	add	x0, x0, #0x0
   8:	ret
   c:	nop

0000000000000010 <__llvm_profile_end_data>:
  10:	adrp	x0, 0 <__stop___llvm_prf_data>
  14:	add	x0, x0, #0x0
  18:	ret
  1c:	nop

0000000000000020 <__llvm_profile_begin_names>:
  20:	adrp	x0, 0 <__start___llvm_prf_names>
  24:	add	x0, x0, #0x0
  28:	ret
  2c:	nop

0000000000000030 <__llvm_profile_end_names>:
  30:	adrp	x0, 0 <__stop___llvm_prf_names>
  34:	add	x0, x0, #0x0
  38:	ret
  3c:	nop

0000000000000040 <__llvm_profile_begin_counters>:
  40:	adrp	x0, 0 <__start___llvm_prf_cnts>
  44:	add	x0, x0, #0x0
  48:	ret
  4c:	nop

0000000000000050 <__llvm_profile_end_counters>:
  50:	adrp	x0, 0 <__stop___llvm_prf_cnts>
  54:	add	x0, x0, #0x0
  58:	ret
  5c:	nop

0000000000000060 <__llvm_profile_begin_orderfile>:
  60:	adrp	x0, 0 <__start___llvm_orderfile>
  64:	add	x0, x0, #0x0
  68:	ret
  6c:	nop

0000000000000070 <__llvm_profile_begin_vnodes>:
  70:	adrp	x0, 0 <__start___llvm_prf_vnds>
  74:	add	x0, x0, #0x0
  78:	ret
  7c:	nop

0000000000000080 <__llvm_profile_end_vnodes>:
  80:	adrp	x0, 0 <__stop___llvm_prf_vnds>
  84:	add	x0, x0, #0x0
  88:	ret

InstrProfilingPlatformOther.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformWindows.c.o:     file format elf64-littleaarch64


InstrProfilingRuntime.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_InstrProfilingRuntime.cpp>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <__llvm_profile_initialize_file>
   c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
  10:	cbz	w0, 1c <_GLOBAL__sub_I_InstrProfilingRuntime.cpp+0x1c>
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	ldp	x29, x30, [sp], #16
  20:	b	0 <__llvm_profile_register_write_file_atexit>

InstrProfilingUtil.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_recursive_mkdir>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldrb	w19, [x0, #1]
  10:	cbz	w19, 50 <__llvm_profile_recursive_mkdir+0x50>
  14:	stp	x21, x22, [sp, #32]
  18:	adrp	x22, 0 <__llvm_profile_recursive_mkdir>
  1c:	mov	x21, x0
  20:	ldr	x22, [x22]
  24:	add	x20, x0, #0x1
  28:	cmp	w19, #0x2f
  2c:	b.ne	44 <__llvm_profile_recursive_mkdir+0x44>  // b.any
  30:	strb	wzr, [x20]
  34:	mov	x0, x21
  38:	ldr	w1, [x22]
  3c:	bl	0 <mkdir>
  40:	strb	w19, [x20]
  44:	ldrb	w19, [x20, #1]!
  48:	cbnz	w19, 28 <__llvm_profile_recursive_mkdir+0x28>
  4c:	ldp	x21, x22, [sp, #32]
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	ret
  5c:	nop

0000000000000060 <__llvm_profile_set_dir_mode>:
  60:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
  64:	ldr	x1, [x1]
  68:	str	w0, [x1]
  6c:	ret

0000000000000070 <__llvm_profile_get_dir_mode>:
  70:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
  74:	ldr	x0, [x0]
  78:	ldr	w0, [x0]
  7c:	ret

0000000000000080 <lprofGetHostName>:
  80:	stp	x29, x30, [sp, #-448]!
  84:	mov	x29, sp
  88:	str	x21, [sp, #32]
  8c:	add	x21, sp, #0x38
  90:	stp	x19, x20, [sp, #16]
  94:	mov	x19, x0
  98:	mov	w20, w1
  9c:	mov	x0, x21
  a0:	bl	0 <uname>
  a4:	tbz	w0, #31, b8 <lprofGetHostName+0x38>
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldr	x21, [sp, #32]
  b0:	ldp	x29, x30, [sp], #448
  b4:	ret
  b8:	sxtw	x2, w20
  bc:	add	x1, x21, #0x41
  c0:	mov	x0, x19
  c4:	bl	0 <strncpy>
  c8:	mov	w0, #0x0                   	// #0
  cc:	ldp	x19, x20, [sp, #16]
  d0:	ldr	x21, [sp, #32]
  d4:	ldp	x29, x30, [sp], #448
  d8:	ret
  dc:	nop

00000000000000e0 <lprofLockFd>:
  e0:	stp	x29, x30, [sp, #-64]!
  e4:	mov	x29, sp
  e8:	stp	x19, x20, [sp, #16]
  ec:	mov	w19, w0
  f0:	add	x20, sp, #0x20
  f4:	strh	wzr, [sp, #34]
  f8:	stp	xzr, xzr, [sp, #40]
  fc:	bl	0 <getpid>
 100:	mov	w1, #0x1                   	// #1
 104:	strh	w1, [sp, #32]
 108:	str	w0, [sp, #56]
 10c:	b	120 <lprofLockFd+0x40>
 110:	bl	0 <__errno_location>
 114:	ldr	w1, [x0]
 118:	cmp	w1, #0x4
 11c:	b.ne	148 <lprofLockFd+0x68>  // b.any
 120:	mov	x2, x20
 124:	mov	w0, w19
 128:	mov	w1, #0x7                   	// #7
 12c:	bl	0 <fcntl>
 130:	cmn	w0, #0x1
 134:	b.eq	110 <lprofLockFd+0x30>  // b.none
 138:	mov	w0, #0x0                   	// #0
 13c:	ldp	x19, x20, [sp, #16]
 140:	ldp	x29, x30, [sp], #64
 144:	ret
 148:	cmp	w1, #0x25
 14c:	csetm	w0, eq  // eq = none
 150:	ldp	x19, x20, [sp, #16]
 154:	ldp	x29, x30, [sp], #64
 158:	ret
 15c:	nop

0000000000000160 <lprofUnlockFd>:
 160:	stp	x29, x30, [sp, #-64]!
 164:	mov	x29, sp
 168:	stp	x19, x20, [sp, #16]
 16c:	mov	w19, w0
 170:	add	x20, sp, #0x20
 174:	strh	wzr, [sp, #34]
 178:	stp	xzr, xzr, [sp, #40]
 17c:	bl	0 <getpid>
 180:	mov	w1, #0x2                   	// #2
 184:	strh	w1, [sp, #32]
 188:	str	w0, [sp, #56]
 18c:	b	1a0 <lprofUnlockFd+0x40>
 190:	bl	0 <__errno_location>
 194:	ldr	w1, [x0]
 198:	cmp	w1, #0x4
 19c:	b.ne	1c8 <lprofUnlockFd+0x68>  // b.any
 1a0:	mov	x2, x20
 1a4:	mov	w0, w19
 1a8:	mov	w1, #0x7                   	// #7
 1ac:	bl	0 <fcntl>
 1b0:	cmn	w0, #0x1
 1b4:	b.eq	190 <lprofUnlockFd+0x30>  // b.none
 1b8:	mov	w0, #0x0                   	// #0
 1bc:	ldp	x19, x20, [sp, #16]
 1c0:	ldp	x29, x30, [sp], #64
 1c4:	ret
 1c8:	cmp	w1, #0x25
 1cc:	csetm	w0, eq  // eq = none
 1d0:	ldp	x19, x20, [sp, #16]
 1d4:	ldp	x29, x30, [sp], #64
 1d8:	ret
 1dc:	nop

00000000000001e0 <lprofLockFileHandle>:
 1e0:	stp	x29, x30, [sp, #-16]!
 1e4:	mov	x29, sp
 1e8:	bl	0 <fileno>
 1ec:	ldp	x29, x30, [sp], #16
 1f0:	b	e0 <lprofLockFd>
 1f4:	nop

00000000000001f8 <lprofUnlockFileHandle>:
 1f8:	stp	x29, x30, [sp, #-16]!
 1fc:	mov	x29, sp
 200:	bl	0 <fileno>
 204:	ldp	x29, x30, [sp], #16
 208:	b	160 <lprofUnlockFd>
 20c:	nop

0000000000000210 <lprofOpenFileEx>:
 210:	stp	x29, x30, [sp, #-32]!
 214:	mov	w2, #0x1b6                 	// #438
 218:	mov	w1, #0x42                  	// #66
 21c:	mov	x29, sp
 220:	bl	0 <open>
 224:	tbnz	w0, #31, 288 <lprofOpenFileEx+0x78>
 228:	str	x19, [sp, #16]
 22c:	mov	w19, w0
 230:	bl	e0 <lprofLockFd>
 234:	cbnz	w0, 250 <lprofOpenFileEx+0x40>
 238:	mov	w0, w19
 23c:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 240:	ldr	x19, [sp, #16]
 244:	add	x1, x1, #0x0
 248:	ldp	x29, x30, [sp], #32
 24c:	b	0 <fdopen>
 250:	adrp	x0, 0 <stderr>
 254:	adrp	x2, 0 <__llvm_profile_recursive_mkdir>
 258:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 25c:	add	x2, x2, #0x0
 260:	ldr	x0, [x0]
 264:	add	x1, x1, #0x0
 268:	ldr	x0, [x0]
 26c:	bl	0 <fprintf>
 270:	mov	w0, w19
 274:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 278:	ldr	x19, [sp, #16]
 27c:	add	x1, x1, #0x0
 280:	ldp	x29, x30, [sp], #32
 284:	b	0 <fdopen>
 288:	mov	x0, #0x0                   	// #0
 28c:	ldp	x29, x30, [sp], #32
 290:	ret
 294:	nop

0000000000000298 <lprofGetPathPrefix>:
 298:	stp	x29, x30, [sp, #-48]!
 29c:	mov	x29, sp
 2a0:	stp	x19, x20, [sp, #16]
 2a4:	mov	x20, x1
 2a8:	str	x21, [sp, #32]
 2ac:	mov	x21, x0
 2b0:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 2b4:	add	x0, x0, #0x0
 2b8:	bl	0 <getenv>
 2bc:	mov	x19, x0
 2c0:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 2c4:	add	x0, x0, #0x0
 2c8:	bl	0 <getenv>
 2cc:	str	xzr, [x20]
 2d0:	str	wzr, [x21]
 2d4:	cbz	x19, 308 <lprofGetPathPrefix+0x70>
 2d8:	ldrb	w2, [x19]
 2dc:	cbz	w2, 31c <lprofGetPathPrefix+0x84>
 2e0:	cbz	x0, 2fc <lprofGetPathPrefix+0x64>
 2e4:	mov	w2, #0xa                   	// #10
 2e8:	mov	x1, #0x0                   	// #0
 2ec:	bl	0 <strtol>
 2f0:	cmp	w0, #0x0
 2f4:	csel	w0, w0, wzr, ge  // ge = tcont
 2f8:	str	w0, [x21]
 2fc:	mov	x0, x19
 300:	bl	0 <strlen>
 304:	str	x0, [x20]
 308:	mov	x0, x19
 30c:	ldp	x19, x20, [sp, #16]
 310:	ldr	x21, [sp, #32]
 314:	ldp	x29, x30, [sp], #48
 318:	ret
 31c:	mov	x19, #0x0                   	// #0
 320:	mov	x0, x19
 324:	ldp	x19, x20, [sp, #16]
 328:	ldr	x21, [sp, #32]
 32c:	ldp	x29, x30, [sp], #48
 330:	ret
 334:	nop

0000000000000338 <lprofApplyPathPrefix>:
 338:	stp	x29, x30, [sp, #-48]!
 33c:	cmp	w4, #0x0
 340:	mov	x8, x0
 344:	mov	x29, sp
 348:	stp	x19, x20, [sp, #16]
 34c:	mov	x19, x1
 350:	mov	x20, x3
 354:	stp	x21, x22, [sp, #32]
 358:	mov	x21, x2
 35c:	b.le	390 <lprofApplyPathPrefix+0x58>
 360:	add	x5, x1, #0x1
 364:	mov	w7, #0x0                   	// #0
 368:	b	384 <lprofApplyPathPrefix+0x4c>
 36c:	b.ne	378 <lprofApplyPathPrefix+0x40>  // b.any
 370:	add	w7, w7, #0x1
 374:	mov	x19, x5
 378:	add	x5, x5, #0x1
 37c:	cmp	w7, w4
 380:	b.ge	390 <lprofApplyPathPrefix+0x58>  // b.tcont
 384:	ldrb	w6, [x5]
 388:	cmp	w6, #0x2f
 38c:	cbnz	w6, 36c <lprofApplyPathPrefix+0x34>
 390:	mov	x1, x21
 394:	add	x21, x21, x20
 398:	mov	x0, x8
 39c:	mov	x2, x20
 3a0:	bl	0 <memcpy>
 3a4:	mov	x8, x0
 3a8:	add	x22, x0, x20
 3ac:	ldurb	w0, [x21, #-1]
 3b0:	cmp	w0, #0x2f
 3b4:	b.eq	3c8 <lprofApplyPathPrefix+0x90>  // b.none
 3b8:	add	x22, x20, #0x1
 3bc:	mov	w0, #0x2f                  	// #47
 3c0:	add	x22, x8, x22
 3c4:	strb	w0, [x8, x20]
 3c8:	mov	x0, x19
 3cc:	bl	0 <strlen>
 3d0:	mov	x1, x19
 3d4:	add	x2, x0, #0x1
 3d8:	mov	x0, x22
 3dc:	ldp	x19, x20, [sp, #16]
 3e0:	ldp	x21, x22, [sp, #32]
 3e4:	ldp	x29, x30, [sp], #48
 3e8:	b	0 <memcpy>
 3ec:	nop

00000000000003f0 <lprofFindFirstDirSeparator>:
 3f0:	mov	w1, #0x2f                  	// #47
 3f4:	b	0 <strchr>

00000000000003f8 <lprofFindLastDirSeparator>:
 3f8:	mov	w1, #0x2f                  	// #47
 3fc:	b	0 <strrchr>

0000000000000400 <lprofSuspendSigKill>:
 400:	stp	x29, x30, [sp, #-32]!
 404:	mov	w0, #0x2                   	// #2
 408:	mov	x29, sp
 40c:	add	x1, sp, #0x1c
 410:	str	wzr, [sp, #28]
 414:	bl	0 <prctl>
 418:	cbnz	w0, 444 <lprofSuspendSigKill+0x44>
 41c:	ldr	w0, [sp, #28]
 420:	cmp	w0, #0x9
 424:	b.eq	438 <lprofSuspendSigKill+0x38>  // b.none
 428:	cmp	w0, #0x9
 42c:	cset	w0, eq  // eq = none
 430:	ldp	x29, x30, [sp], #32
 434:	ret
 438:	mov	w1, #0x0                   	// #0
 43c:	mov	w0, #0x1                   	// #1
 440:	bl	0 <prctl>
 444:	ldr	w0, [sp, #28]
 448:	ldp	x29, x30, [sp], #32
 44c:	cmp	w0, #0x9
 450:	cset	w0, eq  // eq = none
 454:	ret

0000000000000458 <lprofRestoreSigKill>:
 458:	mov	w1, #0x9                   	// #9
 45c:	mov	w0, #0x1                   	// #1
 460:	b	0 <prctl>
