
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ldm.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <check_ldm_partition>:
       0:	ldr	w3, [x1]
       4:	mov	w0, #0x1                   	// #1
       8:	cmp	w3, #0x3
       c:	b.gt	20 <check_ldm_partition+0x20>
      10:	ldrb	w1, [x1, #56]
      14:	mov	w0, #0x0                   	// #0
      18:	cmp	w1, #0x42
      1c:	b.eq	24 <check_ldm_partition+0x24>  // b.none
      20:	ret
      24:	mov	w1, #0x1                   	// #1
      28:	mov	w0, w1
      2c:	str	w1, [x2]
      30:	ret
      34:	nop

0000000000000038 <grub_ldm_detect>:
      38:	sub	sp, sp, #0x3f0
      3c:	adrp	x3, 0 <check_ldm_partition>
      40:	stp	x29, x30, [sp]
      44:	mov	x29, sp
      48:	stp	x19, x20, [sp, #16]
      4c:	mov	x20, x1
      50:	mov	x19, x0
      54:	ldr	x1, [x3]
      58:	stp	x21, x22, [sp, #32]
      5c:	mov	x22, x2
      60:	add	x2, sp, #0x1f0
      64:	stp	x23, x24, [sp, #48]
      68:	stp	x25, x26, [sp, #64]
      6c:	str	wzr, [sp, #496]
      70:	bl	0 <grub_partition_msdos_iterate>
      74:	cbnz	w0, 170 <grub_ldm_detect+0x138>
      78:	ldr	w23, [sp, #496]
      7c:	mov	w21, #0x1                   	// #1
      80:	adrp	x24, 0 <check_ldm_partition>
      84:	cmp	w21, #0x2
      88:	sub	w0, w21, #0x1
      8c:	adrp	x25, 0 <check_ldm_partition>
      90:	b.eq	100 <grub_ldm_detect+0xc8>  // b.none
      94:	cmp	w0, #0x2
      98:	b.eq	14c <grub_ldm_detect+0x114>  // b.none
      9c:	mov	x1, #0x6                   	// #6
      a0:	cbz	w23, e8 <grub_ldm_detect+0xb0>
      a4:	add	x4, sp, #0xb0
      a8:	mov	x0, x19
      ac:	mov	x3, #0x13b                 	// #315
      b0:	mov	x2, #0x0                   	// #0
      b4:	bl	0 <grub_disk_read>
      b8:	cbnz	w0, 128 <grub_ldm_detect+0xf0>
      bc:	ldr	x1, [x24]
      c0:	add	x0, sp, #0xb0
      c4:	mov	x2, #0x8                   	// #8
      c8:	bl	0 <grub_memcmp>
      cc:	cbnz	w0, e8 <grub_ldm_detect+0xb0>
      d0:	ldrh	w0, [sp, #188]
      d4:	lsr	w1, w0, #8
      d8:	orr	w0, w1, w0, lsl #8
      dc:	sxth	w0, w0
      e0:	cmp	w0, #0x2
      e4:	b.eq	194 <grub_ldm_detect+0x15c>  // b.none
      e8:	cmp	w21, #0x3
      ec:	b.eq	128 <grub_ldm_detect+0xf0>  // b.none
      f0:	add	w21, w21, #0x1
      f4:	cmp	w21, #0x2
      f8:	sub	w0, w21, #0x1
      fc:	b.ne	94 <grub_ldm_detect+0x5c>  // b.any
     100:	cbz	w23, f0 <grub_ldm_detect+0xb8>
     104:	ldr	x0, [x19, #40]
     108:	cbnz	x0, f0 <grub_ldm_detect+0xb8>
     10c:	mov	x0, x19
     110:	bl	0 <grub_disk_get_size>
     114:	cmn	x0, #0x1
     118:	b.eq	f0 <grub_ldm_detect+0xb8>  // b.none
     11c:	sub	x1, x0, #0x1
     120:	b	a4 <grub_ldm_detect+0x6c>
     124:	ldp	x27, x28, [sp, #80]
     128:	mov	x21, #0x0                   	// #0
     12c:	mov	x0, x21
     130:	ldp	x29, x30, [sp]
     134:	ldp	x19, x20, [sp, #16]
     138:	ldp	x21, x22, [sp, #32]
     13c:	ldp	x23, x24, [sp, #48]
     140:	ldp	x25, x26, [sp, #64]
     144:	add	sp, sp, #0x3f0
     148:	ret
     14c:	ldr	x1, [x25]
     150:	add	x2, sp, #0x1f0
     154:	mov	x0, x19
     158:	str	xzr, [sp, #496]
     15c:	bl	0 <grub_gpt_partition_map_iterate>
     160:	cbnz	w0, 184 <grub_ldm_detect+0x14c>
     164:	ldr	x1, [sp, #496]
     168:	cbnz	x1, a4 <grub_ldm_detect+0x6c>
     16c:	b	128 <grub_ldm_detect+0xf0>
     170:	adrp	x0, 0 <check_ldm_partition>
     174:	mov	w23, #0x0                   	// #0
     178:	ldr	x0, [x0]
     17c:	str	wzr, [x0]
     180:	b	7c <grub_ldm_detect+0x44>
     184:	adrp	x0, 0 <check_ldm_partition>
     188:	ldr	x0, [x0]
     18c:	str	wzr, [x0]
     190:	b	128 <grub_ldm_detect+0xf0>
     194:	ldrh	w0, [sp, #190]
     198:	lsr	w1, w0, #8
     19c:	orr	w0, w1, w0, lsl #8
     1a0:	sub	w0, w0, #0xb
     1a4:	and	w0, w0, #0xffff
     1a8:	cmp	w0, #0x1
     1ac:	b.hi	e8 <grub_ldm_detect+0xb0>  // b.pmore
     1b0:	mov	x0, #0x41                  	// #65
     1b4:	stp	x27, x28, [sp, #80]
     1b8:	bl	0 <grub_malloc>
     1bc:	str	x0, [x20]
     1c0:	cbz	x0, 124 <grub_ldm_detect+0xec>
     1c4:	add	x1, sp, #0xe0
     1c8:	mov	x2, #0x40                  	// #64
     1cc:	bl	0 <grub_memmove>
     1d0:	ldr	x0, [x20]
     1d4:	strb	wzr, [x0, #64]
     1d8:	ldr	x0, [x20]
     1dc:	bl	0 <grub_strlen>
     1e0:	str	x0, [x20, #8]
     1e4:	add	x1, sp, #0x250
     1e8:	mov	x0, #0x0                   	// #0
     1ec:	ldur	x1, [x1, #-133]
     1f0:	rev	x1, x1
     1f4:	str	x1, [x22]
     1f8:	b	208 <grub_ldm_detect+0x1d0>
     1fc:	add	x0, x0, #0x1
     200:	cmp	x0, #0x40
     204:	b.eq	218 <grub_ldm_detect+0x1e0>  // b.none
     208:	add	x1, sp, #0xb0
     20c:	add	x1, x1, x0
     210:	ldrb	w1, [x1, #176]
     214:	cbnz	w1, 1fc <grub_ldm_detect+0x1c4>
     218:	add	x22, sp, #0x160
     21c:	mov	x1, x22
     220:	bl	0 <grub_diskfilter_get_vg_by_uuid>
     224:	mov	x21, x0
     228:	cbz	x0, 250 <grub_ldm_detect+0x218>
     22c:	mov	x0, x21
     230:	ldp	x29, x30, [sp]
     234:	ldp	x19, x20, [sp, #16]
     238:	ldp	x21, x22, [sp, #32]
     23c:	ldp	x23, x24, [sp, #48]
     240:	ldp	x25, x26, [sp, #64]
     244:	ldp	x27, x28, [sp, #80]
     248:	add	sp, sp, #0x3f0
     24c:	ret
     250:	mov	x0, #0x38                  	// #56
     254:	bl	0 <grub_malloc>
     258:	mov	x23, x0
     25c:	cbz	x0, 6d4 <grub_ldm_detect+0x69c>
     260:	mov	x0, #0x1                   	// #1
     264:	str	x0, [x23, #24]
     268:	mov	x0, #0x21                  	// #33
     26c:	bl	0 <grub_malloc>
     270:	str	x0, [x23, #16]
     274:	mov	x0, #0x41                  	// #65
     278:	bl	0 <grub_malloc>
     27c:	str	x0, [x23]
     280:	mov	x1, x0
     284:	cbz	x0, 920 <grub_ldm_detect+0x8e8>
     288:	ldr	x2, [x23, #16]
     28c:	cbz	x2, 920 <grub_ldm_detect+0x8e8>
     290:	mov	x1, x22
     294:	mov	x2, #0x40                  	// #64
     298:	bl	0 <grub_memmove>
     29c:	ldr	x0, [x23, #16]
     2a0:	add	x1, sp, #0x1a0
     2a4:	mov	x2, #0x20                  	// #32
     2a8:	bl	0 <grub_memmove>
     2ac:	ldr	x0, [x23, #16]
     2b0:	strb	wzr, [x0, #32]
     2b4:	ldr	x0, [x23]
     2b8:	strb	wzr, [x0, #64]
     2bc:	ldr	x0, [x23]
     2c0:	bl	0 <grub_strlen>
     2c4:	add	x1, sp, #0x250
     2c8:	ldur	x24, [x1, #-117]
     2cc:	str	x0, [x23, #8]
     2d0:	mov	x0, x1
     2d4:	rev	x24, x24
     2d8:	add	x1, x24, #0x12
     2dc:	str	x1, [sp, #120]
     2e0:	ldur	x0, [x0, #-109]
     2e4:	stp	xzr, xzr, [x23, #32]
     2e8:	rev	x0, x0
     2ec:	add	x0, x24, x0
     2f0:	str	x0, [sp, #104]
     2f4:	cmp	x0, x1
     2f8:	b.ls	51c <grub_ldm_detect+0x4e4>  // b.plast
     2fc:	mov	x25, x1
     300:	add	x26, sp, #0x3f0
     304:	nop
     308:	add	x4, sp, #0x1f0
     30c:	mov	x1, x25
     310:	mov	x0, x19
     314:	mov	x3, #0x200                 	// #512
     318:	mov	x2, #0x0                   	// #0
     31c:	bl	0 <grub_disk_read>
     320:	cbnz	w0, 628 <grub_ldm_detect+0x5f0>
     324:	adrp	x0, 0 <check_ldm_partition>
     328:	add	x24, sp, #0x1f0
     32c:	ldr	x22, [x0]
     330:	mov	x1, x22
     334:	mov	x0, x24
     338:	mov	x2, #0x4                   	// #4
     33c:	bl	0 <grub_memcmp>
     340:	cbnz	w0, 534 <grub_ldm_detect+0x4fc>
     344:	ldrh	w0, [x24, #16]
     348:	lsr	w1, w0, #8
     34c:	orr	w0, w1, w0, lsl #8
     350:	and	w0, w0, #0xffff
     354:	cmp	w0, #0x1
     358:	b.hi	534 <grub_ldm_detect+0x4fc>  // b.pmore
     35c:	ldrb	w0, [x24, #19]
     360:	add	x28, x24, #0x80
     364:	cmp	w0, #0x34
     368:	b.eq	53c <grub_ldm_detect+0x504>  // b.none
     36c:	cmp	x28, x26
     370:	mov	x24, x28
     374:	b.ne	330 <grub_ldm_detect+0x2f8>  // b.any
     378:	ldr	x0, [sp, #104]
     37c:	add	x25, x25, #0x1
     380:	cmp	x0, x25
     384:	b.hi	308 <grub_ldm_detect+0x2d0>  // b.pmore
     388:	ldr	x26, [sp, #120]
     38c:	nop
     390:	add	x4, sp, #0x1f0
     394:	mov	x1, x26
     398:	mov	x0, x19
     39c:	mov	x3, #0x200                 	// #512
     3a0:	mov	x2, #0x0                   	// #0
     3a4:	bl	0 <grub_disk_read>
     3a8:	cbnz	w0, 628 <grub_ldm_detect+0x5f0>
     3ac:	add	x28, sp, #0x1f0
     3b0:	add	x25, sp, #0x3f0
     3b4:	mov	x1, x22
     3b8:	mov	x0, x28
     3bc:	mov	x2, #0x4                   	// #4
     3c0:	bl	0 <grub_memcmp>
     3c4:	cbnz	w0, 610 <grub_ldm_detect+0x5d8>
     3c8:	ldrh	w0, [x28, #16]
     3cc:	lsr	w1, w0, #8
     3d0:	orr	w0, w1, w0, lsl #8
     3d4:	and	w0, w0, #0xffff
     3d8:	cmp	w0, #0x1
     3dc:	b.hi	610 <grub_ldm_detect+0x5d8>  // b.pmore
     3e0:	ldrb	w0, [x28, #19]
     3e4:	add	x4, x28, #0x80
     3e8:	cmp	w0, #0x51
     3ec:	b.eq	6ec <grub_ldm_detect+0x6b4>  // b.none
     3f0:	cmp	x25, x4
     3f4:	mov	x28, x4
     3f8:	b.ne	3b4 <grub_ldm_detect+0x37c>  // b.any
     3fc:	ldr	x0, [sp, #104]
     400:	add	x26, x26, #0x1
     404:	cmp	x0, x26
     408:	b.hi	390 <grub_ldm_detect+0x358>  // b.pmore
     40c:	ldr	x0, [sp, #120]
     410:	str	x0, [sp, #112]
     414:	ldr	x1, [sp, #112]
     418:	add	x4, sp, #0x1f0
     41c:	mov	x0, x19
     420:	mov	x3, #0x200                 	// #512
     424:	mov	x2, #0x0                   	// #0
     428:	bl	0 <grub_disk_read>
     42c:	cbnz	w0, 628 <grub_ldm_detect+0x5f0>
     430:	add	x27, sp, #0x1f0
     434:	mov	x1, x22
     438:	mov	x0, x27
     43c:	mov	x2, #0x4                   	// #4
     440:	bl	0 <grub_memcmp>
     444:	cbnz	w0, 6e4 <grub_ldm_detect+0x6ac>
     448:	ldrh	w0, [x27, #16]
     44c:	lsr	w1, w0, #8
     450:	orr	w0, w1, w0, lsl #8
     454:	and	w0, w0, #0xffff
     458:	cmp	w0, #0x1
     45c:	b.hi	6e4 <grub_ldm_detect+0x6ac>  // b.pmore
     460:	ldrb	w0, [x27, #19]
     464:	add	x25, x27, #0x80
     468:	cmp	w0, #0x32
     46c:	b.eq	93c <grub_ldm_detect+0x904>  // b.none
     470:	add	x0, sp, #0x3f0
     474:	mov	x27, x25
     478:	cmp	x0, x25
     47c:	b.ne	434 <grub_ldm_detect+0x3fc>  // b.any
     480:	ldp	x1, x0, [sp, #104]
     484:	add	x0, x0, #0x1
     488:	str	x0, [sp, #112]
     48c:	cmp	x1, x0
     490:	b.hi	414 <grub_ldm_detect+0x3dc>  // b.pmore
     494:	mov	x24, #0x100000001           	// #4294967297
     498:	ldr	x1, [sp, #120]
     49c:	add	x4, sp, #0x1f0
     4a0:	mov	x0, x19
     4a4:	mov	x3, #0x200                 	// #512
     4a8:	mov	x2, #0x0                   	// #0
     4ac:	bl	0 <grub_disk_read>
     4b0:	cbnz	w0, 628 <grub_ldm_detect+0x5f0>
     4b4:	add	x27, sp, #0x1f0
     4b8:	mov	x1, x22
     4bc:	mov	x0, x27
     4c0:	mov	x2, #0x4                   	// #4
     4c4:	bl	0 <grub_memcmp>
     4c8:	cbnz	w0, 934 <grub_ldm_detect+0x8fc>
     4cc:	ldrh	w0, [x27, #16]
     4d0:	lsr	w1, w0, #8
     4d4:	orr	w0, w1, w0, lsl #8
     4d8:	and	w0, w0, #0xffff
     4dc:	cmp	w0, #0x1
     4e0:	b.hi	934 <grub_ldm_detect+0x8fc>  // b.pmore
     4e4:	ldrb	w0, [x27, #19]
     4e8:	add	x28, x27, #0x80
     4ec:	cmp	w0, #0x33
     4f0:	b.eq	bd0 <grub_ldm_detect+0xb98>  // b.none
     4f4:	add	x0, sp, #0x3f0
     4f8:	mov	x27, x28
     4fc:	cmp	x0, x28
     500:	b.ne	4b8 <grub_ldm_detect+0x480>  // b.any
     504:	ldr	x0, [sp, #120]
     508:	ldr	x1, [sp, #104]
     50c:	add	x0, x0, #0x1
     510:	str	x0, [sp, #120]
     514:	cmp	x1, x0
     518:	b.hi	498 <grub_ldm_detect+0x460>  // b.pmore
     51c:	mov	x0, x23
     520:	bl	0 <grub_diskfilter_vg_register>
     524:	cbnz	w0, 628 <grub_ldm_detect+0x5f0>
     528:	mov	x21, x23
     52c:	ldp	x27, x28, [sp, #80]
     530:	b	12c <grub_ldm_detect+0xf4>
     534:	add	x28, x24, #0x80
     538:	b	36c <grub_ldm_detect+0x334>
     53c:	mov	x0, #0x48                  	// #72
     540:	bl	0 <grub_zalloc>
     544:	mov	x27, x0
     548:	cbz	x0, 628 <grub_ldm_detect+0x5f0>
     54c:	str	xzr, [x0, #24]
     550:	add	x1, x24, #0x18
     554:	ldrb	w6, [x24, #24]
     558:	and	x2, x6, #0xff
     55c:	add	x2, x2, #0x1
     560:	add	x2, x1, x2
     564:	cmp	x28, x2
     568:	b.ls	624 <grub_ldm_detect+0x5ec>  // b.plast
     56c:	add	w0, w6, #0x2
     570:	str	x1, [sp, #112]
     574:	sxtw	x0, w0
     578:	bl	0 <grub_malloc>
     57c:	str	x0, [x27, #64]
     580:	ldr	x1, [sp, #112]
     584:	cbz	x0, 914 <grub_ldm_detect+0x8dc>
     588:	ldrb	w2, [x24, #24]
     58c:	str	x1, [sp, #112]
     590:	add	x2, x2, #0x1
     594:	bl	0 <grub_memmove>
     598:	ldr	x0, [x27, #64]
     59c:	ldrb	w2, [x24, #24]
     5a0:	ldr	x1, [sp, #112]
     5a4:	add	x0, x0, x2
     5a8:	strb	wzr, [x0, #1]
     5ac:	ldrb	w0, [x24, #24]
     5b0:	add	x0, x0, #0x1
     5b4:	add	x2, x1, x0
     5b8:	ldrb	w0, [x1, x0]
     5bc:	add	x0, x0, #0x1
     5c0:	add	x24, x2, x0
     5c4:	cmp	x24, x28
     5c8:	b.cs	914 <grub_ldm_detect+0x8dc>  // b.hs, b.nlast
     5cc:	ldrb	w2, [x2, x0]
     5d0:	add	x0, x2, #0x1
     5d4:	add	x3, x24, x0
     5d8:	cmp	x28, x3
     5dc:	b.ls	914 <grub_ldm_detect+0x8dc>  // b.plast
     5e0:	str	x2, [x27, #8]
     5e4:	bl	0 <grub_malloc>
     5e8:	str	x0, [x27]
     5ec:	ldr	x2, [x27, #8]
     5f0:	add	x1, x24, #0x1
     5f4:	bl	0 <grub_memmove>
     5f8:	ldp	x1, x0, [x27]
     5fc:	strb	wzr, [x1, x0]
     600:	ldr	x0, [x23, #32]
     604:	str	x0, [x27, #56]
     608:	str	x27, [x23, #32]
     60c:	b	36c <grub_ldm_detect+0x334>
     610:	add	x4, x28, #0x80
     614:	b	3f0 <grub_ldm_detect+0x3b8>
     618:	ldr	x0, [x28, #88]
     61c:	bl	0 <grub_free>
     620:	mov	x0, x28
     624:	bl	0 <grub_free>
     628:	ldr	x22, [x23, #40]
     62c:	mov	w24, #0x38                  	// #56
     630:	cbz	x22, 6a0 <grub_ldm_detect+0x668>
     634:	nop
     638:	ldr	w0, [x22, #28]
     63c:	mov	w19, #0x0                   	// #0
     640:	cbz	w0, 668 <grub_ldm_detect+0x630>
     644:	nop
     648:	ldr	x0, [x22, #64]
     64c:	umaddl	x0, w19, w24, x0
     650:	add	w19, w19, #0x1
     654:	ldr	x0, [x0, #40]
     658:	bl	0 <grub_free>
     65c:	ldr	w0, [x22, #28]
     660:	cmp	w19, w0
     664:	b.cc	648 <grub_ldm_detect+0x610>  // b.lo, b.ul, b.last
     668:	ldr	x0, [x22, #64]
     66c:	ldr	x19, [x22, #80]
     670:	bl	0 <grub_free>
     674:	ldr	x0, [x22, #88]
     678:	bl	0 <grub_free>
     67c:	ldr	x0, [x22, #16]
     680:	bl	0 <grub_free>
     684:	ldr	x0, [x22]
     688:	bl	0 <grub_free>
     68c:	mov	x0, x22
     690:	bl	0 <grub_free>
     694:	cbz	x19, 6a0 <grub_ldm_detect+0x668>
     698:	mov	x22, x19
     69c:	b	638 <grub_ldm_detect+0x600>
     6a0:	ldr	x19, [x23, #32]
     6a4:	cbz	x19, 6c4 <grub_ldm_detect+0x68c>
     6a8:	mov	x22, x19
     6ac:	ldr	x19, [x19, #56]
     6b0:	ldr	x0, [x22]
     6b4:	bl	0 <grub_free>
     6b8:	mov	x0, x22
     6bc:	bl	0 <grub_free>
     6c0:	cbnz	x19, 6a8 <grub_ldm_detect+0x670>
     6c4:	ldr	x0, [x23]
     6c8:	bl	0 <grub_free>
     6cc:	mov	x0, x23
     6d0:	bl	0 <grub_free>
     6d4:	ldr	x0, [x20]
     6d8:	bl	0 <grub_free>
     6dc:	ldp	x27, x28, [sp, #80]
     6e0:	b	12c <grub_ldm_detect+0xf4>
     6e4:	add	x25, x27, #0x80
     6e8:	b	470 <grub_ldm_detect+0x438>
     6ec:	mov	x0, #0x60                  	// #96
     6f0:	str	x4, [sp, #128]
     6f4:	bl	0 <grub_zalloc>
     6f8:	mov	x27, x0
     6fc:	cbz	x0, 628 <grub_ldm_detect+0x5f0>
     700:	mov	x1, #0x1                   	// #1
     704:	mov	w0, #0x1                   	// #1
     708:	str	w0, [x27, #28]
     70c:	mov	x0, #0x38                  	// #56
     710:	str	x1, [x27, #32]
     714:	str	w1, [x27, #56]
     718:	str	x23, [x27, #72]
     71c:	bl	0 <grub_zalloc>
     720:	str	x0, [x27, #64]
     724:	mov	x24, x0
     728:	cbz	x0, 628 <grub_ldm_detect+0x5f0>
     72c:	mov	x1, #0x800000000           	// #34359738368
     730:	mov	w0, #0x1                   	// #1
     734:	str	xzr, [x24]
     738:	str	w0, [x24, #16]
     73c:	mov	x0, #0x100                 	// #256
     740:	str	x1, [x24, #32]
     744:	bl	0 <grub_zalloc>
     748:	ldr	x1, [x27, #64]
     74c:	str	x0, [x24, #40]
     750:	ldr	x0, [x1, #40]
     754:	cbz	x0, 628 <grub_ldm_detect+0x5f0>
     758:	ldrb	w0, [x28, #24]
     75c:	add	x1, x28, #0x18
     760:	ldr	x4, [sp, #128]
     764:	mov	x2, x1
     768:	add	x1, x0, #0x1
     76c:	str	x2, [sp, #112]
     770:	add	x1, x2, x1
     774:	cmp	x4, x1
     778:	b.ls	914 <grub_ldm_detect+0x8dc>  // b.plast
     77c:	add	x0, x0, #0x2
     780:	str	x4, [sp, #128]
     784:	bl	0 <grub_malloc>
     788:	str	x0, [x27, #88]
     78c:	ldr	x4, [sp, #128]
     790:	cbz	x0, 914 <grub_ldm_detect+0x8dc>
     794:	ldr	x24, [sp, #112]
     798:	str	x4, [sp, #128]
     79c:	ldrb	w2, [x28, #24]
     7a0:	mov	x1, x24
     7a4:	add	x2, x2, #0x1
     7a8:	bl	0 <grub_memmove>
     7ac:	ldr	x0, [x27, #88]
     7b0:	ldrb	w1, [x28, #24]
     7b4:	ldr	x4, [sp, #128]
     7b8:	add	x0, x0, x1
     7bc:	strb	wzr, [x0, #1]
     7c0:	mov	x0, x24
     7c4:	ldrb	w3, [x28, #24]
     7c8:	add	x28, x3, #0x1
     7cc:	add	x24, x24, x28
     7d0:	ldrb	w1, [x0, x28]
     7d4:	and	x0, x1, #0xff
     7d8:	add	x0, x0, #0x1
     7dc:	add	x0, x24, x0
     7e0:	cmp	x4, x0
     7e4:	b.ls	914 <grub_ldm_detect+0x8dc>  // b.plast
     7e8:	add	w0, w1, #0x1
     7ec:	str	x4, [sp, #128]
     7f0:	sxtw	x0, w0
     7f4:	bl	0 <grub_malloc>
     7f8:	str	x0, [x27, #16]
     7fc:	ldr	x4, [sp, #128]
     800:	cbz	x0, d84 <grub_ldm_detect+0xd4c>
     804:	ldr	x1, [sp, #112]
     808:	str	x4, [sp, #128]
     80c:	ldrb	w2, [x1, x28]
     810:	add	x1, x24, #0x1
     814:	bl	0 <grub_memmove>
     818:	ldr	x1, [sp, #112]
     81c:	adrp	x0, 0 <check_ldm_partition>
     820:	ldr	x2, [x27, #16]
     824:	ldrb	w1, [x1, x28]
     828:	ldr	x0, [x0]
     82c:	strb	wzr, [x2, x1]
     830:	ldr	x1, [x23]
     834:	ldr	x2, [x27, #16]
     838:	bl	0 <grub_xasprintf>
     83c:	str	x0, [x27]
     840:	ldr	x4, [sp, #128]
     844:	cbz	x0, 904 <grub_ldm_detect+0x8cc>
     848:	ldr	x0, [sp, #112]
     84c:	ldrb	w0, [x0, x28]
     850:	add	x0, x0, #0x1
     854:	add	x2, x24, x0
     858:	ldrb	w1, [x24, x0]
     85c:	add	x1, x1, #0x1
     860:	add	x0, x2, x1
     864:	cmp	x0, x4
     868:	b.cs	904 <grub_ldm_detect+0x8cc>  // b.hs, b.nlast
     86c:	ldrb	w1, [x2, x1]
     870:	add	x1, x1, #0x1
     874:	add	x0, x0, x1
     878:	cmp	x0, x4
     87c:	b.cs	904 <grub_ldm_detect+0x8cc>  // b.hs, b.nlast
     880:	add	x1, x0, #0x15
     884:	cmp	x1, x4
     888:	b.cs	904 <grub_ldm_detect+0x8cc>  // b.hs, b.nlast
     88c:	ldrb	w0, [x0, #21]
     890:	add	x0, x0, #0x1
     894:	add	x1, x1, x0
     898:	cmp	x1, x4
     89c:	b.cs	904 <grub_ldm_detect+0x8cc>  // b.hs, b.nlast
     8a0:	add	x0, x1, #0x10
     8a4:	cmp	x0, x4
     8a8:	b.cs	904 <grub_ldm_detect+0x8cc>  // b.hs, b.nlast
     8ac:	ldrb	w3, [x1, #16]
     8b0:	add	x2, x3, #0x1
     8b4:	add	x0, x0, x2
     8b8:	cmp	x4, x0
     8bc:	b.ls	904 <grub_ldm_detect+0x8cc>  // b.plast
     8c0:	add	x1, x1, #0x11
     8c4:	mov	x0, #0x0                   	// #0
     8c8:	add	x3, x1, x3
     8cc:	cmp	x1, x3
     8d0:	b.cs	8e8 <grub_ldm_detect+0x8b0>  // b.hs, b.nlast
     8d4:	nop
     8d8:	ldrb	w2, [x1], #1
     8dc:	cmp	x1, x3
     8e0:	orr	x0, x2, x0, lsl #8
     8e4:	b.ne	8d8 <grub_ldm_detect+0x8a0>  // b.any
     8e8:	ldr	x2, [x27, #64]
     8ec:	ldr	x1, [x23, #40]
     8f0:	str	x0, [x27, #40]
     8f4:	str	x0, [x2, #8]
     8f8:	str	x1, [x27, #80]
     8fc:	str	x27, [x23, #40]
     900:	b	3f0 <grub_ldm_detect+0x3b8>
     904:	ldr	x0, [x27, #88]
     908:	bl	0 <grub_free>
     90c:	ldr	x0, [x27, #16]
     910:	bl	0 <grub_free>
     914:	mov	x0, x27
     918:	bl	0 <grub_free>
     91c:	b	628 <grub_ldm_detect+0x5f0>
     920:	mov	x0, x1
     924:	bl	0 <grub_free>
     928:	ldr	x0, [x23, #16]
     92c:	bl	0 <grub_free>
     930:	b	6d4 <grub_ldm_detect+0x69c>
     934:	add	x28, x27, #0x80
     938:	b	4f4 <grub_ldm_detect+0x4bc>
     93c:	mov	x0, #0x60                  	// #96
     940:	bl	0 <grub_zalloc>
     944:	mov	x28, x0
     948:	cbz	x0, 628 <grub_ldm_detect+0x5f0>
     94c:	str	xzr, [x0]
     950:	add	x24, x27, #0x18
     954:	str	xzr, [x0, #16]
     958:	str	wzr, [x0, #56]
     95c:	ldrb	w0, [x27, #24]
     960:	add	x1, x0, #0x1
     964:	add	x1, x24, x1
     968:	cmp	x25, x1
     96c:	b.ls	628 <grub_ldm_detect+0x5f0>  // b.plast
     970:	add	x0, x0, #0x2
     974:	bl	0 <grub_malloc>
     978:	str	x0, [x28, #88]
     97c:	cbz	x0, 620 <grub_ldm_detect+0x5e8>
     980:	ldrb	w2, [x27, #24]
     984:	mov	x1, x24
     988:	add	x2, x2, #0x1
     98c:	bl	0 <grub_memmove>
     990:	ldr	x0, [x28, #88]
     994:	ldrb	w1, [x27, #24]
     998:	add	x0, x0, x1
     99c:	strb	wzr, [x0, #1]
     9a0:	ldrb	w0, [x27, #24]
     9a4:	add	x0, x0, #0x1
     9a8:	add	x1, x24, x0
     9ac:	ldrb	w0, [x24, x0]
     9b0:	add	x0, x0, #0x1
     9b4:	add	x2, x1, x0
     9b8:	cmp	x2, x25
     9bc:	b.cs	618 <grub_ldm_detect+0x5e0>  // b.hs, b.nlast
     9c0:	ldrb	w0, [x1, x0]
     9c4:	add	x0, x0, #0x1
     9c8:	add	x1, x2, x0
     9cc:	cmp	x1, x25
     9d0:	b.cs	618 <grub_ldm_detect+0x5e0>  // b.hs, b.nlast
     9d4:	add	x8, x1, #0x5
     9d8:	ldrb	w24, [x2, x0]
     9dc:	cmp	x8, x25
     9e0:	b.cs	618 <grub_ldm_detect+0x5e0>  // b.hs, b.nlast
     9e4:	ldrb	w0, [x1, #5]
     9e8:	add	x0, x0, #0x1
     9ec:	add	x8, x8, x0
     9f0:	cmp	x8, x25
     9f4:	b.cs	618 <grub_ldm_detect+0x5e0>  // b.hs, b.nlast
     9f8:	ldrb	w2, [x8, #16]
     9fc:	add	x1, x8, #0x10
     a00:	str	x1, [sp, #144]
     a04:	and	x0, x2, #0xff
     a08:	add	x0, x0, #0x1
     a0c:	add	x0, x1, x0
     a10:	cmp	x25, x0
     a14:	b.ls	618 <grub_ldm_detect+0x5e0>  // b.plast
     a18:	ldr	x26, [x23, #40]
     a1c:	cbz	x26, bbc <grub_ldm_detect+0xb84>
     a20:	add	x1, x8, #0x11
     a24:	b	a34 <grub_ldm_detect+0x9fc>
     a28:	ldr	x26, [x26, #80]
     a2c:	cbz	x26, bbc <grub_ldm_detect+0xb84>
     a30:	ldrb	w2, [x8, #16]
     a34:	ldr	x0, [x26, #88]
     a38:	ldrb	w7, [x0]
     a3c:	cmp	w7, w2
     a40:	b.ne	a28 <grub_ldm_detect+0x9f0>  // b.any
     a44:	and	x2, x2, #0xff
     a48:	add	x0, x0, #0x1
     a4c:	stp	x1, x8, [sp, #128]
     a50:	bl	0 <grub_memcmp>
     a54:	ldp	x1, x8, [sp, #128]
     a58:	cbnz	w0, a28 <grub_ldm_detect+0x9f0>
     a5c:	ldr	x0, [x26, #40]
     a60:	str	x0, [x28, #40]
     a64:	cmp	w24, #0x2
     a68:	b.eq	d5c <grub_ldm_detect+0xd24>  // b.none
     a6c:	mov	x1, #0x1                   	// #1
     a70:	mov	w0, #0x1                   	// #1
     a74:	str	w0, [x28, #28]
     a78:	mov	x0, #0x38                  	// #56
     a7c:	str	x1, [x28, #32]
     a80:	str	x8, [sp, #128]
     a84:	bl	0 <grub_malloc>
     a88:	str	x0, [x28, #64]
     a8c:	mov	x1, x0
     a90:	cbz	x0, 628 <grub_ldm_detect+0x5f0>
     a94:	ldr	x0, [x26, #40]
     a98:	stp	xzr, x0, [x1]
     a9c:	cmp	w24, #0x1
     aa0:	str	wzr, [x1, #20]
     aa4:	ldr	x8, [sp, #128]
     aa8:	b.eq	dbc <grub_ldm_detect+0xd84>  // b.none
     aac:	cmp	w24, #0x3
     ab0:	b.ne	628 <grub_ldm_detect+0x5f0>  // b.any
     ab4:	mov	x0, #0x5                   	// #5
     ab8:	movk	x0, #0x2, lsl #32
     abc:	str	x0, [x1, #16]
     ac0:	ldrb	w2, [x8, #16]
     ac4:	ldrb	w0, [x27, #18]
     ac8:	ldr	x3, [sp, #144]
     acc:	add	x2, x2, #0x1
     ad0:	add	x2, x3, x2
     ad4:	add	x9, x2, #0x1
     ad8:	tbz	w0, #4, 628 <grub_ldm_detect+0x5f0>
     adc:	cmp	x9, x25
     ae0:	b.cs	618 <grub_ldm_detect+0x5e0>  // b.hs, b.nlast
     ae4:	ldrb	w7, [x2, #1]
     ae8:	add	x0, x7, #0x1
     aec:	add	x0, x9, x0
     af0:	cmp	x25, x0
     af4:	b.ls	618 <grub_ldm_detect+0x5e0>  // b.plast
     af8:	add	x0, x2, #0x2
     afc:	mov	x3, #0x0                   	// #0
     b00:	add	x7, x0, x7
     b04:	cmp	x0, x7
     b08:	b.cs	b1c <grub_ldm_detect+0xae4>  // b.hs, b.nlast
     b0c:	ldrb	w8, [x0], #1
     b10:	cmp	x0, x7
     b14:	orr	x3, x8, x3, lsl #8
     b18:	b.ne	b0c <grub_ldm_detect+0xad4>  // b.any
     b1c:	str	w3, [x1, #48]
     b20:	ldrb	w2, [x2, #1]
     b24:	add	x2, x2, #0x1
     b28:	add	x0, x9, x2
     b2c:	ldrb	w3, [x9, x2]
     b30:	add	x3, x3, #0x1
     b34:	add	x3, x0, x3
     b38:	cmp	x3, x25
     b3c:	b.cs	618 <grub_ldm_detect+0x5e0>  // b.hs, b.nlast
     b40:	add	x0, x0, #0x1
     b44:	mov	x2, #0x0                   	// #0
     b48:	cmp	x3, x0
     b4c:	b.ls	b60 <grub_ldm_detect+0xb28>  // b.plast
     b50:	ldrb	w7, [x0], #1
     b54:	cmp	x3, x0
     b58:	orr	x2, x7, x2, lsl #8
     b5c:	b.ne	b50 <grub_ldm_detect+0xb18>  // b.any
     b60:	stp	w2, w2, [x1, #32]
     b64:	ubfiz	x0, x2, #5, #32
     b68:	str	x1, [sp, #128]
     b6c:	bl	0 <grub_zalloc>
     b70:	ldr	x1, [sp, #128]
     b74:	ldr	x2, [x26, #64]
     b78:	str	x0, [x1, #40]
     b7c:	ldr	x0, [x2, #40]
     b80:	cbz	x0, 628 <grub_ldm_detect+0x5f0>
     b84:	ldp	w1, w3, [x2, #32]
     b88:	cmp	w3, w1
     b8c:	b.eq	d98 <grub_ldm_detect+0xd60>  // b.none
     b90:	ubfiz	x4, x1, #5, #32
     b94:	add	w1, w1, #0x1
     b98:	add	x3, x0, x4
     b9c:	ldr	x7, [x23, #40]
     ba0:	str	xzr, [x3, #16]
     ba4:	str	xzr, [x0, x4]
     ba8:	str	w1, [x2, #32]
     bac:	str	x28, [x3, #24]
     bb0:	str	x7, [x28, #80]
     bb4:	str	x28, [x23, #40]
     bb8:	b	470 <grub_ldm_detect+0x438>
     bbc:	ldr	x0, [x28, #88]
     bc0:	bl	0 <grub_free>
     bc4:	mov	x0, x28
     bc8:	bl	0 <grub_free>
     bcc:	b	470 <grub_ldm_detect+0x438>
     bd0:	ldrb	w1, [x27, #24]
     bd4:	add	x3, x27, #0x18
     bd8:	add	x1, x1, #0x1
     bdc:	add	x0, x3, x1
     be0:	cmp	x28, x0
     be4:	b.ls	628 <grub_ldm_detect+0x5f0>  // b.plast
     be8:	ldrb	w1, [x3, x1]
     bec:	add	x1, x1, #0x1
     bf0:	add	x0, x0, x1
     bf4:	cmp	x28, x0
     bf8:	b.ls	628 <grub_ldm_detect+0x5f0>  // b.plast
     bfc:	add	x3, x0, #0x1c
     c00:	add	x2, x0, #0xc
     c04:	cmp	x28, x3
     c08:	b.ls	628 <grub_ldm_detect+0x5f0>  // b.plast
     c0c:	add	x1, x0, #0x14
     c10:	mov	x26, #0x0                   	// #0
     c14:	cmp	x1, x2
     c18:	b.ls	c2c <grub_ldm_detect+0xbf4>  // b.plast
     c1c:	ldrb	w4, [x2], #1
     c20:	cmp	x2, x1
     c24:	orr	x26, x4, x26, lsl #8
     c28:	b.ne	c1c <grub_ldm_detect+0xbe4>  // b.any
     c2c:	mov	x9, #0x0                   	// #0
     c30:	ldrb	w2, [x1], #1
     c34:	cmp	x1, x3
     c38:	orr	x9, x2, x9, lsl #8
     c3c:	b.ne	c30 <grub_ldm_detect+0xbf8>  // b.any
     c40:	ldrb	w2, [x0, #28]
     c44:	add	x3, x2, #0x1
     c48:	add	x3, x1, x3
     c4c:	cmp	x28, x3
     c50:	b.ls	628 <grub_ldm_detect+0x5f0>  // b.plast
     c54:	add	x0, x0, #0x1d
     c58:	mov	x8, #0x0                   	// #0
     c5c:	add	x1, x0, x2
     c60:	cmp	x1, x0
     c64:	b.ls	c78 <grub_ldm_detect+0xc40>  // b.plast
     c68:	ldrb	w2, [x0], #1
     c6c:	cmp	x1, x0
     c70:	orr	x8, x2, x8, lsl #8
     c74:	b.ne	c68 <grub_ldm_detect+0xc30>  // b.any
     c78:	ldrb	w2, [x3]
     c7c:	ldr	x27, [x23, #40]
     c80:	and	x0, x2, #0xff
     c84:	add	x0, x0, #0x1
     c88:	add	x0, x3, x0
     c8c:	cmp	x28, x0
     c90:	b.ls	628 <grub_ldm_detect+0x5f0>  // b.plast
     c94:	cbz	x27, 4f4 <grub_ldm_detect+0x4bc>
     c98:	add	x25, x3, #0x1
     c9c:	b	cac <grub_ldm_detect+0xc74>
     ca0:	ldr	x27, [x27, #80]
     ca4:	cbz	x27, 4f4 <grub_ldm_detect+0x4bc>
     ca8:	ldrb	w2, [x3]
     cac:	ldr	x1, [x27, #88]
     cb0:	ldrb	w0, [x1]
     cb4:	cmp	w0, w2
     cb8:	b.ne	ca0 <grub_ldm_detect+0xc68>  // b.any
     cbc:	and	x2, x2, #0xff
     cc0:	add	x1, x1, #0x1
     cc4:	mov	x0, x25
     cc8:	str	x9, [sp, #112]
     ccc:	stp	x3, x8, [sp, #128]
     cd0:	bl	0 <grub_memcmp>
     cd4:	ldr	x9, [sp, #112]
     cd8:	ldp	x3, x8, [sp, #128]
     cdc:	cbnz	w0, ca0 <grub_ldm_detect+0xc68>
     ce0:	ldrb	w11, [x3]
     ce4:	add	x11, x11, #0x1
     ce8:	add	x10, x3, x11
     cec:	cmp	x28, x10
     cf0:	b.ls	628 <grub_ldm_detect+0x5f0>  // b.plast
     cf4:	ldr	x25, [x23, #32]
     cf8:	cbz	x25, dc8 <grub_ldm_detect+0xd90>
     cfc:	add	x1, x10, #0x1
     d00:	mov	x12, #0x0                   	// #0
     d04:	b	d10 <grub_ldm_detect+0xcd8>
     d08:	ldr	x25, [x25, #56]
     d0c:	cbz	x25, dc4 <grub_ldm_detect+0xd8c>
     d10:	ldr	x0, [x25, #64]
     d14:	ldrb	w13, [x10]
     d18:	ldrb	w2, [x0]
     d1c:	cmp	w2, w13
     d20:	b.ne	d08 <grub_ldm_detect+0xcd0>  // b.any
     d24:	and	x2, x2, #0xff
     d28:	add	x0, x0, #0x1
     d2c:	str	x1, [sp, #112]
     d30:	stp	x9, x3, [sp, #128]
     d34:	stp	x8, x10, [sp, #144]
     d38:	stp	x12, x11, [sp, #160]
     d3c:	bl	0 <grub_memcmp>
     d40:	cmp	w0, #0x0
     d44:	ldp	x12, x11, [sp, #160]
     d48:	ldr	x1, [sp, #112]
     d4c:	ldp	x9, x3, [sp, #128]
     d50:	csel	x12, x12, x25, ne  // ne = any
     d54:	ldp	x8, x10, [sp, #144]
     d58:	b	d08 <grub_ldm_detect+0xcd0>
     d5c:	mov	x0, #0x8                   	// #8
     d60:	str	wzr, [x28, #28]
     d64:	str	x0, [x28, #32]
     d68:	mov	x0, #0x1c0                 	// #448
     d6c:	bl	0 <grub_malloc>
     d70:	str	x0, [x28, #64]
     d74:	cbz	x0, 628 <grub_ldm_detect+0x5f0>
     d78:	ldr	x2, [x26, #64]
     d7c:	ldr	x0, [x2, #40]
     d80:	b	b84 <grub_ldm_detect+0xb4c>
     d84:	ldr	x0, [x27, #88]
     d88:	bl	0 <grub_free>
     d8c:	mov	x0, x27
     d90:	bl	0 <grub_free>
     d94:	b	628 <grub_ldm_detect+0x5f0>
     d98:	lsl	w1, w1, #1
     d9c:	str	w1, [x2, #36]
     da0:	lsl	x1, x1, #5
     da4:	bl	0 <grub_realloc>
     da8:	cbz	x0, 628 <grub_ldm_detect+0x5f0>
     dac:	ldr	x2, [x26, #64]
     db0:	ldr	w1, [x2, #32]
     db4:	str	x0, [x2, #40]
     db8:	b	b90 <grub_ldm_detect+0xb58>
     dbc:	str	wzr, [x1, #16]
     dc0:	b	ac0 <grub_ldm_detect+0xa88>
     dc4:	mov	x25, x12
     dc8:	ldr	x1, [x27, #32]
     dcc:	cmp	x1, #0x1
     dd0:	b.eq	e78 <grub_ldm_detect+0xe40>  // b.none
     dd4:	ldr	w0, [x27, #28]
     dd8:	cmp	x1, x0
     ddc:	b.eq	e44 <grub_ldm_detect+0xe0c>  // b.none
     de0:	ldr	w1, [x27, #28]
     de4:	mov	w2, #0x38                  	// #56
     de8:	ldr	x3, [x27, #64]
     dec:	mov	x0, #0x20                  	// #32
     df0:	umull	x1, w1, w2
     df4:	add	x2, x3, x1
     df8:	str	x2, [sp, #112]
     dfc:	str	x9, [x3, x1]
     e00:	str	x8, [x2, #8]
     e04:	str	wzr, [x2, #16]
     e08:	str	x24, [x2, #32]
     e0c:	bl	0 <grub_malloc>
     e10:	ldr	x2, [sp, #112]
     e14:	ldr	w1, [x27, #28]
     e18:	ldr	x3, [x27, #64]
     e1c:	str	x0, [x2, #40]
     e20:	mov	w0, #0x38                  	// #56
     e24:	umaddl	x3, w1, w0, x3
     e28:	ldr	x0, [x3, #40]
     e2c:	cbz	x0, 628 <grub_ldm_detect+0x5f0>
     e30:	stp	x26, xzr, [x0]
     e34:	add	w1, w1, #0x1
     e38:	stp	x25, xzr, [x0, #16]
     e3c:	str	w1, [x27, #28]
     e40:	b	4f4 <grub_ldm_detect+0x4bc>
     e44:	mov	x3, #0x70                  	// #112
     e48:	lsl	x2, x1, #1
     e4c:	ldr	x0, [x27, #64]
     e50:	mul	x1, x1, x3
     e54:	str	x2, [x27, #32]
     e58:	str	x9, [sp, #112]
     e5c:	str	x8, [sp, #128]
     e60:	bl	0 <grub_realloc>
     e64:	cbz	x0, 628 <grub_ldm_detect+0x5f0>
     e68:	str	x0, [x27, #64]
     e6c:	ldr	x9, [sp, #112]
     e70:	ldr	x8, [sp, #128]
     e74:	b	de0 <grub_ldm_detect+0xda8>
     e78:	ldrb	w0, [x3, x11]
     e7c:	add	x0, x0, #0x1
     e80:	add	x1, x10, x0
     e84:	ldrb	w2, [x10, x0]
     e88:	add	x2, x2, #0x1
     e8c:	add	x2, x1, x2
     e90:	cmp	x28, x2
     e94:	b.ls	628 <grub_ldm_detect+0x5f0>  // b.plast
     e98:	add	x1, x1, #0x1
     e9c:	mov	x0, #0x0                   	// #0
     ea0:	b	eac <grub_ldm_detect+0xe74>
     ea4:	ldrb	w3, [x1], #1
     ea8:	orr	x0, x3, x0, lsl #8
     eac:	cmp	x2, x1
     eb0:	b.hi	ea4 <grub_ldm_detect+0xe6c>  // b.pmore
     eb4:	ldr	x1, [x27, #64]
     eb8:	ldr	w2, [x1, #32]
     ebc:	cmp	w2, w0
     ec0:	b.ls	4f4 <grub_ldm_detect+0x4bc>  // b.plast
     ec4:	ldr	x2, [x1, #40]
     ec8:	ubfiz	x0, x0, #5, #32
     ecc:	add	x1, x2, x0
     ed0:	str	x26, [x2, x0]
     ed4:	stp	xzr, x25, [x1, #8]
     ed8:	str	xzr, [x1, #24]
     edc:	b	4f4 <grub_ldm_detect+0x4bc>
	...

0000000000000f10 <gpt_ldm_sector_iter>:
     f10:	stp	x29, x30, [sp, #-176]!
     f14:	mov	x3, #0x80                  	// #128
     f18:	mov	x29, sp
     f1c:	stp	x19, x20, [sp, #16]
     f20:	mov	x19, x1
     f24:	mov	x20, x0
     f28:	stp	x21, x22, [sp, #32]
     f2c:	mov	x21, x2
     f30:	ldrsw	x2, [x1, #32]
     f34:	ldr	x1, [x1, #24]
     f38:	add	x4, sp, #0x30
     f3c:	ldr	x5, [x19, #40]
     f40:	ldr	x22, [x0, #40]
     f44:	str	x5, [x0, #40]
     f48:	bl	0 <grub_disk_read>
     f4c:	cbz	w0, f68 <gpt_ldm_sector_iter+0x58>
     f50:	mov	w0, #0x0                   	// #0
     f54:	str	x22, [x20, #40]
     f58:	ldp	x19, x20, [sp, #16]
     f5c:	ldp	x21, x22, [sp, #32]
     f60:	ldp	x29, x30, [sp], #176
     f64:	ret
     f68:	adrp	x1, 0 <check_ldm_partition>
     f6c:	str	x22, [x20, #40]
     f70:	add	x0, sp, #0x30
     f74:	mov	x2, #0x10                  	// #16
     f78:	ldr	x1, [x1]
     f7c:	bl	0 <grub_memcmp>
     f80:	mov	w1, w0
     f84:	mov	w0, #0x0                   	// #0
     f88:	cbnz	w1, f58 <gpt_ldm_sector_iter+0x48>
     f8c:	ldp	x1, x2, [x19, #8]
     f90:	mov	w0, #0x1                   	// #1
     f94:	ldp	x19, x20, [sp, #16]
     f98:	add	x1, x1, x2
     f9c:	sub	x1, x1, #0x1
     fa0:	str	x1, [x21]
     fa4:	ldp	x21, x22, [sp, #32]
     fa8:	ldp	x29, x30, [sp], #176
     fac:	ret
	...

0000000000000fb8 <grub_mod_init>:
     fb8:	adrp	x0, 0 <check_ldm_partition>
     fbc:	ldr	x1, [x0]
     fc0:	ldr	x0, [x1]
     fc4:	cbz	x0, fd4 <grub_mod_init+0x1c>
     fc8:	mov	x1, x0
     fcc:	ldr	x0, [x0]
     fd0:	cbnz	x0, fc8 <grub_mod_init+0x10>
     fd4:	adrp	x0, 0 <check_ldm_partition>
     fd8:	ldr	x0, [x0]
     fdc:	stp	xzr, x1, [x0]
     fe0:	str	x0, [x1]
     fe4:	ret
	...

0000000000000ff8 <grub_mod_fini>:
     ff8:	adrp	x0, 0 <check_ldm_partition>
     ffc:	ldr	x0, [x0]
    1000:	b	0 <grub_list_remove>
    1004:	nop
	...
