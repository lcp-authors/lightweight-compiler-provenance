
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//column_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402218 <.init>:
  402218:	stp	x29, x30, [sp, #-16]!
  40221c:	mov	x29, sp
  402220:	bl	402900 <scols_reset_iter@plt+0x60>
  402224:	ldp	x29, x30, [sp], #16
  402228:	ret

Disassembly of section .plt:

0000000000402230 <mbrtowc@plt-0x20>:
  402230:	stp	x16, x30, [sp, #-16]!
  402234:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17760>
  402238:	ldr	x17, [x16, #4088]
  40223c:	add	x16, x16, #0xff8
  402240:	br	x17
  402244:	nop
  402248:	nop
  40224c:	nop

0000000000402250 <mbrtowc@plt>:
  402250:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402254:	ldr	x17, [x16]
  402258:	add	x16, x16, #0x0
  40225c:	br	x17

0000000000402260 <memcpy@plt>:
  402260:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402264:	ldr	x17, [x16, #8]
  402268:	add	x16, x16, #0x8
  40226c:	br	x17

0000000000402270 <_exit@plt>:
  402270:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402274:	ldr	x17, [x16, #16]
  402278:	add	x16, x16, #0x10
  40227c:	br	x17

0000000000402280 <strtoul@plt>:
  402280:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402284:	ldr	x17, [x16, #24]
  402288:	add	x16, x16, #0x18
  40228c:	br	x17

0000000000402290 <strlen@plt>:
  402290:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402294:	ldr	x17, [x16, #32]
  402298:	add	x16, x16, #0x20
  40229c:	br	x17

00000000004022a0 <fputs@plt>:
  4022a0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4022a4:	ldr	x17, [x16, #40]
  4022a8:	add	x16, x16, #0x28
  4022ac:	br	x17

00000000004022b0 <mbstowcs@plt>:
  4022b0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4022b4:	ldr	x17, [x16, #48]
  4022b8:	add	x16, x16, #0x30
  4022bc:	br	x17

00000000004022c0 <exit@plt>:
  4022c0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4022c4:	ldr	x17, [x16, #56]
  4022c8:	add	x16, x16, #0x38
  4022cc:	br	x17

00000000004022d0 <dup@plt>:
  4022d0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4022d4:	ldr	x17, [x16, #64]
  4022d8:	add	x16, x16, #0x40
  4022dc:	br	x17

00000000004022e0 <scols_line_refer_data@plt>:
  4022e0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4022e4:	ldr	x17, [x16, #72]
  4022e8:	add	x16, x16, #0x48
  4022ec:	br	x17

00000000004022f0 <scols_line_get_column_cell@plt>:
  4022f0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4022f4:	ldr	x17, [x16, #80]
  4022f8:	add	x16, x16, #0x50
  4022fc:	br	x17

0000000000402300 <scols_table_set_name@plt>:
  402300:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402304:	ldr	x17, [x16, #88]
  402308:	add	x16, x16, #0x58
  40230c:	br	x17

0000000000402310 <strtod@plt>:
  402310:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402314:	ldr	x17, [x16, #96]
  402318:	add	x16, x16, #0x60
  40231c:	br	x17

0000000000402320 <scols_table_enable_noheadings@plt>:
  402320:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402324:	ldr	x17, [x16, #104]
  402328:	add	x16, x16, #0x68
  40232c:	br	x17

0000000000402330 <scols_column_get_header@plt>:
  402330:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402334:	ldr	x17, [x16, #112]
  402338:	add	x16, x16, #0x70
  40233c:	br	x17

0000000000402340 <scols_table_new_column@plt>:
  402340:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402344:	ldr	x17, [x16, #120]
  402348:	add	x16, x16, #0x78
  40234c:	br	x17

0000000000402350 <scols_free_iter@plt>:
  402350:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402354:	ldr	x17, [x16, #128]
  402358:	add	x16, x16, #0x80
  40235c:	br	x17

0000000000402360 <ttyname@plt>:
  402360:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402364:	ldr	x17, [x16, #136]
  402368:	add	x16, x16, #0x88
  40236c:	br	x17

0000000000402370 <sprintf@plt>:
  402370:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402374:	ldr	x17, [x16, #144]
  402378:	add	x16, x16, #0x90
  40237c:	br	x17

0000000000402380 <__cxa_atexit@plt>:
  402380:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402384:	ldr	x17, [x16, #152]
  402388:	add	x16, x16, #0x98
  40238c:	br	x17

0000000000402390 <fputc@plt>:
  402390:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402394:	ldr	x17, [x16, #160]
  402398:	add	x16, x16, #0xa0
  40239c:	br	x17

00000000004023a0 <putwchar@plt>:
  4023a0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4023a4:	ldr	x17, [x16, #168]
  4023a8:	add	x16, x16, #0xa8
  4023ac:	br	x17

00000000004023b0 <scols_table_set_column_separator@plt>:
  4023b0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4023b4:	ldr	x17, [x16, #176]
  4023b8:	add	x16, x16, #0xb0
  4023bc:	br	x17

00000000004023c0 <snprintf@plt>:
  4023c0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4023c4:	ldr	x17, [x16, #184]
  4023c8:	add	x16, x16, #0xb8
  4023cc:	br	x17

00000000004023d0 <localeconv@plt>:
  4023d0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4023d4:	ldr	x17, [x16, #192]
  4023d8:	add	x16, x16, #0xc0
  4023dc:	br	x17

00000000004023e0 <stpcpy@plt>:
  4023e0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4023e4:	ldr	x17, [x16, #200]
  4023e8:	add	x16, x16, #0xc8
  4023ec:	br	x17

00000000004023f0 <fileno@plt>:
  4023f0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4023f4:	ldr	x17, [x16, #208]
  4023f8:	add	x16, x16, #0xd0
  4023fc:	br	x17

0000000000402400 <wcspbrk@plt>:
  402400:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402404:	ldr	x17, [x16, #216]
  402408:	add	x16, x16, #0xd8
  40240c:	br	x17

0000000000402410 <fclose@plt>:
  402410:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402414:	ldr	x17, [x16, #224]
  402418:	add	x16, x16, #0xe0
  40241c:	br	x17

0000000000402420 <fopen@plt>:
  402420:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402424:	ldr	x17, [x16, #232]
  402428:	add	x16, x16, #0xe8
  40242c:	br	x17

0000000000402430 <malloc@plt>:
  402430:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402434:	ldr	x17, [x16, #240]
  402438:	add	x16, x16, #0xf0
  40243c:	br	x17

0000000000402440 <wcwidth@plt>:
  402440:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402444:	ldr	x17, [x16, #248]
  402448:	add	x16, x16, #0xf8
  40244c:	br	x17

0000000000402450 <scols_column_get_flags@plt>:
  402450:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402454:	ldr	x17, [x16, #256]
  402458:	add	x16, x16, #0x100
  40245c:	br	x17

0000000000402460 <__strtol_internal@plt>:
  402460:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402464:	ldr	x17, [x16, #264]
  402468:	add	x16, x16, #0x108
  40246c:	br	x17

0000000000402470 <strncmp@plt>:
  402470:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402474:	ldr	x17, [x16, #272]
  402478:	add	x16, x16, #0x110
  40247c:	br	x17

0000000000402480 <bindtextdomain@plt>:
  402480:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402484:	ldr	x17, [x16, #280]
  402488:	add	x16, x16, #0x118
  40248c:	br	x17

0000000000402490 <__libc_start_main@plt>:
  402490:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402494:	ldr	x17, [x16, #288]
  402498:	add	x16, x16, #0x120
  40249c:	br	x17

00000000004024a0 <fgetc@plt>:
  4024a0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4024a4:	ldr	x17, [x16, #296]
  4024a8:	add	x16, x16, #0x128
  4024ac:	br	x17

00000000004024b0 <scols_table_get_column@plt>:
  4024b0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4024b4:	ldr	x17, [x16, #304]
  4024b8:	add	x16, x16, #0x130
  4024bc:	br	x17

00000000004024c0 <scols_new_table@plt>:
  4024c0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4024c4:	ldr	x17, [x16, #312]
  4024c8:	add	x16, x16, #0x138
  4024cc:	br	x17

00000000004024d0 <scols_column_set_flags@plt>:
  4024d0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4024d4:	ldr	x17, [x16, #320]
  4024d8:	add	x16, x16, #0x140
  4024dc:	br	x17

00000000004024e0 <__strtoul_internal@plt>:
  4024e0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4024e4:	ldr	x17, [x16, #328]
  4024e8:	add	x16, x16, #0x148
  4024ec:	br	x17

00000000004024f0 <calloc@plt>:
  4024f0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4024f4:	ldr	x17, [x16, #336]
  4024f8:	add	x16, x16, #0x150
  4024fc:	br	x17

0000000000402500 <strcasecmp@plt>:
  402500:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402504:	ldr	x17, [x16, #344]
  402508:	add	x16, x16, #0x158
  40250c:	br	x17

0000000000402510 <realloc@plt>:
  402510:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402514:	ldr	x17, [x16, #352]
  402518:	add	x16, x16, #0x160
  40251c:	br	x17

0000000000402520 <strdup@plt>:
  402520:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402524:	ldr	x17, [x16, #360]
  402528:	add	x16, x16, #0x168
  40252c:	br	x17

0000000000402530 <scols_table_new_line@plt>:
  402530:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402534:	ldr	x17, [x16, #368]
  402538:	add	x16, x16, #0x170
  40253c:	br	x17

0000000000402540 <wcstok@plt>:
  402540:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402544:	ldr	x17, [x16, #376]
  402548:	add	x16, x16, #0x178
  40254c:	br	x17

0000000000402550 <close@plt>:
  402550:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402554:	ldr	x17, [x16, #384]
  402558:	add	x16, x16, #0x180
  40255c:	br	x17

0000000000402560 <scols_table_is_json@plt>:
  402560:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402564:	ldr	x17, [x16, #392]
  402568:	add	x16, x16, #0x188
  40256c:	br	x17

0000000000402570 <__gmon_start__@plt>:
  402570:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402574:	ldr	x17, [x16, #400]
  402578:	add	x16, x16, #0x190
  40257c:	br	x17

0000000000402580 <abort@plt>:
  402580:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402584:	ldr	x17, [x16, #408]
  402588:	add	x16, x16, #0x198
  40258c:	br	x17

0000000000402590 <scols_table_set_termforce@plt>:
  402590:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402594:	ldr	x17, [x16, #416]
  402598:	add	x16, x16, #0x1a0
  40259c:	br	x17

00000000004025a0 <scols_table_get_ncols@plt>:
  4025a0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4025a4:	ldr	x17, [x16, #424]
  4025a8:	add	x16, x16, #0x1a8
  4025ac:	br	x17

00000000004025b0 <scols_table_enable_header_repeat@plt>:
  4025b0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4025b4:	ldr	x17, [x16, #432]
  4025b8:	add	x16, x16, #0x1b0
  4025bc:	br	x17

00000000004025c0 <scols_table_next_line@plt>:
  4025c0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4025c4:	ldr	x17, [x16, #440]
  4025c8:	add	x16, x16, #0x1b8
  4025cc:	br	x17

00000000004025d0 <feof@plt>:
  4025d0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4025d4:	ldr	x17, [x16, #448]
  4025d8:	add	x16, x16, #0x1c0
  4025dc:	br	x17

00000000004025e0 <textdomain@plt>:
  4025e0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4025e4:	ldr	x17, [x16, #456]
  4025e8:	add	x16, x16, #0x1c8
  4025ec:	br	x17

00000000004025f0 <getopt_long@plt>:
  4025f0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4025f4:	ldr	x17, [x16, #464]
  4025f8:	add	x16, x16, #0x1d0
  4025fc:	br	x17

0000000000402600 <strcmp@plt>:
  402600:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402604:	ldr	x17, [x16, #472]
  402608:	add	x16, x16, #0x1d8
  40260c:	br	x17

0000000000402610 <warn@plt>:
  402610:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402614:	ldr	x17, [x16, #480]
  402618:	add	x16, x16, #0x1e0
  40261c:	br	x17

0000000000402620 <__ctype_b_loc@plt>:
  402620:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402624:	ldr	x17, [x16, #488]
  402628:	add	x16, x16, #0x1e8
  40262c:	br	x17

0000000000402630 <strtol@plt>:
  402630:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402634:	ldr	x17, [x16, #496]
  402638:	add	x16, x16, #0x1f0
  40263c:	br	x17

0000000000402640 <scols_table_next_column@plt>:
  402640:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402644:	ldr	x17, [x16, #504]
  402648:	add	x16, x16, #0x1f8
  40264c:	br	x17

0000000000402650 <scols_cell_get_data@plt>:
  402650:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402654:	ldr	x17, [x16, #512]
  402658:	add	x16, x16, #0x200
  40265c:	br	x17

0000000000402660 <free@plt>:
  402660:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402664:	ldr	x17, [x16, #520]
  402668:	add	x16, x16, #0x208
  40266c:	br	x17

0000000000402670 <scols_line_is_ancestor@plt>:
  402670:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402674:	ldr	x17, [x16, #528]
  402678:	add	x16, x16, #0x210
  40267c:	br	x17

0000000000402680 <__ctype_get_mb_cur_max@plt>:
  402680:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402684:	ldr	x17, [x16, #536]
  402688:	add	x16, x16, #0x218
  40268c:	br	x17

0000000000402690 <mempcpy@plt>:
  402690:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402694:	ldr	x17, [x16, #544]
  402698:	add	x16, x16, #0x220
  40269c:	br	x17

00000000004026a0 <scols_table_get_nlines@plt>:
  4026a0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4026a4:	ldr	x17, [x16, #552]
  4026a8:	add	x16, x16, #0x228
  4026ac:	br	x17

00000000004026b0 <scols_table_enable_json@plt>:
  4026b0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4026b4:	ldr	x17, [x16, #560]
  4026b8:	add	x16, x16, #0x230
  4026bc:	br	x17

00000000004026c0 <vasprintf@plt>:
  4026c0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4026c4:	ldr	x17, [x16, #568]
  4026c8:	add	x16, x16, #0x238
  4026cc:	br	x17

00000000004026d0 <scols_table_move_column@plt>:
  4026d0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4026d4:	ldr	x17, [x16, #576]
  4026d8:	add	x16, x16, #0x240
  4026dc:	br	x17

00000000004026e0 <scols_table_set_termwidth@plt>:
  4026e0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4026e4:	ldr	x17, [x16, #584]
  4026e8:	add	x16, x16, #0x248
  4026ec:	br	x17

00000000004026f0 <strndup@plt>:
  4026f0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4026f4:	ldr	x17, [x16, #592]
  4026f8:	add	x16, x16, #0x250
  4026fc:	br	x17

0000000000402700 <strspn@plt>:
  402700:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402704:	ldr	x17, [x16, #600]
  402708:	add	x16, x16, #0x258
  40270c:	br	x17

0000000000402710 <strchr@plt>:
  402710:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402714:	ldr	x17, [x16, #608]
  402718:	add	x16, x16, #0x260
  40271c:	br	x17

0000000000402720 <fflush@plt>:
  402720:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402724:	ldr	x17, [x16, #616]
  402728:	add	x16, x16, #0x268
  40272c:	br	x17

0000000000402730 <scols_print_table@plt>:
  402730:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402734:	ldr	x17, [x16, #624]
  402738:	add	x16, x16, #0x270
  40273c:	br	x17

0000000000402740 <warnx@plt>:
  402740:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402744:	ldr	x17, [x16, #632]
  402748:	add	x16, x16, #0x278
  40274c:	br	x17

0000000000402750 <isatty@plt>:
  402750:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402754:	ldr	x17, [x16, #640]
  402758:	add	x16, x16, #0x280
  40275c:	br	x17

0000000000402760 <wcstombs@plt>:
  402760:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402764:	ldr	x17, [x16, #648]
  402768:	add	x16, x16, #0x288
  40276c:	br	x17

0000000000402770 <fputws@plt>:
  402770:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402774:	ldr	x17, [x16, #656]
  402778:	add	x16, x16, #0x290
  40277c:	br	x17

0000000000402780 <scols_new_iter@plt>:
  402780:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402784:	ldr	x17, [x16, #664]
  402788:	add	x16, x16, #0x298
  40278c:	br	x17

0000000000402790 <dcgettext@plt>:
  402790:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402794:	ldr	x17, [x16, #672]
  402798:	add	x16, x16, #0x2a0
  40279c:	br	x17

00000000004027a0 <scols_line_add_child@plt>:
  4027a0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4027a4:	ldr	x17, [x16, #680]
  4027a8:	add	x16, x16, #0x2a8
  4027ac:	br	x17

00000000004027b0 <errx@plt>:
  4027b0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4027b4:	ldr	x17, [x16, #688]
  4027b8:	add	x16, x16, #0x2b0
  4027bc:	br	x17

00000000004027c0 <iswprint@plt>:
  4027c0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4027c4:	ldr	x17, [x16, #696]
  4027c8:	add	x16, x16, #0x2b8
  4027cc:	br	x17

00000000004027d0 <strcspn@plt>:
  4027d0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4027d4:	ldr	x17, [x16, #704]
  4027d8:	add	x16, x16, #0x2c0
  4027dc:	br	x17

00000000004027e0 <printf@plt>:
  4027e0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4027e4:	ldr	x17, [x16, #712]
  4027e8:	add	x16, x16, #0x2c8
  4027ec:	br	x17

00000000004027f0 <__assert_fail@plt>:
  4027f0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4027f4:	ldr	x17, [x16, #720]
  4027f8:	add	x16, x16, #0x2d0
  4027fc:	br	x17

0000000000402800 <__errno_location@plt>:
  402800:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402804:	ldr	x17, [x16, #728]
  402808:	add	x16, x16, #0x2d8
  40280c:	br	x17

0000000000402810 <getenv@plt>:
  402810:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402814:	ldr	x17, [x16, #736]
  402818:	add	x16, x16, #0x2e0
  40281c:	br	x17

0000000000402820 <scols_table_enable_noencoding@plt>:
  402820:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402824:	ldr	x17, [x16, #744]
  402828:	add	x16, x16, #0x2e8
  40282c:	br	x17

0000000000402830 <__getdelim@plt>:
  402830:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402834:	ldr	x17, [x16, #752]
  402838:	add	x16, x16, #0x2f0
  40283c:	br	x17

0000000000402840 <fprintf@plt>:
  402840:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402844:	ldr	x17, [x16, #760]
  402848:	add	x16, x16, #0x2f8
  40284c:	br	x17

0000000000402850 <scols_init_debug@plt>:
  402850:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402854:	ldr	x17, [x16, #768]
  402858:	add	x16, x16, #0x300
  40285c:	br	x17

0000000000402860 <err@plt>:
  402860:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402864:	ldr	x17, [x16, #776]
  402868:	add	x16, x16, #0x308
  40286c:	br	x17

0000000000402870 <ioctl@plt>:
  402870:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402874:	ldr	x17, [x16, #784]
  402878:	add	x16, x16, #0x310
  40287c:	br	x17

0000000000402880 <setlocale@plt>:
  402880:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402884:	ldr	x17, [x16, #792]
  402888:	add	x16, x16, #0x318
  40288c:	br	x17

0000000000402890 <ferror@plt>:
  402890:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  402894:	ldr	x17, [x16, #800]
  402898:	add	x16, x16, #0x320
  40289c:	br	x17

00000000004028a0 <scols_reset_iter@plt>:
  4028a0:	adrp	x16, 41b000 <scols_reset_iter@plt+0x18760>
  4028a4:	ldr	x17, [x16, #808]
  4028a8:	add	x16, x16, #0x328
  4028ac:	br	x17

Disassembly of section .text:

00000000004028b0 <.text>:
  4028b0:	mov	x29, #0x0                   	// #0
  4028b4:	mov	x30, #0x0                   	// #0
  4028b8:	mov	x5, x0
  4028bc:	ldr	x1, [sp]
  4028c0:	add	x2, sp, #0x8
  4028c4:	mov	x6, sp
  4028c8:	movz	x0, #0x0, lsl #48
  4028cc:	movk	x0, #0x0, lsl #32
  4028d0:	movk	x0, #0x40, lsl #16
  4028d4:	movk	x0, #0x33bc
  4028d8:	movz	x3, #0x0, lsl #48
  4028dc:	movk	x3, #0x0, lsl #32
  4028e0:	movk	x3, #0x40, lsl #16
  4028e4:	movk	x3, #0x77a0
  4028e8:	movz	x4, #0x0, lsl #48
  4028ec:	movk	x4, #0x0, lsl #32
  4028f0:	movk	x4, #0x40, lsl #16
  4028f4:	movk	x4, #0x7820
  4028f8:	bl	402490 <__libc_start_main@plt>
  4028fc:	bl	402580 <abort@plt>
  402900:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17760>
  402904:	ldr	x0, [x0, #4064]
  402908:	cbz	x0, 402910 <scols_reset_iter@plt+0x70>
  40290c:	b	402570 <__gmon_start__@plt>
  402910:	ret
  402914:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  402918:	add	x0, x0, #0x348
  40291c:	adrp	x1, 41b000 <scols_reset_iter@plt+0x18760>
  402920:	add	x1, x1, #0x348
  402924:	cmp	x0, x1
  402928:	b.eq	40295c <scols_reset_iter@plt+0xbc>  // b.none
  40292c:	stp	x29, x30, [sp, #-32]!
  402930:	mov	x29, sp
  402934:	adrp	x0, 407000 <scols_reset_iter@plt+0x4760>
  402938:	ldr	x0, [x0, #2128]
  40293c:	str	x0, [sp, #24]
  402940:	mov	x1, x0
  402944:	cbz	x1, 402954 <scols_reset_iter@plt+0xb4>
  402948:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  40294c:	add	x0, x0, #0x348
  402950:	blr	x1
  402954:	ldp	x29, x30, [sp], #32
  402958:	ret
  40295c:	ret
  402960:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  402964:	add	x0, x0, #0x348
  402968:	adrp	x1, 41b000 <scols_reset_iter@plt+0x18760>
  40296c:	add	x1, x1, #0x348
  402970:	sub	x0, x0, x1
  402974:	lsr	x1, x0, #63
  402978:	add	x0, x1, x0, asr #3
  40297c:	cmp	xzr, x0, asr #1
  402980:	b.eq	4029b8 <scols_reset_iter@plt+0x118>  // b.none
  402984:	stp	x29, x30, [sp, #-32]!
  402988:	mov	x29, sp
  40298c:	asr	x1, x0, #1
  402990:	adrp	x0, 407000 <scols_reset_iter@plt+0x4760>
  402994:	ldr	x0, [x0, #2136]
  402998:	str	x0, [sp, #24]
  40299c:	mov	x2, x0
  4029a0:	cbz	x2, 4029b0 <scols_reset_iter@plt+0x110>
  4029a4:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  4029a8:	add	x0, x0, #0x348
  4029ac:	blr	x2
  4029b0:	ldp	x29, x30, [sp], #32
  4029b4:	ret
  4029b8:	ret
  4029bc:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  4029c0:	ldrb	w0, [x0, #888]
  4029c4:	cbnz	w0, 4029e8 <scols_reset_iter@plt+0x148>
  4029c8:	stp	x29, x30, [sp, #-16]!
  4029cc:	mov	x29, sp
  4029d0:	bl	402914 <scols_reset_iter@plt+0x74>
  4029d4:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  4029d8:	mov	w1, #0x1                   	// #1
  4029dc:	strb	w1, [x0, #888]
  4029e0:	ldp	x29, x30, [sp], #16
  4029e4:	ret
  4029e8:	ret
  4029ec:	stp	x29, x30, [sp, #-16]!
  4029f0:	mov	x29, sp
  4029f4:	bl	402960 <scols_reset_iter@plt+0xc0>
  4029f8:	ldp	x29, x30, [sp], #16
  4029fc:	ret
  402a00:	stp	x29, x30, [sp, #-16]!
  402a04:	mov	x29, sp
  402a08:	mov	w3, w1
  402a0c:	mov	x2, x0
  402a10:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  402a14:	add	x1, x1, #0x860
  402a18:	mov	w0, #0x1                   	// #1
  402a1c:	bl	402860 <err@plt>
  402a20:	stp	x29, x30, [sp, #-32]!
  402a24:	mov	x29, sp
  402a28:	stp	x19, x20, [sp, #16]
  402a2c:	mov	x20, x0
  402a30:	mov	x19, x1
  402a34:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  402a38:	add	x1, x1, #0x880
  402a3c:	bl	4070f0 <scols_reset_iter@plt+0x4850>
  402a40:	cbz	x0, 402a50 <scols_reset_iter@plt+0x1b0>
  402a44:	ldp	x19, x20, [sp, #16]
  402a48:	ldp	x29, x30, [sp], #32
  402a4c:	ret
  402a50:	bl	402800 <__errno_location@plt>
  402a54:	ldr	w0, [x0]
  402a58:	cmp	w0, #0xc
  402a5c:	b.eq	402a78 <scols_reset_iter@plt+0x1d8>  // b.none
  402a60:	mov	x3, x20
  402a64:	mov	x2, x19
  402a68:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  402a6c:	add	x1, x1, #0x8a0
  402a70:	mov	w0, #0x1                   	// #1
  402a74:	bl	4027b0 <errx@plt>
  402a78:	mov	w1, #0xc5                  	// #197
  402a7c:	adrp	x0, 407000 <scols_reset_iter@plt+0x4760>
  402a80:	add	x0, x0, #0x888
  402a84:	bl	402a00 <scols_reset_iter@plt+0x160>
  402a88:	stp	x29, x30, [sp, #-48]!
  402a8c:	mov	x29, sp
  402a90:	stp	x19, x20, [sp, #16]
  402a94:	str	d8, [sp, #32]
  402a98:	mov	x20, x0
  402a9c:	mov	w0, #0x0                   	// #0
  402aa0:	bl	402850 <scols_init_debug@plt>
  402aa4:	bl	4024c0 <scols_new_table@plt>
  402aa8:	str	x0, [x20, #16]
  402aac:	cbz	x0, 402b14 <scols_reset_iter@plt+0x274>
  402ab0:	ldr	x1, [x20, #120]
  402ab4:	bl	4023b0 <scols_table_set_column_separator@plt>
  402ab8:	ldrb	w0, [x20, #152]
  402abc:	tbz	w0, #1, 402b30 <scols_reset_iter@plt+0x290>
  402ac0:	mov	w1, #0x1                   	// #1
  402ac4:	ldr	x0, [x20, #16]
  402ac8:	bl	4026b0 <scols_table_enable_json@plt>
  402acc:	ldr	x1, [x20, #32]
  402ad0:	adrp	x0, 407000 <scols_reset_iter@plt+0x4760>
  402ad4:	add	x0, x0, #0x8b0
  402ad8:	cmp	x1, #0x0
  402adc:	csel	x1, x0, x1, eq  // eq = none
  402ae0:	ldr	x0, [x20, #16]
  402ae4:	bl	402300 <scols_table_set_name@plt>
  402ae8:	ldr	x19, [x20, #24]
  402aec:	movi	d8, #0x0
  402af0:	cbz	x19, 402b78 <scols_reset_iter@plt+0x2d8>
  402af4:	ldr	x1, [x19]
  402af8:	cbz	x1, 402b40 <scols_reset_iter@plt+0x2a0>
  402afc:	mov	w2, #0x0                   	// #0
  402b00:	fmov	d0, d8
  402b04:	ldr	x0, [x20, #16]
  402b08:	bl	402340 <scols_table_new_column@plt>
  402b0c:	add	x19, x19, #0x8
  402b10:	b	402af4 <scols_reset_iter@plt+0x254>
  402b14:	mov	w2, #0x5                   	// #5
  402b18:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  402b1c:	add	x1, x1, #0x8b8
  402b20:	bl	402790 <dcgettext@plt>
  402b24:	mov	x1, x0
  402b28:	mov	w0, #0x1                   	// #1
  402b2c:	bl	402860 <err@plt>
  402b30:	mov	w1, #0x1                   	// #1
  402b34:	ldr	x0, [x20, #16]
  402b38:	bl	402820 <scols_table_enable_noencoding@plt>
  402b3c:	b	402ae8 <scols_reset_iter@plt+0x248>
  402b40:	ldrb	w0, [x20, #152]
  402b44:	tbnz	w0, #2, 402b68 <scols_reset_iter@plt+0x2c8>
  402b48:	ldrb	w1, [x20, #152]
  402b4c:	ubfx	x1, x1, #4, #1
  402b50:	ldr	x0, [x20, #16]
  402b54:	bl	402320 <scols_table_enable_noheadings@plt>
  402b58:	ldp	x19, x20, [sp, #16]
  402b5c:	ldr	d8, [sp, #32]
  402b60:	ldp	x29, x30, [sp], #48
  402b64:	ret
  402b68:	mov	w1, #0x1                   	// #1
  402b6c:	ldr	x0, [x20, #16]
  402b70:	bl	4025b0 <scols_table_enable_header_repeat@plt>
  402b74:	b	402b48 <scols_reset_iter@plt+0x2a8>
  402b78:	mov	w1, #0x1                   	// #1
  402b7c:	ldr	x0, [x20, #16]
  402b80:	bl	402320 <scols_table_enable_noheadings@plt>
  402b84:	b	402b58 <scols_reset_iter@plt+0x2b8>
  402b88:	stp	x29, x30, [sp, #-32]!
  402b8c:	mov	x29, sp
  402b90:	stp	x19, x20, [sp, #16]
  402b94:	mov	x20, x0
  402b98:	ldr	w0, [x0]
  402b9c:	cbz	w0, 402bcc <scols_reset_iter@plt+0x32c>
  402ba0:	mov	x19, #0x0                   	// #0
  402ba4:	bl	402440 <wcwidth@plt>
  402ba8:	add	x1, x19, w0, sxtw
  402bac:	cmp	w0, #0x0
  402bb0:	csel	x19, x1, x19, gt
  402bb4:	ldr	w0, [x20, #4]!
  402bb8:	cbnz	w0, 402ba4 <scols_reset_iter@plt+0x304>
  402bbc:	mov	x0, x19
  402bc0:	ldp	x19, x20, [sp, #16]
  402bc4:	ldp	x29, x30, [sp], #32
  402bc8:	ret
  402bcc:	mov	x19, #0x0                   	// #0
  402bd0:	b	402bbc <scols_reset_iter@plt+0x31c>
  402bd4:	stp	x29, x30, [sp, #-48]!
  402bd8:	mov	x29, sp
  402bdc:	stp	x19, x20, [sp, #16]
  402be0:	stp	x21, x22, [sp, #32]
  402be4:	mov	x22, x0
  402be8:	mov	x21, x1
  402bec:	mov	x1, #0x0                   	// #0
  402bf0:	mov	x0, x21
  402bf4:	bl	4055c8 <scols_reset_iter@plt+0x2d28>
  402bf8:	cbnz	w0, 402c2c <scols_reset_iter@plt+0x38c>
  402bfc:	ldr	x19, [x22, #24]
  402c00:	mov	w20, #0x0                   	// #0
  402c04:	cbnz	x19, 402c5c <scols_reset_iter@plt+0x3bc>
  402c08:	mov	w2, #0x5                   	// #5
  402c0c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  402c10:	add	x1, x1, #0x8f0
  402c14:	mov	x0, #0x0                   	// #0
  402c18:	bl	402790 <dcgettext@plt>
  402c1c:	mov	x2, x21
  402c20:	mov	x1, x0
  402c24:	mov	w0, #0x1                   	// #1
  402c28:	bl	4027b0 <errx@plt>
  402c2c:	mov	w2, #0x5                   	// #5
  402c30:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  402c34:	add	x1, x1, #0x8d8
  402c38:	mov	x0, #0x0                   	// #0
  402c3c:	bl	402790 <dcgettext@plt>
  402c40:	mov	x1, x0
  402c44:	mov	x0, x21
  402c48:	bl	405868 <scols_reset_iter@plt+0x2fc8>
  402c4c:	sub	w20, w0, #0x1
  402c50:	b	402c78 <scols_reset_iter@plt+0x3d8>
  402c54:	add	w20, w20, #0x1
  402c58:	add	x19, x19, #0x8
  402c5c:	ldr	x0, [x19]
  402c60:	cbz	x0, 402c70 <scols_reset_iter@plt+0x3d0>
  402c64:	mov	x1, x21
  402c68:	bl	402500 <strcasecmp@plt>
  402c6c:	cbnz	w0, 402c54 <scols_reset_iter@plt+0x3b4>
  402c70:	ldr	x0, [x19]
  402c74:	cbz	x0, 402c08 <scols_reset_iter@plt+0x368>
  402c78:	mov	w1, w20
  402c7c:	ldr	x0, [x22, #16]
  402c80:	bl	4024b0 <scols_table_get_column@plt>
  402c84:	ldp	x19, x20, [sp, #16]
  402c88:	ldp	x21, x22, [sp, #32]
  402c8c:	ldp	x29, x30, [sp], #48
  402c90:	ret
  402c94:	stp	x29, x30, [sp, #-32]!
  402c98:	mov	x29, sp
  402c9c:	stp	x19, x20, [sp, #16]
  402ca0:	mov	x19, x0
  402ca4:	mov	w20, w1
  402ca8:	bl	402450 <scols_column_get_flags@plt>
  402cac:	orr	w1, w0, w20
  402cb0:	mov	x0, x19
  402cb4:	bl	4024d0 <scols_column_set_flags@plt>
  402cb8:	ldp	x19, x20, [sp, #16]
  402cbc:	ldp	x29, x30, [sp], #32
  402cc0:	ret
  402cc4:	stp	x29, x30, [sp, #-96]!
  402cc8:	mov	x29, sp
  402ccc:	stp	x19, x20, [sp, #16]
  402cd0:	stp	x21, x22, [sp, #32]
  402cd4:	stp	x23, x24, [sp, #48]
  402cd8:	stp	x25, x26, [sp, #64]
  402cdc:	mov	x22, x0
  402ce0:	mov	x0, x1
  402ce4:	mov	w21, w2
  402ce8:	mov	x1, x3
  402cec:	bl	402a20 <scols_reset_iter@plt+0x180>
  402cf0:	mov	x24, x0
  402cf4:	mov	x20, x0
  402cf8:	mov	w25, #0x0                   	// #0
  402cfc:	adrp	x23, 407000 <scols_reset_iter@plt+0x4760>
  402d00:	add	x23, x23, #0x910
  402d04:	mov	w26, #0x1                   	// #1
  402d08:	cbnz	x0, 402d34 <scols_reset_iter@plt+0x494>
  402d0c:	mov	x0, #0x0                   	// #0
  402d10:	bl	406dd4 <scols_reset_iter@plt+0x4534>
  402d14:	b	402d68 <scols_reset_iter@plt+0x4c8>
  402d18:	mov	x1, x19
  402d1c:	mov	x0, x22
  402d20:	bl	402bd4 <scols_reset_iter@plt+0x334>
  402d24:	cbz	x0, 402d30 <scols_reset_iter@plt+0x490>
  402d28:	mov	w1, w21
  402d2c:	bl	402c94 <scols_reset_iter@plt+0x3f4>
  402d30:	add	x20, x20, #0x8
  402d34:	ldr	x19, [x20]
  402d38:	cbz	x19, 402d5c <scols_reset_iter@plt+0x4bc>
  402d3c:	cmp	w21, #0x20
  402d40:	b.ne	402d18 <scols_reset_iter@plt+0x478>  // b.any
  402d44:	mov	x1, x23
  402d48:	mov	x0, x19
  402d4c:	bl	402600 <strcmp@plt>
  402d50:	cbnz	w0, 402d18 <scols_reset_iter@plt+0x478>
  402d54:	mov	w25, w26
  402d58:	b	402d30 <scols_reset_iter@plt+0x490>
  402d5c:	mov	x0, x24
  402d60:	bl	406dd4 <scols_reset_iter@plt+0x4534>
  402d64:	cbnz	w25, 402d80 <scols_reset_iter@plt+0x4e0>
  402d68:	ldp	x19, x20, [sp, #16]
  402d6c:	ldp	x21, x22, [sp, #32]
  402d70:	ldp	x23, x24, [sp, #48]
  402d74:	ldp	x25, x26, [sp, #64]
  402d78:	ldp	x29, x30, [sp], #96
  402d7c:	ret
  402d80:	mov	w0, #0x0                   	// #0
  402d84:	bl	402780 <scols_new_iter@plt>
  402d88:	mov	x19, x0
  402d8c:	cbnz	x0, 402dac <scols_reset_iter@plt+0x50c>
  402d90:	mov	w1, #0x130                 	// #304
  402d94:	adrp	x0, 407000 <scols_reset_iter@plt+0x4760>
  402d98:	add	x0, x0, #0x888
  402d9c:	bl	402a00 <scols_reset_iter@plt+0x160>
  402da0:	mov	w1, w21
  402da4:	ldr	x0, [sp, #88]
  402da8:	bl	402c94 <scols_reset_iter@plt+0x3f4>
  402dac:	add	x2, sp, #0x58
  402db0:	mov	x1, x19
  402db4:	ldr	x0, [x22, #16]
  402db8:	bl	402640 <scols_table_next_column@plt>
  402dbc:	cbnz	w0, 402dd8 <scols_reset_iter@plt+0x538>
  402dc0:	ldr	x0, [sp, #88]
  402dc4:	bl	402330 <scols_column_get_header@plt>
  402dc8:	cbz	x0, 402da0 <scols_reset_iter@plt+0x500>
  402dcc:	bl	402650 <scols_cell_get_data@plt>
  402dd0:	cbnz	x0, 402dac <scols_reset_iter@plt+0x50c>
  402dd4:	b	402da0 <scols_reset_iter@plt+0x500>
  402dd8:	mov	x0, x19
  402ddc:	bl	402350 <scols_free_iter@plt>
  402de0:	b	402d68 <scols_reset_iter@plt+0x4c8>
  402de4:	stp	x29, x30, [sp, #-48]!
  402de8:	mov	x29, sp
  402dec:	stp	x19, x20, [sp, #16]
  402df0:	stp	x21, x22, [sp, #32]
  402df4:	mov	x21, x0
  402df8:	mov	x2, #0x0                   	// #0
  402dfc:	mov	x1, x0
  402e00:	mov	x0, #0x0                   	// #0
  402e04:	bl	4022b0 <mbstowcs@plt>
  402e08:	tbnz	x0, #63, 402e78 <scols_reset_iter@plt+0x5d8>
  402e0c:	add	x19, x0, #0x1
  402e10:	lsl	x22, x19, #2
  402e14:	mov	x1, #0x1                   	// #1
  402e18:	mov	x0, x22
  402e1c:	bl	4024f0 <calloc@plt>
  402e20:	mov	x20, x0
  402e24:	cmp	x0, #0x0
  402e28:	ccmp	x22, #0x0, #0x4, eq  // eq = none
  402e2c:	b.ne	402e54 <scols_reset_iter@plt+0x5b4>  // b.any
  402e30:	mov	x2, x19
  402e34:	mov	x1, x21
  402e38:	bl	4022b0 <mbstowcs@plt>
  402e3c:	tbnz	x0, #63, 402e68 <scols_reset_iter@plt+0x5c8>
  402e40:	mov	x0, x20
  402e44:	ldp	x19, x20, [sp, #16]
  402e48:	ldp	x21, x22, [sp, #32]
  402e4c:	ldp	x29, x30, [sp], #48
  402e50:	ret
  402e54:	mov	x2, #0x1                   	// #1
  402e58:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  402e5c:	add	x1, x1, #0x918
  402e60:	mov	w0, w2
  402e64:	bl	402860 <err@plt>
  402e68:	mov	x0, x20
  402e6c:	bl	402660 <free@plt>
  402e70:	mov	x20, #0x0                   	// #0
  402e74:	b	402e40 <scols_reset_iter@plt+0x5a0>
  402e78:	mov	x20, #0x0                   	// #0
  402e7c:	b	402e40 <scols_reset_iter@plt+0x5a0>
  402e80:	stp	x29, x30, [sp, #-160]!
  402e84:	mov	x29, sp
  402e88:	stp	x19, x20, [sp, #16]
  402e8c:	stp	x21, x22, [sp, #32]
  402e90:	stp	x23, x24, [sp, #48]
  402e94:	stp	x25, x26, [sp, #64]
  402e98:	stp	x27, x28, [sp, #80]
  402e9c:	str	d8, [sp, #96]
  402ea0:	mov	x20, x0
  402ea4:	str	x1, [sp, #112]
  402ea8:	str	xzr, [sp, #152]
  402eac:	str	xzr, [sp, #144]
  402eb0:	str	xzr, [sp, #120]
  402eb4:	mov	w27, #0xa                   	// #10
  402eb8:	b	402f44 <scols_reset_iter@plt+0x6a4>
  402ebc:	ldr	x0, [sp, #112]
  402ec0:	bl	4025d0 <feof@plt>
  402ec4:	cbz	w0, 402eec <scols_reset_iter@plt+0x64c>
  402ec8:	mov	w0, #0x0                   	// #0
  402ecc:	ldp	x19, x20, [sp, #16]
  402ed0:	ldp	x21, x22, [sp, #32]
  402ed4:	ldp	x23, x24, [sp, #48]
  402ed8:	ldp	x25, x26, [sp, #64]
  402edc:	ldp	x27, x28, [sp, #80]
  402ee0:	ldr	d8, [sp, #96]
  402ee4:	ldp	x29, x30, [sp], #160
  402ee8:	ret
  402eec:	mov	w2, #0x5                   	// #5
  402ef0:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  402ef4:	add	x1, x1, #0x938
  402ef8:	mov	x0, #0x0                   	// #0
  402efc:	bl	402790 <dcgettext@plt>
  402f00:	mov	x1, x0
  402f04:	mov	w0, #0x1                   	// #1
  402f08:	bl	402860 <err@plt>
  402f0c:	add	x19, x19, #0x1
  402f10:	ldrsb	x0, [x19]
  402f14:	ldrh	w0, [x1, x0, lsl #1]
  402f18:	tbnz	w0, #13, 402f0c <scols_reset_iter@plt+0x66c>
  402f1c:	mov	w1, w27
  402f20:	mov	x0, x19
  402f24:	bl	402710 <strchr@plt>
  402f28:	cbz	x0, 402f30 <scols_reset_iter@plt+0x690>
  402f2c:	strb	wzr, [x0]
  402f30:	ldrsb	w0, [x19]
  402f34:	cbnz	w0, 402fb4 <scols_reset_iter@plt+0x714>
  402f38:	ldr	w0, [x20]
  402f3c:	cmp	w0, #0x2
  402f40:	b.eq	402f6c <scols_reset_iter@plt+0x6cc>  // b.none
  402f44:	ldr	x3, [sp, #112]
  402f48:	mov	w2, w27
  402f4c:	add	x1, sp, #0x90
  402f50:	add	x0, sp, #0x98
  402f54:	bl	402830 <__getdelim@plt>
  402f58:	tbnz	x0, #63, 402ebc <scols_reset_iter@plt+0x61c>
  402f5c:	ldr	x19, [sp, #152]
  402f60:	bl	402620 <__ctype_b_loc@plt>
  402f64:	ldr	x1, [x0]
  402f68:	b	402f10 <scols_reset_iter@plt+0x670>
  402f6c:	ldrb	w0, [x20, #152]
  402f70:	tbz	w0, #3, 402f44 <scols_reset_iter@plt+0x6a4>
  402f74:	ldr	x0, [x20, #16]
  402f78:	cbz	x0, 402fa8 <scols_reset_iter@plt+0x708>
  402f7c:	mov	x1, #0x0                   	// #0
  402f80:	ldr	x0, [x20, #16]
  402f84:	bl	402530 <scols_table_new_line@plt>
  402f88:	cbnz	x0, 402f44 <scols_reset_iter@plt+0x6a4>
  402f8c:	mov	w2, #0x5                   	// #5
  402f90:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  402f94:	add	x1, x1, #0x948
  402f98:	bl	402790 <dcgettext@plt>
  402f9c:	mov	x1, x0
  402fa0:	mov	w0, #0x1                   	// #1
  402fa4:	bl	402860 <err@plt>
  402fa8:	mov	x0, x20
  402fac:	bl	402a88 <scols_reset_iter@plt+0x1e8>
  402fb0:	b	402f7c <scols_reset_iter@plt+0x6dc>
  402fb4:	ldr	x0, [sp, #152]
  402fb8:	bl	402de4 <scols_reset_iter@plt+0x544>
  402fbc:	mov	x26, x0
  402fc0:	cbz	x0, 402ffc <scols_reset_iter@plt+0x75c>
  402fc4:	ldr	w0, [x20]
  402fc8:	cmp	w0, #0x1
  402fcc:	b.le	403048 <scols_reset_iter@plt+0x7a8>
  402fd0:	cmp	w0, #0x2
  402fd4:	b.ne	40304c <scols_reset_iter@plt+0x7ac>  // b.any
  402fd8:	str	xzr, [sp, #136]
  402fdc:	ldr	x0, [x20, #16]
  402fe0:	cbz	x0, 403058 <scols_reset_iter@plt+0x7b8>
  402fe4:	mov	x19, x26
  402fe8:	mov	x22, #0x0                   	// #0
  402fec:	mov	x24, #0x0                   	// #0
  402ff0:	movi	d8, #0x0
  402ff4:	mov	x28, #0x1                   	// #1
  402ff8:	b	4031f8 <scols_reset_iter@plt+0x958>
  402ffc:	str	xzr, [sp, #136]
  403000:	add	x1, sp, #0x88
  403004:	ldr	x0, [sp, #152]
  403008:	bl	4049b4 <scols_reset_iter@plt+0x2114>
  40300c:	mov	x19, x0
  403010:	cbz	x0, 403028 <scols_reset_iter@plt+0x788>
  403014:	bl	402de4 <scols_reset_iter@plt+0x544>
  403018:	mov	x26, x0
  40301c:	mov	x0, x19
  403020:	bl	402660 <free@plt>
  403024:	b	402fc4 <scols_reset_iter@plt+0x724>
  403028:	mov	w2, #0x5                   	// #5
  40302c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403030:	add	x1, x1, #0x938
  403034:	mov	x0, #0x0                   	// #0
  403038:	bl	402790 <dcgettext@plt>
  40303c:	mov	x1, x0
  403040:	mov	w0, #0x1                   	// #1
  403044:	bl	402860 <err@plt>
  403048:	tbz	w0, #31, 403220 <scols_reset_iter@plt+0x980>
  40304c:	mov	x0, x26
  403050:	bl	402660 <free@plt>
  403054:	b	402f44 <scols_reset_iter@plt+0x6a4>
  403058:	mov	x0, x20
  40305c:	bl	402a88 <scols_reset_iter@plt+0x1e8>
  403060:	b	402fe4 <scols_reset_iter@plt+0x744>
  403064:	ldr	x0, [x20, #16]
  403068:	bl	402560 <scols_table_is_json@plt>
  40306c:	cbnz	w0, 403088 <scols_reset_iter@plt+0x7e8>
  403070:	mov	w2, #0x0                   	// #0
  403074:	fmov	d0, d8
  403078:	mov	x1, #0x0                   	// #0
  40307c:	ldr	x0, [x20, #16]
  403080:	bl	402340 <scols_table_new_column@plt>
  403084:	b	403194 <scols_reset_iter@plt+0x8f4>
  403088:	mov	w2, #0x5                   	// #5
  40308c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403090:	add	x1, x1, #0x968
  403094:	mov	x0, #0x0                   	// #0
  403098:	bl	402790 <dcgettext@plt>
  40309c:	mov	x19, x0
  4030a0:	ldr	x0, [x20, #16]
  4030a4:	bl	4026a0 <scols_table_get_nlines@plt>
  4030a8:	mov	x3, x25
  4030ac:	add	x2, x0, #0x1
  4030b0:	mov	x1, x19
  4030b4:	mov	w0, #0x1                   	// #1
  4030b8:	bl	4027b0 <errx@plt>
  4030bc:	mov	x1, #0x0                   	// #0
  4030c0:	ldr	x0, [x20, #16]
  4030c4:	bl	402530 <scols_table_new_line@plt>
  4030c8:	mov	x22, x0
  4030cc:	cbnz	x0, 403198 <scols_reset_iter@plt+0x8f8>
  4030d0:	mov	w2, #0x5                   	// #5
  4030d4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4030d8:	add	x1, x1, #0x948
  4030dc:	mov	x0, #0x0                   	// #0
  4030e0:	bl	402790 <dcgettext@plt>
  4030e4:	mov	x1, x0
  4030e8:	mov	w0, #0x1                   	// #1
  4030ec:	bl	402860 <err@plt>
  4030f0:	mov	x2, #0x1                   	// #1
  4030f4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4030f8:	add	x1, x1, #0x918
  4030fc:	mov	w0, w2
  403100:	bl	402860 <err@plt>
  403104:	mov	x0, x21
  403108:	bl	402660 <free@plt>
  40310c:	mov	w2, #0x5                   	// #5
  403110:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403114:	add	x1, x1, #0x9c8
  403118:	mov	x0, #0x0                   	// #0
  40311c:	bl	402790 <dcgettext@plt>
  403120:	mov	x1, x0
  403124:	mov	w0, #0x1                   	// #1
  403128:	bl	402860 <err@plt>
  40312c:	mov	w2, #0x5                   	// #5
  403130:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403134:	add	x1, x1, #0x9a8
  403138:	mov	x0, #0x0                   	// #0
  40313c:	bl	402790 <dcgettext@plt>
  403140:	mov	x1, x0
  403144:	mov	w0, #0x1                   	// #1
  403148:	bl	402860 <err@plt>
  40314c:	add	x2, sp, #0x88
  403150:	ldr	x1, [x20, #112]
  403154:	mov	x0, x19
  403158:	bl	402540 <wcstok@plt>
  40315c:	mov	x19, x0
  403160:	b	40317c <scols_reset_iter@plt+0x8dc>
  403164:	ldr	x19, [sp, #136]
  403168:	cbnz	x19, 403204 <scols_reset_iter@plt+0x964>
  40316c:	mov	x0, x26
  403170:	bl	402660 <free@plt>
  403174:	b	402f44 <scols_reset_iter@plt+0x6a4>
  403178:	str	xzr, [sp, #136]
  40317c:	cbz	x19, 40316c <scols_reset_iter@plt+0x8cc>
  403180:	ldr	x0, [x20, #16]
  403184:	bl	4025a0 <scols_table_get_ncols@plt>
  403188:	add	x25, x24, #0x1
  40318c:	cmp	x0, x25
  403190:	b.cc	403064 <scols_reset_iter@plt+0x7c4>  // b.lo, b.ul, b.last
  403194:	cbz	x22, 4030bc <scols_reset_iter@plt+0x81c>
  403198:	mov	x2, #0x0                   	// #0
  40319c:	mov	x1, x19
  4031a0:	mov	x0, #0x0                   	// #0
  4031a4:	bl	402760 <wcstombs@plt>
  4031a8:	mov	x23, x0
  4031ac:	cmn	x0, #0x1
  4031b0:	b.eq	40310c <scols_reset_iter@plt+0x86c>  // b.none
  4031b4:	mov	x1, x28
  4031b8:	add	x0, x0, #0x1
  4031bc:	bl	4024f0 <calloc@plt>
  4031c0:	mov	x21, x0
  4031c4:	cbz	x0, 4030f0 <scols_reset_iter@plt+0x850>
  4031c8:	mov	x2, x23
  4031cc:	mov	x1, x19
  4031d0:	bl	402760 <wcstombs@plt>
  4031d4:	cmn	x0, #0x1
  4031d8:	b.eq	403104 <scols_reset_iter@plt+0x864>  // b.none
  4031dc:	mov	x2, x21
  4031e0:	mov	x1, x24
  4031e4:	mov	x0, x22
  4031e8:	bl	4022e0 <scols_line_refer_data@plt>
  4031ec:	mov	x19, #0x0                   	// #0
  4031f0:	cbnz	w0, 40312c <scols_reset_iter@plt+0x88c>
  4031f4:	mov	x24, x25
  4031f8:	ldrb	w0, [x20, #152]
  4031fc:	tbnz	w0, #0, 40314c <scols_reset_iter@plt+0x8ac>
  403200:	cbz	x19, 403164 <scols_reset_iter@plt+0x8c4>
  403204:	ldr	x1, [x20, #112]
  403208:	mov	x0, x19
  40320c:	bl	402400 <wcspbrk@plt>
  403210:	cbz	x0, 403178 <scols_reset_iter@plt+0x8d8>
  403214:	str	wzr, [x0], #4
  403218:	str	x0, [sp, #136]
  40321c:	b	40317c <scols_reset_iter@plt+0x8dc>
  403220:	ldr	x0, [x20, #136]
  403224:	ldr	x1, [sp, #120]
  403228:	cmp	x0, x1
  40322c:	b.ls	40326c <scols_reset_iter@plt+0x9cc>  // b.plast
  403230:	ldr	x1, [x20, #136]
  403234:	ldr	x0, [x20, #128]
  403238:	str	x26, [x0, x1, lsl #3]
  40323c:	ldr	x1, [x20, #136]
  403240:	ldr	x0, [x20, #128]
  403244:	ldr	x0, [x0, x1, lsl #3]
  403248:	bl	402b88 <scols_reset_iter@plt+0x2e8>
  40324c:	ldr	x1, [x20, #144]
  403250:	cmp	x1, x0
  403254:	b.cs	40325c <scols_reset_iter@plt+0x9bc>  // b.hs, b.nlast
  403258:	str	x0, [x20, #144]
  40325c:	ldr	x0, [x20, #136]
  403260:	add	x0, x0, #0x1
  403264:	str	x0, [x20, #136]
  403268:	b	402f44 <scols_reset_iter@plt+0x6a4>
  40326c:	add	x0, x1, #0x3e8
  403270:	str	x0, [sp, #120]
  403274:	lsl	x19, x0, #3
  403278:	mov	x1, x19
  40327c:	ldr	x0, [x20, #128]
  403280:	bl	402510 <realloc@plt>
  403284:	cmp	x0, #0x0
  403288:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40328c:	b.ne	403298 <scols_reset_iter@plt+0x9f8>  // b.any
  403290:	str	x0, [x20, #128]
  403294:	b	403230 <scols_reset_iter@plt+0x990>
  403298:	mov	x2, x19
  40329c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4032a0:	add	x1, x1, #0x918
  4032a4:	mov	w0, #0x1                   	// #1
  4032a8:	bl	402860 <err@plt>
  4032ac:	stp	x29, x30, [sp, #-32]!
  4032b0:	mov	x29, sp
  4032b4:	stp	x19, x20, [sp, #16]
  4032b8:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  4032bc:	ldr	x20, [x0, #864]
  4032c0:	bl	402800 <__errno_location@plt>
  4032c4:	mov	x19, x0
  4032c8:	str	wzr, [x0]
  4032cc:	mov	x0, x20
  4032d0:	bl	402890 <ferror@plt>
  4032d4:	cbz	w0, 40331c <scols_reset_iter@plt+0xa7c>
  4032d8:	ldr	w0, [x19]
  4032dc:	cmp	w0, #0x9
  4032e0:	b.eq	4032ec <scols_reset_iter@plt+0xa4c>  // b.none
  4032e4:	cmp	w0, #0x20
  4032e8:	b.ne	403348 <scols_reset_iter@plt+0xaa8>  // b.any
  4032ec:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  4032f0:	ldr	x20, [x0, #840]
  4032f4:	str	wzr, [x19]
  4032f8:	mov	x0, x20
  4032fc:	bl	402890 <ferror@plt>
  403300:	cbz	w0, 403388 <scols_reset_iter@plt+0xae8>
  403304:	ldr	w0, [x19]
  403308:	cmp	w0, #0x9
  40330c:	b.ne	4033b4 <scols_reset_iter@plt+0xb14>  // b.any
  403310:	ldp	x19, x20, [sp, #16]
  403314:	ldp	x29, x30, [sp], #32
  403318:	ret
  40331c:	mov	x0, x20
  403320:	bl	402720 <fflush@plt>
  403324:	cbnz	w0, 4032d8 <scols_reset_iter@plt+0xa38>
  403328:	mov	x0, x20
  40332c:	bl	4023f0 <fileno@plt>
  403330:	tbnz	w0, #31, 4032d8 <scols_reset_iter@plt+0xa38>
  403334:	bl	4022d0 <dup@plt>
  403338:	tbnz	w0, #31, 4032d8 <scols_reset_iter@plt+0xa38>
  40333c:	bl	402550 <close@plt>
  403340:	cbz	w0, 4032ec <scols_reset_iter@plt+0xa4c>
  403344:	b	4032d8 <scols_reset_iter@plt+0xa38>
  403348:	cbz	w0, 40336c <scols_reset_iter@plt+0xacc>
  40334c:	mov	w2, #0x5                   	// #5
  403350:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403354:	add	x1, x1, #0x9e8
  403358:	mov	x0, #0x0                   	// #0
  40335c:	bl	402790 <dcgettext@plt>
  403360:	bl	402610 <warn@plt>
  403364:	mov	w0, #0x1                   	// #1
  403368:	bl	402270 <_exit@plt>
  40336c:	mov	w2, #0x5                   	// #5
  403370:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403374:	add	x1, x1, #0x9e8
  403378:	mov	x0, #0x0                   	// #0
  40337c:	bl	402790 <dcgettext@plt>
  403380:	bl	402740 <warnx@plt>
  403384:	b	403364 <scols_reset_iter@plt+0xac4>
  403388:	mov	x0, x20
  40338c:	bl	402720 <fflush@plt>
  403390:	cbnz	w0, 403304 <scols_reset_iter@plt+0xa64>
  403394:	mov	x0, x20
  403398:	bl	4023f0 <fileno@plt>
  40339c:	tbnz	w0, #31, 403304 <scols_reset_iter@plt+0xa64>
  4033a0:	bl	4022d0 <dup@plt>
  4033a4:	tbnz	w0, #31, 403304 <scols_reset_iter@plt+0xa64>
  4033a8:	bl	402550 <close@plt>
  4033ac:	cbz	w0, 403310 <scols_reset_iter@plt+0xa70>
  4033b0:	b	403304 <scols_reset_iter@plt+0xa64>
  4033b4:	mov	w0, #0x1                   	// #1
  4033b8:	bl	402270 <_exit@plt>
  4033bc:	stp	x29, x30, [sp, #-304]!
  4033c0:	mov	x29, sp
  4033c4:	stp	x19, x20, [sp, #16]
  4033c8:	stp	x21, x22, [sp, #32]
  4033cc:	stp	x23, x24, [sp, #48]
  4033d0:	stp	x25, x26, [sp, #64]
  4033d4:	stp	x27, x28, [sp, #80]
  4033d8:	mov	w22, w0
  4033dc:	mov	x20, x1
  4033e0:	stp	xzr, xzr, [sp, #144]
  4033e4:	stp	xzr, xzr, [sp, #160]
  4033e8:	stp	xzr, xzr, [sp, #176]
  4033ec:	stp	xzr, xzr, [sp, #192]
  4033f0:	stp	xzr, xzr, [sp, #208]
  4033f4:	stp	xzr, xzr, [sp, #224]
  4033f8:	stp	xzr, xzr, [sp, #240]
  4033fc:	stp	xzr, xzr, [sp, #256]
  403400:	stp	xzr, xzr, [sp, #272]
  403404:	stp	xzr, xzr, [sp, #288]
  403408:	mov	x0, #0xffffffffffffffff    	// #-1
  40340c:	str	x0, [sp, #152]
  403410:	ldrb	w0, [sp, #296]
  403414:	orr	w0, w0, #0x1
  403418:	strb	w0, [sp, #296]
  40341c:	str	xzr, [sp, #128]
  403420:	str	wzr, [sp, #136]
  403424:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403428:	add	x1, x1, #0xab8
  40342c:	mov	w0, #0x6                   	// #6
  403430:	bl	402880 <setlocale@plt>
  403434:	adrp	x19, 407000 <scols_reset_iter@plt+0x4760>
  403438:	add	x19, x19, #0xa18
  40343c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403440:	add	x1, x1, #0xa00
  403444:	mov	x0, x19
  403448:	bl	402480 <bindtextdomain@plt>
  40344c:	mov	x0, x19
  403450:	bl	4025e0 <textdomain@plt>
  403454:	adrp	x0, 403000 <scols_reset_iter@plt+0x760>
  403458:	add	x0, x0, #0x2ac
  40345c:	bl	407828 <scols_reset_iter@plt+0x4f88>
  403460:	adrp	x0, 407000 <scols_reset_iter@plt+0x4760>
  403464:	add	x0, x0, #0xa28
  403468:	str	x0, [sp, #264]
  40346c:	adrp	x0, 407000 <scols_reset_iter@plt+0x4760>
  403470:	add	x0, x0, #0xa30
  403474:	bl	402de4 <scols_reset_iter@plt+0x544>
  403478:	str	x0, [sp, #256]
  40347c:	adrp	x19, 408000 <scols_reset_iter@plt+0x5760>
  403480:	add	x19, x19, #0x508
  403484:	adrp	x21, 408000 <scols_reset_iter@plt+0x5760>
  403488:	add	x21, x21, #0x198
  40348c:	adrp	x23, 408000 <scols_reset_iter@plt+0x5760>
  403490:	add	x23, x23, #0x4a0
  403494:	mov	w24, #0x1                   	// #1
  403498:	mov	x4, #0x0                   	// #0
  40349c:	mov	x3, x19
  4034a0:	mov	x2, x21
  4034a4:	mov	x1, x20
  4034a8:	mov	w0, w22
  4034ac:	bl	4025f0 <getopt_long@plt>
  4034b0:	cmn	w0, #0x1
  4034b4:	b.eq	403b70 <scols_reset_iter@plt+0x12d0>  // b.none
  4034b8:	cmp	w0, #0x49
  4034bc:	b.le	4035f8 <scols_reset_iter@plt+0xd58>
  4034c0:	add	x1, sp, #0x80
  4034c4:	add	x25, x19, #0x300
  4034c8:	b	4034fc <scols_reset_iter@plt+0xc5c>
  4034cc:	ldr	w2, [x3, #4]!
  4034d0:	cmp	w2, #0x0
  4034d4:	ccmp	w0, w2, #0x1, ne  // ne = any
  4034d8:	b.ge	403510 <scols_reset_iter@plt+0xc70>  // b.tcont
  4034dc:	b	4034e8 <scols_reset_iter@plt+0xc48>
  4034e0:	cmp	w0, w2
  4034e4:	b.ne	403528 <scols_reset_iter@plt+0xc88>  // b.any
  4034e8:	ldr	w2, [x25, #64]!
  4034ec:	add	x1, x1, #0x4
  4034f0:	cmp	w2, #0x0
  4034f4:	ccmp	w0, w2, #0x1, ne  // ne = any
  4034f8:	b.lt	4035f8 <scols_reset_iter@plt+0xd58>  // b.tstop
  4034fc:	ldr	w2, [x25]
  403500:	cmp	w2, #0x0
  403504:	mov	x3, x25
  403508:	ccmp	w0, w2, #0x1, ne  // ne = any
  40350c:	b.lt	4034e8 <scols_reset_iter@plt+0xc48>  // b.tstop
  403510:	cmp	w0, w2
  403514:	b.ne	4034cc <scols_reset_iter@plt+0xc2c>  // b.any
  403518:	ldr	w2, [x1]
  40351c:	cbnz	w2, 4034e0 <scols_reset_iter@plt+0xc40>
  403520:	str	w0, [x1]
  403524:	b	4034e8 <scols_reset_iter@plt+0xc48>
  403528:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  40352c:	ldr	x19, [x0, #840]
  403530:	mov	w2, #0x5                   	// #5
  403534:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403538:	add	x1, x1, #0xa38
  40353c:	mov	x0, #0x0                   	// #0
  403540:	bl	402790 <dcgettext@plt>
  403544:	adrp	x1, 41b000 <scols_reset_iter@plt+0x18760>
  403548:	ldr	x2, [x1, #880]
  40354c:	mov	x1, x0
  403550:	mov	x0, x19
  403554:	bl	402840 <fprintf@plt>
  403558:	mov	x19, #0x0                   	// #0
  40355c:	adrp	x20, 407000 <scols_reset_iter@plt+0x4760>
  403560:	add	x20, x20, #0x9f8
  403564:	adrp	x21, 408000 <scols_reset_iter@plt+0x5760>
  403568:	adrp	x22, 407000 <scols_reset_iter@plt+0x4760>
  40356c:	add	x22, x22, #0xa68
  403570:	b	403598 <scols_reset_iter@plt+0xcf8>
  403574:	cbz	x2, 4035bc <scols_reset_iter@plt+0xd1c>
  403578:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  40357c:	add	x1, x1, #0xa60
  403580:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  403584:	ldr	x0, [x0, #840]
  403588:	bl	402840 <fprintf@plt>
  40358c:	add	x19, x19, #0x4
  403590:	cmp	x19, #0x3c
  403594:	b.eq	4035e0 <scols_reset_iter@plt+0xd40>  // b.none
  403598:	ldr	w3, [x25, x19]
  40359c:	cbz	w3, 4035e0 <scols_reset_iter@plt+0xd40>
  4035a0:	mov	x2, x20
  4035a4:	add	x0, x21, #0x508
  4035a8:	ldr	w1, [x0, #24]
  4035ac:	cmp	w3, w1
  4035b0:	b.eq	403574 <scols_reset_iter@plt+0xcd4>  // b.none
  4035b4:	ldr	x2, [x0, #32]!
  4035b8:	cbnz	x2, 4035a8 <scols_reset_iter@plt+0xd08>
  4035bc:	sub	w0, w3, #0x21
  4035c0:	cmp	w0, #0x5d
  4035c4:	b.hi	40358c <scols_reset_iter@plt+0xcec>  // b.pmore
  4035c8:	mov	w2, w3
  4035cc:	mov	x1, x22
  4035d0:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  4035d4:	ldr	x0, [x0, #840]
  4035d8:	bl	402840 <fprintf@plt>
  4035dc:	b	40358c <scols_reset_iter@plt+0xcec>
  4035e0:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  4035e4:	ldr	x1, [x0, #840]
  4035e8:	mov	w0, #0xa                   	// #10
  4035ec:	bl	402390 <fputc@plt>
  4035f0:	mov	w0, #0x1                   	// #1
  4035f4:	bl	4022c0 <exit@plt>
  4035f8:	sub	w0, w0, #0x45
  4035fc:	cmp	w0, #0x33
  403600:	b.hi	403b38 <scols_reset_iter@plt+0x1298>  // b.pmore
  403604:	ldrh	w0, [x23, w0, uxtw #1]
  403608:	adr	x1, 403614 <scols_reset_iter@plt+0xd74>
  40360c:	add	x0, x1, w0, sxth #2
  403610:	br	x0
  403614:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  403618:	ldr	x25, [x0, #848]
  40361c:	mov	w2, #0x5                   	// #5
  403620:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403624:	add	x1, x1, #0xa70
  403628:	mov	x0, #0x0                   	// #0
  40362c:	bl	402790 <dcgettext@plt>
  403630:	mov	x1, x0
  403634:	mov	x0, x25
  403638:	bl	405868 <scols_reset_iter@plt+0x2fc8>
  40363c:	mov	w0, w0
  403640:	str	x0, [sp, #152]
  403644:	b	403498 <scols_reset_iter@plt+0xbf8>
  403648:	ldrb	w0, [sp, #296]
  40364c:	orr	w0, w0, #0x10
  403650:	strb	w0, [sp, #296]
  403654:	b	403498 <scols_reset_iter@plt+0xbf8>
  403658:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  40365c:	ldr	x0, [x0, #848]
  403660:	str	x0, [sp, #208]
  403664:	b	403498 <scols_reset_iter@plt+0xbf8>
  403668:	ldrb	w0, [sp, #296]
  40366c:	orr	w0, w0, #0x4
  403670:	strb	w0, [sp, #296]
  403674:	b	403498 <scols_reset_iter@plt+0xbf8>
  403678:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  40367c:	ldr	x0, [x0, #848]
  403680:	str	x0, [sp, #224]
  403684:	b	403498 <scols_reset_iter@plt+0xbf8>
  403688:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  40368c:	ldr	x0, [x0, #848]
  403690:	str	x0, [sp, #240]
  403694:	b	403498 <scols_reset_iter@plt+0xbf8>
  403698:	ldrb	w0, [sp, #296]
  40369c:	orr	w0, w0, #0x2
  4036a0:	strb	w0, [sp, #296]
  4036a4:	mov	w0, #0x2                   	// #2
  4036a8:	str	w0, [sp, #144]
  4036ac:	b	403498 <scols_reset_iter@plt+0xbf8>
  4036b0:	ldrb	w0, [sp, #296]
  4036b4:	orr	w0, w0, #0x8
  4036b8:	strb	w0, [sp, #296]
  4036bc:	b	403498 <scols_reset_iter@plt+0xbf8>
  4036c0:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  4036c4:	ldr	x25, [x0, #848]
  4036c8:	mov	w2, #0x5                   	// #5
  4036cc:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4036d0:	add	x1, x1, #0xa90
  4036d4:	mov	x0, #0x0                   	// #0
  4036d8:	bl	402790 <dcgettext@plt>
  4036dc:	mov	x1, x0
  4036e0:	mov	x0, x25
  4036e4:	bl	402a20 <scols_reset_iter@plt+0x180>
  4036e8:	str	x0, [sp, #168]
  4036ec:	b	403498 <scols_reset_iter@plt+0xbf8>
  4036f0:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  4036f4:	ldr	x0, [x0, #848]
  4036f8:	str	x0, [sp, #176]
  4036fc:	b	403498 <scols_reset_iter@plt+0xbf8>
  403700:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  403704:	ldr	x0, [x0, #848]
  403708:	str	x0, [sp, #184]
  40370c:	b	403498 <scols_reset_iter@plt+0xbf8>
  403710:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  403714:	ldr	x0, [x0, #848]
  403718:	str	x0, [sp, #264]
  40371c:	b	403498 <scols_reset_iter@plt+0xbf8>
  403720:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  403724:	ldr	x0, [x0, #848]
  403728:	str	x0, [sp, #248]
  40372c:	b	403498 <scols_reset_iter@plt+0xbf8>
  403730:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  403734:	ldr	x0, [x0, #848]
  403738:	str	x0, [sp, #192]
  40373c:	b	403498 <scols_reset_iter@plt+0xbf8>
  403740:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  403744:	ldr	x0, [x0, #848]
  403748:	str	x0, [sp, #232]
  40374c:	b	403498 <scols_reset_iter@plt+0xbf8>
  403750:	ldr	x0, [sp, #256]
  403754:	bl	402660 <free@plt>
  403758:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  40375c:	ldr	x0, [x0, #848]
  403760:	bl	402de4 <scols_reset_iter@plt+0x544>
  403764:	str	x0, [sp, #256]
  403768:	ldrb	w0, [sp, #296]
  40376c:	and	w0, w0, #0xfffffffe
  403770:	strb	w0, [sp, #296]
  403774:	b	403498 <scols_reset_iter@plt+0xbf8>
  403778:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  40377c:	ldr	x0, [x0, #848]
  403780:	str	x0, [sp, #200]
  403784:	b	403498 <scols_reset_iter@plt+0xbf8>
  403788:	mov	w0, #0x2                   	// #2
  40378c:	str	w0, [sp, #144]
  403790:	b	403498 <scols_reset_iter@plt+0xbf8>
  403794:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  403798:	ldr	x0, [x0, #848]
  40379c:	str	x0, [sp, #216]
  4037a0:	b	403498 <scols_reset_iter@plt+0xbf8>
  4037a4:	str	w24, [sp, #144]
  4037a8:	b	403498 <scols_reset_iter@plt+0xbf8>
  4037ac:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  4037b0:	ldr	x19, [x0, #864]
  4037b4:	mov	w2, #0x5                   	// #5
  4037b8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4037bc:	add	x1, x1, #0xab0
  4037c0:	mov	x0, #0x0                   	// #0
  4037c4:	bl	402790 <dcgettext@plt>
  4037c8:	mov	x1, x19
  4037cc:	bl	4022a0 <fputs@plt>
  4037d0:	mov	w2, #0x5                   	// #5
  4037d4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4037d8:	add	x1, x1, #0xac0
  4037dc:	mov	x0, #0x0                   	// #0
  4037e0:	bl	402790 <dcgettext@plt>
  4037e4:	adrp	x1, 41b000 <scols_reset_iter@plt+0x18760>
  4037e8:	ldr	x2, [x1, #880]
  4037ec:	mov	x1, x0
  4037f0:	mov	x0, x19
  4037f4:	bl	402840 <fprintf@plt>
  4037f8:	mov	x1, x19
  4037fc:	mov	w0, #0xa                   	// #10
  403800:	bl	402390 <fputc@plt>
  403804:	mov	w2, #0x5                   	// #5
  403808:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  40380c:	add	x1, x1, #0xae0
  403810:	mov	x0, #0x0                   	// #0
  403814:	bl	402790 <dcgettext@plt>
  403818:	mov	x1, x19
  40381c:	bl	4022a0 <fputs@plt>
  403820:	mov	w2, #0x5                   	// #5
  403824:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403828:	add	x1, x1, #0xaf8
  40382c:	mov	x0, #0x0                   	// #0
  403830:	bl	402790 <dcgettext@plt>
  403834:	mov	x1, x19
  403838:	bl	4022a0 <fputs@plt>
  40383c:	mov	w2, #0x5                   	// #5
  403840:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403844:	add	x1, x1, #0xb08
  403848:	mov	x0, #0x0                   	// #0
  40384c:	bl	402790 <dcgettext@plt>
  403850:	mov	x1, x19
  403854:	bl	4022a0 <fputs@plt>
  403858:	mov	w2, #0x5                   	// #5
  40385c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403860:	add	x1, x1, #0xb40
  403864:	mov	x0, #0x0                   	// #0
  403868:	bl	402790 <dcgettext@plt>
  40386c:	mov	x1, x19
  403870:	bl	4022a0 <fputs@plt>
  403874:	mov	w2, #0x5                   	// #5
  403878:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  40387c:	add	x1, x1, #0xb80
  403880:	mov	x0, #0x0                   	// #0
  403884:	bl	402790 <dcgettext@plt>
  403888:	mov	x1, x19
  40388c:	bl	4022a0 <fputs@plt>
  403890:	mov	w2, #0x5                   	// #5
  403894:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403898:	add	x1, x1, #0xbc8
  40389c:	mov	x0, #0x0                   	// #0
  4038a0:	bl	402790 <dcgettext@plt>
  4038a4:	mov	x1, x19
  4038a8:	bl	4022a0 <fputs@plt>
  4038ac:	mov	w2, #0x5                   	// #5
  4038b0:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4038b4:	add	x1, x1, #0xc10
  4038b8:	mov	x0, #0x0                   	// #0
  4038bc:	bl	402790 <dcgettext@plt>
  4038c0:	mov	x1, x19
  4038c4:	bl	4022a0 <fputs@plt>
  4038c8:	mov	w2, #0x5                   	// #5
  4038cc:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4038d0:	add	x1, x1, #0xc70
  4038d4:	mov	x0, #0x0                   	// #0
  4038d8:	bl	402790 <dcgettext@plt>
  4038dc:	mov	x1, x19
  4038e0:	bl	4022a0 <fputs@plt>
  4038e4:	mov	w2, #0x5                   	// #5
  4038e8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4038ec:	add	x1, x1, #0xca8
  4038f0:	mov	x0, #0x0                   	// #0
  4038f4:	bl	402790 <dcgettext@plt>
  4038f8:	mov	x1, x19
  4038fc:	bl	4022a0 <fputs@plt>
  403900:	mov	w2, #0x5                   	// #5
  403904:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403908:	add	x1, x1, #0xce8
  40390c:	mov	x0, #0x0                   	// #0
  403910:	bl	402790 <dcgettext@plt>
  403914:	mov	x1, x19
  403918:	bl	4022a0 <fputs@plt>
  40391c:	mov	w2, #0x5                   	// #5
  403920:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403924:	add	x1, x1, #0xd28
  403928:	mov	x0, #0x0                   	// #0
  40392c:	bl	402790 <dcgettext@plt>
  403930:	mov	x1, x19
  403934:	bl	4022a0 <fputs@plt>
  403938:	mov	w2, #0x5                   	// #5
  40393c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403940:	add	x1, x1, #0xd70
  403944:	mov	x0, #0x0                   	// #0
  403948:	bl	402790 <dcgettext@plt>
  40394c:	mov	x1, x19
  403950:	bl	4022a0 <fputs@plt>
  403954:	mov	w2, #0x5                   	// #5
  403958:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  40395c:	add	x1, x1, #0xdc0
  403960:	mov	x0, #0x0                   	// #0
  403964:	bl	402790 <dcgettext@plt>
  403968:	mov	x1, x19
  40396c:	bl	4022a0 <fputs@plt>
  403970:	mov	w2, #0x5                   	// #5
  403974:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403978:	add	x1, x1, #0xe10
  40397c:	mov	x0, #0x0                   	// #0
  403980:	bl	402790 <dcgettext@plt>
  403984:	mov	x1, x19
  403988:	bl	4022a0 <fputs@plt>
  40398c:	mov	w2, #0x5                   	// #5
  403990:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403994:	add	x1, x1, #0xe50
  403998:	mov	x0, #0x0                   	// #0
  40399c:	bl	402790 <dcgettext@plt>
  4039a0:	mov	x1, x19
  4039a4:	bl	4022a0 <fputs@plt>
  4039a8:	mov	x1, x19
  4039ac:	mov	w0, #0xa                   	// #10
  4039b0:	bl	402390 <fputc@plt>
  4039b4:	mov	w2, #0x5                   	// #5
  4039b8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4039bc:	add	x1, x1, #0xe98
  4039c0:	mov	x0, #0x0                   	// #0
  4039c4:	bl	402790 <dcgettext@plt>
  4039c8:	mov	x1, x19
  4039cc:	bl	4022a0 <fputs@plt>
  4039d0:	mov	w2, #0x5                   	// #5
  4039d4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4039d8:	add	x1, x1, #0xee8
  4039dc:	mov	x0, #0x0                   	// #0
  4039e0:	bl	402790 <dcgettext@plt>
  4039e4:	mov	x1, x19
  4039e8:	bl	4022a0 <fputs@plt>
  4039ec:	mov	w2, #0x5                   	// #5
  4039f0:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4039f4:	add	x1, x1, #0xf38
  4039f8:	mov	x0, #0x0                   	// #0
  4039fc:	bl	402790 <dcgettext@plt>
  403a00:	mov	x1, x19
  403a04:	bl	4022a0 <fputs@plt>
  403a08:	mov	x1, x19
  403a0c:	mov	w0, #0xa                   	// #10
  403a10:	bl	402390 <fputc@plt>
  403a14:	mov	w2, #0x5                   	// #5
  403a18:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403a1c:	add	x1, x1, #0xf88
  403a20:	mov	x0, #0x0                   	// #0
  403a24:	bl	402790 <dcgettext@plt>
  403a28:	mov	x1, x19
  403a2c:	bl	4022a0 <fputs@plt>
  403a30:	mov	w2, #0x5                   	// #5
  403a34:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  403a38:	add	x1, x1, #0xfd8
  403a3c:	mov	x0, #0x0                   	// #0
  403a40:	bl	402790 <dcgettext@plt>
  403a44:	mov	x1, x19
  403a48:	bl	4022a0 <fputs@plt>
  403a4c:	mov	w2, #0x5                   	// #5
  403a50:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403a54:	add	x1, x1, #0x38
  403a58:	mov	x0, #0x0                   	// #0
  403a5c:	bl	402790 <dcgettext@plt>
  403a60:	mov	x1, x19
  403a64:	bl	4022a0 <fputs@plt>
  403a68:	mov	w2, #0x5                   	// #5
  403a6c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403a70:	add	x1, x1, #0x78
  403a74:	mov	x0, #0x0                   	// #0
  403a78:	bl	402790 <dcgettext@plt>
  403a7c:	mov	x1, x19
  403a80:	bl	4022a0 <fputs@plt>
  403a84:	mov	x1, x19
  403a88:	mov	w0, #0xa                   	// #10
  403a8c:	bl	402390 <fputc@plt>
  403a90:	mov	w2, #0x5                   	// #5
  403a94:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403a98:	add	x1, x1, #0xb8
  403a9c:	mov	x0, #0x0                   	// #0
  403aa0:	bl	402790 <dcgettext@plt>
  403aa4:	mov	x19, x0
  403aa8:	mov	w2, #0x5                   	// #5
  403aac:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403ab0:	add	x1, x1, #0xd0
  403ab4:	mov	x0, #0x0                   	// #0
  403ab8:	bl	402790 <dcgettext@plt>
  403abc:	mov	x4, x0
  403ac0:	adrp	x3, 408000 <scols_reset_iter@plt+0x5760>
  403ac4:	add	x3, x3, #0xe0
  403ac8:	mov	x2, x19
  403acc:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403ad0:	add	x1, x1, #0xf0
  403ad4:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  403ad8:	add	x0, x0, #0x100
  403adc:	bl	4027e0 <printf@plt>
  403ae0:	mov	w2, #0x5                   	// #5
  403ae4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403ae8:	add	x1, x1, #0x118
  403aec:	mov	x0, #0x0                   	// #0
  403af0:	bl	402790 <dcgettext@plt>
  403af4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403af8:	add	x1, x1, #0x138
  403afc:	bl	4027e0 <printf@plt>
  403b00:	mov	w0, #0x0                   	// #0
  403b04:	bl	4022c0 <exit@plt>
  403b08:	mov	w2, #0x5                   	// #5
  403b0c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403b10:	add	x1, x1, #0x148
  403b14:	mov	x0, #0x0                   	// #0
  403b18:	bl	402790 <dcgettext@plt>
  403b1c:	adrp	x2, 408000 <scols_reset_iter@plt+0x5760>
  403b20:	add	x2, x2, #0x158
  403b24:	adrp	x1, 41b000 <scols_reset_iter@plt+0x18760>
  403b28:	ldr	x1, [x1, #880]
  403b2c:	bl	4027e0 <printf@plt>
  403b30:	mov	w0, #0x0                   	// #0
  403b34:	bl	4022c0 <exit@plt>
  403b38:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  403b3c:	ldr	x19, [x0, #840]
  403b40:	mov	w2, #0x5                   	// #5
  403b44:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403b48:	add	x1, x1, #0x170
  403b4c:	mov	x0, #0x0                   	// #0
  403b50:	bl	402790 <dcgettext@plt>
  403b54:	adrp	x1, 41b000 <scols_reset_iter@plt+0x18760>
  403b58:	ldr	x2, [x1, #880]
  403b5c:	mov	x1, x0
  403b60:	mov	x0, x19
  403b64:	bl	402840 <fprintf@plt>
  403b68:	mov	w0, #0x1                   	// #1
  403b6c:	bl	4022c0 <exit@plt>
  403b70:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  403b74:	ldrsw	x21, [x0, #856]
  403b78:	lsl	x19, x21, #3
  403b7c:	add	x21, x20, x21, lsl #3
  403b80:	ldr	x0, [sp, #152]
  403b84:	cmn	x0, #0x1
  403b88:	b.eq	403bd4 <scols_reset_iter@plt+0x1334>  // b.none
  403b8c:	ldr	x0, [sp, #232]
  403b90:	cbz	x0, 403c08 <scols_reset_iter@plt+0x1368>
  403b94:	mov	w0, #0x2                   	// #2
  403b98:	str	w0, [sp, #144]
  403b9c:	ldr	x0, [sp, #248]
  403ba0:	cbz	x0, 403be8 <scols_reset_iter@plt+0x1348>
  403ba4:	ldr	x0, [sp, #240]
  403ba8:	cbz	x0, 403be8 <scols_reset_iter@plt+0x1348>
  403bac:	ldr	x0, [sp, #168]
  403bb0:	cbz	x0, 403c54 <scols_reset_iter@plt+0x13b4>
  403bb4:	ldr	x0, [x20, x19]
  403bb8:	cbz	x0, 403c9c <scols_reset_iter@plt+0x13fc>
  403bbc:	mov	w27, #0x0                   	// #0
  403bc0:	adrp	x20, 408000 <scols_reset_iter@plt+0x5760>
  403bc4:	add	x20, x20, #0x3b0
  403bc8:	adrp	x22, 408000 <scols_reset_iter@plt+0x5760>
  403bcc:	add	x22, x22, #0x268
  403bd0:	b	403d2c <scols_reset_iter@plt+0x148c>
  403bd4:	mov	w0, #0x50                  	// #80
  403bd8:	bl	406bfc <scols_reset_iter@plt+0x435c>
  403bdc:	sxtw	x0, w0
  403be0:	str	x0, [sp, #152]
  403be4:	b	403b8c <scols_reset_iter@plt+0x12ec>
  403be8:	mov	w2, #0x5                   	// #5
  403bec:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403bf0:	add	x1, x1, #0x1c0
  403bf4:	mov	x0, #0x0                   	// #0
  403bf8:	bl	402790 <dcgettext@plt>
  403bfc:	mov	x1, x0
  403c00:	mov	w0, #0x1                   	// #1
  403c04:	bl	4027b0 <errx@plt>
  403c08:	ldr	w0, [sp, #144]
  403c0c:	cmp	w0, #0x2
  403c10:	b.eq	403bac <scols_reset_iter@plt+0x130c>  // b.none
  403c14:	ldr	x0, [sp, #184]
  403c18:	cbnz	x0, 403c7c <scols_reset_iter@plt+0x13dc>
  403c1c:	ldr	x0, [sp, #176]
  403c20:	cbnz	x0, 403c7c <scols_reset_iter@plt+0x13dc>
  403c24:	ldr	x0, [sp, #216]
  403c28:	cbnz	x0, 403c7c <scols_reset_iter@plt+0x13dc>
  403c2c:	ldr	x0, [sp, #224]
  403c30:	cbnz	x0, 403c7c <scols_reset_iter@plt+0x13dc>
  403c34:	ldr	x0, [sp, #200]
  403c38:	cbnz	x0, 403c7c <scols_reset_iter@plt+0x13dc>
  403c3c:	ldr	x0, [sp, #208]
  403c40:	cbnz	x0, 403c7c <scols_reset_iter@plt+0x13dc>
  403c44:	ldr	x0, [sp, #192]
  403c48:	cbnz	x0, 403c7c <scols_reset_iter@plt+0x13dc>
  403c4c:	ldr	x0, [sp, #168]
  403c50:	cbnz	x0, 403c7c <scols_reset_iter@plt+0x13dc>
  403c54:	ldrb	w0, [sp, #296]
  403c58:	tbz	w0, #1, 403bb4 <scols_reset_iter@plt+0x1314>
  403c5c:	mov	w2, #0x5                   	// #5
  403c60:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403c64:	add	x1, x1, #0x238
  403c68:	mov	x0, #0x0                   	// #0
  403c6c:	bl	402790 <dcgettext@plt>
  403c70:	mov	x1, x0
  403c74:	mov	w0, #0x1                   	// #1
  403c78:	bl	4027b0 <errx@plt>
  403c7c:	mov	w2, #0x5                   	// #5
  403c80:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403c84:	add	x1, x1, #0x208
  403c88:	mov	x0, #0x0                   	// #0
  403c8c:	bl	402790 <dcgettext@plt>
  403c90:	mov	x1, x0
  403c94:	mov	w0, #0x1                   	// #1
  403c98:	bl	4027b0 <errx@plt>
  403c9c:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  403ca0:	ldr	x1, [x0, #872]
  403ca4:	add	x0, sp, #0x90
  403ca8:	bl	402e80 <scols_reset_iter@plt+0x5e0>
  403cac:	mov	w27, w0
  403cb0:	ldr	w0, [sp, #144]
  403cb4:	cmp	w0, #0x2
  403cb8:	b.eq	403dd4 <scols_reset_iter@plt+0x1534>  // b.none
  403cbc:	ldr	x25, [sp, #280]
  403cc0:	cbz	x25, 403d58 <scols_reset_iter@plt+0x14b8>
  403cc4:	ldr	x1, [sp, #288]
  403cc8:	ldr	x20, [sp, #152]
  403ccc:	cmp	x1, x20
  403cd0:	b.cc	403d60 <scols_reset_iter@plt+0x14c0>  // b.lo, b.ul, b.last
  403cd4:	mov	w0, #0x3                   	// #3
  403cd8:	str	w0, [sp, #144]
  403cdc:	ldr	x22, [sp, #272]
  403ce0:	and	x25, x25, #0xffffffff
  403ce4:	mov	x19, #0x0                   	// #0
  403ce8:	adrp	x21, 41b000 <scols_reset_iter@plt+0x18760>
  403cec:	mov	w20, #0xa                   	// #10
  403cf0:	cmp	x19, x25
  403cf4:	b.eq	403db0 <scols_reset_iter@plt+0x1510>  // b.none
  403cf8:	ldr	x1, [x21, #864]
  403cfc:	ldr	x0, [x22, x19, lsl #3]
  403d00:	bl	402770 <fputws@plt>
  403d04:	mov	w0, w20
  403d08:	bl	4023a0 <putwchar@plt>
  403d0c:	add	x19, x19, #0x1
  403d10:	b	403cf0 <scols_reset_iter@plt+0x1450>
  403d14:	ldr	x1, [x21]
  403d18:	mov	x0, x22
  403d1c:	bl	402610 <warn@plt>
  403d20:	add	w27, w27, #0x1
  403d24:	ldr	x0, [x21, #8]!
  403d28:	cbz	x0, 403cb0 <scols_reset_iter@plt+0x1410>
  403d2c:	mov	x1, x20
  403d30:	bl	402420 <fopen@plt>
  403d34:	mov	x19, x0
  403d38:	cbz	x0, 403d14 <scols_reset_iter@plt+0x1474>
  403d3c:	mov	x1, x0
  403d40:	add	x0, sp, #0x90
  403d44:	bl	402e80 <scols_reset_iter@plt+0x5e0>
  403d48:	add	w27, w27, w0
  403d4c:	mov	x0, x19
  403d50:	bl	402410 <fclose@plt>
  403d54:	b	403d24 <scols_reset_iter@plt+0x1484>
  403d58:	mov	w0, w27
  403d5c:	bl	4022c0 <exit@plt>
  403d60:	cmp	w0, #0x1
  403d64:	b.eq	404238 <scols_reset_iter@plt+0x1998>  // b.none
  403d68:	b.gt	403da8 <scols_reset_iter@plt+0x1508>
  403d6c:	cbnz	w0, 403db0 <scols_reset_iter@plt+0x1510>
  403d70:	add	x26, x1, #0x8
  403d74:	and	x26, x26, #0xfffffffffffffff8
  403d78:	str	x26, [sp, #288]
  403d7c:	cmp	x20, x26
  403d80:	b.cc	404184 <scols_reset_iter@plt+0x18e4>  // b.lo, b.ul, b.last
  403d84:	udiv	x26, x20, x26
  403d88:	udiv	x0, x25, x26
  403d8c:	msub	x25, x0, x26, x25
  403d90:	cmp	x25, #0x0
  403d94:	cinc	x25, x0, ne  // ne = any
  403d98:	str	xzr, [sp, #104]
  403d9c:	adrp	x28, 41b000 <scols_reset_iter@plt+0x18760>
  403da0:	mov	w24, #0x9                   	// #9
  403da4:	b	404214 <scols_reset_iter@plt+0x1974>
  403da8:	cmp	w0, #0x3
  403dac:	b.eq	403cdc <scols_reset_iter@plt+0x143c>  // b.none
  403db0:	cmp	w27, #0x0
  403db4:	cset	w0, ne  // ne = any
  403db8:	ldp	x19, x20, [sp, #16]
  403dbc:	ldp	x21, x22, [sp, #32]
  403dc0:	ldp	x23, x24, [sp, #48]
  403dc4:	ldp	x25, x26, [sp, #64]
  403dc8:	ldp	x27, x28, [sp, #80]
  403dcc:	ldp	x29, x30, [sp], #304
  403dd0:	ret
  403dd4:	ldr	x0, [sp, #160]
  403dd8:	cbz	x0, 403db0 <scols_reset_iter@plt+0x1510>
  403ddc:	bl	4026a0 <scols_table_get_nlines@plt>
  403de0:	cbz	x0, 403db0 <scols_reset_iter@plt+0x1510>
  403de4:	ldr	x1, [sp, #152]
  403de8:	ldr	x0, [sp, #160]
  403dec:	bl	4026e0 <scols_table_set_termwidth@plt>
  403df0:	mov	w1, #0x2                   	// #2
  403df4:	ldr	x0, [sp, #160]
  403df8:	bl	402590 <scols_table_set_termforce@plt>
  403dfc:	ldr	x19, [sp, #192]
  403e00:	cbz	x19, 403e2c <scols_reset_iter@plt+0x158c>
  403e04:	mov	w2, #0x5                   	// #5
  403e08:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403e0c:	add	x1, x1, #0x270
  403e10:	mov	x0, #0x0                   	// #0
  403e14:	bl	402790 <dcgettext@plt>
  403e18:	mov	x3, x0
  403e1c:	mov	w2, #0x4                   	// #4
  403e20:	mov	x1, x19
  403e24:	add	x0, sp, #0x90
  403e28:	bl	402cc4 <scols_reset_iter@plt+0x424>
  403e2c:	ldr	x19, [sp, #200]
  403e30:	cbz	x19, 403e5c <scols_reset_iter@plt+0x15bc>
  403e34:	mov	w2, #0x5                   	// #5
  403e38:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403e3c:	add	x1, x1, #0x298
  403e40:	mov	x0, #0x0                   	// #0
  403e44:	bl	402790 <dcgettext@plt>
  403e48:	mov	x3, x0
  403e4c:	mov	w2, #0x1                   	// #1
  403e50:	mov	x1, x19
  403e54:	add	x0, sp, #0x90
  403e58:	bl	402cc4 <scols_reset_iter@plt+0x424>
  403e5c:	ldr	x19, [sp, #208]
  403e60:	cbz	x19, 403e8c <scols_reset_iter@plt+0x15ec>
  403e64:	mov	w2, #0x5                   	// #5
  403e68:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403e6c:	add	x1, x1, #0x2c0
  403e70:	mov	x0, #0x0                   	// #0
  403e74:	bl	402790 <dcgettext@plt>
  403e78:	mov	x3, x0
  403e7c:	mov	w2, #0x10                  	// #16
  403e80:	mov	x1, x19
  403e84:	add	x0, sp, #0x90
  403e88:	bl	402cc4 <scols_reset_iter@plt+0x424>
  403e8c:	ldr	x19, [sp, #216]
  403e90:	cbz	x19, 403ebc <scols_reset_iter@plt+0x161c>
  403e94:	mov	w2, #0x5                   	// #5
  403e98:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403e9c:	add	x1, x1, #0x2e8
  403ea0:	mov	x0, #0x0                   	// #0
  403ea4:	bl	402790 <dcgettext@plt>
  403ea8:	mov	x3, x0
  403eac:	mov	w2, #0x40                  	// #64
  403eb0:	mov	x1, x19
  403eb4:	add	x0, sp, #0x90
  403eb8:	bl	402cc4 <scols_reset_iter@plt+0x424>
  403ebc:	ldr	x19, [sp, #224]
  403ec0:	cbz	x19, 403eec <scols_reset_iter@plt+0x164c>
  403ec4:	mov	w2, #0x5                   	// #5
  403ec8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403ecc:	add	x1, x1, #0x310
  403ed0:	mov	x0, #0x0                   	// #0
  403ed4:	bl	402790 <dcgettext@plt>
  403ed8:	mov	x3, x0
  403edc:	mov	w2, #0x20                  	// #32
  403ee0:	mov	x1, x19
  403ee4:	add	x0, sp, #0x90
  403ee8:	bl	402cc4 <scols_reset_iter@plt+0x424>
  403eec:	ldr	x20, [sp, #208]
  403ef0:	cbz	x20, 403f9c <scols_reset_iter@plt+0x16fc>
  403ef4:	ldr	x1, [sp, #232]
  403ef8:	cbz	x1, 403f38 <scols_reset_iter@plt+0x1698>
  403efc:	add	x0, sp, #0x90
  403f00:	bl	402bd4 <scols_reset_iter@plt+0x334>
  403f04:	mov	x19, x0
  403f08:	ldr	x1, [sp, #248]
  403f0c:	add	x0, sp, #0x90
  403f10:	bl	402bd4 <scols_reset_iter@plt+0x334>
  403f14:	mov	x20, x0
  403f18:	ldr	x1, [sp, #240]
  403f1c:	add	x0, sp, #0x90
  403f20:	bl	402bd4 <scols_reset_iter@plt+0x334>
  403f24:	mov	x23, x0
  403f28:	cmp	x20, #0x0
  403f2c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  403f30:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  403f34:	b.ne	404000 <scols_reset_iter@plt+0x1760>  // b.any
  403f38:	ldr	x0, [sp, #184]
  403f3c:	cbz	x0, 404174 <scols_reset_iter@plt+0x18d4>
  403f40:	ldr	x0, [sp, #160]
  403f44:	bl	4025a0 <scols_table_get_ncols@plt>
  403f48:	mov	x19, x0
  403f4c:	ldr	x20, [sp, #184]
  403f50:	mov	w2, #0x5                   	// #5
  403f54:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  403f58:	add	x1, x1, #0x338
  403f5c:	mov	x0, #0x0                   	// #0
  403f60:	bl	402790 <dcgettext@plt>
  403f64:	mov	x1, x0
  403f68:	mov	x0, x20
  403f6c:	bl	402a20 <scols_reset_iter@plt+0x180>
  403f70:	mov	x24, x0
  403f74:	mov	x1, #0x8                   	// #8
  403f78:	mov	x0, x19
  403f7c:	bl	4024f0 <calloc@plt>
  403f80:	mov	x22, x0
  403f84:	cmp	x19, #0x0
  403f88:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  403f8c:	b.eq	4040f0 <scols_reset_iter@plt+0x1850>  // b.none
  403f90:	mov	x19, x24
  403f94:	mov	x23, #0x0                   	// #0
  403f98:	b	404108 <scols_reset_iter@plt+0x1868>
  403f9c:	mov	w0, #0x0                   	// #0
  403fa0:	bl	402780 <scols_new_iter@plt>
  403fa4:	mov	x19, x0
  403fa8:	cbnz	x0, 403fc0 <scols_reset_iter@plt+0x1720>
  403fac:	mov	w1, #0x102                 	// #258
  403fb0:	adrp	x0, 407000 <scols_reset_iter@plt+0x4760>
  403fb4:	add	x0, x0, #0x888
  403fb8:	bl	402a00 <scols_reset_iter@plt+0x160>
  403fbc:	ldr	x20, [sp, #120]
  403fc0:	add	x2, sp, #0x78
  403fc4:	mov	x1, x19
  403fc8:	ldr	x0, [sp, #160]
  403fcc:	bl	402640 <scols_table_next_column@plt>
  403fd0:	cbnz	w0, 403fe4 <scols_reset_iter@plt+0x1744>
  403fd4:	ldr	x0, [sp, #120]
  403fd8:	bl	402450 <scols_column_get_flags@plt>
  403fdc:	tbz	w0, #5, 403fbc <scols_reset_iter@plt+0x171c>
  403fe0:	b	403fc0 <scols_reset_iter@plt+0x1720>
  403fe4:	mov	x0, x19
  403fe8:	bl	402350 <scols_free_iter@plt>
  403fec:	cbz	x20, 403ef4 <scols_reset_iter@plt+0x1654>
  403ff0:	mov	w1, #0x10                  	// #16
  403ff4:	mov	x0, x20
  403ff8:	bl	402c94 <scols_reset_iter@plt+0x3f4>
  403ffc:	b	403ef4 <scols_reset_iter@plt+0x1654>
  404000:	mov	w1, #0x2                   	// #2
  404004:	mov	x0, x19
  404008:	bl	402c94 <scols_reset_iter@plt+0x3f4>
  40400c:	mov	w0, #0x0                   	// #0
  404010:	bl	402780 <scols_new_iter@plt>
  404014:	mov	x19, x0
  404018:	mov	w0, #0x0                   	// #0
  40401c:	bl	402780 <scols_new_iter@plt>
  404020:	mov	x21, x0
  404024:	cmp	x19, #0x0
  404028:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  40402c:	b.eq	404070 <scols_reset_iter@plt+0x17d0>  // b.none
  404030:	add	x2, sp, #0x70
  404034:	mov	x1, x21
  404038:	ldr	x0, [sp, #160]
  40403c:	bl	4025c0 <scols_table_next_line@plt>
  404040:	cbnz	w0, 4040dc <scols_reset_iter@plt+0x183c>
  404044:	mov	x1, x23
  404048:	ldr	x0, [sp, #112]
  40404c:	bl	4022f0 <scols_line_get_column_cell@plt>
  404050:	cbz	x0, 404030 <scols_reset_iter@plt+0x1790>
  404054:	bl	402650 <scols_cell_get_data@plt>
  404058:	mov	x22, x0
  40405c:	cbz	x0, 404030 <scols_reset_iter@plt+0x1790>
  404060:	mov	w1, #0x0                   	// #0
  404064:	mov	x0, x19
  404068:	bl	4028a0 <scols_reset_iter@plt>
  40406c:	b	40408c <scols_reset_iter@plt+0x17ec>
  404070:	mov	w1, #0x165                 	// #357
  404074:	adrp	x0, 407000 <scols_reset_iter@plt+0x4760>
  404078:	add	x0, x0, #0x888
  40407c:	bl	402a00 <scols_reset_iter@plt+0x160>
  404080:	ldr	x1, [sp, #120]
  404084:	ldr	x0, [sp, #112]
  404088:	bl	4027a0 <scols_line_add_child@plt>
  40408c:	add	x2, sp, #0x78
  404090:	mov	x1, x19
  404094:	ldr	x0, [sp, #160]
  404098:	bl	4025c0 <scols_table_next_line@plt>
  40409c:	cbnz	w0, 404030 <scols_reset_iter@plt+0x1790>
  4040a0:	mov	x1, x20
  4040a4:	ldr	x0, [sp, #120]
  4040a8:	bl	4022f0 <scols_line_get_column_cell@plt>
  4040ac:	cbz	x0, 40408c <scols_reset_iter@plt+0x17ec>
  4040b0:	bl	402650 <scols_cell_get_data@plt>
  4040b4:	mov	x1, x0
  4040b8:	cbz	x0, 40408c <scols_reset_iter@plt+0x17ec>
  4040bc:	mov	x0, x22
  4040c0:	bl	402600 <strcmp@plt>
  4040c4:	cbnz	w0, 40408c <scols_reset_iter@plt+0x17ec>
  4040c8:	ldr	x1, [sp, #112]
  4040cc:	ldr	x0, [sp, #120]
  4040d0:	bl	402670 <scols_line_is_ancestor@plt>
  4040d4:	cbnz	w0, 40408c <scols_reset_iter@plt+0x17ec>
  4040d8:	b	404080 <scols_reset_iter@plt+0x17e0>
  4040dc:	mov	x0, x19
  4040e0:	bl	402350 <scols_free_iter@plt>
  4040e4:	mov	x0, x21
  4040e8:	bl	402350 <scols_free_iter@plt>
  4040ec:	b	403f38 <scols_reset_iter@plt+0x1698>
  4040f0:	mov	x2, #0x8                   	// #8
  4040f4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4040f8:	add	x1, x1, #0x918
  4040fc:	mov	w0, #0x1                   	// #1
  404100:	bl	402860 <err@plt>
  404104:	add	x19, x19, #0x8
  404108:	cbz	x19, 404138 <scols_reset_iter@plt+0x1898>
  40410c:	ldr	x1, [x19]
  404110:	cbz	x1, 40412c <scols_reset_iter@plt+0x188c>
  404114:	add	x0, sp, #0x90
  404118:	bl	402bd4 <scols_reset_iter@plt+0x334>
  40411c:	cbz	x0, 404104 <scols_reset_iter@plt+0x1864>
  404120:	str	x0, [x22, x23, lsl #3]
  404124:	add	x23, x23, #0x1
  404128:	b	404104 <scols_reset_iter@plt+0x1864>
  40412c:	mov	x19, x1
  404130:	mov	x20, #0x0                   	// #0
  404134:	b	40413c <scols_reset_iter@plt+0x189c>
  404138:	mov	x20, #0x0                   	// #0
  40413c:	cmp	x23, x20
  404140:	b.eq	404164 <scols_reset_iter@plt+0x18c4>  // b.none
  404144:	ldr	x21, [x22, x20, lsl #3]
  404148:	mov	x2, x21
  40414c:	mov	x1, x19
  404150:	ldr	x0, [sp, #160]
  404154:	bl	4026d0 <scols_table_move_column@plt>
  404158:	add	x20, x20, #0x1
  40415c:	mov	x19, x21
  404160:	b	40413c <scols_reset_iter@plt+0x189c>
  404164:	mov	x0, x22
  404168:	bl	402660 <free@plt>
  40416c:	mov	x0, x24
  404170:	bl	406dd4 <scols_reset_iter@plt+0x4534>
  404174:	ldr	x0, [sp, #160]
  404178:	bl	402730 <scols_print_table@plt>
  40417c:	mov	w27, w0
  404180:	b	403db0 <scols_reset_iter@plt+0x1510>
  404184:	mov	x26, #0x1                   	// #1
  404188:	b	403d98 <scols_reset_iter@plt+0x14f8>
  40418c:	ldr	x0, [sp, #288]
  404190:	add	x21, x21, x0
  404194:	add	x23, x23, #0x1
  404198:	cmp	x23, x26
  40419c:	b.eq	404200 <scols_reset_iter@plt+0x1960>  // b.none
  4041a0:	ldr	x1, [x28, #864]
  4041a4:	ldr	x0, [sp, #272]
  4041a8:	ldr	x0, [x0, x22, lsl #3]
  4041ac:	bl	402770 <fputws@plt>
  4041b0:	ldr	x0, [sp, #272]
  4041b4:	ldr	x0, [x0, x22, lsl #3]
  4041b8:	bl	402b88 <scols_reset_iter@plt+0x2e8>
  4041bc:	add	x20, x20, x0
  4041c0:	add	x22, x22, x25
  4041c4:	ldr	x0, [sp, #280]
  4041c8:	cmp	x22, x0
  4041cc:	b.cs	404200 <scols_reset_iter@plt+0x1960>  // b.hs, b.nlast
  4041d0:	add	x19, x20, #0x8
  4041d4:	and	x19, x19, #0xfffffffffffffff8
  4041d8:	cmp	x19, x21
  4041dc:	b.hi	40418c <scols_reset_iter@plt+0x18ec>  // b.pmore
  4041e0:	mov	w0, w24
  4041e4:	bl	4023a0 <putwchar@plt>
  4041e8:	add	x0, x19, #0x8
  4041ec:	mov	x20, x19
  4041f0:	mov	x19, x0
  4041f4:	cmp	x0, x21
  4041f8:	b.ls	4041e0 <scols_reset_iter@plt+0x1940>  // b.plast
  4041fc:	b	40418c <scols_reset_iter@plt+0x18ec>
  404200:	mov	w0, #0xa                   	// #10
  404204:	bl	4023a0 <putwchar@plt>
  404208:	ldr	x0, [sp, #104]
  40420c:	add	x0, x0, #0x1
  404210:	str	x0, [sp, #104]
  404214:	ldr	x0, [sp, #104]
  404218:	cmp	x25, x0
  40421c:	b.eq	403db0 <scols_reset_iter@plt+0x1510>  // b.none
  404220:	ldr	x21, [sp, #288]
  404224:	cbz	x26, 404200 <scols_reset_iter@plt+0x1960>
  404228:	ldr	x22, [sp, #104]
  40422c:	mov	x23, #0x0                   	// #0
  404230:	mov	x20, #0x0                   	// #0
  404234:	b	4041a0 <scols_reset_iter@plt+0x1900>
  404238:	add	x1, x1, #0x8
  40423c:	and	x21, x1, #0xfffffffffffffff8
  404240:	str	x21, [sp, #288]
  404244:	udiv	x20, x20, x21
  404248:	ldr	x24, [sp, #272]
  40424c:	mov	x25, #0x0                   	// #0
  404250:	mov	x22, #0x0                   	// #0
  404254:	adrp	x26, 41b000 <scols_reset_iter@plt+0x18760>
  404258:	mov	w28, #0xa                   	// #10
  40425c:	mov	w23, #0x9                   	// #9
  404260:	b	4042a4 <scols_reset_iter@plt+0x1a04>
  404264:	ldr	x21, [sp, #288]
  404268:	mov	w0, w28
  40426c:	bl	4023a0 <putwchar@plt>
  404270:	mov	x25, #0x0                   	// #0
  404274:	mov	x22, #0x0                   	// #0
  404278:	b	4042a0 <scols_reset_iter@plt+0x1a00>
  40427c:	mov	w0, w23
  404280:	bl	4023a0 <putwchar@plt>
  404284:	add	x0, x19, #0x8
  404288:	mov	x22, x19
  40428c:	mov	x19, x0
  404290:	cmp	x0, x21
  404294:	b.ls	40427c <scols_reset_iter@plt+0x19dc>  // b.plast
  404298:	ldr	x0, [sp, #288]
  40429c:	add	x21, x21, x0
  4042a0:	add	x24, x24, #0x8
  4042a4:	ldr	x1, [x26, #864]
  4042a8:	ldr	x0, [x24]
  4042ac:	bl	402770 <fputws@plt>
  4042b0:	ldr	x0, [x24]
  4042b4:	bl	402b88 <scols_reset_iter@plt+0x2e8>
  4042b8:	add	x22, x22, x0
  4042bc:	ldr	x0, [sp, #280]
  4042c0:	sub	x0, x0, #0x1
  4042c4:	str	x0, [sp, #280]
  4042c8:	cbz	x0, 4042ec <scols_reset_iter@plt+0x1a4c>
  4042cc:	add	x25, x25, #0x1
  4042d0:	cmp	x20, x25
  4042d4:	b.eq	404264 <scols_reset_iter@plt+0x19c4>  // b.none
  4042d8:	add	x19, x22, #0x8
  4042dc:	and	x19, x19, #0xfffffffffffffff8
  4042e0:	cmp	x21, x19
  4042e4:	b.cs	40427c <scols_reset_iter@plt+0x19dc>  // b.hs, b.nlast
  4042e8:	b	404298 <scols_reset_iter@plt+0x19f8>
  4042ec:	cbz	x22, 403db0 <scols_reset_iter@plt+0x1510>
  4042f0:	mov	w0, #0xa                   	// #10
  4042f4:	bl	4023a0 <putwchar@plt>
  4042f8:	b	403db0 <scols_reset_iter@plt+0x1510>
  4042fc:	stp	x29, x30, [sp, #-64]!
  404300:	mov	x29, sp
  404304:	stp	x19, x20, [sp, #16]
  404308:	mov	x19, x0
  40430c:	ldr	w0, [x0]
  404310:	cbz	w0, 404370 <scols_reset_iter@plt+0x1ad0>
  404314:	stp	x21, x22, [sp, #32]
  404318:	str	x23, [sp, #48]
  40431c:	mov	x21, x1
  404320:	mov	x20, #0x0                   	// #0
  404324:	mov	w23, #0xfffd                	// #65533
  404328:	mov	w22, #0x1                   	// #1
  40432c:	b	404348 <scols_reset_iter@plt+0x1aa8>
  404330:	add	x2, x20, w0, sxtw
  404334:	cmp	x2, x21
  404338:	b.hi	404378 <scols_reset_iter@plt+0x1ad8>  // b.pmore
  40433c:	ldr	w0, [x19, #4]!
  404340:	cbz	w0, 404360 <scols_reset_iter@plt+0x1ac0>
  404344:	mov	x20, x2
  404348:	bl	402440 <wcwidth@plt>
  40434c:	cmn	w0, #0x1
  404350:	b.ne	404330 <scols_reset_iter@plt+0x1a90>  // b.any
  404354:	str	w23, [x19]
  404358:	mov	w0, w22
  40435c:	b	404330 <scols_reset_iter@plt+0x1a90>
  404360:	mov	x20, x2
  404364:	ldp	x21, x22, [sp, #32]
  404368:	ldr	x23, [sp, #48]
  40436c:	b	404380 <scols_reset_iter@plt+0x1ae0>
  404370:	mov	x20, #0x0                   	// #0
  404374:	b	404380 <scols_reset_iter@plt+0x1ae0>
  404378:	ldp	x21, x22, [sp, #32]
  40437c:	ldr	x23, [sp, #48]
  404380:	str	wzr, [x19]
  404384:	mov	x0, x20
  404388:	ldp	x19, x20, [sp, #16]
  40438c:	ldp	x29, x30, [sp], #64
  404390:	ret
  404394:	stp	x29, x30, [sp, #-112]!
  404398:	mov	x29, sp
  40439c:	stp	x23, x24, [sp, #48]
  4043a0:	stp	x25, x26, [sp, #64]
  4043a4:	mov	x25, x2
  4043a8:	str	xzr, [sp, #104]
  4043ac:	cbz	x0, 404508 <scols_reset_iter@plt+0x1c68>
  4043b0:	stp	x19, x20, [sp, #16]
  4043b4:	stp	x21, x22, [sp, #32]
  4043b8:	mov	x19, x0
  4043bc:	ldrsb	w20, [x0]
  4043c0:	cmp	w20, #0x0
  4043c4:	cset	w0, ne  // ne = any
  4043c8:	cmp	x1, #0x0
  4043cc:	sub	x22, x1, #0x1
  4043d0:	add	x22, x19, x22
  4043d4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4043d8:	csel	x22, x22, x19, ne  // ne = any
  4043dc:	cmp	w0, #0x0
  4043e0:	mov	x24, #0x0                   	// #0
  4043e4:	mov	x23, #0x0                   	// #0
  4043e8:	ccmp	x22, x19, #0x0, ne  // ne = any
  4043ec:	b.cc	404524 <scols_reset_iter@plt+0x1c84>  // b.lo, b.ul, b.last
  4043f0:	stp	x27, x28, [sp, #80]
  4043f4:	add	x27, sp, #0x68
  4043f8:	add	x26, sp, #0x64
  4043fc:	mov	x28, #0x1                   	// #1
  404400:	b	40442c <scols_reset_iter@plt+0x1b8c>
  404404:	ldrsb	w0, [x19, #1]
  404408:	cmp	w0, #0x78
  40440c:	b.ne	404438 <scols_reset_iter@plt+0x1b98>  // b.any
  404410:	add	x23, x23, #0x4
  404414:	add	x24, x24, #0x4
  404418:	add	x19, x19, #0x1
  40441c:	ldrsb	w20, [x19]
  404420:	cmp	w20, #0x0
  404424:	ccmp	x22, x19, #0x0, ne  // ne = any
  404428:	b.cc	4044e0 <scols_reset_iter@plt+0x1c40>  // b.lo, b.ul, b.last
  40442c:	cmp	w20, #0x5c
  404430:	ccmp	x22, x19, #0x0, eq  // eq = none
  404434:	b.hi	404404 <scols_reset_iter@plt+0x1b64>  // b.pmore
  404438:	bl	402620 <__ctype_b_loc@plt>
  40443c:	mov	x21, x0
  404440:	and	x20, x20, #0xff
  404444:	ldr	x0, [x0]
  404448:	ldrh	w0, [x0, x20, lsl #1]
  40444c:	tbnz	w0, #1, 404410 <scols_reset_iter@plt+0x1b70>
  404450:	bl	402680 <__ctype_get_mb_cur_max@plt>
  404454:	mov	x3, x27
  404458:	mov	x2, x0
  40445c:	mov	x1, x19
  404460:	mov	x0, x26
  404464:	bl	402250 <mbrtowc@plt>
  404468:	mov	x20, x0
  40446c:	cbz	x0, 404514 <scols_reset_iter@plt+0x1c74>
  404470:	cmn	x0, #0x3
  404474:	b.ls	4044a8 <scols_reset_iter@plt+0x1c08>  // b.plast
  404478:	ldrb	w1, [x19]
  40447c:	ldr	x0, [x21]
  404480:	ldrh	w0, [x0, x1, lsl #1]
  404484:	tbz	w0, #14, 404498 <scols_reset_iter@plt+0x1bf8>
  404488:	add	x23, x23, #0x1
  40448c:	add	x24, x24, #0x1
  404490:	mov	x20, x28
  404494:	b	4044c4 <scols_reset_iter@plt+0x1c24>
  404498:	add	x23, x23, #0x4
  40449c:	add	x24, x24, #0x4
  4044a0:	mov	x20, x28
  4044a4:	b	4044c4 <scols_reset_iter@plt+0x1c24>
  4044a8:	ldr	w21, [sp, #100]
  4044ac:	mov	w0, w21
  4044b0:	bl	4027c0 <iswprint@plt>
  4044b4:	cbnz	w0, 4044cc <scols_reset_iter@plt+0x1c2c>
  4044b8:	lsl	x0, x20, #2
  4044bc:	add	x23, x23, x0
  4044c0:	add	x24, x24, x0
  4044c4:	add	x19, x19, x20
  4044c8:	b	40441c <scols_reset_iter@plt+0x1b7c>
  4044cc:	mov	w0, w21
  4044d0:	bl	402440 <wcwidth@plt>
  4044d4:	add	x23, x23, w0, sxtw
  4044d8:	add	x24, x24, x20
  4044dc:	b	4044c4 <scols_reset_iter@plt+0x1c24>
  4044e0:	ldp	x19, x20, [sp, #16]
  4044e4:	ldp	x21, x22, [sp, #32]
  4044e8:	ldp	x27, x28, [sp, #80]
  4044ec:	cbz	x25, 4044f4 <scols_reset_iter@plt+0x1c54>
  4044f0:	str	x24, [x25]
  4044f4:	mov	x0, x23
  4044f8:	ldp	x23, x24, [sp, #48]
  4044fc:	ldp	x25, x26, [sp, #64]
  404500:	ldp	x29, x30, [sp], #112
  404504:	ret
  404508:	mov	x24, #0x0                   	// #0
  40450c:	mov	x23, #0x0                   	// #0
  404510:	b	4044ec <scols_reset_iter@plt+0x1c4c>
  404514:	ldp	x19, x20, [sp, #16]
  404518:	ldp	x21, x22, [sp, #32]
  40451c:	ldp	x27, x28, [sp, #80]
  404520:	b	4044ec <scols_reset_iter@plt+0x1c4c>
  404524:	mov	x24, #0x0                   	// #0
  404528:	mov	x23, #0x0                   	// #0
  40452c:	ldp	x19, x20, [sp, #16]
  404530:	ldp	x21, x22, [sp, #32]
  404534:	b	4044ec <scols_reset_iter@plt+0x1c4c>
  404538:	cbz	x0, 404580 <scols_reset_iter@plt+0x1ce0>
  40453c:	stp	x29, x30, [sp, #-32]!
  404540:	mov	x29, sp
  404544:	str	x19, [sp, #16]
  404548:	mov	x19, x0
  40454c:	ldrsb	w1, [x0]
  404550:	mov	x0, #0x0                   	// #0
  404554:	cbnz	w1, 404564 <scols_reset_iter@plt+0x1cc4>
  404558:	ldr	x19, [sp, #16]
  40455c:	ldp	x29, x30, [sp], #32
  404560:	ret
  404564:	mov	x0, x19
  404568:	bl	402290 <strlen@plt>
  40456c:	mov	x2, #0x0                   	// #0
  404570:	mov	x1, x0
  404574:	mov	x0, x19
  404578:	bl	404394 <scols_reset_iter@plt+0x1af4>
  40457c:	b	404558 <scols_reset_iter@plt+0x1cb8>
  404580:	mov	x0, #0x0                   	// #0
  404584:	ret
  404588:	stp	x29, x30, [sp, #-128]!
  40458c:	mov	x29, sp
  404590:	stp	x19, x20, [sp, #16]
  404594:	mov	x20, x0
  404598:	str	x2, [sp, #96]
  40459c:	cbz	x0, 40477c <scols_reset_iter@plt+0x1edc>
  4045a0:	stp	x21, x22, [sp, #32]
  4045a4:	stp	x23, x24, [sp, #48]
  4045a8:	stp	x25, x26, [sp, #64]
  4045ac:	stp	x27, x28, [sp, #80]
  4045b0:	mov	x21, x1
  4045b4:	mov	x19, x2
  4045b8:	mov	x22, x3
  4045bc:	bl	402290 <strlen@plt>
  4045c0:	str	xzr, [sp, #120]
  4045c4:	cmp	x0, #0x0
  4045c8:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  4045cc:	b.eq	404788 <scols_reset_iter@plt+0x1ee8>  // b.none
  4045d0:	str	xzr, [x21]
  4045d4:	ldr	x19, [sp, #96]
  4045d8:	adrp	x24, 408000 <scols_reset_iter@plt+0x5760>
  4045dc:	add	x24, x24, #0x8c8
  4045e0:	add	x28, sp, #0x78
  4045e4:	add	x0, sp, #0x74
  4045e8:	str	x0, [sp, #104]
  4045ec:	b	404634 <scols_reset_iter@plt+0x1d94>
  4045f0:	cmp	w23, #0x5c
  4045f4:	b.eq	40465c <scols_reset_iter@plt+0x1dbc>  // b.none
  4045f8:	bl	402620 <__ctype_b_loc@plt>
  4045fc:	mov	x25, x0
  404600:	and	x0, x23, #0xff
  404604:	ldr	x1, [x25]
  404608:	ldrh	w0, [x1, x0, lsl #1]
  40460c:	tbz	w0, #1, 40466c <scols_reset_iter@plt+0x1dcc>
  404610:	and	w2, w23, #0xff
  404614:	mov	x1, x24
  404618:	mov	x0, x19
  40461c:	bl	402370 <sprintf@plt>
  404620:	add	x19, x19, #0x4
  404624:	ldr	x0, [x21]
  404628:	add	x0, x0, #0x4
  40462c:	str	x0, [x21]
  404630:	add	x20, x20, #0x1
  404634:	ldrsb	w23, [x20]
  404638:	cbz	w23, 404764 <scols_reset_iter@plt+0x1ec4>
  40463c:	cbz	x22, 4045f0 <scols_reset_iter@plt+0x1d50>
  404640:	mov	w1, w23
  404644:	mov	x0, x22
  404648:	bl	402710 <strchr@plt>
  40464c:	cbz	x0, 4045f0 <scols_reset_iter@plt+0x1d50>
  404650:	add	x20, x20, #0x1
  404654:	strb	w23, [x19], #1
  404658:	b	404634 <scols_reset_iter@plt+0x1d94>
  40465c:	ldrsb	w0, [x20, #1]
  404660:	cmp	w0, #0x78
  404664:	b.ne	4045f8 <scols_reset_iter@plt+0x1d58>  // b.any
  404668:	b	404610 <scols_reset_iter@plt+0x1d70>
  40466c:	bl	402680 <__ctype_get_mb_cur_max@plt>
  404670:	mov	x3, x28
  404674:	mov	x2, x0
  404678:	mov	x1, x20
  40467c:	ldr	x0, [sp, #104]
  404680:	bl	402250 <mbrtowc@plt>
  404684:	mov	x23, x0
  404688:	cbz	x0, 404764 <scols_reset_iter@plt+0x1ec4>
  40468c:	cmn	x0, #0x3
  404690:	b.ls	4046ec <scols_reset_iter@plt+0x1e4c>  // b.plast
  404694:	ldrb	w2, [x20]
  404698:	and	x1, x2, #0xff
  40469c:	ldr	x0, [x25]
  4046a0:	ldrh	w0, [x0, x1, lsl #1]
  4046a4:	tbz	w0, #14, 4046c8 <scols_reset_iter@plt+0x1e28>
  4046a8:	ldr	x0, [x21]
  4046ac:	add	x0, x0, #0x1
  4046b0:	str	x0, [x21]
  4046b4:	ldrsb	w0, [x20]
  4046b8:	strb	w0, [x19], #1
  4046bc:	mov	x23, #0x1                   	// #1
  4046c0:	add	x20, x20, x23
  4046c4:	b	404634 <scols_reset_iter@plt+0x1d94>
  4046c8:	mov	x1, x24
  4046cc:	mov	x0, x19
  4046d0:	bl	402370 <sprintf@plt>
  4046d4:	add	x19, x19, #0x4
  4046d8:	ldr	x0, [x21]
  4046dc:	add	x0, x0, #0x4
  4046e0:	str	x0, [x21]
  4046e4:	mov	x23, #0x1                   	// #1
  4046e8:	b	4046c0 <scols_reset_iter@plt+0x1e20>
  4046ec:	ldr	w25, [sp, #116]
  4046f0:	mov	w0, w25
  4046f4:	bl	4027c0 <iswprint@plt>
  4046f8:	cbz	w0, 404728 <scols_reset_iter@plt+0x1e88>
  4046fc:	mov	x2, x23
  404700:	mov	x1, x20
  404704:	mov	x0, x19
  404708:	bl	402260 <memcpy@plt>
  40470c:	add	x19, x19, x23
  404710:	mov	w0, w25
  404714:	bl	402440 <wcwidth@plt>
  404718:	ldr	x1, [x21]
  40471c:	add	x0, x1, w0, sxtw
  404720:	str	x0, [x21]
  404724:	b	4046c0 <scols_reset_iter@plt+0x1e20>
  404728:	mov	x26, x20
  40472c:	add	x27, x23, x20
  404730:	mov	x25, x19
  404734:	ldrb	w2, [x26], #1
  404738:	mov	x1, x24
  40473c:	mov	x0, x25
  404740:	bl	402370 <sprintf@plt>
  404744:	add	x25, x25, #0x4
  404748:	ldr	x0, [x21]
  40474c:	add	x0, x0, #0x4
  404750:	str	x0, [x21]
  404754:	cmp	x27, x26
  404758:	b.ne	404734 <scols_reset_iter@plt+0x1e94>  // b.any
  40475c:	add	x19, x19, x23, lsl #2
  404760:	b	4046c0 <scols_reset_iter@plt+0x1e20>
  404764:	strb	wzr, [x19]
  404768:	ldr	x0, [sp, #96]
  40476c:	ldp	x21, x22, [sp, #32]
  404770:	ldp	x23, x24, [sp, #48]
  404774:	ldp	x25, x26, [sp, #64]
  404778:	ldp	x27, x28, [sp, #80]
  40477c:	ldp	x19, x20, [sp, #16]
  404780:	ldp	x29, x30, [sp], #128
  404784:	ret
  404788:	mov	x0, #0x0                   	// #0
  40478c:	ldp	x21, x22, [sp, #32]
  404790:	ldp	x23, x24, [sp, #48]
  404794:	ldp	x25, x26, [sp, #64]
  404798:	ldp	x27, x28, [sp, #80]
  40479c:	b	40477c <scols_reset_iter@plt+0x1edc>
  4047a0:	stp	x29, x30, [sp, #-112]!
  4047a4:	mov	x29, sp
  4047a8:	stp	x19, x20, [sp, #16]
  4047ac:	mov	x20, x0
  4047b0:	cbz	x0, 404908 <scols_reset_iter@plt+0x2068>
  4047b4:	stp	x21, x22, [sp, #32]
  4047b8:	stp	x23, x24, [sp, #48]
  4047bc:	stp	x25, x26, [sp, #64]
  4047c0:	str	x27, [sp, #80]
  4047c4:	mov	x22, x1
  4047c8:	mov	x25, x2
  4047cc:	bl	402290 <strlen@plt>
  4047d0:	str	xzr, [sp, #104]
  4047d4:	cmp	x0, #0x0
  4047d8:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  4047dc:	b.eq	404914 <scols_reset_iter@plt+0x2074>  // b.none
  4047e0:	str	xzr, [x22]
  4047e4:	mov	x21, x25
  4047e8:	add	x24, sp, #0x68
  4047ec:	add	x23, sp, #0x64
  4047f0:	adrp	x26, 408000 <scols_reset_iter@plt+0x5760>
  4047f4:	add	x26, x26, #0x8c8
  4047f8:	mov	w27, #0x5c                  	// #92
  4047fc:	b	404868 <scols_reset_iter@plt+0x1fc8>
  404800:	mov	x1, x26
  404804:	mov	x0, x21
  404808:	bl	402370 <sprintf@plt>
  40480c:	add	x21, x21, #0x4
  404810:	ldr	x0, [x22]
  404814:	add	x0, x0, #0x4
  404818:	str	x0, [x22]
  40481c:	mov	x19, #0x1                   	// #1
  404820:	b	404864 <scols_reset_iter@plt+0x1fc4>
  404824:	ldrsb	w0, [x20]
  404828:	cmp	w0, #0x5c
  40482c:	b.ne	40483c <scols_reset_iter@plt+0x1f9c>  // b.any
  404830:	ldrsb	w0, [x20, #1]
  404834:	cmp	w0, #0x78
  404838:	b.eq	4048cc <scols_reset_iter@plt+0x202c>  // b.none
  40483c:	mov	x2, x19
  404840:	mov	x1, x20
  404844:	mov	x0, x21
  404848:	bl	402260 <memcpy@plt>
  40484c:	add	x21, x21, x19
  404850:	ldr	w0, [sp, #100]
  404854:	bl	402440 <wcwidth@plt>
  404858:	ldr	x1, [x22]
  40485c:	add	x0, x1, w0, sxtw
  404860:	str	x0, [x22]
  404864:	add	x20, x20, x19
  404868:	ldrsb	w1, [x20]
  40486c:	cbz	w1, 4048f0 <scols_reset_iter@plt+0x2050>
  404870:	bl	402680 <__ctype_get_mb_cur_max@plt>
  404874:	mov	x3, x24
  404878:	mov	x2, x0
  40487c:	mov	x1, x20
  404880:	mov	x0, x23
  404884:	bl	402250 <mbrtowc@plt>
  404888:	mov	x19, x0
  40488c:	cbz	x0, 4048f0 <scols_reset_iter@plt+0x2050>
  404890:	cmn	x0, #0x3
  404894:	b.ls	404824 <scols_reset_iter@plt+0x1f84>  // b.plast
  404898:	bl	402620 <__ctype_b_loc@plt>
  40489c:	ldrb	w2, [x20]
  4048a0:	and	x1, x2, #0xff
  4048a4:	ldr	x0, [x0]
  4048a8:	ldrh	w0, [x0, x1, lsl #1]
  4048ac:	tbz	w0, #14, 404800 <scols_reset_iter@plt+0x1f60>
  4048b0:	ldr	x0, [x22]
  4048b4:	add	x0, x0, #0x1
  4048b8:	str	x0, [x22]
  4048bc:	ldrsb	w0, [x20]
  4048c0:	strb	w0, [x21], #1
  4048c4:	mov	x19, #0x1                   	// #1
  4048c8:	b	404864 <scols_reset_iter@plt+0x1fc4>
  4048cc:	mov	w2, w27
  4048d0:	mov	x1, x26
  4048d4:	mov	x0, x21
  4048d8:	bl	402370 <sprintf@plt>
  4048dc:	add	x21, x21, #0x4
  4048e0:	ldr	x0, [x22]
  4048e4:	add	x0, x0, #0x4
  4048e8:	str	x0, [x22]
  4048ec:	b	404864 <scols_reset_iter@plt+0x1fc4>
  4048f0:	strb	wzr, [x21]
  4048f4:	mov	x0, x25
  4048f8:	ldp	x21, x22, [sp, #32]
  4048fc:	ldp	x23, x24, [sp, #48]
  404900:	ldp	x25, x26, [sp, #64]
  404904:	ldr	x27, [sp, #80]
  404908:	ldp	x19, x20, [sp, #16]
  40490c:	ldp	x29, x30, [sp], #112
  404910:	ret
  404914:	mov	x0, #0x0                   	// #0
  404918:	ldp	x21, x22, [sp, #32]
  40491c:	ldp	x23, x24, [sp, #48]
  404920:	ldp	x25, x26, [sp, #64]
  404924:	ldr	x27, [sp, #80]
  404928:	b	404908 <scols_reset_iter@plt+0x2068>
  40492c:	lsl	x0, x0, #2
  404930:	add	x0, x0, #0x1
  404934:	ret
  404938:	stp	x29, x30, [sp, #-48]!
  40493c:	mov	x29, sp
  404940:	stp	x19, x20, [sp, #16]
  404944:	mov	x19, x0
  404948:	cbz	x0, 404994 <scols_reset_iter@plt+0x20f4>
  40494c:	mov	x20, x1
  404950:	bl	402290 <strlen@plt>
  404954:	mov	x2, x0
  404958:	mov	x0, #0x0                   	// #0
  40495c:	cbz	x2, 404994 <scols_reset_iter@plt+0x20f4>
  404960:	str	x21, [sp, #32]
  404964:	mov	x0, x2
  404968:	bl	40492c <scols_reset_iter@plt+0x208c>
  40496c:	bl	402430 <malloc@plt>
  404970:	mov	x21, x0
  404974:	cbz	x0, 4049a0 <scols_reset_iter@plt+0x2100>
  404978:	mov	x3, #0x0                   	// #0
  40497c:	mov	x2, x0
  404980:	mov	x1, x20
  404984:	mov	x0, x19
  404988:	bl	404588 <scols_reset_iter@plt+0x1ce8>
  40498c:	cbz	x0, 4049a0 <scols_reset_iter@plt+0x2100>
  404990:	ldr	x21, [sp, #32]
  404994:	ldp	x19, x20, [sp, #16]
  404998:	ldp	x29, x30, [sp], #48
  40499c:	ret
  4049a0:	mov	x0, x21
  4049a4:	bl	402660 <free@plt>
  4049a8:	mov	x0, #0x0                   	// #0
  4049ac:	ldr	x21, [sp, #32]
  4049b0:	b	404994 <scols_reset_iter@plt+0x20f4>
  4049b4:	stp	x29, x30, [sp, #-48]!
  4049b8:	mov	x29, sp
  4049bc:	stp	x19, x20, [sp, #16]
  4049c0:	mov	x19, x0
  4049c4:	cbz	x0, 404a0c <scols_reset_iter@plt+0x216c>
  4049c8:	mov	x20, x1
  4049cc:	bl	402290 <strlen@plt>
  4049d0:	mov	x2, x0
  4049d4:	mov	x0, #0x0                   	// #0
  4049d8:	cbz	x2, 404a0c <scols_reset_iter@plt+0x216c>
  4049dc:	str	x21, [sp, #32]
  4049e0:	mov	x0, x2
  4049e4:	bl	40492c <scols_reset_iter@plt+0x208c>
  4049e8:	bl	402430 <malloc@plt>
  4049ec:	mov	x21, x0
  4049f0:	cbz	x0, 404a18 <scols_reset_iter@plt+0x2178>
  4049f4:	mov	x2, x0
  4049f8:	mov	x1, x20
  4049fc:	mov	x0, x19
  404a00:	bl	4047a0 <scols_reset_iter@plt+0x1f00>
  404a04:	cbz	x0, 404a18 <scols_reset_iter@plt+0x2178>
  404a08:	ldr	x21, [sp, #32]
  404a0c:	ldp	x19, x20, [sp, #16]
  404a10:	ldp	x29, x30, [sp], #48
  404a14:	ret
  404a18:	mov	x0, x21
  404a1c:	bl	402660 <free@plt>
  404a20:	mov	x0, #0x0                   	// #0
  404a24:	ldr	x21, [sp, #32]
  404a28:	b	404a0c <scols_reset_iter@plt+0x216c>
  404a2c:	stp	x29, x30, [sp, #-64]!
  404a30:	mov	x29, sp
  404a34:	stp	x19, x20, [sp, #16]
  404a38:	stp	x21, x22, [sp, #32]
  404a3c:	str	x23, [sp, #48]
  404a40:	mov	x20, x0
  404a44:	mov	x23, x1
  404a48:	bl	402290 <strlen@plt>
  404a4c:	mov	x19, x0
  404a50:	mov	x2, #0x0                   	// #0
  404a54:	mov	x1, x20
  404a58:	mov	x0, #0x0                   	// #0
  404a5c:	bl	4022b0 <mbstowcs@plt>
  404a60:	cmn	x0, #0x1
  404a64:	b.eq	404ac8 <scols_reset_iter@plt+0x2228>  // b.none
  404a68:	mov	x22, x0
  404a6c:	add	x1, x0, #0x1
  404a70:	lsl	x1, x1, #2
  404a74:	mov	x0, #0x1                   	// #1
  404a78:	bl	4024f0 <calloc@plt>
  404a7c:	mov	x21, x0
  404a80:	cbz	x0, 404acc <scols_reset_iter@plt+0x222c>
  404a84:	mov	x2, x22
  404a88:	mov	x1, x20
  404a8c:	bl	4022b0 <mbstowcs@plt>
  404a90:	cbz	x0, 404acc <scols_reset_iter@plt+0x222c>
  404a94:	ldr	x1, [x23]
  404a98:	mov	x0, x21
  404a9c:	bl	4042fc <scols_reset_iter@plt+0x1a5c>
  404aa0:	str	x0, [x23]
  404aa4:	mov	x2, x19
  404aa8:	mov	x1, x21
  404aac:	mov	x0, x20
  404ab0:	bl	402760 <wcstombs@plt>
  404ab4:	mov	x19, x0
  404ab8:	mov	x0, x21
  404abc:	bl	402660 <free@plt>
  404ac0:	tbnz	x19, #63, 404ad8 <scols_reset_iter@plt+0x2238>
  404ac4:	b	404ad4 <scols_reset_iter@plt+0x2234>
  404ac8:	mov	x21, #0x0                   	// #0
  404acc:	mov	x0, x21
  404ad0:	bl	402660 <free@plt>
  404ad4:	strb	wzr, [x20, x19]
  404ad8:	mov	x0, x19
  404adc:	ldp	x19, x20, [sp, #16]
  404ae0:	ldp	x21, x22, [sp, #32]
  404ae4:	ldr	x23, [sp, #48]
  404ae8:	ldp	x29, x30, [sp], #64
  404aec:	ret
  404af0:	stp	x29, x30, [sp, #-128]!
  404af4:	mov	x29, sp
  404af8:	stp	x19, x20, [sp, #16]
  404afc:	stp	x21, x22, [sp, #32]
  404b00:	stp	x23, x24, [sp, #48]
  404b04:	stp	x25, x26, [sp, #64]
  404b08:	stp	x27, x28, [sp, #80]
  404b0c:	mov	x21, x0
  404b10:	str	x0, [sp, #104]
  404b14:	mov	x22, x1
  404b18:	mov	x19, x2
  404b1c:	mov	x23, x3
  404b20:	mov	w26, w4
  404b24:	mov	w27, w5
  404b28:	str	w5, [sp, #112]
  404b2c:	mov	w24, w6
  404b30:	bl	402290 <strlen@plt>
  404b34:	mov	x20, x0
  404b38:	bl	402680 <__ctype_get_mb_cur_max@plt>
  404b3c:	mov	x25, #0x0                   	// #0
  404b40:	cmp	x0, #0x1
  404b44:	b.hi	404b68 <scols_reset_iter@plt+0x22c8>  // b.pmore
  404b48:	mov	x21, x20
  404b4c:	mov	x28, #0x0                   	// #0
  404b50:	ldr	x0, [x23]
  404b54:	cmp	x0, x21
  404b58:	b.cs	404c94 <scols_reset_iter@plt+0x23f4>  // b.hs, b.nlast
  404b5c:	mov	x20, x0
  404b60:	mov	x27, #0x0                   	// #0
  404b64:	b	404ca4 <scols_reset_iter@plt+0x2404>
  404b68:	mov	x2, #0x0                   	// #0
  404b6c:	mov	x1, x21
  404b70:	mov	x0, #0x0                   	// #0
  404b74:	bl	4022b0 <mbstowcs@plt>
  404b78:	mov	x21, x0
  404b7c:	cmn	x0, #0x1
  404b80:	b.ne	404ba0 <scols_reset_iter@plt+0x2300>  // b.any
  404b84:	mov	x0, x27
  404b88:	mov	x28, #0x0                   	// #0
  404b8c:	tbz	w0, #0, 404dc8 <scols_reset_iter@plt+0x2528>
  404b90:	mov	x21, x20
  404b94:	mov	x25, #0x0                   	// #0
  404b98:	mov	x28, #0x0                   	// #0
  404b9c:	b	404b50 <scols_reset_iter@plt+0x22b0>
  404ba0:	add	x27, x0, #0x1
  404ba4:	lsl	x28, x27, #2
  404ba8:	mov	x0, x28
  404bac:	bl	402430 <malloc@plt>
  404bb0:	mov	x25, x0
  404bb4:	cbz	x0, 404be8 <scols_reset_iter@plt+0x2348>
  404bb8:	mov	x2, x27
  404bbc:	ldr	x1, [sp, #104]
  404bc0:	bl	4022b0 <mbstowcs@plt>
  404bc4:	cbz	x0, 404b48 <scols_reset_iter@plt+0x22a8>
  404bc8:	add	x28, x25, x28
  404bcc:	stur	wzr, [x28, #-4]
  404bd0:	ldr	w0, [x25]
  404bd4:	cbz	w0, 404c28 <scols_reset_iter@plt+0x2388>
  404bd8:	mov	x27, x25
  404bdc:	str	wzr, [sp, #124]
  404be0:	mov	w28, #0xfffd                	// #65533
  404be4:	b	404c10 <scols_reset_iter@plt+0x2370>
  404be8:	ldr	x0, [sp, #112]
  404bec:	tbz	w0, #0, 404bfc <scols_reset_iter@plt+0x235c>
  404bf0:	mov	x21, x20
  404bf4:	mov	x28, x25
  404bf8:	b	404b50 <scols_reset_iter@plt+0x22b0>
  404bfc:	mov	x28, x25
  404c00:	mov	x21, #0xffffffffffffffff    	// #-1
  404c04:	b	404dc8 <scols_reset_iter@plt+0x2528>
  404c08:	ldr	w0, [x27, #4]!
  404c0c:	cbz	w0, 404c2c <scols_reset_iter@plt+0x238c>
  404c10:	bl	4027c0 <iswprint@plt>
  404c14:	cbnz	w0, 404c08 <scols_reset_iter@plt+0x2368>
  404c18:	str	w28, [x27]
  404c1c:	mov	w0, #0x1                   	// #1
  404c20:	str	w0, [sp, #124]
  404c24:	b	404c08 <scols_reset_iter@plt+0x2368>
  404c28:	str	wzr, [sp, #124]
  404c2c:	mov	x28, #0x0                   	// #0
  404c30:	mov	w27, #0x0                   	// #0
  404c34:	ldr	w0, [x25, x28, lsl #2]
  404c38:	cbz	w0, 404c74 <scols_reset_iter@plt+0x23d4>
  404c3c:	bl	402440 <wcwidth@plt>
  404c40:	cmn	w0, #0x1
  404c44:	b.eq	404c70 <scols_reset_iter@plt+0x23d0>  // b.none
  404c48:	mov	w1, #0x7fffffff            	// #2147483647
  404c4c:	sub	w1, w1, w0
  404c50:	cmp	w1, w27
  404c54:	b.lt	404cdc <scols_reset_iter@plt+0x243c>  // b.tstop
  404c58:	add	w27, w27, w0
  404c5c:	add	x0, x28, #0x1
  404c60:	cmp	x21, x28
  404c64:	b.eq	404c74 <scols_reset_iter@plt+0x23d4>  // b.none
  404c68:	mov	x28, x0
  404c6c:	b	404c34 <scols_reset_iter@plt+0x2394>
  404c70:	mov	w27, w0
  404c74:	sxtw	x21, w27
  404c78:	ldr	w0, [sp, #124]
  404c7c:	cbnz	w0, 404ce4 <scols_reset_iter@plt+0x2444>
  404c80:	ldr	x0, [x23]
  404c84:	add	x27, x20, #0x1
  404c88:	cmp	x0, x21
  404c8c:	b.cc	404cf8 <scols_reset_iter@plt+0x2458>  // b.lo, b.ul, b.last
  404c90:	mov	x28, #0x0                   	// #0
  404c94:	cmp	x21, x0
  404c98:	b.cs	404d44 <scols_reset_iter@plt+0x24a4>  // b.hs, b.nlast
  404c9c:	sub	x27, x0, x21
  404ca0:	mov	x0, x21
  404ca4:	str	x0, [x23]
  404ca8:	add	x21, x27, x20
  404cac:	cbz	x19, 404dc8 <scols_reset_iter@plt+0x2528>
  404cb0:	sub	x19, x19, #0x1
  404cb4:	add	x19, x22, x19
  404cb8:	cmp	w26, #0x1
  404cbc:	b.eq	404d5c <scols_reset_iter@plt+0x24bc>  // b.none
  404cc0:	cmp	w26, #0x2
  404cc4:	b.ne	404d50 <scols_reset_iter@plt+0x24b0>  // b.any
  404cc8:	lsr	x0, x27, #1
  404ccc:	and	x27, x27, #0x1
  404cd0:	add	x1, x27, x0
  404cd4:	mov	x27, x0
  404cd8:	b	404d64 <scols_reset_iter@plt+0x24c4>
  404cdc:	mov	w27, #0xffffffff            	// #-1
  404ce0:	b	404c74 <scols_reset_iter@plt+0x23d4>
  404ce4:	mov	x2, #0x0                   	// #0
  404ce8:	mov	x1, x25
  404cec:	mov	x0, #0x0                   	// #0
  404cf0:	bl	402760 <wcstombs@plt>
  404cf4:	add	x27, x0, #0x1
  404cf8:	mov	x0, x27
  404cfc:	bl	402430 <malloc@plt>
  404d00:	mov	x28, x0
  404d04:	cbz	x0, 404d34 <scols_reset_iter@plt+0x2494>
  404d08:	ldr	x1, [x23]
  404d0c:	mov	x0, x25
  404d10:	bl	4042fc <scols_reset_iter@plt+0x1a5c>
  404d14:	mov	x21, x0
  404d18:	mov	x2, x27
  404d1c:	mov	x1, x25
  404d20:	mov	x0, x28
  404d24:	bl	402760 <wcstombs@plt>
  404d28:	mov	x20, x0
  404d2c:	str	x28, [sp, #104]
  404d30:	b	404b50 <scols_reset_iter@plt+0x22b0>
  404d34:	ldr	x0, [sp, #112]
  404d38:	tbnz	w0, #0, 404b50 <scols_reset_iter@plt+0x22b0>
  404d3c:	mov	x21, #0xffffffffffffffff    	// #-1
  404d40:	b	404dc8 <scols_reset_iter@plt+0x2528>
  404d44:	mov	x0, x21
  404d48:	mov	x27, #0x0                   	// #0
  404d4c:	b	404ca4 <scols_reset_iter@plt+0x2404>
  404d50:	mov	x0, x22
  404d54:	cbz	w26, 404d88 <scols_reset_iter@plt+0x24e8>
  404d58:	bl	402580 <abort@plt>
  404d5c:	mov	x1, x27
  404d60:	mov	x27, #0x0                   	// #0
  404d64:	cmp	x1, #0x0
  404d68:	ccmp	x22, x19, #0x2, ne  // ne = any
  404d6c:	b.cs	404df8 <scols_reset_iter@plt+0x2558>  // b.hs, b.nlast
  404d70:	mov	x0, x22
  404d74:	strb	w24, [x0], #1
  404d78:	sub	x2, x22, x0
  404d7c:	cmn	x2, x1
  404d80:	ccmp	x19, x0, #0x0, ne  // ne = any
  404d84:	b.hi	404d74 <scols_reset_iter@plt+0x24d4>  // b.pmore
  404d88:	strb	wzr, [x0]
  404d8c:	sub	x2, x19, x0
  404d90:	cmp	x2, x20
  404d94:	csel	x2, x2, x20, ls  // ls = plast
  404d98:	ldr	x1, [sp, #104]
  404d9c:	bl	402690 <mempcpy@plt>
  404da0:	cmp	x27, #0x0
  404da4:	ccmp	x19, x0, #0x0, ne  // ne = any
  404da8:	b.ls	404e00 <scols_reset_iter@plt+0x2560>  // b.plast
  404dac:	mov	x1, x0
  404db0:	strb	w24, [x1], #1
  404db4:	sub	x2, x27, x1
  404db8:	cmn	x0, x2
  404dbc:	ccmp	x19, x1, #0x0, ne  // ne = any
  404dc0:	b.hi	404db0 <scols_reset_iter@plt+0x2510>  // b.pmore
  404dc4:	strb	wzr, [x1]
  404dc8:	mov	x0, x25
  404dcc:	bl	402660 <free@plt>
  404dd0:	mov	x0, x28
  404dd4:	bl	402660 <free@plt>
  404dd8:	mov	x0, x21
  404ddc:	ldp	x19, x20, [sp, #16]
  404de0:	ldp	x21, x22, [sp, #32]
  404de4:	ldp	x23, x24, [sp, #48]
  404de8:	ldp	x25, x26, [sp, #64]
  404dec:	ldp	x27, x28, [sp, #80]
  404df0:	ldp	x29, x30, [sp], #128
  404df4:	ret
  404df8:	mov	x0, x22
  404dfc:	b	404d88 <scols_reset_iter@plt+0x24e8>
  404e00:	mov	x1, x0
  404e04:	b	404dc4 <scols_reset_iter@plt+0x2524>
  404e08:	stp	x29, x30, [sp, #-16]!
  404e0c:	mov	x29, sp
  404e10:	mov	w6, #0x20                  	// #32
  404e14:	bl	404af0 <scols_reset_iter@plt+0x2250>
  404e18:	ldp	x29, x30, [sp], #16
  404e1c:	ret
  404e20:	str	xzr, [x1]
  404e24:	cbnz	x0, 404e30 <scols_reset_iter@plt+0x2590>
  404e28:	b	404e88 <scols_reset_iter@plt+0x25e8>
  404e2c:	add	x0, x0, #0x1
  404e30:	ldrsb	w2, [x0]
  404e34:	cmp	w2, #0x2f
  404e38:	b.ne	404e48 <scols_reset_iter@plt+0x25a8>  // b.any
  404e3c:	ldrsb	w2, [x0, #1]
  404e40:	cmp	w2, #0x2f
  404e44:	b.eq	404e2c <scols_reset_iter@plt+0x258c>  // b.none
  404e48:	ldrsb	w2, [x0]
  404e4c:	cbz	w2, 404e8c <scols_reset_iter@plt+0x25ec>
  404e50:	mov	x2, #0x1                   	// #1
  404e54:	str	x2, [x1]
  404e58:	add	x3, x0, x2
  404e5c:	ldrsb	w2, [x0, #1]
  404e60:	cmp	w2, #0x2f
  404e64:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  404e68:	b.eq	404e88 <scols_reset_iter@plt+0x25e8>  // b.none
  404e6c:	ldr	x2, [x1]
  404e70:	add	x2, x2, #0x1
  404e74:	str	x2, [x1]
  404e78:	ldrsb	w2, [x3, #1]!
  404e7c:	cmp	w2, #0x2f
  404e80:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  404e84:	b.ne	404e6c <scols_reset_iter@plt+0x25cc>  // b.any
  404e88:	ret
  404e8c:	mov	x0, #0x0                   	// #0
  404e90:	b	404e88 <scols_reset_iter@plt+0x25e8>
  404e94:	stp	x29, x30, [sp, #-80]!
  404e98:	mov	x29, sp
  404e9c:	stp	x19, x20, [sp, #16]
  404ea0:	stp	x21, x22, [sp, #32]
  404ea4:	stp	x23, x24, [sp, #48]
  404ea8:	mov	x24, x1
  404eac:	ldrsb	w1, [x0]
  404eb0:	cbz	w1, 404f30 <scols_reset_iter@plt+0x2690>
  404eb4:	str	x25, [sp, #64]
  404eb8:	mov	x19, #0x1                   	// #1
  404ebc:	mov	w21, #0x0                   	// #0
  404ec0:	mov	w23, #0x0                   	// #0
  404ec4:	mov	w25, #0x1                   	// #1
  404ec8:	sub	x22, x0, #0x1
  404ecc:	b	404ee4 <scols_reset_iter@plt+0x2644>
  404ed0:	mov	w21, w23
  404ed4:	mov	w20, w19
  404ed8:	add	x19, x19, #0x1
  404edc:	ldrsb	w1, [x22, x19]
  404ee0:	cbz	w1, 404f10 <scols_reset_iter@plt+0x2670>
  404ee4:	sub	w20, w19, #0x1
  404ee8:	cbnz	w21, 404ed0 <scols_reset_iter@plt+0x2630>
  404eec:	cmp	w1, #0x5c
  404ef0:	b.eq	404f08 <scols_reset_iter@plt+0x2668>  // b.none
  404ef4:	mov	x0, x24
  404ef8:	bl	402710 <strchr@plt>
  404efc:	cbz	x0, 404ed4 <scols_reset_iter@plt+0x2634>
  404f00:	ldr	x25, [sp, #64]
  404f04:	b	404f14 <scols_reset_iter@plt+0x2674>
  404f08:	mov	w21, w25
  404f0c:	b	404ed4 <scols_reset_iter@plt+0x2634>
  404f10:	ldr	x25, [sp, #64]
  404f14:	sub	w0, w20, w21
  404f18:	sxtw	x0, w0
  404f1c:	ldp	x19, x20, [sp, #16]
  404f20:	ldp	x21, x22, [sp, #32]
  404f24:	ldp	x23, x24, [sp, #48]
  404f28:	ldp	x29, x30, [sp], #80
  404f2c:	ret
  404f30:	mov	w20, #0x0                   	// #0
  404f34:	mov	w21, #0x0                   	// #0
  404f38:	b	404f14 <scols_reset_iter@plt+0x2674>
  404f3c:	stp	x29, x30, [sp, #-64]!
  404f40:	mov	x29, sp
  404f44:	stp	x19, x20, [sp, #16]
  404f48:	stp	x21, x22, [sp, #32]
  404f4c:	mov	x19, x0
  404f50:	mov	x22, x1
  404f54:	mov	w21, w2
  404f58:	str	xzr, [sp, #56]
  404f5c:	bl	402800 <__errno_location@plt>
  404f60:	str	wzr, [x0]
  404f64:	cbz	x19, 404f74 <scols_reset_iter@plt+0x26d4>
  404f68:	mov	x20, x0
  404f6c:	ldrsb	w0, [x19]
  404f70:	cbnz	w0, 404f90 <scols_reset_iter@plt+0x26f0>
  404f74:	mov	x3, x19
  404f78:	mov	x2, x22
  404f7c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  404f80:	add	x1, x1, #0x8a0
  404f84:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  404f88:	ldr	w0, [x0, #832]
  404f8c:	bl	4027b0 <errx@plt>
  404f90:	mov	w3, #0x0                   	// #0
  404f94:	mov	w2, w21
  404f98:	add	x1, sp, #0x38
  404f9c:	mov	x0, x19
  404fa0:	bl	4024e0 <__strtoul_internal@plt>
  404fa4:	ldr	w1, [x20]
  404fa8:	cbnz	w1, 404fd4 <scols_reset_iter@plt+0x2734>
  404fac:	ldr	x1, [sp, #56]
  404fb0:	cmp	x1, x19
  404fb4:	b.eq	404f74 <scols_reset_iter@plt+0x26d4>  // b.none
  404fb8:	cbz	x1, 404fc4 <scols_reset_iter@plt+0x2724>
  404fbc:	ldrsb	w1, [x1]
  404fc0:	cbnz	w1, 404f74 <scols_reset_iter@plt+0x26d4>
  404fc4:	ldp	x19, x20, [sp, #16]
  404fc8:	ldp	x21, x22, [sp, #32]
  404fcc:	ldp	x29, x30, [sp], #64
  404fd0:	ret
  404fd4:	cmp	w1, #0x22
  404fd8:	b.ne	404f74 <scols_reset_iter@plt+0x26d4>  // b.any
  404fdc:	mov	x3, x19
  404fe0:	mov	x2, x22
  404fe4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  404fe8:	add	x1, x1, #0x8a0
  404fec:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  404ff0:	ldr	w0, [x0, #832]
  404ff4:	bl	402860 <err@plt>
  404ff8:	stp	x29, x30, [sp, #-32]!
  404ffc:	mov	x29, sp
  405000:	stp	x19, x20, [sp, #16]
  405004:	mov	x20, x0
  405008:	mov	x19, x1
  40500c:	bl	404f3c <scols_reset_iter@plt+0x269c>
  405010:	mov	x1, #0xffffffff            	// #4294967295
  405014:	cmp	x0, x1
  405018:	b.hi	405028 <scols_reset_iter@plt+0x2788>  // b.pmore
  40501c:	ldp	x19, x20, [sp, #16]
  405020:	ldp	x29, x30, [sp], #32
  405024:	ret
  405028:	bl	402800 <__errno_location@plt>
  40502c:	mov	w1, #0x22                  	// #34
  405030:	str	w1, [x0]
  405034:	mov	x3, x20
  405038:	mov	x2, x19
  40503c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405040:	add	x1, x1, #0x8a0
  405044:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  405048:	ldr	w0, [x0, #832]
  40504c:	bl	402860 <err@plt>
  405050:	stp	x29, x30, [sp, #-32]!
  405054:	mov	x29, sp
  405058:	stp	x19, x20, [sp, #16]
  40505c:	mov	x20, x0
  405060:	mov	x19, x1
  405064:	bl	404ff8 <scols_reset_iter@plt+0x2758>
  405068:	mov	w1, #0xffff                	// #65535
  40506c:	cmp	w0, w1
  405070:	b.hi	405080 <scols_reset_iter@plt+0x27e0>  // b.pmore
  405074:	ldp	x19, x20, [sp, #16]
  405078:	ldp	x29, x30, [sp], #32
  40507c:	ret
  405080:	bl	402800 <__errno_location@plt>
  405084:	mov	w1, #0x22                  	// #34
  405088:	str	w1, [x0]
  40508c:	mov	x3, x20
  405090:	mov	x2, x19
  405094:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405098:	add	x1, x1, #0x8a0
  40509c:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  4050a0:	ldr	w0, [x0, #832]
  4050a4:	bl	402860 <err@plt>
  4050a8:	adrp	x1, 41b000 <scols_reset_iter@plt+0x18760>
  4050ac:	str	w0, [x1, #832]
  4050b0:	ret
  4050b4:	stp	x29, x30, [sp, #-128]!
  4050b8:	mov	x29, sp
  4050bc:	stp	x19, x20, [sp, #16]
  4050c0:	str	xzr, [x1]
  4050c4:	cbz	x0, 4054d4 <scols_reset_iter@plt+0x2c34>
  4050c8:	stp	x21, x22, [sp, #32]
  4050cc:	mov	x19, x0
  4050d0:	mov	x21, x1
  4050d4:	mov	x22, x2
  4050d8:	ldrsb	w0, [x0]
  4050dc:	cbz	w0, 4054dc <scols_reset_iter@plt+0x2c3c>
  4050e0:	stp	x23, x24, [sp, #48]
  4050e4:	bl	402620 <__ctype_b_loc@plt>
  4050e8:	mov	x24, x0
  4050ec:	ldr	x4, [x0]
  4050f0:	mov	x1, x19
  4050f4:	ldrsb	w2, [x1]
  4050f8:	and	x0, x2, #0xff
  4050fc:	ldrh	w3, [x4, x0, lsl #1]
  405100:	tbz	w3, #13, 40510c <scols_reset_iter@plt+0x286c>
  405104:	add	x1, x1, #0x1
  405108:	b	4050f4 <scols_reset_iter@plt+0x2854>
  40510c:	cmp	w2, #0x2d
  405110:	b.eq	405500 <scols_reset_iter@plt+0x2c60>  // b.none
  405114:	stp	x25, x26, [sp, #64]
  405118:	bl	402800 <__errno_location@plt>
  40511c:	mov	x25, x0
  405120:	str	wzr, [x0]
  405124:	str	xzr, [sp, #120]
  405128:	mov	w3, #0x0                   	// #0
  40512c:	mov	w2, #0x0                   	// #0
  405130:	add	x1, sp, #0x78
  405134:	mov	x0, x19
  405138:	bl	4024e0 <__strtoul_internal@plt>
  40513c:	mov	x26, x0
  405140:	ldr	x20, [sp, #120]
  405144:	cmp	x20, x19
  405148:	b.eq	405184 <scols_reset_iter@plt+0x28e4>  // b.none
  40514c:	ldr	w0, [x25]
  405150:	cbz	w0, 405160 <scols_reset_iter@plt+0x28c0>
  405154:	sub	x1, x26, #0x1
  405158:	cmn	x1, #0x3
  40515c:	b.hi	4051a0 <scols_reset_iter@plt+0x2900>  // b.pmore
  405160:	cbz	x20, 4054a0 <scols_reset_iter@plt+0x2c00>
  405164:	ldrsb	w0, [x20]
  405168:	cbz	w0, 4054a8 <scols_reset_iter@plt+0x2c08>
  40516c:	stp	x27, x28, [sp, #80]
  405170:	mov	w19, #0x0                   	// #0
  405174:	mov	x27, #0x0                   	// #0
  405178:	add	x0, sp, #0x78
  40517c:	str	x0, [sp, #104]
  405180:	b	40528c <scols_reset_iter@plt+0x29ec>
  405184:	ldr	w0, [x25]
  405188:	mov	w20, #0xffffffea            	// #-22
  40518c:	cbnz	w0, 4051a0 <scols_reset_iter@plt+0x2900>
  405190:	ldp	x21, x22, [sp, #32]
  405194:	ldp	x23, x24, [sp, #48]
  405198:	ldp	x25, x26, [sp, #64]
  40519c:	b	4054e4 <scols_reset_iter@plt+0x2c44>
  4051a0:	neg	w20, w0
  4051a4:	b	4054b0 <scols_reset_iter@plt+0x2c10>
  4051a8:	ldrsb	w0, [x20, #2]
  4051ac:	and	w0, w0, #0xffffffdf
  4051b0:	cmp	w0, #0x42
  4051b4:	b.ne	4052ac <scols_reset_iter@plt+0x2a0c>  // b.any
  4051b8:	ldrsb	w0, [x20, #3]
  4051bc:	cbnz	w0, 4052ac <scols_reset_iter@plt+0x2a0c>
  4051c0:	mov	w23, #0x400                 	// #1024
  4051c4:	b	4051d0 <scols_reset_iter@plt+0x2930>
  4051c8:	cbnz	w0, 4052ac <scols_reset_iter@plt+0x2a0c>
  4051cc:	mov	w23, #0x400                 	// #1024
  4051d0:	ldrsb	w20, [x20]
  4051d4:	mov	w1, w20
  4051d8:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  4051dc:	add	x0, x0, #0x8d0
  4051e0:	bl	402710 <strchr@plt>
  4051e4:	cbz	x0, 405388 <scols_reset_iter@plt+0x2ae8>
  4051e8:	adrp	x2, 408000 <scols_reset_iter@plt+0x5760>
  4051ec:	add	x2, x2, #0x8d0
  4051f0:	sub	x0, x0, x2
  4051f4:	add	w2, w0, #0x1
  4051f8:	cbz	w2, 4055a0 <scols_reset_iter@plt+0x2d00>
  4051fc:	sxtw	x3, w23
  405200:	umulh	x0, x26, x3
  405204:	cbnz	x0, 4053d0 <scols_reset_iter@plt+0x2b30>
  405208:	sub	w1, w2, #0x2
  40520c:	mul	x26, x26, x3
  405210:	cmn	w1, #0x1
  405214:	b.eq	4053b0 <scols_reset_iter@plt+0x2b10>  // b.none
  405218:	umulh	x0, x26, x3
  40521c:	sub	w1, w1, #0x1
  405220:	cbz	x0, 40520c <scols_reset_iter@plt+0x296c>
  405224:	mov	w20, #0xffffffde            	// #-34
  405228:	b	4053b4 <scols_reset_iter@plt+0x2b14>
  40522c:	ldrsb	w0, [x20]
  405230:	cbz	w0, 405540 <scols_reset_iter@plt+0x2ca0>
  405234:	mov	x2, x23
  405238:	mov	x1, x20
  40523c:	mov	x0, x28
  405240:	bl	402470 <strncmp@plt>
  405244:	cbnz	w0, 405558 <scols_reset_iter@plt+0x2cb8>
  405248:	add	x1, x20, x23
  40524c:	ldrsb	w0, [x20, x23]
  405250:	cmp	w0, #0x30
  405254:	b.ne	4052e4 <scols_reset_iter@plt+0x2a44>  // b.any
  405258:	mov	x20, x1
  40525c:	add	w2, w19, #0x1
  405260:	sub	w19, w20, w1
  405264:	add	w19, w19, w2
  405268:	ldrsb	w0, [x20, #1]!
  40526c:	cmp	w0, #0x30
  405270:	b.eq	405260 <scols_reset_iter@plt+0x29c0>  // b.none
  405274:	sxtb	x0, w0
  405278:	ldr	x1, [x24]
  40527c:	ldrh	w0, [x1, x0, lsl #1]
  405280:	tbnz	w0, #11, 4052ec <scols_reset_iter@plt+0x2a4c>
  405284:	str	x20, [sp, #120]
  405288:	ldr	x20, [sp, #120]
  40528c:	ldrsb	w0, [x20, #1]
  405290:	cmp	w0, #0x69
  405294:	b.eq	4051a8 <scols_reset_iter@plt+0x2908>  // b.none
  405298:	and	w1, w0, #0xffffffdf
  40529c:	cmp	w1, #0x42
  4052a0:	b.ne	4051c8 <scols_reset_iter@plt+0x2928>  // b.any
  4052a4:	ldrsb	w0, [x20, #2]
  4052a8:	cbz	w0, 405380 <scols_reset_iter@plt+0x2ae0>
  4052ac:	bl	4023d0 <localeconv@plt>
  4052b0:	cbz	x0, 405510 <scols_reset_iter@plt+0x2c70>
  4052b4:	ldr	x28, [x0]
  4052b8:	cbz	x28, 405528 <scols_reset_iter@plt+0x2c88>
  4052bc:	mov	x0, x28
  4052c0:	bl	402290 <strlen@plt>
  4052c4:	mov	x23, x0
  4052c8:	cbz	x27, 40522c <scols_reset_iter@plt+0x298c>
  4052cc:	mov	w20, #0xffffffea            	// #-22
  4052d0:	ldp	x21, x22, [sp, #32]
  4052d4:	ldp	x23, x24, [sp, #48]
  4052d8:	ldp	x25, x26, [sp, #64]
  4052dc:	ldp	x27, x28, [sp, #80]
  4052e0:	b	4054e4 <scols_reset_iter@plt+0x2c44>
  4052e4:	mov	x20, x1
  4052e8:	b	405274 <scols_reset_iter@plt+0x29d4>
  4052ec:	str	wzr, [x25]
  4052f0:	str	xzr, [sp, #120]
  4052f4:	mov	w3, #0x0                   	// #0
  4052f8:	mov	w2, #0x0                   	// #0
  4052fc:	ldr	x1, [sp, #104]
  405300:	mov	x0, x20
  405304:	bl	4024e0 <__strtoul_internal@plt>
  405308:	mov	x27, x0
  40530c:	ldr	x0, [sp, #120]
  405310:	cmp	x0, x20
  405314:	b.eq	405354 <scols_reset_iter@plt+0x2ab4>  // b.none
  405318:	ldr	w1, [x25]
  40531c:	cbz	w1, 40532c <scols_reset_iter@plt+0x2a8c>
  405320:	sub	x2, x27, #0x1
  405324:	cmn	x2, #0x3
  405328:	b.hi	405374 <scols_reset_iter@plt+0x2ad4>  // b.pmore
  40532c:	cbz	x27, 405288 <scols_reset_iter@plt+0x29e8>
  405330:	cbz	x0, 405570 <scols_reset_iter@plt+0x2cd0>
  405334:	ldrsb	w0, [x0]
  405338:	cbnz	w0, 405288 <scols_reset_iter@plt+0x29e8>
  40533c:	mov	w20, #0xffffffea            	// #-22
  405340:	ldp	x21, x22, [sp, #32]
  405344:	ldp	x23, x24, [sp, #48]
  405348:	ldp	x25, x26, [sp, #64]
  40534c:	ldp	x27, x28, [sp, #80]
  405350:	b	4054e4 <scols_reset_iter@plt+0x2c44>
  405354:	ldr	w1, [x25]
  405358:	mov	w20, #0xffffffea            	// #-22
  40535c:	cbnz	w1, 405374 <scols_reset_iter@plt+0x2ad4>
  405360:	ldp	x21, x22, [sp, #32]
  405364:	ldp	x23, x24, [sp, #48]
  405368:	ldp	x25, x26, [sp, #64]
  40536c:	ldp	x27, x28, [sp, #80]
  405370:	b	4054e4 <scols_reset_iter@plt+0x2c44>
  405374:	neg	w20, w1
  405378:	ldp	x27, x28, [sp, #80]
  40537c:	b	4054b0 <scols_reset_iter@plt+0x2c10>
  405380:	mov	w23, #0x3e8                 	// #1000
  405384:	b	4051d0 <scols_reset_iter@plt+0x2930>
  405388:	mov	w1, w20
  40538c:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  405390:	add	x0, x0, #0x8e0
  405394:	bl	402710 <strchr@plt>
  405398:	cbz	x0, 405588 <scols_reset_iter@plt+0x2ce8>
  40539c:	adrp	x2, 408000 <scols_reset_iter@plt+0x5760>
  4053a0:	add	x2, x2, #0x8e0
  4053a4:	sub	x0, x0, x2
  4053a8:	add	w2, w0, #0x1
  4053ac:	b	4051f8 <scols_reset_iter@plt+0x2958>
  4053b0:	mov	w20, #0x0                   	// #0
  4053b4:	cbz	x22, 4053bc <scols_reset_iter@plt+0x2b1c>
  4053b8:	str	w2, [x22]
  4053bc:	cmp	x27, #0x0
  4053c0:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  4053c4:	b.ne	4053d8 <scols_reset_iter@plt+0x2b38>  // b.any
  4053c8:	ldp	x27, x28, [sp, #80]
  4053cc:	b	4054ac <scols_reset_iter@plt+0x2c0c>
  4053d0:	mov	w20, #0xffffffde            	// #-34
  4053d4:	b	4053b4 <scols_reset_iter@plt+0x2b14>
  4053d8:	sxtw	x23, w23
  4053dc:	sub	w0, w2, #0x2
  4053e0:	mov	x4, #0x1                   	// #1
  4053e4:	mul	x4, x4, x23
  4053e8:	cmn	w0, #0x1
  4053ec:	b.eq	4053fc <scols_reset_iter@plt+0x2b5c>  // b.none
  4053f0:	umulh	x1, x4, x23
  4053f4:	sub	w0, w0, #0x1
  4053f8:	cbz	x1, 4053e4 <scols_reset_iter@plt+0x2b44>
  4053fc:	cmp	x27, #0xa
  405400:	b.ls	40544c <scols_reset_iter@plt+0x2bac>  // b.plast
  405404:	mov	x0, #0xa                   	// #10
  405408:	add	x0, x0, x0, lsl #2
  40540c:	lsl	x1, x0, #1
  405410:	mov	x0, x1
  405414:	cmp	x27, x1
  405418:	b.hi	405408 <scols_reset_iter@plt+0x2b68>  // b.pmore
  40541c:	cmp	w19, #0x0
  405420:	b.le	40543c <scols_reset_iter@plt+0x2b9c>
  405424:	mov	w1, #0x0                   	// #0
  405428:	add	x0, x0, x0, lsl #2
  40542c:	lsl	x0, x0, #1
  405430:	add	w1, w1, #0x1
  405434:	cmp	w19, w1
  405438:	b.ne	405428 <scols_reset_iter@plt+0x2b88>  // b.any
  40543c:	mov	x2, #0x1                   	// #1
  405440:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
  405444:	movk	x6, #0xcccd
  405448:	b	40545c <scols_reset_iter@plt+0x2bbc>
  40544c:	mov	x0, #0xa                   	// #10
  405450:	b	40541c <scols_reset_iter@plt+0x2b7c>
  405454:	cmp	x5, #0x9
  405458:	b.ls	405498 <scols_reset_iter@plt+0x2bf8>  // b.plast
  40545c:	umulh	x3, x27, x6
  405460:	lsr	x1, x3, #3
  405464:	add	x1, x1, x1, lsl #2
  405468:	sub	x1, x27, x1, lsl #1
  40546c:	mov	x5, x27
  405470:	lsr	x27, x3, #3
  405474:	mov	x3, x2
  405478:	add	x2, x2, x2, lsl #2
  40547c:	lsl	x2, x2, #1
  405480:	cbz	w1, 405454 <scols_reset_iter@plt+0x2bb4>
  405484:	udiv	x3, x0, x3
  405488:	udiv	x1, x3, x1
  40548c:	udiv	x1, x4, x1
  405490:	add	x26, x26, x1
  405494:	b	405454 <scols_reset_iter@plt+0x2bb4>
  405498:	ldp	x27, x28, [sp, #80]
  40549c:	b	4054ac <scols_reset_iter@plt+0x2c0c>
  4054a0:	mov	w20, #0x0                   	// #0
  4054a4:	b	4054ac <scols_reset_iter@plt+0x2c0c>
  4054a8:	mov	w20, #0x0                   	// #0
  4054ac:	str	x26, [x21]
  4054b0:	tbnz	w20, #31, 4054c4 <scols_reset_iter@plt+0x2c24>
  4054b4:	ldp	x21, x22, [sp, #32]
  4054b8:	ldp	x23, x24, [sp, #48]
  4054bc:	ldp	x25, x26, [sp, #64]
  4054c0:	b	4054f0 <scols_reset_iter@plt+0x2c50>
  4054c4:	ldp	x21, x22, [sp, #32]
  4054c8:	ldp	x23, x24, [sp, #48]
  4054cc:	ldp	x25, x26, [sp, #64]
  4054d0:	b	4054e4 <scols_reset_iter@plt+0x2c44>
  4054d4:	mov	w20, #0xffffffea            	// #-22
  4054d8:	b	4054e4 <scols_reset_iter@plt+0x2c44>
  4054dc:	mov	w20, #0xffffffea            	// #-22
  4054e0:	ldp	x21, x22, [sp, #32]
  4054e4:	bl	402800 <__errno_location@plt>
  4054e8:	neg	w1, w20
  4054ec:	str	w1, [x0]
  4054f0:	mov	w0, w20
  4054f4:	ldp	x19, x20, [sp, #16]
  4054f8:	ldp	x29, x30, [sp], #128
  4054fc:	ret
  405500:	mov	w20, #0xffffffea            	// #-22
  405504:	ldp	x21, x22, [sp, #32]
  405508:	ldp	x23, x24, [sp, #48]
  40550c:	b	4054e4 <scols_reset_iter@plt+0x2c44>
  405510:	mov	w20, #0xffffffea            	// #-22
  405514:	ldp	x21, x22, [sp, #32]
  405518:	ldp	x23, x24, [sp, #48]
  40551c:	ldp	x25, x26, [sp, #64]
  405520:	ldp	x27, x28, [sp, #80]
  405524:	b	4054e4 <scols_reset_iter@plt+0x2c44>
  405528:	mov	w20, #0xffffffea            	// #-22
  40552c:	ldp	x21, x22, [sp, #32]
  405530:	ldp	x23, x24, [sp, #48]
  405534:	ldp	x25, x26, [sp, #64]
  405538:	ldp	x27, x28, [sp, #80]
  40553c:	b	4054e4 <scols_reset_iter@plt+0x2c44>
  405540:	mov	w20, #0xffffffea            	// #-22
  405544:	ldp	x21, x22, [sp, #32]
  405548:	ldp	x23, x24, [sp, #48]
  40554c:	ldp	x25, x26, [sp, #64]
  405550:	ldp	x27, x28, [sp, #80]
  405554:	b	4054e4 <scols_reset_iter@plt+0x2c44>
  405558:	mov	w20, #0xffffffea            	// #-22
  40555c:	ldp	x21, x22, [sp, #32]
  405560:	ldp	x23, x24, [sp, #48]
  405564:	ldp	x25, x26, [sp, #64]
  405568:	ldp	x27, x28, [sp, #80]
  40556c:	b	4054e4 <scols_reset_iter@plt+0x2c44>
  405570:	mov	w20, #0xffffffea            	// #-22
  405574:	ldp	x21, x22, [sp, #32]
  405578:	ldp	x23, x24, [sp, #48]
  40557c:	ldp	x25, x26, [sp, #64]
  405580:	ldp	x27, x28, [sp, #80]
  405584:	b	4054e4 <scols_reset_iter@plt+0x2c44>
  405588:	mov	w20, #0xffffffea            	// #-22
  40558c:	ldp	x21, x22, [sp, #32]
  405590:	ldp	x23, x24, [sp, #48]
  405594:	ldp	x25, x26, [sp, #64]
  405598:	ldp	x27, x28, [sp, #80]
  40559c:	b	4054e4 <scols_reset_iter@plt+0x2c44>
  4055a0:	mov	w20, w2
  4055a4:	cbnz	x22, 4053b8 <scols_reset_iter@plt+0x2b18>
  4055a8:	ldp	x27, x28, [sp, #80]
  4055ac:	b	4054ac <scols_reset_iter@plt+0x2c0c>
  4055b0:	stp	x29, x30, [sp, #-16]!
  4055b4:	mov	x29, sp
  4055b8:	mov	x2, #0x0                   	// #0
  4055bc:	bl	4050b4 <scols_reset_iter@plt+0x2814>
  4055c0:	ldp	x29, x30, [sp], #16
  4055c4:	ret
  4055c8:	stp	x29, x30, [sp, #-48]!
  4055cc:	mov	x29, sp
  4055d0:	stp	x19, x20, [sp, #16]
  4055d4:	stp	x21, x22, [sp, #32]
  4055d8:	mov	x21, x0
  4055dc:	mov	x22, x1
  4055e0:	mov	x20, x0
  4055e4:	cbnz	x0, 4055f8 <scols_reset_iter@plt+0x2d58>
  4055e8:	cbnz	x1, 405618 <scols_reset_iter@plt+0x2d78>
  4055ec:	mov	w0, #0x0                   	// #0
  4055f0:	b	405638 <scols_reset_iter@plt+0x2d98>
  4055f4:	add	x20, x20, #0x1
  4055f8:	ldrsb	w19, [x20]
  4055fc:	cbz	w19, 405614 <scols_reset_iter@plt+0x2d74>
  405600:	bl	402620 <__ctype_b_loc@plt>
  405604:	and	x19, x19, #0xff
  405608:	ldr	x2, [x0]
  40560c:	ldrh	w2, [x2, x19, lsl #1]
  405610:	tbnz	w2, #11, 4055f4 <scols_reset_iter@plt+0x2d54>
  405614:	cbz	x22, 40561c <scols_reset_iter@plt+0x2d7c>
  405618:	str	x20, [x22]
  40561c:	cmp	x20, #0x0
  405620:	mov	w0, #0x0                   	// #0
  405624:	ccmp	x21, x20, #0x2, ne  // ne = any
  405628:	b.cs	405638 <scols_reset_iter@plt+0x2d98>  // b.hs, b.nlast
  40562c:	ldrsb	w0, [x20]
  405630:	cmp	w0, #0x0
  405634:	cset	w0, eq  // eq = none
  405638:	ldp	x19, x20, [sp, #16]
  40563c:	ldp	x21, x22, [sp, #32]
  405640:	ldp	x29, x30, [sp], #48
  405644:	ret
  405648:	stp	x29, x30, [sp, #-48]!
  40564c:	mov	x29, sp
  405650:	stp	x19, x20, [sp, #16]
  405654:	stp	x21, x22, [sp, #32]
  405658:	mov	x21, x0
  40565c:	mov	x22, x1
  405660:	mov	x20, x0
  405664:	cbnz	x0, 405678 <scols_reset_iter@plt+0x2dd8>
  405668:	cbnz	x1, 405698 <scols_reset_iter@plt+0x2df8>
  40566c:	mov	w0, #0x0                   	// #0
  405670:	b	4056b8 <scols_reset_iter@plt+0x2e18>
  405674:	add	x20, x20, #0x1
  405678:	ldrsb	w19, [x20]
  40567c:	cbz	w19, 405694 <scols_reset_iter@plt+0x2df4>
  405680:	bl	402620 <__ctype_b_loc@plt>
  405684:	and	x19, x19, #0xff
  405688:	ldr	x2, [x0]
  40568c:	ldrh	w2, [x2, x19, lsl #1]
  405690:	tbnz	w2, #12, 405674 <scols_reset_iter@plt+0x2dd4>
  405694:	cbz	x22, 40569c <scols_reset_iter@plt+0x2dfc>
  405698:	str	x20, [x22]
  40569c:	cmp	x20, #0x0
  4056a0:	mov	w0, #0x0                   	// #0
  4056a4:	ccmp	x21, x20, #0x2, ne  // ne = any
  4056a8:	b.cs	4056b8 <scols_reset_iter@plt+0x2e18>  // b.hs, b.nlast
  4056ac:	ldrsb	w0, [x20]
  4056b0:	cmp	w0, #0x0
  4056b4:	cset	w0, eq  // eq = none
  4056b8:	ldp	x19, x20, [sp, #16]
  4056bc:	ldp	x21, x22, [sp, #32]
  4056c0:	ldp	x29, x30, [sp], #48
  4056c4:	ret
  4056c8:	stp	x29, x30, [sp, #-128]!
  4056cc:	mov	x29, sp
  4056d0:	stp	x19, x20, [sp, #16]
  4056d4:	stp	x21, x22, [sp, #32]
  4056d8:	mov	x20, x0
  4056dc:	mov	x22, x1
  4056e0:	str	x2, [sp, #80]
  4056e4:	str	x3, [sp, #88]
  4056e8:	str	x4, [sp, #96]
  4056ec:	str	x5, [sp, #104]
  4056f0:	str	x6, [sp, #112]
  4056f4:	str	x7, [sp, #120]
  4056f8:	add	x0, sp, #0x80
  4056fc:	str	x0, [sp, #48]
  405700:	str	x0, [sp, #56]
  405704:	add	x0, sp, #0x50
  405708:	str	x0, [sp, #64]
  40570c:	mov	w0, #0xffffffd0            	// #-48
  405710:	str	w0, [sp, #72]
  405714:	str	wzr, [sp, #76]
  405718:	add	x21, sp, #0x80
  40571c:	b	4057bc <scols_reset_iter@plt+0x2f1c>
  405720:	add	w0, w3, #0x8
  405724:	str	w0, [sp, #72]
  405728:	cmp	w0, #0x0
  40572c:	b.le	405740 <scols_reset_iter@plt+0x2ea0>
  405730:	add	x0, x2, #0xf
  405734:	and	x0, x0, #0xfffffffffffffff8
  405738:	str	x0, [sp, #48]
  40573c:	b	4057d4 <scols_reset_iter@plt+0x2f34>
  405740:	ldr	x1, [x21, w3, sxtw]
  405744:	cbz	x1, 4057dc <scols_reset_iter@plt+0x2f3c>
  405748:	cbz	w0, 40578c <scols_reset_iter@plt+0x2eec>
  40574c:	add	w3, w3, #0x10
  405750:	str	w3, [sp, #72]
  405754:	cmp	w3, #0x0
  405758:	b.le	40576c <scols_reset_iter@plt+0x2ecc>
  40575c:	add	x0, x2, #0xf
  405760:	and	x0, x0, #0xfffffffffffffff8
  405764:	str	x0, [sp, #48]
  405768:	b	405798 <scols_reset_iter@plt+0x2ef8>
  40576c:	add	x2, x21, w0, sxtw
  405770:	b	405798 <scols_reset_iter@plt+0x2ef8>
  405774:	mov	w0, #0x1                   	// #1
  405778:	ldp	x19, x20, [sp, #16]
  40577c:	ldp	x21, x22, [sp, #32]
  405780:	ldp	x29, x30, [sp], #128
  405784:	ret
  405788:	ldr	x2, [sp, #48]
  40578c:	add	x0, x2, #0xf
  405790:	and	x0, x0, #0xfffffffffffffff8
  405794:	str	x0, [sp, #48]
  405798:	ldr	x19, [x2]
  40579c:	cbz	x19, 4057dc <scols_reset_iter@plt+0x2f3c>
  4057a0:	mov	x0, x20
  4057a4:	bl	402600 <strcmp@plt>
  4057a8:	cbz	w0, 405774 <scols_reset_iter@plt+0x2ed4>
  4057ac:	mov	x1, x19
  4057b0:	mov	x0, x20
  4057b4:	bl	402600 <strcmp@plt>
  4057b8:	cbz	w0, 405778 <scols_reset_iter@plt+0x2ed8>
  4057bc:	ldr	w3, [sp, #72]
  4057c0:	ldr	x2, [sp, #48]
  4057c4:	tbnz	w3, #31, 405720 <scols_reset_iter@plt+0x2e80>
  4057c8:	add	x0, x2, #0xf
  4057cc:	and	x0, x0, #0xfffffffffffffff8
  4057d0:	str	x0, [sp, #48]
  4057d4:	ldr	x1, [x2]
  4057d8:	cbnz	x1, 405788 <scols_reset_iter@plt+0x2ee8>
  4057dc:	mov	x3, x20
  4057e0:	mov	x2, x22
  4057e4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4057e8:	add	x1, x1, #0x8a0
  4057ec:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  4057f0:	ldr	w0, [x0, #832]
  4057f4:	bl	4027b0 <errx@plt>
  4057f8:	cbz	x1, 405830 <scols_reset_iter@plt+0x2f90>
  4057fc:	add	x3, x0, x1
  405800:	sxtb	w2, w2
  405804:	ldrsb	w1, [x0]
  405808:	cbz	w1, 405828 <scols_reset_iter@plt+0x2f88>
  40580c:	cmp	w2, w1
  405810:	b.eq	40582c <scols_reset_iter@plt+0x2f8c>  // b.none
  405814:	add	x0, x0, #0x1
  405818:	cmp	x3, x0
  40581c:	b.ne	405804 <scols_reset_iter@plt+0x2f64>  // b.any
  405820:	mov	x0, #0x0                   	// #0
  405824:	b	40582c <scols_reset_iter@plt+0x2f8c>
  405828:	mov	x0, #0x0                   	// #0
  40582c:	ret
  405830:	mov	x0, #0x0                   	// #0
  405834:	b	40582c <scols_reset_iter@plt+0x2f8c>
  405838:	stp	x29, x30, [sp, #-16]!
  40583c:	mov	x29, sp
  405840:	mov	w2, #0xa                   	// #10
  405844:	bl	405050 <scols_reset_iter@plt+0x27b0>
  405848:	ldp	x29, x30, [sp], #16
  40584c:	ret
  405850:	stp	x29, x30, [sp, #-16]!
  405854:	mov	x29, sp
  405858:	mov	w2, #0x10                  	// #16
  40585c:	bl	405050 <scols_reset_iter@plt+0x27b0>
  405860:	ldp	x29, x30, [sp], #16
  405864:	ret
  405868:	stp	x29, x30, [sp, #-16]!
  40586c:	mov	x29, sp
  405870:	mov	w2, #0xa                   	// #10
  405874:	bl	404ff8 <scols_reset_iter@plt+0x2758>
  405878:	ldp	x29, x30, [sp], #16
  40587c:	ret
  405880:	stp	x29, x30, [sp, #-16]!
  405884:	mov	x29, sp
  405888:	mov	w2, #0x10                  	// #16
  40588c:	bl	404ff8 <scols_reset_iter@plt+0x2758>
  405890:	ldp	x29, x30, [sp], #16
  405894:	ret
  405898:	stp	x29, x30, [sp, #-64]!
  40589c:	mov	x29, sp
  4058a0:	stp	x19, x20, [sp, #16]
  4058a4:	str	x21, [sp, #32]
  4058a8:	mov	x19, x0
  4058ac:	mov	x21, x1
  4058b0:	str	xzr, [sp, #56]
  4058b4:	bl	402800 <__errno_location@plt>
  4058b8:	str	wzr, [x0]
  4058bc:	cbz	x19, 4058cc <scols_reset_iter@plt+0x302c>
  4058c0:	mov	x20, x0
  4058c4:	ldrsb	w0, [x19]
  4058c8:	cbnz	w0, 4058e8 <scols_reset_iter@plt+0x3048>
  4058cc:	mov	x3, x19
  4058d0:	mov	x2, x21
  4058d4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4058d8:	add	x1, x1, #0x8a0
  4058dc:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  4058e0:	ldr	w0, [x0, #832]
  4058e4:	bl	4027b0 <errx@plt>
  4058e8:	mov	w3, #0x0                   	// #0
  4058ec:	mov	w2, #0xa                   	// #10
  4058f0:	add	x1, sp, #0x38
  4058f4:	mov	x0, x19
  4058f8:	bl	402460 <__strtol_internal@plt>
  4058fc:	ldr	w1, [x20]
  405900:	cbnz	w1, 40592c <scols_reset_iter@plt+0x308c>
  405904:	ldr	x1, [sp, #56]
  405908:	cmp	x1, x19
  40590c:	b.eq	4058cc <scols_reset_iter@plt+0x302c>  // b.none
  405910:	cbz	x1, 40591c <scols_reset_iter@plt+0x307c>
  405914:	ldrsb	w1, [x1]
  405918:	cbnz	w1, 4058cc <scols_reset_iter@plt+0x302c>
  40591c:	ldp	x19, x20, [sp, #16]
  405920:	ldr	x21, [sp, #32]
  405924:	ldp	x29, x30, [sp], #64
  405928:	ret
  40592c:	cmp	w1, #0x22
  405930:	b.ne	4058cc <scols_reset_iter@plt+0x302c>  // b.any
  405934:	mov	x3, x19
  405938:	mov	x2, x21
  40593c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405940:	add	x1, x1, #0x8a0
  405944:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  405948:	ldr	w0, [x0, #832]
  40594c:	bl	402860 <err@plt>
  405950:	stp	x29, x30, [sp, #-32]!
  405954:	mov	x29, sp
  405958:	stp	x19, x20, [sp, #16]
  40595c:	mov	x20, x0
  405960:	mov	x19, x1
  405964:	bl	405898 <scols_reset_iter@plt+0x2ff8>
  405968:	mov	x2, #0x80000000            	// #2147483648
  40596c:	add	x2, x0, x2
  405970:	mov	x1, #0xffffffff            	// #4294967295
  405974:	cmp	x2, x1
  405978:	b.hi	405988 <scols_reset_iter@plt+0x30e8>  // b.pmore
  40597c:	ldp	x19, x20, [sp, #16]
  405980:	ldp	x29, x30, [sp], #32
  405984:	ret
  405988:	bl	402800 <__errno_location@plt>
  40598c:	mov	w1, #0x22                  	// #34
  405990:	str	w1, [x0]
  405994:	mov	x3, x20
  405998:	mov	x2, x19
  40599c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4059a0:	add	x1, x1, #0x8a0
  4059a4:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  4059a8:	ldr	w0, [x0, #832]
  4059ac:	bl	402860 <err@plt>
  4059b0:	stp	x29, x30, [sp, #-32]!
  4059b4:	mov	x29, sp
  4059b8:	stp	x19, x20, [sp, #16]
  4059bc:	mov	x20, x0
  4059c0:	mov	x19, x1
  4059c4:	bl	405950 <scols_reset_iter@plt+0x30b0>
  4059c8:	add	w2, w0, #0x8, lsl #12
  4059cc:	mov	w1, #0xffff                	// #65535
  4059d0:	cmp	w2, w1
  4059d4:	b.hi	4059e4 <scols_reset_iter@plt+0x3144>  // b.pmore
  4059d8:	ldp	x19, x20, [sp, #16]
  4059dc:	ldp	x29, x30, [sp], #32
  4059e0:	ret
  4059e4:	bl	402800 <__errno_location@plt>
  4059e8:	mov	w1, #0x22                  	// #34
  4059ec:	str	w1, [x0]
  4059f0:	mov	x3, x20
  4059f4:	mov	x2, x19
  4059f8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  4059fc:	add	x1, x1, #0x8a0
  405a00:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  405a04:	ldr	w0, [x0, #832]
  405a08:	bl	402860 <err@plt>
  405a0c:	stp	x29, x30, [sp, #-16]!
  405a10:	mov	x29, sp
  405a14:	mov	w2, #0xa                   	// #10
  405a18:	bl	404f3c <scols_reset_iter@plt+0x269c>
  405a1c:	ldp	x29, x30, [sp], #16
  405a20:	ret
  405a24:	stp	x29, x30, [sp, #-16]!
  405a28:	mov	x29, sp
  405a2c:	mov	w2, #0x10                  	// #16
  405a30:	bl	404f3c <scols_reset_iter@plt+0x269c>
  405a34:	ldp	x29, x30, [sp], #16
  405a38:	ret
  405a3c:	stp	x29, x30, [sp, #-64]!
  405a40:	mov	x29, sp
  405a44:	stp	x19, x20, [sp, #16]
  405a48:	str	x21, [sp, #32]
  405a4c:	mov	x19, x0
  405a50:	mov	x21, x1
  405a54:	str	xzr, [sp, #56]
  405a58:	bl	402800 <__errno_location@plt>
  405a5c:	str	wzr, [x0]
  405a60:	cbz	x19, 405a70 <scols_reset_iter@plt+0x31d0>
  405a64:	mov	x20, x0
  405a68:	ldrsb	w0, [x19]
  405a6c:	cbnz	w0, 405a8c <scols_reset_iter@plt+0x31ec>
  405a70:	mov	x3, x19
  405a74:	mov	x2, x21
  405a78:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405a7c:	add	x1, x1, #0x8a0
  405a80:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  405a84:	ldr	w0, [x0, #832]
  405a88:	bl	4027b0 <errx@plt>
  405a8c:	add	x1, sp, #0x38
  405a90:	mov	x0, x19
  405a94:	bl	402310 <strtod@plt>
  405a98:	ldr	w0, [x20]
  405a9c:	cbnz	w0, 405ac8 <scols_reset_iter@plt+0x3228>
  405aa0:	ldr	x0, [sp, #56]
  405aa4:	cmp	x0, x19
  405aa8:	b.eq	405a70 <scols_reset_iter@plt+0x31d0>  // b.none
  405aac:	cbz	x0, 405ab8 <scols_reset_iter@plt+0x3218>
  405ab0:	ldrsb	w0, [x0]
  405ab4:	cbnz	w0, 405a70 <scols_reset_iter@plt+0x31d0>
  405ab8:	ldp	x19, x20, [sp, #16]
  405abc:	ldr	x21, [sp, #32]
  405ac0:	ldp	x29, x30, [sp], #64
  405ac4:	ret
  405ac8:	cmp	w0, #0x22
  405acc:	b.ne	405a70 <scols_reset_iter@plt+0x31d0>  // b.any
  405ad0:	mov	x3, x19
  405ad4:	mov	x2, x21
  405ad8:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405adc:	add	x1, x1, #0x8a0
  405ae0:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  405ae4:	ldr	w0, [x0, #832]
  405ae8:	bl	402860 <err@plt>
  405aec:	stp	x29, x30, [sp, #-64]!
  405af0:	mov	x29, sp
  405af4:	stp	x19, x20, [sp, #16]
  405af8:	str	x21, [sp, #32]
  405afc:	mov	x19, x0
  405b00:	mov	x21, x1
  405b04:	str	xzr, [sp, #56]
  405b08:	bl	402800 <__errno_location@plt>
  405b0c:	str	wzr, [x0]
  405b10:	cbz	x19, 405b20 <scols_reset_iter@plt+0x3280>
  405b14:	mov	x20, x0
  405b18:	ldrsb	w0, [x19]
  405b1c:	cbnz	w0, 405b3c <scols_reset_iter@plt+0x329c>
  405b20:	mov	x3, x19
  405b24:	mov	x2, x21
  405b28:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405b2c:	add	x1, x1, #0x8a0
  405b30:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  405b34:	ldr	w0, [x0, #832]
  405b38:	bl	4027b0 <errx@plt>
  405b3c:	mov	w2, #0xa                   	// #10
  405b40:	add	x1, sp, #0x38
  405b44:	mov	x0, x19
  405b48:	bl	402630 <strtol@plt>
  405b4c:	ldr	w1, [x20]
  405b50:	cbnz	w1, 405b7c <scols_reset_iter@plt+0x32dc>
  405b54:	ldr	x1, [sp, #56]
  405b58:	cmp	x1, x19
  405b5c:	b.eq	405b20 <scols_reset_iter@plt+0x3280>  // b.none
  405b60:	cbz	x1, 405b6c <scols_reset_iter@plt+0x32cc>
  405b64:	ldrsb	w1, [x1]
  405b68:	cbnz	w1, 405b20 <scols_reset_iter@plt+0x3280>
  405b6c:	ldp	x19, x20, [sp, #16]
  405b70:	ldr	x21, [sp, #32]
  405b74:	ldp	x29, x30, [sp], #64
  405b78:	ret
  405b7c:	cmp	w1, #0x22
  405b80:	b.ne	405b20 <scols_reset_iter@plt+0x3280>  // b.any
  405b84:	mov	x3, x19
  405b88:	mov	x2, x21
  405b8c:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405b90:	add	x1, x1, #0x8a0
  405b94:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  405b98:	ldr	w0, [x0, #832]
  405b9c:	bl	402860 <err@plt>
  405ba0:	stp	x29, x30, [sp, #-64]!
  405ba4:	mov	x29, sp
  405ba8:	stp	x19, x20, [sp, #16]
  405bac:	str	x21, [sp, #32]
  405bb0:	mov	x19, x0
  405bb4:	mov	x21, x1
  405bb8:	str	xzr, [sp, #56]
  405bbc:	bl	402800 <__errno_location@plt>
  405bc0:	str	wzr, [x0]
  405bc4:	cbz	x19, 405bd4 <scols_reset_iter@plt+0x3334>
  405bc8:	mov	x20, x0
  405bcc:	ldrsb	w0, [x19]
  405bd0:	cbnz	w0, 405bf0 <scols_reset_iter@plt+0x3350>
  405bd4:	mov	x3, x19
  405bd8:	mov	x2, x21
  405bdc:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405be0:	add	x1, x1, #0x8a0
  405be4:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  405be8:	ldr	w0, [x0, #832]
  405bec:	bl	4027b0 <errx@plt>
  405bf0:	mov	w2, #0xa                   	// #10
  405bf4:	add	x1, sp, #0x38
  405bf8:	mov	x0, x19
  405bfc:	bl	402280 <strtoul@plt>
  405c00:	ldr	w1, [x20]
  405c04:	cbnz	w1, 405c30 <scols_reset_iter@plt+0x3390>
  405c08:	ldr	x1, [sp, #56]
  405c0c:	cmp	x1, x19
  405c10:	b.eq	405bd4 <scols_reset_iter@plt+0x3334>  // b.none
  405c14:	cbz	x1, 405c20 <scols_reset_iter@plt+0x3380>
  405c18:	ldrsb	w1, [x1]
  405c1c:	cbnz	w1, 405bd4 <scols_reset_iter@plt+0x3334>
  405c20:	ldp	x19, x20, [sp, #16]
  405c24:	ldr	x21, [sp, #32]
  405c28:	ldp	x29, x30, [sp], #64
  405c2c:	ret
  405c30:	cmp	w1, #0x22
  405c34:	b.ne	405bd4 <scols_reset_iter@plt+0x3334>  // b.any
  405c38:	mov	x3, x19
  405c3c:	mov	x2, x21
  405c40:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405c44:	add	x1, x1, #0x8a0
  405c48:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  405c4c:	ldr	w0, [x0, #832]
  405c50:	bl	402860 <err@plt>
  405c54:	stp	x29, x30, [sp, #-48]!
  405c58:	mov	x29, sp
  405c5c:	stp	x19, x20, [sp, #16]
  405c60:	mov	x20, x0
  405c64:	mov	x19, x1
  405c68:	add	x1, sp, #0x28
  405c6c:	bl	4055b0 <scols_reset_iter@plt+0x2d10>
  405c70:	cbz	w0, 405c9c <scols_reset_iter@plt+0x33fc>
  405c74:	bl	402800 <__errno_location@plt>
  405c78:	ldr	w0, [x0]
  405c7c:	cbz	w0, 405cac <scols_reset_iter@plt+0x340c>
  405c80:	mov	x3, x20
  405c84:	mov	x2, x19
  405c88:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405c8c:	add	x1, x1, #0x8a0
  405c90:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  405c94:	ldr	w0, [x0, #832]
  405c98:	bl	402860 <err@plt>
  405c9c:	ldr	x0, [sp, #40]
  405ca0:	ldp	x19, x20, [sp, #16]
  405ca4:	ldp	x29, x30, [sp], #48
  405ca8:	ret
  405cac:	mov	x3, x20
  405cb0:	mov	x2, x19
  405cb4:	adrp	x1, 407000 <scols_reset_iter@plt+0x4760>
  405cb8:	add	x1, x1, #0x8a0
  405cbc:	adrp	x0, 41b000 <scols_reset_iter@plt+0x18760>
  405cc0:	ldr	w0, [x0, #832]
  405cc4:	bl	4027b0 <errx@plt>
  405cc8:	stp	x29, x30, [sp, #-32]!
  405ccc:	mov	x29, sp
  405cd0:	str	x19, [sp, #16]
  405cd4:	mov	x19, x1
  405cd8:	mov	x1, x2
  405cdc:	bl	405a3c <scols_reset_iter@plt+0x319c>
  405ce0:	fcvtzs	d1, d0
  405ce4:	str	d1, [x19]
  405ce8:	scvtf	d1, d1
  405cec:	fsub	d0, d0, d1
  405cf0:	mov	x0, #0x848000000000        	// #145685290680320
  405cf4:	movk	x0, #0x412e, lsl #48
  405cf8:	fmov	d1, x0
  405cfc:	fmul	d0, d0, d1
  405d00:	fcvtzs	d0, d0
  405d04:	str	d0, [x19, #8]
  405d08:	ldr	x19, [sp, #16]
  405d0c:	ldp	x29, x30, [sp], #32
  405d10:	ret
  405d14:	mov	w2, w0
  405d18:	mov	x0, x1
  405d1c:	and	w1, w2, #0xf000
  405d20:	cmp	w1, #0x4, lsl #12
  405d24:	b.eq	405d6c <scols_reset_iter@plt+0x34cc>  // b.none
  405d28:	cmp	w1, #0xa, lsl #12
  405d2c:	b.eq	405e98 <scols_reset_iter@plt+0x35f8>  // b.none
  405d30:	cmp	w1, #0x2, lsl #12
  405d34:	b.eq	405ea8 <scols_reset_iter@plt+0x3608>  // b.none
  405d38:	cmp	w1, #0x6, lsl #12
  405d3c:	b.eq	405eb8 <scols_reset_iter@plt+0x3618>  // b.none
  405d40:	cmp	w1, #0xc, lsl #12
  405d44:	b.eq	405ec8 <scols_reset_iter@plt+0x3628>  // b.none
  405d48:	cmp	w1, #0x1, lsl #12
  405d4c:	b.eq	405ed8 <scols_reset_iter@plt+0x3638>  // b.none
  405d50:	mov	w3, #0x0                   	// #0
  405d54:	cmp	w1, #0x8, lsl #12
  405d58:	b.ne	405d78 <scols_reset_iter@plt+0x34d8>  // b.any
  405d5c:	mov	w1, #0x2d                  	// #45
  405d60:	strb	w1, [x0]
  405d64:	mov	w3, #0x1                   	// #1
  405d68:	b	405d78 <scols_reset_iter@plt+0x34d8>
  405d6c:	mov	w1, #0x64                  	// #100
  405d70:	strb	w1, [x0]
  405d74:	mov	w3, #0x1                   	// #1
  405d78:	tst	x2, #0x100
  405d7c:	mov	w1, #0x72                  	// #114
  405d80:	mov	w4, #0x2d                  	// #45
  405d84:	csel	w1, w1, w4, ne  // ne = any
  405d88:	add	w4, w3, #0x1
  405d8c:	and	x5, x3, #0xffff
  405d90:	strb	w1, [x0, x5]
  405d94:	tst	x2, #0x80
  405d98:	mov	w5, #0x77                  	// #119
  405d9c:	mov	w1, #0x2d                  	// #45
  405da0:	csel	w5, w5, w1, ne  // ne = any
  405da4:	add	w1, w3, #0x2
  405da8:	and	w1, w1, #0xffff
  405dac:	and	x4, x4, #0x3
  405db0:	strb	w5, [x0, x4]
  405db4:	tbz	w2, #11, 405ee8 <scols_reset_iter@plt+0x3648>
  405db8:	tst	x2, #0x40
  405dbc:	mov	w5, #0x73                  	// #115
  405dc0:	mov	w4, #0x53                  	// #83
  405dc4:	csel	w5, w5, w4, ne  // ne = any
  405dc8:	add	w4, w3, #0x3
  405dcc:	and	x1, x1, #0xffff
  405dd0:	strb	w5, [x0, x1]
  405dd4:	tst	x2, #0x20
  405dd8:	mov	w5, #0x72                  	// #114
  405ddc:	mov	w1, #0x2d                  	// #45
  405de0:	csel	w5, w5, w1, ne  // ne = any
  405de4:	add	w1, w3, #0x4
  405de8:	and	x4, x4, #0x7
  405dec:	strb	w5, [x0, x4]
  405df0:	tst	x2, #0x10
  405df4:	mov	w5, #0x77                  	// #119
  405df8:	mov	w4, #0x2d                  	// #45
  405dfc:	csel	w5, w5, w4, ne  // ne = any
  405e00:	add	w4, w3, #0x5
  405e04:	and	w4, w4, #0xffff
  405e08:	and	x1, x1, #0xf
  405e0c:	strb	w5, [x0, x1]
  405e10:	tbz	w2, #10, 405efc <scols_reset_iter@plt+0x365c>
  405e14:	tst	x2, #0x8
  405e18:	mov	w5, #0x73                  	// #115
  405e1c:	mov	w1, #0x53                  	// #83
  405e20:	csel	w5, w5, w1, ne  // ne = any
  405e24:	add	w1, w3, #0x6
  405e28:	and	x4, x4, #0xffff
  405e2c:	strb	w5, [x0, x4]
  405e30:	tst	x2, #0x4
  405e34:	mov	w5, #0x72                  	// #114
  405e38:	mov	w4, #0x2d                  	// #45
  405e3c:	csel	w5, w5, w4, ne  // ne = any
  405e40:	add	w4, w3, #0x7
  405e44:	and	x1, x1, #0xf
  405e48:	strb	w5, [x0, x1]
  405e4c:	tst	x2, #0x2
  405e50:	mov	w5, #0x77                  	// #119
  405e54:	mov	w1, #0x2d                  	// #45
  405e58:	csel	w5, w5, w1, ne  // ne = any
  405e5c:	add	w1, w3, #0x8
  405e60:	and	w1, w1, #0xffff
  405e64:	and	x4, x4, #0xf
  405e68:	strb	w5, [x0, x4]
  405e6c:	tbz	w2, #9, 405f10 <scols_reset_iter@plt+0x3670>
  405e70:	tst	x2, #0x1
  405e74:	mov	w2, #0x74                  	// #116
  405e78:	mov	w4, #0x54                  	// #84
  405e7c:	csel	w2, w2, w4, ne  // ne = any
  405e80:	and	x1, x1, #0xffff
  405e84:	strb	w2, [x0, x1]
  405e88:	add	w3, w3, #0x9
  405e8c:	and	x3, x3, #0xffff
  405e90:	strb	wzr, [x0, x3]
  405e94:	ret
  405e98:	mov	w1, #0x6c                  	// #108
  405e9c:	strb	w1, [x0]
  405ea0:	mov	w3, #0x1                   	// #1
  405ea4:	b	405d78 <scols_reset_iter@plt+0x34d8>
  405ea8:	mov	w1, #0x63                  	// #99
  405eac:	strb	w1, [x0]
  405eb0:	mov	w3, #0x1                   	// #1
  405eb4:	b	405d78 <scols_reset_iter@plt+0x34d8>
  405eb8:	mov	w1, #0x62                  	// #98
  405ebc:	strb	w1, [x0]
  405ec0:	mov	w3, #0x1                   	// #1
  405ec4:	b	405d78 <scols_reset_iter@plt+0x34d8>
  405ec8:	mov	w1, #0x73                  	// #115
  405ecc:	strb	w1, [x0]
  405ed0:	mov	w3, #0x1                   	// #1
  405ed4:	b	405d78 <scols_reset_iter@plt+0x34d8>
  405ed8:	mov	w1, #0x70                  	// #112
  405edc:	strb	w1, [x0]
  405ee0:	mov	w3, #0x1                   	// #1
  405ee4:	b	405d78 <scols_reset_iter@plt+0x34d8>
  405ee8:	tst	x2, #0x40
  405eec:	mov	w5, #0x78                  	// #120
  405ef0:	mov	w4, #0x2d                  	// #45
  405ef4:	csel	w5, w5, w4, ne  // ne = any
  405ef8:	b	405dc8 <scols_reset_iter@plt+0x3528>
  405efc:	tst	x2, #0x8
  405f00:	mov	w5, #0x78                  	// #120
  405f04:	mov	w1, #0x2d                  	// #45
  405f08:	csel	w5, w5, w1, ne  // ne = any
  405f0c:	b	405e24 <scols_reset_iter@plt+0x3584>
  405f10:	tst	x2, #0x1
  405f14:	mov	w2, #0x78                  	// #120
  405f18:	mov	w4, #0x2d                  	// #45
  405f1c:	csel	w2, w2, w4, ne  // ne = any
  405f20:	b	405e80 <scols_reset_iter@plt+0x35e0>
  405f24:	stp	x29, x30, [sp, #-80]!
  405f28:	mov	x29, sp
  405f2c:	stp	x19, x20, [sp, #16]
  405f30:	add	x5, sp, #0x28
  405f34:	tbz	w0, #1, 405f44 <scols_reset_iter@plt+0x36a4>
  405f38:	mov	w2, #0x20                  	// #32
  405f3c:	strb	w2, [sp, #40]
  405f40:	add	x5, sp, #0x29
  405f44:	cmp	x1, #0x3ff
  405f48:	b.ls	4060d8 <scols_reset_iter@plt+0x3838>  // b.plast
  405f4c:	mov	x2, #0xfffff               	// #1048575
  405f50:	cmp	x1, x2
  405f54:	b.ls	405ff0 <scols_reset_iter@plt+0x3750>  // b.plast
  405f58:	mov	x2, #0x3fffffff            	// #1073741823
  405f5c:	cmp	x1, x2
  405f60:	b.ls	405ff8 <scols_reset_iter@plt+0x3758>  // b.plast
  405f64:	mov	x2, #0xffffffffff          	// #1099511627775
  405f68:	cmp	x1, x2
  405f6c:	b.ls	406000 <scols_reset_iter@plt+0x3760>  // b.plast
  405f70:	mov	x2, #0x3ffffffffffff       	// #1125899906842623
  405f74:	cmp	x1, x2
  405f78:	b.ls	406008 <scols_reset_iter@plt+0x3768>  // b.plast
  405f7c:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  405f80:	cmp	x1, x2
  405f84:	mov	w19, #0x3c                  	// #60
  405f88:	mov	w2, #0x46                  	// #70
  405f8c:	csel	w19, w19, w2, ls  // ls = plast
  405f90:	sub	w4, w19, #0xa
  405f94:	mov	w3, #0x6667                	// #26215
  405f98:	movk	w3, #0x6666, lsl #16
  405f9c:	smull	x3, w4, w3
  405fa0:	asr	x3, x3, #34
  405fa4:	sub	w3, w3, w4, asr #31
  405fa8:	adrp	x2, 408000 <scols_reset_iter@plt+0x5760>
  405fac:	add	x2, x2, #0x8f8
  405fb0:	ldrsb	w3, [x2, w3, sxtw]
  405fb4:	lsr	x20, x1, x4
  405fb8:	mov	x2, #0xffffffffffffffff    	// #-1
  405fbc:	lsl	x2, x2, x4
  405fc0:	bic	x1, x1, x2
  405fc4:	strb	w3, [x5]
  405fc8:	and	w2, w0, #0x1
  405fcc:	cmp	w3, #0x42
  405fd0:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  405fd4:	b.eq	4060ec <scols_reset_iter@plt+0x384c>  // b.none
  405fd8:	mov	w2, #0x69                  	// #105
  405fdc:	strb	w2, [x5, #1]
  405fe0:	add	x2, x5, #0x3
  405fe4:	mov	w3, #0x42                  	// #66
  405fe8:	strb	w3, [x5, #2]
  405fec:	b	4060f0 <scols_reset_iter@plt+0x3850>
  405ff0:	mov	w19, #0x14                  	// #20
  405ff4:	b	405f90 <scols_reset_iter@plt+0x36f0>
  405ff8:	mov	w19, #0x1e                  	// #30
  405ffc:	b	405f90 <scols_reset_iter@plt+0x36f0>
  406000:	mov	w19, #0x28                  	// #40
  406004:	b	405f90 <scols_reset_iter@plt+0x36f0>
  406008:	mov	w19, #0x32                  	// #50
  40600c:	b	405f90 <scols_reset_iter@plt+0x36f0>
  406010:	sub	w19, w19, #0x14
  406014:	lsr	x19, x1, x19
  406018:	add	x19, x19, #0x32
  40601c:	lsr	x19, x19, #2
  406020:	mov	x0, #0xf5c3                	// #62915
  406024:	movk	x0, #0x5c28, lsl #16
  406028:	movk	x0, #0xc28f, lsl #32
  40602c:	movk	x0, #0x28f5, lsl #48
  406030:	umulh	x19, x19, x0
  406034:	lsr	x19, x19, #2
  406038:	cmp	x19, #0xa
  40603c:	b.eq	40608c <scols_reset_iter@plt+0x37ec>  // b.none
  406040:	cbz	x19, 406090 <scols_reset_iter@plt+0x37f0>
  406044:	bl	4023d0 <localeconv@plt>
  406048:	cbz	x0, 4060c0 <scols_reset_iter@plt+0x3820>
  40604c:	ldr	x4, [x0]
  406050:	cbz	x4, 4060cc <scols_reset_iter@plt+0x382c>
  406054:	ldrsb	w1, [x4]
  406058:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  40605c:	add	x0, x0, #0x8f0
  406060:	cmp	w1, #0x0
  406064:	csel	x4, x0, x4, eq  // eq = none
  406068:	add	x6, sp, #0x28
  40606c:	mov	x5, x19
  406070:	mov	w3, w20
  406074:	adrp	x2, 408000 <scols_reset_iter@plt+0x5760>
  406078:	add	x2, x2, #0x900
  40607c:	mov	x1, #0x20                  	// #32
  406080:	add	x0, sp, #0x30
  406084:	bl	4023c0 <snprintf@plt>
  406088:	b	4060ac <scols_reset_iter@plt+0x380c>
  40608c:	add	w20, w20, #0x1
  406090:	add	x4, sp, #0x28
  406094:	mov	w3, w20
  406098:	adrp	x2, 408000 <scols_reset_iter@plt+0x5760>
  40609c:	add	x2, x2, #0x910
  4060a0:	mov	x1, #0x20                  	// #32
  4060a4:	add	x0, sp, #0x30
  4060a8:	bl	4023c0 <snprintf@plt>
  4060ac:	add	x0, sp, #0x30
  4060b0:	bl	402520 <strdup@plt>
  4060b4:	ldp	x19, x20, [sp, #16]
  4060b8:	ldp	x29, x30, [sp], #80
  4060bc:	ret
  4060c0:	adrp	x4, 408000 <scols_reset_iter@plt+0x5760>
  4060c4:	add	x4, x4, #0x8f0
  4060c8:	b	406068 <scols_reset_iter@plt+0x37c8>
  4060cc:	adrp	x4, 408000 <scols_reset_iter@plt+0x5760>
  4060d0:	add	x4, x4, #0x8f0
  4060d4:	b	406068 <scols_reset_iter@plt+0x37c8>
  4060d8:	mov	w20, w1
  4060dc:	mov	w1, #0x42                  	// #66
  4060e0:	strb	w1, [x5]
  4060e4:	mov	w19, #0xa                   	// #10
  4060e8:	mov	x1, #0x0                   	// #0
  4060ec:	add	x2, x5, #0x1
  4060f0:	strb	wzr, [x2]
  4060f4:	cbz	x1, 406090 <scols_reset_iter@plt+0x37f0>
  4060f8:	tbz	w0, #2, 406010 <scols_reset_iter@plt+0x3770>
  4060fc:	sub	w19, w19, #0x14
  406100:	lsr	x19, x1, x19
  406104:	add	x19, x19, #0x5
  406108:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  40610c:	movk	x0, #0xcccd
  406110:	umulh	x19, x19, x0
  406114:	lsr	x19, x19, #3
  406118:	umulh	x0, x19, x0
  40611c:	lsr	x0, x0, #3
  406120:	add	x0, x0, x0, lsl #2
  406124:	cmp	x19, x0, lsl #1
  406128:	b.ne	406040 <scols_reset_iter@plt+0x37a0>  // b.any
  40612c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  406130:	movk	x0, #0xcccd
  406134:	umulh	x19, x19, x0
  406138:	lsr	x19, x19, #3
  40613c:	b	406040 <scols_reset_iter@plt+0x37a0>
  406140:	cbz	x0, 406220 <scols_reset_iter@plt+0x3980>
  406144:	stp	x29, x30, [sp, #-64]!
  406148:	mov	x29, sp
  40614c:	stp	x19, x20, [sp, #16]
  406150:	stp	x21, x22, [sp, #32]
  406154:	stp	x23, x24, [sp, #48]
  406158:	mov	x19, x0
  40615c:	mov	x24, x1
  406160:	mov	x22, x2
  406164:	mov	x23, x3
  406168:	ldrsb	w4, [x0]
  40616c:	cbz	w4, 406228 <scols_reset_iter@plt+0x3988>
  406170:	cmp	x1, #0x0
  406174:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  406178:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  40617c:	b.eq	406230 <scols_reset_iter@plt+0x3990>  // b.none
  406180:	mov	x21, #0x0                   	// #0
  406184:	mov	x0, #0x0                   	// #0
  406188:	b	4061e0 <scols_reset_iter@plt+0x3940>
  40618c:	ldrsb	w1, [x19, #1]
  406190:	mov	x20, x19
  406194:	cbnz	w1, 40619c <scols_reset_iter@plt+0x38fc>
  406198:	add	x20, x19, #0x1
  40619c:	cmp	x0, #0x0
  4061a0:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  4061a4:	b.eq	4061d8 <scols_reset_iter@plt+0x3938>  // b.none
  4061a8:	cmp	x0, x20
  4061ac:	b.cs	406240 <scols_reset_iter@plt+0x39a0>  // b.hs, b.nlast
  4061b0:	sub	x1, x20, x0
  4061b4:	blr	x23
  4061b8:	cmn	w0, #0x1
  4061bc:	b.eq	40620c <scols_reset_iter@plt+0x396c>  // b.none
  4061c0:	add	x1, x21, #0x1
  4061c4:	str	w0, [x24, x21, lsl #2]
  4061c8:	ldrsb	w0, [x20]
  4061cc:	cbz	w0, 406204 <scols_reset_iter@plt+0x3964>
  4061d0:	mov	x21, x1
  4061d4:	mov	x0, #0x0                   	// #0
  4061d8:	ldrsb	w4, [x19, #1]!
  4061dc:	cbz	w4, 406208 <scols_reset_iter@plt+0x3968>
  4061e0:	cmp	x22, x21
  4061e4:	b.ls	406238 <scols_reset_iter@plt+0x3998>  // b.plast
  4061e8:	cmp	x0, #0x0
  4061ec:	csel	x0, x0, x19, ne  // ne = any
  4061f0:	cmp	w4, #0x2c
  4061f4:	b.eq	40618c <scols_reset_iter@plt+0x38ec>  // b.none
  4061f8:	ldrsb	w1, [x19, #1]
  4061fc:	cbz	w1, 406198 <scols_reset_iter@plt+0x38f8>
  406200:	b	4061d8 <scols_reset_iter@plt+0x3938>
  406204:	mov	x21, x1
  406208:	mov	w0, w21
  40620c:	ldp	x19, x20, [sp, #16]
  406210:	ldp	x21, x22, [sp, #32]
  406214:	ldp	x23, x24, [sp, #48]
  406218:	ldp	x29, x30, [sp], #64
  40621c:	ret
  406220:	mov	w0, #0xffffffff            	// #-1
  406224:	ret
  406228:	mov	w0, #0xffffffff            	// #-1
  40622c:	b	40620c <scols_reset_iter@plt+0x396c>
  406230:	mov	w0, #0xffffffff            	// #-1
  406234:	b	40620c <scols_reset_iter@plt+0x396c>
  406238:	mov	w0, #0xfffffffe            	// #-2
  40623c:	b	40620c <scols_reset_iter@plt+0x396c>
  406240:	mov	w0, #0xffffffff            	// #-1
  406244:	b	40620c <scols_reset_iter@plt+0x396c>
  406248:	cbz	x0, 4062c0 <scols_reset_iter@plt+0x3a20>
  40624c:	stp	x29, x30, [sp, #-32]!
  406250:	mov	x29, sp
  406254:	str	x19, [sp, #16]
  406258:	mov	x19, x3
  40625c:	mov	x3, x4
  406260:	ldrsb	w4, [x0]
  406264:	cmp	x19, #0x0
  406268:	ccmp	w4, #0x0, #0x4, ne  // ne = any
  40626c:	b.eq	4062c8 <scols_reset_iter@plt+0x3a28>  // b.none
  406270:	ldr	x5, [x19]
  406274:	cmp	x5, x2
  406278:	b.hi	4062d0 <scols_reset_iter@plt+0x3a30>  // b.pmore
  40627c:	cmp	w4, #0x2b
  406280:	b.eq	4062b8 <scols_reset_iter@plt+0x3a18>  // b.none
  406284:	str	xzr, [x19]
  406288:	ldr	x4, [x19]
  40628c:	sub	x2, x2, x4
  406290:	add	x1, x1, x4, lsl #2
  406294:	bl	406140 <scols_reset_iter@plt+0x38a0>
  406298:	cmp	w0, #0x0
  40629c:	b.le	4062ac <scols_reset_iter@plt+0x3a0c>
  4062a0:	ldr	x1, [x19]
  4062a4:	add	x1, x1, w0, sxtw
  4062a8:	str	x1, [x19]
  4062ac:	ldr	x19, [sp, #16]
  4062b0:	ldp	x29, x30, [sp], #32
  4062b4:	ret
  4062b8:	add	x0, x0, #0x1
  4062bc:	b	406288 <scols_reset_iter@plt+0x39e8>
  4062c0:	mov	w0, #0xffffffff            	// #-1
  4062c4:	ret
  4062c8:	mov	w0, #0xffffffff            	// #-1
  4062cc:	b	4062ac <scols_reset_iter@plt+0x3a0c>
  4062d0:	mov	w0, #0xffffffff            	// #-1
  4062d4:	b	4062ac <scols_reset_iter@plt+0x3a0c>
  4062d8:	cmp	x2, #0x0
  4062dc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4062e0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4062e4:	b.eq	4063c0 <scols_reset_iter@plt+0x3b20>  // b.none
  4062e8:	stp	x29, x30, [sp, #-64]!
  4062ec:	mov	x29, sp
  4062f0:	stp	x19, x20, [sp, #16]
  4062f4:	stp	x21, x22, [sp, #32]
  4062f8:	str	x23, [sp, #48]
  4062fc:	mov	x19, x0
  406300:	mov	x21, x1
  406304:	mov	x22, x2
  406308:	mov	x0, #0x0                   	// #0
  40630c:	mov	w23, #0x1                   	// #1
  406310:	b	406384 <scols_reset_iter@plt+0x3ae4>
  406314:	ldrsb	w1, [x19, #1]
  406318:	mov	x20, x19
  40631c:	cbnz	w1, 406324 <scols_reset_iter@plt+0x3a84>
  406320:	add	x20, x19, #0x1
  406324:	cmp	x0, #0x0
  406328:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  40632c:	b.eq	406380 <scols_reset_iter@plt+0x3ae0>  // b.none
  406330:	cmp	x0, x20
  406334:	b.cs	4063c8 <scols_reset_iter@plt+0x3b28>  // b.hs, b.nlast
  406338:	sub	x1, x20, x0
  40633c:	blr	x22
  406340:	tbnz	w0, #31, 4063ac <scols_reset_iter@plt+0x3b0c>
  406344:	add	w1, w0, #0x7
  406348:	cmp	w0, #0x0
  40634c:	csel	w1, w1, w0, lt  // lt = tstop
  406350:	asr	w1, w1, #3
  406354:	negs	w3, w0
  406358:	and	w0, w0, #0x7
  40635c:	and	w3, w3, #0x7
  406360:	csneg	w0, w0, w3, mi  // mi = first
  406364:	lsl	w3, w23, w0
  406368:	ldrb	w0, [x21, w1, sxtw]
  40636c:	orr	w3, w3, w0
  406370:	strb	w3, [x21, w1, sxtw]
  406374:	ldrsb	w0, [x20]
  406378:	cbz	w0, 4063d0 <scols_reset_iter@plt+0x3b30>
  40637c:	mov	x0, #0x0                   	// #0
  406380:	add	x19, x19, #0x1
  406384:	ldrsb	w1, [x19]
  406388:	cbz	w1, 4063a8 <scols_reset_iter@plt+0x3b08>
  40638c:	cmp	x0, #0x0
  406390:	csel	x0, x0, x19, ne  // ne = any
  406394:	cmp	w1, #0x2c
  406398:	b.eq	406314 <scols_reset_iter@plt+0x3a74>  // b.none
  40639c:	ldrsb	w1, [x19, #1]
  4063a0:	cbz	w1, 406320 <scols_reset_iter@plt+0x3a80>
  4063a4:	b	406380 <scols_reset_iter@plt+0x3ae0>
  4063a8:	mov	w0, #0x0                   	// #0
  4063ac:	ldp	x19, x20, [sp, #16]
  4063b0:	ldp	x21, x22, [sp, #32]
  4063b4:	ldr	x23, [sp, #48]
  4063b8:	ldp	x29, x30, [sp], #64
  4063bc:	ret
  4063c0:	mov	w0, #0xffffffea            	// #-22
  4063c4:	ret
  4063c8:	mov	w0, #0xffffffff            	// #-1
  4063cc:	b	4063ac <scols_reset_iter@plt+0x3b0c>
  4063d0:	mov	w0, #0x0                   	// #0
  4063d4:	b	4063ac <scols_reset_iter@plt+0x3b0c>
  4063d8:	cmp	x2, #0x0
  4063dc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4063e0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4063e4:	b.eq	406490 <scols_reset_iter@plt+0x3bf0>  // b.none
  4063e8:	stp	x29, x30, [sp, #-48]!
  4063ec:	mov	x29, sp
  4063f0:	stp	x19, x20, [sp, #16]
  4063f4:	stp	x21, x22, [sp, #32]
  4063f8:	mov	x19, x0
  4063fc:	mov	x21, x1
  406400:	mov	x22, x2
  406404:	mov	x0, #0x0                   	// #0
  406408:	b	406458 <scols_reset_iter@plt+0x3bb8>
  40640c:	ldrsb	w1, [x19, #1]
  406410:	mov	x20, x19
  406414:	cbnz	w1, 40641c <scols_reset_iter@plt+0x3b7c>
  406418:	add	x20, x19, #0x1
  40641c:	cmp	x0, #0x0
  406420:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  406424:	b.eq	406454 <scols_reset_iter@plt+0x3bb4>  // b.none
  406428:	cmp	x0, x20
  40642c:	b.cs	406498 <scols_reset_iter@plt+0x3bf8>  // b.hs, b.nlast
  406430:	sub	x1, x20, x0
  406434:	blr	x22
  406438:	tbnz	x0, #63, 406480 <scols_reset_iter@plt+0x3be0>
  40643c:	ldr	x3, [x21]
  406440:	orr	x0, x3, x0
  406444:	str	x0, [x21]
  406448:	ldrsb	w0, [x20]
  40644c:	cbz	w0, 4064a0 <scols_reset_iter@plt+0x3c00>
  406450:	mov	x0, #0x0                   	// #0
  406454:	add	x19, x19, #0x1
  406458:	ldrsb	w3, [x19]
  40645c:	cbz	w3, 40647c <scols_reset_iter@plt+0x3bdc>
  406460:	cmp	x0, #0x0
  406464:	csel	x0, x0, x19, ne  // ne = any
  406468:	cmp	w3, #0x2c
  40646c:	b.eq	40640c <scols_reset_iter@plt+0x3b6c>  // b.none
  406470:	ldrsb	w1, [x19, #1]
  406474:	cbz	w1, 406418 <scols_reset_iter@plt+0x3b78>
  406478:	b	406454 <scols_reset_iter@plt+0x3bb4>
  40647c:	mov	w0, #0x0                   	// #0
  406480:	ldp	x19, x20, [sp, #16]
  406484:	ldp	x21, x22, [sp, #32]
  406488:	ldp	x29, x30, [sp], #48
  40648c:	ret
  406490:	mov	w0, #0xffffffea            	// #-22
  406494:	ret
  406498:	mov	w0, #0xffffffff            	// #-1
  40649c:	b	406480 <scols_reset_iter@plt+0x3be0>
  4064a0:	mov	w0, #0x0                   	// #0
  4064a4:	b	406480 <scols_reset_iter@plt+0x3be0>
  4064a8:	stp	x29, x30, [sp, #-80]!
  4064ac:	mov	x29, sp
  4064b0:	str	xzr, [sp, #72]
  4064b4:	cbz	x0, 406600 <scols_reset_iter@plt+0x3d60>
  4064b8:	stp	x19, x20, [sp, #16]
  4064bc:	stp	x21, x22, [sp, #32]
  4064c0:	str	x23, [sp, #48]
  4064c4:	mov	x19, x0
  4064c8:	mov	x23, x1
  4064cc:	mov	x20, x2
  4064d0:	mov	w21, w3
  4064d4:	str	w3, [x1]
  4064d8:	str	w3, [x2]
  4064dc:	bl	402800 <__errno_location@plt>
  4064e0:	mov	x22, x0
  4064e4:	str	wzr, [x0]
  4064e8:	ldrsb	w0, [x19]
  4064ec:	cmp	w0, #0x3a
  4064f0:	b.eq	40654c <scols_reset_iter@plt+0x3cac>  // b.none
  4064f4:	mov	w2, #0xa                   	// #10
  4064f8:	add	x1, sp, #0x48
  4064fc:	mov	x0, x19
  406500:	bl	402630 <strtol@plt>
  406504:	str	w0, [x23]
  406508:	str	w0, [x20]
  40650c:	ldr	w0, [x22]
  406510:	cbnz	w0, 406630 <scols_reset_iter@plt+0x3d90>
  406514:	ldr	x1, [sp, #72]
  406518:	cmp	x1, #0x0
  40651c:	ccmp	x1, x19, #0x4, ne  // ne = any
  406520:	b.eq	406644 <scols_reset_iter@plt+0x3da4>  // b.none
  406524:	ldrsb	w2, [x1]
  406528:	cmp	w2, #0x3a
  40652c:	b.eq	406594 <scols_reset_iter@plt+0x3cf4>  // b.none
  406530:	cmp	w2, #0x2d
  406534:	b.eq	4065b0 <scols_reset_iter@plt+0x3d10>  // b.none
  406538:	ldp	x19, x20, [sp, #16]
  40653c:	ldp	x21, x22, [sp, #32]
  406540:	ldr	x23, [sp, #48]
  406544:	ldp	x29, x30, [sp], #80
  406548:	ret
  40654c:	add	x19, x19, #0x1
  406550:	mov	w2, #0xa                   	// #10
  406554:	add	x1, sp, #0x48
  406558:	mov	x0, x19
  40655c:	bl	402630 <strtol@plt>
  406560:	str	w0, [x20]
  406564:	ldr	w0, [x22]
  406568:	cbnz	w0, 406608 <scols_reset_iter@plt+0x3d68>
  40656c:	ldr	x0, [sp, #72]
  406570:	cbz	x0, 40661c <scols_reset_iter@plt+0x3d7c>
  406574:	ldrsb	w1, [x0]
  406578:	cmp	w1, #0x0
  40657c:	ccmp	x0, x19, #0x4, eq  // eq = none
  406580:	csetm	w0, eq  // eq = none
  406584:	ldp	x19, x20, [sp, #16]
  406588:	ldp	x21, x22, [sp, #32]
  40658c:	ldr	x23, [sp, #48]
  406590:	b	406544 <scols_reset_iter@plt+0x3ca4>
  406594:	ldrsb	w2, [x1, #1]
  406598:	cbnz	w2, 4065b0 <scols_reset_iter@plt+0x3d10>
  40659c:	str	w21, [x20]
  4065a0:	ldp	x19, x20, [sp, #16]
  4065a4:	ldp	x21, x22, [sp, #32]
  4065a8:	ldr	x23, [sp, #48]
  4065ac:	b	406544 <scols_reset_iter@plt+0x3ca4>
  4065b0:	add	x19, x1, #0x1
  4065b4:	str	xzr, [sp, #72]
  4065b8:	str	wzr, [x22]
  4065bc:	mov	w2, #0xa                   	// #10
  4065c0:	add	x1, sp, #0x48
  4065c4:	mov	x0, x19
  4065c8:	bl	402630 <strtol@plt>
  4065cc:	str	w0, [x20]
  4065d0:	ldr	w0, [x22]
  4065d4:	cbnz	w0, 406658 <scols_reset_iter@plt+0x3db8>
  4065d8:	ldr	x0, [sp, #72]
  4065dc:	cbz	x0, 40666c <scols_reset_iter@plt+0x3dcc>
  4065e0:	ldrsb	w1, [x0]
  4065e4:	cmp	w1, #0x0
  4065e8:	ccmp	x0, x19, #0x4, eq  // eq = none
  4065ec:	csetm	w0, eq  // eq = none
  4065f0:	ldp	x19, x20, [sp, #16]
  4065f4:	ldp	x21, x22, [sp, #32]
  4065f8:	ldr	x23, [sp, #48]
  4065fc:	b	406544 <scols_reset_iter@plt+0x3ca4>
  406600:	mov	w0, #0x0                   	// #0
  406604:	b	406544 <scols_reset_iter@plt+0x3ca4>
  406608:	mov	w0, #0xffffffff            	// #-1
  40660c:	ldp	x19, x20, [sp, #16]
  406610:	ldp	x21, x22, [sp, #32]
  406614:	ldr	x23, [sp, #48]
  406618:	b	406544 <scols_reset_iter@plt+0x3ca4>
  40661c:	mov	w0, #0xffffffff            	// #-1
  406620:	ldp	x19, x20, [sp, #16]
  406624:	ldp	x21, x22, [sp, #32]
  406628:	ldr	x23, [sp, #48]
  40662c:	b	406544 <scols_reset_iter@plt+0x3ca4>
  406630:	mov	w0, #0xffffffff            	// #-1
  406634:	ldp	x19, x20, [sp, #16]
  406638:	ldp	x21, x22, [sp, #32]
  40663c:	ldr	x23, [sp, #48]
  406640:	b	406544 <scols_reset_iter@plt+0x3ca4>
  406644:	mov	w0, #0xffffffff            	// #-1
  406648:	ldp	x19, x20, [sp, #16]
  40664c:	ldp	x21, x22, [sp, #32]
  406650:	ldr	x23, [sp, #48]
  406654:	b	406544 <scols_reset_iter@plt+0x3ca4>
  406658:	mov	w0, #0xffffffff            	// #-1
  40665c:	ldp	x19, x20, [sp, #16]
  406660:	ldp	x21, x22, [sp, #32]
  406664:	ldr	x23, [sp, #48]
  406668:	b	406544 <scols_reset_iter@plt+0x3ca4>
  40666c:	mov	w0, #0xffffffff            	// #-1
  406670:	ldp	x19, x20, [sp, #16]
  406674:	ldp	x21, x22, [sp, #32]
  406678:	ldr	x23, [sp, #48]
  40667c:	b	406544 <scols_reset_iter@plt+0x3ca4>
  406680:	cmp	x0, #0x0
  406684:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  406688:	b.eq	406750 <scols_reset_iter@plt+0x3eb0>  // b.none
  40668c:	stp	x29, x30, [sp, #-80]!
  406690:	mov	x29, sp
  406694:	stp	x19, x20, [sp, #16]
  406698:	stp	x21, x22, [sp, #32]
  40669c:	stp	x23, x24, [sp, #48]
  4066a0:	mov	x20, x1
  4066a4:	add	x24, sp, #0x40
  4066a8:	add	x23, sp, #0x48
  4066ac:	b	4066dc <scols_reset_iter@plt+0x3e3c>
  4066b0:	cmp	x19, #0x0
  4066b4:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  4066b8:	ccmp	x21, x22, #0x0, ne  // ne = any
  4066bc:	b.ne	406738 <scols_reset_iter@plt+0x3e98>  // b.any
  4066c0:	mov	x2, x21
  4066c4:	mov	x1, x20
  4066c8:	mov	x0, x19
  4066cc:	bl	402470 <strncmp@plt>
  4066d0:	cbnz	w0, 406738 <scols_reset_iter@plt+0x3e98>
  4066d4:	add	x0, x19, x21
  4066d8:	add	x20, x20, x22
  4066dc:	mov	x1, x24
  4066e0:	bl	404e20 <scols_reset_iter@plt+0x2580>
  4066e4:	mov	x19, x0
  4066e8:	mov	x1, x23
  4066ec:	mov	x0, x20
  4066f0:	bl	404e20 <scols_reset_iter@plt+0x2580>
  4066f4:	mov	x20, x0
  4066f8:	ldr	x21, [sp, #64]
  4066fc:	ldr	x22, [sp, #72]
  406700:	adds	x0, x21, x22
  406704:	b.eq	406730 <scols_reset_iter@plt+0x3e90>  // b.none
  406708:	cmp	x0, #0x1
  40670c:	b.ne	4066b0 <scols_reset_iter@plt+0x3e10>  // b.any
  406710:	cbz	x19, 406720 <scols_reset_iter@plt+0x3e80>
  406714:	ldrsb	w0, [x19]
  406718:	cmp	w0, #0x2f
  40671c:	b.eq	406730 <scols_reset_iter@plt+0x3e90>  // b.none
  406720:	cbz	x20, 406738 <scols_reset_iter@plt+0x3e98>
  406724:	ldrsb	w0, [x20]
  406728:	cmp	w0, #0x2f
  40672c:	b.ne	4066b0 <scols_reset_iter@plt+0x3e10>  // b.any
  406730:	mov	w0, #0x1                   	// #1
  406734:	b	40673c <scols_reset_iter@plt+0x3e9c>
  406738:	mov	w0, #0x0                   	// #0
  40673c:	ldp	x19, x20, [sp, #16]
  406740:	ldp	x21, x22, [sp, #32]
  406744:	ldp	x23, x24, [sp, #48]
  406748:	ldp	x29, x30, [sp], #80
  40674c:	ret
  406750:	mov	w0, #0x0                   	// #0
  406754:	ret
  406758:	stp	x29, x30, [sp, #-64]!
  40675c:	mov	x29, sp
  406760:	stp	x19, x20, [sp, #16]
  406764:	mov	x19, x0
  406768:	orr	x0, x0, x1
  40676c:	cbz	x0, 4067f0 <scols_reset_iter@plt+0x3f50>
  406770:	stp	x21, x22, [sp, #32]
  406774:	mov	x21, x1
  406778:	mov	x22, x2
  40677c:	cbz	x19, 406804 <scols_reset_iter@plt+0x3f64>
  406780:	cbz	x1, 40681c <scols_reset_iter@plt+0x3f7c>
  406784:	stp	x23, x24, [sp, #48]
  406788:	mov	x0, x19
  40678c:	bl	402290 <strlen@plt>
  406790:	mov	x23, x0
  406794:	mvn	x0, x0
  406798:	mov	x20, #0x0                   	// #0
  40679c:	cmp	x0, x22
  4067a0:	b.cc	406830 <scols_reset_iter@plt+0x3f90>  // b.lo, b.ul, b.last
  4067a4:	add	x24, x23, x22
  4067a8:	add	x0, x24, #0x1
  4067ac:	bl	402430 <malloc@plt>
  4067b0:	mov	x20, x0
  4067b4:	cbz	x0, 40683c <scols_reset_iter@plt+0x3f9c>
  4067b8:	mov	x2, x23
  4067bc:	mov	x1, x19
  4067c0:	bl	402260 <memcpy@plt>
  4067c4:	mov	x2, x22
  4067c8:	mov	x1, x21
  4067cc:	add	x0, x20, x23
  4067d0:	bl	402260 <memcpy@plt>
  4067d4:	strb	wzr, [x20, x24]
  4067d8:	ldp	x21, x22, [sp, #32]
  4067dc:	ldp	x23, x24, [sp, #48]
  4067e0:	mov	x0, x20
  4067e4:	ldp	x19, x20, [sp, #16]
  4067e8:	ldp	x29, x30, [sp], #64
  4067ec:	ret
  4067f0:	adrp	x0, 407000 <scols_reset_iter@plt+0x4760>
  4067f4:	add	x0, x0, #0xab8
  4067f8:	bl	402520 <strdup@plt>
  4067fc:	mov	x20, x0
  406800:	b	4067e0 <scols_reset_iter@plt+0x3f40>
  406804:	mov	x1, x2
  406808:	mov	x0, x21
  40680c:	bl	4026f0 <strndup@plt>
  406810:	mov	x20, x0
  406814:	ldp	x21, x22, [sp, #32]
  406818:	b	4067e0 <scols_reset_iter@plt+0x3f40>
  40681c:	mov	x0, x19
  406820:	bl	402520 <strdup@plt>
  406824:	mov	x20, x0
  406828:	ldp	x21, x22, [sp, #32]
  40682c:	b	4067e0 <scols_reset_iter@plt+0x3f40>
  406830:	ldp	x21, x22, [sp, #32]
  406834:	ldp	x23, x24, [sp, #48]
  406838:	b	4067e0 <scols_reset_iter@plt+0x3f40>
  40683c:	ldp	x21, x22, [sp, #32]
  406840:	ldp	x23, x24, [sp, #48]
  406844:	b	4067e0 <scols_reset_iter@plt+0x3f40>
  406848:	stp	x29, x30, [sp, #-32]!
  40684c:	mov	x29, sp
  406850:	stp	x19, x20, [sp, #16]
  406854:	mov	x20, x0
  406858:	mov	x19, x1
  40685c:	mov	x2, #0x0                   	// #0
  406860:	cbz	x1, 406870 <scols_reset_iter@plt+0x3fd0>
  406864:	mov	x0, x1
  406868:	bl	402290 <strlen@plt>
  40686c:	mov	x2, x0
  406870:	mov	x1, x19
  406874:	mov	x0, x20
  406878:	bl	406758 <scols_reset_iter@plt+0x3eb8>
  40687c:	ldp	x19, x20, [sp, #16]
  406880:	ldp	x29, x30, [sp], #32
  406884:	ret
  406888:	stp	x29, x30, [sp, #-288]!
  40688c:	mov	x29, sp
  406890:	str	x19, [sp, #16]
  406894:	mov	x19, x0
  406898:	str	x2, [sp, #240]
  40689c:	str	x3, [sp, #248]
  4068a0:	str	x4, [sp, #256]
  4068a4:	str	x5, [sp, #264]
  4068a8:	str	x6, [sp, #272]
  4068ac:	str	x7, [sp, #280]
  4068b0:	str	q0, [sp, #112]
  4068b4:	str	q1, [sp, #128]
  4068b8:	str	q2, [sp, #144]
  4068bc:	str	q3, [sp, #160]
  4068c0:	str	q4, [sp, #176]
  4068c4:	str	q5, [sp, #192]
  4068c8:	str	q6, [sp, #208]
  4068cc:	str	q7, [sp, #224]
  4068d0:	add	x0, sp, #0x120
  4068d4:	str	x0, [sp, #80]
  4068d8:	str	x0, [sp, #88]
  4068dc:	add	x0, sp, #0xf0
  4068e0:	str	x0, [sp, #96]
  4068e4:	mov	w0, #0xffffffd0            	// #-48
  4068e8:	str	w0, [sp, #104]
  4068ec:	mov	w0, #0xffffff80            	// #-128
  4068f0:	str	w0, [sp, #108]
  4068f4:	ldp	x2, x3, [sp, #80]
  4068f8:	stp	x2, x3, [sp, #32]
  4068fc:	ldp	x2, x3, [sp, #96]
  406900:	stp	x2, x3, [sp, #48]
  406904:	add	x2, sp, #0x20
  406908:	add	x0, sp, #0x48
  40690c:	bl	4026c0 <vasprintf@plt>
  406910:	tbnz	w0, #31, 406940 <scols_reset_iter@plt+0x40a0>
  406914:	sxtw	x2, w0
  406918:	ldr	x1, [sp, #72]
  40691c:	mov	x0, x19
  406920:	bl	406758 <scols_reset_iter@plt+0x3eb8>
  406924:	mov	x19, x0
  406928:	ldr	x0, [sp, #72]
  40692c:	bl	402660 <free@plt>
  406930:	mov	x0, x19
  406934:	ldr	x19, [sp, #16]
  406938:	ldp	x29, x30, [sp], #288
  40693c:	ret
  406940:	mov	x19, #0x0                   	// #0
  406944:	b	406930 <scols_reset_iter@plt+0x4090>
  406948:	stp	x29, x30, [sp, #-80]!
  40694c:	mov	x29, sp
  406950:	stp	x19, x20, [sp, #16]
  406954:	stp	x21, x22, [sp, #32]
  406958:	mov	x19, x0
  40695c:	ldr	x21, [x0]
  406960:	ldrsb	w0, [x21]
  406964:	cbz	w0, 406a98 <scols_reset_iter@plt+0x41f8>
  406968:	stp	x23, x24, [sp, #48]
  40696c:	mov	x24, x1
  406970:	mov	x22, x2
  406974:	mov	w23, w3
  406978:	mov	x1, x2
  40697c:	mov	x0, x21
  406980:	bl	402700 <strspn@plt>
  406984:	add	x20, x21, x0
  406988:	ldrsb	w21, [x21, x0]
  40698c:	cbz	w21, 406a04 <scols_reset_iter@plt+0x4164>
  406990:	cbz	w23, 406a68 <scols_reset_iter@plt+0x41c8>
  406994:	mov	w1, w21
  406998:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  40699c:	add	x0, x0, #0x918
  4069a0:	bl	402710 <strchr@plt>
  4069a4:	cbz	x0, 406a24 <scols_reset_iter@plt+0x4184>
  4069a8:	strb	w21, [sp, #72]
  4069ac:	strb	wzr, [sp, #73]
  4069b0:	add	x23, x20, #0x1
  4069b4:	add	x1, sp, #0x48
  4069b8:	mov	x0, x23
  4069bc:	bl	404e94 <scols_reset_iter@plt+0x25f4>
  4069c0:	str	x0, [x24]
  4069c4:	add	x1, x20, x0
  4069c8:	ldrsb	w1, [x1, #1]
  4069cc:	cmp	w1, #0x0
  4069d0:	ccmp	w21, w1, #0x0, ne  // ne = any
  4069d4:	b.ne	406a14 <scols_reset_iter@plt+0x4174>  // b.any
  4069d8:	add	x0, x0, #0x2
  4069dc:	add	x21, x20, x0
  4069e0:	ldrsb	w1, [x20, x0]
  4069e4:	cbz	w1, 4069f4 <scols_reset_iter@plt+0x4154>
  4069e8:	mov	x0, x22
  4069ec:	bl	402710 <strchr@plt>
  4069f0:	cbz	x0, 406a14 <scols_reset_iter@plt+0x4174>
  4069f4:	str	x21, [x19]
  4069f8:	mov	x20, x23
  4069fc:	ldp	x23, x24, [sp, #48]
  406a00:	b	406a84 <scols_reset_iter@plt+0x41e4>
  406a04:	str	x20, [x19]
  406a08:	mov	x20, #0x0                   	// #0
  406a0c:	ldp	x23, x24, [sp, #48]
  406a10:	b	406a84 <scols_reset_iter@plt+0x41e4>
  406a14:	str	x20, [x19]
  406a18:	mov	x20, #0x0                   	// #0
  406a1c:	ldp	x23, x24, [sp, #48]
  406a20:	b	406a84 <scols_reset_iter@plt+0x41e4>
  406a24:	mov	x1, x22
  406a28:	mov	x0, x20
  406a2c:	bl	404e94 <scols_reset_iter@plt+0x25f4>
  406a30:	str	x0, [x24]
  406a34:	add	x21, x20, x0
  406a38:	ldrsb	w1, [x20, x0]
  406a3c:	cbz	w1, 406a4c <scols_reset_iter@plt+0x41ac>
  406a40:	mov	x0, x22
  406a44:	bl	402710 <strchr@plt>
  406a48:	cbz	x0, 406a58 <scols_reset_iter@plt+0x41b8>
  406a4c:	str	x21, [x19]
  406a50:	ldp	x23, x24, [sp, #48]
  406a54:	b	406a84 <scols_reset_iter@plt+0x41e4>
  406a58:	str	x20, [x19]
  406a5c:	mov	x20, x0
  406a60:	ldp	x23, x24, [sp, #48]
  406a64:	b	406a84 <scols_reset_iter@plt+0x41e4>
  406a68:	mov	x1, x22
  406a6c:	mov	x0, x20
  406a70:	bl	4027d0 <strcspn@plt>
  406a74:	str	x0, [x24]
  406a78:	add	x0, x20, x0
  406a7c:	str	x0, [x19]
  406a80:	ldp	x23, x24, [sp, #48]
  406a84:	mov	x0, x20
  406a88:	ldp	x19, x20, [sp, #16]
  406a8c:	ldp	x21, x22, [sp, #32]
  406a90:	ldp	x29, x30, [sp], #80
  406a94:	ret
  406a98:	mov	x20, #0x0                   	// #0
  406a9c:	b	406a84 <scols_reset_iter@plt+0x41e4>
  406aa0:	stp	x29, x30, [sp, #-32]!
  406aa4:	mov	x29, sp
  406aa8:	str	x19, [sp, #16]
  406aac:	mov	x19, x0
  406ab0:	mov	x0, x19
  406ab4:	bl	4024a0 <fgetc@plt>
  406ab8:	cmn	w0, #0x1
  406abc:	b.eq	406ad0 <scols_reset_iter@plt+0x4230>  // b.none
  406ac0:	cmp	w0, #0xa
  406ac4:	b.ne	406ab0 <scols_reset_iter@plt+0x4210>  // b.any
  406ac8:	mov	w0, #0x0                   	// #0
  406acc:	b	406ad4 <scols_reset_iter@plt+0x4234>
  406ad0:	mov	w0, #0x1                   	// #1
  406ad4:	ldr	x19, [sp, #16]
  406ad8:	ldp	x29, x30, [sp], #32
  406adc:	ret
  406ae0:	stp	x29, x30, [sp, #-48]!
  406ae4:	mov	x29, sp
  406ae8:	bl	402810 <getenv@plt>
  406aec:	cbz	x0, 406b60 <scols_reset_iter@plt+0x42c0>
  406af0:	stp	x19, x20, [sp, #16]
  406af4:	mov	x19, x0
  406af8:	str	xzr, [sp, #40]
  406afc:	bl	402800 <__errno_location@plt>
  406b00:	mov	x20, x0
  406b04:	str	wzr, [x0]
  406b08:	mov	w2, #0xa                   	// #10
  406b0c:	add	x1, sp, #0x28
  406b10:	mov	x0, x19
  406b14:	bl	402630 <strtol@plt>
  406b18:	ldr	w1, [x20]
  406b1c:	cbnz	w1, 406b54 <scols_reset_iter@plt+0x42b4>
  406b20:	ldr	x1, [sp, #40]
  406b24:	cbz	x1, 406b54 <scols_reset_iter@plt+0x42b4>
  406b28:	ldrsb	w2, [x1]
  406b2c:	cmp	w2, #0x0
  406b30:	ccmp	x1, x19, #0x0, eq  // eq = none
  406b34:	b.ls	406b54 <scols_reset_iter@plt+0x42b4>  // b.plast
  406b38:	sub	x2, x0, #0x1
  406b3c:	mov	x1, #0x7ffffffe            	// #2147483646
  406b40:	cmp	x2, x1
  406b44:	b.hi	406b54 <scols_reset_iter@plt+0x42b4>  // b.pmore
  406b48:	ldp	x19, x20, [sp, #16]
  406b4c:	ldp	x29, x30, [sp], #48
  406b50:	ret
  406b54:	mov	w0, #0xffffffff            	// #-1
  406b58:	ldp	x19, x20, [sp, #16]
  406b5c:	b	406b4c <scols_reset_iter@plt+0x42ac>
  406b60:	mov	w0, #0xffffffff            	// #-1
  406b64:	b	406b4c <scols_reset_iter@plt+0x42ac>
  406b68:	stp	x29, x30, [sp, #-64]!
  406b6c:	mov	x29, sp
  406b70:	stp	x19, x20, [sp, #16]
  406b74:	str	x21, [sp, #32]
  406b78:	mov	x19, x0
  406b7c:	mov	x20, x1
  406b80:	add	x2, sp, #0x38
  406b84:	mov	x1, #0x5413                	// #21523
  406b88:	mov	w0, #0x1                   	// #1
  406b8c:	bl	402870 <ioctl@plt>
  406b90:	cbnz	w0, 406be0 <scols_reset_iter@plt+0x4340>
  406b94:	ldrh	w0, [sp, #58]
  406b98:	ldrh	w21, [sp, #56]
  406b9c:	cbz	x19, 406ba8 <scols_reset_iter@plt+0x4308>
  406ba0:	cbz	w0, 406bd0 <scols_reset_iter@plt+0x4330>
  406ba4:	str	w0, [x19]
  406ba8:	cbz	x20, 406bb8 <scols_reset_iter@plt+0x4318>
  406bac:	cmp	w21, #0x0
  406bb0:	b.le	406be8 <scols_reset_iter@plt+0x4348>
  406bb4:	str	w21, [x20]
  406bb8:	mov	w0, #0x0                   	// #0
  406bbc:	ldp	x19, x20, [sp, #16]
  406bc0:	ldr	x21, [sp, #32]
  406bc4:	ldp	x29, x30, [sp], #64
  406bc8:	ret
  406bcc:	mov	w21, #0x0                   	// #0
  406bd0:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  406bd4:	add	x0, x0, #0x920
  406bd8:	bl	406ae0 <scols_reset_iter@plt+0x4240>
  406bdc:	b	406ba4 <scols_reset_iter@plt+0x4304>
  406be0:	cbnz	x19, 406bcc <scols_reset_iter@plt+0x432c>
  406be4:	cbz	x20, 406bb8 <scols_reset_iter@plt+0x4318>
  406be8:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  406bec:	add	x0, x0, #0x928
  406bf0:	bl	406ae0 <scols_reset_iter@plt+0x4240>
  406bf4:	mov	w21, w0
  406bf8:	b	406bb4 <scols_reset_iter@plt+0x4314>
  406bfc:	stp	x29, x30, [sp, #-48]!
  406c00:	mov	x29, sp
  406c04:	str	x19, [sp, #16]
  406c08:	mov	w19, w0
  406c0c:	str	wzr, [sp, #44]
  406c10:	mov	x1, #0x0                   	// #0
  406c14:	add	x0, sp, #0x2c
  406c18:	bl	406b68 <scols_reset_iter@plt+0x42c8>
  406c1c:	ldr	w0, [sp, #44]
  406c20:	cmp	w0, #0x0
  406c24:	csel	w0, w0, w19, gt
  406c28:	ldr	x19, [sp, #16]
  406c2c:	ldp	x29, x30, [sp], #48
  406c30:	ret
  406c34:	stp	x29, x30, [sp, #-16]!
  406c38:	mov	x29, sp
  406c3c:	mov	w0, #0x0                   	// #0
  406c40:	bl	402750 <isatty@plt>
  406c44:	mov	w1, #0x0                   	// #0
  406c48:	cbz	w0, 406c58 <scols_reset_iter@plt+0x43b8>
  406c4c:	mov	w0, w1
  406c50:	ldp	x29, x30, [sp], #16
  406c54:	ret
  406c58:	mov	w0, #0x1                   	// #1
  406c5c:	bl	402750 <isatty@plt>
  406c60:	mov	w1, #0x1                   	// #1
  406c64:	cbnz	w0, 406c4c <scols_reset_iter@plt+0x43ac>
  406c68:	mov	w0, #0x2                   	// #2
  406c6c:	bl	402750 <isatty@plt>
  406c70:	cmp	w0, #0x0
  406c74:	mov	w1, #0xffffffea            	// #-22
  406c78:	mov	w0, #0x2                   	// #2
  406c7c:	csel	w1, w1, w0, eq  // eq = none
  406c80:	b	406c4c <scols_reset_iter@plt+0x43ac>
  406c84:	stp	x29, x30, [sp, #-48]!
  406c88:	mov	x29, sp
  406c8c:	stp	x19, x20, [sp, #16]
  406c90:	stp	x21, x22, [sp, #32]
  406c94:	mov	x22, x0
  406c98:	mov	x19, x1
  406c9c:	mov	x21, x2
  406ca0:	cbz	x1, 406ca8 <scols_reset_iter@plt+0x4408>
  406ca4:	str	xzr, [x1]
  406ca8:	cbz	x22, 406cb0 <scols_reset_iter@plt+0x4410>
  406cac:	str	xzr, [x22]
  406cb0:	cbz	x21, 406cb8 <scols_reset_iter@plt+0x4418>
  406cb4:	str	xzr, [x21]
  406cb8:	bl	406c34 <scols_reset_iter@plt+0x4394>
  406cbc:	tbnz	w0, #31, 406d44 <scols_reset_iter@plt+0x44a4>
  406cc0:	bl	402360 <ttyname@plt>
  406cc4:	mov	x20, x0
  406cc8:	cbz	x0, 406d54 <scols_reset_iter@plt+0x44b4>
  406ccc:	cbz	x22, 406cd4 <scols_reset_iter@plt+0x4434>
  406cd0:	str	x0, [x22]
  406cd4:	orr	x1, x19, x21
  406cd8:	mov	w0, #0x0                   	// #0
  406cdc:	cbz	x1, 406d44 <scols_reset_iter@plt+0x44a4>
  406ce0:	mov	x2, #0x5                   	// #5
  406ce4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  406ce8:	add	x1, x1, #0x930
  406cec:	mov	x0, x20
  406cf0:	bl	402470 <strncmp@plt>
  406cf4:	add	x1, x20, #0x5
  406cf8:	cmp	w0, #0x0
  406cfc:	csel	x20, x1, x20, eq  // eq = none
  406d00:	cbz	x19, 406d08 <scols_reset_iter@plt+0x4468>
  406d04:	str	x20, [x19]
  406d08:	mov	w0, #0x0                   	// #0
  406d0c:	cbnz	x21, 406d18 <scols_reset_iter@plt+0x4478>
  406d10:	b	406d44 <scols_reset_iter@plt+0x44a4>
  406d14:	add	x20, x20, #0x1
  406d18:	ldrsb	w19, [x20]
  406d1c:	cbz	w19, 406d40 <scols_reset_iter@plt+0x44a0>
  406d20:	bl	402620 <__ctype_b_loc@plt>
  406d24:	sxtb	x19, w19
  406d28:	ldr	x0, [x0]
  406d2c:	ldrh	w0, [x0, x19, lsl #1]
  406d30:	tbz	w0, #11, 406d14 <scols_reset_iter@plt+0x4474>
  406d34:	str	x20, [x21]
  406d38:	mov	w0, #0x0                   	// #0
  406d3c:	b	406d44 <scols_reset_iter@plt+0x44a4>
  406d40:	mov	w0, #0x0                   	// #0
  406d44:	ldp	x19, x20, [sp, #16]
  406d48:	ldp	x21, x22, [sp, #32]
  406d4c:	ldp	x29, x30, [sp], #48
  406d50:	ret
  406d54:	mov	w0, #0xffffffff            	// #-1
  406d58:	b	406d44 <scols_reset_iter@plt+0x44a4>
  406d5c:	stp	x29, x30, [sp, #-32]!
  406d60:	mov	x29, sp
  406d64:	str	x19, [sp, #16]
  406d68:	mov	x19, x0
  406d6c:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  406d70:	add	x0, x0, #0x938
  406d74:	bl	402810 <getenv@plt>
  406d78:	str	x0, [x19]
  406d7c:	cmp	x0, #0x0
  406d80:	mov	w0, #0xffffffea            	// #-22
  406d84:	csel	w0, w0, wzr, ne  // ne = any
  406d88:	ldr	x19, [sp, #16]
  406d8c:	ldp	x29, x30, [sp], #32
  406d90:	ret
  406d94:	cbz	x0, 406dd0 <scols_reset_iter@plt+0x4530>
  406d98:	stp	x29, x30, [sp, #-32]!
  406d9c:	mov	x29, sp
  406da0:	stp	x19, x20, [sp, #16]
  406da4:	mov	x20, x0
  406da8:	ldr	x0, [x0]
  406dac:	cbz	x0, 406dc0 <scols_reset_iter@plt+0x4520>
  406db0:	mov	x19, x20
  406db4:	bl	402660 <free@plt>
  406db8:	ldr	x0, [x19, #8]!
  406dbc:	cbnz	x0, 406db4 <scols_reset_iter@plt+0x4514>
  406dc0:	str	xzr, [x20]
  406dc4:	ldp	x19, x20, [sp, #16]
  406dc8:	ldp	x29, x30, [sp], #32
  406dcc:	ret
  406dd0:	ret
  406dd4:	stp	x29, x30, [sp, #-32]!
  406dd8:	mov	x29, sp
  406ddc:	str	x19, [sp, #16]
  406de0:	mov	x19, x0
  406de4:	bl	406d94 <scols_reset_iter@plt+0x44f4>
  406de8:	mov	x0, x19
  406dec:	bl	402660 <free@plt>
  406df0:	mov	x0, #0x0                   	// #0
  406df4:	ldr	x19, [sp, #16]
  406df8:	ldp	x29, x30, [sp], #32
  406dfc:	ret
  406e00:	mov	x1, x0
  406e04:	cbz	x0, 406e24 <scols_reset_iter@plt+0x4584>
  406e08:	ldr	x0, [x0]
  406e0c:	cbz	x0, 406e2c <scols_reset_iter@plt+0x458c>
  406e10:	mov	w0, #0x0                   	// #0
  406e14:	add	w0, w0, #0x1
  406e18:	ldr	x2, [x1, #8]!
  406e1c:	cbnz	x2, 406e14 <scols_reset_iter@plt+0x4574>
  406e20:	ret
  406e24:	mov	w0, #0x0                   	// #0
  406e28:	b	406e20 <scols_reset_iter@plt+0x4580>
  406e2c:	mov	w0, #0x0                   	// #0
  406e30:	b	406e20 <scols_reset_iter@plt+0x4580>
  406e34:	stp	x29, x30, [sp, #-48]!
  406e38:	mov	x29, sp
  406e3c:	stp	x21, x22, [sp, #32]
  406e40:	mov	x21, x0
  406e44:	bl	406e00 <scols_reset_iter@plt+0x4560>
  406e48:	add	w0, w0, #0x1
  406e4c:	lsl	x0, x0, #3
  406e50:	bl	402430 <malloc@plt>
  406e54:	mov	x22, x0
  406e58:	cbz	x0, 406e94 <scols_reset_iter@plt+0x45f4>
  406e5c:	stp	x19, x20, [sp, #16]
  406e60:	cbz	x21, 406eb8 <scols_reset_iter@plt+0x4618>
  406e64:	ldr	x0, [x21]
  406e68:	cbz	x0, 406ec0 <scols_reset_iter@plt+0x4620>
  406e6c:	mov	x20, x22
  406e70:	bl	402520 <strdup@plt>
  406e74:	mov	x19, x0
  406e78:	str	x0, [x20]
  406e7c:	cbz	x0, 406ea4 <scols_reset_iter@plt+0x4604>
  406e80:	add	x20, x20, #0x8
  406e84:	ldr	x0, [x21, #8]!
  406e88:	cbnz	x0, 406e70 <scols_reset_iter@plt+0x45d0>
  406e8c:	str	xzr, [x20]
  406e90:	ldp	x19, x20, [sp, #16]
  406e94:	mov	x0, x22
  406e98:	ldp	x21, x22, [sp, #32]
  406e9c:	ldp	x29, x30, [sp], #48
  406ea0:	ret
  406ea4:	mov	x0, x22
  406ea8:	bl	406dd4 <scols_reset_iter@plt+0x4534>
  406eac:	mov	x22, x19
  406eb0:	ldp	x19, x20, [sp, #16]
  406eb4:	b	406e94 <scols_reset_iter@plt+0x45f4>
  406eb8:	mov	x20, x0
  406ebc:	b	406e8c <scols_reset_iter@plt+0x45ec>
  406ec0:	mov	x20, x22
  406ec4:	b	406e8c <scols_reset_iter@plt+0x45ec>
  406ec8:	stp	x29, x30, [sp, #-112]!
  406ecc:	mov	x29, sp
  406ed0:	stp	x21, x22, [sp, #32]
  406ed4:	str	x25, [sp, #64]
  406ed8:	cbz	x0, 407044 <scols_reset_iter@plt+0x47a4>
  406edc:	stp	x19, x20, [sp, #16]
  406ee0:	stp	x23, x24, [sp, #48]
  406ee4:	mov	x19, x0
  406ee8:	mov	x24, x1
  406eec:	ldr	x20, [x1]
  406ef0:	ldr	w22, [x1, #24]
  406ef4:	cmn	x0, #0x1
  406ef8:	cset	w0, ne  // ne = any
  406efc:	ldp	x2, x3, [x1]
  406f00:	stp	x2, x3, [sp, #80]
  406f04:	ldp	x2, x3, [x1, #16]
  406f08:	stp	x2, x3, [sp, #96]
  406f0c:	ldr	x4, [sp, #88]
  406f10:	b	406f40 <scols_reset_iter@plt+0x46a0>
  406f14:	add	w3, w1, #0x8
  406f18:	str	w3, [sp, #104]
  406f1c:	cmp	w3, #0x0
  406f20:	b.le	406f5c <scols_reset_iter@plt+0x46bc>
  406f24:	add	x1, x2, #0xf
  406f28:	and	x1, x1, #0xfffffffffffffff8
  406f2c:	str	x1, [sp, #80]
  406f30:	ldr	x23, [x2]
  406f34:	cbz	x23, 406f64 <scols_reset_iter@plt+0x46c4>
  406f38:	cmn	x23, #0x1
  406f3c:	cinc	w0, w0, ne  // ne = any
  406f40:	ldr	w1, [sp, #104]
  406f44:	ldr	x2, [sp, #80]
  406f48:	tbnz	w1, #31, 406f14 <scols_reset_iter@plt+0x4674>
  406f4c:	add	x1, x2, #0xf
  406f50:	and	x1, x1, #0xfffffffffffffff8
  406f54:	str	x1, [sp, #80]
  406f58:	b	406f30 <scols_reset_iter@plt+0x4690>
  406f5c:	add	x2, x4, w1, sxtw
  406f60:	b	406f30 <scols_reset_iter@plt+0x4690>
  406f64:	add	w0, w0, #0x1
  406f68:	lsl	x0, x0, #3
  406f6c:	bl	402430 <malloc@plt>
  406f70:	mov	x25, x0
  406f74:	cbz	x0, 40705c <scols_reset_iter@plt+0x47bc>
  406f78:	cmn	x19, #0x1
  406f7c:	b.eq	406f98 <scols_reset_iter@plt+0x46f8>  // b.none
  406f80:	mov	x0, x19
  406f84:	bl	402520 <strdup@plt>
  406f88:	str	x0, [x25]
  406f8c:	cbz	x0, 40702c <scols_reset_iter@plt+0x478c>
  406f90:	mov	w21, #0x1                   	// #1
  406f94:	b	406fe4 <scols_reset_iter@plt+0x4744>
  406f98:	mov	w21, #0x0                   	// #0
  406f9c:	b	406fe4 <scols_reset_iter@plt+0x4744>
  406fa0:	mov	x20, x19
  406fa4:	b	406fe8 <scols_reset_iter@plt+0x4748>
  406fa8:	add	w0, w22, #0x8
  406fac:	cmp	w0, #0x0
  406fb0:	b.le	406ff8 <scols_reset_iter@plt+0x4758>
  406fb4:	add	x19, x20, #0xf
  406fb8:	and	x19, x19, #0xfffffffffffffff8
  406fbc:	mov	w22, w0
  406fc0:	ldr	x0, [x20]
  406fc4:	cbz	x0, 40700c <scols_reset_iter@plt+0x476c>
  406fc8:	cmn	x0, #0x1
  406fcc:	b.eq	406fa0 <scols_reset_iter@plt+0x4700>  // b.none
  406fd0:	bl	402520 <strdup@plt>
  406fd4:	str	x0, [x25, w21, uxtw #3]
  406fd8:	cbz	x0, 40702c <scols_reset_iter@plt+0x478c>
  406fdc:	add	w21, w21, #0x1
  406fe0:	mov	x20, x19
  406fe4:	ldr	x1, [x24, #8]
  406fe8:	tbnz	w22, #31, 406fa8 <scols_reset_iter@plt+0x4708>
  406fec:	add	x19, x20, #0xf
  406ff0:	and	x19, x19, #0xfffffffffffffff8
  406ff4:	b	406fc0 <scols_reset_iter@plt+0x4720>
  406ff8:	add	x2, x1, w22, sxtw
  406ffc:	mov	w22, w0
  407000:	mov	x19, x20
  407004:	mov	x20, x2
  407008:	b	406fc0 <scols_reset_iter@plt+0x4720>
  40700c:	ldp	x19, x20, [sp, #16]
  407010:	ldp	x23, x24, [sp, #48]
  407014:	str	xzr, [x25, w21, uxtw #3]
  407018:	mov	x0, x25
  40701c:	ldp	x21, x22, [sp, #32]
  407020:	ldr	x25, [sp, #64]
  407024:	ldp	x29, x30, [sp], #112
  407028:	ret
  40702c:	mov	x0, x25
  407030:	bl	406dd4 <scols_reset_iter@plt+0x4534>
  407034:	mov	x25, x23
  407038:	ldp	x19, x20, [sp, #16]
  40703c:	ldp	x23, x24, [sp, #48]
  407040:	b	407018 <scols_reset_iter@plt+0x4778>
  407044:	mov	x0, #0x8                   	// #8
  407048:	bl	402430 <malloc@plt>
  40704c:	mov	x25, x0
  407050:	cbz	x0, 407018 <scols_reset_iter@plt+0x4778>
  407054:	mov	w21, #0x0                   	// #0
  407058:	b	407014 <scols_reset_iter@plt+0x4774>
  40705c:	ldp	x19, x20, [sp, #16]
  407060:	ldp	x23, x24, [sp, #48]
  407064:	b	407018 <scols_reset_iter@plt+0x4778>
  407068:	stp	x29, x30, [sp, #-272]!
  40706c:	mov	x29, sp
  407070:	str	x1, [sp, #216]
  407074:	str	x2, [sp, #224]
  407078:	str	x3, [sp, #232]
  40707c:	str	x4, [sp, #240]
  407080:	str	x5, [sp, #248]
  407084:	str	x6, [sp, #256]
  407088:	str	x7, [sp, #264]
  40708c:	str	q0, [sp, #80]
  407090:	str	q1, [sp, #96]
  407094:	str	q2, [sp, #112]
  407098:	str	q3, [sp, #128]
  40709c:	str	q4, [sp, #144]
  4070a0:	str	q5, [sp, #160]
  4070a4:	str	q6, [sp, #176]
  4070a8:	str	q7, [sp, #192]
  4070ac:	add	x1, sp, #0x110
  4070b0:	str	x1, [sp, #48]
  4070b4:	str	x1, [sp, #56]
  4070b8:	add	x1, sp, #0xd0
  4070bc:	str	x1, [sp, #64]
  4070c0:	mov	w1, #0xffffffc8            	// #-56
  4070c4:	str	w1, [sp, #72]
  4070c8:	mov	w1, #0xffffff80            	// #-128
  4070cc:	str	w1, [sp, #76]
  4070d0:	ldp	x2, x3, [sp, #48]
  4070d4:	stp	x2, x3, [sp, #16]
  4070d8:	ldp	x2, x3, [sp, #64]
  4070dc:	stp	x2, x3, [sp, #32]
  4070e0:	add	x1, sp, #0x10
  4070e4:	bl	406ec8 <scols_reset_iter@plt+0x4628>
  4070e8:	ldp	x29, x30, [sp], #272
  4070ec:	ret
  4070f0:	stp	x29, x30, [sp, #-80]!
  4070f4:	mov	x29, sp
  4070f8:	stp	x19, x20, [sp, #16]
  4070fc:	stp	x21, x22, [sp, #32]
  407100:	stp	x23, x24, [sp, #48]
  407104:	cbz	x0, 4071dc <scols_reset_iter@plt+0x493c>
  407108:	mov	x23, x0
  40710c:	mov	x21, x1
  407110:	str	x0, [sp, #72]
  407114:	mov	w3, #0x0                   	// #0
  407118:	mov	x2, x1
  40711c:	add	x1, sp, #0x40
  407120:	add	x0, sp, #0x48
  407124:	bl	406948 <scols_reset_iter@plt+0x40a8>
  407128:	cbz	x0, 4071fc <scols_reset_iter@plt+0x495c>
  40712c:	mov	w19, #0x0                   	// #0
  407130:	add	x22, sp, #0x40
  407134:	add	x20, sp, #0x48
  407138:	add	w19, w19, #0x1
  40713c:	mov	w3, #0x0                   	// #0
  407140:	mov	x2, x21
  407144:	mov	x1, x22
  407148:	mov	x0, x20
  40714c:	bl	406948 <scols_reset_iter@plt+0x40a8>
  407150:	cbnz	x0, 407138 <scols_reset_iter@plt+0x4898>
  407154:	add	w19, w19, #0x1
  407158:	lsl	x0, x19, #3
  40715c:	bl	402430 <malloc@plt>
  407160:	mov	x22, x0
  407164:	cbz	x0, 4071c4 <scols_reset_iter@plt+0x4924>
  407168:	str	x23, [sp, #72]
  40716c:	mov	w3, #0x0                   	// #0
  407170:	mov	x2, x21
  407174:	add	x1, sp, #0x40
  407178:	add	x0, sp, #0x48
  40717c:	bl	406948 <scols_reset_iter@plt+0x40a8>
  407180:	cbz	x0, 407214 <scols_reset_iter@plt+0x4974>
  407184:	mov	w20, #0x0                   	// #0
  407188:	add	x24, sp, #0x40
  40718c:	add	x23, sp, #0x48
  407190:	ldr	x1, [sp, #64]
  407194:	bl	4026f0 <strndup@plt>
  407198:	mov	x19, x0
  40719c:	str	x0, [x22, w20, uxtw #3]
  4071a0:	cbz	x0, 407204 <scols_reset_iter@plt+0x4964>
  4071a4:	add	w20, w20, #0x1
  4071a8:	mov	w3, #0x0                   	// #0
  4071ac:	mov	x2, x21
  4071b0:	mov	x1, x24
  4071b4:	mov	x0, x23
  4071b8:	bl	406948 <scols_reset_iter@plt+0x40a8>
  4071bc:	cbnz	x0, 407190 <scols_reset_iter@plt+0x48f0>
  4071c0:	str	xzr, [x22, w20, uxtw #3]
  4071c4:	mov	x0, x22
  4071c8:	ldp	x19, x20, [sp, #16]
  4071cc:	ldp	x21, x22, [sp, #32]
  4071d0:	ldp	x23, x24, [sp, #48]
  4071d4:	ldp	x29, x30, [sp], #80
  4071d8:	ret
  4071dc:	adrp	x3, 408000 <scols_reset_iter@plt+0x5760>
  4071e0:	add	x3, x3, #0x958
  4071e4:	mov	w2, #0xc1                  	// #193
  4071e8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  4071ec:	add	x1, x1, #0x940
  4071f0:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  4071f4:	add	x0, x0, #0x908
  4071f8:	bl	4027f0 <__assert_fail@plt>
  4071fc:	mov	w19, #0x0                   	// #0
  407200:	b	407154 <scols_reset_iter@plt+0x48b4>
  407204:	mov	x0, x22
  407208:	bl	406dd4 <scols_reset_iter@plt+0x4534>
  40720c:	mov	x22, x19
  407210:	b	4071c4 <scols_reset_iter@plt+0x4924>
  407214:	mov	w20, #0x0                   	// #0
  407218:	b	4071c0 <scols_reset_iter@plt+0x4920>
  40721c:	stp	x29, x30, [sp, #-64]!
  407220:	mov	x29, sp
  407224:	stp	x19, x20, [sp, #16]
  407228:	stp	x21, x22, [sp, #32]
  40722c:	str	x23, [sp, #48]
  407230:	mov	x20, x0
  407234:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  407238:	add	x0, x0, #0x950
  40723c:	cmp	x1, #0x0
  407240:	csel	x22, x0, x1, eq  // eq = none
  407244:	mov	x0, x22
  407248:	bl	402290 <strlen@plt>
  40724c:	mov	x23, x0
  407250:	mov	x21, x20
  407254:	mov	x19, #0x0                   	// #0
  407258:	cbz	x20, 4072c4 <scols_reset_iter@plt+0x4a24>
  40725c:	ldr	x0, [x21]
  407260:	cbz	x0, 407280 <scols_reset_iter@plt+0x49e0>
  407264:	add	x1, x19, x23
  407268:	cmp	x19, #0x0
  40726c:	csel	x19, x1, x19, ne  // ne = any
  407270:	bl	402290 <strlen@plt>
  407274:	add	x19, x19, x0
  407278:	add	x21, x21, #0x8
  40727c:	b	40725c <scols_reset_iter@plt+0x49bc>
  407280:	add	x0, x19, #0x1
  407284:	bl	402430 <malloc@plt>
  407288:	mov	x21, x0
  40728c:	cbnz	x0, 4072a0 <scols_reset_iter@plt+0x4a00>
  407290:	b	4072d8 <scols_reset_iter@plt+0x4a38>
  407294:	mov	x1, x19
  407298:	bl	4023e0 <stpcpy@plt>
  40729c:	add	x20, x20, #0x8
  4072a0:	ldr	x19, [x20]
  4072a4:	cbz	x19, 4072d4 <scols_reset_iter@plt+0x4a34>
  4072a8:	cmp	x21, x0
  4072ac:	b.eq	407294 <scols_reset_iter@plt+0x49f4>  // b.none
  4072b0:	mov	x1, x22
  4072b4:	bl	4023e0 <stpcpy@plt>
  4072b8:	b	407294 <scols_reset_iter@plt+0x49f4>
  4072bc:	mov	x21, x0
  4072c0:	b	4072d8 <scols_reset_iter@plt+0x4a38>
  4072c4:	mov	x0, #0x1                   	// #1
  4072c8:	bl	402430 <malloc@plt>
  4072cc:	cbz	x0, 4072bc <scols_reset_iter@plt+0x4a1c>
  4072d0:	mov	x21, x0
  4072d4:	strb	wzr, [x0]
  4072d8:	mov	x0, x21
  4072dc:	ldp	x19, x20, [sp, #16]
  4072e0:	ldp	x21, x22, [sp, #32]
  4072e4:	ldr	x23, [sp, #48]
  4072e8:	ldp	x29, x30, [sp], #64
  4072ec:	ret
  4072f0:	cbz	x1, 407354 <scols_reset_iter@plt+0x4ab4>
  4072f4:	stp	x29, x30, [sp, #-48]!
  4072f8:	mov	x29, sp
  4072fc:	stp	x19, x20, [sp, #16]
  407300:	str	x21, [sp, #32]
  407304:	mov	x20, x0
  407308:	mov	x21, x1
  40730c:	ldr	x0, [x0]
  407310:	bl	406e00 <scols_reset_iter@plt+0x4560>
  407314:	mov	w19, w0
  407318:	adds	w1, w0, #0x2
  40731c:	b.cs	40735c <scols_reset_iter@plt+0x4abc>  // b.hs, b.nlast
  407320:	ubfiz	x1, x1, #3, #32
  407324:	ldr	x0, [x20]
  407328:	bl	402510 <realloc@plt>
  40732c:	cbz	x0, 407364 <scols_reset_iter@plt+0x4ac4>
  407330:	str	x21, [x0, w19, uxtw #3]
  407334:	add	w19, w19, #0x1
  407338:	str	xzr, [x0, x19, lsl #3]
  40733c:	str	x0, [x20]
  407340:	mov	w0, #0x0                   	// #0
  407344:	ldp	x19, x20, [sp, #16]
  407348:	ldr	x21, [sp, #32]
  40734c:	ldp	x29, x30, [sp], #48
  407350:	ret
  407354:	mov	w0, #0x0                   	// #0
  407358:	ret
  40735c:	mov	w0, #0xfffffff4            	// #-12
  407360:	b	407344 <scols_reset_iter@plt+0x4aa4>
  407364:	mov	w0, #0xfffffff4            	// #-12
  407368:	b	407344 <scols_reset_iter@plt+0x4aa4>
  40736c:	stp	x29, x30, [sp, #-64]!
  407370:	mov	x29, sp
  407374:	stp	x19, x20, [sp, #16]
  407378:	stp	x21, x22, [sp, #32]
  40737c:	str	x23, [sp, #48]
  407380:	mov	x23, x0
  407384:	mov	x21, x1
  407388:	mov	x22, x2
  40738c:	mov	w20, #0x0                   	// #0
  407390:	cbnz	x1, 40739c <scols_reset_iter@plt+0x4afc>
  407394:	b	4073d8 <scols_reset_iter@plt+0x4b38>
  407398:	add	x21, x21, #0x8
  40739c:	ldr	x0, [x21]
  4073a0:	cbz	x0, 4073d4 <scols_reset_iter@plt+0x4b34>
  4073a4:	mov	x1, x22
  4073a8:	bl	406848 <scols_reset_iter@plt+0x3fa8>
  4073ac:	mov	x19, x0
  4073b0:	cbz	x0, 4073f0 <scols_reset_iter@plt+0x4b50>
  4073b4:	mov	x1, x0
  4073b8:	mov	x0, x23
  4073bc:	bl	4072f0 <scols_reset_iter@plt+0x4a50>
  4073c0:	mov	w20, w0
  4073c4:	tbz	w0, #31, 407398 <scols_reset_iter@plt+0x4af8>
  4073c8:	mov	x0, x19
  4073cc:	bl	402660 <free@plt>
  4073d0:	b	4073d8 <scols_reset_iter@plt+0x4b38>
  4073d4:	mov	w20, #0x0                   	// #0
  4073d8:	mov	w0, w20
  4073dc:	ldp	x19, x20, [sp, #16]
  4073e0:	ldp	x21, x22, [sp, #32]
  4073e4:	ldr	x23, [sp, #48]
  4073e8:	ldp	x29, x30, [sp], #64
  4073ec:	ret
  4073f0:	mov	w20, #0xfffffff4            	// #-12
  4073f4:	b	4073d8 <scols_reset_iter@plt+0x4b38>
  4073f8:	cbz	x1, 407488 <scols_reset_iter@plt+0x4be8>
  4073fc:	stp	x29, x30, [sp, #-48]!
  407400:	mov	x29, sp
  407404:	stp	x19, x20, [sp, #16]
  407408:	stp	x21, x22, [sp, #32]
  40740c:	mov	x20, x0
  407410:	mov	x22, x1
  407414:	ldr	x0, [x0]
  407418:	bl	406e00 <scols_reset_iter@plt+0x4560>
  40741c:	mov	w19, w0
  407420:	adds	w0, w0, #0x2
  407424:	b.cs	407490 <scols_reset_iter@plt+0x4bf0>  // b.hs, b.nlast
  407428:	ubfiz	x0, x0, #3, #32
  40742c:	bl	402430 <malloc@plt>
  407430:	mov	x21, x0
  407434:	cbz	x0, 407498 <scols_reset_iter@plt+0x4bf8>
  407438:	cbz	w19, 40745c <scols_reset_iter@plt+0x4bbc>
  40743c:	ldr	x5, [x20]
  407440:	mov	x2, #0x0                   	// #0
  407444:	add	x4, x0, #0x8
  407448:	ldr	x3, [x5, x2, lsl #3]
  40744c:	str	x3, [x4, x2, lsl #3]
  407450:	add	x2, x2, #0x1
  407454:	cmp	w19, w2
  407458:	b.hi	407448 <scols_reset_iter@plt+0x4ba8>  // b.pmore
  40745c:	str	x22, [x21]
  407460:	add	w19, w19, #0x1
  407464:	str	xzr, [x21, x19, lsl #3]
  407468:	ldr	x0, [x20]
  40746c:	bl	402660 <free@plt>
  407470:	str	x21, [x20]
  407474:	mov	w0, #0x0                   	// #0
  407478:	ldp	x19, x20, [sp, #16]
  40747c:	ldp	x21, x22, [sp, #32]
  407480:	ldp	x29, x30, [sp], #48
  407484:	ret
  407488:	mov	w0, #0x0                   	// #0
  40748c:	ret
  407490:	mov	w0, #0xfffffff4            	// #-12
  407494:	b	407478 <scols_reset_iter@plt+0x4bd8>
  407498:	mov	w0, #0xfffffff4            	// #-12
  40749c:	b	407478 <scols_reset_iter@plt+0x4bd8>
  4074a0:	stp	x29, x30, [sp, #-32]!
  4074a4:	mov	x29, sp
  4074a8:	stp	x19, x20, [sp, #16]
  4074ac:	mov	x20, x1
  4074b0:	bl	4072f0 <scols_reset_iter@plt+0x4a50>
  4074b4:	mov	w19, w0
  4074b8:	tbnz	w0, #31, 4074cc <scols_reset_iter@plt+0x4c2c>
  4074bc:	mov	w0, w19
  4074c0:	ldp	x19, x20, [sp, #16]
  4074c4:	ldp	x29, x30, [sp], #32
  4074c8:	ret
  4074cc:	mov	x0, x20
  4074d0:	bl	402660 <free@plt>
  4074d4:	b	4074bc <scols_reset_iter@plt+0x4c1c>
  4074d8:	stp	x29, x30, [sp, #-32]!
  4074dc:	mov	x29, sp
  4074e0:	stp	x19, x20, [sp, #16]
  4074e4:	mov	x20, x1
  4074e8:	bl	4073f8 <scols_reset_iter@plt+0x4b58>
  4074ec:	mov	w19, w0
  4074f0:	tbnz	w0, #31, 407504 <scols_reset_iter@plt+0x4c64>
  4074f4:	mov	w0, w19
  4074f8:	ldp	x19, x20, [sp, #16]
  4074fc:	ldp	x29, x30, [sp], #32
  407500:	ret
  407504:	mov	x0, x20
  407508:	bl	402660 <free@plt>
  40750c:	b	4074f4 <scols_reset_iter@plt+0x4c54>
  407510:	cbz	x1, 407548 <scols_reset_iter@plt+0x4ca8>
  407514:	stp	x29, x30, [sp, #-32]!
  407518:	mov	x29, sp
  40751c:	str	x19, [sp, #16]
  407520:	mov	x19, x0
  407524:	mov	x0, x1
  407528:	bl	402520 <strdup@plt>
  40752c:	mov	x1, x0
  407530:	cbz	x0, 407550 <scols_reset_iter@plt+0x4cb0>
  407534:	mov	x0, x19
  407538:	bl	4074a0 <scols_reset_iter@plt+0x4c00>
  40753c:	ldr	x19, [sp, #16]
  407540:	ldp	x29, x30, [sp], #32
  407544:	ret
  407548:	mov	w0, #0x0                   	// #0
  40754c:	ret
  407550:	mov	w0, #0xfffffff4            	// #-12
  407554:	b	40753c <scols_reset_iter@plt+0x4c9c>
  407558:	stp	x29, x30, [sp, #-32]!
  40755c:	mov	x29, sp
  407560:	stp	x19, x20, [sp, #16]
  407564:	mov	x20, x0
  407568:	mov	x19, x1
  40756c:	mov	w0, #0x0                   	// #0
  407570:	cbnz	x1, 40757c <scols_reset_iter@plt+0x4cdc>
  407574:	b	407598 <scols_reset_iter@plt+0x4cf8>
  407578:	add	x19, x19, #0x8
  40757c:	ldr	x1, [x19]
  407580:	cbz	x1, 407594 <scols_reset_iter@plt+0x4cf4>
  407584:	mov	x0, x20
  407588:	bl	407510 <scols_reset_iter@plt+0x4c70>
  40758c:	tbz	w0, #31, 407578 <scols_reset_iter@plt+0x4cd8>
  407590:	b	407598 <scols_reset_iter@plt+0x4cf8>
  407594:	mov	w0, #0x0                   	// #0
  407598:	ldp	x19, x20, [sp, #16]
  40759c:	ldp	x29, x30, [sp], #32
  4075a0:	ret
  4075a4:	stp	x29, x30, [sp, #-64]!
  4075a8:	mov	x29, sp
  4075ac:	str	x23, [sp, #48]
  4075b0:	mov	x23, x0
  4075b4:	cbz	x0, 4075e4 <scols_reset_iter@plt+0x4d44>
  4075b8:	stp	x19, x20, [sp, #16]
  4075bc:	stp	x21, x22, [sp, #32]
  4075c0:	mov	x22, x1
  4075c4:	cbz	x1, 4075f4 <scols_reset_iter@plt+0x4d54>
  4075c8:	ldr	x20, [x0]
  4075cc:	mov	x19, x0
  4075d0:	mov	x21, x0
  4075d4:	cbnz	x20, 407628 <scols_reset_iter@plt+0x4d88>
  4075d8:	str	xzr, [x19]
  4075dc:	ldp	x19, x20, [sp, #16]
  4075e0:	ldp	x21, x22, [sp, #32]
  4075e4:	mov	x0, x23
  4075e8:	ldr	x23, [sp, #48]
  4075ec:	ldp	x29, x30, [sp], #64
  4075f0:	ret
  4075f4:	adrp	x3, 408000 <scols_reset_iter@plt+0x5760>
  4075f8:	add	x3, x3, #0x958
  4075fc:	add	x3, x3, #0x10
  407600:	mov	w2, #0x15a                 	// #346
  407604:	adrp	x1, 408000 <scols_reset_iter@plt+0x5760>
  407608:	add	x1, x1, #0x940
  40760c:	adrp	x0, 408000 <scols_reset_iter@plt+0x5760>
  407610:	add	x0, x0, #0x908
  407614:	bl	4027f0 <__assert_fail@plt>
  407618:	mov	x0, x20
  40761c:	bl	402660 <free@plt>
  407620:	ldr	x20, [x21, #8]!
  407624:	cbz	x20, 4075d8 <scols_reset_iter@plt+0x4d38>
  407628:	mov	x1, x22
  40762c:	mov	x0, x20
  407630:	bl	402600 <strcmp@plt>
  407634:	cbz	w0, 407618 <scols_reset_iter@plt+0x4d78>
  407638:	mov	x2, x19
  40763c:	str	x20, [x2], #8
  407640:	mov	x19, x2
  407644:	b	407620 <scols_reset_iter@plt+0x4d80>
  407648:	stp	x29, x30, [sp, #-288]!
  40764c:	mov	x29, sp
  407650:	str	x19, [sp, #16]
  407654:	mov	x19, x0
  407658:	str	x2, [sp, #240]
  40765c:	str	x3, [sp, #248]
  407660:	str	x4, [sp, #256]
  407664:	str	x5, [sp, #264]
  407668:	str	x6, [sp, #272]
  40766c:	str	x7, [sp, #280]
  407670:	str	q0, [sp, #112]
  407674:	str	q1, [sp, #128]
  407678:	str	q2, [sp, #144]
  40767c:	str	q3, [sp, #160]
  407680:	str	q4, [sp, #176]
  407684:	str	q5, [sp, #192]
  407688:	str	q6, [sp, #208]
  40768c:	str	q7, [sp, #224]
  407690:	add	x0, sp, #0x120
  407694:	str	x0, [sp, #80]
  407698:	str	x0, [sp, #88]
  40769c:	add	x0, sp, #0xf0
  4076a0:	str	x0, [sp, #96]
  4076a4:	mov	w0, #0xffffffd0            	// #-48
  4076a8:	str	w0, [sp, #104]
  4076ac:	mov	w0, #0xffffff80            	// #-128
  4076b0:	str	w0, [sp, #108]
  4076b4:	ldp	x2, x3, [sp, #80]
  4076b8:	stp	x2, x3, [sp, #32]
  4076bc:	ldp	x2, x3, [sp, #96]
  4076c0:	stp	x2, x3, [sp, #48]
  4076c4:	add	x2, sp, #0x20
  4076c8:	add	x0, sp, #0x48
  4076cc:	bl	4026c0 <vasprintf@plt>
  4076d0:	tbnz	w0, #31, 4076ec <scols_reset_iter@plt+0x4e4c>
  4076d4:	ldr	x1, [sp, #72]
  4076d8:	mov	x0, x19
  4076dc:	bl	4074a0 <scols_reset_iter@plt+0x4c00>
  4076e0:	ldr	x19, [sp, #16]
  4076e4:	ldp	x29, x30, [sp], #288
  4076e8:	ret
  4076ec:	mov	w0, #0xfffffff4            	// #-12
  4076f0:	b	4076e0 <scols_reset_iter@plt+0x4e40>
  4076f4:	stp	x29, x30, [sp, #-80]!
  4076f8:	mov	x29, sp
  4076fc:	str	x19, [sp, #16]
  407700:	mov	x19, x0
  407704:	ldp	x4, x5, [x2]
  407708:	stp	x4, x5, [sp, #32]
  40770c:	ldp	x2, x3, [x2, #16]
  407710:	stp	x2, x3, [sp, #48]
  407714:	add	x2, sp, #0x20
  407718:	add	x0, sp, #0x48
  40771c:	bl	4026c0 <vasprintf@plt>
  407720:	tbnz	w0, #31, 40773c <scols_reset_iter@plt+0x4e9c>
  407724:	ldr	x1, [sp, #72]
  407728:	mov	x0, x19
  40772c:	bl	4074a0 <scols_reset_iter@plt+0x4c00>
  407730:	ldr	x19, [sp, #16]
  407734:	ldp	x29, x30, [sp], #80
  407738:	ret
  40773c:	mov	w0, #0xfffffff4            	// #-12
  407740:	b	407730 <scols_reset_iter@plt+0x4e90>
  407744:	stp	x29, x30, [sp, #-32]!
  407748:	mov	x29, sp
  40774c:	str	x19, [sp, #16]
  407750:	mov	x19, x0
  407754:	bl	406e00 <scols_reset_iter@plt+0x4560>
  407758:	cmp	w0, #0x1
  40775c:	b.ls	40778c <scols_reset_iter@plt+0x4eec>  // b.plast
  407760:	lsr	w5, w0, #1
  407764:	mov	x1, #0x0                   	// #0
  407768:	sub	w2, w0, #0x1
  40776c:	ldr	x3, [x19, x1, lsl #3]
  407770:	sub	w0, w2, w1
  407774:	ldr	x4, [x19, x0, lsl #3]
  407778:	str	x4, [x19, x1, lsl #3]
  40777c:	str	x3, [x19, x0, lsl #3]
  407780:	add	x1, x1, #0x1
  407784:	cmp	x1, x5
  407788:	b.ne	40776c <scols_reset_iter@plt+0x4ecc>  // b.any
  40778c:	mov	x0, x19
  407790:	ldr	x19, [sp, #16]
  407794:	ldp	x29, x30, [sp], #32
  407798:	ret
  40779c:	nop
  4077a0:	stp	x29, x30, [sp, #-64]!
  4077a4:	mov	x29, sp
  4077a8:	stp	x19, x20, [sp, #16]
  4077ac:	adrp	x20, 41a000 <scols_reset_iter@plt+0x17760>
  4077b0:	add	x20, x20, #0xde0
  4077b4:	stp	x21, x22, [sp, #32]
  4077b8:	adrp	x21, 41a000 <scols_reset_iter@plt+0x17760>
  4077bc:	add	x21, x21, #0xdd8
  4077c0:	sub	x20, x20, x21
  4077c4:	mov	w22, w0
  4077c8:	stp	x23, x24, [sp, #48]
  4077cc:	mov	x23, x1
  4077d0:	mov	x24, x2
  4077d4:	bl	402218 <mbrtowc@plt-0x38>
  4077d8:	cmp	xzr, x20, asr #3
  4077dc:	b.eq	407808 <scols_reset_iter@plt+0x4f68>  // b.none
  4077e0:	asr	x20, x20, #3
  4077e4:	mov	x19, #0x0                   	// #0
  4077e8:	ldr	x3, [x21, x19, lsl #3]
  4077ec:	mov	x2, x24
  4077f0:	add	x19, x19, #0x1
  4077f4:	mov	x1, x23
  4077f8:	mov	w0, w22
  4077fc:	blr	x3
  407800:	cmp	x20, x19
  407804:	b.ne	4077e8 <scols_reset_iter@plt+0x4f48>  // b.any
  407808:	ldp	x19, x20, [sp, #16]
  40780c:	ldp	x21, x22, [sp, #32]
  407810:	ldp	x23, x24, [sp, #48]
  407814:	ldp	x29, x30, [sp], #64
  407818:	ret
  40781c:	nop
  407820:	ret
  407824:	nop
  407828:	adrp	x2, 41b000 <scols_reset_iter@plt+0x18760>
  40782c:	mov	x1, #0x0                   	// #0
  407830:	ldr	x2, [x2, #824]
  407834:	b	402380 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000407838 <.fini>:
  407838:	stp	x29, x30, [sp, #-16]!
  40783c:	mov	x29, sp
  407840:	ldp	x29, x30, [sp], #16
  407844:	ret
