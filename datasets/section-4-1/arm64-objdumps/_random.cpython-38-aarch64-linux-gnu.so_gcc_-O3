
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_random.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001138 <.init>:
    1138:	stp	x29, x30, [sp, #-16]!
    113c:	mov	x29, sp
    1140:	bl	1380 <_PyTime_GetMonotonicClock@plt+0x10>
    1144:	ldp	x29, x30, [sp], #16
    1148:	ret

Disassembly of section .plt:

0000000000001150 <memcpy@plt-0x20>:
    1150:	stp	x16, x30, [sp, #-16]!
    1154:	adrp	x16, 12000 <PyInit__random@@Base+0xff98>
    1158:	ldr	x17, [x16, #4088]
    115c:	add	x16, x16, #0xff8
    1160:	br	x17
    1164:	nop
    1168:	nop
    116c:	nop

0000000000001170 <memcpy@plt>:
    1170:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1174:	ldr	x17, [x16]
    1178:	add	x16, x16, #0x0
    117c:	br	x17

0000000000001180 <PyMem_Free@plt>:
    1180:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1184:	ldr	x17, [x16, #8]
    1188:	add	x16, x16, #0x8
    118c:	br	x17

0000000000001190 <__cxa_finalize@plt>:
    1190:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1194:	ldr	x17, [x16, #16]
    1198:	add	x16, x16, #0x10
    119c:	br	x17

00000000000011a0 <_PyTime_GetSystemClock@plt>:
    11a0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11a4:	ldr	x17, [x16, #24]
    11a8:	add	x16, x16, #0x18
    11ac:	br	x17

00000000000011b0 <_Py_Dealloc@plt>:
    11b0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11b4:	ldr	x17, [x16, #32]
    11b8:	add	x16, x16, #0x20
    11bc:	br	x17

00000000000011c0 <PyErr_NoMemory@plt>:
    11c0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11c4:	ldr	x17, [x16, #40]
    11c8:	add	x16, x16, #0x28
    11cc:	br	x17

00000000000011d0 <PyLong_FromSize_t@plt>:
    11d0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11d4:	ldr	x17, [x16, #48]
    11d8:	add	x16, x16, #0x30
    11dc:	br	x17

00000000000011e0 <_PyLong_NumBits@plt>:
    11e0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11e4:	ldr	x17, [x16, #56]
    11e8:	add	x16, x16, #0x38
    11ec:	br	x17

00000000000011f0 <getpid@plt>:
    11f0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11f4:	ldr	x17, [x16, #64]
    11f8:	add	x16, x16, #0x40
    11fc:	br	x17

0000000000001200 <PyErr_SetString@plt>:
    1200:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1204:	ldr	x17, [x16, #72]
    1208:	add	x16, x16, #0x48
    120c:	br	x17

0000000000001210 <_PyLong_FromByteArray@plt>:
    1210:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1214:	ldr	x17, [x16, #80]
    1218:	add	x16, x16, #0x50
    121c:	br	x17

0000000000001220 <PyFloat_FromDouble@plt>:
    1220:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1224:	ldr	x17, [x16, #88]
    1228:	add	x16, x16, #0x58
    122c:	br	x17

0000000000001230 <PyType_Ready@plt>:
    1230:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1234:	ldr	x17, [x16, #96]
    1238:	add	x16, x16, #0x60
    123c:	br	x17

0000000000001240 <PyLong_FromLong@plt>:
    1240:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1244:	ldr	x17, [x16, #104]
    1248:	add	x16, x16, #0x68
    124c:	br	x17

0000000000001250 <PyErr_Clear@plt>:
    1250:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1254:	ldr	x17, [x16, #112]
    1258:	add	x16, x16, #0x70
    125c:	br	x17

0000000000001260 <__gmon_start__@plt>:
    1260:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1264:	ldr	x17, [x16, #120]
    1268:	add	x16, x16, #0x78
    126c:	br	x17

0000000000001270 <PyTuple_New@plt>:
    1270:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1274:	ldr	x17, [x16, #128]
    1278:	add	x16, x16, #0x80
    127c:	br	x17

0000000000001280 <_PyArg_CheckPositional@plt>:
    1280:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1284:	ldr	x17, [x16, #136]
    1288:	add	x16, x16, #0x88
    128c:	br	x17

0000000000001290 <PyErr_Occurred@plt>:
    1290:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1294:	ldr	x17, [x16, #144]
    1298:	add	x16, x16, #0x90
    129c:	br	x17

00000000000012a0 <PyModule_Create2@plt>:
    12a0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12a4:	ldr	x17, [x16, #152]
    12a8:	add	x16, x16, #0x98
    12ac:	br	x17

00000000000012b0 <PyLong_AsLong@plt>:
    12b0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12b4:	ldr	x17, [x16, #160]
    12b8:	add	x16, x16, #0xa0
    12bc:	br	x17

00000000000012c0 <PyObject_Hash@plt>:
    12c0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12c4:	ldr	x17, [x16, #168]
    12c8:	add	x16, x16, #0xa8
    12cc:	br	x17

00000000000012d0 <PyLong_AsUnsignedLong@plt>:
    12d0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12d4:	ldr	x17, [x16, #176]
    12d8:	add	x16, x16, #0xb0
    12dc:	br	x17

00000000000012e0 <PyLong_FromUnsignedLong@plt>:
    12e0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12e4:	ldr	x17, [x16, #184]
    12e8:	add	x16, x16, #0xb8
    12ec:	br	x17

00000000000012f0 <PyModule_AddObject@plt>:
    12f0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12f4:	ldr	x17, [x16, #192]
    12f8:	add	x16, x16, #0xc0
    12fc:	br	x17

0000000000001300 <PyType_IsSubtype@plt>:
    1300:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1304:	ldr	x17, [x16, #200]
    1308:	add	x16, x16, #0xc8
    130c:	br	x17

0000000000001310 <_PyLong_AsByteArray@plt>:
    1310:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1314:	ldr	x17, [x16, #208]
    1318:	add	x16, x16, #0xd0
    131c:	br	x17

0000000000001320 <PyTuple_Size@plt>:
    1320:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1324:	ldr	x17, [x16, #216]
    1328:	add	x16, x16, #0xd8
    132c:	br	x17

0000000000001330 <_PyOS_URandomNonblock@plt>:
    1330:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1334:	ldr	x17, [x16, #224]
    1338:	add	x16, x16, #0xe0
    133c:	br	x17

0000000000001340 <_PyArg_NoKeywords@plt>:
    1340:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1344:	ldr	x17, [x16, #232]
    1348:	add	x16, x16, #0xe8
    134c:	br	x17

0000000000001350 <_PyLong_AsInt@plt>:
    1350:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1354:	ldr	x17, [x16, #240]
    1358:	add	x16, x16, #0xf0
    135c:	br	x17

0000000000001360 <PyMem_Malloc@plt>:
    1360:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1364:	ldr	x17, [x16, #248]
    1368:	add	x16, x16, #0xf8
    136c:	br	x17

0000000000001370 <_PyTime_GetMonotonicClock@plt>:
    1370:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1374:	ldr	x17, [x16, #256]
    1378:	add	x16, x16, #0x100
    137c:	br	x17

Disassembly of section .text:

0000000000001380 <PyInit__random@@Base-0xce8>:
    1380:	adrp	x0, 12000 <PyInit__random@@Base+0xff98>
    1384:	ldr	x0, [x0, #4040]
    1388:	cbz	x0, 1390 <_PyTime_GetMonotonicClock@plt+0x20>
    138c:	b	1260 <__gmon_start__@plt>
    1390:	ret
    1394:	nop
    1398:	adrp	x0, 13000 <PyInit__random@@Base+0x10f98>
    139c:	add	x0, x0, #0x3d8
    13a0:	adrp	x1, 13000 <PyInit__random@@Base+0x10f98>
    13a4:	add	x1, x1, #0x3d8
    13a8:	cmp	x1, x0
    13ac:	b.eq	13c4 <_PyTime_GetMonotonicClock@plt+0x54>  // b.none
    13b0:	adrp	x1, 12000 <PyInit__random@@Base+0xff98>
    13b4:	ldr	x1, [x1, #4000]
    13b8:	cbz	x1, 13c4 <_PyTime_GetMonotonicClock@plt+0x54>
    13bc:	mov	x16, x1
    13c0:	br	x16
    13c4:	ret
    13c8:	adrp	x0, 13000 <PyInit__random@@Base+0x10f98>
    13cc:	add	x0, x0, #0x3d8
    13d0:	adrp	x1, 13000 <PyInit__random@@Base+0x10f98>
    13d4:	add	x1, x1, #0x3d8
    13d8:	sub	x1, x1, x0
    13dc:	lsr	x2, x1, #63
    13e0:	add	x1, x2, x1, asr #3
    13e4:	cmp	xzr, x1, asr #1
    13e8:	asr	x1, x1, #1
    13ec:	b.eq	1404 <_PyTime_GetMonotonicClock@plt+0x94>  // b.none
    13f0:	adrp	x2, 12000 <PyInit__random@@Base+0xff98>
    13f4:	ldr	x2, [x2, #4064]
    13f8:	cbz	x2, 1404 <_PyTime_GetMonotonicClock@plt+0x94>
    13fc:	mov	x16, x2
    1400:	br	x16
    1404:	ret
    1408:	stp	x29, x30, [sp, #-32]!
    140c:	mov	x29, sp
    1410:	str	x19, [sp, #16]
    1414:	adrp	x19, 13000 <PyInit__random@@Base+0x10f98>
    1418:	ldrb	w0, [x19, #984]
    141c:	cbnz	w0, 1444 <_PyTime_GetMonotonicClock@plt+0xd4>
    1420:	adrp	x0, 12000 <PyInit__random@@Base+0xff98>
    1424:	ldr	x0, [x0, #4016]
    1428:	cbz	x0, 1438 <_PyTime_GetMonotonicClock@plt+0xc8>
    142c:	adrp	x0, 13000 <PyInit__random@@Base+0x10f98>
    1430:	ldr	x0, [x0, #264]
    1434:	bl	1190 <__cxa_finalize@plt>
    1438:	bl	1398 <_PyTime_GetMonotonicClock@plt+0x28>
    143c:	mov	w0, #0x1                   	// #1
    1440:	strb	w0, [x19, #984]
    1444:	ldr	x19, [sp, #16]
    1448:	ldp	x29, x30, [sp], #32
    144c:	ret
    1450:	b	13c8 <_PyTime_GetMonotonicClock@plt+0x58>
    1454:	nop
    1458:	ldr	w1, [x0, #16]
    145c:	add	x10, x0, #0x14
    1460:	cmp	w1, #0x26f
    1464:	b.gt	14a0 <_PyTime_GetMonotonicClock@plt+0x130>
    1468:	add	x10, x10, w1, sxtw #2
    146c:	add	w1, w1, #0x1
    1470:	str	w1, [x0, #16]
    1474:	mov	w1, #0x5680                	// #22144
    1478:	movk	w1, #0x9d2c, lsl #16
    147c:	mov	w0, #0xefc60000            	// #-272236544
    1480:	ldr	w2, [x10]
    1484:	eor	w2, w2, w2, lsr #11
    1488:	and	w1, w1, w2, lsl #7
    148c:	eor	w1, w1, w2
    1490:	and	w0, w0, w1, lsl #15
    1494:	eor	w0, w0, w1
    1498:	eor	w0, w0, w0, lsr #18
    149c:	ret
    14a0:	ldr	w5, [x0, #20]
    14a4:	adrp	x7, 2000 <_PyTime_GetMonotonicClock@plt+0xc90>
    14a8:	mov	x3, x10
    14ac:	add	x9, x7, #0x1f0
    14b0:	add	x8, x0, #0x3a0
    14b4:	mov	x4, x10
    14b8:	and	w1, w5, #0x80000000
    14bc:	ldr	w5, [x4, #4]
    14c0:	ldr	w6, [x4, #1588]
    14c4:	and	w2, w5, #0x7fffffff
    14c8:	orr	w1, w2, w1
    14cc:	and	x2, x1, #0x1
    14d0:	eor	w1, w6, w1, lsr #1
    14d4:	ldr	w2, [x9, x2, lsl #2]
    14d8:	eor	w1, w1, w2
    14dc:	str	w1, [x4], #4
    14e0:	cmp	x8, x4
    14e4:	b.ne	14b8 <_PyTime_GetMonotonicClock@plt+0x148>  // b.any
    14e8:	ldr	w4, [x0, #928]
    14ec:	add	x6, x7, #0x1f0
    14f0:	add	x7, x0, #0x644
    14f4:	nop
    14f8:	and	w1, w4, #0x80000000
    14fc:	ldr	w4, [x3, #912]
    1500:	ldr	w5, [x3]
    1504:	add	x3, x3, #0x4
    1508:	and	w2, w4, #0x7fffffff
    150c:	orr	w1, w2, w1
    1510:	and	x2, x1, #0x1
    1514:	eor	w1, w5, w1, lsr #1
    1518:	ldr	w2, [x6, x2, lsl #2]
    151c:	eor	w1, w1, w2
    1520:	str	w1, [x3, #904]
    1524:	cmp	x7, x3
    1528:	b.ne	14f8 <_PyTime_GetMonotonicClock@plt+0x188>  // b.any
    152c:	ldr	w3, [x0, #20]
    1530:	mov	w1, #0x1                   	// #1
    1534:	ldr	w2, [x0, #2512]
    1538:	ldr	w4, [x0, #1604]
    153c:	bfxil	w2, w3, #0, #31
    1540:	and	x3, x2, #0x1
    1544:	eor	w2, w4, w2, lsr #1
    1548:	ldr	w3, [x6, x3, lsl #2]
    154c:	eor	w2, w2, w3
    1550:	str	w2, [x0, #2512]
    1554:	b	1470 <_PyTime_GetMonotonicClock@plt+0x100>
    1558:	stp	x29, x30, [sp, #-64]!
    155c:	mov	x29, sp
    1560:	stp	x19, x20, [sp, #16]
    1564:	stp	x21, x22, [sp, #32]
    1568:	mov	x21, x0
    156c:	mov	x0, #0x271                 	// #625
    1570:	bl	1270 <PyTuple_New@plt>
    1574:	cbz	x0, 15c0 <_PyTime_GetMonotonicClock@plt+0x250>
    1578:	mov	x19, x0
    157c:	add	x22, x0, #0x18
    1580:	mov	x20, #0x0                   	// #0
    1584:	str	x23, [sp, #48]
    1588:	add	x23, x21, #0x14
    158c:	b	15a0 <_PyTime_GetMonotonicClock@plt+0x230>
    1590:	str	x0, [x22, x20, lsl #3]
    1594:	add	x20, x20, #0x1
    1598:	cmp	x20, #0x270
    159c:	b.eq	15fc <_PyTime_GetMonotonicClock@plt+0x28c>  // b.none
    15a0:	ldr	w0, [x23, x20, lsl #2]
    15a4:	bl	12e0 <PyLong_FromUnsignedLong@plt>
    15a8:	cbnz	x0, 1590 <_PyTime_GetMonotonicClock@plt+0x220>
    15ac:	ldr	x0, [x19]
    15b0:	sub	x0, x0, #0x1
    15b4:	str	x0, [x19]
    15b8:	cbz	x0, 15d8 <_PyTime_GetMonotonicClock@plt+0x268>
    15bc:	ldr	x23, [sp, #48]
    15c0:	mov	x19, #0x0                   	// #0
    15c4:	mov	x0, x19
    15c8:	ldp	x19, x20, [sp, #16]
    15cc:	ldp	x21, x22, [sp, #32]
    15d0:	ldp	x29, x30, [sp], #64
    15d4:	ret
    15d8:	mov	x0, x19
    15dc:	mov	x19, #0x0                   	// #0
    15e0:	bl	11b0 <_Py_Dealloc@plt>
    15e4:	mov	x0, x19
    15e8:	ldp	x19, x20, [sp, #16]
    15ec:	ldp	x21, x22, [sp, #32]
    15f0:	ldr	x23, [sp, #48]
    15f4:	ldp	x29, x30, [sp], #64
    15f8:	ret
    15fc:	ldrsw	x0, [x21, #16]
    1600:	bl	1240 <PyLong_FromLong@plt>
    1604:	cbz	x0, 15ac <_PyTime_GetMonotonicClock@plt+0x23c>
    1608:	ldr	x23, [sp, #48]
    160c:	str	x0, [x19, #5016]
    1610:	mov	x0, x19
    1614:	ldp	x19, x20, [sp, #16]
    1618:	ldp	x21, x22, [sp, #32]
    161c:	ldp	x29, x30, [sp], #64
    1620:	ret
    1624:	nop
    1628:	mov	x12, x0
    162c:	stp	x29, x30, [sp, #-16]!
    1630:	mov	x29, sp
    1634:	bl	1458 <_PyTime_GetMonotonicClock@plt+0xe8>
    1638:	mov	w11, w0
    163c:	mov	x0, x12
    1640:	bl	1458 <_PyTime_GetMonotonicClock@plt+0xe8>
    1644:	lsr	w11, w11, #5
    1648:	lsr	w0, w0, #6
    164c:	mov	x1, #0x4190000000000000    	// #4724276009111650304
    1650:	scvtf	d1, w11
    1654:	fmov	d0, x1
    1658:	scvtf	d2, w0
    165c:	mov	x1, #0x3ca0000000000000    	// #4368491638549381120
    1660:	ldp	x29, x30, [sp], #16
    1664:	fmov	d3, x1
    1668:	fmul	d1, d1, d0
    166c:	fadd	d0, d1, d2
    1670:	fmul	d0, d0, d3
    1674:	b	1220 <PyFloat_FromDouble@plt>
    1678:	stp	x29, x30, [sp, #-64]!
    167c:	adrp	x2, 12000 <PyInit__random@@Base+0xff98>
    1680:	mov	x29, sp
    1684:	stp	x19, x20, [sp, #16]
    1688:	mov	x19, x1
    168c:	mov	x20, x0
    1690:	ldr	x1, [x2, #4008]
    1694:	ldr	x0, [x19, #8]
    1698:	cmp	x0, x1
    169c:	b.eq	17c4 <_PyTime_GetMonotonicClock@plt+0x454>  // b.none
    16a0:	bl	1300 <PyType_IsSubtype@plt>
    16a4:	cbnz	w0, 17c4 <_PyTime_GetMonotonicClock@plt+0x454>
    16a8:	mov	x0, x19
    16ac:	bl	1350 <_PyLong_AsInt@plt>
    16b0:	mov	w19, w0
    16b4:	cmn	w0, #0x1
    16b8:	b.eq	1778 <_PyTime_GetMonotonicClock@plt+0x408>  // b.none
    16bc:	cmp	w0, #0x0
    16c0:	b.le	1784 <_PyTime_GetMonotonicClock@plt+0x414>
    16c4:	cmp	w0, #0x20
    16c8:	b.le	17f0 <_PyTime_GetMonotonicClock@plt+0x480>
    16cc:	sub	w13, w0, #0x1
    16d0:	str	x23, [sp, #48]
    16d4:	stp	x21, x22, [sp, #32]
    16d8:	asr	w23, w13, #5
    16dc:	add	w21, w23, #0x1
    16e0:	lsl	w21, w21, #2
    16e4:	sxtw	x21, w21
    16e8:	mov	x0, x21
    16ec:	bl	1360 <PyMem_Malloc@plt>
    16f0:	mov	x22, x0
    16f4:	cbz	x0, 1810 <_PyTime_GetMonotonicClock@plt+0x4a0>
    16f8:	mov	x12, x0
    16fc:	sub	w19, w19, #0x20
    1700:	mov	w14, #0x20                  	// #32
    1704:	sub	w23, w19, w23, lsl #5
    1708:	mov	x0, x20
    170c:	bl	1458 <_PyTime_GetMonotonicClock@plt+0xe8>
    1710:	str	w0, [x12], #4
    1714:	nop
    1718:	mov	x0, x20
    171c:	bl	1458 <_PyTime_GetMonotonicClock@plt+0xe8>
    1720:	cmp	w19, #0x1f
    1724:	sub	w1, w14, w19
    1728:	b.gt	17b0 <_PyTime_GetMonotonicClock@plt+0x440>
    172c:	lsr	w1, w0, w1
    1730:	str	w1, [x12], #4
    1734:	sub	w19, w19, #0x20
    1738:	cmp	w19, w23
    173c:	b.ne	1718 <_PyTime_GetMonotonicClock@plt+0x3a8>  // b.any
    1740:	mov	x1, x21
    1744:	mov	w3, #0x0                   	// #0
    1748:	mov	w2, #0x1                   	// #1
    174c:	mov	x0, x22
    1750:	bl	1210 <_PyLong_FromByteArray@plt>
    1754:	mov	x19, x0
    1758:	mov	x0, x22
    175c:	bl	1180 <PyMem_Free@plt>
    1760:	ldp	x21, x22, [sp, #32]
    1764:	ldr	x23, [sp, #48]
    1768:	mov	x0, x19
    176c:	ldp	x19, x20, [sp, #16]
    1770:	ldp	x29, x30, [sp], #64
    1774:	ret
    1778:	mov	x19, #0x0                   	// #0
    177c:	bl	1290 <PyErr_Occurred@plt>
    1780:	cbnz	x0, 1768 <_PyTime_GetMonotonicClock@plt+0x3f8>
    1784:	adrp	x0, 12000 <PyInit__random@@Base+0xff98>
    1788:	mov	x19, #0x0                   	// #0
    178c:	adrp	x1, 2000 <_PyTime_GetMonotonicClock@plt+0xc90>
    1790:	add	x1, x1, #0x118
    1794:	ldr	x0, [x0, #4024]
    1798:	ldr	x0, [x0]
    179c:	bl	1200 <PyErr_SetString@plt>
    17a0:	mov	x0, x19
    17a4:	ldp	x19, x20, [sp, #16]
    17a8:	ldp	x29, x30, [sp], #64
    17ac:	ret
    17b0:	str	w0, [x12], #4
    17b4:	sub	w19, w19, #0x20
    17b8:	cmp	w19, w23
    17bc:	b.ne	1718 <_PyTime_GetMonotonicClock@plt+0x3a8>  // b.any
    17c0:	b	1740 <_PyTime_GetMonotonicClock@plt+0x3d0>
    17c4:	adrp	x0, 12000 <PyInit__random@@Base+0xff98>
    17c8:	mov	x19, #0x0                   	// #0
    17cc:	adrp	x1, 2000 <_PyTime_GetMonotonicClock@plt+0xc90>
    17d0:	add	x1, x1, #0xf0
    17d4:	ldr	x0, [x0, #4032]
    17d8:	ldr	x0, [x0]
    17dc:	bl	1200 <PyErr_SetString@plt>
    17e0:	mov	x0, x19
    17e4:	ldp	x19, x20, [sp, #16]
    17e8:	ldp	x29, x30, [sp], #64
    17ec:	ret
    17f0:	mov	x0, x20
    17f4:	bl	1458 <_PyTime_GetMonotonicClock@plt+0xe8>
    17f8:	neg	w11, w19
    17fc:	ldp	x19, x20, [sp, #16]
    1800:	lsr	w0, w0, w11
    1804:	ldp	x29, x30, [sp], #64
    1808:	mov	w0, w0
    180c:	b	12e0 <PyLong_FromUnsignedLong@plt>
    1810:	bl	11c0 <PyErr_NoMemory@plt>
    1814:	mov	x19, #0x0                   	// #0
    1818:	ldp	x21, x22, [sp, #32]
    181c:	ldr	x23, [sp, #48]
    1820:	b	1768 <_PyTime_GetMonotonicClock@plt+0x3f8>
    1824:	nop
    1828:	sub	sp, sp, #0xa00
    182c:	stp	x29, x30, [sp]
    1830:	mov	x29, sp
    1834:	stp	x19, x20, [sp, #16]
    1838:	mov	x20, #0x1                   	// #1
    183c:	stp	x21, x22, [sp, #32]
    1840:	add	x21, x1, #0x10
    1844:	add	x22, sp, #0x40
    1848:	stp	x23, x24, [sp, #48]
    184c:	mov	x23, x1
    1850:	mov	x24, x0
    1854:	b	186c <_PyTime_GetMonotonicClock@plt+0x4fc>
    1858:	add	x2, x22, x20, lsl #2
    185c:	add	x20, x20, #0x1
    1860:	cmp	x20, #0x271
    1864:	stur	w19, [x2, #-4]
    1868:	b.eq	18a4 <_PyTime_GetMonotonicClock@plt+0x534>  // b.none
    186c:	ldr	x0, [x21, x20, lsl #3]
    1870:	bl	12d0 <PyLong_AsUnsignedLong@plt>
    1874:	mov	x19, x0
    1878:	cmn	x0, #0x1
    187c:	b.ne	1858 <_PyTime_GetMonotonicClock@plt+0x4e8>  // b.any
    1880:	bl	1290 <PyErr_Occurred@plt>
    1884:	cbz	x0, 1858 <_PyTime_GetMonotonicClock@plt+0x4e8>
    1888:	mov	x0, #0x0                   	// #0
    188c:	ldp	x29, x30, [sp]
    1890:	ldp	x19, x20, [sp, #16]
    1894:	ldp	x21, x22, [sp, #32]
    1898:	ldp	x23, x24, [sp, #48]
    189c:	add	sp, sp, #0xa00
    18a0:	ret
    18a4:	ldr	x0, [x23, #5016]
    18a8:	bl	12b0 <PyLong_AsLong@plt>
    18ac:	cmn	x0, #0x1
    18b0:	b.eq	1900 <_PyTime_GetMonotonicClock@plt+0x590>  // b.none
    18b4:	cmp	x0, #0x270
    18b8:	b.hi	1908 <_PyTime_GetMonotonicClock@plt+0x598>  // b.pmore
    18bc:	str	w0, [x24, #16]
    18c0:	mov	x1, x22
    18c4:	add	x0, x24, #0x14
    18c8:	mov	x2, #0x9c0                 	// #2496
    18cc:	bl	1170 <memcpy@plt>
    18d0:	adrp	x1, 12000 <PyInit__random@@Base+0xff98>
    18d4:	ldp	x29, x30, [sp]
    18d8:	ldr	x1, [x1, #4048]
    18dc:	ldp	x19, x20, [sp, #16]
    18e0:	mov	x0, x1
    18e4:	ldr	x2, [x1]
    18e8:	ldp	x21, x22, [sp, #32]
    18ec:	add	x2, x2, #0x1
    18f0:	str	x2, [x1]
    18f4:	ldp	x23, x24, [sp, #48]
    18f8:	add	sp, sp, #0xa00
    18fc:	ret
    1900:	bl	1290 <PyErr_Occurred@plt>
    1904:	cbnz	x0, 1888 <_PyTime_GetMonotonicClock@plt+0x518>
    1908:	adrp	x0, 12000 <PyInit__random@@Base+0xff98>
    190c:	adrp	x1, 2000 <_PyTime_GetMonotonicClock@plt+0xc90>
    1910:	add	x1, x1, #0x148
    1914:	ldr	x0, [x0, #4024]
    1918:	ldr	x0, [x0]
    191c:	bl	1200 <PyErr_SetString@plt>
    1920:	b	1888 <_PyTime_GetMonotonicClock@plt+0x518>
    1924:	nop
    1928:	stp	x29, x30, [sp, #-32]!
    192c:	mov	x29, sp
    1930:	stp	x19, x20, [sp, #16]
    1934:	mov	x20, x0
    1938:	ldr	x0, [x1, #8]
    193c:	ldr	x0, [x0, #168]
    1940:	tbz	w0, #26, 196c <_PyTime_GetMonotonicClock@plt+0x5fc>
    1944:	mov	x19, x1
    1948:	mov	x0, x1
    194c:	bl	1320 <PyTuple_Size@plt>
    1950:	cmp	x0, #0x271
    1954:	b.ne	1994 <_PyTime_GetMonotonicClock@plt+0x624>  // b.any
    1958:	mov	x1, x19
    195c:	mov	x0, x20
    1960:	ldp	x19, x20, [sp, #16]
    1964:	ldp	x29, x30, [sp], #32
    1968:	b	1828 <_PyTime_GetMonotonicClock@plt+0x4b8>
    196c:	adrp	x0, 12000 <PyInit__random@@Base+0xff98>
    1970:	adrp	x1, 2000 <_PyTime_GetMonotonicClock@plt+0xc90>
    1974:	add	x1, x1, #0x158
    1978:	ldr	x0, [x0, #4032]
    197c:	ldr	x0, [x0]
    1980:	bl	1200 <PyErr_SetString@plt>
    1984:	mov	x0, #0x0                   	// #0
    1988:	ldp	x19, x20, [sp, #16]
    198c:	ldp	x29, x30, [sp], #32
    1990:	ret
    1994:	adrp	x0, 12000 <PyInit__random@@Base+0xff98>
    1998:	adrp	x1, 2000 <_PyTime_GetMonotonicClock@plt+0xc90>
    199c:	add	x1, x1, #0x178
    19a0:	ldr	x0, [x0, #4024]
    19a4:	ldr	x0, [x0]
    19a8:	bl	1200 <PyErr_SetString@plt>
    19ac:	mov	x0, #0x0                   	// #0
    19b0:	ldp	x19, x20, [sp, #16]
    19b4:	ldp	x29, x30, [sp], #32
    19b8:	ret
    19bc:	nop
    19c0:	sub	sp, sp, #0x9e0
    19c4:	mov	x1, #0x9c0                 	// #2496
    19c8:	stp	x29, x30, [sp]
    19cc:	mov	x29, sp
    19d0:	stp	x19, x20, [sp, #16]
    19d4:	add	x20, sp, #0x20
    19d8:	mov	x19, x0
    19dc:	mov	x0, x20
    19e0:	bl	1330 <_PyOS_URandomNonblock@plt>
    19e4:	tbnz	w0, #31, 1b14 <_PyTime_GetMonotonicClock@plt+0x7a4>
    19e8:	mov	w2, #0xd6aa                	// #54954
    19ec:	mov	w4, #0x8965                	// #35173
    19f0:	movk	w2, #0x12b, lsl #16
    19f4:	add	x3, x19, #0x14
    19f8:	mov	w1, w2
    19fc:	mov	x0, #0x1                   	// #1
    1a00:	movk	w4, #0x6c07, lsl #16
    1a04:	str	w2, [x19, #20]
    1a08:	eor	w1, w1, w1, lsr #30
    1a0c:	madd	w1, w1, w4, w0
    1a10:	str	w1, [x3, x0, lsl #2]
    1a14:	add	x0, x0, #0x1
    1a18:	cmp	x0, #0x270
    1a1c:	b.ne	1a08 <_PyTime_GetMonotonicClock@plt+0x698>  // b.any
    1a20:	mov	w8, #0x660d                	// #26125
    1a24:	ldr	w1, [x19, #20]
    1a28:	mov	x4, #0x0                   	// #0
    1a2c:	mov	x2, #0x1                   	// #1
    1a30:	movk	w8, #0x19, lsl #16
    1a34:	str	w0, [x19, #16]
    1a38:	b	1a50 <_PyTime_GetMonotonicClock@plt+0x6e0>
    1a3c:	cmp	x4, #0x270
    1a40:	ldr	w1, [x3, x6]
    1a44:	csel	x4, x4, xzr, cc  // cc = lo, ul, last
    1a48:	subs	x0, x0, #0x1
    1a4c:	b.eq	1aa0 <_PyTime_GetMonotonicClock@plt+0x730>  // b.none
    1a50:	eor	w1, w1, w1, lsr #30
    1a54:	ldr	w7, [x3, x2, lsl #2]
    1a58:	ldr	w5, [x20, x4, lsl #2]
    1a5c:	lsl	x6, x2, #2
    1a60:	mul	w1, w1, w8
    1a64:	add	w5, w5, w4
    1a68:	add	x4, x4, #0x1
    1a6c:	eor	w1, w1, w7
    1a70:	add	w1, w1, w5
    1a74:	str	w1, [x3, x2, lsl #2]
    1a78:	add	x2, x2, #0x1
    1a7c:	cmp	x2, #0x26f
    1a80:	b.ls	1a3c <_PyTime_GetMonotonicClock@plt+0x6cc>  // b.plast
    1a84:	ldr	w1, [x19, #2512]
    1a88:	cmp	x4, #0x270
    1a8c:	str	w1, [x19, #20]
    1a90:	csel	x4, x4, xzr, cc  // cc = lo, ul, last
    1a94:	mov	x2, #0x1                   	// #1
    1a98:	subs	x0, x0, #0x1
    1a9c:	b.ne	1a50 <_PyTime_GetMonotonicClock@plt+0x6e0>  // b.any
    1aa0:	mov	w6, #0x8b65                	// #35685
    1aa4:	lsl	x0, x2, #2
    1aa8:	mov	x4, #0x26f                 	// #623
    1aac:	movk	w6, #0x5d58, lsl #16
    1ab0:	b	1ab8 <_PyTime_GetMonotonicClock@plt+0x748>
    1ab4:	ldur	w1, [x1, #-4]
    1ab8:	eor	w1, w1, w1, lsr #30
    1abc:	ldr	w5, [x3, x0]
    1ac0:	mul	w1, w1, w6
    1ac4:	eor	w1, w1, w5
    1ac8:	sub	w1, w1, w2
    1acc:	str	w1, [x3, x0]
    1ad0:	add	x2, x2, #0x1
    1ad4:	cmp	x2, #0x270
    1ad8:	b.ne	1ae8 <_PyTime_GetMonotonicClock@plt+0x778>  // b.any
    1adc:	ldr	w0, [x19, #2512]
    1ae0:	mov	x2, #0x1                   	// #1
    1ae4:	str	w0, [x19, #20]
    1ae8:	lsl	x0, x2, #2
    1aec:	subs	x4, x4, #0x1
    1af0:	add	x1, x3, x0
    1af4:	b.ne	1ab4 <_PyTime_GetMonotonicClock@plt+0x744>  // b.any
    1af8:	mov	w1, #0x80000000            	// #-2147483648
    1afc:	mov	w0, #0x0                   	// #0
    1b00:	str	w1, [x19, #20]
    1b04:	ldp	x29, x30, [sp]
    1b08:	ldp	x19, x20, [sp, #16]
    1b0c:	add	sp, sp, #0x9e0
    1b10:	ret
    1b14:	mov	w0, #0xffffffff            	// #-1
    1b18:	b	1b04 <_PyTime_GetMonotonicClock@plt+0x794>
    1b1c:	nop
    1b20:	stp	x29, x30, [sp, #-96]!
    1b24:	cmp	x1, #0x0
    1b28:	mov	x29, sp
    1b2c:	stp	x19, x20, [sp, #16]
    1b30:	adrp	x19, 12000 <PyInit__random@@Base+0xff98>
    1b34:	mov	x20, x0
    1b38:	ldr	x2, [x19, #4048]
    1b3c:	stp	x23, x24, [sp, #48]
    1b40:	ccmp	x1, x2, #0x4, ne  // ne = any
    1b44:	b.eq	1d68 <_PyTime_GetMonotonicClock@plt+0x9f8>  // b.none
    1b48:	ldr	x0, [x1, #8]
    1b4c:	stp	x21, x22, [sp, #32]
    1b50:	ldr	x0, [x0, #168]
    1b54:	tbz	w0, #24, 1d20 <_PyTime_GetMonotonicClock@plt+0x9b0>
    1b58:	adrp	x2, 12000 <PyInit__random@@Base+0xff98>
    1b5c:	mov	x0, x1
    1b60:	ldr	x1, [x2, #4056]
    1b64:	ldr	x1, [x1, #96]
    1b68:	ldr	x1, [x1, #64]
    1b6c:	blr	x1
    1b70:	mov	x22, x0
    1b74:	cbz	x22, 1d40 <_PyTime_GetMonotonicClock@plt+0x9d0>
    1b78:	mov	x0, x22
    1b7c:	bl	11e0 <_PyLong_NumBits@plt>
    1b80:	mov	x21, x0
    1b84:	cmn	x0, #0x1
    1b88:	b.eq	1d98 <_PyTime_GetMonotonicClock@plt+0xa28>  // b.none
    1b8c:	cbnz	x0, 1da8 <_PyTime_GetMonotonicClock@plt+0xa38>
    1b90:	mov	x24, #0x4                   	// #4
    1b94:	mov	x21, #0x1                   	// #1
    1b98:	mov	x0, x24
    1b9c:	bl	1360 <PyMem_Malloc@plt>
    1ba0:	mov	x23, x0
    1ba4:	cbz	x0, 1e90 <_PyTime_GetMonotonicClock@plt+0xb20>
    1ba8:	mov	x2, x24
    1bac:	mov	x1, x0
    1bb0:	mov	w4, #0x0                   	// #0
    1bb4:	mov	x0, x22
    1bb8:	mov	w3, #0x1                   	// #1
    1bbc:	mov	x24, #0x0                   	// #0
    1bc0:	bl	1310 <_PyLong_AsByteArray@plt>
    1bc4:	cmn	w0, #0x1
    1bc8:	b.eq	1d04 <_PyTime_GetMonotonicClock@plt+0x994>  // b.none
    1bcc:	mov	w1, #0xd6aa                	// #54954
    1bd0:	mov	w0, #0x8965                	// #35173
    1bd4:	movk	w1, #0x12b, lsl #16
    1bd8:	add	x4, x20, #0x14
    1bdc:	mov	w2, w1
    1be0:	mov	x6, #0x1                   	// #1
    1be4:	movk	w0, #0x6c07, lsl #16
    1be8:	str	w1, [x20, #20]
    1bec:	nop
    1bf0:	eor	w2, w2, w2, lsr #30
    1bf4:	madd	w2, w2, w0, w6
    1bf8:	str	w2, [x4, x6, lsl #2]
    1bfc:	add	x6, x6, #0x1
    1c00:	cmp	x6, #0x270
    1c04:	b.ne	1bf0 <_PyTime_GetMonotonicClock@plt+0x880>  // b.any
    1c08:	cmp	x21, #0x270
    1c0c:	mov	w8, #0x660d                	// #26125
    1c10:	ldr	w2, [x20, #20]
    1c14:	csel	x1, x21, x6, cs  // cs = hs, nlast
    1c18:	mov	x5, #0x0                   	// #0
    1c1c:	mov	x3, #0x1                   	// #1
    1c20:	movk	w8, #0x19, lsl #16
    1c24:	str	w6, [x20, #16]
    1c28:	b	1c40 <_PyTime_GetMonotonicClock@plt+0x8d0>
    1c2c:	cmp	x21, x5
    1c30:	ldr	w2, [x4, x7]
    1c34:	csel	x5, x5, xzr, hi  // hi = pmore
    1c38:	subs	x1, x1, #0x1
    1c3c:	b.eq	1c90 <_PyTime_GetMonotonicClock@plt+0x920>  // b.none
    1c40:	eor	w2, w2, w2, lsr #30
    1c44:	ldr	w6, [x4, x3, lsl #2]
    1c48:	ldr	w0, [x23, x5, lsl #2]
    1c4c:	lsl	x7, x3, #2
    1c50:	mul	w2, w2, w8
    1c54:	add	w0, w0, w5
    1c58:	add	x5, x5, #0x1
    1c5c:	eor	w2, w2, w6
    1c60:	add	w2, w2, w0
    1c64:	str	w2, [x4, x3, lsl #2]
    1c68:	add	x3, x3, #0x1
    1c6c:	cmp	x3, #0x26f
    1c70:	b.ls	1c2c <_PyTime_GetMonotonicClock@plt+0x8bc>  // b.plast
    1c74:	ldr	w2, [x20, #2512]
    1c78:	cmp	x21, x5
    1c7c:	str	w2, [x20, #20]
    1c80:	csel	x5, x5, xzr, hi  // hi = pmore
    1c84:	mov	x3, #0x1                   	// #1
    1c88:	subs	x1, x1, #0x1
    1c8c:	b.ne	1c40 <_PyTime_GetMonotonicClock@plt+0x8d0>  // b.any
    1c90:	mov	w6, #0x8b65                	// #35685
    1c94:	lsl	x5, x3, #2
    1c98:	mov	x0, #0x26f                 	// #623
    1c9c:	movk	w6, #0x5d58, lsl #16
    1ca0:	b	1ca8 <_PyTime_GetMonotonicClock@plt+0x938>
    1ca4:	ldur	w2, [x1, #-4]
    1ca8:	eor	w2, w2, w2, lsr #30
    1cac:	ldr	w1, [x4, x5]
    1cb0:	mul	w2, w2, w6
    1cb4:	eor	w2, w2, w1
    1cb8:	sub	w2, w2, w3
    1cbc:	str	w2, [x4, x5]
    1cc0:	add	x3, x3, #0x1
    1cc4:	cmp	x3, #0x270
    1cc8:	b.ne	1cd8 <_PyTime_GetMonotonicClock@plt+0x968>  // b.any
    1ccc:	ldr	w1, [x20, #2512]
    1cd0:	mov	x3, #0x1                   	// #1
    1cd4:	str	w1, [x20, #20]
    1cd8:	lsl	x5, x3, #2
    1cdc:	subs	x0, x0, #0x1
    1ce0:	add	x1, x4, x5
    1ce4:	b.ne	1ca4 <_PyTime_GetMonotonicClock@plt+0x934>  // b.any
    1ce8:	ldr	x19, [x19, #4048]
    1cec:	mov	w0, #0x80000000            	// #-2147483648
    1cf0:	str	w0, [x20, #20]
    1cf4:	mov	x24, x19
    1cf8:	ldr	x0, [x19]
    1cfc:	add	x0, x0, #0x1
    1d00:	str	x0, [x19]
    1d04:	ldr	x0, [x22]
    1d08:	sub	x0, x0, #0x1
    1d0c:	str	x0, [x22]
    1d10:	cbnz	x0, 1d48 <_PyTime_GetMonotonicClock@plt+0x9d8>
    1d14:	mov	x0, x22
    1d18:	bl	11b0 <_Py_Dealloc@plt>
    1d1c:	b	1d48 <_PyTime_GetMonotonicClock@plt+0x9d8>
    1d20:	mov	x0, x1
    1d24:	bl	12c0 <PyObject_Hash@plt>
    1d28:	cmn	x0, #0x1
    1d2c:	b.eq	1d40 <_PyTime_GetMonotonicClock@plt+0x9d0>  // b.none
    1d30:	bl	11d0 <PyLong_FromSize_t@plt>
    1d34:	mov	x22, x0
    1d38:	cbnz	x22, 1b78 <_PyTime_GetMonotonicClock@plt+0x808>
    1d3c:	nop
    1d40:	mov	x23, #0x0                   	// #0
    1d44:	mov	x24, #0x0                   	// #0
    1d48:	mov	x0, x23
    1d4c:	bl	1180 <PyMem_Free@plt>
    1d50:	mov	x0, x24
    1d54:	ldp	x19, x20, [sp, #16]
    1d58:	ldp	x21, x22, [sp, #32]
    1d5c:	ldp	x23, x24, [sp, #48]
    1d60:	ldp	x29, x30, [sp], #96
    1d64:	ret
    1d68:	bl	19c0 <_PyTime_GetMonotonicClock@plt+0x650>
    1d6c:	tbnz	w0, #31, 1dbc <_PyTime_GetMonotonicClock@plt+0xa4c>
    1d70:	ldr	x19, [x19, #4048]
    1d74:	mov	x24, x19
    1d78:	ldr	x0, [x19]
    1d7c:	add	x0, x0, #0x1
    1d80:	str	x0, [x19]
    1d84:	mov	x0, x24
    1d88:	ldp	x19, x20, [sp, #16]
    1d8c:	ldp	x23, x24, [sp, #48]
    1d90:	ldp	x29, x30, [sp], #96
    1d94:	ret
    1d98:	mov	x23, #0x0                   	// #0
    1d9c:	mov	x24, #0x0                   	// #0
    1da0:	bl	1290 <PyErr_Occurred@plt>
    1da4:	cbnz	x0, 1d04 <_PyTime_GetMonotonicClock@plt+0x994>
    1da8:	sub	x21, x21, #0x1
    1dac:	lsr	x21, x21, #5
    1db0:	add	x21, x21, #0x1
    1db4:	lsl	x24, x21, #2
    1db8:	b	1b98 <_PyTime_GetMonotonicClock@plt+0x828>
    1dbc:	stp	x21, x22, [sp, #32]
    1dc0:	bl	1250 <PyErr_Clear@plt>
    1dc4:	bl	11a0 <_PyTime_GetSystemClock@plt>
    1dc8:	mov	w21, w0
    1dcc:	str	x0, [sp, #72]
    1dd0:	bl	11f0 <getpid@plt>
    1dd4:	str	w0, [sp, #80]
    1dd8:	bl	1370 <_PyTime_GetMonotonicClock@plt>
    1ddc:	stur	x0, [sp, #84]
    1de0:	mov	w5, #0xd6aa                	// #54954
    1de4:	mov	w1, #0x8965                	// #35173
    1de8:	movk	w5, #0x12b, lsl #16
    1dec:	add	x4, x20, #0x14
    1df0:	mov	w2, w5
    1df4:	mov	x3, #0x1                   	// #1
    1df8:	movk	w1, #0x6c07, lsl #16
    1dfc:	str	w5, [x20, #20]
    1e00:	eor	w2, w2, w2, lsr #30
    1e04:	madd	w2, w2, w1, w3
    1e08:	str	w2, [x4, x3, lsl #2]
    1e0c:	add	x3, x3, #0x1
    1e10:	cmp	x3, #0x270
    1e14:	b.ne	1e00 <_PyTime_GetMonotonicClock@plt+0xa90>  // b.any
    1e18:	mov	w7, #0x660d                	// #26125
    1e1c:	ldr	w1, [x20, #20]
    1e20:	add	x8, sp, #0x48
    1e24:	mov	x5, #0x0                   	// #0
    1e28:	mov	x2, #0x1                   	// #1
    1e2c:	movk	w7, #0x19, lsl #16
    1e30:	str	w3, [x20, #16]
    1e34:	b	1e50 <_PyTime_GetMonotonicClock@plt+0xae0>
    1e38:	ldr	w1, [x4, x6]
    1e3c:	cmp	x5, #0x5
    1e40:	csel	x5, x5, xzr, cc  // cc = lo, ul, last
    1e44:	subs	x3, x3, #0x1
    1e48:	b.eq	1e9c <_PyTime_GetMonotonicClock@plt+0xb2c>  // b.none
    1e4c:	ldr	w21, [x8, x5, lsl #2]
    1e50:	eor	w1, w1, w1, lsr #30
    1e54:	ldr	w0, [x4, x2, lsl #2]
    1e58:	lsl	x6, x2, #2
    1e5c:	mul	w1, w1, w7
    1e60:	eor	w1, w1, w0
    1e64:	add	w1, w1, w5
    1e68:	add	x5, x5, #0x1
    1e6c:	add	w1, w1, w21
    1e70:	str	w1, [x4, x2, lsl #2]
    1e74:	add	x2, x2, #0x1
    1e78:	cmp	x2, #0x26f
    1e7c:	b.ls	1e38 <_PyTime_GetMonotonicClock@plt+0xac8>  // b.plast
    1e80:	ldr	w1, [x20, #2512]
    1e84:	mov	x2, #0x1                   	// #1
    1e88:	str	w1, [x20, #20]
    1e8c:	b	1e3c <_PyTime_GetMonotonicClock@plt+0xacc>
    1e90:	mov	x24, #0x0                   	// #0
    1e94:	bl	11c0 <PyErr_NoMemory@plt>
    1e98:	b	1d04 <_PyTime_GetMonotonicClock@plt+0x994>
    1e9c:	mov	w6, #0x8b65                	// #35685
    1ea0:	lsl	x0, x2, #2
    1ea4:	mov	x3, #0x26f                 	// #623
    1ea8:	movk	w6, #0x5d58, lsl #16
    1eac:	b	1eb4 <_PyTime_GetMonotonicClock@plt+0xb44>
    1eb0:	ldur	w1, [x1, #-4]
    1eb4:	eor	w1, w1, w1, lsr #30
    1eb8:	ldr	w5, [x4, x0]
    1ebc:	mul	w1, w1, w6
    1ec0:	eor	w1, w1, w5
    1ec4:	sub	w1, w1, w2
    1ec8:	str	w1, [x4, x0]
    1ecc:	add	x2, x2, #0x1
    1ed0:	cmp	x2, #0x270
    1ed4:	b.ne	1ee4 <_PyTime_GetMonotonicClock@plt+0xb74>  // b.any
    1ed8:	ldr	w0, [x20, #2512]
    1edc:	mov	x2, #0x1                   	// #1
    1ee0:	str	w0, [x20, #20]
    1ee4:	lsl	x0, x2, #2
    1ee8:	subs	x3, x3, #0x1
    1eec:	add	x1, x4, x0
    1ef0:	b.ne	1eb0 <_PyTime_GetMonotonicClock@plt+0xb40>  // b.any
    1ef4:	mov	w0, #0x80000000            	// #-2147483648
    1ef8:	ldp	x21, x22, [sp, #32]
    1efc:	str	w0, [x20, #20]
    1f00:	b	1d70 <_PyTime_GetMonotonicClock@plt+0xa00>
    1f04:	nop
    1f08:	stp	x29, x30, [sp, #-32]!
    1f0c:	cmp	x2, #0x0
    1f10:	mov	x29, sp
    1f14:	stp	x19, x20, [sp, #16]
    1f18:	mov	x19, x0
    1f1c:	adrp	x0, 13000 <PyInit__random@@Base+0x10f98>
    1f20:	add	x0, x0, #0x110
    1f24:	mov	x20, x1
    1f28:	ccmp	x19, x0, #0x0, ne  // ne = any
    1f2c:	b.eq	1fac <_PyTime_GetMonotonicClock@plt+0xc3c>  // b.none
    1f30:	ldr	x2, [x19, #304]
    1f34:	mov	x0, x19
    1f38:	mov	x1, #0x0                   	// #0
    1f3c:	blr	x2
    1f40:	mov	x19, x0
    1f44:	cbz	x0, 1f98 <_PyTime_GetMonotonicClock@plt+0xc28>
    1f48:	mov	x1, x20
    1f4c:	bl	1b20 <_PyTime_GetMonotonicClock@plt+0x7b0>
    1f50:	cbz	x0, 1f88 <_PyTime_GetMonotonicClock@plt+0xc18>
    1f54:	ldr	x2, [x0]
    1f58:	sub	x2, x2, #0x1
    1f5c:	str	x2, [x0]
    1f60:	cbz	x2, 1f74 <_PyTime_GetMonotonicClock@plt+0xc04>
    1f64:	mov	x0, x19
    1f68:	ldp	x19, x20, [sp, #16]
    1f6c:	ldp	x29, x30, [sp], #32
    1f70:	ret
    1f74:	bl	11b0 <_Py_Dealloc@plt>
    1f78:	mov	x0, x19
    1f7c:	ldp	x19, x20, [sp, #16]
    1f80:	ldp	x29, x30, [sp], #32
    1f84:	ret
    1f88:	ldr	x0, [x19]
    1f8c:	sub	x0, x0, #0x1
    1f90:	str	x0, [x19]
    1f94:	cbz	x0, 1fc8 <_PyTime_GetMonotonicClock@plt+0xc58>
    1f98:	mov	x19, #0x0                   	// #0
    1f9c:	mov	x0, x19
    1fa0:	ldp	x19, x20, [sp, #16]
    1fa4:	ldp	x29, x30, [sp], #32
    1fa8:	ret
    1fac:	adrp	x0, 2000 <_PyTime_GetMonotonicClock@plt+0xc90>
    1fb0:	mov	x1, x2
    1fb4:	add	x0, x0, #0x1e8
    1fb8:	bl	1340 <_PyArg_NoKeywords@plt>
    1fbc:	cbnz	w0, 1f30 <_PyTime_GetMonotonicClock@plt+0xbc0>
    1fc0:	mov	x19, #0x0                   	// #0
    1fc4:	b	1f9c <_PyTime_GetMonotonicClock@plt+0xc2c>
    1fc8:	mov	x0, x19
    1fcc:	mov	x19, #0x0                   	// #0
    1fd0:	bl	11b0 <_Py_Dealloc@plt>
    1fd4:	b	1f64 <_PyTime_GetMonotonicClock@plt+0xbf4>
    1fd8:	stp	x29, x30, [sp, #-48]!
    1fdc:	cmp	x2, #0x1
    1fe0:	mov	x29, sp
    1fe4:	stp	x19, x20, [sp, #16]
    1fe8:	mov	x19, x2
    1fec:	mov	x20, x0
    1ff0:	str	x21, [sp, #32]
    1ff4:	mov	x21, x1
    1ff8:	b.hi	201c <_PyTime_GetMonotonicClock@plt+0xcac>  // b.pmore
    1ffc:	cmp	x19, #0x0
    2000:	b.le	204c <_PyTime_GetMonotonicClock@plt+0xcdc>
    2004:	mov	x0, x20
    2008:	ldr	x1, [x21]
    200c:	ldp	x19, x20, [sp, #16]
    2010:	ldr	x21, [sp, #32]
    2014:	ldp	x29, x30, [sp], #48
    2018:	b	1b20 <_PyTime_GetMonotonicClock@plt+0x7b0>
    201c:	adrp	x0, 2000 <_PyTime_GetMonotonicClock@plt+0xc90>
    2020:	mov	x1, x19
    2024:	add	x0, x0, #0x198
    2028:	mov	x3, #0x1                   	// #1
    202c:	mov	x2, #0x0                   	// #0
    2030:	bl	1280 <_PyArg_CheckPositional@plt>
    2034:	cbnz	w0, 1ffc <_PyTime_GetMonotonicClock@plt+0xc8c>
    2038:	mov	x0, #0x0                   	// #0
    203c:	ldp	x19, x20, [sp, #16]
    2040:	ldr	x21, [sp, #32]
    2044:	ldp	x29, x30, [sp], #48
    2048:	ret
    204c:	mov	x0, x20
    2050:	adrp	x1, 12000 <PyInit__random@@Base+0xff98>
    2054:	ldp	x19, x20, [sp, #16]
    2058:	ldr	x21, [sp, #32]
    205c:	ldp	x29, x30, [sp], #48
    2060:	ldr	x1, [x1, #4048]
    2064:	b	1b20 <_PyTime_GetMonotonicClock@plt+0x7b0>

0000000000002068 <PyInit__random@@Base>:
    2068:	stp	x29, x30, [sp, #-48]!
    206c:	mov	x29, sp
    2070:	stp	x19, x20, [sp, #16]
    2074:	adrp	x20, 13000 <PyInit__random@@Base+0x10f98>
    2078:	mov	x19, #0x0                   	// #0
    207c:	str	x21, [sp, #32]
    2080:	add	x21, x20, #0x110
    2084:	mov	x0, x21
    2088:	bl	1230 <PyType_Ready@plt>
    208c:	tbnz	w0, #31, 20c4 <PyInit__random@@Base+0x5c>
    2090:	adrp	x0, 13000 <PyInit__random@@Base+0x10f98>
    2094:	mov	w1, #0x3f5                 	// #1013
    2098:	add	x0, x0, #0x2b0
    209c:	bl	12a0 <PyModule_Create2@plt>
    20a0:	mov	x19, x0
    20a4:	cbz	x0, 20c4 <PyInit__random@@Base+0x5c>
    20a8:	ldr	x3, [x20, #272]
    20ac:	adrp	x1, 2000 <_PyTime_GetMonotonicClock@plt+0xc90>
    20b0:	mov	x2, x21
    20b4:	add	x1, x1, #0x1e8
    20b8:	add	x3, x3, #0x1
    20bc:	str	x3, [x20, #272]
    20c0:	bl	12f0 <PyModule_AddObject@plt>
    20c4:	mov	x0, x19
    20c8:	ldp	x19, x20, [sp, #16]
    20cc:	ldr	x21, [sp, #32]
    20d0:	ldp	x29, x30, [sp], #48
    20d4:	ret

Disassembly of section .fini:

00000000000020d8 <.fini>:
    20d8:	stp	x29, x30, [sp, #-16]!
    20dc:	mov	x29, sp
    20e0:	ldp	x29, x30, [sp], #16
    20e4:	ret
