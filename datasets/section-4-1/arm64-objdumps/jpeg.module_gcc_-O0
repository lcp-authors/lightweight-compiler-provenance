
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//jpeg.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_swap_bytes16>:
       0:	sub	sp, sp, #0x10
       4:	strh	w0, [sp, #14]
       8:	ldrh	w0, [sp, #14]
       c:	lsl	w0, w0, #8
      10:	sxth	w1, w0
      14:	ldrh	w0, [sp, #14]
      18:	lsr	w0, w0, #8
      1c:	and	w0, w0, #0xffff
      20:	sxth	w0, w0
      24:	orr	w0, w1, w0
      28:	sxth	w0, w0
      2c:	and	w0, w0, #0xffff
      30:	add	sp, sp, #0x10
      34:	ret

0000000000000038 <grub_jpeg_get_byte>:
      38:	stp	x29, x30, [sp, #-48]!
      3c:	mov	x29, sp
      40:	str	x0, [sp, #24]
      44:	strb	wzr, [sp, #47]
      48:	ldr	x0, [sp, #24]
      4c:	ldr	x0, [x0]
      50:	add	x1, sp, #0x2f
      54:	mov	x2, #0x1                   	// #1
      58:	bl	0 <grub_file_read>
      5c:	ldrb	w0, [sp, #47]
      60:	ldp	x29, x30, [sp], #48
      64:	ret

0000000000000068 <grub_jpeg_get_word>:
      68:	stp	x29, x30, [sp, #-48]!
      6c:	mov	x29, sp
      70:	str	x0, [sp, #24]
      74:	strh	wzr, [sp, #46]
      78:	ldr	x0, [sp, #24]
      7c:	ldr	x0, [x0]
      80:	add	x1, sp, #0x2e
      84:	mov	x2, #0x2                   	// #2
      88:	bl	0 <grub_file_read>
      8c:	ldrh	w0, [sp, #46]
      90:	bl	0 <grub_swap_bytes16>
      94:	and	w0, w0, #0xffff
      98:	ldp	x29, x30, [sp], #48
      9c:	ret

00000000000000a0 <grub_jpeg_get_bit>:
      a0:	stp	x29, x30, [sp, #-48]!
      a4:	mov	x29, sp
      a8:	str	x0, [sp, #24]
      ac:	ldr	x0, [sp, #24]
      b0:	ldr	w0, [x0, #2308]
      b4:	cmp	w0, #0x0
      b8:	b.ne	120 <grub_jpeg_get_bit+0x80>  // b.any
      bc:	ldr	x0, [sp, #24]
      c0:	bl	38 <grub_jpeg_get_byte>
      c4:	and	w0, w0, #0xff
      c8:	mov	w1, w0
      cc:	ldr	x0, [sp, #24]
      d0:	str	w1, [x0, #2312]
      d4:	ldr	x0, [sp, #24]
      d8:	ldr	w0, [x0, #2312]
      dc:	cmp	w0, #0xff
      e0:	b.ne	114 <grub_jpeg_get_bit+0x74>  // b.any
      e4:	ldr	x0, [sp, #24]
      e8:	bl	38 <grub_jpeg_get_byte>
      ec:	and	w0, w0, #0xff
      f0:	cmp	w0, #0x0
      f4:	b.eq	114 <grub_jpeg_get_bit+0x74>  // b.none
      f8:	adrp	x0, 0 <grub_swap_bytes16>
      fc:	add	x0, x0, #0x0
     100:	ldr	x1, [x0]
     104:	mov	w0, #0x4                   	// #4
     108:	bl	0 <grub_error>
     10c:	mov	w0, #0x0                   	// #0
     110:	b	15c <grub_jpeg_get_bit+0xbc>
     114:	ldr	x0, [sp, #24]
     118:	mov	w1, #0x80                  	// #128
     11c:	str	w1, [x0, #2308]
     120:	ldr	x0, [sp, #24]
     124:	ldr	w1, [x0, #2312]
     128:	ldr	x0, [sp, #24]
     12c:	ldr	w0, [x0, #2308]
     130:	and	w0, w1, w0
     134:	cmp	w0, #0x0
     138:	cset	w0, ne  // ne = any
     13c:	and	w0, w0, #0xff
     140:	str	w0, [sp, #44]
     144:	ldr	x0, [sp, #24]
     148:	ldr	w0, [x0, #2308]
     14c:	asr	w1, w0, #1
     150:	ldr	x0, [sp, #24]
     154:	str	w1, [x0, #2308]
     158:	ldr	w0, [sp, #44]
     15c:	ldp	x29, x30, [sp], #48
     160:	ret
     164:	nop
	...

0000000000000170 <grub_jpeg_get_number>:
     170:	stp	x29, x30, [sp, #-64]!
     174:	mov	x29, sp
     178:	str	x19, [sp, #16]
     17c:	str	x0, [sp, #40]
     180:	str	w1, [sp, #36]
     184:	ldr	w0, [sp, #36]
     188:	cmp	w0, #0x0
     18c:	b.ne	198 <grub_jpeg_get_number+0x28>  // b.any
     190:	mov	w0, #0x0                   	// #0
     194:	b	228 <grub_jpeg_get_number+0xb8>
     198:	ldr	x0, [sp, #40]
     19c:	bl	a0 <grub_jpeg_get_bit>
     1a0:	str	w0, [sp, #60]
     1a4:	ldr	w0, [sp, #60]
     1a8:	str	w0, [sp, #52]
     1ac:	mov	w0, #0x1                   	// #1
     1b0:	str	w0, [sp, #56]
     1b4:	b	1e8 <grub_jpeg_get_number+0x78>
     1b8:	ldr	w0, [sp, #60]
     1bc:	lsl	w19, w0, #1
     1c0:	ldr	x0, [sp, #40]
     1c4:	bl	a0 <grub_jpeg_get_bit>
     1c8:	cmp	w0, #0x0
     1cc:	cset	w0, ne  // ne = any
     1d0:	and	w0, w0, #0xff
     1d4:	add	w0, w19, w0
     1d8:	str	w0, [sp, #60]
     1dc:	ldr	w0, [sp, #56]
     1e0:	add	w0, w0, #0x1
     1e4:	str	w0, [sp, #56]
     1e8:	ldr	w1, [sp, #56]
     1ec:	ldr	w0, [sp, #36]
     1f0:	cmp	w1, w0
     1f4:	b.lt	1b8 <grub_jpeg_get_number+0x48>  // b.tstop
     1f8:	ldr	w0, [sp, #52]
     1fc:	cmp	w0, #0x0
     200:	b.ne	224 <grub_jpeg_get_number+0xb4>  // b.any
     204:	ldr	w0, [sp, #36]
     208:	mov	w1, #0x1                   	// #1
     20c:	lsl	w0, w1, w0
     210:	mov	w1, #0x1                   	// #1
     214:	sub	w0, w1, w0
     218:	ldr	w1, [sp, #60]
     21c:	add	w0, w1, w0
     220:	str	w0, [sp, #60]
     224:	ldr	w0, [sp, #60]
     228:	ldr	x19, [sp, #16]
     22c:	ldp	x29, x30, [sp], #64
     230:	ret

0000000000000234 <grub_jpeg_get_huff_code>:
     234:	stp	x29, x30, [sp, #-48]!
     238:	mov	x29, sp
     23c:	str	x0, [sp, #24]
     240:	str	w1, [sp, #20]
     244:	str	wzr, [sp, #44]
     248:	str	wzr, [sp, #40]
     24c:	b	2f0 <grub_jpeg_get_huff_code+0xbc>
     250:	ldr	w0, [sp, #44]
     254:	lsl	w0, w0, #1
     258:	str	w0, [sp, #44]
     25c:	ldr	x0, [sp, #24]
     260:	bl	a0 <grub_jpeg_get_bit>
     264:	cmp	w0, #0x0
     268:	b.eq	278 <grub_jpeg_get_huff_code+0x44>  // b.none
     26c:	ldr	w0, [sp, #44]
     270:	add	w0, w0, #0x1
     274:	str	w0, [sp, #44]
     278:	ldr	x0, [sp, #24]
     27c:	ldr	w1, [sp, #40]
     280:	ldrsw	x2, [sp, #20]
     284:	lsl	x2, x2, #4
     288:	add	x1, x2, x1
     28c:	add	x1, x1, #0x50
     290:	ldr	w0, [x0, x1, lsl #2]
     294:	ldr	w1, [sp, #44]
     298:	cmp	w1, w0
     29c:	b.ge	2e4 <grub_jpeg_get_huff_code+0xb0>  // b.tcont
     2a0:	ldr	x0, [sp, #24]
     2a4:	ldrsw	x1, [sp, #20]
     2a8:	add	x1, x1, #0x4
     2ac:	ldr	x1, [x0, x1, lsl #3]
     2b0:	ldr	x0, [sp, #24]
     2b4:	ldr	w2, [sp, #40]
     2b8:	ldrsw	x3, [sp, #20]
     2bc:	lsl	x3, x3, #4
     2c0:	add	x2, x3, x2
     2c4:	add	x2, x2, #0x10
     2c8:	ldr	w2, [x0, x2, lsl #2]
     2cc:	ldr	w0, [sp, #44]
     2d0:	add	w0, w2, w0
     2d4:	sxtw	x0, w0
     2d8:	add	x0, x1, x0
     2dc:	ldrb	w0, [x0]
     2e0:	b	314 <grub_jpeg_get_huff_code+0xe0>
     2e4:	ldr	w0, [sp, #40]
     2e8:	add	w0, w0, #0x1
     2ec:	str	w0, [sp, #40]
     2f0:	ldr	w0, [sp, #40]
     2f4:	cmp	w0, #0xf
     2f8:	b.ls	250 <grub_jpeg_get_huff_code+0x1c>  // b.plast
     2fc:	adrp	x0, 0 <grub_swap_bytes16>
     300:	add	x0, x0, #0x0
     304:	ldr	x1, [x0]
     308:	mov	w0, #0x4                   	// #4
     30c:	bl	0 <grub_error>
     310:	mov	w0, #0x0                   	// #0
     314:	ldp	x29, x30, [sp], #48
     318:	ret
     31c:	nop
	...

0000000000000328 <grub_jpeg_decode_huff_table>:
     328:	stp	x29, x30, [sp, #-80]!
     32c:	mov	x29, sp
     330:	str	x0, [sp, #24]
     334:	ldr	x0, [sp, #24]
     338:	ldr	x0, [x0]
     33c:	ldr	x0, [x0, #24]
     340:	str	w0, [sp, #60]
     344:	ldr	x0, [sp, #24]
     348:	bl	68 <grub_jpeg_get_word>
     34c:	and	w0, w0, #0xffff
     350:	mov	w1, w0
     354:	ldr	w0, [sp, #60]
     358:	add	w0, w0, w1
     35c:	str	w0, [sp, #60]
     360:	b	584 <grub_jpeg_decode_huff_table+0x25c>
     364:	ldr	x0, [sp, #24]
     368:	bl	38 <grub_jpeg_get_byte>
     36c:	and	w0, w0, #0xff
     370:	str	w0, [sp, #56]
     374:	ldr	w0, [sp, #56]
     378:	asr	w0, w0, #4
     37c:	and	w0, w0, #0x1
     380:	str	w0, [sp, #52]
     384:	ldr	w0, [sp, #56]
     388:	and	w0, w0, #0xf
     38c:	str	w0, [sp, #56]
     390:	ldr	w0, [sp, #56]
     394:	cmp	w0, #0x1
     398:	b.le	3b4 <grub_jpeg_decode_huff_table+0x8c>
     39c:	adrp	x0, 0 <grub_swap_bytes16>
     3a0:	add	x0, x0, #0x0
     3a4:	ldr	x1, [x0]
     3a8:	mov	w0, #0x4                   	// #4
     3ac:	bl	0 <grub_error>
     3b0:	b	5dc <grub_jpeg_decode_huff_table+0x2b4>
     3b4:	ldr	x0, [sp, #24]
     3b8:	ldr	x0, [x0]
     3bc:	add	x1, sp, #0x20
     3c0:	mov	x2, #0x10                  	// #16
     3c4:	bl	0 <grub_file_read>
     3c8:	cmp	x0, #0x10
     3cc:	b.eq	3e4 <grub_jpeg_decode_huff_table+0xbc>  // b.none
     3d0:	adrp	x0, 0 <grub_swap_bytes16>
     3d4:	add	x0, x0, #0x0
     3d8:	ldr	x0, [x0]
     3dc:	ldr	w0, [x0]
     3e0:	b	5dc <grub_jpeg_decode_huff_table+0x2b4>
     3e4:	str	wzr, [sp, #76]
     3e8:	str	wzr, [sp, #64]
     3ec:	b	418 <grub_jpeg_decode_huff_table+0xf0>
     3f0:	ldr	w0, [sp, #64]
     3f4:	add	x1, sp, #0x20
     3f8:	ldrb	w0, [x1, x0]
     3fc:	mov	w1, w0
     400:	ldr	w0, [sp, #76]
     404:	add	w0, w0, w1
     408:	str	w0, [sp, #76]
     40c:	ldr	w0, [sp, #64]
     410:	add	w0, w0, #0x1
     414:	str	w0, [sp, #64]
     418:	ldr	w0, [sp, #64]
     41c:	cmp	w0, #0xf
     420:	b.ls	3f0 <grub_jpeg_decode_huff_table+0xc8>  // b.plast
     424:	ldr	w0, [sp, #52]
     428:	lsl	w0, w0, #1
     42c:	ldr	w1, [sp, #56]
     430:	add	w0, w1, w0
     434:	str	w0, [sp, #56]
     438:	ldrsw	x0, [sp, #76]
     43c:	bl	0 <grub_malloc>
     440:	mov	x2, x0
     444:	ldr	x0, [sp, #24]
     448:	ldrsw	x1, [sp, #56]
     44c:	add	x1, x1, #0x4
     450:	str	x2, [x0, x1, lsl #3]
     454:	adrp	x0, 0 <grub_swap_bytes16>
     458:	add	x0, x0, #0x0
     45c:	ldr	x0, [x0]
     460:	ldr	w0, [x0]
     464:	cmp	w0, #0x0
     468:	b.eq	480 <grub_jpeg_decode_huff_table+0x158>  // b.none
     46c:	adrp	x0, 0 <grub_swap_bytes16>
     470:	add	x0, x0, #0x0
     474:	ldr	x0, [x0]
     478:	ldr	w0, [x0]
     47c:	b	5dc <grub_jpeg_decode_huff_table+0x2b4>
     480:	ldr	x0, [sp, #24]
     484:	ldr	x3, [x0]
     488:	ldr	x0, [sp, #24]
     48c:	ldrsw	x1, [sp, #56]
     490:	add	x1, x1, #0x4
     494:	ldr	x0, [x0, x1, lsl #3]
     498:	ldrsw	x1, [sp, #76]
     49c:	mov	x2, x1
     4a0:	mov	x1, x0
     4a4:	mov	x0, x3
     4a8:	bl	0 <grub_file_read>
     4ac:	mov	x1, x0
     4b0:	ldrsw	x0, [sp, #76]
     4b4:	cmp	x1, x0
     4b8:	b.eq	4d0 <grub_jpeg_decode_huff_table+0x1a8>  // b.none
     4bc:	adrp	x0, 0 <grub_swap_bytes16>
     4c0:	add	x0, x0, #0x0
     4c4:	ldr	x0, [x0]
     4c8:	ldr	w0, [x0]
     4cc:	b	5dc <grub_jpeg_decode_huff_table+0x2b4>
     4d0:	str	wzr, [sp, #72]
     4d4:	str	wzr, [sp, #68]
     4d8:	str	wzr, [sp, #64]
     4dc:	b	578 <grub_jpeg_decode_huff_table+0x250>
     4e0:	ldr	w0, [sp, #64]
     4e4:	add	x1, sp, #0x20
     4e8:	ldrb	w0, [x1, x0]
     4ec:	mov	w1, w0
     4f0:	ldr	w0, [sp, #72]
     4f4:	add	w0, w0, w1
     4f8:	str	w0, [sp, #72]
     4fc:	ldr	w0, [sp, #64]
     500:	add	x1, sp, #0x20
     504:	ldrb	w0, [x1, x0]
     508:	mov	w1, w0
     50c:	ldr	w0, [sp, #68]
     510:	add	w0, w0, w1
     514:	str	w0, [sp, #68]
     518:	ldr	x0, [sp, #24]
     51c:	ldr	w1, [sp, #64]
     520:	ldrsw	x2, [sp, #56]
     524:	lsl	x2, x2, #4
     528:	add	x1, x2, x1
     52c:	add	x1, x1, #0x50
     530:	ldr	w2, [sp, #72]
     534:	str	w2, [x0, x1, lsl #2]
     538:	ldr	w1, [sp, #68]
     53c:	ldr	w0, [sp, #72]
     540:	sub	w2, w1, w0
     544:	ldr	x0, [sp, #24]
     548:	ldr	w1, [sp, #64]
     54c:	ldrsw	x3, [sp, #56]
     550:	lsl	x3, x3, #4
     554:	add	x1, x3, x1
     558:	add	x1, x1, #0x10
     55c:	str	w2, [x0, x1, lsl #2]
     560:	ldr	w0, [sp, #72]
     564:	lsl	w0, w0, #1
     568:	str	w0, [sp, #72]
     56c:	ldr	w0, [sp, #64]
     570:	add	w0, w0, #0x1
     574:	str	w0, [sp, #64]
     578:	ldr	w0, [sp, #64]
     57c:	cmp	w0, #0xf
     580:	b.ls	4e0 <grub_jpeg_decode_huff_table+0x1b8>  // b.plast
     584:	ldr	x0, [sp, #24]
     588:	ldr	x0, [x0]
     58c:	ldr	x0, [x0, #24]
     590:	add	x1, x0, #0x11
     594:	ldr	w0, [sp, #60]
     598:	cmp	x1, x0
     59c:	b.ls	364 <grub_jpeg_decode_huff_table+0x3c>  // b.plast
     5a0:	ldr	x0, [sp, #24]
     5a4:	ldr	x0, [x0]
     5a8:	ldr	x1, [x0, #24]
     5ac:	ldr	w0, [sp, #60]
     5b0:	cmp	x1, x0
     5b4:	b.eq	5cc <grub_jpeg_decode_huff_table+0x2a4>  // b.none
     5b8:	adrp	x0, 0 <grub_swap_bytes16>
     5bc:	add	x0, x0, #0x0
     5c0:	ldr	x1, [x0]
     5c4:	mov	w0, #0x4                   	// #4
     5c8:	bl	0 <grub_error>
     5cc:	adrp	x0, 0 <grub_swap_bytes16>
     5d0:	add	x0, x0, #0x0
     5d4:	ldr	x0, [x0]
     5d8:	ldr	w0, [x0]
     5dc:	ldp	x29, x30, [sp], #80
     5e0:	ret
     5e4:	nop
	...

0000000000000600 <grub_jpeg_decode_quan_table>:
     600:	stp	x29, x30, [sp, #-48]!
     604:	mov	x29, sp
     608:	str	x0, [sp, #24]
     60c:	ldr	x0, [sp, #24]
     610:	ldr	x0, [x0]
     614:	ldr	x0, [x0, #24]
     618:	str	w0, [sp, #44]
     61c:	ldr	x0, [sp, #24]
     620:	bl	68 <grub_jpeg_get_word>
     624:	and	w0, w0, #0xffff
     628:	mov	w1, w0
     62c:	ldr	w0, [sp, #44]
     630:	add	w0, w0, w1
     634:	str	w0, [sp, #44]
     638:	b	6dc <grub_jpeg_decode_quan_table+0xdc>
     63c:	ldr	x0, [sp, #24]
     640:	bl	38 <grub_jpeg_get_byte>
     644:	and	w0, w0, #0xff
     648:	str	w0, [sp, #40]
     64c:	ldr	w0, [sp, #40]
     650:	cmp	w0, #0xf
     654:	b.le	670 <grub_jpeg_decode_quan_table+0x70>
     658:	adrp	x0, 0 <grub_swap_bytes16>
     65c:	add	x0, x0, #0x0
     660:	ldr	x1, [x0]
     664:	mov	w0, #0x4                   	// #4
     668:	bl	0 <grub_error>
     66c:	b	734 <grub_jpeg_decode_quan_table+0x134>
     670:	ldr	w0, [sp, #40]
     674:	cmp	w0, #0x1
     678:	b.le	694 <grub_jpeg_decode_quan_table+0x94>
     67c:	adrp	x0, 0 <grub_swap_bytes16>
     680:	add	x0, x0, #0x0
     684:	ldr	x1, [x0]
     688:	mov	w0, #0x4                   	// #4
     68c:	bl	0 <grub_error>
     690:	b	734 <grub_jpeg_decode_quan_table+0x134>
     694:	ldr	x0, [sp, #24]
     698:	ldr	x3, [x0]
     69c:	ldrsw	x0, [sp, #40]
     6a0:	add	x0, x0, #0x9
     6a4:	lsl	x0, x0, #6
     6a8:	ldr	x1, [sp, #24]
     6ac:	add	x0, x1, x0
     6b0:	mov	x2, #0x40                  	// #64
     6b4:	mov	x1, x0
     6b8:	mov	x0, x3
     6bc:	bl	0 <grub_file_read>
     6c0:	cmp	x0, #0x40
     6c4:	b.eq	6dc <grub_jpeg_decode_quan_table+0xdc>  // b.none
     6c8:	adrp	x0, 0 <grub_swap_bytes16>
     6cc:	add	x0, x0, #0x0
     6d0:	ldr	x0, [x0]
     6d4:	ldr	w0, [x0]
     6d8:	b	734 <grub_jpeg_decode_quan_table+0x134>
     6dc:	ldr	x0, [sp, #24]
     6e0:	ldr	x0, [x0]
     6e4:	ldr	x0, [x0, #24]
     6e8:	add	x1, x0, #0x41
     6ec:	ldr	w0, [sp, #44]
     6f0:	cmp	x1, x0
     6f4:	b.ls	63c <grub_jpeg_decode_quan_table+0x3c>  // b.plast
     6f8:	ldr	x0, [sp, #24]
     6fc:	ldr	x0, [x0]
     700:	ldr	x1, [x0, #24]
     704:	ldr	w0, [sp, #44]
     708:	cmp	x1, x0
     70c:	b.eq	724 <grub_jpeg_decode_quan_table+0x124>  // b.none
     710:	adrp	x0, 0 <grub_swap_bytes16>
     714:	add	x0, x0, #0x0
     718:	ldr	x1, [x0]
     71c:	mov	w0, #0x4                   	// #4
     720:	bl	0 <grub_error>
     724:	adrp	x0, 0 <grub_swap_bytes16>
     728:	add	x0, x0, #0x0
     72c:	ldr	x0, [x0]
     730:	ldr	w0, [x0]
     734:	ldp	x29, x30, [sp], #48
     738:	ret
     73c:	nop
	...

0000000000000760 <grub_jpeg_decode_sof>:
     760:	stp	x29, x30, [sp, #-64]!
     764:	mov	x29, sp
     768:	str	x0, [sp, #24]
     76c:	ldr	x0, [sp, #24]
     770:	ldr	x0, [x0]
     774:	ldr	x0, [x0, #24]
     778:	str	w0, [sp, #56]
     77c:	ldr	x0, [sp, #24]
     780:	bl	68 <grub_jpeg_get_word>
     784:	and	w0, w0, #0xffff
     788:	mov	w1, w0
     78c:	ldr	w0, [sp, #56]
     790:	add	w0, w0, w1
     794:	str	w0, [sp, #56]
     798:	ldr	x0, [sp, #24]
     79c:	bl	38 <grub_jpeg_get_byte>
     7a0:	and	w0, w0, #0xff
     7a4:	cmp	w0, #0x8
     7a8:	b.eq	7c4 <grub_jpeg_decode_sof+0x64>  // b.none
     7ac:	adrp	x0, 0 <grub_swap_bytes16>
     7b0:	add	x0, x0, #0x0
     7b4:	ldr	x1, [x0]
     7b8:	mov	w0, #0x4                   	// #4
     7bc:	bl	0 <grub_error>
     7c0:	b	a2c <grub_jpeg_decode_sof+0x2cc>
     7c4:	ldr	x0, [sp, #24]
     7c8:	bl	68 <grub_jpeg_get_word>
     7cc:	and	w0, w0, #0xffff
     7d0:	mov	w1, w0
     7d4:	ldr	x0, [sp, #24]
     7d8:	str	w1, [x0, #28]
     7dc:	ldr	x0, [sp, #24]
     7e0:	bl	68 <grub_jpeg_get_word>
     7e4:	and	w0, w0, #0xffff
     7e8:	mov	w1, w0
     7ec:	ldr	x0, [sp, #24]
     7f0:	str	w1, [x0, #24]
     7f4:	ldr	x0, [sp, #24]
     7f8:	ldr	w0, [x0, #28]
     7fc:	cmp	w0, #0x0
     800:	b.eq	814 <grub_jpeg_decode_sof+0xb4>  // b.none
     804:	ldr	x0, [sp, #24]
     808:	ldr	w0, [x0, #24]
     80c:	cmp	w0, #0x0
     810:	b.ne	82c <grub_jpeg_decode_sof+0xcc>  // b.any
     814:	adrp	x0, 0 <grub_swap_bytes16>
     818:	add	x0, x0, #0x0
     81c:	ldr	x1, [x0]
     820:	mov	w0, #0x4                   	// #4
     824:	bl	0 <grub_error>
     828:	b	a2c <grub_jpeg_decode_sof+0x2cc>
     82c:	ldr	x0, [sp, #24]
     830:	bl	38 <grub_jpeg_get_byte>
     834:	and	w0, w0, #0xff
     838:	str	w0, [sp, #52]
     83c:	ldr	w0, [sp, #52]
     840:	cmp	w0, #0x1
     844:	b.eq	86c <grub_jpeg_decode_sof+0x10c>  // b.none
     848:	ldr	w0, [sp, #52]
     84c:	cmp	w0, #0x3
     850:	b.eq	86c <grub_jpeg_decode_sof+0x10c>  // b.none
     854:	adrp	x0, 0 <grub_swap_bytes16>
     858:	add	x0, x0, #0x0
     85c:	ldr	x1, [x0]
     860:	mov	w0, #0x4                   	// #4
     864:	bl	0 <grub_error>
     868:	b	a2c <grub_jpeg_decode_sof+0x2cc>
     86c:	ldr	x0, [sp, #24]
     870:	ldr	w1, [sp, #52]
     874:	str	w1, [x0, #2304]
     878:	str	wzr, [sp, #60]
     87c:	b	9e0 <grub_jpeg_decode_sof+0x280>
     880:	ldr	x0, [sp, #24]
     884:	bl	38 <grub_jpeg_get_byte>
     888:	and	w0, w0, #0xff
     88c:	sub	w0, w0, #0x1
     890:	str	w0, [sp, #48]
     894:	ldr	w0, [sp, #48]
     898:	cmp	w0, #0x0
     89c:	b.lt	8ac <grub_jpeg_decode_sof+0x14c>  // b.tstop
     8a0:	ldr	w0, [sp, #48]
     8a4:	cmp	w0, #0x2
     8a8:	b.le	8c4 <grub_jpeg_decode_sof+0x164>
     8ac:	adrp	x0, 0 <grub_swap_bytes16>
     8b0:	add	x0, x0, #0x0
     8b4:	ldr	x1, [x0]
     8b8:	mov	w0, #0x4                   	// #4
     8bc:	bl	0 <grub_error>
     8c0:	b	a2c <grub_jpeg_decode_sof+0x2cc>
     8c4:	ldr	x0, [sp, #24]
     8c8:	bl	38 <grub_jpeg_get_byte>
     8cc:	and	w0, w0, #0xff
     8d0:	str	w0, [sp, #44]
     8d4:	ldr	w0, [sp, #48]
     8d8:	cmp	w0, #0x0
     8dc:	b.ne	980 <grub_jpeg_decode_sof+0x220>  // b.any
     8e0:	ldr	w0, [sp, #44]
     8e4:	and	w0, w0, #0xff
     8e8:	and	w0, w0, #0xf
     8ec:	strb	w0, [sp, #43]
     8f0:	ldr	w0, [sp, #44]
     8f4:	asr	w0, w0, #4
     8f8:	strb	w0, [sp, #42]
     8fc:	ldrb	w0, [sp, #43]
     900:	cmp	w0, #0x2
     904:	b.hi	92c <grub_jpeg_decode_sof+0x1cc>  // b.pmore
     908:	ldrb	w0, [sp, #42]
     90c:	cmp	w0, #0x2
     910:	b.hi	92c <grub_jpeg_decode_sof+0x1cc>  // b.pmore
     914:	ldrb	w0, [sp, #43]
     918:	cmp	w0, #0x0
     91c:	b.eq	92c <grub_jpeg_decode_sof+0x1cc>  // b.none
     920:	ldrb	w0, [sp, #42]
     924:	cmp	w0, #0x0
     928:	b.ne	944 <grub_jpeg_decode_sof+0x1e4>  // b.any
     92c:	adrp	x0, 0 <grub_swap_bytes16>
     930:	add	x0, x0, #0x0
     934:	ldr	x1, [x0]
     938:	mov	w0, #0x4                   	// #4
     93c:	bl	0 <grub_error>
     940:	b	a2c <grub_jpeg_decode_sof+0x2cc>
     944:	ldrb	w0, [sp, #43]
     948:	cmp	w0, #0x2
     94c:	cset	w0, eq  // eq = none
     950:	and	w0, w0, #0xff
     954:	mov	w1, w0
     958:	ldr	x0, [sp, #24]
     95c:	str	w1, [x0, #2276]
     960:	ldrb	w0, [sp, #42]
     964:	cmp	w0, #0x2
     968:	cset	w0, eq  // eq = none
     96c:	and	w0, w0, #0xff
     970:	mov	w1, w0
     974:	ldr	x0, [sp, #24]
     978:	str	w1, [x0, #2280]
     97c:	b	9a4 <grub_jpeg_decode_sof+0x244>
     980:	ldr	w0, [sp, #44]
     984:	cmp	w0, #0x11
     988:	b.eq	9a4 <grub_jpeg_decode_sof+0x244>  // b.none
     98c:	adrp	x0, 0 <grub_swap_bytes16>
     990:	add	x0, x0, #0x0
     994:	ldr	x1, [x0]
     998:	mov	w0, #0x4                   	// #4
     99c:	bl	0 <grub_error>
     9a0:	b	a2c <grub_jpeg_decode_sof+0x2cc>
     9a4:	ldr	x0, [sp, #24]
     9a8:	bl	38 <grub_jpeg_get_byte>
     9ac:	and	w0, w0, #0xff
     9b0:	mov	w3, w0
     9b4:	ldr	x2, [sp, #24]
     9b8:	ldrsw	x1, [sp, #48]
     9bc:	mov	x0, x1
     9c0:	lsl	x0, x0, #1
     9c4:	add	x0, x0, x1
     9c8:	lsl	x0, x0, #2
     9cc:	add	x0, x2, x0
     9d0:	str	w3, [x0, #704]
     9d4:	ldr	w0, [sp, #60]
     9d8:	add	w0, w0, #0x1
     9dc:	str	w0, [sp, #60]
     9e0:	ldr	w1, [sp, #60]
     9e4:	ldr	w0, [sp, #52]
     9e8:	cmp	w1, w0
     9ec:	b.lt	880 <grub_jpeg_decode_sof+0x120>  // b.tstop
     9f0:	ldr	x0, [sp, #24]
     9f4:	ldr	x0, [x0]
     9f8:	ldr	x1, [x0, #24]
     9fc:	ldr	w0, [sp, #56]
     a00:	cmp	x1, x0
     a04:	b.eq	a1c <grub_jpeg_decode_sof+0x2bc>  // b.none
     a08:	adrp	x0, 0 <grub_swap_bytes16>
     a0c:	add	x0, x0, #0x0
     a10:	ldr	x1, [x0]
     a14:	mov	w0, #0x4                   	// #4
     a18:	bl	0 <grub_error>
     a1c:	adrp	x0, 0 <grub_swap_bytes16>
     a20:	add	x0, x0, #0x0
     a24:	ldr	x0, [x0]
     a28:	ldr	w0, [x0]
     a2c:	ldp	x29, x30, [sp], #64
     a30:	ret
     a34:	nop
	...

0000000000000a70 <grub_jpeg_decode_dri>:
     a70:	stp	x29, x30, [sp, #-32]!
     a74:	mov	x29, sp
     a78:	str	x0, [sp, #24]
     a7c:	ldr	x0, [sp, #24]
     a80:	bl	68 <grub_jpeg_get_word>
     a84:	and	w0, w0, #0xffff
     a88:	cmp	w0, #0x4
     a8c:	b.eq	aa8 <grub_jpeg_decode_dri+0x38>  // b.none
     a90:	adrp	x0, 0 <grub_swap_bytes16>
     a94:	add	x0, x0, #0x0
     a98:	ldr	x1, [x0]
     a9c:	mov	w0, #0x4                   	// #4
     aa0:	bl	0 <grub_error>
     aa4:	b	ad0 <grub_jpeg_decode_dri+0x60>
     aa8:	ldr	x0, [sp, #24]
     aac:	bl	68 <grub_jpeg_get_word>
     ab0:	and	w0, w0, #0xffff
     ab4:	mov	w1, w0
     ab8:	ldr	x0, [sp, #24]
     abc:	str	w1, [x0, #2284]
     ac0:	adrp	x0, 0 <grub_swap_bytes16>
     ac4:	add	x0, x0, #0x0
     ac8:	ldr	x0, [x0]
     acc:	ldr	w0, [x0]
     ad0:	ldp	x29, x30, [sp], #32
     ad4:	ret
	...

0000000000000ae8 <grub_jpeg_idct_transform>:
     ae8:	sub	sp, sp, #0x50
     aec:	str	x0, [sp, #8]
     af0:	ldr	x0, [sp, #8]
     af4:	str	x0, [sp, #72]
     af8:	str	wzr, [sp, #68]
     afc:	b	f18 <grub_jpeg_idct_transform+0x430>
     b00:	ldr	x0, [sp, #72]
     b04:	add	x0, x0, #0x20
     b08:	ldr	w1, [x0]
     b0c:	ldr	x0, [sp, #72]
     b10:	add	x0, x0, #0x40
     b14:	ldr	w0, [x0]
     b18:	orr	w1, w1, w0
     b1c:	ldr	x0, [sp, #72]
     b20:	add	x0, x0, #0x60
     b24:	ldr	w0, [x0]
     b28:	orr	w1, w1, w0
     b2c:	ldr	x0, [sp, #72]
     b30:	add	x0, x0, #0x80
     b34:	ldr	w0, [x0]
     b38:	orr	w1, w1, w0
     b3c:	ldr	x0, [sp, #72]
     b40:	add	x0, x0, #0xa0
     b44:	ldr	w0, [x0]
     b48:	orr	w1, w1, w0
     b4c:	ldr	x0, [sp, #72]
     b50:	add	x0, x0, #0xc0
     b54:	ldr	w0, [x0]
     b58:	orr	w1, w1, w0
     b5c:	ldr	x0, [sp, #72]
     b60:	add	x0, x0, #0xe0
     b64:	ldr	w0, [x0]
     b68:	orr	w0, w1, w0
     b6c:	cmp	w0, #0x0
     b70:	b.ne	c00 <grub_jpeg_idct_transform+0x118>  // b.any
     b74:	ldr	x0, [sp, #72]
     b78:	ldr	w0, [x0]
     b7c:	lsl	w1, w0, #8
     b80:	ldr	x0, [sp, #72]
     b84:	str	w1, [x0]
     b88:	ldr	x0, [sp, #72]
     b8c:	add	x1, x0, #0xe0
     b90:	ldr	x0, [sp, #72]
     b94:	ldr	w0, [x0]
     b98:	str	w0, [x1]
     b9c:	ldr	x0, [sp, #72]
     ba0:	add	x0, x0, #0xc0
     ba4:	ldr	w1, [x1]
     ba8:	str	w1, [x0]
     bac:	ldr	x1, [sp, #72]
     bb0:	add	x1, x1, #0xa0
     bb4:	ldr	w0, [x0]
     bb8:	str	w0, [x1]
     bbc:	ldr	x0, [sp, #72]
     bc0:	add	x0, x0, #0x80
     bc4:	ldr	w1, [x1]
     bc8:	str	w1, [x0]
     bcc:	ldr	x1, [sp, #72]
     bd0:	add	x1, x1, #0x60
     bd4:	ldr	w0, [x0]
     bd8:	str	w0, [x1]
     bdc:	ldr	x0, [sp, #72]
     be0:	add	x0, x0, #0x40
     be4:	ldr	w1, [x1]
     be8:	str	w1, [x0]
     bec:	ldr	x1, [sp, #72]
     bf0:	add	x1, x1, #0x20
     bf4:	ldr	w0, [x0]
     bf8:	str	w0, [x1]
     bfc:	b	f00 <grub_jpeg_idct_transform+0x418>
     c00:	ldr	x0, [sp, #72]
     c04:	ldr	w0, [x0]
     c08:	str	w0, [sp, #44]
     c0c:	ldr	x0, [sp, #72]
     c10:	ldr	w0, [x0, #64]
     c14:	str	w0, [sp, #36]
     c18:	ldr	x0, [sp, #72]
     c1c:	ldr	w0, [x0, #128]
     c20:	str	w0, [sp, #32]
     c24:	ldr	x0, [sp, #72]
     c28:	ldr	w0, [x0, #192]
     c2c:	str	w0, [sp, #40]
     c30:	ldr	w1, [sp, #36]
     c34:	ldr	w0, [sp, #40]
     c38:	add	w1, w1, w0
     c3c:	mov	w0, #0x8b                  	// #139
     c40:	mul	w0, w1, w0
     c44:	str	w0, [sp, #64]
     c48:	ldr	w1, [sp, #44]
     c4c:	ldr	w0, [sp, #32]
     c50:	add	w0, w1, w0
     c54:	lsl	w0, w0, #8
     c58:	str	w0, [sp, #60]
     c5c:	ldr	w1, [sp, #44]
     c60:	ldr	w0, [sp, #32]
     c64:	sub	w0, w1, w0
     c68:	lsl	w0, w0, #8
     c6c:	str	w0, [sp, #56]
     c70:	ldr	w1, [sp, #40]
     c74:	mov	w0, #0xfffffe27            	// #-473
     c78:	mul	w0, w1, w0
     c7c:	ldr	w1, [sp, #64]
     c80:	add	w0, w1, w0
     c84:	str	w0, [sp, #52]
     c88:	ldr	w1, [sp, #36]
     c8c:	mov	w0, #0xc4                  	// #196
     c90:	mul	w0, w1, w0
     c94:	ldr	w1, [sp, #64]
     c98:	add	w0, w1, w0
     c9c:	str	w0, [sp, #48]
     ca0:	ldr	w1, [sp, #60]
     ca4:	ldr	w0, [sp, #48]
     ca8:	add	w0, w1, w0
     cac:	str	w0, [sp, #44]
     cb0:	ldr	w1, [sp, #60]
     cb4:	ldr	w0, [sp, #48]
     cb8:	sub	w0, w1, w0
     cbc:	str	w0, [sp, #40]
     cc0:	ldr	w1, [sp, #56]
     cc4:	ldr	w0, [sp, #52]
     cc8:	add	w0, w1, w0
     ccc:	str	w0, [sp, #36]
     cd0:	ldr	w1, [sp, #56]
     cd4:	ldr	w0, [sp, #52]
     cd8:	sub	w0, w1, w0
     cdc:	str	w0, [sp, #32]
     ce0:	ldr	x0, [sp, #72]
     ce4:	ldr	w0, [x0, #224]
     ce8:	str	w0, [sp, #28]
     cec:	ldr	x0, [sp, #72]
     cf0:	ldr	w0, [x0, #160]
     cf4:	str	w0, [sp, #24]
     cf8:	ldr	x0, [sp, #72]
     cfc:	ldr	w0, [x0, #96]
     d00:	str	w0, [sp, #20]
     d04:	ldr	x0, [sp, #72]
     d08:	ldr	w0, [x0, #32]
     d0c:	str	w0, [sp, #16]
     d10:	ldr	w1, [sp, #28]
     d14:	ldr	w0, [sp, #16]
     d18:	add	w0, w1, w0
     d1c:	str	w0, [sp, #60]
     d20:	ldr	w1, [sp, #24]
     d24:	ldr	w0, [sp, #20]
     d28:	add	w0, w1, w0
     d2c:	str	w0, [sp, #56]
     d30:	ldr	w1, [sp, #28]
     d34:	ldr	w0, [sp, #20]
     d38:	add	w0, w1, w0
     d3c:	str	w0, [sp, #52]
     d40:	ldr	w1, [sp, #24]
     d44:	ldr	w0, [sp, #16]
     d48:	add	w0, w1, w0
     d4c:	str	w0, [sp, #48]
     d50:	ldr	w1, [sp, #52]
     d54:	ldr	w0, [sp, #48]
     d58:	add	w1, w1, w0
     d5c:	mov	w0, #0x12d                 	// #301
     d60:	mul	w0, w1, w0
     d64:	str	w0, [sp, #64]
     d68:	ldr	w1, [sp, #60]
     d6c:	mov	w0, #0xe6                  	// #230
     d70:	mul	w0, w1, w0
     d74:	str	w0, [sp, #60]
     d78:	ldr	w1, [sp, #56]
     d7c:	mov	w0, #0x290                 	// #656
     d80:	mul	w0, w1, w0
     d84:	str	w0, [sp, #56]
     d88:	ldr	w1, [sp, #52]
     d8c:	mov	w0, #0x1f6                 	// #502
     d90:	mul	w1, w1, w0
     d94:	ldr	w0, [sp, #64]
     d98:	sub	w0, w1, w0
     d9c:	str	w0, [sp, #52]
     da0:	ldr	w1, [sp, #48]
     da4:	mov	w0, #0x64                  	// #100
     da8:	mul	w1, w1, w0
     dac:	ldr	w0, [sp, #64]
     db0:	sub	w0, w1, w0
     db4:	str	w0, [sp, #48]
     db8:	ldr	w1, [sp, #28]
     dbc:	mov	w0, #0x4c                  	// #76
     dc0:	mul	w1, w1, w0
     dc4:	ldr	w0, [sp, #60]
     dc8:	sub	w1, w1, w0
     dcc:	ldr	w0, [sp, #52]
     dd0:	sub	w0, w1, w0
     dd4:	str	w0, [sp, #28]
     dd8:	ldr	w1, [sp, #24]
     ddc:	mov	w0, #0x20e                 	// #526
     de0:	mul	w1, w1, w0
     de4:	ldr	w0, [sp, #56]
     de8:	sub	w1, w1, w0
     dec:	ldr	w0, [sp, #48]
     df0:	sub	w0, w1, w0
     df4:	str	w0, [sp, #24]
     df8:	ldr	w1, [sp, #20]
     dfc:	mov	w0, #0x313                 	// #787
     e00:	mul	w1, w1, w0
     e04:	ldr	w0, [sp, #56]
     e08:	sub	w1, w1, w0
     e0c:	ldr	w0, [sp, #52]
     e10:	sub	w0, w1, w0
     e14:	str	w0, [sp, #20]
     e18:	ldr	w1, [sp, #16]
     e1c:	mov	w0, w1
     e20:	lsl	w0, w0, #1
     e24:	add	w0, w0, w1
     e28:	lsl	w0, w0, #7
     e2c:	mov	w1, w0
     e30:	ldr	w0, [sp, #60]
     e34:	sub	w1, w1, w0
     e38:	ldr	w0, [sp, #48]
     e3c:	sub	w0, w1, w0
     e40:	str	w0, [sp, #16]
     e44:	ldr	w1, [sp, #44]
     e48:	ldr	w0, [sp, #16]
     e4c:	add	w1, w1, w0
     e50:	ldr	x0, [sp, #72]
     e54:	str	w1, [x0]
     e58:	ldr	x0, [sp, #72]
     e5c:	add	x0, x0, #0xe0
     e60:	ldr	w2, [sp, #44]
     e64:	ldr	w1, [sp, #16]
     e68:	sub	w1, w2, w1
     e6c:	str	w1, [x0]
     e70:	ldr	x0, [sp, #72]
     e74:	add	x0, x0, #0x20
     e78:	ldr	w2, [sp, #36]
     e7c:	ldr	w1, [sp, #20]
     e80:	add	w1, w2, w1
     e84:	str	w1, [x0]
     e88:	ldr	x0, [sp, #72]
     e8c:	add	x0, x0, #0xc0
     e90:	ldr	w2, [sp, #36]
     e94:	ldr	w1, [sp, #20]
     e98:	sub	w1, w2, w1
     e9c:	str	w1, [x0]
     ea0:	ldr	x0, [sp, #72]
     ea4:	add	x0, x0, #0x40
     ea8:	ldr	w2, [sp, #32]
     eac:	ldr	w1, [sp, #24]
     eb0:	add	w1, w2, w1
     eb4:	str	w1, [x0]
     eb8:	ldr	x0, [sp, #72]
     ebc:	add	x0, x0, #0xa0
     ec0:	ldr	w2, [sp, #32]
     ec4:	ldr	w1, [sp, #24]
     ec8:	sub	w1, w2, w1
     ecc:	str	w1, [x0]
     ed0:	ldr	x0, [sp, #72]
     ed4:	add	x0, x0, #0x60
     ed8:	ldr	w2, [sp, #40]
     edc:	ldr	w1, [sp, #28]
     ee0:	add	w1, w2, w1
     ee4:	str	w1, [x0]
     ee8:	ldr	x0, [sp, #72]
     eec:	add	x0, x0, #0x80
     ef0:	ldr	w2, [sp, #40]
     ef4:	ldr	w1, [sp, #28]
     ef8:	sub	w1, w2, w1
     efc:	str	w1, [x0]
     f00:	ldr	w0, [sp, #68]
     f04:	add	w0, w0, #0x1
     f08:	str	w0, [sp, #68]
     f0c:	ldr	x0, [sp, #72]
     f10:	add	x0, x0, #0x4
     f14:	str	x0, [sp, #72]
     f18:	ldr	w0, [sp, #68]
     f1c:	cmp	w0, #0x7
     f20:	b.le	b00 <grub_jpeg_idct_transform+0x18>
     f24:	ldr	x0, [sp, #8]
     f28:	str	x0, [sp, #72]
     f2c:	str	wzr, [sp, #68]
     f30:	b	1374 <grub_jpeg_idct_transform+0x88c>
     f34:	ldr	x0, [sp, #72]
     f38:	add	x0, x0, #0x4
     f3c:	ldr	w1, [x0]
     f40:	ldr	x0, [sp, #72]
     f44:	add	x0, x0, #0x8
     f48:	ldr	w0, [x0]
     f4c:	orr	w1, w1, w0
     f50:	ldr	x0, [sp, #72]
     f54:	add	x0, x0, #0xc
     f58:	ldr	w0, [x0]
     f5c:	orr	w1, w1, w0
     f60:	ldr	x0, [sp, #72]
     f64:	add	x0, x0, #0x10
     f68:	ldr	w0, [x0]
     f6c:	orr	w1, w1, w0
     f70:	ldr	x0, [sp, #72]
     f74:	add	x0, x0, #0x14
     f78:	ldr	w0, [x0]
     f7c:	orr	w1, w1, w0
     f80:	ldr	x0, [sp, #72]
     f84:	add	x0, x0, #0x18
     f88:	ldr	w0, [x0]
     f8c:	orr	w1, w1, w0
     f90:	ldr	x0, [sp, #72]
     f94:	add	x0, x0, #0x1c
     f98:	ldr	w0, [x0]
     f9c:	orr	w0, w1, w0
     fa0:	cmp	w0, #0x0
     fa4:	b.ne	1034 <grub_jpeg_idct_transform+0x54c>  // b.any
     fa8:	ldr	x0, [sp, #72]
     fac:	ldr	w0, [x0]
     fb0:	asr	w1, w0, #11
     fb4:	ldr	x0, [sp, #72]
     fb8:	str	w1, [x0]
     fbc:	ldr	x0, [sp, #72]
     fc0:	add	x1, x0, #0x1c
     fc4:	ldr	x0, [sp, #72]
     fc8:	ldr	w0, [x0]
     fcc:	str	w0, [x1]
     fd0:	ldr	x0, [sp, #72]
     fd4:	add	x0, x0, #0x18
     fd8:	ldr	w1, [x1]
     fdc:	str	w1, [x0]
     fe0:	ldr	x1, [sp, #72]
     fe4:	add	x1, x1, #0x14
     fe8:	ldr	w0, [x0]
     fec:	str	w0, [x1]
     ff0:	ldr	x0, [sp, #72]
     ff4:	add	x0, x0, #0x10
     ff8:	ldr	w1, [x1]
     ffc:	str	w1, [x0]
    1000:	ldr	x1, [sp, #72]
    1004:	add	x1, x1, #0xc
    1008:	ldr	w0, [x0]
    100c:	str	w0, [x1]
    1010:	ldr	x0, [sp, #72]
    1014:	add	x0, x0, #0x8
    1018:	ldr	w1, [x1]
    101c:	str	w1, [x0]
    1020:	ldr	x1, [sp, #72]
    1024:	add	x1, x1, #0x4
    1028:	ldr	w0, [x0]
    102c:	str	w0, [x1]
    1030:	b	135c <grub_jpeg_idct_transform+0x874>
    1034:	ldr	x0, [sp, #72]
    1038:	add	x0, x0, #0x8
    103c:	ldr	w1, [x0]
    1040:	ldr	x0, [sp, #72]
    1044:	add	x0, x0, #0x18
    1048:	ldr	w0, [x0]
    104c:	add	w1, w1, w0
    1050:	mov	w0, #0x8b                  	// #139
    1054:	mul	w0, w1, w0
    1058:	str	w0, [sp, #64]
    105c:	ldr	x0, [sp, #72]
    1060:	ldr	w1, [x0]
    1064:	ldr	x0, [sp, #72]
    1068:	add	x0, x0, #0x10
    106c:	ldr	w0, [x0]
    1070:	add	w0, w1, w0
    1074:	lsl	w0, w0, #8
    1078:	str	w0, [sp, #60]
    107c:	ldr	x0, [sp, #72]
    1080:	ldr	w1, [x0]
    1084:	ldr	x0, [sp, #72]
    1088:	add	x0, x0, #0x10
    108c:	ldr	w0, [x0]
    1090:	sub	w0, w1, w0
    1094:	lsl	w0, w0, #8
    1098:	str	w0, [sp, #56]
    109c:	ldr	x0, [sp, #72]
    10a0:	add	x0, x0, #0x18
    10a4:	ldr	w1, [x0]
    10a8:	mov	w0, #0xfffffe27            	// #-473
    10ac:	mul	w0, w1, w0
    10b0:	ldr	w1, [sp, #64]
    10b4:	add	w0, w1, w0
    10b8:	str	w0, [sp, #52]
    10bc:	ldr	x0, [sp, #72]
    10c0:	add	x0, x0, #0x8
    10c4:	ldr	w1, [x0]
    10c8:	mov	w0, #0xc4                  	// #196
    10cc:	mul	w0, w1, w0
    10d0:	ldr	w1, [sp, #64]
    10d4:	add	w0, w1, w0
    10d8:	str	w0, [sp, #48]
    10dc:	ldr	w1, [sp, #60]
    10e0:	ldr	w0, [sp, #48]
    10e4:	add	w0, w1, w0
    10e8:	str	w0, [sp, #44]
    10ec:	ldr	w1, [sp, #60]
    10f0:	ldr	w0, [sp, #48]
    10f4:	sub	w0, w1, w0
    10f8:	str	w0, [sp, #40]
    10fc:	ldr	w1, [sp, #56]
    1100:	ldr	w0, [sp, #52]
    1104:	add	w0, w1, w0
    1108:	str	w0, [sp, #36]
    110c:	ldr	w1, [sp, #56]
    1110:	ldr	w0, [sp, #52]
    1114:	sub	w0, w1, w0
    1118:	str	w0, [sp, #32]
    111c:	ldr	x0, [sp, #72]
    1120:	ldr	w0, [x0, #28]
    1124:	str	w0, [sp, #28]
    1128:	ldr	x0, [sp, #72]
    112c:	ldr	w0, [x0, #20]
    1130:	str	w0, [sp, #24]
    1134:	ldr	x0, [sp, #72]
    1138:	ldr	w0, [x0, #12]
    113c:	str	w0, [sp, #20]
    1140:	ldr	x0, [sp, #72]
    1144:	ldr	w0, [x0, #4]
    1148:	str	w0, [sp, #16]
    114c:	ldr	w1, [sp, #28]
    1150:	ldr	w0, [sp, #16]
    1154:	add	w0, w1, w0
    1158:	str	w0, [sp, #60]
    115c:	ldr	w1, [sp, #24]
    1160:	ldr	w0, [sp, #20]
    1164:	add	w0, w1, w0
    1168:	str	w0, [sp, #56]
    116c:	ldr	w1, [sp, #28]
    1170:	ldr	w0, [sp, #20]
    1174:	add	w0, w1, w0
    1178:	str	w0, [sp, #52]
    117c:	ldr	w1, [sp, #24]
    1180:	ldr	w0, [sp, #16]
    1184:	add	w0, w1, w0
    1188:	str	w0, [sp, #48]
    118c:	ldr	w1, [sp, #52]
    1190:	ldr	w0, [sp, #48]
    1194:	add	w1, w1, w0
    1198:	mov	w0, #0x12d                 	// #301
    119c:	mul	w0, w1, w0
    11a0:	str	w0, [sp, #64]
    11a4:	ldr	w1, [sp, #60]
    11a8:	mov	w0, #0xe6                  	// #230
    11ac:	mul	w0, w1, w0
    11b0:	str	w0, [sp, #60]
    11b4:	ldr	w1, [sp, #56]
    11b8:	mov	w0, #0x290                 	// #656
    11bc:	mul	w0, w1, w0
    11c0:	str	w0, [sp, #56]
    11c4:	ldr	w1, [sp, #52]
    11c8:	mov	w0, #0x1f6                 	// #502
    11cc:	mul	w1, w1, w0
    11d0:	ldr	w0, [sp, #64]
    11d4:	sub	w0, w1, w0
    11d8:	str	w0, [sp, #52]
    11dc:	ldr	w1, [sp, #48]
    11e0:	mov	w0, #0x64                  	// #100
    11e4:	mul	w1, w1, w0
    11e8:	ldr	w0, [sp, #64]
    11ec:	sub	w0, w1, w0
    11f0:	str	w0, [sp, #48]
    11f4:	ldr	w1, [sp, #28]
    11f8:	mov	w0, #0x4c                  	// #76
    11fc:	mul	w1, w1, w0
    1200:	ldr	w0, [sp, #60]
    1204:	sub	w1, w1, w0
    1208:	ldr	w0, [sp, #52]
    120c:	sub	w0, w1, w0
    1210:	str	w0, [sp, #28]
    1214:	ldr	w1, [sp, #24]
    1218:	mov	w0, #0x20e                 	// #526
    121c:	mul	w1, w1, w0
    1220:	ldr	w0, [sp, #56]
    1224:	sub	w1, w1, w0
    1228:	ldr	w0, [sp, #48]
    122c:	sub	w0, w1, w0
    1230:	str	w0, [sp, #24]
    1234:	ldr	w1, [sp, #20]
    1238:	mov	w0, #0x313                 	// #787
    123c:	mul	w1, w1, w0
    1240:	ldr	w0, [sp, #56]
    1244:	sub	w1, w1, w0
    1248:	ldr	w0, [sp, #52]
    124c:	sub	w0, w1, w0
    1250:	str	w0, [sp, #20]
    1254:	ldr	w1, [sp, #16]
    1258:	mov	w0, w1
    125c:	lsl	w0, w0, #1
    1260:	add	w0, w0, w1
    1264:	lsl	w0, w0, #7
    1268:	mov	w1, w0
    126c:	ldr	w0, [sp, #60]
    1270:	sub	w1, w1, w0
    1274:	ldr	w0, [sp, #48]
    1278:	sub	w0, w1, w0
    127c:	str	w0, [sp, #16]
    1280:	ldr	w1, [sp, #44]
    1284:	ldr	w0, [sp, #16]
    1288:	add	w0, w1, w0
    128c:	asr	w1, w0, #19
    1290:	ldr	x0, [sp, #72]
    1294:	str	w1, [x0]
    1298:	ldr	w1, [sp, #44]
    129c:	ldr	w0, [sp, #16]
    12a0:	sub	w1, w1, w0
    12a4:	ldr	x0, [sp, #72]
    12a8:	add	x0, x0, #0x1c
    12ac:	asr	w1, w1, #19
    12b0:	str	w1, [x0]
    12b4:	ldr	w1, [sp, #36]
    12b8:	ldr	w0, [sp, #20]
    12bc:	add	w1, w1, w0
    12c0:	ldr	x0, [sp, #72]
    12c4:	add	x0, x0, #0x4
    12c8:	asr	w1, w1, #19
    12cc:	str	w1, [x0]
    12d0:	ldr	w1, [sp, #36]
    12d4:	ldr	w0, [sp, #20]
    12d8:	sub	w1, w1, w0
    12dc:	ldr	x0, [sp, #72]
    12e0:	add	x0, x0, #0x18
    12e4:	asr	w1, w1, #19
    12e8:	str	w1, [x0]
    12ec:	ldr	w1, [sp, #32]
    12f0:	ldr	w0, [sp, #24]
    12f4:	add	w1, w1, w0
    12f8:	ldr	x0, [sp, #72]
    12fc:	add	x0, x0, #0x8
    1300:	asr	w1, w1, #19
    1304:	str	w1, [x0]
    1308:	ldr	w1, [sp, #32]
    130c:	ldr	w0, [sp, #24]
    1310:	sub	w1, w1, w0
    1314:	ldr	x0, [sp, #72]
    1318:	add	x0, x0, #0x14
    131c:	asr	w1, w1, #19
    1320:	str	w1, [x0]
    1324:	ldr	w1, [sp, #40]
    1328:	ldr	w0, [sp, #28]
    132c:	add	w1, w1, w0
    1330:	ldr	x0, [sp, #72]
    1334:	add	x0, x0, #0xc
    1338:	asr	w1, w1, #19
    133c:	str	w1, [x0]
    1340:	ldr	w1, [sp, #40]
    1344:	ldr	w0, [sp, #28]
    1348:	sub	w1, w1, w0
    134c:	ldr	x0, [sp, #72]
    1350:	add	x0, x0, #0x10
    1354:	asr	w1, w1, #19
    1358:	str	w1, [x0]
    135c:	ldr	w0, [sp, #68]
    1360:	add	w0, w0, #0x1
    1364:	str	w0, [sp, #68]
    1368:	ldr	x0, [sp, #72]
    136c:	add	x0, x0, #0x20
    1370:	str	x0, [sp, #72]
    1374:	ldr	w0, [sp, #68]
    1378:	cmp	w0, #0x7
    137c:	b.le	f34 <grub_jpeg_idct_transform+0x44c>
    1380:	str	wzr, [sp, #68]
    1384:	b	1424 <grub_jpeg_idct_transform+0x93c>
    1388:	ldrsw	x0, [sp, #68]
    138c:	lsl	x0, x0, #2
    1390:	ldr	x1, [sp, #8]
    1394:	add	x0, x1, x0
    1398:	ldr	w1, [x0]
    139c:	ldrsw	x0, [sp, #68]
    13a0:	lsl	x0, x0, #2
    13a4:	ldr	x2, [sp, #8]
    13a8:	add	x0, x2, x0
    13ac:	add	w1, w1, #0x80
    13b0:	str	w1, [x0]
    13b4:	ldrsw	x0, [sp, #68]
    13b8:	lsl	x0, x0, #2
    13bc:	ldr	x1, [sp, #8]
    13c0:	add	x0, x1, x0
    13c4:	ldr	w0, [x0]
    13c8:	cmp	w0, #0x0
    13cc:	b.ge	13e4 <grub_jpeg_idct_transform+0x8fc>  // b.tcont
    13d0:	ldrsw	x0, [sp, #68]
    13d4:	lsl	x0, x0, #2
    13d8:	ldr	x1, [sp, #8]
    13dc:	add	x0, x1, x0
    13e0:	str	wzr, [x0]
    13e4:	ldrsw	x0, [sp, #68]
    13e8:	lsl	x0, x0, #2
    13ec:	ldr	x1, [sp, #8]
    13f0:	add	x0, x1, x0
    13f4:	ldr	w0, [x0]
    13f8:	cmp	w0, #0xff
    13fc:	b.le	1418 <grub_jpeg_idct_transform+0x930>
    1400:	ldrsw	x0, [sp, #68]
    1404:	lsl	x0, x0, #2
    1408:	ldr	x1, [sp, #8]
    140c:	add	x0, x1, x0
    1410:	mov	w1, #0xff                  	// #255
    1414:	str	w1, [x0]
    1418:	ldr	w0, [sp, #68]
    141c:	add	w0, w0, #0x1
    1420:	str	w0, [sp, #68]
    1424:	ldr	w0, [sp, #68]
    1428:	cmp	w0, #0x3f
    142c:	b.le	1388 <grub_jpeg_idct_transform+0x8a0>
    1430:	nop
    1434:	nop
    1438:	add	sp, sp, #0x50
    143c:	ret

0000000000001440 <grub_jpeg_decode_du>:
    1440:	stp	x29, x30, [sp, #-80]!
    1444:	mov	x29, sp
    1448:	str	x0, [sp, #40]
    144c:	str	w1, [sp, #36]
    1450:	str	x2, [sp, #24]
    1454:	mov	x2, #0x100                 	// #256
    1458:	mov	w1, #0x0                   	// #0
    145c:	ldr	x0, [sp, #24]
    1460:	bl	0 <grub_memset>
    1464:	ldr	x2, [sp, #40]
    1468:	ldrsw	x1, [sp, #36]
    146c:	mov	x0, x1
    1470:	lsl	x0, x0, #1
    1474:	add	x0, x0, x1
    1478:	lsl	x0, x0, #2
    147c:	add	x0, x2, x0
    1480:	ldr	w0, [x0, #704]
    1484:	str	w0, [sp, #72]
    1488:	ldr	x2, [sp, #40]
    148c:	ldrsw	x1, [sp, #36]
    1490:	mov	x0, x1
    1494:	lsl	x0, x0, #1
    1498:	add	x0, x0, x1
    149c:	lsl	x0, x0, #2
    14a0:	add	x0, x2, x0
    14a4:	ldr	w0, [x0, #708]
    14a8:	str	w0, [sp, #68]
    14ac:	ldr	x2, [sp, #40]
    14b0:	ldrsw	x1, [sp, #36]
    14b4:	mov	x0, x1
    14b8:	lsl	x0, x0, #1
    14bc:	add	x0, x0, x1
    14c0:	lsl	x0, x0, #2
    14c4:	add	x0, x2, x0
    14c8:	ldr	w0, [x0, #712]
    14cc:	str	w0, [sp, #64]
    14d0:	ldr	w1, [sp, #68]
    14d4:	ldr	x0, [sp, #40]
    14d8:	bl	234 <grub_jpeg_get_huff_code>
    14dc:	mov	w1, w0
    14e0:	ldr	x0, [sp, #40]
    14e4:	bl	170 <grub_jpeg_get_number>
    14e8:	mov	w2, w0
    14ec:	ldr	x1, [sp, #40]
    14f0:	ldrsw	x0, [sp, #36]
    14f4:	add	x0, x0, #0x23c
    14f8:	lsl	x0, x0, #2
    14fc:	add	x0, x1, x0
    1500:	ldr	w0, [x0, #4]
    1504:	add	w1, w2, w0
    1508:	ldr	x2, [sp, #40]
    150c:	ldrsw	x0, [sp, #36]
    1510:	add	x0, x0, #0x23c
    1514:	lsl	x0, x0, #2
    1518:	add	x0, x2, x0
    151c:	str	w1, [x0, #4]
    1520:	ldr	x1, [sp, #40]
    1524:	ldrsw	x0, [sp, #36]
    1528:	add	x0, x0, #0x23c
    152c:	lsl	x0, x0, #2
    1530:	add	x0, x1, x0
    1534:	ldr	w0, [x0, #4]
    1538:	ldr	x2, [sp, #40]
    153c:	ldrsw	x1, [sp, #72]
    1540:	add	x1, x1, #0x9
    1544:	lsl	x1, x1, #6
    1548:	add	x1, x2, x1
    154c:	ldrb	w1, [x1]
    1550:	mul	w1, w0, w1
    1554:	ldr	x0, [sp, #24]
    1558:	str	w1, [x0]
    155c:	mov	w0, #0x1                   	// #1
    1560:	str	w0, [sp, #76]
    1564:	b	1614 <grub_jpeg_decode_du+0x1d4>
    1568:	ldr	w1, [sp, #64]
    156c:	ldr	x0, [sp, #40]
    1570:	bl	234 <grub_jpeg_get_huff_code>
    1574:	str	w0, [sp, #60]
    1578:	ldr	w0, [sp, #60]
    157c:	cmp	w0, #0x0
    1580:	b.eq	1624 <grub_jpeg_decode_du+0x1e4>  // b.none
    1584:	ldr	w0, [sp, #60]
    1588:	and	w0, w0, #0xf
    158c:	mov	w1, w0
    1590:	ldr	x0, [sp, #40]
    1594:	bl	170 <grub_jpeg_get_number>
    1598:	str	w0, [sp, #56]
    159c:	ldr	w0, [sp, #60]
    15a0:	asr	w0, w0, #4
    15a4:	str	w0, [sp, #60]
    15a8:	ldr	w0, [sp, #60]
    15ac:	ldr	w1, [sp, #76]
    15b0:	add	w0, w1, w0
    15b4:	str	w0, [sp, #76]
    15b8:	ldr	x2, [sp, #40]
    15bc:	ldr	w0, [sp, #76]
    15c0:	ldrsw	x1, [sp, #72]
    15c4:	lsl	x1, x1, #6
    15c8:	add	x1, x2, x1
    15cc:	add	x0, x1, x0
    15d0:	ldrb	w0, [x0, #576]
    15d4:	mov	w2, w0
    15d8:	adrp	x0, 0 <grub_swap_bytes16>
    15dc:	add	x0, x0, #0x0
    15e0:	ldr	x1, [x0]
    15e4:	ldr	w0, [sp, #76]
    15e8:	ldrb	w0, [x1, x0]
    15ec:	and	x0, x0, #0xff
    15f0:	lsl	x0, x0, #2
    15f4:	ldr	x1, [sp, #24]
    15f8:	add	x0, x1, x0
    15fc:	ldr	w1, [sp, #56]
    1600:	mul	w1, w2, w1
    1604:	str	w1, [x0]
    1608:	ldr	w0, [sp, #76]
    160c:	add	w0, w0, #0x1
    1610:	str	w0, [sp, #76]
    1614:	ldr	w0, [sp, #76]
    1618:	cmp	w0, #0x3f
    161c:	b.ls	1568 <grub_jpeg_decode_du+0x128>  // b.plast
    1620:	b	1628 <grub_jpeg_decode_du+0x1e8>
    1624:	nop
    1628:	ldr	x0, [sp, #24]
    162c:	bl	ae8 <grub_jpeg_idct_transform>
    1630:	nop
    1634:	ldp	x29, x30, [sp], #80
    1638:	ret
    163c:	nop
	...

0000000000001648 <grub_jpeg_ycrcb_to_rgb>:
    1648:	sub	sp, sp, #0x30
    164c:	str	w0, [sp, #28]
    1650:	str	w1, [sp, #24]
    1654:	str	w2, [sp, #20]
    1658:	str	x3, [sp, #8]
    165c:	ldr	w0, [sp, #24]
    1660:	sub	w0, w0, #0x80
    1664:	str	w0, [sp, #24]
    1668:	ldr	w0, [sp, #20]
    166c:	sub	w0, w0, #0x80
    1670:	str	w0, [sp, #20]
    1674:	ldr	w1, [sp, #24]
    1678:	mov	w0, #0x167                 	// #359
    167c:	mul	w0, w1, w0
    1680:	asr	w0, w0, #8
    1684:	ldr	w1, [sp, #28]
    1688:	add	w0, w1, w0
    168c:	str	w0, [sp, #44]
    1690:	ldr	w0, [sp, #44]
    1694:	cmp	w0, #0x0
    1698:	b.ge	16a0 <grub_jpeg_ycrcb_to_rgb+0x58>  // b.tcont
    169c:	str	wzr, [sp, #44]
    16a0:	ldr	w0, [sp, #44]
    16a4:	cmp	w0, #0xff
    16a8:	b.le	16b4 <grub_jpeg_ycrcb_to_rgb+0x6c>
    16ac:	mov	w0, #0xff                  	// #255
    16b0:	str	w0, [sp, #44]
    16b4:	ldr	x0, [sp, #8]
    16b8:	add	x1, x0, #0x1
    16bc:	str	x1, [sp, #8]
    16c0:	ldr	w1, [sp, #44]
    16c4:	and	w1, w1, #0xff
    16c8:	strb	w1, [x0]
    16cc:	ldr	w1, [sp, #20]
    16d0:	mov	w0, #0x58                  	// #88
    16d4:	mul	w1, w1, w0
    16d8:	ldr	w2, [sp, #24]
    16dc:	mov	w0, #0xb7                  	// #183
    16e0:	mul	w0, w2, w0
    16e4:	add	w0, w1, w0
    16e8:	asr	w0, w0, #8
    16ec:	ldr	w1, [sp, #28]
    16f0:	sub	w0, w1, w0
    16f4:	str	w0, [sp, #44]
    16f8:	ldr	w0, [sp, #44]
    16fc:	cmp	w0, #0x0
    1700:	b.ge	1708 <grub_jpeg_ycrcb_to_rgb+0xc0>  // b.tcont
    1704:	str	wzr, [sp, #44]
    1708:	ldr	w0, [sp, #44]
    170c:	cmp	w0, #0xff
    1710:	b.le	171c <grub_jpeg_ycrcb_to_rgb+0xd4>
    1714:	mov	w0, #0xff                  	// #255
    1718:	str	w0, [sp, #44]
    171c:	ldr	x0, [sp, #8]
    1720:	add	x1, x0, #0x1
    1724:	str	x1, [sp, #8]
    1728:	ldr	w1, [sp, #44]
    172c:	and	w1, w1, #0xff
    1730:	strb	w1, [x0]
    1734:	ldr	w1, [sp, #20]
    1738:	mov	w0, #0x1c6                 	// #454
    173c:	mul	w0, w1, w0
    1740:	asr	w0, w0, #8
    1744:	ldr	w1, [sp, #28]
    1748:	add	w0, w1, w0
    174c:	str	w0, [sp, #44]
    1750:	ldr	w0, [sp, #44]
    1754:	cmp	w0, #0x0
    1758:	b.ge	1760 <grub_jpeg_ycrcb_to_rgb+0x118>  // b.tcont
    175c:	str	wzr, [sp, #44]
    1760:	ldr	w0, [sp, #44]
    1764:	cmp	w0, #0xff
    1768:	b.le	1774 <grub_jpeg_ycrcb_to_rgb+0x12c>
    176c:	mov	w0, #0xff                  	// #255
    1770:	str	w0, [sp, #44]
    1774:	ldr	x0, [sp, #8]
    1778:	add	x1, x0, #0x1
    177c:	str	x1, [sp, #8]
    1780:	ldr	w1, [sp, #44]
    1784:	and	w1, w1, #0xff
    1788:	strb	w1, [x0]
    178c:	nop
    1790:	add	sp, sp, #0x30
    1794:	ret

0000000000001798 <grub_jpeg_decode_sos>:
    1798:	stp	x29, x30, [sp, #-64]!
    179c:	mov	x29, sp
    17a0:	str	x0, [sp, #24]
    17a4:	ldr	x0, [sp, #24]
    17a8:	ldr	x0, [x0]
    17ac:	ldr	x0, [x0, #24]
    17b0:	str	w0, [sp, #56]
    17b4:	ldr	x0, [sp, #24]
    17b8:	bl	68 <grub_jpeg_get_word>
    17bc:	and	w0, w0, #0xffff
    17c0:	mov	w1, w0
    17c4:	ldr	w0, [sp, #56]
    17c8:	add	w0, w0, w1
    17cc:	str	w0, [sp, #56]
    17d0:	ldr	x0, [sp, #24]
    17d4:	bl	38 <grub_jpeg_get_byte>
    17d8:	and	w0, w0, #0xff
    17dc:	str	w0, [sp, #52]
    17e0:	ldr	w0, [sp, #52]
    17e4:	cmp	w0, #0x3
    17e8:	b.eq	1810 <grub_jpeg_decode_sos+0x78>  // b.none
    17ec:	ldr	w0, [sp, #52]
    17f0:	cmp	w0, #0x1
    17f4:	b.eq	1810 <grub_jpeg_decode_sos+0x78>  // b.none
    17f8:	adrp	x0, 0 <grub_swap_bytes16>
    17fc:	add	x0, x0, #0x0
    1800:	ldr	x1, [x0]
    1804:	mov	w0, #0x4                   	// #4
    1808:	bl	0 <grub_error>
    180c:	b	1988 <grub_jpeg_decode_sos+0x1f0>
    1810:	ldr	x0, [sp, #24]
    1814:	ldr	w1, [sp, #52]
    1818:	str	w1, [x0, #2304]
    181c:	str	wzr, [sp, #60]
    1820:	b	18d8 <grub_jpeg_decode_sos+0x140>
    1824:	ldr	x0, [sp, #24]
    1828:	bl	38 <grub_jpeg_get_byte>
    182c:	and	w0, w0, #0xff
    1830:	sub	w0, w0, #0x1
    1834:	str	w0, [sp, #48]
    1838:	ldr	w0, [sp, #48]
    183c:	cmp	w0, #0x0
    1840:	b.lt	1850 <grub_jpeg_decode_sos+0xb8>  // b.tstop
    1844:	ldr	w0, [sp, #48]
    1848:	cmp	w0, #0x2
    184c:	b.le	1868 <grub_jpeg_decode_sos+0xd0>
    1850:	adrp	x0, 0 <grub_swap_bytes16>
    1854:	add	x0, x0, #0x0
    1858:	ldr	x1, [x0]
    185c:	mov	w0, #0x4                   	// #4
    1860:	bl	0 <grub_error>
    1864:	b	1988 <grub_jpeg_decode_sos+0x1f0>
    1868:	ldr	x0, [sp, #24]
    186c:	bl	38 <grub_jpeg_get_byte>
    1870:	and	w0, w0, #0xff
    1874:	str	w0, [sp, #44]
    1878:	ldr	w0, [sp, #44]
    187c:	asr	w2, w0, #4
    1880:	ldr	x3, [sp, #24]
    1884:	ldrsw	x1, [sp, #48]
    1888:	mov	x0, x1
    188c:	lsl	x0, x0, #1
    1890:	add	x0, x0, x1
    1894:	lsl	x0, x0, #2
    1898:	add	x0, x3, x0
    189c:	str	w2, [x0, #708]
    18a0:	ldr	w0, [sp, #44]
    18a4:	and	w0, w0, #0xf
    18a8:	add	w2, w0, #0x2
    18ac:	ldr	x3, [sp, #24]
    18b0:	ldrsw	x1, [sp, #48]
    18b4:	mov	x0, x1
    18b8:	lsl	x0, x0, #1
    18bc:	add	x0, x0, x1
    18c0:	lsl	x0, x0, #2
    18c4:	add	x0, x3, x0
    18c8:	str	w2, [x0, #712]
    18cc:	ldr	w0, [sp, #60]
    18d0:	add	w0, w0, #0x1
    18d4:	str	w0, [sp, #60]
    18d8:	ldr	w1, [sp, #60]
    18dc:	ldr	w0, [sp, #52]
    18e0:	cmp	w1, w0
    18e4:	b.lt	1824 <grub_jpeg_decode_sos+0x8c>  // b.tstop
    18e8:	ldr	x0, [sp, #24]
    18ec:	bl	38 <grub_jpeg_get_byte>
    18f0:	ldr	x0, [sp, #24]
    18f4:	bl	68 <grub_jpeg_get_word>
    18f8:	ldr	x0, [sp, #24]
    18fc:	ldr	x0, [x0]
    1900:	ldr	x1, [x0, #24]
    1904:	ldr	w0, [sp, #56]
    1908:	cmp	x1, x0
    190c:	b.eq	1928 <grub_jpeg_decode_sos+0x190>  // b.none
    1910:	adrp	x0, 0 <grub_swap_bytes16>
    1914:	add	x0, x0, #0x0
    1918:	ldr	x1, [x0]
    191c:	mov	w0, #0x4                   	// #4
    1920:	bl	0 <grub_error>
    1924:	b	1988 <grub_jpeg_decode_sos+0x1f0>
    1928:	ldr	x0, [sp, #24]
    192c:	ldr	x4, [x0, #8]
    1930:	ldr	x0, [sp, #24]
    1934:	ldr	w1, [x0, #24]
    1938:	ldr	x0, [sp, #24]
    193c:	ldr	w0, [x0, #28]
    1940:	mov	w3, #0x4                   	// #4
    1944:	mov	w2, w0
    1948:	mov	x0, x4
    194c:	bl	0 <grub_video_bitmap_create>
    1950:	cmp	w0, #0x0
    1954:	b.eq	196c <grub_jpeg_decode_sos+0x1d4>  // b.none
    1958:	adrp	x0, 0 <grub_swap_bytes16>
    195c:	add	x0, x0, #0x0
    1960:	ldr	x0, [x0]
    1964:	ldr	w0, [x0]
    1968:	b	1988 <grub_jpeg_decode_sos+0x1f0>
    196c:	ldr	x0, [sp, #24]
    1970:	ldr	x0, [x0, #8]
    1974:	ldr	x0, [x0]
    1978:	ldr	x1, [x0, #80]
    197c:	ldr	x0, [sp, #24]
    1980:	str	x1, [x0, #16]
    1984:	mov	w0, #0x0                   	// #0
    1988:	ldp	x29, x30, [sp], #64
    198c:	ret
	...

00000000000019b0 <grub_jpeg_decode_data>:
    19b0:	stp	x29, x30, [sp, #-96]!
    19b4:	mov	x29, sp
    19b8:	str	x0, [sp, #24]
    19bc:	ldr	x0, [sp, #24]
    19c0:	ldr	w0, [x0, #2284]
    19c4:	str	w0, [sp, #88]
    19c8:	ldr	x0, [sp, #24]
    19cc:	ldr	w0, [x0, #2276]
    19d0:	mov	w1, #0x8                   	// #8
    19d4:	lsl	w0, w1, w0
    19d8:	str	w0, [sp, #68]
    19dc:	ldr	x0, [sp, #24]
    19e0:	ldr	w0, [x0, #2280]
    19e4:	mov	w1, #0x8                   	// #8
    19e8:	lsl	w0, w1, w0
    19ec:	str	w0, [sp, #64]
    19f0:	ldr	x0, [sp, #24]
    19f4:	ldr	w1, [x0, #28]
    19f8:	ldr	w0, [sp, #68]
    19fc:	add	w0, w1, w0
    1a00:	sub	w1, w0, #0x1
    1a04:	ldr	x0, [sp, #24]
    1a08:	ldr	w0, [x0, #2276]
    1a0c:	add	w0, w0, #0x3
    1a10:	lsr	w0, w1, w0
    1a14:	str	w0, [sp, #60]
    1a18:	ldr	x0, [sp, #24]
    1a1c:	ldr	w1, [x0, #24]
    1a20:	ldr	w0, [sp, #64]
    1a24:	add	w0, w1, w0
    1a28:	sub	w1, w0, #0x1
    1a2c:	ldr	x0, [sp, #24]
    1a30:	ldr	w0, [x0, #2280]
    1a34:	add	w0, w0, #0x3
    1a38:	lsr	w0, w1, w0
    1a3c:	str	w0, [sp, #56]
    1a40:	b	1e34 <grub_jpeg_decode_data+0x484>
    1a44:	str	wzr, [sp, #92]
    1a48:	b	1db0 <grub_jpeg_decode_data+0x400>
    1a4c:	str	wzr, [sp, #84]
    1a50:	b	1ac8 <grub_jpeg_decode_data+0x118>
    1a54:	str	wzr, [sp, #80]
    1a58:	b	1aa0 <grub_jpeg_decode_data+0xf0>
    1a5c:	ldr	w0, [sp, #84]
    1a60:	lsl	w1, w0, #1
    1a64:	ldr	w0, [sp, #80]
    1a68:	add	w0, w1, w0
    1a6c:	mov	w0, w0
    1a70:	lsl	x0, x0, #8
    1a74:	add	x0, x0, #0x2e0
    1a78:	ldr	x1, [sp, #24]
    1a7c:	add	x0, x1, x0
    1a80:	add	x0, x0, #0x4
    1a84:	mov	x2, x0
    1a88:	mov	w1, #0x0                   	// #0
    1a8c:	ldr	x0, [sp, #24]
    1a90:	bl	1440 <grub_jpeg_decode_du>
    1a94:	ldr	w0, [sp, #80]
    1a98:	add	w0, w0, #0x1
    1a9c:	str	w0, [sp, #80]
    1aa0:	ldr	x0, [sp, #24]
    1aa4:	ldr	w0, [x0, #2280]
    1aa8:	mov	w1, #0x1                   	// #1
    1aac:	lsl	w0, w1, w0
    1ab0:	ldr	w1, [sp, #80]
    1ab4:	cmp	w1, w0
    1ab8:	b.cc	1a5c <grub_jpeg_decode_data+0xac>  // b.lo, b.ul, b.last
    1abc:	ldr	w0, [sp, #84]
    1ac0:	add	w0, w0, #0x1
    1ac4:	str	w0, [sp, #84]
    1ac8:	ldr	x0, [sp, #24]
    1acc:	ldr	w0, [x0, #2276]
    1ad0:	mov	w1, #0x1                   	// #1
    1ad4:	lsl	w0, w1, w0
    1ad8:	ldr	w1, [sp, #84]
    1adc:	cmp	w1, w0
    1ae0:	b.cc	1a54 <grub_jpeg_decode_data+0xa4>  // b.lo, b.ul, b.last
    1ae4:	ldr	x0, [sp, #24]
    1ae8:	ldr	w0, [x0, #2304]
    1aec:	cmp	w0, #0x2
    1af0:	b.le	1b24 <grub_jpeg_decode_data+0x174>
    1af4:	ldr	x0, [sp, #24]
    1af8:	add	x0, x0, #0x7e4
    1afc:	mov	x2, x0
    1b00:	mov	w1, #0x1                   	// #1
    1b04:	ldr	x0, [sp, #24]
    1b08:	bl	1440 <grub_jpeg_decode_du>
    1b0c:	ldr	x0, [sp, #24]
    1b10:	add	x0, x0, #0x6e4
    1b14:	mov	x2, x0
    1b18:	mov	w1, #0x2                   	// #2
    1b1c:	ldr	x0, [sp, #24]
    1b20:	bl	1440 <grub_jpeg_decode_du>
    1b24:	adrp	x0, 0 <grub_swap_bytes16>
    1b28:	add	x0, x0, #0x0
    1b2c:	ldr	x0, [x0]
    1b30:	ldr	w0, [x0]
    1b34:	cmp	w0, #0x0
    1b38:	b.eq	1b50 <grub_jpeg_decode_data+0x1a0>  // b.none
    1b3c:	adrp	x0, 0 <grub_swap_bytes16>
    1b40:	add	x0, x0, #0x0
    1b44:	ldr	x0, [x0]
    1b48:	ldr	w0, [x0]
    1b4c:	b	1e74 <grub_jpeg_decode_data+0x4c4>
    1b50:	ldr	x0, [sp, #24]
    1b54:	ldr	w1, [x0, #2288]
    1b58:	ldr	w0, [sp, #60]
    1b5c:	sub	w0, w0, #0x1
    1b60:	cmp	w1, w0
    1b64:	b.ne	1b88 <grub_jpeg_decode_data+0x1d8>  // b.any
    1b68:	ldr	x0, [sp, #24]
    1b6c:	ldr	w1, [x0, #28]
    1b70:	ldr	x0, [sp, #24]
    1b74:	ldr	w2, [x0, #2288]
    1b78:	ldr	w0, [sp, #68]
    1b7c:	mul	w0, w2, w0
    1b80:	sub	w0, w1, w0
    1b84:	b	1b8c <grub_jpeg_decode_data+0x1dc>
    1b88:	ldr	w0, [sp, #68]
    1b8c:	str	w0, [sp, #52]
    1b90:	ldr	w0, [sp, #56]
    1b94:	sub	w0, w0, #0x1
    1b98:	ldr	w1, [sp, #92]
    1b9c:	cmp	w1, w0
    1ba0:	b.ne	1bc0 <grub_jpeg_decode_data+0x210>  // b.any
    1ba4:	ldr	x0, [sp, #24]
    1ba8:	ldr	w1, [x0, #24]
    1bac:	ldr	w2, [sp, #92]
    1bb0:	ldr	w0, [sp, #64]
    1bb4:	mul	w0, w2, w0
    1bb8:	sub	w0, w1, w0
    1bbc:	b	1bc4 <grub_jpeg_decode_data+0x214>
    1bc0:	ldr	w0, [sp, #64]
    1bc4:	str	w0, [sp, #48]
    1bc8:	ldr	x0, [sp, #24]
    1bcc:	ldr	x0, [x0, #16]
    1bd0:	str	x0, [sp, #72]
    1bd4:	str	wzr, [sp, #84]
    1bd8:	b	1d60 <grub_jpeg_decode_data+0x3b0>
    1bdc:	str	wzr, [sp, #80]
    1be0:	b	1d18 <grub_jpeg_decode_data+0x368>
    1be4:	ldr	x0, [sp, #24]
    1be8:	ldr	w0, [x0, #2276]
    1bec:	ldr	w1, [sp, #84]
    1bf0:	lsr	w0, w1, w0
    1bf4:	lsl	w1, w0, #3
    1bf8:	ldr	x0, [sp, #24]
    1bfc:	ldr	w0, [x0, #2280]
    1c00:	ldr	w2, [sp, #80]
    1c04:	lsr	w0, w2, w0
    1c08:	add	w0, w1, w0
    1c0c:	str	w0, [sp, #44]
    1c10:	ldr	w0, [sp, #84]
    1c14:	lsr	w0, w0, #3
    1c18:	lsl	w1, w0, #1
    1c1c:	ldr	w0, [sp, #80]
    1c20:	lsr	w0, w0, #3
    1c24:	add	w2, w1, w0
    1c28:	ldr	w0, [sp, #84]
    1c2c:	and	w0, w0, #0x7
    1c30:	lsl	w1, w0, #3
    1c34:	ldr	w0, [sp, #80]
    1c38:	and	w0, w0, #0x7
    1c3c:	add	w0, w1, w0
    1c40:	ldr	x1, [sp, #24]
    1c44:	mov	w0, w0
    1c48:	mov	w2, w2
    1c4c:	lsl	x2, x2, #6
    1c50:	add	x0, x2, x0
    1c54:	add	x0, x0, #0xb8
    1c58:	lsl	x0, x0, #2
    1c5c:	add	x0, x1, x0
    1c60:	ldr	w0, [x0, #4]
    1c64:	str	w0, [sp, #40]
    1c68:	ldr	x0, [sp, #24]
    1c6c:	ldr	w0, [x0, #2304]
    1c70:	cmp	w0, #0x2
    1c74:	b.le	1cc8 <grub_jpeg_decode_data+0x318>
    1c78:	ldr	x1, [sp, #24]
    1c7c:	ldr	w0, [sp, #44]
    1c80:	add	x0, x0, #0x1b8
    1c84:	lsl	x0, x0, #2
    1c88:	add	x0, x1, x0
    1c8c:	ldr	w0, [x0, #4]
    1c90:	str	w0, [sp, #36]
    1c94:	ldr	x1, [sp, #24]
    1c98:	ldr	w0, [sp, #44]
    1c9c:	add	x0, x0, #0x1f8
    1ca0:	lsl	x0, x0, #2
    1ca4:	add	x0, x1, x0
    1ca8:	ldr	w0, [x0, #4]
    1cac:	str	w0, [sp, #32]
    1cb0:	ldr	x3, [sp, #72]
    1cb4:	ldr	w2, [sp, #32]
    1cb8:	ldr	w1, [sp, #36]
    1cbc:	ldr	w0, [sp, #40]
    1cc0:	bl	1648 <grub_jpeg_ycrcb_to_rgb>
    1cc4:	b	1d00 <grub_jpeg_decode_data+0x350>
    1cc8:	ldr	w0, [sp, #40]
    1ccc:	and	w1, w0, #0xff
    1cd0:	ldr	x0, [sp, #72]
    1cd4:	strb	w1, [x0]
    1cd8:	ldr	x0, [sp, #72]
    1cdc:	add	x0, x0, #0x1
    1ce0:	ldr	w1, [sp, #40]
    1ce4:	and	w1, w1, #0xff
    1ce8:	strb	w1, [x0]
    1cec:	ldr	x0, [sp, #72]
    1cf0:	add	x0, x0, #0x2
    1cf4:	ldr	w1, [sp, #40]
    1cf8:	and	w1, w1, #0xff
    1cfc:	strb	w1, [x0]
    1d00:	ldr	w0, [sp, #80]
    1d04:	add	w0, w0, #0x1
    1d08:	str	w0, [sp, #80]
    1d0c:	ldr	x0, [sp, #72]
    1d10:	add	x0, x0, #0x3
    1d14:	str	x0, [sp, #72]
    1d18:	ldr	w1, [sp, #80]
    1d1c:	ldr	w0, [sp, #48]
    1d20:	cmp	w1, w0
    1d24:	b.cc	1be4 <grub_jpeg_decode_data+0x234>  // b.lo, b.ul, b.last
    1d28:	ldr	w0, [sp, #84]
    1d2c:	add	w0, w0, #0x1
    1d30:	str	w0, [sp, #84]
    1d34:	ldr	x0, [sp, #24]
    1d38:	ldr	w1, [x0, #24]
    1d3c:	ldr	w0, [sp, #48]
    1d40:	sub	w1, w1, w0
    1d44:	mov	w0, w1
    1d48:	lsl	w0, w0, #1
    1d4c:	add	w0, w0, w1
    1d50:	mov	w0, w0
    1d54:	ldr	x1, [sp, #72]
    1d58:	add	x0, x1, x0
    1d5c:	str	x0, [sp, #72]
    1d60:	ldr	w1, [sp, #84]
    1d64:	ldr	w0, [sp, #52]
    1d68:	cmp	w1, w0
    1d6c:	b.cc	1bdc <grub_jpeg_decode_data+0x22c>  // b.lo, b.ul, b.last
    1d70:	ldr	w0, [sp, #92]
    1d74:	add	w0, w0, #0x1
    1d78:	str	w0, [sp, #92]
    1d7c:	ldr	w0, [sp, #88]
    1d80:	sub	w0, w0, #0x1
    1d84:	str	w0, [sp, #88]
    1d88:	ldr	x0, [sp, #24]
    1d8c:	ldr	x2, [x0, #16]
    1d90:	ldr	w1, [sp, #64]
    1d94:	mov	w0, w1
    1d98:	lsl	w0, w0, #1
    1d9c:	add	w0, w0, w1
    1da0:	mov	w0, w0
    1da4:	add	x1, x2, x0
    1da8:	ldr	x0, [sp, #24]
    1dac:	str	x1, [x0, #16]
    1db0:	ldr	w1, [sp, #92]
    1db4:	ldr	w0, [sp, #56]
    1db8:	cmp	w1, w0
    1dbc:	b.cs	1ddc <grub_jpeg_decode_data+0x42c>  // b.hs, b.nlast
    1dc0:	ldr	x0, [sp, #24]
    1dc4:	ldr	w0, [x0, #2284]
    1dc8:	cmp	w0, #0x0
    1dcc:	b.eq	1a4c <grub_jpeg_decode_data+0x9c>  // b.none
    1dd0:	ldr	w0, [sp, #88]
    1dd4:	cmp	w0, #0x0
    1dd8:	b.ne	1a4c <grub_jpeg_decode_data+0x9c>  // b.any
    1ddc:	ldr	x0, [sp, #24]
    1de0:	ldr	w0, [x0, #2288]
    1de4:	add	w1, w0, #0x1
    1de8:	ldr	x0, [sp, #24]
    1dec:	str	w1, [x0, #2288]
    1df0:	ldr	x0, [sp, #24]
    1df4:	ldr	x2, [x0, #16]
    1df8:	ldr	x0, [sp, #24]
    1dfc:	ldr	w1, [x0, #24]
    1e00:	ldr	w0, [sp, #68]
    1e04:	mul	w1, w1, w0
    1e08:	ldr	w3, [sp, #64]
    1e0c:	ldr	w0, [sp, #56]
    1e10:	mul	w0, w3, w0
    1e14:	sub	w1, w1, w0
    1e18:	mov	w0, w1
    1e1c:	lsl	w0, w0, #1
    1e20:	add	w0, w0, w1
    1e24:	mov	w0, w0
    1e28:	add	x1, x2, x0
    1e2c:	ldr	x0, [sp, #24]
    1e30:	str	x1, [x0, #16]
    1e34:	ldr	x0, [sp, #24]
    1e38:	ldr	w0, [x0, #2288]
    1e3c:	ldr	w1, [sp, #60]
    1e40:	cmp	w1, w0
    1e44:	b.ls	1e64 <grub_jpeg_decode_data+0x4b4>  // b.plast
    1e48:	ldr	x0, [sp, #24]
    1e4c:	ldr	w0, [x0, #2284]
    1e50:	cmp	w0, #0x0
    1e54:	b.eq	1a44 <grub_jpeg_decode_data+0x94>  // b.none
    1e58:	ldr	w0, [sp, #88]
    1e5c:	cmp	w0, #0x0
    1e60:	b.ne	1a44 <grub_jpeg_decode_data+0x94>  // b.any
    1e64:	adrp	x0, 0 <grub_swap_bytes16>
    1e68:	add	x0, x0, #0x0
    1e6c:	ldr	x0, [x0]
    1e70:	ldr	w0, [x0]
    1e74:	ldp	x29, x30, [sp], #96
    1e78:	ret
    1e7c:	nop
	...

0000000000001e88 <grub_jpeg_reset>:
    1e88:	sub	sp, sp, #0x10
    1e8c:	str	x0, [sp, #8]
    1e90:	ldr	x0, [sp, #8]
    1e94:	str	wzr, [x0, #2308]
    1e98:	ldr	x0, [sp, #8]
    1e9c:	str	wzr, [x0, #2292]
    1ea0:	ldr	x0, [sp, #8]
    1ea4:	str	wzr, [x0, #2296]
    1ea8:	ldr	x0, [sp, #8]
    1eac:	str	wzr, [x0, #2300]
    1eb0:	nop
    1eb4:	add	sp, sp, #0x10
    1eb8:	ret

0000000000001ebc <grub_jpeg_get_marker>:
    1ebc:	stp	x29, x30, [sp, #-48]!
    1ec0:	mov	x29, sp
    1ec4:	str	x0, [sp, #24]
    1ec8:	ldr	x0, [sp, #24]
    1ecc:	bl	38 <grub_jpeg_get_byte>
    1ed0:	strb	w0, [sp, #47]
    1ed4:	ldrb	w0, [sp, #47]
    1ed8:	cmp	w0, #0xff
    1edc:	b.eq	1efc <grub_jpeg_get_marker+0x40>  // b.none
    1ee0:	adrp	x0, 0 <grub_swap_bytes16>
    1ee4:	add	x0, x0, #0x0
    1ee8:	ldr	x1, [x0]
    1eec:	mov	w0, #0x4                   	// #4
    1ef0:	bl	0 <grub_error>
    1ef4:	mov	w0, #0x0                   	// #0
    1ef8:	b	1f08 <grub_jpeg_get_marker+0x4c>
    1efc:	ldr	x0, [sp, #24]
    1f00:	bl	38 <grub_jpeg_get_byte>
    1f04:	and	w0, w0, #0xff
    1f08:	ldp	x29, x30, [sp], #48
    1f0c:	ret
	...

0000000000001f18 <grub_jpeg_decode_jpeg>:
    1f18:	stp	x29, x30, [sp, #-48]!
    1f1c:	mov	x29, sp
    1f20:	str	x0, [sp, #24]
    1f24:	ldr	x0, [sp, #24]
    1f28:	bl	1ebc <grub_jpeg_get_marker>
    1f2c:	and	w0, w0, #0xff
    1f30:	cmp	w0, #0xd8
    1f34:	b.eq	20dc <grub_jpeg_decode_jpeg+0x1c4>  // b.none
    1f38:	adrp	x0, 0 <grub_swap_bytes16>
    1f3c:	add	x0, x0, #0x0
    1f40:	ldr	x1, [x0]
    1f44:	mov	w0, #0x4                   	// #4
    1f48:	bl	0 <grub_error>
    1f4c:	b	210c <grub_jpeg_decode_jpeg+0x1f4>
    1f50:	ldr	x0, [sp, #24]
    1f54:	bl	1ebc <grub_jpeg_get_marker>
    1f58:	strb	w0, [sp, #47]
    1f5c:	adrp	x0, 0 <grub_swap_bytes16>
    1f60:	add	x0, x0, #0x0
    1f64:	ldr	x0, [x0]
    1f68:	ldr	w0, [x0]
    1f6c:	cmp	w0, #0x0
    1f70:	b.ne	20f8 <grub_jpeg_decode_jpeg+0x1e0>  // b.any
    1f74:	ldrb	w0, [sp, #47]
    1f78:	mov	w4, w0
    1f7c:	adrp	x0, 0 <grub_swap_bytes16>
    1f80:	add	x0, x0, #0x0
    1f84:	ldr	x3, [x0]
    1f88:	adrp	x0, 0 <grub_swap_bytes16>
    1f8c:	add	x0, x0, #0x0
    1f90:	ldr	x2, [x0]
    1f94:	mov	w1, #0x2d0                 	// #720
    1f98:	adrp	x0, 0 <grub_swap_bytes16>
    1f9c:	add	x0, x0, #0x0
    1fa0:	ldr	x0, [x0]
    1fa4:	bl	0 <grub_real_dprintf>
    1fa8:	ldrb	w0, [sp, #47]
    1fac:	cmp	w0, #0xdd
    1fb0:	b.eq	2030 <grub_jpeg_decode_jpeg+0x118>  // b.none
    1fb4:	cmp	w0, #0xdd
    1fb8:	b.gt	2078 <grub_jpeg_decode_jpeg+0x160>
    1fbc:	cmp	w0, #0xdb
    1fc0:	b.eq	2018 <grub_jpeg_decode_jpeg+0x100>  // b.none
    1fc4:	cmp	w0, #0xdb
    1fc8:	b.gt	2078 <grub_jpeg_decode_jpeg+0x160>
    1fcc:	cmp	w0, #0xda
    1fd0:	b.eq	203c <grub_jpeg_decode_jpeg+0x124>  // b.none
    1fd4:	cmp	w0, #0xda
    1fd8:	b.gt	2078 <grub_jpeg_decode_jpeg+0x160>
    1fdc:	cmp	w0, #0xd9
    1fe0:	b.eq	2064 <grub_jpeg_decode_jpeg+0x14c>  // b.none
    1fe4:	cmp	w0, #0xd9
    1fe8:	b.gt	2078 <grub_jpeg_decode_jpeg+0x160>
    1fec:	cmp	w0, #0xd7
    1ff0:	b.gt	2078 <grub_jpeg_decode_jpeg+0x160>
    1ff4:	cmp	w0, #0xd0
    1ff8:	b.ge	2050 <grub_jpeg_decode_jpeg+0x138>  // b.tcont
    1ffc:	cmp	w0, #0xc0
    2000:	b.eq	2024 <grub_jpeg_decode_jpeg+0x10c>  // b.none
    2004:	cmp	w0, #0xc4
    2008:	b.ne	2078 <grub_jpeg_decode_jpeg+0x160>  // b.any
    200c:	ldr	x0, [sp, #24]
    2010:	bl	328 <grub_jpeg_decode_huff_table>
    2014:	b	20dc <grub_jpeg_decode_jpeg+0x1c4>
    2018:	ldr	x0, [sp, #24]
    201c:	bl	600 <grub_jpeg_decode_quan_table>
    2020:	b	20dc <grub_jpeg_decode_jpeg+0x1c4>
    2024:	ldr	x0, [sp, #24]
    2028:	bl	760 <grub_jpeg_decode_sof>
    202c:	b	20dc <grub_jpeg_decode_jpeg+0x1c4>
    2030:	ldr	x0, [sp, #24]
    2034:	bl	a70 <grub_jpeg_decode_dri>
    2038:	b	20dc <grub_jpeg_decode_jpeg+0x1c4>
    203c:	ldr	x0, [sp, #24]
    2040:	bl	1798 <grub_jpeg_decode_sos>
    2044:	cmp	w0, #0x0
    2048:	b.eq	2050 <grub_jpeg_decode_jpeg+0x138>  // b.none
    204c:	b	20dc <grub_jpeg_decode_jpeg+0x1c4>
    2050:	ldr	x0, [sp, #24]
    2054:	bl	19b0 <grub_jpeg_decode_data>
    2058:	ldr	x0, [sp, #24]
    205c:	bl	1e88 <grub_jpeg_reset>
    2060:	b	20dc <grub_jpeg_decode_jpeg+0x1c4>
    2064:	adrp	x0, 0 <grub_swap_bytes16>
    2068:	add	x0, x0, #0x0
    206c:	ldr	x0, [x0]
    2070:	ldr	w0, [x0]
    2074:	b	210c <grub_jpeg_decode_jpeg+0x1f4>
    2078:	ldr	x0, [sp, #24]
    207c:	bl	68 <grub_jpeg_get_word>
    2080:	strh	w0, [sp, #44]
    2084:	adrp	x0, 0 <grub_swap_bytes16>
    2088:	add	x0, x0, #0x0
    208c:	ldr	x0, [x0]
    2090:	ldr	w0, [x0]
    2094:	cmp	w0, #0x0
    2098:	b.eq	20b0 <grub_jpeg_decode_jpeg+0x198>  // b.none
    209c:	adrp	x0, 0 <grub_swap_bytes16>
    20a0:	add	x0, x0, #0x0
    20a4:	ldr	x0, [x0]
    20a8:	ldr	w0, [x0]
    20ac:	b	210c <grub_jpeg_decode_jpeg+0x1f4>
    20b0:	ldr	x0, [sp, #24]
    20b4:	ldr	x2, [x0]
    20b8:	ldr	x0, [sp, #24]
    20bc:	ldr	x0, [x0]
    20c0:	ldr	x1, [x0, #24]
    20c4:	ldrh	w0, [sp, #44]
    20c8:	add	x0, x1, x0
    20cc:	sub	x0, x0, #0x2
    20d0:	mov	x1, x0
    20d4:	mov	x0, x2
    20d8:	bl	0 <grub_file_seek>
    20dc:	adrp	x0, 0 <grub_swap_bytes16>
    20e0:	add	x0, x0, #0x0
    20e4:	ldr	x0, [x0]
    20e8:	ldr	w0, [x0]
    20ec:	cmp	w0, #0x0
    20f0:	b.eq	1f50 <grub_jpeg_decode_jpeg+0x38>  // b.none
    20f4:	b	20fc <grub_jpeg_decode_jpeg+0x1e4>
    20f8:	nop
    20fc:	adrp	x0, 0 <grub_swap_bytes16>
    2100:	add	x0, x0, #0x0
    2104:	ldr	x0, [x0]
    2108:	ldr	w0, [x0]
    210c:	ldp	x29, x30, [sp], #48
    2110:	ret
    2114:	nop
	...

0000000000002140 <grub_video_reader_jpeg>:
    2140:	stp	x29, x30, [sp, #-64]!
    2144:	mov	x29, sp
    2148:	str	x0, [sp, #24]
    214c:	str	x1, [sp, #16]
    2150:	mov	x2, #0x0                   	// #0
    2154:	mov	w1, #0x31                  	// #49
    2158:	ldr	x0, [sp, #16]
    215c:	bl	0 <grub_buffile_open>
    2160:	str	x0, [sp, #48]
    2164:	ldr	x0, [sp, #48]
    2168:	cmp	x0, #0x0
    216c:	b.ne	2184 <grub_video_reader_jpeg+0x44>  // b.any
    2170:	adrp	x0, 0 <grub_swap_bytes16>
    2174:	add	x0, x0, #0x0
    2178:	ldr	x0, [x0]
    217c:	ldr	w0, [x0]
    2180:	b	223c <grub_video_reader_jpeg+0xfc>
    2184:	mov	x0, #0x910                 	// #2320
    2188:	bl	0 <grub_zalloc>
    218c:	str	x0, [sp, #40]
    2190:	ldr	x0, [sp, #40]
    2194:	cmp	x0, #0x0
    2198:	b.eq	21f8 <grub_video_reader_jpeg+0xb8>  // b.none
    219c:	ldr	x0, [sp, #40]
    21a0:	ldr	x1, [sp, #48]
    21a4:	str	x1, [x0]
    21a8:	ldr	x0, [sp, #40]
    21ac:	ldr	x1, [sp, #24]
    21b0:	str	x1, [x0, #8]
    21b4:	ldr	x0, [sp, #40]
    21b8:	bl	1f18 <grub_jpeg_decode_jpeg>
    21bc:	str	wzr, [sp, #60]
    21c0:	b	21e4 <grub_video_reader_jpeg+0xa4>
    21c4:	ldr	x0, [sp, #40]
    21c8:	ldrsw	x1, [sp, #60]
    21cc:	add	x1, x1, #0x4
    21d0:	ldr	x0, [x0, x1, lsl #3]
    21d4:	bl	0 <grub_free>
    21d8:	ldr	w0, [sp, #60]
    21dc:	add	w0, w0, #0x1
    21e0:	str	w0, [sp, #60]
    21e4:	ldr	w0, [sp, #60]
    21e8:	cmp	w0, #0x3
    21ec:	b.le	21c4 <grub_video_reader_jpeg+0x84>
    21f0:	ldr	x0, [sp, #40]
    21f4:	bl	0 <grub_free>
    21f8:	adrp	x0, 0 <grub_swap_bytes16>
    21fc:	add	x0, x0, #0x0
    2200:	ldr	x0, [x0]
    2204:	ldr	w0, [x0]
    2208:	cmp	w0, #0x0
    220c:	b.eq	2224 <grub_video_reader_jpeg+0xe4>  // b.none
    2210:	ldr	x0, [sp, #24]
    2214:	ldr	x0, [x0]
    2218:	bl	0 <grub_video_bitmap_destroy>
    221c:	ldr	x0, [sp, #24]
    2220:	str	xzr, [x0]
    2224:	ldr	x0, [sp, #48]
    2228:	bl	0 <grub_file_close>
    222c:	adrp	x0, 0 <grub_swap_bytes16>
    2230:	add	x0, x0, #0x0
    2234:	ldr	x0, [x0]
    2238:	ldr	w0, [x0]
    223c:	ldp	x29, x30, [sp], #64
    2240:	ret
    2244:	nop
	...

0000000000002250 <grub_mod_init>:
    2250:	stp	x29, x30, [sp, #-32]!
    2254:	mov	x29, sp
    2258:	str	x0, [sp, #24]
    225c:	adrp	x0, 0 <grub_swap_bytes16>
    2260:	add	x0, x0, #0x0
    2264:	ldr	x0, [x0]
    2268:	bl	0 <grub_video_bitmap_reader_register>
    226c:	adrp	x0, 0 <grub_swap_bytes16>
    2270:	add	x0, x0, #0x0
    2274:	ldr	x0, [x0]
    2278:	bl	0 <grub_video_bitmap_reader_register>
    227c:	nop
    2280:	ldp	x29, x30, [sp], #32
    2284:	ret
	...

0000000000002298 <grub_mod_fini>:
    2298:	stp	x29, x30, [sp, #-16]!
    229c:	mov	x29, sp
    22a0:	adrp	x0, 0 <grub_swap_bytes16>
    22a4:	add	x0, x0, #0x0
    22a8:	ldr	x0, [x0]
    22ac:	bl	0 <grub_video_bitmap_reader_unregister>
    22b0:	adrp	x0, 0 <grub_swap_bytes16>
    22b4:	add	x0, x0, #0x0
    22b8:	ldr	x0, [x0]
    22bc:	bl	0 <grub_video_bitmap_reader_unregister>
    22c0:	nop
    22c4:	ldp	x29, x30, [sp], #16
    22c8:	ret
    22cc:	nop
	...
