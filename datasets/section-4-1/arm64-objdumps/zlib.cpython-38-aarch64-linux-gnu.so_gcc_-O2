
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//zlib.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001c90 <.init>:
    1c90:	stp	x29, x30, [sp, #-16]!
    1c94:	mov	x29, sp
    1c98:	bl	2020 <PyThread_free_lock@plt+0x10>
    1c9c:	ldp	x29, x30, [sp], #16
    1ca0:	ret

Disassembly of section .plt:

0000000000001cb0 <memcpy@plt-0x20>:
    1cb0:	stp	x16, x30, [sp, #-16]!
    1cb4:	adrp	x16, 17000 <PyInit_zlib@@Base+0x12580>
    1cb8:	ldr	x17, [x16, #4088]
    1cbc:	add	x16, x16, #0xff8
    1cc0:	br	x17
    1cc4:	nop
    1cc8:	nop
    1ccc:	nop

0000000000001cd0 <memcpy@plt>:
    1cd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16]
    1cd8:	add	x16, x16, #0x0
    1cdc:	br	x17

0000000000001ce0 <PyModule_AddIntConstant@plt>:
    1ce0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #8]
    1ce8:	add	x16, x16, #0x8
    1cec:	br	x17

0000000000001cf0 <_PyBytes_Resize@plt>:
    1cf0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #16]
    1cf8:	add	x16, x16, #0x10
    1cfc:	br	x17

0000000000001d00 <inflate@plt>:
    1d00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #24]
    1d08:	add	x16, x16, #0x18
    1d0c:	br	x17

0000000000001d10 <PyEval_RestoreThread@plt>:
    1d10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #32]
    1d18:	add	x16, x16, #0x20
    1d1c:	br	x17

0000000000001d20 <PyBuffer_Release@plt>:
    1d20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #40]
    1d28:	add	x16, x16, #0x28
    1d2c:	br	x17

0000000000001d30 <__cxa_finalize@plt>:
    1d30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #48]
    1d38:	add	x16, x16, #0x30
    1d3c:	br	x17

0000000000001d40 <PyMem_RawMalloc@plt>:
    1d40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d44:	ldr	x17, [x16, #56]
    1d48:	add	x16, x16, #0x38
    1d4c:	br	x17

0000000000001d50 <crc32@plt>:
    1d50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d54:	ldr	x17, [x16, #64]
    1d58:	add	x16, x16, #0x40
    1d5c:	br	x17

0000000000001d60 <PyBuffer_IsContiguous@plt>:
    1d60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d64:	ldr	x17, [x16, #72]
    1d68:	add	x16, x16, #0x48
    1d6c:	br	x17

0000000000001d70 <PyBytes_FromStringAndSize@plt>:
    1d70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d74:	ldr	x17, [x16, #80]
    1d78:	add	x16, x16, #0x50
    1d7c:	br	x17

0000000000001d80 <_Py_Dealloc@plt>:
    1d80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d84:	ldr	x17, [x16, #88]
    1d88:	add	x16, x16, #0x58
    1d8c:	br	x17

0000000000001d90 <PyErr_NoMemory@plt>:
    1d90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1d94:	ldr	x17, [x16, #96]
    1d98:	add	x16, x16, #0x60
    1d9c:	br	x17

0000000000001da0 <PyThread_acquire_lock@plt>:
    1da0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1da4:	ldr	x17, [x16, #104]
    1da8:	add	x16, x16, #0x68
    1dac:	br	x17

0000000000001db0 <_PyArg_UnpackKeywords@plt>:
    1db0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1db4:	ldr	x17, [x16, #112]
    1db8:	add	x16, x16, #0x70
    1dbc:	br	x17

0000000000001dc0 <PyErr_SetString@plt>:
    1dc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dc4:	ldr	x17, [x16, #120]
    1dc8:	add	x16, x16, #0x78
    1dcc:	br	x17

0000000000001dd0 <deflate@plt>:
    1dd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1dd4:	ldr	x17, [x16, #128]
    1dd8:	add	x16, x16, #0x80
    1ddc:	br	x17

0000000000001de0 <_PyLong_FromNbIndexOrNbInt@plt>:
    1de0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1de4:	ldr	x17, [x16, #136]
    1de8:	add	x16, x16, #0x88
    1dec:	br	x17

0000000000001df0 <PyObject_Free@plt>:
    1df0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1df4:	ldr	x17, [x16, #144]
    1df8:	add	x16, x16, #0x90
    1dfc:	br	x17

0000000000001e00 <deflateInit2_@plt>:
    1e00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e04:	ldr	x17, [x16, #152]
    1e08:	add	x16, x16, #0x98
    1e0c:	br	x17

0000000000001e10 <PyType_Ready@plt>:
    1e10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e14:	ldr	x17, [x16, #160]
    1e18:	add	x16, x16, #0xa0
    1e1c:	br	x17

0000000000001e20 <PyLong_AsSsize_t@plt>:
    1e20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e24:	ldr	x17, [x16, #168]
    1e28:	add	x16, x16, #0xa8
    1e2c:	br	x17

0000000000001e30 <_PyArg_BadArgument@plt>:
    1e30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e34:	ldr	x17, [x16, #176]
    1e38:	add	x16, x16, #0xb0
    1e3c:	br	x17

0000000000001e40 <PyErr_NewException@plt>:
    1e40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e44:	ldr	x17, [x16, #184]
    1e48:	add	x16, x16, #0xb8
    1e4c:	br	x17

0000000000001e50 <deflateInit_@plt>:
    1e50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e54:	ldr	x17, [x16, #192]
    1e58:	add	x16, x16, #0xc0
    1e5c:	br	x17

0000000000001e60 <PyLong_AsUnsignedLongMask@plt>:
    1e60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e64:	ldr	x17, [x16, #200]
    1e68:	add	x16, x16, #0xc8
    1e6c:	br	x17

0000000000001e70 <__gmon_start__@plt>:
    1e70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e74:	ldr	x17, [x16, #208]
    1e78:	add	x16, x16, #0xd0
    1e7c:	br	x17

0000000000001e80 <_PyArg_CheckPositional@plt>:
    1e80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e84:	ldr	x17, [x16, #216]
    1e88:	add	x16, x16, #0xd8
    1e8c:	br	x17

0000000000001e90 <inflateEnd@plt>:
    1e90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1e94:	ldr	x17, [x16, #224]
    1e98:	add	x16, x16, #0xe0
    1e9c:	br	x17

0000000000001ea0 <inflateCopy@plt>:
    1ea0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ea4:	ldr	x17, [x16, #232]
    1ea8:	add	x16, x16, #0xe8
    1eac:	br	x17

0000000000001eb0 <PyErr_Occurred@plt>:
    1eb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1eb4:	ldr	x17, [x16, #240]
    1eb8:	add	x16, x16, #0xf0
    1ebc:	br	x17

0000000000001ec0 <PyModule_Create2@plt>:
    1ec0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ec4:	ldr	x17, [x16, #248]
    1ec8:	add	x16, x16, #0xf8
    1ecc:	br	x17

0000000000001ed0 <inflateSetDictionary@plt>:
    1ed0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ed4:	ldr	x17, [x16, #256]
    1ed8:	add	x16, x16, #0x100
    1edc:	br	x17

0000000000001ee0 <adler32@plt>:
    1ee0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ee4:	ldr	x17, [x16, #264]
    1ee8:	add	x16, x16, #0x108
    1eec:	br	x17

0000000000001ef0 <PyMem_RawFree@plt>:
    1ef0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ef4:	ldr	x17, [x16, #272]
    1ef8:	add	x16, x16, #0x110
    1efc:	br	x17

0000000000001f00 <PyThread_allocate_lock@plt>:
    1f00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f04:	ldr	x17, [x16, #280]
    1f08:	add	x16, x16, #0x118
    1f0c:	br	x17

0000000000001f10 <deflateEnd@plt>:
    1f10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f14:	ldr	x17, [x16, #288]
    1f18:	add	x16, x16, #0x120
    1f1c:	br	x17

0000000000001f20 <PyThread_release_lock@plt>:
    1f20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f24:	ldr	x17, [x16, #296]
    1f28:	add	x16, x16, #0x128
    1f2c:	br	x17

0000000000001f30 <PyObject_GetBuffer@plt>:
    1f30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f34:	ldr	x17, [x16, #304]
    1f38:	add	x16, x16, #0x130
    1f3c:	br	x17

0000000000001f40 <deflateCopy@plt>:
    1f40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f44:	ldr	x17, [x16, #312]
    1f48:	add	x16, x16, #0x138
    1f4c:	br	x17

0000000000001f50 <PyLong_FromUnsignedLong@plt>:
    1f50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f54:	ldr	x17, [x16, #320]
    1f58:	add	x16, x16, #0x140
    1f5c:	br	x17

0000000000001f60 <_PyObject_New@plt>:
    1f60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f64:	ldr	x17, [x16, #328]
    1f68:	add	x16, x16, #0x148
    1f6c:	br	x17

0000000000001f70 <PyUnicode_FromString@plt>:
    1f70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f74:	ldr	x17, [x16, #336]
    1f78:	add	x16, x16, #0x150
    1f7c:	br	x17

0000000000001f80 <inflateInit2_@plt>:
    1f80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f84:	ldr	x17, [x16, #344]
    1f88:	add	x16, x16, #0x158
    1f8c:	br	x17

0000000000001f90 <PyModule_AddStringConstant@plt>:
    1f90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1f94:	ldr	x17, [x16, #352]
    1f98:	add	x16, x16, #0x160
    1f9c:	br	x17

0000000000001fa0 <PyEval_SaveThread@plt>:
    1fa0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fa4:	ldr	x17, [x16, #360]
    1fa8:	add	x16, x16, #0x168
    1fac:	br	x17

0000000000001fb0 <PyModule_AddObject@plt>:
    1fb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fb4:	ldr	x17, [x16, #368]
    1fb8:	add	x16, x16, #0x170
    1fbc:	br	x17

0000000000001fc0 <zlibVersion@plt>:
    1fc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fc4:	ldr	x17, [x16, #376]
    1fc8:	add	x16, x16, #0x178
    1fcc:	br	x17

0000000000001fd0 <PyType_IsSubtype@plt>:
    1fd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fd4:	ldr	x17, [x16, #384]
    1fd8:	add	x16, x16, #0x180
    1fdc:	br	x17

0000000000001fe0 <PyErr_Format@plt>:
    1fe0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1fe4:	ldr	x17, [x16, #392]
    1fe8:	add	x16, x16, #0x188
    1fec:	br	x17

0000000000001ff0 <_PyLong_AsInt@plt>:
    1ff0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ff4:	ldr	x17, [x16, #400]
    1ff8:	add	x16, x16, #0x190
    1ffc:	br	x17

0000000000002000 <deflateSetDictionary@plt>:
    2000:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2004:	ldr	x17, [x16, #408]
    2008:	add	x16, x16, #0x198
    200c:	br	x17

0000000000002010 <PyThread_free_lock@plt>:
    2010:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2014:	ldr	x17, [x16, #416]
    2018:	add	x16, x16, #0x1a0
    201c:	br	x17

Disassembly of section .text:

0000000000002020 <PyInit_zlib@@Base-0x2a60>:
    2020:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    2024:	ldr	x0, [x0, #4048]
    2028:	cbz	x0, 2030 <PyThread_free_lock@plt+0x20>
    202c:	b	1e70 <__gmon_start__@plt>
    2030:	ret
    2034:	nop
    2038:	adrp	x0, 18000 <PyInit_zlib@@Base+0x13580>
    203c:	add	x0, x0, #0x998
    2040:	adrp	x1, 18000 <PyInit_zlib@@Base+0x13580>
    2044:	add	x1, x1, #0x998
    2048:	cmp	x1, x0
    204c:	b.eq	2064 <PyThread_free_lock@plt+0x54>  // b.none
    2050:	adrp	x1, 17000 <PyInit_zlib@@Base+0x12580>
    2054:	ldr	x1, [x1, #4000]
    2058:	cbz	x1, 2064 <PyThread_free_lock@plt+0x54>
    205c:	mov	x16, x1
    2060:	br	x16
    2064:	ret
    2068:	adrp	x0, 18000 <PyInit_zlib@@Base+0x13580>
    206c:	add	x0, x0, #0x998
    2070:	adrp	x1, 18000 <PyInit_zlib@@Base+0x13580>
    2074:	add	x1, x1, #0x998
    2078:	sub	x1, x1, x0
    207c:	lsr	x2, x1, #63
    2080:	add	x1, x2, x1, asr #3
    2084:	cmp	xzr, x1, asr #1
    2088:	asr	x1, x1, #1
    208c:	b.eq	20a4 <PyThread_free_lock@plt+0x94>  // b.none
    2090:	adrp	x2, 17000 <PyInit_zlib@@Base+0x12580>
    2094:	ldr	x2, [x2, #4064]
    2098:	cbz	x2, 20a4 <PyThread_free_lock@plt+0x94>
    209c:	mov	x16, x2
    20a0:	br	x16
    20a4:	ret
    20a8:	stp	x29, x30, [sp, #-32]!
    20ac:	mov	x29, sp
    20b0:	str	x19, [sp, #16]
    20b4:	adrp	x19, 18000 <PyInit_zlib@@Base+0x13580>
    20b8:	ldrb	w0, [x19, #2456]
    20bc:	cbnz	w0, 20e4 <PyThread_free_lock@plt+0xd4>
    20c0:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    20c4:	ldr	x0, [x0, #4016]
    20c8:	cbz	x0, 20d8 <PyThread_free_lock@plt+0xc8>
    20cc:	adrp	x0, 18000 <PyInit_zlib@@Base+0x13580>
    20d0:	ldr	x0, [x0, #424]
    20d4:	bl	1d30 <__cxa_finalize@plt>
    20d8:	bl	2038 <PyThread_free_lock@plt+0x28>
    20dc:	mov	w0, #0x1                   	// #1
    20e0:	strb	w0, [x19, #2456]
    20e4:	ldr	x19, [sp, #16]
    20e8:	ldp	x29, x30, [sp], #32
    20ec:	ret
    20f0:	b	2068 <PyThread_free_lock@plt+0x58>
    20f4:	nop
    20f8:	mov	x0, x1
    20fc:	b	1ef0 <PyMem_RawFree@plt>
    2100:	mov	w3, w1
    2104:	mov	w4, w2
    2108:	cbz	w2, 211c <PyThread_free_lock@plt+0x10c>
    210c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    2110:	udiv	x0, x0, x4
    2114:	cmp	x0, x3
    2118:	b.cc	2124 <PyThread_free_lock@plt+0x114>  // b.lo, b.ul, b.last
    211c:	umull	x0, w1, w2
    2120:	b	1d40 <PyMem_RawMalloc@plt>
    2124:	mov	x0, #0x0                   	// #0
    2128:	ret
    212c:	nop
    2130:	stp	x29, x30, [sp, #-32]!
    2134:	mov	x29, sp
    2138:	stp	x19, x20, [sp, #16]
    213c:	bl	1f60 <_PyObject_New@plt>
    2140:	cbz	x0, 21b0 <PyThread_free_lock@plt+0x1a0>
    2144:	mov	x19, x0
    2148:	strb	wzr, [x0, #144]
    214c:	adrp	x20, 5000 <PyInit_zlib@@Base+0x580>
    2150:	add	x20, x20, #0x98
    2154:	mov	x0, x20
    2158:	mov	x1, #0x0                   	// #0
    215c:	str	wzr, [x19, #148]
    2160:	str	xzr, [x19, #152]
    2164:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    2168:	str	x0, [x19, #128]
    216c:	cbz	x0, 21a0 <PyThread_free_lock@plt+0x190>
    2170:	mov	x0, x20
    2174:	mov	x1, #0x0                   	// #0
    2178:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    217c:	str	x0, [x19, #136]
    2180:	cbz	x0, 21a0 <PyThread_free_lock@plt+0x190>
    2184:	bl	1f00 <PyThread_allocate_lock@plt>
    2188:	str	x0, [x19, #160]
    218c:	cbz	x0, 21d4 <PyThread_free_lock@plt+0x1c4>
    2190:	mov	x0, x19
    2194:	ldp	x19, x20, [sp, #16]
    2198:	ldp	x29, x30, [sp], #32
    219c:	ret
    21a0:	ldr	x0, [x19]
    21a4:	sub	x0, x0, #0x1
    21a8:	str	x0, [x19]
    21ac:	cbz	x0, 21c4 <PyThread_free_lock@plt+0x1b4>
    21b0:	mov	x19, #0x0                   	// #0
    21b4:	mov	x0, x19
    21b8:	ldp	x19, x20, [sp, #16]
    21bc:	ldp	x29, x30, [sp], #32
    21c0:	ret
    21c4:	mov	x0, x19
    21c8:	mov	x19, #0x0                   	// #0
    21cc:	bl	1d80 <_Py_Dealloc@plt>
    21d0:	b	2190 <PyThread_free_lock@plt+0x180>
    21d4:	ldr	x0, [x19]
    21d8:	sub	x0, x0, #0x1
    21dc:	str	x0, [x19]
    21e0:	cbz	x0, 2204 <PyThread_free_lock@plt+0x1f4>
    21e4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    21e8:	mov	x19, #0x0                   	// #0
    21ec:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    21f0:	add	x1, x1, #0xd20
    21f4:	ldr	x0, [x0, #4024]
    21f8:	ldr	x0, [x0]
    21fc:	bl	1dc0 <PyErr_SetString@plt>
    2200:	b	2190 <PyThread_free_lock@plt+0x180>
    2204:	mov	x0, x19
    2208:	bl	1d80 <_Py_Dealloc@plt>
    220c:	b	21e4 <PyThread_free_lock@plt+0x1d4>
    2210:	stp	x29, x30, [sp, #-48]!
    2214:	mov	x29, sp
    2218:	stp	x19, x20, [sp, #16]
    221c:	mov	x20, x1
    2220:	bl	1de0 <_PyLong_FromNbIndexOrNbInt@plt>
    2224:	cbz	x0, 2284 <PyThread_free_lock@plt+0x274>
    2228:	mov	x19, x0
    222c:	str	x21, [sp, #32]
    2230:	bl	1e20 <PyLong_AsSsize_t@plt>
    2234:	mov	x21, x0
    2238:	ldr	x1, [x19]
    223c:	sub	x1, x1, #0x1
    2240:	str	x1, [x19]
    2244:	cbz	x1, 2268 <PyThread_free_lock@plt+0x258>
    2248:	cmn	x21, #0x1
    224c:	b.eq	2278 <PyThread_free_lock@plt+0x268>  // b.none
    2250:	str	x21, [x20]
    2254:	mov	w0, #0x1                   	// #1
    2258:	ldp	x19, x20, [sp, #16]
    225c:	ldr	x21, [sp, #32]
    2260:	ldp	x29, x30, [sp], #48
    2264:	ret
    2268:	mov	x0, x19
    226c:	bl	1d80 <_Py_Dealloc@plt>
    2270:	cmn	x21, #0x1
    2274:	b.ne	2250 <PyThread_free_lock@plt+0x240>  // b.any
    2278:	bl	1eb0 <PyErr_Occurred@plt>
    227c:	cbz	x0, 2250 <PyThread_free_lock@plt+0x240>
    2280:	ldr	x21, [sp, #32]
    2284:	mov	w0, #0x0                   	// #0
    2288:	ldp	x19, x20, [sp, #16]
    228c:	ldp	x29, x30, [sp], #48
    2290:	ret
    2294:	nop
    2298:	stp	x29, x30, [sp, #-32]!
    229c:	mov	x29, sp
    22a0:	str	x19, [sp, #16]
    22a4:	mov	x19, x0
    22a8:	ldr	x0, [x0, #160]
    22ac:	bl	2010 <PyThread_free_lock@plt>
    22b0:	ldr	x0, [x19, #128]
    22b4:	cbz	x0, 22c8 <PyThread_free_lock@plt+0x2b8>
    22b8:	ldr	x1, [x0]
    22bc:	sub	x1, x1, #0x1
    22c0:	str	x1, [x0]
    22c4:	cbz	x1, 2324 <PyThread_free_lock@plt+0x314>
    22c8:	ldr	x0, [x19, #136]
    22cc:	cbz	x0, 22e0 <PyThread_free_lock@plt+0x2d0>
    22d0:	ldr	x1, [x0]
    22d4:	sub	x1, x1, #0x1
    22d8:	str	x1, [x0]
    22dc:	cbz	x1, 231c <PyThread_free_lock@plt+0x30c>
    22e0:	ldr	x0, [x19, #152]
    22e4:	cbz	x0, 22f8 <PyThread_free_lock@plt+0x2e8>
    22e8:	ldr	x1, [x0]
    22ec:	sub	x1, x1, #0x1
    22f0:	str	x1, [x0]
    22f4:	cbz	x1, 2308 <PyThread_free_lock@plt+0x2f8>
    22f8:	mov	x0, x19
    22fc:	ldr	x19, [sp, #16]
    2300:	ldp	x29, x30, [sp], #32
    2304:	b	1df0 <PyObject_Free@plt>
    2308:	bl	1d80 <_Py_Dealloc@plt>
    230c:	mov	x0, x19
    2310:	ldr	x19, [sp, #16]
    2314:	ldp	x29, x30, [sp], #32
    2318:	b	1df0 <PyObject_Free@plt>
    231c:	bl	1d80 <_Py_Dealloc@plt>
    2320:	b	22e0 <PyThread_free_lock@plt+0x2d0>
    2324:	bl	1d80 <_Py_Dealloc@plt>
    2328:	b	22c8 <PyThread_free_lock@plt+0x2b8>
    232c:	nop
    2330:	stp	x29, x30, [sp, #-32]!
    2334:	mov	x29, sp
    2338:	str	x19, [sp, #16]
    233c:	mov	x19, x0
    2340:	ldr	w0, [x0, #148]
    2344:	cbnz	w0, 2358 <PyThread_free_lock@plt+0x348>
    2348:	mov	x0, x19
    234c:	ldr	x19, [sp, #16]
    2350:	ldp	x29, x30, [sp], #32
    2354:	b	2298 <PyThread_free_lock@plt+0x288>
    2358:	add	x0, x19, #0x10
    235c:	bl	1e90 <inflateEnd@plt>
    2360:	mov	x0, x19
    2364:	ldr	x19, [sp, #16]
    2368:	ldp	x29, x30, [sp], #32
    236c:	b	2298 <PyThread_free_lock@plt+0x288>
    2370:	stp	x29, x30, [sp, #-32]!
    2374:	mov	x29, sp
    2378:	str	x19, [sp, #16]
    237c:	mov	x19, x0
    2380:	ldr	w0, [x0, #148]
    2384:	cbnz	w0, 2398 <PyThread_free_lock@plt+0x388>
    2388:	mov	x0, x19
    238c:	ldr	x19, [sp, #16]
    2390:	ldp	x29, x30, [sp], #32
    2394:	b	2298 <PyThread_free_lock@plt+0x288>
    2398:	add	x0, x19, #0x10
    239c:	bl	1f10 <deflateEnd@plt>
    23a0:	mov	x0, x19
    23a4:	ldr	x19, [sp, #16]
    23a8:	ldp	x29, x30, [sp], #32
    23ac:	b	2298 <PyThread_free_lock@plt+0x288>
    23b0:	adrp	x5, 18000 <PyInit_zlib@@Base+0x13580>
    23b4:	mov	x4, x0
    23b8:	cmn	w1, #0x6
    23bc:	mov	x3, x2
    23c0:	ldr	x0, [x5, #2464]
    23c4:	b.eq	2404 <PyThread_free_lock@plt+0x3f4>  // b.none
    23c8:	cbz	x4, 23dc <PyThread_free_lock@plt+0x3cc>
    23cc:	mov	w2, w1
    23d0:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    23d4:	add	x1, x1, #0xdc0
    23d8:	b	1fe0 <PyErr_Format@plt>
    23dc:	cmn	w1, #0x3
    23e0:	b.eq	244c <PyThread_free_lock@plt+0x43c>  // b.none
    23e4:	cmn	w1, #0x2
    23e8:	b.eq	2434 <PyThread_free_lock@plt+0x424>  // b.none
    23ec:	cmn	w1, #0x5
    23f0:	b.eq	241c <PyThread_free_lock@plt+0x40c>  // b.none
    23f4:	mov	w2, w1
    23f8:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    23fc:	add	x1, x1, #0xdb0
    2400:	b	1fe0 <PyErr_Format@plt>
    2404:	mov	w2, w1
    2408:	adrp	x4, 4000 <PyThread_free_lock@plt+0x1ff0>
    240c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    2410:	add	x4, x4, #0xd58
    2414:	add	x1, x1, #0xdc0
    2418:	b	1fe0 <PyErr_Format@plt>
    241c:	mov	w2, w1
    2420:	adrp	x4, 4000 <PyThread_free_lock@plt+0x1ff0>
    2424:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    2428:	add	x4, x4, #0xd90
    242c:	add	x1, x1, #0xdc0
    2430:	b	1fe0 <PyErr_Format@plt>
    2434:	mov	w2, w1
    2438:	adrp	x4, 4000 <PyThread_free_lock@plt+0x1ff0>
    243c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    2440:	add	x4, x4, #0xd38
    2444:	add	x1, x1, #0xdc0
    2448:	b	1fe0 <PyErr_Format@plt>
    244c:	adrp	x4, 4000 <PyThread_free_lock@plt+0x1ff0>
    2450:	add	x4, x4, #0xd78
    2454:	b	23cc <PyThread_free_lock@plt+0x3bc>
    2458:	stp	x29, x30, [sp, #-128]!
    245c:	mov	w2, #0x0                   	// #0
    2460:	mov	x29, sp
    2464:	stp	x19, x20, [sp, #16]
    2468:	mov	x20, x0
    246c:	ldr	x0, [x0, #152]
    2470:	str	x21, [sp, #32]
    2474:	add	x21, sp, #0x30
    2478:	mov	x1, x21
    247c:	bl	1f30 <PyObject_GetBuffer@plt>
    2480:	mov	w19, w0
    2484:	cmn	w0, #0x1
    2488:	b.eq	24b8 <PyThread_free_lock@plt+0x4a8>  // b.none
    248c:	ldr	x2, [sp, #64]
    2490:	mov	x0, #0xffffffff            	// #4294967295
    2494:	cmp	x2, x0
    2498:	b.hi	24cc <PyThread_free_lock@plt+0x4bc>  // b.pmore
    249c:	ldr	x1, [sp, #48]
    24a0:	add	x0, x20, #0x10
    24a4:	bl	1ed0 <inflateSetDictionary@plt>
    24a8:	mov	w19, w0
    24ac:	mov	x0, x21
    24b0:	bl	1d20 <PyBuffer_Release@plt>
    24b4:	cbnz	w19, 24f4 <PyThread_free_lock@plt+0x4e4>
    24b8:	mov	w0, w19
    24bc:	ldp	x19, x20, [sp, #16]
    24c0:	ldr	x21, [sp, #32]
    24c4:	ldp	x29, x30, [sp], #128
    24c8:	ret
    24cc:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    24d0:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    24d4:	add	x1, x1, #0xdd8
    24d8:	mov	w19, #0xffffffff            	// #-1
    24dc:	ldr	x0, [x0, #4056]
    24e0:	ldr	x0, [x0]
    24e4:	bl	1dc0 <PyErr_SetString@plt>
    24e8:	mov	x0, x21
    24ec:	bl	1d20 <PyBuffer_Release@plt>
    24f0:	b	24b8 <PyThread_free_lock@plt+0x4a8>
    24f4:	ldr	x0, [x20, #64]
    24f8:	mov	w1, w19
    24fc:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    2500:	mov	w19, #0xffffffff            	// #-1
    2504:	add	x2, x2, #0xe08
    2508:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    250c:	b	24b8 <PyThread_free_lock@plt+0x4a8>
    2510:	stp	x29, x30, [sp, #-48]!
    2514:	adrp	x1, 18000 <PyInit_zlib@@Base+0x13580>
    2518:	mov	x29, sp
    251c:	stp	x19, x20, [sp, #16]
    2520:	str	x21, [sp, #32]
    2524:	mov	x21, x0
    2528:	add	x0, x1, #0x1b0
    252c:	bl	2130 <PyThread_free_lock@plt+0x120>
    2530:	cbz	x0, 25a0 <PyThread_free_lock@plt+0x590>
    2534:	mov	x19, x0
    2538:	bl	1fa0 <PyEval_SaveThread@plt>
    253c:	mov	x20, x0
    2540:	mov	w1, #0x1                   	// #1
    2544:	ldr	x0, [x21, #160]
    2548:	bl	1da0 <PyThread_acquire_lock@plt>
    254c:	mov	x0, x20
    2550:	bl	1d10 <PyEval_RestoreThread@plt>
    2554:	add	x1, x21, #0x10
    2558:	add	x0, x19, #0x10
    255c:	bl	1ea0 <inflateCopy@plt>
    2560:	mov	w1, w0
    2564:	cmn	w0, #0x2
    2568:	b.eq	26a8 <PyThread_free_lock@plt+0x698>  // b.none
    256c:	cbz	w0, 25f4 <PyThread_free_lock@plt+0x5e4>
    2570:	cmn	w0, #0x4
    2574:	b.eq	25d8 <PyThread_free_lock@plt+0x5c8>  // b.none
    2578:	ldr	x0, [x21, #64]
    257c:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    2580:	add	x2, x2, #0xe70
    2584:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    2588:	ldr	x0, [x21, #160]
    258c:	bl	1f20 <PyThread_release_lock@plt>
    2590:	ldr	x0, [x19]
    2594:	sub	x0, x0, #0x1
    2598:	str	x0, [x19]
    259c:	cbz	x0, 25b8 <PyThread_free_lock@plt+0x5a8>
    25a0:	mov	x19, #0x0                   	// #0
    25a4:	mov	x0, x19
    25a8:	ldp	x19, x20, [sp, #16]
    25ac:	ldr	x21, [sp, #32]
    25b0:	ldp	x29, x30, [sp], #48
    25b4:	ret
    25b8:	mov	x0, x19
    25bc:	mov	x19, #0x0                   	// #0
    25c0:	bl	1d80 <_Py_Dealloc@plt>
    25c4:	mov	x0, x19
    25c8:	ldp	x19, x20, [sp, #16]
    25cc:	ldr	x21, [sp, #32]
    25d0:	ldp	x29, x30, [sp], #48
    25d4:	ret
    25d8:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    25dc:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    25e0:	add	x1, x1, #0xe40
    25e4:	ldr	x0, [x0, #4024]
    25e8:	ldr	x0, [x0]
    25ec:	bl	1dc0 <PyErr_SetString@plt>
    25f0:	b	2588 <PyThread_free_lock@plt+0x578>
    25f4:	ldr	x1, [x21, #128]
    25f8:	ldr	x0, [x19, #128]
    25fc:	ldr	x2, [x1]
    2600:	add	x2, x2, #0x1
    2604:	str	x2, [x1]
    2608:	str	x1, [x19, #128]
    260c:	cbz	x0, 2620 <PyThread_free_lock@plt+0x610>
    2610:	ldr	x1, [x0]
    2614:	sub	x1, x1, #0x1
    2618:	str	x1, [x0]
    261c:	cbz	x1, 26c4 <PyThread_free_lock@plt+0x6b4>
    2620:	ldr	x1, [x21, #136]
    2624:	ldr	x0, [x19, #136]
    2628:	ldr	x2, [x1]
    262c:	add	x2, x2, #0x1
    2630:	str	x2, [x1]
    2634:	str	x1, [x19, #136]
    2638:	cbz	x0, 264c <PyThread_free_lock@plt+0x63c>
    263c:	ldr	x1, [x0]
    2640:	sub	x1, x1, #0x1
    2644:	str	x1, [x0]
    2648:	cbz	x1, 26cc <PyThread_free_lock@plt+0x6bc>
    264c:	ldr	x1, [x21, #152]
    2650:	cbz	x1, 2660 <PyThread_free_lock@plt+0x650>
    2654:	ldr	x0, [x1]
    2658:	add	x0, x0, #0x1
    265c:	str	x0, [x1]
    2660:	ldr	x0, [x19, #152]
    2664:	str	x1, [x19, #152]
    2668:	cbz	x0, 267c <PyThread_free_lock@plt+0x66c>
    266c:	ldr	x1, [x0]
    2670:	sub	x1, x1, #0x1
    2674:	str	x1, [x0]
    2678:	cbz	x1, 26d4 <PyThread_free_lock@plt+0x6c4>
    267c:	ldrb	w1, [x21, #144]
    2680:	mov	w0, #0x1                   	// #1
    2684:	strb	w1, [x19, #144]
    2688:	str	w0, [x19, #148]
    268c:	ldr	x0, [x21, #160]
    2690:	bl	1f20 <PyThread_release_lock@plt>
    2694:	mov	x0, x19
    2698:	ldp	x19, x20, [sp, #16]
    269c:	ldr	x21, [sp, #32]
    26a0:	ldp	x29, x30, [sp], #48
    26a4:	ret
    26a8:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    26ac:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    26b0:	add	x1, x1, #0xe20
    26b4:	ldr	x0, [x0, #4032]
    26b8:	ldr	x0, [x0]
    26bc:	bl	1dc0 <PyErr_SetString@plt>
    26c0:	b	2588 <PyThread_free_lock@plt+0x578>
    26c4:	bl	1d80 <_Py_Dealloc@plt>
    26c8:	b	2620 <PyThread_free_lock@plt+0x610>
    26cc:	bl	1d80 <_Py_Dealloc@plt>
    26d0:	b	264c <PyThread_free_lock@plt+0x63c>
    26d4:	bl	1d80 <_Py_Dealloc@plt>
    26d8:	b	267c <PyThread_free_lock@plt+0x66c>
    26dc:	nop
    26e0:	b	2510 <PyThread_free_lock@plt+0x500>
    26e4:	nop
    26e8:	stp	x29, x30, [sp, #-48]!
    26ec:	adrp	x1, 18000 <PyInit_zlib@@Base+0x13580>
    26f0:	add	x1, x1, #0x1b0
    26f4:	mov	x29, sp
    26f8:	stp	x19, x20, [sp, #16]
    26fc:	str	x21, [sp, #32]
    2700:	mov	x21, x0
    2704:	add	x0, x1, #0x1a0
    2708:	bl	2130 <PyThread_free_lock@plt+0x120>
    270c:	cbz	x0, 277c <PyThread_free_lock@plt+0x76c>
    2710:	mov	x19, x0
    2714:	bl	1fa0 <PyEval_SaveThread@plt>
    2718:	mov	x20, x0
    271c:	mov	w1, #0x1                   	// #1
    2720:	ldr	x0, [x21, #160]
    2724:	bl	1da0 <PyThread_acquire_lock@plt>
    2728:	mov	x0, x20
    272c:	bl	1d10 <PyEval_RestoreThread@plt>
    2730:	add	x1, x21, #0x10
    2734:	add	x0, x19, #0x10
    2738:	bl	1f40 <deflateCopy@plt>
    273c:	mov	w1, w0
    2740:	cmn	w0, #0x2
    2744:	b.eq	2884 <PyThread_free_lock@plt+0x874>  // b.none
    2748:	cbz	w0, 27d0 <PyThread_free_lock@plt+0x7c0>
    274c:	cmn	w0, #0x4
    2750:	b.eq	27b4 <PyThread_free_lock@plt+0x7a4>  // b.none
    2754:	ldr	x0, [x21, #64]
    2758:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    275c:	add	x2, x2, #0xec8
    2760:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    2764:	ldr	x0, [x21, #160]
    2768:	bl	1f20 <PyThread_release_lock@plt>
    276c:	ldr	x0, [x19]
    2770:	sub	x0, x0, #0x1
    2774:	str	x0, [x19]
    2778:	cbz	x0, 2794 <PyThread_free_lock@plt+0x784>
    277c:	mov	x19, #0x0                   	// #0
    2780:	mov	x0, x19
    2784:	ldp	x19, x20, [sp, #16]
    2788:	ldr	x21, [sp, #32]
    278c:	ldp	x29, x30, [sp], #48
    2790:	ret
    2794:	mov	x0, x19
    2798:	mov	x19, #0x0                   	// #0
    279c:	bl	1d80 <_Py_Dealloc@plt>
    27a0:	mov	x0, x19
    27a4:	ldp	x19, x20, [sp, #16]
    27a8:	ldr	x21, [sp, #32]
    27ac:	ldp	x29, x30, [sp], #48
    27b0:	ret
    27b4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    27b8:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    27bc:	add	x1, x1, #0xe98
    27c0:	ldr	x0, [x0, #4024]
    27c4:	ldr	x0, [x0]
    27c8:	bl	1dc0 <PyErr_SetString@plt>
    27cc:	b	2764 <PyThread_free_lock@plt+0x754>
    27d0:	ldr	x1, [x21, #128]
    27d4:	ldr	x0, [x19, #128]
    27d8:	ldr	x2, [x1]
    27dc:	add	x2, x2, #0x1
    27e0:	str	x2, [x1]
    27e4:	str	x1, [x19, #128]
    27e8:	cbz	x0, 27fc <PyThread_free_lock@plt+0x7ec>
    27ec:	ldr	x1, [x0]
    27f0:	sub	x1, x1, #0x1
    27f4:	str	x1, [x0]
    27f8:	cbz	x1, 28a0 <PyThread_free_lock@plt+0x890>
    27fc:	ldr	x1, [x21, #136]
    2800:	ldr	x0, [x19, #136]
    2804:	ldr	x2, [x1]
    2808:	add	x2, x2, #0x1
    280c:	str	x2, [x1]
    2810:	str	x1, [x19, #136]
    2814:	cbz	x0, 2828 <PyThread_free_lock@plt+0x818>
    2818:	ldr	x1, [x0]
    281c:	sub	x1, x1, #0x1
    2820:	str	x1, [x0]
    2824:	cbz	x1, 28a8 <PyThread_free_lock@plt+0x898>
    2828:	ldr	x1, [x21, #152]
    282c:	cbz	x1, 283c <PyThread_free_lock@plt+0x82c>
    2830:	ldr	x0, [x1]
    2834:	add	x0, x0, #0x1
    2838:	str	x0, [x1]
    283c:	ldr	x0, [x19, #152]
    2840:	str	x1, [x19, #152]
    2844:	cbz	x0, 2858 <PyThread_free_lock@plt+0x848>
    2848:	ldr	x1, [x0]
    284c:	sub	x1, x1, #0x1
    2850:	str	x1, [x0]
    2854:	cbz	x1, 28b0 <PyThread_free_lock@plt+0x8a0>
    2858:	ldrb	w1, [x21, #144]
    285c:	mov	w0, #0x1                   	// #1
    2860:	strb	w1, [x19, #144]
    2864:	str	w0, [x19, #148]
    2868:	ldr	x0, [x21, #160]
    286c:	bl	1f20 <PyThread_release_lock@plt>
    2870:	mov	x0, x19
    2874:	ldp	x19, x20, [sp, #16]
    2878:	ldr	x21, [sp, #32]
    287c:	ldp	x29, x30, [sp], #48
    2880:	ret
    2884:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    2888:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    288c:	add	x1, x1, #0xe20
    2890:	ldr	x0, [x0, #4032]
    2894:	ldr	x0, [x0]
    2898:	bl	1dc0 <PyErr_SetString@plt>
    289c:	b	2764 <PyThread_free_lock@plt+0x754>
    28a0:	bl	1d80 <_Py_Dealloc@plt>
    28a4:	b	27fc <PyThread_free_lock@plt+0x7ec>
    28a8:	bl	1d80 <_Py_Dealloc@plt>
    28ac:	b	2828 <PyThread_free_lock@plt+0x818>
    28b0:	bl	1d80 <_Py_Dealloc@plt>
    28b4:	b	2858 <PyThread_free_lock@plt+0x848>
    28b8:	b	26e8 <PyThread_free_lock@plt+0x6d8>
    28bc:	nop
    28c0:	sub	sp, sp, #0x60
    28c4:	mov	x0, x3
    28c8:	stp	x29, x30, [sp, #16]
    28cc:	add	x29, sp, #0x10
    28d0:	stp	x19, x20, [sp, #32]
    28d4:	mov	x19, x1
    28d8:	mov	x1, x2
    28dc:	str	x21, [sp, #48]
    28e0:	cbz	x3, 2a34 <PyThread_free_lock@plt+0xa24>
    28e4:	ldr	x20, [x3, #16]
    28e8:	add	x20, x2, x20
    28ec:	add	x2, sp, #0x50
    28f0:	str	x2, [sp]
    28f4:	adrp	x4, 18000 <PyInit_zlib@@Base+0x13580>
    28f8:	add	x4, x4, #0x1b0
    28fc:	mov	x3, x0
    2900:	add	x4, x4, #0x340
    2904:	mov	x0, x19
    2908:	mov	w7, #0x0                   	// #0
    290c:	mov	w6, #0x2                   	// #2
    2910:	mov	w5, #0x0                   	// #0
    2914:	mov	x2, #0x0                   	// #0
    2918:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    291c:	mov	x19, x0
    2920:	cbz	x0, 2a18 <PyThread_free_lock@plt+0xa08>
    2924:	cbz	x20, 2a4c <PyThread_free_lock@plt+0xa3c>
    2928:	ldr	x0, [x19]
    292c:	cbz	x0, 2a88 <PyThread_free_lock@plt+0xa78>
    2930:	adrp	x1, 17000 <PyInit_zlib@@Base+0x12580>
    2934:	ldr	x0, [x0, #8]
    2938:	ldr	x1, [x1, #4008]
    293c:	cmp	x0, x1
    2940:	b.eq	2b50 <PyThread_free_lock@plt+0xb40>  // b.none
    2944:	bl	1fd0 <PyType_IsSubtype@plt>
    2948:	cbnz	w0, 2b50 <PyThread_free_lock@plt+0xb40>
    294c:	ldr	x0, [x19]
    2950:	bl	1ff0 <_PyLong_AsInt@plt>
    2954:	mov	w21, w0
    2958:	cmn	w0, #0x1
    295c:	b.eq	2ba4 <PyThread_free_lock@plt+0xb94>  // b.none
    2960:	cmp	x20, #0x1
    2964:	b.eq	2a50 <PyThread_free_lock@plt+0xa40>  // b.none
    2968:	ldr	x20, [x19, #8]
    296c:	cbz	x20, 2a50 <PyThread_free_lock@plt+0xa40>
    2970:	ldr	x0, [x20, #8]
    2974:	ldr	x0, [x0, #160]
    2978:	cbz	x0, 2b84 <PyThread_free_lock@plt+0xb74>
    297c:	ldr	x0, [x0]
    2980:	cbz	x0, 2b84 <PyThread_free_lock@plt+0xb74>
    2984:	adrp	x0, 18000 <PyInit_zlib@@Base+0x13580>
    2988:	add	x0, x0, #0x1b0
    298c:	bl	2130 <PyThread_free_lock@plt+0x120>
    2990:	mov	x19, x0
    2994:	cbz	x0, 2a18 <PyThread_free_lock@plt+0xa08>
    2998:	ldr	x0, [x20]
    299c:	adrp	x2, 2000 <deflateSetDictionary@plt>
    29a0:	adrp	x1, 2000 <deflateSetDictionary@plt>
    29a4:	add	x2, x2, #0x100
    29a8:	add	x1, x1, #0xf8
    29ac:	str	xzr, [x19, #16]
    29b0:	str	wzr, [x19, #24]
    29b4:	add	x0, x0, #0x1
    29b8:	stp	x2, x1, [x19, #80]
    29bc:	str	xzr, [x19, #96]
    29c0:	str	x0, [x20]
    29c4:	str	x20, [x19, #152]
    29c8:	mov	w1, w21
    29cc:	add	x0, x19, #0x10
    29d0:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    29d4:	mov	w3, #0x70                  	// #112
    29d8:	add	x2, x2, #0xf48
    29dc:	bl	1f80 <inflateInit2_@plt>
    29e0:	mov	w1, w0
    29e4:	cmn	w0, #0x2
    29e8:	b.eq	2aa0 <PyThread_free_lock@plt+0xa90>  // b.none
    29ec:	cbz	w0, 2b28 <PyThread_free_lock@plt+0xb18>
    29f0:	cmn	w0, #0x4
    29f4:	b.eq	2ae4 <PyThread_free_lock@plt+0xad4>  // b.none
    29f8:	ldr	x0, [x19, #64]
    29fc:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    2a00:	add	x2, x2, #0xf70
    2a04:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    2a08:	ldr	x0, [x19]
    2a0c:	sub	x0, x0, #0x1
    2a10:	str	x0, [x19]
    2a14:	cbz	x0, 2a90 <PyThread_free_lock@plt+0xa80>
    2a18:	mov	x19, #0x0                   	// #0
    2a1c:	mov	x0, x19
    2a20:	ldp	x29, x30, [sp, #16]
    2a24:	ldp	x19, x20, [sp, #32]
    2a28:	ldr	x21, [sp, #48]
    2a2c:	add	sp, sp, #0x60
    2a30:	ret
    2a34:	tbnz	x2, #63, 2bc8 <PyThread_free_lock@plt+0xbb8>
    2a38:	cmp	x19, #0x0
    2a3c:	mov	x20, x2
    2a40:	ccmp	x2, #0x2, #0x0, ne  // ne = any
    2a44:	b.gt	28ec <PyThread_free_lock@plt+0x8dc>
    2a48:	cbnz	x20, 2928 <PyThread_free_lock@plt+0x918>
    2a4c:	mov	w21, #0xf                   	// #15
    2a50:	adrp	x0, 18000 <PyInit_zlib@@Base+0x13580>
    2a54:	add	x0, x0, #0x1b0
    2a58:	bl	2130 <PyThread_free_lock@plt+0x120>
    2a5c:	mov	x19, x0
    2a60:	cbz	x0, 2a18 <PyThread_free_lock@plt+0xa08>
    2a64:	adrp	x1, 2000 <deflateSetDictionary@plt>
    2a68:	adrp	x0, 2000 <deflateSetDictionary@plt>
    2a6c:	add	x1, x1, #0x100
    2a70:	add	x0, x0, #0xf8
    2a74:	str	xzr, [x19, #16]
    2a78:	str	wzr, [x19, #24]
    2a7c:	stp	x1, x0, [x19, #80]
    2a80:	str	xzr, [x19, #96]
    2a84:	b	29c8 <PyThread_free_lock@plt+0x9b8>
    2a88:	mov	w21, #0xf                   	// #15
    2a8c:	b	2968 <PyThread_free_lock@plt+0x958>
    2a90:	mov	x0, x19
    2a94:	mov	x19, #0x0                   	// #0
    2a98:	bl	1d80 <_Py_Dealloc@plt>
    2a9c:	b	2a1c <PyThread_free_lock@plt+0xa0c>
    2aa0:	ldr	x0, [x19]
    2aa4:	sub	x0, x0, #0x1
    2aa8:	str	x0, [x19]
    2aac:	cbz	x0, 2bb0 <PyThread_free_lock@plt+0xba0>
    2ab0:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    2ab4:	mov	x19, #0x0                   	// #0
    2ab8:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    2abc:	add	x1, x1, #0xf50
    2ac0:	ldr	x0, [x0, #4032]
    2ac4:	ldr	x0, [x0]
    2ac8:	bl	1dc0 <PyErr_SetString@plt>
    2acc:	mov	x0, x19
    2ad0:	ldp	x29, x30, [sp, #16]
    2ad4:	ldp	x19, x20, [sp, #32]
    2ad8:	ldr	x21, [sp, #48]
    2adc:	add	sp, sp, #0x60
    2ae0:	ret
    2ae4:	ldr	x0, [x19]
    2ae8:	sub	x0, x0, #0x1
    2aec:	str	x0, [x19]
    2af0:	cbz	x0, 2bbc <PyThread_free_lock@plt+0xbac>
    2af4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    2af8:	mov	x19, #0x0                   	// #0
    2afc:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    2b00:	add	x1, x1, #0xe40
    2b04:	ldr	x0, [x0, #4024]
    2b08:	ldr	x0, [x0]
    2b0c:	bl	1dc0 <PyErr_SetString@plt>
    2b10:	mov	x0, x19
    2b14:	ldp	x29, x30, [sp, #16]
    2b18:	ldp	x19, x20, [sp, #32]
    2b1c:	ldr	x21, [sp, #48]
    2b20:	add	sp, sp, #0x60
    2b24:	ret
    2b28:	ldr	x0, [x19, #152]
    2b2c:	mov	w1, #0x1                   	// #1
    2b30:	str	w1, [x19, #148]
    2b34:	cmp	x0, #0x0
    2b38:	ccmp	w21, #0x0, #0x0, ne  // ne = any
    2b3c:	b.ge	2a1c <PyThread_free_lock@plt+0xa0c>  // b.tcont
    2b40:	mov	x0, x19
    2b44:	bl	2458 <PyThread_free_lock@plt+0x448>
    2b48:	tbz	w0, #31, 2a1c <PyThread_free_lock@plt+0xa0c>
    2b4c:	b	2a08 <PyThread_free_lock@plt+0x9f8>
    2b50:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    2b54:	mov	x19, #0x0                   	// #0
    2b58:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    2b5c:	add	x1, x1, #0xef0
    2b60:	ldr	x0, [x0, #4040]
    2b64:	ldr	x0, [x0]
    2b68:	bl	1dc0 <PyErr_SetString@plt>
    2b6c:	mov	x0, x19
    2b70:	ldp	x29, x30, [sp, #16]
    2b74:	ldp	x19, x20, [sp, #32]
    2b78:	ldr	x21, [sp, #48]
    2b7c:	add	sp, sp, #0x60
    2b80:	ret
    2b84:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    2b88:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    2b8c:	mov	x19, #0x0                   	// #0
    2b90:	add	x1, x1, #0xf18
    2b94:	ldr	x0, [x0, #4040]
    2b98:	ldr	x0, [x0]
    2b9c:	bl	1dc0 <PyErr_SetString@plt>
    2ba0:	b	2a1c <PyThread_free_lock@plt+0xa0c>
    2ba4:	bl	1eb0 <PyErr_Occurred@plt>
    2ba8:	cbz	x0, 2960 <PyThread_free_lock@plt+0x950>
    2bac:	b	2a18 <PyThread_free_lock@plt+0xa08>
    2bb0:	mov	x0, x19
    2bb4:	bl	1d80 <_Py_Dealloc@plt>
    2bb8:	b	2ab0 <PyThread_free_lock@plt+0xaa0>
    2bbc:	mov	x0, x19
    2bc0:	bl	1d80 <_Py_Dealloc@plt>
    2bc4:	b	2af4 <PyThread_free_lock@plt+0xae4>
    2bc8:	add	x0, sp, #0x50
    2bcc:	str	x0, [sp]
    2bd0:	adrp	x4, 18000 <PyInit_zlib@@Base+0x13580>
    2bd4:	add	x4, x4, #0x1b0
    2bd8:	mov	x0, x19
    2bdc:	add	x4, x4, #0x340
    2be0:	mov	w7, #0x0                   	// #0
    2be4:	mov	w6, #0x2                   	// #2
    2be8:	mov	w5, #0x0                   	// #0
    2bec:	mov	x2, #0x0                   	// #0
    2bf0:	str	x1, [sp, #72]
    2bf4:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    2bf8:	mov	x19, x0
    2bfc:	cbz	x0, 2a18 <PyThread_free_lock@plt+0xa08>
    2c00:	ldr	x1, [sp, #72]
    2c04:	mov	x20, x1
    2c08:	b	2928 <PyThread_free_lock@plt+0x918>
    2c0c:	nop
    2c10:	stp	x29, x30, [sp, #-64]!
    2c14:	mov	x29, sp
    2c18:	stp	x19, x20, [sp, #16]
    2c1c:	mov	x20, x3
    2c20:	ldr	x19, [x2]
    2c24:	stp	x21, x22, [sp, #32]
    2c28:	mov	x22, x0
    2c2c:	stp	x23, x24, [sp, #48]
    2c30:	mov	x23, x2
    2c34:	mov	x24, x1
    2c38:	cbz	x19, 2cc0 <PyThread_free_lock@plt+0xcb0>
    2c3c:	ldr	x5, [x0]
    2c40:	add	x19, x19, #0x20
    2c44:	sub	x19, x5, x19
    2c48:	cmp	x3, x19
    2c4c:	b.eq	2c84 <PyThread_free_lock@plt+0xc74>  // b.none
    2c50:	sub	x1, x3, x19
    2c54:	mov	x0, x3
    2c58:	sub	w19, w0, w19
    2c5c:	mov	x2, #0xffffffff            	// #4294967295
    2c60:	cmp	x1, x2
    2c64:	csinv	w19, w19, wzr, ls  // ls = plast
    2c68:	str	w19, [x24]
    2c6c:	str	x5, [x22]
    2c70:	ldp	x19, x20, [sp, #16]
    2c74:	ldp	x21, x22, [sp, #32]
    2c78:	ldp	x23, x24, [sp, #48]
    2c7c:	ldp	x29, x30, [sp], #64
    2c80:	ret
    2c84:	cmp	x19, x4
    2c88:	b.eq	2cf0 <PyThread_free_lock@plt+0xce0>  // b.none
    2c8c:	cmp	x19, x4, asr #1
    2c90:	lsl	x0, x19, #1
    2c94:	csel	x21, x0, x4, le
    2c98:	mov	x0, x2
    2c9c:	mov	x1, x21
    2ca0:	bl	1cf0 <_PyBytes_Resize@plt>
    2ca4:	tbnz	w0, #31, 2ce8 <PyThread_free_lock@plt+0xcd8>
    2ca8:	ldr	x5, [x23]
    2cac:	sub	x1, x21, x19
    2cb0:	mov	x0, x21
    2cb4:	add	x5, x5, #0x20
    2cb8:	add	x5, x5, x19
    2cbc:	b	2c58 <PyThread_free_lock@plt+0xc48>
    2cc0:	mov	x1, x3
    2cc4:	mov	x0, #0x0                   	// #0
    2cc8:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    2ccc:	str	x0, [x23]
    2cd0:	cbz	x0, 2ce8 <PyThread_free_lock@plt+0xcd8>
    2cd4:	add	x5, x0, #0x20
    2cd8:	mov	x1, x20
    2cdc:	mov	x0, x20
    2ce0:	mov	x19, #0x0                   	// #0
    2ce4:	b	2c58 <PyThread_free_lock@plt+0xc48>
    2ce8:	mov	x0, #0xffffffffffffffff    	// #-1
    2cec:	b	2c70 <PyThread_free_lock@plt+0xc60>
    2cf0:	mov	x0, #0xfffffffffffffffe    	// #-2
    2cf4:	b	2c70 <PyThread_free_lock@plt+0xc60>
    2cf8:	stp	x29, x30, [sp, #-32]!
    2cfc:	mov	x3, x2
    2d00:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
    2d04:	mov	x29, sp
    2d08:	mov	x2, x1
    2d0c:	add	x1, x0, #0x20
    2d10:	add	x0, x0, #0x18
    2d14:	str	x19, [sp, #16]
    2d18:	bl	2c10 <PyThread_free_lock@plt+0xc00>
    2d1c:	mov	x19, x0
    2d20:	cmn	x0, #0x2
    2d24:	b.eq	2d38 <PyThread_free_lock@plt+0xd28>  // b.none
    2d28:	mov	x0, x19
    2d2c:	ldr	x19, [sp, #16]
    2d30:	ldp	x29, x30, [sp], #32
    2d34:	ret
    2d38:	bl	1d90 <PyErr_NoMemory@plt>
    2d3c:	mov	x0, x19
    2d40:	ldr	x19, [sp, #16]
    2d44:	ldp	x29, x30, [sp], #32
    2d48:	ret
    2d4c:	nop
    2d50:	sub	sp, sp, #0x160
    2d54:	stp	x29, x30, [sp, #16]
    2d58:	add	x29, sp, #0x10
    2d5c:	stp	x19, x20, [sp, #32]
    2d60:	mov	x19, x1
    2d64:	mov	x1, x2
    2d68:	stp	x21, x22, [sp, #48]
    2d6c:	cbz	x3, 2f7c <PyThread_free_lock@plt+0xf6c>
    2d70:	ldr	x21, [x3, #16]
    2d74:	mov	x0, #0x4000                	// #16384
    2d78:	str	x0, [sp, #120]
    2d7c:	add	x21, x2, x21
    2d80:	stp	xzr, xzr, [sp, #160]
    2d84:	stp	xzr, xzr, [sp, #176]
    2d88:	stp	xzr, xzr, [sp, #192]
    2d8c:	stp	xzr, xzr, [sp, #208]
    2d90:	stp	xzr, xzr, [sp, #224]
    2d94:	add	x0, sp, #0x88
    2d98:	str	x0, [sp]
    2d9c:	adrp	x4, 18000 <PyInit_zlib@@Base+0x13580>
    2da0:	add	x4, x4, #0x1b0
    2da4:	mov	x0, x19
    2da8:	add	x4, x4, #0x380
    2dac:	mov	w7, #0x0                   	// #0
    2db0:	mov	w6, #0x3                   	// #3
    2db4:	mov	w5, #0x1                   	// #1
    2db8:	mov	x2, #0x0                   	// #0
    2dbc:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    2dc0:	mov	x19, x0
    2dc4:	cbz	x0, 2fb8 <PyThread_free_lock@plt+0xfa8>
    2dc8:	ldr	x0, [x19]
    2dcc:	add	x20, sp, #0xa0
    2dd0:	mov	x1, x20
    2dd4:	mov	w2, #0x0                   	// #0
    2dd8:	bl	1f30 <PyObject_GetBuffer@plt>
    2ddc:	cbnz	w0, 2fb8 <PyThread_free_lock@plt+0xfa8>
    2de0:	mov	x0, x20
    2de4:	mov	w1, #0x43                  	// #67
    2de8:	bl	1d60 <PyBuffer_IsContiguous@plt>
    2dec:	cbz	w0, 3080 <PyThread_free_lock@plt+0x1070>
    2df0:	cmp	x21, #0x1
    2df4:	b.eq	3004 <PyThread_free_lock@plt+0xff4>  // b.none
    2df8:	ldr	x0, [x19, #8]
    2dfc:	cbz	x0, 3068 <PyThread_free_lock@plt+0x1058>
    2e00:	adrp	x1, 17000 <PyInit_zlib@@Base+0x12580>
    2e04:	ldr	x0, [x0, #8]
    2e08:	ldr	x1, [x1, #4008]
    2e0c:	cmp	x0, x1
    2e10:	b.eq	302c <PyThread_free_lock@plt+0x101c>  // b.none
    2e14:	bl	1fd0 <PyType_IsSubtype@plt>
    2e18:	cbnz	w0, 302c <PyThread_free_lock@plt+0x101c>
    2e1c:	ldr	x0, [x19, #8]
    2e20:	bl	1ff0 <_PyLong_AsInt@plt>
    2e24:	mov	w20, w0
    2e28:	cmn	w0, #0x1
    2e2c:	b.eq	2fb0 <PyThread_free_lock@plt+0xfa0>  // b.none
    2e30:	cmp	x21, #0x2
    2e34:	b.eq	2e48 <PyThread_free_lock@plt+0xe38>  // b.none
    2e38:	ldr	x0, [x19, #16]
    2e3c:	add	x1, sp, #0x78
    2e40:	bl	2210 <PyThread_free_lock@plt+0x200>
    2e44:	cbz	w0, 2fb8 <PyThread_free_lock@plt+0xfa8>
    2e48:	ldr	x19, [sp, #120]
    2e4c:	str	xzr, [sp, #128]
    2e50:	cmp	x19, #0x0
    2e54:	b.lt	30d8 <PyThread_free_lock@plt+0x10c8>  // b.tstop
    2e58:	ldr	x6, [sp, #160]
    2e5c:	adrp	x5, 2000 <deflateSetDictionary@plt>
    2e60:	adrp	x4, 2000 <deflateSetDictionary@plt>
    2e64:	add	x5, x5, #0x100
    2e68:	add	x4, x4, #0xf8
    2e6c:	add	x21, sp, #0xf0
    2e70:	csinc	x19, x19, xzr, ne  // ne = any
    2e74:	mov	w1, w20
    2e78:	mov	x0, x21
    2e7c:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    2e80:	mov	w3, #0x70                  	// #112
    2e84:	add	x2, x2, #0xf48
    2e88:	str	x6, [sp, #240]
    2e8c:	str	wzr, [sp, #248]
    2e90:	stp	x5, x4, [sp, #304]
    2e94:	str	xzr, [sp, #320]
    2e98:	ldr	x22, [sp, #176]
    2e9c:	bl	1f80 <inflateInit2_@plt>
    2ea0:	mov	w20, w0
    2ea4:	cmn	w0, #0x4
    2ea8:	b.eq	304c <PyThread_free_lock@plt+0x103c>  // b.none
    2eac:	cbnz	w0, 2fe4 <PyThread_free_lock@plt+0xfd4>
    2eb0:	stp	x23, x24, [sp, #64]
    2eb4:	add	x24, sp, #0x80
    2eb8:	mov	x23, #0xffffffff            	// #4294967295
    2ebc:	stp	x25, x26, [sp, #80]
    2ec0:	mov	w26, #0xffffffff            	// #-1
    2ec4:	str	x27, [sp, #96]
    2ec8:	cmp	x22, x23
    2ecc:	b.ls	3070 <PyThread_free_lock@plt+0x1060>  // b.plast
    2ed0:	sub	x22, x22, x23
    2ed4:	mov	w25, #0x0                   	// #0
    2ed8:	str	w26, [sp, #248]
    2edc:	mov	x2, x19
    2ee0:	mov	x1, x24
    2ee4:	mov	x0, x21
    2ee8:	bl	2cf8 <PyThread_free_lock@plt+0xce8>
    2eec:	mov	x19, x0
    2ef0:	tbnz	x0, #63, 30f8 <PyThread_free_lock@plt+0x10e8>
    2ef4:	bl	1fa0 <PyEval_SaveThread@plt>
    2ef8:	mov	x27, x0
    2efc:	mov	w1, w25
    2f00:	mov	x0, x21
    2f04:	bl	1d00 <inflate@plt>
    2f08:	mov	w20, w0
    2f0c:	mov	x0, x27
    2f10:	bl	1d10 <PyEval_RestoreThread@plt>
    2f14:	cmn	w20, #0x4
    2f18:	b.eq	30a8 <PyThread_free_lock@plt+0x1098>  // b.none
    2f1c:	cmn	w20, #0x3
    2f20:	b.ge	300c <PyThread_free_lock@plt+0xffc>  // b.tcont
    2f24:	cmn	w20, #0x5
    2f28:	b.eq	3014 <PyThread_free_lock@plt+0x1004>  // b.none
    2f2c:	mov	x0, x21
    2f30:	bl	1e90 <inflateEnd@plt>
    2f34:	ldr	x0, [sp, #288]
    2f38:	mov	w1, w20
    2f3c:	adrp	x2, 5000 <PyInit_zlib@@Base+0x580>
    2f40:	add	x2, x2, #0x40
    2f44:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    2f48:	ldp	x23, x24, [sp, #64]
    2f4c:	ldp	x25, x26, [sp, #80]
    2f50:	ldr	x27, [sp, #96]
    2f54:	nop
    2f58:	mov	x19, #0x0                   	// #0
    2f5c:	ldr	x0, [sp, #128]
    2f60:	cbz	x0, 2fbc <PyThread_free_lock@plt+0xfac>
    2f64:	ldr	x1, [x0]
    2f68:	sub	x1, x1, #0x1
    2f6c:	str	x1, [x0]
    2f70:	cbnz	x1, 2fbc <PyThread_free_lock@plt+0xfac>
    2f74:	bl	1d80 <_Py_Dealloc@plt>
    2f78:	b	2fbc <PyThread_free_lock@plt+0xfac>
    2f7c:	mov	x0, #0x4000                	// #16384
    2f80:	str	x0, [sp, #120]
    2f84:	stp	xzr, xzr, [sp, #160]
    2f88:	sub	x0, x2, #0x1
    2f8c:	mov	x21, x2
    2f90:	stp	xzr, xzr, [sp, #176]
    2f94:	cmp	x0, #0x2
    2f98:	stp	xzr, xzr, [sp, #192]
    2f9c:	stp	xzr, xzr, [sp, #208]
    2fa0:	stp	xzr, xzr, [sp, #224]
    2fa4:	b.hi	2d94 <PyThread_free_lock@plt+0xd84>  // b.pmore
    2fa8:	cbnz	x19, 2dc8 <PyThread_free_lock@plt+0xdb8>
    2fac:	b	2d94 <PyThread_free_lock@plt+0xd84>
    2fb0:	bl	1eb0 <PyErr_Occurred@plt>
    2fb4:	cbz	x0, 2e30 <PyThread_free_lock@plt+0xe20>
    2fb8:	mov	x19, #0x0                   	// #0
    2fbc:	ldr	x0, [sp, #168]
    2fc0:	cbz	x0, 2fcc <PyThread_free_lock@plt+0xfbc>
    2fc4:	add	x0, sp, #0xa0
    2fc8:	bl	1d20 <PyBuffer_Release@plt>
    2fcc:	mov	x0, x19
    2fd0:	ldp	x29, x30, [sp, #16]
    2fd4:	ldp	x19, x20, [sp, #32]
    2fd8:	ldp	x21, x22, [sp, #48]
    2fdc:	add	sp, sp, #0x160
    2fe0:	ret
    2fe4:	mov	x0, x21
    2fe8:	bl	1e90 <inflateEnd@plt>
    2fec:	ldr	x0, [sp, #288]
    2ff0:	mov	w1, w20
    2ff4:	adrp	x2, 5000 <PyInit_zlib@@Base+0x580>
    2ff8:	add	x2, x2, #0x18
    2ffc:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    3000:	b	2f58 <PyThread_free_lock@plt+0xf48>
    3004:	mov	w20, #0xf                   	// #15
    3008:	b	2e48 <PyThread_free_lock@plt+0xe38>
    300c:	cmp	w20, #0x1
    3010:	b.hi	2f2c <PyThread_free_lock@plt+0xf1c>  // b.pmore
    3014:	ldr	w0, [sp, #272]
    3018:	cbz	w0, 2edc <PyThread_free_lock@plt+0xecc>
    301c:	cmp	w20, #0x1
    3020:	b.eq	3110 <PyThread_free_lock@plt+0x1100>  // b.none
    3024:	cbnz	x22, 2ec8 <PyThread_free_lock@plt+0xeb8>
    3028:	b	2f2c <PyThread_free_lock@plt+0xf1c>
    302c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    3030:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3034:	mov	x19, #0x0                   	// #0
    3038:	add	x1, x1, #0xef0
    303c:	ldr	x0, [x0, #4040]
    3040:	ldr	x0, [x0]
    3044:	bl	1dc0 <PyErr_SetString@plt>
    3048:	b	2fbc <PyThread_free_lock@plt+0xfac>
    304c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    3050:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3054:	add	x1, x1, #0xff0
    3058:	ldr	x0, [x0, #4024]
    305c:	ldr	x0, [x0]
    3060:	bl	1dc0 <PyErr_SetString@plt>
    3064:	b	2f58 <PyThread_free_lock@plt+0xf48>
    3068:	mov	w20, #0xf                   	// #15
    306c:	b	2e38 <PyThread_free_lock@plt+0xe28>
    3070:	mov	w25, #0x4                   	// #4
    3074:	str	w22, [sp, #248]
    3078:	mov	x22, #0x0                   	// #0
    307c:	b	2edc <PyThread_free_lock@plt+0xecc>
    3080:	ldr	x3, [x19]
    3084:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3088:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    308c:	add	x2, x2, #0xf98
    3090:	add	x1, x1, #0xfb0
    3094:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    3098:	mov	x19, #0x0                   	// #0
    309c:	add	x0, x0, #0xfc0
    30a0:	bl	1e30 <_PyArg_BadArgument@plt>
    30a4:	b	2fbc <PyThread_free_lock@plt+0xfac>
    30a8:	mov	x0, x21
    30ac:	bl	1e90 <inflateEnd@plt>
    30b0:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    30b4:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    30b8:	add	x1, x1, #0xff0
    30bc:	ldr	x0, [x0, #4024]
    30c0:	ldr	x0, [x0]
    30c4:	bl	1dc0 <PyErr_SetString@plt>
    30c8:	ldp	x23, x24, [sp, #64]
    30cc:	ldp	x25, x26, [sp, #80]
    30d0:	ldr	x27, [sp, #96]
    30d4:	b	2f58 <PyThread_free_lock@plt+0xf48>
    30d8:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    30dc:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    30e0:	mov	x19, #0x0                   	// #0
    30e4:	add	x1, x1, #0xfd0
    30e8:	ldr	x0, [x0, #4032]
    30ec:	ldr	x0, [x0]
    30f0:	bl	1dc0 <PyErr_SetString@plt>
    30f4:	b	2fbc <PyThread_free_lock@plt+0xfac>
    30f8:	mov	x0, x21
    30fc:	bl	1e90 <inflateEnd@plt>
    3100:	ldp	x23, x24, [sp, #64]
    3104:	ldp	x25, x26, [sp, #80]
    3108:	ldr	x27, [sp, #96]
    310c:	b	2f58 <PyThread_free_lock@plt+0xf48>
    3110:	mov	x0, x21
    3114:	bl	1e90 <inflateEnd@plt>
    3118:	mov	w1, w0
    311c:	cbnz	w0, 3150 <PyThread_free_lock@plt+0x1140>
    3120:	ldr	x1, [sp, #128]
    3124:	mov	x0, x24
    3128:	ldr	x2, [sp, #264]
    312c:	add	x1, x1, #0x20
    3130:	sub	x1, x2, x1
    3134:	bl	1cf0 <_PyBytes_Resize@plt>
    3138:	tbnz	w0, #31, 3170 <PyThread_free_lock@plt+0x1160>
    313c:	ldp	x23, x24, [sp, #64]
    3140:	ldp	x25, x26, [sp, #80]
    3144:	ldr	x27, [sp, #96]
    3148:	ldr	x19, [sp, #128]
    314c:	b	2fbc <PyThread_free_lock@plt+0xfac>
    3150:	ldr	x0, [sp, #288]
    3154:	adrp	x2, 5000 <PyInit_zlib@@Base+0x580>
    3158:	add	x2, x2, #0x60
    315c:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    3160:	ldp	x23, x24, [sp, #64]
    3164:	ldp	x25, x26, [sp, #80]
    3168:	ldr	x27, [sp, #96]
    316c:	b	2f58 <PyThread_free_lock@plt+0xf48>
    3170:	ldp	x23, x24, [sp, #64]
    3174:	ldp	x25, x26, [sp, #80]
    3178:	ldr	x27, [sp, #96]
    317c:	b	2f58 <PyThread_free_lock@plt+0xf48>
    3180:	stp	x29, x30, [sp, #-144]!
    3184:	sub	x0, x2, #0x1
    3188:	cmp	x0, #0x1
    318c:	mov	x29, sp
    3190:	stp	x19, x20, [sp, #16]
    3194:	mov	x19, x2
    3198:	mov	x20, x1
    319c:	stp	xzr, xzr, [sp, #64]
    31a0:	stp	xzr, xzr, [sp, #80]
    31a4:	stp	xzr, xzr, [sp, #96]
    31a8:	stp	xzr, xzr, [sp, #112]
    31ac:	stp	xzr, xzr, [sp, #128]
    31b0:	b.ls	31d0 <PyThread_free_lock@plt+0x11c0>  // b.plast
    31b4:	adrp	x0, 5000 <PyInit_zlib@@Base+0x580>
    31b8:	mov	x1, x19
    31bc:	add	x0, x0, #0x80
    31c0:	mov	x3, #0x2                   	// #2
    31c4:	mov	x2, #0x1                   	// #1
    31c8:	bl	1e80 <_PyArg_CheckPositional@plt>
    31cc:	cbz	w0, 32dc <PyThread_free_lock@plt+0x12cc>
    31d0:	ldr	x0, [x20]
    31d4:	stp	x21, x22, [sp, #32]
    31d8:	add	x21, sp, #0x40
    31dc:	mov	x1, x21
    31e0:	mov	w2, #0x0                   	// #0
    31e4:	bl	1f30 <PyObject_GetBuffer@plt>
    31e8:	cbnz	w0, 32d8 <PyThread_free_lock@plt+0x12c8>
    31ec:	mov	x0, x21
    31f0:	mov	w1, #0x43                  	// #67
    31f4:	bl	1d60 <PyBuffer_IsContiguous@plt>
    31f8:	cbz	w0, 3348 <PyThread_free_lock@plt+0x1338>
    31fc:	cmp	x19, #0x1
    3200:	b.le	3318 <PyThread_free_lock@plt+0x1308>
    3204:	ldr	x0, [x20, #8]
    3208:	adrp	x1, 17000 <PyInit_zlib@@Base+0x12580>
    320c:	ldr	x1, [x1, #4008]
    3210:	ldr	x0, [x0, #8]
    3214:	cmp	x0, x1
    3218:	b.eq	3324 <PyThread_free_lock@plt+0x1314>  // b.none
    321c:	bl	1fd0 <PyType_IsSubtype@plt>
    3220:	cbnz	w0, 3324 <PyThread_free_lock@plt+0x1314>
    3224:	ldr	x0, [x20, #8]
    3228:	bl	1e60 <PyLong_AsUnsignedLongMask@plt>
    322c:	cmn	w0, #0x1
    3230:	mov	w22, w0
    3234:	b.eq	32cc <PyThread_free_lock@plt+0x12bc>  // b.none
    3238:	and	x19, x0, #0xffffffff
    323c:	ldr	x20, [sp, #80]
    3240:	mov	x0, #0x1400                	// #5120
    3244:	ldr	x21, [sp, #64]
    3248:	cmp	x20, x0
    324c:	b.le	3300 <PyThread_free_lock@plt+0x12f0>
    3250:	str	x23, [sp, #48]
    3254:	bl	1fa0 <PyEval_SaveThread@plt>
    3258:	mov	x1, #0xffffffff            	// #4294967295
    325c:	mov	x23, x0
    3260:	cmp	x20, x1
    3264:	b.le	3298 <PyThread_free_lock@plt+0x1288>
    3268:	mov	x19, x1
    326c:	nop
    3270:	mov	w0, w22
    3274:	mov	x1, x21
    3278:	sub	x20, x20, x19
    327c:	mov	w2, #0xffffffff            	// #-1
    3280:	bl	1d50 <crc32@plt>
    3284:	add	x21, x21, x19
    3288:	cmp	x20, x19
    328c:	mov	w22, w0
    3290:	b.hi	3270 <PyThread_free_lock@plt+0x1260>  // b.pmore
    3294:	and	x19, x0, #0xffffffff
    3298:	mov	w2, w20
    329c:	mov	x1, x21
    32a0:	mov	x0, x19
    32a4:	bl	1d50 <crc32@plt>
    32a8:	mov	x19, x0
    32ac:	mov	x0, x23
    32b0:	bl	1d10 <PyEval_RestoreThread@plt>
    32b4:	ldr	x23, [sp, #48]
    32b8:	mov	w0, w19
    32bc:	bl	1f50 <PyLong_FromUnsignedLong@plt>
    32c0:	mov	x19, x0
    32c4:	ldp	x21, x22, [sp, #32]
    32c8:	b	32e0 <PyThread_free_lock@plt+0x12d0>
    32cc:	mov	x19, #0xffffffff            	// #4294967295
    32d0:	bl	1eb0 <PyErr_Occurred@plt>
    32d4:	cbz	x0, 323c <PyThread_free_lock@plt+0x122c>
    32d8:	ldp	x21, x22, [sp, #32]
    32dc:	mov	x19, #0x0                   	// #0
    32e0:	ldr	x0, [sp, #72]
    32e4:	cbz	x0, 32f0 <PyThread_free_lock@plt+0x12e0>
    32e8:	add	x0, sp, #0x40
    32ec:	bl	1d20 <PyBuffer_Release@plt>
    32f0:	mov	x0, x19
    32f4:	ldp	x19, x20, [sp, #16]
    32f8:	ldp	x29, x30, [sp], #144
    32fc:	ret
    3300:	mov	x0, x19
    3304:	mov	w2, w20
    3308:	mov	x1, x21
    330c:	bl	1d50 <crc32@plt>
    3310:	mov	w19, w0
    3314:	b	32b8 <PyThread_free_lock@plt+0x12a8>
    3318:	mov	x19, #0x0                   	// #0
    331c:	mov	w22, #0x0                   	// #0
    3320:	b	323c <PyThread_free_lock@plt+0x122c>
    3324:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    3328:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    332c:	mov	x19, #0x0                   	// #0
    3330:	add	x1, x1, #0xef0
    3334:	ldr	x0, [x0, #4040]
    3338:	ldr	x0, [x0]
    333c:	bl	1dc0 <PyErr_SetString@plt>
    3340:	ldp	x21, x22, [sp, #32]
    3344:	b	32e0 <PyThread_free_lock@plt+0x12d0>
    3348:	ldr	x3, [x20]
    334c:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3350:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3354:	add	x2, x2, #0xf98
    3358:	add	x1, x1, #0xfb0
    335c:	adrp	x0, 5000 <PyInit_zlib@@Base+0x580>
    3360:	mov	x19, #0x0                   	// #0
    3364:	add	x0, x0, #0x80
    3368:	bl	1e30 <_PyArg_BadArgument@plt>
    336c:	ldp	x21, x22, [sp, #32]
    3370:	b	32e0 <PyThread_free_lock@plt+0x12d0>
    3374:	nop
    3378:	sub	sp, sp, #0xf0
    337c:	mov	x0, x3
    3380:	stp	x29, x30, [sp, #16]
    3384:	add	x29, sp, #0x10
    3388:	stp	x19, x20, [sp, #32]
    338c:	mov	x19, x1
    3390:	mov	x1, x2
    3394:	stp	x21, x22, [sp, #48]
    3398:	stp	x23, x24, [sp, #64]
    339c:	str	x25, [sp, #80]
    33a0:	cbz	x3, 359c <PyThread_free_lock@plt+0x158c>
    33a4:	ldr	x21, [x3, #16]
    33a8:	stp	xzr, xzr, [sp, #160]
    33ac:	add	x21, x2, x21
    33b0:	stp	xzr, xzr, [sp, #176]
    33b4:	stp	xzr, xzr, [sp, #192]
    33b8:	stp	xzr, xzr, [sp, #208]
    33bc:	stp	xzr, xzr, [sp, #224]
    33c0:	add	x2, sp, #0x70
    33c4:	str	x2, [sp]
    33c8:	adrp	x4, 18000 <PyInit_zlib@@Base+0x13580>
    33cc:	add	x4, x4, #0x1b0
    33d0:	mov	x3, x0
    33d4:	add	x4, x4, #0x3c0
    33d8:	mov	x0, x19
    33dc:	mov	w7, #0x0                   	// #0
    33e0:	mov	w6, #0x6                   	// #6
    33e4:	mov	w5, #0x0                   	// #0
    33e8:	mov	x2, #0x0                   	// #0
    33ec:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    33f0:	mov	x19, x0
    33f4:	cbz	x0, 3690 <PyThread_free_lock@plt+0x1680>
    33f8:	cbz	x21, 35c8 <PyThread_free_lock@plt+0x15b8>
    33fc:	ldr	x0, [x19]
    3400:	cbz	x0, 36e4 <PyThread_free_lock@plt+0x16d4>
    3404:	adrp	x1, 17000 <PyInit_zlib@@Base+0x12580>
    3408:	ldr	x0, [x0, #8]
    340c:	ldr	x1, [x1, #4008]
    3410:	cmp	x0, x1
    3414:	b.eq	36c4 <PyThread_free_lock@plt+0x16b4>  // b.none
    3418:	bl	1fd0 <PyType_IsSubtype@plt>
    341c:	mov	w20, w0
    3420:	cbnz	w0, 36c4 <PyThread_free_lock@plt+0x16b4>
    3424:	ldr	x0, [x19]
    3428:	bl	1ff0 <_PyLong_AsInt@plt>
    342c:	mov	w22, w0
    3430:	cmn	w0, #0x1
    3434:	b.eq	379c <PyThread_free_lock@plt+0x178c>  // b.none
    3438:	subs	x21, x21, #0x1
    343c:	b.eq	3708 <PyThread_free_lock@plt+0x16f8>  // b.none
    3440:	ldr	x0, [x19, #8]
    3444:	cbz	x0, 36f0 <PyThread_free_lock@plt+0x16e0>
    3448:	adrp	x1, 17000 <PyInit_zlib@@Base+0x12580>
    344c:	ldr	x0, [x0, #8]
    3450:	ldr	x1, [x1, #4008]
    3454:	cmp	x0, x1
    3458:	b.eq	36c4 <PyThread_free_lock@plt+0x16b4>  // b.none
    345c:	bl	1fd0 <PyType_IsSubtype@plt>
    3460:	mov	w20, w0
    3464:	cbnz	w0, 36c4 <PyThread_free_lock@plt+0x16b4>
    3468:	ldr	x0, [x19, #8]
    346c:	bl	1ff0 <_PyLong_AsInt@plt>
    3470:	mov	w23, w0
    3474:	cmn	w0, #0x1
    3478:	b.eq	3804 <PyThread_free_lock@plt+0x17f4>  // b.none
    347c:	subs	x21, x21, #0x1
    3480:	b.eq	37d0 <PyThread_free_lock@plt+0x17c0>  // b.none
    3484:	ldr	x0, [x19, #16]
    3488:	cbz	x0, 3794 <PyThread_free_lock@plt+0x1784>
    348c:	adrp	x1, 17000 <PyInit_zlib@@Base+0x12580>
    3490:	ldr	x0, [x0, #8]
    3494:	ldr	x1, [x1, #4008]
    3498:	cmp	x0, x1
    349c:	b.eq	36c4 <PyThread_free_lock@plt+0x16b4>  // b.none
    34a0:	bl	1fd0 <PyType_IsSubtype@plt>
    34a4:	mov	w20, w0
    34a8:	cbnz	w0, 36c4 <PyThread_free_lock@plt+0x16b4>
    34ac:	ldr	x0, [x19, #16]
    34b0:	bl	1ff0 <_PyLong_AsInt@plt>
    34b4:	mov	w25, w0
    34b8:	cmn	w0, #0x1
    34bc:	b.eq	3818 <PyThread_free_lock@plt+0x1808>  // b.none
    34c0:	subs	x21, x21, #0x1
    34c4:	b.eq	3810 <PyThread_free_lock@plt+0x1800>  // b.none
    34c8:	ldr	x0, [x19, #24]
    34cc:	cbz	x0, 37fc <PyThread_free_lock@plt+0x17ec>
    34d0:	adrp	x1, 17000 <PyInit_zlib@@Base+0x12580>
    34d4:	ldr	x0, [x0, #8]
    34d8:	ldr	x1, [x1, #4008]
    34dc:	cmp	x0, x1
    34e0:	b.eq	36c4 <PyThread_free_lock@plt+0x16b4>  // b.none
    34e4:	bl	1fd0 <PyType_IsSubtype@plt>
    34e8:	mov	w20, w0
    34ec:	cbnz	w0, 36c4 <PyThread_free_lock@plt+0x16b4>
    34f0:	ldr	x0, [x19, #24]
    34f4:	bl	1ff0 <_PyLong_AsInt@plt>
    34f8:	mov	w24, w0
    34fc:	cmn	w0, #0x1
    3500:	b.eq	37c4 <PyThread_free_lock@plt+0x17b4>  // b.none
    3504:	subs	x21, x21, #0x1
    3508:	b.eq	35dc <PyThread_free_lock@plt+0x15cc>  // b.none
    350c:	ldr	x0, [x19, #32]
    3510:	cbz	x0, 3824 <PyThread_free_lock@plt+0x1814>
    3514:	adrp	x1, 17000 <PyInit_zlib@@Base+0x12580>
    3518:	ldr	x0, [x0, #8]
    351c:	ldr	x1, [x1, #4008]
    3520:	cmp	x0, x1
    3524:	b.eq	36c4 <PyThread_free_lock@plt+0x16b4>  // b.none
    3528:	bl	1fd0 <PyType_IsSubtype@plt>
    352c:	cbnz	w0, 36c4 <PyThread_free_lock@plt+0x16b4>
    3530:	ldr	x0, [x19, #32]
    3534:	bl	1ff0 <_PyLong_AsInt@plt>
    3538:	mov	w20, w0
    353c:	cmn	w0, #0x1
    3540:	b.eq	382c <PyThread_free_lock@plt+0x181c>  // b.none
    3544:	cmp	x21, #0x1
    3548:	b.eq	35dc <PyThread_free_lock@plt+0x15cc>  // b.none
    354c:	ldr	x0, [x19, #40]
    3550:	add	x21, sp, #0xa0
    3554:	mov	x1, x21
    3558:	mov	w2, #0x0                   	// #0
    355c:	bl	1f30 <PyObject_GetBuffer@plt>
    3560:	cbnz	w0, 3690 <PyThread_free_lock@plt+0x1680>
    3564:	mov	x0, x21
    3568:	mov	w1, #0x43                  	// #67
    356c:	bl	1d60 <PyBuffer_IsContiguous@plt>
    3570:	cbnz	w0, 35dc <PyThread_free_lock@plt+0x15cc>
    3574:	ldr	x3, [x19, #40]
    3578:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    357c:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    3580:	add	x2, x2, #0xf98
    3584:	add	x1, x1, #0x88
    3588:	adrp	x0, 5000 <PyInit_zlib@@Base+0x580>
    358c:	mov	x19, #0x0                   	// #0
    3590:	add	x0, x0, #0xa0
    3594:	bl	1e30 <_PyArg_BadArgument@plt>
    3598:	b	3694 <PyThread_free_lock@plt+0x1684>
    359c:	stp	xzr, xzr, [sp, #160]
    35a0:	stp	xzr, xzr, [sp, #176]
    35a4:	stp	xzr, xzr, [sp, #192]
    35a8:	stp	xzr, xzr, [sp, #208]
    35ac:	stp	xzr, xzr, [sp, #224]
    35b0:	tbnz	x2, #63, 3838 <PyThread_free_lock@plt+0x1828>
    35b4:	cmp	x19, #0x0
    35b8:	mov	x21, x2
    35bc:	ccmp	x2, #0x6, #0x0, ne  // ne = any
    35c0:	b.gt	33c0 <PyThread_free_lock@plt+0x13b0>
    35c4:	cbnz	x21, 33fc <PyThread_free_lock@plt+0x13ec>
    35c8:	mov	w24, #0x8                   	// #8
    35cc:	mov	w23, w24
    35d0:	mov	w20, #0x0                   	// #0
    35d4:	mov	w25, #0xf                   	// #15
    35d8:	mov	w22, #0xffffffff            	// #-1
    35dc:	ldr	x0, [sp, #160]
    35e0:	cbz	x0, 35f4 <PyThread_free_lock@plt+0x15e4>
    35e4:	ldr	x1, [sp, #176]
    35e8:	mov	x0, #0xffffffff            	// #4294967295
    35ec:	cmp	x1, x0
    35f0:	b.hi	37dc <PyThread_free_lock@plt+0x17cc>  // b.pmore
    35f4:	adrp	x1, 18000 <PyInit_zlib@@Base+0x13580>
    35f8:	add	x1, x1, #0x1b0
    35fc:	add	x0, x1, #0x1a0
    3600:	bl	2130 <PyThread_free_lock@plt+0x120>
    3604:	mov	x19, x0
    3608:	cbz	x0, 3690 <PyThread_free_lock@plt+0x1680>
    360c:	adrp	x1, 2000 <deflateSetDictionary@plt>
    3610:	adrp	x0, 2000 <deflateSetDictionary@plt>
    3614:	add	x1, x1, #0x100
    3618:	add	x0, x0, #0xf8
    361c:	str	xzr, [x19, #16]
    3620:	add	x21, x19, #0x10
    3624:	str	wzr, [x19, #24]
    3628:	mov	w5, w20
    362c:	stp	x1, x0, [x19, #80]
    3630:	mov	w1, w22
    3634:	mov	w4, w24
    3638:	str	xzr, [x19, #96]
    363c:	mov	w3, w25
    3640:	mov	w2, w23
    3644:	mov	x0, x21
    3648:	adrp	x6, 4000 <PyThread_free_lock@plt+0x1ff0>
    364c:	mov	w7, #0x70                  	// #112
    3650:	add	x6, x6, #0xf48
    3654:	bl	1e00 <deflateInit2_@plt>
    3658:	mov	w1, w0
    365c:	cmn	w0, #0x2
    3660:	b.eq	3718 <PyThread_free_lock@plt+0x1708>  // b.none
    3664:	cbz	w0, 3750 <PyThread_free_lock@plt+0x1740>
    3668:	cmn	w0, #0x4
    366c:	b.eq	3734 <PyThread_free_lock@plt+0x1724>  // b.none
    3670:	ldr	x0, [x19, #64]
    3674:	adrp	x2, 5000 <PyInit_zlib@@Base+0x580>
    3678:	add	x2, x2, #0xe0
    367c:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    3680:	ldr	x0, [x19]
    3684:	sub	x0, x0, #0x1
    3688:	str	x0, [x19]
    368c:	cbz	x0, 36f8 <PyThread_free_lock@plt+0x16e8>
    3690:	mov	x19, #0x0                   	// #0
    3694:	ldr	x0, [sp, #168]
    3698:	cbz	x0, 36a4 <PyThread_free_lock@plt+0x1694>
    369c:	add	x0, sp, #0xa0
    36a0:	bl	1d20 <PyBuffer_Release@plt>
    36a4:	mov	x0, x19
    36a8:	ldp	x29, x30, [sp, #16]
    36ac:	ldp	x19, x20, [sp, #32]
    36b0:	ldp	x21, x22, [sp, #48]
    36b4:	ldp	x23, x24, [sp, #64]
    36b8:	ldr	x25, [sp, #80]
    36bc:	add	sp, sp, #0xf0
    36c0:	ret
    36c4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    36c8:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    36cc:	mov	x19, #0x0                   	// #0
    36d0:	add	x1, x1, #0xef0
    36d4:	ldr	x0, [x0, #4040]
    36d8:	ldr	x0, [x0]
    36dc:	bl	1dc0 <PyErr_SetString@plt>
    36e0:	b	3694 <PyThread_free_lock@plt+0x1684>
    36e4:	ldr	x0, [x19, #8]
    36e8:	mov	w22, #0xffffffff            	// #-1
    36ec:	cbnz	x0, 3448 <PyThread_free_lock@plt+0x1438>
    36f0:	mov	w23, #0x8                   	// #8
    36f4:	b	3484 <PyThread_free_lock@plt+0x1474>
    36f8:	mov	x0, x19
    36fc:	mov	x19, #0x0                   	// #0
    3700:	bl	1d80 <_Py_Dealloc@plt>
    3704:	b	3694 <PyThread_free_lock@plt+0x1684>
    3708:	mov	w24, #0x8                   	// #8
    370c:	mov	w25, #0xf                   	// #15
    3710:	mov	w23, w24
    3714:	b	35dc <PyThread_free_lock@plt+0x15cc>
    3718:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    371c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3720:	add	x1, x1, #0xf50
    3724:	ldr	x0, [x0, #4032]
    3728:	ldr	x0, [x0]
    372c:	bl	1dc0 <PyErr_SetString@plt>
    3730:	b	3680 <PyThread_free_lock@plt+0x1670>
    3734:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    3738:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    373c:	add	x1, x1, #0xe98
    3740:	ldr	x0, [x0, #4024]
    3744:	ldr	x0, [x0]
    3748:	bl	1dc0 <PyErr_SetString@plt>
    374c:	b	3680 <PyThread_free_lock@plt+0x1670>
    3750:	ldr	x1, [sp, #160]
    3754:	mov	w0, #0x1                   	// #1
    3758:	str	w0, [x19, #148]
    375c:	cbz	x1, 3694 <PyThread_free_lock@plt+0x1684>
    3760:	ldr	w2, [sp, #176]
    3764:	mov	x0, x21
    3768:	bl	2000 <deflateSetDictionary@plt>
    376c:	cmn	w0, #0x2
    3770:	b.eq	37a8 <PyThread_free_lock@plt+0x1798>  // b.none
    3774:	cbz	w0, 3694 <PyThread_free_lock@plt+0x1684>
    3778:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    377c:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    3780:	add	x1, x1, #0xc8
    3784:	ldr	x0, [x0, #4032]
    3788:	ldr	x0, [x0]
    378c:	bl	1dc0 <PyErr_SetString@plt>
    3790:	b	3680 <PyThread_free_lock@plt+0x1670>
    3794:	mov	w25, #0xf                   	// #15
    3798:	b	34c8 <PyThread_free_lock@plt+0x14b8>
    379c:	bl	1eb0 <PyErr_Occurred@plt>
    37a0:	cbz	x0, 3438 <PyThread_free_lock@plt+0x1428>
    37a4:	b	3690 <PyThread_free_lock@plt+0x1680>
    37a8:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    37ac:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    37b0:	add	x1, x1, #0xb0
    37b4:	ldr	x0, [x0, #4032]
    37b8:	ldr	x0, [x0]
    37bc:	bl	1dc0 <PyErr_SetString@plt>
    37c0:	b	3680 <PyThread_free_lock@plt+0x1670>
    37c4:	bl	1eb0 <PyErr_Occurred@plt>
    37c8:	cbz	x0, 3504 <PyThread_free_lock@plt+0x14f4>
    37cc:	b	3690 <PyThread_free_lock@plt+0x1680>
    37d0:	mov	w24, #0x8                   	// #8
    37d4:	mov	w25, #0xf                   	// #15
    37d8:	b	35dc <PyThread_free_lock@plt+0x15cc>
    37dc:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    37e0:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    37e4:	mov	x19, #0x0                   	// #0
    37e8:	add	x1, x1, #0xdd8
    37ec:	ldr	x0, [x0, #4056]
    37f0:	ldr	x0, [x0]
    37f4:	bl	1dc0 <PyErr_SetString@plt>
    37f8:	b	3694 <PyThread_free_lock@plt+0x1684>
    37fc:	mov	w24, #0x8                   	// #8
    3800:	b	350c <PyThread_free_lock@plt+0x14fc>
    3804:	bl	1eb0 <PyErr_Occurred@plt>
    3808:	cbz	x0, 347c <PyThread_free_lock@plt+0x146c>
    380c:	b	3690 <PyThread_free_lock@plt+0x1680>
    3810:	mov	w24, #0x8                   	// #8
    3814:	b	35dc <PyThread_free_lock@plt+0x15cc>
    3818:	bl	1eb0 <PyErr_Occurred@plt>
    381c:	cbz	x0, 34c0 <PyThread_free_lock@plt+0x14b0>
    3820:	b	3690 <PyThread_free_lock@plt+0x1680>
    3824:	mov	w20, #0x0                   	// #0
    3828:	b	354c <PyThread_free_lock@plt+0x153c>
    382c:	bl	1eb0 <PyErr_Occurred@plt>
    3830:	cbz	x0, 3544 <PyThread_free_lock@plt+0x1534>
    3834:	b	3690 <PyThread_free_lock@plt+0x1680>
    3838:	add	x0, sp, #0x70
    383c:	str	x0, [sp]
    3840:	adrp	x4, 18000 <PyInit_zlib@@Base+0x13580>
    3844:	add	x4, x4, #0x1b0
    3848:	mov	x0, x19
    384c:	add	x4, x4, #0x3c0
    3850:	mov	w7, #0x0                   	// #0
    3854:	mov	w6, #0x6                   	// #6
    3858:	mov	w5, #0x0                   	// #0
    385c:	mov	x2, #0x0                   	// #0
    3860:	str	x1, [sp, #104]
    3864:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    3868:	mov	x19, x0
    386c:	cbz	x0, 3690 <PyThread_free_lock@plt+0x1680>
    3870:	ldr	x1, [sp, #104]
    3874:	mov	x21, x1
    3878:	b	33fc <PyThread_free_lock@plt+0x13ec>
    387c:	nop
    3880:	sub	sp, sp, #0x150
    3884:	stp	x29, x30, [sp, #16]
    3888:	add	x29, sp, #0x10
    388c:	stp	x19, x20, [sp, #32]
    3890:	mov	x19, x1
    3894:	mov	x1, x2
    3898:	cbz	x3, 3a14 <PyThread_free_lock@plt+0x1a04>
    389c:	ldr	x20, [x3, #16]
    38a0:	stp	xzr, xzr, [sp, #144]
    38a4:	add	x20, x2, x20
    38a8:	stp	xzr, xzr, [sp, #160]
    38ac:	stp	xzr, xzr, [sp, #176]
    38b0:	stp	xzr, xzr, [sp, #192]
    38b4:	stp	xzr, xzr, [sp, #208]
    38b8:	add	x0, sp, #0x80
    38bc:	str	x0, [sp]
    38c0:	adrp	x4, 18000 <PyInit_zlib@@Base+0x13580>
    38c4:	add	x4, x4, #0x1b0
    38c8:	mov	x0, x19
    38cc:	add	x4, x4, #0x400
    38d0:	mov	w7, #0x0                   	// #0
    38d4:	mov	w6, #0x2                   	// #2
    38d8:	mov	w5, #0x1                   	// #1
    38dc:	mov	x2, #0x0                   	// #0
    38e0:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    38e4:	mov	x19, x0
    38e8:	cbz	x0, 3a64 <PyThread_free_lock@plt+0x1a54>
    38ec:	ldr	x0, [x19]
    38f0:	stp	x21, x22, [sp, #48]
    38f4:	add	x21, sp, #0x90
    38f8:	mov	x1, x21
    38fc:	mov	w2, #0x0                   	// #0
    3900:	bl	1f30 <PyObject_GetBuffer@plt>
    3904:	cbnz	w0, 3a60 <PyThread_free_lock@plt+0x1a50>
    3908:	mov	x0, x21
    390c:	mov	w1, #0x43                  	// #67
    3910:	bl	1d60 <PyBuffer_IsContiguous@plt>
    3914:	cbz	w0, 3b7c <PyThread_free_lock@plt+0x1b6c>
    3918:	cmp	x20, #0x1
    391c:	b.eq	3a74 <PyThread_free_lock@plt+0x1a64>  // b.none
    3920:	ldr	x0, [x19, #8]
    3924:	adrp	x1, 17000 <PyInit_zlib@@Base+0x12580>
    3928:	ldr	x1, [x1, #4008]
    392c:	ldr	x0, [x0, #8]
    3930:	cmp	x0, x1
    3934:	b.eq	3a88 <PyThread_free_lock@plt+0x1a78>  // b.none
    3938:	bl	1fd0 <PyType_IsSubtype@plt>
    393c:	cbnz	w0, 3a88 <PyThread_free_lock@plt+0x1a78>
    3940:	ldr	x0, [x19, #8]
    3944:	bl	1ff0 <_PyLong_AsInt@plt>
    3948:	mov	w1, w0
    394c:	cmn	w0, #0x1
    3950:	b.eq	3a6c <PyThread_free_lock@plt+0x1a5c>  // b.none
    3954:	stp	x23, x24, [sp, #64]
    3958:	adrp	x5, 2000 <deflateSetDictionary@plt>
    395c:	ldr	x6, [sp, #144]
    3960:	add	x5, x5, #0x100
    3964:	adrp	x4, 2000 <deflateSetDictionary@plt>
    3968:	add	x4, x4, #0xf8
    396c:	add	x21, sp, #0xe0
    3970:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3974:	mov	x0, x21
    3978:	add	x2, x2, #0xf48
    397c:	mov	w3, #0x70                  	// #112
    3980:	str	xzr, [sp, #120]
    3984:	str	x6, [sp, #224]
    3988:	stp	x5, x4, [sp, #288]
    398c:	str	xzr, [sp, #304]
    3990:	ldr	x24, [sp, #160]
    3994:	bl	1e50 <deflateInit_@plt>
    3998:	mov	w19, w0
    399c:	cmn	w0, #0x2
    39a0:	b.eq	3b54 <PyThread_free_lock@plt+0x1b44>  // b.none
    39a4:	cbz	w0, 3aac <PyThread_free_lock@plt+0x1a9c>
    39a8:	cmn	w0, #0x4
    39ac:	b.eq	3b38 <PyThread_free_lock@plt+0x1b28>  // b.none
    39b0:	mov	x0, x21
    39b4:	bl	1f10 <deflateEnd@plt>
    39b8:	ldr	x0, [sp, #272]
    39bc:	adrp	x2, 5000 <PyInit_zlib@@Base+0x580>
    39c0:	mov	w1, w19
    39c4:	add	x2, x2, #0x158
    39c8:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    39cc:	ldr	x0, [sp, #120]
    39d0:	mov	x19, #0x0                   	// #0
    39d4:	cbz	x0, 39e8 <PyThread_free_lock@plt+0x19d8>
    39d8:	ldr	x1, [x0]
    39dc:	sub	x1, x1, #0x1
    39e0:	str	x1, [x0]
    39e4:	cbz	x1, 3a80 <PyThread_free_lock@plt+0x1a70>
    39e8:	ldp	x21, x22, [sp, #48]
    39ec:	ldp	x23, x24, [sp, #64]
    39f0:	ldr	x0, [sp, #152]
    39f4:	cbz	x0, 3a00 <PyThread_free_lock@plt+0x19f0>
    39f8:	add	x0, sp, #0x90
    39fc:	bl	1d20 <PyBuffer_Release@plt>
    3a00:	mov	x0, x19
    3a04:	ldp	x29, x30, [sp, #16]
    3a08:	ldp	x19, x20, [sp, #32]
    3a0c:	add	sp, sp, #0x150
    3a10:	ret
    3a14:	stp	xzr, xzr, [sp, #144]
    3a18:	sub	x0, x2, #0x1
    3a1c:	cmp	x0, #0x1
    3a20:	stp	xzr, xzr, [sp, #160]
    3a24:	stp	xzr, xzr, [sp, #176]
    3a28:	stp	xzr, xzr, [sp, #192]
    3a2c:	stp	xzr, xzr, [sp, #208]
    3a30:	b.hi	3a38 <PyThread_free_lock@plt+0x1a28>  // b.pmore
    3a34:	cbnz	x19, 3a40 <PyThread_free_lock@plt+0x1a30>
    3a38:	mov	x20, x1
    3a3c:	b	38b8 <PyThread_free_lock@plt+0x18a8>
    3a40:	ldr	x0, [x19]
    3a44:	stp	x21, x22, [sp, #48]
    3a48:	add	x21, sp, #0x90
    3a4c:	mov	x20, x2
    3a50:	mov	x1, x21
    3a54:	mov	w2, #0x0                   	// #0
    3a58:	bl	1f30 <PyObject_GetBuffer@plt>
    3a5c:	cbz	w0, 3908 <PyThread_free_lock@plt+0x18f8>
    3a60:	ldp	x21, x22, [sp, #48]
    3a64:	mov	x19, #0x0                   	// #0
    3a68:	b	39f0 <PyThread_free_lock@plt+0x19e0>
    3a6c:	bl	1eb0 <PyErr_Occurred@plt>
    3a70:	cbnz	x0, 3a60 <PyThread_free_lock@plt+0x1a50>
    3a74:	mov	w1, #0xffffffff            	// #-1
    3a78:	stp	x23, x24, [sp, #64]
    3a7c:	b	3958 <PyThread_free_lock@plt+0x1948>
    3a80:	bl	1d80 <_Py_Dealloc@plt>
    3a84:	b	39e8 <PyThread_free_lock@plt+0x19d8>
    3a88:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    3a8c:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3a90:	mov	x19, #0x0                   	// #0
    3a94:	add	x1, x1, #0xef0
    3a98:	ldr	x0, [x0, #4040]
    3a9c:	ldr	x0, [x0]
    3aa0:	bl	1dc0 <PyErr_SetString@plt>
    3aa4:	ldp	x21, x22, [sp, #48]
    3aa8:	b	39f0 <PyThread_free_lock@plt+0x19e0>
    3aac:	add	x23, sp, #0x78
    3ab0:	mov	x19, #0x4000                	// #16384
    3ab4:	stp	x25, x26, [sp, #80]
    3ab8:	mov	x25, #0xffffffff            	// #4294967295
    3abc:	mov	w26, #0xffffffff            	// #-1
    3ac0:	str	x27, [sp, #96]
    3ac4:	cmp	x24, x25
    3ac8:	b.ls	3b6c <PyThread_free_lock@plt+0x1b5c>  // b.plast
    3acc:	sub	x24, x24, x25
    3ad0:	mov	w22, #0x0                   	// #0
    3ad4:	str	w26, [sp, #232]
    3ad8:	b	3b0c <PyThread_free_lock@plt+0x1afc>
    3adc:	bl	1fa0 <PyEval_SaveThread@plt>
    3ae0:	mov	x27, x0
    3ae4:	mov	w1, w22
    3ae8:	mov	x0, x21
    3aec:	bl	1dd0 <deflate@plt>
    3af0:	mov	w20, w0
    3af4:	mov	x0, x27
    3af8:	bl	1d10 <PyEval_RestoreThread@plt>
    3afc:	cmn	w20, #0x2
    3b00:	b.eq	3ba8 <PyThread_free_lock@plt+0x1b98>  // b.none
    3b04:	ldr	w0, [sp, #256]
    3b08:	cbnz	w0, 3bd0 <PyThread_free_lock@plt+0x1bc0>
    3b0c:	mov	x2, x19
    3b10:	mov	x1, x23
    3b14:	mov	x0, x21
    3b18:	bl	2cf8 <PyThread_free_lock@plt+0xce8>
    3b1c:	mov	x19, x0
    3b20:	tbz	x0, #63, 3adc <PyThread_free_lock@plt+0x1acc>
    3b24:	mov	x0, x21
    3b28:	bl	1f10 <deflateEnd@plt>
    3b2c:	ldp	x25, x26, [sp, #80]
    3b30:	ldr	x27, [sp, #96]
    3b34:	b	39cc <PyThread_free_lock@plt+0x19bc>
    3b38:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    3b3c:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    3b40:	add	x1, x1, #0x118
    3b44:	ldr	x0, [x0, #4024]
    3b48:	ldr	x0, [x0]
    3b4c:	bl	1dc0 <PyErr_SetString@plt>
    3b50:	b	39cc <PyThread_free_lock@plt+0x19bc>
    3b54:	adrp	x0, 18000 <PyInit_zlib@@Base+0x13580>
    3b58:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    3b5c:	add	x1, x1, #0x140
    3b60:	ldr	x0, [x0, #2464]
    3b64:	bl	1dc0 <PyErr_SetString@plt>
    3b68:	b	39cc <PyThread_free_lock@plt+0x19bc>
    3b6c:	mov	w22, #0x4                   	// #4
    3b70:	str	w24, [sp, #232]
    3b74:	mov	x24, #0x0                   	// #0
    3b78:	b	3b0c <PyThread_free_lock@plt+0x1afc>
    3b7c:	ldr	x3, [x19]
    3b80:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3b84:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3b88:	add	x2, x2, #0xf98
    3b8c:	add	x1, x1, #0xfb0
    3b90:	adrp	x0, 5000 <PyInit_zlib@@Base+0x580>
    3b94:	mov	x19, #0x0                   	// #0
    3b98:	add	x0, x0, #0x108
    3b9c:	bl	1e30 <_PyArg_BadArgument@plt>
    3ba0:	ldp	x21, x22, [sp, #48]
    3ba4:	b	39f0 <PyThread_free_lock@plt+0x19e0>
    3ba8:	mov	x0, x21
    3bac:	bl	1f10 <deflateEnd@plt>
    3bb0:	ldr	x0, [sp, #272]
    3bb4:	mov	w1, w20
    3bb8:	adrp	x2, 5000 <PyInit_zlib@@Base+0x580>
    3bbc:	add	x2, x2, #0x158
    3bc0:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    3bc4:	ldp	x25, x26, [sp, #80]
    3bc8:	ldr	x27, [sp, #96]
    3bcc:	b	39cc <PyThread_free_lock@plt+0x19bc>
    3bd0:	cbz	w22, 3ac4 <PyThread_free_lock@plt+0x1ab4>
    3bd4:	mov	x0, x21
    3bd8:	bl	1f10 <deflateEnd@plt>
    3bdc:	mov	w1, w0
    3be0:	cbnz	w0, 3c18 <PyThread_free_lock@plt+0x1c08>
    3be4:	ldr	x1, [sp, #120]
    3be8:	mov	x0, x23
    3bec:	ldr	x2, [sp, #248]
    3bf0:	add	x1, x1, #0x20
    3bf4:	sub	x1, x2, x1
    3bf8:	bl	1cf0 <_PyBytes_Resize@plt>
    3bfc:	tbnz	w0, #31, 3c34 <PyThread_free_lock@plt+0x1c24>
    3c00:	ldp	x21, x22, [sp, #48]
    3c04:	ldp	x23, x24, [sp, #64]
    3c08:	ldp	x25, x26, [sp, #80]
    3c0c:	ldr	x27, [sp, #96]
    3c10:	ldr	x19, [sp, #120]
    3c14:	b	39f0 <PyThread_free_lock@plt+0x19e0>
    3c18:	ldr	x0, [sp, #272]
    3c1c:	adrp	x2, 5000 <PyInit_zlib@@Base+0x580>
    3c20:	add	x2, x2, #0x170
    3c24:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    3c28:	ldp	x25, x26, [sp, #80]
    3c2c:	ldr	x27, [sp, #96]
    3c30:	b	39cc <PyThread_free_lock@plt+0x19bc>
    3c34:	ldp	x25, x26, [sp, #80]
    3c38:	ldr	x27, [sp, #96]
    3c3c:	b	39cc <PyThread_free_lock@plt+0x19bc>
    3c40:	stp	x29, x30, [sp, #-144]!
    3c44:	sub	x0, x2, #0x1
    3c48:	cmp	x0, #0x1
    3c4c:	mov	x29, sp
    3c50:	stp	x19, x20, [sp, #16]
    3c54:	mov	x19, x2
    3c58:	mov	x20, x1
    3c5c:	stp	xzr, xzr, [sp, #64]
    3c60:	stp	xzr, xzr, [sp, #80]
    3c64:	stp	xzr, xzr, [sp, #96]
    3c68:	stp	xzr, xzr, [sp, #112]
    3c6c:	stp	xzr, xzr, [sp, #128]
    3c70:	b.ls	3c90 <PyThread_free_lock@plt+0x1c80>  // b.plast
    3c74:	adrp	x0, 5000 <PyInit_zlib@@Base+0x580>
    3c78:	mov	x1, x19
    3c7c:	add	x0, x0, #0x190
    3c80:	mov	x3, #0x2                   	// #2
    3c84:	mov	x2, #0x1                   	// #1
    3c88:	bl	1e80 <_PyArg_CheckPositional@plt>
    3c8c:	cbz	w0, 3d9c <PyThread_free_lock@plt+0x1d8c>
    3c90:	ldr	x0, [x20]
    3c94:	stp	x21, x22, [sp, #32]
    3c98:	add	x21, sp, #0x40
    3c9c:	mov	x1, x21
    3ca0:	mov	w2, #0x0                   	// #0
    3ca4:	bl	1f30 <PyObject_GetBuffer@plt>
    3ca8:	cbnz	w0, 3d98 <PyThread_free_lock@plt+0x1d88>
    3cac:	mov	x0, x21
    3cb0:	mov	w1, #0x43                  	// #67
    3cb4:	bl	1d60 <PyBuffer_IsContiguous@plt>
    3cb8:	cbz	w0, 3e08 <PyThread_free_lock@plt+0x1df8>
    3cbc:	cmp	x19, #0x1
    3cc0:	b.le	3dd8 <PyThread_free_lock@plt+0x1dc8>
    3cc4:	ldr	x0, [x20, #8]
    3cc8:	adrp	x1, 17000 <PyInit_zlib@@Base+0x12580>
    3ccc:	ldr	x1, [x1, #4008]
    3cd0:	ldr	x0, [x0, #8]
    3cd4:	cmp	x0, x1
    3cd8:	b.eq	3de4 <PyThread_free_lock@plt+0x1dd4>  // b.none
    3cdc:	bl	1fd0 <PyType_IsSubtype@plt>
    3ce0:	cbnz	w0, 3de4 <PyThread_free_lock@plt+0x1dd4>
    3ce4:	ldr	x0, [x20, #8]
    3ce8:	bl	1e60 <PyLong_AsUnsignedLongMask@plt>
    3cec:	cmn	w0, #0x1
    3cf0:	mov	w22, w0
    3cf4:	b.eq	3d8c <PyThread_free_lock@plt+0x1d7c>  // b.none
    3cf8:	and	x19, x0, #0xffffffff
    3cfc:	ldr	x20, [sp, #80]
    3d00:	mov	x0, #0x1400                	// #5120
    3d04:	ldr	x21, [sp, #64]
    3d08:	cmp	x20, x0
    3d0c:	b.le	3dc0 <PyThread_free_lock@plt+0x1db0>
    3d10:	str	x23, [sp, #48]
    3d14:	bl	1fa0 <PyEval_SaveThread@plt>
    3d18:	mov	x1, #0xffffffff            	// #4294967295
    3d1c:	mov	x23, x0
    3d20:	cmp	x20, x1
    3d24:	b.le	3d58 <PyThread_free_lock@plt+0x1d48>
    3d28:	mov	x19, x1
    3d2c:	nop
    3d30:	mov	w0, w22
    3d34:	mov	x1, x21
    3d38:	sub	x20, x20, x19
    3d3c:	mov	w2, #0xffffffff            	// #-1
    3d40:	bl	1ee0 <adler32@plt>
    3d44:	add	x21, x21, x19
    3d48:	cmp	x20, x19
    3d4c:	mov	w22, w0
    3d50:	b.hi	3d30 <PyThread_free_lock@plt+0x1d20>  // b.pmore
    3d54:	and	x19, x0, #0xffffffff
    3d58:	mov	w2, w20
    3d5c:	mov	x1, x21
    3d60:	mov	x0, x19
    3d64:	bl	1ee0 <adler32@plt>
    3d68:	mov	x19, x0
    3d6c:	mov	x0, x23
    3d70:	bl	1d10 <PyEval_RestoreThread@plt>
    3d74:	ldr	x23, [sp, #48]
    3d78:	mov	w0, w19
    3d7c:	bl	1f50 <PyLong_FromUnsignedLong@plt>
    3d80:	mov	x19, x0
    3d84:	ldp	x21, x22, [sp, #32]
    3d88:	b	3da0 <PyThread_free_lock@plt+0x1d90>
    3d8c:	mov	x19, #0xffffffff            	// #4294967295
    3d90:	bl	1eb0 <PyErr_Occurred@plt>
    3d94:	cbz	x0, 3cfc <PyThread_free_lock@plt+0x1cec>
    3d98:	ldp	x21, x22, [sp, #32]
    3d9c:	mov	x19, #0x0                   	// #0
    3da0:	ldr	x0, [sp, #72]
    3da4:	cbz	x0, 3db0 <PyThread_free_lock@plt+0x1da0>
    3da8:	add	x0, sp, #0x40
    3dac:	bl	1d20 <PyBuffer_Release@plt>
    3db0:	mov	x0, x19
    3db4:	ldp	x19, x20, [sp, #16]
    3db8:	ldp	x29, x30, [sp], #144
    3dbc:	ret
    3dc0:	mov	x0, x19
    3dc4:	mov	w2, w20
    3dc8:	mov	x1, x21
    3dcc:	bl	1ee0 <adler32@plt>
    3dd0:	mov	w19, w0
    3dd4:	b	3d78 <PyThread_free_lock@plt+0x1d68>
    3dd8:	mov	x19, #0x1                   	// #1
    3ddc:	mov	w22, w19
    3de0:	b	3cfc <PyThread_free_lock@plt+0x1cec>
    3de4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    3de8:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3dec:	mov	x19, #0x0                   	// #0
    3df0:	add	x1, x1, #0xef0
    3df4:	ldr	x0, [x0, #4040]
    3df8:	ldr	x0, [x0]
    3dfc:	bl	1dc0 <PyErr_SetString@plt>
    3e00:	ldp	x21, x22, [sp, #32]
    3e04:	b	3da0 <PyThread_free_lock@plt+0x1d90>
    3e08:	ldr	x3, [x20]
    3e0c:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    3e10:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3e14:	add	x2, x2, #0xf98
    3e18:	add	x1, x1, #0xfb0
    3e1c:	adrp	x0, 5000 <PyInit_zlib@@Base+0x580>
    3e20:	mov	x19, #0x0                   	// #0
    3e24:	add	x0, x0, #0x190
    3e28:	bl	1e30 <_PyArg_BadArgument@plt>
    3e2c:	ldp	x21, x22, [sp, #32]
    3e30:	b	3da0 <PyThread_free_lock@plt+0x1d90>
    3e34:	nop
    3e38:	stp	x29, x30, [sp, #-96]!
    3e3c:	cmp	x2, #0x1
    3e40:	mov	x29, sp
    3e44:	stp	x19, x20, [sp, #16]
    3e48:	mov	x20, x2
    3e4c:	mov	x19, x0
    3e50:	stp	x21, x22, [sp, #32]
    3e54:	mov	x21, x1
    3e58:	b.hi	3ef4 <PyThread_free_lock@plt+0x1ee4>  // b.pmore
    3e5c:	stp	x23, x24, [sp, #48]
    3e60:	cmp	x20, #0x0
    3e64:	b.le	3f24 <PyThread_free_lock@plt+0x1f14>
    3e68:	ldr	x0, [x21]
    3e6c:	adrp	x1, 17000 <PyInit_zlib@@Base+0x12580>
    3e70:	ldr	x1, [x1, #4008]
    3e74:	ldr	x0, [x0, #8]
    3e78:	cmp	x0, x1
    3e7c:	b.eq	3ec4 <PyThread_free_lock@plt+0x1eb4>  // b.none
    3e80:	bl	1fd0 <PyType_IsSubtype@plt>
    3e84:	cbnz	w0, 3ec4 <PyThread_free_lock@plt+0x1eb4>
    3e88:	ldr	x0, [x21]
    3e8c:	bl	1ff0 <_PyLong_AsInt@plt>
    3e90:	mov	w23, w0
    3e94:	cmn	w0, #0x1
    3e98:	b.eq	4040 <PyThread_free_lock@plt+0x2030>  // b.none
    3e9c:	str	xzr, [sp, #88]
    3ea0:	cbnz	w0, 4080 <PyThread_free_lock@plt+0x2070>
    3ea4:	mov	x1, #0x0                   	// #0
    3ea8:	mov	x0, #0x0                   	// #0
    3eac:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    3eb0:	ldp	x19, x20, [sp, #16]
    3eb4:	ldp	x21, x22, [sp, #32]
    3eb8:	ldp	x23, x24, [sp, #48]
    3ebc:	ldp	x29, x30, [sp], #96
    3ec0:	ret
    3ec4:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    3ec8:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    3ecc:	add	x1, x1, #0xef0
    3ed0:	ldr	x0, [x0, #4040]
    3ed4:	ldr	x0, [x0]
    3ed8:	bl	1dc0 <PyErr_SetString@plt>
    3edc:	mov	x0, #0x0                   	// #0
    3ee0:	ldp	x19, x20, [sp, #16]
    3ee4:	ldp	x21, x22, [sp, #32]
    3ee8:	ldp	x23, x24, [sp, #48]
    3eec:	ldp	x29, x30, [sp], #96
    3ef0:	ret
    3ef4:	adrp	x0, 5000 <PyInit_zlib@@Base+0x580>
    3ef8:	mov	x1, x20
    3efc:	add	x0, x0, #0x198
    3f00:	mov	x3, #0x1                   	// #1
    3f04:	mov	x2, #0x0                   	// #0
    3f08:	bl	1e80 <_PyArg_CheckPositional@plt>
    3f0c:	cbnz	w0, 3e5c <PyThread_free_lock@plt+0x1e4c>
    3f10:	mov	x0, #0x0                   	// #0
    3f14:	ldp	x19, x20, [sp, #16]
    3f18:	ldp	x21, x22, [sp, #32]
    3f1c:	ldp	x29, x30, [sp], #96
    3f20:	ret
    3f24:	mov	w23, #0x4                   	// #4
    3f28:	str	x25, [sp, #64]
    3f2c:	str	xzr, [sp, #88]
    3f30:	bl	1fa0 <PyEval_SaveThread@plt>
    3f34:	mov	x21, x0
    3f38:	ldr	x0, [x19, #160]
    3f3c:	mov	w1, #0x1                   	// #1
    3f40:	add	x24, x19, #0x10
    3f44:	add	x25, sp, #0x58
    3f48:	mov	x20, #0x4000                	// #16384
    3f4c:	bl	1da0 <PyThread_acquire_lock@plt>
    3f50:	mov	x0, x21
    3f54:	bl	1d10 <PyEval_RestoreThread@plt>
    3f58:	str	wzr, [x19, #24]
    3f5c:	b	3f90 <PyThread_free_lock@plt+0x1f80>
    3f60:	bl	1fa0 <PyEval_SaveThread@plt>
    3f64:	mov	x22, x0
    3f68:	mov	w1, w23
    3f6c:	mov	x0, x24
    3f70:	bl	1dd0 <deflate@plt>
    3f74:	mov	w21, w0
    3f78:	mov	x0, x22
    3f7c:	bl	1d10 <PyEval_RestoreThread@plt>
    3f80:	cmn	w21, #0x2
    3f84:	b.eq	3fe8 <PyThread_free_lock@plt+0x1fd8>  // b.none
    3f88:	ldr	w0, [x19, #48]
    3f8c:	cbnz	w0, 4008 <PyThread_free_lock@plt+0x1ff8>
    3f90:	mov	x2, x20
    3f94:	mov	x1, x25
    3f98:	mov	x0, x24
    3f9c:	bl	2cf8 <PyThread_free_lock@plt+0xce8>
    3fa0:	mov	x20, x0
    3fa4:	tbz	x0, #63, 3f60 <PyThread_free_lock@plt+0x1f50>
    3fa8:	ldr	x0, [sp, #88]
    3fac:	cbz	x0, 3fc4 <PyThread_free_lock@plt+0x1fb4>
    3fb0:	ldr	x1, [x0]
    3fb4:	str	xzr, [sp, #88]
    3fb8:	sub	x1, x1, #0x1
    3fbc:	str	x1, [x0]
    3fc0:	cbz	x1, 4054 <PyThread_free_lock@plt+0x2044>
    3fc4:	ldr	x0, [x19, #160]
    3fc8:	bl	1f20 <PyThread_release_lock@plt>
    3fcc:	ldp	x19, x20, [sp, #16]
    3fd0:	ldp	x21, x22, [sp, #32]
    3fd4:	ldp	x23, x24, [sp, #48]
    3fd8:	ldr	x25, [sp, #64]
    3fdc:	ldr	x0, [sp, #88]
    3fe0:	ldp	x29, x30, [sp], #96
    3fe4:	ret
    3fe8:	ldr	x0, [x19, #64]
    3fec:	mov	w1, w21
    3ff0:	adrp	x2, 5000 <PyInit_zlib@@Base+0x580>
    3ff4:	add	x2, x2, #0x1a0
    3ff8:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    3ffc:	ldr	x0, [sp, #88]
    4000:	cbnz	x0, 3fb0 <PyThread_free_lock@plt+0x1fa0>
    4004:	b	3fc4 <PyThread_free_lock@plt+0x1fb4>
    4008:	cmp	w21, #0x1
    400c:	ccmp	w23, #0x4, #0x0, eq  // eq = none
    4010:	b.eq	405c <PyThread_free_lock@plt+0x204c>  // b.none
    4014:	cmp	w21, #0x0
    4018:	ccmn	w21, #0x5, #0x4, ne  // ne = any
    401c:	b.ne	3fe8 <PyThread_free_lock@plt+0x1fd8>  // b.any
    4020:	ldr	x2, [x19, #40]
    4024:	mov	x0, x25
    4028:	ldr	x1, [sp, #88]
    402c:	add	x1, x1, #0x20
    4030:	sub	x1, x2, x1
    4034:	bl	1cf0 <_PyBytes_Resize@plt>
    4038:	tbz	w0, #31, 3fc4 <PyThread_free_lock@plt+0x1fb4>
    403c:	b	3fa8 <PyThread_free_lock@plt+0x1f98>
    4040:	bl	1eb0 <PyErr_Occurred@plt>
    4044:	cbnz	x0, 4074 <PyThread_free_lock@plt+0x2064>
    4048:	str	x25, [sp, #64]
    404c:	str	xzr, [sp, #88]
    4050:	b	3f30 <PyThread_free_lock@plt+0x1f20>
    4054:	bl	1d80 <_Py_Dealloc@plt>
    4058:	b	3fc4 <PyThread_free_lock@plt+0x1fb4>
    405c:	mov	x0, x24
    4060:	bl	1f10 <deflateEnd@plt>
    4064:	mov	w1, w0
    4068:	cbnz	w0, 4088 <PyThread_free_lock@plt+0x2078>
    406c:	str	wzr, [x19, #148]
    4070:	b	4020 <PyThread_free_lock@plt+0x2010>
    4074:	mov	x0, #0x0                   	// #0
    4078:	ldp	x23, x24, [sp, #48]
    407c:	b	3f14 <PyThread_free_lock@plt+0x1f04>
    4080:	str	x25, [sp, #64]
    4084:	b	3f30 <PyThread_free_lock@plt+0x1f20>
    4088:	ldr	x0, [x19, #64]
    408c:	adrp	x2, 5000 <PyInit_zlib@@Base+0x580>
    4090:	add	x2, x2, #0x170
    4094:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    4098:	ldr	x0, [sp, #88]
    409c:	cbnz	x0, 3fb0 <PyThread_free_lock@plt+0x1fa0>
    40a0:	b	3fc4 <PyThread_free_lock@plt+0x1fb4>
    40a4:	nop
    40a8:	stp	x29, x30, [sp, #-192]!
    40ac:	mov	w2, #0x0                   	// #0
    40b0:	mov	x29, sp
    40b4:	stp	x23, x24, [sp, #48]
    40b8:	add	x23, sp, #0x70
    40bc:	stp	x19, x20, [sp, #16]
    40c0:	mov	x20, x1
    40c4:	mov	x19, x0
    40c8:	mov	x0, x1
    40cc:	mov	x1, x23
    40d0:	stp	x21, x22, [sp, #32]
    40d4:	mov	x21, #0x0                   	// #0
    40d8:	stp	xzr, xzr, [sp, #112]
    40dc:	stp	xzr, xzr, [sp, #128]
    40e0:	stp	xzr, xzr, [sp, #144]
    40e4:	stp	xzr, xzr, [sp, #160]
    40e8:	stp	xzr, xzr, [sp, #176]
    40ec:	bl	1f30 <PyObject_GetBuffer@plt>
    40f0:	cbnz	w0, 41d8 <PyThread_free_lock@plt+0x21c8>
    40f4:	mov	x0, x23
    40f8:	mov	w1, #0x43                  	// #67
    40fc:	bl	1d60 <PyBuffer_IsContiguous@plt>
    4100:	cbz	w0, 4250 <PyThread_free_lock@plt+0x2240>
    4104:	ldr	x0, [sp, #112]
    4108:	stp	x25, x26, [sp, #64]
    410c:	add	x24, x19, #0x10
    4110:	str	x27, [sp, #80]
    4114:	add	x26, sp, #0x68
    4118:	str	x0, [x19, #16]
    411c:	mov	x20, #0x4000                	// #16384
    4120:	str	xzr, [sp, #104]
    4124:	mov	x25, #0xffffffff            	// #4294967295
    4128:	ldr	x22, [sp, #128]
    412c:	bl	1fa0 <PyEval_SaveThread@plt>
    4130:	mov	x21, x0
    4134:	mov	w1, #0x1                   	// #1
    4138:	ldr	x0, [x19, #160]
    413c:	bl	1da0 <PyThread_acquire_lock@plt>
    4140:	mov	x0, x21
    4144:	bl	1d10 <PyEval_RestoreThread@plt>
    4148:	cmp	x22, x25
    414c:	b.hi	4200 <PyThread_free_lock@plt+0x21f0>  // b.pmore
    4150:	mov	w0, w22
    4154:	mov	x22, #0x0                   	// #0
    4158:	str	w0, [x19, #24]
    415c:	b	4190 <PyThread_free_lock@plt+0x2180>
    4160:	bl	1fa0 <PyEval_SaveThread@plt>
    4164:	mov	x27, x0
    4168:	mov	w1, #0x0                   	// #0
    416c:	mov	x0, x24
    4170:	bl	1dd0 <deflate@plt>
    4174:	mov	w21, w0
    4178:	mov	x0, x27
    417c:	bl	1d10 <PyEval_RestoreThread@plt>
    4180:	cmn	w21, #0x2
    4184:	b.eq	420c <PyThread_free_lock@plt+0x21fc>  // b.none
    4188:	ldr	w0, [x19, #48]
    418c:	cbnz	w0, 4224 <PyThread_free_lock@plt+0x2214>
    4190:	mov	x2, x20
    4194:	mov	x1, x26
    4198:	mov	x0, x24
    419c:	bl	2cf8 <PyThread_free_lock@plt+0xce8>
    41a0:	mov	x20, x0
    41a4:	tbz	x0, #63, 4160 <PyThread_free_lock@plt+0x2150>
    41a8:	ldr	x0, [sp, #104]
    41ac:	cbz	x0, 41c4 <PyThread_free_lock@plt+0x21b4>
    41b0:	ldr	x1, [x0]
    41b4:	str	xzr, [sp, #104]
    41b8:	sub	x1, x1, #0x1
    41bc:	str	x1, [x0]
    41c0:	cbz	x1, 4248 <PyThread_free_lock@plt+0x2238>
    41c4:	ldr	x0, [x19, #160]
    41c8:	bl	1f20 <PyThread_release_lock@plt>
    41cc:	ldp	x25, x26, [sp, #64]
    41d0:	ldr	x27, [sp, #80]
    41d4:	ldr	x21, [sp, #104]
    41d8:	ldr	x0, [sp, #120]
    41dc:	cbz	x0, 41e8 <PyThread_free_lock@plt+0x21d8>
    41e0:	mov	x0, x23
    41e4:	bl	1d20 <PyBuffer_Release@plt>
    41e8:	mov	x0, x21
    41ec:	ldp	x19, x20, [sp, #16]
    41f0:	ldp	x21, x22, [sp, #32]
    41f4:	ldp	x23, x24, [sp, #48]
    41f8:	ldp	x29, x30, [sp], #192
    41fc:	ret
    4200:	sub	x22, x22, x25
    4204:	mov	w0, #0xffffffff            	// #-1
    4208:	b	4158 <PyThread_free_lock@plt+0x2148>
    420c:	ldr	x0, [x19, #64]
    4210:	mov	w1, w21
    4214:	adrp	x2, 5000 <PyInit_zlib@@Base+0x580>
    4218:	add	x2, x2, #0x158
    421c:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    4220:	b	41a8 <PyThread_free_lock@plt+0x2198>
    4224:	cbnz	x22, 4148 <PyThread_free_lock@plt+0x2138>
    4228:	ldr	x2, [x19, #40]
    422c:	mov	x0, x26
    4230:	ldr	x1, [sp, #104]
    4234:	add	x1, x1, #0x20
    4238:	sub	x1, x2, x1
    423c:	bl	1cf0 <_PyBytes_Resize@plt>
    4240:	cbnz	w0, 41a8 <PyThread_free_lock@plt+0x2198>
    4244:	b	41c4 <PyThread_free_lock@plt+0x21b4>
    4248:	bl	1d80 <_Py_Dealloc@plt>
    424c:	b	41c4 <PyThread_free_lock@plt+0x21b4>
    4250:	mov	x3, x20
    4254:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    4258:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    425c:	add	x2, x2, #0xf98
    4260:	add	x1, x1, #0x1b0
    4264:	adrp	x0, 5000 <PyInit_zlib@@Base+0x580>
    4268:	add	x0, x0, #0x108
    426c:	bl	1e30 <_PyArg_BadArgument@plt>
    4270:	b	41d8 <PyThread_free_lock@plt+0x21c8>
    4274:	nop
    4278:	stp	x29, x30, [sp, #-64]!
    427c:	cmp	w3, #0x1
    4280:	mov	x29, sp
    4284:	stp	x19, x20, [sp, #16]
    4288:	mov	x19, x0
    428c:	mov	x20, x1
    4290:	stp	x21, x22, [sp, #32]
    4294:	mov	x21, x2
    4298:	ldr	w0, [x0, #24]
    429c:	b.eq	4304 <PyThread_free_lock@plt+0x22f4>  // b.none
    42a0:	cbnz	w0, 42b0 <PyThread_free_lock@plt+0x22a0>
    42a4:	ldr	x0, [x19, #136]
    42a8:	ldr	x0, [x0, #16]
    42ac:	cbz	x0, 42e8 <PyThread_free_lock@plt+0x22d8>
    42b0:	ldr	x1, [x20]
    42b4:	ldr	x2, [x21]
    42b8:	ldr	x0, [x19, #16]
    42bc:	add	x1, x1, x2
    42c0:	sub	x1, x1, x0
    42c4:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    42c8:	mov	x1, x0
    42cc:	cbz	x0, 43b0 <PyThread_free_lock@plt+0x23a0>
    42d0:	ldr	x0, [x19, #136]
    42d4:	str	x1, [x19, #136]
    42d8:	ldr	x1, [x0]
    42dc:	sub	x1, x1, #0x1
    42e0:	str	x1, [x0]
    42e4:	cbz	x1, 42fc <PyThread_free_lock@plt+0x22ec>
    42e8:	mov	w0, #0x0                   	// #0
    42ec:	ldp	x19, x20, [sp, #16]
    42f0:	ldp	x21, x22, [sp, #32]
    42f4:	ldp	x29, x30, [sp], #64
    42f8:	ret
    42fc:	bl	1d80 <_Py_Dealloc@plt>
    4300:	b	42e8 <PyThread_free_lock@plt+0x22d8>
    4304:	cbz	w0, 42a4 <PyThread_free_lock@plt+0x2294>
    4308:	ldr	x2, [x19, #128]
    430c:	stp	x23, x24, [sp, #48]
    4310:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    4314:	ldr	x22, [x1]
    4318:	ldr	x1, [x21]
    431c:	ldr	x24, [x2, #16]
    4320:	add	x22, x22, x1
    4324:	ldr	x1, [x19, #16]
    4328:	sub	x0, x0, x24
    432c:	sub	x22, x22, x1
    4330:	cmp	x22, x0
    4334:	b.gt	43b8 <PyThread_free_lock@plt+0x23a8>
    4338:	add	x1, x24, x22
    433c:	mov	x0, #0x0                   	// #0
    4340:	bl	1d70 <PyBytes_FromStringAndSize@plt>
    4344:	mov	x23, x0
    4348:	cbz	x0, 43ac <PyThread_free_lock@plt+0x239c>
    434c:	add	x3, x0, #0x20
    4350:	mov	x2, x24
    4354:	ldr	x1, [x19, #128]
    4358:	mov	x0, x3
    435c:	add	x1, x1, #0x20
    4360:	bl	1cd0 <memcpy@plt>
    4364:	ldr	x1, [x19, #16]
    4368:	mov	x2, x22
    436c:	add	x0, x0, x24
    4370:	bl	1cd0 <memcpy@plt>
    4374:	ldr	x0, [x19, #128]
    4378:	ldr	x1, [x0]
    437c:	str	x23, [x19, #128]
    4380:	sub	x1, x1, #0x1
    4384:	str	x1, [x0]
    4388:	cbz	x1, 43a4 <PyThread_free_lock@plt+0x2394>
    438c:	ldr	x0, [x19, #136]
    4390:	ldp	x23, x24, [sp, #48]
    4394:	str	wzr, [x19, #24]
    4398:	ldr	x0, [x0, #16]
    439c:	cbnz	x0, 42b0 <PyThread_free_lock@plt+0x22a0>
    43a0:	b	42e8 <PyThread_free_lock@plt+0x22d8>
    43a4:	bl	1d80 <_Py_Dealloc@plt>
    43a8:	b	438c <PyThread_free_lock@plt+0x237c>
    43ac:	ldp	x23, x24, [sp, #48]
    43b0:	mov	w0, #0xffffffff            	// #-1
    43b4:	b	42ec <PyThread_free_lock@plt+0x22dc>
    43b8:	bl	1d90 <PyErr_NoMemory@plt>
    43bc:	mov	w0, #0xffffffff            	// #-1
    43c0:	ldp	x23, x24, [sp, #48]
    43c4:	b	42ec <PyThread_free_lock@plt+0x22dc>
    43c8:	stp	x29, x30, [sp, #-192]!
    43cc:	cmp	x2, #0x1
    43d0:	mov	x29, sp
    43d4:	stp	x19, x20, [sp, #16]
    43d8:	mov	x20, #0x4000                	// #16384
    43dc:	mov	x19, x0
    43e0:	stp	x21, x22, [sp, #32]
    43e4:	mov	x21, x2
    43e8:	mov	x22, x1
    43ec:	str	x20, [sp, #96]
    43f0:	b.hi	45e4 <PyThread_free_lock@plt+0x25d4>  // b.pmore
    43f4:	cbz	x2, 455c <PyThread_free_lock@plt+0x254c>
    43f8:	ldr	x0, [x22]
    43fc:	add	x1, sp, #0x60
    4400:	bl	2210 <PyThread_free_lock@plt+0x200>
    4404:	cbz	w0, 45b0 <PyThread_free_lock@plt+0x25a0>
    4408:	ldr	x20, [sp, #96]
    440c:	str	xzr, [sp, #104]
    4410:	cmp	x20, #0x0
    4414:	b.le	4598 <PyThread_free_lock@plt+0x2588>
    4418:	ldr	x0, [x19, #136]
    441c:	stp	x23, x24, [sp, #48]
    4420:	add	x24, sp, #0x70
    4424:	mov	x1, x24
    4428:	mov	w2, #0x0                   	// #0
    442c:	bl	1f30 <PyObject_GetBuffer@plt>
    4430:	cmn	w0, #0x1
    4434:	b.eq	4580 <PyThread_free_lock@plt+0x2570>  // b.none
    4438:	stp	x25, x26, [sp, #64]
    443c:	mov	x22, x19
    4440:	add	x25, sp, #0x68
    4444:	stp	x27, x28, [sp, #80]
    4448:	bl	1fa0 <PyEval_SaveThread@plt>
    444c:	mov	x21, x0
    4450:	ldr	x0, [x19, #160]
    4454:	mov	w1, #0x1                   	// #1
    4458:	mov	x27, #0xffffffff            	// #4294967295
    445c:	bl	1da0 <PyThread_acquire_lock@plt>
    4460:	mov	x0, x21
    4464:	bl	1d10 <PyEval_RestoreThread@plt>
    4468:	ldr	x23, [sp, #128]
    446c:	ldr	x0, [sp, #112]
    4470:	str	x0, [x22, #16]!
    4474:	cmp	x23, x27
    4478:	b.ls	461c <PyThread_free_lock@plt+0x260c>  // b.plast
    447c:	sub	x23, x23, x27
    4480:	mov	w0, #0xffffffff            	// #-1
    4484:	mov	w26, #0x0                   	// #0
    4488:	str	w0, [x19, #24]
    448c:	nop
    4490:	mov	x2, x20
    4494:	mov	x1, x25
    4498:	mov	x0, x22
    449c:	bl	2cf8 <PyThread_free_lock@plt+0xce8>
    44a0:	mov	x20, x0
    44a4:	tbnz	x0, #63, 4510 <PyThread_free_lock@plt+0x2500>
    44a8:	bl	1fa0 <PyEval_SaveThread@plt>
    44ac:	mov	x28, x0
    44b0:	mov	w1, w26
    44b4:	mov	x0, x22
    44b8:	bl	1d00 <inflate@plt>
    44bc:	mov	w21, w0
    44c0:	mov	x0, x28
    44c4:	bl	1d10 <PyEval_RestoreThread@plt>
    44c8:	cmn	w21, #0x5
    44cc:	b.eq	44d8 <PyThread_free_lock@plt+0x24c8>  // b.none
    44d0:	cmp	w21, #0x1
    44d4:	b.hi	45c4 <PyThread_free_lock@plt+0x25b4>  // b.pmore
    44d8:	ldr	w0, [x19, #48]
    44dc:	cmp	w0, #0x0
    44e0:	ccmp	w21, #0x2, #0x4, ne  // ne = any
    44e4:	b.eq	4490 <PyThread_free_lock@plt+0x2480>  // b.none
    44e8:	cmp	w21, #0x1
    44ec:	b.eq	4654 <PyThread_free_lock@plt+0x2644>  // b.none
    44f0:	cbnz	x23, 4474 <PyThread_free_lock@plt+0x2464>
    44f4:	nop
    44f8:	mov	w3, w21
    44fc:	add	x2, x24, #0x10
    4500:	mov	x1, x24
    4504:	mov	x0, x19
    4508:	bl	4278 <PyThread_free_lock@plt+0x2268>
    450c:	tbz	w0, #31, 462c <PyThread_free_lock@plt+0x261c>
    4510:	ldr	x0, [sp, #104]
    4514:	cbz	x0, 452c <PyThread_free_lock@plt+0x251c>
    4518:	ldr	x1, [x0]
    451c:	str	xzr, [sp, #104]
    4520:	sub	x1, x1, #0x1
    4524:	str	x1, [x0]
    4528:	cbz	x1, 464c <PyThread_free_lock@plt+0x263c>
    452c:	mov	x0, x24
    4530:	bl	1d20 <PyBuffer_Release@plt>
    4534:	ldr	x0, [x19, #160]
    4538:	bl	1f20 <PyThread_release_lock@plt>
    453c:	ldp	x19, x20, [sp, #16]
    4540:	ldp	x21, x22, [sp, #32]
    4544:	ldp	x23, x24, [sp, #48]
    4548:	ldp	x25, x26, [sp, #64]
    454c:	ldp	x27, x28, [sp, #80]
    4550:	ldr	x0, [sp, #104]
    4554:	ldp	x29, x30, [sp], #192
    4558:	ret
    455c:	ldr	x0, [x19, #136]
    4560:	stp	x23, x24, [sp, #48]
    4564:	add	x24, sp, #0x70
    4568:	mov	x1, x24
    456c:	mov	w2, #0x0                   	// #0
    4570:	str	xzr, [sp, #104]
    4574:	bl	1f30 <PyObject_GetBuffer@plt>
    4578:	cmn	w0, #0x1
    457c:	b.ne	4438 <PyThread_free_lock@plt+0x2428>  // b.any
    4580:	mov	x0, #0x0                   	// #0
    4584:	ldp	x19, x20, [sp, #16]
    4588:	ldp	x21, x22, [sp, #32]
    458c:	ldp	x23, x24, [sp, #48]
    4590:	ldp	x29, x30, [sp], #192
    4594:	ret
    4598:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    459c:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    45a0:	add	x1, x1, #0x1c0
    45a4:	ldr	x0, [x0, #4032]
    45a8:	ldr	x0, [x0]
    45ac:	bl	1dc0 <PyErr_SetString@plt>
    45b0:	mov	x0, #0x0                   	// #0
    45b4:	ldp	x19, x20, [sp, #16]
    45b8:	ldp	x21, x22, [sp, #32]
    45bc:	ldp	x29, x30, [sp], #192
    45c0:	ret
    45c4:	cmp	w21, #0x2
    45c8:	b.ne	44f8 <PyThread_free_lock@plt+0x24e8>  // b.any
    45cc:	ldr	x1, [x19, #152]
    45d0:	mov	x0, x19
    45d4:	cbz	x1, 44f8 <PyThread_free_lock@plt+0x24e8>
    45d8:	bl	2458 <PyThread_free_lock@plt+0x448>
    45dc:	tbz	w0, #31, 4490 <PyThread_free_lock@plt+0x2480>
    45e0:	b	4510 <PyThread_free_lock@plt+0x2500>
    45e4:	adrp	x0, 5000 <PyInit_zlib@@Base+0x580>
    45e8:	mov	x1, x21
    45ec:	add	x0, x0, #0x198
    45f0:	mov	x3, #0x1                   	// #1
    45f4:	mov	x2, #0x0                   	// #0
    45f8:	bl	1e80 <_PyArg_CheckPositional@plt>
    45fc:	cbz	w0, 45b0 <PyThread_free_lock@plt+0x25a0>
    4600:	cmp	x21, #0x0
    4604:	b.le	4408 <PyThread_free_lock@plt+0x23f8>
    4608:	ldr	x0, [x22]
    460c:	add	x1, sp, #0x60
    4610:	bl	2210 <PyThread_free_lock@plt+0x200>
    4614:	cbnz	w0, 4408 <PyThread_free_lock@plt+0x23f8>
    4618:	b	45b0 <PyThread_free_lock@plt+0x25a0>
    461c:	mov	w26, #0x4                   	// #4
    4620:	str	w23, [x19, #24]
    4624:	mov	x23, #0x0                   	// #0
    4628:	b	4490 <PyThread_free_lock@plt+0x2480>
    462c:	ldr	x2, [x19, #40]
    4630:	mov	x0, x25
    4634:	ldr	x1, [sp, #104]
    4638:	add	x1, x1, #0x20
    463c:	sub	x1, x2, x1
    4640:	bl	1cf0 <_PyBytes_Resize@plt>
    4644:	cbnz	w0, 4510 <PyThread_free_lock@plt+0x2500>
    4648:	b	452c <PyThread_free_lock@plt+0x251c>
    464c:	bl	1d80 <_Py_Dealloc@plt>
    4650:	b	452c <PyThread_free_lock@plt+0x251c>
    4654:	mov	w3, w21
    4658:	add	x2, x24, #0x10
    465c:	mov	x1, x24
    4660:	mov	x0, x19
    4664:	bl	4278 <PyThread_free_lock@plt+0x2268>
    4668:	tbnz	w0, #31, 4510 <PyThread_free_lock@plt+0x2500>
    466c:	strb	w21, [x19, #144]
    4670:	mov	x0, x22
    4674:	str	wzr, [x19, #148]
    4678:	bl	1e90 <inflateEnd@plt>
    467c:	mov	w1, w0
    4680:	cbz	w0, 462c <PyThread_free_lock@plt+0x261c>
    4684:	ldr	x0, [x19, #64]
    4688:	adrp	x2, 5000 <PyInit_zlib@@Base+0x580>
    468c:	add	x2, x2, #0x60
    4690:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    4694:	b	4510 <PyThread_free_lock@plt+0x2500>
    4698:	sub	sp, sp, #0xf0
    469c:	stp	x29, x30, [sp, #16]
    46a0:	add	x29, sp, #0x10
    46a4:	stp	x19, x20, [sp, #32]
    46a8:	mov	x20, x0
    46ac:	stp	x21, x22, [sp, #48]
    46b0:	mov	x22, x1
    46b4:	mov	x1, x2
    46b8:	stp	x23, x24, [sp, #64]
    46bc:	cbz	x3, 4878 <PyThread_free_lock@plt+0x2868>
    46c0:	ldr	x23, [x3, #16]
    46c4:	str	xzr, [sp, #128]
    46c8:	stp	xzr, xzr, [sp, #160]
    46cc:	add	x23, x2, x23
    46d0:	stp	xzr, xzr, [sp, #176]
    46d4:	stp	xzr, xzr, [sp, #192]
    46d8:	stp	xzr, xzr, [sp, #208]
    46dc:	stp	xzr, xzr, [sp, #224]
    46e0:	add	x0, sp, #0x90
    46e4:	str	x0, [sp]
    46e8:	adrp	x4, 18000 <PyInit_zlib@@Base+0x13580>
    46ec:	add	x4, x4, #0x1b0
    46f0:	mov	x0, x22
    46f4:	add	x4, x4, #0x440
    46f8:	mov	w7, #0x0                   	// #0
    46fc:	mov	w6, #0x2                   	// #2
    4700:	mov	w5, #0x1                   	// #1
    4704:	mov	x2, #0x0                   	// #0
    4708:	bl	1db0 <_PyArg_UnpackKeywords@plt>
    470c:	mov	x22, x0
    4710:	cbz	x0, 4984 <PyThread_free_lock@plt+0x2974>
    4714:	ldr	x0, [x22]
    4718:	add	x21, sp, #0xa0
    471c:	mov	x1, x21
    4720:	mov	w2, #0x0                   	// #0
    4724:	bl	1f30 <PyObject_GetBuffer@plt>
    4728:	mov	w19, w0
    472c:	cbnz	w0, 4984 <PyThread_free_lock@plt+0x2974>
    4730:	mov	x0, x21
    4734:	mov	w1, #0x43                  	// #67
    4738:	bl	1d60 <PyBuffer_IsContiguous@plt>
    473c:	cbz	w0, 49e8 <PyThread_free_lock@plt+0x29d8>
    4740:	cmp	x23, #0x1
    4744:	b.eq	4758 <PyThread_free_lock@plt+0x2748>  // b.none
    4748:	ldr	x0, [x22, #8]
    474c:	add	x1, sp, #0x80
    4750:	bl	2210 <PyThread_free_lock@plt+0x200>
    4754:	cbz	w0, 4984 <PyThread_free_lock@plt+0x2974>
    4758:	ldr	x22, [sp, #128]
    475c:	str	xzr, [sp, #136]
    4760:	cmp	x22, #0x0
    4764:	b.lt	4a3c <PyThread_free_lock@plt+0x2a2c>  // b.tstop
    4768:	ldr	x1, [sp, #176]
    476c:	stp	x25, x26, [sp, #80]
    4770:	stp	x27, x28, [sp, #96]
    4774:	str	x1, [sp, #112]
    4778:	ldr	x0, [sp, #160]
    477c:	b.eq	49a4 <PyThread_free_lock@plt+0x2994>  // b.none
    4780:	mov	x1, #0x3fff                	// #16383
    4784:	cmp	x22, x1
    4788:	mov	x3, #0x4000                	// #16384
    478c:	mov	x25, x22
    4790:	csel	x23, x22, x3, le
    4794:	str	x0, [x20, #16]
    4798:	bl	1fa0 <PyEval_SaveThread@plt>
    479c:	mov	x2, x0
    47a0:	ldr	x0, [x20, #160]
    47a4:	mov	w1, #0x1                   	// #1
    47a8:	str	x2, [sp, #120]
    47ac:	add	x28, x20, #0x28
    47b0:	add	x27, x20, #0x30
    47b4:	add	x24, sp, #0x88
    47b8:	bl	1da0 <PyThread_acquire_lock@plt>
    47bc:	add	x26, x20, #0x10
    47c0:	ldr	x2, [sp, #120]
    47c4:	mov	x0, x2
    47c8:	bl	1d10 <PyEval_RestoreThread@plt>
    47cc:	ldr	x0, [sp, #112]
    47d0:	mov	x1, #0xffffffff            	// #4294967295
    47d4:	cmp	x0, x1
    47d8:	b.hi	498c <PyThread_free_lock@plt+0x297c>  // b.pmore
    47dc:	str	xzr, [sp, #112]
    47e0:	str	w0, [x20, #24]
    47e4:	nop
    47e8:	mov	x3, x23
    47ec:	mov	x4, x25
    47f0:	mov	x2, x24
    47f4:	mov	x1, x27
    47f8:	mov	x0, x28
    47fc:	bl	2c10 <PyThread_free_lock@plt+0xc00>
    4800:	mov	x23, x0
    4804:	cmn	x0, #0x2
    4808:	b.eq	48a8 <PyThread_free_lock@plt+0x2898>  // b.none
    480c:	tbnz	x0, #63, 48b0 <PyThread_free_lock@plt+0x28a0>
    4810:	bl	1fa0 <PyEval_SaveThread@plt>
    4814:	mov	x19, x0
    4818:	mov	w1, #0x2                   	// #2
    481c:	mov	x0, x26
    4820:	bl	1d00 <inflate@plt>
    4824:	mov	w1, w0
    4828:	mov	x0, x19
    482c:	mov	w19, w1
    4830:	bl	1d10 <PyEval_RestoreThread@plt>
    4834:	cmn	w19, #0x5
    4838:	b.eq	490c <PyThread_free_lock@plt+0x28fc>  // b.none
    483c:	cmp	w19, #0x1
    4840:	b.hi	4964 <PyThread_free_lock@plt+0x2954>  // b.pmore
    4844:	ldr	w0, [x20, #48]
    4848:	cmp	w19, #0x2
    484c:	cbz	w0, 47e8 <PyThread_free_lock@plt+0x27d8>
    4850:	b.eq	47e8 <PyThread_free_lock@plt+0x27d8>  // b.none
    4854:	cmp	w19, #0x1
    4858:	b.ne	4914 <PyThread_free_lock@plt+0x2904>  // b.any
    485c:	mov	w3, w19
    4860:	add	x2, x21, #0x10
    4864:	mov	x1, x21
    4868:	mov	x0, x20
    486c:	bl	4278 <PyThread_free_lock@plt+0x2268>
    4870:	tbz	w0, #31, 4a30 <PyThread_free_lock@plt+0x2a20>
    4874:	b	48b0 <PyThread_free_lock@plt+0x28a0>
    4878:	str	xzr, [sp, #128]
    487c:	sub	x0, x2, #0x1
    4880:	stp	xzr, xzr, [sp, #160]
    4884:	mov	x23, x2
    4888:	cmp	x0, #0x1
    488c:	stp	xzr, xzr, [sp, #176]
    4890:	stp	xzr, xzr, [sp, #192]
    4894:	stp	xzr, xzr, [sp, #208]
    4898:	stp	xzr, xzr, [sp, #224]
    489c:	b.hi	46e0 <PyThread_free_lock@plt+0x26d0>  // b.pmore
    48a0:	cbnz	x22, 4714 <PyThread_free_lock@plt+0x2704>
    48a4:	b	46e0 <PyThread_free_lock@plt+0x26d0>
    48a8:	cbnz	x22, 4a10 <PyThread_free_lock@plt+0x2a00>
    48ac:	bl	1d90 <PyErr_NoMemory@plt>
    48b0:	ldr	x0, [sp, #136]
    48b4:	cbz	x0, 48cc <PyThread_free_lock@plt+0x28bc>
    48b8:	ldr	x1, [x0]
    48bc:	str	xzr, [sp, #136]
    48c0:	sub	x1, x1, #0x1
    48c4:	str	x1, [x0]
    48c8:	cbz	x1, 49b4 <PyThread_free_lock@plt+0x29a4>
    48cc:	ldr	x0, [x20, #160]
    48d0:	bl	1f20 <PyThread_release_lock@plt>
    48d4:	ldp	x25, x26, [sp, #80]
    48d8:	ldp	x27, x28, [sp, #96]
    48dc:	ldr	x19, [sp, #136]
    48e0:	ldr	x0, [sp, #168]
    48e4:	cbz	x0, 48f0 <PyThread_free_lock@plt+0x28e0>
    48e8:	add	x0, sp, #0xa0
    48ec:	bl	1d20 <PyBuffer_Release@plt>
    48f0:	mov	x0, x19
    48f4:	ldp	x29, x30, [sp, #16]
    48f8:	ldp	x19, x20, [sp, #32]
    48fc:	ldp	x21, x22, [sp, #48]
    4900:	ldp	x23, x24, [sp, #64]
    4904:	add	sp, sp, #0xf0
    4908:	ret
    490c:	ldr	w0, [x20, #48]
    4910:	cbz	w0, 47e8 <PyThread_free_lock@plt+0x27d8>
    4914:	ldr	x0, [sp, #112]
    4918:	cbnz	x0, 47cc <PyThread_free_lock@plt+0x27bc>
    491c:	nop
    4920:	mov	w3, w19
    4924:	add	x2, x21, #0x10
    4928:	mov	x1, x21
    492c:	mov	x0, x20
    4930:	bl	4278 <PyThread_free_lock@plt+0x2268>
    4934:	tbnz	w0, #31, 48b0 <PyThread_free_lock@plt+0x28a0>
    4938:	cmp	w19, #0x0
    493c:	ccmn	w19, #0x5, #0x4, ne  // ne = any
    4940:	b.ne	49d0 <PyThread_free_lock@plt+0x29c0>  // b.any
    4944:	ldr	x2, [x20, #40]
    4948:	mov	x0, x24
    494c:	ldr	x1, [sp, #136]
    4950:	add	x1, x1, #0x20
    4954:	sub	x1, x2, x1
    4958:	bl	1cf0 <_PyBytes_Resize@plt>
    495c:	cbnz	w0, 48b0 <PyThread_free_lock@plt+0x28a0>
    4960:	b	48cc <PyThread_free_lock@plt+0x28bc>
    4964:	cmp	w19, #0x2
    4968:	b.ne	4920 <PyThread_free_lock@plt+0x2910>  // b.any
    496c:	ldr	x1, [x20, #152]
    4970:	mov	x0, x20
    4974:	cbz	x1, 49bc <PyThread_free_lock@plt+0x29ac>
    4978:	bl	2458 <PyThread_free_lock@plt+0x448>
    497c:	tbz	w0, #31, 4844 <PyThread_free_lock@plt+0x2834>
    4980:	b	48b0 <PyThread_free_lock@plt+0x28a0>
    4984:	mov	x19, #0x0                   	// #0
    4988:	b	48e0 <PyThread_free_lock@plt+0x28d0>
    498c:	ldr	x0, [sp, #112]
    4990:	mov	x1, #0xffffffff            	// #4294967295
    4994:	sub	x0, x0, x1
    4998:	str	x0, [sp, #112]
    499c:	mov	w0, #0xffffffff            	// #-1
    49a0:	b	47e0 <PyThread_free_lock@plt+0x27d0>
    49a4:	mov	x25, #0x7fffffffffffffff    	// #9223372036854775807
    49a8:	mov	x23, #0x4000                	// #16384
    49ac:	str	x0, [x20, #16]
    49b0:	b	4798 <PyThread_free_lock@plt+0x2788>
    49b4:	bl	1d80 <_Py_Dealloc@plt>
    49b8:	b	48cc <PyThread_free_lock@plt+0x28bc>
    49bc:	mov	w3, w19
    49c0:	add	x2, x21, #0x10
    49c4:	mov	x1, x21
    49c8:	bl	4278 <PyThread_free_lock@plt+0x2268>
    49cc:	tbnz	w0, #31, 48b0 <PyThread_free_lock@plt+0x28a0>
    49d0:	ldr	x0, [x20, #64]
    49d4:	mov	w1, w19
    49d8:	adrp	x2, 5000 <PyInit_zlib@@Base+0x580>
    49dc:	add	x2, x2, #0x40
    49e0:	bl	23b0 <PyThread_free_lock@plt+0x3a0>
    49e4:	b	48b0 <PyThread_free_lock@plt+0x28a0>
    49e8:	ldr	x3, [x22]
    49ec:	adrp	x2, 4000 <PyThread_free_lock@plt+0x1ff0>
    49f0:	adrp	x1, 4000 <PyThread_free_lock@plt+0x1ff0>
    49f4:	add	x2, x2, #0xf98
    49f8:	add	x1, x1, #0xfb0
    49fc:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    4a00:	mov	x19, #0x0                   	// #0
    4a04:	add	x0, x0, #0xfc0
    4a08:	bl	1e30 <_PyArg_BadArgument@plt>
    4a0c:	b	48e0 <PyThread_free_lock@plt+0x28d0>
    4a10:	mov	w3, w19
    4a14:	add	x2, x21, #0x10
    4a18:	mov	x1, x21
    4a1c:	mov	x0, x20
    4a20:	bl	4278 <PyThread_free_lock@plt+0x2268>
    4a24:	tbnz	w0, #31, 48b0 <PyThread_free_lock@plt+0x28a0>
    4a28:	cmp	w19, #0x1
    4a2c:	b.ne	4938 <PyThread_free_lock@plt+0x2928>  // b.any
    4a30:	mov	w0, #0x1                   	// #1
    4a34:	strb	w0, [x20, #144]
    4a38:	b	4944 <PyThread_free_lock@plt+0x2934>
    4a3c:	adrp	x0, 17000 <PyInit_zlib@@Base+0x12580>
    4a40:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4a44:	mov	x19, #0x0                   	// #0
    4a48:	add	x1, x1, #0x1e8
    4a4c:	ldr	x0, [x0, #4032]
    4a50:	ldr	x0, [x0]
    4a54:	bl	1dc0 <PyErr_SetString@plt>
    4a58:	b	48e0 <PyThread_free_lock@plt+0x28d0>
    4a5c:	nop
    4a60:	b	2510 <PyThread_free_lock@plt+0x500>
    4a64:	nop
    4a68:	b	26e8 <PyThread_free_lock@plt+0x6d8>
    4a6c:	nop
    4a70:	b	26e8 <PyThread_free_lock@plt+0x6d8>
    4a74:	nop
    4a78:	b	2510 <PyThread_free_lock@plt+0x500>
    4a7c:	nop

0000000000004a80 <PyInit_zlib@@Base>:
    4a80:	stp	x29, x30, [sp, #-32]!
    4a84:	mov	x29, sp
    4a88:	str	x19, [sp, #16]
    4a8c:	adrp	x19, 18000 <PyInit_zlib@@Base+0x13580>
    4a90:	add	x19, x19, #0x1b0
    4a94:	add	x0, x19, #0x1a0
    4a98:	bl	1e10 <PyType_Ready@plt>
    4a9c:	tbnz	w0, #31, 4cfc <PyInit_zlib@@Base+0x27c>
    4aa0:	mov	x0, x19
    4aa4:	bl	1e10 <PyType_Ready@plt>
    4aa8:	tbnz	w0, #31, 4cfc <PyInit_zlib@@Base+0x27c>
    4aac:	add	x0, x19, #0x480
    4ab0:	mov	w1, #0x3f5                 	// #1013
    4ab4:	bl	1ec0 <PyModule_Create2@plt>
    4ab8:	mov	x19, x0
    4abc:	cbz	x0, 4cfc <PyInit_zlib@@Base+0x27c>
    4ac0:	mov	x2, #0x0                   	// #0
    4ac4:	mov	x1, #0x0                   	// #0
    4ac8:	adrp	x0, 5000 <PyInit_zlib@@Base+0x580>
    4acc:	add	x0, x0, #0x208
    4ad0:	bl	1e40 <PyErr_NewException@plt>
    4ad4:	mov	x2, x0
    4ad8:	adrp	x1, 18000 <PyInit_zlib@@Base+0x13580>
    4adc:	str	x0, [x1, #2464]
    4ae0:	cbz	x0, 4b00 <PyInit_zlib@@Base+0x80>
    4ae4:	ldr	x3, [x2]
    4ae8:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4aec:	mov	x0, x19
    4af0:	add	x1, x1, #0x218
    4af4:	add	x3, x3, #0x1
    4af8:	str	x3, [x2]
    4afc:	bl	1fb0 <PyModule_AddObject@plt>
    4b00:	mov	x2, #0xf                   	// #15
    4b04:	mov	x0, x19
    4b08:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4b0c:	add	x1, x1, #0x220
    4b10:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4b14:	mov	x2, #0x8                   	// #8
    4b18:	mov	x0, x19
    4b1c:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4b20:	add	x1, x1, #0x230
    4b24:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4b28:	mov	x2, #0x8                   	// #8
    4b2c:	mov	x0, x19
    4b30:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4b34:	add	x1, x1, #0x240
    4b38:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4b3c:	mov	x2, #0x4000                	// #16384
    4b40:	mov	x0, x19
    4b44:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4b48:	add	x1, x1, #0x250
    4b4c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4b50:	mov	x2, #0x0                   	// #0
    4b54:	mov	x0, x19
    4b58:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4b5c:	add	x1, x1, #0x260
    4b60:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4b64:	mov	x2, #0x1                   	// #1
    4b68:	mov	x0, x19
    4b6c:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4b70:	add	x1, x1, #0x278
    4b74:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4b78:	mov	x2, #0x9                   	// #9
    4b7c:	mov	x0, x19
    4b80:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4b84:	add	x1, x1, #0x288
    4b88:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4b8c:	mov	x2, #0xffffffffffffffff    	// #-1
    4b90:	mov	x0, x19
    4b94:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4b98:	add	x1, x1, #0x2a0
    4b9c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4ba0:	mov	x2, #0x1                   	// #1
    4ba4:	mov	x0, x19
    4ba8:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4bac:	add	x1, x1, #0x2b8
    4bb0:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4bb4:	mov	x2, #0x2                   	// #2
    4bb8:	mov	x0, x19
    4bbc:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4bc0:	add	x1, x1, #0x2c8
    4bc4:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4bc8:	mov	x2, #0x3                   	// #3
    4bcc:	mov	x0, x19
    4bd0:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4bd4:	add	x1, x1, #0x2d8
    4bd8:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4bdc:	mov	x2, #0x4                   	// #4
    4be0:	mov	x0, x19
    4be4:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4be8:	add	x1, x1, #0x2e0
    4bec:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4bf0:	mov	x2, #0x0                   	// #0
    4bf4:	mov	x0, x19
    4bf8:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4bfc:	add	x1, x1, #0x2e8
    4c00:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4c04:	mov	x2, #0x0                   	// #0
    4c08:	mov	x0, x19
    4c0c:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4c10:	add	x1, x1, #0x300
    4c14:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4c18:	mov	x2, #0x1                   	// #1
    4c1c:	mov	x0, x19
    4c20:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4c24:	add	x1, x1, #0x310
    4c28:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4c2c:	mov	x2, #0x2                   	// #2
    4c30:	mov	x0, x19
    4c34:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4c38:	add	x1, x1, #0x320
    4c3c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4c40:	mov	x2, #0x3                   	// #3
    4c44:	mov	x0, x19
    4c48:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4c4c:	add	x1, x1, #0x330
    4c50:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4c54:	mov	x2, #0x4                   	// #4
    4c58:	mov	x0, x19
    4c5c:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4c60:	add	x1, x1, #0x340
    4c64:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4c68:	mov	x2, #0x5                   	// #5
    4c6c:	mov	x0, x19
    4c70:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4c74:	add	x1, x1, #0x350
    4c78:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4c7c:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4c80:	add	x1, x1, #0x358
    4c84:	mov	x2, #0x6                   	// #6
    4c88:	mov	x0, x19
    4c8c:	bl	1ce0 <PyModule_AddIntConstant@plt>
    4c90:	adrp	x0, 4000 <PyThread_free_lock@plt+0x1ff0>
    4c94:	add	x0, x0, #0xf48
    4c98:	bl	1f70 <PyUnicode_FromString@plt>
    4c9c:	mov	x2, x0
    4ca0:	cbz	x0, 4cb4 <PyInit_zlib@@Base+0x234>
    4ca4:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4ca8:	mov	x0, x19
    4cac:	add	x1, x1, #0x360
    4cb0:	bl	1fb0 <PyModule_AddObject@plt>
    4cb4:	bl	1fc0 <zlibVersion@plt>
    4cb8:	bl	1f70 <PyUnicode_FromString@plt>
    4cbc:	mov	x2, x0
    4cc0:	cbz	x0, 4cd4 <PyInit_zlib@@Base+0x254>
    4cc4:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4cc8:	mov	x0, x19
    4ccc:	add	x1, x1, #0x370
    4cd0:	bl	1fb0 <PyModule_AddObject@plt>
    4cd4:	mov	x0, x19
    4cd8:	adrp	x2, 5000 <PyInit_zlib@@Base+0x580>
    4cdc:	adrp	x1, 5000 <PyInit_zlib@@Base+0x580>
    4ce0:	add	x2, x2, #0x388
    4ce4:	add	x1, x1, #0x390
    4ce8:	bl	1f90 <PyModule_AddStringConstant@plt>
    4cec:	mov	x0, x19
    4cf0:	ldr	x19, [sp, #16]
    4cf4:	ldp	x29, x30, [sp], #32
    4cf8:	ret
    4cfc:	mov	x19, #0x0                   	// #0
    4d00:	mov	x0, x19
    4d04:	ldr	x19, [sp, #16]
    4d08:	ldp	x29, x30, [sp], #32
    4d0c:	ret

Disassembly of section .fini:

0000000000004d10 <.fini>:
    4d10:	stp	x29, x30, [sp, #-16]!
    4d14:	mov	x29, sp
    4d18:	ldp	x29, x30, [sp], #16
    4d1c:	ret
