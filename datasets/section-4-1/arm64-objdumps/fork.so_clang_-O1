
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fork.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000860 <.init>:
 860:	stp	x29, x30, [sp, #-16]!
 864:	mov	x29, sp
 868:	bl	980 <fprintf@plt+0x10>
 86c:	ldp	x29, x30, [sp], #16
 870:	ret

Disassembly of section .plt:

0000000000000880 <memcpy@plt-0x20>:
 880:	stp	x16, x30, [sp, #-16]!
 884:	adrp	x16, 11000 <dl_load@@Base+0x105ac>
 888:	ldr	x17, [x16, #4088]
 88c:	add	x16, x16, #0xff8
 890:	br	x17
 894:	nop
 898:	nop
 89c:	nop

00000000000008a0 <memcpy@plt>:
 8a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8a4:	ldr	x17, [x16]
 8a8:	add	x16, x16, #0x0
 8ac:	br	x17

00000000000008b0 <strlen@plt>:
 8b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8b4:	ldr	x17, [x16, #8]
 8b8:	add	x16, x16, #0x8
 8bc:	br	x17

00000000000008c0 <exit@plt>:
 8c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #16]
 8c8:	add	x16, x16, #0x10
 8cc:	br	x17

00000000000008d0 <__cxa_finalize@plt>:
 8d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #24]
 8d8:	add	x16, x16, #0x18
 8dc:	br	x17

00000000000008e0 <fork@plt>:
 8e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8e4:	ldr	x17, [x16, #32]
 8e8:	add	x16, x16, #0x20
 8ec:	br	x17

00000000000008f0 <getpid@plt>:
 8f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8f4:	ldr	x17, [x16, #40]
 8f8:	add	x16, x16, #0x28
 8fc:	br	x17

0000000000000900 <getppid@plt>:
 900:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 904:	ldr	x17, [x16, #48]
 908:	add	x16, x16, #0x30
 90c:	br	x17

0000000000000910 <__gmon_start__@plt>:
 910:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 914:	ldr	x17, [x16, #56]
 918:	add	x16, x16, #0x38
 91c:	br	x17

0000000000000920 <fwrite@plt>:
 920:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 924:	ldr	x17, [x16, #64]
 928:	add	x16, x16, #0x40
 92c:	br	x17

0000000000000930 <wait@plt>:
 930:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 934:	ldr	x17, [x16, #72]
 938:	add	x16, x16, #0x48
 93c:	br	x17

0000000000000940 <dcgettext@plt>:
 940:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 944:	ldr	x17, [x16, #80]
 948:	add	x16, x16, #0x50
 94c:	br	x17

0000000000000950 <__errno_location@plt>:
 950:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 954:	ldr	x17, [x16, #88]
 958:	add	x16, x16, #0x58
 95c:	br	x17

0000000000000960 <waitpid@plt>:
 960:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 964:	ldr	x17, [x16, #96]
 968:	add	x16, x16, #0x60
 96c:	br	x17

0000000000000970 <fprintf@plt>:
 970:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 974:	ldr	x17, [x16, #104]
 978:	add	x16, x16, #0x68
 97c:	br	x17

Disassembly of section .text:

0000000000000980 <dl_load@@Base-0xd4>:
 980:	adrp	x0, 11000 <dl_load@@Base+0x105ac>
 984:	ldr	x0, [x0, #4056]
 988:	cbz	x0, 990 <fprintf@plt+0x20>
 98c:	b	910 <__gmon_start__@plt>
 990:	ret
 994:	nop
 998:	adrp	x0, 12000 <dl_load@@Base+0x115ac>
 99c:	add	x0, x0, #0x108
 9a0:	adrp	x1, 12000 <dl_load@@Base+0x115ac>
 9a4:	add	x1, x1, #0x108
 9a8:	cmp	x1, x0
 9ac:	b.eq	9c4 <fprintf@plt+0x54>  // b.none
 9b0:	adrp	x1, 11000 <dl_load@@Base+0x105ac>
 9b4:	ldr	x1, [x1, #4032]
 9b8:	cbz	x1, 9c4 <fprintf@plt+0x54>
 9bc:	mov	x16, x1
 9c0:	br	x16
 9c4:	ret
 9c8:	adrp	x0, 12000 <dl_load@@Base+0x115ac>
 9cc:	add	x0, x0, #0x108
 9d0:	adrp	x1, 12000 <dl_load@@Base+0x115ac>
 9d4:	add	x1, x1, #0x108
 9d8:	sub	x1, x1, x0
 9dc:	lsr	x2, x1, #63
 9e0:	add	x1, x2, x1, asr #3
 9e4:	cmp	xzr, x1, asr #1
 9e8:	asr	x1, x1, #1
 9ec:	b.eq	a04 <fprintf@plt+0x94>  // b.none
 9f0:	adrp	x2, 11000 <dl_load@@Base+0x105ac>
 9f4:	ldr	x2, [x2, #4064]
 9f8:	cbz	x2, a04 <fprintf@plt+0x94>
 9fc:	mov	x16, x2
 a00:	br	x16
 a04:	ret
 a08:	stp	x29, x30, [sp, #-32]!
 a0c:	mov	x29, sp
 a10:	str	x19, [sp, #16]
 a14:	adrp	x19, 12000 <dl_load@@Base+0x115ac>
 a18:	ldrb	w0, [x19, #264]
 a1c:	cbnz	w0, a44 <fprintf@plt+0xd4>
 a20:	adrp	x0, 11000 <dl_load@@Base+0x105ac>
 a24:	ldr	x0, [x0, #4040]
 a28:	cbz	x0, a38 <fprintf@plt+0xc8>
 a2c:	adrp	x0, 12000 <dl_load@@Base+0x115ac>
 a30:	ldr	x0, [x0, #112]
 a34:	bl	8d0 <__cxa_finalize@plt>
 a38:	bl	998 <fprintf@plt+0x28>
 a3c:	mov	w0, #0x1                   	// #1
 a40:	strb	w0, [x19, #264]
 a44:	ldr	x19, [sp, #16]
 a48:	ldp	x29, x30, [sp], #32
 a4c:	ret
 a50:	b	9c8 <fprintf@plt+0x58>

0000000000000a54 <dl_load@@Base>:
 a54:	stp	x29, x30, [sp, #-80]!
 a58:	stp	x24, x23, [sp, #32]
 a5c:	stp	x22, x21, [sp, #48]
 a60:	adrp	x22, 12000 <dl_load@@Base+0x115ac>
 a64:	adrp	x23, 12000 <dl_load@@Base+0x115ac>
 a68:	stp	x26, x25, [sp, #16]
 a6c:	stp	x20, x19, [sp, #64]
 a70:	str	x0, [x22, #272]
 a74:	str	x1, [x23, #280]
 a78:	ldr	w8, [x0]
 a7c:	mov	x29, sp
 a80:	cmp	w8, #0x2
 a84:	b.ne	b40 <dl_load@@Base+0xec>  // b.any
 a88:	ldr	w8, [x0, #4]
 a8c:	tbnz	w8, #31, b40 <dl_load@@Base+0xec>
 a90:	adrp	x26, 12000 <dl_load@@Base+0x115ac>
 a94:	adrp	x19, 0 <memcpy@plt-0x8a0>
 a98:	adrp	x20, 0 <memcpy@plt-0x8a0>
 a9c:	mov	x25, xzr
 aa0:	mov	w24, wzr
 aa4:	add	x26, x26, #0x78
 aa8:	add	x19, x19, #0xf56
 aac:	add	x20, x20, #0xf8a
 ab0:	b	ac0 <dl_load@@Base+0x6c>
 ab4:	add	x25, x25, #0x30
 ab8:	cmp	x25, #0x90
 abc:	b.eq	b08 <dl_load@@Base+0xb4>  // b.none
 ac0:	add	x21, x26, x25
 ac4:	ldr	x8, [x21]
 ac8:	cbz	x8, b08 <dl_load@@Base+0xb4>
 acc:	ldr	x8, [x22, #272]
 ad0:	ldr	x0, [x23, #280]
 ad4:	mov	x1, x19
 ad8:	mov	x2, x21
 adc:	ldr	x8, [x8, #48]
 ae0:	blr	x8
 ae4:	cbnz	w0, ab4 <dl_load@@Base+0x60>
 ae8:	ldr	x8, [x22, #272]
 aec:	ldr	x0, [x23, #280]
 af0:	ldr	x2, [x21]
 af4:	mov	x1, x20
 af8:	ldr	x8, [x8, #104]
 afc:	blr	x8
 b00:	add	w24, w24, #0x1
 b04:	b	ab4 <dl_load@@Base+0x60>
 b08:	ldr	x8, [x22, #272]
 b0c:	ldr	x0, [x23, #280]
 b10:	adrp	x1, 1000 <dl_load@@Base+0x5ac>
 b14:	add	x1, x1, #0xd
 b18:	ldr	x8, [x8, #88]
 b1c:	blr	x8
 b20:	cmp	w24, #0x0
 b24:	ldp	x20, x19, [sp, #64]
 b28:	ldp	x22, x21, [sp, #48]
 b2c:	ldp	x24, x23, [sp, #32]
 b30:	ldp	x26, x25, [sp, #16]
 b34:	cset	w0, eq  // eq = none
 b38:	ldp	x29, x30, [sp], #80
 b3c:	ret
 b40:	adrp	x19, 11000 <dl_load@@Base+0x105ac>
 b44:	ldr	x19, [x19, #4048]
 b48:	adrp	x0, 0 <memcpy@plt-0x8a0>
 b4c:	add	x0, x0, #0xf34
 b50:	mov	w1, #0x22                  	// #34
 b54:	ldr	x3, [x19]
 b58:	mov	w2, #0x1                   	// #1
 b5c:	bl	920 <fwrite@plt>
 b60:	ldr	x8, [x22, #272]
 b64:	ldr	x0, [x19]
 b68:	adrp	x1, 0 <memcpy@plt-0x8a0>
 b6c:	add	x1, x1, #0xf57
 b70:	ldp	w4, w5, [x8]
 b74:	mov	w2, #0x2                   	// #2
 b78:	mov	w3, wzr
 b7c:	bl	970 <fprintf@plt>
 b80:	mov	w0, #0x1                   	// #1
 b84:	bl	8c0 <exit@plt>
 b88:	sub	sp, sp, #0x50
 b8c:	stp	x29, x30, [sp, #32]
 b90:	stp	x22, x21, [sp, #48]
 b94:	stp	x20, x19, [sp, #64]
 b98:	add	x29, sp, #0x20
 b9c:	mov	x19, x1
 ba0:	bl	8e0 <fork@plt>
 ba4:	mov	w20, w0
 ba8:	tbnz	w0, #31, c2c <dl_load@@Base+0x1d8>
 bac:	cbnz	w20, c50 <dl_load@@Base+0x1fc>
 bb0:	adrp	x22, 12000 <dl_load@@Base+0x115ac>
 bb4:	ldr	x8, [x22, #272]
 bb8:	adrp	x21, 12000 <dl_load@@Base+0x115ac>
 bbc:	ldr	x0, [x21, #280]
 bc0:	adrp	x1, 0 <memcpy@plt-0x8a0>
 bc4:	ldr	x8, [x8, #168]
 bc8:	adrp	x2, 0 <memcpy@plt-0x8a0>
 bcc:	add	x1, x1, #0xf56
 bd0:	add	x2, x2, #0xfb3
 bd4:	mov	x4, sp
 bd8:	mov	w3, #0x5                   	// #5
 bdc:	blr	x8
 be0:	cbz	w0, c50 <dl_load@@Base+0x1fc>
 be4:	ldr	w8, [sp]
 be8:	cmp	w8, #0x5
 bec:	b.ne	c70 <dl_load@@Base+0x21c>  // b.any
 bf0:	ldr	x21, [sp, #8]
 bf4:	bl	8f0 <getpid@plt>
 bf8:	adrp	x1, 0 <memcpy@plt-0x8a0>
 bfc:	scvtf	d0, w0
 c00:	add	x1, x1, #0xfdd
 c04:	mov	x0, x21
 c08:	bl	db4 <dl_load@@Base+0x360>
 c0c:	ldr	x21, [sp, #8]
 c10:	bl	900 <getppid@plt>
 c14:	adrp	x1, 0 <memcpy@plt-0x8a0>
 c18:	scvtf	d0, w0
 c1c:	add	x1, x1, #0xfdc
 c20:	mov	x0, x21
 c24:	bl	db4 <dl_load@@Base+0x360>
 c28:	b	c50 <dl_load@@Base+0x1fc>
 c2c:	adrp	x8, 12000 <dl_load@@Base+0x115ac>
 c30:	ldr	x8, [x8, #272]
 c34:	adrp	x9, 12000 <dl_load@@Base+0x115ac>
 c38:	ldr	x21, [x9, #280]
 c3c:	ldr	x22, [x8, #128]
 c40:	bl	950 <__errno_location@plt>
 c44:	ldr	w1, [x0]
 c48:	mov	x0, x21
 c4c:	blr	x22
 c50:	scvtf	d0, w20
 c54:	mov	x0, x19
 c58:	bl	e50 <dl_load@@Base+0x3fc>
 c5c:	ldp	x20, x19, [sp, #64]
 c60:	ldp	x22, x21, [sp, #48]
 c64:	ldp	x29, x30, [sp, #32]
 c68:	add	sp, sp, #0x50
 c6c:	ret
 c70:	ldr	x8, [x22, #272]
 c74:	ldr	w9, [x8, #24]
 c78:	cbz	w9, c50 <dl_load@@Base+0x1fc>
 c7c:	ldr	x22, [x8, #112]
 c80:	ldr	x21, [x21, #280]
 c84:	adrp	x1, 0 <memcpy@plt-0x8a0>
 c88:	add	x1, x1, #0xfbc
 c8c:	mov	w2, #0x5                   	// #5
 c90:	mov	x0, xzr
 c94:	bl	940 <dcgettext@plt>
 c98:	mov	x1, x0
 c9c:	mov	x0, x21
 ca0:	blr	x22
 ca4:	b	c50 <dl_load@@Base+0x1fc>
 ca8:	sub	sp, sp, #0x60
 cac:	stp	x22, x21, [sp, #64]
 cb0:	adrp	x21, 12000 <dl_load@@Base+0x115ac>
 cb4:	ldr	x8, [x21, #272]
 cb8:	stp	x29, x30, [sp, #32]
 cbc:	stp	x20, x19, [sp, #80]
 cc0:	adrp	x22, 12000 <dl_load@@Base+0x115ac>
 cc4:	ldr	x8, [x8, #152]
 cc8:	ldr	x0, [x22, #280]
 ccc:	mov	x19, x1
 cd0:	mov	x3, sp
 cd4:	mov	w2, #0x1                   	// #1
 cd8:	mov	x1, xzr
 cdc:	str	x23, [sp, #48]
 ce0:	add	x29, sp, #0x20
 ce4:	blr	x8
 ce8:	cbz	w0, d28 <dl_load@@Base+0x2d4>
 cec:	ldr	d0, [sp, #8]
 cf0:	mov	w2, #0x3                   	// #3
 cf4:	mov	x1, xzr
 cf8:	fcvtzs	w0, d0
 cfc:	bl	960 <waitpid@plt>
 d00:	mov	w20, w0
 d04:	tbz	w0, #31, d2c <dl_load@@Base+0x2d8>
 d08:	ldr	x8, [x21, #272]
 d0c:	ldr	x21, [x22, #280]
 d10:	ldr	x23, [x8, #128]
 d14:	bl	950 <__errno_location@plt>
 d18:	ldr	w1, [x0]
 d1c:	mov	x0, x21
 d20:	blr	x23
 d24:	b	d2c <dl_load@@Base+0x2d8>
 d28:	mov	w20, #0xffffffff            	// #-1
 d2c:	scvtf	d0, w20
 d30:	mov	x0, x19
 d34:	bl	e50 <dl_load@@Base+0x3fc>
 d38:	ldp	x20, x19, [sp, #80]
 d3c:	ldp	x22, x21, [sp, #64]
 d40:	ldr	x23, [sp, #48]
 d44:	ldp	x29, x30, [sp, #32]
 d48:	add	sp, sp, #0x60
 d4c:	ret
 d50:	stp	x29, x30, [sp, #-48]!
 d54:	mov	x0, xzr
 d58:	stp	x22, x21, [sp, #16]
 d5c:	stp	x20, x19, [sp, #32]
 d60:	mov	x29, sp
 d64:	mov	x19, x1
 d68:	bl	930 <wait@plt>
 d6c:	mov	w20, w0
 d70:	tbz	w0, #31, d98 <dl_load@@Base+0x344>
 d74:	adrp	x8, 12000 <dl_load@@Base+0x115ac>
 d78:	ldr	x8, [x8, #272]
 d7c:	adrp	x9, 12000 <dl_load@@Base+0x115ac>
 d80:	ldr	x21, [x9, #280]
 d84:	ldr	x22, [x8, #128]
 d88:	bl	950 <__errno_location@plt>
 d8c:	ldr	w1, [x0]
 d90:	mov	x0, x21
 d94:	blr	x22
 d98:	scvtf	d0, w20
 d9c:	mov	x0, x19
 da0:	bl	e50 <dl_load@@Base+0x3fc>
 da4:	ldp	x20, x19, [sp, #32]
 da8:	ldp	x22, x21, [sp, #16]
 dac:	ldp	x29, x30, [sp], #48
 db0:	ret
 db4:	sub	sp, sp, #0x80
 db8:	adrp	x8, 12000 <dl_load@@Base+0x115ac>
 dbc:	stp	x20, x19, [sp, #112]
 dc0:	ldr	x20, [x8, #272]
 dc4:	stp	x29, x30, [sp, #72]
 dc8:	stp	x22, x21, [sp, #96]
 dcc:	adrp	x8, 12000 <dl_load@@Base+0x115ac>
 dd0:	str	x23, [sp, #88]
 dd4:	ldr	x23, [x20, #232]
 dd8:	ldr	x21, [x8, #280]
 ddc:	mov	x22, x0
 de0:	mov	x0, x1
 de4:	str	d8, [sp, #64]
 de8:	add	x29, sp, #0x40
 dec:	mov	v8.16b, v0.16b
 df0:	mov	x19, x1
 df4:	bl	8b0 <strlen@plt>
 df8:	mov	x3, x0
 dfc:	add	x4, sp, #0x20
 e00:	mov	x0, x20
 e04:	mov	x1, x21
 e08:	mov	x2, x19
 e0c:	bl	e64 <dl_load@@Base+0x410>
 e10:	mov	x19, x0
 e14:	mov	x0, sp
 e18:	mov	v0.16b, v8.16b
 e1c:	bl	e50 <dl_load@@Base+0x3fc>
 e20:	mov	x3, x0
 e24:	mov	x0, x21
 e28:	mov	x1, x22
 e2c:	mov	x2, x19
 e30:	blr	x23
 e34:	ldp	x20, x19, [sp, #112]
 e38:	ldp	x22, x21, [sp, #96]
 e3c:	ldr	x23, [sp, #88]
 e40:	ldp	x29, x30, [sp, #72]
 e44:	ldr	d8, [sp, #64]
 e48:	add	sp, sp, #0x80
 e4c:	ret
 e50:	mov	w8, #0x1                   	// #1
 e54:	str	d0, [x0, #8]
 e58:	str	w8, [x0]
 e5c:	str	wzr, [x0, #16]
 e60:	ret
 e64:	stp	x29, x30, [sp, #-16]!
 e68:	mov	x29, sp
 e6c:	bl	e78 <dl_load@@Base+0x424>
 e70:	ldp	x29, x30, [sp], #16
 e74:	ret
 e78:	stp	x29, x30, [sp, #-80]!
 e7c:	movi	v0.2d, #0x0
 e80:	mov	w8, #0x2                   	// #2
 e84:	str	x25, [sp, #16]
 e88:	stp	x24, x23, [sp, #32]
 e8c:	stp	x22, x21, [sp, #48]
 e90:	stp	x20, x19, [sp, #64]
 e94:	stp	q0, q0, [x4]
 e98:	str	w8, [x4]
 e9c:	str	x3, [x4, #16]
 ea0:	ldr	x8, [x0, #280]
 ea4:	add	x25, x3, #0x1
 ea8:	mov	x24, x0
 eac:	mov	x0, x25
 eb0:	mov	x29, sp
 eb4:	mov	x19, x4
 eb8:	mov	x20, x3
 ebc:	mov	x21, x2
 ec0:	mov	x23, x1
 ec4:	blr	x8
 ec8:	mov	x22, x0
 ecc:	cbnz	x0, ef0 <dl_load@@Base+0x49c>
 ed0:	ldr	x8, [x24, #96]
 ed4:	adrp	x1, 0 <memcpy@plt-0x8a0>
 ed8:	adrp	x2, 0 <memcpy@plt-0x8a0>
 edc:	add	x1, x1, #0xfe1
 ee0:	add	x2, x2, #0xfff
 ee4:	mov	x0, x23
 ee8:	mov	x3, x25
 eec:	blr	x8
 ef0:	mov	x0, x22
 ef4:	mov	x1, x21
 ef8:	mov	x2, x20
 efc:	bl	8a0 <memcpy@plt>
 f00:	strb	wzr, [x22, x20]
 f04:	str	x22, [x19, #8]
 f08:	mov	x0, x19
 f0c:	ldp	x20, x19, [sp, #64]
 f10:	ldp	x22, x21, [sp, #48]
 f14:	ldp	x24, x23, [sp, #32]
 f18:	ldr	x25, [sp, #16]
 f1c:	ldp	x29, x30, [sp], #80
 f20:	ret

Disassembly of section .fini:

0000000000000f24 <.fini>:
 f24:	stp	x29, x30, [sp, #-16]!
 f28:	mov	x29, sp
 f2c:	ldp	x29, x30, [sp], #16
 f30:	ret
