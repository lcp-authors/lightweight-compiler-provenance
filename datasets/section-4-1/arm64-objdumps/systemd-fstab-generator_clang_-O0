
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-fstab-generator_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402210 <_init>:
  402210:	stp	x29, x30, [sp, #-16]!
  402214:	mov	x29, sp
  402218:	bl	4028d8 <call_weak_fn>
  40221c:	ldp	x29, x30, [sp], #16
  402220:	ret

Disassembly of section .plt:

0000000000402228 <__libc_start_main@plt-0x20>:
  402228:	stp	x16, x30, [sp, #-16]!
  40222c:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  402230:	ldr	x17, [x16, #3288]
  402234:	add	x16, x16, #0xcd8
  402238:	br	x17
  40223c:	nop
  402240:	nop
  402244:	nop

0000000000402248 <__libc_start_main@plt>:
  402248:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40224c:	ldr	x17, [x16, #3296]
  402250:	add	x16, x16, #0xce0
  402254:	br	x17

0000000000402258 <abort@plt>:
  402258:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40225c:	ldr	x17, [x16, #3304]
  402260:	add	x16, x16, #0xce8
  402264:	br	x17

0000000000402268 <__gmon_start__@plt>:
  402268:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40226c:	ldr	x17, [x16, #3312]
  402270:	add	x16, x16, #0xcf0
  402274:	br	x17

0000000000402278 <log_setup_generator@plt>:
  402278:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40227c:	ldr	x17, [x16, #3320]
  402280:	add	x16, x16, #0xcf8
  402284:	br	x17

0000000000402288 <log_get_max_level_realm@plt>:
  402288:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40228c:	ldr	x17, [x16, #3328]
  402290:	add	x16, x16, #0xd00
  402294:	br	x17

0000000000402298 <log_internal_realm@plt>:
  402298:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40229c:	ldr	x17, [x16, #3336]
  4022a0:	add	x16, x16, #0xd08
  4022a4:	br	x17

00000000004022a8 <abs@plt>:
  4022a8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4022ac:	ldr	x17, [x16, #3344]
  4022b0:	add	x16, x16, #0xd10
  4022b4:	br	x17

00000000004022b8 <ask_password_agent_close@plt>:
  4022b8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4022bc:	ldr	x17, [x16, #3352]
  4022c0:	add	x16, x16, #0xd18
  4022c4:	br	x17

00000000004022c8 <polkit_agent_close@plt>:
  4022c8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4022cc:	ldr	x17, [x16, #3360]
  4022d0:	add	x16, x16, #0xd20
  4022d4:	br	x17

00000000004022d8 <pager_close@plt>:
  4022d8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4022dc:	ldr	x17, [x16, #3368]
  4022e0:	add	x16, x16, #0xd28
  4022e4:	br	x17

00000000004022e8 <mac_selinux_finish@plt>:
  4022e8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4022ec:	ldr	x17, [x16, #3376]
  4022f0:	add	x16, x16, #0xd30
  4022f4:	br	x17

00000000004022f8 <log_assert_failed_realm@plt>:
  4022f8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4022fc:	ldr	x17, [x16, #3384]
  402300:	add	x16, x16, #0xd38
  402304:	br	x17

0000000000402308 <proc_cmdline_parse@plt>:
  402308:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40230c:	ldr	x17, [x16, #3392]
  402310:	add	x16, x16, #0xd40
  402314:	br	x17

0000000000402318 <in_initrd@plt>:
  402318:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40231c:	ldr	x17, [x16, #3400]
  402320:	add	x16, x16, #0xd48
  402324:	br	x17

0000000000402328 <generator_enable_remount_fs_service@plt>:
  402328:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40232c:	ldr	x17, [x16, #3408]
  402330:	add	x16, x16, #0xd50
  402334:	br	x17

0000000000402338 <free@plt>:
  402338:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40233c:	ldr	x17, [x16, #3416]
  402340:	add	x16, x16, #0xd58
  402344:	br	x17

0000000000402348 <strv_find@plt>:
  402348:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40234c:	ldr	x17, [x16, #3424]
  402350:	add	x16, x16, #0xd60
  402354:	br	x17

0000000000402358 <parse_boolean@plt>:
  402358:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40235c:	ldr	x17, [x16, #3432]
  402360:	add	x16, x16, #0xd68
  402364:	br	x17

0000000000402368 <strcmp@plt>:
  402368:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40236c:	ldr	x17, [x16, #3440]
  402370:	add	x16, x16, #0xd70
  402374:	br	x17

0000000000402378 <free_and_strdup@plt>:
  402378:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40237c:	ldr	x17, [x16, #3448]
  402380:	add	x16, x16, #0xd78
  402384:	br	x17

0000000000402388 <log_oom_internal@plt>:
  402388:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40238c:	ldr	x17, [x16, #3456]
  402390:	add	x16, x16, #0xd80
  402394:	br	x17

0000000000402398 <strextend_with_separator@plt>:
  402398:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40239c:	ldr	x17, [x16, #3464]
  4023a0:	add	x16, x16, #0xd88
  4023a4:	br	x17

00000000004023a8 <volatile_mode_from_string@plt>:
  4023a8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4023ac:	ldr	x17, [x16, #3472]
  4023b0:	add	x16, x16, #0xd90
  4023b4:	br	x17

00000000004023b8 <strdup@plt>:
  4023b8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4023bc:	ldr	x17, [x16, #3480]
  4023c0:	add	x16, x16, #0xd98
  4023c4:	br	x17

00000000004023c8 <path_equal@plt>:
  4023c8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4023cc:	ldr	x17, [x16, #3488]
  4023d0:	add	x16, x16, #0xda0
  4023d4:	br	x17

00000000004023d8 <fstab_node_to_udev_node@plt>:
  4023d8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4023dc:	ldr	x17, [x16, #3496]
  4023e0:	add	x16, x16, #0xda8
  4023e4:	br	x17

00000000004023e8 <strlen@plt>:
  4023e8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4023ec:	ldr	x17, [x16, #3504]
  4023f0:	add	x16, x16, #0xdb0
  4023f4:	br	x17

00000000004023f8 <stpcpy@plt>:
  4023f8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4023fc:	ldr	x17, [x16, #3512]
  402400:	add	x16, x16, #0xdb8
  402404:	br	x17

0000000000402408 <is_device_path@plt>:
  402408:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40240c:	ldr	x17, [x16, #3520]
  402410:	add	x16, x16, #0xdc0
  402414:	br	x17

0000000000402418 <generator_write_initrd_root_device_deps@plt>:
  402418:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40241c:	ldr	x17, [x16, #3528]
  402420:	add	x16, x16, #0xdc8
  402424:	br	x17

0000000000402428 <generator_add_symlink@plt>:
  402428:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40242c:	ldr	x17, [x16, #3536]
  402430:	add	x16, x16, #0xdd0
  402434:	br	x17

0000000000402438 <setmntent@plt>:
  402438:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40243c:	ldr	x17, [x16, #3544]
  402440:	add	x16, x16, #0xdd8
  402444:	br	x17

0000000000402448 <__errno_location@plt>:
  402448:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40244c:	ldr	x17, [x16, #3552]
  402450:	add	x16, x16, #0xde0
  402454:	br	x17

0000000000402458 <getmntent@plt>:
  402458:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40245c:	ldr	x17, [x16, #3560]
  402460:	add	x16, x16, #0xde8
  402464:	br	x17

0000000000402468 <path_is_read_only_fs@plt>:
  402468:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40246c:	ldr	x17, [x16, #3568]
  402470:	add	x16, x16, #0xdf0
  402474:	br	x17

0000000000402478 <is_path@plt>:
  402478:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40247c:	ldr	x17, [x16, #3576]
  402480:	add	x16, x16, #0xdf8
  402484:	br	x17

0000000000402488 <path_simplify@plt>:
  402488:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40248c:	ldr	x17, [x16, #3584]
  402490:	add	x16, x16, #0xe00
  402494:	br	x17

0000000000402498 <chase_symlinks@plt>:
  402498:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40249c:	ldr	x17, [x16, #3592]
  4024a0:	add	x16, x16, #0xe08
  4024a4:	br	x17

00000000004024a8 <fstab_filter_options@plt>:
  4024a8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4024ac:	ldr	x17, [x16, #3600]
  4024b0:	add	x16, x16, #0xe10
  4024b4:	br	x17

00000000004024b8 <unit_name_from_path@plt>:
  4024b8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4024bc:	ldr	x17, [x16, #3608]
  4024c0:	add	x16, x16, #0xe18
  4024c4:	br	x17

00000000004024c8 <generator_open_unit_file@plt>:
  4024c8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4024cc:	ldr	x17, [x16, #3616]
  4024d0:	add	x16, x16, #0xe20
  4024d4:	br	x17

00000000004024d8 <fprintf@plt>:
  4024d8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4024dc:	ldr	x17, [x16, #3624]
  4024e0:	add	x16, x16, #0xe28
  4024e4:	br	x17

00000000004024e8 <path_startswith@plt>:
  4024e8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4024ec:	ldr	x17, [x16, #3632]
  4024f0:	add	x16, x16, #0xe30
  4024f4:	br	x17

00000000004024f8 <generator_write_fsck_deps@plt>:
  4024f8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4024fc:	ldr	x17, [x16, #3640]
  402500:	add	x16, x16, #0xe38
  402504:	br	x17

0000000000402508 <generator_write_timeouts@plt>:
  402508:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40250c:	ldr	x17, [x16, #3648]
  402510:	add	x16, x16, #0xe40
  402514:	br	x17

0000000000402518 <generator_write_device_deps@plt>:
  402518:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40251c:	ldr	x17, [x16, #3656]
  402520:	add	x16, x16, #0xe48
  402524:	br	x17

0000000000402528 <fflush_and_check@plt>:
  402528:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40252c:	ldr	x17, [x16, #3664]
  402530:	add	x16, x16, #0xe50
  402534:	br	x17

0000000000402538 <generator_hook_up_mkfs@plt>:
  402538:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40253c:	ldr	x17, [x16, #3672]
  402540:	add	x16, x16, #0xe58
  402544:	br	x17

0000000000402548 <generator_hook_up_growfs@plt>:
  402548:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40254c:	ldr	x17, [x16, #3680]
  402550:	add	x16, x16, #0xe60
  402554:	br	x17

0000000000402558 <safe_fclose@plt>:
  402558:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40255c:	ldr	x17, [x16, #3688]
  402560:	add	x16, x16, #0xe68
  402564:	br	x17

0000000000402568 <strcmp_ptr@plt>:
  402568:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40256c:	ldr	x17, [x16, #3696]
  402570:	add	x16, x16, #0xe70
  402574:	br	x17

0000000000402578 <secure_getenv@plt>:
  402578:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40257c:	ldr	x17, [x16, #3704]
  402580:	add	x16, x16, #0xe78
  402584:	br	x17

0000000000402588 <fstab_extract_values@plt>:
  402588:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40258c:	ldr	x17, [x16, #3712]
  402590:	add	x16, x16, #0xe80
  402594:	br	x17

0000000000402598 <specifier_escape_strv@plt>:
  402598:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40259c:	ldr	x17, [x16, #3720]
  4025a0:	add	x16, x16, #0xe88
  4025a4:	br	x17

00000000004025a8 <strreplace@plt>:
  4025a8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4025ac:	ldr	x17, [x16, #3728]
  4025b0:	add	x16, x16, #0xe90
  4025b4:	br	x17

00000000004025b8 <unit_name_mangle_with_suffix@plt>:
  4025b8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4025bc:	ldr	x17, [x16, #3736]
  4025c0:	add	x16, x16, #0xe98
  4025c4:	br	x17

00000000004025c8 <strv_consume@plt>:
  4025c8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4025cc:	ldr	x17, [x16, #3744]
  4025d0:	add	x16, x16, #0xea0
  4025d4:	br	x17

00000000004025d8 <strv_free@plt>:
  4025d8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4025dc:	ldr	x17, [x16, #3752]
  4025e0:	add	x16, x16, #0xea8
  4025e4:	br	x17

00000000004025e8 <strv_join_prefix@plt>:
  4025e8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4025ec:	ldr	x17, [x16, #3760]
  4025f0:	add	x16, x16, #0xeb0
  4025f4:	br	x17

00000000004025f8 <parse_sec_fix_0@plt>:
  4025f8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4025fc:	ldr	x17, [x16, #3768]
  402600:	add	x16, x16, #0xeb8
  402604:	br	x17

0000000000402608 <format_timespan@plt>:
  402608:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40260c:	ldr	x17, [x16, #3776]
  402610:	add	x16, x16, #0xec0
  402614:	br	x17

0000000000402618 <endmntent@plt>:
  402618:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40261c:	ldr	x17, [x16, #3784]
  402620:	add	x16, x16, #0xec8
  402624:	br	x17

0000000000402628 <access@plt>:
  402628:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40262c:	ldr	x17, [x16, #3792]
  402630:	add	x16, x16, #0xed0
  402634:	br	x17

0000000000402638 <detect_container@plt>:
  402638:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40263c:	ldr	x17, [x16, #3800]
  402640:	add	x16, x16, #0xed8
  402644:	br	x17

0000000000402648 <generator_hook_up_mkswap@plt>:
  402648:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40264c:	ldr	x17, [x16, #3808]
  402650:	add	x16, x16, #0xee0
  402654:	br	x17

0000000000402658 <fstype_is_network@plt>:
  402658:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40265c:	ldr	x17, [x16, #3816]
  402660:	add	x16, x16, #0xee8
  402664:	br	x17

0000000000402668 <strchr@plt>:
  402668:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40266c:	ldr	x17, [x16, #3824]
  402670:	add	x16, x16, #0xef0
  402674:	br	x17

0000000000402678 <cg_is_legacy_wanted@plt>:
  402678:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40267c:	ldr	x17, [x16, #3832]
  402680:	add	x16, x16, #0xef8
  402684:	br	x17

0000000000402688 <cg_kernel_controllers@plt>:
  402688:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40268c:	ldr	x17, [x16, #3840]
  402690:	add	x16, x16, #0xf00
  402694:	br	x17

0000000000402698 <memset@plt>:
  402698:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40269c:	ldr	x17, [x16, #3848]
  4026a0:	add	x16, x16, #0xf08
  4026a4:	br	x17

00000000004026a8 <strjoin_real@plt>:
  4026a8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4026ac:	ldr	x17, [x16, #3856]
  4026b0:	add	x16, x16, #0xf10
  4026b4:	br	x17

00000000004026b8 <path_join_internal@plt>:
  4026b8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4026bc:	ldr	x17, [x16, #3864]
  4026c0:	add	x16, x16, #0xf18
  4026c4:	br	x17

00000000004026c8 <mount@plt>:
  4026c8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4026cc:	ldr	x17, [x16, #3872]
  4026d0:	add	x16, x16, #0xf20
  4026d4:	br	x17

00000000004026d8 <internal_hashmap_first_key_and_value@plt>:
  4026d8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4026dc:	ldr	x17, [x16, #3880]
  4026e0:	add	x16, x16, #0xf28
  4026e4:	br	x17

00000000004026e8 <internal_hashmap_remove@plt>:
  4026e8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4026ec:	ldr	x17, [x16, #3888]
  4026f0:	add	x16, x16, #0xf30
  4026f4:	br	x17

00000000004026f8 <label_fix@plt>:
  4026f8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4026fc:	ldr	x17, [x16, #3896]
  402700:	add	x16, x16, #0xf38
  402704:	br	x17

0000000000402708 <path_is_mount_point@plt>:
  402708:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40270c:	ldr	x17, [x16, #3904]
  402710:	add	x16, x16, #0xf40
  402714:	br	x17

0000000000402718 <mkdir_p_label@plt>:
  402718:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40271c:	ldr	x17, [x16, #3912]
  402720:	add	x16, x16, #0xf48
  402724:	br	x17

0000000000402728 <mkdir_p@plt>:
  402728:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40272c:	ldr	x17, [x16, #3920]
  402730:	add	x16, x16, #0xf50
  402734:	br	x17

0000000000402738 <umount@plt>:
  402738:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40273c:	ldr	x17, [x16, #3928]
  402740:	add	x16, x16, #0xf58
  402744:	br	x17

0000000000402748 <rmdir@plt>:
  402748:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40274c:	ldr	x17, [x16, #3936]
  402750:	add	x16, x16, #0xf60
  402754:	br	x17

0000000000402758 <symlink_idempotent@plt>:
  402758:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40275c:	ldr	x17, [x16, #3944]
  402760:	add	x16, x16, #0xf68
  402764:	br	x17

0000000000402768 <now@plt>:
  402768:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40276c:	ldr	x17, [x16, #3952]
  402770:	add	x16, x16, #0xf70
  402774:	br	x17

0000000000402778 <nftw64@plt>:
  402778:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40277c:	ldr	x17, [x16, #3960]
  402780:	add	x16, x16, #0xf78
  402784:	br	x17

0000000000402788 <dev_setup@plt>:
  402788:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40278c:	ldr	x17, [x16, #3968]
  402790:	add	x16, x16, #0xf80
  402794:	br	x17

0000000000402798 <mkdir_label@plt>:
  402798:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40279c:	ldr	x17, [x16, #3976]
  4027a0:	add	x16, x16, #0xf88
  4027a4:	br	x17

00000000004027a8 <make_inaccessible_nodes@plt>:
  4027a8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4027ac:	ldr	x17, [x16, #3984]
  4027b0:	add	x16, x16, #0xf90
  4027b4:	br	x17

00000000004027b8 <cg_all_unified@plt>:
  4027b8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4027bc:	ldr	x17, [x16, #3992]
  4027c0:	add	x16, x16, #0xf98
  4027c4:	br	x17

00000000004027c8 <statfs64@plt>:
  4027c8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4027cc:	ldr	x17, [x16, #4000]
  4027d0:	add	x16, x16, #0xfa0
  4027d4:	br	x17

00000000004027d8 <conf_files_list@plt>:
  4027d8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4027dc:	ldr	x17, [x16, #4008]
  4027e0:	add	x16, x16, #0xfa8
  4027e4:	br	x17

00000000004027e8 <fopen64@plt>:
  4027e8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4027ec:	ldr	x17, [x16, #4016]
  4027f0:	add	x16, x16, #0xfb0
  4027f4:	br	x17

00000000004027f8 <path_is_normalized@plt>:
  4027f8:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  4027fc:	ldr	x17, [x16, #4024]
  402800:	add	x16, x16, #0xfb8
  402804:	br	x17

0000000000402808 <path_is_absolute@plt>:
  402808:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40280c:	ldr	x17, [x16, #4032]
  402810:	add	x16, x16, #0xfc0
  402814:	br	x17

0000000000402818 <unlink@plt>:
  402818:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40281c:	ldr	x17, [x16, #4040]
  402820:	add	x16, x16, #0xfc8
  402824:	br	x17

0000000000402828 <internal_hashmap_free@plt>:
  402828:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40282c:	ldr	x17, [x16, #4048]
  402830:	add	x16, x16, #0xfd0
  402834:	br	x17

0000000000402838 <read_line_full@plt>:
  402838:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40283c:	ldr	x17, [x16, #4056]
  402840:	add	x16, x16, #0xfd8
  402844:	br	x17

0000000000402848 <mac_smack_use@plt>:
  402848:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40284c:	ldr	x17, [x16, #4064]
  402850:	add	x16, x16, #0xfe0
  402854:	br	x17

0000000000402858 <cg_is_unified_wanted@plt>:
  402858:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40285c:	ldr	x17, [x16, #4072]
  402860:	add	x16, x16, #0xfe8
  402864:	br	x17

0000000000402868 <cg_is_hybrid_wanted@plt>:
  402868:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40286c:	ldr	x17, [x16, #4080]
  402870:	add	x16, x16, #0xff0
  402874:	br	x17

0000000000402878 <is_efi_boot@plt>:
  402878:	adrp	x16, 41f000 <__FRAME_END__+0x14190>
  40287c:	ldr	x17, [x16, #4088]
  402880:	add	x16, x16, #0xff8
  402884:	br	x17

Disassembly of section .text:

0000000000402888 <_start>:
  402888:	mov	x29, #0x0                   	// #0
  40288c:	mov	x30, #0x0                   	// #0
  402890:	mov	x5, x0
  402894:	ldr	x1, [sp]
  402898:	add	x2, sp, #0x8
  40289c:	mov	x6, sp
  4028a0:	movz	x0, #0x0, lsl #48
  4028a4:	movk	x0, #0x0, lsl #32
  4028a8:	movk	x0, #0x40, lsl #16
  4028ac:	movk	x0, #0x2b84
  4028b0:	movz	x3, #0x0, lsl #48
  4028b4:	movk	x3, #0x0, lsl #32
  4028b8:	movk	x3, #0x40, lsl #16
  4028bc:	movk	x3, #0x96e8
  4028c0:	movz	x4, #0x0, lsl #48
  4028c4:	movk	x4, #0x0, lsl #32
  4028c8:	movk	x4, #0x40, lsl #16
  4028cc:	movk	x4, #0x9768
  4028d0:	bl	402248 <__libc_start_main@plt>
  4028d4:	bl	402258 <abort@plt>

00000000004028d8 <call_weak_fn>:
  4028d8:	adrp	x0, 41f000 <__FRAME_END__+0x14190>
  4028dc:	ldr	x0, [x0, #3240]
  4028e0:	cbz	x0, 4028e8 <call_weak_fn+0x10>
  4028e4:	b	402268 <__gmon_start__@plt>
  4028e8:	ret

00000000004028ec <deregister_tm_clones>:
  4028ec:	stp	x29, x30, [sp, #-32]!
  4028f0:	mov	x29, sp
  4028f4:	adrp	x0, 420000 <arg_fstab_enabled>
  4028f8:	add	x0, x0, #0x0
  4028fc:	str	x0, [sp, #24]
  402900:	ldr	x0, [sp, #24]
  402904:	str	x0, [sp, #24]
  402908:	ldr	x1, [sp, #24]
  40290c:	adrp	x0, 420000 <arg_fstab_enabled>
  402910:	add	x0, x0, #0x0
  402914:	cmp	x1, x0
  402918:	b.eq	402954 <deregister_tm_clones+0x68>  // b.none
  40291c:	adrp	x0, 409000 <relabel_extra+0xfc>
  402920:	add	x0, x0, #0x780
  402924:	ldr	x0, [x0]
  402928:	str	x0, [sp, #16]
  40292c:	ldr	x0, [sp, #16]
  402930:	str	x0, [sp, #16]
  402934:	ldr	x0, [sp, #16]
  402938:	cmp	x0, #0x0
  40293c:	b.eq	402958 <deregister_tm_clones+0x6c>  // b.none
  402940:	ldr	x1, [sp, #16]
  402944:	adrp	x0, 420000 <arg_fstab_enabled>
  402948:	add	x0, x0, #0x0
  40294c:	blr	x1
  402950:	b	402958 <deregister_tm_clones+0x6c>
  402954:	nop
  402958:	ldp	x29, x30, [sp], #32
  40295c:	ret

0000000000402960 <register_tm_clones>:
  402960:	stp	x29, x30, [sp, #-48]!
  402964:	mov	x29, sp
  402968:	adrp	x0, 420000 <arg_fstab_enabled>
  40296c:	add	x0, x0, #0x0
  402970:	str	x0, [sp, #40]
  402974:	ldr	x0, [sp, #40]
  402978:	str	x0, [sp, #40]
  40297c:	ldr	x1, [sp, #40]
  402980:	adrp	x0, 420000 <arg_fstab_enabled>
  402984:	add	x0, x0, #0x0
  402988:	sub	x0, x1, x0
  40298c:	asr	x0, x0, #3
  402990:	lsr	x1, x0, #63
  402994:	add	x0, x1, x0
  402998:	asr	x0, x0, #1
  40299c:	str	x0, [sp, #32]
  4029a0:	ldr	x0, [sp, #32]
  4029a4:	cmp	x0, #0x0
  4029a8:	b.eq	4029e8 <register_tm_clones+0x88>  // b.none
  4029ac:	adrp	x0, 409000 <relabel_extra+0xfc>
  4029b0:	add	x0, x0, #0x788
  4029b4:	ldr	x0, [x0]
  4029b8:	str	x0, [sp, #24]
  4029bc:	ldr	x0, [sp, #24]
  4029c0:	str	x0, [sp, #24]
  4029c4:	ldr	x0, [sp, #24]
  4029c8:	cmp	x0, #0x0
  4029cc:	b.eq	4029ec <register_tm_clones+0x8c>  // b.none
  4029d0:	ldr	x2, [sp, #24]
  4029d4:	ldr	x1, [sp, #32]
  4029d8:	adrp	x0, 420000 <arg_fstab_enabled>
  4029dc:	add	x0, x0, #0x0
  4029e0:	blr	x2
  4029e4:	b	4029ec <register_tm_clones+0x8c>
  4029e8:	nop
  4029ec:	ldp	x29, x30, [sp], #48
  4029f0:	ret

00000000004029f4 <__do_global_dtors_aux>:
  4029f4:	stp	x29, x30, [sp, #-16]!
  4029f8:	mov	x29, sp
  4029fc:	adrp	x0, 420000 <arg_fstab_enabled>
  402a00:	add	x0, x0, #0x40
  402a04:	ldrb	w0, [x0]
  402a08:	and	x0, x0, #0xff
  402a0c:	cmp	x0, #0x0
  402a10:	b.ne	402a2c <__do_global_dtors_aux+0x38>  // b.any
  402a14:	bl	4028ec <deregister_tm_clones>
  402a18:	adrp	x0, 420000 <arg_fstab_enabled>
  402a1c:	add	x0, x0, #0x40
  402a20:	mov	w1, #0x1                   	// #1
  402a24:	strb	w1, [x0]
  402a28:	b	402a30 <__do_global_dtors_aux+0x3c>
  402a2c:	nop
  402a30:	ldp	x29, x30, [sp], #16
  402a34:	ret

0000000000402a38 <frame_dummy>:
  402a38:	stp	x29, x30, [sp, #-16]!
  402a3c:	mov	x29, sp
  402a40:	bl	402960 <register_tm_clones>
  402a44:	nop
  402a48:	ldp	x29, x30, [sp], #16
  402a4c:	ret

0000000000402a50 <__unique_prefix_static_destructor_wrapper0>:
  402a50:	sub	sp, sp, #0x20
  402a54:	stp	x29, x30, [sp, #16]
  402a58:	add	x29, sp, #0x10
  402a5c:	str	x0, [sp, #8]
  402a60:	ldr	x8, [sp, #8]
  402a64:	str	x8, [sp]
  402a68:	ldr	x0, [sp]
  402a6c:	bl	40306c <freep>
  402a70:	ldp	x29, x30, [sp, #16]
  402a74:	add	sp, sp, #0x20
  402a78:	ret

0000000000402a7c <__unique_prefix_static_destructor_wrapper1>:
  402a7c:	sub	sp, sp, #0x20
  402a80:	stp	x29, x30, [sp, #16]
  402a84:	add	x29, sp, #0x10
  402a88:	str	x0, [sp, #8]
  402a8c:	ldr	x8, [sp, #8]
  402a90:	str	x8, [sp]
  402a94:	ldr	x0, [sp]
  402a98:	bl	40306c <freep>
  402a9c:	ldp	x29, x30, [sp, #16]
  402aa0:	add	sp, sp, #0x20
  402aa4:	ret

0000000000402aa8 <__unique_prefix_static_destructor_wrapper2>:
  402aa8:	sub	sp, sp, #0x20
  402aac:	stp	x29, x30, [sp, #16]
  402ab0:	add	x29, sp, #0x10
  402ab4:	str	x0, [sp, #8]
  402ab8:	ldr	x8, [sp, #8]
  402abc:	str	x8, [sp]
  402ac0:	ldr	x0, [sp]
  402ac4:	bl	40306c <freep>
  402ac8:	ldp	x29, x30, [sp, #16]
  402acc:	add	sp, sp, #0x20
  402ad0:	ret

0000000000402ad4 <__unique_prefix_static_destructor_wrapper3>:
  402ad4:	sub	sp, sp, #0x20
  402ad8:	stp	x29, x30, [sp, #16]
  402adc:	add	x29, sp, #0x10
  402ae0:	str	x0, [sp, #8]
  402ae4:	ldr	x8, [sp, #8]
  402ae8:	str	x8, [sp]
  402aec:	ldr	x0, [sp]
  402af0:	bl	40306c <freep>
  402af4:	ldp	x29, x30, [sp, #16]
  402af8:	add	sp, sp, #0x20
  402afc:	ret

0000000000402b00 <__unique_prefix_static_destructor_wrapper4>:
  402b00:	sub	sp, sp, #0x20
  402b04:	stp	x29, x30, [sp, #16]
  402b08:	add	x29, sp, #0x10
  402b0c:	str	x0, [sp, #8]
  402b10:	ldr	x8, [sp, #8]
  402b14:	str	x8, [sp]
  402b18:	ldr	x0, [sp]
  402b1c:	bl	40306c <freep>
  402b20:	ldp	x29, x30, [sp, #16]
  402b24:	add	sp, sp, #0x20
  402b28:	ret

0000000000402b2c <__unique_prefix_static_destructor_wrapper5>:
  402b2c:	sub	sp, sp, #0x20
  402b30:	stp	x29, x30, [sp, #16]
  402b34:	add	x29, sp, #0x10
  402b38:	str	x0, [sp, #8]
  402b3c:	ldr	x8, [sp, #8]
  402b40:	str	x8, [sp]
  402b44:	ldr	x0, [sp]
  402b48:	bl	40306c <freep>
  402b4c:	ldp	x29, x30, [sp, #16]
  402b50:	add	sp, sp, #0x20
  402b54:	ret

0000000000402b58 <__unique_prefix_static_destructor_wrapper6>:
  402b58:	sub	sp, sp, #0x20
  402b5c:	stp	x29, x30, [sp, #16]
  402b60:	add	x29, sp, #0x10
  402b64:	str	x0, [sp, #8]
  402b68:	ldr	x8, [sp, #8]
  402b6c:	str	x8, [sp]
  402b70:	ldr	x0, [sp]
  402b74:	bl	40306c <freep>
  402b78:	ldp	x29, x30, [sp, #16]
  402b7c:	add	sp, sp, #0x20
  402b80:	ret

0000000000402b84 <main>:
  402b84:	sub	sp, sp, #0x80
  402b88:	stp	x29, x30, [sp, #112]
  402b8c:	add	x29, sp, #0x70
  402b90:	adrp	x8, 409000 <relabel_extra+0xfc>
  402b94:	add	x8, x8, #0x790
  402b98:	add	x2, x8, #0x3
  402b9c:	adrp	x8, 409000 <relabel_extra+0xfc>
  402ba0:	add	x8, x8, #0x7ea
  402ba4:	stur	wzr, [x29, #-4]
  402ba8:	stur	w0, [x29, #-8]
  402bac:	stur	x1, [x29, #-16]
  402bb0:	ldur	w0, [x29, #-8]
  402bb4:	ldur	x1, [x29, #-16]
  402bb8:	stur	x2, [x29, #-48]
  402bbc:	str	x8, [sp, #56]
  402bc0:	bl	402d3c <save_argc_argv>
  402bc4:	bl	402278 <log_setup_generator@plt>
  402bc8:	ldur	w9, [x29, #-8]
  402bcc:	cmp	w9, #0x1
  402bd0:	b.le	402c6c <main+0xe8>
  402bd4:	ldur	w8, [x29, #-8]
  402bd8:	cmp	w8, #0x4
  402bdc:	b.eq	402c6c <main+0xe8>  // b.none
  402be0:	mov	w8, #0x3                   	// #3
  402be4:	stur	w8, [x29, #-24]
  402be8:	mov	w8, #0x16                  	// #22
  402bec:	movk	w8, #0x4000, lsl #16
  402bf0:	stur	w8, [x29, #-28]
  402bf4:	stur	wzr, [x29, #-32]
  402bf8:	ldur	w0, [x29, #-32]
  402bfc:	bl	402288 <log_get_max_level_realm@plt>
  402c00:	ldur	w8, [x29, #-24]
  402c04:	and	w8, w8, #0x7
  402c08:	cmp	w0, w8
  402c0c:	b.lt	402c44 <main+0xc0>  // b.tstop
  402c10:	ldur	w8, [x29, #-32]
  402c14:	ldur	w9, [x29, #-24]
  402c18:	orr	w0, w9, w8, lsl #10
  402c1c:	ldur	w1, [x29, #-28]
  402c20:	ldur	x2, [x29, #-48]
  402c24:	mov	w3, #0x389                 	// #905
  402c28:	adrp	x4, 409000 <relabel_extra+0xfc>
  402c2c:	add	x4, x4, #0x7b9
  402c30:	adrp	x5, 409000 <relabel_extra+0xfc>
  402c34:	add	x5, x5, #0x7be
  402c38:	bl	402298 <log_internal_realm@plt>
  402c3c:	str	w0, [sp, #52]
  402c40:	b	402c58 <main+0xd4>
  402c44:	ldur	w0, [x29, #-28]
  402c48:	bl	4022a8 <abs@plt>
  402c4c:	mov	w8, wzr
  402c50:	subs	w8, w8, w0, uxtb
  402c54:	str	w8, [sp, #52]
  402c58:	ldr	w8, [sp, #52]
  402c5c:	stur	w8, [x29, #-36]
  402c60:	ldur	w8, [x29, #-36]
  402c64:	stur	w8, [x29, #-4]
  402c68:	b	402d2c <main+0x1a8>
  402c6c:	ldur	w8, [x29, #-8]
  402c70:	cmp	w8, #0x1
  402c74:	b.le	402c88 <main+0x104>
  402c78:	ldur	x8, [x29, #-16]
  402c7c:	ldr	x8, [x8, #8]
  402c80:	str	x8, [sp, #40]
  402c84:	b	402c90 <main+0x10c>
  402c88:	ldr	x8, [sp, #56]
  402c8c:	str	x8, [sp, #40]
  402c90:	ldr	x8, [sp, #40]
  402c94:	ldur	w9, [x29, #-8]
  402c98:	cmp	w9, #0x1
  402c9c:	str	x8, [sp, #32]
  402ca0:	b.le	402cb4 <main+0x130>
  402ca4:	ldur	x8, [x29, #-16]
  402ca8:	ldr	x8, [x8, #16]
  402cac:	str	x8, [sp, #24]
  402cb0:	b	402cbc <main+0x138>
  402cb4:	ldr	x8, [sp, #56]
  402cb8:	str	x8, [sp, #24]
  402cbc:	ldr	x8, [sp, #24]
  402cc0:	ldur	w9, [x29, #-8]
  402cc4:	cmp	w9, #0x1
  402cc8:	str	x8, [sp, #16]
  402ccc:	b.le	402ce0 <main+0x15c>
  402cd0:	ldur	x8, [x29, #-16]
  402cd4:	ldr	x8, [x8, #24]
  402cd8:	str	x8, [sp, #8]
  402cdc:	b	402ce8 <main+0x164>
  402ce0:	ldr	x8, [sp, #56]
  402ce4:	str	x8, [sp, #8]
  402ce8:	ldr	x8, [sp, #8]
  402cec:	ldr	x0, [sp, #32]
  402cf0:	ldr	x1, [sp, #16]
  402cf4:	mov	x2, x8
  402cf8:	bl	402d70 <run>
  402cfc:	stur	w0, [x29, #-20]
  402d00:	bl	4022b8 <ask_password_agent_close@plt>
  402d04:	bl	4022c8 <polkit_agent_close@plt>
  402d08:	bl	4022d8 <pager_close@plt>
  402d0c:	bl	4022e8 <mac_selinux_finish@plt>
  402d10:	bl	402fec <static_destruct>
  402d14:	ldur	w9, [x29, #-20]
  402d18:	mov	w10, wzr
  402d1c:	mov	w11, #0x1                   	// #1
  402d20:	cmp	w9, #0x0
  402d24:	csel	w9, w11, w10, lt  // lt = tstop
  402d28:	stur	w9, [x29, #-4]
  402d2c:	ldur	w0, [x29, #-4]
  402d30:	ldp	x29, x30, [sp, #112]
  402d34:	add	sp, sp, #0x80
  402d38:	ret

0000000000402d3c <save_argc_argv>:
  402d3c:	sub	sp, sp, #0x10
  402d40:	adrp	x8, 420000 <arg_fstab_enabled>
  402d44:	add	x8, x8, #0x90
  402d48:	adrp	x9, 420000 <arg_fstab_enabled>
  402d4c:	add	x9, x9, #0x98
  402d50:	str	w0, [sp, #12]
  402d54:	str	x1, [sp]
  402d58:	ldr	w10, [sp, #12]
  402d5c:	str	w10, [x8]
  402d60:	ldr	x8, [sp]
  402d64:	str	x8, [x9]
  402d68:	add	sp, sp, #0x10
  402d6c:	ret

0000000000402d70 <run>:
  402d70:	sub	sp, sp, #0x60
  402d74:	stp	x29, x30, [sp, #80]
  402d78:	add	x29, sp, #0x50
  402d7c:	adrp	x8, 409000 <relabel_extra+0xfc>
  402d80:	add	x8, x8, #0x790
  402d84:	add	x8, x8, #0x3
  402d88:	stur	x0, [x29, #-8]
  402d8c:	stur	x1, [x29, #-16]
  402d90:	stur	x2, [x29, #-24]
  402d94:	stur	wzr, [x29, #-32]
  402d98:	stur	wzr, [x29, #-36]
  402d9c:	str	x8, [sp, #16]
  402da0:	ldur	x8, [x29, #-8]
  402da4:	adrp	x9, 420000 <arg_fstab_enabled>
  402da8:	add	x9, x9, #0x80
  402dac:	str	x8, [x9]
  402db0:	cmp	x8, #0x0
  402db4:	cset	w10, ne  // ne = any
  402db8:	mov	w11, #0x1                   	// #1
  402dbc:	eor	w10, w10, #0x1
  402dc0:	eor	w10, w10, w11
  402dc4:	eor	w10, w10, w11
  402dc8:	and	w10, w10, #0x1
  402dcc:	mov	w0, w10
  402dd0:	sxtw	x8, w0
  402dd4:	cbz	x8, 402dfc <run+0x8c>
  402dd8:	mov	w8, wzr
  402ddc:	mov	w0, w8
  402de0:	adrp	x1, 409000 <relabel_extra+0xfc>
  402de4:	add	x1, x1, #0x7ef
  402de8:	ldr	x2, [sp, #16]
  402dec:	mov	w3, #0x367                 	// #871
  402df0:	adrp	x4, 409000 <relabel_extra+0xfc>
  402df4:	add	x4, x4, #0x7ff
  402df8:	bl	4022f8 <log_assert_failed_realm@plt>
  402dfc:	ldur	x8, [x29, #-24]
  402e00:	adrp	x9, 420000 <arg_fstab_enabled>
  402e04:	add	x9, x9, #0x88
  402e08:	str	x8, [x9]
  402e0c:	cmp	x8, #0x0
  402e10:	cset	w10, ne  // ne = any
  402e14:	mov	w11, #0x1                   	// #1
  402e18:	eor	w10, w10, #0x1
  402e1c:	eor	w10, w10, w11
  402e20:	eor	w10, w10, w11
  402e24:	and	w10, w10, #0x1
  402e28:	mov	w0, w10
  402e2c:	sxtw	x8, w0
  402e30:	cbz	x8, 402e58 <run+0xe8>
  402e34:	mov	w8, wzr
  402e38:	mov	w0, w8
  402e3c:	adrp	x1, 409000 <relabel_extra+0xfc>
  402e40:	add	x1, x1, #0x831
  402e44:	ldr	x2, [sp, #16]
  402e48:	mov	w3, #0x368                 	// #872
  402e4c:	adrp	x4, 409000 <relabel_extra+0xfc>
  402e50:	add	x4, x4, #0x7ff
  402e54:	bl	4022f8 <log_assert_failed_realm@plt>
  402e58:	adrp	x0, 403000 <static_destruct+0x14>
  402e5c:	add	x0, x0, #0x94
  402e60:	mov	x8, xzr
  402e64:	mov	x1, x8
  402e68:	mov	w9, wzr
  402e6c:	mov	w2, w9
  402e70:	bl	402308 <proc_cmdline_parse@plt>
  402e74:	stur	w0, [x29, #-28]
  402e78:	ldur	w9, [x29, #-28]
  402e7c:	cmp	w9, #0x0
  402e80:	cset	w9, ge  // ge = tcont
  402e84:	tbnz	w9, #0, 402f04 <run+0x194>
  402e88:	mov	w8, #0x4                   	// #4
  402e8c:	str	w8, [sp, #40]
  402e90:	ldur	w8, [x29, #-28]
  402e94:	str	w8, [sp, #36]
  402e98:	str	wzr, [sp, #32]
  402e9c:	ldr	w0, [sp, #32]
  402ea0:	bl	402288 <log_get_max_level_realm@plt>
  402ea4:	ldr	w8, [sp, #40]
  402ea8:	and	w8, w8, #0x7
  402eac:	cmp	w0, w8
  402eb0:	b.lt	402ee8 <run+0x178>  // b.tstop
  402eb4:	ldr	w8, [sp, #32]
  402eb8:	ldr	w9, [sp, #40]
  402ebc:	orr	w0, w9, w8, lsl #10
  402ec0:	ldr	w1, [sp, #36]
  402ec4:	ldr	x2, [sp, #16]
  402ec8:	mov	w3, #0x36c                 	// #876
  402ecc:	adrp	x4, 409000 <relabel_extra+0xfc>
  402ed0:	add	x4, x4, #0x84b
  402ed4:	adrp	x5, 409000 <relabel_extra+0xfc>
  402ed8:	add	x5, x5, #0x84f
  402edc:	bl	402298 <log_internal_realm@plt>
  402ee0:	str	w0, [sp, #12]
  402ee4:	b	402efc <run+0x18c>
  402ee8:	ldr	w0, [sp, #36]
  402eec:	bl	4022a8 <abs@plt>
  402ef0:	mov	w8, wzr
  402ef4:	subs	w8, w8, w0, uxtb
  402ef8:	str	w8, [sp, #12]
  402efc:	ldr	w8, [sp, #12]
  402f00:	str	w8, [sp, #28]
  402f04:	bl	403630 <determine_root>
  402f08:	bl	402318 <in_initrd@plt>
  402f0c:	tbnz	w0, #0, 402f14 <run+0x1a4>
  402f10:	b	402f30 <run+0x1c0>
  402f14:	bl	403758 <add_sysroot_mount>
  402f18:	stur	w0, [x29, #-28]
  402f1c:	bl	403e78 <add_sysroot_usr_mount>
  402f20:	stur	w0, [x29, #-32]
  402f24:	bl	4044a4 <add_volatile_root>
  402f28:	stur	w0, [x29, #-36]
  402f2c:	b	402f38 <run+0x1c8>
  402f30:	bl	404550 <add_volatile_var>
  402f34:	stur	w0, [x29, #-28]
  402f38:	adrp	x8, 420000 <arg_fstab_enabled>
  402f3c:	add	x8, x8, #0x0
  402f40:	ldrb	w9, [x8]
  402f44:	tbnz	w9, #0, 402f4c <run+0x1dc>
  402f48:	b	402f90 <run+0x220>
  402f4c:	mov	w8, wzr
  402f50:	and	w0, w8, #0x1
  402f54:	bl	4045f0 <parse_fstab>
  402f58:	stur	w0, [x29, #-32]
  402f5c:	bl	402318 <in_initrd@plt>
  402f60:	tbnz	w0, #0, 402f68 <run+0x1f8>
  402f64:	b	402f7c <run+0x20c>
  402f68:	mov	w8, #0x1                   	// #1
  402f6c:	and	w0, w8, #0x1
  402f70:	bl	4045f0 <parse_fstab>
  402f74:	stur	w0, [x29, #-36]
  402f78:	b	402f90 <run+0x220>
  402f7c:	adrp	x8, 420000 <arg_fstab_enabled>
  402f80:	add	x8, x8, #0x80
  402f84:	ldr	x0, [x8]
  402f88:	bl	402328 <generator_enable_remount_fs_service@plt>
  402f8c:	stur	w0, [x29, #-36]
  402f90:	ldur	w8, [x29, #-28]
  402f94:	cmp	w8, #0x0
  402f98:	cset	w8, ge  // ge = tcont
  402f9c:	tbnz	w8, #0, 402fac <run+0x23c>
  402fa0:	ldur	w8, [x29, #-28]
  402fa4:	str	w8, [sp, #8]
  402fa8:	b	402fd8 <run+0x268>
  402fac:	ldur	w8, [x29, #-32]
  402fb0:	cmp	w8, #0x0
  402fb4:	cset	w8, ge  // ge = tcont
  402fb8:	tbnz	w8, #0, 402fc8 <run+0x258>
  402fbc:	ldur	w8, [x29, #-32]
  402fc0:	str	w8, [sp, #4]
  402fc4:	b	402fd0 <run+0x260>
  402fc8:	ldur	w8, [x29, #-36]
  402fcc:	str	w8, [sp, #4]
  402fd0:	ldr	w8, [sp, #4]
  402fd4:	str	w8, [sp, #8]
  402fd8:	ldr	w8, [sp, #8]
  402fdc:	mov	w0, w8
  402fe0:	ldp	x29, x30, [sp, #80]
  402fe4:	add	sp, sp, #0x60
  402fe8:	ret

0000000000402fec <static_destruct>:
  402fec:	sub	sp, sp, #0x20
  402ff0:	stp	x29, x30, [sp, #16]
  402ff4:	add	x29, sp, #0x10
  402ff8:	adrp	x8, 41f000 <__FRAME_END__+0x14190>
  402ffc:	ldr	x8, [x8, #3248]
  403000:	str	x8, [sp]
  403004:	cbnz	x8, 40300c <static_destruct+0x20>
  403008:	b	403060 <static_destruct+0x74>
  40300c:	ldr	x0, [sp]
  403010:	mov	x1, #0x8                   	// #8
  403014:	bl	4077e8 <ALIGN_TO>
  403018:	str	x0, [sp, #8]
  40301c:	ldr	x8, [sp, #8]
  403020:	adrp	x9, 41f000 <__FRAME_END__+0x14190>
  403024:	ldr	x9, [x9, #3256]
  403028:	cmp	x8, x9
  40302c:	b.cs	403060 <static_destruct+0x74>  // b.hs, b.nlast
  403030:	ldr	x8, [sp, #8]
  403034:	ldr	x8, [x8, #8]
  403038:	ldr	x9, [sp, #8]
  40303c:	ldr	x0, [x9]
  403040:	blr	x8
  403044:	ldr	x8, [sp, #8]
  403048:	add	x8, x8, #0x10
  40304c:	mov	x0, x8
  403050:	mov	x1, #0x8                   	// #8
  403054:	bl	4077e8 <ALIGN_TO>
  403058:	str	x0, [sp, #8]
  40305c:	b	40301c <static_destruct+0x30>
  403060:	ldp	x29, x30, [sp, #16]
  403064:	add	sp, sp, #0x20
  403068:	ret

000000000040306c <freep>:
  40306c:	sub	sp, sp, #0x20
  403070:	stp	x29, x30, [sp, #16]
  403074:	add	x29, sp, #0x10
  403078:	str	x0, [sp, #8]
  40307c:	ldr	x8, [sp, #8]
  403080:	ldr	x0, [x8]
  403084:	bl	402338 <free@plt>
  403088:	ldp	x29, x30, [sp, #16]
  40308c:	add	sp, sp, #0x20
  403090:	ret

0000000000403094 <parse_proc_cmdline_item>:
  403094:	sub	sp, sp, #0xa0
  403098:	stp	x29, x30, [sp, #144]
  40309c:	add	x29, sp, #0x90
  4030a0:	adrp	x8, 420000 <arg_fstab_enabled>
  4030a4:	add	x8, x8, #0x8
  4030a8:	adrp	x9, 409000 <relabel_extra+0xfc>
  4030ac:	add	x9, x9, #0x790
  4030b0:	add	x9, x9, #0x3
  4030b4:	adrp	x10, 409000 <relabel_extra+0xfc>
  4030b8:	add	x10, x10, #0x890
  4030bc:	sub	x11, x29, #0x40
  4030c0:	stur	x0, [x29, #-16]
  4030c4:	stur	x1, [x29, #-24]
  4030c8:	stur	x2, [x29, #-32]
  4030cc:	ldr	q0, [x8]
  4030d0:	stur	q0, [x29, #-64]
  4030d4:	ldr	x8, [x8, #16]
  4030d8:	stur	x8, [x29, #-48]
  4030dc:	ldur	x1, [x29, #-16]
  4030e0:	mov	x0, x11
  4030e4:	str	x9, [sp, #32]
  4030e8:	str	x10, [sp, #24]
  4030ec:	bl	402348 <strv_find@plt>
  4030f0:	cbz	x0, 4031c8 <parse_proc_cmdline_item+0x134>
  4030f4:	ldur	x8, [x29, #-24]
  4030f8:	cbz	x8, 40310c <parse_proc_cmdline_item+0x78>
  4030fc:	ldur	x0, [x29, #-24]
  403100:	bl	402358 <parse_boolean@plt>
  403104:	str	w0, [sp, #20]
  403108:	b	403114 <parse_proc_cmdline_item+0x80>
  40310c:	mov	w8, #0x1                   	// #1
  403110:	str	w8, [sp, #20]
  403114:	ldr	w8, [sp, #20]
  403118:	stur	w8, [x29, #-36]
  40311c:	ldur	w8, [x29, #-36]
  403120:	cmp	w8, #0x0
  403124:	cset	w8, ge  // ge = tcont
  403128:	tbnz	w8, #0, 4031a8 <parse_proc_cmdline_item+0x114>
  40312c:	mov	w8, #0x4                   	// #4
  403130:	stur	w8, [x29, #-68]
  403134:	str	wzr, [sp, #72]
  403138:	str	wzr, [sp, #68]
  40313c:	ldr	w0, [sp, #68]
  403140:	bl	402288 <log_get_max_level_realm@plt>
  403144:	ldur	w8, [x29, #-68]
  403148:	and	w8, w8, #0x7
  40314c:	cmp	w0, w8
  403150:	b.lt	403188 <parse_proc_cmdline_item+0xf4>  // b.tstop
  403154:	ldr	w8, [sp, #68]
  403158:	ldur	w9, [x29, #-68]
  40315c:	orr	w0, w9, w8, lsl #10
  403160:	ldr	w1, [sp, #72]
  403164:	ldur	x6, [x29, #-24]
  403168:	ldr	x2, [sp, #32]
  40316c:	mov	w3, #0x302                 	// #770
  403170:	ldr	x4, [sp, #24]
  403174:	adrp	x5, 409000 <relabel_extra+0xfc>
  403178:	add	x5, x5, #0x8a8
  40317c:	bl	402298 <log_internal_realm@plt>
  403180:	str	w0, [sp, #16]
  403184:	b	40319c <parse_proc_cmdline_item+0x108>
  403188:	ldr	w0, [sp, #72]
  40318c:	bl	4022a8 <abs@plt>
  403190:	mov	w8, wzr
  403194:	subs	w8, w8, w0, uxtb
  403198:	str	w8, [sp, #16]
  40319c:	ldr	w8, [sp, #16]
  4031a0:	str	w8, [sp, #64]
  4031a4:	b	4031c4 <parse_proc_cmdline_item+0x130>
  4031a8:	ldur	w8, [x29, #-36]
  4031ac:	cmp	w8, #0x0
  4031b0:	cset	w8, ne  // ne = any
  4031b4:	and	w8, w8, #0x1
  4031b8:	adrp	x9, 420000 <arg_fstab_enabled>
  4031bc:	add	x9, x9, #0x0
  4031c0:	strb	w8, [x9]
  4031c4:	b	40361c <parse_proc_cmdline_item+0x588>
  4031c8:	ldur	x0, [x29, #-16]
  4031cc:	adrp	x1, 409000 <relabel_extra+0xfc>
  4031d0:	add	x1, x1, #0x8d3
  4031d4:	bl	402368 <strcmp@plt>
  4031d8:	cbnz	w0, 403238 <parse_proc_cmdline_item+0x1a4>
  4031dc:	ldur	x0, [x29, #-16]
  4031e0:	ldur	x1, [x29, #-24]
  4031e4:	bl	404ed4 <proc_cmdline_value_missing>
  4031e8:	tbnz	w0, #0, 4031f0 <parse_proc_cmdline_item+0x15c>
  4031ec:	b	4031f8 <parse_proc_cmdline_item+0x164>
  4031f0:	stur	wzr, [x29, #-4]
  4031f4:	b	403620 <parse_proc_cmdline_item+0x58c>
  4031f8:	ldur	x1, [x29, #-24]
  4031fc:	adrp	x0, 420000 <arg_fstab_enabled>
  403200:	add	x0, x0, #0x48
  403204:	bl	402378 <free_and_strdup@plt>
  403208:	cmp	w0, #0x0
  40320c:	cset	w8, ge  // ge = tcont
  403210:	tbnz	w8, #0, 403234 <parse_proc_cmdline_item+0x1a0>
  403214:	mov	w8, wzr
  403218:	mov	w0, w8
  40321c:	ldr	x1, [sp, #32]
  403220:	mov	w2, #0x30c                 	// #780
  403224:	ldr	x3, [sp, #24]
  403228:	bl	402388 <log_oom_internal@plt>
  40322c:	stur	w0, [x29, #-4]
  403230:	b	403620 <parse_proc_cmdline_item+0x58c>
  403234:	b	40361c <parse_proc_cmdline_item+0x588>
  403238:	ldur	x0, [x29, #-16]
  40323c:	adrp	x1, 409000 <relabel_extra+0xfc>
  403240:	add	x1, x1, #0x8d8
  403244:	bl	402368 <strcmp@plt>
  403248:	cbnz	w0, 4032a8 <parse_proc_cmdline_item+0x214>
  40324c:	ldur	x0, [x29, #-16]
  403250:	ldur	x1, [x29, #-24]
  403254:	bl	404ed4 <proc_cmdline_value_missing>
  403258:	tbnz	w0, #0, 403260 <parse_proc_cmdline_item+0x1cc>
  40325c:	b	403268 <parse_proc_cmdline_item+0x1d4>
  403260:	stur	wzr, [x29, #-4]
  403264:	b	403620 <parse_proc_cmdline_item+0x58c>
  403268:	ldur	x1, [x29, #-24]
  40326c:	adrp	x0, 420000 <arg_fstab_enabled>
  403270:	add	x0, x0, #0x50
  403274:	bl	402378 <free_and_strdup@plt>
  403278:	cmp	w0, #0x0
  40327c:	cset	w8, ge  // ge = tcont
  403280:	tbnz	w8, #0, 4032a4 <parse_proc_cmdline_item+0x210>
  403284:	mov	w8, wzr
  403288:	mov	w0, w8
  40328c:	ldr	x1, [sp, #32]
  403290:	mov	w2, #0x314                 	// #788
  403294:	ldr	x3, [sp, #24]
  403298:	bl	402388 <log_oom_internal@plt>
  40329c:	stur	w0, [x29, #-4]
  4032a0:	b	403620 <parse_proc_cmdline_item+0x58c>
  4032a4:	b	40361c <parse_proc_cmdline_item+0x588>
  4032a8:	ldur	x0, [x29, #-16]
  4032ac:	adrp	x1, 409000 <relabel_extra+0xfc>
  4032b0:	add	x1, x1, #0x8e3
  4032b4:	bl	402368 <strcmp@plt>
  4032b8:	cbnz	w0, 403320 <parse_proc_cmdline_item+0x28c>
  4032bc:	ldur	x0, [x29, #-16]
  4032c0:	ldur	x1, [x29, #-24]
  4032c4:	bl	404ed4 <proc_cmdline_value_missing>
  4032c8:	tbnz	w0, #0, 4032d0 <parse_proc_cmdline_item+0x23c>
  4032cc:	b	4032d8 <parse_proc_cmdline_item+0x244>
  4032d0:	stur	wzr, [x29, #-4]
  4032d4:	b	403620 <parse_proc_cmdline_item+0x58c>
  4032d8:	ldur	x2, [x29, #-24]
  4032dc:	adrp	x0, 420000 <arg_fstab_enabled>
  4032e0:	add	x0, x0, #0x58
  4032e4:	adrp	x1, 409000 <relabel_extra+0xfc>
  4032e8:	add	x1, x1, #0x8ed
  4032ec:	mov	x8, xzr
  4032f0:	mov	x3, x8
  4032f4:	bl	402398 <strextend_with_separator@plt>
  4032f8:	cbnz	x0, 40331c <parse_proc_cmdline_item+0x288>
  4032fc:	mov	w8, wzr
  403300:	mov	w0, w8
  403304:	ldr	x1, [sp, #32]
  403308:	mov	w2, #0x31c                 	// #796
  40330c:	ldr	x3, [sp, #24]
  403310:	bl	402388 <log_oom_internal@plt>
  403314:	stur	w0, [x29, #-4]
  403318:	b	403620 <parse_proc_cmdline_item+0x58c>
  40331c:	b	40361c <parse_proc_cmdline_item+0x588>
  403320:	ldur	x0, [x29, #-16]
  403324:	adrp	x1, 409000 <relabel_extra+0xfc>
  403328:	add	x1, x1, #0x8ef
  40332c:	bl	402368 <strcmp@plt>
  403330:	cbnz	w0, 403390 <parse_proc_cmdline_item+0x2fc>
  403334:	ldur	x0, [x29, #-16]
  403338:	ldur	x1, [x29, #-24]
  40333c:	bl	404ed4 <proc_cmdline_value_missing>
  403340:	tbnz	w0, #0, 403348 <parse_proc_cmdline_item+0x2b4>
  403344:	b	403350 <parse_proc_cmdline_item+0x2bc>
  403348:	stur	wzr, [x29, #-4]
  40334c:	b	403620 <parse_proc_cmdline_item+0x58c>
  403350:	ldur	x1, [x29, #-24]
  403354:	adrp	x0, 420000 <arg_fstab_enabled>
  403358:	add	x0, x0, #0x60
  40335c:	bl	402378 <free_and_strdup@plt>
  403360:	cmp	w0, #0x0
  403364:	cset	w8, ge  // ge = tcont
  403368:	tbnz	w8, #0, 40338c <parse_proc_cmdline_item+0x2f8>
  40336c:	mov	w8, wzr
  403370:	mov	w0, w8
  403374:	ldr	x1, [sp, #32]
  403378:	mov	w2, #0x324                 	// #804
  40337c:	ldr	x3, [sp, #24]
  403380:	bl	402388 <log_oom_internal@plt>
  403384:	stur	w0, [x29, #-4]
  403388:	b	403620 <parse_proc_cmdline_item+0x58c>
  40338c:	b	40361c <parse_proc_cmdline_item+0x588>
  403390:	ldur	x0, [x29, #-16]
  403394:	adrp	x1, 409000 <relabel_extra+0xfc>
  403398:	add	x1, x1, #0x8f8
  40339c:	bl	402368 <strcmp@plt>
  4033a0:	cbnz	w0, 403400 <parse_proc_cmdline_item+0x36c>
  4033a4:	ldur	x0, [x29, #-16]
  4033a8:	ldur	x1, [x29, #-24]
  4033ac:	bl	404ed4 <proc_cmdline_value_missing>
  4033b0:	tbnz	w0, #0, 4033b8 <parse_proc_cmdline_item+0x324>
  4033b4:	b	4033c0 <parse_proc_cmdline_item+0x32c>
  4033b8:	stur	wzr, [x29, #-4]
  4033bc:	b	403620 <parse_proc_cmdline_item+0x58c>
  4033c0:	ldur	x1, [x29, #-24]
  4033c4:	adrp	x0, 420000 <arg_fstab_enabled>
  4033c8:	add	x0, x0, #0x68
  4033cc:	bl	402378 <free_and_strdup@plt>
  4033d0:	cmp	w0, #0x0
  4033d4:	cset	w8, ge  // ge = tcont
  4033d8:	tbnz	w8, #0, 4033fc <parse_proc_cmdline_item+0x368>
  4033dc:	mov	w8, wzr
  4033e0:	mov	w0, w8
  4033e4:	ldr	x1, [sp, #32]
  4033e8:	mov	w2, #0x32c                 	// #812
  4033ec:	ldr	x3, [sp, #24]
  4033f0:	bl	402388 <log_oom_internal@plt>
  4033f4:	stur	w0, [x29, #-4]
  4033f8:	b	403620 <parse_proc_cmdline_item+0x58c>
  4033fc:	b	40361c <parse_proc_cmdline_item+0x588>
  403400:	ldur	x0, [x29, #-16]
  403404:	adrp	x1, 409000 <relabel_extra+0xfc>
  403408:	add	x1, x1, #0x902
  40340c:	bl	402368 <strcmp@plt>
  403410:	cbnz	w0, 403470 <parse_proc_cmdline_item+0x3dc>
  403414:	ldur	x0, [x29, #-16]
  403418:	ldur	x1, [x29, #-24]
  40341c:	bl	404ed4 <proc_cmdline_value_missing>
  403420:	tbnz	w0, #0, 403428 <parse_proc_cmdline_item+0x394>
  403424:	b	403430 <parse_proc_cmdline_item+0x39c>
  403428:	stur	wzr, [x29, #-4]
  40342c:	b	403620 <parse_proc_cmdline_item+0x58c>
  403430:	ldur	x1, [x29, #-24]
  403434:	adrp	x0, 420000 <arg_fstab_enabled>
  403438:	add	x0, x0, #0x70
  40343c:	bl	402378 <free_and_strdup@plt>
  403440:	cmp	w0, #0x0
  403444:	cset	w8, ge  // ge = tcont
  403448:	tbnz	w8, #0, 40346c <parse_proc_cmdline_item+0x3d8>
  40344c:	mov	w8, wzr
  403450:	mov	w0, w8
  403454:	ldr	x1, [sp, #32]
  403458:	mov	w2, #0x334                 	// #820
  40345c:	ldr	x3, [sp, #24]
  403460:	bl	402388 <log_oom_internal@plt>
  403464:	stur	w0, [x29, #-4]
  403468:	b	403620 <parse_proc_cmdline_item+0x58c>
  40346c:	b	40361c <parse_proc_cmdline_item+0x588>
  403470:	ldur	x0, [x29, #-16]
  403474:	adrp	x1, 409000 <relabel_extra+0xfc>
  403478:	add	x1, x1, #0x912
  40347c:	bl	402368 <strcmp@plt>
  403480:	cbnz	w0, 4034e8 <parse_proc_cmdline_item+0x454>
  403484:	ldur	x0, [x29, #-16]
  403488:	ldur	x1, [x29, #-24]
  40348c:	bl	404ed4 <proc_cmdline_value_missing>
  403490:	tbnz	w0, #0, 403498 <parse_proc_cmdline_item+0x404>
  403494:	b	4034a0 <parse_proc_cmdline_item+0x40c>
  403498:	stur	wzr, [x29, #-4]
  40349c:	b	403620 <parse_proc_cmdline_item+0x58c>
  4034a0:	ldur	x2, [x29, #-24]
  4034a4:	adrp	x0, 420000 <arg_fstab_enabled>
  4034a8:	add	x0, x0, #0x78
  4034ac:	adrp	x1, 409000 <relabel_extra+0xfc>
  4034b0:	add	x1, x1, #0x8ed
  4034b4:	mov	x8, xzr
  4034b8:	mov	x3, x8
  4034bc:	bl	402398 <strextend_with_separator@plt>
  4034c0:	cbnz	x0, 4034e4 <parse_proc_cmdline_item+0x450>
  4034c4:	mov	w8, wzr
  4034c8:	mov	w0, w8
  4034cc:	ldr	x1, [sp, #32]
  4034d0:	mov	w2, #0x33c                 	// #828
  4034d4:	ldr	x3, [sp, #24]
  4034d8:	bl	402388 <log_oom_internal@plt>
  4034dc:	stur	w0, [x29, #-4]
  4034e0:	b	403620 <parse_proc_cmdline_item+0x58c>
  4034e4:	b	40361c <parse_proc_cmdline_item+0x588>
  4034e8:	ldur	x0, [x29, #-16]
  4034ec:	adrp	x1, 409000 <relabel_extra+0xfc>
  4034f0:	add	x1, x1, #0x921
  4034f4:	bl	402368 <strcmp@plt>
  4034f8:	cbnz	w0, 403518 <parse_proc_cmdline_item+0x484>
  4034fc:	ldur	x8, [x29, #-24]
  403500:	cbnz	x8, 403518 <parse_proc_cmdline_item+0x484>
  403504:	adrp	x8, 420000 <arg_fstab_enabled>
  403508:	add	x8, x8, #0x20
  40350c:	mov	w9, #0x1                   	// #1
  403510:	str	w9, [x8]
  403514:	b	40361c <parse_proc_cmdline_item+0x588>
  403518:	ldur	x0, [x29, #-16]
  40351c:	adrp	x1, 409000 <relabel_extra+0xfc>
  403520:	add	x1, x1, #0x924
  403524:	bl	402368 <strcmp@plt>
  403528:	cbnz	w0, 403544 <parse_proc_cmdline_item+0x4b0>
  40352c:	ldur	x8, [x29, #-24]
  403530:	cbnz	x8, 403544 <parse_proc_cmdline_item+0x4b0>
  403534:	adrp	x8, 420000 <arg_fstab_enabled>
  403538:	add	x8, x8, #0x20
  40353c:	str	wzr, [x8]
  403540:	b	40361c <parse_proc_cmdline_item+0x588>
  403544:	ldur	x0, [x29, #-16]
  403548:	adrp	x1, 409000 <relabel_extra+0xfc>
  40354c:	add	x1, x1, #0x927
  403550:	bl	402368 <strcmp@plt>
  403554:	cbnz	w0, 40361c <parse_proc_cmdline_item+0x588>
  403558:	ldur	x8, [x29, #-24]
  40355c:	cbz	x8, 40360c <parse_proc_cmdline_item+0x578>
  403560:	ldur	x0, [x29, #-24]
  403564:	bl	4023a8 <volatile_mode_from_string@plt>
  403568:	str	w0, [sp, #60]
  40356c:	ldr	w8, [sp, #60]
  403570:	cmp	w8, #0x0
  403574:	cset	w8, ge  // ge = tcont
  403578:	tbnz	w8, #0, 4035f8 <parse_proc_cmdline_item+0x564>
  40357c:	mov	w8, #0x4                   	// #4
  403580:	str	w8, [sp, #56]
  403584:	str	wzr, [sp, #52]
  403588:	str	wzr, [sp, #48]
  40358c:	ldr	w0, [sp, #48]
  403590:	bl	402288 <log_get_max_level_realm@plt>
  403594:	ldr	w8, [sp, #56]
  403598:	and	w8, w8, #0x7
  40359c:	cmp	w0, w8
  4035a0:	b.lt	4035d8 <parse_proc_cmdline_item+0x544>  // b.tstop
  4035a4:	ldr	w8, [sp, #48]
  4035a8:	ldr	w9, [sp, #56]
  4035ac:	orr	w0, w9, w8, lsl #10
  4035b0:	ldr	w1, [sp, #52]
  4035b4:	ldur	x6, [x29, #-24]
  4035b8:	ldr	x2, [sp, #32]
  4035bc:	mov	w3, #0x348                 	// #840
  4035c0:	ldr	x4, [sp, #24]
  4035c4:	adrp	x5, 409000 <relabel_extra+0xfc>
  4035c8:	add	x5, x5, #0x938
  4035cc:	bl	402298 <log_internal_realm@plt>
  4035d0:	str	w0, [sp, #12]
  4035d4:	b	4035ec <parse_proc_cmdline_item+0x558>
  4035d8:	ldr	w0, [sp, #52]
  4035dc:	bl	4022a8 <abs@plt>
  4035e0:	mov	w8, wzr
  4035e4:	subs	w8, w8, w0, uxtb
  4035e8:	str	w8, [sp, #12]
  4035ec:	ldr	w8, [sp, #12]
  4035f0:	str	w8, [sp, #44]
  4035f4:	b	403608 <parse_proc_cmdline_item+0x574>
  4035f8:	ldr	w8, [sp, #60]
  4035fc:	adrp	x9, 420000 <arg_fstab_enabled>
  403600:	add	x9, x9, #0x24
  403604:	str	w8, [x9]
  403608:	b	40361c <parse_proc_cmdline_item+0x588>
  40360c:	adrp	x8, 420000 <arg_fstab_enabled>
  403610:	add	x8, x8, #0x24
  403614:	mov	w9, #0x1                   	// #1
  403618:	str	w9, [x8]
  40361c:	stur	wzr, [x29, #-4]
  403620:	ldur	w0, [x29, #-4]
  403624:	ldp	x29, x30, [sp, #144]
  403628:	add	sp, sp, #0xa0
  40362c:	ret

0000000000403630 <determine_root>:
  403630:	sub	sp, sp, #0x40
  403634:	stp	x29, x30, [sp, #48]
  403638:	add	x29, sp, #0x30
  40363c:	adrp	x8, 420000 <arg_fstab_enabled>
  403640:	add	x8, x8, #0x48
  403644:	adrp	x9, 409000 <relabel_extra+0xfc>
  403648:	add	x9, x9, #0x790
  40364c:	add	x9, x9, #0x3
  403650:	ldr	x10, [x8]
  403654:	str	x8, [sp, #16]
  403658:	str	x9, [sp, #8]
  40365c:	cbz	x10, 403668 <determine_root+0x38>
  403660:	stur	wzr, [x29, #-4]
  403664:	b	403748 <determine_root+0x118>
  403668:	adrp	x8, 420000 <arg_fstab_enabled>
  40366c:	add	x8, x8, #0x60
  403670:	ldr	x8, [x8]
  403674:	cbnz	x8, 403680 <determine_root+0x50>
  403678:	stur	wzr, [x29, #-4]
  40367c:	b	403748 <determine_root+0x118>
  403680:	adrp	x0, 409000 <relabel_extra+0xfc>
  403684:	add	x0, x0, #0x9dd
  403688:	bl	4023b8 <strdup@plt>
  40368c:	ldr	x8, [sp, #16]
  403690:	str	x0, [x8]
  403694:	ldr	x9, [x8]
  403698:	cbnz	x9, 4036c0 <determine_root+0x90>
  40369c:	mov	w8, wzr
  4036a0:	mov	w0, w8
  4036a4:	ldr	x1, [sp, #8]
  4036a8:	mov	w2, #0x35d                 	// #861
  4036ac:	adrp	x3, 409000 <relabel_extra+0xfc>
  4036b0:	add	x3, x3, #0x9ee
  4036b4:	bl	402388 <log_oom_internal@plt>
  4036b8:	stur	w0, [x29, #-4]
  4036bc:	b	403748 <determine_root+0x118>
  4036c0:	mov	w8, #0x6                   	// #6
  4036c4:	stur	w8, [x29, #-8]
  4036c8:	stur	wzr, [x29, #-12]
  4036cc:	stur	wzr, [x29, #-16]
  4036d0:	ldur	w0, [x29, #-16]
  4036d4:	bl	402288 <log_get_max_level_realm@plt>
  4036d8:	ldur	w8, [x29, #-8]
  4036dc:	and	w8, w8, #0x7
  4036e0:	cmp	w0, w8
  4036e4:	b.lt	403724 <determine_root+0xf4>  // b.tstop
  4036e8:	ldur	w8, [x29, #-16]
  4036ec:	ldur	w9, [x29, #-8]
  4036f0:	orr	w0, w9, w8, lsl #10
  4036f4:	ldur	w1, [x29, #-12]
  4036f8:	ldr	x10, [sp, #16]
  4036fc:	ldr	x6, [x10]
  403700:	ldr	x2, [sp, #8]
  403704:	mov	w3, #0x35f                 	// #863
  403708:	adrp	x4, 409000 <relabel_extra+0xfc>
  40370c:	add	x4, x4, #0x9ee
  403710:	adrp	x5, 409000 <relabel_extra+0xfc>
  403714:	add	x5, x5, #0x9fd
  403718:	bl	402298 <log_internal_realm@plt>
  40371c:	str	w0, [sp, #4]
  403720:	b	403738 <determine_root+0x108>
  403724:	ldur	w0, [x29, #-12]
  403728:	bl	4022a8 <abs@plt>
  40372c:	mov	w8, wzr
  403730:	subs	w8, w8, w0, uxtb
  403734:	str	w8, [sp, #4]
  403738:	ldr	w8, [sp, #4]
  40373c:	stur	w8, [x29, #-20]
  403740:	mov	w8, #0x1                   	// #1
  403744:	stur	w8, [x29, #-4]
  403748:	ldur	w0, [x29, #-4]
  40374c:	ldp	x29, x30, [sp, #48]
  403750:	add	sp, sp, #0x40
  403754:	ret

0000000000403758 <add_sysroot_mount>:
  403758:	stp	x29, x30, [sp, #-32]!
  40375c:	str	x28, [sp, #16]
  403760:	mov	x29, sp
  403764:	sub	sp, sp, #0x140
  403768:	mov	x8, xzr
  40376c:	adrp	x9, 420000 <arg_fstab_enabled>
  403770:	add	x9, x9, #0x48
  403774:	adrp	x10, 409000 <relabel_extra+0xfc>
  403778:	add	x10, x10, #0x790
  40377c:	add	x10, x10, #0x3
  403780:	adrp	x11, 409000 <relabel_extra+0xfc>
  403784:	add	x11, x11, #0xa1a
  403788:	adrp	x12, 420000 <arg_fstab_enabled>
  40378c:	add	x12, x12, #0x58
  403790:	adrp	x13, 420000 <arg_fstab_enabled>
  403794:	add	x13, x13, #0x20
  403798:	stur	x8, [x29, #-16]
  40379c:	ldr	x0, [x9]
  4037a0:	stur	x9, [x29, #-184]
  4037a4:	stur	x10, [x29, #-192]
  4037a8:	stur	x11, [x29, #-200]
  4037ac:	stur	x12, [x29, #-208]
  4037b0:	stur	x13, [x29, #-216]
  4037b4:	bl	404fac <isempty>
  4037b8:	tbnz	w0, #0, 4037c0 <add_sysroot_mount+0x68>
  4037bc:	b	403844 <add_sysroot_mount+0xec>
  4037c0:	mov	w8, #0x7                   	// #7
  4037c4:	stur	w8, [x29, #-32]
  4037c8:	stur	wzr, [x29, #-36]
  4037cc:	stur	wzr, [x29, #-40]
  4037d0:	ldur	w0, [x29, #-40]
  4037d4:	bl	402288 <log_get_max_level_realm@plt>
  4037d8:	ldur	w8, [x29, #-32]
  4037dc:	and	w8, w8, #0x7
  4037e0:	cmp	w0, w8
  4037e4:	b.lt	403818 <add_sysroot_mount+0xc0>  // b.tstop
  4037e8:	ldur	w8, [x29, #-40]
  4037ec:	ldur	w9, [x29, #-32]
  4037f0:	orr	w0, w9, w8, lsl #10
  4037f4:	ldur	w1, [x29, #-36]
  4037f8:	ldur	x2, [x29, #-192]
  4037fc:	mov	w3, #0x273                 	// #627
  403800:	ldur	x4, [x29, #-200]
  403804:	adrp	x5, 409000 <relabel_extra+0xfc>
  403808:	add	x5, x5, #0xa2c
  40380c:	bl	402298 <log_internal_realm@plt>
  403810:	stur	w0, [x29, #-220]
  403814:	b	40382c <add_sysroot_mount+0xd4>
  403818:	ldur	w0, [x29, #-36]
  40381c:	bl	4022a8 <abs@plt>
  403820:	mov	w8, wzr
  403824:	subs	w8, w8, w0, uxtb
  403828:	stur	w8, [x29, #-220]
  40382c:	ldur	w8, [x29, #-220]
  403830:	stur	w8, [x29, #-44]
  403834:	stur	wzr, [x29, #-4]
  403838:	mov	w8, #0x1                   	// #1
  40383c:	stur	w8, [x29, #-48]
  403840:	b	403e5c <add_sysroot_mount+0x704>
  403844:	ldur	x8, [x29, #-184]
  403848:	ldr	x0, [x8]
  40384c:	adrp	x1, 409000 <relabel_extra+0xfc>
  403850:	add	x1, x1, #0xa65
  403854:	bl	402368 <strcmp@plt>
  403858:	cbnz	w0, 4038e0 <add_sysroot_mount+0x188>
  40385c:	mov	w8, #0x7                   	// #7
  403860:	stur	w8, [x29, #-52]
  403864:	stur	wzr, [x29, #-56]
  403868:	stur	wzr, [x29, #-60]
  40386c:	ldur	w0, [x29, #-60]
  403870:	bl	402288 <log_get_max_level_realm@plt>
  403874:	ldur	w8, [x29, #-52]
  403878:	and	w8, w8, #0x7
  40387c:	cmp	w0, w8
  403880:	b.lt	4038b4 <add_sysroot_mount+0x15c>  // b.tstop
  403884:	ldur	w8, [x29, #-60]
  403888:	ldur	w9, [x29, #-52]
  40388c:	orr	w0, w9, w8, lsl #10
  403890:	ldur	w1, [x29, #-56]
  403894:	ldur	x2, [x29, #-192]
  403898:	mov	w3, #0x279                 	// #633
  40389c:	ldur	x4, [x29, #-200]
  4038a0:	adrp	x5, 409000 <relabel_extra+0xfc>
  4038a4:	add	x5, x5, #0xa6e
  4038a8:	bl	402298 <log_internal_realm@plt>
  4038ac:	stur	w0, [x29, #-224]
  4038b0:	b	4038c8 <add_sysroot_mount+0x170>
  4038b4:	ldur	w0, [x29, #-56]
  4038b8:	bl	4022a8 <abs@plt>
  4038bc:	mov	w8, wzr
  4038c0:	subs	w8, w8, w0, uxtb
  4038c4:	stur	w8, [x29, #-224]
  4038c8:	ldur	w8, [x29, #-224]
  4038cc:	stur	w8, [x29, #-64]
  4038d0:	stur	wzr, [x29, #-4]
  4038d4:	mov	w8, #0x1                   	// #1
  4038d8:	stur	w8, [x29, #-48]
  4038dc:	b	403e5c <add_sysroot_mount+0x704>
  4038e0:	ldur	x8, [x29, #-184]
  4038e4:	ldr	x0, [x8]
  4038e8:	adrp	x1, 409000 <relabel_extra+0xfc>
  4038ec:	add	x1, x1, #0xaab
  4038f0:	bl	4023c8 <path_equal@plt>
  4038f4:	tbnz	w0, #0, 4038fc <add_sysroot_mount+0x1a4>
  4038f8:	b	403980 <add_sysroot_mount+0x228>
  4038fc:	mov	w8, #0x7                   	// #7
  403900:	stur	w8, [x29, #-68]
  403904:	stur	wzr, [x29, #-72]
  403908:	stur	wzr, [x29, #-76]
  40390c:	ldur	w0, [x29, #-76]
  403910:	bl	402288 <log_get_max_level_realm@plt>
  403914:	ldur	w8, [x29, #-68]
  403918:	and	w8, w8, #0x7
  40391c:	cmp	w0, w8
  403920:	b.lt	403954 <add_sysroot_mount+0x1fc>  // b.tstop
  403924:	ldur	w8, [x29, #-76]
  403928:	ldur	w9, [x29, #-68]
  40392c:	orr	w0, w9, w8, lsl #10
  403930:	ldur	w1, [x29, #-72]
  403934:	ldur	x2, [x29, #-192]
  403938:	mov	w3, #0x27f                 	// #639
  40393c:	ldur	x4, [x29, #-200]
  403940:	adrp	x5, 409000 <relabel_extra+0xfc>
  403944:	add	x5, x5, #0xab4
  403948:	bl	402298 <log_internal_realm@plt>
  40394c:	stur	w0, [x29, #-228]
  403950:	b	403968 <add_sysroot_mount+0x210>
  403954:	ldur	w0, [x29, #-72]
  403958:	bl	4022a8 <abs@plt>
  40395c:	mov	w8, wzr
  403960:	subs	w8, w8, w0, uxtb
  403964:	stur	w8, [x29, #-228]
  403968:	ldur	w8, [x29, #-228]
  40396c:	stur	w8, [x29, #-80]
  403970:	stur	wzr, [x29, #-4]
  403974:	mov	w8, #0x1                   	// #1
  403978:	stur	w8, [x29, #-48]
  40397c:	b	403e5c <add_sysroot_mount+0x704>
  403980:	ldur	x8, [x29, #-184]
  403984:	ldr	x0, [x8]
  403988:	bl	4023d8 <fstab_node_to_udev_node@plt>
  40398c:	stur	x0, [x29, #-16]
  403990:	ldur	x8, [x29, #-16]
  403994:	cbnz	x8, 4039c0 <add_sysroot_mount+0x268>
  403998:	mov	w8, wzr
  40399c:	mov	w0, w8
  4039a0:	ldur	x1, [x29, #-192]
  4039a4:	mov	w2, #0x285                 	// #645
  4039a8:	ldur	x3, [x29, #-200]
  4039ac:	bl	402388 <log_oom_internal@plt>
  4039b0:	stur	w0, [x29, #-4]
  4039b4:	mov	w8, #0x1                   	// #1
  4039b8:	stur	w8, [x29, #-48]
  4039bc:	b	403e5c <add_sysroot_mount+0x704>
  4039c0:	ldur	x8, [x29, #-208]
  4039c4:	ldr	x9, [x8]
  4039c8:	cbnz	x9, 4039f4 <add_sysroot_mount+0x29c>
  4039cc:	ldur	x8, [x29, #-216]
  4039d0:	ldr	w9, [x8]
  4039d4:	adrp	x10, 409000 <relabel_extra+0xfc>
  4039d8:	add	x10, x10, #0x924
  4039dc:	adrp	x11, 409000 <relabel_extra+0xfc>
  4039e0:	add	x11, x11, #0x921
  4039e4:	cmp	w9, #0x0
  4039e8:	csel	x10, x11, x10, gt
  4039ec:	stur	x10, [x29, #-24]
  4039f0:	b	403c78 <add_sysroot_mount+0x520>
  4039f4:	ldur	x8, [x29, #-216]
  4039f8:	ldr	w9, [x8]
  4039fc:	cmp	w9, #0x0
  403a00:	cset	w9, ge  // ge = tcont
  403a04:	tbnz	w9, #0, 403a20 <add_sysroot_mount+0x2c8>
  403a08:	ldur	x8, [x29, #-208]
  403a0c:	ldr	x0, [x8]
  403a10:	adrp	x1, 40a000 <_fini+0x894>
  403a14:	add	x1, x1, #0xbf0
  403a18:	bl	404fec <fstab_test_option>
  403a1c:	tbnz	w0, #0, 403c6c <add_sysroot_mount+0x514>
  403a20:	ldur	x8, [x29, #-208]
  403a24:	ldr	x9, [x8]
  403a28:	sub	x10, x29, #0x68
  403a2c:	stur	x9, [x29, #-104]
  403a30:	adrp	x9, 409000 <relabel_extra+0xfc>
  403a34:	add	x9, x9, #0x8ed
  403a38:	str	x9, [x10, #8]
  403a3c:	ldur	x9, [x29, #-216]
  403a40:	ldr	w11, [x9]
  403a44:	adrp	x12, 409000 <relabel_extra+0xfc>
  403a48:	add	x12, x12, #0x924
  403a4c:	adrp	x13, 409000 <relabel_extra+0xfc>
  403a50:	add	x13, x13, #0x921
  403a54:	cmp	w11, #0x0
  403a58:	csel	x12, x13, x12, gt
  403a5c:	str	x12, [x10, #16]
  403a60:	stur	xzr, [x29, #-128]
  403a64:	stur	xzr, [x29, #-136]
  403a68:	ldur	x8, [x29, #-136]
  403a6c:	mov	w9, #0x0                   	// #0
  403a70:	cmp	x8, #0x3
  403a74:	stur	w9, [x29, #-232]
  403a78:	b.cs	403aa0 <add_sysroot_mount+0x348>  // b.hs, b.nlast
  403a7c:	ldur	x8, [x29, #-136]
  403a80:	mov	x9, #0x8                   	// #8
  403a84:	mul	x8, x9, x8
  403a88:	sub	x9, x29, #0x68
  403a8c:	add	x8, x9, x8
  403a90:	ldr	x8, [x8]
  403a94:	cmp	x8, #0x0
  403a98:	cset	w10, ne  // ne = any
  403a9c:	stur	w10, [x29, #-232]
  403aa0:	ldur	w8, [x29, #-232]
  403aa4:	tbnz	w8, #0, 403aac <add_sysroot_mount+0x354>
  403aa8:	b	403ae4 <add_sysroot_mount+0x38c>
  403aac:	ldur	x8, [x29, #-136]
  403ab0:	mov	x9, #0x8                   	// #8
  403ab4:	mul	x8, x9, x8
  403ab8:	sub	x9, x29, #0x68
  403abc:	add	x8, x9, x8
  403ac0:	ldr	x0, [x8]
  403ac4:	bl	4023e8 <strlen@plt>
  403ac8:	ldur	x8, [x29, #-128]
  403acc:	add	x8, x8, x0
  403ad0:	stur	x8, [x29, #-128]
  403ad4:	ldur	x8, [x29, #-136]
  403ad8:	add	x8, x8, #0x1
  403adc:	stur	x8, [x29, #-136]
  403ae0:	b	403a68 <add_sysroot_mount+0x310>
  403ae4:	ldur	x8, [x29, #-128]
  403ae8:	add	x8, x8, #0x1
  403aec:	stur	x8, [x29, #-144]
  403af0:	ldur	x1, [x29, #-144]
  403af4:	mov	x0, #0x1                   	// #1
  403af8:	bl	405040 <size_multiply_overflow>
  403afc:	mov	w8, #0x1                   	// #1
  403b00:	eor	w9, w0, #0x1
  403b04:	eor	w9, w9, w8
  403b08:	eor	w9, w9, w8
  403b0c:	eor	w8, w9, w8
  403b10:	and	w8, w8, #0x1
  403b14:	mov	w1, w8
  403b18:	sxtw	x10, w1
  403b1c:	cbz	x10, 403b44 <add_sysroot_mount+0x3ec>
  403b20:	mov	w8, wzr
  403b24:	mov	w0, w8
  403b28:	adrp	x1, 409000 <relabel_extra+0xfc>
  403b2c:	add	x1, x1, #0xaf1
  403b30:	ldur	x2, [x29, #-192]
  403b34:	mov	w3, #0x28b                 	// #651
  403b38:	adrp	x4, 409000 <relabel_extra+0xfc>
  403b3c:	add	x4, x4, #0xb1c
  403b40:	bl	4022f8 <log_assert_failed_realm@plt>
  403b44:	ldur	x8, [x29, #-144]
  403b48:	mov	x9, #0x1                   	// #1
  403b4c:	mul	x8, x9, x8
  403b50:	cmp	x8, #0x400, lsl #12
  403b54:	cset	w10, ls  // ls = plast
  403b58:	mov	w11, #0x1                   	// #1
  403b5c:	eor	w10, w10, #0x1
  403b60:	eor	w10, w10, w11
  403b64:	eor	w10, w10, w11
  403b68:	and	w10, w10, #0x1
  403b6c:	mov	w0, w10
  403b70:	sxtw	x8, w0
  403b74:	cbz	x8, 403b9c <add_sysroot_mount+0x444>
  403b78:	mov	w8, wzr
  403b7c:	mov	w0, w8
  403b80:	adrp	x1, 409000 <relabel_extra+0xfc>
  403b84:	add	x1, x1, #0xb38
  403b88:	ldur	x2, [x29, #-192]
  403b8c:	mov	w3, #0x28b                 	// #651
  403b90:	adrp	x4, 409000 <relabel_extra+0xfc>
  403b94:	add	x4, x4, #0xb1c
  403b98:	bl	4022f8 <log_assert_failed_realm@plt>
  403b9c:	ldur	x8, [x29, #-144]
  403ba0:	mov	x9, #0x1                   	// #1
  403ba4:	mul	x8, x9, x8
  403ba8:	mul	x8, x8, x9
  403bac:	add	x8, x8, #0xf
  403bb0:	and	x8, x8, #0xfffffffffffffff0
  403bb4:	mov	x9, sp
  403bb8:	subs	x8, x9, x8
  403bbc:	mov	sp, x8
  403bc0:	stur	x8, [x29, #-152]
  403bc4:	ldur	x8, [x29, #-152]
  403bc8:	stur	x8, [x29, #-112]
  403bcc:	stur	x8, [x29, #-120]
  403bd0:	stur	xzr, [x29, #-136]
  403bd4:	ldur	x8, [x29, #-136]
  403bd8:	mov	w9, #0x0                   	// #0
  403bdc:	cmp	x8, #0x3
  403be0:	stur	w9, [x29, #-236]
  403be4:	b.cs	403c0c <add_sysroot_mount+0x4b4>  // b.hs, b.nlast
  403be8:	ldur	x8, [x29, #-136]
  403bec:	mov	x9, #0x8                   	// #8
  403bf0:	mul	x8, x9, x8
  403bf4:	sub	x9, x29, #0x68
  403bf8:	add	x8, x9, x8
  403bfc:	ldr	x8, [x8]
  403c00:	cmp	x8, #0x0
  403c04:	cset	w10, ne  // ne = any
  403c08:	stur	w10, [x29, #-236]
  403c0c:	ldur	w8, [x29, #-236]
  403c10:	tbnz	w8, #0, 403c18 <add_sysroot_mount+0x4c0>
  403c14:	b	403c4c <add_sysroot_mount+0x4f4>
  403c18:	ldur	x0, [x29, #-120]
  403c1c:	ldur	x8, [x29, #-136]
  403c20:	mov	x9, #0x8                   	// #8
  403c24:	mul	x8, x9, x8
  403c28:	sub	x9, x29, #0x68
  403c2c:	add	x8, x9, x8
  403c30:	ldr	x1, [x8]
  403c34:	bl	4023f8 <stpcpy@plt>
  403c38:	stur	x0, [x29, #-120]
  403c3c:	ldur	x8, [x29, #-136]
  403c40:	add	x8, x8, #0x1
  403c44:	stur	x8, [x29, #-136]
  403c48:	b	403bd4 <add_sysroot_mount+0x47c>
  403c4c:	ldur	x8, [x29, #-120]
  403c50:	mov	w9, #0x0                   	// #0
  403c54:	strb	w9, [x8]
  403c58:	ldur	x8, [x29, #-112]
  403c5c:	stur	x8, [x29, #-160]
  403c60:	ldur	x8, [x29, #-160]
  403c64:	stur	x8, [x29, #-24]
  403c68:	b	403c78 <add_sysroot_mount+0x520>
  403c6c:	ldur	x8, [x29, #-208]
  403c70:	ldr	x9, [x8]
  403c74:	stur	x9, [x29, #-24]
  403c78:	mov	w8, #0x7                   	// #7
  403c7c:	stur	w8, [x29, #-164]
  403c80:	stur	wzr, [x29, #-168]
  403c84:	stur	wzr, [x29, #-172]
  403c88:	ldur	w0, [x29, #-172]
  403c8c:	bl	402288 <log_get_max_level_realm@plt>
  403c90:	ldur	w8, [x29, #-164]
  403c94:	and	w8, w8, #0x7
  403c98:	cmp	w0, w8
  403c9c:	b.lt	403d18 <add_sysroot_mount+0x5c0>  // b.tstop
  403ca0:	ldur	w8, [x29, #-172]
  403ca4:	ldur	w9, [x29, #-164]
  403ca8:	orr	w0, w9, w8, lsl #10
  403cac:	ldur	w1, [x29, #-168]
  403cb0:	ldur	x6, [x29, #-16]
  403cb4:	adrp	x10, 420000 <arg_fstab_enabled>
  403cb8:	add	x10, x10, #0x50
  403cbc:	ldr	x10, [x10]
  403cc0:	stur	w0, [x29, #-240]
  403cc4:	mov	x0, x10
  403cc8:	stur	w1, [x29, #-244]
  403ccc:	stur	x6, [x29, #-256]
  403cd0:	bl	4050a8 <strna>
  403cd4:	ldur	w8, [x29, #-240]
  403cd8:	sub	x9, x29, #0x8
  403cdc:	stur	x0, [x9, #-256]
  403ce0:	mov	w0, w8
  403ce4:	ldur	w1, [x29, #-244]
  403ce8:	ldur	x2, [x29, #-192]
  403cec:	mov	w3, #0x28f                 	// #655
  403cf0:	ldur	x4, [x29, #-200]
  403cf4:	adrp	x5, 409000 <relabel_extra+0xfc>
  403cf8:	add	x5, x5, #0xb57
  403cfc:	ldur	x6, [x29, #-256]
  403d00:	sub	x8, x29, #0x8
  403d04:	ldur	x7, [x8, #-256]
  403d08:	bl	402298 <log_internal_realm@plt>
  403d0c:	sub	x8, x29, #0xc
  403d10:	stur	w0, [x8, #-256]
  403d14:	b	403d30 <add_sysroot_mount+0x5d8>
  403d18:	ldur	w0, [x29, #-168]
  403d1c:	bl	4022a8 <abs@plt>
  403d20:	mov	w8, wzr
  403d24:	subs	w8, w8, w0, uxtb
  403d28:	sub	x9, x29, #0xc
  403d2c:	stur	w8, [x9, #-256]
  403d30:	sub	x8, x29, #0xc
  403d34:	ldur	w8, [x8, #-256]
  403d38:	stur	w8, [x29, #-176]
  403d3c:	ldur	x0, [x29, #-16]
  403d40:	bl	402408 <is_device_path@plt>
  403d44:	tbnz	w0, #0, 403d4c <add_sysroot_mount+0x5f4>
  403d48:	b	403d88 <add_sysroot_mount+0x630>
  403d4c:	adrp	x8, 420000 <arg_fstab_enabled>
  403d50:	add	x8, x8, #0x80
  403d54:	ldr	x0, [x8]
  403d58:	ldur	x1, [x29, #-16]
  403d5c:	bl	402418 <generator_write_initrd_root_device_deps@plt>
  403d60:	stur	w0, [x29, #-28]
  403d64:	ldur	w9, [x29, #-28]
  403d68:	cmp	w9, #0x0
  403d6c:	cset	w9, ge  // ge = tcont
  403d70:	tbnz	w9, #0, 403d88 <add_sysroot_mount+0x630>
  403d74:	ldur	w8, [x29, #-28]
  403d78:	stur	w8, [x29, #-4]
  403d7c:	mov	w8, #0x1                   	// #1
  403d80:	stur	w8, [x29, #-48]
  403d84:	b	403e5c <add_sysroot_mount+0x704>
  403d88:	adrp	x8, 420000 <arg_fstab_enabled>
  403d8c:	add	x8, x8, #0x80
  403d90:	ldr	x0, [x8]
  403d94:	ldur	x1, [x29, #-16]
  403d98:	adrp	x8, 420000 <arg_fstab_enabled>
  403d9c:	add	x8, x8, #0x50
  403da0:	ldr	x4, [x8]
  403da4:	ldur	x5, [x29, #-24]
  403da8:	ldur	x8, [x29, #-16]
  403dac:	sub	x9, x29, #0x18
  403db0:	stur	x0, [x9, #-256]
  403db4:	mov	x0, x8
  403db8:	sub	x8, x29, #0x20
  403dbc:	stur	x1, [x8, #-256]
  403dc0:	sub	x8, x29, #0x28
  403dc4:	stur	x4, [x8, #-256]
  403dc8:	sub	x8, x29, #0x30
  403dcc:	stur	x5, [x8, #-256]
  403dd0:	bl	402408 <is_device_path@plt>
  403dd4:	mov	w9, #0x1                   	// #1
  403dd8:	mov	w10, wzr
  403ddc:	tst	w0, #0x1
  403de0:	csel	w6, w9, w10, ne  // ne = any
  403de4:	sub	sp, sp, #0x10
  403de8:	sub	x8, x29, #0x18
  403dec:	ldur	x0, [x8, #-256]
  403df0:	sub	x8, x29, #0x20
  403df4:	ldur	x1, [x8, #-256]
  403df8:	adrp	x2, 409000 <relabel_extra+0xfc>
  403dfc:	add	x2, x2, #0xb82
  403e00:	mov	x8, xzr
  403e04:	mov	x3, x8
  403e08:	sub	x8, x29, #0x28
  403e0c:	ldur	x4, [x8, #-256]
  403e10:	sub	x8, x29, #0x30
  403e14:	ldur	x5, [x8, #-256]
  403e18:	mov	w7, w10
  403e1c:	mov	x8, sp
  403e20:	adrp	x11, 409000 <relabel_extra+0xfc>
  403e24:	add	x11, x11, #0xb8b
  403e28:	str	x11, [x8]
  403e2c:	mov	x8, sp
  403e30:	adrp	x11, 409000 <relabel_extra+0xfc>
  403e34:	add	x11, x11, #0xba1
  403e38:	str	x11, [x8, #8]
  403e3c:	sub	x8, x29, #0x34
  403e40:	stur	w9, [x8, #-256]
  403e44:	bl	4050e4 <add_mount>
  403e48:	add	sp, sp, #0x10
  403e4c:	stur	w0, [x29, #-4]
  403e50:	sub	x8, x29, #0x34
  403e54:	ldur	w9, [x8, #-256]
  403e58:	stur	w9, [x29, #-48]
  403e5c:	sub	x0, x29, #0x10
  403e60:	bl	40306c <freep>
  403e64:	ldur	w0, [x29, #-4]
  403e68:	mov	sp, x29
  403e6c:	ldr	x28, [sp, #16]
  403e70:	ldp	x29, x30, [sp], #32
  403e74:	ret

0000000000403e78 <add_sysroot_usr_mount>:
  403e78:	stp	x29, x30, [sp, #-32]!
  403e7c:	str	x28, [sp, #16]
  403e80:	mov	x29, sp
  403e84:	sub	sp, sp, #0x100
  403e88:	mov	x8, xzr
  403e8c:	adrp	x9, 420000 <arg_fstab_enabled>
  403e90:	add	x9, x9, #0x68
  403e94:	adrp	x10, 420000 <arg_fstab_enabled>
  403e98:	add	x10, x10, #0x70
  403e9c:	adrp	x11, 420000 <arg_fstab_enabled>
  403ea0:	add	x11, x11, #0x78
  403ea4:	adrp	x12, 409000 <relabel_extra+0xfc>
  403ea8:	add	x12, x12, #0x790
  403eac:	add	x12, x12, #0x3
  403eb0:	adrp	x13, 40a000 <_fini+0x894>
  403eb4:	add	x13, x13, #0x140
  403eb8:	stur	x8, [x29, #-16]
  403ebc:	ldr	x8, [x9]
  403ec0:	stur	x9, [x29, #-136]
  403ec4:	stur	x10, [x29, #-144]
  403ec8:	stur	x11, [x29, #-152]
  403ecc:	stur	x12, [x29, #-160]
  403ed0:	stur	x13, [x29, #-168]
  403ed4:	cbnz	x8, 403f00 <add_sysroot_usr_mount+0x88>
  403ed8:	ldur	x8, [x29, #-144]
  403edc:	ldr	x9, [x8]
  403ee0:	cbnz	x9, 403f00 <add_sysroot_usr_mount+0x88>
  403ee4:	ldur	x8, [x29, #-152]
  403ee8:	ldr	x9, [x8]
  403eec:	cbnz	x9, 403f00 <add_sysroot_usr_mount+0x88>
  403ef0:	stur	wzr, [x29, #-4]
  403ef4:	mov	w8, #0x1                   	// #1
  403ef8:	stur	w8, [x29, #-28]
  403efc:	b	404488 <add_sysroot_usr_mount+0x610>
  403f00:	adrp	x8, 420000 <arg_fstab_enabled>
  403f04:	add	x8, x8, #0x48
  403f08:	ldr	x8, [x8]
  403f0c:	cbz	x8, 403f64 <add_sysroot_usr_mount+0xec>
  403f10:	ldur	x8, [x29, #-136]
  403f14:	ldr	x9, [x8]
  403f18:	cbnz	x9, 403f64 <add_sysroot_usr_mount+0xec>
  403f1c:	adrp	x8, 420000 <arg_fstab_enabled>
  403f20:	add	x8, x8, #0x48
  403f24:	ldr	x0, [x8]
  403f28:	bl	4023b8 <strdup@plt>
  403f2c:	ldur	x8, [x29, #-136]
  403f30:	str	x0, [x8]
  403f34:	ldr	x9, [x8]
  403f38:	cbnz	x9, 403f64 <add_sysroot_usr_mount+0xec>
  403f3c:	mov	w8, wzr
  403f40:	mov	w0, w8
  403f44:	ldur	x1, [x29, #-160]
  403f48:	mov	w2, #0x2ae                 	// #686
  403f4c:	ldur	x3, [x29, #-168]
  403f50:	bl	402388 <log_oom_internal@plt>
  403f54:	stur	w0, [x29, #-4]
  403f58:	mov	w8, #0x1                   	// #1
  403f5c:	stur	w8, [x29, #-28]
  403f60:	b	404488 <add_sysroot_usr_mount+0x610>
  403f64:	adrp	x8, 420000 <arg_fstab_enabled>
  403f68:	add	x8, x8, #0x50
  403f6c:	ldr	x8, [x8]
  403f70:	cbz	x8, 403fc8 <add_sysroot_usr_mount+0x150>
  403f74:	ldur	x8, [x29, #-144]
  403f78:	ldr	x9, [x8]
  403f7c:	cbnz	x9, 403fc8 <add_sysroot_usr_mount+0x150>
  403f80:	adrp	x8, 420000 <arg_fstab_enabled>
  403f84:	add	x8, x8, #0x50
  403f88:	ldr	x0, [x8]
  403f8c:	bl	4023b8 <strdup@plt>
  403f90:	ldur	x8, [x29, #-144]
  403f94:	str	x0, [x8]
  403f98:	ldr	x9, [x8]
  403f9c:	cbnz	x9, 403fc8 <add_sysroot_usr_mount+0x150>
  403fa0:	mov	w8, wzr
  403fa4:	mov	w0, w8
  403fa8:	ldur	x1, [x29, #-160]
  403fac:	mov	w2, #0x2b4                 	// #692
  403fb0:	ldur	x3, [x29, #-168]
  403fb4:	bl	402388 <log_oom_internal@plt>
  403fb8:	stur	w0, [x29, #-4]
  403fbc:	mov	w8, #0x1                   	// #1
  403fc0:	stur	w8, [x29, #-28]
  403fc4:	b	404488 <add_sysroot_usr_mount+0x610>
  403fc8:	adrp	x8, 420000 <arg_fstab_enabled>
  403fcc:	add	x8, x8, #0x58
  403fd0:	ldr	x8, [x8]
  403fd4:	cbz	x8, 40402c <add_sysroot_usr_mount+0x1b4>
  403fd8:	ldur	x8, [x29, #-152]
  403fdc:	ldr	x9, [x8]
  403fe0:	cbnz	x9, 40402c <add_sysroot_usr_mount+0x1b4>
  403fe4:	adrp	x8, 420000 <arg_fstab_enabled>
  403fe8:	add	x8, x8, #0x58
  403fec:	ldr	x0, [x8]
  403ff0:	bl	4023b8 <strdup@plt>
  403ff4:	ldur	x8, [x29, #-152]
  403ff8:	str	x0, [x8]
  403ffc:	ldr	x9, [x8]
  404000:	cbnz	x9, 40402c <add_sysroot_usr_mount+0x1b4>
  404004:	mov	w8, wzr
  404008:	mov	w0, w8
  40400c:	ldur	x1, [x29, #-160]
  404010:	mov	w2, #0x2ba                 	// #698
  404014:	ldur	x3, [x29, #-168]
  404018:	bl	402388 <log_oom_internal@plt>
  40401c:	stur	w0, [x29, #-4]
  404020:	mov	w8, #0x1                   	// #1
  404024:	stur	w8, [x29, #-28]
  404028:	b	404488 <add_sysroot_usr_mount+0x610>
  40402c:	ldur	x8, [x29, #-136]
  404030:	ldr	x9, [x8]
  404034:	cbnz	x9, 404048 <add_sysroot_usr_mount+0x1d0>
  404038:	stur	wzr, [x29, #-4]
  40403c:	mov	w8, #0x1                   	// #1
  404040:	stur	w8, [x29, #-28]
  404044:	b	404488 <add_sysroot_usr_mount+0x610>
  404048:	ldur	x8, [x29, #-136]
  40404c:	ldr	x0, [x8]
  404050:	bl	4023d8 <fstab_node_to_udev_node@plt>
  404054:	stur	x0, [x29, #-16]
  404058:	ldur	x8, [x29, #-16]
  40405c:	cbnz	x8, 404088 <add_sysroot_usr_mount+0x210>
  404060:	mov	w8, wzr
  404064:	mov	w0, w8
  404068:	ldur	x1, [x29, #-160]
  40406c:	mov	w2, #0x2c2                 	// #706
  404070:	ldur	x3, [x29, #-168]
  404074:	bl	402388 <log_oom_internal@plt>
  404078:	stur	w0, [x29, #-4]
  40407c:	mov	w8, #0x1                   	// #1
  404080:	stur	w8, [x29, #-28]
  404084:	b	404488 <add_sysroot_usr_mount+0x610>
  404088:	ldur	x8, [x29, #-152]
  40408c:	ldr	x9, [x8]
  404090:	cbnz	x9, 4040c0 <add_sysroot_usr_mount+0x248>
  404094:	adrp	x8, 420000 <arg_fstab_enabled>
  404098:	add	x8, x8, #0x20
  40409c:	ldr	w9, [x8]
  4040a0:	adrp	x8, 409000 <relabel_extra+0xfc>
  4040a4:	add	x8, x8, #0x924
  4040a8:	adrp	x10, 409000 <relabel_extra+0xfc>
  4040ac:	add	x10, x10, #0x921
  4040b0:	cmp	w9, #0x0
  4040b4:	csel	x8, x10, x8, gt
  4040b8:	stur	x8, [x29, #-24]
  4040bc:	b	404334 <add_sysroot_usr_mount+0x4bc>
  4040c0:	ldur	x8, [x29, #-152]
  4040c4:	ldr	x0, [x8]
  4040c8:	adrp	x1, 40a000 <_fini+0x894>
  4040cc:	add	x1, x1, #0xbf0
  4040d0:	bl	404fec <fstab_test_option>
  4040d4:	tbnz	w0, #0, 404328 <add_sysroot_usr_mount+0x4b0>
  4040d8:	ldur	x8, [x29, #-152]
  4040dc:	ldr	x9, [x8]
  4040e0:	sub	x10, x29, #0x38
  4040e4:	stur	x9, [x29, #-56]
  4040e8:	adrp	x9, 409000 <relabel_extra+0xfc>
  4040ec:	add	x9, x9, #0x8ed
  4040f0:	str	x9, [x10, #8]
  4040f4:	adrp	x9, 420000 <arg_fstab_enabled>
  4040f8:	add	x9, x9, #0x20
  4040fc:	ldr	w11, [x9]
  404100:	adrp	x9, 409000 <relabel_extra+0xfc>
  404104:	add	x9, x9, #0x924
  404108:	adrp	x12, 409000 <relabel_extra+0xfc>
  40410c:	add	x12, x12, #0x921
  404110:	cmp	w11, #0x0
  404114:	csel	x9, x12, x9, gt
  404118:	str	x9, [x10, #16]
  40411c:	stur	xzr, [x29, #-80]
  404120:	stur	xzr, [x29, #-88]
  404124:	ldur	x8, [x29, #-88]
  404128:	mov	w9, #0x0                   	// #0
  40412c:	cmp	x8, #0x3
  404130:	stur	w9, [x29, #-172]
  404134:	b.cs	40415c <add_sysroot_usr_mount+0x2e4>  // b.hs, b.nlast
  404138:	ldur	x8, [x29, #-88]
  40413c:	mov	x9, #0x8                   	// #8
  404140:	mul	x8, x9, x8
  404144:	sub	x9, x29, #0x38
  404148:	add	x8, x9, x8
  40414c:	ldr	x8, [x8]
  404150:	cmp	x8, #0x0
  404154:	cset	w10, ne  // ne = any
  404158:	stur	w10, [x29, #-172]
  40415c:	ldur	w8, [x29, #-172]
  404160:	tbnz	w8, #0, 404168 <add_sysroot_usr_mount+0x2f0>
  404164:	b	4041a0 <add_sysroot_usr_mount+0x328>
  404168:	ldur	x8, [x29, #-88]
  40416c:	mov	x9, #0x8                   	// #8
  404170:	mul	x8, x9, x8
  404174:	sub	x9, x29, #0x38
  404178:	add	x8, x9, x8
  40417c:	ldr	x0, [x8]
  404180:	bl	4023e8 <strlen@plt>
  404184:	ldur	x8, [x29, #-80]
  404188:	add	x8, x8, x0
  40418c:	stur	x8, [x29, #-80]
  404190:	ldur	x8, [x29, #-88]
  404194:	add	x8, x8, #0x1
  404198:	stur	x8, [x29, #-88]
  40419c:	b	404124 <add_sysroot_usr_mount+0x2ac>
  4041a0:	ldur	x8, [x29, #-80]
  4041a4:	add	x8, x8, #0x1
  4041a8:	stur	x8, [x29, #-96]
  4041ac:	ldur	x1, [x29, #-96]
  4041b0:	mov	x0, #0x1                   	// #1
  4041b4:	bl	405040 <size_multiply_overflow>
  4041b8:	mov	w8, #0x1                   	// #1
  4041bc:	eor	w9, w0, #0x1
  4041c0:	eor	w9, w9, w8
  4041c4:	eor	w9, w9, w8
  4041c8:	eor	w8, w9, w8
  4041cc:	and	w8, w8, #0x1
  4041d0:	mov	w1, w8
  4041d4:	sxtw	x10, w1
  4041d8:	cbz	x10, 404200 <add_sysroot_usr_mount+0x388>
  4041dc:	mov	w8, wzr
  4041e0:	mov	w0, w8
  4041e4:	adrp	x1, 409000 <relabel_extra+0xfc>
  4041e8:	add	x1, x1, #0xaf1
  4041ec:	ldur	x2, [x29, #-160]
  4041f0:	mov	w3, #0x2c7                 	// #711
  4041f4:	adrp	x4, 40a000 <_fini+0x894>
  4041f8:	add	x4, x4, #0x156
  4041fc:	bl	4022f8 <log_assert_failed_realm@plt>
  404200:	ldur	x8, [x29, #-96]
  404204:	mov	x9, #0x1                   	// #1
  404208:	mul	x8, x9, x8
  40420c:	cmp	x8, #0x400, lsl #12
  404210:	cset	w10, ls  // ls = plast
  404214:	mov	w11, #0x1                   	// #1
  404218:	eor	w10, w10, #0x1
  40421c:	eor	w10, w10, w11
  404220:	eor	w10, w10, w11
  404224:	and	w10, w10, #0x1
  404228:	mov	w0, w10
  40422c:	sxtw	x8, w0
  404230:	cbz	x8, 404258 <add_sysroot_usr_mount+0x3e0>
  404234:	mov	w8, wzr
  404238:	mov	w0, w8
  40423c:	adrp	x1, 409000 <relabel_extra+0xfc>
  404240:	add	x1, x1, #0xb38
  404244:	ldur	x2, [x29, #-160]
  404248:	mov	w3, #0x2c7                 	// #711
  40424c:	adrp	x4, 40a000 <_fini+0x894>
  404250:	add	x4, x4, #0x156
  404254:	bl	4022f8 <log_assert_failed_realm@plt>
  404258:	ldur	x8, [x29, #-96]
  40425c:	mov	x9, #0x1                   	// #1
  404260:	mul	x8, x9, x8
  404264:	mul	x8, x8, x9
  404268:	add	x8, x8, #0xf
  40426c:	and	x8, x8, #0xfffffffffffffff0
  404270:	mov	x9, sp
  404274:	subs	x8, x9, x8
  404278:	mov	sp, x8
  40427c:	stur	x8, [x29, #-104]
  404280:	ldur	x8, [x29, #-104]
  404284:	stur	x8, [x29, #-64]
  404288:	stur	x8, [x29, #-72]
  40428c:	stur	xzr, [x29, #-88]
  404290:	ldur	x8, [x29, #-88]
  404294:	mov	w9, #0x0                   	// #0
  404298:	cmp	x8, #0x3
  40429c:	stur	w9, [x29, #-176]
  4042a0:	b.cs	4042c8 <add_sysroot_usr_mount+0x450>  // b.hs, b.nlast
  4042a4:	ldur	x8, [x29, #-88]
  4042a8:	mov	x9, #0x8                   	// #8
  4042ac:	mul	x8, x9, x8
  4042b0:	sub	x9, x29, #0x38
  4042b4:	add	x8, x9, x8
  4042b8:	ldr	x8, [x8]
  4042bc:	cmp	x8, #0x0
  4042c0:	cset	w10, ne  // ne = any
  4042c4:	stur	w10, [x29, #-176]
  4042c8:	ldur	w8, [x29, #-176]
  4042cc:	tbnz	w8, #0, 4042d4 <add_sysroot_usr_mount+0x45c>
  4042d0:	b	404308 <add_sysroot_usr_mount+0x490>
  4042d4:	ldur	x0, [x29, #-72]
  4042d8:	ldur	x8, [x29, #-88]
  4042dc:	mov	x9, #0x8                   	// #8
  4042e0:	mul	x8, x9, x8
  4042e4:	sub	x9, x29, #0x38
  4042e8:	add	x8, x9, x8
  4042ec:	ldr	x1, [x8]
  4042f0:	bl	4023f8 <stpcpy@plt>
  4042f4:	stur	x0, [x29, #-72]
  4042f8:	ldur	x8, [x29, #-88]
  4042fc:	add	x8, x8, #0x1
  404300:	stur	x8, [x29, #-88]
  404304:	b	404290 <add_sysroot_usr_mount+0x418>
  404308:	ldur	x8, [x29, #-72]
  40430c:	mov	w9, #0x0                   	// #0
  404310:	strb	w9, [x8]
  404314:	ldur	x8, [x29, #-64]
  404318:	stur	x8, [x29, #-112]
  40431c:	ldur	x8, [x29, #-112]
  404320:	stur	x8, [x29, #-24]
  404324:	b	404334 <add_sysroot_usr_mount+0x4bc>
  404328:	ldur	x8, [x29, #-152]
  40432c:	ldr	x9, [x8]
  404330:	stur	x9, [x29, #-24]
  404334:	mov	w8, #0x7                   	// #7
  404338:	stur	w8, [x29, #-116]
  40433c:	stur	wzr, [x29, #-120]
  404340:	stur	wzr, [x29, #-124]
  404344:	ldur	w0, [x29, #-124]
  404348:	bl	402288 <log_get_max_level_realm@plt>
  40434c:	ldur	w8, [x29, #-116]
  404350:	and	w8, w8, #0x7
  404354:	cmp	w0, w8
  404358:	b.lt	4043c4 <add_sysroot_usr_mount+0x54c>  // b.tstop
  40435c:	ldur	w8, [x29, #-124]
  404360:	ldur	w9, [x29, #-116]
  404364:	orr	w0, w9, w8, lsl #10
  404368:	ldur	w1, [x29, #-120]
  40436c:	ldur	x6, [x29, #-16]
  404370:	ldur	x10, [x29, #-144]
  404374:	ldr	x11, [x10]
  404378:	stur	w0, [x29, #-180]
  40437c:	mov	x0, x11
  404380:	stur	w1, [x29, #-184]
  404384:	stur	x6, [x29, #-192]
  404388:	bl	4050a8 <strna>
  40438c:	ldur	w8, [x29, #-180]
  404390:	stur	x0, [x29, #-200]
  404394:	mov	w0, w8
  404398:	ldur	w1, [x29, #-184]
  40439c:	ldur	x2, [x29, #-160]
  4043a0:	mov	w3, #0x2cb                 	// #715
  4043a4:	ldur	x4, [x29, #-168]
  4043a8:	adrp	x5, 40a000 <_fini+0x894>
  4043ac:	add	x5, x5, #0x176
  4043b0:	ldur	x6, [x29, #-192]
  4043b4:	ldur	x7, [x29, #-200]
  4043b8:	bl	402298 <log_internal_realm@plt>
  4043bc:	stur	w0, [x29, #-204]
  4043c0:	b	4043d8 <add_sysroot_usr_mount+0x560>
  4043c4:	ldur	w0, [x29, #-120]
  4043c8:	bl	4022a8 <abs@plt>
  4043cc:	mov	w8, wzr
  4043d0:	subs	w8, w8, w0, uxtb
  4043d4:	stur	w8, [x29, #-204]
  4043d8:	ldur	w8, [x29, #-204]
  4043dc:	stur	w8, [x29, #-128]
  4043e0:	adrp	x9, 420000 <arg_fstab_enabled>
  4043e4:	add	x9, x9, #0x80
  4043e8:	ldr	x0, [x9]
  4043ec:	ldur	x1, [x29, #-16]
  4043f0:	ldur	x9, [x29, #-144]
  4043f4:	ldr	x4, [x9]
  4043f8:	ldur	x5, [x29, #-24]
  4043fc:	ldur	x10, [x29, #-16]
  404400:	stur	x0, [x29, #-216]
  404404:	mov	x0, x10
  404408:	stur	x1, [x29, #-224]
  40440c:	stur	x4, [x29, #-232]
  404410:	stur	x5, [x29, #-240]
  404414:	bl	402408 <is_device_path@plt>
  404418:	mov	w8, #0x1                   	// #1
  40441c:	mov	w11, wzr
  404420:	tst	w0, #0x1
  404424:	csel	w6, w8, w11, ne  // ne = any
  404428:	sub	sp, sp, #0x10
  40442c:	ldur	x0, [x29, #-216]
  404430:	ldur	x1, [x29, #-224]
  404434:	adrp	x2, 40a000 <_fini+0x894>
  404438:	add	x2, x2, #0x1a5
  40443c:	mov	x9, xzr
  404440:	mov	x3, x9
  404444:	ldur	x4, [x29, #-232]
  404448:	ldur	x5, [x29, #-240]
  40444c:	mov	w7, w11
  404450:	mov	x9, sp
  404454:	adrp	x10, 40a000 <_fini+0x894>
  404458:	add	x10, x10, #0x1b2
  40445c:	str	x10, [x9]
  404460:	mov	x9, sp
  404464:	adrp	x10, 409000 <relabel_extra+0xfc>
  404468:	add	x10, x10, #0xba1
  40446c:	str	x10, [x9, #8]
  404470:	stur	w8, [x29, #-244]
  404474:	bl	4050e4 <add_mount>
  404478:	add	sp, sp, #0x10
  40447c:	stur	w0, [x29, #-4]
  404480:	ldur	w8, [x29, #-244]
  404484:	stur	w8, [x29, #-28]
  404488:	sub	x0, x29, #0x10
  40448c:	bl	40306c <freep>
  404490:	ldur	w0, [x29, #-4]
  404494:	mov	sp, x29
  404498:	ldr	x28, [sp, #16]
  40449c:	ldp	x29, x30, [sp], #32
  4044a0:	ret

00000000004044a4 <add_volatile_root>:
  4044a4:	sub	sp, sp, #0x20
  4044a8:	stp	x29, x30, [sp, #16]
  4044ac:	add	x29, sp, #0x10
  4044b0:	mov	w8, #0x0                   	// #0
  4044b4:	adrp	x9, 420000 <arg_fstab_enabled>
  4044b8:	add	x9, x9, #0x24
  4044bc:	sturb	w8, [x29, #-5]
  4044c0:	ldr	w8, [x9]
  4044c4:	cmp	w8, #0x1
  4044c8:	str	w8, [sp, #4]
  4044cc:	b.eq	4044ec <add_volatile_root+0x48>  // b.none
  4044d0:	b	4044d4 <add_volatile_root+0x30>
  4044d4:	ldr	w8, [sp, #4]
  4044d8:	cmp	w8, #0x3
  4044dc:	cset	w9, eq  // eq = none
  4044e0:	eor	w9, w9, #0x1
  4044e4:	tbnz	w9, #0, 4044f8 <add_volatile_root+0x54>
  4044e8:	b	4044ec <add_volatile_root+0x48>
  4044ec:	mov	w8, #0x1                   	// #1
  4044f0:	sturb	w8, [x29, #-5]
  4044f4:	b	4044f8 <add_volatile_root+0x54>
  4044f8:	ldurb	w8, [x29, #-5]
  4044fc:	and	w8, w8, #0x1
  404500:	sturb	w8, [x29, #-6]
  404504:	ldurb	w8, [x29, #-6]
  404508:	tbnz	w8, #0, 404514 <add_volatile_root+0x70>
  40450c:	stur	wzr, [x29, #-4]
  404510:	b	404540 <add_volatile_root+0x9c>
  404514:	adrp	x8, 420000 <arg_fstab_enabled>
  404518:	add	x8, x8, #0x80
  40451c:	ldr	x0, [x8]
  404520:	adrp	x1, 409000 <relabel_extra+0xfc>
  404524:	add	x1, x1, #0xb8b
  404528:	adrp	x2, 409000 <relabel_extra+0xfc>
  40452c:	add	x2, x2, #0xe4a
  404530:	adrp	x3, 40a000 <_fini+0x894>
  404534:	add	x3, x3, #0x1c3
  404538:	bl	402428 <generator_add_symlink@plt>
  40453c:	stur	w0, [x29, #-4]
  404540:	ldur	w0, [x29, #-4]
  404544:	ldp	x29, x30, [sp, #16]
  404548:	add	sp, sp, #0x20
  40454c:	ret

0000000000404550 <add_volatile_var>:
  404550:	sub	sp, sp, #0x30
  404554:	stp	x29, x30, [sp, #32]
  404558:	add	x29, sp, #0x20
  40455c:	adrp	x8, 420000 <arg_fstab_enabled>
  404560:	add	x8, x8, #0x24
  404564:	ldr	w9, [x8]
  404568:	cmp	w9, #0x2
  40456c:	b.eq	404578 <add_volatile_var+0x28>  // b.none
  404570:	stur	wzr, [x29, #-4]
  404574:	b	4045e0 <add_volatile_var+0x90>
  404578:	adrp	x8, 420000 <arg_fstab_enabled>
  40457c:	add	x8, x8, #0x88
  404580:	ldr	x0, [x8]
  404584:	adrp	x8, 40a000 <_fini+0x894>
  404588:	add	x8, x8, #0x1f5
  40458c:	mov	x1, x8
  404590:	adrp	x2, 40a000 <_fini+0x894>
  404594:	add	x2, x2, #0x1fb
  404598:	mov	x9, xzr
  40459c:	mov	x3, x9
  4045a0:	mov	x4, x8
  4045a4:	adrp	x5, 40a000 <_fini+0x894>
  4045a8:	add	x5, x5, #0x200
  4045ac:	mov	w10, wzr
  4045b0:	mov	w6, w10
  4045b4:	mov	w7, w10
  4045b8:	mov	x8, sp
  4045bc:	adrp	x9, 40a000 <_fini+0x894>
  4045c0:	add	x9, x9, #0x20a
  4045c4:	str	x9, [x8]
  4045c8:	mov	x8, sp
  4045cc:	adrp	x9, 409000 <relabel_extra+0xfc>
  4045d0:	add	x9, x9, #0xba1
  4045d4:	str	x9, [x8, #8]
  4045d8:	bl	4050e4 <add_mount>
  4045dc:	stur	w0, [x29, #-4]
  4045e0:	ldur	w0, [x29, #-4]
  4045e4:	ldp	x29, x30, [sp, #32]
  4045e8:	add	sp, sp, #0x30
  4045ec:	ret

00000000004045f0 <parse_fstab>:
  4045f0:	sub	sp, sp, #0x1b0
  4045f4:	stp	x29, x30, [sp, #400]
  4045f8:	str	x28, [sp, #416]
  4045fc:	add	x29, sp, #0x190
  404600:	mov	x8, xzr
  404604:	adrp	x9, 409000 <relabel_extra+0xfc>
  404608:	add	x9, x9, #0x790
  40460c:	add	x9, x9, #0x3
  404610:	adrp	x10, 40a000 <_fini+0x894>
  404614:	add	x10, x10, #0x22d
  404618:	mov	w11, #0x1                   	// #1
  40461c:	and	w11, w0, w11
  404620:	sturb	w11, [x29, #-5]
  404624:	stur	x8, [x29, #-16]
  404628:	stur	wzr, [x29, #-36]
  40462c:	ldurb	w11, [x29, #-5]
  404630:	stur	x9, [x29, #-192]
  404634:	str	x10, [sp, #200]
  404638:	tbnz	w11, #0, 404640 <parse_fstab+0x50>
  40463c:	b	404650 <parse_fstab+0x60>
  404640:	adrp	x8, 40a000 <_fini+0x894>
  404644:	add	x8, x8, #0x21a
  404648:	str	x8, [sp, #192]
  40464c:	b	404658 <parse_fstab+0x68>
  404650:	bl	4062ac <fstab_path>
  404654:	str	x0, [sp, #192]
  404658:	ldr	x8, [sp, #192]
  40465c:	stur	x8, [x29, #-24]
  404660:	mov	w9, #0x7                   	// #7
  404664:	stur	w9, [x29, #-40]
  404668:	stur	wzr, [x29, #-44]
  40466c:	stur	wzr, [x29, #-48]
  404670:	ldur	w0, [x29, #-48]
  404674:	bl	402288 <log_get_max_level_realm@plt>
  404678:	ldur	w9, [x29, #-40]
  40467c:	and	w9, w9, #0x7
  404680:	cmp	w0, w9
  404684:	b.lt	4046bc <parse_fstab+0xcc>  // b.tstop
  404688:	ldur	w8, [x29, #-48]
  40468c:	ldur	w9, [x29, #-40]
  404690:	orr	w0, w9, w8, lsl #10
  404694:	ldur	w1, [x29, #-44]
  404698:	ldur	x6, [x29, #-24]
  40469c:	ldur	x2, [x29, #-192]
  4046a0:	mov	w3, #0x20d                 	// #525
  4046a4:	ldr	x4, [sp, #200]
  4046a8:	adrp	x5, 40a000 <_fini+0x894>
  4046ac:	add	x5, x5, #0x239
  4046b0:	bl	402298 <log_internal_realm@plt>
  4046b4:	str	w0, [sp, #188]
  4046b8:	b	4046d0 <parse_fstab+0xe0>
  4046bc:	ldur	w0, [x29, #-44]
  4046c0:	bl	4022a8 <abs@plt>
  4046c4:	mov	w8, wzr
  4046c8:	subs	w8, w8, w0, uxtb
  4046cc:	str	w8, [sp, #188]
  4046d0:	ldr	w8, [sp, #188]
  4046d4:	stur	w8, [x29, #-52]
  4046d8:	ldur	x0, [x29, #-24]
  4046dc:	adrp	x1, 40a000 <_fini+0x894>
  4046e0:	add	x1, x1, #0x247
  4046e4:	bl	402438 <setmntent@plt>
  4046e8:	stur	x0, [x29, #-16]
  4046ec:	ldur	x9, [x29, #-16]
  4046f0:	cbnz	x9, 4047a8 <parse_fstab+0x1b8>
  4046f4:	bl	402448 <__errno_location@plt>
  4046f8:	ldr	w8, [x0]
  4046fc:	cmp	w8, #0x2
  404700:	b.ne	404714 <parse_fstab+0x124>  // b.any
  404704:	stur	wzr, [x29, #-4]
  404708:	mov	w8, #0x1                   	// #1
  40470c:	stur	w8, [x29, #-56]
  404710:	b	404eb8 <parse_fstab+0x8c8>
  404714:	mov	w8, #0x3                   	// #3
  404718:	stur	w8, [x29, #-60]
  40471c:	bl	402448 <__errno_location@plt>
  404720:	ldr	w8, [x0]
  404724:	stur	w8, [x29, #-64]
  404728:	stur	wzr, [x29, #-68]
  40472c:	ldur	w0, [x29, #-68]
  404730:	bl	402288 <log_get_max_level_realm@plt>
  404734:	ldur	w8, [x29, #-60]
  404738:	and	w8, w8, #0x7
  40473c:	cmp	w0, w8
  404740:	b.lt	404778 <parse_fstab+0x188>  // b.tstop
  404744:	ldur	w8, [x29, #-68]
  404748:	ldur	w9, [x29, #-60]
  40474c:	orr	w0, w9, w8, lsl #10
  404750:	ldur	w1, [x29, #-64]
  404754:	ldur	x6, [x29, #-24]
  404758:	ldur	x2, [x29, #-192]
  40475c:	mov	w3, #0x214                 	// #532
  404760:	ldr	x4, [sp, #200]
  404764:	adrp	x5, 40a000 <_fini+0x894>
  404768:	add	x5, x5, #0x24a
  40476c:	bl	402298 <log_internal_realm@plt>
  404770:	str	w0, [sp, #184]
  404774:	b	40478c <parse_fstab+0x19c>
  404778:	ldur	w0, [x29, #-64]
  40477c:	bl	4022a8 <abs@plt>
  404780:	mov	w8, wzr
  404784:	subs	w8, w8, w0, uxtb
  404788:	str	w8, [sp, #184]
  40478c:	ldr	w8, [sp, #184]
  404790:	stur	w8, [x29, #-72]
  404794:	ldur	w8, [x29, #-72]
  404798:	stur	w8, [x29, #-4]
  40479c:	mov	w8, #0x1                   	// #1
  4047a0:	stur	w8, [x29, #-56]
  4047a4:	b	404eb8 <parse_fstab+0x8c8>
  4047a8:	ldur	x0, [x29, #-16]
  4047ac:	bl	402458 <getmntent@plt>
  4047b0:	stur	x0, [x29, #-32]
  4047b4:	cbz	x0, 404ea8 <parse_fstab+0x8b8>
  4047b8:	mov	x8, xzr
  4047bc:	stur	x8, [x29, #-80]
  4047c0:	stur	x8, [x29, #-88]
  4047c4:	stur	x8, [x29, #-96]
  4047c8:	ldurb	w9, [x29, #-5]
  4047cc:	tbnz	w9, #0, 4047d4 <parse_fstab+0x1e4>
  4047d0:	b	4047ec <parse_fstab+0x1fc>
  4047d4:	ldur	x0, [x29, #-32]
  4047d8:	bl	406ff0 <mount_in_initrd>
  4047dc:	tbnz	w0, #0, 4047ec <parse_fstab+0x1fc>
  4047e0:	mov	w8, #0x2                   	// #2
  4047e4:	stur	w8, [x29, #-56]
  4047e8:	b	404e6c <parse_fstab+0x87c>
  4047ec:	ldur	x8, [x29, #-32]
  4047f0:	ldr	x0, [x8]
  4047f4:	bl	4023d8 <fstab_node_to_udev_node@plt>
  4047f8:	stur	x0, [x29, #-88]
  4047fc:	ldur	x8, [x29, #-88]
  404800:	cbnz	x8, 40482c <parse_fstab+0x23c>
  404804:	mov	w8, wzr
  404808:	mov	w0, w8
  40480c:	ldur	x1, [x29, #-192]
  404810:	mov	w2, #0x221                 	// #545
  404814:	ldr	x3, [sp, #200]
  404818:	bl	402388 <log_oom_internal@plt>
  40481c:	stur	w0, [x29, #-4]
  404820:	mov	w8, #0x1                   	// #1
  404824:	stur	w8, [x29, #-56]
  404828:	b	404e6c <parse_fstab+0x87c>
  40482c:	ldur	x0, [x29, #-88]
  404830:	bl	402408 <is_device_path@plt>
  404834:	tbnz	w0, #0, 40483c <parse_fstab+0x24c>
  404838:	b	4048d8 <parse_fstab+0x2e8>
  40483c:	adrp	x0, 40a000 <_fini+0x894>
  404840:	add	x0, x0, #0x260
  404844:	bl	402468 <path_is_read_only_fs@plt>
  404848:	cmp	w0, #0x0
  40484c:	cset	w8, le
  404850:	tbnz	w8, #0, 4048d8 <parse_fstab+0x2e8>
  404854:	mov	w8, #0x6                   	// #6
  404858:	stur	w8, [x29, #-108]
  40485c:	stur	wzr, [x29, #-112]
  404860:	stur	wzr, [x29, #-116]
  404864:	ldur	w0, [x29, #-116]
  404868:	bl	402288 <log_get_max_level_realm@plt>
  40486c:	ldur	w8, [x29, #-108]
  404870:	and	w8, w8, #0x7
  404874:	cmp	w0, w8
  404878:	b.lt	4048b0 <parse_fstab+0x2c0>  // b.tstop
  40487c:	ldur	w8, [x29, #-116]
  404880:	ldur	w9, [x29, #-108]
  404884:	orr	w0, w9, w8, lsl #10
  404888:	ldur	w1, [x29, #-112]
  40488c:	ldur	x6, [x29, #-88]
  404890:	ldur	x2, [x29, #-192]
  404894:	mov	w3, #0x224                 	// #548
  404898:	ldr	x4, [sp, #200]
  40489c:	adrp	x5, 40a000 <_fini+0x894>
  4048a0:	add	x5, x5, #0x265
  4048a4:	bl	402298 <log_internal_realm@plt>
  4048a8:	str	w0, [sp, #180]
  4048ac:	b	4048c4 <parse_fstab+0x2d4>
  4048b0:	ldur	w0, [x29, #-112]
  4048b4:	bl	4022a8 <abs@plt>
  4048b8:	mov	w8, wzr
  4048bc:	subs	w8, w8, w0, uxtb
  4048c0:	str	w8, [sp, #180]
  4048c4:	ldr	w8, [sp, #180]
  4048c8:	stur	w8, [x29, #-120]
  4048cc:	mov	w8, #0x2                   	// #2
  4048d0:	stur	w8, [x29, #-56]
  4048d4:	b	404e6c <parse_fstab+0x87c>
  4048d8:	ldur	x8, [x29, #-32]
  4048dc:	ldr	x0, [x8, #8]
  4048e0:	bl	4023b8 <strdup@plt>
  4048e4:	stur	x0, [x29, #-80]
  4048e8:	ldur	x8, [x29, #-80]
  4048ec:	cbnz	x8, 404918 <parse_fstab+0x328>
  4048f0:	mov	w8, wzr
  4048f4:	mov	w0, w8
  4048f8:	ldur	x1, [x29, #-192]
  4048fc:	mov	w2, #0x22a                 	// #554
  404900:	ldr	x3, [sp, #200]
  404904:	bl	402388 <log_oom_internal@plt>
  404908:	stur	w0, [x29, #-4]
  40490c:	mov	w8, #0x1                   	// #1
  404910:	stur	w8, [x29, #-56]
  404914:	b	404e6c <parse_fstab+0x87c>
  404918:	ldur	x0, [x29, #-80]
  40491c:	bl	402478 <is_path@plt>
  404920:	tbnz	w0, #0, 404928 <parse_fstab+0x338>
  404924:	b	404aa4 <parse_fstab+0x4b4>
  404928:	ldur	x0, [x29, #-80]
  40492c:	mov	w8, wzr
  404930:	and	w1, w8, #0x1
  404934:	bl	402488 <path_simplify@plt>
  404938:	ldur	x9, [x29, #-80]
  40493c:	ldurb	w8, [x29, #-5]
  404940:	adrp	x10, 409000 <relabel_extra+0xfc>
  404944:	add	x10, x10, #0xb82
  404948:	mov	x11, xzr
  40494c:	tst	w8, #0x1
  404950:	csel	x1, x10, x11, ne  // ne = any
  404954:	mov	x0, x9
  404958:	mov	w2, #0x3                   	// #3
  40495c:	sub	x3, x29, #0x60
  404960:	mov	x4, x11
  404964:	bl	402498 <chase_symlinks@plt>
  404968:	stur	w0, [x29, #-36]
  40496c:	ldur	w8, [x29, #-36]
  404970:	cmp	w8, #0x0
  404974:	cset	w8, ge  // ge = tcont
  404978:	tbnz	w8, #0, 4049fc <parse_fstab+0x40c>
  40497c:	mov	w8, #0x7                   	// #7
  404980:	stur	w8, [x29, #-124]
  404984:	ldur	w8, [x29, #-36]
  404988:	stur	w8, [x29, #-128]
  40498c:	stur	wzr, [x29, #-132]
  404990:	ldur	w0, [x29, #-132]
  404994:	bl	402288 <log_get_max_level_realm@plt>
  404998:	ldur	w8, [x29, #-124]
  40499c:	and	w8, w8, #0x7
  4049a0:	cmp	w0, w8
  4049a4:	b.lt	4049dc <parse_fstab+0x3ec>  // b.tstop
  4049a8:	ldur	w8, [x29, #-132]
  4049ac:	ldur	w9, [x29, #-124]
  4049b0:	orr	w0, w9, w8, lsl #10
  4049b4:	ldur	w1, [x29, #-128]
  4049b8:	ldur	x6, [x29, #-80]
  4049bc:	ldur	x2, [x29, #-192]
  4049c0:	mov	w3, #0x238                 	// #568
  4049c4:	ldr	x4, [sp, #200]
  4049c8:	adrp	x5, 40a000 <_fini+0x894>
  4049cc:	add	x5, x5, #0x2a1
  4049d0:	bl	402298 <log_internal_realm@plt>
  4049d4:	str	w0, [sp, #176]
  4049d8:	b	4049f0 <parse_fstab+0x400>
  4049dc:	ldur	w0, [x29, #-128]
  4049e0:	bl	4022a8 <abs@plt>
  4049e4:	mov	w8, wzr
  4049e8:	subs	w8, w8, w0, uxtb
  4049ec:	str	w8, [sp, #176]
  4049f0:	ldr	w8, [sp, #176]
  4049f4:	stur	w8, [x29, #-136]
  4049f8:	b	404aa4 <parse_fstab+0x4b4>
  4049fc:	ldur	x0, [x29, #-96]
  404a00:	ldur	x1, [x29, #-80]
  404a04:	bl	402368 <strcmp@plt>
  404a08:	cbnz	w0, 404a1c <parse_fstab+0x42c>
  404a0c:	ldur	x0, [x29, #-96]
  404a10:	bl	4070b4 <mfree>
  404a14:	stur	x0, [x29, #-96]
  404a18:	b	404aa4 <parse_fstab+0x4b4>
  404a1c:	mov	w8, #0x7                   	// #7
  404a20:	stur	w8, [x29, #-140]
  404a24:	stur	wzr, [x29, #-144]
  404a28:	stur	wzr, [x29, #-148]
  404a2c:	ldur	w0, [x29, #-148]
  404a30:	bl	402288 <log_get_max_level_realm@plt>
  404a34:	ldur	w8, [x29, #-140]
  404a38:	and	w8, w8, #0x7
  404a3c:	cmp	w0, w8
  404a40:	b.lt	404a88 <parse_fstab+0x498>  // b.tstop
  404a44:	ldur	w8, [x29, #-148]
  404a48:	ldur	w9, [x29, #-140]
  404a4c:	orr	w0, w9, w8, lsl #10
  404a50:	ldur	w1, [x29, #-144]
  404a54:	ldur	x6, [x29, #-88]
  404a58:	ldur	x7, [x29, #-80]
  404a5c:	ldur	x10, [x29, #-96]
  404a60:	ldur	x2, [x29, #-192]
  404a64:	mov	w3, #0x23c                 	// #572
  404a68:	ldr	x4, [sp, #200]
  404a6c:	adrp	x5, 40a000 <_fini+0x894>
  404a70:	add	x5, x5, #0x2d4
  404a74:	mov	x11, sp
  404a78:	str	x10, [x11]
  404a7c:	bl	402298 <log_internal_realm@plt>
  404a80:	str	w0, [sp, #172]
  404a84:	b	404a9c <parse_fstab+0x4ac>
  404a88:	ldur	w0, [x29, #-144]
  404a8c:	bl	4022a8 <abs@plt>
  404a90:	mov	w8, wzr
  404a94:	subs	w8, w8, w0, uxtb
  404a98:	str	w8, [sp, #172]
  404a9c:	ldr	w8, [sp, #172]
  404aa0:	stur	w8, [x29, #-152]
  404aa4:	ldur	x8, [x29, #-32]
  404aa8:	ldr	x0, [x8, #24]
  404aac:	adrp	x1, 40a000 <_fini+0x894>
  404ab0:	add	x1, x1, #0xc50
  404ab4:	bl	404fec <fstab_test_option>
  404ab8:	mov	w9, #0x1                   	// #1
  404abc:	and	w10, w0, w9
  404ac0:	sturb	w10, [x29, #-97]
  404ac4:	ldur	x8, [x29, #-32]
  404ac8:	ldr	x0, [x8, #24]
  404acc:	adrp	x1, 40a000 <_fini+0x894>
  404ad0:	add	x1, x1, #0xc62
  404ad4:	str	w9, [sp, #168]
  404ad8:	bl	404fec <fstab_test_option>
  404adc:	ldr	w9, [sp, #168]
  404ae0:	and	w10, w0, w9
  404ae4:	sturb	w10, [x29, #-98]
  404ae8:	ldur	x8, [x29, #-32]
  404aec:	ldr	x0, [x8, #24]
  404af0:	adrp	x1, 40a000 <_fini+0x894>
  404af4:	add	x1, x1, #0xc74
  404af8:	bl	4062f8 <fstab_test_yes_no_option>
  404afc:	ldr	w9, [sp, #168]
  404b00:	and	w10, w0, w9
  404b04:	sturb	w10, [x29, #-99]
  404b08:	ldur	x8, [x29, #-32]
  404b0c:	ldr	x0, [x8, #24]
  404b10:	adrp	x1, 40a000 <_fini+0x894>
  404b14:	add	x1, x1, #0xc81
  404b18:	bl	4062f8 <fstab_test_yes_no_option>
  404b1c:	and	w9, w0, #0x1
  404b20:	sturb	w9, [x29, #-100]
  404b24:	mov	w9, #0x7                   	// #7
  404b28:	stur	w9, [x29, #-156]
  404b2c:	stur	wzr, [x29, #-160]
  404b30:	stur	wzr, [x29, #-164]
  404b34:	ldur	w0, [x29, #-164]
  404b38:	bl	402288 <log_get_max_level_realm@plt>
  404b3c:	ldur	w9, [x29, #-156]
  404b40:	and	w9, w9, #0x7
  404b44:	cmp	w0, w9
  404b48:	b.lt	404c40 <parse_fstab+0x650>  // b.tstop
  404b4c:	ldur	w8, [x29, #-164]
  404b50:	ldur	w9, [x29, #-156]
  404b54:	orr	w0, w9, w8, lsl #10
  404b58:	ldur	w1, [x29, #-160]
  404b5c:	ldur	x6, [x29, #-88]
  404b60:	ldur	x7, [x29, #-80]
  404b64:	ldur	x10, [x29, #-32]
  404b68:	ldr	x10, [x10, #16]
  404b6c:	ldurb	w8, [x29, #-97]
  404b70:	and	w8, w8, #0x1
  404b74:	str	w0, [sp, #164]
  404b78:	mov	w0, w8
  404b7c:	str	w1, [sp, #160]
  404b80:	str	x6, [sp, #152]
  404b84:	str	x7, [sp, #144]
  404b88:	str	x10, [sp, #136]
  404b8c:	bl	4070e4 <yes_no>
  404b90:	ldurb	w8, [x29, #-98]
  404b94:	and	w8, w8, #0x1
  404b98:	str	x0, [sp, #128]
  404b9c:	mov	w0, w8
  404ba0:	bl	4070e4 <yes_no>
  404ba4:	ldurb	w8, [x29, #-99]
  404ba8:	and	w8, w8, #0x1
  404bac:	str	x0, [sp, #120]
  404bb0:	mov	w0, w8
  404bb4:	bl	4070e4 <yes_no>
  404bb8:	ldurb	w8, [x29, #-100]
  404bbc:	and	w8, w8, #0x1
  404bc0:	str	x0, [sp, #112]
  404bc4:	mov	w0, w8
  404bc8:	bl	4070e4 <yes_no>
  404bcc:	ldr	w8, [sp, #164]
  404bd0:	str	x0, [sp, #104]
  404bd4:	mov	w0, w8
  404bd8:	ldr	w1, [sp, #160]
  404bdc:	ldur	x2, [x29, #-192]
  404be0:	mov	w3, #0x247                 	// #583
  404be4:	ldr	x4, [sp, #200]
  404be8:	adrp	x5, 40a000 <_fini+0x894>
  404bec:	add	x5, x5, #0x2f9
  404bf0:	ldr	x6, [sp, #152]
  404bf4:	ldr	x7, [sp, #144]
  404bf8:	mov	x10, sp
  404bfc:	ldr	x11, [sp, #136]
  404c00:	str	x11, [x10]
  404c04:	mov	x10, sp
  404c08:	ldr	x12, [sp, #128]
  404c0c:	str	x12, [x10, #8]
  404c10:	mov	x10, sp
  404c14:	ldr	x13, [sp, #120]
  404c18:	str	x13, [x10, #16]
  404c1c:	mov	x10, sp
  404c20:	ldr	x14, [sp, #112]
  404c24:	str	x14, [x10, #24]
  404c28:	mov	x10, sp
  404c2c:	ldr	x15, [sp, #104]
  404c30:	str	x15, [x10, #32]
  404c34:	bl	402298 <log_internal_realm@plt>
  404c38:	str	w0, [sp, #100]
  404c3c:	b	404c54 <parse_fstab+0x664>
  404c40:	ldur	w0, [x29, #-160]
  404c44:	bl	4022a8 <abs@plt>
  404c48:	mov	w8, wzr
  404c4c:	subs	w8, w8, w0, uxtb
  404c50:	str	w8, [sp, #100]
  404c54:	ldr	w8, [sp, #100]
  404c58:	stur	w8, [x29, #-168]
  404c5c:	ldur	x9, [x29, #-32]
  404c60:	ldr	x0, [x9, #16]
  404c64:	adrp	x1, 40a000 <_fini+0x894>
  404c68:	add	x1, x1, #0x346
  404c6c:	bl	402368 <strcmp@plt>
  404c70:	cbnz	w0, 404cd4 <parse_fstab+0x6e4>
  404c74:	ldur	x0, [x29, #-88]
  404c78:	ldur	x1, [x29, #-32]
  404c7c:	ldurb	w8, [x29, #-97]
  404c80:	and	w8, w8, #0x1
  404c84:	mov	w9, #0x8                   	// #8
  404c88:	mul	w8, w8, w9
  404c8c:	ldurb	w9, [x29, #-98]
  404c90:	and	w9, w9, #0x1
  404c94:	mov	w10, #0x10                  	// #16
  404c98:	mul	w9, w9, w10
  404c9c:	orr	w8, w8, w9
  404ca0:	ldurb	w9, [x29, #-99]
  404ca4:	and	w9, w9, #0x1
  404ca8:	mov	w10, #0x1                   	// #1
  404cac:	mul	w9, w9, w10
  404cb0:	orr	w8, w8, w9
  404cb4:	ldurb	w9, [x29, #-100]
  404cb8:	and	w9, w9, #0x1
  404cbc:	mov	w10, #0x2                   	// #2
  404cc0:	mul	w9, w9, w10
  404cc4:	orr	w2, w8, w9
  404cc8:	bl	407114 <add_swap>
  404ccc:	stur	w0, [x29, #-104]
  404cd0:	b	404e40 <parse_fstab+0x850>
  404cd4:	ldur	x8, [x29, #-32]
  404cd8:	ldr	x0, [x8, #24]
  404cdc:	adrp	x1, 40a000 <_fini+0x894>
  404ce0:	add	x1, x1, #0xc8e
  404ce4:	bl	404fec <fstab_test_option>
  404ce8:	and	w9, w0, #0x1
  404cec:	sturb	w9, [x29, #-169]
  404cf0:	ldurb	w9, [x29, #-5]
  404cf4:	tbnz	w9, #0, 404cfc <parse_fstab+0x70c>
  404cf8:	b	404d0c <parse_fstab+0x71c>
  404cfc:	adrp	x8, 40a000 <_fini+0x894>
  404d00:	add	x8, x8, #0x1b2
  404d04:	stur	x8, [x29, #-184]
  404d08:	b	404d38 <parse_fstab+0x748>
  404d0c:	ldur	x0, [x29, #-32]
  404d10:	bl	407734 <mount_is_network>
  404d14:	tbnz	w0, #0, 404d1c <parse_fstab+0x72c>
  404d18:	b	404d2c <parse_fstab+0x73c>
  404d1c:	adrp	x8, 40a000 <_fini+0x894>
  404d20:	add	x8, x8, #0x34b
  404d24:	stur	x8, [x29, #-184]
  404d28:	b	404d38 <parse_fstab+0x748>
  404d2c:	adrp	x8, 40a000 <_fini+0x894>
  404d30:	add	x8, x8, #0x20a
  404d34:	stur	x8, [x29, #-184]
  404d38:	adrp	x8, 420000 <arg_fstab_enabled>
  404d3c:	add	x8, x8, #0x80
  404d40:	ldr	x0, [x8]
  404d44:	ldur	x1, [x29, #-88]
  404d48:	ldur	x8, [x29, #-96]
  404d4c:	str	x0, [sp, #88]
  404d50:	str	x1, [sp, #80]
  404d54:	str	x8, [sp, #72]
  404d58:	cbz	x8, 404d68 <parse_fstab+0x778>
  404d5c:	ldr	x8, [sp, #72]
  404d60:	str	x8, [sp, #64]
  404d64:	b	404d70 <parse_fstab+0x780>
  404d68:	ldur	x8, [x29, #-80]
  404d6c:	str	x8, [sp, #64]
  404d70:	ldr	x8, [sp, #64]
  404d74:	ldur	x9, [x29, #-96]
  404d78:	str	x8, [sp, #56]
  404d7c:	cbz	x9, 404d8c <parse_fstab+0x79c>
  404d80:	ldur	x8, [x29, #-80]
  404d84:	str	x8, [sp, #48]
  404d88:	b	404d94 <parse_fstab+0x7a4>
  404d8c:	mov	x8, xzr
  404d90:	str	x8, [sp, #48]
  404d94:	ldr	x8, [sp, #48]
  404d98:	ldur	x9, [x29, #-32]
  404d9c:	ldr	x4, [x9, #16]
  404da0:	ldur	x9, [x29, #-32]
  404da4:	ldr	x5, [x9, #24]
  404da8:	ldur	x9, [x29, #-32]
  404dac:	ldr	w6, [x9, #36]
  404db0:	ldurb	w10, [x29, #-97]
  404db4:	and	w10, w10, #0x1
  404db8:	mov	w11, #0x8                   	// #8
  404dbc:	mul	w10, w10, w11
  404dc0:	ldurb	w11, [x29, #-98]
  404dc4:	and	w11, w11, #0x1
  404dc8:	mov	w12, #0x10                  	// #16
  404dcc:	mul	w11, w11, w12
  404dd0:	orr	w10, w10, w11
  404dd4:	ldurb	w11, [x29, #-99]
  404dd8:	and	w11, w11, #0x1
  404ddc:	mov	w12, #0x1                   	// #1
  404de0:	mul	w11, w11, w12
  404de4:	orr	w10, w10, w11
  404de8:	ldurb	w11, [x29, #-100]
  404dec:	and	w11, w11, #0x1
  404df0:	mov	w12, #0x2                   	// #2
  404df4:	mul	w11, w11, w12
  404df8:	orr	w10, w10, w11
  404dfc:	ldurb	w11, [x29, #-169]
  404e00:	and	w11, w11, #0x1
  404e04:	mov	w12, #0x4                   	// #4
  404e08:	mul	w11, w11, w12
  404e0c:	orr	w7, w10, w11
  404e10:	ldur	x9, [x29, #-184]
  404e14:	ldur	x13, [x29, #-24]
  404e18:	ldr	x0, [sp, #88]
  404e1c:	ldr	x1, [sp, #80]
  404e20:	ldr	x2, [sp, #56]
  404e24:	mov	x3, x8
  404e28:	mov	x8, sp
  404e2c:	str	x9, [x8]
  404e30:	mov	x8, sp
  404e34:	str	x13, [x8, #8]
  404e38:	bl	4050e4 <add_mount>
  404e3c:	stur	w0, [x29, #-104]
  404e40:	ldur	w8, [x29, #-36]
  404e44:	cmp	w8, #0x0
  404e48:	cset	w8, lt  // lt = tstop
  404e4c:	tbnz	w8, #0, 404e68 <parse_fstab+0x878>
  404e50:	ldur	w8, [x29, #-104]
  404e54:	cmp	w8, #0x0
  404e58:	cset	w8, ge  // ge = tcont
  404e5c:	tbnz	w8, #0, 404e68 <parse_fstab+0x878>
  404e60:	ldur	w8, [x29, #-104]
  404e64:	stur	w8, [x29, #-36]
  404e68:	stur	wzr, [x29, #-56]
  404e6c:	sub	x0, x29, #0x60
  404e70:	bl	40306c <freep>
  404e74:	sub	x0, x29, #0x58
  404e78:	bl	40306c <freep>
  404e7c:	sub	x0, x29, #0x50
  404e80:	bl	40306c <freep>
  404e84:	ldur	w8, [x29, #-56]
  404e88:	str	w8, [sp, #44]
  404e8c:	cbz	w8, 404ea4 <parse_fstab+0x8b4>
  404e90:	b	404e94 <parse_fstab+0x8a4>
  404e94:	ldr	w8, [sp, #44]
  404e98:	cmp	w8, #0x2
  404e9c:	b.eq	4047a8 <parse_fstab+0x1b8>  // b.none
  404ea0:	b	404eb8 <parse_fstab+0x8c8>
  404ea4:	b	4047a8 <parse_fstab+0x1b8>
  404ea8:	ldur	w8, [x29, #-36]
  404eac:	stur	w8, [x29, #-4]
  404eb0:	mov	w8, #0x1                   	// #1
  404eb4:	stur	w8, [x29, #-56]
  404eb8:	sub	x0, x29, #0x10
  404ebc:	bl	406fbc <endmntentp>
  404ec0:	ldur	w0, [x29, #-4]
  404ec4:	ldr	x28, [sp, #416]
  404ec8:	ldp	x29, x30, [sp, #400]
  404ecc:	add	sp, sp, #0x1b0
  404ed0:	ret

0000000000404ed4 <proc_cmdline_value_missing>:
  404ed4:	sub	sp, sp, #0x50
  404ed8:	stp	x29, x30, [sp, #64]
  404edc:	add	x29, sp, #0x40
  404ee0:	adrp	x8, 409000 <relabel_extra+0xfc>
  404ee4:	add	x8, x8, #0x967
  404ee8:	add	x2, x8, #0x3
  404eec:	stur	x0, [x29, #-16]
  404ef0:	stur	x1, [x29, #-24]
  404ef4:	ldur	x8, [x29, #-24]
  404ef8:	str	x2, [sp, #16]
  404efc:	cbnz	x8, 404f8c <proc_cmdline_value_missing+0xb8>
  404f00:	mov	w8, #0x4                   	// #4
  404f04:	stur	w8, [x29, #-28]
  404f08:	str	wzr, [sp, #32]
  404f0c:	str	wzr, [sp, #28]
  404f10:	ldr	w0, [sp, #28]
  404f14:	bl	402288 <log_get_max_level_realm@plt>
  404f18:	ldur	w8, [x29, #-28]
  404f1c:	and	w8, w8, #0x7
  404f20:	cmp	w0, w8
  404f24:	b.lt	404f60 <proc_cmdline_value_missing+0x8c>  // b.tstop
  404f28:	ldr	w8, [sp, #28]
  404f2c:	ldur	w9, [x29, #-28]
  404f30:	orr	w0, w9, w8, lsl #10
  404f34:	ldr	w1, [sp, #32]
  404f38:	ldur	x6, [x29, #-16]
  404f3c:	ldr	x2, [sp, #16]
  404f40:	mov	w3, #0x21                  	// #33
  404f44:	adrp	x4, 409000 <relabel_extra+0xfc>
  404f48:	add	x4, x4, #0x983
  404f4c:	adrp	x5, 409000 <relabel_extra+0xfc>
  404f50:	add	x5, x5, #0x99e
  404f54:	bl	402298 <log_internal_realm@plt>
  404f58:	str	w0, [sp, #12]
  404f5c:	b	404f74 <proc_cmdline_value_missing+0xa0>
  404f60:	ldr	w0, [sp, #32]
  404f64:	bl	4022a8 <abs@plt>
  404f68:	mov	w8, wzr
  404f6c:	subs	w8, w8, w0, uxtb
  404f70:	str	w8, [sp, #12]
  404f74:	ldr	w8, [sp, #12]
  404f78:	str	w8, [sp, #24]
  404f7c:	mov	w8, #0x1                   	// #1
  404f80:	and	w8, w8, #0x1
  404f84:	sturb	w8, [x29, #-1]
  404f88:	b	404f98 <proc_cmdline_value_missing+0xc4>
  404f8c:	mov	w8, wzr
  404f90:	and	w8, w8, #0x1
  404f94:	sturb	w8, [x29, #-1]
  404f98:	ldurb	w8, [x29, #-1]
  404f9c:	and	w0, w8, #0x1
  404fa0:	ldp	x29, x30, [sp, #64]
  404fa4:	add	sp, sp, #0x50
  404fa8:	ret

0000000000404fac <isempty>:
  404fac:	sub	sp, sp, #0x10
  404fb0:	str	x0, [sp, #8]
  404fb4:	ldr	x8, [sp, #8]
  404fb8:	mov	w9, #0x1                   	// #1
  404fbc:	str	w9, [sp, #4]
  404fc0:	cbz	x8, 404fdc <isempty+0x30>
  404fc4:	ldr	x8, [sp, #8]
  404fc8:	ldrb	w9, [x8]
  404fcc:	cmp	w9, #0x0
  404fd0:	cset	w9, ne  // ne = any
  404fd4:	eor	w9, w9, #0x1
  404fd8:	str	w9, [sp, #4]
  404fdc:	ldr	w8, [sp, #4]
  404fe0:	and	w0, w8, #0x1
  404fe4:	add	sp, sp, #0x10
  404fe8:	ret

0000000000404fec <fstab_test_option>:
  404fec:	sub	sp, sp, #0x20
  404ff0:	stp	x29, x30, [sp, #16]
  404ff4:	add	x29, sp, #0x10
  404ff8:	mov	x8, xzr
  404ffc:	str	x0, [sp, #8]
  405000:	str	x1, [sp]
  405004:	ldr	x0, [sp, #8]
  405008:	ldr	x1, [sp]
  40500c:	mov	x2, x8
  405010:	mov	x3, x8
  405014:	mov	x4, x8
  405018:	bl	4024a8 <fstab_filter_options@plt>
  40501c:	cmp	w0, #0x0
  405020:	cset	w9, ne  // ne = any
  405024:	mov	w10, #0x1                   	// #1
  405028:	eor	w9, w9, #0x1
  40502c:	eor	w9, w9, w10
  405030:	and	w0, w9, #0x1
  405034:	ldp	x29, x30, [sp, #16]
  405038:	add	sp, sp, #0x20
  40503c:	ret

0000000000405040 <size_multiply_overflow>:
  405040:	sub	sp, sp, #0x20
  405044:	str	x0, [sp, #24]
  405048:	str	x1, [sp, #16]
  40504c:	ldr	x8, [sp, #16]
  405050:	mov	w9, #0x0                   	// #0
  405054:	str	w9, [sp, #12]
  405058:	cbz	x8, 405078 <size_multiply_overflow+0x38>
  40505c:	ldr	x8, [sp, #24]
  405060:	ldr	x9, [sp, #16]
  405064:	mov	x10, #0xffffffffffffffff    	// #-1
  405068:	udiv	x9, x10, x9
  40506c:	cmp	x8, x9
  405070:	cset	w11, hi  // hi = pmore
  405074:	str	w11, [sp, #12]
  405078:	ldr	w8, [sp, #12]
  40507c:	mov	w9, #0x1                   	// #1
  405080:	eor	w8, w8, #0x1
  405084:	eor	w8, w8, w9
  405088:	and	w8, w8, #0x1
  40508c:	mov	w0, w8
  405090:	sxtw	x10, w0
  405094:	cmp	x10, #0x0
  405098:	cset	w8, ne  // ne = any
  40509c:	and	w0, w8, #0x1
  4050a0:	add	sp, sp, #0x20
  4050a4:	ret

00000000004050a8 <strna>:
  4050a8:	sub	sp, sp, #0x20
  4050ac:	str	x0, [sp, #24]
  4050b0:	ldr	x8, [sp, #24]
  4050b4:	str	x8, [sp, #16]
  4050b8:	cbz	x8, 4050c8 <strna+0x20>
  4050bc:	ldr	x8, [sp, #16]
  4050c0:	str	x8, [sp, #8]
  4050c4:	b	4050d4 <strna+0x2c>
  4050c8:	adrp	x8, 409000 <relabel_extra+0xfc>
  4050cc:	add	x8, x8, #0xbaf
  4050d0:	str	x8, [sp, #8]
  4050d4:	ldr	x8, [sp, #8]
  4050d8:	mov	x0, x8
  4050dc:	add	sp, sp, #0x20
  4050e0:	ret

00000000004050e4 <add_mount>:
  4050e4:	stp	x29, x30, [sp, #-32]!
  4050e8:	stp	x28, x19, [sp, #16]
  4050ec:	mov	x29, sp
  4050f0:	sub	sp, sp, #0x200
  4050f4:	mov	x19, sp
  4050f8:	ldr	x8, [x29, #32]
  4050fc:	ldr	x9, [x29, #40]
  405100:	mov	x10, xzr
  405104:	adrp	x11, 409000 <relabel_extra+0xfc>
  405108:	add	x11, x11, #0x790
  40510c:	add	x11, x11, #0x3
  405110:	adrp	x12, 409000 <relabel_extra+0xfc>
  405114:	add	x12, x12, #0xc6a
  405118:	adrp	x13, 409000 <relabel_extra+0xfc>
  40511c:	add	x13, x13, #0xbb8
  405120:	stur	x0, [x29, #-16]
  405124:	stur	x1, [x29, #-24]
  405128:	stur	x2, [x29, #-32]
  40512c:	stur	x3, [x29, #-40]
  405130:	stur	x4, [x29, #-48]
  405134:	stur	x5, [x29, #-56]
  405138:	stur	w6, [x29, #-60]
  40513c:	stur	w7, [x29, #-64]
  405140:	stur	x8, [x29, #-72]
  405144:	stur	x9, [x29, #-80]
  405148:	stur	x10, [x29, #-88]
  40514c:	stur	x10, [x29, #-96]
  405150:	stur	x10, [x29, #-104]
  405154:	stur	x10, [x29, #-112]
  405158:	stur	x10, [x29, #-120]
  40515c:	str	x11, [x19, #112]
  405160:	str	x12, [x19, #104]
  405164:	str	x13, [x19, #96]
  405168:	ldur	x8, [x29, #-24]
  40516c:	cmp	x8, #0x0
  405170:	cset	w9, ne  // ne = any
  405174:	mov	w10, #0x1                   	// #1
  405178:	eor	w9, w9, #0x1
  40517c:	eor	w9, w9, w10
  405180:	eor	w9, w9, w10
  405184:	and	w9, w9, #0x1
  405188:	mov	w0, w9
  40518c:	sxtw	x8, w0
  405190:	cbz	x8, 4051b4 <add_mount+0xd0>
  405194:	mov	w8, wzr
  405198:	mov	w0, w8
  40519c:	adrp	x1, 409000 <relabel_extra+0xfc>
  4051a0:	add	x1, x1, #0xbb3
  4051a4:	ldr	x2, [x19, #112]
  4051a8:	mov	w3, #0x138                 	// #312
  4051ac:	ldr	x4, [x19, #96]
  4051b0:	bl	4022f8 <log_assert_failed_realm@plt>
  4051b4:	ldur	x8, [x29, #-32]
  4051b8:	cmp	x8, #0x0
  4051bc:	cset	w9, ne  // ne = any
  4051c0:	mov	w10, #0x1                   	// #1
  4051c4:	eor	w9, w9, #0x1
  4051c8:	eor	w9, w9, w10
  4051cc:	eor	w9, w9, w10
  4051d0:	and	w9, w9, #0x1
  4051d4:	mov	w0, w9
  4051d8:	sxtw	x8, w0
  4051dc:	cbz	x8, 405200 <add_mount+0x11c>
  4051e0:	mov	w8, wzr
  4051e4:	mov	w0, w8
  4051e8:	adrp	x1, 409000 <relabel_extra+0xfc>
  4051ec:	add	x1, x1, #0xc4c
  4051f0:	ldr	x2, [x19, #112]
  4051f4:	mov	w3, #0x139                 	// #313
  4051f8:	ldr	x4, [x19, #96]
  4051fc:	bl	4022f8 <log_assert_failed_realm@plt>
  405200:	ldur	x8, [x29, #-56]
  405204:	cmp	x8, #0x0
  405208:	cset	w9, ne  // ne = any
  40520c:	mov	w10, #0x1                   	// #1
  405210:	eor	w9, w9, #0x1
  405214:	eor	w9, w9, w10
  405218:	eor	w9, w9, w10
  40521c:	and	w9, w9, #0x1
  405220:	mov	w0, w9
  405224:	sxtw	x8, w0
  405228:	cbz	x8, 40524c <add_mount+0x168>
  40522c:	mov	w8, wzr
  405230:	mov	w0, w8
  405234:	adrp	x1, 409000 <relabel_extra+0xfc>
  405238:	add	x1, x1, #0xc52
  40523c:	ldr	x2, [x19, #112]
  405240:	mov	w3, #0x13a                 	// #314
  405244:	ldr	x4, [x19, #96]
  405248:	bl	4022f8 <log_assert_failed_realm@plt>
  40524c:	ldur	x8, [x29, #-72]
  405250:	cmp	x8, #0x0
  405254:	cset	w9, ne  // ne = any
  405258:	mov	w10, #0x1                   	// #1
  40525c:	eor	w9, w9, #0x1
  405260:	eor	w9, w9, w10
  405264:	eor	w9, w9, w10
  405268:	and	w9, w9, #0x1
  40526c:	mov	w0, w9
  405270:	sxtw	x8, w0
  405274:	cbz	x8, 405298 <add_mount+0x1b4>
  405278:	mov	w8, wzr
  40527c:	mov	w0, w8
  405280:	adrp	x1, 409000 <relabel_extra+0xfc>
  405284:	add	x1, x1, #0xc57
  405288:	ldr	x2, [x19, #112]
  40528c:	mov	w3, #0x13b                 	// #315
  405290:	ldr	x4, [x19, #96]
  405294:	bl	4022f8 <log_assert_failed_realm@plt>
  405298:	ldur	x8, [x29, #-80]
  40529c:	cmp	x8, #0x0
  4052a0:	cset	w9, ne  // ne = any
  4052a4:	mov	w10, #0x1                   	// #1
  4052a8:	eor	w9, w9, #0x1
  4052ac:	eor	w9, w9, w10
  4052b0:	eor	w9, w9, w10
  4052b4:	and	w9, w9, #0x1
  4052b8:	mov	w0, w9
  4052bc:	sxtw	x8, w0
  4052c0:	cbz	x8, 4052e4 <add_mount+0x200>
  4052c4:	mov	w8, wzr
  4052c8:	mov	w0, w8
  4052cc:	adrp	x1, 409000 <relabel_extra+0xfc>
  4052d0:	add	x1, x1, #0xc5c
  4052d4:	ldr	x2, [x19, #112]
  4052d8:	mov	w3, #0x13c                 	// #316
  4052dc:	ldr	x4, [x19, #96]
  4052e0:	bl	4022f8 <log_assert_failed_realm@plt>
  4052e4:	ldur	x0, [x29, #-48]
  4052e8:	adrp	x1, 409000 <relabel_extra+0xfc>
  4052ec:	add	x1, x1, #0xc63
  4052f0:	bl	406274 <streq_ptr>
  4052f4:	tbnz	w0, #0, 4052fc <add_mount+0x218>
  4052f8:	b	40530c <add_mount+0x228>
  4052fc:	stur	wzr, [x29, #-4]
  405300:	mov	w8, #0x1                   	// #1
  405304:	stur	w8, [x29, #-128]
  405308:	b	406210 <add_mount+0x112c>
  40530c:	ldur	x0, [x29, #-32]
  405310:	bl	402478 <is_path@plt>
  405314:	tbnz	w0, #0, 4053a0 <add_mount+0x2bc>
  405318:	mov	w8, #0x4                   	// #4
  40531c:	stur	w8, [x29, #-132]
  405320:	stur	wzr, [x29, #-136]
  405324:	stur	wzr, [x29, #-140]
  405328:	ldur	w0, [x29, #-140]
  40532c:	bl	402288 <log_get_max_level_realm@plt>
  405330:	ldur	w8, [x29, #-132]
  405334:	and	w8, w8, #0x7
  405338:	cmp	w0, w8
  40533c:	b.lt	405374 <add_mount+0x290>  // b.tstop
  405340:	ldur	w8, [x29, #-140]
  405344:	ldur	w9, [x29, #-132]
  405348:	orr	w0, w9, w8, lsl #10
  40534c:	ldur	w1, [x29, #-136]
  405350:	ldur	x6, [x29, #-32]
  405354:	ldr	x2, [x19, #112]
  405358:	mov	w3, #0x142                 	// #322
  40535c:	ldr	x4, [x19, #104]
  405360:	adrp	x5, 409000 <relabel_extra+0xfc>
  405364:	add	x5, x5, #0xc74
  405368:	bl	402298 <log_internal_realm@plt>
  40536c:	str	w0, [x19, #92]
  405370:	b	405388 <add_mount+0x2a4>
  405374:	ldur	w0, [x29, #-136]
  405378:	bl	4022a8 <abs@plt>
  40537c:	mov	w8, wzr
  405380:	subs	w8, w8, w0, uxtb
  405384:	str	w8, [x19, #92]
  405388:	ldr	w8, [x19, #92]
  40538c:	stur	w8, [x29, #-144]
  405390:	stur	wzr, [x29, #-4]
  405394:	mov	w8, #0x1                   	// #1
  405398:	stur	w8, [x29, #-128]
  40539c:	b	406210 <add_mount+0x112c>
  4053a0:	ldur	x0, [x29, #-32]
  4053a4:	bl	407818 <mount_point_is_api>
  4053a8:	tbnz	w0, #0, 4053bc <add_mount+0x2d8>
  4053ac:	ldur	x0, [x29, #-32]
  4053b0:	bl	4078c0 <mount_point_ignore>
  4053b4:	tbnz	w0, #0, 4053bc <add_mount+0x2d8>
  4053b8:	b	4053cc <add_mount+0x2e8>
  4053bc:	stur	wzr, [x29, #-4]
  4053c0:	mov	w8, #0x1                   	// #1
  4053c4:	stur	w8, [x29, #-128]
  4053c8:	b	406210 <add_mount+0x112c>
  4053cc:	ldur	x0, [x29, #-32]
  4053d0:	adrp	x1, 409000 <relabel_extra+0xfc>
  4053d4:	add	x1, x1, #0xca2
  4053d8:	bl	4023c8 <path_equal@plt>
  4053dc:	tbnz	w0, #0, 4053e4 <add_mount+0x300>
  4053e0:	b	405570 <add_mount+0x48c>
  4053e4:	ldur	w8, [x29, #-64]
  4053e8:	and	w8, w8, #0x1
  4053ec:	cbz	w8, 405464 <add_mount+0x380>
  4053f0:	mov	w8, #0x4                   	// #4
  4053f4:	stur	w8, [x29, #-148]
  4053f8:	stur	wzr, [x29, #-152]
  4053fc:	stur	wzr, [x29, #-156]
  405400:	ldur	w0, [x29, #-156]
  405404:	bl	402288 <log_get_max_level_realm@plt>
  405408:	ldur	w8, [x29, #-148]
  40540c:	and	w8, w8, #0x7
  405410:	cmp	w0, w8
  405414:	b.lt	405448 <add_mount+0x364>  // b.tstop
  405418:	ldur	w8, [x29, #-156]
  40541c:	ldur	w9, [x29, #-148]
  405420:	orr	w0, w9, w8, lsl #10
  405424:	ldur	w1, [x29, #-152]
  405428:	ldr	x2, [x19, #112]
  40542c:	mov	w3, #0x14c                 	// #332
  405430:	ldr	x4, [x19, #104]
  405434:	adrp	x5, 409000 <relabel_extra+0xfc>
  405438:	add	x5, x5, #0xca4
  40543c:	bl	402298 <log_internal_realm@plt>
  405440:	str	w0, [x19, #88]
  405444:	b	40545c <add_mount+0x378>
  405448:	ldur	w0, [x29, #-152]
  40544c:	bl	4022a8 <abs@plt>
  405450:	mov	w8, wzr
  405454:	subs	w8, w8, w0, uxtb
  405458:	str	w8, [x19, #88]
  40545c:	ldr	w8, [x19, #88]
  405460:	stur	w8, [x29, #-160]
  405464:	ldur	w8, [x29, #-64]
  405468:	and	w8, w8, #0x2
  40546c:	cbz	w8, 4054e4 <add_mount+0x400>
  405470:	mov	w8, #0x4                   	// #4
  405474:	stur	w8, [x29, #-164]
  405478:	stur	wzr, [x29, #-168]
  40547c:	stur	wzr, [x29, #-172]
  405480:	ldur	w0, [x29, #-172]
  405484:	bl	402288 <log_get_max_level_realm@plt>
  405488:	ldur	w8, [x29, #-164]
  40548c:	and	w8, w8, #0x7
  405490:	cmp	w0, w8
  405494:	b.lt	4054c8 <add_mount+0x3e4>  // b.tstop
  405498:	ldur	w8, [x29, #-172]
  40549c:	ldur	w9, [x29, #-164]
  4054a0:	orr	w0, w9, w8, lsl #10
  4054a4:	ldur	w1, [x29, #-168]
  4054a8:	ldr	x2, [x19, #112]
  4054ac:	mov	w3, #0x14e                 	// #334
  4054b0:	ldr	x4, [x19, #104]
  4054b4:	adrp	x5, 409000 <relabel_extra+0xfc>
  4054b8:	add	x5, x5, #0xcc6
  4054bc:	bl	402298 <log_internal_realm@plt>
  4054c0:	str	w0, [x19, #84]
  4054c4:	b	4054dc <add_mount+0x3f8>
  4054c8:	ldur	w0, [x29, #-168]
  4054cc:	bl	4022a8 <abs@plt>
  4054d0:	mov	w8, wzr
  4054d4:	subs	w8, w8, w0, uxtb
  4054d8:	str	w8, [x19, #84]
  4054dc:	ldr	w8, [x19, #84]
  4054e0:	stur	w8, [x29, #-176]
  4054e4:	ldur	w8, [x29, #-64]
  4054e8:	and	w8, w8, #0x4
  4054ec:	cbz	w8, 405564 <add_mount+0x480>
  4054f0:	mov	w8, #0x4                   	// #4
  4054f4:	stur	w8, [x29, #-180]
  4054f8:	stur	wzr, [x29, #-184]
  4054fc:	stur	wzr, [x29, #-188]
  405500:	ldur	w0, [x29, #-188]
  405504:	bl	402288 <log_get_max_level_realm@plt>
  405508:	ldur	w8, [x29, #-180]
  40550c:	and	w8, w8, #0x7
  405510:	cmp	w0, w8
  405514:	b.lt	405548 <add_mount+0x464>  // b.tstop
  405518:	ldur	w8, [x29, #-188]
  40551c:	ldur	w9, [x29, #-180]
  405520:	orr	w0, w9, w8, lsl #10
  405524:	ldur	w1, [x29, #-184]
  405528:	ldr	x2, [x19, #112]
  40552c:	mov	w3, #0x150                 	// #336
  405530:	ldr	x4, [x19, #104]
  405534:	adrp	x5, 409000 <relabel_extra+0xfc>
  405538:	add	x5, x5, #0xce8
  40553c:	bl	402298 <log_internal_realm@plt>
  405540:	str	w0, [x19, #80]
  405544:	b	40555c <add_mount+0x478>
  405548:	ldur	w0, [x29, #-184]
  40554c:	bl	4022a8 <abs@plt>
  405550:	mov	w8, wzr
  405554:	subs	w8, w8, w0, uxtb
  405558:	str	w8, [x19, #80]
  40555c:	ldr	w8, [x19, #80]
  405560:	stur	w8, [x29, #-192]
  405564:	ldur	w8, [x29, #-64]
  405568:	and	w8, w8, #0xfffffff8
  40556c:	stur	w8, [x29, #-64]
  405570:	ldur	x0, [x29, #-32]
  405574:	adrp	x1, 409000 <relabel_extra+0xfc>
  405578:	add	x1, x1, #0xd12
  40557c:	sub	x2, x29, #0x58
  405580:	bl	4024b8 <unit_name_from_path@plt>
  405584:	stur	w0, [x29, #-124]
  405588:	ldur	w8, [x29, #-124]
  40558c:	cmp	w8, #0x0
  405590:	cset	w8, ge  // ge = tcont
  405594:	tbnz	w8, #0, 405624 <add_mount+0x540>
  405598:	mov	w8, #0x3                   	// #3
  40559c:	stur	w8, [x29, #-196]
  4055a0:	ldur	w8, [x29, #-124]
  4055a4:	stur	w8, [x29, #-200]
  4055a8:	stur	wzr, [x29, #-204]
  4055ac:	ldur	w0, [x29, #-204]
  4055b0:	bl	402288 <log_get_max_level_realm@plt>
  4055b4:	ldur	w8, [x29, #-196]
  4055b8:	and	w8, w8, #0x7
  4055bc:	cmp	w0, w8
  4055c0:	b.lt	4055f4 <add_mount+0x510>  // b.tstop
  4055c4:	ldur	w8, [x29, #-204]
  4055c8:	ldur	w9, [x29, #-196]
  4055cc:	orr	w0, w9, w8, lsl #10
  4055d0:	ldur	w1, [x29, #-200]
  4055d4:	ldr	x2, [x19, #112]
  4055d8:	mov	w3, #0x157                 	// #343
  4055dc:	ldr	x4, [x19, #104]
  4055e0:	adrp	x5, 409000 <relabel_extra+0xfc>
  4055e4:	add	x5, x5, #0xd19
  4055e8:	bl	402298 <log_internal_realm@plt>
  4055ec:	str	w0, [x19, #76]
  4055f0:	b	405608 <add_mount+0x524>
  4055f4:	ldur	w0, [x29, #-200]
  4055f8:	bl	4022a8 <abs@plt>
  4055fc:	mov	w8, wzr
  405600:	subs	w8, w8, w0, uxtb
  405604:	str	w8, [x19, #76]
  405608:	ldr	w8, [x19, #76]
  40560c:	stur	w8, [x29, #-208]
  405610:	ldur	w8, [x29, #-208]
  405614:	stur	w8, [x29, #-4]
  405618:	mov	w8, #0x1                   	// #1
  40561c:	stur	w8, [x29, #-128]
  405620:	b	406210 <add_mount+0x112c>
  405624:	ldur	x0, [x29, #-16]
  405628:	str	x0, [x19, #64]
  40562c:	bl	4062ac <fstab_path>
  405630:	ldur	x2, [x29, #-88]
  405634:	ldr	x8, [x19, #64]
  405638:	str	x0, [x19, #56]
  40563c:	mov	x0, x8
  405640:	ldr	x1, [x19, #56]
  405644:	sub	x3, x29, #0x78
  405648:	bl	4024c8 <generator_open_unit_file@plt>
  40564c:	stur	w0, [x29, #-124]
  405650:	ldur	w9, [x29, #-124]
  405654:	cmp	w9, #0x0
  405658:	cset	w9, ge  // ge = tcont
  40565c:	tbnz	w9, #0, 405674 <add_mount+0x590>
  405660:	ldur	w8, [x29, #-124]
  405664:	stur	w8, [x29, #-4]
  405668:	mov	w8, #0x1                   	// #1
  40566c:	stur	w8, [x29, #-128]
  405670:	b	406210 <add_mount+0x112c>
  405674:	ldur	x0, [x29, #-120]
  405678:	ldur	x2, [x29, #-80]
  40567c:	adrp	x1, 409000 <relabel_extra+0xfc>
  405680:	add	x1, x1, #0xd3a
  405684:	bl	4024d8 <fprintf@plt>
  405688:	bl	402318 <in_initrd@plt>
  40568c:	tbnz	w0, #0, 405694 <add_mount+0x5b0>
  405690:	b	4056b8 <add_mount+0x5d4>
  405694:	ldur	x0, [x29, #-32]
  405698:	adrp	x1, 409000 <relabel_extra+0xfc>
  40569c:	add	x1, x1, #0xb82
  4056a0:	bl	4024e8 <path_startswith@plt>
  4056a4:	cbz	x0, 4056b8 <add_mount+0x5d4>
  4056a8:	ldur	x0, [x29, #-120]
  4056ac:	adrp	x1, 409000 <relabel_extra+0xfc>
  4056b0:	add	x1, x1, #0xd8a
  4056b4:	bl	4024d8 <fprintf@plt>
  4056b8:	ldur	x8, [x29, #-48]
  4056bc:	stur	x8, [x29, #-216]
  4056c0:	ldur	x8, [x29, #-216]
  4056c4:	mov	w9, #0x0                   	// #0
  4056c8:	str	w9, [x19, #52]
  4056cc:	cbz	x8, 40570c <add_mount+0x628>
  4056d0:	adrp	x8, 420000 <arg_fstab_enabled>
  4056d4:	add	x8, x8, #0x28
  4056d8:	ldr	q0, [x8]
  4056dc:	add	x0, x19, #0x100
  4056e0:	str	q0, [x19, #256]
  4056e4:	ldr	x8, [x8, #16]
  4056e8:	str	x8, [x19, #272]
  4056ec:	ldur	x1, [x29, #-216]
  4056f0:	bl	402348 <strv_find@plt>
  4056f4:	cmp	x0, #0x0
  4056f8:	cset	w9, ne  // ne = any
  4056fc:	mov	w10, #0x1                   	// #1
  405700:	eor	w9, w9, #0x1
  405704:	eor	w9, w9, w10
  405708:	str	w9, [x19, #52]
  40570c:	ldr	w8, [x19, #52]
  405710:	and	w8, w8, #0x1
  405714:	stur	w8, [x29, #-220]
  405718:	ldur	w8, [x29, #-220]
  40571c:	cbz	w8, 405974 <add_mount+0x890>
  405720:	ldur	w8, [x29, #-64]
  405724:	and	w8, w8, #0x4
  405728:	cbnz	w8, 405974 <add_mount+0x890>
  40572c:	ldur	x0, [x29, #-56]
  405730:	adrp	x1, 40a000 <_fini+0x894>
  405734:	add	x1, x1, #0xbf7
  405738:	bl	4062f8 <fstab_test_yes_no_option>
  40573c:	tbnz	w0, #0, 405744 <add_mount+0x660>
  405740:	b	405974 <add_mount+0x890>
  405744:	add	x8, x19, #0xe8
  405748:	adrp	x9, 409000 <relabel_extra+0xfc>
  40574c:	add	x9, x9, #0xdab
  405750:	str	x9, [x19, #232]
  405754:	ldur	x9, [x29, #-56]
  405758:	str	x9, [x8, #8]
  40575c:	adrp	x9, 409000 <relabel_extra+0xfc>
  405760:	add	x9, x9, #0xdd9
  405764:	str	x9, [x8, #16]
  405768:	str	xzr, [x19, #208]
  40576c:	str	xzr, [x19, #200]
  405770:	ldr	x8, [x19, #200]
  405774:	mov	w9, #0x0                   	// #0
  405778:	cmp	x8, #0x3
  40577c:	str	w9, [x19, #48]
  405780:	b.cs	4057a8 <add_mount+0x6c4>  // b.hs, b.nlast
  405784:	ldr	x8, [x19, #200]
  405788:	mov	x9, #0x8                   	// #8
  40578c:	mul	x8, x9, x8
  405790:	add	x9, x19, #0xe8
  405794:	add	x8, x9, x8
  405798:	ldr	x8, [x8]
  40579c:	cmp	x8, #0x0
  4057a0:	cset	w10, ne  // ne = any
  4057a4:	str	w10, [x19, #48]
  4057a8:	ldr	w8, [x19, #48]
  4057ac:	tbnz	w8, #0, 4057b4 <add_mount+0x6d0>
  4057b0:	b	4057ec <add_mount+0x708>
  4057b4:	ldr	x8, [x19, #200]
  4057b8:	mov	x9, #0x8                   	// #8
  4057bc:	mul	x8, x9, x8
  4057c0:	add	x9, x19, #0xe8
  4057c4:	add	x8, x9, x8
  4057c8:	ldr	x0, [x8]
  4057cc:	bl	4023e8 <strlen@plt>
  4057d0:	ldr	x8, [x19, #208]
  4057d4:	add	x8, x8, x0
  4057d8:	str	x8, [x19, #208]
  4057dc:	ldr	x8, [x19, #200]
  4057e0:	add	x8, x8, #0x1
  4057e4:	str	x8, [x19, #200]
  4057e8:	b	405770 <add_mount+0x68c>
  4057ec:	ldr	x8, [x19, #208]
  4057f0:	add	x8, x8, #0x1
  4057f4:	str	x8, [x19, #192]
  4057f8:	ldr	x1, [x19, #192]
  4057fc:	mov	x0, #0x1                   	// #1
  405800:	bl	405040 <size_multiply_overflow>
  405804:	mov	w8, #0x1                   	// #1
  405808:	eor	w9, w0, #0x1
  40580c:	eor	w9, w9, w8
  405810:	eor	w9, w9, w8
  405814:	eor	w8, w9, w8
  405818:	and	w8, w8, #0x1
  40581c:	mov	w1, w8
  405820:	sxtw	x10, w1
  405824:	cbz	x10, 405848 <add_mount+0x764>
  405828:	mov	w8, wzr
  40582c:	mov	w0, w8
  405830:	adrp	x1, 409000 <relabel_extra+0xfc>
  405834:	add	x1, x1, #0xaf1
  405838:	ldr	x2, [x19, #112]
  40583c:	mov	w3, #0x173                 	// #371
  405840:	ldr	x4, [x19, #96]
  405844:	bl	4022f8 <log_assert_failed_realm@plt>
  405848:	ldr	x8, [x19, #192]
  40584c:	mov	x9, #0x1                   	// #1
  405850:	mul	x8, x9, x8
  405854:	cmp	x8, #0x400, lsl #12
  405858:	cset	w10, ls  // ls = plast
  40585c:	mov	w11, #0x1                   	// #1
  405860:	eor	w10, w10, #0x1
  405864:	eor	w10, w10, w11
  405868:	eor	w10, w10, w11
  40586c:	and	w10, w10, #0x1
  405870:	mov	w0, w10
  405874:	sxtw	x8, w0
  405878:	cbz	x8, 40589c <add_mount+0x7b8>
  40587c:	mov	w8, wzr
  405880:	mov	w0, w8
  405884:	adrp	x1, 409000 <relabel_extra+0xfc>
  405888:	add	x1, x1, #0xb38
  40588c:	ldr	x2, [x19, #112]
  405890:	mov	w3, #0x173                 	// #371
  405894:	ldr	x4, [x19, #96]
  405898:	bl	4022f8 <log_assert_failed_realm@plt>
  40589c:	ldr	x8, [x19, #192]
  4058a0:	mov	x9, #0x1                   	// #1
  4058a4:	mul	x8, x9, x8
  4058a8:	mul	x8, x8, x9
  4058ac:	add	x8, x8, #0xf
  4058b0:	and	x8, x8, #0xfffffffffffffff0
  4058b4:	mov	x9, sp
  4058b8:	subs	x8, x9, x8
  4058bc:	mov	sp, x8
  4058c0:	str	x8, [x19, #184]
  4058c4:	ldr	x8, [x19, #184]
  4058c8:	str	x8, [x19, #224]
  4058cc:	str	x8, [x19, #216]
  4058d0:	str	xzr, [x19, #200]
  4058d4:	ldr	x8, [x19, #200]
  4058d8:	mov	w9, #0x0                   	// #0
  4058dc:	cmp	x8, #0x3
  4058e0:	str	w9, [x19, #44]
  4058e4:	b.cs	40590c <add_mount+0x828>  // b.hs, b.nlast
  4058e8:	ldr	x8, [x19, #200]
  4058ec:	mov	x9, #0x8                   	// #8
  4058f0:	mul	x8, x9, x8
  4058f4:	add	x9, x19, #0xe8
  4058f8:	add	x8, x9, x8
  4058fc:	ldr	x8, [x8]
  405900:	cmp	x8, #0x0
  405904:	cset	w10, ne  // ne = any
  405908:	str	w10, [x19, #44]
  40590c:	ldr	w8, [x19, #44]
  405910:	tbnz	w8, #0, 405918 <add_mount+0x834>
  405914:	b	40594c <add_mount+0x868>
  405918:	ldr	x0, [x19, #216]
  40591c:	ldr	x8, [x19, #200]
  405920:	mov	x9, #0x8                   	// #8
  405924:	mul	x8, x9, x8
  405928:	add	x9, x19, #0xe8
  40592c:	add	x8, x9, x8
  405930:	ldr	x1, [x8]
  405934:	bl	4023f8 <stpcpy@plt>
  405938:	str	x0, [x19, #216]
  40593c:	ldr	x8, [x19, #200]
  405940:	add	x8, x8, #0x1
  405944:	str	x8, [x19, #200]
  405948:	b	4058d4 <add_mount+0x7f0>
  40594c:	ldr	x8, [x19, #216]
  405950:	mov	w9, #0x0                   	// #0
  405954:	strb	w9, [x8]
  405958:	ldr	x8, [x19, #224]
  40595c:	str	x8, [x19, #176]
  405960:	ldr	x8, [x19, #176]
  405964:	stur	x8, [x29, #-56]
  405968:	ldur	w9, [x29, #-64]
  40596c:	orr	w9, w9, #0x2
  405970:	stur	w9, [x29, #-64]
  405974:	ldur	w8, [x29, #-64]
  405978:	and	w8, w8, #0x2
  40597c:	cbnz	w8, 4059a0 <add_mount+0x8bc>
  405980:	ldur	w8, [x29, #-64]
  405984:	and	w8, w8, #0x4
  405988:	cbnz	w8, 4059a0 <add_mount+0x8bc>
  40598c:	ldur	x0, [x29, #-120]
  405990:	ldur	x2, [x29, #-72]
  405994:	adrp	x1, 409000 <relabel_extra+0xfc>
  405998:	add	x1, x1, #0xddd
  40599c:	bl	4024d8 <fprintf@plt>
  4059a0:	ldur	w8, [x29, #-64]
  4059a4:	and	w8, w8, #0x4
  4059a8:	cbnz	w8, 405a84 <add_mount+0x9a0>
  4059ac:	ldur	x8, [x29, #-56]
  4059b0:	cbz	x8, 405a84 <add_mount+0x9a0>
  4059b4:	ldur	x0, [x29, #-120]
  4059b8:	ldur	x1, [x29, #-56]
  4059bc:	bl	4063a4 <write_after>
  4059c0:	stur	w0, [x29, #-124]
  4059c4:	ldur	w8, [x29, #-124]
  4059c8:	cmp	w8, #0x0
  4059cc:	cset	w8, ge  // ge = tcont
  4059d0:	tbnz	w8, #0, 4059e8 <add_mount+0x904>
  4059d4:	ldur	w8, [x29, #-124]
  4059d8:	stur	w8, [x29, #-4]
  4059dc:	mov	w8, #0x1                   	// #1
  4059e0:	stur	w8, [x29, #-128]
  4059e4:	b	406210 <add_mount+0x112c>
  4059e8:	ldur	x0, [x29, #-120]
  4059ec:	ldur	x1, [x29, #-56]
  4059f0:	bl	4063e0 <write_requires_after>
  4059f4:	stur	w0, [x29, #-124]
  4059f8:	ldur	w8, [x29, #-124]
  4059fc:	cmp	w8, #0x0
  405a00:	cset	w8, ge  // ge = tcont
  405a04:	tbnz	w8, #0, 405a1c <add_mount+0x938>
  405a08:	ldur	w8, [x29, #-124]
  405a0c:	stur	w8, [x29, #-4]
  405a10:	mov	w8, #0x1                   	// #1
  405a14:	stur	w8, [x29, #-128]
  405a18:	b	406210 <add_mount+0x112c>
  405a1c:	ldur	x0, [x29, #-120]
  405a20:	ldur	x1, [x29, #-56]
  405a24:	bl	40641c <write_before>
  405a28:	stur	w0, [x29, #-124]
  405a2c:	ldur	w8, [x29, #-124]
  405a30:	cmp	w8, #0x0
  405a34:	cset	w8, ge  // ge = tcont
  405a38:	tbnz	w8, #0, 405a50 <add_mount+0x96c>
  405a3c:	ldur	w8, [x29, #-124]
  405a40:	stur	w8, [x29, #-4]
  405a44:	mov	w8, #0x1                   	// #1
  405a48:	stur	w8, [x29, #-128]
  405a4c:	b	406210 <add_mount+0x112c>
  405a50:	ldur	x0, [x29, #-120]
  405a54:	ldur	x1, [x29, #-56]
  405a58:	bl	406458 <write_requires_mounts_for>
  405a5c:	stur	w0, [x29, #-124]
  405a60:	ldur	w8, [x29, #-124]
  405a64:	cmp	w8, #0x0
  405a68:	cset	w8, ge  // ge = tcont
  405a6c:	tbnz	w8, #0, 405a84 <add_mount+0x9a0>
  405a70:	ldur	w8, [x29, #-124]
  405a74:	stur	w8, [x29, #-4]
  405a78:	mov	w8, #0x1                   	// #1
  405a7c:	stur	w8, [x29, #-128]
  405a80:	b	406210 <add_mount+0x112c>
  405a84:	ldur	w8, [x29, #-60]
  405a88:	cbz	w8, 405acc <add_mount+0x9e8>
  405a8c:	ldur	x0, [x29, #-120]
  405a90:	ldur	x1, [x29, #-16]
  405a94:	ldur	x2, [x29, #-24]
  405a98:	ldur	x3, [x29, #-32]
  405a9c:	ldur	x4, [x29, #-48]
  405aa0:	bl	4024f8 <generator_write_fsck_deps@plt>
  405aa4:	stur	w0, [x29, #-124]
  405aa8:	ldur	w8, [x29, #-124]
  405aac:	cmp	w8, #0x0
  405ab0:	cset	w8, ge  // ge = tcont
  405ab4:	tbnz	w8, #0, 405acc <add_mount+0x9e8>
  405ab8:	ldur	w8, [x29, #-124]
  405abc:	stur	w8, [x29, #-4]
  405ac0:	mov	w8, #0x1                   	// #1
  405ac4:	stur	w8, [x29, #-128]
  405ac8:	b	406210 <add_mount+0x112c>
  405acc:	ldur	x0, [x29, #-120]
  405ad0:	adrp	x1, 409000 <relabel_extra+0xfc>
  405ad4:	add	x1, x1, #0xde8
  405ad8:	bl	4024d8 <fprintf@plt>
  405adc:	ldur	x8, [x29, #-40]
  405ae0:	cbz	x8, 405af8 <add_mount+0xa14>
  405ae4:	ldur	x0, [x29, #-120]
  405ae8:	ldur	x2, [x29, #-40]
  405aec:	adrp	x1, 409000 <relabel_extra+0xfc>
  405af0:	add	x1, x1, #0xdf2
  405af4:	bl	4024d8 <fprintf@plt>
  405af8:	ldur	x0, [x29, #-32]
  405afc:	bl	40673c <specifier_escape>
  405b00:	stur	x0, [x29, #-112]
  405b04:	ldur	x8, [x29, #-112]
  405b08:	cbnz	x8, 405b34 <add_mount+0xa50>
  405b0c:	mov	w8, wzr
  405b10:	mov	w0, w8
  405b14:	ldr	x1, [x19, #112]
  405b18:	mov	w2, #0x195                 	// #405
  405b1c:	ldr	x3, [x19, #104]
  405b20:	bl	402388 <log_oom_internal@plt>
  405b24:	stur	w0, [x29, #-4]
  405b28:	mov	w8, #0x1                   	// #1
  405b2c:	stur	w8, [x29, #-128]
  405b30:	b	406210 <add_mount+0x112c>
  405b34:	ldur	x0, [x29, #-120]
  405b38:	ldur	x2, [x29, #-112]
  405b3c:	adrp	x1, 409000 <relabel_extra+0xfc>
  405b40:	add	x1, x1, #0xe0b
  405b44:	bl	4024d8 <fprintf@plt>
  405b48:	ldur	x8, [x29, #-120]
  405b4c:	ldur	x1, [x29, #-24]
  405b50:	mov	x0, x8
  405b54:	bl	406770 <write_what>
  405b58:	stur	w0, [x29, #-124]
  405b5c:	ldur	w9, [x29, #-124]
  405b60:	cmp	w9, #0x0
  405b64:	cset	w9, ge  // ge = tcont
  405b68:	tbnz	w9, #0, 405b80 <add_mount+0xa9c>
  405b6c:	ldur	w8, [x29, #-124]
  405b70:	stur	w8, [x29, #-4]
  405b74:	mov	w8, #0x1                   	// #1
  405b78:	stur	w8, [x29, #-128]
  405b7c:	b	406210 <add_mount+0x112c>
  405b80:	ldur	x0, [x29, #-48]
  405b84:	bl	404fac <isempty>
  405b88:	tbnz	w0, #0, 405c00 <add_mount+0xb1c>
  405b8c:	ldur	x0, [x29, #-48]
  405b90:	adrp	x1, 409000 <relabel_extra+0xfc>
  405b94:	add	x1, x1, #0xe15
  405b98:	bl	402368 <strcmp@plt>
  405b9c:	cbz	w0, 405c00 <add_mount+0xb1c>
  405ba0:	ldur	x0, [x29, #-48]
  405ba4:	bl	40673c <specifier_escape>
  405ba8:	str	x0, [x19, #168]
  405bac:	ldr	x8, [x19, #168]
  405bb0:	cbnz	x8, 405bc8 <add_mount+0xae4>
  405bb4:	mov	w8, #0xfffffff4            	// #-12
  405bb8:	stur	w8, [x29, #-4]
  405bbc:	mov	w8, #0x1                   	// #1
  405bc0:	stur	w8, [x29, #-128]
  405bc4:	b	405be0 <add_mount+0xafc>
  405bc8:	ldur	x0, [x29, #-120]
  405bcc:	ldr	x2, [x19, #168]
  405bd0:	adrp	x1, 409000 <relabel_extra+0xfc>
  405bd4:	add	x1, x1, #0xe1a
  405bd8:	bl	4024d8 <fprintf@plt>
  405bdc:	stur	wzr, [x29, #-128]
  405be0:	add	x0, x19, #0xa8
  405be4:	bl	40306c <freep>
  405be8:	ldur	w8, [x29, #-128]
  405bec:	cmp	w8, #0x0
  405bf0:	cset	w8, eq  // eq = none
  405bf4:	eor	w8, w8, #0x1
  405bf8:	tbnz	w8, #0, 406210 <add_mount+0x112c>
  405bfc:	b	405c00 <add_mount+0xb1c>
  405c00:	ldur	x0, [x29, #-16]
  405c04:	ldur	x1, [x29, #-24]
  405c08:	ldur	x2, [x29, #-32]
  405c0c:	ldur	x3, [x29, #-56]
  405c10:	sub	x4, x29, #0x68
  405c14:	bl	402508 <generator_write_timeouts@plt>
  405c18:	stur	w0, [x29, #-124]
  405c1c:	ldur	w8, [x29, #-124]
  405c20:	cmp	w8, #0x0
  405c24:	cset	w8, ge  // ge = tcont
  405c28:	tbnz	w8, #0, 405c40 <add_mount+0xb5c>
  405c2c:	ldur	w8, [x29, #-124]
  405c30:	stur	w8, [x29, #-4]
  405c34:	mov	w8, #0x1                   	// #1
  405c38:	stur	w8, [x29, #-128]
  405c3c:	b	406210 <add_mount+0x112c>
  405c40:	ldur	x0, [x29, #-16]
  405c44:	ldur	x1, [x29, #-24]
  405c48:	ldur	x2, [x29, #-32]
  405c4c:	ldur	x3, [x29, #-56]
  405c50:	bl	402518 <generator_write_device_deps@plt>
  405c54:	stur	w0, [x29, #-124]
  405c58:	ldur	w8, [x29, #-124]
  405c5c:	cmp	w8, #0x0
  405c60:	cset	w8, ge  // ge = tcont
  405c64:	tbnz	w8, #0, 405c7c <add_mount+0xb98>
  405c68:	ldur	w8, [x29, #-124]
  405c6c:	stur	w8, [x29, #-4]
  405c70:	mov	w8, #0x1                   	// #1
  405c74:	stur	w8, [x29, #-128]
  405c78:	b	406210 <add_mount+0x112c>
  405c7c:	ldur	x0, [x29, #-120]
  405c80:	ldur	x1, [x29, #-32]
  405c84:	ldur	x2, [x29, #-56]
  405c88:	bl	406814 <write_mount_timeout>
  405c8c:	stur	w0, [x29, #-124]
  405c90:	ldur	w8, [x29, #-124]
  405c94:	cmp	w8, #0x0
  405c98:	cset	w8, ge  // ge = tcont
  405c9c:	tbnz	w8, #0, 405cb4 <add_mount+0xbd0>
  405ca0:	ldur	w8, [x29, #-124]
  405ca4:	stur	w8, [x29, #-4]
  405ca8:	mov	w8, #0x1                   	// #1
  405cac:	stur	w8, [x29, #-128]
  405cb0:	b	406210 <add_mount+0x112c>
  405cb4:	ldur	x0, [x29, #-120]
  405cb8:	ldur	x1, [x29, #-104]
  405cbc:	bl	406858 <write_options>
  405cc0:	stur	w0, [x29, #-124]
  405cc4:	ldur	w8, [x29, #-124]
  405cc8:	cmp	w8, #0x0
  405ccc:	cset	w8, ge  // ge = tcont
  405cd0:	tbnz	w8, #0, 405ce8 <add_mount+0xc04>
  405cd4:	ldur	w8, [x29, #-124]
  405cd8:	stur	w8, [x29, #-4]
  405cdc:	mov	w8, #0x1                   	// #1
  405ce0:	stur	w8, [x29, #-128]
  405ce4:	b	406210 <add_mount+0x112c>
  405ce8:	ldur	x0, [x29, #-120]
  405cec:	bl	402528 <fflush_and_check@plt>
  405cf0:	stur	w0, [x29, #-124]
  405cf4:	ldur	w8, [x29, #-124]
  405cf8:	cmp	w8, #0x0
  405cfc:	cset	w8, ge  // ge = tcont
  405d00:	tbnz	w8, #0, 405d94 <add_mount+0xcb0>
  405d04:	mov	w8, #0x3                   	// #3
  405d08:	str	w8, [x19, #164]
  405d0c:	ldur	w8, [x29, #-124]
  405d10:	str	w8, [x19, #160]
  405d14:	str	wzr, [x19, #156]
  405d18:	ldr	w0, [x19, #156]
  405d1c:	bl	402288 <log_get_max_level_realm@plt>
  405d20:	ldr	w8, [x19, #164]
  405d24:	and	w8, w8, #0x7
  405d28:	cmp	w0, w8
  405d2c:	b.lt	405d64 <add_mount+0xc80>  // b.tstop
  405d30:	ldr	w8, [x19, #156]
  405d34:	ldr	w9, [x19, #164]
  405d38:	orr	w0, w9, w8, lsl #10
  405d3c:	ldr	w1, [x19, #160]
  405d40:	ldur	x6, [x29, #-88]
  405d44:	ldr	x2, [x19, #112]
  405d48:	mov	w3, #0x1b8                 	// #440
  405d4c:	ldr	x4, [x19, #104]
  405d50:	adrp	x5, 409000 <relabel_extra+0xfc>
  405d54:	add	x5, x5, #0xe23
  405d58:	bl	402298 <log_internal_realm@plt>
  405d5c:	str	w0, [x19, #40]
  405d60:	b	405d78 <add_mount+0xc94>
  405d64:	ldr	w0, [x19, #160]
  405d68:	bl	4022a8 <abs@plt>
  405d6c:	mov	w8, wzr
  405d70:	subs	w8, w8, w0, uxtb
  405d74:	str	w8, [x19, #40]
  405d78:	ldr	w8, [x19, #40]
  405d7c:	str	w8, [x19, #152]
  405d80:	ldr	w8, [x19, #152]
  405d84:	stur	w8, [x29, #-4]
  405d88:	mov	w8, #0x1                   	// #1
  405d8c:	stur	w8, [x29, #-128]
  405d90:	b	406210 <add_mount+0x112c>
  405d94:	ldur	w8, [x29, #-64]
  405d98:	and	w8, w8, #0x8
  405d9c:	cbz	w8, 405ddc <add_mount+0xcf8>
  405da0:	ldur	x0, [x29, #-16]
  405da4:	ldur	x1, [x29, #-24]
  405da8:	ldur	x2, [x29, #-32]
  405dac:	ldur	x3, [x29, #-48]
  405db0:	bl	402538 <generator_hook_up_mkfs@plt>
  405db4:	stur	w0, [x29, #-124]
  405db8:	ldur	w8, [x29, #-124]
  405dbc:	cmp	w8, #0x0
  405dc0:	cset	w8, ge  // ge = tcont
  405dc4:	tbnz	w8, #0, 405ddc <add_mount+0xcf8>
  405dc8:	ldur	w8, [x29, #-124]
  405dcc:	stur	w8, [x29, #-4]
  405dd0:	mov	w8, #0x1                   	// #1
  405dd4:	stur	w8, [x29, #-128]
  405dd8:	b	406210 <add_mount+0x112c>
  405ddc:	ldur	w8, [x29, #-64]
  405de0:	and	w8, w8, #0x10
  405de4:	cbz	w8, 405e20 <add_mount+0xd3c>
  405de8:	ldur	x0, [x29, #-16]
  405dec:	ldur	x1, [x29, #-32]
  405df0:	ldur	x2, [x29, #-72]
  405df4:	bl	402548 <generator_hook_up_growfs@plt>
  405df8:	stur	w0, [x29, #-124]
  405dfc:	ldur	w8, [x29, #-124]
  405e00:	cmp	w8, #0x0
  405e04:	cset	w8, ge  // ge = tcont
  405e08:	tbnz	w8, #0, 405e20 <add_mount+0xd3c>
  405e0c:	ldur	w8, [x29, #-124]
  405e10:	stur	w8, [x29, #-4]
  405e14:	mov	w8, #0x1                   	// #1
  405e18:	stur	w8, [x29, #-128]
  405e1c:	b	406210 <add_mount+0x112c>
  405e20:	ldur	w8, [x29, #-64]
  405e24:	and	w8, w8, #0x1
  405e28:	cbnz	w8, 405e8c <add_mount+0xda8>
  405e2c:	ldur	w8, [x29, #-64]
  405e30:	and	w8, w8, #0x4
  405e34:	cbnz	w8, 405e8c <add_mount+0xda8>
  405e38:	ldur	x0, [x29, #-16]
  405e3c:	ldur	x1, [x29, #-72]
  405e40:	ldur	w8, [x29, #-64]
  405e44:	adrp	x9, 409000 <relabel_extra+0xfc>
  405e48:	add	x9, x9, #0xe4a
  405e4c:	adrp	x10, 409000 <relabel_extra+0xfc>
  405e50:	add	x10, x10, #0xe44
  405e54:	tst	w8, #0x2
  405e58:	csel	x2, x10, x9, ne  // ne = any
  405e5c:	ldur	x3, [x29, #-88]
  405e60:	bl	402428 <generator_add_symlink@plt>
  405e64:	stur	w0, [x29, #-124]
  405e68:	ldur	w8, [x29, #-124]
  405e6c:	cmp	w8, #0x0
  405e70:	cset	w8, ge  // ge = tcont
  405e74:	tbnz	w8, #0, 405e8c <add_mount+0xda8>
  405e78:	ldur	w8, [x29, #-124]
  405e7c:	stur	w8, [x29, #-4]
  405e80:	mov	w8, #0x1                   	// #1
  405e84:	stur	w8, [x29, #-128]
  405e88:	b	406210 <add_mount+0x112c>
  405e8c:	ldur	w8, [x29, #-64]
  405e90:	and	w8, w8, #0x4
  405e94:	cbz	w8, 406204 <add_mount+0x1120>
  405e98:	ldur	x0, [x29, #-32]
  405e9c:	adrp	x1, 409000 <relabel_extra+0xfc>
  405ea0:	add	x1, x1, #0xe53
  405ea4:	sub	x2, x29, #0x60
  405ea8:	bl	4024b8 <unit_name_from_path@plt>
  405eac:	stur	w0, [x29, #-124]
  405eb0:	ldur	w8, [x29, #-124]
  405eb4:	cmp	w8, #0x0
  405eb8:	cset	w8, ge  // ge = tcont
  405ebc:	tbnz	w8, #0, 405f4c <add_mount+0xe68>
  405ec0:	mov	w8, #0x3                   	// #3
  405ec4:	str	w8, [x19, #148]
  405ec8:	ldur	w8, [x29, #-124]
  405ecc:	str	w8, [x19, #144]
  405ed0:	str	wzr, [x19, #140]
  405ed4:	ldr	w0, [x19, #140]
  405ed8:	bl	402288 <log_get_max_level_realm@plt>
  405edc:	ldr	w8, [x19, #148]
  405ee0:	and	w8, w8, #0x7
  405ee4:	cmp	w0, w8
  405ee8:	b.lt	405f1c <add_mount+0xe38>  // b.tstop
  405eec:	ldr	w8, [x19, #140]
  405ef0:	ldr	w9, [x19, #148]
  405ef4:	orr	w0, w9, w8, lsl #10
  405ef8:	ldr	w1, [x19, #144]
  405efc:	ldr	x2, [x19, #112]
  405f00:	mov	w3, #0x1d0                 	// #464
  405f04:	ldr	x4, [x19, #104]
  405f08:	adrp	x5, 409000 <relabel_extra+0xfc>
  405f0c:	add	x5, x5, #0xd19
  405f10:	bl	402298 <log_internal_realm@plt>
  405f14:	str	w0, [x19, #36]
  405f18:	b	405f30 <add_mount+0xe4c>
  405f1c:	ldr	w0, [x19, #144]
  405f20:	bl	4022a8 <abs@plt>
  405f24:	mov	w8, wzr
  405f28:	subs	w8, w8, w0, uxtb
  405f2c:	str	w8, [x19, #36]
  405f30:	ldr	w8, [x19, #36]
  405f34:	str	w8, [x19, #136]
  405f38:	ldr	w8, [x19, #136]
  405f3c:	stur	w8, [x29, #-4]
  405f40:	mov	w8, #0x1                   	// #1
  405f44:	stur	w8, [x29, #-128]
  405f48:	b	406210 <add_mount+0x112c>
  405f4c:	sub	x3, x29, #0x78
  405f50:	ldur	x0, [x29, #-120]
  405f54:	str	x3, [x19, #24]
  405f58:	bl	402558 <safe_fclose@plt>
  405f5c:	stur	x0, [x29, #-120]
  405f60:	ldur	x0, [x29, #-16]
  405f64:	str	x0, [x19, #16]
  405f68:	bl	4062ac <fstab_path>
  405f6c:	ldur	x2, [x29, #-96]
  405f70:	ldr	x8, [x19, #16]
  405f74:	str	x0, [x19, #8]
  405f78:	mov	x0, x8
  405f7c:	ldr	x1, [x19, #8]
  405f80:	ldr	x3, [x19, #24]
  405f84:	bl	4024c8 <generator_open_unit_file@plt>
  405f88:	stur	w0, [x29, #-124]
  405f8c:	ldur	w9, [x29, #-124]
  405f90:	cmp	w9, #0x0
  405f94:	cset	w9, ge  // ge = tcont
  405f98:	tbnz	w9, #0, 405fb0 <add_mount+0xecc>
  405f9c:	ldur	w8, [x29, #-124]
  405fa0:	stur	w8, [x29, #-4]
  405fa4:	mov	w8, #0x1                   	// #1
  405fa8:	stur	w8, [x29, #-128]
  405fac:	b	406210 <add_mount+0x112c>
  405fb0:	ldur	x0, [x29, #-120]
  405fb4:	ldur	x2, [x29, #-80]
  405fb8:	adrp	x1, 409000 <relabel_extra+0xfc>
  405fbc:	add	x1, x1, #0xd3a
  405fc0:	bl	4024d8 <fprintf@plt>
  405fc4:	ldur	x8, [x29, #-120]
  405fc8:	ldur	x2, [x29, #-72]
  405fcc:	mov	x0, x8
  405fd0:	adrp	x1, 409000 <relabel_extra+0xfc>
  405fd4:	add	x1, x1, #0xddd
  405fd8:	bl	4024d8 <fprintf@plt>
  405fdc:	ldur	x8, [x29, #-56]
  405fe0:	cbz	x8, 4060b4 <add_mount+0xfd0>
  405fe4:	ldur	x0, [x29, #-120]
  405fe8:	ldur	x1, [x29, #-56]
  405fec:	bl	4063a4 <write_after>
  405ff0:	stur	w0, [x29, #-124]
  405ff4:	ldur	w8, [x29, #-124]
  405ff8:	cmp	w8, #0x0
  405ffc:	cset	w8, ge  // ge = tcont
  406000:	tbnz	w8, #0, 406018 <add_mount+0xf34>
  406004:	ldur	w8, [x29, #-124]
  406008:	stur	w8, [x29, #-4]
  40600c:	mov	w8, #0x1                   	// #1
  406010:	stur	w8, [x29, #-128]
  406014:	b	406210 <add_mount+0x112c>
  406018:	ldur	x0, [x29, #-120]
  40601c:	ldur	x1, [x29, #-56]
  406020:	bl	4063e0 <write_requires_after>
  406024:	stur	w0, [x29, #-124]
  406028:	ldur	w8, [x29, #-124]
  40602c:	cmp	w8, #0x0
  406030:	cset	w8, ge  // ge = tcont
  406034:	tbnz	w8, #0, 40604c <add_mount+0xf68>
  406038:	ldur	w8, [x29, #-124]
  40603c:	stur	w8, [x29, #-4]
  406040:	mov	w8, #0x1                   	// #1
  406044:	stur	w8, [x29, #-128]
  406048:	b	406210 <add_mount+0x112c>
  40604c:	ldur	x0, [x29, #-120]
  406050:	ldur	x1, [x29, #-56]
  406054:	bl	40641c <write_before>
  406058:	stur	w0, [x29, #-124]
  40605c:	ldur	w8, [x29, #-124]
  406060:	cmp	w8, #0x0
  406064:	cset	w8, ge  // ge = tcont
  406068:	tbnz	w8, #0, 406080 <add_mount+0xf9c>
  40606c:	ldur	w8, [x29, #-124]
  406070:	stur	w8, [x29, #-4]
  406074:	mov	w8, #0x1                   	// #1
  406078:	stur	w8, [x29, #-128]
  40607c:	b	406210 <add_mount+0x112c>
  406080:	ldur	x0, [x29, #-120]
  406084:	ldur	x1, [x29, #-56]
  406088:	bl	406458 <write_requires_mounts_for>
  40608c:	stur	w0, [x29, #-124]
  406090:	ldur	w8, [x29, #-124]
  406094:	cmp	w8, #0x0
  406098:	cset	w8, ge  // ge = tcont
  40609c:	tbnz	w8, #0, 4060b4 <add_mount+0xfd0>
  4060a0:	ldur	w8, [x29, #-124]
  4060a4:	stur	w8, [x29, #-4]
  4060a8:	mov	w8, #0x1                   	// #1
  4060ac:	stur	w8, [x29, #-128]
  4060b0:	b	406210 <add_mount+0x112c>
  4060b4:	ldur	x0, [x29, #-120]
  4060b8:	ldur	x2, [x29, #-112]
  4060bc:	adrp	x1, 409000 <relabel_extra+0xfc>
  4060c0:	add	x1, x1, #0xe5e
  4060c4:	bl	4024d8 <fprintf@plt>
  4060c8:	ldur	x8, [x29, #-120]
  4060cc:	ldur	x1, [x29, #-32]
  4060d0:	ldur	x2, [x29, #-56]
  4060d4:	mov	x0, x8
  4060d8:	bl	406940 <write_idle_timeout>
  4060dc:	stur	w0, [x29, #-124]
  4060e0:	ldur	w9, [x29, #-124]
  4060e4:	cmp	w9, #0x0
  4060e8:	cset	w9, ge  // ge = tcont
  4060ec:	tbnz	w9, #0, 406104 <add_mount+0x1020>
  4060f0:	ldur	w8, [x29, #-124]
  4060f4:	stur	w8, [x29, #-4]
  4060f8:	mov	w8, #0x1                   	// #1
  4060fc:	stur	w8, [x29, #-128]
  406100:	b	406210 <add_mount+0x112c>
  406104:	ldur	x0, [x29, #-120]
  406108:	bl	402528 <fflush_and_check@plt>
  40610c:	stur	w0, [x29, #-124]
  406110:	ldur	w8, [x29, #-124]
  406114:	cmp	w8, #0x0
  406118:	cset	w8, ge  // ge = tcont
  40611c:	tbnz	w8, #0, 4061b0 <add_mount+0x10cc>
  406120:	mov	w8, #0x3                   	// #3
  406124:	str	w8, [x19, #132]
  406128:	ldur	w8, [x29, #-124]
  40612c:	str	w8, [x19, #128]
  406130:	str	wzr, [x19, #124]
  406134:	ldr	w0, [x19, #124]
  406138:	bl	402288 <log_get_max_level_realm@plt>
  40613c:	ldr	w8, [x19, #132]
  406140:	and	w8, w8, #0x7
  406144:	cmp	w0, w8
  406148:	b.lt	406180 <add_mount+0x109c>  // b.tstop
  40614c:	ldr	w8, [x19, #124]
  406150:	ldr	w9, [x19, #132]
  406154:	orr	w0, w9, w8, lsl #10
  406158:	ldr	w1, [x19, #128]
  40615c:	ldur	x6, [x29, #-96]
  406160:	ldr	x2, [x19, #112]
  406164:	mov	w3, #0x1fb                 	// #507
  406168:	ldr	x4, [x19, #104]
  40616c:	adrp	x5, 409000 <relabel_extra+0xfc>
  406170:	add	x5, x5, #0xe23
  406174:	bl	402298 <log_internal_realm@plt>
  406178:	str	w0, [x19, #4]
  40617c:	b	406194 <add_mount+0x10b0>
  406180:	ldr	w0, [x19, #128]
  406184:	bl	4022a8 <abs@plt>
  406188:	mov	w8, wzr
  40618c:	subs	w8, w8, w0, uxtb
  406190:	str	w8, [x19, #4]
  406194:	ldr	w8, [x19, #4]
  406198:	str	w8, [x19, #120]
  40619c:	ldr	w8, [x19, #120]
  4061a0:	stur	w8, [x29, #-4]
  4061a4:	mov	w8, #0x1                   	// #1
  4061a8:	stur	w8, [x29, #-128]
  4061ac:	b	406210 <add_mount+0x112c>
  4061b0:	ldur	x0, [x29, #-16]
  4061b4:	ldur	x1, [x29, #-72]
  4061b8:	ldur	w8, [x29, #-64]
  4061bc:	adrp	x9, 409000 <relabel_extra+0xfc>
  4061c0:	add	x9, x9, #0xe4a
  4061c4:	adrp	x10, 409000 <relabel_extra+0xfc>
  4061c8:	add	x10, x10, #0xe44
  4061cc:	tst	w8, #0x2
  4061d0:	csel	x2, x10, x9, ne  // ne = any
  4061d4:	ldur	x3, [x29, #-96]
  4061d8:	bl	402428 <generator_add_symlink@plt>
  4061dc:	stur	w0, [x29, #-124]
  4061e0:	ldur	w8, [x29, #-124]
  4061e4:	cmp	w8, #0x0
  4061e8:	cset	w8, ge  // ge = tcont
  4061ec:	tbnz	w8, #0, 406204 <add_mount+0x1120>
  4061f0:	ldur	w8, [x29, #-124]
  4061f4:	stur	w8, [x29, #-4]
  4061f8:	mov	w8, #0x1                   	// #1
  4061fc:	stur	w8, [x29, #-128]
  406200:	b	406210 <add_mount+0x112c>
  406204:	stur	wzr, [x29, #-4]
  406208:	mov	w8, #0x1                   	// #1
  40620c:	stur	w8, [x29, #-128]
  406210:	sub	x0, x29, #0x78
  406214:	bl	40624c <fclosep>
  406218:	sub	x0, x29, #0x70
  40621c:	bl	40306c <freep>
  406220:	sub	x0, x29, #0x68
  406224:	bl	40306c <freep>
  406228:	sub	x0, x29, #0x60
  40622c:	bl	40306c <freep>
  406230:	sub	x0, x29, #0x58
  406234:	bl	40306c <freep>
  406238:	ldur	w0, [x29, #-4]
  40623c:	mov	sp, x29
  406240:	ldp	x28, x19, [sp, #16]
  406244:	ldp	x29, x30, [sp], #32
  406248:	ret

000000000040624c <fclosep>:
  40624c:	sub	sp, sp, #0x20
  406250:	stp	x29, x30, [sp, #16]
  406254:	add	x29, sp, #0x10
  406258:	str	x0, [sp, #8]
  40625c:	ldr	x8, [sp, #8]
  406260:	ldr	x0, [x8]
  406264:	bl	402558 <safe_fclose@plt>
  406268:	ldp	x29, x30, [sp, #16]
  40626c:	add	sp, sp, #0x20
  406270:	ret

0000000000406274 <streq_ptr>:
  406274:	sub	sp, sp, #0x20
  406278:	stp	x29, x30, [sp, #16]
  40627c:	add	x29, sp, #0x10
  406280:	str	x0, [sp, #8]
  406284:	str	x1, [sp]
  406288:	ldr	x0, [sp, #8]
  40628c:	ldr	x1, [sp]
  406290:	bl	402568 <strcmp_ptr@plt>
  406294:	cmp	w0, #0x0
  406298:	cset	w8, eq  // eq = none
  40629c:	and	w0, w8, #0x1
  4062a0:	ldp	x29, x30, [sp, #16]
  4062a4:	add	sp, sp, #0x20
  4062a8:	ret

00000000004062ac <fstab_path>:
  4062ac:	sub	sp, sp, #0x20
  4062b0:	stp	x29, x30, [sp, #16]
  4062b4:	add	x29, sp, #0x10
  4062b8:	adrp	x0, 409000 <relabel_extra+0xfc>
  4062bc:	add	x0, x0, #0xe75
  4062c0:	bl	402578 <secure_getenv@plt>
  4062c4:	str	x0, [sp, #8]
  4062c8:	cbz	x0, 4062d8 <fstab_path+0x2c>
  4062cc:	ldr	x8, [sp, #8]
  4062d0:	str	x8, [sp]
  4062d4:	b	4062e4 <fstab_path+0x38>
  4062d8:	adrp	x8, 409000 <relabel_extra+0xfc>
  4062dc:	add	x8, x8, #0xe83
  4062e0:	str	x8, [sp]
  4062e4:	ldr	x8, [sp]
  4062e8:	mov	x0, x8
  4062ec:	ldp	x29, x30, [sp, #16]
  4062f0:	add	sp, sp, #0x20
  4062f4:	ret

00000000004062f8 <fstab_test_yes_no_option>:
  4062f8:	sub	sp, sp, #0x30
  4062fc:	stp	x29, x30, [sp, #32]
  406300:	add	x29, sp, #0x20
  406304:	adrp	x8, 409000 <relabel_extra+0xfc>
  406308:	add	x8, x8, #0xec8
  40630c:	add	x2, x8, #0x3
  406310:	stur	x0, [x29, #-8]
  406314:	str	x1, [sp, #16]
  406318:	str	x2, [sp]
  40631c:	ldur	x0, [x29, #-8]
  406320:	ldr	x1, [sp, #16]
  406324:	add	x2, sp, #0x8
  406328:	mov	x8, xzr
  40632c:	mov	x3, x8
  406330:	mov	x4, x8
  406334:	bl	4024a8 <fstab_filter_options@plt>
  406338:	cmp	w0, #0x0
  40633c:	cset	w9, ge  // ge = tcont
  406340:	mov	w10, #0x1                   	// #1
  406344:	eor	w9, w9, #0x1
  406348:	eor	w9, w9, w10
  40634c:	eor	w9, w9, w10
  406350:	and	w9, w9, #0x1
  406354:	mov	w1, w9
  406358:	sxtw	x8, w1
  40635c:	cbz	x8, 406384 <fstab_test_yes_no_option+0x8c>
  406360:	mov	w8, wzr
  406364:	mov	w0, w8
  406368:	adrp	x1, 409000 <relabel_extra+0xfc>
  40636c:	add	x1, x1, #0xe8e
  406370:	ldr	x2, [sp]
  406374:	mov	w3, #0x1c                  	// #28
  406378:	adrp	x4, 409000 <relabel_extra+0xfc>
  40637c:	add	x4, x4, #0xee3
  406380:	bl	4022f8 <log_assert_failed_realm@plt>
  406384:	ldr	x8, [sp, #8]
  406388:	ldr	x9, [sp, #16]
  40638c:	cmp	x8, x9
  406390:	cset	w10, eq  // eq = none
  406394:	and	w0, w10, #0x1
  406398:	ldp	x29, x30, [sp, #32]
  40639c:	add	sp, sp, #0x30
  4063a0:	ret

00000000004063a4 <write_after>:
  4063a4:	sub	sp, sp, #0x20
  4063a8:	stp	x29, x30, [sp, #16]
  4063ac:	add	x29, sp, #0x10
  4063b0:	adrp	x2, 409000 <relabel_extra+0xfc>
  4063b4:	add	x2, x2, #0xf1e
  4063b8:	adrp	x3, 409000 <relabel_extra+0xfc>
  4063bc:	add	x3, x3, #0xf2e
  4063c0:	str	x0, [sp, #8]
  4063c4:	str	x1, [sp]
  4063c8:	ldr	x0, [sp, #8]
  4063cc:	ldr	x1, [sp]
  4063d0:	bl	406984 <write_dependency>
  4063d4:	ldp	x29, x30, [sp, #16]
  4063d8:	add	sp, sp, #0x20
  4063dc:	ret

00000000004063e0 <write_requires_after>:
  4063e0:	sub	sp, sp, #0x20
  4063e4:	stp	x29, x30, [sp, #16]
  4063e8:	add	x29, sp, #0x10
  4063ec:	adrp	x2, 409000 <relabel_extra+0xfc>
  4063f0:	add	x2, x2, #0xfc0
  4063f4:	adrp	x3, 409000 <relabel_extra+0xfc>
  4063f8:	add	x3, x3, #0xfd3
  4063fc:	str	x0, [sp, #8]
  406400:	str	x1, [sp]
  406404:	ldr	x0, [sp, #8]
  406408:	ldr	x1, [sp]
  40640c:	bl	406984 <write_dependency>
  406410:	ldp	x29, x30, [sp, #16]
  406414:	add	sp, sp, #0x20
  406418:	ret

000000000040641c <write_before>:
  40641c:	sub	sp, sp, #0x20
  406420:	stp	x29, x30, [sp, #16]
  406424:	add	x29, sp, #0x10
  406428:	adrp	x2, 409000 <relabel_extra+0xfc>
  40642c:	add	x2, x2, #0xfed
  406430:	adrp	x3, 409000 <relabel_extra+0xfc>
  406434:	add	x3, x3, #0xffe
  406438:	str	x0, [sp, #8]
  40643c:	str	x1, [sp]
  406440:	ldr	x0, [sp, #8]
  406444:	ldr	x1, [sp]
  406448:	bl	406984 <write_dependency>
  40644c:	ldp	x29, x30, [sp, #16]
  406450:	add	sp, sp, #0x20
  406454:	ret

0000000000406458 <write_requires_mounts_for>:
  406458:	sub	sp, sp, #0x80
  40645c:	stp	x29, x30, [sp, #112]
  406460:	add	x29, sp, #0x70
  406464:	mov	x8, xzr
  406468:	adrp	x9, 409000 <relabel_extra+0xfc>
  40646c:	add	x9, x9, #0x790
  406470:	add	x9, x9, #0x3
  406474:	adrp	x10, 40a000 <_fini+0x894>
  406478:	add	x10, x10, #0x5d
  40647c:	stur	x0, [x29, #-16]
  406480:	stur	x1, [x29, #-24]
  406484:	stur	x8, [x29, #-32]
  406488:	stur	x8, [x29, #-40]
  40648c:	stur	x8, [x29, #-48]
  406490:	str	x9, [sp, #16]
  406494:	str	x10, [sp, #8]
  406498:	ldur	x8, [x29, #-16]
  40649c:	cmp	x8, #0x0
  4064a0:	cset	w9, ne  // ne = any
  4064a4:	mov	w10, #0x1                   	// #1
  4064a8:	eor	w9, w9, #0x1
  4064ac:	eor	w9, w9, w10
  4064b0:	eor	w9, w9, w10
  4064b4:	and	w9, w9, #0x1
  4064b8:	mov	w0, w9
  4064bc:	sxtw	x8, w0
  4064c0:	cbz	x8, 4064e8 <write_requires_mounts_for+0x90>
  4064c4:	mov	w8, wzr
  4064c8:	mov	w0, w8
  4064cc:	adrp	x1, 409000 <relabel_extra+0xfc>
  4064d0:	add	x1, x1, #0xf3a
  4064d4:	ldr	x2, [sp, #16]
  4064d8:	mov	w3, #0x10e                 	// #270
  4064dc:	adrp	x4, 40a000 <_fini+0x894>
  4064e0:	add	x4, x4, #0xb
  4064e4:	bl	4022f8 <log_assert_failed_realm@plt>
  4064e8:	ldur	x8, [x29, #-24]
  4064ec:	cmp	x8, #0x0
  4064f0:	cset	w9, ne  // ne = any
  4064f4:	mov	w10, #0x1                   	// #1
  4064f8:	eor	w9, w9, #0x1
  4064fc:	eor	w9, w9, w10
  406500:	eor	w9, w9, w10
  406504:	and	w9, w9, #0x1
  406508:	mov	w0, w9
  40650c:	sxtw	x8, w0
  406510:	cbz	x8, 406538 <write_requires_mounts_for+0xe0>
  406514:	mov	w8, wzr
  406518:	mov	w0, w8
  40651c:	adrp	x1, 409000 <relabel_extra+0xfc>
  406520:	add	x1, x1, #0xc52
  406524:	ldr	x2, [sp, #16]
  406528:	mov	w3, #0x10f                 	// #271
  40652c:	adrp	x4, 40a000 <_fini+0x894>
  406530:	add	x4, x4, #0xb
  406534:	bl	4022f8 <log_assert_failed_realm@plt>
  406538:	ldur	x0, [x29, #-24]
  40653c:	adrp	x1, 40a000 <_fini+0x894>
  406540:	add	x1, x1, #0x3f
  406544:	sub	x2, x29, #0x20
  406548:	bl	402588 <fstab_extract_values@plt>
  40654c:	stur	w0, [x29, #-52]
  406550:	ldur	w8, [x29, #-52]
  406554:	cmp	w8, #0x0
  406558:	cset	w8, ge  // ge = tcont
  40655c:	tbnz	w8, #0, 4065ec <write_requires_mounts_for+0x194>
  406560:	mov	w8, #0x4                   	// #4
  406564:	str	w8, [sp, #56]
  406568:	ldur	w8, [x29, #-52]
  40656c:	str	w8, [sp, #52]
  406570:	str	wzr, [sp, #48]
  406574:	ldr	w0, [sp, #48]
  406578:	bl	402288 <log_get_max_level_realm@plt>
  40657c:	ldr	w8, [sp, #56]
  406580:	and	w8, w8, #0x7
  406584:	cmp	w0, w8
  406588:	b.lt	4065bc <write_requires_mounts_for+0x164>  // b.tstop
  40658c:	ldr	w8, [sp, #48]
  406590:	ldr	w9, [sp, #56]
  406594:	orr	w0, w9, w8, lsl #10
  406598:	ldr	w1, [sp, #52]
  40659c:	ldr	x2, [sp, #16]
  4065a0:	mov	w3, #0x113                 	// #275
  4065a4:	ldr	x4, [sp, #8]
  4065a8:	adrp	x5, 409000 <relabel_extra+0xfc>
  4065ac:	add	x5, x5, #0xf94
  4065b0:	bl	402298 <log_internal_realm@plt>
  4065b4:	str	w0, [sp, #4]
  4065b8:	b	4065d0 <write_requires_mounts_for+0x178>
  4065bc:	ldr	w0, [sp, #52]
  4065c0:	bl	4022a8 <abs@plt>
  4065c4:	mov	w8, wzr
  4065c8:	subs	w8, w8, w0, uxtb
  4065cc:	str	w8, [sp, #4]
  4065d0:	ldr	w8, [sp, #4]
  4065d4:	str	w8, [sp, #44]
  4065d8:	ldr	w8, [sp, #44]
  4065dc:	stur	w8, [x29, #-4]
  4065e0:	mov	w8, #0x1                   	// #1
  4065e4:	str	w8, [sp, #40]
  4065e8:	b	406714 <write_requires_mounts_for+0x2bc>
  4065ec:	ldur	w8, [x29, #-52]
  4065f0:	cbnz	w8, 406604 <write_requires_mounts_for+0x1ac>
  4065f4:	stur	wzr, [x29, #-4]
  4065f8:	mov	w8, #0x1                   	// #1
  4065fc:	str	w8, [sp, #40]
  406600:	b	406714 <write_requires_mounts_for+0x2bc>
  406604:	ldur	x0, [x29, #-32]
  406608:	sub	x1, x29, #0x28
  40660c:	bl	402598 <specifier_escape_strv@plt>
  406610:	stur	w0, [x29, #-52]
  406614:	ldur	w8, [x29, #-52]
  406618:	cmp	w8, #0x0
  40661c:	cset	w8, ge  // ge = tcont
  406620:	tbnz	w8, #0, 4066b0 <write_requires_mounts_for+0x258>
  406624:	mov	w8, #0x3                   	// #3
  406628:	str	w8, [sp, #36]
  40662c:	ldur	w8, [x29, #-52]
  406630:	str	w8, [sp, #32]
  406634:	str	wzr, [sp, #28]
  406638:	ldr	w0, [sp, #28]
  40663c:	bl	402288 <log_get_max_level_realm@plt>
  406640:	ldr	w8, [sp, #36]
  406644:	and	w8, w8, #0x7
  406648:	cmp	w0, w8
  40664c:	b.lt	406680 <write_requires_mounts_for+0x228>  // b.tstop
  406650:	ldr	w8, [sp, #28]
  406654:	ldr	w9, [sp, #36]
  406658:	orr	w0, w9, w8, lsl #10
  40665c:	ldr	w1, [sp, #32]
  406660:	ldr	x2, [sp, #16]
  406664:	mov	w3, #0x119                 	// #281
  406668:	ldr	x4, [sp, #8]
  40666c:	adrp	x5, 40a000 <_fini+0x894>
  406670:	add	x5, x5, #0x77
  406674:	bl	402298 <log_internal_realm@plt>
  406678:	str	w0, [sp]
  40667c:	b	406694 <write_requires_mounts_for+0x23c>
  406680:	ldr	w0, [sp, #32]
  406684:	bl	4022a8 <abs@plt>
  406688:	mov	w8, wzr
  40668c:	subs	w8, w8, w0, uxtb
  406690:	str	w8, [sp]
  406694:	ldr	w8, [sp]
  406698:	str	w8, [sp, #24]
  40669c:	ldr	w8, [sp, #24]
  4066a0:	stur	w8, [x29, #-4]
  4066a4:	mov	w8, #0x1                   	// #1
  4066a8:	str	w8, [sp, #40]
  4066ac:	b	406714 <write_requires_mounts_for+0x2bc>
  4066b0:	ldur	x0, [x29, #-40]
  4066b4:	adrp	x1, 409000 <relabel_extra+0xfc>
  4066b8:	add	x1, x1, #0xfbe
  4066bc:	bl	406d50 <strv_join>
  4066c0:	stur	x0, [x29, #-48]
  4066c4:	ldur	x8, [x29, #-48]
  4066c8:	cbnz	x8, 4066f4 <write_requires_mounts_for+0x29c>
  4066cc:	mov	w8, wzr
  4066d0:	mov	w0, w8
  4066d4:	ldr	x1, [sp, #16]
  4066d8:	mov	w2, #0x11d                 	// #285
  4066dc:	ldr	x3, [sp, #8]
  4066e0:	bl	402388 <log_oom_internal@plt>
  4066e4:	stur	w0, [x29, #-4]
  4066e8:	mov	w8, #0x1                   	// #1
  4066ec:	str	w8, [sp, #40]
  4066f0:	b	406714 <write_requires_mounts_for+0x2bc>
  4066f4:	ldur	x0, [x29, #-16]
  4066f8:	ldur	x2, [x29, #-48]
  4066fc:	adrp	x1, 40a000 <_fini+0x894>
  406700:	add	x1, x1, #0x92
  406704:	bl	4024d8 <fprintf@plt>
  406708:	stur	wzr, [x29, #-4]
  40670c:	mov	w8, #0x1                   	// #1
  406710:	str	w8, [sp, #40]
  406714:	sub	x0, x29, #0x30
  406718:	bl	40306c <freep>
  40671c:	sub	x0, x29, #0x28
  406720:	bl	406d1c <strv_freep>
  406724:	sub	x0, x29, #0x20
  406728:	bl	406d1c <strv_freep>
  40672c:	ldur	w0, [x29, #-4]
  406730:	ldp	x29, x30, [sp, #112]
  406734:	add	sp, sp, #0x80
  406738:	ret

000000000040673c <specifier_escape>:
  40673c:	sub	sp, sp, #0x20
  406740:	stp	x29, x30, [sp, #16]
  406744:	add	x29, sp, #0x10
  406748:	adrp	x1, 40a000 <_fini+0x894>
  40674c:	add	x1, x1, #0xa8
  406750:	adrp	x2, 40a000 <_fini+0x894>
  406754:	add	x2, x2, #0xaa
  406758:	str	x0, [sp, #8]
  40675c:	ldr	x0, [sp, #8]
  406760:	bl	4025a8 <strreplace@plt>
  406764:	ldp	x29, x30, [sp, #16]
  406768:	add	sp, sp, #0x20
  40676c:	ret

0000000000406770 <write_what>:
  406770:	sub	sp, sp, #0x40
  406774:	stp	x29, x30, [sp, #48]
  406778:	add	x29, sp, #0x30
  40677c:	mov	x8, xzr
  406780:	adrp	x9, 409000 <relabel_extra+0xfc>
  406784:	add	x9, x9, #0x790
  406788:	add	x9, x9, #0x3
  40678c:	stur	x0, [x29, #-16]
  406790:	str	x1, [sp, #24]
  406794:	str	x8, [sp, #16]
  406798:	ldr	x0, [sp, #24]
  40679c:	str	x9, [sp]
  4067a0:	bl	40673c <specifier_escape>
  4067a4:	str	x0, [sp, #16]
  4067a8:	ldr	x8, [sp, #16]
  4067ac:	cbnz	x8, 4067dc <write_what+0x6c>
  4067b0:	mov	w8, wzr
  4067b4:	mov	w0, w8
  4067b8:	ldr	x1, [sp]
  4067bc:	mov	w2, #0x53                  	// #83
  4067c0:	adrp	x3, 40a000 <_fini+0x894>
  4067c4:	add	x3, x3, #0xad
  4067c8:	bl	402388 <log_oom_internal@plt>
  4067cc:	stur	w0, [x29, #-4]
  4067d0:	mov	w8, #0x1                   	// #1
  4067d4:	str	w8, [sp, #12]
  4067d8:	b	4067fc <write_what+0x8c>
  4067dc:	ldur	x0, [x29, #-16]
  4067e0:	ldr	x2, [sp, #16]
  4067e4:	adrp	x1, 40a000 <_fini+0x894>
  4067e8:	add	x1, x1, #0xb8
  4067ec:	bl	4024d8 <fprintf@plt>
  4067f0:	mov	w8, #0x1                   	// #1
  4067f4:	stur	w8, [x29, #-4]
  4067f8:	str	w8, [sp, #12]
  4067fc:	add	x0, sp, #0x10
  406800:	bl	40306c <freep>
  406804:	ldur	w0, [x29, #-4]
  406808:	ldp	x29, x30, [sp, #48]
  40680c:	add	sp, sp, #0x40
  406810:	ret

0000000000406814 <write_mount_timeout>:
  406814:	sub	sp, sp, #0x30
  406818:	stp	x29, x30, [sp, #32]
  40681c:	add	x29, sp, #0x20
  406820:	adrp	x3, 40a000 <_fini+0x894>
  406824:	add	x3, x3, #0xbfe
  406828:	adrp	x4, 40a000 <_fini+0x894>
  40682c:	add	x4, x4, #0xc1
  406830:	stur	x0, [x29, #-8]
  406834:	str	x1, [sp, #16]
  406838:	str	x2, [sp, #8]
  40683c:	ldur	x0, [x29, #-8]
  406840:	ldr	x1, [sp, #16]
  406844:	ldr	x2, [sp, #8]
  406848:	bl	406d84 <write_timeout>
  40684c:	ldp	x29, x30, [sp, #32]
  406850:	add	sp, sp, #0x30
  406854:	ret

0000000000406858 <write_options>:
  406858:	sub	sp, sp, #0x40
  40685c:	stp	x29, x30, [sp, #48]
  406860:	add	x29, sp, #0x30
  406864:	mov	x8, xzr
  406868:	adrp	x9, 409000 <relabel_extra+0xfc>
  40686c:	add	x9, x9, #0x790
  406870:	add	x9, x9, #0x3
  406874:	stur	x0, [x29, #-16]
  406878:	str	x1, [sp, #24]
  40687c:	str	x8, [sp, #16]
  406880:	ldr	x0, [sp, #24]
  406884:	str	x9, [sp]
  406888:	bl	404fac <isempty>
  40688c:	tbnz	w0, #0, 406894 <write_options+0x3c>
  406890:	b	4068a4 <write_options+0x4c>
  406894:	stur	wzr, [x29, #-4]
  406898:	mov	w8, #0x1                   	// #1
  40689c:	str	w8, [sp, #12]
  4068a0:	b	406928 <write_options+0xd0>
  4068a4:	ldr	x0, [sp, #24]
  4068a8:	adrp	x1, 40a000 <_fini+0x894>
  4068ac:	add	x1, x1, #0x10e
  4068b0:	bl	402368 <strcmp@plt>
  4068b4:	cbnz	w0, 4068c8 <write_options+0x70>
  4068b8:	stur	wzr, [x29, #-4]
  4068bc:	mov	w8, #0x1                   	// #1
  4068c0:	str	w8, [sp, #12]
  4068c4:	b	406928 <write_options+0xd0>
  4068c8:	ldr	x0, [sp, #24]
  4068cc:	bl	40673c <specifier_escape>
  4068d0:	str	x0, [sp, #16]
  4068d4:	ldr	x8, [sp, #16]
  4068d8:	cbnz	x8, 406908 <write_options+0xb0>
  4068dc:	mov	w8, wzr
  4068e0:	mov	w0, w8
  4068e4:	ldr	x1, [sp]
  4068e8:	mov	w2, #0x48                  	// #72
  4068ec:	adrp	x3, 40a000 <_fini+0x894>
  4068f0:	add	x3, x3, #0x117
  4068f4:	bl	402388 <log_oom_internal@plt>
  4068f8:	stur	w0, [x29, #-4]
  4068fc:	mov	w8, #0x1                   	// #1
  406900:	str	w8, [sp, #12]
  406904:	b	406928 <write_options+0xd0>
  406908:	ldur	x0, [x29, #-16]
  40690c:	ldr	x2, [sp, #16]
  406910:	adrp	x1, 40a000 <_fini+0x894>
  406914:	add	x1, x1, #0x125
  406918:	bl	4024d8 <fprintf@plt>
  40691c:	mov	w8, #0x1                   	// #1
  406920:	stur	w8, [x29, #-4]
  406924:	str	w8, [sp, #12]
  406928:	add	x0, sp, #0x10
  40692c:	bl	40306c <freep>
  406930:	ldur	w0, [x29, #-4]
  406934:	ldp	x29, x30, [sp, #48]
  406938:	add	sp, sp, #0x40
  40693c:	ret

0000000000406940 <write_idle_timeout>:
  406940:	sub	sp, sp, #0x30
  406944:	stp	x29, x30, [sp, #32]
  406948:	add	x29, sp, #0x20
  40694c:	adrp	x3, 40a000 <_fini+0x894>
  406950:	add	x3, x3, #0xc17
  406954:	adrp	x4, 40a000 <_fini+0x894>
  406958:	add	x4, x4, #0x131
  40695c:	stur	x0, [x29, #-8]
  406960:	str	x1, [sp, #16]
  406964:	str	x2, [sp, #8]
  406968:	ldur	x0, [x29, #-8]
  40696c:	ldr	x1, [sp, #16]
  406970:	ldr	x2, [sp, #8]
  406974:	bl	406d84 <write_timeout>
  406978:	ldp	x29, x30, [sp, #32]
  40697c:	add	sp, sp, #0x30
  406980:	ret

0000000000406984 <write_dependency>:
  406984:	sub	sp, sp, #0xb0
  406988:	stp	x29, x30, [sp, #160]
  40698c:	add	x29, sp, #0xa0
  406990:	mov	x8, xzr
  406994:	adrp	x9, 409000 <relabel_extra+0xfc>
  406998:	add	x9, x9, #0x790
  40699c:	add	x9, x9, #0x3
  4069a0:	adrp	x10, 409000 <relabel_extra+0xfc>
  4069a4:	add	x10, x10, #0xf83
  4069a8:	stur	x0, [x29, #-16]
  4069ac:	stur	x1, [x29, #-24]
  4069b0:	stur	x2, [x29, #-32]
  4069b4:	stur	x3, [x29, #-40]
  4069b8:	stur	x8, [x29, #-48]
  4069bc:	stur	x8, [x29, #-56]
  4069c0:	stur	x8, [x29, #-64]
  4069c4:	str	x9, [sp, #32]
  4069c8:	str	x10, [sp, #24]
  4069cc:	ldur	x8, [x29, #-16]
  4069d0:	cmp	x8, #0x0
  4069d4:	cset	w9, ne  // ne = any
  4069d8:	mov	w10, #0x1                   	// #1
  4069dc:	eor	w9, w9, #0x1
  4069e0:	eor	w9, w9, w10
  4069e4:	eor	w9, w9, w10
  4069e8:	and	w9, w9, #0x1
  4069ec:	mov	w0, w9
  4069f0:	sxtw	x8, w0
  4069f4:	cbz	x8, 406a1c <write_dependency+0x98>
  4069f8:	mov	w8, wzr
  4069fc:	mov	w0, w8
  406a00:	adrp	x1, 409000 <relabel_extra+0xfc>
  406a04:	add	x1, x1, #0xf3a
  406a08:	ldr	x2, [sp, #32]
  406a0c:	mov	w3, #0xda                  	// #218
  406a10:	adrp	x4, 409000 <relabel_extra+0xfc>
  406a14:	add	x4, x4, #0xf3c
  406a18:	bl	4022f8 <log_assert_failed_realm@plt>
  406a1c:	ldur	x8, [x29, #-24]
  406a20:	cmp	x8, #0x0
  406a24:	cset	w9, ne  // ne = any
  406a28:	mov	w10, #0x1                   	// #1
  406a2c:	eor	w9, w9, #0x1
  406a30:	eor	w9, w9, w10
  406a34:	eor	w9, w9, w10
  406a38:	and	w9, w9, #0x1
  406a3c:	mov	w0, w9
  406a40:	sxtw	x8, w0
  406a44:	cbz	x8, 406a6c <write_dependency+0xe8>
  406a48:	mov	w8, wzr
  406a4c:	mov	w0, w8
  406a50:	adrp	x1, 409000 <relabel_extra+0xfc>
  406a54:	add	x1, x1, #0xc52
  406a58:	ldr	x2, [sp, #32]
  406a5c:	mov	w3, #0xdb                  	// #219
  406a60:	adrp	x4, 409000 <relabel_extra+0xfc>
  406a64:	add	x4, x4, #0xf3c
  406a68:	bl	4022f8 <log_assert_failed_realm@plt>
  406a6c:	ldur	x0, [x29, #-24]
  406a70:	ldur	x1, [x29, #-32]
  406a74:	sub	x2, x29, #0x30
  406a78:	bl	402588 <fstab_extract_values@plt>
  406a7c:	stur	w0, [x29, #-76]
  406a80:	ldur	w8, [x29, #-76]
  406a84:	cmp	w8, #0x0
  406a88:	cset	w8, ge  // ge = tcont
  406a8c:	tbnz	w8, #0, 406b1c <write_dependency+0x198>
  406a90:	mov	w8, #0x4                   	// #4
  406a94:	str	w8, [sp, #80]
  406a98:	ldur	w8, [x29, #-76]
  406a9c:	str	w8, [sp, #76]
  406aa0:	str	wzr, [sp, #72]
  406aa4:	ldr	w0, [sp, #72]
  406aa8:	bl	402288 <log_get_max_level_realm@plt>
  406aac:	ldr	w8, [sp, #80]
  406ab0:	and	w8, w8, #0x7
  406ab4:	cmp	w0, w8
  406ab8:	b.lt	406aec <write_dependency+0x168>  // b.tstop
  406abc:	ldr	w8, [sp, #72]
  406ac0:	ldr	w9, [sp, #80]
  406ac4:	orr	w0, w9, w8, lsl #10
  406ac8:	ldr	w1, [sp, #76]
  406acc:	ldr	x2, [sp, #32]
  406ad0:	mov	w3, #0xdf                  	// #223
  406ad4:	ldr	x4, [sp, #24]
  406ad8:	adrp	x5, 409000 <relabel_extra+0xfc>
  406adc:	add	x5, x5, #0xf94
  406ae0:	bl	402298 <log_internal_realm@plt>
  406ae4:	str	w0, [sp, #20]
  406ae8:	b	406b00 <write_dependency+0x17c>
  406aec:	ldr	w0, [sp, #76]
  406af0:	bl	4022a8 <abs@plt>
  406af4:	mov	w8, wzr
  406af8:	subs	w8, w8, w0, uxtb
  406afc:	str	w8, [sp, #20]
  406b00:	ldr	w8, [sp, #20]
  406b04:	str	w8, [sp, #68]
  406b08:	ldr	w8, [sp, #68]
  406b0c:	stur	w8, [x29, #-4]
  406b10:	mov	w8, #0x1                   	// #1
  406b14:	str	w8, [sp, #64]
  406b18:	b	406cf4 <write_dependency+0x370>
  406b1c:	ldur	w8, [x29, #-76]
  406b20:	cbnz	w8, 406b34 <write_dependency+0x1b0>
  406b24:	stur	wzr, [x29, #-4]
  406b28:	mov	w8, #0x1                   	// #1
  406b2c:	str	w8, [sp, #64]
  406b30:	b	406cf4 <write_dependency+0x370>
  406b34:	ldur	x8, [x29, #-48]
  406b38:	stur	x8, [x29, #-72]
  406b3c:	ldur	x8, [x29, #-72]
  406b40:	mov	w9, #0x0                   	// #0
  406b44:	str	w9, [sp, #16]
  406b48:	cbz	x8, 406b60 <write_dependency+0x1dc>
  406b4c:	ldur	x8, [x29, #-72]
  406b50:	ldr	x8, [x8]
  406b54:	cmp	x8, #0x0
  406b58:	cset	w9, ne  // ne = any
  406b5c:	str	w9, [sp, #16]
  406b60:	ldr	w8, [sp, #16]
  406b64:	tbnz	w8, #0, 406b6c <write_dependency+0x1e8>
  406b68:	b	406c8c <write_dependency+0x308>
  406b6c:	ldur	x8, [x29, #-72]
  406b70:	ldr	x0, [x8]
  406b74:	adrp	x1, 409000 <relabel_extra+0xfc>
  406b78:	add	x1, x1, #0xfb0
  406b7c:	mov	w9, wzr
  406b80:	mov	w2, w9
  406b84:	adrp	x3, 409000 <relabel_extra+0xfc>
  406b88:	add	x3, x3, #0xd12
  406b8c:	add	x4, sp, #0x38
  406b90:	bl	4025b8 <unit_name_mangle_with_suffix@plt>
  406b94:	stur	w0, [x29, #-76]
  406b98:	ldur	w9, [x29, #-76]
  406b9c:	cmp	w9, #0x0
  406ba0:	cset	w9, ge  // ge = tcont
  406ba4:	tbnz	w9, #0, 406c34 <write_dependency+0x2b0>
  406ba8:	mov	w8, #0x3                   	// #3
  406bac:	str	w8, [sp, #52]
  406bb0:	ldur	w8, [x29, #-76]
  406bb4:	str	w8, [sp, #48]
  406bb8:	str	wzr, [sp, #44]
  406bbc:	ldr	w0, [sp, #44]
  406bc0:	bl	402288 <log_get_max_level_realm@plt>
  406bc4:	ldr	w8, [sp, #52]
  406bc8:	and	w8, w8, #0x7
  406bcc:	cmp	w0, w8
  406bd0:	b.lt	406c04 <write_dependency+0x280>  // b.tstop
  406bd4:	ldr	w8, [sp, #44]
  406bd8:	ldr	w9, [sp, #52]
  406bdc:	orr	w0, w9, w8, lsl #10
  406be0:	ldr	w1, [sp, #48]
  406be4:	ldr	x2, [sp, #32]
  406be8:	mov	w3, #0xe8                  	// #232
  406bec:	ldr	x4, [sp, #24]
  406bf0:	adrp	x5, 409000 <relabel_extra+0xfc>
  406bf4:	add	x5, x5, #0xd19
  406bf8:	bl	402298 <log_internal_realm@plt>
  406bfc:	str	w0, [sp, #12]
  406c00:	b	406c18 <write_dependency+0x294>
  406c04:	ldr	w0, [sp, #48]
  406c08:	bl	4022a8 <abs@plt>
  406c0c:	mov	w8, wzr
  406c10:	subs	w8, w8, w0, uxtb
  406c14:	str	w8, [sp, #12]
  406c18:	ldr	w8, [sp, #12]
  406c1c:	str	w8, [sp, #40]
  406c20:	ldr	w8, [sp, #40]
  406c24:	stur	w8, [x29, #-4]
  406c28:	mov	w8, #0x1                   	// #1
  406c2c:	str	w8, [sp, #64]
  406c30:	b	406cf4 <write_dependency+0x370>
  406c34:	ldr	x1, [sp, #56]
  406c38:	sub	x0, x29, #0x38
  406c3c:	bl	4025c8 <strv_consume@plt>
  406c40:	stur	w0, [x29, #-76]
  406c44:	ldur	w8, [x29, #-76]
  406c48:	cmp	w8, #0x0
  406c4c:	cset	w8, ge  // ge = tcont
  406c50:	tbnz	w8, #0, 406c7c <write_dependency+0x2f8>
  406c54:	mov	w8, wzr
  406c58:	mov	w0, w8
  406c5c:	ldr	x1, [sp, #32]
  406c60:	mov	w2, #0xeb                  	// #235
  406c64:	ldr	x3, [sp, #24]
  406c68:	bl	402388 <log_oom_internal@plt>
  406c6c:	stur	w0, [x29, #-4]
  406c70:	mov	w8, #0x1                   	// #1
  406c74:	str	w8, [sp, #64]
  406c78:	b	406cf4 <write_dependency+0x370>
  406c7c:	ldur	x8, [x29, #-72]
  406c80:	add	x8, x8, #0x8
  406c84:	stur	x8, [x29, #-72]
  406c88:	b	406b3c <write_dependency+0x1b8>
  406c8c:	ldur	x8, [x29, #-56]
  406c90:	cbz	x8, 406ce8 <write_dependency+0x364>
  406c94:	ldur	x0, [x29, #-56]
  406c98:	adrp	x1, 409000 <relabel_extra+0xfc>
  406c9c:	add	x1, x1, #0xfbe
  406ca0:	bl	406d50 <strv_join>
  406ca4:	stur	x0, [x29, #-64]
  406ca8:	ldur	x8, [x29, #-64]
  406cac:	cbnz	x8, 406cd8 <write_dependency+0x354>
  406cb0:	mov	w8, wzr
  406cb4:	mov	w0, w8
  406cb8:	ldr	x1, [sp, #32]
  406cbc:	mov	w2, #0xf1                  	// #241
  406cc0:	ldr	x3, [sp, #24]
  406cc4:	bl	402388 <log_oom_internal@plt>
  406cc8:	stur	w0, [x29, #-4]
  406ccc:	mov	w8, #0x1                   	// #1
  406cd0:	str	w8, [sp, #64]
  406cd4:	b	406cf4 <write_dependency+0x370>
  406cd8:	ldur	x0, [x29, #-16]
  406cdc:	ldur	x1, [x29, #-40]
  406ce0:	ldur	x2, [x29, #-64]
  406ce4:	bl	4024d8 <fprintf@plt>
  406ce8:	stur	wzr, [x29, #-4]
  406cec:	mov	w8, #0x1                   	// #1
  406cf0:	str	w8, [sp, #64]
  406cf4:	sub	x0, x29, #0x40
  406cf8:	bl	40306c <freep>
  406cfc:	sub	x0, x29, #0x38
  406d00:	bl	406d1c <strv_freep>
  406d04:	sub	x0, x29, #0x30
  406d08:	bl	406d1c <strv_freep>
  406d0c:	ldur	w0, [x29, #-4]
  406d10:	ldp	x29, x30, [sp, #160]
  406d14:	add	sp, sp, #0xb0
  406d18:	ret

0000000000406d1c <strv_freep>:
  406d1c:	sub	sp, sp, #0x20
  406d20:	stp	x29, x30, [sp, #16]
  406d24:	add	x29, sp, #0x10
  406d28:	str	x0, [sp, #8]
  406d2c:	ldr	x8, [sp, #8]
  406d30:	ldr	x8, [x8]
  406d34:	cbz	x8, 406d44 <strv_freep+0x28>
  406d38:	ldr	x8, [sp, #8]
  406d3c:	ldr	x0, [x8]
  406d40:	bl	4025d8 <strv_free@plt>
  406d44:	ldp	x29, x30, [sp, #16]
  406d48:	add	sp, sp, #0x20
  406d4c:	ret

0000000000406d50 <strv_join>:
  406d50:	sub	sp, sp, #0x20
  406d54:	stp	x29, x30, [sp, #16]
  406d58:	add	x29, sp, #0x10
  406d5c:	mov	x8, xzr
  406d60:	str	x0, [sp, #8]
  406d64:	str	x1, [sp]
  406d68:	ldr	x0, [sp, #8]
  406d6c:	ldr	x1, [sp]
  406d70:	mov	x2, x8
  406d74:	bl	4025e8 <strv_join_prefix@plt>
  406d78:	ldp	x29, x30, [sp, #16]
  406d7c:	add	sp, sp, #0x20
  406d80:	ret

0000000000406d84 <write_timeout>:
  406d84:	sub	sp, sp, #0xe0
  406d88:	stp	x29, x30, [sp, #208]
  406d8c:	add	x29, sp, #0xd0
  406d90:	mov	x8, xzr
  406d94:	mov	x5, x8
  406d98:	adrp	x9, 409000 <relabel_extra+0xfc>
  406d9c:	add	x9, x9, #0x790
  406da0:	add	x9, x9, #0x3
  406da4:	sub	x10, x29, #0x38
  406da8:	stur	x0, [x29, #-16]
  406dac:	stur	x1, [x29, #-24]
  406db0:	stur	x2, [x29, #-32]
  406db4:	stur	x3, [x29, #-40]
  406db8:	stur	x4, [x29, #-48]
  406dbc:	stur	x8, [x29, #-56]
  406dc0:	ldur	x0, [x29, #-32]
  406dc4:	ldur	x1, [x29, #-40]
  406dc8:	mov	x2, x5
  406dcc:	mov	x3, x10
  406dd0:	mov	x4, x5
  406dd4:	str	x9, [sp, #32]
  406dd8:	bl	4024a8 <fstab_filter_options@plt>
  406ddc:	str	w0, [sp, #76]
  406de0:	ldr	w11, [sp, #76]
  406de4:	cmp	w11, #0x0
  406de8:	cset	w11, ge  // ge = tcont
  406dec:	tbnz	w11, #0, 406e80 <write_timeout+0xfc>
  406df0:	mov	w8, #0x4                   	// #4
  406df4:	str	w8, [sp, #72]
  406df8:	ldr	w8, [sp, #76]
  406dfc:	str	w8, [sp, #68]
  406e00:	str	wzr, [sp, #64]
  406e04:	ldr	w0, [sp, #64]
  406e08:	bl	402288 <log_get_max_level_realm@plt>
  406e0c:	ldr	w8, [sp, #72]
  406e10:	and	w8, w8, #0x7
  406e14:	cmp	w0, w8
  406e18:	b.lt	406e50 <write_timeout+0xcc>  // b.tstop
  406e1c:	ldr	w8, [sp, #64]
  406e20:	ldr	w9, [sp, #72]
  406e24:	orr	w0, w9, w8, lsl #10
  406e28:	ldr	w1, [sp, #68]
  406e2c:	ldr	x2, [sp, #32]
  406e30:	mov	w3, #0xba                  	// #186
  406e34:	adrp	x4, 40a000 <_fini+0x894>
  406e38:	add	x4, x4, #0xcc
  406e3c:	adrp	x5, 409000 <relabel_extra+0xfc>
  406e40:	add	x5, x5, #0xf94
  406e44:	bl	402298 <log_internal_realm@plt>
  406e48:	str	w0, [sp, #28]
  406e4c:	b	406e64 <write_timeout+0xe0>
  406e50:	ldr	w0, [sp, #68]
  406e54:	bl	4022a8 <abs@plt>
  406e58:	mov	w8, wzr
  406e5c:	subs	w8, w8, w0, uxtb
  406e60:	str	w8, [sp, #28]
  406e64:	ldr	w8, [sp, #28]
  406e68:	str	w8, [sp, #60]
  406e6c:	ldr	w8, [sp, #60]
  406e70:	stur	w8, [x29, #-4]
  406e74:	mov	w8, #0x1                   	// #1
  406e78:	str	w8, [sp, #56]
  406e7c:	b	406fa4 <write_timeout+0x220>
  406e80:	ldr	w8, [sp, #76]
  406e84:	cbnz	w8, 406e98 <write_timeout+0x114>
  406e88:	stur	wzr, [x29, #-4]
  406e8c:	mov	w8, #0x1                   	// #1
  406e90:	str	w8, [sp, #56]
  406e94:	b	406fa4 <write_timeout+0x220>
  406e98:	ldur	x0, [x29, #-56]
  406e9c:	add	x1, sp, #0x50
  406ea0:	bl	4025f8 <parse_sec_fix_0@plt>
  406ea4:	str	w0, [sp, #76]
  406ea8:	ldr	w8, [sp, #76]
  406eac:	cmp	w8, #0x0
  406eb0:	cset	w8, ge  // ge = tcont
  406eb4:	tbnz	w8, #0, 406f48 <write_timeout+0x1c4>
  406eb8:	mov	w8, #0x4                   	// #4
  406ebc:	str	w8, [sp, #52]
  406ec0:	str	wzr, [sp, #48]
  406ec4:	str	wzr, [sp, #44]
  406ec8:	ldr	w0, [sp, #44]
  406ecc:	bl	402288 <log_get_max_level_realm@plt>
  406ed0:	ldr	w8, [sp, #52]
  406ed4:	and	w8, w8, #0x7
  406ed8:	cmp	w0, w8
  406edc:	b.lt	406f1c <write_timeout+0x198>  // b.tstop
  406ee0:	ldr	w8, [sp, #44]
  406ee4:	ldr	w9, [sp, #52]
  406ee8:	orr	w0, w9, w8, lsl #10
  406eec:	ldr	w1, [sp, #48]
  406ef0:	ldur	x6, [x29, #-24]
  406ef4:	ldur	x7, [x29, #-56]
  406ef8:	ldr	x2, [sp, #32]
  406efc:	mov	w3, #0xc0                  	// #192
  406f00:	adrp	x4, 40a000 <_fini+0x894>
  406f04:	add	x4, x4, #0xcc
  406f08:	adrp	x5, 40a000 <_fini+0x894>
  406f0c:	add	x5, x5, #0xda
  406f10:	bl	402298 <log_internal_realm@plt>
  406f14:	str	w0, [sp, #24]
  406f18:	b	406f30 <write_timeout+0x1ac>
  406f1c:	ldr	w0, [sp, #48]
  406f20:	bl	4022a8 <abs@plt>
  406f24:	mov	w8, wzr
  406f28:	subs	w8, w8, w0, uxtb
  406f2c:	str	w8, [sp, #24]
  406f30:	ldr	w8, [sp, #24]
  406f34:	str	w8, [sp, #40]
  406f38:	stur	wzr, [x29, #-4]
  406f3c:	mov	w8, #0x1                   	// #1
  406f40:	str	w8, [sp, #56]
  406f44:	b	406fa4 <write_timeout+0x220>
  406f48:	ldur	x0, [x29, #-16]
  406f4c:	ldur	x2, [x29, #-48]
  406f50:	ldr	x8, [sp, #80]
  406f54:	add	x9, sp, #0x58
  406f58:	str	x0, [sp, #16]
  406f5c:	mov	x0, x9
  406f60:	mov	x1, #0x40                  	// #64
  406f64:	str	x2, [sp, #8]
  406f68:	mov	x2, x8
  406f6c:	mov	x8, xzr
  406f70:	mov	x3, x8
  406f74:	bl	402608 <format_timespan@plt>
  406f78:	ldr	x8, [sp, #16]
  406f7c:	str	x0, [sp]
  406f80:	mov	x0, x8
  406f84:	adrp	x1, 40a000 <_fini+0x894>
  406f88:	add	x1, x1, #0x107
  406f8c:	ldr	x2, [sp, #8]
  406f90:	ldr	x3, [sp]
  406f94:	bl	4024d8 <fprintf@plt>
  406f98:	stur	wzr, [x29, #-4]
  406f9c:	mov	w10, #0x1                   	// #1
  406fa0:	str	w10, [sp, #56]
  406fa4:	sub	x0, x29, #0x38
  406fa8:	bl	40306c <freep>
  406fac:	ldur	w0, [x29, #-4]
  406fb0:	ldp	x29, x30, [sp, #208]
  406fb4:	add	sp, sp, #0xe0
  406fb8:	ret

0000000000406fbc <endmntentp>:
  406fbc:	sub	sp, sp, #0x20
  406fc0:	stp	x29, x30, [sp, #16]
  406fc4:	add	x29, sp, #0x10
  406fc8:	str	x0, [sp, #8]
  406fcc:	ldr	x8, [sp, #8]
  406fd0:	ldr	x8, [x8]
  406fd4:	cbz	x8, 406fe4 <endmntentp+0x28>
  406fd8:	ldr	x8, [sp, #8]
  406fdc:	ldr	x0, [x8]
  406fe0:	bl	402618 <endmntent@plt>
  406fe4:	ldp	x29, x30, [sp, #16]
  406fe8:	add	sp, sp, #0x20
  406fec:	ret

0000000000406ff0 <mount_in_initrd>:
  406ff0:	sub	sp, sp, #0x30
  406ff4:	stp	x29, x30, [sp, #32]
  406ff8:	add	x29, sp, #0x20
  406ffc:	adrp	x8, 409000 <relabel_extra+0xfc>
  407000:	add	x8, x8, #0x790
  407004:	add	x2, x8, #0x3
  407008:	stur	x0, [x29, #-8]
  40700c:	str	x2, [sp, #16]
  407010:	ldur	x8, [x29, #-8]
  407014:	cmp	x8, #0x0
  407018:	cset	w9, ne  // ne = any
  40701c:	mov	w10, #0x1                   	// #1
  407020:	eor	w9, w9, #0x1
  407024:	eor	w9, w9, w10
  407028:	eor	w9, w9, w10
  40702c:	and	w9, w9, #0x1
  407030:	mov	w0, w9
  407034:	sxtw	x8, w0
  407038:	cbz	x8, 407060 <mount_in_initrd+0x70>
  40703c:	mov	w8, wzr
  407040:	mov	w0, w8
  407044:	adrp	x1, 40a000 <_fini+0x894>
  407048:	add	x1, x1, #0x35c
  40704c:	ldr	x2, [sp, #16]
  407050:	mov	w3, #0xab                  	// #171
  407054:	adrp	x4, 40a000 <_fini+0x894>
  407058:	add	x4, x4, #0x35f
  40705c:	bl	4022f8 <log_assert_failed_realm@plt>
  407060:	ldur	x8, [x29, #-8]
  407064:	ldr	x0, [x8, #24]
  407068:	adrp	x1, 40a000 <_fini+0x894>
  40706c:	add	x1, x1, #0xcc6
  407070:	bl	404fec <fstab_test_option>
  407074:	mov	w9, #0x1                   	// #1
  407078:	str	w9, [sp, #12]
  40707c:	tbnz	w0, #0, 4070a0 <mount_in_initrd+0xb0>
  407080:	ldur	x8, [x29, #-8]
  407084:	ldr	x0, [x8, #8]
  407088:	adrp	x1, 40a000 <_fini+0x894>
  40708c:	add	x1, x1, #0x386
  407090:	bl	402368 <strcmp@plt>
  407094:	cmp	w0, #0x0
  407098:	cset	w9, eq  // eq = none
  40709c:	str	w9, [sp, #12]
  4070a0:	ldr	w8, [sp, #12]
  4070a4:	and	w0, w8, #0x1
  4070a8:	ldp	x29, x30, [sp, #32]
  4070ac:	add	sp, sp, #0x30
  4070b0:	ret

00000000004070b4 <mfree>:
  4070b4:	sub	sp, sp, #0x20
  4070b8:	stp	x29, x30, [sp, #16]
  4070bc:	add	x29, sp, #0x10
  4070c0:	mov	x8, xzr
  4070c4:	str	x0, [sp, #8]
  4070c8:	ldr	x0, [sp, #8]
  4070cc:	str	x8, [sp]
  4070d0:	bl	402338 <free@plt>
  4070d4:	ldr	x0, [sp]
  4070d8:	ldp	x29, x30, [sp, #16]
  4070dc:	add	sp, sp, #0x20
  4070e0:	ret

00000000004070e4 <yes_no>:
  4070e4:	sub	sp, sp, #0x10
  4070e8:	adrp	x8, 40a000 <_fini+0x894>
  4070ec:	add	x8, x8, #0x38b
  4070f0:	adrp	x9, 40a000 <_fini+0x894>
  4070f4:	add	x9, x9, #0x38f
  4070f8:	and	w10, w0, #0x1
  4070fc:	strb	w10, [sp, #15]
  407100:	ldrb	w10, [sp, #15]
  407104:	tst	w10, #0x1
  407108:	csel	x0, x8, x9, ne  // ne = any
  40710c:	add	sp, sp, #0x10
  407110:	ret

0000000000407114 <add_swap>:
  407114:	sub	sp, sp, #0xf0
  407118:	stp	x29, x30, [sp, #224]
  40711c:	add	x29, sp, #0xe0
  407120:	mov	x8, xzr
  407124:	adrp	x9, 420000 <arg_fstab_enabled>
  407128:	add	x9, x9, #0x80
  40712c:	adrp	x10, 409000 <relabel_extra+0xfc>
  407130:	add	x10, x10, #0x790
  407134:	add	x10, x10, #0x3
  407138:	adrp	x11, 40a000 <_fini+0x894>
  40713c:	add	x11, x11, #0x3db
  407140:	stur	x0, [x29, #-16]
  407144:	stur	x1, [x29, #-24]
  407148:	stur	w2, [x29, #-28]
  40714c:	stur	x8, [x29, #-40]
  407150:	stur	x8, [x29, #-48]
  407154:	str	x9, [sp, #80]
  407158:	str	x10, [sp, #72]
  40715c:	str	x11, [sp, #64]
  407160:	ldur	x8, [x29, #-16]
  407164:	cmp	x8, #0x0
  407168:	cset	w9, ne  // ne = any
  40716c:	mov	w10, #0x1                   	// #1
  407170:	eor	w9, w9, #0x1
  407174:	eor	w9, w9, w10
  407178:	eor	w9, w9, w10
  40717c:	and	w9, w9, #0x1
  407180:	mov	w0, w9
  407184:	sxtw	x8, w0
  407188:	cbz	x8, 4071b0 <add_swap+0x9c>
  40718c:	mov	w8, wzr
  407190:	mov	w0, w8
  407194:	adrp	x1, 409000 <relabel_extra+0xfc>
  407198:	add	x1, x1, #0xbb3
  40719c:	ldr	x2, [sp, #72]
  4071a0:	mov	w3, #0x62                  	// #98
  4071a4:	adrp	x4, 40a000 <_fini+0x894>
  4071a8:	add	x4, x4, #0x392
  4071ac:	bl	4022f8 <log_assert_failed_realm@plt>
  4071b0:	ldur	x8, [x29, #-24]
  4071b4:	cmp	x8, #0x0
  4071b8:	cset	w9, ne  // ne = any
  4071bc:	mov	w10, #0x1                   	// #1
  4071c0:	eor	w9, w9, #0x1
  4071c4:	eor	w9, w9, w10
  4071c8:	eor	w9, w9, w10
  4071cc:	and	w9, w9, #0x1
  4071d0:	mov	w0, w9
  4071d4:	sxtw	x8, w0
  4071d8:	cbz	x8, 407200 <add_swap+0xec>
  4071dc:	mov	w8, wzr
  4071e0:	mov	w0, w8
  4071e4:	adrp	x1, 40a000 <_fini+0x894>
  4071e8:	add	x1, x1, #0x35c
  4071ec:	ldr	x2, [sp, #72]
  4071f0:	mov	w3, #0x63                  	// #99
  4071f4:	adrp	x4, 40a000 <_fini+0x894>
  4071f8:	add	x4, x4, #0x392
  4071fc:	bl	4022f8 <log_assert_failed_realm@plt>
  407200:	adrp	x0, 40a000 <_fini+0x894>
  407204:	add	x0, x0, #0x3cf
  407208:	mov	w8, wzr
  40720c:	mov	w1, w8
  407210:	bl	402628 <access@plt>
  407214:	cmp	w0, #0x0
  407218:	cset	w8, ge  // ge = tcont
  40721c:	tbnz	w8, #0, 4072a8 <add_swap+0x194>
  407220:	mov	w8, #0x6                   	// #6
  407224:	stur	w8, [x29, #-56]
  407228:	stur	wzr, [x29, #-60]
  40722c:	stur	wzr, [x29, #-64]
  407230:	ldur	w0, [x29, #-64]
  407234:	bl	402288 <log_get_max_level_realm@plt>
  407238:	ldur	w8, [x29, #-56]
  40723c:	and	w8, w8, #0x7
  407240:	cmp	w0, w8
  407244:	b.lt	40727c <add_swap+0x168>  // b.tstop
  407248:	ldur	w8, [x29, #-64]
  40724c:	ldur	w9, [x29, #-56]
  407250:	orr	w0, w9, w8, lsl #10
  407254:	ldur	w1, [x29, #-60]
  407258:	ldur	x6, [x29, #-16]
  40725c:	ldr	x2, [sp, #72]
  407260:	mov	w3, #0x66                  	// #102
  407264:	ldr	x4, [sp, #64]
  407268:	adrp	x5, 40a000 <_fini+0x894>
  40726c:	add	x5, x5, #0x3e4
  407270:	bl	402298 <log_internal_realm@plt>
  407274:	str	w0, [sp, #60]
  407278:	b	407290 <add_swap+0x17c>
  40727c:	ldur	w0, [x29, #-60]
  407280:	bl	4022a8 <abs@plt>
  407284:	mov	w8, wzr
  407288:	subs	w8, w8, w0, uxtb
  40728c:	str	w8, [sp, #60]
  407290:	ldr	w8, [sp, #60]
  407294:	stur	w8, [x29, #-68]
  407298:	stur	wzr, [x29, #-4]
  40729c:	mov	w8, #0x1                   	// #1
  4072a0:	stur	w8, [x29, #-72]
  4072a4:	b	407714 <add_swap+0x600>
  4072a8:	bl	402638 <detect_container@plt>
  4072ac:	cmp	w0, #0x0
  4072b0:	cset	w8, le
  4072b4:	tbnz	w8, #0, 407340 <add_swap+0x22c>
  4072b8:	mov	w8, #0x6                   	// #6
  4072bc:	stur	w8, [x29, #-76]
  4072c0:	stur	wzr, [x29, #-80]
  4072c4:	stur	wzr, [x29, #-84]
  4072c8:	ldur	w0, [x29, #-84]
  4072cc:	bl	402288 <log_get_max_level_realm@plt>
  4072d0:	ldur	w8, [x29, #-76]
  4072d4:	and	w8, w8, #0x7
  4072d8:	cmp	w0, w8
  4072dc:	b.lt	407314 <add_swap+0x200>  // b.tstop
  4072e0:	ldur	w8, [x29, #-84]
  4072e4:	ldur	w9, [x29, #-76]
  4072e8:	orr	w0, w9, w8, lsl #10
  4072ec:	ldur	w1, [x29, #-80]
  4072f0:	ldur	x6, [x29, #-16]
  4072f4:	ldr	x2, [sp, #72]
  4072f8:	mov	w3, #0x6b                  	// #107
  4072fc:	ldr	x4, [sp, #64]
  407300:	adrp	x5, 40a000 <_fini+0x894>
  407304:	add	x5, x5, #0x41a
  407308:	bl	402298 <log_internal_realm@plt>
  40730c:	str	w0, [sp, #56]
  407310:	b	407328 <add_swap+0x214>
  407314:	ldur	w0, [x29, #-80]
  407318:	bl	4022a8 <abs@plt>
  40731c:	mov	w8, wzr
  407320:	subs	w8, w8, w0, uxtb
  407324:	str	w8, [sp, #56]
  407328:	ldr	w8, [sp, #56]
  40732c:	stur	w8, [x29, #-88]
  407330:	stur	wzr, [x29, #-4]
  407334:	mov	w8, #0x1                   	// #1
  407338:	stur	w8, [x29, #-72]
  40733c:	b	407714 <add_swap+0x600>
  407340:	ldur	x0, [x29, #-16]
  407344:	adrp	x1, 40a000 <_fini+0x894>
  407348:	add	x1, x1, #0x454
  40734c:	sub	x2, x29, #0x28
  407350:	bl	4024b8 <unit_name_from_path@plt>
  407354:	stur	w0, [x29, #-52]
  407358:	ldur	w8, [x29, #-52]
  40735c:	cmp	w8, #0x0
  407360:	cset	w8, ge  // ge = tcont
  407364:	tbnz	w8, #0, 4073f4 <add_swap+0x2e0>
  407368:	mov	w8, #0x3                   	// #3
  40736c:	stur	w8, [x29, #-92]
  407370:	ldur	w8, [x29, #-52]
  407374:	stur	w8, [x29, #-96]
  407378:	stur	wzr, [x29, #-100]
  40737c:	ldur	w0, [x29, #-100]
  407380:	bl	402288 <log_get_max_level_realm@plt>
  407384:	ldur	w8, [x29, #-92]
  407388:	and	w8, w8, #0x7
  40738c:	cmp	w0, w8
  407390:	b.lt	4073c4 <add_swap+0x2b0>  // b.tstop
  407394:	ldur	w8, [x29, #-100]
  407398:	ldur	w9, [x29, #-92]
  40739c:	orr	w0, w9, w8, lsl #10
  4073a0:	ldur	w1, [x29, #-96]
  4073a4:	ldr	x2, [sp, #72]
  4073a8:	mov	w3, #0x71                  	// #113
  4073ac:	ldr	x4, [sp, #64]
  4073b0:	adrp	x5, 409000 <relabel_extra+0xfc>
  4073b4:	add	x5, x5, #0xd19
  4073b8:	bl	402298 <log_internal_realm@plt>
  4073bc:	str	w0, [sp, #52]
  4073c0:	b	4073d8 <add_swap+0x2c4>
  4073c4:	ldur	w0, [x29, #-96]
  4073c8:	bl	4022a8 <abs@plt>
  4073cc:	mov	w8, wzr
  4073d0:	subs	w8, w8, w0, uxtb
  4073d4:	str	w8, [sp, #52]
  4073d8:	ldr	w8, [sp, #52]
  4073dc:	stur	w8, [x29, #-104]
  4073e0:	ldur	w8, [x29, #-104]
  4073e4:	stur	w8, [x29, #-4]
  4073e8:	mov	w8, #0x1                   	// #1
  4073ec:	stur	w8, [x29, #-72]
  4073f0:	b	407714 <add_swap+0x600>
  4073f4:	ldr	x8, [sp, #80]
  4073f8:	ldr	x0, [x8]
  4073fc:	str	x0, [sp, #40]
  407400:	bl	4062ac <fstab_path>
  407404:	ldur	x2, [x29, #-40]
  407408:	ldr	x8, [sp, #40]
  40740c:	str	x0, [sp, #32]
  407410:	mov	x0, x8
  407414:	ldr	x1, [sp, #32]
  407418:	sub	x3, x29, #0x30
  40741c:	bl	4024c8 <generator_open_unit_file@plt>
  407420:	stur	w0, [x29, #-52]
  407424:	ldur	w9, [x29, #-52]
  407428:	cmp	w9, #0x0
  40742c:	cset	w9, ge  // ge = tcont
  407430:	tbnz	w9, #0, 407448 <add_swap+0x334>
  407434:	ldur	w8, [x29, #-52]
  407438:	stur	w8, [x29, #-4]
  40743c:	mov	w8, #0x1                   	// #1
  407440:	stur	w8, [x29, #-72]
  407444:	b	407714 <add_swap+0x600>
  407448:	ldur	x0, [x29, #-48]
  40744c:	str	x0, [sp, #24]
  407450:	bl	4062ac <fstab_path>
  407454:	ldr	x8, [sp, #24]
  407458:	str	x0, [sp, #16]
  40745c:	mov	x0, x8
  407460:	adrp	x1, 40a000 <_fini+0x894>
  407464:	add	x1, x1, #0x45a
  407468:	ldr	x2, [sp, #16]
  40746c:	bl	4024d8 <fprintf@plt>
  407470:	ldur	x8, [x29, #-48]
  407474:	ldur	x1, [x29, #-16]
  407478:	mov	x0, x8
  40747c:	bl	406770 <write_what>
  407480:	stur	w0, [x29, #-52]
  407484:	ldur	w9, [x29, #-52]
  407488:	cmp	w9, #0x0
  40748c:	cset	w9, ge  // ge = tcont
  407490:	tbnz	w9, #0, 4074a8 <add_swap+0x394>
  407494:	ldur	w8, [x29, #-52]
  407498:	stur	w8, [x29, #-4]
  40749c:	mov	w8, #0x1                   	// #1
  4074a0:	stur	w8, [x29, #-72]
  4074a4:	b	407714 <add_swap+0x600>
  4074a8:	ldur	x0, [x29, #-48]
  4074ac:	ldur	x8, [x29, #-24]
  4074b0:	ldr	x1, [x8, #24]
  4074b4:	bl	406858 <write_options>
  4074b8:	stur	w0, [x29, #-52]
  4074bc:	ldur	w9, [x29, #-52]
  4074c0:	cmp	w9, #0x0
  4074c4:	cset	w9, ge  // ge = tcont
  4074c8:	tbnz	w9, #0, 4074e0 <add_swap+0x3cc>
  4074cc:	ldur	w8, [x29, #-52]
  4074d0:	stur	w8, [x29, #-4]
  4074d4:	mov	w8, #0x1                   	// #1
  4074d8:	stur	w8, [x29, #-72]
  4074dc:	b	407714 <add_swap+0x600>
  4074e0:	ldur	x0, [x29, #-48]
  4074e4:	bl	402528 <fflush_and_check@plt>
  4074e8:	stur	w0, [x29, #-52]
  4074ec:	ldur	w8, [x29, #-52]
  4074f0:	cmp	w8, #0x0
  4074f4:	cset	w8, ge  // ge = tcont
  4074f8:	tbnz	w8, #0, 40758c <add_swap+0x478>
  4074fc:	mov	w8, #0x3                   	// #3
  407500:	stur	w8, [x29, #-108]
  407504:	ldur	w8, [x29, #-52]
  407508:	str	w8, [sp, #112]
  40750c:	str	wzr, [sp, #108]
  407510:	ldr	w0, [sp, #108]
  407514:	bl	402288 <log_get_max_level_realm@plt>
  407518:	ldur	w8, [x29, #-108]
  40751c:	and	w8, w8, #0x7
  407520:	cmp	w0, w8
  407524:	b.lt	40755c <add_swap+0x448>  // b.tstop
  407528:	ldr	w8, [sp, #108]
  40752c:	ldur	w9, [x29, #-108]
  407530:	orr	w0, w9, w8, lsl #10
  407534:	ldr	w1, [sp, #112]
  407538:	ldur	x6, [x29, #-40]
  40753c:	ldr	x2, [sp, #72]
  407540:	mov	w3, #0x88                  	// #136
  407544:	ldr	x4, [sp, #64]
  407548:	adrp	x5, 409000 <relabel_extra+0xfc>
  40754c:	add	x5, x5, #0xe23
  407550:	bl	402298 <log_internal_realm@plt>
  407554:	str	w0, [sp, #12]
  407558:	b	407570 <add_swap+0x45c>
  40755c:	ldr	w0, [sp, #112]
  407560:	bl	4022a8 <abs@plt>
  407564:	mov	w8, wzr
  407568:	subs	w8, w8, w0, uxtb
  40756c:	str	w8, [sp, #12]
  407570:	ldr	w8, [sp, #12]
  407574:	str	w8, [sp, #104]
  407578:	ldr	w8, [sp, #104]
  40757c:	stur	w8, [x29, #-4]
  407580:	mov	w8, #0x1                   	// #1
  407584:	stur	w8, [x29, #-72]
  407588:	b	407714 <add_swap+0x600>
  40758c:	ldr	x8, [sp, #80]
  407590:	ldr	x0, [x8]
  407594:	ldur	x1, [x29, #-16]
  407598:	ldur	x2, [x29, #-16]
  40759c:	ldur	x9, [x29, #-24]
  4075a0:	ldr	x3, [x9, #24]
  4075a4:	mov	x9, xzr
  4075a8:	mov	x4, x9
  4075ac:	bl	402508 <generator_write_timeouts@plt>
  4075b0:	stur	w0, [x29, #-52]
  4075b4:	ldur	w10, [x29, #-52]
  4075b8:	cmp	w10, #0x0
  4075bc:	cset	w10, ge  // ge = tcont
  4075c0:	tbnz	w10, #0, 4075d8 <add_swap+0x4c4>
  4075c4:	ldur	w8, [x29, #-52]
  4075c8:	stur	w8, [x29, #-4]
  4075cc:	mov	w8, #0x1                   	// #1
  4075d0:	stur	w8, [x29, #-72]
  4075d4:	b	407714 <add_swap+0x600>
  4075d8:	ldur	w8, [x29, #-28]
  4075dc:	and	w8, w8, #0x8
  4075e0:	cbz	w8, 40761c <add_swap+0x508>
  4075e4:	ldr	x8, [sp, #80]
  4075e8:	ldr	x0, [x8]
  4075ec:	ldur	x1, [x29, #-16]
  4075f0:	bl	402648 <generator_hook_up_mkswap@plt>
  4075f4:	stur	w0, [x29, #-52]
  4075f8:	ldur	w9, [x29, #-52]
  4075fc:	cmp	w9, #0x0
  407600:	cset	w9, ge  // ge = tcont
  407604:	tbnz	w9, #0, 40761c <add_swap+0x508>
  407608:	ldur	w8, [x29, #-52]
  40760c:	stur	w8, [x29, #-4]
  407610:	mov	w8, #0x1                   	// #1
  407614:	stur	w8, [x29, #-72]
  407618:	b	407714 <add_swap+0x600>
  40761c:	ldur	w8, [x29, #-28]
  407620:	and	w8, w8, #0x10
  407624:	cbz	w8, 4076a0 <add_swap+0x58c>
  407628:	mov	w8, #0x4                   	// #4
  40762c:	str	w8, [sp, #100]
  407630:	str	wzr, [sp, #96]
  407634:	str	wzr, [sp, #92]
  407638:	ldr	w0, [sp, #92]
  40763c:	bl	402288 <log_get_max_level_realm@plt>
  407640:	ldr	w8, [sp, #100]
  407644:	and	w8, w8, #0x7
  407648:	cmp	w0, w8
  40764c:	b.lt	407684 <add_swap+0x570>  // b.tstop
  407650:	ldr	w8, [sp, #92]
  407654:	ldr	w9, [sp, #100]
  407658:	orr	w0, w9, w8, lsl #10
  40765c:	ldr	w1, [sp, #96]
  407660:	ldur	x6, [x29, #-16]
  407664:	ldr	x2, [sp, #72]
  407668:	mov	w3, #0x97                  	// #151
  40766c:	ldr	x4, [sp, #64]
  407670:	adrp	x5, 40a000 <_fini+0x894>
  407674:	add	x5, x5, #0x4b2
  407678:	bl	402298 <log_internal_realm@plt>
  40767c:	str	w0, [sp, #8]
  407680:	b	407698 <add_swap+0x584>
  407684:	ldr	w0, [sp, #96]
  407688:	bl	4022a8 <abs@plt>
  40768c:	mov	w8, wzr
  407690:	subs	w8, w8, w0, uxtb
  407694:	str	w8, [sp, #8]
  407698:	ldr	w8, [sp, #8]
  40769c:	str	w8, [sp, #88]
  4076a0:	ldur	w8, [x29, #-28]
  4076a4:	and	w8, w8, #0x1
  4076a8:	cbnz	w8, 407708 <add_swap+0x5f4>
  4076ac:	ldr	x8, [sp, #80]
  4076b0:	ldr	x0, [x8]
  4076b4:	ldur	w9, [x29, #-28]
  4076b8:	adrp	x10, 409000 <relabel_extra+0xfc>
  4076bc:	add	x10, x10, #0xe4a
  4076c0:	adrp	x11, 409000 <relabel_extra+0xfc>
  4076c4:	add	x11, x11, #0xe44
  4076c8:	tst	w9, #0x2
  4076cc:	csel	x2, x11, x10, ne  // ne = any
  4076d0:	ldur	x3, [x29, #-40]
  4076d4:	adrp	x1, 40a000 <_fini+0x894>
  4076d8:	add	x1, x1, #0x4e5
  4076dc:	bl	402428 <generator_add_symlink@plt>
  4076e0:	stur	w0, [x29, #-52]
  4076e4:	ldur	w9, [x29, #-52]
  4076e8:	cmp	w9, #0x0
  4076ec:	cset	w9, ge  // ge = tcont
  4076f0:	tbnz	w9, #0, 407708 <add_swap+0x5f4>
  4076f4:	ldur	w8, [x29, #-52]
  4076f8:	stur	w8, [x29, #-4]
  4076fc:	mov	w8, #0x1                   	// #1
  407700:	stur	w8, [x29, #-72]
  407704:	b	407714 <add_swap+0x600>
  407708:	stur	wzr, [x29, #-4]
  40770c:	mov	w8, #0x1                   	// #1
  407710:	stur	w8, [x29, #-72]
  407714:	sub	x0, x29, #0x30
  407718:	bl	40624c <fclosep>
  40771c:	sub	x0, x29, #0x28
  407720:	bl	40306c <freep>
  407724:	ldur	w0, [x29, #-4]
  407728:	ldp	x29, x30, [sp, #224]
  40772c:	add	sp, sp, #0xf0
  407730:	ret

0000000000407734 <mount_is_network>:
  407734:	sub	sp, sp, #0x30
  407738:	stp	x29, x30, [sp, #32]
  40773c:	add	x29, sp, #0x20
  407740:	adrp	x8, 409000 <relabel_extra+0xfc>
  407744:	add	x8, x8, #0x790
  407748:	add	x2, x8, #0x3
  40774c:	stur	x0, [x29, #-8]
  407750:	str	x2, [sp, #16]
  407754:	ldur	x8, [x29, #-8]
  407758:	cmp	x8, #0x0
  40775c:	cset	w9, ne  // ne = any
  407760:	mov	w10, #0x1                   	// #1
  407764:	eor	w9, w9, #0x1
  407768:	eor	w9, w9, w10
  40776c:	eor	w9, w9, w10
  407770:	and	w9, w9, #0x1
  407774:	mov	w0, w9
  407778:	sxtw	x8, w0
  40777c:	cbz	x8, 4077a4 <mount_is_network+0x70>
  407780:	mov	w8, wzr
  407784:	mov	w0, w8
  407788:	adrp	x1, 40a000 <_fini+0x894>
  40778c:	add	x1, x1, #0x35c
  407790:	ldr	x2, [sp, #16]
  407794:	mov	w3, #0xa4                  	// #164
  407798:	adrp	x4, 40a000 <_fini+0x894>
  40779c:	add	x4, x4, #0x4f1
  4077a0:	bl	4022f8 <log_assert_failed_realm@plt>
  4077a4:	ldur	x8, [x29, #-8]
  4077a8:	ldr	x0, [x8, #24]
  4077ac:	adrp	x1, 40a000 <_fini+0x894>
  4077b0:	add	x1, x1, #0xcbd
  4077b4:	bl	404fec <fstab_test_option>
  4077b8:	mov	w9, #0x1                   	// #1
  4077bc:	str	w9, [sp, #12]
  4077c0:	tbnz	w0, #0, 4077d4 <mount_is_network+0xa0>
  4077c4:	ldur	x8, [x29, #-8]
  4077c8:	ldr	x0, [x8, #16]
  4077cc:	bl	402658 <fstype_is_network@plt>
  4077d0:	str	w0, [sp, #12]
  4077d4:	ldr	w8, [sp, #12]
  4077d8:	and	w0, w8, #0x1
  4077dc:	ldp	x29, x30, [sp, #32]
  4077e0:	add	sp, sp, #0x30
  4077e4:	ret

00000000004077e8 <ALIGN_TO>:
  4077e8:	sub	sp, sp, #0x10
  4077ec:	str	x0, [sp, #8]
  4077f0:	str	x1, [sp]
  4077f4:	ldr	x8, [sp, #8]
  4077f8:	ldr	x9, [sp]
  4077fc:	add	x8, x8, x9
  407800:	subs	x8, x8, #0x1
  407804:	ldr	x9, [sp]
  407808:	subs	x9, x9, #0x1
  40780c:	bic	x0, x8, x9
  407810:	add	sp, sp, #0x10
  407814:	ret

0000000000407818 <mount_point_is_api>:
  407818:	sub	sp, sp, #0x30
  40781c:	stp	x29, x30, [sp, #32]
  407820:	add	x29, sp, #0x20
  407824:	str	x0, [sp, #16]
  407828:	str	wzr, [sp, #12]
  40782c:	ldr	w8, [sp, #12]
  407830:	mov	w9, w8
  407834:	cmp	x9, #0x14
  407838:	b.cs	40788c <mount_point_is_api+0x74>  // b.hs, b.nlast
  40783c:	ldr	x0, [sp, #16]
  407840:	ldr	w8, [sp, #12]
  407844:	mov	w9, w8
  407848:	mov	x10, #0x38                  	// #56
  40784c:	mul	x9, x10, x9
  407850:	adrp	x10, 41f000 <__FRAME_END__+0x14190>
  407854:	add	x10, x10, #0x5f8
  407858:	add	x9, x10, x9
  40785c:	ldr	x1, [x9, #8]
  407860:	bl	4023c8 <path_equal@plt>
  407864:	tbnz	w0, #0, 40786c <mount_point_is_api+0x54>
  407868:	b	40787c <mount_point_is_api+0x64>
  40786c:	mov	w8, #0x1                   	// #1
  407870:	and	w8, w8, #0x1
  407874:	sturb	w8, [x29, #-1]
  407878:	b	4078ac <mount_point_is_api+0x94>
  40787c:	ldr	w8, [sp, #12]
  407880:	add	w8, w8, #0x1
  407884:	str	w8, [sp, #12]
  407888:	b	40782c <mount_point_is_api+0x14>
  40788c:	ldr	x0, [sp, #16]
  407890:	adrp	x1, 40a000 <_fini+0x894>
  407894:	add	x1, x1, #0x519
  407898:	bl	4024e8 <path_startswith@plt>
  40789c:	cmp	x0, #0x0
  4078a0:	cset	w8, ne  // ne = any
  4078a4:	and	w8, w8, #0x1
  4078a8:	sturb	w8, [x29, #-1]
  4078ac:	ldurb	w8, [x29, #-1]
  4078b0:	and	w0, w8, #0x1
  4078b4:	ldp	x29, x30, [sp, #32]
  4078b8:	add	sp, sp, #0x30
  4078bc:	ret

00000000004078c0 <mount_point_ignore>:
  4078c0:	sub	sp, sp, #0x30
  4078c4:	stp	x29, x30, [sp, #32]
  4078c8:	add	x29, sp, #0x20
  4078cc:	adrp	x8, 40a000 <_fini+0x894>
  4078d0:	add	x8, x8, #0xcd6
  4078d4:	str	x0, [sp, #16]
  4078d8:	str	x8, [sp, #8]
  4078dc:	ldr	x8, [sp, #8]
  4078e0:	mov	w9, #0x0                   	// #0
  4078e4:	str	w9, [sp, #4]
  4078e8:	cbz	x8, 407900 <mount_point_ignore+0x40>
  4078ec:	ldr	x8, [sp, #8]
  4078f0:	ldrb	w9, [x8]
  4078f4:	cmp	w9, #0x0
  4078f8:	cset	w9, ne  // ne = any
  4078fc:	str	w9, [sp, #4]
  407900:	ldr	w8, [sp, #4]
  407904:	tbnz	w8, #0, 40790c <mount_point_ignore+0x4c>
  407908:	b	40794c <mount_point_ignore+0x8c>
  40790c:	ldr	x0, [sp, #16]
  407910:	ldr	x1, [sp, #8]
  407914:	bl	4023c8 <path_equal@plt>
  407918:	tbnz	w0, #0, 407920 <mount_point_ignore+0x60>
  40791c:	b	407930 <mount_point_ignore+0x70>
  407920:	mov	w8, #0x1                   	// #1
  407924:	and	w8, w8, #0x1
  407928:	sturb	w8, [x29, #-1]
  40792c:	b	407958 <mount_point_ignore+0x98>
  407930:	ldr	x0, [sp, #8]
  407934:	mov	w8, wzr
  407938:	mov	w1, w8
  40793c:	bl	402668 <strchr@plt>
  407940:	add	x9, x0, #0x1
  407944:	str	x9, [sp, #8]
  407948:	b	4078dc <mount_point_ignore+0x1c>
  40794c:	mov	w8, wzr
  407950:	and	w8, w8, #0x1
  407954:	sturb	w8, [x29, #-1]
  407958:	ldurb	w8, [x29, #-1]
  40795c:	and	w0, w8, #0x1
  407960:	ldp	x29, x30, [sp, #32]
  407964:	add	sp, sp, #0x30
  407968:	ret

000000000040796c <mount_setup_early>:
  40796c:	stp	x29, x30, [sp, #-16]!
  407970:	mov	x29, sp
  407974:	mov	w0, #0x5                   	// #5
  407978:	mov	w8, wzr
  40797c:	and	w1, w8, #0x1
  407980:	bl	40798c <mount_points_setup>
  407984:	ldp	x29, x30, [sp], #16
  407988:	ret

000000000040798c <mount_points_setup>:
  40798c:	sub	sp, sp, #0x30
  407990:	stp	x29, x30, [sp, #32]
  407994:	add	x29, sp, #0x20
  407998:	mov	w8, #0x1                   	// #1
  40799c:	stur	w0, [x29, #-4]
  4079a0:	and	w8, w1, w8
  4079a4:	sturb	w8, [x29, #-5]
  4079a8:	str	wzr, [sp, #16]
  4079ac:	stur	wzr, [x29, #-12]
  4079b0:	ldur	w8, [x29, #-12]
  4079b4:	ldur	w9, [x29, #-4]
  4079b8:	cmp	w8, w9
  4079bc:	b.cs	407a1c <mount_points_setup+0x90>  // b.hs, b.nlast
  4079c0:	ldur	w8, [x29, #-12]
  4079c4:	mov	w9, w8
  4079c8:	mov	x10, #0x38                  	// #56
  4079cc:	mul	x9, x10, x9
  4079d0:	adrp	x10, 41f000 <__FRAME_END__+0x14190>
  4079d4:	add	x10, x10, #0x5f8
  4079d8:	add	x0, x10, x9
  4079dc:	ldurb	w8, [x29, #-5]
  4079e0:	and	w1, w8, #0x1
  4079e4:	bl	407fec <mount_one>
  4079e8:	str	w0, [sp, #12]
  4079ec:	ldr	w8, [sp, #12]
  4079f0:	cbz	w8, 407a0c <mount_points_setup+0x80>
  4079f4:	ldr	w8, [sp, #16]
  4079f8:	cmp	w8, #0x0
  4079fc:	cset	w8, lt  // lt = tstop
  407a00:	tbnz	w8, #0, 407a0c <mount_points_setup+0x80>
  407a04:	ldr	w8, [sp, #12]
  407a08:	str	w8, [sp, #16]
  407a0c:	ldur	w8, [x29, #-12]
  407a10:	add	w8, w8, #0x1
  407a14:	stur	w8, [x29, #-12]
  407a18:	b	4079b0 <mount_points_setup+0x24>
  407a1c:	ldr	w0, [sp, #16]
  407a20:	ldp	x29, x30, [sp, #32]
  407a24:	add	sp, sp, #0x30
  407a28:	ret

0000000000407a2c <mount_cgroup_controllers>:
  407a2c:	sub	sp, sp, #0xd0
  407a30:	stp	x29, x30, [sp, #192]
  407a34:	add	x29, sp, #0xc0
  407a38:	mov	x8, xzr
  407a3c:	adrp	x9, 40a000 <_fini+0x894>
  407a40:	add	x9, x9, #0x529
  407a44:	add	x9, x9, #0x3
  407a48:	adrp	x10, 40a000 <_fini+0x894>
  407a4c:	add	x10, x10, #0x543
  407a50:	stur	x8, [x29, #-16]
  407a54:	str	x9, [sp, #32]
  407a58:	str	x10, [sp, #24]
  407a5c:	bl	402678 <cg_is_legacy_wanted@plt>
  407a60:	tbnz	w0, #0, 407a74 <mount_cgroup_controllers+0x48>
  407a64:	stur	wzr, [x29, #-4]
  407a68:	mov	w8, #0x1                   	// #1
  407a6c:	stur	w8, [x29, #-24]
  407a70:	b	407dd0 <mount_cgroup_controllers+0x3a4>
  407a74:	sub	x0, x29, #0x10
  407a78:	bl	402688 <cg_kernel_controllers@plt>
  407a7c:	stur	w0, [x29, #-20]
  407a80:	ldur	w8, [x29, #-20]
  407a84:	cmp	w8, #0x0
  407a88:	cset	w8, ge  // ge = tcont
  407a8c:	tbnz	w8, #0, 407b1c <mount_cgroup_controllers+0xf0>
  407a90:	mov	w8, #0x3                   	// #3
  407a94:	stur	w8, [x29, #-28]
  407a98:	ldur	w8, [x29, #-20]
  407a9c:	stur	w8, [x29, #-32]
  407aa0:	stur	wzr, [x29, #-36]
  407aa4:	ldur	w0, [x29, #-36]
  407aa8:	bl	402288 <log_get_max_level_realm@plt>
  407aac:	ldur	w8, [x29, #-28]
  407ab0:	and	w8, w8, #0x7
  407ab4:	cmp	w0, w8
  407ab8:	b.lt	407aec <mount_cgroup_controllers+0xc0>  // b.tstop
  407abc:	ldur	w8, [x29, #-36]
  407ac0:	ldur	w9, [x29, #-28]
  407ac4:	orr	w0, w9, w8, lsl #10
  407ac8:	ldur	w1, [x29, #-32]
  407acc:	ldr	x2, [sp, #32]
  407ad0:	mov	w3, #0x129                 	// #297
  407ad4:	ldr	x4, [sp, #24]
  407ad8:	adrp	x5, 40a000 <_fini+0x894>
  407adc:	add	x5, x5, #0x55c
  407ae0:	bl	402298 <log_internal_realm@plt>
  407ae4:	str	w0, [sp, #20]
  407ae8:	b	407b00 <mount_cgroup_controllers+0xd4>
  407aec:	ldur	w0, [x29, #-32]
  407af0:	bl	4022a8 <abs@plt>
  407af4:	mov	w8, wzr
  407af8:	subs	w8, w8, w0, uxtb
  407afc:	str	w8, [sp, #20]
  407b00:	ldr	w8, [sp, #20]
  407b04:	stur	w8, [x29, #-40]
  407b08:	ldur	w8, [x29, #-40]
  407b0c:	stur	w8, [x29, #-4]
  407b10:	mov	w8, #0x1                   	// #1
  407b14:	stur	w8, [x29, #-24]
  407b18:	b	407dd0 <mount_cgroup_controllers+0x3a4>
  407b1c:	mov	x8, xzr
  407b20:	stur	x8, [x29, #-48]
  407b24:	stur	x8, [x29, #-56]
  407b28:	stur	x8, [x29, #-64]
  407b2c:	add	x8, sp, #0x40
  407b30:	mov	x0, x8
  407b34:	mov	w9, wzr
  407b38:	mov	w1, w9
  407b3c:	mov	x2, #0x38                  	// #56
  407b40:	str	x8, [sp, #8]
  407b44:	bl	402698 <memset@plt>
  407b48:	adrp	x8, 40a000 <_fini+0x894>
  407b4c:	add	x8, x8, #0x587
  407b50:	str	x8, [sp, #64]
  407b54:	ldr	x10, [sp, #8]
  407b58:	str	x8, [x10, #16]
  407b5c:	mov	x8, #0xe                   	// #14
  407b60:	str	x8, [sp, #96]
  407b64:	mov	w9, #0x2                   	// #2
  407b68:	str	w9, [sp, #112]
  407b6c:	ldur	x0, [x29, #-16]
  407b70:	bl	407e44 <set_steal_first>
  407b74:	stur	x0, [x29, #-56]
  407b78:	ldur	x8, [x29, #-56]
  407b7c:	cbnz	x8, 407b8c <mount_cgroup_controllers+0x160>
  407b80:	mov	w8, #0x2                   	// #2
  407b84:	stur	w8, [x29, #-24]
  407b88:	b	407d5c <mount_cgroup_controllers+0x330>
  407b8c:	ldur	x0, [x29, #-56]
  407b90:	bl	407e78 <join_with>
  407b94:	stur	x0, [x29, #-72]
  407b98:	ldur	x8, [x29, #-72]
  407b9c:	cbz	x8, 407c70 <mount_cgroup_controllers+0x244>
  407ba0:	mov	x8, xzr
  407ba4:	str	x8, [sp, #56]
  407ba8:	ldur	x0, [x29, #-16]
  407bac:	ldur	x1, [x29, #-72]
  407bb0:	bl	407fc0 <set_remove>
  407bb4:	str	x0, [sp, #56]
  407bb8:	ldr	x8, [sp, #56]
  407bbc:	cbz	x8, 407c4c <mount_cgroup_controllers+0x220>
  407bc0:	ldur	x0, [x29, #-56]
  407bc4:	ldur	x1, [x29, #-72]
  407bc8:	bl	402368 <strcmp@plt>
  407bcc:	cmp	w0, #0x0
  407bd0:	cset	w8, ge  // ge = tcont
  407bd4:	tbnz	w8, #0, 407bfc <mount_cgroup_controllers+0x1d0>
  407bd8:	ldur	x0, [x29, #-56]
  407bdc:	ldur	x2, [x29, #-72]
  407be0:	adrp	x1, 409000 <relabel_extra+0xfc>
  407be4:	add	x1, x1, #0x8ed
  407be8:	mov	x8, xzr
  407bec:	mov	x3, x8
  407bf0:	bl	4026a8 <strjoin_real@plt>
  407bf4:	stur	x0, [x29, #-48]
  407bf8:	b	407c1c <mount_cgroup_controllers+0x1f0>
  407bfc:	ldur	x0, [x29, #-72]
  407c00:	ldur	x2, [x29, #-56]
  407c04:	adrp	x1, 409000 <relabel_extra+0xfc>
  407c08:	add	x1, x1, #0x8ed
  407c0c:	mov	x8, xzr
  407c10:	mov	x3, x8
  407c14:	bl	4026a8 <strjoin_real@plt>
  407c18:	stur	x0, [x29, #-48]
  407c1c:	ldur	x8, [x29, #-48]
  407c20:	cbnz	x8, 407c4c <mount_cgroup_controllers+0x220>
  407c24:	mov	w8, wzr
  407c28:	mov	w0, w8
  407c2c:	ldr	x1, [sp, #32]
  407c30:	mov	w2, #0x148                 	// #328
  407c34:	ldr	x3, [sp, #24]
  407c38:	bl	402388 <log_oom_internal@plt>
  407c3c:	stur	w0, [x29, #-4]
  407c40:	mov	w8, #0x1                   	// #1
  407c44:	stur	w8, [x29, #-24]
  407c48:	b	407c50 <mount_cgroup_controllers+0x224>
  407c4c:	stur	wzr, [x29, #-24]
  407c50:	add	x0, sp, #0x38
  407c54:	bl	407e1c <freep>
  407c58:	ldur	w8, [x29, #-24]
  407c5c:	cmp	w8, #0x0
  407c60:	cset	w8, eq  // eq = none
  407c64:	eor	w8, w8, #0x1
  407c68:	tbnz	w8, #0, 407d5c <mount_cgroup_controllers+0x330>
  407c6c:	b	407c70 <mount_cgroup_controllers+0x244>
  407c70:	ldur	x8, [x29, #-48]
  407c74:	cbnz	x8, 407c98 <mount_cgroup_controllers+0x26c>
  407c78:	ldur	x8, [x29, #-56]
  407c7c:	str	x8, [sp, #48]
  407c80:	mov	x8, xzr
  407c84:	stur	x8, [x29, #-56]
  407c88:	ldr	x8, [sp, #48]
  407c8c:	str	x8, [sp, #40]
  407c90:	ldr	x8, [sp, #40]
  407c94:	stur	x8, [x29, #-48]
  407c98:	ldur	x1, [x29, #-48]
  407c9c:	adrp	x0, 40a000 <_fini+0x894>
  407ca0:	add	x0, x0, #0x58e
  407ca4:	mov	x8, #0xffffffffffffffff    	// #-1
  407ca8:	mov	x2, x8
  407cac:	bl	4026b8 <path_join_internal@plt>
  407cb0:	stur	x0, [x29, #-64]
  407cb4:	ldur	x8, [x29, #-64]
  407cb8:	cbnz	x8, 407ce4 <mount_cgroup_controllers+0x2b8>
  407cbc:	mov	w8, wzr
  407cc0:	mov	w0, w8
  407cc4:	ldr	x1, [sp, #32]
  407cc8:	mov	w2, #0x152                 	// #338
  407ccc:	ldr	x3, [sp, #24]
  407cd0:	bl	402388 <log_oom_internal@plt>
  407cd4:	stur	w0, [x29, #-4]
  407cd8:	mov	w8, #0x1                   	// #1
  407cdc:	stur	w8, [x29, #-24]
  407ce0:	b	407d5c <mount_cgroup_controllers+0x330>
  407ce4:	ldur	x8, [x29, #-64]
  407ce8:	add	x9, sp, #0x40
  407cec:	str	x8, [x9, #8]
  407cf0:	ldur	x8, [x29, #-48]
  407cf4:	str	x8, [x9, #24]
  407cf8:	mov	x0, x9
  407cfc:	mov	w10, #0x1                   	// #1
  407d00:	and	w1, w10, #0x1
  407d04:	bl	407fec <mount_one>
  407d08:	stur	w0, [x29, #-20]
  407d0c:	ldur	w10, [x29, #-20]
  407d10:	cmp	w10, #0x0
  407d14:	cset	w10, ge  // ge = tcont
  407d18:	tbnz	w10, #0, 407d30 <mount_cgroup_controllers+0x304>
  407d1c:	ldur	w8, [x29, #-20]
  407d20:	stur	w8, [x29, #-4]
  407d24:	mov	w8, #0x1                   	// #1
  407d28:	stur	w8, [x29, #-24]
  407d2c:	b	407d5c <mount_cgroup_controllers+0x330>
  407d30:	ldur	x8, [x29, #-56]
  407d34:	cbz	x8, 407d44 <mount_cgroup_controllers+0x318>
  407d38:	ldur	x0, [x29, #-48]
  407d3c:	ldur	x1, [x29, #-56]
  407d40:	bl	408554 <symlink_controller>
  407d44:	ldur	x8, [x29, #-72]
  407d48:	cbz	x8, 407d58 <mount_cgroup_controllers+0x32c>
  407d4c:	ldur	x0, [x29, #-48]
  407d50:	ldur	x1, [x29, #-72]
  407d54:	bl	408554 <symlink_controller>
  407d58:	stur	wzr, [x29, #-24]
  407d5c:	sub	x0, x29, #0x40
  407d60:	bl	407e1c <freep>
  407d64:	sub	x0, x29, #0x38
  407d68:	bl	407e1c <freep>
  407d6c:	sub	x0, x29, #0x30
  407d70:	bl	407e1c <freep>
  407d74:	ldur	w8, [x29, #-24]
  407d78:	str	w8, [sp, #4]
  407d7c:	cbz	w8, 407d94 <mount_cgroup_controllers+0x368>
  407d80:	b	407d84 <mount_cgroup_controllers+0x358>
  407d84:	ldr	w8, [sp, #4]
  407d88:	cmp	w8, #0x2
  407d8c:	b.eq	407d98 <mount_cgroup_controllers+0x36c>  // b.none
  407d90:	b	407dd0 <mount_cgroup_controllers+0x3a4>
  407d94:	b	407b1c <mount_cgroup_controllers+0xf0>
  407d98:	adrp	x8, 40a000 <_fini+0x894>
  407d9c:	add	x8, x8, #0x1f5
  407da0:	mov	x0, x8
  407da4:	adrp	x1, 40a000 <_fini+0x894>
  407da8:	add	x1, x1, #0x58e
  407dac:	mov	x2, x8
  407db0:	mov	x3, #0x2f                  	// #47
  407db4:	movk	x3, #0x100, lsl #16
  407db8:	adrp	x4, 40a000 <_fini+0x894>
  407dbc:	add	x4, x4, #0x59d
  407dc0:	bl	4026c8 <mount@plt>
  407dc4:	stur	wzr, [x29, #-4]
  407dc8:	mov	w9, #0x1                   	// #1
  407dcc:	stur	w9, [x29, #-24]
  407dd0:	sub	x0, x29, #0x10
  407dd4:	bl	407de8 <set_free_freep>
  407dd8:	ldur	w0, [x29, #-4]
  407ddc:	ldp	x29, x30, [sp, #192]
  407de0:	add	sp, sp, #0xd0
  407de4:	ret

0000000000407de8 <set_free_freep>:
  407de8:	sub	sp, sp, #0x20
  407dec:	stp	x29, x30, [sp, #16]
  407df0:	add	x29, sp, #0x10
  407df4:	str	x0, [sp, #8]
  407df8:	ldr	x8, [sp, #8]
  407dfc:	ldr	x8, [x8]
  407e00:	cbz	x8, 407e10 <set_free_freep+0x28>
  407e04:	ldr	x8, [sp, #8]
  407e08:	ldr	x0, [x8]
  407e0c:	bl	409574 <set_free_free>
  407e10:	ldp	x29, x30, [sp, #16]
  407e14:	add	sp, sp, #0x20
  407e18:	ret

0000000000407e1c <freep>:
  407e1c:	sub	sp, sp, #0x20
  407e20:	stp	x29, x30, [sp, #16]
  407e24:	add	x29, sp, #0x10
  407e28:	str	x0, [sp, #8]
  407e2c:	ldr	x8, [sp, #8]
  407e30:	ldr	x0, [x8]
  407e34:	bl	402338 <free@plt>
  407e38:	ldp	x29, x30, [sp, #16]
  407e3c:	add	sp, sp, #0x20
  407e40:	ret

0000000000407e44 <set_steal_first>:
  407e44:	sub	sp, sp, #0x20
  407e48:	stp	x29, x30, [sp, #16]
  407e4c:	add	x29, sp, #0x10
  407e50:	mov	x8, xzr
  407e54:	str	x0, [sp, #8]
  407e58:	ldr	x0, [sp, #8]
  407e5c:	mov	w9, #0x1                   	// #1
  407e60:	and	w1, w9, #0x1
  407e64:	mov	x2, x8
  407e68:	bl	4026d8 <internal_hashmap_first_key_and_value@plt>
  407e6c:	ldp	x29, x30, [sp, #16]
  407e70:	add	sp, sp, #0x20
  407e74:	ret

0000000000407e78 <join_with>:
  407e78:	sub	sp, sp, #0x40
  407e7c:	stp	x29, x30, [sp, #48]
  407e80:	add	x29, sp, #0x30
  407e84:	adrp	x8, 40a000 <_fini+0x894>
  407e88:	add	x8, x8, #0x529
  407e8c:	add	x2, x8, #0x3
  407e90:	stur	x0, [x29, #-16]
  407e94:	str	x2, [sp, #8]
  407e98:	ldur	x8, [x29, #-16]
  407e9c:	cmp	x8, #0x0
  407ea0:	cset	w9, ne  // ne = any
  407ea4:	mov	w10, #0x1                   	// #1
  407ea8:	eor	w9, w9, #0x1
  407eac:	eor	w9, w9, w10
  407eb0:	eor	w9, w9, w10
  407eb4:	and	w9, w9, #0x1
  407eb8:	mov	w0, w9
  407ebc:	sxtw	x8, w0
  407ec0:	cbz	x8, 407ee8 <join_with+0x70>
  407ec4:	mov	w8, wzr
  407ec8:	mov	w0, w8
  407ecc:	adrp	x1, 40a000 <_fini+0x894>
  407ed0:	add	x1, x1, #0x809
  407ed4:	ldr	x2, [sp, #8]
  407ed8:	mov	w3, #0xf5                  	// #245
  407edc:	adrp	x4, 40a000 <_fini+0x894>
  407ee0:	add	x4, x4, #0x814
  407ee4:	bl	4022f8 <log_assert_failed_realm@plt>
  407ee8:	adrp	x8, 41f000 <__FRAME_END__+0x14190>
  407eec:	add	x8, x8, #0xa58
  407ef0:	str	x8, [sp, #24]
  407ef4:	ldr	x8, [sp, #24]
  407ef8:	add	x8, x8, #0x8
  407efc:	str	x8, [sp, #16]
  407f00:	ldr	x8, [sp, #24]
  407f04:	mov	w9, #0x0                   	// #0
  407f08:	str	w9, [sp, #4]
  407f0c:	cbz	x8, 407f38 <join_with+0xc0>
  407f10:	ldr	x8, [sp, #24]
  407f14:	ldr	x8, [x8]
  407f18:	mov	w9, #0x0                   	// #0
  407f1c:	str	w9, [sp, #4]
  407f20:	cbz	x8, 407f38 <join_with+0xc0>
  407f24:	ldr	x8, [sp, #16]
  407f28:	ldr	x8, [x8]
  407f2c:	cmp	x8, #0x0
  407f30:	cset	w9, ne  // ne = any
  407f34:	str	w9, [sp, #4]
  407f38:	ldr	w8, [sp, #4]
  407f3c:	tbnz	w8, #0, 407f44 <join_with+0xcc>
  407f40:	b	407fa8 <join_with+0x130>
  407f44:	ldur	x0, [x29, #-16]
  407f48:	ldr	x8, [sp, #24]
  407f4c:	ldr	x1, [x8]
  407f50:	bl	402368 <strcmp@plt>
  407f54:	cbnz	w0, 407f68 <join_with+0xf0>
  407f58:	ldr	x8, [sp, #16]
  407f5c:	ldr	x8, [x8]
  407f60:	stur	x8, [x29, #-8]
  407f64:	b	407fb0 <join_with+0x138>
  407f68:	ldur	x0, [x29, #-16]
  407f6c:	ldr	x8, [sp, #16]
  407f70:	ldr	x1, [x8]
  407f74:	bl	402368 <strcmp@plt>
  407f78:	cbnz	w0, 407f8c <join_with+0x114>
  407f7c:	ldr	x8, [sp, #24]
  407f80:	ldr	x8, [x8]
  407f84:	stur	x8, [x29, #-8]
  407f88:	b	407fb0 <join_with+0x138>
  407f8c:	ldr	x8, [sp, #24]
  407f90:	add	x8, x8, #0x10
  407f94:	str	x8, [sp, #24]
  407f98:	ldr	x8, [sp, #24]
  407f9c:	add	x8, x8, #0x8
  407fa0:	str	x8, [sp, #16]
  407fa4:	b	407f00 <join_with+0x88>
  407fa8:	mov	x8, xzr
  407fac:	stur	x8, [x29, #-8]
  407fb0:	ldur	x0, [x29, #-8]
  407fb4:	ldp	x29, x30, [sp, #48]
  407fb8:	add	sp, sp, #0x40
  407fbc:	ret

0000000000407fc0 <set_remove>:
  407fc0:	sub	sp, sp, #0x20
  407fc4:	stp	x29, x30, [sp, #16]
  407fc8:	add	x29, sp, #0x10
  407fcc:	str	x0, [sp, #8]
  407fd0:	str	x1, [sp]
  407fd4:	ldr	x0, [sp, #8]
  407fd8:	ldr	x1, [sp]
  407fdc:	bl	4026e8 <internal_hashmap_remove@plt>
  407fe0:	ldp	x29, x30, [sp, #16]
  407fe4:	add	sp, sp, #0x20
  407fe8:	ret

0000000000407fec <mount_one>:
  407fec:	sub	sp, sp, #0xe0
  407ff0:	stp	x29, x30, [sp, #208]
  407ff4:	add	x29, sp, #0xd0
  407ff8:	mov	w8, #0x1                   	// #1
  407ffc:	adrp	x9, 40a000 <_fini+0x894>
  408000:	add	x9, x9, #0x529
  408004:	add	x9, x9, #0x3
  408008:	adrp	x10, 40a000 <_fini+0x894>
  40800c:	add	x10, x10, #0x863
  408010:	stur	x0, [x29, #-16]
  408014:	and	w8, w1, w8
  408018:	sturb	w8, [x29, #-17]
  40801c:	str	x9, [sp, #104]
  408020:	str	x10, [sp, #96]
  408024:	ldur	x8, [x29, #-16]
  408028:	cmp	x8, #0x0
  40802c:	cset	w9, ne  // ne = any
  408030:	mov	w10, #0x1                   	// #1
  408034:	eor	w9, w9, #0x1
  408038:	eor	w9, w9, w10
  40803c:	eor	w9, w9, w10
  408040:	and	w9, w9, #0x1
  408044:	mov	w0, w9
  408048:	sxtw	x8, w0
  40804c:	cbz	x8, 408074 <mount_one+0x88>
  408050:	mov	w8, wzr
  408054:	mov	w0, w8
  408058:	adrp	x1, 40a000 <_fini+0x894>
  40805c:	add	x1, x1, #0x838
  408060:	ldr	x2, [sp, #104]
  408064:	mov	w3, #0x94                  	// #148
  408068:	adrp	x4, 40a000 <_fini+0x894>
  40806c:	add	x4, x4, #0x83a
  408070:	bl	4022f8 <log_assert_failed_realm@plt>
  408074:	ldur	x8, [x29, #-16]
  408078:	ldr	w9, [x8, #48]
  40807c:	mov	w10, #0x7                   	// #7
  408080:	mov	w11, #0x3                   	// #3
  408084:	tst	w9, #0x1
  408088:	csel	w9, w11, w10, ne  // ne = any
  40808c:	stur	w9, [x29, #-28]
  408090:	ldur	x8, [x29, #-16]
  408094:	ldr	x8, [x8, #40]
  408098:	cbz	x8, 4080b4 <mount_one+0xc8>
  40809c:	ldur	x8, [x29, #-16]
  4080a0:	ldr	x8, [x8, #40]
  4080a4:	blr	x8
  4080a8:	tbnz	w0, #0, 4080b4 <mount_one+0xc8>
  4080ac:	stur	wzr, [x29, #-4]
  4080b0:	b	408544 <mount_one+0x558>
  4080b4:	ldurb	w8, [x29, #-17]
  4080b8:	tbnz	w8, #0, 4080c0 <mount_one+0xd4>
  4080bc:	b	4080d0 <mount_one+0xe4>
  4080c0:	ldur	x8, [x29, #-16]
  4080c4:	ldr	x0, [x8, #8]
  4080c8:	mov	w1, #0x3                   	// #3
  4080cc:	bl	4026f8 <label_fix@plt>
  4080d0:	ldur	x8, [x29, #-16]
  4080d4:	ldr	x0, [x8, #8]
  4080d8:	mov	x8, xzr
  4080dc:	mov	x1, x8
  4080e0:	mov	w2, #0x400                 	// #1024
  4080e4:	bl	402708 <path_is_mount_point@plt>
  4080e8:	stur	w0, [x29, #-24]
  4080ec:	ldur	w9, [x29, #-24]
  4080f0:	cmp	w9, #0x0
  4080f4:	cset	w9, ge  // ge = tcont
  4080f8:	tbnz	w9, #0, 4081bc <mount_one+0x1d0>
  4080fc:	ldur	w8, [x29, #-24]
  408100:	mov	w9, #0xfffffffe            	// #-2
  408104:	cmp	w8, w9
  408108:	b.eq	4081bc <mount_one+0x1d0>  // b.none
  40810c:	ldur	w8, [x29, #-28]
  408110:	stur	w8, [x29, #-32]
  408114:	ldur	w8, [x29, #-24]
  408118:	stur	w8, [x29, #-36]
  40811c:	stur	wzr, [x29, #-40]
  408120:	ldur	w0, [x29, #-40]
  408124:	bl	402288 <log_get_max_level_realm@plt>
  408128:	ldur	w8, [x29, #-32]
  40812c:	and	w8, w8, #0x7
  408130:	cmp	w0, w8
  408134:	b.lt	408170 <mount_one+0x184>  // b.tstop
  408138:	ldur	w8, [x29, #-40]
  40813c:	ldur	w9, [x29, #-32]
  408140:	orr	w0, w9, w8, lsl #10
  408144:	ldur	w1, [x29, #-36]
  408148:	ldur	x10, [x29, #-16]
  40814c:	ldr	x6, [x10, #8]
  408150:	ldr	x2, [sp, #104]
  408154:	mov	w3, #0xa1                  	// #161
  408158:	ldr	x4, [sp, #96]
  40815c:	adrp	x5, 40a000 <_fini+0x894>
  408160:	add	x5, x5, #0x86d
  408164:	bl	402298 <log_internal_realm@plt>
  408168:	str	w0, [sp, #92]
  40816c:	b	408184 <mount_one+0x198>
  408170:	ldur	w0, [x29, #-36]
  408174:	bl	4022a8 <abs@plt>
  408178:	mov	w8, wzr
  40817c:	subs	w8, w8, w0, uxtb
  408180:	str	w8, [sp, #92]
  408184:	ldr	w8, [sp, #92]
  408188:	stur	w8, [x29, #-44]
  40818c:	ldur	x9, [x29, #-16]
  408190:	ldr	w8, [x9, #48]
  408194:	and	w8, w8, #0x1
  408198:	cbz	w8, 4081a8 <mount_one+0x1bc>
  40819c:	ldur	w8, [x29, #-24]
  4081a0:	str	w8, [sp, #88]
  4081a4:	b	4081b0 <mount_one+0x1c4>
  4081a8:	mov	w8, wzr
  4081ac:	str	w8, [sp, #88]
  4081b0:	ldr	w8, [sp, #88]
  4081b4:	stur	w8, [x29, #-4]
  4081b8:	b	408544 <mount_one+0x558>
  4081bc:	ldur	w8, [x29, #-24]
  4081c0:	cmp	w8, #0x0
  4081c4:	cset	w8, le
  4081c8:	tbnz	w8, #0, 4081d4 <mount_one+0x1e8>
  4081cc:	stur	wzr, [x29, #-4]
  4081d0:	b	408544 <mount_one+0x558>
  4081d4:	ldur	x8, [x29, #-16]
  4081d8:	ldr	w9, [x8, #48]
  4081dc:	and	w9, w9, #0x2
  4081e0:	cbnz	w9, 4081fc <mount_one+0x210>
  4081e4:	bl	402638 <detect_container@plt>
  4081e8:	cmp	w0, #0x0
  4081ec:	cset	w8, le
  4081f0:	tbnz	w8, #0, 4081fc <mount_one+0x210>
  4081f4:	stur	wzr, [x29, #-4]
  4081f8:	b	408544 <mount_one+0x558>
  4081fc:	ldurb	w8, [x29, #-17]
  408200:	tbnz	w8, #0, 408208 <mount_one+0x21c>
  408204:	b	40821c <mount_one+0x230>
  408208:	ldur	x8, [x29, #-16]
  40820c:	ldr	x0, [x8, #8]
  408210:	mov	w1, #0x1ed                 	// #493
  408214:	bl	402718 <mkdir_p_label@plt>
  408218:	b	40822c <mount_one+0x240>
  40821c:	ldur	x8, [x29, #-16]
  408220:	ldr	x0, [x8, #8]
  408224:	mov	w1, #0x1ed                 	// #493
  408228:	bl	402728 <mkdir_p@plt>
  40822c:	mov	w8, #0x7                   	// #7
  408230:	stur	w8, [x29, #-48]
  408234:	stur	wzr, [x29, #-52]
  408238:	stur	wzr, [x29, #-56]
  40823c:	ldur	w0, [x29, #-56]
  408240:	bl	402288 <log_get_max_level_realm@plt>
  408244:	ldur	w8, [x29, #-48]
  408248:	and	w8, w8, #0x7
  40824c:	cmp	w0, w8
  408250:	b.lt	4082f0 <mount_one+0x304>  // b.tstop
  408254:	ldur	w8, [x29, #-56]
  408258:	ldur	w9, [x29, #-48]
  40825c:	orr	w0, w9, w8, lsl #10
  408260:	ldur	w1, [x29, #-52]
  408264:	ldur	x10, [x29, #-16]
  408268:	ldr	x6, [x10]
  40826c:	ldur	x10, [x29, #-16]
  408270:	ldr	x7, [x10, #8]
  408274:	ldur	x10, [x29, #-16]
  408278:	ldr	x10, [x10, #16]
  40827c:	ldur	x11, [x29, #-16]
  408280:	ldr	x11, [x11, #24]
  408284:	str	w0, [sp, #84]
  408288:	mov	x0, x11
  40828c:	str	w1, [sp, #80]
  408290:	str	x6, [sp, #72]
  408294:	str	x7, [sp, #64]
  408298:	str	x10, [sp, #56]
  40829c:	bl	4095a8 <strna>
  4082a0:	ldr	w8, [sp, #84]
  4082a4:	str	x0, [sp, #48]
  4082a8:	mov	w0, w8
  4082ac:	ldr	w1, [sp, #80]
  4082b0:	ldr	x2, [sp, #104]
  4082b4:	mov	w3, #0xb6                  	// #182
  4082b8:	ldr	x4, [sp, #96]
  4082bc:	adrp	x5, 40a000 <_fini+0x894>
  4082c0:	add	x5, x5, #0x8a1
  4082c4:	ldr	x6, [sp, #72]
  4082c8:	ldr	x7, [sp, #64]
  4082cc:	mov	x10, sp
  4082d0:	ldr	x11, [sp, #56]
  4082d4:	str	x11, [x10]
  4082d8:	mov	x10, sp
  4082dc:	ldr	x12, [sp, #48]
  4082e0:	str	x12, [x10, #8]
  4082e4:	bl	402298 <log_internal_realm@plt>
  4082e8:	str	w0, [sp, #44]
  4082ec:	b	408304 <mount_one+0x318>
  4082f0:	ldur	w0, [x29, #-52]
  4082f4:	bl	4022a8 <abs@plt>
  4082f8:	mov	w8, wzr
  4082fc:	subs	w8, w8, w0, uxtb
  408300:	str	w8, [sp, #44]
  408304:	ldr	w8, [sp, #44]
  408308:	stur	w8, [x29, #-60]
  40830c:	ldur	x9, [x29, #-16]
  408310:	ldr	x0, [x9]
  408314:	ldur	x9, [x29, #-16]
  408318:	ldr	x1, [x9, #8]
  40831c:	ldur	x9, [x29, #-16]
  408320:	ldr	x2, [x9, #16]
  408324:	ldur	x9, [x29, #-16]
  408328:	ldr	x3, [x9, #32]
  40832c:	ldur	x9, [x29, #-16]
  408330:	ldr	x4, [x9, #24]
  408334:	bl	4026c8 <mount@plt>
  408338:	cmp	w0, #0x0
  40833c:	cset	w8, ge  // ge = tcont
  408340:	tbnz	w8, #0, 40840c <mount_one+0x420>
  408344:	ldur	w8, [x29, #-28]
  408348:	stur	w8, [x29, #-64]
  40834c:	bl	402448 <__errno_location@plt>
  408350:	ldr	w8, [x0]
  408354:	stur	w8, [x29, #-68]
  408358:	stur	wzr, [x29, #-72]
  40835c:	ldur	w0, [x29, #-72]
  408360:	bl	402288 <log_get_max_level_realm@plt>
  408364:	ldur	w8, [x29, #-64]
  408368:	and	w8, w8, #0x7
  40836c:	cmp	w0, w8
  408370:	b.lt	4083b4 <mount_one+0x3c8>  // b.tstop
  408374:	ldur	w8, [x29, #-72]
  408378:	ldur	w9, [x29, #-64]
  40837c:	orr	w0, w9, w8, lsl #10
  408380:	ldur	w1, [x29, #-68]
  408384:	ldur	x10, [x29, #-16]
  408388:	ldr	x6, [x10, #16]
  40838c:	ldur	x10, [x29, #-16]
  408390:	ldr	x7, [x10, #8]
  408394:	ldr	x2, [sp, #104]
  408398:	mov	w3, #0xbd                  	// #189
  40839c:	ldr	x4, [sp, #96]
  4083a0:	adrp	x5, 40a000 <_fini+0x894>
  4083a4:	add	x5, x5, #0x8cf
  4083a8:	bl	402298 <log_internal_realm@plt>
  4083ac:	str	w0, [sp, #40]
  4083b0:	b	4083c8 <mount_one+0x3dc>
  4083b4:	ldur	w0, [x29, #-68]
  4083b8:	bl	4022a8 <abs@plt>
  4083bc:	mov	w8, wzr
  4083c0:	subs	w8, w8, w0, uxtb
  4083c4:	str	w8, [sp, #40]
  4083c8:	ldr	w8, [sp, #40]
  4083cc:	stur	w8, [x29, #-76]
  4083d0:	ldur	x9, [x29, #-16]
  4083d4:	ldr	w8, [x9, #48]
  4083d8:	and	w8, w8, #0x1
  4083dc:	cbz	w8, 4083f8 <mount_one+0x40c>
  4083e0:	bl	402448 <__errno_location@plt>
  4083e4:	ldr	w8, [x0]
  4083e8:	mov	w9, wzr
  4083ec:	subs	w8, w9, w8
  4083f0:	str	w8, [sp, #36]
  4083f4:	b	408400 <mount_one+0x414>
  4083f8:	mov	w8, wzr
  4083fc:	str	w8, [sp, #36]
  408400:	ldr	w8, [sp, #36]
  408404:	stur	w8, [x29, #-4]
  408408:	b	408544 <mount_one+0x558>
  40840c:	ldurb	w8, [x29, #-17]
  408410:	tbnz	w8, #0, 408418 <mount_one+0x42c>
  408414:	b	40842c <mount_one+0x440>
  408418:	ldur	x8, [x29, #-16]
  40841c:	ldr	x0, [x8, #8]
  408420:	mov	w9, wzr
  408424:	mov	w1, w9
  408428:	bl	4026f8 <label_fix@plt>
  40842c:	ldur	x8, [x29, #-16]
  408430:	ldr	w9, [x8, #48]
  408434:	and	w9, w9, #0x4
  408438:	cbz	w9, 40853c <mount_one+0x550>
  40843c:	ldur	x8, [x29, #-16]
  408440:	ldr	x0, [x8, #8]
  408444:	mov	w1, #0x2                   	// #2
  408448:	bl	402628 <access@plt>
  40844c:	cmp	w0, #0x0
  408450:	cset	w9, ge  // ge = tcont
  408454:	tbnz	w9, #0, 40853c <mount_one+0x550>
  408458:	bl	402448 <__errno_location@plt>
  40845c:	ldr	w8, [x0]
  408460:	mov	w9, wzr
  408464:	subs	w8, w9, w8
  408468:	stur	w8, [x29, #-24]
  40846c:	ldur	x10, [x29, #-16]
  408470:	ldr	x0, [x10, #8]
  408474:	bl	402738 <umount@plt>
  408478:	ldur	x10, [x29, #-16]
  40847c:	ldr	x10, [x10, #8]
  408480:	mov	x0, x10
  408484:	bl	402748 <rmdir@plt>
  408488:	ldur	w8, [x29, #-28]
  40848c:	stur	w8, [x29, #-80]
  408490:	ldur	w8, [x29, #-24]
  408494:	stur	w8, [x29, #-84]
  408498:	stur	wzr, [x29, #-88]
  40849c:	ldur	w8, [x29, #-88]
  4084a0:	mov	w0, w8
  4084a4:	bl	402288 <log_get_max_level_realm@plt>
  4084a8:	ldur	w8, [x29, #-80]
  4084ac:	and	w8, w8, #0x7
  4084b0:	cmp	w0, w8
  4084b4:	b.lt	4084f0 <mount_one+0x504>  // b.tstop
  4084b8:	ldur	w8, [x29, #-88]
  4084bc:	ldur	w9, [x29, #-80]
  4084c0:	orr	w0, w9, w8, lsl #10
  4084c4:	ldur	w1, [x29, #-84]
  4084c8:	ldur	x10, [x29, #-16]
  4084cc:	ldr	x6, [x10, #8]
  4084d0:	ldr	x2, [sp, #104]
  4084d4:	mov	w3, #0xcc                  	// #204
  4084d8:	ldr	x4, [sp, #96]
  4084dc:	adrp	x5, 40a000 <_fini+0x894>
  4084e0:	add	x5, x5, #0x8ec
  4084e4:	bl	402298 <log_internal_realm@plt>
  4084e8:	str	w0, [sp, #32]
  4084ec:	b	408504 <mount_one+0x518>
  4084f0:	ldur	w0, [x29, #-84]
  4084f4:	bl	4022a8 <abs@plt>
  4084f8:	mov	w8, wzr
  4084fc:	subs	w8, w8, w0, uxtb
  408500:	str	w8, [sp, #32]
  408504:	ldr	w8, [sp, #32]
  408508:	stur	w8, [x29, #-92]
  40850c:	ldur	x9, [x29, #-16]
  408510:	ldr	w8, [x9, #48]
  408514:	and	w8, w8, #0x1
  408518:	cbz	w8, 408528 <mount_one+0x53c>
  40851c:	ldur	w8, [x29, #-24]
  408520:	str	w8, [sp, #28]
  408524:	b	408530 <mount_one+0x544>
  408528:	mov	w8, wzr
  40852c:	str	w8, [sp, #28]
  408530:	ldr	w8, [sp, #28]
  408534:	stur	w8, [x29, #-4]
  408538:	b	408544 <mount_one+0x558>
  40853c:	mov	w8, #0x1                   	// #1
  408540:	stur	w8, [x29, #-4]
  408544:	ldur	w0, [x29, #-4]
  408548:	ldp	x29, x30, [sp, #208]
  40854c:	add	sp, sp, #0xe0
  408550:	ret

0000000000408554 <symlink_controller>:
  408554:	stp	x29, x30, [sp, #-16]!
  408558:	mov	x29, sp
  40855c:	sub	sp, sp, #0xa0
  408560:	adrp	x8, 40a000 <_fini+0x894>
  408564:	add	x8, x8, #0x529
  408568:	add	x8, x8, #0x3
  40856c:	adrp	x9, 40a000 <_fini+0x894>
  408570:	add	x9, x9, #0x922
  408574:	stur	x0, [x29, #-16]
  408578:	stur	x1, [x29, #-24]
  40857c:	stur	x8, [x29, #-136]
  408580:	stur	x9, [x29, #-144]
  408584:	ldur	x8, [x29, #-16]
  408588:	cmp	x8, #0x0
  40858c:	cset	w9, ne  // ne = any
  408590:	mov	w10, #0x1                   	// #1
  408594:	eor	w9, w9, #0x1
  408598:	eor	w9, w9, w10
  40859c:	eor	w9, w9, w10
  4085a0:	and	w9, w9, #0x1
  4085a4:	mov	w0, w9
  4085a8:	sxtw	x8, w0
  4085ac:	cbz	x8, 4085d0 <symlink_controller+0x7c>
  4085b0:	mov	w8, wzr
  4085b4:	mov	w0, w8
  4085b8:	adrp	x1, 40a000 <_fini+0x894>
  4085bc:	add	x1, x1, #0x91b
  4085c0:	ldur	x2, [x29, #-136]
  4085c4:	mov	w3, #0x109                 	// #265
  4085c8:	ldur	x4, [x29, #-144]
  4085cc:	bl	4022f8 <log_assert_failed_realm@plt>
  4085d0:	ldur	x8, [x29, #-24]
  4085d4:	cmp	x8, #0x0
  4085d8:	cset	w9, ne  // ne = any
  4085dc:	mov	w10, #0x1                   	// #1
  4085e0:	eor	w9, w9, #0x1
  4085e4:	eor	w9, w9, w10
  4085e8:	eor	w9, w9, w10
  4085ec:	and	w9, w9, #0x1
  4085f0:	mov	w0, w9
  4085f4:	sxtw	x8, w0
  4085f8:	cbz	x8, 40861c <symlink_controller+0xc8>
  4085fc:	mov	w8, wzr
  408600:	mov	w0, w8
  408604:	adrp	x1, 40a000 <_fini+0x894>
  408608:	add	x1, x1, #0x955
  40860c:	ldur	x2, [x29, #-136]
  408610:	mov	w3, #0x10a                 	// #266
  408614:	ldur	x4, [x29, #-144]
  408618:	bl	4022f8 <log_assert_failed_realm@plt>
  40861c:	sub	x8, x29, #0x38
  408620:	adrp	x9, 40a000 <_fini+0x894>
  408624:	add	x9, x9, #0x519
  408628:	stur	x9, [x29, #-56]
  40862c:	ldur	x9, [x29, #-24]
  408630:	str	x9, [x8, #8]
  408634:	stur	xzr, [x29, #-80]
  408638:	stur	xzr, [x29, #-88]
  40863c:	ldur	x8, [x29, #-88]
  408640:	mov	w9, #0x0                   	// #0
  408644:	cmp	x8, #0x2
  408648:	stur	w9, [x29, #-148]
  40864c:	b.cs	408674 <symlink_controller+0x120>  // b.hs, b.nlast
  408650:	ldur	x8, [x29, #-88]
  408654:	mov	x9, #0x8                   	// #8
  408658:	mul	x8, x9, x8
  40865c:	sub	x9, x29, #0x38
  408660:	add	x8, x9, x8
  408664:	ldr	x8, [x8]
  408668:	cmp	x8, #0x0
  40866c:	cset	w10, ne  // ne = any
  408670:	stur	w10, [x29, #-148]
  408674:	ldur	w8, [x29, #-148]
  408678:	tbnz	w8, #0, 408680 <symlink_controller+0x12c>
  40867c:	b	4086b8 <symlink_controller+0x164>
  408680:	ldur	x8, [x29, #-88]
  408684:	mov	x9, #0x8                   	// #8
  408688:	mul	x8, x9, x8
  40868c:	sub	x9, x29, #0x38
  408690:	add	x8, x9, x8
  408694:	ldr	x0, [x8]
  408698:	bl	4023e8 <strlen@plt>
  40869c:	ldur	x8, [x29, #-80]
  4086a0:	add	x8, x8, x0
  4086a4:	stur	x8, [x29, #-80]
  4086a8:	ldur	x8, [x29, #-88]
  4086ac:	add	x8, x8, #0x1
  4086b0:	stur	x8, [x29, #-88]
  4086b4:	b	40863c <symlink_controller+0xe8>
  4086b8:	ldur	x8, [x29, #-80]
  4086bc:	add	x8, x8, #0x1
  4086c0:	stur	x8, [x29, #-96]
  4086c4:	ldur	x1, [x29, #-96]
  4086c8:	mov	x0, #0x1                   	// #1
  4086cc:	bl	4095e4 <size_multiply_overflow>
  4086d0:	mov	w8, #0x1                   	// #1
  4086d4:	eor	w9, w0, #0x1
  4086d8:	eor	w9, w9, w8
  4086dc:	eor	w9, w9, w8
  4086e0:	eor	w8, w9, w8
  4086e4:	and	w8, w8, #0x1
  4086e8:	mov	w1, w8
  4086ec:	sxtw	x10, w1
  4086f0:	cbz	x10, 408714 <symlink_controller+0x1c0>
  4086f4:	mov	w8, wzr
  4086f8:	mov	w0, w8
  4086fc:	adrp	x1, 409000 <relabel_extra+0xfc>
  408700:	add	x1, x1, #0xaf1
  408704:	ldur	x2, [x29, #-136]
  408708:	mov	w3, #0x10c                 	// #268
  40870c:	ldur	x4, [x29, #-144]
  408710:	bl	4022f8 <log_assert_failed_realm@plt>
  408714:	ldur	x8, [x29, #-96]
  408718:	mov	x9, #0x1                   	// #1
  40871c:	mul	x8, x9, x8
  408720:	cmp	x8, #0x400, lsl #12
  408724:	cset	w10, ls  // ls = plast
  408728:	mov	w11, #0x1                   	// #1
  40872c:	eor	w10, w10, #0x1
  408730:	eor	w10, w10, w11
  408734:	eor	w10, w10, w11
  408738:	and	w10, w10, #0x1
  40873c:	mov	w0, w10
  408740:	sxtw	x8, w0
  408744:	cbz	x8, 408768 <symlink_controller+0x214>
  408748:	mov	w8, wzr
  40874c:	mov	w0, w8
  408750:	adrp	x1, 409000 <relabel_extra+0xfc>
  408754:	add	x1, x1, #0xb38
  408758:	ldur	x2, [x29, #-136]
  40875c:	mov	w3, #0x10c                 	// #268
  408760:	ldur	x4, [x29, #-144]
  408764:	bl	4022f8 <log_assert_failed_realm@plt>
  408768:	ldur	x8, [x29, #-96]
  40876c:	mov	x9, #0x1                   	// #1
  408770:	mul	x8, x9, x8
  408774:	mul	x8, x8, x9
  408778:	add	x8, x8, #0xf
  40877c:	and	x8, x8, #0xfffffffffffffff0
  408780:	mov	x9, sp
  408784:	subs	x8, x9, x8
  408788:	mov	sp, x8
  40878c:	stur	x8, [x29, #-104]
  408790:	ldur	x8, [x29, #-104]
  408794:	stur	x8, [x29, #-64]
  408798:	stur	x8, [x29, #-72]
  40879c:	stur	xzr, [x29, #-88]
  4087a0:	ldur	x8, [x29, #-88]
  4087a4:	mov	w9, #0x0                   	// #0
  4087a8:	cmp	x8, #0x2
  4087ac:	stur	w9, [x29, #-152]
  4087b0:	b.cs	4087d8 <symlink_controller+0x284>  // b.hs, b.nlast
  4087b4:	ldur	x8, [x29, #-88]
  4087b8:	mov	x9, #0x8                   	// #8
  4087bc:	mul	x8, x9, x8
  4087c0:	sub	x9, x29, #0x38
  4087c4:	add	x8, x9, x8
  4087c8:	ldr	x8, [x8]
  4087cc:	cmp	x8, #0x0
  4087d0:	cset	w10, ne  // ne = any
  4087d4:	stur	w10, [x29, #-152]
  4087d8:	ldur	w8, [x29, #-152]
  4087dc:	tbnz	w8, #0, 4087e4 <symlink_controller+0x290>
  4087e0:	b	408818 <symlink_controller+0x2c4>
  4087e4:	ldur	x0, [x29, #-72]
  4087e8:	ldur	x8, [x29, #-88]
  4087ec:	mov	x9, #0x8                   	// #8
  4087f0:	mul	x8, x9, x8
  4087f4:	sub	x9, x29, #0x38
  4087f8:	add	x8, x9, x8
  4087fc:	ldr	x1, [x8]
  408800:	bl	4023f8 <stpcpy@plt>
  408804:	stur	x0, [x29, #-72]
  408808:	ldur	x8, [x29, #-88]
  40880c:	add	x8, x8, #0x1
  408810:	stur	x8, [x29, #-88]
  408814:	b	4087a0 <symlink_controller+0x24c>
  408818:	ldur	x8, [x29, #-72]
  40881c:	mov	w9, #0x0                   	// #0
  408820:	strb	w9, [x8]
  408824:	ldur	x8, [x29, #-64]
  408828:	stur	x8, [x29, #-112]
  40882c:	ldur	x8, [x29, #-112]
  408830:	stur	x8, [x29, #-32]
  408834:	ldur	x0, [x29, #-16]
  408838:	ldur	x1, [x29, #-32]
  40883c:	mov	w9, wzr
  408840:	and	w2, w9, #0x1
  408844:	bl	402758 <symlink_idempotent@plt>
  408848:	stur	w0, [x29, #-36]
  40884c:	ldur	w9, [x29, #-36]
  408850:	cmp	w9, #0x0
  408854:	cset	w9, ge  // ge = tcont
  408858:	tbnz	w9, #0, 4088e8 <symlink_controller+0x394>
  40885c:	mov	w8, #0x3                   	// #3
  408860:	stur	w8, [x29, #-116]
  408864:	ldur	w8, [x29, #-36]
  408868:	stur	w8, [x29, #-120]
  40886c:	stur	wzr, [x29, #-124]
  408870:	ldur	w0, [x29, #-124]
  408874:	bl	402288 <log_get_max_level_realm@plt>
  408878:	ldur	w8, [x29, #-116]
  40887c:	and	w8, w8, #0x7
  408880:	cmp	w0, w8
  408884:	b.lt	4088c0 <symlink_controller+0x36c>  // b.tstop
  408888:	ldur	w8, [x29, #-124]
  40888c:	ldur	w9, [x29, #-116]
  408890:	orr	w0, w9, w8, lsl #10
  408894:	ldur	w1, [x29, #-120]
  408898:	ldur	x6, [x29, #-32]
  40889c:	ldur	x2, [x29, #-136]
  4088a0:	mov	w3, #0x110                 	// #272
  4088a4:	adrp	x4, 40a000 <_fini+0x894>
  4088a8:	add	x4, x4, #0x95b
  4088ac:	adrp	x5, 40a000 <_fini+0x894>
  4088b0:	add	x5, x5, #0x96e
  4088b4:	bl	402298 <log_internal_realm@plt>
  4088b8:	stur	w0, [x29, #-156]
  4088bc:	b	4088d4 <symlink_controller+0x380>
  4088c0:	ldur	w0, [x29, #-120]
  4088c4:	bl	4022a8 <abs@plt>
  4088c8:	mov	w8, wzr
  4088cc:	subs	w8, w8, w0, uxtb
  4088d0:	stur	w8, [x29, #-156]
  4088d4:	ldur	w8, [x29, #-156]
  4088d8:	stur	w8, [x29, #-128]
  4088dc:	ldur	w8, [x29, #-128]
  4088e0:	stur	w8, [x29, #-4]
  4088e4:	b	4088ec <symlink_controller+0x398>
  4088e8:	stur	wzr, [x29, #-4]
  4088ec:	ldur	w0, [x29, #-4]
  4088f0:	mov	sp, x29
  4088f4:	ldp	x29, x30, [sp], #16
  4088f8:	ret

00000000004088fc <mount_setup>:
  4088fc:	sub	sp, sp, #0x100
  408900:	stp	x29, x30, [sp, #240]
  408904:	add	x29, sp, #0xf0
  408908:	mov	w8, #0x14                  	// #20
  40890c:	mov	w9, #0x1                   	// #1
  408910:	adrp	x10, 40a000 <_fini+0x894>
  408914:	add	x10, x10, #0x529
  408918:	add	x10, x10, #0x3
  40891c:	and	w9, w0, w9
  408920:	sturb	w9, [x29, #-5]
  408924:	stur	wzr, [x29, #-12]
  408928:	ldurb	w9, [x29, #-5]
  40892c:	mov	w0, w8
  408930:	and	w1, w9, #0x1
  408934:	str	x10, [sp, #40]
  408938:	bl	40798c <mount_points_setup>
  40893c:	stur	w0, [x29, #-12]
  408940:	ldur	w8, [x29, #-12]
  408944:	cmp	w8, #0x0
  408948:	cset	w8, ge  // ge = tcont
  40894c:	tbnz	w8, #0, 40895c <mount_setup+0x60>
  408950:	ldur	w8, [x29, #-12]
  408954:	stur	w8, [x29, #-4]
  408958:	b	408c04 <mount_setup+0x308>
  40895c:	ldurb	w8, [x29, #-5]
  408960:	tbnz	w8, #0, 408968 <mount_setup+0x6c>
  408964:	b	408ae4 <mount_setup+0x1e8>
  408968:	mov	w0, #0x1                   	// #1
  40896c:	bl	402768 <now@plt>
  408970:	stur	x0, [x29, #-24]
  408974:	adrp	x8, 40a000 <_fini+0x894>
  408978:	add	x8, x8, #0x5a6
  40897c:	stur	x8, [x29, #-104]
  408980:	str	x8, [sp, #80]
  408984:	ldr	x8, [sp, #80]
  408988:	add	x9, sp, #0x58
  40898c:	str	x8, [sp, #88]
  408990:	adrp	x8, 40a000 <_fini+0x894>
  408994:	add	x8, x8, #0x5ab
  408998:	str	x8, [x9, #8]
  40899c:	adrp	x8, 40a000 <_fini+0x894>
  4089a0:	add	x8, x8, #0x5b4
  4089a4:	str	x8, [x9, #16]
  4089a8:	mov	x8, xzr
  4089ac:	str	x8, [x9, #24]
  4089b0:	str	x9, [sp, #120]
  4089b4:	ldur	x8, [x29, #-104]
  4089b8:	cbz	x8, 4089ec <mount_setup+0xf0>
  4089bc:	ldur	x0, [x29, #-104]
  4089c0:	adrp	x1, 408000 <mount_one+0x14>
  4089c4:	add	x1, x1, #0xc14
  4089c8:	mov	w2, #0x40                  	// #64
  4089cc:	mov	w3, #0x13                  	// #19
  4089d0:	bl	402778 <nftw64@plt>
  4089d4:	ldr	x8, [sp, #120]
  4089d8:	add	x9, x8, #0x8
  4089dc:	str	x9, [sp, #120]
  4089e0:	ldr	x8, [x8, #8]
  4089e4:	stur	x8, [x29, #-104]
  4089e8:	b	4089b4 <mount_setup+0xb8>
  4089ec:	bl	408cfc <relabel_cgroup_filesystems>
  4089f0:	bl	408f04 <relabel_extra>
  4089f4:	stur	w0, [x29, #-108]
  4089f8:	mov	w0, #0x1                   	// #1
  4089fc:	bl	402768 <now@plt>
  408a00:	stur	x0, [x29, #-32]
  408a04:	mov	w8, #0x6                   	// #6
  408a08:	str	w8, [sp, #76]
  408a0c:	str	wzr, [sp, #72]
  408a10:	str	wzr, [sp, #68]
  408a14:	ldr	w0, [sp, #68]
  408a18:	bl	402288 <log_get_max_level_realm@plt>
  408a1c:	ldr	w8, [sp, #76]
  408a20:	and	w8, w8, #0x7
  408a24:	cmp	w0, w8
  408a28:	b.lt	408ac8 <mount_setup+0x1cc>  // b.tstop
  408a2c:	ldr	w8, [sp, #68]
  408a30:	ldr	w9, [sp, #76]
  408a34:	orr	w0, w9, w8, lsl #10
  408a38:	ldr	w1, [sp, #72]
  408a3c:	ldur	w8, [x29, #-108]
  408a40:	adrp	x10, 40a000 <_fini+0x894>
  408a44:	add	x10, x10, #0x611
  408a48:	adrp	x11, 40a000 <_fini+0x894>
  408a4c:	add	x11, x11, #0x5fe
  408a50:	cmp	w8, #0x0
  408a54:	csel	x6, x11, x10, gt
  408a58:	ldur	x10, [x29, #-32]
  408a5c:	ldur	x11, [x29, #-24]
  408a60:	subs	x2, x10, x11
  408a64:	sub	x10, x29, #0x60
  408a68:	str	w0, [sp, #36]
  408a6c:	mov	x0, x10
  408a70:	mov	x10, #0x40                  	// #64
  408a74:	str	w1, [sp, #32]
  408a78:	mov	x1, x10
  408a7c:	mov	x10, xzr
  408a80:	mov	x3, x10
  408a84:	str	x6, [sp, #24]
  408a88:	bl	402608 <format_timespan@plt>
  408a8c:	ldr	w8, [sp, #36]
  408a90:	str	x0, [sp, #16]
  408a94:	mov	w0, w8
  408a98:	ldr	w1, [sp, #32]
  408a9c:	ldr	x2, [sp, #40]
  408aa0:	mov	w3, #0x200                 	// #512
  408aa4:	adrp	x4, 40a000 <_fini+0x894>
  408aa8:	add	x4, x4, #0x5b9
  408aac:	adrp	x5, 40a000 <_fini+0x894>
  408ab0:	add	x5, x5, #0x5c5
  408ab4:	ldr	x6, [sp, #24]
  408ab8:	ldr	x7, [sp, #16]
  408abc:	bl	402298 <log_internal_realm@plt>
  408ac0:	str	w0, [sp, #12]
  408ac4:	b	408adc <mount_setup+0x1e0>
  408ac8:	ldr	w0, [sp, #72]
  408acc:	bl	4022a8 <abs@plt>
  408ad0:	mov	w8, wzr
  408ad4:	subs	w8, w8, w0, uxtb
  408ad8:	str	w8, [sp, #12]
  408adc:	ldr	w8, [sp, #12]
  408ae0:	str	w8, [sp, #64]
  408ae4:	mov	x8, xzr
  408ae8:	mov	x0, x8
  408aec:	mov	w9, #0xffffffff            	// #-1
  408af0:	mov	w1, w9
  408af4:	mov	w2, w9
  408af8:	bl	402788 <dev_setup@plt>
  408afc:	bl	402638 <detect_container@plt>
  408b00:	cmp	w0, #0x0
  408b04:	cset	w9, gt
  408b08:	tbnz	w9, #0, 408bbc <mount_setup+0x2c0>
  408b0c:	mov	x8, xzr
  408b10:	mov	x0, x8
  408b14:	adrp	x1, 409000 <relabel_extra+0xfc>
  408b18:	add	x1, x1, #0xca2
  408b1c:	mov	x2, x8
  408b20:	mov	x3, #0x4000                	// #16384
  408b24:	movk	x3, #0x10, lsl #16
  408b28:	mov	x4, x8
  408b2c:	bl	4026c8 <mount@plt>
  408b30:	cmp	w0, #0x0
  408b34:	cset	w9, ge  // ge = tcont
  408b38:	tbnz	w9, #0, 408bbc <mount_setup+0x2c0>
  408b3c:	mov	w8, #0x4                   	// #4
  408b40:	str	w8, [sp, #60]
  408b44:	bl	402448 <__errno_location@plt>
  408b48:	ldr	w8, [x0]
  408b4c:	str	w8, [sp, #56]
  408b50:	str	wzr, [sp, #52]
  408b54:	ldr	w0, [sp, #52]
  408b58:	bl	402288 <log_get_max_level_realm@plt>
  408b5c:	ldr	w8, [sp, #60]
  408b60:	and	w8, w8, #0x7
  408b64:	cmp	w0, w8
  408b68:	b.lt	408ba0 <mount_setup+0x2a4>  // b.tstop
  408b6c:	ldr	w8, [sp, #52]
  408b70:	ldr	w9, [sp, #60]
  408b74:	orr	w0, w9, w8, lsl #10
  408b78:	ldr	w1, [sp, #56]
  408b7c:	ldr	x2, [sp, #40]
  408b80:	mov	w3, #0x211                 	// #529
  408b84:	adrp	x4, 40a000 <_fini+0x894>
  408b88:	add	x4, x4, #0x5b9
  408b8c:	adrp	x5, 40a000 <_fini+0x894>
  408b90:	add	x5, x5, #0x612
  408b94:	bl	402298 <log_internal_realm@plt>
  408b98:	str	w0, [sp, #8]
  408b9c:	b	408bb4 <mount_setup+0x2b8>
  408ba0:	ldr	w0, [sp, #56]
  408ba4:	bl	4022a8 <abs@plt>
  408ba8:	mov	w8, wzr
  408bac:	subs	w8, w8, w0, uxtb
  408bb0:	str	w8, [sp, #8]
  408bb4:	ldr	w8, [sp, #8]
  408bb8:	str	w8, [sp, #48]
  408bbc:	adrp	x0, 40a000 <_fini+0x894>
  408bc0:	add	x0, x0, #0x657
  408bc4:	mov	w8, #0x1ed                 	// #493
  408bc8:	mov	w1, w8
  408bcc:	str	w8, [sp, #4]
  408bd0:	bl	402798 <mkdir_label@plt>
  408bd4:	adrp	x9, 40a000 <_fini+0x894>
  408bd8:	add	x9, x9, #0x664
  408bdc:	mov	x0, x9
  408be0:	ldr	w1, [sp, #4]
  408be4:	bl	402798 <mkdir_label@plt>
  408be8:	mov	x9, xzr
  408bec:	mov	x0, x9
  408bf0:	mov	w8, #0xffffffff            	// #-1
  408bf4:	mov	w1, w8
  408bf8:	mov	w2, w8
  408bfc:	bl	4027a8 <make_inaccessible_nodes@plt>
  408c00:	stur	wzr, [x29, #-4]
  408c04:	ldur	w0, [x29, #-4]
  408c08:	ldp	x29, x30, [sp, #240]
  408c0c:	add	sp, sp, #0x100
  408c10:	ret

0000000000408c14 <nftw_cb>:
  408c14:	sub	sp, sp, #0x40
  408c18:	stp	x29, x30, [sp, #48]
  408c1c:	add	x29, sp, #0x30
  408c20:	mov	w8, #0x1                   	// #1
  408c24:	stur	x0, [x29, #-16]
  408c28:	str	x1, [sp, #24]
  408c2c:	str	w2, [sp, #20]
  408c30:	str	x3, [sp, #8]
  408c34:	ldr	x9, [sp, #8]
  408c38:	ldr	w10, [x9, #4]
  408c3c:	cmp	w10, #0x0
  408c40:	cset	w10, eq  // eq = none
  408c44:	eor	w10, w10, w8
  408c48:	eor	w8, w10, w8
  408c4c:	and	w8, w8, #0x1
  408c50:	mov	w0, w8
  408c54:	sxtw	x9, w0
  408c58:	cbz	x9, 408c64 <nftw_cb+0x50>
  408c5c:	stur	wzr, [x29, #-4]
  408c60:	b	408cec <nftw_cb+0xd8>
  408c64:	ldur	x0, [x29, #-16]
  408c68:	mov	w8, wzr
  408c6c:	mov	w1, w8
  408c70:	bl	4026f8 <label_fix@plt>
  408c74:	ldr	x9, [sp, #8]
  408c78:	ldr	w8, [x9, #4]
  408c7c:	mov	w10, #0x0                   	// #0
  408c80:	cmp	w8, #0x1
  408c84:	str	w10, [sp, #4]
  408c88:	b.ne	408cbc <nftw_cb+0xa8>  // b.any
  408c8c:	ldr	w8, [sp, #20]
  408c90:	mov	w9, #0x0                   	// #0
  408c94:	cmp	w8, #0x1
  408c98:	str	w9, [sp, #4]
  408c9c:	b.ne	408cbc <nftw_cb+0xa8>  // b.any
  408ca0:	ldur	x0, [x29, #-16]
  408ca4:	adrp	x1, 40a000 <_fini+0x894>
  408ca8:	add	x1, x1, #0x98e
  408cac:	bl	402368 <strcmp@plt>
  408cb0:	cmp	w0, #0x0
  408cb4:	cset	w8, eq  // eq = none
  408cb8:	str	w8, [sp, #4]
  408cbc:	ldr	w8, [sp, #4]
  408cc0:	mov	w9, #0x1                   	// #1
  408cc4:	eor	w8, w8, #0x1
  408cc8:	eor	w8, w8, w9
  408ccc:	and	w8, w8, #0x1
  408cd0:	mov	w0, w8
  408cd4:	sxtw	x10, w0
  408cd8:	cbz	x10, 408ce8 <nftw_cb+0xd4>
  408cdc:	mov	w8, #0x2                   	// #2
  408ce0:	stur	w8, [x29, #-4]
  408ce4:	b	408cec <nftw_cb+0xd8>
  408ce8:	stur	wzr, [x29, #-4]
  408cec:	ldur	w0, [x29, #-4]
  408cf0:	ldp	x29, x30, [sp, #48]
  408cf4:	add	sp, sp, #0x40
  408cf8:	ret

0000000000408cfc <relabel_cgroup_filesystems>:
  408cfc:	sub	sp, sp, #0xd0
  408d00:	stp	x29, x30, [sp, #192]
  408d04:	add	x29, sp, #0xc0
  408d08:	adrp	x8, 40a000 <_fini+0x894>
  408d0c:	add	x8, x8, #0x529
  408d10:	add	x8, x8, #0x3
  408d14:	adrp	x9, 40a000 <_fini+0x894>
  408d18:	add	x9, x9, #0x58e
  408d1c:	str	x8, [sp, #24]
  408d20:	str	x9, [sp, #16]
  408d24:	bl	4027b8 <cg_all_unified@plt>
  408d28:	stur	w0, [x29, #-8]
  408d2c:	ldur	w10, [x29, #-8]
  408d30:	cbnz	w10, 408e58 <relabel_cgroup_filesystems+0x15c>
  408d34:	ldr	x0, [sp, #16]
  408d38:	add	x1, sp, #0x40
  408d3c:	bl	4027c8 <statfs64@plt>
  408d40:	cmp	w0, #0x0
  408d44:	cset	w8, ge  // ge = tcont
  408d48:	tbnz	w8, #0, 408dd8 <relabel_cgroup_filesystems+0xdc>
  408d4c:	mov	w8, #0x3                   	// #3
  408d50:	str	w8, [sp, #60]
  408d54:	bl	402448 <__errno_location@plt>
  408d58:	ldr	w8, [x0]
  408d5c:	str	w8, [sp, #56]
  408d60:	str	wzr, [sp, #52]
  408d64:	ldr	w0, [sp, #52]
  408d68:	bl	402288 <log_get_max_level_realm@plt>
  408d6c:	ldr	w8, [sp, #60]
  408d70:	and	w8, w8, #0x7
  408d74:	cmp	w0, w8
  408d78:	b.lt	408db0 <relabel_cgroup_filesystems+0xb4>  // b.tstop
  408d7c:	ldr	w8, [sp, #52]
  408d80:	ldr	w9, [sp, #60]
  408d84:	orr	w0, w9, w8, lsl #10
  408d88:	ldr	w1, [sp, #56]
  408d8c:	ldr	x2, [sp, #24]
  408d90:	mov	w3, #0x18a                 	// #394
  408d94:	adrp	x4, 40a000 <_fini+0x894>
  408d98:	add	x4, x4, #0x99d
  408d9c:	adrp	x5, 40a000 <_fini+0x894>
  408da0:	add	x5, x5, #0x9b8
  408da4:	bl	402298 <log_internal_realm@plt>
  408da8:	str	w0, [sp, #12]
  408dac:	b	408dc4 <relabel_cgroup_filesystems+0xc8>
  408db0:	ldr	w0, [sp, #56]
  408db4:	bl	4022a8 <abs@plt>
  408db8:	mov	w8, wzr
  408dbc:	subs	w8, w8, w0, uxtb
  408dc0:	str	w8, [sp, #12]
  408dc4:	ldr	w8, [sp, #12]
  408dc8:	str	w8, [sp, #48]
  408dcc:	ldr	w8, [sp, #48]
  408dd0:	stur	w8, [x29, #-4]
  408dd4:	b	408ef4 <relabel_cgroup_filesystems+0x1f8>
  408dd8:	ldr	x8, [sp, #144]
  408ddc:	and	x8, x8, #0x1
  408de0:	cbz	x8, 408e00 <relabel_cgroup_filesystems+0x104>
  408de4:	mov	x8, xzr
  408de8:	mov	x0, x8
  408dec:	ldr	x1, [sp, #16]
  408df0:	mov	x2, x8
  408df4:	mov	x3, #0x20                  	// #32
  408df8:	mov	x4, x8
  408dfc:	bl	4026c8 <mount@plt>
  408e00:	ldr	x0, [sp, #16]
  408e04:	mov	w8, wzr
  408e08:	mov	w1, w8
  408e0c:	bl	4026f8 <label_fix@plt>
  408e10:	ldr	x9, [sp, #16]
  408e14:	mov	x0, x9
  408e18:	adrp	x1, 408000 <mount_one+0x14>
  408e1c:	add	x1, x1, #0xc14
  408e20:	mov	w2, #0x40                  	// #64
  408e24:	mov	w3, #0x13                  	// #19
  408e28:	bl	402778 <nftw64@plt>
  408e2c:	ldr	x9, [sp, #144]
  408e30:	and	x9, x9, #0x1
  408e34:	cbz	x9, 408e54 <relabel_cgroup_filesystems+0x158>
  408e38:	mov	x8, xzr
  408e3c:	mov	x0, x8
  408e40:	ldr	x1, [sp, #16]
  408e44:	mov	x2, x8
  408e48:	mov	x3, #0x21                  	// #33
  408e4c:	mov	x4, x8
  408e50:	bl	4026c8 <mount@plt>
  408e54:	b	408ef0 <relabel_cgroup_filesystems+0x1f4>
  408e58:	ldur	w8, [x29, #-8]
  408e5c:	cmp	w8, #0x0
  408e60:	cset	w8, ge  // ge = tcont
  408e64:	tbnz	w8, #0, 408ef0 <relabel_cgroup_filesystems+0x1f4>
  408e68:	mov	w8, #0x3                   	// #3
  408e6c:	str	w8, [sp, #44]
  408e70:	ldur	w8, [x29, #-8]
  408e74:	str	w8, [sp, #40]
  408e78:	str	wzr, [sp, #36]
  408e7c:	ldr	w0, [sp, #36]
  408e80:	bl	402288 <log_get_max_level_realm@plt>
  408e84:	ldr	w8, [sp, #44]
  408e88:	and	w8, w8, #0x7
  408e8c:	cmp	w0, w8
  408e90:	b.lt	408ec8 <relabel_cgroup_filesystems+0x1cc>  // b.tstop
  408e94:	ldr	w8, [sp, #36]
  408e98:	ldr	w9, [sp, #44]
  408e9c:	orr	w0, w9, w8, lsl #10
  408ea0:	ldr	w1, [sp, #40]
  408ea4:	ldr	x2, [sp, #24]
  408ea8:	mov	w3, #0x196                 	// #406
  408eac:	adrp	x4, 40a000 <_fini+0x894>
  408eb0:	add	x4, x4, #0x99d
  408eb4:	adrp	x5, 40a000 <_fini+0x894>
  408eb8:	add	x5, x5, #0x9ef
  408ebc:	bl	402298 <log_internal_realm@plt>
  408ec0:	str	w0, [sp, #8]
  408ec4:	b	408edc <relabel_cgroup_filesystems+0x1e0>
  408ec8:	ldr	w0, [sp, #40]
  408ecc:	bl	4022a8 <abs@plt>
  408ed0:	mov	w8, wzr
  408ed4:	subs	w8, w8, w0, uxtb
  408ed8:	str	w8, [sp, #8]
  408edc:	ldr	w8, [sp, #8]
  408ee0:	str	w8, [sp, #32]
  408ee4:	ldr	w8, [sp, #32]
  408ee8:	stur	w8, [x29, #-4]
  408eec:	b	408ef4 <relabel_cgroup_filesystems+0x1f8>
  408ef0:	stur	wzr, [x29, #-4]
  408ef4:	ldur	w0, [x29, #-4]
  408ef8:	ldp	x29, x30, [sp, #192]
  408efc:	add	sp, sp, #0xd0
  408f00:	ret

0000000000408f04 <relabel_extra>:
  408f04:	sub	sp, sp, #0x120
  408f08:	stp	x29, x30, [sp, #256]
  408f0c:	str	x28, [sp, #272]
  408f10:	add	x29, sp, #0x100
  408f14:	mov	x8, xzr
  408f18:	adrp	x1, 40a000 <_fini+0x894>
  408f1c:	add	x1, x1, #0xa2a
  408f20:	mov	x0, x8
  408f24:	mov	w3, #0x12                  	// #18
  408f28:	adrp	x4, 40a000 <_fini+0x894>
  408f2c:	add	x4, x4, #0xa33
  408f30:	adrp	x9, 40a000 <_fini+0x894>
  408f34:	add	x9, x9, #0x529
  408f38:	add	x9, x9, #0x3
  408f3c:	adrp	x10, 40a000 <_fini+0x894>
  408f40:	add	x10, x10, #0xa51
  408f44:	sub	x11, x29, #0x10
  408f48:	stur	x8, [x29, #-16]
  408f4c:	stur	wzr, [x29, #-32]
  408f50:	str	x0, [sp, #64]
  408f54:	mov	x0, x11
  408f58:	ldr	x2, [sp, #64]
  408f5c:	str	x9, [sp, #56]
  408f60:	str	x10, [sp, #48]
  408f64:	bl	4027d8 <conf_files_list@plt>
  408f68:	stur	w0, [x29, #-28]
  408f6c:	ldur	w12, [x29, #-28]
  408f70:	cmp	w12, #0x0
  408f74:	cset	w12, ge  // ge = tcont
  408f78:	tbnz	w12, #0, 409008 <relabel_extra+0x104>
  408f7c:	mov	w8, #0x3                   	// #3
  408f80:	stur	w8, [x29, #-36]
  408f84:	ldur	w8, [x29, #-28]
  408f88:	stur	w8, [x29, #-40]
  408f8c:	stur	wzr, [x29, #-44]
  408f90:	ldur	w0, [x29, #-44]
  408f94:	bl	402288 <log_get_max_level_realm@plt>
  408f98:	ldur	w8, [x29, #-36]
  408f9c:	and	w8, w8, #0x7
  408fa0:	cmp	w0, w8
  408fa4:	b.lt	408fd8 <relabel_extra+0xd4>  // b.tstop
  408fa8:	ldur	w8, [x29, #-44]
  408fac:	ldur	w9, [x29, #-36]
  408fb0:	orr	w0, w9, w8, lsl #10
  408fb4:	ldur	w1, [x29, #-40]
  408fb8:	ldr	x2, [sp, #56]
  408fbc:	mov	w3, #0x1ac                 	// #428
  408fc0:	ldr	x4, [sp, #48]
  408fc4:	adrp	x5, 40a000 <_fini+0x894>
  408fc8:	add	x5, x5, #0xa5f
  408fcc:	bl	402298 <log_internal_realm@plt>
  408fd0:	str	w0, [sp, #44]
  408fd4:	b	408fec <relabel_extra+0xe8>
  408fd8:	ldur	w0, [x29, #-40]
  408fdc:	bl	4022a8 <abs@plt>
  408fe0:	mov	w8, wzr
  408fe4:	subs	w8, w8, w0, uxtb
  408fe8:	str	w8, [sp, #44]
  408fec:	ldr	w8, [sp, #44]
  408ff0:	stur	w8, [x29, #-48]
  408ff4:	ldur	w8, [x29, #-48]
  408ff8:	stur	w8, [x29, #-4]
  408ffc:	mov	w8, #0x1                   	// #1
  409000:	stur	w8, [x29, #-52]
  409004:	b	409558 <relabel_extra+0x654>
  409008:	ldur	x8, [x29, #-16]
  40900c:	stur	x8, [x29, #-24]
  409010:	ldur	x8, [x29, #-24]
  409014:	mov	w9, #0x0                   	// #0
  409018:	str	w9, [sp, #40]
  40901c:	cbz	x8, 409034 <relabel_extra+0x130>
  409020:	ldur	x8, [x29, #-24]
  409024:	ldr	x8, [x8]
  409028:	cmp	x8, #0x0
  40902c:	cset	w9, ne  // ne = any
  409030:	str	w9, [sp, #40]
  409034:	ldr	w8, [sp, #40]
  409038:	tbnz	w8, #0, 409040 <relabel_extra+0x13c>
  40903c:	b	4094a4 <relabel_extra+0x5a0>
  409040:	mov	x8, xzr
  409044:	stur	x8, [x29, #-64]
  409048:	ldur	x8, [x29, #-24]
  40904c:	ldr	x0, [x8]
  409050:	adrp	x1, 40a000 <_fini+0x894>
  409054:	add	x1, x1, #0x247
  409058:	bl	4027e8 <fopen64@plt>
  40905c:	stur	x0, [x29, #-64]
  409060:	ldur	x8, [x29, #-64]
  409064:	cbnz	x8, 4090f8 <relabel_extra+0x1f4>
  409068:	mov	w8, #0x4                   	// #4
  40906c:	stur	w8, [x29, #-68]
  409070:	bl	402448 <__errno_location@plt>
  409074:	ldr	w8, [x0]
  409078:	stur	w8, [x29, #-72]
  40907c:	stur	wzr, [x29, #-76]
  409080:	ldur	w0, [x29, #-76]
  409084:	bl	402288 <log_get_max_level_realm@plt>
  409088:	ldur	w8, [x29, #-68]
  40908c:	and	w8, w8, #0x7
  409090:	cmp	w0, w8
  409094:	b.lt	4090d0 <relabel_extra+0x1cc>  // b.tstop
  409098:	ldur	w8, [x29, #-76]
  40909c:	ldur	w9, [x29, #-68]
  4090a0:	orr	w0, w9, w8, lsl #10
  4090a4:	ldur	w1, [x29, #-72]
  4090a8:	ldur	x10, [x29, #-24]
  4090ac:	ldr	x6, [x10]
  4090b0:	ldr	x2, [sp, #56]
  4090b4:	mov	w3, #0x1b3                 	// #435
  4090b8:	ldr	x4, [sp, #48]
  4090bc:	adrp	x5, 40a000 <_fini+0x894>
  4090c0:	add	x5, x5, #0xa9f
  4090c4:	bl	402298 <log_internal_realm@plt>
  4090c8:	str	w0, [sp, #36]
  4090cc:	b	4090e4 <relabel_extra+0x1e0>
  4090d0:	ldur	w0, [x29, #-72]
  4090d4:	bl	4022a8 <abs@plt>
  4090d8:	mov	w8, wzr
  4090dc:	subs	w8, w8, w0, uxtb
  4090e0:	str	w8, [sp, #36]
  4090e4:	ldr	w8, [sp, #36]
  4090e8:	stur	w8, [x29, #-80]
  4090ec:	mov	w8, #0x4                   	// #4
  4090f0:	stur	w8, [x29, #-52]
  4090f4:	b	40947c <relabel_extra+0x578>
  4090f8:	sub	x2, x29, #0x58
  4090fc:	mov	x8, xzr
  409100:	stur	x8, [x29, #-88]
  409104:	ldur	x0, [x29, #-64]
  409108:	mov	x1, #0x100000              	// #1048576
  40910c:	bl	4096a8 <read_line>
  409110:	stur	w0, [x29, #-28]
  409114:	ldur	w9, [x29, #-28]
  409118:	cmp	w9, #0x0
  40911c:	cset	w9, ge  // ge = tcont
  409120:	tbnz	w9, #0, 4091b0 <relabel_extra+0x2ac>
  409124:	mov	w8, #0x4                   	// #4
  409128:	stur	w8, [x29, #-92]
  40912c:	ldur	w8, [x29, #-28]
  409130:	stur	w8, [x29, #-96]
  409134:	stur	wzr, [x29, #-100]
  409138:	ldur	w0, [x29, #-100]
  40913c:	bl	402288 <log_get_max_level_realm@plt>
  409140:	ldur	w8, [x29, #-92]
  409144:	and	w8, w8, #0x7
  409148:	cmp	w0, w8
  40914c:	b.lt	409188 <relabel_extra+0x284>  // b.tstop
  409150:	ldur	w8, [x29, #-100]
  409154:	ldur	w9, [x29, #-92]
  409158:	orr	w0, w9, w8, lsl #10
  40915c:	ldur	w1, [x29, #-96]
  409160:	ldur	x10, [x29, #-24]
  409164:	ldr	x6, [x10]
  409168:	ldr	x2, [sp, #56]
  40916c:	mov	w3, #0x1bc                 	// #444
  409170:	ldr	x4, [sp, #48]
  409174:	adrp	x5, 40a000 <_fini+0x894>
  409178:	add	x5, x5, #0xabf
  40917c:	bl	402298 <log_internal_realm@plt>
  409180:	str	w0, [sp, #32]
  409184:	b	40919c <relabel_extra+0x298>
  409188:	ldur	w0, [x29, #-96]
  40918c:	bl	4022a8 <abs@plt>
  409190:	mov	w8, wzr
  409194:	subs	w8, w8, w0, uxtb
  409198:	str	w8, [sp, #32]
  40919c:	ldr	w8, [sp, #32]
  4091a0:	stur	w8, [x29, #-104]
  4091a4:	mov	w8, #0x5                   	// #5
  4091a8:	stur	w8, [x29, #-52]
  4091ac:	b	4093ac <relabel_extra+0x4a8>
  4091b0:	ldur	w8, [x29, #-28]
  4091b4:	cbnz	w8, 4091c4 <relabel_extra+0x2c0>
  4091b8:	mov	w8, #0x5                   	// #5
  4091bc:	stur	w8, [x29, #-52]
  4091c0:	b	4093ac <relabel_extra+0x4a8>
  4091c4:	ldur	x0, [x29, #-88]
  4091c8:	mov	w8, #0x1                   	// #1
  4091cc:	and	w1, w8, #0x1
  4091d0:	bl	402488 <path_simplify@plt>
  4091d4:	ldur	x9, [x29, #-88]
  4091d8:	mov	x0, x9
  4091dc:	bl	4027f8 <path_is_normalized@plt>
  4091e0:	tbnz	w0, #0, 409268 <relabel_extra+0x364>
  4091e4:	mov	w8, #0x4                   	// #4
  4091e8:	stur	w8, [x29, #-108]
  4091ec:	stur	wzr, [x29, #-112]
  4091f0:	stur	wzr, [x29, #-116]
  4091f4:	ldur	w0, [x29, #-116]
  4091f8:	bl	402288 <log_get_max_level_realm@plt>
  4091fc:	ldur	w8, [x29, #-108]
  409200:	and	w8, w8, #0x7
  409204:	cmp	w0, w8
  409208:	b.lt	409240 <relabel_extra+0x33c>  // b.tstop
  40920c:	ldur	w8, [x29, #-116]
  409210:	ldur	w9, [x29, #-108]
  409214:	orr	w0, w9, w8, lsl #10
  409218:	ldur	w1, [x29, #-112]
  40921c:	ldur	x6, [x29, #-88]
  409220:	ldr	x2, [sp, #56]
  409224:	mov	w3, #0x1c5                 	// #453
  409228:	ldr	x4, [sp, #48]
  40922c:	adrp	x5, 40a000 <_fini+0x894>
  409230:	add	x5, x5, #0xadf
  409234:	bl	402298 <log_internal_realm@plt>
  409238:	str	w0, [sp, #28]
  40923c:	b	409254 <relabel_extra+0x350>
  409240:	ldur	w0, [x29, #-112]
  409244:	bl	4022a8 <abs@plt>
  409248:	mov	w8, wzr
  40924c:	subs	w8, w8, w0, uxtb
  409250:	str	w8, [sp, #28]
  409254:	ldr	w8, [sp, #28]
  409258:	stur	w8, [x29, #-120]
  40925c:	mov	w8, #0x6                   	// #6
  409260:	stur	w8, [x29, #-52]
  409264:	b	4093ac <relabel_extra+0x4a8>
  409268:	ldur	x0, [x29, #-88]
  40926c:	bl	402808 <path_is_absolute@plt>
  409270:	tbnz	w0, #0, 4092f8 <relabel_extra+0x3f4>
  409274:	mov	w8, #0x4                   	// #4
  409278:	stur	w8, [x29, #-124]
  40927c:	str	wzr, [sp, #128]
  409280:	str	wzr, [sp, #124]
  409284:	ldr	w0, [sp, #124]
  409288:	bl	402288 <log_get_max_level_realm@plt>
  40928c:	ldur	w8, [x29, #-124]
  409290:	and	w8, w8, #0x7
  409294:	cmp	w0, w8
  409298:	b.lt	4092d0 <relabel_extra+0x3cc>  // b.tstop
  40929c:	ldr	w8, [sp, #124]
  4092a0:	ldur	w9, [x29, #-124]
  4092a4:	orr	w0, w9, w8, lsl #10
  4092a8:	ldr	w1, [sp, #128]
  4092ac:	ldur	x6, [x29, #-88]
  4092b0:	ldr	x2, [sp, #56]
  4092b4:	mov	w3, #0x1ca                 	// #458
  4092b8:	ldr	x4, [sp, #48]
  4092bc:	adrp	x5, 40a000 <_fini+0x894>
  4092c0:	add	x5, x5, #0xb0f
  4092c4:	bl	402298 <log_internal_realm@plt>
  4092c8:	str	w0, [sp, #24]
  4092cc:	b	4092e4 <relabel_extra+0x3e0>
  4092d0:	ldr	w0, [sp, #128]
  4092d4:	bl	4022a8 <abs@plt>
  4092d8:	mov	w8, wzr
  4092dc:	subs	w8, w8, w0, uxtb
  4092e0:	str	w8, [sp, #24]
  4092e4:	ldr	w8, [sp, #24]
  4092e8:	str	w8, [sp, #120]
  4092ec:	mov	w8, #0x6                   	// #6
  4092f0:	stur	w8, [x29, #-52]
  4092f4:	b	4093ac <relabel_extra+0x4a8>
  4092f8:	mov	w8, #0x7                   	// #7
  4092fc:	str	w8, [sp, #116]
  409300:	str	wzr, [sp, #112]
  409304:	str	wzr, [sp, #108]
  409308:	ldr	w0, [sp, #108]
  40930c:	bl	402288 <log_get_max_level_realm@plt>
  409310:	ldr	w8, [sp, #116]
  409314:	and	w8, w8, #0x7
  409318:	cmp	w0, w8
  40931c:	b.lt	409354 <relabel_extra+0x450>  // b.tstop
  409320:	ldr	w8, [sp, #108]
  409324:	ldr	w9, [sp, #116]
  409328:	orr	w0, w9, w8, lsl #10
  40932c:	ldr	w1, [sp, #112]
  409330:	ldur	x6, [x29, #-88]
  409334:	ldr	x2, [sp, #56]
  409338:	mov	w3, #0x1ce                 	// #462
  40933c:	ldr	x4, [sp, #48]
  409340:	adrp	x5, 40a000 <_fini+0x894>
  409344:	add	x5, x5, #0xb3d
  409348:	bl	402298 <log_internal_realm@plt>
  40934c:	str	w0, [sp, #20]
  409350:	b	409368 <relabel_extra+0x464>
  409354:	ldr	w0, [sp, #112]
  409358:	bl	4022a8 <abs@plt>
  40935c:	mov	w8, wzr
  409360:	subs	w8, w8, w0, uxtb
  409364:	str	w8, [sp, #20]
  409368:	ldr	w8, [sp, #20]
  40936c:	str	w8, [sp, #104]
  409370:	ldur	x0, [x29, #-88]
  409374:	mov	w8, wzr
  409378:	mov	w1, w8
  40937c:	bl	4026f8 <label_fix@plt>
  409380:	ldur	x9, [x29, #-88]
  409384:	mov	x0, x9
  409388:	adrp	x1, 408000 <mount_one+0x14>
  40938c:	add	x1, x1, #0xc14
  409390:	mov	w2, #0x40                  	// #64
  409394:	mov	w3, #0x13                  	// #19
  409398:	bl	402778 <nftw64@plt>
  40939c:	ldur	w8, [x29, #-32]
  4093a0:	add	w8, w8, #0x1
  4093a4:	stur	w8, [x29, #-32]
  4093a8:	stur	wzr, [x29, #-52]
  4093ac:	sub	x0, x29, #0x58
  4093b0:	bl	407e1c <freep>
  4093b4:	ldur	w8, [x29, #-52]
  4093b8:	str	w8, [sp, #16]
  4093bc:	cbz	w8, 4093d8 <relabel_extra+0x4d4>
  4093c0:	b	4093c4 <relabel_extra+0x4c0>
  4093c4:	ldr	w8, [sp, #16]
  4093c8:	cmp	w8, #0x5
  4093cc:	b.eq	4093dc <relabel_extra+0x4d8>  // b.none
  4093d0:	b	4093d4 <relabel_extra+0x4d0>
  4093d4:	b	4090f8 <relabel_extra+0x1f4>
  4093d8:	b	4090f8 <relabel_extra+0x1f4>
  4093dc:	ldur	x8, [x29, #-24]
  4093e0:	ldr	x0, [x8]
  4093e4:	bl	402818 <unlink@plt>
  4093e8:	cmp	w0, #0x0
  4093ec:	cset	w9, ge  // ge = tcont
  4093f0:	tbnz	w9, #0, 409478 <relabel_extra+0x574>
  4093f4:	mov	w8, #0x4                   	// #4
  4093f8:	str	w8, [sp, #100]
  4093fc:	bl	402448 <__errno_location@plt>
  409400:	ldr	w8, [x0]
  409404:	str	w8, [sp, #96]
  409408:	str	wzr, [sp, #92]
  40940c:	ldr	w0, [sp, #92]
  409410:	bl	402288 <log_get_max_level_realm@plt>
  409414:	ldr	w8, [sp, #100]
  409418:	and	w8, w8, #0x7
  40941c:	cmp	w0, w8
  409420:	b.lt	40945c <relabel_extra+0x558>  // b.tstop
  409424:	ldr	w8, [sp, #92]
  409428:	ldr	w9, [sp, #100]
  40942c:	orr	w0, w9, w8, lsl #10
  409430:	ldr	w1, [sp, #96]
  409434:	ldur	x10, [x29, #-24]
  409438:	ldr	x6, [x10]
  40943c:	ldr	x2, [sp, #56]
  409440:	mov	w3, #0x1d5                 	// #469
  409444:	ldr	x4, [sp, #48]
  409448:	adrp	x5, 40a000 <_fini+0x894>
  40944c:	add	x5, x5, #0xb69
  409450:	bl	402298 <log_internal_realm@plt>
  409454:	str	w0, [sp, #12]
  409458:	b	409470 <relabel_extra+0x56c>
  40945c:	ldr	w0, [sp, #96]
  409460:	bl	4022a8 <abs@plt>
  409464:	mov	w8, wzr
  409468:	subs	w8, w8, w0, uxtb
  40946c:	str	w8, [sp, #12]
  409470:	ldr	w8, [sp, #12]
  409474:	str	w8, [sp, #88]
  409478:	stur	wzr, [x29, #-52]
  40947c:	sub	x0, x29, #0x40
  409480:	bl	409680 <fclosep>
  409484:	ldur	w8, [x29, #-52]
  409488:	cbz	w8, 409494 <relabel_extra+0x590>
  40948c:	b	409490 <relabel_extra+0x58c>
  409490:	b	409494 <relabel_extra+0x590>
  409494:	ldur	x8, [x29, #-24]
  409498:	add	x8, x8, #0x8
  40949c:	stur	x8, [x29, #-24]
  4094a0:	b	409010 <relabel_extra+0x10c>
  4094a4:	adrp	x0, 40a000 <_fini+0x894>
  4094a8:	add	x0, x0, #0xb8b
  4094ac:	bl	402748 <rmdir@plt>
  4094b0:	cmp	w0, #0x0
  4094b4:	cset	w8, ge  // ge = tcont
  4094b8:	tbnz	w8, #0, 409548 <relabel_extra+0x644>
  4094bc:	bl	402448 <__errno_location@plt>
  4094c0:	ldr	w8, [x0]
  4094c4:	cmp	w8, #0x2
  4094c8:	b.eq	409548 <relabel_extra+0x644>  // b.none
  4094cc:	mov	w8, #0x4                   	// #4
  4094d0:	str	w8, [sp, #84]
  4094d4:	bl	402448 <__errno_location@plt>
  4094d8:	ldr	w8, [x0]
  4094dc:	str	w8, [sp, #80]
  4094e0:	str	wzr, [sp, #76]
  4094e4:	ldr	w0, [sp, #76]
  4094e8:	bl	402288 <log_get_max_level_realm@plt>
  4094ec:	ldr	w8, [sp, #84]
  4094f0:	and	w8, w8, #0x7
  4094f4:	cmp	w0, w8
  4094f8:	b.lt	40952c <relabel_extra+0x628>  // b.tstop
  4094fc:	ldr	w8, [sp, #76]
  409500:	ldr	w9, [sp, #84]
  409504:	orr	w0, w9, w8, lsl #10
  409508:	ldr	w1, [sp, #80]
  40950c:	ldr	x2, [sp, #56]
  409510:	mov	w3, #0x1db                 	// #475
  409514:	ldr	x4, [sp, #48]
  409518:	adrp	x5, 40a000 <_fini+0x894>
  40951c:	add	x5, x5, #0xba8
  409520:	bl	402298 <log_internal_realm@plt>
  409524:	str	w0, [sp, #8]
  409528:	b	409540 <relabel_extra+0x63c>
  40952c:	ldr	w0, [sp, #80]
  409530:	bl	4022a8 <abs@plt>
  409534:	mov	w8, wzr
  409538:	subs	w8, w8, w0, uxtb
  40953c:	str	w8, [sp, #8]
  409540:	ldr	w8, [sp, #8]
  409544:	str	w8, [sp, #72]
  409548:	ldur	w8, [x29, #-32]
  40954c:	stur	w8, [x29, #-4]
  409550:	mov	w8, #0x1                   	// #1
  409554:	stur	w8, [x29, #-52]
  409558:	sub	x0, x29, #0x10
  40955c:	bl	40964c <strv_freep>
  409560:	ldur	w0, [x29, #-4]
  409564:	ldr	x28, [sp, #272]
  409568:	ldp	x29, x30, [sp, #256]
  40956c:	add	sp, sp, #0x120
  409570:	ret

0000000000409574 <set_free_free>:
  409574:	sub	sp, sp, #0x20
  409578:	stp	x29, x30, [sp, #16]
  40957c:	add	x29, sp, #0x10
  409580:	adrp	x1, 41f000 <__FRAME_END__+0x14190>
  409584:	ldr	x1, [x1, #3264]
  409588:	mov	x8, xzr
  40958c:	str	x0, [sp, #8]
  409590:	ldr	x0, [sp, #8]
  409594:	mov	x2, x8
  409598:	bl	402828 <internal_hashmap_free@plt>
  40959c:	ldp	x29, x30, [sp, #16]
  4095a0:	add	sp, sp, #0x20
  4095a4:	ret

00000000004095a8 <strna>:
  4095a8:	sub	sp, sp, #0x20
  4095ac:	str	x0, [sp, #24]
  4095b0:	ldr	x8, [sp, #24]
  4095b4:	str	x8, [sp, #16]
  4095b8:	cbz	x8, 4095c8 <strna+0x20>
  4095bc:	ldr	x8, [sp, #16]
  4095c0:	str	x8, [sp, #8]
  4095c4:	b	4095d4 <strna+0x2c>
  4095c8:	adrp	x8, 409000 <relabel_extra+0xfc>
  4095cc:	add	x8, x8, #0xbaf
  4095d0:	str	x8, [sp, #8]
  4095d4:	ldr	x8, [sp, #8]
  4095d8:	mov	x0, x8
  4095dc:	add	sp, sp, #0x20
  4095e0:	ret

00000000004095e4 <size_multiply_overflow>:
  4095e4:	sub	sp, sp, #0x20
  4095e8:	str	x0, [sp, #24]
  4095ec:	str	x1, [sp, #16]
  4095f0:	ldr	x8, [sp, #16]
  4095f4:	mov	w9, #0x0                   	// #0
  4095f8:	str	w9, [sp, #12]
  4095fc:	cbz	x8, 40961c <size_multiply_overflow+0x38>
  409600:	ldr	x8, [sp, #24]
  409604:	ldr	x9, [sp, #16]
  409608:	mov	x10, #0xffffffffffffffff    	// #-1
  40960c:	udiv	x9, x10, x9
  409610:	cmp	x8, x9
  409614:	cset	w11, hi  // hi = pmore
  409618:	str	w11, [sp, #12]
  40961c:	ldr	w8, [sp, #12]
  409620:	mov	w9, #0x1                   	// #1
  409624:	eor	w8, w8, #0x1
  409628:	eor	w8, w8, w9
  40962c:	and	w8, w8, #0x1
  409630:	mov	w0, w8
  409634:	sxtw	x10, w0
  409638:	cmp	x10, #0x0
  40963c:	cset	w8, ne  // ne = any
  409640:	and	w0, w8, #0x1
  409644:	add	sp, sp, #0x20
  409648:	ret

000000000040964c <strv_freep>:
  40964c:	sub	sp, sp, #0x20
  409650:	stp	x29, x30, [sp, #16]
  409654:	add	x29, sp, #0x10
  409658:	str	x0, [sp, #8]
  40965c:	ldr	x8, [sp, #8]
  409660:	ldr	x8, [x8]
  409664:	cbz	x8, 409674 <strv_freep+0x28>
  409668:	ldr	x8, [sp, #8]
  40966c:	ldr	x0, [x8]
  409670:	bl	4025d8 <strv_free@plt>
  409674:	ldp	x29, x30, [sp, #16]
  409678:	add	sp, sp, #0x20
  40967c:	ret

0000000000409680 <fclosep>:
  409680:	sub	sp, sp, #0x20
  409684:	stp	x29, x30, [sp, #16]
  409688:	add	x29, sp, #0x10
  40968c:	str	x0, [sp, #8]
  409690:	ldr	x8, [sp, #8]
  409694:	ldr	x0, [x8]
  409698:	bl	402558 <safe_fclose@plt>
  40969c:	ldp	x29, x30, [sp, #16]
  4096a0:	add	sp, sp, #0x20
  4096a4:	ret

00000000004096a8 <read_line>:
  4096a8:	sub	sp, sp, #0x30
  4096ac:	stp	x29, x30, [sp, #32]
  4096b0:	add	x29, sp, #0x20
  4096b4:	mov	w8, wzr
  4096b8:	stur	x0, [x29, #-8]
  4096bc:	str	x1, [sp, #16]
  4096c0:	str	x2, [sp, #8]
  4096c4:	ldur	x0, [x29, #-8]
  4096c8:	ldr	x1, [sp, #16]
  4096cc:	ldr	x3, [sp, #8]
  4096d0:	mov	w2, w8
  4096d4:	bl	402838 <read_line_full@plt>
  4096d8:	ldp	x29, x30, [sp, #32]
  4096dc:	add	sp, sp, #0x30
  4096e0:	ret
  4096e4:	udf	#0

00000000004096e8 <__libc_csu_init>:
  4096e8:	stp	x29, x30, [sp, #-64]!
  4096ec:	mov	x29, sp
  4096f0:	stp	x19, x20, [sp, #16]
  4096f4:	adrp	x20, 41f000 <__FRAME_END__+0x14190>
  4096f8:	add	x20, x20, #0x5f8
  4096fc:	stp	x21, x22, [sp, #32]
  409700:	adrp	x21, 41f000 <__FRAME_END__+0x14190>
  409704:	add	x21, x21, #0x5f0
  409708:	sub	x20, x20, x21
  40970c:	mov	w22, w0
  409710:	stp	x23, x24, [sp, #48]
  409714:	mov	x23, x1
  409718:	mov	x24, x2
  40971c:	bl	402210 <_init>
  409720:	cmp	xzr, x20, asr #3
  409724:	b.eq	409750 <__libc_csu_init+0x68>  // b.none
  409728:	asr	x20, x20, #3
  40972c:	mov	x19, #0x0                   	// #0
  409730:	ldr	x3, [x21, x19, lsl #3]
  409734:	mov	x2, x24
  409738:	add	x19, x19, #0x1
  40973c:	mov	x1, x23
  409740:	mov	w0, w22
  409744:	blr	x3
  409748:	cmp	x20, x19
  40974c:	b.ne	409730 <__libc_csu_init+0x48>  // b.any
  409750:	ldp	x19, x20, [sp, #16]
  409754:	ldp	x21, x22, [sp, #32]
  409758:	ldp	x23, x24, [sp, #48]
  40975c:	ldp	x29, x30, [sp], #64
  409760:	ret
  409764:	nop

0000000000409768 <__libc_csu_fini>:
  409768:	ret

Disassembly of section .fini:

000000000040976c <_fini>:
  40976c:	stp	x29, x30, [sp, #-16]!
  409770:	mov	x29, sp
  409774:	ldp	x29, x30, [sp], #16
  409778:	ret
