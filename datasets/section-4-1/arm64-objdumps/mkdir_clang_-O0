
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mkdir_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b78 <_init>:
 b78:	stp	x29, x30, [sp, #-16]!
 b7c:	mov	x29, sp
 b80:	bl	ce0 <call_weak_fn>
 b84:	ldp	x29, x30, [sp], #16
 b88:	ret

Disassembly of section .plt:

0000000000000b90 <.plt>:
 b90:	stp	x16, x30, [sp, #-16]!
 b94:	adrp	x16, 11000 <__FRAME_END__+0xf764>
 b98:	ldr	x17, [x16, #4088]
 b9c:	add	x16, x16, #0xff8
 ba0:	br	x17
 ba4:	nop
 ba8:	nop
 bac:	nop

0000000000000bb0 <strlen@plt>:
 bb0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 bb4:	ldr	x17, [x16]
 bb8:	add	x16, x16, #0x0
 bbc:	br	x17

0000000000000bc0 <builtin_error@plt>:
 bc0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 bc4:	ldr	x17, [x16, #8]
 bc8:	add	x16, x16, #0x8
 bcc:	br	x17

0000000000000bd0 <__cxa_finalize@plt>:
 bd0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 bd4:	ldr	x17, [x16, #16]
 bd8:	add	x16, x16, #0x10
 bdc:	br	x17

0000000000000be0 <chmod@plt>:
 be0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 be4:	ldr	x17, [x16, #24]
 be8:	add	x16, x16, #0x18
 bec:	br	x17

0000000000000bf0 <builtin_help@plt>:
 bf0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 bf4:	ldr	x17, [x16, #32]
 bf8:	add	x16, x16, #0x20
 bfc:	br	x17

0000000000000c00 <xmalloc@plt>:
 c00:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c04:	ldr	x17, [x16, #40]
 c08:	add	x16, x16, #0x28
 c0c:	br	x17

0000000000000c10 <builtin_usage@plt>:
 c10:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c14:	ldr	x17, [x16, #48]
 c18:	add	x16, x16, #0x30
 c1c:	br	x17

0000000000000c20 <strerror@plt>:
 c20:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c24:	ldr	x17, [x16, #56]
 c28:	add	x16, x16, #0x38
 c2c:	br	x17

0000000000000c30 <__gmon_start__@plt>:
 c30:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c34:	ldr	x17, [x16, #64]
 c38:	add	x16, x16, #0x40
 c3c:	br	x17

0000000000000c40 <free@plt>:
 c40:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c44:	ldr	x17, [x16, #72]
 c48:	add	x16, x16, #0x48
 c4c:	br	x17

0000000000000c50 <internal_getopt@plt>:
 c50:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c54:	ldr	x17, [x16, #80]
 c58:	add	x16, x16, #0x50
 c5c:	br	x17

0000000000000c60 <reset_internal_getopt@plt>:
 c60:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c64:	ldr	x17, [x16, #88]
 c68:	add	x16, x16, #0x58
 c6c:	br	x17

0000000000000c70 <strchr@plt>:
 c70:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c74:	ldr	x17, [x16, #96]
 c78:	add	x16, x16, #0x60
 c7c:	br	x17

0000000000000c80 <strcpy@plt>:
 c80:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c84:	ldr	x17, [x16, #104]
 c88:	add	x16, x16, #0x68
 c8c:	br	x17

0000000000000c90 <read_octal@plt>:
 c90:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 c94:	ldr	x17, [x16, #112]
 c98:	add	x16, x16, #0x70
 c9c:	br	x17

0000000000000ca0 <umask@plt>:
 ca0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ca4:	ldr	x17, [x16, #120]
 ca8:	add	x16, x16, #0x78
 cac:	br	x17

0000000000000cb0 <__errno_location@plt>:
 cb0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 cb4:	ldr	x17, [x16, #128]
 cb8:	add	x16, x16, #0x80
 cbc:	br	x17

0000000000000cc0 <__xstat@plt>:
 cc0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 cc4:	ldr	x17, [x16, #136]
 cc8:	add	x16, x16, #0x88
 ccc:	br	x17

0000000000000cd0 <mkdir@plt>:
 cd0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 cd4:	ldr	x17, [x16, #144]
 cd8:	add	x16, x16, #0x90
 cdc:	br	x17

Disassembly of section .text:

0000000000000ce0 <call_weak_fn>:
     ce0:	adrp	x0, 11000 <__FRAME_END__+0xf764>
     ce4:	ldr	x0, [x0, #4040]
     ce8:	cbz	x0, cf0 <call_weak_fn+0x10>
     cec:	b	c30 <__gmon_start__@plt>
     cf0:	ret
     cf4:	nop

0000000000000cf8 <deregister_tm_clones>:
     cf8:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     cfc:	add	x0, x0, #0x148
     d00:	adrp	x1, 12000 <strlen@GLIBC_2.17>
     d04:	add	x1, x1, #0x148
     d08:	cmp	x1, x0
     d0c:	b.eq	d24 <deregister_tm_clones+0x2c>  // b.none
     d10:	adrp	x1, 11000 <__FRAME_END__+0xf764>
     d14:	ldr	x1, [x1, #4016]
     d18:	cbz	x1, d24 <deregister_tm_clones+0x2c>
     d1c:	mov	x16, x1
     d20:	br	x16
     d24:	ret

0000000000000d28 <register_tm_clones>:
     d28:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     d2c:	add	x0, x0, #0x148
     d30:	adrp	x1, 12000 <strlen@GLIBC_2.17>
     d34:	add	x1, x1, #0x148
     d38:	sub	x1, x1, x0
     d3c:	lsr	x2, x1, #63
     d40:	add	x1, x2, x1, asr #3
     d44:	cmp	xzr, x1, asr #1
     d48:	asr	x1, x1, #1
     d4c:	b.eq	d64 <register_tm_clones+0x3c>  // b.none
     d50:	adrp	x2, 11000 <__FRAME_END__+0xf764>
     d54:	ldr	x2, [x2, #4064]
     d58:	cbz	x2, d64 <register_tm_clones+0x3c>
     d5c:	mov	x16, x2
     d60:	br	x16
     d64:	ret

0000000000000d68 <__do_global_dtors_aux>:
     d68:	stp	x29, x30, [sp, #-32]!
     d6c:	mov	x29, sp
     d70:	str	x19, [sp, #16]
     d74:	adrp	x19, 12000 <strlen@GLIBC_2.17>
     d78:	ldrb	w0, [x19, #328]
     d7c:	cbnz	w0, da4 <__do_global_dtors_aux+0x3c>
     d80:	adrp	x0, 11000 <__FRAME_END__+0xf764>
     d84:	ldr	x0, [x0, #4024]
     d88:	cbz	x0, d98 <__do_global_dtors_aux+0x30>
     d8c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
     d90:	ldr	x0, [x0, #152]
     d94:	bl	bd0 <__cxa_finalize@plt>
     d98:	bl	cf8 <deregister_tm_clones>
     d9c:	mov	w0, #0x1                   	// #1
     da0:	strb	w0, [x19, #328]
     da4:	ldr	x19, [sp, #16]
     da8:	ldp	x29, x30, [sp], #32
     dac:	ret

0000000000000db0 <frame_dummy>:
     db0:	b	d28 <register_tm_clones>

0000000000000db4 <mkdir_builtin>:
     db4:	sub	sp, sp, #0x80
     db8:	stp	x29, x30, [sp, #112]
     dbc:	add	x29, sp, #0x70
     dc0:	mov	x8, xzr
     dc4:	adrp	x9, 11000 <__FRAME_END__+0xf764>
     dc8:	ldr	x9, [x9, #4032]
     dcc:	adrp	x10, 12000 <strlen@GLIBC_2.17>
     dd0:	add	x10, x10, #0x14c
     dd4:	stur	x0, [x29, #-16]
     dd8:	str	x8, [sp, #40]
     ddc:	str	x9, [sp, #32]
     de0:	str	x10, [sp, #24]
     de4:	bl	c60 <reset_internal_getopt@plt>
     de8:	stur	wzr, [x29, #-28]
     dec:	stur	wzr, [x29, #-24]
     df0:	ldr	x8, [sp, #40]
     df4:	str	x8, [sp, #56]
     df8:	ldur	x0, [x29, #-16]
     dfc:	adrp	x1, 1000 <mkdir_builtin+0x24c>
     e00:	add	x1, x1, #0x418
     e04:	bl	c50 <internal_getopt@plt>
     e08:	stur	w0, [x29, #-20]
     e0c:	mov	w8, #0xffffffff            	// #-1
     e10:	cmp	w0, w8
     e14:	b.eq	ea4 <mkdir_builtin+0xf0>  // b.none
     e18:	ldur	w8, [x29, #-20]
     e1c:	mov	w9, #0xffffff9d            	// #-99
     e20:	cmp	w8, w9
     e24:	str	w8, [sp, #20]
     e28:	b.eq	e80 <mkdir_builtin+0xcc>  // b.none
     e2c:	b	e30 <mkdir_builtin+0x7c>
     e30:	ldr	w8, [sp, #20]
     e34:	cmp	w8, #0x6d
     e38:	b.eq	e64 <mkdir_builtin+0xb0>  // b.none
     e3c:	b	e40 <mkdir_builtin+0x8c>
     e40:	ldr	w8, [sp, #20]
     e44:	cmp	w8, #0x70
     e48:	cset	w9, eq  // eq = none
     e4c:	eor	w9, w9, #0x1
     e50:	tbnz	w9, #0, e90 <mkdir_builtin+0xdc>
     e54:	b	e58 <mkdir_builtin+0xa4>
     e58:	mov	w8, #0x1                   	// #1
     e5c:	stur	w8, [x29, #-24]
     e60:	b	ea0 <mkdir_builtin+0xec>
     e64:	mov	w8, #0x1                   	// #1
     e68:	stur	w8, [x29, #-28]
     e6c:	adrp	x9, 11000 <__FRAME_END__+0xf764>
     e70:	ldr	x9, [x9, #4048]
     e74:	ldr	x9, [x9]
     e78:	str	x9, [sp, #56]
     e7c:	b	ea0 <mkdir_builtin+0xec>
     e80:	bl	bf0 <builtin_help@plt>
     e84:	mov	w8, #0x102                 	// #258
     e88:	stur	w8, [x29, #-4]
     e8c:	b	1098 <mkdir_builtin+0x2e4>
     e90:	bl	c10 <builtin_usage@plt>
     e94:	mov	w8, #0x102                 	// #258
     e98:	stur	w8, [x29, #-4]
     e9c:	b	1098 <mkdir_builtin+0x2e4>
     ea0:	b	df8 <mkdir_builtin+0x44>
     ea4:	adrp	x8, 11000 <__FRAME_END__+0xf764>
     ea8:	ldr	x8, [x8, #4056]
     eac:	ldr	x8, [x8]
     eb0:	stur	x8, [x29, #-16]
     eb4:	ldur	x8, [x29, #-16]
     eb8:	cbnz	x8, ecc <mkdir_builtin+0x118>
     ebc:	bl	c10 <builtin_usage@plt>
     ec0:	mov	w8, #0x102                 	// #258
     ec4:	stur	w8, [x29, #-4]
     ec8:	b	1098 <mkdir_builtin+0x2e4>
     ecc:	ldr	x8, [sp, #56]
     ed0:	cbnz	x8, ee0 <mkdir_builtin+0x12c>
     ed4:	mov	w8, #0x1ff                 	// #511
     ed8:	stur	w8, [x29, #-32]
     edc:	b	f84 <mkdir_builtin+0x1d0>
     ee0:	ldr	x8, [sp, #56]
     ee4:	ldrb	w9, [x8]
     ee8:	cmp	w9, #0x30
     eec:	b.lt	f3c <mkdir_builtin+0x188>  // b.tstop
     ef0:	ldr	x8, [sp, #56]
     ef4:	ldrb	w9, [x8]
     ef8:	cmp	w9, #0x37
     efc:	b.gt	f3c <mkdir_builtin+0x188>
     f00:	ldr	x0, [sp, #56]
     f04:	bl	c90 <read_octal@plt>
     f08:	stur	w0, [x29, #-32]
     f0c:	ldur	w8, [x29, #-32]
     f10:	cmp	w8, #0x0
     f14:	cset	w8, ge  // ge = tcont
     f18:	tbnz	w8, #0, f38 <mkdir_builtin+0x184>
     f1c:	ldr	x1, [sp, #56]
     f20:	adrp	x0, 1000 <mkdir_builtin+0x24c>
     f24:	add	x0, x0, #0x41c
     f28:	bl	bc0 <builtin_error@plt>
     f2c:	mov	w8, #0x1                   	// #1
     f30:	stur	w8, [x29, #-4]
     f34:	b	1098 <mkdir_builtin+0x2e4>
     f38:	b	f84 <mkdir_builtin+0x1d0>
     f3c:	ldr	x8, [sp, #56]
     f40:	cbz	x8, f84 <mkdir_builtin+0x1d0>
     f44:	ldr	x0, [sp, #56]
     f48:	mov	w1, #0x1ff                 	// #511
     f4c:	ldr	x8, [sp, #32]
     f50:	blr	x8
     f54:	stur	w0, [x29, #-32]
     f58:	ldur	w9, [x29, #-32]
     f5c:	cmp	w9, #0x0
     f60:	cset	w9, ge  // ge = tcont
     f64:	tbnz	w9, #0, f84 <mkdir_builtin+0x1d0>
     f68:	ldr	x1, [sp, #56]
     f6c:	adrp	x0, 1000 <mkdir_builtin+0x24c>
     f70:	add	x0, x0, #0x41c
     f74:	bl	bc0 <builtin_error@plt>
     f78:	mov	w8, #0x1                   	// #1
     f7c:	stur	w8, [x29, #-4]
     f80:	b	1098 <mkdir_builtin+0x2e4>
     f84:	mov	w8, wzr
     f88:	mov	w0, w8
     f8c:	bl	ca0 <umask@plt>
     f90:	ldr	x9, [sp, #24]
     f94:	str	w0, [x9]
     f98:	ldr	w0, [x9]
     f9c:	bl	ca0 <umask@plt>
     fa0:	ldr	x9, [sp, #24]
     fa4:	ldr	w8, [x9]
     fa8:	mov	w10, #0x1ff                 	// #511
     fac:	bic	w8, w10, w8
     fb0:	stur	w8, [x29, #-40]
     fb4:	ldur	w8, [x29, #-40]
     fb8:	orr	w8, w8, #0xc0
     fbc:	stur	w8, [x29, #-44]
     fc0:	ldur	w8, [x29, #-32]
     fc4:	ldur	w10, [x29, #-40]
     fc8:	and	w8, w10, w8
     fcc:	stur	w8, [x29, #-40]
     fd0:	stur	wzr, [x29, #-36]
     fd4:	ldur	x11, [x29, #-16]
     fd8:	str	x11, [sp, #48]
     fdc:	ldr	x8, [sp, #48]
     fe0:	cbz	x8, 1090 <mkdir_builtin+0x2dc>
     fe4:	ldur	w8, [x29, #-24]
     fe8:	cbz	w8, 1018 <mkdir_builtin+0x264>
     fec:	ldr	x8, [sp, #48]
     ff0:	ldr	x8, [x8, #8]
     ff4:	ldr	x0, [x8]
     ff8:	ldur	w1, [x29, #-28]
     ffc:	ldur	w2, [x29, #-40]
    1000:	ldur	w3, [x29, #-44]
    1004:	bl	10a8 <make_path>
    1008:	cbz	w0, 1018 <mkdir_builtin+0x264>
    100c:	mov	w8, #0x1                   	// #1
    1010:	stur	w8, [x29, #-36]
    1014:	b	1080 <mkdir_builtin+0x2cc>
    1018:	ldur	w8, [x29, #-24]
    101c:	cbnz	w8, 1080 <mkdir_builtin+0x2cc>
    1020:	ldr	x8, [sp, #48]
    1024:	ldr	x8, [x8, #8]
    1028:	ldr	x0, [x8]
    102c:	ldur	w1, [x29, #-40]
    1030:	bl	cd0 <mkdir@plt>
    1034:	cmp	w0, #0x0
    1038:	cset	w9, ge  // ge = tcont
    103c:	tbnz	w9, #0, 1080 <mkdir_builtin+0x2cc>
    1040:	ldr	x8, [sp, #48]
    1044:	ldr	x8, [x8, #8]
    1048:	ldr	x1, [x8]
    104c:	str	x1, [sp, #8]
    1050:	bl	cb0 <__errno_location@plt>
    1054:	ldr	w0, [x0]
    1058:	bl	c20 <strerror@plt>
    105c:	adrp	x8, 1000 <mkdir_builtin+0x24c>
    1060:	add	x8, x8, #0x432
    1064:	str	x0, [sp]
    1068:	mov	x0, x8
    106c:	ldr	x1, [sp, #8]
    1070:	ldr	x2, [sp]
    1074:	bl	bc0 <builtin_error@plt>
    1078:	mov	w9, #0x1                   	// #1
    107c:	stur	w9, [x29, #-36]
    1080:	ldr	x8, [sp, #48]
    1084:	ldr	x8, [x8]
    1088:	str	x8, [sp, #48]
    108c:	b	fdc <mkdir_builtin+0x228>
    1090:	ldur	w8, [x29, #-36]
    1094:	stur	w8, [x29, #-4]
    1098:	ldur	w0, [x29, #-4]
    109c:	ldp	x29, x30, [sp, #112]
    10a0:	add	sp, sp, #0x80
    10a4:	ret

00000000000010a8 <make_path>:
    10a8:	sub	sp, sp, #0x120
    10ac:	stp	x29, x30, [sp, #256]
    10b0:	str	x28, [sp, #272]
    10b4:	add	x29, sp, #0x100
    10b8:	adrp	x8, 12000 <strlen@GLIBC_2.17>
    10bc:	add	x8, x8, #0x14c
    10c0:	add	x9, sp, #0x60
    10c4:	stur	x0, [x29, #-16]
    10c8:	stur	w1, [x29, #-20]
    10cc:	stur	w2, [x29, #-24]
    10d0:	stur	w3, [x29, #-28]
    10d4:	ldur	x0, [x29, #-16]
    10d8:	mov	x1, x9
    10dc:	str	x8, [sp, #72]
    10e0:	bl	13f8 <__stat>
    10e4:	cbnz	w0, 1178 <make_path+0xd0>
    10e8:	ldr	w8, [sp, #112]
    10ec:	and	w8, w8, #0xf000
    10f0:	cmp	w8, #0x4, lsl #12
    10f4:	cset	w8, eq  // eq = none
    10f8:	and	w8, w8, #0x1
    10fc:	cbnz	w8, 111c <make_path+0x74>
    1100:	ldur	x1, [x29, #-16]
    1104:	adrp	x0, 1000 <mkdir_builtin+0x24c>
    1108:	add	x0, x0, #0x788
    110c:	bl	bc0 <builtin_error@plt>
    1110:	mov	w8, #0x1                   	// #1
    1114:	stur	w8, [x29, #-4]
    1118:	b	13e0 <make_path+0x338>
    111c:	ldur	w8, [x29, #-20]
    1120:	cbz	w8, 1170 <make_path+0xc8>
    1124:	ldur	x0, [x29, #-16]
    1128:	ldur	w1, [x29, #-24]
    112c:	bl	be0 <chmod@plt>
    1130:	cbz	w0, 1170 <make_path+0xc8>
    1134:	ldur	x1, [x29, #-16]
    1138:	str	x1, [sp, #64]
    113c:	bl	cb0 <__errno_location@plt>
    1140:	ldr	w0, [x0]
    1144:	bl	c20 <strerror@plt>
    1148:	adrp	x8, 1000 <mkdir_builtin+0x24c>
    114c:	add	x8, x8, #0x7b1
    1150:	str	x0, [sp, #56]
    1154:	mov	x0, x8
    1158:	ldr	x1, [sp, #64]
    115c:	ldr	x2, [sp, #56]
    1160:	bl	bc0 <builtin_error@plt>
    1164:	mov	w9, #0x1                   	// #1
    1168:	stur	w9, [x29, #-4]
    116c:	b	13e0 <make_path+0x338>
    1170:	stur	wzr, [x29, #-4]
    1174:	b	13e0 <make_path+0x338>
    1178:	mov	w8, wzr
    117c:	mov	w0, w8
    1180:	bl	ca0 <umask@plt>
    1184:	stur	w0, [x29, #-32]
    1188:	ldur	x0, [x29, #-16]
    118c:	bl	bb0 <strlen@plt>
    1190:	add	x0, x0, #0x1
    1194:	bl	c00 <xmalloc@plt>
    1198:	ldur	x1, [x29, #-16]
    119c:	bl	c80 <strcpy@plt>
    11a0:	str	x0, [sp, #80]
    11a4:	ldr	x9, [sp, #80]
    11a8:	str	x9, [sp, #88]
    11ac:	ldr	x8, [sp, #88]
    11b0:	ldrb	w9, [x8]
    11b4:	cmp	w9, #0x2f
    11b8:	b.ne	11cc <make_path+0x124>  // b.any
    11bc:	ldr	x8, [sp, #88]
    11c0:	add	x8, x8, #0x1
    11c4:	str	x8, [sp, #88]
    11c8:	b	11ac <make_path+0x104>
    11cc:	ldr	x0, [sp, #88]
    11d0:	mov	w1, #0x2f                  	// #47
    11d4:	bl	c70 <strchr@plt>
    11d8:	str	x0, [sp, #88]
    11dc:	cbz	x0, 1350 <make_path+0x2a8>
    11e0:	ldr	x8, [sp, #88]
    11e4:	mov	w9, #0x0                   	// #0
    11e8:	strb	w9, [x8]
    11ec:	ldr	x0, [sp, #80]
    11f0:	add	x1, sp, #0x60
    11f4:	bl	13f8 <__stat>
    11f8:	cbz	w0, 12cc <make_path+0x224>
    11fc:	ldr	x0, [sp, #80]
    1200:	mov	w8, wzr
    1204:	mov	w1, w8
    1208:	bl	cd0 <mkdir@plt>
    120c:	cbz	w0, 1264 <make_path+0x1bc>
    1210:	ldr	x1, [sp, #80]
    1214:	str	x1, [sp, #48]
    1218:	bl	cb0 <__errno_location@plt>
    121c:	ldr	w0, [x0]
    1220:	bl	c20 <strerror@plt>
    1224:	adrp	x8, 1000 <mkdir_builtin+0x24c>
    1228:	add	x8, x8, #0x432
    122c:	str	x0, [sp, #40]
    1230:	mov	x0, x8
    1234:	ldr	x1, [sp, #48]
    1238:	ldr	x2, [sp, #40]
    123c:	bl	bc0 <builtin_error@plt>
    1240:	ldr	x8, [sp, #72]
    1244:	ldr	w0, [x8]
    1248:	bl	ca0 <umask@plt>
    124c:	ldr	x8, [sp, #80]
    1250:	mov	x0, x8
    1254:	bl	c40 <free@plt>
    1258:	mov	w9, #0x1                   	// #1
    125c:	stur	w9, [x29, #-4]
    1260:	b	13e0 <make_path+0x338>
    1264:	ldr	x0, [sp, #80]
    1268:	ldur	w1, [x29, #-28]
    126c:	bl	be0 <chmod@plt>
    1270:	cbz	w0, 12c8 <make_path+0x220>
    1274:	ldr	x1, [sp, #80]
    1278:	str	x1, [sp, #32]
    127c:	bl	cb0 <__errno_location@plt>
    1280:	ldr	w0, [x0]
    1284:	bl	c20 <strerror@plt>
    1288:	adrp	x8, 1000 <mkdir_builtin+0x24c>
    128c:	add	x8, x8, #0x7b8
    1290:	str	x0, [sp, #24]
    1294:	mov	x0, x8
    1298:	ldr	x1, [sp, #32]
    129c:	ldr	x2, [sp, #24]
    12a0:	bl	bc0 <builtin_error@plt>
    12a4:	ldr	x8, [sp, #72]
    12a8:	ldr	w0, [x8]
    12ac:	bl	ca0 <umask@plt>
    12b0:	ldr	x8, [sp, #80]
    12b4:	mov	x0, x8
    12b8:	bl	c40 <free@plt>
    12bc:	mov	w9, #0x1                   	// #1
    12c0:	stur	w9, [x29, #-4]
    12c4:	b	13e0 <make_path+0x338>
    12c8:	b	1318 <make_path+0x270>
    12cc:	ldr	w8, [sp, #112]
    12d0:	and	w8, w8, #0xf000
    12d4:	cmp	w8, #0x4, lsl #12
    12d8:	cset	w8, eq  // eq = none
    12dc:	and	w8, w8, #0x1
    12e0:	cbnz	w8, 1318 <make_path+0x270>
    12e4:	ldr	x1, [sp, #80]
    12e8:	adrp	x0, 1000 <mkdir_builtin+0x24c>
    12ec:	add	x0, x0, #0x788
    12f0:	bl	bc0 <builtin_error@plt>
    12f4:	ldr	x8, [sp, #72]
    12f8:	ldr	w0, [x8]
    12fc:	bl	ca0 <umask@plt>
    1300:	ldr	x8, [sp, #80]
    1304:	mov	x0, x8
    1308:	bl	c40 <free@plt>
    130c:	mov	w9, #0x1                   	// #1
    1310:	stur	w9, [x29, #-4]
    1314:	b	13e0 <make_path+0x338>
    1318:	ldr	x8, [sp, #88]
    131c:	add	x9, x8, #0x1
    1320:	str	x9, [sp, #88]
    1324:	mov	w10, #0x2f                  	// #47
    1328:	strb	w10, [x8]
    132c:	ldr	x8, [sp, #88]
    1330:	ldrb	w9, [x8]
    1334:	cmp	w9, #0x2f
    1338:	b.ne	134c <make_path+0x2a4>  // b.any
    133c:	ldr	x8, [sp, #88]
    1340:	add	x8, x8, #0x1
    1344:	str	x8, [sp, #88]
    1348:	b	132c <make_path+0x284>
    134c:	b	11cc <make_path+0x124>
    1350:	ldr	x0, [sp, #80]
    1354:	add	x1, sp, #0x60
    1358:	bl	13f8 <__stat>
    135c:	cbz	w0, 13c4 <make_path+0x31c>
    1360:	ldr	x0, [sp, #80]
    1364:	ldur	w1, [x29, #-24]
    1368:	bl	cd0 <mkdir@plt>
    136c:	cbz	w0, 13c4 <make_path+0x31c>
    1370:	ldr	x1, [sp, #80]
    1374:	str	x1, [sp, #16]
    1378:	bl	cb0 <__errno_location@plt>
    137c:	ldr	w0, [x0]
    1380:	bl	c20 <strerror@plt>
    1384:	adrp	x8, 1000 <mkdir_builtin+0x24c>
    1388:	add	x8, x8, #0x432
    138c:	str	x0, [sp, #8]
    1390:	mov	x0, x8
    1394:	ldr	x1, [sp, #16]
    1398:	ldr	x2, [sp, #8]
    139c:	bl	bc0 <builtin_error@plt>
    13a0:	ldr	x8, [sp, #72]
    13a4:	ldr	w0, [x8]
    13a8:	bl	ca0 <umask@plt>
    13ac:	ldr	x8, [sp, #80]
    13b0:	mov	x0, x8
    13b4:	bl	c40 <free@plt>
    13b8:	mov	w9, #0x1                   	// #1
    13bc:	stur	w9, [x29, #-4]
    13c0:	b	13e0 <make_path+0x338>
    13c4:	ldr	x8, [sp, #72]
    13c8:	ldr	w0, [x8]
    13cc:	bl	ca0 <umask@plt>
    13d0:	ldr	x8, [sp, #80]
    13d4:	mov	x0, x8
    13d8:	bl	c40 <free@plt>
    13dc:	stur	wzr, [x29, #-4]
    13e0:	ldur	w0, [x29, #-4]
    13e4:	ldr	x28, [sp, #272]
    13e8:	ldp	x29, x30, [sp, #256]
    13ec:	add	sp, sp, #0x120
    13f0:	ret
    13f4:	nop

00000000000013f8 <__stat>:
    13f8:	mov	x2, x1
    13fc:	mov	x1, x0
    1400:	mov	w0, #0x0                   	// #0
    1404:	b	cc0 <__xstat@plt>

Disassembly of section .fini:

0000000000001408 <_fini>:
    1408:	stp	x29, x30, [sp, #-16]!
    140c:	mov	x29, sp
    1410:	ldp	x29, x30, [sp], #16
    1414:	ret
