
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_posixshmem.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000c38 <.init>:
 c38:	stp	x29, x30, [sp, #-16]!
 c3c:	mov	x29, sp
 c40:	bl	da0 <_PyLong_AsInt@plt+0x10>
 c44:	ldp	x29, x30, [sp], #16
 c48:	ret

Disassembly of section .plt:

0000000000000c50 <_PyUnicode_Ready@plt-0x20>:
 c50:	stp	x16, x30, [sp, #-16]!
 c54:	adrp	x16, 11000 <PyInit__posixshmem@@Base+0x1018c>
 c58:	ldr	x17, [x16, #4088]
 c5c:	add	x16, x16, #0xff8
 c60:	br	x17
 c64:	nop
 c68:	nop
 c6c:	nop

0000000000000c70 <_PyUnicode_Ready@plt>:
 c70:	adrp	x16, 12000 <_PyUnicode_Ready>
 c74:	ldr	x17, [x16]
 c78:	add	x16, x16, #0x0
 c7c:	br	x17

0000000000000c80 <PyEval_RestoreThread@plt>:
 c80:	adrp	x16, 12000 <_PyUnicode_Ready>
 c84:	ldr	x17, [x16, #8]
 c88:	add	x16, x16, #0x8
 c8c:	br	x17

0000000000000c90 <__cxa_finalize@plt>:
 c90:	adrp	x16, 12000 <_PyUnicode_Ready>
 c94:	ldr	x17, [x16, #16]
 c98:	add	x16, x16, #0x10
 c9c:	br	x17

0000000000000ca0 <_PyArg_UnpackKeywords@plt>:
 ca0:	adrp	x16, 12000 <_PyUnicode_Ready>
 ca4:	ldr	x17, [x16, #24]
 ca8:	add	x16, x16, #0x18
 cac:	br	x17

0000000000000cb0 <PyErr_SetString@plt>:
 cb0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cb4:	ldr	x17, [x16, #32]
 cb8:	add	x16, x16, #0x20
 cbc:	br	x17

0000000000000cc0 <PyLong_FromLong@plt>:
 cc0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cc4:	ldr	x17, [x16, #40]
 cc8:	add	x16, x16, #0x28
 ccc:	br	x17

0000000000000cd0 <_PyArg_BadArgument@plt>:
 cd0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cd4:	ldr	x17, [x16, #48]
 cd8:	add	x16, x16, #0x30
 cdc:	br	x17

0000000000000ce0 <__gmon_start__@plt>:
 ce0:	adrp	x16, 12000 <_PyUnicode_Ready>
 ce4:	ldr	x17, [x16, #56]
 ce8:	add	x16, x16, #0x38
 cec:	br	x17

0000000000000cf0 <PyErr_Occurred@plt>:
 cf0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cf4:	ldr	x17, [x16, #64]
 cf8:	add	x16, x16, #0x40
 cfc:	br	x17

0000000000000d00 <PyModule_Create2@plt>:
 d00:	adrp	x16, 12000 <_PyUnicode_Ready>
 d04:	ldr	x17, [x16, #72]
 d08:	add	x16, x16, #0x48
 d0c:	br	x17

0000000000000d10 <PyErr_SetFromErrnoWithFilenameObject@plt>:
 d10:	adrp	x16, 12000 <_PyUnicode_Ready>
 d14:	ldr	x17, [x16, #80]
 d18:	add	x16, x16, #0x50
 d1c:	br	x17

0000000000000d20 <shm_open@plt>:
 d20:	adrp	x16, 12000 <_PyUnicode_Ready>
 d24:	ldr	x17, [x16, #88]
 d28:	add	x16, x16, #0x58
 d2c:	br	x17

0000000000000d30 <PyUnicode_AsUTF8@plt>:
 d30:	adrp	x16, 12000 <_PyUnicode_Ready>
 d34:	ldr	x17, [x16, #96]
 d38:	add	x16, x16, #0x60
 d3c:	br	x17

0000000000000d40 <shm_unlink@plt>:
 d40:	adrp	x16, 12000 <_PyUnicode_Ready>
 d44:	ldr	x17, [x16, #104]
 d48:	add	x16, x16, #0x68
 d4c:	br	x17

0000000000000d50 <PyEval_SaveThread@plt>:
 d50:	adrp	x16, 12000 <_PyUnicode_Ready>
 d54:	ldr	x17, [x16, #112]
 d58:	add	x16, x16, #0x70
 d5c:	br	x17

0000000000000d60 <PyErr_CheckSignals@plt>:
 d60:	adrp	x16, 12000 <_PyUnicode_Ready>
 d64:	ldr	x17, [x16, #120]
 d68:	add	x16, x16, #0x78
 d6c:	br	x17

0000000000000d70 <PyType_IsSubtype@plt>:
 d70:	adrp	x16, 12000 <_PyUnicode_Ready>
 d74:	ldr	x17, [x16, #128]
 d78:	add	x16, x16, #0x80
 d7c:	br	x17

0000000000000d80 <__errno_location@plt>:
 d80:	adrp	x16, 12000 <_PyUnicode_Ready>
 d84:	ldr	x17, [x16, #136]
 d88:	add	x16, x16, #0x88
 d8c:	br	x17

0000000000000d90 <_PyLong_AsInt@plt>:
 d90:	adrp	x16, 12000 <_PyUnicode_Ready>
 d94:	ldr	x17, [x16, #144]
 d98:	add	x16, x16, #0x90
 d9c:	br	x17

Disassembly of section .text:

0000000000000da0 <PyInit__posixshmem@@Base-0xd4>:
     da0:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0x1018c>
     da4:	ldr	x0, [x0, #4048]
     da8:	cbz	x0, db0 <_PyLong_AsInt@plt+0x20>
     dac:	b	ce0 <__gmon_start__@plt>
     db0:	ret
     db4:	nop
     db8:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x1118c>
     dbc:	add	x0, x0, #0x1e8
     dc0:	adrp	x1, 12000 <PyInit__posixshmem@@Base+0x1118c>
     dc4:	add	x1, x1, #0x1e8
     dc8:	cmp	x1, x0
     dcc:	b.eq	de4 <_PyLong_AsInt@plt+0x54>  // b.none
     dd0:	adrp	x1, 11000 <PyInit__posixshmem@@Base+0x1018c>
     dd4:	ldr	x1, [x1, #4008]
     dd8:	cbz	x1, de4 <_PyLong_AsInt@plt+0x54>
     ddc:	mov	x16, x1
     de0:	br	x16
     de4:	ret
     de8:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x1118c>
     dec:	add	x0, x0, #0x1e8
     df0:	adrp	x1, 12000 <PyInit__posixshmem@@Base+0x1118c>
     df4:	add	x1, x1, #0x1e8
     df8:	sub	x1, x1, x0
     dfc:	lsr	x2, x1, #63
     e00:	add	x1, x2, x1, asr #3
     e04:	cmp	xzr, x1, asr #1
     e08:	asr	x1, x1, #1
     e0c:	b.eq	e24 <_PyLong_AsInt@plt+0x94>  // b.none
     e10:	adrp	x2, 11000 <PyInit__posixshmem@@Base+0x1018c>
     e14:	ldr	x2, [x2, #4064]
     e18:	cbz	x2, e24 <_PyLong_AsInt@plt+0x94>
     e1c:	mov	x16, x2
     e20:	br	x16
     e24:	ret
     e28:	stp	x29, x30, [sp, #-32]!
     e2c:	mov	x29, sp
     e30:	str	x19, [sp, #16]
     e34:	adrp	x19, 12000 <PyInit__posixshmem@@Base+0x1118c>
     e38:	ldrb	w0, [x19, #488]
     e3c:	cbnz	w0, e64 <_PyLong_AsInt@plt+0xd4>
     e40:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0x1018c>
     e44:	ldr	x0, [x0, #4024]
     e48:	cbz	x0, e58 <_PyLong_AsInt@plt+0xc8>
     e4c:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x1118c>
     e50:	ldr	x0, [x0, #152]
     e54:	bl	c90 <__cxa_finalize@plt>
     e58:	bl	db8 <_PyLong_AsInt@plt+0x28>
     e5c:	mov	w0, #0x1                   	// #1
     e60:	strb	w0, [x19, #488]
     e64:	ldr	x19, [sp, #16]
     e68:	ldp	x29, x30, [sp], #32
     e6c:	ret
     e70:	b	de8 <_PyLong_AsInt@plt+0x58>

0000000000000e74 <PyInit__posixshmem@@Base>:
     e74:	sub	sp, sp, #0x20
     e78:	stp	x29, x30, [sp, #16]
     e7c:	add	x29, sp, #0x10
     e80:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x1118c>
     e84:	add	x0, x0, #0xa0
     e88:	mov	w1, #0x3f5                 	// #1013
     e8c:	bl	d00 <PyModule_Create2@plt>
     e90:	str	x0, [sp]
     e94:	ldr	x8, [sp]
     e98:	cbnz	x8, ea8 <PyInit__posixshmem@@Base+0x34>
     e9c:	mov	x8, xzr
     ea0:	str	x8, [sp, #8]
     ea4:	b	eb0 <PyInit__posixshmem@@Base+0x3c>
     ea8:	ldr	x8, [sp]
     eac:	str	x8, [sp, #8]
     eb0:	ldr	x0, [sp, #8]
     eb4:	ldp	x29, x30, [sp, #16]
     eb8:	add	sp, sp, #0x20
     ebc:	ret
     ec0:	sub	sp, sp, #0xa0
     ec4:	stp	x29, x30, [sp, #144]
     ec8:	add	x29, sp, #0x90
     ecc:	mov	x8, xzr
     ed0:	adrp	x9, 11000 <PyInit__posixshmem@@Base+0x1018c>
     ed4:	ldr	x9, [x9, #4016]
     ed8:	stur	x0, [x29, #-8]
     edc:	stur	x1, [x29, #-16]
     ee0:	stur	x2, [x29, #-24]
     ee4:	stur	x3, [x29, #-32]
     ee8:	stur	x8, [x29, #-40]
     eec:	ldur	x8, [x29, #-24]
     ef0:	ldur	x10, [x29, #-32]
     ef4:	str	x9, [sp, #40]
     ef8:	str	x8, [sp, #32]
     efc:	cbz	x10, f10 <PyInit__posixshmem@@Base+0x9c>
     f00:	ldur	x8, [x29, #-32]
     f04:	ldr	x8, [x8, #16]
     f08:	str	x8, [sp, #24]
     f0c:	b	f18 <PyInit__posixshmem@@Base+0xa4>
     f10:	mov	x8, xzr
     f14:	str	x8, [sp, #24]
     f18:	ldr	x8, [sp, #24]
     f1c:	ldr	x9, [sp, #32]
     f20:	add	x8, x9, x8
     f24:	subs	x8, x8, #0x2
     f28:	str	x8, [sp, #72]
     f2c:	mov	w10, #0x1ff                 	// #511
     f30:	str	w10, [sp, #56]
     f34:	ldur	x8, [x29, #-32]
     f38:	cbnz	x8, f6c <PyInit__posixshmem@@Base+0xf8>
     f3c:	ldur	x8, [x29, #-24]
     f40:	mov	x9, #0x2                   	// #2
     f44:	cmp	x9, x8
     f48:	b.gt	f6c <PyInit__posixshmem@@Base+0xf8>
     f4c:	ldur	x8, [x29, #-24]
     f50:	cmp	x8, #0x3
     f54:	b.gt	f6c <PyInit__posixshmem@@Base+0xf8>
     f58:	ldur	x8, [x29, #-16]
     f5c:	cbz	x8, f6c <PyInit__posixshmem@@Base+0xf8>
     f60:	ldur	x8, [x29, #-16]
     f64:	str	x8, [sp, #16]
     f68:	b	fac <PyInit__posixshmem@@Base+0x138>
     f6c:	ldur	x0, [x29, #-16]
     f70:	ldur	x1, [x29, #-24]
     f74:	ldur	x3, [x29, #-32]
     f78:	mov	x8, xzr
     f7c:	mov	x2, x8
     f80:	adrp	x4, 12000 <PyInit__posixshmem@@Base+0x1118c>
     f84:	add	x4, x4, #0x168
     f88:	mov	w5, #0x2                   	// #2
     f8c:	mov	w6, #0x3                   	// #3
     f90:	mov	w9, wzr
     f94:	mov	w7, w9
     f98:	mov	x8, sp
     f9c:	sub	x10, x29, #0x40
     fa0:	str	x10, [x8]
     fa4:	bl	ca0 <_PyArg_UnpackKeywords@plt>
     fa8:	str	x0, [sp, #16]
     fac:	ldr	x8, [sp, #16]
     fb0:	stur	x8, [x29, #-16]
     fb4:	ldur	x8, [x29, #-16]
     fb8:	cbnz	x8, fc0 <PyInit__posixshmem@@Base+0x14c>
     fbc:	b	1190 <PyInit__posixshmem@@Base+0x31c>
     fc0:	ldur	x8, [x29, #-16]
     fc4:	ldr	x8, [x8]
     fc8:	ldr	x8, [x8, #8]
     fcc:	ldr	x8, [x8, #168]
     fd0:	and	x8, x8, #0x10000000
     fd4:	cbnz	x8, 1000 <PyInit__posixshmem@@Base+0x18c>
     fd8:	ldur	x8, [x29, #-16]
     fdc:	ldr	x3, [x8]
     fe0:	adrp	x0, 1000 <PyInit__posixshmem@@Base+0x18c>
     fe4:	add	x0, x0, #0x56b
     fe8:	adrp	x1, 1000 <PyInit__posixshmem@@Base+0x18c>
     fec:	add	x1, x1, #0x58f
     ff0:	adrp	x2, 1000 <PyInit__posixshmem@@Base+0x18c>
     ff4:	add	x2, x2, #0x59f
     ff8:	bl	cd0 <_PyArg_BadArgument@plt>
     ffc:	b	1190 <PyInit__posixshmem@@Base+0x31c>
    1000:	ldur	x8, [x29, #-16]
    1004:	ldr	x8, [x8]
    1008:	ldr	w9, [x8, #32]
    100c:	lsr	w9, w9, #7
    1010:	and	w9, w9, #0x1
    1014:	cbz	w9, 1024 <PyInit__posixshmem@@Base+0x1b0>
    1018:	mov	w8, wzr
    101c:	str	w8, [sp, #12]
    1020:	b	1034 <PyInit__posixshmem@@Base+0x1c0>
    1024:	ldur	x8, [x29, #-16]
    1028:	ldr	x0, [x8]
    102c:	bl	c70 <_PyUnicode_Ready@plt>
    1030:	str	w0, [sp, #12]
    1034:	ldr	w8, [sp, #12]
    1038:	mov	w9, #0xffffffff            	// #-1
    103c:	cmp	w8, w9
    1040:	b.ne	1048 <PyInit__posixshmem@@Base+0x1d4>  // b.any
    1044:	b	1190 <PyInit__posixshmem@@Base+0x31c>
    1048:	ldur	x8, [x29, #-16]
    104c:	ldr	x8, [x8]
    1050:	str	x8, [sp, #64]
    1054:	ldur	x8, [x29, #-16]
    1058:	ldr	x8, [x8, #8]
    105c:	ldr	x8, [x8, #8]
    1060:	ldr	x9, [sp, #40]
    1064:	cmp	x8, x9
    1068:	b.eq	1084 <PyInit__posixshmem@@Base+0x210>  // b.none
    106c:	ldur	x8, [x29, #-16]
    1070:	ldr	x8, [x8, #8]
    1074:	ldr	x0, [x8, #8]
    1078:	ldr	x1, [sp, #40]
    107c:	bl	d70 <PyType_IsSubtype@plt>
    1080:	cbz	w0, 10a0 <PyInit__posixshmem@@Base+0x22c>
    1084:	adrp	x8, 11000 <PyInit__posixshmem@@Base+0x1018c>
    1088:	ldr	x8, [x8, #4032]
    108c:	ldr	x0, [x8]
    1090:	adrp	x1, 1000 <PyInit__posixshmem@@Base+0x18c>
    1094:	add	x1, x1, #0x5a3
    1098:	bl	cb0 <PyErr_SetString@plt>
    109c:	b	1190 <PyInit__posixshmem@@Base+0x31c>
    10a0:	ldur	x8, [x29, #-16]
    10a4:	ldr	x0, [x8, #8]
    10a8:	bl	d90 <_PyLong_AsInt@plt>
    10ac:	str	w0, [sp, #60]
    10b0:	ldr	w9, [sp, #60]
    10b4:	mov	w10, #0xffffffff            	// #-1
    10b8:	cmp	w9, w10
    10bc:	b.ne	10cc <PyInit__posixshmem@@Base+0x258>  // b.any
    10c0:	bl	cf0 <PyErr_Occurred@plt>
    10c4:	cbz	x0, 10cc <PyInit__posixshmem@@Base+0x258>
    10c8:	b	1190 <PyInit__posixshmem@@Base+0x31c>
    10cc:	ldr	x8, [sp, #72]
    10d0:	cbnz	x8, 10d8 <PyInit__posixshmem@@Base+0x264>
    10d4:	b	1150 <PyInit__posixshmem@@Base+0x2dc>
    10d8:	ldur	x8, [x29, #-16]
    10dc:	ldr	x8, [x8, #16]
    10e0:	ldr	x8, [x8, #8]
    10e4:	ldr	x9, [sp, #40]
    10e8:	cmp	x8, x9
    10ec:	b.eq	1108 <PyInit__posixshmem@@Base+0x294>  // b.none
    10f0:	ldur	x8, [x29, #-16]
    10f4:	ldr	x8, [x8, #16]
    10f8:	ldr	x0, [x8, #8]
    10fc:	ldr	x1, [sp, #40]
    1100:	bl	d70 <PyType_IsSubtype@plt>
    1104:	cbz	w0, 1124 <PyInit__posixshmem@@Base+0x2b0>
    1108:	adrp	x8, 11000 <PyInit__posixshmem@@Base+0x1018c>
    110c:	ldr	x8, [x8, #4032]
    1110:	ldr	x0, [x8]
    1114:	adrp	x1, 1000 <PyInit__posixshmem@@Base+0x18c>
    1118:	add	x1, x1, #0x5a3
    111c:	bl	cb0 <PyErr_SetString@plt>
    1120:	b	1190 <PyInit__posixshmem@@Base+0x31c>
    1124:	ldur	x8, [x29, #-16]
    1128:	ldr	x0, [x8, #16]
    112c:	bl	d90 <_PyLong_AsInt@plt>
    1130:	str	w0, [sp, #56]
    1134:	ldr	w9, [sp, #56]
    1138:	mov	w10, #0xffffffff            	// #-1
    113c:	cmp	w9, w10
    1140:	b.ne	1150 <PyInit__posixshmem@@Base+0x2dc>  // b.any
    1144:	bl	cf0 <PyErr_Occurred@plt>
    1148:	cbz	x0, 1150 <PyInit__posixshmem@@Base+0x2dc>
    114c:	b	1190 <PyInit__posixshmem@@Base+0x31c>
    1150:	ldur	x0, [x29, #-8]
    1154:	ldr	x1, [sp, #64]
    1158:	ldr	w2, [sp, #60]
    115c:	ldr	w3, [sp, #56]
    1160:	bl	1308 <PyInit__posixshmem@@Base+0x494>
    1164:	str	w0, [sp, #52]
    1168:	ldr	w8, [sp, #52]
    116c:	mov	w9, #0xffffffff            	// #-1
    1170:	cmp	w8, w9
    1174:	b.ne	1184 <PyInit__posixshmem@@Base+0x310>  // b.any
    1178:	bl	cf0 <PyErr_Occurred@plt>
    117c:	cbz	x0, 1184 <PyInit__posixshmem@@Base+0x310>
    1180:	b	1190 <PyInit__posixshmem@@Base+0x31c>
    1184:	ldrsw	x0, [sp, #52]
    1188:	bl	cc0 <PyLong_FromLong@plt>
    118c:	stur	x0, [x29, #-40]
    1190:	ldur	x0, [x29, #-40]
    1194:	ldp	x29, x30, [sp, #144]
    1198:	add	sp, sp, #0xa0
    119c:	ret
    11a0:	sub	sp, sp, #0x60
    11a4:	stp	x29, x30, [sp, #80]
    11a8:	add	x29, sp, #0x50
    11ac:	mov	x8, xzr
    11b0:	stur	x0, [x29, #-8]
    11b4:	stur	x1, [x29, #-16]
    11b8:	stur	x2, [x29, #-24]
    11bc:	stur	x3, [x29, #-32]
    11c0:	str	x8, [sp, #40]
    11c4:	ldur	x8, [x29, #-32]
    11c8:	cbnz	x8, 11fc <PyInit__posixshmem@@Base+0x388>
    11cc:	ldur	x8, [x29, #-24]
    11d0:	mov	x9, #0x1                   	// #1
    11d4:	cmp	x9, x8
    11d8:	b.gt	11fc <PyInit__posixshmem@@Base+0x388>
    11dc:	ldur	x8, [x29, #-24]
    11e0:	cmp	x8, #0x1
    11e4:	b.gt	11fc <PyInit__posixshmem@@Base+0x388>
    11e8:	ldur	x8, [x29, #-16]
    11ec:	cbz	x8, 11fc <PyInit__posixshmem@@Base+0x388>
    11f0:	ldur	x8, [x29, #-16]
    11f4:	str	x8, [sp, #16]
    11f8:	b	1240 <PyInit__posixshmem@@Base+0x3cc>
    11fc:	ldur	x0, [x29, #-16]
    1200:	ldur	x1, [x29, #-24]
    1204:	ldur	x3, [x29, #-32]
    1208:	mov	x8, xzr
    120c:	mov	x2, x8
    1210:	adrp	x4, 12000 <PyInit__posixshmem@@Base+0x1118c>
    1214:	add	x4, x4, #0x1a8
    1218:	mov	w9, #0x1                   	// #1
    121c:	mov	w5, w9
    1220:	mov	w6, w9
    1224:	mov	w9, wzr
    1228:	mov	w7, w9
    122c:	mov	x8, sp
    1230:	add	x10, sp, #0x20
    1234:	str	x10, [x8]
    1238:	bl	ca0 <_PyArg_UnpackKeywords@plt>
    123c:	str	x0, [sp, #16]
    1240:	ldr	x8, [sp, #16]
    1244:	stur	x8, [x29, #-16]
    1248:	ldur	x8, [x29, #-16]
    124c:	cbnz	x8, 1254 <PyInit__posixshmem@@Base+0x3e0>
    1250:	b	12f8 <PyInit__posixshmem@@Base+0x484>
    1254:	ldur	x8, [x29, #-16]
    1258:	ldr	x8, [x8]
    125c:	ldr	x8, [x8, #8]
    1260:	ldr	x8, [x8, #168]
    1264:	and	x8, x8, #0x10000000
    1268:	cbnz	x8, 1294 <PyInit__posixshmem@@Base+0x420>
    126c:	ldur	x8, [x29, #-16]
    1270:	ldr	x3, [x8]
    1274:	adrp	x0, 1000 <PyInit__posixshmem@@Base+0x18c>
    1278:	add	x0, x0, #0x574
    127c:	adrp	x1, 1000 <PyInit__posixshmem@@Base+0x18c>
    1280:	add	x1, x1, #0x58f
    1284:	adrp	x2, 1000 <PyInit__posixshmem@@Base+0x18c>
    1288:	add	x2, x2, #0x59f
    128c:	bl	cd0 <_PyArg_BadArgument@plt>
    1290:	b	12f8 <PyInit__posixshmem@@Base+0x484>
    1294:	ldur	x8, [x29, #-16]
    1298:	ldr	x8, [x8]
    129c:	ldr	w9, [x8, #32]
    12a0:	lsr	w9, w9, #7
    12a4:	and	w9, w9, #0x1
    12a8:	cbz	w9, 12b8 <PyInit__posixshmem@@Base+0x444>
    12ac:	mov	w8, wzr
    12b0:	str	w8, [sp, #12]
    12b4:	b	12c8 <PyInit__posixshmem@@Base+0x454>
    12b8:	ldur	x8, [x29, #-16]
    12bc:	ldr	x0, [x8]
    12c0:	bl	c70 <_PyUnicode_Ready@plt>
    12c4:	str	w0, [sp, #12]
    12c8:	ldr	w8, [sp, #12]
    12cc:	mov	w9, #0xffffffff            	// #-1
    12d0:	cmp	w8, w9
    12d4:	b.ne	12dc <PyInit__posixshmem@@Base+0x468>  // b.any
    12d8:	b	12f8 <PyInit__posixshmem@@Base+0x484>
    12dc:	ldur	x8, [x29, #-16]
    12e0:	ldr	x8, [x8]
    12e4:	str	x8, [sp, #24]
    12e8:	ldur	x0, [x29, #-8]
    12ec:	ldr	x1, [sp, #24]
    12f0:	bl	140c <PyInit__posixshmem@@Base+0x598>
    12f4:	str	x0, [sp, #40]
    12f8:	ldr	x0, [sp, #40]
    12fc:	ldp	x29, x30, [sp, #80]
    1300:	add	sp, sp, #0x60
    1304:	ret
    1308:	sub	sp, sp, #0x50
    130c:	stp	x29, x30, [sp, #64]
    1310:	add	x29, sp, #0x40
    1314:	stur	x0, [x29, #-16]
    1318:	stur	x1, [x29, #-24]
    131c:	stur	w2, [x29, #-28]
    1320:	str	w3, [sp, #32]
    1324:	str	wzr, [sp, #24]
    1328:	ldur	x0, [x29, #-24]
    132c:	bl	d30 <PyUnicode_AsUTF8@plt>
    1330:	str	x0, [sp, #16]
    1334:	ldr	x8, [sp, #16]
    1338:	cbnz	x8, 1348 <PyInit__posixshmem@@Base+0x4d4>
    133c:	mov	w8, #0xffffffff            	// #-1
    1340:	stur	w8, [x29, #-4]
    1344:	b	13fc <PyInit__posixshmem@@Base+0x588>
    1348:	bl	d50 <PyEval_SaveThread@plt>
    134c:	str	x0, [sp, #8]
    1350:	ldr	x0, [sp, #16]
    1354:	ldur	w1, [x29, #-28]
    1358:	ldr	w2, [sp, #32]
    135c:	bl	d20 <shm_open@plt>
    1360:	str	w0, [sp, #28]
    1364:	ldr	x0, [sp, #8]
    1368:	bl	c80 <PyEval_RestoreThread@plt>
    136c:	ldr	w8, [sp, #28]
    1370:	cmp	w8, #0x0
    1374:	cset	w8, ge  // ge = tcont
    1378:	mov	w9, #0x0                   	// #0
    137c:	str	w9, [sp, #4]
    1380:	tbnz	w8, #0, 13b4 <PyInit__posixshmem@@Base+0x540>
    1384:	bl	d80 <__errno_location@plt>
    1388:	ldr	w8, [x0]
    138c:	mov	w9, #0x0                   	// #0
    1390:	cmp	w8, #0x4
    1394:	str	w9, [sp, #4]
    1398:	b.ne	13b4 <PyInit__posixshmem@@Base+0x540>  // b.any
    139c:	bl	d60 <PyErr_CheckSignals@plt>
    13a0:	str	w0, [sp, #24]
    13a4:	cmp	w0, #0x0
    13a8:	cset	w8, ne  // ne = any
    13ac:	eor	w8, w8, #0x1
    13b0:	str	w8, [sp, #4]
    13b4:	ldr	w8, [sp, #4]
    13b8:	tbnz	w8, #0, 1348 <PyInit__posixshmem@@Base+0x4d4>
    13bc:	ldr	w8, [sp, #28]
    13c0:	cmp	w8, #0x0
    13c4:	cset	w8, ge  // ge = tcont
    13c8:	tbnz	w8, #0, 13f4 <PyInit__posixshmem@@Base+0x580>
    13cc:	ldr	w8, [sp, #24]
    13d0:	cbnz	w8, 13e8 <PyInit__posixshmem@@Base+0x574>
    13d4:	adrp	x8, 11000 <PyInit__posixshmem@@Base+0x1018c>
    13d8:	ldr	x8, [x8, #4040]
    13dc:	ldr	x0, [x8]
    13e0:	ldur	x1, [x29, #-24]
    13e4:	bl	d10 <PyErr_SetFromErrnoWithFilenameObject@plt>
    13e8:	mov	w8, #0xffffffff            	// #-1
    13ec:	stur	w8, [x29, #-4]
    13f0:	b	13fc <PyInit__posixshmem@@Base+0x588>
    13f4:	ldr	w8, [sp, #28]
    13f8:	stur	w8, [x29, #-4]
    13fc:	ldur	w0, [x29, #-4]
    1400:	ldp	x29, x30, [sp, #64]
    1404:	add	sp, sp, #0x50
    1408:	ret
    140c:	sub	sp, sp, #0x50
    1410:	stp	x29, x30, [sp, #64]
    1414:	add	x29, sp, #0x40
    1418:	stur	x0, [x29, #-16]
    141c:	stur	x1, [x29, #-24]
    1420:	str	wzr, [sp, #32]
    1424:	ldur	x0, [x29, #-24]
    1428:	bl	d30 <PyUnicode_AsUTF8@plt>
    142c:	str	x0, [sp, #24]
    1430:	ldr	x8, [sp, #24]
    1434:	cbnz	x8, 1444 <PyInit__posixshmem@@Base+0x5d0>
    1438:	mov	x8, xzr
    143c:	stur	x8, [x29, #-8]
    1440:	b	1504 <PyInit__posixshmem@@Base+0x690>
    1444:	bl	d50 <PyEval_SaveThread@plt>
    1448:	str	x0, [sp, #16]
    144c:	ldr	x0, [sp, #24]
    1450:	bl	d40 <shm_unlink@plt>
    1454:	stur	w0, [x29, #-28]
    1458:	ldr	x0, [sp, #16]
    145c:	bl	c80 <PyEval_RestoreThread@plt>
    1460:	ldur	w8, [x29, #-28]
    1464:	cmp	w8, #0x0
    1468:	cset	w8, ge  // ge = tcont
    146c:	mov	w9, #0x0                   	// #0
    1470:	str	w9, [sp, #12]
    1474:	tbnz	w8, #0, 14a8 <PyInit__posixshmem@@Base+0x634>
    1478:	bl	d80 <__errno_location@plt>
    147c:	ldr	w8, [x0]
    1480:	mov	w9, #0x0                   	// #0
    1484:	cmp	w8, #0x4
    1488:	str	w9, [sp, #12]
    148c:	b.ne	14a8 <PyInit__posixshmem@@Base+0x634>  // b.any
    1490:	bl	d60 <PyErr_CheckSignals@plt>
    1494:	str	w0, [sp, #32]
    1498:	cmp	w0, #0x0
    149c:	cset	w8, ne  // ne = any
    14a0:	eor	w8, w8, #0x1
    14a4:	str	w8, [sp, #12]
    14a8:	ldr	w8, [sp, #12]
    14ac:	tbnz	w8, #0, 1444 <PyInit__posixshmem@@Base+0x5d0>
    14b0:	ldur	w8, [x29, #-28]
    14b4:	cmp	w8, #0x0
    14b8:	cset	w8, ge  // ge = tcont
    14bc:	tbnz	w8, #0, 14e8 <PyInit__posixshmem@@Base+0x674>
    14c0:	ldr	w8, [sp, #32]
    14c4:	cbnz	w8, 14dc <PyInit__posixshmem@@Base+0x668>
    14c8:	adrp	x8, 11000 <PyInit__posixshmem@@Base+0x1018c>
    14cc:	ldr	x8, [x8, #4040]
    14d0:	ldr	x0, [x8]
    14d4:	ldur	x1, [x29, #-24]
    14d8:	bl	d10 <PyErr_SetFromErrnoWithFilenameObject@plt>
    14dc:	mov	x8, xzr
    14e0:	stur	x8, [x29, #-8]
    14e4:	b	1504 <PyInit__posixshmem@@Base+0x690>
    14e8:	adrp	x8, 11000 <PyInit__posixshmem@@Base+0x1018c>
    14ec:	ldr	x8, [x8, #4056]
    14f0:	mov	x0, x8
    14f4:	str	x8, [sp]
    14f8:	bl	1514 <PyInit__posixshmem@@Base+0x6a0>
    14fc:	ldr	x8, [sp]
    1500:	stur	x8, [x29, #-8]
    1504:	ldur	x0, [x29, #-8]
    1508:	ldp	x29, x30, [sp, #64]
    150c:	add	sp, sp, #0x50
    1510:	ret
    1514:	sub	sp, sp, #0x10
    1518:	str	x0, [sp, #8]
    151c:	ldr	x8, [sp, #8]
    1520:	ldr	x9, [x8]
    1524:	add	x9, x9, #0x1
    1528:	str	x9, [x8]
    152c:	add	sp, sp, #0x10
    1530:	ret

Disassembly of section .fini:

0000000000001534 <.fini>:
    1534:	stp	x29, x30, [sp, #-16]!
    1538:	mov	x29, sp
    153c:	ldp	x29, x30, [sp], #16
    1540:	ret
