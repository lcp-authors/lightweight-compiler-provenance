In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.profile-aarch64.a_gcc_-O0:

GCDAProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <fn_list_insert>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	str	x1, [sp, #16]
      10:	mov	x0, #0x18                  	// #24
      14:	bl	0 <malloc>
      18:	str	x0, [sp, #40]
      1c:	ldr	x0, [sp, #40]
      20:	ldr	x1, [sp, #16]
      24:	str	x1, [x0, #8]
      28:	ldr	x0, [sp, #40]
      2c:	str	xzr, [x0, #16]
      30:	ldr	x0, [sp, #40]
      34:	adrp	x1, 0 <fn_list_insert>
      38:	add	x1, x1, #0x0
      3c:	str	x1, [x0]
      40:	ldr	x0, [sp, #24]
      44:	ldr	x0, [x0]
      48:	cmp	x0, #0x0
      4c:	b.ne	70 <fn_list_insert+0x70>  // b.any
      50:	ldr	x0, [sp, #24]
      54:	ldr	x1, [sp, #40]
      58:	str	x1, [x0, #8]
      5c:	ldr	x0, [sp, #24]
      60:	ldr	x1, [x0, #8]
      64:	ldr	x0, [sp, #24]
      68:	str	x1, [x0]
      6c:	b	8c <fn_list_insert+0x8c>
      70:	ldr	x0, [sp, #24]
      74:	ldr	x0, [x0, #8]
      78:	ldr	x1, [sp, #40]
      7c:	str	x1, [x0, #16]
      80:	ldr	x0, [sp, #24]
      84:	ldr	x1, [sp, #40]
      88:	str	x1, [x0, #8]
      8c:	nop
      90:	ldp	x29, x30, [sp], #48
      94:	ret

0000000000000098 <fn_list_remove>:
      98:	stp	x29, x30, [sp, #-64]!
      9c:	mov	x29, sp
      a0:	str	x0, [sp, #24]
      a4:	ldr	x0, [sp, #24]
      a8:	ldr	x0, [x0]
      ac:	str	x0, [sp, #56]
      b0:	str	xzr, [sp, #48]
      b4:	str	xzr, [sp, #40]
      b8:	b	154 <fn_list_remove+0xbc>
      bc:	ldr	x0, [sp, #56]
      c0:	ldr	x0, [x0, #16]
      c4:	str	x0, [sp, #40]
      c8:	ldr	x0, [sp, #56]
      cc:	ldr	x1, [x0]
      d0:	adrp	x0, 0 <fn_list_insert>
      d4:	add	x0, x0, #0x0
      d8:	cmp	x1, x0
      dc:	b.ne	144 <fn_list_remove+0xac>  // b.any
      e0:	ldr	x0, [sp, #24]
      e4:	ldr	x0, [x0]
      e8:	ldr	x1, [sp, #56]
      ec:	cmp	x1, x0
      f0:	b.ne	100 <fn_list_remove+0x68>  // b.any
      f4:	ldr	x0, [sp, #24]
      f8:	ldr	x1, [sp, #40]
      fc:	str	x1, [x0]
     100:	ldr	x0, [sp, #24]
     104:	ldr	x0, [x0, #8]
     108:	ldr	x1, [sp, #56]
     10c:	cmp	x1, x0
     110:	b.ne	120 <fn_list_remove+0x88>  // b.any
     114:	ldr	x0, [sp, #24]
     118:	ldr	x1, [sp, #48]
     11c:	str	x1, [x0, #8]
     120:	ldr	x0, [sp, #48]
     124:	cmp	x0, #0x0
     128:	b.eq	138 <fn_list_remove+0xa0>  // b.none
     12c:	ldr	x0, [sp, #48]
     130:	ldr	x1, [sp, #40]
     134:	str	x1, [x0, #16]
     138:	ldr	x0, [sp, #56]
     13c:	bl	0 <free>
     140:	b	14c <fn_list_remove+0xb4>
     144:	ldr	x0, [sp, #56]
     148:	str	x0, [sp, #48]
     14c:	ldr	x0, [sp, #40]
     150:	str	x0, [sp, #56]
     154:	ldr	x0, [sp, #56]
     158:	cmp	x0, #0x0
     15c:	b.ne	bc <fn_list_remove+0x24>  // b.any
     160:	nop
     164:	nop
     168:	ldp	x29, x30, [sp], #64
     16c:	ret

0000000000000170 <resize_write_buffer>:
     170:	stp	x29, x30, [sp, #-32]!
     174:	mov	x29, sp
     178:	str	x0, [sp, #24]
     17c:	adrp	x0, 0 <fn_list_insert>
     180:	add	x0, x0, #0x0
     184:	ldr	w0, [x0]
     188:	cmp	w0, #0x0
     18c:	b.eq	218 <resize_write_buffer+0xa8>  // b.none
     190:	adrp	x0, 0 <fn_list_insert>
     194:	add	x0, x0, #0x0
     198:	ldr	x0, [x0]
     19c:	ldr	x1, [sp, #24]
     1a0:	add	x0, x1, x0
     1a4:	str	x0, [sp, #24]
     1a8:	adrp	x0, 0 <fn_list_insert>
     1ac:	add	x0, x0, #0x0
     1b0:	ldr	x0, [x0]
     1b4:	ldr	x1, [sp, #24]
     1b8:	cmp	x1, x0
     1bc:	b.ls	220 <resize_write_buffer+0xb0>  // b.plast
     1c0:	ldr	x0, [sp, #24]
     1c4:	sub	x0, x0, #0x1
     1c8:	lsr	x0, x0, #17
     1cc:	add	x0, x0, #0x1
     1d0:	str	x0, [sp, #24]
     1d4:	ldr	x0, [sp, #24]
     1d8:	lsl	x0, x0, #17
     1dc:	str	x0, [sp, #24]
     1e0:	adrp	x0, 0 <fn_list_insert>
     1e4:	add	x0, x0, #0x0
     1e8:	ldr	x0, [x0]
     1ec:	ldr	x1, [sp, #24]
     1f0:	bl	0 <realloc>
     1f4:	mov	x1, x0
     1f8:	adrp	x0, 0 <fn_list_insert>
     1fc:	add	x0, x0, #0x0
     200:	str	x1, [x0]
     204:	adrp	x0, 0 <fn_list_insert>
     208:	add	x0, x0, #0x0
     20c:	ldr	x1, [sp, #24]
     210:	str	x1, [x0]
     214:	b	224 <resize_write_buffer+0xb4>
     218:	nop
     21c:	b	224 <resize_write_buffer+0xb4>
     220:	nop
     224:	ldp	x29, x30, [sp], #32
     228:	ret

000000000000022c <write_bytes>:
     22c:	stp	x29, x30, [sp, #-32]!
     230:	mov	x29, sp
     234:	str	x0, [sp, #24]
     238:	str	x1, [sp, #16]
     23c:	ldr	x0, [sp, #16]
     240:	bl	170 <resize_write_buffer>
     244:	adrp	x0, 0 <fn_list_insert>
     248:	add	x0, x0, #0x0
     24c:	ldr	x1, [x0]
     250:	adrp	x0, 0 <fn_list_insert>
     254:	add	x0, x0, #0x0
     258:	ldr	x0, [x0]
     25c:	add	x0, x1, x0
     260:	ldr	x2, [sp, #16]
     264:	ldr	x1, [sp, #24]
     268:	bl	0 <memcpy>
     26c:	adrp	x0, 0 <fn_list_insert>
     270:	add	x0, x0, #0x0
     274:	ldr	x1, [x0]
     278:	ldr	x0, [sp, #16]
     27c:	add	x1, x1, x0
     280:	adrp	x0, 0 <fn_list_insert>
     284:	add	x0, x0, #0x0
     288:	str	x1, [x0]
     28c:	nop
     290:	ldp	x29, x30, [sp], #32
     294:	ret

0000000000000298 <write_32bit_value>:
     298:	stp	x29, x30, [sp, #-32]!
     29c:	mov	x29, sp
     2a0:	str	w0, [sp, #28]
     2a4:	add	x0, sp, #0x1c
     2a8:	mov	x1, #0x4                   	// #4
     2ac:	bl	22c <write_bytes>
     2b0:	nop
     2b4:	ldp	x29, x30, [sp], #32
     2b8:	ret

00000000000002bc <write_64bit_value>:
     2bc:	stp	x29, x30, [sp, #-48]!
     2c0:	mov	x29, sp
     2c4:	str	x0, [sp, #24]
     2c8:	ldr	x0, [sp, #24]
     2cc:	str	w0, [sp, #44]
     2d0:	ldr	x0, [sp, #24]
     2d4:	lsr	x0, x0, #32
     2d8:	str	w0, [sp, #40]
     2dc:	ldr	w0, [sp, #44]
     2e0:	bl	298 <write_32bit_value>
     2e4:	ldr	w0, [sp, #40]
     2e8:	bl	298 <write_32bit_value>
     2ec:	nop
     2f0:	ldp	x29, x30, [sp], #48
     2f4:	ret

00000000000002f8 <length_of_string>:
     2f8:	stp	x29, x30, [sp, #-32]!
     2fc:	mov	x29, sp
     300:	str	x0, [sp, #24]
     304:	ldr	x0, [sp, #24]
     308:	bl	0 <strlen>
     30c:	lsr	x0, x0, #2
     310:	add	w0, w0, #0x1
     314:	ldp	x29, x30, [sp], #32
     318:	ret

000000000000031c <write_string>:
     31c:	stp	x29, x30, [sp, #-48]!
     320:	mov	x29, sp
     324:	str	x0, [sp, #24]
     328:	ldr	x0, [sp, #24]
     32c:	bl	2f8 <length_of_string>
     330:	str	w0, [sp, #44]
     334:	ldr	w0, [sp, #44]
     338:	bl	298 <write_32bit_value>
     33c:	ldr	x0, [sp, #24]
     340:	bl	0 <strlen>
     344:	mov	x1, x0
     348:	ldr	x0, [sp, #24]
     34c:	bl	22c <write_bytes>
     350:	ldr	x0, [sp, #24]
     354:	bl	0 <strlen>
     358:	and	x0, x0, #0x3
     35c:	mov	x1, #0x4                   	// #4
     360:	sub	x0, x1, x0
     364:	mov	x1, x0
     368:	adrp	x0, 0 <fn_list_insert>
     36c:	add	x0, x0, #0x0
     370:	bl	22c <write_bytes>
     374:	nop
     378:	ldp	x29, x30, [sp], #48
     37c:	ret

0000000000000380 <read_32bit_value>:
     380:	sub	sp, sp, #0x10
     384:	adrp	x0, 0 <fn_list_insert>
     388:	add	x0, x0, #0x0
     38c:	ldr	w0, [x0]
     390:	cmp	w0, #0x0
     394:	b.eq	3a0 <read_32bit_value+0x20>  // b.none
     398:	mov	w0, #0xffffffff            	// #-1
     39c:	b	3e4 <read_32bit_value+0x64>
     3a0:	adrp	x0, 0 <fn_list_insert>
     3a4:	add	x0, x0, #0x0
     3a8:	ldr	x1, [x0]
     3ac:	adrp	x0, 0 <fn_list_insert>
     3b0:	add	x0, x0, #0x0
     3b4:	ldr	x0, [x0]
     3b8:	add	x0, x1, x0
     3bc:	ldr	w0, [x0]
     3c0:	str	w0, [sp, #12]
     3c4:	adrp	x0, 0 <fn_list_insert>
     3c8:	add	x0, x0, #0x0
     3cc:	ldr	x0, [x0]
     3d0:	add	x1, x0, #0x4
     3d4:	adrp	x0, 0 <fn_list_insert>
     3d8:	add	x0, x0, #0x0
     3dc:	str	x1, [x0]
     3e0:	ldr	w0, [sp, #12]
     3e4:	add	sp, sp, #0x10
     3e8:	ret

00000000000003ec <read_le_32bit_value>:
     3ec:	sub	sp, sp, #0x10
     3f0:	str	wzr, [sp, #12]
     3f4:	adrp	x0, 0 <fn_list_insert>
     3f8:	add	x0, x0, #0x0
     3fc:	ldr	w0, [x0]
     400:	cmp	w0, #0x0
     404:	b.eq	410 <read_le_32bit_value+0x24>  // b.none
     408:	mov	w0, #0xffffffff            	// #-1
     40c:	b	484 <read_le_32bit_value+0x98>
     410:	str	wzr, [sp, #8]
     414:	b	474 <read_le_32bit_value+0x88>
     418:	adrp	x0, 0 <fn_list_insert>
     41c:	add	x0, x0, #0x0
     420:	ldr	x1, [x0]
     424:	adrp	x0, 0 <fn_list_insert>
     428:	add	x0, x0, #0x0
     42c:	ldr	x0, [x0]
     430:	add	x3, x0, #0x1
     434:	adrp	x2, 0 <fn_list_insert>
     438:	add	x2, x2, #0x0
     43c:	str	x3, [x2]
     440:	add	x0, x1, x0
     444:	ldrb	w0, [x0]
     448:	mov	w1, w0
     44c:	ldr	w0, [sp, #8]
     450:	lsl	w0, w0, #3
     454:	lsl	w0, w1, w0
     458:	mov	w1, w0
     45c:	ldr	w0, [sp, #12]
     460:	orr	w0, w0, w1
     464:	str	w0, [sp, #12]
     468:	ldr	w0, [sp, #8]
     46c:	add	w0, w0, #0x1
     470:	str	w0, [sp, #8]
     474:	ldr	w0, [sp, #8]
     478:	cmp	w0, #0x3
     47c:	b.le	418 <read_le_32bit_value+0x2c>
     480:	ldr	w0, [sp, #12]
     484:	add	sp, sp, #0x10
     488:	ret

000000000000048c <read_64bit_value>:
     48c:	stp	x29, x30, [sp, #-32]!
     490:	mov	x29, sp
     494:	bl	380 <read_32bit_value>
     498:	str	w0, [sp, #28]
     49c:	bl	380 <read_32bit_value>
     4a0:	str	w0, [sp, #24]
     4a4:	ldr	w0, [sp, #24]
     4a8:	lsl	x1, x0, #32
     4ac:	ldr	w0, [sp, #28]
     4b0:	orr	x0, x1, x0
     4b4:	ldp	x29, x30, [sp], #32
     4b8:	ret

00000000000004bc <mangle_filename>:
     4bc:	stp	x29, x30, [sp, #-64]!
     4c0:	mov	x29, sp
     4c4:	str	x0, [sp, #24]
     4c8:	add	x1, sp, #0x28
     4cc:	add	x0, sp, #0x24
     4d0:	bl	0 <lprofGetPathPrefix>
     4d4:	str	x0, [sp, #56]
     4d8:	ldr	x0, [sp, #56]
     4dc:	cmp	x0, #0x0
     4e0:	b.ne	4f0 <mangle_filename+0x34>  // b.any
     4e4:	ldr	x0, [sp, #24]
     4e8:	bl	0 <strdup>
     4ec:	b	534 <mangle_filename+0x78>
     4f0:	ldr	x0, [sp, #24]
     4f4:	bl	0 <strlen>
     4f8:	mov	x1, x0
     4fc:	ldr	x0, [sp, #40]
     500:	add	x0, x1, x0
     504:	add	x0, x0, #0x2
     508:	bl	0 <malloc>
     50c:	str	x0, [sp, #48]
     510:	ldr	x0, [sp, #40]
     514:	ldr	w1, [sp, #36]
     518:	mov	w4, w1
     51c:	mov	x3, x0
     520:	ldr	x2, [sp, #56]
     524:	ldr	x1, [sp, #24]
     528:	ldr	x0, [sp, #48]
     52c:	bl	0 <lprofApplyPathPrefix>
     530:	ldr	x0, [sp, #48]
     534:	ldp	x29, x30, [sp], #64
     538:	ret

000000000000053c <map_file>:
     53c:	stp	x29, x30, [sp, #-48]!
     540:	mov	x29, sp
     544:	stp	x19, x20, [sp, #16]
     548:	adrp	x0, 0 <fn_list_insert>
     54c:	add	x0, x0, #0x0
     550:	ldr	x0, [x0]
     554:	mov	w2, #0x2                   	// #2
     558:	mov	x1, #0x0                   	// #0
     55c:	bl	0 <fseek>
     560:	adrp	x0, 0 <fn_list_insert>
     564:	add	x0, x0, #0x0
     568:	ldr	x0, [x0]
     56c:	bl	0 <ftell>
     570:	mov	x1, x0
     574:	adrp	x0, 0 <fn_list_insert>
     578:	add	x0, x0, #0x0
     57c:	str	x1, [x0]
     580:	adrp	x0, 0 <fn_list_insert>
     584:	add	x0, x0, #0x0
     588:	ldr	x0, [x0]
     58c:	cmp	x0, #0x0
     590:	b.ne	59c <map_file+0x60>  // b.any
     594:	mov	w0, #0xffffffff            	// #-1
     598:	b	640 <map_file+0x104>
     59c:	adrp	x0, 0 <fn_list_insert>
     5a0:	add	x0, x0, #0x0
     5a4:	ldr	x1, [x0]
     5a8:	adrp	x0, 0 <fn_list_insert>
     5ac:	add	x0, x0, #0x0
     5b0:	ldr	w0, [x0]
     5b4:	mov	x5, #0x0                   	// #0
     5b8:	mov	w4, w0
     5bc:	mov	w3, #0x1                   	// #1
     5c0:	mov	w2, #0x3                   	// #3
     5c4:	mov	x0, #0x0                   	// #0
     5c8:	bl	0 <mmap>
     5cc:	mov	x1, x0
     5d0:	adrp	x0, 0 <fn_list_insert>
     5d4:	add	x0, x0, #0x0
     5d8:	str	x1, [x0]
     5dc:	adrp	x0, 0 <fn_list_insert>
     5e0:	add	x0, x0, #0x0
     5e4:	ldr	x0, [x0]
     5e8:	cmn	x0, #0x1
     5ec:	b.ne	63c <map_file+0x100>  // b.any
     5f0:	bl	0 <__errno_location>
     5f4:	ldr	w0, [x0]
     5f8:	str	w0, [sp, #44]
     5fc:	adrp	x0, 0 <stderr>
     600:	ldr	x0, [x0]
     604:	ldr	x19, [x0]
     608:	adrp	x0, 0 <fn_list_insert>
     60c:	add	x0, x0, #0x0
     610:	ldr	x20, [x0]
     614:	ldr	w0, [sp, #44]
     618:	bl	0 <strerror>
     61c:	mov	x3, x0
     620:	mov	x2, x20
     624:	adrp	x0, 0 <fn_list_insert>
     628:	add	x1, x0, #0x0
     62c:	mov	x0, x19
     630:	bl	0 <fprintf>
     634:	mov	w0, #0xffffffff            	// #-1
     638:	b	640 <map_file+0x104>
     63c:	mov	w0, #0x0                   	// #0
     640:	ldp	x19, x20, [sp, #16]
     644:	ldp	x29, x30, [sp], #48
     648:	ret

000000000000064c <unmap_file>:
     64c:	stp	x29, x30, [sp, #-48]!
     650:	mov	x29, sp
     654:	stp	x19, x20, [sp, #16]
     658:	adrp	x0, 0 <fn_list_insert>
     65c:	add	x0, x0, #0x0
     660:	ldr	x3, [x0]
     664:	adrp	x0, 0 <fn_list_insert>
     668:	add	x0, x0, #0x0
     66c:	ldr	x0, [x0]
     670:	mov	w2, #0x4                   	// #4
     674:	mov	x1, x0
     678:	mov	x0, x3
     67c:	bl	0 <msync>
     680:	cmn	w0, #0x1
     684:	b.ne	6cc <unmap_file+0x80>  // b.any
     688:	bl	0 <__errno_location>
     68c:	ldr	w0, [x0]
     690:	str	w0, [sp, #44]
     694:	adrp	x0, 0 <stderr>
     698:	ldr	x0, [x0]
     69c:	ldr	x19, [x0]
     6a0:	adrp	x0, 0 <fn_list_insert>
     6a4:	add	x0, x0, #0x0
     6a8:	ldr	x20, [x0]
     6ac:	ldr	w0, [sp, #44]
     6b0:	bl	0 <strerror>
     6b4:	mov	x3, x0
     6b8:	mov	x2, x20
     6bc:	adrp	x0, 0 <fn_list_insert>
     6c0:	add	x1, x0, #0x0
     6c4:	mov	x0, x19
     6c8:	bl	0 <fprintf>
     6cc:	adrp	x0, 0 <fn_list_insert>
     6d0:	add	x0, x0, #0x0
     6d4:	ldr	x2, [x0]
     6d8:	adrp	x0, 0 <fn_list_insert>
     6dc:	add	x0, x0, #0x0
     6e0:	ldr	x0, [x0]
     6e4:	mov	x1, x0
     6e8:	mov	x0, x2
     6ec:	bl	0 <munmap>
     6f0:	adrp	x0, 0 <fn_list_insert>
     6f4:	add	x0, x0, #0x0
     6f8:	str	xzr, [x0]
     6fc:	adrp	x0, 0 <fn_list_insert>
     700:	add	x0, x0, #0x0
     704:	str	xzr, [x0]
     708:	nop
     70c:	ldp	x19, x20, [sp, #16]
     710:	ldp	x29, x30, [sp], #48
     714:	ret

0000000000000718 <llvm_gcda_start_file>:
     718:	stp	x29, x30, [sp, #-80]!
     71c:	mov	x29, sp
     720:	stp	x19, x20, [sp, #16]
     724:	str	x0, [sp, #56]
     728:	str	x1, [sp, #48]
     72c:	str	w2, [sp, #44]
     730:	adrp	x0, 0 <fn_list_insert>
     734:	add	x0, x0, #0x0
     738:	str	x0, [sp, #72]
     73c:	ldr	x0, [sp, #56]
     740:	bl	4bc <mangle_filename>
     744:	mov	x1, x0
     748:	adrp	x0, 0 <fn_list_insert>
     74c:	add	x0, x0, #0x0
     750:	str	x1, [x0]
     754:	adrp	x0, 0 <fn_list_insert>
     758:	add	x0, x0, #0x0
     75c:	str	wzr, [x0]
     760:	adrp	x0, 0 <fn_list_insert>
     764:	add	x0, x0, #0x0
     768:	ldr	x0, [x0]
     76c:	mov	w1, #0x2                   	// #2
     770:	bl	0 <open>
     774:	mov	w1, w0
     778:	adrp	x0, 0 <fn_list_insert>
     77c:	add	x0, x0, #0x0
     780:	str	w1, [x0]
     784:	adrp	x0, 0 <fn_list_insert>
     788:	add	x0, x0, #0x0
     78c:	ldr	w0, [x0]
     790:	cmn	w0, #0x1
     794:	b.ne	884 <llvm_gcda_start_file+0x16c>  // b.any
     798:	adrp	x0, 0 <fn_list_insert>
     79c:	add	x0, x0, #0x0
     7a0:	mov	w1, #0x1                   	// #1
     7a4:	str	w1, [x0]
     7a8:	adrp	x0, 0 <fn_list_insert>
     7ac:	add	x0, x0, #0x0
     7b0:	str	x0, [sp, #72]
     7b4:	adrp	x0, 0 <fn_list_insert>
     7b8:	add	x0, x0, #0x0
     7bc:	ldr	x0, [x0]
     7c0:	mov	w2, #0x1a4                 	// #420
     7c4:	mov	w1, #0x42                  	// #66
     7c8:	bl	0 <open>
     7cc:	mov	w1, w0
     7d0:	adrp	x0, 0 <fn_list_insert>
     7d4:	add	x0, x0, #0x0
     7d8:	str	w1, [x0]
     7dc:	adrp	x0, 0 <fn_list_insert>
     7e0:	add	x0, x0, #0x0
     7e4:	ldr	w0, [x0]
     7e8:	cmn	w0, #0x1
     7ec:	b.ne	884 <llvm_gcda_start_file+0x16c>  // b.any
     7f0:	adrp	x0, 0 <fn_list_insert>
     7f4:	add	x0, x0, #0x0
     7f8:	ldr	x0, [x0]
     7fc:	bl	0 <__llvm_profile_recursive_mkdir>
     800:	adrp	x0, 0 <fn_list_insert>
     804:	add	x0, x0, #0x0
     808:	ldr	x0, [x0]
     80c:	mov	w2, #0x1a4                 	// #420
     810:	mov	w1, #0x42                  	// #66
     814:	bl	0 <open>
     818:	mov	w1, w0
     81c:	adrp	x0, 0 <fn_list_insert>
     820:	add	x0, x0, #0x0
     824:	str	w1, [x0]
     828:	adrp	x0, 0 <fn_list_insert>
     82c:	add	x0, x0, #0x0
     830:	ldr	w0, [x0]
     834:	cmn	w0, #0x1
     838:	b.ne	884 <llvm_gcda_start_file+0x16c>  // b.any
     83c:	bl	0 <__errno_location>
     840:	ldr	w0, [x0]
     844:	str	w0, [sp, #68]
     848:	adrp	x0, 0 <stderr>
     84c:	ldr	x0, [x0]
     850:	ldr	x19, [x0]
     854:	adrp	x0, 0 <fn_list_insert>
     858:	add	x0, x0, #0x0
     85c:	ldr	x20, [x0]
     860:	ldr	w0, [sp, #68]
     864:	bl	0 <strerror>
     868:	mov	x3, x0
     86c:	mov	x2, x20
     870:	adrp	x0, 0 <fn_list_insert>
     874:	add	x1, x0, #0x0
     878:	mov	x0, x19
     87c:	bl	0 <fprintf>
     880:	b	98c <llvm_gcda_start_file+0x274>
     884:	adrp	x0, 0 <fn_list_insert>
     888:	add	x0, x0, #0x0
     88c:	ldr	w0, [x0]
     890:	bl	0 <lprofLockFd>
     894:	adrp	x0, 0 <fn_list_insert>
     898:	add	x0, x0, #0x0
     89c:	ldr	w0, [x0]
     8a0:	ldr	x1, [sp, #72]
     8a4:	bl	0 <fdopen>
     8a8:	mov	x1, x0
     8ac:	adrp	x0, 0 <fn_list_insert>
     8b0:	add	x0, x0, #0x0
     8b4:	str	x1, [x0]
     8b8:	adrp	x0, 0 <fn_list_insert>
     8bc:	add	x0, x0, #0x0
     8c0:	str	xzr, [x0]
     8c4:	adrp	x0, 0 <fn_list_insert>
     8c8:	add	x0, x0, #0x0
     8cc:	str	xzr, [x0]
     8d0:	adrp	x0, 0 <fn_list_insert>
     8d4:	add	x0, x0, #0x0
     8d8:	str	xzr, [x0]
     8dc:	adrp	x0, 0 <fn_list_insert>
     8e0:	add	x0, x0, #0x0
     8e4:	ldr	w0, [x0]
     8e8:	cmp	w0, #0x0
     8ec:	b.eq	914 <llvm_gcda_start_file+0x1fc>  // b.none
     8f0:	mov	x0, #0x20000               	// #131072
     8f4:	bl	170 <resize_write_buffer>
     8f8:	adrp	x0, 0 <fn_list_insert>
     8fc:	add	x0, x0, #0x0
     900:	ldr	x0, [x0]
     904:	mov	x2, #0x20000               	// #131072
     908:	mov	w1, #0x0                   	// #0
     90c:	bl	0 <memset>
     910:	b	968 <llvm_gcda_start_file+0x250>
     914:	bl	53c <map_file>
     918:	cmn	w0, #0x1
     91c:	b.ne	968 <llvm_gcda_start_file+0x250>  // b.any
     920:	adrp	x0, 0 <fn_list_insert>
     924:	add	x0, x0, #0x0
     928:	mov	w1, #0x1                   	// #1
     92c:	str	w1, [x0]
     930:	adrp	x0, 0 <fn_list_insert>
     934:	add	x0, x0, #0x0
     938:	str	xzr, [x0]
     93c:	adrp	x0, 0 <fn_list_insert>
     940:	add	x0, x0, #0x0
     944:	str	xzr, [x0]
     948:	mov	x0, #0x20000               	// #131072
     94c:	bl	170 <resize_write_buffer>
     950:	adrp	x0, 0 <fn_list_insert>
     954:	add	x0, x0, #0x0
     958:	ldr	x0, [x0]
     95c:	mov	x2, #0x20000               	// #131072
     960:	mov	w1, #0x0                   	// #0
     964:	bl	0 <memset>
     968:	mov	x1, #0x4                   	// #4
     96c:	adrp	x0, 0 <fn_list_insert>
     970:	add	x0, x0, #0x0
     974:	bl	22c <write_bytes>
     978:	mov	x1, #0x4                   	// #4
     97c:	ldr	x0, [sp, #48]
     980:	bl	22c <write_bytes>
     984:	ldr	w0, [sp, #44]
     988:	bl	298 <write_32bit_value>
     98c:	ldp	x19, x20, [sp, #16]
     990:	ldp	x29, x30, [sp], #80
     994:	ret

0000000000000998 <llvm_gcda_increment_indirect_counter>:
     998:	sub	sp, sp, #0x20
     99c:	str	x0, [sp, #8]
     9a0:	str	x1, [sp]
     9a4:	ldr	x0, [sp, #8]
     9a8:	ldr	w0, [x0]
     9ac:	str	w0, [sp, #28]
     9b0:	ldr	w0, [sp, #28]
     9b4:	cmn	w0, #0x1
     9b8:	b.eq	9f8 <llvm_gcda_increment_indirect_counter+0x60>  // b.none
     9bc:	ldr	w0, [sp, #28]
     9c0:	lsl	x0, x0, #3
     9c4:	ldr	x1, [sp]
     9c8:	add	x0, x1, x0
     9cc:	ldr	x0, [x0]
     9d0:	str	x0, [sp, #16]
     9d4:	ldr	x0, [sp, #16]
     9d8:	cmp	x0, #0x0
     9dc:	b.eq	9fc <llvm_gcda_increment_indirect_counter+0x64>  // b.none
     9e0:	ldr	x0, [sp, #16]
     9e4:	ldr	x0, [x0]
     9e8:	add	x1, x0, #0x1
     9ec:	ldr	x0, [sp, #16]
     9f0:	str	x1, [x0]
     9f4:	b	9fc <llvm_gcda_increment_indirect_counter+0x64>
     9f8:	nop
     9fc:	add	sp, sp, #0x20
     a00:	ret

0000000000000a04 <llvm_gcda_emit_function>:
     a04:	stp	x29, x30, [sp, #-64]!
     a08:	mov	x29, sp
     a0c:	str	w0, [sp, #44]
     a10:	str	x1, [sp, #32]
     a14:	str	w2, [sp, #40]
     a18:	strb	w3, [sp, #31]
     a1c:	str	w4, [sp, #24]
     a20:	mov	w0, #0x2                   	// #2
     a24:	str	w0, [sp, #60]
     a28:	ldrb	w0, [sp, #31]
     a2c:	cmp	w0, #0x0
     a30:	b.eq	a40 <llvm_gcda_emit_function+0x3c>  // b.none
     a34:	ldr	w0, [sp, #60]
     a38:	add	w0, w0, #0x1
     a3c:	str	w0, [sp, #60]
     a40:	adrp	x0, 0 <fn_list_insert>
     a44:	add	x0, x0, #0x0
     a48:	ldr	x0, [x0]
     a4c:	cmp	x0, #0x0
     a50:	b.eq	acc <llvm_gcda_emit_function+0xc8>  // b.none
     a54:	mov	x1, #0x4                   	// #4
     a58:	adrp	x0, 0 <fn_list_insert>
     a5c:	add	x0, x0, #0x0
     a60:	bl	22c <write_bytes>
     a64:	ldr	x0, [sp, #32]
     a68:	cmp	x0, #0x0
     a6c:	b.eq	a88 <llvm_gcda_emit_function+0x84>  // b.none
     a70:	ldr	x0, [sp, #32]
     a74:	bl	2f8 <length_of_string>
     a78:	add	w0, w0, #0x1
     a7c:	ldr	w1, [sp, #60]
     a80:	add	w0, w1, w0
     a84:	str	w0, [sp, #60]
     a88:	ldr	w0, [sp, #60]
     a8c:	bl	298 <write_32bit_value>
     a90:	ldr	w0, [sp, #44]
     a94:	bl	298 <write_32bit_value>
     a98:	ldr	w0, [sp, #40]
     a9c:	bl	298 <write_32bit_value>
     aa0:	ldrb	w0, [sp, #31]
     aa4:	cmp	w0, #0x0
     aa8:	b.eq	ab4 <llvm_gcda_emit_function+0xb0>  // b.none
     aac:	ldr	w0, [sp, #24]
     ab0:	bl	298 <write_32bit_value>
     ab4:	ldr	x0, [sp, #32]
     ab8:	cmp	x0, #0x0
     abc:	b.eq	ad0 <llvm_gcda_emit_function+0xcc>  // b.none
     ac0:	ldr	x0, [sp, #32]
     ac4:	bl	31c <write_string>
     ac8:	b	ad0 <llvm_gcda_emit_function+0xcc>
     acc:	nop
     ad0:	ldp	x29, x30, [sp], #64
     ad4:	ret

0000000000000ad8 <llvm_gcda_emit_arcs>:
     ad8:	stp	x29, x30, [sp, #-80]!
     adc:	mov	x29, sp
     ae0:	str	x19, [sp, #16]
     ae4:	str	w0, [sp, #44]
     ae8:	str	x1, [sp, #32]
     aec:	str	xzr, [sp, #64]
     af0:	str	wzr, [sp, #60]
     af4:	adrp	x0, 0 <fn_list_insert>
     af8:	add	x0, x0, #0x0
     afc:	ldr	x0, [x0]
     b00:	str	x0, [sp, #48]
     b04:	adrp	x0, 0 <fn_list_insert>
     b08:	add	x0, x0, #0x0
     b0c:	ldr	x0, [x0]
     b10:	cmp	x0, #0x0
     b14:	b.eq	ce0 <llvm_gcda_emit_arcs+0x208>  // b.none
     b18:	bl	3ec <read_le_32bit_value>
     b1c:	str	w0, [sp, #60]
     b20:	ldr	w0, [sp, #60]
     b24:	cmn	w0, #0x1
     b28:	b.eq	c18 <llvm_gcda_emit_arcs+0x140>  // b.none
     b2c:	ldr	w1, [sp, #60]
     b30:	mov	w0, #0x1a10000             	// #27328512
     b34:	cmp	w1, w0
     b38:	b.eq	b70 <llvm_gcda_emit_arcs+0x98>  // b.none
     b3c:	adrp	x0, 0 <stderr>
     b40:	ldr	x0, [x0]
     b44:	ldr	x4, [x0]
     b48:	adrp	x0, 0 <fn_list_insert>
     b4c:	add	x0, x0, #0x0
     b50:	ldr	x0, [x0]
     b54:	ldr	w3, [sp, #60]
     b58:	mov	x2, x0
     b5c:	adrp	x0, 0 <fn_list_insert>
     b60:	add	x1, x0, #0x0
     b64:	mov	x0, x4
     b68:	bl	0 <fprintf>
     b6c:	b	ce4 <llvm_gcda_emit_arcs+0x20c>
     b70:	bl	380 <read_32bit_value>
     b74:	str	w0, [sp, #60]
     b78:	ldr	w0, [sp, #60]
     b7c:	cmn	w0, #0x1
     b80:	b.eq	b98 <llvm_gcda_emit_arcs+0xc0>  // b.none
     b84:	ldr	w0, [sp, #60]
     b88:	lsr	w0, w0, #1
     b8c:	ldr	w1, [sp, #44]
     b90:	cmp	w1, w0
     b94:	b.eq	bcc <llvm_gcda_emit_arcs+0xf4>  // b.none
     b98:	adrp	x0, 0 <stderr>
     b9c:	ldr	x0, [x0]
     ba0:	ldr	x4, [x0]
     ba4:	adrp	x0, 0 <fn_list_insert>
     ba8:	add	x0, x0, #0x0
     bac:	ldr	x0, [x0]
     bb0:	ldr	w3, [sp, #60]
     bb4:	mov	x2, x0
     bb8:	adrp	x0, 0 <fn_list_insert>
     bbc:	add	x1, x0, #0x0
     bc0:	mov	x0, x4
     bc4:	bl	0 <fprintf>
     bc8:	b	ce4 <llvm_gcda_emit_arcs+0x20c>
     bcc:	ldr	w0, [sp, #44]
     bd0:	lsl	x0, x0, #3
     bd4:	bl	0 <malloc>
     bd8:	str	x0, [sp, #64]
     bdc:	str	wzr, [sp, #76]
     be0:	b	c08 <llvm_gcda_emit_arcs+0x130>
     be4:	ldr	w0, [sp, #76]
     be8:	lsl	x0, x0, #3
     bec:	ldr	x1, [sp, #64]
     bf0:	add	x19, x1, x0
     bf4:	bl	48c <read_64bit_value>
     bf8:	str	x0, [x19]
     bfc:	ldr	w0, [sp, #76]
     c00:	add	w0, w0, #0x1
     c04:	str	w0, [sp, #76]
     c08:	ldr	w1, [sp, #76]
     c0c:	ldr	w0, [sp, #44]
     c10:	cmp	w1, w0
     c14:	b.cc	be4 <llvm_gcda_emit_arcs+0x10c>  // b.lo, b.ul, b.last
     c18:	adrp	x0, 0 <fn_list_insert>
     c1c:	add	x0, x0, #0x0
     c20:	ldr	x1, [sp, #48]
     c24:	str	x1, [x0]
     c28:	mov	x1, #0x4                   	// #4
     c2c:	adrp	x0, 0 <fn_list_insert>
     c30:	add	x0, x0, #0x0
     c34:	bl	22c <write_bytes>
     c38:	ldr	w0, [sp, #44]
     c3c:	lsl	w0, w0, #1
     c40:	bl	298 <write_32bit_value>
     c44:	str	wzr, [sp, #76]
     c48:	b	cc4 <llvm_gcda_emit_arcs+0x1ec>
     c4c:	ldr	w0, [sp, #76]
     c50:	lsl	x0, x0, #3
     c54:	ldr	x1, [sp, #32]
     c58:	add	x0, x1, x0
     c5c:	ldr	x2, [x0]
     c60:	ldr	x0, [sp, #64]
     c64:	cmp	x0, #0x0
     c68:	b.eq	c84 <llvm_gcda_emit_arcs+0x1ac>  // b.none
     c6c:	ldr	w0, [sp, #76]
     c70:	lsl	x0, x0, #3
     c74:	ldr	x1, [sp, #64]
     c78:	add	x0, x1, x0
     c7c:	ldr	x0, [x0]
     c80:	b	c88 <llvm_gcda_emit_arcs+0x1b0>
     c84:	mov	x0, #0x0                   	// #0
     c88:	ldr	w1, [sp, #76]
     c8c:	lsl	x1, x1, #3
     c90:	ldr	x3, [sp, #32]
     c94:	add	x1, x3, x1
     c98:	add	x0, x0, x2
     c9c:	str	x0, [x1]
     ca0:	ldr	w0, [sp, #76]
     ca4:	lsl	x0, x0, #3
     ca8:	ldr	x1, [sp, #32]
     cac:	add	x0, x1, x0
     cb0:	ldr	x0, [x0]
     cb4:	bl	2bc <write_64bit_value>
     cb8:	ldr	w0, [sp, #76]
     cbc:	add	w0, w0, #0x1
     cc0:	str	w0, [sp, #76]
     cc4:	ldr	w1, [sp, #76]
     cc8:	ldr	w0, [sp, #44]
     ccc:	cmp	w1, w0
     cd0:	b.cc	c4c <llvm_gcda_emit_arcs+0x174>  // b.lo, b.ul, b.last
     cd4:	ldr	x0, [sp, #64]
     cd8:	bl	0 <free>
     cdc:	b	ce4 <llvm_gcda_emit_arcs+0x20c>
     ce0:	nop
     ce4:	ldr	x19, [sp, #16]
     ce8:	ldp	x29, x30, [sp], #80
     cec:	ret

0000000000000cf0 <llvm_gcda_summary_info>:
     cf0:	stp	x29, x30, [sp, #-48]!
     cf4:	mov	x29, sp
     cf8:	mov	w0, #0x9                   	// #9
     cfc:	str	w0, [sp, #36]
     d00:	mov	w0, #0x1                   	// #1
     d04:	str	w0, [sp, #40]
     d08:	str	wzr, [sp, #32]
     d0c:	adrp	x0, 0 <fn_list_insert>
     d10:	add	x0, x0, #0x0
     d14:	ldr	x0, [x0]
     d18:	str	x0, [sp, #24]
     d1c:	adrp	x0, 0 <fn_list_insert>
     d20:	add	x0, x0, #0x0
     d24:	ldr	x0, [x0]
     d28:	cmp	x0, #0x0
     d2c:	b.eq	ea8 <llvm_gcda_summary_info+0x1b8>  // b.none
     d30:	bl	3ec <read_le_32bit_value>
     d34:	str	w0, [sp, #32]
     d38:	ldr	w0, [sp, #32]
     d3c:	cmn	w0, #0x1
     d40:	b.eq	e0c <llvm_gcda_summary_info+0x11c>  // b.none
     d44:	ldr	w1, [sp, #32]
     d48:	mov	w0, #0xa1000000            	// #-1593835520
     d4c:	cmp	w1, w0
     d50:	b.eq	d88 <llvm_gcda_summary_info+0x98>  // b.none
     d54:	adrp	x0, 0 <stderr>
     d58:	ldr	x0, [x0]
     d5c:	ldr	x4, [x0]
     d60:	adrp	x0, 0 <fn_list_insert>
     d64:	add	x0, x0, #0x0
     d68:	ldr	x0, [x0]
     d6c:	ldr	w3, [sp, #32]
     d70:	mov	x2, x0
     d74:	adrp	x0, 0 <fn_list_insert>
     d78:	add	x1, x0, #0x0
     d7c:	mov	x0, x4
     d80:	bl	0 <fprintf>
     d84:	b	eac <llvm_gcda_summary_info+0x1bc>
     d88:	bl	380 <read_32bit_value>
     d8c:	str	w0, [sp, #32]
     d90:	ldr	w1, [sp, #32]
     d94:	ldr	w0, [sp, #36]
     d98:	cmp	w1, w0
     d9c:	b.eq	dd4 <llvm_gcda_summary_info+0xe4>  // b.none
     da0:	adrp	x0, 0 <stderr>
     da4:	ldr	x0, [x0]
     da8:	ldr	x4, [x0]
     dac:	adrp	x0, 0 <fn_list_insert>
     db0:	add	x0, x0, #0x0
     db4:	ldr	x0, [x0]
     db8:	ldr	w3, [sp, #32]
     dbc:	mov	x2, x0
     dc0:	adrp	x0, 0 <fn_list_insert>
     dc4:	add	x1, x0, #0x0
     dc8:	mov	x0, x4
     dcc:	bl	0 <fprintf>
     dd0:	b	eac <llvm_gcda_summary_info+0x1bc>
     dd4:	bl	380 <read_32bit_value>
     dd8:	bl	380 <read_32bit_value>
     ddc:	bl	380 <read_32bit_value>
     de0:	str	w0, [sp, #20]
     de4:	adrp	x0, 0 <fn_list_insert>
     de8:	add	x0, x0, #0x0
     dec:	ldr	w0, [x0]
     df0:	cmp	w0, #0x0
     df4:	b.ne	e04 <llvm_gcda_summary_info+0x114>  // b.any
     df8:	ldr	w0, [sp, #20]
     dfc:	add	w0, w0, #0x1
     e00:	b	e08 <llvm_gcda_summary_info+0x118>
     e04:	ldr	w0, [sp, #20]
     e08:	str	w0, [sp, #40]
     e0c:	adrp	x0, 0 <fn_list_insert>
     e10:	add	x0, x0, #0x0
     e14:	ldr	x1, [sp, #24]
     e18:	str	x1, [x0]
     e1c:	mov	x1, #0x4                   	// #4
     e20:	adrp	x0, 0 <fn_list_insert>
     e24:	add	x0, x0, #0x0
     e28:	bl	22c <write_bytes>
     e2c:	ldr	w0, [sp, #36]
     e30:	bl	298 <write_32bit_value>
     e34:	mov	w0, #0x0                   	// #0
     e38:	bl	298 <write_32bit_value>
     e3c:	mov	w0, #0x0                   	// #0
     e40:	bl	298 <write_32bit_value>
     e44:	ldr	w0, [sp, #40]
     e48:	bl	298 <write_32bit_value>
     e4c:	mov	w0, #0x3                   	// #3
     e50:	str	w0, [sp, #44]
     e54:	b	e6c <llvm_gcda_summary_info+0x17c>
     e58:	mov	w0, #0x0                   	// #0
     e5c:	bl	298 <write_32bit_value>
     e60:	ldr	w0, [sp, #44]
     e64:	add	w0, w0, #0x1
     e68:	str	w0, [sp, #44]
     e6c:	ldr	w1, [sp, #44]
     e70:	ldr	w0, [sp, #36]
     e74:	cmp	w1, w0
     e78:	b.cc	e58 <llvm_gcda_summary_info+0x168>  // b.lo, b.ul, b.last
     e7c:	mov	x1, #0x4                   	// #4
     e80:	adrp	x0, 0 <fn_list_insert>
     e84:	add	x0, x0, #0x0
     e88:	bl	22c <write_bytes>
     e8c:	mov	w0, #0x0                   	// #0
     e90:	bl	298 <write_32bit_value>
     e94:	adrp	x0, 0 <fn_list_insert>
     e98:	add	x0, x0, #0x0
     e9c:	mov	w1, #0x1                   	// #1
     ea0:	str	w1, [x0]
     ea4:	b	eac <llvm_gcda_summary_info+0x1bc>
     ea8:	nop
     eac:	ldp	x29, x30, [sp], #48
     eb0:	ret

0000000000000eb4 <llvm_gcda_end_file>:
     eb4:	stp	x29, x30, [sp, #-16]!
     eb8:	mov	x29, sp
     ebc:	adrp	x0, 0 <fn_list_insert>
     ec0:	add	x0, x0, #0x0
     ec4:	ldr	x0, [x0]
     ec8:	cmp	x0, #0x0
     ecc:	b.eq	f88 <llvm_gcda_end_file+0xd4>  // b.none
     ed0:	mov	x1, #0x8                   	// #8
     ed4:	adrp	x0, 0 <fn_list_insert>
     ed8:	add	x0, x0, #0x0
     edc:	bl	22c <write_bytes>
     ee0:	adrp	x0, 0 <fn_list_insert>
     ee4:	add	x0, x0, #0x0
     ee8:	ldr	w0, [x0]
     eec:	cmp	w0, #0x0
     ef0:	b.eq	f3c <llvm_gcda_end_file+0x88>  // b.none
     ef4:	adrp	x0, 0 <fn_list_insert>
     ef8:	add	x0, x0, #0x0
     efc:	ldr	x4, [x0]
     f00:	adrp	x0, 0 <fn_list_insert>
     f04:	add	x0, x0, #0x0
     f08:	ldr	x1, [x0]
     f0c:	adrp	x0, 0 <fn_list_insert>
     f10:	add	x0, x0, #0x0
     f14:	ldr	x0, [x0]
     f18:	mov	x3, x0
     f1c:	mov	x2, #0x1                   	// #1
     f20:	mov	x0, x4
     f24:	bl	0 <fwrite>
     f28:	adrp	x0, 0 <fn_list_insert>
     f2c:	add	x0, x0, #0x0
     f30:	ldr	x0, [x0]
     f34:	bl	0 <free>
     f38:	b	f40 <llvm_gcda_end_file+0x8c>
     f3c:	bl	64c <unmap_file>
     f40:	adrp	x0, 0 <fn_list_insert>
     f44:	add	x0, x0, #0x0
     f48:	ldr	x0, [x0]
     f4c:	bl	0 <fflush>
     f50:	adrp	x0, 0 <fn_list_insert>
     f54:	add	x0, x0, #0x0
     f58:	ldr	w0, [x0]
     f5c:	bl	0 <lprofUnlockFd>
     f60:	adrp	x0, 0 <fn_list_insert>
     f64:	add	x0, x0, #0x0
     f68:	ldr	x0, [x0]
     f6c:	bl	0 <fclose>
     f70:	adrp	x0, 0 <fn_list_insert>
     f74:	add	x0, x0, #0x0
     f78:	str	xzr, [x0]
     f7c:	adrp	x0, 0 <fn_list_insert>
     f80:	add	x0, x0, #0x0
     f84:	str	xzr, [x0]
     f88:	adrp	x0, 0 <fn_list_insert>
     f8c:	add	x0, x0, #0x0
     f90:	ldr	x0, [x0]
     f94:	bl	0 <free>
     f98:	nop
     f9c:	ldp	x29, x30, [sp], #16
     fa0:	ret

0000000000000fa4 <llvm_register_writeout_function>:
     fa4:	stp	x29, x30, [sp, #-32]!
     fa8:	mov	x29, sp
     fac:	str	x0, [sp, #24]
     fb0:	ldr	x1, [sp, #24]
     fb4:	adrp	x0, 10 <fn_list_insert+0x10>
     fb8:	ldr	x0, [x0]
     fbc:	bl	0 <fn_list_insert>
     fc0:	nop
     fc4:	ldp	x29, x30, [sp], #32
     fc8:	ret

0000000000000fcc <llvm_writeout_files>:
     fcc:	stp	x29, x30, [sp, #-32]!
     fd0:	mov	x29, sp
     fd4:	adrp	x0, 10 <fn_list_insert+0x10>
     fd8:	ldr	x0, [x0]
     fdc:	ldr	x0, [x0]
     fe0:	str	x0, [sp, #24]
     fe4:	b	1018 <llvm_writeout_files+0x4c>
     fe8:	ldr	x0, [sp, #24]
     fec:	ldr	x1, [x0]
     ff0:	adrp	x0, 0 <fn_list_insert>
     ff4:	add	x0, x0, #0x0
     ff8:	cmp	x1, x0
     ffc:	b.ne	100c <llvm_writeout_files+0x40>  // b.any
    1000:	ldr	x0, [sp, #24]
    1004:	ldr	x0, [x0, #8]
    1008:	blr	x0
    100c:	ldr	x0, [sp, #24]
    1010:	ldr	x0, [x0, #16]
    1014:	str	x0, [sp, #24]
    1018:	ldr	x0, [sp, #24]
    101c:	cmp	x0, #0x0
    1020:	b.ne	fe8 <llvm_writeout_files+0x1c>  // b.any
    1024:	nop
    1028:	nop
    102c:	ldp	x29, x30, [sp], #32
    1030:	ret

0000000000001034 <llvm_delete_writeout_function_list>:
    1034:	stp	x29, x30, [sp, #-16]!
    1038:	mov	x29, sp
    103c:	adrp	x0, 10 <fn_list_insert+0x10>
    1040:	ldr	x0, [x0]
    1044:	bl	98 <fn_list_remove>
    1048:	nop
    104c:	ldp	x29, x30, [sp], #16
    1050:	ret

0000000000001054 <llvm_register_flush_function>:
    1054:	stp	x29, x30, [sp, #-32]!
    1058:	mov	x29, sp
    105c:	str	x0, [sp, #24]
    1060:	ldr	x1, [sp, #24]
    1064:	adrp	x0, 10 <fn_list_insert+0x10>
    1068:	ldr	x0, [x0]
    106c:	bl	0 <fn_list_insert>
    1070:	nop
    1074:	ldp	x29, x30, [sp], #32
    1078:	ret

000000000000107c <__gcov_flush>:
    107c:	stp	x29, x30, [sp, #-32]!
    1080:	mov	x29, sp
    1084:	adrp	x0, 10 <fn_list_insert+0x10>
    1088:	ldr	x0, [x0]
    108c:	ldr	x0, [x0]
    1090:	str	x0, [sp, #24]
    1094:	b	10b0 <__gcov_flush+0x34>
    1098:	ldr	x0, [sp, #24]
    109c:	ldr	x0, [x0, #8]
    10a0:	blr	x0
    10a4:	ldr	x0, [sp, #24]
    10a8:	ldr	x0, [x0, #16]
    10ac:	str	x0, [sp, #24]
    10b0:	ldr	x0, [sp, #24]
    10b4:	cmp	x0, #0x0
    10b8:	b.ne	1098 <__gcov_flush+0x1c>  // b.any
    10bc:	nop
    10c0:	nop
    10c4:	ldp	x29, x30, [sp], #32
    10c8:	ret

00000000000010cc <llvm_delete_flush_function_list>:
    10cc:	stp	x29, x30, [sp, #-16]!
    10d0:	mov	x29, sp
    10d4:	adrp	x0, 10 <fn_list_insert+0x10>
    10d8:	ldr	x0, [x0]
    10dc:	bl	98 <fn_list_remove>
    10e0:	nop
    10e4:	ldp	x29, x30, [sp], #16
    10e8:	ret

00000000000010ec <llvm_gcov_init>:
    10ec:	stp	x29, x30, [sp, #-32]!
    10f0:	mov	x29, sp
    10f4:	str	x0, [sp, #24]
    10f8:	str	x1, [sp, #16]
    10fc:	ldr	x0, [sp, #24]
    1100:	cmp	x0, #0x0
    1104:	b.eq	1110 <llvm_gcov_init+0x24>  // b.none
    1108:	ldr	x0, [sp, #24]
    110c:	bl	fa4 <llvm_register_writeout_function>
    1110:	ldr	x0, [sp, #16]
    1114:	cmp	x0, #0x0
    1118:	b.eq	1124 <llvm_gcov_init+0x38>  // b.none
    111c:	ldr	x0, [sp, #16]
    1120:	bl	1054 <llvm_register_flush_function>
    1124:	adrp	x0, 0 <fn_list_insert>
    1128:	add	x0, x0, #0x0
    112c:	ldr	w0, [x0]
    1130:	cmp	w0, #0x0
    1134:	b.ne	116c <llvm_gcov_init+0x80>  // b.any
    1138:	adrp	x0, 0 <fn_list_insert>
    113c:	add	x0, x0, #0x0
    1140:	mov	w1, #0x1                   	// #1
    1144:	str	w1, [x0]
    1148:	adrp	x0, 10cc <llvm_delete_flush_function_list>
    114c:	add	x0, x0, #0x0
    1150:	bl	0 <atexit>
    1154:	adrp	x0, 1034 <llvm_delete_writeout_function_list>
    1158:	add	x0, x0, #0x0
    115c:	bl	0 <atexit>
    1160:	adrp	x0, fcc <llvm_writeout_files>
    1164:	add	x0, x0, #0x0
    1168:	bl	0 <atexit>
    116c:	nop
    1170:	ldp	x29, x30, [sp], #32
    1174:	ret

InstrProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_get_magic>:
   0:	mov	x0, #0x7281                	// #29313
   4:	movk	x0, #0x6f66, lsl #16
   8:	movk	x0, #0x7072, lsl #32
   c:	movk	x0, #0xff6c, lsl #48
  10:	ret

0000000000000014 <lprofProfileDumped>:
  14:	adrp	x0, 0 <__llvm_profile_get_magic>
  18:	add	x0, x0, #0x0
  1c:	ldr	w0, [x0]
  20:	ret

0000000000000024 <lprofSetProfileDumped>:
  24:	adrp	x0, 0 <__llvm_profile_get_magic>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	str	w1, [x0]
  34:	nop
  38:	ret

000000000000003c <__llvm_profile_set_dumped>:
  3c:	stp	x29, x30, [sp, #-16]!
  40:	mov	x29, sp
  44:	bl	24 <lprofSetProfileDumped>
  48:	nop
  4c:	ldp	x29, x30, [sp], #16
  50:	ret

0000000000000054 <__llvm_profile_get_num_padding_bytes>:
  54:	sub	sp, sp, #0x10
  58:	str	x0, [sp, #8]
  5c:	ldr	x0, [sp, #8]
  60:	and	w0, w0, #0xff
  64:	neg	w0, w0
  68:	and	w0, w0, #0xff
  6c:	and	w0, w0, #0x7
  70:	and	w0, w0, #0xff
  74:	add	sp, sp, #0x10
  78:	ret

000000000000007c <__llvm_profile_get_version>:
  7c:	adrp	x0, 0 <__llvm_profile_get_magic>
  80:	ldr	x0, [x0]
  84:	ldr	x0, [x0]
  88:	ret

000000000000008c <__llvm_profile_reset_counters>:
  8c:	stp	x29, x30, [sp, #-96]!
  90:	mov	x29, sp
  94:	bl	0 <__llvm_profile_begin_counters>
  98:	str	x0, [sp, #56]
  9c:	bl	0 <__llvm_profile_end_counters>
  a0:	str	x0, [sp, #48]
  a4:	ldr	x1, [sp, #48]
  a8:	ldr	x0, [sp, #56]
  ac:	sub	x0, x1, x0
  b0:	mov	x2, x0
  b4:	mov	w1, #0x0                   	// #0
  b8:	ldr	x0, [sp, #56]
  bc:	bl	0 <memset>
  c0:	bl	0 <__llvm_profile_begin_data>
  c4:	str	x0, [sp, #40]
  c8:	bl	0 <__llvm_profile_end_data>
  cc:	str	x0, [sp, #32]
  d0:	ldr	x0, [sp, #40]
  d4:	str	x0, [sp, #88]
  d8:	b	1b8 <__llvm_profile_reset_counters+0x12c>
  dc:	str	xzr, [sp, #80]
  e0:	ldr	x0, [sp, #88]
  e4:	ldr	x0, [x0, #32]
  e8:	cmp	x0, #0x0
  ec:	b.eq	1a8 <__llvm_profile_reset_counters+0x11c>  // b.none
  f0:	ldr	x0, [sp, #88]
  f4:	ldr	x0, [x0, #32]
  f8:	str	x0, [sp, #24]
  fc:	str	wzr, [sp, #76]
 100:	b	138 <__llvm_profile_reset_counters+0xac>
 104:	ldr	x1, [sp, #88]
 108:	ldr	w0, [sp, #76]
 10c:	add	x0, x0, #0x10
 110:	lsl	x0, x0, #1
 114:	add	x0, x1, x0
 118:	ldrh	w0, [x0, #12]
 11c:	and	x0, x0, #0xffff
 120:	ldr	x1, [sp, #80]
 124:	add	x0, x1, x0
 128:	str	x0, [sp, #80]
 12c:	ldr	w0, [sp, #76]
 130:	add	w0, w0, #0x1
 134:	str	w0, [sp, #76]
 138:	ldr	w0, [sp, #76]
 13c:	cmp	w0, #0x1
 140:	b.ls	104 <__llvm_profile_reset_counters+0x78>  // b.plast
 144:	str	wzr, [sp, #72]
 148:	b	194 <__llvm_profile_reset_counters+0x108>
 14c:	ldr	w0, [sp, #72]
 150:	lsl	x0, x0, #3
 154:	ldr	x1, [sp, #24]
 158:	add	x0, x1, x0
 15c:	ldr	x0, [x0]
 160:	str	x0, [sp, #64]
 164:	b	17c <__llvm_profile_reset_counters+0xf0>
 168:	ldr	x0, [sp, #64]
 16c:	str	xzr, [x0, #8]
 170:	ldr	x0, [sp, #64]
 174:	ldr	x0, [x0, #16]
 178:	str	x0, [sp, #64]
 17c:	ldr	x0, [sp, #64]
 180:	cmp	x0, #0x0
 184:	b.ne	168 <__llvm_profile_reset_counters+0xdc>  // b.any
 188:	ldr	w0, [sp, #72]
 18c:	add	w0, w0, #0x1
 190:	str	w0, [sp, #72]
 194:	ldr	w0, [sp, #72]
 198:	ldr	x1, [sp, #80]
 19c:	cmp	x1, x0
 1a0:	b.hi	14c <__llvm_profile_reset_counters+0xc0>  // b.pmore
 1a4:	b	1ac <__llvm_profile_reset_counters+0x120>
 1a8:	nop
 1ac:	ldr	x0, [sp, #88]
 1b0:	add	x0, x0, #0x30
 1b4:	str	x0, [sp, #88]
 1b8:	ldr	x1, [sp, #88]
 1bc:	ldr	x0, [sp, #32]
 1c0:	cmp	x1, x0
 1c4:	b.cc	dc <__llvm_profile_reset_counters+0x50>  // b.lo, b.ul, b.last
 1c8:	adrp	x0, 0 <__llvm_profile_get_magic>
 1cc:	add	x0, x0, #0x0
 1d0:	str	wzr, [x0]
 1d4:	nop
 1d8:	ldp	x29, x30, [sp], #96
 1dc:	ret

InstrProfilingValue.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <getValueProfRecordHeaderSize>:
       0:	sub	sp, sp, #0x20
       4:	str	w0, [sp, #12]
       8:	ldr	w0, [sp, #12]
       c:	add	w0, w0, #0x8
      10:	str	w0, [sp, #28]
      14:	ldr	w0, [sp, #28]
      18:	add	w0, w0, #0x7
      1c:	and	w0, w0, #0xfffffff8
      20:	str	w0, [sp, #28]
      24:	ldr	w0, [sp, #28]
      28:	add	sp, sp, #0x20
      2c:	ret

0000000000000030 <getValueProfRecordSize>:
      30:	stp	x29, x30, [sp, #-32]!
      34:	mov	x29, sp
      38:	str	w0, [sp, #28]
      3c:	str	w1, [sp, #24]
      40:	ldr	w0, [sp, #28]
      44:	bl	0 <getValueProfRecordHeaderSize>
      48:	mov	w1, w0
      4c:	ldr	w0, [sp, #24]
      50:	lsl	w0, w0, #4
      54:	add	w0, w1, w0
      58:	ldp	x29, x30, [sp], #32
      5c:	ret

0000000000000060 <getValueProfRecordValueData>:
      60:	stp	x29, x30, [sp, #-32]!
      64:	mov	x29, sp
      68:	str	x0, [sp, #24]
      6c:	ldr	x0, [sp, #24]
      70:	ldr	w0, [x0, #4]
      74:	bl	0 <getValueProfRecordHeaderSize>
      78:	mov	w0, w0
      7c:	ldr	x1, [sp, #24]
      80:	add	x0, x1, x0
      84:	ldp	x29, x30, [sp], #32
      88:	ret

000000000000008c <getValueProfRecordNumValueData>:
      8c:	sub	sp, sp, #0x20
      90:	str	x0, [sp, #8]
      94:	str	wzr, [sp, #28]
      98:	str	wzr, [sp, #24]
      9c:	b	cc <getValueProfRecordNumValueData+0x40>
      a0:	ldr	x1, [sp, #8]
      a4:	ldr	w0, [sp, #24]
      a8:	add	x0, x1, x0
      ac:	ldrb	w0, [x0, #8]
      b0:	mov	w1, w0
      b4:	ldr	w0, [sp, #28]
      b8:	add	w0, w0, w1
      bc:	str	w0, [sp, #28]
      c0:	ldr	w0, [sp, #24]
      c4:	add	w0, w0, #0x1
      c8:	str	w0, [sp, #24]
      cc:	ldr	x0, [sp, #8]
      d0:	ldr	w0, [x0, #4]
      d4:	ldr	w1, [sp, #24]
      d8:	cmp	w1, w0
      dc:	b.cc	a0 <getValueProfRecordNumValueData+0x14>  // b.lo, b.ul, b.last
      e0:	ldr	w0, [sp, #28]
      e4:	add	sp, sp, #0x20
      e8:	ret

00000000000000ec <getValueProfRecordNext>:
      ec:	stp	x29, x30, [sp, #-48]!
      f0:	mov	x29, sp
      f4:	str	x0, [sp, #24]
      f8:	ldr	x0, [sp, #24]
      fc:	bl	8c <getValueProfRecordNumValueData>
     100:	str	w0, [sp, #44]
     104:	ldr	x0, [sp, #24]
     108:	ldr	w0, [x0, #4]
     10c:	ldr	w1, [sp, #44]
     110:	bl	30 <getValueProfRecordSize>
     114:	mov	w0, w0
     118:	ldr	x1, [sp, #24]
     11c:	add	x0, x1, x0
     120:	ldp	x29, x30, [sp], #48
     124:	ret

0000000000000128 <getFirstValueProfRecord>:
     128:	sub	sp, sp, #0x10
     12c:	str	x0, [sp, #8]
     130:	ldr	x0, [sp, #8]
     134:	add	x0, x0, #0x8
     138:	add	sp, sp, #0x10
     13c:	ret

0000000000000140 <getValueProfDataSize>:
     140:	stp	x29, x30, [sp, #-64]!
     144:	mov	x29, sp
     148:	str	x0, [sp, #24]
     14c:	mov	w0, #0x8                   	// #8
     150:	str	w0, [sp, #56]
     154:	ldr	x0, [sp, #24]
     158:	ldr	x0, [x0]
     15c:	str	x0, [sp, #48]
     160:	str	wzr, [sp, #60]
     164:	b	1d0 <getValueProfDataSize+0x90>
     168:	ldr	x0, [sp, #24]
     16c:	ldr	x2, [x0, #16]
     170:	ldr	w1, [sp, #60]
     174:	ldr	x0, [sp, #48]
     178:	blr	x2
     17c:	str	w0, [sp, #44]
     180:	ldr	w0, [sp, #44]
     184:	cmp	w0, #0x0
     188:	b.eq	1c0 <getValueProfDataSize+0x80>  // b.none
     18c:	ldr	x0, [sp, #24]
     190:	ldr	x2, [x0, #24]
     194:	ldr	w1, [sp, #60]
     198:	ldr	x0, [sp, #48]
     19c:	blr	x2
     1a0:	mov	w1, w0
     1a4:	ldr	w0, [sp, #44]
     1a8:	bl	30 <getValueProfRecordSize>
     1ac:	mov	w1, w0
     1b0:	ldr	w0, [sp, #56]
     1b4:	add	w0, w0, w1
     1b8:	str	w0, [sp, #56]
     1bc:	b	1c4 <getValueProfDataSize+0x84>
     1c0:	nop
     1c4:	ldr	w0, [sp, #60]
     1c8:	add	w0, w0, #0x1
     1cc:	str	w0, [sp, #60]
     1d0:	ldr	w0, [sp, #60]
     1d4:	cmp	w0, #0x1
     1d8:	b.ls	168 <getValueProfDataSize+0x28>  // b.plast
     1dc:	ldr	w0, [sp, #56]
     1e0:	ldp	x29, x30, [sp], #64
     1e4:	ret

00000000000001e8 <serializeValueProfRecordFrom>:
     1e8:	stp	x29, x30, [sp, #-80]!
     1ec:	mov	x29, sp
     1f0:	str	x0, [sp, #40]
     1f4:	str	x1, [sp, #32]
     1f8:	str	w2, [sp, #28]
     1fc:	str	w3, [sp, #24]
     200:	ldr	x0, [sp, #32]
     204:	ldr	x0, [x0]
     208:	str	x0, [sp, #56]
     20c:	ldr	x0, [sp, #40]
     210:	ldr	w1, [sp, #28]
     214:	str	w1, [x0]
     218:	ldr	x0, [sp, #40]
     21c:	ldr	w1, [sp, #24]
     220:	str	w1, [x0, #4]
     224:	ldr	x0, [sp, #40]
     228:	bl	60 <getValueProfRecordValueData>
     22c:	str	x0, [sp, #64]
     230:	str	wzr, [sp, #76]
     234:	b	2ac <serializeValueProfRecordFrom+0xc4>
     238:	ldr	x0, [sp, #32]
     23c:	ldr	x3, [x0, #32]
     240:	ldr	w2, [sp, #76]
     244:	ldr	w1, [sp, #28]
     248:	ldr	x0, [sp, #56]
     24c:	blr	x3
     250:	str	w0, [sp, #52]
     254:	ldr	w0, [sp, #52]
     258:	and	w2, w0, #0xff
     25c:	ldr	x1, [sp, #40]
     260:	ldr	w0, [sp, #76]
     264:	add	x0, x1, x0
     268:	mov	w1, w2
     26c:	strb	w1, [x0, #8]
     270:	ldr	x0, [sp, #32]
     274:	ldr	x4, [x0, #48]
     278:	ldr	w3, [sp, #76]
     27c:	ldr	w2, [sp, #28]
     280:	ldr	x1, [sp, #64]
     284:	ldr	x0, [sp, #56]
     288:	blr	x4
     28c:	ldr	w0, [sp, #52]
     290:	lsl	x0, x0, #4
     294:	ldr	x1, [sp, #64]
     298:	add	x0, x1, x0
     29c:	str	x0, [sp, #64]
     2a0:	ldr	w0, [sp, #76]
     2a4:	add	w0, w0, #0x1
     2a8:	str	w0, [sp, #76]
     2ac:	ldr	w1, [sp, #76]
     2b0:	ldr	w0, [sp, #24]
     2b4:	cmp	w1, w0
     2b8:	b.cc	238 <serializeValueProfRecordFrom+0x50>  // b.lo, b.ul, b.last
     2bc:	nop
     2c0:	nop
     2c4:	ldp	x29, x30, [sp], #80
     2c8:	ret

00000000000002cc <serializeValueProfDataFrom>:
     2cc:	stp	x29, x30, [sp, #-80]!
     2d0:	mov	x29, sp
     2d4:	str	x0, [sp, #24]
     2d8:	str	x1, [sp, #16]
     2dc:	ldr	x0, [sp, #16]
     2e0:	cmp	x0, #0x0
     2e4:	b.eq	2f4 <serializeValueProfDataFrom+0x28>  // b.none
     2e8:	ldr	x0, [sp, #16]
     2ec:	ldr	w0, [x0]
     2f0:	b	2fc <serializeValueProfDataFrom+0x30>
     2f4:	ldr	x0, [sp, #24]
     2f8:	bl	140 <getValueProfDataSize>
     2fc:	str	w0, [sp, #60]
     300:	ldr	x0, [sp, #16]
     304:	cmp	x0, #0x0
     308:	b.ne	320 <serializeValueProfDataFrom+0x54>  // b.any
     30c:	ldr	x0, [sp, #24]
     310:	ldr	x1, [x0, #56]
     314:	ldr	w0, [sp, #60]
     318:	blr	x1
     31c:	b	324 <serializeValueProfDataFrom+0x58>
     320:	ldr	x0, [sp, #16]
     324:	str	x0, [sp, #48]
     328:	ldr	x0, [sp, #48]
     32c:	ldr	w1, [sp, #60]
     330:	str	w1, [x0]
     334:	ldr	x0, [sp, #24]
     338:	ldr	x1, [x0, #8]
     33c:	ldr	x0, [sp, #24]
     340:	ldr	x0, [x0]
     344:	blr	x1
     348:	mov	w1, w0
     34c:	ldr	x0, [sp, #48]
     350:	str	w1, [x0, #4]
     354:	ldr	x0, [sp, #48]
     358:	bl	128 <getFirstValueProfRecord>
     35c:	str	x0, [sp, #64]
     360:	str	wzr, [sp, #76]
     364:	b	3c4 <serializeValueProfDataFrom+0xf8>
     368:	ldr	x0, [sp, #24]
     36c:	ldr	x2, [x0, #16]
     370:	ldr	x0, [sp, #24]
     374:	ldr	x0, [x0]
     378:	ldr	w1, [sp, #76]
     37c:	blr	x2
     380:	str	w0, [sp, #44]
     384:	ldr	w0, [sp, #44]
     388:	cmp	w0, #0x0
     38c:	b.eq	3b4 <serializeValueProfDataFrom+0xe8>  // b.none
     390:	ldr	w3, [sp, #44]
     394:	ldr	w2, [sp, #76]
     398:	ldr	x1, [sp, #24]
     39c:	ldr	x0, [sp, #64]
     3a0:	bl	1e8 <serializeValueProfRecordFrom>
     3a4:	ldr	x0, [sp, #64]
     3a8:	bl	ec <getValueProfRecordNext>
     3ac:	str	x0, [sp, #64]
     3b0:	b	3b8 <serializeValueProfDataFrom+0xec>
     3b4:	nop
     3b8:	ldr	w0, [sp, #76]
     3bc:	add	w0, w0, #0x1
     3c0:	str	w0, [sp, #76]
     3c4:	ldr	w0, [sp, #76]
     3c8:	cmp	w0, #0x1
     3cc:	b.ls	368 <serializeValueProfDataFrom+0x9c>  // b.plast
     3d0:	ldr	x0, [sp, #48]
     3d4:	ldp	x29, x30, [sp], #80
     3d8:	ret

00000000000003dc <lprofSetupValueProfiler>:
     3dc:	stp	x29, x30, [sp, #-32]!
     3e0:	mov	x29, sp
     3e4:	str	xzr, [sp, #24]
     3e8:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     3ec:	add	x0, x0, #0x0
     3f0:	bl	0 <getenv>
     3f4:	str	x0, [sp, #24]
     3f8:	ldr	x0, [sp, #24]
     3fc:	cmp	x0, #0x0
     400:	b.eq	43c <lprofSetupValueProfiler+0x60>  // b.none
     404:	ldr	x0, [sp, #24]
     408:	ldrb	w0, [x0]
     40c:	cmp	w0, #0x0
     410:	b.eq	43c <lprofSetupValueProfiler+0x60>  // b.none
     414:	ldr	x0, [sp, #24]
     418:	bl	0 <atoi>
     41c:	mov	w1, w0
     420:	adrp	x0, 4 <getValueProfRecordHeaderSize+0x4>
     424:	add	x0, x0, #0x0
     428:	str	w1, [x0]
     42c:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     430:	add	x0, x0, #0x0
     434:	mov	w1, #0x1                   	// #1
     438:	str	w1, [x0]
     43c:	adrp	x0, 4 <getValueProfRecordHeaderSize+0x4>
     440:	add	x0, x0, #0x0
     444:	ldr	w0, [x0]
     448:	cmp	w0, #0xff
     44c:	b.ls	460 <lprofSetupValueProfiler+0x84>  // b.plast
     450:	adrp	x0, 4 <getValueProfRecordHeaderSize+0x4>
     454:	add	x0, x0, #0x0
     458:	mov	w1, #0xff                  	// #255
     45c:	str	w1, [x0]
     460:	nop
     464:	ldp	x29, x30, [sp], #32
     468:	ret

000000000000046c <lprofSetMaxValsPerSite>:
     46c:	sub	sp, sp, #0x10
     470:	str	w0, [sp, #12]
     474:	adrp	x0, 4 <getValueProfRecordHeaderSize+0x4>
     478:	add	x0, x0, #0x0
     47c:	ldr	w1, [sp, #12]
     480:	str	w1, [x0]
     484:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     488:	add	x0, x0, #0x0
     48c:	mov	w1, #0x1                   	// #1
     490:	str	w1, [x0]
     494:	nop
     498:	add	sp, sp, #0x10
     49c:	ret

00000000000004a0 <__llvm_profile_set_num_value_sites>:
     4a0:	sub	sp, sp, #0x10
     4a4:	str	x0, [sp, #8]
     4a8:	str	w1, [sp, #4]
     4ac:	strh	w2, [sp, #2]
     4b0:	ldr	w0, [sp, #4]
     4b4:	add	x0, x0, #0x10
     4b8:	lsl	x0, x0, #1
     4bc:	ldr	x1, [sp, #8]
     4c0:	add	x0, x1, x0
     4c4:	add	x0, x0, #0xc
     4c8:	ldrh	w1, [sp, #2]
     4cc:	strh	w1, [x0]
     4d0:	nop
     4d4:	add	sp, sp, #0x10
     4d8:	ret

00000000000004dc <__llvm_profile_iterate_data>:
     4dc:	sub	sp, sp, #0x10
     4e0:	str	x0, [sp, #8]
     4e4:	ldr	x0, [sp, #8]
     4e8:	add	x0, x0, #0x30
     4ec:	add	sp, sp, #0x10
     4f0:	ret

00000000000004f4 <__llvm_get_function_addr>:
     4f4:	sub	sp, sp, #0x10
     4f8:	str	x0, [sp, #8]
     4fc:	ldr	x0, [sp, #8]
     500:	ldr	x0, [x0, #24]
     504:	add	sp, sp, #0x10
     508:	ret

000000000000050c <allocateValueProfileCounters>:
     50c:	stp	x29, x30, [sp, #-64]!
     510:	mov	x29, sp
     514:	str	x0, [sp, #24]
     518:	str	xzr, [sp, #56]
     51c:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     520:	add	x0, x0, #0x0
     524:	str	wzr, [x0]
     528:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     52c:	add	x0, x0, #0x0
     530:	ldr	w0, [x0]
     534:	cmp	w0, #0x0
     538:	b.ne	54c <allocateValueProfileCounters+0x40>  // b.any
     53c:	adrp	x0, 4 <getValueProfRecordHeaderSize+0x4>
     540:	add	x0, x0, #0x0
     544:	mov	w1, #0xff                  	// #255
     548:	str	w1, [x0]
     54c:	str	wzr, [sp, #52]
     550:	b	588 <allocateValueProfileCounters+0x7c>
     554:	ldr	x1, [sp, #24]
     558:	ldr	w0, [sp, #52]
     55c:	add	x0, x0, #0x10
     560:	lsl	x0, x0, #1
     564:	add	x0, x1, x0
     568:	ldrh	w0, [x0, #12]
     56c:	and	x0, x0, #0xffff
     570:	ldr	x1, [sp, #56]
     574:	add	x0, x1, x0
     578:	str	x0, [sp, #56]
     57c:	ldr	w0, [sp, #52]
     580:	add	w0, w0, #0x1
     584:	str	w0, [sp, #52]
     588:	ldr	w0, [sp, #52]
     58c:	cmp	w0, #0x1
     590:	b.ls	554 <allocateValueProfileCounters+0x48>  // b.plast
     594:	mov	x1, #0x8                   	// #8
     598:	ldr	x0, [sp, #56]
     59c:	bl	0 <calloc>
     5a0:	str	x0, [sp, #40]
     5a4:	ldr	x0, [sp, #40]
     5a8:	cmp	x0, #0x0
     5ac:	b.ne	5b8 <allocateValueProfileCounters+0xac>  // b.any
     5b0:	mov	w0, #0x0                   	// #0
     5b4:	b	604 <allocateValueProfileCounters+0xf8>
     5b8:	ldr	x0, [sp, #24]
     5bc:	add	x0, x0, #0x20
     5c0:	ldr	x1, [sp, #40]
     5c4:	ldxr	x2, [x0]
     5c8:	cbnz	x2, 5d4 <allocateValueProfileCounters+0xc8>
     5cc:	stlxr	w3, x1, [x0]
     5d0:	cbnz	w3, 5c4 <allocateValueProfileCounters+0xb8>
     5d4:	cmp	x2, #0x0
     5d8:	dmb	ish
     5dc:	cset	w0, eq  // eq = none
     5e0:	eor	w0, w0, #0x1
     5e4:	and	w0, w0, #0xff
     5e8:	cmp	w0, #0x0
     5ec:	b.eq	600 <allocateValueProfileCounters+0xf4>  // b.none
     5f0:	ldr	x0, [sp, #40]
     5f4:	bl	0 <free>
     5f8:	mov	w0, #0x0                   	// #0
     5fc:	b	604 <allocateValueProfileCounters+0xf8>
     600:	mov	w0, #0x1                   	// #1
     604:	ldp	x29, x30, [sp], #64
     608:	ret

000000000000060c <allocateOneNode>:
     60c:	stp	x29, x30, [sp, #-32]!
     610:	mov	x29, sp
     614:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     618:	add	x0, x0, #0x0
     61c:	ldr	w0, [x0]
     620:	cmp	w0, #0x0
     624:	b.ne	638 <allocateOneNode+0x2c>  // b.any
     628:	mov	x1, #0x18                  	// #24
     62c:	mov	x0, #0x1                   	// #1
     630:	bl	0 <calloc>
     634:	b	6f4 <allocateOneNode+0xe8>
     638:	adrp	x0, 0 <CurrentVNode>
     63c:	add	x0, x0, #0x0
     640:	ldr	x0, [x0]
     644:	add	x1, x0, #0x18
     648:	adrp	x0, 0 <EndVNode>
     64c:	add	x0, x0, #0x0
     650:	ldr	x0, [x0]
     654:	cmp	x1, x0
     658:	b.ls	6ac <allocateOneNode+0xa0>  // b.plast
     65c:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     660:	add	x0, x0, #0x0
     664:	ldr	w0, [x0]
     668:	add	w2, w0, #0x1
     66c:	adrp	x1, 0 <getValueProfRecordHeaderSize>
     670:	add	x1, x1, #0x0
     674:	str	w2, [x1]
     678:	cmp	w0, #0x9
     67c:	b.gt	6a4 <allocateOneNode+0x98>
     680:	adrp	x0, 0 <stderr>
     684:	ldr	x0, [x0]
     688:	ldr	x3, [x0]
     68c:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     690:	add	x2, x0, #0x0
     694:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     698:	add	x1, x0, #0x0
     69c:	mov	x0, x3
     6a0:	bl	0 <fprintf>
     6a4:	mov	x0, #0x0                   	// #0
     6a8:	b	6f4 <allocateOneNode+0xe8>
     6ac:	adrp	x0, 0 <CurrentVNode>
     6b0:	add	x0, x0, #0x0
     6b4:	ldxr	x1, [x0]
     6b8:	add	x2, x1, #0x18
     6bc:	stlxr	w3, x2, [x0]
     6c0:	cbnz	w3, 6b4 <allocateOneNode+0xa8>
     6c4:	dmb	ish
     6c8:	str	x1, [sp, #24]
     6cc:	ldr	x0, [sp, #24]
     6d0:	add	x1, x0, #0x18
     6d4:	adrp	x0, 0 <EndVNode>
     6d8:	add	x0, x0, #0x0
     6dc:	ldr	x0, [x0]
     6e0:	cmp	x1, x0
     6e4:	b.ls	6f0 <allocateOneNode+0xe4>  // b.plast
     6e8:	mov	x0, #0x0                   	// #0
     6ec:	b	6f4 <allocateOneNode+0xe8>
     6f0:	ldr	x0, [sp, #24]
     6f4:	ldp	x29, x30, [sp], #32
     6f8:	ret

00000000000006fc <__llvm_profile_instrument_target>:
     6fc:	stp	x29, x30, [sp, #-144]!
     700:	mov	x29, sp
     704:	str	x0, [sp, #40]
     708:	str	x1, [sp, #32]
     70c:	str	w2, [sp, #28]
     710:	ldr	x0, [sp, #40]
     714:	str	x0, [sp, #136]
     718:	ldr	x0, [sp, #32]
     71c:	str	x0, [sp, #128]
     720:	ldr	w0, [sp, #28]
     724:	str	w0, [sp, #124]
     728:	mov	x0, #0x1                   	// #1
     72c:	str	x0, [sp, #112]
     730:	ldr	x0, [sp, #128]
     734:	str	x0, [sp, #104]
     738:	ldr	x0, [sp, #104]
     73c:	cmp	x0, #0x0
     740:	b.eq	9a0 <__llvm_profile_instrument_target+0x2a4>  // b.none
     744:	ldr	x0, [sp, #112]
     748:	cmp	x0, #0x0
     74c:	b.eq	9a8 <__llvm_profile_instrument_target+0x2ac>  // b.none
     750:	ldr	x0, [sp, #104]
     754:	ldr	x0, [x0, #32]
     758:	cmp	x0, #0x0
     75c:	b.ne	770 <__llvm_profile_instrument_target+0x74>  // b.any
     760:	ldr	x0, [sp, #104]
     764:	bl	50c <allocateValueProfileCounters>
     768:	cmp	w0, #0x0
     76c:	b.eq	9b0 <__llvm_profile_instrument_target+0x2b4>  // b.none
     770:	ldr	x0, [sp, #104]
     774:	ldr	x0, [x0, #32]
     778:	str	x0, [sp, #96]
     77c:	str	xzr, [sp, #88]
     780:	str	xzr, [sp, #80]
     784:	ldr	w0, [sp, #124]
     788:	lsl	x0, x0, #3
     78c:	ldr	x1, [sp, #96]
     790:	add	x0, x1, x0
     794:	ldr	x0, [x0]
     798:	str	x0, [sp, #72]
     79c:	mov	x0, #0xffffffffffffffff    	// #-1
     7a0:	str	x0, [sp, #64]
     7a4:	strb	wzr, [sp, #63]
     7a8:	b	824 <__llvm_profile_instrument_target+0x128>
     7ac:	ldr	x0, [sp, #72]
     7b0:	ldr	x0, [x0]
     7b4:	ldr	x1, [sp, #136]
     7b8:	cmp	x1, x0
     7bc:	b.ne	7dc <__llvm_profile_instrument_target+0xe0>  // b.any
     7c0:	ldr	x0, [sp, #72]
     7c4:	ldr	x1, [x0, #8]
     7c8:	ldr	x0, [sp, #112]
     7cc:	add	x1, x1, x0
     7d0:	ldr	x0, [sp, #72]
     7d4:	str	x1, [x0, #8]
     7d8:	b	9bc <__llvm_profile_instrument_target+0x2c0>
     7dc:	ldr	x0, [sp, #72]
     7e0:	ldr	x1, [x0, #8]
     7e4:	ldr	x0, [sp, #64]
     7e8:	cmp	x1, x0
     7ec:	b.cs	804 <__llvm_profile_instrument_target+0x108>  // b.hs, b.nlast
     7f0:	ldr	x0, [sp, #72]
     7f4:	ldr	x0, [x0, #8]
     7f8:	str	x0, [sp, #64]
     7fc:	ldr	x0, [sp, #72]
     800:	str	x0, [sp, #80]
     804:	ldr	x0, [sp, #72]
     808:	str	x0, [sp, #88]
     80c:	ldr	x0, [sp, #72]
     810:	ldr	x0, [x0, #16]
     814:	str	x0, [sp, #72]
     818:	ldrb	w0, [sp, #63]
     81c:	add	w0, w0, #0x1
     820:	strb	w0, [sp, #63]
     824:	ldr	x0, [sp, #72]
     828:	cmp	x0, #0x0
     82c:	b.ne	7ac <__llvm_profile_instrument_target+0xb0>  // b.any
     830:	ldrb	w1, [sp, #63]
     834:	adrp	x0, 4 <getValueProfRecordHeaderSize+0x4>
     838:	add	x0, x0, #0x0
     83c:	ldr	w0, [x0]
     840:	cmp	w1, w0
     844:	b.cc	89c <__llvm_profile_instrument_target+0x1a0>  // b.lo, b.ul, b.last
     848:	ldr	x0, [sp, #80]
     84c:	ldr	x0, [x0, #8]
     850:	ldr	x1, [sp, #112]
     854:	cmp	x1, x0
     858:	b.cc	880 <__llvm_profile_instrument_target+0x184>  // b.lo, b.ul, b.last
     85c:	ldr	x0, [sp, #80]
     860:	str	x0, [sp, #72]
     864:	ldr	x0, [sp, #72]
     868:	ldr	x1, [sp, #136]
     86c:	str	x1, [x0]
     870:	ldr	x0, [sp, #72]
     874:	ldr	x1, [sp, #112]
     878:	str	x1, [x0, #8]
     87c:	b	9bc <__llvm_profile_instrument_target+0x2c0>
     880:	ldr	x0, [sp, #80]
     884:	ldr	x1, [x0, #8]
     888:	ldr	x0, [sp, #112]
     88c:	sub	x1, x1, x0
     890:	ldr	x0, [sp, #80]
     894:	str	x1, [x0, #8]
     898:	b	9bc <__llvm_profile_instrument_target+0x2c0>
     89c:	bl	60c <allocateOneNode>
     8a0:	str	x0, [sp, #72]
     8a4:	ldr	x0, [sp, #72]
     8a8:	cmp	x0, #0x0
     8ac:	b.eq	9b8 <__llvm_profile_instrument_target+0x2bc>  // b.none
     8b0:	ldr	x0, [sp, #72]
     8b4:	ldr	x1, [sp, #136]
     8b8:	str	x1, [x0]
     8bc:	ldr	x0, [sp, #72]
     8c0:	ldr	x1, [x0, #8]
     8c4:	ldr	x0, [sp, #112]
     8c8:	add	x1, x1, x0
     8cc:	ldr	x0, [sp, #72]
     8d0:	str	x1, [x0, #8]
     8d4:	str	wzr, [sp, #56]
     8d8:	ldr	w0, [sp, #124]
     8dc:	lsl	x0, x0, #3
     8e0:	ldr	x1, [sp, #96]
     8e4:	add	x0, x1, x0
     8e8:	ldr	x0, [x0]
     8ec:	cmp	x0, #0x0
     8f0:	b.ne	92c <__llvm_profile_instrument_target+0x230>  // b.any
     8f4:	ldr	w0, [sp, #124]
     8f8:	lsl	x0, x0, #3
     8fc:	ldr	x1, [sp, #96]
     900:	add	x0, x1, x0
     904:	ldr	x1, [sp, #72]
     908:	ldxr	x2, [x0]
     90c:	cbnz	x2, 918 <__llvm_profile_instrument_target+0x21c>
     910:	stlxr	w3, x1, [x0]
     914:	cbnz	w3, 908 <__llvm_profile_instrument_target+0x20c>
     918:	cmp	x2, #0x0
     91c:	dmb	ish
     920:	cset	w0, eq  // eq = none
     924:	str	w0, [sp, #56]
     928:	b	974 <__llvm_profile_instrument_target+0x278>
     92c:	ldr	x0, [sp, #88]
     930:	cmp	x0, #0x0
     934:	b.eq	974 <__llvm_profile_instrument_target+0x278>  // b.none
     938:	ldr	x0, [sp, #88]
     93c:	ldr	x0, [x0, #16]
     940:	cmp	x0, #0x0
     944:	b.ne	974 <__llvm_profile_instrument_target+0x278>  // b.any
     948:	ldr	x0, [sp, #88]
     94c:	add	x0, x0, #0x10
     950:	ldr	x1, [sp, #72]
     954:	ldxr	x2, [x0]
     958:	cbnz	x2, 964 <__llvm_profile_instrument_target+0x268>
     95c:	stlxr	w3, x1, [x0]
     960:	cbnz	w3, 954 <__llvm_profile_instrument_target+0x258>
     964:	cmp	x2, #0x0
     968:	dmb	ish
     96c:	cset	w0, eq  // eq = none
     970:	str	w0, [sp, #56]
     974:	ldr	w0, [sp, #56]
     978:	cmp	w0, #0x0
     97c:	b.ne	9bc <__llvm_profile_instrument_target+0x2c0>  // b.any
     980:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     984:	add	x0, x0, #0x0
     988:	ldr	w0, [x0]
     98c:	cmp	w0, #0x0
     990:	b.ne	9bc <__llvm_profile_instrument_target+0x2c0>  // b.any
     994:	ldr	x0, [sp, #72]
     998:	bl	0 <free>
     99c:	b	9bc <__llvm_profile_instrument_target+0x2c0>
     9a0:	nop
     9a4:	b	9bc <__llvm_profile_instrument_target+0x2c0>
     9a8:	nop
     9ac:	b	9bc <__llvm_profile_instrument_target+0x2c0>
     9b0:	nop
     9b4:	b	9bc <__llvm_profile_instrument_target+0x2c0>
     9b8:	nop
     9bc:	nop
     9c0:	ldp	x29, x30, [sp], #144
     9c4:	ret

00000000000009c8 <__llvm_profile_instrument_target_value>:
     9c8:	stp	x29, x30, [sp, #-144]!
     9cc:	mov	x29, sp
     9d0:	str	x0, [sp, #40]
     9d4:	str	x1, [sp, #32]
     9d8:	str	w2, [sp, #28]
     9dc:	str	x3, [sp, #16]
     9e0:	ldr	x0, [sp, #40]
     9e4:	str	x0, [sp, #136]
     9e8:	ldr	x0, [sp, #32]
     9ec:	str	x0, [sp, #128]
     9f0:	ldr	w0, [sp, #28]
     9f4:	str	w0, [sp, #124]
     9f8:	ldr	x0, [sp, #16]
     9fc:	str	x0, [sp, #112]
     a00:	ldr	x0, [sp, #128]
     a04:	str	x0, [sp, #104]
     a08:	ldr	x0, [sp, #104]
     a0c:	cmp	x0, #0x0
     a10:	b.eq	c70 <__llvm_profile_instrument_target_value+0x2a8>  // b.none
     a14:	ldr	x0, [sp, #112]
     a18:	cmp	x0, #0x0
     a1c:	b.eq	c78 <__llvm_profile_instrument_target_value+0x2b0>  // b.none
     a20:	ldr	x0, [sp, #104]
     a24:	ldr	x0, [x0, #32]
     a28:	cmp	x0, #0x0
     a2c:	b.ne	a40 <__llvm_profile_instrument_target_value+0x78>  // b.any
     a30:	ldr	x0, [sp, #104]
     a34:	bl	50c <allocateValueProfileCounters>
     a38:	cmp	w0, #0x0
     a3c:	b.eq	c80 <__llvm_profile_instrument_target_value+0x2b8>  // b.none
     a40:	ldr	x0, [sp, #104]
     a44:	ldr	x0, [x0, #32]
     a48:	str	x0, [sp, #96]
     a4c:	str	xzr, [sp, #88]
     a50:	str	xzr, [sp, #80]
     a54:	ldr	w0, [sp, #124]
     a58:	lsl	x0, x0, #3
     a5c:	ldr	x1, [sp, #96]
     a60:	add	x0, x1, x0
     a64:	ldr	x0, [x0]
     a68:	str	x0, [sp, #72]
     a6c:	mov	x0, #0xffffffffffffffff    	// #-1
     a70:	str	x0, [sp, #64]
     a74:	strb	wzr, [sp, #63]
     a78:	b	af4 <__llvm_profile_instrument_target_value+0x12c>
     a7c:	ldr	x0, [sp, #72]
     a80:	ldr	x0, [x0]
     a84:	ldr	x1, [sp, #136]
     a88:	cmp	x1, x0
     a8c:	b.ne	aac <__llvm_profile_instrument_target_value+0xe4>  // b.any
     a90:	ldr	x0, [sp, #72]
     a94:	ldr	x1, [x0, #8]
     a98:	ldr	x0, [sp, #112]
     a9c:	add	x1, x1, x0
     aa0:	ldr	x0, [sp, #72]
     aa4:	str	x1, [x0, #8]
     aa8:	b	c8c <__llvm_profile_instrument_target_value+0x2c4>
     aac:	ldr	x0, [sp, #72]
     ab0:	ldr	x1, [x0, #8]
     ab4:	ldr	x0, [sp, #64]
     ab8:	cmp	x1, x0
     abc:	b.cs	ad4 <__llvm_profile_instrument_target_value+0x10c>  // b.hs, b.nlast
     ac0:	ldr	x0, [sp, #72]
     ac4:	ldr	x0, [x0, #8]
     ac8:	str	x0, [sp, #64]
     acc:	ldr	x0, [sp, #72]
     ad0:	str	x0, [sp, #80]
     ad4:	ldr	x0, [sp, #72]
     ad8:	str	x0, [sp, #88]
     adc:	ldr	x0, [sp, #72]
     ae0:	ldr	x0, [x0, #16]
     ae4:	str	x0, [sp, #72]
     ae8:	ldrb	w0, [sp, #63]
     aec:	add	w0, w0, #0x1
     af0:	strb	w0, [sp, #63]
     af4:	ldr	x0, [sp, #72]
     af8:	cmp	x0, #0x0
     afc:	b.ne	a7c <__llvm_profile_instrument_target_value+0xb4>  // b.any
     b00:	ldrb	w1, [sp, #63]
     b04:	adrp	x0, 4 <getValueProfRecordHeaderSize+0x4>
     b08:	add	x0, x0, #0x0
     b0c:	ldr	w0, [x0]
     b10:	cmp	w1, w0
     b14:	b.cc	b6c <__llvm_profile_instrument_target_value+0x1a4>  // b.lo, b.ul, b.last
     b18:	ldr	x0, [sp, #80]
     b1c:	ldr	x0, [x0, #8]
     b20:	ldr	x1, [sp, #112]
     b24:	cmp	x1, x0
     b28:	b.cc	b50 <__llvm_profile_instrument_target_value+0x188>  // b.lo, b.ul, b.last
     b2c:	ldr	x0, [sp, #80]
     b30:	str	x0, [sp, #72]
     b34:	ldr	x0, [sp, #72]
     b38:	ldr	x1, [sp, #136]
     b3c:	str	x1, [x0]
     b40:	ldr	x0, [sp, #72]
     b44:	ldr	x1, [sp, #112]
     b48:	str	x1, [x0, #8]
     b4c:	b	c8c <__llvm_profile_instrument_target_value+0x2c4>
     b50:	ldr	x0, [sp, #80]
     b54:	ldr	x1, [x0, #8]
     b58:	ldr	x0, [sp, #112]
     b5c:	sub	x1, x1, x0
     b60:	ldr	x0, [sp, #80]
     b64:	str	x1, [x0, #8]
     b68:	b	c8c <__llvm_profile_instrument_target_value+0x2c4>
     b6c:	bl	60c <allocateOneNode>
     b70:	str	x0, [sp, #72]
     b74:	ldr	x0, [sp, #72]
     b78:	cmp	x0, #0x0
     b7c:	b.eq	c88 <__llvm_profile_instrument_target_value+0x2c0>  // b.none
     b80:	ldr	x0, [sp, #72]
     b84:	ldr	x1, [sp, #136]
     b88:	str	x1, [x0]
     b8c:	ldr	x0, [sp, #72]
     b90:	ldr	x1, [x0, #8]
     b94:	ldr	x0, [sp, #112]
     b98:	add	x1, x1, x0
     b9c:	ldr	x0, [sp, #72]
     ba0:	str	x1, [x0, #8]
     ba4:	str	wzr, [sp, #56]
     ba8:	ldr	w0, [sp, #124]
     bac:	lsl	x0, x0, #3
     bb0:	ldr	x1, [sp, #96]
     bb4:	add	x0, x1, x0
     bb8:	ldr	x0, [x0]
     bbc:	cmp	x0, #0x0
     bc0:	b.ne	bfc <__llvm_profile_instrument_target_value+0x234>  // b.any
     bc4:	ldr	w0, [sp, #124]
     bc8:	lsl	x0, x0, #3
     bcc:	ldr	x1, [sp, #96]
     bd0:	add	x0, x1, x0
     bd4:	ldr	x1, [sp, #72]
     bd8:	ldxr	x2, [x0]
     bdc:	cbnz	x2, be8 <__llvm_profile_instrument_target_value+0x220>
     be0:	stlxr	w3, x1, [x0]
     be4:	cbnz	w3, bd8 <__llvm_profile_instrument_target_value+0x210>
     be8:	cmp	x2, #0x0
     bec:	dmb	ish
     bf0:	cset	w0, eq  // eq = none
     bf4:	str	w0, [sp, #56]
     bf8:	b	c44 <__llvm_profile_instrument_target_value+0x27c>
     bfc:	ldr	x0, [sp, #88]
     c00:	cmp	x0, #0x0
     c04:	b.eq	c44 <__llvm_profile_instrument_target_value+0x27c>  // b.none
     c08:	ldr	x0, [sp, #88]
     c0c:	ldr	x0, [x0, #16]
     c10:	cmp	x0, #0x0
     c14:	b.ne	c44 <__llvm_profile_instrument_target_value+0x27c>  // b.any
     c18:	ldr	x0, [sp, #88]
     c1c:	add	x0, x0, #0x10
     c20:	ldr	x1, [sp, #72]
     c24:	ldxr	x2, [x0]
     c28:	cbnz	x2, c34 <__llvm_profile_instrument_target_value+0x26c>
     c2c:	stlxr	w3, x1, [x0]
     c30:	cbnz	w3, c24 <__llvm_profile_instrument_target_value+0x25c>
     c34:	cmp	x2, #0x0
     c38:	dmb	ish
     c3c:	cset	w0, eq  // eq = none
     c40:	str	w0, [sp, #56]
     c44:	ldr	w0, [sp, #56]
     c48:	cmp	w0, #0x0
     c4c:	b.ne	c8c <__llvm_profile_instrument_target_value+0x2c4>  // b.any
     c50:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     c54:	add	x0, x0, #0x0
     c58:	ldr	w0, [x0]
     c5c:	cmp	w0, #0x0
     c60:	b.ne	c8c <__llvm_profile_instrument_target_value+0x2c4>  // b.any
     c64:	ldr	x0, [sp, #72]
     c68:	bl	0 <free>
     c6c:	b	c8c <__llvm_profile_instrument_target_value+0x2c4>
     c70:	nop
     c74:	b	c8c <__llvm_profile_instrument_target_value+0x2c4>
     c78:	nop
     c7c:	b	c8c <__llvm_profile_instrument_target_value+0x2c4>
     c80:	nop
     c84:	b	c8c <__llvm_profile_instrument_target_value+0x2c4>
     c88:	nop
     c8c:	nop
     c90:	ldp	x29, x30, [sp], #144
     c94:	ret

0000000000000c98 <__llvm_profile_instrument_range>:
     c98:	stp	x29, x30, [sp, #-64]!
     c9c:	mov	x29, sp
     ca0:	str	x0, [sp, #56]
     ca4:	str	x1, [sp, #48]
     ca8:	str	w2, [sp, #44]
     cac:	str	x3, [sp, #32]
     cb0:	str	x4, [sp, #24]
     cb4:	str	x5, [sp, #16]
     cb8:	ldr	x1, [sp, #16]
     cbc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
     cc0:	cmp	x1, x0
     cc4:	b.eq	ce4 <__llvm_profile_instrument_range+0x4c>  // b.none
     cc8:	ldr	x0, [sp, #56]
     ccc:	ldr	x1, [sp, #16]
     cd0:	cmp	x1, x0
     cd4:	b.gt	ce4 <__llvm_profile_instrument_range+0x4c>
     cd8:	ldr	x0, [sp, #16]
     cdc:	str	x0, [sp, #56]
     ce0:	b	d10 <__llvm_profile_instrument_range+0x78>
     ce4:	ldr	x0, [sp, #56]
     ce8:	ldr	x1, [sp, #32]
     cec:	cmp	x1, x0
     cf0:	b.gt	d04 <__llvm_profile_instrument_range+0x6c>
     cf4:	ldr	x0, [sp, #56]
     cf8:	ldr	x1, [sp, #24]
     cfc:	cmp	x1, x0
     d00:	b.ge	d10 <__llvm_profile_instrument_range+0x78>  // b.tcont
     d04:	ldr	x0, [sp, #24]
     d08:	add	x0, x0, #0x1
     d0c:	str	x0, [sp, #56]
     d10:	ldr	w2, [sp, #44]
     d14:	ldr	x1, [sp, #48]
     d18:	ldr	x0, [sp, #56]
     d1c:	bl	6fc <__llvm_profile_instrument_target>
     d20:	nop
     d24:	ldp	x29, x30, [sp], #64
     d28:	ret

0000000000000d2c <getNumValueSitesRT>:
     d2c:	sub	sp, sp, #0x10
     d30:	str	x0, [sp, #8]
     d34:	str	w1, [sp, #4]
     d38:	ldr	x0, [sp, #8]
     d3c:	ldr	x1, [x0]
     d40:	ldr	w0, [sp, #4]
     d44:	add	x0, x0, #0x10
     d48:	lsl	x0, x0, #1
     d4c:	add	x0, x1, x0
     d50:	ldrh	w0, [x0, #12]
     d54:	add	sp, sp, #0x10
     d58:	ret

0000000000000d5c <getNumValueDataRT>:
     d5c:	sub	sp, sp, #0x20
     d60:	str	x0, [sp, #8]
     d64:	str	w1, [sp, #4]
     d68:	str	wzr, [sp, #28]
     d6c:	ldr	x0, [sp, #8]
     d70:	str	x0, [sp, #16]
     d74:	ldr	x0, [sp, #16]
     d78:	ldr	x1, [x0, #24]
     d7c:	ldr	w0, [sp, #4]
     d80:	lsl	x0, x0, #3
     d84:	add	x0, x1, x0
     d88:	ldr	x0, [x0]
     d8c:	cmp	x0, #0x0
     d90:	b.ne	d9c <getNumValueDataRT+0x40>  // b.any
     d94:	mov	w0, #0x0                   	// #0
     d98:	b	e14 <getNumValueDataRT+0xb8>
     d9c:	str	wzr, [sp, #24]
     da0:	b	de4 <getNumValueDataRT+0x88>
     da4:	ldr	x0, [sp, #16]
     da8:	ldr	x1, [x0, #24]
     dac:	ldr	w0, [sp, #4]
     db0:	lsl	x0, x0, #3
     db4:	add	x0, x1, x0
     db8:	ldr	x1, [x0]
     dbc:	ldr	w0, [sp, #24]
     dc0:	add	x0, x1, x0
     dc4:	ldrb	w0, [x0]
     dc8:	mov	w1, w0
     dcc:	ldr	w0, [sp, #28]
     dd0:	add	w0, w0, w1
     dd4:	str	w0, [sp, #28]
     dd8:	ldr	w0, [sp, #24]
     ddc:	add	w0, w0, #0x1
     de0:	str	w0, [sp, #24]
     de4:	ldr	x0, [sp, #16]
     de8:	ldr	x1, [x0]
     dec:	ldr	w0, [sp, #4]
     df0:	add	x0, x0, #0x10
     df4:	lsl	x0, x0, #1
     df8:	add	x0, x1, x0
     dfc:	ldrh	w0, [x0, #12]
     e00:	mov	w1, w0
     e04:	ldr	w0, [sp, #24]
     e08:	cmp	w0, w1
     e0c:	b.cc	da4 <getNumValueDataRT+0x48>  // b.lo, b.ul, b.last
     e10:	ldr	w0, [sp, #28]
     e14:	add	sp, sp, #0x20
     e18:	ret

0000000000000e1c <getNumValueDataForSiteRT>:
     e1c:	sub	sp, sp, #0x20
     e20:	str	x0, [sp, #8]
     e24:	str	w1, [sp, #4]
     e28:	str	w2, [sp]
     e2c:	ldr	x0, [sp, #8]
     e30:	str	x0, [sp, #24]
     e34:	ldr	x0, [sp, #24]
     e38:	ldr	x1, [x0, #24]
     e3c:	ldr	w0, [sp, #4]
     e40:	lsl	x0, x0, #3
     e44:	add	x0, x1, x0
     e48:	ldr	x1, [x0]
     e4c:	ldr	w0, [sp]
     e50:	add	x0, x1, x0
     e54:	ldrb	w0, [x0]
     e58:	add	sp, sp, #0x20
     e5c:	ret

0000000000000e60 <initializeValueProfRuntimeRecord>:
     e60:	sub	sp, sp, #0x40
     e64:	str	x0, [sp, #8]
     e68:	str	x1, [sp]
     e6c:	str	wzr, [sp, #52]
     e70:	str	wzr, [sp, #48]
     e74:	ldr	x0, [sp, #8]
     e78:	ldr	x0, [x0, #32]
     e7c:	str	x0, [sp, #24]
     e80:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     e84:	add	x0, x0, #0x0
     e88:	ldr	x1, [sp, #8]
     e8c:	str	x1, [x0]
     e90:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     e94:	add	x0, x0, #0x0
     e98:	ldr	x1, [sp]
     e9c:	str	x1, [x0, #24]
     ea0:	str	wzr, [sp, #60]
     ea4:	b	1010 <initializeValueProfRuntimeRecord+0x1b0>
     ea8:	ldr	x1, [sp, #8]
     eac:	ldr	w0, [sp, #60]
     eb0:	add	x0, x0, #0x10
     eb4:	lsl	x0, x0, #1
     eb8:	add	x0, x1, x0
     ebc:	ldrh	w0, [x0, #12]
     ec0:	strh	w0, [sp, #22]
     ec4:	ldrh	w0, [sp, #22]
     ec8:	cmp	w0, #0x0
     ecc:	b.eq	1000 <initializeValueProfRuntimeRecord+0x1a0>  // b.none
     ed0:	ldr	w0, [sp, #48]
     ed4:	add	w0, w0, #0x1
     ed8:	str	w0, [sp, #48]
     edc:	ldr	x0, [sp, #24]
     ee0:	cmp	x0, #0x0
     ee4:	b.eq	efc <initializeValueProfRuntimeRecord+0x9c>  // b.none
     ee8:	ldr	w0, [sp, #52]
     eec:	lsl	x0, x0, #3
     ef0:	ldr	x1, [sp, #24]
     ef4:	add	x0, x1, x0
     ef8:	b	f00 <initializeValueProfRuntimeRecord+0xa0>
     efc:	mov	x0, #0x0                   	// #0
     f00:	adrp	x1, 0 <getValueProfRecordHeaderSize>
     f04:	add	x2, x1, #0x0
     f08:	ldr	w1, [sp, #60]
     f0c:	lsl	x1, x1, #3
     f10:	add	x1, x2, x1
     f14:	str	x0, [x1, #8]
     f18:	str	wzr, [sp, #56]
     f1c:	b	fdc <initializeValueProfRuntimeRecord+0x17c>
     f20:	str	wzr, [sp, #44]
     f24:	ldr	x0, [sp, #24]
     f28:	cmp	x0, #0x0
     f2c:	b.eq	f5c <initializeValueProfRuntimeRecord+0xfc>  // b.none
     f30:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     f34:	add	x1, x0, #0x0
     f38:	ldr	w0, [sp, #60]
     f3c:	lsl	x0, x0, #3
     f40:	add	x0, x1, x0
     f44:	ldr	x1, [x0, #8]
     f48:	ldr	w0, [sp, #56]
     f4c:	lsl	x0, x0, #3
     f50:	add	x0, x1, x0
     f54:	ldr	x0, [x0]
     f58:	b	f60 <initializeValueProfRuntimeRecord+0x100>
     f5c:	mov	x0, #0x0                   	// #0
     f60:	str	x0, [sp, #32]
     f64:	b	f80 <initializeValueProfRuntimeRecord+0x120>
     f68:	ldr	w0, [sp, #44]
     f6c:	add	w0, w0, #0x1
     f70:	str	w0, [sp, #44]
     f74:	ldr	x0, [sp, #32]
     f78:	ldr	x0, [x0, #16]
     f7c:	str	x0, [sp, #32]
     f80:	ldr	x0, [sp, #32]
     f84:	cmp	x0, #0x0
     f88:	b.ne	f68 <initializeValueProfRuntimeRecord+0x108>  // b.any
     f8c:	ldr	w0, [sp, #44]
     f90:	cmp	w0, #0xff
     f94:	b.ls	fa0 <initializeValueProfRuntimeRecord+0x140>  // b.plast
     f98:	mov	w0, #0xff                  	// #255
     f9c:	str	w0, [sp, #44]
     fa0:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     fa4:	add	x0, x0, #0x0
     fa8:	ldr	x1, [x0, #24]
     fac:	ldr	w0, [sp, #60]
     fb0:	lsl	x0, x0, #3
     fb4:	add	x0, x1, x0
     fb8:	ldr	x1, [x0]
     fbc:	ldr	w0, [sp, #56]
     fc0:	add	x0, x1, x0
     fc4:	ldr	w1, [sp, #44]
     fc8:	and	w1, w1, #0xff
     fcc:	strb	w1, [x0]
     fd0:	ldr	w0, [sp, #56]
     fd4:	add	w0, w0, #0x1
     fd8:	str	w0, [sp, #56]
     fdc:	ldrh	w0, [sp, #22]
     fe0:	ldr	w1, [sp, #56]
     fe4:	cmp	w1, w0
     fe8:	b.cc	f20 <initializeValueProfRuntimeRecord+0xc0>  // b.lo, b.ul, b.last
     fec:	ldrh	w0, [sp, #22]
     ff0:	ldr	w1, [sp, #52]
     ff4:	add	w0, w1, w0
     ff8:	str	w0, [sp, #52]
     ffc:	b	1004 <initializeValueProfRuntimeRecord+0x1a4>
    1000:	nop
    1004:	ldr	w0, [sp, #60]
    1008:	add	w0, w0, #0x1
    100c:	str	w0, [sp, #60]
    1010:	ldr	w0, [sp, #60]
    1014:	cmp	w0, #0x1
    1018:	b.ls	ea8 <initializeValueProfRuntimeRecord+0x48>  // b.plast
    101c:	ldr	w0, [sp, #48]
    1020:	add	sp, sp, #0x40
    1024:	ret

0000000000001028 <getNextNValueData>:
    1028:	sub	sp, sp, #0x30
    102c:	str	w0, [sp, #28]
    1030:	str	w1, [sp, #24]
    1034:	str	x2, [sp, #16]
    1038:	str	x3, [sp, #8]
    103c:	str	w4, [sp, #4]
    1040:	ldr	x0, [sp, #8]
    1044:	cmp	x0, #0x0
    1048:	b.ne	1078 <getNextNValueData+0x50>  // b.any
    104c:	adrp	x0, 0 <getValueProfRecordHeaderSize>
    1050:	add	x1, x0, #0x0
    1054:	ldr	w0, [sp, #28]
    1058:	lsl	x0, x0, #3
    105c:	add	x0, x1, x0
    1060:	ldr	x1, [x0, #8]
    1064:	ldr	w0, [sp, #24]
    1068:	lsl	x0, x0, #3
    106c:	add	x0, x1, x0
    1070:	ldr	x0, [x0]
    1074:	b	107c <getNextNValueData+0x54>
    1078:	ldr	x0, [sp, #8]
    107c:	str	x0, [sp, #32]
    1080:	str	wzr, [sp, #44]
    1084:	b	10d8 <getNextNValueData+0xb0>
    1088:	ldr	w0, [sp, #44]
    108c:	lsl	x0, x0, #4
    1090:	ldr	x1, [sp, #16]
    1094:	add	x0, x1, x0
    1098:	ldr	x1, [sp, #32]
    109c:	ldr	x1, [x1]
    10a0:	str	x1, [x0]
    10a4:	ldr	w0, [sp, #44]
    10a8:	lsl	x0, x0, #4
    10ac:	ldr	x1, [sp, #16]
    10b0:	add	x0, x1, x0
    10b4:	ldr	x1, [sp, #32]
    10b8:	ldr	x1, [x1, #8]
    10bc:	str	x1, [x0, #8]
    10c0:	ldr	x0, [sp, #32]
    10c4:	ldr	x0, [x0, #16]
    10c8:	str	x0, [sp, #32]
    10cc:	ldr	w0, [sp, #44]
    10d0:	add	w0, w0, #0x1
    10d4:	str	w0, [sp, #44]
    10d8:	ldr	w1, [sp, #44]
    10dc:	ldr	w0, [sp, #4]
    10e0:	cmp	w1, w0
    10e4:	b.cc	1088 <getNextNValueData+0x60>  // b.lo, b.ul, b.last
    10e8:	ldr	x0, [sp, #32]
    10ec:	add	sp, sp, #0x30
    10f0:	ret

00000000000010f4 <getValueProfDataSizeWrapper>:
    10f4:	stp	x29, x30, [sp, #-16]!
    10f8:	mov	x29, sp
    10fc:	adrp	x0, 0 <getValueProfRecordHeaderSize>
    1100:	add	x0, x0, #0x0
    1104:	bl	140 <getValueProfDataSize>
    1108:	ldp	x29, x30, [sp], #16
    110c:	ret

0000000000001110 <getNumValueDataForSiteWrapper>:
    1110:	stp	x29, x30, [sp, #-32]!
    1114:	mov	x29, sp
    1118:	str	w0, [sp, #28]
    111c:	str	w1, [sp, #24]
    1120:	ldr	w2, [sp, #24]
    1124:	ldr	w1, [sp, #28]
    1128:	adrp	x0, 0 <getValueProfRecordHeaderSize>
    112c:	add	x0, x0, #0x0
    1130:	bl	e1c <getNumValueDataForSiteRT>
    1134:	ldp	x29, x30, [sp], #32
    1138:	ret

000000000000113c <lprofGetVPDataReader>:
    113c:	adrp	x0, 0 <getValueProfRecordHeaderSize>
    1140:	add	x0, x0, #0x0
    1144:	ret

InstrProfilingBuffer.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_is_continuous_mode_enabled>:
   0:	adrp	x0, 0 <__llvm_profile_is_continuous_mode_enabled>
   4:	add	x0, x0, #0x0
   8:	ldr	w0, [x0]
   c:	ret

0000000000000010 <__llvm_profile_enable_continuous_mode>:
  10:	adrp	x0, 0 <__llvm_profile_is_continuous_mode_enabled>
  14:	add	x0, x0, #0x0
  18:	mov	w1, #0x1                   	// #1
  1c:	str	w1, [x0]
  20:	nop
  24:	ret

0000000000000028 <__llvm_profile_get_size_for_buffer>:
  28:	stp	x29, x30, [sp, #-64]!
  2c:	mov	x29, sp
  30:	bl	0 <__llvm_profile_begin_data>
  34:	str	x0, [sp, #56]
  38:	bl	0 <__llvm_profile_end_data>
  3c:	str	x0, [sp, #48]
  40:	bl	0 <__llvm_profile_begin_counters>
  44:	str	x0, [sp, #40]
  48:	bl	0 <__llvm_profile_end_counters>
  4c:	str	x0, [sp, #32]
  50:	bl	0 <__llvm_profile_begin_names>
  54:	str	x0, [sp, #24]
  58:	bl	0 <__llvm_profile_end_names>
  5c:	str	x0, [sp, #16]
  60:	ldr	x5, [sp, #16]
  64:	ldr	x4, [sp, #24]
  68:	ldr	x3, [sp, #32]
  6c:	ldr	x2, [sp, #40]
  70:	ldr	x1, [sp, #48]
  74:	ldr	x0, [sp, #56]
  78:	bl	1ec <__llvm_profile_get_size_for_buffer_internal>
  7c:	ldp	x29, x30, [sp], #64
  80:	ret

0000000000000084 <__llvm_profile_get_data_size>:
  84:	sub	sp, sp, #0x20
  88:	str	x0, [sp, #8]
  8c:	str	x1, [sp]
  90:	ldr	x0, [sp, #8]
  94:	str	x0, [sp, #24]
  98:	ldr	x0, [sp]
  9c:	str	x0, [sp, #16]
  a0:	ldr	x1, [sp, #16]
  a4:	ldr	x0, [sp, #24]
  a8:	sub	x0, x1, x0
  ac:	add	x1, x0, #0x2f
  b0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  b4:	movk	x0, #0xaaab
  b8:	umulh	x0, x1, x0
  bc:	lsr	x0, x0, #5
  c0:	add	sp, sp, #0x20
  c4:	ret

00000000000000c8 <calculateBytesNeededToPageAlign>:
  c8:	sub	sp, sp, #0x20
  cc:	str	x0, [sp, #8]
  d0:	str	w1, [sp, #4]
  d4:	ldr	w1, [sp, #4]
  d8:	ldr	x0, [sp, #8]
  dc:	udiv	x2, x0, x1
  e0:	mul	x1, x2, x1
  e4:	sub	x0, x0, x1
  e8:	str	x0, [sp, #24]
  ec:	ldr	x0, [sp, #24]
  f0:	cmp	x0, #0x0
  f4:	b.eq	108 <calculateBytesNeededToPageAlign+0x40>  // b.none
  f8:	ldr	w1, [sp, #4]
  fc:	ldr	x0, [sp, #24]
 100:	sub	x0, x1, x0
 104:	b	10c <calculateBytesNeededToPageAlign+0x44>
 108:	mov	x0, #0x0                   	// #0
 10c:	add	sp, sp, #0x20
 110:	ret

0000000000000114 <__llvm_profile_get_padding_sizes_for_counters>:
 114:	stp	x29, x30, [sp, #-96]!
 118:	mov	x29, sp
 11c:	str	x0, [sp, #56]
 120:	str	x1, [sp, #48]
 124:	str	x2, [sp, #40]
 128:	str	x3, [sp, #32]
 12c:	str	x4, [sp, #24]
 130:	str	x5, [sp, #16]
 134:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
 138:	cmp	w0, #0x0
 13c:	b.ne	16c <__llvm_profile_get_padding_sizes_for_counters+0x58>  // b.any
 140:	ldr	x0, [sp, #32]
 144:	str	xzr, [x0]
 148:	ldr	x0, [sp, #24]
 14c:	str	xzr, [x0]
 150:	ldr	x0, [sp, #40]
 154:	bl	0 <__llvm_profile_get_num_padding_bytes>
 158:	and	w0, w0, #0xff
 15c:	and	x1, x0, #0xff
 160:	ldr	x0, [sp, #16]
 164:	str	x1, [x0]
 168:	b	1e4 <__llvm_profile_get_padding_sizes_for_counters+0xd0>
 16c:	bl	0 <getpagesize>
 170:	str	w0, [sp, #92]
 174:	ldr	x1, [sp, #56]
 178:	mov	x0, x1
 17c:	lsl	x0, x0, #1
 180:	add	x0, x0, x1
 184:	lsl	x0, x0, #4
 188:	str	x0, [sp, #80]
 18c:	ldr	x0, [sp, #48]
 190:	lsl	x0, x0, #3
 194:	str	x0, [sp, #72]
 198:	ldr	x0, [sp, #80]
 19c:	add	x0, x0, #0x50
 1a0:	ldr	w1, [sp, #92]
 1a4:	bl	c8 <calculateBytesNeededToPageAlign>
 1a8:	mov	x1, x0
 1ac:	ldr	x0, [sp, #32]
 1b0:	str	x1, [x0]
 1b4:	ldr	w1, [sp, #92]
 1b8:	ldr	x0, [sp, #72]
 1bc:	bl	c8 <calculateBytesNeededToPageAlign>
 1c0:	mov	x1, x0
 1c4:	ldr	x0, [sp, #24]
 1c8:	str	x1, [x0]
 1cc:	ldr	w1, [sp, #92]
 1d0:	ldr	x0, [sp, #40]
 1d4:	bl	c8 <calculateBytesNeededToPageAlign>
 1d8:	mov	x1, x0
 1dc:	ldr	x0, [sp, #16]
 1e0:	str	x1, [x0]
 1e4:	ldp	x29, x30, [sp], #96
 1e8:	ret

00000000000001ec <__llvm_profile_get_size_for_buffer_internal>:
 1ec:	stp	x29, x30, [sp, #-112]!
 1f0:	mov	x29, sp
 1f4:	str	x0, [sp, #56]
 1f8:	str	x1, [sp, #48]
 1fc:	str	x2, [sp, #40]
 200:	str	x3, [sp, #32]
 204:	str	x4, [sp, #24]
 208:	str	x5, [sp, #16]
 20c:	ldr	x1, [sp, #16]
 210:	ldr	x0, [sp, #24]
 214:	sub	x0, x1, x0
 218:	str	x0, [sp, #104]
 21c:	ldr	x1, [sp, #48]
 220:	ldr	x0, [sp, #56]
 224:	bl	84 <__llvm_profile_get_data_size>
 228:	str	x0, [sp, #96]
 22c:	ldr	x1, [sp, #32]
 230:	ldr	x0, [sp, #40]
 234:	sub	x0, x1, x0
 238:	asr	x0, x0, #3
 23c:	str	x0, [sp, #88]
 240:	add	x2, sp, #0x40
 244:	add	x1, sp, #0x48
 248:	add	x0, sp, #0x50
 24c:	mov	x5, x2
 250:	mov	x4, x1
 254:	mov	x3, x0
 258:	ldr	x2, [sp, #104]
 25c:	ldr	x1, [sp, #88]
 260:	ldr	x0, [sp, #96]
 264:	bl	114 <__llvm_profile_get_padding_sizes_for_counters>
 268:	ldr	x1, [sp, #96]
 26c:	mov	x0, x1
 270:	lsl	x0, x0, #1
 274:	add	x0, x0, x1
 278:	lsl	x0, x0, #4
 27c:	mov	x1, x0
 280:	ldr	x0, [sp, #80]
 284:	add	x1, x1, x0
 288:	ldr	x0, [sp, #88]
 28c:	lsl	x0, x0, #3
 290:	add	x1, x1, x0
 294:	ldr	x0, [sp, #72]
 298:	add	x1, x1, x0
 29c:	ldr	x0, [sp, #104]
 2a0:	add	x1, x1, x0
 2a4:	ldr	x0, [sp, #64]
 2a8:	add	x0, x1, x0
 2ac:	add	x0, x0, #0x50
 2b0:	ldp	x29, x30, [sp], #112
 2b4:	ret

00000000000002b8 <initBufferWriter>:
 2b8:	sub	sp, sp, #0x10
 2bc:	str	x0, [sp, #8]
 2c0:	str	x1, [sp]
 2c4:	ldr	x0, [sp, #8]
 2c8:	adrp	x1, 0 <lprofBufferWriter>
 2cc:	ldr	x1, [x1]
 2d0:	str	x1, [x0]
 2d4:	ldr	x0, [sp, #8]
 2d8:	ldr	x1, [sp]
 2dc:	str	x1, [x0, #8]
 2e0:	nop
 2e4:	add	sp, sp, #0x10
 2e8:	ret

00000000000002ec <__llvm_profile_write_buffer>:
 2ec:	stp	x29, x30, [sp, #-48]!
 2f0:	mov	x29, sp
 2f4:	str	x0, [sp, #24]
 2f8:	add	x0, sp, #0x20
 2fc:	ldr	x1, [sp, #24]
 300:	bl	2b8 <initBufferWriter>
 304:	add	x0, sp, #0x20
 308:	mov	w2, #0x0                   	// #0
 30c:	mov	x1, #0x0                   	// #0
 310:	bl	0 <lprofWriteData>
 314:	ldp	x29, x30, [sp], #48
 318:	ret

000000000000031c <__llvm_profile_write_buffer_internal>:
 31c:	sub	sp, sp, #0x70
 320:	stp	x29, x30, [sp, #16]
 324:	add	x29, sp, #0x10
 328:	str	x0, [sp, #88]
 32c:	str	x1, [sp, #80]
 330:	str	x2, [sp, #72]
 334:	str	x3, [sp, #64]
 338:	str	x4, [sp, #56]
 33c:	str	x5, [sp, #48]
 340:	str	x6, [sp, #40]
 344:	add	x0, sp, #0x60
 348:	ldr	x1, [sp, #88]
 34c:	bl	2b8 <initBufferWriter>
 350:	add	x0, sp, #0x60
 354:	str	wzr, [sp]
 358:	ldr	x7, [sp, #40]
 35c:	ldr	x6, [sp, #48]
 360:	mov	x5, #0x0                   	// #0
 364:	ldr	x4, [sp, #56]
 368:	ldr	x3, [sp, #64]
 36c:	ldr	x2, [sp, #72]
 370:	ldr	x1, [sp, #80]
 374:	bl	0 <lprofWriteDataImpl>
 378:	ldp	x29, x30, [sp, #16]
 37c:	add	sp, sp, #0x70
 380:	ret

InstrProfilingFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <getPNSStr>:
       0:	sub	sp, sp, #0x10
       4:	str	w0, [sp, #12]
       8:	ldr	w0, [sp, #12]
       c:	cmp	w0, #0x4
      10:	b.eq	78 <getPNSStr+0x78>  // b.none
      14:	ldr	w0, [sp, #12]
      18:	cmp	w0, #0x4
      1c:	b.hi	84 <getPNSStr+0x84>  // b.pmore
      20:	ldr	w0, [sp, #12]
      24:	cmp	w0, #0x3
      28:	b.eq	6c <getPNSStr+0x6c>  // b.none
      2c:	ldr	w0, [sp, #12]
      30:	cmp	w0, #0x3
      34:	b.hi	84 <getPNSStr+0x84>  // b.pmore
      38:	ldr	w0, [sp, #12]
      3c:	cmp	w0, #0x1
      40:	b.eq	54 <getPNSStr+0x54>  // b.none
      44:	ldr	w0, [sp, #12]
      48:	cmp	w0, #0x2
      4c:	b.eq	60 <getPNSStr+0x60>  // b.none
      50:	b	84 <getPNSStr+0x84>
      54:	adrp	x0, 0 <getPNSStr>
      58:	add	x0, x0, #0x0
      5c:	b	8c <getPNSStr+0x8c>
      60:	adrp	x0, 0 <getPNSStr>
      64:	add	x0, x0, #0x0
      68:	b	8c <getPNSStr+0x8c>
      6c:	adrp	x0, 0 <getPNSStr>
      70:	add	x0, x0, #0x0
      74:	b	8c <getPNSStr+0x8c>
      78:	adrp	x0, 0 <getPNSStr>
      7c:	add	x0, x0, #0x0
      80:	b	8c <getPNSStr+0x8c>
      84:	adrp	x0, 0 <getPNSStr>
      88:	add	x0, x0, #0x0
      8c:	add	sp, sp, #0x10
      90:	ret

0000000000000094 <isProfileMergeRequested>:
      94:	adrp	x0, 0 <getPNSStr>
      98:	add	x0, x0, #0x0
      9c:	ldr	w0, [x0]
      a0:	ret

00000000000000a4 <setProfileMergeRequested>:
      a4:	sub	sp, sp, #0x10
      a8:	str	w0, [sp, #12]
      ac:	adrp	x0, 0 <getPNSStr>
      b0:	add	x0, x0, #0x0
      b4:	ldr	w1, [sp, #12]
      b8:	str	w1, [x0]
      bc:	nop
      c0:	add	sp, sp, #0x10
      c4:	ret

00000000000000c8 <getProfileFile>:
      c8:	adrp	x0, 0 <getPNSStr>
      cc:	add	x0, x0, #0x0
      d0:	ldr	x0, [x0]
      d4:	ret

00000000000000d8 <setProfileFile>:
      d8:	sub	sp, sp, #0x10
      dc:	str	x0, [sp, #8]
      e0:	adrp	x0, 0 <getPNSStr>
      e4:	add	x0, x0, #0x0
      e8:	ldr	x1, [sp, #8]
      ec:	str	x1, [x0]
      f0:	nop
      f4:	add	sp, sp, #0x10
      f8:	ret

00000000000000fc <__llvm_profile_set_file_object>:
      fc:	stp	x29, x30, [sp, #-48]!
     100:	mov	x29, sp
     104:	str	x19, [sp, #16]
     108:	str	x0, [sp, #40]
     10c:	str	w1, [sp, #36]
     110:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     114:	cmp	w0, #0x0
     118:	b.eq	148 <__llvm_profile_set_file_object+0x4c>  // b.none
     11c:	adrp	x0, 0 <stderr>
     120:	ldr	x0, [x0]
     124:	ldr	x19, [x0]
     128:	ldr	x0, [sp, #40]
     12c:	bl	0 <fileno>
     130:	mov	w2, w0
     134:	adrp	x0, 0 <getPNSStr>
     138:	add	x1, x0, #0x0
     13c:	mov	x0, x19
     140:	bl	0 <fprintf>
     144:	b	158 <__llvm_profile_set_file_object+0x5c>
     148:	ldr	x0, [sp, #40]
     14c:	bl	d8 <setProfileFile>
     150:	ldr	w0, [sp, #36]
     154:	bl	a4 <setProfileMergeRequested>
     158:	ldr	x19, [sp, #16]
     15c:	ldp	x29, x30, [sp], #48
     160:	ret

0000000000000164 <doMerging>:
     164:	stp	x29, x30, [sp, #-16]!
     168:	mov	x29, sp
     16c:	adrp	x0, 0 <getPNSStr>
     170:	add	x0, x0, #0x0
     174:	ldr	w0, [x0, #176]
     178:	cmp	w0, #0x0
     17c:	b.ne	18c <doMerging+0x28>  // b.any
     180:	bl	94 <isProfileMergeRequested>
     184:	cmp	w0, #0x0
     188:	b.eq	194 <doMerging+0x30>  // b.none
     18c:	mov	w0, #0x1                   	// #1
     190:	b	198 <doMerging+0x34>
     194:	mov	w0, #0x0                   	// #0
     198:	ldp	x29, x30, [sp], #16
     19c:	ret

00000000000001a0 <fileWriter>:
     1a0:	stp	x29, x30, [sp, #-96]!
     1a4:	mov	x29, sp
     1a8:	str	x0, [sp, #40]
     1ac:	str	x1, [sp, #32]
     1b0:	str	w2, [sp, #28]
     1b4:	ldr	x0, [sp, #40]
     1b8:	ldr	x0, [x0, #8]
     1bc:	str	x0, [sp, #72]
     1c0:	str	xzr, [sp, #56]
     1c4:	str	wzr, [sp, #92]
     1c8:	b	36c <fileWriter+0x1cc>
     1cc:	ldr	w0, [sp, #92]
     1d0:	lsl	x0, x0, #5
     1d4:	ldr	x1, [sp, #32]
     1d8:	add	x0, x1, x0
     1dc:	ldr	x0, [x0]
     1e0:	cmp	x0, #0x0
     1e4:	b.eq	260 <fileWriter+0xc0>  // b.none
     1e8:	ldr	w0, [sp, #92]
     1ec:	lsl	x0, x0, #5
     1f0:	ldr	x1, [sp, #32]
     1f4:	add	x0, x1, x0
     1f8:	ldr	x4, [x0]
     1fc:	ldr	w0, [sp, #92]
     200:	lsl	x0, x0, #5
     204:	ldr	x1, [sp, #32]
     208:	add	x0, x1, x0
     20c:	ldr	x5, [x0, #8]
     210:	ldr	w0, [sp, #92]
     214:	lsl	x0, x0, #5
     218:	ldr	x1, [sp, #32]
     21c:	add	x0, x1, x0
     220:	ldr	x0, [x0, #16]
     224:	ldr	x3, [sp, #72]
     228:	mov	x2, x0
     22c:	mov	x1, x5
     230:	mov	x0, x4
     234:	bl	0 <fwrite>
     238:	mov	x2, x0
     23c:	ldr	w0, [sp, #92]
     240:	lsl	x0, x0, #5
     244:	ldr	x1, [sp, #32]
     248:	add	x0, x1, x0
     24c:	ldr	x0, [x0, #16]
     250:	cmp	x2, x0
     254:	b.eq	360 <fileWriter+0x1c0>  // b.none
     258:	mov	w0, #0x1                   	// #1
     25c:	b	380 <fileWriter+0x1e0>
     260:	ldr	w0, [sp, #92]
     264:	lsl	x0, x0, #5
     268:	ldr	x1, [sp, #32]
     26c:	add	x0, x1, x0
     270:	ldr	w0, [x0, #24]
     274:	cmp	w0, #0x0
     278:	b.eq	314 <fileWriter+0x174>  // b.none
     27c:	ldr	w0, [sp, #92]
     280:	lsl	x0, x0, #5
     284:	ldr	x1, [sp, #32]
     288:	add	x0, x1, x0
     28c:	ldr	x1, [x0, #8]
     290:	ldr	w0, [sp, #92]
     294:	lsl	x0, x0, #5
     298:	ldr	x2, [sp, #32]
     29c:	add	x0, x2, x0
     2a0:	ldr	x0, [x0, #16]
     2a4:	mul	x0, x1, x0
     2a8:	str	x0, [sp, #80]
     2ac:	b	304 <fileWriter+0x164>
     2b0:	ldr	x2, [sp, #80]
     2b4:	ldr	x1, [sp, #80]
     2b8:	mov	x0, #0x8                   	// #8
     2bc:	cmp	x2, #0x8
     2c0:	csel	x0, x1, x0, ls  // ls = plast
     2c4:	str	x0, [sp, #64]
     2c8:	add	x0, sp, #0x38
     2cc:	ldr	x3, [sp, #72]
     2d0:	ldr	x2, [sp, #64]
     2d4:	mov	x1, #0x1                   	// #1
     2d8:	bl	0 <fwrite>
     2dc:	mov	x1, x0
     2e0:	ldr	x0, [sp, #64]
     2e4:	cmp	x0, x1
     2e8:	b.eq	2f4 <fileWriter+0x154>  // b.none
     2ec:	mov	w0, #0x1                   	// #1
     2f0:	b	380 <fileWriter+0x1e0>
     2f4:	ldr	x1, [sp, #80]
     2f8:	ldr	x0, [sp, #64]
     2fc:	sub	x0, x1, x0
     300:	str	x0, [sp, #80]
     304:	ldr	x0, [sp, #80]
     308:	cmp	x0, #0x0
     30c:	b.ne	2b0 <fileWriter+0x110>  // b.any
     310:	b	360 <fileWriter+0x1c0>
     314:	ldr	w0, [sp, #92]
     318:	lsl	x0, x0, #5
     31c:	ldr	x1, [sp, #32]
     320:	add	x0, x1, x0
     324:	ldr	x1, [x0, #8]
     328:	ldr	w0, [sp, #92]
     32c:	lsl	x0, x0, #5
     330:	ldr	x2, [sp, #32]
     334:	add	x0, x2, x0
     338:	ldr	x0, [x0, #16]
     33c:	mul	x0, x1, x0
     340:	mov	w2, #0x1                   	// #1
     344:	mov	x1, x0
     348:	ldr	x0, [sp, #72]
     34c:	bl	0 <fseek>
     350:	cmn	w0, #0x1
     354:	b.ne	360 <fileWriter+0x1c0>  // b.any
     358:	mov	w0, #0x1                   	// #1
     35c:	b	380 <fileWriter+0x1e0>
     360:	ldr	w0, [sp, #92]
     364:	add	w0, w0, #0x1
     368:	str	w0, [sp, #92]
     36c:	ldr	w1, [sp, #92]
     370:	ldr	w0, [sp, #28]
     374:	cmp	w1, w0
     378:	b.cc	1cc <fileWriter+0x2c>  // b.lo, b.ul, b.last
     37c:	mov	w0, #0x0                   	// #0
     380:	ldp	x29, x30, [sp], #96
     384:	ret

0000000000000388 <orderFileWriter>:
     388:	stp	x29, x30, [sp, #-32]!
     38c:	mov	x29, sp
     390:	str	x0, [sp, #24]
     394:	str	x1, [sp, #16]
     398:	ldr	x3, [sp, #24]
     39c:	mov	x2, #0x20000               	// #131072
     3a0:	mov	x1, #0x4                   	// #4
     3a4:	ldr	x0, [sp, #16]
     3a8:	bl	0 <fwrite>
     3ac:	cmp	x0, #0x20, lsl #12
     3b0:	b.eq	3bc <orderFileWriter+0x34>  // b.none
     3b4:	mov	w0, #0x1                   	// #1
     3b8:	b	3c0 <orderFileWriter+0x38>
     3bc:	mov	w0, #0x0                   	// #0
     3c0:	ldp	x29, x30, [sp], #32
     3c4:	ret

00000000000003c8 <initFileWriter>:
     3c8:	sub	sp, sp, #0x10
     3cc:	str	x0, [sp, #8]
     3d0:	str	x1, [sp]
     3d4:	ldr	x0, [sp, #8]
     3d8:	adrp	x1, 0 <getPNSStr>
     3dc:	add	x1, x1, #0x0
     3e0:	str	x1, [x0]
     3e4:	ldr	x0, [sp, #8]
     3e8:	ldr	x1, [sp]
     3ec:	str	x1, [x0, #8]
     3f0:	nop
     3f4:	add	sp, sp, #0x10
     3f8:	ret

00000000000003fc <lprofCreateBufferIOInternal>:
     3fc:	stp	x29, x30, [sp, #-48]!
     400:	mov	x29, sp
     404:	str	x0, [sp, #24]
     408:	str	w1, [sp, #20]
     40c:	adrp	x0, 0 <FreeHook>
     410:	add	x0, x0, #0x0
     414:	adrp	x1, 0 <free>
     418:	ldr	x1, [x1]
     41c:	str	x1, [x0]
     420:	ldr	w0, [sp, #20]
     424:	mov	x1, #0x1                   	// #1
     428:	bl	0 <calloc>
     42c:	mov	x1, x0
     430:	adrp	x0, 0 <DynamicBufferIOBuffer>
     434:	add	x0, x0, #0x0
     438:	str	x1, [x0]
     43c:	adrp	x0, 0 <VPBufferSize>
     440:	add	x0, x0, #0x0
     444:	ldr	w1, [sp, #20]
     448:	str	w1, [x0]
     44c:	mov	x1, #0x1                   	// #1
     450:	mov	x0, #0x10                  	// #16
     454:	bl	0 <calloc>
     458:	str	x0, [sp, #40]
     45c:	ldr	x1, [sp, #24]
     460:	ldr	x0, [sp, #40]
     464:	bl	3c8 <initFileWriter>
     468:	ldr	x0, [sp, #40]
     46c:	bl	0 <lprofCreateBufferIO>
     470:	str	x0, [sp, #32]
     474:	ldr	x0, [sp, #32]
     478:	mov	w1, #0x1                   	// #1
     47c:	str	w1, [x0, #8]
     480:	ldr	x0, [sp, #32]
     484:	ldp	x29, x30, [sp], #48
     488:	ret

000000000000048c <setupIOBuffer>:
     48c:	stp	x29, x30, [sp, #-32]!
     490:	mov	x29, sp
     494:	str	xzr, [sp, #24]
     498:	adrp	x0, 0 <getPNSStr>
     49c:	add	x0, x0, #0x0
     4a0:	bl	0 <getenv>
     4a4:	str	x0, [sp, #24]
     4a8:	ldr	x0, [sp, #24]
     4ac:	cmp	x0, #0x0
     4b0:	b.eq	504 <setupIOBuffer+0x78>  // b.none
     4b4:	ldr	x0, [sp, #24]
     4b8:	ldrb	w0, [x0]
     4bc:	cmp	w0, #0x0
     4c0:	b.eq	504 <setupIOBuffer+0x78>  // b.none
     4c4:	ldr	x0, [sp, #24]
     4c8:	bl	0 <atoi>
     4cc:	mov	w1, w0
     4d0:	adrp	x0, 0 <VPBufferSize>
     4d4:	add	x0, x0, #0x0
     4d8:	str	w1, [x0]
     4dc:	adrp	x0, 0 <VPBufferSize>
     4e0:	add	x0, x0, #0x0
     4e4:	ldr	w0, [x0]
     4e8:	mov	w0, w0
     4ec:	mov	x1, #0x1                   	// #1
     4f0:	bl	0 <calloc>
     4f4:	mov	x1, x0
     4f8:	adrp	x0, 0 <DynamicBufferIOBuffer>
     4fc:	add	x0, x0, #0x0
     500:	str	x1, [x0]
     504:	nop
     508:	ldp	x29, x30, [sp], #32
     50c:	ret

0000000000000510 <getProfileFileSizeForMerging>:
     510:	stp	x29, x30, [sp, #-48]!
     514:	mov	x29, sp
     518:	str	x19, [sp, #16]
     51c:	str	x0, [sp, #40]
     520:	str	x1, [sp, #32]
     524:	mov	w2, #0x2                   	// #2
     528:	mov	x1, #0x0                   	// #0
     52c:	ldr	x0, [sp, #40]
     530:	bl	0 <fseek>
     534:	cmn	w0, #0x1
     538:	b.ne	570 <getProfileFileSizeForMerging+0x60>  // b.any
     53c:	adrp	x0, 0 <stderr>
     540:	ldr	x0, [x0]
     544:	ldr	x19, [x0]
     548:	bl	0 <__errno_location>
     54c:	ldr	w0, [x0]
     550:	bl	0 <strerror>
     554:	mov	x2, x0
     558:	adrp	x0, 0 <getPNSStr>
     55c:	add	x1, x0, #0x0
     560:	mov	x0, x19
     564:	bl	0 <fprintf>
     568:	mov	w0, #0xffffffff            	// #-1
     56c:	b	620 <getProfileFileSizeForMerging+0x110>
     570:	ldr	x0, [sp, #40]
     574:	bl	0 <ftell>
     578:	mov	x1, x0
     57c:	ldr	x0, [sp, #32]
     580:	str	x1, [x0]
     584:	mov	w2, #0x0                   	// #0
     588:	mov	x1, #0x0                   	// #0
     58c:	ldr	x0, [sp, #40]
     590:	bl	0 <fseek>
     594:	cmn	w0, #0x1
     598:	b.ne	5d0 <getProfileFileSizeForMerging+0xc0>  // b.any
     59c:	adrp	x0, 0 <stderr>
     5a0:	ldr	x0, [x0]
     5a4:	ldr	x19, [x0]
     5a8:	bl	0 <__errno_location>
     5ac:	ldr	w0, [x0]
     5b0:	bl	0 <strerror>
     5b4:	mov	x2, x0
     5b8:	adrp	x0, 0 <getPNSStr>
     5bc:	add	x1, x0, #0x0
     5c0:	mov	x0, x19
     5c4:	bl	0 <fprintf>
     5c8:	mov	w0, #0xffffffff            	// #-1
     5cc:	b	620 <getProfileFileSizeForMerging+0x110>
     5d0:	ldr	x0, [sp, #32]
     5d4:	ldr	x0, [x0]
     5d8:	cmp	x0, #0x0
     5dc:	b.eq	61c <getProfileFileSizeForMerging+0x10c>  // b.none
     5e0:	ldr	x0, [sp, #32]
     5e4:	ldr	x0, [x0]
     5e8:	cmp	x0, #0x4f
     5ec:	b.hi	61c <getProfileFileSizeForMerging+0x10c>  // b.pmore
     5f0:	adrp	x0, 0 <stderr>
     5f4:	ldr	x0, [x0]
     5f8:	ldr	x3, [x0]
     5fc:	adrp	x0, 0 <getPNSStr>
     600:	add	x2, x0, #0x0
     604:	adrp	x0, 0 <getPNSStr>
     608:	add	x1, x0, #0x0
     60c:	mov	x0, x3
     610:	bl	0 <fprintf>
     614:	mov	w0, #0xffffffff            	// #-1
     618:	b	620 <getProfileFileSizeForMerging+0x110>
     61c:	mov	w0, #0x0                   	// #0
     620:	ldr	x19, [sp, #16]
     624:	ldp	x29, x30, [sp], #48
     628:	ret

000000000000062c <mmapProfileForMerging>:
     62c:	stp	x29, x30, [sp, #-64]!
     630:	mov	x29, sp
     634:	str	x19, [sp, #16]
     638:	str	x0, [sp, #56]
     63c:	str	x1, [sp, #48]
     640:	str	x2, [sp, #40]
     644:	ldr	x0, [sp, #56]
     648:	bl	0 <fileno>
     64c:	mov	x5, #0x0                   	// #0
     650:	mov	w4, w0
     654:	mov	w3, #0x1                   	// #1
     658:	mov	w2, #0x1                   	// #1
     65c:	ldr	x1, [sp, #48]
     660:	mov	x0, #0x0                   	// #0
     664:	bl	0 <mmap>
     668:	mov	x1, x0
     66c:	ldr	x0, [sp, #40]
     670:	str	x1, [x0]
     674:	ldr	x0, [sp, #40]
     678:	ldr	x0, [x0]
     67c:	cmn	x0, #0x1
     680:	b.ne	6b8 <mmapProfileForMerging+0x8c>  // b.any
     684:	adrp	x0, 0 <stderr>
     688:	ldr	x0, [x0]
     68c:	ldr	x19, [x0]
     690:	bl	0 <__errno_location>
     694:	ldr	w0, [x0]
     698:	bl	0 <strerror>
     69c:	mov	x2, x0
     6a0:	adrp	x0, 0 <getPNSStr>
     6a4:	add	x1, x0, #0x0
     6a8:	mov	x0, x19
     6ac:	bl	0 <fprintf>
     6b0:	mov	w0, #0xffffffff            	// #-1
     6b4:	b	710 <mmapProfileForMerging+0xe4>
     6b8:	ldr	x0, [sp, #40]
     6bc:	ldr	x0, [x0]
     6c0:	ldr	x1, [sp, #48]
     6c4:	bl	0 <__llvm_profile_check_compatibility>
     6c8:	cmp	w0, #0x0
     6cc:	b.eq	70c <mmapProfileForMerging+0xe0>  // b.none
     6d0:	ldr	x0, [sp, #40]
     6d4:	ldr	x0, [x0]
     6d8:	ldr	x1, [sp, #48]
     6dc:	bl	0 <munmap>
     6e0:	adrp	x0, 0 <stderr>
     6e4:	ldr	x0, [x0]
     6e8:	ldr	x3, [x0]
     6ec:	adrp	x0, 0 <getPNSStr>
     6f0:	add	x2, x0, #0x0
     6f4:	adrp	x0, 0 <getPNSStr>
     6f8:	add	x1, x0, #0x0
     6fc:	mov	x0, x3
     700:	bl	0 <fprintf>
     704:	mov	w0, #0xffffffff            	// #-1
     708:	b	710 <mmapProfileForMerging+0xe4>
     70c:	mov	w0, #0x0                   	// #0
     710:	ldr	x19, [sp, #16]
     714:	ldp	x29, x30, [sp], #64
     718:	ret

000000000000071c <doProfileMerging>:
     71c:	stp	x29, x30, [sp, #-64]!
     720:	mov	x29, sp
     724:	str	x19, [sp, #16]
     728:	str	x0, [sp, #40]
     72c:	str	x1, [sp, #32]
     730:	add	x0, sp, #0x38
     734:	mov	x1, x0
     738:	ldr	x0, [sp, #40]
     73c:	bl	510 <getProfileFileSizeForMerging>
     740:	cmn	w0, #0x1
     744:	b.ne	750 <doProfileMerging+0x34>  // b.any
     748:	mov	w0, #0xffffffff            	// #-1
     74c:	b	7d0 <doProfileMerging+0xb4>
     750:	ldr	x0, [sp, #56]
     754:	cmp	x0, #0x0
     758:	b.ne	764 <doProfileMerging+0x48>  // b.any
     75c:	mov	w0, #0x0                   	// #0
     760:	b	7d0 <doProfileMerging+0xb4>
     764:	ldr	x0, [sp, #56]
     768:	add	x1, sp, #0x30
     76c:	mov	x2, x1
     770:	mov	x1, x0
     774:	ldr	x0, [sp, #40]
     778:	bl	62c <mmapProfileForMerging>
     77c:	cmn	w0, #0x1
     780:	b.ne	78c <doProfileMerging+0x70>  // b.any
     784:	mov	w0, #0xffffffff            	// #-1
     788:	b	7d0 <doProfileMerging+0xb4>
     78c:	ldr	x0, [sp, #48]
     790:	ldr	x1, [sp, #56]
     794:	bl	0 <__llvm_profile_merge_from_buffer>
     798:	ldr	x0, [sp, #40]
     79c:	bl	0 <fileno>
     7a0:	mov	w19, w0
     7a4:	bl	0 <__llvm_profile_get_size_for_buffer>
     7a8:	mov	x1, x0
     7ac:	mov	w0, w19
     7b0:	bl	0 <ftruncate>
     7b4:	ldr	x0, [sp, #48]
     7b8:	ldr	x1, [sp, #56]
     7bc:	bl	0 <munmap>
     7c0:	ldr	x0, [sp, #32]
     7c4:	mov	w1, #0x1                   	// #1
     7c8:	str	w1, [x0]
     7cc:	mov	w0, #0x0                   	// #0
     7d0:	ldr	x19, [sp, #16]
     7d4:	ldp	x29, x30, [sp], #64
     7d8:	ret

00000000000007dc <createProfileDir>:
     7dc:	stp	x29, x30, [sp, #-48]!
     7e0:	mov	x29, sp
     7e4:	str	x0, [x29, #24]
     7e8:	ldr	x0, [x29, #24]
     7ec:	bl	0 <strlen>
     7f0:	str	x0, [x29, #40]
     7f4:	ldr	x0, [x29, #24]
     7f8:	bl	0 <lprofFindFirstDirSeparator>
     7fc:	cmp	x0, #0x0
     800:	b.eq	850 <createProfileDir+0x74>  // b.none
     804:	ldr	x0, [x29, #40]
     808:	add	x0, x0, #0x1
     80c:	add	x0, x0, #0xf
     810:	lsr	x0, x0, #4
     814:	lsl	x0, x0, #4
     818:	sub	sp, sp, x0
     81c:	mov	x0, sp
     820:	add	x0, x0, #0xf
     824:	lsr	x0, x0, #4
     828:	lsl	x0, x0, #4
     82c:	str	x0, [x29, #32]
     830:	ldr	x0, [x29, #40]
     834:	add	x0, x0, #0x1
     838:	mov	x2, x0
     83c:	ldr	x1, [x29, #24]
     840:	ldr	x0, [x29, #32]
     844:	bl	0 <strncpy>
     848:	ldr	x0, [x29, #32]
     84c:	bl	0 <__llvm_profile_recursive_mkdir>
     850:	nop
     854:	mov	sp, x29
     858:	ldp	x29, x30, [sp], #48
     85c:	ret

0000000000000860 <openFileForMerging>:
     860:	stp	x29, x30, [sp, #-64]!
     864:	mov	x29, sp
     868:	str	x19, [sp, #16]
     86c:	str	x0, [sp, #40]
     870:	str	x1, [sp, #32]
     874:	str	xzr, [sp, #56]
     878:	bl	c8 <getProfileFile>
     87c:	str	x0, [sp, #56]
     880:	ldr	x0, [sp, #56]
     884:	cmp	x0, #0x0
     888:	b.eq	898 <openFileForMerging+0x38>  // b.none
     88c:	ldr	x0, [sp, #56]
     890:	bl	0 <lprofLockFileHandle>
     894:	b	8ac <openFileForMerging+0x4c>
     898:	ldr	x0, [sp, #40]
     89c:	bl	7dc <createProfileDir>
     8a0:	ldr	x0, [sp, #40]
     8a4:	bl	0 <lprofOpenFileEx>
     8a8:	str	x0, [sp, #56]
     8ac:	ldr	x0, [sp, #56]
     8b0:	cmp	x0, #0x0
     8b4:	b.ne	8c0 <openFileForMerging+0x60>  // b.any
     8b8:	mov	x0, #0x0                   	// #0
     8bc:	b	960 <openFileForMerging+0x100>
     8c0:	ldr	x1, [sp, #32]
     8c4:	ldr	x0, [sp, #56]
     8c8:	bl	71c <doProfileMerging>
     8cc:	str	w0, [sp, #52]
     8d0:	ldr	w0, [sp, #52]
     8d4:	cmp	w0, #0x0
     8d8:	b.ne	91c <openFileForMerging+0xbc>  // b.any
     8dc:	ldr	x0, [sp, #32]
     8e0:	ldr	w0, [x0]
     8e4:	cmp	w0, #0x0
     8e8:	b.ne	904 <openFileForMerging+0xa4>  // b.any
     8ec:	ldr	x0, [sp, #56]
     8f0:	bl	0 <fileno>
     8f4:	mov	x1, #0x0                   	// #0
     8f8:	bl	0 <ftruncate>
     8fc:	cmp	w0, #0x0
     900:	b.ne	91c <openFileForMerging+0xbc>  // b.any
     904:	mov	w2, #0x0                   	// #0
     908:	mov	x1, #0x0                   	// #0
     90c:	ldr	x0, [sp, #56]
     910:	bl	0 <fseek>
     914:	cmn	w0, #0x1
     918:	b.ne	95c <openFileForMerging+0xfc>  // b.any
     91c:	adrp	x0, 0 <stderr>
     920:	ldr	x0, [x0]
     924:	ldr	x19, [x0]
     928:	bl	0 <__errno_location>
     92c:	ldr	w0, [x0]
     930:	bl	0 <strerror>
     934:	mov	x3, x0
     938:	ldr	x2, [sp, #40]
     93c:	adrp	x0, 0 <getPNSStr>
     940:	add	x1, x0, #0x0
     944:	mov	x0, x19
     948:	bl	0 <fprintf>
     94c:	ldr	x0, [sp, #56]
     950:	bl	0 <fclose>
     954:	mov	x0, #0x0                   	// #0
     958:	b	960 <openFileForMerging+0x100>
     95c:	ldr	x0, [sp, #56]
     960:	ldr	x19, [sp, #16]
     964:	ldp	x29, x30, [sp], #64
     968:	ret

000000000000096c <getFileObject>:
     96c:	stp	x29, x30, [sp, #-48]!
     970:	mov	x29, sp
     974:	str	x0, [sp, #24]
     978:	bl	c8 <getProfileFile>
     97c:	str	x0, [sp, #40]
     980:	ldr	x0, [sp, #40]
     984:	cmp	x0, #0x0
     988:	b.eq	994 <getFileObject+0x28>  // b.none
     98c:	ldr	x0, [sp, #40]
     990:	b	9a4 <getFileObject+0x38>
     994:	adrp	x0, 0 <getPNSStr>
     998:	add	x1, x0, #0x0
     99c:	ldr	x0, [sp, #24]
     9a0:	bl	0 <fopen>
     9a4:	ldp	x29, x30, [sp], #48
     9a8:	ret

00000000000009ac <writeFile>:
     9ac:	stp	x29, x30, [sp, #-64]!
     9b0:	mov	x29, sp
     9b4:	str	x0, [sp, #24]
     9b8:	str	wzr, [sp, #48]
     9bc:	adrp	x0, 0 <VPMergeHook>
     9c0:	ldr	x0, [x0]
     9c4:	adrp	x1, 0 <lprofMergeValueProfData>
     9c8:	ldr	x1, [x1]
     9cc:	str	x1, [x0]
     9d0:	bl	164 <doMerging>
     9d4:	cmp	w0, #0x0
     9d8:	b.eq	9f4 <writeFile+0x48>  // b.none
     9dc:	add	x0, sp, #0x30
     9e0:	mov	x1, x0
     9e4:	ldr	x0, [sp, #24]
     9e8:	bl	860 <openFileForMerging>
     9ec:	str	x0, [sp, #56]
     9f0:	b	a00 <writeFile+0x54>
     9f4:	ldr	x0, [sp, #24]
     9f8:	bl	96c <getFileObject>
     9fc:	str	x0, [sp, #56]
     a00:	ldr	x0, [sp, #56]
     a04:	cmp	x0, #0x0
     a08:	b.ne	a14 <writeFile+0x68>  // b.any
     a0c:	mov	w0, #0xffffffff            	// #-1
     a10:	b	a98 <writeFile+0xec>
     a14:	adrp	x0, 0 <FreeHook>
     a18:	add	x0, x0, #0x0
     a1c:	adrp	x1, 0 <free>
     a20:	ldr	x1, [x1]
     a24:	str	x1, [x0]
     a28:	bl	48c <setupIOBuffer>
     a2c:	add	x0, sp, #0x20
     a30:	ldr	x1, [sp, #56]
     a34:	bl	3c8 <initFileWriter>
     a38:	bl	0 <lprofGetVPDataReader>
     a3c:	mov	x3, x0
     a40:	ldr	w1, [sp, #48]
     a44:	add	x0, sp, #0x20
     a48:	mov	w2, w1
     a4c:	mov	x1, x3
     a50:	bl	0 <lprofWriteData>
     a54:	str	w0, [sp, #52]
     a58:	bl	c8 <getProfileFile>
     a5c:	mov	x1, x0
     a60:	ldr	x0, [sp, #56]
     a64:	cmp	x0, x1
     a68:	b.ne	a8c <writeFile+0xe0>  // b.any
     a6c:	ldr	x0, [sp, #56]
     a70:	bl	0 <fflush>
     a74:	bl	164 <doMerging>
     a78:	cmp	w0, #0x0
     a7c:	b.eq	a94 <writeFile+0xe8>  // b.none
     a80:	ldr	x0, [sp, #56]
     a84:	bl	0 <lprofUnlockFileHandle>
     a88:	b	a94 <writeFile+0xe8>
     a8c:	ldr	x0, [sp, #56]
     a90:	bl	0 <fclose>
     a94:	ldr	w0, [sp, #52]
     a98:	ldp	x29, x30, [sp], #64
     a9c:	ret

0000000000000aa0 <writeOrderFile>:
     aa0:	stp	x29, x30, [sp, #-64]!
     aa4:	mov	x29, sp
     aa8:	str	x0, [sp, #24]
     aac:	adrp	x0, 0 <getPNSStr>
     ab0:	add	x1, x0, #0x0
     ab4:	ldr	x0, [sp, #24]
     ab8:	bl	0 <fopen>
     abc:	str	x0, [sp, #56]
     ac0:	ldr	x0, [sp, #56]
     ac4:	cmp	x0, #0x0
     ac8:	b.ne	af4 <writeOrderFile+0x54>  // b.any
     acc:	adrp	x0, 0 <stderr>
     ad0:	ldr	x0, [x0]
     ad4:	ldr	x3, [x0]
     ad8:	ldr	x2, [sp, #24]
     adc:	adrp	x0, 0 <getPNSStr>
     ae0:	add	x1, x0, #0x0
     ae4:	mov	x0, x3
     ae8:	bl	0 <fprintf>
     aec:	mov	w0, #0xffffffff            	// #-1
     af0:	b	b30 <writeOrderFile+0x90>
     af4:	adrp	x0, 0 <FreeHook>
     af8:	add	x0, x0, #0x0
     afc:	adrp	x1, 0 <free>
     b00:	ldr	x1, [x1]
     b04:	str	x1, [x0]
     b08:	bl	48c <setupIOBuffer>
     b0c:	bl	0 <__llvm_profile_begin_orderfile>
     b10:	str	x0, [sp, #48]
     b14:	ldr	x1, [sp, #48]
     b18:	ldr	x0, [sp, #56]
     b1c:	bl	388 <orderFileWriter>
     b20:	str	w0, [sp, #44]
     b24:	ldr	x0, [sp, #56]
     b28:	bl	0 <fclose>
     b2c:	ldr	w0, [sp, #44]
     b30:	ldp	x29, x30, [sp], #64
     b34:	ret

0000000000000b38 <truncateCurrentFile>:
     b38:	stp	x29, x30, [sp, #-64]!
     b3c:	mov	x29, sp
     b40:	bl	17c4 <getCurFilenameLength>
     b44:	str	w0, [x29, #60]
     b48:	ldr	w0, [x29, #60]
     b4c:	add	w0, w0, #0x1
     b50:	sxtw	x0, w0
     b54:	add	x0, x0, #0xf
     b58:	lsr	x0, x0, #4
     b5c:	lsl	x0, x0, #4
     b60:	sub	sp, sp, x0
     b64:	mov	x0, sp
     b68:	add	x0, x0, #0xf
     b6c:	lsr	x0, x0, #4
     b70:	lsl	x0, x0, #4
     b74:	str	x0, [x29, #48]
     b78:	mov	w1, #0x0                   	// #0
     b7c:	ldr	x0, [x29, #48]
     b80:	bl	18ec <getCurFilename>
     b84:	str	x0, [x29, #40]
     b88:	ldr	x0, [x29, #40]
     b8c:	cmp	x0, #0x0
     b90:	b.eq	c1c <truncateCurrentFile+0xe4>  // b.none
     b94:	adrp	x0, 0 <getPNSStr>
     b98:	add	x0, x0, #0x0
     b9c:	bl	0 <getenv>
     ba0:	cmp	x0, #0x0
     ba4:	cset	w0, ne  // ne = any
     ba8:	and	w0, w0, #0xff
     bac:	str	w0, [x29, #36]
     bb0:	ldr	w0, [x29, #36]
     bb4:	cmp	w0, #0x0
     bb8:	b.ne	c24 <truncateCurrentFile+0xec>  // b.any
     bbc:	mov	w2, #0x1                   	// #1
     bc0:	adrp	x0, 0 <getPNSStr>
     bc4:	add	x1, x0, #0x0
     bc8:	adrp	x0, 0 <getPNSStr>
     bcc:	add	x0, x0, #0x0
     bd0:	bl	0 <setenv>
     bd4:	ldr	x0, [x29, #40]
     bd8:	bl	7dc <createProfileDir>
     bdc:	adrp	x0, 0 <getPNSStr>
     be0:	add	x0, x0, #0x0
     be4:	ldr	w0, [x0, #176]
     be8:	cmp	w0, #0x0
     bec:	b.ne	c2c <truncateCurrentFile+0xf4>  // b.any
     bf0:	adrp	x0, 0 <getPNSStr>
     bf4:	add	x1, x0, #0x0
     bf8:	ldr	x0, [x29, #40]
     bfc:	bl	0 <fopen>
     c00:	str	x0, [x29, #24]
     c04:	ldr	x0, [x29, #24]
     c08:	cmp	x0, #0x0
     c0c:	b.eq	c34 <truncateCurrentFile+0xfc>  // b.none
     c10:	ldr	x0, [x29, #24]
     c14:	bl	0 <fclose>
     c18:	b	c38 <truncateCurrentFile+0x100>
     c1c:	nop
     c20:	b	c38 <truncateCurrentFile+0x100>
     c24:	nop
     c28:	b	c38 <truncateCurrentFile+0x100>
     c2c:	nop
     c30:	b	c38 <truncateCurrentFile+0x100>
     c34:	nop
     c38:	mov	sp, x29
     c3c:	ldp	x29, x30, [sp], #64
     c40:	ret

0000000000000c44 <assertIsZero>:
     c44:	stp	x29, x30, [sp, #-32]!
     c48:	mov	x29, sp
     c4c:	str	x0, [sp, #24]
     c50:	ldr	x0, [sp, #24]
     c54:	ldr	w0, [x0]
     c58:	cmp	w0, #0x0
     c5c:	b.eq	c88 <assertIsZero+0x44>  // b.none
     c60:	adrp	x0, 0 <stderr>
     c64:	ldr	x0, [x0]
     c68:	ldr	x3, [x0]
     c6c:	ldr	x0, [sp, #24]
     c70:	ldr	w0, [x0]
     c74:	mov	w2, w0
     c78:	adrp	x0, 0 <getPNSStr>
     c7c:	add	x1, x0, #0x0
     c80:	mov	x0, x3
     c84:	bl	0 <fprintf>
     c88:	nop
     c8c:	ldp	x29, x30, [sp], #32
     c90:	ret

0000000000000c94 <writeProfileWithFileObject>:
     c94:	stp	x29, x30, [sp, #-64]!
     c98:	mov	x29, sp
     c9c:	str	x19, [sp, #16]
     ca0:	str	x0, [sp, #40]
     ca4:	str	x1, [sp, #32]
     ca8:	ldr	x0, [sp, #32]
     cac:	bl	d8 <setProfileFile>
     cb0:	ldr	x0, [sp, #40]
     cb4:	bl	9ac <writeFile>
     cb8:	str	w0, [sp, #60]
     cbc:	ldr	w0, [sp, #60]
     cc0:	cmp	w0, #0x0
     cc4:	b.eq	cf8 <writeProfileWithFileObject+0x64>  // b.none
     cc8:	adrp	x0, 0 <stderr>
     ccc:	ldr	x0, [x0]
     cd0:	ldr	x19, [x0]
     cd4:	bl	0 <__errno_location>
     cd8:	ldr	w0, [x0]
     cdc:	bl	0 <strerror>
     ce0:	mov	x3, x0
     ce4:	ldr	x2, [sp, #40]
     ce8:	adrp	x0, 0 <getPNSStr>
     cec:	add	x1, x0, #0x0
     cf0:	mov	x0, x19
     cf4:	bl	0 <fprintf>
     cf8:	mov	x0, #0x0                   	// #0
     cfc:	bl	d8 <setProfileFile>
     d00:	ldr	w0, [sp, #60]
     d04:	ldr	x19, [sp, #16]
     d08:	ldp	x29, x30, [sp], #64
     d0c:	ret

0000000000000d10 <unlockProfile>:
     d10:	stp	x29, x30, [sp, #-32]!
     d14:	mov	x29, sp
     d18:	str	x0, [sp, #24]
     d1c:	str	x1, [sp, #16]
     d20:	ldr	x0, [sp, #24]
     d24:	ldr	w0, [x0]
     d28:	cmp	w0, #0x0
     d2c:	b.ne	d54 <unlockProfile+0x44>  // b.any
     d30:	adrp	x0, 0 <stderr>
     d34:	ldr	x0, [x0]
     d38:	ldr	x3, [x0]
     d3c:	adrp	x0, 0 <getPNSStr>
     d40:	add	x2, x0, #0x0
     d44:	adrp	x0, 0 <getPNSStr>
     d48:	add	x1, x0, #0x0
     d4c:	mov	x0, x3
     d50:	bl	0 <fprintf>
     d54:	ldr	x0, [sp, #16]
     d58:	bl	0 <lprofUnlockFileHandle>
     d5c:	ldr	x0, [sp, #24]
     d60:	str	wzr, [x0]
     d64:	nop
     d68:	ldp	x29, x30, [sp], #32
     d6c:	ret

0000000000000d70 <initializeProfileForContinuousMode>:
     d70:	stp	x29, x30, [sp, #-240]!
     d74:	mov	x29, sp
     d78:	str	x19, [sp, #16]
     d7c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     d80:	cmp	w0, #0x0
     d84:	b.eq	1160 <initializeProfileForContinuousMode+0x3f0>  // b.none
     d88:	bl	0 <__llvm_profile_begin_data>
     d8c:	str	x0, [x29, #216]
     d90:	bl	0 <__llvm_profile_end_data>
     d94:	str	x0, [x29, #208]
     d98:	bl	0 <__llvm_profile_begin_counters>
     d9c:	str	x0, [x29, #200]
     da0:	bl	0 <__llvm_profile_end_counters>
     da4:	str	x0, [x29, #192]
     da8:	bl	0 <__llvm_profile_begin_names>
     dac:	str	x0, [x29, #184]
     db0:	bl	0 <__llvm_profile_end_names>
     db4:	str	x0, [x29, #176]
     db8:	ldr	x1, [x29, #176]
     dbc:	ldr	x0, [x29, #184]
     dc0:	sub	x0, x1, x0
     dc4:	str	x0, [x29, #168]
     dc8:	ldr	x1, [x29, #208]
     dcc:	ldr	x0, [x29, #216]
     dd0:	bl	0 <__llvm_profile_get_data_size>
     dd4:	str	x0, [x29, #160]
     dd8:	ldr	x1, [x29, #192]
     ddc:	ldr	x0, [x29, #200]
     de0:	sub	x0, x1, x0
     de4:	asr	x0, x0, #3
     de8:	str	x0, [x29, #152]
     dec:	bl	0 <getpagesize>
     df0:	str	w0, [x29, #148]
     df4:	ldr	x0, [x29, #200]
     df8:	ldr	w1, [x29, #148]
     dfc:	sdiv	x2, x0, x1
     e00:	mul	x1, x2, x1
     e04:	sub	x0, x0, x1
     e08:	cmp	x0, #0x0
     e0c:	b.eq	e38 <initializeProfileForContinuousMode+0xc8>  // b.none
     e10:	adrp	x0, 0 <stderr>
     e14:	ldr	x0, [x0]
     e18:	ldr	x4, [x0]
     e1c:	ldr	w3, [x29, #148]
     e20:	ldr	x2, [x29, #200]
     e24:	adrp	x0, 0 <getPNSStr>
     e28:	add	x1, x0, #0x0
     e2c:	mov	x0, x4
     e30:	bl	0 <fprintf>
     e34:	b	116c <initializeProfileForContinuousMode+0x3fc>
     e38:	ldr	x0, [x29, #216]
     e3c:	ldr	w1, [x29, #148]
     e40:	sdiv	x2, x0, x1
     e44:	mul	x1, x2, x1
     e48:	sub	x0, x0, x1
     e4c:	cmp	x0, #0x0
     e50:	b.eq	e7c <initializeProfileForContinuousMode+0x10c>  // b.none
     e54:	adrp	x0, 0 <stderr>
     e58:	ldr	x0, [x0]
     e5c:	ldr	x4, [x0]
     e60:	ldr	w3, [x29, #148]
     e64:	ldr	x2, [x29, #216]
     e68:	adrp	x0, 0 <getPNSStr>
     e6c:	add	x1, x0, #0x0
     e70:	mov	x0, x4
     e74:	bl	0 <fprintf>
     e78:	b	116c <initializeProfileForContinuousMode+0x3fc>
     e7c:	bl	17c4 <getCurFilenameLength>
     e80:	str	w0, [x29, #144]
     e84:	ldr	w0, [x29, #144]
     e88:	add	w0, w0, #0x1
     e8c:	sxtw	x0, w0
     e90:	add	x0, x0, #0xf
     e94:	lsr	x0, x0, #4
     e98:	lsl	x0, x0, #4
     e9c:	sub	sp, sp, x0
     ea0:	mov	x0, sp
     ea4:	add	x0, x0, #0xf
     ea8:	lsr	x0, x0, #4
     eac:	lsl	x0, x0, #4
     eb0:	str	x0, [x29, #136]
     eb4:	mov	w1, #0x0                   	// #0
     eb8:	ldr	x0, [x29, #136]
     ebc:	bl	18ec <getCurFilename>
     ec0:	str	x0, [x29, #128]
     ec4:	ldr	x0, [x29, #128]
     ec8:	cmp	x0, #0x0
     ecc:	b.eq	1168 <initializeProfileForContinuousMode+0x3f8>  // b.none
     ed0:	str	xzr, [x29, #232]
     ed4:	str	xzr, [x29, #224]
     ed8:	str	xzr, [x29, #120]
     edc:	str	wzr, [x29, #84]
     ee0:	bl	164 <doMerging>
     ee4:	cmp	w0, #0x0
     ee8:	b.ne	f90 <initializeProfileForContinuousMode+0x220>  // b.any
     eec:	adrp	x0, 0 <getPNSStr>
     ef0:	add	x1, x0, #0x0
     ef4:	ldr	x0, [x29, #128]
     ef8:	bl	0 <fopen>
     efc:	str	x0, [x29, #232]
     f00:	ldr	x0, [x29, #232]
     f04:	cmp	x0, #0x0
     f08:	b.ne	f14 <initializeProfileForContinuousMode+0x1a4>  // b.any
     f0c:	mov	w19, #0x0                   	// #0
     f10:	b	1150 <initializeProfileForContinuousMode+0x3e0>
     f14:	ldr	x0, [x29, #232]
     f18:	bl	0 <ftello>
     f1c:	str	x0, [x29, #224]
     f20:	ldr	w1, [x29, #148]
     f24:	ldr	x0, [x29, #224]
     f28:	sdiv	x2, x0, x1
     f2c:	mul	x1, x2, x1
     f30:	sub	x0, x0, x1
     f34:	str	x0, [x29, #120]
     f38:	ldr	x0, [x29, #120]
     f3c:	cmp	x0, #0x0
     f40:	b.eq	f74 <initializeProfileForContinuousMode+0x204>  // b.none
     f44:	adrp	x0, 0 <stderr>
     f48:	ldr	x0, [x0]
     f4c:	ldr	x4, [x0]
     f50:	ldr	x0, [x29, #224]
     f54:	ldr	w3, [x29, #148]
     f58:	mov	x2, x0
     f5c:	adrp	x0, 0 <getPNSStr>
     f60:	add	x1, x0, #0x0
     f64:	mov	x0, x4
     f68:	bl	0 <fprintf>
     f6c:	mov	w19, #0x0                   	// #0
     f70:	b	1150 <initializeProfileForContinuousMode+0x3e0>
     f74:	ldr	x1, [x29, #232]
     f78:	ldr	x0, [x29, #128]
     f7c:	bl	c94 <writeProfileWithFileObject>
     f80:	cmp	w0, #0x0
     f84:	b.eq	1058 <initializeProfileForContinuousMode+0x2e8>  // b.none
     f88:	mov	w19, #0x0                   	// #0
     f8c:	b	1150 <initializeProfileForContinuousMode+0x3e0>
     f90:	ldr	x0, [x29, #128]
     f94:	bl	0 <lprofOpenFileEx>
     f98:	str	x0, [x29, #232]
     f9c:	ldr	x0, [x29, #232]
     fa0:	cmp	x0, #0x0
     fa4:	b.eq	104c <initializeProfileForContinuousMode+0x2dc>  // b.none
     fa8:	mov	w0, #0x1                   	// #1
     fac:	str	w0, [x29, #84]
     fb0:	add	x0, x29, #0x30
     fb4:	mov	x1, x0
     fb8:	ldr	x0, [x29, #232]
     fbc:	bl	510 <getProfileFileSizeForMerging>
     fc0:	cmn	w0, #0x1
     fc4:	b.ne	fd8 <initializeProfileForContinuousMode+0x268>  // b.any
     fc8:	add	x0, x29, #0x54
     fcc:	ldr	x1, [x29, #232]
     fd0:	bl	d10 <unlockProfile>
     fd4:	b	1050 <initializeProfileForContinuousMode+0x2e0>
     fd8:	ldr	x0, [x29, #48]
     fdc:	cmp	x0, #0x0
     fe0:	b.ne	1008 <initializeProfileForContinuousMode+0x298>  // b.any
     fe4:	ldr	x1, [x29, #232]
     fe8:	ldr	x0, [x29, #128]
     fec:	bl	c94 <writeProfileWithFileObject>
     ff0:	cmp	w0, #0x0
     ff4:	b.eq	1058 <initializeProfileForContinuousMode+0x2e8>  // b.none
     ff8:	add	x0, x29, #0x54
     ffc:	ldr	x1, [x29, #232]
    1000:	bl	d10 <unlockProfile>
    1004:	b	1050 <initializeProfileForContinuousMode+0x2e0>
    1008:	ldr	x0, [x29, #48]
    100c:	add	x1, x29, #0x28
    1010:	mov	x2, x1
    1014:	mov	x1, x0
    1018:	ldr	x0, [x29, #232]
    101c:	bl	62c <mmapProfileForMerging>
    1020:	cmn	w0, #0x1
    1024:	b.eq	103c <initializeProfileForContinuousMode+0x2cc>  // b.none
    1028:	ldr	x0, [x29, #40]
    102c:	ldr	x1, [x29, #48]
    1030:	bl	0 <munmap>
    1034:	cmn	w0, #0x1
    1038:	b.ne	1058 <initializeProfileForContinuousMode+0x2e8>  // b.any
    103c:	add	x0, x29, #0x54
    1040:	ldr	x1, [x29, #232]
    1044:	bl	d10 <unlockProfile>
    1048:	b	1050 <initializeProfileForContinuousMode+0x2e0>
    104c:	nop
    1050:	mov	w19, #0x0                   	// #0
    1054:	b	1150 <initializeProfileForContinuousMode+0x3e0>
    1058:	ldr	x0, [x29, #232]
    105c:	bl	0 <fileno>
    1060:	str	w0, [x29, #116]
    1064:	add	x2, x29, #0x38
    1068:	add	x1, x29, #0x40
    106c:	add	x0, x29, #0x48
    1070:	mov	x5, x2
    1074:	mov	x4, x1
    1078:	mov	x3, x0
    107c:	ldr	x2, [x29, #168]
    1080:	ldr	x1, [x29, #152]
    1084:	ldr	x0, [x29, #160]
    1088:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
    108c:	ldr	x0, [x29, #152]
    1090:	lsl	x1, x0, #3
    1094:	ldr	x0, [x29, #64]
    1098:	add	x0, x1, x0
    109c:	str	x0, [x29, #104]
    10a0:	ldr	x1, [x29, #160]
    10a4:	mov	x0, x1
    10a8:	lsl	x0, x0, #1
    10ac:	add	x0, x0, x1
    10b0:	lsl	x0, x0, #4
    10b4:	mov	x1, x0
    10b8:	ldr	x0, [x29, #224]
    10bc:	add	x1, x1, x0
    10c0:	ldr	x0, [x29, #72]
    10c4:	add	x0, x1, x0
    10c8:	add	x0, x0, #0x50
    10cc:	str	x0, [x29, #96]
    10d0:	ldr	x0, [x29, #96]
    10d4:	mov	x5, x0
    10d8:	ldr	w4, [x29, #116]
    10dc:	mov	w3, #0x11                  	// #17
    10e0:	mov	w2, #0x3                   	// #3
    10e4:	ldr	x1, [x29, #104]
    10e8:	ldr	x0, [x29, #200]
    10ec:	bl	0 <mmap>
    10f0:	str	x0, [x29, #88]
    10f4:	ldr	x1, [x29, #88]
    10f8:	ldr	x0, [x29, #200]
    10fc:	cmp	x1, x0
    1100:	b.eq	1140 <initializeProfileForContinuousMode+0x3d0>  // b.none
    1104:	adrp	x0, 0 <stderr>
    1108:	ldr	x0, [x0]
    110c:	ldr	x19, [x0]
    1110:	bl	0 <__errno_location>
    1114:	ldr	w0, [x0]
    1118:	bl	0 <strerror>
    111c:	ldr	x6, [x29, #96]
    1120:	ldr	w5, [x29, #116]
    1124:	ldr	x4, [x29, #104]
    1128:	ldr	x3, [x29, #200]
    112c:	mov	x2, x0
    1130:	adrp	x0, 0 <getPNSStr>
    1134:	add	x1, x0, #0x0
    1138:	mov	x0, x19
    113c:	bl	0 <fprintf>
    1140:	add	x0, x29, #0x54
    1144:	ldr	x1, [x29, #232]
    1148:	bl	d10 <unlockProfile>
    114c:	mov	w19, #0x1                   	// #1
    1150:	add	x0, x29, #0x54
    1154:	bl	c44 <assertIsZero>
    1158:	cmp	w19, #0x1
    115c:	b	116c <initializeProfileForContinuousMode+0x3fc>
    1160:	nop
    1164:	b	116c <initializeProfileForContinuousMode+0x3fc>
    1168:	nop
    116c:	mov	sp, x29
    1170:	ldr	x19, [sp, #16]
    1174:	ldp	x29, x30, [sp], #240
    1178:	ret

000000000000117c <resetFilenameToDefault>:
    117c:	stp	x29, x30, [sp, #-16]!
    1180:	mov	x29, sp
    1184:	adrp	x0, 0 <getPNSStr>
    1188:	add	x0, x0, #0x0
    118c:	ldr	x0, [x0]
    1190:	cmp	x0, #0x0
    1194:	b.eq	11bc <resetFilenameToDefault+0x40>  // b.none
    1198:	adrp	x0, 0 <getPNSStr>
    119c:	add	x0, x0, #0x0
    11a0:	ldr	w0, [x0, #8]
    11a4:	cmp	w0, #0x0
    11a8:	b.eq	11bc <resetFilenameToDefault+0x40>  // b.none
    11ac:	adrp	x0, 0 <getPNSStr>
    11b0:	add	x0, x0, #0x0
    11b4:	ldr	x0, [x0]
    11b8:	bl	0 <free>
    11bc:	mov	x2, #0xb8                  	// #184
    11c0:	mov	w1, #0x0                   	// #0
    11c4:	adrp	x0, 0 <getPNSStr>
    11c8:	add	x0, x0, #0x0
    11cc:	bl	0 <memset>
    11d0:	adrp	x0, 0 <getPNSStr>
    11d4:	add	x0, x0, #0x0
    11d8:	ldr	x1, [x0]
    11dc:	adrp	x0, 0 <getPNSStr>
    11e0:	add	x0, x0, #0x0
    11e4:	str	x1, [x0]
    11e8:	adrp	x0, 0 <getPNSStr>
    11ec:	add	x0, x0, #0x0
    11f0:	mov	w1, #0x1                   	// #1
    11f4:	str	w1, [x0, #180]
    11f8:	nop
    11fc:	ldp	x29, x30, [sp], #16
    1200:	ret

0000000000001204 <getMergePoolSize>:
    1204:	sub	sp, sp, #0x20
    1208:	str	x0, [sp, #8]
    120c:	str	x1, [sp]
    1210:	str	wzr, [sp, #28]
    1214:	str	wzr, [sp, #24]
    1218:	ldr	x0, [sp]
    121c:	ldr	w0, [x0]
    1220:	mov	w1, w0
    1224:	ldr	w0, [sp, #28]
    1228:	add	w0, w1, w0
    122c:	mov	w0, w0
    1230:	ldr	x1, [sp, #8]
    1234:	add	x0, x1, x0
    1238:	ldrb	w0, [x0]
    123c:	strb	w0, [sp, #23]
    1240:	ldrb	w0, [sp, #23]
    1244:	cmp	w0, #0x6d
    1248:	b.ne	1288 <getMergePoolSize+0x84>  // b.any
    124c:	ldr	x0, [sp]
    1250:	ldr	w0, [x0]
    1254:	mov	w1, w0
    1258:	ldr	w0, [sp, #28]
    125c:	add	w0, w1, w0
    1260:	mov	w1, w0
    1264:	ldr	x0, [sp]
    1268:	str	w1, [x0]
    126c:	ldr	w0, [sp, #24]
    1270:	cmp	w0, #0x0
    1274:	b.eq	1280 <getMergePoolSize+0x7c>  // b.none
    1278:	ldr	w0, [sp, #24]
    127c:	b	12dc <getMergePoolSize+0xd8>
    1280:	mov	w0, #0x1                   	// #1
    1284:	b	12dc <getMergePoolSize+0xd8>
    1288:	ldrb	w0, [sp, #23]
    128c:	cmp	w0, #0x2f
    1290:	b.ls	12d8 <getMergePoolSize+0xd4>  // b.plast
    1294:	ldrb	w0, [sp, #23]
    1298:	cmp	w0, #0x39
    129c:	b.hi	12d8 <getMergePoolSize+0xd4>  // b.pmore
    12a0:	ldr	w1, [sp, #24]
    12a4:	mov	w0, w1
    12a8:	lsl	w0, w0, #2
    12ac:	add	w0, w0, w1
    12b0:	lsl	w0, w0, #1
    12b4:	mov	w1, w0
    12b8:	ldrb	w0, [sp, #23]
    12bc:	add	w0, w1, w0
    12c0:	sub	w0, w0, #0x30
    12c4:	str	w0, [sp, #24]
    12c8:	ldr	w0, [sp, #28]
    12cc:	add	w0, w0, #0x1
    12d0:	str	w0, [sp, #28]
    12d4:	b	1218 <getMergePoolSize+0x14>
    12d8:	mov	w0, #0x0                   	// #0
    12dc:	add	sp, sp, #0x20
    12e0:	ret

00000000000012e4 <parseFilenamePattern>:
    12e4:	stp	x29, x30, [sp, #-80]!
    12e8:	mov	x29, sp
    12ec:	str	x0, [sp, #24]
    12f0:	str	w1, [sp, #20]
    12f4:	str	wzr, [sp, #76]
    12f8:	str	wzr, [sp, #72]
    12fc:	adrp	x0, 0 <getPNSStr>
    1300:	add	x0, x0, #0x0
    1304:	str	x0, [sp, #56]
    1308:	adrp	x0, 0 <getPNSStr>
    130c:	add	x0, x0, #0x0
    1310:	str	x0, [sp, #48]
    1314:	str	wzr, [sp, #68]
    1318:	adrp	x0, 0 <getPNSStr>
    131c:	add	x0, x0, #0x0
    1320:	ldr	x0, [x0, #16]
    1324:	cmp	x0, #0x0
    1328:	b.eq	133c <parseFilenamePattern+0x58>  // b.none
    132c:	adrp	x0, 0 <getPNSStr>
    1330:	add	x0, x0, #0x0
    1334:	ldr	x0, [x0, #16]
    1338:	bl	0 <free>
    133c:	adrp	x0, 0 <getPNSStr>
    1340:	add	x0, x0, #0x0
    1344:	ldr	x0, [x0]
    1348:	cmp	x0, #0x0
    134c:	b.eq	1374 <parseFilenamePattern+0x90>  // b.none
    1350:	adrp	x0, 0 <getPNSStr>
    1354:	add	x0, x0, #0x0
    1358:	ldr	w0, [x0, #8]
    135c:	cmp	w0, #0x0
    1360:	b.eq	1374 <parseFilenamePattern+0x90>  // b.none
    1364:	adrp	x0, 0 <getPNSStr>
    1368:	add	x0, x0, #0x0
    136c:	ldr	x0, [x0]
    1370:	bl	0 <free>
    1374:	mov	x2, #0xb8                  	// #184
    1378:	mov	w1, #0x0                   	// #0
    137c:	adrp	x0, 0 <getPNSStr>
    1380:	add	x0, x0, #0x0
    1384:	bl	0 <memset>
    1388:	ldr	w0, [sp, #20]
    138c:	cmp	w0, #0x0
    1390:	b.ne	13a8 <parseFilenamePattern+0xc4>  // b.any
    1394:	adrp	x0, 0 <getPNSStr>
    1398:	add	x0, x0, #0x0
    139c:	ldr	x1, [sp, #24]
    13a0:	str	x1, [x0]
    13a4:	b	13d0 <parseFilenamePattern+0xec>
    13a8:	ldr	x0, [sp, #24]
    13ac:	bl	0 <strdup>
    13b0:	mov	x1, x0
    13b4:	adrp	x0, 0 <getPNSStr>
    13b8:	add	x0, x0, #0x0
    13bc:	str	x1, [x0]
    13c0:	adrp	x0, 0 <getPNSStr>
    13c4:	add	x0, x0, #0x0
    13c8:	mov	w1, #0x1                   	// #1
    13cc:	str	w1, [x0, #8]
    13d0:	str	wzr, [sp, #40]
    13d4:	b	15d0 <parseFilenamePattern+0x2ec>
    13d8:	ldr	w0, [sp, #40]
    13dc:	sxtw	x0, w0
    13e0:	ldr	x1, [sp, #24]
    13e4:	add	x0, x1, x0
    13e8:	ldrb	w0, [x0]
    13ec:	cmp	w0, #0x25
    13f0:	b.ne	15c4 <parseFilenamePattern+0x2e0>  // b.any
    13f4:	ldr	w0, [sp, #40]
    13f8:	add	w0, w0, #0x1
    13fc:	str	w0, [sp, #40]
    1400:	ldr	w0, [sp, #40]
    1404:	sxtw	x0, w0
    1408:	ldr	x1, [sp, #24]
    140c:	add	x0, x1, x0
    1410:	ldrb	w0, [x0]
    1414:	cmp	w0, #0x70
    1418:	b.ne	1480 <parseFilenamePattern+0x19c>  // b.any
    141c:	ldr	w0, [sp, #76]
    1420:	add	w1, w0, #0x1
    1424:	str	w1, [sp, #76]
    1428:	cmp	w0, #0x0
    142c:	b.ne	15c4 <parseFilenamePattern+0x2e0>  // b.any
    1430:	bl	0 <getpid>
    1434:	sxtw	x0, w0
    1438:	mov	x3, x0
    143c:	adrp	x0, 0 <getPNSStr>
    1440:	add	x2, x0, #0x0
    1444:	mov	x1, #0x10                  	// #16
    1448:	ldr	x0, [sp, #56]
    144c:	bl	0 <snprintf>
    1450:	cmp	w0, #0x0
    1454:	b.gt	15c4 <parseFilenamePattern+0x2e0>
    1458:	adrp	x0, 0 <stderr>
    145c:	ldr	x0, [x0]
    1460:	ldr	x3, [x0]
    1464:	ldr	x2, [sp, #24]
    1468:	adrp	x0, 0 <getPNSStr>
    146c:	add	x1, x0, #0x0
    1470:	mov	x0, x3
    1474:	bl	0 <fprintf>
    1478:	mov	w0, #0xffffffff            	// #-1
    147c:	b	1610 <parseFilenamePattern+0x32c>
    1480:	ldr	w0, [sp, #40]
    1484:	sxtw	x0, w0
    1488:	ldr	x1, [sp, #24]
    148c:	add	x0, x1, x0
    1490:	ldrb	w0, [x0]
    1494:	cmp	w0, #0x68
    1498:	b.ne	14ec <parseFilenamePattern+0x208>  // b.any
    149c:	ldr	w0, [sp, #72]
    14a0:	add	w1, w0, #0x1
    14a4:	str	w1, [sp, #72]
    14a8:	cmp	w0, #0x0
    14ac:	b.ne	15c4 <parseFilenamePattern+0x2e0>  // b.any
    14b0:	mov	w1, #0x80                  	// #128
    14b4:	ldr	x0, [sp, #48]
    14b8:	bl	0 <lprofGetHostName>
    14bc:	cmp	w0, #0x0
    14c0:	b.eq	15c4 <parseFilenamePattern+0x2e0>  // b.none
    14c4:	adrp	x0, 0 <stderr>
    14c8:	ldr	x0, [x0]
    14cc:	ldr	x3, [x0]
    14d0:	ldr	x2, [sp, #24]
    14d4:	adrp	x0, 0 <getPNSStr>
    14d8:	add	x1, x0, #0x0
    14dc:	mov	x0, x3
    14e0:	bl	0 <fprintf>
    14e4:	mov	w0, #0xffffffff            	// #-1
    14e8:	b	1610 <parseFilenamePattern+0x32c>
    14ec:	ldr	w0, [sp, #40]
    14f0:	sxtw	x0, w0
    14f4:	ldr	x1, [sp, #24]
    14f8:	add	x0, x1, x0
    14fc:	ldrb	w0, [x0]
    1500:	cmp	w0, #0x63
    1504:	b.ne	1550 <parseFilenamePattern+0x26c>  // b.any
    1508:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    150c:	cmp	w0, #0x0
    1510:	b.eq	153c <parseFilenamePattern+0x258>  // b.none
    1514:	adrp	x0, 0 <stderr>
    1518:	ldr	x0, [x0]
    151c:	ldr	x3, [x0]
    1520:	ldr	x2, [sp, #24]
    1524:	adrp	x0, 0 <getPNSStr>
    1528:	add	x1, x0, #0x0
    152c:	mov	x0, x3
    1530:	bl	0 <fprintf>
    1534:	mov	w0, #0xffffffff            	// #-1
    1538:	b	1610 <parseFilenamePattern+0x32c>
    153c:	bl	0 <__llvm_profile_enable_continuous_mode>
    1540:	ldr	w0, [sp, #40]
    1544:	add	w0, w0, #0x1
    1548:	str	w0, [sp, #40]
    154c:	b	15c4 <parseFilenamePattern+0x2e0>
    1550:	add	x0, sp, #0x28
    1554:	mov	x1, x0
    1558:	ldr	x0, [sp, #24]
    155c:	bl	1204 <getMergePoolSize>
    1560:	str	w0, [sp, #44]
    1564:	ldr	w0, [sp, #44]
    1568:	cmp	w0, #0x0
    156c:	b.eq	15c0 <parseFilenamePattern+0x2dc>  // b.none
    1570:	ldr	w0, [sp, #68]
    1574:	cmp	w0, #0x0
    1578:	b.eq	15a4 <parseFilenamePattern+0x2c0>  // b.none
    157c:	adrp	x0, 0 <stderr>
    1580:	ldr	x0, [x0]
    1584:	ldr	x3, [x0]
    1588:	ldr	x2, [sp, #24]
    158c:	adrp	x0, 0 <getPNSStr>
    1590:	add	x1, x0, #0x0
    1594:	mov	x0, x3
    1598:	bl	0 <fprintf>
    159c:	mov	w0, #0xffffffff            	// #-1
    15a0:	b	1610 <parseFilenamePattern+0x32c>
    15a4:	mov	w0, #0x1                   	// #1
    15a8:	str	w0, [sp, #68]
    15ac:	adrp	x0, 0 <getPNSStr>
    15b0:	add	x0, x0, #0x0
    15b4:	ldr	w1, [sp, #44]
    15b8:	str	w1, [x0, #176]
    15bc:	b	15c4 <parseFilenamePattern+0x2e0>
    15c0:	nop
    15c4:	ldr	w0, [sp, #40]
    15c8:	add	w0, w0, #0x1
    15cc:	str	w0, [sp, #40]
    15d0:	ldr	w0, [sp, #40]
    15d4:	sxtw	x0, w0
    15d8:	ldr	x1, [sp, #24]
    15dc:	add	x0, x1, x0
    15e0:	ldrb	w0, [x0]
    15e4:	cmp	w0, #0x0
    15e8:	b.ne	13d8 <parseFilenamePattern+0xf4>  // b.any
    15ec:	ldr	w1, [sp, #76]
    15f0:	adrp	x0, 0 <getPNSStr>
    15f4:	add	x0, x0, #0x0
    15f8:	str	w1, [x0, #168]
    15fc:	ldr	w1, [sp, #72]
    1600:	adrp	x0, 0 <getPNSStr>
    1604:	add	x0, x0, #0x0
    1608:	str	w1, [x0, #172]
    160c:	mov	w0, #0x0                   	// #0
    1610:	ldp	x29, x30, [sp], #80
    1614:	ret

0000000000001618 <parseAndSetFilename>:
    1618:	stp	x29, x30, [sp, #-80]!
    161c:	mov	x29, sp
    1620:	stp	x19, x20, [sp, #16]
    1624:	str	x21, [sp, #32]
    1628:	str	x0, [sp, #56]
    162c:	str	w1, [sp, #52]
    1630:	str	w2, [sp, #48]
    1634:	adrp	x0, 0 <getPNSStr>
    1638:	add	x0, x0, #0x0
    163c:	ldr	x0, [x0]
    1640:	str	x0, [sp, #72]
    1644:	adrp	x0, 0 <getPNSStr>
    1648:	add	x0, x0, #0x0
    164c:	ldr	w0, [x0, #180]
    1650:	str	w0, [sp, #68]
    1654:	ldr	w1, [sp, #52]
    1658:	ldr	w0, [sp, #68]
    165c:	cmp	w1, w0
    1660:	b.cc	17b0 <parseAndSetFilename+0x198>  // b.lo, b.ul, b.last
    1664:	ldr	x0, [sp, #56]
    1668:	cmp	x0, #0x0
    166c:	b.ne	1680 <parseAndSetFilename+0x68>  // b.any
    1670:	adrp	x0, 0 <getPNSStr>
    1674:	add	x0, x0, #0x0
    1678:	ldr	x0, [x0]
    167c:	str	x0, [sp, #56]
    1680:	ldr	x0, [sp, #72]
    1684:	cmp	x0, #0x0
    1688:	b.eq	16b4 <parseAndSetFilename+0x9c>  // b.none
    168c:	ldr	x1, [sp, #56]
    1690:	ldr	x0, [sp, #72]
    1694:	bl	0 <strcmp>
    1698:	cmp	w0, #0x0
    169c:	b.ne	16b4 <parseAndSetFilename+0x9c>  // b.any
    16a0:	adrp	x0, 0 <getPNSStr>
    16a4:	add	x0, x0, #0x0
    16a8:	ldr	w1, [sp, #52]
    16ac:	str	w1, [x0, #180]
    16b0:	b	17b4 <parseAndSetFilename+0x19c>
    16b4:	ldr	x0, [sp, #56]
    16b8:	cmp	x0, #0x0
    16bc:	b.eq	16d4 <parseAndSetFilename+0xbc>  // b.none
    16c0:	ldr	w1, [sp, #48]
    16c4:	ldr	x0, [sp, #56]
    16c8:	bl	12e4 <parseFilenamePattern>
    16cc:	cmp	w0, #0x0
    16d0:	b.eq	16d8 <parseAndSetFilename+0xc0>  // b.none
    16d4:	bl	117c <resetFilenameToDefault>
    16d8:	adrp	x0, 0 <getPNSStr>
    16dc:	add	x0, x0, #0x0
    16e0:	ldr	w1, [sp, #52]
    16e4:	str	w1, [x0, #180]
    16e8:	ldr	x0, [sp, #72]
    16ec:	cmp	x0, #0x0
    16f0:	b.ne	1744 <parseAndSetFilename+0x12c>  // b.any
    16f4:	adrp	x0, 0 <getPNSStr>
    16f8:	add	x0, x0, #0x0
    16fc:	bl	0 <getenv>
    1700:	cmp	x0, #0x0
    1704:	b.eq	17a4 <parseAndSetFilename+0x18c>  // b.none
    1708:	adrp	x0, 0 <stderr>
    170c:	ldr	x0, [x0]
    1710:	ldr	x19, [x0]
    1714:	adrp	x0, 0 <getPNSStr>
    1718:	add	x0, x0, #0x0
    171c:	ldr	x20, [x0]
    1720:	ldr	w0, [sp, #52]
    1724:	bl	0 <getPNSStr>
    1728:	mov	x3, x0
    172c:	mov	x2, x20
    1730:	adrp	x0, 0 <getPNSStr>
    1734:	add	x1, x0, #0x0
    1738:	mov	x0, x19
    173c:	bl	0 <fprintf>
    1740:	b	17a4 <parseAndSetFilename+0x18c>
    1744:	adrp	x0, 0 <getPNSStr>
    1748:	add	x0, x0, #0x0
    174c:	bl	0 <getenv>
    1750:	cmp	x0, #0x0
    1754:	b.eq	17a4 <parseAndSetFilename+0x18c>  // b.none
    1758:	adrp	x0, 0 <stderr>
    175c:	ldr	x0, [x0]
    1760:	ldr	x19, [x0]
    1764:	ldr	w0, [sp, #68]
    1768:	bl	0 <getPNSStr>
    176c:	mov	x21, x0
    1770:	adrp	x0, 0 <getPNSStr>
    1774:	add	x0, x0, #0x0
    1778:	ldr	x20, [x0]
    177c:	ldr	w0, [sp, #52]
    1780:	bl	0 <getPNSStr>
    1784:	mov	x5, x0
    1788:	mov	x4, x20
    178c:	mov	x3, x21
    1790:	ldr	x2, [sp, #72]
    1794:	adrp	x0, 0 <getPNSStr>
    1798:	add	x1, x0, #0x0
    179c:	mov	x0, x19
    17a0:	bl	0 <fprintf>
    17a4:	bl	b38 <truncateCurrentFile>
    17a8:	bl	d70 <initializeProfileForContinuousMode>
    17ac:	b	17b4 <parseAndSetFilename+0x19c>
    17b0:	nop
    17b4:	ldp	x19, x20, [sp, #16]
    17b8:	ldr	x21, [sp, #32]
    17bc:	ldp	x29, x30, [sp], #80
    17c0:	ret

00000000000017c4 <getCurFilenameLength>:
    17c4:	stp	x29, x30, [sp, #-64]!
    17c8:	mov	x29, sp
    17cc:	stp	x19, x20, [sp, #16]
    17d0:	str	x21, [sp, #32]
    17d4:	adrp	x0, 0 <getPNSStr>
    17d8:	add	x0, x0, #0x0
    17dc:	ldr	x0, [x0]
    17e0:	cmp	x0, #0x0
    17e4:	b.eq	1800 <getCurFilenameLength+0x3c>  // b.none
    17e8:	adrp	x0, 0 <getPNSStr>
    17ec:	add	x0, x0, #0x0
    17f0:	ldr	x0, [x0]
    17f4:	ldrb	w0, [x0]
    17f8:	cmp	w0, #0x0
    17fc:	b.ne	1808 <getCurFilenameLength+0x44>  // b.any
    1800:	mov	w0, #0x0                   	// #0
    1804:	b	18dc <getCurFilenameLength+0x118>
    1808:	adrp	x0, 0 <getPNSStr>
    180c:	add	x0, x0, #0x0
    1810:	ldr	w0, [x0, #168]
    1814:	cmp	w0, #0x0
    1818:	b.ne	1858 <getCurFilenameLength+0x94>  // b.any
    181c:	adrp	x0, 0 <getPNSStr>
    1820:	add	x0, x0, #0x0
    1824:	ldr	w0, [x0, #172]
    1828:	cmp	w0, #0x0
    182c:	b.ne	1858 <getCurFilenameLength+0x94>  // b.any
    1830:	adrp	x0, 0 <getPNSStr>
    1834:	add	x0, x0, #0x0
    1838:	ldr	w0, [x0, #176]
    183c:	cmp	w0, #0x0
    1840:	b.ne	1858 <getCurFilenameLength+0x94>  // b.any
    1844:	adrp	x0, 0 <getPNSStr>
    1848:	add	x0, x0, #0x0
    184c:	ldr	x0, [x0]
    1850:	bl	0 <strlen>
    1854:	b	18dc <getCurFilenameLength+0x118>
    1858:	adrp	x0, 0 <getPNSStr>
    185c:	add	x0, x0, #0x0
    1860:	ldr	x0, [x0]
    1864:	bl	0 <strlen>
    1868:	mov	w21, w0
    186c:	adrp	x0, 0 <getPNSStr>
    1870:	add	x0, x0, #0x0
    1874:	ldr	w19, [x0, #172]
    1878:	adrp	x0, 0 <getPNSStr>
    187c:	add	x0, x0, #0x0
    1880:	bl	0 <strlen>
    1884:	sub	x0, x0, #0x2
    1888:	mul	w19, w19, w0
    188c:	adrp	x0, 0 <getPNSStr>
    1890:	add	x0, x0, #0x0
    1894:	ldr	w20, [x0, #168]
    1898:	adrp	x0, 0 <getPNSStr>
    189c:	add	x0, x0, #0x0
    18a0:	bl	0 <strlen>
    18a4:	sub	x0, x0, #0x2
    18a8:	mul	w0, w20, w0
    18ac:	add	w0, w19, w0
    18b0:	add	w0, w21, w0
    18b4:	str	w0, [sp, #60]
    18b8:	adrp	x0, 0 <getPNSStr>
    18bc:	add	x0, x0, #0x0
    18c0:	ldr	w0, [x0, #176]
    18c4:	cmp	w0, #0x0
    18c8:	b.eq	18d8 <getCurFilenameLength+0x114>  // b.none
    18cc:	ldr	w0, [sp, #60]
    18d0:	add	w0, w0, #0x18
    18d4:	str	w0, [sp, #60]
    18d8:	ldr	w0, [sp, #60]
    18dc:	ldp	x19, x20, [sp, #16]
    18e0:	ldr	x21, [sp, #32]
    18e4:	ldp	x29, x30, [sp], #64
    18e8:	ret

00000000000018ec <getCurFilename>:
    18ec:	stp	x29, x30, [sp, #-96]!
    18f0:	mov	x29, sp
    18f4:	str	x0, [sp, #24]
    18f8:	str	w1, [sp, #20]
    18fc:	adrp	x0, 0 <getPNSStr>
    1900:	add	x0, x0, #0x0
    1904:	ldr	x0, [x0]
    1908:	str	x0, [sp, #80]
    190c:	adrp	x0, 0 <getPNSStr>
    1910:	add	x0, x0, #0x0
    1914:	ldr	x0, [x0]
    1918:	cmp	x0, #0x0
    191c:	b.eq	1938 <getCurFilename+0x4c>  // b.none
    1920:	adrp	x0, 0 <getPNSStr>
    1924:	add	x0, x0, #0x0
    1928:	ldr	x0, [x0]
    192c:	ldrb	w0, [x0]
    1930:	cmp	w0, #0x0
    1934:	b.ne	1940 <getCurFilename+0x54>  // b.any
    1938:	mov	x0, #0x0                   	// #0
    193c:	b	1c10 <getCurFilename+0x324>
    1940:	adrp	x0, 0 <getPNSStr>
    1944:	add	x0, x0, #0x0
    1948:	ldr	w0, [x0, #168]
    194c:	cmp	w0, #0x0
    1950:	b.ne	19f0 <getCurFilename+0x104>  // b.any
    1954:	adrp	x0, 0 <getPNSStr>
    1958:	add	x0, x0, #0x0
    195c:	ldr	w0, [x0, #172]
    1960:	cmp	w0, #0x0
    1964:	b.ne	19f0 <getCurFilename+0x104>  // b.any
    1968:	adrp	x0, 0 <getPNSStr>
    196c:	add	x0, x0, #0x0
    1970:	ldr	w0, [x0, #176]
    1974:	cmp	w0, #0x0
    1978:	b.ne	19f0 <getCurFilename+0x104>  // b.any
    197c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    1980:	cmp	w0, #0x0
    1984:	b.ne	19f0 <getCurFilename+0x104>  // b.any
    1988:	ldr	w0, [sp, #20]
    198c:	cmp	w0, #0x0
    1990:	b.ne	19a4 <getCurFilename+0xb8>  // b.any
    1994:	adrp	x0, 0 <getPNSStr>
    1998:	add	x0, x0, #0x0
    199c:	ldr	x0, [x0]
    19a0:	b	1c10 <getCurFilename+0x324>
    19a4:	adrp	x0, 0 <getPNSStr>
    19a8:	add	x0, x0, #0x0
    19ac:	ldr	x0, [x0]
    19b0:	bl	0 <strlen>
    19b4:	str	w0, [sp, #76]
    19b8:	adrp	x0, 0 <getPNSStr>
    19bc:	add	x0, x0, #0x0
    19c0:	ldr	x0, [x0]
    19c4:	ldrsw	x1, [sp, #76]
    19c8:	mov	x2, x1
    19cc:	mov	x1, x0
    19d0:	ldr	x0, [sp, #24]
    19d4:	bl	0 <memcpy>
    19d8:	ldrsw	x0, [sp, #76]
    19dc:	ldr	x1, [sp, #24]
    19e0:	add	x0, x1, x0
    19e4:	strb	wzr, [x0]
    19e8:	ldr	x0, [sp, #24]
    19ec:	b	1c10 <getCurFilename+0x324>
    19f0:	adrp	x0, 0 <getPNSStr>
    19f4:	add	x0, x0, #0x0
    19f8:	bl	0 <strlen>
    19fc:	str	w0, [sp, #72]
    1a00:	adrp	x0, 0 <getPNSStr>
    1a04:	add	x0, x0, #0x0
    1a08:	bl	0 <strlen>
    1a0c:	str	w0, [sp, #68]
    1a10:	str	wzr, [sp, #60]
    1a14:	str	wzr, [sp, #92]
    1a18:	b	1be0 <getCurFilename+0x2f4>
    1a1c:	ldr	w0, [sp, #60]
    1a20:	sxtw	x0, w0
    1a24:	ldr	x1, [sp, #80]
    1a28:	add	x0, x1, x0
    1a2c:	ldrb	w0, [x0]
    1a30:	cmp	w0, #0x25
    1a34:	b.ne	1b9c <getCurFilename+0x2b0>  // b.any
    1a38:	ldr	w0, [sp, #60]
    1a3c:	add	w0, w0, #0x1
    1a40:	str	w0, [sp, #60]
    1a44:	ldr	w0, [sp, #60]
    1a48:	sxtw	x0, w0
    1a4c:	ldr	x1, [sp, #80]
    1a50:	add	x0, x1, x0
    1a54:	ldrb	w0, [x0]
    1a58:	cmp	w0, #0x70
    1a5c:	b.ne	1a98 <getCurFilename+0x1ac>  // b.any
    1a60:	ldrsw	x0, [sp, #92]
    1a64:	ldr	x1, [sp, #24]
    1a68:	add	x3, x1, x0
    1a6c:	ldrsw	x0, [sp, #72]
    1a70:	mov	x2, x0
    1a74:	adrp	x0, 0 <getPNSStr>
    1a78:	add	x1, x0, #0x0
    1a7c:	mov	x0, x3
    1a80:	bl	0 <memcpy>
    1a84:	ldr	w1, [sp, #92]
    1a88:	ldr	w0, [sp, #72]
    1a8c:	add	w0, w1, w0
    1a90:	str	w0, [sp, #92]
    1a94:	b	1bd4 <getCurFilename+0x2e8>
    1a98:	ldr	w0, [sp, #60]
    1a9c:	sxtw	x0, w0
    1aa0:	ldr	x1, [sp, #80]
    1aa4:	add	x0, x1, x0
    1aa8:	ldrb	w0, [x0]
    1aac:	cmp	w0, #0x68
    1ab0:	b.ne	1aec <getCurFilename+0x200>  // b.any
    1ab4:	ldrsw	x0, [sp, #92]
    1ab8:	ldr	x1, [sp, #24]
    1abc:	add	x3, x1, x0
    1ac0:	ldrsw	x0, [sp, #68]
    1ac4:	mov	x2, x0
    1ac8:	adrp	x0, 0 <getPNSStr>
    1acc:	add	x1, x0, #0x0
    1ad0:	mov	x0, x3
    1ad4:	bl	0 <memcpy>
    1ad8:	ldr	w1, [sp, #92]
    1adc:	ldr	w0, [sp, #68]
    1ae0:	add	w0, w1, w0
    1ae4:	str	w0, [sp, #92]
    1ae8:	b	1bd4 <getCurFilename+0x2e8>
    1aec:	add	x0, sp, #0x3c
    1af0:	mov	x1, x0
    1af4:	ldr	x0, [sp, #80]
    1af8:	bl	1204 <getMergePoolSize>
    1afc:	cmp	w0, #0x0
    1b00:	b.eq	1bd0 <getCurFilename+0x2e4>  // b.none
    1b04:	bl	0 <getpid>
    1b08:	mov	w1, w0
    1b0c:	adrp	x0, 0 <getPNSStr>
    1b10:	add	x0, x0, #0x0
    1b14:	ldr	w0, [x0, #176]
    1b18:	udiv	w2, w1, w0
    1b1c:	mul	w0, w2, w0
    1b20:	sub	w0, w1, w0
    1b24:	str	w0, [sp, #64]
    1b28:	bl	0 <lprofGetLoadModuleSignature>
    1b2c:	add	x5, sp, #0x20
    1b30:	ldr	w4, [sp, #64]
    1b34:	mov	x3, x0
    1b38:	adrp	x0, 0 <getPNSStr>
    1b3c:	add	x2, x0, #0x0
    1b40:	mov	x1, #0x19                  	// #25
    1b44:	mov	x0, x5
    1b48:	bl	0 <snprintf>
    1b4c:	str	w0, [sp, #88]
    1b50:	ldr	w0, [sp, #88]
    1b54:	cmn	w0, #0x1
    1b58:	b.eq	1b68 <getCurFilename+0x27c>  // b.none
    1b5c:	ldr	w0, [sp, #88]
    1b60:	cmp	w0, #0x18
    1b64:	b.le	1b70 <getCurFilename+0x284>
    1b68:	mov	w0, #0x18                  	// #24
    1b6c:	str	w0, [sp, #88]
    1b70:	ldrsw	x0, [sp, #92]
    1b74:	ldr	x1, [sp, #24]
    1b78:	add	x0, x1, x0
    1b7c:	ldrsw	x2, [sp, #88]
    1b80:	add	x1, sp, #0x20
    1b84:	bl	0 <memcpy>
    1b88:	ldr	w1, [sp, #92]
    1b8c:	ldr	w0, [sp, #88]
    1b90:	add	w0, w1, w0
    1b94:	str	w0, [sp, #92]
    1b98:	b	1bd4 <getCurFilename+0x2e8>
    1b9c:	ldr	w0, [sp, #60]
    1ba0:	sxtw	x0, w0
    1ba4:	ldr	x1, [sp, #80]
    1ba8:	add	x1, x1, x0
    1bac:	ldr	w0, [sp, #92]
    1bb0:	add	w2, w0, #0x1
    1bb4:	str	w2, [sp, #92]
    1bb8:	sxtw	x0, w0
    1bbc:	ldr	x2, [sp, #24]
    1bc0:	add	x0, x2, x0
    1bc4:	ldrb	w1, [x1]
    1bc8:	strb	w1, [x0]
    1bcc:	b	1bd4 <getCurFilename+0x2e8>
    1bd0:	nop
    1bd4:	ldr	w0, [sp, #60]
    1bd8:	add	w0, w0, #0x1
    1bdc:	str	w0, [sp, #60]
    1be0:	ldr	w0, [sp, #60]
    1be4:	sxtw	x0, w0
    1be8:	ldr	x1, [sp, #80]
    1bec:	add	x0, x1, x0
    1bf0:	ldrb	w0, [x0]
    1bf4:	cmp	w0, #0x0
    1bf8:	b.ne	1a1c <getCurFilename+0x130>  // b.any
    1bfc:	ldrsw	x0, [sp, #92]
    1c00:	ldr	x1, [sp, #24]
    1c04:	add	x0, x1, x0
    1c08:	strb	wzr, [x0]
    1c0c:	ldr	x0, [sp, #24]
    1c10:	ldp	x29, x30, [sp], #96
    1c14:	ret

0000000000001c18 <getFilenamePatFromEnv>:
    1c18:	stp	x29, x30, [sp, #-32]!
    1c1c:	mov	x29, sp
    1c20:	adrp	x0, 0 <getPNSStr>
    1c24:	add	x0, x0, #0x0
    1c28:	bl	0 <getenv>
    1c2c:	str	x0, [sp, #24]
    1c30:	ldr	x0, [sp, #24]
    1c34:	cmp	x0, #0x0
    1c38:	b.eq	1c4c <getFilenamePatFromEnv+0x34>  // b.none
    1c3c:	ldr	x0, [sp, #24]
    1c40:	ldrb	w0, [x0]
    1c44:	cmp	w0, #0x0
    1c48:	b.ne	1c54 <getFilenamePatFromEnv+0x3c>  // b.any
    1c4c:	mov	x0, #0x0                   	// #0
    1c50:	b	1c58 <getFilenamePatFromEnv+0x40>
    1c54:	ldr	x0, [sp, #24]
    1c58:	ldp	x29, x30, [sp], #32
    1c5c:	ret

0000000000001c60 <__llvm_profile_get_path_prefix>:
    1c60:	stp	x29, x30, [sp, #-64]!
    1c64:	mov	x29, sp
    1c68:	adrp	x0, 0 <getPNSStr>
    1c6c:	add	x0, x0, #0x0
    1c70:	ldr	x0, [x0, #16]
    1c74:	cmp	x0, #0x0
    1c78:	b.eq	1c8c <__llvm_profile_get_path_prefix+0x2c>  // b.none
    1c7c:	adrp	x0, 0 <getPNSStr>
    1c80:	add	x0, x0, #0x0
    1c84:	ldr	x0, [x0, #16]
    1c88:	b	1dac <__llvm_profile_get_path_prefix+0x14c>
    1c8c:	bl	17c4 <getCurFilenameLength>
    1c90:	str	w0, [x29, #60]
    1c94:	ldr	w0, [x29, #60]
    1c98:	add	w0, w0, #0x1
    1c9c:	sxtw	x0, w0
    1ca0:	add	x0, x0, #0xf
    1ca4:	lsr	x0, x0, #4
    1ca8:	lsl	x0, x0, #4
    1cac:	sub	sp, sp, x0
    1cb0:	mov	x0, sp
    1cb4:	add	x0, x0, #0xf
    1cb8:	lsr	x0, x0, #4
    1cbc:	lsl	x0, x0, #4
    1cc0:	str	x0, [x29, #48]
    1cc4:	mov	w1, #0x0                   	// #0
    1cc8:	ldr	x0, [x29, #48]
    1ccc:	bl	18ec <getCurFilename>
    1cd0:	str	x0, [x29, #40]
    1cd4:	ldr	x0, [x29, #40]
    1cd8:	cmp	x0, #0x0
    1cdc:	b.ne	1cec <__llvm_profile_get_path_prefix+0x8c>  // b.any
    1ce0:	adrp	x0, 0 <getPNSStr>
    1ce4:	add	x0, x0, #0x0
    1ce8:	b	1dac <__llvm_profile_get_path_prefix+0x14c>
    1cec:	ldr	x0, [x29, #40]
    1cf0:	bl	0 <lprofFindLastDirSeparator>
    1cf4:	str	x0, [x29, #32]
    1cf8:	ldr	x0, [x29, #32]
    1cfc:	cmp	x0, #0x0
    1d00:	b.ne	1d10 <__llvm_profile_get_path_prefix+0xb0>  // b.any
    1d04:	adrp	x0, 0 <getPNSStr>
    1d08:	add	x0, x0, #0x0
    1d0c:	b	1dac <__llvm_profile_get_path_prefix+0x14c>
    1d10:	ldr	x1, [x29, #32]
    1d14:	ldr	x0, [x29, #40]
    1d18:	sub	x0, x1, x0
    1d1c:	add	w0, w0, #0x1
    1d20:	str	w0, [x29, #60]
    1d24:	ldr	w0, [x29, #60]
    1d28:	add	w0, w0, #0x1
    1d2c:	sxtw	x0, w0
    1d30:	bl	0 <malloc>
    1d34:	str	x0, [x29, #24]
    1d38:	ldr	x0, [x29, #24]
    1d3c:	cmp	x0, #0x0
    1d40:	b.ne	1d74 <__llvm_profile_get_path_prefix+0x114>  // b.any
    1d44:	adrp	x0, 0 <stderr>
    1d48:	ldr	x0, [x0]
    1d4c:	ldr	x3, [x0]
    1d50:	adrp	x0, 0 <getPNSStr>
    1d54:	add	x2, x0, #0x0
    1d58:	adrp	x0, 0 <getPNSStr>
    1d5c:	add	x1, x0, #0x0
    1d60:	mov	x0, x3
    1d64:	bl	0 <fprintf>
    1d68:	adrp	x0, 0 <getPNSStr>
    1d6c:	add	x0, x0, #0x0
    1d70:	b	1dac <__llvm_profile_get_path_prefix+0x14c>
    1d74:	ldrsw	x0, [x29, #60]
    1d78:	mov	x2, x0
    1d7c:	ldr	x1, [x29, #40]
    1d80:	ldr	x0, [x29, #24]
    1d84:	bl	0 <memcpy>
    1d88:	ldrsw	x0, [x29, #60]
    1d8c:	ldr	x1, [x29, #24]
    1d90:	add	x0, x1, x0
    1d94:	strb	wzr, [x0]
    1d98:	adrp	x0, 0 <getPNSStr>
    1d9c:	add	x0, x0, #0x0
    1da0:	ldr	x1, [x29, #24]
    1da4:	str	x1, [x0, #16]
    1da8:	ldr	x0, [x29, #24]
    1dac:	mov	sp, x29
    1db0:	ldp	x29, x30, [sp], #64
    1db4:	ret

0000000000001db8 <__llvm_profile_get_filename>:
    1db8:	stp	x29, x30, [sp, #-48]!
    1dbc:	mov	x29, sp
    1dc0:	bl	17c4 <getCurFilenameLength>
    1dc4:	str	w0, [sp, #44]
    1dc8:	ldr	w0, [sp, #44]
    1dcc:	add	w0, w0, #0x1
    1dd0:	sxtw	x0, w0
    1dd4:	bl	0 <malloc>
    1dd8:	str	x0, [sp, #32]
    1ddc:	ldr	x0, [sp, #32]
    1de0:	cmp	x0, #0x0
    1de4:	b.ne	1e18 <__llvm_profile_get_filename+0x60>  // b.any
    1de8:	adrp	x0, 0 <stderr>
    1dec:	ldr	x0, [x0]
    1df0:	ldr	x3, [x0]
    1df4:	adrp	x0, 0 <getPNSStr>
    1df8:	add	x2, x0, #0x0
    1dfc:	adrp	x0, 0 <getPNSStr>
    1e00:	add	x1, x0, #0x0
    1e04:	mov	x0, x3
    1e08:	bl	0 <fprintf>
    1e0c:	adrp	x0, 0 <getPNSStr>
    1e10:	add	x0, x0, #0x0
    1e14:	b	1e44 <__llvm_profile_get_filename+0x8c>
    1e18:	mov	w1, #0x1                   	// #1
    1e1c:	ldr	x0, [sp, #32]
    1e20:	bl	18ec <getCurFilename>
    1e24:	str	x0, [sp, #24]
    1e28:	ldr	x0, [sp, #24]
    1e2c:	cmp	x0, #0x0
    1e30:	b.ne	1e40 <__llvm_profile_get_filename+0x88>  // b.any
    1e34:	adrp	x0, 0 <getPNSStr>
    1e38:	add	x0, x0, #0x0
    1e3c:	b	1e44 <__llvm_profile_get_filename+0x8c>
    1e40:	ldr	x0, [sp, #32]
    1e44:	ldp	x29, x30, [sp], #48
    1e48:	ret

0000000000001e4c <__llvm_profile_initialize_file>:
    1e4c:	stp	x29, x30, [sp, #-48]!
    1e50:	mov	x29, sp
    1e54:	str	xzr, [sp, #40]
    1e58:	str	wzr, [sp, #36]
    1e5c:	adrp	x0, 0 <__llvm_profile_filename>
    1e60:	ldr	x0, [x0]
    1e64:	ldrb	w0, [x0]
    1e68:	cmp	w0, #0x0
    1e6c:	cset	w0, ne  // ne = any
    1e70:	and	w0, w0, #0xff
    1e74:	str	w0, [sp, #32]
    1e78:	bl	1c18 <getFilenamePatFromEnv>
    1e7c:	str	x0, [sp, #24]
    1e80:	ldr	x0, [sp, #24]
    1e84:	cmp	x0, #0x0
    1e88:	b.eq	1ea0 <__llvm_profile_initialize_file+0x54>  // b.none
    1e8c:	mov	w2, #0x1                   	// #1
    1e90:	mov	w1, #0x3                   	// #3
    1e94:	ldr	x0, [sp, #24]
    1e98:	bl	1618 <parseAndSetFilename>
    1e9c:	b	1ee0 <__llvm_profile_initialize_file+0x94>
    1ea0:	ldr	w0, [sp, #32]
    1ea4:	cmp	w0, #0x0
    1ea8:	b.eq	1ec4 <__llvm_profile_initialize_file+0x78>  // b.none
    1eac:	adrp	x0, 0 <__llvm_profile_filename>
    1eb0:	ldr	x0, [x0]
    1eb4:	str	x0, [sp, #40]
    1eb8:	mov	w0, #0x2                   	// #2
    1ebc:	str	w0, [sp, #36]
    1ec0:	b	1ed0 <__llvm_profile_initialize_file+0x84>
    1ec4:	str	xzr, [sp, #40]
    1ec8:	mov	w0, #0x1                   	// #1
    1ecc:	str	w0, [sp, #36]
    1ed0:	mov	w2, #0x0                   	// #0
    1ed4:	ldr	w1, [sp, #36]
    1ed8:	ldr	x0, [sp, #40]
    1edc:	bl	1618 <parseAndSetFilename>
    1ee0:	ldp	x29, x30, [sp], #48
    1ee4:	ret

0000000000001ee8 <__llvm_profile_set_filename>:
    1ee8:	stp	x29, x30, [sp, #-32]!
    1eec:	mov	x29, sp
    1ef0:	str	x0, [sp, #24]
    1ef4:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    1ef8:	cmp	w0, #0x0
    1efc:	b.ne	1f14 <__llvm_profile_set_filename+0x2c>  // b.any
    1f00:	mov	w2, #0x1                   	// #1
    1f04:	mov	w1, #0x4                   	// #4
    1f08:	ldr	x0, [sp, #24]
    1f0c:	bl	1618 <parseAndSetFilename>
    1f10:	b	1f18 <__llvm_profile_set_filename+0x30>
    1f14:	nop
    1f18:	ldp	x29, x30, [sp], #32
    1f1c:	ret

0000000000001f20 <__llvm_profile_write_file>:
    1f20:	stp	x29, x30, [sp, #-64]!
    1f24:	mov	x29, sp
    1f28:	str	x19, [sp, #16]
    1f2c:	str	wzr, [x29, #60]
    1f30:	bl	0 <lprofProfileDumped>
    1f34:	cmp	w0, #0x0
    1f38:	b.ne	1f48 <__llvm_profile_write_file+0x28>  // b.any
    1f3c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    1f40:	cmp	w0, #0x0
    1f44:	b.eq	1f74 <__llvm_profile_write_file+0x54>  // b.none
    1f48:	adrp	x0, 0 <stderr>
    1f4c:	ldr	x0, [x0]
    1f50:	ldr	x3, [x0]
    1f54:	adrp	x0, 0 <getPNSStr>
    1f58:	add	x2, x0, #0x0
    1f5c:	adrp	x0, 0 <getPNSStr>
    1f60:	add	x1, x0, #0x0
    1f64:	mov	x0, x3
    1f68:	bl	0 <fprintf>
    1f6c:	mov	w0, #0x0                   	// #0
    1f70:	b	2098 <__llvm_profile_write_file+0x178>
    1f74:	bl	17c4 <getCurFilenameLength>
    1f78:	str	w0, [x29, #56]
    1f7c:	ldr	w0, [x29, #56]
    1f80:	add	w0, w0, #0x1
    1f84:	sxtw	x0, w0
    1f88:	add	x0, x0, #0xf
    1f8c:	lsr	x0, x0, #4
    1f90:	lsl	x0, x0, #4
    1f94:	sub	sp, sp, x0
    1f98:	mov	x0, sp
    1f9c:	add	x0, x0, #0xf
    1fa0:	lsr	x0, x0, #4
    1fa4:	lsl	x0, x0, #4
    1fa8:	str	x0, [x29, #48]
    1fac:	mov	w1, #0x0                   	// #0
    1fb0:	ldr	x0, [x29, #48]
    1fb4:	bl	18ec <getCurFilename>
    1fb8:	str	x0, [x29, #40]
    1fbc:	ldr	x0, [x29, #40]
    1fc0:	cmp	x0, #0x0
    1fc4:	b.ne	1ff4 <__llvm_profile_write_file+0xd4>  // b.any
    1fc8:	adrp	x0, 0 <stderr>
    1fcc:	ldr	x0, [x0]
    1fd0:	ldr	x3, [x0]
    1fd4:	adrp	x0, 0 <getPNSStr>
    1fd8:	add	x2, x0, #0x0
    1fdc:	adrp	x0, 0 <getPNSStr>
    1fe0:	add	x1, x0, #0x0
    1fe4:	mov	x0, x3
    1fe8:	bl	0 <fprintf>
    1fec:	mov	w0, #0xffffffff            	// #-1
    1ff0:	b	2098 <__llvm_profile_write_file+0x178>
    1ff4:	bl	0 <__llvm_profile_get_version>
    1ff8:	and	x0, x0, #0xffffffffffffff
    1ffc:	cmp	x0, #0x5
    2000:	b.eq	2034 <__llvm_profile_write_file+0x114>  // b.none
    2004:	adrp	x0, 0 <stderr>
    2008:	ldr	x0, [x0]
    200c:	ldr	x19, [x0]
    2010:	bl	0 <__llvm_profile_get_version>
    2014:	mov	w3, w0
    2018:	mov	w2, #0x5                   	// #5
    201c:	adrp	x0, 0 <getPNSStr>
    2020:	add	x1, x0, #0x0
    2024:	mov	x0, x19
    2028:	bl	0 <fprintf>
    202c:	mov	w0, #0xffffffff            	// #-1
    2030:	b	2098 <__llvm_profile_write_file+0x178>
    2034:	bl	0 <lprofSuspendSigKill>
    2038:	str	w0, [x29, #60]
    203c:	ldr	x0, [x29, #40]
    2040:	bl	9ac <writeFile>
    2044:	str	w0, [x29, #36]
    2048:	ldr	w0, [x29, #36]
    204c:	cmp	w0, #0x0
    2050:	b.eq	2084 <__llvm_profile_write_file+0x164>  // b.none
    2054:	adrp	x0, 0 <stderr>
    2058:	ldr	x0, [x0]
    205c:	ldr	x19, [x0]
    2060:	bl	0 <__errno_location>
    2064:	ldr	w0, [x0]
    2068:	bl	0 <strerror>
    206c:	mov	x3, x0
    2070:	ldr	x2, [x29, #40]
    2074:	adrp	x0, 0 <getPNSStr>
    2078:	add	x1, x0, #0x0
    207c:	mov	x0, x19
    2080:	bl	0 <fprintf>
    2084:	ldr	w0, [x29, #60]
    2088:	cmp	w0, #0x1
    208c:	b.ne	2094 <__llvm_profile_write_file+0x174>  // b.any
    2090:	bl	0 <lprofRestoreSigKill>
    2094:	ldr	w0, [x29, #36]
    2098:	mov	sp, x29
    209c:	ldr	x19, [sp, #16]
    20a0:	ldp	x29, x30, [sp], #64
    20a4:	ret

00000000000020a8 <__llvm_profile_dump>:
    20a8:	stp	x29, x30, [sp, #-32]!
    20ac:	mov	x29, sp
    20b0:	bl	164 <doMerging>
    20b4:	cmp	w0, #0x0
    20b8:	b.ne	20e0 <__llvm_profile_dump+0x38>  // b.any
    20bc:	adrp	x0, 0 <stderr>
    20c0:	ldr	x0, [x0]
    20c4:	ldr	x3, [x0]
    20c8:	adrp	x0, 0 <getPNSStr>
    20cc:	add	x2, x0, #0x0
    20d0:	adrp	x0, 0 <getPNSStr>
    20d4:	add	x1, x0, #0x0
    20d8:	mov	x0, x3
    20dc:	bl	0 <fprintf>
    20e0:	bl	1f20 <__llvm_profile_write_file>
    20e4:	str	w0, [sp, #28]
    20e8:	bl	0 <lprofSetProfileDumped>
    20ec:	ldr	w0, [sp, #28]
    20f0:	ldp	x29, x30, [sp], #32
    20f4:	ret

00000000000020f8 <__llvm_orderfile_write_file>:
    20f8:	stp	x29, x30, [sp, #-80]!
    20fc:	mov	x29, sp
    2100:	str	x19, [sp, #16]
    2104:	str	wzr, [x29, #76]
    2108:	adrp	x0, 0 <getPNSStr>
    210c:	add	x0, x0, #0x0
    2110:	ldr	x0, [x0]
    2114:	bl	0 <strlen>
    2118:	str	w0, [x29, #72]
    211c:	bl	17c4 <getCurFilenameLength>
    2120:	mov	w1, w0
    2124:	ldr	w0, [x29, #72]
    2128:	add	w0, w0, w1
    212c:	str	w0, [x29, #68]
    2130:	ldr	w0, [x29, #68]
    2134:	add	w0, w0, #0x1
    2138:	sxtw	x0, w0
    213c:	add	x0, x0, #0xf
    2140:	lsr	x0, x0, #4
    2144:	lsl	x0, x0, #4
    2148:	sub	sp, sp, x0
    214c:	mov	x0, sp
    2150:	add	x0, x0, #0xf
    2154:	lsr	x0, x0, #4
    2158:	lsl	x0, x0, #4
    215c:	str	x0, [x29, #56]
    2160:	mov	w1, #0x1                   	// #1
    2164:	ldr	x0, [x29, #56]
    2168:	bl	18ec <getCurFilename>
    216c:	str	x0, [x29, #48]
    2170:	ldr	x0, [x29, #48]
    2174:	cmp	x0, #0x0
    2178:	b.ne	21a8 <__llvm_orderfile_write_file+0xb0>  // b.any
    217c:	adrp	x0, 0 <stderr>
    2180:	ldr	x0, [x0]
    2184:	ldr	x3, [x0]
    2188:	adrp	x0, 0 <getPNSStr>
    218c:	add	x2, x0, #0x0
    2190:	adrp	x0, 0 <getPNSStr>
    2194:	add	x1, x0, #0x0
    2198:	mov	x0, x3
    219c:	bl	0 <fprintf>
    21a0:	mov	w0, #0xffffffff            	// #-1
    21a4:	b	22a0 <__llvm_orderfile_write_file+0x1a8>
    21a8:	ldr	x0, [x29, #48]
    21ac:	bl	0 <strlen>
    21b0:	str	w0, [x29, #44]
    21b4:	ldrsw	x0, [x29, #44]
    21b8:	ldr	x1, [x29, #56]
    21bc:	add	x3, x1, x0
    21c0:	adrp	x0, 0 <getPNSStr>
    21c4:	add	x0, x0, #0x0
    21c8:	ldr	x0, [x0]
    21cc:	ldrsw	x1, [x29, #72]
    21d0:	mov	x2, x1
    21d4:	mov	x1, x0
    21d8:	mov	x0, x3
    21dc:	bl	0 <memcpy>
    21e0:	ldr	w1, [x29, #44]
    21e4:	ldr	w0, [x29, #72]
    21e8:	add	w0, w1, w0
    21ec:	sxtw	x0, w0
    21f0:	ldr	x1, [x29, #56]
    21f4:	add	x0, x1, x0
    21f8:	strb	wzr, [x0]
    21fc:	bl	0 <__llvm_profile_get_version>
    2200:	and	x0, x0, #0xffffffffffffff
    2204:	cmp	x0, #0x5
    2208:	b.eq	223c <__llvm_orderfile_write_file+0x144>  // b.none
    220c:	adrp	x0, 0 <stderr>
    2210:	ldr	x0, [x0]
    2214:	ldr	x19, [x0]
    2218:	bl	0 <__llvm_profile_get_version>
    221c:	mov	w3, w0
    2220:	mov	w2, #0x5                   	// #5
    2224:	adrp	x0, 0 <getPNSStr>
    2228:	add	x1, x0, #0x0
    222c:	mov	x0, x19
    2230:	bl	0 <fprintf>
    2234:	mov	w0, #0xffffffff            	// #-1
    2238:	b	22a0 <__llvm_orderfile_write_file+0x1a8>
    223c:	bl	0 <lprofSuspendSigKill>
    2240:	str	w0, [x29, #76]
    2244:	ldr	x0, [x29, #48]
    2248:	bl	aa0 <writeOrderFile>
    224c:	str	w0, [x29, #40]
    2250:	ldr	w0, [x29, #40]
    2254:	cmp	w0, #0x0
    2258:	b.eq	228c <__llvm_orderfile_write_file+0x194>  // b.none
    225c:	adrp	x0, 0 <stderr>
    2260:	ldr	x0, [x0]
    2264:	ldr	x19, [x0]
    2268:	bl	0 <__errno_location>
    226c:	ldr	w0, [x0]
    2270:	bl	0 <strerror>
    2274:	mov	x3, x0
    2278:	ldr	x2, [x29, #48]
    227c:	adrp	x0, 0 <getPNSStr>
    2280:	add	x1, x0, #0x0
    2284:	mov	x0, x19
    2288:	bl	0 <fprintf>
    228c:	ldr	w0, [x29, #76]
    2290:	cmp	w0, #0x1
    2294:	b.ne	229c <__llvm_orderfile_write_file+0x1a4>  // b.any
    2298:	bl	0 <lprofRestoreSigKill>
    229c:	ldr	w0, [x29, #40]
    22a0:	mov	sp, x29
    22a4:	ldr	x19, [sp, #16]
    22a8:	ldp	x29, x30, [sp], #80
    22ac:	ret

00000000000022b0 <__llvm_orderfile_dump>:
    22b0:	stp	x29, x30, [sp, #-32]!
    22b4:	mov	x29, sp
    22b8:	bl	20f8 <__llvm_orderfile_write_file>
    22bc:	str	w0, [sp, #28]
    22c0:	ldr	w0, [sp, #28]
    22c4:	ldp	x29, x30, [sp], #32
    22c8:	ret

00000000000022cc <writeFileWithoutReturn>:
    22cc:	stp	x29, x30, [sp, #-16]!
    22d0:	mov	x29, sp
    22d4:	bl	1f20 <__llvm_profile_write_file>
    22d8:	nop
    22dc:	ldp	x29, x30, [sp], #16
    22e0:	ret

00000000000022e4 <__llvm_profile_register_write_file_atexit>:
    22e4:	stp	x29, x30, [sp, #-16]!
    22e8:	mov	x29, sp
    22ec:	adrp	x0, 0 <getPNSStr>
    22f0:	add	x0, x0, #0x0
    22f4:	ldr	w0, [x0]
    22f8:	cmp	w0, #0x0
    22fc:	b.eq	2308 <__llvm_profile_register_write_file_atexit+0x24>  // b.none
    2300:	mov	w0, #0x0                   	// #0
    2304:	b	2328 <__llvm_profile_register_write_file_atexit+0x44>
    2308:	bl	0 <lprofSetupValueProfiler>
    230c:	adrp	x0, 0 <getPNSStr>
    2310:	add	x0, x0, #0x0
    2314:	mov	w1, #0x1                   	// #1
    2318:	str	w1, [x0]
    231c:	adrp	x0, 0 <getPNSStr>
    2320:	add	x0, x0, #0x0
    2324:	bl	0 <atexit>
    2328:	ldp	x29, x30, [sp], #16
    232c:	ret

InstrProfilingMerge.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofGetLoadModuleSignature>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	bl	0 <__llvm_profile_end_counters>
  10:	mov	x19, x0
  14:	bl	0 <__llvm_profile_begin_counters>
  18:	sub	x0, x19, x0
  1c:	asr	x0, x0, #3
  20:	str	x0, [sp, #72]
  24:	bl	0 <__llvm_profile_begin_data>
  28:	mov	x19, x0
  2c:	bl	0 <__llvm_profile_end_data>
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <__llvm_profile_get_data_size>
  3c:	str	x0, [sp, #64]
  40:	bl	0 <__llvm_profile_end_names>
  44:	mov	x19, x0
  48:	bl	0 <__llvm_profile_begin_names>
  4c:	sub	x0, x19, x0
  50:	str	x0, [sp, #56]
  54:	bl	0 <__llvm_profile_end_vnodes>
  58:	mov	x19, x0
  5c:	bl	0 <__llvm_profile_begin_vnodes>
  60:	sub	x0, x19, x0
  64:	asr	x1, x0, #3
  68:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  6c:	movk	x0, #0xaaab
  70:	mul	x0, x1, x0
  74:	str	x0, [sp, #48]
  78:	bl	0 <__llvm_profile_begin_data>
  7c:	str	x0, [sp, #40]
  80:	ldr	x0, [sp, #56]
  84:	lsl	x1, x0, #40
  88:	ldr	x0, [sp, #72]
  8c:	lsl	x0, x0, #30
  90:	add	x1, x1, x0
  94:	ldr	x0, [sp, #64]
  98:	lsl	x0, x0, #20
  9c:	add	x1, x1, x0
  a0:	ldr	x0, [sp, #48]
  a4:	lsl	x0, x0, #10
  a8:	add	x1, x1, x0
  ac:	ldr	x0, [sp, #64]
  b0:	cmp	x0, #0x0
  b4:	b.eq	c4 <lprofGetLoadModuleSignature+0xc4>  // b.none
  b8:	ldr	x0, [sp, #40]
  bc:	ldr	x0, [x0]
  c0:	b	c8 <lprofGetLoadModuleSignature+0xc8>
  c4:	mov	x0, #0x0                   	// #0
  c8:	add	x0, x0, x1
  cc:	ldr	x19, [sp, #16]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret

00000000000000d8 <__llvm_profile_check_compatibility>:
  d8:	stp	x29, x30, [sp, #-96]!
  dc:	mov	x29, sp
  e0:	stp	x19, x20, [sp, #16]
  e4:	str	x0, [sp, #40]
  e8:	str	x1, [sp, #32]
  ec:	ldr	x0, [sp, #40]
  f0:	str	x0, [sp, #72]
  f4:	ldr	x0, [sp, #40]
  f8:	add	x0, x0, #0x50
  fc:	str	x0, [sp, #64]
 100:	ldr	x0, [sp, #72]
 104:	ldr	x1, [x0, #16]
 108:	mov	x0, x1
 10c:	lsl	x0, x0, #1
 110:	add	x0, x0, x1
 114:	lsl	x0, x0, #4
 118:	mov	x1, x0
 11c:	ldr	x0, [sp, #64]
 120:	add	x0, x0, x1
 124:	str	x0, [sp, #56]
 128:	ldr	x0, [sp, #32]
 12c:	cmp	x0, #0x4f
 130:	b.hi	13c <__llvm_profile_check_compatibility+0x64>  // b.pmore
 134:	mov	w0, #0x1                   	// #1
 138:	b	2c4 <__llvm_profile_check_compatibility+0x1ec>
 13c:	ldr	x0, [sp, #72]
 140:	ldr	x19, [x0]
 144:	bl	0 <__llvm_profile_get_magic>
 148:	cmp	x19, x0
 14c:	b.ne	1e0 <__llvm_profile_check_compatibility+0x108>  // b.any
 150:	ldr	x0, [sp, #72]
 154:	ldr	x19, [x0, #8]
 158:	bl	0 <__llvm_profile_get_version>
 15c:	cmp	x19, x0
 160:	b.ne	1e0 <__llvm_profile_check_compatibility+0x108>  // b.any
 164:	ldr	x0, [sp, #72]
 168:	ldr	x19, [x0, #16]
 16c:	bl	0 <__llvm_profile_begin_data>
 170:	mov	x20, x0
 174:	bl	0 <__llvm_profile_end_data>
 178:	mov	x1, x0
 17c:	mov	x0, x20
 180:	bl	0 <__llvm_profile_get_data_size>
 184:	cmp	x19, x0
 188:	b.ne	1e0 <__llvm_profile_check_compatibility+0x108>  // b.any
 18c:	ldr	x0, [sp, #72]
 190:	ldr	x19, [x0, #32]
 194:	bl	0 <__llvm_profile_end_counters>
 198:	mov	x20, x0
 19c:	bl	0 <__llvm_profile_begin_counters>
 1a0:	sub	x0, x20, x0
 1a4:	asr	x0, x0, #3
 1a8:	cmp	x19, x0
 1ac:	b.ne	1e0 <__llvm_profile_check_compatibility+0x108>  // b.any
 1b0:	ldr	x0, [sp, #72]
 1b4:	ldr	x19, [x0, #48]
 1b8:	bl	0 <__llvm_profile_end_names>
 1bc:	mov	x20, x0
 1c0:	bl	0 <__llvm_profile_begin_names>
 1c4:	sub	x0, x20, x0
 1c8:	cmp	x19, x0
 1cc:	b.ne	1e0 <__llvm_profile_check_compatibility+0x108>  // b.any
 1d0:	ldr	x0, [sp, #72]
 1d4:	ldr	x0, [x0, #72]
 1d8:	cmp	x0, #0x1
 1dc:	b.eq	1e8 <__llvm_profile_check_compatibility+0x110>  // b.none
 1e0:	mov	w0, #0x1                   	// #1
 1e4:	b	2c4 <__llvm_profile_check_compatibility+0x1ec>
 1e8:	ldr	x0, [sp, #72]
 1ec:	ldr	x1, [x0, #16]
 1f0:	mov	x0, x1
 1f4:	lsl	x0, x0, #1
 1f8:	add	x0, x0, x1
 1fc:	lsl	x0, x0, #4
 200:	mov	x1, x0
 204:	ldr	x0, [sp, #72]
 208:	ldr	x0, [x0, #48]
 20c:	add	x1, x1, x0
 210:	ldr	x0, [sp, #72]
 214:	ldr	x0, [x0, #32]
 218:	add	x0, x1, x0
 21c:	add	x0, x0, #0x50
 220:	ldr	x1, [sp, #32]
 224:	cmp	x1, x0
 228:	b.cs	234 <__llvm_profile_check_compatibility+0x15c>  // b.hs, b.nlast
 22c:	mov	w0, #0x1                   	// #1
 230:	b	2c4 <__llvm_profile_check_compatibility+0x1ec>
 234:	ldr	x0, [sp, #64]
 238:	str	x0, [sp, #88]
 23c:	bl	0 <__llvm_profile_begin_data>
 240:	str	x0, [sp, #80]
 244:	b	2b0 <__llvm_profile_check_compatibility+0x1d8>
 248:	ldr	x0, [sp, #88]
 24c:	ldr	x1, [x0]
 250:	ldr	x0, [sp, #80]
 254:	ldr	x0, [x0]
 258:	cmp	x1, x0
 25c:	b.ne	290 <__llvm_profile_check_compatibility+0x1b8>  // b.any
 260:	ldr	x0, [sp, #88]
 264:	ldr	x1, [x0, #8]
 268:	ldr	x0, [sp, #80]
 26c:	ldr	x0, [x0, #8]
 270:	cmp	x1, x0
 274:	b.ne	290 <__llvm_profile_check_compatibility+0x1b8>  // b.any
 278:	ldr	x0, [sp, #88]
 27c:	ldr	w1, [x0, #40]
 280:	ldr	x0, [sp, #80]
 284:	ldr	w0, [x0, #40]
 288:	cmp	w1, w0
 28c:	b.eq	298 <__llvm_profile_check_compatibility+0x1c0>  // b.none
 290:	mov	w0, #0x1                   	// #1
 294:	b	2c4 <__llvm_profile_check_compatibility+0x1ec>
 298:	ldr	x0, [sp, #88]
 29c:	add	x0, x0, #0x30
 2a0:	str	x0, [sp, #88]
 2a4:	ldr	x0, [sp, #80]
 2a8:	add	x0, x0, #0x30
 2ac:	str	x0, [sp, #80]
 2b0:	ldr	x1, [sp, #88]
 2b4:	ldr	x0, [sp, #56]
 2b8:	cmp	x1, x0
 2bc:	b.cc	248 <__llvm_profile_check_compatibility+0x170>  // b.lo, b.ul, b.last
 2c0:	mov	w0, #0x0                   	// #0
 2c4:	ldp	x19, x20, [sp, #16]
 2c8:	ldp	x29, x30, [sp], #96
 2cc:	ret

00000000000002d0 <__llvm_profile_merge_from_buffer>:
 2d0:	stp	x29, x30, [sp, #-160]!
 2d4:	mov	x29, sp
 2d8:	str	x19, [sp, #16]
 2dc:	str	x0, [sp, #40]
 2e0:	str	x1, [sp, #32]
 2e4:	ldr	x0, [sp, #40]
 2e8:	str	x0, [sp, #120]
 2ec:	ldr	x0, [sp, #40]
 2f0:	add	x0, x0, #0x50
 2f4:	str	x0, [sp, #112]
 2f8:	ldr	x0, [sp, #120]
 2fc:	ldr	x1, [x0, #16]
 300:	mov	x0, x1
 304:	lsl	x0, x0, #1
 308:	add	x0, x0, x1
 30c:	lsl	x0, x0, #4
 310:	mov	x1, x0
 314:	ldr	x0, [sp, #112]
 318:	add	x0, x0, x1
 31c:	str	x0, [sp, #104]
 320:	ldr	x0, [sp, #104]
 324:	str	x0, [sp, #96]
 328:	ldr	x0, [sp, #120]
 32c:	ldr	x0, [x0, #32]
 330:	lsl	x0, x0, #3
 334:	ldr	x1, [sp, #96]
 338:	add	x0, x1, x0
 33c:	str	x0, [sp, #88]
 340:	ldr	x0, [sp, #120]
 344:	ldr	x19, [x0, #48]
 348:	ldr	x0, [sp, #120]
 34c:	ldr	x0, [x0, #48]
 350:	bl	0 <__llvm_profile_get_num_padding_bytes>
 354:	and	w0, w0, #0xff
 358:	and	x0, x0, #0xff
 35c:	add	x0, x19, x0
 360:	ldr	x1, [sp, #88]
 364:	add	x0, x1, x0
 368:	str	x0, [sp, #80]
 36c:	ldr	x0, [sp, #112]
 370:	str	x0, [sp, #152]
 374:	bl	0 <__llvm_profile_begin_data>
 378:	str	x0, [sp, #144]
 37c:	ldr	x0, [sp, #80]
 380:	str	x0, [sp, #136]
 384:	b	4fc <__llvm_profile_merge_from_buffer+0x22c>
 388:	ldr	x0, [sp, #144]
 38c:	ldr	x0, [x0, #16]
 390:	str	x0, [sp, #72]
 394:	str	wzr, [sp, #128]
 398:	ldr	x0, [sp, #152]
 39c:	ldr	w0, [x0, #40]
 3a0:	str	w0, [sp, #68]
 3a4:	ldr	x0, [sp, #152]
 3a8:	ldr	x0, [x0, #16]
 3ac:	mov	x1, x0
 3b0:	ldr	x0, [sp, #120]
 3b4:	ldr	x0, [x0, #56]
 3b8:	sub	x0, x1, x0
 3bc:	and	x0, x0, #0xfffffffffffffff8
 3c0:	ldr	x1, [sp, #96]
 3c4:	add	x0, x1, x0
 3c8:	str	x0, [sp, #56]
 3cc:	str	wzr, [sp, #132]
 3d0:	b	420 <__llvm_profile_merge_from_buffer+0x150>
 3d4:	ldr	w0, [sp, #132]
 3d8:	lsl	x0, x0, #3
 3dc:	ldr	x1, [sp, #72]
 3e0:	add	x0, x1, x0
 3e4:	ldr	x2, [x0]
 3e8:	ldr	w0, [sp, #132]
 3ec:	lsl	x0, x0, #3
 3f0:	ldr	x1, [sp, #56]
 3f4:	add	x0, x1, x0
 3f8:	ldr	x1, [x0]
 3fc:	ldr	w0, [sp, #132]
 400:	lsl	x0, x0, #3
 404:	ldr	x3, [sp, #72]
 408:	add	x0, x3, x0
 40c:	add	x1, x2, x1
 410:	str	x1, [x0]
 414:	ldr	w0, [sp, #132]
 418:	add	w0, w0, #0x1
 41c:	str	w0, [sp, #132]
 420:	ldr	w1, [sp, #132]
 424:	ldr	w0, [sp, #68]
 428:	cmp	w1, w0
 42c:	b.cc	3d4 <__llvm_profile_merge_from_buffer+0x104>  // b.lo, b.ul, b.last
 430:	adrp	x0, 8 <lprofGetLoadModuleSignature+0x8>
 434:	add	x0, x0, #0x0
 438:	ldr	x0, [x0]
 43c:	cmp	x0, #0x0
 440:	b.eq	4d8 <__llvm_profile_merge_from_buffer+0x208>  // b.none
 444:	str	wzr, [sp, #132]
 448:	b	48c <__llvm_profile_merge_from_buffer+0x1bc>
 44c:	ldr	x1, [sp, #152]
 450:	ldr	w0, [sp, #132]
 454:	add	x0, x0, #0x10
 458:	lsl	x0, x0, #1
 45c:	add	x0, x1, x0
 460:	ldrh	w0, [x0, #12]
 464:	cmp	w0, #0x0
 468:	cset	w0, ne  // ne = any
 46c:	and	w0, w0, #0xff
 470:	mov	w1, w0
 474:	ldr	w0, [sp, #128]
 478:	add	w0, w0, w1
 47c:	str	w0, [sp, #128]
 480:	ldr	w0, [sp, #132]
 484:	add	w0, w0, #0x1
 488:	str	w0, [sp, #132]
 48c:	ldr	w0, [sp, #132]
 490:	cmp	w0, #0x1
 494:	b.ls	44c <__llvm_profile_merge_from_buffer+0x17c>  // b.plast
 498:	ldr	w0, [sp, #128]
 49c:	cmp	w0, #0x0
 4a0:	b.eq	4e0 <__llvm_profile_merge_from_buffer+0x210>  // b.none
 4a4:	adrp	x0, 8 <lprofGetLoadModuleSignature+0x8>
 4a8:	add	x0, x0, #0x0
 4ac:	ldr	x2, [x0]
 4b0:	ldr	x1, [sp, #144]
 4b4:	ldr	x0, [sp, #136]
 4b8:	blr	x2
 4bc:	ldr	x0, [sp, #136]
 4c0:	ldr	w0, [x0]
 4c4:	mov	w0, w0
 4c8:	ldr	x1, [sp, #136]
 4cc:	add	x0, x1, x0
 4d0:	str	x0, [sp, #136]
 4d4:	b	4e4 <__llvm_profile_merge_from_buffer+0x214>
 4d8:	nop
 4dc:	b	4e4 <__llvm_profile_merge_from_buffer+0x214>
 4e0:	nop
 4e4:	ldr	x0, [sp, #152]
 4e8:	add	x0, x0, #0x30
 4ec:	str	x0, [sp, #152]
 4f0:	ldr	x0, [sp, #144]
 4f4:	add	x0, x0, #0x30
 4f8:	str	x0, [sp, #144]
 4fc:	ldr	x1, [sp, #152]
 500:	ldr	x0, [sp, #104]
 504:	cmp	x1, x0
 508:	b.cc	388 <__llvm_profile_merge_from_buffer+0xb8>  // b.lo, b.ul, b.last
 50c:	nop
 510:	nop
 514:	ldr	x19, [sp, #16]
 518:	ldp	x29, x30, [sp], #160
 51c:	ret

InstrProfilingMergeFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofMergeValueProfData>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	str	wzr, [sp, #64]
  14:	ldr	x0, [sp, #24]
  18:	bl	0 <getFirstValueProfRecord>
  1c:	str	x0, [sp, #56]
  20:	str	wzr, [sp, #76]
  24:	b	104 <lprofMergeValueProfData+0x104>
  28:	ldr	x0, [sp, #56]
  2c:	bl	0 <getValueProfRecordValueData>
  30:	str	x0, [sp, #40]
  34:	str	wzr, [sp, #52]
  38:	str	wzr, [sp, #72]
  3c:	b	d8 <lprofMergeValueProfData+0xd8>
  40:	ldr	x1, [sp, #56]
  44:	ldr	w0, [sp, #72]
  48:	add	x0, x1, x0
  4c:	ldrb	w0, [x0, #8]
  50:	strb	w0, [sp, #39]
  54:	str	wzr, [sp, #68]
  58:	b	b0 <lprofMergeValueProfData+0xb0>
  5c:	ldr	w0, [sp, #52]
  60:	lsl	x0, x0, #4
  64:	ldr	x1, [sp, #40]
  68:	add	x0, x1, x0
  6c:	ldr	x4, [x0]
  70:	ldr	w0, [sp, #52]
  74:	lsl	x0, x0, #4
  78:	ldr	x1, [sp, #40]
  7c:	add	x0, x1, x0
  80:	ldr	x0, [x0, #8]
  84:	mov	x3, x0
  88:	ldr	w2, [sp, #64]
  8c:	ldr	x1, [sp, #16]
  90:	mov	x0, x4
  94:	bl	0 <__llvm_profile_instrument_target_value>
  98:	ldr	w0, [sp, #52]
  9c:	add	w0, w0, #0x1
  a0:	str	w0, [sp, #52]
  a4:	ldr	w0, [sp, #68]
  a8:	add	w0, w0, #0x1
  ac:	str	w0, [sp, #68]
  b0:	ldrb	w0, [sp, #39]
  b4:	ldr	w1, [sp, #68]
  b8:	cmp	w1, w0
  bc:	b.cc	5c <lprofMergeValueProfData+0x5c>  // b.lo, b.ul, b.last
  c0:	ldr	w0, [sp, #64]
  c4:	add	w0, w0, #0x1
  c8:	str	w0, [sp, #64]
  cc:	ldr	w0, [sp, #72]
  d0:	add	w0, w0, #0x1
  d4:	str	w0, [sp, #72]
  d8:	ldr	x0, [sp, #56]
  dc:	ldr	w0, [x0, #4]
  e0:	ldr	w1, [sp, #72]
  e4:	cmp	w1, w0
  e8:	b.cc	40 <lprofMergeValueProfData+0x40>  // b.lo, b.ul, b.last
  ec:	ldr	x0, [sp, #56]
  f0:	bl	0 <getValueProfRecordNext>
  f4:	str	x0, [sp, #56]
  f8:	ldr	w0, [sp, #76]
  fc:	add	w0, w0, #0x1
 100:	str	w0, [sp, #76]
 104:	ldr	x0, [sp, #24]
 108:	ldr	w0, [x0, #4]
 10c:	ldr	w1, [sp, #76]
 110:	cmp	w1, w0
 114:	b.cc	28 <lprofMergeValueProfData+0x28>  // b.lo, b.ul, b.last
 118:	nop
 11c:	nop
 120:	ldp	x29, x30, [sp], #80
 124:	ret

InstrProfilingNameVar.c.o:     file format elf64-littleaarch64


InstrProfilingWriter.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofBufferWriter>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	w2, [sp, #28]
  14:	ldr	x0, [sp, #40]
  18:	add	x0, x0, #0x8
  1c:	str	x0, [sp, #64]
  20:	str	wzr, [sp, #76]
  24:	b	c4 <lprofBufferWriter+0xc4>
  28:	ldr	w0, [sp, #76]
  2c:	lsl	x0, x0, #5
  30:	ldr	x1, [sp, #32]
  34:	add	x0, x1, x0
  38:	ldr	x1, [x0, #8]
  3c:	ldr	w0, [sp, #76]
  40:	lsl	x0, x0, #5
  44:	ldr	x2, [sp, #32]
  48:	add	x0, x2, x0
  4c:	ldr	x0, [x0, #16]
  50:	mul	x0, x1, x0
  54:	str	x0, [sp, #56]
  58:	ldr	w0, [sp, #76]
  5c:	lsl	x0, x0, #5
  60:	ldr	x1, [sp, #32]
  64:	add	x0, x1, x0
  68:	ldr	x0, [x0]
  6c:	cmp	x0, #0x0
  70:	b.eq	a0 <lprofBufferWriter+0xa0>  // b.none
  74:	ldr	x0, [sp, #64]
  78:	ldr	x3, [x0]
  7c:	ldr	w0, [sp, #76]
  80:	lsl	x0, x0, #5
  84:	ldr	x1, [sp, #32]
  88:	add	x0, x1, x0
  8c:	ldr	x0, [x0]
  90:	ldr	x2, [sp, #56]
  94:	mov	x1, x0
  98:	mov	x0, x3
  9c:	bl	0 <memcpy>
  a0:	ldr	x0, [sp, #64]
  a4:	ldr	x1, [x0]
  a8:	ldr	x0, [sp, #56]
  ac:	add	x1, x1, x0
  b0:	ldr	x0, [sp, #64]
  b4:	str	x1, [x0]
  b8:	ldr	w0, [sp, #76]
  bc:	add	w0, w0, #0x1
  c0:	str	w0, [sp, #76]
  c4:	ldr	w1, [sp, #76]
  c8:	ldr	w0, [sp, #28]
  cc:	cmp	w1, w0
  d0:	b.cc	28 <lprofBufferWriter+0x28>  // b.lo, b.ul, b.last
  d4:	mov	w0, #0x0                   	// #0
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret

00000000000000e0 <llvmInitBufferIO>:
  e0:	sub	sp, sp, #0x20
  e4:	str	x0, [sp, #24]
  e8:	str	x1, [sp, #16]
  ec:	str	x2, [sp, #8]
  f0:	str	w3, [sp, #4]
  f4:	ldr	x0, [sp, #24]
  f8:	ldr	x1, [sp, #16]
  fc:	str	x1, [x0]
 100:	ldr	x0, [sp, #24]
 104:	str	wzr, [x0, #8]
 108:	ldr	x0, [sp, #24]
 10c:	ldr	x1, [sp, #8]
 110:	str	x1, [x0, #16]
 114:	ldr	x0, [sp, #24]
 118:	ldr	w1, [sp, #4]
 11c:	str	w1, [x0, #24]
 120:	ldr	x0, [sp, #24]
 124:	str	wzr, [x0, #28]
 128:	nop
 12c:	add	sp, sp, #0x20
 130:	ret

0000000000000134 <lprofCreateBufferIO>:
 134:	stp	x29, x30, [sp, #-48]!
 138:	mov	x29, sp
 13c:	str	x0, [sp, #24]
 140:	adrp	x0, 8 <lprofBufferWriter+0x8>
 144:	add	x0, x0, #0x0
 148:	ldr	x0, [x0]
 14c:	str	x0, [sp, #40]
 150:	adrp	x0, 10 <lprofBufferWriter+0x10>
 154:	add	x0, x0, #0x0
 158:	ldr	w0, [x0]
 15c:	str	w0, [sp, #36]
 160:	ldr	x0, [sp, #40]
 164:	cmp	x0, #0x0
 168:	b.ne	180 <lprofCreateBufferIO+0x4c>  // b.any
 16c:	adrp	x0, 0 <lprofBufferWriter>
 170:	add	x0, x0, #0x0
 174:	str	x0, [sp, #40]
 178:	mov	w0, #0x2000                	// #8192
 17c:	str	w0, [sp, #36]
 180:	ldr	w3, [sp, #36]
 184:	ldr	x2, [sp, #40]
 188:	ldr	x1, [sp, #24]
 18c:	adrp	x0, 0 <lprofBufferWriter>
 190:	add	x0, x0, #0x0
 194:	bl	e0 <llvmInitBufferIO>
 198:	adrp	x0, 0 <lprofBufferWriter>
 19c:	add	x0, x0, #0x0
 1a0:	ldp	x29, x30, [sp], #48
 1a4:	ret

00000000000001a8 <lprofDeleteBufferIO>:
 1a8:	stp	x29, x30, [sp, #-32]!
 1ac:	mov	x29, sp
 1b0:	str	x0, [sp, #24]
 1b4:	ldr	x0, [sp, #24]
 1b8:	ldr	w0, [x0, #8]
 1bc:	cmp	w0, #0x0
 1c0:	b.eq	1dc <lprofDeleteBufferIO+0x34>  // b.none
 1c4:	adrp	x0, 0 <lprofBufferWriter>
 1c8:	add	x0, x0, #0x0
 1cc:	ldr	x1, [x0]
 1d0:	ldr	x0, [sp, #24]
 1d4:	ldr	x0, [x0]
 1d8:	blr	x1
 1dc:	adrp	x0, 8 <lprofBufferWriter+0x8>
 1e0:	add	x0, x0, #0x0
 1e4:	ldr	x0, [x0]
 1e8:	cmp	x0, #0x0
 1ec:	b.eq	224 <lprofDeleteBufferIO+0x7c>  // b.none
 1f0:	adrp	x0, 0 <lprofBufferWriter>
 1f4:	add	x0, x0, #0x0
 1f8:	ldr	x1, [x0]
 1fc:	adrp	x0, 8 <lprofBufferWriter+0x8>
 200:	add	x0, x0, #0x0
 204:	ldr	x0, [x0]
 208:	blr	x1
 20c:	adrp	x0, 8 <lprofBufferWriter+0x8>
 210:	add	x0, x0, #0x0
 214:	str	xzr, [x0]
 218:	adrp	x0, 10 <lprofBufferWriter+0x10>
 21c:	add	x0, x0, #0x0
 220:	str	wzr, [x0]
 224:	nop
 228:	ldp	x29, x30, [sp], #32
 22c:	ret

0000000000000230 <lprofBufferIOWrite>:
 230:	stp	x29, x30, [sp, #-112]!
 234:	mov	x29, sp
 238:	str	x0, [sp, #40]
 23c:	str	x1, [sp, #32]
 240:	str	w2, [sp, #28]
 244:	ldr	x0, [sp, #40]
 248:	ldr	w1, [x0, #28]
 24c:	ldr	w0, [sp, #28]
 250:	add	w1, w1, w0
 254:	ldr	x0, [sp, #40]
 258:	ldr	w0, [x0, #24]
 25c:	cmp	w1, w0
 260:	b.ls	27c <lprofBufferIOWrite+0x4c>  // b.plast
 264:	ldr	x0, [sp, #40]
 268:	bl	33c <lprofBufferIOFlush>
 26c:	cmp	w0, #0x0
 270:	b.eq	27c <lprofBufferIOWrite+0x4c>  // b.none
 274:	mov	w0, #0xffffffff            	// #-1
 278:	b	334 <lprofBufferIOWrite+0x104>
 27c:	ldr	x0, [sp, #32]
 280:	str	x0, [sp, #72]
 284:	mov	x0, #0x1                   	// #1
 288:	str	x0, [sp, #80]
 28c:	ldr	w0, [sp, #28]
 290:	str	x0, [sp, #88]
 294:	str	wzr, [sp, #96]
 298:	ldr	x0, [sp, #40]
 29c:	ldr	w0, [x0, #24]
 2a0:	ldr	w1, [sp, #28]
 2a4:	cmp	w1, w0
 2a8:	b.ls	2dc <lprofBufferIOWrite+0xac>  // b.plast
 2ac:	ldr	x0, [sp, #40]
 2b0:	ldr	x0, [x0]
 2b4:	ldr	x3, [x0]
 2b8:	ldr	x0, [sp, #40]
 2bc:	ldr	x0, [x0]
 2c0:	add	x1, sp, #0x48
 2c4:	mov	w2, #0x1                   	// #1
 2c8:	blr	x3
 2cc:	cmp	w0, #0x0
 2d0:	b.eq	330 <lprofBufferIOWrite+0x100>  // b.none
 2d4:	mov	w0, #0xffffffff            	// #-1
 2d8:	b	334 <lprofBufferIOWrite+0x104>
 2dc:	ldr	x0, [sp, #40]
 2e0:	ldr	x1, [x0, #16]
 2e4:	ldr	x0, [sp, #40]
 2e8:	ldr	w0, [x0, #28]
 2ec:	mov	w0, w0
 2f0:	add	x0, x1, x0
 2f4:	str	x0, [sp, #104]
 2f8:	add	x0, sp, #0x38
 2fc:	ldr	x1, [sp, #104]
 300:	bl	0 <initBufferWriter>
 304:	add	x1, sp, #0x48
 308:	add	x0, sp, #0x38
 30c:	mov	w2, #0x1                   	// #1
 310:	bl	0 <lprofBufferWriter>
 314:	ldr	x1, [sp, #64]
 318:	ldr	x0, [sp, #40]
 31c:	ldr	x0, [x0, #16]
 320:	sub	x0, x1, x0
 324:	mov	w1, w0
 328:	ldr	x0, [sp, #40]
 32c:	str	w1, [x0, #28]
 330:	mov	w0, #0x0                   	// #0
 334:	ldp	x29, x30, [sp], #112
 338:	ret

000000000000033c <lprofBufferIOFlush>:
 33c:	stp	x29, x30, [sp, #-64]!
 340:	mov	x29, sp
 344:	str	x0, [sp, #24]
 348:	ldr	x0, [sp, #24]
 34c:	ldr	w0, [x0, #28]
 350:	cmp	w0, #0x0
 354:	b.eq	3b8 <lprofBufferIOFlush+0x7c>  // b.none
 358:	ldr	x0, [sp, #24]
 35c:	ldr	x0, [x0, #16]
 360:	str	x0, [sp, #32]
 364:	mov	x0, #0x1                   	// #1
 368:	str	x0, [sp, #40]
 36c:	ldr	x0, [sp, #24]
 370:	ldr	w0, [x0, #28]
 374:	mov	w0, w0
 378:	str	x0, [sp, #48]
 37c:	str	wzr, [sp, #56]
 380:	ldr	x0, [sp, #24]
 384:	ldr	x0, [x0]
 388:	ldr	x3, [x0]
 38c:	ldr	x0, [sp, #24]
 390:	ldr	x0, [x0]
 394:	add	x1, sp, #0x20
 398:	mov	w2, #0x1                   	// #1
 39c:	blr	x3
 3a0:	cmp	w0, #0x0
 3a4:	b.eq	3b0 <lprofBufferIOFlush+0x74>  // b.none
 3a8:	mov	w0, #0xffffffff            	// #-1
 3ac:	b	3bc <lprofBufferIOFlush+0x80>
 3b0:	ldr	x0, [sp, #24]
 3b4:	str	wzr, [x0, #28]
 3b8:	mov	w0, #0x0                   	// #0
 3bc:	ldp	x29, x30, [sp], #64
 3c0:	ret

00000000000003c4 <writeOneValueProfData>:
 3c4:	stp	x29, x30, [sp, #-144]!
 3c8:	mov	x29, sp
 3cc:	str	x0, [x29, #40]
 3d0:	str	x1, [x29, #32]
 3d4:	str	x2, [x29, #24]
 3d8:	str	wzr, [x29, #116]
 3dc:	str	wzr, [x29, #140]
 3e0:	b	4a8 <writeOneValueProfData+0xe4>
 3e4:	ldr	x1, [x29, #24]
 3e8:	ldr	w0, [x29, #140]
 3ec:	add	x0, x0, #0x10
 3f0:	lsl	x0, x0, #1
 3f4:	add	x0, x1, x0
 3f8:	ldrh	w0, [x0, #12]
 3fc:	cmp	w0, #0x0
 400:	b.ne	418 <writeOneValueProfData+0x54>  // b.any
 404:	ldr	w0, [x29, #140]
 408:	lsl	x0, x0, #3
 40c:	add	x1, x29, #0x48
 410:	str	xzr, [x1, x0]
 414:	b	49c <writeOneValueProfData+0xd8>
 418:	ldr	x0, [x29, #32]
 41c:	ldr	x1, [x0, #8]
 420:	ldr	x2, [x29, #24]
 424:	ldr	w0, [x29, #140]
 428:	add	x0, x0, #0x10
 42c:	lsl	x0, x0, #1
 430:	add	x0, x2, x0
 434:	ldrh	w0, [x0, #12]
 438:	blr	x1
 43c:	sub	w0, w0, #0x8
 440:	str	w0, [x29, #100]
 444:	ldr	w0, [x29, #100]
 448:	add	x0, x0, #0xf
 44c:	lsr	x0, x0, #4
 450:	lsl	x0, x0, #4
 454:	sub	sp, sp, x0
 458:	mov	x0, sp
 45c:	add	x0, x0, #0xf
 460:	lsr	x0, x0, #4
 464:	lsl	x0, x0, #4
 468:	mov	x2, x0
 46c:	ldr	w0, [x29, #140]
 470:	lsl	x0, x0, #3
 474:	add	x1, x29, #0x48
 478:	str	x2, [x1, x0]
 47c:	ldr	w0, [x29, #140]
 480:	lsl	x0, x0, #3
 484:	add	x1, x29, #0x48
 488:	ldr	x0, [x1, x0]
 48c:	ldr	w1, [x29, #100]
 490:	mov	x2, x1
 494:	mov	w1, #0x0                   	// #0
 498:	bl	0 <memset>
 49c:	ldr	w0, [x29, #140]
 4a0:	add	w0, w0, #0x1
 4a4:	str	w0, [x29, #140]
 4a8:	ldr	w0, [x29, #140]
 4ac:	cmp	w0, #0x1
 4b0:	b.ls	3e4 <writeOneValueProfData+0x20>  // b.plast
 4b4:	ldr	x0, [x29, #32]
 4b8:	ldr	x2, [x0]
 4bc:	add	x0, x29, #0x48
 4c0:	mov	x1, x0
 4c4:	ldr	x0, [x29, #24]
 4c8:	blr	x2
 4cc:	str	w0, [x29, #116]
 4d0:	ldr	w0, [x29, #116]
 4d4:	cmp	w0, #0x0
 4d8:	b.ne	4e4 <writeOneValueProfData+0x120>  // b.any
 4dc:	mov	w0, #0x0                   	// #0
 4e0:	b	748 <writeOneValueProfData+0x384>
 4e4:	ldr	x0, [x29, #32]
 4e8:	ldr	x0, [x0, #32]
 4ec:	blr	x0
 4f0:	str	w0, [x29, #88]
 4f4:	ldr	w0, [x29, #116]
 4f8:	str	w0, [x29, #92]
 4fc:	add	x0, x29, #0x58
 500:	mov	w2, #0x8                   	// #8
 504:	mov	x1, x0
 508:	ldr	x0, [x29, #40]
 50c:	bl	230 <lprofBufferIOWrite>
 510:	cmp	w0, #0x0
 514:	b.eq	520 <writeOneValueProfData+0x15c>  // b.none
 518:	mov	w0, #0xffffffff            	// #-1
 51c:	b	748 <writeOneValueProfData+0x384>
 520:	ldr	x0, [x29, #32]
 524:	ldr	x1, [x0, #16]
 528:	add	x0, x29, #0x58
 52c:	blr	x1
 530:	mov	x1, x0
 534:	add	x0, x29, #0x58
 538:	add	x0, x0, #0x8
 53c:	cmp	x1, x0
 540:	b.eq	54c <writeOneValueProfData+0x188>  // b.none
 544:	mov	w0, #0xffffffff            	// #-1
 548:	b	748 <writeOneValueProfData+0x384>
 54c:	str	wzr, [x29, #140]
 550:	b	738 <writeOneValueProfData+0x374>
 554:	mov	w0, #0x8                   	// #8
 558:	str	w0, [x29, #112]
 55c:	ldr	x1, [x29, #24]
 560:	ldr	w0, [x29, #140]
 564:	add	x0, x0, #0x10
 568:	lsl	x0, x0, #1
 56c:	add	x0, x1, x0
 570:	ldrh	w0, [x0, #12]
 574:	cmp	w0, #0x0
 578:	b.eq	728 <writeOneValueProfData+0x364>  // b.none
 57c:	ldr	w0, [x29, #140]
 580:	str	w0, [x29, #56]
 584:	ldr	x1, [x29, #24]
 588:	ldr	w0, [x29, #140]
 58c:	add	x0, x0, #0x10
 590:	lsl	x0, x0, #1
 594:	add	x0, x1, x0
 598:	ldrh	w0, [x0, #12]
 59c:	str	w0, [x29, #60]
 5a0:	add	x0, x29, #0x38
 5a4:	ldr	w2, [x29, #112]
 5a8:	mov	x1, x0
 5ac:	ldr	x0, [x29, #40]
 5b0:	bl	230 <lprofBufferIOWrite>
 5b4:	cmp	w0, #0x0
 5b8:	b.eq	5c4 <writeOneValueProfData+0x200>  // b.none
 5bc:	mov	w0, #0xffffffff            	// #-1
 5c0:	b	748 <writeOneValueProfData+0x384>
 5c4:	ldr	x0, [x29, #32]
 5c8:	ldr	x1, [x0, #8]
 5cc:	ldr	x2, [x29, #24]
 5d0:	ldr	w0, [x29, #140]
 5d4:	add	x0, x0, #0x10
 5d8:	lsl	x0, x0, #1
 5dc:	add	x0, x2, x0
 5e0:	ldrh	w0, [x0, #12]
 5e4:	blr	x1
 5e8:	mov	w1, w0
 5ec:	ldr	w0, [x29, #112]
 5f0:	sub	w0, w1, w0
 5f4:	str	w0, [x29, #108]
 5f8:	ldr	w0, [x29, #140]
 5fc:	lsl	x0, x0, #3
 600:	add	x1, x29, #0x48
 604:	ldr	x0, [x1, x0]
 608:	ldr	w2, [x29, #108]
 60c:	mov	x1, x0
 610:	ldr	x0, [x29, #40]
 614:	bl	230 <lprofBufferIOWrite>
 618:	cmp	w0, #0x0
 61c:	b.eq	628 <writeOneValueProfData+0x264>  // b.none
 620:	mov	w0, #0xffffffff            	// #-1
 624:	b	748 <writeOneValueProfData+0x384>
 628:	str	wzr, [x29, #136]
 62c:	b	6fc <writeOneValueProfData+0x338>
 630:	str	xzr, [x29, #120]
 634:	ldr	x0, [x29, #32]
 638:	ldr	x2, [x0, #24]
 63c:	ldr	w1, [x29, #136]
 640:	ldr	w0, [x29, #140]
 644:	blr	x2
 648:	str	w0, [x29, #132]
 64c:	ldr	w0, [x29, #132]
 650:	cmp	w0, #0x0
 654:	b.eq	6ec <writeOneValueProfData+0x328>  // b.none
 658:	adrp	x0, 0 <lprofBufferWriter>
 65c:	add	x0, x0, #0x0
 660:	ldr	w0, [x0]
 664:	ldr	w2, [x29, #132]
 668:	ldr	w1, [x29, #132]
 66c:	cmp	w2, w0
 670:	csel	w0, w1, w0, ls  // ls = plast
 674:	str	w0, [x29, #104]
 678:	ldr	x0, [x29, #32]
 67c:	ldr	x5, [x0, #40]
 680:	ldr	w4, [x29, #104]
 684:	ldr	x3, [x29, #120]
 688:	adrp	x0, 0 <lprofBufferWriter>
 68c:	add	x2, x0, #0x0
 690:	ldr	w1, [x29, #136]
 694:	ldr	w0, [x29, #140]
 698:	blr	x5
 69c:	str	x0, [x29, #120]
 6a0:	ldr	w0, [x29, #104]
 6a4:	lsl	w0, w0, #4
 6a8:	mov	w2, w0
 6ac:	adrp	x0, 0 <lprofBufferWriter>
 6b0:	add	x1, x0, #0x0
 6b4:	ldr	x0, [x29, #40]
 6b8:	bl	230 <lprofBufferIOWrite>
 6bc:	cmp	w0, #0x0
 6c0:	b.eq	6cc <writeOneValueProfData+0x308>  // b.none
 6c4:	mov	w0, #0xffffffff            	// #-1
 6c8:	b	748 <writeOneValueProfData+0x384>
 6cc:	ldr	w1, [x29, #132]
 6d0:	ldr	w0, [x29, #104]
 6d4:	sub	w0, w1, w0
 6d8:	str	w0, [x29, #132]
 6dc:	ldr	w0, [x29, #132]
 6e0:	cmp	w0, #0x0
 6e4:	b.ne	658 <writeOneValueProfData+0x294>  // b.any
 6e8:	b	6f0 <writeOneValueProfData+0x32c>
 6ec:	nop
 6f0:	ldr	w0, [x29, #136]
 6f4:	add	w0, w0, #0x1
 6f8:	str	w0, [x29, #136]
 6fc:	ldr	x1, [x29, #24]
 700:	ldr	w0, [x29, #140]
 704:	add	x0, x0, #0x10
 708:	lsl	x0, x0, #1
 70c:	add	x0, x1, x0
 710:	ldrh	w0, [x0, #12]
 714:	mov	w1, w0
 718:	ldr	w0, [x29, #136]
 71c:	cmp	w0, w1
 720:	b.cc	630 <writeOneValueProfData+0x26c>  // b.lo, b.ul, b.last
 724:	b	72c <writeOneValueProfData+0x368>
 728:	nop
 72c:	ldr	w0, [x29, #140]
 730:	add	w0, w0, #0x1
 734:	str	w0, [x29, #140]
 738:	ldr	w0, [x29, #140]
 73c:	cmp	w0, #0x1
 740:	b.ls	554 <writeOneValueProfData+0x190>  // b.plast
 744:	mov	w0, #0x0                   	// #0
 748:	mov	sp, x29
 74c:	ldp	x29, x30, [sp], #144
 750:	ret

0000000000000754 <writeValueProfData>:
 754:	stp	x29, x30, [sp, #-64]!
 758:	mov	x29, sp
 75c:	str	x0, [sp, #40]
 760:	str	x1, [sp, #32]
 764:	str	x2, [sp, #24]
 768:	str	x3, [sp, #16]
 76c:	str	xzr, [sp, #56]
 770:	ldr	x0, [sp, #32]
 774:	cmp	x0, #0x0
 778:	b.ne	784 <writeValueProfData+0x30>  // b.any
 77c:	mov	w0, #0x0                   	// #0
 780:	b	7fc <writeValueProfData+0xa8>
 784:	ldr	x0, [sp, #40]
 788:	bl	134 <lprofCreateBufferIO>
 78c:	str	x0, [sp, #48]
 790:	ldr	x0, [sp, #24]
 794:	str	x0, [sp, #56]
 798:	b	7c8 <writeValueProfData+0x74>
 79c:	ldr	x2, [sp, #56]
 7a0:	ldr	x1, [sp, #32]
 7a4:	ldr	x0, [sp, #48]
 7a8:	bl	3c4 <writeOneValueProfData>
 7ac:	cmp	w0, #0x0
 7b0:	b.eq	7bc <writeValueProfData+0x68>  // b.none
 7b4:	mov	w0, #0xffffffff            	// #-1
 7b8:	b	7fc <writeValueProfData+0xa8>
 7bc:	ldr	x0, [sp, #56]
 7c0:	add	x0, x0, #0x30
 7c4:	str	x0, [sp, #56]
 7c8:	ldr	x1, [sp, #56]
 7cc:	ldr	x0, [sp, #16]
 7d0:	cmp	x1, x0
 7d4:	b.cc	79c <writeValueProfData+0x48>  // b.lo, b.ul, b.last
 7d8:	ldr	x0, [sp, #48]
 7dc:	bl	33c <lprofBufferIOFlush>
 7e0:	cmp	w0, #0x0
 7e4:	b.eq	7f0 <writeValueProfData+0x9c>  // b.none
 7e8:	mov	w0, #0xffffffff            	// #-1
 7ec:	b	7fc <writeValueProfData+0xa8>
 7f0:	ldr	x0, [sp, #48]
 7f4:	bl	1a8 <lprofDeleteBufferIO>
 7f8:	mov	w0, #0x0                   	// #0
 7fc:	ldp	x29, x30, [sp], #64
 800:	ret

0000000000000804 <lprofWriteData>:
 804:	sub	sp, sp, #0x70
 808:	stp	x29, x30, [sp, #16]
 80c:	add	x29, sp, #0x10
 810:	str	x0, [sp, #56]
 814:	str	x1, [sp, #48]
 818:	str	w2, [sp, #44]
 81c:	bl	0 <__llvm_profile_begin_data>
 820:	str	x0, [sp, #104]
 824:	bl	0 <__llvm_profile_end_data>
 828:	str	x0, [sp, #96]
 82c:	bl	0 <__llvm_profile_begin_counters>
 830:	str	x0, [sp, #88]
 834:	bl	0 <__llvm_profile_end_counters>
 838:	str	x0, [sp, #80]
 83c:	bl	0 <__llvm_profile_begin_names>
 840:	str	x0, [sp, #72]
 844:	bl	0 <__llvm_profile_end_names>
 848:	str	x0, [sp, #64]
 84c:	ldr	w0, [sp, #44]
 850:	str	w0, [sp]
 854:	ldr	x7, [sp, #64]
 858:	ldr	x6, [sp, #72]
 85c:	ldr	x5, [sp, #48]
 860:	ldr	x4, [sp, #80]
 864:	ldr	x3, [sp, #88]
 868:	ldr	x2, [sp, #96]
 86c:	ldr	x1, [sp, #104]
 870:	ldr	x0, [sp, #56]
 874:	bl	884 <lprofWriteDataImpl>
 878:	ldp	x29, x30, [sp, #16]
 87c:	add	sp, sp, #0x70
 880:	ret

0000000000000884 <lprofWriteDataImpl>:
 884:	stp	x29, x30, [sp, #-432]!
 888:	mov	x29, sp
 88c:	str	x0, [sp, #72]
 890:	str	x1, [sp, #64]
 894:	str	x2, [sp, #56]
 898:	str	x3, [sp, #48]
 89c:	str	x4, [sp, #40]
 8a0:	str	x5, [sp, #32]
 8a4:	str	x6, [sp, #24]
 8a8:	str	x7, [sp, #16]
 8ac:	ldr	x1, [sp, #56]
 8b0:	ldr	x0, [sp, #64]
 8b4:	bl	0 <__llvm_profile_get_data_size>
 8b8:	str	x0, [sp, #424]
 8bc:	ldr	x1, [sp, #40]
 8c0:	ldr	x0, [sp, #48]
 8c4:	sub	x0, x1, x0
 8c8:	asr	x0, x0, #3
 8cc:	str	x0, [sp, #416]
 8d0:	ldr	x1, [sp, #16]
 8d4:	ldr	x0, [sp, #24]
 8d8:	sub	x0, x1, x0
 8dc:	str	x0, [sp, #408]
 8e0:	ldr	x0, [sp, #424]
 8e4:	cmp	x0, #0x0
 8e8:	b.ne	8f4 <lprofWriteDataImpl+0x70>  // b.any
 8ec:	mov	w0, #0x0                   	// #0
 8f0:	b	a98 <lprofWriteDataImpl+0x214>
 8f4:	add	x2, sp, #0x130
 8f8:	add	x1, sp, #0x138
 8fc:	add	x0, sp, #0x140
 900:	mov	x5, x2
 904:	mov	x4, x1
 908:	mov	x3, x0
 90c:	ldr	x2, [sp, #408]
 910:	ldr	x1, [sp, #416]
 914:	ldr	x0, [sp, #424]
 918:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
 91c:	bl	0 <__llvm_profile_get_magic>
 920:	str	x0, [sp, #328]
 924:	bl	0 <__llvm_profile_get_version>
 928:	str	x0, [sp, #336]
 92c:	ldr	x0, [sp, #424]
 930:	str	x0, [sp, #344]
 934:	ldr	x0, [sp, #320]
 938:	str	x0, [sp, #352]
 93c:	ldr	x0, [sp, #416]
 940:	str	x0, [sp, #360]
 944:	ldr	x0, [sp, #312]
 948:	str	x0, [sp, #368]
 94c:	ldr	x0, [sp, #408]
 950:	str	x0, [sp, #376]
 954:	ldr	x0, [sp, #48]
 958:	str	x0, [sp, #384]
 95c:	ldr	x0, [sp, #24]
 960:	str	x0, [sp, #392]
 964:	mov	x0, #0x1                   	// #1
 968:	str	x0, [sp, #400]
 96c:	add	x0, sp, #0x148
 970:	str	x0, [sp, #80]
 974:	mov	x0, #0x50                  	// #80
 978:	str	x0, [sp, #88]
 97c:	mov	x0, #0x1                   	// #1
 980:	str	x0, [sp, #96]
 984:	str	wzr, [sp, #104]
 988:	ldr	x0, [sp, #64]
 98c:	str	x0, [sp, #112]
 990:	mov	x0, #0x30                  	// #48
 994:	str	x0, [sp, #120]
 998:	ldr	x0, [sp, #424]
 99c:	str	x0, [sp, #128]
 9a0:	str	wzr, [sp, #136]
 9a4:	str	xzr, [sp, #144]
 9a8:	mov	x0, #0x1                   	// #1
 9ac:	str	x0, [sp, #152]
 9b0:	ldr	x0, [sp, #320]
 9b4:	str	x0, [sp, #160]
 9b8:	mov	w0, #0x1                   	// #1
 9bc:	str	w0, [sp, #168]
 9c0:	ldr	x0, [sp, #48]
 9c4:	str	x0, [sp, #176]
 9c8:	mov	x0, #0x8                   	// #8
 9cc:	str	x0, [sp, #184]
 9d0:	ldr	x0, [sp, #416]
 9d4:	str	x0, [sp, #192]
 9d8:	str	wzr, [sp, #200]
 9dc:	str	xzr, [sp, #208]
 9e0:	mov	x0, #0x1                   	// #1
 9e4:	str	x0, [sp, #216]
 9e8:	ldr	x0, [sp, #312]
 9ec:	str	x0, [sp, #224]
 9f0:	mov	w0, #0x1                   	// #1
 9f4:	str	w0, [sp, #232]
 9f8:	ldr	w0, [sp, #432]
 9fc:	cmp	w0, #0x0
 a00:	b.ne	a0c <lprofWriteDataImpl+0x188>  // b.any
 a04:	ldr	x0, [sp, #24]
 a08:	b	a10 <lprofWriteDataImpl+0x18c>
 a0c:	mov	x0, #0x0                   	// #0
 a10:	str	x0, [sp, #240]
 a14:	mov	x0, #0x1                   	// #1
 a18:	str	x0, [sp, #248]
 a1c:	ldr	x0, [sp, #408]
 a20:	str	x0, [sp, #256]
 a24:	str	wzr, [sp, #264]
 a28:	str	xzr, [sp, #272]
 a2c:	mov	x0, #0x1                   	// #1
 a30:	str	x0, [sp, #280]
 a34:	ldr	x0, [sp, #304]
 a38:	str	x0, [sp, #288]
 a3c:	mov	w0, #0x1                   	// #1
 a40:	str	w0, [sp, #296]
 a44:	ldr	x0, [sp, #72]
 a48:	ldr	x3, [x0]
 a4c:	add	x0, sp, #0x50
 a50:	mov	w2, #0x7                   	// #7
 a54:	mov	x1, x0
 a58:	ldr	x0, [sp, #72]
 a5c:	blr	x3
 a60:	cmp	w0, #0x0
 a64:	b.eq	a70 <lprofWriteDataImpl+0x1ec>  // b.none
 a68:	mov	w0, #0xffffffff            	// #-1
 a6c:	b	a98 <lprofWriteDataImpl+0x214>
 a70:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
 a74:	cmp	w0, #0x0
 a78:	b.eq	a84 <lprofWriteDataImpl+0x200>  // b.none
 a7c:	mov	w0, #0x0                   	// #0
 a80:	b	a98 <lprofWriteDataImpl+0x214>
 a84:	ldr	x3, [sp, #56]
 a88:	ldr	x2, [sp, #64]
 a8c:	ldr	x1, [sp, #32]
 a90:	ldr	x0, [sp, #72]
 a94:	bl	754 <writeValueProfData>
 a98:	ldp	x29, x30, [sp], #432
 a9c:	ret

InstrProfilingPlatformDarwin.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformFuchsia.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformLinux.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_begin_data>:
   0:	adrp	x0, 0 <__start___llvm_prf_data>
   4:	add	x0, x0, #0x0
   8:	ret

000000000000000c <__llvm_profile_end_data>:
   c:	adrp	x0, 0 <__stop___llvm_prf_data>
  10:	add	x0, x0, #0x0
  14:	ret

0000000000000018 <__llvm_profile_begin_names>:
  18:	adrp	x0, 0 <__start___llvm_prf_names>
  1c:	add	x0, x0, #0x0
  20:	ret

0000000000000024 <__llvm_profile_end_names>:
  24:	adrp	x0, 0 <__stop___llvm_prf_names>
  28:	add	x0, x0, #0x0
  2c:	ret

0000000000000030 <__llvm_profile_begin_counters>:
  30:	adrp	x0, 0 <__start___llvm_prf_cnts>
  34:	add	x0, x0, #0x0
  38:	ret

000000000000003c <__llvm_profile_end_counters>:
  3c:	adrp	x0, 0 <__stop___llvm_prf_cnts>
  40:	add	x0, x0, #0x0
  44:	ret

0000000000000048 <__llvm_profile_begin_orderfile>:
  48:	adrp	x0, 0 <__start___llvm_orderfile>
  4c:	add	x0, x0, #0x0
  50:	ret

0000000000000054 <__llvm_profile_begin_vnodes>:
  54:	adrp	x0, 0 <__start___llvm_prf_vnds>
  58:	add	x0, x0, #0x0
  5c:	ret

0000000000000060 <__llvm_profile_end_vnodes>:
  60:	adrp	x0, 0 <__stop___llvm_prf_vnds>
  64:	add	x0, x0, #0x0
  68:	ret

InstrProfilingPlatformOther.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformWindows.c.o:     file format elf64-littleaarch64


InstrProfilingRuntime.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN12_GLOBAL__N_115RegisterRuntimeC1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	bl	0 <__llvm_profile_initialize_file>
  10:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
  14:	cmp	w0, #0x0
  18:	cset	w0, eq  // eq = none
  1c:	and	w0, w0, #0xff
  20:	cmp	w0, #0x0
  24:	b.eq	2c <_ZN12_GLOBAL__N_115RegisterRuntimeC1Ev+0x2c>  // b.none
  28:	bl	0 <__llvm_profile_register_write_file_atexit>
  2c:	nop
  30:	ldp	x29, x30, [sp], #32
  34:	ret

0000000000000038 <_Z41__static_initialization_and_destruction_0ii>:
  38:	stp	x29, x30, [sp, #-32]!
  3c:	mov	x29, sp
  40:	str	w0, [sp, #28]
  44:	str	w1, [sp, #24]
  48:	ldr	w0, [sp, #28]
  4c:	cmp	w0, #0x1
  50:	b.ne	70 <_Z41__static_initialization_and_destruction_0ii+0x38>  // b.any
  54:	ldr	w1, [sp, #24]
  58:	mov	w0, #0xffff                	// #65535
  5c:	cmp	w1, w0
  60:	b.ne	70 <_Z41__static_initialization_and_destruction_0ii+0x38>  // b.any
  64:	adrp	x0, 0 <_ZN12_GLOBAL__N_115RegisterRuntimeC1Ev>
  68:	add	x0, x0, #0x0
  6c:	bl	0 <_ZN12_GLOBAL__N_115RegisterRuntimeC1Ev>
  70:	nop
  74:	ldp	x29, x30, [sp], #32
  78:	ret

000000000000007c <_GLOBAL__sub_I_InstrProfilingRuntime.cpp>:
  7c:	stp	x29, x30, [sp, #-16]!
  80:	mov	x29, sp
  84:	mov	w1, #0xffff                	// #65535
  88:	mov	w0, #0x1                   	// #1
  8c:	bl	38 <_Z41__static_initialization_and_destruction_0ii>
  90:	ldp	x29, x30, [sp], #16
  94:	ret

InstrProfilingUtil.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_recursive_mkdir>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	mov	w0, #0x1                   	// #1
  10:	str	w0, [sp, #40]
  14:	ldr	w0, [sp, #40]
  18:	str	w0, [sp, #44]
  1c:	b	94 <__llvm_profile_recursive_mkdir+0x94>
  20:	ldrsw	x0, [sp, #44]
  24:	ldr	x1, [sp, #24]
  28:	add	x0, x1, x0
  2c:	ldrb	w0, [x0]
  30:	strb	w0, [sp, #39]
  34:	ldrsw	x0, [sp, #44]
  38:	ldr	x1, [sp, #24]
  3c:	add	x0, x1, x0
  40:	ldrb	w0, [x0]
  44:	cmp	w0, #0x2f
  48:	b.ne	84 <__llvm_profile_recursive_mkdir+0x84>  // b.any
  4c:	ldrsw	x0, [sp, #44]
  50:	ldr	x1, [sp, #24]
  54:	add	x0, x1, x0
  58:	strb	wzr, [x0]
  5c:	bl	e0 <__llvm_profile_get_dir_mode>
  60:	mov	w1, w0
  64:	ldr	x0, [sp, #24]
  68:	bl	0 <mkdir>
  6c:	ldrsw	x0, [sp, #44]
  70:	ldr	x1, [sp, #24]
  74:	add	x0, x1, x0
  78:	ldrb	w1, [sp, #39]
  7c:	strb	w1, [x0]
  80:	b	88 <__llvm_profile_recursive_mkdir+0x88>
  84:	nop
  88:	ldr	w0, [sp, #44]
  8c:	add	w0, w0, #0x1
  90:	str	w0, [sp, #44]
  94:	ldrsw	x0, [sp, #44]
  98:	ldr	x1, [sp, #24]
  9c:	add	x0, x1, x0
  a0:	ldrb	w0, [x0]
  a4:	cmp	w0, #0x0
  a8:	b.ne	20 <__llvm_profile_recursive_mkdir+0x20>  // b.any
  ac:	nop
  b0:	nop
  b4:	ldp	x29, x30, [sp], #48
  b8:	ret

00000000000000bc <__llvm_profile_set_dir_mode>:
  bc:	sub	sp, sp, #0x10
  c0:	str	w0, [sp, #12]
  c4:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
  c8:	ldr	x0, [x0]
  cc:	ldr	w1, [sp, #12]
  d0:	str	w1, [x0]
  d4:	nop
  d8:	add	sp, sp, #0x10
  dc:	ret

00000000000000e0 <__llvm_profile_get_dir_mode>:
  e0:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
  e4:	ldr	x0, [x0]
  e8:	ldr	w0, [x0]
  ec:	ret

00000000000000f0 <lprofGetHostName>:
  f0:	stp	x29, x30, [sp, #-432]!
  f4:	mov	x29, sp
  f8:	str	x0, [sp, #24]
  fc:	str	w1, [sp, #20]
 100:	add	x0, sp, #0x20
 104:	bl	0 <uname>
 108:	str	w0, [sp, #428]
 10c:	ldr	w0, [sp, #428]
 110:	cmp	w0, #0x0
 114:	b.lt	13c <lprofGetHostName+0x4c>  // b.tstop
 118:	ldrsw	x1, [sp, #20]
 11c:	add	x0, sp, #0x20
 120:	add	x0, x0, #0x41
 124:	mov	x2, x1
 128:	mov	x1, x0
 12c:	ldr	x0, [sp, #24]
 130:	bl	0 <strncpy>
 134:	mov	w0, #0x0                   	// #0
 138:	b	140 <lprofGetHostName+0x50>
 13c:	ldr	w0, [sp, #428]
 140:	ldp	x29, x30, [sp], #432
 144:	ret

0000000000000148 <lprofLockFd>:
 148:	stp	x29, x30, [sp, #-64]!
 14c:	mov	x29, sp
 150:	str	w0, [sp, #28]
 154:	strh	wzr, [sp, #34]
 158:	str	xzr, [sp, #40]
 15c:	str	xzr, [sp, #48]
 160:	bl	0 <getpid>
 164:	str	w0, [sp, #56]
 168:	mov	w0, #0x1                   	// #1
 16c:	strh	w0, [sp, #32]
 170:	b	19c <lprofLockFd+0x54>
 174:	bl	0 <__errno_location>
 178:	ldr	w0, [x0]
 17c:	cmp	w0, #0x4
 180:	b.eq	19c <lprofLockFd+0x54>  // b.none
 184:	bl	0 <__errno_location>
 188:	ldr	w0, [x0]
 18c:	cmp	w0, #0x25
 190:	b.ne	1bc <lprofLockFd+0x74>  // b.any
 194:	mov	w0, #0xffffffff            	// #-1
 198:	b	1c4 <lprofLockFd+0x7c>
 19c:	add	x0, sp, #0x20
 1a0:	mov	x2, x0
 1a4:	mov	w1, #0x7                   	// #7
 1a8:	ldr	w0, [sp, #28]
 1ac:	bl	0 <fcntl>
 1b0:	cmn	w0, #0x1
 1b4:	b.eq	174 <lprofLockFd+0x2c>  // b.none
 1b8:	b	1c0 <lprofLockFd+0x78>
 1bc:	nop
 1c0:	mov	w0, #0x0                   	// #0
 1c4:	ldp	x29, x30, [sp], #64
 1c8:	ret

00000000000001cc <lprofUnlockFd>:
 1cc:	stp	x29, x30, [sp, #-64]!
 1d0:	mov	x29, sp
 1d4:	str	w0, [sp, #28]
 1d8:	strh	wzr, [sp, #34]
 1dc:	str	xzr, [sp, #40]
 1e0:	str	xzr, [sp, #48]
 1e4:	bl	0 <getpid>
 1e8:	str	w0, [sp, #56]
 1ec:	mov	w0, #0x2                   	// #2
 1f0:	strh	w0, [sp, #32]
 1f4:	b	220 <lprofUnlockFd+0x54>
 1f8:	bl	0 <__errno_location>
 1fc:	ldr	w0, [x0]
 200:	cmp	w0, #0x4
 204:	b.eq	220 <lprofUnlockFd+0x54>  // b.none
 208:	bl	0 <__errno_location>
 20c:	ldr	w0, [x0]
 210:	cmp	w0, #0x25
 214:	b.ne	240 <lprofUnlockFd+0x74>  // b.any
 218:	mov	w0, #0xffffffff            	// #-1
 21c:	b	248 <lprofUnlockFd+0x7c>
 220:	add	x0, sp, #0x20
 224:	mov	x2, x0
 228:	mov	w1, #0x7                   	// #7
 22c:	ldr	w0, [sp, #28]
 230:	bl	0 <fcntl>
 234:	cmn	w0, #0x1
 238:	b.eq	1f8 <lprofUnlockFd+0x2c>  // b.none
 23c:	b	244 <lprofUnlockFd+0x78>
 240:	nop
 244:	mov	w0, #0x0                   	// #0
 248:	ldp	x29, x30, [sp], #64
 24c:	ret

0000000000000250 <lprofLockFileHandle>:
 250:	stp	x29, x30, [sp, #-48]!
 254:	mov	x29, sp
 258:	str	x0, [sp, #24]
 25c:	ldr	x0, [sp, #24]
 260:	bl	0 <fileno>
 264:	str	w0, [sp, #44]
 268:	ldr	w0, [sp, #44]
 26c:	bl	148 <lprofLockFd>
 270:	ldp	x29, x30, [sp], #48
 274:	ret

0000000000000278 <lprofUnlockFileHandle>:
 278:	stp	x29, x30, [sp, #-48]!
 27c:	mov	x29, sp
 280:	str	x0, [sp, #24]
 284:	ldr	x0, [sp, #24]
 288:	bl	0 <fileno>
 28c:	str	w0, [sp, #44]
 290:	ldr	w0, [sp, #44]
 294:	bl	1cc <lprofUnlockFd>
 298:	ldp	x29, x30, [sp], #48
 29c:	ret

00000000000002a0 <lprofOpenFileEx>:
 2a0:	stp	x29, x30, [sp, #-48]!
 2a4:	mov	x29, sp
 2a8:	str	x0, [sp, #24]
 2ac:	mov	w2, #0x1b6                 	// #438
 2b0:	mov	w1, #0x42                  	// #66
 2b4:	ldr	x0, [sp, #24]
 2b8:	bl	0 <open>
 2bc:	str	w0, [sp, #44]
 2c0:	ldr	w0, [sp, #44]
 2c4:	cmp	w0, #0x0
 2c8:	b.ge	2d4 <lprofOpenFileEx+0x34>  // b.tcont
 2cc:	mov	x0, #0x0                   	// #0
 2d0:	b	320 <lprofOpenFileEx+0x80>
 2d4:	ldr	w0, [sp, #44]
 2d8:	bl	148 <lprofLockFd>
 2dc:	cmp	w0, #0x0
 2e0:	b.eq	308 <lprofOpenFileEx+0x68>  // b.none
 2e4:	adrp	x0, 0 <stderr>
 2e8:	ldr	x0, [x0]
 2ec:	ldr	x3, [x0]
 2f0:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 2f4:	add	x2, x0, #0x0
 2f8:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 2fc:	add	x1, x0, #0x0
 300:	mov	x0, x3
 304:	bl	0 <fprintf>
 308:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 30c:	add	x1, x0, #0x0
 310:	ldr	w0, [sp, #44]
 314:	bl	0 <fdopen>
 318:	str	x0, [sp, #32]
 31c:	ldr	x0, [sp, #32]
 320:	ldp	x29, x30, [sp], #48
 324:	ret

0000000000000328 <lprofGetPathPrefix>:
 328:	stp	x29, x30, [sp, #-48]!
 32c:	mov	x29, sp
 330:	str	x0, [sp, #24]
 334:	str	x1, [sp, #16]
 338:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 33c:	add	x0, x0, #0x0
 340:	bl	0 <getenv>
 344:	str	x0, [sp, #40]
 348:	adrp	x0, 0 <__llvm_profile_recursive_mkdir>
 34c:	add	x0, x0, #0x0
 350:	bl	0 <getenv>
 354:	str	x0, [sp, #32]
 358:	ldr	x0, [sp, #16]
 35c:	str	xzr, [x0]
 360:	ldr	x0, [sp, #24]
 364:	str	wzr, [x0]
 368:	ldr	x0, [sp, #40]
 36c:	cmp	x0, #0x0
 370:	b.eq	384 <lprofGetPathPrefix+0x5c>  // b.none
 374:	ldr	x0, [sp, #40]
 378:	ldrb	w0, [x0]
 37c:	cmp	w0, #0x0
 380:	b.ne	38c <lprofGetPathPrefix+0x64>  // b.any
 384:	mov	x0, #0x0                   	// #0
 388:	b	3e8 <lprofGetPathPrefix+0xc0>
 38c:	ldr	x0, [sp, #32]
 390:	cmp	x0, #0x0
 394:	b.eq	3c8 <lprofGetPathPrefix+0xa0>  // b.none
 398:	ldr	x0, [sp, #32]
 39c:	bl	0 <atoi>
 3a0:	mov	w1, w0
 3a4:	ldr	x0, [sp, #24]
 3a8:	str	w1, [x0]
 3ac:	ldr	x0, [sp, #24]
 3b0:	ldr	w0, [x0]
 3b4:	cmp	w0, #0x0
 3b8:	b.ge	3d0 <lprofGetPathPrefix+0xa8>  // b.tcont
 3bc:	ldr	x0, [sp, #24]
 3c0:	str	wzr, [x0]
 3c4:	b	3d0 <lprofGetPathPrefix+0xa8>
 3c8:	ldr	x0, [sp, #24]
 3cc:	str	wzr, [x0]
 3d0:	ldr	x0, [sp, #40]
 3d4:	bl	0 <strlen>
 3d8:	mov	x1, x0
 3dc:	ldr	x0, [sp, #16]
 3e0:	str	x1, [x0]
 3e4:	ldr	x0, [sp, #40]
 3e8:	ldp	x29, x30, [sp], #48
 3ec:	ret

00000000000003f0 <lprofApplyPathPrefix>:
 3f0:	stp	x29, x30, [sp, #-112]!
 3f4:	mov	x29, sp
 3f8:	str	x19, [sp, #16]
 3fc:	str	x0, [sp, #72]
 400:	str	x1, [sp, #64]
 404:	str	x2, [sp, #56]
 408:	str	x3, [sp, #48]
 40c:	str	w4, [sp, #44]
 410:	ldr	x0, [sp, #64]
 414:	str	x0, [sp, #88]
 418:	str	wzr, [sp, #100]
 41c:	ldr	x0, [sp, #64]
 420:	add	x0, x0, #0x1
 424:	str	x0, [sp, #104]
 428:	b	474 <lprofApplyPathPrefix+0x84>
 42c:	ldr	x0, [sp, #104]
 430:	ldrb	w0, [x0]
 434:	cmp	w0, #0x0
 438:	b.eq	488 <lprofApplyPathPrefix+0x98>  // b.none
 43c:	ldr	x0, [sp, #104]
 440:	ldrb	w0, [x0]
 444:	cmp	w0, #0x2f
 448:	b.ne	464 <lprofApplyPathPrefix+0x74>  // b.any
 44c:	ldr	x0, [sp, #104]
 450:	str	x0, [sp, #88]
 454:	ldr	w0, [sp, #100]
 458:	add	w0, w0, #0x1
 45c:	str	w0, [sp, #100]
 460:	b	468 <lprofApplyPathPrefix+0x78>
 464:	nop
 468:	ldr	x0, [sp, #104]
 46c:	add	x0, x0, #0x1
 470:	str	x0, [sp, #104]
 474:	ldr	w1, [sp, #100]
 478:	ldr	w0, [sp, #44]
 47c:	cmp	w1, w0
 480:	b.lt	42c <lprofApplyPathPrefix+0x3c>  // b.tstop
 484:	b	48c <lprofApplyPathPrefix+0x9c>
 488:	nop
 48c:	ldr	x2, [sp, #48]
 490:	ldr	x1, [sp, #56]
 494:	ldr	x0, [sp, #72]
 498:	bl	0 <memcpy>
 49c:	ldr	x0, [sp, #48]
 4a0:	sub	x0, x0, #0x1
 4a4:	ldr	x1, [sp, #56]
 4a8:	add	x0, x1, x0
 4ac:	ldrb	w0, [x0]
 4b0:	cmp	w0, #0x2f
 4b4:	b.eq	4d4 <lprofApplyPathPrefix+0xe4>  // b.none
 4b8:	ldr	x0, [sp, #48]
 4bc:	add	x1, x0, #0x1
 4c0:	str	x1, [sp, #48]
 4c4:	ldr	x1, [sp, #72]
 4c8:	add	x0, x1, x0
 4cc:	mov	w1, #0x2f                  	// #47
 4d0:	strb	w1, [x0]
 4d4:	ldr	x1, [sp, #72]
 4d8:	ldr	x0, [sp, #48]
 4dc:	add	x19, x1, x0
 4e0:	ldr	x0, [sp, #88]
 4e4:	bl	0 <strlen>
 4e8:	add	x0, x0, #0x1
 4ec:	mov	x2, x0
 4f0:	ldr	x1, [sp, #88]
 4f4:	mov	x0, x19
 4f8:	bl	0 <memcpy>
 4fc:	nop
 500:	ldr	x19, [sp, #16]
 504:	ldp	x29, x30, [sp], #112
 508:	ret

000000000000050c <lprofFindFirstDirSeparator>:
 50c:	stp	x29, x30, [sp, #-48]!
 510:	mov	x29, sp
 514:	str	x0, [sp, #24]
 518:	mov	w1, #0x2f                  	// #47
 51c:	ldr	x0, [sp, #24]
 520:	bl	0 <strchr>
 524:	str	x0, [sp, #40]
 528:	ldr	x0, [sp, #40]
 52c:	ldp	x29, x30, [sp], #48
 530:	ret

0000000000000534 <lprofFindLastDirSeparator>:
 534:	stp	x29, x30, [sp, #-48]!
 538:	mov	x29, sp
 53c:	str	x0, [sp, #24]
 540:	mov	w1, #0x2f                  	// #47
 544:	ldr	x0, [sp, #24]
 548:	bl	0 <strrchr>
 54c:	str	x0, [sp, #40]
 550:	ldr	x0, [sp, #40]
 554:	ldp	x29, x30, [sp], #48
 558:	ret

000000000000055c <lprofSuspendSigKill>:
 55c:	stp	x29, x30, [sp, #-32]!
 560:	mov	x29, sp
 564:	str	wzr, [sp, #28]
 568:	add	x0, sp, #0x1c
 56c:	mov	x1, x0
 570:	mov	w0, #0x2                   	// #2
 574:	bl	0 <prctl>
 578:	cmp	w0, #0x0
 57c:	b.ne	598 <lprofSuspendSigKill+0x3c>  // b.any
 580:	ldr	w0, [sp, #28]
 584:	cmp	w0, #0x9
 588:	b.ne	598 <lprofSuspendSigKill+0x3c>  // b.any
 58c:	mov	w1, #0x0                   	// #0
 590:	mov	w0, #0x1                   	// #1
 594:	bl	0 <prctl>
 598:	ldr	w0, [sp, #28]
 59c:	cmp	w0, #0x9
 5a0:	cset	w0, eq  // eq = none
 5a4:	and	w0, w0, #0xff
 5a8:	ldp	x29, x30, [sp], #32
 5ac:	ret

00000000000005b0 <lprofRestoreSigKill>:
 5b0:	stp	x29, x30, [sp, #-16]!
 5b4:	mov	x29, sp
 5b8:	mov	w1, #0x9                   	// #9
 5bc:	mov	w0, #0x1                   	// #1
 5c0:	bl	0 <prctl>
 5c4:	nop
 5c8:	ldp	x29, x30, [sp], #16
 5cc:	ret
