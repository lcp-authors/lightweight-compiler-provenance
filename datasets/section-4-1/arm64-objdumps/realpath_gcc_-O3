
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//realpath_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000008e0 <_init>:
 8e0:	stp	x29, x30, [sp, #-16]!
 8e4:	mov	x29, sp
 8e8:	bl	9f0 <call_weak_fn>
 8ec:	ldp	x29, x30, [sp], #16
 8f0:	ret

Disassembly of section .plt:

0000000000000900 <.plt>:
 900:	stp	x16, x30, [sp, #-16]!
 904:	adrp	x16, 11000 <__FRAME_END__+0xfff8>
 908:	ldr	x17, [x16, #4088]
 90c:	add	x16, x16, #0xff8
 910:	br	x17
 914:	nop
 918:	nop
 91c:	nop

0000000000000920 <builtin_error@plt>:
 920:	adrp	x16, 12000 <builtin_error>
 924:	ldr	x17, [x16]
 928:	add	x16, x16, #0x0
 92c:	br	x17

0000000000000930 <__cxa_finalize@plt>:
 930:	adrp	x16, 12000 <builtin_error>
 934:	ldr	x17, [x16, #8]
 938:	add	x16, x16, #0x8
 93c:	br	x17

0000000000000940 <sh_realpath@plt>:
 940:	adrp	x16, 12000 <builtin_error>
 944:	ldr	x17, [x16, #16]
 948:	add	x16, x16, #0x10
 94c:	br	x17

0000000000000950 <builtin_help@plt>:
 950:	adrp	x16, 12000 <builtin_error>
 954:	ldr	x17, [x16, #24]
 958:	add	x16, x16, #0x18
 95c:	br	x17

0000000000000960 <builtin_usage@plt>:
 960:	adrp	x16, 12000 <builtin_error>
 964:	ldr	x17, [x16, #32]
 968:	add	x16, x16, #0x20
 96c:	br	x17

0000000000000970 <strerror@plt>:
 970:	adrp	x16, 12000 <builtin_error>
 974:	ldr	x17, [x16, #40]
 978:	add	x16, x16, #0x28
 97c:	br	x17

0000000000000980 <__gmon_start__@plt>:
 980:	adrp	x16, 12000 <builtin_error>
 984:	ldr	x17, [x16, #48]
 988:	add	x16, x16, #0x30
 98c:	br	x17

0000000000000990 <puts@plt>:
 990:	adrp	x16, 12000 <builtin_error>
 994:	ldr	x17, [x16, #56]
 998:	add	x16, x16, #0x38
 99c:	br	x17

00000000000009a0 <internal_getopt@plt>:
 9a0:	adrp	x16, 12000 <builtin_error>
 9a4:	ldr	x17, [x16, #64]
 9a8:	add	x16, x16, #0x40
 9ac:	br	x17

00000000000009b0 <reset_internal_getopt@plt>:
 9b0:	adrp	x16, 12000 <builtin_error>
 9b4:	ldr	x17, [x16, #72]
 9b8:	add	x16, x16, #0x48
 9bc:	br	x17

00000000000009c0 <printf@plt>:
 9c0:	adrp	x16, 12000 <builtin_error>
 9c4:	ldr	x17, [x16, #80]
 9c8:	add	x16, x16, #0x50
 9cc:	br	x17

00000000000009d0 <__errno_location@plt>:
 9d0:	adrp	x16, 12000 <builtin_error>
 9d4:	ldr	x17, [x16, #88]
 9d8:	add	x16, x16, #0x58
 9dc:	br	x17

00000000000009e0 <__xstat@plt>:
 9e0:	adrp	x16, 12000 <builtin_error>
 9e4:	ldr	x17, [x16, #96]
 9e8:	add	x16, x16, #0x60
 9ec:	br	x17

Disassembly of section .text:

00000000000009f0 <call_weak_fn>:
 9f0:	adrp	x0, 11000 <__FRAME_END__+0xfff8>
 9f4:	ldr	x0, [x0, #4048]
 9f8:	cbz	x0, a00 <call_weak_fn+0x10>
 9fc:	b	980 <__gmon_start__@plt>
 a00:	ret
 a04:	nop

0000000000000a08 <deregister_tm_clones>:
 a08:	adrp	x0, 12000 <builtin_error>
 a0c:	add	x0, x0, #0xe0
 a10:	adrp	x1, 12000 <builtin_error>
 a14:	add	x1, x1, #0xe0
 a18:	cmp	x1, x0
 a1c:	b.eq	a34 <deregister_tm_clones+0x2c>  // b.none
 a20:	adrp	x1, 11000 <__FRAME_END__+0xfff8>
 a24:	ldr	x1, [x1, #4032]
 a28:	cbz	x1, a34 <deregister_tm_clones+0x2c>
 a2c:	mov	x16, x1
 a30:	br	x16
 a34:	ret

0000000000000a38 <register_tm_clones>:
 a38:	adrp	x0, 12000 <builtin_error>
 a3c:	add	x0, x0, #0xe0
 a40:	adrp	x1, 12000 <builtin_error>
 a44:	add	x1, x1, #0xe0
 a48:	sub	x1, x1, x0
 a4c:	lsr	x2, x1, #63
 a50:	add	x1, x2, x1, asr #3
 a54:	cmp	xzr, x1, asr #1
 a58:	asr	x1, x1, #1
 a5c:	b.eq	a74 <register_tm_clones+0x3c>  // b.none
 a60:	adrp	x2, 11000 <__FRAME_END__+0xfff8>
 a64:	ldr	x2, [x2, #4064]
 a68:	cbz	x2, a74 <register_tm_clones+0x3c>
 a6c:	mov	x16, x2
 a70:	br	x16
 a74:	ret

0000000000000a78 <__do_global_dtors_aux>:
 a78:	stp	x29, x30, [sp, #-32]!
 a7c:	mov	x29, sp
 a80:	str	x19, [sp, #16]
 a84:	adrp	x19, 12000 <builtin_error>
 a88:	ldrb	w0, [x19, #224]
 a8c:	cbnz	w0, ab4 <__do_global_dtors_aux+0x3c>
 a90:	adrp	x0, 11000 <__FRAME_END__+0xfff8>
 a94:	ldr	x0, [x0, #4040]
 a98:	cbz	x0, aa8 <__do_global_dtors_aux+0x30>
 a9c:	adrp	x0, 12000 <builtin_error>
 aa0:	ldr	x0, [x0, #104]
 aa4:	bl	930 <__cxa_finalize@plt>
 aa8:	bl	a08 <deregister_tm_clones>
 aac:	mov	w0, #0x1                   	// #1
 ab0:	strb	w0, [x19, #224]
 ab4:	ldr	x19, [sp, #16]
 ab8:	ldp	x29, x30, [sp], #32
 abc:	ret

0000000000000ac0 <frame_dummy>:
 ac0:	b	a38 <register_tm_clones>
 ac4:	nop

0000000000000ac8 <realpath_builtin.part.0>:
 ac8:	mov	x12, #0x10e0                	// #4320
 acc:	sub	sp, sp, x12
 ad0:	stp	x29, x30, [sp]
 ad4:	mov	x29, sp
 ad8:	stp	x19, x20, [sp, #16]
 adc:	adrp	x19, 0 <_init-0x8e0>
 ae0:	mov	x20, x0
 ae4:	add	x19, x19, #0xcd0
 ae8:	stp	x21, x22, [sp, #32]
 aec:	mov	w22, #0x0                   	// #0
 af0:	mov	w21, #0x0                   	// #0
 af4:	stp	x23, x24, [sp, #48]
 af8:	mov	w23, #0x0                   	// #0
 afc:	stp	x25, x26, [sp, #64]
 b00:	stp	x27, x28, [sp, #80]
 b04:	b	b14 <realpath_builtin.part.0+0x4c>
 b08:	cmp	w0, #0x63
 b0c:	b.ne	b78 <realpath_builtin.part.0+0xb0>  // b.any
 b10:	mov	w21, #0x1                   	// #1
 b14:	mov	x1, x19
 b18:	mov	x0, x20
 b1c:	bl	9a0 <internal_getopt@plt>
 b20:	cmn	w0, #0x1
 b24:	b.eq	b8c <realpath_builtin.part.0+0xc4>  // b.none
 b28:	cmp	w0, #0x73
 b2c:	b.eq	b84 <realpath_builtin.part.0+0xbc>  // b.none
 b30:	b.gt	b6c <realpath_builtin.part.0+0xa4>
 b34:	cmn	w0, #0x63
 b38:	b.ne	b08 <realpath_builtin.part.0+0x40>  // b.any
 b3c:	mov	w20, #0x102                 	// #258
 b40:	bl	950 <builtin_help@plt>
 b44:	mov	w0, w20
 b48:	mov	x12, #0x10e0                	// #4320
 b4c:	ldp	x29, x30, [sp]
 b50:	ldp	x19, x20, [sp, #16]
 b54:	ldp	x21, x22, [sp, #32]
 b58:	ldp	x23, x24, [sp, #48]
 b5c:	ldp	x25, x26, [sp, #64]
 b60:	ldp	x27, x28, [sp, #80]
 b64:	add	sp, sp, x12
 b68:	ret
 b6c:	cmp	w0, #0x76
 b70:	mov	w22, #0x1                   	// #1
 b74:	b.eq	b14 <realpath_builtin.part.0+0x4c>  // b.none
 b78:	mov	w20, #0x102                 	// #258
 b7c:	bl	960 <builtin_usage@plt>
 b80:	b	b44 <realpath_builtin.part.0+0x7c>
 b84:	mov	w23, #0x1                   	// #1
 b88:	b	b14 <realpath_builtin.part.0+0x4c>
 b8c:	adrp	x0, 11000 <__FRAME_END__+0xfff8>
 b90:	add	x25, sp, #0xe0
 b94:	mov	w20, #0x0                   	// #0
 b98:	ldr	x0, [x0, #4056]
 b9c:	ldr	x19, [x0]
 ba0:	cbz	x19, b78 <realpath_builtin.part.0+0xb0>
 ba4:	ldr	x0, [x19, #8]
 ba8:	adrp	x26, 0 <_init-0x8e0>
 bac:	adrp	x28, 0 <_init-0x8e0>
 bb0:	add	x26, x26, #0xcf8
 bb4:	add	x28, x28, #0xcf0
 bb8:	add	x27, sp, #0x60
 bbc:	ldr	x24, [x0]
 bc0:	mov	x1, x25
 bc4:	mov	x0, x24
 bc8:	bl	940 <sh_realpath@plt>
 bcc:	cbz	x0, c04 <realpath_builtin.part.0+0x13c>
 bd0:	cbnz	w21, c10 <realpath_builtin.part.0+0x148>
 bd4:	cbnz	w23, be4 <realpath_builtin.part.0+0x11c>
 bd8:	cbnz	w22, c4c <realpath_builtin.part.0+0x184>
 bdc:	mov	x0, x25
 be0:	bl	990 <puts@plt>
 be4:	ldr	x19, [x19]
 be8:	cbz	x19, b44 <realpath_builtin.part.0+0x7c>
 bec:	ldr	x0, [x19, #8]
 bf0:	mov	x1, x25
 bf4:	ldr	x24, [x0]
 bf8:	mov	x0, x24
 bfc:	bl	940 <sh_realpath@plt>
 c00:	cbnz	x0, bd0 <realpath_builtin.part.0+0x108>
 c04:	cbz	w23, c5c <realpath_builtin.part.0+0x194>
 c08:	mov	w20, #0x1                   	// #1
 c0c:	b	be4 <realpath_builtin.part.0+0x11c>
 c10:	mov	x2, x27
 c14:	mov	x1, x25
 c18:	mov	w0, #0x0                   	// #0
 c1c:	bl	9e0 <__xstat@plt>
 c20:	tbz	w0, #31, bd4 <realpath_builtin.part.0+0x10c>
 c24:	cbnz	w23, c08 <realpath_builtin.part.0+0x140>
 c28:	bl	9d0 <__errno_location@plt>
 c2c:	ldr	w0, [x0]
 c30:	mov	w20, w21
 c34:	bl	970 <strerror@plt>
 c38:	mov	x2, x0
 c3c:	mov	x1, x24
 c40:	mov	x0, x28
 c44:	bl	920 <builtin_error@plt>
 c48:	b	be4 <realpath_builtin.part.0+0x11c>
 c4c:	mov	x1, x24
 c50:	mov	x0, x26
 c54:	bl	9c0 <printf@plt>
 c58:	b	bdc <realpath_builtin.part.0+0x114>
 c5c:	bl	9d0 <__errno_location@plt>
 c60:	ldr	w0, [x0]
 c64:	mov	w20, #0x1                   	// #1
 c68:	bl	970 <strerror@plt>
 c6c:	mov	x2, x0
 c70:	mov	x1, x24
 c74:	adrp	x0, 0 <_init-0x8e0>
 c78:	add	x0, x0, #0xcd8
 c7c:	bl	920 <builtin_error@plt>
 c80:	b	be4 <realpath_builtin.part.0+0x11c>
 c84:	nop

0000000000000c88 <realpath_builtin>:
 c88:	stp	x29, x30, [sp, #-32]!
 c8c:	mov	x29, sp
 c90:	cbz	x0, cb0 <realpath_builtin+0x28>
 c94:	str	x19, [sp, #16]
 c98:	mov	x19, x0
 c9c:	bl	9b0 <reset_internal_getopt@plt>
 ca0:	mov	x0, x19
 ca4:	ldr	x19, [sp, #16]
 ca8:	ldp	x29, x30, [sp], #32
 cac:	b	ac8 <realpath_builtin.part.0>
 cb0:	bl	960 <builtin_usage@plt>
 cb4:	mov	w0, #0x102                 	// #258
 cb8:	ldp	x29, x30, [sp], #32
 cbc:	ret

Disassembly of section .fini:

0000000000000cc0 <_fini>:
 cc0:	stp	x29, x30, [sp, #-16]!
 cc4:	mov	x29, sp
 cc8:	ldp	x29, x30, [sp], #16
 ccc:	ret
