
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcheck.so.0.0.0_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000020a8 <.init>:
    20a8:	stp	x29, x30, [sp, #-16]!
    20ac:	mov	x29, sp
    20b0:	bl	2550 <ferror@plt+0x10>
    20b4:	ldp	x29, x30, [sp], #16
    20b8:	ret

Disassembly of section .plt:

00000000000020c0 <memcpy@plt-0x20>:
    20c0:	stp	x16, x30, [sp, #-16]!
    20c4:	adrp	x16, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    20c8:	ldr	x17, [x16, #4088]
    20cc:	add	x16, x16, #0xff8
    20d0:	br	x17
    20d4:	nop
    20d8:	nop
    20dc:	nop

00000000000020e0 <memcpy@plt>:
    20e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16]
    20e8:	add	x16, x16, #0x0
    20ec:	br	x17

00000000000020f0 <memmove@plt>:
    20f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #8]
    20f8:	add	x16, x16, #0x8
    20fc:	br	x17

0000000000002100 <srunner_tap_fname@plt>:
    2100:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #16]
    2108:	add	x16, x16, #0x10
    210c:	br	x17

0000000000002110 <_exit@plt>:
    2110:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #24]
    2118:	add	x16, x16, #0x18
    211c:	br	x17

0000000000002120 <tcase_fn_start@plt>:
    2120:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #32]
    2128:	add	x16, x16, #0x20
    212c:	br	x17

0000000000002130 <strtok@plt>:
    2130:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2134:	ldr	x17, [x16, #40]
    2138:	add	x16, x16, #0x28
    213c:	br	x17

0000000000002140 <strtoul@plt>:
    2140:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2144:	ldr	x17, [x16, #48]
    2148:	add	x16, x16, #0x30
    214c:	br	x17

0000000000002150 <strlen@plt>:
    2150:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2154:	ldr	x17, [x16, #56]
    2158:	add	x16, x16, #0x38
    215c:	br	x17

0000000000002160 <exit@plt>:
    2160:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2164:	ldr	x17, [x16, #64]
    2168:	add	x16, x16, #0x40
    216c:	br	x17

0000000000002170 <_setjmp@plt>:
    2170:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2174:	ldr	x17, [x16, #72]
    2178:	add	x16, x16, #0x48
    217c:	br	x17

0000000000002180 <strtod@plt>:
    2180:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2184:	ldr	x17, [x16, #80]
    2188:	add	x16, x16, #0x50
    218c:	br	x17

0000000000002190 <srunner_has_log@plt>:
    2190:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16, #88]
    2198:	add	x16, x16, #0x58
    219c:	br	x17

00000000000021a0 <__sigsetjmp@plt>:
    21a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21a4:	ldr	x17, [x16, #96]
    21a8:	add	x16, x16, #0x60
    21ac:	br	x17

00000000000021b0 <localtime_r@plt>:
    21b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21b4:	ldr	x17, [x16, #104]
    21b8:	add	x16, x16, #0x68
    21bc:	br	x17

00000000000021c0 <__cxa_finalize@plt>:
    21c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21c4:	ldr	x17, [x16, #112]
    21c8:	add	x16, x16, #0x70
    21cc:	br	x17

00000000000021d0 <strftime@plt>:
    21d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21d4:	ldr	x17, [x16, #120]
    21d8:	add	x16, x16, #0x78
    21dc:	br	x17

00000000000021e0 <fputc@plt>:
    21e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21e4:	ldr	x17, [x16, #128]
    21e8:	add	x16, x16, #0x80
    21ec:	br	x17

00000000000021f0 <clock_gettime@plt>:
    21f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21f4:	ldr	x17, [x16, #136]
    21f8:	add	x16, x16, #0x88
    21fc:	br	x17

0000000000002200 <fork@plt>:
    2200:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2204:	ldr	x17, [x16, #144]
    2208:	add	x16, x16, #0x90
    220c:	br	x17

0000000000002210 <srunner_fork_status@plt>:
    2210:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2214:	ldr	x17, [x16, #152]
    2218:	add	x16, x16, #0x98
    221c:	br	x17

0000000000002220 <__pthread_register_cancel@plt>:
    2220:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2224:	ldr	x17, [x16, #160]
    2228:	add	x16, x16, #0xa0
    222c:	br	x17

0000000000002230 <snprintf@plt>:
    2230:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16, #168]
    2238:	add	x16, x16, #0xa8
    223c:	br	x17

0000000000002240 <srunner_ntests_failed@plt>:
    2240:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #176]
    2248:	add	x16, x16, #0xb0
    224c:	br	x17

0000000000002250 <srunner_xml_fname@plt>:
    2250:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #184]
    2258:	add	x16, x16, #0xb8
    225c:	br	x17

0000000000002260 <fclose@plt>:
    2260:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #192]
    2268:	add	x16, x16, #0xc0
    226c:	br	x17

0000000000002270 <fopen@plt>:
    2270:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2274:	ldr	x17, [x16, #200]
    2278:	add	x16, x16, #0xc8
    227c:	br	x17

0000000000002280 <timer_settime@plt>:
    2280:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2284:	ldr	x17, [x16, #208]
    2288:	add	x16, x16, #0xd0
    228c:	br	x17

0000000000002290 <malloc@plt>:
    2290:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2294:	ldr	x17, [x16, #216]
    2298:	add	x16, x16, #0xd8
    229c:	br	x17

00000000000022a0 <fdopen@plt>:
    22a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22a4:	ldr	x17, [x16, #224]
    22a8:	add	x16, x16, #0xe0
    22ac:	br	x17

00000000000022b0 <gettimeofday@plt>:
    22b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22b4:	ldr	x17, [x16, #232]
    22b8:	add	x16, x16, #0xe8
    22bc:	br	x17

00000000000022c0 <__pthread_unregister_cancel@plt>:
    22c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22c4:	ldr	x17, [x16, #240]
    22c8:	add	x16, x16, #0xf0
    22cc:	br	x17

00000000000022d0 <realloc@plt>:
    22d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22d4:	ldr	x17, [x16, #248]
    22d8:	add	x16, x16, #0xf8
    22dc:	br	x17

00000000000022e0 <rewind@plt>:
    22e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22e4:	ldr	x17, [x16, #256]
    22e8:	add	x16, x16, #0x100
    22ec:	br	x17

00000000000022f0 <__pthread_unwind_next@plt>:
    22f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22f4:	ldr	x17, [x16, #264]
    22f8:	add	x16, x16, #0x108
    22fc:	br	x17

0000000000002300 <strdup@plt>:
    2300:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2304:	ldr	x17, [x16, #272]
    2308:	add	x16, x16, #0x110
    230c:	br	x17

0000000000002310 <strerror@plt>:
    2310:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16, #280]
    2318:	add	x16, x16, #0x118
    231c:	br	x17

0000000000002320 <sigaction@plt>:
    2320:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #288]
    2328:	add	x16, x16, #0x120
    232c:	br	x17

0000000000002330 <strrchr@plt>:
    2330:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #296]
    2338:	add	x16, x16, #0x128
    233c:	br	x17

0000000000002340 <__gmon_start__@plt>:
    2340:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #304]
    2348:	add	x16, x16, #0x130
    234c:	br	x17

0000000000002350 <abort@plt>:
    2350:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #312]
    2358:	add	x16, x16, #0x138
    235c:	br	x17

0000000000002360 <srunner_run@plt>:
    2360:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #320]
    2368:	add	x16, x16, #0x140
    236c:	br	x17

0000000000002370 <timer_create@plt>:
    2370:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #328]
    2378:	add	x16, x16, #0x148
    237c:	br	x17

0000000000002380 <strcmp@plt>:
    2380:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #336]
    2388:	add	x16, x16, #0x150
    238c:	br	x17

0000000000002390 <srunner_has_tap@plt>:
    2390:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #344]
    2398:	add	x16, x16, #0x158
    239c:	br	x17

00000000000023a0 <srunner_has_xml@plt>:
    23a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #352]
    23a8:	add	x16, x16, #0x160
    23ac:	br	x17

00000000000023b0 <fread@plt>:
    23b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #360]
    23b8:	add	x16, x16, #0x168
    23bc:	br	x17

00000000000023c0 <setpgid@plt>:
    23c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #368]
    23c8:	add	x16, x16, #0x170
    23cc:	br	x17

00000000000023d0 <srunner_ntests_run@plt>:
    23d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #376]
    23d8:	add	x16, x16, #0x178
    23dc:	br	x17

00000000000023e0 <free@plt>:
    23e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #384]
    23e8:	add	x16, x16, #0x180
    23ec:	br	x17

00000000000023f0 <getpgrp@plt>:
    23f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #392]
    23f8:	add	x16, x16, #0x188
    23fc:	br	x17

0000000000002400 <timer_delete@plt>:
    2400:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #400]
    2408:	add	x16, x16, #0x190
    240c:	br	x17

0000000000002410 <suite_tcase@plt>:
    2410:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #408]
    2418:	add	x16, x16, #0x198
    241c:	br	x17

0000000000002420 <srunner_log_fname@plt>:
    2420:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #416]
    2428:	add	x16, x16, #0x1a0
    242c:	br	x17

0000000000002430 <killpg@plt>:
    2430:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #424]
    2438:	add	x16, x16, #0x1a8
    243c:	br	x17

0000000000002440 <fwrite@plt>:
    2440:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #432]
    2448:	add	x16, x16, #0x1b0
    244c:	br	x17

0000000000002450 <srunner_run_tagged@plt>:
    2450:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #440]
    2458:	add	x16, x16, #0x1b8
    245c:	br	x17

0000000000002460 <fflush@plt>:
    2460:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #448]
    2468:	add	x16, x16, #0x1c0
    246c:	br	x17

0000000000002470 <mkstemp@plt>:
    2470:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #456]
    2478:	add	x16, x16, #0x1c8
    247c:	br	x17

0000000000002480 <vsnprintf@plt>:
    2480:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #464]
    2488:	add	x16, x16, #0x1d0
    248c:	br	x17

0000000000002490 <longjmp@plt>:
    2490:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #472]
    2498:	add	x16, x16, #0x1d8
    249c:	br	x17

00000000000024a0 <strsignal@plt>:
    24a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #480]
    24a8:	add	x16, x16, #0x1e0
    24ac:	br	x17

00000000000024b0 <vfprintf@plt>:
    24b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #488]
    24b8:	add	x16, x16, #0x1e8
    24bc:	br	x17

00000000000024c0 <__assert_fail@plt>:
    24c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #496]
    24c8:	add	x16, x16, #0x1f0
    24cc:	br	x17

00000000000024d0 <__errno_location@plt>:
    24d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #504]
    24d8:	add	x16, x16, #0x1f8
    24dc:	br	x17

00000000000024e0 <getenv@plt>:
    24e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #512]
    24e8:	add	x16, x16, #0x200
    24ec:	br	x17

00000000000024f0 <pthread_mutex_lock@plt>:
    24f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #520]
    24f8:	add	x16, x16, #0x208
    24fc:	br	x17

0000000000002500 <pthread_mutex_unlock@plt>:
    2500:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #528]
    2508:	add	x16, x16, #0x210
    250c:	br	x17

0000000000002510 <waitpid@plt>:
    2510:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #536]
    2518:	add	x16, x16, #0x218
    251c:	br	x17

0000000000002520 <unlink@plt>:
    2520:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #544]
    2528:	add	x16, x16, #0x220
    252c:	br	x17

0000000000002530 <fprintf@plt>:
    2530:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #552]
    2538:	add	x16, x16, #0x228
    253c:	br	x17

0000000000002540 <ferror@plt>:
    2540:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #560]
    2548:	add	x16, x16, #0x230
    254c:	br	x17

Disassembly of section .text:

0000000000002550 <suite_create@@Base-0xd8>:
    2550:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    2554:	ldr	x0, [x0, #4032]
    2558:	cbz	x0, 2560 <ferror@plt+0x20>
    255c:	b	2340 <__gmon_start__@plt>
    2560:	ret
    2564:	nop
    2568:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    256c:	add	x0, x0, #0x250
    2570:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    2574:	add	x1, x1, #0x250
    2578:	cmp	x1, x0
    257c:	b.eq	2594 <ferror@plt+0x54>  // b.none
    2580:	adrp	x1, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    2584:	ldr	x1, [x1, #3960]
    2588:	cbz	x1, 2594 <ferror@plt+0x54>
    258c:	mov	x16, x1
    2590:	br	x16
    2594:	ret
    2598:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    259c:	add	x0, x0, #0x250
    25a0:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    25a4:	add	x1, x1, #0x250
    25a8:	sub	x1, x1, x0
    25ac:	lsr	x2, x1, #63
    25b0:	add	x1, x2, x1, asr #3
    25b4:	cmp	xzr, x1, asr #1
    25b8:	asr	x1, x1, #1
    25bc:	b.eq	25d4 <ferror@plt+0x94>  // b.none
    25c0:	adrp	x2, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    25c4:	ldr	x2, [x2, #4056]
    25c8:	cbz	x2, 25d4 <ferror@plt+0x94>
    25cc:	mov	x16, x2
    25d0:	br	x16
    25d4:	ret
    25d8:	stp	x29, x30, [sp, #-32]!
    25dc:	mov	x29, sp
    25e0:	str	x19, [sp, #16]
    25e4:	adrp	x19, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    25e8:	ldrb	w0, [x19, #592]
    25ec:	cbnz	w0, 2614 <ferror@plt+0xd4>
    25f0:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    25f4:	ldr	x0, [x0, #3968]
    25f8:	cbz	x0, 2608 <ferror@plt+0xc8>
    25fc:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    2600:	ldr	x0, [x0, #568]
    2604:	bl	21c0 <__cxa_finalize@plt>
    2608:	bl	2568 <ferror@plt+0x28>
    260c:	mov	w0, #0x1                   	// #1
    2610:	strb	w0, [x19, #592]
    2614:	ldr	x19, [sp, #16]
    2618:	ldp	x29, x30, [sp], #32
    261c:	ret
    2620:	b	2598 <ferror@plt+0x58>
    2624:	nop

0000000000002628 <suite_create@@Base>:
    2628:	stp	x29, x30, [sp, #-32]!
    262c:	mov	x29, sp
    2630:	stp	x19, x20, [sp, #16]
    2634:	mov	x19, x0
    2638:	mov	x0, #0x10                  	// #16
    263c:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    2640:	mov	x20, x0
    2644:	cmp	x19, #0x0
    2648:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    264c:	add	x0, x0, #0x8
    2650:	csel	x19, x0, x19, eq  // eq = none
    2654:	str	x19, [x20]
    2658:	bl	3338 <_ck_assert_failed@@Base+0x2b0>
    265c:	mov	x1, x0
    2660:	str	x1, [x20, #8]
    2664:	mov	x0, x20
    2668:	ldp	x19, x20, [sp, #16]
    266c:	ldp	x29, x30, [sp], #32
    2670:	ret
    2674:	nop

0000000000002678 <suite_tcase@@Base>:
    2678:	cbz	x0, 26f0 <suite_tcase@@Base+0x78>
    267c:	stp	x29, x30, [sp, #-32]!
    2680:	mov	x29, sp
    2684:	stp	x19, x20, [sp, #16]
    2688:	mov	x20, x1
    268c:	ldr	x19, [x0, #8]
    2690:	mov	x0, x19
    2694:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    2698:	b	26bc <suite_tcase@@Base+0x44>
    269c:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    26a0:	mov	x2, x0
    26a4:	mov	x0, x20
    26a8:	ldr	x1, [x2]
    26ac:	bl	2380 <strcmp@plt>
    26b0:	cbz	w0, 26e0 <suite_tcase@@Base+0x68>
    26b4:	mov	x0, x19
    26b8:	bl	3520 <_ck_assert_failed@@Base+0x498>
    26bc:	mov	x0, x19
    26c0:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    26c4:	mov	w2, w0
    26c8:	mov	x0, x19
    26cc:	cbz	w2, 269c <suite_tcase@@Base+0x24>
    26d0:	mov	w0, #0x0                   	// #0
    26d4:	ldp	x19, x20, [sp, #16]
    26d8:	ldp	x29, x30, [sp], #32
    26dc:	ret
    26e0:	mov	w0, #0x1                   	// #1
    26e4:	ldp	x19, x20, [sp, #16]
    26e8:	ldp	x29, x30, [sp], #32
    26ec:	ret
    26f0:	mov	w0, #0x0                   	// #0
    26f4:	ret

00000000000026f8 <tcase_create@@Base>:
    26f8:	stp	x29, x30, [sp, #-64]!
    26fc:	mov	x29, sp
    2700:	stp	x19, x20, [sp, #16]
    2704:	mov	x20, x0
    2708:	mov	x0, #0x48                  	// #72
    270c:	str	d8, [sp, #32]
    2710:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    2714:	mov	x19, x0
    2718:	cmp	x20, #0x0
    271c:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    2720:	add	x1, x1, #0x8
    2724:	csel	x20, x1, x20, eq  // eq = none
    2728:	fmov	d8, #4.000000000000000000e+00
    272c:	str	x20, [x19]
    2730:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    2734:	add	x0, x0, #0x918
    2738:	bl	24e0 <getenv@plt>
    273c:	cbz	x0, 2778 <tcase_create@@Base+0x80>
    2740:	mov	x20, x0
    2744:	add	x1, sp, #0x38
    2748:	str	xzr, [sp, #56]
    274c:	bl	2180 <strtod@plt>
    2750:	fcmpe	d0, #0.0
    2754:	fmov	d8, d0
    2758:	b.lt	2828 <tcase_create@@Base+0x130>  // b.tstop
    275c:	ldr	x0, [sp, #56]
    2760:	cmp	x0, x20
    2764:	b.eq	2828 <tcase_create@@Base+0x130>  // b.none
    2768:	ldrb	w0, [x0]
    276c:	fmov	d0, #4.000000000000000000e+00
    2770:	cmp	w0, #0x0
    2774:	fcsel	d8, d8, d0, eq  // eq = none
    2778:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    277c:	add	x0, x0, #0x930
    2780:	bl	24e0 <getenv@plt>
    2784:	mov	x20, x0
    2788:	cbz	x0, 27b8 <tcase_create@@Base+0xc0>
    278c:	add	x1, sp, #0x38
    2790:	str	xzr, [sp, #56]
    2794:	bl	2180 <strtod@plt>
    2798:	fcmpe	d0, #0.0
    279c:	b.lt	27b8 <tcase_create@@Base+0xc0>  // b.tstop
    27a0:	ldr	x0, [sp, #56]
    27a4:	cmp	x0, x20
    27a8:	b.eq	27b8 <tcase_create@@Base+0xc0>  // b.none
    27ac:	ldrb	w0, [x0]
    27b0:	cbnz	w0, 27b8 <tcase_create@@Base+0xc0>
    27b4:	fmul	d8, d8, d0
    27b8:	frintm	d1, d8
    27bc:	mov	x0, #0xcd6500000000        	// #225833675390976
    27c0:	movk	x0, #0x41cd, lsl #48
    27c4:	fmov	d0, x0
    27c8:	fcvtms	x0, d8
    27cc:	fsub	d8, d8, d1
    27d0:	str	x0, [x19, #8]
    27d4:	fmul	d8, d8, d0
    27d8:	fcvtzs	d8, d8
    27dc:	str	d8, [x19, #16]
    27e0:	bl	3338 <_ck_assert_failed@@Base+0x2b0>
    27e4:	str	x0, [x19, #24]
    27e8:	bl	3338 <_ck_assert_failed@@Base+0x2b0>
    27ec:	str	x0, [x19, #32]
    27f0:	bl	3338 <_ck_assert_failed@@Base+0x2b0>
    27f4:	str	x0, [x19, #48]
    27f8:	bl	3338 <_ck_assert_failed@@Base+0x2b0>
    27fc:	str	x0, [x19, #40]
    2800:	bl	3338 <_ck_assert_failed@@Base+0x2b0>
    2804:	str	x0, [x19, #56]
    2808:	bl	3338 <_ck_assert_failed@@Base+0x2b0>
    280c:	mov	x1, x0
    2810:	ldr	d8, [sp, #32]
    2814:	mov	x0, x19
    2818:	str	x1, [x19, #64]
    281c:	ldp	x19, x20, [sp, #16]
    2820:	ldp	x29, x30, [sp], #64
    2824:	ret
    2828:	fmov	d8, #4.000000000000000000e+00
    282c:	b	2778 <tcase_create@@Base+0x80>
    2830:	stp	x29, x30, [sp, #-48]!
    2834:	mov	x29, sp
    2838:	stp	x19, x20, [sp, #16]
    283c:	mov	x20, x0
    2840:	bl	3338 <_ck_assert_failed@@Base+0x2b0>
    2844:	mov	x19, x0
    2848:	cbz	x20, 289c <tcase_create@@Base+0x1a4>
    284c:	mov	x0, x20
    2850:	adrp	x20, 6000 <srunner_run_tagged@@Base+0x388>
    2854:	add	x20, x20, #0x948
    2858:	str	x21, [sp, #32]
    285c:	bl	2300 <strdup@plt>
    2860:	mov	x21, x0
    2864:	mov	x1, x20
    2868:	bl	2130 <strtok@plt>
    286c:	cbz	x0, 2890 <tcase_create@@Base+0x198>
    2870:	bl	2300 <strdup@plt>
    2874:	mov	x1, x0
    2878:	mov	x0, x19
    287c:	bl	3410 <_ck_assert_failed@@Base+0x388>
    2880:	mov	x1, x20
    2884:	mov	x0, #0x0                   	// #0
    2888:	bl	2130 <strtok@plt>
    288c:	cbnz	x0, 2870 <tcase_create@@Base+0x178>
    2890:	mov	x0, x21
    2894:	bl	23e0 <free@plt>
    2898:	ldr	x21, [sp, #32]
    289c:	mov	x0, x19
    28a0:	ldp	x19, x20, [sp, #16]
    28a4:	ldp	x29, x30, [sp], #48
    28a8:	ret
    28ac:	nop

00000000000028b0 <tcase_set_tags@@Base>:
    28b0:	stp	x29, x30, [sp, #-32]!
    28b4:	mov	x29, sp
    28b8:	stp	x19, x20, [sp, #16]
    28bc:	mov	x19, x0
    28c0:	mov	x20, x1
    28c4:	ldr	x0, [x0, #64]
    28c8:	cbz	x0, 28e0 <tcase_set_tags@@Base+0x30>
    28cc:	adrp	x1, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    28d0:	ldr	x1, [x1, #4040]
    28d4:	bl	3558 <_ck_assert_failed@@Base+0x4d0>
    28d8:	ldr	x0, [x19, #64]
    28dc:	bl	34c0 <_ck_assert_failed@@Base+0x438>
    28e0:	mov	x0, x20
    28e4:	bl	2830 <tcase_create@@Base+0x138>
    28e8:	str	x0, [x19, #64]
    28ec:	ldp	x19, x20, [sp, #16]
    28f0:	ldp	x29, x30, [sp], #32
    28f4:	ret
    28f8:	cbz	x1, 29a0 <tcase_set_tags@@Base+0xf0>
    28fc:	stp	x29, x30, [sp, #-48]!
    2900:	mov	x29, sp
    2904:	stp	x19, x20, [sp, #16]
    2908:	mov	x20, x0
    290c:	mov	x0, x1
    2910:	str	x21, [sp, #32]
    2914:	mov	x21, x1
    2918:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    291c:	mov	x0, x21
    2920:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    2924:	cbnz	w0, 298c <tcase_set_tags@@Base+0xdc>
    2928:	ldr	x0, [x20, #64]
    292c:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    2930:	b	2960 <tcase_set_tags@@Base+0xb0>
    2934:	ldr	x0, [x20, #64]
    2938:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    293c:	mov	x19, x0
    2940:	mov	x0, x21
    2944:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    2948:	mov	x1, x0
    294c:	mov	x0, x19
    2950:	bl	2380 <strcmp@plt>
    2954:	cbz	w0, 2978 <tcase_set_tags@@Base+0xc8>
    2958:	ldr	x0, [x20, #64]
    295c:	bl	3520 <_ck_assert_failed@@Base+0x498>
    2960:	ldr	x0, [x20, #64]
    2964:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    2968:	cbz	w0, 2934 <tcase_set_tags@@Base+0x84>
    296c:	mov	x0, x21
    2970:	bl	3520 <_ck_assert_failed@@Base+0x498>
    2974:	b	291c <tcase_set_tags@@Base+0x6c>
    2978:	mov	w0, #0x1                   	// #1
    297c:	ldp	x19, x20, [sp, #16]
    2980:	ldr	x21, [sp, #32]
    2984:	ldp	x29, x30, [sp], #48
    2988:	ret
    298c:	mov	w0, #0x0                   	// #0
    2990:	ldp	x19, x20, [sp, #16]
    2994:	ldr	x21, [sp, #32]
    2998:	ldp	x29, x30, [sp], #48
    299c:	ret
    29a0:	mov	w0, #0x0                   	// #0
    29a4:	ret

00000000000029a8 <suite_add_tcase@@Base>:
    29a8:	cmp	x0, #0x0
    29ac:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    29b0:	b.ne	29b8 <suite_add_tcase@@Base+0x10>  // b.any
    29b4:	ret
    29b8:	stp	x29, x30, [sp, #-32]!
    29bc:	mov	x29, sp
    29c0:	stp	x19, x20, [sp, #16]
    29c4:	mov	x19, x0
    29c8:	mov	x20, x1
    29cc:	ldr	x0, [x0, #8]
    29d0:	bl	35b0 <_ck_assert_failed@@Base+0x528>
    29d4:	cbnz	w0, 29ec <suite_add_tcase@@Base+0x44>
    29d8:	mov	x1, x20
    29dc:	ldr	x0, [x19, #8]
    29e0:	ldp	x19, x20, [sp, #16]
    29e4:	ldp	x29, x30, [sp], #32
    29e8:	b	3410 <_ck_assert_failed@@Base+0x388>
    29ec:	ldp	x19, x20, [sp, #16]
    29f0:	ldp	x29, x30, [sp], #32
    29f4:	ret

00000000000029f8 <_tcase_add_test@@Base>:
    29f8:	cmp	x0, #0x0
    29fc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    2a00:	b.ne	2a08 <_tcase_add_test@@Base+0x10>  // b.any
    2a04:	ret
    2a08:	stp	x29, x30, [sp, #-64]!
    2a0c:	mov	x29, sp
    2a10:	stp	x19, x20, [sp, #16]
    2a14:	mov	x20, x1
    2a18:	mov	x19, x0
    2a1c:	mov	x0, #0x18                  	// #24
    2a20:	stp	x21, x22, [sp, #32]
    2a24:	mov	w21, w2
    2a28:	mov	w22, w5
    2a2c:	stp	x23, x24, [sp, #48]
    2a30:	mov	w24, w3
    2a34:	mov	w23, w4
    2a38:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    2a3c:	mov	x1, x0
    2a40:	strb	w24, [x0, #20]
    2a44:	ldr	x0, [x19, #24]
    2a48:	str	x20, [x1]
    2a4c:	stp	w23, w22, [x1, #8]
    2a50:	str	w21, [x1, #16]
    2a54:	ldp	x19, x20, [sp, #16]
    2a58:	ldp	x21, x22, [sp, #32]
    2a5c:	ldp	x23, x24, [sp, #48]
    2a60:	ldp	x29, x30, [sp], #64
    2a64:	b	3410 <_ck_assert_failed@@Base+0x388>

0000000000002a68 <tcase_add_unchecked_fixture@@Base>:
    2a68:	stp	x29, x30, [sp, #-48]!
    2a6c:	mov	x29, sp
    2a70:	stp	x19, x20, [sp, #16]
    2a74:	mov	x19, x2
    2a78:	stp	x21, x22, [sp, #32]
    2a7c:	mov	x21, x0
    2a80:	cbz	x1, 2aa8 <tcase_add_unchecked_fixture@@Base+0x40>
    2a84:	mov	x20, x1
    2a88:	mov	x0, #0x10                  	// #16
    2a8c:	ldr	x22, [x21, #32]
    2a90:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    2a94:	mov	x1, x0
    2a98:	mov	x0, x22
    2a9c:	str	wzr, [x1]
    2aa0:	str	x20, [x1, #8]
    2aa4:	bl	3410 <_ck_assert_failed@@Base+0x388>
    2aa8:	cbz	x19, 2ad8 <tcase_add_unchecked_fixture@@Base+0x70>
    2aac:	mov	x0, #0x10                  	// #16
    2ab0:	ldr	x20, [x21, #40]
    2ab4:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    2ab8:	mov	x1, x0
    2abc:	ldp	x21, x22, [sp, #32]
    2ac0:	mov	x0, x20
    2ac4:	str	wzr, [x1]
    2ac8:	str	x19, [x1, #8]
    2acc:	ldp	x19, x20, [sp, #16]
    2ad0:	ldp	x29, x30, [sp], #48
    2ad4:	b	3388 <_ck_assert_failed@@Base+0x300>
    2ad8:	ldp	x19, x20, [sp, #16]
    2adc:	ldp	x21, x22, [sp, #32]
    2ae0:	ldp	x29, x30, [sp], #48
    2ae4:	ret

0000000000002ae8 <tcase_add_checked_fixture@@Base>:
    2ae8:	stp	x29, x30, [sp, #-48]!
    2aec:	mov	x29, sp
    2af0:	stp	x19, x20, [sp, #16]
    2af4:	mov	x19, x2
    2af8:	stp	x21, x22, [sp, #32]
    2afc:	mov	x21, x0
    2b00:	cbz	x1, 2b2c <tcase_add_checked_fixture@@Base+0x44>
    2b04:	mov	x20, x1
    2b08:	mov	x0, #0x10                  	// #16
    2b0c:	ldr	x22, [x21, #48]
    2b10:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    2b14:	mov	x1, x0
    2b18:	mov	w2, #0x1                   	// #1
    2b1c:	mov	x0, x22
    2b20:	str	w2, [x1]
    2b24:	str	x20, [x1, #8]
    2b28:	bl	3410 <_ck_assert_failed@@Base+0x388>
    2b2c:	cbz	x19, 2b60 <tcase_add_checked_fixture@@Base+0x78>
    2b30:	mov	x0, #0x10                  	// #16
    2b34:	ldr	x20, [x21, #56]
    2b38:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    2b3c:	mov	x1, x0
    2b40:	mov	w2, #0x1                   	// #1
    2b44:	ldp	x21, x22, [sp, #32]
    2b48:	mov	x0, x20
    2b4c:	str	w2, [x1]
    2b50:	str	x19, [x1, #8]
    2b54:	ldp	x19, x20, [sp, #16]
    2b58:	ldp	x29, x30, [sp], #48
    2b5c:	b	3388 <_ck_assert_failed@@Base+0x300>
    2b60:	ldp	x19, x20, [sp, #16]
    2b64:	ldp	x21, x22, [sp, #32]
    2b68:	ldp	x29, x30, [sp], #48
    2b6c:	ret

0000000000002b70 <tcase_set_timeout@@Base>:
    2b70:	fcmpe	d0, #0.0
    2b74:	b.ge	2b7c <tcase_set_timeout@@Base+0xc>  // b.tcont
    2b78:	ret
    2b7c:	stp	x29, x30, [sp, #-64]!
    2b80:	mov	x29, sp
    2b84:	str	d8, [sp, #32]
    2b88:	fmov	d8, d0
    2b8c:	stp	x19, x20, [sp, #16]
    2b90:	mov	x19, x0
    2b94:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    2b98:	add	x0, x0, #0x930
    2b9c:	bl	24e0 <getenv@plt>
    2ba0:	mov	x20, x0
    2ba4:	cbz	x0, 2bd4 <tcase_set_timeout@@Base+0x64>
    2ba8:	add	x1, sp, #0x38
    2bac:	str	xzr, [sp, #56]
    2bb0:	bl	2180 <strtod@plt>
    2bb4:	fcmpe	d0, #0.0
    2bb8:	b.lt	2bd4 <tcase_set_timeout@@Base+0x64>  // b.tstop
    2bbc:	ldr	x0, [sp, #56]
    2bc0:	cmp	x0, x20
    2bc4:	b.eq	2bd4 <tcase_set_timeout@@Base+0x64>  // b.none
    2bc8:	ldrb	w0, [x0]
    2bcc:	cbnz	w0, 2bd4 <tcase_set_timeout@@Base+0x64>
    2bd0:	fmul	d8, d8, d0
    2bd4:	frintm	d1, d8
    2bd8:	mov	x0, #0xcd6500000000        	// #225833675390976
    2bdc:	movk	x0, #0x41cd, lsl #48
    2be0:	fmov	d0, x0
    2be4:	fcvtms	x0, d8
    2be8:	fsub	d8, d8, d1
    2bec:	str	x0, [x19, #8]
    2bf0:	fmul	d8, d8, d0
    2bf4:	fcvtzs	d8, d8
    2bf8:	str	d8, [x19, #16]
    2bfc:	ldp	x19, x20, [sp, #16]
    2c00:	ldr	d8, [sp, #32]
    2c04:	ldp	x29, x30, [sp], #64
    2c08:	ret
    2c0c:	nop

0000000000002c10 <tcase_fn_start@@Base>:
    2c10:	stp	x29, x30, [sp, #-48]!
    2c14:	mov	x29, sp
    2c18:	stp	x19, x20, [sp, #16]
    2c1c:	mov	x20, x1
    2c20:	mov	x19, x0
    2c24:	mov	w0, #0x2                   	// #2
    2c28:	str	x21, [sp, #32]
    2c2c:	mov	w21, w2
    2c30:	bl	4420 <srunner_has_tap@@Base+0x890>
    2c34:	mov	w1, w21
    2c38:	mov	x0, x20
    2c3c:	bl	43c0 <srunner_has_tap@@Base+0x830>
    2c40:	adrp	x1, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    2c44:	ldr	x21, [sp, #32]
    2c48:	ldr	x1, [x1, #3984]
    2c4c:	str	x19, [x1]
    2c50:	ldp	x19, x20, [sp, #16]
    2c54:	ldp	x29, x30, [sp], #48
    2c58:	ret
    2c5c:	nop

0000000000002c60 <tcase_name@@Base>:
    2c60:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    2c64:	ldr	x0, [x0, #3984]
    2c68:	ldr	x0, [x0]
    2c6c:	ret

0000000000002c70 <_mark_point@@Base>:
    2c70:	b	43c0 <srunner_has_tap@@Base+0x830>
    2c74:	nop

0000000000002c78 <srunner_create@@Base>:
    2c78:	stp	x29, x30, [sp, #-32]!
    2c7c:	mov	x29, sp
    2c80:	stp	x19, x20, [sp, #16]
    2c84:	mov	x20, x0
    2c88:	mov	x0, #0x40                  	// #64
    2c8c:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    2c90:	mov	x19, x0
    2c94:	bl	3338 <_ck_assert_failed@@Base+0x2b0>
    2c98:	str	x0, [x19]
    2c9c:	cbz	x20, 2ca8 <srunner_create@@Base+0x30>
    2ca0:	mov	x1, x20
    2ca4:	bl	3410 <_ck_assert_failed@@Base+0x388>
    2ca8:	mov	x0, #0xc                   	// #12
    2cac:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    2cb0:	str	x0, [x19, #8]
    2cb4:	str	xzr, [x0]
    2cb8:	str	wzr, [x0, #8]
    2cbc:	bl	3338 <_ck_assert_failed@@Base+0x2b0>
    2cc0:	mov	x1, x0
    2cc4:	stp	x1, xzr, [x19, #16]
    2cc8:	mov	x0, x19
    2ccc:	stp	xzr, xzr, [x19, #32]
    2cd0:	str	xzr, [x19, #48]
    2cd4:	str	wzr, [x19, #56]
    2cd8:	ldp	x19, x20, [sp, #16]
    2cdc:	ldp	x29, x30, [sp], #32
    2ce0:	ret
    2ce4:	nop

0000000000002ce8 <srunner_add_suite@@Base>:
    2ce8:	cbz	x1, 2cf4 <srunner_add_suite@@Base+0xc>
    2cec:	ldr	x0, [x0]
    2cf0:	b	3410 <_ck_assert_failed@@Base+0x388>
    2cf4:	ret

0000000000002cf8 <srunner_ntests_failed@@Base>:
    2cf8:	ldr	x1, [x0, #8]
    2cfc:	ldp	w2, w0, [x1, #4]
    2d00:	add	w0, w2, w0
    2d04:	ret

0000000000002d08 <srunner_ntests_run@@Base>:
    2d08:	ldr	x0, [x0, #8]
    2d0c:	ldr	w0, [x0]
    2d10:	ret
    2d14:	nop

0000000000002d18 <srunner_failures@@Base>:
    2d18:	stp	x29, x30, [sp, #-48]!
    2d1c:	mov	x29, sp
    2d20:	stp	x19, x20, [sp, #16]
    2d24:	mov	x19, x0
    2d28:	mov	w20, #0x0                   	// #0
    2d2c:	str	x21, [sp, #32]
    2d30:	bl	2240 <srunner_ntests_failed@plt>
    2d34:	sbfiz	x0, x0, #3, #32
    2d38:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    2d3c:	ldr	x19, [x19, #16]
    2d40:	mov	x21, x0
    2d44:	mov	x0, x19
    2d48:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    2d4c:	mov	x0, x19
    2d50:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    2d54:	mov	w1, w0
    2d58:	mov	x0, x19
    2d5c:	cbnz	w1, 2d98 <srunner_failures@@Base+0x80>
    2d60:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    2d64:	mov	x1, x0
    2d68:	mov	x0, x19
    2d6c:	ldr	w2, [x1]
    2d70:	cmp	w2, #0x1
    2d74:	b.eq	2d80 <srunner_failures@@Base+0x68>  // b.none
    2d78:	str	x1, [x21, w20, sxtw #3]
    2d7c:	add	w20, w20, #0x1
    2d80:	bl	3520 <_ck_assert_failed@@Base+0x498>
    2d84:	mov	x0, x19
    2d88:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    2d8c:	mov	w1, w0
    2d90:	mov	x0, x19
    2d94:	cbz	w1, 2d60 <srunner_failures@@Base+0x48>
    2d98:	mov	x0, x21
    2d9c:	ldp	x19, x20, [sp, #16]
    2da0:	ldr	x21, [sp, #32]
    2da4:	ldp	x29, x30, [sp], #48
    2da8:	ret
    2dac:	nop

0000000000002db0 <srunner_results@@Base>:
    2db0:	stp	x29, x30, [sp, #-48]!
    2db4:	mov	x29, sp
    2db8:	stp	x19, x20, [sp, #16]
    2dbc:	mov	x19, x0
    2dc0:	str	x21, [sp, #32]
    2dc4:	bl	23d0 <srunner_ntests_run@plt>
    2dc8:	sbfiz	x0, x0, #3, #32
    2dcc:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    2dd0:	ldr	x19, [x19, #16]
    2dd4:	mov	x21, x0
    2dd8:	mov	x20, x0
    2ddc:	mov	x0, x19
    2de0:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    2de4:	b	2df8 <srunner_results@@Base+0x48>
    2de8:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    2dec:	str	x0, [x20], #8
    2df0:	mov	x0, x19
    2df4:	bl	3520 <_ck_assert_failed@@Base+0x498>
    2df8:	mov	x0, x19
    2dfc:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    2e00:	mov	w1, w0
    2e04:	mov	x0, x19
    2e08:	cbz	w1, 2de8 <srunner_results@@Base+0x38>
    2e0c:	mov	x0, x21
    2e10:	ldp	x19, x20, [sp, #16]
    2e14:	ldr	x21, [sp, #32]
    2e18:	ldp	x29, x30, [sp], #48
    2e1c:	ret
    2e20:	stp	x29, x30, [sp, #-16]!
    2e24:	mov	x0, #0x38                  	// #56
    2e28:	mov	x29, sp
    2e2c:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    2e30:	stp	xzr, xzr, [x0]
    2e34:	mov	w2, #0xffffffff            	// #-1
    2e38:	str	w2, [x0, #16]
    2e3c:	str	w2, [x0, #24]
    2e40:	stp	xzr, xzr, [x0, #32]
    2e44:	str	xzr, [x0, #48]
    2e48:	ldp	x29, x30, [sp], #16
    2e4c:	ret
    2e50:	stp	x29, x30, [sp, #-32]!
    2e54:	mov	x29, sp
    2e58:	str	x19, [sp, #16]
    2e5c:	mov	x19, x0
    2e60:	ldr	x0, [x0, #8]
    2e64:	bl	23e0 <free@plt>
    2e68:	ldr	x0, [x19, #48]
    2e6c:	bl	23e0 <free@plt>
    2e70:	mov	x0, x19
    2e74:	ldr	x19, [sp, #16]
    2e78:	ldp	x29, x30, [sp], #32
    2e7c:	b	23e0 <free@plt>

0000000000002e80 <srunner_free@@Base>:
    2e80:	cbz	x0, 3008 <srunner_free@@Base+0x188>
    2e84:	stp	x29, x30, [sp, #-64]!
    2e88:	mov	x29, sp
    2e8c:	stp	x23, x24, [sp, #48]
    2e90:	mov	x24, x0
    2e94:	ldr	x0, [x0, #8]
    2e98:	stp	x19, x20, [sp, #16]
    2e9c:	adrp	x20, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    2ea0:	stp	x21, x22, [sp, #32]
    2ea4:	bl	23e0 <free@plt>
    2ea8:	ldr	x23, [x24]
    2eac:	mov	x0, x23
    2eb0:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    2eb4:	mov	x0, x23
    2eb8:	ldr	x20, [x20, #4040]
    2ebc:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    2ec0:	cbnz	w0, 2fb0 <srunner_free@@Base+0x130>
    2ec4:	nop
    2ec8:	mov	x0, x23
    2ecc:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    2ed0:	mov	x21, x0
    2ed4:	cbz	x0, 2f9c <srunner_free@@Base+0x11c>
    2ed8:	ldr	x22, [x0, #8]
    2edc:	mov	x0, x22
    2ee0:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    2ee4:	b	2f78 <srunner_free@@Base+0xf8>
    2ee8:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    2eec:	mov	x19, x0
    2ef0:	ldr	x0, [x0, #24]
    2ef4:	mov	x1, x20
    2ef8:	bl	3558 <_ck_assert_failed@@Base+0x4d0>
    2efc:	ldr	x0, [x19, #32]
    2f00:	mov	x1, x20
    2f04:	bl	3558 <_ck_assert_failed@@Base+0x4d0>
    2f08:	ldr	x0, [x19, #48]
    2f0c:	mov	x1, x20
    2f10:	bl	3558 <_ck_assert_failed@@Base+0x4d0>
    2f14:	ldr	x0, [x19, #40]
    2f18:	mov	x1, x20
    2f1c:	bl	3558 <_ck_assert_failed@@Base+0x4d0>
    2f20:	ldr	x0, [x19, #56]
    2f24:	mov	x1, x20
    2f28:	bl	3558 <_ck_assert_failed@@Base+0x4d0>
    2f2c:	ldr	x0, [x19, #64]
    2f30:	mov	x1, x20
    2f34:	bl	3558 <_ck_assert_failed@@Base+0x4d0>
    2f38:	ldr	x0, [x19, #24]
    2f3c:	bl	34c0 <_ck_assert_failed@@Base+0x438>
    2f40:	ldr	x0, [x19, #32]
    2f44:	bl	34c0 <_ck_assert_failed@@Base+0x438>
    2f48:	ldr	x0, [x19, #48]
    2f4c:	bl	34c0 <_ck_assert_failed@@Base+0x438>
    2f50:	ldr	x0, [x19, #40]
    2f54:	bl	34c0 <_ck_assert_failed@@Base+0x438>
    2f58:	ldr	x0, [x19, #56]
    2f5c:	bl	34c0 <_ck_assert_failed@@Base+0x438>
    2f60:	ldr	x0, [x19, #64]
    2f64:	bl	34c0 <_ck_assert_failed@@Base+0x438>
    2f68:	mov	x0, x19
    2f6c:	bl	23e0 <free@plt>
    2f70:	mov	x0, x22
    2f74:	bl	3520 <_ck_assert_failed@@Base+0x498>
    2f78:	mov	x0, x22
    2f7c:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    2f80:	mov	w1, w0
    2f84:	mov	x0, x22
    2f88:	cbz	w1, 2ee8 <srunner_free@@Base+0x68>
    2f8c:	ldr	x0, [x21, #8]
    2f90:	bl	34c0 <_ck_assert_failed@@Base+0x438>
    2f94:	mov	x0, x21
    2f98:	bl	23e0 <free@plt>
    2f9c:	mov	x0, x23
    2fa0:	bl	3520 <_ck_assert_failed@@Base+0x498>
    2fa4:	mov	x0, x23
    2fa8:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    2fac:	cbz	w0, 2ec8 <srunner_free@@Base+0x48>
    2fb0:	ldr	x0, [x24]
    2fb4:	bl	34c0 <_ck_assert_failed@@Base+0x438>
    2fb8:	ldr	x19, [x24, #16]
    2fbc:	mov	x0, x19
    2fc0:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    2fc4:	b	2fdc <srunner_free@@Base+0x15c>
    2fc8:	mov	x0, x19
    2fcc:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    2fd0:	bl	2e50 <srunner_results@@Base+0xa0>
    2fd4:	mov	x0, x19
    2fd8:	bl	3520 <_ck_assert_failed@@Base+0x498>
    2fdc:	mov	x0, x19
    2fe0:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    2fe4:	cbz	w0, 2fc8 <srunner_free@@Base+0x148>
    2fe8:	ldr	x0, [x24, #16]
    2fec:	bl	34c0 <_ck_assert_failed@@Base+0x438>
    2ff0:	mov	x0, x24
    2ff4:	ldp	x19, x20, [sp, #16]
    2ff8:	ldp	x21, x22, [sp, #32]
    2ffc:	ldp	x23, x24, [sp, #48]
    3000:	ldp	x29, x30, [sp], #64
    3004:	b	23e0 <free@plt>
    3008:	ret
    300c:	nop

0000000000003010 <tr_msg@@Base>:
    3010:	ldr	x0, [x0, #48]
    3014:	ret

0000000000003018 <tr_lno@@Base>:
    3018:	ldr	w0, [x0, #16]
    301c:	ret

0000000000003020 <tr_lfile@@Base>:
    3020:	ldr	x0, [x0, #8]
    3024:	ret

0000000000003028 <tr_rtype@@Base>:
    3028:	ldr	w0, [x0]
    302c:	ret

0000000000003030 <tr_ctx@@Base>:
    3030:	ldr	w0, [x0, #4]
    3034:	ret

0000000000003038 <tr_tcname@@Base>:
    3038:	ldr	x0, [x0, #32]
    303c:	ret
    3040:	cmp	w0, #0x2
    3044:	b.hi	3054 <tr_tcname@@Base+0x1c>  // b.pmore
    3048:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    304c:	str	w0, [x1, #576]
    3050:	ret
    3054:	stp	x29, x30, [sp, #-16]!
    3058:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    305c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    3060:	mov	x29, sp
    3064:	add	x1, x1, #0x950
    3068:	add	x0, x0, #0x958
    306c:	mov	w2, #0x24a                 	// #586
    3070:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    3074:	nop
    3078:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    307c:	ldr	w0, [x0, #576]
    3080:	ret
    3084:	nop

0000000000003088 <_ck_assert_failed@@Base>:
    3088:	mov	x12, #0x2110                	// #8464
    308c:	sub	sp, sp, x12
    3090:	add	x8, sp, #0x2, lsl #12
    3094:	stp	x29, x30, [sp]
    3098:	mov	x29, sp
    309c:	str	x19, [sp, #16]
    30a0:	mov	x19, x2
    30a4:	str	q0, [x8, #96]
    30a8:	str	q1, [x8, #112]
    30ac:	str	q2, [x8, #128]
    30b0:	str	q3, [x8, #144]
    30b4:	str	q4, [x8, #160]
    30b8:	str	q5, [x8, #176]
    30bc:	str	q6, [x8, #192]
    30c0:	str	q7, [x8, #208]
    30c4:	str	x3, [sp, #8424]
    30c8:	str	x4, [sp, #8432]
    30cc:	str	x5, [sp, #8440]
    30d0:	str	x6, [sp, #8448]
    30d4:	str	x7, [sp, #8456]
    30d8:	bl	43c0 <srunner_has_tap@@Base+0x830>
    30dc:	ldr	x2, [sp, #8424]
    30e0:	mov	x4, #0x20e0                	// #8416
    30e4:	mov	w0, #0xffffff80            	// #-128
    30e8:	add	x3, sp, x4
    30ec:	mov	w1, #0xffffffe0            	// #-32
    30f0:	mov	x5, #0x2110                	// #8464
    30f4:	add	x4, sp, x5
    30f8:	stp	x4, x4, [sp, #64]
    30fc:	str	x3, [sp, #80]
    3100:	stp	w1, w0, [sp, #88]
    3104:	cbz	x2, 312c <_ck_assert_failed@@Base+0xa4>
    3108:	ldp	x6, x7, [sp, #64]
    310c:	add	x0, sp, #0x60
    3110:	ldp	x4, x5, [sp, #80]
    3114:	mov	x19, x0
    3118:	add	x3, sp, #0x20
    311c:	mov	x1, #0x2000                	// #8192
    3120:	stp	x6, x7, [sp, #32]
    3124:	stp	x4, x5, [sp, #48]
    3128:	bl	2480 <vsnprintf@plt>
    312c:	mov	x0, x19
    3130:	bl	4338 <srunner_has_tap@@Base+0x7a8>
    3134:	bl	3078 <tr_tcname@@Base+0x40>
    3138:	cmp	w0, #0x1
    313c:	b.eq	3150 <_ck_assert_failed@@Base+0xc8>  // b.none
    3140:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    3144:	mov	w1, #0x1                   	// #1
    3148:	ldr	x0, [x0, #4048]
    314c:	bl	2490 <longjmp@plt>
    3150:	bl	2110 <_exit@plt>
    3154:	nop
    3158:	stp	x29, x30, [sp, #-32]!
    315c:	mov	x1, #0x0                   	// #0
    3160:	mov	w0, #0x1                   	// #1
    3164:	mov	x29, sp
    3168:	add	x2, sp, #0x18
    316c:	bl	2370 <timer_create@plt>
    3170:	cbz	w0, 3188 <_ck_assert_failed@@Base+0x100>
    3174:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    3178:	mov	w0, #0x0                   	// #0
    317c:	str	wzr, [x1, #580]
    3180:	ldp	x29, x30, [sp], #32
    3184:	ret
    3188:	ldr	x0, [sp, #24]
    318c:	bl	2400 <timer_delete@plt>
    3190:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    3194:	mov	w2, #0x1                   	// #1
    3198:	mov	w0, w2
    319c:	str	w2, [x1, #580]
    31a0:	ldp	x29, x30, [sp], #32
    31a4:	ret
    31a8:	stp	x29, x30, [sp, #-304]!
    31ac:	mov	x29, sp
    31b0:	stp	x19, x20, [sp, #16]
    31b4:	adrp	x20, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    31b8:	mov	x19, x0
    31bc:	stp	x21, x22, [sp, #32]
    31c0:	mov	x22, x1
    31c4:	ldr	x21, [x20, #3976]
    31c8:	str	q0, [sp, #128]
    31cc:	ldr	x0, [x21]
    31d0:	str	x23, [sp, #48]
    31d4:	mov	w23, w2
    31d8:	str	q1, [sp, #144]
    31dc:	str	q2, [sp, #160]
    31e0:	str	q3, [sp, #176]
    31e4:	str	q4, [sp, #192]
    31e8:	str	q5, [sp, #208]
    31ec:	str	q6, [sp, #224]
    31f0:	str	q7, [sp, #240]
    31f4:	stp	x3, x4, [sp, #264]
    31f8:	stp	x5, x6, [sp, #280]
    31fc:	str	x7, [sp, #296]
    3200:	bl	2460 <fflush@plt>
    3204:	ldr	x0, [x21]
    3208:	mov	w3, w23
    320c:	mov	x2, x22
    3210:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    3214:	add	x1, x1, #0x978
    3218:	bl	2530 <fprintf@plt>
    321c:	add	x1, sp, #0x130
    3220:	stp	x1, x1, [sp, #96]
    3224:	add	x2, sp, #0x100
    3228:	mov	w4, #0xffffffd8            	// #-40
    322c:	mov	w3, #0xffffff80            	// #-128
    3230:	str	x2, [sp, #112]
    3234:	mov	x1, x19
    3238:	stp	w4, w3, [sp, #120]
    323c:	add	x2, sp, #0x40
    3240:	ldp	x4, x5, [sp, #96]
    3244:	ldr	x0, [x21]
    3248:	stp	x4, x5, [sp, #64]
    324c:	ldp	x4, x5, [sp, #112]
    3250:	stp	x4, x5, [sp, #80]
    3254:	bl	24b0 <vfprintf@plt>
    3258:	ldrb	w0, [x19]
    325c:	cbz	w0, 3278 <_ck_assert_failed@@Base+0x1f0>
    3260:	mov	x0, x19
    3264:	bl	2150 <strlen@plt>
    3268:	add	x19, x19, x0
    326c:	ldurb	w0, [x19, #-1]
    3270:	cmp	w0, #0x3a
    3274:	b.eq	3290 <_ck_assert_failed@@Base+0x208>  // b.none
    3278:	ldr	x20, [x20, #3976]
    327c:	mov	w0, #0xa                   	// #10
    3280:	ldr	x1, [x20]
    3284:	bl	21e0 <fputc@plt>
    3288:	mov	w0, #0x2                   	// #2
    328c:	bl	2160 <exit@plt>
    3290:	bl	24d0 <__errno_location@plt>
    3294:	ldr	w0, [x0]
    3298:	ldr	x19, [x21]
    329c:	bl	2310 <strerror@plt>
    32a0:	mov	x2, x0
    32a4:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    32a8:	mov	x0, x19
    32ac:	add	x1, x1, #0x980
    32b0:	bl	2530 <fprintf@plt>
    32b4:	b	3278 <_ck_assert_failed@@Base+0x1f0>
    32b8:	stp	x29, x30, [sp, #-32]!
    32bc:	mov	x29, sp
    32c0:	str	x19, [sp, #16]
    32c4:	mov	x19, x0
    32c8:	bl	2290 <malloc@plt>
    32cc:	cbz	x0, 32dc <_ck_assert_failed@@Base+0x254>
    32d0:	ldr	x19, [sp, #16]
    32d4:	ldp	x29, x30, [sp], #32
    32d8:	ret
    32dc:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    32e0:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    32e4:	mov	x3, x19
    32e8:	add	x1, x1, #0x988
    32ec:	add	x0, x0, #0x998
    32f0:	mov	w2, #0x3e                  	// #62
    32f4:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    32f8:	stp	x29, x30, [sp, #-32]!
    32fc:	mov	x29, sp
    3300:	str	x19, [sp, #16]
    3304:	mov	x19, x1
    3308:	bl	22d0 <realloc@plt>
    330c:	cbz	x0, 331c <_ck_assert_failed@@Base+0x294>
    3310:	ldr	x19, [sp, #16]
    3314:	ldp	x29, x30, [sp], #32
    3318:	ret
    331c:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    3320:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    3324:	mov	x3, x19
    3328:	add	x1, x1, #0x988
    332c:	add	x0, x0, #0x9b8
    3330:	mov	w2, #0x48                  	// #72
    3334:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    3338:	stp	x29, x30, [sp, #-32]!
    333c:	mov	x0, #0x18                  	// #24
    3340:	mov	x29, sp
    3344:	str	x19, [sp, #16]
    3348:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    334c:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    3350:	mov	x19, x0
    3354:	mov	x0, #0x8                   	// #8
    3358:	ldr	d0, [x1, #2520]
    335c:	str	d0, [x19]
    3360:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    3364:	mvni	v0.2s, #0x0
    3368:	mov	x1, x0
    336c:	str	x1, [x19, #16]
    3370:	mov	x0, x19
    3374:	str	d0, [x19, #8]
    3378:	ldr	x19, [sp, #16]
    337c:	ldp	x29, x30, [sp], #32
    3380:	ret
    3384:	nop
    3388:	cbz	x0, 340c <_ck_assert_failed@@Base+0x384>
    338c:	stp	x29, x30, [sp, #-32]!
    3390:	mov	x29, sp
    3394:	ldp	w2, w3, [x0]
    3398:	stp	x19, x20, [sp, #16]
    339c:	mov	x20, x1
    33a0:	mov	x19, x0
    33a4:	cmp	w2, w3
    33a8:	ldr	x1, [x0, #16]
    33ac:	b.cs	33e8 <_ck_assert_failed@@Base+0x360>  // b.hs, b.nlast
    33b0:	ubfiz	x2, x2, #3, #32
    33b4:	add	x0, x1, #0x8
    33b8:	bl	20f0 <memmove@plt>
    33bc:	ldr	x2, [x19, #16]
    33c0:	ldr	w1, [x19]
    33c4:	ldr	w0, [x19, #12]
    33c8:	add	w1, w1, #0x1
    33cc:	str	w1, [x19]
    33d0:	add	w0, w0, #0x1
    33d4:	stp	wzr, w0, [x19, #8]
    33d8:	str	x20, [x2]
    33dc:	ldp	x19, x20, [sp, #16]
    33e0:	ldp	x29, x30, [sp], #32
    33e4:	ret
    33e8:	lsl	w3, w3, #1
    33ec:	str	w3, [x19, #4]
    33f0:	mov	x0, x1
    33f4:	lsl	x1, x3, #3
    33f8:	bl	32f8 <_ck_assert_failed@@Base+0x270>
    33fc:	mov	x1, x0
    3400:	ldr	w2, [x19]
    3404:	str	x0, [x19, #16]
    3408:	b	33b0 <_ck_assert_failed@@Base+0x328>
    340c:	ret
    3410:	cbz	x0, 347c <_ck_assert_failed@@Base+0x3f4>
    3414:	stp	x29, x30, [sp, #-32]!
    3418:	mov	x29, sp
    341c:	stp	x19, x20, [sp, #16]
    3420:	mov	x20, x1
    3424:	mov	x19, x0
    3428:	ldp	w1, w2, [x0]
    342c:	ldr	x0, [x0, #16]
    3430:	cmp	w1, w2
    3434:	b.cs	3460 <_ck_assert_failed@@Base+0x3d8>  // b.hs, b.nlast
    3438:	ldr	w2, [x19, #12]
    343c:	add	w1, w1, #0x1
    3440:	str	w1, [x19]
    3444:	add	w1, w2, #0x1
    3448:	dup	v0.2s, w1
    344c:	str	d0, [x19, #8]
    3450:	str	x20, [x0, w1, sxtw #3]
    3454:	ldp	x19, x20, [sp, #16]
    3458:	ldp	x29, x30, [sp], #32
    345c:	ret
    3460:	lsl	w2, w2, #1
    3464:	str	w2, [x19, #4]
    3468:	lsl	x1, x2, #3
    346c:	bl	32f8 <_ck_assert_failed@@Base+0x270>
    3470:	str	x0, [x19, #16]
    3474:	ldr	w1, [x19]
    3478:	b	3438 <_ck_assert_failed@@Base+0x3b0>
    347c:	ret
    3480:	ldr	w1, [x0, #8]
    3484:	cmn	w1, #0x1
    3488:	b.eq	349c <_ck_assert_failed@@Base+0x414>  // b.none
    348c:	ldr	w0, [x0, #12]
    3490:	cmp	w1, w0
    3494:	cset	w0, gt
    3498:	ret
    349c:	mov	w0, #0x1                   	// #1
    34a0:	ret
    34a4:	nop
    34a8:	ldr	w1, [x0, #8]
    34ac:	cmn	w1, #0x1
    34b0:	b.eq	34b8 <_ck_assert_failed@@Base+0x430>  // b.none
    34b4:	str	wzr, [x0, #8]
    34b8:	ret
    34bc:	nop
    34c0:	cbz	x0, 34ec <_ck_assert_failed@@Base+0x464>
    34c4:	stp	x29, x30, [sp, #-32]!
    34c8:	mov	x29, sp
    34cc:	str	x19, [sp, #16]
    34d0:	mov	x19, x0
    34d4:	ldr	x0, [x0, #16]
    34d8:	bl	23e0 <free@plt>
    34dc:	mov	x0, x19
    34e0:	ldr	x19, [sp, #16]
    34e4:	ldp	x29, x30, [sp], #32
    34e8:	b	23e0 <free@plt>
    34ec:	ret
    34f0:	cbz	x0, 3518 <_ck_assert_failed@@Base+0x490>
    34f4:	ldr	w1, [x0, #8]
    34f8:	cmn	w1, #0x1
    34fc:	b.eq	3518 <_ck_assert_failed@@Base+0x490>  // b.none
    3500:	ldr	w2, [x0, #12]
    3504:	cmp	w1, w2
    3508:	b.gt	3518 <_ck_assert_failed@@Base+0x490>
    350c:	ldr	x0, [x0, #16]
    3510:	ldr	x0, [x0, w1, sxtw #3]
    3514:	ret
    3518:	mov	x0, #0x0                   	// #0
    351c:	ret
    3520:	cbz	x0, 3554 <_ck_assert_failed@@Base+0x4cc>
    3524:	stp	x29, x30, [sp, #-32]!
    3528:	mov	x29, sp
    352c:	str	x19, [sp, #16]
    3530:	mov	x19, x0
    3534:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    3538:	cbnz	w0, 3548 <_ck_assert_failed@@Base+0x4c0>
    353c:	ldr	w0, [x19, #8]
    3540:	add	w0, w0, #0x1
    3544:	str	w0, [x19, #8]
    3548:	ldr	x19, [sp, #16]
    354c:	ldp	x29, x30, [sp], #32
    3550:	ret
    3554:	ret
    3558:	cmp	x0, #0x0
    355c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    3560:	b.ne	3568 <_ck_assert_failed@@Base+0x4e0>  // b.any
    3564:	ret
    3568:	stp	x29, x30, [sp, #-32]!
    356c:	mov	x29, sp
    3570:	stp	x19, x20, [sp, #16]
    3574:	mov	x19, x0
    3578:	mov	x20, x1
    357c:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    3580:	b	3598 <_ck_assert_failed@@Base+0x510>
    3584:	mov	x0, x19
    3588:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    358c:	blr	x20
    3590:	mov	x0, x19
    3594:	bl	3520 <_ck_assert_failed@@Base+0x498>
    3598:	mov	x0, x19
    359c:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    35a0:	cbz	w0, 3584 <_ck_assert_failed@@Base+0x4fc>
    35a4:	ldp	x19, x20, [sp, #16]
    35a8:	ldp	x29, x30, [sp], #32
    35ac:	ret
    35b0:	stp	x29, x30, [sp, #-32]!
    35b4:	mov	x29, sp
    35b8:	stp	x19, x20, [sp, #16]
    35bc:	mov	x20, x1
    35c0:	mov	x19, x0
    35c4:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    35c8:	b	35e0 <_ck_assert_failed@@Base+0x558>
    35cc:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    35d0:	cmp	x20, x0
    35d4:	b.eq	3604 <_ck_assert_failed@@Base+0x57c>  // b.none
    35d8:	mov	x0, x19
    35dc:	bl	3520 <_ck_assert_failed@@Base+0x498>
    35e0:	mov	x0, x19
    35e4:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    35e8:	mov	w2, w0
    35ec:	mov	x0, x19
    35f0:	cbz	w2, 35cc <_ck_assert_failed@@Base+0x544>
    35f4:	mov	w0, #0x0                   	// #0
    35f8:	ldp	x19, x20, [sp, #16]
    35fc:	ldp	x29, x30, [sp], #32
    3600:	ret
    3604:	mov	w0, #0x1                   	// #1
    3608:	ldp	x19, x20, [sp, #16]
    360c:	ldp	x29, x30, [sp], #32
    3610:	ret
    3614:	nop
    3618:	stp	x29, x30, [sp, #-160]!
    361c:	mov	x29, sp
    3620:	stp	x21, x22, [sp, #32]
    3624:	adrp	x21, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    3628:	mov	x22, x3
    362c:	ldrb	w0, [x21, #624]
    3630:	stp	x19, x20, [sp, #16]
    3634:	mov	x20, x1
    3638:	mov	w19, w4
    363c:	cbz	w0, 36f0 <_ck_assert_failed@@Base+0x668>
    3640:	cmp	w19, #0x3
    3644:	b.eq	3754 <_ck_assert_failed@@Base+0x6cc>  // b.none
    3648:	b.ls	3680 <_ck_assert_failed@@Base+0x5f8>  // b.plast
    364c:	cmp	w19, #0x6
    3650:	b.eq	3670 <_ck_assert_failed@@Base+0x5e8>  // b.none
    3654:	b.ls	36b8 <_ck_assert_failed@@Base+0x630>  // b.plast
    3658:	cmp	w19, #0x7
    365c:	b.ne	3840 <_ck_assert_failed@@Base+0x7b8>  // b.any
    3660:	mov	x1, x22
    3664:	mov	x0, x20
    3668:	mov	w2, #0x3                   	// #3
    366c:	bl	52f0 <check_set_max_msg_size@@Base+0x710>
    3670:	ldp	x19, x20, [sp, #16]
    3674:	ldp	x21, x22, [sp, #32]
    3678:	ldp	x29, x30, [sp], #160
    367c:	ret
    3680:	cmp	w19, #0x1
    3684:	b.eq	37ac <_ck_assert_failed@@Base+0x724>  // b.none
    3688:	cmp	w19, #0x2
    368c:	b.eq	3670 <_ck_assert_failed@@Base+0x5e8>  // b.none
    3690:	cbnz	w19, 3840 <_ck_assert_failed@@Base+0x7b8>
    3694:	add	x2, x21, #0x270
    3698:	mov	x0, x20
    369c:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    36a0:	add	x1, x1, #0x9f8
    36a4:	bl	2530 <fprintf@plt>
    36a8:	ldp	x19, x20, [sp, #16]
    36ac:	ldp	x21, x22, [sp, #32]
    36b0:	ldp	x29, x30, [sp], #160
    36b4:	ret
    36b8:	cmp	w19, #0x4
    36bc:	b.eq	3670 <_ck_assert_failed@@Base+0x5e8>  // b.none
    36c0:	cmp	w19, #0x5
    36c4:	b.ne	3840 <_ck_assert_failed@@Base+0x7b8>  // b.any
    36c8:	mov	x3, x20
    36cc:	mov	x2, #0xb                   	// #11
    36d0:	mov	x1, #0x1                   	// #1
    36d4:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    36d8:	add	x0, x0, #0xb18
    36dc:	bl	2440 <fwrite@plt>
    36e0:	ldp	x19, x20, [sp, #16]
    36e4:	ldp	x21, x22, [sp, #32]
    36e8:	ldp	x29, x30, [sp], #160
    36ec:	ret
    36f0:	mov	x1, #0x0                   	// #0
    36f4:	stp	x23, x24, [sp, #48]
    36f8:	add	x23, sp, #0x50
    36fc:	mov	x0, x23
    3700:	str	x25, [sp, #64]
    3704:	bl	22b0 <gettimeofday@plt>
    3708:	add	x24, x21, #0x270
    370c:	bl	3158 <_ck_assert_failed@@Base+0xd0>
    3710:	add	x25, sp, #0x60
    3714:	add	x1, x24, #0x18
    3718:	bl	21f0 <clock_gettime@plt>
    371c:	mov	x0, x23
    3720:	mov	x1, x25
    3724:	bl	21b0 <localtime_r@plt>
    3728:	cbz	x0, 37a0 <_ck_assert_failed@@Base+0x718>
    372c:	mov	x3, x25
    3730:	mov	x0, x24
    3734:	adrp	x2, 6000 <srunner_run_tagged@@Base+0x388>
    3738:	mov	x1, #0x14                  	// #20
    373c:	add	x2, x2, #0x9e0
    3740:	bl	21d0 <strftime@plt>
    3744:	cmp	w19, #0x3
    3748:	ldp	x23, x24, [sp, #48]
    374c:	ldr	x25, [sp, #64]
    3750:	b.ne	3648 <_ck_assert_failed@@Base+0x5c0>  // b.any
    3754:	mov	x3, x20
    3758:	mov	x2, #0x15                  	// #21
    375c:	mov	x1, #0x1                   	// #1
    3760:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    3764:	add	x0, x0, #0xaf0
    3768:	bl	2440 <fwrite@plt>
    376c:	ldr	x1, [x22]
    3770:	mov	x0, x20
    3774:	bl	5188 <check_set_max_msg_size@@Base+0x5a8>
    3778:	mov	x3, x20
    377c:	mov	x2, #0x9                   	// #9
    3780:	mov	x1, #0x1                   	// #1
    3784:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    3788:	add	x0, x0, #0xb08
    378c:	bl	2440 <fwrite@plt>
    3790:	ldp	x19, x20, [sp, #16]
    3794:	ldp	x21, x22, [sp, #32]
    3798:	ldp	x29, x30, [sp], #160
    379c:	ret
    37a0:	ldp	x23, x24, [sp, #48]
    37a4:	ldr	x25, [sp, #64]
    37a8:	b	3640 <_ck_assert_failed@@Base+0x5b8>
    37ac:	stp	xzr, xzr, [sp, #96]
    37b0:	bl	3158 <_ck_assert_failed@@Base+0xd0>
    37b4:	add	x1, sp, #0x60
    37b8:	bl	21f0 <clock_gettime@plt>
    37bc:	add	x21, x21, #0x270
    37c0:	ldp	x1, x2, [sp, #96]
    37c4:	mov	x6, #0xf7cf                	// #63439
    37c8:	movk	x6, #0xe353, lsl #16
    37cc:	mov	x3, #0x4240                	// #16960
    37d0:	movk	x6, #0x9ba5, lsl #32
    37d4:	movk	x3, #0xf, lsl #16
    37d8:	movk	x6, #0x20c4, lsl #48
    37dc:	mov	x5, #0x34db                	// #13531
    37e0:	ldp	x4, x7, [x21, #24]
    37e4:	smulh	x8, x2, x6
    37e8:	movk	x5, #0xd7b6, lsl #16
    37ec:	mov	x0, x20
    37f0:	movk	x5, #0xde82, lsl #32
    37f4:	asr	x8, x8, #7
    37f8:	movk	x5, #0x431b, lsl #48
    37fc:	sub	x8, x8, x2, asr #63
    3800:	sub	x2, x1, x4
    3804:	smulh	x4, x7, x6
    3808:	asr	x7, x7, #63
    380c:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    3810:	add	x1, x1, #0xac0
    3814:	madd	x2, x2, x3, x8
    3818:	sub	x4, x7, x4, asr #7
    381c:	add	x4, x2, x4
    3820:	umulh	x2, x4, x5
    3824:	lsr	x2, x2, #18
    3828:	msub	x3, x2, x3, x4
    382c:	bl	2530 <fprintf@plt>
    3830:	ldp	x19, x20, [sp, #16]
    3834:	ldp	x21, x22, [sp, #32]
    3838:	ldp	x29, x30, [sp], #160
    383c:	ret
    3840:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    3844:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    3848:	add	x1, x1, #0xb28
    384c:	add	x0, x0, #0xb38
    3850:	mov	w2, #0x14f                 	// #335
    3854:	stp	x23, x24, [sp, #48]
    3858:	str	x25, [sp, #64]
    385c:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    3860:	mov	x6, x0
    3864:	cmp	w4, #0x3
    3868:	mov	x0, x1
    386c:	b.eq	38cc <_ck_assert_failed@@Base+0x844>  // b.none
    3870:	b.hi	3884 <_ck_assert_failed@@Base+0x7fc>  // b.pmore
    3874:	cmp	w4, #0x2
    3878:	b.ne	38c8 <_ck_assert_failed@@Base+0x840>  // b.any
    387c:	cbnz	w2, 38e0 <_ck_assert_failed@@Base+0x858>
    3880:	ret
    3884:	cmp	w4, #0x4
    3888:	b.ne	3898 <_ck_assert_failed@@Base+0x810>  // b.any
    388c:	cbz	w2, 3880 <_ck_assert_failed@@Base+0x7f8>
    3890:	mov	x1, x6
    3894:	b	5688 <check_set_max_msg_size@@Base+0xaa8>
    3898:	sub	w4, w4, #0x5
    389c:	cmp	w4, #0x2
    38a0:	b.ls	38c4 <_ck_assert_failed@@Base+0x83c>  // b.plast
    38a4:	stp	x29, x30, [sp, #-16]!
    38a8:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    38ac:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    38b0:	mov	x29, sp
    38b4:	add	x1, x1, #0xb28
    38b8:	add	x0, x0, #0xb80
    38bc:	mov	w2, #0xdc                  	// #220
    38c0:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    38c4:	ret
    38c8:	ret
    38cc:	cbz	w2, 3880 <_ck_assert_failed@@Base+0x7f8>
    38d0:	ldr	x2, [x3]
    38d4:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    38d8:	add	x1, x1, #0xb78
    38dc:	b	2530 <fprintf@plt>
    38e0:	mov	x3, x1
    38e4:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    38e8:	mov	x2, #0x11                  	// #17
    38ec:	add	x0, x0, #0xb60
    38f0:	mov	x1, #0x1                   	// #1
    38f4:	b	2440 <fwrite@plt>
    38f8:	stp	x29, x30, [sp, #-32]!
    38fc:	cmp	w4, #0x6
    3900:	mov	x29, sp
    3904:	str	x19, [sp, #16]
    3908:	mov	x19, x1
    390c:	b.hi	3944 <_ck_assert_failed@@Base+0x8bc>  // b.pmore
    3910:	cmp	w4, #0x1
    3914:	b.hi	39b4 <_ck_assert_failed@@Base+0x92c>  // b.pmore
    3918:	cbz	w4, 39ac <_ck_assert_failed@@Base+0x924>
    391c:	adrp	x2, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    3920:	mov	x0, x19
    3924:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    3928:	add	x1, x1, #0xbb8
    392c:	ldr	w2, [x2, #664]
    3930:	bl	2530 <fprintf@plt>
    3934:	mov	x0, x19
    3938:	ldr	x19, [sp, #16]
    393c:	ldp	x29, x30, [sp], #32
    3940:	b	2460 <fflush@plt>
    3944:	cmp	w4, #0x7
    3948:	b.ne	39c0 <_ck_assert_failed@@Base+0x938>  // b.any
    394c:	adrp	x8, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    3950:	add	x8, x8, #0x270
    3954:	ldp	x5, x6, [x3, #32]
    3958:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    395c:	ldr	w1, [x3]
    3960:	add	x0, x0, #0xbb0
    3964:	ldr	w9, [x8, #40]
    3968:	adrp	x2, 6000 <srunner_run_tagged@@Base+0x388>
    396c:	ldr	x4, [x3, #8]
    3970:	cmp	w1, #0x1
    3974:	ldr	x7, [x3, #48]
    3978:	add	w9, w9, #0x1
    397c:	add	x2, x2, #0xba8
    3980:	mov	w3, w9
    3984:	csel	x2, x2, x0, eq  // eq = none
    3988:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    398c:	mov	x0, x19
    3990:	add	x1, x1, #0xbc0
    3994:	str	w9, [x8, #40]
    3998:	bl	2530 <fprintf@plt>
    399c:	mov	x0, x19
    39a0:	ldr	x19, [sp, #16]
    39a4:	ldp	x29, x30, [sp], #32
    39a8:	b	2460 <fflush@plt>
    39ac:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    39b0:	str	wzr, [x0, #664]
    39b4:	ldr	x19, [sp, #16]
    39b8:	ldp	x29, x30, [sp], #32
    39bc:	ret
    39c0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    39c4:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    39c8:	add	x1, x1, #0xb28
    39cc:	add	x0, x0, #0xbd8
    39d0:	mov	w2, #0x17c                 	// #380
    39d4:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    39d8:	stp	x29, x30, [sp, #-32]!
    39dc:	cmp	w4, #0x4
    39e0:	mov	x29, sp
    39e4:	stp	x19, x20, [sp, #16]
    39e8:	mov	x19, x1
    39ec:	b.eq	3a40 <_ck_assert_failed@@Base+0x9b8>  // b.none
    39f0:	b.hi	3a18 <_ck_assert_failed@@Base+0x990>  // b.pmore
    39f4:	cmp	w4, #0x3
    39f8:	b.ne	3a74 <_ck_assert_failed@@Base+0x9ec>  // b.any
    39fc:	ldp	x19, x20, [sp, #16]
    3a00:	mov	x0, x1
    3a04:	ldp	x29, x30, [sp], #32
    3a08:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    3a0c:	ldr	x2, [x3]
    3a10:	add	x1, x1, #0xc00
    3a14:	b	2530 <fprintf@plt>
    3a18:	cmp	w4, #0x6
    3a1c:	b.ls	3a74 <_ck_assert_failed@@Base+0x9ec>  // b.plast
    3a20:	cmp	w4, #0x7
    3a24:	b.ne	3a80 <_ck_assert_failed@@Base+0x9f8>  // b.any
    3a28:	mov	x0, x19
    3a2c:	mov	x1, x3
    3a30:	ldp	x19, x20, [sp, #16]
    3a34:	mov	w2, #0x3                   	// #3
    3a38:	ldp	x29, x30, [sp], #32
    3a3c:	b	5608 <check_set_max_msg_size@@Base+0xa28>
    3a40:	mov	x20, x0
    3a44:	mov	x3, x1
    3a48:	mov	x2, #0x1c                  	// #28
    3a4c:	mov	x1, #0x1                   	// #1
    3a50:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    3a54:	add	x0, x0, #0xc18
    3a58:	bl	2440 <fwrite@plt>
    3a5c:	mov	x1, x20
    3a60:	mov	x0, x19
    3a64:	ldp	x19, x20, [sp, #16]
    3a68:	mov	w2, #0x1                   	// #1
    3a6c:	ldp	x29, x30, [sp], #32
    3a70:	b	5688 <check_set_max_msg_size@@Base+0xaa8>
    3a74:	ldp	x19, x20, [sp, #16]
    3a78:	ldp	x29, x30, [sp], #32
    3a7c:	ret
    3a80:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    3a84:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    3a88:	add	x1, x1, #0xb28
    3a8c:	add	x0, x0, #0xc38
    3a90:	mov	w2, #0x103                 	// #259
    3a94:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    3a98:	stp	x29, x30, [sp, #-16]!
    3a9c:	mov	x3, x0
    3aa0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    3aa4:	mov	x29, sp
    3aa8:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    3aac:	add	x1, x1, #0xb28
    3ab0:	add	x0, x0, #0xc60
    3ab4:	mov	w2, #0x1cd                 	// #461
    3ab8:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    3abc:	nop

0000000000003ac0 <srunner_set_log@@Base>:
    3ac0:	ldr	x2, [x0, #24]
    3ac4:	cbz	x2, 3acc <srunner_set_log@@Base+0xc>
    3ac8:	ret
    3acc:	str	x1, [x0, #24]
    3ad0:	ret
    3ad4:	nop

0000000000003ad8 <srunner_log_fname@@Base>:
    3ad8:	ldr	x0, [x0, #24]
    3adc:	cbz	x0, 3ae4 <srunner_log_fname@@Base+0xc>
    3ae0:	ret
    3ae4:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    3ae8:	add	x0, x0, #0xc90
    3aec:	b	24e0 <getenv@plt>

0000000000003af0 <srunner_has_log@@Base>:
    3af0:	stp	x29, x30, [sp, #-16]!
    3af4:	mov	x29, sp
    3af8:	bl	2420 <srunner_log_fname@plt>
    3afc:	cmp	x0, #0x0
    3b00:	cset	w0, ne  // ne = any
    3b04:	ldp	x29, x30, [sp], #16
    3b08:	ret
    3b0c:	nop

0000000000003b10 <srunner_set_xml@@Base>:
    3b10:	ldr	x2, [x0, #32]
    3b14:	cbz	x2, 3b1c <srunner_set_xml@@Base+0xc>
    3b18:	ret
    3b1c:	str	x1, [x0, #32]
    3b20:	ret
    3b24:	nop

0000000000003b28 <srunner_xml_fname@@Base>:
    3b28:	ldr	x0, [x0, #32]
    3b2c:	cbz	x0, 3b34 <srunner_xml_fname@@Base+0xc>
    3b30:	ret
    3b34:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    3b38:	add	x0, x0, #0xca8
    3b3c:	b	24e0 <getenv@plt>

0000000000003b40 <srunner_has_xml@@Base>:
    3b40:	stp	x29, x30, [sp, #-16]!
    3b44:	mov	x29, sp
    3b48:	bl	2250 <srunner_xml_fname@plt>
    3b4c:	cmp	x0, #0x0
    3b50:	cset	w0, ne  // ne = any
    3b54:	ldp	x29, x30, [sp], #16
    3b58:	ret
    3b5c:	nop

0000000000003b60 <srunner_set_tap@@Base>:
    3b60:	ldr	x2, [x0, #40]
    3b64:	cbz	x2, 3b6c <srunner_set_tap@@Base+0xc>
    3b68:	ret
    3b6c:	str	x1, [x0, #40]
    3b70:	ret
    3b74:	nop

0000000000003b78 <srunner_tap_fname@@Base>:
    3b78:	ldr	x0, [x0, #40]
    3b7c:	cbz	x0, 3b84 <srunner_tap_fname@@Base+0xc>
    3b80:	ret
    3b84:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    3b88:	add	x0, x0, #0xcc0
    3b8c:	b	24e0 <getenv@plt>

0000000000003b90 <srunner_has_tap@@Base>:
    3b90:	stp	x29, x30, [sp, #-16]!
    3b94:	mov	x29, sp
    3b98:	bl	2100 <srunner_tap_fname@plt>
    3b9c:	cmp	x0, #0x0
    3ba0:	cset	w0, ne  // ne = any
    3ba4:	ldp	x29, x30, [sp], #16
    3ba8:	ret
    3bac:	nop
    3bb0:	stp	x29, x30, [sp, #-64]!
    3bb4:	mov	x29, sp
    3bb8:	stp	x19, x20, [sp, #16]
    3bbc:	mov	w20, w4
    3bc0:	stp	x21, x22, [sp, #32]
    3bc4:	mov	w21, w2
    3bc8:	mov	x22, x3
    3bcc:	stp	x23, x24, [sp, #48]
    3bd0:	mov	x24, x0
    3bd4:	mov	x23, x1
    3bd8:	mov	x0, #0x18                  	// #24
    3bdc:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    3be0:	cmp	w20, #0x4
    3be4:	mov	x19, x0
    3be8:	b.eq	3c10 <srunner_has_tap@@Base+0x80>  // b.none
    3bec:	ldr	x0, [x24, #48]
    3bf0:	stp	x23, x22, [x19]
    3bf4:	mov	x1, x19
    3bf8:	stp	w21, w20, [x19, #16]
    3bfc:	ldp	x19, x20, [sp, #16]
    3c00:	ldp	x21, x22, [sp, #32]
    3c04:	ldp	x23, x24, [sp, #48]
    3c08:	ldp	x29, x30, [sp], #64
    3c0c:	b	3410 <_ck_assert_failed@@Base+0x388>
    3c10:	bl	5570 <check_set_max_msg_size@@Base+0x990>
    3c14:	mov	w20, w0
    3c18:	b	3bec <srunner_has_tap@@Base+0x5c>
    3c1c:	nop
    3c20:	stp	x29, x30, [sp, #-48]!
    3c24:	mov	x29, sp
    3c28:	stp	x19, x20, [sp, #16]
    3c2c:	ldr	x20, [x0, #48]
    3c30:	str	x21, [sp, #32]
    3c34:	mov	x21, x0
    3c38:	mov	x0, x20
    3c3c:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    3c40:	b	3c7c <srunner_has_tap@@Base+0xec>
    3c44:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    3c48:	mov	x19, x0
    3c4c:	ldr	x0, [x0]
    3c50:	bl	2460 <fflush@plt>
    3c54:	ldp	x1, x5, [x19]
    3c58:	mov	x0, x21
    3c5c:	ldr	w2, [x19, #20]
    3c60:	mov	w4, #0x2                   	// #2
    3c64:	mov	x3, #0x0                   	// #0
    3c68:	blr	x5
    3c6c:	ldr	x0, [x19]
    3c70:	bl	2460 <fflush@plt>
    3c74:	mov	x0, x20
    3c78:	bl	3520 <_ck_assert_failed@@Base+0x498>
    3c7c:	mov	x0, x20
    3c80:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    3c84:	mov	w1, w0
    3c88:	mov	x0, x20
    3c8c:	cbz	w1, 3c44 <srunner_has_tap@@Base+0xb4>
    3c90:	ldp	x19, x20, [sp, #16]
    3c94:	ldr	x21, [sp, #32]
    3c98:	ldp	x29, x30, [sp], #48
    3c9c:	ret
    3ca0:	stp	x29, x30, [sp, #-48]!
    3ca4:	mov	x29, sp
    3ca8:	stp	x19, x20, [sp, #16]
    3cac:	ldr	x20, [x0, #48]
    3cb0:	str	x21, [sp, #32]
    3cb4:	mov	x21, x0
    3cb8:	mov	x0, x20
    3cbc:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    3cc0:	b	3cfc <srunner_has_tap@@Base+0x16c>
    3cc4:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    3cc8:	mov	x19, x0
    3ccc:	ldr	x0, [x0]
    3cd0:	bl	2460 <fflush@plt>
    3cd4:	ldp	x1, x5, [x19]
    3cd8:	mov	x0, x21
    3cdc:	ldr	w2, [x19, #20]
    3ce0:	mov	w4, #0x4                   	// #4
    3ce4:	mov	x3, #0x0                   	// #0
    3ce8:	blr	x5
    3cec:	ldr	x0, [x19]
    3cf0:	bl	2460 <fflush@plt>
    3cf4:	mov	x0, x20
    3cf8:	bl	3520 <_ck_assert_failed@@Base+0x498>
    3cfc:	mov	x0, x20
    3d00:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    3d04:	mov	w1, w0
    3d08:	mov	x0, x20
    3d0c:	cbz	w1, 3cc4 <srunner_has_tap@@Base+0x134>
    3d10:	ldp	x19, x20, [sp, #16]
    3d14:	ldr	x21, [sp, #32]
    3d18:	ldp	x29, x30, [sp], #48
    3d1c:	ret
    3d20:	stp	x29, x30, [sp, #-48]!
    3d24:	mov	x29, sp
    3d28:	stp	x19, x20, [sp, #16]
    3d2c:	ldr	x20, [x0, #48]
    3d30:	stp	x21, x22, [sp, #32]
    3d34:	mov	x21, x0
    3d38:	mov	x22, x1
    3d3c:	mov	x0, x20
    3d40:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    3d44:	b	3d80 <srunner_has_tap@@Base+0x1f0>
    3d48:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    3d4c:	mov	x19, x0
    3d50:	ldr	x0, [x0]
    3d54:	bl	2460 <fflush@plt>
    3d58:	ldp	x1, x5, [x19]
    3d5c:	mov	x3, x22
    3d60:	ldr	w2, [x19, #20]
    3d64:	mov	x0, x21
    3d68:	mov	w4, #0x3                   	// #3
    3d6c:	blr	x5
    3d70:	ldr	x0, [x19]
    3d74:	bl	2460 <fflush@plt>
    3d78:	mov	x0, x20
    3d7c:	bl	3520 <_ck_assert_failed@@Base+0x498>
    3d80:	mov	x0, x20
    3d84:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    3d88:	mov	w1, w0
    3d8c:	mov	x0, x20
    3d90:	cbz	w1, 3d48 <srunner_has_tap@@Base+0x1b8>
    3d94:	ldp	x19, x20, [sp, #16]
    3d98:	ldp	x21, x22, [sp, #32]
    3d9c:	ldp	x29, x30, [sp], #48
    3da0:	ret
    3da4:	nop
    3da8:	stp	x29, x30, [sp, #-48]!
    3dac:	mov	x29, sp
    3db0:	stp	x19, x20, [sp, #16]
    3db4:	ldr	x20, [x0, #48]
    3db8:	stp	x21, x22, [sp, #32]
    3dbc:	mov	x21, x0
    3dc0:	mov	x22, x1
    3dc4:	mov	x0, x20
    3dc8:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    3dcc:	b	3e08 <srunner_has_tap@@Base+0x278>
    3dd0:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    3dd4:	mov	x19, x0
    3dd8:	ldr	x0, [x0]
    3ddc:	bl	2460 <fflush@plt>
    3de0:	ldp	x1, x5, [x19]
    3de4:	mov	x3, x22
    3de8:	ldr	w2, [x19, #20]
    3dec:	mov	x0, x21
    3df0:	mov	w4, #0x5                   	// #5
    3df4:	blr	x5
    3df8:	ldr	x0, [x19]
    3dfc:	bl	2460 <fflush@plt>
    3e00:	mov	x0, x20
    3e04:	bl	3520 <_ck_assert_failed@@Base+0x498>
    3e08:	mov	x0, x20
    3e0c:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    3e10:	mov	w1, w0
    3e14:	mov	x0, x20
    3e18:	cbz	w1, 3dd0 <srunner_has_tap@@Base+0x240>
    3e1c:	ldp	x19, x20, [sp, #16]
    3e20:	ldp	x21, x22, [sp, #32]
    3e24:	ldp	x29, x30, [sp], #48
    3e28:	ret
    3e2c:	nop
    3e30:	stp	x29, x30, [sp, #-160]!
    3e34:	mov	x29, sp
    3e38:	ldr	x4, [x2]
    3e3c:	stp	x21, x22, [sp, #32]
    3e40:	mov	x21, x0
    3e44:	ldr	x3, [x1]
    3e48:	add	x22, sp, #0x38
    3e4c:	ldr	x4, [x4]
    3e50:	mov	x0, x22
    3e54:	mov	x1, #0x63                  	// #99
    3e58:	adrp	x2, 6000 <srunner_run_tagged@@Base+0x388>
    3e5c:	add	x2, x2, #0xcd8
    3e60:	stp	x19, x20, [sp, #16]
    3e64:	bl	2230 <snprintf@plt>
    3e68:	ldr	x20, [x21, #48]
    3e6c:	mov	x0, x20
    3e70:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    3e74:	b	3eb0 <srunner_has_tap@@Base+0x320>
    3e78:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    3e7c:	mov	x19, x0
    3e80:	ldr	x0, [x0]
    3e84:	bl	2460 <fflush@plt>
    3e88:	ldp	x1, x5, [x19]
    3e8c:	mov	x3, x22
    3e90:	ldr	w2, [x19, #20]
    3e94:	mov	x0, x21
    3e98:	mov	w4, #0x6                   	// #6
    3e9c:	blr	x5
    3ea0:	ldr	x0, [x19]
    3ea4:	bl	2460 <fflush@plt>
    3ea8:	mov	x0, x20
    3eac:	bl	3520 <_ck_assert_failed@@Base+0x498>
    3eb0:	mov	x0, x20
    3eb4:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    3eb8:	mov	w1, w0
    3ebc:	mov	x0, x20
    3ec0:	cbz	w1, 3e78 <srunner_has_tap@@Base+0x2e8>
    3ec4:	ldp	x19, x20, [sp, #16]
    3ec8:	ldp	x21, x22, [sp, #32]
    3ecc:	ldp	x29, x30, [sp], #160
    3ed0:	ret
    3ed4:	nop
    3ed8:	stp	x29, x30, [sp, #-48]!
    3edc:	mov	x29, sp
    3ee0:	stp	x19, x20, [sp, #16]
    3ee4:	ldr	x20, [x0, #48]
    3ee8:	stp	x21, x22, [sp, #32]
    3eec:	mov	x21, x0
    3ef0:	mov	x22, x1
    3ef4:	mov	x0, x20
    3ef8:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    3efc:	b	3f38 <srunner_has_tap@@Base+0x3a8>
    3f00:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    3f04:	mov	x19, x0
    3f08:	ldr	x0, [x0]
    3f0c:	bl	2460 <fflush@plt>
    3f10:	ldp	x1, x5, [x19]
    3f14:	mov	x3, x22
    3f18:	ldr	w2, [x19, #20]
    3f1c:	mov	x0, x21
    3f20:	mov	w4, #0x7                   	// #7
    3f24:	blr	x5
    3f28:	ldr	x0, [x19]
    3f2c:	bl	2460 <fflush@plt>
    3f30:	mov	x0, x20
    3f34:	bl	3520 <_ck_assert_failed@@Base+0x498>
    3f38:	mov	x0, x20
    3f3c:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    3f40:	mov	w1, w0
    3f44:	mov	x0, x20
    3f48:	cbz	w1, 3f00 <srunner_has_tap@@Base+0x370>
    3f4c:	ldp	x19, x20, [sp, #16]
    3f50:	ldp	x21, x22, [sp, #32]
    3f54:	ldp	x29, x30, [sp], #48
    3f58:	ret
    3f5c:	nop
    3f60:	stp	x29, x30, [sp, #-32]!
    3f64:	mov	x29, sp
    3f68:	str	x19, [sp, #16]
    3f6c:	mov	x19, x0
    3f70:	bl	2190 <srunner_has_log@plt>
    3f74:	cbz	w0, 3fb0 <srunner_has_tap@@Base+0x420>
    3f78:	mov	x0, x19
    3f7c:	bl	2420 <srunner_log_fname@plt>
    3f80:	mov	x19, x0
    3f84:	ldrb	w0, [x0]
    3f88:	cmp	w0, #0x2d
    3f8c:	b.ne	3fc0 <srunner_has_tap@@Base+0x430>  // b.any
    3f90:	ldrb	w0, [x19, #1]
    3f94:	cbnz	w0, 3fc0 <srunner_has_tap@@Base+0x430>
    3f98:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    3f9c:	ldr	x0, [x0, #4008]
    3fa0:	ldr	x0, [x0]
    3fa4:	ldr	x19, [sp, #16]
    3fa8:	ldp	x29, x30, [sp], #32
    3fac:	ret
    3fb0:	mov	x0, #0x0                   	// #0
    3fb4:	ldr	x19, [sp, #16]
    3fb8:	ldp	x29, x30, [sp], #32
    3fbc:	ret
    3fc0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    3fc4:	mov	x0, x19
    3fc8:	add	x1, x1, #0xce0
    3fcc:	bl	2270 <fopen@plt>
    3fd0:	cbnz	x0, 3fa4 <srunner_has_tap@@Base+0x414>
    3fd4:	mov	x0, x19
    3fd8:	bl	3a98 <_ck_assert_failed@@Base+0xa10>
    3fdc:	nop
    3fe0:	stp	x29, x30, [sp, #-32]!
    3fe4:	mov	x29, sp
    3fe8:	str	x19, [sp, #16]
    3fec:	mov	x19, x0
    3ff0:	bl	23a0 <srunner_has_xml@plt>
    3ff4:	cbz	w0, 4030 <srunner_has_tap@@Base+0x4a0>
    3ff8:	mov	x0, x19
    3ffc:	bl	2250 <srunner_xml_fname@plt>
    4000:	mov	x19, x0
    4004:	ldrb	w0, [x0]
    4008:	cmp	w0, #0x2d
    400c:	b.ne	4040 <srunner_has_tap@@Base+0x4b0>  // b.any
    4010:	ldrb	w0, [x19, #1]
    4014:	cbnz	w0, 4040 <srunner_has_tap@@Base+0x4b0>
    4018:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    401c:	ldr	x0, [x0, #4008]
    4020:	ldr	x0, [x0]
    4024:	ldr	x19, [sp, #16]
    4028:	ldp	x29, x30, [sp], #32
    402c:	ret
    4030:	mov	x0, #0x0                   	// #0
    4034:	ldr	x19, [sp, #16]
    4038:	ldp	x29, x30, [sp], #32
    403c:	ret
    4040:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    4044:	mov	x0, x19
    4048:	add	x1, x1, #0xce0
    404c:	bl	2270 <fopen@plt>
    4050:	cbnz	x0, 4024 <srunner_has_tap@@Base+0x494>
    4054:	mov	x0, x19
    4058:	bl	3a98 <_ck_assert_failed@@Base+0xa10>
    405c:	nop
    4060:	stp	x29, x30, [sp, #-32]!
    4064:	mov	x29, sp
    4068:	str	x19, [sp, #16]
    406c:	mov	x19, x0
    4070:	bl	2390 <srunner_has_tap@plt>
    4074:	cbz	w0, 40b0 <srunner_has_tap@@Base+0x520>
    4078:	mov	x0, x19
    407c:	bl	2100 <srunner_tap_fname@plt>
    4080:	mov	x19, x0
    4084:	ldrb	w0, [x0]
    4088:	cmp	w0, #0x2d
    408c:	b.ne	40c0 <srunner_has_tap@@Base+0x530>  // b.any
    4090:	ldrb	w0, [x19, #1]
    4094:	cbnz	w0, 40c0 <srunner_has_tap@@Base+0x530>
    4098:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    409c:	ldr	x0, [x0, #4008]
    40a0:	ldr	x0, [x0]
    40a4:	ldr	x19, [sp, #16]
    40a8:	ldp	x29, x30, [sp], #32
    40ac:	ret
    40b0:	mov	x0, #0x0                   	// #0
    40b4:	ldr	x19, [sp, #16]
    40b8:	ldp	x29, x30, [sp], #32
    40bc:	ret
    40c0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    40c4:	mov	x0, x19
    40c8:	add	x1, x1, #0xce0
    40cc:	bl	2270 <fopen@plt>
    40d0:	cbnz	x0, 40a4 <srunner_has_tap@@Base+0x514>
    40d4:	mov	x0, x19
    40d8:	bl	3a98 <_ck_assert_failed@@Base+0xa10>
    40dc:	nop
    40e0:	stp	x29, x30, [sp, #-48]!
    40e4:	mov	x29, sp
    40e8:	stp	x21, x22, [sp, #32]
    40ec:	adrp	x21, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    40f0:	stp	x19, x20, [sp, #16]
    40f4:	mov	x19, x0
    40f8:	mov	w20, w1
    40fc:	bl	3338 <_ck_assert_failed@@Base+0x2b0>
    4100:	ldr	x22, [x21, #4008]
    4104:	adrp	x3, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    4108:	mov	w4, w20
    410c:	str	x0, [x19, #48]
    4110:	ldr	x3, [x3, #4024]
    4114:	mov	w2, #0x0                   	// #0
    4118:	ldr	x1, [x22]
    411c:	mov	x0, x19
    4120:	bl	3bb0 <srunner_has_tap@@Base+0x20>
    4124:	mov	x0, x19
    4128:	bl	3f60 <srunner_has_tap@@Base+0x3d0>
    412c:	cbz	x0, 4154 <srunner_has_tap@@Base+0x5c4>
    4130:	mov	x1, x0
    4134:	adrp	x3, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    4138:	ldr	x0, [x22]
    413c:	mov	w4, w20
    4140:	ldr	x3, [x3, #4016]
    4144:	cmp	x0, x1
    4148:	cset	w2, ne  // ne = any
    414c:	mov	x0, x19
    4150:	bl	3bb0 <srunner_has_tap@@Base+0x20>
    4154:	mov	x0, x19
    4158:	bl	3fe0 <srunner_has_tap@@Base+0x450>
    415c:	mov	x1, x0
    4160:	cbz	x0, 4188 <srunner_has_tap@@Base+0x5f8>
    4164:	ldr	x2, [x21, #4008]
    4168:	adrp	x3, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    416c:	mov	w4, w20
    4170:	mov	x0, x19
    4174:	ldr	x3, [x3, #3992]
    4178:	ldr	x2, [x2]
    417c:	cmp	x2, x1
    4180:	cset	w2, ne  // ne = any
    4184:	bl	3bb0 <srunner_has_tap@@Base+0x20>
    4188:	mov	x0, x19
    418c:	bl	4060 <srunner_has_tap@@Base+0x4d0>
    4190:	mov	x1, x0
    4194:	cbz	x0, 41bc <srunner_has_tap@@Base+0x62c>
    4198:	ldr	x21, [x21, #4008]
    419c:	adrp	x3, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    41a0:	mov	w4, w20
    41a4:	mov	x0, x19
    41a8:	ldr	x3, [x3, #4000]
    41ac:	ldr	x2, [x21]
    41b0:	cmp	x2, x1
    41b4:	cset	w2, ne  // ne = any
    41b8:	bl	3bb0 <srunner_has_tap@@Base+0x20>
    41bc:	ldr	x21, [x19, #48]
    41c0:	mov	x0, x21
    41c4:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    41c8:	b	4204 <srunner_has_tap@@Base+0x674>
    41cc:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    41d0:	mov	x20, x0
    41d4:	ldr	x0, [x0]
    41d8:	bl	2460 <fflush@plt>
    41dc:	ldp	x1, x5, [x20]
    41e0:	mov	x0, x19
    41e4:	ldr	w2, [x20, #20]
    41e8:	mov	w4, #0x0                   	// #0
    41ec:	mov	x3, #0x0                   	// #0
    41f0:	blr	x5
    41f4:	ldr	x0, [x20]
    41f8:	bl	2460 <fflush@plt>
    41fc:	mov	x0, x21
    4200:	bl	3520 <_ck_assert_failed@@Base+0x498>
    4204:	mov	x0, x21
    4208:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    420c:	mov	w1, w0
    4210:	mov	x0, x21
    4214:	cbz	w1, 41cc <srunner_has_tap@@Base+0x63c>
    4218:	ldp	x19, x20, [sp, #16]
    421c:	ldp	x21, x22, [sp, #32]
    4220:	ldp	x29, x30, [sp], #48
    4224:	ret
    4228:	stp	x29, x30, [sp, #-48]!
    422c:	mov	x29, sp
    4230:	stp	x19, x20, [sp, #16]
    4234:	ldr	x20, [x0, #48]
    4238:	str	x21, [sp, #32]
    423c:	mov	x21, x0
    4240:	mov	x0, x20
    4244:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    4248:	b	4288 <srunner_has_tap@@Base+0x6f8>
    424c:	mov	x0, x20
    4250:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    4254:	mov	x19, x0
    4258:	ldr	x0, [x0]
    425c:	bl	2460 <fflush@plt>
    4260:	ldp	x1, x5, [x19]
    4264:	mov	x0, x21
    4268:	ldr	w2, [x19, #20]
    426c:	mov	w4, #0x1                   	// #1
    4270:	mov	x3, #0x0                   	// #0
    4274:	blr	x5
    4278:	ldr	x0, [x19]
    427c:	bl	2460 <fflush@plt>
    4280:	mov	x0, x20
    4284:	bl	3520 <_ck_assert_failed@@Base+0x498>
    4288:	mov	x0, x20
    428c:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    4290:	cbz	w0, 424c <srunner_has_tap@@Base+0x6bc>
    4294:	ldr	x20, [x21, #48]
    4298:	mov	x0, x20
    429c:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    42a0:	b	42d4 <srunner_has_tap@@Base+0x744>
    42a4:	mov	x0, x20
    42a8:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    42ac:	ldr	w1, [x0, #16]
    42b0:	mov	x19, x0
    42b4:	cbz	w1, 42c4 <srunner_has_tap@@Base+0x734>
    42b8:	ldr	x0, [x0]
    42bc:	bl	2260 <fclose@plt>
    42c0:	cbnz	w0, 42fc <srunner_has_tap@@Base+0x76c>
    42c4:	mov	x0, x19
    42c8:	bl	23e0 <free@plt>
    42cc:	mov	x0, x20
    42d0:	bl	3520 <_ck_assert_failed@@Base+0x498>
    42d4:	mov	x0, x20
    42d8:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    42dc:	cbz	w0, 42a4 <srunner_has_tap@@Base+0x714>
    42e0:	mov	x0, x20
    42e4:	bl	34c0 <_ck_assert_failed@@Base+0x438>
    42e8:	ldp	x19, x20, [sp, #16]
    42ec:	str	xzr, [x21, #48]
    42f0:	ldr	x21, [sp, #32]
    42f4:	ldp	x29, x30, [sp], #48
    42f8:	ret
    42fc:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    4300:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    4304:	add	x1, x1, #0xb28
    4308:	add	x0, x0, #0xce8
    430c:	mov	w2, #0x224                 	// #548
    4310:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    4314:	nop
    4318:	stp	x29, x30, [sp, #-16]!
    431c:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    4320:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    4324:	mov	x29, sp
    4328:	add	x1, x1, #0xd18
    432c:	add	x0, x0, #0xd28
    4330:	mov	w2, #0x50                  	// #80
    4334:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    4338:	stp	x29, x30, [sp, #-32]!
    433c:	mov	x29, sp
    4340:	bl	2300 <strdup@plt>
    4344:	str	x0, [sp, #24]
    4348:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    434c:	ldr	x0, [x1, #672]
    4350:	cbz	x0, 4370 <srunner_has_tap@@Base+0x7e0>
    4354:	add	x2, sp, #0x18
    4358:	mov	w1, #0x1                   	// #1
    435c:	bl	4cd0 <check_set_max_msg_size@@Base+0xf0>
    4360:	ldr	x0, [sp, #24]
    4364:	bl	23e0 <free@plt>
    4368:	ldp	x29, x30, [sp], #32
    436c:	ret
    4370:	add	x2, x1, #0x2a0
    4374:	ldr	x0, [x2, #8]
    4378:	cbnz	x0, 4354 <srunner_has_tap@@Base+0x7c4>
    437c:	bl	4318 <srunner_has_tap@@Base+0x788>
    4380:	stp	x29, x30, [sp, #-32]!
    4384:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    4388:	mov	x29, sp
    438c:	str	w0, [sp, #24]
    4390:	ldr	x0, [x1, #672]
    4394:	cbz	x0, 43ac <srunner_has_tap@@Base+0x81c>
    4398:	add	x2, sp, #0x18
    439c:	mov	w1, #0x3                   	// #3
    43a0:	bl	4cd0 <check_set_max_msg_size@@Base+0xf0>
    43a4:	ldp	x29, x30, [sp], #32
    43a8:	ret
    43ac:	add	x2, x1, #0x2a0
    43b0:	ldr	x0, [x2, #8]
    43b4:	cbnz	x0, 4398 <srunner_has_tap@@Base+0x808>
    43b8:	bl	4318 <srunner_has_tap@@Base+0x788>
    43bc:	nop
    43c0:	stp	x29, x30, [sp, #-48]!
    43c4:	mov	x29, sp
    43c8:	str	x19, [sp, #16]
    43cc:	mov	w19, w1
    43d0:	bl	2300 <strdup@plt>
    43d4:	str	w19, [sp, #32]
    43d8:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    43dc:	add	x2, x1, #0x2a0
    43e0:	str	x0, [sp, #40]
    43e4:	ldr	x1, [x1, #672]
    43e8:	cbz	x1, 4410 <srunner_has_tap@@Base+0x880>
    43ec:	add	x2, sp, #0x20
    43f0:	mov	x0, x1
    43f4:	mov	w1, #0x2                   	// #2
    43f8:	bl	4cd0 <check_set_max_msg_size@@Base+0xf0>
    43fc:	ldr	x0, [sp, #40]
    4400:	bl	23e0 <free@plt>
    4404:	ldr	x19, [sp, #16]
    4408:	ldp	x29, x30, [sp], #48
    440c:	ret
    4410:	ldr	x1, [x2, #8]
    4414:	cbnz	x1, 43ec <srunner_has_tap@@Base+0x85c>
    4418:	bl	4318 <srunner_has_tap@@Base+0x788>
    441c:	nop
    4420:	stp	x29, x30, [sp, #-32]!
    4424:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    4428:	mov	x29, sp
    442c:	str	w0, [sp, #24]
    4430:	ldr	x0, [x1, #672]
    4434:	cbz	x0, 444c <srunner_has_tap@@Base+0x8bc>
    4438:	add	x2, sp, #0x18
    443c:	mov	w1, #0x0                   	// #0
    4440:	bl	4cd0 <check_set_max_msg_size@@Base+0xf0>
    4444:	ldp	x29, x30, [sp], #32
    4448:	ret
    444c:	add	x2, x1, #0x2a0
    4450:	ldr	x0, [x2, #8]
    4454:	cbnz	x0, 4438 <srunner_has_tap@@Base+0x8a8>
    4458:	bl	4318 <srunner_has_tap@@Base+0x788>
    445c:	nop
    4460:	stp	x29, x30, [sp, #-32]!
    4464:	mov	x29, sp
    4468:	stp	x19, x20, [sp, #16]
    446c:	adrp	x20, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    4470:	add	x19, x20, #0x2a0
    4474:	ldr	x0, [x20, #672]
    4478:	cbz	x0, 44a8 <srunner_has_tap@@Base+0x918>
    447c:	bl	2260 <fclose@plt>
    4480:	str	xzr, [x20, #672]
    4484:	ldr	x0, [x19, #16]
    4488:	cbz	x0, 449c <srunner_has_tap@@Base+0x90c>
    448c:	bl	2520 <unlink@plt>
    4490:	ldr	x0, [x19, #16]
    4494:	bl	23e0 <free@plt>
    4498:	str	xzr, [x19, #16]
    449c:	ldp	x19, x20, [sp, #16]
    44a0:	ldp	x29, x30, [sp], #32
    44a4:	ret
    44a8:	ldr	x0, [x19, #8]
    44ac:	cbz	x0, 44dc <srunner_has_tap@@Base+0x94c>
    44b0:	bl	2260 <fclose@plt>
    44b4:	str	xzr, [x19, #8]
    44b8:	ldr	x0, [x19, #24]
    44bc:	cbz	x0, 449c <srunner_has_tap@@Base+0x90c>
    44c0:	bl	2520 <unlink@plt>
    44c4:	ldr	x0, [x19, #24]
    44c8:	bl	23e0 <free@plt>
    44cc:	str	xzr, [x19, #24]
    44d0:	ldp	x19, x20, [sp, #16]
    44d4:	ldp	x29, x30, [sp], #32
    44d8:	ret
    44dc:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    44e0:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    44e4:	add	x1, x1, #0xd18
    44e8:	add	x0, x0, #0xda0
    44ec:	mov	w2, #0x16a                 	// #362
    44f0:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    44f4:	nop
    44f8:	stp	x29, x30, [sp, #-32]!
    44fc:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    4500:	mov	x29, sp
    4504:	stp	x19, x20, [sp, #16]
    4508:	mov	x19, x0
    450c:	add	x0, x1, #0xdc0
    4510:	mov	x20, #0x0                   	// #0
    4514:	str	xzr, [x19]
    4518:	bl	24e0 <getenv@plt>
    451c:	cmp	x0, #0x0
    4520:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    4524:	add	x1, x1, #0xdb8
    4528:	csel	x1, x1, x0, eq  // eq = none
    452c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    4530:	add	x0, x0, #0xdd0
    4534:	bl	66c0 <check_waitpid_and_exit@@Base+0x70>
    4538:	str	x0, [x19]
    453c:	bl	2470 <mkstemp@plt>
    4540:	tbnz	w0, #31, 4574 <srunner_has_tap@@Base+0x9e4>
    4544:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    4548:	add	x1, x1, #0xdc8
    454c:	bl	22a0 <fdopen@plt>
    4550:	mov	x20, x0
    4554:	ldr	x0, [x19]
    4558:	bl	2520 <unlink@plt>
    455c:	cmp	x20, #0x0
    4560:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    4564:	b.ne	4574 <srunner_has_tap@@Base+0x9e4>  // b.any
    4568:	ldr	x0, [x19]
    456c:	bl	23e0 <free@plt>
    4570:	str	xzr, [x19]
    4574:	mov	x0, x20
    4578:	ldp	x19, x20, [sp, #16]
    457c:	ldp	x29, x30, [sp], #32
    4580:	ret
    4584:	nop
    4588:	stp	x29, x30, [sp, #-48]!
    458c:	mov	x29, sp
    4590:	stp	x19, x20, [sp, #16]
    4594:	adrp	x20, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    4598:	ldr	x19, [x20, #672]
    459c:	stp	x21, x22, [sp, #32]
    45a0:	mov	w21, w0
    45a4:	cbz	x19, 4718 <srunner_has_tap@@Base+0xb88>
    45a8:	mov	x0, x19
    45ac:	bl	22e0 <rewind@plt>
    45b0:	mov	x0, x19
    45b4:	bl	4e60 <check_set_max_msg_size@@Base+0x280>
    45b8:	mov	x19, x0
    45bc:	cbz	x0, 4790 <srunner_has_tap@@Base+0xc00>
    45c0:	ldr	x0, [x20, #672]
    45c4:	add	x22, x20, #0x2a0
    45c8:	cbz	x0, 46c4 <srunner_has_tap@@Base+0xb34>
    45cc:	bl	2260 <fclose@plt>
    45d0:	str	xzr, [x20, #672]
    45d4:	ldr	x0, [x22, #16]
    45d8:	cbz	x0, 45ec <srunner_has_tap@@Base+0xa5c>
    45dc:	bl	2520 <unlink@plt>
    45e0:	ldr	x0, [x22, #16]
    45e4:	bl	23e0 <free@plt>
    45e8:	str	xzr, [x22, #16]
    45ec:	add	x0, x20, #0x2a0
    45f0:	ldr	x1, [x0, #8]
    45f4:	cbz	x1, 46ec <srunner_has_tap@@Base+0xb5c>
    45f8:	add	x0, x0, #0x10
    45fc:	bl	44f8 <srunner_has_tap@@Base+0x968>
    4600:	str	x0, [x20, #672]
    4604:	cbz	x0, 47a8 <srunner_has_tap@@Base+0xc18>
    4608:	bl	2e20 <srunner_results@@Base+0x70>
    460c:	mov	x20, x0
    4610:	ldr	x1, [x19, #40]
    4614:	cmp	w21, #0x0
    4618:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    461c:	b.eq	4728 <srunner_has_tap@@Base+0xb98>  // b.none
    4620:	ldr	w0, [x19, #4]
    4624:	cbz	w0, 4674 <srunner_has_tap@@Base+0xae4>
    4628:	str	w0, [x20, #4]
    462c:	cmp	w0, #0x2
    4630:	str	x1, [x20, #48]
    4634:	str	xzr, [x19, #40]
    4638:	b.eq	468c <srunner_has_tap@@Base+0xafc>  // b.none
    463c:	ldr	w1, [x19, #16]
    4640:	ldr	x0, [x19, #8]
    4644:	str	x0, [x20, #8]
    4648:	str	w1, [x20, #16]
    464c:	mov	w0, #0xffffffff            	// #-1
    4650:	str	xzr, [x19, #8]
    4654:	str	w0, [x19, #16]
    4658:	mov	x0, x19
    465c:	bl	4e28 <check_set_max_msg_size@@Base+0x248>
    4660:	mov	x0, x20
    4664:	ldp	x19, x20, [sp, #16]
    4668:	ldp	x21, x22, [sp, #32]
    466c:	ldp	x29, x30, [sp], #48
    4670:	ret
    4674:	ldr	w0, [x19]
    4678:	str	w0, [x20, #4]
    467c:	str	x1, [x20, #48]
    4680:	cmp	w0, #0x2
    4684:	str	xzr, [x19, #40]
    4688:	b.ne	463c <srunner_has_tap@@Base+0xaac>  // b.any
    468c:	ldr	w1, [x19, #32]
    4690:	ldr	x0, [x19, #24]
    4694:	str	x0, [x20, #8]
    4698:	str	w1, [x20, #16]
    469c:	mov	w0, #0xffffffff            	// #-1
    46a0:	str	xzr, [x19, #24]
    46a4:	str	w0, [x19, #32]
    46a8:	mov	x0, x19
    46ac:	bl	4e28 <check_set_max_msg_size@@Base+0x248>
    46b0:	mov	x0, x20
    46b4:	ldp	x19, x20, [sp, #16]
    46b8:	ldp	x21, x22, [sp, #32]
    46bc:	ldp	x29, x30, [sp], #48
    46c0:	ret
    46c4:	ldr	x0, [x22, #8]
    46c8:	cbz	x0, 47c0 <srunner_has_tap@@Base+0xc30>
    46cc:	bl	2260 <fclose@plt>
    46d0:	str	xzr, [x22, #8]
    46d4:	ldr	x0, [x22, #24]
    46d8:	cbz	x0, 46ec <srunner_has_tap@@Base+0xb5c>
    46dc:	bl	2520 <unlink@plt>
    46e0:	ldr	x0, [x22, #24]
    46e4:	bl	23e0 <free@plt>
    46e8:	str	xzr, [x22, #24]
    46ec:	add	x20, x20, #0x2a0
    46f0:	add	x0, x20, #0x18
    46f4:	bl	44f8 <srunner_has_tap@@Base+0x968>
    46f8:	str	x0, [x20, #8]
    46fc:	cbnz	x0, 4608 <srunner_has_tap@@Base+0xa78>
    4700:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    4704:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    4708:	add	x1, x1, #0xd18
    470c:	add	x0, x0, #0xe00
    4710:	mov	w2, #0x13d                 	// #317
    4714:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    4718:	add	x0, x20, #0x2a0
    471c:	ldr	x19, [x0, #8]
    4720:	cbnz	x19, 45a8 <srunner_has_tap@@Base+0xa18>
    4724:	bl	4318 <srunner_has_tap@@Base+0x788>
    4728:	ldr	w0, [x19]
    472c:	cmp	w0, #0x1
    4730:	b.ne	475c <srunner_has_tap@@Base+0xbcc>  // b.any
    4734:	ldr	w1, [x19, #16]
    4738:	ldr	x2, [x19, #8]
    473c:	str	w0, [x20, #4]
    4740:	str	x2, [x20, #8]
    4744:	mov	w0, #0xffffffff            	// #-1
    4748:	str	w1, [x20, #16]
    474c:	str	xzr, [x20, #48]
    4750:	str	xzr, [x19, #8]
    4754:	str	w0, [x19, #16]
    4758:	b	4658 <srunner_has_tap@@Base+0xac8>
    475c:	ldr	w2, [x19, #32]
    4760:	mov	w4, #0x2                   	// #2
    4764:	ldr	w1, [x19, #48]
    4768:	mov	w0, #0xffffffff            	// #-1
    476c:	ldr	x3, [x19, #24]
    4770:	str	w4, [x20, #4]
    4774:	str	x3, [x20, #8]
    4778:	str	w2, [x20, #16]
    477c:	str	w1, [x20, #24]
    4780:	str	xzr, [x20, #48]
    4784:	str	xzr, [x19, #24]
    4788:	str	w0, [x19, #32]
    478c:	b	4658 <srunner_has_tap@@Base+0xac8>
    4790:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    4794:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    4798:	add	x1, x1, #0xd18
    479c:	add	x0, x0, #0xde0
    47a0:	mov	w2, #0x85                  	// #133
    47a4:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    47a8:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    47ac:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    47b0:	add	x1, x1, #0xd18
    47b4:	add	x0, x0, #0xe00
    47b8:	mov	w2, #0x146                 	// #326
    47bc:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    47c0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    47c4:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    47c8:	add	x1, x1, #0xd18
    47cc:	add	x0, x0, #0xda0
    47d0:	mov	w2, #0x16a                 	// #362
    47d4:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    47d8:	stp	x29, x30, [sp, #-32]!
    47dc:	mov	x29, sp
    47e0:	stp	x19, x20, [sp, #16]
    47e4:	adrp	x19, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    47e8:	add	x20, x19, #0x2a0
    47ec:	ldr	x0, [x20, #8]
    47f0:	cbz	x0, 4818 <srunner_has_tap@@Base+0xc88>
    47f4:	ldr	x0, [x19, #672]
    47f8:	cbnz	x0, 4858 <srunner_has_tap@@Base+0xcc8>
    47fc:	add	x0, x20, #0x10
    4800:	bl	44f8 <srunner_has_tap@@Base+0x968>
    4804:	str	x0, [x19, #672]
    4808:	cbz	x0, 4840 <srunner_has_tap@@Base+0xcb0>
    480c:	ldp	x19, x20, [sp, #16]
    4810:	ldp	x29, x30, [sp], #32
    4814:	ret
    4818:	add	x0, x20, #0x18
    481c:	bl	44f8 <srunner_has_tap@@Base+0x968>
    4820:	str	x0, [x20, #8]
    4824:	cbnz	x0, 480c <srunner_has_tap@@Base+0xc7c>
    4828:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    482c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    4830:	add	x1, x1, #0xd18
    4834:	add	x0, x0, #0xe00
    4838:	mov	w2, #0x13d                 	// #317
    483c:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    4840:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    4844:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    4848:	add	x1, x1, #0xd18
    484c:	add	x0, x0, #0xe00
    4850:	mov	w2, #0x146                 	// #326
    4854:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    4858:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    485c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    4860:	add	x1, x1, #0xd18
    4864:	add	x0, x0, #0xe58
    4868:	mov	w2, #0x14d                 	// #333
    486c:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    4870:	ldr	x3, [x0]
    4874:	ldr	w2, [x3], #4
    4878:	str	x3, [x0]
    487c:	rev	w0, w2
    4880:	str	w0, [x1]
    4884:	ret
    4888:	ldr	x3, [x0]
    488c:	ldr	w2, [x3], #4
    4890:	str	x3, [x0]
    4894:	rev	w0, w2
    4898:	str	w0, [x1]
    489c:	ret
    48a0:	stp	x29, x30, [sp, #-32]!
    48a4:	mov	x29, sp
    48a8:	stp	x19, x20, [sp, #16]
    48ac:	mov	x20, x0
    48b0:	mov	x19, x1
    48b4:	mov	x0, #0x8                   	// #8
    48b8:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    48bc:	mov	x2, x0
    48c0:	str	x2, [x20]
    48c4:	mov	w1, #0x3000000             	// #50331648
    48c8:	mov	w0, #0x8                   	// #8
    48cc:	str	w1, [x2]
    48d0:	ldr	w1, [x19]
    48d4:	rev	w1, w1
    48d8:	str	w1, [x2, #4]
    48dc:	ldp	x19, x20, [sp, #16]
    48e0:	ldp	x29, x30, [sp], #32
    48e4:	ret
    48e8:	stp	x29, x30, [sp, #-32]!
    48ec:	mov	x29, sp
    48f0:	stp	x19, x20, [sp, #16]
    48f4:	mov	x20, x0
    48f8:	mov	x19, x1
    48fc:	mov	x0, #0x8                   	// #8
    4900:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    4904:	mov	x2, x0
    4908:	str	x2, [x20]
    490c:	mov	w0, #0x8                   	// #8
    4910:	str	wzr, [x2]
    4914:	ldr	w1, [x19]
    4918:	rev	w1, w1
    491c:	str	w1, [x2, #4]
    4920:	ldp	x19, x20, [sp, #16]
    4924:	ldp	x29, x30, [sp], #32
    4928:	ret
    492c:	nop
    4930:	stp	x29, x30, [sp, #-64]!
    4934:	mov	x29, sp
    4938:	stp	x21, x22, [sp, #32]
    493c:	mov	x22, x0
    4940:	ldr	x0, [x1, #8]
    4944:	stp	x19, x20, [sp, #16]
    4948:	mov	x20, x1
    494c:	str	x23, [sp, #48]
    4950:	cbz	x0, 49dc <srunner_has_tap@@Base+0xe4c>
    4954:	bl	2150 <strlen@plt>
    4958:	add	w21, w0, #0xc
    495c:	sxtw	x0, w21
    4960:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    4964:	str	x0, [x22]
    4968:	mov	w1, #0x2000000             	// #33554432
    496c:	str	w1, [x0]
    4970:	mov	x19, x0
    4974:	ldr	x23, [x20, #8]
    4978:	cbz	x23, 49d0 <srunner_has_tap@@Base+0xe40>
    497c:	mov	x0, x23
    4980:	bl	2150 <strlen@plt>
    4984:	rev	w1, w0
    4988:	str	w1, [x19, #4]
    498c:	add	x22, x19, #0x8
    4990:	cmp	w0, #0x0
    4994:	b.le	49ac <srunner_has_tap@@Base+0xe1c>
    4998:	sxtw	x2, w0
    499c:	mov	x1, x23
    49a0:	mov	x0, x22
    49a4:	add	x22, x22, x2
    49a8:	bl	20e0 <memcpy@plt>
    49ac:	ldr	w1, [x20]
    49b0:	mov	w0, w21
    49b4:	rev	w1, w1
    49b8:	str	w1, [x22]
    49bc:	ldp	x19, x20, [sp, #16]
    49c0:	ldp	x21, x22, [sp, #32]
    49c4:	ldr	x23, [sp, #48]
    49c8:	ldp	x29, x30, [sp], #64
    49cc:	ret
    49d0:	add	x22, x0, #0x8
    49d4:	str	wzr, [x0, #4]
    49d8:	b	49ac <srunner_has_tap@@Base+0xe1c>
    49dc:	mov	x0, #0xc                   	// #12
    49e0:	mov	w21, w0
    49e4:	b	4960 <srunner_has_tap@@Base+0xdd0>
    49e8:	b	2500 <pthread_mutex_unlock@plt>
    49ec:	nop
    49f0:	stp	x29, x30, [sp, #-64]!
    49f4:	mov	x29, sp
    49f8:	stp	x19, x20, [sp, #16]
    49fc:	mov	x19, x0
    4a00:	ldr	x0, [x0]
    4a04:	stp	x21, x22, [sp, #32]
    4a08:	mov	x21, x1
    4a0c:	ldr	w20, [x0], #4
    4a10:	str	x0, [x19]
    4a14:	rev	w20, w20
    4a18:	cmp	w20, #0x0
    4a1c:	b.le	4a80 <srunner_has_tap@@Base+0xef0>
    4a20:	add	w0, w20, #0x1
    4a24:	str	x23, [sp, #48]
    4a28:	sxtw	x23, w20
    4a2c:	sxtw	x0, w0
    4a30:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    4a34:	ldr	x1, [x19]
    4a38:	mov	x22, x0
    4a3c:	mov	x2, x23
    4a40:	bl	20e0 <memcpy@plt>
    4a44:	strb	wzr, [x22, w20, sxtw]
    4a48:	ldr	x0, [x19]
    4a4c:	add	x0, x0, x23
    4a50:	ldr	x23, [sp, #48]
    4a54:	str	x0, [x19]
    4a58:	str	x22, [x21, #8]
    4a5c:	ldr	x1, [x19]
    4a60:	ldr	w0, [x1], #4
    4a64:	str	x1, [x19]
    4a68:	rev	w0, w0
    4a6c:	ldp	x19, x20, [sp, #16]
    4a70:	str	w0, [x21]
    4a74:	ldp	x21, x22, [sp, #32]
    4a78:	ldp	x29, x30, [sp], #64
    4a7c:	ret
    4a80:	mov	x0, #0x1                   	// #1
    4a84:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    4a88:	mov	x22, x0
    4a8c:	strb	wzr, [x0]
    4a90:	b	4a58 <srunner_has_tap@@Base+0xec8>
    4a94:	nop
    4a98:	stp	x29, x30, [sp, #-48]!
    4a9c:	mov	x29, sp
    4aa0:	stp	x21, x22, [sp, #32]
    4aa4:	mov	x22, x0
    4aa8:	ldr	x0, [x1]
    4aac:	stp	x19, x20, [sp, #16]
    4ab0:	mov	x20, x1
    4ab4:	cbz	x0, 4b34 <srunner_has_tap@@Base+0xfa4>
    4ab8:	bl	2150 <strlen@plt>
    4abc:	add	w21, w0, #0x8
    4ac0:	sxtw	x0, w21
    4ac4:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    4ac8:	str	x0, [x22]
    4acc:	mov	w1, #0x1000000             	// #16777216
    4ad0:	str	w1, [x0]
    4ad4:	mov	x19, x0
    4ad8:	ldr	x20, [x20]
    4adc:	cbz	x20, 4b1c <srunner_has_tap@@Base+0xf8c>
    4ae0:	mov	x0, x20
    4ae4:	bl	2150 <strlen@plt>
    4ae8:	rev	w1, w0
    4aec:	str	w1, [x19, #4]
    4af0:	cmp	w0, #0x0
    4af4:	b.le	4b08 <srunner_has_tap@@Base+0xf78>
    4af8:	sxtw	x2, w0
    4afc:	mov	x1, x20
    4b00:	add	x0, x19, #0x8
    4b04:	bl	20e0 <memcpy@plt>
    4b08:	mov	w0, w21
    4b0c:	ldp	x19, x20, [sp, #16]
    4b10:	ldp	x21, x22, [sp, #32]
    4b14:	ldp	x29, x30, [sp], #48
    4b18:	ret
    4b1c:	str	wzr, [x0, #4]
    4b20:	mov	w0, w21
    4b24:	ldp	x19, x20, [sp, #16]
    4b28:	ldp	x21, x22, [sp, #32]
    4b2c:	ldp	x29, x30, [sp], #48
    4b30:	ret
    4b34:	mov	x0, #0x8                   	// #8
    4b38:	mov	w21, w0
    4b3c:	b	4ac4 <srunner_has_tap@@Base+0xf34>
    4b40:	stp	x29, x30, [sp, #-64]!
    4b44:	mov	x29, sp
    4b48:	stp	x19, x20, [sp, #16]
    4b4c:	mov	x19, x0
    4b50:	ldr	x0, [x0]
    4b54:	stp	x21, x22, [sp, #32]
    4b58:	mov	x22, x1
    4b5c:	ldr	w20, [x0], #4
    4b60:	str	x0, [x19]
    4b64:	rev	w20, w20
    4b68:	cmp	w20, #0x0
    4b6c:	b.le	4bbc <srunner_has_tap@@Base+0x102c>
    4b70:	add	w0, w20, #0x1
    4b74:	str	x23, [sp, #48]
    4b78:	sxtw	x23, w20
    4b7c:	sxtw	x0, w0
    4b80:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    4b84:	ldr	x1, [x19]
    4b88:	mov	x21, x0
    4b8c:	mov	x2, x23
    4b90:	bl	20e0 <memcpy@plt>
    4b94:	strb	wzr, [x21, w20, sxtw]
    4b98:	ldr	x0, [x19]
    4b9c:	add	x0, x0, x23
    4ba0:	ldr	x23, [sp, #48]
    4ba4:	str	x0, [x19]
    4ba8:	ldp	x19, x20, [sp, #16]
    4bac:	str	x21, [x22]
    4bb0:	ldp	x21, x22, [sp, #32]
    4bb4:	ldp	x29, x30, [sp], #64
    4bb8:	ret
    4bbc:	mov	x0, #0x1                   	// #1
    4bc0:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    4bc4:	strb	wzr, [x0]
    4bc8:	mov	x21, x0
    4bcc:	ldp	x19, x20, [sp, #16]
    4bd0:	str	x21, [x22]
    4bd4:	ldp	x21, x22, [sp, #32]
    4bd8:	ldp	x29, x30, [sp], #64
    4bdc:	ret

0000000000004be0 <check_set_max_msg_size@@Base>:
    4be0:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    4be4:	str	x0, [x1, #704]
    4be8:	ret
    4bec:	nop
    4bf0:	mov	w3, w0
    4bf4:	mov	x0, x1
    4bf8:	cbz	x1, 4c28 <check_set_max_msg_size@@Base+0x48>
    4bfc:	mov	x1, x2
    4c00:	cbz	x2, 4c20 <check_set_max_msg_size@@Base+0x40>
    4c04:	cmp	w3, #0x3
    4c08:	b.hi	4c30 <check_set_max_msg_size@@Base+0x50>  // b.pmore
    4c0c:	adrp	x2, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    4c10:	add	x2, x2, #0xd20
    4c14:	ldr	x2, [x2, w3, uxtw #3]
    4c18:	mov	x16, x2
    4c1c:	br	x16
    4c20:	mov	w0, #0x0                   	// #0
    4c24:	ret
    4c28:	mov	w0, #0xffffffff            	// #-1
    4c2c:	ret
    4c30:	stp	x29, x30, [sp, #-16]!
    4c34:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    4c38:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    4c3c:	mov	x29, sp
    4c40:	add	x1, x1, #0xe88
    4c44:	add	x0, x0, #0xe98
    4c48:	mov	w2, #0x7e                  	// #126
    4c4c:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    4c50:	stp	x29, x30, [sp, #-48]!
    4c54:	mov	x29, sp
    4c58:	str	x0, [sp, #40]
    4c5c:	cbz	x0, 4cac <check_set_max_msg_size@@Base+0xcc>
    4c60:	str	x19, [sp, #16]
    4c64:	mov	x19, x0
    4c68:	ldr	w3, [x0], #4
    4c6c:	str	x0, [sp, #40]
    4c70:	rev	w3, w3
    4c74:	str	w3, [x2]
    4c78:	cmp	w3, #0x3
    4c7c:	b.hi	4cb4 <check_set_max_msg_size@@Base+0xd4>  // b.pmore
    4c80:	adrp	x2, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    4c84:	add	x2, x2, #0xd20
    4c88:	add	x2, x2, #0x20
    4c8c:	add	x0, sp, #0x28
    4c90:	ldr	x2, [x2, w3, uxtw #3]
    4c94:	blr	x2
    4c98:	ldr	x0, [sp, #40]
    4c9c:	sub	w0, w0, w19
    4ca0:	ldr	x19, [sp, #16]
    4ca4:	ldp	x29, x30, [sp], #48
    4ca8:	ret
    4cac:	mov	w0, #0xffffffff            	// #-1
    4cb0:	b	4ca4 <check_set_max_msg_size@@Base+0xc4>
    4cb4:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    4cb8:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    4cbc:	add	x1, x1, #0xe88
    4cc0:	add	x0, x0, #0xe98
    4cc4:	mov	w2, #0x8e                  	// #142
    4cc8:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    4ccc:	nop
    4cd0:	stp	x29, x30, [sp, #-336]!
    4cd4:	mov	x3, x0
    4cd8:	mov	w0, w1
    4cdc:	mov	x29, sp
    4ce0:	add	x1, sp, #0x68
    4ce4:	stp	x19, x20, [sp, #16]
    4ce8:	stp	x21, x22, [sp, #32]
    4cec:	str	x23, [sp, #48]
    4cf0:	str	x3, [sp, #80]
    4cf4:	str	xzr, [sp, #104]
    4cf8:	bl	4bf0 <check_set_max_msg_size@@Base+0x10>
    4cfc:	sxtw	x1, w0
    4d00:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    4d04:	add	x0, x0, #0xeb0
    4d08:	str	x1, [sp, #72]
    4d0c:	bl	24e0 <getenv@plt>
    4d10:	cbz	x0, 4dc4 <check_set_max_msg_size@@Base+0x1e4>
    4d14:	mov	w2, #0xa                   	// #10
    4d18:	mov	x1, #0x0                   	// #0
    4d1c:	bl	2140 <strtoul@plt>
    4d20:	cbz	x0, 4dc4 <check_set_max_msg_size@@Base+0x1e4>
    4d24:	ldr	x1, [sp, #72]
    4d28:	cmp	x1, x0
    4d2c:	b.hi	4e10 <check_set_max_msg_size@@Base+0x230>  // b.pmore
    4d30:	adrp	x0, 4000 <srunner_has_tap@@Base+0x470>
    4d34:	add	x0, x0, #0x9e8
    4d38:	mov	w1, #0x0                   	// #0
    4d3c:	str	x0, [sp, #88]
    4d40:	add	x0, sp, #0x70
    4d44:	bl	21a0 <__sigsetjmp@plt>
    4d48:	cbnz	w0, 4ddc <check_set_max_msg_size@@Base+0x1fc>
    4d4c:	add	x21, sp, #0x70
    4d50:	adrp	x19, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    4d54:	add	x19, x19, #0x2c0
    4d58:	mov	x0, x21
    4d5c:	add	x19, x19, #0x8
    4d60:	bl	2220 <__pthread_register_cancel@plt>
    4d64:	mov	x0, x19
    4d68:	bl	24f0 <pthread_mutex_lock@plt>
    4d6c:	ldp	x22, x23, [sp, #72]
    4d70:	mov	x1, #0x1                   	// #1
    4d74:	ldr	x0, [sp, #104]
    4d78:	mov	x3, x23
    4d7c:	mov	x2, x22
    4d80:	bl	2440 <fwrite@plt>
    4d84:	mov	x20, x0
    4d88:	mov	x0, x23
    4d8c:	bl	2460 <fflush@plt>
    4d90:	mov	x0, x19
    4d94:	bl	2500 <pthread_mutex_unlock@plt>
    4d98:	mov	x0, x21
    4d9c:	bl	22c0 <__pthread_unregister_cancel@plt>
    4da0:	cmp	x22, x20
    4da4:	b.ne	4df8 <check_set_max_msg_size@@Base+0x218>  // b.any
    4da8:	ldr	x0, [sp, #104]
    4dac:	bl	23e0 <free@plt>
    4db0:	ldp	x19, x20, [sp, #16]
    4db4:	ldp	x21, x22, [sp, #32]
    4db8:	ldr	x23, [sp, #48]
    4dbc:	ldp	x29, x30, [sp], #336
    4dc0:	ret
    4dc4:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    4dc8:	mov	x1, #0x1000                	// #4096
    4dcc:	ldr	x0, [x0, #704]
    4dd0:	cmp	x0, #0x0
    4dd4:	csel	x0, x0, x1, ne  // ne = any
    4dd8:	b	4d24 <check_set_max_msg_size@@Base+0x144>
    4ddc:	ldr	x1, [sp, #88]
    4de0:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    4de4:	add	x0, x0, #0x2c0
    4de8:	add	x0, x0, #0x8
    4dec:	blr	x1
    4df0:	add	x0, sp, #0x70
    4df4:	bl	22f0 <__pthread_unwind_next@plt>
    4df8:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    4dfc:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    4e00:	add	x1, x1, #0xe88
    4e04:	add	x0, x0, #0xed8
    4e08:	mov	w2, #0x14f                 	// #335
    4e0c:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    4e10:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    4e14:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    4e18:	add	x1, x1, #0xe88
    4e1c:	add	x0, x0, #0xec0
    4e20:	mov	w2, #0x146                 	// #326
    4e24:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    4e28:	stp	x29, x30, [sp, #-32]!
    4e2c:	mov	x29, sp
    4e30:	str	x19, [sp, #16]
    4e34:	mov	x19, x0
    4e38:	ldr	x0, [x0, #8]
    4e3c:	bl	23e0 <free@plt>
    4e40:	ldr	x0, [x19, #24]
    4e44:	bl	23e0 <free@plt>
    4e48:	ldr	x0, [x19, #40]
    4e4c:	bl	23e0 <free@plt>
    4e50:	mov	x0, x19
    4e54:	ldr	x19, [sp, #16]
    4e58:	ldp	x29, x30, [sp], #32
    4e5c:	b	23e0 <free@plt>
    4e60:	stp	x29, x30, [sp, #-144]!
    4e64:	mov	x29, sp
    4e68:	stp	x19, x20, [sp, #16]
    4e6c:	adrp	x19, 6000 <srunner_run_tagged@@Base+0x388>
    4e70:	stp	x21, x22, [sp, #32]
    4e74:	stp	x23, x24, [sp, #48]
    4e78:	stp	x25, x26, [sp, #64]
    4e7c:	mov	x26, x0
    4e80:	mov	x0, #0x38                  	// #56
    4e84:	stp	x27, x28, [sp, #80]
    4e88:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    4e8c:	mov	x22, x0
    4e90:	mov	w1, #0xffffffff            	// #-1
    4e94:	add	x0, x19, #0xeb0
    4e98:	str	xzr, [x22]
    4e9c:	str	xzr, [x22, #8]
    4ea0:	str	w1, [x22, #16]
    4ea4:	str	xzr, [x22, #24]
    4ea8:	str	w1, [x22, #32]
    4eac:	str	xzr, [x22, #40]
    4eb0:	str	w1, [x22, #48]
    4eb4:	bl	24e0 <getenv@plt>
    4eb8:	cbz	x0, 4ecc <check_set_max_msg_size@@Base+0x2ec>
    4ebc:	mov	w2, #0xa                   	// #10
    4ec0:	mov	x1, #0x0                   	// #0
    4ec4:	bl	2140 <strtoul@plt>
    4ec8:	cbnz	x0, 50e8 <check_set_max_msg_size@@Base+0x508>
    4ecc:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    4ed0:	mov	x1, #0x2000                	// #8192
    4ed4:	ldr	x0, [x0, #704]
    4ed8:	cmp	x0, #0x0
    4edc:	lsl	x0, x0, #1
    4ee0:	csel	x0, x0, x1, ne  // ne = any
    4ee4:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    4ee8:	mov	x21, x0
    4eec:	add	x0, x19, #0xeb0
    4ef0:	bl	24e0 <getenv@plt>
    4ef4:	cbz	x0, 4f08 <check_set_max_msg_size@@Base+0x328>
    4ef8:	mov	w2, #0xa                   	// #10
    4efc:	mov	x1, #0x0                   	// #0
    4f00:	bl	2140 <strtoul@plt>
    4f04:	cbnz	x0, 50e0 <check_set_max_msg_size@@Base+0x500>
    4f08:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    4f0c:	mov	x2, #0x2000                	// #8192
    4f10:	ldr	x0, [x0, #704]
    4f14:	cmp	x0, #0x0
    4f18:	sbfiz	x0, x0, #1, #31
    4f1c:	csel	x2, x0, x2, ne  // ne = any
    4f20:	mov	x3, x26
    4f24:	mov	x1, #0x1                   	// #1
    4f28:	mov	x0, x21
    4f2c:	bl	23b0 <fread@plt>
    4f30:	mov	x23, x0
    4f34:	mov	x0, x26
    4f38:	mov	w20, w23
    4f3c:	bl	2540 <ferror@plt>
    4f40:	cbnz	w0, 5170 <check_set_max_msg_size@@Base+0x590>
    4f44:	add	x25, sp, #0x7c
    4f48:	add	x24, sp, #0x80
    4f4c:	mov	w27, #0xffffffff            	// #-1
    4f50:	cmp	w20, #0x0
    4f54:	b.le	4fe8 <check_set_max_msg_size@@Base+0x408>
    4f58:	mov	x2, x25
    4f5c:	mov	x1, x24
    4f60:	mov	x0, x21
    4f64:	bl	4c50 <check_set_max_msg_size@@Base+0x70>
    4f68:	sxtw	x19, w0
    4f6c:	cmn	w19, #0x1
    4f70:	b.eq	5140 <check_set_max_msg_size@@Base+0x560>  // b.none
    4f74:	ldr	w3, [sp, #124]
    4f78:	cbnz	w3, 502c <check_set_max_msg_size@@Base+0x44c>
    4f7c:	ldr	w0, [x22]
    4f80:	ldr	w28, [sp, #128]
    4f84:	cbnz	w0, 5018 <check_set_max_msg_size@@Base+0x438>
    4f88:	str	w28, [x22]
    4f8c:	subs	w20, w20, w19
    4f90:	b.mi	5158 <check_set_max_msg_size@@Base+0x578>  // b.first
    4f94:	sxtw	x28, w20
    4f98:	add	x1, x21, x19
    4f9c:	mov	x2, x28
    4fa0:	mov	x0, x21
    4fa4:	bl	20f0 <memmove@plt>
    4fa8:	cmp	w23, #0x0
    4fac:	b.le	4f50 <check_set_max_msg_size@@Base+0x370>
    4fb0:	mov	x2, x19
    4fb4:	mov	x3, x26
    4fb8:	mov	x1, #0x1                   	// #1
    4fbc:	add	x0, x21, x28
    4fc0:	bl	23b0 <fread@plt>
    4fc4:	mov	x19, x0
    4fc8:	mov	w23, w19
    4fcc:	mov	x0, x26
    4fd0:	bl	2540 <ferror@plt>
    4fd4:	cbnz	w0, 5170 <check_set_max_msg_size@@Base+0x590>
    4fd8:	add	w20, w20, w19
    4fdc:	cmp	w20, #0x0
    4fe0:	b.gt	4f58 <check_set_max_msg_size@@Base+0x378>
    4fe4:	nop
    4fe8:	mov	x0, x21
    4fec:	bl	23e0 <free@plt>
    4ff0:	ldr	w0, [x22]
    4ff4:	cbz	w0, 5114 <check_set_max_msg_size@@Base+0x534>
    4ff8:	mov	x0, x22
    4ffc:	ldp	x19, x20, [sp, #16]
    5000:	ldp	x21, x22, [sp, #32]
    5004:	ldp	x23, x24, [sp, #48]
    5008:	ldp	x25, x26, [sp, #64]
    500c:	ldp	x27, x28, [sp, #80]
    5010:	ldp	x29, x30, [sp], #144
    5014:	ret
    5018:	ldr	x0, [x22, #8]
    501c:	bl	23e0 <free@plt>
    5020:	str	xzr, [x22, #8]
    5024:	str	w27, [x22, #16]
    5028:	b	4f88 <check_set_max_msg_size@@Base+0x3a8>
    502c:	cmp	w3, #0x2
    5030:	b.eq	5060 <check_set_max_msg_size@@Base+0x480>  // b.none
    5034:	cmp	w3, #0x1
    5038:	b.eq	5078 <check_set_max_msg_size@@Base+0x498>  // b.none
    503c:	cmp	w3, #0x3
    5040:	b.eq	509c <check_set_max_msg_size@@Base+0x4bc>  // b.none
    5044:	b.ls	4f8c <check_set_max_msg_size@@Base+0x3ac>  // b.plast
    5048:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    504c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    5050:	add	x1, x1, #0xe88
    5054:	add	x0, x0, #0xe98
    5058:	mov	w2, #0x194                 	// #404
    505c:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    5060:	ldr	w0, [x22, #4]
    5064:	ldr	x28, [sp, #136]
    5068:	cbz	w0, 50a8 <check_set_max_msg_size@@Base+0x4c8>
    506c:	mov	x0, x28
    5070:	bl	23e0 <free@plt>
    5074:	b	4f8c <check_set_max_msg_size@@Base+0x3ac>
    5078:	ldr	x0, [x22, #40]
    507c:	ldr	x28, [sp, #128]
    5080:	cbnz	x0, 506c <check_set_max_msg_size@@Base+0x48c>
    5084:	mov	x0, x28
    5088:	bl	2300 <strdup@plt>
    508c:	ldr	w1, [x22]
    5090:	str	w1, [x22, #4]
    5094:	str	x0, [x22, #40]
    5098:	b	506c <check_set_max_msg_size@@Base+0x48c>
    509c:	ldr	w0, [sp, #128]
    50a0:	str	w0, [x22, #48]
    50a4:	b	4f8c <check_set_max_msg_size@@Base+0x3ac>
    50a8:	ldr	w1, [sp, #128]
    50ac:	ldr	w0, [x22]
    50b0:	str	w1, [sp, #108]
    50b4:	cmp	w0, #0x2
    50b8:	b.eq	50f0 <check_set_max_msg_size@@Base+0x510>  // b.none
    50bc:	ldr	x0, [x22, #8]
    50c0:	bl	23e0 <free@plt>
    50c4:	ldr	w1, [sp, #108]
    50c8:	mov	x0, x28
    50cc:	str	w1, [x22, #16]
    50d0:	bl	2300 <strdup@plt>
    50d4:	ldr	x28, [sp, #136]
    50d8:	str	x0, [x22, #8]
    50dc:	b	506c <check_set_max_msg_size@@Base+0x48c>
    50e0:	sbfiz	x2, x0, #1, #31
    50e4:	b	4f20 <check_set_max_msg_size@@Base+0x340>
    50e8:	lsl	x0, x0, #1
    50ec:	b	4ee4 <check_set_max_msg_size@@Base+0x304>
    50f0:	ldr	x0, [x22, #24]
    50f4:	bl	23e0 <free@plt>
    50f8:	ldr	w1, [sp, #108]
    50fc:	mov	x0, x28
    5100:	str	w1, [x22, #32]
    5104:	bl	2300 <strdup@plt>
    5108:	str	x0, [x22, #24]
    510c:	ldr	x28, [sp, #136]
    5110:	b	506c <check_set_max_msg_size@@Base+0x48c>
    5114:	mov	x0, x22
    5118:	mov	x22, #0x0                   	// #0
    511c:	bl	23e0 <free@plt>
    5120:	mov	x0, x22
    5124:	ldp	x19, x20, [sp, #16]
    5128:	ldp	x21, x22, [sp, #32]
    512c:	ldp	x23, x24, [sp, #48]
    5130:	ldp	x25, x26, [sp, #64]
    5134:	ldp	x27, x28, [sp, #80]
    5138:	ldp	x29, x30, [sp], #144
    513c:	ret
    5140:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    5144:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    5148:	add	x1, x1, #0xe88
    514c:	add	x0, x0, #0xf10
    5150:	mov	w2, #0x16a                 	// #362
    5154:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    5158:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    515c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    5160:	add	x1, x1, #0xe88
    5164:	add	x0, x0, #0xf28
    5168:	mov	w2, #0x1e6                 	// #486
    516c:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    5170:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    5174:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    5178:	add	x1, x1, #0xe88
    517c:	add	x0, x0, #0xef8
    5180:	mov	w2, #0x15a                 	// #346
    5184:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    5188:	ldrb	w2, [x1]
    518c:	cbz	w2, 52e8 <check_set_max_msg_size@@Base+0x708>
    5190:	stp	x29, x30, [sp, #-48]!
    5194:	mov	x29, sp
    5198:	stp	x19, x20, [sp, #16]
    519c:	mov	x19, x1
    51a0:	mov	x20, x0
    51a4:	stp	x21, x22, [sp, #32]
    51a8:	adrp	x21, 6000 <srunner_run_tagged@@Base+0x388>
    51ac:	adrp	x22, 6000 <srunner_run_tagged@@Base+0x388>
    51b0:	add	x21, x21, #0xf48
    51b4:	add	x22, x22, #0xf70
    51b8:	b	51d8 <check_set_max_msg_size@@Base+0x5f8>
    51bc:	mov	x3, x20
    51c0:	mov	x0, x21
    51c4:	mov	x2, #0x6                   	// #6
    51c8:	mov	x1, #0x1                   	// #1
    51cc:	bl	2440 <fwrite@plt>
    51d0:	ldrb	w2, [x19, #1]!
    51d4:	cbz	w2, 5234 <check_set_max_msg_size@@Base+0x654>
    51d8:	cmp	w2, #0x22
    51dc:	b.eq	51bc <check_set_max_msg_size@@Base+0x5dc>  // b.none
    51e0:	and	w1, w2, #0xfffffffd
    51e4:	sub	w4, w2, #0x26
    51e8:	cmp	w1, #0x3c
    51ec:	and	w4, w4, #0xff
    51f0:	ccmp	w4, #0x1, #0x0, ne  // ne = any
    51f4:	b.hi	5268 <check_set_max_msg_size@@Base+0x688>  // b.pmore
    51f8:	cmp	w2, #0x27
    51fc:	b.eq	52a0 <check_set_max_msg_size@@Base+0x6c0>  // b.none
    5200:	b.ls	5244 <check_set_max_msg_size@@Base+0x664>  // b.plast
    5204:	cmp	w2, #0x3c
    5208:	b.eq	52bc <check_set_max_msg_size@@Base+0x6dc>  // b.none
    520c:	cmp	w2, #0x3e
    5210:	b.ne	51d0 <check_set_max_msg_size@@Base+0x5f0>  // b.any
    5214:	mov	x2, #0x4                   	// #4
    5218:	mov	x3, x20
    521c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    5220:	mov	x1, #0x1                   	// #1
    5224:	add	x0, x0, #0xf60
    5228:	bl	2440 <fwrite@plt>
    522c:	ldrb	w2, [x19, #1]!
    5230:	cbnz	w2, 51d8 <check_set_max_msg_size@@Base+0x5f8>
    5234:	ldp	x19, x20, [sp, #16]
    5238:	ldp	x21, x22, [sp, #32]
    523c:	ldp	x29, x30, [sp], #48
    5240:	ret
    5244:	cmp	w2, #0x26
    5248:	b.ne	51d0 <check_set_max_msg_size@@Base+0x5f0>  // b.any
    524c:	mov	x3, x20
    5250:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    5254:	mov	x2, #0x5                   	// #5
    5258:	mov	x1, #0x1                   	// #1
    525c:	add	x0, x0, #0xf68
    5260:	bl	2440 <fwrite@plt>
    5264:	b	51d0 <check_set_max_msg_size@@Base+0x5f0>
    5268:	sub	w0, w2, #0x20
    526c:	and	w0, w0, #0xff
    5270:	cmp	w0, #0x5e
    5274:	b.ls	52d8 <check_set_max_msg_size@@Base+0x6f8>  // b.plast
    5278:	cmp	w2, #0xd
    527c:	sub	w0, w2, #0x9
    5280:	ccmp	w2, #0x1f, #0x2, ne  // ne = any
    5284:	and	w0, w0, #0xff
    5288:	ccmp	w0, #0x1, #0x0, ls  // ls = plast
    528c:	b.hi	51d0 <check_set_max_msg_size@@Base+0x5f0>  // b.pmore
    5290:	mov	x1, x22
    5294:	mov	x0, x20
    5298:	bl	2530 <fprintf@plt>
    529c:	b	51d0 <check_set_max_msg_size@@Base+0x5f0>
    52a0:	mov	x3, x20
    52a4:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    52a8:	mov	x2, #0x6                   	// #6
    52ac:	mov	x1, #0x1                   	// #1
    52b0:	add	x0, x0, #0xf50
    52b4:	bl	2440 <fwrite@plt>
    52b8:	b	51d0 <check_set_max_msg_size@@Base+0x5f0>
    52bc:	mov	x3, x20
    52c0:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    52c4:	mov	x2, #0x4                   	// #4
    52c8:	mov	x1, #0x1                   	// #1
    52cc:	add	x0, x0, #0xf58
    52d0:	bl	2440 <fwrite@plt>
    52d4:	b	51d0 <check_set_max_msg_size@@Base+0x5f0>
    52d8:	mov	w0, w2
    52dc:	mov	x1, x20
    52e0:	bl	21e0 <fputc@plt>
    52e4:	b	51d0 <check_set_max_msg_size@@Base+0x5f0>
    52e8:	ret
    52ec:	nop
    52f0:	stp	x29, x30, [sp, #-80]!
    52f4:	mov	x29, sp
    52f8:	stp	x19, x20, [sp, #16]
    52fc:	mov	x19, x0
    5300:	ldr	w0, [x1]
    5304:	stp	x21, x22, [sp, #32]
    5308:	mov	x20, x1
    530c:	cmp	w0, #0x2
    5310:	b.eq	5550 <check_set_max_msg_size@@Base+0x970>  // b.none
    5314:	cmp	w0, #0x3
    5318:	b.ne	54c0 <check_set_max_msg_size@@Base+0x8e0>  // b.any
    531c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    5320:	add	x0, x0, #0xf78
    5324:	ldr	w1, [x0]
    5328:	ldrh	w0, [x0, #4]
    532c:	str	w1, [sp, #64]
    5330:	strh	w0, [sp, #68]
    5334:	ldr	x21, [x20, #8]
    5338:	cbz	x21, 54e4 <check_set_max_msg_size@@Base+0x904>
    533c:	mov	x0, x21
    5340:	mov	w1, #0x2f                  	// #47
    5344:	str	x23, [sp, #48]
    5348:	bl	2330 <strrchr@plt>
    534c:	mov	x23, x0
    5350:	cbz	x0, 551c <check_set_max_msg_size@@Base+0x93c>
    5354:	mov	x0, x21
    5358:	bl	2300 <strdup@plt>
    535c:	sub	x1, x23, x21
    5360:	mov	x22, x0
    5364:	add	x21, x23, #0x1
    5368:	strb	wzr, [x0, x1]
    536c:	add	x2, sp, #0x40
    5370:	mov	x0, x19
    5374:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    5378:	add	x1, x1, #0xf80
    537c:	bl	2530 <fprintf@plt>
    5380:	cmp	x22, #0x0
    5384:	adrp	x2, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5388:	add	x2, x2, #0x8
    538c:	mov	x0, x19
    5390:	csel	x2, x2, x22, eq  // eq = none
    5394:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    5398:	add	x1, x1, #0xf98
    539c:	bl	2530 <fprintf@plt>
    53a0:	ldr	x23, [sp, #48]
    53a4:	mov	x2, x21
    53a8:	ldr	w3, [x20, #16]
    53ac:	mov	x0, x19
    53b0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    53b4:	add	x1, x1, #0xfb8
    53b8:	bl	2530 <fprintf@plt>
    53bc:	ldr	x2, [x20, #40]
    53c0:	mov	x0, x19
    53c4:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    53c8:	add	x1, x1, #0xfd0
    53cc:	bl	2530 <fprintf@plt>
    53d0:	ldr	w2, [x20, #20]
    53d4:	mov	x0, x19
    53d8:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    53dc:	add	x1, x1, #0xfe8
    53e0:	bl	2530 <fprintf@plt>
    53e4:	ldr	w3, [x20, #24]
    53e8:	tbnz	w3, #31, 5544 <check_set_max_msg_size@@Base+0x964>
    53ec:	mov	w2, #0xde83                	// #56963
    53f0:	mov	w0, #0x4240                	// #16960
    53f4:	movk	w2, #0x431b, lsl #16
    53f8:	movk	w0, #0xf, lsl #16
    53fc:	smull	x2, w3, w2
    5400:	asr	x2, x2, #50
    5404:	sub	w2, w2, w3, asr #31
    5408:	msub	w3, w2, w0, w3
    540c:	mov	x0, x19
    5410:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5414:	add	x1, x1, #0x10
    5418:	bl	2530 <fprintf@plt>
    541c:	mov	x3, x19
    5420:	mov	x2, #0x13                  	// #19
    5424:	mov	x1, #0x1                   	// #1
    5428:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    542c:	add	x0, x0, #0x38
    5430:	bl	2440 <fwrite@plt>
    5434:	ldr	x1, [x20, #32]
    5438:	mov	x0, x19
    543c:	bl	5188 <check_set_max_msg_size@@Base+0x5a8>
    5440:	mov	x3, x19
    5444:	mov	x2, #0xf                   	// #15
    5448:	mov	x1, #0x1                   	// #1
    544c:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5450:	add	x0, x0, #0x50
    5454:	bl	2440 <fwrite@plt>
    5458:	mov	x3, x19
    545c:	mov	x2, #0xf                   	// #15
    5460:	mov	x1, #0x1                   	// #1
    5464:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5468:	add	x0, x0, #0x60
    546c:	bl	2440 <fwrite@plt>
    5470:	ldr	x1, [x20, #48]
    5474:	mov	x0, x19
    5478:	bl	5188 <check_set_max_msg_size@@Base+0x5a8>
    547c:	mov	x3, x19
    5480:	mov	x2, #0xb                   	// #11
    5484:	mov	x1, #0x1                   	// #1
    5488:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    548c:	add	x0, x0, #0x70
    5490:	bl	2440 <fwrite@plt>
    5494:	mov	x3, x19
    5498:	mov	x2, #0xc                   	// #12
    549c:	mov	x1, #0x1                   	// #1
    54a0:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    54a4:	add	x0, x0, #0x80
    54a8:	bl	2440 <fwrite@plt>
    54ac:	mov	x0, x22
    54b0:	ldp	x19, x20, [sp, #16]
    54b4:	ldp	x21, x22, [sp, #32]
    54b8:	ldp	x29, x30, [sp], #80
    54bc:	b	23e0 <free@plt>
    54c0:	cmp	w0, #0x1
    54c4:	b.ne	5568 <check_set_max_msg_size@@Base+0x988>  // b.any
    54c8:	mov	x0, #0x7573                	// #30067
    54cc:	movk	x0, #0x6363, lsl #16
    54d0:	ldr	x21, [x20, #8]
    54d4:	movk	x0, #0x7365, lsl #32
    54d8:	movk	x0, #0x73, lsl #48
    54dc:	str	x0, [sp, #64]
    54e0:	cbnz	x21, 533c <check_set_max_msg_size@@Base+0x75c>
    54e4:	add	x2, sp, #0x40
    54e8:	mov	x0, x19
    54ec:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    54f0:	add	x1, x1, #0xf80
    54f4:	bl	2530 <fprintf@plt>
    54f8:	mov	x22, #0x0                   	// #0
    54fc:	adrp	x2, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5500:	add	x2, x2, #0x8
    5504:	mov	x21, x2
    5508:	mov	x0, x19
    550c:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x388>
    5510:	add	x1, x1, #0xf98
    5514:	bl	2530 <fprintf@plt>
    5518:	b	53a4 <check_set_max_msg_size@@Base+0x7c4>
    551c:	mov	x0, x21
    5520:	mov	w1, #0x5c                  	// #92
    5524:	bl	2330 <strrchr@plt>
    5528:	mov	x23, x0
    552c:	cbnz	x0, 5354 <check_set_max_msg_size@@Base+0x774>
    5530:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x388>
    5534:	add	x0, x0, #0xfb0
    5538:	bl	2300 <strdup@plt>
    553c:	mov	x22, x0
    5540:	b	536c <check_set_max_msg_size@@Base+0x78c>
    5544:	mov	w2, #0xffffffff            	// #-1
    5548:	mov	w3, #0x0                   	// #0
    554c:	b	540c <check_set_max_msg_size@@Base+0x82c>
    5550:	mov	x0, #0x6166                	// #24934
    5554:	movk	x0, #0x6c69, lsl #16
    5558:	movk	x0, #0x7275, lsl #32
    555c:	movk	x0, #0x65, lsl #48
    5560:	str	x0, [sp, #64]
    5564:	b	5334 <check_set_max_msg_size@@Base+0x754>
    5568:	str	x23, [sp, #48]
    556c:	bl	2350 <abort@plt>
    5570:	stp	x29, x30, [sp, #-32]!
    5574:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5578:	add	x0, x0, #0x90
    557c:	mov	x29, sp
    5580:	bl	24e0 <getenv@plt>
    5584:	cbz	x0, 55f8 <check_set_max_msg_size@@Base+0xa18>
    5588:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    558c:	add	x1, x1, #0xa0
    5590:	str	x19, [sp, #16]
    5594:	mov	x19, x0
    5598:	bl	2380 <strcmp@plt>
    559c:	mov	w1, #0x0                   	// #0
    55a0:	cbz	w0, 55e8 <check_set_max_msg_size@@Base+0xa08>
    55a4:	mov	x0, x19
    55a8:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    55ac:	add	x1, x1, #0xa8
    55b0:	bl	2380 <strcmp@plt>
    55b4:	mov	w1, #0x1                   	// #1
    55b8:	cbz	w0, 55e8 <check_set_max_msg_size@@Base+0xa08>
    55bc:	mov	x0, x19
    55c0:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    55c4:	add	x1, x1, #0xb0
    55c8:	bl	2380 <strcmp@plt>
    55cc:	cmp	w0, #0x0
    55d0:	cset	w1, eq  // eq = none
    55d4:	add	w1, w1, #0x2
    55d8:	mov	w0, w1
    55dc:	ldr	x19, [sp, #16]
    55e0:	ldp	x29, x30, [sp], #32
    55e4:	ret
    55e8:	mov	w0, w1
    55ec:	ldr	x19, [sp, #16]
    55f0:	ldp	x29, x30, [sp], #32
    55f4:	ret
    55f8:	mov	w1, #0x2                   	// #2
    55fc:	mov	w0, w1
    5600:	ldp	x29, x30, [sp], #32
    5604:	ret
    5608:	stp	x29, x30, [sp, #-32]!
    560c:	cmp	w2, #0x4
    5610:	mov	x29, sp
    5614:	stp	x19, x20, [sp, #16]
    5618:	mov	x20, x0
    561c:	mov	x19, x1
    5620:	b.eq	5678 <check_set_max_msg_size@@Base+0xa98>  // b.none
    5624:	cmp	w2, #0x2
    5628:	b.hi	5648 <check_set_max_msg_size@@Base+0xa68>  // b.pmore
    562c:	ldr	w0, [x19]
    5630:	cmp	w0, #0x1
    5634:	ccmp	w2, #0x2, #0x0, ne  // ne = any
    5638:	b.eq	5648 <check_set_max_msg_size@@Base+0xa68>  // b.none
    563c:	ldp	x19, x20, [sp, #16]
    5640:	ldp	x29, x30, [sp], #32
    5644:	ret
    5648:	mov	x0, x19
    564c:	bl	67b0 <check_waitpid_and_exit@@Base+0x160>
    5650:	mov	x19, x0
    5654:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5658:	mov	x2, x19
    565c:	mov	x0, x20
    5660:	add	x1, x1, #0xb8
    5664:	bl	2530 <fprintf@plt>
    5668:	mov	x0, x19
    566c:	ldp	x19, x20, [sp, #16]
    5670:	ldp	x29, x30, [sp], #32
    5674:	b	23e0 <free@plt>
    5678:	bl	5570 <check_set_max_msg_size@@Base+0x990>
    567c:	mov	w2, w0
    5680:	b	5624 <check_set_max_msg_size@@Base+0xa44>
    5684:	nop
    5688:	stp	x29, x30, [sp, #-48]!
    568c:	cmp	w2, #0x4
    5690:	mov	x29, sp
    5694:	stp	x19, x20, [sp, #16]
    5698:	mov	w19, w2
    569c:	mov	x20, x1
    56a0:	stp	x21, x22, [sp, #32]
    56a4:	mov	x21, x0
    56a8:	b.eq	5700 <check_set_max_msg_size@@Base+0xb20>  // b.none
    56ac:	cbnz	w19, 570c <check_set_max_msg_size@@Base+0xb2c>
    56b0:	ldr	x20, [x20, #16]
    56b4:	mov	x0, x20
    56b8:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    56bc:	b	56dc <check_set_max_msg_size@@Base+0xafc>
    56c0:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    56c4:	mov	x1, x0
    56c8:	mov	w2, w19
    56cc:	mov	x0, x21
    56d0:	bl	5608 <check_set_max_msg_size@@Base+0xa28>
    56d4:	mov	x0, x20
    56d8:	bl	3520 <_ck_assert_failed@@Base+0x498>
    56dc:	mov	x0, x20
    56e0:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    56e4:	mov	w1, w0
    56e8:	mov	x0, x20
    56ec:	cbz	w1, 56c0 <check_set_max_msg_size@@Base+0xae0>
    56f0:	ldp	x19, x20, [sp, #16]
    56f4:	ldp	x21, x22, [sp, #32]
    56f8:	ldp	x29, x30, [sp], #48
    56fc:	ret
    5700:	bl	5570 <check_set_max_msg_size@@Base+0x990>
    5704:	mov	w19, w0
    5708:	cbz	w19, 56b0 <check_set_max_msg_size@@Base+0xad0>
    570c:	mov	x0, x20
    5710:	bl	6890 <check_waitpid_and_exit@@Base+0x240>
    5714:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5718:	mov	x2, x0
    571c:	add	x1, x1, #0xb8
    5720:	mov	x22, x0
    5724:	mov	x0, x21
    5728:	bl	2530 <fprintf@plt>
    572c:	mov	x0, x22
    5730:	bl	23e0 <free@plt>
    5734:	b	56b0 <check_set_max_msg_size@@Base+0xad0>

0000000000005738 <srunner_print@@Base>:
    5738:	adrp	x3, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    573c:	mov	w2, w1
    5740:	mov	x1, x0
    5744:	ldr	x3, [x3, #4008]
    5748:	ldr	x0, [x3]
    574c:	b	5688 <check_set_max_msg_size@@Base+0xaa8>
    5750:	stp	x29, x30, [sp, #-48]!
    5754:	mov	x29, sp
    5758:	str	x0, [sp, #16]
    575c:	str	w1, [sp, #28]
    5760:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    5764:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    5768:	ldr	x0, [x0, #4048]
    576c:	str	x0, [sp, #32]
    5770:	ldr	x0, [sp, #16]
    5774:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    5778:	cbz	w0, 5784 <srunner_print@@Base+0x4c>
    577c:	ldp	x29, x30, [sp], #48
    5780:	ret
    5784:	ldr	x0, [sp, #16]
    5788:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    578c:	mov	x1, x0
    5790:	mov	w0, #0x3                   	// #3
    5794:	str	x1, [sp, #40]
    5798:	bl	4420 <srunner_has_tap@@Base+0x890>
    579c:	ldr	w0, [sp, #28]
    57a0:	cmp	w0, #0x2
    57a4:	b.eq	57c0 <srunner_print@@Base+0x88>  // b.none
    57a8:	ldr	x0, [sp, #40]
    57ac:	ldr	x0, [x0, #8]
    57b0:	blr	x0
    57b4:	ldr	x0, [sp, #16]
    57b8:	bl	3520 <_ck_assert_failed@@Base+0x498>
    57bc:	b	5770 <srunner_print@@Base+0x38>
    57c0:	ldr	x0, [sp, #32]
    57c4:	bl	2170 <_setjmp@plt>
    57c8:	cbnz	w0, 577c <srunner_print@@Base+0x44>
    57cc:	b	57a8 <srunner_print@@Base+0x70>
    57d0:	stp	x29, x30, [sp, #-64]!
    57d4:	mov	x29, sp
    57d8:	stp	x19, x20, [sp, #16]
    57dc:	stp	x21, x22, [sp, #32]
    57e0:	mov	w21, w1
    57e4:	str	x23, [sp, #48]
    57e8:	mov	w23, w0
    57ec:	mov	x0, #0x64                  	// #100
    57f0:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    57f4:	mov	x19, x0
    57f8:	mov	w0, w23
    57fc:	bl	24a0 <strsignal@plt>
    5800:	bl	2300 <strdup@plt>
    5804:	mov	x22, x0
    5808:	mov	w0, w21
    580c:	bl	24a0 <strsignal@plt>
    5810:	bl	2300 <strdup@plt>
    5814:	mov	x20, x0
    5818:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    581c:	ldr	w0, [x1, #760]
    5820:	cbz	w0, 5868 <srunner_print@@Base+0x130>
    5824:	adrp	x2, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5828:	mov	w3, w21
    582c:	mov	x4, x20
    5830:	add	x2, x2, #0xc0
    5834:	mov	x0, x19
    5838:	mov	x1, #0x64                  	// #100
    583c:	bl	2230 <snprintf@plt>
    5840:	mov	x0, x22
    5844:	bl	23e0 <free@plt>
    5848:	mov	x0, x20
    584c:	bl	23e0 <free@plt>
    5850:	mov	x0, x19
    5854:	ldp	x19, x20, [sp, #16]
    5858:	ldp	x21, x22, [sp, #32]
    585c:	ldr	x23, [sp, #48]
    5860:	ldp	x29, x30, [sp], #64
    5864:	ret
    5868:	mov	w5, w21
    586c:	mov	w3, w23
    5870:	mov	x6, x20
    5874:	mov	x4, x22
    5878:	mov	x0, x19
    587c:	adrp	x2, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5880:	mov	x1, #0x64                  	// #100
    5884:	add	x2, x2, #0xf0
    5888:	bl	2230 <snprintf@plt>
    588c:	b	5840 <srunner_print@@Base+0x108>
    5890:	cmp	w0, #0xe
    5894:	b.eq	58d4 <srunner_print@@Base+0x19c>  // b.none
    5898:	stp	x29, x30, [sp, #-32]!
    589c:	cmp	w0, #0xf
    58a0:	mov	x29, sp
    58a4:	stp	x19, x20, [sp, #16]
    58a8:	mov	w19, w0
    58ac:	b.eq	58f0 <srunner_print@@Base+0x1b8>  // b.none
    58b0:	cmp	w0, #0x2
    58b4:	b.eq	5928 <srunner_print@@Base+0x1f0>  // b.none
    58b8:	mov	w3, w0
    58bc:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    58c0:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    58c4:	add	x1, x1, #0x120
    58c8:	add	x0, x0, #0x130
    58cc:	mov	w2, #0x8e                  	// #142
    58d0:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    58d4:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    58d8:	add	x2, x0, #0x2f8
    58dc:	mov	w3, #0x1                   	// #1
    58e0:	mov	w1, #0x9                   	// #9
    58e4:	str	w3, [x0, #760]
    58e8:	ldr	w0, [x2, #4]
    58ec:	b	2430 <killpg@plt>
    58f0:	adrp	x20, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    58f4:	add	x1, x20, #0x2f8
    58f8:	add	x20, x20, #0x2f8
    58fc:	mov	x2, #0x0                   	// #0
    5900:	add	x1, x1, #0xa0
    5904:	bl	2320 <sigaction@plt>
    5908:	mov	w1, w19
    590c:	ldr	w0, [x20, #4]
    5910:	bl	2430 <killpg@plt>
    5914:	bl	23f0 <getpgrp@plt>
    5918:	mov	w1, w19
    591c:	ldp	x19, x20, [sp, #16]
    5920:	ldp	x29, x30, [sp], #32
    5924:	b	2430 <killpg@plt>
    5928:	adrp	x20, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    592c:	add	x1, x20, #0x2f8
    5930:	add	x20, x20, #0x2f8
    5934:	mov	x2, #0x0                   	// #0
    5938:	add	x1, x1, #0x8
    593c:	bl	2320 <sigaction@plt>
    5940:	mov	w1, #0x9                   	// #9
    5944:	ldr	w0, [x20, #4]
    5948:	bl	2430 <killpg@plt>
    594c:	bl	23f0 <getpgrp@plt>
    5950:	mov	w1, w19
    5954:	ldp	x19, x20, [sp, #16]
    5958:	ldp	x29, x30, [sp], #32
    595c:	b	2430 <killpg@plt>
    5960:	stp	x29, x30, [sp, #-96]!
    5964:	cmp	w1, #0x1
    5968:	mov	x29, sp
    596c:	str	x19, [sp, #16]
    5970:	str	x0, [sp, #40]
    5974:	str	w1, [sp, #52]
    5978:	stp	x2, x3, [sp, #56]
    597c:	b.ne	5988 <srunner_print@@Base+0x250>  // b.any
    5980:	ldr	w0, [sp, #52]
    5984:	bl	4420 <srunner_has_tap@@Base+0x890>
    5988:	ldr	x0, [sp, #40]
    598c:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    5990:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    5994:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5998:	add	x1, x1, #0x168
    599c:	str	x1, [sp, #88]
    59a0:	ldr	x0, [x0, #4048]
    59a4:	str	x0, [sp, #72]
    59a8:	ldr	x0, [sp, #40]
    59ac:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    59b0:	cbnz	w0, 59e8 <srunner_print@@Base+0x2b0>
    59b4:	ldr	x0, [sp, #40]
    59b8:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    59bc:	str	x0, [sp, #80]
    59c0:	ldr	w1, [sp, #52]
    59c4:	cmp	w1, #0x2
    59c8:	b.eq	59fc <srunner_print@@Base+0x2c4>  // b.none
    59cc:	ldr	x0, [x0, #8]
    59d0:	blr	x0
    59d4:	ldr	x0, [sp, #40]
    59d8:	bl	3520 <_ck_assert_failed@@Base+0x498>
    59dc:	ldr	x0, [sp, #40]
    59e0:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    59e4:	cbz	w0, 59b4 <srunner_print@@Base+0x27c>
    59e8:	mov	x19, #0x0                   	// #0
    59ec:	mov	x0, x19
    59f0:	ldr	x19, [sp, #16]
    59f4:	ldp	x29, x30, [sp], #96
    59f8:	ret
    59fc:	mov	w0, #0x1                   	// #1
    5a00:	bl	4420 <srunner_has_tap@@Base+0x890>
    5a04:	ldr	x0, [sp, #72]
    5a08:	bl	2170 <_setjmp@plt>
    5a0c:	cbnz	w0, 5a1c <srunner_print@@Base+0x2e4>
    5a10:	ldr	x0, [sp, #80]
    5a14:	ldr	x0, [x0, #8]
    5a18:	blr	x0
    5a1c:	mov	w0, #0x0                   	// #0
    5a20:	bl	4588 <srunner_has_tap@@Base+0x9f8>
    5a24:	mov	x19, x0
    5a28:	cbz	x0, 5a80 <srunner_print@@Base+0x348>
    5a2c:	mov	x1, #0xffffffff00000000    	// #-4294967296
    5a30:	ldr	x0, [x0, #48]
    5a34:	stur	x1, [x19, #20]
    5a38:	ldr	x1, [sp, #56]
    5a3c:	str	x1, [x19, #32]
    5a40:	ldr	x1, [sp, #64]
    5a44:	str	x1, [x19, #40]
    5a48:	cbz	x0, 5a58 <srunner_print@@Base+0x320>
    5a4c:	mov	w0, #0x2                   	// #2
    5a50:	str	w0, [x19]
    5a54:	b	59ec <srunner_print@@Base+0x2b4>
    5a58:	ldr	x0, [sp, #88]
    5a5c:	bl	2300 <strdup@plt>
    5a60:	str	x0, [x19, #48]
    5a64:	ldr	x0, [x19, #8]
    5a68:	bl	23e0 <free@plt>
    5a6c:	ldr	x0, [x19, #48]
    5a70:	bl	23e0 <free@plt>
    5a74:	mov	x0, x19
    5a78:	bl	23e0 <free@plt>
    5a7c:	b	59d4 <srunner_print@@Base+0x29c>
    5a80:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5a84:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5a88:	add	x1, x1, #0x120
    5a8c:	add	x0, x0, #0x148
    5a90:	mov	w2, #0x1b8                 	// #440
    5a94:	bl	31a8 <_ck_assert_failed@@Base+0x120>

0000000000005a98 <srunner_fork_status@@Base>:
    5a98:	ldr	w0, [x0, #56]
    5a9c:	cbz	w0, 5aa4 <srunner_fork_status@@Base+0xc>
    5aa0:	ret
    5aa4:	stp	x29, x30, [sp, #-16]!
    5aa8:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5aac:	add	x0, x0, #0x170
    5ab0:	mov	x29, sp
    5ab4:	bl	24e0 <getenv@plt>
    5ab8:	cbz	x0, 5ae4 <srunner_fork_status@@Base+0x4c>
    5abc:	ldrb	w1, [x0]
    5ac0:	cmp	w1, #0x6e
    5ac4:	b.ne	5ae4 <srunner_fork_status@@Base+0x4c>  // b.any
    5ac8:	ldrb	w1, [x0, #1]
    5acc:	cmp	w1, #0x6f
    5ad0:	b.ne	5ae4 <srunner_fork_status@@Base+0x4c>  // b.any
    5ad4:	ldrb	w0, [x0, #2]
    5ad8:	cbnz	w0, 5ae4 <srunner_fork_status@@Base+0x4c>
    5adc:	mov	w0, #0x2                   	// #2
    5ae0:	b	5ae8 <srunner_fork_status@@Base+0x50>
    5ae4:	mov	w0, #0x1                   	// #1
    5ae8:	ldp	x29, x30, [sp], #16
    5aec:	ret
    5af0:	movi	v0.4s, #0x0
    5af4:	stp	x29, x30, [sp, #-112]!
    5af8:	mov	x29, sp
    5afc:	stp	x19, x20, [sp, #16]
    5b00:	mov	x20, x1
    5b04:	stp	x21, x22, [sp, #32]
    5b08:	str	x2, [sp, #56]
    5b0c:	str	w3, [sp, #68]
    5b10:	str	x1, [sp, #72]
    5b14:	stp	q0, q0, [sp, #80]
    5b18:	ldr	x19, [x1, #48]
    5b1c:	bl	2210 <srunner_fork_status@plt>
    5b20:	ldr	x2, [x20]
    5b24:	mov	w1, w0
    5b28:	adrp	x3, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5b2c:	mov	x0, x19
    5b30:	add	x3, x3, #0x178
    5b34:	bl	5960 <srunner_print@@Base+0x228>
    5b38:	mov	x19, x0
    5b3c:	cbz	x0, 5b54 <srunner_fork_status@@Base+0xbc>
    5b40:	mov	x0, x19
    5b44:	ldp	x19, x20, [sp, #16]
    5b48:	ldp	x21, x22, [sp, #32]
    5b4c:	ldp	x29, x30, [sp], #112
    5b50:	ret
    5b54:	bl	3158 <_ck_assert_failed@@Base+0xd0>
    5b58:	add	x1, sp, #0x50
    5b5c:	bl	21f0 <clock_gettime@plt>
    5b60:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    5b64:	ldr	x0, [x0, #4048]
    5b68:	bl	2170 <_setjmp@plt>
    5b6c:	cbz	w0, 5c10 <srunner_fork_status@@Base+0x178>
    5b70:	bl	3158 <_ck_assert_failed@@Base+0xd0>
    5b74:	add	x1, sp, #0x60
    5b78:	bl	21f0 <clock_gettime@plt>
    5b7c:	ldr	x19, [sp, #72]
    5b80:	mov	w1, #0x2                   	// #2
    5b84:	ldr	x0, [x19, #56]
    5b88:	bl	5750 <srunner_print@@Base+0x18>
    5b8c:	ldp	x7, x3, [sp, #80]
    5b90:	mov	x2, #0xf7cf                	// #63439
    5b94:	ldp	x4, x1, [sp, #96]
    5b98:	movk	x2, #0xe353, lsl #16
    5b9c:	movk	x2, #0x9ba5, lsl #32
    5ba0:	mov	w6, #0x4240                	// #16960
    5ba4:	movk	x2, #0x20c4, lsl #48
    5ba8:	movk	w6, #0xf, lsl #16
    5bac:	mov	w0, #0x0                   	// #0
    5bb0:	ldr	x22, [x19]
    5bb4:	smulh	x5, x1, x2
    5bb8:	smulh	x2, x3, x2
    5bbc:	asr	x3, x3, #63
    5bc0:	asr	x5, x5, #7
    5bc4:	sub	x2, x3, x2, asr #7
    5bc8:	sub	x3, x4, x7
    5bcc:	ldr	x4, [sp, #56]
    5bd0:	sub	x1, x5, x1, asr #63
    5bd4:	add	w1, w1, w2
    5bd8:	ldr	x4, [x4]
    5bdc:	madd	w20, w6, w3, w1
    5be0:	ldr	x21, [x4]
    5be4:	bl	4588 <srunner_has_tap@@Base+0x9f8>
    5be8:	mov	x19, x0
    5bec:	cbz	x0, 5c58 <srunner_fork_status@@Base+0x1c0>
    5bf0:	ldr	x0, [x0, #48]
    5bf4:	stp	x22, x21, [x19, #32]
    5bf8:	ldr	w1, [sp, #68]
    5bfc:	stp	w1, w20, [x19, #20]
    5c00:	cbz	x0, 5c3c <srunner_fork_status@@Base+0x1a4>
    5c04:	mov	w0, #0x2                   	// #2
    5c08:	str	w0, [x19]
    5c0c:	b	5b40 <srunner_fork_status@@Base+0xa8>
    5c10:	ldr	x19, [sp, #56]
    5c14:	ldr	x2, [x19]
    5c18:	ldr	x0, [x2]
    5c1c:	ldr	x1, [x2, #16]
    5c20:	ldr	w2, [x2, #24]
    5c24:	bl	2120 <tcase_fn_start@plt>
    5c28:	ldr	x1, [x19]
    5c2c:	ldr	w0, [sp, #68]
    5c30:	ldr	x1, [x1, #8]
    5c34:	blr	x1
    5c38:	b	5b70 <srunner_fork_status@@Base+0xd8>
    5c3c:	mov	w0, #0x1                   	// #1
    5c40:	str	w0, [x19]
    5c44:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5c48:	add	x0, x0, #0x168
    5c4c:	bl	2300 <strdup@plt>
    5c50:	str	x0, [x19, #48]
    5c54:	b	5b40 <srunner_fork_status@@Base+0xa8>
    5c58:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5c5c:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5c60:	add	x1, x1, #0x120
    5c64:	add	x0, x0, #0x148
    5c68:	mov	w2, #0x1b8                 	// #440
    5c6c:	bl	31a8 <_ck_assert_failed@@Base+0x120>

0000000000005c70 <srunner_set_fork_status@@Base>:
    5c70:	str	w1, [x0, #56]
    5c74:	ret

0000000000005c78 <srunner_run_tagged@@Base>:
    5c78:	stp	x29, x30, [sp, #-304]!
    5c7c:	mov	x29, sp
    5c80:	stp	x19, x20, [sp, #16]
    5c84:	mov	x19, x0
    5c88:	stp	x21, x22, [sp, #32]
    5c8c:	mov	x21, x2
    5c90:	stp	x23, x24, [sp, #48]
    5c94:	mov	w23, w5
    5c98:	stp	x27, x28, [sp, #80]
    5c9c:	mov	x27, x1
    5ca0:	stp	x3, x4, [sp, #96]
    5ca4:	cbz	x2, 63d8 <srunner_run_tagged@@Base+0x760>
    5ca8:	cbz	x27, 63f0 <srunner_run_tagged@@Base+0x778>
    5cac:	ldr	x0, [sp, #96]
    5cb0:	cbz	x0, 6408 <srunner_run_tagged@@Base+0x790>
    5cb4:	ldr	x0, [sp, #104]
    5cb8:	cbz	x0, 6420 <srunner_run_tagged@@Base+0x7a8>
    5cbc:	cbz	x19, 5ecc <srunner_run_tagged@@Base+0x254>
    5cc0:	stp	x25, x26, [sp, #64]
    5cc4:	cmp	w23, #0x4
    5cc8:	b.hi	65ac <srunner_run_tagged@@Base+0x934>  // b.pmore
    5ccc:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    5cd0:	add	x20, x0, #0x2f8
    5cd4:	add	x3, sp, #0xe8
    5cd8:	str	x3, [sp, #152]
    5cdc:	add	x3, sp, #0x110
    5ce0:	add	x2, x20, #0x1d0
    5ce4:	stp	xzr, xzr, [x20, #320]
    5ce8:	add	x1, x20, #0x138
    5cec:	adrp	x22, 5000 <check_set_max_msg_size@@Base+0x420>
    5cf0:	stp	xzr, xzr, [x20, #336]
    5cf4:	add	x22, x22, #0x890
    5cf8:	mov	w0, #0xe                   	// #14
    5cfc:	stp	xzr, xzr, [x20, #352]
    5d00:	stp	xzr, xzr, [x20, #368]
    5d04:	stp	xzr, xzr, [x20, #384]
    5d08:	stp	xzr, xzr, [x20, #400]
    5d0c:	stp	xzr, xzr, [x20, #416]
    5d10:	stp	xzr, xzr, [x20, #432]
    5d14:	stp	xzr, xzr, [x20, #448]
    5d18:	str	x3, [sp, #160]
    5d1c:	str	x22, [x20, #312]
    5d20:	bl	2320 <sigaction@plt>
    5d24:	add	x4, x20, #0x270
    5d28:	add	x2, x20, #0x8
    5d2c:	add	x1, x20, #0x268
    5d30:	mov	w0, #0x2                   	// #2
    5d34:	str	x22, [x20, #616]
    5d38:	stp	xzr, xzr, [x4]
    5d3c:	stp	xzr, xzr, [x4, #16]
    5d40:	stp	xzr, xzr, [x4, #32]
    5d44:	stp	xzr, xzr, [x4, #48]
    5d48:	stp	xzr, xzr, [x4, #64]
    5d4c:	stp	xzr, xzr, [x4, #80]
    5d50:	stp	xzr, xzr, [x4, #96]
    5d54:	stp	xzr, xzr, [x4, #112]
    5d58:	stp	xzr, xzr, [x4, #128]
    5d5c:	bl	2320 <sigaction@plt>
    5d60:	str	x22, [x20, #768]
    5d64:	add	x4, x20, #0x308
    5d68:	add	x2, x20, #0xa0
    5d6c:	add	x1, x20, #0x300
    5d70:	mov	w0, #0xf                   	// #15
    5d74:	stp	xzr, xzr, [x4]
    5d78:	stp	xzr, xzr, [x4, #16]
    5d7c:	stp	xzr, xzr, [x4, #32]
    5d80:	stp	xzr, xzr, [x4, #48]
    5d84:	stp	xzr, xzr, [x4, #64]
    5d88:	stp	xzr, xzr, [x4, #80]
    5d8c:	stp	xzr, xzr, [x4, #96]
    5d90:	stp	xzr, xzr, [x4, #112]
    5d94:	stp	xzr, xzr, [x4, #128]
    5d98:	bl	2320 <sigaction@plt>
    5d9c:	mov	x0, x19
    5da0:	bl	2210 <srunner_fork_status@plt>
    5da4:	bl	3040 <tr_tcname@@Base+0x8>
    5da8:	bl	47d8 <srunner_has_tap@@Base+0xc48>
    5dac:	mov	w1, w23
    5db0:	mov	x0, x19
    5db4:	bl	40e0 <srunner_has_tap@@Base+0x550>
    5db8:	mov	x0, x19
    5dbc:	bl	3c20 <srunner_has_tap@@Base+0x90>
    5dc0:	ldr	x0, [sp, #96]
    5dc4:	ldr	x26, [x19]
    5dc8:	bl	2830 <tcase_create@@Base+0x138>
    5dcc:	str	x0, [sp, #112]
    5dd0:	ldr	x0, [sp, #104]
    5dd4:	bl	2830 <tcase_create@@Base+0x138>
    5dd8:	str	x0, [sp, #120]
    5ddc:	mov	x0, x26
    5de0:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    5de4:	mov	x0, x26
    5de8:	str	x27, [sp, #128]
    5dec:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    5df0:	cbnz	w0, 5e3c <srunner_run_tagged@@Base+0x1c4>
    5df4:	mov	x0, x26
    5df8:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    5dfc:	mov	x23, x0
    5e00:	ldr	x0, [sp, #128]
    5e04:	cbz	x0, 5e14 <srunner_run_tagged@@Base+0x19c>
    5e08:	ldr	x1, [x23]
    5e0c:	bl	2380 <strcmp@plt>
    5e10:	cbnz	w0, 5e28 <srunner_run_tagged@@Base+0x1b0>
    5e14:	cbz	x21, 5ee4 <srunner_run_tagged@@Base+0x26c>
    5e18:	mov	x1, x21
    5e1c:	mov	x0, x23
    5e20:	bl	2410 <suite_tcase@plt>
    5e24:	cbnz	w0, 5ee4 <srunner_run_tagged@@Base+0x26c>
    5e28:	mov	x0, x26
    5e2c:	bl	3520 <_ck_assert_failed@@Base+0x498>
    5e30:	mov	x0, x26
    5e34:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    5e38:	cbz	w0, 5df4 <srunner_run_tagged@@Base+0x17c>
    5e3c:	adrp	x21, 18000 <check_waitpid_and_exit@@Base+0x119b0>
    5e40:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    5e44:	ldr	x22, [sp, #112]
    5e48:	add	x20, x1, #0x2f8
    5e4c:	ldr	x21, [x21, #4040]
    5e50:	mov	x0, x22
    5e54:	mov	x1, x21
    5e58:	bl	3558 <_ck_assert_failed@@Base+0x4d0>
    5e5c:	mov	x1, x21
    5e60:	ldr	x21, [sp, #120]
    5e64:	mov	x0, x21
    5e68:	bl	3558 <_ck_assert_failed@@Base+0x4d0>
    5e6c:	mov	x0, x22
    5e70:	bl	34c0 <_ck_assert_failed@@Base+0x438>
    5e74:	mov	x0, x21
    5e78:	bl	34c0 <_ck_assert_failed@@Base+0x438>
    5e7c:	mov	x0, x19
    5e80:	bl	3ca0 <srunner_has_tap@@Base+0x110>
    5e84:	mov	x0, x19
    5e88:	bl	4228 <srunner_has_tap@@Base+0x698>
    5e8c:	bl	4460 <srunner_has_tap@@Base+0x8d0>
    5e90:	mov	w0, #0x1                   	// #1
    5e94:	bl	3040 <tr_tcname@@Base+0x8>
    5e98:	add	x1, x20, #0x1d0
    5e9c:	mov	x2, #0x0                   	// #0
    5ea0:	mov	w0, #0xe                   	// #14
    5ea4:	bl	2320 <sigaction@plt>
    5ea8:	add	x1, x20, #0x8
    5eac:	mov	x2, #0x0                   	// #0
    5eb0:	mov	w0, #0x2                   	// #2
    5eb4:	bl	2320 <sigaction@plt>
    5eb8:	add	x1, x20, #0xa0
    5ebc:	mov	x2, #0x0                   	// #0
    5ec0:	mov	w0, #0xf                   	// #15
    5ec4:	bl	2320 <sigaction@plt>
    5ec8:	ldp	x25, x26, [sp, #64]
    5ecc:	ldp	x19, x20, [sp, #16]
    5ed0:	ldp	x21, x22, [sp, #32]
    5ed4:	ldp	x23, x24, [sp, #48]
    5ed8:	ldp	x27, x28, [sp, #80]
    5edc:	ldp	x29, x30, [sp], #304
    5ee0:	ret
    5ee4:	mov	x1, x23
    5ee8:	mov	x0, x19
    5eec:	bl	3d20 <srunner_has_tap@@Base+0x190>
    5ef0:	ldr	x25, [x23, #8]
    5ef4:	mov	x0, x25
    5ef8:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    5efc:	mov	x0, x25
    5f00:	stp	x26, x23, [sp, #136]
    5f04:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    5f08:	cbnz	w0, 5fe4 <srunner_run_tagged@@Base+0x36c>
    5f0c:	mov	x0, x25
    5f10:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    5f14:	mov	x20, x0
    5f18:	cbz	x21, 5f2c <srunner_run_tagged@@Base+0x2b4>
    5f1c:	ldr	x1, [x20]
    5f20:	mov	x0, x21
    5f24:	bl	2380 <strcmp@plt>
    5f28:	cbnz	w0, 5fd0 <srunner_run_tagged@@Base+0x358>
    5f2c:	ldr	x0, [sp, #96]
    5f30:	cbz	x0, 5f44 <srunner_run_tagged@@Base+0x2cc>
    5f34:	ldr	x1, [sp, #112]
    5f38:	mov	x0, x20
    5f3c:	bl	28f8 <tcase_set_tags@@Base+0x48>
    5f40:	cbz	w0, 5fd0 <srunner_run_tagged@@Base+0x358>
    5f44:	ldr	x0, [sp, #104]
    5f48:	cbz	x0, 5f5c <srunner_run_tagged@@Base+0x2e4>
    5f4c:	ldr	x1, [sp, #120]
    5f50:	mov	x0, x20
    5f54:	bl	28f8 <tcase_set_tags@@Base+0x48>
    5f58:	cbnz	w0, 5fd0 <srunner_run_tagged@@Base+0x358>
    5f5c:	mov	w0, #0x2                   	// #2
    5f60:	bl	3040 <tr_tcname@@Base+0x8>
    5f64:	ldr	x2, [x20]
    5f68:	adrp	x3, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    5f6c:	ldr	x0, [x20, #32]
    5f70:	add	x3, x3, #0x1f8
    5f74:	mov	w1, #0x2                   	// #2
    5f78:	bl	5960 <srunner_print@@Base+0x228>
    5f7c:	mov	x22, x0
    5f80:	mov	x0, x19
    5f84:	bl	2210 <srunner_fork_status@plt>
    5f88:	bl	3040 <tr_tcname@@Base+0x8>
    5f8c:	cbz	x22, 5ff8 <srunner_run_tagged@@Base+0x380>
    5f90:	ldr	w0, [x22]
    5f94:	cmp	w0, #0x1
    5f98:	b.eq	5ff8 <srunner_run_tagged@@Base+0x380>  // b.none
    5f9c:	ldr	x0, [x19, #16]
    5fa0:	mov	x1, x22
    5fa4:	bl	3410 <_ck_assert_failed@@Base+0x388>
    5fa8:	ldr	x0, [x19, #8]
    5fac:	ldr	w2, [x22]
    5fb0:	ldr	w1, [x0]
    5fb4:	cmp	w2, #0x2
    5fb8:	add	w1, w1, #0x1
    5fbc:	str	w1, [x0]
    5fc0:	b.eq	63a4 <srunner_run_tagged@@Base+0x72c>  // b.none
    5fc4:	cmp	w2, #0x3
    5fc8:	b.eq	6434 <srunner_run_tagged@@Base+0x7bc>  // b.none
    5fcc:	nop
    5fd0:	mov	x0, x25
    5fd4:	bl	3520 <_ck_assert_failed@@Base+0x498>
    5fd8:	mov	x0, x25
    5fdc:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    5fe0:	cbz	w0, 5f0c <srunner_run_tagged@@Base+0x294>
    5fe4:	ldp	x26, x23, [sp, #136]
    5fe8:	mov	x0, x19
    5fec:	mov	x1, x23
    5ff0:	bl	3da8 <srunner_has_tap@@Base+0x218>
    5ff4:	b	5e28 <srunner_run_tagged@@Base+0x1b0>
    5ff8:	ldr	x27, [x20, #24]
    5ffc:	add	x28, sp, #0xe4
    6000:	mov	x0, x27
    6004:	bl	34a8 <_ck_assert_failed@@Base+0x420>
    6008:	stp	x25, x21, [sp, #184]
    600c:	mov	x0, x27
    6010:	bl	3480 <_ck_assert_failed@@Base+0x3f8>
    6014:	cbnz	w0, 652c <srunner_run_tagged@@Base+0x8b4>
    6018:	mov	x0, x27
    601c:	bl	34f0 <_ck_assert_failed@@Base+0x468>
    6020:	mov	x22, x0
    6024:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    6028:	add	x0, x1, #0x258
    602c:	str	x0, [sp, #168]
    6030:	ldr	w24, [x22, #8]
    6034:	ldr	w0, [x22, #12]
    6038:	cmp	w24, w0
    603c:	b.ge	6198 <srunner_run_tagged@@Base+0x520>  // b.tcont
    6040:	str	x27, [sp, #176]
    6044:	mov	x2, x22
    6048:	mov	x1, x20
    604c:	mov	x0, x19
    6050:	bl	3e30 <srunner_has_tap@@Base+0x2a0>
    6054:	mov	x0, x19
    6058:	bl	2210 <srunner_fork_status@plt>
    605c:	cmp	w0, #0x1
    6060:	b.ne	6160 <srunner_run_tagged@@Base+0x4e8>  // b.any
    6064:	movi	v0.4s, #0x0
    6068:	str	wzr, [sp, #228]
    606c:	stp	q0, q0, [sp, #240]
    6070:	bl	2200 <fork@plt>
    6074:	mov	w21, w0
    6078:	cmn	w0, #0x1
    607c:	b.eq	6594 <srunner_run_tagged@@Base+0x91c>  // b.none
    6080:	cbnz	w0, 61a4 <srunner_run_tagged@@Base+0x52c>
    6084:	mov	w1, #0x0                   	// #0
    6088:	bl	23c0 <setpgid@plt>
    608c:	bl	23f0 <getpgrp@plt>
    6090:	mov	w2, w0
    6094:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    6098:	add	x1, x0, #0x2f8
    609c:	mov	x0, x19
    60a0:	ldr	x19, [x20, #48]
    60a4:	str	w2, [x1, #4]
    60a8:	bl	2210 <srunner_fork_status@plt>
    60ac:	mov	w1, w0
    60b0:	ldr	x2, [x20]
    60b4:	adrp	x3, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    60b8:	add	x3, x3, #0x178
    60bc:	mov	x0, x19
    60c0:	bl	5960 <srunner_print@@Base+0x228>
    60c4:	bl	23e0 <free@plt>
    60c8:	bl	3158 <_ck_assert_failed@@Base+0xd0>
    60cc:	add	x1, sp, #0xf0
    60d0:	bl	21f0 <clock_gettime@plt>
    60d4:	ldr	x2, [x22]
    60d8:	ldr	x0, [x2]
    60dc:	ldr	x1, [x2, #16]
    60e0:	ldr	w2, [x2, #24]
    60e4:	bl	2120 <tcase_fn_start@plt>
    60e8:	ldr	x1, [x22]
    60ec:	mov	w0, w24
    60f0:	ldr	x1, [x1, #8]
    60f4:	blr	x1
    60f8:	bl	3158 <_ck_assert_failed@@Base+0xd0>
    60fc:	add	x1, sp, #0x100
    6100:	bl	21f0 <clock_gettime@plt>
    6104:	ldr	x0, [x20, #56]
    6108:	mov	w1, #0x2                   	// #2
    610c:	bl	5750 <srunner_print@@Base+0x18>
    6110:	ldp	x4, x1, [sp, #256]
    6114:	mov	x2, #0xf7cf                	// #63439
    6118:	ldp	x0, x3, [sp, #240]
    611c:	movk	x2, #0xe353, lsl #16
    6120:	movk	x2, #0x9ba5, lsl #32
    6124:	mov	w6, #0x4240                	// #16960
    6128:	movk	x2, #0x20c4, lsl #48
    612c:	movk	w6, #0xf, lsl #16
    6130:	smulh	x5, x1, x2
    6134:	smulh	x2, x3, x2
    6138:	asr	x3, x3, #63
    613c:	sub	x0, x4, x0
    6140:	asr	x5, x5, #7
    6144:	sub	x1, x5, x1, asr #63
    6148:	sub	x2, x3, x2, asr #7
    614c:	add	w1, w1, w2
    6150:	madd	w0, w6, w0, w1
    6154:	bl	4380 <srunner_has_tap@@Base+0x7f0>
    6158:	mov	w0, #0x0                   	// #0
    615c:	bl	2160 <exit@plt>
    6160:	cmp	w0, #0x2
    6164:	b.ne	657c <srunner_run_tagged@@Base+0x904>  // b.any
    6168:	mov	w3, w24
    616c:	mov	x2, x22
    6170:	mov	x1, x20
    6174:	mov	x0, x19
    6178:	bl	5af0 <srunner_fork_status@@Base+0x58>
    617c:	mov	x23, x0
    6180:	cbnz	x0, 62d8 <srunner_run_tagged@@Base+0x660>
    6184:	ldr	w0, [x22, #12]
    6188:	add	w24, w24, #0x1
    618c:	cmp	w24, w0
    6190:	b.lt	6044 <srunner_run_tagged@@Base+0x3cc>  // b.tstop
    6194:	ldr	x27, [sp, #176]
    6198:	mov	x0, x27
    619c:	bl	3520 <_ck_assert_failed@@Base+0x498>
    61a0:	b	600c <srunner_run_tagged@@Base+0x394>
    61a4:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    61a8:	add	x0, x0, #0x2f8
    61ac:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    61b0:	str	wzr, [x1, #760]
    61b4:	str	w21, [x0, #4]
    61b8:	bl	3158 <_ck_assert_failed@@Base+0xd0>
    61bc:	ldr	x2, [sp, #152]
    61c0:	mov	x1, #0x0                   	// #0
    61c4:	bl	2370 <timer_create@plt>
    61c8:	cbnz	w0, 65e0 <srunner_run_tagged@@Base+0x968>
    61cc:	ldp	x4, x5, [x20, #8]
    61d0:	mov	x3, #0x0                   	// #0
    61d4:	movi	v0.4s, #0x0
    61d8:	mov	w1, #0x0                   	// #0
    61dc:	ldr	x2, [sp, #160]
    61e0:	stp	x4, x5, [sp, #288]
    61e4:	ldr	x0, [sp, #232]
    61e8:	str	q0, [sp, #272]
    61ec:	bl	2280 <timer_settime@plt>
    61f0:	cbnz	w0, 65c8 <srunner_run_tagged@@Base+0x950>
    61f4:	nop
    61f8:	mov	x1, x28
    61fc:	mov	w0, w21
    6200:	mov	w2, #0x0                   	// #0
    6204:	bl	2510 <waitpid@plt>
    6208:	cmn	w0, #0x1
    620c:	b.eq	61f8 <srunner_run_tagged@@Base+0x580>  // b.none
    6210:	ldr	x0, [sp, #232]
    6214:	bl	2400 <timer_delete@plt>
    6218:	mov	w0, w21
    621c:	mov	w1, #0x9                   	// #9
    6220:	bl	2430 <killpg@plt>
    6224:	ldr	w27, [x22, #16]
    6228:	ldr	w0, [sp, #228]
    622c:	ldr	x4, [x22]
    6230:	and	w25, w0, #0x7f
    6234:	add	w2, w25, #0x1
    6238:	ldr	x1, [x20]
    623c:	sbfx	x21, x2, #1, #7
    6240:	cmp	w21, #0x0
    6244:	ccmp	w27, w25, #0x4, gt
    6248:	ldr	x26, [x4]
    624c:	b.ne	6318 <srunner_run_tagged@@Base+0x6a0>  // b.any
    6250:	cmp	w25, #0x0
    6254:	str	x1, [sp, #208]
    6258:	cset	w7, eq  // eq = none
    625c:	tst	x0, #0xff00
    6260:	asr	w1, w0, #8
    6264:	ccmp	w7, #0x0, #0x4, ne  // ne = any
    6268:	ldrsb	w0, [x22, #20]
    626c:	str	w7, [sp, #200]
    6270:	stp	w1, w0, [sp, #216]
    6274:	cset	w0, ne  // ne = any
    6278:	bl	4588 <srunner_has_tap@@Base+0x9f8>
    627c:	mov	x23, x0
    6280:	ldr	w7, [sp, #200]
    6284:	ldr	x1, [sp, #208]
    6288:	cbz	x0, 64c8 <srunner_run_tagged@@Base+0x850>
    628c:	str	w24, [x0, #20]
    6290:	cmp	w21, #0x0
    6294:	stp	x1, x26, [x0, #32]
    6298:	b.gt	648c <srunner_run_tagged@@Base+0x814>
    629c:	ldrsb	w21, [sp, #216]
    62a0:	cbnz	w27, 644c <srunner_run_tagged@@Base+0x7d4>
    62a4:	ldr	w0, [sp, #220]
    62a8:	cmp	w7, #0x0
    62ac:	ccmp	w0, w21, #0x0, ne  // ne = any
    62b0:	b.ne	64e0 <srunner_run_tagged@@Base+0x868>  // b.any
    62b4:	ldr	x0, [x23, #48]
    62b8:	mov	w1, #0x1                   	// #1
    62bc:	str	w1, [x23]
    62c0:	cbz	x0, 62c8 <srunner_run_tagged@@Base+0x650>
    62c4:	bl	23e0 <free@plt>
    62c8:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    62cc:	add	x0, x0, #0x168
    62d0:	bl	2300 <strdup@plt>
    62d4:	str	x0, [x23, #48]
    62d8:	ldr	x0, [x19, #16]
    62dc:	mov	x1, x23
    62e0:	bl	3410 <_ck_assert_failed@@Base+0x388>
    62e4:	ldr	x0, [x19, #8]
    62e8:	ldr	w2, [x23]
    62ec:	ldr	w1, [x0]
    62f0:	cmp	w2, #0x2
    62f4:	add	w1, w1, #0x1
    62f8:	str	w1, [x0]
    62fc:	b.eq	6388 <srunner_run_tagged@@Base+0x710>  // b.none
    6300:	cmp	w2, #0x3
    6304:	b.eq	63bc <srunner_run_tagged@@Base+0x744>  // b.none
    6308:	mov	x1, x23
    630c:	mov	x0, x19
    6310:	bl	3ed8 <srunner_has_tap@@Base+0x348>
    6314:	b	6184 <srunner_run_tagged@@Base+0x50c>
    6318:	mov	w0, #0x1                   	// #1
    631c:	str	x1, [sp, #200]
    6320:	bl	4588 <srunner_has_tap@@Base+0x9f8>
    6324:	mov	x23, x0
    6328:	ldr	x1, [sp, #200]
    632c:	cbz	x0, 64c8 <srunner_run_tagged@@Base+0x850>
    6330:	str	w24, [x23, #20]
    6334:	stp	x1, x26, [x23, #32]
    6338:	ldr	x0, [x23, #48]
    633c:	cbnz	w27, 64a4 <srunner_run_tagged@@Base+0x82c>
    6340:	mov	w1, #0x3                   	// #3
    6344:	str	w1, [x23]
    6348:	cbz	x0, 6350 <srunner_run_tagged@@Base+0x6d8>
    634c:	bl	23e0 <free@plt>
    6350:	mov	x0, #0x64                  	// #100
    6354:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    6358:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    635c:	mov	x21, x0
    6360:	ldr	w1, [x1, #760]
    6364:	cbz	w1, 6504 <srunner_run_tagged@@Base+0x88c>
    6368:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    636c:	add	x0, x0, #0x240
    6370:	ldp	x2, x3, [x0]
    6374:	stp	x2, x3, [x21]
    6378:	ldur	x0, [x0, #13]
    637c:	stur	x0, [x21, #13]
    6380:	str	x21, [x23, #48]
    6384:	b	62d8 <srunner_run_tagged@@Base+0x660>
    6388:	ldr	w1, [x0, #4]
    638c:	add	w1, w1, #0x1
    6390:	str	w1, [x0, #4]
    6394:	mov	x1, x23
    6398:	mov	x0, x19
    639c:	bl	3ed8 <srunner_has_tap@@Base+0x348>
    63a0:	b	6184 <srunner_run_tagged@@Base+0x50c>
    63a4:	ldr	w1, [x0, #4]
    63a8:	add	w1, w1, #0x1
    63ac:	str	w1, [x0, #4]
    63b0:	mov	x0, x25
    63b4:	bl	3520 <_ck_assert_failed@@Base+0x498>
    63b8:	b	5fd8 <srunner_run_tagged@@Base+0x360>
    63bc:	ldr	w1, [x0, #8]
    63c0:	add	w1, w1, #0x1
    63c4:	str	w1, [x0, #8]
    63c8:	mov	x1, x23
    63cc:	mov	x0, x19
    63d0:	bl	3ed8 <srunner_has_tap@@Base+0x348>
    63d4:	b	6184 <srunner_run_tagged@@Base+0x50c>
    63d8:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    63dc:	add	x0, x0, #0x188
    63e0:	bl	24e0 <getenv@plt>
    63e4:	mov	x21, x0
    63e8:	cbnz	x27, 5cac <srunner_run_tagged@@Base+0x34>
    63ec:	nop
    63f0:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    63f4:	add	x0, x0, #0x198
    63f8:	bl	24e0 <getenv@plt>
    63fc:	mov	x27, x0
    6400:	ldr	x0, [sp, #96]
    6404:	cbnz	x0, 5cb4 <srunner_run_tagged@@Base+0x3c>
    6408:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    640c:	add	x0, x0, #0x1a8
    6410:	bl	24e0 <getenv@plt>
    6414:	str	x0, [sp, #96]
    6418:	ldr	x0, [sp, #104]
    641c:	cbnz	x0, 5cbc <srunner_run_tagged@@Base+0x44>
    6420:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    6424:	add	x0, x0, #0x1b8
    6428:	bl	24e0 <getenv@plt>
    642c:	str	x0, [sp, #104]
    6430:	b	5cbc <srunner_run_tagged@@Base+0x44>
    6434:	ldr	w1, [x0, #8]
    6438:	add	w1, w1, #0x1
    643c:	str	w1, [x0, #8]
    6440:	mov	x0, x25
    6444:	bl	3520 <_ck_assert_failed@@Base+0x498>
    6448:	b	5fd8 <srunner_run_tagged@@Base+0x360>
    644c:	cbnz	w25, 62d8 <srunner_run_tagged@@Base+0x660>
    6450:	ldr	x0, [x0, #48]
    6454:	cbz	x0, 645c <srunner_run_tagged@@Base+0x7e4>
    6458:	bl	23e0 <free@plt>
    645c:	mov	x0, #0x64                  	// #100
    6460:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    6464:	mov	w3, w21
    6468:	adrp	x2, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    646c:	mov	x21, x0
    6470:	add	x2, x2, #0x270
    6474:	mov	x1, #0x64                  	// #100
    6478:	bl	2230 <snprintf@plt>
    647c:	mov	w0, #0x2                   	// #2
    6480:	str	w0, [x23]
    6484:	str	x21, [x23, #48]
    6488:	b	62d8 <srunner_run_tagged@@Base+0x660>
    648c:	cmp	w27, w25
    6490:	ldr	x0, [x0, #48]
    6494:	b.ne	6338 <srunner_run_tagged@@Base+0x6c0>  // b.any
    6498:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    649c:	ldr	w2, [x1, #760]
    64a0:	cbz	w2, 62b8 <srunner_run_tagged@@Base+0x640>
    64a4:	mov	w2, #0x3                   	// #3
    64a8:	str	w2, [x23]
    64ac:	cbz	x0, 64b4 <srunner_run_tagged@@Base+0x83c>
    64b0:	bl	23e0 <free@plt>
    64b4:	mov	w1, w27
    64b8:	mov	w0, w25
    64bc:	bl	57d0 <srunner_print@@Base+0x98>
    64c0:	str	x0, [x23, #48]
    64c4:	b	62d8 <srunner_run_tagged@@Base+0x660>
    64c8:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    64cc:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    64d0:	add	x1, x1, #0x120
    64d4:	add	x0, x0, #0x148
    64d8:	mov	w2, #0x22c                 	// #556
    64dc:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    64e0:	ldr	w0, [sp, #220]
    64e4:	cmp	w7, #0x0
    64e8:	ccmp	w0, w21, #0x4, ne  // ne = any
    64ec:	b.eq	62d8 <srunner_run_tagged@@Base+0x660>  // b.none
    64f0:	ldr	x0, [x23, #48]
    64f4:	cbz	x0, 654c <srunner_run_tagged@@Base+0x8d4>
    64f8:	mov	w0, #0x2                   	// #2
    64fc:	str	w0, [x23]
    6500:	b	62d8 <srunner_run_tagged@@Base+0x660>
    6504:	mov	w0, w25
    6508:	bl	24a0 <strsignal@plt>
    650c:	ldr	x2, [sp, #168]
    6510:	mov	x4, x0
    6514:	mov	w3, w25
    6518:	mov	x0, x21
    651c:	mov	x1, #0x64                  	// #100
    6520:	bl	2230 <snprintf@plt>
    6524:	str	x21, [x23, #48]
    6528:	b	62d8 <srunner_run_tagged@@Base+0x660>
    652c:	ldr	x20, [x20, #40]
    6530:	mov	x0, x19
    6534:	ldp	x25, x21, [sp, #184]
    6538:	bl	2210 <srunner_fork_status@plt>
    653c:	mov	w1, w0
    6540:	mov	x0, x20
    6544:	bl	5750 <srunner_print@@Base+0x18>
    6548:	b	5fd0 <srunner_run_tagged@@Base+0x358>
    654c:	mov	w0, #0x3                   	// #3
    6550:	str	w0, [x23]
    6554:	mov	x0, #0x64                  	// #100
    6558:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    655c:	mov	w3, w21
    6560:	adrp	x2, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    6564:	mov	x21, x0
    6568:	add	x2, x2, #0x270
    656c:	mov	x1, #0x64                  	// #100
    6570:	bl	2230 <snprintf@plt>
    6574:	str	x21, [x23, #48]
    6578:	b	62d8 <srunner_run_tagged@@Base+0x660>
    657c:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    6580:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    6584:	add	x1, x1, #0x120
    6588:	add	x0, x0, #0x2b0
    658c:	mov	w2, #0x10b                 	// #267
    6590:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    6594:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    6598:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    659c:	add	x1, x1, #0x120
    65a0:	add	x0, x0, #0x208
    65a4:	mov	w2, #0x1e5                 	// #485
    65a8:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    65ac:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    65b0:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    65b4:	mov	w3, w23
    65b8:	add	x1, x1, #0x120
    65bc:	add	x0, x0, #0x1c8
    65c0:	mov	w2, #0x31e                 	// #798
    65c4:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    65c8:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    65cc:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    65d0:	add	x1, x1, #0x120
    65d4:	add	x0, x0, #0x220
    65d8:	mov	w2, #0x210                 	// #528
    65dc:	bl	31a8 <_ck_assert_failed@@Base+0x120>
    65e0:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    65e4:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    65e8:	add	x1, x1, #0x120
    65ec:	add	x0, x0, #0x290
    65f0:	mov	w2, #0x218                 	// #536
    65f4:	bl	31a8 <_ck_assert_failed@@Base+0x120>

00000000000065f8 <srunner_run@@Base>:
    65f8:	mov	w5, w3
    65fc:	mov	x4, #0x0                   	// #0
    6600:	mov	x3, #0x0                   	// #0
    6604:	b	2450 <srunner_run_tagged@plt>

0000000000006608 <srunner_run_all@@Base>:
    6608:	mov	w3, w1
    660c:	mov	x2, #0x0                   	// #0
    6610:	mov	x1, #0x0                   	// #0
    6614:	b	2360 <srunner_run@plt>

0000000000006618 <check_fork@@Base>:
    6618:	stp	x29, x30, [sp, #-32]!
    661c:	mov	x29, sp
    6620:	str	x19, [sp, #16]
    6624:	bl	2200 <fork@plt>
    6628:	mov	w19, w0
    662c:	tbnz	w0, #31, 663c <check_fork@@Base+0x24>
    6630:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x129b0>
    6634:	ldr	w1, [x1, #764]
    6638:	bl	23c0 <setpgid@plt>
    663c:	mov	w0, w19
    6640:	ldr	x19, [sp, #16]
    6644:	ldp	x29, x30, [sp], #32
    6648:	ret
    664c:	nop

0000000000006650 <check_waitpid_and_exit@@Base>:
    6650:	stp	x29, x30, [sp, #-48]!
    6654:	cmp	w0, #0x0
    6658:	mov	x29, sp
    665c:	stp	x19, x20, [sp, #16]
    6660:	b.le	66b8 <check_waitpid_and_exit@@Base+0x68>
    6664:	mov	w19, w0
    6668:	add	x20, sp, #0x2c
    666c:	nop
    6670:	mov	x1, x20
    6674:	mov	w0, w19
    6678:	mov	w2, #0x0                   	// #0
    667c:	bl	2510 <waitpid@plt>
    6680:	cmn	w0, #0x1
    6684:	b.eq	6670 <check_waitpid_and_exit@@Base+0x20>  // b.none
    6688:	ldr	w2, [sp, #44]
    668c:	and	w1, w2, #0x7f
    6690:	add	w0, w1, #0x1
    6694:	sbfx	x0, x0, #1, #7
    6698:	cmp	w0, #0x0
    669c:	ccmp	w1, #0x0, #0x4, gt
    66a0:	b.eq	66ac <check_waitpid_and_exit@@Base+0x5c>  // b.none
    66a4:	mov	w0, #0x1                   	// #1
    66a8:	bl	2160 <exit@plt>
    66ac:	tst	x2, #0xff00
    66b0:	ccmp	w1, #0x0, #0x0, ne  // ne = any
    66b4:	b.eq	66a4 <check_waitpid_and_exit@@Base+0x54>  // b.none
    66b8:	mov	w0, #0x0                   	// #0
    66bc:	bl	2160 <exit@plt>
    66c0:	stp	x29, x30, [sp, #-336]!
    66c4:	mov	x29, sp
    66c8:	stp	x19, x20, [sp, #16]
    66cc:	add	x20, sp, #0x50
    66d0:	stp	x21, x22, [sp, #32]
    66d4:	mov	x21, x0
    66d8:	mov	w22, #0xffffff80            	// #-128
    66dc:	mov	x0, #0x64                  	// #100
    66e0:	stp	x23, x24, [sp, #48]
    66e4:	add	x24, sp, #0x110
    66e8:	mov	w23, #0xffffffc8            	// #-56
    66ec:	stp	x25, x26, [sp, #64]
    66f0:	mov	x25, x0
    66f4:	add	x26, sp, #0x70
    66f8:	str	q0, [sp, #144]
    66fc:	str	q1, [sp, #160]
    6700:	str	q2, [sp, #176]
    6704:	str	q3, [sp, #192]
    6708:	str	q4, [sp, #208]
    670c:	str	q5, [sp, #224]
    6710:	str	q6, [sp, #240]
    6714:	str	q7, [sp, #256]
    6718:	stp	x1, x2, [sp, #280]
    671c:	stp	x3, x4, [sp, #296]
    6720:	stp	x5, x6, [sp, #312]
    6724:	str	x7, [sp, #328]
    6728:	bl	32b8 <_ck_assert_failed@@Base+0x230>
    672c:	mov	x19, x0
    6730:	b	6754 <check_waitpid_and_exit@@Base+0x104>
    6734:	cmp	w0, w25
    6738:	b.lt	6794 <check_waitpid_and_exit@@Base+0x144>  // b.tstop
    673c:	sxtw	x1, w0
    6740:	add	x25, x1, #0x1
    6744:	mov	x0, x19
    6748:	mov	x1, x25
    674c:	bl	32f8 <_ck_assert_failed@@Base+0x270>
    6750:	mov	x19, x0
    6754:	add	x0, sp, #0x150
    6758:	stp	x0, x0, [sp, #112]
    675c:	mov	x3, x20
    6760:	str	x24, [sp, #128]
    6764:	mov	x2, x21
    6768:	stp	w23, w22, [sp, #136]
    676c:	mov	x1, x25
    6770:	mov	x0, x19
    6774:	ldp	x4, x5, [x26]
    6778:	stp	x4, x5, [x20]
    677c:	ldp	x4, x5, [x26, #16]
    6780:	stp	x4, x5, [x20, #16]
    6784:	bl	2480 <vsnprintf@plt>
    6788:	tbz	w0, #31, 6734 <check_waitpid_and_exit@@Base+0xe4>
    678c:	lsl	x25, x25, #1
    6790:	b	6744 <check_waitpid_and_exit@@Base+0xf4>
    6794:	mov	x0, x19
    6798:	ldp	x19, x20, [sp, #16]
    679c:	ldp	x21, x22, [sp, #32]
    67a0:	ldp	x23, x24, [sp, #48]
    67a4:	ldp	x25, x26, [sp, #64]
    67a8:	ldp	x29, x30, [sp], #336
    67ac:	ret
    67b0:	sub	sp, sp, #0x20
    67b4:	adrp	x7, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    67b8:	add	x1, x7, #0x8
    67bc:	adrp	x7, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    67c0:	add	x7, x7, #0x2d0
    67c4:	stp	x29, x30, [sp, #16]
    67c8:	add	x29, sp, #0x10
    67cc:	ldp	w3, w4, [x0]
    67d0:	ldr	w2, [x0, #16]
    67d4:	cmp	w3, #0x3
    67d8:	csel	x7, x7, x1, eq  // eq = none
    67dc:	cmp	w4, #0x2
    67e0:	ldr	x1, [x0, #8]
    67e4:	b.eq	6818 <check_waitpid_and_exit@@Base+0x1c8>  // b.none
    67e8:	adrp	x3, 6000 <srunner_run_tagged@@Base+0x388>
    67ec:	add	x3, x3, #0x9f0
    67f0:	ldp	x4, x5, [x0, #32]
    67f4:	ldr	w6, [x0, #20]
    67f8:	ldr	x0, [x0, #48]
    67fc:	str	x0, [sp]
    6800:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    6804:	add	x0, x0, #0x300
    6808:	bl	66c0 <check_waitpid_and_exit@@Base+0x70>
    680c:	ldp	x29, x30, [sp, #16]
    6810:	add	sp, sp, #0x20
    6814:	ret
    6818:	cmp	w3, #0x1
    681c:	b.eq	683c <check_waitpid_and_exit@@Base+0x1ec>  // b.none
    6820:	cmp	w3, #0x2
    6824:	b.eq	6848 <check_waitpid_and_exit@@Base+0x1f8>  // b.none
    6828:	cmp	w3, #0x3
    682c:	adrp	x3, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    6830:	add	x3, x3, #0x2f0
    6834:	csel	x3, x3, xzr, eq  // eq = none
    6838:	b	67f0 <check_waitpid_and_exit@@Base+0x1a0>
    683c:	adrp	x3, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    6840:	add	x3, x3, #0x2f8
    6844:	b	67f0 <check_waitpid_and_exit@@Base+0x1a0>
    6848:	adrp	x3, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    684c:	add	x3, x3, #0x2e8
    6850:	b	67f0 <check_waitpid_and_exit@@Base+0x1a0>
    6854:	nop
    6858:	mov	x4, x0
    685c:	adrp	x5, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    6860:	adrp	x3, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    6864:	add	x5, x5, #0x8
    6868:	add	x3, x3, #0x2d0
    686c:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    6870:	ldr	w2, [x4]
    6874:	add	x0, x0, #0x318
    6878:	ldr	x1, [x4, #8]
    687c:	cmp	w2, #0x3
    6880:	ldr	w2, [x4, #16]
    6884:	csel	x3, x3, x5, eq  // eq = none
    6888:	ldr	x4, [x4, #48]
    688c:	b	66c0 <check_waitpid_and_exit@@Base+0x70>
    6890:	ldr	x0, [x0, #8]
    6894:	mov	w1, #0x64                  	// #100
    6898:	ldp	w2, w3, [x0]
    689c:	ldr	w4, [x0, #8]
    68a0:	orr	w0, w3, w4
    68a4:	cbz	w0, 68d4 <check_waitpid_and_exit@@Base+0x284>
    68a8:	mov	w1, #0x0                   	// #0
    68ac:	cbz	w2, 68d4 <check_waitpid_and_exit@@Base+0x284>
    68b0:	add	w0, w3, w4
    68b4:	scvtf	s2, w2
    68b8:	sub	w0, w2, w0
    68bc:	mov	w1, #0x42c80000            	// #1120403456
    68c0:	fmov	s1, w1
    68c4:	scvtf	s0, w0
    68c8:	fdiv	s0, s0, s2
    68cc:	fmul	s0, s0, s1
    68d0:	fcvtzs	w1, s0
    68d4:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    68d8:	add	x0, x0, #0x328
    68dc:	b	66c0 <check_waitpid_and_exit@@Base+0x70>
    68e0:	stp	x29, x30, [sp, #-16]!
    68e4:	adrp	x3, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    68e8:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    68ec:	mov	x29, sp
    68f0:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0x9b0>
    68f4:	add	x3, x3, #0x370
    68f8:	add	x1, x1, #0x358
    68fc:	add	x0, x0, #0x368
    6900:	mov	w2, #0x1a                  	// #26
    6904:	bl	24c0 <__assert_fail@plt>

Disassembly of section .fini:

0000000000006908 <.fini>:
    6908:	stp	x29, x30, [sp, #-16]!
    690c:	mov	x29, sp
    6910:	ldp	x29, x30, [sp], #16
    6914:	ret
