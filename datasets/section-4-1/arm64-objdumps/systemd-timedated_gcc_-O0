
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-timedated_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004025f0 <_init>:
  4025f0:	stp	x29, x30, [sp, #-16]!
  4025f4:	mov	x29, sp
  4025f8:	bl	402ce0 <call_weak_fn>
  4025fc:	ldp	x29, x30, [sp], #16
  402600:	ret

Disassembly of section .plt:

0000000000402610 <.plt>:
  402610:	stp	x16, x30, [sp, #-16]!
  402614:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402618:	ldr	x17, [x16, #3256]
  40261c:	add	x16, x16, #0xcb8
  402620:	br	x17
  402624:	nop
  402628:	nop
  40262c:	nop

0000000000402630 <timegm@plt>:
  402630:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402634:	ldr	x17, [x16, #3264]
  402638:	add	x16, x16, #0xcc0
  40263c:	br	x17

0000000000402640 <safe_fclose@plt>:
  402640:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402644:	ldr	x17, [x16, #3272]
  402648:	add	x16, x16, #0xcc8
  40264c:	br	x17

0000000000402650 <read_line_full@plt>:
  402650:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402654:	ldr	x17, [x16, #3280]
  402658:	add	x16, x16, #0xcd0
  40265c:	br	x17

0000000000402660 <bus_error_message@plt>:
  402660:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402664:	ldr	x17, [x16, #3288]
  402668:	add	x16, x16, #0xcd8
  40266c:	br	x17

0000000000402670 <unit_dbus_path_from_name@plt>:
  402670:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402674:	ldr	x17, [x16, #3296]
  402678:	add	x16, x16, #0xce0
  40267c:	br	x17

0000000000402680 <unlink@plt>:
  402680:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402684:	ldr	x17, [x16, #3304]
  402688:	add	x16, x16, #0xce8
  40268c:	br	x17

0000000000402690 <sd_bus_reply_method_return@plt>:
  402690:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402694:	ldr	x17, [x16, #3312]
  402698:	add	x16, x16, #0xcf0
  40269c:	br	x17

00000000004026a0 <strcmp_ptr@plt>:
  4026a0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4026a4:	ldr	x17, [x16, #3320]
  4026a8:	add	x16, x16, #0xcf8
  4026ac:	br	x17

00000000004026b0 <stpcpy@plt>:
  4026b0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4026b4:	ldr	x17, [x16, #3328]
  4026b8:	add	x16, x16, #0xd00
  4026bc:	br	x17

00000000004026c0 <mac_selinux_init@plt>:
  4026c0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4026c4:	ldr	x17, [x16, #3336]
  4026c8:	add	x16, x16, #0xd08
  4026cc:	br	x17

00000000004026d0 <__libc_start_main@plt>:
  4026d0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4026d4:	ldr	x17, [x16, #3344]
  4026d8:	add	x16, x16, #0xd10
  4026dc:	br	x17

00000000004026e0 <sd_event_set_watchdog@plt>:
  4026e0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4026e4:	ldr	x17, [x16, #3352]
  4026e8:	add	x16, x16, #0xd18
  4026ec:	br	x17

00000000004026f0 <sd_bus_message_unref@plt>:
  4026f0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4026f4:	ldr	x17, [x16, #3360]
  4026f8:	add	x16, x16, #0xd20
  4026fc:	br	x17

0000000000402700 <clock_gettime@plt>:
  402700:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402704:	ldr	x17, [x16, #3368]
  402708:	add	x16, x16, #0xd28
  40270c:	br	x17

0000000000402710 <sd_bus_request_name_async@plt>:
  402710:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402714:	ldr	x17, [x16, #3376]
  402718:	add	x16, x16, #0xd30
  40271c:	br	x17

0000000000402720 <mempcpy@plt>:
  402720:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402724:	ldr	x17, [x16, #3384]
  402728:	add	x16, x16, #0xd38
  40272c:	br	x17

0000000000402730 <__gmon_start__@plt>:
  402730:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402734:	ldr	x17, [x16, #3392]
  402738:	add	x16, x16, #0xd40
  40273c:	br	x17

0000000000402740 <sd_bus_error_set_errnof@plt>:
  402740:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402744:	ldr	x17, [x16, #3400]
  402748:	add	x16, x16, #0xd48
  40274c:	br	x17

0000000000402750 <polkit_agent_close@plt>:
  402750:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402754:	ldr	x17, [x16, #3408]
  402758:	add	x16, x16, #0xd50
  40275c:	br	x17

0000000000402760 <sd_event_default@plt>:
  402760:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402764:	ldr	x17, [x16, #3416]
  402768:	add	x16, x16, #0xd58
  40276c:	br	x17

0000000000402770 <bus_event_loop_with_idle@plt>:
  402770:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402774:	ldr	x17, [x16, #3424]
  402778:	add	x16, x16, #0xd60
  40277c:	br	x17

0000000000402780 <sd_bus_message_new_method_return@plt>:
  402780:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402784:	ldr	x17, [x16, #3432]
  402788:	add	x16, x16, #0xd68
  40278c:	br	x17

0000000000402790 <free_and_strdup@plt>:
  402790:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402794:	ldr	x17, [x16, #3440]
  402798:	add	x16, x16, #0xd70
  40279c:	br	x17

00000000004027a0 <bus_verify_polkit_async_registry_free@plt>:
  4027a0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4027a4:	ldr	x17, [x16, #3448]
  4027a8:	add	x16, x16, #0xd78
  4027ac:	br	x17

00000000004027b0 <timespec_store@plt>:
  4027b0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4027b4:	ldr	x17, [x16, #3456]
  4027b8:	add	x16, x16, #0xd80
  4027bc:	br	x17

00000000004027c0 <clock_set_hwclock@plt>:
  4027c0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4027c4:	ldr	x17, [x16, #3464]
  4027c8:	add	x16, x16, #0xd88
  4027cc:	br	x17

00000000004027d0 <write_string_file_atomic_label_ts@plt>:
  4027d0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4027d4:	ldr	x17, [x16, #3472]
  4027d8:	add	x16, x16, #0xd90
  4027dc:	br	x17

00000000004027e0 <sd_bus_message_append@plt>:
  4027e0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4027e4:	ldr	x17, [x16, #3480]
  4027e8:	add	x16, x16, #0xd98
  4027ec:	br	x17

00000000004027f0 <log_setup_service@plt>:
  4027f0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4027f4:	ldr	x17, [x16, #3488]
  4027f8:	add	x16, x16, #0xda0
  4027fc:	br	x17

0000000000402800 <sd_bus_message_get_bus@plt>:
  402800:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402804:	ldr	x17, [x16, #3496]
  402808:	add	x16, x16, #0xda8
  40280c:	br	x17

0000000000402810 <get_timezones@plt>:
  402810:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402814:	ldr	x17, [x16, #3504]
  402818:	add	x16, x16, #0xdb0
  40281c:	br	x17

0000000000402820 <localtime_r@plt>:
  402820:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402824:	ldr	x17, [x16, #3512]
  402828:	add	x16, x16, #0xdb8
  40282c:	br	x17

0000000000402830 <mktime@plt>:
  402830:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402834:	ldr	x17, [x16, #3520]
  402838:	add	x16, x16, #0xdc0
  40283c:	br	x17

0000000000402840 <log_assert_failed_realm@plt>:
  402840:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402844:	ldr	x17, [x16, #3528]
  402848:	add	x16, x16, #0xdc8
  40284c:	br	x17

0000000000402850 <sd_bus_message_read@plt>:
  402850:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402854:	ldr	x17, [x16, #3536]
  402858:	add	x16, x16, #0xdd0
  40285c:	br	x17

0000000000402860 <symlink_atomic@plt>:
  402860:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402864:	ldr	x17, [x16, #3544]
  402868:	add	x16, x16, #0xdd8
  40286c:	br	x17

0000000000402870 <read_full_file_full@plt>:
  402870:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402874:	ldr	x17, [x16, #3552]
  402878:	add	x16, x16, #0xde0
  40287c:	br	x17

0000000000402880 <umask@plt>:
  402880:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402884:	ldr	x17, [x16, #3560]
  402888:	add	x16, x16, #0xde8
  40288c:	br	x17

0000000000402890 <sd_bus_attach_event@plt>:
  402890:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402894:	ldr	x17, [x16, #3568]
  402898:	add	x16, x16, #0xdf0
  40289c:	br	x17

00000000004028a0 <bus_map_all_properties@plt>:
  4028a0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4028a4:	ldr	x17, [x16, #3576]
  4028a8:	add	x16, x16, #0xdf8
  4028ac:	br	x17

00000000004028b0 <ctime@plt>:
  4028b0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4028b4:	ldr	x17, [x16, #3584]
  4028b8:	add	x16, x16, #0xe00
  4028bc:	br	x17

00000000004028c0 <strncmp@plt>:
  4028c0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4028c4:	ldr	x17, [x16, #3592]
  4028c8:	add	x16, x16, #0xe08
  4028cc:	br	x17

00000000004028d0 <access@plt>:
  4028d0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4028d4:	ldr	x17, [x16, #3600]
  4028d8:	add	x16, x16, #0xe10
  4028dc:	br	x17

00000000004028e0 <sigprocmask_many@plt>:
  4028e0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4028e4:	ldr	x17, [x16, #3608]
  4028e8:	add	x16, x16, #0xe18
  4028ec:	br	x17

00000000004028f0 <abort@plt>:
  4028f0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4028f4:	ldr	x17, [x16, #3616]
  4028f8:	add	x16, x16, #0xe20
  4028fc:	br	x17

0000000000402900 <sd_bus_negotiate_timestamp@plt>:
  402900:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402904:	ldr	x17, [x16, #3624]
  402908:	add	x16, x16, #0xe28
  40290c:	br	x17

0000000000402910 <sd_bus_match_signal_async@plt>:
  402910:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402914:	ldr	x17, [x16, #3632]
  402918:	add	x16, x16, #0xe30
  40291c:	br	x17

0000000000402920 <fopen_unlocked@plt>:
  402920:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402924:	ldr	x17, [x16, #3640]
  402928:	add	x16, x16, #0xe38
  40292c:	br	x17

0000000000402930 <log_object_internal@plt>:
  402930:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402934:	ldr	x17, [x16, #3648]
  402938:	add	x16, x16, #0xe40
  40293c:	br	x17

0000000000402940 <__errno_location@plt>:
  402940:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402944:	ldr	x17, [x16, #3656]
  402948:	add	x16, x16, #0xe48
  40294c:	br	x17

0000000000402950 <sd_bus_error_set@plt>:
  402950:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402954:	ldr	x17, [x16, #3664]
  402958:	add	x16, x16, #0xe50
  40295c:	br	x17

0000000000402960 <strv_free@plt>:
  402960:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402964:	ldr	x17, [x16, #3672]
  402968:	add	x16, x16, #0xe58
  40296c:	br	x17

0000000000402970 <clock_get_hwclock@plt>:
  402970:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402974:	ldr	x17, [x16, #3680]
  402978:	add	x16, x16, #0xe60
  40297c:	br	x17

0000000000402980 <clock_is_localtime@plt>:
  402980:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402984:	ldr	x17, [x16, #3688]
  402988:	add	x16, x16, #0xe68
  40298c:	br	x17

0000000000402990 <sd_bus_add_object_vtable@plt>:
  402990:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402994:	ldr	x17, [x16, #3696]
  402998:	add	x16, x16, #0xe70
  40299c:	br	x17

00000000004029a0 <gmtime_r@plt>:
  4029a0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4029a4:	ldr	x17, [x16, #3704]
  4029a8:	add	x16, x16, #0xe78
  4029ac:	br	x17

00000000004029b0 <sd_bus_error_setf@plt>:
  4029b0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4029b4:	ldr	x17, [x16, #3712]
  4029b8:	add	x16, x16, #0xe80
  4029bc:	br	x17

00000000004029c0 <__stack_chk_fail@plt>:
  4029c0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4029c4:	ldr	x17, [x16, #3720]
  4029c8:	add	x16, x16, #0xe88
  4029cc:	br	x17

00000000004029d0 <sd_bus_send@plt>:
  4029d0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4029d4:	ldr	x17, [x16, #3728]
  4029d8:	add	x16, x16, #0xe90
  4029dc:	br	x17

00000000004029e0 <path_join_internal@plt>:
  4029e0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4029e4:	ldr	x17, [x16, #3736]
  4029e8:	add	x16, x16, #0xe98
  4029ec:	br	x17

00000000004029f0 <ask_password_agent_close@plt>:
  4029f0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  4029f4:	ldr	x17, [x16, #3744]
  4029f8:	add	x16, x16, #0xea0
  4029fc:	br	x17

0000000000402a00 <pager_close@plt>:
  402a00:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402a04:	ldr	x17, [x16, #3752]
  402a08:	add	x16, x16, #0xea8
  402a0c:	br	x17

0000000000402a10 <clock_set_timezone@plt>:
  402a10:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402a14:	ldr	x17, [x16, #3760]
  402a18:	add	x16, x16, #0xeb0
  402a1c:	br	x17

0000000000402a20 <sd_bus_error_free@plt>:
  402a20:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402a24:	ldr	x17, [x16, #3768]
  402a28:	add	x16, x16, #0xeb8
  402a2c:	br	x17

0000000000402a30 <sd_bus_emit_properties_changed@plt>:
  402a30:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402a34:	ldr	x17, [x16, #3776]
  402a38:	add	x16, x16, #0xec0
  402a3c:	br	x17

0000000000402a40 <strv_find@plt>:
  402a40:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402a44:	ldr	x17, [x16, #3784]
  402a48:	add	x16, x16, #0xec8
  402a4c:	br	x17

0000000000402a50 <log_struct_internal@plt>:
  402a50:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402a54:	ldr	x17, [x16, #3792]
  402a58:	add	x16, x16, #0xed0
  402a5c:	br	x17

0000000000402a60 <malloc@plt>:
  402a60:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402a64:	ldr	x17, [x16, #3800]
  402a68:	add	x16, x16, #0xed8
  402a6c:	br	x17

0000000000402a70 <strchrnul@plt>:
  402a70:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402a74:	ldr	x17, [x16, #3808]
  402a78:	add	x16, x16, #0xee0
  402a7c:	br	x17

0000000000402a80 <log_internal_realm@plt>:
  402a80:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402a84:	ldr	x17, [x16, #3816]
  402a88:	add	x16, x16, #0xee8
  402a8c:	br	x17

0000000000402a90 <sd_bus_default_system@plt>:
  402a90:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402a94:	ldr	x17, [x16, #3824]
  402a98:	add	x16, x16, #0xef0
  402a9c:	br	x17

0000000000402aa0 <sd_bus_flush_close_unref@plt>:
  402aa0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402aa4:	ldr	x17, [x16, #3832]
  402aa8:	add	x16, x16, #0xef8
  402aac:	br	x17

0000000000402ab0 <bus_property_get_bool@plt>:
  402ab0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402ab4:	ldr	x17, [x16, #3840]
  402ab8:	add	x16, x16, #0xf00
  402abc:	br	x17

0000000000402ac0 <now@plt>:
  402ac0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402ac4:	ldr	x17, [x16, #3848]
  402ac8:	add	x16, x16, #0xf08
  402acc:	br	x17

0000000000402ad0 <strcmp@plt>:
  402ad0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402ad4:	ldr	x17, [x16, #3856]
  402ad8:	add	x16, x16, #0xf10
  402adc:	br	x17

0000000000402ae0 <extract_first_word@plt>:
  402ae0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402ae4:	ldr	x17, [x16, #3864]
  402ae8:	add	x16, x16, #0xf18
  402aec:	br	x17

0000000000402af0 <tzset@plt>:
  402af0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402af4:	ldr	x17, [x16, #3872]
  402af8:	add	x16, x16, #0xf20
  402afc:	br	x17

0000000000402b00 <timezone_is_valid@plt>:
  402b00:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402b04:	ldr	x17, [x16, #3880]
  402b08:	add	x16, x16, #0xf28
  402b0c:	br	x17

0000000000402b10 <clock_settime@plt>:
  402b10:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402b14:	ldr	x17, [x16, #3888]
  402b18:	add	x16, x16, #0xf30
  402b1c:	br	x17

0000000000402b20 <ntp_synced@plt>:
  402b20:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402b24:	ldr	x17, [x16, #3896]
  402b28:	add	x16, x16, #0xf38
  402b2c:	br	x17

0000000000402b30 <strdup@plt>:
  402b30:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402b34:	ldr	x17, [x16, #3904]
  402b38:	add	x16, x16, #0xf40
  402b3c:	br	x17

0000000000402b40 <get_timezone@plt>:
  402b40:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402b44:	ldr	x17, [x16, #3912]
  402b48:	add	x16, x16, #0xf48
  402b4c:	br	x17

0000000000402b50 <calloc@plt>:
  402b50:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402b54:	ldr	x17, [x16, #3920]
  402b58:	add	x16, x16, #0xf50
  402b5c:	br	x17

0000000000402b60 <getenv@plt>:
  402b60:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402b64:	ldr	x17, [x16, #3928]
  402b68:	add	x16, x16, #0xf58
  402b6c:	br	x17

0000000000402b70 <strchr@plt>:
  402b70:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402b74:	ldr	x17, [x16, #3936]
  402b78:	add	x16, x16, #0xf60
  402b7c:	br	x17

0000000000402b80 <timespec_load@plt>:
  402b80:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402b84:	ldr	x17, [x16, #3944]
  402b88:	add	x16, x16, #0xf68
  402b8c:	br	x17

0000000000402b90 <sd_bus_message_append_strv@plt>:
  402b90:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402b94:	ldr	x17, [x16, #3952]
  402b98:	add	x16, x16, #0xf70
  402b9c:	br	x17

0000000000402ba0 <strstrip@plt>:
  402ba0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402ba4:	ldr	x17, [x16, #3960]
  402ba8:	add	x16, x16, #0xf78
  402bac:	br	x17

0000000000402bb0 <free@plt>:
  402bb0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402bb4:	ldr	x17, [x16, #3968]
  402bb8:	add	x16, x16, #0xf80
  402bbc:	br	x17

0000000000402bc0 <sd_bus_message_get_monotonic_usec@plt>:
  402bc0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402bc4:	ldr	x17, [x16, #3976]
  402bc8:	add	x16, x16, #0xf88
  402bcc:	br	x17

0000000000402bd0 <sd_event_unref@plt>:
  402bd0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402bd4:	ldr	x17, [x16, #3984]
  402bd8:	add	x16, x16, #0xf90
  402bdc:	br	x17

0000000000402be0 <mac_selinux_finish@plt>:
  402be0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402be4:	ldr	x17, [x16, #3992]
  402be8:	add	x16, x16, #0xf98
  402bec:	br	x17

0000000000402bf0 <sd_event_add_signal@plt>:
  402bf0:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402bf4:	ldr	x17, [x16, #4000]
  402bf8:	add	x16, x16, #0xfa0
  402bfc:	br	x17

0000000000402c00 <sd_bus_call_method@plt>:
  402c00:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402c04:	ldr	x17, [x16, #4008]
  402c08:	add	x16, x16, #0xfa8
  402c0c:	br	x17

0000000000402c10 <sd_bus_slot_unref@plt>:
  402c10:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402c14:	ldr	x17, [x16, #4016]
  402c18:	add	x16, x16, #0xfb0
  402c1c:	br	x17

0000000000402c20 <strlen@plt>:
  402c20:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402c24:	ldr	x17, [x16, #4024]
  402c28:	add	x16, x16, #0xfb8
  402c2c:	br	x17

0000000000402c30 <conf_files_list_strv@plt>:
  402c30:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402c34:	ldr	x17, [x16, #4032]
  402c38:	add	x16, x16, #0xfc0
  402c3c:	br	x17

0000000000402c40 <sd_bus_message_ref@plt>:
  402c40:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402c44:	ldr	x17, [x16, #4040]
  402c48:	add	x16, x16, #0xfc8
  402c4c:	br	x17

0000000000402c50 <log_oom_internal@plt>:
  402c50:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402c54:	ldr	x17, [x16, #4048]
  402c58:	add	x16, x16, #0xfd0
  402c5c:	br	x17

0000000000402c60 <bus_verify_polkit_async@plt>:
  402c60:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402c64:	ldr	x17, [x16, #4056]
  402c68:	add	x16, x16, #0xfd8
  402c6c:	br	x17

0000000000402c70 <unit_name_is_valid@plt>:
  402c70:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402c74:	ldr	x17, [x16, #4064]
  402c78:	add	x16, x16, #0xfe0
  402c7c:	br	x17

0000000000402c80 <log_get_max_level_realm@plt>:
  402c80:	adrp	x16, 41a000 <__FRAME_END__+0xfed0>
  402c84:	ldr	x17, [x16, #4072]
  402c88:	add	x16, x16, #0xfe8
  402c8c:	br	x17

Disassembly of section .text:

0000000000402c90 <_start>:
  402c90:	mov	x29, #0x0                   	// #0
  402c94:	mov	x30, #0x0                   	// #0
  402c98:	mov	x5, x0
  402c9c:	ldr	x1, [sp]
  402ca0:	add	x2, sp, #0x8
  402ca4:	mov	x6, sp
  402ca8:	movz	x0, #0x0, lsl #48
  402cac:	movk	x0, #0x0, lsl #32
  402cb0:	movk	x0, #0x40, lsl #16
  402cb4:	movk	x0, #0x8028
  402cb8:	movz	x3, #0x0, lsl #48
  402cbc:	movk	x3, #0x0, lsl #32
  402cc0:	movk	x3, #0x40, lsl #16
  402cc4:	movk	x3, #0x8078
  402cc8:	movz	x4, #0x0, lsl #48
  402ccc:	movk	x4, #0x0, lsl #32
  402cd0:	movk	x4, #0x40, lsl #16
  402cd4:	movk	x4, #0x80f8
  402cd8:	bl	4026d0 <__libc_start_main@plt>
  402cdc:	bl	4028f0 <abort@plt>

0000000000402ce0 <call_weak_fn>:
  402ce0:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  402ce4:	ldr	x0, [x0, #4088]
  402ce8:	cbz	x0, 402cf0 <call_weak_fn+0x10>
  402cec:	b	402730 <__gmon_start__@plt>
  402cf0:	ret

0000000000402cf4 <deregister_tm_clones>:
  402cf4:	stp	x29, x30, [sp, #-32]!
  402cf8:	mov	x29, sp
  402cfc:	adrp	x0, 41b000 <__tzname@@GLIBC_2.17>
  402d00:	add	x0, x0, #0x0
  402d04:	str	x0, [sp, #24]
  402d08:	ldr	x0, [sp, #24]
  402d0c:	str	x0, [sp, #24]
  402d10:	ldr	x1, [sp, #24]
  402d14:	adrp	x0, 41b000 <__tzname@@GLIBC_2.17>
  402d18:	add	x0, x0, #0x0
  402d1c:	cmp	x1, x0
  402d20:	b.eq	402d5c <deregister_tm_clones+0x68>  // b.none
  402d24:	adrp	x0, 408000 <run+0x534>
  402d28:	add	x0, x0, #0x110
  402d2c:	ldr	x0, [x0]
  402d30:	str	x0, [sp, #16]
  402d34:	ldr	x0, [sp, #16]
  402d38:	str	x0, [sp, #16]
  402d3c:	ldr	x0, [sp, #16]
  402d40:	cmp	x0, #0x0
  402d44:	b.eq	402d60 <deregister_tm_clones+0x6c>  // b.none
  402d48:	ldr	x1, [sp, #16]
  402d4c:	adrp	x0, 41b000 <__tzname@@GLIBC_2.17>
  402d50:	add	x0, x0, #0x0
  402d54:	blr	x1
  402d58:	b	402d60 <deregister_tm_clones+0x6c>
  402d5c:	nop
  402d60:	ldp	x29, x30, [sp], #32
  402d64:	ret

0000000000402d68 <register_tm_clones>:
  402d68:	stp	x29, x30, [sp, #-48]!
  402d6c:	mov	x29, sp
  402d70:	adrp	x0, 41b000 <__tzname@@GLIBC_2.17>
  402d74:	add	x0, x0, #0x0
  402d78:	str	x0, [sp, #40]
  402d7c:	ldr	x0, [sp, #40]
  402d80:	str	x0, [sp, #40]
  402d84:	ldr	x1, [sp, #40]
  402d88:	adrp	x0, 41b000 <__tzname@@GLIBC_2.17>
  402d8c:	add	x0, x0, #0x0
  402d90:	sub	x0, x1, x0
  402d94:	asr	x0, x0, #3
  402d98:	lsr	x1, x0, #63
  402d9c:	add	x0, x1, x0
  402da0:	asr	x0, x0, #1
  402da4:	str	x0, [sp, #32]
  402da8:	ldr	x0, [sp, #32]
  402dac:	cmp	x0, #0x0
  402db0:	b.eq	402df0 <register_tm_clones+0x88>  // b.none
  402db4:	adrp	x0, 408000 <run+0x534>
  402db8:	add	x0, x0, #0x118
  402dbc:	ldr	x0, [x0]
  402dc0:	str	x0, [sp, #24]
  402dc4:	ldr	x0, [sp, #24]
  402dc8:	str	x0, [sp, #24]
  402dcc:	ldr	x0, [sp, #24]
  402dd0:	cmp	x0, #0x0
  402dd4:	b.eq	402df4 <register_tm_clones+0x8c>  // b.none
  402dd8:	ldr	x2, [sp, #24]
  402ddc:	ldr	x1, [sp, #32]
  402de0:	adrp	x0, 41b000 <__tzname@@GLIBC_2.17>
  402de4:	add	x0, x0, #0x0
  402de8:	blr	x2
  402dec:	b	402df4 <register_tm_clones+0x8c>
  402df0:	nop
  402df4:	ldp	x29, x30, [sp], #48
  402df8:	ret

0000000000402dfc <__do_global_dtors_aux>:
  402dfc:	stp	x29, x30, [sp, #-16]!
  402e00:	mov	x29, sp
  402e04:	adrp	x0, 41b000 <__tzname@@GLIBC_2.17>
  402e08:	add	x0, x0, #0x20
  402e0c:	ldrb	w0, [x0]
  402e10:	and	x0, x0, #0xff
  402e14:	cmp	x0, #0x0
  402e18:	b.ne	402e34 <__do_global_dtors_aux+0x38>  // b.any
  402e1c:	bl	402cf4 <deregister_tm_clones>
  402e20:	adrp	x0, 41b000 <__tzname@@GLIBC_2.17>
  402e24:	add	x0, x0, #0x20
  402e28:	mov	w1, #0x1                   	// #1
  402e2c:	strb	w1, [x0]
  402e30:	b	402e38 <__do_global_dtors_aux+0x3c>
  402e34:	nop
  402e38:	ldp	x29, x30, [sp], #16
  402e3c:	ret

0000000000402e40 <frame_dummy>:
  402e40:	stp	x29, x30, [sp, #-16]!
  402e44:	mov	x29, sp
  402e48:	bl	402d68 <register_tm_clones>
  402e4c:	nop
  402e50:	ldp	x29, x30, [sp], #16
  402e54:	ret

0000000000402e58 <sd_event_unrefp>:
  402e58:	stp	x29, x30, [sp, #-32]!
  402e5c:	mov	x29, sp
  402e60:	str	x0, [sp, #24]
  402e64:	ldr	x0, [sp, #24]
  402e68:	ldr	x0, [x0]
  402e6c:	cmp	x0, #0x0
  402e70:	b.eq	402e80 <sd_event_unrefp+0x28>  // b.none
  402e74:	ldr	x0, [sp, #24]
  402e78:	ldr	x0, [x0]
  402e7c:	bl	402bd0 <sd_event_unref@plt>
  402e80:	nop
  402e84:	ldp	x29, x30, [sp], #32
  402e88:	ret

0000000000402e8c <sd_bus_flush_close_unrefp>:
  402e8c:	stp	x29, x30, [sp, #-32]!
  402e90:	mov	x29, sp
  402e94:	str	x0, [sp, #24]
  402e98:	ldr	x0, [sp, #24]
  402e9c:	ldr	x0, [x0]
  402ea0:	cmp	x0, #0x0
  402ea4:	b.eq	402eb4 <sd_bus_flush_close_unrefp+0x28>  // b.none
  402ea8:	ldr	x0, [sp, #24]
  402eac:	ldr	x0, [x0]
  402eb0:	bl	402aa0 <sd_bus_flush_close_unref@plt>
  402eb4:	nop
  402eb8:	ldp	x29, x30, [sp], #32
  402ebc:	ret

0000000000402ec0 <sd_bus_slot_unrefp>:
  402ec0:	stp	x29, x30, [sp, #-32]!
  402ec4:	mov	x29, sp
  402ec8:	str	x0, [sp, #24]
  402ecc:	ldr	x0, [sp, #24]
  402ed0:	ldr	x0, [x0]
  402ed4:	cmp	x0, #0x0
  402ed8:	b.eq	402ee8 <sd_bus_slot_unrefp+0x28>  // b.none
  402edc:	ldr	x0, [sp, #24]
  402ee0:	ldr	x0, [x0]
  402ee4:	bl	402c10 <sd_bus_slot_unref@plt>
  402ee8:	nop
  402eec:	ldp	x29, x30, [sp], #32
  402ef0:	ret

0000000000402ef4 <sd_bus_message_unrefp>:
  402ef4:	stp	x29, x30, [sp, #-32]!
  402ef8:	mov	x29, sp
  402efc:	str	x0, [sp, #24]
  402f00:	ldr	x0, [sp, #24]
  402f04:	ldr	x0, [x0]
  402f08:	cmp	x0, #0x0
  402f0c:	b.eq	402f1c <sd_bus_message_unrefp+0x28>  // b.none
  402f10:	ldr	x0, [sp, #24]
  402f14:	ldr	x0, [x0]
  402f18:	bl	4026f0 <sd_bus_message_unref@plt>
  402f1c:	nop
  402f20:	ldp	x29, x30, [sp], #32
  402f24:	ret

0000000000402f28 <ALIGN_TO>:
  402f28:	sub	sp, sp, #0x10
  402f2c:	str	x0, [sp, #8]
  402f30:	str	x1, [sp]
  402f34:	ldr	x1, [sp, #8]
  402f38:	ldr	x0, [sp]
  402f3c:	add	x0, x1, x0
  402f40:	sub	x1, x0, #0x1
  402f44:	ldr	x0, [sp]
  402f48:	neg	x0, x0
  402f4c:	and	x0, x1, x0
  402f50:	add	sp, sp, #0x10
  402f54:	ret

0000000000402f58 <mfree>:
  402f58:	stp	x29, x30, [sp, #-32]!
  402f5c:	mov	x29, sp
  402f60:	str	x0, [sp, #24]
  402f64:	ldr	x0, [sp, #24]
  402f68:	bl	402bb0 <free@plt>
  402f6c:	mov	x0, #0x0                   	// #0
  402f70:	ldp	x29, x30, [sp], #32
  402f74:	ret

0000000000402f78 <freep>:
  402f78:	stp	x29, x30, [sp, #-32]!
  402f7c:	mov	x29, sp
  402f80:	str	x0, [sp, #24]
  402f84:	ldr	x0, [sp, #24]
  402f88:	ldr	x0, [x0]
  402f8c:	bl	402bb0 <free@plt>
  402f90:	nop
  402f94:	ldp	x29, x30, [sp], #32
  402f98:	ret

0000000000402f9c <size_multiply_overflow>:
  402f9c:	sub	sp, sp, #0x10
  402fa0:	str	x0, [sp, #8]
  402fa4:	str	x1, [sp]
  402fa8:	ldr	x0, [sp]
  402fac:	cmp	x0, #0x0
  402fb0:	cset	w0, ne  // ne = any
  402fb4:	and	w0, w0, #0xff
  402fb8:	and	x0, x0, #0xff
  402fbc:	cmp	x0, #0x0
  402fc0:	b.eq	403004 <size_multiply_overflow+0x68>  // b.none
  402fc4:	mov	x2, #0x0                   	// #0
  402fc8:	ldr	x1, [sp, #8]
  402fcc:	ldr	x0, [sp]
  402fd0:	umulh	x0, x1, x0
  402fd4:	cmp	x0, #0x0
  402fd8:	b.eq	402fe0 <size_multiply_overflow+0x44>  // b.none
  402fdc:	mov	x2, #0x1                   	// #1
  402fe0:	mov	x0, x2
  402fe4:	cmp	x0, #0x0
  402fe8:	cset	w0, ne  // ne = any
  402fec:	and	w0, w0, #0xff
  402ff0:	and	x0, x0, #0xff
  402ff4:	cmp	x0, #0x0
  402ff8:	b.eq	403004 <size_multiply_overflow+0x68>  // b.none
  402ffc:	mov	w0, #0x1                   	// #1
  403000:	b	403008 <size_multiply_overflow+0x6c>
  403004:	mov	w0, #0x0                   	// #0
  403008:	and	w0, w0, #0x1
  40300c:	and	w0, w0, #0xff
  403010:	add	sp, sp, #0x10
  403014:	ret

0000000000403018 <malloc_multiply>:
  403018:	stp	x29, x30, [sp, #-32]!
  40301c:	mov	x29, sp
  403020:	str	x0, [sp, #24]
  403024:	str	x1, [sp, #16]
  403028:	ldr	x1, [sp, #16]
  40302c:	ldr	x0, [sp, #24]
  403030:	bl	402f9c <size_multiply_overflow>
  403034:	and	w0, w0, #0xff
  403038:	cmp	w0, #0x0
  40303c:	b.eq	403048 <malloc_multiply+0x30>  // b.none
  403040:	mov	x0, #0x0                   	// #0
  403044:	b	403064 <malloc_multiply+0x4c>
  403048:	ldr	x1, [sp, #24]
  40304c:	ldr	x0, [sp, #16]
  403050:	mul	x0, x1, x0
  403054:	cmp	x0, #0x0
  403058:	b.ne	403060 <malloc_multiply+0x48>  // b.any
  40305c:	mov	x0, #0x1                   	// #1
  403060:	bl	402a60 <malloc@plt>
  403064:	ldp	x29, x30, [sp], #32
  403068:	ret

000000000040306c <save_argc_argv>:
  40306c:	sub	sp, sp, #0x10
  403070:	str	w0, [sp, #12]
  403074:	str	x1, [sp]
  403078:	adrp	x0, 41b000 <__tzname@@GLIBC_2.17>
  40307c:	add	x0, x0, #0x1c
  403080:	ldr	w1, [sp, #12]
  403084:	str	w1, [x0]
  403088:	adrp	x0, 41b000 <__tzname@@GLIBC_2.17>
  40308c:	add	x0, x0, #0x10
  403090:	ldr	x1, [sp]
  403094:	str	x1, [x0]
  403098:	nop
  40309c:	add	sp, sp, #0x10
  4030a0:	ret

00000000004030a4 <streq_ptr>:
  4030a4:	stp	x29, x30, [sp, #-32]!
  4030a8:	mov	x29, sp
  4030ac:	str	x0, [sp, #24]
  4030b0:	str	x1, [sp, #16]
  4030b4:	ldr	x1, [sp, #16]
  4030b8:	ldr	x0, [sp, #24]
  4030bc:	bl	4026a0 <strcmp_ptr@plt>
  4030c0:	cmp	w0, #0x0
  4030c4:	cset	w0, eq  // eq = none
  4030c8:	and	w0, w0, #0xff
  4030cc:	ldp	x29, x30, [sp], #32
  4030d0:	ret

00000000004030d4 <enable_disable>:
  4030d4:	sub	sp, sp, #0x10
  4030d8:	strb	w0, [sp, #15]
  4030dc:	ldrb	w0, [sp, #15]
  4030e0:	cmp	w0, #0x0
  4030e4:	b.eq	4030f4 <enable_disable+0x20>  // b.none
  4030e8:	adrp	x0, 408000 <run+0x534>
  4030ec:	add	x0, x0, #0x1e0
  4030f0:	b	4030fc <enable_disable+0x28>
  4030f4:	adrp	x0, 408000 <run+0x534>
  4030f8:	add	x0, x0, #0x1e8
  4030fc:	add	sp, sp, #0x10
  403100:	ret

0000000000403104 <isempty>:
  403104:	sub	sp, sp, #0x10
  403108:	str	x0, [sp, #8]
  40310c:	ldr	x0, [sp, #8]
  403110:	cmp	x0, #0x0
  403114:	b.eq	403128 <isempty+0x24>  // b.none
  403118:	ldr	x0, [sp, #8]
  40311c:	ldrb	w0, [x0]
  403120:	cmp	w0, #0x0
  403124:	b.ne	403130 <isempty+0x2c>  // b.any
  403128:	mov	w0, #0x1                   	// #1
  40312c:	b	403134 <isempty+0x30>
  403130:	mov	w0, #0x0                   	// #0
  403134:	and	w0, w0, #0x1
  403138:	and	w0, w0, #0xff
  40313c:	add	sp, sp, #0x10
  403140:	ret

0000000000403144 <startswith>:
  403144:	stp	x29, x30, [sp, #-48]!
  403148:	mov	x29, sp
  40314c:	str	x0, [sp, #24]
  403150:	str	x1, [sp, #16]
  403154:	ldr	x0, [sp, #16]
  403158:	bl	402c20 <strlen@plt>
  40315c:	str	x0, [sp, #40]
  403160:	ldr	x2, [sp, #40]
  403164:	ldr	x1, [sp, #16]
  403168:	ldr	x0, [sp, #24]
  40316c:	bl	4028c0 <strncmp@plt>
  403170:	cmp	w0, #0x0
  403174:	b.ne	403188 <startswith+0x44>  // b.any
  403178:	ldr	x1, [sp, #24]
  40317c:	ldr	x0, [sp, #40]
  403180:	add	x0, x1, x0
  403184:	b	40318c <startswith+0x48>
  403188:	mov	x0, #0x0                   	// #0
  40318c:	ldp	x29, x30, [sp], #48
  403190:	ret

0000000000403194 <fclosep>:
  403194:	stp	x29, x30, [sp, #-32]!
  403198:	mov	x29, sp
  40319c:	str	x0, [sp, #24]
  4031a0:	ldr	x0, [sp, #24]
  4031a4:	ldr	x0, [x0]
  4031a8:	bl	402640 <safe_fclose@plt>
  4031ac:	nop
  4031b0:	ldp	x29, x30, [sp], #32
  4031b4:	ret

00000000004031b8 <write_string_file_atomic_label>:
  4031b8:	stp	x29, x30, [sp, #-32]!
  4031bc:	mov	x29, sp
  4031c0:	str	x0, [sp, #24]
  4031c4:	str	x1, [sp, #16]
  4031c8:	mov	x2, #0x0                   	// #0
  4031cc:	ldr	x1, [sp, #16]
  4031d0:	ldr	x0, [sp, #24]
  4031d4:	bl	4027d0 <write_string_file_atomic_label_ts@plt>
  4031d8:	ldp	x29, x30, [sp], #32
  4031dc:	ret

00000000004031e0 <read_full_file>:
  4031e0:	stp	x29, x30, [sp, #-48]!
  4031e4:	mov	x29, sp
  4031e8:	str	x0, [sp, #40]
  4031ec:	str	x1, [sp, #32]
  4031f0:	str	x2, [sp, #24]
  4031f4:	ldr	x3, [sp, #24]
  4031f8:	ldr	x2, [sp, #32]
  4031fc:	mov	w1, #0x0                   	// #0
  403200:	ldr	x0, [sp, #40]
  403204:	bl	402870 <read_full_file_full@plt>
  403208:	ldp	x29, x30, [sp], #48
  40320c:	ret

0000000000403210 <read_line>:
  403210:	stp	x29, x30, [sp, #-48]!
  403214:	mov	x29, sp
  403218:	str	x0, [sp, #40]
  40321c:	str	x1, [sp, #32]
  403220:	str	x2, [sp, #24]
  403224:	ldr	x3, [sp, #24]
  403228:	mov	w2, #0x0                   	// #0
  40322c:	ldr	x1, [sp, #32]
  403230:	ldr	x0, [sp, #40]
  403234:	bl	402650 <read_line_full@plt>
  403238:	ldp	x29, x30, [sp], #48
  40323c:	ret

0000000000403240 <static_destruct>:
  403240:	stp	x29, x30, [sp, #-32]!
  403244:	mov	x29, sp
  403248:	adrp	x0, 409000 <_fini+0xf04>
  40324c:	add	x0, x0, #0xd0
  403250:	ldr	x0, [x0]
  403254:	cmp	x0, #0x0
  403258:	b.eq	4032bc <static_destruct+0x7c>  // b.none
  40325c:	adrp	x0, 409000 <_fini+0xf04>
  403260:	add	x0, x0, #0xd0
  403264:	ldr	x0, [x0]
  403268:	mov	x1, #0x8                   	// #8
  40326c:	bl	402f28 <ALIGN_TO>
  403270:	str	x0, [sp, #24]
  403274:	b	4032a0 <static_destruct+0x60>
  403278:	ldr	x0, [sp, #24]
  40327c:	ldr	x1, [x0, #8]
  403280:	ldr	x0, [sp, #24]
  403284:	ldr	x0, [x0]
  403288:	blr	x1
  40328c:	ldr	x0, [sp, #24]
  403290:	add	x0, x0, #0x10
  403294:	mov	x1, #0x8                   	// #8
  403298:	bl	402f28 <ALIGN_TO>
  40329c:	str	x0, [sp, #24]
  4032a0:	ldr	x1, [sp, #24]
  4032a4:	adrp	x0, 409000 <_fini+0xf04>
  4032a8:	add	x0, x0, #0xd8
  4032ac:	ldr	x0, [x0]
  4032b0:	cmp	x1, x0
  4032b4:	b.cc	403278 <static_destruct+0x38>  // b.lo, b.ul, b.last
  4032b8:	b	4032c0 <static_destruct+0x80>
  4032bc:	nop
  4032c0:	ldp	x29, x30, [sp], #32
  4032c4:	ret

00000000004032c8 <strv_freep>:
  4032c8:	stp	x29, x30, [sp, #-32]!
  4032cc:	mov	x29, sp
  4032d0:	str	x0, [sp, #24]
  4032d4:	ldr	x0, [sp, #24]
  4032d8:	ldr	x0, [x0]
  4032dc:	cmp	x0, #0x0
  4032e0:	b.eq	4032f0 <strv_freep+0x28>  // b.none
  4032e4:	ldr	x0, [sp, #24]
  4032e8:	ldr	x0, [x0]
  4032ec:	bl	402960 <strv_free@plt>
  4032f0:	nop
  4032f4:	ldp	x29, x30, [sp], #32
  4032f8:	ret

00000000004032fc <unit_status_info_clear>:
  4032fc:	stp	x29, x30, [sp, #-32]!
  403300:	mov	x29, sp
  403304:	str	x0, [sp, #24]
  403308:	ldr	x0, [sp, #24]
  40330c:	cmp	x0, #0x0
  403310:	cset	w0, eq  // eq = none
  403314:	and	w0, w0, #0xff
  403318:	and	x0, x0, #0xff
  40331c:	cmp	x0, #0x0
  403320:	b.eq	40334c <unit_status_info_clear+0x50>  // b.none
  403324:	adrp	x0, 408000 <run+0x534>
  403328:	add	x1, x0, #0x1f3
  40332c:	adrp	x0, 409000 <_fini+0xf04>
  403330:	add	x4, x0, #0x3f0
  403334:	mov	w3, #0x53                  	// #83
  403338:	mov	x2, x1
  40333c:	adrp	x0, 408000 <run+0x534>
  403340:	add	x1, x0, #0x210
  403344:	mov	w0, #0x0                   	// #0
  403348:	bl	402840 <log_assert_failed_realm@plt>
  40334c:	ldr	x0, [sp, #24]
  403350:	ldr	x0, [x0, #8]
  403354:	bl	402f58 <mfree>
  403358:	mov	x1, x0
  40335c:	ldr	x0, [sp, #24]
  403360:	str	x1, [x0, #8]
  403364:	ldr	x0, [sp, #24]
  403368:	ldr	x0, [x0, #16]
  40336c:	bl	402f58 <mfree>
  403370:	mov	x1, x0
  403374:	ldr	x0, [sp, #24]
  403378:	str	x1, [x0, #16]
  40337c:	ldr	x0, [sp, #24]
  403380:	ldr	x0, [x0, #24]
  403384:	bl	402f58 <mfree>
  403388:	mov	x1, x0
  40338c:	ldr	x0, [sp, #24]
  403390:	str	x1, [x0, #24]
  403394:	nop
  403398:	ldp	x29, x30, [sp], #32
  40339c:	ret

00000000004033a0 <unit_status_info_free>:
  4033a0:	stp	x29, x30, [sp, #-32]!
  4033a4:	mov	x29, sp
  4033a8:	str	x0, [sp, #24]
  4033ac:	ldr	x0, [sp, #24]
  4033b0:	cmp	x0, #0x0
  4033b4:	cset	w0, eq  // eq = none
  4033b8:	and	w0, w0, #0xff
  4033bc:	and	x0, x0, #0xff
  4033c0:	cmp	x0, #0x0
  4033c4:	b.eq	4033f0 <unit_status_info_free+0x50>  // b.none
  4033c8:	adrp	x0, 408000 <run+0x534>
  4033cc:	add	x1, x0, #0x1f3
  4033d0:	adrp	x0, 409000 <_fini+0xf04>
  4033d4:	add	x4, x0, #0x408
  4033d8:	mov	w3, #0x5b                  	// #91
  4033dc:	mov	x2, x1
  4033e0:	adrp	x0, 408000 <run+0x534>
  4033e4:	add	x1, x0, #0x210
  4033e8:	mov	w0, #0x0                   	// #0
  4033ec:	bl	402840 <log_assert_failed_realm@plt>
  4033f0:	ldr	x0, [sp, #24]
  4033f4:	bl	4032fc <unit_status_info_clear>
  4033f8:	ldr	x0, [sp, #24]
  4033fc:	ldr	x0, [x0]
  403400:	bl	402bb0 <free@plt>
  403404:	ldr	x0, [sp, #24]
  403408:	ldr	x0, [x0, #32]
  40340c:	bl	402bb0 <free@plt>
  403410:	ldr	x0, [sp, #24]
  403414:	bl	402bb0 <free@plt>
  403418:	nop
  40341c:	ldp	x29, x30, [sp], #32
  403420:	ret

0000000000403424 <context_clear>:
  403424:	stp	x29, x30, [sp, #-64]!
  403428:	mov	x29, sp
  40342c:	str	x0, [sp, #24]
  403430:	ldr	x0, [sp, #24]
  403434:	cmp	x0, #0x0
  403438:	cset	w0, eq  // eq = none
  40343c:	and	w0, w0, #0xff
  403440:	and	x0, x0, #0xff
  403444:	cmp	x0, #0x0
  403448:	b.eq	403474 <context_clear+0x50>  // b.none
  40344c:	adrp	x0, 408000 <run+0x534>
  403450:	add	x1, x0, #0x1f3
  403454:	adrp	x0, 409000 <_fini+0xf04>
  403458:	add	x4, x0, #0x420
  40345c:	mov	w3, #0x66                  	// #102
  403460:	mov	x2, x1
  403464:	adrp	x0, 408000 <run+0x534>
  403468:	add	x1, x0, #0x218
  40346c:	mov	w0, #0x0                   	// #0
  403470:	bl	402840 <log_assert_failed_realm@plt>
  403474:	ldr	x0, [sp, #24]
  403478:	ldr	x0, [x0]
  40347c:	bl	402bb0 <free@plt>
  403480:	ldr	x0, [sp, #24]
  403484:	ldr	x0, [x0, #16]
  403488:	bl	4027a0 <bus_verify_polkit_async_registry_free@plt>
  40348c:	ldr	x0, [sp, #24]
  403490:	ldr	x0, [x0, #24]
  403494:	bl	4026f0 <sd_bus_message_unref@plt>
  403498:	ldr	x0, [sp, #24]
  40349c:	ldr	x0, [x0, #32]
  4034a0:	bl	402c10 <sd_bus_slot_unref@plt>
  4034a4:	b	4035c8 <context_clear+0x1a4>
  4034a8:	ldr	x0, [sp, #24]
  4034ac:	add	x0, x0, #0x28
  4034b0:	str	x0, [sp, #48]
  4034b4:	ldr	x0, [sp, #40]
  4034b8:	str	x0, [sp, #56]
  4034bc:	ldr	x0, [sp, #56]
  4034c0:	cmp	x0, #0x0
  4034c4:	cset	w0, eq  // eq = none
  4034c8:	and	w0, w0, #0xff
  4034cc:	and	x0, x0, #0xff
  4034d0:	cmp	x0, #0x0
  4034d4:	b.eq	403500 <context_clear+0xdc>  // b.none
  4034d8:	adrp	x0, 408000 <run+0x534>
  4034dc:	add	x1, x0, #0x1f3
  4034e0:	adrp	x0, 409000 <_fini+0xf04>
  4034e4:	add	x4, x0, #0x420
  4034e8:	mov	w3, #0x6f                  	// #111
  4034ec:	mov	x2, x1
  4034f0:	adrp	x0, 408000 <run+0x534>
  4034f4:	add	x1, x0, #0x220
  4034f8:	mov	w0, #0x0                   	// #0
  4034fc:	bl	402840 <log_assert_failed_realm@plt>
  403500:	ldr	x0, [sp, #56]
  403504:	ldr	x0, [x0, #40]
  403508:	cmp	x0, #0x0
  40350c:	b.eq	403524 <context_clear+0x100>  // b.none
  403510:	ldr	x0, [sp, #56]
  403514:	ldr	x0, [x0, #40]
  403518:	ldr	x1, [sp, #56]
  40351c:	ldr	x1, [x1, #48]
  403520:	str	x1, [x0, #48]
  403524:	ldr	x0, [sp, #56]
  403528:	ldr	x0, [x0, #48]
  40352c:	cmp	x0, #0x0
  403530:	b.eq	40354c <context_clear+0x128>  // b.none
  403534:	ldr	x0, [sp, #56]
  403538:	ldr	x0, [x0, #48]
  40353c:	ldr	x1, [sp, #56]
  403540:	ldr	x1, [x1, #40]
  403544:	str	x1, [x0, #40]
  403548:	b	4035a8 <context_clear+0x184>
  40354c:	ldr	x0, [sp, #48]
  403550:	ldr	x0, [x0]
  403554:	ldr	x1, [sp, #56]
  403558:	cmp	x1, x0
  40355c:	cset	w0, ne  // ne = any
  403560:	and	w0, w0, #0xff
  403564:	and	x0, x0, #0xff
  403568:	cmp	x0, #0x0
  40356c:	b.eq	403598 <context_clear+0x174>  // b.none
  403570:	adrp	x0, 408000 <run+0x534>
  403574:	add	x1, x0, #0x1f3
  403578:	adrp	x0, 409000 <_fini+0xf04>
  40357c:	add	x4, x0, #0x420
  403580:	mov	w3, #0x6f                  	// #111
  403584:	mov	x2, x1
  403588:	adrp	x0, 408000 <run+0x534>
  40358c:	add	x1, x0, #0x228
  403590:	mov	w0, #0x0                   	// #0
  403594:	bl	402840 <log_assert_failed_realm@plt>
  403598:	ldr	x0, [sp, #56]
  40359c:	ldr	x1, [x0, #40]
  4035a0:	ldr	x0, [sp, #48]
  4035a4:	str	x1, [x0]
  4035a8:	ldr	x0, [sp, #56]
  4035ac:	str	xzr, [x0, #48]
  4035b0:	ldr	x0, [sp, #56]
  4035b4:	ldr	x1, [x0, #48]
  4035b8:	ldr	x0, [sp, #56]
  4035bc:	str	x1, [x0, #40]
  4035c0:	ldr	x0, [sp, #40]
  4035c4:	bl	4033a0 <unit_status_info_free>
  4035c8:	ldr	x0, [sp, #24]
  4035cc:	ldr	x0, [x0, #40]
  4035d0:	str	x0, [sp, #40]
  4035d4:	ldr	x0, [sp, #40]
  4035d8:	cmp	x0, #0x0
  4035dc:	b.ne	4034a8 <context_clear+0x84>  // b.any
  4035e0:	nop
  4035e4:	nop
  4035e8:	ldp	x29, x30, [sp], #64
  4035ec:	ret

00000000004035f0 <context_add_ntp_service>:
  4035f0:	sub	sp, sp, #0x90
  4035f4:	stp	x29, x30, [sp, #32]
  4035f8:	add	x29, sp, #0x20
  4035fc:	str	x0, [sp, #72]
  403600:	str	x1, [sp, #64]
  403604:	str	x2, [sp, #56]
  403608:	mov	w1, #0x1                   	// #1
  40360c:	ldr	x0, [sp, #64]
  403610:	bl	402c70 <unit_name_is_valid@plt>
  403614:	and	w0, w0, #0xff
  403618:	eor	w0, w0, #0x1
  40361c:	and	w0, w0, #0xff
  403620:	cmp	w0, #0x0
  403624:	b.eq	403630 <context_add_ntp_service+0x40>  // b.none
  403628:	mov	w0, #0xffffffea            	// #-22
  40362c:	b	403878 <context_add_ntp_service+0x288>
  403630:	ldr	x0, [sp, #72]
  403634:	ldr	x0, [x0, #40]
  403638:	str	x0, [sp, #80]
  40363c:	b	40366c <context_add_ntp_service+0x7c>
  403640:	ldr	x0, [sp, #80]
  403644:	ldr	x0, [x0]
  403648:	ldr	x1, [sp, #64]
  40364c:	bl	402ad0 <strcmp@plt>
  403650:	cmp	w0, #0x0
  403654:	b.ne	403660 <context_add_ntp_service+0x70>  // b.any
  403658:	mov	w0, #0x0                   	// #0
  40365c:	b	403878 <context_add_ntp_service+0x288>
  403660:	ldr	x0, [sp, #80]
  403664:	ldr	x0, [x0, #40]
  403668:	str	x0, [sp, #80]
  40366c:	ldr	x0, [sp, #80]
  403670:	cmp	x0, #0x0
  403674:	b.ne	403640 <context_add_ntp_service+0x50>  // b.any
  403678:	mov	x1, #0x38                  	// #56
  40367c:	mov	x0, #0x1                   	// #1
  403680:	bl	402b50 <calloc@plt>
  403684:	str	x0, [sp, #80]
  403688:	ldr	x0, [sp, #80]
  40368c:	cmp	x0, #0x0
  403690:	b.ne	40369c <context_add_ntp_service+0xac>  // b.any
  403694:	mov	w0, #0xfffffff4            	// #-12
  403698:	b	403878 <context_add_ntp_service+0x288>
  40369c:	ldr	x0, [sp, #64]
  4036a0:	bl	402b30 <strdup@plt>
  4036a4:	mov	x1, x0
  4036a8:	ldr	x0, [sp, #80]
  4036ac:	str	x1, [x0]
  4036b0:	ldr	x0, [sp, #80]
  4036b4:	ldr	x0, [x0]
  4036b8:	cmp	x0, #0x0
  4036bc:	b.ne	4036d0 <context_add_ntp_service+0xe0>  // b.any
  4036c0:	ldr	x0, [sp, #80]
  4036c4:	bl	402bb0 <free@plt>
  4036c8:	mov	w0, #0xfffffff4            	// #-12
  4036cc:	b	403878 <context_add_ntp_service+0x288>
  4036d0:	ldr	x0, [sp, #72]
  4036d4:	add	x0, x0, #0x28
  4036d8:	str	x0, [sp, #104]
  4036dc:	ldr	x0, [sp, #104]
  4036e0:	ldr	x0, [x0]
  4036e4:	str	x0, [sp, #96]
  4036e8:	ldr	x0, [sp, #96]
  4036ec:	cmp	x0, #0x0
  4036f0:	b.ne	403708 <context_add_ntp_service+0x118>  // b.any
  4036f4:	str	xzr, [sp, #88]
  4036f8:	b	403720 <context_add_ntp_service+0x130>
  4036fc:	ldr	x0, [sp, #96]
  403700:	ldr	x0, [x0, #40]
  403704:	str	x0, [sp, #96]
  403708:	ldr	x0, [sp, #96]
  40370c:	ldr	x0, [x0, #40]
  403710:	cmp	x0, #0x0
  403714:	b.ne	4036fc <context_add_ntp_service+0x10c>  // b.any
  403718:	ldr	x0, [sp, #96]
  40371c:	str	x0, [sp, #88]
  403720:	ldr	x0, [sp, #104]
  403724:	str	x0, [sp, #112]
  403728:	ldr	x0, [sp, #88]
  40372c:	str	x0, [sp, #120]
  403730:	ldr	x0, [sp, #80]
  403734:	str	x0, [sp, #128]
  403738:	ldr	x0, [sp, #128]
  40373c:	cmp	x0, #0x0
  403740:	cset	w0, eq  // eq = none
  403744:	and	w0, w0, #0xff
  403748:	and	x0, x0, #0xff
  40374c:	cmp	x0, #0x0
  403750:	b.eq	40377c <context_add_ntp_service+0x18c>  // b.none
  403754:	adrp	x0, 408000 <run+0x534>
  403758:	add	x1, x0, #0x1f3
  40375c:	adrp	x0, 409000 <_fini+0xf04>
  403760:	add	x4, x0, #0x430
  403764:	mov	w3, #0x89                  	// #137
  403768:	mov	x2, x1
  40376c:	adrp	x0, 408000 <run+0x534>
  403770:	add	x1, x0, #0x238
  403774:	mov	w0, #0x0                   	// #0
  403778:	bl	402840 <log_assert_failed_realm@plt>
  40377c:	ldr	x0, [sp, #120]
  403780:	cmp	x0, #0x0
  403784:	b.ne	4037d0 <context_add_ntp_service+0x1e0>  // b.any
  403788:	ldr	x0, [sp, #112]
  40378c:	ldr	x1, [x0]
  403790:	ldr	x0, [sp, #128]
  403794:	str	x1, [x0, #40]
  403798:	ldr	x0, [sp, #128]
  40379c:	ldr	x0, [x0, #40]
  4037a0:	cmp	x0, #0x0
  4037a4:	b.eq	4037b8 <context_add_ntp_service+0x1c8>  // b.none
  4037a8:	ldr	x0, [sp, #128]
  4037ac:	ldr	x0, [x0, #40]
  4037b0:	ldr	x1, [sp, #128]
  4037b4:	str	x1, [x0, #48]
  4037b8:	ldr	x0, [sp, #128]
  4037bc:	str	xzr, [x0, #48]
  4037c0:	ldr	x0, [sp, #112]
  4037c4:	ldr	x1, [sp, #128]
  4037c8:	str	x1, [x0]
  4037cc:	b	403818 <context_add_ntp_service+0x228>
  4037d0:	ldr	x0, [sp, #120]
  4037d4:	ldr	x1, [x0, #40]
  4037d8:	ldr	x0, [sp, #128]
  4037dc:	str	x1, [x0, #40]
  4037e0:	ldr	x0, [sp, #128]
  4037e4:	ldr	x0, [x0, #40]
  4037e8:	cmp	x0, #0x0
  4037ec:	b.eq	403800 <context_add_ntp_service+0x210>  // b.none
  4037f0:	ldr	x0, [sp, #128]
  4037f4:	ldr	x0, [x0, #40]
  4037f8:	ldr	x1, [sp, #128]
  4037fc:	str	x1, [x0, #48]
  403800:	ldr	x0, [sp, #128]
  403804:	ldr	x1, [sp, #120]
  403808:	str	x1, [x0, #48]
  40380c:	ldr	x0, [sp, #120]
  403810:	ldr	x1, [sp, #128]
  403814:	str	x1, [x0, #40]
  403818:	ldr	x0, [sp, #80]
  40381c:	str	x0, [sp, #136]
  403820:	adrp	x0, 408000 <run+0x534>
  403824:	add	x1, x0, #0x1f3
  403828:	ldr	x0, [sp, #136]
  40382c:	ldr	x2, [x0]
  403830:	ldr	x0, [sp, #56]
  403834:	str	x0, [sp, #16]
  403838:	adrp	x0, 408000 <run+0x534>
  40383c:	add	x0, x0, #0x248
  403840:	str	x0, [sp, #8]
  403844:	str	xzr, [sp]
  403848:	mov	x7, #0x0                   	// #0
  40384c:	mov	x6, x2
  403850:	adrp	x0, 408000 <run+0x534>
  403854:	add	x5, x0, #0x240
  403858:	adrp	x0, 409000 <_fini+0xf04>
  40385c:	add	x4, x0, #0x448
  403860:	mov	w3, #0x8a                  	// #138
  403864:	mov	x2, x1
  403868:	mov	w1, #0x0                   	// #0
  40386c:	mov	w0, #0x7                   	// #7
  403870:	bl	402930 <log_object_internal@plt>
  403874:	mov	w0, #0x0                   	// #0
  403878:	ldp	x29, x30, [sp, #32]
  40387c:	add	sp, sp, #0x90
  403880:	ret

0000000000403884 <context_parse_ntp_services_from_environment>:
  403884:	stp	x29, x30, [sp, #-128]!
  403888:	mov	x29, sp
  40388c:	stp	x19, x20, [sp, #16]
  403890:	str	x0, [sp, #40]
  403894:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  403898:	add	x0, x0, #0xa68
  40389c:	ldr	x1, [x0]
  4038a0:	str	x1, [sp, #120]
  4038a4:	mov	x1, #0x0                   	// #0
  4038a8:	ldr	x0, [sp, #40]
  4038ac:	cmp	x0, #0x0
  4038b0:	cset	w0, eq  // eq = none
  4038b4:	and	w0, w0, #0xff
  4038b8:	and	x0, x0, #0xff
  4038bc:	cmp	x0, #0x0
  4038c0:	b.eq	4038ec <context_parse_ntp_services_from_environment+0x68>  // b.none
  4038c4:	adrp	x0, 408000 <run+0x534>
  4038c8:	add	x1, x0, #0x1f3
  4038cc:	adrp	x0, 409000 <_fini+0xf04>
  4038d0:	add	x4, x0, #0x460
  4038d4:	mov	w3, #0x93                  	// #147
  4038d8:	mov	x2, x1
  4038dc:	adrp	x0, 408000 <run+0x534>
  4038e0:	add	x1, x0, #0x218
  4038e4:	mov	w0, #0x0                   	// #0
  4038e8:	bl	402840 <log_assert_failed_realm@plt>
  4038ec:	adrp	x0, 408000 <run+0x534>
  4038f0:	add	x0, x0, #0x258
  4038f4:	bl	402b60 <getenv@plt>
  4038f8:	str	x0, [sp, #112]
  4038fc:	ldr	x0, [sp, #112]
  403900:	cmp	x0, #0x0
  403904:	b.ne	403910 <context_parse_ntp_services_from_environment+0x8c>  // b.any
  403908:	mov	w20, #0x0                   	// #0
  40390c:	b	403b50 <context_parse_ntp_services_from_environment+0x2cc>
  403910:	mov	w0, #0x7                   	// #7
  403914:	str	w0, [sp, #56]
  403918:	str	wzr, [sp, #60]
  40391c:	str	wzr, [sp, #64]
  403920:	ldr	w0, [sp, #64]
  403924:	bl	402c80 <log_get_max_level_realm@plt>
  403928:	mov	w1, w0
  40392c:	ldr	w0, [sp, #56]
  403930:	and	w0, w0, #0x7
  403934:	cmp	w1, w0
  403938:	b.lt	403980 <context_parse_ntp_services_from_environment+0xfc>  // b.tstop
  40393c:	ldr	w0, [sp, #64]
  403940:	lsl	w1, w0, #10
  403944:	ldr	w0, [sp, #56]
  403948:	orr	w7, w1, w0
  40394c:	adrp	x0, 408000 <run+0x534>
  403950:	add	x1, x0, #0x1f3
  403954:	ldr	x6, [sp, #112]
  403958:	adrp	x0, 408000 <run+0x534>
  40395c:	add	x5, x0, #0x278
  403960:	adrp	x0, 409000 <_fini+0xf04>
  403964:	add	x4, x0, #0x490
  403968:	mov	w3, #0x99                  	// #153
  40396c:	mov	x2, x1
  403970:	ldr	w1, [sp, #60]
  403974:	mov	w0, w7
  403978:	bl	402a80 <log_internal_realm@plt>
  40397c:	b	403988 <context_parse_ntp_services_from_environment+0x104>
  403980:	ldr	w0, [sp, #60]
  403984:	cmp	w0, #0x0
  403988:	ldr	x0, [sp, #112]
  40398c:	str	x0, [sp, #96]
  403990:	str	xzr, [sp, #104]
  403994:	add	x1, sp, #0x68
  403998:	add	x4, sp, #0x60
  40399c:	mov	w3, #0x0                   	// #0
  4039a0:	adrp	x0, 408000 <run+0x534>
  4039a4:	add	x2, x0, #0x2d8
  4039a8:	mov	x0, x4
  4039ac:	bl	402ae0 <extract_first_word@plt>
  4039b0:	str	w0, [sp, #68]
  4039b4:	ldr	w0, [sp, #68]
  4039b8:	cmp	w0, #0x0
  4039bc:	b.ne	4039c8 <context_parse_ntp_services_from_environment+0x144>  // b.any
  4039c0:	mov	w19, #0x0                   	// #0
  4039c4:	b	403b30 <context_parse_ntp_services_from_environment+0x2ac>
  4039c8:	ldr	w0, [sp, #68]
  4039cc:	cmn	w0, #0xc
  4039d0:	b.ne	4039fc <context_parse_ntp_services_from_environment+0x178>  // b.any
  4039d4:	adrp	x0, 408000 <run+0x534>
  4039d8:	add	x1, x0, #0x1f3
  4039dc:	adrp	x0, 409000 <_fini+0xf04>
  4039e0:	add	x3, x0, #0x490
  4039e4:	mov	w2, #0xa2                  	// #162
  4039e8:	mov	w0, #0x0                   	// #0
  4039ec:	bl	402c50 <log_oom_internal@plt>
  4039f0:	mov	w20, w0
  4039f4:	mov	w19, #0x1                   	// #1
  4039f8:	b	403b30 <context_parse_ntp_services_from_environment+0x2ac>
  4039fc:	ldr	w0, [sp, #68]
  403a00:	cmp	w0, #0x0
  403a04:	b.ge	403a88 <context_parse_ntp_services_from_environment+0x204>  // b.tcont
  403a08:	mov	w0, #0x3                   	// #3
  403a0c:	str	w0, [sp, #84]
  403a10:	str	wzr, [sp, #88]
  403a14:	str	wzr, [sp, #92]
  403a18:	ldr	w0, [sp, #92]
  403a1c:	bl	402c80 <log_get_max_level_realm@plt>
  403a20:	mov	w1, w0
  403a24:	ldr	w0, [sp, #84]
  403a28:	and	w0, w0, #0x7
  403a2c:	cmp	w1, w0
  403a30:	b.lt	403a78 <context_parse_ntp_services_from_environment+0x1f4>  // b.tstop
  403a34:	ldr	w0, [sp, #92]
  403a38:	lsl	w1, w0, #10
  403a3c:	ldr	w0, [sp, #84]
  403a40:	orr	w7, w1, w0
  403a44:	adrp	x0, 408000 <run+0x534>
  403a48:	add	x1, x0, #0x1f3
  403a4c:	ldr	x6, [sp, #112]
  403a50:	adrp	x0, 408000 <run+0x534>
  403a54:	add	x5, x0, #0x2e0
  403a58:	adrp	x0, 409000 <_fini+0xf04>
  403a5c:	add	x4, x0, #0x490
  403a60:	mov	w3, #0xa4                  	// #164
  403a64:	mov	x2, x1
  403a68:	ldr	w1, [sp, #88]
  403a6c:	mov	w0, w7
  403a70:	bl	402a80 <log_internal_realm@plt>
  403a74:	b	403a80 <context_parse_ntp_services_from_environment+0x1fc>
  403a78:	ldr	w0, [sp, #88]
  403a7c:	cmp	w0, #0x0
  403a80:	mov	w19, #0x0                   	// #0
  403a84:	b	403b30 <context_parse_ntp_services_from_environment+0x2ac>
  403a88:	ldr	x1, [sp, #104]
  403a8c:	adrp	x0, 408000 <run+0x534>
  403a90:	add	x2, x0, #0x300
  403a94:	ldr	x0, [sp, #40]
  403a98:	bl	4035f0 <context_add_ntp_service>
  403a9c:	str	w0, [sp, #68]
  403aa0:	ldr	w0, [sp, #68]
  403aa4:	cmp	w0, #0x0
  403aa8:	b.ge	403b2c <context_parse_ntp_services_from_environment+0x2a8>  // b.tcont
  403aac:	mov	w0, #0x4                   	// #4
  403ab0:	str	w0, [sp, #72]
  403ab4:	ldr	w0, [sp, #68]
  403ab8:	str	w0, [sp, #76]
  403abc:	str	wzr, [sp, #80]
  403ac0:	ldr	w0, [sp, #80]
  403ac4:	bl	402c80 <log_get_max_level_realm@plt>
  403ac8:	mov	w1, w0
  403acc:	ldr	w0, [sp, #72]
  403ad0:	and	w0, w0, #0x7
  403ad4:	cmp	w1, w0
  403ad8:	b.lt	403b24 <context_parse_ntp_services_from_environment+0x2a0>  // b.tstop
  403adc:	ldr	w0, [sp, #80]
  403ae0:	lsl	w1, w0, #10
  403ae4:	ldr	w0, [sp, #72]
  403ae8:	orr	w7, w1, w0
  403aec:	adrp	x0, 408000 <run+0x534>
  403af0:	add	x1, x0, #0x1f3
  403af4:	ldr	x0, [sp, #104]
  403af8:	mov	x6, x0
  403afc:	adrp	x0, 408000 <run+0x534>
  403b00:	add	x5, x0, #0x320
  403b04:	adrp	x0, 409000 <_fini+0xf04>
  403b08:	add	x4, x0, #0x490
  403b0c:	mov	w3, #0xaa                  	// #170
  403b10:	mov	x2, x1
  403b14:	ldr	w1, [sp, #76]
  403b18:	mov	w0, w7
  403b1c:	bl	402a80 <log_internal_realm@plt>
  403b20:	b	403b2c <context_parse_ntp_services_from_environment+0x2a8>
  403b24:	ldr	w0, [sp, #76]
  403b28:	cmp	w0, #0x0
  403b2c:	mov	w19, #0x2                   	// #2
  403b30:	add	x0, sp, #0x68
  403b34:	bl	402f78 <freep>
  403b38:	cmp	w19, #0x0
  403b3c:	b.eq	403b4c <context_parse_ntp_services_from_environment+0x2c8>  // b.none
  403b40:	cmp	w19, #0x2
  403b44:	b.ne	403b50 <context_parse_ntp_services_from_environment+0x2cc>  // b.any
  403b48:	b	403990 <context_parse_ntp_services_from_environment+0x10c>
  403b4c:	mov	w20, #0x1                   	// #1
  403b50:	mov	w1, w20
  403b54:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  403b58:	add	x0, x0, #0xa68
  403b5c:	ldr	x2, [sp, #120]
  403b60:	ldr	x0, [x0]
  403b64:	eor	x0, x2, x0
  403b68:	cmp	x0, #0x0
  403b6c:	b.eq	403b74 <context_parse_ntp_services_from_environment+0x2f0>  // b.none
  403b70:	bl	4029c0 <__stack_chk_fail@plt>
  403b74:	mov	w0, w1
  403b78:	ldp	x19, x20, [sp, #16]
  403b7c:	ldp	x29, x30, [sp], #128
  403b80:	ret

0000000000403b84 <context_parse_ntp_services_from_disk>:
  403b84:	stp	x29, x30, [sp, #-208]!
  403b88:	mov	x29, sp
  403b8c:	str	x19, [sp, #16]
  403b90:	str	x0, [sp, #40]
  403b94:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  403b98:	add	x0, x0, #0xa68
  403b9c:	ldr	x1, [x0]
  403ba0:	str	x1, [sp, #200]
  403ba4:	mov	x1, #0x0                   	// #0
  403ba8:	str	xzr, [sp, #112]
  403bac:	adrp	x0, 408000 <run+0x534>
  403bb0:	add	x1, x0, #0x3e8
  403bb4:	add	x0, sp, #0x98
  403bb8:	ldp	x2, x3, [x1]
  403bbc:	stp	x2, x3, [x0]
  403bc0:	ldp	x2, x3, [x1, #16]
  403bc4:	stp	x2, x3, [x0, #16]
  403bc8:	ldp	x2, x3, [x1, #32]
  403bcc:	stp	x2, x3, [x0, #32]
  403bd0:	add	x0, sp, #0x98
  403bd4:	add	x5, sp, #0x70
  403bd8:	mov	x4, x0
  403bdc:	mov	w3, #0x10                  	// #16
  403be0:	mov	x2, #0x0                   	// #0
  403be4:	adrp	x0, 408000 <run+0x534>
  403be8:	add	x1, x0, #0x350
  403bec:	mov	x0, x5
  403bf0:	bl	402c30 <conf_files_list_strv@plt>
  403bf4:	str	w0, [sp, #48]
  403bf8:	ldr	w0, [sp, #48]
  403bfc:	cmp	w0, #0x0
  403c00:	b.ge	403c90 <context_parse_ntp_services_from_disk+0x10c>  // b.tcont
  403c04:	mov	w0, #0x3                   	// #3
  403c08:	str	w0, [sp, #100]
  403c0c:	ldr	w0, [sp, #48]
  403c10:	str	w0, [sp, #104]
  403c14:	str	wzr, [sp, #108]
  403c18:	ldr	w0, [sp, #108]
  403c1c:	bl	402c80 <log_get_max_level_realm@plt>
  403c20:	mov	w1, w0
  403c24:	ldr	w0, [sp, #100]
  403c28:	and	w0, w0, #0x7
  403c2c:	cmp	w1, w0
  403c30:	b.lt	403c78 <context_parse_ntp_services_from_disk+0xf4>  // b.tstop
  403c34:	ldr	w0, [sp, #108]
  403c38:	lsl	w1, w0, #10
  403c3c:	ldr	w0, [sp, #100]
  403c40:	orr	w6, w1, w0
  403c44:	adrp	x0, 408000 <run+0x534>
  403c48:	add	x1, x0, #0x1f3
  403c4c:	adrp	x0, 408000 <run+0x534>
  403c50:	add	x5, x0, #0x358
  403c54:	adrp	x0, 409000 <_fini+0xf04>
  403c58:	add	x4, x0, #0x4c0
  403c5c:	mov	w3, #0xb7                  	// #183
  403c60:	mov	x2, x1
  403c64:	ldr	w1, [sp, #104]
  403c68:	mov	w0, w6
  403c6c:	bl	402a80 <log_internal_realm@plt>
  403c70:	mov	w19, w0
  403c74:	b	403fe8 <context_parse_ntp_services_from_disk+0x464>
  403c78:	ldr	w0, [sp, #104]
  403c7c:	cmp	w0, #0x0
  403c80:	cneg	w0, w0, lt  // lt = tstop
  403c84:	and	w0, w0, #0xff
  403c88:	neg	w19, w0
  403c8c:	b	403fe8 <context_parse_ntp_services_from_disk+0x464>
  403c90:	ldr	x0, [sp, #112]
  403c94:	str	x0, [sp, #136]
  403c98:	b	403fc8 <context_parse_ntp_services_from_disk+0x444>
  403c9c:	str	xzr, [sp, #120]
  403ca0:	mov	w0, #0x7                   	// #7
  403ca4:	str	w0, [sp, #52]
  403ca8:	str	wzr, [sp, #56]
  403cac:	str	wzr, [sp, #60]
  403cb0:	ldr	w0, [sp, #60]
  403cb4:	bl	402c80 <log_get_max_level_realm@plt>
  403cb8:	mov	w1, w0
  403cbc:	ldr	w0, [sp, #52]
  403cc0:	and	w0, w0, #0x7
  403cc4:	cmp	w1, w0
  403cc8:	b.lt	403d18 <context_parse_ntp_services_from_disk+0x194>  // b.tstop
  403ccc:	ldr	w0, [sp, #60]
  403cd0:	lsl	w1, w0, #10
  403cd4:	ldr	w0, [sp, #52]
  403cd8:	orr	w7, w1, w0
  403cdc:	adrp	x0, 408000 <run+0x534>
  403ce0:	add	x1, x0, #0x1f3
  403ce4:	ldr	x0, [sp, #136]
  403ce8:	ldr	x0, [x0]
  403cec:	mov	x6, x0
  403cf0:	adrp	x0, 408000 <run+0x534>
  403cf4:	add	x5, x0, #0x380
  403cf8:	adrp	x0, 409000 <_fini+0xf04>
  403cfc:	add	x4, x0, #0x4c0
  403d00:	mov	w3, #0xbc                  	// #188
  403d04:	mov	x2, x1
  403d08:	ldr	w1, [sp, #56]
  403d0c:	mov	w0, w7
  403d10:	bl	402a80 <log_internal_realm@plt>
  403d14:	b	403d20 <context_parse_ntp_services_from_disk+0x19c>
  403d18:	ldr	w0, [sp, #56]
  403d1c:	cmp	w0, #0x0
  403d20:	ldr	x0, [sp, #136]
  403d24:	ldr	x3, [x0]
  403d28:	add	x0, sp, #0x78
  403d2c:	mov	x2, x0
  403d30:	adrp	x0, 408000 <run+0x534>
  403d34:	add	x1, x0, #0x398
  403d38:	mov	x0, x3
  403d3c:	bl	402920 <fopen_unlocked@plt>
  403d40:	str	w0, [sp, #48]
  403d44:	ldr	w0, [sp, #48]
  403d48:	cmp	w0, #0x0
  403d4c:	b.ge	403ddc <context_parse_ntp_services_from_disk+0x258>  // b.tcont
  403d50:	mov	w0, #0x3                   	// #3
  403d54:	str	w0, [sp, #88]
  403d58:	ldr	w0, [sp, #48]
  403d5c:	str	w0, [sp, #92]
  403d60:	str	wzr, [sp, #96]
  403d64:	ldr	w0, [sp, #96]
  403d68:	bl	402c80 <log_get_max_level_realm@plt>
  403d6c:	mov	w1, w0
  403d70:	ldr	w0, [sp, #88]
  403d74:	and	w0, w0, #0x7
  403d78:	cmp	w1, w0
  403d7c:	b.lt	403dcc <context_parse_ntp_services_from_disk+0x248>  // b.tstop
  403d80:	ldr	w0, [sp, #96]
  403d84:	lsl	w1, w0, #10
  403d88:	ldr	w0, [sp, #88]
  403d8c:	orr	w7, w1, w0
  403d90:	adrp	x0, 408000 <run+0x534>
  403d94:	add	x1, x0, #0x1f3
  403d98:	ldr	x0, [sp, #136]
  403d9c:	ldr	x0, [x0]
  403da0:	mov	x6, x0
  403da4:	adrp	x0, 408000 <run+0x534>
  403da8:	add	x5, x0, #0x3a0
  403dac:	adrp	x0, 409000 <_fini+0xf04>
  403db0:	add	x4, x0, #0x4c0
  403db4:	mov	w3, #0xc0                  	// #192
  403db8:	mov	x2, x1
  403dbc:	ldr	w1, [sp, #92]
  403dc0:	mov	w0, w7
  403dc4:	bl	402a80 <log_internal_realm@plt>
  403dc8:	b	403dd4 <context_parse_ntp_services_from_disk+0x250>
  403dcc:	ldr	w0, [sp, #92]
  403dd0:	cmp	w0, #0x0
  403dd4:	mov	w19, #0x0                   	// #0
  403dd8:	b	403fb0 <context_parse_ntp_services_from_disk+0x42c>
  403ddc:	str	xzr, [sp, #128]
  403de0:	ldr	x0, [sp, #120]
  403de4:	add	x1, sp, #0x80
  403de8:	mov	x2, x1
  403dec:	mov	x1, #0x800                 	// #2048
  403df0:	bl	403210 <read_line>
  403df4:	str	w0, [sp, #48]
  403df8:	ldr	w0, [sp, #48]
  403dfc:	cmp	w0, #0x0
  403e00:	b.ge	403e90 <context_parse_ntp_services_from_disk+0x30c>  // b.tcont
  403e04:	mov	w0, #0x3                   	// #3
  403e08:	str	w0, [sp, #76]
  403e0c:	ldr	w0, [sp, #48]
  403e10:	str	w0, [sp, #80]
  403e14:	str	wzr, [sp, #84]
  403e18:	ldr	w0, [sp, #84]
  403e1c:	bl	402c80 <log_get_max_level_realm@plt>
  403e20:	mov	w1, w0
  403e24:	ldr	w0, [sp, #76]
  403e28:	and	w0, w0, #0x7
  403e2c:	cmp	w1, w0
  403e30:	b.lt	403e80 <context_parse_ntp_services_from_disk+0x2fc>  // b.tstop
  403e34:	ldr	w0, [sp, #84]
  403e38:	lsl	w1, w0, #10
  403e3c:	ldr	w0, [sp, #76]
  403e40:	orr	w7, w1, w0
  403e44:	adrp	x0, 408000 <run+0x534>
  403e48:	add	x1, x0, #0x1f3
  403e4c:	ldr	x0, [sp, #136]
  403e50:	ldr	x0, [x0]
  403e54:	mov	x6, x0
  403e58:	adrp	x0, 408000 <run+0x534>
  403e5c:	add	x5, x0, #0x3c0
  403e60:	adrp	x0, 409000 <_fini+0xf04>
  403e64:	add	x4, x0, #0x4c0
  403e68:	mov	w3, #0xca                  	// #202
  403e6c:	mov	x2, x1
  403e70:	ldr	w1, [sp, #80]
  403e74:	mov	w0, w7
  403e78:	bl	402a80 <log_internal_realm@plt>
  403e7c:	b	403e88 <context_parse_ntp_services_from_disk+0x304>
  403e80:	ldr	w0, [sp, #80]
  403e84:	cmp	w0, #0x0
  403e88:	mov	w19, #0x0                   	// #0
  403e8c:	b	403f8c <context_parse_ntp_services_from_disk+0x408>
  403e90:	ldr	w0, [sp, #48]
  403e94:	cmp	w0, #0x0
  403e98:	b.ne	403ea4 <context_parse_ntp_services_from_disk+0x320>  // b.any
  403e9c:	mov	w19, #0x1                   	// #1
  403ea0:	b	403f8c <context_parse_ntp_services_from_disk+0x408>
  403ea4:	ldr	x0, [sp, #128]
  403ea8:	bl	402ba0 <strstrip@plt>
  403eac:	str	x0, [sp, #144]
  403eb0:	ldr	x0, [sp, #144]
  403eb4:	bl	403104 <isempty>
  403eb8:	and	w0, w0, #0xff
  403ebc:	cmp	w0, #0x0
  403ec0:	b.ne	403edc <context_parse_ntp_services_from_disk+0x358>  // b.any
  403ec4:	ldr	x1, [sp, #144]
  403ec8:	adrp	x0, 408000 <run+0x534>
  403ecc:	add	x0, x0, #0x3e0
  403ed0:	bl	403144 <startswith>
  403ed4:	cmp	x0, #0x0
  403ed8:	b.eq	403ee4 <context_parse_ntp_services_from_disk+0x360>  // b.none
  403edc:	mov	w19, #0x0                   	// #0
  403ee0:	b	403f8c <context_parse_ntp_services_from_disk+0x408>
  403ee4:	ldr	x0, [sp, #136]
  403ee8:	ldr	x0, [x0]
  403eec:	mov	x2, x0
  403ef0:	ldr	x1, [sp, #144]
  403ef4:	ldr	x0, [sp, #40]
  403ef8:	bl	4035f0 <context_add_ntp_service>
  403efc:	str	w0, [sp, #48]
  403f00:	ldr	w0, [sp, #48]
  403f04:	cmp	w0, #0x0
  403f08:	b.ge	403f88 <context_parse_ntp_services_from_disk+0x404>  // b.tcont
  403f0c:	mov	w0, #0x4                   	// #4
  403f10:	str	w0, [sp, #64]
  403f14:	ldr	w0, [sp, #48]
  403f18:	str	w0, [sp, #68]
  403f1c:	str	wzr, [sp, #72]
  403f20:	ldr	w0, [sp, #72]
  403f24:	bl	402c80 <log_get_max_level_realm@plt>
  403f28:	mov	w1, w0
  403f2c:	ldr	w0, [sp, #64]
  403f30:	and	w0, w0, #0x7
  403f34:	cmp	w1, w0
  403f38:	b.lt	403f80 <context_parse_ntp_services_from_disk+0x3fc>  // b.tstop
  403f3c:	ldr	w0, [sp, #72]
  403f40:	lsl	w1, w0, #10
  403f44:	ldr	w0, [sp, #64]
  403f48:	orr	w7, w1, w0
  403f4c:	adrp	x0, 408000 <run+0x534>
  403f50:	add	x1, x0, #0x1f3
  403f54:	ldr	x6, [sp, #144]
  403f58:	adrp	x0, 408000 <run+0x534>
  403f5c:	add	x5, x0, #0x320
  403f60:	adrp	x0, 409000 <_fini+0xf04>
  403f64:	add	x4, x0, #0x4c0
  403f68:	mov	w3, #0xd6                  	// #214
  403f6c:	mov	x2, x1
  403f70:	ldr	w1, [sp, #68]
  403f74:	mov	w0, w7
  403f78:	bl	402a80 <log_internal_realm@plt>
  403f7c:	b	403f88 <context_parse_ntp_services_from_disk+0x404>
  403f80:	ldr	w0, [sp, #68]
  403f84:	cmp	w0, #0x0
  403f88:	mov	w19, #0x2                   	// #2
  403f8c:	add	x0, sp, #0x80
  403f90:	bl	402f78 <freep>
  403f94:	cmp	w19, #0x0
  403f98:	b.eq	403ddc <context_parse_ntp_services_from_disk+0x258>  // b.none
  403f9c:	cmp	w19, #0x2
  403fa0:	b.eq	403fac <context_parse_ntp_services_from_disk+0x428>  // b.none
  403fa4:	mov	w19, #0x1                   	// #1
  403fa8:	b	403fb0 <context_parse_ntp_services_from_disk+0x42c>
  403fac:	b	403ddc <context_parse_ntp_services_from_disk+0x258>
  403fb0:	add	x0, sp, #0x78
  403fb4:	bl	403194 <fclosep>
  403fb8:	cmp	w19, #0x1
  403fbc:	ldr	x0, [sp, #136]
  403fc0:	add	x0, x0, #0x8
  403fc4:	str	x0, [sp, #136]
  403fc8:	ldr	x0, [sp, #136]
  403fcc:	cmp	x0, #0x0
  403fd0:	b.eq	403fe4 <context_parse_ntp_services_from_disk+0x460>  // b.none
  403fd4:	ldr	x0, [sp, #136]
  403fd8:	ldr	x0, [x0]
  403fdc:	cmp	x0, #0x0
  403fe0:	b.ne	403c9c <context_parse_ntp_services_from_disk+0x118>  // b.any
  403fe4:	mov	w19, #0x1                   	// #1
  403fe8:	add	x0, sp, #0x70
  403fec:	bl	4032c8 <strv_freep>
  403ff0:	mov	w1, w19
  403ff4:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  403ff8:	add	x0, x0, #0xa68
  403ffc:	ldr	x2, [sp, #200]
  404000:	ldr	x0, [x0]
  404004:	eor	x0, x2, x0
  404008:	cmp	x0, #0x0
  40400c:	b.eq	404014 <context_parse_ntp_services_from_disk+0x490>  // b.none
  404010:	bl	4029c0 <__stack_chk_fail@plt>
  404014:	mov	w0, w1
  404018:	ldr	x19, [sp, #16]
  40401c:	ldp	x29, x30, [sp], #208
  404020:	ret

0000000000404024 <context_parse_ntp_services>:
  404024:	stp	x29, x30, [sp, #-48]!
  404028:	mov	x29, sp
  40402c:	str	x0, [sp, #24]
  404030:	ldr	x0, [sp, #24]
  404034:	bl	403884 <context_parse_ntp_services_from_environment>
  404038:	str	w0, [sp, #44]
  40403c:	ldr	w0, [sp, #44]
  404040:	cmp	w0, #0x0
  404044:	b.eq	404050 <context_parse_ntp_services+0x2c>  // b.none
  404048:	ldr	w0, [sp, #44]
  40404c:	b	404058 <context_parse_ntp_services+0x34>
  404050:	ldr	x0, [sp, #24]
  404054:	bl	403b84 <context_parse_ntp_services_from_disk>
  404058:	ldp	x29, x30, [sp], #48
  40405c:	ret

0000000000404060 <context_ntp_service_is_active>:
  404060:	stp	x29, x30, [sp, #-96]!
  404064:	mov	x29, sp
  404068:	str	x0, [sp, #24]
  40406c:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  404070:	add	x0, x0, #0xa68
  404074:	ldr	x1, [x0]
  404078:	str	x1, [sp, #88]
  40407c:	mov	x1, #0x0                   	// #0
  404080:	str	wzr, [sp, #44]
  404084:	ldr	x0, [sp, #24]
  404088:	cmp	x0, #0x0
  40408c:	cset	w0, eq  // eq = none
  404090:	and	w0, w0, #0xff
  404094:	and	x0, x0, #0xff
  404098:	cmp	x0, #0x0
  40409c:	b.eq	4040c8 <context_ntp_service_is_active+0x68>  // b.none
  4040a0:	adrp	x0, 408000 <run+0x534>
  4040a4:	add	x1, x0, #0x1f3
  4040a8:	adrp	x0, 409000 <_fini+0xf04>
  4040ac:	add	x4, x0, #0x4e8
  4040b0:	mov	w3, #0xeb                  	// #235
  4040b4:	mov	x2, x1
  4040b8:	adrp	x0, 408000 <run+0x534>
  4040bc:	add	x1, x0, #0x218
  4040c0:	mov	w0, #0x0                   	// #0
  4040c4:	bl	402840 <log_assert_failed_realm@plt>
  4040c8:	ldr	x0, [sp, #24]
  4040cc:	ldr	x0, [x0, #40]
  4040d0:	str	x0, [sp, #48]
  4040d4:	b	404158 <context_ntp_service_is_active+0xf8>
  4040d8:	ldr	x0, [sp, #48]
  4040dc:	ldr	x0, [x0, #24]
  4040e0:	str	x0, [sp, #56]
  4040e4:	ldr	x0, [sp, #56]
  4040e8:	cmp	x0, #0x0
  4040ec:	b.eq	40412c <context_ntp_service_is_active+0xcc>  // b.none
  4040f0:	adrp	x0, 408000 <run+0x534>
  4040f4:	add	x0, x0, #0x418
  4040f8:	add	x2, sp, #0x40
  4040fc:	mov	x3, x0
  404100:	ldp	x0, x1, [x3]
  404104:	stp	x0, x1, [x2]
  404108:	ldr	x0, [x3, #16]
  40410c:	str	x0, [x2, #16]
  404110:	add	x0, sp, #0x40
  404114:	ldr	x1, [sp, #56]
  404118:	bl	402a40 <strv_find@plt>
  40411c:	cmp	x0, #0x0
  404120:	b.eq	40412c <context_ntp_service_is_active+0xcc>  // b.none
  404124:	mov	w0, #0x1                   	// #1
  404128:	b	404130 <context_ntp_service_is_active+0xd0>
  40412c:	mov	w0, #0x0                   	// #0
  404130:	cmp	w0, #0x0
  404134:	cset	w0, eq  // eq = none
  404138:	and	w0, w0, #0xff
  40413c:	mov	w1, w0
  404140:	ldr	w0, [sp, #44]
  404144:	add	w0, w0, w1
  404148:	str	w0, [sp, #44]
  40414c:	ldr	x0, [sp, #48]
  404150:	ldr	x0, [x0, #40]
  404154:	str	x0, [sp, #48]
  404158:	ldr	x0, [sp, #48]
  40415c:	cmp	x0, #0x0
  404160:	b.ne	4040d8 <context_ntp_service_is_active+0x78>  // b.any
  404164:	ldr	w0, [sp, #44]
  404168:	mov	w1, w0
  40416c:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  404170:	add	x0, x0, #0xa68
  404174:	ldr	x2, [sp, #88]
  404178:	ldr	x0, [x0]
  40417c:	eor	x0, x2, x0
  404180:	cmp	x0, #0x0
  404184:	b.eq	40418c <context_ntp_service_is_active+0x12c>  // b.none
  404188:	bl	4029c0 <__stack_chk_fail@plt>
  40418c:	mov	w0, w1
  404190:	ldp	x29, x30, [sp], #96
  404194:	ret

0000000000404198 <context_ntp_service_exists>:
  404198:	stp	x29, x30, [sp, #-48]!
  40419c:	mov	x29, sp
  4041a0:	str	x0, [sp, #24]
  4041a4:	str	wzr, [sp, #36]
  4041a8:	ldr	x0, [sp, #24]
  4041ac:	cmp	x0, #0x0
  4041b0:	cset	w0, eq  // eq = none
  4041b4:	and	w0, w0, #0xff
  4041b8:	and	x0, x0, #0xff
  4041bc:	cmp	x0, #0x0
  4041c0:	b.eq	4041ec <context_ntp_service_exists+0x54>  // b.none
  4041c4:	adrp	x0, 408000 <run+0x534>
  4041c8:	add	x1, x0, #0x1f3
  4041cc:	adrp	x0, 409000 <_fini+0xf04>
  4041d0:	add	x4, x0, #0x508
  4041d4:	mov	w3, #0xf9                  	// #249
  4041d8:	mov	x2, x1
  4041dc:	adrp	x0, 408000 <run+0x534>
  4041e0:	add	x1, x0, #0x218
  4041e4:	mov	w0, #0x0                   	// #0
  4041e8:	bl	402840 <log_assert_failed_realm@plt>
  4041ec:	ldr	x0, [sp, #24]
  4041f0:	ldr	x0, [x0, #40]
  4041f4:	str	x0, [sp, #40]
  4041f8:	b	404234 <context_ntp_service_exists+0x9c>
  4041fc:	ldr	x0, [sp, #40]
  404200:	ldr	x2, [x0, #8]
  404204:	adrp	x0, 408000 <run+0x534>
  404208:	add	x1, x0, #0x430
  40420c:	mov	x0, x2
  404210:	bl	4030a4 <streq_ptr>
  404214:	and	w0, w0, #0xff
  404218:	mov	w1, w0
  40421c:	ldr	w0, [sp, #36]
  404220:	add	w0, w0, w1
  404224:	str	w0, [sp, #36]
  404228:	ldr	x0, [sp, #40]
  40422c:	ldr	x0, [x0, #40]
  404230:	str	x0, [sp, #40]
  404234:	ldr	x0, [sp, #40]
  404238:	cmp	x0, #0x0
  40423c:	b.ne	4041fc <context_ntp_service_exists+0x64>  // b.any
  404240:	ldr	w0, [sp, #36]
  404244:	ldp	x29, x30, [sp], #48
  404248:	ret

000000000040424c <context_read_data>:
  40424c:	stp	x29, x30, [sp, #-96]!
  404250:	mov	x29, sp
  404254:	str	x19, [sp, #16]
  404258:	str	x0, [sp, #40]
  40425c:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  404260:	add	x0, x0, #0xa68
  404264:	ldr	x1, [x0]
  404268:	str	x1, [sp, #88]
  40426c:	mov	x1, #0x0                   	// #0
  404270:	str	xzr, [sp, #80]
  404274:	ldr	x0, [sp, #40]
  404278:	cmp	x0, #0x0
  40427c:	cset	w0, eq  // eq = none
  404280:	and	w0, w0, #0xff
  404284:	and	x0, x0, #0xff
  404288:	cmp	x0, #0x0
  40428c:	b.eq	4042b8 <context_read_data+0x6c>  // b.none
  404290:	adrp	x0, 408000 <run+0x534>
  404294:	add	x1, x0, #0x1f3
  404298:	adrp	x0, 409000 <_fini+0xf04>
  40429c:	add	x4, x0, #0x528
  4042a0:	mov	w3, #0x107                 	// #263
  4042a4:	mov	x2, x1
  4042a8:	adrp	x0, 408000 <run+0x534>
  4042ac:	add	x1, x0, #0x218
  4042b0:	mov	w0, #0x0                   	// #0
  4042b4:	bl	402840 <log_assert_failed_realm@plt>
  4042b8:	add	x0, sp, #0x50
  4042bc:	bl	402b40 <get_timezone@plt>
  4042c0:	str	w0, [sp, #52]
  4042c4:	ldr	w0, [sp, #52]
  4042c8:	cmn	w0, #0x16
  4042cc:	b.ne	40434c <context_read_data+0x100>  // b.any
  4042d0:	mov	w0, #0x4                   	// #4
  4042d4:	str	w0, [sp, #68]
  4042d8:	ldr	w0, [sp, #52]
  4042dc:	str	w0, [sp, #72]
  4042e0:	str	wzr, [sp, #76]
  4042e4:	ldr	w0, [sp, #76]
  4042e8:	bl	402c80 <log_get_max_level_realm@plt>
  4042ec:	mov	w1, w0
  4042f0:	ldr	w0, [sp, #68]
  4042f4:	and	w0, w0, #0x7
  4042f8:	cmp	w1, w0
  4042fc:	b.lt	404340 <context_read_data+0xf4>  // b.tstop
  404300:	ldr	w0, [sp, #76]
  404304:	lsl	w1, w0, #10
  404308:	ldr	w0, [sp, #68]
  40430c:	orr	w6, w1, w0
  404310:	adrp	x0, 408000 <run+0x534>
  404314:	add	x1, x0, #0x1f3
  404318:	adrp	x0, 408000 <run+0x534>
  40431c:	add	x5, x0, #0x438
  404320:	adrp	x0, 409000 <_fini+0xf04>
  404324:	add	x4, x0, #0x540
  404328:	mov	w3, #0x10b                 	// #267
  40432c:	mov	x2, x1
  404330:	ldr	w1, [sp, #72]
  404334:	mov	w0, w6
  404338:	bl	402a80 <log_internal_realm@plt>
  40433c:	b	4043d0 <context_read_data+0x184>
  404340:	ldr	w0, [sp, #72]
  404344:	cmp	w0, #0x0
  404348:	b	4043d0 <context_read_data+0x184>
  40434c:	ldr	w0, [sp, #52]
  404350:	cmp	w0, #0x0
  404354:	b.ge	4043d0 <context_read_data+0x184>  // b.tcont
  404358:	mov	w0, #0x4                   	// #4
  40435c:	str	w0, [sp, #56]
  404360:	ldr	w0, [sp, #52]
  404364:	str	w0, [sp, #60]
  404368:	str	wzr, [sp, #64]
  40436c:	ldr	w0, [sp, #64]
  404370:	bl	402c80 <log_get_max_level_realm@plt>
  404374:	mov	w1, w0
  404378:	ldr	w0, [sp, #56]
  40437c:	and	w0, w0, #0x7
  404380:	cmp	w1, w0
  404384:	b.lt	4043c8 <context_read_data+0x17c>  // b.tstop
  404388:	ldr	w0, [sp, #64]
  40438c:	lsl	w1, w0, #10
  404390:	ldr	w0, [sp, #56]
  404394:	orr	w6, w1, w0
  404398:	adrp	x0, 408000 <run+0x534>
  40439c:	add	x1, x0, #0x1f3
  4043a0:	adrp	x0, 408000 <run+0x534>
  4043a4:	add	x5, x0, #0x498
  4043a8:	adrp	x0, 409000 <_fini+0xf04>
  4043ac:	add	x4, x0, #0x540
  4043b0:	mov	w3, #0x10d                 	// #269
  4043b4:	mov	x2, x1
  4043b8:	ldr	w1, [sp, #60]
  4043bc:	mov	w0, w6
  4043c0:	bl	402a80 <log_internal_realm@plt>
  4043c4:	b	4043d0 <context_read_data+0x184>
  4043c8:	ldr	w0, [sp, #60]
  4043cc:	cmp	w0, #0x0
  4043d0:	ldr	x0, [sp, #40]
  4043d4:	ldr	x0, [x0]
  4043d8:	bl	402bb0 <free@plt>
  4043dc:	ldr	x1, [sp, #80]
  4043e0:	ldr	x0, [sp, #40]
  4043e4:	str	x1, [x0]
  4043e8:	str	xzr, [sp, #80]
  4043ec:	mov	x0, #0x0                   	// #0
  4043f0:	bl	402980 <clock_is_localtime@plt>
  4043f4:	cmp	w0, #0x0
  4043f8:	cset	w0, gt
  4043fc:	and	w1, w0, #0xff
  404400:	ldr	x0, [sp, #40]
  404404:	strb	w1, [x0, #8]
  404408:	mov	w19, #0x0                   	// #0
  40440c:	add	x0, sp, #0x50
  404410:	bl	402f78 <freep>
  404414:	mov	w1, w19
  404418:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  40441c:	add	x0, x0, #0xa68
  404420:	ldr	x2, [sp, #88]
  404424:	ldr	x0, [x0]
  404428:	eor	x0, x2, x0
  40442c:	cmp	x0, #0x0
  404430:	b.eq	404438 <context_read_data+0x1ec>  // b.none
  404434:	bl	4029c0 <__stack_chk_fail@plt>
  404438:	mov	w0, w1
  40443c:	ldr	x19, [sp, #16]
  404440:	ldp	x29, x30, [sp], #96
  404444:	ret

0000000000404448 <context_write_data_timezone>:
  404448:	stp	x29, x30, [sp, #-80]!
  40444c:	mov	x29, sp
  404450:	str	x19, [sp, #16]
  404454:	str	x0, [sp, #40]
  404458:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  40445c:	add	x0, x0, #0xa68
  404460:	ldr	x1, [x0]
  404464:	str	x1, [sp, #72]
  404468:	mov	x1, #0x0                   	// #0
  40446c:	str	xzr, [sp, #56]
  404470:	ldr	x0, [sp, #40]
  404474:	cmp	x0, #0x0
  404478:	cset	w0, eq  // eq = none
  40447c:	and	w0, w0, #0xff
  404480:	and	x0, x0, #0xff
  404484:	cmp	x0, #0x0
  404488:	b.eq	4044b4 <context_write_data_timezone+0x6c>  // b.none
  40448c:	adrp	x0, 408000 <run+0x534>
  404490:	add	x1, x0, #0x1f3
  404494:	adrp	x0, 409000 <_fini+0xf04>
  404498:	add	x4, x0, #0x558
  40449c:	mov	w3, #0x11a                 	// #282
  4044a0:	mov	x2, x1
  4044a4:	adrp	x0, 408000 <run+0x534>
  4044a8:	add	x1, x0, #0x218
  4044ac:	mov	w0, #0x0                   	// #0
  4044b0:	bl	402840 <log_assert_failed_realm@plt>
  4044b4:	ldr	x0, [sp, #40]
  4044b8:	ldr	x0, [x0]
  4044bc:	bl	403104 <isempty>
  4044c0:	and	w0, w0, #0xff
  4044c4:	cmp	w0, #0x0
  4044c8:	b.ne	4044ec <context_write_data_timezone+0xa4>  // b.any
  4044cc:	ldr	x0, [sp, #40]
  4044d0:	ldr	x2, [x0]
  4044d4:	adrp	x0, 408000 <run+0x534>
  4044d8:	add	x1, x0, #0x4c8
  4044dc:	mov	x0, x2
  4044e0:	bl	402ad0 <strcmp@plt>
  4044e4:	cmp	w0, #0x0
  4044e8:	b.ne	404550 <context_write_data_timezone+0x108>  // b.any
  4044ec:	mov	w1, #0x0                   	// #0
  4044f0:	adrp	x0, 408000 <run+0x534>
  4044f4:	add	x0, x0, #0x4d0
  4044f8:	bl	4028d0 <access@plt>
  4044fc:	cmp	w0, #0x0
  404500:	b.ge	404540 <context_write_data_timezone+0xf8>  // b.tcont
  404504:	adrp	x0, 408000 <run+0x534>
  404508:	add	x0, x0, #0x4e8
  40450c:	bl	402680 <unlink@plt>
  404510:	cmp	w0, #0x0
  404514:	b.ge	404538 <context_write_data_timezone+0xf0>  // b.tcont
  404518:	bl	402940 <__errno_location@plt>
  40451c:	ldr	w0, [x0]
  404520:	cmp	w0, #0x2
  404524:	b.eq	404538 <context_write_data_timezone+0xf0>  // b.none
  404528:	bl	402940 <__errno_location@plt>
  40452c:	ldr	w0, [x0]
  404530:	neg	w19, w0
  404534:	b	4045a0 <context_write_data_timezone+0x158>
  404538:	mov	w19, #0x0                   	// #0
  40453c:	b	4045a0 <context_write_data_timezone+0x158>
  404540:	adrp	x0, 408000 <run+0x534>
  404544:	add	x0, x0, #0x4f8
  404548:	str	x0, [sp, #64]
  40454c:	b	40458c <context_write_data_timezone+0x144>
  404550:	ldr	x0, [sp, #40]
  404554:	ldr	x0, [x0]
  404558:	mov	x2, #0xffffffffffffffff    	// #-1
  40455c:	mov	x1, x0
  404560:	adrp	x0, 408000 <run+0x534>
  404564:	add	x0, x0, #0x518
  404568:	bl	4029e0 <path_join_internal@plt>
  40456c:	str	x0, [sp, #56]
  404570:	ldr	x0, [sp, #56]
  404574:	cmp	x0, #0x0
  404578:	b.ne	404584 <context_write_data_timezone+0x13c>  // b.any
  40457c:	mov	w19, #0xfffffff4            	// #-12
  404580:	b	4045a0 <context_write_data_timezone+0x158>
  404584:	ldr	x0, [sp, #56]
  404588:	str	x0, [sp, #64]
  40458c:	adrp	x0, 408000 <run+0x534>
  404590:	add	x1, x0, #0x4e8
  404594:	ldr	x0, [sp, #64]
  404598:	bl	402860 <symlink_atomic@plt>
  40459c:	mov	w19, w0
  4045a0:	add	x0, sp, #0x38
  4045a4:	bl	402f78 <freep>
  4045a8:	mov	w1, w19
  4045ac:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  4045b0:	add	x0, x0, #0xa68
  4045b4:	ldr	x2, [sp, #72]
  4045b8:	ldr	x0, [x0]
  4045bc:	eor	x0, x2, x0
  4045c0:	cmp	x0, #0x0
  4045c4:	b.eq	4045cc <context_write_data_timezone+0x184>  // b.none
  4045c8:	bl	4029c0 <__stack_chk_fail@plt>
  4045cc:	mov	w0, w1
  4045d0:	ldr	x19, [sp, #16]
  4045d4:	ldp	x29, x30, [sp], #80
  4045d8:	ret

00000000004045dc <context_write_data_local_rtc>:
  4045dc:	stp	x29, x30, [sp, #-128]!
  4045e0:	mov	x29, sp
  4045e4:	str	x19, [sp, #16]
  4045e8:	str	x0, [sp, #40]
  4045ec:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  4045f0:	add	x0, x0, #0xa68
  4045f4:	ldr	x1, [x0]
  4045f8:	str	x1, [sp, #120]
  4045fc:	mov	x1, #0x0                   	// #0
  404600:	str	xzr, [sp, #56]
  404604:	str	xzr, [sp, #64]
  404608:	ldr	x0, [sp, #40]
  40460c:	cmp	x0, #0x0
  404610:	cset	w0, eq  // eq = none
  404614:	and	w0, w0, #0xff
  404618:	and	x0, x0, #0xff
  40461c:	cmp	x0, #0x0
  404620:	b.eq	40464c <context_write_data_local_rtc+0x70>  // b.none
  404624:	adrp	x0, 408000 <run+0x534>
  404628:	add	x1, x0, #0x1f3
  40462c:	adrp	x0, 409000 <_fini+0xf04>
  404630:	add	x4, x0, #0x578
  404634:	mov	w3, #0x13b                 	// #315
  404638:	mov	x2, x1
  40463c:	adrp	x0, 408000 <run+0x534>
  404640:	add	x1, x0, #0x218
  404644:	mov	w0, #0x0                   	// #0
  404648:	bl	402840 <log_assert_failed_realm@plt>
  40464c:	add	x0, sp, #0x38
  404650:	mov	x2, #0x0                   	// #0
  404654:	mov	x1, x0
  404658:	adrp	x0, 408000 <run+0x534>
  40465c:	add	x0, x0, #0x530
  404660:	bl	4031e0 <read_full_file>
  404664:	str	w0, [sp, #52]
  404668:	ldr	w0, [sp, #52]
  40466c:	cmp	w0, #0x0
  404670:	b.ge	4046cc <context_write_data_local_rtc+0xf0>  // b.tcont
  404674:	ldr	w0, [sp, #52]
  404678:	cmn	w0, #0x2
  40467c:	b.eq	404688 <context_write_data_local_rtc+0xac>  // b.none
  404680:	ldr	w19, [sp, #52]
  404684:	b	404904 <context_write_data_local_rtc+0x328>
  404688:	ldr	x0, [sp, #40]
  40468c:	ldrb	w0, [x0, #8]
  404690:	eor	w0, w0, #0x1
  404694:	and	w0, w0, #0xff
  404698:	cmp	w0, #0x0
  40469c:	b.eq	4046a8 <context_write_data_local_rtc+0xcc>  // b.none
  4046a0:	mov	w19, #0x0                   	// #0
  4046a4:	b	404904 <context_write_data_local_rtc+0x328>
  4046a8:	adrp	x0, 408000 <run+0x534>
  4046ac:	add	x0, x0, #0x540
  4046b0:	bl	402b30 <strdup@plt>
  4046b4:	str	x0, [sp, #64]
  4046b8:	ldr	x0, [sp, #64]
  4046bc:	cmp	x0, #0x0
  4046c0:	b.ne	4048e8 <context_write_data_local_rtc+0x30c>  // b.any
  4046c4:	mov	w19, #0xfffffff4            	// #-12
  4046c8:	b	404904 <context_write_data_local_rtc+0x328>
  4046cc:	adrp	x0, 408000 <run+0x534>
  4046d0:	add	x0, x0, #0x558
  4046d4:	str	x0, [sp, #80]
  4046d8:	adrp	x0, 408000 <run+0x534>
  4046dc:	add	x0, x0, #0x560
  4046e0:	str	x0, [sp, #88]
  4046e4:	ldr	x0, [sp, #56]
  4046e8:	mov	w1, #0xa                   	// #10
  4046ec:	bl	402a70 <strchrnul@plt>
  4046f0:	str	x0, [sp, #72]
  4046f4:	ldr	x0, [sp, #72]
  4046f8:	ldrb	w0, [x0]
  4046fc:	cmp	w0, #0x0
  404700:	b.ne	404714 <context_write_data_local_rtc+0x138>  // b.any
  404704:	adrp	x0, 408000 <run+0x534>
  404708:	add	x0, x0, #0x568
  40470c:	str	x0, [sp, #88]
  404710:	b	4047b8 <context_write_data_local_rtc+0x1dc>
  404714:	ldr	x0, [sp, #72]
  404718:	add	x0, x0, #0x1
  40471c:	ldrb	w0, [x0]
  404720:	cmp	w0, #0x0
  404724:	b.ne	404744 <context_write_data_local_rtc+0x168>  // b.any
  404728:	ldr	x0, [sp, #72]
  40472c:	add	x0, x0, #0x1
  404730:	str	x0, [sp, #72]
  404734:	adrp	x0, 408000 <run+0x534>
  404738:	add	x0, x0, #0x570
  40473c:	str	x0, [sp, #88]
  404740:	b	4047b8 <context_write_data_local_rtc+0x1dc>
  404744:	ldr	x0, [sp, #72]
  404748:	add	x0, x0, #0x1
  40474c:	mov	w1, #0xa                   	// #10
  404750:	bl	402b70 <strchr@plt>
  404754:	str	x0, [sp, #72]
  404758:	ldr	x0, [sp, #72]
  40475c:	cmp	x0, #0x0
  404760:	b.ne	404788 <context_write_data_local_rtc+0x1ac>  // b.any
  404764:	adrp	x0, 408000 <run+0x534>
  404768:	add	x0, x0, #0x558
  40476c:	str	x0, [sp, #88]
  404770:	ldr	x19, [sp, #56]
  404774:	ldr	x0, [sp, #56]
  404778:	bl	402c20 <strlen@plt>
  40477c:	add	x0, x19, x0
  404780:	str	x0, [sp, #72]
  404784:	b	4047b8 <context_write_data_local_rtc+0x1dc>
  404788:	ldr	x0, [sp, #72]
  40478c:	add	x0, x0, #0x1
  404790:	str	x0, [sp, #72]
  404794:	mov	w1, #0xa                   	// #10
  404798:	ldr	x0, [sp, #72]
  40479c:	bl	402b70 <strchr@plt>
  4047a0:	str	x0, [sp, #96]
  4047a4:	ldr	x0, [sp, #96]
  4047a8:	cmp	x0, #0x0
  4047ac:	b.eq	4047b8 <context_write_data_local_rtc+0x1dc>  // b.none
  4047b0:	ldr	x0, [sp, #96]
  4047b4:	str	x0, [sp, #80]
  4047b8:	ldr	x0, [sp, #56]
  4047bc:	ldr	x1, [sp, #72]
  4047c0:	sub	x0, x1, x0
  4047c4:	str	x0, [sp, #104]
  4047c8:	ldr	x0, [sp, #80]
  4047cc:	bl	402c20 <strlen@plt>
  4047d0:	str	x0, [sp, #112]
  4047d4:	ldr	x0, [sp, #40]
  4047d8:	ldrb	w0, [x0, #8]
  4047dc:	cmp	w0, #0x0
  4047e0:	b.eq	4047ec <context_write_data_local_rtc+0x210>  // b.none
  4047e4:	mov	x0, #0x5                   	// #5
  4047e8:	b	4047f0 <context_write_data_local_rtc+0x214>
  4047ec:	mov	x0, #0x3                   	// #3
  4047f0:	ldr	x1, [sp, #104]
  4047f4:	add	x19, x0, x1
  4047f8:	ldr	x0, [sp, #88]
  4047fc:	bl	402c20 <strlen@plt>
  404800:	add	x1, x19, x0
  404804:	ldr	x0, [sp, #112]
  404808:	add	x0, x1, x0
  40480c:	add	x0, x0, #0x1
  404810:	mov	x1, x0
  404814:	mov	x0, #0x1                   	// #1
  404818:	bl	403018 <malloc_multiply>
  40481c:	str	x0, [sp, #64]
  404820:	ldr	x0, [sp, #64]
  404824:	cmp	x0, #0x0
  404828:	b.ne	404834 <context_write_data_local_rtc+0x258>  // b.any
  40482c:	mov	w19, #0xfffffff4            	// #-12
  404830:	b	404904 <context_write_data_local_rtc+0x328>
  404834:	ldr	x0, [sp, #64]
  404838:	ldr	x1, [sp, #56]
  40483c:	ldr	x2, [sp, #104]
  404840:	bl	402720 <mempcpy@plt>
  404844:	ldr	x1, [sp, #88]
  404848:	bl	4026b0 <stpcpy@plt>
  40484c:	mov	x2, x0
  404850:	ldr	x0, [sp, #40]
  404854:	ldrb	w0, [x0, #8]
  404858:	cmp	w0, #0x0
  40485c:	b.eq	40486c <context_write_data_local_rtc+0x290>  // b.none
  404860:	adrp	x0, 408000 <run+0x534>
  404864:	add	x0, x0, #0x578
  404868:	b	404874 <context_write_data_local_rtc+0x298>
  40486c:	adrp	x0, 408000 <run+0x534>
  404870:	add	x0, x0, #0x4c8
  404874:	mov	x1, x0
  404878:	mov	x0, x2
  40487c:	bl	4026b0 <stpcpy@plt>
  404880:	ldr	x2, [sp, #112]
  404884:	ldr	x1, [sp, #80]
  404888:	bl	402720 <mempcpy@plt>
  40488c:	strb	wzr, [x0]
  404890:	ldr	x2, [sp, #64]
  404894:	adrp	x0, 408000 <run+0x534>
  404898:	add	x1, x0, #0x580
  40489c:	mov	x0, x2
  4048a0:	bl	402ad0 <strcmp@plt>
  4048a4:	cmp	w0, #0x0
  4048a8:	b.ne	4048e8 <context_write_data_local_rtc+0x30c>  // b.any
  4048ac:	adrp	x0, 408000 <run+0x534>
  4048b0:	add	x0, x0, #0x530
  4048b4:	bl	402680 <unlink@plt>
  4048b8:	cmp	w0, #0x0
  4048bc:	b.ge	4048e0 <context_write_data_local_rtc+0x304>  // b.tcont
  4048c0:	bl	402940 <__errno_location@plt>
  4048c4:	ldr	w0, [x0]
  4048c8:	cmp	w0, #0x2
  4048cc:	b.eq	4048e0 <context_write_data_local_rtc+0x304>  // b.none
  4048d0:	bl	402940 <__errno_location@plt>
  4048d4:	ldr	w0, [x0]
  4048d8:	neg	w19, w0
  4048dc:	b	404904 <context_write_data_local_rtc+0x328>
  4048e0:	mov	w19, #0x0                   	// #0
  4048e4:	b	404904 <context_write_data_local_rtc+0x328>
  4048e8:	bl	4026c0 <mac_selinux_init@plt>
  4048ec:	ldr	x0, [sp, #64]
  4048f0:	mov	x1, x0
  4048f4:	adrp	x0, 408000 <run+0x534>
  4048f8:	add	x0, x0, #0x530
  4048fc:	bl	4031b8 <write_string_file_atomic_label>
  404900:	mov	w19, w0
  404904:	add	x0, sp, #0x40
  404908:	bl	402f78 <freep>
  40490c:	add	x0, sp, #0x38
  404910:	bl	402f78 <freep>
  404914:	mov	w1, w19
  404918:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  40491c:	add	x0, x0, #0xa68
  404920:	ldr	x2, [sp, #120]
  404924:	ldr	x0, [x0]
  404928:	eor	x0, x2, x0
  40492c:	cmp	x0, #0x0
  404930:	b.eq	404938 <context_write_data_local_rtc+0x35c>  // b.none
  404934:	bl	4029c0 <__stack_chk_fail@plt>
  404938:	mov	w0, w1
  40493c:	ldr	x19, [sp, #16]
  404940:	ldp	x29, x30, [sp], #128
  404944:	ret

0000000000404948 <context_update_ntp_status>:
  404948:	sub	sp, sp, #0xa0
  40494c:	stp	x29, x30, [sp, #32]
  404950:	add	x29, sp, #0x20
  404954:	stp	x19, x20, [sp, #48]
  404958:	str	x0, [sp, #88]
  40495c:	str	x1, [sp, #80]
  404960:	str	x2, [sp, #72]
  404964:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  404968:	add	x0, x0, #0xa68
  40496c:	ldr	x1, [x0]
  404970:	str	x1, [sp, #152]
  404974:	mov	x1, #0x0                   	// #0
  404978:	ldr	x0, [sp, #88]
  40497c:	cmp	x0, #0x0
  404980:	cset	w0, eq  // eq = none
  404984:	and	w0, w0, #0xff
  404988:	and	x0, x0, #0xff
  40498c:	cmp	x0, #0x0
  404990:	b.eq	4049bc <context_update_ntp_status+0x74>  // b.none
  404994:	adrp	x0, 408000 <run+0x534>
  404998:	add	x1, x0, #0x1f3
  40499c:	adrp	x0, 409000 <_fini+0xf04>
  4049a0:	add	x4, x0, #0x598
  4049a4:	mov	w3, #0x187                 	// #391
  4049a8:	mov	x2, x1
  4049ac:	adrp	x0, 408000 <run+0x534>
  4049b0:	add	x1, x0, #0x218
  4049b4:	mov	w0, #0x0                   	// #0
  4049b8:	bl	402840 <log_assert_failed_realm@plt>
  4049bc:	ldr	x0, [sp, #80]
  4049c0:	cmp	x0, #0x0
  4049c4:	cset	w0, eq  // eq = none
  4049c8:	and	w0, w0, #0xff
  4049cc:	and	x0, x0, #0xff
  4049d0:	cmp	x0, #0x0
  4049d4:	b.eq	404a00 <context_update_ntp_status+0xb8>  // b.none
  4049d8:	adrp	x0, 408000 <run+0x534>
  4049dc:	add	x1, x0, #0x1f3
  4049e0:	adrp	x0, 409000 <_fini+0xf04>
  4049e4:	add	x4, x0, #0x598
  4049e8:	mov	w3, #0x188                 	// #392
  4049ec:	mov	x2, x1
  4049f0:	adrp	x0, 408000 <run+0x534>
  4049f4:	add	x1, x0, #0x590
  4049f8:	mov	w0, #0x0                   	// #0
  4049fc:	bl	402840 <log_assert_failed_realm@plt>
  404a00:	ldr	x0, [sp, #72]
  404a04:	cmp	x0, #0x0
  404a08:	b.eq	404a48 <context_update_ntp_status+0x100>  // b.none
  404a0c:	ldr	x0, [sp, #88]
  404a10:	ldr	x0, [x0, #24]
  404a14:	ldr	x1, [sp, #72]
  404a18:	cmp	x1, x0
  404a1c:	b.ne	404a28 <context_update_ntp_status+0xe0>  // b.any
  404a20:	mov	w19, #0x0                   	// #0
  404a24:	b	404b98 <context_update_ntp_status+0x250>
  404a28:	ldr	x0, [sp, #88]
  404a2c:	ldr	x0, [x0, #24]
  404a30:	bl	4026f0 <sd_bus_message_unref@plt>
  404a34:	ldr	x0, [sp, #72]
  404a38:	bl	402c40 <sd_bus_message_ref@plt>
  404a3c:	mov	x1, x0
  404a40:	ldr	x0, [sp, #88]
  404a44:	str	x1, [x0, #24]
  404a48:	ldr	x0, [sp, #88]
  404a4c:	ldr	x0, [x0, #40]
  404a50:	str	x0, [sp, #112]
  404a54:	b	404b88 <context_update_ntp_status+0x240>
  404a58:	str	xzr, [sp, #128]
  404a5c:	str	xzr, [sp, #136]
  404a60:	str	wzr, [sp, #144]
  404a64:	str	xzr, [sp, #104]
  404a68:	ldr	x0, [sp, #112]
  404a6c:	bl	4032fc <unit_status_info_clear>
  404a70:	ldr	x0, [sp, #112]
  404a74:	ldr	x0, [x0]
  404a78:	bl	402670 <unit_dbus_path_from_name@plt>
  404a7c:	str	x0, [sp, #104]
  404a80:	ldr	x0, [sp, #104]
  404a84:	cmp	x0, #0x0
  404a88:	b.ne	404a98 <context_update_ntp_status+0x150>  // b.any
  404a8c:	mov	w19, #0xfffffff4            	// #-12
  404a90:	mov	w20, #0x0                   	// #0
  404a94:	b	404b50 <context_update_ntp_status+0x208>
  404a98:	ldr	x1, [sp, #104]
  404a9c:	add	x0, sp, #0x80
  404aa0:	ldr	x7, [sp, #112]
  404aa4:	mov	x6, #0x0                   	// #0
  404aa8:	mov	x5, x0
  404aac:	mov	w4, #0x1                   	// #1
  404ab0:	adrp	x0, 409000 <_fini+0xf04>
  404ab4:	add	x3, x0, #0x5b8
  404ab8:	mov	x2, x1
  404abc:	adrp	x0, 408000 <run+0x534>
  404ac0:	add	x1, x0, #0x598
  404ac4:	ldr	x0, [sp, #80]
  404ac8:	bl	4028a0 <bus_map_all_properties@plt>
  404acc:	str	w0, [sp, #100]
  404ad0:	ldr	w0, [sp, #100]
  404ad4:	cmp	w0, #0x0
  404ad8:	b.ge	404b4c <context_update_ntp_status+0x204>  // b.tcont
  404adc:	ldr	x0, [sp, #112]
  404ae0:	str	x0, [sp, #120]
  404ae4:	adrp	x0, 408000 <run+0x534>
  404ae8:	add	x19, x0, #0x1f3
  404aec:	ldr	x0, [sp, #120]
  404af0:	ldr	x20, [x0]
  404af4:	add	x0, sp, #0x80
  404af8:	ldr	w1, [sp, #100]
  404afc:	bl	402660 <bus_error_message@plt>
  404b00:	str	x0, [sp, #16]
  404b04:	adrp	x0, 408000 <run+0x534>
  404b08:	add	x0, x0, #0x5b8
  404b0c:	str	x0, [sp, #8]
  404b10:	str	xzr, [sp]
  404b14:	mov	x7, #0x0                   	// #0
  404b18:	mov	x6, x20
  404b1c:	adrp	x0, 408000 <run+0x534>
  404b20:	add	x5, x0, #0x240
  404b24:	adrp	x0, 409000 <_fini+0xf04>
  404b28:	add	x4, x0, #0x638
  404b2c:	mov	w3, #0x1a7                 	// #423
  404b30:	mov	x2, x19
  404b34:	ldr	w1, [sp, #100]
  404b38:	mov	w0, #0x3                   	// #3
  404b3c:	bl	402930 <log_object_internal@plt>
  404b40:	mov	w19, w0
  404b44:	mov	w20, #0x0                   	// #0
  404b48:	b	404b50 <context_update_ntp_status+0x208>
  404b4c:	mov	w20, #0x1                   	// #1
  404b50:	add	x0, sp, #0x68
  404b54:	bl	402f78 <freep>
  404b58:	cmp	w20, #0x1
  404b5c:	b.eq	404b68 <context_update_ntp_status+0x220>  // b.none
  404b60:	mov	w20, #0x0                   	// #0
  404b64:	b	404b6c <context_update_ntp_status+0x224>
  404b68:	mov	w20, #0x1                   	// #1
  404b6c:	add	x0, sp, #0x80
  404b70:	bl	402a20 <sd_bus_error_free@plt>
  404b74:	cmp	w20, #0x1
  404b78:	b.ne	404b98 <context_update_ntp_status+0x250>  // b.any
  404b7c:	ldr	x0, [sp, #112]
  404b80:	ldr	x0, [x0, #40]
  404b84:	str	x0, [sp, #112]
  404b88:	ldr	x0, [sp, #112]
  404b8c:	cmp	x0, #0x0
  404b90:	b.ne	404a58 <context_update_ntp_status+0x110>  // b.any
  404b94:	mov	w19, #0x0                   	// #0
  404b98:	mov	w1, w19
  404b9c:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  404ba0:	add	x0, x0, #0xa68
  404ba4:	ldr	x2, [sp, #152]
  404ba8:	ldr	x0, [x0]
  404bac:	eor	x0, x2, x0
  404bb0:	cmp	x0, #0x0
  404bb4:	b.eq	404bbc <context_update_ntp_status+0x274>  // b.none
  404bb8:	bl	4029c0 <__stack_chk_fail@plt>
  404bbc:	mov	w0, w1
  404bc0:	ldp	x19, x20, [sp, #48]
  404bc4:	ldp	x29, x30, [sp, #32]
  404bc8:	add	sp, sp, #0xa0
  404bcc:	ret

0000000000404bd0 <match_job_removed>:
  404bd0:	stp	x29, x30, [sp, #-112]!
  404bd4:	mov	x29, sp
  404bd8:	str	x0, [sp, #40]
  404bdc:	str	x1, [sp, #32]
  404be0:	str	x2, [sp, #24]
  404be4:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  404be8:	add	x0, x0, #0xa68
  404bec:	ldr	x1, [x0]
  404bf0:	str	x1, [sp, #104]
  404bf4:	mov	x1, #0x0                   	// #0
  404bf8:	ldr	x0, [sp, #32]
  404bfc:	str	x0, [sp, #96]
  404c00:	str	wzr, [sp, #60]
  404c04:	ldr	x0, [sp, #96]
  404c08:	cmp	x0, #0x0
  404c0c:	cset	w0, eq  // eq = none
  404c10:	and	w0, w0, #0xff
  404c14:	and	x0, x0, #0xff
  404c18:	cmp	x0, #0x0
  404c1c:	b.eq	404c48 <match_job_removed+0x78>  // b.none
  404c20:	adrp	x0, 408000 <run+0x534>
  404c24:	add	x1, x0, #0x1f3
  404c28:	adrp	x0, 409000 <_fini+0xf04>
  404c2c:	add	x4, x0, #0x658
  404c30:	mov	w3, #0x1b4                 	// #436
  404c34:	mov	x2, x1
  404c38:	adrp	x0, 408000 <run+0x534>
  404c3c:	add	x1, x0, #0x218
  404c40:	mov	w0, #0x0                   	// #0
  404c44:	bl	402840 <log_assert_failed_realm@plt>
  404c48:	ldr	x0, [sp, #40]
  404c4c:	cmp	x0, #0x0
  404c50:	cset	w0, eq  // eq = none
  404c54:	and	w0, w0, #0xff
  404c58:	and	x0, x0, #0xff
  404c5c:	cmp	x0, #0x0
  404c60:	b.eq	404c8c <match_job_removed+0xbc>  // b.none
  404c64:	adrp	x0, 408000 <run+0x534>
  404c68:	add	x1, x0, #0x1f3
  404c6c:	adrp	x0, 409000 <_fini+0xf04>
  404c70:	add	x4, x0, #0x658
  404c74:	mov	w3, #0x1b5                 	// #437
  404c78:	mov	x2, x1
  404c7c:	adrp	x0, 408000 <run+0x534>
  404c80:	add	x1, x0, #0x5d8
  404c84:	mov	w0, #0x0                   	// #0
  404c88:	bl	402840 <log_assert_failed_realm@plt>
  404c8c:	add	x0, sp, #0x50
  404c90:	mov	x5, #0x0                   	// #0
  404c94:	mov	x4, #0x0                   	// #0
  404c98:	mov	x3, x0
  404c9c:	mov	x2, #0x0                   	// #0
  404ca0:	adrp	x0, 408000 <run+0x534>
  404ca4:	add	x1, x0, #0x5e0
  404ca8:	ldr	x0, [sp, #40]
  404cac:	bl	402850 <sd_bus_message_read@plt>
  404cb0:	str	w0, [sp, #64]
  404cb4:	ldr	w0, [sp, #64]
  404cb8:	cmp	w0, #0x0
  404cbc:	b.ge	404d40 <match_job_removed+0x170>  // b.tcont
  404cc0:	mov	w0, #0x3                   	// #3
  404cc4:	str	w0, [sp, #68]
  404cc8:	ldr	w0, [sp, #64]
  404ccc:	str	w0, [sp, #72]
  404cd0:	str	wzr, [sp, #76]
  404cd4:	ldr	w0, [sp, #76]
  404cd8:	bl	402c80 <log_get_max_level_realm@plt>
  404cdc:	mov	w1, w0
  404ce0:	ldr	w0, [sp, #68]
  404ce4:	and	w0, w0, #0x7
  404ce8:	cmp	w1, w0
  404cec:	b.lt	404d30 <match_job_removed+0x160>  // b.tstop
  404cf0:	ldr	w0, [sp, #76]
  404cf4:	lsl	w1, w0, #10
  404cf8:	ldr	w0, [sp, #68]
  404cfc:	orr	w6, w1, w0
  404d00:	adrp	x0, 408000 <run+0x534>
  404d04:	add	x1, x0, #0x1f3
  404d08:	adrp	x0, 408000 <run+0x534>
  404d0c:	add	x5, x0, #0x5e8
  404d10:	adrp	x0, 409000 <_fini+0xf04>
  404d14:	add	x4, x0, #0x670
  404d18:	mov	w3, #0x1b9                 	// #441
  404d1c:	mov	x2, x1
  404d20:	ldr	w1, [sp, #72]
  404d24:	mov	w0, w6
  404d28:	bl	402a80 <log_internal_realm@plt>
  404d2c:	b	404d38 <match_job_removed+0x168>
  404d30:	ldr	w0, [sp, #72]
  404d34:	cmp	w0, #0x0
  404d38:	mov	w0, #0x0                   	// #0
  404d3c:	b	404e24 <match_job_removed+0x254>
  404d40:	ldr	x0, [sp, #96]
  404d44:	ldr	x0, [x0, #40]
  404d48:	str	x0, [sp, #88]
  404d4c:	b	404dc0 <match_job_removed+0x1f0>
  404d50:	ldr	x2, [sp, #80]
  404d54:	ldr	x0, [sp, #88]
  404d58:	ldr	x0, [x0, #32]
  404d5c:	mov	x1, x0
  404d60:	mov	x0, x2
  404d64:	bl	4030a4 <streq_ptr>
  404d68:	and	w0, w0, #0xff
  404d6c:	cmp	w0, #0x0
  404d70:	b.eq	404d90 <match_job_removed+0x1c0>  // b.none
  404d74:	ldr	x0, [sp, #88]
  404d78:	ldr	x0, [x0, #32]
  404d7c:	bl	402f58 <mfree>
  404d80:	mov	x1, x0
  404d84:	ldr	x0, [sp, #88]
  404d88:	str	x1, [x0, #32]
  404d8c:	b	404db4 <match_job_removed+0x1e4>
  404d90:	ldr	x0, [sp, #88]
  404d94:	ldr	x0, [x0, #32]
  404d98:	cmp	x0, #0x0
  404d9c:	cset	w0, ne  // ne = any
  404da0:	and	w0, w0, #0xff
  404da4:	mov	w1, w0
  404da8:	ldr	w0, [sp, #60]
  404dac:	add	w0, w0, w1
  404db0:	str	w0, [sp, #60]
  404db4:	ldr	x0, [sp, #88]
  404db8:	ldr	x0, [x0, #40]
  404dbc:	str	x0, [sp, #88]
  404dc0:	ldr	x0, [sp, #88]
  404dc4:	cmp	x0, #0x0
  404dc8:	b.ne	404d50 <match_job_removed+0x180>  // b.any
  404dcc:	ldr	w0, [sp, #60]
  404dd0:	cmp	w0, #0x0
  404dd4:	b.ne	404e20 <match_job_removed+0x250>  // b.any
  404dd8:	ldr	x0, [sp, #96]
  404ddc:	ldr	x0, [x0, #32]
  404de0:	bl	402c10 <sd_bus_slot_unref@plt>
  404de4:	mov	x1, x0
  404de8:	ldr	x0, [sp, #96]
  404dec:	str	x1, [x0, #32]
  404df0:	ldr	x0, [sp, #40]
  404df4:	bl	402800 <sd_bus_message_get_bus@plt>
  404df8:	mov	x5, x0
  404dfc:	mov	x4, #0x0                   	// #0
  404e00:	adrp	x0, 408000 <run+0x534>
  404e04:	add	x3, x0, #0x608
  404e08:	adrp	x0, 408000 <run+0x534>
  404e0c:	add	x2, x0, #0x610
  404e10:	adrp	x0, 408000 <run+0x534>
  404e14:	add	x1, x0, #0x630
  404e18:	mov	x0, x5
  404e1c:	bl	402a30 <sd_bus_emit_properties_changed@plt>
  404e20:	mov	w0, #0x0                   	// #0
  404e24:	mov	w1, w0
  404e28:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  404e2c:	add	x0, x0, #0xa68
  404e30:	ldr	x2, [sp, #104]
  404e34:	ldr	x0, [x0]
  404e38:	eor	x0, x2, x0
  404e3c:	cmp	x0, #0x0
  404e40:	b.eq	404e48 <match_job_removed+0x278>  // b.none
  404e44:	bl	4029c0 <__stack_chk_fail@plt>
  404e48:	mov	w0, w1
  404e4c:	ldp	x29, x30, [sp], #112
  404e50:	ret

0000000000404e54 <unit_start_or_stop>:
  404e54:	sub	sp, sp, #0x90
  404e58:	stp	x29, x30, [sp, #32]
  404e5c:	add	x29, sp, #0x20
  404e60:	str	x19, [sp, #48]
  404e64:	str	x0, [sp, #88]
  404e68:	str	x1, [sp, #80]
  404e6c:	str	x2, [sp, #72]
  404e70:	strb	w3, [sp, #71]
  404e74:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  404e78:	add	x0, x0, #0xa68
  404e7c:	ldr	x1, [x0]
  404e80:	str	x1, [sp, #136]
  404e84:	mov	x1, #0x0                   	// #0
  404e88:	str	xzr, [sp, #112]
  404e8c:	ldr	x0, [sp, #88]
  404e90:	cmp	x0, #0x0
  404e94:	cset	w0, eq  // eq = none
  404e98:	and	w0, w0, #0xff
  404e9c:	and	x0, x0, #0xff
  404ea0:	cmp	x0, #0x0
  404ea4:	b.eq	404ed0 <unit_start_or_stop+0x7c>  // b.none
  404ea8:	adrp	x0, 408000 <run+0x534>
  404eac:	add	x1, x0, #0x1f3
  404eb0:	adrp	x0, 409000 <_fini+0xf04>
  404eb4:	add	x4, x0, #0x688
  404eb8:	mov	w3, #0x1d3                 	// #467
  404ebc:	mov	x2, x1
  404ec0:	adrp	x0, 408000 <run+0x534>
  404ec4:	add	x1, x0, #0x650
  404ec8:	mov	w0, #0x0                   	// #0
  404ecc:	bl	402840 <log_assert_failed_realm@plt>
  404ed0:	ldr	x0, [sp, #80]
  404ed4:	cmp	x0, #0x0
  404ed8:	cset	w0, eq  // eq = none
  404edc:	and	w0, w0, #0xff
  404ee0:	and	x0, x0, #0xff
  404ee4:	cmp	x0, #0x0
  404ee8:	b.eq	404f14 <unit_start_or_stop+0xc0>  // b.none
  404eec:	adrp	x0, 408000 <run+0x534>
  404ef0:	add	x1, x0, #0x1f3
  404ef4:	adrp	x0, 409000 <_fini+0xf04>
  404ef8:	add	x4, x0, #0x688
  404efc:	mov	w3, #0x1d4                 	// #468
  404f00:	mov	x2, x1
  404f04:	adrp	x0, 408000 <run+0x534>
  404f08:	add	x1, x0, #0x590
  404f0c:	mov	w0, #0x0                   	// #0
  404f10:	bl	402840 <log_assert_failed_realm@plt>
  404f14:	ldr	x0, [sp, #72]
  404f18:	cmp	x0, #0x0
  404f1c:	cset	w0, eq  // eq = none
  404f20:	and	w0, w0, #0xff
  404f24:	and	x0, x0, #0xff
  404f28:	cmp	x0, #0x0
  404f2c:	b.eq	404f58 <unit_start_or_stop+0x104>  // b.none
  404f30:	adrp	x0, 408000 <run+0x534>
  404f34:	add	x1, x0, #0x1f3
  404f38:	adrp	x0, 409000 <_fini+0xf04>
  404f3c:	add	x4, x0, #0x688
  404f40:	mov	w3, #0x1d5                 	// #469
  404f44:	mov	x2, x1
  404f48:	adrp	x0, 408000 <run+0x534>
  404f4c:	add	x1, x0, #0x658
  404f50:	mov	w0, #0x0                   	// #0
  404f54:	bl	402840 <log_assert_failed_realm@plt>
  404f58:	ldrb	w0, [sp, #71]
  404f5c:	cmp	w0, #0x0
  404f60:	b.eq	404f70 <unit_start_or_stop+0x11c>  // b.none
  404f64:	adrp	x0, 408000 <run+0x534>
  404f68:	add	x0, x0, #0x660
  404f6c:	b	404f78 <unit_start_or_stop+0x124>
  404f70:	adrp	x0, 408000 <run+0x534>
  404f74:	add	x0, x0, #0x670
  404f78:	ldr	x1, [sp, #88]
  404f7c:	ldr	x1, [x1]
  404f80:	add	x3, sp, #0x70
  404f84:	adrp	x2, 408000 <run+0x534>
  404f88:	add	x2, x2, #0x6d0
  404f8c:	str	x2, [sp, #8]
  404f90:	str	x1, [sp]
  404f94:	adrp	x1, 408000 <run+0x534>
  404f98:	add	x7, x1, #0x680
  404f9c:	mov	x6, x3
  404fa0:	ldr	x5, [sp, #72]
  404fa4:	mov	x4, x0
  404fa8:	adrp	x0, 408000 <run+0x534>
  404fac:	add	x3, x0, #0x688
  404fb0:	adrp	x0, 408000 <run+0x534>
  404fb4:	add	x2, x0, #0x6b0
  404fb8:	adrp	x0, 408000 <run+0x534>
  404fbc:	add	x1, x0, #0x598
  404fc0:	ldr	x0, [sp, #80]
  404fc4:	bl	402c00 <sd_bus_call_method@plt>
  404fc8:	str	w0, [sp, #96]
  404fcc:	ldr	x0, [sp, #88]
  404fd0:	str	x0, [sp, #128]
  404fd4:	ldr	w0, [sp, #96]
  404fd8:	cmp	w0, #0x0
  404fdc:	b.ge	404fe8 <unit_start_or_stop+0x194>  // b.tcont
  404fe0:	mov	w8, #0x4                   	// #4
  404fe4:	b	404fec <unit_start_or_stop+0x198>
  404fe8:	mov	w8, #0x7                   	// #7
  404fec:	adrp	x0, 408000 <run+0x534>
  404ff0:	add	x1, x0, #0x1f3
  404ff4:	ldr	x0, [sp, #128]
  404ff8:	ldr	x2, [x0]
  404ffc:	ldrb	w0, [sp, #71]
  405000:	cmp	w0, #0x0
  405004:	b.eq	405014 <unit_start_or_stop+0x1c0>  // b.none
  405008:	adrp	x0, 408000 <run+0x534>
  40500c:	add	x0, x0, #0x6d8
  405010:	b	40501c <unit_start_or_stop+0x1c8>
  405014:	adrp	x0, 408000 <run+0x534>
  405018:	add	x0, x0, #0x6e8
  40501c:	str	x0, [sp, #16]
  405020:	adrp	x0, 408000 <run+0x534>
  405024:	add	x0, x0, #0x6f8
  405028:	str	x0, [sp, #8]
  40502c:	str	xzr, [sp]
  405030:	mov	x7, #0x0                   	// #0
  405034:	mov	x6, x2
  405038:	adrp	x0, 408000 <run+0x534>
  40503c:	add	x5, x0, #0x240
  405040:	adrp	x0, 409000 <_fini+0xf04>
  405044:	add	x4, x0, #0x6a0
  405048:	mov	w3, #0x1e2                 	// #482
  40504c:	mov	x2, x1
  405050:	ldr	w1, [sp, #96]
  405054:	mov	w0, w8
  405058:	bl	402930 <log_object_internal@plt>
  40505c:	ldr	w0, [sp, #96]
  405060:	cmp	w0, #0x0
  405064:	b.ge	405070 <unit_start_or_stop+0x21c>  // b.tcont
  405068:	ldr	w19, [sp, #96]
  40506c:	b	405170 <unit_start_or_stop+0x31c>
  405070:	ldr	x3, [sp, #112]
  405074:	add	x0, sp, #0x78
  405078:	mov	x2, x0
  40507c:	adrp	x0, 408000 <run+0x534>
  405080:	add	x1, x0, #0x708
  405084:	mov	x0, x3
  405088:	bl	402850 <sd_bus_message_read@plt>
  40508c:	str	w0, [sp, #96]
  405090:	ldr	w0, [sp, #96]
  405094:	cmp	w0, #0x0
  405098:	b.ge	405128 <unit_start_or_stop+0x2d4>  // b.tcont
  40509c:	mov	w0, #0x3                   	// #3
  4050a0:	str	w0, [sp, #100]
  4050a4:	ldr	w0, [sp, #96]
  4050a8:	str	w0, [sp, #104]
  4050ac:	str	wzr, [sp, #108]
  4050b0:	ldr	w0, [sp, #108]
  4050b4:	bl	402c80 <log_get_max_level_realm@plt>
  4050b8:	mov	w1, w0
  4050bc:	ldr	w0, [sp, #100]
  4050c0:	and	w0, w0, #0x7
  4050c4:	cmp	w1, w0
  4050c8:	b.lt	405110 <unit_start_or_stop+0x2bc>  // b.tstop
  4050cc:	ldr	w0, [sp, #108]
  4050d0:	lsl	w1, w0, #10
  4050d4:	ldr	w0, [sp, #100]
  4050d8:	orr	w6, w1, w0
  4050dc:	adrp	x0, 408000 <run+0x534>
  4050e0:	add	x1, x0, #0x1f3
  4050e4:	adrp	x0, 408000 <run+0x534>
  4050e8:	add	x5, x0, #0x5e8
  4050ec:	adrp	x0, 409000 <_fini+0xf04>
  4050f0:	add	x4, x0, #0x6a0
  4050f4:	mov	w3, #0x1e9                 	// #489
  4050f8:	mov	x2, x1
  4050fc:	ldr	w1, [sp, #104]
  405100:	mov	w0, w6
  405104:	bl	402a80 <log_internal_realm@plt>
  405108:	mov	w19, w0
  40510c:	b	405170 <unit_start_or_stop+0x31c>
  405110:	ldr	w0, [sp, #104]
  405114:	cmp	w0, #0x0
  405118:	cneg	w0, w0, lt  // lt = tstop
  40511c:	and	w0, w0, #0xff
  405120:	neg	w19, w0
  405124:	b	405170 <unit_start_or_stop+0x31c>
  405128:	ldr	x0, [sp, #88]
  40512c:	add	x0, x0, #0x20
  405130:	ldr	x1, [sp, #120]
  405134:	bl	402790 <free_and_strdup@plt>
  405138:	str	w0, [sp, #96]
  40513c:	ldr	w0, [sp, #96]
  405140:	cmp	w0, #0x0
  405144:	b.ge	40516c <unit_start_or_stop+0x318>  // b.tcont
  405148:	adrp	x0, 408000 <run+0x534>
  40514c:	add	x1, x0, #0x1f3
  405150:	adrp	x0, 409000 <_fini+0xf04>
  405154:	add	x3, x0, #0x6a0
  405158:	mov	w2, #0x1ed                 	// #493
  40515c:	mov	w0, #0x0                   	// #0
  405160:	bl	402c50 <log_oom_internal@plt>
  405164:	mov	w19, w0
  405168:	b	405170 <unit_start_or_stop+0x31c>
  40516c:	mov	w19, #0x0                   	// #0
  405170:	add	x0, sp, #0x70
  405174:	bl	402ef4 <sd_bus_message_unrefp>
  405178:	mov	w1, w19
  40517c:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  405180:	add	x0, x0, #0xa68
  405184:	ldr	x2, [sp, #136]
  405188:	ldr	x0, [x0]
  40518c:	eor	x0, x2, x0
  405190:	cmp	x0, #0x0
  405194:	b.eq	40519c <unit_start_or_stop+0x348>  // b.none
  405198:	bl	4029c0 <__stack_chk_fail@plt>
  40519c:	mov	w0, w1
  4051a0:	ldr	x19, [sp, #48]
  4051a4:	ldp	x29, x30, [sp, #32]
  4051a8:	add	sp, sp, #0x90
  4051ac:	ret

00000000004051b0 <unit_enable_or_disable>:
  4051b0:	sub	sp, sp, #0x80
  4051b4:	stp	x29, x30, [sp, #32]
  4051b8:	add	x29, sp, #0x20
  4051bc:	stp	x19, x20, [sp, #48]
  4051c0:	str	x0, [sp, #88]
  4051c4:	str	x1, [sp, #80]
  4051c8:	str	x2, [sp, #72]
  4051cc:	strb	w3, [sp, #71]
  4051d0:	ldr	x0, [sp, #88]
  4051d4:	cmp	x0, #0x0
  4051d8:	cset	w0, eq  // eq = none
  4051dc:	and	w0, w0, #0xff
  4051e0:	and	x0, x0, #0xff
  4051e4:	cmp	x0, #0x0
  4051e8:	b.eq	405214 <unit_enable_or_disable+0x64>  // b.none
  4051ec:	adrp	x0, 408000 <run+0x534>
  4051f0:	add	x1, x0, #0x1f3
  4051f4:	adrp	x0, 409000 <_fini+0xf04>
  4051f8:	add	x4, x0, #0x6b8
  4051fc:	mov	w3, #0x1f5                 	// #501
  405200:	mov	x2, x1
  405204:	adrp	x0, 408000 <run+0x534>
  405208:	add	x1, x0, #0x650
  40520c:	mov	w0, #0x0                   	// #0
  405210:	bl	402840 <log_assert_failed_realm@plt>
  405214:	ldr	x0, [sp, #80]
  405218:	cmp	x0, #0x0
  40521c:	cset	w0, eq  // eq = none
  405220:	and	w0, w0, #0xff
  405224:	and	x0, x0, #0xff
  405228:	cmp	x0, #0x0
  40522c:	b.eq	405258 <unit_enable_or_disable+0xa8>  // b.none
  405230:	adrp	x0, 408000 <run+0x534>
  405234:	add	x1, x0, #0x1f3
  405238:	adrp	x0, 409000 <_fini+0xf04>
  40523c:	add	x4, x0, #0x6b8
  405240:	mov	w3, #0x1f6                 	// #502
  405244:	mov	x2, x1
  405248:	adrp	x0, 408000 <run+0x534>
  40524c:	add	x1, x0, #0x590
  405250:	mov	w0, #0x0                   	// #0
  405254:	bl	402840 <log_assert_failed_realm@plt>
  405258:	ldr	x0, [sp, #72]
  40525c:	cmp	x0, #0x0
  405260:	cset	w0, eq  // eq = none
  405264:	and	w0, w0, #0xff
  405268:	and	x0, x0, #0xff
  40526c:	cmp	x0, #0x0
  405270:	b.eq	40529c <unit_enable_or_disable+0xec>  // b.none
  405274:	adrp	x0, 408000 <run+0x534>
  405278:	add	x1, x0, #0x1f3
  40527c:	adrp	x0, 409000 <_fini+0xf04>
  405280:	add	x4, x0, #0x6b8
  405284:	mov	w3, #0x1f7                 	// #503
  405288:	mov	x2, x1
  40528c:	adrp	x0, 408000 <run+0x534>
  405290:	add	x1, x0, #0x658
  405294:	mov	w0, #0x0                   	// #0
  405298:	bl	402840 <log_assert_failed_realm@plt>
  40529c:	ldr	x0, [sp, #88]
  4052a0:	ldr	x2, [x0, #16]
  4052a4:	adrp	x0, 408000 <run+0x534>
  4052a8:	add	x1, x0, #0x710
  4052ac:	mov	x0, x2
  4052b0:	bl	402ad0 <strcmp@plt>
  4052b4:	cmp	w0, #0x0
  4052b8:	cset	w0, eq  // eq = none
  4052bc:	and	w0, w0, #0xff
  4052c0:	mov	w1, w0
  4052c4:	ldrb	w0, [sp, #71]
  4052c8:	cmp	w1, w0
  4052cc:	b.ne	405338 <unit_enable_or_disable+0x188>  // b.any
  4052d0:	ldr	x0, [sp, #88]
  4052d4:	str	x0, [sp, #120]
  4052d8:	adrp	x0, 408000 <run+0x534>
  4052dc:	add	x19, x0, #0x1f3
  4052e0:	ldr	x0, [sp, #120]
  4052e4:	ldr	x20, [x0]
  4052e8:	ldrb	w0, [sp, #71]
  4052ec:	bl	4030d4 <enable_disable>
  4052f0:	str	x0, [sp, #16]
  4052f4:	adrp	x0, 408000 <run+0x534>
  4052f8:	add	x0, x0, #0x718
  4052fc:	str	x0, [sp, #8]
  405300:	str	xzr, [sp]
  405304:	mov	x7, #0x0                   	// #0
  405308:	mov	x6, x20
  40530c:	adrp	x0, 408000 <run+0x534>
  405310:	add	x5, x0, #0x240
  405314:	adrp	x0, 409000 <_fini+0xf04>
  405318:	add	x4, x0, #0x6d0
  40531c:	mov	w3, #0x1fc                 	// #508
  405320:	mov	x2, x19
  405324:	mov	w1, #0x0                   	// #0
  405328:	mov	w0, #0x7                   	// #7
  40532c:	bl	402930 <log_object_internal@plt>
  405330:	mov	w0, #0x0                   	// #0
  405334:	b	4054d4 <unit_enable_or_disable+0x324>
  405338:	ldr	x0, [sp, #88]
  40533c:	str	x0, [sp, #112]
  405340:	adrp	x0, 408000 <run+0x534>
  405344:	add	x1, x0, #0x1f3
  405348:	ldr	x0, [sp, #112]
  40534c:	ldr	x2, [x0]
  405350:	ldrb	w0, [sp, #71]
  405354:	cmp	w0, #0x0
  405358:	b.eq	405368 <unit_enable_or_disable+0x1b8>  // b.none
  40535c:	adrp	x0, 408000 <run+0x534>
  405360:	add	x0, x0, #0x728
  405364:	b	405370 <unit_enable_or_disable+0x1c0>
  405368:	adrp	x0, 408000 <run+0x534>
  40536c:	add	x0, x0, #0x738
  405370:	str	x0, [sp, #16]
  405374:	adrp	x0, 408000 <run+0x534>
  405378:	add	x0, x0, #0x748
  40537c:	str	x0, [sp, #8]
  405380:	str	xzr, [sp]
  405384:	mov	x7, #0x0                   	// #0
  405388:	mov	x6, x2
  40538c:	adrp	x0, 408000 <run+0x534>
  405390:	add	x5, x0, #0x240
  405394:	adrp	x0, 409000 <_fini+0xf04>
  405398:	add	x4, x0, #0x6d0
  40539c:	mov	w3, #0x200                 	// #512
  4053a0:	mov	x2, x1
  4053a4:	mov	w1, #0x0                   	// #0
  4053a8:	mov	w0, #0x6                   	// #6
  4053ac:	bl	402930 <log_object_internal@plt>
  4053b0:	ldrb	w0, [sp, #71]
  4053b4:	cmp	w0, #0x0
  4053b8:	b.eq	40541c <unit_enable_or_disable+0x26c>  // b.none
  4053bc:	ldr	x0, [sp, #88]
  4053c0:	ldr	x0, [x0]
  4053c4:	mov	w1, #0x1                   	// #1
  4053c8:	str	w1, [sp, #24]
  4053cc:	str	wzr, [sp, #16]
  4053d0:	str	x0, [sp, #8]
  4053d4:	mov	w0, #0x1                   	// #1
  4053d8:	str	w0, [sp]
  4053dc:	adrp	x0, 408000 <run+0x534>
  4053e0:	add	x7, x0, #0x758
  4053e4:	mov	x6, #0x0                   	// #0
  4053e8:	ldr	x5, [sp, #72]
  4053ec:	adrp	x0, 408000 <run+0x534>
  4053f0:	add	x4, x0, #0x760
  4053f4:	adrp	x0, 408000 <run+0x534>
  4053f8:	add	x3, x0, #0x688
  4053fc:	adrp	x0, 408000 <run+0x534>
  405400:	add	x2, x0, #0x6b0
  405404:	adrp	x0, 408000 <run+0x534>
  405408:	add	x1, x0, #0x598
  40540c:	ldr	x0, [sp, #80]
  405410:	bl	402c00 <sd_bus_call_method@plt>
  405414:	str	w0, [sp, #108]
  405418:	b	405470 <unit_enable_or_disable+0x2c0>
  40541c:	ldr	x0, [sp, #88]
  405420:	ldr	x0, [x0]
  405424:	str	wzr, [sp, #16]
  405428:	str	x0, [sp, #8]
  40542c:	mov	w0, #0x1                   	// #1
  405430:	str	w0, [sp]
  405434:	adrp	x0, 408000 <run+0x534>
  405438:	add	x7, x0, #0x770
  40543c:	mov	x6, #0x0                   	// #0
  405440:	ldr	x5, [sp, #72]
  405444:	adrp	x0, 408000 <run+0x534>
  405448:	add	x4, x0, #0x778
  40544c:	adrp	x0, 408000 <run+0x534>
  405450:	add	x3, x0, #0x688
  405454:	adrp	x0, 408000 <run+0x534>
  405458:	add	x2, x0, #0x6b0
  40545c:	adrp	x0, 408000 <run+0x534>
  405460:	add	x1, x0, #0x598
  405464:	ldr	x0, [sp, #80]
  405468:	bl	402c00 <sd_bus_call_method@plt>
  40546c:	str	w0, [sp, #108]
  405470:	ldr	w0, [sp, #108]
  405474:	cmp	w0, #0x0
  405478:	b.ge	405484 <unit_enable_or_disable+0x2d4>  // b.tcont
  40547c:	ldr	w0, [sp, #108]
  405480:	b	4054d4 <unit_enable_or_disable+0x324>
  405484:	mov	x7, #0x0                   	// #0
  405488:	mov	x6, #0x0                   	// #0
  40548c:	ldr	x5, [sp, #72]
  405490:	adrp	x0, 408000 <run+0x534>
  405494:	add	x4, x0, #0x790
  405498:	adrp	x0, 408000 <run+0x534>
  40549c:	add	x3, x0, #0x688
  4054a0:	adrp	x0, 408000 <run+0x534>
  4054a4:	add	x2, x0, #0x6b0
  4054a8:	adrp	x0, 408000 <run+0x534>
  4054ac:	add	x1, x0, #0x598
  4054b0:	ldr	x0, [sp, #80]
  4054b4:	bl	402c00 <sd_bus_call_method@plt>
  4054b8:	str	w0, [sp, #108]
  4054bc:	ldr	w0, [sp, #108]
  4054c0:	cmp	w0, #0x0
  4054c4:	b.ge	4054d0 <unit_enable_or_disable+0x320>  // b.tcont
  4054c8:	ldr	w0, [sp, #108]
  4054cc:	b	4054d4 <unit_enable_or_disable+0x324>
  4054d0:	mov	w0, #0x0                   	// #0
  4054d4:	ldp	x19, x20, [sp, #48]
  4054d8:	ldp	x29, x30, [sp, #32]
  4054dc:	add	sp, sp, #0x80
  4054e0:	ret

00000000004054e4 <property_get_time>:
  4054e4:	stp	x29, x30, [sp, #-80]!
  4054e8:	mov	x29, sp
  4054ec:	str	x0, [sp, #72]
  4054f0:	str	x1, [sp, #64]
  4054f4:	str	x2, [sp, #56]
  4054f8:	str	x3, [sp, #48]
  4054fc:	str	x4, [sp, #40]
  405500:	str	x5, [sp, #32]
  405504:	str	x6, [sp, #24]
  405508:	ldr	x0, [sp, #72]
  40550c:	cmp	x0, #0x0
  405510:	cset	w0, eq  // eq = none
  405514:	and	w0, w0, #0xff
  405518:	and	x0, x0, #0xff
  40551c:	cmp	x0, #0x0
  405520:	b.eq	40554c <property_get_time+0x68>  // b.none
  405524:	adrp	x0, 408000 <run+0x534>
  405528:	add	x1, x0, #0x1f3
  40552c:	adrp	x0, 409000 <_fini+0xf04>
  405530:	add	x4, x0, #0x6e8
  405534:	mov	w3, #0x22c                 	// #556
  405538:	mov	x2, x1
  40553c:	adrp	x0, 408000 <run+0x534>
  405540:	add	x1, x0, #0x590
  405544:	mov	w0, #0x0                   	// #0
  405548:	bl	402840 <log_assert_failed_realm@plt>
  40554c:	ldr	x0, [sp, #40]
  405550:	cmp	x0, #0x0
  405554:	cset	w0, eq  // eq = none
  405558:	and	w0, w0, #0xff
  40555c:	and	x0, x0, #0xff
  405560:	cmp	x0, #0x0
  405564:	b.eq	405590 <property_get_time+0xac>  // b.none
  405568:	adrp	x0, 408000 <run+0x534>
  40556c:	add	x1, x0, #0x1f3
  405570:	adrp	x0, 409000 <_fini+0xf04>
  405574:	add	x4, x0, #0x6e8
  405578:	mov	w3, #0x22c                 	// #556
  40557c:	mov	x2, x1
  405580:	adrp	x0, 408000 <run+0x534>
  405584:	add	x1, x0, #0x798
  405588:	mov	w0, #0x0                   	// #0
  40558c:	bl	402840 <log_assert_failed_realm@plt>
  405590:	mov	w0, #0x0                   	// #0
  405594:	bl	402ac0 <now@plt>
  405598:	mov	x2, x0
  40559c:	adrp	x0, 408000 <run+0x534>
  4055a0:	add	x1, x0, #0x7a0
  4055a4:	ldr	x0, [sp, #40]
  4055a8:	bl	4027e0 <sd_bus_message_append@plt>
  4055ac:	ldp	x29, x30, [sp], #80
  4055b0:	ret

00000000004055b4 <property_get_ntp_sync>:
  4055b4:	stp	x29, x30, [sp, #-80]!
  4055b8:	mov	x29, sp
  4055bc:	str	x0, [sp, #72]
  4055c0:	str	x1, [sp, #64]
  4055c4:	str	x2, [sp, #56]
  4055c8:	str	x3, [sp, #48]
  4055cc:	str	x4, [sp, #40]
  4055d0:	str	x5, [sp, #32]
  4055d4:	str	x6, [sp, #24]
  4055d8:	ldr	x0, [sp, #72]
  4055dc:	cmp	x0, #0x0
  4055e0:	cset	w0, eq  // eq = none
  4055e4:	and	w0, w0, #0xff
  4055e8:	and	x0, x0, #0xff
  4055ec:	cmp	x0, #0x0
  4055f0:	b.eq	40561c <property_get_ntp_sync+0x68>  // b.none
  4055f4:	adrp	x0, 408000 <run+0x534>
  4055f8:	add	x1, x0, #0x1f3
  4055fc:	adrp	x0, 409000 <_fini+0xf04>
  405600:	add	x4, x0, #0x700
  405604:	mov	w3, #0x22d                 	// #557
  405608:	mov	x2, x1
  40560c:	adrp	x0, 408000 <run+0x534>
  405610:	add	x1, x0, #0x590
  405614:	mov	w0, #0x0                   	// #0
  405618:	bl	402840 <log_assert_failed_realm@plt>
  40561c:	ldr	x0, [sp, #40]
  405620:	cmp	x0, #0x0
  405624:	cset	w0, eq  // eq = none
  405628:	and	w0, w0, #0xff
  40562c:	and	x0, x0, #0xff
  405630:	cmp	x0, #0x0
  405634:	b.eq	405660 <property_get_ntp_sync+0xac>  // b.none
  405638:	adrp	x0, 408000 <run+0x534>
  40563c:	add	x1, x0, #0x1f3
  405640:	adrp	x0, 409000 <_fini+0xf04>
  405644:	add	x4, x0, #0x700
  405648:	mov	w3, #0x22d                 	// #557
  40564c:	mov	x2, x1
  405650:	adrp	x0, 408000 <run+0x534>
  405654:	add	x1, x0, #0x798
  405658:	mov	w0, #0x0                   	// #0
  40565c:	bl	402840 <log_assert_failed_realm@plt>
  405660:	bl	402b20 <ntp_synced@plt>
  405664:	and	w0, w0, #0xff
  405668:	mov	w2, w0
  40566c:	adrp	x0, 408000 <run+0x534>
  405670:	add	x1, x0, #0x7a8
  405674:	ldr	x0, [sp, #40]
  405678:	bl	4027e0 <sd_bus_message_append@plt>
  40567c:	ldp	x29, x30, [sp], #80
  405680:	ret

0000000000405684 <property_get_rtc_time>:
  405684:	stp	x29, x30, [sp, #-192]!
  405688:	mov	x29, sp
  40568c:	str	x0, [sp, #72]
  405690:	str	x1, [sp, #64]
  405694:	str	x2, [sp, #56]
  405698:	str	x3, [sp, #48]
  40569c:	str	x4, [sp, #40]
  4056a0:	str	x5, [sp, #32]
  4056a4:	str	x6, [sp, #24]
  4056a8:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  4056ac:	add	x0, x0, #0xa68
  4056b0:	ldr	x1, [x0]
  4056b4:	str	x1, [sp, #184]
  4056b8:	mov	x1, #0x0                   	// #0
  4056bc:	stp	xzr, xzr, [sp, #128]
  4056c0:	stp	xzr, xzr, [sp, #144]
  4056c4:	stp	xzr, xzr, [sp, #160]
  4056c8:	str	xzr, [sp, #176]
  4056cc:	str	xzr, [sp, #120]
  4056d0:	add	x0, sp, #0x80
  4056d4:	bl	402970 <clock_get_hwclock@plt>
  4056d8:	str	w0, [sp, #92]
  4056dc:	ldr	w0, [sp, #92]
  4056e0:	cmn	w0, #0x10
  4056e4:	b.ne	405760 <property_get_rtc_time+0xdc>  // b.any
  4056e8:	mov	w0, #0x4                   	// #4
  4056ec:	str	w0, [sp, #108]
  4056f0:	str	wzr, [sp, #112]
  4056f4:	str	wzr, [sp, #116]
  4056f8:	ldr	w0, [sp, #116]
  4056fc:	bl	402c80 <log_get_max_level_realm@plt>
  405700:	mov	w1, w0
  405704:	ldr	w0, [sp, #108]
  405708:	and	w0, w0, #0x7
  40570c:	cmp	w1, w0
  405710:	b.lt	405754 <property_get_rtc_time+0xd0>  // b.tstop
  405714:	ldr	w0, [sp, #116]
  405718:	lsl	w1, w0, #10
  40571c:	ldr	w0, [sp, #108]
  405720:	orr	w6, w1, w0
  405724:	adrp	x0, 408000 <run+0x534>
  405728:	add	x1, x0, #0x1f3
  40572c:	adrp	x0, 408000 <run+0x534>
  405730:	add	x5, x0, #0x7b0
  405734:	adrp	x0, 409000 <_fini+0xf04>
  405738:	add	x4, x0, #0x718
  40573c:	mov	w3, #0x23e                 	// #574
  405740:	mov	x2, x1
  405744:	ldr	w1, [sp, #112]
  405748:	mov	w0, w6
  40574c:	bl	402a80 <log_internal_realm@plt>
  405750:	b	405824 <property_get_rtc_time+0x1a0>
  405754:	ldr	w0, [sp, #112]
  405758:	cmp	w0, #0x0
  40575c:	b	405824 <property_get_rtc_time+0x1a0>
  405760:	ldr	w0, [sp, #92]
  405764:	cmn	w0, #0x2
  405768:	b.ne	4057e4 <property_get_rtc_time+0x160>  // b.any
  40576c:	mov	w0, #0x7                   	// #7
  405770:	str	w0, [sp, #96]
  405774:	str	wzr, [sp, #100]
  405778:	str	wzr, [sp, #104]
  40577c:	ldr	w0, [sp, #104]
  405780:	bl	402c80 <log_get_max_level_realm@plt>
  405784:	mov	w1, w0
  405788:	ldr	w0, [sp, #96]
  40578c:	and	w0, w0, #0x7
  405790:	cmp	w1, w0
  405794:	b.lt	4057d8 <property_get_rtc_time+0x154>  // b.tstop
  405798:	ldr	w0, [sp, #104]
  40579c:	lsl	w1, w0, #10
  4057a0:	ldr	w0, [sp, #96]
  4057a4:	orr	w6, w1, w0
  4057a8:	adrp	x0, 408000 <run+0x534>
  4057ac:	add	x1, x0, #0x1f3
  4057b0:	adrp	x0, 408000 <run+0x534>
  4057b4:	add	x5, x0, #0x828
  4057b8:	adrp	x0, 409000 <_fini+0xf04>
  4057bc:	add	x4, x0, #0x718
  4057c0:	mov	w3, #0x240                 	// #576
  4057c4:	mov	x2, x1
  4057c8:	ldr	w1, [sp, #100]
  4057cc:	mov	w0, w6
  4057d0:	bl	402a80 <log_internal_realm@plt>
  4057d4:	b	405824 <property_get_rtc_time+0x1a0>
  4057d8:	ldr	w0, [sp, #100]
  4057dc:	cmp	w0, #0x0
  4057e0:	b	405824 <property_get_rtc_time+0x1a0>
  4057e4:	ldr	w0, [sp, #92]
  4057e8:	cmp	w0, #0x0
  4057ec:	b.ge	405808 <property_get_rtc_time+0x184>  // b.tcont
  4057f0:	adrp	x0, 408000 <run+0x534>
  4057f4:	add	x2, x0, #0x840
  4057f8:	ldr	w1, [sp, #92]
  4057fc:	ldr	x0, [sp, #24]
  405800:	bl	402740 <sd_bus_error_set_errnof@plt>
  405804:	b	405838 <property_get_rtc_time+0x1b4>
  405808:	add	x0, sp, #0x80
  40580c:	bl	402630 <timegm@plt>
  405810:	mov	x1, x0
  405814:	mov	x0, #0x4240                	// #16960
  405818:	movk	x0, #0xf, lsl #16
  40581c:	mul	x0, x1, x0
  405820:	str	x0, [sp, #120]
  405824:	ldr	x2, [sp, #120]
  405828:	adrp	x0, 408000 <run+0x534>
  40582c:	add	x1, x0, #0x7a0
  405830:	ldr	x0, [sp, #40]
  405834:	bl	4027e0 <sd_bus_message_append@plt>
  405838:	mov	w1, w0
  40583c:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  405840:	add	x0, x0, #0xa68
  405844:	ldr	x2, [sp, #184]
  405848:	ldr	x0, [x0]
  40584c:	eor	x0, x2, x0
  405850:	cmp	x0, #0x0
  405854:	b.eq	40585c <property_get_rtc_time+0x1d8>  // b.none
  405858:	bl	4029c0 <__stack_chk_fail@plt>
  40585c:	mov	w0, w1
  405860:	ldp	x29, x30, [sp], #192
  405864:	ret

0000000000405868 <property_get_can_ntp>:
  405868:	stp	x29, x30, [sp, #-96]!
  40586c:	mov	x29, sp
  405870:	str	x0, [sp, #72]
  405874:	str	x1, [sp, #64]
  405878:	str	x2, [sp, #56]
  40587c:	str	x3, [sp, #48]
  405880:	str	x4, [sp, #40]
  405884:	str	x5, [sp, #32]
  405888:	str	x6, [sp, #24]
  40588c:	ldr	x0, [sp, #32]
  405890:	str	x0, [sp, #88]
  405894:	ldr	x0, [sp, #88]
  405898:	cmp	x0, #0x0
  40589c:	cset	w0, eq  // eq = none
  4058a0:	and	w0, w0, #0xff
  4058a4:	and	x0, x0, #0xff
  4058a8:	cmp	x0, #0x0
  4058ac:	b.eq	4058d8 <property_get_can_ntp+0x70>  // b.none
  4058b0:	adrp	x0, 408000 <run+0x534>
  4058b4:	add	x1, x0, #0x1f3
  4058b8:	adrp	x0, 409000 <_fini+0xf04>
  4058bc:	add	x4, x0, #0x730
  4058c0:	mov	w3, #0x255                 	// #597
  4058c4:	mov	x2, x1
  4058c8:	adrp	x0, 408000 <run+0x534>
  4058cc:	add	x1, x0, #0x218
  4058d0:	mov	w0, #0x0                   	// #0
  4058d4:	bl	402840 <log_assert_failed_realm@plt>
  4058d8:	ldr	x0, [sp, #72]
  4058dc:	cmp	x0, #0x0
  4058e0:	cset	w0, eq  // eq = none
  4058e4:	and	w0, w0, #0xff
  4058e8:	and	x0, x0, #0xff
  4058ec:	cmp	x0, #0x0
  4058f0:	b.eq	40591c <property_get_can_ntp+0xb4>  // b.none
  4058f4:	adrp	x0, 408000 <run+0x534>
  4058f8:	add	x1, x0, #0x1f3
  4058fc:	adrp	x0, 409000 <_fini+0xf04>
  405900:	add	x4, x0, #0x730
  405904:	mov	w3, #0x256                 	// #598
  405908:	mov	x2, x1
  40590c:	adrp	x0, 408000 <run+0x534>
  405910:	add	x1, x0, #0x590
  405914:	mov	w0, #0x0                   	// #0
  405918:	bl	402840 <log_assert_failed_realm@plt>
  40591c:	ldr	x0, [sp, #48]
  405920:	cmp	x0, #0x0
  405924:	cset	w0, eq  // eq = none
  405928:	and	w0, w0, #0xff
  40592c:	and	x0, x0, #0xff
  405930:	cmp	x0, #0x0
  405934:	b.eq	405960 <property_get_can_ntp+0xf8>  // b.none
  405938:	adrp	x0, 408000 <run+0x534>
  40593c:	add	x1, x0, #0x1f3
  405940:	adrp	x0, 409000 <_fini+0xf04>
  405944:	add	x4, x0, #0x730
  405948:	mov	w3, #0x257                 	// #599
  40594c:	mov	x2, x1
  405950:	adrp	x0, 408000 <run+0x534>
  405954:	add	x1, x0, #0x858
  405958:	mov	w0, #0x0                   	// #0
  40595c:	bl	402840 <log_assert_failed_realm@plt>
  405960:	ldr	x0, [sp, #40]
  405964:	cmp	x0, #0x0
  405968:	cset	w0, eq  // eq = none
  40596c:	and	w0, w0, #0xff
  405970:	and	x0, x0, #0xff
  405974:	cmp	x0, #0x0
  405978:	b.eq	4059a4 <property_get_can_ntp+0x13c>  // b.none
  40597c:	adrp	x0, 408000 <run+0x534>
  405980:	add	x1, x0, #0x1f3
  405984:	adrp	x0, 409000 <_fini+0xf04>
  405988:	add	x4, x0, #0x730
  40598c:	mov	w3, #0x258                 	// #600
  405990:	mov	x2, x1
  405994:	adrp	x0, 408000 <run+0x534>
  405998:	add	x1, x0, #0x798
  40599c:	mov	w0, #0x0                   	// #0
  4059a0:	bl	402840 <log_assert_failed_realm@plt>
  4059a4:	ldr	x0, [sp, #24]
  4059a8:	cmp	x0, #0x0
  4059ac:	cset	w0, eq  // eq = none
  4059b0:	and	w0, w0, #0xff
  4059b4:	and	x0, x0, #0xff
  4059b8:	cmp	x0, #0x0
  4059bc:	b.eq	4059e8 <property_get_can_ntp+0x180>  // b.none
  4059c0:	adrp	x0, 408000 <run+0x534>
  4059c4:	add	x1, x0, #0x1f3
  4059c8:	adrp	x0, 409000 <_fini+0xf04>
  4059cc:	add	x4, x0, #0x730
  4059d0:	mov	w3, #0x259                 	// #601
  4059d4:	mov	x2, x1
  4059d8:	adrp	x0, 408000 <run+0x534>
  4059dc:	add	x1, x0, #0x658
  4059e0:	mov	w0, #0x0                   	// #0
  4059e4:	bl	402840 <log_assert_failed_realm@plt>
  4059e8:	ldr	x0, [sp, #88]
  4059ec:	ldr	x0, [x0, #32]
  4059f0:	cmp	x0, #0x0
  4059f4:	b.eq	405a10 <property_get_can_ntp+0x1a8>  // b.none
  4059f8:	mov	w2, #0x1                   	// #1
  4059fc:	adrp	x0, 408000 <run+0x534>
  405a00:	add	x1, x0, #0x7a8
  405a04:	ldr	x0, [sp, #40]
  405a08:	bl	4027e0 <sd_bus_message_append@plt>
  405a0c:	b	405a60 <property_get_can_ntp+0x1f8>
  405a10:	ldr	x2, [sp, #40]
  405a14:	ldr	x1, [sp, #72]
  405a18:	ldr	x0, [sp, #88]
  405a1c:	bl	404948 <context_update_ntp_status>
  405a20:	str	w0, [sp, #84]
  405a24:	ldr	w0, [sp, #84]
  405a28:	cmp	w0, #0x0
  405a2c:	b.ge	405a38 <property_get_can_ntp+0x1d0>  // b.tcont
  405a30:	ldr	w0, [sp, #84]
  405a34:	b	405a60 <property_get_can_ntp+0x1f8>
  405a38:	ldr	x0, [sp, #88]
  405a3c:	bl	404198 <context_ntp_service_exists>
  405a40:	cmp	w0, #0x0
  405a44:	cset	w0, gt
  405a48:	and	w0, w0, #0xff
  405a4c:	mov	w2, w0
  405a50:	adrp	x0, 408000 <run+0x534>
  405a54:	add	x1, x0, #0x7a8
  405a58:	ldr	x0, [sp, #40]
  405a5c:	bl	4027e0 <sd_bus_message_append@plt>
  405a60:	ldp	x29, x30, [sp], #96
  405a64:	ret

0000000000405a68 <property_get_ntp>:
  405a68:	stp	x29, x30, [sp, #-96]!
  405a6c:	mov	x29, sp
  405a70:	str	x0, [sp, #72]
  405a74:	str	x1, [sp, #64]
  405a78:	str	x2, [sp, #56]
  405a7c:	str	x3, [sp, #48]
  405a80:	str	x4, [sp, #40]
  405a84:	str	x5, [sp, #32]
  405a88:	str	x6, [sp, #24]
  405a8c:	ldr	x0, [sp, #32]
  405a90:	str	x0, [sp, #88]
  405a94:	ldr	x0, [sp, #88]
  405a98:	cmp	x0, #0x0
  405a9c:	cset	w0, eq  // eq = none
  405aa0:	and	w0, w0, #0xff
  405aa4:	and	x0, x0, #0xff
  405aa8:	cmp	x0, #0x0
  405aac:	b.eq	405ad8 <property_get_ntp+0x70>  // b.none
  405ab0:	adrp	x0, 408000 <run+0x534>
  405ab4:	add	x1, x0, #0x1f3
  405ab8:	adrp	x0, 409000 <_fini+0xf04>
  405abc:	add	x4, x0, #0x748
  405ac0:	mov	w3, #0x272                 	// #626
  405ac4:	mov	x2, x1
  405ac8:	adrp	x0, 408000 <run+0x534>
  405acc:	add	x1, x0, #0x218
  405ad0:	mov	w0, #0x0                   	// #0
  405ad4:	bl	402840 <log_assert_failed_realm@plt>
  405ad8:	ldr	x0, [sp, #72]
  405adc:	cmp	x0, #0x0
  405ae0:	cset	w0, eq  // eq = none
  405ae4:	and	w0, w0, #0xff
  405ae8:	and	x0, x0, #0xff
  405aec:	cmp	x0, #0x0
  405af0:	b.eq	405b1c <property_get_ntp+0xb4>  // b.none
  405af4:	adrp	x0, 408000 <run+0x534>
  405af8:	add	x1, x0, #0x1f3
  405afc:	adrp	x0, 409000 <_fini+0xf04>
  405b00:	add	x4, x0, #0x748
  405b04:	mov	w3, #0x273                 	// #627
  405b08:	mov	x2, x1
  405b0c:	adrp	x0, 408000 <run+0x534>
  405b10:	add	x1, x0, #0x590
  405b14:	mov	w0, #0x0                   	// #0
  405b18:	bl	402840 <log_assert_failed_realm@plt>
  405b1c:	ldr	x0, [sp, #48]
  405b20:	cmp	x0, #0x0
  405b24:	cset	w0, eq  // eq = none
  405b28:	and	w0, w0, #0xff
  405b2c:	and	x0, x0, #0xff
  405b30:	cmp	x0, #0x0
  405b34:	b.eq	405b60 <property_get_ntp+0xf8>  // b.none
  405b38:	adrp	x0, 408000 <run+0x534>
  405b3c:	add	x1, x0, #0x1f3
  405b40:	adrp	x0, 409000 <_fini+0xf04>
  405b44:	add	x4, x0, #0x748
  405b48:	mov	w3, #0x274                 	// #628
  405b4c:	mov	x2, x1
  405b50:	adrp	x0, 408000 <run+0x534>
  405b54:	add	x1, x0, #0x858
  405b58:	mov	w0, #0x0                   	// #0
  405b5c:	bl	402840 <log_assert_failed_realm@plt>
  405b60:	ldr	x0, [sp, #40]
  405b64:	cmp	x0, #0x0
  405b68:	cset	w0, eq  // eq = none
  405b6c:	and	w0, w0, #0xff
  405b70:	and	x0, x0, #0xff
  405b74:	cmp	x0, #0x0
  405b78:	b.eq	405ba4 <property_get_ntp+0x13c>  // b.none
  405b7c:	adrp	x0, 408000 <run+0x534>
  405b80:	add	x1, x0, #0x1f3
  405b84:	adrp	x0, 409000 <_fini+0xf04>
  405b88:	add	x4, x0, #0x748
  405b8c:	mov	w3, #0x275                 	// #629
  405b90:	mov	x2, x1
  405b94:	adrp	x0, 408000 <run+0x534>
  405b98:	add	x1, x0, #0x798
  405b9c:	mov	w0, #0x0                   	// #0
  405ba0:	bl	402840 <log_assert_failed_realm@plt>
  405ba4:	ldr	x0, [sp, #24]
  405ba8:	cmp	x0, #0x0
  405bac:	cset	w0, eq  // eq = none
  405bb0:	and	w0, w0, #0xff
  405bb4:	and	x0, x0, #0xff
  405bb8:	cmp	x0, #0x0
  405bbc:	b.eq	405be8 <property_get_ntp+0x180>  // b.none
  405bc0:	adrp	x0, 408000 <run+0x534>
  405bc4:	add	x1, x0, #0x1f3
  405bc8:	adrp	x0, 409000 <_fini+0xf04>
  405bcc:	add	x4, x0, #0x748
  405bd0:	mov	w3, #0x276                 	// #630
  405bd4:	mov	x2, x1
  405bd8:	adrp	x0, 408000 <run+0x534>
  405bdc:	add	x1, x0, #0x658
  405be0:	mov	w0, #0x0                   	// #0
  405be4:	bl	402840 <log_assert_failed_realm@plt>
  405be8:	ldr	x0, [sp, #88]
  405bec:	ldr	x0, [x0, #32]
  405bf0:	cmp	x0, #0x0
  405bf4:	b.eq	405c10 <property_get_ntp+0x1a8>  // b.none
  405bf8:	mov	w2, #0x1                   	// #1
  405bfc:	adrp	x0, 408000 <run+0x534>
  405c00:	add	x1, x0, #0x7a8
  405c04:	ldr	x0, [sp, #40]
  405c08:	bl	4027e0 <sd_bus_message_append@plt>
  405c0c:	b	405c60 <property_get_ntp+0x1f8>
  405c10:	ldr	x2, [sp, #40]
  405c14:	ldr	x1, [sp, #72]
  405c18:	ldr	x0, [sp, #88]
  405c1c:	bl	404948 <context_update_ntp_status>
  405c20:	str	w0, [sp, #84]
  405c24:	ldr	w0, [sp, #84]
  405c28:	cmp	w0, #0x0
  405c2c:	b.ge	405c38 <property_get_ntp+0x1d0>  // b.tcont
  405c30:	ldr	w0, [sp, #84]
  405c34:	b	405c60 <property_get_ntp+0x1f8>
  405c38:	ldr	x0, [sp, #88]
  405c3c:	bl	404060 <context_ntp_service_is_active>
  405c40:	cmp	w0, #0x0
  405c44:	cset	w0, gt
  405c48:	and	w0, w0, #0xff
  405c4c:	mov	w2, w0
  405c50:	adrp	x0, 408000 <run+0x534>
  405c54:	add	x1, x0, #0x7a8
  405c58:	ldr	x0, [sp, #40]
  405c5c:	bl	4027e0 <sd_bus_message_append@plt>
  405c60:	ldp	x29, x30, [sp], #96
  405c64:	ret

0000000000405c68 <method_set_timezone>:
  405c68:	sub	sp, sp, #0x100
  405c6c:	stp	x29, x30, [sp, #64]
  405c70:	add	x29, sp, #0x40
  405c74:	str	x0, [sp, #104]
  405c78:	str	x1, [sp, #96]
  405c7c:	str	x2, [sp, #88]
  405c80:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  405c84:	add	x0, x0, #0xa68
  405c88:	ldr	x1, [x0]
  405c8c:	str	x1, [sp, #248]
  405c90:	mov	x1, #0x0                   	// #0
  405c94:	ldr	x0, [sp, #96]
  405c98:	str	x0, [sp, #168]
  405c9c:	ldr	x0, [sp, #104]
  405ca0:	cmp	x0, #0x0
  405ca4:	cset	w0, eq  // eq = none
  405ca8:	and	w0, w0, #0xff
  405cac:	and	x0, x0, #0xff
  405cb0:	cmp	x0, #0x0
  405cb4:	b.eq	405ce0 <method_set_timezone+0x78>  // b.none
  405cb8:	adrp	x0, 408000 <run+0x534>
  405cbc:	add	x1, x0, #0x1f3
  405cc0:	adrp	x0, 409000 <_fini+0xf04>
  405cc4:	add	x4, x0, #0x760
  405cc8:	mov	w3, #0x288                 	// #648
  405ccc:	mov	x2, x1
  405cd0:	adrp	x0, 408000 <run+0x534>
  405cd4:	add	x1, x0, #0x5d8
  405cd8:	mov	w0, #0x0                   	// #0
  405cdc:	bl	402840 <log_assert_failed_realm@plt>
  405ce0:	ldr	x0, [sp, #168]
  405ce4:	cmp	x0, #0x0
  405ce8:	cset	w0, eq  // eq = none
  405cec:	and	w0, w0, #0xff
  405cf0:	and	x0, x0, #0xff
  405cf4:	cmp	x0, #0x0
  405cf8:	b.eq	405d24 <method_set_timezone+0xbc>  // b.none
  405cfc:	adrp	x0, 408000 <run+0x534>
  405d00:	add	x1, x0, #0x1f3
  405d04:	adrp	x0, 409000 <_fini+0xf04>
  405d08:	add	x4, x0, #0x760
  405d0c:	mov	w3, #0x289                 	// #649
  405d10:	mov	x2, x1
  405d14:	adrp	x0, 408000 <run+0x534>
  405d18:	add	x1, x0, #0x218
  405d1c:	mov	w0, #0x0                   	// #0
  405d20:	bl	402840 <log_assert_failed_realm@plt>
  405d24:	add	x1, sp, #0x74
  405d28:	add	x0, sp, #0xa0
  405d2c:	mov	x3, x1
  405d30:	mov	x2, x0
  405d34:	adrp	x0, 408000 <run+0x534>
  405d38:	add	x1, x0, #0x868
  405d3c:	ldr	x0, [sp, #104]
  405d40:	bl	402850 <sd_bus_message_read@plt>
  405d44:	str	w0, [sp, #120]
  405d48:	ldr	w0, [sp, #120]
  405d4c:	cmp	w0, #0x0
  405d50:	b.ge	405d5c <method_set_timezone+0xf4>  // b.tcont
  405d54:	ldr	w0, [sp, #120]
  405d58:	b	4061dc <method_set_timezone+0x574>
  405d5c:	ldr	x0, [sp, #160]
  405d60:	mov	w1, #0x7                   	// #7
  405d64:	bl	402b00 <timezone_is_valid@plt>
  405d68:	and	w0, w0, #0xff
  405d6c:	eor	w0, w0, #0x1
  405d70:	and	w0, w0, #0xff
  405d74:	cmp	w0, #0x0
  405d78:	b.eq	405da0 <method_set_timezone+0x138>  // b.none
  405d7c:	ldr	x0, [sp, #160]
  405d80:	mov	x3, x0
  405d84:	adrp	x0, 408000 <run+0x534>
  405d88:	add	x2, x0, #0x870
  405d8c:	adrp	x0, 408000 <run+0x534>
  405d90:	add	x1, x0, #0x898
  405d94:	ldr	x0, [sp, #88]
  405d98:	bl	4029b0 <sd_bus_error_setf@plt>
  405d9c:	b	4061dc <method_set_timezone+0x574>
  405da0:	ldr	x2, [sp, #160]
  405da4:	ldr	x0, [sp, #168]
  405da8:	ldr	x0, [x0]
  405dac:	mov	x1, x0
  405db0:	mov	x0, x2
  405db4:	bl	4030a4 <streq_ptr>
  405db8:	and	w0, w0, #0xff
  405dbc:	cmp	w0, #0x0
  405dc0:	b.eq	405dd4 <method_set_timezone+0x16c>  // b.none
  405dc4:	mov	x1, #0x0                   	// #0
  405dc8:	ldr	x0, [sp, #104]
  405dcc:	bl	402690 <sd_bus_reply_method_return@plt>
  405dd0:	b	4061dc <method_set_timezone+0x574>
  405dd4:	ldr	w0, [sp, #116]
  405dd8:	cmp	w0, #0x0
  405ddc:	cset	w0, ne  // ne = any
  405de0:	and	w1, w0, #0xff
  405de4:	ldr	x0, [sp, #168]
  405de8:	add	x0, x0, #0x10
  405dec:	ldr	x7, [sp, #88]
  405df0:	mov	x6, x0
  405df4:	mov	w5, #0xffffffff            	// #-1
  405df8:	mov	w4, w1
  405dfc:	mov	x3, #0x0                   	// #0
  405e00:	adrp	x0, 408000 <run+0x534>
  405e04:	add	x2, x0, #0x8c0
  405e08:	mov	w1, #0x19                  	// #25
  405e0c:	ldr	x0, [sp, #104]
  405e10:	bl	402c60 <bus_verify_polkit_async@plt>
  405e14:	str	w0, [sp, #120]
  405e18:	ldr	w0, [sp, #120]
  405e1c:	cmp	w0, #0x0
  405e20:	b.ge	405e2c <method_set_timezone+0x1c4>  // b.tcont
  405e24:	ldr	w0, [sp, #120]
  405e28:	b	4061dc <method_set_timezone+0x574>
  405e2c:	ldr	w0, [sp, #120]
  405e30:	cmp	w0, #0x0
  405e34:	b.ne	405e40 <method_set_timezone+0x1d8>  // b.any
  405e38:	mov	w0, #0x1                   	// #1
  405e3c:	b	4061dc <method_set_timezone+0x574>
  405e40:	ldr	x0, [sp, #168]
  405e44:	ldr	x1, [sp, #160]
  405e48:	bl	402790 <free_and_strdup@plt>
  405e4c:	str	w0, [sp, #120]
  405e50:	ldr	w0, [sp, #120]
  405e54:	cmp	w0, #0x0
  405e58:	b.ge	405e64 <method_set_timezone+0x1fc>  // b.tcont
  405e5c:	ldr	w0, [sp, #120]
  405e60:	b	4061dc <method_set_timezone+0x574>
  405e64:	ldr	x0, [sp, #168]
  405e68:	bl	404448 <context_write_data_timezone>
  405e6c:	str	w0, [sp, #120]
  405e70:	ldr	w0, [sp, #120]
  405e74:	cmp	w0, #0x0
  405e78:	b.ge	405f0c <method_set_timezone+0x2a4>  // b.tcont
  405e7c:	mov	w0, #0x3                   	// #3
  405e80:	str	w0, [sp, #148]
  405e84:	ldr	w0, [sp, #120]
  405e88:	str	w0, [sp, #152]
  405e8c:	str	wzr, [sp, #156]
  405e90:	ldr	w0, [sp, #156]
  405e94:	bl	402c80 <log_get_max_level_realm@plt>
  405e98:	mov	w1, w0
  405e9c:	ldr	w0, [sp, #148]
  405ea0:	and	w0, w0, #0x7
  405ea4:	cmp	w1, w0
  405ea8:	b.lt	405eec <method_set_timezone+0x284>  // b.tstop
  405eac:	ldr	w0, [sp, #156]
  405eb0:	lsl	w1, w0, #10
  405eb4:	ldr	w0, [sp, #148]
  405eb8:	orr	w6, w1, w0
  405ebc:	adrp	x0, 408000 <run+0x534>
  405ec0:	add	x1, x0, #0x1f3
  405ec4:	adrp	x0, 408000 <run+0x534>
  405ec8:	add	x5, x0, #0x8e8
  405ecc:	adrp	x0, 409000 <_fini+0xf04>
  405ed0:	add	x4, x0, #0x778
  405ed4:	mov	w3, #0x2aa                 	// #682
  405ed8:	mov	x2, x1
  405edc:	ldr	w1, [sp, #152]
  405ee0:	mov	w0, w6
  405ee4:	bl	402a80 <log_internal_realm@plt>
  405ee8:	b	405ef4 <method_set_timezone+0x28c>
  405eec:	ldr	w0, [sp, #152]
  405ef0:	cmp	w0, #0x0
  405ef4:	adrp	x0, 408000 <run+0x534>
  405ef8:	add	x2, x0, #0x8e8
  405efc:	ldr	w1, [sp, #120]
  405f00:	ldr	x0, [sp, #88]
  405f04:	bl	402740 <sd_bus_error_set_errnof@plt>
  405f08:	b	4061dc <method_set_timezone+0x574>
  405f0c:	bl	402af0 <tzset@plt>
  405f10:	mov	x0, #0x0                   	// #0
  405f14:	bl	402a10 <clock_set_timezone@plt>
  405f18:	str	w0, [sp, #120]
  405f1c:	ldr	w0, [sp, #120]
  405f20:	cmp	w0, #0x0
  405f24:	b.ge	405fa0 <method_set_timezone+0x338>  // b.tcont
  405f28:	mov	w0, #0x7                   	// #7
  405f2c:	str	w0, [sp, #124]
  405f30:	ldr	w0, [sp, #120]
  405f34:	str	w0, [sp, #128]
  405f38:	str	wzr, [sp, #132]
  405f3c:	ldr	w0, [sp, #132]
  405f40:	bl	402c80 <log_get_max_level_realm@plt>
  405f44:	mov	w1, w0
  405f48:	ldr	w0, [sp, #124]
  405f4c:	and	w0, w0, #0x7
  405f50:	cmp	w1, w0
  405f54:	b.lt	405f98 <method_set_timezone+0x330>  // b.tstop
  405f58:	ldr	w0, [sp, #132]
  405f5c:	lsl	w1, w0, #10
  405f60:	ldr	w0, [sp, #124]
  405f64:	orr	w6, w1, w0
  405f68:	adrp	x0, 408000 <run+0x534>
  405f6c:	add	x1, x0, #0x1f3
  405f70:	adrp	x0, 408000 <run+0x534>
  405f74:	add	x5, x0, #0x908
  405f78:	adrp	x0, 409000 <_fini+0xf04>
  405f7c:	add	x4, x0, #0x778
  405f80:	mov	w3, #0x2b4                 	// #692
  405f84:	mov	x2, x1
  405f88:	ldr	w1, [sp, #128]
  405f8c:	mov	w0, w6
  405f90:	bl	402a80 <log_internal_realm@plt>
  405f94:	b	405fa0 <method_set_timezone+0x338>
  405f98:	ldr	w0, [sp, #128]
  405f9c:	cmp	w0, #0x0
  405fa0:	ldr	x0, [sp, #168]
  405fa4:	ldrb	w0, [x0, #8]
  405fa8:	cmp	w0, #0x0
  405fac:	b.eq	4060dc <method_set_timezone+0x474>  // b.none
  405fb0:	add	x0, sp, #0xb0
  405fb4:	mov	x1, x0
  405fb8:	mov	w0, #0x0                   	// #0
  405fbc:	bl	402700 <clock_gettime@plt>
  405fc0:	cmp	w0, #0x0
  405fc4:	cset	w0, ne  // ne = any
  405fc8:	and	w0, w0, #0xff
  405fcc:	and	x0, x0, #0xff
  405fd0:	cmp	x0, #0x0
  405fd4:	b.eq	406000 <method_set_timezone+0x398>  // b.none
  405fd8:	adrp	x0, 408000 <run+0x534>
  405fdc:	add	x1, x0, #0x1f3
  405fe0:	adrp	x0, 409000 <_fini+0xf04>
  405fe4:	add	x4, x0, #0x760
  405fe8:	mov	w3, #0x2bb                 	// #699
  405fec:	mov	x2, x1
  405ff0:	adrp	x0, 408000 <run+0x534>
  405ff4:	add	x1, x0, #0x940
  405ff8:	mov	w0, #0x0                   	// #0
  405ffc:	bl	402840 <log_assert_failed_realm@plt>
  406000:	add	x1, sp, #0xc0
  406004:	add	x0, sp, #0xb0
  406008:	bl	402820 <localtime_r@plt>
  40600c:	cmp	x0, #0x0
  406010:	cset	w0, eq  // eq = none
  406014:	and	w0, w0, #0xff
  406018:	and	x0, x0, #0xff
  40601c:	cmp	x0, #0x0
  406020:	b.eq	40604c <method_set_timezone+0x3e4>  // b.none
  406024:	adrp	x0, 408000 <run+0x534>
  406028:	add	x1, x0, #0x1f3
  40602c:	adrp	x0, 409000 <_fini+0xf04>
  406030:	add	x4, x0, #0x760
  406034:	mov	w3, #0x2bc                 	// #700
  406038:	mov	x2, x1
  40603c:	adrp	x0, 408000 <run+0x534>
  406040:	add	x1, x0, #0x968
  406044:	mov	w0, #0x0                   	// #0
  406048:	bl	402840 <log_assert_failed_realm@plt>
  40604c:	add	x0, sp, #0xc0
  406050:	bl	4027c0 <clock_set_hwclock@plt>
  406054:	str	w0, [sp, #120]
  406058:	ldr	w0, [sp, #120]
  40605c:	cmp	w0, #0x0
  406060:	b.ge	4060dc <method_set_timezone+0x474>  // b.tcont
  406064:	mov	w0, #0x7                   	// #7
  406068:	str	w0, [sp, #136]
  40606c:	ldr	w0, [sp, #120]
  406070:	str	w0, [sp, #140]
  406074:	str	wzr, [sp, #144]
  406078:	ldr	w0, [sp, #144]
  40607c:	bl	402c80 <log_get_max_level_realm@plt>
  406080:	mov	w1, w0
  406084:	ldr	w0, [sp, #136]
  406088:	and	w0, w0, #0x7
  40608c:	cmp	w1, w0
  406090:	b.lt	4060d4 <method_set_timezone+0x46c>  // b.tstop
  406094:	ldr	w0, [sp, #144]
  406098:	lsl	w1, w0, #10
  40609c:	ldr	w0, [sp, #136]
  4060a0:	orr	w6, w1, w0
  4060a4:	adrp	x0, 408000 <run+0x534>
  4060a8:	add	x1, x0, #0x1f3
  4060ac:	adrp	x0, 408000 <run+0x534>
  4060b0:	add	x5, x0, #0x988
  4060b4:	adrp	x0, 409000 <_fini+0xf04>
  4060b8:	add	x4, x0, #0x778
  4060bc:	mov	w3, #0x2c0                 	// #704
  4060c0:	mov	x2, x1
  4060c4:	ldr	w1, [sp, #140]
  4060c8:	mov	w0, w6
  4060cc:	bl	402a80 <log_internal_realm@plt>
  4060d0:	b	4060dc <method_set_timezone+0x474>
  4060d4:	ldr	w0, [sp, #140]
  4060d8:	cmp	w0, #0x0
  4060dc:	adrp	x0, 408000 <run+0x534>
  4060e0:	add	x8, x0, #0x1f3
  4060e4:	ldr	x0, [sp, #168]
  4060e8:	ldr	x5, [x0]
  4060ec:	adrp	x0, 41b000 <__tzname@@GLIBC_2.17>
  4060f0:	add	x0, x0, #0x18
  4060f4:	ldr	w1, [x0]
  4060f8:	adrp	x0, 41b000 <__tzname@@GLIBC_2.17>
  4060fc:	add	x0, x0, #0x0
  406100:	sxtw	x1, w1
  406104:	ldr	x0, [x0, x1, lsl #3]
  406108:	adrp	x1, 41b000 <__tzname@@GLIBC_2.17>
  40610c:	add	x1, x1, #0x18
  406110:	ldr	w1, [x1]
  406114:	ldr	x2, [sp, #168]
  406118:	ldr	x2, [x2]
  40611c:	adrp	x3, 41b000 <__tzname@@GLIBC_2.17>
  406120:	add	x3, x3, #0x18
  406124:	ldr	w4, [x3]
  406128:	adrp	x3, 41b000 <__tzname@@GLIBC_2.17>
  40612c:	add	x3, x3, #0x0
  406130:	sxtw	x4, w4
  406134:	ldr	x3, [x3, x4, lsl #3]
  406138:	str	xzr, [sp, #56]
  40613c:	str	x3, [sp, #48]
  406140:	str	x2, [sp, #40]
  406144:	adrp	x2, 408000 <run+0x534>
  406148:	add	x2, x2, #0xa00
  40614c:	str	x2, [sp, #32]
  406150:	str	w1, [sp, #24]
  406154:	adrp	x1, 408000 <run+0x534>
  406158:	add	x1, x1, #0xa28
  40615c:	str	x1, [sp, #16]
  406160:	str	x0, [sp, #8]
  406164:	adrp	x0, 408000 <run+0x534>
  406168:	add	x0, x0, #0xa38
  40616c:	str	x0, [sp]
  406170:	mov	x7, x5
  406174:	adrp	x0, 408000 <run+0x534>
  406178:	add	x6, x0, #0x9c0
  40617c:	adrp	x0, 408000 <run+0x534>
  406180:	add	x5, x0, #0x9d0
  406184:	adrp	x0, 409000 <_fini+0xf04>
  406188:	add	x4, x0, #0x778
  40618c:	mov	w3, #0x2c3                 	// #707
  406190:	mov	x2, x8
  406194:	mov	w1, #0x0                   	// #0
  406198:	mov	w0, #0x6                   	// #6
  40619c:	bl	402a50 <log_struct_internal@plt>
  4061a0:	ldr	x0, [sp, #104]
  4061a4:	bl	402800 <sd_bus_message_get_bus@plt>
  4061a8:	mov	x5, x0
  4061ac:	mov	x4, #0x0                   	// #0
  4061b0:	adrp	x0, 408000 <run+0x534>
  4061b4:	add	x3, x0, #0xa50
  4061b8:	adrp	x0, 408000 <run+0x534>
  4061bc:	add	x2, x0, #0x610
  4061c0:	adrp	x0, 408000 <run+0x534>
  4061c4:	add	x1, x0, #0x630
  4061c8:	mov	x0, x5
  4061cc:	bl	402a30 <sd_bus_emit_properties_changed@plt>
  4061d0:	mov	x1, #0x0                   	// #0
  4061d4:	ldr	x0, [sp, #104]
  4061d8:	bl	402690 <sd_bus_reply_method_return@plt>
  4061dc:	mov	w1, w0
  4061e0:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  4061e4:	add	x0, x0, #0xa68
  4061e8:	ldr	x2, [sp, #248]
  4061ec:	ldr	x0, [x0]
  4061f0:	eor	x0, x2, x0
  4061f4:	cmp	x0, #0x0
  4061f8:	b.eq	406200 <method_set_timezone+0x598>  // b.none
  4061fc:	bl	4029c0 <__stack_chk_fail@plt>
  406200:	mov	w0, w1
  406204:	ldp	x29, x30, [sp, #64]
  406208:	add	sp, sp, #0x100
  40620c:	ret

0000000000406210 <method_set_local_rtc>:
  406210:	stp	x29, x30, [sp, #-224]!
  406214:	mov	x29, sp
  406218:	str	x0, [sp, #40]
  40621c:	str	x1, [sp, #32]
  406220:	str	x2, [sp, #24]
  406224:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  406228:	add	x0, x0, #0xa68
  40622c:	ldr	x1, [x0]
  406230:	str	x1, [sp, #216]
  406234:	mov	x1, #0x0                   	// #0
  406238:	ldr	x0, [sp, #32]
  40623c:	str	x0, [sp, #136]
  406240:	ldr	x0, [sp, #40]
  406244:	cmp	x0, #0x0
  406248:	cset	w0, eq  // eq = none
  40624c:	and	w0, w0, #0xff
  406250:	and	x0, x0, #0xff
  406254:	cmp	x0, #0x0
  406258:	b.eq	406284 <method_set_local_rtc+0x74>  // b.none
  40625c:	adrp	x0, 408000 <run+0x534>
  406260:	add	x1, x0, #0x1f3
  406264:	adrp	x0, 409000 <_fini+0xf04>
  406268:	add	x4, x0, #0x790
  40626c:	mov	w3, #0x2d7                 	// #727
  406270:	mov	x2, x1
  406274:	adrp	x0, 408000 <run+0x534>
  406278:	add	x1, x0, #0x5d8
  40627c:	mov	w0, #0x0                   	// #0
  406280:	bl	402840 <log_assert_failed_realm@plt>
  406284:	ldr	x0, [sp, #136]
  406288:	cmp	x0, #0x0
  40628c:	cset	w0, eq  // eq = none
  406290:	and	w0, w0, #0xff
  406294:	and	x0, x0, #0xff
  406298:	cmp	x0, #0x0
  40629c:	b.eq	4062c8 <method_set_local_rtc+0xb8>  // b.none
  4062a0:	adrp	x0, 408000 <run+0x534>
  4062a4:	add	x1, x0, #0x1f3
  4062a8:	adrp	x0, 409000 <_fini+0xf04>
  4062ac:	add	x4, x0, #0x790
  4062b0:	mov	w3, #0x2d8                 	// #728
  4062b4:	mov	x2, x1
  4062b8:	adrp	x0, 408000 <run+0x534>
  4062bc:	add	x1, x0, #0x218
  4062c0:	mov	w0, #0x0                   	// #0
  4062c4:	bl	402840 <log_assert_failed_realm@plt>
  4062c8:	add	x2, sp, #0x38
  4062cc:	add	x1, sp, #0x34
  4062d0:	add	x0, sp, #0x30
  4062d4:	mov	x4, x2
  4062d8:	mov	x3, x1
  4062dc:	mov	x2, x0
  4062e0:	adrp	x0, 408000 <run+0x534>
  4062e4:	add	x1, x0, #0xa60
  4062e8:	ldr	x0, [sp, #40]
  4062ec:	bl	402850 <sd_bus_message_read@plt>
  4062f0:	str	w0, [sp, #60]
  4062f4:	ldr	w0, [sp, #60]
  4062f8:	cmp	w0, #0x0
  4062fc:	b.ge	406308 <method_set_local_rtc+0xf8>  // b.tcont
  406300:	ldr	w0, [sp, #60]
  406304:	b	4068a8 <method_set_local_rtc+0x698>
  406308:	ldr	x0, [sp, #136]
  40630c:	ldrb	w0, [x0, #8]
  406310:	mov	w1, w0
  406314:	ldr	w0, [sp, #48]
  406318:	cmp	w1, w0
  40631c:	b.ne	406330 <method_set_local_rtc+0x120>  // b.any
  406320:	mov	x1, #0x0                   	// #0
  406324:	ldr	x0, [sp, #40]
  406328:	bl	402690 <sd_bus_reply_method_return@plt>
  40632c:	b	4068a8 <method_set_local_rtc+0x698>
  406330:	ldr	w0, [sp, #56]
  406334:	cmp	w0, #0x0
  406338:	cset	w0, ne  // ne = any
  40633c:	and	w1, w0, #0xff
  406340:	ldr	x0, [sp, #136]
  406344:	add	x0, x0, #0x10
  406348:	ldr	x7, [sp, #24]
  40634c:	mov	x6, x0
  406350:	mov	w5, #0xffffffff            	// #-1
  406354:	mov	w4, w1
  406358:	mov	x3, #0x0                   	// #0
  40635c:	adrp	x0, 408000 <run+0x534>
  406360:	add	x2, x0, #0xa68
  406364:	mov	w1, #0x19                  	// #25
  406368:	ldr	x0, [sp, #40]
  40636c:	bl	402c60 <bus_verify_polkit_async@plt>
  406370:	str	w0, [sp, #60]
  406374:	ldr	w0, [sp, #60]
  406378:	cmp	w0, #0x0
  40637c:	b.ge	406388 <method_set_local_rtc+0x178>  // b.tcont
  406380:	ldr	w0, [sp, #60]
  406384:	b	4068a8 <method_set_local_rtc+0x698>
  406388:	ldr	w0, [sp, #60]
  40638c:	cmp	w0, #0x0
  406390:	b.ne	40639c <method_set_local_rtc+0x18c>  // b.any
  406394:	mov	w0, #0x1                   	// #1
  406398:	b	4068a8 <method_set_local_rtc+0x698>
  40639c:	ldr	w0, [sp, #48]
  4063a0:	cmp	w0, #0x0
  4063a4:	cset	w0, ne  // ne = any
  4063a8:	and	w1, w0, #0xff
  4063ac:	ldr	x0, [sp, #136]
  4063b0:	strb	w1, [x0, #8]
  4063b4:	ldr	x0, [sp, #136]
  4063b8:	bl	4045dc <context_write_data_local_rtc>
  4063bc:	str	w0, [sp, #60]
  4063c0:	ldr	w0, [sp, #60]
  4063c4:	cmp	w0, #0x0
  4063c8:	b.ge	4064a4 <method_set_local_rtc+0x294>  // b.tcont
  4063cc:	mov	w0, #0x3                   	// #3
  4063d0:	str	w0, [sp, #124]
  4063d4:	ldr	w0, [sp, #60]
  4063d8:	str	w0, [sp, #128]
  4063dc:	str	wzr, [sp, #132]
  4063e0:	ldr	w0, [sp, #132]
  4063e4:	bl	402c80 <log_get_max_level_realm@plt>
  4063e8:	mov	w1, w0
  4063ec:	ldr	w0, [sp, #124]
  4063f0:	and	w0, w0, #0x7
  4063f4:	cmp	w1, w0
  4063f8:	b.lt	406460 <method_set_local_rtc+0x250>  // b.tstop
  4063fc:	ldr	w0, [sp, #132]
  406400:	lsl	w1, w0, #10
  406404:	ldr	w0, [sp, #124]
  406408:	orr	w7, w1, w0
  40640c:	adrp	x0, 408000 <run+0x534>
  406410:	add	x1, x0, #0x1f3
  406414:	ldr	w0, [sp, #48]
  406418:	cmp	w0, #0x0
  40641c:	b.eq	40642c <method_set_local_rtc+0x21c>  // b.none
  406420:	adrp	x0, 408000 <run+0x534>
  406424:	add	x0, x0, #0xa90
  406428:	b	406434 <method_set_local_rtc+0x224>
  40642c:	adrp	x0, 408000 <run+0x534>
  406430:	add	x0, x0, #0x4c8
  406434:	mov	x6, x0
  406438:	adrp	x0, 408000 <run+0x534>
  40643c:	add	x5, x0, #0xa98
  406440:	adrp	x0, 409000 <_fini+0xf04>
  406444:	add	x4, x0, #0x7a8
  406448:	mov	w3, #0x2f4                 	// #756
  40644c:	mov	x2, x1
  406450:	ldr	w1, [sp, #128]
  406454:	mov	w0, w7
  406458:	bl	402a80 <log_internal_realm@plt>
  40645c:	b	406468 <method_set_local_rtc+0x258>
  406460:	ldr	w0, [sp, #128]
  406464:	cmp	w0, #0x0
  406468:	ldr	w0, [sp, #48]
  40646c:	cmp	w0, #0x0
  406470:	b.eq	406480 <method_set_local_rtc+0x270>  // b.none
  406474:	adrp	x0, 408000 <run+0x534>
  406478:	add	x0, x0, #0xa90
  40647c:	b	406488 <method_set_local_rtc+0x278>
  406480:	adrp	x0, 408000 <run+0x534>
  406484:	add	x0, x0, #0x4c8
  406488:	mov	x3, x0
  40648c:	adrp	x0, 408000 <run+0x534>
  406490:	add	x2, x0, #0xa98
  406494:	ldr	w1, [sp, #60]
  406498:	ldr	x0, [sp, #24]
  40649c:	bl	402740 <sd_bus_error_set_errnof@plt>
  4064a0:	b	4068a8 <method_set_local_rtc+0x698>
  4064a4:	mov	x0, #0x0                   	// #0
  4064a8:	bl	402a10 <clock_set_timezone@plt>
  4064ac:	str	w0, [sp, #60]
  4064b0:	ldr	w0, [sp, #60]
  4064b4:	cmp	w0, #0x0
  4064b8:	b.ge	406534 <method_set_local_rtc+0x324>  // b.tcont
  4064bc:	mov	w0, #0x7                   	// #7
  4064c0:	str	w0, [sp, #64]
  4064c4:	ldr	w0, [sp, #60]
  4064c8:	str	w0, [sp, #68]
  4064cc:	str	wzr, [sp, #72]
  4064d0:	ldr	w0, [sp, #72]
  4064d4:	bl	402c80 <log_get_max_level_realm@plt>
  4064d8:	mov	w1, w0
  4064dc:	ldr	w0, [sp, #64]
  4064e0:	and	w0, w0, #0x7
  4064e4:	cmp	w1, w0
  4064e8:	b.lt	40652c <method_set_local_rtc+0x31c>  // b.tstop
  4064ec:	ldr	w0, [sp, #72]
  4064f0:	lsl	w1, w0, #10
  4064f4:	ldr	w0, [sp, #64]
  4064f8:	orr	w6, w1, w0
  4064fc:	adrp	x0, 408000 <run+0x534>
  406500:	add	x1, x0, #0x1f3
  406504:	adrp	x0, 408000 <run+0x534>
  406508:	add	x5, x0, #0x908
  40650c:	adrp	x0, 409000 <_fini+0xf04>
  406510:	add	x4, x0, #0x7a8
  406514:	mov	w3, #0x2fb                 	// #763
  406518:	mov	x2, x1
  40651c:	ldr	w1, [sp, #68]
  406520:	mov	w0, w6
  406524:	bl	402a80 <log_internal_realm@plt>
  406528:	b	406534 <method_set_local_rtc+0x324>
  40652c:	ldr	w0, [sp, #68]
  406530:	cmp	w0, #0x0
  406534:	add	x0, sp, #0x90
  406538:	mov	x1, x0
  40653c:	mov	w0, #0x0                   	// #0
  406540:	bl	402700 <clock_gettime@plt>
  406544:	cmp	w0, #0x0
  406548:	cset	w0, ne  // ne = any
  40654c:	and	w0, w0, #0xff
  406550:	and	x0, x0, #0xff
  406554:	cmp	x0, #0x0
  406558:	b.eq	406584 <method_set_local_rtc+0x374>  // b.none
  40655c:	adrp	x0, 408000 <run+0x534>
  406560:	add	x1, x0, #0x1f3
  406564:	adrp	x0, 409000 <_fini+0xf04>
  406568:	add	x4, x0, #0x790
  40656c:	mov	w3, #0x2fe                 	// #766
  406570:	mov	x2, x1
  406574:	adrp	x0, 408000 <run+0x534>
  406578:	add	x1, x0, #0x940
  40657c:	mov	w0, #0x0                   	// #0
  406580:	bl	402840 <log_assert_failed_realm@plt>
  406584:	ldr	w0, [sp, #52]
  406588:	cmp	w0, #0x0
  40658c:	b.eq	406714 <method_set_local_rtc+0x504>  // b.none
  406590:	ldr	x0, [sp, #136]
  406594:	ldrb	w0, [x0, #8]
  406598:	cmp	w0, #0x0
  40659c:	b.eq	4065b0 <method_set_local_rtc+0x3a0>  // b.none
  4065a0:	add	x1, sp, #0xa0
  4065a4:	add	x0, sp, #0x90
  4065a8:	bl	402820 <localtime_r@plt>
  4065ac:	b	4065bc <method_set_local_rtc+0x3ac>
  4065b0:	add	x1, sp, #0xa0
  4065b4:	add	x0, sp, #0x90
  4065b8:	bl	4029a0 <gmtime_r@plt>
  4065bc:	add	x0, sp, #0xa0
  4065c0:	bl	402970 <clock_get_hwclock@plt>
  4065c4:	str	w0, [sp, #60]
  4065c8:	ldr	w0, [sp, #60]
  4065cc:	cmp	w0, #0x0
  4065d0:	b.ge	406650 <method_set_local_rtc+0x440>  // b.tcont
  4065d4:	mov	w0, #0x7                   	// #7
  4065d8:	str	w0, [sp, #100]
  4065dc:	ldr	w0, [sp, #60]
  4065e0:	str	w0, [sp, #104]
  4065e4:	str	wzr, [sp, #108]
  4065e8:	ldr	w0, [sp, #108]
  4065ec:	bl	402c80 <log_get_max_level_realm@plt>
  4065f0:	mov	w1, w0
  4065f4:	ldr	w0, [sp, #100]
  4065f8:	and	w0, w0, #0x7
  4065fc:	cmp	w1, w0
  406600:	b.lt	406644 <method_set_local_rtc+0x434>  // b.tstop
  406604:	ldr	w0, [sp, #108]
  406608:	lsl	w1, w0, #10
  40660c:	ldr	w0, [sp, #100]
  406610:	orr	w6, w1, w0
  406614:	adrp	x0, 408000 <run+0x534>
  406618:	add	x1, x0, #0x1f3
  40661c:	adrp	x0, 408000 <run+0x534>
  406620:	add	x5, x0, #0xab8
  406624:	adrp	x0, 409000 <_fini+0xf04>
  406628:	add	x4, x0, #0x7a8
  40662c:	mov	w3, #0x30c                 	// #780
  406630:	mov	x2, x1
  406634:	ldr	w1, [sp, #104]
  406638:	mov	w0, w6
  40663c:	bl	402a80 <log_internal_realm@plt>
  406640:	b	4067d0 <method_set_local_rtc+0x5c0>
  406644:	ldr	w0, [sp, #104]
  406648:	cmp	w0, #0x0
  40664c:	b	4067d0 <method_set_local_rtc+0x5c0>
  406650:	ldr	x0, [sp, #136]
  406654:	ldrb	w0, [x0, #8]
  406658:	cmp	w0, #0x0
  40665c:	b.eq	406670 <method_set_local_rtc+0x460>  // b.none
  406660:	add	x0, sp, #0xa0
  406664:	bl	402830 <mktime@plt>
  406668:	str	x0, [sp, #144]
  40666c:	b	40667c <method_set_local_rtc+0x46c>
  406670:	add	x0, sp, #0xa0
  406674:	bl	402630 <timegm@plt>
  406678:	str	x0, [sp, #144]
  40667c:	add	x0, sp, #0x90
  406680:	mov	x1, x0
  406684:	mov	w0, #0x0                   	// #0
  406688:	bl	402b10 <clock_settime@plt>
  40668c:	cmp	w0, #0x0
  406690:	b.ge	4067d0 <method_set_local_rtc+0x5c0>  // b.tcont
  406694:	mov	w0, #0x7                   	// #7
  406698:	str	w0, [sp, #88]
  40669c:	bl	402940 <__errno_location@plt>
  4066a0:	ldr	w0, [x0]
  4066a4:	str	w0, [sp, #92]
  4066a8:	str	wzr, [sp, #96]
  4066ac:	ldr	w0, [sp, #96]
  4066b0:	bl	402c80 <log_get_max_level_realm@plt>
  4066b4:	mov	w1, w0
  4066b8:	ldr	w0, [sp, #88]
  4066bc:	and	w0, w0, #0x7
  4066c0:	cmp	w1, w0
  4066c4:	b.lt	406708 <method_set_local_rtc+0x4f8>  // b.tstop
  4066c8:	ldr	w0, [sp, #96]
  4066cc:	lsl	w1, w0, #10
  4066d0:	ldr	w0, [sp, #88]
  4066d4:	orr	w6, w1, w0
  4066d8:	adrp	x0, 408000 <run+0x534>
  4066dc:	add	x1, x0, #0x1f3
  4066e0:	adrp	x0, 408000 <run+0x534>
  4066e4:	add	x5, x0, #0xae8
  4066e8:	adrp	x0, 409000 <_fini+0xf04>
  4066ec:	add	x4, x0, #0x7a8
  4066f0:	mov	w3, #0x315                 	// #789
  4066f4:	mov	x2, x1
  4066f8:	ldr	w1, [sp, #92]
  4066fc:	mov	w0, w6
  406700:	bl	402a80 <log_internal_realm@plt>
  406704:	b	4067d0 <method_set_local_rtc+0x5c0>
  406708:	ldr	w0, [sp, #92]
  40670c:	cmp	w0, #0x0
  406710:	b	4067d0 <method_set_local_rtc+0x5c0>
  406714:	ldr	x0, [sp, #136]
  406718:	ldrb	w0, [x0, #8]
  40671c:	cmp	w0, #0x0
  406720:	b.eq	406734 <method_set_local_rtc+0x524>  // b.none
  406724:	add	x1, sp, #0xa0
  406728:	add	x0, sp, #0x90
  40672c:	bl	402820 <localtime_r@plt>
  406730:	b	406740 <method_set_local_rtc+0x530>
  406734:	add	x1, sp, #0xa0
  406738:	add	x0, sp, #0x90
  40673c:	bl	4029a0 <gmtime_r@plt>
  406740:	add	x0, sp, #0xa0
  406744:	bl	4027c0 <clock_set_hwclock@plt>
  406748:	str	w0, [sp, #60]
  40674c:	ldr	w0, [sp, #60]
  406750:	cmp	w0, #0x0
  406754:	b.ge	4067d0 <method_set_local_rtc+0x5c0>  // b.tcont
  406758:	mov	w0, #0x7                   	// #7
  40675c:	str	w0, [sp, #76]
  406760:	ldr	w0, [sp, #60]
  406764:	str	w0, [sp, #80]
  406768:	str	wzr, [sp, #84]
  40676c:	ldr	w0, [sp, #84]
  406770:	bl	402c80 <log_get_max_level_realm@plt>
  406774:	mov	w1, w0
  406778:	ldr	w0, [sp, #76]
  40677c:	and	w0, w0, #0x7
  406780:	cmp	w1, w0
  406784:	b.lt	4067c8 <method_set_local_rtc+0x5b8>  // b.tstop
  406788:	ldr	w0, [sp, #84]
  40678c:	lsl	w1, w0, #10
  406790:	ldr	w0, [sp, #76]
  406794:	orr	w6, w1, w0
  406798:	adrp	x0, 408000 <run+0x534>
  40679c:	add	x1, x0, #0x1f3
  4067a0:	adrp	x0, 408000 <run+0x534>
  4067a4:	add	x5, x0, #0x988
  4067a8:	adrp	x0, 409000 <_fini+0xf04>
  4067ac:	add	x4, x0, #0x7a8
  4067b0:	mov	w3, #0x323                 	// #803
  4067b4:	mov	x2, x1
  4067b8:	ldr	w1, [sp, #80]
  4067bc:	mov	w0, w6
  4067c0:	bl	402a80 <log_internal_realm@plt>
  4067c4:	b	4067d0 <method_set_local_rtc+0x5c0>
  4067c8:	ldr	w0, [sp, #80]
  4067cc:	cmp	w0, #0x0
  4067d0:	mov	w0, #0x6                   	// #6
  4067d4:	str	w0, [sp, #112]
  4067d8:	str	wzr, [sp, #116]
  4067dc:	str	wzr, [sp, #120]
  4067e0:	ldr	w0, [sp, #120]
  4067e4:	bl	402c80 <log_get_max_level_realm@plt>
  4067e8:	mov	w1, w0
  4067ec:	ldr	w0, [sp, #112]
  4067f0:	and	w0, w0, #0x7
  4067f4:	cmp	w1, w0
  4067f8:	b.lt	406864 <method_set_local_rtc+0x654>  // b.tstop
  4067fc:	ldr	w0, [sp, #120]
  406800:	lsl	w1, w0, #10
  406804:	ldr	w0, [sp, #112]
  406808:	orr	w7, w1, w0
  40680c:	adrp	x0, 408000 <run+0x534>
  406810:	add	x1, x0, #0x1f3
  406814:	ldr	x0, [sp, #136]
  406818:	ldrb	w0, [x0, #8]
  40681c:	cmp	w0, #0x0
  406820:	b.eq	406830 <method_set_local_rtc+0x620>  // b.none
  406824:	adrp	x0, 408000 <run+0x534>
  406828:	add	x0, x0, #0xa90
  40682c:	b	406838 <method_set_local_rtc+0x628>
  406830:	adrp	x0, 408000 <run+0x534>
  406834:	add	x0, x0, #0x4c8
  406838:	mov	x6, x0
  40683c:	adrp	x0, 408000 <run+0x534>
  406840:	add	x5, x0, #0xb18
  406844:	adrp	x0, 409000 <_fini+0xf04>
  406848:	add	x4, x0, #0x7a8
  40684c:	mov	w3, #0x326                 	// #806
  406850:	mov	x2, x1
  406854:	ldr	w1, [sp, #116]
  406858:	mov	w0, w7
  40685c:	bl	402a80 <log_internal_realm@plt>
  406860:	b	40686c <method_set_local_rtc+0x65c>
  406864:	ldr	w0, [sp, #116]
  406868:	cmp	w0, #0x0
  40686c:	ldr	x0, [sp, #40]
  406870:	bl	402800 <sd_bus_message_get_bus@plt>
  406874:	mov	x5, x0
  406878:	mov	x4, #0x0                   	// #0
  40687c:	adrp	x0, 408000 <run+0x534>
  406880:	add	x3, x0, #0xb38
  406884:	adrp	x0, 408000 <run+0x534>
  406888:	add	x2, x0, #0x610
  40688c:	adrp	x0, 408000 <run+0x534>
  406890:	add	x1, x0, #0x630
  406894:	mov	x0, x5
  406898:	bl	402a30 <sd_bus_emit_properties_changed@plt>
  40689c:	mov	x1, #0x0                   	// #0
  4068a0:	ldr	x0, [sp, #40]
  4068a4:	bl	402690 <sd_bus_reply_method_return@plt>
  4068a8:	mov	w1, w0
  4068ac:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  4068b0:	add	x0, x0, #0xa68
  4068b4:	ldr	x2, [sp, #216]
  4068b8:	ldr	x0, [x0]
  4068bc:	eor	x0, x2, x0
  4068c0:	cmp	x0, #0x0
  4068c4:	b.eq	4068cc <method_set_local_rtc+0x6bc>  // b.none
  4068c8:	bl	4029c0 <__stack_chk_fail@plt>
  4068cc:	mov	w0, w1
  4068d0:	ldp	x29, x30, [sp], #224
  4068d4:	ret

00000000004068d8 <method_set_time>:
  4068d8:	sub	sp, sp, #0x110
  4068dc:	stp	x29, x30, [sp, #32]
  4068e0:	add	x29, sp, #0x20
  4068e4:	stp	x19, x20, [sp, #48]
  4068e8:	str	x0, [sp, #88]
  4068ec:	str	x1, [sp, #80]
  4068f0:	str	x2, [sp, #72]
  4068f4:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  4068f8:	add	x0, x0, #0xa68
  4068fc:	ldr	x1, [x0]
  406900:	str	x1, [sp, #264]
  406904:	mov	x1, #0x0                   	// #0
  406908:	ldr	x0, [sp, #88]
  40690c:	bl	402800 <sd_bus_message_get_bus@plt>
  406910:	str	x0, [sp, #160]
  406914:	ldr	x0, [sp, #80]
  406918:	str	x0, [sp, #168]
  40691c:	ldr	x0, [sp, #88]
  406920:	cmp	x0, #0x0
  406924:	cset	w0, eq  // eq = none
  406928:	and	w0, w0, #0xff
  40692c:	and	x0, x0, #0xff
  406930:	cmp	x0, #0x0
  406934:	b.eq	406960 <method_set_time+0x88>  // b.none
  406938:	adrp	x0, 408000 <run+0x534>
  40693c:	add	x1, x0, #0x1f3
  406940:	adrp	x0, 409000 <_fini+0xf04>
  406944:	add	x4, x0, #0x7c0
  406948:	mov	w3, #0x338                 	// #824
  40694c:	mov	x2, x1
  406950:	adrp	x0, 408000 <run+0x534>
  406954:	add	x1, x0, #0x5d8
  406958:	mov	w0, #0x0                   	// #0
  40695c:	bl	402840 <log_assert_failed_realm@plt>
  406960:	ldr	x0, [sp, #168]
  406964:	cmp	x0, #0x0
  406968:	cset	w0, eq  // eq = none
  40696c:	and	w0, w0, #0xff
  406970:	and	x0, x0, #0xff
  406974:	cmp	x0, #0x0
  406978:	b.eq	4069a4 <method_set_time+0xcc>  // b.none
  40697c:	adrp	x0, 408000 <run+0x534>
  406980:	add	x1, x0, #0x1f3
  406984:	adrp	x0, 409000 <_fini+0xf04>
  406988:	add	x4, x0, #0x7c0
  40698c:	mov	w3, #0x339                 	// #825
  406990:	mov	x2, x1
  406994:	adrp	x0, 408000 <run+0x534>
  406998:	add	x1, x0, #0x218
  40699c:	mov	w0, #0x0                   	// #0
  4069a0:	bl	402840 <log_assert_failed_realm@plt>
  4069a4:	ldr	x0, [sp, #168]
  4069a8:	ldr	x0, [x0, #32]
  4069ac:	cmp	x0, #0x0
  4069b0:	b.eq	4069d0 <method_set_time+0xf8>  // b.none
  4069b4:	adrp	x0, 408000 <run+0x534>
  4069b8:	add	x2, x0, #0xb48
  4069bc:	adrp	x0, 408000 <run+0x534>
  4069c0:	add	x1, x0, #0xb78
  4069c4:	ldr	x0, [sp, #72]
  4069c8:	bl	402950 <sd_bus_error_set@plt>
  4069cc:	b	406e20 <method_set_time+0x548>
  4069d0:	ldr	x2, [sp, #88]
  4069d4:	ldr	x1, [sp, #160]
  4069d8:	ldr	x0, [sp, #168]
  4069dc:	bl	404948 <context_update_ntp_status>
  4069e0:	str	w0, [sp, #116]
  4069e4:	ldr	w0, [sp, #116]
  4069e8:	cmp	w0, #0x0
  4069ec:	b.ge	406a08 <method_set_time+0x130>  // b.tcont
  4069f0:	adrp	x0, 408000 <run+0x534>
  4069f4:	add	x2, x0, #0xbb0
  4069f8:	ldr	w1, [sp, #116]
  4069fc:	ldr	x0, [sp, #72]
  406a00:	bl	402740 <sd_bus_error_set_errnof@plt>
  406a04:	b	406e20 <method_set_time+0x548>
  406a08:	ldr	x0, [sp, #168]
  406a0c:	bl	404060 <context_ntp_service_is_active>
  406a10:	cmp	w0, #0x0
  406a14:	b.le	406a34 <method_set_time+0x15c>
  406a18:	adrp	x0, 408000 <run+0x534>
  406a1c:	add	x2, x0, #0xbd0
  406a20:	adrp	x0, 408000 <run+0x534>
  406a24:	add	x1, x0, #0xb78
  406a28:	ldr	x0, [sp, #72]
  406a2c:	bl	402950 <sd_bus_error_set@plt>
  406a30:	b	406e20 <method_set_time+0x548>
  406a34:	mov	w0, #0x1                   	// #1
  406a38:	bl	402ac0 <now@plt>
  406a3c:	str	x0, [sp, #152]
  406a40:	add	x2, sp, #0x70
  406a44:	add	x1, sp, #0x6c
  406a48:	add	x0, sp, #0x90
  406a4c:	mov	x4, x2
  406a50:	mov	x3, x1
  406a54:	mov	x2, x0
  406a58:	adrp	x0, 408000 <run+0x534>
  406a5c:	add	x1, x0, #0xc00
  406a60:	ldr	x0, [sp, #88]
  406a64:	bl	402850 <sd_bus_message_read@plt>
  406a68:	str	w0, [sp, #116]
  406a6c:	ldr	w0, [sp, #116]
  406a70:	cmp	w0, #0x0
  406a74:	b.ge	406a80 <method_set_time+0x1a8>  // b.tcont
  406a78:	ldr	w0, [sp, #116]
  406a7c:	b	406e20 <method_set_time+0x548>
  406a80:	ldr	w0, [sp, #108]
  406a84:	cmp	w0, #0x0
  406a88:	b.ne	406ab4 <method_set_time+0x1dc>  // b.any
  406a8c:	ldr	x0, [sp, #144]
  406a90:	cmp	x0, #0x0
  406a94:	b.gt	406ab4 <method_set_time+0x1dc>
  406a98:	adrp	x0, 408000 <run+0x534>
  406a9c:	add	x2, x0, #0xc08
  406aa0:	adrp	x0, 408000 <run+0x534>
  406aa4:	add	x1, x0, #0x898
  406aa8:	ldr	x0, [sp, #72]
  406aac:	bl	402950 <sd_bus_error_set@plt>
  406ab0:	b	406e20 <method_set_time+0x548>
  406ab4:	ldr	w0, [sp, #108]
  406ab8:	cmp	w0, #0x0
  406abc:	b.eq	406adc <method_set_time+0x204>  // b.none
  406ac0:	ldr	x0, [sp, #144]
  406ac4:	cmp	x0, #0x0
  406ac8:	b.ne	406adc <method_set_time+0x204>  // b.any
  406acc:	mov	x1, #0x0                   	// #0
  406ad0:	ldr	x0, [sp, #88]
  406ad4:	bl	402690 <sd_bus_reply_method_return@plt>
  406ad8:	b	406e20 <method_set_time+0x548>
  406adc:	ldr	w0, [sp, #108]
  406ae0:	cmp	w0, #0x0
  406ae4:	b.eq	406b6c <method_set_time+0x294>  // b.none
  406ae8:	mov	w0, #0x0                   	// #0
  406aec:	bl	402ac0 <now@plt>
  406af0:	str	x0, [sp, #176]
  406af4:	ldr	x0, [sp, #144]
  406af8:	mov	x1, x0
  406afc:	ldr	x0, [sp, #176]
  406b00:	add	x0, x0, x1
  406b04:	str	x0, [sp, #184]
  406b08:	ldr	x0, [sp, #144]
  406b0c:	cmp	x0, #0x0
  406b10:	b.le	406b24 <method_set_time+0x24c>
  406b14:	ldr	x1, [sp, #184]
  406b18:	ldr	x0, [sp, #176]
  406b1c:	cmp	x1, x0
  406b20:	b.cc	406b40 <method_set_time+0x268>  // b.lo, b.ul, b.last
  406b24:	ldr	x0, [sp, #144]
  406b28:	cmp	x0, #0x0
  406b2c:	b.ge	406b5c <method_set_time+0x284>  // b.tcont
  406b30:	ldr	x1, [sp, #184]
  406b34:	ldr	x0, [sp, #176]
  406b38:	cmp	x1, x0
  406b3c:	b.ls	406b5c <method_set_time+0x284>  // b.plast
  406b40:	adrp	x0, 408000 <run+0x534>
  406b44:	add	x2, x0, #0xc20
  406b48:	adrp	x0, 408000 <run+0x534>
  406b4c:	add	x1, x0, #0x898
  406b50:	ldr	x0, [sp, #72]
  406b54:	bl	402950 <sd_bus_error_set@plt>
  406b58:	b	406e20 <method_set_time+0x548>
  406b5c:	add	x0, sp, #0xc0
  406b60:	ldr	x1, [sp, #184]
  406b64:	bl	4027b0 <timespec_store@plt>
  406b68:	b	406b7c <method_set_time+0x2a4>
  406b6c:	ldr	x0, [sp, #144]
  406b70:	mov	x1, x0
  406b74:	add	x0, sp, #0xc0
  406b78:	bl	4027b0 <timespec_store@plt>
  406b7c:	ldr	w0, [sp, #112]
  406b80:	cmp	w0, #0x0
  406b84:	cset	w0, ne  // ne = any
  406b88:	and	w1, w0, #0xff
  406b8c:	ldr	x0, [sp, #168]
  406b90:	add	x0, x0, #0x10
  406b94:	ldr	x7, [sp, #72]
  406b98:	mov	x6, x0
  406b9c:	mov	w5, #0xffffffff            	// #-1
  406ba0:	mov	w4, w1
  406ba4:	mov	x3, #0x0                   	// #0
  406ba8:	adrp	x0, 408000 <run+0x534>
  406bac:	add	x2, x0, #0xc38
  406bb0:	mov	w1, #0x19                  	// #25
  406bb4:	ldr	x0, [sp, #88]
  406bb8:	bl	402c60 <bus_verify_polkit_async@plt>
  406bbc:	str	w0, [sp, #116]
  406bc0:	ldr	w0, [sp, #116]
  406bc4:	cmp	w0, #0x0
  406bc8:	b.ge	406bd4 <method_set_time+0x2fc>  // b.tcont
  406bcc:	ldr	w0, [sp, #116]
  406bd0:	b	406e20 <method_set_time+0x548>
  406bd4:	ldr	w0, [sp, #116]
  406bd8:	cmp	w0, #0x0
  406bdc:	b.ne	406be8 <method_set_time+0x310>  // b.any
  406be0:	mov	w0, #0x1                   	// #1
  406be4:	b	406e20 <method_set_time+0x548>
  406be8:	add	x0, sp, #0x98
  406bec:	mov	x1, x0
  406bf0:	ldr	x0, [sp, #88]
  406bf4:	bl	402bc0 <sd_bus_message_get_monotonic_usec@plt>
  406bf8:	str	w0, [sp, #116]
  406bfc:	ldr	w0, [sp, #116]
  406c00:	cmp	w0, #0x0
  406c04:	b.ge	406c1c <method_set_time+0x344>  // b.tcont
  406c08:	ldr	w0, [sp, #116]
  406c0c:	cmn	w0, #0x3d
  406c10:	b.eq	406c1c <method_set_time+0x344>  // b.none
  406c14:	ldr	w0, [sp, #116]
  406c18:	b	406e20 <method_set_time+0x548>
  406c1c:	add	x0, sp, #0xc0
  406c20:	bl	402b80 <timespec_load@plt>
  406c24:	mov	x19, x0
  406c28:	mov	w0, #0x1                   	// #1
  406c2c:	bl	402ac0 <now@plt>
  406c30:	mov	x1, x0
  406c34:	ldr	x0, [sp, #152]
  406c38:	sub	x0, x1, x0
  406c3c:	add	x1, x19, x0
  406c40:	add	x0, sp, #0xc0
  406c44:	bl	4027b0 <timespec_store@plt>
  406c48:	add	x0, sp, #0xc0
  406c4c:	mov	x1, x0
  406c50:	mov	w0, #0x0                   	// #0
  406c54:	bl	402b10 <clock_settime@plt>
  406c58:	cmp	w0, #0x0
  406c5c:	b.ge	406cf8 <method_set_time+0x420>  // b.tcont
  406c60:	mov	w0, #0x3                   	// #3
  406c64:	str	w0, [sp, #132]
  406c68:	bl	402940 <__errno_location@plt>
  406c6c:	ldr	w0, [x0]
  406c70:	str	w0, [sp, #136]
  406c74:	str	wzr, [sp, #140]
  406c78:	ldr	w0, [sp, #140]
  406c7c:	bl	402c80 <log_get_max_level_realm@plt>
  406c80:	mov	w1, w0
  406c84:	ldr	w0, [sp, #132]
  406c88:	and	w0, w0, #0x7
  406c8c:	cmp	w1, w0
  406c90:	b.lt	406cd4 <method_set_time+0x3fc>  // b.tstop
  406c94:	ldr	w0, [sp, #140]
  406c98:	lsl	w1, w0, #10
  406c9c:	ldr	w0, [sp, #132]
  406ca0:	orr	w6, w1, w0
  406ca4:	adrp	x0, 408000 <run+0x534>
  406ca8:	add	x1, x0, #0x1f3
  406cac:	adrp	x0, 408000 <run+0x534>
  406cb0:	add	x5, x0, #0xc60
  406cb4:	adrp	x0, 409000 <_fini+0xf04>
  406cb8:	add	x4, x0, #0x7d0
  406cbc:	mov	w3, #0x378                 	// #888
  406cc0:	mov	x2, x1
  406cc4:	ldr	w1, [sp, #136]
  406cc8:	mov	w0, w6
  406ccc:	bl	402a80 <log_internal_realm@plt>
  406cd0:	b	406cdc <method_set_time+0x404>
  406cd4:	ldr	w0, [sp, #136]
  406cd8:	cmp	w0, #0x0
  406cdc:	bl	402940 <__errno_location@plt>
  406ce0:	ldr	w1, [x0]
  406ce4:	adrp	x0, 408000 <run+0x534>
  406ce8:	add	x2, x0, #0xc60
  406cec:	ldr	x0, [sp, #72]
  406cf0:	bl	402740 <sd_bus_error_set_errnof@plt>
  406cf4:	b	406e20 <method_set_time+0x548>
  406cf8:	ldr	x0, [sp, #168]
  406cfc:	ldrb	w0, [x0, #8]
  406d00:	cmp	w0, #0x0
  406d04:	b.eq	406d18 <method_set_time+0x440>  // b.none
  406d08:	add	x1, sp, #0xd0
  406d0c:	add	x0, sp, #0xc0
  406d10:	bl	402820 <localtime_r@plt>
  406d14:	b	406d24 <method_set_time+0x44c>
  406d18:	add	x1, sp, #0xd0
  406d1c:	add	x0, sp, #0xc0
  406d20:	bl	4029a0 <gmtime_r@plt>
  406d24:	add	x0, sp, #0xd0
  406d28:	bl	4027c0 <clock_set_hwclock@plt>
  406d2c:	str	w0, [sp, #116]
  406d30:	ldr	w0, [sp, #116]
  406d34:	cmp	w0, #0x0
  406d38:	b.ge	406db4 <method_set_time+0x4dc>  // b.tcont
  406d3c:	mov	w0, #0x7                   	// #7
  406d40:	str	w0, [sp, #120]
  406d44:	ldr	w0, [sp, #116]
  406d48:	str	w0, [sp, #124]
  406d4c:	str	wzr, [sp, #128]
  406d50:	ldr	w0, [sp, #128]
  406d54:	bl	402c80 <log_get_max_level_realm@plt>
  406d58:	mov	w1, w0
  406d5c:	ldr	w0, [sp, #120]
  406d60:	and	w0, w0, #0x7
  406d64:	cmp	w1, w0
  406d68:	b.lt	406dac <method_set_time+0x4d4>  // b.tstop
  406d6c:	ldr	w0, [sp, #128]
  406d70:	lsl	w1, w0, #10
  406d74:	ldr	w0, [sp, #120]
  406d78:	orr	w6, w1, w0
  406d7c:	adrp	x0, 408000 <run+0x534>
  406d80:	add	x1, x0, #0x1f3
  406d84:	adrp	x0, 408000 <run+0x534>
  406d88:	add	x5, x0, #0xc80
  406d8c:	adrp	x0, 409000 <_fini+0xf04>
  406d90:	add	x4, x0, #0x7d0
  406d94:	mov	w3, #0x384                 	// #900
  406d98:	mov	x2, x1
  406d9c:	ldr	w1, [sp, #124]
  406da0:	mov	w0, w6
  406da4:	bl	402a80 <log_internal_realm@plt>
  406da8:	b	406db4 <method_set_time+0x4dc>
  406dac:	ldr	w0, [sp, #124]
  406db0:	cmp	w0, #0x0
  406db4:	adrp	x0, 408000 <run+0x534>
  406db8:	add	x19, x0, #0x1f3
  406dbc:	add	x0, sp, #0xc0
  406dc0:	bl	402b80 <timespec_load@plt>
  406dc4:	mov	x20, x0
  406dc8:	add	x0, sp, #0xc0
  406dcc:	bl	4028b0 <ctime@plt>
  406dd0:	str	xzr, [sp, #16]
  406dd4:	str	x0, [sp, #8]
  406dd8:	adrp	x0, 408000 <run+0x534>
  406ddc:	add	x0, x0, #0xcf0
  406de0:	str	x0, [sp]
  406de4:	mov	x7, x20
  406de8:	adrp	x0, 408000 <run+0x534>
  406dec:	add	x6, x0, #0xcb0
  406df0:	adrp	x0, 408000 <run+0x534>
  406df4:	add	x5, x0, #0xcc0
  406df8:	adrp	x0, 409000 <_fini+0xf04>
  406dfc:	add	x4, x0, #0x7d0
  406e00:	mov	w3, #0x386                 	// #902
  406e04:	mov	x2, x19
  406e08:	mov	w1, #0x0                   	// #0
  406e0c:	mov	w0, #0x6                   	// #6
  406e10:	bl	402a50 <log_struct_internal@plt>
  406e14:	mov	x1, #0x0                   	// #0
  406e18:	ldr	x0, [sp, #88]
  406e1c:	bl	402690 <sd_bus_reply_method_return@plt>
  406e20:	mov	w1, w0
  406e24:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  406e28:	add	x0, x0, #0xa68
  406e2c:	ldr	x2, [sp, #264]
  406e30:	ldr	x0, [x0]
  406e34:	eor	x0, x2, x0
  406e38:	cmp	x0, #0x0
  406e3c:	b.eq	406e44 <method_set_time+0x56c>  // b.none
  406e40:	bl	4029c0 <__stack_chk_fail@plt>
  406e44:	mov	w0, w1
  406e48:	ldp	x19, x20, [sp, #48]
  406e4c:	ldp	x29, x30, [sp, #32]
  406e50:	add	sp, sp, #0x110
  406e54:	ret

0000000000406e58 <method_set_ntp>:
  406e58:	sub	sp, sp, #0xf0
  406e5c:	stp	x29, x30, [sp, #32]
  406e60:	add	x29, sp, #0x20
  406e64:	stp	x19, x20, [sp, #48]
  406e68:	str	x21, [sp, #64]
  406e6c:	str	x0, [sp, #104]
  406e70:	str	x1, [sp, #96]
  406e74:	str	x2, [sp, #88]
  406e78:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  406e7c:	add	x0, x0, #0xa68
  406e80:	ldr	x1, [x0]
  406e84:	str	x1, [sp, #232]
  406e88:	mov	x1, #0x0                   	// #0
  406e8c:	str	xzr, [sp, #176]
  406e90:	ldr	x0, [sp, #104]
  406e94:	bl	402800 <sd_bus_message_get_bus@plt>
  406e98:	str	x0, [sp, #200]
  406e9c:	ldr	x0, [sp, #96]
  406ea0:	str	x0, [sp, #208]
  406ea4:	str	xzr, [sp, #192]
  406ea8:	ldr	x0, [sp, #104]
  406eac:	cmp	x0, #0x0
  406eb0:	cset	w0, eq  // eq = none
  406eb4:	and	w0, w0, #0xff
  406eb8:	and	x0, x0, #0xff
  406ebc:	cmp	x0, #0x0
  406ec0:	b.eq	406eec <method_set_ntp+0x94>  // b.none
  406ec4:	adrp	x0, 408000 <run+0x534>
  406ec8:	add	x1, x0, #0x1f3
  406ecc:	adrp	x0, 409000 <_fini+0xf04>
  406ed0:	add	x4, x0, #0x7e0
  406ed4:	mov	w3, #0x396                 	// #918
  406ed8:	mov	x2, x1
  406edc:	adrp	x0, 408000 <run+0x534>
  406ee0:	add	x1, x0, #0x5d8
  406ee4:	mov	w0, #0x0                   	// #0
  406ee8:	bl	402840 <log_assert_failed_realm@plt>
  406eec:	ldr	x0, [sp, #200]
  406ef0:	cmp	x0, #0x0
  406ef4:	cset	w0, eq  // eq = none
  406ef8:	and	w0, w0, #0xff
  406efc:	and	x0, x0, #0xff
  406f00:	cmp	x0, #0x0
  406f04:	b.eq	406f30 <method_set_ntp+0xd8>  // b.none
  406f08:	adrp	x0, 408000 <run+0x534>
  406f0c:	add	x1, x0, #0x1f3
  406f10:	adrp	x0, 409000 <_fini+0xf04>
  406f14:	add	x4, x0, #0x7e0
  406f18:	mov	w3, #0x397                 	// #919
  406f1c:	mov	x2, x1
  406f20:	adrp	x0, 408000 <run+0x534>
  406f24:	add	x1, x0, #0x590
  406f28:	mov	w0, #0x0                   	// #0
  406f2c:	bl	402840 <log_assert_failed_realm@plt>
  406f30:	ldr	x0, [sp, #208]
  406f34:	cmp	x0, #0x0
  406f38:	cset	w0, eq  // eq = none
  406f3c:	and	w0, w0, #0xff
  406f40:	and	x0, x0, #0xff
  406f44:	cmp	x0, #0x0
  406f48:	b.eq	406f74 <method_set_ntp+0x11c>  // b.none
  406f4c:	adrp	x0, 408000 <run+0x534>
  406f50:	add	x1, x0, #0x1f3
  406f54:	adrp	x0, 409000 <_fini+0xf04>
  406f58:	add	x4, x0, #0x7e0
  406f5c:	mov	w3, #0x398                 	// #920
  406f60:	mov	x2, x1
  406f64:	adrp	x0, 408000 <run+0x534>
  406f68:	add	x1, x0, #0x218
  406f6c:	mov	w0, #0x0                   	// #0
  406f70:	bl	402840 <log_assert_failed_realm@plt>
  406f74:	add	x1, sp, #0x80
  406f78:	add	x0, sp, #0x7c
  406f7c:	mov	x3, x1
  406f80:	mov	x2, x0
  406f84:	adrp	x0, 408000 <run+0x534>
  406f88:	add	x1, x0, #0xd18
  406f8c:	ldr	x0, [sp, #104]
  406f90:	bl	402850 <sd_bus_message_read@plt>
  406f94:	str	w0, [sp, #132]
  406f98:	ldr	w0, [sp, #132]
  406f9c:	cmp	w0, #0x0
  406fa0:	b.ge	406fac <method_set_ntp+0x154>  // b.tcont
  406fa4:	ldr	w19, [sp, #132]
  406fa8:	b	407508 <method_set_ntp+0x6b0>
  406fac:	ldr	x2, [sp, #104]
  406fb0:	ldr	x1, [sp, #200]
  406fb4:	ldr	x0, [sp, #208]
  406fb8:	bl	404948 <context_update_ntp_status>
  406fbc:	str	w0, [sp, #132]
  406fc0:	ldr	w0, [sp, #132]
  406fc4:	cmp	w0, #0x0
  406fc8:	b.ge	406fd4 <method_set_ntp+0x17c>  // b.tcont
  406fcc:	ldr	w19, [sp, #132]
  406fd0:	b	407508 <method_set_ntp+0x6b0>
  406fd4:	ldr	x0, [sp, #208]
  406fd8:	bl	404198 <context_ntp_service_exists>
  406fdc:	cmp	w0, #0x0
  406fe0:	b.gt	407004 <method_set_ntp+0x1ac>
  406fe4:	adrp	x0, 408000 <run+0x534>
  406fe8:	add	x2, x0, #0xd20
  406fec:	adrp	x0, 408000 <run+0x534>
  406ff0:	add	x1, x0, #0xd38
  406ff4:	ldr	x0, [sp, #88]
  406ff8:	bl	402950 <sd_bus_error_set@plt>
  406ffc:	mov	w19, w0
  407000:	b	407508 <method_set_ntp+0x6b0>
  407004:	ldr	w0, [sp, #128]
  407008:	cmp	w0, #0x0
  40700c:	cset	w0, ne  // ne = any
  407010:	and	w1, w0, #0xff
  407014:	ldr	x0, [sp, #208]
  407018:	add	x0, x0, #0x10
  40701c:	ldr	x7, [sp, #88]
  407020:	mov	x6, x0
  407024:	mov	w5, #0xffffffff            	// #-1
  407028:	mov	w4, w1
  40702c:	mov	x3, #0x0                   	// #0
  407030:	adrp	x0, 408000 <run+0x534>
  407034:	add	x2, x0, #0xd60
  407038:	mov	w1, #0x19                  	// #25
  40703c:	ldr	x0, [sp, #104]
  407040:	bl	402c60 <bus_verify_polkit_async@plt>
  407044:	str	w0, [sp, #132]
  407048:	ldr	w0, [sp, #132]
  40704c:	cmp	w0, #0x0
  407050:	b.ge	40705c <method_set_ntp+0x204>  // b.tcont
  407054:	ldr	w19, [sp, #132]
  407058:	b	407508 <method_set_ntp+0x6b0>
  40705c:	ldr	w0, [sp, #132]
  407060:	cmp	w0, #0x0
  407064:	b.ne	407070 <method_set_ntp+0x218>  // b.any
  407068:	mov	w19, #0x1                   	// #1
  40706c:	b	407508 <method_set_ntp+0x6b0>
  407070:	ldr	x0, [sp, #208]
  407074:	ldr	x0, [x0, #40]
  407078:	str	x0, [sp, #184]
  40707c:	b	4070a4 <method_set_ntp+0x24c>
  407080:	ldr	x0, [sp, #184]
  407084:	ldr	x0, [x0, #32]
  407088:	bl	402f58 <mfree>
  40708c:	mov	x1, x0
  407090:	ldr	x0, [sp, #184]
  407094:	str	x1, [x0, #32]
  407098:	ldr	x0, [sp, #184]
  40709c:	ldr	x0, [x0, #40]
  4070a0:	str	x0, [sp, #184]
  4070a4:	ldr	x0, [sp, #184]
  4070a8:	cmp	x0, #0x0
  4070ac:	b.ne	407080 <method_set_ntp+0x228>  // b.any
  4070b0:	ldr	x0, [sp, #208]
  4070b4:	ldr	x0, [x0, #32]
  4070b8:	cmp	x0, #0x0
  4070bc:	b.ne	407118 <method_set_ntp+0x2c0>  // b.any
  4070c0:	add	x1, sp, #0xb0
  4070c4:	ldr	x0, [sp, #208]
  4070c8:	str	x0, [sp]
  4070cc:	mov	x7, #0x0                   	// #0
  4070d0:	adrp	x0, 404000 <context_parse_ntp_services_from_disk+0x47c>
  4070d4:	add	x6, x0, #0xbd0
  4070d8:	adrp	x0, 408000 <run+0x534>
  4070dc:	add	x5, x0, #0xd88
  4070e0:	adrp	x0, 408000 <run+0x534>
  4070e4:	add	x4, x0, #0x688
  4070e8:	adrp	x0, 408000 <run+0x534>
  4070ec:	add	x3, x0, #0x6b0
  4070f0:	adrp	x0, 408000 <run+0x534>
  4070f4:	add	x2, x0, #0x598
  4070f8:	ldr	x0, [sp, #200]
  4070fc:	bl	402910 <sd_bus_match_signal_async@plt>
  407100:	str	w0, [sp, #132]
  407104:	ldr	w0, [sp, #132]
  407108:	cmp	w0, #0x0
  40710c:	b.ge	407118 <method_set_ntp+0x2c0>  // b.tcont
  407110:	ldr	w19, [sp, #132]
  407114:	b	407508 <method_set_ntp+0x6b0>
  407118:	ldr	w0, [sp, #124]
  40711c:	cmp	w0, #0x0
  407120:	b.eq	40726c <method_set_ntp+0x414>  // b.none
  407124:	ldr	x0, [sp, #208]
  407128:	ldr	x0, [x0, #40]
  40712c:	str	x0, [sp, #184]
  407130:	b	40725c <method_set_ntp+0x404>
  407134:	ldr	x0, [sp, #192]
  407138:	cmp	x0, #0x0
  40713c:	cset	w0, eq  // eq = none
  407140:	strb	w0, [sp, #123]
  407144:	ldr	x0, [sp, #184]
  407148:	ldr	x2, [x0, #8]
  40714c:	adrp	x0, 408000 <run+0x534>
  407150:	add	x1, x0, #0x430
  407154:	mov	x0, x2
  407158:	bl	402ad0 <strcmp@plt>
  40715c:	cmp	w0, #0x0
  407160:	b.ne	40724c <method_set_ntp+0x3f4>  // b.any
  407164:	ldrb	w3, [sp, #123]
  407168:	ldr	x2, [sp, #88]
  40716c:	ldr	x1, [sp, #200]
  407170:	ldr	x0, [sp, #184]
  407174:	bl	4051b0 <unit_enable_or_disable>
  407178:	str	w0, [sp, #132]
  40717c:	ldr	w0, [sp, #132]
  407180:	cmp	w0, #0x0
  407184:	b.ge	40718c <method_set_ntp+0x334>  // b.tcont
  407188:	strb	wzr, [sp, #123]
  40718c:	ldrb	w3, [sp, #123]
  407190:	ldr	x2, [sp, #88]
  407194:	ldr	x1, [sp, #200]
  407198:	ldr	x0, [sp, #184]
  40719c:	bl	404e54 <unit_start_or_stop>
  4071a0:	str	w0, [sp, #132]
  4071a4:	ldr	w0, [sp, #132]
  4071a8:	cmp	w0, #0x0
  4071ac:	b.ge	407234 <method_set_ntp+0x3dc>  // b.tcont
  4071b0:	ldr	x0, [sp, #184]
  4071b4:	str	x0, [sp, #216]
  4071b8:	adrp	x0, 408000 <run+0x534>
  4071bc:	add	x20, x0, #0x1f3
  4071c0:	ldr	x0, [sp, #216]
  4071c4:	ldr	x21, [x0]
  4071c8:	ldrb	w0, [sp, #123]
  4071cc:	cmp	w0, #0x0
  4071d0:	b.eq	4071e0 <method_set_ntp+0x388>  // b.none
  4071d4:	adrp	x0, 408000 <run+0x534>
  4071d8:	add	x19, x0, #0xd98
  4071dc:	b	4071e8 <method_set_ntp+0x390>
  4071e0:	adrp	x0, 408000 <run+0x534>
  4071e4:	add	x19, x0, #0xda0
  4071e8:	ldrb	w0, [sp, #123]
  4071ec:	bl	4030d4 <enable_disable>
  4071f0:	str	x0, [sp, #24]
  4071f4:	str	x19, [sp, #16]
  4071f8:	adrp	x0, 408000 <run+0x534>
  4071fc:	add	x0, x0, #0xda8
  407200:	str	x0, [sp, #8]
  407204:	str	xzr, [sp]
  407208:	mov	x7, #0x0                   	// #0
  40720c:	mov	x6, x21
  407210:	adrp	x0, 408000 <run+0x534>
  407214:	add	x5, x0, #0x240
  407218:	adrp	x0, 409000 <_fini+0xf04>
  40721c:	add	x4, x0, #0x7f0
  407220:	mov	w3, #0x3d2                 	// #978
  407224:	mov	x2, x20
  407228:	ldr	w1, [sp, #132]
  40722c:	mov	w0, #0x4                   	// #4
  407230:	bl	402930 <log_object_internal@plt>
  407234:	ldrb	w0, [sp, #123]
  407238:	cmp	w0, #0x0
  40723c:	b.eq	407250 <method_set_ntp+0x3f8>  // b.none
  407240:	ldr	x0, [sp, #184]
  407244:	str	x0, [sp, #192]
  407248:	b	407250 <method_set_ntp+0x3f8>
  40724c:	nop
  407250:	ldr	x0, [sp, #184]
  407254:	ldr	x0, [x0, #40]
  407258:	str	x0, [sp, #184]
  40725c:	ldr	x0, [sp, #184]
  407260:	cmp	x0, #0x0
  407264:	b.ne	407134 <method_set_ntp+0x2dc>  // b.any
  407268:	b	407314 <method_set_ntp+0x4bc>
  40726c:	ldr	x0, [sp, #208]
  407270:	ldr	x0, [x0, #40]
  407274:	str	x0, [sp, #184]
  407278:	b	407308 <method_set_ntp+0x4b0>
  40727c:	ldr	x0, [sp, #184]
  407280:	ldr	x2, [x0, #8]
  407284:	adrp	x0, 408000 <run+0x534>
  407288:	add	x1, x0, #0x430
  40728c:	mov	x0, x2
  407290:	bl	402ad0 <strcmp@plt>
  407294:	cmp	w0, #0x0
  407298:	b.ne	4072f8 <method_set_ntp+0x4a0>  // b.any
  40729c:	mov	w3, #0x0                   	// #0
  4072a0:	ldr	x2, [sp, #88]
  4072a4:	ldr	x1, [sp, #200]
  4072a8:	ldr	x0, [sp, #184]
  4072ac:	bl	4051b0 <unit_enable_or_disable>
  4072b0:	str	w0, [sp, #136]
  4072b4:	ldr	w0, [sp, #136]
  4072b8:	cmp	w0, #0x0
  4072bc:	b.ge	4072c8 <method_set_ntp+0x470>  // b.tcont
  4072c0:	ldr	w0, [sp, #136]
  4072c4:	str	w0, [sp, #132]
  4072c8:	mov	w3, #0x0                   	// #0
  4072cc:	ldr	x2, [sp, #88]
  4072d0:	ldr	x1, [sp, #200]
  4072d4:	ldr	x0, [sp, #184]
  4072d8:	bl	404e54 <unit_start_or_stop>
  4072dc:	str	w0, [sp, #136]
  4072e0:	ldr	w0, [sp, #136]
  4072e4:	cmp	w0, #0x0
  4072e8:	b.ge	4072fc <method_set_ntp+0x4a4>  // b.tcont
  4072ec:	ldr	w0, [sp, #136]
  4072f0:	str	w0, [sp, #132]
  4072f4:	b	4072fc <method_set_ntp+0x4a4>
  4072f8:	nop
  4072fc:	ldr	x0, [sp, #184]
  407300:	ldr	x0, [x0, #40]
  407304:	str	x0, [sp, #184]
  407308:	ldr	x0, [sp, #184]
  40730c:	cmp	x0, #0x0
  407310:	b.ne	40727c <method_set_ntp+0x424>  // b.any
  407314:	ldr	w0, [sp, #132]
  407318:	cmp	w0, #0x0
  40731c:	b.ge	407328 <method_set_ntp+0x4d0>  // b.tcont
  407320:	ldr	w19, [sp, #132]
  407324:	b	407508 <method_set_ntp+0x6b0>
  407328:	ldr	w0, [sp, #124]
  40732c:	cmp	w0, #0x0
  407330:	b.eq	4073d0 <method_set_ntp+0x578>  // b.none
  407334:	ldr	x0, [sp, #192]
  407338:	cmp	x0, #0x0
  40733c:	b.ne	4073d0 <method_set_ntp+0x578>  // b.any
  407340:	mov	w0, #0x3                   	// #3
  407344:	str	w0, [sp, #140]
  407348:	mov	w0, #0x2                   	// #2
  40734c:	movk	w0, #0x4000, lsl #16
  407350:	str	w0, [sp, #144]
  407354:	str	wzr, [sp, #148]
  407358:	ldr	w0, [sp, #148]
  40735c:	bl	402c80 <log_get_max_level_realm@plt>
  407360:	mov	w1, w0
  407364:	ldr	w0, [sp, #140]
  407368:	and	w0, w0, #0x7
  40736c:	cmp	w1, w0
  407370:	b.lt	4073b8 <method_set_ntp+0x560>  // b.tstop
  407374:	ldr	w0, [sp, #148]
  407378:	lsl	w1, w0, #10
  40737c:	ldr	w0, [sp, #140]
  407380:	orr	w6, w1, w0
  407384:	adrp	x0, 408000 <run+0x534>
  407388:	add	x1, x0, #0x1f3
  40738c:	adrp	x0, 408000 <run+0x534>
  407390:	add	x5, x0, #0xdd0
  407394:	adrp	x0, 409000 <_fini+0xf04>
  407398:	add	x4, x0, #0x7f0
  40739c:	mov	w3, #0x3e9                 	// #1001
  4073a0:	mov	x2, x1
  4073a4:	ldr	w1, [sp, #144]
  4073a8:	mov	w0, w6
  4073ac:	bl	402a80 <log_internal_realm@plt>
  4073b0:	mov	w19, w0
  4073b4:	b	407508 <method_set_ntp+0x6b0>
  4073b8:	ldr	w0, [sp, #144]
  4073bc:	cmp	w0, #0x0
  4073c0:	cneg	w0, w0, lt  // lt = tstop
  4073c4:	and	w0, w0, #0xff
  4073c8:	neg	w19, w0
  4073cc:	b	407508 <method_set_ntp+0x6b0>
  4073d0:	ldr	x0, [sp, #176]
  4073d4:	cmp	x0, #0x0
  4073d8:	b.eq	4073f4 <method_set_ntp+0x59c>  // b.none
  4073dc:	ldr	x0, [sp, #176]
  4073e0:	str	x0, [sp, #224]
  4073e4:	str	xzr, [sp, #176]
  4073e8:	ldr	x1, [sp, #224]
  4073ec:	ldr	x0, [sp, #208]
  4073f0:	str	x1, [x0, #32]
  4073f4:	ldr	x0, [sp, #192]
  4073f8:	cmp	x0, #0x0
  4073fc:	b.eq	407484 <method_set_ntp+0x62c>  // b.none
  407400:	mov	w0, #0x6                   	// #6
  407404:	str	w0, [sp, #164]
  407408:	str	wzr, [sp, #168]
  40740c:	str	wzr, [sp, #172]
  407410:	ldr	w0, [sp, #172]
  407414:	bl	402c80 <log_get_max_level_realm@plt>
  407418:	mov	w1, w0
  40741c:	ldr	w0, [sp, #164]
  407420:	and	w0, w0, #0x7
  407424:	cmp	w1, w0
  407428:	b.lt	407478 <method_set_ntp+0x620>  // b.tstop
  40742c:	ldr	w0, [sp, #172]
  407430:	lsl	w1, w0, #10
  407434:	ldr	w0, [sp, #164]
  407438:	orr	w7, w1, w0
  40743c:	adrp	x0, 408000 <run+0x534>
  407440:	add	x1, x0, #0x1f3
  407444:	ldr	x0, [sp, #192]
  407448:	ldr	x0, [x0]
  40744c:	mov	x6, x0
  407450:	adrp	x0, 408000 <run+0x534>
  407454:	add	x5, x0, #0xdf0
  407458:	adrp	x0, 409000 <_fini+0xf04>
  40745c:	add	x4, x0, #0x7f0
  407460:	mov	w3, #0x3ef                 	// #1007
  407464:	mov	x2, x1
  407468:	ldr	w1, [sp, #168]
  40746c:	mov	w0, w7
  407470:	bl	402a80 <log_internal_realm@plt>
  407474:	b	4074f8 <method_set_ntp+0x6a0>
  407478:	ldr	w0, [sp, #168]
  40747c:	cmp	w0, #0x0
  407480:	b	4074f8 <method_set_ntp+0x6a0>
  407484:	mov	w0, #0x6                   	// #6
  407488:	str	w0, [sp, #152]
  40748c:	str	wzr, [sp, #156]
  407490:	str	wzr, [sp, #160]
  407494:	ldr	w0, [sp, #160]
  407498:	bl	402c80 <log_get_max_level_realm@plt>
  40749c:	mov	w1, w0
  4074a0:	ldr	w0, [sp, #152]
  4074a4:	and	w0, w0, #0x7
  4074a8:	cmp	w1, w0
  4074ac:	b.lt	4074f0 <method_set_ntp+0x698>  // b.tstop
  4074b0:	ldr	w0, [sp, #160]
  4074b4:	lsl	w1, w0, #10
  4074b8:	ldr	w0, [sp, #152]
  4074bc:	orr	w6, w1, w0
  4074c0:	adrp	x0, 408000 <run+0x534>
  4074c4:	add	x1, x0, #0x1f3
  4074c8:	adrp	x0, 408000 <run+0x534>
  4074cc:	add	x5, x0, #0xe10
  4074d0:	adrp	x0, 409000 <_fini+0xf04>
  4074d4:	add	x4, x0, #0x7f0
  4074d8:	mov	w3, #0x3f1                 	// #1009
  4074dc:	mov	x2, x1
  4074e0:	ldr	w1, [sp, #156]
  4074e4:	mov	w0, w6
  4074e8:	bl	402a80 <log_internal_realm@plt>
  4074ec:	b	4074f8 <method_set_ntp+0x6a0>
  4074f0:	ldr	w0, [sp, #156]
  4074f4:	cmp	w0, #0x0
  4074f8:	mov	x1, #0x0                   	// #0
  4074fc:	ldr	x0, [sp, #104]
  407500:	bl	402690 <sd_bus_reply_method_return@plt>
  407504:	mov	w19, w0
  407508:	add	x0, sp, #0xb0
  40750c:	bl	402ec0 <sd_bus_slot_unrefp>
  407510:	mov	w1, w19
  407514:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  407518:	add	x0, x0, #0xa68
  40751c:	ldr	x2, [sp, #232]
  407520:	ldr	x0, [x0]
  407524:	eor	x0, x2, x0
  407528:	cmp	x0, #0x0
  40752c:	b.eq	407534 <method_set_ntp+0x6dc>  // b.none
  407530:	bl	4029c0 <__stack_chk_fail@plt>
  407534:	mov	w0, w1
  407538:	ldp	x19, x20, [sp, #48]
  40753c:	ldr	x21, [sp, #64]
  407540:	ldp	x29, x30, [sp, #32]
  407544:	add	sp, sp, #0xf0
  407548:	ret

000000000040754c <method_list_timezones>:
  40754c:	stp	x29, x30, [sp, #-96]!
  407550:	mov	x29, sp
  407554:	str	x19, [sp, #16]
  407558:	str	x0, [sp, #56]
  40755c:	str	x1, [sp, #48]
  407560:	str	x2, [sp, #40]
  407564:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  407568:	add	x0, x0, #0xa68
  40756c:	ldr	x1, [x0]
  407570:	str	x1, [sp, #88]
  407574:	mov	x1, #0x0                   	// #0
  407578:	str	xzr, [sp, #72]
  40757c:	str	xzr, [sp, #80]
  407580:	ldr	x0, [sp, #56]
  407584:	cmp	x0, #0x0
  407588:	cset	w0, eq  // eq = none
  40758c:	and	w0, w0, #0xff
  407590:	and	x0, x0, #0xff
  407594:	cmp	x0, #0x0
  407598:	b.eq	4075c4 <method_list_timezones+0x78>  // b.none
  40759c:	adrp	x0, 408000 <run+0x534>
  4075a0:	add	x1, x0, #0x1f3
  4075a4:	adrp	x0, 409000 <_fini+0xf04>
  4075a8:	add	x4, x0, #0x800
  4075ac:	mov	w3, #0x3fb                 	// #1019
  4075b0:	mov	x2, x1
  4075b4:	adrp	x0, 408000 <run+0x534>
  4075b8:	add	x1, x0, #0x5d8
  4075bc:	mov	w0, #0x0                   	// #0
  4075c0:	bl	402840 <log_assert_failed_realm@plt>
  4075c4:	add	x0, sp, #0x50
  4075c8:	bl	402810 <get_timezones@plt>
  4075cc:	str	w0, [sp, #68]
  4075d0:	ldr	w0, [sp, #68]
  4075d4:	cmp	w0, #0x0
  4075d8:	b.ge	4075f8 <method_list_timezones+0xac>  // b.tcont
  4075dc:	adrp	x0, 408000 <run+0x534>
  4075e0:	add	x2, x0, #0xe28
  4075e4:	ldr	w1, [sp, #68]
  4075e8:	ldr	x0, [sp, #40]
  4075ec:	bl	402740 <sd_bus_error_set_errnof@plt>
  4075f0:	mov	w19, w0
  4075f4:	b	40765c <method_list_timezones+0x110>
  4075f8:	add	x0, sp, #0x48
  4075fc:	mov	x1, x0
  407600:	ldr	x0, [sp, #56]
  407604:	bl	402780 <sd_bus_message_new_method_return@plt>
  407608:	str	w0, [sp, #68]
  40760c:	ldr	w0, [sp, #68]
  407610:	cmp	w0, #0x0
  407614:	b.ge	407620 <method_list_timezones+0xd4>  // b.tcont
  407618:	ldr	w19, [sp, #68]
  40761c:	b	40765c <method_list_timezones+0x110>
  407620:	ldr	x0, [sp, #72]
  407624:	ldr	x1, [sp, #80]
  407628:	bl	402b90 <sd_bus_message_append_strv@plt>
  40762c:	str	w0, [sp, #68]
  407630:	ldr	w0, [sp, #68]
  407634:	cmp	w0, #0x0
  407638:	b.ge	407644 <method_list_timezones+0xf8>  // b.tcont
  40763c:	ldr	w19, [sp, #68]
  407640:	b	40765c <method_list_timezones+0x110>
  407644:	ldr	x0, [sp, #72]
  407648:	mov	x2, #0x0                   	// #0
  40764c:	mov	x1, x0
  407650:	mov	x0, #0x0                   	// #0
  407654:	bl	4029d0 <sd_bus_send@plt>
  407658:	mov	w19, w0
  40765c:	add	x0, sp, #0x50
  407660:	bl	4032c8 <strv_freep>
  407664:	add	x0, sp, #0x48
  407668:	bl	402ef4 <sd_bus_message_unrefp>
  40766c:	mov	w1, w19
  407670:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  407674:	add	x0, x0, #0xa68
  407678:	ldr	x2, [sp, #88]
  40767c:	ldr	x0, [x0]
  407680:	eor	x0, x2, x0
  407684:	cmp	x0, #0x0
  407688:	b.eq	407690 <method_list_timezones+0x144>  // b.none
  40768c:	bl	4029c0 <__stack_chk_fail@plt>
  407690:	mov	w0, w1
  407694:	ldr	x19, [sp, #16]
  407698:	ldp	x29, x30, [sp], #96
  40769c:	ret

00000000004076a0 <connect_bus>:
  4076a0:	stp	x29, x30, [sp, #-144]!
  4076a4:	mov	x29, sp
  4076a8:	str	x19, [sp, #16]
  4076ac:	str	x0, [sp, #56]
  4076b0:	str	x1, [sp, #48]
  4076b4:	str	x2, [sp, #40]
  4076b8:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  4076bc:	add	x0, x0, #0xa68
  4076c0:	ldr	x1, [x0]
  4076c4:	str	x1, [sp, #136]
  4076c8:	mov	x1, #0x0                   	// #0
  4076cc:	str	xzr, [sp, #120]
  4076d0:	ldr	x0, [sp, #56]
  4076d4:	cmp	x0, #0x0
  4076d8:	cset	w0, eq  // eq = none
  4076dc:	and	w0, w0, #0xff
  4076e0:	and	x0, x0, #0xff
  4076e4:	cmp	x0, #0x0
  4076e8:	b.eq	407714 <connect_bus+0x74>  // b.none
  4076ec:	adrp	x0, 408000 <run+0x534>
  4076f0:	add	x1, x0, #0x1f3
  4076f4:	adrp	x0, 409000 <_fini+0xf04>
  4076f8:	add	x4, x0, #0x818
  4076fc:	mov	w3, #0x421                 	// #1057
  407700:	mov	x2, x1
  407704:	adrp	x0, 408000 <run+0x534>
  407708:	add	x1, x0, #0x218
  40770c:	mov	w0, #0x0                   	// #0
  407710:	bl	402840 <log_assert_failed_realm@plt>
  407714:	ldr	x0, [sp, #48]
  407718:	cmp	x0, #0x0
  40771c:	cset	w0, eq  // eq = none
  407720:	and	w0, w0, #0xff
  407724:	and	x0, x0, #0xff
  407728:	cmp	x0, #0x0
  40772c:	b.eq	407758 <connect_bus+0xb8>  // b.none
  407730:	adrp	x0, 408000 <run+0x534>
  407734:	add	x1, x0, #0x1f3
  407738:	adrp	x0, 409000 <_fini+0xf04>
  40773c:	add	x4, x0, #0x818
  407740:	mov	w3, #0x422                 	// #1058
  407744:	mov	x2, x1
  407748:	adrp	x0, 408000 <run+0x534>
  40774c:	add	x1, x0, #0xed8
  407750:	mov	w0, #0x0                   	// #0
  407754:	bl	402840 <log_assert_failed_realm@plt>
  407758:	ldr	x0, [sp, #40]
  40775c:	cmp	x0, #0x0
  407760:	cset	w0, eq  // eq = none
  407764:	and	w0, w0, #0xff
  407768:	and	x0, x0, #0xff
  40776c:	cmp	x0, #0x0
  407770:	b.eq	40779c <connect_bus+0xfc>  // b.none
  407774:	adrp	x0, 408000 <run+0x534>
  407778:	add	x1, x0, #0x1f3
  40777c:	adrp	x0, 409000 <_fini+0xf04>
  407780:	add	x4, x0, #0x818
  407784:	mov	w3, #0x423                 	// #1059
  407788:	mov	x2, x1
  40778c:	adrp	x0, 408000 <run+0x534>
  407790:	add	x1, x0, #0xee0
  407794:	mov	w0, #0x0                   	// #0
  407798:	bl	402840 <log_assert_failed_realm@plt>
  40779c:	add	x0, sp, #0x78
  4077a0:	bl	402a90 <sd_bus_default_system@plt>
  4077a4:	str	w0, [sp, #68]
  4077a8:	ldr	w0, [sp, #68]
  4077ac:	cmp	w0, #0x0
  4077b0:	b.ge	407840 <connect_bus+0x1a0>  // b.tcont
  4077b4:	mov	w0, #0x3                   	// #3
  4077b8:	str	w0, [sp, #108]
  4077bc:	ldr	w0, [sp, #68]
  4077c0:	str	w0, [sp, #112]
  4077c4:	str	wzr, [sp, #116]
  4077c8:	ldr	w0, [sp, #116]
  4077cc:	bl	402c80 <log_get_max_level_realm@plt>
  4077d0:	mov	w1, w0
  4077d4:	ldr	w0, [sp, #108]
  4077d8:	and	w0, w0, #0x7
  4077dc:	cmp	w1, w0
  4077e0:	b.lt	407828 <connect_bus+0x188>  // b.tstop
  4077e4:	ldr	w0, [sp, #116]
  4077e8:	lsl	w1, w0, #10
  4077ec:	ldr	w0, [sp, #108]
  4077f0:	orr	w6, w1, w0
  4077f4:	adrp	x0, 408000 <run+0x534>
  4077f8:	add	x1, x0, #0x1f3
  4077fc:	adrp	x0, 408000 <run+0x534>
  407800:	add	x5, x0, #0xee8
  407804:	adrp	x0, 409000 <_fini+0xf04>
  407808:	add	x4, x0, #0x828
  40780c:	mov	w3, #0x427                 	// #1063
  407810:	mov	x2, x1
  407814:	ldr	w1, [sp, #112]
  407818:	mov	w0, w6
  40781c:	bl	402a80 <log_internal_realm@plt>
  407820:	mov	w19, w0
  407824:	b	407a90 <connect_bus+0x3f0>
  407828:	ldr	w0, [sp, #112]
  40782c:	cmp	w0, #0x0
  407830:	cneg	w0, w0, lt  // lt = tstop
  407834:	and	w0, w0, #0xff
  407838:	neg	w19, w0
  40783c:	b	407a90 <connect_bus+0x3f0>
  407840:	ldr	x6, [sp, #120]
  407844:	ldr	x5, [sp, #56]
  407848:	adrp	x0, 409000 <_fini+0xf04>
  40784c:	add	x4, x0, #0xe0
  407850:	adrp	x0, 408000 <run+0x534>
  407854:	add	x3, x0, #0x610
  407858:	adrp	x0, 408000 <run+0x534>
  40785c:	add	x2, x0, #0x630
  407860:	mov	x1, #0x0                   	// #0
  407864:	mov	x0, x6
  407868:	bl	402990 <sd_bus_add_object_vtable@plt>
  40786c:	str	w0, [sp, #68]
  407870:	ldr	w0, [sp, #68]
  407874:	cmp	w0, #0x0
  407878:	b.ge	407908 <connect_bus+0x268>  // b.tcont
  40787c:	mov	w0, #0x3                   	// #3
  407880:	str	w0, [sp, #96]
  407884:	ldr	w0, [sp, #68]
  407888:	str	w0, [sp, #100]
  40788c:	str	wzr, [sp, #104]
  407890:	ldr	w0, [sp, #104]
  407894:	bl	402c80 <log_get_max_level_realm@plt>
  407898:	mov	w1, w0
  40789c:	ldr	w0, [sp, #96]
  4078a0:	and	w0, w0, #0x7
  4078a4:	cmp	w1, w0
  4078a8:	b.lt	4078f0 <connect_bus+0x250>  // b.tstop
  4078ac:	ldr	w0, [sp, #104]
  4078b0:	lsl	w1, w0, #10
  4078b4:	ldr	w0, [sp, #96]
  4078b8:	orr	w6, w1, w0
  4078bc:	adrp	x0, 408000 <run+0x534>
  4078c0:	add	x1, x0, #0x1f3
  4078c4:	adrp	x0, 408000 <run+0x534>
  4078c8:	add	x5, x0, #0xf10
  4078cc:	adrp	x0, 409000 <_fini+0xf04>
  4078d0:	add	x4, x0, #0x828
  4078d4:	mov	w3, #0x42b                 	// #1067
  4078d8:	mov	x2, x1
  4078dc:	ldr	w1, [sp, #100]
  4078e0:	mov	w0, w6
  4078e4:	bl	402a80 <log_internal_realm@plt>
  4078e8:	mov	w19, w0
  4078ec:	b	407a90 <connect_bus+0x3f0>
  4078f0:	ldr	w0, [sp, #100]
  4078f4:	cmp	w0, #0x0
  4078f8:	cneg	w0, w0, lt  // lt = tstop
  4078fc:	and	w0, w0, #0xff
  407900:	neg	w19, w0
  407904:	b	407a90 <connect_bus+0x3f0>
  407908:	ldr	x6, [sp, #120]
  40790c:	mov	x5, #0x0                   	// #0
  407910:	mov	x4, #0x0                   	// #0
  407914:	mov	x3, #0x0                   	// #0
  407918:	adrp	x0, 408000 <run+0x534>
  40791c:	add	x2, x0, #0x610
  407920:	mov	x1, #0x0                   	// #0
  407924:	mov	x0, x6
  407928:	bl	402710 <sd_bus_request_name_async@plt>
  40792c:	str	w0, [sp, #68]
  407930:	ldr	w0, [sp, #68]
  407934:	cmp	w0, #0x0
  407938:	b.ge	4079c8 <connect_bus+0x328>  // b.tcont
  40793c:	mov	w0, #0x3                   	// #3
  407940:	str	w0, [sp, #84]
  407944:	ldr	w0, [sp, #68]
  407948:	str	w0, [sp, #88]
  40794c:	str	wzr, [sp, #92]
  407950:	ldr	w0, [sp, #92]
  407954:	bl	402c80 <log_get_max_level_realm@plt>
  407958:	mov	w1, w0
  40795c:	ldr	w0, [sp, #84]
  407960:	and	w0, w0, #0x7
  407964:	cmp	w1, w0
  407968:	b.lt	4079b0 <connect_bus+0x310>  // b.tstop
  40796c:	ldr	w0, [sp, #92]
  407970:	lsl	w1, w0, #10
  407974:	ldr	w0, [sp, #84]
  407978:	orr	w6, w1, w0
  40797c:	adrp	x0, 408000 <run+0x534>
  407980:	add	x1, x0, #0x1f3
  407984:	adrp	x0, 408000 <run+0x534>
  407988:	add	x5, x0, #0xf30
  40798c:	adrp	x0, 409000 <_fini+0xf04>
  407990:	add	x4, x0, #0x828
  407994:	mov	w3, #0x42f                 	// #1071
  407998:	mov	x2, x1
  40799c:	ldr	w1, [sp, #88]
  4079a0:	mov	w0, w6
  4079a4:	bl	402a80 <log_internal_realm@plt>
  4079a8:	mov	w19, w0
  4079ac:	b	407a90 <connect_bus+0x3f0>
  4079b0:	ldr	w0, [sp, #88]
  4079b4:	cmp	w0, #0x0
  4079b8:	cneg	w0, w0, lt  // lt = tstop
  4079bc:	and	w0, w0, #0xff
  4079c0:	neg	w19, w0
  4079c4:	b	407a90 <connect_bus+0x3f0>
  4079c8:	ldr	x0, [sp, #120]
  4079cc:	mov	w2, #0x0                   	// #0
  4079d0:	ldr	x1, [sp, #48]
  4079d4:	bl	402890 <sd_bus_attach_event@plt>
  4079d8:	str	w0, [sp, #68]
  4079dc:	ldr	w0, [sp, #68]
  4079e0:	cmp	w0, #0x0
  4079e4:	b.ge	407a74 <connect_bus+0x3d4>  // b.tcont
  4079e8:	mov	w0, #0x3                   	// #3
  4079ec:	str	w0, [sp, #72]
  4079f0:	ldr	w0, [sp, #68]
  4079f4:	str	w0, [sp, #76]
  4079f8:	str	wzr, [sp, #80]
  4079fc:	ldr	w0, [sp, #80]
  407a00:	bl	402c80 <log_get_max_level_realm@plt>
  407a04:	mov	w1, w0
  407a08:	ldr	w0, [sp, #72]
  407a0c:	and	w0, w0, #0x7
  407a10:	cmp	w1, w0
  407a14:	b.lt	407a5c <connect_bus+0x3bc>  // b.tstop
  407a18:	ldr	w0, [sp, #80]
  407a1c:	lsl	w1, w0, #10
  407a20:	ldr	w0, [sp, #72]
  407a24:	orr	w6, w1, w0
  407a28:	adrp	x0, 408000 <run+0x534>
  407a2c:	add	x1, x0, #0x1f3
  407a30:	adrp	x0, 408000 <run+0x534>
  407a34:	add	x5, x0, #0xf50
  407a38:	adrp	x0, 409000 <_fini+0xf04>
  407a3c:	add	x4, x0, #0x828
  407a40:	mov	w3, #0x433                 	// #1075
  407a44:	mov	x2, x1
  407a48:	ldr	w1, [sp, #76]
  407a4c:	mov	w0, w6
  407a50:	bl	402a80 <log_internal_realm@plt>
  407a54:	mov	w19, w0
  407a58:	b	407a90 <connect_bus+0x3f0>
  407a5c:	ldr	w0, [sp, #76]
  407a60:	cmp	w0, #0x0
  407a64:	cneg	w0, w0, lt  // lt = tstop
  407a68:	and	w0, w0, #0xff
  407a6c:	neg	w19, w0
  407a70:	b	407a90 <connect_bus+0x3f0>
  407a74:	ldr	x0, [sp, #120]
  407a78:	str	x0, [sp, #128]
  407a7c:	str	xzr, [sp, #120]
  407a80:	ldr	x1, [sp, #128]
  407a84:	ldr	x0, [sp, #40]
  407a88:	str	x1, [x0]
  407a8c:	mov	w19, #0x0                   	// #0
  407a90:	add	x0, sp, #0x78
  407a94:	bl	402e8c <sd_bus_flush_close_unrefp>
  407a98:	mov	w1, w19
  407a9c:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  407aa0:	add	x0, x0, #0xa68
  407aa4:	ldr	x2, [sp, #136]
  407aa8:	ldr	x0, [x0]
  407aac:	eor	x0, x2, x0
  407ab0:	cmp	x0, #0x0
  407ab4:	b.eq	407abc <connect_bus+0x41c>  // b.none
  407ab8:	bl	4029c0 <__stack_chk_fail@plt>
  407abc:	mov	w0, w1
  407ac0:	ldr	x19, [sp, #16]
  407ac4:	ldp	x29, x30, [sp], #144
  407ac8:	ret

0000000000407acc <run>:
  407acc:	stp	x29, x30, [sp, #-208]!
  407ad0:	mov	x29, sp
  407ad4:	str	x19, [sp, #16]
  407ad8:	str	w0, [sp, #44]
  407adc:	str	x1, [sp, #32]
  407ae0:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  407ae4:	add	x0, x0, #0xa68
  407ae8:	ldr	x1, [x0]
  407aec:	str	x1, [sp, #200]
  407af0:	mov	x1, #0x0                   	// #0
  407af4:	stp	xzr, xzr, [sp, #152]
  407af8:	stp	xzr, xzr, [sp, #168]
  407afc:	stp	xzr, xzr, [sp, #184]
  407b00:	str	xzr, [sp, #136]
  407b04:	str	xzr, [sp, #144]
  407b08:	bl	4027f0 <log_setup_service@plt>
  407b0c:	mov	w0, #0x12                  	// #18
  407b10:	bl	402880 <umask@plt>
  407b14:	ldr	w0, [sp, #44]
  407b18:	cmp	w0, #0x1
  407b1c:	b.eq	407bb0 <run+0xe4>  // b.none
  407b20:	mov	w0, #0x3                   	// #3
  407b24:	str	w0, [sp, #124]
  407b28:	mov	w0, #0x16                  	// #22
  407b2c:	movk	w0, #0x4000, lsl #16
  407b30:	str	w0, [sp, #128]
  407b34:	str	wzr, [sp, #132]
  407b38:	ldr	w0, [sp, #132]
  407b3c:	bl	402c80 <log_get_max_level_realm@plt>
  407b40:	mov	w1, w0
  407b44:	ldr	w0, [sp, #124]
  407b48:	and	w0, w0, #0x7
  407b4c:	cmp	w1, w0
  407b50:	b.lt	407b98 <run+0xcc>  // b.tstop
  407b54:	ldr	w0, [sp, #132]
  407b58:	lsl	w1, w0, #10
  407b5c:	ldr	w0, [sp, #124]
  407b60:	orr	w6, w1, w0
  407b64:	adrp	x0, 408000 <run+0x534>
  407b68:	add	x1, x0, #0x1f3
  407b6c:	adrp	x0, 408000 <run+0x534>
  407b70:	add	x5, x0, #0xf78
  407b74:	adrp	x0, 409000 <_fini+0xf04>
  407b78:	add	x4, x0, #0x838
  407b7c:	mov	w3, #0x445                 	// #1093
  407b80:	mov	x2, x1
  407b84:	ldr	w1, [sp, #128]
  407b88:	mov	w0, w6
  407b8c:	bl	402a80 <log_internal_realm@plt>
  407b90:	mov	w19, w0
  407b94:	b	407fdc <run+0x510>
  407b98:	ldr	w0, [sp, #128]
  407b9c:	cmp	w0, #0x0
  407ba0:	cneg	w0, w0, lt  // lt = tstop
  407ba4:	and	w0, w0, #0xff
  407ba8:	neg	w19, w0
  407bac:	b	407fdc <run+0x510>
  407bb0:	mov	w4, #0xffffffff            	// #-1
  407bb4:	mov	w3, #0x2                   	// #2
  407bb8:	mov	w2, #0xf                   	// #15
  407bbc:	mov	x1, #0x0                   	// #0
  407bc0:	mov	w0, #0x0                   	// #0
  407bc4:	bl	4028e0 <sigprocmask_many@plt>
  407bc8:	lsr	w0, w0, #31
  407bcc:	and	w0, w0, #0xff
  407bd0:	and	x0, x0, #0xff
  407bd4:	cmp	x0, #0x0
  407bd8:	b.eq	407c04 <run+0x138>  // b.none
  407bdc:	adrp	x0, 408000 <run+0x534>
  407be0:	add	x1, x0, #0x1f3
  407be4:	adrp	x0, 409000 <_fini+0xf04>
  407be8:	add	x4, x0, #0x840
  407bec:	mov	w3, #0x447                 	// #1095
  407bf0:	mov	x2, x1
  407bf4:	adrp	x0, 408000 <run+0x534>
  407bf8:	add	x1, x0, #0xfa0
  407bfc:	mov	w0, #0x0                   	// #0
  407c00:	bl	402840 <log_assert_failed_realm@plt>
  407c04:	add	x0, sp, #0x88
  407c08:	bl	402760 <sd_event_default@plt>
  407c0c:	str	w0, [sp, #60]
  407c10:	ldr	w0, [sp, #60]
  407c14:	cmp	w0, #0x0
  407c18:	b.ge	407ca8 <run+0x1dc>  // b.tcont
  407c1c:	mov	w0, #0x3                   	// #3
  407c20:	str	w0, [sp, #112]
  407c24:	ldr	w0, [sp, #60]
  407c28:	str	w0, [sp, #116]
  407c2c:	str	wzr, [sp, #120]
  407c30:	ldr	w0, [sp, #120]
  407c34:	bl	402c80 <log_get_max_level_realm@plt>
  407c38:	mov	w1, w0
  407c3c:	ldr	w0, [sp, #112]
  407c40:	and	w0, w0, #0x7
  407c44:	cmp	w1, w0
  407c48:	b.lt	407c90 <run+0x1c4>  // b.tstop
  407c4c:	ldr	w0, [sp, #120]
  407c50:	lsl	w1, w0, #10
  407c54:	ldr	w0, [sp, #112]
  407c58:	orr	w6, w1, w0
  407c5c:	adrp	x0, 408000 <run+0x534>
  407c60:	add	x1, x0, #0x1f3
  407c64:	adrp	x0, 408000 <run+0x534>
  407c68:	add	x5, x0, #0xfe0
  407c6c:	adrp	x0, 409000 <_fini+0xf04>
  407c70:	add	x4, x0, #0x838
  407c74:	mov	w3, #0x44b                 	// #1099
  407c78:	mov	x2, x1
  407c7c:	ldr	w1, [sp, #116]
  407c80:	mov	w0, w6
  407c84:	bl	402a80 <log_internal_realm@plt>
  407c88:	mov	w19, w0
  407c8c:	b	407fdc <run+0x510>
  407c90:	ldr	w0, [sp, #116]
  407c94:	cmp	w0, #0x0
  407c98:	cneg	w0, w0, lt  // lt = tstop
  407c9c:	and	w0, w0, #0xff
  407ca0:	neg	w19, w0
  407ca4:	b	407fdc <run+0x510>
  407ca8:	ldr	x0, [sp, #136]
  407cac:	mov	w1, #0x1                   	// #1
  407cb0:	bl	4026e0 <sd_event_set_watchdog@plt>
  407cb4:	ldr	x0, [sp, #136]
  407cb8:	mov	x4, #0x0                   	// #0
  407cbc:	mov	x3, #0x0                   	// #0
  407cc0:	mov	w2, #0x2                   	// #2
  407cc4:	mov	x1, #0x0                   	// #0
  407cc8:	bl	402bf0 <sd_event_add_signal@plt>
  407ccc:	str	w0, [sp, #60]
  407cd0:	ldr	w0, [sp, #60]
  407cd4:	cmp	w0, #0x0
  407cd8:	b.ge	407d68 <run+0x29c>  // b.tcont
  407cdc:	mov	w0, #0x3                   	// #3
  407ce0:	str	w0, [sp, #100]
  407ce4:	ldr	w0, [sp, #60]
  407ce8:	str	w0, [sp, #104]
  407cec:	str	wzr, [sp, #108]
  407cf0:	ldr	w0, [sp, #108]
  407cf4:	bl	402c80 <log_get_max_level_realm@plt>
  407cf8:	mov	w1, w0
  407cfc:	ldr	w0, [sp, #100]
  407d00:	and	w0, w0, #0x7
  407d04:	cmp	w1, w0
  407d08:	b.lt	407d50 <run+0x284>  // b.tstop
  407d0c:	ldr	w0, [sp, #108]
  407d10:	lsl	w1, w0, #10
  407d14:	ldr	w0, [sp, #100]
  407d18:	orr	w6, w1, w0
  407d1c:	adrp	x0, 408000 <run+0x534>
  407d20:	add	x1, x0, #0x1f3
  407d24:	adrp	x0, 409000 <_fini+0xf04>
  407d28:	add	x5, x0, #0x8
  407d2c:	adrp	x0, 409000 <_fini+0xf04>
  407d30:	add	x4, x0, #0x838
  407d34:	mov	w3, #0x451                 	// #1105
  407d38:	mov	x2, x1
  407d3c:	ldr	w1, [sp, #104]
  407d40:	mov	w0, w6
  407d44:	bl	402a80 <log_internal_realm@plt>
  407d48:	mov	w19, w0
  407d4c:	b	407fdc <run+0x510>
  407d50:	ldr	w0, [sp, #104]
  407d54:	cmp	w0, #0x0
  407d58:	cneg	w0, w0, lt  // lt = tstop
  407d5c:	and	w0, w0, #0xff
  407d60:	neg	w19, w0
  407d64:	b	407fdc <run+0x510>
  407d68:	ldr	x0, [sp, #136]
  407d6c:	mov	x4, #0x0                   	// #0
  407d70:	mov	x3, #0x0                   	// #0
  407d74:	mov	w2, #0xf                   	// #15
  407d78:	mov	x1, #0x0                   	// #0
  407d7c:	bl	402bf0 <sd_event_add_signal@plt>
  407d80:	str	w0, [sp, #60]
  407d84:	ldr	w0, [sp, #60]
  407d88:	cmp	w0, #0x0
  407d8c:	b.ge	407e1c <run+0x350>  // b.tcont
  407d90:	mov	w0, #0x3                   	// #3
  407d94:	str	w0, [sp, #88]
  407d98:	ldr	w0, [sp, #60]
  407d9c:	str	w0, [sp, #92]
  407da0:	str	wzr, [sp, #96]
  407da4:	ldr	w0, [sp, #96]
  407da8:	bl	402c80 <log_get_max_level_realm@plt>
  407dac:	mov	w1, w0
  407db0:	ldr	w0, [sp, #88]
  407db4:	and	w0, w0, #0x7
  407db8:	cmp	w1, w0
  407dbc:	b.lt	407e04 <run+0x338>  // b.tstop
  407dc0:	ldr	w0, [sp, #96]
  407dc4:	lsl	w1, w0, #10
  407dc8:	ldr	w0, [sp, #88]
  407dcc:	orr	w6, w1, w0
  407dd0:	adrp	x0, 408000 <run+0x534>
  407dd4:	add	x1, x0, #0x1f3
  407dd8:	adrp	x0, 409000 <_fini+0xf04>
  407ddc:	add	x5, x0, #0x30
  407de0:	adrp	x0, 409000 <_fini+0xf04>
  407de4:	add	x4, x0, #0x838
  407de8:	mov	w3, #0x455                 	// #1109
  407dec:	mov	x2, x1
  407df0:	ldr	w1, [sp, #92]
  407df4:	mov	w0, w6
  407df8:	bl	402a80 <log_internal_realm@plt>
  407dfc:	mov	w19, w0
  407e00:	b	407fdc <run+0x510>
  407e04:	ldr	w0, [sp, #92]
  407e08:	cmp	w0, #0x0
  407e0c:	cneg	w0, w0, lt  // lt = tstop
  407e10:	and	w0, w0, #0xff
  407e14:	neg	w19, w0
  407e18:	b	407fdc <run+0x510>
  407e1c:	ldr	x1, [sp, #136]
  407e20:	add	x2, sp, #0x90
  407e24:	add	x0, sp, #0x98
  407e28:	bl	4076a0 <connect_bus>
  407e2c:	str	w0, [sp, #60]
  407e30:	ldr	w0, [sp, #60]
  407e34:	cmp	w0, #0x0
  407e38:	b.ge	407e44 <run+0x378>  // b.tcont
  407e3c:	ldr	w19, [sp, #60]
  407e40:	b	407fdc <run+0x510>
  407e44:	ldr	x0, [sp, #144]
  407e48:	mov	w1, #0x1                   	// #1
  407e4c:	bl	402900 <sd_bus_negotiate_timestamp@plt>
  407e50:	add	x0, sp, #0x98
  407e54:	bl	40424c <context_read_data>
  407e58:	str	w0, [sp, #60]
  407e5c:	ldr	w0, [sp, #60]
  407e60:	cmp	w0, #0x0
  407e64:	b.ge	407ef4 <run+0x428>  // b.tcont
  407e68:	mov	w0, #0x3                   	// #3
  407e6c:	str	w0, [sp, #76]
  407e70:	ldr	w0, [sp, #60]
  407e74:	str	w0, [sp, #80]
  407e78:	str	wzr, [sp, #84]
  407e7c:	ldr	w0, [sp, #84]
  407e80:	bl	402c80 <log_get_max_level_realm@plt>
  407e84:	mov	w1, w0
  407e88:	ldr	w0, [sp, #76]
  407e8c:	and	w0, w0, #0x7
  407e90:	cmp	w1, w0
  407e94:	b.lt	407edc <run+0x410>  // b.tstop
  407e98:	ldr	w0, [sp, #84]
  407e9c:	lsl	w1, w0, #10
  407ea0:	ldr	w0, [sp, #76]
  407ea4:	orr	w6, w1, w0
  407ea8:	adrp	x0, 408000 <run+0x534>
  407eac:	add	x1, x0, #0x1f3
  407eb0:	adrp	x0, 409000 <_fini+0xf04>
  407eb4:	add	x5, x0, #0x58
  407eb8:	adrp	x0, 409000 <_fini+0xf04>
  407ebc:	add	x4, x0, #0x838
  407ec0:	mov	w3, #0x45f                 	// #1119
  407ec4:	mov	x2, x1
  407ec8:	ldr	w1, [sp, #80]
  407ecc:	mov	w0, w6
  407ed0:	bl	402a80 <log_internal_realm@plt>
  407ed4:	mov	w19, w0
  407ed8:	b	407fdc <run+0x510>
  407edc:	ldr	w0, [sp, #80]
  407ee0:	cmp	w0, #0x0
  407ee4:	cneg	w0, w0, lt  // lt = tstop
  407ee8:	and	w0, w0, #0xff
  407eec:	neg	w19, w0
  407ef0:	b	407fdc <run+0x510>
  407ef4:	add	x0, sp, #0x98
  407ef8:	bl	404024 <context_parse_ntp_services>
  407efc:	str	w0, [sp, #60]
  407f00:	ldr	w0, [sp, #60]
  407f04:	cmp	w0, #0x0
  407f08:	b.ge	407f14 <run+0x448>  // b.tcont
  407f0c:	ldr	w19, [sp, #60]
  407f10:	b	407fdc <run+0x510>
  407f14:	ldr	x6, [sp, #136]
  407f18:	ldr	x1, [sp, #144]
  407f1c:	mov	x5, #0x0                   	// #0
  407f20:	mov	x4, #0x0                   	// #0
  407f24:	mov	x3, #0xc380                	// #50048
  407f28:	movk	x3, #0x1c9, lsl #16
  407f2c:	adrp	x0, 408000 <run+0x534>
  407f30:	add	x2, x0, #0x610
  407f34:	mov	x0, x6
  407f38:	bl	402770 <bus_event_loop_with_idle@plt>
  407f3c:	str	w0, [sp, #60]
  407f40:	ldr	w0, [sp, #60]
  407f44:	cmp	w0, #0x0
  407f48:	b.ge	407fd8 <run+0x50c>  // b.tcont
  407f4c:	mov	w0, #0x3                   	// #3
  407f50:	str	w0, [sp, #64]
  407f54:	ldr	w0, [sp, #60]
  407f58:	str	w0, [sp, #68]
  407f5c:	str	wzr, [sp, #72]
  407f60:	ldr	w0, [sp, #72]
  407f64:	bl	402c80 <log_get_max_level_realm@plt>
  407f68:	mov	w1, w0
  407f6c:	ldr	w0, [sp, #64]
  407f70:	and	w0, w0, #0x7
  407f74:	cmp	w1, w0
  407f78:	b.lt	407fc0 <run+0x4f4>  // b.tstop
  407f7c:	ldr	w0, [sp, #72]
  407f80:	lsl	w1, w0, #10
  407f84:	ldr	w0, [sp, #64]
  407f88:	orr	w6, w1, w0
  407f8c:	adrp	x0, 408000 <run+0x534>
  407f90:	add	x1, x0, #0x1f3
  407f94:	adrp	x0, 409000 <_fini+0xf04>
  407f98:	add	x5, x0, #0x80
  407f9c:	adrp	x0, 409000 <_fini+0xf04>
  407fa0:	add	x4, x0, #0x838
  407fa4:	mov	w3, #0x467                 	// #1127
  407fa8:	mov	x2, x1
  407fac:	ldr	w1, [sp, #68]
  407fb0:	mov	w0, w6
  407fb4:	bl	402a80 <log_internal_realm@plt>
  407fb8:	mov	w19, w0
  407fbc:	b	407fdc <run+0x510>
  407fc0:	ldr	w0, [sp, #68]
  407fc4:	cmp	w0, #0x0
  407fc8:	cneg	w0, w0, lt  // lt = tstop
  407fcc:	and	w0, w0, #0xff
  407fd0:	neg	w19, w0
  407fd4:	b	407fdc <run+0x510>
  407fd8:	mov	w19, #0x0                   	// #0
  407fdc:	add	x0, sp, #0x90
  407fe0:	bl	402e8c <sd_bus_flush_close_unrefp>
  407fe4:	add	x0, sp, #0x88
  407fe8:	bl	402e58 <sd_event_unrefp>
  407fec:	add	x0, sp, #0x98
  407ff0:	bl	403424 <context_clear>
  407ff4:	mov	w1, w19
  407ff8:	adrp	x0, 41a000 <__FRAME_END__+0xfed0>
  407ffc:	add	x0, x0, #0xa68
  408000:	ldr	x2, [sp, #200]
  408004:	ldr	x0, [x0]
  408008:	eor	x0, x2, x0
  40800c:	cmp	x0, #0x0
  408010:	b.eq	408018 <run+0x54c>  // b.none
  408014:	bl	4029c0 <__stack_chk_fail@plt>
  408018:	mov	w0, w1
  40801c:	ldr	x19, [sp, #16]
  408020:	ldp	x29, x30, [sp], #208
  408024:	ret

0000000000408028 <main>:
  408028:	stp	x29, x30, [sp, #-48]!
  40802c:	mov	x29, sp
  408030:	str	w0, [sp, #28]
  408034:	str	x1, [sp, #16]
  408038:	ldr	x1, [sp, #16]
  40803c:	ldr	w0, [sp, #28]
  408040:	bl	40306c <save_argc_argv>
  408044:	ldr	x1, [sp, #16]
  408048:	ldr	w0, [sp, #28]
  40804c:	bl	407acc <run>
  408050:	str	w0, [sp, #44]
  408054:	bl	4029f0 <ask_password_agent_close@plt>
  408058:	bl	402750 <polkit_agent_close@plt>
  40805c:	bl	402a00 <pager_close@plt>
  408060:	bl	402be0 <mac_selinux_finish@plt>
  408064:	bl	403240 <static_destruct>
  408068:	ldr	w0, [sp, #44]
  40806c:	lsr	w0, w0, #31
  408070:	ldp	x29, x30, [sp], #48
  408074:	ret

0000000000408078 <__libc_csu_init>:
  408078:	stp	x29, x30, [sp, #-64]!
  40807c:	mov	x29, sp
  408080:	stp	x19, x20, [sp, #16]
  408084:	adrp	x20, 41a000 <__FRAME_END__+0xfed0>
  408088:	add	x20, x20, #0xa60
  40808c:	stp	x21, x22, [sp, #32]
  408090:	adrp	x21, 41a000 <__FRAME_END__+0xfed0>
  408094:	add	x21, x21, #0xa58
  408098:	sub	x20, x20, x21
  40809c:	mov	w22, w0
  4080a0:	stp	x23, x24, [sp, #48]
  4080a4:	mov	x23, x1
  4080a8:	mov	x24, x2
  4080ac:	bl	4025f0 <_init>
  4080b0:	cmp	xzr, x20, asr #3
  4080b4:	b.eq	4080e0 <__libc_csu_init+0x68>  // b.none
  4080b8:	asr	x20, x20, #3
  4080bc:	mov	x19, #0x0                   	// #0
  4080c0:	ldr	x3, [x21, x19, lsl #3]
  4080c4:	mov	x2, x24
  4080c8:	add	x19, x19, #0x1
  4080cc:	mov	x1, x23
  4080d0:	mov	w0, w22
  4080d4:	blr	x3
  4080d8:	cmp	x20, x19
  4080dc:	b.ne	4080c0 <__libc_csu_init+0x48>  // b.any
  4080e0:	ldp	x19, x20, [sp, #16]
  4080e4:	ldp	x21, x22, [sp, #32]
  4080e8:	ldp	x23, x24, [sp, #48]
  4080ec:	ldp	x29, x30, [sp], #64
  4080f0:	ret
  4080f4:	nop

00000000004080f8 <__libc_csu_fini>:
  4080f8:	ret

Disassembly of section .fini:

00000000004080fc <_fini>:
  4080fc:	stp	x29, x30, [sp, #-16]!
  408100:	mov	x29, sp
  408104:	ldp	x29, x30, [sp], #16
  408108:	ret
