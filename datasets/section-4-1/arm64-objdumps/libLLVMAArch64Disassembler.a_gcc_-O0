In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMAArch64Disassembler.a_gcc_-O0:

AArch64Disassembler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	str	w1, [sp, #20]
      10:	ldr	x0, [sp, #24]
      14:	lsr	x0, x0, #12
      18:	and	w0, w0, #0x1
      1c:	str	w0, [sp, #60]
      20:	ldr	x0, [sp, #24]
      24:	and	w0, w0, #0x3f
      28:	str	w0, [sp, #56]
      2c:	ldr	w0, [sp, #20]
      30:	cmp	w0, #0x20
      34:	b.ne	4c <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj+0x4c>  // b.any
      38:	ldr	w0, [sp, #60]
      3c:	cmp	w0, #0x0
      40:	b.eq	4c <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj+0x4c>  // b.none
      44:	mov	w0, #0x0                   	// #0
      48:	b	d4 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj+0xd4>
      4c:	ldr	w0, [sp, #60]
      50:	lsl	w1, w0, #6
      54:	ldr	w0, [sp, #56]
      58:	mvn	w0, w0
      5c:	and	w0, w0, #0x3f
      60:	orr	w0, w1, w0
      64:	mov	w1, #0x2                   	// #2
      68:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
      6c:	mov	w1, w0
      70:	mov	w0, #0x1f                  	// #31
      74:	sub	w0, w0, w1
      78:	str	w0, [sp, #52]
      7c:	ldr	w0, [sp, #52]
      80:	cmp	w0, #0x0
      84:	b.ge	90 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj+0x90>  // b.tcont
      88:	mov	w0, #0x0                   	// #0
      8c:	b	d4 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj+0xd4>
      90:	ldr	w0, [sp, #52]
      94:	mov	w1, #0x1                   	// #1
      98:	lsl	w0, w1, w0
      9c:	str	w0, [sp, #48]
      a0:	ldr	w0, [sp, #48]
      a4:	sub	w0, w0, #0x1
      a8:	ldr	w1, [sp, #56]
      ac:	and	w0, w1, w0
      b0:	str	w0, [sp, #44]
      b4:	ldr	w0, [sp, #48]
      b8:	sub	w0, w0, #0x1
      bc:	ldr	w1, [sp, #44]
      c0:	cmp	w1, w0
      c4:	b.ne	d0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj+0xd0>  // b.any
      c8:	mov	w0, #0x0                   	// #0
      cc:	b	d4 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj+0xd4>
      d0:	mov	w0, #0x1                   	// #1
      d4:	ldp	x29, x30, [sp], #64
      d8:	ret

00000000000000dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>:
      dc:	stp	x29, x30, [sp, #-32]!
      e0:	mov	x29, sp
      e4:	str	x0, [sp, #24]
      e8:	str	w1, [sp, #20]
      ec:	ldr	w0, [sp, #20]
      f0:	cmp	w0, #0x3
      f4:	b.eq	114 <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_+0x38>  // b.none
      f8:	cmp	w0, #0x3
      fc:	b.gt	144 <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_+0x68>
     100:	cmp	w0, #0x0
     104:	b.eq	130 <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_+0x54>  // b.none
     108:	cmp	w0, #0x1
     10c:	b.eq	11c <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_+0x40>  // b.none
     110:	b	144 <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_+0x68>
     114:	mov	w0, #0x1                   	// #1
     118:	b	15c <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_+0x80>
     11c:	ldr	x0, [sp, #24]
     120:	ldr	w1, [sp, #20]
     124:	str	w1, [x0]
     128:	mov	w0, #0x1                   	// #1
     12c:	b	15c <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_+0x80>
     130:	ldr	x0, [sp, #24]
     134:	ldr	w1, [sp, #20]
     138:	str	w1, [x0]
     13c:	mov	w0, #0x0                   	// #0
     140:	b	15c <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_+0x80>
     144:	mov	w2, #0xeb                  	// #235
     148:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     14c:	add	x1, x0, #0x0
     150:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     154:	add	x0, x0, #0x0
     158:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     15c:	ldp	x29, x30, [sp], #32
     160:	ret

0000000000000164 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE>:
     164:	stp	x29, x30, [sp, #-32]!
     168:	mov	x29, sp
     16c:	str	w0, [sp, #28]
     170:	str	x1, [sp, #16]
     174:	ldr	w0, [sp, #28]
     178:	cmp	w0, #0x21
     17c:	b.hi	198 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x34>  // b.pmore
     180:	adrp	x1, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     184:	add	x1, x1, #0x0
     188:	ldr	w0, [x1, w0, uxtw #2]
     18c:	adr	x1, 198 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x34>
     190:	add	x0, x1, w0, sxtw #2
     194:	br	x0
     198:	mov	w2, #0x5058                	// #20568
     19c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     1a0:	add	x1, x0, #0x0
     1a4:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     1a8:	add	x0, x0, #0x0
     1ac:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     1b0:	mov	w1, #0x61                  	// #97
     1b4:	ldr	x0, [sp, #16]
     1b8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     1bc:	and	w0, w0, #0xff
     1c0:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     1c4:	mov	w1, #0x62                  	// #98
     1c8:	ldr	x0, [sp, #16]
     1cc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     1d0:	and	w0, w0, #0xff
     1d4:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     1d8:	mov	w1, #0x63                  	// #99
     1dc:	ldr	x0, [sp, #16]
     1e0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     1e4:	and	w0, w0, #0xff
     1e8:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     1ec:	mov	w1, #0x64                  	// #100
     1f0:	ldr	x0, [sp, #16]
     1f4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     1f8:	and	w0, w0, #0xff
     1fc:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     200:	mov	w1, #0x66                  	// #102
     204:	ldr	x0, [sp, #16]
     208:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     20c:	and	w0, w0, #0xff
     210:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     214:	mov	w1, #0x65                  	// #101
     218:	ldr	x0, [sp, #16]
     21c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     220:	and	w0, w0, #0xff
     224:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     228:	mov	w1, #0x2c                  	// #44
     22c:	ldr	x0, [sp, #16]
     230:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     234:	and	w0, w0, #0xff
     238:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     23c:	mov	w1, #0x2b                  	// #43
     240:	ldr	x0, [sp, #16]
     244:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     248:	and	w0, w0, #0xff
     24c:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     250:	mov	w1, #0x2f                  	// #47
     254:	ldr	x0, [sp, #16]
     258:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     25c:	and	w0, w0, #0xff
     260:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     264:	mov	w1, #0x30                  	// #48
     268:	ldr	x0, [sp, #16]
     26c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     270:	and	w0, w0, #0xff
     274:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     278:	mov	w1, #0x30                  	// #48
     27c:	ldr	x0, [sp, #16]
     280:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     284:	and	w0, w0, #0xff
     288:	cmp	w0, #0x0
     28c:	b.eq	2b0 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x14c>  // b.none
     290:	mov	w1, #0x23                  	// #35
     294:	ldr	x0, [sp, #16]
     298:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     29c:	and	w0, w0, #0xff
     2a0:	cmp	w0, #0x0
     2a4:	b.eq	2b0 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x14c>  // b.none
     2a8:	mov	w0, #0x1                   	// #1
     2ac:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     2b0:	mov	w0, #0x0                   	// #0
     2b4:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     2b8:	mov	w1, #0x21                  	// #33
     2bc:	ldr	x0, [sp, #16]
     2c0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     2c4:	and	w0, w0, #0xff
     2c8:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     2cc:	mov	w1, #0x30                  	// #48
     2d0:	ldr	x0, [sp, #16]
     2d4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     2d8:	and	w0, w0, #0xff
     2dc:	cmp	w0, #0x0
     2e0:	b.eq	304 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x1a0>  // b.none
     2e4:	mov	w1, #0x1f                  	// #31
     2e8:	ldr	x0, [sp, #16]
     2ec:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     2f0:	and	w0, w0, #0xff
     2f4:	cmp	w0, #0x0
     2f8:	b.eq	304 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x1a0>  // b.none
     2fc:	mov	w0, #0x1                   	// #1
     300:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     304:	mov	w0, #0x0                   	// #0
     308:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     30c:	mov	w1, #0x0                   	// #0
     310:	ldr	x0, [sp, #16]
     314:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     318:	and	w0, w0, #0xff
     31c:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     320:	mov	w1, #0x5d                  	// #93
     324:	ldr	x0, [sp, #16]
     328:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     32c:	and	w0, w0, #0xff
     330:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     334:	mov	w1, #0x30                  	// #48
     338:	ldr	x0, [sp, #16]
     33c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     340:	and	w0, w0, #0xff
     344:	cmp	w0, #0x0
     348:	b.eq	36c <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x208>  // b.none
     34c:	mov	w1, #0x40                  	// #64
     350:	ldr	x0, [sp, #16]
     354:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     358:	and	w0, w0, #0xff
     35c:	cmp	w0, #0x0
     360:	b.eq	36c <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x208>  // b.none
     364:	mov	w0, #0x1                   	// #1
     368:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     36c:	mov	w0, #0x0                   	// #0
     370:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     374:	mov	w1, #0x16                  	// #22
     378:	ldr	x0, [sp, #16]
     37c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     380:	and	w0, w0, #0xff
     384:	cmp	w0, #0x0
     388:	b.eq	3c4 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x260>  // b.none
     38c:	mov	w1, #0x30                  	// #48
     390:	ldr	x0, [sp, #16]
     394:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     398:	and	w0, w0, #0xff
     39c:	cmp	w0, #0x0
     3a0:	b.eq	3c4 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x260>  // b.none
     3a4:	mov	w1, #0x23                  	// #35
     3a8:	ldr	x0, [sp, #16]
     3ac:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     3b0:	and	w0, w0, #0xff
     3b4:	cmp	w0, #0x0
     3b8:	b.eq	3c4 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x260>  // b.none
     3bc:	mov	w0, #0x1                   	// #1
     3c0:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     3c4:	mov	w0, #0x0                   	// #0
     3c8:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     3cc:	mov	w1, #0x5e                  	// #94
     3d0:	ldr	x0, [sp, #16]
     3d4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     3d8:	and	w0, w0, #0xff
     3dc:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     3e0:	mov	w1, #0x1b                  	// #27
     3e4:	ldr	x0, [sp, #16]
     3e8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     3ec:	and	w0, w0, #0xff
     3f0:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     3f4:	mov	w1, #0x16                  	// #22
     3f8:	ldr	x0, [sp, #16]
     3fc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     400:	and	w0, w0, #0xff
     404:	cmp	w0, #0x0
     408:	b.eq	42c <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x2c8>  // b.none
     40c:	mov	w1, #0x30                  	// #48
     410:	ldr	x0, [sp, #16]
     414:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     418:	and	w0, w0, #0xff
     41c:	cmp	w0, #0x0
     420:	b.eq	42c <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x2c8>  // b.none
     424:	mov	w0, #0x1                   	// #1
     428:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     42c:	mov	w0, #0x0                   	// #0
     430:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     434:	mov	w1, #0x6d                  	// #109
     438:	ldr	x0, [sp, #16]
     43c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     440:	and	w0, w0, #0xff
     444:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     448:	mov	w1, #0x1e                  	// #30
     44c:	ldr	x0, [sp, #16]
     450:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     454:	and	w0, w0, #0xff
     458:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     45c:	mov	w1, #0x6e                  	// #110
     460:	ldr	x0, [sp, #16]
     464:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     468:	and	w0, w0, #0xff
     46c:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     470:	mov	w1, #0x3                   	// #3
     474:	ldr	x0, [sp, #16]
     478:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     47c:	and	w0, w0, #0xff
     480:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     484:	mov	w1, #0x5a                  	// #90
     488:	ldr	x0, [sp, #16]
     48c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     490:	and	w0, w0, #0xff
     494:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     498:	mov	w1, #0x33                  	// #51
     49c:	ldr	x0, [sp, #16]
     4a0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     4a4:	and	w0, w0, #0xff
     4a8:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     4ac:	mov	w1, #0x3f                  	// #63
     4b0:	ldr	x0, [sp, #16]
     4b4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     4b8:	and	w0, w0, #0xff
     4bc:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     4c0:	mov	w1, #0xb                   	// #11
     4c4:	ldr	x0, [sp, #16]
     4c8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     4cc:	and	w0, w0, #0xff
     4d0:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     4d4:	mov	w1, #0x3e                  	// #62
     4d8:	ldr	x0, [sp, #16]
     4dc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     4e0:	and	w0, w0, #0xff
     4e4:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     4e8:	mov	w1, #0x20                  	// #32
     4ec:	ldr	x0, [sp, #16]
     4f0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     4f4:	and	w0, w0, #0xff
     4f8:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     4fc:	mov	w1, #0x2a                  	// #42
     500:	ldr	x0, [sp, #16]
     504:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     508:	and	w0, w0, #0xff
     50c:	cmp	w0, #0x0
     510:	b.eq	534 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x3d0>  // b.none
     514:	mov	w1, #0x20                  	// #32
     518:	ldr	x0, [sp, #16]
     51c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     520:	and	w0, w0, #0xff
     524:	cmp	w0, #0x0
     528:	b.eq	534 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x3d0>  // b.none
     52c:	mov	w0, #0x1                   	// #1
     530:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     534:	mov	w0, #0x0                   	// #0
     538:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     53c:	mov	w1, #0x23                  	// #35
     540:	ldr	x0, [sp, #16]
     544:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     548:	and	w0, w0, #0xff
     54c:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     550:	mov	w1, #0x5c                  	// #92
     554:	ldr	x0, [sp, #16]
     558:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     55c:	and	w0, w0, #0xff
     560:	b	578 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE+0x414>
     564:	mov	w1, #0x40                  	// #64
     568:	ldr	x0, [sp, #16]
     56c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     570:	and	w0, w0, #0xff
     574:	nop
     578:	ldp	x29, x30, [sp], #32
     57c:	ret

0000000000000580 <_ZL25createAArch64DisassemblerRKN4llvm6TargetERKNS_15MCSubtargetInfoERNS_9MCContextE>:
     580:	stp	x29, x30, [sp, #-64]!
     584:	mov	x29, sp
     588:	str	x19, [sp, #16]
     58c:	str	x0, [sp, #56]
     590:	str	x1, [sp, #48]
     594:	str	x2, [sp, #40]
     598:	mov	x0, #0x28                  	// #40
     59c:	bl	0 <_Znwm>
     5a0:	mov	x19, x0
     5a4:	ldr	x2, [sp, #40]
     5a8:	ldr	x1, [sp, #48]
     5ac:	mov	x0, x19
     5b0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     5b4:	mov	x0, x19
     5b8:	ldr	x19, [sp, #16]
     5bc:	ldp	x29, x30, [sp], #64
     5c0:	ret

00000000000005c4 <_ZNK4llvm19AArch64Disassembler14getInstructionERNS_6MCInstERmNS_8ArrayRefIhEEmRNS_11raw_ostreamE>:
     5c4:	stp	x29, x30, [sp, #-112]!
     5c8:	mov	x29, sp
     5cc:	str	x19, [sp, #16]
     5d0:	str	x0, [sp, #88]
     5d4:	str	x1, [sp, #80]
     5d8:	str	x2, [sp, #72]
     5dc:	stp	x3, x4, [sp, #56]
     5e0:	str	x5, [sp, #48]
     5e4:	str	x6, [sp, #40]
     5e8:	ldr	x0, [sp, #88]
     5ec:	ldr	x1, [sp, #40]
     5f0:	str	x1, [x0, #32]
     5f4:	ldr	x0, [sp, #72]
     5f8:	str	xzr, [x0]
     5fc:	add	x0, sp, #0x38
     600:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     604:	cmp	x0, #0x3
     608:	cset	w0, ls  // ls = plast
     60c:	and	w0, w0, #0xff
     610:	cmp	w0, #0x0
     614:	b.eq	620 <_ZNK4llvm19AArch64Disassembler14getInstructionERNS_6MCInstERmNS_8ArrayRefIhEEmRNS_11raw_ostreamE+0x5c>  // b.none
     618:	mov	w0, #0x0                   	// #0
     61c:	b	6b4 <_ZNK4llvm19AArch64Disassembler14getInstructionERNS_6MCInstERmNS_8ArrayRefIhEEmRNS_11raw_ostreamE+0xf0>
     620:	ldr	x0, [sp, #72]
     624:	mov	x1, #0x4                   	// #4
     628:	str	x1, [x0]
     62c:	add	x0, sp, #0x38
     630:	mov	x1, #0x3                   	// #3
     634:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     638:	ldrb	w0, [x0]
     63c:	lsl	w19, w0, #24
     640:	add	x0, sp, #0x38
     644:	mov	x1, #0x2                   	// #2
     648:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     64c:	ldrb	w0, [x0]
     650:	lsl	w0, w0, #16
     654:	orr	w19, w19, w0
     658:	add	x0, sp, #0x38
     65c:	mov	x1, #0x1                   	// #1
     660:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     664:	ldrb	w0, [x0]
     668:	lsl	w0, w0, #8
     66c:	orr	w19, w19, w0
     670:	add	x0, sp, #0x38
     674:	mov	x1, #0x0                   	// #0
     678:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     67c:	ldrb	w0, [x0]
     680:	orr	w0, w19, w0
     684:	str	w0, [sp, #108]
     688:	ldr	x0, [sp, #88]
     68c:	ldr	x0, [x0, #16]
     690:	mov	x5, x0
     694:	ldr	x4, [sp, #88]
     698:	ldr	x3, [sp, #48]
     69c:	ldr	w2, [sp, #108]
     6a0:	ldr	x1, [sp, #80]
     6a4:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     6a8:	add	x0, x0, #0x0
     6ac:	bl	3ffc <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE>
     6b0:	nop
     6b4:	ldr	x19, [sp, #16]
     6b8:	ldp	x29, x30, [sp], #112
     6bc:	ret

00000000000006c0 <_ZL31createAArch64ExternalSymbolizerRKN4llvm6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE>:
     6c0:	stp	x29, x30, [sp, #-96]!
     6c4:	mov	x29, sp
     6c8:	stp	x19, x20, [sp, #16]
     6cc:	str	x0, [sp, #72]
     6d0:	str	x1, [sp, #64]
     6d4:	str	x2, [sp, #56]
     6d8:	str	x3, [sp, #48]
     6dc:	str	x4, [sp, #40]
     6e0:	str	x5, [sp, #32]
     6e4:	ldr	x0, [sp, #32]
     6e8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     6ec:	mov	x1, x0
     6f0:	add	x0, sp, #0x58
     6f4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     6f8:	add	x19, sp, #0x58
     6fc:	mov	x0, #0x30                  	// #48
     700:	bl	0 <_Znwm>
     704:	mov	x20, x0
     708:	ldr	x5, [sp, #48]
     70c:	ldr	x4, [sp, #56]
     710:	ldr	x3, [sp, #64]
     714:	mov	x2, x19
     718:	ldr	x1, [sp, #40]
     71c:	mov	x0, x20
     720:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     724:	add	x0, sp, #0x58
     728:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     72c:	mov	x0, x20
     730:	ldp	x19, x20, [sp, #16]
     734:	ldp	x29, x30, [sp], #96
     738:	ret

000000000000073c <LLVMInitializeAArch64Disassembler>:
     73c:	stp	x29, x30, [sp, #-16]!
     740:	mov	x29, sp
     744:	bl	0 <_ZN4llvm21getTheAArch64leTargetEv>
     748:	mov	x2, x0
     74c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     750:	add	x1, x0, #0x0
     754:	mov	x0, x2
     758:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     75c:	bl	0 <_ZN4llvm21getTheAArch64beTargetEv>
     760:	mov	x2, x0
     764:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     768:	add	x1, x0, #0x0
     76c:	mov	x0, x2
     770:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     774:	bl	0 <_ZN4llvm21getTheAArch64leTargetEv>
     778:	mov	x2, x0
     77c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     780:	add	x1, x0, #0x0
     784:	mov	x0, x2
     788:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     78c:	bl	0 <_ZN4llvm21getTheAArch64beTargetEv>
     790:	mov	x2, x0
     794:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     798:	add	x1, x0, #0x0
     79c:	mov	x0, x2
     7a0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     7a4:	bl	0 <_ZN4llvm22getTheAArch64_32TargetEv>
     7a8:	mov	x2, x0
     7ac:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     7b0:	add	x1, x0, #0x0
     7b4:	mov	x0, x2
     7b8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     7bc:	bl	0 <_ZN4llvm22getTheAArch64_32TargetEv>
     7c0:	mov	x2, x0
     7c4:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     7c8:	add	x1, x0, #0x0
     7cc:	mov	x0, x2
     7d0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     7d4:	bl	0 <_ZN4llvm17getTheARM64TargetEv>
     7d8:	mov	x2, x0
     7dc:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     7e0:	add	x1, x0, #0x0
     7e4:	mov	x0, x2
     7e8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     7ec:	bl	0 <_ZN4llvm17getTheARM64TargetEv>
     7f0:	mov	x2, x0
     7f4:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     7f8:	add	x1, x0, #0x0
     7fc:	mov	x0, x2
     800:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     804:	bl	0 <_ZN4llvm20getTheARM64_32TargetEv>
     808:	mov	x2, x0
     80c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     810:	add	x1, x0, #0x0
     814:	mov	x0, x2
     818:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     81c:	bl	0 <_ZN4llvm20getTheARM64_32TargetEv>
     820:	mov	x2, x0
     824:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     828:	add	x1, x0, #0x0
     82c:	mov	x0, x2
     830:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     834:	nop
     838:	ldp	x29, x30, [sp], #16
     83c:	ret

0000000000000840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>:
     840:	stp	x29, x30, [sp, #-80]!
     844:	mov	x29, sp
     848:	str	x0, [sp, #40]
     84c:	str	w1, [sp, #36]
     850:	str	x2, [sp, #24]
     854:	str	x3, [sp, #16]
     858:	ldr	w0, [sp, #36]
     85c:	cmp	w0, #0x1f
     860:	b.ls	86c <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     864:	mov	w0, #0x0                   	// #0
     868:	b	8a0 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv+0x60>
     86c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     870:	add	x0, x0, #0x0
     874:	ldr	w1, [sp, #36]
     878:	ldr	w0, [x0, x1, lsl #2]
     87c:	str	w0, [sp, #76]
     880:	ldr	w0, [sp, #76]
     884:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     888:	stp	x0, x1, [sp, #56]
     88c:	add	x0, sp, #0x38
     890:	mov	x1, x0
     894:	ldr	x0, [sp, #40]
     898:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     89c:	mov	w0, #0x3                   	// #3
     8a0:	ldp	x29, x30, [sp], #80
     8a4:	ret

00000000000008a8 <_ZL28DecodeFPR128_loRegisterClassRN4llvm6MCInstEjmPKv>:
     8a8:	stp	x29, x30, [sp, #-48]!
     8ac:	mov	x29, sp
     8b0:	str	x0, [sp, #40]
     8b4:	str	w1, [sp, #36]
     8b8:	str	x2, [sp, #24]
     8bc:	str	x3, [sp, #16]
     8c0:	ldr	w0, [sp, #36]
     8c4:	cmp	w0, #0xf
     8c8:	b.ls	8d4 <_ZL28DecodeFPR128_loRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     8cc:	mov	w0, #0x0                   	// #0
     8d0:	b	8ec <_ZL28DecodeFPR128_loRegisterClassRN4llvm6MCInstEjmPKv+0x44>
     8d4:	ldr	x3, [sp, #16]
     8d8:	ldr	x2, [sp, #24]
     8dc:	ldr	w1, [sp, #36]
     8e0:	ldr	x0, [sp, #40]
     8e4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
     8e8:	nop
     8ec:	ldp	x29, x30, [sp], #48
     8f0:	ret

00000000000008f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>:
     8f4:	stp	x29, x30, [sp, #-80]!
     8f8:	mov	x29, sp
     8fc:	str	x0, [sp, #40]
     900:	str	w1, [sp, #36]
     904:	str	x2, [sp, #24]
     908:	str	x3, [sp, #16]
     90c:	ldr	w0, [sp, #36]
     910:	cmp	w0, #0x1f
     914:	b.ls	920 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     918:	mov	w0, #0x0                   	// #0
     91c:	b	954 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv+0x60>
     920:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     924:	add	x0, x0, #0x0
     928:	ldr	w1, [sp, #36]
     92c:	ldr	w0, [x0, x1, lsl #2]
     930:	str	w0, [sp, #76]
     934:	ldr	w0, [sp, #76]
     938:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     93c:	stp	x0, x1, [sp, #56]
     940:	add	x0, sp, #0x38
     944:	mov	x1, x0
     948:	ldr	x0, [sp, #40]
     94c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     950:	mov	w0, #0x3                   	// #3
     954:	ldp	x29, x30, [sp], #80
     958:	ret

000000000000095c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>:
     95c:	stp	x29, x30, [sp, #-80]!
     960:	mov	x29, sp
     964:	str	x0, [sp, #40]
     968:	str	w1, [sp, #36]
     96c:	str	x2, [sp, #24]
     970:	str	x3, [sp, #16]
     974:	ldr	w0, [sp, #36]
     978:	cmp	w0, #0x1f
     97c:	b.ls	988 <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     980:	mov	w0, #0x0                   	// #0
     984:	b	9bc <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv+0x60>
     988:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     98c:	add	x0, x0, #0x0
     990:	ldr	w1, [sp, #36]
     994:	ldr	w0, [x0, x1, lsl #2]
     998:	str	w0, [sp, #76]
     99c:	ldr	w0, [sp, #76]
     9a0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     9a4:	stp	x0, x1, [sp, #56]
     9a8:	add	x0, sp, #0x38
     9ac:	mov	x1, x0
     9b0:	ldr	x0, [sp, #40]
     9b4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     9b8:	mov	w0, #0x3                   	// #3
     9bc:	ldp	x29, x30, [sp], #80
     9c0:	ret

00000000000009c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>:
     9c4:	stp	x29, x30, [sp, #-80]!
     9c8:	mov	x29, sp
     9cc:	str	x0, [sp, #40]
     9d0:	str	w1, [sp, #36]
     9d4:	str	x2, [sp, #24]
     9d8:	str	x3, [sp, #16]
     9dc:	ldr	w0, [sp, #36]
     9e0:	cmp	w0, #0x1f
     9e4:	b.ls	9f0 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     9e8:	mov	w0, #0x0                   	// #0
     9ec:	b	a24 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv+0x60>
     9f0:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     9f4:	add	x0, x0, #0x0
     9f8:	ldr	w1, [sp, #36]
     9fc:	ldr	w0, [x0, x1, lsl #2]
     a00:	str	w0, [sp, #76]
     a04:	ldr	w0, [sp, #76]
     a08:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     a0c:	stp	x0, x1, [sp, #56]
     a10:	add	x0, sp, #0x38
     a14:	mov	x1, x0
     a18:	ldr	x0, [sp, #40]
     a1c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     a20:	mov	w0, #0x3                   	// #3
     a24:	ldp	x29, x30, [sp], #80
     a28:	ret

0000000000000a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>:
     a2c:	stp	x29, x30, [sp, #-80]!
     a30:	mov	x29, sp
     a34:	str	x0, [sp, #40]
     a38:	str	w1, [sp, #36]
     a3c:	str	x2, [sp, #24]
     a40:	str	x3, [sp, #16]
     a44:	ldr	w0, [sp, #36]
     a48:	cmp	w0, #0x1f
     a4c:	b.ls	a58 <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     a50:	mov	w0, #0x0                   	// #0
     a54:	b	a8c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv+0x60>
     a58:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     a5c:	add	x0, x0, #0x0
     a60:	ldr	w1, [sp, #36]
     a64:	ldr	w0, [x0, x1, lsl #2]
     a68:	str	w0, [sp, #76]
     a6c:	ldr	w0, [sp, #76]
     a70:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     a74:	stp	x0, x1, [sp, #56]
     a78:	add	x0, sp, #0x38
     a7c:	mov	x1, x0
     a80:	ldr	x0, [sp, #40]
     a84:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     a88:	mov	w0, #0x3                   	// #3
     a8c:	ldp	x29, x30, [sp], #80
     a90:	ret

0000000000000a94 <_ZL30DecodeGPR64commonRegisterClassRN4llvm6MCInstEjmPKv>:
     a94:	stp	x29, x30, [sp, #-80]!
     a98:	mov	x29, sp
     a9c:	str	x0, [sp, #40]
     aa0:	str	w1, [sp, #36]
     aa4:	str	x2, [sp, #24]
     aa8:	str	x3, [sp, #16]
     aac:	ldr	w0, [sp, #36]
     ab0:	cmp	w0, #0x1e
     ab4:	b.ls	ac0 <_ZL30DecodeGPR64commonRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     ab8:	mov	w0, #0x0                   	// #0
     abc:	b	af4 <_ZL30DecodeGPR64commonRegisterClassRN4llvm6MCInstEjmPKv+0x60>
     ac0:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     ac4:	add	x0, x0, #0x0
     ac8:	ldr	w1, [sp, #36]
     acc:	ldr	w0, [x0, x1, lsl #2]
     ad0:	str	w0, [sp, #76]
     ad4:	ldr	w0, [sp, #76]
     ad8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     adc:	stp	x0, x1, [sp, #56]
     ae0:	add	x0, sp, #0x38
     ae4:	mov	x1, x0
     ae8:	ldr	x0, [sp, #40]
     aec:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     af0:	mov	w0, #0x3                   	// #3
     af4:	ldp	x29, x30, [sp], #80
     af8:	ret

0000000000000afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>:
     afc:	stp	x29, x30, [sp, #-80]!
     b00:	mov	x29, sp
     b04:	str	x0, [sp, #40]
     b08:	str	w1, [sp, #36]
     b0c:	str	x2, [sp, #24]
     b10:	str	x3, [sp, #16]
     b14:	ldr	w0, [sp, #36]
     b18:	cmp	w0, #0x1f
     b1c:	b.ls	b28 <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     b20:	mov	w0, #0x0                   	// #0
     b24:	b	b5c <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv+0x60>
     b28:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     b2c:	add	x0, x0, #0x0
     b30:	ldr	w1, [sp, #36]
     b34:	ldr	w0, [x0, x1, lsl #2]
     b38:	str	w0, [sp, #76]
     b3c:	ldr	w0, [sp, #76]
     b40:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     b44:	stp	x0, x1, [sp, #56]
     b48:	add	x0, sp, #0x38
     b4c:	mov	x1, x0
     b50:	ldr	x0, [sp, #40]
     b54:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     b58:	mov	w0, #0x3                   	// #3
     b5c:	ldp	x29, x30, [sp], #80
     b60:	ret

0000000000000b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>:
     b64:	stp	x29, x30, [sp, #-80]!
     b68:	mov	x29, sp
     b6c:	str	x0, [sp, #40]
     b70:	str	w1, [sp, #36]
     b74:	str	x2, [sp, #24]
     b78:	str	x3, [sp, #16]
     b7c:	ldr	w0, [sp, #36]
     b80:	cmp	w0, #0x1f
     b84:	b.ls	b90 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     b88:	mov	w0, #0x0                   	// #0
     b8c:	b	bd8 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv+0x74>
     b90:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     b94:	add	x0, x0, #0x0
     b98:	ldr	w1, [sp, #36]
     b9c:	ldr	w0, [x0, x1, lsl #2]
     ba0:	str	w0, [sp, #76]
     ba4:	ldr	w0, [sp, #76]
     ba8:	cmp	w0, #0x8
     bac:	b.ne	bb8 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv+0x54>  // b.any
     bb0:	mov	w0, #0x5                   	// #5
     bb4:	str	w0, [sp, #76]
     bb8:	ldr	w0, [sp, #76]
     bbc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     bc0:	stp	x0, x1, [sp, #56]
     bc4:	add	x0, sp, #0x38
     bc8:	mov	x1, x0
     bcc:	ldr	x0, [sp, #40]
     bd0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     bd4:	mov	w0, #0x3                   	// #3
     bd8:	ldp	x29, x30, [sp], #80
     bdc:	ret

0000000000000be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>:
     be0:	stp	x29, x30, [sp, #-80]!
     be4:	mov	x29, sp
     be8:	str	x0, [sp, #40]
     bec:	str	w1, [sp, #36]
     bf0:	str	x2, [sp, #24]
     bf4:	str	x3, [sp, #16]
     bf8:	ldr	w0, [sp, #36]
     bfc:	cmp	w0, #0x1f
     c00:	b.ls	c0c <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     c04:	mov	w0, #0x0                   	// #0
     c08:	b	c40 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv+0x60>
     c0c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     c10:	add	x0, x0, #0x0
     c14:	ldr	w1, [sp, #36]
     c18:	ldr	w0, [x0, x1, lsl #2]
     c1c:	str	w0, [sp, #76]
     c20:	ldr	w0, [sp, #76]
     c24:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     c28:	stp	x0, x1, [sp, #56]
     c2c:	add	x0, sp, #0x38
     c30:	mov	x1, x0
     c34:	ldr	x0, [sp, #40]
     c38:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     c3c:	mov	w0, #0x3                   	// #3
     c40:	ldp	x29, x30, [sp], #80
     c44:	ret

0000000000000c48 <_ZL26DecodeGPR32spRegisterClassRN4llvm6MCInstEjmPKv>:
     c48:	stp	x29, x30, [sp, #-80]!
     c4c:	mov	x29, sp
     c50:	str	x0, [sp, #40]
     c54:	str	w1, [sp, #36]
     c58:	str	x2, [sp, #24]
     c5c:	str	x3, [sp, #16]
     c60:	ldr	w0, [sp, #36]
     c64:	cmp	w0, #0x1f
     c68:	b.ls	c74 <_ZL26DecodeGPR32spRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     c6c:	mov	w0, #0x0                   	// #0
     c70:	b	cbc <_ZL26DecodeGPR32spRegisterClassRN4llvm6MCInstEjmPKv+0x74>
     c74:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     c78:	add	x0, x0, #0x0
     c7c:	ldr	w1, [sp, #36]
     c80:	ldr	w0, [x0, x1, lsl #2]
     c84:	str	w0, [sp, #76]
     c88:	ldr	w0, [sp, #76]
     c8c:	cmp	w0, #0x7
     c90:	b.ne	c9c <_ZL26DecodeGPR32spRegisterClassRN4llvm6MCInstEjmPKv+0x54>  // b.any
     c94:	mov	w0, #0x6                   	// #6
     c98:	str	w0, [sp, #76]
     c9c:	ldr	w0, [sp, #76]
     ca0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     ca4:	stp	x0, x1, [sp, #56]
     ca8:	add	x0, sp, #0x38
     cac:	mov	x1, x0
     cb0:	ldr	x0, [sp, #40]
     cb4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     cb8:	mov	w0, #0x3                   	// #3
     cbc:	ldp	x29, x30, [sp], #80
     cc0:	ret

0000000000000cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>:
     cc4:	stp	x29, x30, [sp, #-80]!
     cc8:	mov	x29, sp
     ccc:	str	x0, [sp, #40]
     cd0:	str	w1, [sp, #36]
     cd4:	str	x2, [sp, #24]
     cd8:	str	x3, [sp, #16]
     cdc:	ldr	w0, [sp, #36]
     ce0:	cmp	w0, #0x1f
     ce4:	b.ls	cf0 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     ce8:	mov	w0, #0x0                   	// #0
     cec:	b	d24 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv+0x60>
     cf0:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     cf4:	add	x0, x0, #0x0
     cf8:	ldr	w1, [sp, #36]
     cfc:	ldr	w0, [x0, x1, lsl #2]
     d00:	str	w0, [sp, #76]
     d04:	ldr	w0, [sp, #76]
     d08:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     d0c:	stp	x0, x1, [sp, #56]
     d10:	add	x0, sp, #0x38
     d14:	mov	x1, x0
     d18:	ldr	x0, [sp, #40]
     d1c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     d20:	mov	w0, #0x3                   	// #3
     d24:	ldp	x29, x30, [sp], #80
     d28:	ret

0000000000000d2c <_ZL25DecodeZPR_4bRegisterClassRN4llvm6MCInstEjmPKv>:
     d2c:	stp	x29, x30, [sp, #-48]!
     d30:	mov	x29, sp
     d34:	str	x0, [sp, #40]
     d38:	str	w1, [sp, #36]
     d3c:	str	x2, [sp, #24]
     d40:	str	x3, [sp, #16]
     d44:	ldr	w0, [sp, #36]
     d48:	cmp	w0, #0xf
     d4c:	b.ls	d58 <_ZL25DecodeZPR_4bRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     d50:	mov	w0, #0x0                   	// #0
     d54:	b	d70 <_ZL25DecodeZPR_4bRegisterClassRN4llvm6MCInstEjmPKv+0x44>
     d58:	ldr	x3, [sp, #16]
     d5c:	ldr	x2, [sp, #24]
     d60:	ldr	w1, [sp, #36]
     d64:	ldr	x0, [sp, #40]
     d68:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
     d6c:	nop
     d70:	ldp	x29, x30, [sp], #48
     d74:	ret

0000000000000d78 <_ZL25DecodeZPR_3bRegisterClassRN4llvm6MCInstEjmPKv>:
     d78:	stp	x29, x30, [sp, #-48]!
     d7c:	mov	x29, sp
     d80:	str	x0, [sp, #40]
     d84:	str	w1, [sp, #36]
     d88:	str	x2, [sp, #24]
     d8c:	str	x3, [sp, #16]
     d90:	ldr	w0, [sp, #36]
     d94:	cmp	w0, #0x7
     d98:	b.ls	da4 <_ZL25DecodeZPR_3bRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     d9c:	mov	w0, #0x0                   	// #0
     da0:	b	dbc <_ZL25DecodeZPR_3bRegisterClassRN4llvm6MCInstEjmPKv+0x44>
     da4:	ldr	x3, [sp, #16]
     da8:	ldr	x2, [sp, #24]
     dac:	ldr	w1, [sp, #36]
     db0:	ldr	x0, [sp, #40]
     db4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
     db8:	nop
     dbc:	ldp	x29, x30, [sp], #48
     dc0:	ret

0000000000000dc4 <_ZL23DecodeZPR2RegisterClassRN4llvm6MCInstEjmPKv>:
     dc4:	stp	x29, x30, [sp, #-80]!
     dc8:	mov	x29, sp
     dcc:	str	x0, [sp, #40]
     dd0:	str	w1, [sp, #36]
     dd4:	str	x2, [sp, #24]
     dd8:	str	x3, [sp, #16]
     ddc:	ldr	w0, [sp, #36]
     de0:	cmp	w0, #0x1f
     de4:	b.ls	df0 <_ZL23DecodeZPR2RegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     de8:	mov	w0, #0x0                   	// #0
     dec:	b	e24 <_ZL23DecodeZPR2RegisterClassRN4llvm6MCInstEjmPKv+0x60>
     df0:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     df4:	add	x0, x0, #0x0
     df8:	ldr	w1, [sp, #36]
     dfc:	ldr	w0, [x0, x1, lsl #2]
     e00:	str	w0, [sp, #76]
     e04:	ldr	w0, [sp, #76]
     e08:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     e0c:	stp	x0, x1, [sp, #56]
     e10:	add	x0, sp, #0x38
     e14:	mov	x1, x0
     e18:	ldr	x0, [sp, #40]
     e1c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     e20:	mov	w0, #0x3                   	// #3
     e24:	ldp	x29, x30, [sp], #80
     e28:	ret

0000000000000e2c <_ZL23DecodeZPR3RegisterClassRN4llvm6MCInstEjmPKv>:
     e2c:	stp	x29, x30, [sp, #-80]!
     e30:	mov	x29, sp
     e34:	str	x0, [sp, #40]
     e38:	str	w1, [sp, #36]
     e3c:	str	x2, [sp, #24]
     e40:	str	x3, [sp, #16]
     e44:	ldr	w0, [sp, #36]
     e48:	cmp	w0, #0x1f
     e4c:	b.ls	e58 <_ZL23DecodeZPR3RegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     e50:	mov	w0, #0x0                   	// #0
     e54:	b	e8c <_ZL23DecodeZPR3RegisterClassRN4llvm6MCInstEjmPKv+0x60>
     e58:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     e5c:	add	x0, x0, #0x0
     e60:	ldr	w1, [sp, #36]
     e64:	ldr	w0, [x0, x1, lsl #2]
     e68:	str	w0, [sp, #76]
     e6c:	ldr	w0, [sp, #76]
     e70:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     e74:	stp	x0, x1, [sp, #56]
     e78:	add	x0, sp, #0x38
     e7c:	mov	x1, x0
     e80:	ldr	x0, [sp, #40]
     e84:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     e88:	mov	w0, #0x3                   	// #3
     e8c:	ldp	x29, x30, [sp], #80
     e90:	ret

0000000000000e94 <_ZL23DecodeZPR4RegisterClassRN4llvm6MCInstEjmPKv>:
     e94:	stp	x29, x30, [sp, #-80]!
     e98:	mov	x29, sp
     e9c:	str	x0, [sp, #40]
     ea0:	str	w1, [sp, #36]
     ea4:	str	x2, [sp, #24]
     ea8:	str	x3, [sp, #16]
     eac:	ldr	w0, [sp, #36]
     eb0:	cmp	w0, #0x1f
     eb4:	b.ls	ec0 <_ZL23DecodeZPR4RegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     eb8:	mov	w0, #0x0                   	// #0
     ebc:	b	ef4 <_ZL23DecodeZPR4RegisterClassRN4llvm6MCInstEjmPKv+0x60>
     ec0:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     ec4:	add	x0, x0, #0x0
     ec8:	ldr	w1, [sp, #36]
     ecc:	ldr	w0, [x0, x1, lsl #2]
     ed0:	str	w0, [sp, #76]
     ed4:	ldr	w0, [sp, #76]
     ed8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     edc:	stp	x0, x1, [sp, #56]
     ee0:	add	x0, sp, #0x38
     ee4:	mov	x1, x0
     ee8:	ldr	x0, [sp, #40]
     eec:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     ef0:	mov	w0, #0x3                   	// #3
     ef4:	ldp	x29, x30, [sp], #80
     ef8:	ret

0000000000000efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>:
     efc:	stp	x29, x30, [sp, #-80]!
     f00:	mov	x29, sp
     f04:	str	x0, [sp, #40]
     f08:	str	w1, [sp, #36]
     f0c:	str	x2, [sp, #24]
     f10:	str	x3, [sp, #16]
     f14:	ldr	w0, [sp, #36]
     f18:	cmp	w0, #0xf
     f1c:	b.ls	f28 <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     f20:	mov	w0, #0x0                   	// #0
     f24:	b	f5c <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv+0x60>
     f28:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     f2c:	add	x0, x0, #0x0
     f30:	ldr	w1, [sp, #36]
     f34:	ldr	w0, [x0, x1, lsl #2]
     f38:	str	w0, [sp, #76]
     f3c:	ldr	w0, [sp, #76]
     f40:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     f44:	stp	x0, x1, [sp, #56]
     f48:	add	x0, sp, #0x38
     f4c:	mov	x1, x0
     f50:	ldr	x0, [sp, #40]
     f54:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     f58:	mov	w0, #0x3                   	// #3
     f5c:	ldp	x29, x30, [sp], #80
     f60:	ret

0000000000000f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>:
     f64:	stp	x29, x30, [sp, #-48]!
     f68:	mov	x29, sp
     f6c:	str	x0, [sp, #40]
     f70:	str	w1, [sp, #36]
     f74:	str	x2, [sp, #24]
     f78:	str	x3, [sp, #16]
     f7c:	ldr	w0, [sp, #36]
     f80:	cmp	w0, #0x7
     f84:	b.ls	f90 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     f88:	mov	w0, #0x0                   	// #0
     f8c:	b	fa8 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv+0x44>
     f90:	ldr	x3, [sp, #16]
     f94:	ldr	x2, [sp, #24]
     f98:	ldr	w1, [sp, #36]
     f9c:	ldr	x0, [sp, #40]
     fa0:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
     fa4:	nop
     fa8:	ldp	x29, x30, [sp], #48
     fac:	ret

0000000000000fb0 <_ZL25DecodeVectorRegisterClassRN4llvm6MCInstEjmPKv>:
     fb0:	stp	x29, x30, [sp, #-80]!
     fb4:	mov	x29, sp
     fb8:	str	x0, [sp, #40]
     fbc:	str	w1, [sp, #36]
     fc0:	str	x2, [sp, #24]
     fc4:	str	x3, [sp, #16]
     fc8:	ldr	w0, [sp, #36]
     fcc:	cmp	w0, #0x1f
     fd0:	b.ls	fdc <_ZL25DecodeVectorRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
     fd4:	mov	w0, #0x0                   	// #0
     fd8:	b	1010 <_ZL25DecodeVectorRegisterClassRN4llvm6MCInstEjmPKv+0x60>
     fdc:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     fe0:	add	x0, x0, #0x0
     fe4:	ldr	w1, [sp, #36]
     fe8:	ldr	w0, [x0, x1, lsl #2]
     fec:	str	w0, [sp, #76]
     ff0:	ldr	w0, [sp, #76]
     ff4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
     ff8:	stp	x0, x1, [sp, #56]
     ffc:	add	x0, sp, #0x38
    1000:	mov	x1, x0
    1004:	ldr	x0, [sp, #40]
    1008:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    100c:	mov	w0, #0x3                   	// #3
    1010:	ldp	x29, x30, [sp], #80
    1014:	ret

0000000000001018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>:
    1018:	stp	x29, x30, [sp, #-80]!
    101c:	mov	x29, sp
    1020:	str	x0, [sp, #40]
    1024:	str	w1, [sp, #36]
    1028:	str	x2, [sp, #24]
    102c:	str	x3, [sp, #16]
    1030:	ldr	w0, [sp, #36]
    1034:	cmp	w0, #0x1f
    1038:	b.ls	1044 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
    103c:	mov	w0, #0x0                   	// #0
    1040:	b	1078 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv+0x60>
    1044:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1048:	add	x0, x0, #0x0
    104c:	ldr	w1, [sp, #36]
    1050:	ldr	w0, [x0, x1, lsl #2]
    1054:	str	w0, [sp, #76]
    1058:	ldr	w0, [sp, #76]
    105c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1060:	stp	x0, x1, [sp, #56]
    1064:	add	x0, sp, #0x38
    1068:	mov	x1, x0
    106c:	ldr	x0, [sp, #40]
    1070:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1074:	mov	w0, #0x3                   	// #3
    1078:	ldp	x29, x30, [sp], #80
    107c:	ret

0000000000001080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>:
    1080:	stp	x29, x30, [sp, #-80]!
    1084:	mov	x29, sp
    1088:	str	x0, [sp, #40]
    108c:	str	w1, [sp, #36]
    1090:	str	x2, [sp, #24]
    1094:	str	x3, [sp, #16]
    1098:	ldr	w0, [sp, #36]
    109c:	cmp	w0, #0x1f
    10a0:	b.ls	10ac <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
    10a4:	mov	w0, #0x0                   	// #0
    10a8:	b	10e0 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv+0x60>
    10ac:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    10b0:	add	x0, x0, #0x0
    10b4:	ldr	w1, [sp, #36]
    10b8:	ldr	w0, [x0, x1, lsl #2]
    10bc:	str	w0, [sp, #76]
    10c0:	ldr	w0, [sp, #76]
    10c4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    10c8:	stp	x0, x1, [sp, #56]
    10cc:	add	x0, sp, #0x38
    10d0:	mov	x1, x0
    10d4:	ldr	x0, [sp, #40]
    10d8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    10dc:	mov	w0, #0x3                   	// #3
    10e0:	ldp	x29, x30, [sp], #80
    10e4:	ret

00000000000010e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>:
    10e8:	stp	x29, x30, [sp, #-80]!
    10ec:	mov	x29, sp
    10f0:	str	x0, [sp, #40]
    10f4:	str	w1, [sp, #36]
    10f8:	str	x2, [sp, #24]
    10fc:	str	x3, [sp, #16]
    1100:	ldr	w0, [sp, #36]
    1104:	cmp	w0, #0x1f
    1108:	b.ls	1114 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
    110c:	mov	w0, #0x0                   	// #0
    1110:	b	1148 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv+0x60>
    1114:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1118:	add	x0, x0, #0x0
    111c:	ldr	w1, [sp, #36]
    1120:	ldr	w0, [x0, x1, lsl #2]
    1124:	str	w0, [sp, #76]
    1128:	ldr	w0, [sp, #76]
    112c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1130:	stp	x0, x1, [sp, #56]
    1134:	add	x0, sp, #0x38
    1138:	mov	x1, x0
    113c:	ldr	x0, [sp, #40]
    1140:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1144:	mov	w0, #0x3                   	// #3
    1148:	ldp	x29, x30, [sp], #80
    114c:	ret

0000000000001150 <_ZL21DecodeDDRegisterClassRN4llvm6MCInstEjmPKv>:
    1150:	stp	x29, x30, [sp, #-80]!
    1154:	mov	x29, sp
    1158:	str	x0, [sp, #40]
    115c:	str	w1, [sp, #36]
    1160:	str	x2, [sp, #24]
    1164:	str	x3, [sp, #16]
    1168:	ldr	w0, [sp, #36]
    116c:	cmp	w0, #0x1f
    1170:	b.ls	117c <_ZL21DecodeDDRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
    1174:	mov	w0, #0x0                   	// #0
    1178:	b	11b0 <_ZL21DecodeDDRegisterClassRN4llvm6MCInstEjmPKv+0x60>
    117c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1180:	add	x0, x0, #0x0
    1184:	ldr	w1, [sp, #36]
    1188:	ldr	w0, [x0, x1, lsl #2]
    118c:	str	w0, [sp, #76]
    1190:	ldr	w0, [sp, #76]
    1194:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1198:	stp	x0, x1, [sp, #56]
    119c:	add	x0, sp, #0x38
    11a0:	mov	x1, x0
    11a4:	ldr	x0, [sp, #40]
    11a8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    11ac:	mov	w0, #0x3                   	// #3
    11b0:	ldp	x29, x30, [sp], #80
    11b4:	ret

00000000000011b8 <_ZL22DecodeDDDRegisterClassRN4llvm6MCInstEjmPKv>:
    11b8:	stp	x29, x30, [sp, #-80]!
    11bc:	mov	x29, sp
    11c0:	str	x0, [sp, #40]
    11c4:	str	w1, [sp, #36]
    11c8:	str	x2, [sp, #24]
    11cc:	str	x3, [sp, #16]
    11d0:	ldr	w0, [sp, #36]
    11d4:	cmp	w0, #0x1f
    11d8:	b.ls	11e4 <_ZL22DecodeDDDRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
    11dc:	mov	w0, #0x0                   	// #0
    11e0:	b	1218 <_ZL22DecodeDDDRegisterClassRN4llvm6MCInstEjmPKv+0x60>
    11e4:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    11e8:	add	x0, x0, #0x0
    11ec:	ldr	w1, [sp, #36]
    11f0:	ldr	w0, [x0, x1, lsl #2]
    11f4:	str	w0, [sp, #76]
    11f8:	ldr	w0, [sp, #76]
    11fc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1200:	stp	x0, x1, [sp, #56]
    1204:	add	x0, sp, #0x38
    1208:	mov	x1, x0
    120c:	ldr	x0, [sp, #40]
    1210:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1214:	mov	w0, #0x3                   	// #3
    1218:	ldp	x29, x30, [sp], #80
    121c:	ret

0000000000001220 <_ZL23DecodeDDDDRegisterClassRN4llvm6MCInstEjmPKv>:
    1220:	stp	x29, x30, [sp, #-80]!
    1224:	mov	x29, sp
    1228:	str	x0, [sp, #40]
    122c:	str	w1, [sp, #36]
    1230:	str	x2, [sp, #24]
    1234:	str	x3, [sp, #16]
    1238:	ldr	w0, [sp, #36]
    123c:	cmp	w0, #0x1f
    1240:	b.ls	124c <_ZL23DecodeDDDDRegisterClassRN4llvm6MCInstEjmPKv+0x2c>  // b.plast
    1244:	mov	w0, #0x0                   	// #0
    1248:	b	1280 <_ZL23DecodeDDDDRegisterClassRN4llvm6MCInstEjmPKv+0x60>
    124c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1250:	add	x0, x0, #0x0
    1254:	ldr	w1, [sp, #36]
    1258:	ldr	w0, [x0, x1, lsl #2]
    125c:	str	w0, [sp, #76]
    1260:	ldr	w0, [sp, #76]
    1264:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1268:	stp	x0, x1, [sp, #56]
    126c:	add	x0, sp, #0x38
    1270:	mov	x1, x0
    1274:	ldr	x0, [sp, #40]
    1278:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    127c:	mov	w0, #0x3                   	// #3
    1280:	ldp	x29, x30, [sp], #80
    1284:	ret

0000000000001288 <_ZL26DecodeFixedPointScaleImm32RN4llvm6MCInstEjmPKv>:
    1288:	stp	x29, x30, [sp, #-64]!
    128c:	mov	x29, sp
    1290:	str	x0, [sp, #40]
    1294:	str	w1, [sp, #36]
    1298:	str	x2, [sp, #24]
    129c:	str	x3, [sp, #16]
    12a0:	ldr	w0, [sp, #36]
    12a4:	orr	w0, w0, #0x20
    12a8:	str	w0, [sp, #36]
    12ac:	mov	w1, #0x40                  	// #64
    12b0:	ldr	w0, [sp, #36]
    12b4:	sub	w0, w1, w0
    12b8:	mov	w0, w0
    12bc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    12c0:	stp	x0, x1, [sp, #48]
    12c4:	add	x0, sp, #0x30
    12c8:	mov	x1, x0
    12cc:	ldr	x0, [sp, #40]
    12d0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    12d4:	mov	w0, #0x3                   	// #3
    12d8:	ldp	x29, x30, [sp], #64
    12dc:	ret

00000000000012e0 <_ZL26DecodeFixedPointScaleImm64RN4llvm6MCInstEjmPKv>:
    12e0:	stp	x29, x30, [sp, #-64]!
    12e4:	mov	x29, sp
    12e8:	str	x0, [sp, #40]
    12ec:	str	w1, [sp, #36]
    12f0:	str	x2, [sp, #24]
    12f4:	str	x3, [sp, #16]
    12f8:	mov	w1, #0x40                  	// #64
    12fc:	ldr	w0, [sp, #36]
    1300:	sub	w0, w1, w0
    1304:	mov	w0, w0
    1308:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    130c:	stp	x0, x1, [sp, #48]
    1310:	add	x0, sp, #0x30
    1314:	mov	x1, x0
    1318:	ldr	x0, [sp, #40]
    131c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1320:	mov	w0, #0x3                   	// #3
    1324:	ldp	x29, x30, [sp], #64
    1328:	ret

000000000000132c <_ZL18DecodePCRelLabel19RN4llvm6MCInstEjmPKv>:
    132c:	stp	x29, x30, [sp, #-96]!
    1330:	mov	x29, sp
    1334:	stp	x19, x20, [sp, #16]
    1338:	str	x0, [sp, #56]
    133c:	str	w1, [sp, #52]
    1340:	str	x2, [sp, #40]
    1344:	str	x3, [sp, #32]
    1348:	ldr	w0, [sp, #52]
    134c:	str	x0, [sp, #88]
    1350:	ldr	x0, [sp, #32]
    1354:	str	x0, [sp, #80]
    1358:	ldr	x0, [sp, #88]
    135c:	and	x0, x0, #0x40000
    1360:	cmp	x0, #0x0
    1364:	b.eq	1374 <_ZL18DecodePCRelLabel19RN4llvm6MCInstEjmPKv+0x48>  // b.none
    1368:	ldr	x0, [sp, #88]
    136c:	orr	x0, x0, #0xfffffffffff80000
    1370:	str	x0, [sp, #88]
    1374:	ldr	x19, [sp, #80]
    1378:	ldr	x0, [sp, #88]
    137c:	lsl	x20, x0, #2
    1380:	ldr	x0, [sp, #56]
    1384:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1388:	cmp	w0, #0xa02
    138c:	cset	w0, ne  // ne = any
    1390:	and	w0, w0, #0xff
    1394:	mov	x6, #0x4                   	// #4
    1398:	mov	x5, #0x0                   	// #0
    139c:	mov	w4, w0
    13a0:	ldr	x3, [sp, #40]
    13a4:	mov	x2, x20
    13a8:	ldr	x1, [sp, #56]
    13ac:	mov	x0, x19
    13b0:	bl	0 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm>
    13b4:	and	w0, w0, #0xff
    13b8:	eor	w0, w0, #0x1
    13bc:	and	w0, w0, #0xff
    13c0:	cmp	w0, #0x0
    13c4:	b.eq	13e4 <_ZL18DecodePCRelLabel19RN4llvm6MCInstEjmPKv+0xb8>  // b.none
    13c8:	ldr	x0, [sp, #88]
    13cc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    13d0:	stp	x0, x1, [sp, #64]
    13d4:	add	x0, sp, #0x40
    13d8:	mov	x1, x0
    13dc:	ldr	x0, [sp, #56]
    13e0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    13e4:	mov	w0, #0x3                   	// #3
    13e8:	ldp	x19, x20, [sp, #16]
    13ec:	ldp	x29, x30, [sp], #96
    13f0:	ret

00000000000013f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>:
    13f4:	stp	x29, x30, [sp, #-80]!
    13f8:	mov	x29, sp
    13fc:	str	x0, [sp, #40]
    1400:	str	w1, [sp, #36]
    1404:	str	x2, [sp, #24]
    1408:	str	x3, [sp, #16]
    140c:	ldr	w0, [sp, #36]
    1410:	lsr	w0, w0, #1
    1414:	mov	w0, w0
    1418:	and	x0, x0, #0x1
    141c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1420:	stp	x0, x1, [sp, #48]
    1424:	add	x0, sp, #0x30
    1428:	mov	x1, x0
    142c:	ldr	x0, [sp, #40]
    1430:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1434:	ldr	w0, [sp, #36]
    1438:	and	x0, x0, #0x1
    143c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1440:	stp	x0, x1, [sp, #64]
    1444:	add	x0, sp, #0x40
    1448:	mov	x1, x0
    144c:	ldr	x0, [sp, #40]
    1450:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1454:	mov	w0, #0x3                   	// #3
    1458:	ldp	x29, x30, [sp], #80
    145c:	ret

0000000000001460 <_ZL23DecodeMRSSystemRegisterRN4llvm6MCInstEjmPKv>:
    1460:	stp	x29, x30, [sp, #-64]!
    1464:	mov	x29, sp
    1468:	str	x0, [sp, #40]
    146c:	str	w1, [sp, #36]
    1470:	str	x2, [sp, #24]
    1474:	str	x3, [sp, #16]
    1478:	ldr	w0, [sp, #36]
    147c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1480:	stp	x0, x1, [sp, #48]
    1484:	add	x0, sp, #0x30
    1488:	mov	x1, x0
    148c:	ldr	x0, [sp, #40]
    1490:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1494:	mov	w0, #0x3                   	// #3
    1498:	ldp	x29, x30, [sp], #64
    149c:	ret

00000000000014a0 <_ZL23DecodeMSRSystemRegisterRN4llvm6MCInstEjmPKv>:
    14a0:	stp	x29, x30, [sp, #-64]!
    14a4:	mov	x29, sp
    14a8:	str	x0, [sp, #40]
    14ac:	str	w1, [sp, #36]
    14b0:	str	x2, [sp, #24]
    14b4:	str	x3, [sp, #16]
    14b8:	ldr	w0, [sp, #36]
    14bc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    14c0:	stp	x0, x1, [sp, #48]
    14c4:	add	x0, sp, #0x30
    14c8:	mov	x1, x0
    14cc:	ldr	x0, [sp, #40]
    14d0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    14d4:	mov	w0, #0x3                   	// #3
    14d8:	ldp	x29, x30, [sp], #64
    14dc:	ret

00000000000014e0 <_ZL25DecodeFMOVLaneInstructionRN4llvm6MCInstEjmPKv>:
    14e0:	stp	x29, x30, [sp, #-80]!
    14e4:	mov	x29, sp
    14e8:	str	x0, [sp, #40]
    14ec:	str	w1, [sp, #36]
    14f0:	str	x2, [sp, #24]
    14f4:	str	x3, [sp, #16]
    14f8:	mov	w2, #0x5                   	// #5
    14fc:	mov	w1, #0x0                   	// #0
    1500:	ldr	w0, [sp, #36]
    1504:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    1508:	str	w0, [sp, #76]
    150c:	mov	w2, #0x5                   	// #5
    1510:	mov	w1, #0x5                   	// #5
    1514:	ldr	w0, [sp, #36]
    1518:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    151c:	str	w0, [sp, #72]
    1520:	mov	w2, #0x1                   	// #1
    1524:	mov	w1, #0x10                  	// #16
    1528:	ldr	w0, [sp, #36]
    152c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    1530:	str	w0, [sp, #68]
    1534:	ldr	w0, [sp, #68]
    1538:	cmp	w0, #0x0
    153c:	b.eq	156c <_ZL25DecodeFMOVLaneInstructionRN4llvm6MCInstEjmPKv+0x8c>  // b.none
    1540:	ldr	x3, [sp, #16]
    1544:	ldr	x2, [sp, #24]
    1548:	ldr	w1, [sp, #76]
    154c:	ldr	x0, [sp, #40]
    1550:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
    1554:	ldr	x3, [sp, #16]
    1558:	ldr	x2, [sp, #24]
    155c:	ldr	w1, [sp, #72]
    1560:	ldr	x0, [sp, #40]
    1564:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    1568:	b	1594 <_ZL25DecodeFMOVLaneInstructionRN4llvm6MCInstEjmPKv+0xb4>
    156c:	ldr	x3, [sp, #16]
    1570:	ldr	x2, [sp, #24]
    1574:	ldr	w1, [sp, #76]
    1578:	ldr	x0, [sp, #40]
    157c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    1580:	ldr	x3, [sp, #16]
    1584:	ldr	x2, [sp, #24]
    1588:	ldr	w1, [sp, #72]
    158c:	ldr	x0, [sp, #40]
    1590:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
    1594:	mov	x0, #0x1                   	// #1
    1598:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    159c:	stp	x0, x1, [sp, #48]
    15a0:	add	x0, sp, #0x30
    15a4:	mov	x1, x0
    15a8:	ldr	x0, [sp, #40]
    15ac:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    15b0:	mov	w0, #0x3                   	// #3
    15b4:	ldp	x29, x30, [sp], #80
    15b8:	ret

00000000000015bc <_ZL18DecodeVecShiftRImmRN4llvm6MCInstEjj>:
    15bc:	stp	x29, x30, [sp, #-48]!
    15c0:	mov	x29, sp
    15c4:	str	x0, [sp, #24]
    15c8:	str	w1, [sp, #20]
    15cc:	str	w2, [sp, #16]
    15d0:	ldr	w1, [sp, #16]
    15d4:	ldr	w0, [sp, #20]
    15d8:	sub	w0, w1, w0
    15dc:	mov	w0, w0
    15e0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    15e4:	stp	x0, x1, [sp, #32]
    15e8:	add	x0, sp, #0x20
    15ec:	mov	x1, x0
    15f0:	ldr	x0, [sp, #24]
    15f4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    15f8:	mov	w0, #0x3                   	// #3
    15fc:	ldp	x29, x30, [sp], #48
    1600:	ret

0000000000001604 <_ZL18DecodeVecShiftLImmRN4llvm6MCInstEjj>:
    1604:	stp	x29, x30, [sp, #-48]!
    1608:	mov	x29, sp
    160c:	str	x0, [sp, #24]
    1610:	str	w1, [sp, #20]
    1614:	str	w2, [sp, #16]
    1618:	ldr	w1, [sp, #20]
    161c:	ldr	w0, [sp, #16]
    1620:	add	w1, w1, w0
    1624:	ldr	w0, [sp, #16]
    1628:	sub	w0, w0, #0x1
    162c:	and	w0, w1, w0
    1630:	mov	w0, w0
    1634:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1638:	stp	x0, x1, [sp, #32]
    163c:	add	x0, sp, #0x20
    1640:	mov	x1, x0
    1644:	ldr	x0, [sp, #24]
    1648:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    164c:	mov	w0, #0x3                   	// #3
    1650:	ldp	x29, x30, [sp], #48
    1654:	ret

0000000000001658 <_ZL20DecodeVecShiftR64ImmRN4llvm6MCInstEjmPKv>:
    1658:	stp	x29, x30, [sp, #-48]!
    165c:	mov	x29, sp
    1660:	str	x0, [sp, #40]
    1664:	str	w1, [sp, #36]
    1668:	str	x2, [sp, #24]
    166c:	str	x3, [sp, #16]
    1670:	mov	w2, #0x40                  	// #64
    1674:	ldr	w1, [sp, #36]
    1678:	ldr	x0, [sp, #40]
    167c:	bl	15bc <_ZL18DecodeVecShiftRImmRN4llvm6MCInstEjj>
    1680:	ldp	x29, x30, [sp], #48
    1684:	ret

0000000000001688 <_ZL26DecodeVecShiftR64ImmNarrowRN4llvm6MCInstEjmPKv>:
    1688:	stp	x29, x30, [sp, #-48]!
    168c:	mov	x29, sp
    1690:	str	x0, [sp, #40]
    1694:	str	w1, [sp, #36]
    1698:	str	x2, [sp, #24]
    169c:	str	x3, [sp, #16]
    16a0:	ldr	w0, [sp, #36]
    16a4:	orr	w0, w0, #0x20
    16a8:	mov	w2, #0x40                  	// #64
    16ac:	mov	w1, w0
    16b0:	ldr	x0, [sp, #40]
    16b4:	bl	15bc <_ZL18DecodeVecShiftRImmRN4llvm6MCInstEjj>
    16b8:	ldp	x29, x30, [sp], #48
    16bc:	ret

00000000000016c0 <_ZL20DecodeVecShiftR32ImmRN4llvm6MCInstEjmPKv>:
    16c0:	stp	x29, x30, [sp, #-48]!
    16c4:	mov	x29, sp
    16c8:	str	x0, [sp, #40]
    16cc:	str	w1, [sp, #36]
    16d0:	str	x2, [sp, #24]
    16d4:	str	x3, [sp, #16]
    16d8:	mov	w2, #0x20                  	// #32
    16dc:	ldr	w1, [sp, #36]
    16e0:	ldr	x0, [sp, #40]
    16e4:	bl	15bc <_ZL18DecodeVecShiftRImmRN4llvm6MCInstEjj>
    16e8:	ldp	x29, x30, [sp], #48
    16ec:	ret

00000000000016f0 <_ZL26DecodeVecShiftR32ImmNarrowRN4llvm6MCInstEjmPKv>:
    16f0:	stp	x29, x30, [sp, #-48]!
    16f4:	mov	x29, sp
    16f8:	str	x0, [sp, #40]
    16fc:	str	w1, [sp, #36]
    1700:	str	x2, [sp, #24]
    1704:	str	x3, [sp, #16]
    1708:	ldr	w0, [sp, #36]
    170c:	orr	w0, w0, #0x10
    1710:	mov	w2, #0x20                  	// #32
    1714:	mov	w1, w0
    1718:	ldr	x0, [sp, #40]
    171c:	bl	15bc <_ZL18DecodeVecShiftRImmRN4llvm6MCInstEjj>
    1720:	ldp	x29, x30, [sp], #48
    1724:	ret

0000000000001728 <_ZL20DecodeVecShiftR16ImmRN4llvm6MCInstEjmPKv>:
    1728:	stp	x29, x30, [sp, #-48]!
    172c:	mov	x29, sp
    1730:	str	x0, [sp, #40]
    1734:	str	w1, [sp, #36]
    1738:	str	x2, [sp, #24]
    173c:	str	x3, [sp, #16]
    1740:	mov	w2, #0x10                  	// #16
    1744:	ldr	w1, [sp, #36]
    1748:	ldr	x0, [sp, #40]
    174c:	bl	15bc <_ZL18DecodeVecShiftRImmRN4llvm6MCInstEjj>
    1750:	ldp	x29, x30, [sp], #48
    1754:	ret

0000000000001758 <_ZL26DecodeVecShiftR16ImmNarrowRN4llvm6MCInstEjmPKv>:
    1758:	stp	x29, x30, [sp, #-48]!
    175c:	mov	x29, sp
    1760:	str	x0, [sp, #40]
    1764:	str	w1, [sp, #36]
    1768:	str	x2, [sp, #24]
    176c:	str	x3, [sp, #16]
    1770:	ldr	w0, [sp, #36]
    1774:	orr	w0, w0, #0x8
    1778:	mov	w2, #0x10                  	// #16
    177c:	mov	w1, w0
    1780:	ldr	x0, [sp, #40]
    1784:	bl	15bc <_ZL18DecodeVecShiftRImmRN4llvm6MCInstEjj>
    1788:	ldp	x29, x30, [sp], #48
    178c:	ret

0000000000001790 <_ZL19DecodeVecShiftR8ImmRN4llvm6MCInstEjmPKv>:
    1790:	stp	x29, x30, [sp, #-48]!
    1794:	mov	x29, sp
    1798:	str	x0, [sp, #40]
    179c:	str	w1, [sp, #36]
    17a0:	str	x2, [sp, #24]
    17a4:	str	x3, [sp, #16]
    17a8:	mov	w2, #0x8                   	// #8
    17ac:	ldr	w1, [sp, #36]
    17b0:	ldr	x0, [sp, #40]
    17b4:	bl	15bc <_ZL18DecodeVecShiftRImmRN4llvm6MCInstEjj>
    17b8:	ldp	x29, x30, [sp], #48
    17bc:	ret

00000000000017c0 <_ZL20DecodeVecShiftL64ImmRN4llvm6MCInstEjmPKv>:
    17c0:	stp	x29, x30, [sp, #-48]!
    17c4:	mov	x29, sp
    17c8:	str	x0, [sp, #40]
    17cc:	str	w1, [sp, #36]
    17d0:	str	x2, [sp, #24]
    17d4:	str	x3, [sp, #16]
    17d8:	mov	w2, #0x40                  	// #64
    17dc:	ldr	w1, [sp, #36]
    17e0:	ldr	x0, [sp, #40]
    17e4:	bl	1604 <_ZL18DecodeVecShiftLImmRN4llvm6MCInstEjj>
    17e8:	ldp	x29, x30, [sp], #48
    17ec:	ret

00000000000017f0 <_ZL20DecodeVecShiftL32ImmRN4llvm6MCInstEjmPKv>:
    17f0:	stp	x29, x30, [sp, #-48]!
    17f4:	mov	x29, sp
    17f8:	str	x0, [sp, #40]
    17fc:	str	w1, [sp, #36]
    1800:	str	x2, [sp, #24]
    1804:	str	x3, [sp, #16]
    1808:	mov	w2, #0x20                  	// #32
    180c:	ldr	w1, [sp, #36]
    1810:	ldr	x0, [sp, #40]
    1814:	bl	1604 <_ZL18DecodeVecShiftLImmRN4llvm6MCInstEjj>
    1818:	ldp	x29, x30, [sp], #48
    181c:	ret

0000000000001820 <_ZL20DecodeVecShiftL16ImmRN4llvm6MCInstEjmPKv>:
    1820:	stp	x29, x30, [sp, #-48]!
    1824:	mov	x29, sp
    1828:	str	x0, [sp, #40]
    182c:	str	w1, [sp, #36]
    1830:	str	x2, [sp, #24]
    1834:	str	x3, [sp, #16]
    1838:	mov	w2, #0x10                  	// #16
    183c:	ldr	w1, [sp, #36]
    1840:	ldr	x0, [sp, #40]
    1844:	bl	1604 <_ZL18DecodeVecShiftLImmRN4llvm6MCInstEjj>
    1848:	ldp	x29, x30, [sp], #48
    184c:	ret

0000000000001850 <_ZL19DecodeVecShiftL8ImmRN4llvm6MCInstEjmPKv>:
    1850:	stp	x29, x30, [sp, #-48]!
    1854:	mov	x29, sp
    1858:	str	x0, [sp, #40]
    185c:	str	w1, [sp, #36]
    1860:	str	x2, [sp, #24]
    1864:	str	x3, [sp, #16]
    1868:	mov	w2, #0x8                   	// #8
    186c:	ldr	w1, [sp, #36]
    1870:	ldr	x0, [sp, #40]
    1874:	bl	1604 <_ZL18DecodeVecShiftLImmRN4llvm6MCInstEjj>
    1878:	ldp	x29, x30, [sp], #48
    187c:	ret

0000000000001880 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv>:
    1880:	stp	x29, x30, [sp, #-96]!
    1884:	mov	x29, sp
    1888:	str	x0, [sp, #40]
    188c:	str	w1, [sp, #36]
    1890:	str	x2, [sp, #24]
    1894:	str	x3, [sp, #16]
    1898:	mov	w2, #0x5                   	// #5
    189c:	mov	w1, #0x0                   	// #0
    18a0:	ldr	w0, [sp, #36]
    18a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    18a8:	str	w0, [sp, #92]
    18ac:	mov	w2, #0x5                   	// #5
    18b0:	mov	w1, #0x5                   	// #5
    18b4:	ldr	w0, [sp, #36]
    18b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    18bc:	str	w0, [sp, #88]
    18c0:	mov	w2, #0x5                   	// #5
    18c4:	mov	w1, #0x10                  	// #16
    18c8:	ldr	w0, [sp, #36]
    18cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    18d0:	str	w0, [sp, #84]
    18d4:	mov	w2, #0x2                   	// #2
    18d8:	mov	w1, #0x16                  	// #22
    18dc:	ldr	w0, [sp, #36]
    18e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    18e4:	str	w0, [sp, #80]
    18e8:	mov	w2, #0x6                   	// #6
    18ec:	mov	w1, #0xa                   	// #10
    18f0:	ldr	w0, [sp, #36]
    18f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    18f8:	str	w0, [sp, #76]
    18fc:	ldr	w0, [sp, #80]
    1900:	lsl	w0, w0, #6
    1904:	ldr	w1, [sp, #76]
    1908:	orr	w0, w1, w0
    190c:	str	w0, [sp, #72]
    1910:	ldr	x0, [sp, #40]
    1914:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1918:	mov	w1, #0x115e                	// #4446
    191c:	cmp	w0, w1
    1920:	b.eq	1b1c <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x29c>  // b.none
    1924:	mov	w1, #0x115e                	// #4446
    1928:	cmp	w0, w1
    192c:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1930:	mov	w1, #0x115a                	// #4442
    1934:	cmp	w0, w1
    1938:	b.eq	1ab0 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x230>  // b.none
    193c:	mov	w1, #0x115a                	// #4442
    1940:	cmp	w0, w1
    1944:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1948:	mov	w1, #0x1155                	// #4437
    194c:	cmp	w0, w1
    1950:	b.eq	1b1c <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x29c>  // b.none
    1954:	mov	w1, #0x1155                	// #4437
    1958:	cmp	w0, w1
    195c:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1960:	mov	w1, #0x1151                	// #4433
    1964:	cmp	w0, w1
    1968:	b.eq	1ab0 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x230>  // b.none
    196c:	mov	w1, #0x1151                	// #4433
    1970:	cmp	w0, w1
    1974:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1978:	cmp	w0, #0xb45
    197c:	b.eq	1b30 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x2b0>  // b.none
    1980:	cmp	w0, #0xb45
    1984:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1988:	cmp	w0, #0xb42
    198c:	b.eq	1ac4 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x244>  // b.none
    1990:	cmp	w0, #0xb42
    1994:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1998:	cmp	w0, #0xb3b
    199c:	b.eq	1b30 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x2b0>  // b.none
    19a0:	cmp	w0, #0xb3b
    19a4:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    19a8:	cmp	w0, #0xb39
    19ac:	b.eq	1ac4 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x244>  // b.none
    19b0:	cmp	w0, #0xb39
    19b4:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    19b8:	cmp	w0, #0x370
    19bc:	b.eq	1b30 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x2b0>  // b.none
    19c0:	cmp	w0, #0x370
    19c4:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    19c8:	cmp	w0, #0x36d
    19cc:	b.eq	1ac4 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x244>  // b.none
    19d0:	cmp	w0, #0x36d
    19d4:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    19d8:	cmp	w0, #0x35b
    19dc:	b.eq	1b30 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x2b0>  // b.none
    19e0:	cmp	w0, #0x35b
    19e4:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    19e8:	cmp	w0, #0x359
    19ec:	b.eq	1ac4 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x244>  // b.none
    19f0:	cmp	w0, #0x359
    19f4:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    19f8:	cmp	w0, #0x19b
    19fc:	b.eq	1b30 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x2b0>  // b.none
    1a00:	cmp	w0, #0x19b
    1a04:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1a08:	cmp	w0, #0x199
    1a0c:	b.eq	1ac4 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x244>  // b.none
    1a10:	cmp	w0, #0x199
    1a14:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1a18:	cmp	w0, #0x196
    1a1c:	b.eq	1b30 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x2b0>  // b.none
    1a20:	cmp	w0, #0x196
    1a24:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1a28:	cmp	w0, #0x194
    1a2c:	b.eq	1ac4 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x244>  // b.none
    1a30:	cmp	w0, #0x194
    1a34:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1a38:	cmp	w0, #0x14d
    1a3c:	b.eq	1b30 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x2b0>  // b.none
    1a40:	cmp	w0, #0x14d
    1a44:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1a48:	cmp	w0, #0x14a
    1a4c:	b.eq	1ac4 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x244>  // b.none
    1a50:	cmp	w0, #0x14a
    1a54:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1a58:	cmp	w0, #0x142
    1a5c:	b.eq	1b30 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x2b0>  // b.none
    1a60:	cmp	w0, #0x142
    1a64:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1a68:	cmp	w0, #0x13f
    1a6c:	b.eq	1ac4 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x244>  // b.none
    1a70:	cmp	w0, #0x13f
    1a74:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1a78:	cmp	w0, #0x107
    1a7c:	b.eq	1b1c <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x29c>  // b.none
    1a80:	cmp	w0, #0x107
    1a84:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1a88:	cmp	w0, #0x103
    1a8c:	b.eq	1ab0 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x230>  // b.none
    1a90:	cmp	w0, #0x103
    1a94:	b.hi	1aa8 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x228>  // b.pmore
    1a98:	cmp	w0, #0xf4
    1a9c:	b.eq	1ab0 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x230>  // b.none
    1aa0:	cmp	w0, #0xf8
    1aa4:	b.eq	1b1c <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x29c>  // b.none
    1aa8:	mov	w0, #0x0                   	// #0
    1aac:	b	1b90 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x310>
    1ab0:	ldr	w0, [sp, #80]
    1ab4:	cmp	w0, #0x3
    1ab8:	b.ne	1ac4 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x244>  // b.any
    1abc:	mov	w0, #0x0                   	// #0
    1ac0:	b	1b90 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x310>
    1ac4:	ldr	w0, [sp, #76]
    1ac8:	lsr	w0, w0, #5
    1acc:	cmp	w0, #0x1
    1ad0:	b.ne	1adc <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x25c>  // b.any
    1ad4:	mov	w0, #0x0                   	// #0
    1ad8:	b	1b90 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x310>
    1adc:	ldr	x3, [sp, #16]
    1ae0:	ldr	x2, [sp, #24]
    1ae4:	ldr	w1, [sp, #92]
    1ae8:	ldr	x0, [sp, #40]
    1aec:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    1af0:	ldr	x3, [sp, #16]
    1af4:	ldr	x2, [sp, #24]
    1af8:	ldr	w1, [sp, #88]
    1afc:	ldr	x0, [sp, #40]
    1b00:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    1b04:	ldr	x3, [sp, #16]
    1b08:	ldr	x2, [sp, #24]
    1b0c:	ldr	w1, [sp, #84]
    1b10:	ldr	x0, [sp, #40]
    1b14:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    1b18:	b	1b70 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x2f0>
    1b1c:	ldr	w0, [sp, #80]
    1b20:	cmp	w0, #0x3
    1b24:	b.ne	1b30 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x2b0>  // b.any
    1b28:	mov	w0, #0x0                   	// #0
    1b2c:	b	1b90 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv+0x310>
    1b30:	ldr	x3, [sp, #16]
    1b34:	ldr	x2, [sp, #24]
    1b38:	ldr	w1, [sp, #92]
    1b3c:	ldr	x0, [sp, #40]
    1b40:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    1b44:	ldr	x3, [sp, #16]
    1b48:	ldr	x2, [sp, #24]
    1b4c:	ldr	w1, [sp, #88]
    1b50:	ldr	x0, [sp, #40]
    1b54:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    1b58:	ldr	x3, [sp, #16]
    1b5c:	ldr	x2, [sp, #24]
    1b60:	ldr	w1, [sp, #84]
    1b64:	ldr	x0, [sp, #40]
    1b68:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    1b6c:	nop
    1b70:	ldr	w0, [sp, #72]
    1b74:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1b78:	stp	x0, x1, [sp, #56]
    1b7c:	add	x0, sp, #0x38
    1b80:	mov	x1, x0
    1b84:	ldr	x0, [sp, #40]
    1b88:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1b8c:	mov	w0, #0x3                   	// #3
    1b90:	ldp	x29, x30, [sp], #96
    1b94:	ret

0000000000001b98 <_ZL24DecodeMoveImmInstructionRN4llvm6MCInstEjmPKv>:
    1b98:	stp	x29, x30, [sp, #-96]!
    1b9c:	mov	x29, sp
    1ba0:	str	x0, [sp, #40]
    1ba4:	str	w1, [sp, #36]
    1ba8:	str	x2, [sp, #24]
    1bac:	str	x3, [sp, #16]
    1bb0:	mov	w2, #0x5                   	// #5
    1bb4:	mov	w1, #0x0                   	// #0
    1bb8:	ldr	w0, [sp, #36]
    1bbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    1bc0:	str	w0, [sp, #92]
    1bc4:	mov	w2, #0x10                  	// #16
    1bc8:	mov	w1, #0x5                   	// #5
    1bcc:	ldr	w0, [sp, #36]
    1bd0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    1bd4:	str	w0, [sp, #88]
    1bd8:	mov	w2, #0x2                   	// #2
    1bdc:	mov	w1, #0x15                  	// #21
    1be0:	ldr	w0, [sp, #36]
    1be4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    1be8:	str	w0, [sp, #84]
    1bec:	ldr	w0, [sp, #84]
    1bf0:	lsl	w0, w0, #4
    1bf4:	str	w0, [sp, #84]
    1bf8:	ldr	x0, [sp, #40]
    1bfc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1c00:	sub	w0, w0, #0xadc
    1c04:	cmp	w0, #0xf
    1c08:	cset	w1, hi  // hi = pmore
    1c0c:	and	w1, w1, #0xff
    1c10:	cmp	w1, #0x0
    1c14:	b.ne	1c58 <_ZL24DecodeMoveImmInstructionRN4llvm6MCInstEjmPKv+0xc0>  // b.any
    1c18:	mov	x1, #0x1                   	// #1
    1c1c:	lsl	x0, x1, x0
    1c20:	mov	x1, #0x8012                	// #32786
    1c24:	and	x1, x0, x1
    1c28:	cmp	x1, #0x0
    1c2c:	cset	w1, ne  // ne = any
    1c30:	and	w1, w1, #0xff
    1c34:	cmp	w1, #0x0
    1c38:	b.ne	1c90 <_ZL24DecodeMoveImmInstructionRN4llvm6MCInstEjmPKv+0xf8>  // b.any
    1c3c:	mov	x1, #0x4009                	// #16393
    1c40:	and	x0, x0, x1
    1c44:	cmp	x0, #0x0
    1c48:	cset	w0, ne  // ne = any
    1c4c:	and	w0, w0, #0xff
    1c50:	cmp	w0, #0x0
    1c54:	b.ne	1c60 <_ZL24DecodeMoveImmInstructionRN4llvm6MCInstEjmPKv+0xc8>  // b.any
    1c58:	mov	w0, #0x0                   	// #0
    1c5c:	b	1d30 <_ZL24DecodeMoveImmInstructionRN4llvm6MCInstEjmPKv+0x198>
    1c60:	ldr	w0, [sp, #84]
    1c64:	and	w0, w0, #0x20
    1c68:	cmp	w0, #0x0
    1c6c:	b.eq	1c78 <_ZL24DecodeMoveImmInstructionRN4llvm6MCInstEjmPKv+0xe0>  // b.none
    1c70:	mov	w0, #0x0                   	// #0
    1c74:	b	1d30 <_ZL24DecodeMoveImmInstructionRN4llvm6MCInstEjmPKv+0x198>
    1c78:	ldr	x3, [sp, #16]
    1c7c:	ldr	x2, [sp, #24]
    1c80:	ldr	w1, [sp, #92]
    1c84:	ldr	x0, [sp, #40]
    1c88:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    1c8c:	b	1ca8 <_ZL24DecodeMoveImmInstructionRN4llvm6MCInstEjmPKv+0x110>
    1c90:	ldr	x3, [sp, #16]
    1c94:	ldr	x2, [sp, #24]
    1c98:	ldr	w1, [sp, #92]
    1c9c:	ldr	x0, [sp, #40]
    1ca0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    1ca4:	nop
    1ca8:	ldr	x0, [sp, #40]
    1cac:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1cb0:	cmp	w0, #0xadc
    1cb4:	b.eq	1cc8 <_ZL24DecodeMoveImmInstructionRN4llvm6MCInstEjmPKv+0x130>  // b.none
    1cb8:	ldr	x0, [sp, #40]
    1cbc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1cc0:	cmp	w0, #0xadd
    1cc4:	b.ne	1cd0 <_ZL24DecodeMoveImmInstructionRN4llvm6MCInstEjmPKv+0x138>  // b.any
    1cc8:	mov	w0, #0x1                   	// #1
    1ccc:	b	1cd4 <_ZL24DecodeMoveImmInstructionRN4llvm6MCInstEjmPKv+0x13c>
    1cd0:	mov	w0, #0x0                   	// #0
    1cd4:	cmp	w0, #0x0
    1cd8:	b.eq	1cf4 <_ZL24DecodeMoveImmInstructionRN4llvm6MCInstEjmPKv+0x15c>  // b.none
    1cdc:	mov	w1, #0x0                   	// #0
    1ce0:	ldr	x0, [sp, #40]
    1ce4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1ce8:	mov	x1, x0
    1cec:	ldr	x0, [sp, #40]
    1cf0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1cf4:	ldr	w0, [sp, #88]
    1cf8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1cfc:	stp	x0, x1, [sp, #48]
    1d00:	add	x0, sp, #0x30
    1d04:	mov	x1, x0
    1d08:	ldr	x0, [sp, #40]
    1d0c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1d10:	ldr	w0, [sp, #84]
    1d14:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1d18:	stp	x0, x1, [sp, #64]
    1d1c:	add	x0, sp, #0x40
    1d20:	mov	x1, x0
    1d24:	ldr	x0, [sp, #40]
    1d28:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1d2c:	mov	w0, #0x3                   	// #3
    1d30:	ldp	x29, x30, [sp], #96
    1d34:	ret

0000000000001d38 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv>:
    1d38:	stp	x29, x30, [sp, #-112]!
    1d3c:	mov	x29, sp
    1d40:	str	x0, [sp, #40]
    1d44:	str	w1, [sp, #36]
    1d48:	str	x2, [sp, #24]
    1d4c:	str	x3, [sp, #16]
    1d50:	mov	w2, #0x5                   	// #5
    1d54:	mov	w1, #0x0                   	// #0
    1d58:	ldr	w0, [sp, #36]
    1d5c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    1d60:	str	w0, [sp, #108]
    1d64:	mov	w2, #0x5                   	// #5
    1d68:	mov	w1, #0x5                   	// #5
    1d6c:	ldr	w0, [sp, #36]
    1d70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    1d74:	str	w0, [sp, #104]
    1d78:	mov	w2, #0xc                   	// #12
    1d7c:	mov	w1, #0xa                   	// #10
    1d80:	ldr	w0, [sp, #36]
    1d84:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    1d88:	str	w0, [sp, #100]
    1d8c:	ldr	x0, [sp, #16]
    1d90:	str	x0, [sp, #88]
    1d94:	ldr	x0, [sp, #40]
    1d98:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1d9c:	mov	w1, #0x111a                	// #4378
    1da0:	cmp	w0, w1
    1da4:	b.eq	1f90 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x258>  // b.none
    1da8:	mov	w1, #0x111a                	// #4378
    1dac:	cmp	w0, w1
    1db0:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1db4:	mov	w1, #0x1115                	// #4373
    1db8:	cmp	w0, w1
    1dbc:	b.eq	1f78 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x240>  // b.none
    1dc0:	mov	w1, #0x1115                	// #4373
    1dc4:	cmp	w0, w1
    1dc8:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1dcc:	mov	w1, #0x1110                	// #4368
    1dd0:	cmp	w0, w1
    1dd4:	b.eq	1fd8 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2a0>  // b.none
    1dd8:	mov	w1, #0x1110                	// #4368
    1ddc:	cmp	w0, w1
    1de0:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1de4:	mov	w1, #0x110b                	// #4363
    1de8:	cmp	w0, w1
    1dec:	b.eq	1fa8 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x270>  // b.none
    1df0:	mov	w1, #0x110b                	// #4363
    1df4:	cmp	w0, w1
    1df8:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1dfc:	mov	w1, #0x1106                	// #4358
    1e00:	cmp	w0, w1
    1e04:	b.eq	1ff0 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2b8>  // b.none
    1e08:	mov	w1, #0x1106                	// #4358
    1e0c:	cmp	w0, w1
    1e10:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1e14:	mov	w1, #0x1101                	// #4353
    1e18:	cmp	w0, w1
    1e1c:	b.eq	1f78 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x240>  // b.none
    1e20:	mov	w1, #0x1101                	// #4353
    1e24:	cmp	w0, w1
    1e28:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1e2c:	mov	w1, #0x10fc                	// #4348
    1e30:	cmp	w0, w1
    1e34:	b.eq	1fc0 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x288>  // b.none
    1e38:	mov	w1, #0x10fc                	// #4348
    1e3c:	cmp	w0, w1
    1e40:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1e44:	mov	w1, #0x10f7                	// #4343
    1e48:	cmp	w0, w1
    1e4c:	b.eq	2008 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2d0>  // b.none
    1e50:	mov	w1, #0x10f7                	// #4343
    1e54:	cmp	w0, w1
    1e58:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1e5c:	mov	w1, #0x10f2                	// #4338
    1e60:	cmp	w0, w1
    1e64:	b.eq	1f78 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x240>  // b.none
    1e68:	mov	w1, #0x10f2                	// #4338
    1e6c:	cmp	w0, w1
    1e70:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1e74:	cmp	w0, #0xb97
    1e78:	b.eq	1f58 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x220>  // b.none
    1e7c:	cmp	w0, #0xb97
    1e80:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1e84:	cmp	w0, #0xa07
    1e88:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1e8c:	cmp	w0, #0x9e0
    1e90:	b.cs	1ee8 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x1b0>  // b.hs, b.nlast
    1e94:	cmp	w0, #0x9db
    1e98:	b.eq	1fa8 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x270>  // b.none
    1e9c:	cmp	w0, #0x9db
    1ea0:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1ea4:	cmp	w0, #0x9d5
    1ea8:	b.eq	1ff0 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2b8>  // b.none
    1eac:	cmp	w0, #0x9d5
    1eb0:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1eb4:	cmp	w0, #0x9d0
    1eb8:	b.eq	1f78 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x240>  // b.none
    1ebc:	cmp	w0, #0x9d0
    1ec0:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1ec4:	cmp	w0, #0x9cb
    1ec8:	b.eq	1fc0 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x288>  // b.none
    1ecc:	cmp	w0, #0x9cb
    1ed0:	b.hi	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>  // b.pmore
    1ed4:	cmp	w0, #0x9c0
    1ed8:	b.eq	1f78 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x240>  // b.none
    1edc:	cmp	w0, #0x9c5
    1ee0:	b.eq	2008 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2d0>  // b.none
    1ee4:	b	1f50 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x218>
    1ee8:	sub	w0, w0, #0x9e0
    1eec:	mov	x1, #0x1                   	// #1
    1ef0:	lsl	x0, x1, x0
    1ef4:	mov	x1, #0x8020                	// #32800
    1ef8:	movk	x1, #0x20, lsl #16
    1efc:	movk	x1, #0x80, lsl #32
    1f00:	and	x1, x0, x1
    1f04:	cmp	x1, #0x0
    1f08:	cset	w1, ne  // ne = any
    1f0c:	and	w1, w1, #0xff
    1f10:	cmp	w1, #0x0
    1f14:	b.ne	1f90 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x258>  // b.any
    1f18:	mov	x1, #0x401                 	// #1025
    1f1c:	movk	x1, #0x2, lsl #32
    1f20:	and	x1, x0, x1
    1f24:	cmp	x1, #0x0
    1f28:	cset	w1, ne  // ne = any
    1f2c:	and	w1, w1, #0xff
    1f30:	cmp	w1, #0x0
    1f34:	b.ne	1f78 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x240>  // b.any
    1f38:	and	x0, x0, #0x8000000
    1f3c:	cmp	x0, #0x0
    1f40:	cset	w0, ne  // ne = any
    1f44:	and	w0, w0, #0xff
    1f48:	cmp	w0, #0x0
    1f4c:	b.ne	1fd8 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2a0>  // b.any
    1f50:	mov	w0, #0x0                   	// #0
    1f54:	b	208c <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x354>
    1f58:	ldr	w0, [sp, #108]
    1f5c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1f60:	stp	x0, x1, [sp, #56]
    1f64:	add	x0, sp, #0x38
    1f68:	mov	x1, x0
    1f6c:	ldr	x0, [sp, #40]
    1f70:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    1f74:	b	2020 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2e8>
    1f78:	ldr	x3, [sp, #16]
    1f7c:	ldr	x2, [sp, #24]
    1f80:	ldr	w1, [sp, #108]
    1f84:	ldr	x0, [sp, #40]
    1f88:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    1f8c:	b	2020 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2e8>
    1f90:	ldr	x3, [sp, #16]
    1f94:	ldr	x2, [sp, #24]
    1f98:	ldr	w1, [sp, #108]
    1f9c:	ldr	x0, [sp, #40]
    1fa0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    1fa4:	b	2020 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2e8>
    1fa8:	ldr	x3, [sp, #16]
    1fac:	ldr	x2, [sp, #24]
    1fb0:	ldr	w1, [sp, #108]
    1fb4:	ldr	x0, [sp, #40]
    1fb8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
    1fbc:	b	2020 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2e8>
    1fc0:	ldr	x3, [sp, #16]
    1fc4:	ldr	x2, [sp, #24]
    1fc8:	ldr	w1, [sp, #108]
    1fcc:	ldr	x0, [sp, #40]
    1fd0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
    1fd4:	b	2020 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2e8>
    1fd8:	ldr	x3, [sp, #16]
    1fdc:	ldr	x2, [sp, #24]
    1fe0:	ldr	w1, [sp, #108]
    1fe4:	ldr	x0, [sp, #40]
    1fe8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
    1fec:	b	2020 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2e8>
    1ff0:	ldr	x3, [sp, #16]
    1ff4:	ldr	x2, [sp, #24]
    1ff8:	ldr	w1, [sp, #108]
    1ffc:	ldr	x0, [sp, #40]
    2000:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
    2004:	b	2020 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2e8>
    2008:	ldr	x3, [sp, #16]
    200c:	ldr	x2, [sp, #24]
    2010:	ldr	w1, [sp, #108]
    2014:	ldr	x0, [sp, #40]
    2018:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
    201c:	nop
    2020:	ldr	x3, [sp, #16]
    2024:	ldr	x2, [sp, #24]
    2028:	ldr	w1, [sp, #104]
    202c:	ldr	x0, [sp, #40]
    2030:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    2034:	ldr	x0, [sp, #88]
    2038:	ldr	w1, [sp, #100]
    203c:	mov	x6, #0x4                   	// #4
    2040:	mov	x5, #0x0                   	// #0
    2044:	mov	w4, #0x0                   	// #0
    2048:	ldr	x3, [sp, #24]
    204c:	mov	x2, x1
    2050:	ldr	x1, [sp, #40]
    2054:	bl	0 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm>
    2058:	and	w0, w0, #0xff
    205c:	eor	w0, w0, #0x1
    2060:	and	w0, w0, #0xff
    2064:	cmp	w0, #0x0
    2068:	b.eq	2088 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv+0x350>  // b.none
    206c:	ldr	w0, [sp, #100]
    2070:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    2074:	stp	x0, x1, [sp, #72]
    2078:	add	x0, sp, #0x48
    207c:	mov	x1, x0
    2080:	ldr	x0, [sp, #40]
    2084:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    2088:	mov	w0, #0x3                   	// #3
    208c:	ldp	x29, x30, [sp], #112
    2090:	ret

0000000000002094 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv>:
    2094:	stp	x29, x30, [sp, #-112]!
    2098:	mov	x29, sp
    209c:	str	x0, [sp, #40]
    20a0:	str	w1, [sp, #36]
    20a4:	str	x2, [sp, #24]
    20a8:	str	x3, [sp, #16]
    20ac:	mov	w2, #0x5                   	// #5
    20b0:	mov	w1, #0x0                   	// #0
    20b4:	ldr	w0, [sp, #36]
    20b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    20bc:	str	w0, [sp, #100]
    20c0:	mov	w2, #0x5                   	// #5
    20c4:	mov	w1, #0x5                   	// #5
    20c8:	ldr	w0, [sp, #36]
    20cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    20d0:	str	w0, [sp, #96]
    20d4:	mov	w2, #0x9                   	// #9
    20d8:	mov	w1, #0xc                   	// #12
    20dc:	ldr	w0, [sp, #36]
    20e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    20e4:	mov	w0, w0
    20e8:	str	x0, [sp, #104]
    20ec:	ldr	x0, [sp, #104]
    20f0:	and	x0, x0, #0x100
    20f4:	cmp	x0, #0x0
    20f8:	b.eq	2108 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x74>  // b.none
    20fc:	ldr	x0, [sp, #104]
    2100:	orr	x0, x0, #0xfffffffffffffe00
    2104:	str	x0, [sp, #104]
    2108:	ldr	x0, [sp, #40]
    210c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    2110:	mov	w1, #0x1117                	// #4375
    2114:	cmp	w0, w1
    2118:	b.hi	21e0 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x14c>  // b.pmore
    211c:	mov	w1, #0x10ee                	// #4334
    2120:	cmp	w0, w1
    2124:	b.cs	214c <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0xb8>  // b.hs, b.nlast
    2128:	cmp	w0, #0xa04
    212c:	b.hi	21e0 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x14c>  // b.pmore
    2130:	cmp	w0, #0x9c7
    2134:	b.cs	2184 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0xf0>  // b.hs, b.nlast
    2138:	cmp	w0, #0x9bd
    213c:	b.hi	21bc <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x128>  // b.pmore
    2140:	cmp	w0, #0x9bc
    2144:	b.cs	21c8 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x134>  // b.hs, b.nlast
    2148:	b	21e0 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x14c>
    214c:	mov	w1, #0xffffef12            	// #-4334
    2150:	add	w0, w0, w1
    2154:	mov	x1, #0x1                   	// #1
    2158:	lsl	x1, x1, x0
    215c:	mov	x0, #0x8c63                	// #35939
    2160:	movk	x0, #0xc631, lsl #16
    2164:	movk	x0, #0x318, lsl #32
    2168:	and	x0, x1, x0
    216c:	cmp	x0, #0x0
    2170:	cset	w0, ne  // ne = any
    2174:	and	w0, w0, #0xff
    2178:	cmp	w0, #0x0
    217c:	b.ne	21c8 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x134>  // b.any
    2180:	b	21e0 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x14c>
    2184:	sub	w0, w0, #0x9c7
    2188:	mov	x1, #0x1                   	// #1
    218c:	lsl	x1, x1, x0
    2190:	mov	x0, #0xc63                 	// #3171
    2194:	movk	x0, #0x8c63, lsl #16
    2198:	movk	x0, #0xc31, lsl #32
    219c:	movk	x0, #0x30c3, lsl #48
    21a0:	and	x0, x1, x0
    21a4:	cmp	x0, #0x0
    21a8:	cset	w0, ne  // ne = any
    21ac:	and	w0, w0, #0xff
    21b0:	cmp	w0, #0x0
    21b4:	b.ne	21c8 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x134>  // b.any
    21b8:	b	21e0 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x14c>
    21bc:	sub	w0, w0, #0x9c1
    21c0:	cmp	w0, #0x1
    21c4:	b.hi	21e0 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x14c>  // b.pmore
    21c8:	ldr	x3, [sp, #16]
    21cc:	ldr	x2, [sp, #24]
    21d0:	ldr	w1, [sp, #96]
    21d4:	ldr	x0, [sp, #40]
    21d8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    21dc:	b	21e4 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x150>
    21e0:	nop
    21e4:	ldr	x0, [sp, #40]
    21e8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    21ec:	mov	w1, #0x1129                	// #4393
    21f0:	cmp	w0, w1
    21f4:	b.hi	226c <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x1d8>  // b.pmore
    21f8:	mov	w1, #0x10c1                	// #4289
    21fc:	cmp	w0, w1
    2200:	b.cs	2218 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x184>  // b.hs, b.nlast
    2204:	cmp	w0, #0xa70
    2208:	b.hi	2264 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x1d0>  // b.pmore
    220c:	cmp	w0, #0x934
    2210:	b.cs	2240 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x1ac>  // b.hs, b.nlast
    2214:	b	226c <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x1d8>
    2218:	mov	w1, #0xffffef3f            	// #-4289
    221c:	add	w0, w0, w1
    2220:	cmp	w0, #0x68
    2224:	b.hi	226c <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x1d8>  // b.pmore
    2228:	adrp	x1, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    222c:	add	x1, x1, #0x0
    2230:	ldr	w0, [x1, w0, uxtw #2]
    2234:	adr	x1, 2240 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x1ac>
    2238:	add	x0, x1, w0, sxtw #2
    223c:	br	x0
    2240:	sub	w0, w0, #0x934
    2244:	cmp	w0, #0x13c
    2248:	b.hi	226c <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x1d8>  // b.pmore
    224c:	adrp	x1, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    2250:	add	x1, x1, #0x0
    2254:	ldr	w0, [x1, w0, uxtw #2]
    2258:	adr	x1, 2264 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x1d0>
    225c:	add	x0, x1, w0, sxtw #2
    2260:	br	x0
    2264:	cmp	w0, #0xb99
    2268:	b.eq	2274 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x1e0>  // b.none
    226c:	mov	w0, #0x0                   	// #0
    2270:	b	2414 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x380>
    2274:	ldr	w0, [sp, #100]
    2278:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    227c:	stp	x0, x1, [sp, #56]
    2280:	add	x0, sp, #0x38
    2284:	mov	x1, x0
    2288:	ldr	x0, [sp, #40]
    228c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    2290:	b	233c <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2a8>
    2294:	ldr	x3, [sp, #16]
    2298:	ldr	x2, [sp, #24]
    229c:	ldr	w1, [sp, #100]
    22a0:	ldr	x0, [sp, #40]
    22a4:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    22a8:	b	233c <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2a8>
    22ac:	ldr	x3, [sp, #16]
    22b0:	ldr	x2, [sp, #24]
    22b4:	ldr	w1, [sp, #100]
    22b8:	ldr	x0, [sp, #40]
    22bc:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    22c0:	b	233c <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2a8>
    22c4:	ldr	x3, [sp, #16]
    22c8:	ldr	x2, [sp, #24]
    22cc:	ldr	w1, [sp, #100]
    22d0:	ldr	x0, [sp, #40]
    22d4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
    22d8:	b	233c <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2a8>
    22dc:	ldr	x3, [sp, #16]
    22e0:	ldr	x2, [sp, #24]
    22e4:	ldr	w1, [sp, #100]
    22e8:	ldr	x0, [sp, #40]
    22ec:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
    22f0:	b	233c <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2a8>
    22f4:	ldr	x3, [sp, #16]
    22f8:	ldr	x2, [sp, #24]
    22fc:	ldr	w1, [sp, #100]
    2300:	ldr	x0, [sp, #40]
    2304:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
    2308:	b	233c <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2a8>
    230c:	ldr	x3, [sp, #16]
    2310:	ldr	x2, [sp, #24]
    2314:	ldr	w1, [sp, #100]
    2318:	ldr	x0, [sp, #40]
    231c:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
    2320:	b	233c <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x2a8>
    2324:	ldr	x3, [sp, #16]
    2328:	ldr	x2, [sp, #24]
    232c:	ldr	w1, [sp, #100]
    2330:	ldr	x0, [sp, #40]
    2334:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
    2338:	nop
    233c:	ldr	x3, [sp, #16]
    2340:	ldr	x2, [sp, #24]
    2344:	ldr	w1, [sp, #96]
    2348:	ldr	x0, [sp, #40]
    234c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    2350:	ldr	x0, [sp, #104]
    2354:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    2358:	stp	x0, x1, [sp, #72]
    235c:	add	x0, sp, #0x48
    2360:	mov	x1, x0
    2364:	ldr	x0, [sp, #40]
    2368:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    236c:	mov	w2, #0x1                   	// #1
    2370:	mov	w1, #0x16                  	// #22
    2374:	ldr	w0, [sp, #36]
    2378:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    237c:	cmp	w0, #0x0
    2380:	cset	w0, ne  // ne = any
    2384:	strb	w0, [sp, #95]
    2388:	mov	w2, #0x2                   	// #2
    238c:	mov	w1, #0xa                   	// #10
    2390:	ldr	w0, [sp, #36]
    2394:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    2398:	cmp	w0, #0x0
    239c:	cset	w0, ne  // ne = any
    23a0:	strb	w0, [sp, #94]
    23a4:	mov	w2, #0x1                   	// #1
    23a8:	mov	w1, #0x1a                  	// #26
    23ac:	ldr	w0, [sp, #36]
    23b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    23b4:	cmp	w0, #0x0
    23b8:	cset	w0, ne  // ne = any
    23bc:	strb	w0, [sp, #93]
    23c0:	ldrb	w0, [sp, #95]
    23c4:	cmp	w0, #0x0
    23c8:	b.eq	2410 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x37c>  // b.none
    23cc:	ldrb	w0, [sp, #94]
    23d0:	cmp	w0, #0x0
    23d4:	b.eq	2410 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x37c>  // b.none
    23d8:	ldrb	w0, [sp, #93]
    23dc:	eor	w0, w0, #0x1
    23e0:	and	w0, w0, #0xff
    23e4:	cmp	w0, #0x0
    23e8:	b.eq	2410 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x37c>  // b.none
    23ec:	ldr	w0, [sp, #96]
    23f0:	cmp	w0, #0x1f
    23f4:	b.eq	2410 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x37c>  // b.none
    23f8:	ldr	w1, [sp, #100]
    23fc:	ldr	w0, [sp, #96]
    2400:	cmp	w1, w0
    2404:	b.ne	2410 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x37c>  // b.any
    2408:	mov	w0, #0x1                   	// #1
    240c:	b	2414 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv+0x380>
    2410:	mov	w0, #0x3                   	// #3
    2414:	ldp	x29, x30, [sp], #112
    2418:	ret

000000000000241c <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv>:
    241c:	stp	x29, x30, [sp, #-80]!
    2420:	mov	x29, sp
    2424:	str	x0, [sp, #40]
    2428:	str	w1, [sp, #36]
    242c:	str	x2, [sp, #24]
    2430:	str	x3, [sp, #16]
    2434:	mov	w2, #0x5                   	// #5
    2438:	mov	w1, #0x0                   	// #0
    243c:	ldr	w0, [sp, #36]
    2440:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    2444:	str	w0, [sp, #76]
    2448:	mov	w2, #0x5                   	// #5
    244c:	mov	w1, #0x5                   	// #5
    2450:	ldr	w0, [sp, #36]
    2454:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    2458:	str	w0, [sp, #72]
    245c:	mov	w2, #0x5                   	// #5
    2460:	mov	w1, #0xa                   	// #10
    2464:	ldr	w0, [sp, #36]
    2468:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    246c:	str	w0, [sp, #68]
    2470:	mov	w2, #0x5                   	// #5
    2474:	mov	w1, #0x10                  	// #16
    2478:	ldr	w0, [sp, #36]
    247c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    2480:	str	w0, [sp, #64]
    2484:	ldr	x0, [sp, #40]
    2488:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    248c:	str	w0, [sp, #60]
    2490:	ldr	w1, [sp, #60]
    2494:	mov	w0, #0x112f                	// #4399
    2498:	cmp	w1, w0
    249c:	b.eq	275c <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x340>  // b.none
    24a0:	ldr	w1, [sp, #60]
    24a4:	mov	w0, #0x112f                	// #4399
    24a8:	cmp	w1, w0
    24ac:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    24b0:	ldr	w1, [sp, #60]
    24b4:	mov	w0, #0x112e                	// #4398
    24b8:	cmp	w1, w0
    24bc:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    24c0:	ldr	w1, [sp, #60]
    24c4:	mov	w0, #0x112c                	// #4396
    24c8:	cmp	w1, w0
    24cc:	b.cs	2730 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x314>  // b.hs, b.nlast
    24d0:	ldr	w1, [sp, #60]
    24d4:	mov	w0, #0x112b                	// #4395
    24d8:	cmp	w1, w0
    24dc:	b.eq	27c8 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x3ac>  // b.none
    24e0:	ldr	w1, [sp, #60]
    24e4:	mov	w0, #0x112b                	// #4395
    24e8:	cmp	w1, w0
    24ec:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    24f0:	ldr	w1, [sp, #60]
    24f4:	mov	w0, #0x112a                	// #4394
    24f8:	cmp	w1, w0
    24fc:	b.eq	2788 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x36c>  // b.none
    2500:	ldr	w1, [sp, #60]
    2504:	mov	w0, #0x112a                	// #4394
    2508:	cmp	w1, w0
    250c:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    2510:	ldr	w1, [sp, #60]
    2514:	mov	w0, #0x10ca                	// #4298
    2518:	cmp	w1, w0
    251c:	b.eq	275c <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x340>  // b.none
    2520:	ldr	w1, [sp, #60]
    2524:	mov	w0, #0x10ca                	// #4298
    2528:	cmp	w1, w0
    252c:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    2530:	ldr	w1, [sp, #60]
    2534:	mov	w0, #0x10c9                	// #4297
    2538:	cmp	w1, w0
    253c:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    2540:	ldr	w1, [sp, #60]
    2544:	mov	w0, #0x10c7                	// #4295
    2548:	cmp	w1, w0
    254c:	b.cs	2730 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x314>  // b.hs, b.nlast
    2550:	ldr	w1, [sp, #60]
    2554:	mov	w0, #0x10c6                	// #4294
    2558:	cmp	w1, w0
    255c:	b.eq	27c8 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x3ac>  // b.none
    2560:	ldr	w1, [sp, #60]
    2564:	mov	w0, #0x10c6                	// #4294
    2568:	cmp	w1, w0
    256c:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    2570:	ldr	w1, [sp, #60]
    2574:	mov	w0, #0x10c5                	// #4293
    2578:	cmp	w1, w0
    257c:	b.eq	2788 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x36c>  // b.none
    2580:	ldr	w1, [sp, #60]
    2584:	mov	w0, #0x10c5                	// #4293
    2588:	cmp	w1, w0
    258c:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    2590:	ldr	w1, [sp, #60]
    2594:	mov	w0, #0x10c0                	// #4288
    2598:	cmp	w1, w0
    259c:	b.eq	2770 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x354>  // b.none
    25a0:	ldr	w1, [sp, #60]
    25a4:	mov	w0, #0x10c0                	// #4288
    25a8:	cmp	w1, w0
    25ac:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    25b0:	ldr	w1, [sp, #60]
    25b4:	mov	w0, #0x10bf                	// #4287
    25b8:	cmp	w1, w0
    25bc:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    25c0:	ldr	w1, [sp, #60]
    25c4:	mov	w0, #0x10bd                	// #4285
    25c8:	cmp	w1, w0
    25cc:	b.cs	2744 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x328>  // b.hs, b.nlast
    25d0:	ldr	w1, [sp, #60]
    25d4:	mov	w0, #0x10bc                	// #4284
    25d8:	cmp	w1, w0
    25dc:	b.eq	2770 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x354>  // b.none
    25e0:	ldr	w1, [sp, #60]
    25e4:	mov	w0, #0x10bc                	// #4284
    25e8:	cmp	w1, w0
    25ec:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    25f0:	ldr	w1, [sp, #60]
    25f4:	mov	w0, #0x10bb                	// #4283
    25f8:	cmp	w1, w0
    25fc:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    2600:	ldr	w1, [sp, #60]
    2604:	mov	w0, #0x10b9                	// #4281
    2608:	cmp	w1, w0
    260c:	b.cs	2744 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x328>  // b.hs, b.nlast
    2610:	ldr	w0, [sp, #60]
    2614:	cmp	w0, #0xa76
    2618:	b.eq	2770 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x354>  // b.none
    261c:	ldr	w0, [sp, #60]
    2620:	cmp	w0, #0xa76
    2624:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    2628:	ldr	w0, [sp, #60]
    262c:	cmp	w0, #0xa75
    2630:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    2634:	ldr	w0, [sp, #60]
    2638:	cmp	w0, #0xa73
    263c:	b.cs	2744 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x328>  // b.hs, b.nlast
    2640:	ldr	w0, [sp, #60]
    2644:	cmp	w0, #0xa72
    2648:	b.eq	27dc <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x3c0>  // b.none
    264c:	ldr	w0, [sp, #60]
    2650:	cmp	w0, #0xa72
    2654:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    2658:	ldr	w0, [sp, #60]
    265c:	cmp	w0, #0xa71
    2660:	b.eq	279c <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x380>  // b.none
    2664:	ldr	w0, [sp, #60]
    2668:	cmp	w0, #0xa71
    266c:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    2670:	ldr	w0, [sp, #60]
    2674:	cmp	w0, #0x97c
    2678:	b.eq	2770 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x354>  // b.none
    267c:	ldr	w0, [sp, #60]
    2680:	cmp	w0, #0x97c
    2684:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    2688:	ldr	w0, [sp, #60]
    268c:	cmp	w0, #0x97b
    2690:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    2694:	ldr	w0, [sp, #60]
    2698:	cmp	w0, #0x979
    269c:	b.cs	2744 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x328>  // b.hs, b.nlast
    26a0:	ldr	w0, [sp, #60]
    26a4:	cmp	w0, #0x946
    26a8:	b.eq	2770 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x354>  // b.none
    26ac:	ldr	w0, [sp, #60]
    26b0:	cmp	w0, #0x946
    26b4:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    26b8:	ldr	w0, [sp, #60]
    26bc:	cmp	w0, #0x945
    26c0:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    26c4:	ldr	w0, [sp, #60]
    26c8:	cmp	w0, #0x943
    26cc:	b.cs	2744 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x328>  // b.hs, b.nlast
    26d0:	ldr	w0, [sp, #60]
    26d4:	cmp	w0, #0x942
    26d8:	b.eq	27dc <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x3c0>  // b.none
    26dc:	ldr	w0, [sp, #60]
    26e0:	cmp	w0, #0x942
    26e4:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    26e8:	ldr	w0, [sp, #60]
    26ec:	cmp	w0, #0x941
    26f0:	b.eq	279c <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x380>  // b.none
    26f4:	ldr	w0, [sp, #60]
    26f8:	cmp	w0, #0x941
    26fc:	b.hi	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>  // b.pmore
    2700:	ldr	w0, [sp, #60]
    2704:	cmp	w0, #0x93f
    2708:	b.hi	271c <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x300>  // b.pmore
    270c:	ldr	w0, [sp, #60]
    2710:	cmp	w0, #0x93d
    2714:	b.cs	2744 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x328>  // b.hs, b.nlast
    2718:	b	2728 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x30c>
    271c:	ldr	w0, [sp, #60]
    2720:	cmp	w0, #0x940
    2724:	b.eq	2770 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x354>  // b.none
    2728:	mov	w0, #0x0                   	// #0
    272c:	b	2868 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x44c>
    2730:	ldr	x3, [sp, #16]
    2734:	ldr	x2, [sp, #24]
    2738:	ldr	w1, [sp, #64]
    273c:	ldr	x0, [sp, #40]
    2740:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    2744:	ldr	x3, [sp, #16]
    2748:	ldr	x2, [sp, #24]
    274c:	ldr	w1, [sp, #76]
    2750:	ldr	x0, [sp, #40]
    2754:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    2758:	b	2808 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x3ec>
    275c:	ldr	x3, [sp, #16]
    2760:	ldr	x2, [sp, #24]
    2764:	ldr	w1, [sp, #64]
    2768:	ldr	x0, [sp, #40]
    276c:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    2770:	ldr	x3, [sp, #16]
    2774:	ldr	x2, [sp, #24]
    2778:	ldr	w1, [sp, #76]
    277c:	ldr	x0, [sp, #40]
    2780:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    2784:	b	2808 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x3ec>
    2788:	ldr	x3, [sp, #16]
    278c:	ldr	x2, [sp, #24]
    2790:	ldr	w1, [sp, #64]
    2794:	ldr	x0, [sp, #40]
    2798:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    279c:	ldr	x3, [sp, #16]
    27a0:	ldr	x2, [sp, #24]
    27a4:	ldr	w1, [sp, #76]
    27a8:	ldr	x0, [sp, #40]
    27ac:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    27b0:	ldr	x3, [sp, #16]
    27b4:	ldr	x2, [sp, #24]
    27b8:	ldr	w1, [sp, #68]
    27bc:	ldr	x0, [sp, #40]
    27c0:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    27c4:	b	2808 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x3ec>
    27c8:	ldr	x3, [sp, #16]
    27cc:	ldr	x2, [sp, #24]
    27d0:	ldr	w1, [sp, #64]
    27d4:	ldr	x0, [sp, #40]
    27d8:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    27dc:	ldr	x3, [sp, #16]
    27e0:	ldr	x2, [sp, #24]
    27e4:	ldr	w1, [sp, #76]
    27e8:	ldr	x0, [sp, #40]
    27ec:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    27f0:	ldr	x3, [sp, #16]
    27f4:	ldr	x2, [sp, #24]
    27f8:	ldr	w1, [sp, #68]
    27fc:	ldr	x0, [sp, #40]
    2800:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    2804:	nop
    2808:	ldr	x3, [sp, #16]
    280c:	ldr	x2, [sp, #24]
    2810:	ldr	w1, [sp, #72]
    2814:	ldr	x0, [sp, #40]
    2818:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    281c:	ldr	w0, [sp, #60]
    2820:	cmp	w0, #0x941
    2824:	b.eq	284c <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x430>  // b.none
    2828:	ldr	w0, [sp, #60]
    282c:	cmp	w0, #0xa71
    2830:	b.eq	284c <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x430>  // b.none
    2834:	ldr	w0, [sp, #60]
    2838:	cmp	w0, #0x942
    283c:	b.eq	284c <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x430>  // b.none
    2840:	ldr	w0, [sp, #60]
    2844:	cmp	w0, #0xa72
    2848:	b.ne	2864 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x448>  // b.any
    284c:	ldr	w1, [sp, #76]
    2850:	ldr	w0, [sp, #68]
    2854:	cmp	w1, w0
    2858:	b.ne	2864 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x448>  // b.any
    285c:	mov	w0, #0x1                   	// #1
    2860:	b	2868 <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv+0x44c>
    2864:	mov	w0, #0x3                   	// #3
    2868:	ldp	x29, x30, [sp], #80
    286c:	ret

0000000000002870 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv>:
    2870:	stp	x29, x30, [sp, #-96]!
    2874:	mov	x29, sp
    2878:	str	x0, [sp, #40]
    287c:	str	w1, [sp, #36]
    2880:	str	x2, [sp, #24]
    2884:	str	x3, [sp, #16]
    2888:	mov	w2, #0x5                   	// #5
    288c:	mov	w1, #0x0                   	// #0
    2890:	ldr	w0, [sp, #36]
    2894:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    2898:	str	w0, [sp, #80]
    289c:	mov	w2, #0x5                   	// #5
    28a0:	mov	w1, #0x5                   	// #5
    28a4:	ldr	w0, [sp, #36]
    28a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    28ac:	str	w0, [sp, #76]
    28b0:	mov	w2, #0x5                   	// #5
    28b4:	mov	w1, #0xa                   	// #10
    28b8:	ldr	w0, [sp, #36]
    28bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    28c0:	str	w0, [sp, #72]
    28c4:	mov	w2, #0x7                   	// #7
    28c8:	mov	w1, #0xf                   	// #15
    28cc:	ldr	w0, [sp, #36]
    28d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    28d4:	mov	w0, w0
    28d8:	str	x0, [sp, #88]
    28dc:	mov	w2, #0x1                   	// #1
    28e0:	mov	w1, #0x16                  	// #22
    28e4:	ldr	w0, [sp, #36]
    28e8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    28ec:	cmp	w0, #0x0
    28f0:	cset	w0, ne  // ne = any
    28f4:	strb	w0, [sp, #71]
    28f8:	ldr	x0, [sp, #88]
    28fc:	and	x0, x0, #0x40
    2900:	cmp	x0, #0x0
    2904:	b.eq	2914 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0xa4>  // b.none
    2908:	ldr	x0, [sp, #88]
    290c:	orr	x0, x0, #0xffffffffffffff80
    2910:	str	x0, [sp, #88]
    2914:	ldr	x0, [sp, #40]
    2918:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    291c:	str	w0, [sp, #64]
    2920:	strb	wzr, [sp, #87]
    2924:	ldr	w0, [sp, #64]
    2928:	cmp	w0, #0x9b7
    292c:	b.hi	29b0 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x140>  // b.pmore
    2930:	ldr	w0, [sp, #64]
    2934:	cmp	w0, #0x9a7
    2938:	b.cs	297c <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x10c>  // b.hs, b.nlast
    293c:	b	29ec <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x17c>
    2940:	ldr	w1, [sp, #64]
    2944:	mov	w0, #0xffffef4b            	// #-4277
    2948:	add	w0, w1, w0
    294c:	mov	x1, #0x1                   	// #1
    2950:	lsl	x1, x1, x0
    2954:	mov	x0, #0x3                   	// #3
    2958:	movk	x0, #0xd800, lsl #32
    295c:	movk	x0, #0x1b6, lsl #48
    2960:	and	x0, x1, x0
    2964:	cmp	x0, #0x0
    2968:	cset	w0, ne  // ne = any
    296c:	and	w0, w0, #0xff
    2970:	cmp	w0, #0x0
    2974:	b.ne	29d4 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x164>  // b.any
    2978:	b	29ec <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x17c>
    297c:	ldr	w0, [sp, #64]
    2980:	sub	w0, w0, #0x9a7
    2984:	mov	x1, #0x1                   	// #1
    2988:	lsl	x1, x1, x0
    298c:	mov	x0, #0xb6db                	// #46811
    2990:	movk	x0, #0x1, lsl #16
    2994:	and	x0, x1, x0
    2998:	cmp	x0, #0x0
    299c:	cset	w0, ne  // ne = any
    29a0:	and	w0, w0, #0xff
    29a4:	cmp	w0, #0x0
    29a8:	b.ne	29d4 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x164>  // b.any
    29ac:	b	29ec <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x17c>
    29b0:	ldr	w1, [sp, #64]
    29b4:	mov	w0, #0x10ed                	// #4333
    29b8:	cmp	w1, w0
    29bc:	b.hi	29ec <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x17c>  // b.pmore
    29c0:	ldr	w1, [sp, #64]
    29c4:	mov	w0, #0x10b5                	// #4277
    29c8:	cmp	w1, w0
    29cc:	b.cs	2940 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0xd0>  // b.hs, b.nlast
    29d0:	b	29ec <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x17c>
    29d4:	ldr	x3, [sp, #16]
    29d8:	ldr	x2, [sp, #24]
    29dc:	ldr	w1, [sp, #76]
    29e0:	ldr	x0, [sp, #40]
    29e4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    29e8:	b	29f0 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x180>
    29ec:	nop
    29f0:	ldr	w1, [sp, #64]
    29f4:	mov	w0, #0x10ed                	// #4333
    29f8:	cmp	w1, w0
    29fc:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2a00:	ldr	w1, [sp, #64]
    2a04:	mov	w0, #0x10ec                	// #4332
    2a08:	cmp	w1, w0
    2a0c:	b.cs	2cf0 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x480>  // b.hs, b.nlast
    2a10:	ldr	w1, [sp, #64]
    2a14:	mov	w0, #0x10eb                	// #4331
    2a18:	cmp	w1, w0
    2a1c:	b.eq	2cf8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x488>  // b.none
    2a20:	ldr	w1, [sp, #64]
    2a24:	mov	w0, #0x10eb                	// #4331
    2a28:	cmp	w1, w0
    2a2c:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2a30:	ldr	w1, [sp, #64]
    2a34:	mov	w0, #0x10ea                	// #4330
    2a38:	cmp	w1, w0
    2a3c:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2a40:	ldr	w1, [sp, #64]
    2a44:	mov	w0, #0x10e9                	// #4329
    2a48:	cmp	w1, w0
    2a4c:	b.cs	2d24 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x4b4>  // b.hs, b.nlast
    2a50:	ldr	w1, [sp, #64]
    2a54:	mov	w0, #0x10e8                	// #4328
    2a58:	cmp	w1, w0
    2a5c:	b.eq	2d2c <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x4bc>  // b.none
    2a60:	ldr	w1, [sp, #64]
    2a64:	mov	w0, #0x10e8                	// #4328
    2a68:	cmp	w1, w0
    2a6c:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2a70:	ldr	w1, [sp, #64]
    2a74:	mov	w0, #0x10e7                	// #4327
    2a78:	cmp	w1, w0
    2a7c:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2a80:	ldr	w1, [sp, #64]
    2a84:	mov	w0, #0x10e5                	// #4325
    2a88:	cmp	w1, w0
    2a8c:	b.cs	2db0 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x540>  // b.hs, b.nlast
    2a90:	ldr	w1, [sp, #64]
    2a94:	mov	w0, #0x10e4                	// #4324
    2a98:	cmp	w1, w0
    2a9c:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2aa0:	ldr	w1, [sp, #64]
    2aa4:	mov	w0, #0x10e2                	// #4322
    2aa8:	cmp	w1, w0
    2aac:	b.cs	2d58 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x4e8>  // b.hs, b.nlast
    2ab0:	ldr	w1, [sp, #64]
    2ab4:	mov	w0, #0x10e1                	// #4321
    2ab8:	cmp	w1, w0
    2abc:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2ac0:	ldr	w1, [sp, #64]
    2ac4:	mov	w0, #0x10df                	// #4319
    2ac8:	cmp	w1, w0
    2acc:	b.cs	2d84 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x514>  // b.hs, b.nlast
    2ad0:	ldr	w1, [sp, #64]
    2ad4:	mov	w0, #0x10cf                	// #4303
    2ad8:	cmp	w1, w0
    2adc:	b.eq	2cf8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x488>  // b.none
    2ae0:	ldr	w1, [sp, #64]
    2ae4:	mov	w0, #0x10cf                	// #4303
    2ae8:	cmp	w1, w0
    2aec:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2af0:	ldr	w1, [sp, #64]
    2af4:	mov	w0, #0x10ce                	// #4302
    2af8:	cmp	w1, w0
    2afc:	b.eq	2d2c <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x4bc>  // b.none
    2b00:	ldr	w1, [sp, #64]
    2b04:	mov	w0, #0x10ce                	// #4302
    2b08:	cmp	w1, w0
    2b0c:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2b10:	ldr	w1, [sp, #64]
    2b14:	mov	w0, #0x10cd                	// #4301
    2b18:	cmp	w1, w0
    2b1c:	b.eq	2db0 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x540>  // b.none
    2b20:	ldr	w1, [sp, #64]
    2b24:	mov	w0, #0x10cd                	// #4301
    2b28:	cmp	w1, w0
    2b2c:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2b30:	ldr	w1, [sp, #64]
    2b34:	mov	w0, #0x10cc                	// #4300
    2b38:	cmp	w1, w0
    2b3c:	b.eq	2d58 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x4e8>  // b.none
    2b40:	ldr	w1, [sp, #64]
    2b44:	mov	w0, #0x10cc                	// #4300
    2b48:	cmp	w1, w0
    2b4c:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2b50:	ldr	w1, [sp, #64]
    2b54:	mov	w0, #0x10cb                	// #4299
    2b58:	cmp	w1, w0
    2b5c:	b.eq	2d84 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x514>  // b.none
    2b60:	ldr	w1, [sp, #64]
    2b64:	mov	w0, #0x10cb                	// #4299
    2b68:	cmp	w1, w0
    2b6c:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2b70:	ldr	w1, [sp, #64]
    2b74:	mov	w0, #0x10b6                	// #4278
    2b78:	cmp	w1, w0
    2b7c:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2b80:	ldr	w1, [sp, #64]
    2b84:	mov	w0, #0x10b5                	// #4277
    2b88:	cmp	w1, w0
    2b8c:	b.cs	2cf0 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x480>  // b.hs, b.nlast
    2b90:	ldr	w1, [sp, #64]
    2b94:	mov	w0, #0x10b3                	// #4275
    2b98:	cmp	w1, w0
    2b9c:	b.eq	2cf8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x488>  // b.none
    2ba0:	ldr	w1, [sp, #64]
    2ba4:	mov	w0, #0x10b3                	// #4275
    2ba8:	cmp	w1, w0
    2bac:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2bb0:	ldr	w0, [sp, #64]
    2bb4:	cmp	w0, #0x9b7
    2bb8:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2bbc:	ldr	w0, [sp, #64]
    2bc0:	cmp	w0, #0x9b6
    2bc4:	b.cs	2cf0 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x480>  // b.hs, b.nlast
    2bc8:	ldr	w0, [sp, #64]
    2bcc:	cmp	w0, #0x9b5
    2bd0:	b.eq	2cf8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x488>  // b.none
    2bd4:	ldr	w0, [sp, #64]
    2bd8:	cmp	w0, #0x9b5
    2bdc:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2be0:	ldr	w0, [sp, #64]
    2be4:	cmp	w0, #0x9b4
    2be8:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2bec:	ldr	w0, [sp, #64]
    2bf0:	cmp	w0, #0x9b3
    2bf4:	b.cs	2d24 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x4b4>  // b.hs, b.nlast
    2bf8:	ldr	w0, [sp, #64]
    2bfc:	cmp	w0, #0x9b2
    2c00:	b.eq	2d2c <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x4bc>  // b.none
    2c04:	ldr	w0, [sp, #64]
    2c08:	cmp	w0, #0x9b2
    2c0c:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2c10:	ldr	w0, [sp, #64]
    2c14:	cmp	w0, #0x9b1
    2c18:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2c1c:	ldr	w0, [sp, #64]
    2c20:	cmp	w0, #0x9af
    2c24:	b.cs	2db0 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x540>  // b.hs, b.nlast
    2c28:	ldr	w0, [sp, #64]
    2c2c:	cmp	w0, #0x9ae
    2c30:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2c34:	ldr	w0, [sp, #64]
    2c38:	cmp	w0, #0x9ad
    2c3c:	b.cs	2cf0 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x480>  // b.hs, b.nlast
    2c40:	ldr	w0, [sp, #64]
    2c44:	cmp	w0, #0x9ac
    2c48:	b.eq	2cf8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x488>  // b.none
    2c4c:	ldr	w0, [sp, #64]
    2c50:	cmp	w0, #0x9ac
    2c54:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2c58:	ldr	w0, [sp, #64]
    2c5c:	cmp	w0, #0x9ab
    2c60:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2c64:	ldr	w0, [sp, #64]
    2c68:	cmp	w0, #0x9a9
    2c6c:	b.cs	2d58 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x4e8>  // b.hs, b.nlast
    2c70:	ldr	w0, [sp, #64]
    2c74:	cmp	w0, #0x9a8
    2c78:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2c7c:	ldr	w0, [sp, #64]
    2c80:	cmp	w0, #0x9a6
    2c84:	b.cs	2d84 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x514>  // b.hs, b.nlast
    2c88:	ldr	w0, [sp, #64]
    2c8c:	cmp	w0, #0x991
    2c90:	b.eq	2cf8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x488>  // b.none
    2c94:	ldr	w0, [sp, #64]
    2c98:	cmp	w0, #0x991
    2c9c:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2ca0:	ldr	w0, [sp, #64]
    2ca4:	cmp	w0, #0x990
    2ca8:	b.eq	2d2c <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x4bc>  // b.none
    2cac:	ldr	w0, [sp, #64]
    2cb0:	cmp	w0, #0x990
    2cb4:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2cb8:	ldr	w0, [sp, #64]
    2cbc:	cmp	w0, #0x98f
    2cc0:	b.eq	2db0 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x540>  // b.none
    2cc4:	ldr	w0, [sp, #64]
    2cc8:	cmp	w0, #0x98f
    2ccc:	b.hi	2ce8 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x478>  // b.pmore
    2cd0:	ldr	w0, [sp, #64]
    2cd4:	cmp	w0, #0x98d
    2cd8:	b.eq	2d84 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x514>  // b.none
    2cdc:	ldr	w0, [sp, #64]
    2ce0:	cmp	w0, #0x98e
    2ce4:	b.eq	2d58 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x4e8>  // b.none
    2ce8:	mov	w0, #0x0                   	// #0
    2cec:	b	2e74 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x604>
    2cf0:	mov	w0, #0x1                   	// #1
    2cf4:	strb	w0, [sp, #87]
    2cf8:	ldr	x3, [sp, #16]
    2cfc:	ldr	x2, [sp, #24]
    2d00:	ldr	w1, [sp, #80]
    2d04:	ldr	x0, [sp, #40]
    2d08:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    2d0c:	ldr	x3, [sp, #16]
    2d10:	ldr	x2, [sp, #24]
    2d14:	ldr	w1, [sp, #72]
    2d18:	ldr	x0, [sp, #40]
    2d1c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    2d20:	b	2ddc <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x56c>
    2d24:	mov	w0, #0x1                   	// #1
    2d28:	strb	w0, [sp, #87]
    2d2c:	ldr	x3, [sp, #16]
    2d30:	ldr	x2, [sp, #24]
    2d34:	ldr	w1, [sp, #80]
    2d38:	ldr	x0, [sp, #40]
    2d3c:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    2d40:	ldr	x3, [sp, #16]
    2d44:	ldr	x2, [sp, #24]
    2d48:	ldr	w1, [sp, #72]
    2d4c:	ldr	x0, [sp, #40]
    2d50:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    2d54:	b	2ddc <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x56c>
    2d58:	ldr	x3, [sp, #16]
    2d5c:	ldr	x2, [sp, #24]
    2d60:	ldr	w1, [sp, #80]
    2d64:	ldr	x0, [sp, #40]
    2d68:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
    2d6c:	ldr	x3, [sp, #16]
    2d70:	ldr	x2, [sp, #24]
    2d74:	ldr	w1, [sp, #72]
    2d78:	ldr	x0, [sp, #40]
    2d7c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
    2d80:	b	2ddc <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x56c>
    2d84:	ldr	x3, [sp, #16]
    2d88:	ldr	x2, [sp, #24]
    2d8c:	ldr	w1, [sp, #80]
    2d90:	ldr	x0, [sp, #40]
    2d94:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
    2d98:	ldr	x3, [sp, #16]
    2d9c:	ldr	x2, [sp, #24]
    2da0:	ldr	w1, [sp, #72]
    2da4:	ldr	x0, [sp, #40]
    2da8:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
    2dac:	b	2ddc <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x56c>
    2db0:	ldr	x3, [sp, #16]
    2db4:	ldr	x2, [sp, #24]
    2db8:	ldr	w1, [sp, #80]
    2dbc:	ldr	x0, [sp, #40]
    2dc0:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
    2dc4:	ldr	x3, [sp, #16]
    2dc8:	ldr	x2, [sp, #24]
    2dcc:	ldr	w1, [sp, #72]
    2dd0:	ldr	x0, [sp, #40]
    2dd4:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
    2dd8:	nop
    2ddc:	ldr	x3, [sp, #16]
    2de0:	ldr	x2, [sp, #24]
    2de4:	ldr	w1, [sp, #76]
    2de8:	ldr	x0, [sp, #40]
    2dec:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    2df0:	ldr	x0, [sp, #88]
    2df4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    2df8:	stp	x0, x1, [sp, #48]
    2dfc:	add	x0, sp, #0x30
    2e00:	mov	x1, x0
    2e04:	ldr	x0, [sp, #40]
    2e08:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    2e0c:	ldrb	w0, [sp, #71]
    2e10:	cmp	w0, #0x0
    2e14:	b.eq	2e30 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x5c0>  // b.none
    2e18:	ldr	w1, [sp, #80]
    2e1c:	ldr	w0, [sp, #72]
    2e20:	cmp	w1, w0
    2e24:	b.ne	2e30 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x5c0>  // b.any
    2e28:	mov	w0, #0x1                   	// #1
    2e2c:	b	2e74 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x604>
    2e30:	ldrb	w0, [sp, #87]
    2e34:	cmp	w0, #0x0
    2e38:	b.eq	2e70 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x600>  // b.none
    2e3c:	ldr	w0, [sp, #76]
    2e40:	cmp	w0, #0x1f
    2e44:	b.eq	2e70 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x600>  // b.none
    2e48:	ldr	w1, [sp, #80]
    2e4c:	ldr	w0, [sp, #76]
    2e50:	cmp	w1, w0
    2e54:	b.eq	2e68 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x5f8>  // b.none
    2e58:	ldr	w1, [sp, #72]
    2e5c:	ldr	w0, [sp, #76]
    2e60:	cmp	w1, w0
    2e64:	b.ne	2e70 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x600>  // b.any
    2e68:	mov	w0, #0x1                   	// #1
    2e6c:	b	2e74 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv+0x604>
    2e70:	mov	w0, #0x3                   	// #3
    2e74:	ldp	x29, x30, [sp], #96
    2e78:	ret

0000000000002e7c <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv>:
    2e7c:	stp	x29, x30, [sp, #-96]!
    2e80:	mov	x29, sp
    2e84:	str	x0, [sp, #40]
    2e88:	str	w1, [sp, #36]
    2e8c:	str	x2, [sp, #24]
    2e90:	str	x3, [sp, #16]
    2e94:	mov	w2, #0x5                   	// #5
    2e98:	mov	w1, #0x0                   	// #0
    2e9c:	ldr	w0, [sp, #36]
    2ea0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    2ea4:	str	w0, [sp, #92]
    2ea8:	mov	w2, #0x5                   	// #5
    2eac:	mov	w1, #0x5                   	// #5
    2eb0:	ldr	w0, [sp, #36]
    2eb4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    2eb8:	str	w0, [sp, #88]
    2ebc:	mov	w2, #0x5                   	// #5
    2ec0:	mov	w1, #0x10                  	// #16
    2ec4:	ldr	w0, [sp, #36]
    2ec8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    2ecc:	str	w0, [sp, #84]
    2ed0:	mov	w2, #0x6                   	// #6
    2ed4:	mov	w1, #0xa                   	// #10
    2ed8:	ldr	w0, [sp, #36]
    2edc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    2ee0:	str	w0, [sp, #80]
    2ee4:	ldr	w0, [sp, #80]
    2ee8:	and	w0, w0, #0x7
    2eec:	str	w0, [sp, #76]
    2ef0:	ldr	w0, [sp, #76]
    2ef4:	cmp	w0, #0x4
    2ef8:	b.ls	2f04 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x88>  // b.plast
    2efc:	mov	w0, #0x0                   	// #0
    2f00:	b	3194 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x318>
    2f04:	ldr	x0, [sp, #40]
    2f08:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    2f0c:	mov	w1, #0x1160                	// #4448
    2f10:	cmp	w0, w1
    2f14:	b.eq	30f4 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x278>  // b.none
    2f18:	mov	w1, #0x1160                	// #4448
    2f1c:	cmp	w0, w1
    2f20:	b.hi	2fec <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x170>  // b.pmore
    2f24:	mov	w1, #0x115f                	// #4447
    2f28:	cmp	w0, w1
    2f2c:	b.eq	3074 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x1f8>  // b.none
    2f30:	mov	w1, #0x115f                	// #4447
    2f34:	cmp	w0, w1
    2f38:	b.hi	2fec <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x170>  // b.pmore
    2f3c:	mov	w1, #0x115b                	// #4443
    2f40:	cmp	w0, w1
    2f44:	b.eq	2ff4 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x178>  // b.none
    2f48:	mov	w1, #0x115b                	// #4443
    2f4c:	cmp	w0, w1
    2f50:	b.hi	2fec <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x170>  // b.pmore
    2f54:	mov	w1, #0x1157                	// #4439
    2f58:	cmp	w0, w1
    2f5c:	b.eq	3134 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x2b8>  // b.none
    2f60:	mov	w1, #0x1157                	// #4439
    2f64:	cmp	w0, w1
    2f68:	b.hi	2fec <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x170>  // b.pmore
    2f6c:	mov	w1, #0x1156                	// #4438
    2f70:	cmp	w0, w1
    2f74:	b.eq	30b4 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x238>  // b.none
    2f78:	mov	w1, #0x1156                	// #4438
    2f7c:	cmp	w0, w1
    2f80:	b.hi	2fec <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x170>  // b.pmore
    2f84:	mov	w1, #0x1152                	// #4434
    2f88:	cmp	w0, w1
    2f8c:	b.eq	3034 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x1b8>  // b.none
    2f90:	mov	w1, #0x1152                	// #4434
    2f94:	cmp	w0, w1
    2f98:	b.hi	2fec <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x170>  // b.pmore
    2f9c:	cmp	w0, #0x109
    2fa0:	b.eq	30f4 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x278>  // b.none
    2fa4:	cmp	w0, #0x109
    2fa8:	b.hi	2fec <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x170>  // b.pmore
    2fac:	cmp	w0, #0x108
    2fb0:	b.eq	3074 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x1f8>  // b.none
    2fb4:	cmp	w0, #0x108
    2fb8:	b.hi	2fec <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x170>  // b.pmore
    2fbc:	cmp	w0, #0x104
    2fc0:	b.eq	2ff4 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x178>  // b.none
    2fc4:	cmp	w0, #0x104
    2fc8:	b.hi	2fec <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x170>  // b.pmore
    2fcc:	cmp	w0, #0xfa
    2fd0:	b.eq	3134 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x2b8>  // b.none
    2fd4:	cmp	w0, #0xfa
    2fd8:	b.hi	2fec <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x170>  // b.pmore
    2fdc:	cmp	w0, #0xf5
    2fe0:	b.eq	3034 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x1b8>  // b.none
    2fe4:	cmp	w0, #0xf9
    2fe8:	b.eq	30b4 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x238>  // b.none
    2fec:	mov	w0, #0x0                   	// #0
    2ff0:	b	3194 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x318>
    2ff4:	ldr	x3, [sp, #16]
    2ff8:	ldr	x2, [sp, #24]
    2ffc:	ldr	w1, [sp, #92]
    3000:	ldr	x0, [sp, #40]
    3004:	bl	c48 <_ZL26DecodeGPR32spRegisterClassRN4llvm6MCInstEjmPKv>
    3008:	ldr	x3, [sp, #16]
    300c:	ldr	x2, [sp, #24]
    3010:	ldr	w1, [sp, #88]
    3014:	ldr	x0, [sp, #40]
    3018:	bl	c48 <_ZL26DecodeGPR32spRegisterClassRN4llvm6MCInstEjmPKv>
    301c:	ldr	x3, [sp, #16]
    3020:	ldr	x2, [sp, #24]
    3024:	ldr	w1, [sp, #84]
    3028:	ldr	x0, [sp, #40]
    302c:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    3030:	b	3174 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x2f8>
    3034:	ldr	x3, [sp, #16]
    3038:	ldr	x2, [sp, #24]
    303c:	ldr	w1, [sp, #92]
    3040:	ldr	x0, [sp, #40]
    3044:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    3048:	ldr	x3, [sp, #16]
    304c:	ldr	x2, [sp, #24]
    3050:	ldr	w1, [sp, #88]
    3054:	ldr	x0, [sp, #40]
    3058:	bl	c48 <_ZL26DecodeGPR32spRegisterClassRN4llvm6MCInstEjmPKv>
    305c:	ldr	x3, [sp, #16]
    3060:	ldr	x2, [sp, #24]
    3064:	ldr	w1, [sp, #84]
    3068:	ldr	x0, [sp, #40]
    306c:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    3070:	b	3174 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x2f8>
    3074:	ldr	x3, [sp, #16]
    3078:	ldr	x2, [sp, #24]
    307c:	ldr	w1, [sp, #92]
    3080:	ldr	x0, [sp, #40]
    3084:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    3088:	ldr	x3, [sp, #16]
    308c:	ldr	x2, [sp, #24]
    3090:	ldr	w1, [sp, #88]
    3094:	ldr	x0, [sp, #40]
    3098:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    309c:	ldr	x3, [sp, #16]
    30a0:	ldr	x2, [sp, #24]
    30a4:	ldr	w1, [sp, #84]
    30a8:	ldr	x0, [sp, #40]
    30ac:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    30b0:	b	3174 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x2f8>
    30b4:	ldr	x3, [sp, #16]
    30b8:	ldr	x2, [sp, #24]
    30bc:	ldr	w1, [sp, #92]
    30c0:	ldr	x0, [sp, #40]
    30c4:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    30c8:	ldr	x3, [sp, #16]
    30cc:	ldr	x2, [sp, #24]
    30d0:	ldr	w1, [sp, #88]
    30d4:	ldr	x0, [sp, #40]
    30d8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    30dc:	ldr	x3, [sp, #16]
    30e0:	ldr	x2, [sp, #24]
    30e4:	ldr	w1, [sp, #84]
    30e8:	ldr	x0, [sp, #40]
    30ec:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    30f0:	b	3174 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x2f8>
    30f4:	ldr	x3, [sp, #16]
    30f8:	ldr	x2, [sp, #24]
    30fc:	ldr	w1, [sp, #92]
    3100:	ldr	x0, [sp, #40]
    3104:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    3108:	ldr	x3, [sp, #16]
    310c:	ldr	x2, [sp, #24]
    3110:	ldr	w1, [sp, #88]
    3114:	ldr	x0, [sp, #40]
    3118:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    311c:	ldr	x3, [sp, #16]
    3120:	ldr	x2, [sp, #24]
    3124:	ldr	w1, [sp, #84]
    3128:	ldr	x0, [sp, #40]
    312c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    3130:	b	3174 <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv+0x2f8>
    3134:	ldr	x3, [sp, #16]
    3138:	ldr	x2, [sp, #24]
    313c:	ldr	w1, [sp, #92]
    3140:	ldr	x0, [sp, #40]
    3144:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    3148:	ldr	x3, [sp, #16]
    314c:	ldr	x2, [sp, #24]
    3150:	ldr	w1, [sp, #88]
    3154:	ldr	x0, [sp, #40]
    3158:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    315c:	ldr	x3, [sp, #16]
    3160:	ldr	x2, [sp, #24]
    3164:	ldr	w1, [sp, #84]
    3168:	ldr	x0, [sp, #40]
    316c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    3170:	nop
    3174:	ldr	w0, [sp, #80]
    3178:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    317c:	stp	x0, x1, [sp, #56]
    3180:	add	x0, sp, #0x38
    3184:	mov	x1, x0
    3188:	ldr	x0, [sp, #40]
    318c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3190:	mov	w0, #0x3                   	// #3
    3194:	ldp	x29, x30, [sp], #96
    3198:	ret

000000000000319c <_ZL27DecodeLogicalImmInstructionRN4llvm6MCInstEjmPKv>:
    319c:	stp	x29, x30, [sp, #-80]!
    31a0:	mov	x29, sp
    31a4:	str	x0, [sp, #40]
    31a8:	str	w1, [sp, #36]
    31ac:	str	x2, [sp, #24]
    31b0:	str	x3, [sp, #16]
    31b4:	mov	w2, #0x5                   	// #5
    31b8:	mov	w1, #0x0                   	// #0
    31bc:	ldr	w0, [sp, #36]
    31c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    31c4:	str	w0, [sp, #72]
    31c8:	mov	w2, #0x5                   	// #5
    31cc:	mov	w1, #0x5                   	// #5
    31d0:	ldr	w0, [sp, #36]
    31d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    31d8:	str	w0, [sp, #68]
    31dc:	mov	w2, #0x1                   	// #1
    31e0:	mov	w1, #0x1f                  	// #31
    31e4:	ldr	w0, [sp, #36]
    31e8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    31ec:	str	w0, [sp, #64]
    31f0:	ldr	w0, [sp, #64]
    31f4:	cmp	w0, #0x0
    31f8:	b.eq	3294 <_ZL27DecodeLogicalImmInstructionRN4llvm6MCInstEjmPKv+0xf8>  // b.none
    31fc:	ldr	x0, [sp, #40]
    3200:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3204:	cmp	w0, #0x140
    3208:	cset	w0, eq  // eq = none
    320c:	and	w0, w0, #0xff
    3210:	cmp	w0, #0x0
    3214:	b.eq	3230 <_ZL27DecodeLogicalImmInstructionRN4llvm6MCInstEjmPKv+0x94>  // b.none
    3218:	ldr	x3, [sp, #16]
    321c:	ldr	x2, [sp, #24]
    3220:	ldr	w1, [sp, #72]
    3224:	ldr	x0, [sp, #40]
    3228:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    322c:	b	3244 <_ZL27DecodeLogicalImmInstructionRN4llvm6MCInstEjmPKv+0xa8>
    3230:	ldr	x3, [sp, #16]
    3234:	ldr	x2, [sp, #24]
    3238:	ldr	w1, [sp, #72]
    323c:	ldr	x0, [sp, #40]
    3240:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    3244:	ldr	x3, [sp, #16]
    3248:	ldr	x2, [sp, #24]
    324c:	ldr	w1, [sp, #68]
    3250:	ldr	x0, [sp, #40]
    3254:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    3258:	mov	w2, #0xd                   	// #13
    325c:	mov	w1, #0xa                   	// #10
    3260:	ldr	w0, [sp, #36]
    3264:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3268:	str	w0, [sp, #76]
    326c:	ldr	w0, [sp, #76]
    3270:	mov	w1, #0x40                  	// #64
    3274:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3278:	and	w0, w0, #0xff
    327c:	eor	w0, w0, #0x1
    3280:	and	w0, w0, #0xff
    3284:	cmp	w0, #0x0
    3288:	b.eq	332c <_ZL27DecodeLogicalImmInstructionRN4llvm6MCInstEjmPKv+0x190>  // b.none
    328c:	mov	w0, #0x0                   	// #0
    3290:	b	334c <_ZL27DecodeLogicalImmInstructionRN4llvm6MCInstEjmPKv+0x1b0>
    3294:	ldr	x0, [sp, #40]
    3298:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    329c:	cmp	w0, #0x13d
    32a0:	cset	w0, eq  // eq = none
    32a4:	and	w0, w0, #0xff
    32a8:	cmp	w0, #0x0
    32ac:	b.eq	32c8 <_ZL27DecodeLogicalImmInstructionRN4llvm6MCInstEjmPKv+0x12c>  // b.none
    32b0:	ldr	x3, [sp, #16]
    32b4:	ldr	x2, [sp, #24]
    32b8:	ldr	w1, [sp, #72]
    32bc:	ldr	x0, [sp, #40]
    32c0:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    32c4:	b	32dc <_ZL27DecodeLogicalImmInstructionRN4llvm6MCInstEjmPKv+0x140>
    32c8:	ldr	x3, [sp, #16]
    32cc:	ldr	x2, [sp, #24]
    32d0:	ldr	w1, [sp, #72]
    32d4:	ldr	x0, [sp, #40]
    32d8:	bl	c48 <_ZL26DecodeGPR32spRegisterClassRN4llvm6MCInstEjmPKv>
    32dc:	ldr	x3, [sp, #16]
    32e0:	ldr	x2, [sp, #24]
    32e4:	ldr	w1, [sp, #68]
    32e8:	ldr	x0, [sp, #40]
    32ec:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    32f0:	mov	w2, #0xc                   	// #12
    32f4:	mov	w1, #0xa                   	// #10
    32f8:	ldr	w0, [sp, #36]
    32fc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3300:	str	w0, [sp, #76]
    3304:	ldr	w0, [sp, #76]
    3308:	mov	w1, #0x20                  	// #32
    330c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3310:	and	w0, w0, #0xff
    3314:	eor	w0, w0, #0x1
    3318:	and	w0, w0, #0xff
    331c:	cmp	w0, #0x0
    3320:	b.eq	332c <_ZL27DecodeLogicalImmInstructionRN4llvm6MCInstEjmPKv+0x190>  // b.none
    3324:	mov	w0, #0x0                   	// #0
    3328:	b	334c <_ZL27DecodeLogicalImmInstructionRN4llvm6MCInstEjmPKv+0x1b0>
    332c:	ldr	w0, [sp, #76]
    3330:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3334:	stp	x0, x1, [sp, #48]
    3338:	add	x0, sp, #0x30
    333c:	mov	x1, x0
    3340:	ldr	x0, [sp, #40]
    3344:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3348:	mov	w0, #0x3                   	// #3
    334c:	ldp	x29, x30, [sp], #80
    3350:	ret

0000000000003354 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv>:
    3354:	stp	x29, x30, [sp, #-112]!
    3358:	mov	x29, sp
    335c:	str	x0, [sp, #40]
    3360:	str	w1, [sp, #36]
    3364:	str	x2, [sp, #24]
    3368:	str	x3, [sp, #16]
    336c:	mov	w2, #0x5                   	// #5
    3370:	mov	w1, #0x0                   	// #0
    3374:	ldr	w0, [sp, #36]
    3378:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    337c:	str	w0, [sp, #108]
    3380:	mov	w2, #0x4                   	// #4
    3384:	mov	w1, #0xc                   	// #12
    3388:	ldr	w0, [sp, #36]
    338c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3390:	str	w0, [sp, #104]
    3394:	mov	w2, #0x3                   	// #3
    3398:	mov	w1, #0x10                  	// #16
    339c:	ldr	w0, [sp, #36]
    33a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    33a4:	lsl	w0, w0, #5
    33a8:	str	w0, [sp, #100]
    33ac:	mov	w2, #0x5                   	// #5
    33b0:	mov	w1, #0x5                   	// #5
    33b4:	ldr	w0, [sp, #36]
    33b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    33bc:	mov	w1, w0
    33c0:	ldr	w0, [sp, #100]
    33c4:	orr	w0, w0, w1
    33c8:	str	w0, [sp, #100]
    33cc:	ldr	x0, [sp, #40]
    33d0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    33d4:	cmp	w0, #0xad2
    33d8:	cset	w0, eq  // eq = none
    33dc:	and	w0, w0, #0xff
    33e0:	cmp	w0, #0x0
    33e4:	b.eq	3400 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0xac>  // b.none
    33e8:	ldr	x3, [sp, #16]
    33ec:	ldr	x2, [sp, #24]
    33f0:	ldr	w1, [sp, #108]
    33f4:	ldr	x0, [sp, #40]
    33f8:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
    33fc:	b	3414 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0xc0>
    3400:	ldr	x3, [sp, #16]
    3404:	ldr	x2, [sp, #24]
    3408:	ldr	w1, [sp, #108]
    340c:	ldr	x0, [sp, #40]
    3410:	bl	fb0 <_ZL25DecodeVectorRegisterClassRN4llvm6MCInstEjmPKv>
    3414:	ldr	w0, [sp, #100]
    3418:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    341c:	stp	x0, x1, [sp, #48]
    3420:	add	x0, sp, #0x30
    3424:	mov	x1, x0
    3428:	ldr	x0, [sp, #40]
    342c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3430:	ldr	x0, [sp, #40]
    3434:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3438:	cmp	w0, #0xadb
    343c:	b.hi	34dc <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x188>  // b.pmore
    3440:	cmp	w0, #0xad5
    3444:	b.cs	3494 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x140>  // b.hs, b.nlast
    3448:	b	3554 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x200>
    344c:	sub	w0, w0, #0xb18
    3450:	mov	x1, #0x1                   	// #1
    3454:	lsl	x0, x1, x0
    3458:	mov	x1, #0x2d                  	// #45
    345c:	and	x1, x0, x1
    3460:	cmp	x1, #0x0
    3464:	cset	w1, ne  // ne = any
    3468:	and	w1, w1, #0xff
    346c:	cmp	w1, #0x0
    3470:	b.ne	34f0 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x19c>  // b.any
    3474:	mov	x1, #0x12                  	// #18
    3478:	and	x0, x0, x1
    347c:	cmp	x0, #0x0
    3480:	cset	w0, ne  // ne = any
    3484:	and	w0, w0, #0xff
    3488:	cmp	w0, #0x0
    348c:	b.ne	351c <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x1c8>  // b.any
    3490:	b	3554 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x200>
    3494:	sub	w0, w0, #0xad5
    3498:	mov	x1, #0x1                   	// #1
    349c:	lsl	x0, x1, x0
    34a0:	mov	x1, #0x4d                  	// #77
    34a4:	and	x1, x0, x1
    34a8:	cmp	x1, #0x0
    34ac:	cset	w1, ne  // ne = any
    34b0:	and	w1, w1, #0xff
    34b4:	cmp	w1, #0x0
    34b8:	b.ne	34f0 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x19c>  // b.any
    34bc:	mov	x1, #0x12                  	// #18
    34c0:	and	x0, x0, x1
    34c4:	cmp	x0, #0x0
    34c8:	cset	w0, ne  // ne = any
    34cc:	and	w0, w0, #0xff
    34d0:	cmp	w0, #0x0
    34d4:	b.ne	351c <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x1c8>  // b.any
    34d8:	b	3554 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x200>
    34dc:	cmp	w0, #0xb1d
    34e0:	b.hi	3554 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x200>  // b.pmore
    34e4:	cmp	w0, #0xb18
    34e8:	b.cs	344c <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0xf8>  // b.hs, b.nlast
    34ec:	b	3554 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x200>
    34f0:	ldr	w0, [sp, #104]
    34f4:	lsl	w0, w0, #2
    34f8:	mov	w0, w0
    34fc:	and	x0, x0, #0x18
    3500:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3504:	stp	x0, x1, [sp, #64]
    3508:	add	x0, sp, #0x40
    350c:	mov	x1, x0
    3510:	ldr	x0, [sp, #40]
    3514:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3518:	b	3558 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x204>
    351c:	ldr	w0, [sp, #104]
    3520:	and	w0, w0, #0x1
    3524:	cmp	w0, #0x0
    3528:	b.eq	3534 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x1e0>  // b.none
    352c:	mov	x0, #0x110                 	// #272
    3530:	b	3538 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x1e4>
    3534:	mov	x0, #0x108                 	// #264
    3538:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    353c:	stp	x0, x1, [sp, #80]
    3540:	add	x0, sp, #0x50
    3544:	mov	x1, x0
    3548:	ldr	x0, [sp, #40]
    354c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3550:	b	3558 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv+0x204>
    3554:	nop
    3558:	mov	w0, #0x3                   	// #3
    355c:	ldp	x29, x30, [sp], #112
    3560:	ret

0000000000003564 <_ZL27DecodeModImmTiedInstructionRN4llvm6MCInstEjmPKv>:
    3564:	stp	x29, x30, [sp, #-96]!
    3568:	mov	x29, sp
    356c:	str	x0, [sp, #40]
    3570:	str	w1, [sp, #36]
    3574:	str	x2, [sp, #24]
    3578:	str	x3, [sp, #16]
    357c:	mov	w2, #0x5                   	// #5
    3580:	mov	w1, #0x0                   	// #0
    3584:	ldr	w0, [sp, #36]
    3588:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    358c:	str	w0, [sp, #92]
    3590:	mov	w2, #0x4                   	// #4
    3594:	mov	w1, #0xc                   	// #12
    3598:	ldr	w0, [sp, #36]
    359c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    35a0:	str	w0, [sp, #88]
    35a4:	mov	w2, #0x3                   	// #3
    35a8:	mov	w1, #0x10                  	// #16
    35ac:	ldr	w0, [sp, #36]
    35b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    35b4:	lsl	w0, w0, #5
    35b8:	str	w0, [sp, #84]
    35bc:	mov	w2, #0x5                   	// #5
    35c0:	mov	w1, #0x5                   	// #5
    35c4:	ldr	w0, [sp, #36]
    35c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    35cc:	mov	w1, w0
    35d0:	ldr	w0, [sp, #84]
    35d4:	orr	w0, w0, w1
    35d8:	str	w0, [sp, #84]
    35dc:	ldr	x3, [sp, #16]
    35e0:	ldr	x2, [sp, #24]
    35e4:	ldr	w1, [sp, #92]
    35e8:	ldr	x0, [sp, #40]
    35ec:	bl	fb0 <_ZL25DecodeVectorRegisterClassRN4llvm6MCInstEjmPKv>
    35f0:	ldr	x3, [sp, #16]
    35f4:	ldr	x2, [sp, #24]
    35f8:	ldr	w1, [sp, #92]
    35fc:	ldr	x0, [sp, #40]
    3600:	bl	fb0 <_ZL25DecodeVectorRegisterClassRN4llvm6MCInstEjmPKv>
    3604:	ldr	w0, [sp, #84]
    3608:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    360c:	stp	x0, x1, [sp, #48]
    3610:	add	x0, sp, #0x30
    3614:	mov	x1, x0
    3618:	ldr	x0, [sp, #40]
    361c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3620:	ldr	w0, [sp, #88]
    3624:	lsl	w0, w0, #2
    3628:	mov	w0, w0
    362c:	and	x0, x0, #0x18
    3630:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3634:	stp	x0, x1, [sp, #64]
    3638:	add	x0, sp, #0x40
    363c:	mov	x1, x0
    3640:	ldr	x0, [sp, #40]
    3644:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3648:	mov	w0, #0x3                   	// #3
    364c:	ldp	x29, x30, [sp], #96
    3650:	ret

0000000000003654 <_ZL20DecodeAdrInstructionRN4llvm6MCInstEjmPKv>:
    3654:	stp	x29, x30, [sp, #-96]!
    3658:	mov	x29, sp
    365c:	str	x0, [sp, #40]
    3660:	str	w1, [sp, #36]
    3664:	str	x2, [sp, #24]
    3668:	str	x3, [sp, #16]
    366c:	mov	w2, #0x5                   	// #5
    3670:	mov	w1, #0x0                   	// #0
    3674:	ldr	w0, [sp, #36]
    3678:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    367c:	str	w0, [sp, #84]
    3680:	mov	w2, #0x13                  	// #19
    3684:	mov	w1, #0x5                   	// #5
    3688:	ldr	w0, [sp, #36]
    368c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3690:	lsl	w0, w0, #2
    3694:	mov	w0, w0
    3698:	str	x0, [sp, #88]
    369c:	mov	w2, #0x2                   	// #2
    36a0:	mov	w1, #0x1d                  	// #29
    36a4:	ldr	w0, [sp, #36]
    36a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    36ac:	mov	w0, w0
    36b0:	ldr	x1, [sp, #88]
    36b4:	orr	x0, x1, x0
    36b8:	str	x0, [sp, #88]
    36bc:	ldr	x0, [sp, #16]
    36c0:	str	x0, [sp, #72]
    36c4:	ldr	x0, [sp, #88]
    36c8:	and	x0, x0, #0x100000
    36cc:	cmp	x0, #0x0
    36d0:	b.eq	36e0 <_ZL20DecodeAdrInstructionRN4llvm6MCInstEjmPKv+0x8c>  // b.none
    36d4:	ldr	x0, [sp, #88]
    36d8:	orr	x0, x0, #0xffffffffffe00000
    36dc:	str	x0, [sp, #88]
    36e0:	ldr	x3, [sp, #16]
    36e4:	ldr	x2, [sp, #24]
    36e8:	ldr	w1, [sp, #84]
    36ec:	ldr	x0, [sp, #40]
    36f0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    36f4:	ldr	x0, [sp, #72]
    36f8:	mov	x6, #0x4                   	// #4
    36fc:	mov	x5, #0x0                   	// #0
    3700:	mov	w4, #0x0                   	// #0
    3704:	ldr	x3, [sp, #24]
    3708:	ldr	x2, [sp, #88]
    370c:	ldr	x1, [sp, #40]
    3710:	bl	0 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm>
    3714:	and	w0, w0, #0xff
    3718:	eor	w0, w0, #0x1
    371c:	and	w0, w0, #0xff
    3720:	cmp	w0, #0x0
    3724:	b.eq	3744 <_ZL20DecodeAdrInstructionRN4llvm6MCInstEjmPKv+0xf0>  // b.none
    3728:	ldr	x0, [sp, #88]
    372c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3730:	stp	x0, x1, [sp, #56]
    3734:	add	x0, sp, #0x38
    3738:	mov	x1, x0
    373c:	ldr	x0, [sp, #40]
    3740:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3744:	mov	w0, #0x3                   	// #3
    3748:	ldp	x29, x30, [sp], #96
    374c:	ret

0000000000003750 <_ZL20DecodeAddSubImmShiftRN4llvm6MCInstEjmPKv>:
    3750:	stp	x29, x30, [sp, #-128]!
    3754:	mov	x29, sp
    3758:	str	x0, [sp, #40]
    375c:	str	w1, [sp, #36]
    3760:	str	x2, [sp, #24]
    3764:	str	x3, [sp, #16]
    3768:	mov	w2, #0x5                   	// #5
    376c:	mov	w1, #0x0                   	// #0
    3770:	ldr	w0, [sp, #36]
    3774:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3778:	str	w0, [sp, #124]
    377c:	mov	w2, #0x5                   	// #5
    3780:	mov	w1, #0x5                   	// #5
    3784:	ldr	w0, [sp, #36]
    3788:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    378c:	str	w0, [sp, #120]
    3790:	mov	w2, #0xe                   	// #14
    3794:	mov	w1, #0xa                   	// #10
    3798:	ldr	w0, [sp, #36]
    379c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    37a0:	str	w0, [sp, #116]
    37a4:	mov	w2, #0x1                   	// #1
    37a8:	mov	w1, #0x1d                  	// #29
    37ac:	ldr	w0, [sp, #36]
    37b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    37b4:	str	w0, [sp, #112]
    37b8:	mov	w2, #0x1                   	// #1
    37bc:	mov	w1, #0x1f                  	// #31
    37c0:	ldr	w0, [sp, #36]
    37c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    37c8:	str	w0, [sp, #108]
    37cc:	ldr	w0, [sp, #116]
    37d0:	lsr	w0, w0, #12
    37d4:	and	w0, w0, #0x3
    37d8:	str	w0, [sp, #104]
    37dc:	ldr	w0, [sp, #116]
    37e0:	and	w0, w0, #0xfff
    37e4:	str	w0, [sp, #100]
    37e8:	ldr	x0, [sp, #16]
    37ec:	str	x0, [sp, #88]
    37f0:	ldr	w0, [sp, #104]
    37f4:	cmp	w0, #0x0
    37f8:	b.eq	3810 <_ZL20DecodeAddSubImmShiftRN4llvm6MCInstEjmPKv+0xc0>  // b.none
    37fc:	ldr	w0, [sp, #104]
    3800:	cmp	w0, #0x1
    3804:	b.eq	3810 <_ZL20DecodeAddSubImmShiftRN4llvm6MCInstEjmPKv+0xc0>  // b.none
    3808:	mov	w0, #0x0                   	// #0
    380c:	b	3958 <_ZL20DecodeAddSubImmShiftRN4llvm6MCInstEjmPKv+0x208>
    3810:	ldr	w0, [sp, #108]
    3814:	cmp	w0, #0x0
    3818:	b.eq	3878 <_ZL20DecodeAddSubImmShiftRN4llvm6MCInstEjmPKv+0x128>  // b.none
    381c:	ldr	w0, [sp, #124]
    3820:	cmp	w0, #0x1f
    3824:	b.ne	384c <_ZL20DecodeAddSubImmShiftRN4llvm6MCInstEjmPKv+0xfc>  // b.any
    3828:	ldr	w0, [sp, #112]
    382c:	cmp	w0, #0x0
    3830:	b.ne	384c <_ZL20DecodeAddSubImmShiftRN4llvm6MCInstEjmPKv+0xfc>  // b.any
    3834:	ldr	x3, [sp, #16]
    3838:	ldr	x2, [sp, #24]
    383c:	ldr	w1, [sp, #124]
    3840:	ldr	x0, [sp, #40]
    3844:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    3848:	b	3860 <_ZL20DecodeAddSubImmShiftRN4llvm6MCInstEjmPKv+0x110>
    384c:	ldr	x3, [sp, #16]
    3850:	ldr	x2, [sp, #24]
    3854:	ldr	w1, [sp, #124]
    3858:	ldr	x0, [sp, #40]
    385c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    3860:	ldr	x3, [sp, #16]
    3864:	ldr	x2, [sp, #24]
    3868:	ldr	w1, [sp, #120]
    386c:	ldr	x0, [sp, #40]
    3870:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    3874:	b	38d0 <_ZL20DecodeAddSubImmShiftRN4llvm6MCInstEjmPKv+0x180>
    3878:	ldr	w0, [sp, #124]
    387c:	cmp	w0, #0x1f
    3880:	b.ne	38a8 <_ZL20DecodeAddSubImmShiftRN4llvm6MCInstEjmPKv+0x158>  // b.any
    3884:	ldr	w0, [sp, #112]
    3888:	cmp	w0, #0x0
    388c:	b.ne	38a8 <_ZL20DecodeAddSubImmShiftRN4llvm6MCInstEjmPKv+0x158>  // b.any
    3890:	ldr	x3, [sp, #16]
    3894:	ldr	x2, [sp, #24]
    3898:	ldr	w1, [sp, #124]
    389c:	ldr	x0, [sp, #40]
    38a0:	bl	c48 <_ZL26DecodeGPR32spRegisterClassRN4llvm6MCInstEjmPKv>
    38a4:	b	38bc <_ZL20DecodeAddSubImmShiftRN4llvm6MCInstEjmPKv+0x16c>
    38a8:	ldr	x3, [sp, #16]
    38ac:	ldr	x2, [sp, #24]
    38b0:	ldr	w1, [sp, #124]
    38b4:	ldr	x0, [sp, #40]
    38b8:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    38bc:	ldr	x3, [sp, #16]
    38c0:	ldr	x2, [sp, #24]
    38c4:	ldr	w1, [sp, #120]
    38c8:	ldr	x0, [sp, #40]
    38cc:	bl	c48 <_ZL26DecodeGPR32spRegisterClassRN4llvm6MCInstEjmPKv>
    38d0:	ldr	x0, [sp, #88]
    38d4:	ldr	w1, [sp, #116]
    38d8:	mov	x6, #0x4                   	// #4
    38dc:	mov	x5, #0x0                   	// #0
    38e0:	mov	w4, #0x0                   	// #0
    38e4:	ldr	x3, [sp, #24]
    38e8:	mov	x2, x1
    38ec:	ldr	x1, [sp, #40]
    38f0:	bl	0 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm>
    38f4:	and	w0, w0, #0xff
    38f8:	eor	w0, w0, #0x1
    38fc:	and	w0, w0, #0xff
    3900:	cmp	w0, #0x0
    3904:	b.eq	3924 <_ZL20DecodeAddSubImmShiftRN4llvm6MCInstEjmPKv+0x1d4>  // b.none
    3908:	ldr	w0, [sp, #100]
    390c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3910:	stp	x0, x1, [sp, #56]
    3914:	add	x0, sp, #0x38
    3918:	mov	x1, x0
    391c:	ldr	x0, [sp, #40]
    3920:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3924:	ldr	w1, [sp, #104]
    3928:	mov	w0, w1
    392c:	lsl	w0, w0, #1
    3930:	add	w0, w0, w1
    3934:	lsl	w0, w0, #2
    3938:	mov	w0, w0
    393c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3940:	stp	x0, x1, [sp, #72]
    3944:	add	x0, sp, #0x48
    3948:	mov	x1, x0
    394c:	ldr	x0, [sp, #40]
    3950:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3954:	mov	w0, #0x3                   	// #3
    3958:	ldp	x29, x30, [sp], #128
    395c:	ret

0000000000003960 <_ZL25DecodeUnconditionalBranchRN4llvm6MCInstEjmPKv>:
    3960:	stp	x29, x30, [sp, #-80]!
    3964:	mov	x29, sp
    3968:	str	x0, [sp, #40]
    396c:	str	w1, [sp, #36]
    3970:	str	x2, [sp, #24]
    3974:	str	x3, [sp, #16]
    3978:	mov	w2, #0x1a                  	// #26
    397c:	mov	w1, #0x0                   	// #0
    3980:	ldr	w0, [sp, #36]
    3984:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3988:	mov	w0, w0
    398c:	str	x0, [sp, #72]
    3990:	ldr	x0, [sp, #16]
    3994:	str	x0, [sp, #64]
    3998:	ldr	x0, [sp, #72]
    399c:	and	x0, x0, #0x2000000
    39a0:	cmp	x0, #0x0
    39a4:	b.eq	39b4 <_ZL25DecodeUnconditionalBranchRN4llvm6MCInstEjmPKv+0x54>  // b.none
    39a8:	ldr	x0, [sp, #72]
    39ac:	orr	x0, x0, #0xfffffffffc000000
    39b0:	str	x0, [sp, #72]
    39b4:	ldr	x7, [sp, #64]
    39b8:	ldr	x0, [sp, #72]
    39bc:	lsl	x0, x0, #2
    39c0:	mov	x6, #0x4                   	// #4
    39c4:	mov	x5, #0x0                   	// #0
    39c8:	mov	w4, #0x1                   	// #1
    39cc:	ldr	x3, [sp, #24]
    39d0:	mov	x2, x0
    39d4:	ldr	x1, [sp, #40]
    39d8:	mov	x0, x7
    39dc:	bl	0 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm>
    39e0:	and	w0, w0, #0xff
    39e4:	eor	w0, w0, #0x1
    39e8:	and	w0, w0, #0xff
    39ec:	cmp	w0, #0x0
    39f0:	b.eq	3a10 <_ZL25DecodeUnconditionalBranchRN4llvm6MCInstEjmPKv+0xb0>  // b.none
    39f4:	ldr	x0, [sp, #72]
    39f8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    39fc:	stp	x0, x1, [sp, #48]
    3a00:	add	x0, sp, #0x30
    3a04:	mov	x1, x0
    3a08:	ldr	x0, [sp, #40]
    3a0c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3a10:	mov	w0, #0x3                   	// #3
    3a14:	ldp	x29, x30, [sp], #80
    3a18:	ret

0000000000003a1c <_ZL29DecodeSystemPStateInstructionRN4llvm6MCInstEjmPKv>:
    3a1c:	stp	x29, x30, [sp, #-176]!
    3a20:	mov	x29, sp
    3a24:	str	x19, [sp, #16]
    3a28:	str	x0, [sp, #88]
    3a2c:	str	w1, [sp, #84]
    3a30:	str	x2, [sp, #72]
    3a34:	str	x3, [sp, #64]
    3a38:	mov	w2, #0x3                   	// #3
    3a3c:	mov	w1, #0x10                  	// #16
    3a40:	ldr	w0, [sp, #84]
    3a44:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3a48:	mov	w0, w0
    3a4c:	str	x0, [sp, #168]
    3a50:	mov	w2, #0x3                   	// #3
    3a54:	mov	w1, #0x5                   	// #5
    3a58:	ldr	w0, [sp, #84]
    3a5c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3a60:	mov	w0, w0
    3a64:	str	x0, [sp, #160]
    3a68:	mov	w2, #0x4                   	// #4
    3a6c:	mov	w1, #0x8                   	// #8
    3a70:	ldr	w0, [sp, #84]
    3a74:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3a78:	mov	w0, w0
    3a7c:	str	x0, [sp, #152]
    3a80:	ldr	x0, [sp, #168]
    3a84:	lsl	x0, x0, #3
    3a88:	ldr	x1, [sp, #160]
    3a8c:	orr	x0, x1, x0
    3a90:	str	x0, [sp, #144]
    3a94:	ldr	x0, [sp, #144]
    3a98:	sub	x0, x0, #0x1
    3a9c:	cmp	x0, #0x1
    3aa0:	b.hi	3aac <_ZL29DecodeSystemPStateInstructionRN4llvm6MCInstEjmPKv+0x90>  // b.pmore
    3aa4:	mov	w0, #0x0                   	// #0
    3aa8:	b	3ba4 <_ZL29DecodeSystemPStateInstructionRN4llvm6MCInstEjmPKv+0x188>
    3aac:	ldr	x0, [sp, #144]
    3ab0:	cmp	x0, #0x4
    3ab4:	b.eq	3ad0 <_ZL29DecodeSystemPStateInstructionRN4llvm6MCInstEjmPKv+0xb4>  // b.none
    3ab8:	ldr	x0, [sp, #144]
    3abc:	cmp	x0, #0x3
    3ac0:	b.eq	3ad0 <_ZL29DecodeSystemPStateInstructionRN4llvm6MCInstEjmPKv+0xb4>  // b.none
    3ac4:	ldr	x0, [sp, #144]
    3ac8:	cmp	x0, #0x19
    3acc:	b.ne	3ae4 <_ZL29DecodeSystemPStateInstructionRN4llvm6MCInstEjmPKv+0xc8>  // b.any
    3ad0:	ldr	x0, [sp, #152]
    3ad4:	cmp	x0, #0x1
    3ad8:	b.ls	3ae4 <_ZL29DecodeSystemPStateInstructionRN4llvm6MCInstEjmPKv+0xc8>  // b.plast
    3adc:	mov	w0, #0x0                   	// #0
    3ae0:	b	3ba4 <_ZL29DecodeSystemPStateInstructionRN4llvm6MCInstEjmPKv+0x188>
    3ae4:	ldr	x0, [sp, #144]
    3ae8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3aec:	stp	x0, x1, [sp, #96]
    3af0:	add	x0, sp, #0x60
    3af4:	mov	x1, x0
    3af8:	ldr	x0, [sp, #88]
    3afc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3b00:	ldr	x0, [sp, #152]
    3b04:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3b08:	stp	x0, x1, [sp, #112]
    3b0c:	add	x0, sp, #0x70
    3b10:	mov	x1, x0
    3b14:	ldr	x0, [sp, #88]
    3b18:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3b1c:	ldr	x0, [sp, #64]
    3b20:	str	x0, [sp, #136]
    3b24:	ldr	x0, [sp, #144]
    3b28:	and	w0, w0, #0xff
    3b2c:	bl	0 <_ZN4llvm13AArch64PState22lookupPStateByEncodingEh>
    3b30:	str	x0, [sp, #128]
    3b34:	ldr	x0, [sp, #128]
    3b38:	cmp	x0, #0x0
    3b3c:	b.eq	3b8c <_ZL29DecodeSystemPStateInstructionRN4llvm6MCInstEjmPKv+0x170>  // b.none
    3b40:	ldr	x19, [sp, #128]
    3b44:	ldr	x0, [sp, #136]
    3b48:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3b4c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3b50:	add	x2, sp, #0x20
    3b54:	mov	x3, x0
    3b58:	ldp	x0, x1, [x3]
    3b5c:	stp	x0, x1, [x2]
    3b60:	ldr	x0, [x3, #16]
    3b64:	str	x0, [x2, #16]
    3b68:	add	x0, sp, #0x20
    3b6c:	mov	x1, x0
    3b70:	mov	x0, x19
    3b74:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3b78:	and	w0, w0, #0xff
    3b7c:	cmp	w0, #0x0
    3b80:	b.eq	3b8c <_ZL29DecodeSystemPStateInstructionRN4llvm6MCInstEjmPKv+0x170>  // b.none
    3b84:	mov	w0, #0x1                   	// #1
    3b88:	b	3b90 <_ZL29DecodeSystemPStateInstructionRN4llvm6MCInstEjmPKv+0x174>
    3b8c:	mov	w0, #0x0                   	// #0
    3b90:	cmp	w0, #0x0
    3b94:	b.eq	3ba0 <_ZL29DecodeSystemPStateInstructionRN4llvm6MCInstEjmPKv+0x184>  // b.none
    3b98:	mov	w0, #0x3                   	// #3
    3b9c:	b	3ba4 <_ZL29DecodeSystemPStateInstructionRN4llvm6MCInstEjmPKv+0x188>
    3ba0:	mov	w0, #0x0                   	// #0
    3ba4:	ldr	x19, [sp, #16]
    3ba8:	ldp	x29, x30, [sp], #176
    3bac:	ret

0000000000003bb0 <_ZL19DecodeTestAndBranchRN4llvm6MCInstEjmPKv>:
    3bb0:	stp	x29, x30, [sp, #-112]!
    3bb4:	mov	x29, sp
    3bb8:	str	x0, [sp, #40]
    3bbc:	str	w1, [sp, #36]
    3bc0:	str	x2, [sp, #24]
    3bc4:	str	x3, [sp, #16]
    3bc8:	mov	w2, #0x5                   	// #5
    3bcc:	mov	w1, #0x0                   	// #0
    3bd0:	ldr	w0, [sp, #36]
    3bd4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3bd8:	mov	w0, w0
    3bdc:	str	x0, [sp, #96]
    3be0:	mov	w2, #0x1                   	// #1
    3be4:	mov	w1, #0x1f                  	// #31
    3be8:	ldr	w0, [sp, #36]
    3bec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3bf0:	lsl	w0, w0, #5
    3bf4:	mov	w0, w0
    3bf8:	str	x0, [sp, #88]
    3bfc:	mov	w2, #0x5                   	// #5
    3c00:	mov	w1, #0x13                  	// #19
    3c04:	ldr	w0, [sp, #36]
    3c08:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3c0c:	mov	w0, w0
    3c10:	ldr	x1, [sp, #88]
    3c14:	orr	x0, x1, x0
    3c18:	str	x0, [sp, #88]
    3c1c:	mov	w2, #0xe                   	// #14
    3c20:	mov	w1, #0x5                   	// #5
    3c24:	ldr	w0, [sp, #36]
    3c28:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3c2c:	mov	w0, w0
    3c30:	str	x0, [sp, #104]
    3c34:	ldr	x0, [sp, #16]
    3c38:	str	x0, [sp, #80]
    3c3c:	ldr	x0, [sp, #104]
    3c40:	and	x0, x0, #0x2000
    3c44:	cmp	x0, #0x0
    3c48:	b.eq	3c58 <_ZL19DecodeTestAndBranchRN4llvm6MCInstEjmPKv+0xa8>  // b.none
    3c4c:	ldr	x0, [sp, #104]
    3c50:	orr	x0, x0, #0xffffffffffffc000
    3c54:	str	x0, [sp, #104]
    3c58:	mov	w2, #0x1                   	// #1
    3c5c:	mov	w1, #0x1f                  	// #31
    3c60:	ldr	w0, [sp, #36]
    3c64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3c68:	cmp	w0, #0x0
    3c6c:	cset	w0, eq  // eq = none
    3c70:	and	w0, w0, #0xff
    3c74:	cmp	w0, #0x0
    3c78:	b.eq	3c98 <_ZL19DecodeTestAndBranchRN4llvm6MCInstEjmPKv+0xe8>  // b.none
    3c7c:	ldr	x0, [sp, #96]
    3c80:	ldr	x3, [sp, #16]
    3c84:	ldr	x2, [sp, #24]
    3c88:	mov	w1, w0
    3c8c:	ldr	x0, [sp, #40]
    3c90:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    3c94:	b	3cb0 <_ZL19DecodeTestAndBranchRN4llvm6MCInstEjmPKv+0x100>
    3c98:	ldr	x0, [sp, #96]
    3c9c:	ldr	x3, [sp, #16]
    3ca0:	ldr	x2, [sp, #24]
    3ca4:	mov	w1, w0
    3ca8:	ldr	x0, [sp, #40]
    3cac:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    3cb0:	ldr	x0, [sp, #88]
    3cb4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3cb8:	stp	x0, x1, [sp, #48]
    3cbc:	add	x0, sp, #0x30
    3cc0:	mov	x1, x0
    3cc4:	ldr	x0, [sp, #40]
    3cc8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3ccc:	ldr	x7, [sp, #80]
    3cd0:	ldr	x0, [sp, #104]
    3cd4:	lsl	x0, x0, #2
    3cd8:	mov	x6, #0x4                   	// #4
    3cdc:	mov	x5, #0x0                   	// #0
    3ce0:	mov	w4, #0x1                   	// #1
    3ce4:	ldr	x3, [sp, #24]
    3ce8:	mov	x2, x0
    3cec:	ldr	x1, [sp, #40]
    3cf0:	mov	x0, x7
    3cf4:	bl	0 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm>
    3cf8:	and	w0, w0, #0xff
    3cfc:	eor	w0, w0, #0x1
    3d00:	and	w0, w0, #0xff
    3d04:	cmp	w0, #0x0
    3d08:	b.eq	3d28 <_ZL19DecodeTestAndBranchRN4llvm6MCInstEjmPKv+0x178>  // b.none
    3d0c:	ldr	x0, [sp, #104]
    3d10:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3d14:	stp	x0, x1, [sp, #64]
    3d18:	add	x0, sp, #0x40
    3d1c:	mov	x1, x0
    3d20:	ldr	x0, [sp, #40]
    3d24:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3d28:	mov	w0, #0x3                   	// #3
    3d2c:	ldp	x29, x30, [sp], #112
    3d30:	ret

0000000000003d34 <_ZL35DecodeGPRSeqPairsClassRegisterClassRN4llvm6MCInstEjjmPKv>:
    3d34:	stp	x29, x30, [sp, #-80]!
    3d38:	mov	x29, sp
    3d3c:	str	x0, [sp, #40]
    3d40:	str	w1, [sp, #36]
    3d44:	str	w2, [sp, #32]
    3d48:	str	x3, [sp, #24]
    3d4c:	str	x4, [sp, #16]
    3d50:	ldr	w0, [sp, #32]
    3d54:	and	w0, w0, #0x1
    3d58:	cmp	w0, #0x0
    3d5c:	b.eq	3d68 <_ZL35DecodeGPRSeqPairsClassRegisterClassRN4llvm6MCInstEjjmPKv+0x34>  // b.none
    3d60:	mov	w0, #0x0                   	// #0
    3d64:	b	3db4 <_ZL35DecodeGPRSeqPairsClassRegisterClassRN4llvm6MCInstEjjmPKv+0x80>
    3d68:	ldr	w0, [sp, #36]
    3d6c:	lsl	x1, x0, #5
    3d70:	adrp	x0, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    3d74:	ldr	x0, [x0]
    3d78:	add	x2, x1, x0
    3d7c:	ldr	w0, [sp, #32]
    3d80:	lsr	w0, w0, #1
    3d84:	mov	w1, w0
    3d88:	mov	x0, x2
    3d8c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3d90:	str	w0, [sp, #76]
    3d94:	ldr	w0, [sp, #76]
    3d98:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3d9c:	stp	x0, x1, [sp, #56]
    3da0:	add	x0, sp, #0x38
    3da4:	mov	x1, x0
    3da8:	ldr	x0, [sp, #40]
    3dac:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3db0:	mov	w0, #0x3                   	// #3
    3db4:	ldp	x29, x30, [sp], #80
    3db8:	ret

0000000000003dbc <_ZL33DecodeWSeqPairsClassRegisterClassRN4llvm6MCInstEjmPKv>:
    3dbc:	stp	x29, x30, [sp, #-48]!
    3dc0:	mov	x29, sp
    3dc4:	str	x0, [sp, #40]
    3dc8:	str	w1, [sp, #36]
    3dcc:	str	x2, [sp, #24]
    3dd0:	str	x3, [sp, #16]
    3dd4:	ldr	x4, [sp, #16]
    3dd8:	ldr	x3, [sp, #24]
    3ddc:	ldr	w2, [sp, #36]
    3de0:	mov	w1, #0xc                   	// #12
    3de4:	ldr	x0, [sp, #40]
    3de8:	bl	3d34 <_ZL35DecodeGPRSeqPairsClassRegisterClassRN4llvm6MCInstEjjmPKv>
    3dec:	ldp	x29, x30, [sp], #48
    3df0:	ret

0000000000003df4 <_ZL33DecodeXSeqPairsClassRegisterClassRN4llvm6MCInstEjmPKv>:
    3df4:	stp	x29, x30, [sp, #-48]!
    3df8:	mov	x29, sp
    3dfc:	str	x0, [sp, #40]
    3e00:	str	w1, [sp, #36]
    3e04:	str	x2, [sp, #24]
    3e08:	str	x3, [sp, #16]
    3e0c:	ldr	x4, [sp, #16]
    3e10:	ldr	x3, [sp, #24]
    3e14:	ldr	w2, [sp, #36]
    3e18:	mov	w1, #0x1c                  	// #28
    3e1c:	ldr	x0, [sp, #40]
    3e20:	bl	3d34 <_ZL35DecodeGPRSeqPairsClassRegisterClassRN4llvm6MCInstEjjmPKv>
    3e24:	ldp	x29, x30, [sp], #48
    3e28:	ret

0000000000003e2c <_ZL30DecodeSVELogicalImmInstructionRN4llvm6MCInstEjmPKv>:
    3e2c:	stp	x29, x30, [sp, #-80]!
    3e30:	mov	x29, sp
    3e34:	str	x0, [sp, #40]
    3e38:	str	w1, [sp, #36]
    3e3c:	str	x2, [sp, #24]
    3e40:	str	x3, [sp, #16]
    3e44:	mov	w2, #0x5                   	// #5
    3e48:	mov	w1, #0x0                   	// #0
    3e4c:	ldr	w0, [sp, #36]
    3e50:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3e54:	str	w0, [sp, #76]
    3e58:	mov	w2, #0xd                   	// #13
    3e5c:	mov	w1, #0x5                   	// #5
    3e60:	ldr	w0, [sp, #36]
    3e64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    3e68:	str	w0, [sp, #72]
    3e6c:	ldr	w0, [sp, #72]
    3e70:	mov	w1, #0x40                  	// #64
    3e74:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3e78:	and	w0, w0, #0xff
    3e7c:	eor	w0, w0, #0x1
    3e80:	and	w0, w0, #0xff
    3e84:	cmp	w0, #0x0
    3e88:	b.eq	3e94 <_ZL30DecodeSVELogicalImmInstructionRN4llvm6MCInstEjmPKv+0x68>  // b.none
    3e8c:	mov	w0, #0x0                   	// #0
    3e90:	b	3ef8 <_ZL30DecodeSVELogicalImmInstructionRN4llvm6MCInstEjmPKv+0xcc>
    3e94:	ldr	x3, [sp, #16]
    3e98:	ldr	x2, [sp, #24]
    3e9c:	ldr	w1, [sp, #76]
    3ea0:	ldr	x0, [sp, #40]
    3ea4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    3ea8:	ldr	x0, [sp, #40]
    3eac:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3eb0:	cmp	w0, #0x33b
    3eb4:	cset	w0, ne  // ne = any
    3eb8:	and	w0, w0, #0xff
    3ebc:	cmp	w0, #0x0
    3ec0:	b.eq	3ed8 <_ZL30DecodeSVELogicalImmInstructionRN4llvm6MCInstEjmPKv+0xac>  // b.none
    3ec4:	ldr	x3, [sp, #16]
    3ec8:	ldr	x2, [sp, #24]
    3ecc:	ldr	w1, [sp, #76]
    3ed0:	ldr	x0, [sp, #40]
    3ed4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    3ed8:	ldr	w0, [sp, #72]
    3edc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3ee0:	stp	x0, x1, [sp, #56]
    3ee4:	add	x0, sp, #0x38
    3ee8:	mov	x1, x0
    3eec:	ldr	x0, [sp, #40]
    3ef0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3ef4:	mov	w0, #0x3                   	// #3
    3ef8:	ldp	x29, x30, [sp], #80
    3efc:	ret

0000000000003f00 <_ZL18DecodeSVEIncDecImmRN4llvm6MCInstEjmPKv>:
    3f00:	stp	x29, x30, [sp, #-64]!
    3f04:	mov	x29, sp
    3f08:	str	x0, [sp, #40]
    3f0c:	str	w1, [sp, #36]
    3f10:	str	x2, [sp, #24]
    3f14:	str	x3, [sp, #16]
    3f18:	ldr	w0, [sp, #36]
    3f1c:	add	w0, w0, #0x1
    3f20:	mov	w0, w0
    3f24:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3f28:	stp	x0, x1, [sp, #48]
    3f2c:	add	x0, sp, #0x30
    3f30:	mov	x1, x0
    3f34:	ldr	x0, [sp, #40]
    3f38:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3f3c:	mov	w0, #0x3                   	// #3
    3f40:	ldp	x29, x30, [sp], #64
    3f44:	ret

0000000000003f48 <_ZZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblENKUliE_clEi>:
    3f48:	stp	x29, x30, [sp, #-32]!
    3f4c:	mov	x29, sp
    3f50:	str	x0, [sp, #24]
    3f54:	str	w1, [sp, #20]
    3f58:	ldr	x0, [sp, #24]
    3f5c:	ldr	x0, [x0]
    3f60:	mov	x1, #0x0                   	// #0
    3f64:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3f68:	ldr	w0, [x0]
    3f6c:	ldr	w1, [sp, #20]
    3f70:	cmp	w1, w0
    3f74:	cset	w0, eq  // eq = none
    3f78:	and	w0, w0, #0xff
    3f7c:	ldp	x29, x30, [sp], #32
    3f80:	ret

0000000000003f84 <_ZZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblENKUlsE_clEs>:
    3f84:	stp	x29, x30, [sp, #-32]!
    3f88:	mov	x29, sp
    3f8c:	str	x0, [sp, #24]
    3f90:	strh	w1, [sp, #22]
    3f94:	ldr	x0, [sp, #24]
    3f98:	ldr	x0, [x0]
    3f9c:	mov	x1, #0x0                   	// #0
    3fa0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3fa4:	ldrsh	w0, [x0]
    3fa8:	ldrsh	w1, [sp, #22]
    3fac:	cmp	w1, w0
    3fb0:	cset	w0, eq  // eq = none
    3fb4:	and	w0, w0, #0xff
    3fb8:	ldp	x29, x30, [sp], #32
    3fbc:	ret

0000000000003fc0 <_ZZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblENKUlaE_clEa>:
    3fc0:	stp	x29, x30, [sp, #-32]!
    3fc4:	mov	x29, sp
    3fc8:	str	x0, [sp, #24]
    3fcc:	strb	w1, [sp, #23]
    3fd0:	ldr	x0, [sp, #24]
    3fd4:	ldr	x0, [x0]
    3fd8:	mov	x1, #0x0                   	// #0
    3fdc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    3fe0:	ldrsb	w0, [x0]
    3fe4:	ldrsb	w1, [sp, #23]
    3fe8:	cmp	w1, w0
    3fec:	cset	w0, eq  // eq = none
    3ff0:	and	w0, w0, #0xff
    3ff4:	ldp	x29, x30, [sp], #32
    3ff8:	ret

0000000000003ffc <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE>:
    3ffc:	stp	x29, x30, [sp, #-384]!
    4000:	mov	x29, sp
    4004:	stp	x19, x20, [sp, #16]
    4008:	str	x0, [sp, #72]
    400c:	str	x1, [sp, #64]
    4010:	str	w2, [sp, #60]
    4014:	str	x3, [sp, #48]
    4018:	str	x4, [sp, #40]
    401c:	str	x5, [sp, #32]
    4020:	ldr	x0, [sp, #32]
    4024:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4028:	str	x0, [sp, #360]
    402c:	ldr	x0, [sp, #72]
    4030:	str	x0, [sp, #376]
    4034:	str	wzr, [sp, #372]
    4038:	mov	w0, #0x3                   	// #3
    403c:	str	w0, [sp, #368]
    4040:	ldr	x1, [sp, #376]
    4044:	ldr	x0, [sp, #72]
    4048:	sub	x0, x1, x0
    404c:	str	x0, [sp, #352]
    4050:	ldr	x0, [sp, #376]
    4054:	ldrb	w0, [x0]
    4058:	cmp	w0, #0x8
    405c:	b.eq	4dcc <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xdd0>  // b.none
    4060:	cmp	w0, #0x8
    4064:	b.gt	40c8 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xcc>
    4068:	cmp	w0, #0x7
    406c:	b.eq	4c7c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xc80>  // b.none
    4070:	cmp	w0, #0x7
    4074:	b.gt	40c8 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xcc>
    4078:	cmp	w0, #0x6
    407c:	b.eq	4944 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x948>  // b.none
    4080:	cmp	w0, #0x6
    4084:	b.gt	40c8 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xcc>
    4088:	cmp	w0, #0x5
    408c:	b.eq	478c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x790>  // b.none
    4090:	cmp	w0, #0x5
    4094:	b.gt	40c8 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xcc>
    4098:	cmp	w0, #0x4
    409c:	b.eq	4610 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x614>  // b.none
    40a0:	cmp	w0, #0x4
    40a4:	b.gt	40c8 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xcc>
    40a8:	cmp	w0, #0x3
    40ac:	b.eq	43c4 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x3c8>  // b.none
    40b0:	cmp	w0, #0x3
    40b4:	b.gt	40c8 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xcc>
    40b8:	cmp	w0, #0x1
    40bc:	b.eq	40f0 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xf4>  // b.none
    40c0:	cmp	w0, #0x2
    40c4:	b.eq	41f8 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x1fc>  // b.none
    40c8:	bl	0 <_ZN4llvm4errsEv>
    40cc:	ldr	x1, [sp, #352]
    40d0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    40d4:	mov	x2, x0
    40d8:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    40dc:	add	x1, x0, #0x0
    40e0:	mov	x0, x2
    40e4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    40e8:	mov	w19, #0x0                   	// #0
    40ec:	b	4e5c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe60>
    40f0:	ldr	x0, [sp, #376]
    40f4:	add	x0, x0, #0x1
    40f8:	str	x0, [sp, #376]
    40fc:	ldr	x0, [sp, #376]
    4100:	ldrb	w0, [x0]
    4104:	str	w0, [sp, #280]
    4108:	ldr	x0, [sp, #376]
    410c:	add	x0, x0, #0x1
    4110:	str	x0, [sp, #376]
    4114:	ldr	x0, [sp, #376]
    4118:	ldrb	w0, [x0]
    411c:	str	w0, [sp, #276]
    4120:	ldr	x0, [sp, #376]
    4124:	add	x0, x0, #0x1
    4128:	str	x0, [sp, #376]
    412c:	ldr	w2, [sp, #276]
    4130:	ldr	w1, [sp, #280]
    4134:	ldr	w0, [sp, #60]
    4138:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    413c:	str	w0, [sp, #372]
    4140:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    4144:	ldr	x0, [x0]
    4148:	ldrb	w0, [x0]
    414c:	cmp	w0, #0x0
    4150:	b.eq	4174 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x178>  // b.none
    4154:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4158:	add	x0, x0, #0x0
    415c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    4160:	and	w0, w0, #0xff
    4164:	cmp	w0, #0x0
    4168:	b.eq	4174 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x178>  // b.none
    416c:	mov	w0, #0x1                   	// #1
    4170:	b	4178 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x17c>
    4174:	mov	w0, #0x0                   	// #0
    4178:	cmp	w0, #0x0
    417c:	b.eq	4e34 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe38>  // b.none
    4180:	bl	0 <_ZN4llvm4dbgsEv>
    4184:	ldr	x1, [sp, #352]
    4188:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    418c:	mov	x2, x0
    4190:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4194:	add	x1, x0, #0x0
    4198:	mov	x0, x2
    419c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    41a0:	ldr	w1, [sp, #280]
    41a4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    41a8:	mov	x2, x0
    41ac:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    41b0:	add	x1, x0, #0x0
    41b4:	mov	x0, x2
    41b8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    41bc:	ldr	w1, [sp, #276]
    41c0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    41c4:	mov	x2, x0
    41c8:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    41cc:	add	x1, x0, #0x0
    41d0:	mov	x0, x2
    41d4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    41d8:	ldr	w1, [sp, #372]
    41dc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    41e0:	mov	x2, x0
    41e4:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    41e8:	add	x1, x0, #0x0
    41ec:	mov	x0, x2
    41f0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    41f4:	b	4e34 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe38>
    41f8:	ldr	x0, [sp, #376]
    41fc:	add	x0, x0, #0x1
    4200:	str	x0, [sp, #376]
    4204:	add	x0, sp, #0x110
    4208:	mov	x3, #0x0                   	// #0
    420c:	mov	x2, #0x0                   	// #0
    4210:	mov	x1, x0
    4214:	ldr	x0, [sp, #376]
    4218:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    421c:	str	w0, [sp, #288]
    4220:	ldr	w0, [sp, #272]
    4224:	mov	w0, w0
    4228:	ldr	x1, [sp, #376]
    422c:	add	x0, x1, x0
    4230:	str	x0, [sp, #376]
    4234:	ldr	x0, [sp, #376]
    4238:	add	x1, x0, #0x1
    423c:	str	x1, [sp, #376]
    4240:	ldrb	w0, [x0]
    4244:	str	w0, [sp, #284]
    4248:	ldr	x0, [sp, #376]
    424c:	add	x1, x0, #0x1
    4250:	str	x1, [sp, #376]
    4254:	ldrb	w0, [x0]
    4258:	lsl	w0, w0, #8
    425c:	mov	w1, w0
    4260:	ldr	w0, [sp, #284]
    4264:	orr	w0, w0, w1
    4268:	str	w0, [sp, #284]
    426c:	ldr	x0, [sp, #376]
    4270:	add	x1, x0, #0x1
    4274:	str	x1, [sp, #376]
    4278:	ldrb	w0, [x0]
    427c:	lsl	w0, w0, #16
    4280:	mov	w1, w0
    4284:	ldr	w0, [sp, #284]
    4288:	orr	w0, w0, w1
    428c:	str	w0, [sp, #284]
    4290:	ldr	w1, [sp, #288]
    4294:	ldr	w0, [sp, #372]
    4298:	cmp	w1, w0
    429c:	b.eq	42b0 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x2b4>  // b.none
    42a0:	ldr	w0, [sp, #284]
    42a4:	ldr	x1, [sp, #376]
    42a8:	add	x0, x1, x0
    42ac:	str	x0, [sp, #376]
    42b0:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    42b4:	ldr	x0, [x0]
    42b8:	ldrb	w0, [x0]
    42bc:	cmp	w0, #0x0
    42c0:	b.eq	42e4 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x2e8>  // b.none
    42c4:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    42c8:	add	x0, x0, #0x0
    42cc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    42d0:	and	w0, w0, #0xff
    42d4:	cmp	w0, #0x0
    42d8:	b.eq	42e4 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x2e8>  // b.none
    42dc:	mov	w0, #0x1                   	// #1
    42e0:	b	42e8 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x2ec>
    42e4:	mov	w0, #0x0                   	// #0
    42e8:	cmp	w0, #0x0
    42ec:	b.eq	4e3c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe40>  // b.none
    42f0:	bl	0 <_ZN4llvm4dbgsEv>
    42f4:	ldr	x1, [sp, #352]
    42f8:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    42fc:	mov	x2, x0
    4300:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4304:	add	x1, x0, #0x0
    4308:	mov	x0, x2
    430c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4310:	ldr	w1, [sp, #288]
    4314:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4318:	mov	x2, x0
    431c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4320:	add	x1, x0, #0x0
    4324:	mov	x0, x2
    4328:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    432c:	ldr	w1, [sp, #284]
    4330:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4334:	mov	x2, x0
    4338:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    433c:	add	x1, x0, #0x0
    4340:	mov	x0, x2
    4344:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4348:	mov	x2, x0
    434c:	ldr	w1, [sp, #288]
    4350:	ldr	w0, [sp, #372]
    4354:	cmp	w1, w0
    4358:	b.eq	4368 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x36c>  // b.none
    435c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4360:	add	x0, x0, #0x0
    4364:	b	4370 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x374>
    4368:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    436c:	add	x0, x0, #0x0
    4370:	mov	x1, x0
    4374:	mov	x0, x2
    4378:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    437c:	mov	x2, x0
    4380:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4384:	add	x1, x0, #0x0
    4388:	mov	x0, x2
    438c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4390:	mov	x2, x0
    4394:	ldr	x1, [sp, #376]
    4398:	ldr	x0, [sp, #72]
    439c:	sub	x0, x1, x0
    43a0:	mov	x1, x0
    43a4:	mov	x0, x2
    43a8:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    43ac:	mov	x2, x0
    43b0:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    43b4:	add	x1, x0, #0x0
    43b8:	mov	x0, x2
    43bc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    43c0:	b	4e3c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe40>
    43c4:	ldr	x0, [sp, #376]
    43c8:	add	x0, x0, #0x1
    43cc:	str	x0, [sp, #376]
    43d0:	ldr	x0, [sp, #376]
    43d4:	ldrb	w0, [x0]
    43d8:	str	w0, [sp, #304]
    43dc:	ldr	x0, [sp, #376]
    43e0:	add	x0, x0, #0x1
    43e4:	str	x0, [sp, #376]
    43e8:	ldr	x0, [sp, #376]
    43ec:	ldrb	w0, [x0]
    43f0:	str	w0, [sp, #268]
    43f4:	ldr	w0, [sp, #268]
    43f8:	mov	w2, w0
    43fc:	ldr	w1, [sp, #304]
    4400:	ldr	w0, [sp, #60]
    4404:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    4408:	str	w0, [sp, #300]
    440c:	ldr	x0, [sp, #376]
    4410:	add	x0, x0, #0x1
    4414:	str	x0, [sp, #376]
    4418:	add	x0, sp, #0x10c
    441c:	mov	x3, #0x0                   	// #0
    4420:	mov	x2, #0x0                   	// #0
    4424:	mov	x1, x0
    4428:	ldr	x0, [sp, #376]
    442c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4430:	str	w0, [sp, #296]
    4434:	ldr	w0, [sp, #268]
    4438:	mov	w0, w0
    443c:	ldr	x1, [sp, #376]
    4440:	add	x0, x1, x0
    4444:	str	x0, [sp, #376]
    4448:	ldr	x0, [sp, #376]
    444c:	add	x1, x0, #0x1
    4450:	str	x1, [sp, #376]
    4454:	ldrb	w0, [x0]
    4458:	str	w0, [sp, #292]
    445c:	ldr	x0, [sp, #376]
    4460:	add	x1, x0, #0x1
    4464:	str	x1, [sp, #376]
    4468:	ldrb	w0, [x0]
    446c:	lsl	w0, w0, #8
    4470:	mov	w1, w0
    4474:	ldr	w0, [sp, #292]
    4478:	orr	w0, w0, w1
    447c:	str	w0, [sp, #292]
    4480:	ldr	x0, [sp, #376]
    4484:	add	x1, x0, #0x1
    4488:	str	x1, [sp, #376]
    448c:	ldrb	w0, [x0]
    4490:	lsl	w0, w0, #16
    4494:	mov	w1, w0
    4498:	ldr	w0, [sp, #292]
    449c:	orr	w0, w0, w1
    44a0:	str	w0, [sp, #292]
    44a4:	ldr	w1, [sp, #296]
    44a8:	ldr	w0, [sp, #300]
    44ac:	cmp	w1, w0
    44b0:	b.eq	44c4 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x4c8>  // b.none
    44b4:	ldr	w0, [sp, #292]
    44b8:	ldr	x1, [sp, #376]
    44bc:	add	x0, x1, x0
    44c0:	str	x0, [sp, #376]
    44c4:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    44c8:	ldr	x0, [x0]
    44cc:	ldrb	w0, [x0]
    44d0:	cmp	w0, #0x0
    44d4:	b.eq	44f8 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x4fc>  // b.none
    44d8:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    44dc:	add	x0, x0, #0x0
    44e0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    44e4:	and	w0, w0, #0xff
    44e8:	cmp	w0, #0x0
    44ec:	b.eq	44f8 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x4fc>  // b.none
    44f0:	mov	w0, #0x1                   	// #1
    44f4:	b	44fc <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x500>
    44f8:	mov	w0, #0x0                   	// #0
    44fc:	cmp	w0, #0x0
    4500:	b.eq	4e44 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe48>  // b.none
    4504:	bl	0 <_ZN4llvm4dbgsEv>
    4508:	ldr	x1, [sp, #352]
    450c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    4510:	mov	x2, x0
    4514:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4518:	add	x1, x0, #0x0
    451c:	mov	x0, x2
    4520:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4524:	ldr	w1, [sp, #304]
    4528:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    452c:	mov	x2, x0
    4530:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4534:	add	x1, x0, #0x0
    4538:	mov	x0, x2
    453c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4540:	mov	x2, x0
    4544:	ldr	w0, [sp, #268]
    4548:	mov	w1, w0
    454c:	mov	x0, x2
    4550:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4554:	mov	x2, x0
    4558:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    455c:	add	x1, x0, #0x0
    4560:	mov	x0, x2
    4564:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4568:	ldr	w1, [sp, #296]
    456c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4570:	mov	x2, x0
    4574:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4578:	add	x1, x0, #0x0
    457c:	mov	x0, x2
    4580:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4584:	ldr	w1, [sp, #292]
    4588:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    458c:	mov	x2, x0
    4590:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4594:	add	x1, x0, #0x0
    4598:	mov	x0, x2
    459c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    45a0:	ldr	w1, [sp, #300]
    45a4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    45a8:	mov	x2, x0
    45ac:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    45b0:	add	x1, x0, #0x0
    45b4:	mov	x0, x2
    45b8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    45bc:	ldr	w1, [sp, #296]
    45c0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    45c4:	mov	x2, x0
    45c8:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    45cc:	add	x1, x0, #0x0
    45d0:	mov	x0, x2
    45d4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    45d8:	mov	x2, x0
    45dc:	ldr	w1, [sp, #296]
    45e0:	ldr	w0, [sp, #300]
    45e4:	cmp	w1, w0
    45e8:	b.ne	45f8 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x5fc>  // b.any
    45ec:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    45f0:	add	x0, x0, #0x0
    45f4:	b	4600 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x604>
    45f8:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    45fc:	add	x0, x0, #0x0
    4600:	mov	x1, x0
    4604:	mov	x0, x2
    4608:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    460c:	b	4e44 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe48>
    4610:	ldr	x0, [sp, #376]
    4614:	add	x0, x0, #0x1
    4618:	str	x0, [sp, #376]
    461c:	add	x0, sp, #0x108
    4620:	mov	x3, #0x0                   	// #0
    4624:	mov	x2, #0x0                   	// #0
    4628:	mov	x1, x0
    462c:	ldr	x0, [sp, #376]
    4630:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4634:	str	w0, [sp, #316]
    4638:	ldr	w0, [sp, #264]
    463c:	mov	w0, w0
    4640:	ldr	x1, [sp, #376]
    4644:	add	x0, x1, x0
    4648:	str	x0, [sp, #376]
    464c:	ldr	x0, [sp, #376]
    4650:	add	x1, x0, #0x1
    4654:	str	x1, [sp, #376]
    4658:	ldrb	w0, [x0]
    465c:	str	w0, [sp, #312]
    4660:	ldr	x0, [sp, #376]
    4664:	add	x1, x0, #0x1
    4668:	str	x1, [sp, #376]
    466c:	ldrb	w0, [x0]
    4670:	lsl	w0, w0, #8
    4674:	mov	w1, w0
    4678:	ldr	w0, [sp, #312]
    467c:	orr	w0, w0, w1
    4680:	str	w0, [sp, #312]
    4684:	ldr	x0, [sp, #376]
    4688:	add	x1, x0, #0x1
    468c:	str	x1, [sp, #376]
    4690:	ldrb	w0, [x0]
    4694:	lsl	w0, w0, #16
    4698:	mov	w1, w0
    469c:	ldr	w0, [sp, #312]
    46a0:	orr	w0, w0, w1
    46a4:	str	w0, [sp, #312]
    46a8:	ldr	x1, [sp, #360]
    46ac:	ldr	w0, [sp, #316]
    46b0:	bl	164 <_ZN4llvmL21checkDecoderPredicateEjRKNS_13FeatureBitsetE>
    46b4:	strb	w0, [sp, #311]
    46b8:	ldrb	w0, [sp, #311]
    46bc:	eor	w0, w0, #0x1
    46c0:	and	w0, w0, #0xff
    46c4:	cmp	w0, #0x0
    46c8:	b.eq	46dc <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x6e0>  // b.none
    46cc:	ldr	w0, [sp, #312]
    46d0:	ldr	x1, [sp, #376]
    46d4:	add	x0, x1, x0
    46d8:	str	x0, [sp, #376]
    46dc:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    46e0:	ldr	x0, [x0]
    46e4:	ldrb	w0, [x0]
    46e8:	cmp	w0, #0x0
    46ec:	b.eq	4710 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x714>  // b.none
    46f0:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    46f4:	add	x0, x0, #0x0
    46f8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    46fc:	and	w0, w0, #0xff
    4700:	cmp	w0, #0x0
    4704:	b.eq	4710 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x714>  // b.none
    4708:	mov	w0, #0x1                   	// #1
    470c:	b	4714 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x718>
    4710:	mov	w0, #0x0                   	// #0
    4714:	cmp	w0, #0x0
    4718:	b.eq	4e4c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe50>  // b.none
    471c:	bl	0 <_ZN4llvm4dbgsEv>
    4720:	ldr	x1, [sp, #352]
    4724:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    4728:	mov	x2, x0
    472c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4730:	add	x1, x0, #0x0
    4734:	mov	x0, x2
    4738:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    473c:	ldr	w1, [sp, #316]
    4740:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4744:	mov	x2, x0
    4748:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    474c:	add	x1, x0, #0x0
    4750:	mov	x0, x2
    4754:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4758:	mov	x2, x0
    475c:	ldrb	w0, [sp, #311]
    4760:	cmp	w0, #0x0
    4764:	b.eq	4774 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x778>  // b.none
    4768:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    476c:	add	x0, x0, #0x0
    4770:	b	477c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x780>
    4774:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4778:	add	x0, x0, #0x0
    477c:	mov	x1, x0
    4780:	mov	x0, x2
    4784:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4788:	b	4e4c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe50>
    478c:	ldr	x0, [sp, #376]
    4790:	add	x0, x0, #0x1
    4794:	str	x0, [sp, #376]
    4798:	add	x0, sp, #0x104
    479c:	mov	x3, #0x0                   	// #0
    47a0:	mov	x2, #0x0                   	// #0
    47a4:	mov	x1, x0
    47a8:	ldr	x0, [sp, #376]
    47ac:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    47b0:	str	w0, [sp, #324]
    47b4:	ldr	w0, [sp, #260]
    47b8:	mov	w0, w0
    47bc:	ldr	x1, [sp, #376]
    47c0:	add	x0, x1, x0
    47c4:	str	x0, [sp, #376]
    47c8:	add	x0, sp, #0x104
    47cc:	mov	x3, #0x0                   	// #0
    47d0:	mov	x2, #0x0                   	// #0
    47d4:	mov	x1, x0
    47d8:	ldr	x0, [sp, #376]
    47dc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    47e0:	str	w0, [sp, #320]
    47e4:	ldr	w0, [sp, #260]
    47e8:	mov	w0, w0
    47ec:	ldr	x1, [sp, #376]
    47f0:	add	x0, x1, x0
    47f4:	str	x0, [sp, #376]
    47f8:	ldr	x0, [sp, #64]
    47fc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4800:	ldr	w1, [sp, #324]
    4804:	ldr	x0, [sp, #64]
    4808:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    480c:	add	x0, sp, #0x103
    4810:	mov	x6, x0
    4814:	ldr	x5, [sp, #40]
    4818:	ldr	x4, [sp, #48]
    481c:	ldr	x3, [sp, #64]
    4820:	ldr	w2, [sp, #60]
    4824:	ldr	w1, [sp, #320]
    4828:	ldr	w0, [sp, #368]
    482c:	bl	4f70 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb>
    4830:	str	w0, [sp, #368]
    4834:	ldrb	w0, [sp, #259]
    4838:	cmp	w0, #0x0
    483c:	b.ne	4860 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x864>  // b.any
    4840:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4844:	add	x3, x0, #0x0
    4848:	mov	w2, #0x64d6                	// #25814
    484c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4850:	add	x1, x0, #0x0
    4854:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4858:	add	x0, x0, #0x0
    485c:	bl	0 <__assert_fail>
    4860:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    4864:	ldr	x0, [x0]
    4868:	ldrb	w0, [x0]
    486c:	cmp	w0, #0x0
    4870:	b.eq	4894 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x898>  // b.none
    4874:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4878:	add	x0, x0, #0x0
    487c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    4880:	and	w0, w0, #0xff
    4884:	cmp	w0, #0x0
    4888:	b.eq	4894 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x898>  // b.none
    488c:	mov	w0, #0x1                   	// #1
    4890:	b	4898 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x89c>
    4894:	mov	w0, #0x0                   	// #0
    4898:	cmp	w0, #0x0
    489c:	b.eq	493c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x940>  // b.none
    48a0:	bl	0 <_ZN4llvm4dbgsEv>
    48a4:	ldr	x1, [sp, #352]
    48a8:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    48ac:	mov	x2, x0
    48b0:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    48b4:	add	x1, x0, #0x0
    48b8:	mov	x0, x2
    48bc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    48c0:	ldr	w1, [sp, #324]
    48c4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    48c8:	mov	x2, x0
    48cc:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    48d0:	add	x1, x0, #0x0
    48d4:	mov	x0, x2
    48d8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    48dc:	ldr	w1, [sp, #320]
    48e0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    48e4:	mov	x2, x0
    48e8:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    48ec:	add	x1, x0, #0x0
    48f0:	mov	x0, x2
    48f4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    48f8:	mov	x2, x0
    48fc:	ldr	w0, [sp, #368]
    4900:	cmp	w0, #0x0
    4904:	b.eq	4914 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x918>  // b.none
    4908:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    490c:	add	x0, x0, #0x0
    4910:	b	491c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x920>
    4914:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4918:	add	x0, x0, #0x0
    491c:	mov	x1, x0
    4920:	mov	x0, x2
    4924:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4928:	mov	x2, x0
    492c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4930:	add	x1, x0, #0x0
    4934:	mov	x0, x2
    4938:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    493c:	ldr	w19, [sp, #368]
    4940:	b	4e5c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe60>
    4944:	ldr	x0, [sp, #376]
    4948:	add	x0, x0, #0x1
    494c:	str	x0, [sp, #376]
    4950:	add	x0, sp, #0xfc
    4954:	mov	x3, #0x0                   	// #0
    4958:	mov	x2, #0x0                   	// #0
    495c:	mov	x1, x0
    4960:	ldr	x0, [sp, #376]
    4964:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4968:	str	w0, [sp, #336]
    496c:	ldr	w0, [sp, #252]
    4970:	mov	w0, w0
    4974:	ldr	x1, [sp, #376]
    4978:	add	x0, x1, x0
    497c:	str	x0, [sp, #376]
    4980:	add	x0, sp, #0xfc
    4984:	mov	x3, #0x0                   	// #0
    4988:	mov	x2, #0x0                   	// #0
    498c:	mov	x1, x0
    4990:	ldr	x0, [sp, #376]
    4994:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4998:	str	w0, [sp, #332]
    499c:	ldr	w0, [sp, #252]
    49a0:	mov	w0, w0
    49a4:	ldr	x1, [sp, #376]
    49a8:	add	x0, x1, x0
    49ac:	str	x0, [sp, #376]
    49b0:	ldr	x0, [sp, #376]
    49b4:	add	x1, x0, #0x1
    49b8:	str	x1, [sp, #376]
    49bc:	ldrb	w0, [x0]
    49c0:	str	w0, [sp, #328]
    49c4:	ldr	x0, [sp, #376]
    49c8:	add	x1, x0, #0x1
    49cc:	str	x1, [sp, #376]
    49d0:	ldrb	w0, [x0]
    49d4:	lsl	w0, w0, #8
    49d8:	mov	w1, w0
    49dc:	ldr	w0, [sp, #328]
    49e0:	orr	w0, w0, w1
    49e4:	str	w0, [sp, #328]
    49e8:	ldr	x0, [sp, #376]
    49ec:	add	x1, x0, #0x1
    49f0:	str	x1, [sp, #376]
    49f4:	ldrb	w0, [x0]
    49f8:	lsl	w0, w0, #16
    49fc:	mov	w1, w0
    4a00:	ldr	w0, [sp, #328]
    4a04:	orr	w0, w0, w1
    4a08:	str	w0, [sp, #328]
    4a0c:	add	x0, sp, #0x50
    4a10:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4a14:	add	x0, sp, #0x50
    4a18:	ldr	w1, [sp, #336]
    4a1c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4a20:	add	x1, sp, #0xfb
    4a24:	add	x0, sp, #0x50
    4a28:	mov	x6, x1
    4a2c:	ldr	x5, [sp, #40]
    4a30:	ldr	x4, [sp, #48]
    4a34:	mov	x3, x0
    4a38:	ldr	w2, [sp, #60]
    4a3c:	ldr	w1, [sp, #332]
    4a40:	ldr	w0, [sp, #368]
    4a44:	bl	4f70 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb>
    4a48:	str	w0, [sp, #368]
    4a4c:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    4a50:	ldr	x0, [x0]
    4a54:	ldrb	w0, [x0]
    4a58:	cmp	w0, #0x0
    4a5c:	b.eq	4a80 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xa84>  // b.none
    4a60:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4a64:	add	x0, x0, #0x0
    4a68:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    4a6c:	and	w0, w0, #0xff
    4a70:	cmp	w0, #0x0
    4a74:	b.eq	4a80 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xa84>  // b.none
    4a78:	mov	w0, #0x1                   	// #1
    4a7c:	b	4a84 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xa88>
    4a80:	mov	w0, #0x0                   	// #0
    4a84:	cmp	w0, #0x0
    4a88:	b.eq	4ae4 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xae8>  // b.none
    4a8c:	bl	0 <_ZN4llvm4dbgsEv>
    4a90:	ldr	x1, [sp, #352]
    4a94:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    4a98:	mov	x2, x0
    4a9c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4aa0:	add	x1, x0, #0x0
    4aa4:	mov	x0, x2
    4aa8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4aac:	ldr	w1, [sp, #336]
    4ab0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4ab4:	mov	x2, x0
    4ab8:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4abc:	add	x1, x0, #0x0
    4ac0:	mov	x0, x2
    4ac4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4ac8:	ldr	w1, [sp, #332]
    4acc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4ad0:	mov	x2, x0
    4ad4:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4ad8:	add	x1, x0, #0x0
    4adc:	mov	x0, x2
    4ae0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4ae4:	ldrb	w0, [sp, #251]
    4ae8:	cmp	w0, #0x0
    4aec:	b.eq	4b94 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xb98>  // b.none
    4af0:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    4af4:	ldr	x0, [x0]
    4af8:	ldrb	w0, [x0]
    4afc:	cmp	w0, #0x0
    4b00:	b.eq	4b24 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xb28>  // b.none
    4b04:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4b08:	add	x0, x0, #0x0
    4b0c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    4b10:	and	w0, w0, #0xff
    4b14:	cmp	w0, #0x0
    4b18:	b.eq	4b24 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xb28>  // b.none
    4b1c:	mov	w0, #0x1                   	// #1
    4b20:	b	4b28 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xb2c>
    4b24:	mov	w0, #0x0                   	// #0
    4b28:	cmp	w0, #0x0
    4b2c:	b.eq	4b78 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xb7c>  // b.none
    4b30:	bl	0 <_ZN4llvm4dbgsEv>
    4b34:	mov	x2, x0
    4b38:	ldr	w0, [sp, #368]
    4b3c:	cmp	w0, #0x0
    4b40:	b.eq	4b50 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xb54>  // b.none
    4b44:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4b48:	add	x0, x0, #0x0
    4b4c:	b	4b58 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xb5c>
    4b50:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4b54:	add	x0, x0, #0x0
    4b58:	mov	x1, x0
    4b5c:	mov	x0, x2
    4b60:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4b64:	mov	x2, x0
    4b68:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4b6c:	add	x1, x0, #0x0
    4b70:	mov	x0, x2
    4b74:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4b78:	add	x0, sp, #0x50
    4b7c:	mov	x1, x0
    4b80:	ldr	x0, [sp, #64]
    4b84:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4b88:	ldr	w19, [sp, #368]
    4b8c:	mov	w20, #0x0                   	// #0
    4b90:	b	4c68 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xc6c>
    4b94:	ldr	w0, [sp, #368]
    4b98:	cmp	w0, #0x0
    4b9c:	b.eq	4bc0 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xbc4>  // b.none
    4ba0:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4ba4:	add	x3, x0, #0x0
    4ba8:	mov	w2, #0x64f7                	// #25847
    4bac:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4bb0:	add	x1, x0, #0x0
    4bb4:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4bb8:	add	x0, x0, #0x0
    4bbc:	bl	0 <__assert_fail>
    4bc0:	ldr	w0, [sp, #328]
    4bc4:	ldr	x1, [sp, #376]
    4bc8:	add	x0, x1, x0
    4bcc:	str	x0, [sp, #376]
    4bd0:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    4bd4:	ldr	x0, [x0]
    4bd8:	ldrb	w0, [x0]
    4bdc:	cmp	w0, #0x0
    4be0:	b.eq	4c04 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xc08>  // b.none
    4be4:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4be8:	add	x0, x0, #0x0
    4bec:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    4bf0:	and	w0, w0, #0xff
    4bf4:	cmp	w0, #0x0
    4bf8:	b.eq	4c04 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xc08>  // b.none
    4bfc:	mov	w0, #0x1                   	// #1
    4c00:	b	4c08 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xc0c>
    4c04:	mov	w0, #0x0                   	// #0
    4c08:	cmp	w0, #0x0
    4c0c:	b.eq	4c58 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xc5c>  // b.none
    4c10:	bl	0 <_ZN4llvm4dbgsEv>
    4c14:	mov	x2, x0
    4c18:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4c1c:	add	x1, x0, #0x0
    4c20:	mov	x0, x2
    4c24:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4c28:	mov	x2, x0
    4c2c:	ldr	x1, [sp, #376]
    4c30:	ldr	x0, [sp, #72]
    4c34:	sub	x0, x1, x0
    4c38:	mov	x1, x0
    4c3c:	mov	x0, x2
    4c40:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    4c44:	mov	x2, x0
    4c48:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4c4c:	add	x1, x0, #0x0
    4c50:	mov	x0, x2
    4c54:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4c58:	mov	w0, #0x3                   	// #3
    4c5c:	str	w0, [sp, #368]
    4c60:	mov	w20, #0x1                   	// #1
    4c64:	nop
    4c68:	add	x0, sp, #0x50
    4c6c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4c70:	cmp	w20, #0x0
    4c74:	b.ne	4040 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x44>  // b.any
    4c78:	b	4e5c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe60>
    4c7c:	ldr	x0, [sp, #376]
    4c80:	add	x0, x0, #0x1
    4c84:	str	x0, [sp, #376]
    4c88:	add	x0, sp, #0xf4
    4c8c:	mov	x3, #0x0                   	// #0
    4c90:	mov	x2, #0x0                   	// #0
    4c94:	mov	x1, x0
    4c98:	ldr	x0, [sp, #376]
    4c9c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4ca0:	str	w0, [sp, #348]
    4ca4:	ldr	w0, [sp, #244]
    4ca8:	mov	w0, w0
    4cac:	ldr	x1, [sp, #376]
    4cb0:	add	x0, x1, x0
    4cb4:	str	x0, [sp, #376]
    4cb8:	add	x0, sp, #0xf4
    4cbc:	mov	x3, #0x0                   	// #0
    4cc0:	mov	x2, #0x0                   	// #0
    4cc4:	mov	x1, x0
    4cc8:	ldr	x0, [sp, #376]
    4ccc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4cd0:	str	w0, [sp, #344]
    4cd4:	ldr	w0, [sp, #244]
    4cd8:	mov	w0, w0
    4cdc:	ldr	x1, [sp, #376]
    4ce0:	add	x0, x1, x0
    4ce4:	str	x0, [sp, #376]
    4ce8:	ldr	w1, [sp, #60]
    4cec:	ldr	w0, [sp, #348]
    4cf0:	and	w0, w1, w0
    4cf4:	cmp	w0, #0x0
    4cf8:	b.ne	4d14 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xd18>  // b.any
    4cfc:	ldr	w0, [sp, #60]
    4d00:	mvn	w1, w0
    4d04:	ldr	w0, [sp, #344]
    4d08:	and	w0, w1, w0
    4d0c:	cmp	w0, #0x0
    4d10:	b.eq	4d1c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xd20>  // b.none
    4d14:	mov	w0, #0x1                   	// #1
    4d18:	b	4d20 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xd24>
    4d1c:	mov	w0, #0x0                   	// #0
    4d20:	strb	w0, [sp, #343]
    4d24:	ldrb	w0, [sp, #343]
    4d28:	cmp	w0, #0x0
    4d2c:	b.eq	4d38 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xd3c>  // b.none
    4d30:	mov	w0, #0x1                   	// #1
    4d34:	str	w0, [sp, #368]
    4d38:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    4d3c:	ldr	x0, [x0]
    4d40:	ldrb	w0, [x0]
    4d44:	cmp	w0, #0x0
    4d48:	b.eq	4d6c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xd70>  // b.none
    4d4c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4d50:	add	x0, x0, #0x0
    4d54:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    4d58:	and	w0, w0, #0xff
    4d5c:	cmp	w0, #0x0
    4d60:	b.eq	4d6c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xd70>  // b.none
    4d64:	mov	w0, #0x1                   	// #1
    4d68:	b	4d70 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xd74>
    4d6c:	mov	w0, #0x0                   	// #0
    4d70:	cmp	w0, #0x0
    4d74:	b.eq	4e54 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe58>  // b.none
    4d78:	bl	0 <_ZN4llvm4dbgsEv>
    4d7c:	ldr	x1, [sp, #352]
    4d80:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    4d84:	mov	x2, x0
    4d88:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4d8c:	add	x1, x0, #0x0
    4d90:	mov	x0, x2
    4d94:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4d98:	mov	x2, x0
    4d9c:	ldrb	w0, [sp, #343]
    4da0:	cmp	w0, #0x0
    4da4:	b.eq	4db4 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xdb8>  // b.none
    4da8:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4dac:	add	x0, x0, #0x0
    4db0:	b	4dbc <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xdc0>
    4db4:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4db8:	add	x0, x0, #0x0
    4dbc:	mov	x1, x0
    4dc0:	mov	x0, x2
    4dc4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4dc8:	b	4e54 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe58>
    4dcc:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    4dd0:	ldr	x0, [x0]
    4dd4:	ldrb	w0, [x0]
    4dd8:	cmp	w0, #0x0
    4ddc:	b.eq	4e00 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe04>  // b.none
    4de0:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4de4:	add	x0, x0, #0x0
    4de8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    4dec:	and	w0, w0, #0xff
    4df0:	cmp	w0, #0x0
    4df4:	b.eq	4e00 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe04>  // b.none
    4df8:	mov	w0, #0x1                   	// #1
    4dfc:	b	4e04 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe08>
    4e00:	mov	w0, #0x0                   	// #0
    4e04:	cmp	w0, #0x0
    4e08:	b.eq	4e2c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe30>  // b.none
    4e0c:	bl	0 <_ZN4llvm4dbgsEv>
    4e10:	ldr	x1, [sp, #352]
    4e14:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    4e18:	mov	x2, x0
    4e1c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4e20:	add	x1, x0, #0x0
    4e24:	mov	x0, x2
    4e28:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4e2c:	mov	w19, #0x0                   	// #0
    4e30:	b	4e5c <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0xe60>
    4e34:	nop
    4e38:	b	4040 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x44>
    4e3c:	nop
    4e40:	b	4040 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x44>
    4e44:	nop
    4e48:	b	4040 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x44>
    4e4c:	nop
    4e50:	b	4040 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x44>
    4e54:	nop
    4e58:	b	4040 <_ZN4llvmL17decodeInstructionIjEENS_14MCDisassembler12DecodeStatusEPKhRNS_6MCInstET_mPKvRKNS_15MCSubtargetInfoE+0x44>
    4e5c:	mov	w0, w19
    4e60:	ldp	x19, x20, [sp, #16]
    4e64:	ldp	x29, x30, [sp], #384
    4e68:	ret

0000000000004e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>:
    4e6c:	stp	x29, x30, [sp, #-48]!
    4e70:	mov	x29, sp
    4e74:	str	w0, [sp, #28]
    4e78:	str	w1, [sp, #24]
    4e7c:	str	w2, [sp, #20]
    4e80:	ldr	w2, [sp, #20]
    4e84:	ldr	w1, [sp, #24]
    4e88:	ldr	w0, [sp, #28]
    4e8c:	bl	2a718 <_ZN4llvmL20fieldFromInstructionIjEET_S1_jjSt17integral_constantIbLb1EE>
    4e90:	ldp	x29, x30, [sp], #48
    4e94:	ret

0000000000004e98 <_ZN4llvm6all_ofIRSt5arrayIiLm2EEZNS_10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEbOT_T0_>:
    4e98:	stp	x29, x30, [sp, #-48]!
    4e9c:	mov	x29, sp
    4ea0:	str	x19, [sp, #16]
    4ea4:	str	x0, [sp, #40]
    4ea8:	str	x1, [sp, #32]
    4eac:	ldr	x0, [sp, #40]
    4eb0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4eb4:	mov	x19, x0
    4eb8:	ldr	x0, [sp, #40]
    4ebc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4ec0:	ldr	x2, [sp, #32]
    4ec4:	mov	x1, x0
    4ec8:	mov	x0, x19
    4ecc:	bl	2a7e8 <_ZSt6all_ofIPiZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EbT_S5_T0_>
    4ed0:	and	w0, w0, #0xff
    4ed4:	ldr	x19, [sp, #16]
    4ed8:	ldp	x29, x30, [sp], #48
    4edc:	ret

0000000000004ee0 <_ZN4llvm6all_ofIRSt5arrayIsLm4EEZNS_10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEbOT_T0_>:
    4ee0:	stp	x29, x30, [sp, #-48]!
    4ee4:	mov	x29, sp
    4ee8:	str	x19, [sp, #16]
    4eec:	str	x0, [sp, #40]
    4ef0:	str	x1, [sp, #32]
    4ef4:	ldr	x0, [sp, #40]
    4ef8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4efc:	mov	x19, x0
    4f00:	ldr	x0, [sp, #40]
    4f04:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4f08:	ldr	x2, [sp, #32]
    4f0c:	mov	x1, x0
    4f10:	mov	x0, x19
    4f14:	bl	2a828 <_ZSt6all_ofIPsZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EbT_S5_T0_>
    4f18:	and	w0, w0, #0xff
    4f1c:	ldr	x19, [sp, #16]
    4f20:	ldp	x29, x30, [sp], #48
    4f24:	ret

0000000000004f28 <_ZN4llvm6all_ofIRSt5arrayIaLm8EEZNS_10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEbOT_T0_>:
    4f28:	stp	x29, x30, [sp, #-48]!
    4f2c:	mov	x29, sp
    4f30:	str	x19, [sp, #16]
    4f34:	str	x0, [sp, #40]
    4f38:	str	x1, [sp, #32]
    4f3c:	ldr	x0, [sp, #40]
    4f40:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4f44:	mov	x19, x0
    4f48:	ldr	x0, [sp, #40]
    4f4c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4f50:	ldr	x2, [sp, #32]
    4f54:	mov	x1, x0
    4f58:	mov	x0, x19
    4f5c:	bl	2a868 <_ZSt6all_ofIPaZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EbT_S5_T0_>
    4f60:	and	w0, w0, #0xff
    4f64:	ldr	x19, [sp, #16]
    4f68:	ldp	x29, x30, [sp], #48
    4f6c:	ret

0000000000004f70 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb>:
    4f70:	sub	sp, sp, #0xec0
    4f74:	stp	x29, x30, [sp]
    4f78:	mov	x29, sp
    4f7c:	str	w0, [sp, #60]
    4f80:	str	w1, [sp, #56]
    4f84:	str	w2, [sp, #52]
    4f88:	str	x3, [sp, #40]
    4f8c:	str	x4, [sp, #32]
    4f90:	str	x5, [sp, #24]
    4f94:	str	x6, [sp, #16]
    4f98:	ldr	x0, [sp, #16]
    4f9c:	mov	w1, #0x1                   	// #1
    4fa0:	strb	w1, [x0]
    4fa4:	ldr	w0, [sp, #56]
    4fa8:	cmp	w0, #0x225
    4fac:	b.hi	4fc8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x58>  // b.pmore
    4fb0:	adrp	x1, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4fb4:	add	x1, x1, #0x0
    4fb8:	ldr	w0, [x1, w0, uxtw #2]
    4fbc:	adr	x1, 4fc8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x58>
    4fc0:	add	x0, x1, w0, sxtw #2
    4fc4:	br	x0
    4fc8:	mov	w2, #0x50a6                	// #20646
    4fcc:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4fd0:	add	x1, x0, #0x0
    4fd4:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4fd8:	add	x0, x0, #0x0
    4fdc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    4fe0:	mov	w2, #0x10                  	// #16
    4fe4:	mov	w1, #0x0                   	// #0
    4fe8:	ldr	w0, [sp, #52]
    4fec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    4ff0:	str	w0, [sp, #3772]
    4ff4:	ldr	w0, [sp, #3772]
    4ff8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    4ffc:	stp	x0, x1, [sp, #72]
    5000:	add	x0, sp, #0x48
    5004:	mov	x1, x0
    5008:	ldr	x0, [sp, #40]
    500c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    5010:	ldr	w0, [sp, #60]
    5014:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5018:	mov	w2, #0x5                   	// #5
    501c:	mov	w1, #0x0                   	// #0
    5020:	ldr	w0, [sp, #52]
    5024:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5028:	str	w0, [sp, #3772]
    502c:	ldr	x3, [sp, #24]
    5030:	ldr	x2, [sp, #32]
    5034:	ldr	w1, [sp, #3772]
    5038:	ldr	x0, [sp, #40]
    503c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5040:	mov	w1, w0
    5044:	add	x0, sp, #0x3c
    5048:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    504c:	and	w0, w0, #0xff
    5050:	eor	w0, w0, #0x1
    5054:	and	w0, w0, #0xff
    5058:	cmp	w0, #0x0
    505c:	b.eq	5068 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf8>  // b.none
    5060:	mov	w0, #0x0                   	// #0
    5064:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5068:	mov	w2, #0x3                   	// #3
    506c:	mov	w1, #0xa                   	// #10
    5070:	ldr	w0, [sp, #52]
    5074:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5078:	str	w0, [sp, #3772]
    507c:	ldr	x3, [sp, #24]
    5080:	ldr	x2, [sp, #32]
    5084:	ldr	w1, [sp, #3772]
    5088:	ldr	x0, [sp, #40]
    508c:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    5090:	mov	w1, w0
    5094:	add	x0, sp, #0x3c
    5098:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    509c:	and	w0, w0, #0xff
    50a0:	eor	w0, w0, #0x1
    50a4:	and	w0, w0, #0xff
    50a8:	cmp	w0, #0x0
    50ac:	b.eq	50b8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x148>  // b.none
    50b0:	mov	w0, #0x0                   	// #0
    50b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    50b8:	mov	w2, #0x5                   	// #5
    50bc:	mov	w1, #0x0                   	// #0
    50c0:	ldr	w0, [sp, #52]
    50c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    50c8:	str	w0, [sp, #3772]
    50cc:	ldr	x3, [sp, #24]
    50d0:	ldr	x2, [sp, #32]
    50d4:	ldr	w1, [sp, #3772]
    50d8:	ldr	x0, [sp, #40]
    50dc:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    50e0:	mov	w1, w0
    50e4:	add	x0, sp, #0x3c
    50e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    50ec:	and	w0, w0, #0xff
    50f0:	eor	w0, w0, #0x1
    50f4:	and	w0, w0, #0xff
    50f8:	cmp	w0, #0x0
    50fc:	b.eq	5108 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x198>  // b.none
    5100:	mov	w0, #0x0                   	// #0
    5104:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5108:	mov	w2, #0x5                   	// #5
    510c:	mov	w1, #0x5                   	// #5
    5110:	ldr	w0, [sp, #52]
    5114:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5118:	str	w0, [sp, #3772]
    511c:	ldr	x3, [sp, #24]
    5120:	ldr	x2, [sp, #32]
    5124:	ldr	w1, [sp, #3772]
    5128:	ldr	x0, [sp, #40]
    512c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5130:	mov	w1, w0
    5134:	add	x0, sp, #0x3c
    5138:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    513c:	and	w0, w0, #0xff
    5140:	eor	w0, w0, #0x1
    5144:	and	w0, w0, #0xff
    5148:	cmp	w0, #0x0
    514c:	b.eq	5158 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e8>  // b.none
    5150:	mov	w0, #0x0                   	// #0
    5154:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5158:	ldr	w0, [sp, #60]
    515c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5160:	mov	w2, #0x5                   	// #5
    5164:	mov	w1, #0x0                   	// #0
    5168:	ldr	w0, [sp, #52]
    516c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5170:	str	w0, [sp, #3772]
    5174:	ldr	x3, [sp, #24]
    5178:	ldr	x2, [sp, #32]
    517c:	ldr	w1, [sp, #3772]
    5180:	ldr	x0, [sp, #40]
    5184:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
    5188:	mov	w1, w0
    518c:	add	x0, sp, #0x3c
    5190:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5194:	and	w0, w0, #0xff
    5198:	eor	w0, w0, #0x1
    519c:	and	w0, w0, #0xff
    51a0:	cmp	w0, #0x0
    51a4:	b.eq	51b0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x240>  // b.none
    51a8:	mov	w0, #0x0                   	// #0
    51ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    51b0:	mov	w2, #0x3                   	// #3
    51b4:	mov	w1, #0xa                   	// #10
    51b8:	ldr	w0, [sp, #52]
    51bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    51c0:	str	w0, [sp, #3772]
    51c4:	ldr	x3, [sp, #24]
    51c8:	ldr	x2, [sp, #32]
    51cc:	ldr	w1, [sp, #3772]
    51d0:	ldr	x0, [sp, #40]
    51d4:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    51d8:	mov	w1, w0
    51dc:	add	x0, sp, #0x3c
    51e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    51e4:	and	w0, w0, #0xff
    51e8:	eor	w0, w0, #0x1
    51ec:	and	w0, w0, #0xff
    51f0:	cmp	w0, #0x0
    51f4:	b.eq	5200 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x290>  // b.none
    51f8:	mov	w0, #0x0                   	// #0
    51fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5200:	mov	w2, #0x5                   	// #5
    5204:	mov	w1, #0x5                   	// #5
    5208:	ldr	w0, [sp, #52]
    520c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5210:	str	w0, [sp, #3772]
    5214:	ldr	x3, [sp, #24]
    5218:	ldr	x2, [sp, #32]
    521c:	ldr	w1, [sp, #3772]
    5220:	ldr	x0, [sp, #40]
    5224:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5228:	mov	w1, w0
    522c:	add	x0, sp, #0x3c
    5230:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5234:	and	w0, w0, #0xff
    5238:	eor	w0, w0, #0x1
    523c:	and	w0, w0, #0xff
    5240:	cmp	w0, #0x0
    5244:	b.eq	5250 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2e0>  // b.none
    5248:	mov	w0, #0x0                   	// #0
    524c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5250:	ldr	w0, [sp, #60]
    5254:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5258:	mov	w2, #0x5                   	// #5
    525c:	mov	w1, #0x0                   	// #0
    5260:	ldr	w0, [sp, #52]
    5264:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5268:	str	w0, [sp, #3772]
    526c:	ldr	x3, [sp, #24]
    5270:	ldr	x2, [sp, #32]
    5274:	ldr	w1, [sp, #3772]
    5278:	ldr	x0, [sp, #40]
    527c:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
    5280:	mov	w1, w0
    5284:	add	x0, sp, #0x3c
    5288:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    528c:	and	w0, w0, #0xff
    5290:	eor	w0, w0, #0x1
    5294:	and	w0, w0, #0xff
    5298:	cmp	w0, #0x0
    529c:	b.eq	52a8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x338>  // b.none
    52a0:	mov	w0, #0x0                   	// #0
    52a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    52a8:	mov	w2, #0x3                   	// #3
    52ac:	mov	w1, #0xa                   	// #10
    52b0:	ldr	w0, [sp, #52]
    52b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    52b8:	str	w0, [sp, #3772]
    52bc:	ldr	x3, [sp, #24]
    52c0:	ldr	x2, [sp, #32]
    52c4:	ldr	w1, [sp, #3772]
    52c8:	ldr	x0, [sp, #40]
    52cc:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    52d0:	mov	w1, w0
    52d4:	add	x0, sp, #0x3c
    52d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    52dc:	and	w0, w0, #0xff
    52e0:	eor	w0, w0, #0x1
    52e4:	and	w0, w0, #0xff
    52e8:	cmp	w0, #0x0
    52ec:	b.eq	52f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x388>  // b.none
    52f0:	mov	w0, #0x0                   	// #0
    52f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    52f8:	mov	w2, #0x5                   	// #5
    52fc:	mov	w1, #0x5                   	// #5
    5300:	ldr	w0, [sp, #52]
    5304:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5308:	str	w0, [sp, #3772]
    530c:	ldr	x3, [sp, #24]
    5310:	ldr	x2, [sp, #32]
    5314:	ldr	w1, [sp, #3772]
    5318:	ldr	x0, [sp, #40]
    531c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5320:	mov	w1, w0
    5324:	add	x0, sp, #0x3c
    5328:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    532c:	and	w0, w0, #0xff
    5330:	eor	w0, w0, #0x1
    5334:	and	w0, w0, #0xff
    5338:	cmp	w0, #0x0
    533c:	b.eq	5348 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3d8>  // b.none
    5340:	mov	w0, #0x0                   	// #0
    5344:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5348:	ldr	w0, [sp, #60]
    534c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5350:	mov	w2, #0x5                   	// #5
    5354:	mov	w1, #0x0                   	// #0
    5358:	ldr	w0, [sp, #52]
    535c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5360:	str	w0, [sp, #3772]
    5364:	ldr	x3, [sp, #24]
    5368:	ldr	x2, [sp, #32]
    536c:	ldr	w1, [sp, #3772]
    5370:	ldr	x0, [sp, #40]
    5374:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
    5378:	mov	w1, w0
    537c:	add	x0, sp, #0x3c
    5380:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5384:	and	w0, w0, #0xff
    5388:	eor	w0, w0, #0x1
    538c:	and	w0, w0, #0xff
    5390:	cmp	w0, #0x0
    5394:	b.eq	53a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x430>  // b.none
    5398:	mov	w0, #0x0                   	// #0
    539c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    53a0:	mov	w2, #0x3                   	// #3
    53a4:	mov	w1, #0xa                   	// #10
    53a8:	ldr	w0, [sp, #52]
    53ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    53b0:	str	w0, [sp, #3772]
    53b4:	ldr	x3, [sp, #24]
    53b8:	ldr	x2, [sp, #32]
    53bc:	ldr	w1, [sp, #3772]
    53c0:	ldr	x0, [sp, #40]
    53c4:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    53c8:	mov	w1, w0
    53cc:	add	x0, sp, #0x3c
    53d0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    53d4:	and	w0, w0, #0xff
    53d8:	eor	w0, w0, #0x1
    53dc:	and	w0, w0, #0xff
    53e0:	cmp	w0, #0x0
    53e4:	b.eq	53f0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x480>  // b.none
    53e8:	mov	w0, #0x0                   	// #0
    53ec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    53f0:	mov	w2, #0x5                   	// #5
    53f4:	mov	w1, #0x5                   	// #5
    53f8:	ldr	w0, [sp, #52]
    53fc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5400:	str	w0, [sp, #3772]
    5404:	ldr	x3, [sp, #24]
    5408:	ldr	x2, [sp, #32]
    540c:	ldr	w1, [sp, #3772]
    5410:	ldr	x0, [sp, #40]
    5414:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5418:	mov	w1, w0
    541c:	add	x0, sp, #0x3c
    5420:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5424:	and	w0, w0, #0xff
    5428:	eor	w0, w0, #0x1
    542c:	and	w0, w0, #0xff
    5430:	cmp	w0, #0x0
    5434:	b.eq	5440 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4d0>  // b.none
    5438:	mov	w0, #0x0                   	// #0
    543c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5440:	ldr	w0, [sp, #60]
    5444:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5448:	mov	w2, #0x5                   	// #5
    544c:	mov	w1, #0x0                   	// #0
    5450:	ldr	w0, [sp, #52]
    5454:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5458:	str	w0, [sp, #3772]
    545c:	ldr	x3, [sp, #24]
    5460:	ldr	x2, [sp, #32]
    5464:	ldr	w1, [sp, #3772]
    5468:	ldr	x0, [sp, #40]
    546c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5470:	mov	w1, w0
    5474:	add	x0, sp, #0x3c
    5478:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    547c:	and	w0, w0, #0xff
    5480:	eor	w0, w0, #0x1
    5484:	and	w0, w0, #0xff
    5488:	cmp	w0, #0x0
    548c:	b.eq	5498 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x528>  // b.none
    5490:	mov	w0, #0x0                   	// #0
    5494:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5498:	mov	w2, #0x3                   	// #3
    549c:	mov	w1, #0xa                   	// #10
    54a0:	ldr	w0, [sp, #52]
    54a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    54a8:	str	w0, [sp, #3772]
    54ac:	ldr	x3, [sp, #24]
    54b0:	ldr	x2, [sp, #32]
    54b4:	ldr	w1, [sp, #3772]
    54b8:	ldr	x0, [sp, #40]
    54bc:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    54c0:	mov	w1, w0
    54c4:	add	x0, sp, #0x3c
    54c8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    54cc:	and	w0, w0, #0xff
    54d0:	eor	w0, w0, #0x1
    54d4:	and	w0, w0, #0xff
    54d8:	cmp	w0, #0x0
    54dc:	b.eq	54e8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x578>  // b.none
    54e0:	mov	w0, #0x0                   	// #0
    54e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    54e8:	mov	w2, #0x5                   	// #5
    54ec:	mov	w1, #0x5                   	// #5
    54f0:	ldr	w0, [sp, #52]
    54f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    54f8:	str	w0, [sp, #3772]
    54fc:	ldr	x3, [sp, #24]
    5500:	ldr	x2, [sp, #32]
    5504:	ldr	w1, [sp, #3772]
    5508:	ldr	x0, [sp, #40]
    550c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5510:	mov	w1, w0
    5514:	add	x0, sp, #0x3c
    5518:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    551c:	and	w0, w0, #0xff
    5520:	eor	w0, w0, #0x1
    5524:	and	w0, w0, #0xff
    5528:	cmp	w0, #0x0
    552c:	b.eq	5538 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5c8>  // b.none
    5530:	mov	w0, #0x0                   	// #0
    5534:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5538:	ldr	w0, [sp, #60]
    553c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5540:	mov	w2, #0x5                   	// #5
    5544:	mov	w1, #0x0                   	// #0
    5548:	ldr	w0, [sp, #52]
    554c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5550:	str	w0, [sp, #3772]
    5554:	ldr	x3, [sp, #24]
    5558:	ldr	x2, [sp, #32]
    555c:	ldr	w1, [sp, #3772]
    5560:	ldr	x0, [sp, #40]
    5564:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5568:	mov	w1, w0
    556c:	add	x0, sp, #0x3c
    5570:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5574:	and	w0, w0, #0xff
    5578:	eor	w0, w0, #0x1
    557c:	and	w0, w0, #0xff
    5580:	cmp	w0, #0x0
    5584:	b.eq	5590 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x620>  // b.none
    5588:	mov	w0, #0x0                   	// #0
    558c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5590:	mov	w2, #0x5                   	// #5
    5594:	mov	w1, #0x0                   	// #0
    5598:	ldr	w0, [sp, #52]
    559c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    55a0:	str	w0, [sp, #3772]
    55a4:	ldr	x3, [sp, #24]
    55a8:	ldr	x2, [sp, #32]
    55ac:	ldr	w1, [sp, #3772]
    55b0:	ldr	x0, [sp, #40]
    55b4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    55b8:	mov	w1, w0
    55bc:	add	x0, sp, #0x3c
    55c0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    55c4:	and	w0, w0, #0xff
    55c8:	eor	w0, w0, #0x1
    55cc:	and	w0, w0, #0xff
    55d0:	cmp	w0, #0x0
    55d4:	b.eq	55e0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x670>  // b.none
    55d8:	mov	w0, #0x0                   	// #0
    55dc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    55e0:	mov	w2, #0x3                   	// #3
    55e4:	mov	w1, #0xa                   	// #10
    55e8:	ldr	w0, [sp, #52]
    55ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    55f0:	str	w0, [sp, #3772]
    55f4:	ldr	x3, [sp, #24]
    55f8:	ldr	x2, [sp, #32]
    55fc:	ldr	w1, [sp, #3772]
    5600:	ldr	x0, [sp, #40]
    5604:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    5608:	mov	w1, w0
    560c:	add	x0, sp, #0x3c
    5610:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5614:	and	w0, w0, #0xff
    5618:	eor	w0, w0, #0x1
    561c:	and	w0, w0, #0xff
    5620:	cmp	w0, #0x0
    5624:	b.eq	5630 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6c0>  // b.none
    5628:	mov	w0, #0x0                   	// #0
    562c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5630:	mov	w2, #0x5                   	// #5
    5634:	mov	w1, #0x5                   	// #5
    5638:	ldr	w0, [sp, #52]
    563c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5640:	str	w0, [sp, #3772]
    5644:	ldr	x3, [sp, #24]
    5648:	ldr	x2, [sp, #32]
    564c:	ldr	w1, [sp, #3772]
    5650:	ldr	x0, [sp, #40]
    5654:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5658:	mov	w1, w0
    565c:	add	x0, sp, #0x3c
    5660:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5664:	and	w0, w0, #0xff
    5668:	eor	w0, w0, #0x1
    566c:	and	w0, w0, #0xff
    5670:	cmp	w0, #0x0
    5674:	b.eq	5680 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x710>  // b.none
    5678:	mov	w0, #0x0                   	// #0
    567c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5680:	ldr	w0, [sp, #60]
    5684:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5688:	mov	w2, #0x5                   	// #5
    568c:	mov	w1, #0x0                   	// #0
    5690:	ldr	w0, [sp, #52]
    5694:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5698:	str	w0, [sp, #3772]
    569c:	ldr	x3, [sp, #24]
    56a0:	ldr	x2, [sp, #32]
    56a4:	ldr	w1, [sp, #3772]
    56a8:	ldr	x0, [sp, #40]
    56ac:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    56b0:	mov	w1, w0
    56b4:	add	x0, sp, #0x3c
    56b8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    56bc:	and	w0, w0, #0xff
    56c0:	eor	w0, w0, #0x1
    56c4:	and	w0, w0, #0xff
    56c8:	cmp	w0, #0x0
    56cc:	b.eq	56d8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x768>  // b.none
    56d0:	mov	w0, #0x0                   	// #0
    56d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    56d8:	mov	w2, #0x3                   	// #3
    56dc:	mov	w1, #0xa                   	// #10
    56e0:	ldr	w0, [sp, #52]
    56e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    56e8:	str	w0, [sp, #3772]
    56ec:	ldr	x3, [sp, #24]
    56f0:	ldr	x2, [sp, #32]
    56f4:	ldr	w1, [sp, #3772]
    56f8:	ldr	x0, [sp, #40]
    56fc:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    5700:	mov	w1, w0
    5704:	add	x0, sp, #0x3c
    5708:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    570c:	and	w0, w0, #0xff
    5710:	eor	w0, w0, #0x1
    5714:	and	w0, w0, #0xff
    5718:	cmp	w0, #0x0
    571c:	b.eq	5728 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7b8>  // b.none
    5720:	mov	w0, #0x0                   	// #0
    5724:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5728:	mov	w2, #0x5                   	// #5
    572c:	mov	w1, #0x0                   	// #0
    5730:	ldr	w0, [sp, #52]
    5734:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5738:	str	w0, [sp, #3772]
    573c:	ldr	x3, [sp, #24]
    5740:	ldr	x2, [sp, #32]
    5744:	ldr	w1, [sp, #3772]
    5748:	ldr	x0, [sp, #40]
    574c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5750:	mov	w1, w0
    5754:	add	x0, sp, #0x3c
    5758:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    575c:	and	w0, w0, #0xff
    5760:	eor	w0, w0, #0x1
    5764:	and	w0, w0, #0xff
    5768:	cmp	w0, #0x0
    576c:	b.eq	5778 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x808>  // b.none
    5770:	mov	w0, #0x0                   	// #0
    5774:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5778:	mov	w2, #0x5                   	// #5
    577c:	mov	w1, #0x5                   	// #5
    5780:	ldr	w0, [sp, #52]
    5784:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5788:	str	w0, [sp, #3772]
    578c:	ldr	x3, [sp, #24]
    5790:	ldr	x2, [sp, #32]
    5794:	ldr	w1, [sp, #3772]
    5798:	ldr	x0, [sp, #40]
    579c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    57a0:	mov	w1, w0
    57a4:	add	x0, sp, #0x3c
    57a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    57ac:	and	w0, w0, #0xff
    57b0:	eor	w0, w0, #0x1
    57b4:	and	w0, w0, #0xff
    57b8:	cmp	w0, #0x0
    57bc:	b.eq	57c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x858>  // b.none
    57c0:	mov	w0, #0x0                   	// #0
    57c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    57c8:	mov	w2, #0x5                   	// #5
    57cc:	mov	w1, #0x10                  	// #16
    57d0:	ldr	w0, [sp, #52]
    57d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    57d8:	str	w0, [sp, #3772]
    57dc:	ldr	x3, [sp, #24]
    57e0:	ldr	x2, [sp, #32]
    57e4:	ldr	w1, [sp, #3772]
    57e8:	ldr	x0, [sp, #40]
    57ec:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    57f0:	mov	w1, w0
    57f4:	add	x0, sp, #0x3c
    57f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    57fc:	and	w0, w0, #0xff
    5800:	eor	w0, w0, #0x1
    5804:	and	w0, w0, #0xff
    5808:	cmp	w0, #0x0
    580c:	b.eq	5818 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8a8>  // b.none
    5810:	mov	w0, #0x0                   	// #0
    5814:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5818:	ldr	w0, [sp, #60]
    581c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5820:	mov	w2, #0x5                   	// #5
    5824:	mov	w1, #0x0                   	// #0
    5828:	ldr	w0, [sp, #52]
    582c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5830:	str	w0, [sp, #3772]
    5834:	ldr	x3, [sp, #24]
    5838:	ldr	x2, [sp, #32]
    583c:	ldr	w1, [sp, #3772]
    5840:	ldr	x0, [sp, #40]
    5844:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5848:	mov	w1, w0
    584c:	add	x0, sp, #0x3c
    5850:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5854:	and	w0, w0, #0xff
    5858:	eor	w0, w0, #0x1
    585c:	and	w0, w0, #0xff
    5860:	cmp	w0, #0x0
    5864:	b.eq	5870 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x900>  // b.none
    5868:	mov	w0, #0x0                   	// #0
    586c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5870:	mov	w2, #0x3                   	// #3
    5874:	mov	w1, #0xa                   	// #10
    5878:	ldr	w0, [sp, #52]
    587c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5880:	str	w0, [sp, #3772]
    5884:	ldr	x3, [sp, #24]
    5888:	ldr	x2, [sp, #32]
    588c:	ldr	w1, [sp, #3772]
    5890:	ldr	x0, [sp, #40]
    5894:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    5898:	mov	w1, w0
    589c:	add	x0, sp, #0x3c
    58a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    58a4:	and	w0, w0, #0xff
    58a8:	eor	w0, w0, #0x1
    58ac:	and	w0, w0, #0xff
    58b0:	cmp	w0, #0x0
    58b4:	b.eq	58c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x950>  // b.none
    58b8:	mov	w0, #0x0                   	// #0
    58bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    58c0:	mov	w2, #0x5                   	// #5
    58c4:	mov	w1, #0x0                   	// #0
    58c8:	ldr	w0, [sp, #52]
    58cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    58d0:	str	w0, [sp, #3772]
    58d4:	ldr	x3, [sp, #24]
    58d8:	ldr	x2, [sp, #32]
    58dc:	ldr	w1, [sp, #3772]
    58e0:	ldr	x0, [sp, #40]
    58e4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    58e8:	mov	w1, w0
    58ec:	add	x0, sp, #0x3c
    58f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    58f4:	and	w0, w0, #0xff
    58f8:	eor	w0, w0, #0x1
    58fc:	and	w0, w0, #0xff
    5900:	cmp	w0, #0x0
    5904:	b.eq	5910 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9a0>  // b.none
    5908:	mov	w0, #0x0                   	// #0
    590c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5910:	mov	w2, #0x3                   	// #3
    5914:	mov	w1, #0x5                   	// #5
    5918:	ldr	w0, [sp, #52]
    591c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5920:	str	w0, [sp, #3772]
    5924:	ldr	x3, [sp, #24]
    5928:	ldr	x2, [sp, #32]
    592c:	ldr	w1, [sp, #3772]
    5930:	ldr	x0, [sp, #40]
    5934:	bl	1790 <_ZL19DecodeVecShiftR8ImmRN4llvm6MCInstEjmPKv>
    5938:	mov	w1, w0
    593c:	add	x0, sp, #0x3c
    5940:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5944:	and	w0, w0, #0xff
    5948:	eor	w0, w0, #0x1
    594c:	and	w0, w0, #0xff
    5950:	cmp	w0, #0x0
    5954:	b.eq	5960 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9f0>  // b.none
    5958:	mov	w0, #0x0                   	// #0
    595c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5960:	ldr	w0, [sp, #60]
    5964:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5968:	mov	w2, #0x5                   	// #5
    596c:	mov	w1, #0x0                   	// #0
    5970:	ldr	w0, [sp, #52]
    5974:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5978:	str	w0, [sp, #3772]
    597c:	ldr	x3, [sp, #24]
    5980:	ldr	x2, [sp, #32]
    5984:	ldr	w1, [sp, #3772]
    5988:	ldr	x0, [sp, #40]
    598c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5990:	mov	w1, w0
    5994:	add	x0, sp, #0x3c
    5998:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    599c:	and	w0, w0, #0xff
    59a0:	eor	w0, w0, #0x1
    59a4:	and	w0, w0, #0xff
    59a8:	cmp	w0, #0x0
    59ac:	b.eq	59b8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa48>  // b.none
    59b0:	mov	w0, #0x0                   	// #0
    59b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    59b8:	mov	w2, #0x3                   	// #3
    59bc:	mov	w1, #0xa                   	// #10
    59c0:	ldr	w0, [sp, #52]
    59c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    59c8:	str	w0, [sp, #3772]
    59cc:	ldr	x3, [sp, #24]
    59d0:	ldr	x2, [sp, #32]
    59d4:	ldr	w1, [sp, #3772]
    59d8:	ldr	x0, [sp, #40]
    59dc:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    59e0:	mov	w1, w0
    59e4:	add	x0, sp, #0x3c
    59e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    59ec:	and	w0, w0, #0xff
    59f0:	eor	w0, w0, #0x1
    59f4:	and	w0, w0, #0xff
    59f8:	cmp	w0, #0x0
    59fc:	b.eq	5a08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa98>  // b.none
    5a00:	mov	w0, #0x0                   	// #0
    5a04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5a08:	mov	w2, #0x5                   	// #5
    5a0c:	mov	w1, #0x0                   	// #0
    5a10:	ldr	w0, [sp, #52]
    5a14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5a18:	str	w0, [sp, #3772]
    5a1c:	ldr	x3, [sp, #24]
    5a20:	ldr	x2, [sp, #32]
    5a24:	ldr	w1, [sp, #3772]
    5a28:	ldr	x0, [sp, #40]
    5a2c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5a30:	mov	w1, w0
    5a34:	add	x0, sp, #0x3c
    5a38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5a3c:	and	w0, w0, #0xff
    5a40:	eor	w0, w0, #0x1
    5a44:	and	w0, w0, #0xff
    5a48:	cmp	w0, #0x0
    5a4c:	b.eq	5a58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xae8>  // b.none
    5a50:	mov	w0, #0x0                   	// #0
    5a54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5a58:	mov	w2, #0x4                   	// #4
    5a5c:	mov	w1, #0x5                   	// #5
    5a60:	ldr	w0, [sp, #52]
    5a64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5a68:	str	w0, [sp, #3772]
    5a6c:	ldr	x3, [sp, #24]
    5a70:	ldr	x2, [sp, #32]
    5a74:	ldr	w1, [sp, #3772]
    5a78:	ldr	x0, [sp, #40]
    5a7c:	bl	1728 <_ZL20DecodeVecShiftR16ImmRN4llvm6MCInstEjmPKv>
    5a80:	mov	w1, w0
    5a84:	add	x0, sp, #0x3c
    5a88:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5a8c:	and	w0, w0, #0xff
    5a90:	eor	w0, w0, #0x1
    5a94:	and	w0, w0, #0xff
    5a98:	cmp	w0, #0x0
    5a9c:	b.eq	5aa8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb38>  // b.none
    5aa0:	mov	w0, #0x0                   	// #0
    5aa4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5aa8:	ldr	w0, [sp, #60]
    5aac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5ab0:	mov	w2, #0x5                   	// #5
    5ab4:	mov	w1, #0x0                   	// #0
    5ab8:	ldr	w0, [sp, #52]
    5abc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5ac0:	str	w0, [sp, #3772]
    5ac4:	ldr	x3, [sp, #24]
    5ac8:	ldr	x2, [sp, #32]
    5acc:	ldr	w1, [sp, #3772]
    5ad0:	ldr	x0, [sp, #40]
    5ad4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5ad8:	mov	w1, w0
    5adc:	add	x0, sp, #0x3c
    5ae0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5ae4:	and	w0, w0, #0xff
    5ae8:	eor	w0, w0, #0x1
    5aec:	and	w0, w0, #0xff
    5af0:	cmp	w0, #0x0
    5af4:	b.eq	5b00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb90>  // b.none
    5af8:	mov	w0, #0x0                   	// #0
    5afc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5b00:	mov	w2, #0x3                   	// #3
    5b04:	mov	w1, #0xa                   	// #10
    5b08:	ldr	w0, [sp, #52]
    5b0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5b10:	str	w0, [sp, #3772]
    5b14:	ldr	x3, [sp, #24]
    5b18:	ldr	x2, [sp, #32]
    5b1c:	ldr	w1, [sp, #3772]
    5b20:	ldr	x0, [sp, #40]
    5b24:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    5b28:	mov	w1, w0
    5b2c:	add	x0, sp, #0x3c
    5b30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5b34:	and	w0, w0, #0xff
    5b38:	eor	w0, w0, #0x1
    5b3c:	and	w0, w0, #0xff
    5b40:	cmp	w0, #0x0
    5b44:	b.eq	5b50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbe0>  // b.none
    5b48:	mov	w0, #0x0                   	// #0
    5b4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5b50:	mov	w2, #0x5                   	// #5
    5b54:	mov	w1, #0x0                   	// #0
    5b58:	ldr	w0, [sp, #52]
    5b5c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5b60:	str	w0, [sp, #3772]
    5b64:	ldr	x3, [sp, #24]
    5b68:	ldr	x2, [sp, #32]
    5b6c:	ldr	w1, [sp, #3772]
    5b70:	ldr	x0, [sp, #40]
    5b74:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5b78:	mov	w1, w0
    5b7c:	add	x0, sp, #0x3c
    5b80:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5b84:	and	w0, w0, #0xff
    5b88:	eor	w0, w0, #0x1
    5b8c:	and	w0, w0, #0xff
    5b90:	cmp	w0, #0x0
    5b94:	b.eq	5ba0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc30>  // b.none
    5b98:	mov	w0, #0x0                   	// #0
    5b9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5ba0:	mov	w2, #0x5                   	// #5
    5ba4:	mov	w1, #0x5                   	// #5
    5ba8:	ldr	w0, [sp, #52]
    5bac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5bb0:	str	w0, [sp, #3772]
    5bb4:	ldr	x3, [sp, #24]
    5bb8:	ldr	x2, [sp, #32]
    5bbc:	ldr	w1, [sp, #3772]
    5bc0:	ldr	x0, [sp, #40]
    5bc4:	bl	16c0 <_ZL20DecodeVecShiftR32ImmRN4llvm6MCInstEjmPKv>
    5bc8:	mov	w1, w0
    5bcc:	add	x0, sp, #0x3c
    5bd0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5bd4:	and	w0, w0, #0xff
    5bd8:	eor	w0, w0, #0x1
    5bdc:	and	w0, w0, #0xff
    5be0:	cmp	w0, #0x0
    5be4:	b.eq	5bf0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc80>  // b.none
    5be8:	mov	w0, #0x0                   	// #0
    5bec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5bf0:	ldr	w0, [sp, #60]
    5bf4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5bf8:	mov	w2, #0x5                   	// #5
    5bfc:	mov	w1, #0x0                   	// #0
    5c00:	ldr	w0, [sp, #52]
    5c04:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5c08:	str	w0, [sp, #3772]
    5c0c:	ldr	x3, [sp, #24]
    5c10:	ldr	x2, [sp, #32]
    5c14:	ldr	w1, [sp, #3772]
    5c18:	ldr	x0, [sp, #40]
    5c1c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5c20:	mov	w1, w0
    5c24:	add	x0, sp, #0x3c
    5c28:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5c2c:	and	w0, w0, #0xff
    5c30:	eor	w0, w0, #0x1
    5c34:	and	w0, w0, #0xff
    5c38:	cmp	w0, #0x0
    5c3c:	b.eq	5c48 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcd8>  // b.none
    5c40:	mov	w0, #0x0                   	// #0
    5c44:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5c48:	mov	w2, #0x3                   	// #3
    5c4c:	mov	w1, #0xa                   	// #10
    5c50:	ldr	w0, [sp, #52]
    5c54:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5c58:	str	w0, [sp, #3772]
    5c5c:	ldr	x3, [sp, #24]
    5c60:	ldr	x2, [sp, #32]
    5c64:	ldr	w1, [sp, #3772]
    5c68:	ldr	x0, [sp, #40]
    5c6c:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    5c70:	mov	w1, w0
    5c74:	add	x0, sp, #0x3c
    5c78:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5c7c:	and	w0, w0, #0xff
    5c80:	eor	w0, w0, #0x1
    5c84:	and	w0, w0, #0xff
    5c88:	cmp	w0, #0x0
    5c8c:	b.eq	5c98 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd28>  // b.none
    5c90:	mov	w0, #0x0                   	// #0
    5c94:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5c98:	mov	w2, #0x5                   	// #5
    5c9c:	mov	w1, #0x0                   	// #0
    5ca0:	ldr	w0, [sp, #52]
    5ca4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5ca8:	str	w0, [sp, #3772]
    5cac:	ldr	x3, [sp, #24]
    5cb0:	ldr	x2, [sp, #32]
    5cb4:	ldr	w1, [sp, #3772]
    5cb8:	ldr	x0, [sp, #40]
    5cbc:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5cc0:	mov	w1, w0
    5cc4:	add	x0, sp, #0x3c
    5cc8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5ccc:	and	w0, w0, #0xff
    5cd0:	eor	w0, w0, #0x1
    5cd4:	and	w0, w0, #0xff
    5cd8:	cmp	w0, #0x0
    5cdc:	b.eq	5ce8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd78>  // b.none
    5ce0:	mov	w0, #0x0                   	// #0
    5ce4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5ce8:	mov	w2, #0x3                   	// #3
    5cec:	mov	w1, #0x5                   	// #5
    5cf0:	ldr	w0, [sp, #52]
    5cf4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5cf8:	str	w0, [sp, #3772]
    5cfc:	ldr	x3, [sp, #24]
    5d00:	ldr	x2, [sp, #32]
    5d04:	ldr	w1, [sp, #3772]
    5d08:	ldr	x0, [sp, #40]
    5d0c:	bl	1850 <_ZL19DecodeVecShiftL8ImmRN4llvm6MCInstEjmPKv>
    5d10:	mov	w1, w0
    5d14:	add	x0, sp, #0x3c
    5d18:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5d1c:	and	w0, w0, #0xff
    5d20:	eor	w0, w0, #0x1
    5d24:	and	w0, w0, #0xff
    5d28:	cmp	w0, #0x0
    5d2c:	b.eq	5d38 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xdc8>  // b.none
    5d30:	mov	w0, #0x0                   	// #0
    5d34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5d38:	ldr	w0, [sp, #60]
    5d3c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5d40:	mov	w2, #0x5                   	// #5
    5d44:	mov	w1, #0x0                   	// #0
    5d48:	ldr	w0, [sp, #52]
    5d4c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5d50:	str	w0, [sp, #3772]
    5d54:	ldr	x3, [sp, #24]
    5d58:	ldr	x2, [sp, #32]
    5d5c:	ldr	w1, [sp, #3772]
    5d60:	ldr	x0, [sp, #40]
    5d64:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5d68:	mov	w1, w0
    5d6c:	add	x0, sp, #0x3c
    5d70:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5d74:	and	w0, w0, #0xff
    5d78:	eor	w0, w0, #0x1
    5d7c:	and	w0, w0, #0xff
    5d80:	cmp	w0, #0x0
    5d84:	b.eq	5d90 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe20>  // b.none
    5d88:	mov	w0, #0x0                   	// #0
    5d8c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5d90:	mov	w2, #0x3                   	// #3
    5d94:	mov	w1, #0xa                   	// #10
    5d98:	ldr	w0, [sp, #52]
    5d9c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5da0:	str	w0, [sp, #3772]
    5da4:	ldr	x3, [sp, #24]
    5da8:	ldr	x2, [sp, #32]
    5dac:	ldr	w1, [sp, #3772]
    5db0:	ldr	x0, [sp, #40]
    5db4:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    5db8:	mov	w1, w0
    5dbc:	add	x0, sp, #0x3c
    5dc0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5dc4:	and	w0, w0, #0xff
    5dc8:	eor	w0, w0, #0x1
    5dcc:	and	w0, w0, #0xff
    5dd0:	cmp	w0, #0x0
    5dd4:	b.eq	5de0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe70>  // b.none
    5dd8:	mov	w0, #0x0                   	// #0
    5ddc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5de0:	mov	w2, #0x5                   	// #5
    5de4:	mov	w1, #0x0                   	// #0
    5de8:	ldr	w0, [sp, #52]
    5dec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5df0:	str	w0, [sp, #3772]
    5df4:	ldr	x3, [sp, #24]
    5df8:	ldr	x2, [sp, #32]
    5dfc:	ldr	w1, [sp, #3772]
    5e00:	ldr	x0, [sp, #40]
    5e04:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5e08:	mov	w1, w0
    5e0c:	add	x0, sp, #0x3c
    5e10:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5e14:	and	w0, w0, #0xff
    5e18:	eor	w0, w0, #0x1
    5e1c:	and	w0, w0, #0xff
    5e20:	cmp	w0, #0x0
    5e24:	b.eq	5e30 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xec0>  // b.none
    5e28:	mov	w0, #0x0                   	// #0
    5e2c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5e30:	mov	w2, #0x4                   	// #4
    5e34:	mov	w1, #0x5                   	// #5
    5e38:	ldr	w0, [sp, #52]
    5e3c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5e40:	str	w0, [sp, #3772]
    5e44:	ldr	x3, [sp, #24]
    5e48:	ldr	x2, [sp, #32]
    5e4c:	ldr	w1, [sp, #3772]
    5e50:	ldr	x0, [sp, #40]
    5e54:	bl	1820 <_ZL20DecodeVecShiftL16ImmRN4llvm6MCInstEjmPKv>
    5e58:	mov	w1, w0
    5e5c:	add	x0, sp, #0x3c
    5e60:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5e64:	and	w0, w0, #0xff
    5e68:	eor	w0, w0, #0x1
    5e6c:	and	w0, w0, #0xff
    5e70:	cmp	w0, #0x0
    5e74:	b.eq	5e80 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf10>  // b.none
    5e78:	mov	w0, #0x0                   	// #0
    5e7c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5e80:	ldr	w0, [sp, #60]
    5e84:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5e88:	mov	w2, #0x5                   	// #5
    5e8c:	mov	w1, #0x0                   	// #0
    5e90:	ldr	w0, [sp, #52]
    5e94:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5e98:	str	w0, [sp, #3772]
    5e9c:	ldr	x3, [sp, #24]
    5ea0:	ldr	x2, [sp, #32]
    5ea4:	ldr	w1, [sp, #3772]
    5ea8:	ldr	x0, [sp, #40]
    5eac:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5eb0:	mov	w1, w0
    5eb4:	add	x0, sp, #0x3c
    5eb8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5ebc:	and	w0, w0, #0xff
    5ec0:	eor	w0, w0, #0x1
    5ec4:	and	w0, w0, #0xff
    5ec8:	cmp	w0, #0x0
    5ecc:	b.eq	5ed8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf68>  // b.none
    5ed0:	mov	w0, #0x0                   	// #0
    5ed4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5ed8:	mov	w2, #0x3                   	// #3
    5edc:	mov	w1, #0xa                   	// #10
    5ee0:	ldr	w0, [sp, #52]
    5ee4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5ee8:	str	w0, [sp, #3772]
    5eec:	ldr	x3, [sp, #24]
    5ef0:	ldr	x2, [sp, #32]
    5ef4:	ldr	w1, [sp, #3772]
    5ef8:	ldr	x0, [sp, #40]
    5efc:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    5f00:	mov	w1, w0
    5f04:	add	x0, sp, #0x3c
    5f08:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5f0c:	and	w0, w0, #0xff
    5f10:	eor	w0, w0, #0x1
    5f14:	and	w0, w0, #0xff
    5f18:	cmp	w0, #0x0
    5f1c:	b.eq	5f28 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xfb8>  // b.none
    5f20:	mov	w0, #0x0                   	// #0
    5f24:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5f28:	mov	w2, #0x5                   	// #5
    5f2c:	mov	w1, #0x0                   	// #0
    5f30:	ldr	w0, [sp, #52]
    5f34:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5f38:	str	w0, [sp, #3772]
    5f3c:	ldr	x3, [sp, #24]
    5f40:	ldr	x2, [sp, #32]
    5f44:	ldr	w1, [sp, #3772]
    5f48:	ldr	x0, [sp, #40]
    5f4c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5f50:	mov	w1, w0
    5f54:	add	x0, sp, #0x3c
    5f58:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5f5c:	and	w0, w0, #0xff
    5f60:	eor	w0, w0, #0x1
    5f64:	and	w0, w0, #0xff
    5f68:	cmp	w0, #0x0
    5f6c:	b.eq	5f78 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1008>  // b.none
    5f70:	mov	w0, #0x0                   	// #0
    5f74:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5f78:	mov	w2, #0x5                   	// #5
    5f7c:	mov	w1, #0x5                   	// #5
    5f80:	ldr	w0, [sp, #52]
    5f84:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5f88:	str	w0, [sp, #3772]
    5f8c:	ldr	x3, [sp, #24]
    5f90:	ldr	x2, [sp, #32]
    5f94:	ldr	w1, [sp, #3772]
    5f98:	ldr	x0, [sp, #40]
    5f9c:	bl	17f0 <_ZL20DecodeVecShiftL32ImmRN4llvm6MCInstEjmPKv>
    5fa0:	mov	w1, w0
    5fa4:	add	x0, sp, #0x3c
    5fa8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    5fac:	and	w0, w0, #0xff
    5fb0:	eor	w0, w0, #0x1
    5fb4:	and	w0, w0, #0xff
    5fb8:	cmp	w0, #0x0
    5fbc:	b.eq	5fc8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1058>  // b.none
    5fc0:	mov	w0, #0x0                   	// #0
    5fc4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5fc8:	ldr	w0, [sp, #60]
    5fcc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    5fd0:	mov	w2, #0x5                   	// #5
    5fd4:	mov	w1, #0x0                   	// #0
    5fd8:	ldr	w0, [sp, #52]
    5fdc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    5fe0:	str	w0, [sp, #3772]
    5fe4:	ldr	x3, [sp, #24]
    5fe8:	ldr	x2, [sp, #32]
    5fec:	ldr	w1, [sp, #3772]
    5ff0:	ldr	x0, [sp, #40]
    5ff4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    5ff8:	mov	w1, w0
    5ffc:	add	x0, sp, #0x3c
    6000:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6004:	and	w0, w0, #0xff
    6008:	eor	w0, w0, #0x1
    600c:	and	w0, w0, #0xff
    6010:	cmp	w0, #0x0
    6014:	b.eq	6020 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10b0>  // b.none
    6018:	mov	w0, #0x0                   	// #0
    601c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6020:	mov	w2, #0x3                   	// #3
    6024:	mov	w1, #0xa                   	// #10
    6028:	ldr	w0, [sp, #52]
    602c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6030:	str	w0, [sp, #3772]
    6034:	ldr	x3, [sp, #24]
    6038:	ldr	x2, [sp, #32]
    603c:	ldr	w1, [sp, #3772]
    6040:	ldr	x0, [sp, #40]
    6044:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    6048:	mov	w1, w0
    604c:	add	x0, sp, #0x3c
    6050:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6054:	and	w0, w0, #0xff
    6058:	eor	w0, w0, #0x1
    605c:	and	w0, w0, #0xff
    6060:	cmp	w0, #0x0
    6064:	b.eq	6070 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1100>  // b.none
    6068:	mov	w0, #0x0                   	// #0
    606c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6070:	mov	w2, #0x5                   	// #5
    6074:	mov	w1, #0x0                   	// #0
    6078:	ldr	w0, [sp, #52]
    607c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6080:	str	w0, [sp, #3772]
    6084:	ldr	x3, [sp, #24]
    6088:	ldr	x2, [sp, #32]
    608c:	ldr	w1, [sp, #3772]
    6090:	ldr	x0, [sp, #40]
    6094:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6098:	mov	w1, w0
    609c:	add	x0, sp, #0x3c
    60a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    60a4:	and	w0, w0, #0xff
    60a8:	eor	w0, w0, #0x1
    60ac:	and	w0, w0, #0xff
    60b0:	cmp	w0, #0x0
    60b4:	b.eq	60c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1150>  // b.none
    60b8:	mov	w0, #0x0                   	// #0
    60bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    60c0:	mov	w2, #0x5                   	// #5
    60c4:	mov	w1, #0x10                  	// #16
    60c8:	ldr	w0, [sp, #52]
    60cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    60d0:	str	w0, [sp, #3772]
    60d4:	ldr	x3, [sp, #24]
    60d8:	ldr	x2, [sp, #32]
    60dc:	ldr	w1, [sp, #3772]
    60e0:	ldr	x0, [sp, #40]
    60e4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    60e8:	mov	w1, w0
    60ec:	add	x0, sp, #0x3c
    60f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    60f4:	and	w0, w0, #0xff
    60f8:	eor	w0, w0, #0x1
    60fc:	and	w0, w0, #0xff
    6100:	cmp	w0, #0x0
    6104:	b.eq	6110 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11a0>  // b.none
    6108:	mov	w0, #0x0                   	// #0
    610c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6110:	mov	w2, #0x5                   	// #5
    6114:	mov	w1, #0x5                   	// #5
    6118:	ldr	w0, [sp, #52]
    611c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6120:	str	w0, [sp, #3772]
    6124:	ldr	x3, [sp, #24]
    6128:	ldr	x2, [sp, #32]
    612c:	ldr	w1, [sp, #3772]
    6130:	ldr	x0, [sp, #40]
    6134:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6138:	mov	w1, w0
    613c:	add	x0, sp, #0x3c
    6140:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6144:	and	w0, w0, #0xff
    6148:	eor	w0, w0, #0x1
    614c:	and	w0, w0, #0xff
    6150:	cmp	w0, #0x0
    6154:	b.eq	6160 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11f0>  // b.none
    6158:	mov	w0, #0x0                   	// #0
    615c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6160:	ldr	w0, [sp, #60]
    6164:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6168:	mov	w2, #0x5                   	// #5
    616c:	mov	w1, #0x0                   	// #0
    6170:	ldr	w0, [sp, #52]
    6174:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6178:	str	w0, [sp, #3772]
    617c:	ldr	x3, [sp, #24]
    6180:	ldr	x2, [sp, #32]
    6184:	ldr	w1, [sp, #3772]
    6188:	ldr	x0, [sp, #40]
    618c:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
    6190:	mov	w1, w0
    6194:	add	x0, sp, #0x3c
    6198:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    619c:	and	w0, w0, #0xff
    61a0:	eor	w0, w0, #0x1
    61a4:	and	w0, w0, #0xff
    61a8:	cmp	w0, #0x0
    61ac:	b.eq	61b8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1248>  // b.none
    61b0:	mov	w0, #0x0                   	// #0
    61b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    61b8:	mov	w2, #0x3                   	// #3
    61bc:	mov	w1, #0xa                   	// #10
    61c0:	ldr	w0, [sp, #52]
    61c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    61c8:	str	w0, [sp, #3772]
    61cc:	ldr	x3, [sp, #24]
    61d0:	ldr	x2, [sp, #32]
    61d4:	ldr	w1, [sp, #3772]
    61d8:	ldr	x0, [sp, #40]
    61dc:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    61e0:	mov	w1, w0
    61e4:	add	x0, sp, #0x3c
    61e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    61ec:	and	w0, w0, #0xff
    61f0:	eor	w0, w0, #0x1
    61f4:	and	w0, w0, #0xff
    61f8:	cmp	w0, #0x0
    61fc:	b.eq	6208 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1298>  // b.none
    6200:	mov	w0, #0x0                   	// #0
    6204:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6208:	mov	w2, #0x5                   	// #5
    620c:	mov	w1, #0x5                   	// #5
    6210:	ldr	w0, [sp, #52]
    6214:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6218:	str	w0, [sp, #3772]
    621c:	ldr	x3, [sp, #24]
    6220:	ldr	x2, [sp, #32]
    6224:	ldr	w1, [sp, #3772]
    6228:	ldr	x0, [sp, #40]
    622c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6230:	mov	w1, w0
    6234:	add	x0, sp, #0x3c
    6238:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    623c:	and	w0, w0, #0xff
    6240:	eor	w0, w0, #0x1
    6244:	and	w0, w0, #0xff
    6248:	cmp	w0, #0x0
    624c:	b.eq	6258 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12e8>  // b.none
    6250:	mov	w0, #0x0                   	// #0
    6254:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6258:	ldr	w0, [sp, #60]
    625c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6260:	mov	w2, #0x5                   	// #5
    6264:	mov	w1, #0x0                   	// #0
    6268:	ldr	w0, [sp, #52]
    626c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6270:	str	w0, [sp, #3772]
    6274:	ldr	x3, [sp, #24]
    6278:	ldr	x2, [sp, #32]
    627c:	ldr	w1, [sp, #3772]
    6280:	ldr	x0, [sp, #40]
    6284:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6288:	mov	w1, w0
    628c:	add	x0, sp, #0x3c
    6290:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6294:	and	w0, w0, #0xff
    6298:	eor	w0, w0, #0x1
    629c:	and	w0, w0, #0xff
    62a0:	cmp	w0, #0x0
    62a4:	b.eq	62b0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1340>  // b.none
    62a8:	mov	w0, #0x0                   	// #0
    62ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    62b0:	mov	w2, #0x3                   	// #3
    62b4:	mov	w1, #0xa                   	// #10
    62b8:	ldr	w0, [sp, #52]
    62bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    62c0:	str	w0, [sp, #3772]
    62c4:	ldr	x3, [sp, #24]
    62c8:	ldr	x2, [sp, #32]
    62cc:	ldr	w1, [sp, #3772]
    62d0:	ldr	x0, [sp, #40]
    62d4:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    62d8:	mov	w1, w0
    62dc:	add	x0, sp, #0x3c
    62e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    62e4:	and	w0, w0, #0xff
    62e8:	eor	w0, w0, #0x1
    62ec:	and	w0, w0, #0xff
    62f0:	cmp	w0, #0x0
    62f4:	b.eq	6300 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1390>  // b.none
    62f8:	mov	w0, #0x0                   	// #0
    62fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6300:	mov	w2, #0x5                   	// #5
    6304:	mov	w1, #0x0                   	// #0
    6308:	ldr	w0, [sp, #52]
    630c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6310:	str	w0, [sp, #3772]
    6314:	ldr	x3, [sp, #24]
    6318:	ldr	x2, [sp, #32]
    631c:	ldr	w1, [sp, #3772]
    6320:	ldr	x0, [sp, #40]
    6324:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6328:	mov	w1, w0
    632c:	add	x0, sp, #0x3c
    6330:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6334:	and	w0, w0, #0xff
    6338:	eor	w0, w0, #0x1
    633c:	and	w0, w0, #0xff
    6340:	cmp	w0, #0x0
    6344:	b.eq	6350 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13e0>  // b.none
    6348:	mov	w0, #0x0                   	// #0
    634c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6350:	str	wzr, [sp, #3772]
    6354:	mov	w2, #0x5                   	// #5
    6358:	mov	w1, #0x5                   	// #5
    635c:	ldr	w0, [sp, #52]
    6360:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6364:	mov	w1, w0
    6368:	ldr	w0, [sp, #3772]
    636c:	orr	w0, w0, w1
    6370:	str	w0, [sp, #3772]
    6374:	mov	w2, #0x1                   	// #1
    6378:	mov	w1, #0x16                  	// #22
    637c:	ldr	w0, [sp, #52]
    6380:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6384:	lsl	w0, w0, #5
    6388:	ldr	w1, [sp, #3772]
    638c:	orr	w0, w1, w0
    6390:	str	w0, [sp, #3772]
    6394:	ldr	x3, [sp, #24]
    6398:	ldr	x2, [sp, #32]
    639c:	ldr	w1, [sp, #3772]
    63a0:	ldr	x0, [sp, #40]
    63a4:	bl	1658 <_ZL20DecodeVecShiftR64ImmRN4llvm6MCInstEjmPKv>
    63a8:	mov	w1, w0
    63ac:	add	x0, sp, #0x3c
    63b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    63b4:	and	w0, w0, #0xff
    63b8:	eor	w0, w0, #0x1
    63bc:	and	w0, w0, #0xff
    63c0:	cmp	w0, #0x0
    63c4:	b.eq	63d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1460>  // b.none
    63c8:	mov	w0, #0x0                   	// #0
    63cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    63d0:	ldr	w0, [sp, #60]
    63d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    63d8:	mov	w2, #0x5                   	// #5
    63dc:	mov	w1, #0x0                   	// #0
    63e0:	ldr	w0, [sp, #52]
    63e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    63e8:	str	w0, [sp, #3772]
    63ec:	ldr	x3, [sp, #24]
    63f0:	ldr	x2, [sp, #32]
    63f4:	ldr	w1, [sp, #3772]
    63f8:	ldr	x0, [sp, #40]
    63fc:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6400:	mov	w1, w0
    6404:	add	x0, sp, #0x3c
    6408:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    640c:	and	w0, w0, #0xff
    6410:	eor	w0, w0, #0x1
    6414:	and	w0, w0, #0xff
    6418:	cmp	w0, #0x0
    641c:	b.eq	6428 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14b8>  // b.none
    6420:	mov	w0, #0x0                   	// #0
    6424:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6428:	mov	w2, #0x3                   	// #3
    642c:	mov	w1, #0xa                   	// #10
    6430:	ldr	w0, [sp, #52]
    6434:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6438:	str	w0, [sp, #3772]
    643c:	ldr	x3, [sp, #24]
    6440:	ldr	x2, [sp, #32]
    6444:	ldr	w1, [sp, #3772]
    6448:	ldr	x0, [sp, #40]
    644c:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    6450:	mov	w1, w0
    6454:	add	x0, sp, #0x3c
    6458:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    645c:	and	w0, w0, #0xff
    6460:	eor	w0, w0, #0x1
    6464:	and	w0, w0, #0xff
    6468:	cmp	w0, #0x0
    646c:	b.eq	6478 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1508>  // b.none
    6470:	mov	w0, #0x0                   	// #0
    6474:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6478:	mov	w2, #0x5                   	// #5
    647c:	mov	w1, #0x0                   	// #0
    6480:	ldr	w0, [sp, #52]
    6484:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6488:	str	w0, [sp, #3772]
    648c:	ldr	x3, [sp, #24]
    6490:	ldr	x2, [sp, #32]
    6494:	ldr	w1, [sp, #3772]
    6498:	ldr	x0, [sp, #40]
    649c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    64a0:	mov	w1, w0
    64a4:	add	x0, sp, #0x3c
    64a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    64ac:	and	w0, w0, #0xff
    64b0:	eor	w0, w0, #0x1
    64b4:	and	w0, w0, #0xff
    64b8:	cmp	w0, #0x0
    64bc:	b.eq	64c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1558>  // b.none
    64c0:	mov	w0, #0x0                   	// #0
    64c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    64c8:	str	wzr, [sp, #3772]
    64cc:	mov	w2, #0x5                   	// #5
    64d0:	mov	w1, #0x5                   	// #5
    64d4:	ldr	w0, [sp, #52]
    64d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    64dc:	mov	w1, w0
    64e0:	ldr	w0, [sp, #3772]
    64e4:	orr	w0, w0, w1
    64e8:	str	w0, [sp, #3772]
    64ec:	mov	w2, #0x1                   	// #1
    64f0:	mov	w1, #0x16                  	// #22
    64f4:	ldr	w0, [sp, #52]
    64f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    64fc:	lsl	w0, w0, #5
    6500:	ldr	w1, [sp, #3772]
    6504:	orr	w0, w1, w0
    6508:	str	w0, [sp, #3772]
    650c:	ldr	x3, [sp, #24]
    6510:	ldr	x2, [sp, #32]
    6514:	ldr	w1, [sp, #3772]
    6518:	ldr	x0, [sp, #40]
    651c:	bl	17c0 <_ZL20DecodeVecShiftL64ImmRN4llvm6MCInstEjmPKv>
    6520:	mov	w1, w0
    6524:	add	x0, sp, #0x3c
    6528:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    652c:	and	w0, w0, #0xff
    6530:	eor	w0, w0, #0x1
    6534:	and	w0, w0, #0xff
    6538:	cmp	w0, #0x0
    653c:	b.eq	6548 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15d8>  // b.none
    6540:	mov	w0, #0x0                   	// #0
    6544:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6548:	ldr	w0, [sp, #60]
    654c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6550:	ldr	x3, [sp, #24]
    6554:	ldr	x2, [sp, #32]
    6558:	ldr	w1, [sp, #52]
    655c:	ldr	x0, [sp, #40]
    6560:	bl	3e2c <_ZL30DecodeSVELogicalImmInstructionRN4llvm6MCInstEjmPKv>
    6564:	mov	w1, w0
    6568:	add	x0, sp, #0x3c
    656c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6570:	and	w0, w0, #0xff
    6574:	eor	w0, w0, #0x1
    6578:	and	w0, w0, #0xff
    657c:	cmp	w0, #0x0
    6580:	b.eq	658c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x161c>  // b.none
    6584:	mov	w0, #0x0                   	// #0
    6588:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    658c:	ldr	w0, [sp, #60]
    6590:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6594:	mov	w2, #0x5                   	// #5
    6598:	mov	w1, #0x0                   	// #0
    659c:	ldr	w0, [sp, #52]
    65a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    65a4:	str	w0, [sp, #3772]
    65a8:	ldr	x3, [sp, #24]
    65ac:	ldr	x2, [sp, #32]
    65b0:	ldr	w1, [sp, #3772]
    65b4:	ldr	x0, [sp, #40]
    65b8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    65bc:	mov	w1, w0
    65c0:	add	x0, sp, #0x3c
    65c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    65c8:	and	w0, w0, #0xff
    65cc:	eor	w0, w0, #0x1
    65d0:	and	w0, w0, #0xff
    65d4:	cmp	w0, #0x0
    65d8:	b.eq	65e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1674>  // b.none
    65dc:	mov	w0, #0x0                   	// #0
    65e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    65e4:	mov	w2, #0x4                   	// #4
    65e8:	mov	w1, #0x10                  	// #16
    65ec:	ldr	w0, [sp, #52]
    65f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    65f4:	str	w0, [sp, #3772]
    65f8:	ldr	x3, [sp, #24]
    65fc:	ldr	x2, [sp, #32]
    6600:	ldr	w1, [sp, #3772]
    6604:	ldr	x0, [sp, #40]
    6608:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    660c:	mov	w1, w0
    6610:	add	x0, sp, #0x3c
    6614:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6618:	and	w0, w0, #0xff
    661c:	eor	w0, w0, #0x1
    6620:	and	w0, w0, #0xff
    6624:	cmp	w0, #0x0
    6628:	b.eq	6634 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16c4>  // b.none
    662c:	mov	w0, #0x0                   	// #0
    6630:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6634:	mov	w2, #0x9                   	// #9
    6638:	mov	w1, #0x5                   	// #5
    663c:	ldr	w0, [sp, #52]
    6640:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6644:	str	w0, [sp, #3772]
    6648:	ldr	x3, [sp, #24]
    664c:	ldr	x2, [sp, #32]
    6650:	ldr	w1, [sp, #3772]
    6654:	ldr	x0, [sp, #40]
    6658:	bl	2a8a8 <_Z16DecodeImm8OptLslILi8EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    665c:	mov	w1, w0
    6660:	add	x0, sp, #0x3c
    6664:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6668:	and	w0, w0, #0xff
    666c:	eor	w0, w0, #0x1
    6670:	and	w0, w0, #0xff
    6674:	cmp	w0, #0x0
    6678:	b.eq	6684 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1714>  // b.none
    667c:	mov	w0, #0x0                   	// #0
    6680:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6684:	ldr	w0, [sp, #60]
    6688:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    668c:	mov	w2, #0x5                   	// #5
    6690:	mov	w1, #0x0                   	// #0
    6694:	ldr	w0, [sp, #52]
    6698:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    669c:	str	w0, [sp, #3772]
    66a0:	ldr	x3, [sp, #24]
    66a4:	ldr	x2, [sp, #32]
    66a8:	ldr	w1, [sp, #3772]
    66ac:	ldr	x0, [sp, #40]
    66b0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    66b4:	mov	w1, w0
    66b8:	add	x0, sp, #0x3c
    66bc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    66c0:	and	w0, w0, #0xff
    66c4:	eor	w0, w0, #0x1
    66c8:	and	w0, w0, #0xff
    66cc:	cmp	w0, #0x0
    66d0:	b.eq	66dc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x176c>  // b.none
    66d4:	mov	w0, #0x0                   	// #0
    66d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    66dc:	mov	w2, #0x4                   	// #4
    66e0:	mov	w1, #0x10                  	// #16
    66e4:	ldr	w0, [sp, #52]
    66e8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    66ec:	str	w0, [sp, #3772]
    66f0:	ldr	x3, [sp, #24]
    66f4:	ldr	x2, [sp, #32]
    66f8:	ldr	w1, [sp, #3772]
    66fc:	ldr	x0, [sp, #40]
    6700:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    6704:	mov	w1, w0
    6708:	add	x0, sp, #0x3c
    670c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6710:	and	w0, w0, #0xff
    6714:	eor	w0, w0, #0x1
    6718:	and	w0, w0, #0xff
    671c:	cmp	w0, #0x0
    6720:	b.eq	672c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17bc>  // b.none
    6724:	mov	w0, #0x0                   	// #0
    6728:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    672c:	mov	w2, #0x9                   	// #9
    6730:	mov	w1, #0x5                   	// #5
    6734:	ldr	w0, [sp, #52]
    6738:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    673c:	str	w0, [sp, #3772]
    6740:	ldr	x3, [sp, #24]
    6744:	ldr	x2, [sp, #32]
    6748:	ldr	w1, [sp, #3772]
    674c:	ldr	x0, [sp, #40]
    6750:	bl	2a934 <_Z16DecodeImm8OptLslILi16EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    6754:	mov	w1, w0
    6758:	add	x0, sp, #0x3c
    675c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6760:	and	w0, w0, #0xff
    6764:	eor	w0, w0, #0x1
    6768:	and	w0, w0, #0xff
    676c:	cmp	w0, #0x0
    6770:	b.eq	677c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x180c>  // b.none
    6774:	mov	w0, #0x0                   	// #0
    6778:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    677c:	ldr	w0, [sp, #60]
    6780:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6784:	mov	w2, #0x5                   	// #5
    6788:	mov	w1, #0x0                   	// #0
    678c:	ldr	w0, [sp, #52]
    6790:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6794:	str	w0, [sp, #3772]
    6798:	ldr	x3, [sp, #24]
    679c:	ldr	x2, [sp, #32]
    67a0:	ldr	w1, [sp, #3772]
    67a4:	ldr	x0, [sp, #40]
    67a8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    67ac:	mov	w1, w0
    67b0:	add	x0, sp, #0x3c
    67b4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    67b8:	and	w0, w0, #0xff
    67bc:	eor	w0, w0, #0x1
    67c0:	and	w0, w0, #0xff
    67c4:	cmp	w0, #0x0
    67c8:	b.eq	67d4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1864>  // b.none
    67cc:	mov	w0, #0x0                   	// #0
    67d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    67d4:	mov	w2, #0x5                   	// #5
    67d8:	mov	w1, #0x0                   	// #0
    67dc:	ldr	w0, [sp, #52]
    67e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    67e4:	str	w0, [sp, #3772]
    67e8:	ldr	x3, [sp, #24]
    67ec:	ldr	x2, [sp, #32]
    67f0:	ldr	w1, [sp, #3772]
    67f4:	ldr	x0, [sp, #40]
    67f8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    67fc:	mov	w1, w0
    6800:	add	x0, sp, #0x3c
    6804:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6808:	and	w0, w0, #0xff
    680c:	eor	w0, w0, #0x1
    6810:	and	w0, w0, #0xff
    6814:	cmp	w0, #0x0
    6818:	b.eq	6824 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18b4>  // b.none
    681c:	mov	w0, #0x0                   	// #0
    6820:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6824:	mov	w2, #0x4                   	// #4
    6828:	mov	w1, #0x10                  	// #16
    682c:	ldr	w0, [sp, #52]
    6830:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6834:	str	w0, [sp, #3772]
    6838:	ldr	x3, [sp, #24]
    683c:	ldr	x2, [sp, #32]
    6840:	ldr	w1, [sp, #3772]
    6844:	ldr	x0, [sp, #40]
    6848:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    684c:	mov	w1, w0
    6850:	add	x0, sp, #0x3c
    6854:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6858:	and	w0, w0, #0xff
    685c:	eor	w0, w0, #0x1
    6860:	and	w0, w0, #0xff
    6864:	cmp	w0, #0x0
    6868:	b.eq	6874 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1904>  // b.none
    686c:	mov	w0, #0x0                   	// #0
    6870:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6874:	mov	w2, #0x9                   	// #9
    6878:	mov	w1, #0x5                   	// #5
    687c:	ldr	w0, [sp, #52]
    6880:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6884:	str	w0, [sp, #3772]
    6888:	ldr	x3, [sp, #24]
    688c:	ldr	x2, [sp, #32]
    6890:	ldr	w1, [sp, #3772]
    6894:	ldr	x0, [sp, #40]
    6898:	bl	2a8a8 <_Z16DecodeImm8OptLslILi8EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    689c:	mov	w1, w0
    68a0:	add	x0, sp, #0x3c
    68a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    68a8:	and	w0, w0, #0xff
    68ac:	eor	w0, w0, #0x1
    68b0:	and	w0, w0, #0xff
    68b4:	cmp	w0, #0x0
    68b8:	b.eq	68c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1954>  // b.none
    68bc:	mov	w0, #0x0                   	// #0
    68c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    68c4:	ldr	w0, [sp, #60]
    68c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    68cc:	mov	w2, #0x5                   	// #5
    68d0:	mov	w1, #0x0                   	// #0
    68d4:	ldr	w0, [sp, #52]
    68d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    68dc:	str	w0, [sp, #3772]
    68e0:	ldr	x3, [sp, #24]
    68e4:	ldr	x2, [sp, #32]
    68e8:	ldr	w1, [sp, #3772]
    68ec:	ldr	x0, [sp, #40]
    68f0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    68f4:	mov	w1, w0
    68f8:	add	x0, sp, #0x3c
    68fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6900:	and	w0, w0, #0xff
    6904:	eor	w0, w0, #0x1
    6908:	and	w0, w0, #0xff
    690c:	cmp	w0, #0x0
    6910:	b.eq	691c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19ac>  // b.none
    6914:	mov	w0, #0x0                   	// #0
    6918:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    691c:	mov	w2, #0x5                   	// #5
    6920:	mov	w1, #0x0                   	// #0
    6924:	ldr	w0, [sp, #52]
    6928:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    692c:	str	w0, [sp, #3772]
    6930:	ldr	x3, [sp, #24]
    6934:	ldr	x2, [sp, #32]
    6938:	ldr	w1, [sp, #3772]
    693c:	ldr	x0, [sp, #40]
    6940:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6944:	mov	w1, w0
    6948:	add	x0, sp, #0x3c
    694c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6950:	and	w0, w0, #0xff
    6954:	eor	w0, w0, #0x1
    6958:	and	w0, w0, #0xff
    695c:	cmp	w0, #0x0
    6960:	b.eq	696c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19fc>  // b.none
    6964:	mov	w0, #0x0                   	// #0
    6968:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    696c:	mov	w2, #0x4                   	// #4
    6970:	mov	w1, #0x10                  	// #16
    6974:	ldr	w0, [sp, #52]
    6978:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    697c:	str	w0, [sp, #3772]
    6980:	ldr	x3, [sp, #24]
    6984:	ldr	x2, [sp, #32]
    6988:	ldr	w1, [sp, #3772]
    698c:	ldr	x0, [sp, #40]
    6990:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    6994:	mov	w1, w0
    6998:	add	x0, sp, #0x3c
    699c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    69a0:	and	w0, w0, #0xff
    69a4:	eor	w0, w0, #0x1
    69a8:	and	w0, w0, #0xff
    69ac:	cmp	w0, #0x0
    69b0:	b.eq	69bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a4c>  // b.none
    69b4:	mov	w0, #0x0                   	// #0
    69b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    69bc:	mov	w2, #0x9                   	// #9
    69c0:	mov	w1, #0x5                   	// #5
    69c4:	ldr	w0, [sp, #52]
    69c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    69cc:	str	w0, [sp, #3772]
    69d0:	ldr	x3, [sp, #24]
    69d4:	ldr	x2, [sp, #32]
    69d8:	ldr	w1, [sp, #3772]
    69dc:	ldr	x0, [sp, #40]
    69e0:	bl	2a934 <_Z16DecodeImm8OptLslILi16EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    69e4:	mov	w1, w0
    69e8:	add	x0, sp, #0x3c
    69ec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    69f0:	and	w0, w0, #0xff
    69f4:	eor	w0, w0, #0x1
    69f8:	and	w0, w0, #0xff
    69fc:	cmp	w0, #0x0
    6a00:	b.eq	6a0c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a9c>  // b.none
    6a04:	mov	w0, #0x0                   	// #0
    6a08:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6a0c:	ldr	w0, [sp, #60]
    6a10:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6a14:	mov	w2, #0x5                   	// #5
    6a18:	mov	w1, #0x0                   	// #0
    6a1c:	ldr	w0, [sp, #52]
    6a20:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6a24:	str	w0, [sp, #3772]
    6a28:	ldr	x3, [sp, #24]
    6a2c:	ldr	x2, [sp, #32]
    6a30:	ldr	w1, [sp, #3772]
    6a34:	ldr	x0, [sp, #40]
    6a38:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6a3c:	mov	w1, w0
    6a40:	add	x0, sp, #0x3c
    6a44:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6a48:	and	w0, w0, #0xff
    6a4c:	eor	w0, w0, #0x1
    6a50:	and	w0, w0, #0xff
    6a54:	cmp	w0, #0x0
    6a58:	b.eq	6a64 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1af4>  // b.none
    6a5c:	mov	w0, #0x0                   	// #0
    6a60:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6a64:	mov	w2, #0x5                   	// #5
    6a68:	mov	w1, #0x0                   	// #0
    6a6c:	ldr	w0, [sp, #52]
    6a70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6a74:	str	w0, [sp, #3772]
    6a78:	ldr	x3, [sp, #24]
    6a7c:	ldr	x2, [sp, #32]
    6a80:	ldr	w1, [sp, #3772]
    6a84:	ldr	x0, [sp, #40]
    6a88:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6a8c:	mov	w1, w0
    6a90:	add	x0, sp, #0x3c
    6a94:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6a98:	and	w0, w0, #0xff
    6a9c:	eor	w0, w0, #0x1
    6aa0:	and	w0, w0, #0xff
    6aa4:	cmp	w0, #0x0
    6aa8:	b.eq	6ab4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b44>  // b.none
    6aac:	mov	w0, #0x0                   	// #0
    6ab0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6ab4:	mov	w2, #0x4                   	// #4
    6ab8:	mov	w1, #0x10                  	// #16
    6abc:	ldr	w0, [sp, #52]
    6ac0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6ac4:	str	w0, [sp, #3772]
    6ac8:	ldr	x3, [sp, #24]
    6acc:	ldr	x2, [sp, #32]
    6ad0:	ldr	w1, [sp, #3772]
    6ad4:	ldr	x0, [sp, #40]
    6ad8:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    6adc:	mov	w1, w0
    6ae0:	add	x0, sp, #0x3c
    6ae4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6ae8:	and	w0, w0, #0xff
    6aec:	eor	w0, w0, #0x1
    6af0:	and	w0, w0, #0xff
    6af4:	cmp	w0, #0x0
    6af8:	b.eq	6b04 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b94>  // b.none
    6afc:	mov	w0, #0x0                   	// #0
    6b00:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6b04:	mov	w2, #0x8                   	// #8
    6b08:	mov	w1, #0x5                   	// #5
    6b0c:	ldr	w0, [sp, #52]
    6b10:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6b14:	str	w0, [sp, #3772]
    6b18:	ldr	w0, [sp, #3772]
    6b1c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    6b20:	stp	x0, x1, [sp, #88]
    6b24:	add	x0, sp, #0x58
    6b28:	mov	x1, x0
    6b2c:	ldr	x0, [sp, #40]
    6b30:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    6b34:	ldr	w0, [sp, #60]
    6b38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6b3c:	mov	w2, #0x5                   	// #5
    6b40:	mov	w1, #0x0                   	// #0
    6b44:	ldr	w0, [sp, #52]
    6b48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6b4c:	str	w0, [sp, #3772]
    6b50:	ldr	x3, [sp, #24]
    6b54:	ldr	x2, [sp, #32]
    6b58:	ldr	w1, [sp, #3772]
    6b5c:	ldr	x0, [sp, #40]
    6b60:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6b64:	mov	w1, w0
    6b68:	add	x0, sp, #0x3c
    6b6c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6b70:	and	w0, w0, #0xff
    6b74:	eor	w0, w0, #0x1
    6b78:	and	w0, w0, #0xff
    6b7c:	cmp	w0, #0x0
    6b80:	b.eq	6b8c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c1c>  // b.none
    6b84:	mov	w0, #0x0                   	// #0
    6b88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6b8c:	mov	w2, #0x4                   	// #4
    6b90:	mov	w1, #0x10                  	// #16
    6b94:	ldr	w0, [sp, #52]
    6b98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6b9c:	str	w0, [sp, #3772]
    6ba0:	ldr	x3, [sp, #24]
    6ba4:	ldr	x2, [sp, #32]
    6ba8:	ldr	w1, [sp, #3772]
    6bac:	ldr	x0, [sp, #40]
    6bb0:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    6bb4:	mov	w1, w0
    6bb8:	add	x0, sp, #0x3c
    6bbc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6bc0:	and	w0, w0, #0xff
    6bc4:	eor	w0, w0, #0x1
    6bc8:	and	w0, w0, #0xff
    6bcc:	cmp	w0, #0x0
    6bd0:	b.eq	6bdc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c6c>  // b.none
    6bd4:	mov	w0, #0x0                   	// #0
    6bd8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6bdc:	mov	w2, #0x9                   	// #9
    6be0:	mov	w1, #0x5                   	// #5
    6be4:	ldr	w0, [sp, #52]
    6be8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6bec:	str	w0, [sp, #3772]
    6bf0:	ldr	x3, [sp, #24]
    6bf4:	ldr	x2, [sp, #32]
    6bf8:	ldr	w1, [sp, #3772]
    6bfc:	ldr	x0, [sp, #40]
    6c00:	bl	2a9ac <_Z16DecodeImm8OptLslILi32EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    6c04:	mov	w1, w0
    6c08:	add	x0, sp, #0x3c
    6c0c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6c10:	and	w0, w0, #0xff
    6c14:	eor	w0, w0, #0x1
    6c18:	and	w0, w0, #0xff
    6c1c:	cmp	w0, #0x0
    6c20:	b.eq	6c2c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cbc>  // b.none
    6c24:	mov	w0, #0x0                   	// #0
    6c28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6c2c:	ldr	w0, [sp, #60]
    6c30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6c34:	mov	w2, #0x5                   	// #5
    6c38:	mov	w1, #0x0                   	// #0
    6c3c:	ldr	w0, [sp, #52]
    6c40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6c44:	str	w0, [sp, #3772]
    6c48:	ldr	x3, [sp, #24]
    6c4c:	ldr	x2, [sp, #32]
    6c50:	ldr	w1, [sp, #3772]
    6c54:	ldr	x0, [sp, #40]
    6c58:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6c5c:	mov	w1, w0
    6c60:	add	x0, sp, #0x3c
    6c64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6c68:	and	w0, w0, #0xff
    6c6c:	eor	w0, w0, #0x1
    6c70:	and	w0, w0, #0xff
    6c74:	cmp	w0, #0x0
    6c78:	b.eq	6c84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d14>  // b.none
    6c7c:	mov	w0, #0x0                   	// #0
    6c80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6c84:	mov	w2, #0x4                   	// #4
    6c88:	mov	w1, #0x10                  	// #16
    6c8c:	ldr	w0, [sp, #52]
    6c90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6c94:	str	w0, [sp, #3772]
    6c98:	ldr	x3, [sp, #24]
    6c9c:	ldr	x2, [sp, #32]
    6ca0:	ldr	w1, [sp, #3772]
    6ca4:	ldr	x0, [sp, #40]
    6ca8:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    6cac:	mov	w1, w0
    6cb0:	add	x0, sp, #0x3c
    6cb4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6cb8:	and	w0, w0, #0xff
    6cbc:	eor	w0, w0, #0x1
    6cc0:	and	w0, w0, #0xff
    6cc4:	cmp	w0, #0x0
    6cc8:	b.eq	6cd4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d64>  // b.none
    6ccc:	mov	w0, #0x0                   	// #0
    6cd0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6cd4:	mov	w2, #0x9                   	// #9
    6cd8:	mov	w1, #0x5                   	// #5
    6cdc:	ldr	w0, [sp, #52]
    6ce0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6ce4:	str	w0, [sp, #3772]
    6ce8:	ldr	x3, [sp, #24]
    6cec:	ldr	x2, [sp, #32]
    6cf0:	ldr	w1, [sp, #3772]
    6cf4:	ldr	x0, [sp, #40]
    6cf8:	bl	2aa24 <_Z16DecodeImm8OptLslILi64EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    6cfc:	mov	w1, w0
    6d00:	add	x0, sp, #0x3c
    6d04:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6d08:	and	w0, w0, #0xff
    6d0c:	eor	w0, w0, #0x1
    6d10:	and	w0, w0, #0xff
    6d14:	cmp	w0, #0x0
    6d18:	b.eq	6d24 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1db4>  // b.none
    6d1c:	mov	w0, #0x0                   	// #0
    6d20:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6d24:	ldr	w0, [sp, #60]
    6d28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6d2c:	mov	w2, #0x5                   	// #5
    6d30:	mov	w1, #0x0                   	// #0
    6d34:	ldr	w0, [sp, #52]
    6d38:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6d3c:	str	w0, [sp, #3772]
    6d40:	ldr	x3, [sp, #24]
    6d44:	ldr	x2, [sp, #32]
    6d48:	ldr	w1, [sp, #3772]
    6d4c:	ldr	x0, [sp, #40]
    6d50:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6d54:	mov	w1, w0
    6d58:	add	x0, sp, #0x3c
    6d5c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6d60:	and	w0, w0, #0xff
    6d64:	eor	w0, w0, #0x1
    6d68:	and	w0, w0, #0xff
    6d6c:	cmp	w0, #0x0
    6d70:	b.eq	6d7c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e0c>  // b.none
    6d74:	mov	w0, #0x0                   	// #0
    6d78:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6d7c:	mov	w2, #0x5                   	// #5
    6d80:	mov	w1, #0x0                   	// #0
    6d84:	ldr	w0, [sp, #52]
    6d88:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6d8c:	str	w0, [sp, #3772]
    6d90:	ldr	x3, [sp, #24]
    6d94:	ldr	x2, [sp, #32]
    6d98:	ldr	w1, [sp, #3772]
    6d9c:	ldr	x0, [sp, #40]
    6da0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6da4:	mov	w1, w0
    6da8:	add	x0, sp, #0x3c
    6dac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6db0:	and	w0, w0, #0xff
    6db4:	eor	w0, w0, #0x1
    6db8:	and	w0, w0, #0xff
    6dbc:	cmp	w0, #0x0
    6dc0:	b.eq	6dcc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e5c>  // b.none
    6dc4:	mov	w0, #0x0                   	// #0
    6dc8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6dcc:	mov	w2, #0x4                   	// #4
    6dd0:	mov	w1, #0x10                  	// #16
    6dd4:	ldr	w0, [sp, #52]
    6dd8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6ddc:	str	w0, [sp, #3772]
    6de0:	ldr	x3, [sp, #24]
    6de4:	ldr	x2, [sp, #32]
    6de8:	ldr	w1, [sp, #3772]
    6dec:	ldr	x0, [sp, #40]
    6df0:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    6df4:	mov	w1, w0
    6df8:	add	x0, sp, #0x3c
    6dfc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6e00:	and	w0, w0, #0xff
    6e04:	eor	w0, w0, #0x1
    6e08:	and	w0, w0, #0xff
    6e0c:	cmp	w0, #0x0
    6e10:	b.eq	6e1c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1eac>  // b.none
    6e14:	mov	w0, #0x0                   	// #0
    6e18:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6e1c:	mov	w2, #0x9                   	// #9
    6e20:	mov	w1, #0x5                   	// #5
    6e24:	ldr	w0, [sp, #52]
    6e28:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6e2c:	str	w0, [sp, #3772]
    6e30:	ldr	x3, [sp, #24]
    6e34:	ldr	x2, [sp, #32]
    6e38:	ldr	w1, [sp, #3772]
    6e3c:	ldr	x0, [sp, #40]
    6e40:	bl	2a9ac <_Z16DecodeImm8OptLslILi32EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    6e44:	mov	w1, w0
    6e48:	add	x0, sp, #0x3c
    6e4c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6e50:	and	w0, w0, #0xff
    6e54:	eor	w0, w0, #0x1
    6e58:	and	w0, w0, #0xff
    6e5c:	cmp	w0, #0x0
    6e60:	b.eq	6e6c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1efc>  // b.none
    6e64:	mov	w0, #0x0                   	// #0
    6e68:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6e6c:	ldr	w0, [sp, #60]
    6e70:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6e74:	mov	w2, #0x5                   	// #5
    6e78:	mov	w1, #0x0                   	// #0
    6e7c:	ldr	w0, [sp, #52]
    6e80:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6e84:	str	w0, [sp, #3772]
    6e88:	ldr	x3, [sp, #24]
    6e8c:	ldr	x2, [sp, #32]
    6e90:	ldr	w1, [sp, #3772]
    6e94:	ldr	x0, [sp, #40]
    6e98:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6e9c:	mov	w1, w0
    6ea0:	add	x0, sp, #0x3c
    6ea4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6ea8:	and	w0, w0, #0xff
    6eac:	eor	w0, w0, #0x1
    6eb0:	and	w0, w0, #0xff
    6eb4:	cmp	w0, #0x0
    6eb8:	b.eq	6ec4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f54>  // b.none
    6ebc:	mov	w0, #0x0                   	// #0
    6ec0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6ec4:	mov	w2, #0x5                   	// #5
    6ec8:	mov	w1, #0x0                   	// #0
    6ecc:	ldr	w0, [sp, #52]
    6ed0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6ed4:	str	w0, [sp, #3772]
    6ed8:	ldr	x3, [sp, #24]
    6edc:	ldr	x2, [sp, #32]
    6ee0:	ldr	w1, [sp, #3772]
    6ee4:	ldr	x0, [sp, #40]
    6ee8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6eec:	mov	w1, w0
    6ef0:	add	x0, sp, #0x3c
    6ef4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6ef8:	and	w0, w0, #0xff
    6efc:	eor	w0, w0, #0x1
    6f00:	and	w0, w0, #0xff
    6f04:	cmp	w0, #0x0
    6f08:	b.eq	6f14 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1fa4>  // b.none
    6f0c:	mov	w0, #0x0                   	// #0
    6f10:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6f14:	mov	w2, #0x4                   	// #4
    6f18:	mov	w1, #0x10                  	// #16
    6f1c:	ldr	w0, [sp, #52]
    6f20:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6f24:	str	w0, [sp, #3772]
    6f28:	ldr	x3, [sp, #24]
    6f2c:	ldr	x2, [sp, #32]
    6f30:	ldr	w1, [sp, #3772]
    6f34:	ldr	x0, [sp, #40]
    6f38:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    6f3c:	mov	w1, w0
    6f40:	add	x0, sp, #0x3c
    6f44:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6f48:	and	w0, w0, #0xff
    6f4c:	eor	w0, w0, #0x1
    6f50:	and	w0, w0, #0xff
    6f54:	cmp	w0, #0x0
    6f58:	b.eq	6f64 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ff4>  // b.none
    6f5c:	mov	w0, #0x0                   	// #0
    6f60:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6f64:	mov	w2, #0x9                   	// #9
    6f68:	mov	w1, #0x5                   	// #5
    6f6c:	ldr	w0, [sp, #52]
    6f70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6f74:	str	w0, [sp, #3772]
    6f78:	ldr	x3, [sp, #24]
    6f7c:	ldr	x2, [sp, #32]
    6f80:	ldr	w1, [sp, #3772]
    6f84:	ldr	x0, [sp, #40]
    6f88:	bl	2aa24 <_Z16DecodeImm8OptLslILi64EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    6f8c:	mov	w1, w0
    6f90:	add	x0, sp, #0x3c
    6f94:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6f98:	and	w0, w0, #0xff
    6f9c:	eor	w0, w0, #0x1
    6fa0:	and	w0, w0, #0xff
    6fa4:	cmp	w0, #0x0
    6fa8:	b.eq	6fb4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2044>  // b.none
    6fac:	mov	w0, #0x0                   	// #0
    6fb0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6fb4:	ldr	w0, [sp, #60]
    6fb8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    6fbc:	mov	w2, #0x5                   	// #5
    6fc0:	mov	w1, #0x0                   	// #0
    6fc4:	ldr	w0, [sp, #52]
    6fc8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    6fcc:	str	w0, [sp, #3772]
    6fd0:	ldr	x3, [sp, #24]
    6fd4:	ldr	x2, [sp, #32]
    6fd8:	ldr	w1, [sp, #3772]
    6fdc:	ldr	x0, [sp, #40]
    6fe0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    6fe4:	mov	w1, w0
    6fe8:	add	x0, sp, #0x3c
    6fec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    6ff0:	and	w0, w0, #0xff
    6ff4:	eor	w0, w0, #0x1
    6ff8:	and	w0, w0, #0xff
    6ffc:	cmp	w0, #0x0
    7000:	b.eq	700c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x209c>  // b.none
    7004:	mov	w0, #0x0                   	// #0
    7008:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    700c:	mov	w2, #0x5                   	// #5
    7010:	mov	w1, #0x5                   	// #5
    7014:	ldr	w0, [sp, #52]
    7018:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    701c:	str	w0, [sp, #3772]
    7020:	ldr	x3, [sp, #24]
    7024:	ldr	x2, [sp, #32]
    7028:	ldr	w1, [sp, #3772]
    702c:	ldr	x0, [sp, #40]
    7030:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7034:	mov	w1, w0
    7038:	add	x0, sp, #0x3c
    703c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7040:	and	w0, w0, #0xff
    7044:	eor	w0, w0, #0x1
    7048:	and	w0, w0, #0xff
    704c:	cmp	w0, #0x0
    7050:	b.eq	705c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20ec>  // b.none
    7054:	mov	w0, #0x0                   	// #0
    7058:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    705c:	mov	w2, #0x5                   	// #5
    7060:	mov	w1, #0x10                  	// #16
    7064:	ldr	w0, [sp, #52]
    7068:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    706c:	str	w0, [sp, #3772]
    7070:	ldr	x3, [sp, #24]
    7074:	ldr	x2, [sp, #32]
    7078:	ldr	w1, [sp, #3772]
    707c:	ldr	x0, [sp, #40]
    7080:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7084:	mov	w1, w0
    7088:	add	x0, sp, #0x3c
    708c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7090:	and	w0, w0, #0xff
    7094:	eor	w0, w0, #0x1
    7098:	and	w0, w0, #0xff
    709c:	cmp	w0, #0x0
    70a0:	b.eq	70ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x213c>  // b.none
    70a4:	mov	w0, #0x0                   	// #0
    70a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    70ac:	ldr	w0, [sp, #60]
    70b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    70b4:	mov	w2, #0x5                   	// #5
    70b8:	mov	w1, #0x0                   	// #0
    70bc:	ldr	w0, [sp, #52]
    70c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    70c4:	str	w0, [sp, #3772]
    70c8:	ldr	x3, [sp, #24]
    70cc:	ldr	x2, [sp, #32]
    70d0:	ldr	w1, [sp, #3772]
    70d4:	ldr	x0, [sp, #40]
    70d8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    70dc:	mov	w1, w0
    70e0:	add	x0, sp, #0x3c
    70e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    70e8:	and	w0, w0, #0xff
    70ec:	eor	w0, w0, #0x1
    70f0:	and	w0, w0, #0xff
    70f4:	cmp	w0, #0x0
    70f8:	b.eq	7104 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2194>  // b.none
    70fc:	mov	w0, #0x0                   	// #0
    7100:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7104:	mov	w2, #0x5                   	// #5
    7108:	mov	w1, #0x0                   	// #0
    710c:	ldr	w0, [sp, #52]
    7110:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7114:	str	w0, [sp, #3772]
    7118:	ldr	x3, [sp, #24]
    711c:	ldr	x2, [sp, #32]
    7120:	ldr	w1, [sp, #3772]
    7124:	ldr	x0, [sp, #40]
    7128:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    712c:	mov	w1, w0
    7130:	add	x0, sp, #0x3c
    7134:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7138:	and	w0, w0, #0xff
    713c:	eor	w0, w0, #0x1
    7140:	and	w0, w0, #0xff
    7144:	cmp	w0, #0x0
    7148:	b.eq	7154 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21e4>  // b.none
    714c:	mov	w0, #0x0                   	// #0
    7150:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7154:	mov	w2, #0x5                   	// #5
    7158:	mov	w1, #0x5                   	// #5
    715c:	ldr	w0, [sp, #52]
    7160:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7164:	str	w0, [sp, #3772]
    7168:	ldr	x3, [sp, #24]
    716c:	ldr	x2, [sp, #32]
    7170:	ldr	w1, [sp, #3772]
    7174:	ldr	x0, [sp, #40]
    7178:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    717c:	mov	w1, w0
    7180:	add	x0, sp, #0x3c
    7184:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7188:	and	w0, w0, #0xff
    718c:	eor	w0, w0, #0x1
    7190:	and	w0, w0, #0xff
    7194:	cmp	w0, #0x0
    7198:	b.eq	71a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2234>  // b.none
    719c:	mov	w0, #0x0                   	// #0
    71a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    71a4:	str	wzr, [sp, #3772]
    71a8:	mov	w2, #0x3                   	// #3
    71ac:	mov	w1, #0xa                   	// #10
    71b0:	ldr	w0, [sp, #52]
    71b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    71b8:	mov	w1, w0
    71bc:	ldr	w0, [sp, #3772]
    71c0:	orr	w0, w0, w1
    71c4:	str	w0, [sp, #3772]
    71c8:	mov	w2, #0x5                   	// #5
    71cc:	mov	w1, #0x10                  	// #16
    71d0:	ldr	w0, [sp, #52]
    71d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    71d8:	lsl	w0, w0, #3
    71dc:	ldr	w1, [sp, #3772]
    71e0:	orr	w0, w1, w0
    71e4:	str	w0, [sp, #3772]
    71e8:	ldr	w0, [sp, #3772]
    71ec:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    71f0:	stp	x0, x1, [sp, #104]
    71f4:	add	x0, sp, #0x68
    71f8:	mov	x1, x0
    71fc:	ldr	x0, [sp, #40]
    7200:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    7204:	ldr	w0, [sp, #60]
    7208:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    720c:	mov	w2, #0x5                   	// #5
    7210:	mov	w1, #0x0                   	// #0
    7214:	ldr	w0, [sp, #52]
    7218:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    721c:	str	w0, [sp, #3772]
    7220:	ldr	x3, [sp, #24]
    7224:	ldr	x2, [sp, #32]
    7228:	ldr	w1, [sp, #3772]
    722c:	ldr	x0, [sp, #40]
    7230:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7234:	mov	w1, w0
    7238:	add	x0, sp, #0x3c
    723c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7240:	and	w0, w0, #0xff
    7244:	eor	w0, w0, #0x1
    7248:	and	w0, w0, #0xff
    724c:	cmp	w0, #0x0
    7250:	b.eq	725c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22ec>  // b.none
    7254:	mov	w0, #0x0                   	// #0
    7258:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    725c:	mov	w2, #0x5                   	// #5
    7260:	mov	w1, #0x5                   	// #5
    7264:	ldr	w0, [sp, #52]
    7268:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    726c:	str	w0, [sp, #3772]
    7270:	ldr	x3, [sp, #24]
    7274:	ldr	x2, [sp, #32]
    7278:	ldr	w1, [sp, #3772]
    727c:	ldr	x0, [sp, #40]
    7280:	bl	dc4 <_ZL23DecodeZPR2RegisterClassRN4llvm6MCInstEjmPKv>
    7284:	mov	w1, w0
    7288:	add	x0, sp, #0x3c
    728c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7290:	and	w0, w0, #0xff
    7294:	eor	w0, w0, #0x1
    7298:	and	w0, w0, #0xff
    729c:	cmp	w0, #0x0
    72a0:	b.eq	72ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x233c>  // b.none
    72a4:	mov	w0, #0x0                   	// #0
    72a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    72ac:	str	wzr, [sp, #3772]
    72b0:	mov	w2, #0x3                   	// #3
    72b4:	mov	w1, #0xa                   	// #10
    72b8:	ldr	w0, [sp, #52]
    72bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    72c0:	mov	w1, w0
    72c4:	ldr	w0, [sp, #3772]
    72c8:	orr	w0, w0, w1
    72cc:	str	w0, [sp, #3772]
    72d0:	mov	w2, #0x5                   	// #5
    72d4:	mov	w1, #0x10                  	// #16
    72d8:	ldr	w0, [sp, #52]
    72dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    72e0:	lsl	w0, w0, #3
    72e4:	ldr	w1, [sp, #3772]
    72e8:	orr	w0, w1, w0
    72ec:	str	w0, [sp, #3772]
    72f0:	ldr	w0, [sp, #3772]
    72f4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    72f8:	stp	x0, x1, [sp, #120]
    72fc:	add	x0, sp, #0x78
    7300:	mov	x1, x0
    7304:	ldr	x0, [sp, #40]
    7308:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    730c:	ldr	w0, [sp, #60]
    7310:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7314:	mov	w2, #0x5                   	// #5
    7318:	mov	w1, #0x0                   	// #0
    731c:	ldr	w0, [sp, #52]
    7320:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7324:	str	w0, [sp, #3772]
    7328:	ldr	x3, [sp, #24]
    732c:	ldr	x2, [sp, #32]
    7330:	ldr	w1, [sp, #3772]
    7334:	ldr	x0, [sp, #40]
    7338:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    733c:	mov	w1, w0
    7340:	add	x0, sp, #0x3c
    7344:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7348:	and	w0, w0, #0xff
    734c:	eor	w0, w0, #0x1
    7350:	and	w0, w0, #0xff
    7354:	cmp	w0, #0x0
    7358:	b.eq	7364 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23f4>  // b.none
    735c:	mov	w0, #0x0                   	// #0
    7360:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7364:	mov	w2, #0x5                   	// #5
    7368:	mov	w1, #0x5                   	// #5
    736c:	ldr	w0, [sp, #52]
    7370:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7374:	str	w0, [sp, #3772]
    7378:	ldr	x3, [sp, #24]
    737c:	ldr	x2, [sp, #32]
    7380:	ldr	w1, [sp, #3772]
    7384:	ldr	x0, [sp, #40]
    7388:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    738c:	mov	w1, w0
    7390:	add	x0, sp, #0x3c
    7394:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7398:	and	w0, w0, #0xff
    739c:	eor	w0, w0, #0x1
    73a0:	and	w0, w0, #0xff
    73a4:	cmp	w0, #0x0
    73a8:	b.eq	73b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2444>  // b.none
    73ac:	mov	w0, #0x0                   	// #0
    73b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    73b4:	mov	w2, #0x2                   	// #2
    73b8:	mov	w1, #0x16                  	// #22
    73bc:	ldr	w0, [sp, #52]
    73c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    73c4:	str	w0, [sp, #3772]
    73c8:	ldr	w0, [sp, #3772]
    73cc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    73d0:	stp	x0, x1, [sp, #136]
    73d4:	add	x0, sp, #0x88
    73d8:	mov	x1, x0
    73dc:	ldr	x0, [sp, #40]
    73e0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    73e4:	ldr	w0, [sp, #60]
    73e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    73ec:	mov	w2, #0x5                   	// #5
    73f0:	mov	w1, #0x0                   	// #0
    73f4:	ldr	w0, [sp, #52]
    73f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    73fc:	str	w0, [sp, #3772]
    7400:	ldr	x3, [sp, #24]
    7404:	ldr	x2, [sp, #32]
    7408:	ldr	w1, [sp, #3772]
    740c:	ldr	x0, [sp, #40]
    7410:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7414:	mov	w1, w0
    7418:	add	x0, sp, #0x3c
    741c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7420:	and	w0, w0, #0xff
    7424:	eor	w0, w0, #0x1
    7428:	and	w0, w0, #0xff
    742c:	cmp	w0, #0x0
    7430:	b.eq	743c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24cc>  // b.none
    7434:	mov	w0, #0x0                   	// #0
    7438:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    743c:	mov	w2, #0x5                   	// #5
    7440:	mov	w1, #0x5                   	// #5
    7444:	ldr	w0, [sp, #52]
    7448:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    744c:	str	w0, [sp, #3772]
    7450:	ldr	x3, [sp, #24]
    7454:	ldr	x2, [sp, #32]
    7458:	ldr	w1, [sp, #3772]
    745c:	ldr	x0, [sp, #40]
    7460:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7464:	mov	w1, w0
    7468:	add	x0, sp, #0x3c
    746c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7470:	and	w0, w0, #0xff
    7474:	eor	w0, w0, #0x1
    7478:	and	w0, w0, #0xff
    747c:	cmp	w0, #0x0
    7480:	b.eq	748c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x251c>  // b.none
    7484:	mov	w0, #0x0                   	// #0
    7488:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    748c:	str	wzr, [sp, #3772]
    7490:	mov	w2, #0x1                   	// #1
    7494:	mov	w1, #0x14                  	// #20
    7498:	ldr	w0, [sp, #52]
    749c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    74a0:	mov	w1, w0
    74a4:	ldr	w0, [sp, #3772]
    74a8:	orr	w0, w0, w1
    74ac:	str	w0, [sp, #3772]
    74b0:	mov	w2, #0x2                   	// #2
    74b4:	mov	w1, #0x16                  	// #22
    74b8:	ldr	w0, [sp, #52]
    74bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    74c0:	lsl	w0, w0, #1
    74c4:	ldr	w1, [sp, #3772]
    74c8:	orr	w0, w1, w0
    74cc:	str	w0, [sp, #3772]
    74d0:	ldr	w0, [sp, #3772]
    74d4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    74d8:	stp	x0, x1, [sp, #152]
    74dc:	add	x0, sp, #0x98
    74e0:	mov	x1, x0
    74e4:	ldr	x0, [sp, #40]
    74e8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    74ec:	ldr	w0, [sp, #60]
    74f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    74f4:	mov	w2, #0x5                   	// #5
    74f8:	mov	w1, #0x0                   	// #0
    74fc:	ldr	w0, [sp, #52]
    7500:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7504:	str	w0, [sp, #3772]
    7508:	ldr	x3, [sp, #24]
    750c:	ldr	x2, [sp, #32]
    7510:	ldr	w1, [sp, #3772]
    7514:	ldr	x0, [sp, #40]
    7518:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    751c:	mov	w1, w0
    7520:	add	x0, sp, #0x3c
    7524:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7528:	and	w0, w0, #0xff
    752c:	eor	w0, w0, #0x1
    7530:	and	w0, w0, #0xff
    7534:	cmp	w0, #0x0
    7538:	b.eq	7544 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25d4>  // b.none
    753c:	mov	w0, #0x0                   	// #0
    7540:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7544:	mov	w2, #0x5                   	// #5
    7548:	mov	w1, #0x5                   	// #5
    754c:	ldr	w0, [sp, #52]
    7550:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7554:	str	w0, [sp, #3772]
    7558:	ldr	x3, [sp, #24]
    755c:	ldr	x2, [sp, #32]
    7560:	ldr	w1, [sp, #3772]
    7564:	ldr	x0, [sp, #40]
    7568:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    756c:	mov	w1, w0
    7570:	add	x0, sp, #0x3c
    7574:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7578:	and	w0, w0, #0xff
    757c:	eor	w0, w0, #0x1
    7580:	and	w0, w0, #0xff
    7584:	cmp	w0, #0x0
    7588:	b.eq	7594 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2624>  // b.none
    758c:	mov	w0, #0x0                   	// #0
    7590:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7594:	str	wzr, [sp, #3772]
    7598:	mov	w2, #0x2                   	// #2
    759c:	mov	w1, #0x13                  	// #19
    75a0:	ldr	w0, [sp, #52]
    75a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    75a8:	mov	w1, w0
    75ac:	ldr	w0, [sp, #3772]
    75b0:	orr	w0, w0, w1
    75b4:	str	w0, [sp, #3772]
    75b8:	mov	w2, #0x2                   	// #2
    75bc:	mov	w1, #0x16                  	// #22
    75c0:	ldr	w0, [sp, #52]
    75c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    75c8:	lsl	w0, w0, #2
    75cc:	ldr	w1, [sp, #3772]
    75d0:	orr	w0, w1, w0
    75d4:	str	w0, [sp, #3772]
    75d8:	ldr	w0, [sp, #3772]
    75dc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    75e0:	stp	x0, x1, [sp, #168]
    75e4:	add	x0, sp, #0xa8
    75e8:	mov	x1, x0
    75ec:	ldr	x0, [sp, #40]
    75f0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    75f4:	ldr	w0, [sp, #60]
    75f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    75fc:	mov	w2, #0x5                   	// #5
    7600:	mov	w1, #0x0                   	// #0
    7604:	ldr	w0, [sp, #52]
    7608:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    760c:	str	w0, [sp, #3772]
    7610:	ldr	x3, [sp, #24]
    7614:	ldr	x2, [sp, #32]
    7618:	ldr	w1, [sp, #3772]
    761c:	ldr	x0, [sp, #40]
    7620:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7624:	mov	w1, w0
    7628:	add	x0, sp, #0x3c
    762c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7630:	and	w0, w0, #0xff
    7634:	eor	w0, w0, #0x1
    7638:	and	w0, w0, #0xff
    763c:	cmp	w0, #0x0
    7640:	b.eq	764c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x26dc>  // b.none
    7644:	mov	w0, #0x0                   	// #0
    7648:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    764c:	mov	w2, #0x5                   	// #5
    7650:	mov	w1, #0x5                   	// #5
    7654:	ldr	w0, [sp, #52]
    7658:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    765c:	str	w0, [sp, #3772]
    7660:	ldr	x3, [sp, #24]
    7664:	ldr	x2, [sp, #32]
    7668:	ldr	w1, [sp, #3772]
    766c:	ldr	x0, [sp, #40]
    7670:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7674:	mov	w1, w0
    7678:	add	x0, sp, #0x3c
    767c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7680:	and	w0, w0, #0xff
    7684:	eor	w0, w0, #0x1
    7688:	and	w0, w0, #0xff
    768c:	cmp	w0, #0x0
    7690:	b.eq	769c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x272c>  // b.none
    7694:	mov	w0, #0x0                   	// #0
    7698:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    769c:	str	wzr, [sp, #3772]
    76a0:	mov	w2, #0x3                   	// #3
    76a4:	mov	w1, #0x12                  	// #18
    76a8:	ldr	w0, [sp, #52]
    76ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    76b0:	mov	w1, w0
    76b4:	ldr	w0, [sp, #3772]
    76b8:	orr	w0, w0, w1
    76bc:	str	w0, [sp, #3772]
    76c0:	mov	w2, #0x2                   	// #2
    76c4:	mov	w1, #0x16                  	// #22
    76c8:	ldr	w0, [sp, #52]
    76cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    76d0:	lsl	w0, w0, #3
    76d4:	ldr	w1, [sp, #3772]
    76d8:	orr	w0, w1, w0
    76dc:	str	w0, [sp, #3772]
    76e0:	ldr	w0, [sp, #3772]
    76e4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    76e8:	stp	x0, x1, [sp, #184]
    76ec:	add	x0, sp, #0xb8
    76f0:	mov	x1, x0
    76f4:	ldr	x0, [sp, #40]
    76f8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    76fc:	ldr	w0, [sp, #60]
    7700:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7704:	mov	w2, #0x5                   	// #5
    7708:	mov	w1, #0x0                   	// #0
    770c:	ldr	w0, [sp, #52]
    7710:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7714:	str	w0, [sp, #3772]
    7718:	ldr	x3, [sp, #24]
    771c:	ldr	x2, [sp, #32]
    7720:	ldr	w1, [sp, #3772]
    7724:	ldr	x0, [sp, #40]
    7728:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    772c:	mov	w1, w0
    7730:	add	x0, sp, #0x3c
    7734:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7738:	and	w0, w0, #0xff
    773c:	eor	w0, w0, #0x1
    7740:	and	w0, w0, #0xff
    7744:	cmp	w0, #0x0
    7748:	b.eq	7754 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x27e4>  // b.none
    774c:	mov	w0, #0x0                   	// #0
    7750:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7754:	mov	w2, #0x5                   	// #5
    7758:	mov	w1, #0x5                   	// #5
    775c:	ldr	w0, [sp, #52]
    7760:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7764:	str	w0, [sp, #3772]
    7768:	ldr	x3, [sp, #24]
    776c:	ldr	x2, [sp, #32]
    7770:	ldr	w1, [sp, #3772]
    7774:	ldr	x0, [sp, #40]
    7778:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    777c:	mov	w1, w0
    7780:	add	x0, sp, #0x3c
    7784:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7788:	and	w0, w0, #0xff
    778c:	eor	w0, w0, #0x1
    7790:	and	w0, w0, #0xff
    7794:	cmp	w0, #0x0
    7798:	b.eq	77a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2834>  // b.none
    779c:	mov	w0, #0x0                   	// #0
    77a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    77a4:	str	wzr, [sp, #3772]
    77a8:	mov	w2, #0x4                   	// #4
    77ac:	mov	w1, #0x11                  	// #17
    77b0:	ldr	w0, [sp, #52]
    77b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    77b8:	mov	w1, w0
    77bc:	ldr	w0, [sp, #3772]
    77c0:	orr	w0, w0, w1
    77c4:	str	w0, [sp, #3772]
    77c8:	mov	w2, #0x2                   	// #2
    77cc:	mov	w1, #0x16                  	// #22
    77d0:	ldr	w0, [sp, #52]
    77d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    77d8:	lsl	w0, w0, #4
    77dc:	ldr	w1, [sp, #3772]
    77e0:	orr	w0, w1, w0
    77e4:	str	w0, [sp, #3772]
    77e8:	ldr	w0, [sp, #3772]
    77ec:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    77f0:	stp	x0, x1, [sp, #200]
    77f4:	add	x0, sp, #0xc8
    77f8:	mov	x1, x0
    77fc:	ldr	x0, [sp, #40]
    7800:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    7804:	ldr	w0, [sp, #60]
    7808:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    780c:	mov	w2, #0x5                   	// #5
    7810:	mov	w1, #0x0                   	// #0
    7814:	ldr	w0, [sp, #52]
    7818:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    781c:	str	w0, [sp, #3772]
    7820:	ldr	x3, [sp, #24]
    7824:	ldr	x2, [sp, #32]
    7828:	ldr	w1, [sp, #3772]
    782c:	ldr	x0, [sp, #40]
    7830:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7834:	mov	w1, w0
    7838:	add	x0, sp, #0x3c
    783c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7840:	and	w0, w0, #0xff
    7844:	eor	w0, w0, #0x1
    7848:	and	w0, w0, #0xff
    784c:	cmp	w0, #0x0
    7850:	b.eq	785c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x28ec>  // b.none
    7854:	mov	w0, #0x0                   	// #0
    7858:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    785c:	mov	w2, #0x5                   	// #5
    7860:	mov	w1, #0x5                   	// #5
    7864:	ldr	w0, [sp, #52]
    7868:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    786c:	str	w0, [sp, #3772]
    7870:	ldr	x3, [sp, #24]
    7874:	ldr	x2, [sp, #32]
    7878:	ldr	w1, [sp, #3772]
    787c:	ldr	x0, [sp, #40]
    7880:	bl	dc4 <_ZL23DecodeZPR2RegisterClassRN4llvm6MCInstEjmPKv>
    7884:	mov	w1, w0
    7888:	add	x0, sp, #0x3c
    788c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7890:	and	w0, w0, #0xff
    7894:	eor	w0, w0, #0x1
    7898:	and	w0, w0, #0xff
    789c:	cmp	w0, #0x0
    78a0:	b.eq	78ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x293c>  // b.none
    78a4:	mov	w0, #0x0                   	// #0
    78a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    78ac:	mov	w2, #0x5                   	// #5
    78b0:	mov	w1, #0x10                  	// #16
    78b4:	ldr	w0, [sp, #52]
    78b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    78bc:	str	w0, [sp, #3772]
    78c0:	ldr	x3, [sp, #24]
    78c4:	ldr	x2, [sp, #32]
    78c8:	ldr	w1, [sp, #3772]
    78cc:	ldr	x0, [sp, #40]
    78d0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    78d4:	mov	w1, w0
    78d8:	add	x0, sp, #0x3c
    78dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    78e0:	and	w0, w0, #0xff
    78e4:	eor	w0, w0, #0x1
    78e8:	and	w0, w0, #0xff
    78ec:	cmp	w0, #0x0
    78f0:	b.eq	78fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x298c>  // b.none
    78f4:	mov	w0, #0x0                   	// #0
    78f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    78fc:	ldr	w0, [sp, #60]
    7900:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7904:	mov	w2, #0x5                   	// #5
    7908:	mov	w1, #0x0                   	// #0
    790c:	ldr	w0, [sp, #52]
    7910:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7914:	str	w0, [sp, #3772]
    7918:	ldr	x3, [sp, #24]
    791c:	ldr	x2, [sp, #32]
    7920:	ldr	w1, [sp, #3772]
    7924:	ldr	x0, [sp, #40]
    7928:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    792c:	mov	w1, w0
    7930:	add	x0, sp, #0x3c
    7934:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7938:	and	w0, w0, #0xff
    793c:	eor	w0, w0, #0x1
    7940:	and	w0, w0, #0xff
    7944:	cmp	w0, #0x0
    7948:	b.eq	7954 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x29e4>  // b.none
    794c:	mov	w0, #0x0                   	// #0
    7950:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7954:	mov	w2, #0x5                   	// #5
    7958:	mov	w1, #0x0                   	// #0
    795c:	ldr	w0, [sp, #52]
    7960:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7964:	str	w0, [sp, #3772]
    7968:	ldr	x3, [sp, #24]
    796c:	ldr	x2, [sp, #32]
    7970:	ldr	w1, [sp, #3772]
    7974:	ldr	x0, [sp, #40]
    7978:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    797c:	mov	w1, w0
    7980:	add	x0, sp, #0x3c
    7984:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7988:	and	w0, w0, #0xff
    798c:	eor	w0, w0, #0x1
    7990:	and	w0, w0, #0xff
    7994:	cmp	w0, #0x0
    7998:	b.eq	79a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2a34>  // b.none
    799c:	mov	w0, #0x0                   	// #0
    79a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    79a4:	mov	w2, #0x5                   	// #5
    79a8:	mov	w1, #0x5                   	// #5
    79ac:	ldr	w0, [sp, #52]
    79b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    79b4:	str	w0, [sp, #3772]
    79b8:	ldr	x3, [sp, #24]
    79bc:	ldr	x2, [sp, #32]
    79c0:	ldr	w1, [sp, #3772]
    79c4:	ldr	x0, [sp, #40]
    79c8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    79cc:	mov	w1, w0
    79d0:	add	x0, sp, #0x3c
    79d4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    79d8:	and	w0, w0, #0xff
    79dc:	eor	w0, w0, #0x1
    79e0:	and	w0, w0, #0xff
    79e4:	cmp	w0, #0x0
    79e8:	b.eq	79f4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2a84>  // b.none
    79ec:	mov	w0, #0x0                   	// #0
    79f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    79f4:	mov	w2, #0x5                   	// #5
    79f8:	mov	w1, #0x10                  	// #16
    79fc:	ldr	w0, [sp, #52]
    7a00:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7a04:	str	w0, [sp, #3772]
    7a08:	ldr	x3, [sp, #24]
    7a0c:	ldr	x2, [sp, #32]
    7a10:	ldr	w1, [sp, #3772]
    7a14:	ldr	x0, [sp, #40]
    7a18:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7a1c:	mov	w1, w0
    7a20:	add	x0, sp, #0x3c
    7a24:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7a28:	and	w0, w0, #0xff
    7a2c:	eor	w0, w0, #0x1
    7a30:	and	w0, w0, #0xff
    7a34:	cmp	w0, #0x0
    7a38:	b.eq	7a44 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2ad4>  // b.none
    7a3c:	mov	w0, #0x0                   	// #0
    7a40:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7a44:	ldr	w0, [sp, #60]
    7a48:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7a4c:	mov	w2, #0x5                   	// #5
    7a50:	mov	w1, #0x0                   	// #0
    7a54:	ldr	w0, [sp, #52]
    7a58:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7a5c:	str	w0, [sp, #3772]
    7a60:	ldr	x3, [sp, #24]
    7a64:	ldr	x2, [sp, #32]
    7a68:	ldr	w1, [sp, #3772]
    7a6c:	ldr	x0, [sp, #40]
    7a70:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7a74:	mov	w1, w0
    7a78:	add	x0, sp, #0x3c
    7a7c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7a80:	and	w0, w0, #0xff
    7a84:	eor	w0, w0, #0x1
    7a88:	and	w0, w0, #0xff
    7a8c:	cmp	w0, #0x0
    7a90:	b.eq	7a9c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2b2c>  // b.none
    7a94:	mov	w0, #0x0                   	// #0
    7a98:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7a9c:	mov	w2, #0x5                   	// #5
    7aa0:	mov	w1, #0x0                   	// #0
    7aa4:	ldr	w0, [sp, #52]
    7aa8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7aac:	str	w0, [sp, #3772]
    7ab0:	ldr	x3, [sp, #24]
    7ab4:	ldr	x2, [sp, #32]
    7ab8:	ldr	w1, [sp, #3772]
    7abc:	ldr	x0, [sp, #40]
    7ac0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7ac4:	mov	w1, w0
    7ac8:	add	x0, sp, #0x3c
    7acc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7ad0:	and	w0, w0, #0xff
    7ad4:	eor	w0, w0, #0x1
    7ad8:	and	w0, w0, #0xff
    7adc:	cmp	w0, #0x0
    7ae0:	b.eq	7aec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2b7c>  // b.none
    7ae4:	mov	w0, #0x0                   	// #0
    7ae8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7aec:	mov	w2, #0x5                   	// #5
    7af0:	mov	w1, #0x5                   	// #5
    7af4:	ldr	w0, [sp, #52]
    7af8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7afc:	str	w0, [sp, #3772]
    7b00:	ldr	x3, [sp, #24]
    7b04:	ldr	x2, [sp, #32]
    7b08:	ldr	w1, [sp, #3772]
    7b0c:	ldr	x0, [sp, #40]
    7b10:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7b14:	mov	w1, w0
    7b18:	add	x0, sp, #0x3c
    7b1c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7b20:	and	w0, w0, #0xff
    7b24:	eor	w0, w0, #0x1
    7b28:	and	w0, w0, #0xff
    7b2c:	cmp	w0, #0x0
    7b30:	b.eq	7b3c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2bcc>  // b.none
    7b34:	mov	w0, #0x0                   	// #0
    7b38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7b3c:	mov	w2, #0x3                   	// #3
    7b40:	mov	w1, #0x10                  	// #16
    7b44:	ldr	w0, [sp, #52]
    7b48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7b4c:	str	w0, [sp, #3772]
    7b50:	ldr	x3, [sp, #24]
    7b54:	ldr	x2, [sp, #32]
    7b58:	ldr	w1, [sp, #3772]
    7b5c:	ldr	x0, [sp, #40]
    7b60:	bl	1790 <_ZL19DecodeVecShiftR8ImmRN4llvm6MCInstEjmPKv>
    7b64:	mov	w1, w0
    7b68:	add	x0, sp, #0x3c
    7b6c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7b70:	and	w0, w0, #0xff
    7b74:	eor	w0, w0, #0x1
    7b78:	and	w0, w0, #0xff
    7b7c:	cmp	w0, #0x0
    7b80:	b.eq	7b8c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2c1c>  // b.none
    7b84:	mov	w0, #0x0                   	// #0
    7b88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7b8c:	ldr	w0, [sp, #60]
    7b90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7b94:	mov	w2, #0x5                   	// #5
    7b98:	mov	w1, #0x0                   	// #0
    7b9c:	ldr	w0, [sp, #52]
    7ba0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7ba4:	str	w0, [sp, #3772]
    7ba8:	ldr	x3, [sp, #24]
    7bac:	ldr	x2, [sp, #32]
    7bb0:	ldr	w1, [sp, #3772]
    7bb4:	ldr	x0, [sp, #40]
    7bb8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7bbc:	mov	w1, w0
    7bc0:	add	x0, sp, #0x3c
    7bc4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7bc8:	and	w0, w0, #0xff
    7bcc:	eor	w0, w0, #0x1
    7bd0:	and	w0, w0, #0xff
    7bd4:	cmp	w0, #0x0
    7bd8:	b.eq	7be4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2c74>  // b.none
    7bdc:	mov	w0, #0x0                   	// #0
    7be0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7be4:	mov	w2, #0x5                   	// #5
    7be8:	mov	w1, #0x0                   	// #0
    7bec:	ldr	w0, [sp, #52]
    7bf0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7bf4:	str	w0, [sp, #3772]
    7bf8:	ldr	x3, [sp, #24]
    7bfc:	ldr	x2, [sp, #32]
    7c00:	ldr	w1, [sp, #3772]
    7c04:	ldr	x0, [sp, #40]
    7c08:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7c0c:	mov	w1, w0
    7c10:	add	x0, sp, #0x3c
    7c14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7c18:	and	w0, w0, #0xff
    7c1c:	eor	w0, w0, #0x1
    7c20:	and	w0, w0, #0xff
    7c24:	cmp	w0, #0x0
    7c28:	b.eq	7c34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2cc4>  // b.none
    7c2c:	mov	w0, #0x0                   	// #0
    7c30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7c34:	mov	w2, #0x5                   	// #5
    7c38:	mov	w1, #0x5                   	// #5
    7c3c:	ldr	w0, [sp, #52]
    7c40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7c44:	str	w0, [sp, #3772]
    7c48:	ldr	x3, [sp, #24]
    7c4c:	ldr	x2, [sp, #32]
    7c50:	ldr	w1, [sp, #3772]
    7c54:	ldr	x0, [sp, #40]
    7c58:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7c5c:	mov	w1, w0
    7c60:	add	x0, sp, #0x3c
    7c64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7c68:	and	w0, w0, #0xff
    7c6c:	eor	w0, w0, #0x1
    7c70:	and	w0, w0, #0xff
    7c74:	cmp	w0, #0x0
    7c78:	b.eq	7c84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2d14>  // b.none
    7c7c:	mov	w0, #0x0                   	// #0
    7c80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7c84:	mov	w2, #0x4                   	// #4
    7c88:	mov	w1, #0x10                  	// #16
    7c8c:	ldr	w0, [sp, #52]
    7c90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7c94:	str	w0, [sp, #3772]
    7c98:	ldr	x3, [sp, #24]
    7c9c:	ldr	x2, [sp, #32]
    7ca0:	ldr	w1, [sp, #3772]
    7ca4:	ldr	x0, [sp, #40]
    7ca8:	bl	1728 <_ZL20DecodeVecShiftR16ImmRN4llvm6MCInstEjmPKv>
    7cac:	mov	w1, w0
    7cb0:	add	x0, sp, #0x3c
    7cb4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7cb8:	and	w0, w0, #0xff
    7cbc:	eor	w0, w0, #0x1
    7cc0:	and	w0, w0, #0xff
    7cc4:	cmp	w0, #0x0
    7cc8:	b.eq	7cd4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2d64>  // b.none
    7ccc:	mov	w0, #0x0                   	// #0
    7cd0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7cd4:	ldr	w0, [sp, #60]
    7cd8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7cdc:	mov	w2, #0x5                   	// #5
    7ce0:	mov	w1, #0x0                   	// #0
    7ce4:	ldr	w0, [sp, #52]
    7ce8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7cec:	str	w0, [sp, #3772]
    7cf0:	ldr	x3, [sp, #24]
    7cf4:	ldr	x2, [sp, #32]
    7cf8:	ldr	w1, [sp, #3772]
    7cfc:	ldr	x0, [sp, #40]
    7d00:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7d04:	mov	w1, w0
    7d08:	add	x0, sp, #0x3c
    7d0c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7d10:	and	w0, w0, #0xff
    7d14:	eor	w0, w0, #0x1
    7d18:	and	w0, w0, #0xff
    7d1c:	cmp	w0, #0x0
    7d20:	b.eq	7d2c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2dbc>  // b.none
    7d24:	mov	w0, #0x0                   	// #0
    7d28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7d2c:	mov	w2, #0x5                   	// #5
    7d30:	mov	w1, #0x0                   	// #0
    7d34:	ldr	w0, [sp, #52]
    7d38:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7d3c:	str	w0, [sp, #3772]
    7d40:	ldr	x3, [sp, #24]
    7d44:	ldr	x2, [sp, #32]
    7d48:	ldr	w1, [sp, #3772]
    7d4c:	ldr	x0, [sp, #40]
    7d50:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7d54:	mov	w1, w0
    7d58:	add	x0, sp, #0x3c
    7d5c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7d60:	and	w0, w0, #0xff
    7d64:	eor	w0, w0, #0x1
    7d68:	and	w0, w0, #0xff
    7d6c:	cmp	w0, #0x0
    7d70:	b.eq	7d7c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2e0c>  // b.none
    7d74:	mov	w0, #0x0                   	// #0
    7d78:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7d7c:	mov	w2, #0x5                   	// #5
    7d80:	mov	w1, #0x5                   	// #5
    7d84:	ldr	w0, [sp, #52]
    7d88:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7d8c:	str	w0, [sp, #3772]
    7d90:	ldr	x3, [sp, #24]
    7d94:	ldr	x2, [sp, #32]
    7d98:	ldr	w1, [sp, #3772]
    7d9c:	ldr	x0, [sp, #40]
    7da0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7da4:	mov	w1, w0
    7da8:	add	x0, sp, #0x3c
    7dac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7db0:	and	w0, w0, #0xff
    7db4:	eor	w0, w0, #0x1
    7db8:	and	w0, w0, #0xff
    7dbc:	cmp	w0, #0x0
    7dc0:	b.eq	7dcc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2e5c>  // b.none
    7dc4:	mov	w0, #0x0                   	// #0
    7dc8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7dcc:	mov	w2, #0x5                   	// #5
    7dd0:	mov	w1, #0x10                  	// #16
    7dd4:	ldr	w0, [sp, #52]
    7dd8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7ddc:	str	w0, [sp, #3772]
    7de0:	ldr	x3, [sp, #24]
    7de4:	ldr	x2, [sp, #32]
    7de8:	ldr	w1, [sp, #3772]
    7dec:	ldr	x0, [sp, #40]
    7df0:	bl	16c0 <_ZL20DecodeVecShiftR32ImmRN4llvm6MCInstEjmPKv>
    7df4:	mov	w1, w0
    7df8:	add	x0, sp, #0x3c
    7dfc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7e00:	and	w0, w0, #0xff
    7e04:	eor	w0, w0, #0x1
    7e08:	and	w0, w0, #0xff
    7e0c:	cmp	w0, #0x0
    7e10:	b.eq	7e1c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2eac>  // b.none
    7e14:	mov	w0, #0x0                   	// #0
    7e18:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7e1c:	ldr	w0, [sp, #60]
    7e20:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7e24:	mov	w2, #0x5                   	// #5
    7e28:	mov	w1, #0x0                   	// #0
    7e2c:	ldr	w0, [sp, #52]
    7e30:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7e34:	str	w0, [sp, #3772]
    7e38:	ldr	x3, [sp, #24]
    7e3c:	ldr	x2, [sp, #32]
    7e40:	ldr	w1, [sp, #3772]
    7e44:	ldr	x0, [sp, #40]
    7e48:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7e4c:	mov	w1, w0
    7e50:	add	x0, sp, #0x3c
    7e54:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7e58:	and	w0, w0, #0xff
    7e5c:	eor	w0, w0, #0x1
    7e60:	and	w0, w0, #0xff
    7e64:	cmp	w0, #0x0
    7e68:	b.eq	7e74 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2f04>  // b.none
    7e6c:	mov	w0, #0x0                   	// #0
    7e70:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7e74:	mov	w2, #0x5                   	// #5
    7e78:	mov	w1, #0x0                   	// #0
    7e7c:	ldr	w0, [sp, #52]
    7e80:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7e84:	str	w0, [sp, #3772]
    7e88:	ldr	x3, [sp, #24]
    7e8c:	ldr	x2, [sp, #32]
    7e90:	ldr	w1, [sp, #3772]
    7e94:	ldr	x0, [sp, #40]
    7e98:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7e9c:	mov	w1, w0
    7ea0:	add	x0, sp, #0x3c
    7ea4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7ea8:	and	w0, w0, #0xff
    7eac:	eor	w0, w0, #0x1
    7eb0:	and	w0, w0, #0xff
    7eb4:	cmp	w0, #0x0
    7eb8:	b.eq	7ec4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2f54>  // b.none
    7ebc:	mov	w0, #0x0                   	// #0
    7ec0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7ec4:	mov	w2, #0x5                   	// #5
    7ec8:	mov	w1, #0x5                   	// #5
    7ecc:	ldr	w0, [sp, #52]
    7ed0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7ed4:	str	w0, [sp, #3772]
    7ed8:	ldr	x3, [sp, #24]
    7edc:	ldr	x2, [sp, #32]
    7ee0:	ldr	w1, [sp, #3772]
    7ee4:	ldr	x0, [sp, #40]
    7ee8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7eec:	mov	w1, w0
    7ef0:	add	x0, sp, #0x3c
    7ef4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7ef8:	and	w0, w0, #0xff
    7efc:	eor	w0, w0, #0x1
    7f00:	and	w0, w0, #0xff
    7f04:	cmp	w0, #0x0
    7f08:	b.eq	7f14 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2fa4>  // b.none
    7f0c:	mov	w0, #0x0                   	// #0
    7f10:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7f14:	str	wzr, [sp, #3772]
    7f18:	mov	w2, #0x5                   	// #5
    7f1c:	mov	w1, #0x10                  	// #16
    7f20:	ldr	w0, [sp, #52]
    7f24:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7f28:	mov	w1, w0
    7f2c:	ldr	w0, [sp, #3772]
    7f30:	orr	w0, w0, w1
    7f34:	str	w0, [sp, #3772]
    7f38:	mov	w2, #0x1                   	// #1
    7f3c:	mov	w1, #0x16                  	// #22
    7f40:	ldr	w0, [sp, #52]
    7f44:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7f48:	lsl	w0, w0, #5
    7f4c:	ldr	w1, [sp, #3772]
    7f50:	orr	w0, w1, w0
    7f54:	str	w0, [sp, #3772]
    7f58:	ldr	x3, [sp, #24]
    7f5c:	ldr	x2, [sp, #32]
    7f60:	ldr	w1, [sp, #3772]
    7f64:	ldr	x0, [sp, #40]
    7f68:	bl	1658 <_ZL20DecodeVecShiftR64ImmRN4llvm6MCInstEjmPKv>
    7f6c:	mov	w1, w0
    7f70:	add	x0, sp, #0x3c
    7f74:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7f78:	and	w0, w0, #0xff
    7f7c:	eor	w0, w0, #0x1
    7f80:	and	w0, w0, #0xff
    7f84:	cmp	w0, #0x0
    7f88:	b.eq	7f94 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3024>  // b.none
    7f8c:	mov	w0, #0x0                   	// #0
    7f90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7f94:	ldr	w0, [sp, #60]
    7f98:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7f9c:	mov	w2, #0x5                   	// #5
    7fa0:	mov	w1, #0x0                   	// #0
    7fa4:	ldr	w0, [sp, #52]
    7fa8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7fac:	str	w0, [sp, #3772]
    7fb0:	ldr	x3, [sp, #24]
    7fb4:	ldr	x2, [sp, #32]
    7fb8:	ldr	w1, [sp, #3772]
    7fbc:	ldr	x0, [sp, #40]
    7fc0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    7fc4:	mov	w1, w0
    7fc8:	add	x0, sp, #0x3c
    7fcc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    7fd0:	and	w0, w0, #0xff
    7fd4:	eor	w0, w0, #0x1
    7fd8:	and	w0, w0, #0xff
    7fdc:	cmp	w0, #0x0
    7fe0:	b.eq	7fec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x307c>  // b.none
    7fe4:	mov	w0, #0x0                   	// #0
    7fe8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    7fec:	mov	w2, #0x5                   	// #5
    7ff0:	mov	w1, #0x0                   	// #0
    7ff4:	ldr	w0, [sp, #52]
    7ff8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    7ffc:	str	w0, [sp, #3772]
    8000:	ldr	x3, [sp, #24]
    8004:	ldr	x2, [sp, #32]
    8008:	ldr	w1, [sp, #3772]
    800c:	ldr	x0, [sp, #40]
    8010:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    8014:	mov	w1, w0
    8018:	add	x0, sp, #0x3c
    801c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8020:	and	w0, w0, #0xff
    8024:	eor	w0, w0, #0x1
    8028:	and	w0, w0, #0xff
    802c:	cmp	w0, #0x0
    8030:	b.eq	803c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x30cc>  // b.none
    8034:	mov	w0, #0x0                   	// #0
    8038:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    803c:	mov	w2, #0x5                   	// #5
    8040:	mov	w1, #0x10                  	// #16
    8044:	ldr	w0, [sp, #52]
    8048:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    804c:	str	w0, [sp, #3772]
    8050:	ldr	x3, [sp, #24]
    8054:	ldr	x2, [sp, #32]
    8058:	ldr	w1, [sp, #3772]
    805c:	ldr	x0, [sp, #40]
    8060:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    8064:	mov	w1, w0
    8068:	add	x0, sp, #0x3c
    806c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8070:	and	w0, w0, #0xff
    8074:	eor	w0, w0, #0x1
    8078:	and	w0, w0, #0xff
    807c:	cmp	w0, #0x0
    8080:	b.eq	808c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x311c>  // b.none
    8084:	mov	w0, #0x0                   	// #0
    8088:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    808c:	mov	w2, #0x5                   	// #5
    8090:	mov	w1, #0x5                   	// #5
    8094:	ldr	w0, [sp, #52]
    8098:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    809c:	str	w0, [sp, #3772]
    80a0:	ldr	x3, [sp, #24]
    80a4:	ldr	x2, [sp, #32]
    80a8:	ldr	w1, [sp, #3772]
    80ac:	ldr	x0, [sp, #40]
    80b0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    80b4:	mov	w1, w0
    80b8:	add	x0, sp, #0x3c
    80bc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    80c0:	and	w0, w0, #0xff
    80c4:	eor	w0, w0, #0x1
    80c8:	and	w0, w0, #0xff
    80cc:	cmp	w0, #0x0
    80d0:	b.eq	80dc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x316c>  // b.none
    80d4:	mov	w0, #0x0                   	// #0
    80d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    80dc:	ldr	w0, [sp, #60]
    80e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    80e4:	mov	w2, #0x5                   	// #5
    80e8:	mov	w1, #0x0                   	// #0
    80ec:	ldr	w0, [sp, #52]
    80f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    80f4:	str	w0, [sp, #3772]
    80f8:	ldr	x3, [sp, #24]
    80fc:	ldr	x2, [sp, #32]
    8100:	ldr	w1, [sp, #3772]
    8104:	ldr	x0, [sp, #40]
    8108:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    810c:	mov	w1, w0
    8110:	add	x0, sp, #0x3c
    8114:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8118:	and	w0, w0, #0xff
    811c:	eor	w0, w0, #0x1
    8120:	and	w0, w0, #0xff
    8124:	cmp	w0, #0x0
    8128:	b.eq	8134 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x31c4>  // b.none
    812c:	mov	w0, #0x0                   	// #0
    8130:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8134:	mov	w2, #0x5                   	// #5
    8138:	mov	w1, #0x5                   	// #5
    813c:	ldr	w0, [sp, #52]
    8140:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8144:	str	w0, [sp, #3772]
    8148:	ldr	x3, [sp, #24]
    814c:	ldr	x2, [sp, #32]
    8150:	ldr	w1, [sp, #3772]
    8154:	ldr	x0, [sp, #40]
    8158:	bl	c48 <_ZL26DecodeGPR32spRegisterClassRN4llvm6MCInstEjmPKv>
    815c:	mov	w1, w0
    8160:	add	x0, sp, #0x3c
    8164:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8168:	and	w0, w0, #0xff
    816c:	eor	w0, w0, #0x1
    8170:	and	w0, w0, #0xff
    8174:	cmp	w0, #0x0
    8178:	b.eq	8184 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3214>  // b.none
    817c:	mov	w0, #0x0                   	// #0
    8180:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8184:	ldr	w0, [sp, #60]
    8188:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    818c:	mov	w2, #0x5                   	// #5
    8190:	mov	w1, #0x0                   	// #0
    8194:	ldr	w0, [sp, #52]
    8198:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    819c:	str	w0, [sp, #3772]
    81a0:	ldr	x3, [sp, #24]
    81a4:	ldr	x2, [sp, #32]
    81a8:	ldr	w1, [sp, #3772]
    81ac:	ldr	x0, [sp, #40]
    81b0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    81b4:	mov	w1, w0
    81b8:	add	x0, sp, #0x3c
    81bc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    81c0:	and	w0, w0, #0xff
    81c4:	eor	w0, w0, #0x1
    81c8:	and	w0, w0, #0xff
    81cc:	cmp	w0, #0x0
    81d0:	b.eq	81dc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x326c>  // b.none
    81d4:	mov	w0, #0x0                   	// #0
    81d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    81dc:	mov	w2, #0x5                   	// #5
    81e0:	mov	w1, #0x0                   	// #0
    81e4:	ldr	w0, [sp, #52]
    81e8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    81ec:	str	w0, [sp, #3772]
    81f0:	ldr	x3, [sp, #24]
    81f4:	ldr	x2, [sp, #32]
    81f8:	ldr	w1, [sp, #3772]
    81fc:	ldr	x0, [sp, #40]
    8200:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    8204:	mov	w1, w0
    8208:	add	x0, sp, #0x3c
    820c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8210:	and	w0, w0, #0xff
    8214:	eor	w0, w0, #0x1
    8218:	and	w0, w0, #0xff
    821c:	cmp	w0, #0x0
    8220:	b.eq	822c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x32bc>  // b.none
    8224:	mov	w0, #0x0                   	// #0
    8228:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    822c:	mov	w2, #0x5                   	// #5
    8230:	mov	w1, #0x5                   	// #5
    8234:	ldr	w0, [sp, #52]
    8238:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    823c:	str	w0, [sp, #3772]
    8240:	ldr	x3, [sp, #24]
    8244:	ldr	x2, [sp, #32]
    8248:	ldr	w1, [sp, #3772]
    824c:	ldr	x0, [sp, #40]
    8250:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    8254:	mov	w1, w0
    8258:	add	x0, sp, #0x3c
    825c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8260:	and	w0, w0, #0xff
    8264:	eor	w0, w0, #0x1
    8268:	and	w0, w0, #0xff
    826c:	cmp	w0, #0x0
    8270:	b.eq	827c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x330c>  // b.none
    8274:	mov	w0, #0x0                   	// #0
    8278:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    827c:	ldr	w0, [sp, #60]
    8280:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8284:	mov	w2, #0x5                   	// #5
    8288:	mov	w1, #0x0                   	// #0
    828c:	ldr	w0, [sp, #52]
    8290:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8294:	str	w0, [sp, #3772]
    8298:	ldr	x3, [sp, #24]
    829c:	ldr	x2, [sp, #32]
    82a0:	ldr	w1, [sp, #3772]
    82a4:	ldr	x0, [sp, #40]
    82a8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    82ac:	mov	w1, w0
    82b0:	add	x0, sp, #0x3c
    82b4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    82b8:	and	w0, w0, #0xff
    82bc:	eor	w0, w0, #0x1
    82c0:	and	w0, w0, #0xff
    82c4:	cmp	w0, #0x0
    82c8:	b.eq	82d4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3364>  // b.none
    82cc:	mov	w0, #0x0                   	// #0
    82d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    82d4:	mov	w2, #0x5                   	// #5
    82d8:	mov	w1, #0x0                   	// #0
    82dc:	ldr	w0, [sp, #52]
    82e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    82e4:	str	w0, [sp, #3772]
    82e8:	ldr	x3, [sp, #24]
    82ec:	ldr	x2, [sp, #32]
    82f0:	ldr	w1, [sp, #3772]
    82f4:	ldr	x0, [sp, #40]
    82f8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    82fc:	mov	w1, w0
    8300:	add	x0, sp, #0x3c
    8304:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8308:	and	w0, w0, #0xff
    830c:	eor	w0, w0, #0x1
    8310:	and	w0, w0, #0xff
    8314:	cmp	w0, #0x0
    8318:	b.eq	8324 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x33b4>  // b.none
    831c:	mov	w0, #0x0                   	// #0
    8320:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8324:	mov	w2, #0x5                   	// #5
    8328:	mov	w1, #0x5                   	// #5
    832c:	ldr	w0, [sp, #52]
    8330:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8334:	str	w0, [sp, #3772]
    8338:	ldr	x3, [sp, #24]
    833c:	ldr	x2, [sp, #32]
    8340:	ldr	w1, [sp, #3772]
    8344:	ldr	x0, [sp, #40]
    8348:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
    834c:	mov	w1, w0
    8350:	add	x0, sp, #0x3c
    8354:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8358:	and	w0, w0, #0xff
    835c:	eor	w0, w0, #0x1
    8360:	and	w0, w0, #0xff
    8364:	cmp	w0, #0x0
    8368:	b.eq	8374 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3404>  // b.none
    836c:	mov	w0, #0x0                   	// #0
    8370:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8374:	ldr	w0, [sp, #60]
    8378:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    837c:	mov	w2, #0x5                   	// #5
    8380:	mov	w1, #0x0                   	// #0
    8384:	ldr	w0, [sp, #52]
    8388:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    838c:	str	w0, [sp, #3772]
    8390:	ldr	x3, [sp, #24]
    8394:	ldr	x2, [sp, #32]
    8398:	ldr	w1, [sp, #3772]
    839c:	ldr	x0, [sp, #40]
    83a0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    83a4:	mov	w1, w0
    83a8:	add	x0, sp, #0x3c
    83ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    83b0:	and	w0, w0, #0xff
    83b4:	eor	w0, w0, #0x1
    83b8:	and	w0, w0, #0xff
    83bc:	cmp	w0, #0x0
    83c0:	b.eq	83cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x345c>  // b.none
    83c4:	mov	w0, #0x0                   	// #0
    83c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    83cc:	mov	w2, #0x5                   	// #5
    83d0:	mov	w1, #0x5                   	// #5
    83d4:	ldr	w0, [sp, #52]
    83d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    83dc:	str	w0, [sp, #3772]
    83e0:	ldr	x3, [sp, #24]
    83e4:	ldr	x2, [sp, #32]
    83e8:	ldr	w1, [sp, #3772]
    83ec:	ldr	x0, [sp, #40]
    83f0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    83f4:	mov	w1, w0
    83f8:	add	x0, sp, #0x3c
    83fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8400:	and	w0, w0, #0xff
    8404:	eor	w0, w0, #0x1
    8408:	and	w0, w0, #0xff
    840c:	cmp	w0, #0x0
    8410:	b.eq	841c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x34ac>  // b.none
    8414:	mov	w0, #0x0                   	// #0
    8418:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    841c:	ldr	w0, [sp, #60]
    8420:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8424:	mov	w2, #0x5                   	// #5
    8428:	mov	w1, #0x0                   	// #0
    842c:	ldr	w0, [sp, #52]
    8430:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8434:	str	w0, [sp, #3772]
    8438:	ldr	x3, [sp, #24]
    843c:	ldr	x2, [sp, #32]
    8440:	ldr	w1, [sp, #3772]
    8444:	ldr	x0, [sp, #40]
    8448:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    844c:	mov	w1, w0
    8450:	add	x0, sp, #0x3c
    8454:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8458:	and	w0, w0, #0xff
    845c:	eor	w0, w0, #0x1
    8460:	and	w0, w0, #0xff
    8464:	cmp	w0, #0x0
    8468:	b.eq	8474 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3504>  // b.none
    846c:	mov	w0, #0x0                   	// #0
    8470:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8474:	mov	w2, #0x5                   	// #5
    8478:	mov	w1, #0x0                   	// #0
    847c:	ldr	w0, [sp, #52]
    8480:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8484:	str	w0, [sp, #3772]
    8488:	ldr	x3, [sp, #24]
    848c:	ldr	x2, [sp, #32]
    8490:	ldr	w1, [sp, #3772]
    8494:	ldr	x0, [sp, #40]
    8498:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    849c:	mov	w1, w0
    84a0:	add	x0, sp, #0x3c
    84a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    84a8:	and	w0, w0, #0xff
    84ac:	eor	w0, w0, #0x1
    84b0:	and	w0, w0, #0xff
    84b4:	cmp	w0, #0x0
    84b8:	b.eq	84c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3554>  // b.none
    84bc:	mov	w0, #0x0                   	// #0
    84c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    84c4:	mov	w2, #0x5                   	// #5
    84c8:	mov	w1, #0x5                   	// #5
    84cc:	ldr	w0, [sp, #52]
    84d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    84d4:	str	w0, [sp, #3772]
    84d8:	ldr	x3, [sp, #24]
    84dc:	ldr	x2, [sp, #32]
    84e0:	ldr	w1, [sp, #3772]
    84e4:	ldr	x0, [sp, #40]
    84e8:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
    84ec:	mov	w1, w0
    84f0:	add	x0, sp, #0x3c
    84f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    84f8:	and	w0, w0, #0xff
    84fc:	eor	w0, w0, #0x1
    8500:	and	w0, w0, #0xff
    8504:	cmp	w0, #0x0
    8508:	b.eq	8514 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x35a4>  // b.none
    850c:	mov	w0, #0x0                   	// #0
    8510:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8514:	ldr	w0, [sp, #60]
    8518:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    851c:	mov	w2, #0x5                   	// #5
    8520:	mov	w1, #0x0                   	// #0
    8524:	ldr	w0, [sp, #52]
    8528:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    852c:	str	w0, [sp, #3772]
    8530:	ldr	x3, [sp, #24]
    8534:	ldr	x2, [sp, #32]
    8538:	ldr	w1, [sp, #3772]
    853c:	ldr	x0, [sp, #40]
    8540:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    8544:	mov	w1, w0
    8548:	add	x0, sp, #0x3c
    854c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8550:	and	w0, w0, #0xff
    8554:	eor	w0, w0, #0x1
    8558:	and	w0, w0, #0xff
    855c:	cmp	w0, #0x0
    8560:	b.eq	856c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x35fc>  // b.none
    8564:	mov	w0, #0x0                   	// #0
    8568:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    856c:	mov	w2, #0x5                   	// #5
    8570:	mov	w1, #0x0                   	// #0
    8574:	ldr	w0, [sp, #52]
    8578:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    857c:	str	w0, [sp, #3772]
    8580:	ldr	x3, [sp, #24]
    8584:	ldr	x2, [sp, #32]
    8588:	ldr	w1, [sp, #3772]
    858c:	ldr	x0, [sp, #40]
    8590:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    8594:	mov	w1, w0
    8598:	add	x0, sp, #0x3c
    859c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    85a0:	and	w0, w0, #0xff
    85a4:	eor	w0, w0, #0x1
    85a8:	and	w0, w0, #0xff
    85ac:	cmp	w0, #0x0
    85b0:	b.eq	85bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x364c>  // b.none
    85b4:	mov	w0, #0x0                   	// #0
    85b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    85bc:	mov	w2, #0x5                   	// #5
    85c0:	mov	w1, #0x5                   	// #5
    85c4:	ldr	w0, [sp, #52]
    85c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    85cc:	str	w0, [sp, #3772]
    85d0:	ldr	x3, [sp, #24]
    85d4:	ldr	x2, [sp, #32]
    85d8:	ldr	w1, [sp, #3772]
    85dc:	ldr	x0, [sp, #40]
    85e0:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
    85e4:	mov	w1, w0
    85e8:	add	x0, sp, #0x3c
    85ec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    85f0:	and	w0, w0, #0xff
    85f4:	eor	w0, w0, #0x1
    85f8:	and	w0, w0, #0xff
    85fc:	cmp	w0, #0x0
    8600:	b.eq	860c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x369c>  // b.none
    8604:	mov	w0, #0x0                   	// #0
    8608:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    860c:	ldr	w0, [sp, #60]
    8610:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8614:	mov	w2, #0x5                   	// #5
    8618:	mov	w1, #0x0                   	// #0
    861c:	ldr	w0, [sp, #52]
    8620:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8624:	str	w0, [sp, #3772]
    8628:	ldr	x3, [sp, #24]
    862c:	ldr	x2, [sp, #32]
    8630:	ldr	w1, [sp, #3772]
    8634:	ldr	x0, [sp, #40]
    8638:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    863c:	mov	w1, w0
    8640:	add	x0, sp, #0x3c
    8644:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8648:	and	w0, w0, #0xff
    864c:	eor	w0, w0, #0x1
    8650:	and	w0, w0, #0xff
    8654:	cmp	w0, #0x0
    8658:	b.eq	8664 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x36f4>  // b.none
    865c:	mov	w0, #0x0                   	// #0
    8660:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8664:	mov	w2, #0x5                   	// #5
    8668:	mov	w1, #0x5                   	// #5
    866c:	ldr	w0, [sp, #52]
    8670:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8674:	str	w0, [sp, #3772]
    8678:	ldr	x3, [sp, #24]
    867c:	ldr	x2, [sp, #32]
    8680:	ldr	w1, [sp, #3772]
    8684:	ldr	x0, [sp, #40]
    8688:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    868c:	mov	w1, w0
    8690:	add	x0, sp, #0x3c
    8694:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8698:	and	w0, w0, #0xff
    869c:	eor	w0, w0, #0x1
    86a0:	and	w0, w0, #0xff
    86a4:	cmp	w0, #0x0
    86a8:	b.eq	86b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3744>  // b.none
    86ac:	mov	w0, #0x0                   	// #0
    86b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    86b4:	ldr	w0, [sp, #60]
    86b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    86bc:	mov	w2, #0x5                   	// #5
    86c0:	mov	w1, #0x0                   	// #0
    86c4:	ldr	w0, [sp, #52]
    86c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    86cc:	str	w0, [sp, #3772]
    86d0:	ldr	x3, [sp, #24]
    86d4:	ldr	x2, [sp, #32]
    86d8:	ldr	w1, [sp, #3772]
    86dc:	ldr	x0, [sp, #40]
    86e0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    86e4:	mov	w1, w0
    86e8:	add	x0, sp, #0x3c
    86ec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    86f0:	and	w0, w0, #0xff
    86f4:	eor	w0, w0, #0x1
    86f8:	and	w0, w0, #0xff
    86fc:	cmp	w0, #0x0
    8700:	b.eq	870c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x379c>  // b.none
    8704:	mov	w0, #0x0                   	// #0
    8708:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    870c:	mov	w2, #0x5                   	// #5
    8710:	mov	w1, #0x0                   	// #0
    8714:	ldr	w0, [sp, #52]
    8718:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    871c:	str	w0, [sp, #3772]
    8720:	ldr	x3, [sp, #24]
    8724:	ldr	x2, [sp, #32]
    8728:	ldr	w1, [sp, #3772]
    872c:	ldr	x0, [sp, #40]
    8730:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    8734:	mov	w1, w0
    8738:	add	x0, sp, #0x3c
    873c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8740:	and	w0, w0, #0xff
    8744:	eor	w0, w0, #0x1
    8748:	and	w0, w0, #0xff
    874c:	cmp	w0, #0x0
    8750:	b.eq	875c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x37ec>  // b.none
    8754:	mov	w0, #0x0                   	// #0
    8758:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    875c:	mov	w2, #0x5                   	// #5
    8760:	mov	w1, #0x5                   	// #5
    8764:	ldr	w0, [sp, #52]
    8768:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    876c:	str	w0, [sp, #3772]
    8770:	ldr	x3, [sp, #24]
    8774:	ldr	x2, [sp, #32]
    8778:	ldr	w1, [sp, #3772]
    877c:	ldr	x0, [sp, #40]
    8780:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    8784:	mov	w1, w0
    8788:	add	x0, sp, #0x3c
    878c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8790:	and	w0, w0, #0xff
    8794:	eor	w0, w0, #0x1
    8798:	and	w0, w0, #0xff
    879c:	cmp	w0, #0x0
    87a0:	b.eq	87ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x383c>  // b.none
    87a4:	mov	w0, #0x0                   	// #0
    87a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    87ac:	ldr	w0, [sp, #60]
    87b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    87b4:	mov	w2, #0x5                   	// #5
    87b8:	mov	w1, #0x0                   	// #0
    87bc:	ldr	w0, [sp, #52]
    87c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    87c4:	str	w0, [sp, #3772]
    87c8:	ldr	x3, [sp, #24]
    87cc:	ldr	x2, [sp, #32]
    87d0:	ldr	w1, [sp, #3772]
    87d4:	ldr	x0, [sp, #40]
    87d8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    87dc:	mov	w1, w0
    87e0:	add	x0, sp, #0x3c
    87e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    87e8:	and	w0, w0, #0xff
    87ec:	eor	w0, w0, #0x1
    87f0:	and	w0, w0, #0xff
    87f4:	cmp	w0, #0x0
    87f8:	b.eq	8804 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3894>  // b.none
    87fc:	mov	w0, #0x0                   	// #0
    8800:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8804:	mov	w2, #0x5                   	// #5
    8808:	mov	w1, #0x0                   	// #0
    880c:	ldr	w0, [sp, #52]
    8810:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8814:	str	w0, [sp, #3772]
    8818:	ldr	x3, [sp, #24]
    881c:	ldr	x2, [sp, #32]
    8820:	ldr	w1, [sp, #3772]
    8824:	ldr	x0, [sp, #40]
    8828:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    882c:	mov	w1, w0
    8830:	add	x0, sp, #0x3c
    8834:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8838:	and	w0, w0, #0xff
    883c:	eor	w0, w0, #0x1
    8840:	and	w0, w0, #0xff
    8844:	cmp	w0, #0x0
    8848:	b.eq	8854 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x38e4>  // b.none
    884c:	mov	w0, #0x0                   	// #0
    8850:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8854:	mov	w2, #0x5                   	// #5
    8858:	mov	w1, #0x5                   	// #5
    885c:	ldr	w0, [sp, #52]
    8860:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8864:	str	w0, [sp, #3772]
    8868:	ldr	x3, [sp, #24]
    886c:	ldr	x2, [sp, #32]
    8870:	ldr	w1, [sp, #3772]
    8874:	ldr	x0, [sp, #40]
    8878:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
    887c:	mov	w1, w0
    8880:	add	x0, sp, #0x3c
    8884:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8888:	and	w0, w0, #0xff
    888c:	eor	w0, w0, #0x1
    8890:	and	w0, w0, #0xff
    8894:	cmp	w0, #0x0
    8898:	b.eq	88a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3934>  // b.none
    889c:	mov	w0, #0x0                   	// #0
    88a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    88a4:	ldr	w0, [sp, #60]
    88a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    88ac:	mov	w2, #0x5                   	// #5
    88b0:	mov	w1, #0x0                   	// #0
    88b4:	ldr	w0, [sp, #52]
    88b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    88bc:	str	w0, [sp, #3772]
    88c0:	ldr	x3, [sp, #24]
    88c4:	ldr	x2, [sp, #32]
    88c8:	ldr	w1, [sp, #3772]
    88cc:	ldr	x0, [sp, #40]
    88d0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    88d4:	mov	w1, w0
    88d8:	add	x0, sp, #0x3c
    88dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    88e0:	and	w0, w0, #0xff
    88e4:	eor	w0, w0, #0x1
    88e8:	and	w0, w0, #0xff
    88ec:	cmp	w0, #0x0
    88f0:	b.eq	88fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x398c>  // b.none
    88f4:	mov	w0, #0x0                   	// #0
    88f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    88fc:	mov	w2, #0x5                   	// #5
    8900:	mov	w1, #0x5                   	// #5
    8904:	ldr	w0, [sp, #52]
    8908:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    890c:	str	w0, [sp, #3772]
    8910:	ldr	w0, [sp, #3772]
    8914:	ldr	x3, [sp, #24]
    8918:	ldr	x2, [sp, #32]
    891c:	mov	x1, x0
    8920:	ldr	x0, [sp, #40]
    8924:	bl	2aa9c <_Z10DecodeSImmILi5EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
    8928:	mov	w1, w0
    892c:	add	x0, sp, #0x3c
    8930:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8934:	and	w0, w0, #0xff
    8938:	eor	w0, w0, #0x1
    893c:	and	w0, w0, #0xff
    8940:	cmp	w0, #0x0
    8944:	b.eq	8950 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x39e0>  // b.none
    8948:	mov	w0, #0x0                   	// #0
    894c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8950:	mov	w2, #0x5                   	// #5
    8954:	mov	w1, #0x10                  	// #16
    8958:	ldr	w0, [sp, #52]
    895c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8960:	str	w0, [sp, #3772]
    8964:	ldr	w0, [sp, #3772]
    8968:	ldr	x3, [sp, #24]
    896c:	ldr	x2, [sp, #32]
    8970:	mov	x1, x0
    8974:	ldr	x0, [sp, #40]
    8978:	bl	2aa9c <_Z10DecodeSImmILi5EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
    897c:	mov	w1, w0
    8980:	add	x0, sp, #0x3c
    8984:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8988:	and	w0, w0, #0xff
    898c:	eor	w0, w0, #0x1
    8990:	and	w0, w0, #0xff
    8994:	cmp	w0, #0x0
    8998:	b.eq	89a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3a34>  // b.none
    899c:	mov	w0, #0x0                   	// #0
    89a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    89a4:	ldr	w0, [sp, #60]
    89a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    89ac:	mov	w2, #0x5                   	// #5
    89b0:	mov	w1, #0x0                   	// #0
    89b4:	ldr	w0, [sp, #52]
    89b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    89bc:	str	w0, [sp, #3772]
    89c0:	ldr	x3, [sp, #24]
    89c4:	ldr	x2, [sp, #32]
    89c8:	ldr	w1, [sp, #3772]
    89cc:	ldr	x0, [sp, #40]
    89d0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    89d4:	mov	w1, w0
    89d8:	add	x0, sp, #0x3c
    89dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    89e0:	and	w0, w0, #0xff
    89e4:	eor	w0, w0, #0x1
    89e8:	and	w0, w0, #0xff
    89ec:	cmp	w0, #0x0
    89f0:	b.eq	89fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3a8c>  // b.none
    89f4:	mov	w0, #0x0                   	// #0
    89f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    89fc:	mov	w2, #0x5                   	// #5
    8a00:	mov	w1, #0x5                   	// #5
    8a04:	ldr	w0, [sp, #52]
    8a08:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8a0c:	str	w0, [sp, #3772]
    8a10:	ldr	x3, [sp, #24]
    8a14:	ldr	x2, [sp, #32]
    8a18:	ldr	w1, [sp, #3772]
    8a1c:	ldr	x0, [sp, #40]
    8a20:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    8a24:	mov	w1, w0
    8a28:	add	x0, sp, #0x3c
    8a2c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8a30:	and	w0, w0, #0xff
    8a34:	eor	w0, w0, #0x1
    8a38:	and	w0, w0, #0xff
    8a3c:	cmp	w0, #0x0
    8a40:	b.eq	8a4c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3adc>  // b.none
    8a44:	mov	w0, #0x0                   	// #0
    8a48:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8a4c:	mov	w2, #0x5                   	// #5
    8a50:	mov	w1, #0x10                  	// #16
    8a54:	ldr	w0, [sp, #52]
    8a58:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8a5c:	str	w0, [sp, #3772]
    8a60:	ldr	w0, [sp, #3772]
    8a64:	ldr	x3, [sp, #24]
    8a68:	ldr	x2, [sp, #32]
    8a6c:	mov	x1, x0
    8a70:	ldr	x0, [sp, #40]
    8a74:	bl	2aa9c <_Z10DecodeSImmILi5EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
    8a78:	mov	w1, w0
    8a7c:	add	x0, sp, #0x3c
    8a80:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8a84:	and	w0, w0, #0xff
    8a88:	eor	w0, w0, #0x1
    8a8c:	and	w0, w0, #0xff
    8a90:	cmp	w0, #0x0
    8a94:	b.eq	8aa0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3b30>  // b.none
    8a98:	mov	w0, #0x0                   	// #0
    8a9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8aa0:	ldr	w0, [sp, #60]
    8aa4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8aa8:	mov	w2, #0x5                   	// #5
    8aac:	mov	w1, #0x0                   	// #0
    8ab0:	ldr	w0, [sp, #52]
    8ab4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8ab8:	str	w0, [sp, #3772]
    8abc:	ldr	x3, [sp, #24]
    8ac0:	ldr	x2, [sp, #32]
    8ac4:	ldr	w1, [sp, #3772]
    8ac8:	ldr	x0, [sp, #40]
    8acc:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    8ad0:	mov	w1, w0
    8ad4:	add	x0, sp, #0x3c
    8ad8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8adc:	and	w0, w0, #0xff
    8ae0:	eor	w0, w0, #0x1
    8ae4:	and	w0, w0, #0xff
    8ae8:	cmp	w0, #0x0
    8aec:	b.eq	8af8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3b88>  // b.none
    8af0:	mov	w0, #0x0                   	// #0
    8af4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8af8:	mov	w2, #0x5                   	// #5
    8afc:	mov	w1, #0x5                   	// #5
    8b00:	ldr	w0, [sp, #52]
    8b04:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8b08:	str	w0, [sp, #3772]
    8b0c:	ldr	w0, [sp, #3772]
    8b10:	ldr	x3, [sp, #24]
    8b14:	ldr	x2, [sp, #32]
    8b18:	mov	x1, x0
    8b1c:	ldr	x0, [sp, #40]
    8b20:	bl	2aa9c <_Z10DecodeSImmILi5EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
    8b24:	mov	w1, w0
    8b28:	add	x0, sp, #0x3c
    8b2c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8b30:	and	w0, w0, #0xff
    8b34:	eor	w0, w0, #0x1
    8b38:	and	w0, w0, #0xff
    8b3c:	cmp	w0, #0x0
    8b40:	b.eq	8b4c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3bdc>  // b.none
    8b44:	mov	w0, #0x0                   	// #0
    8b48:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8b4c:	mov	w2, #0x5                   	// #5
    8b50:	mov	w1, #0x10                  	// #16
    8b54:	ldr	w0, [sp, #52]
    8b58:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8b5c:	str	w0, [sp, #3772]
    8b60:	ldr	x3, [sp, #24]
    8b64:	ldr	x2, [sp, #32]
    8b68:	ldr	w1, [sp, #3772]
    8b6c:	ldr	x0, [sp, #40]
    8b70:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    8b74:	mov	w1, w0
    8b78:	add	x0, sp, #0x3c
    8b7c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8b80:	and	w0, w0, #0xff
    8b84:	eor	w0, w0, #0x1
    8b88:	and	w0, w0, #0xff
    8b8c:	cmp	w0, #0x0
    8b90:	b.eq	8b9c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3c2c>  // b.none
    8b94:	mov	w0, #0x0                   	// #0
    8b98:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8b9c:	ldr	w0, [sp, #60]
    8ba0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8ba4:	mov	w2, #0x5                   	// #5
    8ba8:	mov	w1, #0x0                   	// #0
    8bac:	ldr	w0, [sp, #52]
    8bb0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8bb4:	str	w0, [sp, #3772]
    8bb8:	ldr	x3, [sp, #24]
    8bbc:	ldr	x2, [sp, #32]
    8bc0:	ldr	w1, [sp, #3772]
    8bc4:	ldr	x0, [sp, #40]
    8bc8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    8bcc:	mov	w1, w0
    8bd0:	add	x0, sp, #0x3c
    8bd4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8bd8:	and	w0, w0, #0xff
    8bdc:	eor	w0, w0, #0x1
    8be0:	and	w0, w0, #0xff
    8be4:	cmp	w0, #0x0
    8be8:	b.eq	8bf4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3c84>  // b.none
    8bec:	mov	w0, #0x0                   	// #0
    8bf0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8bf4:	mov	w2, #0x5                   	// #5
    8bf8:	mov	w1, #0x5                   	// #5
    8bfc:	ldr	w0, [sp, #52]
    8c00:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8c04:	str	w0, [sp, #3772]
    8c08:	ldr	x3, [sp, #24]
    8c0c:	ldr	x2, [sp, #32]
    8c10:	ldr	w1, [sp, #3772]
    8c14:	ldr	x0, [sp, #40]
    8c18:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    8c1c:	mov	w1, w0
    8c20:	add	x0, sp, #0x3c
    8c24:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8c28:	and	w0, w0, #0xff
    8c2c:	eor	w0, w0, #0x1
    8c30:	and	w0, w0, #0xff
    8c34:	cmp	w0, #0x0
    8c38:	b.eq	8c44 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3cd4>  // b.none
    8c3c:	mov	w0, #0x0                   	// #0
    8c40:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8c44:	mov	w2, #0x5                   	// #5
    8c48:	mov	w1, #0x10                  	// #16
    8c4c:	ldr	w0, [sp, #52]
    8c50:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8c54:	str	w0, [sp, #3772]
    8c58:	ldr	x3, [sp, #24]
    8c5c:	ldr	x2, [sp, #32]
    8c60:	ldr	w1, [sp, #3772]
    8c64:	ldr	x0, [sp, #40]
    8c68:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    8c6c:	mov	w1, w0
    8c70:	add	x0, sp, #0x3c
    8c74:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8c78:	and	w0, w0, #0xff
    8c7c:	eor	w0, w0, #0x1
    8c80:	and	w0, w0, #0xff
    8c84:	cmp	w0, #0x0
    8c88:	b.eq	8c94 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3d24>  // b.none
    8c8c:	mov	w0, #0x0                   	// #0
    8c90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8c94:	ldr	w0, [sp, #60]
    8c98:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8c9c:	mov	w2, #0x5                   	// #5
    8ca0:	mov	w1, #0x0                   	// #0
    8ca4:	ldr	w0, [sp, #52]
    8ca8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8cac:	str	w0, [sp, #3772]
    8cb0:	ldr	x3, [sp, #24]
    8cb4:	ldr	x2, [sp, #32]
    8cb8:	ldr	w1, [sp, #3772]
    8cbc:	ldr	x0, [sp, #40]
    8cc0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    8cc4:	mov	w1, w0
    8cc8:	add	x0, sp, #0x3c
    8ccc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8cd0:	and	w0, w0, #0xff
    8cd4:	eor	w0, w0, #0x1
    8cd8:	and	w0, w0, #0xff
    8cdc:	cmp	w0, #0x0
    8ce0:	b.eq	8cec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3d7c>  // b.none
    8ce4:	mov	w0, #0x0                   	// #0
    8ce8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8cec:	mov	w2, #0x5                   	// #5
    8cf0:	mov	w1, #0x10                  	// #16
    8cf4:	ldr	w0, [sp, #52]
    8cf8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8cfc:	str	w0, [sp, #3772]
    8d00:	ldr	x3, [sp, #24]
    8d04:	ldr	x2, [sp, #32]
    8d08:	ldr	w1, [sp, #3772]
    8d0c:	ldr	x0, [sp, #40]
    8d10:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    8d14:	mov	w1, w0
    8d18:	add	x0, sp, #0x3c
    8d1c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8d20:	and	w0, w0, #0xff
    8d24:	eor	w0, w0, #0x1
    8d28:	and	w0, w0, #0xff
    8d2c:	cmp	w0, #0x0
    8d30:	b.eq	8d3c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3dcc>  // b.none
    8d34:	mov	w0, #0x0                   	// #0
    8d38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8d3c:	mov	w2, #0x6                   	// #6
    8d40:	mov	w1, #0x5                   	// #5
    8d44:	ldr	w0, [sp, #52]
    8d48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8d4c:	str	w0, [sp, #3772]
    8d50:	ldr	w0, [sp, #3772]
    8d54:	ldr	x3, [sp, #24]
    8d58:	ldr	x2, [sp, #32]
    8d5c:	mov	x1, x0
    8d60:	ldr	x0, [sp, #40]
    8d64:	bl	2ab10 <_Z10DecodeSImmILi6EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
    8d68:	mov	w1, w0
    8d6c:	add	x0, sp, #0x3c
    8d70:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8d74:	and	w0, w0, #0xff
    8d78:	eor	w0, w0, #0x1
    8d7c:	and	w0, w0, #0xff
    8d80:	cmp	w0, #0x0
    8d84:	b.eq	8d90 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3e20>  // b.none
    8d88:	mov	w0, #0x0                   	// #0
    8d8c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8d90:	ldr	w0, [sp, #60]
    8d94:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8d98:	mov	w2, #0x5                   	// #5
    8d9c:	mov	w1, #0x0                   	// #0
    8da0:	ldr	w0, [sp, #52]
    8da4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8da8:	str	w0, [sp, #3772]
    8dac:	ldr	x3, [sp, #24]
    8db0:	ldr	x2, [sp, #32]
    8db4:	ldr	w1, [sp, #3772]
    8db8:	ldr	x0, [sp, #40]
    8dbc:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    8dc0:	mov	w1, w0
    8dc4:	add	x0, sp, #0x3c
    8dc8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8dcc:	and	w0, w0, #0xff
    8dd0:	eor	w0, w0, #0x1
    8dd4:	and	w0, w0, #0xff
    8dd8:	cmp	w0, #0x0
    8ddc:	b.eq	8de8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3e78>  // b.none
    8de0:	mov	w0, #0x0                   	// #0
    8de4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8de8:	mov	w2, #0x6                   	// #6
    8dec:	mov	w1, #0x5                   	// #5
    8df0:	ldr	w0, [sp, #52]
    8df4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8df8:	str	w0, [sp, #3772]
    8dfc:	ldr	w0, [sp, #3772]
    8e00:	ldr	x3, [sp, #24]
    8e04:	ldr	x2, [sp, #32]
    8e08:	mov	x1, x0
    8e0c:	ldr	x0, [sp, #40]
    8e10:	bl	2ab10 <_Z10DecodeSImmILi6EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
    8e14:	mov	w1, w0
    8e18:	add	x0, sp, #0x3c
    8e1c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8e20:	and	w0, w0, #0xff
    8e24:	eor	w0, w0, #0x1
    8e28:	and	w0, w0, #0xff
    8e2c:	cmp	w0, #0x0
    8e30:	b.eq	8e3c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3ecc>  // b.none
    8e34:	mov	w0, #0x0                   	// #0
    8e38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8e3c:	ldr	w0, [sp, #60]
    8e40:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8e44:	mov	w2, #0x5                   	// #5
    8e48:	mov	w1, #0x0                   	// #0
    8e4c:	ldr	w0, [sp, #52]
    8e50:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8e54:	str	w0, [sp, #3772]
    8e58:	ldr	x3, [sp, #24]
    8e5c:	ldr	x2, [sp, #32]
    8e60:	ldr	w1, [sp, #3772]
    8e64:	ldr	x0, [sp, #40]
    8e68:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    8e6c:	mov	w1, w0
    8e70:	add	x0, sp, #0x3c
    8e74:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8e78:	and	w0, w0, #0xff
    8e7c:	eor	w0, w0, #0x1
    8e80:	and	w0, w0, #0xff
    8e84:	cmp	w0, #0x0
    8e88:	b.eq	8e94 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3f24>  // b.none
    8e8c:	mov	w0, #0x0                   	// #0
    8e90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8e94:	mov	w2, #0x5                   	// #5
    8e98:	mov	w1, #0x5                   	// #5
    8e9c:	ldr	w0, [sp, #52]
    8ea0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8ea4:	str	w0, [sp, #3772]
    8ea8:	ldr	x3, [sp, #24]
    8eac:	ldr	x2, [sp, #32]
    8eb0:	ldr	w1, [sp, #3772]
    8eb4:	ldr	x0, [sp, #40]
    8eb8:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    8ebc:	mov	w1, w0
    8ec0:	add	x0, sp, #0x3c
    8ec4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8ec8:	and	w0, w0, #0xff
    8ecc:	eor	w0, w0, #0x1
    8ed0:	and	w0, w0, #0xff
    8ed4:	cmp	w0, #0x0
    8ed8:	b.eq	8ee4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3f74>  // b.none
    8edc:	mov	w0, #0x0                   	// #0
    8ee0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8ee4:	mov	w2, #0x5                   	// #5
    8ee8:	mov	w1, #0x10                  	// #16
    8eec:	ldr	w0, [sp, #52]
    8ef0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8ef4:	str	w0, [sp, #3772]
    8ef8:	ldr	w0, [sp, #3772]
    8efc:	ldr	x3, [sp, #24]
    8f00:	ldr	x2, [sp, #32]
    8f04:	mov	x1, x0
    8f08:	ldr	x0, [sp, #40]
    8f0c:	bl	2aa9c <_Z10DecodeSImmILi5EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
    8f10:	mov	w1, w0
    8f14:	add	x0, sp, #0x3c
    8f18:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8f1c:	and	w0, w0, #0xff
    8f20:	eor	w0, w0, #0x1
    8f24:	and	w0, w0, #0xff
    8f28:	cmp	w0, #0x0
    8f2c:	b.eq	8f38 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x3fc8>  // b.none
    8f30:	mov	w0, #0x0                   	// #0
    8f34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8f38:	ldr	w0, [sp, #60]
    8f3c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8f40:	mov	w2, #0x5                   	// #5
    8f44:	mov	w1, #0x0                   	// #0
    8f48:	ldr	w0, [sp, #52]
    8f4c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8f50:	str	w0, [sp, #3772]
    8f54:	ldr	x3, [sp, #24]
    8f58:	ldr	x2, [sp, #32]
    8f5c:	ldr	w1, [sp, #3772]
    8f60:	ldr	x0, [sp, #40]
    8f64:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    8f68:	mov	w1, w0
    8f6c:	add	x0, sp, #0x3c
    8f70:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8f74:	and	w0, w0, #0xff
    8f78:	eor	w0, w0, #0x1
    8f7c:	and	w0, w0, #0xff
    8f80:	cmp	w0, #0x0
    8f84:	b.eq	8f90 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4020>  // b.none
    8f88:	mov	w0, #0x0                   	// #0
    8f8c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8f90:	mov	w2, #0x5                   	// #5
    8f94:	mov	w1, #0x5                   	// #5
    8f98:	ldr	w0, [sp, #52]
    8f9c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8fa0:	str	w0, [sp, #3772]
    8fa4:	ldr	w0, [sp, #3772]
    8fa8:	ldr	x3, [sp, #24]
    8fac:	ldr	x2, [sp, #32]
    8fb0:	mov	x1, x0
    8fb4:	ldr	x0, [sp, #40]
    8fb8:	bl	2aa9c <_Z10DecodeSImmILi5EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
    8fbc:	mov	w1, w0
    8fc0:	add	x0, sp, #0x3c
    8fc4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    8fc8:	and	w0, w0, #0xff
    8fcc:	eor	w0, w0, #0x1
    8fd0:	and	w0, w0, #0xff
    8fd4:	cmp	w0, #0x0
    8fd8:	b.eq	8fe4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4074>  // b.none
    8fdc:	mov	w0, #0x0                   	// #0
    8fe0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    8fe4:	mov	w2, #0x5                   	// #5
    8fe8:	mov	w1, #0x10                  	// #16
    8fec:	ldr	w0, [sp, #52]
    8ff0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    8ff4:	str	w0, [sp, #3772]
    8ff8:	ldr	x3, [sp, #24]
    8ffc:	ldr	x2, [sp, #32]
    9000:	ldr	w1, [sp, #3772]
    9004:	ldr	x0, [sp, #40]
    9008:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    900c:	mov	w1, w0
    9010:	add	x0, sp, #0x3c
    9014:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9018:	and	w0, w0, #0xff
    901c:	eor	w0, w0, #0x1
    9020:	and	w0, w0, #0xff
    9024:	cmp	w0, #0x0
    9028:	b.eq	9034 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x40c4>  // b.none
    902c:	mov	w0, #0x0                   	// #0
    9030:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9034:	ldr	w0, [sp, #60]
    9038:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    903c:	mov	w2, #0x5                   	// #5
    9040:	mov	w1, #0x0                   	// #0
    9044:	ldr	w0, [sp, #52]
    9048:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    904c:	str	w0, [sp, #3772]
    9050:	ldr	x3, [sp, #24]
    9054:	ldr	x2, [sp, #32]
    9058:	ldr	w1, [sp, #3772]
    905c:	ldr	x0, [sp, #40]
    9060:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    9064:	mov	w1, w0
    9068:	add	x0, sp, #0x3c
    906c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9070:	and	w0, w0, #0xff
    9074:	eor	w0, w0, #0x1
    9078:	and	w0, w0, #0xff
    907c:	cmp	w0, #0x0
    9080:	b.eq	908c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x411c>  // b.none
    9084:	mov	w0, #0x0                   	// #0
    9088:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    908c:	mov	w2, #0x5                   	// #5
    9090:	mov	w1, #0x5                   	// #5
    9094:	ldr	w0, [sp, #52]
    9098:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    909c:	str	w0, [sp, #3772]
    90a0:	ldr	x3, [sp, #24]
    90a4:	ldr	x2, [sp, #32]
    90a8:	ldr	w1, [sp, #3772]
    90ac:	ldr	x0, [sp, #40]
    90b0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    90b4:	mov	w1, w0
    90b8:	add	x0, sp, #0x3c
    90bc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    90c0:	and	w0, w0, #0xff
    90c4:	eor	w0, w0, #0x1
    90c8:	and	w0, w0, #0xff
    90cc:	cmp	w0, #0x0
    90d0:	b.eq	90dc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x416c>  // b.none
    90d4:	mov	w0, #0x0                   	// #0
    90d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    90dc:	mov	w2, #0x5                   	// #5
    90e0:	mov	w1, #0x10                  	// #16
    90e4:	ldr	w0, [sp, #52]
    90e8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    90ec:	str	w0, [sp, #3772]
    90f0:	ldr	x3, [sp, #24]
    90f4:	ldr	x2, [sp, #32]
    90f8:	ldr	w1, [sp, #3772]
    90fc:	ldr	x0, [sp, #40]
    9100:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    9104:	mov	w1, w0
    9108:	add	x0, sp, #0x3c
    910c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9110:	and	w0, w0, #0xff
    9114:	eor	w0, w0, #0x1
    9118:	and	w0, w0, #0xff
    911c:	cmp	w0, #0x0
    9120:	b.eq	912c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x41bc>  // b.none
    9124:	mov	w0, #0x0                   	// #0
    9128:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    912c:	ldr	w0, [sp, #60]
    9130:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9134:	mov	w2, #0x4                   	// #4
    9138:	mov	w1, #0x0                   	// #0
    913c:	ldr	w0, [sp, #52]
    9140:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9144:	str	w0, [sp, #3772]
    9148:	ldr	x3, [sp, #24]
    914c:	ldr	x2, [sp, #32]
    9150:	ldr	w1, [sp, #3772]
    9154:	ldr	x0, [sp, #40]
    9158:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    915c:	mov	w1, w0
    9160:	add	x0, sp, #0x3c
    9164:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9168:	and	w0, w0, #0xff
    916c:	eor	w0, w0, #0x1
    9170:	and	w0, w0, #0xff
    9174:	cmp	w0, #0x0
    9178:	b.eq	9184 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4214>  // b.none
    917c:	mov	w0, #0x0                   	// #0
    9180:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9184:	mov	w2, #0x4                   	// #4
    9188:	mov	w1, #0x5                   	// #5
    918c:	ldr	w0, [sp, #52]
    9190:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9194:	str	w0, [sp, #3772]
    9198:	ldr	x3, [sp, #24]
    919c:	ldr	x2, [sp, #32]
    91a0:	ldr	w1, [sp, #3772]
    91a4:	ldr	x0, [sp, #40]
    91a8:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    91ac:	mov	w1, w0
    91b0:	add	x0, sp, #0x3c
    91b4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    91b8:	and	w0, w0, #0xff
    91bc:	eor	w0, w0, #0x1
    91c0:	and	w0, w0, #0xff
    91c4:	cmp	w0, #0x0
    91c8:	b.eq	91d4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4264>  // b.none
    91cc:	mov	w0, #0x0                   	// #0
    91d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    91d4:	mov	w2, #0x4                   	// #4
    91d8:	mov	w1, #0x10                  	// #16
    91dc:	ldr	w0, [sp, #52]
    91e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    91e4:	str	w0, [sp, #3772]
    91e8:	ldr	x3, [sp, #24]
    91ec:	ldr	x2, [sp, #32]
    91f0:	ldr	w1, [sp, #3772]
    91f4:	ldr	x0, [sp, #40]
    91f8:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    91fc:	mov	w1, w0
    9200:	add	x0, sp, #0x3c
    9204:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9208:	and	w0, w0, #0xff
    920c:	eor	w0, w0, #0x1
    9210:	and	w0, w0, #0xff
    9214:	cmp	w0, #0x0
    9218:	b.eq	9224 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x42b4>  // b.none
    921c:	mov	w0, #0x0                   	// #0
    9220:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9224:	ldr	w0, [sp, #60]
    9228:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    922c:	mov	w2, #0x4                   	// #4
    9230:	mov	w1, #0x0                   	// #0
    9234:	ldr	w0, [sp, #52]
    9238:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    923c:	str	w0, [sp, #3772]
    9240:	ldr	x3, [sp, #24]
    9244:	ldr	x2, [sp, #32]
    9248:	ldr	w1, [sp, #3772]
    924c:	ldr	x0, [sp, #40]
    9250:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    9254:	mov	w1, w0
    9258:	add	x0, sp, #0x3c
    925c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9260:	and	w0, w0, #0xff
    9264:	eor	w0, w0, #0x1
    9268:	and	w0, w0, #0xff
    926c:	cmp	w0, #0x0
    9270:	b.eq	927c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x430c>  // b.none
    9274:	mov	w0, #0x0                   	// #0
    9278:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    927c:	mov	w2, #0x4                   	// #4
    9280:	mov	w1, #0x5                   	// #5
    9284:	ldr	w0, [sp, #52]
    9288:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    928c:	str	w0, [sp, #3772]
    9290:	ldr	x3, [sp, #24]
    9294:	ldr	x2, [sp, #32]
    9298:	ldr	w1, [sp, #3772]
    929c:	ldr	x0, [sp, #40]
    92a0:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    92a4:	mov	w1, w0
    92a8:	add	x0, sp, #0x3c
    92ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    92b0:	and	w0, w0, #0xff
    92b4:	eor	w0, w0, #0x1
    92b8:	and	w0, w0, #0xff
    92bc:	cmp	w0, #0x0
    92c0:	b.eq	92cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x435c>  // b.none
    92c4:	mov	w0, #0x0                   	// #0
    92c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    92cc:	ldr	w0, [sp, #60]
    92d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    92d4:	mov	w2, #0x5                   	// #5
    92d8:	mov	w1, #0x0                   	// #0
    92dc:	ldr	w0, [sp, #52]
    92e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    92e4:	str	w0, [sp, #3772]
    92e8:	ldr	x3, [sp, #24]
    92ec:	ldr	x2, [sp, #32]
    92f0:	ldr	w1, [sp, #3772]
    92f4:	ldr	x0, [sp, #40]
    92f8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    92fc:	mov	w1, w0
    9300:	add	x0, sp, #0x3c
    9304:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9308:	and	w0, w0, #0xff
    930c:	eor	w0, w0, #0x1
    9310:	and	w0, w0, #0xff
    9314:	cmp	w0, #0x0
    9318:	b.eq	9324 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x43b4>  // b.none
    931c:	mov	w0, #0x0                   	// #0
    9320:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9324:	mov	w2, #0x5                   	// #5
    9328:	mov	w1, #0x5                   	// #5
    932c:	ldr	w0, [sp, #52]
    9330:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9334:	str	w0, [sp, #3772]
    9338:	ldr	x3, [sp, #24]
    933c:	ldr	x2, [sp, #32]
    9340:	ldr	w1, [sp, #3772]
    9344:	ldr	x0, [sp, #40]
    9348:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    934c:	mov	w1, w0
    9350:	add	x0, sp, #0x3c
    9354:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9358:	and	w0, w0, #0xff
    935c:	eor	w0, w0, #0x1
    9360:	and	w0, w0, #0xff
    9364:	cmp	w0, #0x0
    9368:	b.eq	9374 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4404>  // b.none
    936c:	mov	w0, #0x0                   	// #0
    9370:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9374:	mov	w2, #0x3                   	// #3
    9378:	mov	w1, #0x10                  	// #16
    937c:	ldr	w0, [sp, #52]
    9380:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9384:	str	w0, [sp, #3772]
    9388:	ldr	x3, [sp, #24]
    938c:	ldr	x2, [sp, #32]
    9390:	ldr	w1, [sp, #3772]
    9394:	ldr	x0, [sp, #40]
    9398:	bl	1790 <_ZL19DecodeVecShiftR8ImmRN4llvm6MCInstEjmPKv>
    939c:	mov	w1, w0
    93a0:	add	x0, sp, #0x3c
    93a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    93a8:	and	w0, w0, #0xff
    93ac:	eor	w0, w0, #0x1
    93b0:	and	w0, w0, #0xff
    93b4:	cmp	w0, #0x0
    93b8:	b.eq	93c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4454>  // b.none
    93bc:	mov	w0, #0x0                   	// #0
    93c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    93c4:	ldr	w0, [sp, #60]
    93c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    93cc:	mov	w2, #0x5                   	// #5
    93d0:	mov	w1, #0x0                   	// #0
    93d4:	ldr	w0, [sp, #52]
    93d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    93dc:	str	w0, [sp, #3772]
    93e0:	ldr	x3, [sp, #24]
    93e4:	ldr	x2, [sp, #32]
    93e8:	ldr	w1, [sp, #3772]
    93ec:	ldr	x0, [sp, #40]
    93f0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    93f4:	mov	w1, w0
    93f8:	add	x0, sp, #0x3c
    93fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9400:	and	w0, w0, #0xff
    9404:	eor	w0, w0, #0x1
    9408:	and	w0, w0, #0xff
    940c:	cmp	w0, #0x0
    9410:	b.eq	941c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x44ac>  // b.none
    9414:	mov	w0, #0x0                   	// #0
    9418:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    941c:	mov	w2, #0x5                   	// #5
    9420:	mov	w1, #0x5                   	// #5
    9424:	ldr	w0, [sp, #52]
    9428:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    942c:	str	w0, [sp, #3772]
    9430:	ldr	x3, [sp, #24]
    9434:	ldr	x2, [sp, #32]
    9438:	ldr	w1, [sp, #3772]
    943c:	ldr	x0, [sp, #40]
    9440:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    9444:	mov	w1, w0
    9448:	add	x0, sp, #0x3c
    944c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9450:	and	w0, w0, #0xff
    9454:	eor	w0, w0, #0x1
    9458:	and	w0, w0, #0xff
    945c:	cmp	w0, #0x0
    9460:	b.eq	946c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x44fc>  // b.none
    9464:	mov	w0, #0x0                   	// #0
    9468:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    946c:	mov	w2, #0x4                   	// #4
    9470:	mov	w1, #0x10                  	// #16
    9474:	ldr	w0, [sp, #52]
    9478:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    947c:	str	w0, [sp, #3772]
    9480:	ldr	x3, [sp, #24]
    9484:	ldr	x2, [sp, #32]
    9488:	ldr	w1, [sp, #3772]
    948c:	ldr	x0, [sp, #40]
    9490:	bl	1728 <_ZL20DecodeVecShiftR16ImmRN4llvm6MCInstEjmPKv>
    9494:	mov	w1, w0
    9498:	add	x0, sp, #0x3c
    949c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    94a0:	and	w0, w0, #0xff
    94a4:	eor	w0, w0, #0x1
    94a8:	and	w0, w0, #0xff
    94ac:	cmp	w0, #0x0
    94b0:	b.eq	94bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x454c>  // b.none
    94b4:	mov	w0, #0x0                   	// #0
    94b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    94bc:	ldr	w0, [sp, #60]
    94c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    94c4:	mov	w2, #0x5                   	// #5
    94c8:	mov	w1, #0x0                   	// #0
    94cc:	ldr	w0, [sp, #52]
    94d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    94d4:	str	w0, [sp, #3772]
    94d8:	ldr	x3, [sp, #24]
    94dc:	ldr	x2, [sp, #32]
    94e0:	ldr	w1, [sp, #3772]
    94e4:	ldr	x0, [sp, #40]
    94e8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    94ec:	mov	w1, w0
    94f0:	add	x0, sp, #0x3c
    94f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    94f8:	and	w0, w0, #0xff
    94fc:	eor	w0, w0, #0x1
    9500:	and	w0, w0, #0xff
    9504:	cmp	w0, #0x0
    9508:	b.eq	9514 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x45a4>  // b.none
    950c:	mov	w0, #0x0                   	// #0
    9510:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9514:	mov	w2, #0x5                   	// #5
    9518:	mov	w1, #0x5                   	// #5
    951c:	ldr	w0, [sp, #52]
    9520:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9524:	str	w0, [sp, #3772]
    9528:	ldr	x3, [sp, #24]
    952c:	ldr	x2, [sp, #32]
    9530:	ldr	w1, [sp, #3772]
    9534:	ldr	x0, [sp, #40]
    9538:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    953c:	mov	w1, w0
    9540:	add	x0, sp, #0x3c
    9544:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9548:	and	w0, w0, #0xff
    954c:	eor	w0, w0, #0x1
    9550:	and	w0, w0, #0xff
    9554:	cmp	w0, #0x0
    9558:	b.eq	9564 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x45f4>  // b.none
    955c:	mov	w0, #0x0                   	// #0
    9560:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9564:	mov	w2, #0x5                   	// #5
    9568:	mov	w1, #0x10                  	// #16
    956c:	ldr	w0, [sp, #52]
    9570:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9574:	str	w0, [sp, #3772]
    9578:	ldr	x3, [sp, #24]
    957c:	ldr	x2, [sp, #32]
    9580:	ldr	w1, [sp, #3772]
    9584:	ldr	x0, [sp, #40]
    9588:	bl	16c0 <_ZL20DecodeVecShiftR32ImmRN4llvm6MCInstEjmPKv>
    958c:	mov	w1, w0
    9590:	add	x0, sp, #0x3c
    9594:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9598:	and	w0, w0, #0xff
    959c:	eor	w0, w0, #0x1
    95a0:	and	w0, w0, #0xff
    95a4:	cmp	w0, #0x0
    95a8:	b.eq	95b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4644>  // b.none
    95ac:	mov	w0, #0x0                   	// #0
    95b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    95b4:	ldr	w0, [sp, #60]
    95b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    95bc:	mov	w2, #0x5                   	// #5
    95c0:	mov	w1, #0x0                   	// #0
    95c4:	ldr	w0, [sp, #52]
    95c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    95cc:	str	w0, [sp, #3772]
    95d0:	ldr	x3, [sp, #24]
    95d4:	ldr	x2, [sp, #32]
    95d8:	ldr	w1, [sp, #3772]
    95dc:	ldr	x0, [sp, #40]
    95e0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    95e4:	mov	w1, w0
    95e8:	add	x0, sp, #0x3c
    95ec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    95f0:	and	w0, w0, #0xff
    95f4:	eor	w0, w0, #0x1
    95f8:	and	w0, w0, #0xff
    95fc:	cmp	w0, #0x0
    9600:	b.eq	960c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x469c>  // b.none
    9604:	mov	w0, #0x0                   	// #0
    9608:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    960c:	mov	w2, #0x5                   	// #5
    9610:	mov	w1, #0x5                   	// #5
    9614:	ldr	w0, [sp, #52]
    9618:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    961c:	str	w0, [sp, #3772]
    9620:	ldr	x3, [sp, #24]
    9624:	ldr	x2, [sp, #32]
    9628:	ldr	w1, [sp, #3772]
    962c:	ldr	x0, [sp, #40]
    9630:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    9634:	mov	w1, w0
    9638:	add	x0, sp, #0x3c
    963c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9640:	and	w0, w0, #0xff
    9644:	eor	w0, w0, #0x1
    9648:	and	w0, w0, #0xff
    964c:	cmp	w0, #0x0
    9650:	b.eq	965c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x46ec>  // b.none
    9654:	mov	w0, #0x0                   	// #0
    9658:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    965c:	mov	w2, #0x3                   	// #3
    9660:	mov	w1, #0x10                  	// #16
    9664:	ldr	w0, [sp, #52]
    9668:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    966c:	str	w0, [sp, #3772]
    9670:	ldr	x3, [sp, #24]
    9674:	ldr	x2, [sp, #32]
    9678:	ldr	w1, [sp, #3772]
    967c:	ldr	x0, [sp, #40]
    9680:	bl	1850 <_ZL19DecodeVecShiftL8ImmRN4llvm6MCInstEjmPKv>
    9684:	mov	w1, w0
    9688:	add	x0, sp, #0x3c
    968c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9690:	and	w0, w0, #0xff
    9694:	eor	w0, w0, #0x1
    9698:	and	w0, w0, #0xff
    969c:	cmp	w0, #0x0
    96a0:	b.eq	96ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x473c>  // b.none
    96a4:	mov	w0, #0x0                   	// #0
    96a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    96ac:	ldr	w0, [sp, #60]
    96b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    96b4:	mov	w2, #0x5                   	// #5
    96b8:	mov	w1, #0x0                   	// #0
    96bc:	ldr	w0, [sp, #52]
    96c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    96c4:	str	w0, [sp, #3772]
    96c8:	ldr	x3, [sp, #24]
    96cc:	ldr	x2, [sp, #32]
    96d0:	ldr	w1, [sp, #3772]
    96d4:	ldr	x0, [sp, #40]
    96d8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    96dc:	mov	w1, w0
    96e0:	add	x0, sp, #0x3c
    96e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    96e8:	and	w0, w0, #0xff
    96ec:	eor	w0, w0, #0x1
    96f0:	and	w0, w0, #0xff
    96f4:	cmp	w0, #0x0
    96f8:	b.eq	9704 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4794>  // b.none
    96fc:	mov	w0, #0x0                   	// #0
    9700:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9704:	mov	w2, #0x5                   	// #5
    9708:	mov	w1, #0x5                   	// #5
    970c:	ldr	w0, [sp, #52]
    9710:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9714:	str	w0, [sp, #3772]
    9718:	ldr	x3, [sp, #24]
    971c:	ldr	x2, [sp, #32]
    9720:	ldr	w1, [sp, #3772]
    9724:	ldr	x0, [sp, #40]
    9728:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    972c:	mov	w1, w0
    9730:	add	x0, sp, #0x3c
    9734:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9738:	and	w0, w0, #0xff
    973c:	eor	w0, w0, #0x1
    9740:	and	w0, w0, #0xff
    9744:	cmp	w0, #0x0
    9748:	b.eq	9754 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x47e4>  // b.none
    974c:	mov	w0, #0x0                   	// #0
    9750:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9754:	mov	w2, #0x4                   	// #4
    9758:	mov	w1, #0x10                  	// #16
    975c:	ldr	w0, [sp, #52]
    9760:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9764:	str	w0, [sp, #3772]
    9768:	ldr	x3, [sp, #24]
    976c:	ldr	x2, [sp, #32]
    9770:	ldr	w1, [sp, #3772]
    9774:	ldr	x0, [sp, #40]
    9778:	bl	1820 <_ZL20DecodeVecShiftL16ImmRN4llvm6MCInstEjmPKv>
    977c:	mov	w1, w0
    9780:	add	x0, sp, #0x3c
    9784:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9788:	and	w0, w0, #0xff
    978c:	eor	w0, w0, #0x1
    9790:	and	w0, w0, #0xff
    9794:	cmp	w0, #0x0
    9798:	b.eq	97a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4834>  // b.none
    979c:	mov	w0, #0x0                   	// #0
    97a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    97a4:	ldr	w0, [sp, #60]
    97a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    97ac:	mov	w2, #0x5                   	// #5
    97b0:	mov	w1, #0x0                   	// #0
    97b4:	ldr	w0, [sp, #52]
    97b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    97bc:	str	w0, [sp, #3772]
    97c0:	ldr	x3, [sp, #24]
    97c4:	ldr	x2, [sp, #32]
    97c8:	ldr	w1, [sp, #3772]
    97cc:	ldr	x0, [sp, #40]
    97d0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    97d4:	mov	w1, w0
    97d8:	add	x0, sp, #0x3c
    97dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    97e0:	and	w0, w0, #0xff
    97e4:	eor	w0, w0, #0x1
    97e8:	and	w0, w0, #0xff
    97ec:	cmp	w0, #0x0
    97f0:	b.eq	97fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x488c>  // b.none
    97f4:	mov	w0, #0x0                   	// #0
    97f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    97fc:	mov	w2, #0x5                   	// #5
    9800:	mov	w1, #0x5                   	// #5
    9804:	ldr	w0, [sp, #52]
    9808:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    980c:	str	w0, [sp, #3772]
    9810:	ldr	x3, [sp, #24]
    9814:	ldr	x2, [sp, #32]
    9818:	ldr	w1, [sp, #3772]
    981c:	ldr	x0, [sp, #40]
    9820:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    9824:	mov	w1, w0
    9828:	add	x0, sp, #0x3c
    982c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9830:	and	w0, w0, #0xff
    9834:	eor	w0, w0, #0x1
    9838:	and	w0, w0, #0xff
    983c:	cmp	w0, #0x0
    9840:	b.eq	984c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x48dc>  // b.none
    9844:	mov	w0, #0x0                   	// #0
    9848:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    984c:	mov	w2, #0x5                   	// #5
    9850:	mov	w1, #0x10                  	// #16
    9854:	ldr	w0, [sp, #52]
    9858:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    985c:	str	w0, [sp, #3772]
    9860:	ldr	x3, [sp, #24]
    9864:	ldr	x2, [sp, #32]
    9868:	ldr	w1, [sp, #3772]
    986c:	ldr	x0, [sp, #40]
    9870:	bl	17f0 <_ZL20DecodeVecShiftL32ImmRN4llvm6MCInstEjmPKv>
    9874:	mov	w1, w0
    9878:	add	x0, sp, #0x3c
    987c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9880:	and	w0, w0, #0xff
    9884:	eor	w0, w0, #0x1
    9888:	and	w0, w0, #0xff
    988c:	cmp	w0, #0x0
    9890:	b.eq	989c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x492c>  // b.none
    9894:	mov	w0, #0x0                   	// #0
    9898:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    989c:	ldr	w0, [sp, #60]
    98a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    98a4:	mov	w2, #0x5                   	// #5
    98a8:	mov	w1, #0x0                   	// #0
    98ac:	ldr	w0, [sp, #52]
    98b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    98b4:	str	w0, [sp, #3772]
    98b8:	ldr	x3, [sp, #24]
    98bc:	ldr	x2, [sp, #32]
    98c0:	ldr	w1, [sp, #3772]
    98c4:	ldr	x0, [sp, #40]
    98c8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    98cc:	mov	w1, w0
    98d0:	add	x0, sp, #0x3c
    98d4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    98d8:	and	w0, w0, #0xff
    98dc:	eor	w0, w0, #0x1
    98e0:	and	w0, w0, #0xff
    98e4:	cmp	w0, #0x0
    98e8:	b.eq	98f4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4984>  // b.none
    98ec:	mov	w0, #0x0                   	// #0
    98f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    98f4:	mov	w2, #0x5                   	// #5
    98f8:	mov	w1, #0x5                   	// #5
    98fc:	ldr	w0, [sp, #52]
    9900:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9904:	str	w0, [sp, #3772]
    9908:	ldr	x3, [sp, #24]
    990c:	ldr	x2, [sp, #32]
    9910:	ldr	w1, [sp, #3772]
    9914:	ldr	x0, [sp, #40]
    9918:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    991c:	mov	w1, w0
    9920:	add	x0, sp, #0x3c
    9924:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9928:	and	w0, w0, #0xff
    992c:	eor	w0, w0, #0x1
    9930:	and	w0, w0, #0xff
    9934:	cmp	w0, #0x0
    9938:	b.eq	9944 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x49d4>  // b.none
    993c:	mov	w0, #0x0                   	// #0
    9940:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9944:	str	wzr, [sp, #3772]
    9948:	mov	w2, #0x5                   	// #5
    994c:	mov	w1, #0x10                  	// #16
    9950:	ldr	w0, [sp, #52]
    9954:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9958:	mov	w1, w0
    995c:	ldr	w0, [sp, #3772]
    9960:	orr	w0, w0, w1
    9964:	str	w0, [sp, #3772]
    9968:	mov	w2, #0x1                   	// #1
    996c:	mov	w1, #0x16                  	// #22
    9970:	ldr	w0, [sp, #52]
    9974:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9978:	lsl	w0, w0, #5
    997c:	ldr	w1, [sp, #3772]
    9980:	orr	w0, w1, w0
    9984:	str	w0, [sp, #3772]
    9988:	ldr	x3, [sp, #24]
    998c:	ldr	x2, [sp, #32]
    9990:	ldr	w1, [sp, #3772]
    9994:	ldr	x0, [sp, #40]
    9998:	bl	1658 <_ZL20DecodeVecShiftR64ImmRN4llvm6MCInstEjmPKv>
    999c:	mov	w1, w0
    99a0:	add	x0, sp, #0x3c
    99a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    99a8:	and	w0, w0, #0xff
    99ac:	eor	w0, w0, #0x1
    99b0:	and	w0, w0, #0xff
    99b4:	cmp	w0, #0x0
    99b8:	b.eq	99c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4a54>  // b.none
    99bc:	mov	w0, #0x0                   	// #0
    99c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    99c4:	ldr	w0, [sp, #60]
    99c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    99cc:	mov	w2, #0x5                   	// #5
    99d0:	mov	w1, #0x0                   	// #0
    99d4:	ldr	w0, [sp, #52]
    99d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    99dc:	str	w0, [sp, #3772]
    99e0:	ldr	x3, [sp, #24]
    99e4:	ldr	x2, [sp, #32]
    99e8:	ldr	w1, [sp, #3772]
    99ec:	ldr	x0, [sp, #40]
    99f0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    99f4:	mov	w1, w0
    99f8:	add	x0, sp, #0x3c
    99fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9a00:	and	w0, w0, #0xff
    9a04:	eor	w0, w0, #0x1
    9a08:	and	w0, w0, #0xff
    9a0c:	cmp	w0, #0x0
    9a10:	b.eq	9a1c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4aac>  // b.none
    9a14:	mov	w0, #0x0                   	// #0
    9a18:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9a1c:	mov	w2, #0x5                   	// #5
    9a20:	mov	w1, #0x5                   	// #5
    9a24:	ldr	w0, [sp, #52]
    9a28:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9a2c:	str	w0, [sp, #3772]
    9a30:	ldr	x3, [sp, #24]
    9a34:	ldr	x2, [sp, #32]
    9a38:	ldr	w1, [sp, #3772]
    9a3c:	ldr	x0, [sp, #40]
    9a40:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    9a44:	mov	w1, w0
    9a48:	add	x0, sp, #0x3c
    9a4c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9a50:	and	w0, w0, #0xff
    9a54:	eor	w0, w0, #0x1
    9a58:	and	w0, w0, #0xff
    9a5c:	cmp	w0, #0x0
    9a60:	b.eq	9a6c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4afc>  // b.none
    9a64:	mov	w0, #0x0                   	// #0
    9a68:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9a6c:	str	wzr, [sp, #3772]
    9a70:	mov	w2, #0x5                   	// #5
    9a74:	mov	w1, #0x10                  	// #16
    9a78:	ldr	w0, [sp, #52]
    9a7c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9a80:	mov	w1, w0
    9a84:	ldr	w0, [sp, #3772]
    9a88:	orr	w0, w0, w1
    9a8c:	str	w0, [sp, #3772]
    9a90:	mov	w2, #0x1                   	// #1
    9a94:	mov	w1, #0x16                  	// #22
    9a98:	ldr	w0, [sp, #52]
    9a9c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9aa0:	lsl	w0, w0, #5
    9aa4:	ldr	w1, [sp, #3772]
    9aa8:	orr	w0, w1, w0
    9aac:	str	w0, [sp, #3772]
    9ab0:	ldr	x3, [sp, #24]
    9ab4:	ldr	x2, [sp, #32]
    9ab8:	ldr	w1, [sp, #3772]
    9abc:	ldr	x0, [sp, #40]
    9ac0:	bl	17c0 <_ZL20DecodeVecShiftL64ImmRN4llvm6MCInstEjmPKv>
    9ac4:	mov	w1, w0
    9ac8:	add	x0, sp, #0x3c
    9acc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9ad0:	and	w0, w0, #0xff
    9ad4:	eor	w0, w0, #0x1
    9ad8:	and	w0, w0, #0xff
    9adc:	cmp	w0, #0x0
    9ae0:	b.eq	9aec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4b7c>  // b.none
    9ae4:	mov	w0, #0x0                   	// #0
    9ae8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9aec:	ldr	w0, [sp, #60]
    9af0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9af4:	mov	w2, #0x5                   	// #5
    9af8:	mov	w1, #0x0                   	// #0
    9afc:	ldr	w0, [sp, #52]
    9b00:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9b04:	str	w0, [sp, #3772]
    9b08:	ldr	x3, [sp, #24]
    9b0c:	ldr	x2, [sp, #32]
    9b10:	ldr	w1, [sp, #3772]
    9b14:	ldr	x0, [sp, #40]
    9b18:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    9b1c:	mov	w1, w0
    9b20:	add	x0, sp, #0x3c
    9b24:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9b28:	and	w0, w0, #0xff
    9b2c:	eor	w0, w0, #0x1
    9b30:	and	w0, w0, #0xff
    9b34:	cmp	w0, #0x0
    9b38:	b.eq	9b44 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4bd4>  // b.none
    9b3c:	mov	w0, #0x0                   	// #0
    9b40:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9b44:	mov	w2, #0x5                   	// #5
    9b48:	mov	w1, #0x0                   	// #0
    9b4c:	ldr	w0, [sp, #52]
    9b50:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9b54:	str	w0, [sp, #3772]
    9b58:	ldr	x3, [sp, #24]
    9b5c:	ldr	x2, [sp, #32]
    9b60:	ldr	w1, [sp, #3772]
    9b64:	ldr	x0, [sp, #40]
    9b68:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    9b6c:	mov	w1, w0
    9b70:	add	x0, sp, #0x3c
    9b74:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9b78:	and	w0, w0, #0xff
    9b7c:	eor	w0, w0, #0x1
    9b80:	and	w0, w0, #0xff
    9b84:	cmp	w0, #0x0
    9b88:	b.eq	9b94 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4c24>  // b.none
    9b8c:	mov	w0, #0x0                   	// #0
    9b90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9b94:	mov	w2, #0x3                   	// #3
    9b98:	mov	w1, #0xa                   	// #10
    9b9c:	ldr	w0, [sp, #52]
    9ba0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9ba4:	str	w0, [sp, #3772]
    9ba8:	ldr	x3, [sp, #24]
    9bac:	ldr	x2, [sp, #32]
    9bb0:	ldr	w1, [sp, #3772]
    9bb4:	ldr	x0, [sp, #40]
    9bb8:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    9bbc:	mov	w1, w0
    9bc0:	add	x0, sp, #0x3c
    9bc4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9bc8:	and	w0, w0, #0xff
    9bcc:	eor	w0, w0, #0x1
    9bd0:	and	w0, w0, #0xff
    9bd4:	cmp	w0, #0x0
    9bd8:	b.eq	9be4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4c74>  // b.none
    9bdc:	mov	w0, #0x0                   	// #0
    9be0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9be4:	mov	w2, #0x5                   	// #5
    9be8:	mov	w1, #0x5                   	// #5
    9bec:	ldr	w0, [sp, #52]
    9bf0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9bf4:	str	w0, [sp, #3772]
    9bf8:	ldr	x3, [sp, #24]
    9bfc:	ldr	x2, [sp, #32]
    9c00:	ldr	w1, [sp, #3772]
    9c04:	ldr	x0, [sp, #40]
    9c08:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
    9c0c:	mov	w1, w0
    9c10:	add	x0, sp, #0x3c
    9c14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9c18:	and	w0, w0, #0xff
    9c1c:	eor	w0, w0, #0x1
    9c20:	and	w0, w0, #0xff
    9c24:	cmp	w0, #0x0
    9c28:	b.eq	9c34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4cc4>  // b.none
    9c2c:	mov	w0, #0x0                   	// #0
    9c30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9c34:	ldr	w0, [sp, #60]
    9c38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9c3c:	mov	w2, #0x5                   	// #5
    9c40:	mov	w1, #0x0                   	// #0
    9c44:	ldr	w0, [sp, #52]
    9c48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9c4c:	str	w0, [sp, #3772]
    9c50:	ldr	x3, [sp, #24]
    9c54:	ldr	x2, [sp, #32]
    9c58:	ldr	w1, [sp, #3772]
    9c5c:	ldr	x0, [sp, #40]
    9c60:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    9c64:	mov	w1, w0
    9c68:	add	x0, sp, #0x3c
    9c6c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9c70:	and	w0, w0, #0xff
    9c74:	eor	w0, w0, #0x1
    9c78:	and	w0, w0, #0xff
    9c7c:	cmp	w0, #0x0
    9c80:	b.eq	9c8c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4d1c>  // b.none
    9c84:	mov	w0, #0x0                   	// #0
    9c88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9c8c:	mov	w2, #0x5                   	// #5
    9c90:	mov	w1, #0x0                   	// #0
    9c94:	ldr	w0, [sp, #52]
    9c98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9c9c:	str	w0, [sp, #3772]
    9ca0:	ldr	x3, [sp, #24]
    9ca4:	ldr	x2, [sp, #32]
    9ca8:	ldr	w1, [sp, #3772]
    9cac:	ldr	x0, [sp, #40]
    9cb0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    9cb4:	mov	w1, w0
    9cb8:	add	x0, sp, #0x3c
    9cbc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9cc0:	and	w0, w0, #0xff
    9cc4:	eor	w0, w0, #0x1
    9cc8:	and	w0, w0, #0xff
    9ccc:	cmp	w0, #0x0
    9cd0:	b.eq	9cdc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4d6c>  // b.none
    9cd4:	mov	w0, #0x0                   	// #0
    9cd8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9cdc:	mov	w2, #0x3                   	// #3
    9ce0:	mov	w1, #0xa                   	// #10
    9ce4:	ldr	w0, [sp, #52]
    9ce8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9cec:	str	w0, [sp, #3772]
    9cf0:	ldr	x3, [sp, #24]
    9cf4:	ldr	x2, [sp, #32]
    9cf8:	ldr	w1, [sp, #3772]
    9cfc:	ldr	x0, [sp, #40]
    9d00:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    9d04:	mov	w1, w0
    9d08:	add	x0, sp, #0x3c
    9d0c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9d10:	and	w0, w0, #0xff
    9d14:	eor	w0, w0, #0x1
    9d18:	and	w0, w0, #0xff
    9d1c:	cmp	w0, #0x0
    9d20:	b.eq	9d2c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4dbc>  // b.none
    9d24:	mov	w0, #0x0                   	// #0
    9d28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9d2c:	mov	w2, #0x5                   	// #5
    9d30:	mov	w1, #0x5                   	// #5
    9d34:	ldr	w0, [sp, #52]
    9d38:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9d3c:	str	w0, [sp, #3772]
    9d40:	ldr	x3, [sp, #24]
    9d44:	ldr	x2, [sp, #32]
    9d48:	ldr	w1, [sp, #3772]
    9d4c:	ldr	x0, [sp, #40]
    9d50:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
    9d54:	mov	w1, w0
    9d58:	add	x0, sp, #0x3c
    9d5c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9d60:	and	w0, w0, #0xff
    9d64:	eor	w0, w0, #0x1
    9d68:	and	w0, w0, #0xff
    9d6c:	cmp	w0, #0x0
    9d70:	b.eq	9d7c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4e0c>  // b.none
    9d74:	mov	w0, #0x0                   	// #0
    9d78:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9d7c:	ldr	w0, [sp, #60]
    9d80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9d84:	mov	w2, #0x5                   	// #5
    9d88:	mov	w1, #0x0                   	// #0
    9d8c:	ldr	w0, [sp, #52]
    9d90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9d94:	str	w0, [sp, #3772]
    9d98:	ldr	x3, [sp, #24]
    9d9c:	ldr	x2, [sp, #32]
    9da0:	ldr	w1, [sp, #3772]
    9da4:	ldr	x0, [sp, #40]
    9da8:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    9dac:	mov	w1, w0
    9db0:	add	x0, sp, #0x3c
    9db4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9db8:	and	w0, w0, #0xff
    9dbc:	eor	w0, w0, #0x1
    9dc0:	and	w0, w0, #0xff
    9dc4:	cmp	w0, #0x0
    9dc8:	b.eq	9dd4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4e64>  // b.none
    9dcc:	mov	w0, #0x0                   	// #0
    9dd0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9dd4:	mov	w2, #0x3                   	// #3
    9dd8:	mov	w1, #0xa                   	// #10
    9ddc:	ldr	w0, [sp, #52]
    9de0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9de4:	str	w0, [sp, #3772]
    9de8:	ldr	x3, [sp, #24]
    9dec:	ldr	x2, [sp, #32]
    9df0:	ldr	w1, [sp, #3772]
    9df4:	ldr	x0, [sp, #40]
    9df8:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    9dfc:	mov	w1, w0
    9e00:	add	x0, sp, #0x3c
    9e04:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9e08:	and	w0, w0, #0xff
    9e0c:	eor	w0, w0, #0x1
    9e10:	and	w0, w0, #0xff
    9e14:	cmp	w0, #0x0
    9e18:	b.eq	9e24 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4eb4>  // b.none
    9e1c:	mov	w0, #0x0                   	// #0
    9e20:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9e24:	mov	w2, #0x5                   	// #5
    9e28:	mov	w1, #0x5                   	// #5
    9e2c:	ldr	w0, [sp, #52]
    9e30:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9e34:	str	w0, [sp, #3772]
    9e38:	ldr	x3, [sp, #24]
    9e3c:	ldr	x2, [sp, #32]
    9e40:	ldr	w1, [sp, #3772]
    9e44:	ldr	x0, [sp, #40]
    9e48:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    9e4c:	mov	w1, w0
    9e50:	add	x0, sp, #0x3c
    9e54:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9e58:	and	w0, w0, #0xff
    9e5c:	eor	w0, w0, #0x1
    9e60:	and	w0, w0, #0xff
    9e64:	cmp	w0, #0x0
    9e68:	b.eq	9e74 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4f04>  // b.none
    9e6c:	mov	w0, #0x0                   	// #0
    9e70:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9e74:	ldr	w0, [sp, #60]
    9e78:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9e7c:	mov	w2, #0x5                   	// #5
    9e80:	mov	w1, #0x0                   	// #0
    9e84:	ldr	w0, [sp, #52]
    9e88:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9e8c:	str	w0, [sp, #3772]
    9e90:	ldr	x3, [sp, #24]
    9e94:	ldr	x2, [sp, #32]
    9e98:	ldr	w1, [sp, #3772]
    9e9c:	ldr	x0, [sp, #40]
    9ea0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    9ea4:	mov	w1, w0
    9ea8:	add	x0, sp, #0x3c
    9eac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9eb0:	and	w0, w0, #0xff
    9eb4:	eor	w0, w0, #0x1
    9eb8:	and	w0, w0, #0xff
    9ebc:	cmp	w0, #0x0
    9ec0:	b.eq	9ecc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4f5c>  // b.none
    9ec4:	mov	w0, #0x0                   	// #0
    9ec8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9ecc:	mov	w2, #0x5                   	// #5
    9ed0:	mov	w1, #0x0                   	// #0
    9ed4:	ldr	w0, [sp, #52]
    9ed8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9edc:	str	w0, [sp, #3772]
    9ee0:	ldr	x3, [sp, #24]
    9ee4:	ldr	x2, [sp, #32]
    9ee8:	ldr	w1, [sp, #3772]
    9eec:	ldr	x0, [sp, #40]
    9ef0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    9ef4:	mov	w1, w0
    9ef8:	add	x0, sp, #0x3c
    9efc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9f00:	and	w0, w0, #0xff
    9f04:	eor	w0, w0, #0x1
    9f08:	and	w0, w0, #0xff
    9f0c:	cmp	w0, #0x0
    9f10:	b.eq	9f1c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4fac>  // b.none
    9f14:	mov	w0, #0x0                   	// #0
    9f18:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9f1c:	mov	w2, #0x3                   	// #3
    9f20:	mov	w1, #0xa                   	// #10
    9f24:	ldr	w0, [sp, #52]
    9f28:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9f2c:	str	w0, [sp, #3772]
    9f30:	ldr	x3, [sp, #24]
    9f34:	ldr	x2, [sp, #32]
    9f38:	ldr	w1, [sp, #3772]
    9f3c:	ldr	x0, [sp, #40]
    9f40:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    9f44:	mov	w1, w0
    9f48:	add	x0, sp, #0x3c
    9f4c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9f50:	and	w0, w0, #0xff
    9f54:	eor	w0, w0, #0x1
    9f58:	and	w0, w0, #0xff
    9f5c:	cmp	w0, #0x0
    9f60:	b.eq	9f6c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x4ffc>  // b.none
    9f64:	mov	w0, #0x0                   	// #0
    9f68:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9f6c:	mov	w2, #0x5                   	// #5
    9f70:	mov	w1, #0x5                   	// #5
    9f74:	ldr	w0, [sp, #52]
    9f78:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9f7c:	str	w0, [sp, #3772]
    9f80:	ldr	x3, [sp, #24]
    9f84:	ldr	x2, [sp, #32]
    9f88:	ldr	w1, [sp, #3772]
    9f8c:	ldr	x0, [sp, #40]
    9f90:	bl	c48 <_ZL26DecodeGPR32spRegisterClassRN4llvm6MCInstEjmPKv>
    9f94:	mov	w1, w0
    9f98:	add	x0, sp, #0x3c
    9f9c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9fa0:	and	w0, w0, #0xff
    9fa4:	eor	w0, w0, #0x1
    9fa8:	and	w0, w0, #0xff
    9fac:	cmp	w0, #0x0
    9fb0:	b.eq	9fbc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x504c>  // b.none
    9fb4:	mov	w0, #0x0                   	// #0
    9fb8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9fbc:	ldr	w0, [sp, #60]
    9fc0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    9fc4:	mov	w2, #0x5                   	// #5
    9fc8:	mov	w1, #0x0                   	// #0
    9fcc:	ldr	w0, [sp, #52]
    9fd0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    9fd4:	str	w0, [sp, #3772]
    9fd8:	ldr	x3, [sp, #24]
    9fdc:	ldr	x2, [sp, #32]
    9fe0:	ldr	w1, [sp, #3772]
    9fe4:	ldr	x0, [sp, #40]
    9fe8:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
    9fec:	mov	w1, w0
    9ff0:	add	x0, sp, #0x3c
    9ff4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    9ff8:	and	w0, w0, #0xff
    9ffc:	eor	w0, w0, #0x1
    a000:	and	w0, w0, #0xff
    a004:	cmp	w0, #0x0
    a008:	b.eq	a014 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x50a4>  // b.none
    a00c:	mov	w0, #0x0                   	// #0
    a010:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a014:	mov	w2, #0x3                   	// #3
    a018:	mov	w1, #0xa                   	// #10
    a01c:	ldr	w0, [sp, #52]
    a020:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a024:	str	w0, [sp, #3772]
    a028:	ldr	x3, [sp, #24]
    a02c:	ldr	x2, [sp, #32]
    a030:	ldr	w1, [sp, #3772]
    a034:	ldr	x0, [sp, #40]
    a038:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    a03c:	mov	w1, w0
    a040:	add	x0, sp, #0x3c
    a044:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a048:	and	w0, w0, #0xff
    a04c:	eor	w0, w0, #0x1
    a050:	and	w0, w0, #0xff
    a054:	cmp	w0, #0x0
    a058:	b.eq	a064 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x50f4>  // b.none
    a05c:	mov	w0, #0x0                   	// #0
    a060:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a064:	mov	w2, #0x5                   	// #5
    a068:	mov	w1, #0x0                   	// #0
    a06c:	ldr	w0, [sp, #52]
    a070:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a074:	str	w0, [sp, #3772]
    a078:	ldr	x3, [sp, #24]
    a07c:	ldr	x2, [sp, #32]
    a080:	ldr	w1, [sp, #3772]
    a084:	ldr	x0, [sp, #40]
    a088:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
    a08c:	mov	w1, w0
    a090:	add	x0, sp, #0x3c
    a094:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a098:	and	w0, w0, #0xff
    a09c:	eor	w0, w0, #0x1
    a0a0:	and	w0, w0, #0xff
    a0a4:	cmp	w0, #0x0
    a0a8:	b.eq	a0b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5144>  // b.none
    a0ac:	mov	w0, #0x0                   	// #0
    a0b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a0b4:	mov	w2, #0x5                   	// #5
    a0b8:	mov	w1, #0x5                   	// #5
    a0bc:	ldr	w0, [sp, #52]
    a0c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a0c4:	str	w0, [sp, #3772]
    a0c8:	ldr	x3, [sp, #24]
    a0cc:	ldr	x2, [sp, #32]
    a0d0:	ldr	w1, [sp, #3772]
    a0d4:	ldr	x0, [sp, #40]
    a0d8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    a0dc:	mov	w1, w0
    a0e0:	add	x0, sp, #0x3c
    a0e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a0e8:	and	w0, w0, #0xff
    a0ec:	eor	w0, w0, #0x1
    a0f0:	and	w0, w0, #0xff
    a0f4:	cmp	w0, #0x0
    a0f8:	b.eq	a104 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5194>  // b.none
    a0fc:	mov	w0, #0x0                   	// #0
    a100:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a104:	ldr	w0, [sp, #60]
    a108:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a10c:	mov	w2, #0x5                   	// #5
    a110:	mov	w1, #0x0                   	// #0
    a114:	ldr	w0, [sp, #52]
    a118:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a11c:	str	w0, [sp, #3772]
    a120:	ldr	x3, [sp, #24]
    a124:	ldr	x2, [sp, #32]
    a128:	ldr	w1, [sp, #3772]
    a12c:	ldr	x0, [sp, #40]
    a130:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
    a134:	mov	w1, w0
    a138:	add	x0, sp, #0x3c
    a13c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a140:	and	w0, w0, #0xff
    a144:	eor	w0, w0, #0x1
    a148:	and	w0, w0, #0xff
    a14c:	cmp	w0, #0x0
    a150:	b.eq	a15c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x51ec>  // b.none
    a154:	mov	w0, #0x0                   	// #0
    a158:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a15c:	mov	w2, #0x3                   	// #3
    a160:	mov	w1, #0xa                   	// #10
    a164:	ldr	w0, [sp, #52]
    a168:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a16c:	str	w0, [sp, #3772]
    a170:	ldr	x3, [sp, #24]
    a174:	ldr	x2, [sp, #32]
    a178:	ldr	w1, [sp, #3772]
    a17c:	ldr	x0, [sp, #40]
    a180:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    a184:	mov	w1, w0
    a188:	add	x0, sp, #0x3c
    a18c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a190:	and	w0, w0, #0xff
    a194:	eor	w0, w0, #0x1
    a198:	and	w0, w0, #0xff
    a19c:	cmp	w0, #0x0
    a1a0:	b.eq	a1ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x523c>  // b.none
    a1a4:	mov	w0, #0x0                   	// #0
    a1a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a1ac:	mov	w2, #0x5                   	// #5
    a1b0:	mov	w1, #0x0                   	// #0
    a1b4:	ldr	w0, [sp, #52]
    a1b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a1bc:	str	w0, [sp, #3772]
    a1c0:	ldr	x3, [sp, #24]
    a1c4:	ldr	x2, [sp, #32]
    a1c8:	ldr	w1, [sp, #3772]
    a1cc:	ldr	x0, [sp, #40]
    a1d0:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
    a1d4:	mov	w1, w0
    a1d8:	add	x0, sp, #0x3c
    a1dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a1e0:	and	w0, w0, #0xff
    a1e4:	eor	w0, w0, #0x1
    a1e8:	and	w0, w0, #0xff
    a1ec:	cmp	w0, #0x0
    a1f0:	b.eq	a1fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x528c>  // b.none
    a1f4:	mov	w0, #0x0                   	// #0
    a1f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a1fc:	mov	w2, #0x5                   	// #5
    a200:	mov	w1, #0x5                   	// #5
    a204:	ldr	w0, [sp, #52]
    a208:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a20c:	str	w0, [sp, #3772]
    a210:	ldr	x3, [sp, #24]
    a214:	ldr	x2, [sp, #32]
    a218:	ldr	w1, [sp, #3772]
    a21c:	ldr	x0, [sp, #40]
    a220:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    a224:	mov	w1, w0
    a228:	add	x0, sp, #0x3c
    a22c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a230:	and	w0, w0, #0xff
    a234:	eor	w0, w0, #0x1
    a238:	and	w0, w0, #0xff
    a23c:	cmp	w0, #0x0
    a240:	b.eq	a24c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x52dc>  // b.none
    a244:	mov	w0, #0x0                   	// #0
    a248:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a24c:	ldr	w0, [sp, #60]
    a250:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a254:	mov	w2, #0x5                   	// #5
    a258:	mov	w1, #0x0                   	// #0
    a25c:	ldr	w0, [sp, #52]
    a260:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a264:	str	w0, [sp, #3772]
    a268:	ldr	x3, [sp, #24]
    a26c:	ldr	x2, [sp, #32]
    a270:	ldr	w1, [sp, #3772]
    a274:	ldr	x0, [sp, #40]
    a278:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    a27c:	mov	w1, w0
    a280:	add	x0, sp, #0x3c
    a284:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a288:	and	w0, w0, #0xff
    a28c:	eor	w0, w0, #0x1
    a290:	and	w0, w0, #0xff
    a294:	cmp	w0, #0x0
    a298:	b.eq	a2a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5334>  // b.none
    a29c:	mov	w0, #0x0                   	// #0
    a2a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a2a4:	mov	w2, #0x3                   	// #3
    a2a8:	mov	w1, #0xa                   	// #10
    a2ac:	ldr	w0, [sp, #52]
    a2b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a2b4:	str	w0, [sp, #3772]
    a2b8:	ldr	x3, [sp, #24]
    a2bc:	ldr	x2, [sp, #32]
    a2c0:	ldr	w1, [sp, #3772]
    a2c4:	ldr	x0, [sp, #40]
    a2c8:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    a2cc:	mov	w1, w0
    a2d0:	add	x0, sp, #0x3c
    a2d4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a2d8:	and	w0, w0, #0xff
    a2dc:	eor	w0, w0, #0x1
    a2e0:	and	w0, w0, #0xff
    a2e4:	cmp	w0, #0x0
    a2e8:	b.eq	a2f4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5384>  // b.none
    a2ec:	mov	w0, #0x0                   	// #0
    a2f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a2f4:	mov	w2, #0x5                   	// #5
    a2f8:	mov	w1, #0x5                   	// #5
    a2fc:	ldr	w0, [sp, #52]
    a300:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a304:	str	w0, [sp, #3772]
    a308:	ldr	x3, [sp, #24]
    a30c:	ldr	x2, [sp, #32]
    a310:	ldr	w1, [sp, #3772]
    a314:	ldr	x0, [sp, #40]
    a318:	bl	dc4 <_ZL23DecodeZPR2RegisterClassRN4llvm6MCInstEjmPKv>
    a31c:	mov	w1, w0
    a320:	add	x0, sp, #0x3c
    a324:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a328:	and	w0, w0, #0xff
    a32c:	eor	w0, w0, #0x1
    a330:	and	w0, w0, #0xff
    a334:	cmp	w0, #0x0
    a338:	b.eq	a344 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x53d4>  // b.none
    a33c:	mov	w0, #0x0                   	// #0
    a340:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a344:	ldr	w0, [sp, #60]
    a348:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a34c:	mov	w2, #0x5                   	// #5
    a350:	mov	w1, #0x0                   	// #0
    a354:	ldr	w0, [sp, #52]
    a358:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a35c:	str	w0, [sp, #3772]
    a360:	ldr	x3, [sp, #24]
    a364:	ldr	x2, [sp, #32]
    a368:	ldr	w1, [sp, #3772]
    a36c:	ldr	x0, [sp, #40]
    a370:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    a374:	mov	w1, w0
    a378:	add	x0, sp, #0x3c
    a37c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a380:	and	w0, w0, #0xff
    a384:	eor	w0, w0, #0x1
    a388:	and	w0, w0, #0xff
    a38c:	cmp	w0, #0x0
    a390:	b.eq	a39c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x542c>  // b.none
    a394:	mov	w0, #0x0                   	// #0
    a398:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a39c:	mov	w2, #0x3                   	// #3
    a3a0:	mov	w1, #0xa                   	// #10
    a3a4:	ldr	w0, [sp, #52]
    a3a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a3ac:	str	w0, [sp, #3772]
    a3b0:	ldr	x3, [sp, #24]
    a3b4:	ldr	x2, [sp, #32]
    a3b8:	ldr	w1, [sp, #3772]
    a3bc:	ldr	x0, [sp, #40]
    a3c0:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    a3c4:	mov	w1, w0
    a3c8:	add	x0, sp, #0x3c
    a3cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a3d0:	and	w0, w0, #0xff
    a3d4:	eor	w0, w0, #0x1
    a3d8:	and	w0, w0, #0xff
    a3dc:	cmp	w0, #0x0
    a3e0:	b.eq	a3ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x547c>  // b.none
    a3e4:	mov	w0, #0x0                   	// #0
    a3e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a3ec:	mov	w2, #0x5                   	// #5
    a3f0:	mov	w1, #0x0                   	// #0
    a3f4:	ldr	w0, [sp, #52]
    a3f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a3fc:	str	w0, [sp, #3772]
    a400:	ldr	x3, [sp, #24]
    a404:	ldr	x2, [sp, #32]
    a408:	ldr	w1, [sp, #3772]
    a40c:	ldr	x0, [sp, #40]
    a410:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    a414:	mov	w1, w0
    a418:	add	x0, sp, #0x3c
    a41c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a420:	and	w0, w0, #0xff
    a424:	eor	w0, w0, #0x1
    a428:	and	w0, w0, #0xff
    a42c:	cmp	w0, #0x0
    a430:	b.eq	a43c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x54cc>  // b.none
    a434:	mov	w0, #0x0                   	// #0
    a438:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a43c:	mov	w2, #0x5                   	// #5
    a440:	mov	w1, #0x5                   	// #5
    a444:	ldr	w0, [sp, #52]
    a448:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a44c:	str	w0, [sp, #3772]
    a450:	ldr	x3, [sp, #24]
    a454:	ldr	x2, [sp, #32]
    a458:	ldr	w1, [sp, #3772]
    a45c:	ldr	x0, [sp, #40]
    a460:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    a464:	mov	w1, w0
    a468:	add	x0, sp, #0x3c
    a46c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a470:	and	w0, w0, #0xff
    a474:	eor	w0, w0, #0x1
    a478:	and	w0, w0, #0xff
    a47c:	cmp	w0, #0x0
    a480:	b.eq	a48c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x551c>  // b.none
    a484:	mov	w0, #0x0                   	// #0
    a488:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a48c:	ldr	w0, [sp, #60]
    a490:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a494:	mov	w2, #0x5                   	// #5
    a498:	mov	w1, #0x0                   	// #0
    a49c:	ldr	w0, [sp, #52]
    a4a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a4a4:	str	w0, [sp, #3772]
    a4a8:	ldr	x3, [sp, #24]
    a4ac:	ldr	x2, [sp, #32]
    a4b0:	ldr	w1, [sp, #3772]
    a4b4:	ldr	x0, [sp, #40]
    a4b8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    a4bc:	mov	w1, w0
    a4c0:	add	x0, sp, #0x3c
    a4c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a4c8:	and	w0, w0, #0xff
    a4cc:	eor	w0, w0, #0x1
    a4d0:	and	w0, w0, #0xff
    a4d4:	cmp	w0, #0x0
    a4d8:	b.eq	a4e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5574>  // b.none
    a4dc:	mov	w0, #0x0                   	// #0
    a4e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a4e4:	mov	w2, #0x5                   	// #5
    a4e8:	mov	w1, #0x0                   	// #0
    a4ec:	ldr	w0, [sp, #52]
    a4f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a4f4:	str	w0, [sp, #3772]
    a4f8:	ldr	x3, [sp, #24]
    a4fc:	ldr	x2, [sp, #32]
    a500:	ldr	w1, [sp, #3772]
    a504:	ldr	x0, [sp, #40]
    a508:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    a50c:	mov	w1, w0
    a510:	add	x0, sp, #0x3c
    a514:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a518:	and	w0, w0, #0xff
    a51c:	eor	w0, w0, #0x1
    a520:	and	w0, w0, #0xff
    a524:	cmp	w0, #0x0
    a528:	b.eq	a534 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x55c4>  // b.none
    a52c:	mov	w0, #0x0                   	// #0
    a530:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a534:	mov	w2, #0x3                   	// #3
    a538:	mov	w1, #0xa                   	// #10
    a53c:	ldr	w0, [sp, #52]
    a540:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a544:	str	w0, [sp, #3772]
    a548:	ldr	x3, [sp, #24]
    a54c:	ldr	x2, [sp, #32]
    a550:	ldr	w1, [sp, #3772]
    a554:	ldr	x0, [sp, #40]
    a558:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    a55c:	mov	w1, w0
    a560:	add	x0, sp, #0x3c
    a564:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a568:	and	w0, w0, #0xff
    a56c:	eor	w0, w0, #0x1
    a570:	and	w0, w0, #0xff
    a574:	cmp	w0, #0x0
    a578:	b.eq	a584 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5614>  // b.none
    a57c:	mov	w0, #0x0                   	// #0
    a580:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a584:	mov	w2, #0x5                   	// #5
    a588:	mov	w1, #0x5                   	// #5
    a58c:	ldr	w0, [sp, #52]
    a590:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a594:	str	w0, [sp, #3772]
    a598:	ldr	x3, [sp, #24]
    a59c:	ldr	x2, [sp, #32]
    a5a0:	ldr	w1, [sp, #3772]
    a5a4:	ldr	x0, [sp, #40]
    a5a8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
    a5ac:	mov	w1, w0
    a5b0:	add	x0, sp, #0x3c
    a5b4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a5b8:	and	w0, w0, #0xff
    a5bc:	eor	w0, w0, #0x1
    a5c0:	and	w0, w0, #0xff
    a5c4:	cmp	w0, #0x0
    a5c8:	b.eq	a5d4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5664>  // b.none
    a5cc:	mov	w0, #0x0                   	// #0
    a5d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a5d4:	ldr	w0, [sp, #60]
    a5d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a5dc:	mov	w2, #0x5                   	// #5
    a5e0:	mov	w1, #0x0                   	// #0
    a5e4:	ldr	w0, [sp, #52]
    a5e8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a5ec:	str	w0, [sp, #3772]
    a5f0:	ldr	x3, [sp, #24]
    a5f4:	ldr	x2, [sp, #32]
    a5f8:	ldr	w1, [sp, #3772]
    a5fc:	ldr	x0, [sp, #40]
    a600:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    a604:	mov	w1, w0
    a608:	add	x0, sp, #0x3c
    a60c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a610:	and	w0, w0, #0xff
    a614:	eor	w0, w0, #0x1
    a618:	and	w0, w0, #0xff
    a61c:	cmp	w0, #0x0
    a620:	b.eq	a62c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x56bc>  // b.none
    a624:	mov	w0, #0x0                   	// #0
    a628:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a62c:	mov	w2, #0x5                   	// #5
    a630:	mov	w1, #0x0                   	// #0
    a634:	ldr	w0, [sp, #52]
    a638:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a63c:	str	w0, [sp, #3772]
    a640:	ldr	x3, [sp, #24]
    a644:	ldr	x2, [sp, #32]
    a648:	ldr	w1, [sp, #3772]
    a64c:	ldr	x0, [sp, #40]
    a650:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    a654:	mov	w1, w0
    a658:	add	x0, sp, #0x3c
    a65c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a660:	and	w0, w0, #0xff
    a664:	eor	w0, w0, #0x1
    a668:	and	w0, w0, #0xff
    a66c:	cmp	w0, #0x0
    a670:	b.eq	a67c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x570c>  // b.none
    a674:	mov	w0, #0x0                   	// #0
    a678:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a67c:	mov	w2, #0x3                   	// #3
    a680:	mov	w1, #0xa                   	// #10
    a684:	ldr	w0, [sp, #52]
    a688:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a68c:	str	w0, [sp, #3772]
    a690:	ldr	x3, [sp, #24]
    a694:	ldr	x2, [sp, #32]
    a698:	ldr	w1, [sp, #3772]
    a69c:	ldr	x0, [sp, #40]
    a6a0:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    a6a4:	mov	w1, w0
    a6a8:	add	x0, sp, #0x3c
    a6ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a6b0:	and	w0, w0, #0xff
    a6b4:	eor	w0, w0, #0x1
    a6b8:	and	w0, w0, #0xff
    a6bc:	cmp	w0, #0x0
    a6c0:	b.eq	a6cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x575c>  // b.none
    a6c4:	mov	w0, #0x0                   	// #0
    a6c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a6cc:	mov	w2, #0x5                   	// #5
    a6d0:	mov	w1, #0x5                   	// #5
    a6d4:	ldr	w0, [sp, #52]
    a6d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a6dc:	str	w0, [sp, #3772]
    a6e0:	ldr	x3, [sp, #24]
    a6e4:	ldr	x2, [sp, #32]
    a6e8:	ldr	w1, [sp, #3772]
    a6ec:	ldr	x0, [sp, #40]
    a6f0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
    a6f4:	mov	w1, w0
    a6f8:	add	x0, sp, #0x3c
    a6fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a700:	and	w0, w0, #0xff
    a704:	eor	w0, w0, #0x1
    a708:	and	w0, w0, #0xff
    a70c:	cmp	w0, #0x0
    a710:	b.eq	a71c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x57ac>  // b.none
    a714:	mov	w0, #0x0                   	// #0
    a718:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a71c:	ldr	w0, [sp, #60]
    a720:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a724:	mov	w2, #0x5                   	// #5
    a728:	mov	w1, #0x0                   	// #0
    a72c:	ldr	w0, [sp, #52]
    a730:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a734:	str	w0, [sp, #3772]
    a738:	ldr	x3, [sp, #24]
    a73c:	ldr	x2, [sp, #32]
    a740:	ldr	w1, [sp, #3772]
    a744:	ldr	x0, [sp, #40]
    a748:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    a74c:	mov	w1, w0
    a750:	add	x0, sp, #0x3c
    a754:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a758:	and	w0, w0, #0xff
    a75c:	eor	w0, w0, #0x1
    a760:	and	w0, w0, #0xff
    a764:	cmp	w0, #0x0
    a768:	b.eq	a774 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5804>  // b.none
    a76c:	mov	w0, #0x0                   	// #0
    a770:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a774:	mov	w2, #0x3                   	// #3
    a778:	mov	w1, #0xa                   	// #10
    a77c:	ldr	w0, [sp, #52]
    a780:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a784:	str	w0, [sp, #3772]
    a788:	ldr	x3, [sp, #24]
    a78c:	ldr	x2, [sp, #32]
    a790:	ldr	w1, [sp, #3772]
    a794:	ldr	x0, [sp, #40]
    a798:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    a79c:	mov	w1, w0
    a7a0:	add	x0, sp, #0x3c
    a7a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a7a8:	and	w0, w0, #0xff
    a7ac:	eor	w0, w0, #0x1
    a7b0:	and	w0, w0, #0xff
    a7b4:	cmp	w0, #0x0
    a7b8:	b.eq	a7c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5854>  // b.none
    a7bc:	mov	w0, #0x0                   	// #0
    a7c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a7c4:	mov	w2, #0x5                   	// #5
    a7c8:	mov	w1, #0x5                   	// #5
    a7cc:	ldr	w0, [sp, #52]
    a7d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a7d4:	str	w0, [sp, #3772]
    a7d8:	ldr	x3, [sp, #24]
    a7dc:	ldr	x2, [sp, #32]
    a7e0:	ldr	w1, [sp, #3772]
    a7e4:	ldr	x0, [sp, #40]
    a7e8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    a7ec:	mov	w1, w0
    a7f0:	add	x0, sp, #0x3c
    a7f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a7f8:	and	w0, w0, #0xff
    a7fc:	eor	w0, w0, #0x1
    a800:	and	w0, w0, #0xff
    a804:	cmp	w0, #0x0
    a808:	b.eq	a814 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x58a4>  // b.none
    a80c:	mov	w0, #0x0                   	// #0
    a810:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a814:	ldr	w0, [sp, #60]
    a818:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a81c:	mov	w2, #0x5                   	// #5
    a820:	mov	w1, #0x0                   	// #0
    a824:	ldr	w0, [sp, #52]
    a828:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a82c:	str	w0, [sp, #3772]
    a830:	ldr	x3, [sp, #24]
    a834:	ldr	x2, [sp, #32]
    a838:	ldr	w1, [sp, #3772]
    a83c:	ldr	x0, [sp, #40]
    a840:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    a844:	mov	w1, w0
    a848:	add	x0, sp, #0x3c
    a84c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a850:	and	w0, w0, #0xff
    a854:	eor	w0, w0, #0x1
    a858:	and	w0, w0, #0xff
    a85c:	cmp	w0, #0x0
    a860:	b.eq	a86c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x58fc>  // b.none
    a864:	mov	w0, #0x0                   	// #0
    a868:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a86c:	mov	w2, #0x5                   	// #5
    a870:	mov	w1, #0x0                   	// #0
    a874:	ldr	w0, [sp, #52]
    a878:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a87c:	str	w0, [sp, #3772]
    a880:	ldr	x3, [sp, #24]
    a884:	ldr	x2, [sp, #32]
    a888:	ldr	w1, [sp, #3772]
    a88c:	ldr	x0, [sp, #40]
    a890:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    a894:	mov	w1, w0
    a898:	add	x0, sp, #0x3c
    a89c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a8a0:	and	w0, w0, #0xff
    a8a4:	eor	w0, w0, #0x1
    a8a8:	and	w0, w0, #0xff
    a8ac:	cmp	w0, #0x0
    a8b0:	b.eq	a8bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x594c>  // b.none
    a8b4:	mov	w0, #0x0                   	// #0
    a8b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a8bc:	mov	w2, #0x3                   	// #3
    a8c0:	mov	w1, #0xa                   	// #10
    a8c4:	ldr	w0, [sp, #52]
    a8c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a8cc:	str	w0, [sp, #3772]
    a8d0:	ldr	x3, [sp, #24]
    a8d4:	ldr	x2, [sp, #32]
    a8d8:	ldr	w1, [sp, #3772]
    a8dc:	ldr	x0, [sp, #40]
    a8e0:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    a8e4:	mov	w1, w0
    a8e8:	add	x0, sp, #0x3c
    a8ec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a8f0:	and	w0, w0, #0xff
    a8f4:	eor	w0, w0, #0x1
    a8f8:	and	w0, w0, #0xff
    a8fc:	cmp	w0, #0x0
    a900:	b.eq	a90c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x599c>  // b.none
    a904:	mov	w0, #0x0                   	// #0
    a908:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a90c:	mov	w2, #0x5                   	// #5
    a910:	mov	w1, #0x5                   	// #5
    a914:	ldr	w0, [sp, #52]
    a918:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a91c:	str	w0, [sp, #3772]
    a920:	ldr	x3, [sp, #24]
    a924:	ldr	x2, [sp, #32]
    a928:	ldr	w1, [sp, #3772]
    a92c:	ldr	x0, [sp, #40]
    a930:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    a934:	mov	w1, w0
    a938:	add	x0, sp, #0x3c
    a93c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a940:	and	w0, w0, #0xff
    a944:	eor	w0, w0, #0x1
    a948:	and	w0, w0, #0xff
    a94c:	cmp	w0, #0x0
    a950:	b.eq	a95c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x59ec>  // b.none
    a954:	mov	w0, #0x0                   	// #0
    a958:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a95c:	ldr	w0, [sp, #60]
    a960:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a964:	mov	w2, #0x5                   	// #5
    a968:	mov	w1, #0x0                   	// #0
    a96c:	ldr	w0, [sp, #52]
    a970:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a974:	str	w0, [sp, #3772]
    a978:	ldr	x3, [sp, #24]
    a97c:	ldr	x2, [sp, #32]
    a980:	ldr	w1, [sp, #3772]
    a984:	ldr	x0, [sp, #40]
    a988:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
    a98c:	mov	w1, w0
    a990:	add	x0, sp, #0x3c
    a994:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a998:	and	w0, w0, #0xff
    a99c:	eor	w0, w0, #0x1
    a9a0:	and	w0, w0, #0xff
    a9a4:	cmp	w0, #0x0
    a9a8:	b.eq	a9b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5a44>  // b.none
    a9ac:	mov	w0, #0x0                   	// #0
    a9b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    a9b4:	mov	w2, #0x3                   	// #3
    a9b8:	mov	w1, #0xa                   	// #10
    a9bc:	ldr	w0, [sp, #52]
    a9c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    a9c4:	str	w0, [sp, #3772]
    a9c8:	ldr	x3, [sp, #24]
    a9cc:	ldr	x2, [sp, #32]
    a9d0:	ldr	w1, [sp, #3772]
    a9d4:	ldr	x0, [sp, #40]
    a9d8:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    a9dc:	mov	w1, w0
    a9e0:	add	x0, sp, #0x3c
    a9e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    a9e8:	and	w0, w0, #0xff
    a9ec:	eor	w0, w0, #0x1
    a9f0:	and	w0, w0, #0xff
    a9f4:	cmp	w0, #0x0
    a9f8:	b.eq	aa04 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5a94>  // b.none
    a9fc:	mov	w0, #0x0                   	// #0
    aa00:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    aa04:	mov	w2, #0x5                   	// #5
    aa08:	mov	w1, #0x0                   	// #0
    aa0c:	ldr	w0, [sp, #52]
    aa10:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    aa14:	str	w0, [sp, #3772]
    aa18:	ldr	x3, [sp, #24]
    aa1c:	ldr	x2, [sp, #32]
    aa20:	ldr	w1, [sp, #3772]
    aa24:	ldr	x0, [sp, #40]
    aa28:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
    aa2c:	mov	w1, w0
    aa30:	add	x0, sp, #0x3c
    aa34:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    aa38:	and	w0, w0, #0xff
    aa3c:	eor	w0, w0, #0x1
    aa40:	and	w0, w0, #0xff
    aa44:	cmp	w0, #0x0
    aa48:	b.eq	aa54 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5ae4>  // b.none
    aa4c:	mov	w0, #0x0                   	// #0
    aa50:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    aa54:	mov	w2, #0x5                   	// #5
    aa58:	mov	w1, #0x5                   	// #5
    aa5c:	ldr	w0, [sp, #52]
    aa60:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    aa64:	str	w0, [sp, #3772]
    aa68:	ldr	x3, [sp, #24]
    aa6c:	ldr	x2, [sp, #32]
    aa70:	ldr	w1, [sp, #3772]
    aa74:	ldr	x0, [sp, #40]
    aa78:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    aa7c:	mov	w1, w0
    aa80:	add	x0, sp, #0x3c
    aa84:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    aa88:	and	w0, w0, #0xff
    aa8c:	eor	w0, w0, #0x1
    aa90:	and	w0, w0, #0xff
    aa94:	cmp	w0, #0x0
    aa98:	b.eq	aaa4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5b34>  // b.none
    aa9c:	mov	w0, #0x0                   	// #0
    aaa0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    aaa4:	ldr	w0, [sp, #60]
    aaa8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    aaac:	mov	w2, #0x5                   	// #5
    aab0:	mov	w1, #0x0                   	// #0
    aab4:	ldr	w0, [sp, #52]
    aab8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    aabc:	str	w0, [sp, #3772]
    aac0:	ldr	x3, [sp, #24]
    aac4:	ldr	x2, [sp, #32]
    aac8:	ldr	w1, [sp, #3772]
    aacc:	ldr	x0, [sp, #40]
    aad0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
    aad4:	mov	w1, w0
    aad8:	add	x0, sp, #0x3c
    aadc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    aae0:	and	w0, w0, #0xff
    aae4:	eor	w0, w0, #0x1
    aae8:	and	w0, w0, #0xff
    aaec:	cmp	w0, #0x0
    aaf0:	b.eq	aafc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5b8c>  // b.none
    aaf4:	mov	w0, #0x0                   	// #0
    aaf8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    aafc:	mov	w2, #0x3                   	// #3
    ab00:	mov	w1, #0xa                   	// #10
    ab04:	ldr	w0, [sp, #52]
    ab08:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ab0c:	str	w0, [sp, #3772]
    ab10:	ldr	x3, [sp, #24]
    ab14:	ldr	x2, [sp, #32]
    ab18:	ldr	w1, [sp, #3772]
    ab1c:	ldr	x0, [sp, #40]
    ab20:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    ab24:	mov	w1, w0
    ab28:	add	x0, sp, #0x3c
    ab2c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ab30:	and	w0, w0, #0xff
    ab34:	eor	w0, w0, #0x1
    ab38:	and	w0, w0, #0xff
    ab3c:	cmp	w0, #0x0
    ab40:	b.eq	ab4c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5bdc>  // b.none
    ab44:	mov	w0, #0x0                   	// #0
    ab48:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ab4c:	mov	w2, #0x5                   	// #5
    ab50:	mov	w1, #0x0                   	// #0
    ab54:	ldr	w0, [sp, #52]
    ab58:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ab5c:	str	w0, [sp, #3772]
    ab60:	ldr	x3, [sp, #24]
    ab64:	ldr	x2, [sp, #32]
    ab68:	ldr	w1, [sp, #3772]
    ab6c:	ldr	x0, [sp, #40]
    ab70:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
    ab74:	mov	w1, w0
    ab78:	add	x0, sp, #0x3c
    ab7c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ab80:	and	w0, w0, #0xff
    ab84:	eor	w0, w0, #0x1
    ab88:	and	w0, w0, #0xff
    ab8c:	cmp	w0, #0x0
    ab90:	b.eq	ab9c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5c2c>  // b.none
    ab94:	mov	w0, #0x0                   	// #0
    ab98:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ab9c:	mov	w2, #0x5                   	// #5
    aba0:	mov	w1, #0x5                   	// #5
    aba4:	ldr	w0, [sp, #52]
    aba8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    abac:	str	w0, [sp, #3772]
    abb0:	ldr	x3, [sp, #24]
    abb4:	ldr	x2, [sp, #32]
    abb8:	ldr	w1, [sp, #3772]
    abbc:	ldr	x0, [sp, #40]
    abc0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    abc4:	mov	w1, w0
    abc8:	add	x0, sp, #0x3c
    abcc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    abd0:	and	w0, w0, #0xff
    abd4:	eor	w0, w0, #0x1
    abd8:	and	w0, w0, #0xff
    abdc:	cmp	w0, #0x0
    abe0:	b.eq	abec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5c7c>  // b.none
    abe4:	mov	w0, #0x0                   	// #0
    abe8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    abec:	ldr	w0, [sp, #60]
    abf0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    abf4:	mov	w2, #0x5                   	// #5
    abf8:	mov	w1, #0x0                   	// #0
    abfc:	ldr	w0, [sp, #52]
    ac00:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ac04:	str	w0, [sp, #3772]
    ac08:	ldr	x3, [sp, #24]
    ac0c:	ldr	x2, [sp, #32]
    ac10:	ldr	w1, [sp, #3772]
    ac14:	ldr	x0, [sp, #40]
    ac18:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    ac1c:	mov	w1, w0
    ac20:	add	x0, sp, #0x3c
    ac24:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ac28:	and	w0, w0, #0xff
    ac2c:	eor	w0, w0, #0x1
    ac30:	and	w0, w0, #0xff
    ac34:	cmp	w0, #0x0
    ac38:	b.eq	ac44 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5cd4>  // b.none
    ac3c:	mov	w0, #0x0                   	// #0
    ac40:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ac44:	mov	w2, #0x3                   	// #3
    ac48:	mov	w1, #0xa                   	// #10
    ac4c:	ldr	w0, [sp, #52]
    ac50:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ac54:	str	w0, [sp, #3772]
    ac58:	ldr	x3, [sp, #24]
    ac5c:	ldr	x2, [sp, #32]
    ac60:	ldr	w1, [sp, #3772]
    ac64:	ldr	x0, [sp, #40]
    ac68:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    ac6c:	mov	w1, w0
    ac70:	add	x0, sp, #0x3c
    ac74:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ac78:	and	w0, w0, #0xff
    ac7c:	eor	w0, w0, #0x1
    ac80:	and	w0, w0, #0xff
    ac84:	cmp	w0, #0x0
    ac88:	b.eq	ac94 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5d24>  // b.none
    ac8c:	mov	w0, #0x0                   	// #0
    ac90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ac94:	mov	w2, #0x5                   	// #5
    ac98:	mov	w1, #0x0                   	// #0
    ac9c:	ldr	w0, [sp, #52]
    aca0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    aca4:	str	w0, [sp, #3772]
    aca8:	ldr	x3, [sp, #24]
    acac:	ldr	x2, [sp, #32]
    acb0:	ldr	w1, [sp, #3772]
    acb4:	ldr	x0, [sp, #40]
    acb8:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    acbc:	mov	w1, w0
    acc0:	add	x0, sp, #0x3c
    acc4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    acc8:	and	w0, w0, #0xff
    accc:	eor	w0, w0, #0x1
    acd0:	and	w0, w0, #0xff
    acd4:	cmp	w0, #0x0
    acd8:	b.eq	ace4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5d74>  // b.none
    acdc:	mov	w0, #0x0                   	// #0
    ace0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ace4:	mov	w2, #0x5                   	// #5
    ace8:	mov	w1, #0x5                   	// #5
    acec:	ldr	w0, [sp, #52]
    acf0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    acf4:	str	w0, [sp, #3772]
    acf8:	ldr	x3, [sp, #24]
    acfc:	ldr	x2, [sp, #32]
    ad00:	ldr	w1, [sp, #3772]
    ad04:	ldr	x0, [sp, #40]
    ad08:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    ad0c:	mov	w1, w0
    ad10:	add	x0, sp, #0x3c
    ad14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ad18:	and	w0, w0, #0xff
    ad1c:	eor	w0, w0, #0x1
    ad20:	and	w0, w0, #0xff
    ad24:	cmp	w0, #0x0
    ad28:	b.eq	ad34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5dc4>  // b.none
    ad2c:	mov	w0, #0x0                   	// #0
    ad30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ad34:	ldr	w0, [sp, #60]
    ad38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ad3c:	mov	w2, #0x5                   	// #5
    ad40:	mov	w1, #0x0                   	// #0
    ad44:	ldr	w0, [sp, #52]
    ad48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ad4c:	str	w0, [sp, #3772]
    ad50:	ldr	x3, [sp, #24]
    ad54:	ldr	x2, [sp, #32]
    ad58:	ldr	w1, [sp, #3772]
    ad5c:	ldr	x0, [sp, #40]
    ad60:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    ad64:	mov	w1, w0
    ad68:	add	x0, sp, #0x3c
    ad6c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ad70:	and	w0, w0, #0xff
    ad74:	eor	w0, w0, #0x1
    ad78:	and	w0, w0, #0xff
    ad7c:	cmp	w0, #0x0
    ad80:	b.eq	ad8c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5e1c>  // b.none
    ad84:	mov	w0, #0x0                   	// #0
    ad88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ad8c:	mov	w2, #0x5                   	// #5
    ad90:	mov	w1, #0x5                   	// #5
    ad94:	ldr	w0, [sp, #52]
    ad98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ad9c:	str	w0, [sp, #3772]
    ada0:	ldr	w0, [sp, #3772]
    ada4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    ada8:	stp	x0, x1, [sp, #216]
    adac:	add	x0, sp, #0xd8
    adb0:	mov	x1, x0
    adb4:	ldr	x0, [sp, #40]
    adb8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    adbc:	mov	w2, #0x4                   	// #4
    adc0:	mov	w1, #0x10                  	// #16
    adc4:	ldr	w0, [sp, #52]
    adc8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    adcc:	str	w0, [sp, #3772]
    add0:	ldr	x3, [sp, #24]
    add4:	ldr	x2, [sp, #32]
    add8:	ldr	w1, [sp, #3772]
    addc:	ldr	x0, [sp, #40]
    ade0:	bl	3f00 <_ZL18DecodeSVEIncDecImmRN4llvm6MCInstEjmPKv>
    ade4:	mov	w1, w0
    ade8:	add	x0, sp, #0x3c
    adec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    adf0:	and	w0, w0, #0xff
    adf4:	eor	w0, w0, #0x1
    adf8:	and	w0, w0, #0xff
    adfc:	cmp	w0, #0x0
    ae00:	b.eq	ae0c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5e9c>  // b.none
    ae04:	mov	w0, #0x0                   	// #0
    ae08:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ae0c:	ldr	w0, [sp, #60]
    ae10:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ae14:	mov	w2, #0x5                   	// #5
    ae18:	mov	w1, #0x0                   	// #0
    ae1c:	ldr	w0, [sp, #52]
    ae20:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ae24:	str	w0, [sp, #3772]
    ae28:	ldr	x3, [sp, #24]
    ae2c:	ldr	x2, [sp, #32]
    ae30:	ldr	w1, [sp, #3772]
    ae34:	ldr	x0, [sp, #40]
    ae38:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    ae3c:	mov	w1, w0
    ae40:	add	x0, sp, #0x3c
    ae44:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ae48:	and	w0, w0, #0xff
    ae4c:	eor	w0, w0, #0x1
    ae50:	and	w0, w0, #0xff
    ae54:	cmp	w0, #0x0
    ae58:	b.eq	ae64 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5ef4>  // b.none
    ae5c:	mov	w0, #0x0                   	// #0
    ae60:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ae64:	mov	w2, #0x5                   	// #5
    ae68:	mov	w1, #0x0                   	// #0
    ae6c:	ldr	w0, [sp, #52]
    ae70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ae74:	str	w0, [sp, #3772]
    ae78:	ldr	x3, [sp, #24]
    ae7c:	ldr	x2, [sp, #32]
    ae80:	ldr	w1, [sp, #3772]
    ae84:	ldr	x0, [sp, #40]
    ae88:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    ae8c:	mov	w1, w0
    ae90:	add	x0, sp, #0x3c
    ae94:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ae98:	and	w0, w0, #0xff
    ae9c:	eor	w0, w0, #0x1
    aea0:	and	w0, w0, #0xff
    aea4:	cmp	w0, #0x0
    aea8:	b.eq	aeb4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5f44>  // b.none
    aeac:	mov	w0, #0x0                   	// #0
    aeb0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    aeb4:	mov	w2, #0x5                   	// #5
    aeb8:	mov	w1, #0x5                   	// #5
    aebc:	ldr	w0, [sp, #52]
    aec0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    aec4:	str	w0, [sp, #3772]
    aec8:	ldr	w0, [sp, #3772]
    aecc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    aed0:	stp	x0, x1, [sp, #232]
    aed4:	add	x0, sp, #0xe8
    aed8:	mov	x1, x0
    aedc:	ldr	x0, [sp, #40]
    aee0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    aee4:	mov	w2, #0x4                   	// #4
    aee8:	mov	w1, #0x10                  	// #16
    aeec:	ldr	w0, [sp, #52]
    aef0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    aef4:	str	w0, [sp, #3772]
    aef8:	ldr	x3, [sp, #24]
    aefc:	ldr	x2, [sp, #32]
    af00:	ldr	w1, [sp, #3772]
    af04:	ldr	x0, [sp, #40]
    af08:	bl	3f00 <_ZL18DecodeSVEIncDecImmRN4llvm6MCInstEjmPKv>
    af0c:	mov	w1, w0
    af10:	add	x0, sp, #0x3c
    af14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    af18:	and	w0, w0, #0xff
    af1c:	eor	w0, w0, #0x1
    af20:	and	w0, w0, #0xff
    af24:	cmp	w0, #0x0
    af28:	b.eq	af34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x5fc4>  // b.none
    af2c:	mov	w0, #0x0                   	// #0
    af30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    af34:	ldr	w0, [sp, #60]
    af38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    af3c:	mov	w2, #0x5                   	// #5
    af40:	mov	w1, #0x0                   	// #0
    af44:	ldr	w0, [sp, #52]
    af48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    af4c:	str	w0, [sp, #3772]
    af50:	ldr	x3, [sp, #24]
    af54:	ldr	x2, [sp, #32]
    af58:	ldr	w1, [sp, #3772]
    af5c:	ldr	x0, [sp, #40]
    af60:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    af64:	mov	w1, w0
    af68:	add	x0, sp, #0x3c
    af6c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    af70:	and	w0, w0, #0xff
    af74:	eor	w0, w0, #0x1
    af78:	and	w0, w0, #0xff
    af7c:	cmp	w0, #0x0
    af80:	b.eq	af8c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x601c>  // b.none
    af84:	mov	w0, #0x0                   	// #0
    af88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    af8c:	mov	w2, #0x5                   	// #5
    af90:	mov	w1, #0x0                   	// #0
    af94:	ldr	w0, [sp, #52]
    af98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    af9c:	str	w0, [sp, #3772]
    afa0:	ldr	x3, [sp, #24]
    afa4:	ldr	x2, [sp, #32]
    afa8:	ldr	w1, [sp, #3772]
    afac:	ldr	x0, [sp, #40]
    afb0:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    afb4:	mov	w1, w0
    afb8:	add	x0, sp, #0x3c
    afbc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    afc0:	and	w0, w0, #0xff
    afc4:	eor	w0, w0, #0x1
    afc8:	and	w0, w0, #0xff
    afcc:	cmp	w0, #0x0
    afd0:	b.eq	afdc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x606c>  // b.none
    afd4:	mov	w0, #0x0                   	// #0
    afd8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    afdc:	mov	w2, #0x5                   	// #5
    afe0:	mov	w1, #0x5                   	// #5
    afe4:	ldr	w0, [sp, #52]
    afe8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    afec:	str	w0, [sp, #3772]
    aff0:	ldr	w0, [sp, #3772]
    aff4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    aff8:	stp	x0, x1, [sp, #248]
    affc:	add	x0, sp, #0xf8
    b000:	mov	x1, x0
    b004:	ldr	x0, [sp, #40]
    b008:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    b00c:	mov	w2, #0x4                   	// #4
    b010:	mov	w1, #0x10                  	// #16
    b014:	ldr	w0, [sp, #52]
    b018:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b01c:	str	w0, [sp, #3772]
    b020:	ldr	x3, [sp, #24]
    b024:	ldr	x2, [sp, #32]
    b028:	ldr	w1, [sp, #3772]
    b02c:	ldr	x0, [sp, #40]
    b030:	bl	3f00 <_ZL18DecodeSVEIncDecImmRN4llvm6MCInstEjmPKv>
    b034:	mov	w1, w0
    b038:	add	x0, sp, #0x3c
    b03c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b040:	and	w0, w0, #0xff
    b044:	eor	w0, w0, #0x1
    b048:	and	w0, w0, #0xff
    b04c:	cmp	w0, #0x0
    b050:	b.eq	b05c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x60ec>  // b.none
    b054:	mov	w0, #0x0                   	// #0
    b058:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b05c:	ldr	w0, [sp, #60]
    b060:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b064:	mov	w2, #0x5                   	// #5
    b068:	mov	w1, #0x0                   	// #0
    b06c:	ldr	w0, [sp, #52]
    b070:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b074:	str	w0, [sp, #3772]
    b078:	ldr	x3, [sp, #24]
    b07c:	ldr	x2, [sp, #32]
    b080:	ldr	w1, [sp, #3772]
    b084:	ldr	x0, [sp, #40]
    b088:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    b08c:	mov	w1, w0
    b090:	add	x0, sp, #0x3c
    b094:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b098:	and	w0, w0, #0xff
    b09c:	eor	w0, w0, #0x1
    b0a0:	and	w0, w0, #0xff
    b0a4:	cmp	w0, #0x0
    b0a8:	b.eq	b0b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6144>  // b.none
    b0ac:	mov	w0, #0x0                   	// #0
    b0b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b0b4:	mov	w2, #0x5                   	// #5
    b0b8:	mov	w1, #0x0                   	// #0
    b0bc:	ldr	w0, [sp, #52]
    b0c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b0c4:	str	w0, [sp, #3772]
    b0c8:	ldr	x3, [sp, #24]
    b0cc:	ldr	x2, [sp, #32]
    b0d0:	ldr	w1, [sp, #3772]
    b0d4:	ldr	x0, [sp, #40]
    b0d8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    b0dc:	mov	w1, w0
    b0e0:	add	x0, sp, #0x3c
    b0e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b0e8:	and	w0, w0, #0xff
    b0ec:	eor	w0, w0, #0x1
    b0f0:	and	w0, w0, #0xff
    b0f4:	cmp	w0, #0x0
    b0f8:	b.eq	b104 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6194>  // b.none
    b0fc:	mov	w0, #0x0                   	// #0
    b100:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b104:	mov	w2, #0x5                   	// #5
    b108:	mov	w1, #0x5                   	// #5
    b10c:	ldr	w0, [sp, #52]
    b110:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b114:	str	w0, [sp, #3772]
    b118:	ldr	w0, [sp, #3772]
    b11c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    b120:	add	x2, sp, #0x200
    b124:	stp	x0, x1, [x2, #-248]
    b128:	add	x0, sp, #0x108
    b12c:	mov	x1, x0
    b130:	ldr	x0, [sp, #40]
    b134:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    b138:	mov	w2, #0x4                   	// #4
    b13c:	mov	w1, #0x10                  	// #16
    b140:	ldr	w0, [sp, #52]
    b144:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b148:	str	w0, [sp, #3772]
    b14c:	ldr	x3, [sp, #24]
    b150:	ldr	x2, [sp, #32]
    b154:	ldr	w1, [sp, #3772]
    b158:	ldr	x0, [sp, #40]
    b15c:	bl	3f00 <_ZL18DecodeSVEIncDecImmRN4llvm6MCInstEjmPKv>
    b160:	mov	w1, w0
    b164:	add	x0, sp, #0x3c
    b168:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b16c:	and	w0, w0, #0xff
    b170:	eor	w0, w0, #0x1
    b174:	and	w0, w0, #0xff
    b178:	cmp	w0, #0x0
    b17c:	b.eq	b188 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6218>  // b.none
    b180:	mov	w0, #0x0                   	// #0
    b184:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b188:	ldr	w0, [sp, #60]
    b18c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b190:	mov	w2, #0x5                   	// #5
    b194:	mov	w1, #0x0                   	// #0
    b198:	ldr	w0, [sp, #52]
    b19c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b1a0:	str	w0, [sp, #3772]
    b1a4:	ldr	x3, [sp, #24]
    b1a8:	ldr	x2, [sp, #32]
    b1ac:	ldr	w1, [sp, #3772]
    b1b0:	ldr	x0, [sp, #40]
    b1b4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    b1b8:	mov	w1, w0
    b1bc:	add	x0, sp, #0x3c
    b1c0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b1c4:	and	w0, w0, #0xff
    b1c8:	eor	w0, w0, #0x1
    b1cc:	and	w0, w0, #0xff
    b1d0:	cmp	w0, #0x0
    b1d4:	b.eq	b1e0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6270>  // b.none
    b1d8:	mov	w0, #0x0                   	// #0
    b1dc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b1e0:	mov	w2, #0x4                   	// #4
    b1e4:	mov	w1, #0xa                   	// #10
    b1e8:	ldr	w0, [sp, #52]
    b1ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b1f0:	str	w0, [sp, #3772]
    b1f4:	ldr	x3, [sp, #24]
    b1f8:	ldr	x2, [sp, #32]
    b1fc:	ldr	w1, [sp, #3772]
    b200:	ldr	x0, [sp, #40]
    b204:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b208:	mov	w1, w0
    b20c:	add	x0, sp, #0x3c
    b210:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b214:	and	w0, w0, #0xff
    b218:	eor	w0, w0, #0x1
    b21c:	and	w0, w0, #0xff
    b220:	cmp	w0, #0x0
    b224:	b.eq	b230 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x62c0>  // b.none
    b228:	mov	w0, #0x0                   	// #0
    b22c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b230:	mov	w2, #0x5                   	// #5
    b234:	mov	w1, #0x5                   	// #5
    b238:	ldr	w0, [sp, #52]
    b23c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b240:	str	w0, [sp, #3772]
    b244:	ldr	x3, [sp, #24]
    b248:	ldr	x2, [sp, #32]
    b24c:	ldr	w1, [sp, #3772]
    b250:	ldr	x0, [sp, #40]
    b254:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    b258:	mov	w1, w0
    b25c:	add	x0, sp, #0x3c
    b260:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b264:	and	w0, w0, #0xff
    b268:	eor	w0, w0, #0x1
    b26c:	and	w0, w0, #0xff
    b270:	cmp	w0, #0x0
    b274:	b.eq	b280 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6310>  // b.none
    b278:	mov	w0, #0x0                   	// #0
    b27c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b280:	mov	w2, #0x5                   	// #5
    b284:	mov	w1, #0x10                  	// #16
    b288:	ldr	w0, [sp, #52]
    b28c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b290:	str	w0, [sp, #3772]
    b294:	ldr	x3, [sp, #24]
    b298:	ldr	x2, [sp, #32]
    b29c:	ldr	w1, [sp, #3772]
    b2a0:	ldr	x0, [sp, #40]
    b2a4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    b2a8:	mov	w1, w0
    b2ac:	add	x0, sp, #0x3c
    b2b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b2b4:	and	w0, w0, #0xff
    b2b8:	eor	w0, w0, #0x1
    b2bc:	and	w0, w0, #0xff
    b2c0:	cmp	w0, #0x0
    b2c4:	b.eq	b2d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6360>  // b.none
    b2c8:	mov	w0, #0x0                   	// #0
    b2cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b2d0:	ldr	w0, [sp, #60]
    b2d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b2d8:	mov	w2, #0x4                   	// #4
    b2dc:	mov	w1, #0x0                   	// #0
    b2e0:	ldr	w0, [sp, #52]
    b2e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b2e8:	str	w0, [sp, #3772]
    b2ec:	ldr	x3, [sp, #24]
    b2f0:	ldr	x2, [sp, #32]
    b2f4:	ldr	w1, [sp, #3772]
    b2f8:	ldr	x0, [sp, #40]
    b2fc:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b300:	mov	w1, w0
    b304:	add	x0, sp, #0x3c
    b308:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b30c:	and	w0, w0, #0xff
    b310:	eor	w0, w0, #0x1
    b314:	and	w0, w0, #0xff
    b318:	cmp	w0, #0x0
    b31c:	b.eq	b328 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x63b8>  // b.none
    b320:	mov	w0, #0x0                   	// #0
    b324:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b328:	mov	w2, #0x3                   	// #3
    b32c:	mov	w1, #0xa                   	// #10
    b330:	ldr	w0, [sp, #52]
    b334:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b338:	str	w0, [sp, #3772]
    b33c:	ldr	x3, [sp, #24]
    b340:	ldr	x2, [sp, #32]
    b344:	ldr	w1, [sp, #3772]
    b348:	ldr	x0, [sp, #40]
    b34c:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    b350:	mov	w1, w0
    b354:	add	x0, sp, #0x3c
    b358:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b35c:	and	w0, w0, #0xff
    b360:	eor	w0, w0, #0x1
    b364:	and	w0, w0, #0xff
    b368:	cmp	w0, #0x0
    b36c:	b.eq	b378 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6408>  // b.none
    b370:	mov	w0, #0x0                   	// #0
    b374:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b378:	mov	w2, #0x5                   	// #5
    b37c:	mov	w1, #0x5                   	// #5
    b380:	ldr	w0, [sp, #52]
    b384:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b388:	str	w0, [sp, #3772]
    b38c:	ldr	x3, [sp, #24]
    b390:	ldr	x2, [sp, #32]
    b394:	ldr	w1, [sp, #3772]
    b398:	ldr	x0, [sp, #40]
    b39c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    b3a0:	mov	w1, w0
    b3a4:	add	x0, sp, #0x3c
    b3a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b3ac:	and	w0, w0, #0xff
    b3b0:	eor	w0, w0, #0x1
    b3b4:	and	w0, w0, #0xff
    b3b8:	cmp	w0, #0x0
    b3bc:	b.eq	b3c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6458>  // b.none
    b3c0:	mov	w0, #0x0                   	// #0
    b3c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b3c8:	mov	w2, #0x5                   	// #5
    b3cc:	mov	w1, #0x10                  	// #16
    b3d0:	ldr	w0, [sp, #52]
    b3d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b3d8:	str	w0, [sp, #3772]
    b3dc:	ldr	x3, [sp, #24]
    b3e0:	ldr	x2, [sp, #32]
    b3e4:	ldr	w1, [sp, #3772]
    b3e8:	ldr	x0, [sp, #40]
    b3ec:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    b3f0:	mov	w1, w0
    b3f4:	add	x0, sp, #0x3c
    b3f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b3fc:	and	w0, w0, #0xff
    b400:	eor	w0, w0, #0x1
    b404:	and	w0, w0, #0xff
    b408:	cmp	w0, #0x0
    b40c:	b.eq	b418 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x64a8>  // b.none
    b410:	mov	w0, #0x0                   	// #0
    b414:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b418:	ldr	w0, [sp, #60]
    b41c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b420:	mov	w2, #0x4                   	// #4
    b424:	mov	w1, #0x0                   	// #0
    b428:	ldr	w0, [sp, #52]
    b42c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b430:	str	w0, [sp, #3772]
    b434:	ldr	x3, [sp, #24]
    b438:	ldr	x2, [sp, #32]
    b43c:	ldr	w1, [sp, #3772]
    b440:	ldr	x0, [sp, #40]
    b444:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b448:	mov	w1, w0
    b44c:	add	x0, sp, #0x3c
    b450:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b454:	and	w0, w0, #0xff
    b458:	eor	w0, w0, #0x1
    b45c:	and	w0, w0, #0xff
    b460:	cmp	w0, #0x0
    b464:	b.eq	b470 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6500>  // b.none
    b468:	mov	w0, #0x0                   	// #0
    b46c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b470:	mov	w2, #0x3                   	// #3
    b474:	mov	w1, #0xa                   	// #10
    b478:	ldr	w0, [sp, #52]
    b47c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b480:	str	w0, [sp, #3772]
    b484:	ldr	x3, [sp, #24]
    b488:	ldr	x2, [sp, #32]
    b48c:	ldr	w1, [sp, #3772]
    b490:	ldr	x0, [sp, #40]
    b494:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    b498:	mov	w1, w0
    b49c:	add	x0, sp, #0x3c
    b4a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b4a4:	and	w0, w0, #0xff
    b4a8:	eor	w0, w0, #0x1
    b4ac:	and	w0, w0, #0xff
    b4b0:	cmp	w0, #0x0
    b4b4:	b.eq	b4c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6550>  // b.none
    b4b8:	mov	w0, #0x0                   	// #0
    b4bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b4c0:	mov	w2, #0x5                   	// #5
    b4c4:	mov	w1, #0x5                   	// #5
    b4c8:	ldr	w0, [sp, #52]
    b4cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b4d0:	str	w0, [sp, #3772]
    b4d4:	ldr	x3, [sp, #24]
    b4d8:	ldr	x2, [sp, #32]
    b4dc:	ldr	w1, [sp, #3772]
    b4e0:	ldr	x0, [sp, #40]
    b4e4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    b4e8:	mov	w1, w0
    b4ec:	add	x0, sp, #0x3c
    b4f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b4f4:	and	w0, w0, #0xff
    b4f8:	eor	w0, w0, #0x1
    b4fc:	and	w0, w0, #0xff
    b500:	cmp	w0, #0x0
    b504:	b.eq	b510 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x65a0>  // b.none
    b508:	mov	w0, #0x0                   	// #0
    b50c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b510:	mov	w2, #0x7                   	// #7
    b514:	mov	w1, #0xe                   	// #14
    b518:	ldr	w0, [sp, #52]
    b51c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b520:	str	w0, [sp, #3772]
    b524:	ldr	w0, [sp, #3772]
    b528:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    b52c:	add	x2, sp, #0x200
    b530:	stp	x0, x1, [x2, #-232]
    b534:	add	x0, sp, #0x118
    b538:	mov	x1, x0
    b53c:	ldr	x0, [sp, #40]
    b540:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    b544:	ldr	w0, [sp, #60]
    b548:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b54c:	mov	w2, #0x4                   	// #4
    b550:	mov	w1, #0x0                   	// #0
    b554:	ldr	w0, [sp, #52]
    b558:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b55c:	str	w0, [sp, #3772]
    b560:	ldr	x3, [sp, #24]
    b564:	ldr	x2, [sp, #32]
    b568:	ldr	w1, [sp, #3772]
    b56c:	ldr	x0, [sp, #40]
    b570:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b574:	mov	w1, w0
    b578:	add	x0, sp, #0x3c
    b57c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b580:	and	w0, w0, #0xff
    b584:	eor	w0, w0, #0x1
    b588:	and	w0, w0, #0xff
    b58c:	cmp	w0, #0x0
    b590:	b.eq	b59c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x662c>  // b.none
    b594:	mov	w0, #0x0                   	// #0
    b598:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b59c:	mov	w2, #0x3                   	// #3
    b5a0:	mov	w1, #0xa                   	// #10
    b5a4:	ldr	w0, [sp, #52]
    b5a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b5ac:	str	w0, [sp, #3772]
    b5b0:	ldr	x3, [sp, #24]
    b5b4:	ldr	x2, [sp, #32]
    b5b8:	ldr	w1, [sp, #3772]
    b5bc:	ldr	x0, [sp, #40]
    b5c0:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    b5c4:	mov	w1, w0
    b5c8:	add	x0, sp, #0x3c
    b5cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b5d0:	and	w0, w0, #0xff
    b5d4:	eor	w0, w0, #0x1
    b5d8:	and	w0, w0, #0xff
    b5dc:	cmp	w0, #0x0
    b5e0:	b.eq	b5ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x667c>  // b.none
    b5e4:	mov	w0, #0x0                   	// #0
    b5e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b5ec:	mov	w2, #0x5                   	// #5
    b5f0:	mov	w1, #0x5                   	// #5
    b5f4:	ldr	w0, [sp, #52]
    b5f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b5fc:	str	w0, [sp, #3772]
    b600:	ldr	x3, [sp, #24]
    b604:	ldr	x2, [sp, #32]
    b608:	ldr	w1, [sp, #3772]
    b60c:	ldr	x0, [sp, #40]
    b610:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    b614:	mov	w1, w0
    b618:	add	x0, sp, #0x3c
    b61c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b620:	and	w0, w0, #0xff
    b624:	eor	w0, w0, #0x1
    b628:	and	w0, w0, #0xff
    b62c:	cmp	w0, #0x0
    b630:	b.eq	b63c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x66cc>  // b.none
    b634:	mov	w0, #0x0                   	// #0
    b638:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b63c:	mov	w2, #0x5                   	// #5
    b640:	mov	w1, #0x10                  	// #16
    b644:	ldr	w0, [sp, #52]
    b648:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b64c:	str	w0, [sp, #3772]
    b650:	ldr	w0, [sp, #3772]
    b654:	ldr	x3, [sp, #24]
    b658:	ldr	x2, [sp, #32]
    b65c:	mov	x1, x0
    b660:	ldr	x0, [sp, #40]
    b664:	bl	2aa9c <_Z10DecodeSImmILi5EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
    b668:	mov	w1, w0
    b66c:	add	x0, sp, #0x3c
    b670:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b674:	and	w0, w0, #0xff
    b678:	eor	w0, w0, #0x1
    b67c:	and	w0, w0, #0xff
    b680:	cmp	w0, #0x0
    b684:	b.eq	b690 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6720>  // b.none
    b688:	mov	w0, #0x0                   	// #0
    b68c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b690:	ldr	w0, [sp, #60]
    b694:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b698:	mov	w2, #0x4                   	// #4
    b69c:	mov	w1, #0x0                   	// #0
    b6a0:	ldr	w0, [sp, #52]
    b6a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b6a8:	str	w0, [sp, #3772]
    b6ac:	ldr	x3, [sp, #24]
    b6b0:	ldr	x2, [sp, #32]
    b6b4:	ldr	w1, [sp, #3772]
    b6b8:	ldr	x0, [sp, #40]
    b6bc:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b6c0:	mov	w1, w0
    b6c4:	add	x0, sp, #0x3c
    b6c8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b6cc:	and	w0, w0, #0xff
    b6d0:	eor	w0, w0, #0x1
    b6d4:	and	w0, w0, #0xff
    b6d8:	cmp	w0, #0x0
    b6dc:	b.eq	b6e8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6778>  // b.none
    b6e0:	mov	w0, #0x0                   	// #0
    b6e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b6e8:	mov	w2, #0x4                   	// #4
    b6ec:	mov	w1, #0xa                   	// #10
    b6f0:	ldr	w0, [sp, #52]
    b6f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b6f8:	str	w0, [sp, #3772]
    b6fc:	ldr	x3, [sp, #24]
    b700:	ldr	x2, [sp, #32]
    b704:	ldr	w1, [sp, #3772]
    b708:	ldr	x0, [sp, #40]
    b70c:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b710:	mov	w1, w0
    b714:	add	x0, sp, #0x3c
    b718:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b71c:	and	w0, w0, #0xff
    b720:	eor	w0, w0, #0x1
    b724:	and	w0, w0, #0xff
    b728:	cmp	w0, #0x0
    b72c:	b.eq	b738 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x67c8>  // b.none
    b730:	mov	w0, #0x0                   	// #0
    b734:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b738:	mov	w2, #0x4                   	// #4
    b73c:	mov	w1, #0x5                   	// #5
    b740:	ldr	w0, [sp, #52]
    b744:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b748:	str	w0, [sp, #3772]
    b74c:	ldr	x3, [sp, #24]
    b750:	ldr	x2, [sp, #32]
    b754:	ldr	w1, [sp, #3772]
    b758:	ldr	x0, [sp, #40]
    b75c:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b760:	mov	w1, w0
    b764:	add	x0, sp, #0x3c
    b768:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b76c:	and	w0, w0, #0xff
    b770:	eor	w0, w0, #0x1
    b774:	and	w0, w0, #0xff
    b778:	cmp	w0, #0x0
    b77c:	b.eq	b788 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6818>  // b.none
    b780:	mov	w0, #0x0                   	// #0
    b784:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b788:	mov	w2, #0x4                   	// #4
    b78c:	mov	w1, #0x10                  	// #16
    b790:	ldr	w0, [sp, #52]
    b794:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b798:	str	w0, [sp, #3772]
    b79c:	ldr	x3, [sp, #24]
    b7a0:	ldr	x2, [sp, #32]
    b7a4:	ldr	w1, [sp, #3772]
    b7a8:	ldr	x0, [sp, #40]
    b7ac:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b7b0:	mov	w1, w0
    b7b4:	add	x0, sp, #0x3c
    b7b8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b7bc:	and	w0, w0, #0xff
    b7c0:	eor	w0, w0, #0x1
    b7c4:	and	w0, w0, #0xff
    b7c8:	cmp	w0, #0x0
    b7cc:	b.eq	b7d8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6868>  // b.none
    b7d0:	mov	w0, #0x0                   	// #0
    b7d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b7d8:	ldr	w0, [sp, #60]
    b7dc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b7e0:	mov	w2, #0x4                   	// #4
    b7e4:	mov	w1, #0x0                   	// #0
    b7e8:	ldr	w0, [sp, #52]
    b7ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b7f0:	str	w0, [sp, #3772]
    b7f4:	ldr	x3, [sp, #24]
    b7f8:	ldr	x2, [sp, #32]
    b7fc:	ldr	w1, [sp, #3772]
    b800:	ldr	x0, [sp, #40]
    b804:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b808:	mov	w1, w0
    b80c:	add	x0, sp, #0x3c
    b810:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b814:	and	w0, w0, #0xff
    b818:	eor	w0, w0, #0x1
    b81c:	and	w0, w0, #0xff
    b820:	cmp	w0, #0x0
    b824:	b.eq	b830 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x68c0>  // b.none
    b828:	mov	w0, #0x0                   	// #0
    b82c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b830:	mov	w2, #0x4                   	// #4
    b834:	mov	w1, #0xa                   	// #10
    b838:	ldr	w0, [sp, #52]
    b83c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b840:	str	w0, [sp, #3772]
    b844:	ldr	x3, [sp, #24]
    b848:	ldr	x2, [sp, #32]
    b84c:	ldr	w1, [sp, #3772]
    b850:	ldr	x0, [sp, #40]
    b854:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b858:	mov	w1, w0
    b85c:	add	x0, sp, #0x3c
    b860:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b864:	and	w0, w0, #0xff
    b868:	eor	w0, w0, #0x1
    b86c:	and	w0, w0, #0xff
    b870:	cmp	w0, #0x0
    b874:	b.eq	b880 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6910>  // b.none
    b878:	mov	w0, #0x0                   	// #0
    b87c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b880:	mov	w2, #0x4                   	// #4
    b884:	mov	w1, #0x5                   	// #5
    b888:	ldr	w0, [sp, #52]
    b88c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b890:	str	w0, [sp, #3772]
    b894:	ldr	x3, [sp, #24]
    b898:	ldr	x2, [sp, #32]
    b89c:	ldr	w1, [sp, #3772]
    b8a0:	ldr	x0, [sp, #40]
    b8a4:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b8a8:	mov	w1, w0
    b8ac:	add	x0, sp, #0x3c
    b8b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b8b4:	and	w0, w0, #0xff
    b8b8:	eor	w0, w0, #0x1
    b8bc:	and	w0, w0, #0xff
    b8c0:	cmp	w0, #0x0
    b8c4:	b.eq	b8d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6960>  // b.none
    b8c8:	mov	w0, #0x0                   	// #0
    b8cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b8d0:	ldr	w0, [sp, #60]
    b8d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b8d8:	mov	w2, #0x4                   	// #4
    b8dc:	mov	w1, #0x0                   	// #0
    b8e0:	ldr	w0, [sp, #52]
    b8e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b8e8:	str	w0, [sp, #3772]
    b8ec:	ldr	x3, [sp, #24]
    b8f0:	ldr	x2, [sp, #32]
    b8f4:	ldr	w1, [sp, #3772]
    b8f8:	ldr	x0, [sp, #40]
    b8fc:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b900:	mov	w1, w0
    b904:	add	x0, sp, #0x3c
    b908:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b90c:	and	w0, w0, #0xff
    b910:	eor	w0, w0, #0x1
    b914:	and	w0, w0, #0xff
    b918:	cmp	w0, #0x0
    b91c:	b.eq	b928 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x69b8>  // b.none
    b920:	mov	w0, #0x0                   	// #0
    b924:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b928:	mov	w2, #0x4                   	// #4
    b92c:	mov	w1, #0xa                   	// #10
    b930:	ldr	w0, [sp, #52]
    b934:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b938:	str	w0, [sp, #3772]
    b93c:	ldr	x3, [sp, #24]
    b940:	ldr	x2, [sp, #32]
    b944:	ldr	w1, [sp, #3772]
    b948:	ldr	x0, [sp, #40]
    b94c:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b950:	mov	w1, w0
    b954:	add	x0, sp, #0x3c
    b958:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b95c:	and	w0, w0, #0xff
    b960:	eor	w0, w0, #0x1
    b964:	and	w0, w0, #0xff
    b968:	cmp	w0, #0x0
    b96c:	b.eq	b978 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6a08>  // b.none
    b970:	mov	w0, #0x0                   	// #0
    b974:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b978:	mov	w2, #0x4                   	// #4
    b97c:	mov	w1, #0x5                   	// #5
    b980:	ldr	w0, [sp, #52]
    b984:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b988:	str	w0, [sp, #3772]
    b98c:	ldr	x3, [sp, #24]
    b990:	ldr	x2, [sp, #32]
    b994:	ldr	w1, [sp, #3772]
    b998:	ldr	x0, [sp, #40]
    b99c:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b9a0:	mov	w1, w0
    b9a4:	add	x0, sp, #0x3c
    b9a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b9ac:	and	w0, w0, #0xff
    b9b0:	eor	w0, w0, #0x1
    b9b4:	and	w0, w0, #0xff
    b9b8:	cmp	w0, #0x0
    b9bc:	b.eq	b9c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6a58>  // b.none
    b9c0:	mov	w0, #0x0                   	// #0
    b9c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    b9c8:	mov	w2, #0x4                   	// #4
    b9cc:	mov	w1, #0x0                   	// #0
    b9d0:	ldr	w0, [sp, #52]
    b9d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    b9d8:	str	w0, [sp, #3772]
    b9dc:	ldr	x3, [sp, #24]
    b9e0:	ldr	x2, [sp, #32]
    b9e4:	ldr	w1, [sp, #3772]
    b9e8:	ldr	x0, [sp, #40]
    b9ec:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    b9f0:	mov	w1, w0
    b9f4:	add	x0, sp, #0x3c
    b9f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    b9fc:	and	w0, w0, #0xff
    ba00:	eor	w0, w0, #0x1
    ba04:	and	w0, w0, #0xff
    ba08:	cmp	w0, #0x0
    ba0c:	b.eq	ba18 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6aa8>  // b.none
    ba10:	mov	w0, #0x0                   	// #0
    ba14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ba18:	ldr	w0, [sp, #60]
    ba1c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ba20:	mov	w2, #0x4                   	// #4
    ba24:	mov	w1, #0x0                   	// #0
    ba28:	ldr	w0, [sp, #52]
    ba2c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ba30:	str	w0, [sp, #3772]
    ba34:	ldr	x3, [sp, #24]
    ba38:	ldr	x2, [sp, #32]
    ba3c:	ldr	w1, [sp, #3772]
    ba40:	ldr	x0, [sp, #40]
    ba44:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    ba48:	mov	w1, w0
    ba4c:	add	x0, sp, #0x3c
    ba50:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ba54:	and	w0, w0, #0xff
    ba58:	eor	w0, w0, #0x1
    ba5c:	and	w0, w0, #0xff
    ba60:	cmp	w0, #0x0
    ba64:	b.eq	ba70 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6b00>  // b.none
    ba68:	mov	w0, #0x0                   	// #0
    ba6c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ba70:	mov	w2, #0x4                   	// #4
    ba74:	mov	w1, #0x0                   	// #0
    ba78:	ldr	w0, [sp, #52]
    ba7c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ba80:	str	w0, [sp, #3772]
    ba84:	ldr	x3, [sp, #24]
    ba88:	ldr	x2, [sp, #32]
    ba8c:	ldr	w1, [sp, #3772]
    ba90:	ldr	x0, [sp, #40]
    ba94:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    ba98:	mov	w1, w0
    ba9c:	add	x0, sp, #0x3c
    baa0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    baa4:	and	w0, w0, #0xff
    baa8:	eor	w0, w0, #0x1
    baac:	and	w0, w0, #0xff
    bab0:	cmp	w0, #0x0
    bab4:	b.eq	bac0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6b50>  // b.none
    bab8:	mov	w0, #0x0                   	// #0
    babc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bac0:	mov	w2, #0x4                   	// #4
    bac4:	mov	w1, #0xa                   	// #10
    bac8:	ldr	w0, [sp, #52]
    bacc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    bad0:	str	w0, [sp, #3772]
    bad4:	ldr	x3, [sp, #24]
    bad8:	ldr	x2, [sp, #32]
    badc:	ldr	w1, [sp, #3772]
    bae0:	ldr	x0, [sp, #40]
    bae4:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    bae8:	mov	w1, w0
    baec:	add	x0, sp, #0x3c
    baf0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    baf4:	and	w0, w0, #0xff
    baf8:	eor	w0, w0, #0x1
    bafc:	and	w0, w0, #0xff
    bb00:	cmp	w0, #0x0
    bb04:	b.eq	bb10 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6ba0>  // b.none
    bb08:	mov	w0, #0x0                   	// #0
    bb0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bb10:	mov	w2, #0x4                   	// #4
    bb14:	mov	w1, #0x5                   	// #5
    bb18:	ldr	w0, [sp, #52]
    bb1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    bb20:	str	w0, [sp, #3772]
    bb24:	ldr	x3, [sp, #24]
    bb28:	ldr	x2, [sp, #32]
    bb2c:	ldr	w1, [sp, #3772]
    bb30:	ldr	x0, [sp, #40]
    bb34:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    bb38:	mov	w1, w0
    bb3c:	add	x0, sp, #0x3c
    bb40:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    bb44:	and	w0, w0, #0xff
    bb48:	eor	w0, w0, #0x1
    bb4c:	and	w0, w0, #0xff
    bb50:	cmp	w0, #0x0
    bb54:	b.eq	bb60 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6bf0>  // b.none
    bb58:	mov	w0, #0x0                   	// #0
    bb5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bb60:	ldr	w0, [sp, #60]
    bb64:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bb68:	mov	w2, #0x4                   	// #4
    bb6c:	mov	w1, #0x0                   	// #0
    bb70:	ldr	w0, [sp, #52]
    bb74:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    bb78:	str	w0, [sp, #3772]
    bb7c:	ldr	x3, [sp, #24]
    bb80:	ldr	x2, [sp, #32]
    bb84:	ldr	w1, [sp, #3772]
    bb88:	ldr	x0, [sp, #40]
    bb8c:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    bb90:	mov	w1, w0
    bb94:	add	x0, sp, #0x3c
    bb98:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    bb9c:	and	w0, w0, #0xff
    bba0:	eor	w0, w0, #0x1
    bba4:	and	w0, w0, #0xff
    bba8:	cmp	w0, #0x0
    bbac:	b.eq	bbb8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6c48>  // b.none
    bbb0:	mov	w0, #0x0                   	// #0
    bbb4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bbb8:	mov	w2, #0x4                   	// #4
    bbbc:	mov	w1, #0x5                   	// #5
    bbc0:	ldr	w0, [sp, #52]
    bbc4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    bbc8:	str	w0, [sp, #3772]
    bbcc:	ldr	x3, [sp, #24]
    bbd0:	ldr	x2, [sp, #32]
    bbd4:	ldr	w1, [sp, #3772]
    bbd8:	ldr	x0, [sp, #40]
    bbdc:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    bbe0:	mov	w1, w0
    bbe4:	add	x0, sp, #0x3c
    bbe8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    bbec:	and	w0, w0, #0xff
    bbf0:	eor	w0, w0, #0x1
    bbf4:	and	w0, w0, #0xff
    bbf8:	cmp	w0, #0x0
    bbfc:	b.eq	bc08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6c98>  // b.none
    bc00:	mov	w0, #0x0                   	// #0
    bc04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bc08:	mov	w2, #0x4                   	// #4
    bc0c:	mov	w1, #0x0                   	// #0
    bc10:	ldr	w0, [sp, #52]
    bc14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    bc18:	str	w0, [sp, #3772]
    bc1c:	ldr	x3, [sp, #24]
    bc20:	ldr	x2, [sp, #32]
    bc24:	ldr	w1, [sp, #3772]
    bc28:	ldr	x0, [sp, #40]
    bc2c:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    bc30:	mov	w1, w0
    bc34:	add	x0, sp, #0x3c
    bc38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    bc3c:	and	w0, w0, #0xff
    bc40:	eor	w0, w0, #0x1
    bc44:	and	w0, w0, #0xff
    bc48:	cmp	w0, #0x0
    bc4c:	b.eq	bc58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6ce8>  // b.none
    bc50:	mov	w0, #0x0                   	// #0
    bc54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bc58:	ldr	w0, [sp, #60]
    bc5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bc60:	mov	w2, #0x4                   	// #4
    bc64:	mov	w1, #0x0                   	// #0
    bc68:	ldr	w0, [sp, #52]
    bc6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    bc70:	str	w0, [sp, #3772]
    bc74:	ldr	x3, [sp, #24]
    bc78:	ldr	x2, [sp, #32]
    bc7c:	ldr	w1, [sp, #3772]
    bc80:	ldr	x0, [sp, #40]
    bc84:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    bc88:	mov	w1, w0
    bc8c:	add	x0, sp, #0x3c
    bc90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    bc94:	and	w0, w0, #0xff
    bc98:	eor	w0, w0, #0x1
    bc9c:	and	w0, w0, #0xff
    bca0:	cmp	w0, #0x0
    bca4:	b.eq	bcb0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6d40>  // b.none
    bca8:	mov	w0, #0x0                   	// #0
    bcac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bcb0:	mov	w2, #0x5                   	// #5
    bcb4:	mov	w1, #0x5                   	// #5
    bcb8:	ldr	w0, [sp, #52]
    bcbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    bcc0:	str	w0, [sp, #3772]
    bcc4:	ldr	w0, [sp, #3772]
    bcc8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    bccc:	add	x2, sp, #0x200
    bcd0:	stp	x0, x1, [x2, #-216]
    bcd4:	add	x0, sp, #0x128
    bcd8:	mov	x1, x0
    bcdc:	ldr	x0, [sp, #40]
    bce0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    bce4:	ldr	w0, [sp, #60]
    bce8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bcec:	mov	w2, #0x4                   	// #4
    bcf0:	mov	w1, #0x0                   	// #0
    bcf4:	ldr	w0, [sp, #52]
    bcf8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    bcfc:	str	w0, [sp, #3772]
    bd00:	ldr	x3, [sp, #24]
    bd04:	ldr	x2, [sp, #32]
    bd08:	ldr	w1, [sp, #3772]
    bd0c:	ldr	x0, [sp, #40]
    bd10:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    bd14:	mov	w1, w0
    bd18:	add	x0, sp, #0x3c
    bd1c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    bd20:	and	w0, w0, #0xff
    bd24:	eor	w0, w0, #0x1
    bd28:	and	w0, w0, #0xff
    bd2c:	cmp	w0, #0x0
    bd30:	b.eq	bd3c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6dcc>  // b.none
    bd34:	mov	w0, #0x0                   	// #0
    bd38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bd3c:	ldr	w0, [sp, #60]
    bd40:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bd44:	mov	w2, #0x4                   	// #4
    bd48:	mov	w1, #0x0                   	// #0
    bd4c:	ldr	w0, [sp, #52]
    bd50:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    bd54:	str	w0, [sp, #3772]
    bd58:	ldr	x3, [sp, #24]
    bd5c:	ldr	x2, [sp, #32]
    bd60:	ldr	w1, [sp, #3772]
    bd64:	ldr	x0, [sp, #40]
    bd68:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    bd6c:	mov	w1, w0
    bd70:	add	x0, sp, #0x3c
    bd74:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    bd78:	and	w0, w0, #0xff
    bd7c:	eor	w0, w0, #0x1
    bd80:	and	w0, w0, #0xff
    bd84:	cmp	w0, #0x0
    bd88:	b.eq	bd94 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6e24>  // b.none
    bd8c:	mov	w0, #0x0                   	// #0
    bd90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bd94:	mov	w2, #0x5                   	// #5
    bd98:	mov	w1, #0x5                   	// #5
    bd9c:	ldr	w0, [sp, #52]
    bda0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    bda4:	str	w0, [sp, #3772]
    bda8:	ldr	x3, [sp, #24]
    bdac:	ldr	x2, [sp, #32]
    bdb0:	ldr	w1, [sp, #3772]
    bdb4:	ldr	x0, [sp, #40]
    bdb8:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    bdbc:	mov	w1, w0
    bdc0:	add	x0, sp, #0x3c
    bdc4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    bdc8:	and	w0, w0, #0xff
    bdcc:	eor	w0, w0, #0x1
    bdd0:	and	w0, w0, #0xff
    bdd4:	cmp	w0, #0x0
    bdd8:	b.eq	bde4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6e74>  // b.none
    bddc:	mov	w0, #0x0                   	// #0
    bde0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bde4:	mov	w2, #0x5                   	// #5
    bde8:	mov	w1, #0x10                  	// #16
    bdec:	ldr	w0, [sp, #52]
    bdf0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    bdf4:	str	w0, [sp, #3772]
    bdf8:	ldr	x3, [sp, #24]
    bdfc:	ldr	x2, [sp, #32]
    be00:	ldr	w1, [sp, #3772]
    be04:	ldr	x0, [sp, #40]
    be08:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    be0c:	mov	w1, w0
    be10:	add	x0, sp, #0x3c
    be14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    be18:	and	w0, w0, #0xff
    be1c:	eor	w0, w0, #0x1
    be20:	and	w0, w0, #0xff
    be24:	cmp	w0, #0x0
    be28:	b.eq	be34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6ec4>  // b.none
    be2c:	mov	w0, #0x0                   	// #0
    be30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    be34:	ldr	w0, [sp, #60]
    be38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    be3c:	mov	w2, #0x4                   	// #4
    be40:	mov	w1, #0x0                   	// #0
    be44:	ldr	w0, [sp, #52]
    be48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    be4c:	str	w0, [sp, #3772]
    be50:	ldr	x3, [sp, #24]
    be54:	ldr	x2, [sp, #32]
    be58:	ldr	w1, [sp, #3772]
    be5c:	ldr	x0, [sp, #40]
    be60:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    be64:	mov	w1, w0
    be68:	add	x0, sp, #0x3c
    be6c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    be70:	and	w0, w0, #0xff
    be74:	eor	w0, w0, #0x1
    be78:	and	w0, w0, #0xff
    be7c:	cmp	w0, #0x0
    be80:	b.eq	be8c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6f1c>  // b.none
    be84:	mov	w0, #0x0                   	// #0
    be88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    be8c:	mov	w2, #0x5                   	// #5
    be90:	mov	w1, #0x5                   	// #5
    be94:	ldr	w0, [sp, #52]
    be98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    be9c:	str	w0, [sp, #3772]
    bea0:	ldr	x3, [sp, #24]
    bea4:	ldr	x2, [sp, #32]
    bea8:	ldr	w1, [sp, #3772]
    beac:	ldr	x0, [sp, #40]
    beb0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    beb4:	mov	w1, w0
    beb8:	add	x0, sp, #0x3c
    bebc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    bec0:	and	w0, w0, #0xff
    bec4:	eor	w0, w0, #0x1
    bec8:	and	w0, w0, #0xff
    becc:	cmp	w0, #0x0
    bed0:	b.eq	bedc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6f6c>  // b.none
    bed4:	mov	w0, #0x0                   	// #0
    bed8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bedc:	mov	w2, #0x5                   	// #5
    bee0:	mov	w1, #0x10                  	// #16
    bee4:	ldr	w0, [sp, #52]
    bee8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    beec:	str	w0, [sp, #3772]
    bef0:	ldr	x3, [sp, #24]
    bef4:	ldr	x2, [sp, #32]
    bef8:	ldr	w1, [sp, #3772]
    befc:	ldr	x0, [sp, #40]
    bf00:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    bf04:	mov	w1, w0
    bf08:	add	x0, sp, #0x3c
    bf0c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    bf10:	and	w0, w0, #0xff
    bf14:	eor	w0, w0, #0x1
    bf18:	and	w0, w0, #0xff
    bf1c:	cmp	w0, #0x0
    bf20:	b.eq	bf2c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x6fbc>  // b.none
    bf24:	mov	w0, #0x0                   	// #0
    bf28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bf2c:	ldr	w0, [sp, #60]
    bf30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bf34:	mov	w2, #0x5                   	// #5
    bf38:	mov	w1, #0x0                   	// #0
    bf3c:	ldr	w0, [sp, #52]
    bf40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    bf44:	str	w0, [sp, #3772]
    bf48:	ldr	x3, [sp, #24]
    bf4c:	ldr	x2, [sp, #32]
    bf50:	ldr	w1, [sp, #3772]
    bf54:	ldr	x0, [sp, #40]
    bf58:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    bf5c:	mov	w1, w0
    bf60:	add	x0, sp, #0x3c
    bf64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    bf68:	and	w0, w0, #0xff
    bf6c:	eor	w0, w0, #0x1
    bf70:	and	w0, w0, #0xff
    bf74:	cmp	w0, #0x0
    bf78:	b.eq	bf84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7014>  // b.none
    bf7c:	mov	w0, #0x0                   	// #0
    bf80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bf84:	mov	w2, #0x4                   	// #4
    bf88:	mov	w1, #0xa                   	// #10
    bf8c:	ldr	w0, [sp, #52]
    bf90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    bf94:	str	w0, [sp, #3772]
    bf98:	ldr	x3, [sp, #24]
    bf9c:	ldr	x2, [sp, #32]
    bfa0:	ldr	w1, [sp, #3772]
    bfa4:	ldr	x0, [sp, #40]
    bfa8:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    bfac:	mov	w1, w0
    bfb0:	add	x0, sp, #0x3c
    bfb4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    bfb8:	and	w0, w0, #0xff
    bfbc:	eor	w0, w0, #0x1
    bfc0:	and	w0, w0, #0xff
    bfc4:	cmp	w0, #0x0
    bfc8:	b.eq	bfd4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7064>  // b.none
    bfcc:	mov	w0, #0x0                   	// #0
    bfd0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    bfd4:	mov	w2, #0x4                   	// #4
    bfd8:	mov	w1, #0x5                   	// #5
    bfdc:	ldr	w0, [sp, #52]
    bfe0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    bfe4:	str	w0, [sp, #3772]
    bfe8:	ldr	x3, [sp, #24]
    bfec:	ldr	x2, [sp, #32]
    bff0:	ldr	w1, [sp, #3772]
    bff4:	ldr	x0, [sp, #40]
    bff8:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    bffc:	mov	w1, w0
    c000:	add	x0, sp, #0x3c
    c004:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c008:	and	w0, w0, #0xff
    c00c:	eor	w0, w0, #0x1
    c010:	and	w0, w0, #0xff
    c014:	cmp	w0, #0x0
    c018:	b.eq	c024 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x70b4>  // b.none
    c01c:	mov	w0, #0x0                   	// #0
    c020:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c024:	ldr	w0, [sp, #60]
    c028:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c02c:	mov	w2, #0x5                   	// #5
    c030:	mov	w1, #0x0                   	// #0
    c034:	ldr	w0, [sp, #52]
    c038:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c03c:	str	w0, [sp, #3772]
    c040:	ldr	x3, [sp, #24]
    c044:	ldr	x2, [sp, #32]
    c048:	ldr	w1, [sp, #3772]
    c04c:	ldr	x0, [sp, #40]
    c050:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    c054:	mov	w1, w0
    c058:	add	x0, sp, #0x3c
    c05c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c060:	and	w0, w0, #0xff
    c064:	eor	w0, w0, #0x1
    c068:	and	w0, w0, #0xff
    c06c:	cmp	w0, #0x0
    c070:	b.eq	c07c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x710c>  // b.none
    c074:	mov	w0, #0x0                   	// #0
    c078:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c07c:	mov	w2, #0x4                   	// #4
    c080:	mov	w1, #0x5                   	// #5
    c084:	ldr	w0, [sp, #52]
    c088:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c08c:	str	w0, [sp, #3772]
    c090:	ldr	x3, [sp, #24]
    c094:	ldr	x2, [sp, #32]
    c098:	ldr	w1, [sp, #3772]
    c09c:	ldr	x0, [sp, #40]
    c0a0:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    c0a4:	mov	w1, w0
    c0a8:	add	x0, sp, #0x3c
    c0ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c0b0:	and	w0, w0, #0xff
    c0b4:	eor	w0, w0, #0x1
    c0b8:	and	w0, w0, #0xff
    c0bc:	cmp	w0, #0x0
    c0c0:	b.eq	c0cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x715c>  // b.none
    c0c4:	mov	w0, #0x0                   	// #0
    c0c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c0cc:	mov	w2, #0x5                   	// #5
    c0d0:	mov	w1, #0x0                   	// #0
    c0d4:	ldr	w0, [sp, #52]
    c0d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c0dc:	str	w0, [sp, #3772]
    c0e0:	ldr	x3, [sp, #24]
    c0e4:	ldr	x2, [sp, #32]
    c0e8:	ldr	w1, [sp, #3772]
    c0ec:	ldr	x0, [sp, #40]
    c0f0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    c0f4:	mov	w1, w0
    c0f8:	add	x0, sp, #0x3c
    c0fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c100:	and	w0, w0, #0xff
    c104:	eor	w0, w0, #0x1
    c108:	and	w0, w0, #0xff
    c10c:	cmp	w0, #0x0
    c110:	b.eq	c11c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x71ac>  // b.none
    c114:	mov	w0, #0x0                   	// #0
    c118:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c11c:	ldr	w0, [sp, #60]
    c120:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c124:	mov	w2, #0x4                   	// #4
    c128:	mov	w1, #0x5                   	// #5
    c12c:	ldr	w0, [sp, #52]
    c130:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c134:	str	w0, [sp, #3772]
    c138:	ldr	x3, [sp, #24]
    c13c:	ldr	x2, [sp, #32]
    c140:	ldr	w1, [sp, #3772]
    c144:	ldr	x0, [sp, #40]
    c148:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    c14c:	mov	w1, w0
    c150:	add	x0, sp, #0x3c
    c154:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c158:	and	w0, w0, #0xff
    c15c:	eor	w0, w0, #0x1
    c160:	and	w0, w0, #0xff
    c164:	cmp	w0, #0x0
    c168:	b.eq	c174 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7204>  // b.none
    c16c:	mov	w0, #0x0                   	// #0
    c170:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c174:	ldr	w0, [sp, #60]
    c178:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c17c:	mov	w2, #0x5                   	// #5
    c180:	mov	w1, #0x0                   	// #0
    c184:	ldr	w0, [sp, #52]
    c188:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c18c:	str	w0, [sp, #3772]
    c190:	ldr	x3, [sp, #24]
    c194:	ldr	x2, [sp, #32]
    c198:	ldr	w1, [sp, #3772]
    c19c:	ldr	x0, [sp, #40]
    c1a0:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    c1a4:	mov	w1, w0
    c1a8:	add	x0, sp, #0x3c
    c1ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c1b0:	and	w0, w0, #0xff
    c1b4:	eor	w0, w0, #0x1
    c1b8:	and	w0, w0, #0xff
    c1bc:	cmp	w0, #0x0
    c1c0:	b.eq	c1cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x725c>  // b.none
    c1c4:	mov	w0, #0x0                   	// #0
    c1c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c1cc:	mov	w2, #0x4                   	// #4
    c1d0:	mov	w1, #0x5                   	// #5
    c1d4:	ldr	w0, [sp, #52]
    c1d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c1dc:	str	w0, [sp, #3772]
    c1e0:	ldr	x3, [sp, #24]
    c1e4:	ldr	x2, [sp, #32]
    c1e8:	ldr	w1, [sp, #3772]
    c1ec:	ldr	x0, [sp, #40]
    c1f0:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    c1f4:	mov	w1, w0
    c1f8:	add	x0, sp, #0x3c
    c1fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c200:	and	w0, w0, #0xff
    c204:	eor	w0, w0, #0x1
    c208:	and	w0, w0, #0xff
    c20c:	cmp	w0, #0x0
    c210:	b.eq	c21c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x72ac>  // b.none
    c214:	mov	w0, #0x0                   	// #0
    c218:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c21c:	mov	w2, #0x5                   	// #5
    c220:	mov	w1, #0x0                   	// #0
    c224:	ldr	w0, [sp, #52]
    c228:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c22c:	str	w0, [sp, #3772]
    c230:	ldr	x3, [sp, #24]
    c234:	ldr	x2, [sp, #32]
    c238:	ldr	w1, [sp, #3772]
    c23c:	ldr	x0, [sp, #40]
    c240:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    c244:	mov	w1, w0
    c248:	add	x0, sp, #0x3c
    c24c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c250:	and	w0, w0, #0xff
    c254:	eor	w0, w0, #0x1
    c258:	and	w0, w0, #0xff
    c25c:	cmp	w0, #0x0
    c260:	b.eq	c26c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x72fc>  // b.none
    c264:	mov	w0, #0x0                   	// #0
    c268:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c26c:	ldr	w0, [sp, #60]
    c270:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c274:	ldr	w0, [sp, #60]
    c278:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c27c:	mov	w2, #0x5                   	// #5
    c280:	mov	w1, #0x0                   	// #0
    c284:	ldr	w0, [sp, #52]
    c288:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c28c:	str	w0, [sp, #3772]
    c290:	ldr	x3, [sp, #24]
    c294:	ldr	x2, [sp, #32]
    c298:	ldr	w1, [sp, #3772]
    c29c:	ldr	x0, [sp, #40]
    c2a0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    c2a4:	mov	w1, w0
    c2a8:	add	x0, sp, #0x3c
    c2ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c2b0:	and	w0, w0, #0xff
    c2b4:	eor	w0, w0, #0x1
    c2b8:	and	w0, w0, #0xff
    c2bc:	cmp	w0, #0x0
    c2c0:	b.eq	c2cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x735c>  // b.none
    c2c4:	mov	w0, #0x0                   	// #0
    c2c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c2cc:	mov	w2, #0x5                   	// #5
    c2d0:	mov	w1, #0x0                   	// #0
    c2d4:	ldr	w0, [sp, #52]
    c2d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c2dc:	str	w0, [sp, #3772]
    c2e0:	ldr	x3, [sp, #24]
    c2e4:	ldr	x2, [sp, #32]
    c2e8:	ldr	w1, [sp, #3772]
    c2ec:	ldr	x0, [sp, #40]
    c2f0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    c2f4:	mov	w1, w0
    c2f8:	add	x0, sp, #0x3c
    c2fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c300:	and	w0, w0, #0xff
    c304:	eor	w0, w0, #0x1
    c308:	and	w0, w0, #0xff
    c30c:	cmp	w0, #0x0
    c310:	b.eq	c31c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x73ac>  // b.none
    c314:	mov	w0, #0x0                   	// #0
    c318:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c31c:	mov	w2, #0x9                   	// #9
    c320:	mov	w1, #0x5                   	// #5
    c324:	ldr	w0, [sp, #52]
    c328:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c32c:	str	w0, [sp, #3772]
    c330:	ldr	x3, [sp, #24]
    c334:	ldr	x2, [sp, #32]
    c338:	ldr	w1, [sp, #3772]
    c33c:	ldr	x0, [sp, #40]
    c340:	bl	2a8a8 <_Z16DecodeImm8OptLslILi8EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    c344:	mov	w1, w0
    c348:	add	x0, sp, #0x3c
    c34c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c350:	and	w0, w0, #0xff
    c354:	eor	w0, w0, #0x1
    c358:	and	w0, w0, #0xff
    c35c:	cmp	w0, #0x0
    c360:	b.eq	c36c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x73fc>  // b.none
    c364:	mov	w0, #0x0                   	// #0
    c368:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c36c:	ldr	w0, [sp, #60]
    c370:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c374:	mov	w2, #0x5                   	// #5
    c378:	mov	w1, #0x0                   	// #0
    c37c:	ldr	w0, [sp, #52]
    c380:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c384:	str	w0, [sp, #3772]
    c388:	ldr	x3, [sp, #24]
    c38c:	ldr	x2, [sp, #32]
    c390:	ldr	w1, [sp, #3772]
    c394:	ldr	x0, [sp, #40]
    c398:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    c39c:	mov	w1, w0
    c3a0:	add	x0, sp, #0x3c
    c3a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c3a8:	and	w0, w0, #0xff
    c3ac:	eor	w0, w0, #0x1
    c3b0:	and	w0, w0, #0xff
    c3b4:	cmp	w0, #0x0
    c3b8:	b.eq	c3c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7454>  // b.none
    c3bc:	mov	w0, #0x0                   	// #0
    c3c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c3c4:	mov	w2, #0x5                   	// #5
    c3c8:	mov	w1, #0x0                   	// #0
    c3cc:	ldr	w0, [sp, #52]
    c3d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c3d4:	str	w0, [sp, #3772]
    c3d8:	ldr	x3, [sp, #24]
    c3dc:	ldr	x2, [sp, #32]
    c3e0:	ldr	w1, [sp, #3772]
    c3e4:	ldr	x0, [sp, #40]
    c3e8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    c3ec:	mov	w1, w0
    c3f0:	add	x0, sp, #0x3c
    c3f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c3f8:	and	w0, w0, #0xff
    c3fc:	eor	w0, w0, #0x1
    c400:	and	w0, w0, #0xff
    c404:	cmp	w0, #0x0
    c408:	b.eq	c414 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x74a4>  // b.none
    c40c:	mov	w0, #0x0                   	// #0
    c410:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c414:	mov	w2, #0x8                   	// #8
    c418:	mov	w1, #0x5                   	// #5
    c41c:	ldr	w0, [sp, #52]
    c420:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c424:	str	w0, [sp, #3772]
    c428:	ldr	w0, [sp, #3772]
    c42c:	ldr	x3, [sp, #24]
    c430:	ldr	x2, [sp, #32]
    c434:	mov	x1, x0
    c438:	ldr	x0, [sp, #40]
    c43c:	bl	2ab84 <_Z10DecodeSImmILi8EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
    c440:	mov	w1, w0
    c444:	add	x0, sp, #0x3c
    c448:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c44c:	and	w0, w0, #0xff
    c450:	eor	w0, w0, #0x1
    c454:	and	w0, w0, #0xff
    c458:	cmp	w0, #0x0
    c45c:	b.eq	c468 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x74f8>  // b.none
    c460:	mov	w0, #0x0                   	// #0
    c464:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c468:	ldr	w0, [sp, #60]
    c46c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c470:	mov	w2, #0x5                   	// #5
    c474:	mov	w1, #0x0                   	// #0
    c478:	ldr	w0, [sp, #52]
    c47c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c480:	str	w0, [sp, #3772]
    c484:	ldr	x3, [sp, #24]
    c488:	ldr	x2, [sp, #32]
    c48c:	ldr	w1, [sp, #3772]
    c490:	ldr	x0, [sp, #40]
    c494:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    c498:	mov	w1, w0
    c49c:	add	x0, sp, #0x3c
    c4a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c4a4:	and	w0, w0, #0xff
    c4a8:	eor	w0, w0, #0x1
    c4ac:	and	w0, w0, #0xff
    c4b0:	cmp	w0, #0x0
    c4b4:	b.eq	c4c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7550>  // b.none
    c4b8:	mov	w0, #0x0                   	// #0
    c4bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c4c0:	mov	w2, #0x5                   	// #5
    c4c4:	mov	w1, #0x0                   	// #0
    c4c8:	ldr	w0, [sp, #52]
    c4cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c4d0:	str	w0, [sp, #3772]
    c4d4:	ldr	x3, [sp, #24]
    c4d8:	ldr	x2, [sp, #32]
    c4dc:	ldr	w1, [sp, #3772]
    c4e0:	ldr	x0, [sp, #40]
    c4e4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    c4e8:	mov	w1, w0
    c4ec:	add	x0, sp, #0x3c
    c4f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c4f4:	and	w0, w0, #0xff
    c4f8:	eor	w0, w0, #0x1
    c4fc:	and	w0, w0, #0xff
    c500:	cmp	w0, #0x0
    c504:	b.eq	c510 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x75a0>  // b.none
    c508:	mov	w0, #0x0                   	// #0
    c50c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c510:	mov	w2, #0x8                   	// #8
    c514:	mov	w1, #0x5                   	// #5
    c518:	ldr	w0, [sp, #52]
    c51c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c520:	str	w0, [sp, #3772]
    c524:	ldr	w0, [sp, #3772]
    c528:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    c52c:	add	x2, sp, #0x200
    c530:	stp	x0, x1, [x2, #-200]
    c534:	add	x0, sp, #0x138
    c538:	mov	x1, x0
    c53c:	ldr	x0, [sp, #40]
    c540:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    c544:	ldr	w0, [sp, #60]
    c548:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c54c:	mov	w2, #0x5                   	// #5
    c550:	mov	w1, #0x0                   	// #0
    c554:	ldr	w0, [sp, #52]
    c558:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c55c:	str	w0, [sp, #3772]
    c560:	ldr	x3, [sp, #24]
    c564:	ldr	x2, [sp, #32]
    c568:	ldr	w1, [sp, #3772]
    c56c:	ldr	x0, [sp, #40]
    c570:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    c574:	mov	w1, w0
    c578:	add	x0, sp, #0x3c
    c57c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c580:	and	w0, w0, #0xff
    c584:	eor	w0, w0, #0x1
    c588:	and	w0, w0, #0xff
    c58c:	cmp	w0, #0x0
    c590:	b.eq	c59c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x762c>  // b.none
    c594:	mov	w0, #0x0                   	// #0
    c598:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c59c:	mov	w2, #0x9                   	// #9
    c5a0:	mov	w1, #0x5                   	// #5
    c5a4:	ldr	w0, [sp, #52]
    c5a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c5ac:	str	w0, [sp, #3772]
    c5b0:	ldr	x3, [sp, #24]
    c5b4:	ldr	x2, [sp, #32]
    c5b8:	ldr	w1, [sp, #3772]
    c5bc:	ldr	x0, [sp, #40]
    c5c0:	bl	2a8a8 <_Z16DecodeImm8OptLslILi8EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    c5c4:	mov	w1, w0
    c5c8:	add	x0, sp, #0x3c
    c5cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c5d0:	and	w0, w0, #0xff
    c5d4:	eor	w0, w0, #0x1
    c5d8:	and	w0, w0, #0xff
    c5dc:	cmp	w0, #0x0
    c5e0:	b.eq	c5ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x767c>  // b.none
    c5e4:	mov	w0, #0x0                   	// #0
    c5e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c5ec:	ldr	w0, [sp, #60]
    c5f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c5f4:	mov	w2, #0x4                   	// #4
    c5f8:	mov	w1, #0xa                   	// #10
    c5fc:	ldr	w0, [sp, #52]
    c600:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c604:	str	w0, [sp, #3772]
    c608:	ldr	x3, [sp, #24]
    c60c:	ldr	x2, [sp, #32]
    c610:	ldr	w1, [sp, #3772]
    c614:	ldr	x0, [sp, #40]
    c618:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    c61c:	mov	w1, w0
    c620:	add	x0, sp, #0x3c
    c624:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c628:	and	w0, w0, #0xff
    c62c:	eor	w0, w0, #0x1
    c630:	and	w0, w0, #0xff
    c634:	cmp	w0, #0x0
    c638:	b.eq	c644 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x76d4>  // b.none
    c63c:	mov	w0, #0x0                   	// #0
    c640:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c644:	mov	w2, #0x4                   	// #4
    c648:	mov	w1, #0x5                   	// #5
    c64c:	ldr	w0, [sp, #52]
    c650:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c654:	str	w0, [sp, #3772]
    c658:	ldr	x3, [sp, #24]
    c65c:	ldr	x2, [sp, #32]
    c660:	ldr	w1, [sp, #3772]
    c664:	ldr	x0, [sp, #40]
    c668:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    c66c:	mov	w1, w0
    c670:	add	x0, sp, #0x3c
    c674:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c678:	and	w0, w0, #0xff
    c67c:	eor	w0, w0, #0x1
    c680:	and	w0, w0, #0xff
    c684:	cmp	w0, #0x0
    c688:	b.eq	c694 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7724>  // b.none
    c68c:	mov	w0, #0x0                   	// #0
    c690:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c694:	ldr	w0, [sp, #60]
    c698:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c69c:	mov	w2, #0x5                   	// #5
    c6a0:	mov	w1, #0x0                   	// #0
    c6a4:	ldr	w0, [sp, #52]
    c6a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c6ac:	str	w0, [sp, #3772]
    c6b0:	ldr	x3, [sp, #24]
    c6b4:	ldr	x2, [sp, #32]
    c6b8:	ldr	w1, [sp, #3772]
    c6bc:	ldr	x0, [sp, #40]
    c6c0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    c6c4:	mov	w1, w0
    c6c8:	add	x0, sp, #0x3c
    c6cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c6d0:	and	w0, w0, #0xff
    c6d4:	eor	w0, w0, #0x1
    c6d8:	and	w0, w0, #0xff
    c6dc:	cmp	w0, #0x0
    c6e0:	b.eq	c6ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x777c>  // b.none
    c6e4:	mov	w0, #0x0                   	// #0
    c6e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c6ec:	mov	w2, #0x5                   	// #5
    c6f0:	mov	w1, #0x0                   	// #0
    c6f4:	ldr	w0, [sp, #52]
    c6f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c6fc:	str	w0, [sp, #3772]
    c700:	ldr	x3, [sp, #24]
    c704:	ldr	x2, [sp, #32]
    c708:	ldr	w1, [sp, #3772]
    c70c:	ldr	x0, [sp, #40]
    c710:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    c714:	mov	w1, w0
    c718:	add	x0, sp, #0x3c
    c71c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c720:	and	w0, w0, #0xff
    c724:	eor	w0, w0, #0x1
    c728:	and	w0, w0, #0xff
    c72c:	cmp	w0, #0x0
    c730:	b.eq	c73c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x77cc>  // b.none
    c734:	mov	w0, #0x0                   	// #0
    c738:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c73c:	mov	w2, #0x4                   	// #4
    c740:	mov	w1, #0x5                   	// #5
    c744:	ldr	w0, [sp, #52]
    c748:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c74c:	str	w0, [sp, #3772]
    c750:	ldr	x3, [sp, #24]
    c754:	ldr	x2, [sp, #32]
    c758:	ldr	w1, [sp, #3772]
    c75c:	ldr	x0, [sp, #40]
    c760:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    c764:	mov	w1, w0
    c768:	add	x0, sp, #0x3c
    c76c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c770:	and	w0, w0, #0xff
    c774:	eor	w0, w0, #0x1
    c778:	and	w0, w0, #0xff
    c77c:	cmp	w0, #0x0
    c780:	b.eq	c78c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x781c>  // b.none
    c784:	mov	w0, #0x0                   	// #0
    c788:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c78c:	ldr	w0, [sp, #60]
    c790:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c794:	mov	w2, #0x5                   	// #5
    c798:	mov	w1, #0x0                   	// #0
    c79c:	ldr	w0, [sp, #52]
    c7a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c7a4:	str	w0, [sp, #3772]
    c7a8:	ldr	x3, [sp, #24]
    c7ac:	ldr	x2, [sp, #32]
    c7b0:	ldr	w1, [sp, #3772]
    c7b4:	ldr	x0, [sp, #40]
    c7b8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    c7bc:	mov	w1, w0
    c7c0:	add	x0, sp, #0x3c
    c7c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c7c8:	and	w0, w0, #0xff
    c7cc:	eor	w0, w0, #0x1
    c7d0:	and	w0, w0, #0xff
    c7d4:	cmp	w0, #0x0
    c7d8:	b.eq	c7e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7874>  // b.none
    c7dc:	mov	w0, #0x0                   	// #0
    c7e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c7e4:	mov	w2, #0x5                   	// #5
    c7e8:	mov	w1, #0x0                   	// #0
    c7ec:	ldr	w0, [sp, #52]
    c7f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c7f4:	str	w0, [sp, #3772]
    c7f8:	ldr	x3, [sp, #24]
    c7fc:	ldr	x2, [sp, #32]
    c800:	ldr	w1, [sp, #3772]
    c804:	ldr	x0, [sp, #40]
    c808:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    c80c:	mov	w1, w0
    c810:	add	x0, sp, #0x3c
    c814:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c818:	and	w0, w0, #0xff
    c81c:	eor	w0, w0, #0x1
    c820:	and	w0, w0, #0xff
    c824:	cmp	w0, #0x0
    c828:	b.eq	c834 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x78c4>  // b.none
    c82c:	mov	w0, #0x0                   	// #0
    c830:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c834:	mov	w2, #0x9                   	// #9
    c838:	mov	w1, #0x5                   	// #5
    c83c:	ldr	w0, [sp, #52]
    c840:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c844:	str	w0, [sp, #3772]
    c848:	ldr	x3, [sp, #24]
    c84c:	ldr	x2, [sp, #32]
    c850:	ldr	w1, [sp, #3772]
    c854:	ldr	x0, [sp, #40]
    c858:	bl	2a934 <_Z16DecodeImm8OptLslILi16EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    c85c:	mov	w1, w0
    c860:	add	x0, sp, #0x3c
    c864:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c868:	and	w0, w0, #0xff
    c86c:	eor	w0, w0, #0x1
    c870:	and	w0, w0, #0xff
    c874:	cmp	w0, #0x0
    c878:	b.eq	c884 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7914>  // b.none
    c87c:	mov	w0, #0x0                   	// #0
    c880:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c884:	ldr	w0, [sp, #60]
    c888:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c88c:	mov	w2, #0x5                   	// #5
    c890:	mov	w1, #0x0                   	// #0
    c894:	ldr	w0, [sp, #52]
    c898:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c89c:	str	w0, [sp, #3772]
    c8a0:	ldr	x3, [sp, #24]
    c8a4:	ldr	x2, [sp, #32]
    c8a8:	ldr	w1, [sp, #3772]
    c8ac:	ldr	x0, [sp, #40]
    c8b0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    c8b4:	mov	w1, w0
    c8b8:	add	x0, sp, #0x3c
    c8bc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c8c0:	and	w0, w0, #0xff
    c8c4:	eor	w0, w0, #0x1
    c8c8:	and	w0, w0, #0xff
    c8cc:	cmp	w0, #0x0
    c8d0:	b.eq	c8dc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x796c>  // b.none
    c8d4:	mov	w0, #0x0                   	// #0
    c8d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c8dc:	mov	w2, #0x9                   	// #9
    c8e0:	mov	w1, #0x5                   	// #5
    c8e4:	ldr	w0, [sp, #52]
    c8e8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c8ec:	str	w0, [sp, #3772]
    c8f0:	ldr	x3, [sp, #24]
    c8f4:	ldr	x2, [sp, #32]
    c8f8:	ldr	w1, [sp, #3772]
    c8fc:	ldr	x0, [sp, #40]
    c900:	bl	2a934 <_Z16DecodeImm8OptLslILi16EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    c904:	mov	w1, w0
    c908:	add	x0, sp, #0x3c
    c90c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c910:	and	w0, w0, #0xff
    c914:	eor	w0, w0, #0x1
    c918:	and	w0, w0, #0xff
    c91c:	cmp	w0, #0x0
    c920:	b.eq	c92c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x79bc>  // b.none
    c924:	mov	w0, #0x0                   	// #0
    c928:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c92c:	ldr	w0, [sp, #60]
    c930:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c934:	mov	w2, #0x5                   	// #5
    c938:	mov	w1, #0x0                   	// #0
    c93c:	ldr	w0, [sp, #52]
    c940:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c944:	str	w0, [sp, #3772]
    c948:	ldr	x3, [sp, #24]
    c94c:	ldr	x2, [sp, #32]
    c950:	ldr	w1, [sp, #3772]
    c954:	ldr	x0, [sp, #40]
    c958:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    c95c:	mov	w1, w0
    c960:	add	x0, sp, #0x3c
    c964:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c968:	and	w0, w0, #0xff
    c96c:	eor	w0, w0, #0x1
    c970:	and	w0, w0, #0xff
    c974:	cmp	w0, #0x0
    c978:	b.eq	c984 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7a14>  // b.none
    c97c:	mov	w0, #0x0                   	// #0
    c980:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c984:	mov	w2, #0x8                   	// #8
    c988:	mov	w1, #0x5                   	// #5
    c98c:	ldr	w0, [sp, #52]
    c990:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c994:	str	w0, [sp, #3772]
    c998:	ldr	w0, [sp, #3772]
    c99c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    c9a0:	add	x2, sp, #0x200
    c9a4:	stp	x0, x1, [x2, #-184]
    c9a8:	add	x0, sp, #0x148
    c9ac:	mov	x1, x0
    c9b0:	ldr	x0, [sp, #40]
    c9b4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    c9b8:	ldr	w0, [sp, #60]
    c9bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    c9c0:	mov	w2, #0x5                   	// #5
    c9c4:	mov	w1, #0x5                   	// #5
    c9c8:	ldr	w0, [sp, #52]
    c9cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    c9d0:	str	w0, [sp, #3772]
    c9d4:	ldr	x3, [sp, #24]
    c9d8:	ldr	x2, [sp, #32]
    c9dc:	ldr	w1, [sp, #3772]
    c9e0:	ldr	x0, [sp, #40]
    c9e4:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    c9e8:	mov	w1, w0
    c9ec:	add	x0, sp, #0x3c
    c9f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    c9f4:	and	w0, w0, #0xff
    c9f8:	eor	w0, w0, #0x1
    c9fc:	and	w0, w0, #0xff
    ca00:	cmp	w0, #0x0
    ca04:	b.eq	ca10 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7aa0>  // b.none
    ca08:	mov	w0, #0x0                   	// #0
    ca0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ca10:	mov	w2, #0x5                   	// #5
    ca14:	mov	w1, #0x10                  	// #16
    ca18:	ldr	w0, [sp, #52]
    ca1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ca20:	str	w0, [sp, #3772]
    ca24:	ldr	x3, [sp, #24]
    ca28:	ldr	x2, [sp, #32]
    ca2c:	ldr	w1, [sp, #3772]
    ca30:	ldr	x0, [sp, #40]
    ca34:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
    ca38:	mov	w1, w0
    ca3c:	add	x0, sp, #0x3c
    ca40:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ca44:	and	w0, w0, #0xff
    ca48:	eor	w0, w0, #0x1
    ca4c:	and	w0, w0, #0xff
    ca50:	cmp	w0, #0x0
    ca54:	b.eq	ca60 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7af0>  // b.none
    ca58:	mov	w0, #0x0                   	// #0
    ca5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ca60:	ldr	w0, [sp, #60]
    ca64:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ca68:	mov	w2, #0x5                   	// #5
    ca6c:	mov	w1, #0x0                   	// #0
    ca70:	ldr	w0, [sp, #52]
    ca74:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ca78:	str	w0, [sp, #3772]
    ca7c:	ldr	x3, [sp, #24]
    ca80:	ldr	x2, [sp, #32]
    ca84:	ldr	w1, [sp, #3772]
    ca88:	ldr	x0, [sp, #40]
    ca8c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    ca90:	mov	w1, w0
    ca94:	add	x0, sp, #0x3c
    ca98:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ca9c:	and	w0, w0, #0xff
    caa0:	eor	w0, w0, #0x1
    caa4:	and	w0, w0, #0xff
    caa8:	cmp	w0, #0x0
    caac:	b.eq	cab8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7b48>  // b.none
    cab0:	mov	w0, #0x0                   	// #0
    cab4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cab8:	mov	w2, #0x5                   	// #5
    cabc:	mov	w1, #0x0                   	// #0
    cac0:	ldr	w0, [sp, #52]
    cac4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    cac8:	str	w0, [sp, #3772]
    cacc:	ldr	x3, [sp, #24]
    cad0:	ldr	x2, [sp, #32]
    cad4:	ldr	w1, [sp, #3772]
    cad8:	ldr	x0, [sp, #40]
    cadc:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    cae0:	mov	w1, w0
    cae4:	add	x0, sp, #0x3c
    cae8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    caec:	and	w0, w0, #0xff
    caf0:	eor	w0, w0, #0x1
    caf4:	and	w0, w0, #0xff
    caf8:	cmp	w0, #0x0
    cafc:	b.eq	cb08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7b98>  // b.none
    cb00:	mov	w0, #0x0                   	// #0
    cb04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cb08:	mov	w2, #0x9                   	// #9
    cb0c:	mov	w1, #0x5                   	// #5
    cb10:	ldr	w0, [sp, #52]
    cb14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    cb18:	str	w0, [sp, #3772]
    cb1c:	ldr	x3, [sp, #24]
    cb20:	ldr	x2, [sp, #32]
    cb24:	ldr	w1, [sp, #3772]
    cb28:	ldr	x0, [sp, #40]
    cb2c:	bl	2a9ac <_Z16DecodeImm8OptLslILi32EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    cb30:	mov	w1, w0
    cb34:	add	x0, sp, #0x3c
    cb38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    cb3c:	and	w0, w0, #0xff
    cb40:	eor	w0, w0, #0x1
    cb44:	and	w0, w0, #0xff
    cb48:	cmp	w0, #0x0
    cb4c:	b.eq	cb58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7be8>  // b.none
    cb50:	mov	w0, #0x0                   	// #0
    cb54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cb58:	ldr	w0, [sp, #60]
    cb5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cb60:	mov	w2, #0x5                   	// #5
    cb64:	mov	w1, #0x0                   	// #0
    cb68:	ldr	w0, [sp, #52]
    cb6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    cb70:	str	w0, [sp, #3772]
    cb74:	ldr	x3, [sp, #24]
    cb78:	ldr	x2, [sp, #32]
    cb7c:	ldr	w1, [sp, #3772]
    cb80:	ldr	x0, [sp, #40]
    cb84:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    cb88:	mov	w1, w0
    cb8c:	add	x0, sp, #0x3c
    cb90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    cb94:	and	w0, w0, #0xff
    cb98:	eor	w0, w0, #0x1
    cb9c:	and	w0, w0, #0xff
    cba0:	cmp	w0, #0x0
    cba4:	b.eq	cbb0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7c40>  // b.none
    cba8:	mov	w0, #0x0                   	// #0
    cbac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cbb0:	mov	w2, #0x9                   	// #9
    cbb4:	mov	w1, #0x5                   	// #5
    cbb8:	ldr	w0, [sp, #52]
    cbbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    cbc0:	str	w0, [sp, #3772]
    cbc4:	ldr	x3, [sp, #24]
    cbc8:	ldr	x2, [sp, #32]
    cbcc:	ldr	w1, [sp, #3772]
    cbd0:	ldr	x0, [sp, #40]
    cbd4:	bl	2a9ac <_Z16DecodeImm8OptLslILi32EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    cbd8:	mov	w1, w0
    cbdc:	add	x0, sp, #0x3c
    cbe0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    cbe4:	and	w0, w0, #0xff
    cbe8:	eor	w0, w0, #0x1
    cbec:	and	w0, w0, #0xff
    cbf0:	cmp	w0, #0x0
    cbf4:	b.eq	cc00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7c90>  // b.none
    cbf8:	mov	w0, #0x0                   	// #0
    cbfc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cc00:	ldr	w0, [sp, #60]
    cc04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cc08:	mov	w2, #0x5                   	// #5
    cc0c:	mov	w1, #0x5                   	// #5
    cc10:	ldr	w0, [sp, #52]
    cc14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    cc18:	str	w0, [sp, #3772]
    cc1c:	ldr	x3, [sp, #24]
    cc20:	ldr	x2, [sp, #32]
    cc24:	ldr	w1, [sp, #3772]
    cc28:	ldr	x0, [sp, #40]
    cc2c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    cc30:	mov	w1, w0
    cc34:	add	x0, sp, #0x3c
    cc38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    cc3c:	and	w0, w0, #0xff
    cc40:	eor	w0, w0, #0x1
    cc44:	and	w0, w0, #0xff
    cc48:	cmp	w0, #0x0
    cc4c:	b.eq	cc58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7ce8>  // b.none
    cc50:	mov	w0, #0x0                   	// #0
    cc54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cc58:	mov	w2, #0x5                   	// #5
    cc5c:	mov	w1, #0x10                  	// #16
    cc60:	ldr	w0, [sp, #52]
    cc64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    cc68:	str	w0, [sp, #3772]
    cc6c:	ldr	x3, [sp, #24]
    cc70:	ldr	x2, [sp, #32]
    cc74:	ldr	w1, [sp, #3772]
    cc78:	ldr	x0, [sp, #40]
    cc7c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    cc80:	mov	w1, w0
    cc84:	add	x0, sp, #0x3c
    cc88:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    cc8c:	and	w0, w0, #0xff
    cc90:	eor	w0, w0, #0x1
    cc94:	and	w0, w0, #0xff
    cc98:	cmp	w0, #0x0
    cc9c:	b.eq	cca8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7d38>  // b.none
    cca0:	mov	w0, #0x0                   	// #0
    cca4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cca8:	ldr	w0, [sp, #60]
    ccac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ccb0:	mov	w2, #0x5                   	// #5
    ccb4:	mov	w1, #0x0                   	// #0
    ccb8:	ldr	w0, [sp, #52]
    ccbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ccc0:	str	w0, [sp, #3772]
    ccc4:	ldr	x3, [sp, #24]
    ccc8:	ldr	x2, [sp, #32]
    cccc:	ldr	w1, [sp, #3772]
    ccd0:	ldr	x0, [sp, #40]
    ccd4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    ccd8:	mov	w1, w0
    ccdc:	add	x0, sp, #0x3c
    cce0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    cce4:	and	w0, w0, #0xff
    cce8:	eor	w0, w0, #0x1
    ccec:	and	w0, w0, #0xff
    ccf0:	cmp	w0, #0x0
    ccf4:	b.eq	cd00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7d90>  // b.none
    ccf8:	mov	w0, #0x0                   	// #0
    ccfc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cd00:	mov	w2, #0x5                   	// #5
    cd04:	mov	w1, #0x0                   	// #0
    cd08:	ldr	w0, [sp, #52]
    cd0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    cd10:	str	w0, [sp, #3772]
    cd14:	ldr	x3, [sp, #24]
    cd18:	ldr	x2, [sp, #32]
    cd1c:	ldr	w1, [sp, #3772]
    cd20:	ldr	x0, [sp, #40]
    cd24:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    cd28:	mov	w1, w0
    cd2c:	add	x0, sp, #0x3c
    cd30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    cd34:	and	w0, w0, #0xff
    cd38:	eor	w0, w0, #0x1
    cd3c:	and	w0, w0, #0xff
    cd40:	cmp	w0, #0x0
    cd44:	b.eq	cd50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7de0>  // b.none
    cd48:	mov	w0, #0x0                   	// #0
    cd4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cd50:	mov	w2, #0x9                   	// #9
    cd54:	mov	w1, #0x5                   	// #5
    cd58:	ldr	w0, [sp, #52]
    cd5c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    cd60:	str	w0, [sp, #3772]
    cd64:	ldr	x3, [sp, #24]
    cd68:	ldr	x2, [sp, #32]
    cd6c:	ldr	w1, [sp, #3772]
    cd70:	ldr	x0, [sp, #40]
    cd74:	bl	2aa24 <_Z16DecodeImm8OptLslILi64EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    cd78:	mov	w1, w0
    cd7c:	add	x0, sp, #0x3c
    cd80:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    cd84:	and	w0, w0, #0xff
    cd88:	eor	w0, w0, #0x1
    cd8c:	and	w0, w0, #0xff
    cd90:	cmp	w0, #0x0
    cd94:	b.eq	cda0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7e30>  // b.none
    cd98:	mov	w0, #0x0                   	// #0
    cd9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cda0:	ldr	w0, [sp, #60]
    cda4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cda8:	mov	w2, #0x5                   	// #5
    cdac:	mov	w1, #0x0                   	// #0
    cdb0:	ldr	w0, [sp, #52]
    cdb4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    cdb8:	str	w0, [sp, #3772]
    cdbc:	ldr	x3, [sp, #24]
    cdc0:	ldr	x2, [sp, #32]
    cdc4:	ldr	w1, [sp, #3772]
    cdc8:	ldr	x0, [sp, #40]
    cdcc:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    cdd0:	mov	w1, w0
    cdd4:	add	x0, sp, #0x3c
    cdd8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    cddc:	and	w0, w0, #0xff
    cde0:	eor	w0, w0, #0x1
    cde4:	and	w0, w0, #0xff
    cde8:	cmp	w0, #0x0
    cdec:	b.eq	cdf8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7e88>  // b.none
    cdf0:	mov	w0, #0x0                   	// #0
    cdf4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cdf8:	mov	w2, #0x9                   	// #9
    cdfc:	mov	w1, #0x5                   	// #5
    ce00:	ldr	w0, [sp, #52]
    ce04:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ce08:	str	w0, [sp, #3772]
    ce0c:	ldr	x3, [sp, #24]
    ce10:	ldr	x2, [sp, #32]
    ce14:	ldr	w1, [sp, #3772]
    ce18:	ldr	x0, [sp, #40]
    ce1c:	bl	2aa24 <_Z16DecodeImm8OptLslILi64EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>
    ce20:	mov	w1, w0
    ce24:	add	x0, sp, #0x3c
    ce28:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ce2c:	and	w0, w0, #0xff
    ce30:	eor	w0, w0, #0x1
    ce34:	and	w0, w0, #0xff
    ce38:	cmp	w0, #0x0
    ce3c:	b.eq	ce48 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7ed8>  // b.none
    ce40:	mov	w0, #0x0                   	// #0
    ce44:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ce48:	ldr	w0, [sp, #60]
    ce4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ce50:	mov	w2, #0x5                   	// #5
    ce54:	mov	w1, #0x0                   	// #0
    ce58:	ldr	w0, [sp, #52]
    ce5c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ce60:	str	w0, [sp, #3772]
    ce64:	ldr	x3, [sp, #24]
    ce68:	ldr	x2, [sp, #32]
    ce6c:	ldr	w1, [sp, #3772]
    ce70:	ldr	x0, [sp, #40]
    ce74:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    ce78:	mov	w1, w0
    ce7c:	add	x0, sp, #0x3c
    ce80:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ce84:	and	w0, w0, #0xff
    ce88:	eor	w0, w0, #0x1
    ce8c:	and	w0, w0, #0xff
    ce90:	cmp	w0, #0x0
    ce94:	b.eq	cea0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7f30>  // b.none
    ce98:	mov	w0, #0x0                   	// #0
    ce9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cea0:	mov	w2, #0x5                   	// #5
    cea4:	mov	w1, #0x0                   	// #0
    cea8:	ldr	w0, [sp, #52]
    ceac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ceb0:	str	w0, [sp, #3772]
    ceb4:	ldr	x3, [sp, #24]
    ceb8:	ldr	x2, [sp, #32]
    cebc:	ldr	w1, [sp, #3772]
    cec0:	ldr	x0, [sp, #40]
    cec4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    cec8:	mov	w1, w0
    cecc:	add	x0, sp, #0x3c
    ced0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ced4:	and	w0, w0, #0xff
    ced8:	eor	w0, w0, #0x1
    cedc:	and	w0, w0, #0xff
    cee0:	cmp	w0, #0x0
    cee4:	b.eq	cef0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7f80>  // b.none
    cee8:	mov	w0, #0x0                   	// #0
    ceec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cef0:	mov	w2, #0x5                   	// #5
    cef4:	mov	w1, #0x5                   	// #5
    cef8:	ldr	w0, [sp, #52]
    cefc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    cf00:	str	w0, [sp, #3772]
    cf04:	ldr	x3, [sp, #24]
    cf08:	ldr	x2, [sp, #32]
    cf0c:	ldr	w1, [sp, #3772]
    cf10:	ldr	x0, [sp, #40]
    cf14:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    cf18:	mov	w1, w0
    cf1c:	add	x0, sp, #0x3c
    cf20:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    cf24:	and	w0, w0, #0xff
    cf28:	eor	w0, w0, #0x1
    cf2c:	and	w0, w0, #0xff
    cf30:	cmp	w0, #0x0
    cf34:	b.eq	cf40 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x7fd0>  // b.none
    cf38:	mov	w0, #0x0                   	// #0
    cf3c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cf40:	mov	w2, #0x3                   	// #3
    cf44:	mov	w1, #0x10                  	// #16
    cf48:	ldr	w0, [sp, #52]
    cf4c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    cf50:	str	w0, [sp, #3772]
    cf54:	ldr	x3, [sp, #24]
    cf58:	ldr	x2, [sp, #32]
    cf5c:	ldr	w1, [sp, #3772]
    cf60:	ldr	x0, [sp, #40]
    cf64:	bl	d78 <_ZL25DecodeZPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    cf68:	mov	w1, w0
    cf6c:	add	x0, sp, #0x3c
    cf70:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    cf74:	and	w0, w0, #0xff
    cf78:	eor	w0, w0, #0x1
    cf7c:	and	w0, w0, #0xff
    cf80:	cmp	w0, #0x0
    cf84:	b.eq	cf90 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8020>  // b.none
    cf88:	mov	w0, #0x0                   	// #0
    cf8c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cf90:	str	wzr, [sp, #3772]
    cf94:	mov	w2, #0x2                   	// #2
    cf98:	mov	w1, #0x13                  	// #19
    cf9c:	ldr	w0, [sp, #52]
    cfa0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    cfa4:	mov	w1, w0
    cfa8:	ldr	w0, [sp, #3772]
    cfac:	orr	w0, w0, w1
    cfb0:	str	w0, [sp, #3772]
    cfb4:	mov	w2, #0x1                   	// #1
    cfb8:	mov	w1, #0x16                  	// #22
    cfbc:	ldr	w0, [sp, #52]
    cfc0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    cfc4:	lsl	w0, w0, #2
    cfc8:	ldr	w1, [sp, #3772]
    cfcc:	orr	w0, w1, w0
    cfd0:	str	w0, [sp, #3772]
    cfd4:	ldr	w0, [sp, #3772]
    cfd8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    cfdc:	add	x2, sp, #0x200
    cfe0:	stp	x0, x1, [x2, #-168]
    cfe4:	add	x0, sp, #0x158
    cfe8:	mov	x1, x0
    cfec:	ldr	x0, [sp, #40]
    cff0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    cff4:	ldr	w0, [sp, #60]
    cff8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    cffc:	mov	w2, #0x5                   	// #5
    d000:	mov	w1, #0x0                   	// #0
    d004:	ldr	w0, [sp, #52]
    d008:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d00c:	str	w0, [sp, #3772]
    d010:	ldr	x3, [sp, #24]
    d014:	ldr	x2, [sp, #32]
    d018:	ldr	w1, [sp, #3772]
    d01c:	ldr	x0, [sp, #40]
    d020:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d024:	mov	w1, w0
    d028:	add	x0, sp, #0x3c
    d02c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d030:	and	w0, w0, #0xff
    d034:	eor	w0, w0, #0x1
    d038:	and	w0, w0, #0xff
    d03c:	cmp	w0, #0x0
    d040:	b.eq	d04c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x80dc>  // b.none
    d044:	mov	w0, #0x0                   	// #0
    d048:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d04c:	mov	w2, #0x5                   	// #5
    d050:	mov	w1, #0x0                   	// #0
    d054:	ldr	w0, [sp, #52]
    d058:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d05c:	str	w0, [sp, #3772]
    d060:	ldr	x3, [sp, #24]
    d064:	ldr	x2, [sp, #32]
    d068:	ldr	w1, [sp, #3772]
    d06c:	ldr	x0, [sp, #40]
    d070:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d074:	mov	w1, w0
    d078:	add	x0, sp, #0x3c
    d07c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d080:	and	w0, w0, #0xff
    d084:	eor	w0, w0, #0x1
    d088:	and	w0, w0, #0xff
    d08c:	cmp	w0, #0x0
    d090:	b.eq	d09c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x812c>  // b.none
    d094:	mov	w0, #0x0                   	// #0
    d098:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d09c:	mov	w2, #0x5                   	// #5
    d0a0:	mov	w1, #0x5                   	// #5
    d0a4:	ldr	w0, [sp, #52]
    d0a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d0ac:	str	w0, [sp, #3772]
    d0b0:	ldr	x3, [sp, #24]
    d0b4:	ldr	x2, [sp, #32]
    d0b8:	ldr	w1, [sp, #3772]
    d0bc:	ldr	x0, [sp, #40]
    d0c0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d0c4:	mov	w1, w0
    d0c8:	add	x0, sp, #0x3c
    d0cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d0d0:	and	w0, w0, #0xff
    d0d4:	eor	w0, w0, #0x1
    d0d8:	and	w0, w0, #0xff
    d0dc:	cmp	w0, #0x0
    d0e0:	b.eq	d0ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x817c>  // b.none
    d0e4:	mov	w0, #0x0                   	// #0
    d0e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d0ec:	mov	w2, #0x5                   	// #5
    d0f0:	mov	w1, #0x10                  	// #16
    d0f4:	ldr	w0, [sp, #52]
    d0f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d0fc:	str	w0, [sp, #3772]
    d100:	ldr	x3, [sp, #24]
    d104:	ldr	x2, [sp, #32]
    d108:	ldr	w1, [sp, #3772]
    d10c:	ldr	x0, [sp, #40]
    d110:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d114:	mov	w1, w0
    d118:	add	x0, sp, #0x3c
    d11c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d120:	and	w0, w0, #0xff
    d124:	eor	w0, w0, #0x1
    d128:	and	w0, w0, #0xff
    d12c:	cmp	w0, #0x0
    d130:	b.eq	d13c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x81cc>  // b.none
    d134:	mov	w0, #0x0                   	// #0
    d138:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d13c:	mov	w2, #0x2                   	// #2
    d140:	mov	w1, #0xa                   	// #10
    d144:	ldr	w0, [sp, #52]
    d148:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d14c:	str	w0, [sp, #3772]
    d150:	ldr	w0, [sp, #3772]
    d154:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    d158:	add	x2, sp, #0x200
    d15c:	stp	x0, x1, [x2, #-152]
    d160:	add	x0, sp, #0x168
    d164:	mov	x1, x0
    d168:	ldr	x0, [sp, #40]
    d16c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    d170:	ldr	w0, [sp, #60]
    d174:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d178:	mov	w2, #0x5                   	// #5
    d17c:	mov	w1, #0x0                   	// #0
    d180:	ldr	w0, [sp, #52]
    d184:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d188:	str	w0, [sp, #3772]
    d18c:	ldr	x3, [sp, #24]
    d190:	ldr	x2, [sp, #32]
    d194:	ldr	w1, [sp, #3772]
    d198:	ldr	x0, [sp, #40]
    d19c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d1a0:	mov	w1, w0
    d1a4:	add	x0, sp, #0x3c
    d1a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d1ac:	and	w0, w0, #0xff
    d1b0:	eor	w0, w0, #0x1
    d1b4:	and	w0, w0, #0xff
    d1b8:	cmp	w0, #0x0
    d1bc:	b.eq	d1c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8258>  // b.none
    d1c0:	mov	w0, #0x0                   	// #0
    d1c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d1c8:	mov	w2, #0x5                   	// #5
    d1cc:	mov	w1, #0x0                   	// #0
    d1d0:	ldr	w0, [sp, #52]
    d1d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d1d8:	str	w0, [sp, #3772]
    d1dc:	ldr	x3, [sp, #24]
    d1e0:	ldr	x2, [sp, #32]
    d1e4:	ldr	w1, [sp, #3772]
    d1e8:	ldr	x0, [sp, #40]
    d1ec:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d1f0:	mov	w1, w0
    d1f4:	add	x0, sp, #0x3c
    d1f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d1fc:	and	w0, w0, #0xff
    d200:	eor	w0, w0, #0x1
    d204:	and	w0, w0, #0xff
    d208:	cmp	w0, #0x0
    d20c:	b.eq	d218 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x82a8>  // b.none
    d210:	mov	w0, #0x0                   	// #0
    d214:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d218:	mov	w2, #0x5                   	// #5
    d21c:	mov	w1, #0x5                   	// #5
    d220:	ldr	w0, [sp, #52]
    d224:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d228:	str	w0, [sp, #3772]
    d22c:	ldr	x3, [sp, #24]
    d230:	ldr	x2, [sp, #32]
    d234:	ldr	w1, [sp, #3772]
    d238:	ldr	x0, [sp, #40]
    d23c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d240:	mov	w1, w0
    d244:	add	x0, sp, #0x3c
    d248:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d24c:	and	w0, w0, #0xff
    d250:	eor	w0, w0, #0x1
    d254:	and	w0, w0, #0xff
    d258:	cmp	w0, #0x0
    d25c:	b.eq	d268 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x82f8>  // b.none
    d260:	mov	w0, #0x0                   	// #0
    d264:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d268:	mov	w2, #0x3                   	// #3
    d26c:	mov	w1, #0x10                  	// #16
    d270:	ldr	w0, [sp, #52]
    d274:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d278:	str	w0, [sp, #3772]
    d27c:	ldr	x3, [sp, #24]
    d280:	ldr	x2, [sp, #32]
    d284:	ldr	w1, [sp, #3772]
    d288:	ldr	x0, [sp, #40]
    d28c:	bl	d78 <_ZL25DecodeZPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    d290:	mov	w1, w0
    d294:	add	x0, sp, #0x3c
    d298:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d29c:	and	w0, w0, #0xff
    d2a0:	eor	w0, w0, #0x1
    d2a4:	and	w0, w0, #0xff
    d2a8:	cmp	w0, #0x0
    d2ac:	b.eq	d2b8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8348>  // b.none
    d2b0:	mov	w0, #0x0                   	// #0
    d2b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d2b8:	mov	w2, #0x2                   	// #2
    d2bc:	mov	w1, #0x13                  	// #19
    d2c0:	ldr	w0, [sp, #52]
    d2c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d2c8:	str	w0, [sp, #3772]
    d2cc:	ldr	w0, [sp, #3772]
    d2d0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    d2d4:	add	x2, sp, #0x200
    d2d8:	stp	x0, x1, [x2, #-136]
    d2dc:	add	x0, sp, #0x178
    d2e0:	mov	x1, x0
    d2e4:	ldr	x0, [sp, #40]
    d2e8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    d2ec:	ldr	w0, [sp, #60]
    d2f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d2f4:	mov	w2, #0x5                   	// #5
    d2f8:	mov	w1, #0x0                   	// #0
    d2fc:	ldr	w0, [sp, #52]
    d300:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d304:	str	w0, [sp, #3772]
    d308:	ldr	x3, [sp, #24]
    d30c:	ldr	x2, [sp, #32]
    d310:	ldr	w1, [sp, #3772]
    d314:	ldr	x0, [sp, #40]
    d318:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d31c:	mov	w1, w0
    d320:	add	x0, sp, #0x3c
    d324:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d328:	and	w0, w0, #0xff
    d32c:	eor	w0, w0, #0x1
    d330:	and	w0, w0, #0xff
    d334:	cmp	w0, #0x0
    d338:	b.eq	d344 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x83d4>  // b.none
    d33c:	mov	w0, #0x0                   	// #0
    d340:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d344:	mov	w2, #0x5                   	// #5
    d348:	mov	w1, #0x0                   	// #0
    d34c:	ldr	w0, [sp, #52]
    d350:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d354:	str	w0, [sp, #3772]
    d358:	ldr	x3, [sp, #24]
    d35c:	ldr	x2, [sp, #32]
    d360:	ldr	w1, [sp, #3772]
    d364:	ldr	x0, [sp, #40]
    d368:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d36c:	mov	w1, w0
    d370:	add	x0, sp, #0x3c
    d374:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d378:	and	w0, w0, #0xff
    d37c:	eor	w0, w0, #0x1
    d380:	and	w0, w0, #0xff
    d384:	cmp	w0, #0x0
    d388:	b.eq	d394 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8424>  // b.none
    d38c:	mov	w0, #0x0                   	// #0
    d390:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d394:	mov	w2, #0x5                   	// #5
    d398:	mov	w1, #0x5                   	// #5
    d39c:	ldr	w0, [sp, #52]
    d3a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d3a4:	str	w0, [sp, #3772]
    d3a8:	ldr	x3, [sp, #24]
    d3ac:	ldr	x2, [sp, #32]
    d3b0:	ldr	w1, [sp, #3772]
    d3b4:	ldr	x0, [sp, #40]
    d3b8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d3bc:	mov	w1, w0
    d3c0:	add	x0, sp, #0x3c
    d3c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d3c8:	and	w0, w0, #0xff
    d3cc:	eor	w0, w0, #0x1
    d3d0:	and	w0, w0, #0xff
    d3d4:	cmp	w0, #0x0
    d3d8:	b.eq	d3e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8474>  // b.none
    d3dc:	mov	w0, #0x0                   	// #0
    d3e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d3e4:	mov	w2, #0x4                   	// #4
    d3e8:	mov	w1, #0x10                  	// #16
    d3ec:	ldr	w0, [sp, #52]
    d3f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d3f4:	str	w0, [sp, #3772]
    d3f8:	ldr	x3, [sp, #24]
    d3fc:	ldr	x2, [sp, #32]
    d400:	ldr	w1, [sp, #3772]
    d404:	ldr	x0, [sp, #40]
    d408:	bl	d2c <_ZL25DecodeZPR_4bRegisterClassRN4llvm6MCInstEjmPKv>
    d40c:	mov	w1, w0
    d410:	add	x0, sp, #0x3c
    d414:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d418:	and	w0, w0, #0xff
    d41c:	eor	w0, w0, #0x1
    d420:	and	w0, w0, #0xff
    d424:	cmp	w0, #0x0
    d428:	b.eq	d434 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x84c4>  // b.none
    d42c:	mov	w0, #0x0                   	// #0
    d430:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d434:	mov	w2, #0x1                   	// #1
    d438:	mov	w1, #0x14                  	// #20
    d43c:	ldr	w0, [sp, #52]
    d440:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d444:	str	w0, [sp, #3772]
    d448:	ldr	w0, [sp, #3772]
    d44c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    d450:	add	x2, sp, #0x200
    d454:	stp	x0, x1, [x2, #-120]
    d458:	add	x0, sp, #0x188
    d45c:	mov	x1, x0
    d460:	ldr	x0, [sp, #40]
    d464:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    d468:	ldr	w0, [sp, #60]
    d46c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d470:	mov	w2, #0x5                   	// #5
    d474:	mov	w1, #0x0                   	// #0
    d478:	ldr	w0, [sp, #52]
    d47c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d480:	str	w0, [sp, #3772]
    d484:	ldr	x3, [sp, #24]
    d488:	ldr	x2, [sp, #32]
    d48c:	ldr	w1, [sp, #3772]
    d490:	ldr	x0, [sp, #40]
    d494:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d498:	mov	w1, w0
    d49c:	add	x0, sp, #0x3c
    d4a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d4a4:	and	w0, w0, #0xff
    d4a8:	eor	w0, w0, #0x1
    d4ac:	and	w0, w0, #0xff
    d4b0:	cmp	w0, #0x0
    d4b4:	b.eq	d4c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8550>  // b.none
    d4b8:	mov	w0, #0x0                   	// #0
    d4bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d4c0:	mov	w2, #0x5                   	// #5
    d4c4:	mov	w1, #0x0                   	// #0
    d4c8:	ldr	w0, [sp, #52]
    d4cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d4d0:	str	w0, [sp, #3772]
    d4d4:	ldr	x3, [sp, #24]
    d4d8:	ldr	x2, [sp, #32]
    d4dc:	ldr	w1, [sp, #3772]
    d4e0:	ldr	x0, [sp, #40]
    d4e4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d4e8:	mov	w1, w0
    d4ec:	add	x0, sp, #0x3c
    d4f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d4f4:	and	w0, w0, #0xff
    d4f8:	eor	w0, w0, #0x1
    d4fc:	and	w0, w0, #0xff
    d500:	cmp	w0, #0x0
    d504:	b.eq	d510 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x85a0>  // b.none
    d508:	mov	w0, #0x0                   	// #0
    d50c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d510:	mov	w2, #0x5                   	// #5
    d514:	mov	w1, #0x5                   	// #5
    d518:	ldr	w0, [sp, #52]
    d51c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d520:	str	w0, [sp, #3772]
    d524:	ldr	x3, [sp, #24]
    d528:	ldr	x2, [sp, #32]
    d52c:	ldr	w1, [sp, #3772]
    d530:	ldr	x0, [sp, #40]
    d534:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d538:	mov	w1, w0
    d53c:	add	x0, sp, #0x3c
    d540:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d544:	and	w0, w0, #0xff
    d548:	eor	w0, w0, #0x1
    d54c:	and	w0, w0, #0xff
    d550:	cmp	w0, #0x0
    d554:	b.eq	d560 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x85f0>  // b.none
    d558:	mov	w0, #0x0                   	// #0
    d55c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d560:	mov	w2, #0x3                   	// #3
    d564:	mov	w1, #0x10                  	// #16
    d568:	ldr	w0, [sp, #52]
    d56c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d570:	str	w0, [sp, #3772]
    d574:	ldr	x3, [sp, #24]
    d578:	ldr	x2, [sp, #32]
    d57c:	ldr	w1, [sp, #3772]
    d580:	ldr	x0, [sp, #40]
    d584:	bl	d78 <_ZL25DecodeZPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    d588:	mov	w1, w0
    d58c:	add	x0, sp, #0x3c
    d590:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d594:	and	w0, w0, #0xff
    d598:	eor	w0, w0, #0x1
    d59c:	and	w0, w0, #0xff
    d5a0:	cmp	w0, #0x0
    d5a4:	b.eq	d5b0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8640>  // b.none
    d5a8:	mov	w0, #0x0                   	// #0
    d5ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d5b0:	str	wzr, [sp, #3772]
    d5b4:	mov	w2, #0x1                   	// #1
    d5b8:	mov	w1, #0xb                   	// #11
    d5bc:	ldr	w0, [sp, #52]
    d5c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d5c4:	mov	w1, w0
    d5c8:	ldr	w0, [sp, #3772]
    d5cc:	orr	w0, w0, w1
    d5d0:	str	w0, [sp, #3772]
    d5d4:	mov	w2, #0x2                   	// #2
    d5d8:	mov	w1, #0x13                  	// #19
    d5dc:	ldr	w0, [sp, #52]
    d5e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d5e4:	lsl	w0, w0, #1
    d5e8:	ldr	w1, [sp, #3772]
    d5ec:	orr	w0, w1, w0
    d5f0:	str	w0, [sp, #3772]
    d5f4:	ldr	w0, [sp, #3772]
    d5f8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    d5fc:	add	x2, sp, #0x200
    d600:	stp	x0, x1, [x2, #-104]
    d604:	add	x0, sp, #0x198
    d608:	mov	x1, x0
    d60c:	ldr	x0, [sp, #40]
    d610:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    d614:	ldr	w0, [sp, #60]
    d618:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d61c:	mov	w2, #0x5                   	// #5
    d620:	mov	w1, #0x0                   	// #0
    d624:	ldr	w0, [sp, #52]
    d628:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d62c:	str	w0, [sp, #3772]
    d630:	ldr	x3, [sp, #24]
    d634:	ldr	x2, [sp, #32]
    d638:	ldr	w1, [sp, #3772]
    d63c:	ldr	x0, [sp, #40]
    d640:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d644:	mov	w1, w0
    d648:	add	x0, sp, #0x3c
    d64c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d650:	and	w0, w0, #0xff
    d654:	eor	w0, w0, #0x1
    d658:	and	w0, w0, #0xff
    d65c:	cmp	w0, #0x0
    d660:	b.eq	d66c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x86fc>  // b.none
    d664:	mov	w0, #0x0                   	// #0
    d668:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d66c:	mov	w2, #0x5                   	// #5
    d670:	mov	w1, #0x0                   	// #0
    d674:	ldr	w0, [sp, #52]
    d678:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d67c:	str	w0, [sp, #3772]
    d680:	ldr	x3, [sp, #24]
    d684:	ldr	x2, [sp, #32]
    d688:	ldr	w1, [sp, #3772]
    d68c:	ldr	x0, [sp, #40]
    d690:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d694:	mov	w1, w0
    d698:	add	x0, sp, #0x3c
    d69c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d6a0:	and	w0, w0, #0xff
    d6a4:	eor	w0, w0, #0x1
    d6a8:	and	w0, w0, #0xff
    d6ac:	cmp	w0, #0x0
    d6b0:	b.eq	d6bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x874c>  // b.none
    d6b4:	mov	w0, #0x0                   	// #0
    d6b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d6bc:	mov	w2, #0x5                   	// #5
    d6c0:	mov	w1, #0x5                   	// #5
    d6c4:	ldr	w0, [sp, #52]
    d6c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d6cc:	str	w0, [sp, #3772]
    d6d0:	ldr	x3, [sp, #24]
    d6d4:	ldr	x2, [sp, #32]
    d6d8:	ldr	w1, [sp, #3772]
    d6dc:	ldr	x0, [sp, #40]
    d6e0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d6e4:	mov	w1, w0
    d6e8:	add	x0, sp, #0x3c
    d6ec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d6f0:	and	w0, w0, #0xff
    d6f4:	eor	w0, w0, #0x1
    d6f8:	and	w0, w0, #0xff
    d6fc:	cmp	w0, #0x0
    d700:	b.eq	d70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x879c>  // b.none
    d704:	mov	w0, #0x0                   	// #0
    d708:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d70c:	mov	w2, #0x4                   	// #4
    d710:	mov	w1, #0x10                  	// #16
    d714:	ldr	w0, [sp, #52]
    d718:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d71c:	str	w0, [sp, #3772]
    d720:	ldr	x3, [sp, #24]
    d724:	ldr	x2, [sp, #32]
    d728:	ldr	w1, [sp, #3772]
    d72c:	ldr	x0, [sp, #40]
    d730:	bl	d2c <_ZL25DecodeZPR_4bRegisterClassRN4llvm6MCInstEjmPKv>
    d734:	mov	w1, w0
    d738:	add	x0, sp, #0x3c
    d73c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d740:	and	w0, w0, #0xff
    d744:	eor	w0, w0, #0x1
    d748:	and	w0, w0, #0xff
    d74c:	cmp	w0, #0x0
    d750:	b.eq	d75c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x87ec>  // b.none
    d754:	mov	w0, #0x0                   	// #0
    d758:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d75c:	str	wzr, [sp, #3772]
    d760:	mov	w2, #0x1                   	// #1
    d764:	mov	w1, #0xb                   	// #11
    d768:	ldr	w0, [sp, #52]
    d76c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d770:	mov	w1, w0
    d774:	ldr	w0, [sp, #3772]
    d778:	orr	w0, w0, w1
    d77c:	str	w0, [sp, #3772]
    d780:	mov	w2, #0x1                   	// #1
    d784:	mov	w1, #0x14                  	// #20
    d788:	ldr	w0, [sp, #52]
    d78c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d790:	lsl	w0, w0, #1
    d794:	ldr	w1, [sp, #3772]
    d798:	orr	w0, w1, w0
    d79c:	str	w0, [sp, #3772]
    d7a0:	ldr	w0, [sp, #3772]
    d7a4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    d7a8:	add	x2, sp, #0x200
    d7ac:	stp	x0, x1, [x2, #-88]
    d7b0:	add	x0, sp, #0x1a8
    d7b4:	mov	x1, x0
    d7b8:	ldr	x0, [sp, #40]
    d7bc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    d7c0:	ldr	w0, [sp, #60]
    d7c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d7c8:	mov	w2, #0x5                   	// #5
    d7cc:	mov	w1, #0x0                   	// #0
    d7d0:	ldr	w0, [sp, #52]
    d7d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d7d8:	str	w0, [sp, #3772]
    d7dc:	ldr	x3, [sp, #24]
    d7e0:	ldr	x2, [sp, #32]
    d7e4:	ldr	w1, [sp, #3772]
    d7e8:	ldr	x0, [sp, #40]
    d7ec:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d7f0:	mov	w1, w0
    d7f4:	add	x0, sp, #0x3c
    d7f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d7fc:	and	w0, w0, #0xff
    d800:	eor	w0, w0, #0x1
    d804:	and	w0, w0, #0xff
    d808:	cmp	w0, #0x0
    d80c:	b.eq	d818 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x88a8>  // b.none
    d810:	mov	w0, #0x0                   	// #0
    d814:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d818:	mov	w2, #0x5                   	// #5
    d81c:	mov	w1, #0x0                   	// #0
    d820:	ldr	w0, [sp, #52]
    d824:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d828:	str	w0, [sp, #3772]
    d82c:	ldr	x3, [sp, #24]
    d830:	ldr	x2, [sp, #32]
    d834:	ldr	w1, [sp, #3772]
    d838:	ldr	x0, [sp, #40]
    d83c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d840:	mov	w1, w0
    d844:	add	x0, sp, #0x3c
    d848:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d84c:	and	w0, w0, #0xff
    d850:	eor	w0, w0, #0x1
    d854:	and	w0, w0, #0xff
    d858:	cmp	w0, #0x0
    d85c:	b.eq	d868 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x88f8>  // b.none
    d860:	mov	w0, #0x0                   	// #0
    d864:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d868:	mov	w2, #0x5                   	// #5
    d86c:	mov	w1, #0x5                   	// #5
    d870:	ldr	w0, [sp, #52]
    d874:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d878:	str	w0, [sp, #3772]
    d87c:	ldr	x3, [sp, #24]
    d880:	ldr	x2, [sp, #32]
    d884:	ldr	w1, [sp, #3772]
    d888:	ldr	x0, [sp, #40]
    d88c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d890:	mov	w1, w0
    d894:	add	x0, sp, #0x3c
    d898:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d89c:	and	w0, w0, #0xff
    d8a0:	eor	w0, w0, #0x1
    d8a4:	and	w0, w0, #0xff
    d8a8:	cmp	w0, #0x0
    d8ac:	b.eq	d8b8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8948>  // b.none
    d8b0:	mov	w0, #0x0                   	// #0
    d8b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d8b8:	mov	w2, #0x3                   	// #3
    d8bc:	mov	w1, #0x10                  	// #16
    d8c0:	ldr	w0, [sp, #52]
    d8c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d8c8:	str	w0, [sp, #3772]
    d8cc:	ldr	x3, [sp, #24]
    d8d0:	ldr	x2, [sp, #32]
    d8d4:	ldr	w1, [sp, #3772]
    d8d8:	ldr	x0, [sp, #40]
    d8dc:	bl	d78 <_ZL25DecodeZPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    d8e0:	mov	w1, w0
    d8e4:	add	x0, sp, #0x3c
    d8e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d8ec:	and	w0, w0, #0xff
    d8f0:	eor	w0, w0, #0x1
    d8f4:	and	w0, w0, #0xff
    d8f8:	cmp	w0, #0x0
    d8fc:	b.eq	d908 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8998>  // b.none
    d900:	mov	w0, #0x0                   	// #0
    d904:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d908:	mov	w2, #0x2                   	// #2
    d90c:	mov	w1, #0x13                  	// #19
    d910:	ldr	w0, [sp, #52]
    d914:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d918:	str	w0, [sp, #3772]
    d91c:	ldr	w0, [sp, #3772]
    d920:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    d924:	add	x2, sp, #0x200
    d928:	stp	x0, x1, [x2, #-72]
    d92c:	add	x0, sp, #0x1b8
    d930:	mov	x1, x0
    d934:	ldr	x0, [sp, #40]
    d938:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    d93c:	mov	w2, #0x2                   	// #2
    d940:	mov	w1, #0xa                   	// #10
    d944:	ldr	w0, [sp, #52]
    d948:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d94c:	str	w0, [sp, #3772]
    d950:	ldr	w0, [sp, #3772]
    d954:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    d958:	add	x2, sp, #0x200
    d95c:	stp	x0, x1, [x2, #-56]
    d960:	add	x0, sp, #0x1c8
    d964:	mov	x1, x0
    d968:	ldr	x0, [sp, #40]
    d96c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    d970:	ldr	w0, [sp, #60]
    d974:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d978:	mov	w2, #0x5                   	// #5
    d97c:	mov	w1, #0x0                   	// #0
    d980:	ldr	w0, [sp, #52]
    d984:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d988:	str	w0, [sp, #3772]
    d98c:	ldr	x3, [sp, #24]
    d990:	ldr	x2, [sp, #32]
    d994:	ldr	w1, [sp, #3772]
    d998:	ldr	x0, [sp, #40]
    d99c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d9a0:	mov	w1, w0
    d9a4:	add	x0, sp, #0x3c
    d9a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d9ac:	and	w0, w0, #0xff
    d9b0:	eor	w0, w0, #0x1
    d9b4:	and	w0, w0, #0xff
    d9b8:	cmp	w0, #0x0
    d9bc:	b.eq	d9c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8a58>  // b.none
    d9c0:	mov	w0, #0x0                   	// #0
    d9c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    d9c8:	mov	w2, #0x5                   	// #5
    d9cc:	mov	w1, #0x0                   	// #0
    d9d0:	ldr	w0, [sp, #52]
    d9d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    d9d8:	str	w0, [sp, #3772]
    d9dc:	ldr	x3, [sp, #24]
    d9e0:	ldr	x2, [sp, #32]
    d9e4:	ldr	w1, [sp, #3772]
    d9e8:	ldr	x0, [sp, #40]
    d9ec:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    d9f0:	mov	w1, w0
    d9f4:	add	x0, sp, #0x3c
    d9f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    d9fc:	and	w0, w0, #0xff
    da00:	eor	w0, w0, #0x1
    da04:	and	w0, w0, #0xff
    da08:	cmp	w0, #0x0
    da0c:	b.eq	da18 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8aa8>  // b.none
    da10:	mov	w0, #0x0                   	// #0
    da14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    da18:	mov	w2, #0x5                   	// #5
    da1c:	mov	w1, #0x5                   	// #5
    da20:	ldr	w0, [sp, #52]
    da24:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    da28:	str	w0, [sp, #3772]
    da2c:	ldr	x3, [sp, #24]
    da30:	ldr	x2, [sp, #32]
    da34:	ldr	w1, [sp, #3772]
    da38:	ldr	x0, [sp, #40]
    da3c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    da40:	mov	w1, w0
    da44:	add	x0, sp, #0x3c
    da48:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    da4c:	and	w0, w0, #0xff
    da50:	eor	w0, w0, #0x1
    da54:	and	w0, w0, #0xff
    da58:	cmp	w0, #0x0
    da5c:	b.eq	da68 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8af8>  // b.none
    da60:	mov	w0, #0x0                   	// #0
    da64:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    da68:	mov	w2, #0x4                   	// #4
    da6c:	mov	w1, #0x10                  	// #16
    da70:	ldr	w0, [sp, #52]
    da74:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    da78:	str	w0, [sp, #3772]
    da7c:	ldr	x3, [sp, #24]
    da80:	ldr	x2, [sp, #32]
    da84:	ldr	w1, [sp, #3772]
    da88:	ldr	x0, [sp, #40]
    da8c:	bl	d2c <_ZL25DecodeZPR_4bRegisterClassRN4llvm6MCInstEjmPKv>
    da90:	mov	w1, w0
    da94:	add	x0, sp, #0x3c
    da98:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    da9c:	and	w0, w0, #0xff
    daa0:	eor	w0, w0, #0x1
    daa4:	and	w0, w0, #0xff
    daa8:	cmp	w0, #0x0
    daac:	b.eq	dab8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8b48>  // b.none
    dab0:	mov	w0, #0x0                   	// #0
    dab4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    dab8:	mov	w2, #0x1                   	// #1
    dabc:	mov	w1, #0x14                  	// #20
    dac0:	ldr	w0, [sp, #52]
    dac4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    dac8:	str	w0, [sp, #3772]
    dacc:	ldr	w0, [sp, #3772]
    dad0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    dad4:	add	x2, sp, #0x200
    dad8:	stp	x0, x1, [x2, #-40]
    dadc:	add	x0, sp, #0x1d8
    dae0:	mov	x1, x0
    dae4:	ldr	x0, [sp, #40]
    dae8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    daec:	mov	w2, #0x2                   	// #2
    daf0:	mov	w1, #0xa                   	// #10
    daf4:	ldr	w0, [sp, #52]
    daf8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    dafc:	str	w0, [sp, #3772]
    db00:	ldr	w0, [sp, #3772]
    db04:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    db08:	add	x2, sp, #0x200
    db0c:	stp	x0, x1, [x2, #-24]
    db10:	add	x0, sp, #0x1e8
    db14:	mov	x1, x0
    db18:	ldr	x0, [sp, #40]
    db1c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    db20:	ldr	w0, [sp, #60]
    db24:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    db28:	mov	w2, #0x5                   	// #5
    db2c:	mov	w1, #0x0                   	// #0
    db30:	ldr	w0, [sp, #52]
    db34:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    db38:	str	w0, [sp, #3772]
    db3c:	ldr	x3, [sp, #24]
    db40:	ldr	x2, [sp, #32]
    db44:	ldr	w1, [sp, #3772]
    db48:	ldr	x0, [sp, #40]
    db4c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    db50:	mov	w1, w0
    db54:	add	x0, sp, #0x3c
    db58:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    db5c:	and	w0, w0, #0xff
    db60:	eor	w0, w0, #0x1
    db64:	and	w0, w0, #0xff
    db68:	cmp	w0, #0x0
    db6c:	b.eq	db78 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8c08>  // b.none
    db70:	mov	w0, #0x0                   	// #0
    db74:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    db78:	mov	w2, #0x5                   	// #5
    db7c:	mov	w1, #0x0                   	// #0
    db80:	ldr	w0, [sp, #52]
    db84:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    db88:	str	w0, [sp, #3772]
    db8c:	ldr	x3, [sp, #24]
    db90:	ldr	x2, [sp, #32]
    db94:	ldr	w1, [sp, #3772]
    db98:	ldr	x0, [sp, #40]
    db9c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    dba0:	mov	w1, w0
    dba4:	add	x0, sp, #0x3c
    dba8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    dbac:	and	w0, w0, #0xff
    dbb0:	eor	w0, w0, #0x1
    dbb4:	and	w0, w0, #0xff
    dbb8:	cmp	w0, #0x0
    dbbc:	b.eq	dbc8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8c58>  // b.none
    dbc0:	mov	w0, #0x0                   	// #0
    dbc4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    dbc8:	mov	w2, #0x5                   	// #5
    dbcc:	mov	w1, #0x5                   	// #5
    dbd0:	ldr	w0, [sp, #52]
    dbd4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    dbd8:	str	w0, [sp, #3772]
    dbdc:	ldr	x3, [sp, #24]
    dbe0:	ldr	x2, [sp, #32]
    dbe4:	ldr	w1, [sp, #3772]
    dbe8:	ldr	x0, [sp, #40]
    dbec:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    dbf0:	mov	w1, w0
    dbf4:	add	x0, sp, #0x3c
    dbf8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    dbfc:	and	w0, w0, #0xff
    dc00:	eor	w0, w0, #0x1
    dc04:	and	w0, w0, #0xff
    dc08:	cmp	w0, #0x0
    dc0c:	b.eq	dc18 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8ca8>  // b.none
    dc10:	mov	w0, #0x0                   	// #0
    dc14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    dc18:	ldr	w0, [sp, #60]
    dc1c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    dc20:	mov	w2, #0x5                   	// #5
    dc24:	mov	w1, #0x0                   	// #0
    dc28:	ldr	w0, [sp, #52]
    dc2c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    dc30:	str	w0, [sp, #3772]
    dc34:	ldr	x3, [sp, #24]
    dc38:	ldr	x2, [sp, #32]
    dc3c:	ldr	w1, [sp, #3772]
    dc40:	ldr	x0, [sp, #40]
    dc44:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    dc48:	mov	w1, w0
    dc4c:	add	x0, sp, #0x3c
    dc50:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    dc54:	and	w0, w0, #0xff
    dc58:	eor	w0, w0, #0x1
    dc5c:	and	w0, w0, #0xff
    dc60:	cmp	w0, #0x0
    dc64:	b.eq	dc70 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8d00>  // b.none
    dc68:	mov	w0, #0x0                   	// #0
    dc6c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    dc70:	mov	w2, #0x5                   	// #5
    dc74:	mov	w1, #0x5                   	// #5
    dc78:	ldr	w0, [sp, #52]
    dc7c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    dc80:	str	w0, [sp, #3772]
    dc84:	ldr	x3, [sp, #24]
    dc88:	ldr	x2, [sp, #32]
    dc8c:	ldr	w1, [sp, #3772]
    dc90:	ldr	x0, [sp, #40]
    dc94:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    dc98:	mov	w1, w0
    dc9c:	add	x0, sp, #0x3c
    dca0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    dca4:	and	w0, w0, #0xff
    dca8:	eor	w0, w0, #0x1
    dcac:	and	w0, w0, #0xff
    dcb0:	cmp	w0, #0x0
    dcb4:	b.eq	dcc0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8d50>  // b.none
    dcb8:	mov	w0, #0x0                   	// #0
    dcbc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    dcc0:	mov	w2, #0x3                   	// #3
    dcc4:	mov	w1, #0x10                  	// #16
    dcc8:	ldr	w0, [sp, #52]
    dccc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    dcd0:	str	w0, [sp, #3772]
    dcd4:	ldr	x3, [sp, #24]
    dcd8:	ldr	x2, [sp, #32]
    dcdc:	ldr	w1, [sp, #3772]
    dce0:	ldr	x0, [sp, #40]
    dce4:	bl	d78 <_ZL25DecodeZPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    dce8:	mov	w1, w0
    dcec:	add	x0, sp, #0x3c
    dcf0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    dcf4:	and	w0, w0, #0xff
    dcf8:	eor	w0, w0, #0x1
    dcfc:	and	w0, w0, #0xff
    dd00:	cmp	w0, #0x0
    dd04:	b.eq	dd10 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8da0>  // b.none
    dd08:	mov	w0, #0x0                   	// #0
    dd0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    dd10:	str	wzr, [sp, #3772]
    dd14:	mov	w2, #0x1                   	// #1
    dd18:	mov	w1, #0xb                   	// #11
    dd1c:	ldr	w0, [sp, #52]
    dd20:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    dd24:	mov	w1, w0
    dd28:	ldr	w0, [sp, #3772]
    dd2c:	orr	w0, w0, w1
    dd30:	str	w0, [sp, #3772]
    dd34:	mov	w2, #0x2                   	// #2
    dd38:	mov	w1, #0x13                  	// #19
    dd3c:	ldr	w0, [sp, #52]
    dd40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    dd44:	lsl	w0, w0, #1
    dd48:	ldr	w1, [sp, #3772]
    dd4c:	orr	w0, w1, w0
    dd50:	str	w0, [sp, #3772]
    dd54:	ldr	w0, [sp, #3772]
    dd58:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    dd5c:	add	x2, sp, #0x200
    dd60:	stp	x0, x1, [x2, #-8]
    dd64:	add	x0, sp, #0x1f8
    dd68:	mov	x1, x0
    dd6c:	ldr	x0, [sp, #40]
    dd70:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    dd74:	ldr	w0, [sp, #60]
    dd78:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    dd7c:	mov	w2, #0x5                   	// #5
    dd80:	mov	w1, #0x0                   	// #0
    dd84:	ldr	w0, [sp, #52]
    dd88:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    dd8c:	str	w0, [sp, #3772]
    dd90:	ldr	x3, [sp, #24]
    dd94:	ldr	x2, [sp, #32]
    dd98:	ldr	w1, [sp, #3772]
    dd9c:	ldr	x0, [sp, #40]
    dda0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    dda4:	mov	w1, w0
    dda8:	add	x0, sp, #0x3c
    ddac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ddb0:	and	w0, w0, #0xff
    ddb4:	eor	w0, w0, #0x1
    ddb8:	and	w0, w0, #0xff
    ddbc:	cmp	w0, #0x0
    ddc0:	b.eq	ddcc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8e5c>  // b.none
    ddc4:	mov	w0, #0x0                   	// #0
    ddc8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ddcc:	mov	w2, #0x5                   	// #5
    ddd0:	mov	w1, #0x5                   	// #5
    ddd4:	ldr	w0, [sp, #52]
    ddd8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    dddc:	str	w0, [sp, #3772]
    dde0:	ldr	x3, [sp, #24]
    dde4:	ldr	x2, [sp, #32]
    dde8:	ldr	w1, [sp, #3772]
    ddec:	ldr	x0, [sp, #40]
    ddf0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    ddf4:	mov	w1, w0
    ddf8:	add	x0, sp, #0x3c
    ddfc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    de00:	and	w0, w0, #0xff
    de04:	eor	w0, w0, #0x1
    de08:	and	w0, w0, #0xff
    de0c:	cmp	w0, #0x0
    de10:	b.eq	de1c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8eac>  // b.none
    de14:	mov	w0, #0x0                   	// #0
    de18:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    de1c:	mov	w2, #0x4                   	// #4
    de20:	mov	w1, #0x10                  	// #16
    de24:	ldr	w0, [sp, #52]
    de28:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    de2c:	str	w0, [sp, #3772]
    de30:	ldr	x3, [sp, #24]
    de34:	ldr	x2, [sp, #32]
    de38:	ldr	w1, [sp, #3772]
    de3c:	ldr	x0, [sp, #40]
    de40:	bl	d2c <_ZL25DecodeZPR_4bRegisterClassRN4llvm6MCInstEjmPKv>
    de44:	mov	w1, w0
    de48:	add	x0, sp, #0x3c
    de4c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    de50:	and	w0, w0, #0xff
    de54:	eor	w0, w0, #0x1
    de58:	and	w0, w0, #0xff
    de5c:	cmp	w0, #0x0
    de60:	b.eq	de6c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8efc>  // b.none
    de64:	mov	w0, #0x0                   	// #0
    de68:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    de6c:	str	wzr, [sp, #3772]
    de70:	mov	w2, #0x1                   	// #1
    de74:	mov	w1, #0xb                   	// #11
    de78:	ldr	w0, [sp, #52]
    de7c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    de80:	mov	w1, w0
    de84:	ldr	w0, [sp, #3772]
    de88:	orr	w0, w0, w1
    de8c:	str	w0, [sp, #3772]
    de90:	mov	w2, #0x1                   	// #1
    de94:	mov	w1, #0x14                  	// #20
    de98:	ldr	w0, [sp, #52]
    de9c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    dea0:	lsl	w0, w0, #1
    dea4:	ldr	w1, [sp, #3772]
    dea8:	orr	w0, w1, w0
    deac:	str	w0, [sp, #3772]
    deb0:	ldr	w0, [sp, #3772]
    deb4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    deb8:	add	x2, sp, #0x200
    debc:	stp	x0, x1, [x2, #8]
    dec0:	add	x0, sp, #0x208
    dec4:	mov	x1, x0
    dec8:	ldr	x0, [sp, #40]
    decc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    ded0:	ldr	w0, [sp, #60]
    ded4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ded8:	mov	w2, #0x5                   	// #5
    dedc:	mov	w1, #0x0                   	// #0
    dee0:	ldr	w0, [sp, #52]
    dee4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    dee8:	str	w0, [sp, #3772]
    deec:	ldr	x3, [sp, #24]
    def0:	ldr	x2, [sp, #32]
    def4:	ldr	w1, [sp, #3772]
    def8:	ldr	x0, [sp, #40]
    defc:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    df00:	mov	w1, w0
    df04:	add	x0, sp, #0x3c
    df08:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    df0c:	and	w0, w0, #0xff
    df10:	eor	w0, w0, #0x1
    df14:	and	w0, w0, #0xff
    df18:	cmp	w0, #0x0
    df1c:	b.eq	df28 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x8fb8>  // b.none
    df20:	mov	w0, #0x0                   	// #0
    df24:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    df28:	mov	w2, #0x5                   	// #5
    df2c:	mov	w1, #0x0                   	// #0
    df30:	ldr	w0, [sp, #52]
    df34:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    df38:	str	w0, [sp, #3772]
    df3c:	ldr	x3, [sp, #24]
    df40:	ldr	x2, [sp, #32]
    df44:	ldr	w1, [sp, #3772]
    df48:	ldr	x0, [sp, #40]
    df4c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    df50:	mov	w1, w0
    df54:	add	x0, sp, #0x3c
    df58:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    df5c:	and	w0, w0, #0xff
    df60:	eor	w0, w0, #0x1
    df64:	and	w0, w0, #0xff
    df68:	cmp	w0, #0x0
    df6c:	b.eq	df78 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9008>  // b.none
    df70:	mov	w0, #0x0                   	// #0
    df74:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    df78:	mov	w2, #0x5                   	// #5
    df7c:	mov	w1, #0x5                   	// #5
    df80:	ldr	w0, [sp, #52]
    df84:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    df88:	str	w0, [sp, #3772]
    df8c:	ldr	x3, [sp, #24]
    df90:	ldr	x2, [sp, #32]
    df94:	ldr	w1, [sp, #3772]
    df98:	ldr	x0, [sp, #40]
    df9c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    dfa0:	mov	w1, w0
    dfa4:	add	x0, sp, #0x3c
    dfa8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    dfac:	and	w0, w0, #0xff
    dfb0:	eor	w0, w0, #0x1
    dfb4:	and	w0, w0, #0xff
    dfb8:	cmp	w0, #0x0
    dfbc:	b.eq	dfc8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9058>  // b.none
    dfc0:	mov	w0, #0x0                   	// #0
    dfc4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    dfc8:	mov	w2, #0x1                   	// #1
    dfcc:	mov	w1, #0xa                   	// #10
    dfd0:	ldr	w0, [sp, #52]
    dfd4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    dfd8:	str	w0, [sp, #3772]
    dfdc:	ldr	w0, [sp, #3772]
    dfe0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    dfe4:	add	x2, sp, #0x200
    dfe8:	stp	x0, x1, [x2, #24]
    dfec:	add	x0, sp, #0x218
    dff0:	mov	x1, x0
    dff4:	ldr	x0, [sp, #40]
    dff8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    dffc:	ldr	w0, [sp, #60]
    e000:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e004:	mov	w2, #0x5                   	// #5
    e008:	mov	w1, #0x0                   	// #0
    e00c:	ldr	w0, [sp, #52]
    e010:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e014:	str	w0, [sp, #3772]
    e018:	ldr	x3, [sp, #24]
    e01c:	ldr	x2, [sp, #32]
    e020:	ldr	w1, [sp, #3772]
    e024:	ldr	x0, [sp, #40]
    e028:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e02c:	mov	w1, w0
    e030:	add	x0, sp, #0x3c
    e034:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e038:	and	w0, w0, #0xff
    e03c:	eor	w0, w0, #0x1
    e040:	and	w0, w0, #0xff
    e044:	cmp	w0, #0x0
    e048:	b.eq	e054 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x90e4>  // b.none
    e04c:	mov	w0, #0x0                   	// #0
    e050:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e054:	mov	w2, #0x3                   	// #3
    e058:	mov	w1, #0xa                   	// #10
    e05c:	ldr	w0, [sp, #52]
    e060:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e064:	str	w0, [sp, #3772]
    e068:	ldr	x3, [sp, #24]
    e06c:	ldr	x2, [sp, #32]
    e070:	ldr	w1, [sp, #3772]
    e074:	ldr	x0, [sp, #40]
    e078:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    e07c:	mov	w1, w0
    e080:	add	x0, sp, #0x3c
    e084:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e088:	and	w0, w0, #0xff
    e08c:	eor	w0, w0, #0x1
    e090:	and	w0, w0, #0xff
    e094:	cmp	w0, #0x0
    e098:	b.eq	e0a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9134>  // b.none
    e09c:	mov	w0, #0x0                   	// #0
    e0a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e0a4:	mov	w2, #0x5                   	// #5
    e0a8:	mov	w1, #0x5                   	// #5
    e0ac:	ldr	w0, [sp, #52]
    e0b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e0b4:	str	w0, [sp, #3772]
    e0b8:	ldr	x3, [sp, #24]
    e0bc:	ldr	x2, [sp, #32]
    e0c0:	ldr	w1, [sp, #3772]
    e0c4:	ldr	x0, [sp, #40]
    e0c8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e0cc:	mov	w1, w0
    e0d0:	add	x0, sp, #0x3c
    e0d4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e0d8:	and	w0, w0, #0xff
    e0dc:	eor	w0, w0, #0x1
    e0e0:	and	w0, w0, #0xff
    e0e4:	cmp	w0, #0x0
    e0e8:	b.eq	e0f4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9184>  // b.none
    e0ec:	mov	w0, #0x0                   	// #0
    e0f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e0f4:	mov	w2, #0x5                   	// #5
    e0f8:	mov	w1, #0x10                  	// #16
    e0fc:	ldr	w0, [sp, #52]
    e100:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e104:	str	w0, [sp, #3772]
    e108:	ldr	x3, [sp, #24]
    e10c:	ldr	x2, [sp, #32]
    e110:	ldr	w1, [sp, #3772]
    e114:	ldr	x0, [sp, #40]
    e118:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e11c:	mov	w1, w0
    e120:	add	x0, sp, #0x3c
    e124:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e128:	and	w0, w0, #0xff
    e12c:	eor	w0, w0, #0x1
    e130:	and	w0, w0, #0xff
    e134:	cmp	w0, #0x0
    e138:	b.eq	e144 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x91d4>  // b.none
    e13c:	mov	w0, #0x0                   	// #0
    e140:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e144:	ldr	w0, [sp, #60]
    e148:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e14c:	mov	w2, #0x5                   	// #5
    e150:	mov	w1, #0x0                   	// #0
    e154:	ldr	w0, [sp, #52]
    e158:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e15c:	str	w0, [sp, #3772]
    e160:	ldr	x3, [sp, #24]
    e164:	ldr	x2, [sp, #32]
    e168:	ldr	w1, [sp, #3772]
    e16c:	ldr	x0, [sp, #40]
    e170:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e174:	mov	w1, w0
    e178:	add	x0, sp, #0x3c
    e17c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e180:	and	w0, w0, #0xff
    e184:	eor	w0, w0, #0x1
    e188:	and	w0, w0, #0xff
    e18c:	cmp	w0, #0x0
    e190:	b.eq	e19c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x922c>  // b.none
    e194:	mov	w0, #0x0                   	// #0
    e198:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e19c:	mov	w2, #0x5                   	// #5
    e1a0:	mov	w1, #0x5                   	// #5
    e1a4:	ldr	w0, [sp, #52]
    e1a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e1ac:	str	w0, [sp, #3772]
    e1b0:	ldr	x3, [sp, #24]
    e1b4:	ldr	x2, [sp, #32]
    e1b8:	ldr	w1, [sp, #3772]
    e1bc:	ldr	x0, [sp, #40]
    e1c0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e1c4:	mov	w1, w0
    e1c8:	add	x0, sp, #0x3c
    e1cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e1d0:	and	w0, w0, #0xff
    e1d4:	eor	w0, w0, #0x1
    e1d8:	and	w0, w0, #0xff
    e1dc:	cmp	w0, #0x0
    e1e0:	b.eq	e1ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x927c>  // b.none
    e1e4:	mov	w0, #0x0                   	// #0
    e1e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e1ec:	mov	w2, #0x3                   	// #3
    e1f0:	mov	w1, #0x10                  	// #16
    e1f4:	ldr	w0, [sp, #52]
    e1f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e1fc:	str	w0, [sp, #3772]
    e200:	ldr	x3, [sp, #24]
    e204:	ldr	x2, [sp, #32]
    e208:	ldr	w1, [sp, #3772]
    e20c:	ldr	x0, [sp, #40]
    e210:	bl	d78 <_ZL25DecodeZPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    e214:	mov	w1, w0
    e218:	add	x0, sp, #0x3c
    e21c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e220:	and	w0, w0, #0xff
    e224:	eor	w0, w0, #0x1
    e228:	and	w0, w0, #0xff
    e22c:	cmp	w0, #0x0
    e230:	b.eq	e23c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x92cc>  // b.none
    e234:	mov	w0, #0x0                   	// #0
    e238:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e23c:	str	wzr, [sp, #3772]
    e240:	mov	w2, #0x2                   	// #2
    e244:	mov	w1, #0x13                  	// #19
    e248:	ldr	w0, [sp, #52]
    e24c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e250:	mov	w1, w0
    e254:	ldr	w0, [sp, #3772]
    e258:	orr	w0, w0, w1
    e25c:	str	w0, [sp, #3772]
    e260:	mov	w2, #0x1                   	// #1
    e264:	mov	w1, #0x16                  	// #22
    e268:	ldr	w0, [sp, #52]
    e26c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e270:	lsl	w0, w0, #2
    e274:	ldr	w1, [sp, #3772]
    e278:	orr	w0, w1, w0
    e27c:	str	w0, [sp, #3772]
    e280:	ldr	w0, [sp, #3772]
    e284:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    e288:	add	x2, sp, #0x200
    e28c:	stp	x0, x1, [x2, #40]
    e290:	add	x0, sp, #0x228
    e294:	mov	x1, x0
    e298:	ldr	x0, [sp, #40]
    e29c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    e2a0:	ldr	w0, [sp, #60]
    e2a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e2a8:	mov	w2, #0x5                   	// #5
    e2ac:	mov	w1, #0x0                   	// #0
    e2b0:	ldr	w0, [sp, #52]
    e2b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e2b8:	str	w0, [sp, #3772]
    e2bc:	ldr	x3, [sp, #24]
    e2c0:	ldr	x2, [sp, #32]
    e2c4:	ldr	w1, [sp, #3772]
    e2c8:	ldr	x0, [sp, #40]
    e2cc:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e2d0:	mov	w1, w0
    e2d4:	add	x0, sp, #0x3c
    e2d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e2dc:	and	w0, w0, #0xff
    e2e0:	eor	w0, w0, #0x1
    e2e4:	and	w0, w0, #0xff
    e2e8:	cmp	w0, #0x0
    e2ec:	b.eq	e2f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9388>  // b.none
    e2f0:	mov	w0, #0x0                   	// #0
    e2f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e2f8:	mov	w2, #0x5                   	// #5
    e2fc:	mov	w1, #0x5                   	// #5
    e300:	ldr	w0, [sp, #52]
    e304:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e308:	str	w0, [sp, #3772]
    e30c:	ldr	x3, [sp, #24]
    e310:	ldr	x2, [sp, #32]
    e314:	ldr	w1, [sp, #3772]
    e318:	ldr	x0, [sp, #40]
    e31c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e320:	mov	w1, w0
    e324:	add	x0, sp, #0x3c
    e328:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e32c:	and	w0, w0, #0xff
    e330:	eor	w0, w0, #0x1
    e334:	and	w0, w0, #0xff
    e338:	cmp	w0, #0x0
    e33c:	b.eq	e348 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x93d8>  // b.none
    e340:	mov	w0, #0x0                   	// #0
    e344:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e348:	mov	w2, #0x3                   	// #3
    e34c:	mov	w1, #0x10                  	// #16
    e350:	ldr	w0, [sp, #52]
    e354:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e358:	str	w0, [sp, #3772]
    e35c:	ldr	x3, [sp, #24]
    e360:	ldr	x2, [sp, #32]
    e364:	ldr	w1, [sp, #3772]
    e368:	ldr	x0, [sp, #40]
    e36c:	bl	d78 <_ZL25DecodeZPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    e370:	mov	w1, w0
    e374:	add	x0, sp, #0x3c
    e378:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e37c:	and	w0, w0, #0xff
    e380:	eor	w0, w0, #0x1
    e384:	and	w0, w0, #0xff
    e388:	cmp	w0, #0x0
    e38c:	b.eq	e398 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9428>  // b.none
    e390:	mov	w0, #0x0                   	// #0
    e394:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e398:	mov	w2, #0x2                   	// #2
    e39c:	mov	w1, #0x13                  	// #19
    e3a0:	ldr	w0, [sp, #52]
    e3a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e3a8:	str	w0, [sp, #3772]
    e3ac:	ldr	w0, [sp, #3772]
    e3b0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    e3b4:	add	x2, sp, #0x200
    e3b8:	stp	x0, x1, [x2, #56]
    e3bc:	add	x0, sp, #0x238
    e3c0:	mov	x1, x0
    e3c4:	ldr	x0, [sp, #40]
    e3c8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    e3cc:	ldr	w0, [sp, #60]
    e3d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e3d4:	mov	w2, #0x5                   	// #5
    e3d8:	mov	w1, #0x0                   	// #0
    e3dc:	ldr	w0, [sp, #52]
    e3e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e3e4:	str	w0, [sp, #3772]
    e3e8:	ldr	x3, [sp, #24]
    e3ec:	ldr	x2, [sp, #32]
    e3f0:	ldr	w1, [sp, #3772]
    e3f4:	ldr	x0, [sp, #40]
    e3f8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e3fc:	mov	w1, w0
    e400:	add	x0, sp, #0x3c
    e404:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e408:	and	w0, w0, #0xff
    e40c:	eor	w0, w0, #0x1
    e410:	and	w0, w0, #0xff
    e414:	cmp	w0, #0x0
    e418:	b.eq	e424 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x94b4>  // b.none
    e41c:	mov	w0, #0x0                   	// #0
    e420:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e424:	mov	w2, #0x5                   	// #5
    e428:	mov	w1, #0x5                   	// #5
    e42c:	ldr	w0, [sp, #52]
    e430:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e434:	str	w0, [sp, #3772]
    e438:	ldr	x3, [sp, #24]
    e43c:	ldr	x2, [sp, #32]
    e440:	ldr	w1, [sp, #3772]
    e444:	ldr	x0, [sp, #40]
    e448:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e44c:	mov	w1, w0
    e450:	add	x0, sp, #0x3c
    e454:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e458:	and	w0, w0, #0xff
    e45c:	eor	w0, w0, #0x1
    e460:	and	w0, w0, #0xff
    e464:	cmp	w0, #0x0
    e468:	b.eq	e474 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9504>  // b.none
    e46c:	mov	w0, #0x0                   	// #0
    e470:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e474:	mov	w2, #0x4                   	// #4
    e478:	mov	w1, #0x10                  	// #16
    e47c:	ldr	w0, [sp, #52]
    e480:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e484:	str	w0, [sp, #3772]
    e488:	ldr	x3, [sp, #24]
    e48c:	ldr	x2, [sp, #32]
    e490:	ldr	w1, [sp, #3772]
    e494:	ldr	x0, [sp, #40]
    e498:	bl	d2c <_ZL25DecodeZPR_4bRegisterClassRN4llvm6MCInstEjmPKv>
    e49c:	mov	w1, w0
    e4a0:	add	x0, sp, #0x3c
    e4a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e4a8:	and	w0, w0, #0xff
    e4ac:	eor	w0, w0, #0x1
    e4b0:	and	w0, w0, #0xff
    e4b4:	cmp	w0, #0x0
    e4b8:	b.eq	e4c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9554>  // b.none
    e4bc:	mov	w0, #0x0                   	// #0
    e4c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e4c4:	mov	w2, #0x1                   	// #1
    e4c8:	mov	w1, #0x14                  	// #20
    e4cc:	ldr	w0, [sp, #52]
    e4d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e4d4:	str	w0, [sp, #3772]
    e4d8:	ldr	w0, [sp, #3772]
    e4dc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    e4e0:	add	x2, sp, #0x200
    e4e4:	stp	x0, x1, [x2, #72]
    e4e8:	add	x0, sp, #0x248
    e4ec:	mov	x1, x0
    e4f0:	ldr	x0, [sp, #40]
    e4f4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    e4f8:	ldr	w0, [sp, #60]
    e4fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e500:	mov	w2, #0x5                   	// #5
    e504:	mov	w1, #0x0                   	// #0
    e508:	ldr	w0, [sp, #52]
    e50c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e510:	str	w0, [sp, #3772]
    e514:	ldr	x3, [sp, #24]
    e518:	ldr	x2, [sp, #32]
    e51c:	ldr	w1, [sp, #3772]
    e520:	ldr	x0, [sp, #40]
    e524:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e528:	mov	w1, w0
    e52c:	add	x0, sp, #0x3c
    e530:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e534:	and	w0, w0, #0xff
    e538:	eor	w0, w0, #0x1
    e53c:	and	w0, w0, #0xff
    e540:	cmp	w0, #0x0
    e544:	b.eq	e550 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x95e0>  // b.none
    e548:	mov	w0, #0x0                   	// #0
    e54c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e550:	mov	w2, #0x5                   	// #5
    e554:	mov	w1, #0x0                   	// #0
    e558:	ldr	w0, [sp, #52]
    e55c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e560:	str	w0, [sp, #3772]
    e564:	ldr	x3, [sp, #24]
    e568:	ldr	x2, [sp, #32]
    e56c:	ldr	w1, [sp, #3772]
    e570:	ldr	x0, [sp, #40]
    e574:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e578:	mov	w1, w0
    e57c:	add	x0, sp, #0x3c
    e580:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e584:	and	w0, w0, #0xff
    e588:	eor	w0, w0, #0x1
    e58c:	and	w0, w0, #0xff
    e590:	cmp	w0, #0x0
    e594:	b.eq	e5a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9630>  // b.none
    e598:	mov	w0, #0x0                   	// #0
    e59c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e5a0:	ldr	w0, [sp, #60]
    e5a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e5a8:	mov	w2, #0x5                   	// #5
    e5ac:	mov	w1, #0x0                   	// #0
    e5b0:	ldr	w0, [sp, #52]
    e5b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e5b8:	str	w0, [sp, #3772]
    e5bc:	ldr	x3, [sp, #24]
    e5c0:	ldr	x2, [sp, #32]
    e5c4:	ldr	w1, [sp, #3772]
    e5c8:	ldr	x0, [sp, #40]
    e5cc:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e5d0:	mov	w1, w0
    e5d4:	add	x0, sp, #0x3c
    e5d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e5dc:	and	w0, w0, #0xff
    e5e0:	eor	w0, w0, #0x1
    e5e4:	and	w0, w0, #0xff
    e5e8:	cmp	w0, #0x0
    e5ec:	b.eq	e5f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9688>  // b.none
    e5f0:	mov	w0, #0x0                   	// #0
    e5f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e5f8:	mov	w2, #0x5                   	// #5
    e5fc:	mov	w1, #0x0                   	// #0
    e600:	ldr	w0, [sp, #52]
    e604:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e608:	str	w0, [sp, #3772]
    e60c:	ldr	x3, [sp, #24]
    e610:	ldr	x2, [sp, #32]
    e614:	ldr	w1, [sp, #3772]
    e618:	ldr	x0, [sp, #40]
    e61c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e620:	mov	w1, w0
    e624:	add	x0, sp, #0x3c
    e628:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e62c:	and	w0, w0, #0xff
    e630:	eor	w0, w0, #0x1
    e634:	and	w0, w0, #0xff
    e638:	cmp	w0, #0x0
    e63c:	b.eq	e648 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x96d8>  // b.none
    e640:	mov	w0, #0x0                   	// #0
    e644:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e648:	mov	w2, #0x5                   	// #5
    e64c:	mov	w1, #0x5                   	// #5
    e650:	ldr	w0, [sp, #52]
    e654:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e658:	str	w0, [sp, #3772]
    e65c:	ldr	x3, [sp, #24]
    e660:	ldr	x2, [sp, #32]
    e664:	ldr	w1, [sp, #3772]
    e668:	ldr	x0, [sp, #40]
    e66c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e670:	mov	w1, w0
    e674:	add	x0, sp, #0x3c
    e678:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e67c:	and	w0, w0, #0xff
    e680:	eor	w0, w0, #0x1
    e684:	and	w0, w0, #0xff
    e688:	cmp	w0, #0x0
    e68c:	b.eq	e698 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9728>  // b.none
    e690:	mov	w0, #0x0                   	// #0
    e694:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e698:	mov	w2, #0x3                   	// #3
    e69c:	mov	w1, #0x10                  	// #16
    e6a0:	ldr	w0, [sp, #52]
    e6a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e6a8:	str	w0, [sp, #3772]
    e6ac:	ldr	x3, [sp, #24]
    e6b0:	ldr	x2, [sp, #32]
    e6b4:	ldr	w1, [sp, #3772]
    e6b8:	ldr	x0, [sp, #40]
    e6bc:	bl	1850 <_ZL19DecodeVecShiftL8ImmRN4llvm6MCInstEjmPKv>
    e6c0:	mov	w1, w0
    e6c4:	add	x0, sp, #0x3c
    e6c8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e6cc:	and	w0, w0, #0xff
    e6d0:	eor	w0, w0, #0x1
    e6d4:	and	w0, w0, #0xff
    e6d8:	cmp	w0, #0x0
    e6dc:	b.eq	e6e8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9778>  // b.none
    e6e0:	mov	w0, #0x0                   	// #0
    e6e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e6e8:	ldr	w0, [sp, #60]
    e6ec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e6f0:	mov	w2, #0x5                   	// #5
    e6f4:	mov	w1, #0x0                   	// #0
    e6f8:	ldr	w0, [sp, #52]
    e6fc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e700:	str	w0, [sp, #3772]
    e704:	ldr	x3, [sp, #24]
    e708:	ldr	x2, [sp, #32]
    e70c:	ldr	w1, [sp, #3772]
    e710:	ldr	x0, [sp, #40]
    e714:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e718:	mov	w1, w0
    e71c:	add	x0, sp, #0x3c
    e720:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e724:	and	w0, w0, #0xff
    e728:	eor	w0, w0, #0x1
    e72c:	and	w0, w0, #0xff
    e730:	cmp	w0, #0x0
    e734:	b.eq	e740 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x97d0>  // b.none
    e738:	mov	w0, #0x0                   	// #0
    e73c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e740:	mov	w2, #0x5                   	// #5
    e744:	mov	w1, #0x0                   	// #0
    e748:	ldr	w0, [sp, #52]
    e74c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e750:	str	w0, [sp, #3772]
    e754:	ldr	x3, [sp, #24]
    e758:	ldr	x2, [sp, #32]
    e75c:	ldr	w1, [sp, #3772]
    e760:	ldr	x0, [sp, #40]
    e764:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e768:	mov	w1, w0
    e76c:	add	x0, sp, #0x3c
    e770:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e774:	and	w0, w0, #0xff
    e778:	eor	w0, w0, #0x1
    e77c:	and	w0, w0, #0xff
    e780:	cmp	w0, #0x0
    e784:	b.eq	e790 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9820>  // b.none
    e788:	mov	w0, #0x0                   	// #0
    e78c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e790:	mov	w2, #0x5                   	// #5
    e794:	mov	w1, #0x5                   	// #5
    e798:	ldr	w0, [sp, #52]
    e79c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e7a0:	str	w0, [sp, #3772]
    e7a4:	ldr	x3, [sp, #24]
    e7a8:	ldr	x2, [sp, #32]
    e7ac:	ldr	w1, [sp, #3772]
    e7b0:	ldr	x0, [sp, #40]
    e7b4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e7b8:	mov	w1, w0
    e7bc:	add	x0, sp, #0x3c
    e7c0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e7c4:	and	w0, w0, #0xff
    e7c8:	eor	w0, w0, #0x1
    e7cc:	and	w0, w0, #0xff
    e7d0:	cmp	w0, #0x0
    e7d4:	b.eq	e7e0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9870>  // b.none
    e7d8:	mov	w0, #0x0                   	// #0
    e7dc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e7e0:	mov	w2, #0x4                   	// #4
    e7e4:	mov	w1, #0x10                  	// #16
    e7e8:	ldr	w0, [sp, #52]
    e7ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e7f0:	str	w0, [sp, #3772]
    e7f4:	ldr	x3, [sp, #24]
    e7f8:	ldr	x2, [sp, #32]
    e7fc:	ldr	w1, [sp, #3772]
    e800:	ldr	x0, [sp, #40]
    e804:	bl	1820 <_ZL20DecodeVecShiftL16ImmRN4llvm6MCInstEjmPKv>
    e808:	mov	w1, w0
    e80c:	add	x0, sp, #0x3c
    e810:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e814:	and	w0, w0, #0xff
    e818:	eor	w0, w0, #0x1
    e81c:	and	w0, w0, #0xff
    e820:	cmp	w0, #0x0
    e824:	b.eq	e830 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x98c0>  // b.none
    e828:	mov	w0, #0x0                   	// #0
    e82c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e830:	ldr	w0, [sp, #60]
    e834:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e838:	mov	w2, #0x5                   	// #5
    e83c:	mov	w1, #0x0                   	// #0
    e840:	ldr	w0, [sp, #52]
    e844:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e848:	str	w0, [sp, #3772]
    e84c:	ldr	x3, [sp, #24]
    e850:	ldr	x2, [sp, #32]
    e854:	ldr	w1, [sp, #3772]
    e858:	ldr	x0, [sp, #40]
    e85c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e860:	mov	w1, w0
    e864:	add	x0, sp, #0x3c
    e868:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e86c:	and	w0, w0, #0xff
    e870:	eor	w0, w0, #0x1
    e874:	and	w0, w0, #0xff
    e878:	cmp	w0, #0x0
    e87c:	b.eq	e888 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9918>  // b.none
    e880:	mov	w0, #0x0                   	// #0
    e884:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e888:	mov	w2, #0x5                   	// #5
    e88c:	mov	w1, #0x0                   	// #0
    e890:	ldr	w0, [sp, #52]
    e894:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e898:	str	w0, [sp, #3772]
    e89c:	ldr	x3, [sp, #24]
    e8a0:	ldr	x2, [sp, #32]
    e8a4:	ldr	w1, [sp, #3772]
    e8a8:	ldr	x0, [sp, #40]
    e8ac:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e8b0:	mov	w1, w0
    e8b4:	add	x0, sp, #0x3c
    e8b8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e8bc:	and	w0, w0, #0xff
    e8c0:	eor	w0, w0, #0x1
    e8c4:	and	w0, w0, #0xff
    e8c8:	cmp	w0, #0x0
    e8cc:	b.eq	e8d8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9968>  // b.none
    e8d0:	mov	w0, #0x0                   	// #0
    e8d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e8d8:	mov	w2, #0x5                   	// #5
    e8dc:	mov	w1, #0x5                   	// #5
    e8e0:	ldr	w0, [sp, #52]
    e8e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e8e8:	str	w0, [sp, #3772]
    e8ec:	ldr	x3, [sp, #24]
    e8f0:	ldr	x2, [sp, #32]
    e8f4:	ldr	w1, [sp, #3772]
    e8f8:	ldr	x0, [sp, #40]
    e8fc:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e900:	mov	w1, w0
    e904:	add	x0, sp, #0x3c
    e908:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e90c:	and	w0, w0, #0xff
    e910:	eor	w0, w0, #0x1
    e914:	and	w0, w0, #0xff
    e918:	cmp	w0, #0x0
    e91c:	b.eq	e928 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x99b8>  // b.none
    e920:	mov	w0, #0x0                   	// #0
    e924:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e928:	mov	w2, #0x5                   	// #5
    e92c:	mov	w1, #0x10                  	// #16
    e930:	ldr	w0, [sp, #52]
    e934:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e938:	str	w0, [sp, #3772]
    e93c:	ldr	x3, [sp, #24]
    e940:	ldr	x2, [sp, #32]
    e944:	ldr	w1, [sp, #3772]
    e948:	ldr	x0, [sp, #40]
    e94c:	bl	17f0 <_ZL20DecodeVecShiftL32ImmRN4llvm6MCInstEjmPKv>
    e950:	mov	w1, w0
    e954:	add	x0, sp, #0x3c
    e958:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e95c:	and	w0, w0, #0xff
    e960:	eor	w0, w0, #0x1
    e964:	and	w0, w0, #0xff
    e968:	cmp	w0, #0x0
    e96c:	b.eq	e978 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9a08>  // b.none
    e970:	mov	w0, #0x0                   	// #0
    e974:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e978:	ldr	w0, [sp, #60]
    e97c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e980:	mov	w2, #0x5                   	// #5
    e984:	mov	w1, #0x0                   	// #0
    e988:	ldr	w0, [sp, #52]
    e98c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e990:	str	w0, [sp, #3772]
    e994:	ldr	x3, [sp, #24]
    e998:	ldr	x2, [sp, #32]
    e99c:	ldr	w1, [sp, #3772]
    e9a0:	ldr	x0, [sp, #40]
    e9a4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e9a8:	mov	w1, w0
    e9ac:	add	x0, sp, #0x3c
    e9b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    e9b4:	and	w0, w0, #0xff
    e9b8:	eor	w0, w0, #0x1
    e9bc:	and	w0, w0, #0xff
    e9c0:	cmp	w0, #0x0
    e9c4:	b.eq	e9d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9a60>  // b.none
    e9c8:	mov	w0, #0x0                   	// #0
    e9cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    e9d0:	mov	w2, #0x5                   	// #5
    e9d4:	mov	w1, #0x0                   	// #0
    e9d8:	ldr	w0, [sp, #52]
    e9dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    e9e0:	str	w0, [sp, #3772]
    e9e4:	ldr	x3, [sp, #24]
    e9e8:	ldr	x2, [sp, #32]
    e9ec:	ldr	w1, [sp, #3772]
    e9f0:	ldr	x0, [sp, #40]
    e9f4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    e9f8:	mov	w1, w0
    e9fc:	add	x0, sp, #0x3c
    ea00:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ea04:	and	w0, w0, #0xff
    ea08:	eor	w0, w0, #0x1
    ea0c:	and	w0, w0, #0xff
    ea10:	cmp	w0, #0x0
    ea14:	b.eq	ea20 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9ab0>  // b.none
    ea18:	mov	w0, #0x0                   	// #0
    ea1c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ea20:	mov	w2, #0x5                   	// #5
    ea24:	mov	w1, #0x5                   	// #5
    ea28:	ldr	w0, [sp, #52]
    ea2c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ea30:	str	w0, [sp, #3772]
    ea34:	ldr	x3, [sp, #24]
    ea38:	ldr	x2, [sp, #32]
    ea3c:	ldr	w1, [sp, #3772]
    ea40:	ldr	x0, [sp, #40]
    ea44:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    ea48:	mov	w1, w0
    ea4c:	add	x0, sp, #0x3c
    ea50:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ea54:	and	w0, w0, #0xff
    ea58:	eor	w0, w0, #0x1
    ea5c:	and	w0, w0, #0xff
    ea60:	cmp	w0, #0x0
    ea64:	b.eq	ea70 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9b00>  // b.none
    ea68:	mov	w0, #0x0                   	// #0
    ea6c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ea70:	str	wzr, [sp, #3772]
    ea74:	mov	w2, #0x5                   	// #5
    ea78:	mov	w1, #0x10                  	// #16
    ea7c:	ldr	w0, [sp, #52]
    ea80:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ea84:	mov	w1, w0
    ea88:	ldr	w0, [sp, #3772]
    ea8c:	orr	w0, w0, w1
    ea90:	str	w0, [sp, #3772]
    ea94:	mov	w2, #0x1                   	// #1
    ea98:	mov	w1, #0x16                  	// #22
    ea9c:	ldr	w0, [sp, #52]
    eaa0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    eaa4:	lsl	w0, w0, #5
    eaa8:	ldr	w1, [sp, #3772]
    eaac:	orr	w0, w1, w0
    eab0:	str	w0, [sp, #3772]
    eab4:	ldr	x3, [sp, #24]
    eab8:	ldr	x2, [sp, #32]
    eabc:	ldr	w1, [sp, #3772]
    eac0:	ldr	x0, [sp, #40]
    eac4:	bl	17c0 <_ZL20DecodeVecShiftL64ImmRN4llvm6MCInstEjmPKv>
    eac8:	mov	w1, w0
    eacc:	add	x0, sp, #0x3c
    ead0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ead4:	and	w0, w0, #0xff
    ead8:	eor	w0, w0, #0x1
    eadc:	and	w0, w0, #0xff
    eae0:	cmp	w0, #0x0
    eae4:	b.eq	eaf0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9b80>  // b.none
    eae8:	mov	w0, #0x0                   	// #0
    eaec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    eaf0:	ldr	w0, [sp, #60]
    eaf4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    eaf8:	mov	w2, #0x5                   	// #5
    eafc:	mov	w1, #0x0                   	// #0
    eb00:	ldr	w0, [sp, #52]
    eb04:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    eb08:	str	w0, [sp, #3772]
    eb0c:	ldr	x3, [sp, #24]
    eb10:	ldr	x2, [sp, #32]
    eb14:	ldr	w1, [sp, #3772]
    eb18:	ldr	x0, [sp, #40]
    eb1c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    eb20:	mov	w1, w0
    eb24:	add	x0, sp, #0x3c
    eb28:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    eb2c:	and	w0, w0, #0xff
    eb30:	eor	w0, w0, #0x1
    eb34:	and	w0, w0, #0xff
    eb38:	cmp	w0, #0x0
    eb3c:	b.eq	eb48 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9bd8>  // b.none
    eb40:	mov	w0, #0x0                   	// #0
    eb44:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    eb48:	mov	w2, #0x3                   	// #3
    eb4c:	mov	w1, #0xa                   	// #10
    eb50:	ldr	w0, [sp, #52]
    eb54:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    eb58:	str	w0, [sp, #3772]
    eb5c:	ldr	x3, [sp, #24]
    eb60:	ldr	x2, [sp, #32]
    eb64:	ldr	w1, [sp, #3772]
    eb68:	ldr	x0, [sp, #40]
    eb6c:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    eb70:	mov	w1, w0
    eb74:	add	x0, sp, #0x3c
    eb78:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    eb7c:	and	w0, w0, #0xff
    eb80:	eor	w0, w0, #0x1
    eb84:	and	w0, w0, #0xff
    eb88:	cmp	w0, #0x0
    eb8c:	b.eq	eb98 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9c28>  // b.none
    eb90:	mov	w0, #0x0                   	// #0
    eb94:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    eb98:	mov	w2, #0x5                   	// #5
    eb9c:	mov	w1, #0x0                   	// #0
    eba0:	ldr	w0, [sp, #52]
    eba4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    eba8:	str	w0, [sp, #3772]
    ebac:	ldr	x3, [sp, #24]
    ebb0:	ldr	x2, [sp, #32]
    ebb4:	ldr	w1, [sp, #3772]
    ebb8:	ldr	x0, [sp, #40]
    ebbc:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    ebc0:	mov	w1, w0
    ebc4:	add	x0, sp, #0x3c
    ebc8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ebcc:	and	w0, w0, #0xff
    ebd0:	eor	w0, w0, #0x1
    ebd4:	and	w0, w0, #0xff
    ebd8:	cmp	w0, #0x0
    ebdc:	b.eq	ebe8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9c78>  // b.none
    ebe0:	mov	w0, #0x0                   	// #0
    ebe4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ebe8:	mov	w2, #0x5                   	// #5
    ebec:	mov	w1, #0x5                   	// #5
    ebf0:	ldr	w0, [sp, #52]
    ebf4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ebf8:	str	w0, [sp, #3772]
    ebfc:	ldr	x3, [sp, #24]
    ec00:	ldr	x2, [sp, #32]
    ec04:	ldr	w1, [sp, #3772]
    ec08:	ldr	x0, [sp, #40]
    ec0c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    ec10:	mov	w1, w0
    ec14:	add	x0, sp, #0x3c
    ec18:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ec1c:	and	w0, w0, #0xff
    ec20:	eor	w0, w0, #0x1
    ec24:	and	w0, w0, #0xff
    ec28:	cmp	w0, #0x0
    ec2c:	b.eq	ec38 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9cc8>  // b.none
    ec30:	mov	w0, #0x0                   	// #0
    ec34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ec38:	mov	w2, #0x5                   	// #5
    ec3c:	mov	w1, #0x10                  	// #16
    ec40:	ldr	w0, [sp, #52]
    ec44:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ec48:	str	w0, [sp, #3772]
    ec4c:	ldr	x3, [sp, #24]
    ec50:	ldr	x2, [sp, #32]
    ec54:	ldr	w1, [sp, #3772]
    ec58:	ldr	x0, [sp, #40]
    ec5c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    ec60:	mov	w1, w0
    ec64:	add	x0, sp, #0x3c
    ec68:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ec6c:	and	w0, w0, #0xff
    ec70:	eor	w0, w0, #0x1
    ec74:	and	w0, w0, #0xff
    ec78:	cmp	w0, #0x0
    ec7c:	b.eq	ec88 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9d18>  // b.none
    ec80:	mov	w0, #0x0                   	// #0
    ec84:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ec88:	mov	w2, #0x2                   	// #2
    ec8c:	mov	w1, #0xd                   	// #13
    ec90:	ldr	w0, [sp, #52]
    ec94:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ec98:	str	w0, [sp, #3772]
    ec9c:	ldr	w0, [sp, #3772]
    eca0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    eca4:	add	x2, sp, #0x200
    eca8:	stp	x0, x1, [x2, #88]
    ecac:	add	x0, sp, #0x258
    ecb0:	mov	x1, x0
    ecb4:	ldr	x0, [sp, #40]
    ecb8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    ecbc:	ldr	w0, [sp, #60]
    ecc0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ecc4:	mov	w2, #0x5                   	// #5
    ecc8:	mov	w1, #0x0                   	// #0
    eccc:	ldr	w0, [sp, #52]
    ecd0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ecd4:	str	w0, [sp, #3772]
    ecd8:	ldr	x3, [sp, #24]
    ecdc:	ldr	x2, [sp, #32]
    ece0:	ldr	w1, [sp, #3772]
    ece4:	ldr	x0, [sp, #40]
    ece8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    ecec:	mov	w1, w0
    ecf0:	add	x0, sp, #0x3c
    ecf4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ecf8:	and	w0, w0, #0xff
    ecfc:	eor	w0, w0, #0x1
    ed00:	and	w0, w0, #0xff
    ed04:	cmp	w0, #0x0
    ed08:	b.eq	ed14 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9da4>  // b.none
    ed0c:	mov	w0, #0x0                   	// #0
    ed10:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ed14:	mov	w2, #0x3                   	// #3
    ed18:	mov	w1, #0xa                   	// #10
    ed1c:	ldr	w0, [sp, #52]
    ed20:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ed24:	str	w0, [sp, #3772]
    ed28:	ldr	x3, [sp, #24]
    ed2c:	ldr	x2, [sp, #32]
    ed30:	ldr	w1, [sp, #3772]
    ed34:	ldr	x0, [sp, #40]
    ed38:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    ed3c:	mov	w1, w0
    ed40:	add	x0, sp, #0x3c
    ed44:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ed48:	and	w0, w0, #0xff
    ed4c:	eor	w0, w0, #0x1
    ed50:	and	w0, w0, #0xff
    ed54:	cmp	w0, #0x0
    ed58:	b.eq	ed64 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9df4>  // b.none
    ed5c:	mov	w0, #0x0                   	// #0
    ed60:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ed64:	mov	w2, #0x5                   	// #5
    ed68:	mov	w1, #0x0                   	// #0
    ed6c:	ldr	w0, [sp, #52]
    ed70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ed74:	str	w0, [sp, #3772]
    ed78:	ldr	x3, [sp, #24]
    ed7c:	ldr	x2, [sp, #32]
    ed80:	ldr	w1, [sp, #3772]
    ed84:	ldr	x0, [sp, #40]
    ed88:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    ed8c:	mov	w1, w0
    ed90:	add	x0, sp, #0x3c
    ed94:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ed98:	and	w0, w0, #0xff
    ed9c:	eor	w0, w0, #0x1
    eda0:	and	w0, w0, #0xff
    eda4:	cmp	w0, #0x0
    eda8:	b.eq	edb4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9e44>  // b.none
    edac:	mov	w0, #0x0                   	// #0
    edb0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    edb4:	mov	w2, #0x5                   	// #5
    edb8:	mov	w1, #0x5                   	// #5
    edbc:	ldr	w0, [sp, #52]
    edc0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    edc4:	str	w0, [sp, #3772]
    edc8:	ldr	x3, [sp, #24]
    edcc:	ldr	x2, [sp, #32]
    edd0:	ldr	w1, [sp, #3772]
    edd4:	ldr	x0, [sp, #40]
    edd8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    eddc:	mov	w1, w0
    ede0:	add	x0, sp, #0x3c
    ede4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ede8:	and	w0, w0, #0xff
    edec:	eor	w0, w0, #0x1
    edf0:	and	w0, w0, #0xff
    edf4:	cmp	w0, #0x0
    edf8:	b.eq	ee04 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9e94>  // b.none
    edfc:	mov	w0, #0x0                   	// #0
    ee00:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ee04:	mov	w2, #0x1                   	// #1
    ee08:	mov	w1, #0x10                  	// #16
    ee0c:	ldr	w0, [sp, #52]
    ee10:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ee14:	str	w0, [sp, #3772]
    ee18:	ldr	w0, [sp, #3772]
    ee1c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    ee20:	add	x2, sp, #0x200
    ee24:	stp	x0, x1, [x2, #104]
    ee28:	add	x0, sp, #0x268
    ee2c:	mov	x1, x0
    ee30:	ldr	x0, [sp, #40]
    ee34:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    ee38:	ldr	w0, [sp, #60]
    ee3c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ee40:	mov	w2, #0x4                   	// #4
    ee44:	mov	w1, #0x0                   	// #0
    ee48:	ldr	w0, [sp, #52]
    ee4c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ee50:	str	w0, [sp, #3772]
    ee54:	ldr	x3, [sp, #24]
    ee58:	ldr	x2, [sp, #32]
    ee5c:	ldr	w1, [sp, #3772]
    ee60:	ldr	x0, [sp, #40]
    ee64:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    ee68:	mov	w1, w0
    ee6c:	add	x0, sp, #0x3c
    ee70:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ee74:	and	w0, w0, #0xff
    ee78:	eor	w0, w0, #0x1
    ee7c:	and	w0, w0, #0xff
    ee80:	cmp	w0, #0x0
    ee84:	b.eq	ee90 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9f20>  // b.none
    ee88:	mov	w0, #0x0                   	// #0
    ee8c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ee90:	mov	w2, #0x3                   	// #3
    ee94:	mov	w1, #0xa                   	// #10
    ee98:	ldr	w0, [sp, #52]
    ee9c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    eea0:	str	w0, [sp, #3772]
    eea4:	ldr	x3, [sp, #24]
    eea8:	ldr	x2, [sp, #32]
    eeac:	ldr	w1, [sp, #3772]
    eeb0:	ldr	x0, [sp, #40]
    eeb4:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    eeb8:	mov	w1, w0
    eebc:	add	x0, sp, #0x3c
    eec0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    eec4:	and	w0, w0, #0xff
    eec8:	eor	w0, w0, #0x1
    eecc:	and	w0, w0, #0xff
    eed0:	cmp	w0, #0x0
    eed4:	b.eq	eee0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9f70>  // b.none
    eed8:	mov	w0, #0x0                   	// #0
    eedc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    eee0:	mov	w2, #0x5                   	// #5
    eee4:	mov	w1, #0x5                   	// #5
    eee8:	ldr	w0, [sp, #52]
    eeec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    eef0:	str	w0, [sp, #3772]
    eef4:	ldr	x3, [sp, #24]
    eef8:	ldr	x2, [sp, #32]
    eefc:	ldr	w1, [sp, #3772]
    ef00:	ldr	x0, [sp, #40]
    ef04:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    ef08:	mov	w1, w0
    ef0c:	add	x0, sp, #0x3c
    ef10:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ef14:	and	w0, w0, #0xff
    ef18:	eor	w0, w0, #0x1
    ef1c:	and	w0, w0, #0xff
    ef20:	cmp	w0, #0x0
    ef24:	b.eq	ef30 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x9fc0>  // b.none
    ef28:	mov	w0, #0x0                   	// #0
    ef2c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ef30:	ldr	w0, [sp, #60]
    ef34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ef38:	mov	w2, #0x5                   	// #5
    ef3c:	mov	w1, #0x0                   	// #0
    ef40:	ldr	w0, [sp, #52]
    ef44:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ef48:	str	w0, [sp, #3772]
    ef4c:	ldr	x3, [sp, #24]
    ef50:	ldr	x2, [sp, #32]
    ef54:	ldr	w1, [sp, #3772]
    ef58:	ldr	x0, [sp, #40]
    ef5c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    ef60:	mov	w1, w0
    ef64:	add	x0, sp, #0x3c
    ef68:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ef6c:	and	w0, w0, #0xff
    ef70:	eor	w0, w0, #0x1
    ef74:	and	w0, w0, #0xff
    ef78:	cmp	w0, #0x0
    ef7c:	b.eq	ef88 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa018>  // b.none
    ef80:	mov	w0, #0x0                   	// #0
    ef84:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ef88:	mov	w2, #0x5                   	// #5
    ef8c:	mov	w1, #0x0                   	// #0
    ef90:	ldr	w0, [sp, #52]
    ef94:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ef98:	str	w0, [sp, #3772]
    ef9c:	ldr	x3, [sp, #24]
    efa0:	ldr	x2, [sp, #32]
    efa4:	ldr	w1, [sp, #3772]
    efa8:	ldr	x0, [sp, #40]
    efac:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    efb0:	mov	w1, w0
    efb4:	add	x0, sp, #0x3c
    efb8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    efbc:	and	w0, w0, #0xff
    efc0:	eor	w0, w0, #0x1
    efc4:	and	w0, w0, #0xff
    efc8:	cmp	w0, #0x0
    efcc:	b.eq	efd8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa068>  // b.none
    efd0:	mov	w0, #0x0                   	// #0
    efd4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    efd8:	mov	w2, #0x5                   	// #5
    efdc:	mov	w1, #0x5                   	// #5
    efe0:	ldr	w0, [sp, #52]
    efe4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    efe8:	str	w0, [sp, #3772]
    efec:	ldr	x3, [sp, #24]
    eff0:	ldr	x2, [sp, #32]
    eff4:	ldr	w1, [sp, #3772]
    eff8:	ldr	x0, [sp, #40]
    effc:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    f000:	mov	w1, w0
    f004:	add	x0, sp, #0x3c
    f008:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f00c:	and	w0, w0, #0xff
    f010:	eor	w0, w0, #0x1
    f014:	and	w0, w0, #0xff
    f018:	cmp	w0, #0x0
    f01c:	b.eq	f028 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa0b8>  // b.none
    f020:	mov	w0, #0x0                   	// #0
    f024:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f028:	mov	w2, #0x3                   	// #3
    f02c:	mov	w1, #0x10                  	// #16
    f030:	ldr	w0, [sp, #52]
    f034:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f038:	str	w0, [sp, #3772]
    f03c:	ldr	w0, [sp, #3772]
    f040:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    f044:	add	x2, sp, #0x200
    f048:	stp	x0, x1, [x2, #120]
    f04c:	add	x0, sp, #0x278
    f050:	mov	x1, x0
    f054:	ldr	x0, [sp, #40]
    f058:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    f05c:	ldr	w0, [sp, #60]
    f060:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f064:	mov	w2, #0x5                   	// #5
    f068:	mov	w1, #0x0                   	// #0
    f06c:	ldr	w0, [sp, #52]
    f070:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f074:	str	w0, [sp, #3772]
    f078:	ldr	x3, [sp, #24]
    f07c:	ldr	x2, [sp, #32]
    f080:	ldr	w1, [sp, #3772]
    f084:	ldr	x0, [sp, #40]
    f088:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    f08c:	mov	w1, w0
    f090:	add	x0, sp, #0x3c
    f094:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f098:	and	w0, w0, #0xff
    f09c:	eor	w0, w0, #0x1
    f0a0:	and	w0, w0, #0xff
    f0a4:	cmp	w0, #0x0
    f0a8:	b.eq	f0b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa144>  // b.none
    f0ac:	mov	w0, #0x0                   	// #0
    f0b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f0b4:	mov	w2, #0x3                   	// #3
    f0b8:	mov	w1, #0xa                   	// #10
    f0bc:	ldr	w0, [sp, #52]
    f0c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f0c4:	str	w0, [sp, #3772]
    f0c8:	ldr	x3, [sp, #24]
    f0cc:	ldr	x2, [sp, #32]
    f0d0:	ldr	w1, [sp, #3772]
    f0d4:	ldr	x0, [sp, #40]
    f0d8:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    f0dc:	mov	w1, w0
    f0e0:	add	x0, sp, #0x3c
    f0e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f0e8:	and	w0, w0, #0xff
    f0ec:	eor	w0, w0, #0x1
    f0f0:	and	w0, w0, #0xff
    f0f4:	cmp	w0, #0x0
    f0f8:	b.eq	f104 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa194>  // b.none
    f0fc:	mov	w0, #0x0                   	// #0
    f100:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f104:	mov	w2, #0x5                   	// #5
    f108:	mov	w1, #0x0                   	// #0
    f10c:	ldr	w0, [sp, #52]
    f110:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f114:	str	w0, [sp, #3772]
    f118:	ldr	x3, [sp, #24]
    f11c:	ldr	x2, [sp, #32]
    f120:	ldr	w1, [sp, #3772]
    f124:	ldr	x0, [sp, #40]
    f128:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    f12c:	mov	w1, w0
    f130:	add	x0, sp, #0x3c
    f134:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f138:	and	w0, w0, #0xff
    f13c:	eor	w0, w0, #0x1
    f140:	and	w0, w0, #0xff
    f144:	cmp	w0, #0x0
    f148:	b.eq	f154 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa1e4>  // b.none
    f14c:	mov	w0, #0x0                   	// #0
    f150:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f154:	mov	w2, #0x1                   	// #1
    f158:	mov	w1, #0x5                   	// #5
    f15c:	ldr	w0, [sp, #52]
    f160:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f164:	str	w0, [sp, #3772]
    f168:	ldr	w0, [sp, #3772]
    f16c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    f170:	add	x2, sp, #0x200
    f174:	stp	x0, x1, [x2, #136]
    f178:	add	x0, sp, #0x288
    f17c:	mov	x1, x0
    f180:	ldr	x0, [sp, #40]
    f184:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    f188:	ldr	w0, [sp, #60]
    f18c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f190:	mov	w2, #0x5                   	// #5
    f194:	mov	w1, #0x0                   	// #0
    f198:	ldr	w0, [sp, #52]
    f19c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f1a0:	str	w0, [sp, #3772]
    f1a4:	ldr	x3, [sp, #24]
    f1a8:	ldr	x2, [sp, #32]
    f1ac:	ldr	w1, [sp, #3772]
    f1b0:	ldr	x0, [sp, #40]
    f1b4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    f1b8:	mov	w1, w0
    f1bc:	add	x0, sp, #0x3c
    f1c0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f1c4:	and	w0, w0, #0xff
    f1c8:	eor	w0, w0, #0x1
    f1cc:	and	w0, w0, #0xff
    f1d0:	cmp	w0, #0x0
    f1d4:	b.eq	f1e0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa270>  // b.none
    f1d8:	mov	w0, #0x0                   	// #0
    f1dc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f1e0:	mov	w2, #0x3                   	// #3
    f1e4:	mov	w1, #0xa                   	// #10
    f1e8:	ldr	w0, [sp, #52]
    f1ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f1f0:	str	w0, [sp, #3772]
    f1f4:	ldr	x3, [sp, #24]
    f1f8:	ldr	x2, [sp, #32]
    f1fc:	ldr	w1, [sp, #3772]
    f200:	ldr	x0, [sp, #40]
    f204:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    f208:	mov	w1, w0
    f20c:	add	x0, sp, #0x3c
    f210:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f214:	and	w0, w0, #0xff
    f218:	eor	w0, w0, #0x1
    f21c:	and	w0, w0, #0xff
    f220:	cmp	w0, #0x0
    f224:	b.eq	f230 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa2c0>  // b.none
    f228:	mov	w0, #0x0                   	// #0
    f22c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f230:	mov	w2, #0x5                   	// #5
    f234:	mov	w1, #0x5                   	// #5
    f238:	ldr	w0, [sp, #52]
    f23c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f240:	str	w0, [sp, #3772]
    f244:	ldr	x3, [sp, #24]
    f248:	ldr	x2, [sp, #32]
    f24c:	ldr	w1, [sp, #3772]
    f250:	ldr	x0, [sp, #40]
    f254:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    f258:	mov	w1, w0
    f25c:	add	x0, sp, #0x3c
    f260:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f264:	and	w0, w0, #0xff
    f268:	eor	w0, w0, #0x1
    f26c:	and	w0, w0, #0xff
    f270:	cmp	w0, #0x0
    f274:	b.eq	f280 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa310>  // b.none
    f278:	mov	w0, #0x0                   	// #0
    f27c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f280:	mov	w2, #0x5                   	// #5
    f284:	mov	w1, #0x10                  	// #16
    f288:	ldr	w0, [sp, #52]
    f28c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f290:	str	w0, [sp, #3772]
    f294:	ldr	x3, [sp, #24]
    f298:	ldr	x2, [sp, #32]
    f29c:	ldr	w1, [sp, #3772]
    f2a0:	ldr	x0, [sp, #40]
    f2a4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    f2a8:	mov	w1, w0
    f2ac:	add	x0, sp, #0x3c
    f2b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f2b4:	and	w0, w0, #0xff
    f2b8:	eor	w0, w0, #0x1
    f2bc:	and	w0, w0, #0xff
    f2c0:	cmp	w0, #0x0
    f2c4:	b.eq	f2d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa360>  // b.none
    f2c8:	mov	w0, #0x0                   	// #0
    f2cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f2d0:	ldr	w0, [sp, #60]
    f2d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f2d8:	mov	w2, #0x4                   	// #4
    f2dc:	mov	w1, #0x0                   	// #0
    f2e0:	ldr	w0, [sp, #52]
    f2e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f2e8:	str	w0, [sp, #3772]
    f2ec:	ldr	w0, [sp, #3772]
    f2f0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    f2f4:	add	x2, sp, #0x200
    f2f8:	stp	x0, x1, [x2, #152]
    f2fc:	add	x0, sp, #0x298
    f300:	mov	x1, x0
    f304:	ldr	x0, [sp, #40]
    f308:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    f30c:	mov	w2, #0x3                   	// #3
    f310:	mov	w1, #0xa                   	// #10
    f314:	ldr	w0, [sp, #52]
    f318:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f31c:	str	w0, [sp, #3772]
    f320:	ldr	x3, [sp, #24]
    f324:	ldr	x2, [sp, #32]
    f328:	ldr	w1, [sp, #3772]
    f32c:	ldr	x0, [sp, #40]
    f330:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    f334:	mov	w1, w0
    f338:	add	x0, sp, #0x3c
    f33c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f340:	and	w0, w0, #0xff
    f344:	eor	w0, w0, #0x1
    f348:	and	w0, w0, #0xff
    f34c:	cmp	w0, #0x0
    f350:	b.eq	f35c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa3ec>  // b.none
    f354:	mov	w0, #0x0                   	// #0
    f358:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f35c:	mov	w2, #0x5                   	// #5
    f360:	mov	w1, #0x5                   	// #5
    f364:	ldr	w0, [sp, #52]
    f368:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f36c:	str	w0, [sp, #3772]
    f370:	ldr	x3, [sp, #24]
    f374:	ldr	x2, [sp, #32]
    f378:	ldr	w1, [sp, #3772]
    f37c:	ldr	x0, [sp, #40]
    f380:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    f384:	mov	w1, w0
    f388:	add	x0, sp, #0x3c
    f38c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f390:	and	w0, w0, #0xff
    f394:	eor	w0, w0, #0x1
    f398:	and	w0, w0, #0xff
    f39c:	cmp	w0, #0x0
    f3a0:	b.eq	f3ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa43c>  // b.none
    f3a4:	mov	w0, #0x0                   	// #0
    f3a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f3ac:	mov	w2, #0x5                   	// #5
    f3b0:	mov	w1, #0x10                  	// #16
    f3b4:	ldr	w0, [sp, #52]
    f3b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f3bc:	str	w0, [sp, #3772]
    f3c0:	ldr	x3, [sp, #24]
    f3c4:	ldr	x2, [sp, #32]
    f3c8:	ldr	w1, [sp, #3772]
    f3cc:	ldr	x0, [sp, #40]
    f3d0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    f3d4:	mov	w1, w0
    f3d8:	add	x0, sp, #0x3c
    f3dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f3e0:	and	w0, w0, #0xff
    f3e4:	eor	w0, w0, #0x1
    f3e8:	and	w0, w0, #0xff
    f3ec:	cmp	w0, #0x0
    f3f0:	b.eq	f3fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa48c>  // b.none
    f3f4:	mov	w0, #0x0                   	// #0
    f3f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f3fc:	ldr	w0, [sp, #60]
    f400:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f404:	mov	w2, #0x4                   	// #4
    f408:	mov	w1, #0x0                   	// #0
    f40c:	ldr	w0, [sp, #52]
    f410:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f414:	str	w0, [sp, #3772]
    f418:	ldr	x3, [sp, #24]
    f41c:	ldr	x2, [sp, #32]
    f420:	ldr	w1, [sp, #3772]
    f424:	ldr	x0, [sp, #40]
    f428:	bl	efc <_ZL22DecodePPRRegisterClassRN4llvm6MCInstEjmPKv>
    f42c:	mov	w1, w0
    f430:	add	x0, sp, #0x3c
    f434:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f438:	and	w0, w0, #0xff
    f43c:	eor	w0, w0, #0x1
    f440:	and	w0, w0, #0xff
    f444:	cmp	w0, #0x0
    f448:	b.eq	f454 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa4e4>  // b.none
    f44c:	mov	w0, #0x0                   	// #0
    f450:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f454:	mov	w2, #0x5                   	// #5
    f458:	mov	w1, #0x5                   	// #5
    f45c:	ldr	w0, [sp, #52]
    f460:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f464:	str	w0, [sp, #3772]
    f468:	ldr	x3, [sp, #24]
    f46c:	ldr	x2, [sp, #32]
    f470:	ldr	w1, [sp, #3772]
    f474:	ldr	x0, [sp, #40]
    f478:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    f47c:	mov	w1, w0
    f480:	add	x0, sp, #0x3c
    f484:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f488:	and	w0, w0, #0xff
    f48c:	eor	w0, w0, #0x1
    f490:	and	w0, w0, #0xff
    f494:	cmp	w0, #0x0
    f498:	b.eq	f4a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa534>  // b.none
    f49c:	mov	w0, #0x0                   	// #0
    f4a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f4a4:	str	wzr, [sp, #3772]
    f4a8:	mov	w2, #0x3                   	// #3
    f4ac:	mov	w1, #0xa                   	// #10
    f4b0:	ldr	w0, [sp, #52]
    f4b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f4b8:	mov	w1, w0
    f4bc:	ldr	w0, [sp, #3772]
    f4c0:	orr	w0, w0, w1
    f4c4:	str	w0, [sp, #3772]
    f4c8:	mov	w2, #0x6                   	// #6
    f4cc:	mov	w1, #0x10                  	// #16
    f4d0:	ldr	w0, [sp, #52]
    f4d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f4d8:	lsl	w0, w0, #3
    f4dc:	ldr	w1, [sp, #3772]
    f4e0:	orr	w0, w1, w0
    f4e4:	str	w0, [sp, #3772]
    f4e8:	ldr	w0, [sp, #3772]
    f4ec:	ldr	x3, [sp, #24]
    f4f0:	ldr	x2, [sp, #32]
    f4f4:	mov	x1, x0
    f4f8:	ldr	x0, [sp, #40]
    f4fc:	bl	2abf8 <_Z10DecodeSImmILi9EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
    f500:	mov	w1, w0
    f504:	add	x0, sp, #0x3c
    f508:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f50c:	and	w0, w0, #0xff
    f510:	eor	w0, w0, #0x1
    f514:	and	w0, w0, #0xff
    f518:	cmp	w0, #0x0
    f51c:	b.eq	f528 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa5b8>  // b.none
    f520:	mov	w0, #0x0                   	// #0
    f524:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f528:	ldr	w0, [sp, #60]
    f52c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f530:	mov	w2, #0x4                   	// #4
    f534:	mov	w1, #0x0                   	// #0
    f538:	ldr	w0, [sp, #52]
    f53c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f540:	str	w0, [sp, #3772]
    f544:	ldr	w0, [sp, #3772]
    f548:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    f54c:	add	x2, sp, #0x200
    f550:	stp	x0, x1, [x2, #168]
    f554:	add	x0, sp, #0x2a8
    f558:	mov	x1, x0
    f55c:	ldr	x0, [sp, #40]
    f560:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    f564:	mov	w2, #0x3                   	// #3
    f568:	mov	w1, #0xa                   	// #10
    f56c:	ldr	w0, [sp, #52]
    f570:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f574:	str	w0, [sp, #3772]
    f578:	ldr	x3, [sp, #24]
    f57c:	ldr	x2, [sp, #32]
    f580:	ldr	w1, [sp, #3772]
    f584:	ldr	x0, [sp, #40]
    f588:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    f58c:	mov	w1, w0
    f590:	add	x0, sp, #0x3c
    f594:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f598:	and	w0, w0, #0xff
    f59c:	eor	w0, w0, #0x1
    f5a0:	and	w0, w0, #0xff
    f5a4:	cmp	w0, #0x0
    f5a8:	b.eq	f5b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa644>  // b.none
    f5ac:	mov	w0, #0x0                   	// #0
    f5b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f5b4:	mov	w2, #0x5                   	// #5
    f5b8:	mov	w1, #0x5                   	// #5
    f5bc:	ldr	w0, [sp, #52]
    f5c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f5c4:	str	w0, [sp, #3772]
    f5c8:	ldr	x3, [sp, #24]
    f5cc:	ldr	x2, [sp, #32]
    f5d0:	ldr	w1, [sp, #3772]
    f5d4:	ldr	x0, [sp, #40]
    f5d8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    f5dc:	mov	w1, w0
    f5e0:	add	x0, sp, #0x3c
    f5e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f5e8:	and	w0, w0, #0xff
    f5ec:	eor	w0, w0, #0x1
    f5f0:	and	w0, w0, #0xff
    f5f4:	cmp	w0, #0x0
    f5f8:	b.eq	f604 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa694>  // b.none
    f5fc:	mov	w0, #0x0                   	// #0
    f600:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f604:	mov	w2, #0x6                   	// #6
    f608:	mov	w1, #0x10                  	// #16
    f60c:	ldr	w0, [sp, #52]
    f610:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f614:	str	w0, [sp, #3772]
    f618:	ldr	w0, [sp, #3772]
    f61c:	ldr	x3, [sp, #24]
    f620:	ldr	x2, [sp, #32]
    f624:	mov	x1, x0
    f628:	ldr	x0, [sp, #40]
    f62c:	bl	2ab10 <_Z10DecodeSImmILi6EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
    f630:	mov	w1, w0
    f634:	add	x0, sp, #0x3c
    f638:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f63c:	and	w0, w0, #0xff
    f640:	eor	w0, w0, #0x1
    f644:	and	w0, w0, #0xff
    f648:	cmp	w0, #0x0
    f64c:	b.eq	f658 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa6e8>  // b.none
    f650:	mov	w0, #0x0                   	// #0
    f654:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f658:	ldr	w0, [sp, #60]
    f65c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f660:	mov	w2, #0x5                   	// #5
    f664:	mov	w1, #0x0                   	// #0
    f668:	ldr	w0, [sp, #52]
    f66c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f670:	str	w0, [sp, #3772]
    f674:	ldr	x3, [sp, #24]
    f678:	ldr	x2, [sp, #32]
    f67c:	ldr	w1, [sp, #3772]
    f680:	ldr	x0, [sp, #40]
    f684:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    f688:	mov	w1, w0
    f68c:	add	x0, sp, #0x3c
    f690:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f694:	and	w0, w0, #0xff
    f698:	eor	w0, w0, #0x1
    f69c:	and	w0, w0, #0xff
    f6a0:	cmp	w0, #0x0
    f6a4:	b.eq	f6b0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa740>  // b.none
    f6a8:	mov	w0, #0x0                   	// #0
    f6ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f6b0:	mov	w2, #0x5                   	// #5
    f6b4:	mov	w1, #0x5                   	// #5
    f6b8:	ldr	w0, [sp, #52]
    f6bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f6c0:	str	w0, [sp, #3772]
    f6c4:	ldr	x3, [sp, #24]
    f6c8:	ldr	x2, [sp, #32]
    f6cc:	ldr	w1, [sp, #3772]
    f6d0:	ldr	x0, [sp, #40]
    f6d4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    f6d8:	mov	w1, w0
    f6dc:	add	x0, sp, #0x3c
    f6e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f6e4:	and	w0, w0, #0xff
    f6e8:	eor	w0, w0, #0x1
    f6ec:	and	w0, w0, #0xff
    f6f0:	cmp	w0, #0x0
    f6f4:	b.eq	f700 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa790>  // b.none
    f6f8:	mov	w0, #0x0                   	// #0
    f6fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f700:	str	wzr, [sp, #3772]
    f704:	mov	w2, #0x3                   	// #3
    f708:	mov	w1, #0xa                   	// #10
    f70c:	ldr	w0, [sp, #52]
    f710:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f714:	mov	w1, w0
    f718:	ldr	w0, [sp, #3772]
    f71c:	orr	w0, w0, w1
    f720:	str	w0, [sp, #3772]
    f724:	mov	w2, #0x6                   	// #6
    f728:	mov	w1, #0x10                  	// #16
    f72c:	ldr	w0, [sp, #52]
    f730:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f734:	lsl	w0, w0, #3
    f738:	ldr	w1, [sp, #3772]
    f73c:	orr	w0, w1, w0
    f740:	str	w0, [sp, #3772]
    f744:	ldr	w0, [sp, #3772]
    f748:	ldr	x3, [sp, #24]
    f74c:	ldr	x2, [sp, #32]
    f750:	mov	x1, x0
    f754:	ldr	x0, [sp, #40]
    f758:	bl	2abf8 <_Z10DecodeSImmILi9EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
    f75c:	mov	w1, w0
    f760:	add	x0, sp, #0x3c
    f764:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f768:	and	w0, w0, #0xff
    f76c:	eor	w0, w0, #0x1
    f770:	and	w0, w0, #0xff
    f774:	cmp	w0, #0x0
    f778:	b.eq	f784 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa814>  // b.none
    f77c:	mov	w0, #0x0                   	// #0
    f780:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f784:	ldr	w0, [sp, #60]
    f788:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f78c:	mov	w2, #0x5                   	// #5
    f790:	mov	w1, #0x0                   	// #0
    f794:	ldr	w0, [sp, #52]
    f798:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f79c:	str	w0, [sp, #3772]
    f7a0:	ldr	x3, [sp, #24]
    f7a4:	ldr	x2, [sp, #32]
    f7a8:	ldr	w1, [sp, #3772]
    f7ac:	ldr	x0, [sp, #40]
    f7b0:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    f7b4:	mov	w1, w0
    f7b8:	add	x0, sp, #0x3c
    f7bc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f7c0:	and	w0, w0, #0xff
    f7c4:	eor	w0, w0, #0x1
    f7c8:	and	w0, w0, #0xff
    f7cc:	cmp	w0, #0x0
    f7d0:	b.eq	f7dc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa86c>  // b.none
    f7d4:	mov	w0, #0x0                   	// #0
    f7d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f7dc:	mov	w2, #0x3                   	// #3
    f7e0:	mov	w1, #0xa                   	// #10
    f7e4:	ldr	w0, [sp, #52]
    f7e8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f7ec:	str	w0, [sp, #3772]
    f7f0:	ldr	x3, [sp, #24]
    f7f4:	ldr	x2, [sp, #32]
    f7f8:	ldr	w1, [sp, #3772]
    f7fc:	ldr	x0, [sp, #40]
    f800:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    f804:	mov	w1, w0
    f808:	add	x0, sp, #0x3c
    f80c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f810:	and	w0, w0, #0xff
    f814:	eor	w0, w0, #0x1
    f818:	and	w0, w0, #0xff
    f81c:	cmp	w0, #0x0
    f820:	b.eq	f82c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa8bc>  // b.none
    f824:	mov	w0, #0x0                   	// #0
    f828:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f82c:	mov	w2, #0x5                   	// #5
    f830:	mov	w1, #0x5                   	// #5
    f834:	ldr	w0, [sp, #52]
    f838:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f83c:	str	w0, [sp, #3772]
    f840:	ldr	x3, [sp, #24]
    f844:	ldr	x2, [sp, #32]
    f848:	ldr	w1, [sp, #3772]
    f84c:	ldr	x0, [sp, #40]
    f850:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    f854:	mov	w1, w0
    f858:	add	x0, sp, #0x3c
    f85c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f860:	and	w0, w0, #0xff
    f864:	eor	w0, w0, #0x1
    f868:	and	w0, w0, #0xff
    f86c:	cmp	w0, #0x0
    f870:	b.eq	f87c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa90c>  // b.none
    f874:	mov	w0, #0x0                   	// #0
    f878:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f87c:	mov	w2, #0x5                   	// #5
    f880:	mov	w1, #0x10                  	// #16
    f884:	ldr	w0, [sp, #52]
    f888:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f88c:	str	w0, [sp, #3772]
    f890:	ldr	x3, [sp, #24]
    f894:	ldr	x2, [sp, #32]
    f898:	ldr	w1, [sp, #3772]
    f89c:	ldr	x0, [sp, #40]
    f8a0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
    f8a4:	mov	w1, w0
    f8a8:	add	x0, sp, #0x3c
    f8ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f8b0:	and	w0, w0, #0xff
    f8b4:	eor	w0, w0, #0x1
    f8b8:	and	w0, w0, #0xff
    f8bc:	cmp	w0, #0x0
    f8c0:	b.eq	f8cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa95c>  // b.none
    f8c4:	mov	w0, #0x0                   	// #0
    f8c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f8cc:	ldr	w0, [sp, #60]
    f8d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f8d4:	mov	w2, #0x5                   	// #5
    f8d8:	mov	w1, #0x0                   	// #0
    f8dc:	ldr	w0, [sp, #52]
    f8e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f8e4:	str	w0, [sp, #3772]
    f8e8:	ldr	x3, [sp, #24]
    f8ec:	ldr	x2, [sp, #32]
    f8f0:	ldr	w1, [sp, #3772]
    f8f4:	ldr	x0, [sp, #40]
    f8f8:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    f8fc:	mov	w1, w0
    f900:	add	x0, sp, #0x3c
    f904:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f908:	and	w0, w0, #0xff
    f90c:	eor	w0, w0, #0x1
    f910:	and	w0, w0, #0xff
    f914:	cmp	w0, #0x0
    f918:	b.eq	f924 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xa9b4>  // b.none
    f91c:	mov	w0, #0x0                   	// #0
    f920:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f924:	mov	w2, #0x3                   	// #3
    f928:	mov	w1, #0xa                   	// #10
    f92c:	ldr	w0, [sp, #52]
    f930:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f934:	str	w0, [sp, #3772]
    f938:	ldr	x3, [sp, #24]
    f93c:	ldr	x2, [sp, #32]
    f940:	ldr	w1, [sp, #3772]
    f944:	ldr	x0, [sp, #40]
    f948:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    f94c:	mov	w1, w0
    f950:	add	x0, sp, #0x3c
    f954:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f958:	and	w0, w0, #0xff
    f95c:	eor	w0, w0, #0x1
    f960:	and	w0, w0, #0xff
    f964:	cmp	w0, #0x0
    f968:	b.eq	f974 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xaa04>  // b.none
    f96c:	mov	w0, #0x0                   	// #0
    f970:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f974:	mov	w2, #0x5                   	// #5
    f978:	mov	w1, #0x5                   	// #5
    f97c:	ldr	w0, [sp, #52]
    f980:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f984:	str	w0, [sp, #3772]
    f988:	ldr	x3, [sp, #24]
    f98c:	ldr	x2, [sp, #32]
    f990:	ldr	w1, [sp, #3772]
    f994:	ldr	x0, [sp, #40]
    f998:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    f99c:	mov	w1, w0
    f9a0:	add	x0, sp, #0x3c
    f9a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    f9a8:	and	w0, w0, #0xff
    f9ac:	eor	w0, w0, #0x1
    f9b0:	and	w0, w0, #0xff
    f9b4:	cmp	w0, #0x0
    f9b8:	b.eq	f9c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xaa54>  // b.none
    f9bc:	mov	w0, #0x0                   	// #0
    f9c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    f9c4:	mov	w2, #0x5                   	// #5
    f9c8:	mov	w1, #0x10                  	// #16
    f9cc:	ldr	w0, [sp, #52]
    f9d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    f9d4:	str	w0, [sp, #3772]
    f9d8:	ldr	w0, [sp, #3772]
    f9dc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    f9e0:	add	x2, sp, #0x200
    f9e4:	stp	x0, x1, [x2, #184]
    f9e8:	add	x0, sp, #0x2b8
    f9ec:	mov	x1, x0
    f9f0:	ldr	x0, [sp, #40]
    f9f4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    f9f8:	ldr	w0, [sp, #60]
    f9fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fa00:	mov	w2, #0x5                   	// #5
    fa04:	mov	w1, #0x0                   	// #0
    fa08:	ldr	w0, [sp, #52]
    fa0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fa10:	str	w0, [sp, #3772]
    fa14:	ldr	x3, [sp, #24]
    fa18:	ldr	x2, [sp, #32]
    fa1c:	ldr	w1, [sp, #3772]
    fa20:	ldr	x0, [sp, #40]
    fa24:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    fa28:	mov	w1, w0
    fa2c:	add	x0, sp, #0x3c
    fa30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    fa34:	and	w0, w0, #0xff
    fa38:	eor	w0, w0, #0x1
    fa3c:	and	w0, w0, #0xff
    fa40:	cmp	w0, #0x0
    fa44:	b.eq	fa50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xaae0>  // b.none
    fa48:	mov	w0, #0x0                   	// #0
    fa4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fa50:	mov	w2, #0x3                   	// #3
    fa54:	mov	w1, #0xa                   	// #10
    fa58:	ldr	w0, [sp, #52]
    fa5c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fa60:	str	w0, [sp, #3772]
    fa64:	ldr	x3, [sp, #24]
    fa68:	ldr	x2, [sp, #32]
    fa6c:	ldr	w1, [sp, #3772]
    fa70:	ldr	x0, [sp, #40]
    fa74:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    fa78:	mov	w1, w0
    fa7c:	add	x0, sp, #0x3c
    fa80:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    fa84:	and	w0, w0, #0xff
    fa88:	eor	w0, w0, #0x1
    fa8c:	and	w0, w0, #0xff
    fa90:	cmp	w0, #0x0
    fa94:	b.eq	faa0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xab30>  // b.none
    fa98:	mov	w0, #0x0                   	// #0
    fa9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    faa0:	mov	w2, #0x5                   	// #5
    faa4:	mov	w1, #0x5                   	// #5
    faa8:	ldr	w0, [sp, #52]
    faac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fab0:	str	w0, [sp, #3772]
    fab4:	ldr	x3, [sp, #24]
    fab8:	ldr	x2, [sp, #32]
    fabc:	ldr	w1, [sp, #3772]
    fac0:	ldr	x0, [sp, #40]
    fac4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    fac8:	mov	w1, w0
    facc:	add	x0, sp, #0x3c
    fad0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    fad4:	and	w0, w0, #0xff
    fad8:	eor	w0, w0, #0x1
    fadc:	and	w0, w0, #0xff
    fae0:	cmp	w0, #0x0
    fae4:	b.eq	faf0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xab80>  // b.none
    fae8:	mov	w0, #0x0                   	// #0
    faec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    faf0:	mov	w2, #0x6                   	// #6
    faf4:	mov	w1, #0x10                  	// #16
    faf8:	ldr	w0, [sp, #52]
    fafc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fb00:	str	w0, [sp, #3772]
    fb04:	ldr	w0, [sp, #3772]
    fb08:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    fb0c:	add	x2, sp, #0x200
    fb10:	stp	x0, x1, [x2, #200]
    fb14:	add	x0, sp, #0x2c8
    fb18:	mov	x1, x0
    fb1c:	ldr	x0, [sp, #40]
    fb20:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    fb24:	ldr	w0, [sp, #60]
    fb28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fb2c:	mov	w2, #0x4                   	// #4
    fb30:	mov	w1, #0x0                   	// #0
    fb34:	ldr	w0, [sp, #52]
    fb38:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fb3c:	str	w0, [sp, #3772]
    fb40:	ldr	w0, [sp, #3772]
    fb44:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    fb48:	add	x2, sp, #0x200
    fb4c:	stp	x0, x1, [x2, #216]
    fb50:	add	x0, sp, #0x2d8
    fb54:	mov	x1, x0
    fb58:	ldr	x0, [sp, #40]
    fb5c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    fb60:	mov	w2, #0x3                   	// #3
    fb64:	mov	w1, #0xa                   	// #10
    fb68:	ldr	w0, [sp, #52]
    fb6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fb70:	str	w0, [sp, #3772]
    fb74:	ldr	x3, [sp, #24]
    fb78:	ldr	x2, [sp, #32]
    fb7c:	ldr	w1, [sp, #3772]
    fb80:	ldr	x0, [sp, #40]
    fb84:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    fb88:	mov	w1, w0
    fb8c:	add	x0, sp, #0x3c
    fb90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    fb94:	and	w0, w0, #0xff
    fb98:	eor	w0, w0, #0x1
    fb9c:	and	w0, w0, #0xff
    fba0:	cmp	w0, #0x0
    fba4:	b.eq	fbb0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xac40>  // b.none
    fba8:	mov	w0, #0x0                   	// #0
    fbac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fbb0:	mov	w2, #0x5                   	// #5
    fbb4:	mov	w1, #0x5                   	// #5
    fbb8:	ldr	w0, [sp, #52]
    fbbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fbc0:	str	w0, [sp, #3772]
    fbc4:	ldr	x3, [sp, #24]
    fbc8:	ldr	x2, [sp, #32]
    fbcc:	ldr	w1, [sp, #3772]
    fbd0:	ldr	x0, [sp, #40]
    fbd4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    fbd8:	mov	w1, w0
    fbdc:	add	x0, sp, #0x3c
    fbe0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    fbe4:	and	w0, w0, #0xff
    fbe8:	eor	w0, w0, #0x1
    fbec:	and	w0, w0, #0xff
    fbf0:	cmp	w0, #0x0
    fbf4:	b.eq	fc00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xac90>  // b.none
    fbf8:	mov	w0, #0x0                   	// #0
    fbfc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fc00:	mov	w2, #0x5                   	// #5
    fc04:	mov	w1, #0x10                  	// #16
    fc08:	ldr	w0, [sp, #52]
    fc0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fc10:	str	w0, [sp, #3772]
    fc14:	ldr	x3, [sp, #24]
    fc18:	ldr	x2, [sp, #32]
    fc1c:	ldr	w1, [sp, #3772]
    fc20:	ldr	x0, [sp, #40]
    fc24:	bl	a94 <_ZL30DecodeGPR64commonRegisterClassRN4llvm6MCInstEjmPKv>
    fc28:	mov	w1, w0
    fc2c:	add	x0, sp, #0x3c
    fc30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    fc34:	and	w0, w0, #0xff
    fc38:	eor	w0, w0, #0x1
    fc3c:	and	w0, w0, #0xff
    fc40:	cmp	w0, #0x0
    fc44:	b.eq	fc50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xace0>  // b.none
    fc48:	mov	w0, #0x0                   	// #0
    fc4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fc50:	ldr	w0, [sp, #60]
    fc54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fc58:	mov	w2, #0x4                   	// #4
    fc5c:	mov	w1, #0x0                   	// #0
    fc60:	ldr	w0, [sp, #52]
    fc64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fc68:	str	w0, [sp, #3772]
    fc6c:	ldr	w0, [sp, #3772]
    fc70:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    fc74:	add	x2, sp, #0x200
    fc78:	stp	x0, x1, [x2, #232]
    fc7c:	add	x0, sp, #0x2e8
    fc80:	mov	x1, x0
    fc84:	ldr	x0, [sp, #40]
    fc88:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    fc8c:	mov	w2, #0x3                   	// #3
    fc90:	mov	w1, #0xa                   	// #10
    fc94:	ldr	w0, [sp, #52]
    fc98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fc9c:	str	w0, [sp, #3772]
    fca0:	ldr	x3, [sp, #24]
    fca4:	ldr	x2, [sp, #32]
    fca8:	ldr	w1, [sp, #3772]
    fcac:	ldr	x0, [sp, #40]
    fcb0:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    fcb4:	mov	w1, w0
    fcb8:	add	x0, sp, #0x3c
    fcbc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    fcc0:	and	w0, w0, #0xff
    fcc4:	eor	w0, w0, #0x1
    fcc8:	and	w0, w0, #0xff
    fccc:	cmp	w0, #0x0
    fcd0:	b.eq	fcdc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xad6c>  // b.none
    fcd4:	mov	w0, #0x0                   	// #0
    fcd8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fcdc:	mov	w2, #0x5                   	// #5
    fce0:	mov	w1, #0x5                   	// #5
    fce4:	ldr	w0, [sp, #52]
    fce8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fcec:	str	w0, [sp, #3772]
    fcf0:	ldr	x3, [sp, #24]
    fcf4:	ldr	x2, [sp, #32]
    fcf8:	ldr	w1, [sp, #3772]
    fcfc:	ldr	x0, [sp, #40]
    fd00:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    fd04:	mov	w1, w0
    fd08:	add	x0, sp, #0x3c
    fd0c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    fd10:	and	w0, w0, #0xff
    fd14:	eor	w0, w0, #0x1
    fd18:	and	w0, w0, #0xff
    fd1c:	cmp	w0, #0x0
    fd20:	b.eq	fd2c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xadbc>  // b.none
    fd24:	mov	w0, #0x0                   	// #0
    fd28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fd2c:	mov	w2, #0x5                   	// #5
    fd30:	mov	w1, #0x10                  	// #16
    fd34:	ldr	w0, [sp, #52]
    fd38:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fd3c:	str	w0, [sp, #3772]
    fd40:	ldr	w0, [sp, #3772]
    fd44:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    fd48:	add	x2, sp, #0x200
    fd4c:	stp	x0, x1, [x2, #248]
    fd50:	add	x0, sp, #0x2f8
    fd54:	mov	x1, x0
    fd58:	ldr	x0, [sp, #40]
    fd5c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
    fd60:	ldr	w0, [sp, #60]
    fd64:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fd68:	mov	w2, #0x5                   	// #5
    fd6c:	mov	w1, #0x0                   	// #0
    fd70:	ldr	w0, [sp, #52]
    fd74:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fd78:	str	w0, [sp, #3772]
    fd7c:	ldr	x3, [sp, #24]
    fd80:	ldr	x2, [sp, #32]
    fd84:	ldr	w1, [sp, #3772]
    fd88:	ldr	x0, [sp, #40]
    fd8c:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    fd90:	mov	w1, w0
    fd94:	add	x0, sp, #0x3c
    fd98:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    fd9c:	and	w0, w0, #0xff
    fda0:	eor	w0, w0, #0x1
    fda4:	and	w0, w0, #0xff
    fda8:	cmp	w0, #0x0
    fdac:	b.eq	fdb8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xae48>  // b.none
    fdb0:	mov	w0, #0x0                   	// #0
    fdb4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fdb8:	mov	w2, #0x3                   	// #3
    fdbc:	mov	w1, #0xa                   	// #10
    fdc0:	ldr	w0, [sp, #52]
    fdc4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fdc8:	str	w0, [sp, #3772]
    fdcc:	ldr	x3, [sp, #24]
    fdd0:	ldr	x2, [sp, #32]
    fdd4:	ldr	w1, [sp, #3772]
    fdd8:	ldr	x0, [sp, #40]
    fddc:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    fde0:	mov	w1, w0
    fde4:	add	x0, sp, #0x3c
    fde8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    fdec:	and	w0, w0, #0xff
    fdf0:	eor	w0, w0, #0x1
    fdf4:	and	w0, w0, #0xff
    fdf8:	cmp	w0, #0x0
    fdfc:	b.eq	fe08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xae98>  // b.none
    fe00:	mov	w0, #0x0                   	// #0
    fe04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fe08:	mov	w2, #0x5                   	// #5
    fe0c:	mov	w1, #0x5                   	// #5
    fe10:	ldr	w0, [sp, #52]
    fe14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fe18:	str	w0, [sp, #3772]
    fe1c:	ldr	x3, [sp, #24]
    fe20:	ldr	x2, [sp, #32]
    fe24:	ldr	w1, [sp, #3772]
    fe28:	ldr	x0, [sp, #40]
    fe2c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    fe30:	mov	w1, w0
    fe34:	add	x0, sp, #0x3c
    fe38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    fe3c:	and	w0, w0, #0xff
    fe40:	eor	w0, w0, #0x1
    fe44:	and	w0, w0, #0xff
    fe48:	cmp	w0, #0x0
    fe4c:	b.eq	fe58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xaee8>  // b.none
    fe50:	mov	w0, #0x0                   	// #0
    fe54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fe58:	mov	w2, #0x5                   	// #5
    fe5c:	mov	w1, #0x10                  	// #16
    fe60:	ldr	w0, [sp, #52]
    fe64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fe68:	str	w0, [sp, #3772]
    fe6c:	ldr	x3, [sp, #24]
    fe70:	ldr	x2, [sp, #32]
    fe74:	ldr	w1, [sp, #3772]
    fe78:	ldr	x0, [sp, #40]
    fe7c:	bl	a94 <_ZL30DecodeGPR64commonRegisterClassRN4llvm6MCInstEjmPKv>
    fe80:	mov	w1, w0
    fe84:	add	x0, sp, #0x3c
    fe88:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    fe8c:	and	w0, w0, #0xff
    fe90:	eor	w0, w0, #0x1
    fe94:	and	w0, w0, #0xff
    fe98:	cmp	w0, #0x0
    fe9c:	b.eq	fea8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xaf38>  // b.none
    fea0:	mov	w0, #0x0                   	// #0
    fea4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fea8:	ldr	w0, [sp, #60]
    feac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    feb0:	mov	w2, #0x5                   	// #5
    feb4:	mov	w1, #0x0                   	// #0
    feb8:	ldr	w0, [sp, #52]
    febc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    fec0:	str	w0, [sp, #3772]
    fec4:	ldr	x3, [sp, #24]
    fec8:	ldr	x2, [sp, #32]
    fecc:	ldr	w1, [sp, #3772]
    fed0:	ldr	x0, [sp, #40]
    fed4:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
    fed8:	mov	w1, w0
    fedc:	add	x0, sp, #0x3c
    fee0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    fee4:	and	w0, w0, #0xff
    fee8:	eor	w0, w0, #0x1
    feec:	and	w0, w0, #0xff
    fef0:	cmp	w0, #0x0
    fef4:	b.eq	ff00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xaf90>  // b.none
    fef8:	mov	w0, #0x0                   	// #0
    fefc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ff00:	mov	w2, #0x3                   	// #3
    ff04:	mov	w1, #0xa                   	// #10
    ff08:	ldr	w0, [sp, #52]
    ff0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ff10:	str	w0, [sp, #3772]
    ff14:	ldr	x3, [sp, #24]
    ff18:	ldr	x2, [sp, #32]
    ff1c:	ldr	w1, [sp, #3772]
    ff20:	ldr	x0, [sp, #40]
    ff24:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
    ff28:	mov	w1, w0
    ff2c:	add	x0, sp, #0x3c
    ff30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ff34:	and	w0, w0, #0xff
    ff38:	eor	w0, w0, #0x1
    ff3c:	and	w0, w0, #0xff
    ff40:	cmp	w0, #0x0
    ff44:	b.eq	ff50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xafe0>  // b.none
    ff48:	mov	w0, #0x0                   	// #0
    ff4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ff50:	mov	w2, #0x5                   	// #5
    ff54:	mov	w1, #0x5                   	// #5
    ff58:	ldr	w0, [sp, #52]
    ff5c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ff60:	str	w0, [sp, #3772]
    ff64:	ldr	x3, [sp, #24]
    ff68:	ldr	x2, [sp, #32]
    ff6c:	ldr	w1, [sp, #3772]
    ff70:	ldr	x0, [sp, #40]
    ff74:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
    ff78:	mov	w1, w0
    ff7c:	add	x0, sp, #0x3c
    ff80:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ff84:	and	w0, w0, #0xff
    ff88:	eor	w0, w0, #0x1
    ff8c:	and	w0, w0, #0xff
    ff90:	cmp	w0, #0x0
    ff94:	b.eq	ffa0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb030>  // b.none
    ff98:	mov	w0, #0x0                   	// #0
    ff9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    ffa0:	mov	w2, #0x4                   	// #4
    ffa4:	mov	w1, #0x10                  	// #16
    ffa8:	ldr	w0, [sp, #52]
    ffac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
    ffb0:	str	w0, [sp, #3772]
    ffb4:	ldr	w0, [sp, #3772]
    ffb8:	ldr	x3, [sp, #24]
    ffbc:	ldr	x2, [sp, #32]
    ffc0:	mov	x1, x0
    ffc4:	ldr	x0, [sp, #40]
    ffc8:	bl	2ac6c <_Z10DecodeSImmILi4EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
    ffcc:	mov	w1, w0
    ffd0:	add	x0, sp, #0x3c
    ffd4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
    ffd8:	and	w0, w0, #0xff
    ffdc:	eor	w0, w0, #0x1
    ffe0:	and	w0, w0, #0xff
    ffe4:	cmp	w0, #0x0
    ffe8:	b.eq	fff4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb084>  // b.none
    ffec:	mov	w0, #0x0                   	// #0
    fff0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fff4:	ldr	w0, [sp, #60]
    fff8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
    fffc:	mov	w2, #0x5                   	// #5
   10000:	mov	w1, #0x0                   	// #0
   10004:	ldr	w0, [sp, #52]
   10008:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1000c:	str	w0, [sp, #3772]
   10010:	ldr	x3, [sp, #24]
   10014:	ldr	x2, [sp, #32]
   10018:	ldr	w1, [sp, #3772]
   1001c:	ldr	x0, [sp, #40]
   10020:	bl	cc4 <_ZL22DecodeZPRRegisterClassRN4llvm6MCInstEjmPKv>
   10024:	mov	w1, w0
   10028:	add	x0, sp, #0x3c
   1002c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10030:	and	w0, w0, #0xff
   10034:	eor	w0, w0, #0x1
   10038:	and	w0, w0, #0xff
   1003c:	cmp	w0, #0x0
   10040:	b.eq	1004c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb0dc>  // b.none
   10044:	mov	w0, #0x0                   	// #0
   10048:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1004c:	mov	w2, #0x3                   	// #3
   10050:	mov	w1, #0xa                   	// #10
   10054:	ldr	w0, [sp, #52]
   10058:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1005c:	str	w0, [sp, #3772]
   10060:	ldr	x3, [sp, #24]
   10064:	ldr	x2, [sp, #32]
   10068:	ldr	w1, [sp, #3772]
   1006c:	ldr	x0, [sp, #40]
   10070:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
   10074:	mov	w1, w0
   10078:	add	x0, sp, #0x3c
   1007c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10080:	and	w0, w0, #0xff
   10084:	eor	w0, w0, #0x1
   10088:	and	w0, w0, #0xff
   1008c:	cmp	w0, #0x0
   10090:	b.eq	1009c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb12c>  // b.none
   10094:	mov	w0, #0x0                   	// #0
   10098:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1009c:	mov	w2, #0x5                   	// #5
   100a0:	mov	w1, #0x5                   	// #5
   100a4:	ldr	w0, [sp, #52]
   100a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   100ac:	str	w0, [sp, #3772]
   100b0:	ldr	x3, [sp, #24]
   100b4:	ldr	x2, [sp, #32]
   100b8:	ldr	w1, [sp, #3772]
   100bc:	ldr	x0, [sp, #40]
   100c0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   100c4:	mov	w1, w0
   100c8:	add	x0, sp, #0x3c
   100cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   100d0:	and	w0, w0, #0xff
   100d4:	eor	w0, w0, #0x1
   100d8:	and	w0, w0, #0xff
   100dc:	cmp	w0, #0x0
   100e0:	b.eq	100ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb17c>  // b.none
   100e4:	mov	w0, #0x0                   	// #0
   100e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   100ec:	mov	w2, #0x5                   	// #5
   100f0:	mov	w1, #0x10                  	// #16
   100f4:	ldr	w0, [sp, #52]
   100f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   100fc:	str	w0, [sp, #3772]
   10100:	ldr	x3, [sp, #24]
   10104:	ldr	x2, [sp, #32]
   10108:	ldr	w1, [sp, #3772]
   1010c:	ldr	x0, [sp, #40]
   10110:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   10114:	mov	w1, w0
   10118:	add	x0, sp, #0x3c
   1011c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10120:	and	w0, w0, #0xff
   10124:	eor	w0, w0, #0x1
   10128:	and	w0, w0, #0xff
   1012c:	cmp	w0, #0x0
   10130:	b.eq	1013c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb1cc>  // b.none
   10134:	mov	w0, #0x0                   	// #0
   10138:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1013c:	ldr	w0, [sp, #60]
   10140:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10144:	mov	w2, #0x5                   	// #5
   10148:	mov	w1, #0x0                   	// #0
   1014c:	ldr	w0, [sp, #52]
   10150:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10154:	str	w0, [sp, #3772]
   10158:	ldr	x3, [sp, #24]
   1015c:	ldr	x2, [sp, #32]
   10160:	ldr	w1, [sp, #3772]
   10164:	ldr	x0, [sp, #40]
   10168:	bl	dc4 <_ZL23DecodeZPR2RegisterClassRN4llvm6MCInstEjmPKv>
   1016c:	mov	w1, w0
   10170:	add	x0, sp, #0x3c
   10174:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10178:	and	w0, w0, #0xff
   1017c:	eor	w0, w0, #0x1
   10180:	and	w0, w0, #0xff
   10184:	cmp	w0, #0x0
   10188:	b.eq	10194 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb224>  // b.none
   1018c:	mov	w0, #0x0                   	// #0
   10190:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10194:	mov	w2, #0x3                   	// #3
   10198:	mov	w1, #0xa                   	// #10
   1019c:	ldr	w0, [sp, #52]
   101a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   101a4:	str	w0, [sp, #3772]
   101a8:	ldr	x3, [sp, #24]
   101ac:	ldr	x2, [sp, #32]
   101b0:	ldr	w1, [sp, #3772]
   101b4:	ldr	x0, [sp, #40]
   101b8:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
   101bc:	mov	w1, w0
   101c0:	add	x0, sp, #0x3c
   101c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   101c8:	and	w0, w0, #0xff
   101cc:	eor	w0, w0, #0x1
   101d0:	and	w0, w0, #0xff
   101d4:	cmp	w0, #0x0
   101d8:	b.eq	101e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb274>  // b.none
   101dc:	mov	w0, #0x0                   	// #0
   101e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   101e4:	mov	w2, #0x5                   	// #5
   101e8:	mov	w1, #0x5                   	// #5
   101ec:	ldr	w0, [sp, #52]
   101f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   101f4:	str	w0, [sp, #3772]
   101f8:	ldr	x3, [sp, #24]
   101fc:	ldr	x2, [sp, #32]
   10200:	ldr	w1, [sp, #3772]
   10204:	ldr	x0, [sp, #40]
   10208:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   1020c:	mov	w1, w0
   10210:	add	x0, sp, #0x3c
   10214:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10218:	and	w0, w0, #0xff
   1021c:	eor	w0, w0, #0x1
   10220:	and	w0, w0, #0xff
   10224:	cmp	w0, #0x0
   10228:	b.eq	10234 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb2c4>  // b.none
   1022c:	mov	w0, #0x0                   	// #0
   10230:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10234:	mov	w2, #0x5                   	// #5
   10238:	mov	w1, #0x10                  	// #16
   1023c:	ldr	w0, [sp, #52]
   10240:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10244:	str	w0, [sp, #3772]
   10248:	ldr	x3, [sp, #24]
   1024c:	ldr	x2, [sp, #32]
   10250:	ldr	w1, [sp, #3772]
   10254:	ldr	x0, [sp, #40]
   10258:	bl	a94 <_ZL30DecodeGPR64commonRegisterClassRN4llvm6MCInstEjmPKv>
   1025c:	mov	w1, w0
   10260:	add	x0, sp, #0x3c
   10264:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10268:	and	w0, w0, #0xff
   1026c:	eor	w0, w0, #0x1
   10270:	and	w0, w0, #0xff
   10274:	cmp	w0, #0x0
   10278:	b.eq	10284 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb314>  // b.none
   1027c:	mov	w0, #0x0                   	// #0
   10280:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10284:	ldr	w0, [sp, #60]
   10288:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1028c:	mov	w2, #0x5                   	// #5
   10290:	mov	w1, #0x0                   	// #0
   10294:	ldr	w0, [sp, #52]
   10298:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1029c:	str	w0, [sp, #3772]
   102a0:	ldr	x3, [sp, #24]
   102a4:	ldr	x2, [sp, #32]
   102a8:	ldr	w1, [sp, #3772]
   102ac:	ldr	x0, [sp, #40]
   102b0:	bl	dc4 <_ZL23DecodeZPR2RegisterClassRN4llvm6MCInstEjmPKv>
   102b4:	mov	w1, w0
   102b8:	add	x0, sp, #0x3c
   102bc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   102c0:	and	w0, w0, #0xff
   102c4:	eor	w0, w0, #0x1
   102c8:	and	w0, w0, #0xff
   102cc:	cmp	w0, #0x0
   102d0:	b.eq	102dc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb36c>  // b.none
   102d4:	mov	w0, #0x0                   	// #0
   102d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   102dc:	mov	w2, #0x3                   	// #3
   102e0:	mov	w1, #0xa                   	// #10
   102e4:	ldr	w0, [sp, #52]
   102e8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   102ec:	str	w0, [sp, #3772]
   102f0:	ldr	x3, [sp, #24]
   102f4:	ldr	x2, [sp, #32]
   102f8:	ldr	w1, [sp, #3772]
   102fc:	ldr	x0, [sp, #40]
   10300:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
   10304:	mov	w1, w0
   10308:	add	x0, sp, #0x3c
   1030c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10310:	and	w0, w0, #0xff
   10314:	eor	w0, w0, #0x1
   10318:	and	w0, w0, #0xff
   1031c:	cmp	w0, #0x0
   10320:	b.eq	1032c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb3bc>  // b.none
   10324:	mov	w0, #0x0                   	// #0
   10328:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1032c:	mov	w2, #0x5                   	// #5
   10330:	mov	w1, #0x5                   	// #5
   10334:	ldr	w0, [sp, #52]
   10338:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1033c:	str	w0, [sp, #3772]
   10340:	ldr	x3, [sp, #24]
   10344:	ldr	x2, [sp, #32]
   10348:	ldr	w1, [sp, #3772]
   1034c:	ldr	x0, [sp, #40]
   10350:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   10354:	mov	w1, w0
   10358:	add	x0, sp, #0x3c
   1035c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10360:	and	w0, w0, #0xff
   10364:	eor	w0, w0, #0x1
   10368:	and	w0, w0, #0xff
   1036c:	cmp	w0, #0x0
   10370:	b.eq	1037c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb40c>  // b.none
   10374:	mov	w0, #0x0                   	// #0
   10378:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1037c:	mov	w2, #0x4                   	// #4
   10380:	mov	w1, #0x10                  	// #16
   10384:	ldr	w0, [sp, #52]
   10388:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1038c:	str	w0, [sp, #3772]
   10390:	ldr	w0, [sp, #3772]
   10394:	ldr	x3, [sp, #24]
   10398:	ldr	x2, [sp, #32]
   1039c:	mov	x1, x0
   103a0:	ldr	x0, [sp, #40]
   103a4:	bl	2ac6c <_Z10DecodeSImmILi4EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
   103a8:	mov	w1, w0
   103ac:	add	x0, sp, #0x3c
   103b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   103b4:	and	w0, w0, #0xff
   103b8:	eor	w0, w0, #0x1
   103bc:	and	w0, w0, #0xff
   103c0:	cmp	w0, #0x0
   103c4:	b.eq	103d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb460>  // b.none
   103c8:	mov	w0, #0x0                   	// #0
   103cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   103d0:	ldr	w0, [sp, #60]
   103d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   103d8:	mov	w2, #0x5                   	// #5
   103dc:	mov	w1, #0x0                   	// #0
   103e0:	ldr	w0, [sp, #52]
   103e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   103e8:	str	w0, [sp, #3772]
   103ec:	ldr	x3, [sp, #24]
   103f0:	ldr	x2, [sp, #32]
   103f4:	ldr	w1, [sp, #3772]
   103f8:	ldr	x0, [sp, #40]
   103fc:	bl	e2c <_ZL23DecodeZPR3RegisterClassRN4llvm6MCInstEjmPKv>
   10400:	mov	w1, w0
   10404:	add	x0, sp, #0x3c
   10408:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1040c:	and	w0, w0, #0xff
   10410:	eor	w0, w0, #0x1
   10414:	and	w0, w0, #0xff
   10418:	cmp	w0, #0x0
   1041c:	b.eq	10428 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb4b8>  // b.none
   10420:	mov	w0, #0x0                   	// #0
   10424:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10428:	mov	w2, #0x3                   	// #3
   1042c:	mov	w1, #0xa                   	// #10
   10430:	ldr	w0, [sp, #52]
   10434:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10438:	str	w0, [sp, #3772]
   1043c:	ldr	x3, [sp, #24]
   10440:	ldr	x2, [sp, #32]
   10444:	ldr	w1, [sp, #3772]
   10448:	ldr	x0, [sp, #40]
   1044c:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
   10450:	mov	w1, w0
   10454:	add	x0, sp, #0x3c
   10458:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1045c:	and	w0, w0, #0xff
   10460:	eor	w0, w0, #0x1
   10464:	and	w0, w0, #0xff
   10468:	cmp	w0, #0x0
   1046c:	b.eq	10478 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb508>  // b.none
   10470:	mov	w0, #0x0                   	// #0
   10474:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10478:	mov	w2, #0x5                   	// #5
   1047c:	mov	w1, #0x5                   	// #5
   10480:	ldr	w0, [sp, #52]
   10484:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10488:	str	w0, [sp, #3772]
   1048c:	ldr	x3, [sp, #24]
   10490:	ldr	x2, [sp, #32]
   10494:	ldr	w1, [sp, #3772]
   10498:	ldr	x0, [sp, #40]
   1049c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   104a0:	mov	w1, w0
   104a4:	add	x0, sp, #0x3c
   104a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   104ac:	and	w0, w0, #0xff
   104b0:	eor	w0, w0, #0x1
   104b4:	and	w0, w0, #0xff
   104b8:	cmp	w0, #0x0
   104bc:	b.eq	104c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb558>  // b.none
   104c0:	mov	w0, #0x0                   	// #0
   104c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   104c8:	mov	w2, #0x5                   	// #5
   104cc:	mov	w1, #0x10                  	// #16
   104d0:	ldr	w0, [sp, #52]
   104d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   104d8:	str	w0, [sp, #3772]
   104dc:	ldr	x3, [sp, #24]
   104e0:	ldr	x2, [sp, #32]
   104e4:	ldr	w1, [sp, #3772]
   104e8:	ldr	x0, [sp, #40]
   104ec:	bl	a94 <_ZL30DecodeGPR64commonRegisterClassRN4llvm6MCInstEjmPKv>
   104f0:	mov	w1, w0
   104f4:	add	x0, sp, #0x3c
   104f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   104fc:	and	w0, w0, #0xff
   10500:	eor	w0, w0, #0x1
   10504:	and	w0, w0, #0xff
   10508:	cmp	w0, #0x0
   1050c:	b.eq	10518 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb5a8>  // b.none
   10510:	mov	w0, #0x0                   	// #0
   10514:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10518:	ldr	w0, [sp, #60]
   1051c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10520:	mov	w2, #0x5                   	// #5
   10524:	mov	w1, #0x0                   	// #0
   10528:	ldr	w0, [sp, #52]
   1052c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10530:	str	w0, [sp, #3772]
   10534:	ldr	x3, [sp, #24]
   10538:	ldr	x2, [sp, #32]
   1053c:	ldr	w1, [sp, #3772]
   10540:	ldr	x0, [sp, #40]
   10544:	bl	e2c <_ZL23DecodeZPR3RegisterClassRN4llvm6MCInstEjmPKv>
   10548:	mov	w1, w0
   1054c:	add	x0, sp, #0x3c
   10550:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10554:	and	w0, w0, #0xff
   10558:	eor	w0, w0, #0x1
   1055c:	and	w0, w0, #0xff
   10560:	cmp	w0, #0x0
   10564:	b.eq	10570 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb600>  // b.none
   10568:	mov	w0, #0x0                   	// #0
   1056c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10570:	mov	w2, #0x3                   	// #3
   10574:	mov	w1, #0xa                   	// #10
   10578:	ldr	w0, [sp, #52]
   1057c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10580:	str	w0, [sp, #3772]
   10584:	ldr	x3, [sp, #24]
   10588:	ldr	x2, [sp, #32]
   1058c:	ldr	w1, [sp, #3772]
   10590:	ldr	x0, [sp, #40]
   10594:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
   10598:	mov	w1, w0
   1059c:	add	x0, sp, #0x3c
   105a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   105a4:	and	w0, w0, #0xff
   105a8:	eor	w0, w0, #0x1
   105ac:	and	w0, w0, #0xff
   105b0:	cmp	w0, #0x0
   105b4:	b.eq	105c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb650>  // b.none
   105b8:	mov	w0, #0x0                   	// #0
   105bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   105c0:	mov	w2, #0x5                   	// #5
   105c4:	mov	w1, #0x5                   	// #5
   105c8:	ldr	w0, [sp, #52]
   105cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   105d0:	str	w0, [sp, #3772]
   105d4:	ldr	x3, [sp, #24]
   105d8:	ldr	x2, [sp, #32]
   105dc:	ldr	w1, [sp, #3772]
   105e0:	ldr	x0, [sp, #40]
   105e4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   105e8:	mov	w1, w0
   105ec:	add	x0, sp, #0x3c
   105f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   105f4:	and	w0, w0, #0xff
   105f8:	eor	w0, w0, #0x1
   105fc:	and	w0, w0, #0xff
   10600:	cmp	w0, #0x0
   10604:	b.eq	10610 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb6a0>  // b.none
   10608:	mov	w0, #0x0                   	// #0
   1060c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10610:	mov	w2, #0x4                   	// #4
   10614:	mov	w1, #0x10                  	// #16
   10618:	ldr	w0, [sp, #52]
   1061c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10620:	str	w0, [sp, #3772]
   10624:	ldr	w0, [sp, #3772]
   10628:	ldr	x3, [sp, #24]
   1062c:	ldr	x2, [sp, #32]
   10630:	mov	x1, x0
   10634:	ldr	x0, [sp, #40]
   10638:	bl	2ac6c <_Z10DecodeSImmILi4EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
   1063c:	mov	w1, w0
   10640:	add	x0, sp, #0x3c
   10644:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10648:	and	w0, w0, #0xff
   1064c:	eor	w0, w0, #0x1
   10650:	and	w0, w0, #0xff
   10654:	cmp	w0, #0x0
   10658:	b.eq	10664 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb6f4>  // b.none
   1065c:	mov	w0, #0x0                   	// #0
   10660:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10664:	ldr	w0, [sp, #60]
   10668:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1066c:	mov	w2, #0x5                   	// #5
   10670:	mov	w1, #0x0                   	// #0
   10674:	ldr	w0, [sp, #52]
   10678:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1067c:	str	w0, [sp, #3772]
   10680:	ldr	x3, [sp, #24]
   10684:	ldr	x2, [sp, #32]
   10688:	ldr	w1, [sp, #3772]
   1068c:	ldr	x0, [sp, #40]
   10690:	bl	e94 <_ZL23DecodeZPR4RegisterClassRN4llvm6MCInstEjmPKv>
   10694:	mov	w1, w0
   10698:	add	x0, sp, #0x3c
   1069c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   106a0:	and	w0, w0, #0xff
   106a4:	eor	w0, w0, #0x1
   106a8:	and	w0, w0, #0xff
   106ac:	cmp	w0, #0x0
   106b0:	b.eq	106bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb74c>  // b.none
   106b4:	mov	w0, #0x0                   	// #0
   106b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   106bc:	mov	w2, #0x3                   	// #3
   106c0:	mov	w1, #0xa                   	// #10
   106c4:	ldr	w0, [sp, #52]
   106c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   106cc:	str	w0, [sp, #3772]
   106d0:	ldr	x3, [sp, #24]
   106d4:	ldr	x2, [sp, #32]
   106d8:	ldr	w1, [sp, #3772]
   106dc:	ldr	x0, [sp, #40]
   106e0:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
   106e4:	mov	w1, w0
   106e8:	add	x0, sp, #0x3c
   106ec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   106f0:	and	w0, w0, #0xff
   106f4:	eor	w0, w0, #0x1
   106f8:	and	w0, w0, #0xff
   106fc:	cmp	w0, #0x0
   10700:	b.eq	1070c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb79c>  // b.none
   10704:	mov	w0, #0x0                   	// #0
   10708:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1070c:	mov	w2, #0x5                   	// #5
   10710:	mov	w1, #0x5                   	// #5
   10714:	ldr	w0, [sp, #52]
   10718:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1071c:	str	w0, [sp, #3772]
   10720:	ldr	x3, [sp, #24]
   10724:	ldr	x2, [sp, #32]
   10728:	ldr	w1, [sp, #3772]
   1072c:	ldr	x0, [sp, #40]
   10730:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   10734:	mov	w1, w0
   10738:	add	x0, sp, #0x3c
   1073c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10740:	and	w0, w0, #0xff
   10744:	eor	w0, w0, #0x1
   10748:	and	w0, w0, #0xff
   1074c:	cmp	w0, #0x0
   10750:	b.eq	1075c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb7ec>  // b.none
   10754:	mov	w0, #0x0                   	// #0
   10758:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1075c:	mov	w2, #0x5                   	// #5
   10760:	mov	w1, #0x10                  	// #16
   10764:	ldr	w0, [sp, #52]
   10768:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1076c:	str	w0, [sp, #3772]
   10770:	ldr	x3, [sp, #24]
   10774:	ldr	x2, [sp, #32]
   10778:	ldr	w1, [sp, #3772]
   1077c:	ldr	x0, [sp, #40]
   10780:	bl	a94 <_ZL30DecodeGPR64commonRegisterClassRN4llvm6MCInstEjmPKv>
   10784:	mov	w1, w0
   10788:	add	x0, sp, #0x3c
   1078c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10790:	and	w0, w0, #0xff
   10794:	eor	w0, w0, #0x1
   10798:	and	w0, w0, #0xff
   1079c:	cmp	w0, #0x0
   107a0:	b.eq	107ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb83c>  // b.none
   107a4:	mov	w0, #0x0                   	// #0
   107a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   107ac:	ldr	w0, [sp, #60]
   107b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   107b4:	mov	w2, #0x5                   	// #5
   107b8:	mov	w1, #0x0                   	// #0
   107bc:	ldr	w0, [sp, #52]
   107c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   107c4:	str	w0, [sp, #3772]
   107c8:	ldr	x3, [sp, #24]
   107cc:	ldr	x2, [sp, #32]
   107d0:	ldr	w1, [sp, #3772]
   107d4:	ldr	x0, [sp, #40]
   107d8:	bl	e94 <_ZL23DecodeZPR4RegisterClassRN4llvm6MCInstEjmPKv>
   107dc:	mov	w1, w0
   107e0:	add	x0, sp, #0x3c
   107e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   107e8:	and	w0, w0, #0xff
   107ec:	eor	w0, w0, #0x1
   107f0:	and	w0, w0, #0xff
   107f4:	cmp	w0, #0x0
   107f8:	b.eq	10804 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb894>  // b.none
   107fc:	mov	w0, #0x0                   	// #0
   10800:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10804:	mov	w2, #0x3                   	// #3
   10808:	mov	w1, #0xa                   	// #10
   1080c:	ldr	w0, [sp, #52]
   10810:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10814:	str	w0, [sp, #3772]
   10818:	ldr	x3, [sp, #24]
   1081c:	ldr	x2, [sp, #32]
   10820:	ldr	w1, [sp, #3772]
   10824:	ldr	x0, [sp, #40]
   10828:	bl	f64 <_ZL25DecodePPR_3bRegisterClassRN4llvm6MCInstEjmPKv>
   1082c:	mov	w1, w0
   10830:	add	x0, sp, #0x3c
   10834:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10838:	and	w0, w0, #0xff
   1083c:	eor	w0, w0, #0x1
   10840:	and	w0, w0, #0xff
   10844:	cmp	w0, #0x0
   10848:	b.eq	10854 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb8e4>  // b.none
   1084c:	mov	w0, #0x0                   	// #0
   10850:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10854:	mov	w2, #0x5                   	// #5
   10858:	mov	w1, #0x5                   	// #5
   1085c:	ldr	w0, [sp, #52]
   10860:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10864:	str	w0, [sp, #3772]
   10868:	ldr	x3, [sp, #24]
   1086c:	ldr	x2, [sp, #32]
   10870:	ldr	w1, [sp, #3772]
   10874:	ldr	x0, [sp, #40]
   10878:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   1087c:	mov	w1, w0
   10880:	add	x0, sp, #0x3c
   10884:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10888:	and	w0, w0, #0xff
   1088c:	eor	w0, w0, #0x1
   10890:	and	w0, w0, #0xff
   10894:	cmp	w0, #0x0
   10898:	b.eq	108a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb934>  // b.none
   1089c:	mov	w0, #0x0                   	// #0
   108a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   108a4:	mov	w2, #0x4                   	// #4
   108a8:	mov	w1, #0x10                  	// #16
   108ac:	ldr	w0, [sp, #52]
   108b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   108b4:	str	w0, [sp, #3772]
   108b8:	ldr	w0, [sp, #3772]
   108bc:	ldr	x3, [sp, #24]
   108c0:	ldr	x2, [sp, #32]
   108c4:	mov	x1, x0
   108c8:	ldr	x0, [sp, #40]
   108cc:	bl	2ac6c <_Z10DecodeSImmILi4EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
   108d0:	mov	w1, w0
   108d4:	add	x0, sp, #0x3c
   108d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   108dc:	and	w0, w0, #0xff
   108e0:	eor	w0, w0, #0x1
   108e4:	and	w0, w0, #0xff
   108e8:	cmp	w0, #0x0
   108ec:	b.eq	108f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb988>  // b.none
   108f0:	mov	w0, #0x0                   	// #0
   108f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   108f8:	ldr	w0, [sp, #60]
   108fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10900:	ldr	x3, [sp, #24]
   10904:	ldr	x2, [sp, #32]
   10908:	ldr	w1, [sp, #52]
   1090c:	ldr	x0, [sp, #40]
   10910:	bl	241c <_ZL30DecodeExclusiveLdStInstructionRN4llvm6MCInstEjmPKv>
   10914:	mov	w1, w0
   10918:	add	x0, sp, #0x3c
   1091c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10920:	and	w0, w0, #0xff
   10924:	eor	w0, w0, #0x1
   10928:	and	w0, w0, #0xff
   1092c:	cmp	w0, #0x0
   10930:	b.eq	1093c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xb9cc>  // b.none
   10934:	mov	w0, #0x0                   	// #0
   10938:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1093c:	ldr	w0, [sp, #60]
   10940:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10944:	mov	w2, #0x5                   	// #5
   10948:	mov	w1, #0x10                  	// #16
   1094c:	ldr	w0, [sp, #52]
   10950:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10954:	str	w0, [sp, #3772]
   10958:	ldr	x3, [sp, #24]
   1095c:	ldr	x2, [sp, #32]
   10960:	ldr	w1, [sp, #3772]
   10964:	ldr	x0, [sp, #40]
   10968:	bl	3dbc <_ZL33DecodeWSeqPairsClassRegisterClassRN4llvm6MCInstEjmPKv>
   1096c:	mov	w1, w0
   10970:	add	x0, sp, #0x3c
   10974:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10978:	and	w0, w0, #0xff
   1097c:	eor	w0, w0, #0x1
   10980:	and	w0, w0, #0xff
   10984:	cmp	w0, #0x0
   10988:	b.eq	10994 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xba24>  // b.none
   1098c:	mov	w0, #0x0                   	// #0
   10990:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10994:	mov	w2, #0x5                   	// #5
   10998:	mov	w1, #0x10                  	// #16
   1099c:	ldr	w0, [sp, #52]
   109a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   109a4:	str	w0, [sp, #3772]
   109a8:	ldr	x3, [sp, #24]
   109ac:	ldr	x2, [sp, #32]
   109b0:	ldr	w1, [sp, #3772]
   109b4:	ldr	x0, [sp, #40]
   109b8:	bl	3dbc <_ZL33DecodeWSeqPairsClassRegisterClassRN4llvm6MCInstEjmPKv>
   109bc:	mov	w1, w0
   109c0:	add	x0, sp, #0x3c
   109c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   109c8:	and	w0, w0, #0xff
   109cc:	eor	w0, w0, #0x1
   109d0:	and	w0, w0, #0xff
   109d4:	cmp	w0, #0x0
   109d8:	b.eq	109e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xba74>  // b.none
   109dc:	mov	w0, #0x0                   	// #0
   109e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   109e4:	mov	w2, #0x5                   	// #5
   109e8:	mov	w1, #0x0                   	// #0
   109ec:	ldr	w0, [sp, #52]
   109f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   109f4:	str	w0, [sp, #3772]
   109f8:	ldr	x3, [sp, #24]
   109fc:	ldr	x2, [sp, #32]
   10a00:	ldr	w1, [sp, #3772]
   10a04:	ldr	x0, [sp, #40]
   10a08:	bl	3dbc <_ZL33DecodeWSeqPairsClassRegisterClassRN4llvm6MCInstEjmPKv>
   10a0c:	mov	w1, w0
   10a10:	add	x0, sp, #0x3c
   10a14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10a18:	and	w0, w0, #0xff
   10a1c:	eor	w0, w0, #0x1
   10a20:	and	w0, w0, #0xff
   10a24:	cmp	w0, #0x0
   10a28:	b.eq	10a34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbac4>  // b.none
   10a2c:	mov	w0, #0x0                   	// #0
   10a30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10a34:	mov	w2, #0x5                   	// #5
   10a38:	mov	w1, #0x5                   	// #5
   10a3c:	ldr	w0, [sp, #52]
   10a40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10a44:	str	w0, [sp, #3772]
   10a48:	ldr	x3, [sp, #24]
   10a4c:	ldr	x2, [sp, #32]
   10a50:	ldr	w1, [sp, #3772]
   10a54:	ldr	x0, [sp, #40]
   10a58:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   10a5c:	mov	w1, w0
   10a60:	add	x0, sp, #0x3c
   10a64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10a68:	and	w0, w0, #0xff
   10a6c:	eor	w0, w0, #0x1
   10a70:	and	w0, w0, #0xff
   10a74:	cmp	w0, #0x0
   10a78:	b.eq	10a84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbb14>  // b.none
   10a7c:	mov	w0, #0x0                   	// #0
   10a80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10a84:	ldr	w0, [sp, #60]
   10a88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10a8c:	mov	w2, #0x5                   	// #5
   10a90:	mov	w1, #0x10                  	// #16
   10a94:	ldr	w0, [sp, #52]
   10a98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10a9c:	str	w0, [sp, #3772]
   10aa0:	ldr	x3, [sp, #24]
   10aa4:	ldr	x2, [sp, #32]
   10aa8:	ldr	w1, [sp, #3772]
   10aac:	ldr	x0, [sp, #40]
   10ab0:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   10ab4:	mov	w1, w0
   10ab8:	add	x0, sp, #0x3c
   10abc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10ac0:	and	w0, w0, #0xff
   10ac4:	eor	w0, w0, #0x1
   10ac8:	and	w0, w0, #0xff
   10acc:	cmp	w0, #0x0
   10ad0:	b.eq	10adc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbb6c>  // b.none
   10ad4:	mov	w0, #0x0                   	// #0
   10ad8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10adc:	mov	w2, #0x5                   	// #5
   10ae0:	mov	w1, #0x10                  	// #16
   10ae4:	ldr	w0, [sp, #52]
   10ae8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10aec:	str	w0, [sp, #3772]
   10af0:	ldr	x3, [sp, #24]
   10af4:	ldr	x2, [sp, #32]
   10af8:	ldr	w1, [sp, #3772]
   10afc:	ldr	x0, [sp, #40]
   10b00:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   10b04:	mov	w1, w0
   10b08:	add	x0, sp, #0x3c
   10b0c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10b10:	and	w0, w0, #0xff
   10b14:	eor	w0, w0, #0x1
   10b18:	and	w0, w0, #0xff
   10b1c:	cmp	w0, #0x0
   10b20:	b.eq	10b2c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbbbc>  // b.none
   10b24:	mov	w0, #0x0                   	// #0
   10b28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10b2c:	mov	w2, #0x5                   	// #5
   10b30:	mov	w1, #0x0                   	// #0
   10b34:	ldr	w0, [sp, #52]
   10b38:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10b3c:	str	w0, [sp, #3772]
   10b40:	ldr	x3, [sp, #24]
   10b44:	ldr	x2, [sp, #32]
   10b48:	ldr	w1, [sp, #3772]
   10b4c:	ldr	x0, [sp, #40]
   10b50:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   10b54:	mov	w1, w0
   10b58:	add	x0, sp, #0x3c
   10b5c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10b60:	and	w0, w0, #0xff
   10b64:	eor	w0, w0, #0x1
   10b68:	and	w0, w0, #0xff
   10b6c:	cmp	w0, #0x0
   10b70:	b.eq	10b7c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbc0c>  // b.none
   10b74:	mov	w0, #0x0                   	// #0
   10b78:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10b7c:	mov	w2, #0x5                   	// #5
   10b80:	mov	w1, #0x5                   	// #5
   10b84:	ldr	w0, [sp, #52]
   10b88:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10b8c:	str	w0, [sp, #3772]
   10b90:	ldr	x3, [sp, #24]
   10b94:	ldr	x2, [sp, #32]
   10b98:	ldr	w1, [sp, #3772]
   10b9c:	ldr	x0, [sp, #40]
   10ba0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   10ba4:	mov	w1, w0
   10ba8:	add	x0, sp, #0x3c
   10bac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10bb0:	and	w0, w0, #0xff
   10bb4:	eor	w0, w0, #0x1
   10bb8:	and	w0, w0, #0xff
   10bbc:	cmp	w0, #0x0
   10bc0:	b.eq	10bcc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbc5c>  // b.none
   10bc4:	mov	w0, #0x0                   	// #0
   10bc8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10bcc:	ldr	w0, [sp, #60]
   10bd0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10bd4:	ldr	x3, [sp, #24]
   10bd8:	ldr	x2, [sp, #32]
   10bdc:	ldr	w1, [sp, #52]
   10be0:	ldr	x0, [sp, #40]
   10be4:	bl	1880 <_ZL30DecodeThreeAddrSRegInstructionRN4llvm6MCInstEjmPKv>
   10be8:	mov	w1, w0
   10bec:	add	x0, sp, #0x3c
   10bf0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10bf4:	and	w0, w0, #0xff
   10bf8:	eor	w0, w0, #0x1
   10bfc:	and	w0, w0, #0xff
   10c00:	cmp	w0, #0x0
   10c04:	b.eq	10c10 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbca0>  // b.none
   10c08:	mov	w0, #0x0                   	// #0
   10c0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10c10:	ldr	w0, [sp, #60]
   10c14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10c18:	ldr	x3, [sp, #24]
   10c1c:	ldr	x2, [sp, #32]
   10c20:	ldr	w1, [sp, #52]
   10c24:	ldr	x0, [sp, #40]
   10c28:	bl	2e7c <_ZL27DecodeAddSubERegInstructionRN4llvm6MCInstEjmPKv>
   10c2c:	mov	w1, w0
   10c30:	add	x0, sp, #0x3c
   10c34:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10c38:	and	w0, w0, #0xff
   10c3c:	eor	w0, w0, #0x1
   10c40:	and	w0, w0, #0xff
   10c44:	cmp	w0, #0x0
   10c48:	b.eq	10c54 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbce4>  // b.none
   10c4c:	mov	w0, #0x0                   	// #0
   10c50:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10c54:	ldr	w0, [sp, #60]
   10c58:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10c5c:	ldr	x3, [sp, #24]
   10c60:	ldr	x2, [sp, #32]
   10c64:	ldr	w1, [sp, #52]
   10c68:	ldr	x0, [sp, #40]
   10c6c:	bl	2870 <_ZL25DecodePairLdStInstructionRN4llvm6MCInstEjmPKv>
   10c70:	mov	w1, w0
   10c74:	add	x0, sp, #0x3c
   10c78:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10c7c:	and	w0, w0, #0xff
   10c80:	eor	w0, w0, #0x1
   10c84:	and	w0, w0, #0xff
   10c88:	cmp	w0, #0x0
   10c8c:	b.eq	10c98 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbd28>  // b.none
   10c90:	mov	w0, #0x0                   	// #0
   10c94:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10c98:	ldr	w0, [sp, #60]
   10c9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10ca0:	mov	w2, #0x5                   	// #5
   10ca4:	mov	w1, #0x10                  	// #16
   10ca8:	ldr	w0, [sp, #52]
   10cac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10cb0:	str	w0, [sp, #3772]
   10cb4:	ldr	x3, [sp, #24]
   10cb8:	ldr	x2, [sp, #32]
   10cbc:	ldr	w1, [sp, #3772]
   10cc0:	ldr	x0, [sp, #40]
   10cc4:	bl	3df4 <_ZL33DecodeXSeqPairsClassRegisterClassRN4llvm6MCInstEjmPKv>
   10cc8:	mov	w1, w0
   10ccc:	add	x0, sp, #0x3c
   10cd0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10cd4:	and	w0, w0, #0xff
   10cd8:	eor	w0, w0, #0x1
   10cdc:	and	w0, w0, #0xff
   10ce0:	cmp	w0, #0x0
   10ce4:	b.eq	10cf0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbd80>  // b.none
   10ce8:	mov	w0, #0x0                   	// #0
   10cec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10cf0:	mov	w2, #0x5                   	// #5
   10cf4:	mov	w1, #0x10                  	// #16
   10cf8:	ldr	w0, [sp, #52]
   10cfc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10d00:	str	w0, [sp, #3772]
   10d04:	ldr	x3, [sp, #24]
   10d08:	ldr	x2, [sp, #32]
   10d0c:	ldr	w1, [sp, #3772]
   10d10:	ldr	x0, [sp, #40]
   10d14:	bl	3df4 <_ZL33DecodeXSeqPairsClassRegisterClassRN4llvm6MCInstEjmPKv>
   10d18:	mov	w1, w0
   10d1c:	add	x0, sp, #0x3c
   10d20:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10d24:	and	w0, w0, #0xff
   10d28:	eor	w0, w0, #0x1
   10d2c:	and	w0, w0, #0xff
   10d30:	cmp	w0, #0x0
   10d34:	b.eq	10d40 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbdd0>  // b.none
   10d38:	mov	w0, #0x0                   	// #0
   10d3c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10d40:	mov	w2, #0x5                   	// #5
   10d44:	mov	w1, #0x0                   	// #0
   10d48:	ldr	w0, [sp, #52]
   10d4c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10d50:	str	w0, [sp, #3772]
   10d54:	ldr	x3, [sp, #24]
   10d58:	ldr	x2, [sp, #32]
   10d5c:	ldr	w1, [sp, #3772]
   10d60:	ldr	x0, [sp, #40]
   10d64:	bl	3df4 <_ZL33DecodeXSeqPairsClassRegisterClassRN4llvm6MCInstEjmPKv>
   10d68:	mov	w1, w0
   10d6c:	add	x0, sp, #0x3c
   10d70:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10d74:	and	w0, w0, #0xff
   10d78:	eor	w0, w0, #0x1
   10d7c:	and	w0, w0, #0xff
   10d80:	cmp	w0, #0x0
   10d84:	b.eq	10d90 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbe20>  // b.none
   10d88:	mov	w0, #0x0                   	// #0
   10d8c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10d90:	mov	w2, #0x5                   	// #5
   10d94:	mov	w1, #0x5                   	// #5
   10d98:	ldr	w0, [sp, #52]
   10d9c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10da0:	str	w0, [sp, #3772]
   10da4:	ldr	x3, [sp, #24]
   10da8:	ldr	x2, [sp, #32]
   10dac:	ldr	w1, [sp, #3772]
   10db0:	ldr	x0, [sp, #40]
   10db4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   10db8:	mov	w1, w0
   10dbc:	add	x0, sp, #0x3c
   10dc0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10dc4:	and	w0, w0, #0xff
   10dc8:	eor	w0, w0, #0x1
   10dcc:	and	w0, w0, #0xff
   10dd0:	cmp	w0, #0x0
   10dd4:	b.eq	10de0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbe70>  // b.none
   10dd8:	mov	w0, #0x0                   	// #0
   10ddc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10de0:	ldr	w0, [sp, #60]
   10de4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10de8:	mov	w2, #0x5                   	// #5
   10dec:	mov	w1, #0x10                  	// #16
   10df0:	ldr	w0, [sp, #52]
   10df4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10df8:	str	w0, [sp, #3772]
   10dfc:	ldr	x3, [sp, #24]
   10e00:	ldr	x2, [sp, #32]
   10e04:	ldr	w1, [sp, #3772]
   10e08:	ldr	x0, [sp, #40]
   10e0c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   10e10:	mov	w1, w0
   10e14:	add	x0, sp, #0x3c
   10e18:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10e1c:	and	w0, w0, #0xff
   10e20:	eor	w0, w0, #0x1
   10e24:	and	w0, w0, #0xff
   10e28:	cmp	w0, #0x0
   10e2c:	b.eq	10e38 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbec8>  // b.none
   10e30:	mov	w0, #0x0                   	// #0
   10e34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10e38:	mov	w2, #0x5                   	// #5
   10e3c:	mov	w1, #0x10                  	// #16
   10e40:	ldr	w0, [sp, #52]
   10e44:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10e48:	str	w0, [sp, #3772]
   10e4c:	ldr	x3, [sp, #24]
   10e50:	ldr	x2, [sp, #32]
   10e54:	ldr	w1, [sp, #3772]
   10e58:	ldr	x0, [sp, #40]
   10e5c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   10e60:	mov	w1, w0
   10e64:	add	x0, sp, #0x3c
   10e68:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10e6c:	and	w0, w0, #0xff
   10e70:	eor	w0, w0, #0x1
   10e74:	and	w0, w0, #0xff
   10e78:	cmp	w0, #0x0
   10e7c:	b.eq	10e88 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbf18>  // b.none
   10e80:	mov	w0, #0x0                   	// #0
   10e84:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10e88:	mov	w2, #0x5                   	// #5
   10e8c:	mov	w1, #0x0                   	// #0
   10e90:	ldr	w0, [sp, #52]
   10e94:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10e98:	str	w0, [sp, #3772]
   10e9c:	ldr	x3, [sp, #24]
   10ea0:	ldr	x2, [sp, #32]
   10ea4:	ldr	w1, [sp, #3772]
   10ea8:	ldr	x0, [sp, #40]
   10eac:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   10eb0:	mov	w1, w0
   10eb4:	add	x0, sp, #0x3c
   10eb8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10ebc:	and	w0, w0, #0xff
   10ec0:	eor	w0, w0, #0x1
   10ec4:	and	w0, w0, #0xff
   10ec8:	cmp	w0, #0x0
   10ecc:	b.eq	10ed8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbf68>  // b.none
   10ed0:	mov	w0, #0x0                   	// #0
   10ed4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10ed8:	mov	w2, #0x5                   	// #5
   10edc:	mov	w1, #0x5                   	// #5
   10ee0:	ldr	w0, [sp, #52]
   10ee4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10ee8:	str	w0, [sp, #3772]
   10eec:	ldr	x3, [sp, #24]
   10ef0:	ldr	x2, [sp, #32]
   10ef4:	ldr	w1, [sp, #3772]
   10ef8:	ldr	x0, [sp, #40]
   10efc:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   10f00:	mov	w1, w0
   10f04:	add	x0, sp, #0x3c
   10f08:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10f0c:	and	w0, w0, #0xff
   10f10:	eor	w0, w0, #0x1
   10f14:	and	w0, w0, #0xff
   10f18:	cmp	w0, #0x0
   10f1c:	b.eq	10f28 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xbfb8>  // b.none
   10f20:	mov	w0, #0x0                   	// #0
   10f24:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10f28:	ldr	w0, [sp, #60]
   10f2c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10f30:	mov	w2, #0x5                   	// #5
   10f34:	mov	w1, #0x0                   	// #0
   10f38:	ldr	w0, [sp, #52]
   10f3c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10f40:	str	w0, [sp, #3772]
   10f44:	ldr	x3, [sp, #24]
   10f48:	ldr	x2, [sp, #32]
   10f4c:	ldr	w1, [sp, #3772]
   10f50:	ldr	x0, [sp, #40]
   10f54:	bl	1220 <_ZL23DecodeDDDDRegisterClassRN4llvm6MCInstEjmPKv>
   10f58:	mov	w1, w0
   10f5c:	add	x0, sp, #0x3c
   10f60:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10f64:	and	w0, w0, #0xff
   10f68:	eor	w0, w0, #0x1
   10f6c:	and	w0, w0, #0xff
   10f70:	cmp	w0, #0x0
   10f74:	b.eq	10f80 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc010>  // b.none
   10f78:	mov	w0, #0x0                   	// #0
   10f7c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10f80:	mov	w2, #0x5                   	// #5
   10f84:	mov	w1, #0x5                   	// #5
   10f88:	ldr	w0, [sp, #52]
   10f8c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10f90:	str	w0, [sp, #3772]
   10f94:	ldr	x3, [sp, #24]
   10f98:	ldr	x2, [sp, #32]
   10f9c:	ldr	w1, [sp, #3772]
   10fa0:	ldr	x0, [sp, #40]
   10fa4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   10fa8:	mov	w1, w0
   10fac:	add	x0, sp, #0x3c
   10fb0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   10fb4:	and	w0, w0, #0xff
   10fb8:	eor	w0, w0, #0x1
   10fbc:	and	w0, w0, #0xff
   10fc0:	cmp	w0, #0x0
   10fc4:	b.eq	10fd0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc060>  // b.none
   10fc8:	mov	w0, #0x0                   	// #0
   10fcc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10fd0:	ldr	w0, [sp, #60]
   10fd4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   10fd8:	mov	w2, #0x5                   	// #5
   10fdc:	mov	w1, #0x0                   	// #0
   10fe0:	ldr	w0, [sp, #52]
   10fe4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   10fe8:	str	w0, [sp, #3772]
   10fec:	ldr	x3, [sp, #24]
   10ff0:	ldr	x2, [sp, #32]
   10ff4:	ldr	w1, [sp, #3772]
   10ff8:	ldr	x0, [sp, #40]
   10ffc:	bl	11b8 <_ZL22DecodeDDDRegisterClassRN4llvm6MCInstEjmPKv>
   11000:	mov	w1, w0
   11004:	add	x0, sp, #0x3c
   11008:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1100c:	and	w0, w0, #0xff
   11010:	eor	w0, w0, #0x1
   11014:	and	w0, w0, #0xff
   11018:	cmp	w0, #0x0
   1101c:	b.eq	11028 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc0b8>  // b.none
   11020:	mov	w0, #0x0                   	// #0
   11024:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11028:	mov	w2, #0x5                   	// #5
   1102c:	mov	w1, #0x5                   	// #5
   11030:	ldr	w0, [sp, #52]
   11034:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11038:	str	w0, [sp, #3772]
   1103c:	ldr	x3, [sp, #24]
   11040:	ldr	x2, [sp, #32]
   11044:	ldr	w1, [sp, #3772]
   11048:	ldr	x0, [sp, #40]
   1104c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11050:	mov	w1, w0
   11054:	add	x0, sp, #0x3c
   11058:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1105c:	and	w0, w0, #0xff
   11060:	eor	w0, w0, #0x1
   11064:	and	w0, w0, #0xff
   11068:	cmp	w0, #0x0
   1106c:	b.eq	11078 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc108>  // b.none
   11070:	mov	w0, #0x0                   	// #0
   11074:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11078:	ldr	w0, [sp, #60]
   1107c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11080:	mov	w2, #0x5                   	// #5
   11084:	mov	w1, #0x0                   	// #0
   11088:	ldr	w0, [sp, #52]
   1108c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11090:	str	w0, [sp, #3772]
   11094:	ldr	x3, [sp, #24]
   11098:	ldr	x2, [sp, #32]
   1109c:	ldr	w1, [sp, #3772]
   110a0:	ldr	x0, [sp, #40]
   110a4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   110a8:	mov	w1, w0
   110ac:	add	x0, sp, #0x3c
   110b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   110b4:	and	w0, w0, #0xff
   110b8:	eor	w0, w0, #0x1
   110bc:	and	w0, w0, #0xff
   110c0:	cmp	w0, #0x0
   110c4:	b.eq	110d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc160>  // b.none
   110c8:	mov	w0, #0x0                   	// #0
   110cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   110d0:	mov	w2, #0x5                   	// #5
   110d4:	mov	w1, #0x5                   	// #5
   110d8:	ldr	w0, [sp, #52]
   110dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   110e0:	str	w0, [sp, #3772]
   110e4:	ldr	x3, [sp, #24]
   110e8:	ldr	x2, [sp, #32]
   110ec:	ldr	w1, [sp, #3772]
   110f0:	ldr	x0, [sp, #40]
   110f4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   110f8:	mov	w1, w0
   110fc:	add	x0, sp, #0x3c
   11100:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11104:	and	w0, w0, #0xff
   11108:	eor	w0, w0, #0x1
   1110c:	and	w0, w0, #0xff
   11110:	cmp	w0, #0x0
   11114:	b.eq	11120 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc1b0>  // b.none
   11118:	mov	w0, #0x0                   	// #0
   1111c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11120:	ldr	w0, [sp, #60]
   11124:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11128:	mov	w2, #0x5                   	// #5
   1112c:	mov	w1, #0x0                   	// #0
   11130:	ldr	w0, [sp, #52]
   11134:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11138:	str	w0, [sp, #3772]
   1113c:	ldr	x3, [sp, #24]
   11140:	ldr	x2, [sp, #32]
   11144:	ldr	w1, [sp, #3772]
   11148:	ldr	x0, [sp, #40]
   1114c:	bl	1150 <_ZL21DecodeDDRegisterClassRN4llvm6MCInstEjmPKv>
   11150:	mov	w1, w0
   11154:	add	x0, sp, #0x3c
   11158:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1115c:	and	w0, w0, #0xff
   11160:	eor	w0, w0, #0x1
   11164:	and	w0, w0, #0xff
   11168:	cmp	w0, #0x0
   1116c:	b.eq	11178 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc208>  // b.none
   11170:	mov	w0, #0x0                   	// #0
   11174:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11178:	mov	w2, #0x5                   	// #5
   1117c:	mov	w1, #0x5                   	// #5
   11180:	ldr	w0, [sp, #52]
   11184:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11188:	str	w0, [sp, #3772]
   1118c:	ldr	x3, [sp, #24]
   11190:	ldr	x2, [sp, #32]
   11194:	ldr	w1, [sp, #3772]
   11198:	ldr	x0, [sp, #40]
   1119c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   111a0:	mov	w1, w0
   111a4:	add	x0, sp, #0x3c
   111a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   111ac:	and	w0, w0, #0xff
   111b0:	eor	w0, w0, #0x1
   111b4:	and	w0, w0, #0xff
   111b8:	cmp	w0, #0x0
   111bc:	b.eq	111c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc258>  // b.none
   111c0:	mov	w0, #0x0                   	// #0
   111c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   111c8:	ldr	w0, [sp, #60]
   111cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   111d0:	mov	w2, #0x5                   	// #5
   111d4:	mov	w1, #0x0                   	// #0
   111d8:	ldr	w0, [sp, #52]
   111dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   111e0:	str	w0, [sp, #3772]
   111e4:	ldr	x3, [sp, #24]
   111e8:	ldr	x2, [sp, #32]
   111ec:	ldr	w1, [sp, #3772]
   111f0:	ldr	x0, [sp, #40]
   111f4:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   111f8:	mov	w1, w0
   111fc:	add	x0, sp, #0x3c
   11200:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11204:	and	w0, w0, #0xff
   11208:	eor	w0, w0, #0x1
   1120c:	and	w0, w0, #0xff
   11210:	cmp	w0, #0x0
   11214:	b.eq	11220 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc2b0>  // b.none
   11218:	mov	w0, #0x0                   	// #0
   1121c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11220:	mov	w2, #0x5                   	// #5
   11224:	mov	w1, #0x5                   	// #5
   11228:	ldr	w0, [sp, #52]
   1122c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11230:	str	w0, [sp, #3772]
   11234:	ldr	x3, [sp, #24]
   11238:	ldr	x2, [sp, #32]
   1123c:	ldr	w1, [sp, #3772]
   11240:	ldr	x0, [sp, #40]
   11244:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11248:	mov	w1, w0
   1124c:	add	x0, sp, #0x3c
   11250:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11254:	and	w0, w0, #0xff
   11258:	eor	w0, w0, #0x1
   1125c:	and	w0, w0, #0xff
   11260:	cmp	w0, #0x0
   11264:	b.eq	11270 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc300>  // b.none
   11268:	mov	w0, #0x0                   	// #0
   1126c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11270:	ldr	w0, [sp, #60]
   11274:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11278:	mov	w2, #0x5                   	// #5
   1127c:	mov	w1, #0x0                   	// #0
   11280:	ldr	w0, [sp, #52]
   11284:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11288:	str	w0, [sp, #3772]
   1128c:	ldr	x3, [sp, #24]
   11290:	ldr	x2, [sp, #32]
   11294:	ldr	w1, [sp, #3772]
   11298:	ldr	x0, [sp, #40]
   1129c:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   112a0:	mov	w1, w0
   112a4:	add	x0, sp, #0x3c
   112a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   112ac:	and	w0, w0, #0xff
   112b0:	eor	w0, w0, #0x1
   112b4:	and	w0, w0, #0xff
   112b8:	cmp	w0, #0x0
   112bc:	b.eq	112c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc358>  // b.none
   112c0:	mov	w0, #0x0                   	// #0
   112c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   112c8:	mov	w2, #0x5                   	// #5
   112cc:	mov	w1, #0x5                   	// #5
   112d0:	ldr	w0, [sp, #52]
   112d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   112d8:	str	w0, [sp, #3772]
   112dc:	ldr	x3, [sp, #24]
   112e0:	ldr	x2, [sp, #32]
   112e4:	ldr	w1, [sp, #3772]
   112e8:	ldr	x0, [sp, #40]
   112ec:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   112f0:	mov	w1, w0
   112f4:	add	x0, sp, #0x3c
   112f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   112fc:	and	w0, w0, #0xff
   11300:	eor	w0, w0, #0x1
   11304:	and	w0, w0, #0xff
   11308:	cmp	w0, #0x0
   1130c:	b.eq	11318 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc3a8>  // b.none
   11310:	mov	w0, #0x0                   	// #0
   11314:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11318:	ldr	w0, [sp, #60]
   1131c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11320:	mov	w2, #0x5                   	// #5
   11324:	mov	w1, #0x0                   	// #0
   11328:	ldr	w0, [sp, #52]
   1132c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11330:	str	w0, [sp, #3772]
   11334:	ldr	x3, [sp, #24]
   11338:	ldr	x2, [sp, #32]
   1133c:	ldr	w1, [sp, #3772]
   11340:	ldr	x0, [sp, #40]
   11344:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   11348:	mov	w1, w0
   1134c:	add	x0, sp, #0x3c
   11350:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11354:	and	w0, w0, #0xff
   11358:	eor	w0, w0, #0x1
   1135c:	and	w0, w0, #0xff
   11360:	cmp	w0, #0x0
   11364:	b.eq	11370 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc400>  // b.none
   11368:	mov	w0, #0x0                   	// #0
   1136c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11370:	mov	w2, #0x5                   	// #5
   11374:	mov	w1, #0x5                   	// #5
   11378:	ldr	w0, [sp, #52]
   1137c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11380:	str	w0, [sp, #3772]
   11384:	ldr	x3, [sp, #24]
   11388:	ldr	x2, [sp, #32]
   1138c:	ldr	w1, [sp, #3772]
   11390:	ldr	x0, [sp, #40]
   11394:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11398:	mov	w1, w0
   1139c:	add	x0, sp, #0x3c
   113a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   113a4:	and	w0, w0, #0xff
   113a8:	eor	w0, w0, #0x1
   113ac:	and	w0, w0, #0xff
   113b0:	cmp	w0, #0x0
   113b4:	b.eq	113c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc450>  // b.none
   113b8:	mov	w0, #0x0                   	// #0
   113bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   113c0:	ldr	w0, [sp, #60]
   113c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   113c8:	mov	w2, #0x5                   	// #5
   113cc:	mov	w1, #0x0                   	// #0
   113d0:	ldr	w0, [sp, #52]
   113d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   113d8:	str	w0, [sp, #3772]
   113dc:	ldr	x3, [sp, #24]
   113e0:	ldr	x2, [sp, #32]
   113e4:	ldr	w1, [sp, #3772]
   113e8:	ldr	x0, [sp, #40]
   113ec:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   113f0:	mov	w1, w0
   113f4:	add	x0, sp, #0x3c
   113f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   113fc:	and	w0, w0, #0xff
   11400:	eor	w0, w0, #0x1
   11404:	and	w0, w0, #0xff
   11408:	cmp	w0, #0x0
   1140c:	b.eq	11418 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc4a8>  // b.none
   11410:	mov	w0, #0x0                   	// #0
   11414:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11418:	mov	w2, #0x5                   	// #5
   1141c:	mov	w1, #0x5                   	// #5
   11420:	ldr	w0, [sp, #52]
   11424:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11428:	str	w0, [sp, #3772]
   1142c:	ldr	x3, [sp, #24]
   11430:	ldr	x2, [sp, #32]
   11434:	ldr	w1, [sp, #3772]
   11438:	ldr	x0, [sp, #40]
   1143c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11440:	mov	w1, w0
   11444:	add	x0, sp, #0x3c
   11448:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1144c:	and	w0, w0, #0xff
   11450:	eor	w0, w0, #0x1
   11454:	and	w0, w0, #0xff
   11458:	cmp	w0, #0x0
   1145c:	b.eq	11468 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc4f8>  // b.none
   11460:	mov	w0, #0x0                   	// #0
   11464:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11468:	ldr	w0, [sp, #60]
   1146c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11470:	mov	w2, #0x5                   	// #5
   11474:	mov	w1, #0x5                   	// #5
   11478:	ldr	w0, [sp, #52]
   1147c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11480:	str	w0, [sp, #3772]
   11484:	ldr	x3, [sp, #24]
   11488:	ldr	x2, [sp, #32]
   1148c:	ldr	w1, [sp, #3772]
   11490:	ldr	x0, [sp, #40]
   11494:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11498:	mov	w1, w0
   1149c:	add	x0, sp, #0x3c
   114a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   114a4:	and	w0, w0, #0xff
   114a8:	eor	w0, w0, #0x1
   114ac:	and	w0, w0, #0xff
   114b0:	cmp	w0, #0x0
   114b4:	b.eq	114c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc550>  // b.none
   114b8:	mov	w0, #0x0                   	// #0
   114bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   114c0:	mov	w2, #0x5                   	// #5
   114c4:	mov	w1, #0x0                   	// #0
   114c8:	ldr	w0, [sp, #52]
   114cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   114d0:	str	w0, [sp, #3772]
   114d4:	ldr	x3, [sp, #24]
   114d8:	ldr	x2, [sp, #32]
   114dc:	ldr	w1, [sp, #3772]
   114e0:	ldr	x0, [sp, #40]
   114e4:	bl	1220 <_ZL23DecodeDDDDRegisterClassRN4llvm6MCInstEjmPKv>
   114e8:	mov	w1, w0
   114ec:	add	x0, sp, #0x3c
   114f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   114f4:	and	w0, w0, #0xff
   114f8:	eor	w0, w0, #0x1
   114fc:	and	w0, w0, #0xff
   11500:	cmp	w0, #0x0
   11504:	b.eq	11510 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc5a0>  // b.none
   11508:	mov	w0, #0x0                   	// #0
   1150c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11510:	mov	w2, #0x5                   	// #5
   11514:	mov	w1, #0x5                   	// #5
   11518:	ldr	w0, [sp, #52]
   1151c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11520:	str	w0, [sp, #3772]
   11524:	ldr	x3, [sp, #24]
   11528:	ldr	x2, [sp, #32]
   1152c:	ldr	w1, [sp, #3772]
   11530:	ldr	x0, [sp, #40]
   11534:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11538:	mov	w1, w0
   1153c:	add	x0, sp, #0x3c
   11540:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11544:	and	w0, w0, #0xff
   11548:	eor	w0, w0, #0x1
   1154c:	and	w0, w0, #0xff
   11550:	cmp	w0, #0x0
   11554:	b.eq	11560 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc5f0>  // b.none
   11558:	mov	w0, #0x0                   	// #0
   1155c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11560:	mov	w2, #0x5                   	// #5
   11564:	mov	w1, #0x10                  	// #16
   11568:	ldr	w0, [sp, #52]
   1156c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11570:	str	w0, [sp, #3772]
   11574:	ldr	x3, [sp, #24]
   11578:	ldr	x2, [sp, #32]
   1157c:	ldr	w1, [sp, #3772]
   11580:	ldr	x0, [sp, #40]
   11584:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   11588:	mov	w1, w0
   1158c:	add	x0, sp, #0x3c
   11590:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11594:	and	w0, w0, #0xff
   11598:	eor	w0, w0, #0x1
   1159c:	and	w0, w0, #0xff
   115a0:	cmp	w0, #0x0
   115a4:	b.eq	115b0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc640>  // b.none
   115a8:	mov	w0, #0x0                   	// #0
   115ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   115b0:	ldr	w0, [sp, #60]
   115b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   115b8:	mov	w2, #0x5                   	// #5
   115bc:	mov	w1, #0x5                   	// #5
   115c0:	ldr	w0, [sp, #52]
   115c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   115c8:	str	w0, [sp, #3772]
   115cc:	ldr	x3, [sp, #24]
   115d0:	ldr	x2, [sp, #32]
   115d4:	ldr	w1, [sp, #3772]
   115d8:	ldr	x0, [sp, #40]
   115dc:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   115e0:	mov	w1, w0
   115e4:	add	x0, sp, #0x3c
   115e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   115ec:	and	w0, w0, #0xff
   115f0:	eor	w0, w0, #0x1
   115f4:	and	w0, w0, #0xff
   115f8:	cmp	w0, #0x0
   115fc:	b.eq	11608 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc698>  // b.none
   11600:	mov	w0, #0x0                   	// #0
   11604:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11608:	mov	w2, #0x5                   	// #5
   1160c:	mov	w1, #0x0                   	// #0
   11610:	ldr	w0, [sp, #52]
   11614:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11618:	str	w0, [sp, #3772]
   1161c:	ldr	x3, [sp, #24]
   11620:	ldr	x2, [sp, #32]
   11624:	ldr	w1, [sp, #3772]
   11628:	ldr	x0, [sp, #40]
   1162c:	bl	11b8 <_ZL22DecodeDDDRegisterClassRN4llvm6MCInstEjmPKv>
   11630:	mov	w1, w0
   11634:	add	x0, sp, #0x3c
   11638:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1163c:	and	w0, w0, #0xff
   11640:	eor	w0, w0, #0x1
   11644:	and	w0, w0, #0xff
   11648:	cmp	w0, #0x0
   1164c:	b.eq	11658 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc6e8>  // b.none
   11650:	mov	w0, #0x0                   	// #0
   11654:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11658:	mov	w2, #0x5                   	// #5
   1165c:	mov	w1, #0x5                   	// #5
   11660:	ldr	w0, [sp, #52]
   11664:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11668:	str	w0, [sp, #3772]
   1166c:	ldr	x3, [sp, #24]
   11670:	ldr	x2, [sp, #32]
   11674:	ldr	w1, [sp, #3772]
   11678:	ldr	x0, [sp, #40]
   1167c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11680:	mov	w1, w0
   11684:	add	x0, sp, #0x3c
   11688:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1168c:	and	w0, w0, #0xff
   11690:	eor	w0, w0, #0x1
   11694:	and	w0, w0, #0xff
   11698:	cmp	w0, #0x0
   1169c:	b.eq	116a8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc738>  // b.none
   116a0:	mov	w0, #0x0                   	// #0
   116a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   116a8:	mov	w2, #0x5                   	// #5
   116ac:	mov	w1, #0x10                  	// #16
   116b0:	ldr	w0, [sp, #52]
   116b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   116b8:	str	w0, [sp, #3772]
   116bc:	ldr	x3, [sp, #24]
   116c0:	ldr	x2, [sp, #32]
   116c4:	ldr	w1, [sp, #3772]
   116c8:	ldr	x0, [sp, #40]
   116cc:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   116d0:	mov	w1, w0
   116d4:	add	x0, sp, #0x3c
   116d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   116dc:	and	w0, w0, #0xff
   116e0:	eor	w0, w0, #0x1
   116e4:	and	w0, w0, #0xff
   116e8:	cmp	w0, #0x0
   116ec:	b.eq	116f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc788>  // b.none
   116f0:	mov	w0, #0x0                   	// #0
   116f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   116f8:	ldr	w0, [sp, #60]
   116fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11700:	mov	w2, #0x5                   	// #5
   11704:	mov	w1, #0x5                   	// #5
   11708:	ldr	w0, [sp, #52]
   1170c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11710:	str	w0, [sp, #3772]
   11714:	ldr	x3, [sp, #24]
   11718:	ldr	x2, [sp, #32]
   1171c:	ldr	w1, [sp, #3772]
   11720:	ldr	x0, [sp, #40]
   11724:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11728:	mov	w1, w0
   1172c:	add	x0, sp, #0x3c
   11730:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11734:	and	w0, w0, #0xff
   11738:	eor	w0, w0, #0x1
   1173c:	and	w0, w0, #0xff
   11740:	cmp	w0, #0x0
   11744:	b.eq	11750 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc7e0>  // b.none
   11748:	mov	w0, #0x0                   	// #0
   1174c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11750:	mov	w2, #0x5                   	// #5
   11754:	mov	w1, #0x0                   	// #0
   11758:	ldr	w0, [sp, #52]
   1175c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11760:	str	w0, [sp, #3772]
   11764:	ldr	x3, [sp, #24]
   11768:	ldr	x2, [sp, #32]
   1176c:	ldr	w1, [sp, #3772]
   11770:	ldr	x0, [sp, #40]
   11774:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   11778:	mov	w1, w0
   1177c:	add	x0, sp, #0x3c
   11780:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11784:	and	w0, w0, #0xff
   11788:	eor	w0, w0, #0x1
   1178c:	and	w0, w0, #0xff
   11790:	cmp	w0, #0x0
   11794:	b.eq	117a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc830>  // b.none
   11798:	mov	w0, #0x0                   	// #0
   1179c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   117a0:	mov	w2, #0x5                   	// #5
   117a4:	mov	w1, #0x5                   	// #5
   117a8:	ldr	w0, [sp, #52]
   117ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   117b0:	str	w0, [sp, #3772]
   117b4:	ldr	x3, [sp, #24]
   117b8:	ldr	x2, [sp, #32]
   117bc:	ldr	w1, [sp, #3772]
   117c0:	ldr	x0, [sp, #40]
   117c4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   117c8:	mov	w1, w0
   117cc:	add	x0, sp, #0x3c
   117d0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   117d4:	and	w0, w0, #0xff
   117d8:	eor	w0, w0, #0x1
   117dc:	and	w0, w0, #0xff
   117e0:	cmp	w0, #0x0
   117e4:	b.eq	117f0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc880>  // b.none
   117e8:	mov	w0, #0x0                   	// #0
   117ec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   117f0:	mov	w2, #0x5                   	// #5
   117f4:	mov	w1, #0x10                  	// #16
   117f8:	ldr	w0, [sp, #52]
   117fc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11800:	str	w0, [sp, #3772]
   11804:	ldr	x3, [sp, #24]
   11808:	ldr	x2, [sp, #32]
   1180c:	ldr	w1, [sp, #3772]
   11810:	ldr	x0, [sp, #40]
   11814:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   11818:	mov	w1, w0
   1181c:	add	x0, sp, #0x3c
   11820:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11824:	and	w0, w0, #0xff
   11828:	eor	w0, w0, #0x1
   1182c:	and	w0, w0, #0xff
   11830:	cmp	w0, #0x0
   11834:	b.eq	11840 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc8d0>  // b.none
   11838:	mov	w0, #0x0                   	// #0
   1183c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11840:	ldr	w0, [sp, #60]
   11844:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11848:	mov	w2, #0x5                   	// #5
   1184c:	mov	w1, #0x5                   	// #5
   11850:	ldr	w0, [sp, #52]
   11854:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11858:	str	w0, [sp, #3772]
   1185c:	ldr	x3, [sp, #24]
   11860:	ldr	x2, [sp, #32]
   11864:	ldr	w1, [sp, #3772]
   11868:	ldr	x0, [sp, #40]
   1186c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11870:	mov	w1, w0
   11874:	add	x0, sp, #0x3c
   11878:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1187c:	and	w0, w0, #0xff
   11880:	eor	w0, w0, #0x1
   11884:	and	w0, w0, #0xff
   11888:	cmp	w0, #0x0
   1188c:	b.eq	11898 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc928>  // b.none
   11890:	mov	w0, #0x0                   	// #0
   11894:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11898:	mov	w2, #0x5                   	// #5
   1189c:	mov	w1, #0x0                   	// #0
   118a0:	ldr	w0, [sp, #52]
   118a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   118a8:	str	w0, [sp, #3772]
   118ac:	ldr	x3, [sp, #24]
   118b0:	ldr	x2, [sp, #32]
   118b4:	ldr	w1, [sp, #3772]
   118b8:	ldr	x0, [sp, #40]
   118bc:	bl	1150 <_ZL21DecodeDDRegisterClassRN4llvm6MCInstEjmPKv>
   118c0:	mov	w1, w0
   118c4:	add	x0, sp, #0x3c
   118c8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   118cc:	and	w0, w0, #0xff
   118d0:	eor	w0, w0, #0x1
   118d4:	and	w0, w0, #0xff
   118d8:	cmp	w0, #0x0
   118dc:	b.eq	118e8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc978>  // b.none
   118e0:	mov	w0, #0x0                   	// #0
   118e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   118e8:	mov	w2, #0x5                   	// #5
   118ec:	mov	w1, #0x5                   	// #5
   118f0:	ldr	w0, [sp, #52]
   118f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   118f8:	str	w0, [sp, #3772]
   118fc:	ldr	x3, [sp, #24]
   11900:	ldr	x2, [sp, #32]
   11904:	ldr	w1, [sp, #3772]
   11908:	ldr	x0, [sp, #40]
   1190c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11910:	mov	w1, w0
   11914:	add	x0, sp, #0x3c
   11918:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1191c:	and	w0, w0, #0xff
   11920:	eor	w0, w0, #0x1
   11924:	and	w0, w0, #0xff
   11928:	cmp	w0, #0x0
   1192c:	b.eq	11938 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xc9c8>  // b.none
   11930:	mov	w0, #0x0                   	// #0
   11934:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11938:	mov	w2, #0x5                   	// #5
   1193c:	mov	w1, #0x10                  	// #16
   11940:	ldr	w0, [sp, #52]
   11944:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11948:	str	w0, [sp, #3772]
   1194c:	ldr	x3, [sp, #24]
   11950:	ldr	x2, [sp, #32]
   11954:	ldr	w1, [sp, #3772]
   11958:	ldr	x0, [sp, #40]
   1195c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   11960:	mov	w1, w0
   11964:	add	x0, sp, #0x3c
   11968:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1196c:	and	w0, w0, #0xff
   11970:	eor	w0, w0, #0x1
   11974:	and	w0, w0, #0xff
   11978:	cmp	w0, #0x0
   1197c:	b.eq	11988 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xca18>  // b.none
   11980:	mov	w0, #0x0                   	// #0
   11984:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11988:	ldr	w0, [sp, #60]
   1198c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11990:	mov	w2, #0x5                   	// #5
   11994:	mov	w1, #0x5                   	// #5
   11998:	ldr	w0, [sp, #52]
   1199c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   119a0:	str	w0, [sp, #3772]
   119a4:	ldr	x3, [sp, #24]
   119a8:	ldr	x2, [sp, #32]
   119ac:	ldr	w1, [sp, #3772]
   119b0:	ldr	x0, [sp, #40]
   119b4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   119b8:	mov	w1, w0
   119bc:	add	x0, sp, #0x3c
   119c0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   119c4:	and	w0, w0, #0xff
   119c8:	eor	w0, w0, #0x1
   119cc:	and	w0, w0, #0xff
   119d0:	cmp	w0, #0x0
   119d4:	b.eq	119e0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xca70>  // b.none
   119d8:	mov	w0, #0x0                   	// #0
   119dc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   119e0:	mov	w2, #0x5                   	// #5
   119e4:	mov	w1, #0x0                   	// #0
   119e8:	ldr	w0, [sp, #52]
   119ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   119f0:	str	w0, [sp, #3772]
   119f4:	ldr	x3, [sp, #24]
   119f8:	ldr	x2, [sp, #32]
   119fc:	ldr	w1, [sp, #3772]
   11a00:	ldr	x0, [sp, #40]
   11a04:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   11a08:	mov	w1, w0
   11a0c:	add	x0, sp, #0x3c
   11a10:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11a14:	and	w0, w0, #0xff
   11a18:	eor	w0, w0, #0x1
   11a1c:	and	w0, w0, #0xff
   11a20:	cmp	w0, #0x0
   11a24:	b.eq	11a30 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcac0>  // b.none
   11a28:	mov	w0, #0x0                   	// #0
   11a2c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11a30:	mov	w2, #0x5                   	// #5
   11a34:	mov	w1, #0x5                   	// #5
   11a38:	ldr	w0, [sp, #52]
   11a3c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11a40:	str	w0, [sp, #3772]
   11a44:	ldr	x3, [sp, #24]
   11a48:	ldr	x2, [sp, #32]
   11a4c:	ldr	w1, [sp, #3772]
   11a50:	ldr	x0, [sp, #40]
   11a54:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11a58:	mov	w1, w0
   11a5c:	add	x0, sp, #0x3c
   11a60:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11a64:	and	w0, w0, #0xff
   11a68:	eor	w0, w0, #0x1
   11a6c:	and	w0, w0, #0xff
   11a70:	cmp	w0, #0x0
   11a74:	b.eq	11a80 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcb10>  // b.none
   11a78:	mov	w0, #0x0                   	// #0
   11a7c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11a80:	mov	w2, #0x5                   	// #5
   11a84:	mov	w1, #0x10                  	// #16
   11a88:	ldr	w0, [sp, #52]
   11a8c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11a90:	str	w0, [sp, #3772]
   11a94:	ldr	x3, [sp, #24]
   11a98:	ldr	x2, [sp, #32]
   11a9c:	ldr	w1, [sp, #3772]
   11aa0:	ldr	x0, [sp, #40]
   11aa4:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   11aa8:	mov	w1, w0
   11aac:	add	x0, sp, #0x3c
   11ab0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11ab4:	and	w0, w0, #0xff
   11ab8:	eor	w0, w0, #0x1
   11abc:	and	w0, w0, #0xff
   11ac0:	cmp	w0, #0x0
   11ac4:	b.eq	11ad0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcb60>  // b.none
   11ac8:	mov	w0, #0x0                   	// #0
   11acc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11ad0:	ldr	w0, [sp, #60]
   11ad4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11ad8:	mov	w2, #0x5                   	// #5
   11adc:	mov	w1, #0x5                   	// #5
   11ae0:	ldr	w0, [sp, #52]
   11ae4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11ae8:	str	w0, [sp, #3772]
   11aec:	ldr	x3, [sp, #24]
   11af0:	ldr	x2, [sp, #32]
   11af4:	ldr	w1, [sp, #3772]
   11af8:	ldr	x0, [sp, #40]
   11afc:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11b00:	mov	w1, w0
   11b04:	add	x0, sp, #0x3c
   11b08:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11b0c:	and	w0, w0, #0xff
   11b10:	eor	w0, w0, #0x1
   11b14:	and	w0, w0, #0xff
   11b18:	cmp	w0, #0x0
   11b1c:	b.eq	11b28 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcbb8>  // b.none
   11b20:	mov	w0, #0x0                   	// #0
   11b24:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11b28:	mov	w2, #0x5                   	// #5
   11b2c:	mov	w1, #0x0                   	// #0
   11b30:	ldr	w0, [sp, #52]
   11b34:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11b38:	str	w0, [sp, #3772]
   11b3c:	ldr	x3, [sp, #24]
   11b40:	ldr	x2, [sp, #32]
   11b44:	ldr	w1, [sp, #3772]
   11b48:	ldr	x0, [sp, #40]
   11b4c:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   11b50:	mov	w1, w0
   11b54:	add	x0, sp, #0x3c
   11b58:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11b5c:	and	w0, w0, #0xff
   11b60:	eor	w0, w0, #0x1
   11b64:	and	w0, w0, #0xff
   11b68:	cmp	w0, #0x0
   11b6c:	b.eq	11b78 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcc08>  // b.none
   11b70:	mov	w0, #0x0                   	// #0
   11b74:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11b78:	mov	w2, #0x5                   	// #5
   11b7c:	mov	w1, #0x5                   	// #5
   11b80:	ldr	w0, [sp, #52]
   11b84:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11b88:	str	w0, [sp, #3772]
   11b8c:	ldr	x3, [sp, #24]
   11b90:	ldr	x2, [sp, #32]
   11b94:	ldr	w1, [sp, #3772]
   11b98:	ldr	x0, [sp, #40]
   11b9c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11ba0:	mov	w1, w0
   11ba4:	add	x0, sp, #0x3c
   11ba8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11bac:	and	w0, w0, #0xff
   11bb0:	eor	w0, w0, #0x1
   11bb4:	and	w0, w0, #0xff
   11bb8:	cmp	w0, #0x0
   11bbc:	b.eq	11bc8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcc58>  // b.none
   11bc0:	mov	w0, #0x0                   	// #0
   11bc4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11bc8:	mov	w2, #0x5                   	// #5
   11bcc:	mov	w1, #0x10                  	// #16
   11bd0:	ldr	w0, [sp, #52]
   11bd4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11bd8:	str	w0, [sp, #3772]
   11bdc:	ldr	x3, [sp, #24]
   11be0:	ldr	x2, [sp, #32]
   11be4:	ldr	w1, [sp, #3772]
   11be8:	ldr	x0, [sp, #40]
   11bec:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   11bf0:	mov	w1, w0
   11bf4:	add	x0, sp, #0x3c
   11bf8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11bfc:	and	w0, w0, #0xff
   11c00:	eor	w0, w0, #0x1
   11c04:	and	w0, w0, #0xff
   11c08:	cmp	w0, #0x0
   11c0c:	b.eq	11c18 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcca8>  // b.none
   11c10:	mov	w0, #0x0                   	// #0
   11c14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11c18:	ldr	w0, [sp, #60]
   11c1c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11c20:	mov	w2, #0x5                   	// #5
   11c24:	mov	w1, #0x5                   	// #5
   11c28:	ldr	w0, [sp, #52]
   11c2c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11c30:	str	w0, [sp, #3772]
   11c34:	ldr	x3, [sp, #24]
   11c38:	ldr	x2, [sp, #32]
   11c3c:	ldr	w1, [sp, #3772]
   11c40:	ldr	x0, [sp, #40]
   11c44:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11c48:	mov	w1, w0
   11c4c:	add	x0, sp, #0x3c
   11c50:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11c54:	and	w0, w0, #0xff
   11c58:	eor	w0, w0, #0x1
   11c5c:	and	w0, w0, #0xff
   11c60:	cmp	w0, #0x0
   11c64:	b.eq	11c70 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcd00>  // b.none
   11c68:	mov	w0, #0x0                   	// #0
   11c6c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11c70:	mov	w2, #0x5                   	// #5
   11c74:	mov	w1, #0x0                   	// #0
   11c78:	ldr	w0, [sp, #52]
   11c7c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11c80:	str	w0, [sp, #3772]
   11c84:	ldr	x3, [sp, #24]
   11c88:	ldr	x2, [sp, #32]
   11c8c:	ldr	w1, [sp, #3772]
   11c90:	ldr	x0, [sp, #40]
   11c94:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   11c98:	mov	w1, w0
   11c9c:	add	x0, sp, #0x3c
   11ca0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11ca4:	and	w0, w0, #0xff
   11ca8:	eor	w0, w0, #0x1
   11cac:	and	w0, w0, #0xff
   11cb0:	cmp	w0, #0x0
   11cb4:	b.eq	11cc0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcd50>  // b.none
   11cb8:	mov	w0, #0x0                   	// #0
   11cbc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11cc0:	mov	w2, #0x5                   	// #5
   11cc4:	mov	w1, #0x5                   	// #5
   11cc8:	ldr	w0, [sp, #52]
   11ccc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11cd0:	str	w0, [sp, #3772]
   11cd4:	ldr	x3, [sp, #24]
   11cd8:	ldr	x2, [sp, #32]
   11cdc:	ldr	w1, [sp, #3772]
   11ce0:	ldr	x0, [sp, #40]
   11ce4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11ce8:	mov	w1, w0
   11cec:	add	x0, sp, #0x3c
   11cf0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11cf4:	and	w0, w0, #0xff
   11cf8:	eor	w0, w0, #0x1
   11cfc:	and	w0, w0, #0xff
   11d00:	cmp	w0, #0x0
   11d04:	b.eq	11d10 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcda0>  // b.none
   11d08:	mov	w0, #0x0                   	// #0
   11d0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11d10:	mov	w2, #0x5                   	// #5
   11d14:	mov	w1, #0x10                  	// #16
   11d18:	ldr	w0, [sp, #52]
   11d1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11d20:	str	w0, [sp, #3772]
   11d24:	ldr	x3, [sp, #24]
   11d28:	ldr	x2, [sp, #32]
   11d2c:	ldr	w1, [sp, #3772]
   11d30:	ldr	x0, [sp, #40]
   11d34:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   11d38:	mov	w1, w0
   11d3c:	add	x0, sp, #0x3c
   11d40:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11d44:	and	w0, w0, #0xff
   11d48:	eor	w0, w0, #0x1
   11d4c:	and	w0, w0, #0xff
   11d50:	cmp	w0, #0x0
   11d54:	b.eq	11d60 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcdf0>  // b.none
   11d58:	mov	w0, #0x0                   	// #0
   11d5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11d60:	ldr	w0, [sp, #60]
   11d64:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11d68:	mov	w2, #0x5                   	// #5
   11d6c:	mov	w1, #0x5                   	// #5
   11d70:	ldr	w0, [sp, #52]
   11d74:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11d78:	str	w0, [sp, #3772]
   11d7c:	ldr	x3, [sp, #24]
   11d80:	ldr	x2, [sp, #32]
   11d84:	ldr	w1, [sp, #3772]
   11d88:	ldr	x0, [sp, #40]
   11d8c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11d90:	mov	w1, w0
   11d94:	add	x0, sp, #0x3c
   11d98:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11d9c:	and	w0, w0, #0xff
   11da0:	eor	w0, w0, #0x1
   11da4:	and	w0, w0, #0xff
   11da8:	cmp	w0, #0x0
   11dac:	b.eq	11db8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xce48>  // b.none
   11db0:	mov	w0, #0x0                   	// #0
   11db4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11db8:	mov	w2, #0x5                   	// #5
   11dbc:	mov	w1, #0x0                   	// #0
   11dc0:	ldr	w0, [sp, #52]
   11dc4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11dc8:	str	w0, [sp, #3772]
   11dcc:	ldr	x3, [sp, #24]
   11dd0:	ldr	x2, [sp, #32]
   11dd4:	ldr	w1, [sp, #3772]
   11dd8:	ldr	x0, [sp, #40]
   11ddc:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   11de0:	mov	w1, w0
   11de4:	add	x0, sp, #0x3c
   11de8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11dec:	and	w0, w0, #0xff
   11df0:	eor	w0, w0, #0x1
   11df4:	and	w0, w0, #0xff
   11df8:	cmp	w0, #0x0
   11dfc:	b.eq	11e08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xce98>  // b.none
   11e00:	mov	w0, #0x0                   	// #0
   11e04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11e08:	mov	w2, #0x5                   	// #5
   11e0c:	mov	w1, #0x5                   	// #5
   11e10:	ldr	w0, [sp, #52]
   11e14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11e18:	str	w0, [sp, #3772]
   11e1c:	ldr	x3, [sp, #24]
   11e20:	ldr	x2, [sp, #32]
   11e24:	ldr	w1, [sp, #3772]
   11e28:	ldr	x0, [sp, #40]
   11e2c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11e30:	mov	w1, w0
   11e34:	add	x0, sp, #0x3c
   11e38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11e3c:	and	w0, w0, #0xff
   11e40:	eor	w0, w0, #0x1
   11e44:	and	w0, w0, #0xff
   11e48:	cmp	w0, #0x0
   11e4c:	b.eq	11e58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcee8>  // b.none
   11e50:	mov	w0, #0x0                   	// #0
   11e54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11e58:	mov	w2, #0x5                   	// #5
   11e5c:	mov	w1, #0x10                  	// #16
   11e60:	ldr	w0, [sp, #52]
   11e64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11e68:	str	w0, [sp, #3772]
   11e6c:	ldr	x3, [sp, #24]
   11e70:	ldr	x2, [sp, #32]
   11e74:	ldr	w1, [sp, #3772]
   11e78:	ldr	x0, [sp, #40]
   11e7c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   11e80:	mov	w1, w0
   11e84:	add	x0, sp, #0x3c
   11e88:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11e8c:	and	w0, w0, #0xff
   11e90:	eor	w0, w0, #0x1
   11e94:	and	w0, w0, #0xff
   11e98:	cmp	w0, #0x0
   11e9c:	b.eq	11ea8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcf38>  // b.none
   11ea0:	mov	w0, #0x0                   	// #0
   11ea4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11ea8:	ldr	w0, [sp, #60]
   11eac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11eb0:	mov	w2, #0x5                   	// #5
   11eb4:	mov	w1, #0x0                   	// #0
   11eb8:	ldr	w0, [sp, #52]
   11ebc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11ec0:	str	w0, [sp, #3772]
   11ec4:	ldr	x3, [sp, #24]
   11ec8:	ldr	x2, [sp, #32]
   11ecc:	ldr	w1, [sp, #3772]
   11ed0:	ldr	x0, [sp, #40]
   11ed4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   11ed8:	mov	w1, w0
   11edc:	add	x0, sp, #0x3c
   11ee0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11ee4:	and	w0, w0, #0xff
   11ee8:	eor	w0, w0, #0x1
   11eec:	and	w0, w0, #0xff
   11ef0:	cmp	w0, #0x0
   11ef4:	b.eq	11f00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xcf90>  // b.none
   11ef8:	mov	w0, #0x0                   	// #0
   11efc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11f00:	str	wzr, [sp, #3772]
   11f04:	mov	w2, #0x3                   	// #3
   11f08:	mov	w1, #0xa                   	// #10
   11f0c:	ldr	w0, [sp, #52]
   11f10:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11f14:	mov	w1, w0
   11f18:	ldr	w0, [sp, #3772]
   11f1c:	orr	w0, w0, w1
   11f20:	str	w0, [sp, #3772]
   11f24:	mov	w2, #0x1                   	// #1
   11f28:	mov	w1, #0x1e                  	// #30
   11f2c:	ldr	w0, [sp, #52]
   11f30:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11f34:	lsl	w0, w0, #3
   11f38:	ldr	w1, [sp, #3772]
   11f3c:	orr	w0, w1, w0
   11f40:	str	w0, [sp, #3772]
   11f44:	ldr	w0, [sp, #3772]
   11f48:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   11f4c:	add	x2, sp, #0x400
   11f50:	stp	x0, x1, [x2, #-248]
   11f54:	add	x0, sp, #0x308
   11f58:	mov	x1, x0
   11f5c:	ldr	x0, [sp, #40]
   11f60:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   11f64:	mov	w2, #0x5                   	// #5
   11f68:	mov	w1, #0x5                   	// #5
   11f6c:	ldr	w0, [sp, #52]
   11f70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11f74:	str	w0, [sp, #3772]
   11f78:	ldr	x3, [sp, #24]
   11f7c:	ldr	x2, [sp, #32]
   11f80:	ldr	w1, [sp, #3772]
   11f84:	ldr	x0, [sp, #40]
   11f88:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   11f8c:	mov	w1, w0
   11f90:	add	x0, sp, #0x3c
   11f94:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11f98:	and	w0, w0, #0xff
   11f9c:	eor	w0, w0, #0x1
   11fa0:	and	w0, w0, #0xff
   11fa4:	cmp	w0, #0x0
   11fa8:	b.eq	11fb4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd044>  // b.none
   11fac:	mov	w0, #0x0                   	// #0
   11fb0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11fb4:	ldr	w0, [sp, #60]
   11fb8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   11fbc:	mov	w2, #0x5                   	// #5
   11fc0:	mov	w1, #0x0                   	// #0
   11fc4:	ldr	w0, [sp, #52]
   11fc8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   11fcc:	str	w0, [sp, #3772]
   11fd0:	ldr	x3, [sp, #24]
   11fd4:	ldr	x2, [sp, #32]
   11fd8:	ldr	w1, [sp, #3772]
   11fdc:	ldr	x0, [sp, #40]
   11fe0:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   11fe4:	mov	w1, w0
   11fe8:	add	x0, sp, #0x3c
   11fec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   11ff0:	and	w0, w0, #0xff
   11ff4:	eor	w0, w0, #0x1
   11ff8:	and	w0, w0, #0xff
   11ffc:	cmp	w0, #0x0
   12000:	b.eq	1200c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd09c>  // b.none
   12004:	mov	w0, #0x0                   	// #0
   12008:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1200c:	str	wzr, [sp, #3772]
   12010:	mov	w2, #0x3                   	// #3
   12014:	mov	w1, #0xa                   	// #10
   12018:	ldr	w0, [sp, #52]
   1201c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12020:	mov	w1, w0
   12024:	ldr	w0, [sp, #3772]
   12028:	orr	w0, w0, w1
   1202c:	str	w0, [sp, #3772]
   12030:	mov	w2, #0x1                   	// #1
   12034:	mov	w1, #0x1e                  	// #30
   12038:	ldr	w0, [sp, #52]
   1203c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12040:	lsl	w0, w0, #3
   12044:	ldr	w1, [sp, #3772]
   12048:	orr	w0, w1, w0
   1204c:	str	w0, [sp, #3772]
   12050:	ldr	w0, [sp, #3772]
   12054:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12058:	add	x2, sp, #0x400
   1205c:	stp	x0, x1, [x2, #-232]
   12060:	add	x0, sp, #0x318
   12064:	mov	x1, x0
   12068:	ldr	x0, [sp, #40]
   1206c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12070:	mov	w2, #0x5                   	// #5
   12074:	mov	w1, #0x5                   	// #5
   12078:	ldr	w0, [sp, #52]
   1207c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12080:	str	w0, [sp, #3772]
   12084:	ldr	x3, [sp, #24]
   12088:	ldr	x2, [sp, #32]
   1208c:	ldr	w1, [sp, #3772]
   12090:	ldr	x0, [sp, #40]
   12094:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   12098:	mov	w1, w0
   1209c:	add	x0, sp, #0x3c
   120a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   120a4:	and	w0, w0, #0xff
   120a8:	eor	w0, w0, #0x1
   120ac:	and	w0, w0, #0xff
   120b0:	cmp	w0, #0x0
   120b4:	b.eq	120c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd150>  // b.none
   120b8:	mov	w0, #0x0                   	// #0
   120bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   120c0:	ldr	w0, [sp, #60]
   120c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   120c8:	mov	w2, #0x5                   	// #5
   120cc:	mov	w1, #0x0                   	// #0
   120d0:	ldr	w0, [sp, #52]
   120d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   120d8:	str	w0, [sp, #3772]
   120dc:	ldr	x3, [sp, #24]
   120e0:	ldr	x2, [sp, #32]
   120e4:	ldr	w1, [sp, #3772]
   120e8:	ldr	x0, [sp, #40]
   120ec:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   120f0:	mov	w1, w0
   120f4:	add	x0, sp, #0x3c
   120f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   120fc:	and	w0, w0, #0xff
   12100:	eor	w0, w0, #0x1
   12104:	and	w0, w0, #0xff
   12108:	cmp	w0, #0x0
   1210c:	b.eq	12118 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd1a8>  // b.none
   12110:	mov	w0, #0x0                   	// #0
   12114:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12118:	str	wzr, [sp, #3772]
   1211c:	mov	w2, #0x2                   	// #2
   12120:	mov	w1, #0xb                   	// #11
   12124:	ldr	w0, [sp, #52]
   12128:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1212c:	mov	w1, w0
   12130:	ldr	w0, [sp, #3772]
   12134:	orr	w0, w0, w1
   12138:	str	w0, [sp, #3772]
   1213c:	mov	w2, #0x1                   	// #1
   12140:	mov	w1, #0x1e                  	// #30
   12144:	ldr	w0, [sp, #52]
   12148:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1214c:	lsl	w0, w0, #2
   12150:	ldr	w1, [sp, #3772]
   12154:	orr	w0, w1, w0
   12158:	str	w0, [sp, #3772]
   1215c:	ldr	w0, [sp, #3772]
   12160:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12164:	add	x2, sp, #0x400
   12168:	stp	x0, x1, [x2, #-216]
   1216c:	add	x0, sp, #0x328
   12170:	mov	x1, x0
   12174:	ldr	x0, [sp, #40]
   12178:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1217c:	mov	w2, #0x5                   	// #5
   12180:	mov	w1, #0x5                   	// #5
   12184:	ldr	w0, [sp, #52]
   12188:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1218c:	str	w0, [sp, #3772]
   12190:	ldr	x3, [sp, #24]
   12194:	ldr	x2, [sp, #32]
   12198:	ldr	w1, [sp, #3772]
   1219c:	ldr	x0, [sp, #40]
   121a0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   121a4:	mov	w1, w0
   121a8:	add	x0, sp, #0x3c
   121ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   121b0:	and	w0, w0, #0xff
   121b4:	eor	w0, w0, #0x1
   121b8:	and	w0, w0, #0xff
   121bc:	cmp	w0, #0x0
   121c0:	b.eq	121cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd25c>  // b.none
   121c4:	mov	w0, #0x0                   	// #0
   121c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   121cc:	ldr	w0, [sp, #60]
   121d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   121d4:	mov	w2, #0x5                   	// #5
   121d8:	mov	w1, #0x0                   	// #0
   121dc:	ldr	w0, [sp, #52]
   121e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   121e4:	str	w0, [sp, #3772]
   121e8:	ldr	x3, [sp, #24]
   121ec:	ldr	x2, [sp, #32]
   121f0:	ldr	w1, [sp, #3772]
   121f4:	ldr	x0, [sp, #40]
   121f8:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   121fc:	mov	w1, w0
   12200:	add	x0, sp, #0x3c
   12204:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12208:	and	w0, w0, #0xff
   1220c:	eor	w0, w0, #0x1
   12210:	and	w0, w0, #0xff
   12214:	cmp	w0, #0x0
   12218:	b.eq	12224 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd2b4>  // b.none
   1221c:	mov	w0, #0x0                   	// #0
   12220:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12224:	str	wzr, [sp, #3772]
   12228:	mov	w2, #0x2                   	// #2
   1222c:	mov	w1, #0xb                   	// #11
   12230:	ldr	w0, [sp, #52]
   12234:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12238:	mov	w1, w0
   1223c:	ldr	w0, [sp, #3772]
   12240:	orr	w0, w0, w1
   12244:	str	w0, [sp, #3772]
   12248:	mov	w2, #0x1                   	// #1
   1224c:	mov	w1, #0x1e                  	// #30
   12250:	ldr	w0, [sp, #52]
   12254:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12258:	lsl	w0, w0, #2
   1225c:	ldr	w1, [sp, #3772]
   12260:	orr	w0, w1, w0
   12264:	str	w0, [sp, #3772]
   12268:	ldr	w0, [sp, #3772]
   1226c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12270:	add	x2, sp, #0x400
   12274:	stp	x0, x1, [x2, #-200]
   12278:	add	x0, sp, #0x338
   1227c:	mov	x1, x0
   12280:	ldr	x0, [sp, #40]
   12284:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12288:	mov	w2, #0x5                   	// #5
   1228c:	mov	w1, #0x5                   	// #5
   12290:	ldr	w0, [sp, #52]
   12294:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12298:	str	w0, [sp, #3772]
   1229c:	ldr	x3, [sp, #24]
   122a0:	ldr	x2, [sp, #32]
   122a4:	ldr	w1, [sp, #3772]
   122a8:	ldr	x0, [sp, #40]
   122ac:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   122b0:	mov	w1, w0
   122b4:	add	x0, sp, #0x3c
   122b8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   122bc:	and	w0, w0, #0xff
   122c0:	eor	w0, w0, #0x1
   122c4:	and	w0, w0, #0xff
   122c8:	cmp	w0, #0x0
   122cc:	b.eq	122d8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd368>  // b.none
   122d0:	mov	w0, #0x0                   	// #0
   122d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   122d8:	ldr	w0, [sp, #60]
   122dc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   122e0:	mov	w2, #0x5                   	// #5
   122e4:	mov	w1, #0x0                   	// #0
   122e8:	ldr	w0, [sp, #52]
   122ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   122f0:	str	w0, [sp, #3772]
   122f4:	ldr	x3, [sp, #24]
   122f8:	ldr	x2, [sp, #32]
   122fc:	ldr	w1, [sp, #3772]
   12300:	ldr	x0, [sp, #40]
   12304:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   12308:	mov	w1, w0
   1230c:	add	x0, sp, #0x3c
   12310:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12314:	and	w0, w0, #0xff
   12318:	eor	w0, w0, #0x1
   1231c:	and	w0, w0, #0xff
   12320:	cmp	w0, #0x0
   12324:	b.eq	12330 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd3c0>  // b.none
   12328:	mov	w0, #0x0                   	// #0
   1232c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12330:	str	wzr, [sp, #3772]
   12334:	mov	w2, #0x1                   	// #1
   12338:	mov	w1, #0xc                   	// #12
   1233c:	ldr	w0, [sp, #52]
   12340:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12344:	mov	w1, w0
   12348:	ldr	w0, [sp, #3772]
   1234c:	orr	w0, w0, w1
   12350:	str	w0, [sp, #3772]
   12354:	mov	w2, #0x1                   	// #1
   12358:	mov	w1, #0x1e                  	// #30
   1235c:	ldr	w0, [sp, #52]
   12360:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12364:	lsl	w0, w0, #1
   12368:	ldr	w1, [sp, #3772]
   1236c:	orr	w0, w1, w0
   12370:	str	w0, [sp, #3772]
   12374:	ldr	w0, [sp, #3772]
   12378:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1237c:	add	x2, sp, #0x400
   12380:	stp	x0, x1, [x2, #-184]
   12384:	add	x0, sp, #0x348
   12388:	mov	x1, x0
   1238c:	ldr	x0, [sp, #40]
   12390:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12394:	mov	w2, #0x5                   	// #5
   12398:	mov	w1, #0x5                   	// #5
   1239c:	ldr	w0, [sp, #52]
   123a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   123a4:	str	w0, [sp, #3772]
   123a8:	ldr	x3, [sp, #24]
   123ac:	ldr	x2, [sp, #32]
   123b0:	ldr	w1, [sp, #3772]
   123b4:	ldr	x0, [sp, #40]
   123b8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   123bc:	mov	w1, w0
   123c0:	add	x0, sp, #0x3c
   123c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   123c8:	and	w0, w0, #0xff
   123cc:	eor	w0, w0, #0x1
   123d0:	and	w0, w0, #0xff
   123d4:	cmp	w0, #0x0
   123d8:	b.eq	123e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd474>  // b.none
   123dc:	mov	w0, #0x0                   	// #0
   123e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   123e4:	ldr	w0, [sp, #60]
   123e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   123ec:	mov	w2, #0x5                   	// #5
   123f0:	mov	w1, #0x0                   	// #0
   123f4:	ldr	w0, [sp, #52]
   123f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   123fc:	str	w0, [sp, #3772]
   12400:	ldr	x3, [sp, #24]
   12404:	ldr	x2, [sp, #32]
   12408:	ldr	w1, [sp, #3772]
   1240c:	ldr	x0, [sp, #40]
   12410:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   12414:	mov	w1, w0
   12418:	add	x0, sp, #0x3c
   1241c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12420:	and	w0, w0, #0xff
   12424:	eor	w0, w0, #0x1
   12428:	and	w0, w0, #0xff
   1242c:	cmp	w0, #0x0
   12430:	b.eq	1243c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd4cc>  // b.none
   12434:	mov	w0, #0x0                   	// #0
   12438:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1243c:	mov	w2, #0x1                   	// #1
   12440:	mov	w1, #0x1e                  	// #30
   12444:	ldr	w0, [sp, #52]
   12448:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1244c:	str	w0, [sp, #3772]
   12450:	ldr	w0, [sp, #3772]
   12454:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12458:	add	x2, sp, #0x400
   1245c:	stp	x0, x1, [x2, #-168]
   12460:	add	x0, sp, #0x358
   12464:	mov	x1, x0
   12468:	ldr	x0, [sp, #40]
   1246c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12470:	mov	w2, #0x5                   	// #5
   12474:	mov	w1, #0x5                   	// #5
   12478:	ldr	w0, [sp, #52]
   1247c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12480:	str	w0, [sp, #3772]
   12484:	ldr	x3, [sp, #24]
   12488:	ldr	x2, [sp, #32]
   1248c:	ldr	w1, [sp, #3772]
   12490:	ldr	x0, [sp, #40]
   12494:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   12498:	mov	w1, w0
   1249c:	add	x0, sp, #0x3c
   124a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   124a4:	and	w0, w0, #0xff
   124a8:	eor	w0, w0, #0x1
   124ac:	and	w0, w0, #0xff
   124b0:	cmp	w0, #0x0
   124b4:	b.eq	124c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd550>  // b.none
   124b8:	mov	w0, #0x0                   	// #0
   124bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   124c0:	ldr	w0, [sp, #60]
   124c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   124c8:	mov	w2, #0x5                   	// #5
   124cc:	mov	w1, #0x0                   	// #0
   124d0:	ldr	w0, [sp, #52]
   124d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   124d8:	str	w0, [sp, #3772]
   124dc:	ldr	x3, [sp, #24]
   124e0:	ldr	x2, [sp, #32]
   124e4:	ldr	w1, [sp, #3772]
   124e8:	ldr	x0, [sp, #40]
   124ec:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   124f0:	mov	w1, w0
   124f4:	add	x0, sp, #0x3c
   124f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   124fc:	and	w0, w0, #0xff
   12500:	eor	w0, w0, #0x1
   12504:	and	w0, w0, #0xff
   12508:	cmp	w0, #0x0
   1250c:	b.eq	12518 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd5a8>  // b.none
   12510:	mov	w0, #0x0                   	// #0
   12514:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12518:	str	wzr, [sp, #3772]
   1251c:	mov	w2, #0x1                   	// #1
   12520:	mov	w1, #0xc                   	// #12
   12524:	ldr	w0, [sp, #52]
   12528:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1252c:	mov	w1, w0
   12530:	ldr	w0, [sp, #3772]
   12534:	orr	w0, w0, w1
   12538:	str	w0, [sp, #3772]
   1253c:	mov	w2, #0x1                   	// #1
   12540:	mov	w1, #0x1e                  	// #30
   12544:	ldr	w0, [sp, #52]
   12548:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1254c:	lsl	w0, w0, #1
   12550:	ldr	w1, [sp, #3772]
   12554:	orr	w0, w1, w0
   12558:	str	w0, [sp, #3772]
   1255c:	ldr	w0, [sp, #3772]
   12560:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12564:	add	x2, sp, #0x400
   12568:	stp	x0, x1, [x2, #-152]
   1256c:	add	x0, sp, #0x368
   12570:	mov	x1, x0
   12574:	ldr	x0, [sp, #40]
   12578:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1257c:	mov	w2, #0x5                   	// #5
   12580:	mov	w1, #0x5                   	// #5
   12584:	ldr	w0, [sp, #52]
   12588:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1258c:	str	w0, [sp, #3772]
   12590:	ldr	x3, [sp, #24]
   12594:	ldr	x2, [sp, #32]
   12598:	ldr	w1, [sp, #3772]
   1259c:	ldr	x0, [sp, #40]
   125a0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   125a4:	mov	w1, w0
   125a8:	add	x0, sp, #0x3c
   125ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   125b0:	and	w0, w0, #0xff
   125b4:	eor	w0, w0, #0x1
   125b8:	and	w0, w0, #0xff
   125bc:	cmp	w0, #0x0
   125c0:	b.eq	125cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd65c>  // b.none
   125c4:	mov	w0, #0x0                   	// #0
   125c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   125cc:	ldr	w0, [sp, #60]
   125d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   125d4:	mov	w2, #0x5                   	// #5
   125d8:	mov	w1, #0x0                   	// #0
   125dc:	ldr	w0, [sp, #52]
   125e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   125e4:	str	w0, [sp, #3772]
   125e8:	ldr	x3, [sp, #24]
   125ec:	ldr	x2, [sp, #32]
   125f0:	ldr	w1, [sp, #3772]
   125f4:	ldr	x0, [sp, #40]
   125f8:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   125fc:	mov	w1, w0
   12600:	add	x0, sp, #0x3c
   12604:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12608:	and	w0, w0, #0xff
   1260c:	eor	w0, w0, #0x1
   12610:	and	w0, w0, #0xff
   12614:	cmp	w0, #0x0
   12618:	b.eq	12624 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd6b4>  // b.none
   1261c:	mov	w0, #0x0                   	// #0
   12620:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12624:	mov	w2, #0x1                   	// #1
   12628:	mov	w1, #0x1e                  	// #30
   1262c:	ldr	w0, [sp, #52]
   12630:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12634:	str	w0, [sp, #3772]
   12638:	ldr	w0, [sp, #3772]
   1263c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12640:	add	x2, sp, #0x400
   12644:	stp	x0, x1, [x2, #-136]
   12648:	add	x0, sp, #0x378
   1264c:	mov	x1, x0
   12650:	ldr	x0, [sp, #40]
   12654:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12658:	mov	w2, #0x5                   	// #5
   1265c:	mov	w1, #0x5                   	// #5
   12660:	ldr	w0, [sp, #52]
   12664:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12668:	str	w0, [sp, #3772]
   1266c:	ldr	x3, [sp, #24]
   12670:	ldr	x2, [sp, #32]
   12674:	ldr	w1, [sp, #3772]
   12678:	ldr	x0, [sp, #40]
   1267c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   12680:	mov	w1, w0
   12684:	add	x0, sp, #0x3c
   12688:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1268c:	and	w0, w0, #0xff
   12690:	eor	w0, w0, #0x1
   12694:	and	w0, w0, #0xff
   12698:	cmp	w0, #0x0
   1269c:	b.eq	126a8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd738>  // b.none
   126a0:	mov	w0, #0x0                   	// #0
   126a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   126a8:	ldr	w0, [sp, #60]
   126ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   126b0:	mov	w2, #0x5                   	// #5
   126b4:	mov	w1, #0x0                   	// #0
   126b8:	ldr	w0, [sp, #52]
   126bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   126c0:	str	w0, [sp, #3772]
   126c4:	ldr	x3, [sp, #24]
   126c8:	ldr	x2, [sp, #32]
   126cc:	ldr	w1, [sp, #3772]
   126d0:	ldr	x0, [sp, #40]
   126d4:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   126d8:	mov	w1, w0
   126dc:	add	x0, sp, #0x3c
   126e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   126e4:	and	w0, w0, #0xff
   126e8:	eor	w0, w0, #0x1
   126ec:	and	w0, w0, #0xff
   126f0:	cmp	w0, #0x0
   126f4:	b.eq	12700 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd790>  // b.none
   126f8:	mov	w0, #0x0                   	// #0
   126fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12700:	str	wzr, [sp, #3772]
   12704:	mov	w2, #0x3                   	// #3
   12708:	mov	w1, #0xa                   	// #10
   1270c:	ldr	w0, [sp, #52]
   12710:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12714:	mov	w1, w0
   12718:	ldr	w0, [sp, #3772]
   1271c:	orr	w0, w0, w1
   12720:	str	w0, [sp, #3772]
   12724:	mov	w2, #0x1                   	// #1
   12728:	mov	w1, #0x1e                  	// #30
   1272c:	ldr	w0, [sp, #52]
   12730:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12734:	lsl	w0, w0, #3
   12738:	ldr	w1, [sp, #3772]
   1273c:	orr	w0, w1, w0
   12740:	str	w0, [sp, #3772]
   12744:	ldr	w0, [sp, #3772]
   12748:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1274c:	add	x2, sp, #0x400
   12750:	stp	x0, x1, [x2, #-120]
   12754:	add	x0, sp, #0x388
   12758:	mov	x1, x0
   1275c:	ldr	x0, [sp, #40]
   12760:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12764:	mov	w2, #0x5                   	// #5
   12768:	mov	w1, #0x5                   	// #5
   1276c:	ldr	w0, [sp, #52]
   12770:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12774:	str	w0, [sp, #3772]
   12778:	ldr	x3, [sp, #24]
   1277c:	ldr	x2, [sp, #32]
   12780:	ldr	w1, [sp, #3772]
   12784:	ldr	x0, [sp, #40]
   12788:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   1278c:	mov	w1, w0
   12790:	add	x0, sp, #0x3c
   12794:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12798:	and	w0, w0, #0xff
   1279c:	eor	w0, w0, #0x1
   127a0:	and	w0, w0, #0xff
   127a4:	cmp	w0, #0x0
   127a8:	b.eq	127b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd844>  // b.none
   127ac:	mov	w0, #0x0                   	// #0
   127b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   127b4:	ldr	w0, [sp, #60]
   127b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   127bc:	mov	w2, #0x5                   	// #5
   127c0:	mov	w1, #0x0                   	// #0
   127c4:	ldr	w0, [sp, #52]
   127c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   127cc:	str	w0, [sp, #3772]
   127d0:	ldr	x3, [sp, #24]
   127d4:	ldr	x2, [sp, #32]
   127d8:	ldr	w1, [sp, #3772]
   127dc:	ldr	x0, [sp, #40]
   127e0:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   127e4:	mov	w1, w0
   127e8:	add	x0, sp, #0x3c
   127ec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   127f0:	and	w0, w0, #0xff
   127f4:	eor	w0, w0, #0x1
   127f8:	and	w0, w0, #0xff
   127fc:	cmp	w0, #0x0
   12800:	b.eq	1280c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd89c>  // b.none
   12804:	mov	w0, #0x0                   	// #0
   12808:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1280c:	str	wzr, [sp, #3772]
   12810:	mov	w2, #0x3                   	// #3
   12814:	mov	w1, #0xa                   	// #10
   12818:	ldr	w0, [sp, #52]
   1281c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12820:	mov	w1, w0
   12824:	ldr	w0, [sp, #3772]
   12828:	orr	w0, w0, w1
   1282c:	str	w0, [sp, #3772]
   12830:	mov	w2, #0x1                   	// #1
   12834:	mov	w1, #0x1e                  	// #30
   12838:	ldr	w0, [sp, #52]
   1283c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12840:	lsl	w0, w0, #3
   12844:	ldr	w1, [sp, #3772]
   12848:	orr	w0, w1, w0
   1284c:	str	w0, [sp, #3772]
   12850:	ldr	w0, [sp, #3772]
   12854:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12858:	add	x2, sp, #0x400
   1285c:	stp	x0, x1, [x2, #-104]
   12860:	add	x0, sp, #0x398
   12864:	mov	x1, x0
   12868:	ldr	x0, [sp, #40]
   1286c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12870:	mov	w2, #0x5                   	// #5
   12874:	mov	w1, #0x5                   	// #5
   12878:	ldr	w0, [sp, #52]
   1287c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12880:	str	w0, [sp, #3772]
   12884:	ldr	x3, [sp, #24]
   12888:	ldr	x2, [sp, #32]
   1288c:	ldr	w1, [sp, #3772]
   12890:	ldr	x0, [sp, #40]
   12894:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   12898:	mov	w1, w0
   1289c:	add	x0, sp, #0x3c
   128a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   128a4:	and	w0, w0, #0xff
   128a8:	eor	w0, w0, #0x1
   128ac:	and	w0, w0, #0xff
   128b0:	cmp	w0, #0x0
   128b4:	b.eq	128c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd950>  // b.none
   128b8:	mov	w0, #0x0                   	// #0
   128bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   128c0:	ldr	w0, [sp, #60]
   128c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   128c8:	mov	w2, #0x5                   	// #5
   128cc:	mov	w1, #0x0                   	// #0
   128d0:	ldr	w0, [sp, #52]
   128d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   128d8:	str	w0, [sp, #3772]
   128dc:	ldr	x3, [sp, #24]
   128e0:	ldr	x2, [sp, #32]
   128e4:	ldr	w1, [sp, #3772]
   128e8:	ldr	x0, [sp, #40]
   128ec:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   128f0:	mov	w1, w0
   128f4:	add	x0, sp, #0x3c
   128f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   128fc:	and	w0, w0, #0xff
   12900:	eor	w0, w0, #0x1
   12904:	and	w0, w0, #0xff
   12908:	cmp	w0, #0x0
   1290c:	b.eq	12918 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xd9a8>  // b.none
   12910:	mov	w0, #0x0                   	// #0
   12914:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12918:	str	wzr, [sp, #3772]
   1291c:	mov	w2, #0x2                   	// #2
   12920:	mov	w1, #0xb                   	// #11
   12924:	ldr	w0, [sp, #52]
   12928:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1292c:	mov	w1, w0
   12930:	ldr	w0, [sp, #3772]
   12934:	orr	w0, w0, w1
   12938:	str	w0, [sp, #3772]
   1293c:	mov	w2, #0x1                   	// #1
   12940:	mov	w1, #0x1e                  	// #30
   12944:	ldr	w0, [sp, #52]
   12948:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1294c:	lsl	w0, w0, #2
   12950:	ldr	w1, [sp, #3772]
   12954:	orr	w0, w1, w0
   12958:	str	w0, [sp, #3772]
   1295c:	ldr	w0, [sp, #3772]
   12960:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12964:	add	x2, sp, #0x400
   12968:	stp	x0, x1, [x2, #-88]
   1296c:	add	x0, sp, #0x3a8
   12970:	mov	x1, x0
   12974:	ldr	x0, [sp, #40]
   12978:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1297c:	mov	w2, #0x5                   	// #5
   12980:	mov	w1, #0x5                   	// #5
   12984:	ldr	w0, [sp, #52]
   12988:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1298c:	str	w0, [sp, #3772]
   12990:	ldr	x3, [sp, #24]
   12994:	ldr	x2, [sp, #32]
   12998:	ldr	w1, [sp, #3772]
   1299c:	ldr	x0, [sp, #40]
   129a0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   129a4:	mov	w1, w0
   129a8:	add	x0, sp, #0x3c
   129ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   129b0:	and	w0, w0, #0xff
   129b4:	eor	w0, w0, #0x1
   129b8:	and	w0, w0, #0xff
   129bc:	cmp	w0, #0x0
   129c0:	b.eq	129cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xda5c>  // b.none
   129c4:	mov	w0, #0x0                   	// #0
   129c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   129cc:	ldr	w0, [sp, #60]
   129d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   129d4:	mov	w2, #0x5                   	// #5
   129d8:	mov	w1, #0x0                   	// #0
   129dc:	ldr	w0, [sp, #52]
   129e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   129e4:	str	w0, [sp, #3772]
   129e8:	ldr	x3, [sp, #24]
   129ec:	ldr	x2, [sp, #32]
   129f0:	ldr	w1, [sp, #3772]
   129f4:	ldr	x0, [sp, #40]
   129f8:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   129fc:	mov	w1, w0
   12a00:	add	x0, sp, #0x3c
   12a04:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12a08:	and	w0, w0, #0xff
   12a0c:	eor	w0, w0, #0x1
   12a10:	and	w0, w0, #0xff
   12a14:	cmp	w0, #0x0
   12a18:	b.eq	12a24 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xdab4>  // b.none
   12a1c:	mov	w0, #0x0                   	// #0
   12a20:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12a24:	str	wzr, [sp, #3772]
   12a28:	mov	w2, #0x2                   	// #2
   12a2c:	mov	w1, #0xb                   	// #11
   12a30:	ldr	w0, [sp, #52]
   12a34:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12a38:	mov	w1, w0
   12a3c:	ldr	w0, [sp, #3772]
   12a40:	orr	w0, w0, w1
   12a44:	str	w0, [sp, #3772]
   12a48:	mov	w2, #0x1                   	// #1
   12a4c:	mov	w1, #0x1e                  	// #30
   12a50:	ldr	w0, [sp, #52]
   12a54:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12a58:	lsl	w0, w0, #2
   12a5c:	ldr	w1, [sp, #3772]
   12a60:	orr	w0, w1, w0
   12a64:	str	w0, [sp, #3772]
   12a68:	ldr	w0, [sp, #3772]
   12a6c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12a70:	add	x2, sp, #0x400
   12a74:	stp	x0, x1, [x2, #-72]
   12a78:	add	x0, sp, #0x3b8
   12a7c:	mov	x1, x0
   12a80:	ldr	x0, [sp, #40]
   12a84:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12a88:	mov	w2, #0x5                   	// #5
   12a8c:	mov	w1, #0x5                   	// #5
   12a90:	ldr	w0, [sp, #52]
   12a94:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12a98:	str	w0, [sp, #3772]
   12a9c:	ldr	x3, [sp, #24]
   12aa0:	ldr	x2, [sp, #32]
   12aa4:	ldr	w1, [sp, #3772]
   12aa8:	ldr	x0, [sp, #40]
   12aac:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   12ab0:	mov	w1, w0
   12ab4:	add	x0, sp, #0x3c
   12ab8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12abc:	and	w0, w0, #0xff
   12ac0:	eor	w0, w0, #0x1
   12ac4:	and	w0, w0, #0xff
   12ac8:	cmp	w0, #0x0
   12acc:	b.eq	12ad8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xdb68>  // b.none
   12ad0:	mov	w0, #0x0                   	// #0
   12ad4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12ad8:	ldr	w0, [sp, #60]
   12adc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12ae0:	mov	w2, #0x5                   	// #5
   12ae4:	mov	w1, #0x0                   	// #0
   12ae8:	ldr	w0, [sp, #52]
   12aec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12af0:	str	w0, [sp, #3772]
   12af4:	ldr	x3, [sp, #24]
   12af8:	ldr	x2, [sp, #32]
   12afc:	ldr	w1, [sp, #3772]
   12b00:	ldr	x0, [sp, #40]
   12b04:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   12b08:	mov	w1, w0
   12b0c:	add	x0, sp, #0x3c
   12b10:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12b14:	and	w0, w0, #0xff
   12b18:	eor	w0, w0, #0x1
   12b1c:	and	w0, w0, #0xff
   12b20:	cmp	w0, #0x0
   12b24:	b.eq	12b30 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xdbc0>  // b.none
   12b28:	mov	w0, #0x0                   	// #0
   12b2c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12b30:	str	wzr, [sp, #3772]
   12b34:	mov	w2, #0x1                   	// #1
   12b38:	mov	w1, #0xc                   	// #12
   12b3c:	ldr	w0, [sp, #52]
   12b40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12b44:	mov	w1, w0
   12b48:	ldr	w0, [sp, #3772]
   12b4c:	orr	w0, w0, w1
   12b50:	str	w0, [sp, #3772]
   12b54:	mov	w2, #0x1                   	// #1
   12b58:	mov	w1, #0x1e                  	// #30
   12b5c:	ldr	w0, [sp, #52]
   12b60:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12b64:	lsl	w0, w0, #1
   12b68:	ldr	w1, [sp, #3772]
   12b6c:	orr	w0, w1, w0
   12b70:	str	w0, [sp, #3772]
   12b74:	ldr	w0, [sp, #3772]
   12b78:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12b7c:	add	x2, sp, #0x400
   12b80:	stp	x0, x1, [x2, #-56]
   12b84:	add	x0, sp, #0x3c8
   12b88:	mov	x1, x0
   12b8c:	ldr	x0, [sp, #40]
   12b90:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12b94:	mov	w2, #0x5                   	// #5
   12b98:	mov	w1, #0x5                   	// #5
   12b9c:	ldr	w0, [sp, #52]
   12ba0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12ba4:	str	w0, [sp, #3772]
   12ba8:	ldr	x3, [sp, #24]
   12bac:	ldr	x2, [sp, #32]
   12bb0:	ldr	w1, [sp, #3772]
   12bb4:	ldr	x0, [sp, #40]
   12bb8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   12bbc:	mov	w1, w0
   12bc0:	add	x0, sp, #0x3c
   12bc4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12bc8:	and	w0, w0, #0xff
   12bcc:	eor	w0, w0, #0x1
   12bd0:	and	w0, w0, #0xff
   12bd4:	cmp	w0, #0x0
   12bd8:	b.eq	12be4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xdc74>  // b.none
   12bdc:	mov	w0, #0x0                   	// #0
   12be0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12be4:	ldr	w0, [sp, #60]
   12be8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12bec:	mov	w2, #0x5                   	// #5
   12bf0:	mov	w1, #0x0                   	// #0
   12bf4:	ldr	w0, [sp, #52]
   12bf8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12bfc:	str	w0, [sp, #3772]
   12c00:	ldr	x3, [sp, #24]
   12c04:	ldr	x2, [sp, #32]
   12c08:	ldr	w1, [sp, #3772]
   12c0c:	ldr	x0, [sp, #40]
   12c10:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   12c14:	mov	w1, w0
   12c18:	add	x0, sp, #0x3c
   12c1c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12c20:	and	w0, w0, #0xff
   12c24:	eor	w0, w0, #0x1
   12c28:	and	w0, w0, #0xff
   12c2c:	cmp	w0, #0x0
   12c30:	b.eq	12c3c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xdccc>  // b.none
   12c34:	mov	w0, #0x0                   	// #0
   12c38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12c3c:	mov	w2, #0x1                   	// #1
   12c40:	mov	w1, #0x1e                  	// #30
   12c44:	ldr	w0, [sp, #52]
   12c48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12c4c:	str	w0, [sp, #3772]
   12c50:	ldr	w0, [sp, #3772]
   12c54:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12c58:	add	x2, sp, #0x400
   12c5c:	stp	x0, x1, [x2, #-40]
   12c60:	add	x0, sp, #0x3d8
   12c64:	mov	x1, x0
   12c68:	ldr	x0, [sp, #40]
   12c6c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12c70:	mov	w2, #0x5                   	// #5
   12c74:	mov	w1, #0x5                   	// #5
   12c78:	ldr	w0, [sp, #52]
   12c7c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12c80:	str	w0, [sp, #3772]
   12c84:	ldr	x3, [sp, #24]
   12c88:	ldr	x2, [sp, #32]
   12c8c:	ldr	w1, [sp, #3772]
   12c90:	ldr	x0, [sp, #40]
   12c94:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   12c98:	mov	w1, w0
   12c9c:	add	x0, sp, #0x3c
   12ca0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12ca4:	and	w0, w0, #0xff
   12ca8:	eor	w0, w0, #0x1
   12cac:	and	w0, w0, #0xff
   12cb0:	cmp	w0, #0x0
   12cb4:	b.eq	12cc0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xdd50>  // b.none
   12cb8:	mov	w0, #0x0                   	// #0
   12cbc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12cc0:	ldr	w0, [sp, #60]
   12cc4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12cc8:	mov	w2, #0x5                   	// #5
   12ccc:	mov	w1, #0x0                   	// #0
   12cd0:	ldr	w0, [sp, #52]
   12cd4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12cd8:	str	w0, [sp, #3772]
   12cdc:	ldr	x3, [sp, #24]
   12ce0:	ldr	x2, [sp, #32]
   12ce4:	ldr	w1, [sp, #3772]
   12ce8:	ldr	x0, [sp, #40]
   12cec:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   12cf0:	mov	w1, w0
   12cf4:	add	x0, sp, #0x3c
   12cf8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12cfc:	and	w0, w0, #0xff
   12d00:	eor	w0, w0, #0x1
   12d04:	and	w0, w0, #0xff
   12d08:	cmp	w0, #0x0
   12d0c:	b.eq	12d18 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xdda8>  // b.none
   12d10:	mov	w0, #0x0                   	// #0
   12d14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12d18:	str	wzr, [sp, #3772]
   12d1c:	mov	w2, #0x1                   	// #1
   12d20:	mov	w1, #0xc                   	// #12
   12d24:	ldr	w0, [sp, #52]
   12d28:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12d2c:	mov	w1, w0
   12d30:	ldr	w0, [sp, #3772]
   12d34:	orr	w0, w0, w1
   12d38:	str	w0, [sp, #3772]
   12d3c:	mov	w2, #0x1                   	// #1
   12d40:	mov	w1, #0x1e                  	// #30
   12d44:	ldr	w0, [sp, #52]
   12d48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12d4c:	lsl	w0, w0, #1
   12d50:	ldr	w1, [sp, #3772]
   12d54:	orr	w0, w1, w0
   12d58:	str	w0, [sp, #3772]
   12d5c:	ldr	w0, [sp, #3772]
   12d60:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12d64:	add	x2, sp, #0x400
   12d68:	stp	x0, x1, [x2, #-24]
   12d6c:	add	x0, sp, #0x3e8
   12d70:	mov	x1, x0
   12d74:	ldr	x0, [sp, #40]
   12d78:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12d7c:	mov	w2, #0x5                   	// #5
   12d80:	mov	w1, #0x5                   	// #5
   12d84:	ldr	w0, [sp, #52]
   12d88:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12d8c:	str	w0, [sp, #3772]
   12d90:	ldr	x3, [sp, #24]
   12d94:	ldr	x2, [sp, #32]
   12d98:	ldr	w1, [sp, #3772]
   12d9c:	ldr	x0, [sp, #40]
   12da0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   12da4:	mov	w1, w0
   12da8:	add	x0, sp, #0x3c
   12dac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12db0:	and	w0, w0, #0xff
   12db4:	eor	w0, w0, #0x1
   12db8:	and	w0, w0, #0xff
   12dbc:	cmp	w0, #0x0
   12dc0:	b.eq	12dcc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xde5c>  // b.none
   12dc4:	mov	w0, #0x0                   	// #0
   12dc8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12dcc:	ldr	w0, [sp, #60]
   12dd0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12dd4:	mov	w2, #0x5                   	// #5
   12dd8:	mov	w1, #0x0                   	// #0
   12ddc:	ldr	w0, [sp, #52]
   12de0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12de4:	str	w0, [sp, #3772]
   12de8:	ldr	x3, [sp, #24]
   12dec:	ldr	x2, [sp, #32]
   12df0:	ldr	w1, [sp, #3772]
   12df4:	ldr	x0, [sp, #40]
   12df8:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   12dfc:	mov	w1, w0
   12e00:	add	x0, sp, #0x3c
   12e04:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12e08:	and	w0, w0, #0xff
   12e0c:	eor	w0, w0, #0x1
   12e10:	and	w0, w0, #0xff
   12e14:	cmp	w0, #0x0
   12e18:	b.eq	12e24 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xdeb4>  // b.none
   12e1c:	mov	w0, #0x0                   	// #0
   12e20:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12e24:	mov	w2, #0x1                   	// #1
   12e28:	mov	w1, #0x1e                  	// #30
   12e2c:	ldr	w0, [sp, #52]
   12e30:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12e34:	str	w0, [sp, #3772]
   12e38:	ldr	w0, [sp, #3772]
   12e3c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12e40:	add	x2, sp, #0x400
   12e44:	stp	x0, x1, [x2, #-8]
   12e48:	add	x0, sp, #0x3f8
   12e4c:	mov	x1, x0
   12e50:	ldr	x0, [sp, #40]
   12e54:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12e58:	mov	w2, #0x5                   	// #5
   12e5c:	mov	w1, #0x5                   	// #5
   12e60:	ldr	w0, [sp, #52]
   12e64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12e68:	str	w0, [sp, #3772]
   12e6c:	ldr	x3, [sp, #24]
   12e70:	ldr	x2, [sp, #32]
   12e74:	ldr	w1, [sp, #3772]
   12e78:	ldr	x0, [sp, #40]
   12e7c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   12e80:	mov	w1, w0
   12e84:	add	x0, sp, #0x3c
   12e88:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12e8c:	and	w0, w0, #0xff
   12e90:	eor	w0, w0, #0x1
   12e94:	and	w0, w0, #0xff
   12e98:	cmp	w0, #0x0
   12e9c:	b.eq	12ea8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xdf38>  // b.none
   12ea0:	mov	w0, #0x0                   	// #0
   12ea4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12ea8:	ldr	w0, [sp, #60]
   12eac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12eb0:	mov	w2, #0x5                   	// #5
   12eb4:	mov	w1, #0x0                   	// #0
   12eb8:	ldr	w0, [sp, #52]
   12ebc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12ec0:	str	w0, [sp, #3772]
   12ec4:	ldr	x3, [sp, #24]
   12ec8:	ldr	x2, [sp, #32]
   12ecc:	ldr	w1, [sp, #3772]
   12ed0:	ldr	x0, [sp, #40]
   12ed4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   12ed8:	mov	w1, w0
   12edc:	add	x0, sp, #0x3c
   12ee0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12ee4:	and	w0, w0, #0xff
   12ee8:	eor	w0, w0, #0x1
   12eec:	and	w0, w0, #0xff
   12ef0:	cmp	w0, #0x0
   12ef4:	b.eq	12f00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xdf90>  // b.none
   12ef8:	mov	w0, #0x0                   	// #0
   12efc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12f00:	mov	w2, #0x5                   	// #5
   12f04:	mov	w1, #0x0                   	// #0
   12f08:	ldr	w0, [sp, #52]
   12f0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12f10:	str	w0, [sp, #3772]
   12f14:	ldr	x3, [sp, #24]
   12f18:	ldr	x2, [sp, #32]
   12f1c:	ldr	w1, [sp, #3772]
   12f20:	ldr	x0, [sp, #40]
   12f24:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   12f28:	mov	w1, w0
   12f2c:	add	x0, sp, #0x3c
   12f30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12f34:	and	w0, w0, #0xff
   12f38:	eor	w0, w0, #0x1
   12f3c:	and	w0, w0, #0xff
   12f40:	cmp	w0, #0x0
   12f44:	b.eq	12f50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xdfe0>  // b.none
   12f48:	mov	w0, #0x0                   	// #0
   12f4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   12f50:	str	wzr, [sp, #3772]
   12f54:	mov	w2, #0x3                   	// #3
   12f58:	mov	w1, #0xa                   	// #10
   12f5c:	ldr	w0, [sp, #52]
   12f60:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12f64:	mov	w1, w0
   12f68:	ldr	w0, [sp, #3772]
   12f6c:	orr	w0, w0, w1
   12f70:	str	w0, [sp, #3772]
   12f74:	mov	w2, #0x1                   	// #1
   12f78:	mov	w1, #0x1e                  	// #30
   12f7c:	ldr	w0, [sp, #52]
   12f80:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12f84:	lsl	w0, w0, #3
   12f88:	ldr	w1, [sp, #3772]
   12f8c:	orr	w0, w1, w0
   12f90:	str	w0, [sp, #3772]
   12f94:	ldr	w0, [sp, #3772]
   12f98:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12f9c:	add	x2, sp, #0x400
   12fa0:	stp	x0, x1, [x2, #8]
   12fa4:	add	x0, sp, #0x408
   12fa8:	mov	x1, x0
   12fac:	ldr	x0, [sp, #40]
   12fb0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   12fb4:	mov	w2, #0x5                   	// #5
   12fb8:	mov	w1, #0x5                   	// #5
   12fbc:	ldr	w0, [sp, #52]
   12fc0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   12fc4:	str	w0, [sp, #3772]
   12fc8:	ldr	x3, [sp, #24]
   12fcc:	ldr	x2, [sp, #32]
   12fd0:	ldr	w1, [sp, #3772]
   12fd4:	ldr	x0, [sp, #40]
   12fd8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   12fdc:	mov	w1, w0
   12fe0:	add	x0, sp, #0x3c
   12fe4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   12fe8:	and	w0, w0, #0xff
   12fec:	eor	w0, w0, #0x1
   12ff0:	and	w0, w0, #0xff
   12ff4:	cmp	w0, #0x0
   12ff8:	b.eq	13004 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe094>  // b.none
   12ffc:	mov	w0, #0x0                   	// #0
   13000:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13004:	ldr	w0, [sp, #60]
   13008:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1300c:	mov	w2, #0x5                   	// #5
   13010:	mov	w1, #0x0                   	// #0
   13014:	ldr	w0, [sp, #52]
   13018:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1301c:	str	w0, [sp, #3772]
   13020:	ldr	x3, [sp, #24]
   13024:	ldr	x2, [sp, #32]
   13028:	ldr	w1, [sp, #3772]
   1302c:	ldr	x0, [sp, #40]
   13030:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   13034:	mov	w1, w0
   13038:	add	x0, sp, #0x3c
   1303c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13040:	and	w0, w0, #0xff
   13044:	eor	w0, w0, #0x1
   13048:	and	w0, w0, #0xff
   1304c:	cmp	w0, #0x0
   13050:	b.eq	1305c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe0ec>  // b.none
   13054:	mov	w0, #0x0                   	// #0
   13058:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1305c:	mov	w2, #0x5                   	// #5
   13060:	mov	w1, #0x0                   	// #0
   13064:	ldr	w0, [sp, #52]
   13068:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1306c:	str	w0, [sp, #3772]
   13070:	ldr	x3, [sp, #24]
   13074:	ldr	x2, [sp, #32]
   13078:	ldr	w1, [sp, #3772]
   1307c:	ldr	x0, [sp, #40]
   13080:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   13084:	mov	w1, w0
   13088:	add	x0, sp, #0x3c
   1308c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13090:	and	w0, w0, #0xff
   13094:	eor	w0, w0, #0x1
   13098:	and	w0, w0, #0xff
   1309c:	cmp	w0, #0x0
   130a0:	b.eq	130ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe13c>  // b.none
   130a4:	mov	w0, #0x0                   	// #0
   130a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   130ac:	str	wzr, [sp, #3772]
   130b0:	mov	w2, #0x3                   	// #3
   130b4:	mov	w1, #0xa                   	// #10
   130b8:	ldr	w0, [sp, #52]
   130bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   130c0:	mov	w1, w0
   130c4:	ldr	w0, [sp, #3772]
   130c8:	orr	w0, w0, w1
   130cc:	str	w0, [sp, #3772]
   130d0:	mov	w2, #0x1                   	// #1
   130d4:	mov	w1, #0x1e                  	// #30
   130d8:	ldr	w0, [sp, #52]
   130dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   130e0:	lsl	w0, w0, #3
   130e4:	ldr	w1, [sp, #3772]
   130e8:	orr	w0, w1, w0
   130ec:	str	w0, [sp, #3772]
   130f0:	ldr	w0, [sp, #3772]
   130f4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   130f8:	add	x2, sp, #0x400
   130fc:	stp	x0, x1, [x2, #24]
   13100:	add	x0, sp, #0x418
   13104:	mov	x1, x0
   13108:	ldr	x0, [sp, #40]
   1310c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13110:	mov	w2, #0x5                   	// #5
   13114:	mov	w1, #0x5                   	// #5
   13118:	ldr	w0, [sp, #52]
   1311c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13120:	str	w0, [sp, #3772]
   13124:	ldr	x3, [sp, #24]
   13128:	ldr	x2, [sp, #32]
   1312c:	ldr	w1, [sp, #3772]
   13130:	ldr	x0, [sp, #40]
   13134:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   13138:	mov	w1, w0
   1313c:	add	x0, sp, #0x3c
   13140:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13144:	and	w0, w0, #0xff
   13148:	eor	w0, w0, #0x1
   1314c:	and	w0, w0, #0xff
   13150:	cmp	w0, #0x0
   13154:	b.eq	13160 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe1f0>  // b.none
   13158:	mov	w0, #0x0                   	// #0
   1315c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13160:	ldr	w0, [sp, #60]
   13164:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13168:	mov	w2, #0x5                   	// #5
   1316c:	mov	w1, #0x0                   	// #0
   13170:	ldr	w0, [sp, #52]
   13174:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13178:	str	w0, [sp, #3772]
   1317c:	ldr	x3, [sp, #24]
   13180:	ldr	x2, [sp, #32]
   13184:	ldr	w1, [sp, #3772]
   13188:	ldr	x0, [sp, #40]
   1318c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   13190:	mov	w1, w0
   13194:	add	x0, sp, #0x3c
   13198:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1319c:	and	w0, w0, #0xff
   131a0:	eor	w0, w0, #0x1
   131a4:	and	w0, w0, #0xff
   131a8:	cmp	w0, #0x0
   131ac:	b.eq	131b8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe248>  // b.none
   131b0:	mov	w0, #0x0                   	// #0
   131b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   131b8:	mov	w2, #0x5                   	// #5
   131bc:	mov	w1, #0x0                   	// #0
   131c0:	ldr	w0, [sp, #52]
   131c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   131c8:	str	w0, [sp, #3772]
   131cc:	ldr	x3, [sp, #24]
   131d0:	ldr	x2, [sp, #32]
   131d4:	ldr	w1, [sp, #3772]
   131d8:	ldr	x0, [sp, #40]
   131dc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   131e0:	mov	w1, w0
   131e4:	add	x0, sp, #0x3c
   131e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   131ec:	and	w0, w0, #0xff
   131f0:	eor	w0, w0, #0x1
   131f4:	and	w0, w0, #0xff
   131f8:	cmp	w0, #0x0
   131fc:	b.eq	13208 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe298>  // b.none
   13200:	mov	w0, #0x0                   	// #0
   13204:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13208:	str	wzr, [sp, #3772]
   1320c:	mov	w2, #0x2                   	// #2
   13210:	mov	w1, #0xb                   	// #11
   13214:	ldr	w0, [sp, #52]
   13218:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1321c:	mov	w1, w0
   13220:	ldr	w0, [sp, #3772]
   13224:	orr	w0, w0, w1
   13228:	str	w0, [sp, #3772]
   1322c:	mov	w2, #0x1                   	// #1
   13230:	mov	w1, #0x1e                  	// #30
   13234:	ldr	w0, [sp, #52]
   13238:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1323c:	lsl	w0, w0, #2
   13240:	ldr	w1, [sp, #3772]
   13244:	orr	w0, w1, w0
   13248:	str	w0, [sp, #3772]
   1324c:	ldr	w0, [sp, #3772]
   13250:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13254:	add	x2, sp, #0x400
   13258:	stp	x0, x1, [x2, #40]
   1325c:	add	x0, sp, #0x428
   13260:	mov	x1, x0
   13264:	ldr	x0, [sp, #40]
   13268:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1326c:	mov	w2, #0x5                   	// #5
   13270:	mov	w1, #0x5                   	// #5
   13274:	ldr	w0, [sp, #52]
   13278:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1327c:	str	w0, [sp, #3772]
   13280:	ldr	x3, [sp, #24]
   13284:	ldr	x2, [sp, #32]
   13288:	ldr	w1, [sp, #3772]
   1328c:	ldr	x0, [sp, #40]
   13290:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   13294:	mov	w1, w0
   13298:	add	x0, sp, #0x3c
   1329c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   132a0:	and	w0, w0, #0xff
   132a4:	eor	w0, w0, #0x1
   132a8:	and	w0, w0, #0xff
   132ac:	cmp	w0, #0x0
   132b0:	b.eq	132bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe34c>  // b.none
   132b4:	mov	w0, #0x0                   	// #0
   132b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   132bc:	ldr	w0, [sp, #60]
   132c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   132c4:	mov	w2, #0x5                   	// #5
   132c8:	mov	w1, #0x0                   	// #0
   132cc:	ldr	w0, [sp, #52]
   132d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   132d4:	str	w0, [sp, #3772]
   132d8:	ldr	x3, [sp, #24]
   132dc:	ldr	x2, [sp, #32]
   132e0:	ldr	w1, [sp, #3772]
   132e4:	ldr	x0, [sp, #40]
   132e8:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   132ec:	mov	w1, w0
   132f0:	add	x0, sp, #0x3c
   132f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   132f8:	and	w0, w0, #0xff
   132fc:	eor	w0, w0, #0x1
   13300:	and	w0, w0, #0xff
   13304:	cmp	w0, #0x0
   13308:	b.eq	13314 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe3a4>  // b.none
   1330c:	mov	w0, #0x0                   	// #0
   13310:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13314:	mov	w2, #0x5                   	// #5
   13318:	mov	w1, #0x0                   	// #0
   1331c:	ldr	w0, [sp, #52]
   13320:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13324:	str	w0, [sp, #3772]
   13328:	ldr	x3, [sp, #24]
   1332c:	ldr	x2, [sp, #32]
   13330:	ldr	w1, [sp, #3772]
   13334:	ldr	x0, [sp, #40]
   13338:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   1333c:	mov	w1, w0
   13340:	add	x0, sp, #0x3c
   13344:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13348:	and	w0, w0, #0xff
   1334c:	eor	w0, w0, #0x1
   13350:	and	w0, w0, #0xff
   13354:	cmp	w0, #0x0
   13358:	b.eq	13364 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe3f4>  // b.none
   1335c:	mov	w0, #0x0                   	// #0
   13360:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13364:	str	wzr, [sp, #3772]
   13368:	mov	w2, #0x2                   	// #2
   1336c:	mov	w1, #0xb                   	// #11
   13370:	ldr	w0, [sp, #52]
   13374:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13378:	mov	w1, w0
   1337c:	ldr	w0, [sp, #3772]
   13380:	orr	w0, w0, w1
   13384:	str	w0, [sp, #3772]
   13388:	mov	w2, #0x1                   	// #1
   1338c:	mov	w1, #0x1e                  	// #30
   13390:	ldr	w0, [sp, #52]
   13394:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13398:	lsl	w0, w0, #2
   1339c:	ldr	w1, [sp, #3772]
   133a0:	orr	w0, w1, w0
   133a4:	str	w0, [sp, #3772]
   133a8:	ldr	w0, [sp, #3772]
   133ac:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   133b0:	add	x2, sp, #0x400
   133b4:	stp	x0, x1, [x2, #56]
   133b8:	add	x0, sp, #0x438
   133bc:	mov	x1, x0
   133c0:	ldr	x0, [sp, #40]
   133c4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   133c8:	mov	w2, #0x5                   	// #5
   133cc:	mov	w1, #0x5                   	// #5
   133d0:	ldr	w0, [sp, #52]
   133d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   133d8:	str	w0, [sp, #3772]
   133dc:	ldr	x3, [sp, #24]
   133e0:	ldr	x2, [sp, #32]
   133e4:	ldr	w1, [sp, #3772]
   133e8:	ldr	x0, [sp, #40]
   133ec:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   133f0:	mov	w1, w0
   133f4:	add	x0, sp, #0x3c
   133f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   133fc:	and	w0, w0, #0xff
   13400:	eor	w0, w0, #0x1
   13404:	and	w0, w0, #0xff
   13408:	cmp	w0, #0x0
   1340c:	b.eq	13418 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe4a8>  // b.none
   13410:	mov	w0, #0x0                   	// #0
   13414:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13418:	ldr	w0, [sp, #60]
   1341c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13420:	mov	w2, #0x5                   	// #5
   13424:	mov	w1, #0x0                   	// #0
   13428:	ldr	w0, [sp, #52]
   1342c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13430:	str	w0, [sp, #3772]
   13434:	ldr	x3, [sp, #24]
   13438:	ldr	x2, [sp, #32]
   1343c:	ldr	w1, [sp, #3772]
   13440:	ldr	x0, [sp, #40]
   13444:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   13448:	mov	w1, w0
   1344c:	add	x0, sp, #0x3c
   13450:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13454:	and	w0, w0, #0xff
   13458:	eor	w0, w0, #0x1
   1345c:	and	w0, w0, #0xff
   13460:	cmp	w0, #0x0
   13464:	b.eq	13470 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe500>  // b.none
   13468:	mov	w0, #0x0                   	// #0
   1346c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13470:	mov	w2, #0x5                   	// #5
   13474:	mov	w1, #0x0                   	// #0
   13478:	ldr	w0, [sp, #52]
   1347c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13480:	str	w0, [sp, #3772]
   13484:	ldr	x3, [sp, #24]
   13488:	ldr	x2, [sp, #32]
   1348c:	ldr	w1, [sp, #3772]
   13490:	ldr	x0, [sp, #40]
   13494:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   13498:	mov	w1, w0
   1349c:	add	x0, sp, #0x3c
   134a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   134a4:	and	w0, w0, #0xff
   134a8:	eor	w0, w0, #0x1
   134ac:	and	w0, w0, #0xff
   134b0:	cmp	w0, #0x0
   134b4:	b.eq	134c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe550>  // b.none
   134b8:	mov	w0, #0x0                   	// #0
   134bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   134c0:	str	wzr, [sp, #3772]
   134c4:	mov	w2, #0x1                   	// #1
   134c8:	mov	w1, #0xc                   	// #12
   134cc:	ldr	w0, [sp, #52]
   134d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   134d4:	mov	w1, w0
   134d8:	ldr	w0, [sp, #3772]
   134dc:	orr	w0, w0, w1
   134e0:	str	w0, [sp, #3772]
   134e4:	mov	w2, #0x1                   	// #1
   134e8:	mov	w1, #0x1e                  	// #30
   134ec:	ldr	w0, [sp, #52]
   134f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   134f4:	lsl	w0, w0, #1
   134f8:	ldr	w1, [sp, #3772]
   134fc:	orr	w0, w1, w0
   13500:	str	w0, [sp, #3772]
   13504:	ldr	w0, [sp, #3772]
   13508:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1350c:	add	x2, sp, #0x400
   13510:	stp	x0, x1, [x2, #72]
   13514:	add	x0, sp, #0x448
   13518:	mov	x1, x0
   1351c:	ldr	x0, [sp, #40]
   13520:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13524:	mov	w2, #0x5                   	// #5
   13528:	mov	w1, #0x5                   	// #5
   1352c:	ldr	w0, [sp, #52]
   13530:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13534:	str	w0, [sp, #3772]
   13538:	ldr	x3, [sp, #24]
   1353c:	ldr	x2, [sp, #32]
   13540:	ldr	w1, [sp, #3772]
   13544:	ldr	x0, [sp, #40]
   13548:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   1354c:	mov	w1, w0
   13550:	add	x0, sp, #0x3c
   13554:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13558:	and	w0, w0, #0xff
   1355c:	eor	w0, w0, #0x1
   13560:	and	w0, w0, #0xff
   13564:	cmp	w0, #0x0
   13568:	b.eq	13574 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe604>  // b.none
   1356c:	mov	w0, #0x0                   	// #0
   13570:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13574:	ldr	w0, [sp, #60]
   13578:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1357c:	mov	w2, #0x5                   	// #5
   13580:	mov	w1, #0x0                   	// #0
   13584:	ldr	w0, [sp, #52]
   13588:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1358c:	str	w0, [sp, #3772]
   13590:	ldr	x3, [sp, #24]
   13594:	ldr	x2, [sp, #32]
   13598:	ldr	w1, [sp, #3772]
   1359c:	ldr	x0, [sp, #40]
   135a0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   135a4:	mov	w1, w0
   135a8:	add	x0, sp, #0x3c
   135ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   135b0:	and	w0, w0, #0xff
   135b4:	eor	w0, w0, #0x1
   135b8:	and	w0, w0, #0xff
   135bc:	cmp	w0, #0x0
   135c0:	b.eq	135cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe65c>  // b.none
   135c4:	mov	w0, #0x0                   	// #0
   135c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   135cc:	mov	w2, #0x5                   	// #5
   135d0:	mov	w1, #0x0                   	// #0
   135d4:	ldr	w0, [sp, #52]
   135d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   135dc:	str	w0, [sp, #3772]
   135e0:	ldr	x3, [sp, #24]
   135e4:	ldr	x2, [sp, #32]
   135e8:	ldr	w1, [sp, #3772]
   135ec:	ldr	x0, [sp, #40]
   135f0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   135f4:	mov	w1, w0
   135f8:	add	x0, sp, #0x3c
   135fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13600:	and	w0, w0, #0xff
   13604:	eor	w0, w0, #0x1
   13608:	and	w0, w0, #0xff
   1360c:	cmp	w0, #0x0
   13610:	b.eq	1361c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe6ac>  // b.none
   13614:	mov	w0, #0x0                   	// #0
   13618:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1361c:	mov	w2, #0x1                   	// #1
   13620:	mov	w1, #0x1e                  	// #30
   13624:	ldr	w0, [sp, #52]
   13628:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1362c:	str	w0, [sp, #3772]
   13630:	ldr	w0, [sp, #3772]
   13634:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13638:	add	x2, sp, #0x400
   1363c:	stp	x0, x1, [x2, #88]
   13640:	add	x0, sp, #0x458
   13644:	mov	x1, x0
   13648:	ldr	x0, [sp, #40]
   1364c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13650:	mov	w2, #0x5                   	// #5
   13654:	mov	w1, #0x5                   	// #5
   13658:	ldr	w0, [sp, #52]
   1365c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13660:	str	w0, [sp, #3772]
   13664:	ldr	x3, [sp, #24]
   13668:	ldr	x2, [sp, #32]
   1366c:	ldr	w1, [sp, #3772]
   13670:	ldr	x0, [sp, #40]
   13674:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   13678:	mov	w1, w0
   1367c:	add	x0, sp, #0x3c
   13680:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13684:	and	w0, w0, #0xff
   13688:	eor	w0, w0, #0x1
   1368c:	and	w0, w0, #0xff
   13690:	cmp	w0, #0x0
   13694:	b.eq	136a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe730>  // b.none
   13698:	mov	w0, #0x0                   	// #0
   1369c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   136a0:	ldr	w0, [sp, #60]
   136a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   136a8:	mov	w2, #0x5                   	// #5
   136ac:	mov	w1, #0x0                   	// #0
   136b0:	ldr	w0, [sp, #52]
   136b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   136b8:	str	w0, [sp, #3772]
   136bc:	ldr	x3, [sp, #24]
   136c0:	ldr	x2, [sp, #32]
   136c4:	ldr	w1, [sp, #3772]
   136c8:	ldr	x0, [sp, #40]
   136cc:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   136d0:	mov	w1, w0
   136d4:	add	x0, sp, #0x3c
   136d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   136dc:	and	w0, w0, #0xff
   136e0:	eor	w0, w0, #0x1
   136e4:	and	w0, w0, #0xff
   136e8:	cmp	w0, #0x0
   136ec:	b.eq	136f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe788>  // b.none
   136f0:	mov	w0, #0x0                   	// #0
   136f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   136f8:	mov	w2, #0x5                   	// #5
   136fc:	mov	w1, #0x0                   	// #0
   13700:	ldr	w0, [sp, #52]
   13704:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13708:	str	w0, [sp, #3772]
   1370c:	ldr	x3, [sp, #24]
   13710:	ldr	x2, [sp, #32]
   13714:	ldr	w1, [sp, #3772]
   13718:	ldr	x0, [sp, #40]
   1371c:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   13720:	mov	w1, w0
   13724:	add	x0, sp, #0x3c
   13728:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1372c:	and	w0, w0, #0xff
   13730:	eor	w0, w0, #0x1
   13734:	and	w0, w0, #0xff
   13738:	cmp	w0, #0x0
   1373c:	b.eq	13748 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe7d8>  // b.none
   13740:	mov	w0, #0x0                   	// #0
   13744:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13748:	str	wzr, [sp, #3772]
   1374c:	mov	w2, #0x1                   	// #1
   13750:	mov	w1, #0xc                   	// #12
   13754:	ldr	w0, [sp, #52]
   13758:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1375c:	mov	w1, w0
   13760:	ldr	w0, [sp, #3772]
   13764:	orr	w0, w0, w1
   13768:	str	w0, [sp, #3772]
   1376c:	mov	w2, #0x1                   	// #1
   13770:	mov	w1, #0x1e                  	// #30
   13774:	ldr	w0, [sp, #52]
   13778:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1377c:	lsl	w0, w0, #1
   13780:	ldr	w1, [sp, #3772]
   13784:	orr	w0, w1, w0
   13788:	str	w0, [sp, #3772]
   1378c:	ldr	w0, [sp, #3772]
   13790:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13794:	add	x2, sp, #0x400
   13798:	stp	x0, x1, [x2, #104]
   1379c:	add	x0, sp, #0x468
   137a0:	mov	x1, x0
   137a4:	ldr	x0, [sp, #40]
   137a8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   137ac:	mov	w2, #0x5                   	// #5
   137b0:	mov	w1, #0x5                   	// #5
   137b4:	ldr	w0, [sp, #52]
   137b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   137bc:	str	w0, [sp, #3772]
   137c0:	ldr	x3, [sp, #24]
   137c4:	ldr	x2, [sp, #32]
   137c8:	ldr	w1, [sp, #3772]
   137cc:	ldr	x0, [sp, #40]
   137d0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   137d4:	mov	w1, w0
   137d8:	add	x0, sp, #0x3c
   137dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   137e0:	and	w0, w0, #0xff
   137e4:	eor	w0, w0, #0x1
   137e8:	and	w0, w0, #0xff
   137ec:	cmp	w0, #0x0
   137f0:	b.eq	137fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe88c>  // b.none
   137f4:	mov	w0, #0x0                   	// #0
   137f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   137fc:	ldr	w0, [sp, #60]
   13800:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13804:	mov	w2, #0x5                   	// #5
   13808:	mov	w1, #0x0                   	// #0
   1380c:	ldr	w0, [sp, #52]
   13810:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13814:	str	w0, [sp, #3772]
   13818:	ldr	x3, [sp, #24]
   1381c:	ldr	x2, [sp, #32]
   13820:	ldr	w1, [sp, #3772]
   13824:	ldr	x0, [sp, #40]
   13828:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   1382c:	mov	w1, w0
   13830:	add	x0, sp, #0x3c
   13834:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13838:	and	w0, w0, #0xff
   1383c:	eor	w0, w0, #0x1
   13840:	and	w0, w0, #0xff
   13844:	cmp	w0, #0x0
   13848:	b.eq	13854 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe8e4>  // b.none
   1384c:	mov	w0, #0x0                   	// #0
   13850:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13854:	mov	w2, #0x5                   	// #5
   13858:	mov	w1, #0x0                   	// #0
   1385c:	ldr	w0, [sp, #52]
   13860:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13864:	str	w0, [sp, #3772]
   13868:	ldr	x3, [sp, #24]
   1386c:	ldr	x2, [sp, #32]
   13870:	ldr	w1, [sp, #3772]
   13874:	ldr	x0, [sp, #40]
   13878:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   1387c:	mov	w1, w0
   13880:	add	x0, sp, #0x3c
   13884:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13888:	and	w0, w0, #0xff
   1388c:	eor	w0, w0, #0x1
   13890:	and	w0, w0, #0xff
   13894:	cmp	w0, #0x0
   13898:	b.eq	138a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe934>  // b.none
   1389c:	mov	w0, #0x0                   	// #0
   138a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   138a4:	mov	w2, #0x1                   	// #1
   138a8:	mov	w1, #0x1e                  	// #30
   138ac:	ldr	w0, [sp, #52]
   138b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   138b4:	str	w0, [sp, #3772]
   138b8:	ldr	w0, [sp, #3772]
   138bc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   138c0:	add	x2, sp, #0x400
   138c4:	stp	x0, x1, [x2, #120]
   138c8:	add	x0, sp, #0x478
   138cc:	mov	x1, x0
   138d0:	ldr	x0, [sp, #40]
   138d4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   138d8:	mov	w2, #0x5                   	// #5
   138dc:	mov	w1, #0x5                   	// #5
   138e0:	ldr	w0, [sp, #52]
   138e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   138e8:	str	w0, [sp, #3772]
   138ec:	ldr	x3, [sp, #24]
   138f0:	ldr	x2, [sp, #32]
   138f4:	ldr	w1, [sp, #3772]
   138f8:	ldr	x0, [sp, #40]
   138fc:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   13900:	mov	w1, w0
   13904:	add	x0, sp, #0x3c
   13908:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1390c:	and	w0, w0, #0xff
   13910:	eor	w0, w0, #0x1
   13914:	and	w0, w0, #0xff
   13918:	cmp	w0, #0x0
   1391c:	b.eq	13928 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xe9b8>  // b.none
   13920:	mov	w0, #0x0                   	// #0
   13924:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13928:	ldr	w0, [sp, #60]
   1392c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13930:	mov	w2, #0x5                   	// #5
   13934:	mov	w1, #0x0                   	// #0
   13938:	ldr	w0, [sp, #52]
   1393c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13940:	str	w0, [sp, #3772]
   13944:	ldr	x3, [sp, #24]
   13948:	ldr	x2, [sp, #32]
   1394c:	ldr	w1, [sp, #3772]
   13950:	ldr	x0, [sp, #40]
   13954:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   13958:	mov	w1, w0
   1395c:	add	x0, sp, #0x3c
   13960:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13964:	and	w0, w0, #0xff
   13968:	eor	w0, w0, #0x1
   1396c:	and	w0, w0, #0xff
   13970:	cmp	w0, #0x0
   13974:	b.eq	13980 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xea10>  // b.none
   13978:	mov	w0, #0x0                   	// #0
   1397c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13980:	mov	w2, #0x5                   	// #5
   13984:	mov	w1, #0x0                   	// #0
   13988:	ldr	w0, [sp, #52]
   1398c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13990:	str	w0, [sp, #3772]
   13994:	ldr	x3, [sp, #24]
   13998:	ldr	x2, [sp, #32]
   1399c:	ldr	w1, [sp, #3772]
   139a0:	ldr	x0, [sp, #40]
   139a4:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   139a8:	mov	w1, w0
   139ac:	add	x0, sp, #0x3c
   139b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   139b4:	and	w0, w0, #0xff
   139b8:	eor	w0, w0, #0x1
   139bc:	and	w0, w0, #0xff
   139c0:	cmp	w0, #0x0
   139c4:	b.eq	139d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xea60>  // b.none
   139c8:	mov	w0, #0x0                   	// #0
   139cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   139d0:	str	wzr, [sp, #3772]
   139d4:	mov	w2, #0x3                   	// #3
   139d8:	mov	w1, #0xa                   	// #10
   139dc:	ldr	w0, [sp, #52]
   139e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   139e4:	mov	w1, w0
   139e8:	ldr	w0, [sp, #3772]
   139ec:	orr	w0, w0, w1
   139f0:	str	w0, [sp, #3772]
   139f4:	mov	w2, #0x1                   	// #1
   139f8:	mov	w1, #0x1e                  	// #30
   139fc:	ldr	w0, [sp, #52]
   13a00:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13a04:	lsl	w0, w0, #3
   13a08:	ldr	w1, [sp, #3772]
   13a0c:	orr	w0, w1, w0
   13a10:	str	w0, [sp, #3772]
   13a14:	ldr	w0, [sp, #3772]
   13a18:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13a1c:	add	x2, sp, #0x400
   13a20:	stp	x0, x1, [x2, #136]
   13a24:	add	x0, sp, #0x488
   13a28:	mov	x1, x0
   13a2c:	ldr	x0, [sp, #40]
   13a30:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13a34:	mov	w2, #0x5                   	// #5
   13a38:	mov	w1, #0x5                   	// #5
   13a3c:	ldr	w0, [sp, #52]
   13a40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13a44:	str	w0, [sp, #3772]
   13a48:	ldr	x3, [sp, #24]
   13a4c:	ldr	x2, [sp, #32]
   13a50:	ldr	w1, [sp, #3772]
   13a54:	ldr	x0, [sp, #40]
   13a58:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   13a5c:	mov	w1, w0
   13a60:	add	x0, sp, #0x3c
   13a64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13a68:	and	w0, w0, #0xff
   13a6c:	eor	w0, w0, #0x1
   13a70:	and	w0, w0, #0xff
   13a74:	cmp	w0, #0x0
   13a78:	b.eq	13a84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xeb14>  // b.none
   13a7c:	mov	w0, #0x0                   	// #0
   13a80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13a84:	ldr	w0, [sp, #60]
   13a88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13a8c:	mov	w2, #0x5                   	// #5
   13a90:	mov	w1, #0x0                   	// #0
   13a94:	ldr	w0, [sp, #52]
   13a98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13a9c:	str	w0, [sp, #3772]
   13aa0:	ldr	x3, [sp, #24]
   13aa4:	ldr	x2, [sp, #32]
   13aa8:	ldr	w1, [sp, #3772]
   13aac:	ldr	x0, [sp, #40]
   13ab0:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   13ab4:	mov	w1, w0
   13ab8:	add	x0, sp, #0x3c
   13abc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13ac0:	and	w0, w0, #0xff
   13ac4:	eor	w0, w0, #0x1
   13ac8:	and	w0, w0, #0xff
   13acc:	cmp	w0, #0x0
   13ad0:	b.eq	13adc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xeb6c>  // b.none
   13ad4:	mov	w0, #0x0                   	// #0
   13ad8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13adc:	mov	w2, #0x5                   	// #5
   13ae0:	mov	w1, #0x0                   	// #0
   13ae4:	ldr	w0, [sp, #52]
   13ae8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13aec:	str	w0, [sp, #3772]
   13af0:	ldr	x3, [sp, #24]
   13af4:	ldr	x2, [sp, #32]
   13af8:	ldr	w1, [sp, #3772]
   13afc:	ldr	x0, [sp, #40]
   13b00:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   13b04:	mov	w1, w0
   13b08:	add	x0, sp, #0x3c
   13b0c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13b10:	and	w0, w0, #0xff
   13b14:	eor	w0, w0, #0x1
   13b18:	and	w0, w0, #0xff
   13b1c:	cmp	w0, #0x0
   13b20:	b.eq	13b2c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xebbc>  // b.none
   13b24:	mov	w0, #0x0                   	// #0
   13b28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13b2c:	str	wzr, [sp, #3772]
   13b30:	mov	w2, #0x3                   	// #3
   13b34:	mov	w1, #0xa                   	// #10
   13b38:	ldr	w0, [sp, #52]
   13b3c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13b40:	mov	w1, w0
   13b44:	ldr	w0, [sp, #3772]
   13b48:	orr	w0, w0, w1
   13b4c:	str	w0, [sp, #3772]
   13b50:	mov	w2, #0x1                   	// #1
   13b54:	mov	w1, #0x1e                  	// #30
   13b58:	ldr	w0, [sp, #52]
   13b5c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13b60:	lsl	w0, w0, #3
   13b64:	ldr	w1, [sp, #3772]
   13b68:	orr	w0, w1, w0
   13b6c:	str	w0, [sp, #3772]
   13b70:	ldr	w0, [sp, #3772]
   13b74:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13b78:	add	x2, sp, #0x400
   13b7c:	stp	x0, x1, [x2, #152]
   13b80:	add	x0, sp, #0x498
   13b84:	mov	x1, x0
   13b88:	ldr	x0, [sp, #40]
   13b8c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13b90:	mov	w2, #0x5                   	// #5
   13b94:	mov	w1, #0x5                   	// #5
   13b98:	ldr	w0, [sp, #52]
   13b9c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13ba0:	str	w0, [sp, #3772]
   13ba4:	ldr	x3, [sp, #24]
   13ba8:	ldr	x2, [sp, #32]
   13bac:	ldr	w1, [sp, #3772]
   13bb0:	ldr	x0, [sp, #40]
   13bb4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   13bb8:	mov	w1, w0
   13bbc:	add	x0, sp, #0x3c
   13bc0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13bc4:	and	w0, w0, #0xff
   13bc8:	eor	w0, w0, #0x1
   13bcc:	and	w0, w0, #0xff
   13bd0:	cmp	w0, #0x0
   13bd4:	b.eq	13be0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xec70>  // b.none
   13bd8:	mov	w0, #0x0                   	// #0
   13bdc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13be0:	ldr	w0, [sp, #60]
   13be4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13be8:	mov	w2, #0x5                   	// #5
   13bec:	mov	w1, #0x0                   	// #0
   13bf0:	ldr	w0, [sp, #52]
   13bf4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13bf8:	str	w0, [sp, #3772]
   13bfc:	ldr	x3, [sp, #24]
   13c00:	ldr	x2, [sp, #32]
   13c04:	ldr	w1, [sp, #3772]
   13c08:	ldr	x0, [sp, #40]
   13c0c:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   13c10:	mov	w1, w0
   13c14:	add	x0, sp, #0x3c
   13c18:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13c1c:	and	w0, w0, #0xff
   13c20:	eor	w0, w0, #0x1
   13c24:	and	w0, w0, #0xff
   13c28:	cmp	w0, #0x0
   13c2c:	b.eq	13c38 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xecc8>  // b.none
   13c30:	mov	w0, #0x0                   	// #0
   13c34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13c38:	mov	w2, #0x5                   	// #5
   13c3c:	mov	w1, #0x0                   	// #0
   13c40:	ldr	w0, [sp, #52]
   13c44:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13c48:	str	w0, [sp, #3772]
   13c4c:	ldr	x3, [sp, #24]
   13c50:	ldr	x2, [sp, #32]
   13c54:	ldr	w1, [sp, #3772]
   13c58:	ldr	x0, [sp, #40]
   13c5c:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   13c60:	mov	w1, w0
   13c64:	add	x0, sp, #0x3c
   13c68:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13c6c:	and	w0, w0, #0xff
   13c70:	eor	w0, w0, #0x1
   13c74:	and	w0, w0, #0xff
   13c78:	cmp	w0, #0x0
   13c7c:	b.eq	13c88 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xed18>  // b.none
   13c80:	mov	w0, #0x0                   	// #0
   13c84:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13c88:	str	wzr, [sp, #3772]
   13c8c:	mov	w2, #0x2                   	// #2
   13c90:	mov	w1, #0xb                   	// #11
   13c94:	ldr	w0, [sp, #52]
   13c98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13c9c:	mov	w1, w0
   13ca0:	ldr	w0, [sp, #3772]
   13ca4:	orr	w0, w0, w1
   13ca8:	str	w0, [sp, #3772]
   13cac:	mov	w2, #0x1                   	// #1
   13cb0:	mov	w1, #0x1e                  	// #30
   13cb4:	ldr	w0, [sp, #52]
   13cb8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13cbc:	lsl	w0, w0, #2
   13cc0:	ldr	w1, [sp, #3772]
   13cc4:	orr	w0, w1, w0
   13cc8:	str	w0, [sp, #3772]
   13ccc:	ldr	w0, [sp, #3772]
   13cd0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13cd4:	add	x2, sp, #0x400
   13cd8:	stp	x0, x1, [x2, #168]
   13cdc:	add	x0, sp, #0x4a8
   13ce0:	mov	x1, x0
   13ce4:	ldr	x0, [sp, #40]
   13ce8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13cec:	mov	w2, #0x5                   	// #5
   13cf0:	mov	w1, #0x5                   	// #5
   13cf4:	ldr	w0, [sp, #52]
   13cf8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13cfc:	str	w0, [sp, #3772]
   13d00:	ldr	x3, [sp, #24]
   13d04:	ldr	x2, [sp, #32]
   13d08:	ldr	w1, [sp, #3772]
   13d0c:	ldr	x0, [sp, #40]
   13d10:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   13d14:	mov	w1, w0
   13d18:	add	x0, sp, #0x3c
   13d1c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13d20:	and	w0, w0, #0xff
   13d24:	eor	w0, w0, #0x1
   13d28:	and	w0, w0, #0xff
   13d2c:	cmp	w0, #0x0
   13d30:	b.eq	13d3c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xedcc>  // b.none
   13d34:	mov	w0, #0x0                   	// #0
   13d38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13d3c:	ldr	w0, [sp, #60]
   13d40:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13d44:	mov	w2, #0x5                   	// #5
   13d48:	mov	w1, #0x0                   	// #0
   13d4c:	ldr	w0, [sp, #52]
   13d50:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13d54:	str	w0, [sp, #3772]
   13d58:	ldr	x3, [sp, #24]
   13d5c:	ldr	x2, [sp, #32]
   13d60:	ldr	w1, [sp, #3772]
   13d64:	ldr	x0, [sp, #40]
   13d68:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   13d6c:	mov	w1, w0
   13d70:	add	x0, sp, #0x3c
   13d74:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13d78:	and	w0, w0, #0xff
   13d7c:	eor	w0, w0, #0x1
   13d80:	and	w0, w0, #0xff
   13d84:	cmp	w0, #0x0
   13d88:	b.eq	13d94 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xee24>  // b.none
   13d8c:	mov	w0, #0x0                   	// #0
   13d90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13d94:	mov	w2, #0x5                   	// #5
   13d98:	mov	w1, #0x0                   	// #0
   13d9c:	ldr	w0, [sp, #52]
   13da0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13da4:	str	w0, [sp, #3772]
   13da8:	ldr	x3, [sp, #24]
   13dac:	ldr	x2, [sp, #32]
   13db0:	ldr	w1, [sp, #3772]
   13db4:	ldr	x0, [sp, #40]
   13db8:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   13dbc:	mov	w1, w0
   13dc0:	add	x0, sp, #0x3c
   13dc4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13dc8:	and	w0, w0, #0xff
   13dcc:	eor	w0, w0, #0x1
   13dd0:	and	w0, w0, #0xff
   13dd4:	cmp	w0, #0x0
   13dd8:	b.eq	13de4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xee74>  // b.none
   13ddc:	mov	w0, #0x0                   	// #0
   13de0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13de4:	str	wzr, [sp, #3772]
   13de8:	mov	w2, #0x2                   	// #2
   13dec:	mov	w1, #0xb                   	// #11
   13df0:	ldr	w0, [sp, #52]
   13df4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13df8:	mov	w1, w0
   13dfc:	ldr	w0, [sp, #3772]
   13e00:	orr	w0, w0, w1
   13e04:	str	w0, [sp, #3772]
   13e08:	mov	w2, #0x1                   	// #1
   13e0c:	mov	w1, #0x1e                  	// #30
   13e10:	ldr	w0, [sp, #52]
   13e14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13e18:	lsl	w0, w0, #2
   13e1c:	ldr	w1, [sp, #3772]
   13e20:	orr	w0, w1, w0
   13e24:	str	w0, [sp, #3772]
   13e28:	ldr	w0, [sp, #3772]
   13e2c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13e30:	add	x2, sp, #0x400
   13e34:	stp	x0, x1, [x2, #184]
   13e38:	add	x0, sp, #0x4b8
   13e3c:	mov	x1, x0
   13e40:	ldr	x0, [sp, #40]
   13e44:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13e48:	mov	w2, #0x5                   	// #5
   13e4c:	mov	w1, #0x5                   	// #5
   13e50:	ldr	w0, [sp, #52]
   13e54:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13e58:	str	w0, [sp, #3772]
   13e5c:	ldr	x3, [sp, #24]
   13e60:	ldr	x2, [sp, #32]
   13e64:	ldr	w1, [sp, #3772]
   13e68:	ldr	x0, [sp, #40]
   13e6c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   13e70:	mov	w1, w0
   13e74:	add	x0, sp, #0x3c
   13e78:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13e7c:	and	w0, w0, #0xff
   13e80:	eor	w0, w0, #0x1
   13e84:	and	w0, w0, #0xff
   13e88:	cmp	w0, #0x0
   13e8c:	b.eq	13e98 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xef28>  // b.none
   13e90:	mov	w0, #0x0                   	// #0
   13e94:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13e98:	ldr	w0, [sp, #60]
   13e9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13ea0:	mov	w2, #0x5                   	// #5
   13ea4:	mov	w1, #0x0                   	// #0
   13ea8:	ldr	w0, [sp, #52]
   13eac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13eb0:	str	w0, [sp, #3772]
   13eb4:	ldr	x3, [sp, #24]
   13eb8:	ldr	x2, [sp, #32]
   13ebc:	ldr	w1, [sp, #3772]
   13ec0:	ldr	x0, [sp, #40]
   13ec4:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   13ec8:	mov	w1, w0
   13ecc:	add	x0, sp, #0x3c
   13ed0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13ed4:	and	w0, w0, #0xff
   13ed8:	eor	w0, w0, #0x1
   13edc:	and	w0, w0, #0xff
   13ee0:	cmp	w0, #0x0
   13ee4:	b.eq	13ef0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xef80>  // b.none
   13ee8:	mov	w0, #0x0                   	// #0
   13eec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13ef0:	mov	w2, #0x5                   	// #5
   13ef4:	mov	w1, #0x0                   	// #0
   13ef8:	ldr	w0, [sp, #52]
   13efc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13f00:	str	w0, [sp, #3772]
   13f04:	ldr	x3, [sp, #24]
   13f08:	ldr	x2, [sp, #32]
   13f0c:	ldr	w1, [sp, #3772]
   13f10:	ldr	x0, [sp, #40]
   13f14:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   13f18:	mov	w1, w0
   13f1c:	add	x0, sp, #0x3c
   13f20:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13f24:	and	w0, w0, #0xff
   13f28:	eor	w0, w0, #0x1
   13f2c:	and	w0, w0, #0xff
   13f30:	cmp	w0, #0x0
   13f34:	b.eq	13f40 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xefd0>  // b.none
   13f38:	mov	w0, #0x0                   	// #0
   13f3c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13f40:	str	wzr, [sp, #3772]
   13f44:	mov	w2, #0x1                   	// #1
   13f48:	mov	w1, #0xc                   	// #12
   13f4c:	ldr	w0, [sp, #52]
   13f50:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13f54:	mov	w1, w0
   13f58:	ldr	w0, [sp, #3772]
   13f5c:	orr	w0, w0, w1
   13f60:	str	w0, [sp, #3772]
   13f64:	mov	w2, #0x1                   	// #1
   13f68:	mov	w1, #0x1e                  	// #30
   13f6c:	ldr	w0, [sp, #52]
   13f70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13f74:	lsl	w0, w0, #1
   13f78:	ldr	w1, [sp, #3772]
   13f7c:	orr	w0, w1, w0
   13f80:	str	w0, [sp, #3772]
   13f84:	ldr	w0, [sp, #3772]
   13f88:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13f8c:	add	x2, sp, #0x400
   13f90:	stp	x0, x1, [x2, #200]
   13f94:	add	x0, sp, #0x4c8
   13f98:	mov	x1, x0
   13f9c:	ldr	x0, [sp, #40]
   13fa0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   13fa4:	mov	w2, #0x5                   	// #5
   13fa8:	mov	w1, #0x5                   	// #5
   13fac:	ldr	w0, [sp, #52]
   13fb0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   13fb4:	str	w0, [sp, #3772]
   13fb8:	ldr	x3, [sp, #24]
   13fbc:	ldr	x2, [sp, #32]
   13fc0:	ldr	w1, [sp, #3772]
   13fc4:	ldr	x0, [sp, #40]
   13fc8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   13fcc:	mov	w1, w0
   13fd0:	add	x0, sp, #0x3c
   13fd4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   13fd8:	and	w0, w0, #0xff
   13fdc:	eor	w0, w0, #0x1
   13fe0:	and	w0, w0, #0xff
   13fe4:	cmp	w0, #0x0
   13fe8:	b.eq	13ff4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf084>  // b.none
   13fec:	mov	w0, #0x0                   	// #0
   13ff0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13ff4:	ldr	w0, [sp, #60]
   13ff8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   13ffc:	mov	w2, #0x5                   	// #5
   14000:	mov	w1, #0x0                   	// #0
   14004:	ldr	w0, [sp, #52]
   14008:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1400c:	str	w0, [sp, #3772]
   14010:	ldr	x3, [sp, #24]
   14014:	ldr	x2, [sp, #32]
   14018:	ldr	w1, [sp, #3772]
   1401c:	ldr	x0, [sp, #40]
   14020:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   14024:	mov	w1, w0
   14028:	add	x0, sp, #0x3c
   1402c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14030:	and	w0, w0, #0xff
   14034:	eor	w0, w0, #0x1
   14038:	and	w0, w0, #0xff
   1403c:	cmp	w0, #0x0
   14040:	b.eq	1404c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf0dc>  // b.none
   14044:	mov	w0, #0x0                   	// #0
   14048:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1404c:	mov	w2, #0x5                   	// #5
   14050:	mov	w1, #0x0                   	// #0
   14054:	ldr	w0, [sp, #52]
   14058:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1405c:	str	w0, [sp, #3772]
   14060:	ldr	x3, [sp, #24]
   14064:	ldr	x2, [sp, #32]
   14068:	ldr	w1, [sp, #3772]
   1406c:	ldr	x0, [sp, #40]
   14070:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   14074:	mov	w1, w0
   14078:	add	x0, sp, #0x3c
   1407c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14080:	and	w0, w0, #0xff
   14084:	eor	w0, w0, #0x1
   14088:	and	w0, w0, #0xff
   1408c:	cmp	w0, #0x0
   14090:	b.eq	1409c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf12c>  // b.none
   14094:	mov	w0, #0x0                   	// #0
   14098:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1409c:	mov	w2, #0x1                   	// #1
   140a0:	mov	w1, #0x1e                  	// #30
   140a4:	ldr	w0, [sp, #52]
   140a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   140ac:	str	w0, [sp, #3772]
   140b0:	ldr	w0, [sp, #3772]
   140b4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   140b8:	add	x2, sp, #0x400
   140bc:	stp	x0, x1, [x2, #216]
   140c0:	add	x0, sp, #0x4d8
   140c4:	mov	x1, x0
   140c8:	ldr	x0, [sp, #40]
   140cc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   140d0:	mov	w2, #0x5                   	// #5
   140d4:	mov	w1, #0x5                   	// #5
   140d8:	ldr	w0, [sp, #52]
   140dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   140e0:	str	w0, [sp, #3772]
   140e4:	ldr	x3, [sp, #24]
   140e8:	ldr	x2, [sp, #32]
   140ec:	ldr	w1, [sp, #3772]
   140f0:	ldr	x0, [sp, #40]
   140f4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   140f8:	mov	w1, w0
   140fc:	add	x0, sp, #0x3c
   14100:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14104:	and	w0, w0, #0xff
   14108:	eor	w0, w0, #0x1
   1410c:	and	w0, w0, #0xff
   14110:	cmp	w0, #0x0
   14114:	b.eq	14120 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf1b0>  // b.none
   14118:	mov	w0, #0x0                   	// #0
   1411c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14120:	ldr	w0, [sp, #60]
   14124:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14128:	mov	w2, #0x5                   	// #5
   1412c:	mov	w1, #0x0                   	// #0
   14130:	ldr	w0, [sp, #52]
   14134:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14138:	str	w0, [sp, #3772]
   1413c:	ldr	x3, [sp, #24]
   14140:	ldr	x2, [sp, #32]
   14144:	ldr	w1, [sp, #3772]
   14148:	ldr	x0, [sp, #40]
   1414c:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   14150:	mov	w1, w0
   14154:	add	x0, sp, #0x3c
   14158:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1415c:	and	w0, w0, #0xff
   14160:	eor	w0, w0, #0x1
   14164:	and	w0, w0, #0xff
   14168:	cmp	w0, #0x0
   1416c:	b.eq	14178 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf208>  // b.none
   14170:	mov	w0, #0x0                   	// #0
   14174:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14178:	mov	w2, #0x5                   	// #5
   1417c:	mov	w1, #0x0                   	// #0
   14180:	ldr	w0, [sp, #52]
   14184:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14188:	str	w0, [sp, #3772]
   1418c:	ldr	x3, [sp, #24]
   14190:	ldr	x2, [sp, #32]
   14194:	ldr	w1, [sp, #3772]
   14198:	ldr	x0, [sp, #40]
   1419c:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   141a0:	mov	w1, w0
   141a4:	add	x0, sp, #0x3c
   141a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   141ac:	and	w0, w0, #0xff
   141b0:	eor	w0, w0, #0x1
   141b4:	and	w0, w0, #0xff
   141b8:	cmp	w0, #0x0
   141bc:	b.eq	141c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf258>  // b.none
   141c0:	mov	w0, #0x0                   	// #0
   141c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   141c8:	str	wzr, [sp, #3772]
   141cc:	mov	w2, #0x1                   	// #1
   141d0:	mov	w1, #0xc                   	// #12
   141d4:	ldr	w0, [sp, #52]
   141d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   141dc:	mov	w1, w0
   141e0:	ldr	w0, [sp, #3772]
   141e4:	orr	w0, w0, w1
   141e8:	str	w0, [sp, #3772]
   141ec:	mov	w2, #0x1                   	// #1
   141f0:	mov	w1, #0x1e                  	// #30
   141f4:	ldr	w0, [sp, #52]
   141f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   141fc:	lsl	w0, w0, #1
   14200:	ldr	w1, [sp, #3772]
   14204:	orr	w0, w1, w0
   14208:	str	w0, [sp, #3772]
   1420c:	ldr	w0, [sp, #3772]
   14210:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   14214:	add	x2, sp, #0x400
   14218:	stp	x0, x1, [x2, #232]
   1421c:	add	x0, sp, #0x4e8
   14220:	mov	x1, x0
   14224:	ldr	x0, [sp, #40]
   14228:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1422c:	mov	w2, #0x5                   	// #5
   14230:	mov	w1, #0x5                   	// #5
   14234:	ldr	w0, [sp, #52]
   14238:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1423c:	str	w0, [sp, #3772]
   14240:	ldr	x3, [sp, #24]
   14244:	ldr	x2, [sp, #32]
   14248:	ldr	w1, [sp, #3772]
   1424c:	ldr	x0, [sp, #40]
   14250:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   14254:	mov	w1, w0
   14258:	add	x0, sp, #0x3c
   1425c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14260:	and	w0, w0, #0xff
   14264:	eor	w0, w0, #0x1
   14268:	and	w0, w0, #0xff
   1426c:	cmp	w0, #0x0
   14270:	b.eq	1427c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf30c>  // b.none
   14274:	mov	w0, #0x0                   	// #0
   14278:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1427c:	ldr	w0, [sp, #60]
   14280:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14284:	mov	w2, #0x5                   	// #5
   14288:	mov	w1, #0x0                   	// #0
   1428c:	ldr	w0, [sp, #52]
   14290:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14294:	str	w0, [sp, #3772]
   14298:	ldr	x3, [sp, #24]
   1429c:	ldr	x2, [sp, #32]
   142a0:	ldr	w1, [sp, #3772]
   142a4:	ldr	x0, [sp, #40]
   142a8:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   142ac:	mov	w1, w0
   142b0:	add	x0, sp, #0x3c
   142b4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   142b8:	and	w0, w0, #0xff
   142bc:	eor	w0, w0, #0x1
   142c0:	and	w0, w0, #0xff
   142c4:	cmp	w0, #0x0
   142c8:	b.eq	142d4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf364>  // b.none
   142cc:	mov	w0, #0x0                   	// #0
   142d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   142d4:	mov	w2, #0x5                   	// #5
   142d8:	mov	w1, #0x0                   	// #0
   142dc:	ldr	w0, [sp, #52]
   142e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   142e4:	str	w0, [sp, #3772]
   142e8:	ldr	x3, [sp, #24]
   142ec:	ldr	x2, [sp, #32]
   142f0:	ldr	w1, [sp, #3772]
   142f4:	ldr	x0, [sp, #40]
   142f8:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   142fc:	mov	w1, w0
   14300:	add	x0, sp, #0x3c
   14304:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14308:	and	w0, w0, #0xff
   1430c:	eor	w0, w0, #0x1
   14310:	and	w0, w0, #0xff
   14314:	cmp	w0, #0x0
   14318:	b.eq	14324 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf3b4>  // b.none
   1431c:	mov	w0, #0x0                   	// #0
   14320:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14324:	mov	w2, #0x1                   	// #1
   14328:	mov	w1, #0x1e                  	// #30
   1432c:	ldr	w0, [sp, #52]
   14330:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14334:	str	w0, [sp, #3772]
   14338:	ldr	w0, [sp, #3772]
   1433c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   14340:	add	x2, sp, #0x400
   14344:	stp	x0, x1, [x2, #248]
   14348:	add	x0, sp, #0x4f8
   1434c:	mov	x1, x0
   14350:	ldr	x0, [sp, #40]
   14354:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   14358:	mov	w2, #0x5                   	// #5
   1435c:	mov	w1, #0x5                   	// #5
   14360:	ldr	w0, [sp, #52]
   14364:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14368:	str	w0, [sp, #3772]
   1436c:	ldr	x3, [sp, #24]
   14370:	ldr	x2, [sp, #32]
   14374:	ldr	w1, [sp, #3772]
   14378:	ldr	x0, [sp, #40]
   1437c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   14380:	mov	w1, w0
   14384:	add	x0, sp, #0x3c
   14388:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1438c:	and	w0, w0, #0xff
   14390:	eor	w0, w0, #0x1
   14394:	and	w0, w0, #0xff
   14398:	cmp	w0, #0x0
   1439c:	b.eq	143a8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf438>  // b.none
   143a0:	mov	w0, #0x0                   	// #0
   143a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   143a8:	ldr	w0, [sp, #60]
   143ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   143b0:	mov	w2, #0x5                   	// #5
   143b4:	mov	w1, #0x5                   	// #5
   143b8:	ldr	w0, [sp, #52]
   143bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   143c0:	str	w0, [sp, #3772]
   143c4:	ldr	x3, [sp, #24]
   143c8:	ldr	x2, [sp, #32]
   143cc:	ldr	w1, [sp, #3772]
   143d0:	ldr	x0, [sp, #40]
   143d4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   143d8:	mov	w1, w0
   143dc:	add	x0, sp, #0x3c
   143e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   143e4:	and	w0, w0, #0xff
   143e8:	eor	w0, w0, #0x1
   143ec:	and	w0, w0, #0xff
   143f0:	cmp	w0, #0x0
   143f4:	b.eq	14400 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf490>  // b.none
   143f8:	mov	w0, #0x0                   	// #0
   143fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14400:	mov	w2, #0x5                   	// #5
   14404:	mov	w1, #0x0                   	// #0
   14408:	ldr	w0, [sp, #52]
   1440c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14410:	str	w0, [sp, #3772]
   14414:	ldr	x3, [sp, #24]
   14418:	ldr	x2, [sp, #32]
   1441c:	ldr	w1, [sp, #3772]
   14420:	ldr	x0, [sp, #40]
   14424:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   14428:	mov	w1, w0
   1442c:	add	x0, sp, #0x3c
   14430:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14434:	and	w0, w0, #0xff
   14438:	eor	w0, w0, #0x1
   1443c:	and	w0, w0, #0xff
   14440:	cmp	w0, #0x0
   14444:	b.eq	14450 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf4e0>  // b.none
   14448:	mov	w0, #0x0                   	// #0
   1444c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14450:	str	wzr, [sp, #3772]
   14454:	mov	w2, #0x3                   	// #3
   14458:	mov	w1, #0xa                   	// #10
   1445c:	ldr	w0, [sp, #52]
   14460:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14464:	mov	w1, w0
   14468:	ldr	w0, [sp, #3772]
   1446c:	orr	w0, w0, w1
   14470:	str	w0, [sp, #3772]
   14474:	mov	w2, #0x1                   	// #1
   14478:	mov	w1, #0x1e                  	// #30
   1447c:	ldr	w0, [sp, #52]
   14480:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14484:	lsl	w0, w0, #3
   14488:	ldr	w1, [sp, #3772]
   1448c:	orr	w0, w1, w0
   14490:	str	w0, [sp, #3772]
   14494:	ldr	w0, [sp, #3772]
   14498:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1449c:	add	x2, sp, #0x600
   144a0:	stp	x0, x1, [x2, #-248]
   144a4:	add	x0, sp, #0x508
   144a8:	mov	x1, x0
   144ac:	ldr	x0, [sp, #40]
   144b0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   144b4:	mov	w2, #0x5                   	// #5
   144b8:	mov	w1, #0x5                   	// #5
   144bc:	ldr	w0, [sp, #52]
   144c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   144c4:	str	w0, [sp, #3772]
   144c8:	ldr	x3, [sp, #24]
   144cc:	ldr	x2, [sp, #32]
   144d0:	ldr	w1, [sp, #3772]
   144d4:	ldr	x0, [sp, #40]
   144d8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   144dc:	mov	w1, w0
   144e0:	add	x0, sp, #0x3c
   144e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   144e8:	and	w0, w0, #0xff
   144ec:	eor	w0, w0, #0x1
   144f0:	and	w0, w0, #0xff
   144f4:	cmp	w0, #0x0
   144f8:	b.eq	14504 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf594>  // b.none
   144fc:	mov	w0, #0x0                   	// #0
   14500:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14504:	mov	w2, #0x5                   	// #5
   14508:	mov	w1, #0x10                  	// #16
   1450c:	ldr	w0, [sp, #52]
   14510:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14514:	str	w0, [sp, #3772]
   14518:	ldr	x3, [sp, #24]
   1451c:	ldr	x2, [sp, #32]
   14520:	ldr	w1, [sp, #3772]
   14524:	ldr	x0, [sp, #40]
   14528:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1452c:	mov	w1, w0
   14530:	add	x0, sp, #0x3c
   14534:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14538:	and	w0, w0, #0xff
   1453c:	eor	w0, w0, #0x1
   14540:	and	w0, w0, #0xff
   14544:	cmp	w0, #0x0
   14548:	b.eq	14554 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf5e4>  // b.none
   1454c:	mov	w0, #0x0                   	// #0
   14550:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14554:	ldr	w0, [sp, #60]
   14558:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1455c:	mov	w2, #0x5                   	// #5
   14560:	mov	w1, #0x5                   	// #5
   14564:	ldr	w0, [sp, #52]
   14568:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1456c:	str	w0, [sp, #3772]
   14570:	ldr	x3, [sp, #24]
   14574:	ldr	x2, [sp, #32]
   14578:	ldr	w1, [sp, #3772]
   1457c:	ldr	x0, [sp, #40]
   14580:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   14584:	mov	w1, w0
   14588:	add	x0, sp, #0x3c
   1458c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14590:	and	w0, w0, #0xff
   14594:	eor	w0, w0, #0x1
   14598:	and	w0, w0, #0xff
   1459c:	cmp	w0, #0x0
   145a0:	b.eq	145ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf63c>  // b.none
   145a4:	mov	w0, #0x0                   	// #0
   145a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   145ac:	mov	w2, #0x5                   	// #5
   145b0:	mov	w1, #0x0                   	// #0
   145b4:	ldr	w0, [sp, #52]
   145b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   145bc:	str	w0, [sp, #3772]
   145c0:	ldr	x3, [sp, #24]
   145c4:	ldr	x2, [sp, #32]
   145c8:	ldr	w1, [sp, #3772]
   145cc:	ldr	x0, [sp, #40]
   145d0:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   145d4:	mov	w1, w0
   145d8:	add	x0, sp, #0x3c
   145dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   145e0:	and	w0, w0, #0xff
   145e4:	eor	w0, w0, #0x1
   145e8:	and	w0, w0, #0xff
   145ec:	cmp	w0, #0x0
   145f0:	b.eq	145fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf68c>  // b.none
   145f4:	mov	w0, #0x0                   	// #0
   145f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   145fc:	str	wzr, [sp, #3772]
   14600:	mov	w2, #0x3                   	// #3
   14604:	mov	w1, #0xa                   	// #10
   14608:	ldr	w0, [sp, #52]
   1460c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14610:	mov	w1, w0
   14614:	ldr	w0, [sp, #3772]
   14618:	orr	w0, w0, w1
   1461c:	str	w0, [sp, #3772]
   14620:	mov	w2, #0x1                   	// #1
   14624:	mov	w1, #0x1e                  	// #30
   14628:	ldr	w0, [sp, #52]
   1462c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14630:	lsl	w0, w0, #3
   14634:	ldr	w1, [sp, #3772]
   14638:	orr	w0, w1, w0
   1463c:	str	w0, [sp, #3772]
   14640:	ldr	w0, [sp, #3772]
   14644:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   14648:	add	x2, sp, #0x600
   1464c:	stp	x0, x1, [x2, #-232]
   14650:	add	x0, sp, #0x518
   14654:	mov	x1, x0
   14658:	ldr	x0, [sp, #40]
   1465c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   14660:	mov	w2, #0x5                   	// #5
   14664:	mov	w1, #0x5                   	// #5
   14668:	ldr	w0, [sp, #52]
   1466c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14670:	str	w0, [sp, #3772]
   14674:	ldr	x3, [sp, #24]
   14678:	ldr	x2, [sp, #32]
   1467c:	ldr	w1, [sp, #3772]
   14680:	ldr	x0, [sp, #40]
   14684:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   14688:	mov	w1, w0
   1468c:	add	x0, sp, #0x3c
   14690:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14694:	and	w0, w0, #0xff
   14698:	eor	w0, w0, #0x1
   1469c:	and	w0, w0, #0xff
   146a0:	cmp	w0, #0x0
   146a4:	b.eq	146b0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf740>  // b.none
   146a8:	mov	w0, #0x0                   	// #0
   146ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   146b0:	mov	w2, #0x5                   	// #5
   146b4:	mov	w1, #0x10                  	// #16
   146b8:	ldr	w0, [sp, #52]
   146bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   146c0:	str	w0, [sp, #3772]
   146c4:	ldr	x3, [sp, #24]
   146c8:	ldr	x2, [sp, #32]
   146cc:	ldr	w1, [sp, #3772]
   146d0:	ldr	x0, [sp, #40]
   146d4:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   146d8:	mov	w1, w0
   146dc:	add	x0, sp, #0x3c
   146e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   146e4:	and	w0, w0, #0xff
   146e8:	eor	w0, w0, #0x1
   146ec:	and	w0, w0, #0xff
   146f0:	cmp	w0, #0x0
   146f4:	b.eq	14700 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf790>  // b.none
   146f8:	mov	w0, #0x0                   	// #0
   146fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14700:	ldr	w0, [sp, #60]
   14704:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14708:	mov	w2, #0x5                   	// #5
   1470c:	mov	w1, #0x5                   	// #5
   14710:	ldr	w0, [sp, #52]
   14714:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14718:	str	w0, [sp, #3772]
   1471c:	ldr	x3, [sp, #24]
   14720:	ldr	x2, [sp, #32]
   14724:	ldr	w1, [sp, #3772]
   14728:	ldr	x0, [sp, #40]
   1472c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   14730:	mov	w1, w0
   14734:	add	x0, sp, #0x3c
   14738:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1473c:	and	w0, w0, #0xff
   14740:	eor	w0, w0, #0x1
   14744:	and	w0, w0, #0xff
   14748:	cmp	w0, #0x0
   1474c:	b.eq	14758 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf7e8>  // b.none
   14750:	mov	w0, #0x0                   	// #0
   14754:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14758:	mov	w2, #0x5                   	// #5
   1475c:	mov	w1, #0x0                   	// #0
   14760:	ldr	w0, [sp, #52]
   14764:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14768:	str	w0, [sp, #3772]
   1476c:	ldr	x3, [sp, #24]
   14770:	ldr	x2, [sp, #32]
   14774:	ldr	w1, [sp, #3772]
   14778:	ldr	x0, [sp, #40]
   1477c:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   14780:	mov	w1, w0
   14784:	add	x0, sp, #0x3c
   14788:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1478c:	and	w0, w0, #0xff
   14790:	eor	w0, w0, #0x1
   14794:	and	w0, w0, #0xff
   14798:	cmp	w0, #0x0
   1479c:	b.eq	147a8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf838>  // b.none
   147a0:	mov	w0, #0x0                   	// #0
   147a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   147a8:	str	wzr, [sp, #3772]
   147ac:	mov	w2, #0x3                   	// #3
   147b0:	mov	w1, #0xa                   	// #10
   147b4:	ldr	w0, [sp, #52]
   147b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   147bc:	mov	w1, w0
   147c0:	ldr	w0, [sp, #3772]
   147c4:	orr	w0, w0, w1
   147c8:	str	w0, [sp, #3772]
   147cc:	mov	w2, #0x1                   	// #1
   147d0:	mov	w1, #0x1e                  	// #30
   147d4:	ldr	w0, [sp, #52]
   147d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   147dc:	lsl	w0, w0, #3
   147e0:	ldr	w1, [sp, #3772]
   147e4:	orr	w0, w1, w0
   147e8:	str	w0, [sp, #3772]
   147ec:	ldr	w0, [sp, #3772]
   147f0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   147f4:	add	x2, sp, #0x600
   147f8:	stp	x0, x1, [x2, #-216]
   147fc:	add	x0, sp, #0x528
   14800:	mov	x1, x0
   14804:	ldr	x0, [sp, #40]
   14808:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1480c:	mov	w2, #0x5                   	// #5
   14810:	mov	w1, #0x5                   	// #5
   14814:	ldr	w0, [sp, #52]
   14818:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1481c:	str	w0, [sp, #3772]
   14820:	ldr	x3, [sp, #24]
   14824:	ldr	x2, [sp, #32]
   14828:	ldr	w1, [sp, #3772]
   1482c:	ldr	x0, [sp, #40]
   14830:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   14834:	mov	w1, w0
   14838:	add	x0, sp, #0x3c
   1483c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14840:	and	w0, w0, #0xff
   14844:	eor	w0, w0, #0x1
   14848:	and	w0, w0, #0xff
   1484c:	cmp	w0, #0x0
   14850:	b.eq	1485c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf8ec>  // b.none
   14854:	mov	w0, #0x0                   	// #0
   14858:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1485c:	mov	w2, #0x5                   	// #5
   14860:	mov	w1, #0x10                  	// #16
   14864:	ldr	w0, [sp, #52]
   14868:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1486c:	str	w0, [sp, #3772]
   14870:	ldr	x3, [sp, #24]
   14874:	ldr	x2, [sp, #32]
   14878:	ldr	w1, [sp, #3772]
   1487c:	ldr	x0, [sp, #40]
   14880:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   14884:	mov	w1, w0
   14888:	add	x0, sp, #0x3c
   1488c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14890:	and	w0, w0, #0xff
   14894:	eor	w0, w0, #0x1
   14898:	and	w0, w0, #0xff
   1489c:	cmp	w0, #0x0
   148a0:	b.eq	148ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf93c>  // b.none
   148a4:	mov	w0, #0x0                   	// #0
   148a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   148ac:	ldr	w0, [sp, #60]
   148b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   148b4:	mov	w2, #0x5                   	// #5
   148b8:	mov	w1, #0x5                   	// #5
   148bc:	ldr	w0, [sp, #52]
   148c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   148c4:	str	w0, [sp, #3772]
   148c8:	ldr	x3, [sp, #24]
   148cc:	ldr	x2, [sp, #32]
   148d0:	ldr	w1, [sp, #3772]
   148d4:	ldr	x0, [sp, #40]
   148d8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   148dc:	mov	w1, w0
   148e0:	add	x0, sp, #0x3c
   148e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   148e8:	and	w0, w0, #0xff
   148ec:	eor	w0, w0, #0x1
   148f0:	and	w0, w0, #0xff
   148f4:	cmp	w0, #0x0
   148f8:	b.eq	14904 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf994>  // b.none
   148fc:	mov	w0, #0x0                   	// #0
   14900:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14904:	mov	w2, #0x5                   	// #5
   14908:	mov	w1, #0x0                   	// #0
   1490c:	ldr	w0, [sp, #52]
   14910:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14914:	str	w0, [sp, #3772]
   14918:	ldr	x3, [sp, #24]
   1491c:	ldr	x2, [sp, #32]
   14920:	ldr	w1, [sp, #3772]
   14924:	ldr	x0, [sp, #40]
   14928:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   1492c:	mov	w1, w0
   14930:	add	x0, sp, #0x3c
   14934:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14938:	and	w0, w0, #0xff
   1493c:	eor	w0, w0, #0x1
   14940:	and	w0, w0, #0xff
   14944:	cmp	w0, #0x0
   14948:	b.eq	14954 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xf9e4>  // b.none
   1494c:	mov	w0, #0x0                   	// #0
   14950:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14954:	str	wzr, [sp, #3772]
   14958:	mov	w2, #0x3                   	// #3
   1495c:	mov	w1, #0xa                   	// #10
   14960:	ldr	w0, [sp, #52]
   14964:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14968:	mov	w1, w0
   1496c:	ldr	w0, [sp, #3772]
   14970:	orr	w0, w0, w1
   14974:	str	w0, [sp, #3772]
   14978:	mov	w2, #0x1                   	// #1
   1497c:	mov	w1, #0x1e                  	// #30
   14980:	ldr	w0, [sp, #52]
   14984:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14988:	lsl	w0, w0, #3
   1498c:	ldr	w1, [sp, #3772]
   14990:	orr	w0, w1, w0
   14994:	str	w0, [sp, #3772]
   14998:	ldr	w0, [sp, #3772]
   1499c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   149a0:	add	x2, sp, #0x600
   149a4:	stp	x0, x1, [x2, #-200]
   149a8:	add	x0, sp, #0x538
   149ac:	mov	x1, x0
   149b0:	ldr	x0, [sp, #40]
   149b4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   149b8:	mov	w2, #0x5                   	// #5
   149bc:	mov	w1, #0x5                   	// #5
   149c0:	ldr	w0, [sp, #52]
   149c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   149c8:	str	w0, [sp, #3772]
   149cc:	ldr	x3, [sp, #24]
   149d0:	ldr	x2, [sp, #32]
   149d4:	ldr	w1, [sp, #3772]
   149d8:	ldr	x0, [sp, #40]
   149dc:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   149e0:	mov	w1, w0
   149e4:	add	x0, sp, #0x3c
   149e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   149ec:	and	w0, w0, #0xff
   149f0:	eor	w0, w0, #0x1
   149f4:	and	w0, w0, #0xff
   149f8:	cmp	w0, #0x0
   149fc:	b.eq	14a08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xfa98>  // b.none
   14a00:	mov	w0, #0x0                   	// #0
   14a04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14a08:	mov	w2, #0x5                   	// #5
   14a0c:	mov	w1, #0x10                  	// #16
   14a10:	ldr	w0, [sp, #52]
   14a14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14a18:	str	w0, [sp, #3772]
   14a1c:	ldr	x3, [sp, #24]
   14a20:	ldr	x2, [sp, #32]
   14a24:	ldr	w1, [sp, #3772]
   14a28:	ldr	x0, [sp, #40]
   14a2c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   14a30:	mov	w1, w0
   14a34:	add	x0, sp, #0x3c
   14a38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14a3c:	and	w0, w0, #0xff
   14a40:	eor	w0, w0, #0x1
   14a44:	and	w0, w0, #0xff
   14a48:	cmp	w0, #0x0
   14a4c:	b.eq	14a58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xfae8>  // b.none
   14a50:	mov	w0, #0x0                   	// #0
   14a54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14a58:	ldr	w0, [sp, #60]
   14a5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14a60:	mov	w2, #0x5                   	// #5
   14a64:	mov	w1, #0x5                   	// #5
   14a68:	ldr	w0, [sp, #52]
   14a6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14a70:	str	w0, [sp, #3772]
   14a74:	ldr	x3, [sp, #24]
   14a78:	ldr	x2, [sp, #32]
   14a7c:	ldr	w1, [sp, #3772]
   14a80:	ldr	x0, [sp, #40]
   14a84:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   14a88:	mov	w1, w0
   14a8c:	add	x0, sp, #0x3c
   14a90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14a94:	and	w0, w0, #0xff
   14a98:	eor	w0, w0, #0x1
   14a9c:	and	w0, w0, #0xff
   14aa0:	cmp	w0, #0x0
   14aa4:	b.eq	14ab0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xfb40>  // b.none
   14aa8:	mov	w0, #0x0                   	// #0
   14aac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14ab0:	mov	w2, #0x5                   	// #5
   14ab4:	mov	w1, #0x0                   	// #0
   14ab8:	ldr	w0, [sp, #52]
   14abc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14ac0:	str	w0, [sp, #3772]
   14ac4:	ldr	x3, [sp, #24]
   14ac8:	ldr	x2, [sp, #32]
   14acc:	ldr	w1, [sp, #3772]
   14ad0:	ldr	x0, [sp, #40]
   14ad4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   14ad8:	mov	w1, w0
   14adc:	add	x0, sp, #0x3c
   14ae0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14ae4:	and	w0, w0, #0xff
   14ae8:	eor	w0, w0, #0x1
   14aec:	and	w0, w0, #0xff
   14af0:	cmp	w0, #0x0
   14af4:	b.eq	14b00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xfb90>  // b.none
   14af8:	mov	w0, #0x0                   	// #0
   14afc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14b00:	str	wzr, [sp, #3772]
   14b04:	mov	w2, #0x2                   	// #2
   14b08:	mov	w1, #0xb                   	// #11
   14b0c:	ldr	w0, [sp, #52]
   14b10:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14b14:	mov	w1, w0
   14b18:	ldr	w0, [sp, #3772]
   14b1c:	orr	w0, w0, w1
   14b20:	str	w0, [sp, #3772]
   14b24:	mov	w2, #0x1                   	// #1
   14b28:	mov	w1, #0x1e                  	// #30
   14b2c:	ldr	w0, [sp, #52]
   14b30:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14b34:	lsl	w0, w0, #2
   14b38:	ldr	w1, [sp, #3772]
   14b3c:	orr	w0, w1, w0
   14b40:	str	w0, [sp, #3772]
   14b44:	ldr	w0, [sp, #3772]
   14b48:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   14b4c:	add	x2, sp, #0x600
   14b50:	stp	x0, x1, [x2, #-184]
   14b54:	add	x0, sp, #0x548
   14b58:	mov	x1, x0
   14b5c:	ldr	x0, [sp, #40]
   14b60:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   14b64:	mov	w2, #0x5                   	// #5
   14b68:	mov	w1, #0x5                   	// #5
   14b6c:	ldr	w0, [sp, #52]
   14b70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14b74:	str	w0, [sp, #3772]
   14b78:	ldr	x3, [sp, #24]
   14b7c:	ldr	x2, [sp, #32]
   14b80:	ldr	w1, [sp, #3772]
   14b84:	ldr	x0, [sp, #40]
   14b88:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   14b8c:	mov	w1, w0
   14b90:	add	x0, sp, #0x3c
   14b94:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14b98:	and	w0, w0, #0xff
   14b9c:	eor	w0, w0, #0x1
   14ba0:	and	w0, w0, #0xff
   14ba4:	cmp	w0, #0x0
   14ba8:	b.eq	14bb4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xfc44>  // b.none
   14bac:	mov	w0, #0x0                   	// #0
   14bb0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14bb4:	mov	w2, #0x5                   	// #5
   14bb8:	mov	w1, #0x10                  	// #16
   14bbc:	ldr	w0, [sp, #52]
   14bc0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14bc4:	str	w0, [sp, #3772]
   14bc8:	ldr	x3, [sp, #24]
   14bcc:	ldr	x2, [sp, #32]
   14bd0:	ldr	w1, [sp, #3772]
   14bd4:	ldr	x0, [sp, #40]
   14bd8:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   14bdc:	mov	w1, w0
   14be0:	add	x0, sp, #0x3c
   14be4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14be8:	and	w0, w0, #0xff
   14bec:	eor	w0, w0, #0x1
   14bf0:	and	w0, w0, #0xff
   14bf4:	cmp	w0, #0x0
   14bf8:	b.eq	14c04 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xfc94>  // b.none
   14bfc:	mov	w0, #0x0                   	// #0
   14c00:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14c04:	ldr	w0, [sp, #60]
   14c08:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14c0c:	mov	w2, #0x5                   	// #5
   14c10:	mov	w1, #0x5                   	// #5
   14c14:	ldr	w0, [sp, #52]
   14c18:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14c1c:	str	w0, [sp, #3772]
   14c20:	ldr	x3, [sp, #24]
   14c24:	ldr	x2, [sp, #32]
   14c28:	ldr	w1, [sp, #3772]
   14c2c:	ldr	x0, [sp, #40]
   14c30:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   14c34:	mov	w1, w0
   14c38:	add	x0, sp, #0x3c
   14c3c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14c40:	and	w0, w0, #0xff
   14c44:	eor	w0, w0, #0x1
   14c48:	and	w0, w0, #0xff
   14c4c:	cmp	w0, #0x0
   14c50:	b.eq	14c5c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xfcec>  // b.none
   14c54:	mov	w0, #0x0                   	// #0
   14c58:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14c5c:	mov	w2, #0x5                   	// #5
   14c60:	mov	w1, #0x0                   	// #0
   14c64:	ldr	w0, [sp, #52]
   14c68:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14c6c:	str	w0, [sp, #3772]
   14c70:	ldr	x3, [sp, #24]
   14c74:	ldr	x2, [sp, #32]
   14c78:	ldr	w1, [sp, #3772]
   14c7c:	ldr	x0, [sp, #40]
   14c80:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   14c84:	mov	w1, w0
   14c88:	add	x0, sp, #0x3c
   14c8c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14c90:	and	w0, w0, #0xff
   14c94:	eor	w0, w0, #0x1
   14c98:	and	w0, w0, #0xff
   14c9c:	cmp	w0, #0x0
   14ca0:	b.eq	14cac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xfd3c>  // b.none
   14ca4:	mov	w0, #0x0                   	// #0
   14ca8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14cac:	str	wzr, [sp, #3772]
   14cb0:	mov	w2, #0x2                   	// #2
   14cb4:	mov	w1, #0xb                   	// #11
   14cb8:	ldr	w0, [sp, #52]
   14cbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14cc0:	mov	w1, w0
   14cc4:	ldr	w0, [sp, #3772]
   14cc8:	orr	w0, w0, w1
   14ccc:	str	w0, [sp, #3772]
   14cd0:	mov	w2, #0x1                   	// #1
   14cd4:	mov	w1, #0x1e                  	// #30
   14cd8:	ldr	w0, [sp, #52]
   14cdc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14ce0:	lsl	w0, w0, #2
   14ce4:	ldr	w1, [sp, #3772]
   14ce8:	orr	w0, w1, w0
   14cec:	str	w0, [sp, #3772]
   14cf0:	ldr	w0, [sp, #3772]
   14cf4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   14cf8:	add	x2, sp, #0x600
   14cfc:	stp	x0, x1, [x2, #-168]
   14d00:	add	x0, sp, #0x558
   14d04:	mov	x1, x0
   14d08:	ldr	x0, [sp, #40]
   14d0c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   14d10:	mov	w2, #0x5                   	// #5
   14d14:	mov	w1, #0x5                   	// #5
   14d18:	ldr	w0, [sp, #52]
   14d1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14d20:	str	w0, [sp, #3772]
   14d24:	ldr	x3, [sp, #24]
   14d28:	ldr	x2, [sp, #32]
   14d2c:	ldr	w1, [sp, #3772]
   14d30:	ldr	x0, [sp, #40]
   14d34:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   14d38:	mov	w1, w0
   14d3c:	add	x0, sp, #0x3c
   14d40:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14d44:	and	w0, w0, #0xff
   14d48:	eor	w0, w0, #0x1
   14d4c:	and	w0, w0, #0xff
   14d50:	cmp	w0, #0x0
   14d54:	b.eq	14d60 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xfdf0>  // b.none
   14d58:	mov	w0, #0x0                   	// #0
   14d5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14d60:	mov	w2, #0x5                   	// #5
   14d64:	mov	w1, #0x10                  	// #16
   14d68:	ldr	w0, [sp, #52]
   14d6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14d70:	str	w0, [sp, #3772]
   14d74:	ldr	x3, [sp, #24]
   14d78:	ldr	x2, [sp, #32]
   14d7c:	ldr	w1, [sp, #3772]
   14d80:	ldr	x0, [sp, #40]
   14d84:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   14d88:	mov	w1, w0
   14d8c:	add	x0, sp, #0x3c
   14d90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14d94:	and	w0, w0, #0xff
   14d98:	eor	w0, w0, #0x1
   14d9c:	and	w0, w0, #0xff
   14da0:	cmp	w0, #0x0
   14da4:	b.eq	14db0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xfe40>  // b.none
   14da8:	mov	w0, #0x0                   	// #0
   14dac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14db0:	ldr	w0, [sp, #60]
   14db4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14db8:	mov	w2, #0x5                   	// #5
   14dbc:	mov	w1, #0x5                   	// #5
   14dc0:	ldr	w0, [sp, #52]
   14dc4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14dc8:	str	w0, [sp, #3772]
   14dcc:	ldr	x3, [sp, #24]
   14dd0:	ldr	x2, [sp, #32]
   14dd4:	ldr	w1, [sp, #3772]
   14dd8:	ldr	x0, [sp, #40]
   14ddc:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   14de0:	mov	w1, w0
   14de4:	add	x0, sp, #0x3c
   14de8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14dec:	and	w0, w0, #0xff
   14df0:	eor	w0, w0, #0x1
   14df4:	and	w0, w0, #0xff
   14df8:	cmp	w0, #0x0
   14dfc:	b.eq	14e08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xfe98>  // b.none
   14e00:	mov	w0, #0x0                   	// #0
   14e04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14e08:	mov	w2, #0x5                   	// #5
   14e0c:	mov	w1, #0x0                   	// #0
   14e10:	ldr	w0, [sp, #52]
   14e14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14e18:	str	w0, [sp, #3772]
   14e1c:	ldr	x3, [sp, #24]
   14e20:	ldr	x2, [sp, #32]
   14e24:	ldr	w1, [sp, #3772]
   14e28:	ldr	x0, [sp, #40]
   14e2c:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   14e30:	mov	w1, w0
   14e34:	add	x0, sp, #0x3c
   14e38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14e3c:	and	w0, w0, #0xff
   14e40:	eor	w0, w0, #0x1
   14e44:	and	w0, w0, #0xff
   14e48:	cmp	w0, #0x0
   14e4c:	b.eq	14e58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xfee8>  // b.none
   14e50:	mov	w0, #0x0                   	// #0
   14e54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14e58:	str	wzr, [sp, #3772]
   14e5c:	mov	w2, #0x2                   	// #2
   14e60:	mov	w1, #0xb                   	// #11
   14e64:	ldr	w0, [sp, #52]
   14e68:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14e6c:	mov	w1, w0
   14e70:	ldr	w0, [sp, #3772]
   14e74:	orr	w0, w0, w1
   14e78:	str	w0, [sp, #3772]
   14e7c:	mov	w2, #0x1                   	// #1
   14e80:	mov	w1, #0x1e                  	// #30
   14e84:	ldr	w0, [sp, #52]
   14e88:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14e8c:	lsl	w0, w0, #2
   14e90:	ldr	w1, [sp, #3772]
   14e94:	orr	w0, w1, w0
   14e98:	str	w0, [sp, #3772]
   14e9c:	ldr	w0, [sp, #3772]
   14ea0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   14ea4:	add	x2, sp, #0x600
   14ea8:	stp	x0, x1, [x2, #-152]
   14eac:	add	x0, sp, #0x568
   14eb0:	mov	x1, x0
   14eb4:	ldr	x0, [sp, #40]
   14eb8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   14ebc:	mov	w2, #0x5                   	// #5
   14ec0:	mov	w1, #0x5                   	// #5
   14ec4:	ldr	w0, [sp, #52]
   14ec8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14ecc:	str	w0, [sp, #3772]
   14ed0:	ldr	x3, [sp, #24]
   14ed4:	ldr	x2, [sp, #32]
   14ed8:	ldr	w1, [sp, #3772]
   14edc:	ldr	x0, [sp, #40]
   14ee0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   14ee4:	mov	w1, w0
   14ee8:	add	x0, sp, #0x3c
   14eec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14ef0:	and	w0, w0, #0xff
   14ef4:	eor	w0, w0, #0x1
   14ef8:	and	w0, w0, #0xff
   14efc:	cmp	w0, #0x0
   14f00:	b.eq	14f0c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xff9c>  // b.none
   14f04:	mov	w0, #0x0                   	// #0
   14f08:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14f0c:	mov	w2, #0x5                   	// #5
   14f10:	mov	w1, #0x10                  	// #16
   14f14:	ldr	w0, [sp, #52]
   14f18:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14f1c:	str	w0, [sp, #3772]
   14f20:	ldr	x3, [sp, #24]
   14f24:	ldr	x2, [sp, #32]
   14f28:	ldr	w1, [sp, #3772]
   14f2c:	ldr	x0, [sp, #40]
   14f30:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   14f34:	mov	w1, w0
   14f38:	add	x0, sp, #0x3c
   14f3c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14f40:	and	w0, w0, #0xff
   14f44:	eor	w0, w0, #0x1
   14f48:	and	w0, w0, #0xff
   14f4c:	cmp	w0, #0x0
   14f50:	b.eq	14f5c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0xffec>  // b.none
   14f54:	mov	w0, #0x0                   	// #0
   14f58:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14f5c:	ldr	w0, [sp, #60]
   14f60:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14f64:	mov	w2, #0x5                   	// #5
   14f68:	mov	w1, #0x5                   	// #5
   14f6c:	ldr	w0, [sp, #52]
   14f70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14f74:	str	w0, [sp, #3772]
   14f78:	ldr	x3, [sp, #24]
   14f7c:	ldr	x2, [sp, #32]
   14f80:	ldr	w1, [sp, #3772]
   14f84:	ldr	x0, [sp, #40]
   14f88:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   14f8c:	mov	w1, w0
   14f90:	add	x0, sp, #0x3c
   14f94:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14f98:	and	w0, w0, #0xff
   14f9c:	eor	w0, w0, #0x1
   14fa0:	and	w0, w0, #0xff
   14fa4:	cmp	w0, #0x0
   14fa8:	b.eq	14fb4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10044>  // b.none
   14fac:	mov	w0, #0x0                   	// #0
   14fb0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   14fb4:	mov	w2, #0x5                   	// #5
   14fb8:	mov	w1, #0x0                   	// #0
   14fbc:	ldr	w0, [sp, #52]
   14fc0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   14fc4:	str	w0, [sp, #3772]
   14fc8:	ldr	x3, [sp, #24]
   14fcc:	ldr	x2, [sp, #32]
   14fd0:	ldr	w1, [sp, #3772]
   14fd4:	ldr	x0, [sp, #40]
   14fd8:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   14fdc:	mov	w1, w0
   14fe0:	add	x0, sp, #0x3c
   14fe4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   14fe8:	and	w0, w0, #0xff
   14fec:	eor	w0, w0, #0x1
   14ff0:	and	w0, w0, #0xff
   14ff4:	cmp	w0, #0x0
   14ff8:	b.eq	15004 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10094>  // b.none
   14ffc:	mov	w0, #0x0                   	// #0
   15000:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15004:	str	wzr, [sp, #3772]
   15008:	mov	w2, #0x2                   	// #2
   1500c:	mov	w1, #0xb                   	// #11
   15010:	ldr	w0, [sp, #52]
   15014:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15018:	mov	w1, w0
   1501c:	ldr	w0, [sp, #3772]
   15020:	orr	w0, w0, w1
   15024:	str	w0, [sp, #3772]
   15028:	mov	w2, #0x1                   	// #1
   1502c:	mov	w1, #0x1e                  	// #30
   15030:	ldr	w0, [sp, #52]
   15034:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15038:	lsl	w0, w0, #2
   1503c:	ldr	w1, [sp, #3772]
   15040:	orr	w0, w1, w0
   15044:	str	w0, [sp, #3772]
   15048:	ldr	w0, [sp, #3772]
   1504c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   15050:	add	x2, sp, #0x600
   15054:	stp	x0, x1, [x2, #-136]
   15058:	add	x0, sp, #0x578
   1505c:	mov	x1, x0
   15060:	ldr	x0, [sp, #40]
   15064:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   15068:	mov	w2, #0x5                   	// #5
   1506c:	mov	w1, #0x5                   	// #5
   15070:	ldr	w0, [sp, #52]
   15074:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15078:	str	w0, [sp, #3772]
   1507c:	ldr	x3, [sp, #24]
   15080:	ldr	x2, [sp, #32]
   15084:	ldr	w1, [sp, #3772]
   15088:	ldr	x0, [sp, #40]
   1508c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   15090:	mov	w1, w0
   15094:	add	x0, sp, #0x3c
   15098:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1509c:	and	w0, w0, #0xff
   150a0:	eor	w0, w0, #0x1
   150a4:	and	w0, w0, #0xff
   150a8:	cmp	w0, #0x0
   150ac:	b.eq	150b8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10148>  // b.none
   150b0:	mov	w0, #0x0                   	// #0
   150b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   150b8:	mov	w2, #0x5                   	// #5
   150bc:	mov	w1, #0x10                  	// #16
   150c0:	ldr	w0, [sp, #52]
   150c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   150c8:	str	w0, [sp, #3772]
   150cc:	ldr	x3, [sp, #24]
   150d0:	ldr	x2, [sp, #32]
   150d4:	ldr	w1, [sp, #3772]
   150d8:	ldr	x0, [sp, #40]
   150dc:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   150e0:	mov	w1, w0
   150e4:	add	x0, sp, #0x3c
   150e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   150ec:	and	w0, w0, #0xff
   150f0:	eor	w0, w0, #0x1
   150f4:	and	w0, w0, #0xff
   150f8:	cmp	w0, #0x0
   150fc:	b.eq	15108 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10198>  // b.none
   15100:	mov	w0, #0x0                   	// #0
   15104:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15108:	ldr	w0, [sp, #60]
   1510c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15110:	mov	w2, #0x5                   	// #5
   15114:	mov	w1, #0x5                   	// #5
   15118:	ldr	w0, [sp, #52]
   1511c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15120:	str	w0, [sp, #3772]
   15124:	ldr	x3, [sp, #24]
   15128:	ldr	x2, [sp, #32]
   1512c:	ldr	w1, [sp, #3772]
   15130:	ldr	x0, [sp, #40]
   15134:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   15138:	mov	w1, w0
   1513c:	add	x0, sp, #0x3c
   15140:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15144:	and	w0, w0, #0xff
   15148:	eor	w0, w0, #0x1
   1514c:	and	w0, w0, #0xff
   15150:	cmp	w0, #0x0
   15154:	b.eq	15160 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x101f0>  // b.none
   15158:	mov	w0, #0x0                   	// #0
   1515c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15160:	mov	w2, #0x5                   	// #5
   15164:	mov	w1, #0x0                   	// #0
   15168:	ldr	w0, [sp, #52]
   1516c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15170:	str	w0, [sp, #3772]
   15174:	ldr	x3, [sp, #24]
   15178:	ldr	x2, [sp, #32]
   1517c:	ldr	w1, [sp, #3772]
   15180:	ldr	x0, [sp, #40]
   15184:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   15188:	mov	w1, w0
   1518c:	add	x0, sp, #0x3c
   15190:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15194:	and	w0, w0, #0xff
   15198:	eor	w0, w0, #0x1
   1519c:	and	w0, w0, #0xff
   151a0:	cmp	w0, #0x0
   151a4:	b.eq	151b0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10240>  // b.none
   151a8:	mov	w0, #0x0                   	// #0
   151ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   151b0:	str	wzr, [sp, #3772]
   151b4:	mov	w2, #0x1                   	// #1
   151b8:	mov	w1, #0xc                   	// #12
   151bc:	ldr	w0, [sp, #52]
   151c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   151c4:	mov	w1, w0
   151c8:	ldr	w0, [sp, #3772]
   151cc:	orr	w0, w0, w1
   151d0:	str	w0, [sp, #3772]
   151d4:	mov	w2, #0x1                   	// #1
   151d8:	mov	w1, #0x1e                  	// #30
   151dc:	ldr	w0, [sp, #52]
   151e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   151e4:	lsl	w0, w0, #1
   151e8:	ldr	w1, [sp, #3772]
   151ec:	orr	w0, w1, w0
   151f0:	str	w0, [sp, #3772]
   151f4:	ldr	w0, [sp, #3772]
   151f8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   151fc:	add	x2, sp, #0x600
   15200:	stp	x0, x1, [x2, #-120]
   15204:	add	x0, sp, #0x588
   15208:	mov	x1, x0
   1520c:	ldr	x0, [sp, #40]
   15210:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   15214:	mov	w2, #0x5                   	// #5
   15218:	mov	w1, #0x5                   	// #5
   1521c:	ldr	w0, [sp, #52]
   15220:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15224:	str	w0, [sp, #3772]
   15228:	ldr	x3, [sp, #24]
   1522c:	ldr	x2, [sp, #32]
   15230:	ldr	w1, [sp, #3772]
   15234:	ldr	x0, [sp, #40]
   15238:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   1523c:	mov	w1, w0
   15240:	add	x0, sp, #0x3c
   15244:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15248:	and	w0, w0, #0xff
   1524c:	eor	w0, w0, #0x1
   15250:	and	w0, w0, #0xff
   15254:	cmp	w0, #0x0
   15258:	b.eq	15264 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x102f4>  // b.none
   1525c:	mov	w0, #0x0                   	// #0
   15260:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15264:	mov	w2, #0x5                   	// #5
   15268:	mov	w1, #0x10                  	// #16
   1526c:	ldr	w0, [sp, #52]
   15270:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15274:	str	w0, [sp, #3772]
   15278:	ldr	x3, [sp, #24]
   1527c:	ldr	x2, [sp, #32]
   15280:	ldr	w1, [sp, #3772]
   15284:	ldr	x0, [sp, #40]
   15288:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1528c:	mov	w1, w0
   15290:	add	x0, sp, #0x3c
   15294:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15298:	and	w0, w0, #0xff
   1529c:	eor	w0, w0, #0x1
   152a0:	and	w0, w0, #0xff
   152a4:	cmp	w0, #0x0
   152a8:	b.eq	152b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10344>  // b.none
   152ac:	mov	w0, #0x0                   	// #0
   152b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   152b4:	ldr	w0, [sp, #60]
   152b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   152bc:	mov	w2, #0x5                   	// #5
   152c0:	mov	w1, #0x5                   	// #5
   152c4:	ldr	w0, [sp, #52]
   152c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   152cc:	str	w0, [sp, #3772]
   152d0:	ldr	x3, [sp, #24]
   152d4:	ldr	x2, [sp, #32]
   152d8:	ldr	w1, [sp, #3772]
   152dc:	ldr	x0, [sp, #40]
   152e0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   152e4:	mov	w1, w0
   152e8:	add	x0, sp, #0x3c
   152ec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   152f0:	and	w0, w0, #0xff
   152f4:	eor	w0, w0, #0x1
   152f8:	and	w0, w0, #0xff
   152fc:	cmp	w0, #0x0
   15300:	b.eq	1530c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1039c>  // b.none
   15304:	mov	w0, #0x0                   	// #0
   15308:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1530c:	mov	w2, #0x5                   	// #5
   15310:	mov	w1, #0x0                   	// #0
   15314:	ldr	w0, [sp, #52]
   15318:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1531c:	str	w0, [sp, #3772]
   15320:	ldr	x3, [sp, #24]
   15324:	ldr	x2, [sp, #32]
   15328:	ldr	w1, [sp, #3772]
   1532c:	ldr	x0, [sp, #40]
   15330:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   15334:	mov	w1, w0
   15338:	add	x0, sp, #0x3c
   1533c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15340:	and	w0, w0, #0xff
   15344:	eor	w0, w0, #0x1
   15348:	and	w0, w0, #0xff
   1534c:	cmp	w0, #0x0
   15350:	b.eq	1535c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x103ec>  // b.none
   15354:	mov	w0, #0x0                   	// #0
   15358:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1535c:	str	wzr, [sp, #3772]
   15360:	mov	w2, #0x1                   	// #1
   15364:	mov	w1, #0xc                   	// #12
   15368:	ldr	w0, [sp, #52]
   1536c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15370:	mov	w1, w0
   15374:	ldr	w0, [sp, #3772]
   15378:	orr	w0, w0, w1
   1537c:	str	w0, [sp, #3772]
   15380:	mov	w2, #0x1                   	// #1
   15384:	mov	w1, #0x1e                  	// #30
   15388:	ldr	w0, [sp, #52]
   1538c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15390:	lsl	w0, w0, #1
   15394:	ldr	w1, [sp, #3772]
   15398:	orr	w0, w1, w0
   1539c:	str	w0, [sp, #3772]
   153a0:	ldr	w0, [sp, #3772]
   153a4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   153a8:	add	x2, sp, #0x600
   153ac:	stp	x0, x1, [x2, #-104]
   153b0:	add	x0, sp, #0x598
   153b4:	mov	x1, x0
   153b8:	ldr	x0, [sp, #40]
   153bc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   153c0:	mov	w2, #0x5                   	// #5
   153c4:	mov	w1, #0x5                   	// #5
   153c8:	ldr	w0, [sp, #52]
   153cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   153d0:	str	w0, [sp, #3772]
   153d4:	ldr	x3, [sp, #24]
   153d8:	ldr	x2, [sp, #32]
   153dc:	ldr	w1, [sp, #3772]
   153e0:	ldr	x0, [sp, #40]
   153e4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   153e8:	mov	w1, w0
   153ec:	add	x0, sp, #0x3c
   153f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   153f4:	and	w0, w0, #0xff
   153f8:	eor	w0, w0, #0x1
   153fc:	and	w0, w0, #0xff
   15400:	cmp	w0, #0x0
   15404:	b.eq	15410 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x104a0>  // b.none
   15408:	mov	w0, #0x0                   	// #0
   1540c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15410:	mov	w2, #0x5                   	// #5
   15414:	mov	w1, #0x10                  	// #16
   15418:	ldr	w0, [sp, #52]
   1541c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15420:	str	w0, [sp, #3772]
   15424:	ldr	x3, [sp, #24]
   15428:	ldr	x2, [sp, #32]
   1542c:	ldr	w1, [sp, #3772]
   15430:	ldr	x0, [sp, #40]
   15434:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   15438:	mov	w1, w0
   1543c:	add	x0, sp, #0x3c
   15440:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15444:	and	w0, w0, #0xff
   15448:	eor	w0, w0, #0x1
   1544c:	and	w0, w0, #0xff
   15450:	cmp	w0, #0x0
   15454:	b.eq	15460 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x104f0>  // b.none
   15458:	mov	w0, #0x0                   	// #0
   1545c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15460:	ldr	w0, [sp, #60]
   15464:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15468:	mov	w2, #0x5                   	// #5
   1546c:	mov	w1, #0x5                   	// #5
   15470:	ldr	w0, [sp, #52]
   15474:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15478:	str	w0, [sp, #3772]
   1547c:	ldr	x3, [sp, #24]
   15480:	ldr	x2, [sp, #32]
   15484:	ldr	w1, [sp, #3772]
   15488:	ldr	x0, [sp, #40]
   1548c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   15490:	mov	w1, w0
   15494:	add	x0, sp, #0x3c
   15498:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1549c:	and	w0, w0, #0xff
   154a0:	eor	w0, w0, #0x1
   154a4:	and	w0, w0, #0xff
   154a8:	cmp	w0, #0x0
   154ac:	b.eq	154b8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10548>  // b.none
   154b0:	mov	w0, #0x0                   	// #0
   154b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   154b8:	mov	w2, #0x5                   	// #5
   154bc:	mov	w1, #0x0                   	// #0
   154c0:	ldr	w0, [sp, #52]
   154c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   154c8:	str	w0, [sp, #3772]
   154cc:	ldr	x3, [sp, #24]
   154d0:	ldr	x2, [sp, #32]
   154d4:	ldr	w1, [sp, #3772]
   154d8:	ldr	x0, [sp, #40]
   154dc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   154e0:	mov	w1, w0
   154e4:	add	x0, sp, #0x3c
   154e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   154ec:	and	w0, w0, #0xff
   154f0:	eor	w0, w0, #0x1
   154f4:	and	w0, w0, #0xff
   154f8:	cmp	w0, #0x0
   154fc:	b.eq	15508 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10598>  // b.none
   15500:	mov	w0, #0x0                   	// #0
   15504:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15508:	mov	w2, #0x1                   	// #1
   1550c:	mov	w1, #0x1e                  	// #30
   15510:	ldr	w0, [sp, #52]
   15514:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15518:	str	w0, [sp, #3772]
   1551c:	ldr	w0, [sp, #3772]
   15520:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   15524:	add	x2, sp, #0x600
   15528:	stp	x0, x1, [x2, #-88]
   1552c:	add	x0, sp, #0x5a8
   15530:	mov	x1, x0
   15534:	ldr	x0, [sp, #40]
   15538:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1553c:	mov	w2, #0x5                   	// #5
   15540:	mov	w1, #0x5                   	// #5
   15544:	ldr	w0, [sp, #52]
   15548:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1554c:	str	w0, [sp, #3772]
   15550:	ldr	x3, [sp, #24]
   15554:	ldr	x2, [sp, #32]
   15558:	ldr	w1, [sp, #3772]
   1555c:	ldr	x0, [sp, #40]
   15560:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   15564:	mov	w1, w0
   15568:	add	x0, sp, #0x3c
   1556c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15570:	and	w0, w0, #0xff
   15574:	eor	w0, w0, #0x1
   15578:	and	w0, w0, #0xff
   1557c:	cmp	w0, #0x0
   15580:	b.eq	1558c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1061c>  // b.none
   15584:	mov	w0, #0x0                   	// #0
   15588:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1558c:	mov	w2, #0x5                   	// #5
   15590:	mov	w1, #0x10                  	// #16
   15594:	ldr	w0, [sp, #52]
   15598:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1559c:	str	w0, [sp, #3772]
   155a0:	ldr	x3, [sp, #24]
   155a4:	ldr	x2, [sp, #32]
   155a8:	ldr	w1, [sp, #3772]
   155ac:	ldr	x0, [sp, #40]
   155b0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   155b4:	mov	w1, w0
   155b8:	add	x0, sp, #0x3c
   155bc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   155c0:	and	w0, w0, #0xff
   155c4:	eor	w0, w0, #0x1
   155c8:	and	w0, w0, #0xff
   155cc:	cmp	w0, #0x0
   155d0:	b.eq	155dc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1066c>  // b.none
   155d4:	mov	w0, #0x0                   	// #0
   155d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   155dc:	ldr	w0, [sp, #60]
   155e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   155e4:	mov	w2, #0x5                   	// #5
   155e8:	mov	w1, #0x5                   	// #5
   155ec:	ldr	w0, [sp, #52]
   155f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   155f4:	str	w0, [sp, #3772]
   155f8:	ldr	x3, [sp, #24]
   155fc:	ldr	x2, [sp, #32]
   15600:	ldr	w1, [sp, #3772]
   15604:	ldr	x0, [sp, #40]
   15608:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   1560c:	mov	w1, w0
   15610:	add	x0, sp, #0x3c
   15614:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15618:	and	w0, w0, #0xff
   1561c:	eor	w0, w0, #0x1
   15620:	and	w0, w0, #0xff
   15624:	cmp	w0, #0x0
   15628:	b.eq	15634 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x106c4>  // b.none
   1562c:	mov	w0, #0x0                   	// #0
   15630:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15634:	mov	w2, #0x5                   	// #5
   15638:	mov	w1, #0x0                   	// #0
   1563c:	ldr	w0, [sp, #52]
   15640:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15644:	str	w0, [sp, #3772]
   15648:	ldr	x3, [sp, #24]
   1564c:	ldr	x2, [sp, #32]
   15650:	ldr	w1, [sp, #3772]
   15654:	ldr	x0, [sp, #40]
   15658:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   1565c:	mov	w1, w0
   15660:	add	x0, sp, #0x3c
   15664:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15668:	and	w0, w0, #0xff
   1566c:	eor	w0, w0, #0x1
   15670:	and	w0, w0, #0xff
   15674:	cmp	w0, #0x0
   15678:	b.eq	15684 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10714>  // b.none
   1567c:	mov	w0, #0x0                   	// #0
   15680:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15684:	mov	w2, #0x1                   	// #1
   15688:	mov	w1, #0x1e                  	// #30
   1568c:	ldr	w0, [sp, #52]
   15690:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15694:	str	w0, [sp, #3772]
   15698:	ldr	w0, [sp, #3772]
   1569c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   156a0:	add	x2, sp, #0x600
   156a4:	stp	x0, x1, [x2, #-72]
   156a8:	add	x0, sp, #0x5b8
   156ac:	mov	x1, x0
   156b0:	ldr	x0, [sp, #40]
   156b4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   156b8:	mov	w2, #0x5                   	// #5
   156bc:	mov	w1, #0x5                   	// #5
   156c0:	ldr	w0, [sp, #52]
   156c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   156c8:	str	w0, [sp, #3772]
   156cc:	ldr	x3, [sp, #24]
   156d0:	ldr	x2, [sp, #32]
   156d4:	ldr	w1, [sp, #3772]
   156d8:	ldr	x0, [sp, #40]
   156dc:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   156e0:	mov	w1, w0
   156e4:	add	x0, sp, #0x3c
   156e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   156ec:	and	w0, w0, #0xff
   156f0:	eor	w0, w0, #0x1
   156f4:	and	w0, w0, #0xff
   156f8:	cmp	w0, #0x0
   156fc:	b.eq	15708 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10798>  // b.none
   15700:	mov	w0, #0x0                   	// #0
   15704:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15708:	mov	w2, #0x5                   	// #5
   1570c:	mov	w1, #0x10                  	// #16
   15710:	ldr	w0, [sp, #52]
   15714:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15718:	str	w0, [sp, #3772]
   1571c:	ldr	x3, [sp, #24]
   15720:	ldr	x2, [sp, #32]
   15724:	ldr	w1, [sp, #3772]
   15728:	ldr	x0, [sp, #40]
   1572c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   15730:	mov	w1, w0
   15734:	add	x0, sp, #0x3c
   15738:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1573c:	and	w0, w0, #0xff
   15740:	eor	w0, w0, #0x1
   15744:	and	w0, w0, #0xff
   15748:	cmp	w0, #0x0
   1574c:	b.eq	15758 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x107e8>  // b.none
   15750:	mov	w0, #0x0                   	// #0
   15754:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15758:	ldr	w0, [sp, #60]
   1575c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15760:	mov	w2, #0x5                   	// #5
   15764:	mov	w1, #0x5                   	// #5
   15768:	ldr	w0, [sp, #52]
   1576c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15770:	str	w0, [sp, #3772]
   15774:	ldr	x3, [sp, #24]
   15778:	ldr	x2, [sp, #32]
   1577c:	ldr	w1, [sp, #3772]
   15780:	ldr	x0, [sp, #40]
   15784:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   15788:	mov	w1, w0
   1578c:	add	x0, sp, #0x3c
   15790:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15794:	and	w0, w0, #0xff
   15798:	eor	w0, w0, #0x1
   1579c:	and	w0, w0, #0xff
   157a0:	cmp	w0, #0x0
   157a4:	b.eq	157b0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10840>  // b.none
   157a8:	mov	w0, #0x0                   	// #0
   157ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   157b0:	mov	w2, #0x5                   	// #5
   157b4:	mov	w1, #0x0                   	// #0
   157b8:	ldr	w0, [sp, #52]
   157bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   157c0:	str	w0, [sp, #3772]
   157c4:	ldr	x3, [sp, #24]
   157c8:	ldr	x2, [sp, #32]
   157cc:	ldr	w1, [sp, #3772]
   157d0:	ldr	x0, [sp, #40]
   157d4:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   157d8:	mov	w1, w0
   157dc:	add	x0, sp, #0x3c
   157e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   157e4:	and	w0, w0, #0xff
   157e8:	eor	w0, w0, #0x1
   157ec:	and	w0, w0, #0xff
   157f0:	cmp	w0, #0x0
   157f4:	b.eq	15800 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10890>  // b.none
   157f8:	mov	w0, #0x0                   	// #0
   157fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15800:	str	wzr, [sp, #3772]
   15804:	mov	w2, #0x1                   	// #1
   15808:	mov	w1, #0xc                   	// #12
   1580c:	ldr	w0, [sp, #52]
   15810:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15814:	mov	w1, w0
   15818:	ldr	w0, [sp, #3772]
   1581c:	orr	w0, w0, w1
   15820:	str	w0, [sp, #3772]
   15824:	mov	w2, #0x1                   	// #1
   15828:	mov	w1, #0x1e                  	// #30
   1582c:	ldr	w0, [sp, #52]
   15830:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15834:	lsl	w0, w0, #1
   15838:	ldr	w1, [sp, #3772]
   1583c:	orr	w0, w1, w0
   15840:	str	w0, [sp, #3772]
   15844:	ldr	w0, [sp, #3772]
   15848:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1584c:	add	x2, sp, #0x600
   15850:	stp	x0, x1, [x2, #-56]
   15854:	add	x0, sp, #0x5c8
   15858:	mov	x1, x0
   1585c:	ldr	x0, [sp, #40]
   15860:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   15864:	mov	w2, #0x5                   	// #5
   15868:	mov	w1, #0x5                   	// #5
   1586c:	ldr	w0, [sp, #52]
   15870:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15874:	str	w0, [sp, #3772]
   15878:	ldr	x3, [sp, #24]
   1587c:	ldr	x2, [sp, #32]
   15880:	ldr	w1, [sp, #3772]
   15884:	ldr	x0, [sp, #40]
   15888:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   1588c:	mov	w1, w0
   15890:	add	x0, sp, #0x3c
   15894:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15898:	and	w0, w0, #0xff
   1589c:	eor	w0, w0, #0x1
   158a0:	and	w0, w0, #0xff
   158a4:	cmp	w0, #0x0
   158a8:	b.eq	158b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10944>  // b.none
   158ac:	mov	w0, #0x0                   	// #0
   158b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   158b4:	mov	w2, #0x5                   	// #5
   158b8:	mov	w1, #0x10                  	// #16
   158bc:	ldr	w0, [sp, #52]
   158c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   158c4:	str	w0, [sp, #3772]
   158c8:	ldr	x3, [sp, #24]
   158cc:	ldr	x2, [sp, #32]
   158d0:	ldr	w1, [sp, #3772]
   158d4:	ldr	x0, [sp, #40]
   158d8:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   158dc:	mov	w1, w0
   158e0:	add	x0, sp, #0x3c
   158e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   158e8:	and	w0, w0, #0xff
   158ec:	eor	w0, w0, #0x1
   158f0:	and	w0, w0, #0xff
   158f4:	cmp	w0, #0x0
   158f8:	b.eq	15904 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10994>  // b.none
   158fc:	mov	w0, #0x0                   	// #0
   15900:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15904:	ldr	w0, [sp, #60]
   15908:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1590c:	mov	w2, #0x5                   	// #5
   15910:	mov	w1, #0x5                   	// #5
   15914:	ldr	w0, [sp, #52]
   15918:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1591c:	str	w0, [sp, #3772]
   15920:	ldr	x3, [sp, #24]
   15924:	ldr	x2, [sp, #32]
   15928:	ldr	w1, [sp, #3772]
   1592c:	ldr	x0, [sp, #40]
   15930:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   15934:	mov	w1, w0
   15938:	add	x0, sp, #0x3c
   1593c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15940:	and	w0, w0, #0xff
   15944:	eor	w0, w0, #0x1
   15948:	and	w0, w0, #0xff
   1594c:	cmp	w0, #0x0
   15950:	b.eq	1595c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x109ec>  // b.none
   15954:	mov	w0, #0x0                   	// #0
   15958:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1595c:	mov	w2, #0x5                   	// #5
   15960:	mov	w1, #0x0                   	// #0
   15964:	ldr	w0, [sp, #52]
   15968:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1596c:	str	w0, [sp, #3772]
   15970:	ldr	x3, [sp, #24]
   15974:	ldr	x2, [sp, #32]
   15978:	ldr	w1, [sp, #3772]
   1597c:	ldr	x0, [sp, #40]
   15980:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   15984:	mov	w1, w0
   15988:	add	x0, sp, #0x3c
   1598c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15990:	and	w0, w0, #0xff
   15994:	eor	w0, w0, #0x1
   15998:	and	w0, w0, #0xff
   1599c:	cmp	w0, #0x0
   159a0:	b.eq	159ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10a3c>  // b.none
   159a4:	mov	w0, #0x0                   	// #0
   159a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   159ac:	str	wzr, [sp, #3772]
   159b0:	mov	w2, #0x1                   	// #1
   159b4:	mov	w1, #0xc                   	// #12
   159b8:	ldr	w0, [sp, #52]
   159bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   159c0:	mov	w1, w0
   159c4:	ldr	w0, [sp, #3772]
   159c8:	orr	w0, w0, w1
   159cc:	str	w0, [sp, #3772]
   159d0:	mov	w2, #0x1                   	// #1
   159d4:	mov	w1, #0x1e                  	// #30
   159d8:	ldr	w0, [sp, #52]
   159dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   159e0:	lsl	w0, w0, #1
   159e4:	ldr	w1, [sp, #3772]
   159e8:	orr	w0, w1, w0
   159ec:	str	w0, [sp, #3772]
   159f0:	ldr	w0, [sp, #3772]
   159f4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   159f8:	add	x2, sp, #0x600
   159fc:	stp	x0, x1, [x2, #-40]
   15a00:	add	x0, sp, #0x5d8
   15a04:	mov	x1, x0
   15a08:	ldr	x0, [sp, #40]
   15a0c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   15a10:	mov	w2, #0x5                   	// #5
   15a14:	mov	w1, #0x5                   	// #5
   15a18:	ldr	w0, [sp, #52]
   15a1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15a20:	str	w0, [sp, #3772]
   15a24:	ldr	x3, [sp, #24]
   15a28:	ldr	x2, [sp, #32]
   15a2c:	ldr	w1, [sp, #3772]
   15a30:	ldr	x0, [sp, #40]
   15a34:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   15a38:	mov	w1, w0
   15a3c:	add	x0, sp, #0x3c
   15a40:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15a44:	and	w0, w0, #0xff
   15a48:	eor	w0, w0, #0x1
   15a4c:	and	w0, w0, #0xff
   15a50:	cmp	w0, #0x0
   15a54:	b.eq	15a60 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10af0>  // b.none
   15a58:	mov	w0, #0x0                   	// #0
   15a5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15a60:	mov	w2, #0x5                   	// #5
   15a64:	mov	w1, #0x10                  	// #16
   15a68:	ldr	w0, [sp, #52]
   15a6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15a70:	str	w0, [sp, #3772]
   15a74:	ldr	x3, [sp, #24]
   15a78:	ldr	x2, [sp, #32]
   15a7c:	ldr	w1, [sp, #3772]
   15a80:	ldr	x0, [sp, #40]
   15a84:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   15a88:	mov	w1, w0
   15a8c:	add	x0, sp, #0x3c
   15a90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15a94:	and	w0, w0, #0xff
   15a98:	eor	w0, w0, #0x1
   15a9c:	and	w0, w0, #0xff
   15aa0:	cmp	w0, #0x0
   15aa4:	b.eq	15ab0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10b40>  // b.none
   15aa8:	mov	w0, #0x0                   	// #0
   15aac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15ab0:	ldr	w0, [sp, #60]
   15ab4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15ab8:	mov	w2, #0x5                   	// #5
   15abc:	mov	w1, #0x5                   	// #5
   15ac0:	ldr	w0, [sp, #52]
   15ac4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15ac8:	str	w0, [sp, #3772]
   15acc:	ldr	x3, [sp, #24]
   15ad0:	ldr	x2, [sp, #32]
   15ad4:	ldr	w1, [sp, #3772]
   15ad8:	ldr	x0, [sp, #40]
   15adc:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   15ae0:	mov	w1, w0
   15ae4:	add	x0, sp, #0x3c
   15ae8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15aec:	and	w0, w0, #0xff
   15af0:	eor	w0, w0, #0x1
   15af4:	and	w0, w0, #0xff
   15af8:	cmp	w0, #0x0
   15afc:	b.eq	15b08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10b98>  // b.none
   15b00:	mov	w0, #0x0                   	// #0
   15b04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15b08:	mov	w2, #0x5                   	// #5
   15b0c:	mov	w1, #0x0                   	// #0
   15b10:	ldr	w0, [sp, #52]
   15b14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15b18:	str	w0, [sp, #3772]
   15b1c:	ldr	x3, [sp, #24]
   15b20:	ldr	x2, [sp, #32]
   15b24:	ldr	w1, [sp, #3772]
   15b28:	ldr	x0, [sp, #40]
   15b2c:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   15b30:	mov	w1, w0
   15b34:	add	x0, sp, #0x3c
   15b38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15b3c:	and	w0, w0, #0xff
   15b40:	eor	w0, w0, #0x1
   15b44:	and	w0, w0, #0xff
   15b48:	cmp	w0, #0x0
   15b4c:	b.eq	15b58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10be8>  // b.none
   15b50:	mov	w0, #0x0                   	// #0
   15b54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15b58:	mov	w2, #0x1                   	// #1
   15b5c:	mov	w1, #0x1e                  	// #30
   15b60:	ldr	w0, [sp, #52]
   15b64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15b68:	str	w0, [sp, #3772]
   15b6c:	ldr	w0, [sp, #3772]
   15b70:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   15b74:	add	x2, sp, #0x600
   15b78:	stp	x0, x1, [x2, #-24]
   15b7c:	add	x0, sp, #0x5e8
   15b80:	mov	x1, x0
   15b84:	ldr	x0, [sp, #40]
   15b88:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   15b8c:	mov	w2, #0x5                   	// #5
   15b90:	mov	w1, #0x5                   	// #5
   15b94:	ldr	w0, [sp, #52]
   15b98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15b9c:	str	w0, [sp, #3772]
   15ba0:	ldr	x3, [sp, #24]
   15ba4:	ldr	x2, [sp, #32]
   15ba8:	ldr	w1, [sp, #3772]
   15bac:	ldr	x0, [sp, #40]
   15bb0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   15bb4:	mov	w1, w0
   15bb8:	add	x0, sp, #0x3c
   15bbc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15bc0:	and	w0, w0, #0xff
   15bc4:	eor	w0, w0, #0x1
   15bc8:	and	w0, w0, #0xff
   15bcc:	cmp	w0, #0x0
   15bd0:	b.eq	15bdc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10c6c>  // b.none
   15bd4:	mov	w0, #0x0                   	// #0
   15bd8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15bdc:	mov	w2, #0x5                   	// #5
   15be0:	mov	w1, #0x10                  	// #16
   15be4:	ldr	w0, [sp, #52]
   15be8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15bec:	str	w0, [sp, #3772]
   15bf0:	ldr	x3, [sp, #24]
   15bf4:	ldr	x2, [sp, #32]
   15bf8:	ldr	w1, [sp, #3772]
   15bfc:	ldr	x0, [sp, #40]
   15c00:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   15c04:	mov	w1, w0
   15c08:	add	x0, sp, #0x3c
   15c0c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15c10:	and	w0, w0, #0xff
   15c14:	eor	w0, w0, #0x1
   15c18:	and	w0, w0, #0xff
   15c1c:	cmp	w0, #0x0
   15c20:	b.eq	15c2c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10cbc>  // b.none
   15c24:	mov	w0, #0x0                   	// #0
   15c28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15c2c:	ldr	w0, [sp, #60]
   15c30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15c34:	mov	w2, #0x5                   	// #5
   15c38:	mov	w1, #0x5                   	// #5
   15c3c:	ldr	w0, [sp, #52]
   15c40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15c44:	str	w0, [sp, #3772]
   15c48:	ldr	x3, [sp, #24]
   15c4c:	ldr	x2, [sp, #32]
   15c50:	ldr	w1, [sp, #3772]
   15c54:	ldr	x0, [sp, #40]
   15c58:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   15c5c:	mov	w1, w0
   15c60:	add	x0, sp, #0x3c
   15c64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15c68:	and	w0, w0, #0xff
   15c6c:	eor	w0, w0, #0x1
   15c70:	and	w0, w0, #0xff
   15c74:	cmp	w0, #0x0
   15c78:	b.eq	15c84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10d14>  // b.none
   15c7c:	mov	w0, #0x0                   	// #0
   15c80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15c84:	mov	w2, #0x5                   	// #5
   15c88:	mov	w1, #0x0                   	// #0
   15c8c:	ldr	w0, [sp, #52]
   15c90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15c94:	str	w0, [sp, #3772]
   15c98:	ldr	x3, [sp, #24]
   15c9c:	ldr	x2, [sp, #32]
   15ca0:	ldr	w1, [sp, #3772]
   15ca4:	ldr	x0, [sp, #40]
   15ca8:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   15cac:	mov	w1, w0
   15cb0:	add	x0, sp, #0x3c
   15cb4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15cb8:	and	w0, w0, #0xff
   15cbc:	eor	w0, w0, #0x1
   15cc0:	and	w0, w0, #0xff
   15cc4:	cmp	w0, #0x0
   15cc8:	b.eq	15cd4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10d64>  // b.none
   15ccc:	mov	w0, #0x0                   	// #0
   15cd0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15cd4:	mov	w2, #0x1                   	// #1
   15cd8:	mov	w1, #0x1e                  	// #30
   15cdc:	ldr	w0, [sp, #52]
   15ce0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15ce4:	str	w0, [sp, #3772]
   15ce8:	ldr	w0, [sp, #3772]
   15cec:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   15cf0:	add	x2, sp, #0x600
   15cf4:	stp	x0, x1, [x2, #-8]
   15cf8:	add	x0, sp, #0x5f8
   15cfc:	mov	x1, x0
   15d00:	ldr	x0, [sp, #40]
   15d04:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   15d08:	mov	w2, #0x5                   	// #5
   15d0c:	mov	w1, #0x5                   	// #5
   15d10:	ldr	w0, [sp, #52]
   15d14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15d18:	str	w0, [sp, #3772]
   15d1c:	ldr	x3, [sp, #24]
   15d20:	ldr	x2, [sp, #32]
   15d24:	ldr	w1, [sp, #3772]
   15d28:	ldr	x0, [sp, #40]
   15d2c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   15d30:	mov	w1, w0
   15d34:	add	x0, sp, #0x3c
   15d38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15d3c:	and	w0, w0, #0xff
   15d40:	eor	w0, w0, #0x1
   15d44:	and	w0, w0, #0xff
   15d48:	cmp	w0, #0x0
   15d4c:	b.eq	15d58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10de8>  // b.none
   15d50:	mov	w0, #0x0                   	// #0
   15d54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15d58:	mov	w2, #0x5                   	// #5
   15d5c:	mov	w1, #0x10                  	// #16
   15d60:	ldr	w0, [sp, #52]
   15d64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15d68:	str	w0, [sp, #3772]
   15d6c:	ldr	x3, [sp, #24]
   15d70:	ldr	x2, [sp, #32]
   15d74:	ldr	w1, [sp, #3772]
   15d78:	ldr	x0, [sp, #40]
   15d7c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   15d80:	mov	w1, w0
   15d84:	add	x0, sp, #0x3c
   15d88:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15d8c:	and	w0, w0, #0xff
   15d90:	eor	w0, w0, #0x1
   15d94:	and	w0, w0, #0xff
   15d98:	cmp	w0, #0x0
   15d9c:	b.eq	15da8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10e38>  // b.none
   15da0:	mov	w0, #0x0                   	// #0
   15da4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15da8:	ldr	w0, [sp, #60]
   15dac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15db0:	mov	w2, #0x5                   	// #5
   15db4:	mov	w1, #0x5                   	// #5
   15db8:	ldr	w0, [sp, #52]
   15dbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15dc0:	str	w0, [sp, #3772]
   15dc4:	ldr	x3, [sp, #24]
   15dc8:	ldr	x2, [sp, #32]
   15dcc:	ldr	w1, [sp, #3772]
   15dd0:	ldr	x0, [sp, #40]
   15dd4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   15dd8:	mov	w1, w0
   15ddc:	add	x0, sp, #0x3c
   15de0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15de4:	and	w0, w0, #0xff
   15de8:	eor	w0, w0, #0x1
   15dec:	and	w0, w0, #0xff
   15df0:	cmp	w0, #0x0
   15df4:	b.eq	15e00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10e90>  // b.none
   15df8:	mov	w0, #0x0                   	// #0
   15dfc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15e00:	mov	w2, #0x5                   	// #5
   15e04:	mov	w1, #0x0                   	// #0
   15e08:	ldr	w0, [sp, #52]
   15e0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15e10:	str	w0, [sp, #3772]
   15e14:	ldr	x3, [sp, #24]
   15e18:	ldr	x2, [sp, #32]
   15e1c:	ldr	w1, [sp, #3772]
   15e20:	ldr	x0, [sp, #40]
   15e24:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   15e28:	mov	w1, w0
   15e2c:	add	x0, sp, #0x3c
   15e30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15e34:	and	w0, w0, #0xff
   15e38:	eor	w0, w0, #0x1
   15e3c:	and	w0, w0, #0xff
   15e40:	cmp	w0, #0x0
   15e44:	b.eq	15e50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10ee0>  // b.none
   15e48:	mov	w0, #0x0                   	// #0
   15e4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15e50:	mov	w2, #0x5                   	// #5
   15e54:	mov	w1, #0x0                   	// #0
   15e58:	ldr	w0, [sp, #52]
   15e5c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15e60:	str	w0, [sp, #3772]
   15e64:	ldr	x3, [sp, #24]
   15e68:	ldr	x2, [sp, #32]
   15e6c:	ldr	w1, [sp, #3772]
   15e70:	ldr	x0, [sp, #40]
   15e74:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   15e78:	mov	w1, w0
   15e7c:	add	x0, sp, #0x3c
   15e80:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15e84:	and	w0, w0, #0xff
   15e88:	eor	w0, w0, #0x1
   15e8c:	and	w0, w0, #0xff
   15e90:	cmp	w0, #0x0
   15e94:	b.eq	15ea0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10f30>  // b.none
   15e98:	mov	w0, #0x0                   	// #0
   15e9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15ea0:	str	wzr, [sp, #3772]
   15ea4:	mov	w2, #0x3                   	// #3
   15ea8:	mov	w1, #0xa                   	// #10
   15eac:	ldr	w0, [sp, #52]
   15eb0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15eb4:	mov	w1, w0
   15eb8:	ldr	w0, [sp, #3772]
   15ebc:	orr	w0, w0, w1
   15ec0:	str	w0, [sp, #3772]
   15ec4:	mov	w2, #0x1                   	// #1
   15ec8:	mov	w1, #0x1e                  	// #30
   15ecc:	ldr	w0, [sp, #52]
   15ed0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15ed4:	lsl	w0, w0, #3
   15ed8:	ldr	w1, [sp, #3772]
   15edc:	orr	w0, w1, w0
   15ee0:	str	w0, [sp, #3772]
   15ee4:	ldr	w0, [sp, #3772]
   15ee8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   15eec:	add	x2, sp, #0x600
   15ef0:	stp	x0, x1, [x2, #8]
   15ef4:	add	x0, sp, #0x608
   15ef8:	mov	x1, x0
   15efc:	ldr	x0, [sp, #40]
   15f00:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   15f04:	mov	w2, #0x5                   	// #5
   15f08:	mov	w1, #0x5                   	// #5
   15f0c:	ldr	w0, [sp, #52]
   15f10:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15f14:	str	w0, [sp, #3772]
   15f18:	ldr	x3, [sp, #24]
   15f1c:	ldr	x2, [sp, #32]
   15f20:	ldr	w1, [sp, #3772]
   15f24:	ldr	x0, [sp, #40]
   15f28:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   15f2c:	mov	w1, w0
   15f30:	add	x0, sp, #0x3c
   15f34:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15f38:	and	w0, w0, #0xff
   15f3c:	eor	w0, w0, #0x1
   15f40:	and	w0, w0, #0xff
   15f44:	cmp	w0, #0x0
   15f48:	b.eq	15f54 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x10fe4>  // b.none
   15f4c:	mov	w0, #0x0                   	// #0
   15f50:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15f54:	mov	w2, #0x5                   	// #5
   15f58:	mov	w1, #0x10                  	// #16
   15f5c:	ldr	w0, [sp, #52]
   15f60:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15f64:	str	w0, [sp, #3772]
   15f68:	ldr	x3, [sp, #24]
   15f6c:	ldr	x2, [sp, #32]
   15f70:	ldr	w1, [sp, #3772]
   15f74:	ldr	x0, [sp, #40]
   15f78:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   15f7c:	mov	w1, w0
   15f80:	add	x0, sp, #0x3c
   15f84:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15f88:	and	w0, w0, #0xff
   15f8c:	eor	w0, w0, #0x1
   15f90:	and	w0, w0, #0xff
   15f94:	cmp	w0, #0x0
   15f98:	b.eq	15fa4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11034>  // b.none
   15f9c:	mov	w0, #0x0                   	// #0
   15fa0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15fa4:	ldr	w0, [sp, #60]
   15fa8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15fac:	mov	w2, #0x5                   	// #5
   15fb0:	mov	w1, #0x5                   	// #5
   15fb4:	ldr	w0, [sp, #52]
   15fb8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   15fbc:	str	w0, [sp, #3772]
   15fc0:	ldr	x3, [sp, #24]
   15fc4:	ldr	x2, [sp, #32]
   15fc8:	ldr	w1, [sp, #3772]
   15fcc:	ldr	x0, [sp, #40]
   15fd0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   15fd4:	mov	w1, w0
   15fd8:	add	x0, sp, #0x3c
   15fdc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   15fe0:	and	w0, w0, #0xff
   15fe4:	eor	w0, w0, #0x1
   15fe8:	and	w0, w0, #0xff
   15fec:	cmp	w0, #0x0
   15ff0:	b.eq	15ffc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1108c>  // b.none
   15ff4:	mov	w0, #0x0                   	// #0
   15ff8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   15ffc:	mov	w2, #0x5                   	// #5
   16000:	mov	w1, #0x0                   	// #0
   16004:	ldr	w0, [sp, #52]
   16008:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1600c:	str	w0, [sp, #3772]
   16010:	ldr	x3, [sp, #24]
   16014:	ldr	x2, [sp, #32]
   16018:	ldr	w1, [sp, #3772]
   1601c:	ldr	x0, [sp, #40]
   16020:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   16024:	mov	w1, w0
   16028:	add	x0, sp, #0x3c
   1602c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16030:	and	w0, w0, #0xff
   16034:	eor	w0, w0, #0x1
   16038:	and	w0, w0, #0xff
   1603c:	cmp	w0, #0x0
   16040:	b.eq	1604c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x110dc>  // b.none
   16044:	mov	w0, #0x0                   	// #0
   16048:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1604c:	mov	w2, #0x5                   	// #5
   16050:	mov	w1, #0x0                   	// #0
   16054:	ldr	w0, [sp, #52]
   16058:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1605c:	str	w0, [sp, #3772]
   16060:	ldr	x3, [sp, #24]
   16064:	ldr	x2, [sp, #32]
   16068:	ldr	w1, [sp, #3772]
   1606c:	ldr	x0, [sp, #40]
   16070:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   16074:	mov	w1, w0
   16078:	add	x0, sp, #0x3c
   1607c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16080:	and	w0, w0, #0xff
   16084:	eor	w0, w0, #0x1
   16088:	and	w0, w0, #0xff
   1608c:	cmp	w0, #0x0
   16090:	b.eq	1609c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1112c>  // b.none
   16094:	mov	w0, #0x0                   	// #0
   16098:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1609c:	str	wzr, [sp, #3772]
   160a0:	mov	w2, #0x3                   	// #3
   160a4:	mov	w1, #0xa                   	// #10
   160a8:	ldr	w0, [sp, #52]
   160ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   160b0:	mov	w1, w0
   160b4:	ldr	w0, [sp, #3772]
   160b8:	orr	w0, w0, w1
   160bc:	str	w0, [sp, #3772]
   160c0:	mov	w2, #0x1                   	// #1
   160c4:	mov	w1, #0x1e                  	// #30
   160c8:	ldr	w0, [sp, #52]
   160cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   160d0:	lsl	w0, w0, #3
   160d4:	ldr	w1, [sp, #3772]
   160d8:	orr	w0, w1, w0
   160dc:	str	w0, [sp, #3772]
   160e0:	ldr	w0, [sp, #3772]
   160e4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   160e8:	add	x2, sp, #0x600
   160ec:	stp	x0, x1, [x2, #24]
   160f0:	add	x0, sp, #0x618
   160f4:	mov	x1, x0
   160f8:	ldr	x0, [sp, #40]
   160fc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   16100:	mov	w2, #0x5                   	// #5
   16104:	mov	w1, #0x5                   	// #5
   16108:	ldr	w0, [sp, #52]
   1610c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16110:	str	w0, [sp, #3772]
   16114:	ldr	x3, [sp, #24]
   16118:	ldr	x2, [sp, #32]
   1611c:	ldr	w1, [sp, #3772]
   16120:	ldr	x0, [sp, #40]
   16124:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   16128:	mov	w1, w0
   1612c:	add	x0, sp, #0x3c
   16130:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16134:	and	w0, w0, #0xff
   16138:	eor	w0, w0, #0x1
   1613c:	and	w0, w0, #0xff
   16140:	cmp	w0, #0x0
   16144:	b.eq	16150 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x111e0>  // b.none
   16148:	mov	w0, #0x0                   	// #0
   1614c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16150:	mov	w2, #0x5                   	// #5
   16154:	mov	w1, #0x10                  	// #16
   16158:	ldr	w0, [sp, #52]
   1615c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16160:	str	w0, [sp, #3772]
   16164:	ldr	x3, [sp, #24]
   16168:	ldr	x2, [sp, #32]
   1616c:	ldr	w1, [sp, #3772]
   16170:	ldr	x0, [sp, #40]
   16174:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   16178:	mov	w1, w0
   1617c:	add	x0, sp, #0x3c
   16180:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16184:	and	w0, w0, #0xff
   16188:	eor	w0, w0, #0x1
   1618c:	and	w0, w0, #0xff
   16190:	cmp	w0, #0x0
   16194:	b.eq	161a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11230>  // b.none
   16198:	mov	w0, #0x0                   	// #0
   1619c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   161a0:	ldr	w0, [sp, #60]
   161a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   161a8:	mov	w2, #0x5                   	// #5
   161ac:	mov	w1, #0x5                   	// #5
   161b0:	ldr	w0, [sp, #52]
   161b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   161b8:	str	w0, [sp, #3772]
   161bc:	ldr	x3, [sp, #24]
   161c0:	ldr	x2, [sp, #32]
   161c4:	ldr	w1, [sp, #3772]
   161c8:	ldr	x0, [sp, #40]
   161cc:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   161d0:	mov	w1, w0
   161d4:	add	x0, sp, #0x3c
   161d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   161dc:	and	w0, w0, #0xff
   161e0:	eor	w0, w0, #0x1
   161e4:	and	w0, w0, #0xff
   161e8:	cmp	w0, #0x0
   161ec:	b.eq	161f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11288>  // b.none
   161f0:	mov	w0, #0x0                   	// #0
   161f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   161f8:	mov	w2, #0x5                   	// #5
   161fc:	mov	w1, #0x0                   	// #0
   16200:	ldr	w0, [sp, #52]
   16204:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16208:	str	w0, [sp, #3772]
   1620c:	ldr	x3, [sp, #24]
   16210:	ldr	x2, [sp, #32]
   16214:	ldr	w1, [sp, #3772]
   16218:	ldr	x0, [sp, #40]
   1621c:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   16220:	mov	w1, w0
   16224:	add	x0, sp, #0x3c
   16228:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1622c:	and	w0, w0, #0xff
   16230:	eor	w0, w0, #0x1
   16234:	and	w0, w0, #0xff
   16238:	cmp	w0, #0x0
   1623c:	b.eq	16248 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x112d8>  // b.none
   16240:	mov	w0, #0x0                   	// #0
   16244:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16248:	mov	w2, #0x5                   	// #5
   1624c:	mov	w1, #0x0                   	// #0
   16250:	ldr	w0, [sp, #52]
   16254:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16258:	str	w0, [sp, #3772]
   1625c:	ldr	x3, [sp, #24]
   16260:	ldr	x2, [sp, #32]
   16264:	ldr	w1, [sp, #3772]
   16268:	ldr	x0, [sp, #40]
   1626c:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   16270:	mov	w1, w0
   16274:	add	x0, sp, #0x3c
   16278:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1627c:	and	w0, w0, #0xff
   16280:	eor	w0, w0, #0x1
   16284:	and	w0, w0, #0xff
   16288:	cmp	w0, #0x0
   1628c:	b.eq	16298 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11328>  // b.none
   16290:	mov	w0, #0x0                   	// #0
   16294:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16298:	str	wzr, [sp, #3772]
   1629c:	mov	w2, #0x3                   	// #3
   162a0:	mov	w1, #0xa                   	// #10
   162a4:	ldr	w0, [sp, #52]
   162a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   162ac:	mov	w1, w0
   162b0:	ldr	w0, [sp, #3772]
   162b4:	orr	w0, w0, w1
   162b8:	str	w0, [sp, #3772]
   162bc:	mov	w2, #0x1                   	// #1
   162c0:	mov	w1, #0x1e                  	// #30
   162c4:	ldr	w0, [sp, #52]
   162c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   162cc:	lsl	w0, w0, #3
   162d0:	ldr	w1, [sp, #3772]
   162d4:	orr	w0, w1, w0
   162d8:	str	w0, [sp, #3772]
   162dc:	ldr	w0, [sp, #3772]
   162e0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   162e4:	add	x2, sp, #0x600
   162e8:	stp	x0, x1, [x2, #40]
   162ec:	add	x0, sp, #0x628
   162f0:	mov	x1, x0
   162f4:	ldr	x0, [sp, #40]
   162f8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   162fc:	mov	w2, #0x5                   	// #5
   16300:	mov	w1, #0x5                   	// #5
   16304:	ldr	w0, [sp, #52]
   16308:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1630c:	str	w0, [sp, #3772]
   16310:	ldr	x3, [sp, #24]
   16314:	ldr	x2, [sp, #32]
   16318:	ldr	w1, [sp, #3772]
   1631c:	ldr	x0, [sp, #40]
   16320:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   16324:	mov	w1, w0
   16328:	add	x0, sp, #0x3c
   1632c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16330:	and	w0, w0, #0xff
   16334:	eor	w0, w0, #0x1
   16338:	and	w0, w0, #0xff
   1633c:	cmp	w0, #0x0
   16340:	b.eq	1634c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x113dc>  // b.none
   16344:	mov	w0, #0x0                   	// #0
   16348:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1634c:	mov	w2, #0x5                   	// #5
   16350:	mov	w1, #0x10                  	// #16
   16354:	ldr	w0, [sp, #52]
   16358:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1635c:	str	w0, [sp, #3772]
   16360:	ldr	x3, [sp, #24]
   16364:	ldr	x2, [sp, #32]
   16368:	ldr	w1, [sp, #3772]
   1636c:	ldr	x0, [sp, #40]
   16370:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   16374:	mov	w1, w0
   16378:	add	x0, sp, #0x3c
   1637c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16380:	and	w0, w0, #0xff
   16384:	eor	w0, w0, #0x1
   16388:	and	w0, w0, #0xff
   1638c:	cmp	w0, #0x0
   16390:	b.eq	1639c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1142c>  // b.none
   16394:	mov	w0, #0x0                   	// #0
   16398:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1639c:	ldr	w0, [sp, #60]
   163a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   163a4:	mov	w2, #0x5                   	// #5
   163a8:	mov	w1, #0x5                   	// #5
   163ac:	ldr	w0, [sp, #52]
   163b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   163b4:	str	w0, [sp, #3772]
   163b8:	ldr	x3, [sp, #24]
   163bc:	ldr	x2, [sp, #32]
   163c0:	ldr	w1, [sp, #3772]
   163c4:	ldr	x0, [sp, #40]
   163c8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   163cc:	mov	w1, w0
   163d0:	add	x0, sp, #0x3c
   163d4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   163d8:	and	w0, w0, #0xff
   163dc:	eor	w0, w0, #0x1
   163e0:	and	w0, w0, #0xff
   163e4:	cmp	w0, #0x0
   163e8:	b.eq	163f4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11484>  // b.none
   163ec:	mov	w0, #0x0                   	// #0
   163f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   163f4:	mov	w2, #0x5                   	// #5
   163f8:	mov	w1, #0x0                   	// #0
   163fc:	ldr	w0, [sp, #52]
   16400:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16404:	str	w0, [sp, #3772]
   16408:	ldr	x3, [sp, #24]
   1640c:	ldr	x2, [sp, #32]
   16410:	ldr	w1, [sp, #3772]
   16414:	ldr	x0, [sp, #40]
   16418:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   1641c:	mov	w1, w0
   16420:	add	x0, sp, #0x3c
   16424:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16428:	and	w0, w0, #0xff
   1642c:	eor	w0, w0, #0x1
   16430:	and	w0, w0, #0xff
   16434:	cmp	w0, #0x0
   16438:	b.eq	16444 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x114d4>  // b.none
   1643c:	mov	w0, #0x0                   	// #0
   16440:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16444:	mov	w2, #0x5                   	// #5
   16448:	mov	w1, #0x0                   	// #0
   1644c:	ldr	w0, [sp, #52]
   16450:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16454:	str	w0, [sp, #3772]
   16458:	ldr	x3, [sp, #24]
   1645c:	ldr	x2, [sp, #32]
   16460:	ldr	w1, [sp, #3772]
   16464:	ldr	x0, [sp, #40]
   16468:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   1646c:	mov	w1, w0
   16470:	add	x0, sp, #0x3c
   16474:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16478:	and	w0, w0, #0xff
   1647c:	eor	w0, w0, #0x1
   16480:	and	w0, w0, #0xff
   16484:	cmp	w0, #0x0
   16488:	b.eq	16494 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11524>  // b.none
   1648c:	mov	w0, #0x0                   	// #0
   16490:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16494:	str	wzr, [sp, #3772]
   16498:	mov	w2, #0x3                   	// #3
   1649c:	mov	w1, #0xa                   	// #10
   164a0:	ldr	w0, [sp, #52]
   164a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   164a8:	mov	w1, w0
   164ac:	ldr	w0, [sp, #3772]
   164b0:	orr	w0, w0, w1
   164b4:	str	w0, [sp, #3772]
   164b8:	mov	w2, #0x1                   	// #1
   164bc:	mov	w1, #0x1e                  	// #30
   164c0:	ldr	w0, [sp, #52]
   164c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   164c8:	lsl	w0, w0, #3
   164cc:	ldr	w1, [sp, #3772]
   164d0:	orr	w0, w1, w0
   164d4:	str	w0, [sp, #3772]
   164d8:	ldr	w0, [sp, #3772]
   164dc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   164e0:	add	x2, sp, #0x600
   164e4:	stp	x0, x1, [x2, #56]
   164e8:	add	x0, sp, #0x638
   164ec:	mov	x1, x0
   164f0:	ldr	x0, [sp, #40]
   164f4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   164f8:	mov	w2, #0x5                   	// #5
   164fc:	mov	w1, #0x5                   	// #5
   16500:	ldr	w0, [sp, #52]
   16504:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16508:	str	w0, [sp, #3772]
   1650c:	ldr	x3, [sp, #24]
   16510:	ldr	x2, [sp, #32]
   16514:	ldr	w1, [sp, #3772]
   16518:	ldr	x0, [sp, #40]
   1651c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   16520:	mov	w1, w0
   16524:	add	x0, sp, #0x3c
   16528:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1652c:	and	w0, w0, #0xff
   16530:	eor	w0, w0, #0x1
   16534:	and	w0, w0, #0xff
   16538:	cmp	w0, #0x0
   1653c:	b.eq	16548 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x115d8>  // b.none
   16540:	mov	w0, #0x0                   	// #0
   16544:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16548:	mov	w2, #0x5                   	// #5
   1654c:	mov	w1, #0x10                  	// #16
   16550:	ldr	w0, [sp, #52]
   16554:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16558:	str	w0, [sp, #3772]
   1655c:	ldr	x3, [sp, #24]
   16560:	ldr	x2, [sp, #32]
   16564:	ldr	w1, [sp, #3772]
   16568:	ldr	x0, [sp, #40]
   1656c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   16570:	mov	w1, w0
   16574:	add	x0, sp, #0x3c
   16578:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1657c:	and	w0, w0, #0xff
   16580:	eor	w0, w0, #0x1
   16584:	and	w0, w0, #0xff
   16588:	cmp	w0, #0x0
   1658c:	b.eq	16598 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11628>  // b.none
   16590:	mov	w0, #0x0                   	// #0
   16594:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16598:	ldr	w0, [sp, #60]
   1659c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   165a0:	mov	w2, #0x5                   	// #5
   165a4:	mov	w1, #0x5                   	// #5
   165a8:	ldr	w0, [sp, #52]
   165ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   165b0:	str	w0, [sp, #3772]
   165b4:	ldr	x3, [sp, #24]
   165b8:	ldr	x2, [sp, #32]
   165bc:	ldr	w1, [sp, #3772]
   165c0:	ldr	x0, [sp, #40]
   165c4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   165c8:	mov	w1, w0
   165cc:	add	x0, sp, #0x3c
   165d0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   165d4:	and	w0, w0, #0xff
   165d8:	eor	w0, w0, #0x1
   165dc:	and	w0, w0, #0xff
   165e0:	cmp	w0, #0x0
   165e4:	b.eq	165f0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11680>  // b.none
   165e8:	mov	w0, #0x0                   	// #0
   165ec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   165f0:	mov	w2, #0x5                   	// #5
   165f4:	mov	w1, #0x0                   	// #0
   165f8:	ldr	w0, [sp, #52]
   165fc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16600:	str	w0, [sp, #3772]
   16604:	ldr	x3, [sp, #24]
   16608:	ldr	x2, [sp, #32]
   1660c:	ldr	w1, [sp, #3772]
   16610:	ldr	x0, [sp, #40]
   16614:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   16618:	mov	w1, w0
   1661c:	add	x0, sp, #0x3c
   16620:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16624:	and	w0, w0, #0xff
   16628:	eor	w0, w0, #0x1
   1662c:	and	w0, w0, #0xff
   16630:	cmp	w0, #0x0
   16634:	b.eq	16640 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x116d0>  // b.none
   16638:	mov	w0, #0x0                   	// #0
   1663c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16640:	mov	w2, #0x5                   	// #5
   16644:	mov	w1, #0x0                   	// #0
   16648:	ldr	w0, [sp, #52]
   1664c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16650:	str	w0, [sp, #3772]
   16654:	ldr	x3, [sp, #24]
   16658:	ldr	x2, [sp, #32]
   1665c:	ldr	w1, [sp, #3772]
   16660:	ldr	x0, [sp, #40]
   16664:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   16668:	mov	w1, w0
   1666c:	add	x0, sp, #0x3c
   16670:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16674:	and	w0, w0, #0xff
   16678:	eor	w0, w0, #0x1
   1667c:	and	w0, w0, #0xff
   16680:	cmp	w0, #0x0
   16684:	b.eq	16690 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11720>  // b.none
   16688:	mov	w0, #0x0                   	// #0
   1668c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16690:	str	wzr, [sp, #3772]
   16694:	mov	w2, #0x2                   	// #2
   16698:	mov	w1, #0xb                   	// #11
   1669c:	ldr	w0, [sp, #52]
   166a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   166a4:	mov	w1, w0
   166a8:	ldr	w0, [sp, #3772]
   166ac:	orr	w0, w0, w1
   166b0:	str	w0, [sp, #3772]
   166b4:	mov	w2, #0x1                   	// #1
   166b8:	mov	w1, #0x1e                  	// #30
   166bc:	ldr	w0, [sp, #52]
   166c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   166c4:	lsl	w0, w0, #2
   166c8:	ldr	w1, [sp, #3772]
   166cc:	orr	w0, w1, w0
   166d0:	str	w0, [sp, #3772]
   166d4:	ldr	w0, [sp, #3772]
   166d8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   166dc:	add	x2, sp, #0x600
   166e0:	stp	x0, x1, [x2, #72]
   166e4:	add	x0, sp, #0x648
   166e8:	mov	x1, x0
   166ec:	ldr	x0, [sp, #40]
   166f0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   166f4:	mov	w2, #0x5                   	// #5
   166f8:	mov	w1, #0x5                   	// #5
   166fc:	ldr	w0, [sp, #52]
   16700:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16704:	str	w0, [sp, #3772]
   16708:	ldr	x3, [sp, #24]
   1670c:	ldr	x2, [sp, #32]
   16710:	ldr	w1, [sp, #3772]
   16714:	ldr	x0, [sp, #40]
   16718:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   1671c:	mov	w1, w0
   16720:	add	x0, sp, #0x3c
   16724:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16728:	and	w0, w0, #0xff
   1672c:	eor	w0, w0, #0x1
   16730:	and	w0, w0, #0xff
   16734:	cmp	w0, #0x0
   16738:	b.eq	16744 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x117d4>  // b.none
   1673c:	mov	w0, #0x0                   	// #0
   16740:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16744:	mov	w2, #0x5                   	// #5
   16748:	mov	w1, #0x10                  	// #16
   1674c:	ldr	w0, [sp, #52]
   16750:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16754:	str	w0, [sp, #3772]
   16758:	ldr	x3, [sp, #24]
   1675c:	ldr	x2, [sp, #32]
   16760:	ldr	w1, [sp, #3772]
   16764:	ldr	x0, [sp, #40]
   16768:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1676c:	mov	w1, w0
   16770:	add	x0, sp, #0x3c
   16774:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16778:	and	w0, w0, #0xff
   1677c:	eor	w0, w0, #0x1
   16780:	and	w0, w0, #0xff
   16784:	cmp	w0, #0x0
   16788:	b.eq	16794 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11824>  // b.none
   1678c:	mov	w0, #0x0                   	// #0
   16790:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16794:	ldr	w0, [sp, #60]
   16798:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1679c:	mov	w2, #0x5                   	// #5
   167a0:	mov	w1, #0x5                   	// #5
   167a4:	ldr	w0, [sp, #52]
   167a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   167ac:	str	w0, [sp, #3772]
   167b0:	ldr	x3, [sp, #24]
   167b4:	ldr	x2, [sp, #32]
   167b8:	ldr	w1, [sp, #3772]
   167bc:	ldr	x0, [sp, #40]
   167c0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   167c4:	mov	w1, w0
   167c8:	add	x0, sp, #0x3c
   167cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   167d0:	and	w0, w0, #0xff
   167d4:	eor	w0, w0, #0x1
   167d8:	and	w0, w0, #0xff
   167dc:	cmp	w0, #0x0
   167e0:	b.eq	167ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1187c>  // b.none
   167e4:	mov	w0, #0x0                   	// #0
   167e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   167ec:	mov	w2, #0x5                   	// #5
   167f0:	mov	w1, #0x0                   	// #0
   167f4:	ldr	w0, [sp, #52]
   167f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   167fc:	str	w0, [sp, #3772]
   16800:	ldr	x3, [sp, #24]
   16804:	ldr	x2, [sp, #32]
   16808:	ldr	w1, [sp, #3772]
   1680c:	ldr	x0, [sp, #40]
   16810:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   16814:	mov	w1, w0
   16818:	add	x0, sp, #0x3c
   1681c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16820:	and	w0, w0, #0xff
   16824:	eor	w0, w0, #0x1
   16828:	and	w0, w0, #0xff
   1682c:	cmp	w0, #0x0
   16830:	b.eq	1683c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x118cc>  // b.none
   16834:	mov	w0, #0x0                   	// #0
   16838:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1683c:	mov	w2, #0x5                   	// #5
   16840:	mov	w1, #0x0                   	// #0
   16844:	ldr	w0, [sp, #52]
   16848:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1684c:	str	w0, [sp, #3772]
   16850:	ldr	x3, [sp, #24]
   16854:	ldr	x2, [sp, #32]
   16858:	ldr	w1, [sp, #3772]
   1685c:	ldr	x0, [sp, #40]
   16860:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   16864:	mov	w1, w0
   16868:	add	x0, sp, #0x3c
   1686c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16870:	and	w0, w0, #0xff
   16874:	eor	w0, w0, #0x1
   16878:	and	w0, w0, #0xff
   1687c:	cmp	w0, #0x0
   16880:	b.eq	1688c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1191c>  // b.none
   16884:	mov	w0, #0x0                   	// #0
   16888:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1688c:	str	wzr, [sp, #3772]
   16890:	mov	w2, #0x2                   	// #2
   16894:	mov	w1, #0xb                   	// #11
   16898:	ldr	w0, [sp, #52]
   1689c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   168a0:	mov	w1, w0
   168a4:	ldr	w0, [sp, #3772]
   168a8:	orr	w0, w0, w1
   168ac:	str	w0, [sp, #3772]
   168b0:	mov	w2, #0x1                   	// #1
   168b4:	mov	w1, #0x1e                  	// #30
   168b8:	ldr	w0, [sp, #52]
   168bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   168c0:	lsl	w0, w0, #2
   168c4:	ldr	w1, [sp, #3772]
   168c8:	orr	w0, w1, w0
   168cc:	str	w0, [sp, #3772]
   168d0:	ldr	w0, [sp, #3772]
   168d4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   168d8:	add	x2, sp, #0x600
   168dc:	stp	x0, x1, [x2, #88]
   168e0:	add	x0, sp, #0x658
   168e4:	mov	x1, x0
   168e8:	ldr	x0, [sp, #40]
   168ec:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   168f0:	mov	w2, #0x5                   	// #5
   168f4:	mov	w1, #0x5                   	// #5
   168f8:	ldr	w0, [sp, #52]
   168fc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16900:	str	w0, [sp, #3772]
   16904:	ldr	x3, [sp, #24]
   16908:	ldr	x2, [sp, #32]
   1690c:	ldr	w1, [sp, #3772]
   16910:	ldr	x0, [sp, #40]
   16914:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   16918:	mov	w1, w0
   1691c:	add	x0, sp, #0x3c
   16920:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16924:	and	w0, w0, #0xff
   16928:	eor	w0, w0, #0x1
   1692c:	and	w0, w0, #0xff
   16930:	cmp	w0, #0x0
   16934:	b.eq	16940 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x119d0>  // b.none
   16938:	mov	w0, #0x0                   	// #0
   1693c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16940:	mov	w2, #0x5                   	// #5
   16944:	mov	w1, #0x10                  	// #16
   16948:	ldr	w0, [sp, #52]
   1694c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16950:	str	w0, [sp, #3772]
   16954:	ldr	x3, [sp, #24]
   16958:	ldr	x2, [sp, #32]
   1695c:	ldr	w1, [sp, #3772]
   16960:	ldr	x0, [sp, #40]
   16964:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   16968:	mov	w1, w0
   1696c:	add	x0, sp, #0x3c
   16970:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16974:	and	w0, w0, #0xff
   16978:	eor	w0, w0, #0x1
   1697c:	and	w0, w0, #0xff
   16980:	cmp	w0, #0x0
   16984:	b.eq	16990 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11a20>  // b.none
   16988:	mov	w0, #0x0                   	// #0
   1698c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16990:	ldr	w0, [sp, #60]
   16994:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16998:	mov	w2, #0x5                   	// #5
   1699c:	mov	w1, #0x5                   	// #5
   169a0:	ldr	w0, [sp, #52]
   169a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   169a8:	str	w0, [sp, #3772]
   169ac:	ldr	x3, [sp, #24]
   169b0:	ldr	x2, [sp, #32]
   169b4:	ldr	w1, [sp, #3772]
   169b8:	ldr	x0, [sp, #40]
   169bc:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   169c0:	mov	w1, w0
   169c4:	add	x0, sp, #0x3c
   169c8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   169cc:	and	w0, w0, #0xff
   169d0:	eor	w0, w0, #0x1
   169d4:	and	w0, w0, #0xff
   169d8:	cmp	w0, #0x0
   169dc:	b.eq	169e8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11a78>  // b.none
   169e0:	mov	w0, #0x0                   	// #0
   169e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   169e8:	mov	w2, #0x5                   	// #5
   169ec:	mov	w1, #0x0                   	// #0
   169f0:	ldr	w0, [sp, #52]
   169f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   169f8:	str	w0, [sp, #3772]
   169fc:	ldr	x3, [sp, #24]
   16a00:	ldr	x2, [sp, #32]
   16a04:	ldr	w1, [sp, #3772]
   16a08:	ldr	x0, [sp, #40]
   16a0c:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   16a10:	mov	w1, w0
   16a14:	add	x0, sp, #0x3c
   16a18:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16a1c:	and	w0, w0, #0xff
   16a20:	eor	w0, w0, #0x1
   16a24:	and	w0, w0, #0xff
   16a28:	cmp	w0, #0x0
   16a2c:	b.eq	16a38 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11ac8>  // b.none
   16a30:	mov	w0, #0x0                   	// #0
   16a34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16a38:	mov	w2, #0x5                   	// #5
   16a3c:	mov	w1, #0x0                   	// #0
   16a40:	ldr	w0, [sp, #52]
   16a44:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16a48:	str	w0, [sp, #3772]
   16a4c:	ldr	x3, [sp, #24]
   16a50:	ldr	x2, [sp, #32]
   16a54:	ldr	w1, [sp, #3772]
   16a58:	ldr	x0, [sp, #40]
   16a5c:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   16a60:	mov	w1, w0
   16a64:	add	x0, sp, #0x3c
   16a68:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16a6c:	and	w0, w0, #0xff
   16a70:	eor	w0, w0, #0x1
   16a74:	and	w0, w0, #0xff
   16a78:	cmp	w0, #0x0
   16a7c:	b.eq	16a88 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11b18>  // b.none
   16a80:	mov	w0, #0x0                   	// #0
   16a84:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16a88:	str	wzr, [sp, #3772]
   16a8c:	mov	w2, #0x2                   	// #2
   16a90:	mov	w1, #0xb                   	// #11
   16a94:	ldr	w0, [sp, #52]
   16a98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16a9c:	mov	w1, w0
   16aa0:	ldr	w0, [sp, #3772]
   16aa4:	orr	w0, w0, w1
   16aa8:	str	w0, [sp, #3772]
   16aac:	mov	w2, #0x1                   	// #1
   16ab0:	mov	w1, #0x1e                  	// #30
   16ab4:	ldr	w0, [sp, #52]
   16ab8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16abc:	lsl	w0, w0, #2
   16ac0:	ldr	w1, [sp, #3772]
   16ac4:	orr	w0, w1, w0
   16ac8:	str	w0, [sp, #3772]
   16acc:	ldr	w0, [sp, #3772]
   16ad0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   16ad4:	add	x2, sp, #0x600
   16ad8:	stp	x0, x1, [x2, #104]
   16adc:	add	x0, sp, #0x668
   16ae0:	mov	x1, x0
   16ae4:	ldr	x0, [sp, #40]
   16ae8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   16aec:	mov	w2, #0x5                   	// #5
   16af0:	mov	w1, #0x5                   	// #5
   16af4:	ldr	w0, [sp, #52]
   16af8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16afc:	str	w0, [sp, #3772]
   16b00:	ldr	x3, [sp, #24]
   16b04:	ldr	x2, [sp, #32]
   16b08:	ldr	w1, [sp, #3772]
   16b0c:	ldr	x0, [sp, #40]
   16b10:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   16b14:	mov	w1, w0
   16b18:	add	x0, sp, #0x3c
   16b1c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16b20:	and	w0, w0, #0xff
   16b24:	eor	w0, w0, #0x1
   16b28:	and	w0, w0, #0xff
   16b2c:	cmp	w0, #0x0
   16b30:	b.eq	16b3c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11bcc>  // b.none
   16b34:	mov	w0, #0x0                   	// #0
   16b38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16b3c:	mov	w2, #0x5                   	// #5
   16b40:	mov	w1, #0x10                  	// #16
   16b44:	ldr	w0, [sp, #52]
   16b48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16b4c:	str	w0, [sp, #3772]
   16b50:	ldr	x3, [sp, #24]
   16b54:	ldr	x2, [sp, #32]
   16b58:	ldr	w1, [sp, #3772]
   16b5c:	ldr	x0, [sp, #40]
   16b60:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   16b64:	mov	w1, w0
   16b68:	add	x0, sp, #0x3c
   16b6c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16b70:	and	w0, w0, #0xff
   16b74:	eor	w0, w0, #0x1
   16b78:	and	w0, w0, #0xff
   16b7c:	cmp	w0, #0x0
   16b80:	b.eq	16b8c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11c1c>  // b.none
   16b84:	mov	w0, #0x0                   	// #0
   16b88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16b8c:	ldr	w0, [sp, #60]
   16b90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16b94:	mov	w2, #0x5                   	// #5
   16b98:	mov	w1, #0x5                   	// #5
   16b9c:	ldr	w0, [sp, #52]
   16ba0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16ba4:	str	w0, [sp, #3772]
   16ba8:	ldr	x3, [sp, #24]
   16bac:	ldr	x2, [sp, #32]
   16bb0:	ldr	w1, [sp, #3772]
   16bb4:	ldr	x0, [sp, #40]
   16bb8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   16bbc:	mov	w1, w0
   16bc0:	add	x0, sp, #0x3c
   16bc4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16bc8:	and	w0, w0, #0xff
   16bcc:	eor	w0, w0, #0x1
   16bd0:	and	w0, w0, #0xff
   16bd4:	cmp	w0, #0x0
   16bd8:	b.eq	16be4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11c74>  // b.none
   16bdc:	mov	w0, #0x0                   	// #0
   16be0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16be4:	mov	w2, #0x5                   	// #5
   16be8:	mov	w1, #0x0                   	// #0
   16bec:	ldr	w0, [sp, #52]
   16bf0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16bf4:	str	w0, [sp, #3772]
   16bf8:	ldr	x3, [sp, #24]
   16bfc:	ldr	x2, [sp, #32]
   16c00:	ldr	w1, [sp, #3772]
   16c04:	ldr	x0, [sp, #40]
   16c08:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   16c0c:	mov	w1, w0
   16c10:	add	x0, sp, #0x3c
   16c14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16c18:	and	w0, w0, #0xff
   16c1c:	eor	w0, w0, #0x1
   16c20:	and	w0, w0, #0xff
   16c24:	cmp	w0, #0x0
   16c28:	b.eq	16c34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11cc4>  // b.none
   16c2c:	mov	w0, #0x0                   	// #0
   16c30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16c34:	mov	w2, #0x5                   	// #5
   16c38:	mov	w1, #0x0                   	// #0
   16c3c:	ldr	w0, [sp, #52]
   16c40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16c44:	str	w0, [sp, #3772]
   16c48:	ldr	x3, [sp, #24]
   16c4c:	ldr	x2, [sp, #32]
   16c50:	ldr	w1, [sp, #3772]
   16c54:	ldr	x0, [sp, #40]
   16c58:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   16c5c:	mov	w1, w0
   16c60:	add	x0, sp, #0x3c
   16c64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16c68:	and	w0, w0, #0xff
   16c6c:	eor	w0, w0, #0x1
   16c70:	and	w0, w0, #0xff
   16c74:	cmp	w0, #0x0
   16c78:	b.eq	16c84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11d14>  // b.none
   16c7c:	mov	w0, #0x0                   	// #0
   16c80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16c84:	str	wzr, [sp, #3772]
   16c88:	mov	w2, #0x2                   	// #2
   16c8c:	mov	w1, #0xb                   	// #11
   16c90:	ldr	w0, [sp, #52]
   16c94:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16c98:	mov	w1, w0
   16c9c:	ldr	w0, [sp, #3772]
   16ca0:	orr	w0, w0, w1
   16ca4:	str	w0, [sp, #3772]
   16ca8:	mov	w2, #0x1                   	// #1
   16cac:	mov	w1, #0x1e                  	// #30
   16cb0:	ldr	w0, [sp, #52]
   16cb4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16cb8:	lsl	w0, w0, #2
   16cbc:	ldr	w1, [sp, #3772]
   16cc0:	orr	w0, w1, w0
   16cc4:	str	w0, [sp, #3772]
   16cc8:	ldr	w0, [sp, #3772]
   16ccc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   16cd0:	add	x2, sp, #0x600
   16cd4:	stp	x0, x1, [x2, #120]
   16cd8:	add	x0, sp, #0x678
   16cdc:	mov	x1, x0
   16ce0:	ldr	x0, [sp, #40]
   16ce4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   16ce8:	mov	w2, #0x5                   	// #5
   16cec:	mov	w1, #0x5                   	// #5
   16cf0:	ldr	w0, [sp, #52]
   16cf4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16cf8:	str	w0, [sp, #3772]
   16cfc:	ldr	x3, [sp, #24]
   16d00:	ldr	x2, [sp, #32]
   16d04:	ldr	w1, [sp, #3772]
   16d08:	ldr	x0, [sp, #40]
   16d0c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   16d10:	mov	w1, w0
   16d14:	add	x0, sp, #0x3c
   16d18:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16d1c:	and	w0, w0, #0xff
   16d20:	eor	w0, w0, #0x1
   16d24:	and	w0, w0, #0xff
   16d28:	cmp	w0, #0x0
   16d2c:	b.eq	16d38 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11dc8>  // b.none
   16d30:	mov	w0, #0x0                   	// #0
   16d34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16d38:	mov	w2, #0x5                   	// #5
   16d3c:	mov	w1, #0x10                  	// #16
   16d40:	ldr	w0, [sp, #52]
   16d44:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16d48:	str	w0, [sp, #3772]
   16d4c:	ldr	x3, [sp, #24]
   16d50:	ldr	x2, [sp, #32]
   16d54:	ldr	w1, [sp, #3772]
   16d58:	ldr	x0, [sp, #40]
   16d5c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   16d60:	mov	w1, w0
   16d64:	add	x0, sp, #0x3c
   16d68:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16d6c:	and	w0, w0, #0xff
   16d70:	eor	w0, w0, #0x1
   16d74:	and	w0, w0, #0xff
   16d78:	cmp	w0, #0x0
   16d7c:	b.eq	16d88 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11e18>  // b.none
   16d80:	mov	w0, #0x0                   	// #0
   16d84:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16d88:	ldr	w0, [sp, #60]
   16d8c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16d90:	mov	w2, #0x5                   	// #5
   16d94:	mov	w1, #0x5                   	// #5
   16d98:	ldr	w0, [sp, #52]
   16d9c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16da0:	str	w0, [sp, #3772]
   16da4:	ldr	x3, [sp, #24]
   16da8:	ldr	x2, [sp, #32]
   16dac:	ldr	w1, [sp, #3772]
   16db0:	ldr	x0, [sp, #40]
   16db4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   16db8:	mov	w1, w0
   16dbc:	add	x0, sp, #0x3c
   16dc0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16dc4:	and	w0, w0, #0xff
   16dc8:	eor	w0, w0, #0x1
   16dcc:	and	w0, w0, #0xff
   16dd0:	cmp	w0, #0x0
   16dd4:	b.eq	16de0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11e70>  // b.none
   16dd8:	mov	w0, #0x0                   	// #0
   16ddc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16de0:	mov	w2, #0x5                   	// #5
   16de4:	mov	w1, #0x0                   	// #0
   16de8:	ldr	w0, [sp, #52]
   16dec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16df0:	str	w0, [sp, #3772]
   16df4:	ldr	x3, [sp, #24]
   16df8:	ldr	x2, [sp, #32]
   16dfc:	ldr	w1, [sp, #3772]
   16e00:	ldr	x0, [sp, #40]
   16e04:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   16e08:	mov	w1, w0
   16e0c:	add	x0, sp, #0x3c
   16e10:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16e14:	and	w0, w0, #0xff
   16e18:	eor	w0, w0, #0x1
   16e1c:	and	w0, w0, #0xff
   16e20:	cmp	w0, #0x0
   16e24:	b.eq	16e30 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11ec0>  // b.none
   16e28:	mov	w0, #0x0                   	// #0
   16e2c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16e30:	mov	w2, #0x5                   	// #5
   16e34:	mov	w1, #0x0                   	// #0
   16e38:	ldr	w0, [sp, #52]
   16e3c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16e40:	str	w0, [sp, #3772]
   16e44:	ldr	x3, [sp, #24]
   16e48:	ldr	x2, [sp, #32]
   16e4c:	ldr	w1, [sp, #3772]
   16e50:	ldr	x0, [sp, #40]
   16e54:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   16e58:	mov	w1, w0
   16e5c:	add	x0, sp, #0x3c
   16e60:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16e64:	and	w0, w0, #0xff
   16e68:	eor	w0, w0, #0x1
   16e6c:	and	w0, w0, #0xff
   16e70:	cmp	w0, #0x0
   16e74:	b.eq	16e80 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11f10>  // b.none
   16e78:	mov	w0, #0x0                   	// #0
   16e7c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16e80:	str	wzr, [sp, #3772]
   16e84:	mov	w2, #0x1                   	// #1
   16e88:	mov	w1, #0xc                   	// #12
   16e8c:	ldr	w0, [sp, #52]
   16e90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16e94:	mov	w1, w0
   16e98:	ldr	w0, [sp, #3772]
   16e9c:	orr	w0, w0, w1
   16ea0:	str	w0, [sp, #3772]
   16ea4:	mov	w2, #0x1                   	// #1
   16ea8:	mov	w1, #0x1e                  	// #30
   16eac:	ldr	w0, [sp, #52]
   16eb0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16eb4:	lsl	w0, w0, #1
   16eb8:	ldr	w1, [sp, #3772]
   16ebc:	orr	w0, w1, w0
   16ec0:	str	w0, [sp, #3772]
   16ec4:	ldr	w0, [sp, #3772]
   16ec8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   16ecc:	add	x2, sp, #0x600
   16ed0:	stp	x0, x1, [x2, #136]
   16ed4:	add	x0, sp, #0x688
   16ed8:	mov	x1, x0
   16edc:	ldr	x0, [sp, #40]
   16ee0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   16ee4:	mov	w2, #0x5                   	// #5
   16ee8:	mov	w1, #0x5                   	// #5
   16eec:	ldr	w0, [sp, #52]
   16ef0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16ef4:	str	w0, [sp, #3772]
   16ef8:	ldr	x3, [sp, #24]
   16efc:	ldr	x2, [sp, #32]
   16f00:	ldr	w1, [sp, #3772]
   16f04:	ldr	x0, [sp, #40]
   16f08:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   16f0c:	mov	w1, w0
   16f10:	add	x0, sp, #0x3c
   16f14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16f18:	and	w0, w0, #0xff
   16f1c:	eor	w0, w0, #0x1
   16f20:	and	w0, w0, #0xff
   16f24:	cmp	w0, #0x0
   16f28:	b.eq	16f34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x11fc4>  // b.none
   16f2c:	mov	w0, #0x0                   	// #0
   16f30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16f34:	mov	w2, #0x5                   	// #5
   16f38:	mov	w1, #0x10                  	// #16
   16f3c:	ldr	w0, [sp, #52]
   16f40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16f44:	str	w0, [sp, #3772]
   16f48:	ldr	x3, [sp, #24]
   16f4c:	ldr	x2, [sp, #32]
   16f50:	ldr	w1, [sp, #3772]
   16f54:	ldr	x0, [sp, #40]
   16f58:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   16f5c:	mov	w1, w0
   16f60:	add	x0, sp, #0x3c
   16f64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16f68:	and	w0, w0, #0xff
   16f6c:	eor	w0, w0, #0x1
   16f70:	and	w0, w0, #0xff
   16f74:	cmp	w0, #0x0
   16f78:	b.eq	16f84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12014>  // b.none
   16f7c:	mov	w0, #0x0                   	// #0
   16f80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16f84:	ldr	w0, [sp, #60]
   16f88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16f8c:	mov	w2, #0x5                   	// #5
   16f90:	mov	w1, #0x5                   	// #5
   16f94:	ldr	w0, [sp, #52]
   16f98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16f9c:	str	w0, [sp, #3772]
   16fa0:	ldr	x3, [sp, #24]
   16fa4:	ldr	x2, [sp, #32]
   16fa8:	ldr	w1, [sp, #3772]
   16fac:	ldr	x0, [sp, #40]
   16fb0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   16fb4:	mov	w1, w0
   16fb8:	add	x0, sp, #0x3c
   16fbc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   16fc0:	and	w0, w0, #0xff
   16fc4:	eor	w0, w0, #0x1
   16fc8:	and	w0, w0, #0xff
   16fcc:	cmp	w0, #0x0
   16fd0:	b.eq	16fdc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1206c>  // b.none
   16fd4:	mov	w0, #0x0                   	// #0
   16fd8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   16fdc:	mov	w2, #0x5                   	// #5
   16fe0:	mov	w1, #0x0                   	// #0
   16fe4:	ldr	w0, [sp, #52]
   16fe8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   16fec:	str	w0, [sp, #3772]
   16ff0:	ldr	x3, [sp, #24]
   16ff4:	ldr	x2, [sp, #32]
   16ff8:	ldr	w1, [sp, #3772]
   16ffc:	ldr	x0, [sp, #40]
   17000:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   17004:	mov	w1, w0
   17008:	add	x0, sp, #0x3c
   1700c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17010:	and	w0, w0, #0xff
   17014:	eor	w0, w0, #0x1
   17018:	and	w0, w0, #0xff
   1701c:	cmp	w0, #0x0
   17020:	b.eq	1702c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x120bc>  // b.none
   17024:	mov	w0, #0x0                   	// #0
   17028:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1702c:	mov	w2, #0x5                   	// #5
   17030:	mov	w1, #0x0                   	// #0
   17034:	ldr	w0, [sp, #52]
   17038:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1703c:	str	w0, [sp, #3772]
   17040:	ldr	x3, [sp, #24]
   17044:	ldr	x2, [sp, #32]
   17048:	ldr	w1, [sp, #3772]
   1704c:	ldr	x0, [sp, #40]
   17050:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   17054:	mov	w1, w0
   17058:	add	x0, sp, #0x3c
   1705c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17060:	and	w0, w0, #0xff
   17064:	eor	w0, w0, #0x1
   17068:	and	w0, w0, #0xff
   1706c:	cmp	w0, #0x0
   17070:	b.eq	1707c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1210c>  // b.none
   17074:	mov	w0, #0x0                   	// #0
   17078:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1707c:	str	wzr, [sp, #3772]
   17080:	mov	w2, #0x1                   	// #1
   17084:	mov	w1, #0xc                   	// #12
   17088:	ldr	w0, [sp, #52]
   1708c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17090:	mov	w1, w0
   17094:	ldr	w0, [sp, #3772]
   17098:	orr	w0, w0, w1
   1709c:	str	w0, [sp, #3772]
   170a0:	mov	w2, #0x1                   	// #1
   170a4:	mov	w1, #0x1e                  	// #30
   170a8:	ldr	w0, [sp, #52]
   170ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   170b0:	lsl	w0, w0, #1
   170b4:	ldr	w1, [sp, #3772]
   170b8:	orr	w0, w1, w0
   170bc:	str	w0, [sp, #3772]
   170c0:	ldr	w0, [sp, #3772]
   170c4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   170c8:	add	x2, sp, #0x600
   170cc:	stp	x0, x1, [x2, #152]
   170d0:	add	x0, sp, #0x698
   170d4:	mov	x1, x0
   170d8:	ldr	x0, [sp, #40]
   170dc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   170e0:	mov	w2, #0x5                   	// #5
   170e4:	mov	w1, #0x5                   	// #5
   170e8:	ldr	w0, [sp, #52]
   170ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   170f0:	str	w0, [sp, #3772]
   170f4:	ldr	x3, [sp, #24]
   170f8:	ldr	x2, [sp, #32]
   170fc:	ldr	w1, [sp, #3772]
   17100:	ldr	x0, [sp, #40]
   17104:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   17108:	mov	w1, w0
   1710c:	add	x0, sp, #0x3c
   17110:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17114:	and	w0, w0, #0xff
   17118:	eor	w0, w0, #0x1
   1711c:	and	w0, w0, #0xff
   17120:	cmp	w0, #0x0
   17124:	b.eq	17130 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x121c0>  // b.none
   17128:	mov	w0, #0x0                   	// #0
   1712c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17130:	mov	w2, #0x5                   	// #5
   17134:	mov	w1, #0x10                  	// #16
   17138:	ldr	w0, [sp, #52]
   1713c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17140:	str	w0, [sp, #3772]
   17144:	ldr	x3, [sp, #24]
   17148:	ldr	x2, [sp, #32]
   1714c:	ldr	w1, [sp, #3772]
   17150:	ldr	x0, [sp, #40]
   17154:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   17158:	mov	w1, w0
   1715c:	add	x0, sp, #0x3c
   17160:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17164:	and	w0, w0, #0xff
   17168:	eor	w0, w0, #0x1
   1716c:	and	w0, w0, #0xff
   17170:	cmp	w0, #0x0
   17174:	b.eq	17180 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12210>  // b.none
   17178:	mov	w0, #0x0                   	// #0
   1717c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17180:	ldr	w0, [sp, #60]
   17184:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17188:	mov	w2, #0x5                   	// #5
   1718c:	mov	w1, #0x5                   	// #5
   17190:	ldr	w0, [sp, #52]
   17194:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17198:	str	w0, [sp, #3772]
   1719c:	ldr	x3, [sp, #24]
   171a0:	ldr	x2, [sp, #32]
   171a4:	ldr	w1, [sp, #3772]
   171a8:	ldr	x0, [sp, #40]
   171ac:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   171b0:	mov	w1, w0
   171b4:	add	x0, sp, #0x3c
   171b8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   171bc:	and	w0, w0, #0xff
   171c0:	eor	w0, w0, #0x1
   171c4:	and	w0, w0, #0xff
   171c8:	cmp	w0, #0x0
   171cc:	b.eq	171d8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12268>  // b.none
   171d0:	mov	w0, #0x0                   	// #0
   171d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   171d8:	mov	w2, #0x5                   	// #5
   171dc:	mov	w1, #0x0                   	// #0
   171e0:	ldr	w0, [sp, #52]
   171e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   171e8:	str	w0, [sp, #3772]
   171ec:	ldr	x3, [sp, #24]
   171f0:	ldr	x2, [sp, #32]
   171f4:	ldr	w1, [sp, #3772]
   171f8:	ldr	x0, [sp, #40]
   171fc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   17200:	mov	w1, w0
   17204:	add	x0, sp, #0x3c
   17208:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1720c:	and	w0, w0, #0xff
   17210:	eor	w0, w0, #0x1
   17214:	and	w0, w0, #0xff
   17218:	cmp	w0, #0x0
   1721c:	b.eq	17228 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x122b8>  // b.none
   17220:	mov	w0, #0x0                   	// #0
   17224:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17228:	mov	w2, #0x5                   	// #5
   1722c:	mov	w1, #0x0                   	// #0
   17230:	ldr	w0, [sp, #52]
   17234:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17238:	str	w0, [sp, #3772]
   1723c:	ldr	x3, [sp, #24]
   17240:	ldr	x2, [sp, #32]
   17244:	ldr	w1, [sp, #3772]
   17248:	ldr	x0, [sp, #40]
   1724c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   17250:	mov	w1, w0
   17254:	add	x0, sp, #0x3c
   17258:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1725c:	and	w0, w0, #0xff
   17260:	eor	w0, w0, #0x1
   17264:	and	w0, w0, #0xff
   17268:	cmp	w0, #0x0
   1726c:	b.eq	17278 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12308>  // b.none
   17270:	mov	w0, #0x0                   	// #0
   17274:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17278:	mov	w2, #0x1                   	// #1
   1727c:	mov	w1, #0x1e                  	// #30
   17280:	ldr	w0, [sp, #52]
   17284:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17288:	str	w0, [sp, #3772]
   1728c:	ldr	w0, [sp, #3772]
   17290:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   17294:	add	x2, sp, #0x600
   17298:	stp	x0, x1, [x2, #168]
   1729c:	add	x0, sp, #0x6a8
   172a0:	mov	x1, x0
   172a4:	ldr	x0, [sp, #40]
   172a8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   172ac:	mov	w2, #0x5                   	// #5
   172b0:	mov	w1, #0x5                   	// #5
   172b4:	ldr	w0, [sp, #52]
   172b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   172bc:	str	w0, [sp, #3772]
   172c0:	ldr	x3, [sp, #24]
   172c4:	ldr	x2, [sp, #32]
   172c8:	ldr	w1, [sp, #3772]
   172cc:	ldr	x0, [sp, #40]
   172d0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   172d4:	mov	w1, w0
   172d8:	add	x0, sp, #0x3c
   172dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   172e0:	and	w0, w0, #0xff
   172e4:	eor	w0, w0, #0x1
   172e8:	and	w0, w0, #0xff
   172ec:	cmp	w0, #0x0
   172f0:	b.eq	172fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1238c>  // b.none
   172f4:	mov	w0, #0x0                   	// #0
   172f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   172fc:	mov	w2, #0x5                   	// #5
   17300:	mov	w1, #0x10                  	// #16
   17304:	ldr	w0, [sp, #52]
   17308:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1730c:	str	w0, [sp, #3772]
   17310:	ldr	x3, [sp, #24]
   17314:	ldr	x2, [sp, #32]
   17318:	ldr	w1, [sp, #3772]
   1731c:	ldr	x0, [sp, #40]
   17320:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   17324:	mov	w1, w0
   17328:	add	x0, sp, #0x3c
   1732c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17330:	and	w0, w0, #0xff
   17334:	eor	w0, w0, #0x1
   17338:	and	w0, w0, #0xff
   1733c:	cmp	w0, #0x0
   17340:	b.eq	1734c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x123dc>  // b.none
   17344:	mov	w0, #0x0                   	// #0
   17348:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1734c:	ldr	w0, [sp, #60]
   17350:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17354:	mov	w2, #0x5                   	// #5
   17358:	mov	w1, #0x5                   	// #5
   1735c:	ldr	w0, [sp, #52]
   17360:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17364:	str	w0, [sp, #3772]
   17368:	ldr	x3, [sp, #24]
   1736c:	ldr	x2, [sp, #32]
   17370:	ldr	w1, [sp, #3772]
   17374:	ldr	x0, [sp, #40]
   17378:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   1737c:	mov	w1, w0
   17380:	add	x0, sp, #0x3c
   17384:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17388:	and	w0, w0, #0xff
   1738c:	eor	w0, w0, #0x1
   17390:	and	w0, w0, #0xff
   17394:	cmp	w0, #0x0
   17398:	b.eq	173a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12434>  // b.none
   1739c:	mov	w0, #0x0                   	// #0
   173a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   173a4:	mov	w2, #0x5                   	// #5
   173a8:	mov	w1, #0x0                   	// #0
   173ac:	ldr	w0, [sp, #52]
   173b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   173b4:	str	w0, [sp, #3772]
   173b8:	ldr	x3, [sp, #24]
   173bc:	ldr	x2, [sp, #32]
   173c0:	ldr	w1, [sp, #3772]
   173c4:	ldr	x0, [sp, #40]
   173c8:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   173cc:	mov	w1, w0
   173d0:	add	x0, sp, #0x3c
   173d4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   173d8:	and	w0, w0, #0xff
   173dc:	eor	w0, w0, #0x1
   173e0:	and	w0, w0, #0xff
   173e4:	cmp	w0, #0x0
   173e8:	b.eq	173f4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12484>  // b.none
   173ec:	mov	w0, #0x0                   	// #0
   173f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   173f4:	mov	w2, #0x5                   	// #5
   173f8:	mov	w1, #0x0                   	// #0
   173fc:	ldr	w0, [sp, #52]
   17400:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17404:	str	w0, [sp, #3772]
   17408:	ldr	x3, [sp, #24]
   1740c:	ldr	x2, [sp, #32]
   17410:	ldr	w1, [sp, #3772]
   17414:	ldr	x0, [sp, #40]
   17418:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   1741c:	mov	w1, w0
   17420:	add	x0, sp, #0x3c
   17424:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17428:	and	w0, w0, #0xff
   1742c:	eor	w0, w0, #0x1
   17430:	and	w0, w0, #0xff
   17434:	cmp	w0, #0x0
   17438:	b.eq	17444 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x124d4>  // b.none
   1743c:	mov	w0, #0x0                   	// #0
   17440:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17444:	mov	w2, #0x1                   	// #1
   17448:	mov	w1, #0x1e                  	// #30
   1744c:	ldr	w0, [sp, #52]
   17450:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17454:	str	w0, [sp, #3772]
   17458:	ldr	w0, [sp, #3772]
   1745c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   17460:	add	x2, sp, #0x600
   17464:	stp	x0, x1, [x2, #184]
   17468:	add	x0, sp, #0x6b8
   1746c:	mov	x1, x0
   17470:	ldr	x0, [sp, #40]
   17474:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   17478:	mov	w2, #0x5                   	// #5
   1747c:	mov	w1, #0x5                   	// #5
   17480:	ldr	w0, [sp, #52]
   17484:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17488:	str	w0, [sp, #3772]
   1748c:	ldr	x3, [sp, #24]
   17490:	ldr	x2, [sp, #32]
   17494:	ldr	w1, [sp, #3772]
   17498:	ldr	x0, [sp, #40]
   1749c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   174a0:	mov	w1, w0
   174a4:	add	x0, sp, #0x3c
   174a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   174ac:	and	w0, w0, #0xff
   174b0:	eor	w0, w0, #0x1
   174b4:	and	w0, w0, #0xff
   174b8:	cmp	w0, #0x0
   174bc:	b.eq	174c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12558>  // b.none
   174c0:	mov	w0, #0x0                   	// #0
   174c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   174c8:	mov	w2, #0x5                   	// #5
   174cc:	mov	w1, #0x10                  	// #16
   174d0:	ldr	w0, [sp, #52]
   174d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   174d8:	str	w0, [sp, #3772]
   174dc:	ldr	x3, [sp, #24]
   174e0:	ldr	x2, [sp, #32]
   174e4:	ldr	w1, [sp, #3772]
   174e8:	ldr	x0, [sp, #40]
   174ec:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   174f0:	mov	w1, w0
   174f4:	add	x0, sp, #0x3c
   174f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   174fc:	and	w0, w0, #0xff
   17500:	eor	w0, w0, #0x1
   17504:	and	w0, w0, #0xff
   17508:	cmp	w0, #0x0
   1750c:	b.eq	17518 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x125a8>  // b.none
   17510:	mov	w0, #0x0                   	// #0
   17514:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17518:	ldr	w0, [sp, #60]
   1751c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17520:	mov	w2, #0x5                   	// #5
   17524:	mov	w1, #0x5                   	// #5
   17528:	ldr	w0, [sp, #52]
   1752c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17530:	str	w0, [sp, #3772]
   17534:	ldr	x3, [sp, #24]
   17538:	ldr	x2, [sp, #32]
   1753c:	ldr	w1, [sp, #3772]
   17540:	ldr	x0, [sp, #40]
   17544:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   17548:	mov	w1, w0
   1754c:	add	x0, sp, #0x3c
   17550:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17554:	and	w0, w0, #0xff
   17558:	eor	w0, w0, #0x1
   1755c:	and	w0, w0, #0xff
   17560:	cmp	w0, #0x0
   17564:	b.eq	17570 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12600>  // b.none
   17568:	mov	w0, #0x0                   	// #0
   1756c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17570:	mov	w2, #0x5                   	// #5
   17574:	mov	w1, #0x0                   	// #0
   17578:	ldr	w0, [sp, #52]
   1757c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17580:	str	w0, [sp, #3772]
   17584:	ldr	x3, [sp, #24]
   17588:	ldr	x2, [sp, #32]
   1758c:	ldr	w1, [sp, #3772]
   17590:	ldr	x0, [sp, #40]
   17594:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   17598:	mov	w1, w0
   1759c:	add	x0, sp, #0x3c
   175a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   175a4:	and	w0, w0, #0xff
   175a8:	eor	w0, w0, #0x1
   175ac:	and	w0, w0, #0xff
   175b0:	cmp	w0, #0x0
   175b4:	b.eq	175c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12650>  // b.none
   175b8:	mov	w0, #0x0                   	// #0
   175bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   175c0:	mov	w2, #0x5                   	// #5
   175c4:	mov	w1, #0x0                   	// #0
   175c8:	ldr	w0, [sp, #52]
   175cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   175d0:	str	w0, [sp, #3772]
   175d4:	ldr	x3, [sp, #24]
   175d8:	ldr	x2, [sp, #32]
   175dc:	ldr	w1, [sp, #3772]
   175e0:	ldr	x0, [sp, #40]
   175e4:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   175e8:	mov	w1, w0
   175ec:	add	x0, sp, #0x3c
   175f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   175f4:	and	w0, w0, #0xff
   175f8:	eor	w0, w0, #0x1
   175fc:	and	w0, w0, #0xff
   17600:	cmp	w0, #0x0
   17604:	b.eq	17610 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x126a0>  // b.none
   17608:	mov	w0, #0x0                   	// #0
   1760c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17610:	str	wzr, [sp, #3772]
   17614:	mov	w2, #0x1                   	// #1
   17618:	mov	w1, #0xc                   	// #12
   1761c:	ldr	w0, [sp, #52]
   17620:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17624:	mov	w1, w0
   17628:	ldr	w0, [sp, #3772]
   1762c:	orr	w0, w0, w1
   17630:	str	w0, [sp, #3772]
   17634:	mov	w2, #0x1                   	// #1
   17638:	mov	w1, #0x1e                  	// #30
   1763c:	ldr	w0, [sp, #52]
   17640:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17644:	lsl	w0, w0, #1
   17648:	ldr	w1, [sp, #3772]
   1764c:	orr	w0, w1, w0
   17650:	str	w0, [sp, #3772]
   17654:	ldr	w0, [sp, #3772]
   17658:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1765c:	add	x2, sp, #0x600
   17660:	stp	x0, x1, [x2, #200]
   17664:	add	x0, sp, #0x6c8
   17668:	mov	x1, x0
   1766c:	ldr	x0, [sp, #40]
   17670:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   17674:	mov	w2, #0x5                   	// #5
   17678:	mov	w1, #0x5                   	// #5
   1767c:	ldr	w0, [sp, #52]
   17680:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17684:	str	w0, [sp, #3772]
   17688:	ldr	x3, [sp, #24]
   1768c:	ldr	x2, [sp, #32]
   17690:	ldr	w1, [sp, #3772]
   17694:	ldr	x0, [sp, #40]
   17698:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   1769c:	mov	w1, w0
   176a0:	add	x0, sp, #0x3c
   176a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   176a8:	and	w0, w0, #0xff
   176ac:	eor	w0, w0, #0x1
   176b0:	and	w0, w0, #0xff
   176b4:	cmp	w0, #0x0
   176b8:	b.eq	176c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12754>  // b.none
   176bc:	mov	w0, #0x0                   	// #0
   176c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   176c4:	mov	w2, #0x5                   	// #5
   176c8:	mov	w1, #0x10                  	// #16
   176cc:	ldr	w0, [sp, #52]
   176d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   176d4:	str	w0, [sp, #3772]
   176d8:	ldr	x3, [sp, #24]
   176dc:	ldr	x2, [sp, #32]
   176e0:	ldr	w1, [sp, #3772]
   176e4:	ldr	x0, [sp, #40]
   176e8:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   176ec:	mov	w1, w0
   176f0:	add	x0, sp, #0x3c
   176f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   176f8:	and	w0, w0, #0xff
   176fc:	eor	w0, w0, #0x1
   17700:	and	w0, w0, #0xff
   17704:	cmp	w0, #0x0
   17708:	b.eq	17714 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x127a4>  // b.none
   1770c:	mov	w0, #0x0                   	// #0
   17710:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17714:	ldr	w0, [sp, #60]
   17718:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1771c:	mov	w2, #0x5                   	// #5
   17720:	mov	w1, #0x5                   	// #5
   17724:	ldr	w0, [sp, #52]
   17728:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1772c:	str	w0, [sp, #3772]
   17730:	ldr	x3, [sp, #24]
   17734:	ldr	x2, [sp, #32]
   17738:	ldr	w1, [sp, #3772]
   1773c:	ldr	x0, [sp, #40]
   17740:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   17744:	mov	w1, w0
   17748:	add	x0, sp, #0x3c
   1774c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17750:	and	w0, w0, #0xff
   17754:	eor	w0, w0, #0x1
   17758:	and	w0, w0, #0xff
   1775c:	cmp	w0, #0x0
   17760:	b.eq	1776c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x127fc>  // b.none
   17764:	mov	w0, #0x0                   	// #0
   17768:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1776c:	mov	w2, #0x5                   	// #5
   17770:	mov	w1, #0x0                   	// #0
   17774:	ldr	w0, [sp, #52]
   17778:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1777c:	str	w0, [sp, #3772]
   17780:	ldr	x3, [sp, #24]
   17784:	ldr	x2, [sp, #32]
   17788:	ldr	w1, [sp, #3772]
   1778c:	ldr	x0, [sp, #40]
   17790:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   17794:	mov	w1, w0
   17798:	add	x0, sp, #0x3c
   1779c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   177a0:	and	w0, w0, #0xff
   177a4:	eor	w0, w0, #0x1
   177a8:	and	w0, w0, #0xff
   177ac:	cmp	w0, #0x0
   177b0:	b.eq	177bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1284c>  // b.none
   177b4:	mov	w0, #0x0                   	// #0
   177b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   177bc:	mov	w2, #0x5                   	// #5
   177c0:	mov	w1, #0x0                   	// #0
   177c4:	ldr	w0, [sp, #52]
   177c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   177cc:	str	w0, [sp, #3772]
   177d0:	ldr	x3, [sp, #24]
   177d4:	ldr	x2, [sp, #32]
   177d8:	ldr	w1, [sp, #3772]
   177dc:	ldr	x0, [sp, #40]
   177e0:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   177e4:	mov	w1, w0
   177e8:	add	x0, sp, #0x3c
   177ec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   177f0:	and	w0, w0, #0xff
   177f4:	eor	w0, w0, #0x1
   177f8:	and	w0, w0, #0xff
   177fc:	cmp	w0, #0x0
   17800:	b.eq	1780c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1289c>  // b.none
   17804:	mov	w0, #0x0                   	// #0
   17808:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1780c:	str	wzr, [sp, #3772]
   17810:	mov	w2, #0x1                   	// #1
   17814:	mov	w1, #0xc                   	// #12
   17818:	ldr	w0, [sp, #52]
   1781c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17820:	mov	w1, w0
   17824:	ldr	w0, [sp, #3772]
   17828:	orr	w0, w0, w1
   1782c:	str	w0, [sp, #3772]
   17830:	mov	w2, #0x1                   	// #1
   17834:	mov	w1, #0x1e                  	// #30
   17838:	ldr	w0, [sp, #52]
   1783c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17840:	lsl	w0, w0, #1
   17844:	ldr	w1, [sp, #3772]
   17848:	orr	w0, w1, w0
   1784c:	str	w0, [sp, #3772]
   17850:	ldr	w0, [sp, #3772]
   17854:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   17858:	add	x2, sp, #0x600
   1785c:	stp	x0, x1, [x2, #216]
   17860:	add	x0, sp, #0x6d8
   17864:	mov	x1, x0
   17868:	ldr	x0, [sp, #40]
   1786c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   17870:	mov	w2, #0x5                   	// #5
   17874:	mov	w1, #0x5                   	// #5
   17878:	ldr	w0, [sp, #52]
   1787c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17880:	str	w0, [sp, #3772]
   17884:	ldr	x3, [sp, #24]
   17888:	ldr	x2, [sp, #32]
   1788c:	ldr	w1, [sp, #3772]
   17890:	ldr	x0, [sp, #40]
   17894:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   17898:	mov	w1, w0
   1789c:	add	x0, sp, #0x3c
   178a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   178a4:	and	w0, w0, #0xff
   178a8:	eor	w0, w0, #0x1
   178ac:	and	w0, w0, #0xff
   178b0:	cmp	w0, #0x0
   178b4:	b.eq	178c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12950>  // b.none
   178b8:	mov	w0, #0x0                   	// #0
   178bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   178c0:	mov	w2, #0x5                   	// #5
   178c4:	mov	w1, #0x10                  	// #16
   178c8:	ldr	w0, [sp, #52]
   178cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   178d0:	str	w0, [sp, #3772]
   178d4:	ldr	x3, [sp, #24]
   178d8:	ldr	x2, [sp, #32]
   178dc:	ldr	w1, [sp, #3772]
   178e0:	ldr	x0, [sp, #40]
   178e4:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   178e8:	mov	w1, w0
   178ec:	add	x0, sp, #0x3c
   178f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   178f4:	and	w0, w0, #0xff
   178f8:	eor	w0, w0, #0x1
   178fc:	and	w0, w0, #0xff
   17900:	cmp	w0, #0x0
   17904:	b.eq	17910 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x129a0>  // b.none
   17908:	mov	w0, #0x0                   	// #0
   1790c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17910:	ldr	w0, [sp, #60]
   17914:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17918:	mov	w2, #0x5                   	// #5
   1791c:	mov	w1, #0x5                   	// #5
   17920:	ldr	w0, [sp, #52]
   17924:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17928:	str	w0, [sp, #3772]
   1792c:	ldr	x3, [sp, #24]
   17930:	ldr	x2, [sp, #32]
   17934:	ldr	w1, [sp, #3772]
   17938:	ldr	x0, [sp, #40]
   1793c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   17940:	mov	w1, w0
   17944:	add	x0, sp, #0x3c
   17948:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1794c:	and	w0, w0, #0xff
   17950:	eor	w0, w0, #0x1
   17954:	and	w0, w0, #0xff
   17958:	cmp	w0, #0x0
   1795c:	b.eq	17968 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x129f8>  // b.none
   17960:	mov	w0, #0x0                   	// #0
   17964:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17968:	mov	w2, #0x5                   	// #5
   1796c:	mov	w1, #0x0                   	// #0
   17970:	ldr	w0, [sp, #52]
   17974:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17978:	str	w0, [sp, #3772]
   1797c:	ldr	x3, [sp, #24]
   17980:	ldr	x2, [sp, #32]
   17984:	ldr	w1, [sp, #3772]
   17988:	ldr	x0, [sp, #40]
   1798c:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   17990:	mov	w1, w0
   17994:	add	x0, sp, #0x3c
   17998:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1799c:	and	w0, w0, #0xff
   179a0:	eor	w0, w0, #0x1
   179a4:	and	w0, w0, #0xff
   179a8:	cmp	w0, #0x0
   179ac:	b.eq	179b8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12a48>  // b.none
   179b0:	mov	w0, #0x0                   	// #0
   179b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   179b8:	mov	w2, #0x5                   	// #5
   179bc:	mov	w1, #0x0                   	// #0
   179c0:	ldr	w0, [sp, #52]
   179c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   179c8:	str	w0, [sp, #3772]
   179cc:	ldr	x3, [sp, #24]
   179d0:	ldr	x2, [sp, #32]
   179d4:	ldr	w1, [sp, #3772]
   179d8:	ldr	x0, [sp, #40]
   179dc:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   179e0:	mov	w1, w0
   179e4:	add	x0, sp, #0x3c
   179e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   179ec:	and	w0, w0, #0xff
   179f0:	eor	w0, w0, #0x1
   179f4:	and	w0, w0, #0xff
   179f8:	cmp	w0, #0x0
   179fc:	b.eq	17a08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12a98>  // b.none
   17a00:	mov	w0, #0x0                   	// #0
   17a04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17a08:	mov	w2, #0x1                   	// #1
   17a0c:	mov	w1, #0x1e                  	// #30
   17a10:	ldr	w0, [sp, #52]
   17a14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17a18:	str	w0, [sp, #3772]
   17a1c:	ldr	w0, [sp, #3772]
   17a20:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   17a24:	add	x2, sp, #0x600
   17a28:	stp	x0, x1, [x2, #232]
   17a2c:	add	x0, sp, #0x6e8
   17a30:	mov	x1, x0
   17a34:	ldr	x0, [sp, #40]
   17a38:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   17a3c:	mov	w2, #0x5                   	// #5
   17a40:	mov	w1, #0x5                   	// #5
   17a44:	ldr	w0, [sp, #52]
   17a48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17a4c:	str	w0, [sp, #3772]
   17a50:	ldr	x3, [sp, #24]
   17a54:	ldr	x2, [sp, #32]
   17a58:	ldr	w1, [sp, #3772]
   17a5c:	ldr	x0, [sp, #40]
   17a60:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   17a64:	mov	w1, w0
   17a68:	add	x0, sp, #0x3c
   17a6c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17a70:	and	w0, w0, #0xff
   17a74:	eor	w0, w0, #0x1
   17a78:	and	w0, w0, #0xff
   17a7c:	cmp	w0, #0x0
   17a80:	b.eq	17a8c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12b1c>  // b.none
   17a84:	mov	w0, #0x0                   	// #0
   17a88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17a8c:	mov	w2, #0x5                   	// #5
   17a90:	mov	w1, #0x10                  	// #16
   17a94:	ldr	w0, [sp, #52]
   17a98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17a9c:	str	w0, [sp, #3772]
   17aa0:	ldr	x3, [sp, #24]
   17aa4:	ldr	x2, [sp, #32]
   17aa8:	ldr	w1, [sp, #3772]
   17aac:	ldr	x0, [sp, #40]
   17ab0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   17ab4:	mov	w1, w0
   17ab8:	add	x0, sp, #0x3c
   17abc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17ac0:	and	w0, w0, #0xff
   17ac4:	eor	w0, w0, #0x1
   17ac8:	and	w0, w0, #0xff
   17acc:	cmp	w0, #0x0
   17ad0:	b.eq	17adc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12b6c>  // b.none
   17ad4:	mov	w0, #0x0                   	// #0
   17ad8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17adc:	ldr	w0, [sp, #60]
   17ae0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17ae4:	mov	w2, #0x5                   	// #5
   17ae8:	mov	w1, #0x5                   	// #5
   17aec:	ldr	w0, [sp, #52]
   17af0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17af4:	str	w0, [sp, #3772]
   17af8:	ldr	x3, [sp, #24]
   17afc:	ldr	x2, [sp, #32]
   17b00:	ldr	w1, [sp, #3772]
   17b04:	ldr	x0, [sp, #40]
   17b08:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   17b0c:	mov	w1, w0
   17b10:	add	x0, sp, #0x3c
   17b14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17b18:	and	w0, w0, #0xff
   17b1c:	eor	w0, w0, #0x1
   17b20:	and	w0, w0, #0xff
   17b24:	cmp	w0, #0x0
   17b28:	b.eq	17b34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12bc4>  // b.none
   17b2c:	mov	w0, #0x0                   	// #0
   17b30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17b34:	mov	w2, #0x5                   	// #5
   17b38:	mov	w1, #0x0                   	// #0
   17b3c:	ldr	w0, [sp, #52]
   17b40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17b44:	str	w0, [sp, #3772]
   17b48:	ldr	x3, [sp, #24]
   17b4c:	ldr	x2, [sp, #32]
   17b50:	ldr	w1, [sp, #3772]
   17b54:	ldr	x0, [sp, #40]
   17b58:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   17b5c:	mov	w1, w0
   17b60:	add	x0, sp, #0x3c
   17b64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17b68:	and	w0, w0, #0xff
   17b6c:	eor	w0, w0, #0x1
   17b70:	and	w0, w0, #0xff
   17b74:	cmp	w0, #0x0
   17b78:	b.eq	17b84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12c14>  // b.none
   17b7c:	mov	w0, #0x0                   	// #0
   17b80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17b84:	mov	w2, #0x5                   	// #5
   17b88:	mov	w1, #0x0                   	// #0
   17b8c:	ldr	w0, [sp, #52]
   17b90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17b94:	str	w0, [sp, #3772]
   17b98:	ldr	x3, [sp, #24]
   17b9c:	ldr	x2, [sp, #32]
   17ba0:	ldr	w1, [sp, #3772]
   17ba4:	ldr	x0, [sp, #40]
   17ba8:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   17bac:	mov	w1, w0
   17bb0:	add	x0, sp, #0x3c
   17bb4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17bb8:	and	w0, w0, #0xff
   17bbc:	eor	w0, w0, #0x1
   17bc0:	and	w0, w0, #0xff
   17bc4:	cmp	w0, #0x0
   17bc8:	b.eq	17bd4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12c64>  // b.none
   17bcc:	mov	w0, #0x0                   	// #0
   17bd0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17bd4:	mov	w2, #0x1                   	// #1
   17bd8:	mov	w1, #0x1e                  	// #30
   17bdc:	ldr	w0, [sp, #52]
   17be0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17be4:	str	w0, [sp, #3772]
   17be8:	ldr	w0, [sp, #3772]
   17bec:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   17bf0:	add	x2, sp, #0x600
   17bf4:	stp	x0, x1, [x2, #248]
   17bf8:	add	x0, sp, #0x6f8
   17bfc:	mov	x1, x0
   17c00:	ldr	x0, [sp, #40]
   17c04:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   17c08:	mov	w2, #0x5                   	// #5
   17c0c:	mov	w1, #0x5                   	// #5
   17c10:	ldr	w0, [sp, #52]
   17c14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17c18:	str	w0, [sp, #3772]
   17c1c:	ldr	x3, [sp, #24]
   17c20:	ldr	x2, [sp, #32]
   17c24:	ldr	w1, [sp, #3772]
   17c28:	ldr	x0, [sp, #40]
   17c2c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   17c30:	mov	w1, w0
   17c34:	add	x0, sp, #0x3c
   17c38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17c3c:	and	w0, w0, #0xff
   17c40:	eor	w0, w0, #0x1
   17c44:	and	w0, w0, #0xff
   17c48:	cmp	w0, #0x0
   17c4c:	b.eq	17c58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12ce8>  // b.none
   17c50:	mov	w0, #0x0                   	// #0
   17c54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17c58:	mov	w2, #0x5                   	// #5
   17c5c:	mov	w1, #0x10                  	// #16
   17c60:	ldr	w0, [sp, #52]
   17c64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17c68:	str	w0, [sp, #3772]
   17c6c:	ldr	x3, [sp, #24]
   17c70:	ldr	x2, [sp, #32]
   17c74:	ldr	w1, [sp, #3772]
   17c78:	ldr	x0, [sp, #40]
   17c7c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   17c80:	mov	w1, w0
   17c84:	add	x0, sp, #0x3c
   17c88:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17c8c:	and	w0, w0, #0xff
   17c90:	eor	w0, w0, #0x1
   17c94:	and	w0, w0, #0xff
   17c98:	cmp	w0, #0x0
   17c9c:	b.eq	17ca8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12d38>  // b.none
   17ca0:	mov	w0, #0x0                   	// #0
   17ca4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17ca8:	ldr	w0, [sp, #60]
   17cac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17cb0:	mov	w2, #0x5                   	// #5
   17cb4:	mov	w1, #0x0                   	// #0
   17cb8:	ldr	w0, [sp, #52]
   17cbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17cc0:	str	w0, [sp, #3772]
   17cc4:	ldr	x3, [sp, #24]
   17cc8:	ldr	x2, [sp, #32]
   17ccc:	ldr	w1, [sp, #3772]
   17cd0:	ldr	x0, [sp, #40]
   17cd4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   17cd8:	mov	w1, w0
   17cdc:	add	x0, sp, #0x3c
   17ce0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17ce4:	and	w0, w0, #0xff
   17ce8:	eor	w0, w0, #0x1
   17cec:	and	w0, w0, #0xff
   17cf0:	cmp	w0, #0x0
   17cf4:	b.eq	17d00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12d90>  // b.none
   17cf8:	mov	w0, #0x0                   	// #0
   17cfc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17d00:	mov	w2, #0x5                   	// #5
   17d04:	mov	w1, #0x5                   	// #5
   17d08:	ldr	w0, [sp, #52]
   17d0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17d10:	str	w0, [sp, #3772]
   17d14:	ldr	x3, [sp, #24]
   17d18:	ldr	x2, [sp, #32]
   17d1c:	ldr	w1, [sp, #3772]
   17d20:	ldr	x0, [sp, #40]
   17d24:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   17d28:	mov	w1, w0
   17d2c:	add	x0, sp, #0x3c
   17d30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17d34:	and	w0, w0, #0xff
   17d38:	eor	w0, w0, #0x1
   17d3c:	and	w0, w0, #0xff
   17d40:	cmp	w0, #0x0
   17d44:	b.eq	17d50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12de0>  // b.none
   17d48:	mov	w0, #0x0                   	// #0
   17d4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17d50:	mov	w2, #0x5                   	// #5
   17d54:	mov	w1, #0x10                  	// #16
   17d58:	ldr	w0, [sp, #52]
   17d5c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17d60:	str	w0, [sp, #3772]
   17d64:	ldr	x3, [sp, #24]
   17d68:	ldr	x2, [sp, #32]
   17d6c:	ldr	w1, [sp, #3772]
   17d70:	ldr	x0, [sp, #40]
   17d74:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   17d78:	mov	w1, w0
   17d7c:	add	x0, sp, #0x3c
   17d80:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17d84:	and	w0, w0, #0xff
   17d88:	eor	w0, w0, #0x1
   17d8c:	and	w0, w0, #0xff
   17d90:	cmp	w0, #0x0
   17d94:	b.eq	17da0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12e30>  // b.none
   17d98:	mov	w0, #0x0                   	// #0
   17d9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17da0:	ldr	w0, [sp, #60]
   17da4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17da8:	mov	w2, #0x5                   	// #5
   17dac:	mov	w1, #0x0                   	// #0
   17db0:	ldr	w0, [sp, #52]
   17db4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17db8:	str	w0, [sp, #3772]
   17dbc:	ldr	x3, [sp, #24]
   17dc0:	ldr	x2, [sp, #32]
   17dc4:	ldr	w1, [sp, #3772]
   17dc8:	ldr	x0, [sp, #40]
   17dcc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   17dd0:	mov	w1, w0
   17dd4:	add	x0, sp, #0x3c
   17dd8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17ddc:	and	w0, w0, #0xff
   17de0:	eor	w0, w0, #0x1
   17de4:	and	w0, w0, #0xff
   17de8:	cmp	w0, #0x0
   17dec:	b.eq	17df8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12e88>  // b.none
   17df0:	mov	w0, #0x0                   	// #0
   17df4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17df8:	mov	w2, #0x5                   	// #5
   17dfc:	mov	w1, #0x5                   	// #5
   17e00:	ldr	w0, [sp, #52]
   17e04:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17e08:	str	w0, [sp, #3772]
   17e0c:	ldr	x3, [sp, #24]
   17e10:	ldr	x2, [sp, #32]
   17e14:	ldr	w1, [sp, #3772]
   17e18:	ldr	x0, [sp, #40]
   17e1c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   17e20:	mov	w1, w0
   17e24:	add	x0, sp, #0x3c
   17e28:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17e2c:	and	w0, w0, #0xff
   17e30:	eor	w0, w0, #0x1
   17e34:	and	w0, w0, #0xff
   17e38:	cmp	w0, #0x0
   17e3c:	b.eq	17e48 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12ed8>  // b.none
   17e40:	mov	w0, #0x0                   	// #0
   17e44:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17e48:	mov	w2, #0x5                   	// #5
   17e4c:	mov	w1, #0x10                  	// #16
   17e50:	ldr	w0, [sp, #52]
   17e54:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17e58:	str	w0, [sp, #3772]
   17e5c:	ldr	x3, [sp, #24]
   17e60:	ldr	x2, [sp, #32]
   17e64:	ldr	w1, [sp, #3772]
   17e68:	ldr	x0, [sp, #40]
   17e6c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   17e70:	mov	w1, w0
   17e74:	add	x0, sp, #0x3c
   17e78:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17e7c:	and	w0, w0, #0xff
   17e80:	eor	w0, w0, #0x1
   17e84:	and	w0, w0, #0xff
   17e88:	cmp	w0, #0x0
   17e8c:	b.eq	17e98 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12f28>  // b.none
   17e90:	mov	w0, #0x0                   	// #0
   17e94:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17e98:	ldr	w0, [sp, #60]
   17e9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17ea0:	mov	w2, #0x5                   	// #5
   17ea4:	mov	w1, #0x0                   	// #0
   17ea8:	ldr	w0, [sp, #52]
   17eac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17eb0:	str	w0, [sp, #3772]
   17eb4:	ldr	x3, [sp, #24]
   17eb8:	ldr	x2, [sp, #32]
   17ebc:	ldr	w1, [sp, #3772]
   17ec0:	ldr	x0, [sp, #40]
   17ec4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   17ec8:	mov	w1, w0
   17ecc:	add	x0, sp, #0x3c
   17ed0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17ed4:	and	w0, w0, #0xff
   17ed8:	eor	w0, w0, #0x1
   17edc:	and	w0, w0, #0xff
   17ee0:	cmp	w0, #0x0
   17ee4:	b.eq	17ef0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12f80>  // b.none
   17ee8:	mov	w0, #0x0                   	// #0
   17eec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17ef0:	mov	w2, #0x5                   	// #5
   17ef4:	mov	w1, #0x5                   	// #5
   17ef8:	ldr	w0, [sp, #52]
   17efc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17f00:	str	w0, [sp, #3772]
   17f04:	ldr	x3, [sp, #24]
   17f08:	ldr	x2, [sp, #32]
   17f0c:	ldr	w1, [sp, #3772]
   17f10:	ldr	x0, [sp, #40]
   17f14:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   17f18:	mov	w1, w0
   17f1c:	add	x0, sp, #0x3c
   17f20:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17f24:	and	w0, w0, #0xff
   17f28:	eor	w0, w0, #0x1
   17f2c:	and	w0, w0, #0xff
   17f30:	cmp	w0, #0x0
   17f34:	b.eq	17f40 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x12fd0>  // b.none
   17f38:	mov	w0, #0x0                   	// #0
   17f3c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17f40:	mov	w2, #0x2                   	// #2
   17f44:	mov	w1, #0x13                  	// #19
   17f48:	ldr	w0, [sp, #52]
   17f4c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17f50:	str	w0, [sp, #3772]
   17f54:	ldr	w0, [sp, #3772]
   17f58:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   17f5c:	add	x2, sp, #0x800
   17f60:	stp	x0, x1, [x2, #-248]
   17f64:	add	x0, sp, #0x708
   17f68:	mov	x1, x0
   17f6c:	ldr	x0, [sp, #40]
   17f70:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   17f74:	ldr	w0, [sp, #60]
   17f78:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17f7c:	mov	w2, #0x5                   	// #5
   17f80:	mov	w1, #0x0                   	// #0
   17f84:	ldr	w0, [sp, #52]
   17f88:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17f8c:	str	w0, [sp, #3772]
   17f90:	ldr	x3, [sp, #24]
   17f94:	ldr	x2, [sp, #32]
   17f98:	ldr	w1, [sp, #3772]
   17f9c:	ldr	x0, [sp, #40]
   17fa0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   17fa4:	mov	w1, w0
   17fa8:	add	x0, sp, #0x3c
   17fac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   17fb0:	and	w0, w0, #0xff
   17fb4:	eor	w0, w0, #0x1
   17fb8:	and	w0, w0, #0xff
   17fbc:	cmp	w0, #0x0
   17fc0:	b.eq	17fcc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1305c>  // b.none
   17fc4:	mov	w0, #0x0                   	// #0
   17fc8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   17fcc:	mov	w2, #0x5                   	// #5
   17fd0:	mov	w1, #0x5                   	// #5
   17fd4:	ldr	w0, [sp, #52]
   17fd8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   17fdc:	str	w0, [sp, #3772]
   17fe0:	ldr	x3, [sp, #24]
   17fe4:	ldr	x2, [sp, #32]
   17fe8:	ldr	w1, [sp, #3772]
   17fec:	ldr	x0, [sp, #40]
   17ff0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   17ff4:	mov	w1, w0
   17ff8:	add	x0, sp, #0x3c
   17ffc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18000:	and	w0, w0, #0xff
   18004:	eor	w0, w0, #0x1
   18008:	and	w0, w0, #0xff
   1800c:	cmp	w0, #0x0
   18010:	b.eq	1801c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x130ac>  // b.none
   18014:	mov	w0, #0x0                   	// #0
   18018:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1801c:	mov	w2, #0x3                   	// #3
   18020:	mov	w1, #0x12                  	// #18
   18024:	ldr	w0, [sp, #52]
   18028:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1802c:	str	w0, [sp, #3772]
   18030:	ldr	w0, [sp, #3772]
   18034:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   18038:	add	x2, sp, #0x800
   1803c:	stp	x0, x1, [x2, #-232]
   18040:	add	x0, sp, #0x718
   18044:	mov	x1, x0
   18048:	ldr	x0, [sp, #40]
   1804c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   18050:	ldr	w0, [sp, #60]
   18054:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18058:	mov	w2, #0x5                   	// #5
   1805c:	mov	w1, #0x0                   	// #0
   18060:	ldr	w0, [sp, #52]
   18064:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18068:	str	w0, [sp, #3772]
   1806c:	ldr	x3, [sp, #24]
   18070:	ldr	x2, [sp, #32]
   18074:	ldr	w1, [sp, #3772]
   18078:	ldr	x0, [sp, #40]
   1807c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18080:	mov	w1, w0
   18084:	add	x0, sp, #0x3c
   18088:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1808c:	and	w0, w0, #0xff
   18090:	eor	w0, w0, #0x1
   18094:	and	w0, w0, #0xff
   18098:	cmp	w0, #0x0
   1809c:	b.eq	180a8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13138>  // b.none
   180a0:	mov	w0, #0x0                   	// #0
   180a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   180a8:	mov	w2, #0x5                   	// #5
   180ac:	mov	w1, #0x5                   	// #5
   180b0:	ldr	w0, [sp, #52]
   180b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   180b8:	str	w0, [sp, #3772]
   180bc:	ldr	x3, [sp, #24]
   180c0:	ldr	x2, [sp, #32]
   180c4:	ldr	w1, [sp, #3772]
   180c8:	ldr	x0, [sp, #40]
   180cc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   180d0:	mov	w1, w0
   180d4:	add	x0, sp, #0x3c
   180d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   180dc:	and	w0, w0, #0xff
   180e0:	eor	w0, w0, #0x1
   180e4:	and	w0, w0, #0xff
   180e8:	cmp	w0, #0x0
   180ec:	b.eq	180f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13188>  // b.none
   180f0:	mov	w0, #0x0                   	// #0
   180f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   180f8:	mov	w2, #0x4                   	// #4
   180fc:	mov	w1, #0x11                  	// #17
   18100:	ldr	w0, [sp, #52]
   18104:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18108:	str	w0, [sp, #3772]
   1810c:	ldr	w0, [sp, #3772]
   18110:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   18114:	add	x2, sp, #0x800
   18118:	stp	x0, x1, [x2, #-216]
   1811c:	add	x0, sp, #0x728
   18120:	mov	x1, x0
   18124:	ldr	x0, [sp, #40]
   18128:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1812c:	ldr	w0, [sp, #60]
   18130:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18134:	mov	w2, #0x5                   	// #5
   18138:	mov	w1, #0x0                   	// #0
   1813c:	ldr	w0, [sp, #52]
   18140:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18144:	str	w0, [sp, #3772]
   18148:	ldr	x3, [sp, #24]
   1814c:	ldr	x2, [sp, #32]
   18150:	ldr	w1, [sp, #3772]
   18154:	ldr	x0, [sp, #40]
   18158:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1815c:	mov	w1, w0
   18160:	add	x0, sp, #0x3c
   18164:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18168:	and	w0, w0, #0xff
   1816c:	eor	w0, w0, #0x1
   18170:	and	w0, w0, #0xff
   18174:	cmp	w0, #0x0
   18178:	b.eq	18184 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13214>  // b.none
   1817c:	mov	w0, #0x0                   	// #0
   18180:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18184:	mov	w2, #0x5                   	// #5
   18188:	mov	w1, #0x5                   	// #5
   1818c:	ldr	w0, [sp, #52]
   18190:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18194:	str	w0, [sp, #3772]
   18198:	ldr	x3, [sp, #24]
   1819c:	ldr	x2, [sp, #32]
   181a0:	ldr	w1, [sp, #3772]
   181a4:	ldr	x0, [sp, #40]
   181a8:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   181ac:	mov	w1, w0
   181b0:	add	x0, sp, #0x3c
   181b4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   181b8:	and	w0, w0, #0xff
   181bc:	eor	w0, w0, #0x1
   181c0:	and	w0, w0, #0xff
   181c4:	cmp	w0, #0x0
   181c8:	b.eq	181d4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13264>  // b.none
   181cc:	mov	w0, #0x0                   	// #0
   181d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   181d4:	mov	w2, #0x5                   	// #5
   181d8:	mov	w1, #0x10                  	// #16
   181dc:	ldr	w0, [sp, #52]
   181e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   181e4:	str	w0, [sp, #3772]
   181e8:	ldr	x3, [sp, #24]
   181ec:	ldr	x2, [sp, #32]
   181f0:	ldr	w1, [sp, #3772]
   181f4:	ldr	x0, [sp, #40]
   181f8:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   181fc:	mov	w1, w0
   18200:	add	x0, sp, #0x3c
   18204:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18208:	and	w0, w0, #0xff
   1820c:	eor	w0, w0, #0x1
   18210:	and	w0, w0, #0xff
   18214:	cmp	w0, #0x0
   18218:	b.eq	18224 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x132b4>  // b.none
   1821c:	mov	w0, #0x0                   	// #0
   18220:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18224:	ldr	w0, [sp, #60]
   18228:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1822c:	mov	w2, #0x5                   	// #5
   18230:	mov	w1, #0x0                   	// #0
   18234:	ldr	w0, [sp, #52]
   18238:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1823c:	str	w0, [sp, #3772]
   18240:	ldr	x3, [sp, #24]
   18244:	ldr	x2, [sp, #32]
   18248:	ldr	w1, [sp, #3772]
   1824c:	ldr	x0, [sp, #40]
   18250:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18254:	mov	w1, w0
   18258:	add	x0, sp, #0x3c
   1825c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18260:	and	w0, w0, #0xff
   18264:	eor	w0, w0, #0x1
   18268:	and	w0, w0, #0xff
   1826c:	cmp	w0, #0x0
   18270:	b.eq	1827c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1330c>  // b.none
   18274:	mov	w0, #0x0                   	// #0
   18278:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1827c:	mov	w2, #0x5                   	// #5
   18280:	mov	w1, #0x5                   	// #5
   18284:	ldr	w0, [sp, #52]
   18288:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1828c:	str	w0, [sp, #3772]
   18290:	ldr	x3, [sp, #24]
   18294:	ldr	x2, [sp, #32]
   18298:	ldr	w1, [sp, #3772]
   1829c:	ldr	x0, [sp, #40]
   182a0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   182a4:	mov	w1, w0
   182a8:	add	x0, sp, #0x3c
   182ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   182b0:	and	w0, w0, #0xff
   182b4:	eor	w0, w0, #0x1
   182b8:	and	w0, w0, #0xff
   182bc:	cmp	w0, #0x0
   182c0:	b.eq	182cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1335c>  // b.none
   182c4:	mov	w0, #0x0                   	// #0
   182c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   182cc:	ldr	w0, [sp, #60]
   182d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   182d4:	mov	w2, #0x5                   	// #5
   182d8:	mov	w1, #0x0                   	// #0
   182dc:	ldr	w0, [sp, #52]
   182e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   182e4:	str	w0, [sp, #3772]
   182e8:	ldr	x3, [sp, #24]
   182ec:	ldr	x2, [sp, #32]
   182f0:	ldr	w1, [sp, #3772]
   182f4:	ldr	x0, [sp, #40]
   182f8:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   182fc:	mov	w1, w0
   18300:	add	x0, sp, #0x3c
   18304:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18308:	and	w0, w0, #0xff
   1830c:	eor	w0, w0, #0x1
   18310:	and	w0, w0, #0xff
   18314:	cmp	w0, #0x0
   18318:	b.eq	18324 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x133b4>  // b.none
   1831c:	mov	w0, #0x0                   	// #0
   18320:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18324:	mov	w2, #0x5                   	// #5
   18328:	mov	w1, #0x5                   	// #5
   1832c:	ldr	w0, [sp, #52]
   18330:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18334:	str	w0, [sp, #3772]
   18338:	ldr	x3, [sp, #24]
   1833c:	ldr	x2, [sp, #32]
   18340:	ldr	w1, [sp, #3772]
   18344:	ldr	x0, [sp, #40]
   18348:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   1834c:	mov	w1, w0
   18350:	add	x0, sp, #0x3c
   18354:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18358:	and	w0, w0, #0xff
   1835c:	eor	w0, w0, #0x1
   18360:	and	w0, w0, #0xff
   18364:	cmp	w0, #0x0
   18368:	b.eq	18374 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13404>  // b.none
   1836c:	mov	w0, #0x0                   	// #0
   18370:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18374:	ldr	w0, [sp, #60]
   18378:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1837c:	mov	w2, #0x5                   	// #5
   18380:	mov	w1, #0x0                   	// #0
   18384:	ldr	w0, [sp, #52]
   18388:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1838c:	str	w0, [sp, #3772]
   18390:	ldr	x3, [sp, #24]
   18394:	ldr	x2, [sp, #32]
   18398:	ldr	w1, [sp, #3772]
   1839c:	ldr	x0, [sp, #40]
   183a0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   183a4:	mov	w1, w0
   183a8:	add	x0, sp, #0x3c
   183ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   183b0:	and	w0, w0, #0xff
   183b4:	eor	w0, w0, #0x1
   183b8:	and	w0, w0, #0xff
   183bc:	cmp	w0, #0x0
   183c0:	b.eq	183cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1345c>  // b.none
   183c4:	mov	w0, #0x0                   	// #0
   183c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   183cc:	mov	w2, #0x5                   	// #5
   183d0:	mov	w1, #0x0                   	// #0
   183d4:	ldr	w0, [sp, #52]
   183d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   183dc:	str	w0, [sp, #3772]
   183e0:	ldr	x3, [sp, #24]
   183e4:	ldr	x2, [sp, #32]
   183e8:	ldr	w1, [sp, #3772]
   183ec:	ldr	x0, [sp, #40]
   183f0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   183f4:	mov	w1, w0
   183f8:	add	x0, sp, #0x3c
   183fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18400:	and	w0, w0, #0xff
   18404:	eor	w0, w0, #0x1
   18408:	and	w0, w0, #0xff
   1840c:	cmp	w0, #0x0
   18410:	b.eq	1841c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x134ac>  // b.none
   18414:	mov	w0, #0x0                   	// #0
   18418:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1841c:	mov	w2, #0x5                   	// #5
   18420:	mov	w1, #0x5                   	// #5
   18424:	ldr	w0, [sp, #52]
   18428:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1842c:	str	w0, [sp, #3772]
   18430:	ldr	x3, [sp, #24]
   18434:	ldr	x2, [sp, #32]
   18438:	ldr	w1, [sp, #3772]
   1843c:	ldr	x0, [sp, #40]
   18440:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   18444:	mov	w1, w0
   18448:	add	x0, sp, #0x3c
   1844c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18450:	and	w0, w0, #0xff
   18454:	eor	w0, w0, #0x1
   18458:	and	w0, w0, #0xff
   1845c:	cmp	w0, #0x0
   18460:	b.eq	1846c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x134fc>  // b.none
   18464:	mov	w0, #0x0                   	// #0
   18468:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1846c:	mov	w2, #0x5                   	// #5
   18470:	mov	w1, #0x10                  	// #16
   18474:	ldr	w0, [sp, #52]
   18478:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1847c:	str	w0, [sp, #3772]
   18480:	ldr	x3, [sp, #24]
   18484:	ldr	x2, [sp, #32]
   18488:	ldr	w1, [sp, #3772]
   1848c:	ldr	x0, [sp, #40]
   18490:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18494:	mov	w1, w0
   18498:	add	x0, sp, #0x3c
   1849c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   184a0:	and	w0, w0, #0xff
   184a4:	eor	w0, w0, #0x1
   184a8:	and	w0, w0, #0xff
   184ac:	cmp	w0, #0x0
   184b0:	b.eq	184bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1354c>  // b.none
   184b4:	mov	w0, #0x0                   	// #0
   184b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   184bc:	ldr	w0, [sp, #60]
   184c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   184c4:	mov	w2, #0x5                   	// #5
   184c8:	mov	w1, #0x0                   	// #0
   184cc:	ldr	w0, [sp, #52]
   184d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   184d4:	str	w0, [sp, #3772]
   184d8:	ldr	x3, [sp, #24]
   184dc:	ldr	x2, [sp, #32]
   184e0:	ldr	w1, [sp, #3772]
   184e4:	ldr	x0, [sp, #40]
   184e8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   184ec:	mov	w1, w0
   184f0:	add	x0, sp, #0x3c
   184f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   184f8:	and	w0, w0, #0xff
   184fc:	eor	w0, w0, #0x1
   18500:	and	w0, w0, #0xff
   18504:	cmp	w0, #0x0
   18508:	b.eq	18514 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x135a4>  // b.none
   1850c:	mov	w0, #0x0                   	// #0
   18510:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18514:	mov	w2, #0x5                   	// #5
   18518:	mov	w1, #0x5                   	// #5
   1851c:	ldr	w0, [sp, #52]
   18520:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18524:	str	w0, [sp, #3772]
   18528:	ldr	x3, [sp, #24]
   1852c:	ldr	x2, [sp, #32]
   18530:	ldr	w1, [sp, #3772]
   18534:	ldr	x0, [sp, #40]
   18538:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1853c:	mov	w1, w0
   18540:	add	x0, sp, #0x3c
   18544:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18548:	and	w0, w0, #0xff
   1854c:	eor	w0, w0, #0x1
   18550:	and	w0, w0, #0xff
   18554:	cmp	w0, #0x0
   18558:	b.eq	18564 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x135f4>  // b.none
   1855c:	mov	w0, #0x0                   	// #0
   18560:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18564:	mov	w2, #0x5                   	// #5
   18568:	mov	w1, #0x10                  	// #16
   1856c:	ldr	w0, [sp, #52]
   18570:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18574:	str	w0, [sp, #3772]
   18578:	ldr	x3, [sp, #24]
   1857c:	ldr	x2, [sp, #32]
   18580:	ldr	w1, [sp, #3772]
   18584:	ldr	x0, [sp, #40]
   18588:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1858c:	mov	w1, w0
   18590:	add	x0, sp, #0x3c
   18594:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18598:	and	w0, w0, #0xff
   1859c:	eor	w0, w0, #0x1
   185a0:	and	w0, w0, #0xff
   185a4:	cmp	w0, #0x0
   185a8:	b.eq	185b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13644>  // b.none
   185ac:	mov	w0, #0x0                   	// #0
   185b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   185b4:	ldr	w0, [sp, #60]
   185b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   185bc:	mov	w2, #0x5                   	// #5
   185c0:	mov	w1, #0x0                   	// #0
   185c4:	ldr	w0, [sp, #52]
   185c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   185cc:	str	w0, [sp, #3772]
   185d0:	ldr	x3, [sp, #24]
   185d4:	ldr	x2, [sp, #32]
   185d8:	ldr	w1, [sp, #3772]
   185dc:	ldr	x0, [sp, #40]
   185e0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   185e4:	mov	w1, w0
   185e8:	add	x0, sp, #0x3c
   185ec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   185f0:	and	w0, w0, #0xff
   185f4:	eor	w0, w0, #0x1
   185f8:	and	w0, w0, #0xff
   185fc:	cmp	w0, #0x0
   18600:	b.eq	1860c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1369c>  // b.none
   18604:	mov	w0, #0x0                   	// #0
   18608:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1860c:	mov	w2, #0x5                   	// #5
   18610:	mov	w1, #0x5                   	// #5
   18614:	ldr	w0, [sp, #52]
   18618:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1861c:	str	w0, [sp, #3772]
   18620:	ldr	x3, [sp, #24]
   18624:	ldr	x2, [sp, #32]
   18628:	ldr	w1, [sp, #3772]
   1862c:	ldr	x0, [sp, #40]
   18630:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   18634:	mov	w1, w0
   18638:	add	x0, sp, #0x3c
   1863c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18640:	and	w0, w0, #0xff
   18644:	eor	w0, w0, #0x1
   18648:	and	w0, w0, #0xff
   1864c:	cmp	w0, #0x0
   18650:	b.eq	1865c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x136ec>  // b.none
   18654:	mov	w0, #0x0                   	// #0
   18658:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1865c:	mov	w2, #0x5                   	// #5
   18660:	mov	w1, #0x10                  	// #16
   18664:	ldr	w0, [sp, #52]
   18668:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1866c:	str	w0, [sp, #3772]
   18670:	ldr	x3, [sp, #24]
   18674:	ldr	x2, [sp, #32]
   18678:	ldr	w1, [sp, #3772]
   1867c:	ldr	x0, [sp, #40]
   18680:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18684:	mov	w1, w0
   18688:	add	x0, sp, #0x3c
   1868c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18690:	and	w0, w0, #0xff
   18694:	eor	w0, w0, #0x1
   18698:	and	w0, w0, #0xff
   1869c:	cmp	w0, #0x0
   186a0:	b.eq	186ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1373c>  // b.none
   186a4:	mov	w0, #0x0                   	// #0
   186a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   186ac:	ldr	w0, [sp, #60]
   186b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   186b4:	mov	w2, #0x5                   	// #5
   186b8:	mov	w1, #0x0                   	// #0
   186bc:	ldr	w0, [sp, #52]
   186c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   186c4:	str	w0, [sp, #3772]
   186c8:	ldr	x3, [sp, #24]
   186cc:	ldr	x2, [sp, #32]
   186d0:	ldr	w1, [sp, #3772]
   186d4:	ldr	x0, [sp, #40]
   186d8:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   186dc:	mov	w1, w0
   186e0:	add	x0, sp, #0x3c
   186e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   186e8:	and	w0, w0, #0xff
   186ec:	eor	w0, w0, #0x1
   186f0:	and	w0, w0, #0xff
   186f4:	cmp	w0, #0x0
   186f8:	b.eq	18704 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13794>  // b.none
   186fc:	mov	w0, #0x0                   	// #0
   18700:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18704:	mov	w2, #0x5                   	// #5
   18708:	mov	w1, #0x5                   	// #5
   1870c:	ldr	w0, [sp, #52]
   18710:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18714:	str	w0, [sp, #3772]
   18718:	ldr	x3, [sp, #24]
   1871c:	ldr	x2, [sp, #32]
   18720:	ldr	w1, [sp, #3772]
   18724:	ldr	x0, [sp, #40]
   18728:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1872c:	mov	w1, w0
   18730:	add	x0, sp, #0x3c
   18734:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18738:	and	w0, w0, #0xff
   1873c:	eor	w0, w0, #0x1
   18740:	and	w0, w0, #0xff
   18744:	cmp	w0, #0x0
   18748:	b.eq	18754 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x137e4>  // b.none
   1874c:	mov	w0, #0x0                   	// #0
   18750:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18754:	ldr	w0, [sp, #60]
   18758:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1875c:	mov	w2, #0x5                   	// #5
   18760:	mov	w1, #0x0                   	// #0
   18764:	ldr	w0, [sp, #52]
   18768:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1876c:	str	w0, [sp, #3772]
   18770:	ldr	x3, [sp, #24]
   18774:	ldr	x2, [sp, #32]
   18778:	ldr	w1, [sp, #3772]
   1877c:	ldr	x0, [sp, #40]
   18780:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   18784:	mov	w1, w0
   18788:	add	x0, sp, #0x3c
   1878c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18790:	and	w0, w0, #0xff
   18794:	eor	w0, w0, #0x1
   18798:	and	w0, w0, #0xff
   1879c:	cmp	w0, #0x0
   187a0:	b.eq	187ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1383c>  // b.none
   187a4:	mov	w0, #0x0                   	// #0
   187a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   187ac:	mov	w2, #0x5                   	// #5
   187b0:	mov	w1, #0x5                   	// #5
   187b4:	ldr	w0, [sp, #52]
   187b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   187bc:	str	w0, [sp, #3772]
   187c0:	ldr	x3, [sp, #24]
   187c4:	ldr	x2, [sp, #32]
   187c8:	ldr	w1, [sp, #3772]
   187cc:	ldr	x0, [sp, #40]
   187d0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   187d4:	mov	w1, w0
   187d8:	add	x0, sp, #0x3c
   187dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   187e0:	and	w0, w0, #0xff
   187e4:	eor	w0, w0, #0x1
   187e8:	and	w0, w0, #0xff
   187ec:	cmp	w0, #0x0
   187f0:	b.eq	187fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1388c>  // b.none
   187f4:	mov	w0, #0x0                   	// #0
   187f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   187fc:	mov	w2, #0x3                   	// #3
   18800:	mov	w1, #0x12                  	// #18
   18804:	ldr	w0, [sp, #52]
   18808:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1880c:	str	w0, [sp, #3772]
   18810:	ldr	w0, [sp, #3772]
   18814:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   18818:	add	x2, sp, #0x800
   1881c:	stp	x0, x1, [x2, #-200]
   18820:	add	x0, sp, #0x738
   18824:	mov	x1, x0
   18828:	ldr	x0, [sp, #40]
   1882c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   18830:	ldr	w0, [sp, #60]
   18834:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18838:	mov	w2, #0x5                   	// #5
   1883c:	mov	w1, #0x0                   	// #0
   18840:	ldr	w0, [sp, #52]
   18844:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18848:	str	w0, [sp, #3772]
   1884c:	ldr	x3, [sp, #24]
   18850:	ldr	x2, [sp, #32]
   18854:	ldr	w1, [sp, #3772]
   18858:	ldr	x0, [sp, #40]
   1885c:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   18860:	mov	w1, w0
   18864:	add	x0, sp, #0x3c
   18868:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1886c:	and	w0, w0, #0xff
   18870:	eor	w0, w0, #0x1
   18874:	and	w0, w0, #0xff
   18878:	cmp	w0, #0x0
   1887c:	b.eq	18888 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13918>  // b.none
   18880:	mov	w0, #0x0                   	// #0
   18884:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18888:	mov	w2, #0x5                   	// #5
   1888c:	mov	w1, #0x5                   	// #5
   18890:	ldr	w0, [sp, #52]
   18894:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18898:	str	w0, [sp, #3772]
   1889c:	ldr	x3, [sp, #24]
   188a0:	ldr	x2, [sp, #32]
   188a4:	ldr	w1, [sp, #3772]
   188a8:	ldr	x0, [sp, #40]
   188ac:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   188b0:	mov	w1, w0
   188b4:	add	x0, sp, #0x3c
   188b8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   188bc:	and	w0, w0, #0xff
   188c0:	eor	w0, w0, #0x1
   188c4:	and	w0, w0, #0xff
   188c8:	cmp	w0, #0x0
   188cc:	b.eq	188d8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13968>  // b.none
   188d0:	mov	w0, #0x0                   	// #0
   188d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   188d8:	mov	w2, #0x4                   	// #4
   188dc:	mov	w1, #0x11                  	// #17
   188e0:	ldr	w0, [sp, #52]
   188e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   188e8:	str	w0, [sp, #3772]
   188ec:	ldr	w0, [sp, #3772]
   188f0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   188f4:	add	x2, sp, #0x800
   188f8:	stp	x0, x1, [x2, #-184]
   188fc:	add	x0, sp, #0x748
   18900:	mov	x1, x0
   18904:	ldr	x0, [sp, #40]
   18908:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1890c:	ldr	w0, [sp, #60]
   18910:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18914:	mov	w2, #0x5                   	// #5
   18918:	mov	w1, #0x0                   	// #0
   1891c:	ldr	w0, [sp, #52]
   18920:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18924:	str	w0, [sp, #3772]
   18928:	ldr	x3, [sp, #24]
   1892c:	ldr	x2, [sp, #32]
   18930:	ldr	w1, [sp, #3772]
   18934:	ldr	x0, [sp, #40]
   18938:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1893c:	mov	w1, w0
   18940:	add	x0, sp, #0x3c
   18944:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18948:	and	w0, w0, #0xff
   1894c:	eor	w0, w0, #0x1
   18950:	and	w0, w0, #0xff
   18954:	cmp	w0, #0x0
   18958:	b.eq	18964 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x139f4>  // b.none
   1895c:	mov	w0, #0x0                   	// #0
   18960:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18964:	mov	w2, #0x5                   	// #5
   18968:	mov	w1, #0x0                   	// #0
   1896c:	ldr	w0, [sp, #52]
   18970:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18974:	str	w0, [sp, #3772]
   18978:	ldr	x3, [sp, #24]
   1897c:	ldr	x2, [sp, #32]
   18980:	ldr	w1, [sp, #3772]
   18984:	ldr	x0, [sp, #40]
   18988:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1898c:	mov	w1, w0
   18990:	add	x0, sp, #0x3c
   18994:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18998:	and	w0, w0, #0xff
   1899c:	eor	w0, w0, #0x1
   189a0:	and	w0, w0, #0xff
   189a4:	cmp	w0, #0x0
   189a8:	b.eq	189b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13a44>  // b.none
   189ac:	mov	w0, #0x0                   	// #0
   189b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   189b4:	mov	w2, #0x5                   	// #5
   189b8:	mov	w1, #0x5                   	// #5
   189bc:	ldr	w0, [sp, #52]
   189c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   189c4:	str	w0, [sp, #3772]
   189c8:	ldr	x3, [sp, #24]
   189cc:	ldr	x2, [sp, #32]
   189d0:	ldr	w1, [sp, #3772]
   189d4:	ldr	x0, [sp, #40]
   189d8:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   189dc:	mov	w1, w0
   189e0:	add	x0, sp, #0x3c
   189e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   189e8:	and	w0, w0, #0xff
   189ec:	eor	w0, w0, #0x1
   189f0:	and	w0, w0, #0xff
   189f4:	cmp	w0, #0x0
   189f8:	b.eq	18a04 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13a94>  // b.none
   189fc:	mov	w0, #0x0                   	// #0
   18a00:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18a04:	mov	w2, #0x5                   	// #5
   18a08:	mov	w1, #0x10                  	// #16
   18a0c:	ldr	w0, [sp, #52]
   18a10:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18a14:	str	w0, [sp, #3772]
   18a18:	ldr	x3, [sp, #24]
   18a1c:	ldr	x2, [sp, #32]
   18a20:	ldr	w1, [sp, #3772]
   18a24:	ldr	x0, [sp, #40]
   18a28:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18a2c:	mov	w1, w0
   18a30:	add	x0, sp, #0x3c
   18a34:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18a38:	and	w0, w0, #0xff
   18a3c:	eor	w0, w0, #0x1
   18a40:	and	w0, w0, #0xff
   18a44:	cmp	w0, #0x0
   18a48:	b.eq	18a54 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13ae4>  // b.none
   18a4c:	mov	w0, #0x0                   	// #0
   18a50:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18a54:	ldr	w0, [sp, #60]
   18a58:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18a5c:	mov	w2, #0x5                   	// #5
   18a60:	mov	w1, #0x0                   	// #0
   18a64:	ldr	w0, [sp, #52]
   18a68:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18a6c:	str	w0, [sp, #3772]
   18a70:	ldr	x3, [sp, #24]
   18a74:	ldr	x2, [sp, #32]
   18a78:	ldr	w1, [sp, #3772]
   18a7c:	ldr	x0, [sp, #40]
   18a80:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18a84:	mov	w1, w0
   18a88:	add	x0, sp, #0x3c
   18a8c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18a90:	and	w0, w0, #0xff
   18a94:	eor	w0, w0, #0x1
   18a98:	and	w0, w0, #0xff
   18a9c:	cmp	w0, #0x0
   18aa0:	b.eq	18aac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13b3c>  // b.none
   18aa4:	mov	w0, #0x0                   	// #0
   18aa8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18aac:	mov	w2, #0x5                   	// #5
   18ab0:	mov	w1, #0x0                   	// #0
   18ab4:	ldr	w0, [sp, #52]
   18ab8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18abc:	str	w0, [sp, #3772]
   18ac0:	ldr	x3, [sp, #24]
   18ac4:	ldr	x2, [sp, #32]
   18ac8:	ldr	w1, [sp, #3772]
   18acc:	ldr	x0, [sp, #40]
   18ad0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18ad4:	mov	w1, w0
   18ad8:	add	x0, sp, #0x3c
   18adc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18ae0:	and	w0, w0, #0xff
   18ae4:	eor	w0, w0, #0x1
   18ae8:	and	w0, w0, #0xff
   18aec:	cmp	w0, #0x0
   18af0:	b.eq	18afc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13b8c>  // b.none
   18af4:	mov	w0, #0x0                   	// #0
   18af8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18afc:	mov	w2, #0x5                   	// #5
   18b00:	mov	w1, #0x5                   	// #5
   18b04:	ldr	w0, [sp, #52]
   18b08:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18b0c:	str	w0, [sp, #3772]
   18b10:	ldr	x3, [sp, #24]
   18b14:	ldr	x2, [sp, #32]
   18b18:	ldr	w1, [sp, #3772]
   18b1c:	ldr	x0, [sp, #40]
   18b20:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18b24:	mov	w1, w0
   18b28:	add	x0, sp, #0x3c
   18b2c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18b30:	and	w0, w0, #0xff
   18b34:	eor	w0, w0, #0x1
   18b38:	and	w0, w0, #0xff
   18b3c:	cmp	w0, #0x0
   18b40:	b.eq	18b4c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13bdc>  // b.none
   18b44:	mov	w0, #0x0                   	// #0
   18b48:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18b4c:	ldr	w0, [sp, #60]
   18b50:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18b54:	mov	w2, #0x5                   	// #5
   18b58:	mov	w1, #0x0                   	// #0
   18b5c:	ldr	w0, [sp, #52]
   18b60:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18b64:	str	w0, [sp, #3772]
   18b68:	ldr	x3, [sp, #24]
   18b6c:	ldr	x2, [sp, #32]
   18b70:	ldr	w1, [sp, #3772]
   18b74:	ldr	x0, [sp, #40]
   18b78:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   18b7c:	mov	w1, w0
   18b80:	add	x0, sp, #0x3c
   18b84:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18b88:	and	w0, w0, #0xff
   18b8c:	eor	w0, w0, #0x1
   18b90:	and	w0, w0, #0xff
   18b94:	cmp	w0, #0x0
   18b98:	b.eq	18ba4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13c34>  // b.none
   18b9c:	mov	w0, #0x0                   	// #0
   18ba0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18ba4:	mov	w2, #0x5                   	// #5
   18ba8:	mov	w1, #0x5                   	// #5
   18bac:	ldr	w0, [sp, #52]
   18bb0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18bb4:	str	w0, [sp, #3772]
   18bb8:	ldr	x3, [sp, #24]
   18bbc:	ldr	x2, [sp, #32]
   18bc0:	ldr	w1, [sp, #3772]
   18bc4:	ldr	x0, [sp, #40]
   18bc8:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18bcc:	mov	w1, w0
   18bd0:	add	x0, sp, #0x3c
   18bd4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18bd8:	and	w0, w0, #0xff
   18bdc:	eor	w0, w0, #0x1
   18be0:	and	w0, w0, #0xff
   18be4:	cmp	w0, #0x0
   18be8:	b.eq	18bf4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13c84>  // b.none
   18bec:	mov	w0, #0x0                   	// #0
   18bf0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18bf4:	ldr	w0, [sp, #60]
   18bf8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18bfc:	mov	w2, #0x5                   	// #5
   18c00:	mov	w1, #0x0                   	// #0
   18c04:	ldr	w0, [sp, #52]
   18c08:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18c0c:	str	w0, [sp, #3772]
   18c10:	ldr	x3, [sp, #24]
   18c14:	ldr	x2, [sp, #32]
   18c18:	ldr	w1, [sp, #3772]
   18c1c:	ldr	x0, [sp, #40]
   18c20:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   18c24:	mov	w1, w0
   18c28:	add	x0, sp, #0x3c
   18c2c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18c30:	and	w0, w0, #0xff
   18c34:	eor	w0, w0, #0x1
   18c38:	and	w0, w0, #0xff
   18c3c:	cmp	w0, #0x0
   18c40:	b.eq	18c4c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13cdc>  // b.none
   18c44:	mov	w0, #0x0                   	// #0
   18c48:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18c4c:	mov	w2, #0x5                   	// #5
   18c50:	mov	w1, #0x5                   	// #5
   18c54:	ldr	w0, [sp, #52]
   18c58:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18c5c:	str	w0, [sp, #3772]
   18c60:	ldr	x3, [sp, #24]
   18c64:	ldr	x2, [sp, #32]
   18c68:	ldr	w1, [sp, #3772]
   18c6c:	ldr	x0, [sp, #40]
   18c70:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   18c74:	mov	w1, w0
   18c78:	add	x0, sp, #0x3c
   18c7c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18c80:	and	w0, w0, #0xff
   18c84:	eor	w0, w0, #0x1
   18c88:	and	w0, w0, #0xff
   18c8c:	cmp	w0, #0x0
   18c90:	b.eq	18c9c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13d2c>  // b.none
   18c94:	mov	w0, #0x0                   	// #0
   18c98:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18c9c:	mov	w2, #0x2                   	// #2
   18ca0:	mov	w1, #0x13                  	// #19
   18ca4:	ldr	w0, [sp, #52]
   18ca8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18cac:	str	w0, [sp, #3772]
   18cb0:	ldr	w0, [sp, #3772]
   18cb4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   18cb8:	add	x2, sp, #0x800
   18cbc:	stp	x0, x1, [x2, #-168]
   18cc0:	add	x0, sp, #0x758
   18cc4:	mov	x1, x0
   18cc8:	ldr	x0, [sp, #40]
   18ccc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   18cd0:	ldr	w0, [sp, #60]
   18cd4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18cd8:	mov	w2, #0x5                   	// #5
   18cdc:	mov	w1, #0x0                   	// #0
   18ce0:	ldr	w0, [sp, #52]
   18ce4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18ce8:	str	w0, [sp, #3772]
   18cec:	ldr	x3, [sp, #24]
   18cf0:	ldr	x2, [sp, #32]
   18cf4:	ldr	w1, [sp, #3772]
   18cf8:	ldr	x0, [sp, #40]
   18cfc:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18d00:	mov	w1, w0
   18d04:	add	x0, sp, #0x3c
   18d08:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18d0c:	and	w0, w0, #0xff
   18d10:	eor	w0, w0, #0x1
   18d14:	and	w0, w0, #0xff
   18d18:	cmp	w0, #0x0
   18d1c:	b.eq	18d28 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13db8>  // b.none
   18d20:	mov	w0, #0x0                   	// #0
   18d24:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18d28:	mov	w2, #0x5                   	// #5
   18d2c:	mov	w1, #0x5                   	// #5
   18d30:	ldr	w0, [sp, #52]
   18d34:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18d38:	str	w0, [sp, #3772]
   18d3c:	ldr	x3, [sp, #24]
   18d40:	ldr	x2, [sp, #32]
   18d44:	ldr	w1, [sp, #3772]
   18d48:	ldr	x0, [sp, #40]
   18d4c:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   18d50:	mov	w1, w0
   18d54:	add	x0, sp, #0x3c
   18d58:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18d5c:	and	w0, w0, #0xff
   18d60:	eor	w0, w0, #0x1
   18d64:	and	w0, w0, #0xff
   18d68:	cmp	w0, #0x0
   18d6c:	b.eq	18d78 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13e08>  // b.none
   18d70:	mov	w0, #0x0                   	// #0
   18d74:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18d78:	mov	w2, #0x5                   	// #5
   18d7c:	mov	w1, #0x10                  	// #16
   18d80:	ldr	w0, [sp, #52]
   18d84:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18d88:	str	w0, [sp, #3772]
   18d8c:	ldr	x3, [sp, #24]
   18d90:	ldr	x2, [sp, #32]
   18d94:	ldr	w1, [sp, #3772]
   18d98:	ldr	x0, [sp, #40]
   18d9c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18da0:	mov	w1, w0
   18da4:	add	x0, sp, #0x3c
   18da8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18dac:	and	w0, w0, #0xff
   18db0:	eor	w0, w0, #0x1
   18db4:	and	w0, w0, #0xff
   18db8:	cmp	w0, #0x0
   18dbc:	b.eq	18dc8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13e58>  // b.none
   18dc0:	mov	w0, #0x0                   	// #0
   18dc4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18dc8:	ldr	w0, [sp, #60]
   18dcc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18dd0:	mov	w2, #0x5                   	// #5
   18dd4:	mov	w1, #0x0                   	// #0
   18dd8:	ldr	w0, [sp, #52]
   18ddc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18de0:	str	w0, [sp, #3772]
   18de4:	ldr	x3, [sp, #24]
   18de8:	ldr	x2, [sp, #32]
   18dec:	ldr	w1, [sp, #3772]
   18df0:	ldr	x0, [sp, #40]
   18df4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18df8:	mov	w1, w0
   18dfc:	add	x0, sp, #0x3c
   18e00:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18e04:	and	w0, w0, #0xff
   18e08:	eor	w0, w0, #0x1
   18e0c:	and	w0, w0, #0xff
   18e10:	cmp	w0, #0x0
   18e14:	b.eq	18e20 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13eb0>  // b.none
   18e18:	mov	w0, #0x0                   	// #0
   18e1c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18e20:	mov	w2, #0x5                   	// #5
   18e24:	mov	w1, #0x5                   	// #5
   18e28:	ldr	w0, [sp, #52]
   18e2c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18e30:	str	w0, [sp, #3772]
   18e34:	ldr	x3, [sp, #24]
   18e38:	ldr	x2, [sp, #32]
   18e3c:	ldr	w1, [sp, #3772]
   18e40:	ldr	x0, [sp, #40]
   18e44:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   18e48:	mov	w1, w0
   18e4c:	add	x0, sp, #0x3c
   18e50:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18e54:	and	w0, w0, #0xff
   18e58:	eor	w0, w0, #0x1
   18e5c:	and	w0, w0, #0xff
   18e60:	cmp	w0, #0x0
   18e64:	b.eq	18e70 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13f00>  // b.none
   18e68:	mov	w0, #0x0                   	// #0
   18e6c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18e70:	mov	w2, #0x5                   	// #5
   18e74:	mov	w1, #0x10                  	// #16
   18e78:	ldr	w0, [sp, #52]
   18e7c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18e80:	str	w0, [sp, #3772]
   18e84:	ldr	x3, [sp, #24]
   18e88:	ldr	x2, [sp, #32]
   18e8c:	ldr	w1, [sp, #3772]
   18e90:	ldr	x0, [sp, #40]
   18e94:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   18e98:	mov	w1, w0
   18e9c:	add	x0, sp, #0x3c
   18ea0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18ea4:	and	w0, w0, #0xff
   18ea8:	eor	w0, w0, #0x1
   18eac:	and	w0, w0, #0xff
   18eb0:	cmp	w0, #0x0
   18eb4:	b.eq	18ec0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13f50>  // b.none
   18eb8:	mov	w0, #0x0                   	// #0
   18ebc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18ec0:	ldr	w0, [sp, #60]
   18ec4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18ec8:	mov	w2, #0x5                   	// #5
   18ecc:	mov	w1, #0x0                   	// #0
   18ed0:	ldr	w0, [sp, #52]
   18ed4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18ed8:	str	w0, [sp, #3772]
   18edc:	ldr	x3, [sp, #24]
   18ee0:	ldr	x2, [sp, #32]
   18ee4:	ldr	w1, [sp, #3772]
   18ee8:	ldr	x0, [sp, #40]
   18eec:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18ef0:	mov	w1, w0
   18ef4:	add	x0, sp, #0x3c
   18ef8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18efc:	and	w0, w0, #0xff
   18f00:	eor	w0, w0, #0x1
   18f04:	and	w0, w0, #0xff
   18f08:	cmp	w0, #0x0
   18f0c:	b.eq	18f18 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13fa8>  // b.none
   18f10:	mov	w0, #0x0                   	// #0
   18f14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18f18:	mov	w2, #0x5                   	// #5
   18f1c:	mov	w1, #0x0                   	// #0
   18f20:	ldr	w0, [sp, #52]
   18f24:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18f28:	str	w0, [sp, #3772]
   18f2c:	ldr	x3, [sp, #24]
   18f30:	ldr	x2, [sp, #32]
   18f34:	ldr	w1, [sp, #3772]
   18f38:	ldr	x0, [sp, #40]
   18f3c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18f40:	mov	w1, w0
   18f44:	add	x0, sp, #0x3c
   18f48:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18f4c:	and	w0, w0, #0xff
   18f50:	eor	w0, w0, #0x1
   18f54:	and	w0, w0, #0xff
   18f58:	cmp	w0, #0x0
   18f5c:	b.eq	18f68 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x13ff8>  // b.none
   18f60:	mov	w0, #0x0                   	// #0
   18f64:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18f68:	mov	w2, #0x5                   	// #5
   18f6c:	mov	w1, #0x5                   	// #5
   18f70:	ldr	w0, [sp, #52]
   18f74:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18f78:	str	w0, [sp, #3772]
   18f7c:	ldr	x3, [sp, #24]
   18f80:	ldr	x2, [sp, #32]
   18f84:	ldr	w1, [sp, #3772]
   18f88:	ldr	x0, [sp, #40]
   18f8c:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   18f90:	mov	w1, w0
   18f94:	add	x0, sp, #0x3c
   18f98:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18f9c:	and	w0, w0, #0xff
   18fa0:	eor	w0, w0, #0x1
   18fa4:	and	w0, w0, #0xff
   18fa8:	cmp	w0, #0x0
   18fac:	b.eq	18fb8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14048>  // b.none
   18fb0:	mov	w0, #0x0                   	// #0
   18fb4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   18fb8:	mov	w2, #0x5                   	// #5
   18fbc:	mov	w1, #0x10                  	// #16
   18fc0:	ldr	w0, [sp, #52]
   18fc4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   18fc8:	str	w0, [sp, #3772]
   18fcc:	ldr	x3, [sp, #24]
   18fd0:	ldr	x2, [sp, #32]
   18fd4:	ldr	w1, [sp, #3772]
   18fd8:	ldr	x0, [sp, #40]
   18fdc:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   18fe0:	mov	w1, w0
   18fe4:	add	x0, sp, #0x3c
   18fe8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   18fec:	and	w0, w0, #0xff
   18ff0:	eor	w0, w0, #0x1
   18ff4:	and	w0, w0, #0xff
   18ff8:	cmp	w0, #0x0
   18ffc:	b.eq	19008 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14098>  // b.none
   19000:	mov	w0, #0x0                   	// #0
   19004:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19008:	ldr	w0, [sp, #60]
   1900c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19010:	mov	w2, #0x5                   	// #5
   19014:	mov	w1, #0x0                   	// #0
   19018:	ldr	w0, [sp, #52]
   1901c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19020:	str	w0, [sp, #3772]
   19024:	ldr	x3, [sp, #24]
   19028:	ldr	x2, [sp, #32]
   1902c:	ldr	w1, [sp, #3772]
   19030:	ldr	x0, [sp, #40]
   19034:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19038:	mov	w1, w0
   1903c:	add	x0, sp, #0x3c
   19040:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19044:	and	w0, w0, #0xff
   19048:	eor	w0, w0, #0x1
   1904c:	and	w0, w0, #0xff
   19050:	cmp	w0, #0x0
   19054:	b.eq	19060 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x140f0>  // b.none
   19058:	mov	w0, #0x0                   	// #0
   1905c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19060:	mov	w2, #0x5                   	// #5
   19064:	mov	w1, #0x0                   	// #0
   19068:	ldr	w0, [sp, #52]
   1906c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19070:	str	w0, [sp, #3772]
   19074:	ldr	x3, [sp, #24]
   19078:	ldr	x2, [sp, #32]
   1907c:	ldr	w1, [sp, #3772]
   19080:	ldr	x0, [sp, #40]
   19084:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19088:	mov	w1, w0
   1908c:	add	x0, sp, #0x3c
   19090:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19094:	and	w0, w0, #0xff
   19098:	eor	w0, w0, #0x1
   1909c:	and	w0, w0, #0xff
   190a0:	cmp	w0, #0x0
   190a4:	b.eq	190b0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14140>  // b.none
   190a8:	mov	w0, #0x0                   	// #0
   190ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   190b0:	mov	w2, #0x5                   	// #5
   190b4:	mov	w1, #0x5                   	// #5
   190b8:	ldr	w0, [sp, #52]
   190bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   190c0:	str	w0, [sp, #3772]
   190c4:	ldr	x3, [sp, #24]
   190c8:	ldr	x2, [sp, #32]
   190cc:	ldr	w1, [sp, #3772]
   190d0:	ldr	x0, [sp, #40]
   190d4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   190d8:	mov	w1, w0
   190dc:	add	x0, sp, #0x3c
   190e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   190e4:	and	w0, w0, #0xff
   190e8:	eor	w0, w0, #0x1
   190ec:	and	w0, w0, #0xff
   190f0:	cmp	w0, #0x0
   190f4:	b.eq	19100 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14190>  // b.none
   190f8:	mov	w0, #0x0                   	// #0
   190fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19100:	mov	w2, #0x5                   	// #5
   19104:	mov	w1, #0x10                  	// #16
   19108:	ldr	w0, [sp, #52]
   1910c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19110:	str	w0, [sp, #3772]
   19114:	ldr	x3, [sp, #24]
   19118:	ldr	x2, [sp, #32]
   1911c:	ldr	w1, [sp, #3772]
   19120:	ldr	x0, [sp, #40]
   19124:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   19128:	mov	w1, w0
   1912c:	add	x0, sp, #0x3c
   19130:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19134:	and	w0, w0, #0xff
   19138:	eor	w0, w0, #0x1
   1913c:	and	w0, w0, #0xff
   19140:	cmp	w0, #0x0
   19144:	b.eq	19150 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x141e0>  // b.none
   19148:	mov	w0, #0x0                   	// #0
   1914c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19150:	ldr	w0, [sp, #60]
   19154:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19158:	mov	w2, #0x5                   	// #5
   1915c:	mov	w1, #0x0                   	// #0
   19160:	ldr	w0, [sp, #52]
   19164:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19168:	str	w0, [sp, #3772]
   1916c:	ldr	x3, [sp, #24]
   19170:	ldr	x2, [sp, #32]
   19174:	ldr	w1, [sp, #3772]
   19178:	ldr	x0, [sp, #40]
   1917c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   19180:	mov	w1, w0
   19184:	add	x0, sp, #0x3c
   19188:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1918c:	and	w0, w0, #0xff
   19190:	eor	w0, w0, #0x1
   19194:	and	w0, w0, #0xff
   19198:	cmp	w0, #0x0
   1919c:	b.eq	191a8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14238>  // b.none
   191a0:	mov	w0, #0x0                   	// #0
   191a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   191a8:	mov	w2, #0x5                   	// #5
   191ac:	mov	w1, #0x5                   	// #5
   191b0:	ldr	w0, [sp, #52]
   191b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   191b8:	str	w0, [sp, #3772]
   191bc:	ldr	x3, [sp, #24]
   191c0:	ldr	x2, [sp, #32]
   191c4:	ldr	w1, [sp, #3772]
   191c8:	ldr	x0, [sp, #40]
   191cc:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   191d0:	mov	w1, w0
   191d4:	add	x0, sp, #0x3c
   191d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   191dc:	and	w0, w0, #0xff
   191e0:	eor	w0, w0, #0x1
   191e4:	and	w0, w0, #0xff
   191e8:	cmp	w0, #0x0
   191ec:	b.eq	191f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14288>  // b.none
   191f0:	mov	w0, #0x0                   	// #0
   191f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   191f8:	mov	w2, #0x5                   	// #5
   191fc:	mov	w1, #0x10                  	// #16
   19200:	ldr	w0, [sp, #52]
   19204:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19208:	str	w0, [sp, #3772]
   1920c:	ldr	x3, [sp, #24]
   19210:	ldr	x2, [sp, #32]
   19214:	ldr	w1, [sp, #3772]
   19218:	ldr	x0, [sp, #40]
   1921c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   19220:	mov	w1, w0
   19224:	add	x0, sp, #0x3c
   19228:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1922c:	and	w0, w0, #0xff
   19230:	eor	w0, w0, #0x1
   19234:	and	w0, w0, #0xff
   19238:	cmp	w0, #0x0
   1923c:	b.eq	19248 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x142d8>  // b.none
   19240:	mov	w0, #0x0                   	// #0
   19244:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19248:	ldr	w0, [sp, #60]
   1924c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19250:	mov	w2, #0x5                   	// #5
   19254:	mov	w1, #0x0                   	// #0
   19258:	ldr	w0, [sp, #52]
   1925c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19260:	str	w0, [sp, #3772]
   19264:	ldr	x3, [sp, #24]
   19268:	ldr	x2, [sp, #32]
   1926c:	ldr	w1, [sp, #3772]
   19270:	ldr	x0, [sp, #40]
   19274:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   19278:	mov	w1, w0
   1927c:	add	x0, sp, #0x3c
   19280:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19284:	and	w0, w0, #0xff
   19288:	eor	w0, w0, #0x1
   1928c:	and	w0, w0, #0xff
   19290:	cmp	w0, #0x0
   19294:	b.eq	192a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14330>  // b.none
   19298:	mov	w0, #0x0                   	// #0
   1929c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   192a0:	mov	w2, #0x5                   	// #5
   192a4:	mov	w1, #0x0                   	// #0
   192a8:	ldr	w0, [sp, #52]
   192ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   192b0:	str	w0, [sp, #3772]
   192b4:	ldr	x3, [sp, #24]
   192b8:	ldr	x2, [sp, #32]
   192bc:	ldr	w1, [sp, #3772]
   192c0:	ldr	x0, [sp, #40]
   192c4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   192c8:	mov	w1, w0
   192cc:	add	x0, sp, #0x3c
   192d0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   192d4:	and	w0, w0, #0xff
   192d8:	eor	w0, w0, #0x1
   192dc:	and	w0, w0, #0xff
   192e0:	cmp	w0, #0x0
   192e4:	b.eq	192f0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14380>  // b.none
   192e8:	mov	w0, #0x0                   	// #0
   192ec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   192f0:	mov	w2, #0x5                   	// #5
   192f4:	mov	w1, #0x5                   	// #5
   192f8:	ldr	w0, [sp, #52]
   192fc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19300:	str	w0, [sp, #3772]
   19304:	ldr	x3, [sp, #24]
   19308:	ldr	x2, [sp, #32]
   1930c:	ldr	w1, [sp, #3772]
   19310:	ldr	x0, [sp, #40]
   19314:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   19318:	mov	w1, w0
   1931c:	add	x0, sp, #0x3c
   19320:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19324:	and	w0, w0, #0xff
   19328:	eor	w0, w0, #0x1
   1932c:	and	w0, w0, #0xff
   19330:	cmp	w0, #0x0
   19334:	b.eq	19340 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x143d0>  // b.none
   19338:	mov	w0, #0x0                   	// #0
   1933c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19340:	mov	w2, #0x5                   	// #5
   19344:	mov	w1, #0x10                  	// #16
   19348:	ldr	w0, [sp, #52]
   1934c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19350:	str	w0, [sp, #3772]
   19354:	ldr	x3, [sp, #24]
   19358:	ldr	x2, [sp, #32]
   1935c:	ldr	w1, [sp, #3772]
   19360:	ldr	x0, [sp, #40]
   19364:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   19368:	mov	w1, w0
   1936c:	add	x0, sp, #0x3c
   19370:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19374:	and	w0, w0, #0xff
   19378:	eor	w0, w0, #0x1
   1937c:	and	w0, w0, #0xff
   19380:	cmp	w0, #0x0
   19384:	b.eq	19390 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14420>  // b.none
   19388:	mov	w0, #0x0                   	// #0
   1938c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19390:	ldr	w0, [sp, #60]
   19394:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19398:	mov	w2, #0x5                   	// #5
   1939c:	mov	w1, #0x0                   	// #0
   193a0:	ldr	w0, [sp, #52]
   193a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   193a8:	str	w0, [sp, #3772]
   193ac:	ldr	x3, [sp, #24]
   193b0:	ldr	x2, [sp, #32]
   193b4:	ldr	w1, [sp, #3772]
   193b8:	ldr	x0, [sp, #40]
   193bc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   193c0:	mov	w1, w0
   193c4:	add	x0, sp, #0x3c
   193c8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   193cc:	and	w0, w0, #0xff
   193d0:	eor	w0, w0, #0x1
   193d4:	and	w0, w0, #0xff
   193d8:	cmp	w0, #0x0
   193dc:	b.eq	193e8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14478>  // b.none
   193e0:	mov	w0, #0x0                   	// #0
   193e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   193e8:	mov	w2, #0x5                   	// #5
   193ec:	mov	w1, #0x5                   	// #5
   193f0:	ldr	w0, [sp, #52]
   193f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   193f8:	str	w0, [sp, #3772]
   193fc:	ldr	x3, [sp, #24]
   19400:	ldr	x2, [sp, #32]
   19404:	ldr	w1, [sp, #3772]
   19408:	ldr	x0, [sp, #40]
   1940c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   19410:	mov	w1, w0
   19414:	add	x0, sp, #0x3c
   19418:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1941c:	and	w0, w0, #0xff
   19420:	eor	w0, w0, #0x1
   19424:	and	w0, w0, #0xff
   19428:	cmp	w0, #0x0
   1942c:	b.eq	19438 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x144c8>  // b.none
   19430:	mov	w0, #0x0                   	// #0
   19434:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19438:	ldr	w0, [sp, #60]
   1943c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19440:	mov	w2, #0x5                   	// #5
   19444:	mov	w1, #0x0                   	// #0
   19448:	ldr	w0, [sp, #52]
   1944c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19450:	str	w0, [sp, #3772]
   19454:	ldr	x3, [sp, #24]
   19458:	ldr	x2, [sp, #32]
   1945c:	ldr	w1, [sp, #3772]
   19460:	ldr	x0, [sp, #40]
   19464:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   19468:	mov	w1, w0
   1946c:	add	x0, sp, #0x3c
   19470:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19474:	and	w0, w0, #0xff
   19478:	eor	w0, w0, #0x1
   1947c:	and	w0, w0, #0xff
   19480:	cmp	w0, #0x0
   19484:	b.eq	19490 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14520>  // b.none
   19488:	mov	w0, #0x0                   	// #0
   1948c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19490:	mov	w2, #0x5                   	// #5
   19494:	mov	w1, #0x0                   	// #0
   19498:	ldr	w0, [sp, #52]
   1949c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   194a0:	str	w0, [sp, #3772]
   194a4:	ldr	x3, [sp, #24]
   194a8:	ldr	x2, [sp, #32]
   194ac:	ldr	w1, [sp, #3772]
   194b0:	ldr	x0, [sp, #40]
   194b4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   194b8:	mov	w1, w0
   194bc:	add	x0, sp, #0x3c
   194c0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   194c4:	and	w0, w0, #0xff
   194c8:	eor	w0, w0, #0x1
   194cc:	and	w0, w0, #0xff
   194d0:	cmp	w0, #0x0
   194d4:	b.eq	194e0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14570>  // b.none
   194d8:	mov	w0, #0x0                   	// #0
   194dc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   194e0:	mov	w2, #0x5                   	// #5
   194e4:	mov	w1, #0x5                   	// #5
   194e8:	ldr	w0, [sp, #52]
   194ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   194f0:	str	w0, [sp, #3772]
   194f4:	ldr	x3, [sp, #24]
   194f8:	ldr	x2, [sp, #32]
   194fc:	ldr	w1, [sp, #3772]
   19500:	ldr	x0, [sp, #40]
   19504:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   19508:	mov	w1, w0
   1950c:	add	x0, sp, #0x3c
   19510:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19514:	and	w0, w0, #0xff
   19518:	eor	w0, w0, #0x1
   1951c:	and	w0, w0, #0xff
   19520:	cmp	w0, #0x0
   19524:	b.eq	19530 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x145c0>  // b.none
   19528:	mov	w0, #0x0                   	// #0
   1952c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19530:	mov	w2, #0x5                   	// #5
   19534:	mov	w1, #0x10                  	// #16
   19538:	ldr	w0, [sp, #52]
   1953c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19540:	str	w0, [sp, #3772]
   19544:	ldr	x3, [sp, #24]
   19548:	ldr	x2, [sp, #32]
   1954c:	ldr	w1, [sp, #3772]
   19550:	ldr	x0, [sp, #40]
   19554:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   19558:	mov	w1, w0
   1955c:	add	x0, sp, #0x3c
   19560:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19564:	and	w0, w0, #0xff
   19568:	eor	w0, w0, #0x1
   1956c:	and	w0, w0, #0xff
   19570:	cmp	w0, #0x0
   19574:	b.eq	19580 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14610>  // b.none
   19578:	mov	w0, #0x0                   	// #0
   1957c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19580:	ldr	w0, [sp, #60]
   19584:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19588:	mov	w2, #0x5                   	// #5
   1958c:	mov	w1, #0x0                   	// #0
   19590:	ldr	w0, [sp, #52]
   19594:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19598:	str	w0, [sp, #3772]
   1959c:	ldr	x3, [sp, #24]
   195a0:	ldr	x2, [sp, #32]
   195a4:	ldr	w1, [sp, #3772]
   195a8:	ldr	x0, [sp, #40]
   195ac:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   195b0:	mov	w1, w0
   195b4:	add	x0, sp, #0x3c
   195b8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   195bc:	and	w0, w0, #0xff
   195c0:	eor	w0, w0, #0x1
   195c4:	and	w0, w0, #0xff
   195c8:	cmp	w0, #0x0
   195cc:	b.eq	195d8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14668>  // b.none
   195d0:	mov	w0, #0x0                   	// #0
   195d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   195d8:	mov	w2, #0x5                   	// #5
   195dc:	mov	w1, #0x5                   	// #5
   195e0:	ldr	w0, [sp, #52]
   195e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   195e8:	str	w0, [sp, #3772]
   195ec:	ldr	x3, [sp, #24]
   195f0:	ldr	x2, [sp, #32]
   195f4:	ldr	w1, [sp, #3772]
   195f8:	ldr	x0, [sp, #40]
   195fc:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   19600:	mov	w1, w0
   19604:	add	x0, sp, #0x3c
   19608:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1960c:	and	w0, w0, #0xff
   19610:	eor	w0, w0, #0x1
   19614:	and	w0, w0, #0xff
   19618:	cmp	w0, #0x0
   1961c:	b.eq	19628 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x146b8>  // b.none
   19620:	mov	w0, #0x0                   	// #0
   19624:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19628:	ldr	w0, [sp, #60]
   1962c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19630:	mov	w2, #0x5                   	// #5
   19634:	mov	w1, #0x0                   	// #0
   19638:	ldr	w0, [sp, #52]
   1963c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19640:	str	w0, [sp, #3772]
   19644:	ldr	x3, [sp, #24]
   19648:	ldr	x2, [sp, #32]
   1964c:	ldr	w1, [sp, #3772]
   19650:	ldr	x0, [sp, #40]
   19654:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   19658:	mov	w1, w0
   1965c:	add	x0, sp, #0x3c
   19660:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19664:	and	w0, w0, #0xff
   19668:	eor	w0, w0, #0x1
   1966c:	and	w0, w0, #0xff
   19670:	cmp	w0, #0x0
   19674:	b.eq	19680 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14710>  // b.none
   19678:	mov	w0, #0x0                   	// #0
   1967c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19680:	mov	w2, #0x5                   	// #5
   19684:	mov	w1, #0x5                   	// #5
   19688:	ldr	w0, [sp, #52]
   1968c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19690:	str	w0, [sp, #3772]
   19694:	ldr	x3, [sp, #24]
   19698:	ldr	x2, [sp, #32]
   1969c:	ldr	w1, [sp, #3772]
   196a0:	ldr	x0, [sp, #40]
   196a4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   196a8:	mov	w1, w0
   196ac:	add	x0, sp, #0x3c
   196b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   196b4:	and	w0, w0, #0xff
   196b8:	eor	w0, w0, #0x1
   196bc:	and	w0, w0, #0xff
   196c0:	cmp	w0, #0x0
   196c4:	b.eq	196d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14760>  // b.none
   196c8:	mov	w0, #0x0                   	// #0
   196cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   196d0:	mov	w2, #0x5                   	// #5
   196d4:	mov	w1, #0x10                  	// #16
   196d8:	ldr	w0, [sp, #52]
   196dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   196e0:	str	w0, [sp, #3772]
   196e4:	ldr	x3, [sp, #24]
   196e8:	ldr	x2, [sp, #32]
   196ec:	ldr	w1, [sp, #3772]
   196f0:	ldr	x0, [sp, #40]
   196f4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   196f8:	mov	w1, w0
   196fc:	add	x0, sp, #0x3c
   19700:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19704:	and	w0, w0, #0xff
   19708:	eor	w0, w0, #0x1
   1970c:	and	w0, w0, #0xff
   19710:	cmp	w0, #0x0
   19714:	b.eq	19720 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x147b0>  // b.none
   19718:	mov	w0, #0x0                   	// #0
   1971c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19720:	mov	w2, #0x3                   	// #3
   19724:	mov	w1, #0xb                   	// #11
   19728:	ldr	w0, [sp, #52]
   1972c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19730:	str	w0, [sp, #3772]
   19734:	ldr	w0, [sp, #3772]
   19738:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1973c:	add	x2, sp, #0x800
   19740:	stp	x0, x1, [x2, #-152]
   19744:	add	x0, sp, #0x768
   19748:	mov	x1, x0
   1974c:	ldr	x0, [sp, #40]
   19750:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   19754:	ldr	w0, [sp, #60]
   19758:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1975c:	mov	w2, #0x5                   	// #5
   19760:	mov	w1, #0x0                   	// #0
   19764:	ldr	w0, [sp, #52]
   19768:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1976c:	str	w0, [sp, #3772]
   19770:	ldr	x3, [sp, #24]
   19774:	ldr	x2, [sp, #32]
   19778:	ldr	w1, [sp, #3772]
   1977c:	ldr	x0, [sp, #40]
   19780:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19784:	mov	w1, w0
   19788:	add	x0, sp, #0x3c
   1978c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19790:	and	w0, w0, #0xff
   19794:	eor	w0, w0, #0x1
   19798:	and	w0, w0, #0xff
   1979c:	cmp	w0, #0x0
   197a0:	b.eq	197ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1483c>  // b.none
   197a4:	mov	w0, #0x0                   	// #0
   197a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   197ac:	mov	w2, #0x5                   	// #5
   197b0:	mov	w1, #0x5                   	// #5
   197b4:	ldr	w0, [sp, #52]
   197b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   197bc:	str	w0, [sp, #3772]
   197c0:	ldr	x3, [sp, #24]
   197c4:	ldr	x2, [sp, #32]
   197c8:	ldr	w1, [sp, #3772]
   197cc:	ldr	x0, [sp, #40]
   197d0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   197d4:	mov	w1, w0
   197d8:	add	x0, sp, #0x3c
   197dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   197e0:	and	w0, w0, #0xff
   197e4:	eor	w0, w0, #0x1
   197e8:	and	w0, w0, #0xff
   197ec:	cmp	w0, #0x0
   197f0:	b.eq	197fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1488c>  // b.none
   197f4:	mov	w0, #0x0                   	// #0
   197f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   197fc:	mov	w2, #0x5                   	// #5
   19800:	mov	w1, #0x10                  	// #16
   19804:	ldr	w0, [sp, #52]
   19808:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1980c:	str	w0, [sp, #3772]
   19810:	ldr	x3, [sp, #24]
   19814:	ldr	x2, [sp, #32]
   19818:	ldr	w1, [sp, #3772]
   1981c:	ldr	x0, [sp, #40]
   19820:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19824:	mov	w1, w0
   19828:	add	x0, sp, #0x3c
   1982c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19830:	and	w0, w0, #0xff
   19834:	eor	w0, w0, #0x1
   19838:	and	w0, w0, #0xff
   1983c:	cmp	w0, #0x0
   19840:	b.eq	1984c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x148dc>  // b.none
   19844:	mov	w0, #0x0                   	// #0
   19848:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1984c:	ldr	w0, [sp, #60]
   19850:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19854:	mov	w2, #0x5                   	// #5
   19858:	mov	w1, #0x0                   	// #0
   1985c:	ldr	w0, [sp, #52]
   19860:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19864:	str	w0, [sp, #3772]
   19868:	ldr	x3, [sp, #24]
   1986c:	ldr	x2, [sp, #32]
   19870:	ldr	w1, [sp, #3772]
   19874:	ldr	x0, [sp, #40]
   19878:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1987c:	mov	w1, w0
   19880:	add	x0, sp, #0x3c
   19884:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19888:	and	w0, w0, #0xff
   1988c:	eor	w0, w0, #0x1
   19890:	and	w0, w0, #0xff
   19894:	cmp	w0, #0x0
   19898:	b.eq	198a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14934>  // b.none
   1989c:	mov	w0, #0x0                   	// #0
   198a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   198a4:	mov	w2, #0x5                   	// #5
   198a8:	mov	w1, #0x5                   	// #5
   198ac:	ldr	w0, [sp, #52]
   198b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   198b4:	str	w0, [sp, #3772]
   198b8:	ldr	x3, [sp, #24]
   198bc:	ldr	x2, [sp, #32]
   198c0:	ldr	w1, [sp, #3772]
   198c4:	ldr	x0, [sp, #40]
   198c8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   198cc:	mov	w1, w0
   198d0:	add	x0, sp, #0x3c
   198d4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   198d8:	and	w0, w0, #0xff
   198dc:	eor	w0, w0, #0x1
   198e0:	and	w0, w0, #0xff
   198e4:	cmp	w0, #0x0
   198e8:	b.eq	198f4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14984>  // b.none
   198ec:	mov	w0, #0x0                   	// #0
   198f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   198f4:	mov	w2, #0x1                   	// #1
   198f8:	mov	w1, #0x14                  	// #20
   198fc:	ldr	w0, [sp, #52]
   19900:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19904:	str	w0, [sp, #3772]
   19908:	ldr	w0, [sp, #3772]
   1990c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   19910:	add	x2, sp, #0x800
   19914:	stp	x0, x1, [x2, #-136]
   19918:	add	x0, sp, #0x778
   1991c:	mov	x1, x0
   19920:	ldr	x0, [sp, #40]
   19924:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   19928:	ldr	w0, [sp, #60]
   1992c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19930:	mov	w2, #0x5                   	// #5
   19934:	mov	w1, #0x0                   	// #0
   19938:	ldr	w0, [sp, #52]
   1993c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19940:	str	w0, [sp, #3772]
   19944:	ldr	x3, [sp, #24]
   19948:	ldr	x2, [sp, #32]
   1994c:	ldr	w1, [sp, #3772]
   19950:	ldr	x0, [sp, #40]
   19954:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19958:	mov	w1, w0
   1995c:	add	x0, sp, #0x3c
   19960:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19964:	and	w0, w0, #0xff
   19968:	eor	w0, w0, #0x1
   1996c:	and	w0, w0, #0xff
   19970:	cmp	w0, #0x0
   19974:	b.eq	19980 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14a10>  // b.none
   19978:	mov	w0, #0x0                   	// #0
   1997c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19980:	mov	w2, #0x5                   	// #5
   19984:	mov	w1, #0x5                   	// #5
   19988:	ldr	w0, [sp, #52]
   1998c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19990:	str	w0, [sp, #3772]
   19994:	ldr	x3, [sp, #24]
   19998:	ldr	x2, [sp, #32]
   1999c:	ldr	w1, [sp, #3772]
   199a0:	ldr	x0, [sp, #40]
   199a4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   199a8:	mov	w1, w0
   199ac:	add	x0, sp, #0x3c
   199b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   199b4:	and	w0, w0, #0xff
   199b8:	eor	w0, w0, #0x1
   199bc:	and	w0, w0, #0xff
   199c0:	cmp	w0, #0x0
   199c4:	b.eq	199d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14a60>  // b.none
   199c8:	mov	w0, #0x0                   	// #0
   199cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   199d0:	mov	w2, #0x2                   	// #2
   199d4:	mov	w1, #0x13                  	// #19
   199d8:	ldr	w0, [sp, #52]
   199dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   199e0:	str	w0, [sp, #3772]
   199e4:	ldr	w0, [sp, #3772]
   199e8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   199ec:	add	x2, sp, #0x800
   199f0:	stp	x0, x1, [x2, #-120]
   199f4:	add	x0, sp, #0x788
   199f8:	mov	x1, x0
   199fc:	ldr	x0, [sp, #40]
   19a00:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   19a04:	ldr	w0, [sp, #60]
   19a08:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19a0c:	mov	w2, #0x5                   	// #5
   19a10:	mov	w1, #0x0                   	// #0
   19a14:	ldr	w0, [sp, #52]
   19a18:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19a1c:	str	w0, [sp, #3772]
   19a20:	ldr	x3, [sp, #24]
   19a24:	ldr	x2, [sp, #32]
   19a28:	ldr	w1, [sp, #3772]
   19a2c:	ldr	x0, [sp, #40]
   19a30:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19a34:	mov	w1, w0
   19a38:	add	x0, sp, #0x3c
   19a3c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19a40:	and	w0, w0, #0xff
   19a44:	eor	w0, w0, #0x1
   19a48:	and	w0, w0, #0xff
   19a4c:	cmp	w0, #0x0
   19a50:	b.eq	19a5c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14aec>  // b.none
   19a54:	mov	w0, #0x0                   	// #0
   19a58:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19a5c:	mov	w2, #0x5                   	// #5
   19a60:	mov	w1, #0x5                   	// #5
   19a64:	ldr	w0, [sp, #52]
   19a68:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19a6c:	str	w0, [sp, #3772]
   19a70:	ldr	x3, [sp, #24]
   19a74:	ldr	x2, [sp, #32]
   19a78:	ldr	w1, [sp, #3772]
   19a7c:	ldr	x0, [sp, #40]
   19a80:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19a84:	mov	w1, w0
   19a88:	add	x0, sp, #0x3c
   19a8c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19a90:	and	w0, w0, #0xff
   19a94:	eor	w0, w0, #0x1
   19a98:	and	w0, w0, #0xff
   19a9c:	cmp	w0, #0x0
   19aa0:	b.eq	19aac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14b3c>  // b.none
   19aa4:	mov	w0, #0x0                   	// #0
   19aa8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19aac:	mov	w2, #0x3                   	// #3
   19ab0:	mov	w1, #0x12                  	// #18
   19ab4:	ldr	w0, [sp, #52]
   19ab8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19abc:	str	w0, [sp, #3772]
   19ac0:	ldr	w0, [sp, #3772]
   19ac4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   19ac8:	add	x2, sp, #0x800
   19acc:	stp	x0, x1, [x2, #-104]
   19ad0:	add	x0, sp, #0x798
   19ad4:	mov	x1, x0
   19ad8:	ldr	x0, [sp, #40]
   19adc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   19ae0:	ldr	w0, [sp, #60]
   19ae4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19ae8:	mov	w2, #0x5                   	// #5
   19aec:	mov	w1, #0x0                   	// #0
   19af0:	ldr	w0, [sp, #52]
   19af4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19af8:	str	w0, [sp, #3772]
   19afc:	ldr	x3, [sp, #24]
   19b00:	ldr	x2, [sp, #32]
   19b04:	ldr	w1, [sp, #3772]
   19b08:	ldr	x0, [sp, #40]
   19b0c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19b10:	mov	w1, w0
   19b14:	add	x0, sp, #0x3c
   19b18:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19b1c:	and	w0, w0, #0xff
   19b20:	eor	w0, w0, #0x1
   19b24:	and	w0, w0, #0xff
   19b28:	cmp	w0, #0x0
   19b2c:	b.eq	19b38 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14bc8>  // b.none
   19b30:	mov	w0, #0x0                   	// #0
   19b34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19b38:	mov	w2, #0x5                   	// #5
   19b3c:	mov	w1, #0x5                   	// #5
   19b40:	ldr	w0, [sp, #52]
   19b44:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19b48:	str	w0, [sp, #3772]
   19b4c:	ldr	x3, [sp, #24]
   19b50:	ldr	x2, [sp, #32]
   19b54:	ldr	w1, [sp, #3772]
   19b58:	ldr	x0, [sp, #40]
   19b5c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19b60:	mov	w1, w0
   19b64:	add	x0, sp, #0x3c
   19b68:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19b6c:	and	w0, w0, #0xff
   19b70:	eor	w0, w0, #0x1
   19b74:	and	w0, w0, #0xff
   19b78:	cmp	w0, #0x0
   19b7c:	b.eq	19b88 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14c18>  // b.none
   19b80:	mov	w0, #0x0                   	// #0
   19b84:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19b88:	mov	w2, #0x4                   	// #4
   19b8c:	mov	w1, #0x11                  	// #17
   19b90:	ldr	w0, [sp, #52]
   19b94:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19b98:	str	w0, [sp, #3772]
   19b9c:	ldr	w0, [sp, #3772]
   19ba0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   19ba4:	add	x2, sp, #0x800
   19ba8:	stp	x0, x1, [x2, #-88]
   19bac:	add	x0, sp, #0x7a8
   19bb0:	mov	x1, x0
   19bb4:	ldr	x0, [sp, #40]
   19bb8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   19bbc:	ldr	w0, [sp, #60]
   19bc0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19bc4:	mov	w2, #0x5                   	// #5
   19bc8:	mov	w1, #0x0                   	// #0
   19bcc:	ldr	w0, [sp, #52]
   19bd0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19bd4:	str	w0, [sp, #3772]
   19bd8:	ldr	x3, [sp, #24]
   19bdc:	ldr	x2, [sp, #32]
   19be0:	ldr	w1, [sp, #3772]
   19be4:	ldr	x0, [sp, #40]
   19be8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19bec:	mov	w1, w0
   19bf0:	add	x0, sp, #0x3c
   19bf4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19bf8:	and	w0, w0, #0xff
   19bfc:	eor	w0, w0, #0x1
   19c00:	and	w0, w0, #0xff
   19c04:	cmp	w0, #0x0
   19c08:	b.eq	19c14 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14ca4>  // b.none
   19c0c:	mov	w0, #0x0                   	// #0
   19c10:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19c14:	mov	w2, #0x5                   	// #5
   19c18:	mov	w1, #0x5                   	// #5
   19c1c:	ldr	w0, [sp, #52]
   19c20:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19c24:	str	w0, [sp, #3772]
   19c28:	ldr	x3, [sp, #24]
   19c2c:	ldr	x2, [sp, #32]
   19c30:	ldr	w1, [sp, #3772]
   19c34:	ldr	x0, [sp, #40]
   19c38:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19c3c:	mov	w1, w0
   19c40:	add	x0, sp, #0x3c
   19c44:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19c48:	and	w0, w0, #0xff
   19c4c:	eor	w0, w0, #0x1
   19c50:	and	w0, w0, #0xff
   19c54:	cmp	w0, #0x0
   19c58:	b.eq	19c64 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14cf4>  // b.none
   19c5c:	mov	w0, #0x0                   	// #0
   19c60:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19c64:	ldr	w0, [sp, #60]
   19c68:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19c6c:	mov	w2, #0x5                   	// #5
   19c70:	mov	w1, #0x0                   	// #0
   19c74:	ldr	w0, [sp, #52]
   19c78:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19c7c:	str	w0, [sp, #3772]
   19c80:	ldr	x3, [sp, #24]
   19c84:	ldr	x2, [sp, #32]
   19c88:	ldr	w1, [sp, #3772]
   19c8c:	ldr	x0, [sp, #40]
   19c90:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19c94:	mov	w1, w0
   19c98:	add	x0, sp, #0x3c
   19c9c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19ca0:	and	w0, w0, #0xff
   19ca4:	eor	w0, w0, #0x1
   19ca8:	and	w0, w0, #0xff
   19cac:	cmp	w0, #0x0
   19cb0:	b.eq	19cbc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14d4c>  // b.none
   19cb4:	mov	w0, #0x0                   	// #0
   19cb8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19cbc:	mov	w2, #0x5                   	// #5
   19cc0:	mov	w1, #0x5                   	// #5
   19cc4:	ldr	w0, [sp, #52]
   19cc8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19ccc:	str	w0, [sp, #3772]
   19cd0:	ldr	x3, [sp, #24]
   19cd4:	ldr	x2, [sp, #32]
   19cd8:	ldr	w1, [sp, #3772]
   19cdc:	ldr	x0, [sp, #40]
   19ce0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   19ce4:	mov	w1, w0
   19ce8:	add	x0, sp, #0x3c
   19cec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19cf0:	and	w0, w0, #0xff
   19cf4:	eor	w0, w0, #0x1
   19cf8:	and	w0, w0, #0xff
   19cfc:	cmp	w0, #0x0
   19d00:	b.eq	19d0c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14d9c>  // b.none
   19d04:	mov	w0, #0x0                   	// #0
   19d08:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19d0c:	ldr	w0, [sp, #60]
   19d10:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19d14:	mov	w2, #0x5                   	// #5
   19d18:	mov	w1, #0x0                   	// #0
   19d1c:	ldr	w0, [sp, #52]
   19d20:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19d24:	str	w0, [sp, #3772]
   19d28:	ldr	x3, [sp, #24]
   19d2c:	ldr	x2, [sp, #32]
   19d30:	ldr	w1, [sp, #3772]
   19d34:	ldr	x0, [sp, #40]
   19d38:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19d3c:	mov	w1, w0
   19d40:	add	x0, sp, #0x3c
   19d44:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19d48:	and	w0, w0, #0xff
   19d4c:	eor	w0, w0, #0x1
   19d50:	and	w0, w0, #0xff
   19d54:	cmp	w0, #0x0
   19d58:	b.eq	19d64 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14df4>  // b.none
   19d5c:	mov	w0, #0x0                   	// #0
   19d60:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19d64:	mov	w2, #0x5                   	// #5
   19d68:	mov	w1, #0x5                   	// #5
   19d6c:	ldr	w0, [sp, #52]
   19d70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19d74:	str	w0, [sp, #3772]
   19d78:	ldr	x3, [sp, #24]
   19d7c:	ldr	x2, [sp, #32]
   19d80:	ldr	w1, [sp, #3772]
   19d84:	ldr	x0, [sp, #40]
   19d88:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   19d8c:	mov	w1, w0
   19d90:	add	x0, sp, #0x3c
   19d94:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19d98:	and	w0, w0, #0xff
   19d9c:	eor	w0, w0, #0x1
   19da0:	and	w0, w0, #0xff
   19da4:	cmp	w0, #0x0
   19da8:	b.eq	19db4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14e44>  // b.none
   19dac:	mov	w0, #0x0                   	// #0
   19db0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19db4:	ldr	w0, [sp, #60]
   19db8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19dbc:	mov	w2, #0x5                   	// #5
   19dc0:	mov	w1, #0x0                   	// #0
   19dc4:	ldr	w0, [sp, #52]
   19dc8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19dcc:	str	w0, [sp, #3772]
   19dd0:	ldr	x3, [sp, #24]
   19dd4:	ldr	x2, [sp, #32]
   19dd8:	ldr	w1, [sp, #3772]
   19ddc:	ldr	x0, [sp, #40]
   19de0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19de4:	mov	w1, w0
   19de8:	add	x0, sp, #0x3c
   19dec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19df0:	and	w0, w0, #0xff
   19df4:	eor	w0, w0, #0x1
   19df8:	and	w0, w0, #0xff
   19dfc:	cmp	w0, #0x0
   19e00:	b.eq	19e0c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14e9c>  // b.none
   19e04:	mov	w0, #0x0                   	// #0
   19e08:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19e0c:	mov	w2, #0x5                   	// #5
   19e10:	mov	w1, #0x0                   	// #0
   19e14:	ldr	w0, [sp, #52]
   19e18:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19e1c:	str	w0, [sp, #3772]
   19e20:	ldr	x3, [sp, #24]
   19e24:	ldr	x2, [sp, #32]
   19e28:	ldr	w1, [sp, #3772]
   19e2c:	ldr	x0, [sp, #40]
   19e30:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19e34:	mov	w1, w0
   19e38:	add	x0, sp, #0x3c
   19e3c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19e40:	and	w0, w0, #0xff
   19e44:	eor	w0, w0, #0x1
   19e48:	and	w0, w0, #0xff
   19e4c:	cmp	w0, #0x0
   19e50:	b.eq	19e5c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14eec>  // b.none
   19e54:	mov	w0, #0x0                   	// #0
   19e58:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19e5c:	mov	w2, #0x5                   	// #5
   19e60:	mov	w1, #0x5                   	// #5
   19e64:	ldr	w0, [sp, #52]
   19e68:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19e6c:	str	w0, [sp, #3772]
   19e70:	ldr	x3, [sp, #24]
   19e74:	ldr	x2, [sp, #32]
   19e78:	ldr	w1, [sp, #3772]
   19e7c:	ldr	x0, [sp, #40]
   19e80:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19e84:	mov	w1, w0
   19e88:	add	x0, sp, #0x3c
   19e8c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19e90:	and	w0, w0, #0xff
   19e94:	eor	w0, w0, #0x1
   19e98:	and	w0, w0, #0xff
   19e9c:	cmp	w0, #0x0
   19ea0:	b.eq	19eac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14f3c>  // b.none
   19ea4:	mov	w0, #0x0                   	// #0
   19ea8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19eac:	mov	w2, #0x5                   	// #5
   19eb0:	mov	w1, #0x10                  	// #16
   19eb4:	ldr	w0, [sp, #52]
   19eb8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19ebc:	str	w0, [sp, #3772]
   19ec0:	ldr	x3, [sp, #24]
   19ec4:	ldr	x2, [sp, #32]
   19ec8:	ldr	w1, [sp, #3772]
   19ecc:	ldr	x0, [sp, #40]
   19ed0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19ed4:	mov	w1, w0
   19ed8:	add	x0, sp, #0x3c
   19edc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19ee0:	and	w0, w0, #0xff
   19ee4:	eor	w0, w0, #0x1
   19ee8:	and	w0, w0, #0xff
   19eec:	cmp	w0, #0x0
   19ef0:	b.eq	19efc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14f8c>  // b.none
   19ef4:	mov	w0, #0x0                   	// #0
   19ef8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19efc:	ldr	w0, [sp, #60]
   19f00:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19f04:	mov	w2, #0x5                   	// #5
   19f08:	mov	w1, #0x0                   	// #0
   19f0c:	ldr	w0, [sp, #52]
   19f10:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19f14:	str	w0, [sp, #3772]
   19f18:	ldr	x3, [sp, #24]
   19f1c:	ldr	x2, [sp, #32]
   19f20:	ldr	w1, [sp, #3772]
   19f24:	ldr	x0, [sp, #40]
   19f28:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19f2c:	mov	w1, w0
   19f30:	add	x0, sp, #0x3c
   19f34:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19f38:	and	w0, w0, #0xff
   19f3c:	eor	w0, w0, #0x1
   19f40:	and	w0, w0, #0xff
   19f44:	cmp	w0, #0x0
   19f48:	b.eq	19f54 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x14fe4>  // b.none
   19f4c:	mov	w0, #0x0                   	// #0
   19f50:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19f54:	mov	w2, #0x5                   	// #5
   19f58:	mov	w1, #0x0                   	// #0
   19f5c:	ldr	w0, [sp, #52]
   19f60:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19f64:	str	w0, [sp, #3772]
   19f68:	ldr	x3, [sp, #24]
   19f6c:	ldr	x2, [sp, #32]
   19f70:	ldr	w1, [sp, #3772]
   19f74:	ldr	x0, [sp, #40]
   19f78:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   19f7c:	mov	w1, w0
   19f80:	add	x0, sp, #0x3c
   19f84:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   19f88:	and	w0, w0, #0xff
   19f8c:	eor	w0, w0, #0x1
   19f90:	and	w0, w0, #0xff
   19f94:	cmp	w0, #0x0
   19f98:	b.eq	19fa4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15034>  // b.none
   19f9c:	mov	w0, #0x0                   	// #0
   19fa0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   19fa4:	mov	w2, #0x1                   	// #1
   19fa8:	mov	w1, #0x14                  	// #20
   19fac:	ldr	w0, [sp, #52]
   19fb0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19fb4:	str	w0, [sp, #3772]
   19fb8:	ldr	w0, [sp, #3772]
   19fbc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   19fc0:	add	x2, sp, #0x800
   19fc4:	stp	x0, x1, [x2, #-72]
   19fc8:	add	x0, sp, #0x7b8
   19fcc:	mov	x1, x0
   19fd0:	ldr	x0, [sp, #40]
   19fd4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   19fd8:	mov	w2, #0x5                   	// #5
   19fdc:	mov	w1, #0x5                   	// #5
   19fe0:	ldr	w0, [sp, #52]
   19fe4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   19fe8:	str	w0, [sp, #3772]
   19fec:	ldr	x3, [sp, #24]
   19ff0:	ldr	x2, [sp, #32]
   19ff4:	ldr	w1, [sp, #3772]
   19ff8:	ldr	x0, [sp, #40]
   19ffc:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1a000:	mov	w1, w0
   1a004:	add	x0, sp, #0x3c
   1a008:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a00c:	and	w0, w0, #0xff
   1a010:	eor	w0, w0, #0x1
   1a014:	and	w0, w0, #0xff
   1a018:	cmp	w0, #0x0
   1a01c:	b.eq	1a028 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x150b8>  // b.none
   1a020:	mov	w0, #0x0                   	// #0
   1a024:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a028:	ldr	w0, [sp, #60]
   1a02c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a030:	mov	w2, #0x5                   	// #5
   1a034:	mov	w1, #0x0                   	// #0
   1a038:	ldr	w0, [sp, #52]
   1a03c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a040:	str	w0, [sp, #3772]
   1a044:	ldr	x3, [sp, #24]
   1a048:	ldr	x2, [sp, #32]
   1a04c:	ldr	w1, [sp, #3772]
   1a050:	ldr	x0, [sp, #40]
   1a054:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a058:	mov	w1, w0
   1a05c:	add	x0, sp, #0x3c
   1a060:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a064:	and	w0, w0, #0xff
   1a068:	eor	w0, w0, #0x1
   1a06c:	and	w0, w0, #0xff
   1a070:	cmp	w0, #0x0
   1a074:	b.eq	1a080 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15110>  // b.none
   1a078:	mov	w0, #0x0                   	// #0
   1a07c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a080:	mov	w2, #0x5                   	// #5
   1a084:	mov	w1, #0x0                   	// #0
   1a088:	ldr	w0, [sp, #52]
   1a08c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a090:	str	w0, [sp, #3772]
   1a094:	ldr	x3, [sp, #24]
   1a098:	ldr	x2, [sp, #32]
   1a09c:	ldr	w1, [sp, #3772]
   1a0a0:	ldr	x0, [sp, #40]
   1a0a4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a0a8:	mov	w1, w0
   1a0ac:	add	x0, sp, #0x3c
   1a0b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a0b4:	and	w0, w0, #0xff
   1a0b8:	eor	w0, w0, #0x1
   1a0bc:	and	w0, w0, #0xff
   1a0c0:	cmp	w0, #0x0
   1a0c4:	b.eq	1a0d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15160>  // b.none
   1a0c8:	mov	w0, #0x0                   	// #0
   1a0cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a0d0:	mov	w2, #0x2                   	// #2
   1a0d4:	mov	w1, #0x13                  	// #19
   1a0d8:	ldr	w0, [sp, #52]
   1a0dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a0e0:	str	w0, [sp, #3772]
   1a0e4:	ldr	w0, [sp, #3772]
   1a0e8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1a0ec:	add	x2, sp, #0x800
   1a0f0:	stp	x0, x1, [x2, #-56]
   1a0f4:	add	x0, sp, #0x7c8
   1a0f8:	mov	x1, x0
   1a0fc:	ldr	x0, [sp, #40]
   1a100:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1a104:	mov	w2, #0x5                   	// #5
   1a108:	mov	w1, #0x5                   	// #5
   1a10c:	ldr	w0, [sp, #52]
   1a110:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a114:	str	w0, [sp, #3772]
   1a118:	ldr	x3, [sp, #24]
   1a11c:	ldr	x2, [sp, #32]
   1a120:	ldr	w1, [sp, #3772]
   1a124:	ldr	x0, [sp, #40]
   1a128:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   1a12c:	mov	w1, w0
   1a130:	add	x0, sp, #0x3c
   1a134:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a138:	and	w0, w0, #0xff
   1a13c:	eor	w0, w0, #0x1
   1a140:	and	w0, w0, #0xff
   1a144:	cmp	w0, #0x0
   1a148:	b.eq	1a154 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x151e4>  // b.none
   1a14c:	mov	w0, #0x0                   	// #0
   1a150:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a154:	ldr	w0, [sp, #60]
   1a158:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a15c:	mov	w2, #0x5                   	// #5
   1a160:	mov	w1, #0x0                   	// #0
   1a164:	ldr	w0, [sp, #52]
   1a168:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a16c:	str	w0, [sp, #3772]
   1a170:	ldr	x3, [sp, #24]
   1a174:	ldr	x2, [sp, #32]
   1a178:	ldr	w1, [sp, #3772]
   1a17c:	ldr	x0, [sp, #40]
   1a180:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a184:	mov	w1, w0
   1a188:	add	x0, sp, #0x3c
   1a18c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a190:	and	w0, w0, #0xff
   1a194:	eor	w0, w0, #0x1
   1a198:	and	w0, w0, #0xff
   1a19c:	cmp	w0, #0x0
   1a1a0:	b.eq	1a1ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1523c>  // b.none
   1a1a4:	mov	w0, #0x0                   	// #0
   1a1a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a1ac:	mov	w2, #0x5                   	// #5
   1a1b0:	mov	w1, #0x0                   	// #0
   1a1b4:	ldr	w0, [sp, #52]
   1a1b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a1bc:	str	w0, [sp, #3772]
   1a1c0:	ldr	x3, [sp, #24]
   1a1c4:	ldr	x2, [sp, #32]
   1a1c8:	ldr	w1, [sp, #3772]
   1a1cc:	ldr	x0, [sp, #40]
   1a1d0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a1d4:	mov	w1, w0
   1a1d8:	add	x0, sp, #0x3c
   1a1dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a1e0:	and	w0, w0, #0xff
   1a1e4:	eor	w0, w0, #0x1
   1a1e8:	and	w0, w0, #0xff
   1a1ec:	cmp	w0, #0x0
   1a1f0:	b.eq	1a1fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1528c>  // b.none
   1a1f4:	mov	w0, #0x0                   	// #0
   1a1f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a1fc:	mov	w2, #0x3                   	// #3
   1a200:	mov	w1, #0x12                  	// #18
   1a204:	ldr	w0, [sp, #52]
   1a208:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a20c:	str	w0, [sp, #3772]
   1a210:	ldr	w0, [sp, #3772]
   1a214:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1a218:	add	x2, sp, #0x800
   1a21c:	stp	x0, x1, [x2, #-40]
   1a220:	add	x0, sp, #0x7d8
   1a224:	mov	x1, x0
   1a228:	ldr	x0, [sp, #40]
   1a22c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1a230:	mov	w2, #0x5                   	// #5
   1a234:	mov	w1, #0x5                   	// #5
   1a238:	ldr	w0, [sp, #52]
   1a23c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a240:	str	w0, [sp, #3772]
   1a244:	ldr	x3, [sp, #24]
   1a248:	ldr	x2, [sp, #32]
   1a24c:	ldr	w1, [sp, #3772]
   1a250:	ldr	x0, [sp, #40]
   1a254:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   1a258:	mov	w1, w0
   1a25c:	add	x0, sp, #0x3c
   1a260:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a264:	and	w0, w0, #0xff
   1a268:	eor	w0, w0, #0x1
   1a26c:	and	w0, w0, #0xff
   1a270:	cmp	w0, #0x0
   1a274:	b.eq	1a280 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15310>  // b.none
   1a278:	mov	w0, #0x0                   	// #0
   1a27c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a280:	ldr	w0, [sp, #60]
   1a284:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a288:	mov	w2, #0x5                   	// #5
   1a28c:	mov	w1, #0x0                   	// #0
   1a290:	ldr	w0, [sp, #52]
   1a294:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a298:	str	w0, [sp, #3772]
   1a29c:	ldr	x3, [sp, #24]
   1a2a0:	ldr	x2, [sp, #32]
   1a2a4:	ldr	w1, [sp, #3772]
   1a2a8:	ldr	x0, [sp, #40]
   1a2ac:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a2b0:	mov	w1, w0
   1a2b4:	add	x0, sp, #0x3c
   1a2b8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a2bc:	and	w0, w0, #0xff
   1a2c0:	eor	w0, w0, #0x1
   1a2c4:	and	w0, w0, #0xff
   1a2c8:	cmp	w0, #0x0
   1a2cc:	b.eq	1a2d8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15368>  // b.none
   1a2d0:	mov	w0, #0x0                   	// #0
   1a2d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a2d8:	mov	w2, #0x5                   	// #5
   1a2dc:	mov	w1, #0x0                   	// #0
   1a2e0:	ldr	w0, [sp, #52]
   1a2e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a2e8:	str	w0, [sp, #3772]
   1a2ec:	ldr	x3, [sp, #24]
   1a2f0:	ldr	x2, [sp, #32]
   1a2f4:	ldr	w1, [sp, #3772]
   1a2f8:	ldr	x0, [sp, #40]
   1a2fc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a300:	mov	w1, w0
   1a304:	add	x0, sp, #0x3c
   1a308:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a30c:	and	w0, w0, #0xff
   1a310:	eor	w0, w0, #0x1
   1a314:	and	w0, w0, #0xff
   1a318:	cmp	w0, #0x0
   1a31c:	b.eq	1a328 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x153b8>  // b.none
   1a320:	mov	w0, #0x0                   	// #0
   1a324:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a328:	mov	w2, #0x4                   	// #4
   1a32c:	mov	w1, #0x11                  	// #17
   1a330:	ldr	w0, [sp, #52]
   1a334:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a338:	str	w0, [sp, #3772]
   1a33c:	ldr	w0, [sp, #3772]
   1a340:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1a344:	add	x2, sp, #0x800
   1a348:	stp	x0, x1, [x2, #-24]
   1a34c:	add	x0, sp, #0x7e8
   1a350:	mov	x1, x0
   1a354:	ldr	x0, [sp, #40]
   1a358:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1a35c:	mov	w2, #0x5                   	// #5
   1a360:	mov	w1, #0x5                   	// #5
   1a364:	ldr	w0, [sp, #52]
   1a368:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a36c:	str	w0, [sp, #3772]
   1a370:	ldr	x3, [sp, #24]
   1a374:	ldr	x2, [sp, #32]
   1a378:	ldr	w1, [sp, #3772]
   1a37c:	ldr	x0, [sp, #40]
   1a380:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   1a384:	mov	w1, w0
   1a388:	add	x0, sp, #0x3c
   1a38c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a390:	and	w0, w0, #0xff
   1a394:	eor	w0, w0, #0x1
   1a398:	and	w0, w0, #0xff
   1a39c:	cmp	w0, #0x0
   1a3a0:	b.eq	1a3ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1543c>  // b.none
   1a3a4:	mov	w0, #0x0                   	// #0
   1a3a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a3ac:	ldr	w0, [sp, #60]
   1a3b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a3b4:	mov	w2, #0x5                   	// #5
   1a3b8:	mov	w1, #0x0                   	// #0
   1a3bc:	ldr	w0, [sp, #52]
   1a3c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a3c4:	str	w0, [sp, #3772]
   1a3c8:	ldr	x3, [sp, #24]
   1a3cc:	ldr	x2, [sp, #32]
   1a3d0:	ldr	w1, [sp, #3772]
   1a3d4:	ldr	x0, [sp, #40]
   1a3d8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a3dc:	mov	w1, w0
   1a3e0:	add	x0, sp, #0x3c
   1a3e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a3e8:	and	w0, w0, #0xff
   1a3ec:	eor	w0, w0, #0x1
   1a3f0:	and	w0, w0, #0xff
   1a3f4:	cmp	w0, #0x0
   1a3f8:	b.eq	1a404 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15494>  // b.none
   1a3fc:	mov	w0, #0x0                   	// #0
   1a400:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a404:	mov	w2, #0x5                   	// #5
   1a408:	mov	w1, #0x5                   	// #5
   1a40c:	ldr	w0, [sp, #52]
   1a410:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a414:	str	w0, [sp, #3772]
   1a418:	ldr	x3, [sp, #24]
   1a41c:	ldr	x2, [sp, #32]
   1a420:	ldr	w1, [sp, #3772]
   1a424:	ldr	x0, [sp, #40]
   1a428:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   1a42c:	mov	w1, w0
   1a430:	add	x0, sp, #0x3c
   1a434:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a438:	and	w0, w0, #0xff
   1a43c:	eor	w0, w0, #0x1
   1a440:	and	w0, w0, #0xff
   1a444:	cmp	w0, #0x0
   1a448:	b.eq	1a454 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x154e4>  // b.none
   1a44c:	mov	w0, #0x0                   	// #0
   1a450:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a454:	mov	w2, #0x5                   	// #5
   1a458:	mov	w1, #0x10                  	// #16
   1a45c:	ldr	w0, [sp, #52]
   1a460:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a464:	str	w0, [sp, #3772]
   1a468:	ldr	x3, [sp, #24]
   1a46c:	ldr	x2, [sp, #32]
   1a470:	ldr	w1, [sp, #3772]
   1a474:	ldr	x0, [sp, #40]
   1a478:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a47c:	mov	w1, w0
   1a480:	add	x0, sp, #0x3c
   1a484:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a488:	and	w0, w0, #0xff
   1a48c:	eor	w0, w0, #0x1
   1a490:	and	w0, w0, #0xff
   1a494:	cmp	w0, #0x0
   1a498:	b.eq	1a4a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15534>  // b.none
   1a49c:	mov	w0, #0x0                   	// #0
   1a4a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a4a4:	ldr	w0, [sp, #60]
   1a4a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a4ac:	mov	w2, #0x5                   	// #5
   1a4b0:	mov	w1, #0x0                   	// #0
   1a4b4:	ldr	w0, [sp, #52]
   1a4b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a4bc:	str	w0, [sp, #3772]
   1a4c0:	ldr	x3, [sp, #24]
   1a4c4:	ldr	x2, [sp, #32]
   1a4c8:	ldr	w1, [sp, #3772]
   1a4cc:	ldr	x0, [sp, #40]
   1a4d0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a4d4:	mov	w1, w0
   1a4d8:	add	x0, sp, #0x3c
   1a4dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a4e0:	and	w0, w0, #0xff
   1a4e4:	eor	w0, w0, #0x1
   1a4e8:	and	w0, w0, #0xff
   1a4ec:	cmp	w0, #0x0
   1a4f0:	b.eq	1a4fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1558c>  // b.none
   1a4f4:	mov	w0, #0x0                   	// #0
   1a4f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a4fc:	mov	w2, #0x5                   	// #5
   1a500:	mov	w1, #0x0                   	// #0
   1a504:	ldr	w0, [sp, #52]
   1a508:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a50c:	str	w0, [sp, #3772]
   1a510:	ldr	x3, [sp, #24]
   1a514:	ldr	x2, [sp, #32]
   1a518:	ldr	w1, [sp, #3772]
   1a51c:	ldr	x0, [sp, #40]
   1a520:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a524:	mov	w1, w0
   1a528:	add	x0, sp, #0x3c
   1a52c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a530:	and	w0, w0, #0xff
   1a534:	eor	w0, w0, #0x1
   1a538:	and	w0, w0, #0xff
   1a53c:	cmp	w0, #0x0
   1a540:	b.eq	1a54c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x155dc>  // b.none
   1a544:	mov	w0, #0x0                   	// #0
   1a548:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a54c:	mov	w2, #0x5                   	// #5
   1a550:	mov	w1, #0x5                   	// #5
   1a554:	ldr	w0, [sp, #52]
   1a558:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a55c:	str	w0, [sp, #3772]
   1a560:	ldr	x3, [sp, #24]
   1a564:	ldr	x2, [sp, #32]
   1a568:	ldr	w1, [sp, #3772]
   1a56c:	ldr	x0, [sp, #40]
   1a570:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a574:	mov	w1, w0
   1a578:	add	x0, sp, #0x3c
   1a57c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a580:	and	w0, w0, #0xff
   1a584:	eor	w0, w0, #0x1
   1a588:	and	w0, w0, #0xff
   1a58c:	cmp	w0, #0x0
   1a590:	b.eq	1a59c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1562c>  // b.none
   1a594:	mov	w0, #0x0                   	// #0
   1a598:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a59c:	ldr	w0, [sp, #60]
   1a5a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a5a4:	mov	w2, #0x5                   	// #5
   1a5a8:	mov	w1, #0x0                   	// #0
   1a5ac:	ldr	w0, [sp, #52]
   1a5b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a5b4:	str	w0, [sp, #3772]
   1a5b8:	ldr	x3, [sp, #24]
   1a5bc:	ldr	x2, [sp, #32]
   1a5c0:	ldr	w1, [sp, #3772]
   1a5c4:	ldr	x0, [sp, #40]
   1a5c8:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1a5cc:	mov	w1, w0
   1a5d0:	add	x0, sp, #0x3c
   1a5d4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a5d8:	and	w0, w0, #0xff
   1a5dc:	eor	w0, w0, #0x1
   1a5e0:	and	w0, w0, #0xff
   1a5e4:	cmp	w0, #0x0
   1a5e8:	b.eq	1a5f4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15684>  // b.none
   1a5ec:	mov	w0, #0x0                   	// #0
   1a5f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a5f4:	mov	w2, #0x5                   	// #5
   1a5f8:	mov	w1, #0x5                   	// #5
   1a5fc:	ldr	w0, [sp, #52]
   1a600:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a604:	str	w0, [sp, #3772]
   1a608:	ldr	x3, [sp, #24]
   1a60c:	ldr	x2, [sp, #32]
   1a610:	ldr	w1, [sp, #3772]
   1a614:	ldr	x0, [sp, #40]
   1a618:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a61c:	mov	w1, w0
   1a620:	add	x0, sp, #0x3c
   1a624:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a628:	and	w0, w0, #0xff
   1a62c:	eor	w0, w0, #0x1
   1a630:	and	w0, w0, #0xff
   1a634:	cmp	w0, #0x0
   1a638:	b.eq	1a644 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x156d4>  // b.none
   1a63c:	mov	w0, #0x0                   	// #0
   1a640:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a644:	mov	w2, #0x2                   	// #2
   1a648:	mov	w1, #0x13                  	// #19
   1a64c:	ldr	w0, [sp, #52]
   1a650:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a654:	str	w0, [sp, #3772]
   1a658:	ldr	w0, [sp, #3772]
   1a65c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1a660:	add	x2, sp, #0x800
   1a664:	stp	x0, x1, [x2, #-8]
   1a668:	add	x0, sp, #0x7f8
   1a66c:	mov	x1, x0
   1a670:	ldr	x0, [sp, #40]
   1a674:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1a678:	ldr	w0, [sp, #60]
   1a67c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a680:	mov	w2, #0x5                   	// #5
   1a684:	mov	w1, #0x0                   	// #0
   1a688:	ldr	w0, [sp, #52]
   1a68c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a690:	str	w0, [sp, #3772]
   1a694:	ldr	x3, [sp, #24]
   1a698:	ldr	x2, [sp, #32]
   1a69c:	ldr	w1, [sp, #3772]
   1a6a0:	ldr	x0, [sp, #40]
   1a6a4:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1a6a8:	mov	w1, w0
   1a6ac:	add	x0, sp, #0x3c
   1a6b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a6b4:	and	w0, w0, #0xff
   1a6b8:	eor	w0, w0, #0x1
   1a6bc:	and	w0, w0, #0xff
   1a6c0:	cmp	w0, #0x0
   1a6c4:	b.eq	1a6d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15760>  // b.none
   1a6c8:	mov	w0, #0x0                   	// #0
   1a6cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a6d0:	mov	w2, #0x5                   	// #5
   1a6d4:	mov	w1, #0x5                   	// #5
   1a6d8:	ldr	w0, [sp, #52]
   1a6dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a6e0:	str	w0, [sp, #3772]
   1a6e4:	ldr	x3, [sp, #24]
   1a6e8:	ldr	x2, [sp, #32]
   1a6ec:	ldr	w1, [sp, #3772]
   1a6f0:	ldr	x0, [sp, #40]
   1a6f4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a6f8:	mov	w1, w0
   1a6fc:	add	x0, sp, #0x3c
   1a700:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a704:	and	w0, w0, #0xff
   1a708:	eor	w0, w0, #0x1
   1a70c:	and	w0, w0, #0xff
   1a710:	cmp	w0, #0x0
   1a714:	b.eq	1a720 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x157b0>  // b.none
   1a718:	mov	w0, #0x0                   	// #0
   1a71c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a720:	mov	w2, #0x3                   	// #3
   1a724:	mov	w1, #0x12                  	// #18
   1a728:	ldr	w0, [sp, #52]
   1a72c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a730:	str	w0, [sp, #3772]
   1a734:	ldr	w0, [sp, #3772]
   1a738:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1a73c:	add	x2, sp, #0x800
   1a740:	stp	x0, x1, [x2, #8]
   1a744:	add	x0, sp, #0x808
   1a748:	mov	x1, x0
   1a74c:	ldr	x0, [sp, #40]
   1a750:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1a754:	ldr	w0, [sp, #60]
   1a758:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a75c:	mov	w2, #0x5                   	// #5
   1a760:	mov	w1, #0x0                   	// #0
   1a764:	ldr	w0, [sp, #52]
   1a768:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a76c:	str	w0, [sp, #3772]
   1a770:	ldr	x3, [sp, #24]
   1a774:	ldr	x2, [sp, #32]
   1a778:	ldr	w1, [sp, #3772]
   1a77c:	ldr	x0, [sp, #40]
   1a780:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1a784:	mov	w1, w0
   1a788:	add	x0, sp, #0x3c
   1a78c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a790:	and	w0, w0, #0xff
   1a794:	eor	w0, w0, #0x1
   1a798:	and	w0, w0, #0xff
   1a79c:	cmp	w0, #0x0
   1a7a0:	b.eq	1a7ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1583c>  // b.none
   1a7a4:	mov	w0, #0x0                   	// #0
   1a7a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a7ac:	mov	w2, #0x5                   	// #5
   1a7b0:	mov	w1, #0x5                   	// #5
   1a7b4:	ldr	w0, [sp, #52]
   1a7b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a7bc:	str	w0, [sp, #3772]
   1a7c0:	ldr	x3, [sp, #24]
   1a7c4:	ldr	x2, [sp, #32]
   1a7c8:	ldr	w1, [sp, #3772]
   1a7cc:	ldr	x0, [sp, #40]
   1a7d0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a7d4:	mov	w1, w0
   1a7d8:	add	x0, sp, #0x3c
   1a7dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a7e0:	and	w0, w0, #0xff
   1a7e4:	eor	w0, w0, #0x1
   1a7e8:	and	w0, w0, #0xff
   1a7ec:	cmp	w0, #0x0
   1a7f0:	b.eq	1a7fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1588c>  // b.none
   1a7f4:	mov	w0, #0x0                   	// #0
   1a7f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a7fc:	mov	w2, #0x4                   	// #4
   1a800:	mov	w1, #0x11                  	// #17
   1a804:	ldr	w0, [sp, #52]
   1a808:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a80c:	str	w0, [sp, #3772]
   1a810:	ldr	w0, [sp, #3772]
   1a814:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1a818:	add	x2, sp, #0x800
   1a81c:	stp	x0, x1, [x2, #24]
   1a820:	add	x0, sp, #0x818
   1a824:	mov	x1, x0
   1a828:	ldr	x0, [sp, #40]
   1a82c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1a830:	ldr	w0, [sp, #60]
   1a834:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a838:	mov	w2, #0x5                   	// #5
   1a83c:	mov	w1, #0x0                   	// #0
   1a840:	ldr	w0, [sp, #52]
   1a844:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a848:	str	w0, [sp, #3772]
   1a84c:	ldr	x3, [sp, #24]
   1a850:	ldr	x2, [sp, #32]
   1a854:	ldr	w1, [sp, #3772]
   1a858:	ldr	x0, [sp, #40]
   1a85c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a860:	mov	w1, w0
   1a864:	add	x0, sp, #0x3c
   1a868:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a86c:	and	w0, w0, #0xff
   1a870:	eor	w0, w0, #0x1
   1a874:	and	w0, w0, #0xff
   1a878:	cmp	w0, #0x0
   1a87c:	b.eq	1a888 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15918>  // b.none
   1a880:	mov	w0, #0x0                   	// #0
   1a884:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a888:	mov	w2, #0x5                   	// #5
   1a88c:	mov	w1, #0x0                   	// #0
   1a890:	ldr	w0, [sp, #52]
   1a894:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a898:	str	w0, [sp, #3772]
   1a89c:	ldr	x3, [sp, #24]
   1a8a0:	ldr	x2, [sp, #32]
   1a8a4:	ldr	w1, [sp, #3772]
   1a8a8:	ldr	x0, [sp, #40]
   1a8ac:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a8b0:	mov	w1, w0
   1a8b4:	add	x0, sp, #0x3c
   1a8b8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a8bc:	and	w0, w0, #0xff
   1a8c0:	eor	w0, w0, #0x1
   1a8c4:	and	w0, w0, #0xff
   1a8c8:	cmp	w0, #0x0
   1a8cc:	b.eq	1a8d8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15968>  // b.none
   1a8d0:	mov	w0, #0x0                   	// #0
   1a8d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a8d8:	mov	w2, #0x5                   	// #5
   1a8dc:	mov	w1, #0x5                   	// #5
   1a8e0:	ldr	w0, [sp, #52]
   1a8e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a8e8:	str	w0, [sp, #3772]
   1a8ec:	ldr	x3, [sp, #24]
   1a8f0:	ldr	x2, [sp, #32]
   1a8f4:	ldr	w1, [sp, #3772]
   1a8f8:	ldr	x0, [sp, #40]
   1a8fc:	bl	1018 <_ZL21DecodeQQRegisterClassRN4llvm6MCInstEjmPKv>
   1a900:	mov	w1, w0
   1a904:	add	x0, sp, #0x3c
   1a908:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a90c:	and	w0, w0, #0xff
   1a910:	eor	w0, w0, #0x1
   1a914:	and	w0, w0, #0xff
   1a918:	cmp	w0, #0x0
   1a91c:	b.eq	1a928 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x159b8>  // b.none
   1a920:	mov	w0, #0x0                   	// #0
   1a924:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a928:	mov	w2, #0x5                   	// #5
   1a92c:	mov	w1, #0x10                  	// #16
   1a930:	ldr	w0, [sp, #52]
   1a934:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a938:	str	w0, [sp, #3772]
   1a93c:	ldr	x3, [sp, #24]
   1a940:	ldr	x2, [sp, #32]
   1a944:	ldr	w1, [sp, #3772]
   1a948:	ldr	x0, [sp, #40]
   1a94c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a950:	mov	w1, w0
   1a954:	add	x0, sp, #0x3c
   1a958:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a95c:	and	w0, w0, #0xff
   1a960:	eor	w0, w0, #0x1
   1a964:	and	w0, w0, #0xff
   1a968:	cmp	w0, #0x0
   1a96c:	b.eq	1a978 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15a08>  // b.none
   1a970:	mov	w0, #0x0                   	// #0
   1a974:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a978:	ldr	w0, [sp, #60]
   1a97c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a980:	mov	w2, #0x5                   	// #5
   1a984:	mov	w1, #0x0                   	// #0
   1a988:	ldr	w0, [sp, #52]
   1a98c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a990:	str	w0, [sp, #3772]
   1a994:	ldr	x3, [sp, #24]
   1a998:	ldr	x2, [sp, #32]
   1a99c:	ldr	w1, [sp, #3772]
   1a9a0:	ldr	x0, [sp, #40]
   1a9a4:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   1a9a8:	mov	w1, w0
   1a9ac:	add	x0, sp, #0x3c
   1a9b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1a9b4:	and	w0, w0, #0xff
   1a9b8:	eor	w0, w0, #0x1
   1a9bc:	and	w0, w0, #0xff
   1a9c0:	cmp	w0, #0x0
   1a9c4:	b.eq	1a9d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15a60>  // b.none
   1a9c8:	mov	w0, #0x0                   	// #0
   1a9cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1a9d0:	mov	w2, #0x5                   	// #5
   1a9d4:	mov	w1, #0x5                   	// #5
   1a9d8:	ldr	w0, [sp, #52]
   1a9dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1a9e0:	str	w0, [sp, #3772]
   1a9e4:	ldr	x3, [sp, #24]
   1a9e8:	ldr	x2, [sp, #32]
   1a9ec:	ldr	w1, [sp, #3772]
   1a9f0:	ldr	x0, [sp, #40]
   1a9f4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1a9f8:	mov	w1, w0
   1a9fc:	add	x0, sp, #0x3c
   1aa00:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1aa04:	and	w0, w0, #0xff
   1aa08:	eor	w0, w0, #0x1
   1aa0c:	and	w0, w0, #0xff
   1aa10:	cmp	w0, #0x0
   1aa14:	b.eq	1aa20 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15ab0>  // b.none
   1aa18:	mov	w0, #0x0                   	// #0
   1aa1c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1aa20:	ldr	w0, [sp, #60]
   1aa24:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1aa28:	mov	w2, #0x5                   	// #5
   1aa2c:	mov	w1, #0x0                   	// #0
   1aa30:	ldr	w0, [sp, #52]
   1aa34:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1aa38:	str	w0, [sp, #3772]
   1aa3c:	ldr	x3, [sp, #24]
   1aa40:	ldr	x2, [sp, #32]
   1aa44:	ldr	w1, [sp, #3772]
   1aa48:	ldr	x0, [sp, #40]
   1aa4c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1aa50:	mov	w1, w0
   1aa54:	add	x0, sp, #0x3c
   1aa58:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1aa5c:	and	w0, w0, #0xff
   1aa60:	eor	w0, w0, #0x1
   1aa64:	and	w0, w0, #0xff
   1aa68:	cmp	w0, #0x0
   1aa6c:	b.eq	1aa78 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15b08>  // b.none
   1aa70:	mov	w0, #0x0                   	// #0
   1aa74:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1aa78:	mov	w2, #0x5                   	// #5
   1aa7c:	mov	w1, #0x5                   	// #5
   1aa80:	ldr	w0, [sp, #52]
   1aa84:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1aa88:	str	w0, [sp, #3772]
   1aa8c:	ldr	x3, [sp, #24]
   1aa90:	ldr	x2, [sp, #32]
   1aa94:	ldr	w1, [sp, #3772]
   1aa98:	ldr	x0, [sp, #40]
   1aa9c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1aaa0:	mov	w1, w0
   1aaa4:	add	x0, sp, #0x3c
   1aaa8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1aaac:	and	w0, w0, #0xff
   1aab0:	eor	w0, w0, #0x1
   1aab4:	and	w0, w0, #0xff
   1aab8:	cmp	w0, #0x0
   1aabc:	b.eq	1aac8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15b58>  // b.none
   1aac0:	mov	w0, #0x0                   	// #0
   1aac4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1aac8:	mov	w2, #0x1                   	// #1
   1aacc:	mov	w1, #0x14                  	// #20
   1aad0:	ldr	w0, [sp, #52]
   1aad4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1aad8:	str	w0, [sp, #3772]
   1aadc:	ldr	w0, [sp, #3772]
   1aae0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1aae4:	add	x2, sp, #0x800
   1aae8:	stp	x0, x1, [x2, #40]
   1aaec:	add	x0, sp, #0x828
   1aaf0:	mov	x1, x0
   1aaf4:	ldr	x0, [sp, #40]
   1aaf8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1aafc:	ldr	w0, [sp, #60]
   1ab00:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ab04:	mov	w2, #0x5                   	// #5
   1ab08:	mov	w1, #0x0                   	// #0
   1ab0c:	ldr	w0, [sp, #52]
   1ab10:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ab14:	str	w0, [sp, #3772]
   1ab18:	ldr	x3, [sp, #24]
   1ab1c:	ldr	x2, [sp, #32]
   1ab20:	ldr	w1, [sp, #3772]
   1ab24:	ldr	x0, [sp, #40]
   1ab28:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ab2c:	mov	w1, w0
   1ab30:	add	x0, sp, #0x3c
   1ab34:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ab38:	and	w0, w0, #0xff
   1ab3c:	eor	w0, w0, #0x1
   1ab40:	and	w0, w0, #0xff
   1ab44:	cmp	w0, #0x0
   1ab48:	b.eq	1ab54 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15be4>  // b.none
   1ab4c:	mov	w0, #0x0                   	// #0
   1ab50:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ab54:	mov	w2, #0x5                   	// #5
   1ab58:	mov	w1, #0x5                   	// #5
   1ab5c:	ldr	w0, [sp, #52]
   1ab60:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ab64:	str	w0, [sp, #3772]
   1ab68:	ldr	x3, [sp, #24]
   1ab6c:	ldr	x2, [sp, #32]
   1ab70:	ldr	w1, [sp, #3772]
   1ab74:	ldr	x0, [sp, #40]
   1ab78:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   1ab7c:	mov	w1, w0
   1ab80:	add	x0, sp, #0x3c
   1ab84:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ab88:	and	w0, w0, #0xff
   1ab8c:	eor	w0, w0, #0x1
   1ab90:	and	w0, w0, #0xff
   1ab94:	cmp	w0, #0x0
   1ab98:	b.eq	1aba4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15c34>  // b.none
   1ab9c:	mov	w0, #0x0                   	// #0
   1aba0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1aba4:	mov	w2, #0x5                   	// #5
   1aba8:	mov	w1, #0x10                  	// #16
   1abac:	ldr	w0, [sp, #52]
   1abb0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1abb4:	str	w0, [sp, #3772]
   1abb8:	ldr	x3, [sp, #24]
   1abbc:	ldr	x2, [sp, #32]
   1abc0:	ldr	w1, [sp, #3772]
   1abc4:	ldr	x0, [sp, #40]
   1abc8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1abcc:	mov	w1, w0
   1abd0:	add	x0, sp, #0x3c
   1abd4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1abd8:	and	w0, w0, #0xff
   1abdc:	eor	w0, w0, #0x1
   1abe0:	and	w0, w0, #0xff
   1abe4:	cmp	w0, #0x0
   1abe8:	b.eq	1abf4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15c84>  // b.none
   1abec:	mov	w0, #0x0                   	// #0
   1abf0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1abf4:	ldr	w0, [sp, #60]
   1abf8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1abfc:	mov	w2, #0x5                   	// #5
   1ac00:	mov	w1, #0x0                   	// #0
   1ac04:	ldr	w0, [sp, #52]
   1ac08:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ac0c:	str	w0, [sp, #3772]
   1ac10:	ldr	x3, [sp, #24]
   1ac14:	ldr	x2, [sp, #32]
   1ac18:	ldr	w1, [sp, #3772]
   1ac1c:	ldr	x0, [sp, #40]
   1ac20:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ac24:	mov	w1, w0
   1ac28:	add	x0, sp, #0x3c
   1ac2c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ac30:	and	w0, w0, #0xff
   1ac34:	eor	w0, w0, #0x1
   1ac38:	and	w0, w0, #0xff
   1ac3c:	cmp	w0, #0x0
   1ac40:	b.eq	1ac4c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15cdc>  // b.none
   1ac44:	mov	w0, #0x0                   	// #0
   1ac48:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ac4c:	mov	w2, #0x5                   	// #5
   1ac50:	mov	w1, #0x0                   	// #0
   1ac54:	ldr	w0, [sp, #52]
   1ac58:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ac5c:	str	w0, [sp, #3772]
   1ac60:	ldr	x3, [sp, #24]
   1ac64:	ldr	x2, [sp, #32]
   1ac68:	ldr	w1, [sp, #3772]
   1ac6c:	ldr	x0, [sp, #40]
   1ac70:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ac74:	mov	w1, w0
   1ac78:	add	x0, sp, #0x3c
   1ac7c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ac80:	and	w0, w0, #0xff
   1ac84:	eor	w0, w0, #0x1
   1ac88:	and	w0, w0, #0xff
   1ac8c:	cmp	w0, #0x0
   1ac90:	b.eq	1ac9c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15d2c>  // b.none
   1ac94:	mov	w0, #0x0                   	// #0
   1ac98:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ac9c:	mov	w2, #0x5                   	// #5
   1aca0:	mov	w1, #0x5                   	// #5
   1aca4:	ldr	w0, [sp, #52]
   1aca8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1acac:	str	w0, [sp, #3772]
   1acb0:	ldr	x3, [sp, #24]
   1acb4:	ldr	x2, [sp, #32]
   1acb8:	ldr	w1, [sp, #3772]
   1acbc:	ldr	x0, [sp, #40]
   1acc0:	bl	1080 <_ZL22DecodeQQQRegisterClassRN4llvm6MCInstEjmPKv>
   1acc4:	mov	w1, w0
   1acc8:	add	x0, sp, #0x3c
   1accc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1acd0:	and	w0, w0, #0xff
   1acd4:	eor	w0, w0, #0x1
   1acd8:	and	w0, w0, #0xff
   1acdc:	cmp	w0, #0x0
   1ace0:	b.eq	1acec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15d7c>  // b.none
   1ace4:	mov	w0, #0x0                   	// #0
   1ace8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1acec:	mov	w2, #0x5                   	// #5
   1acf0:	mov	w1, #0x10                  	// #16
   1acf4:	ldr	w0, [sp, #52]
   1acf8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1acfc:	str	w0, [sp, #3772]
   1ad00:	ldr	x3, [sp, #24]
   1ad04:	ldr	x2, [sp, #32]
   1ad08:	ldr	w1, [sp, #3772]
   1ad0c:	ldr	x0, [sp, #40]
   1ad10:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ad14:	mov	w1, w0
   1ad18:	add	x0, sp, #0x3c
   1ad1c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ad20:	and	w0, w0, #0xff
   1ad24:	eor	w0, w0, #0x1
   1ad28:	and	w0, w0, #0xff
   1ad2c:	cmp	w0, #0x0
   1ad30:	b.eq	1ad3c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15dcc>  // b.none
   1ad34:	mov	w0, #0x0                   	// #0
   1ad38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ad3c:	ldr	w0, [sp, #60]
   1ad40:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ad44:	mov	w2, #0x5                   	// #5
   1ad48:	mov	w1, #0x0                   	// #0
   1ad4c:	ldr	w0, [sp, #52]
   1ad50:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ad54:	str	w0, [sp, #3772]
   1ad58:	ldr	x3, [sp, #24]
   1ad5c:	ldr	x2, [sp, #32]
   1ad60:	ldr	w1, [sp, #3772]
   1ad64:	ldr	x0, [sp, #40]
   1ad68:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ad6c:	mov	w1, w0
   1ad70:	add	x0, sp, #0x3c
   1ad74:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ad78:	and	w0, w0, #0xff
   1ad7c:	eor	w0, w0, #0x1
   1ad80:	and	w0, w0, #0xff
   1ad84:	cmp	w0, #0x0
   1ad88:	b.eq	1ad94 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15e24>  // b.none
   1ad8c:	mov	w0, #0x0                   	// #0
   1ad90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ad94:	mov	w2, #0x5                   	// #5
   1ad98:	mov	w1, #0x5                   	// #5
   1ad9c:	ldr	w0, [sp, #52]
   1ada0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ada4:	str	w0, [sp, #3772]
   1ada8:	ldr	x3, [sp, #24]
   1adac:	ldr	x2, [sp, #32]
   1adb0:	ldr	w1, [sp, #3772]
   1adb4:	ldr	x0, [sp, #40]
   1adb8:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   1adbc:	mov	w1, w0
   1adc0:	add	x0, sp, #0x3c
   1adc4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1adc8:	and	w0, w0, #0xff
   1adcc:	eor	w0, w0, #0x1
   1add0:	and	w0, w0, #0xff
   1add4:	cmp	w0, #0x0
   1add8:	b.eq	1ade4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15e74>  // b.none
   1addc:	mov	w0, #0x0                   	// #0
   1ade0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ade4:	mov	w2, #0x5                   	// #5
   1ade8:	mov	w1, #0x10                  	// #16
   1adec:	ldr	w0, [sp, #52]
   1adf0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1adf4:	str	w0, [sp, #3772]
   1adf8:	ldr	x3, [sp, #24]
   1adfc:	ldr	x2, [sp, #32]
   1ae00:	ldr	w1, [sp, #3772]
   1ae04:	ldr	x0, [sp, #40]
   1ae08:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ae0c:	mov	w1, w0
   1ae10:	add	x0, sp, #0x3c
   1ae14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ae18:	and	w0, w0, #0xff
   1ae1c:	eor	w0, w0, #0x1
   1ae20:	and	w0, w0, #0xff
   1ae24:	cmp	w0, #0x0
   1ae28:	b.eq	1ae34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15ec4>  // b.none
   1ae2c:	mov	w0, #0x0                   	// #0
   1ae30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ae34:	ldr	w0, [sp, #60]
   1ae38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ae3c:	mov	w2, #0x5                   	// #5
   1ae40:	mov	w1, #0x0                   	// #0
   1ae44:	ldr	w0, [sp, #52]
   1ae48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ae4c:	str	w0, [sp, #3772]
   1ae50:	ldr	x3, [sp, #24]
   1ae54:	ldr	x2, [sp, #32]
   1ae58:	ldr	w1, [sp, #3772]
   1ae5c:	ldr	x0, [sp, #40]
   1ae60:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ae64:	mov	w1, w0
   1ae68:	add	x0, sp, #0x3c
   1ae6c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ae70:	and	w0, w0, #0xff
   1ae74:	eor	w0, w0, #0x1
   1ae78:	and	w0, w0, #0xff
   1ae7c:	cmp	w0, #0x0
   1ae80:	b.eq	1ae8c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15f1c>  // b.none
   1ae84:	mov	w0, #0x0                   	// #0
   1ae88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ae8c:	mov	w2, #0x5                   	// #5
   1ae90:	mov	w1, #0x0                   	// #0
   1ae94:	ldr	w0, [sp, #52]
   1ae98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ae9c:	str	w0, [sp, #3772]
   1aea0:	ldr	x3, [sp, #24]
   1aea4:	ldr	x2, [sp, #32]
   1aea8:	ldr	w1, [sp, #3772]
   1aeac:	ldr	x0, [sp, #40]
   1aeb0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1aeb4:	mov	w1, w0
   1aeb8:	add	x0, sp, #0x3c
   1aebc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1aec0:	and	w0, w0, #0xff
   1aec4:	eor	w0, w0, #0x1
   1aec8:	and	w0, w0, #0xff
   1aecc:	cmp	w0, #0x0
   1aed0:	b.eq	1aedc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15f6c>  // b.none
   1aed4:	mov	w0, #0x0                   	// #0
   1aed8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1aedc:	mov	w2, #0x5                   	// #5
   1aee0:	mov	w1, #0x5                   	// #5
   1aee4:	ldr	w0, [sp, #52]
   1aee8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1aeec:	str	w0, [sp, #3772]
   1aef0:	ldr	x3, [sp, #24]
   1aef4:	ldr	x2, [sp, #32]
   1aef8:	ldr	w1, [sp, #3772]
   1aefc:	ldr	x0, [sp, #40]
   1af00:	bl	10e8 <_ZL23DecodeQQQQRegisterClassRN4llvm6MCInstEjmPKv>
   1af04:	mov	w1, w0
   1af08:	add	x0, sp, #0x3c
   1af0c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1af10:	and	w0, w0, #0xff
   1af14:	eor	w0, w0, #0x1
   1af18:	and	w0, w0, #0xff
   1af1c:	cmp	w0, #0x0
   1af20:	b.eq	1af2c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x15fbc>  // b.none
   1af24:	mov	w0, #0x0                   	// #0
   1af28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1af2c:	mov	w2, #0x5                   	// #5
   1af30:	mov	w1, #0x10                  	// #16
   1af34:	ldr	w0, [sp, #52]
   1af38:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1af3c:	str	w0, [sp, #3772]
   1af40:	ldr	x3, [sp, #24]
   1af44:	ldr	x2, [sp, #32]
   1af48:	ldr	w1, [sp, #3772]
   1af4c:	ldr	x0, [sp, #40]
   1af50:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1af54:	mov	w1, w0
   1af58:	add	x0, sp, #0x3c
   1af5c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1af60:	and	w0, w0, #0xff
   1af64:	eor	w0, w0, #0x1
   1af68:	and	w0, w0, #0xff
   1af6c:	cmp	w0, #0x0
   1af70:	b.eq	1af7c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1600c>  // b.none
   1af74:	mov	w0, #0x0                   	// #0
   1af78:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1af7c:	ldr	w0, [sp, #60]
   1af80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1af84:	mov	w2, #0x5                   	// #5
   1af88:	mov	w1, #0x0                   	// #0
   1af8c:	ldr	w0, [sp, #52]
   1af90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1af94:	str	w0, [sp, #3772]
   1af98:	ldr	x3, [sp, #24]
   1af9c:	ldr	x2, [sp, #32]
   1afa0:	ldr	w1, [sp, #3772]
   1afa4:	ldr	x0, [sp, #40]
   1afa8:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   1afac:	mov	w1, w0
   1afb0:	add	x0, sp, #0x3c
   1afb4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1afb8:	and	w0, w0, #0xff
   1afbc:	eor	w0, w0, #0x1
   1afc0:	and	w0, w0, #0xff
   1afc4:	cmp	w0, #0x0
   1afc8:	b.eq	1afd4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16064>  // b.none
   1afcc:	mov	w0, #0x0                   	// #0
   1afd0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1afd4:	mov	w2, #0x5                   	// #5
   1afd8:	mov	w1, #0x5                   	// #5
   1afdc:	ldr	w0, [sp, #52]
   1afe0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1afe4:	str	w0, [sp, #3772]
   1afe8:	ldr	x3, [sp, #24]
   1afec:	ldr	x2, [sp, #32]
   1aff0:	ldr	w1, [sp, #3772]
   1aff4:	ldr	x0, [sp, #40]
   1aff8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1affc:	mov	w1, w0
   1b000:	add	x0, sp, #0x3c
   1b004:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b008:	and	w0, w0, #0xff
   1b00c:	eor	w0, w0, #0x1
   1b010:	and	w0, w0, #0xff
   1b014:	cmp	w0, #0x0
   1b018:	b.eq	1b024 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x160b4>  // b.none
   1b01c:	mov	w0, #0x0                   	// #0
   1b020:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b024:	ldr	w0, [sp, #60]
   1b028:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b02c:	mov	w2, #0x5                   	// #5
   1b030:	mov	w1, #0x0                   	// #0
   1b034:	ldr	w0, [sp, #52]
   1b038:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b03c:	str	w0, [sp, #3772]
   1b040:	ldr	x3, [sp, #24]
   1b044:	ldr	x2, [sp, #32]
   1b048:	ldr	w1, [sp, #3772]
   1b04c:	ldr	x0, [sp, #40]
   1b050:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b054:	mov	w1, w0
   1b058:	add	x0, sp, #0x3c
   1b05c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b060:	and	w0, w0, #0xff
   1b064:	eor	w0, w0, #0x1
   1b068:	and	w0, w0, #0xff
   1b06c:	cmp	w0, #0x0
   1b070:	b.eq	1b07c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1610c>  // b.none
   1b074:	mov	w0, #0x0                   	// #0
   1b078:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b07c:	mov	w2, #0x5                   	// #5
   1b080:	mov	w1, #0x5                   	// #5
   1b084:	ldr	w0, [sp, #52]
   1b088:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b08c:	str	w0, [sp, #3772]
   1b090:	ldr	x3, [sp, #24]
   1b094:	ldr	x2, [sp, #32]
   1b098:	ldr	w1, [sp, #3772]
   1b09c:	ldr	x0, [sp, #40]
   1b0a0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b0a4:	mov	w1, w0
   1b0a8:	add	x0, sp, #0x3c
   1b0ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b0b0:	and	w0, w0, #0xff
   1b0b4:	eor	w0, w0, #0x1
   1b0b8:	and	w0, w0, #0xff
   1b0bc:	cmp	w0, #0x0
   1b0c0:	b.eq	1b0cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1615c>  // b.none
   1b0c4:	mov	w0, #0x0                   	// #0
   1b0c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b0cc:	mov	w2, #0x5                   	// #5
   1b0d0:	mov	w1, #0x10                  	// #16
   1b0d4:	ldr	w0, [sp, #52]
   1b0d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b0dc:	str	w0, [sp, #3772]
   1b0e0:	ldr	x3, [sp, #24]
   1b0e4:	ldr	x2, [sp, #32]
   1b0e8:	ldr	w1, [sp, #3772]
   1b0ec:	ldr	x0, [sp, #40]
   1b0f0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b0f4:	mov	w1, w0
   1b0f8:	add	x0, sp, #0x3c
   1b0fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b100:	and	w0, w0, #0xff
   1b104:	eor	w0, w0, #0x1
   1b108:	and	w0, w0, #0xff
   1b10c:	cmp	w0, #0x0
   1b110:	b.eq	1b11c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x161ac>  // b.none
   1b114:	mov	w0, #0x0                   	// #0
   1b118:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b11c:	mov	w2, #0x4                   	// #4
   1b120:	mov	w1, #0xb                   	// #11
   1b124:	ldr	w0, [sp, #52]
   1b128:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b12c:	str	w0, [sp, #3772]
   1b130:	ldr	w0, [sp, #3772]
   1b134:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b138:	add	x2, sp, #0x800
   1b13c:	stp	x0, x1, [x2, #56]
   1b140:	add	x0, sp, #0x838
   1b144:	mov	x1, x0
   1b148:	ldr	x0, [sp, #40]
   1b14c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b150:	ldr	w0, [sp, #60]
   1b154:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b158:	mov	w2, #0x5                   	// #5
   1b15c:	mov	w1, #0x0                   	// #0
   1b160:	ldr	w0, [sp, #52]
   1b164:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b168:	str	w0, [sp, #3772]
   1b16c:	ldr	x3, [sp, #24]
   1b170:	ldr	x2, [sp, #32]
   1b174:	ldr	w1, [sp, #3772]
   1b178:	ldr	x0, [sp, #40]
   1b17c:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   1b180:	mov	w1, w0
   1b184:	add	x0, sp, #0x3c
   1b188:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b18c:	and	w0, w0, #0xff
   1b190:	eor	w0, w0, #0x1
   1b194:	and	w0, w0, #0xff
   1b198:	cmp	w0, #0x0
   1b19c:	b.eq	1b1a8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16238>  // b.none
   1b1a0:	mov	w0, #0x0                   	// #0
   1b1a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b1a8:	mov	w2, #0x5                   	// #5
   1b1ac:	mov	w1, #0x5                   	// #5
   1b1b0:	ldr	w0, [sp, #52]
   1b1b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b1b8:	str	w0, [sp, #3772]
   1b1bc:	ldr	x3, [sp, #24]
   1b1c0:	ldr	x2, [sp, #32]
   1b1c4:	ldr	w1, [sp, #3772]
   1b1c8:	ldr	x0, [sp, #40]
   1b1cc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b1d0:	mov	w1, w0
   1b1d4:	add	x0, sp, #0x3c
   1b1d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b1dc:	and	w0, w0, #0xff
   1b1e0:	eor	w0, w0, #0x1
   1b1e4:	and	w0, w0, #0xff
   1b1e8:	cmp	w0, #0x0
   1b1ec:	b.eq	1b1f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16288>  // b.none
   1b1f0:	mov	w0, #0x0                   	// #0
   1b1f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b1f8:	ldr	w0, [sp, #60]
   1b1fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b200:	mov	w2, #0x5                   	// #5
   1b204:	mov	w1, #0x0                   	// #0
   1b208:	ldr	w0, [sp, #52]
   1b20c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b210:	str	w0, [sp, #3772]
   1b214:	ldr	x3, [sp, #24]
   1b218:	ldr	x2, [sp, #32]
   1b21c:	ldr	w1, [sp, #3772]
   1b220:	ldr	x0, [sp, #40]
   1b224:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b228:	mov	w1, w0
   1b22c:	add	x0, sp, #0x3c
   1b230:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b234:	and	w0, w0, #0xff
   1b238:	eor	w0, w0, #0x1
   1b23c:	and	w0, w0, #0xff
   1b240:	cmp	w0, #0x0
   1b244:	b.eq	1b250 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x162e0>  // b.none
   1b248:	mov	w0, #0x0                   	// #0
   1b24c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b250:	mov	w2, #0x5                   	// #5
   1b254:	mov	w1, #0x0                   	// #0
   1b258:	ldr	w0, [sp, #52]
   1b25c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b260:	str	w0, [sp, #3772]
   1b264:	ldr	x3, [sp, #24]
   1b268:	ldr	x2, [sp, #32]
   1b26c:	ldr	w1, [sp, #3772]
   1b270:	ldr	x0, [sp, #40]
   1b274:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b278:	mov	w1, w0
   1b27c:	add	x0, sp, #0x3c
   1b280:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b284:	and	w0, w0, #0xff
   1b288:	eor	w0, w0, #0x1
   1b28c:	and	w0, w0, #0xff
   1b290:	cmp	w0, #0x0
   1b294:	b.eq	1b2a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16330>  // b.none
   1b298:	mov	w0, #0x0                   	// #0
   1b29c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b2a0:	mov	w2, #0x1                   	// #1
   1b2a4:	mov	w1, #0x14                  	// #20
   1b2a8:	ldr	w0, [sp, #52]
   1b2ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b2b0:	str	w0, [sp, #3772]
   1b2b4:	ldr	w0, [sp, #3772]
   1b2b8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b2bc:	add	x2, sp, #0x800
   1b2c0:	stp	x0, x1, [x2, #72]
   1b2c4:	add	x0, sp, #0x848
   1b2c8:	mov	x1, x0
   1b2cc:	ldr	x0, [sp, #40]
   1b2d0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b2d4:	mov	w2, #0x5                   	// #5
   1b2d8:	mov	w1, #0x5                   	// #5
   1b2dc:	ldr	w0, [sp, #52]
   1b2e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b2e4:	str	w0, [sp, #3772]
   1b2e8:	ldr	x3, [sp, #24]
   1b2ec:	ldr	x2, [sp, #32]
   1b2f0:	ldr	w1, [sp, #3772]
   1b2f4:	ldr	x0, [sp, #40]
   1b2f8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b2fc:	mov	w1, w0
   1b300:	add	x0, sp, #0x3c
   1b304:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b308:	and	w0, w0, #0xff
   1b30c:	eor	w0, w0, #0x1
   1b310:	and	w0, w0, #0xff
   1b314:	cmp	w0, #0x0
   1b318:	b.eq	1b324 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x163b4>  // b.none
   1b31c:	mov	w0, #0x0                   	// #0
   1b320:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b324:	mov	w2, #0x1                   	// #1
   1b328:	mov	w1, #0xe                   	// #14
   1b32c:	ldr	w0, [sp, #52]
   1b330:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b334:	str	w0, [sp, #3772]
   1b338:	ldr	w0, [sp, #3772]
   1b33c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b340:	add	x2, sp, #0x800
   1b344:	stp	x0, x1, [x2, #88]
   1b348:	add	x0, sp, #0x858
   1b34c:	mov	x1, x0
   1b350:	ldr	x0, [sp, #40]
   1b354:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b358:	ldr	w0, [sp, #60]
   1b35c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b360:	mov	w2, #0x5                   	// #5
   1b364:	mov	w1, #0x0                   	// #0
   1b368:	ldr	w0, [sp, #52]
   1b36c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b370:	str	w0, [sp, #3772]
   1b374:	ldr	x3, [sp, #24]
   1b378:	ldr	x2, [sp, #32]
   1b37c:	ldr	w1, [sp, #3772]
   1b380:	ldr	x0, [sp, #40]
   1b384:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b388:	mov	w1, w0
   1b38c:	add	x0, sp, #0x3c
   1b390:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b394:	and	w0, w0, #0xff
   1b398:	eor	w0, w0, #0x1
   1b39c:	and	w0, w0, #0xff
   1b3a0:	cmp	w0, #0x0
   1b3a4:	b.eq	1b3b0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16440>  // b.none
   1b3a8:	mov	w0, #0x0                   	// #0
   1b3ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b3b0:	mov	w2, #0x5                   	// #5
   1b3b4:	mov	w1, #0x0                   	// #0
   1b3b8:	ldr	w0, [sp, #52]
   1b3bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b3c0:	str	w0, [sp, #3772]
   1b3c4:	ldr	x3, [sp, #24]
   1b3c8:	ldr	x2, [sp, #32]
   1b3cc:	ldr	w1, [sp, #3772]
   1b3d0:	ldr	x0, [sp, #40]
   1b3d4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b3d8:	mov	w1, w0
   1b3dc:	add	x0, sp, #0x3c
   1b3e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b3e4:	and	w0, w0, #0xff
   1b3e8:	eor	w0, w0, #0x1
   1b3ec:	and	w0, w0, #0xff
   1b3f0:	cmp	w0, #0x0
   1b3f4:	b.eq	1b400 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16490>  // b.none
   1b3f8:	mov	w0, #0x0                   	// #0
   1b3fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b400:	mov	w2, #0x2                   	// #2
   1b404:	mov	w1, #0x13                  	// #19
   1b408:	ldr	w0, [sp, #52]
   1b40c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b410:	str	w0, [sp, #3772]
   1b414:	ldr	w0, [sp, #3772]
   1b418:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b41c:	add	x2, sp, #0x800
   1b420:	stp	x0, x1, [x2, #104]
   1b424:	add	x0, sp, #0x868
   1b428:	mov	x1, x0
   1b42c:	ldr	x0, [sp, #40]
   1b430:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b434:	mov	w2, #0x5                   	// #5
   1b438:	mov	w1, #0x5                   	// #5
   1b43c:	ldr	w0, [sp, #52]
   1b440:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b444:	str	w0, [sp, #3772]
   1b448:	ldr	x3, [sp, #24]
   1b44c:	ldr	x2, [sp, #32]
   1b450:	ldr	w1, [sp, #3772]
   1b454:	ldr	x0, [sp, #40]
   1b458:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b45c:	mov	w1, w0
   1b460:	add	x0, sp, #0x3c
   1b464:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b468:	and	w0, w0, #0xff
   1b46c:	eor	w0, w0, #0x1
   1b470:	and	w0, w0, #0xff
   1b474:	cmp	w0, #0x0
   1b478:	b.eq	1b484 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16514>  // b.none
   1b47c:	mov	w0, #0x0                   	// #0
   1b480:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b484:	mov	w2, #0x2                   	// #2
   1b488:	mov	w1, #0xd                   	// #13
   1b48c:	ldr	w0, [sp, #52]
   1b490:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b494:	str	w0, [sp, #3772]
   1b498:	ldr	w0, [sp, #3772]
   1b49c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b4a0:	add	x2, sp, #0x800
   1b4a4:	stp	x0, x1, [x2, #120]
   1b4a8:	add	x0, sp, #0x878
   1b4ac:	mov	x1, x0
   1b4b0:	ldr	x0, [sp, #40]
   1b4b4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b4b8:	ldr	w0, [sp, #60]
   1b4bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b4c0:	mov	w2, #0x5                   	// #5
   1b4c4:	mov	w1, #0x0                   	// #0
   1b4c8:	ldr	w0, [sp, #52]
   1b4cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b4d0:	str	w0, [sp, #3772]
   1b4d4:	ldr	x3, [sp, #24]
   1b4d8:	ldr	x2, [sp, #32]
   1b4dc:	ldr	w1, [sp, #3772]
   1b4e0:	ldr	x0, [sp, #40]
   1b4e4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b4e8:	mov	w1, w0
   1b4ec:	add	x0, sp, #0x3c
   1b4f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b4f4:	and	w0, w0, #0xff
   1b4f8:	eor	w0, w0, #0x1
   1b4fc:	and	w0, w0, #0xff
   1b500:	cmp	w0, #0x0
   1b504:	b.eq	1b510 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x165a0>  // b.none
   1b508:	mov	w0, #0x0                   	// #0
   1b50c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b510:	mov	w2, #0x5                   	// #5
   1b514:	mov	w1, #0x0                   	// #0
   1b518:	ldr	w0, [sp, #52]
   1b51c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b520:	str	w0, [sp, #3772]
   1b524:	ldr	x3, [sp, #24]
   1b528:	ldr	x2, [sp, #32]
   1b52c:	ldr	w1, [sp, #3772]
   1b530:	ldr	x0, [sp, #40]
   1b534:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b538:	mov	w1, w0
   1b53c:	add	x0, sp, #0x3c
   1b540:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b544:	and	w0, w0, #0xff
   1b548:	eor	w0, w0, #0x1
   1b54c:	and	w0, w0, #0xff
   1b550:	cmp	w0, #0x0
   1b554:	b.eq	1b560 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x165f0>  // b.none
   1b558:	mov	w0, #0x0                   	// #0
   1b55c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b560:	mov	w2, #0x3                   	// #3
   1b564:	mov	w1, #0x12                  	// #18
   1b568:	ldr	w0, [sp, #52]
   1b56c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b570:	str	w0, [sp, #3772]
   1b574:	ldr	w0, [sp, #3772]
   1b578:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b57c:	add	x2, sp, #0x800
   1b580:	stp	x0, x1, [x2, #136]
   1b584:	add	x0, sp, #0x888
   1b588:	mov	x1, x0
   1b58c:	ldr	x0, [sp, #40]
   1b590:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b594:	mov	w2, #0x5                   	// #5
   1b598:	mov	w1, #0x5                   	// #5
   1b59c:	ldr	w0, [sp, #52]
   1b5a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b5a4:	str	w0, [sp, #3772]
   1b5a8:	ldr	x3, [sp, #24]
   1b5ac:	ldr	x2, [sp, #32]
   1b5b0:	ldr	w1, [sp, #3772]
   1b5b4:	ldr	x0, [sp, #40]
   1b5b8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b5bc:	mov	w1, w0
   1b5c0:	add	x0, sp, #0x3c
   1b5c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b5c8:	and	w0, w0, #0xff
   1b5cc:	eor	w0, w0, #0x1
   1b5d0:	and	w0, w0, #0xff
   1b5d4:	cmp	w0, #0x0
   1b5d8:	b.eq	1b5e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16674>  // b.none
   1b5dc:	mov	w0, #0x0                   	// #0
   1b5e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b5e4:	mov	w2, #0x3                   	// #3
   1b5e8:	mov	w1, #0xc                   	// #12
   1b5ec:	ldr	w0, [sp, #52]
   1b5f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b5f4:	str	w0, [sp, #3772]
   1b5f8:	ldr	w0, [sp, #3772]
   1b5fc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b600:	add	x2, sp, #0x800
   1b604:	stp	x0, x1, [x2, #152]
   1b608:	add	x0, sp, #0x898
   1b60c:	mov	x1, x0
   1b610:	ldr	x0, [sp, #40]
   1b614:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b618:	ldr	w0, [sp, #60]
   1b61c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b620:	mov	w2, #0x5                   	// #5
   1b624:	mov	w1, #0x0                   	// #0
   1b628:	ldr	w0, [sp, #52]
   1b62c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b630:	str	w0, [sp, #3772]
   1b634:	ldr	x3, [sp, #24]
   1b638:	ldr	x2, [sp, #32]
   1b63c:	ldr	w1, [sp, #3772]
   1b640:	ldr	x0, [sp, #40]
   1b644:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b648:	mov	w1, w0
   1b64c:	add	x0, sp, #0x3c
   1b650:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b654:	and	w0, w0, #0xff
   1b658:	eor	w0, w0, #0x1
   1b65c:	and	w0, w0, #0xff
   1b660:	cmp	w0, #0x0
   1b664:	b.eq	1b670 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16700>  // b.none
   1b668:	mov	w0, #0x0                   	// #0
   1b66c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b670:	mov	w2, #0x5                   	// #5
   1b674:	mov	w1, #0x0                   	// #0
   1b678:	ldr	w0, [sp, #52]
   1b67c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b680:	str	w0, [sp, #3772]
   1b684:	ldr	x3, [sp, #24]
   1b688:	ldr	x2, [sp, #32]
   1b68c:	ldr	w1, [sp, #3772]
   1b690:	ldr	x0, [sp, #40]
   1b694:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b698:	mov	w1, w0
   1b69c:	add	x0, sp, #0x3c
   1b6a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b6a4:	and	w0, w0, #0xff
   1b6a8:	eor	w0, w0, #0x1
   1b6ac:	and	w0, w0, #0xff
   1b6b0:	cmp	w0, #0x0
   1b6b4:	b.eq	1b6c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16750>  // b.none
   1b6b8:	mov	w0, #0x0                   	// #0
   1b6bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b6c0:	mov	w2, #0x4                   	// #4
   1b6c4:	mov	w1, #0x11                  	// #17
   1b6c8:	ldr	w0, [sp, #52]
   1b6cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b6d0:	str	w0, [sp, #3772]
   1b6d4:	ldr	w0, [sp, #3772]
   1b6d8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b6dc:	add	x2, sp, #0x800
   1b6e0:	stp	x0, x1, [x2, #168]
   1b6e4:	add	x0, sp, #0x8a8
   1b6e8:	mov	x1, x0
   1b6ec:	ldr	x0, [sp, #40]
   1b6f0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b6f4:	mov	w2, #0x5                   	// #5
   1b6f8:	mov	w1, #0x5                   	// #5
   1b6fc:	ldr	w0, [sp, #52]
   1b700:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b704:	str	w0, [sp, #3772]
   1b708:	ldr	x3, [sp, #24]
   1b70c:	ldr	x2, [sp, #32]
   1b710:	ldr	w1, [sp, #3772]
   1b714:	ldr	x0, [sp, #40]
   1b718:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b71c:	mov	w1, w0
   1b720:	add	x0, sp, #0x3c
   1b724:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b728:	and	w0, w0, #0xff
   1b72c:	eor	w0, w0, #0x1
   1b730:	and	w0, w0, #0xff
   1b734:	cmp	w0, #0x0
   1b738:	b.eq	1b744 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x167d4>  // b.none
   1b73c:	mov	w0, #0x0                   	// #0
   1b740:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b744:	mov	w2, #0x4                   	// #4
   1b748:	mov	w1, #0xb                   	// #11
   1b74c:	ldr	w0, [sp, #52]
   1b750:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b754:	str	w0, [sp, #3772]
   1b758:	ldr	w0, [sp, #3772]
   1b75c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b760:	add	x2, sp, #0x800
   1b764:	stp	x0, x1, [x2, #184]
   1b768:	add	x0, sp, #0x8b8
   1b76c:	mov	x1, x0
   1b770:	ldr	x0, [sp, #40]
   1b774:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1b778:	ldr	w0, [sp, #60]
   1b77c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b780:	mov	w2, #0x5                   	// #5
   1b784:	mov	w1, #0x0                   	// #0
   1b788:	ldr	w0, [sp, #52]
   1b78c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b790:	str	w0, [sp, #3772]
   1b794:	ldr	x3, [sp, #24]
   1b798:	ldr	x2, [sp, #32]
   1b79c:	ldr	w1, [sp, #3772]
   1b7a0:	ldr	x0, [sp, #40]
   1b7a4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b7a8:	mov	w1, w0
   1b7ac:	add	x0, sp, #0x3c
   1b7b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b7b4:	and	w0, w0, #0xff
   1b7b8:	eor	w0, w0, #0x1
   1b7bc:	and	w0, w0, #0xff
   1b7c0:	cmp	w0, #0x0
   1b7c4:	b.eq	1b7d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16860>  // b.none
   1b7c8:	mov	w0, #0x0                   	// #0
   1b7cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b7d0:	mov	w2, #0x5                   	// #5
   1b7d4:	mov	w1, #0x5                   	// #5
   1b7d8:	ldr	w0, [sp, #52]
   1b7dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b7e0:	str	w0, [sp, #3772]
   1b7e4:	ldr	x3, [sp, #24]
   1b7e8:	ldr	x2, [sp, #32]
   1b7ec:	ldr	w1, [sp, #3772]
   1b7f0:	ldr	x0, [sp, #40]
   1b7f4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b7f8:	mov	w1, w0
   1b7fc:	add	x0, sp, #0x3c
   1b800:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b804:	and	w0, w0, #0xff
   1b808:	eor	w0, w0, #0x1
   1b80c:	and	w0, w0, #0xff
   1b810:	cmp	w0, #0x0
   1b814:	b.eq	1b820 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x168b0>  // b.none
   1b818:	mov	w0, #0x0                   	// #0
   1b81c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b820:	mov	w2, #0x5                   	// #5
   1b824:	mov	w1, #0x10                  	// #16
   1b828:	ldr	w0, [sp, #52]
   1b82c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b830:	str	w0, [sp, #3772]
   1b834:	ldr	x3, [sp, #24]
   1b838:	ldr	x2, [sp, #32]
   1b83c:	ldr	w1, [sp, #3772]
   1b840:	ldr	x0, [sp, #40]
   1b844:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b848:	mov	w1, w0
   1b84c:	add	x0, sp, #0x3c
   1b850:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b854:	and	w0, w0, #0xff
   1b858:	eor	w0, w0, #0x1
   1b85c:	and	w0, w0, #0xff
   1b860:	cmp	w0, #0x0
   1b864:	b.eq	1b870 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16900>  // b.none
   1b868:	mov	w0, #0x0                   	// #0
   1b86c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b870:	mov	w2, #0x5                   	// #5
   1b874:	mov	w1, #0xa                   	// #10
   1b878:	ldr	w0, [sp, #52]
   1b87c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b880:	str	w0, [sp, #3772]
   1b884:	ldr	x3, [sp, #24]
   1b888:	ldr	x2, [sp, #32]
   1b88c:	ldr	w1, [sp, #3772]
   1b890:	ldr	x0, [sp, #40]
   1b894:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1b898:	mov	w1, w0
   1b89c:	add	x0, sp, #0x3c
   1b8a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b8a4:	and	w0, w0, #0xff
   1b8a8:	eor	w0, w0, #0x1
   1b8ac:	and	w0, w0, #0xff
   1b8b0:	cmp	w0, #0x0
   1b8b4:	b.eq	1b8c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16950>  // b.none
   1b8b8:	mov	w0, #0x0                   	// #0
   1b8bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b8c0:	ldr	w0, [sp, #60]
   1b8c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b8c8:	mov	w2, #0x5                   	// #5
   1b8cc:	mov	w1, #0x0                   	// #0
   1b8d0:	ldr	w0, [sp, #52]
   1b8d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b8d8:	str	w0, [sp, #3772]
   1b8dc:	ldr	x3, [sp, #24]
   1b8e0:	ldr	x2, [sp, #32]
   1b8e4:	ldr	w1, [sp, #3772]
   1b8e8:	ldr	x0, [sp, #40]
   1b8ec:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   1b8f0:	mov	w1, w0
   1b8f4:	add	x0, sp, #0x3c
   1b8f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b8fc:	and	w0, w0, #0xff
   1b900:	eor	w0, w0, #0x1
   1b904:	and	w0, w0, #0xff
   1b908:	cmp	w0, #0x0
   1b90c:	b.eq	1b918 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x169a8>  // b.none
   1b910:	mov	w0, #0x0                   	// #0
   1b914:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b918:	mov	w2, #0x5                   	// #5
   1b91c:	mov	w1, #0x5                   	// #5
   1b920:	ldr	w0, [sp, #52]
   1b924:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b928:	str	w0, [sp, #3772]
   1b92c:	ldr	x3, [sp, #24]
   1b930:	ldr	x2, [sp, #32]
   1b934:	ldr	w1, [sp, #3772]
   1b938:	ldr	x0, [sp, #40]
   1b93c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1b940:	mov	w1, w0
   1b944:	add	x0, sp, #0x3c
   1b948:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b94c:	and	w0, w0, #0xff
   1b950:	eor	w0, w0, #0x1
   1b954:	and	w0, w0, #0xff
   1b958:	cmp	w0, #0x0
   1b95c:	b.eq	1b968 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x169f8>  // b.none
   1b960:	mov	w0, #0x0                   	// #0
   1b964:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b968:	ldr	w0, [sp, #60]
   1b96c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b970:	mov	w2, #0x5                   	// #5
   1b974:	mov	w1, #0x0                   	// #0
   1b978:	ldr	w0, [sp, #52]
   1b97c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b980:	str	w0, [sp, #3772]
   1b984:	ldr	x3, [sp, #24]
   1b988:	ldr	x2, [sp, #32]
   1b98c:	ldr	w1, [sp, #3772]
   1b990:	ldr	x0, [sp, #40]
   1b994:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1b998:	mov	w1, w0
   1b99c:	add	x0, sp, #0x3c
   1b9a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b9a4:	and	w0, w0, #0xff
   1b9a8:	eor	w0, w0, #0x1
   1b9ac:	and	w0, w0, #0xff
   1b9b0:	cmp	w0, #0x0
   1b9b4:	b.eq	1b9c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16a50>  // b.none
   1b9b8:	mov	w0, #0x0                   	// #0
   1b9bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1b9c0:	mov	w2, #0x5                   	// #5
   1b9c4:	mov	w1, #0x0                   	// #0
   1b9c8:	ldr	w0, [sp, #52]
   1b9cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1b9d0:	str	w0, [sp, #3772]
   1b9d4:	ldr	x3, [sp, #24]
   1b9d8:	ldr	x2, [sp, #32]
   1b9dc:	ldr	w1, [sp, #3772]
   1b9e0:	ldr	x0, [sp, #40]
   1b9e4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1b9e8:	mov	w1, w0
   1b9ec:	add	x0, sp, #0x3c
   1b9f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1b9f4:	and	w0, w0, #0xff
   1b9f8:	eor	w0, w0, #0x1
   1b9fc:	and	w0, w0, #0xff
   1ba00:	cmp	w0, #0x0
   1ba04:	b.eq	1ba10 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16aa0>  // b.none
   1ba08:	mov	w0, #0x0                   	// #0
   1ba0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ba10:	mov	w2, #0x5                   	// #5
   1ba14:	mov	w1, #0x5                   	// #5
   1ba18:	ldr	w0, [sp, #52]
   1ba1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ba20:	str	w0, [sp, #3772]
   1ba24:	ldr	x3, [sp, #24]
   1ba28:	ldr	x2, [sp, #32]
   1ba2c:	ldr	w1, [sp, #3772]
   1ba30:	ldr	x0, [sp, #40]
   1ba34:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1ba38:	mov	w1, w0
   1ba3c:	add	x0, sp, #0x3c
   1ba40:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ba44:	and	w0, w0, #0xff
   1ba48:	eor	w0, w0, #0x1
   1ba4c:	and	w0, w0, #0xff
   1ba50:	cmp	w0, #0x0
   1ba54:	b.eq	1ba60 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16af0>  // b.none
   1ba58:	mov	w0, #0x0                   	// #0
   1ba5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ba60:	mov	w2, #0x5                   	// #5
   1ba64:	mov	w1, #0x10                  	// #16
   1ba68:	ldr	w0, [sp, #52]
   1ba6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ba70:	str	w0, [sp, #3772]
   1ba74:	ldr	x3, [sp, #24]
   1ba78:	ldr	x2, [sp, #32]
   1ba7c:	ldr	w1, [sp, #3772]
   1ba80:	ldr	x0, [sp, #40]
   1ba84:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1ba88:	mov	w1, w0
   1ba8c:	add	x0, sp, #0x3c
   1ba90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ba94:	and	w0, w0, #0xff
   1ba98:	eor	w0, w0, #0x1
   1ba9c:	and	w0, w0, #0xff
   1baa0:	cmp	w0, #0x0
   1baa4:	b.eq	1bab0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16b40>  // b.none
   1baa8:	mov	w0, #0x0                   	// #0
   1baac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bab0:	mov	w2, #0x2                   	// #2
   1bab4:	mov	w1, #0xb                   	// #11
   1bab8:	ldr	w0, [sp, #52]
   1babc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bac0:	str	w0, [sp, #3772]
   1bac4:	ldr	w0, [sp, #3772]
   1bac8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1bacc:	add	x2, sp, #0x800
   1bad0:	stp	x0, x1, [x2, #200]
   1bad4:	add	x0, sp, #0x8c8
   1bad8:	mov	x1, x0
   1badc:	ldr	x0, [sp, #40]
   1bae0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1bae4:	ldr	w0, [sp, #60]
   1bae8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1baec:	mov	w2, #0x5                   	// #5
   1baf0:	mov	w1, #0x0                   	// #0
   1baf4:	ldr	w0, [sp, #52]
   1baf8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bafc:	str	w0, [sp, #3772]
   1bb00:	ldr	x3, [sp, #24]
   1bb04:	ldr	x2, [sp, #32]
   1bb08:	ldr	w1, [sp, #3772]
   1bb0c:	ldr	x0, [sp, #40]
   1bb10:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1bb14:	mov	w1, w0
   1bb18:	add	x0, sp, #0x3c
   1bb1c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1bb20:	and	w0, w0, #0xff
   1bb24:	eor	w0, w0, #0x1
   1bb28:	and	w0, w0, #0xff
   1bb2c:	cmp	w0, #0x0
   1bb30:	b.eq	1bb3c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16bcc>  // b.none
   1bb34:	mov	w0, #0x0                   	// #0
   1bb38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bb3c:	mov	w2, #0x5                   	// #5
   1bb40:	mov	w1, #0x5                   	// #5
   1bb44:	ldr	w0, [sp, #52]
   1bb48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bb4c:	str	w0, [sp, #3772]
   1bb50:	ldr	x3, [sp, #24]
   1bb54:	ldr	x2, [sp, #32]
   1bb58:	ldr	w1, [sp, #3772]
   1bb5c:	ldr	x0, [sp, #40]
   1bb60:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1bb64:	mov	w1, w0
   1bb68:	add	x0, sp, #0x3c
   1bb6c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1bb70:	and	w0, w0, #0xff
   1bb74:	eor	w0, w0, #0x1
   1bb78:	and	w0, w0, #0xff
   1bb7c:	cmp	w0, #0x0
   1bb80:	b.eq	1bb8c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16c1c>  // b.none
   1bb84:	mov	w0, #0x0                   	// #0
   1bb88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bb8c:	mov	w2, #0x5                   	// #5
   1bb90:	mov	w1, #0x10                  	// #16
   1bb94:	ldr	w0, [sp, #52]
   1bb98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bb9c:	str	w0, [sp, #3772]
   1bba0:	ldr	x3, [sp, #24]
   1bba4:	ldr	x2, [sp, #32]
   1bba8:	ldr	w1, [sp, #3772]
   1bbac:	ldr	x0, [sp, #40]
   1bbb0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1bbb4:	mov	w1, w0
   1bbb8:	add	x0, sp, #0x3c
   1bbbc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1bbc0:	and	w0, w0, #0xff
   1bbc4:	eor	w0, w0, #0x1
   1bbc8:	and	w0, w0, #0xff
   1bbcc:	cmp	w0, #0x0
   1bbd0:	b.eq	1bbdc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16c6c>  // b.none
   1bbd4:	mov	w0, #0x0                   	// #0
   1bbd8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bbdc:	mov	w2, #0x1                   	// #1
   1bbe0:	mov	w1, #0xc                   	// #12
   1bbe4:	ldr	w0, [sp, #52]
   1bbe8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bbec:	str	w0, [sp, #3772]
   1bbf0:	ldr	w0, [sp, #3772]
   1bbf4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1bbf8:	add	x2, sp, #0x800
   1bbfc:	stp	x0, x1, [x2, #216]
   1bc00:	add	x0, sp, #0x8d8
   1bc04:	mov	x1, x0
   1bc08:	ldr	x0, [sp, #40]
   1bc0c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1bc10:	ldr	w0, [sp, #60]
   1bc14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bc18:	mov	w2, #0x5                   	// #5
   1bc1c:	mov	w1, #0x0                   	// #0
   1bc20:	ldr	w0, [sp, #52]
   1bc24:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bc28:	str	w0, [sp, #3772]
   1bc2c:	ldr	x3, [sp, #24]
   1bc30:	ldr	x2, [sp, #32]
   1bc34:	ldr	w1, [sp, #3772]
   1bc38:	ldr	x0, [sp, #40]
   1bc3c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1bc40:	mov	w1, w0
   1bc44:	add	x0, sp, #0x3c
   1bc48:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1bc4c:	and	w0, w0, #0xff
   1bc50:	eor	w0, w0, #0x1
   1bc54:	and	w0, w0, #0xff
   1bc58:	cmp	w0, #0x0
   1bc5c:	b.eq	1bc68 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16cf8>  // b.none
   1bc60:	mov	w0, #0x0                   	// #0
   1bc64:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bc68:	mov	w2, #0x5                   	// #5
   1bc6c:	mov	w1, #0x0                   	// #0
   1bc70:	ldr	w0, [sp, #52]
   1bc74:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bc78:	str	w0, [sp, #3772]
   1bc7c:	ldr	x3, [sp, #24]
   1bc80:	ldr	x2, [sp, #32]
   1bc84:	ldr	w1, [sp, #3772]
   1bc88:	ldr	x0, [sp, #40]
   1bc8c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1bc90:	mov	w1, w0
   1bc94:	add	x0, sp, #0x3c
   1bc98:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1bc9c:	and	w0, w0, #0xff
   1bca0:	eor	w0, w0, #0x1
   1bca4:	and	w0, w0, #0xff
   1bca8:	cmp	w0, #0x0
   1bcac:	b.eq	1bcb8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16d48>  // b.none
   1bcb0:	mov	w0, #0x0                   	// #0
   1bcb4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bcb8:	mov	w2, #0x5                   	// #5
   1bcbc:	mov	w1, #0x5                   	// #5
   1bcc0:	ldr	w0, [sp, #52]
   1bcc4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bcc8:	str	w0, [sp, #3772]
   1bccc:	ldr	x3, [sp, #24]
   1bcd0:	ldr	x2, [sp, #32]
   1bcd4:	ldr	w1, [sp, #3772]
   1bcd8:	ldr	x0, [sp, #40]
   1bcdc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1bce0:	mov	w1, w0
   1bce4:	add	x0, sp, #0x3c
   1bce8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1bcec:	and	w0, w0, #0xff
   1bcf0:	eor	w0, w0, #0x1
   1bcf4:	and	w0, w0, #0xff
   1bcf8:	cmp	w0, #0x0
   1bcfc:	b.eq	1bd08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16d98>  // b.none
   1bd00:	mov	w0, #0x0                   	// #0
   1bd04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bd08:	mov	w2, #0x5                   	// #5
   1bd0c:	mov	w1, #0x10                  	// #16
   1bd10:	ldr	w0, [sp, #52]
   1bd14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bd18:	str	w0, [sp, #3772]
   1bd1c:	ldr	x3, [sp, #24]
   1bd20:	ldr	x2, [sp, #32]
   1bd24:	ldr	w1, [sp, #3772]
   1bd28:	ldr	x0, [sp, #40]
   1bd2c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1bd30:	mov	w1, w0
   1bd34:	add	x0, sp, #0x3c
   1bd38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1bd3c:	and	w0, w0, #0xff
   1bd40:	eor	w0, w0, #0x1
   1bd44:	and	w0, w0, #0xff
   1bd48:	cmp	w0, #0x0
   1bd4c:	b.eq	1bd58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16de8>  // b.none
   1bd50:	mov	w0, #0x0                   	// #0
   1bd54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bd58:	mov	w2, #0x2                   	// #2
   1bd5c:	mov	w1, #0xb                   	// #11
   1bd60:	ldr	w0, [sp, #52]
   1bd64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bd68:	str	w0, [sp, #3772]
   1bd6c:	ldr	w0, [sp, #3772]
   1bd70:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1bd74:	add	x2, sp, #0x800
   1bd78:	stp	x0, x1, [x2, #232]
   1bd7c:	add	x0, sp, #0x8e8
   1bd80:	mov	x1, x0
   1bd84:	ldr	x0, [sp, #40]
   1bd88:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1bd8c:	ldr	w0, [sp, #60]
   1bd90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bd94:	mov	w2, #0x5                   	// #5
   1bd98:	mov	w1, #0x0                   	// #0
   1bd9c:	ldr	w0, [sp, #52]
   1bda0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bda4:	str	w0, [sp, #3772]
   1bda8:	ldr	x3, [sp, #24]
   1bdac:	ldr	x2, [sp, #32]
   1bdb0:	ldr	w1, [sp, #3772]
   1bdb4:	ldr	x0, [sp, #40]
   1bdb8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1bdbc:	mov	w1, w0
   1bdc0:	add	x0, sp, #0x3c
   1bdc4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1bdc8:	and	w0, w0, #0xff
   1bdcc:	eor	w0, w0, #0x1
   1bdd0:	and	w0, w0, #0xff
   1bdd4:	cmp	w0, #0x0
   1bdd8:	b.eq	1bde4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16e74>  // b.none
   1bddc:	mov	w0, #0x0                   	// #0
   1bde0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bde4:	mov	w2, #0x5                   	// #5
   1bde8:	mov	w1, #0x5                   	// #5
   1bdec:	ldr	w0, [sp, #52]
   1bdf0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bdf4:	str	w0, [sp, #3772]
   1bdf8:	ldr	x3, [sp, #24]
   1bdfc:	ldr	x2, [sp, #32]
   1be00:	ldr	w1, [sp, #3772]
   1be04:	ldr	x0, [sp, #40]
   1be08:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1be0c:	mov	w1, w0
   1be10:	add	x0, sp, #0x3c
   1be14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1be18:	and	w0, w0, #0xff
   1be1c:	eor	w0, w0, #0x1
   1be20:	and	w0, w0, #0xff
   1be24:	cmp	w0, #0x0
   1be28:	b.eq	1be34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16ec4>  // b.none
   1be2c:	mov	w0, #0x0                   	// #0
   1be30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1be34:	mov	w2, #0x5                   	// #5
   1be38:	mov	w1, #0x10                  	// #16
   1be3c:	ldr	w0, [sp, #52]
   1be40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1be44:	str	w0, [sp, #3772]
   1be48:	ldr	x3, [sp, #24]
   1be4c:	ldr	x2, [sp, #32]
   1be50:	ldr	w1, [sp, #3772]
   1be54:	ldr	x0, [sp, #40]
   1be58:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1be5c:	mov	w1, w0
   1be60:	add	x0, sp, #0x3c
   1be64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1be68:	and	w0, w0, #0xff
   1be6c:	eor	w0, w0, #0x1
   1be70:	and	w0, w0, #0xff
   1be74:	cmp	w0, #0x0
   1be78:	b.eq	1be84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16f14>  // b.none
   1be7c:	mov	w0, #0x0                   	// #0
   1be80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1be84:	mov	w2, #0x1                   	// #1
   1be88:	mov	w1, #0xc                   	// #12
   1be8c:	ldr	w0, [sp, #52]
   1be90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1be94:	str	w0, [sp, #3772]
   1be98:	ldr	w0, [sp, #3772]
   1be9c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1bea0:	add	x2, sp, #0x800
   1bea4:	stp	x0, x1, [x2, #248]
   1bea8:	add	x0, sp, #0x8f8
   1beac:	mov	x1, x0
   1beb0:	ldr	x0, [sp, #40]
   1beb4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1beb8:	ldr	w0, [sp, #60]
   1bebc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bec0:	mov	w2, #0x5                   	// #5
   1bec4:	mov	w1, #0x0                   	// #0
   1bec8:	ldr	w0, [sp, #52]
   1becc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bed0:	str	w0, [sp, #3772]
   1bed4:	ldr	x3, [sp, #24]
   1bed8:	ldr	x2, [sp, #32]
   1bedc:	ldr	w1, [sp, #3772]
   1bee0:	ldr	x0, [sp, #40]
   1bee4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1bee8:	mov	w1, w0
   1beec:	add	x0, sp, #0x3c
   1bef0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1bef4:	and	w0, w0, #0xff
   1bef8:	eor	w0, w0, #0x1
   1befc:	and	w0, w0, #0xff
   1bf00:	cmp	w0, #0x0
   1bf04:	b.eq	1bf10 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16fa0>  // b.none
   1bf08:	mov	w0, #0x0                   	// #0
   1bf0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bf10:	mov	w2, #0x5                   	// #5
   1bf14:	mov	w1, #0x0                   	// #0
   1bf18:	ldr	w0, [sp, #52]
   1bf1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bf20:	str	w0, [sp, #3772]
   1bf24:	ldr	x3, [sp, #24]
   1bf28:	ldr	x2, [sp, #32]
   1bf2c:	ldr	w1, [sp, #3772]
   1bf30:	ldr	x0, [sp, #40]
   1bf34:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1bf38:	mov	w1, w0
   1bf3c:	add	x0, sp, #0x3c
   1bf40:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1bf44:	and	w0, w0, #0xff
   1bf48:	eor	w0, w0, #0x1
   1bf4c:	and	w0, w0, #0xff
   1bf50:	cmp	w0, #0x0
   1bf54:	b.eq	1bf60 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x16ff0>  // b.none
   1bf58:	mov	w0, #0x0                   	// #0
   1bf5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bf60:	mov	w2, #0x5                   	// #5
   1bf64:	mov	w1, #0x5                   	// #5
   1bf68:	ldr	w0, [sp, #52]
   1bf6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bf70:	str	w0, [sp, #3772]
   1bf74:	ldr	x3, [sp, #24]
   1bf78:	ldr	x2, [sp, #32]
   1bf7c:	ldr	w1, [sp, #3772]
   1bf80:	ldr	x0, [sp, #40]
   1bf84:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1bf88:	mov	w1, w0
   1bf8c:	add	x0, sp, #0x3c
   1bf90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1bf94:	and	w0, w0, #0xff
   1bf98:	eor	w0, w0, #0x1
   1bf9c:	and	w0, w0, #0xff
   1bfa0:	cmp	w0, #0x0
   1bfa4:	b.eq	1bfb0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17040>  // b.none
   1bfa8:	mov	w0, #0x0                   	// #0
   1bfac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1bfb0:	mov	w2, #0x5                   	// #5
   1bfb4:	mov	w1, #0x10                  	// #16
   1bfb8:	ldr	w0, [sp, #52]
   1bfbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1bfc0:	str	w0, [sp, #3772]
   1bfc4:	ldr	x3, [sp, #24]
   1bfc8:	ldr	x2, [sp, #32]
   1bfcc:	ldr	w1, [sp, #3772]
   1bfd0:	ldr	x0, [sp, #40]
   1bfd4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1bfd8:	mov	w1, w0
   1bfdc:	add	x0, sp, #0x3c
   1bfe0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1bfe4:	and	w0, w0, #0xff
   1bfe8:	eor	w0, w0, #0x1
   1bfec:	and	w0, w0, #0xff
   1bff0:	cmp	w0, #0x0
   1bff4:	b.eq	1c000 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17090>  // b.none
   1bff8:	mov	w0, #0x0                   	// #0
   1bffc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c000:	mov	w2, #0x2                   	// #2
   1c004:	mov	w1, #0xc                   	// #12
   1c008:	ldr	w0, [sp, #52]
   1c00c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c010:	str	w0, [sp, #3772]
   1c014:	ldr	w0, [sp, #3772]
   1c018:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1c01c:	add	x2, sp, #0xa00
   1c020:	stp	x0, x1, [x2, #-248]
   1c024:	add	x0, sp, #0x908
   1c028:	mov	x1, x0
   1c02c:	ldr	x0, [sp, #40]
   1c030:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1c034:	ldr	w0, [sp, #60]
   1c038:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c03c:	mov	w2, #0x5                   	// #5
   1c040:	mov	w1, #0x0                   	// #0
   1c044:	ldr	w0, [sp, #52]
   1c048:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c04c:	str	w0, [sp, #3772]
   1c050:	ldr	x3, [sp, #24]
   1c054:	ldr	x2, [sp, #32]
   1c058:	ldr	w1, [sp, #3772]
   1c05c:	ldr	x0, [sp, #40]
   1c060:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1c064:	mov	w1, w0
   1c068:	add	x0, sp, #0x3c
   1c06c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c070:	and	w0, w0, #0xff
   1c074:	eor	w0, w0, #0x1
   1c078:	and	w0, w0, #0xff
   1c07c:	cmp	w0, #0x0
   1c080:	b.eq	1c08c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1711c>  // b.none
   1c084:	mov	w0, #0x0                   	// #0
   1c088:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c08c:	mov	w2, #0x5                   	// #5
   1c090:	mov	w1, #0x5                   	// #5
   1c094:	ldr	w0, [sp, #52]
   1c098:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c09c:	str	w0, [sp, #3772]
   1c0a0:	ldr	x3, [sp, #24]
   1c0a4:	ldr	x2, [sp, #32]
   1c0a8:	ldr	w1, [sp, #3772]
   1c0ac:	ldr	x0, [sp, #40]
   1c0b0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1c0b4:	mov	w1, w0
   1c0b8:	add	x0, sp, #0x3c
   1c0bc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c0c0:	and	w0, w0, #0xff
   1c0c4:	eor	w0, w0, #0x1
   1c0c8:	and	w0, w0, #0xff
   1c0cc:	cmp	w0, #0x0
   1c0d0:	b.eq	1c0dc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1716c>  // b.none
   1c0d4:	mov	w0, #0x0                   	// #0
   1c0d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c0dc:	mov	w2, #0x5                   	// #5
   1c0e0:	mov	w1, #0x10                  	// #16
   1c0e4:	ldr	w0, [sp, #52]
   1c0e8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c0ec:	str	w0, [sp, #3772]
   1c0f0:	ldr	x3, [sp, #24]
   1c0f4:	ldr	x2, [sp, #32]
   1c0f8:	ldr	w1, [sp, #3772]
   1c0fc:	ldr	x0, [sp, #40]
   1c100:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1c104:	mov	w1, w0
   1c108:	add	x0, sp, #0x3c
   1c10c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c110:	and	w0, w0, #0xff
   1c114:	eor	w0, w0, #0x1
   1c118:	and	w0, w0, #0xff
   1c11c:	cmp	w0, #0x0
   1c120:	b.eq	1c12c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x171bc>  // b.none
   1c124:	mov	w0, #0x0                   	// #0
   1c128:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c12c:	mov	w2, #0x6                   	// #6
   1c130:	mov	w1, #0xa                   	// #10
   1c134:	ldr	w0, [sp, #52]
   1c138:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c13c:	str	w0, [sp, #3772]
   1c140:	ldr	w0, [sp, #3772]
   1c144:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1c148:	add	x2, sp, #0xa00
   1c14c:	stp	x0, x1, [x2, #-232]
   1c150:	add	x0, sp, #0x918
   1c154:	mov	x1, x0
   1c158:	ldr	x0, [sp, #40]
   1c15c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1c160:	ldr	w0, [sp, #60]
   1c164:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c168:	mov	w2, #0x5                   	// #5
   1c16c:	mov	w1, #0x0                   	// #0
   1c170:	ldr	w0, [sp, #52]
   1c174:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c178:	str	w0, [sp, #3772]
   1c17c:	ldr	x3, [sp, #24]
   1c180:	ldr	x2, [sp, #32]
   1c184:	ldr	w1, [sp, #3772]
   1c188:	ldr	x0, [sp, #40]
   1c18c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1c190:	mov	w1, w0
   1c194:	add	x0, sp, #0x3c
   1c198:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c19c:	and	w0, w0, #0xff
   1c1a0:	eor	w0, w0, #0x1
   1c1a4:	and	w0, w0, #0xff
   1c1a8:	cmp	w0, #0x0
   1c1ac:	b.eq	1c1b8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17248>  // b.none
   1c1b0:	mov	w0, #0x0                   	// #0
   1c1b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c1b8:	mov	w2, #0x5                   	// #5
   1c1bc:	mov	w1, #0x5                   	// #5
   1c1c0:	ldr	w0, [sp, #52]
   1c1c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c1c8:	str	w0, [sp, #3772]
   1c1cc:	ldr	x3, [sp, #24]
   1c1d0:	ldr	x2, [sp, #32]
   1c1d4:	ldr	w1, [sp, #3772]
   1c1d8:	ldr	x0, [sp, #40]
   1c1dc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1c1e0:	mov	w1, w0
   1c1e4:	add	x0, sp, #0x3c
   1c1e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c1ec:	and	w0, w0, #0xff
   1c1f0:	eor	w0, w0, #0x1
   1c1f4:	and	w0, w0, #0xff
   1c1f8:	cmp	w0, #0x0
   1c1fc:	b.eq	1c208 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17298>  // b.none
   1c200:	mov	w0, #0x0                   	// #0
   1c204:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c208:	mov	w2, #0x5                   	// #5
   1c20c:	mov	w1, #0x0                   	// #0
   1c210:	ldr	w0, [sp, #52]
   1c214:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c218:	str	w0, [sp, #3772]
   1c21c:	ldr	x3, [sp, #24]
   1c220:	ldr	x2, [sp, #32]
   1c224:	ldr	w1, [sp, #3772]
   1c228:	ldr	x0, [sp, #40]
   1c22c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1c230:	mov	w1, w0
   1c234:	add	x0, sp, #0x3c
   1c238:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c23c:	and	w0, w0, #0xff
   1c240:	eor	w0, w0, #0x1
   1c244:	and	w0, w0, #0xff
   1c248:	cmp	w0, #0x0
   1c24c:	b.eq	1c258 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x172e8>  // b.none
   1c250:	mov	w0, #0x0                   	// #0
   1c254:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c258:	ldr	w0, [sp, #60]
   1c25c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c260:	mov	w2, #0x5                   	// #5
   1c264:	mov	w1, #0x0                   	// #0
   1c268:	ldr	w0, [sp, #52]
   1c26c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c270:	str	w0, [sp, #3772]
   1c274:	ldr	x3, [sp, #24]
   1c278:	ldr	x2, [sp, #32]
   1c27c:	ldr	w1, [sp, #3772]
   1c280:	ldr	x0, [sp, #40]
   1c284:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1c288:	mov	w1, w0
   1c28c:	add	x0, sp, #0x3c
   1c290:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c294:	and	w0, w0, #0xff
   1c298:	eor	w0, w0, #0x1
   1c29c:	and	w0, w0, #0xff
   1c2a0:	cmp	w0, #0x0
   1c2a4:	b.eq	1c2b0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17340>  // b.none
   1c2a8:	mov	w0, #0x0                   	// #0
   1c2ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c2b0:	mov	w2, #0x5                   	// #5
   1c2b4:	mov	w1, #0x0                   	// #0
   1c2b8:	ldr	w0, [sp, #52]
   1c2bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c2c0:	str	w0, [sp, #3772]
   1c2c4:	ldr	x3, [sp, #24]
   1c2c8:	ldr	x2, [sp, #32]
   1c2cc:	ldr	w1, [sp, #3772]
   1c2d0:	ldr	x0, [sp, #40]
   1c2d4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1c2d8:	mov	w1, w0
   1c2dc:	add	x0, sp, #0x3c
   1c2e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c2e4:	and	w0, w0, #0xff
   1c2e8:	eor	w0, w0, #0x1
   1c2ec:	and	w0, w0, #0xff
   1c2f0:	cmp	w0, #0x0
   1c2f4:	b.eq	1c300 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17390>  // b.none
   1c2f8:	mov	w0, #0x0                   	// #0
   1c2fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c300:	mov	w2, #0x5                   	// #5
   1c304:	mov	w1, #0x5                   	// #5
   1c308:	ldr	w0, [sp, #52]
   1c30c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c310:	str	w0, [sp, #3772]
   1c314:	ldr	x3, [sp, #24]
   1c318:	ldr	x2, [sp, #32]
   1c31c:	ldr	w1, [sp, #3772]
   1c320:	ldr	x0, [sp, #40]
   1c324:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1c328:	mov	w1, w0
   1c32c:	add	x0, sp, #0x3c
   1c330:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c334:	and	w0, w0, #0xff
   1c338:	eor	w0, w0, #0x1
   1c33c:	and	w0, w0, #0xff
   1c340:	cmp	w0, #0x0
   1c344:	b.eq	1c350 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x173e0>  // b.none
   1c348:	mov	w0, #0x0                   	// #0
   1c34c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c350:	mov	w2, #0x4                   	// #4
   1c354:	mov	w1, #0x10                  	// #16
   1c358:	ldr	w0, [sp, #52]
   1c35c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c360:	str	w0, [sp, #3772]
   1c364:	ldr	x3, [sp, #24]
   1c368:	ldr	x2, [sp, #32]
   1c36c:	ldr	w1, [sp, #3772]
   1c370:	ldr	x0, [sp, #40]
   1c374:	bl	8a8 <_ZL28DecodeFPR128_loRegisterClassRN4llvm6MCInstEjmPKv>
   1c378:	mov	w1, w0
   1c37c:	add	x0, sp, #0x3c
   1c380:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c384:	and	w0, w0, #0xff
   1c388:	eor	w0, w0, #0x1
   1c38c:	and	w0, w0, #0xff
   1c390:	cmp	w0, #0x0
   1c394:	b.eq	1c3a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17430>  // b.none
   1c398:	mov	w0, #0x0                   	// #0
   1c39c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c3a0:	str	wzr, [sp, #3772]
   1c3a4:	mov	w2, #0x1                   	// #1
   1c3a8:	mov	w1, #0xb                   	// #11
   1c3ac:	ldr	w0, [sp, #52]
   1c3b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c3b4:	lsl	w0, w0, #2
   1c3b8:	ldr	w1, [sp, #3772]
   1c3bc:	orr	w0, w1, w0
   1c3c0:	str	w0, [sp, #3772]
   1c3c4:	mov	w2, #0x2                   	// #2
   1c3c8:	mov	w1, #0x14                  	// #20
   1c3cc:	ldr	w0, [sp, #52]
   1c3d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c3d4:	mov	w1, w0
   1c3d8:	ldr	w0, [sp, #3772]
   1c3dc:	orr	w0, w0, w1
   1c3e0:	str	w0, [sp, #3772]
   1c3e4:	ldr	w0, [sp, #3772]
   1c3e8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1c3ec:	add	x2, sp, #0xa00
   1c3f0:	stp	x0, x1, [x2, #-216]
   1c3f4:	add	x0, sp, #0x928
   1c3f8:	mov	x1, x0
   1c3fc:	ldr	x0, [sp, #40]
   1c400:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1c404:	ldr	w0, [sp, #60]
   1c408:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c40c:	mov	w2, #0x5                   	// #5
   1c410:	mov	w1, #0x0                   	// #0
   1c414:	ldr	w0, [sp, #52]
   1c418:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c41c:	str	w0, [sp, #3772]
   1c420:	ldr	x3, [sp, #24]
   1c424:	ldr	x2, [sp, #32]
   1c428:	ldr	w1, [sp, #3772]
   1c42c:	ldr	x0, [sp, #40]
   1c430:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1c434:	mov	w1, w0
   1c438:	add	x0, sp, #0x3c
   1c43c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c440:	and	w0, w0, #0xff
   1c444:	eor	w0, w0, #0x1
   1c448:	and	w0, w0, #0xff
   1c44c:	cmp	w0, #0x0
   1c450:	b.eq	1c45c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x174ec>  // b.none
   1c454:	mov	w0, #0x0                   	// #0
   1c458:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c45c:	mov	w2, #0x5                   	// #5
   1c460:	mov	w1, #0x5                   	// #5
   1c464:	ldr	w0, [sp, #52]
   1c468:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c46c:	str	w0, [sp, #3772]
   1c470:	ldr	x3, [sp, #24]
   1c474:	ldr	x2, [sp, #32]
   1c478:	ldr	w1, [sp, #3772]
   1c47c:	ldr	x0, [sp, #40]
   1c480:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1c484:	mov	w1, w0
   1c488:	add	x0, sp, #0x3c
   1c48c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c490:	and	w0, w0, #0xff
   1c494:	eor	w0, w0, #0x1
   1c498:	and	w0, w0, #0xff
   1c49c:	cmp	w0, #0x0
   1c4a0:	b.eq	1c4ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1753c>  // b.none
   1c4a4:	mov	w0, #0x0                   	// #0
   1c4a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c4ac:	mov	w2, #0x4                   	// #4
   1c4b0:	mov	w1, #0x10                  	// #16
   1c4b4:	ldr	w0, [sp, #52]
   1c4b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c4bc:	str	w0, [sp, #3772]
   1c4c0:	ldr	x3, [sp, #24]
   1c4c4:	ldr	x2, [sp, #32]
   1c4c8:	ldr	w1, [sp, #3772]
   1c4cc:	ldr	x0, [sp, #40]
   1c4d0:	bl	8a8 <_ZL28DecodeFPR128_loRegisterClassRN4llvm6MCInstEjmPKv>
   1c4d4:	mov	w1, w0
   1c4d8:	add	x0, sp, #0x3c
   1c4dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c4e0:	and	w0, w0, #0xff
   1c4e4:	eor	w0, w0, #0x1
   1c4e8:	and	w0, w0, #0xff
   1c4ec:	cmp	w0, #0x0
   1c4f0:	b.eq	1c4fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1758c>  // b.none
   1c4f4:	mov	w0, #0x0                   	// #0
   1c4f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c4fc:	str	wzr, [sp, #3772]
   1c500:	mov	w2, #0x1                   	// #1
   1c504:	mov	w1, #0xb                   	// #11
   1c508:	ldr	w0, [sp, #52]
   1c50c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c510:	lsl	w0, w0, #2
   1c514:	ldr	w1, [sp, #3772]
   1c518:	orr	w0, w1, w0
   1c51c:	str	w0, [sp, #3772]
   1c520:	mov	w2, #0x2                   	// #2
   1c524:	mov	w1, #0x14                  	// #20
   1c528:	ldr	w0, [sp, #52]
   1c52c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c530:	mov	w1, w0
   1c534:	ldr	w0, [sp, #3772]
   1c538:	orr	w0, w0, w1
   1c53c:	str	w0, [sp, #3772]
   1c540:	ldr	w0, [sp, #3772]
   1c544:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1c548:	add	x2, sp, #0xa00
   1c54c:	stp	x0, x1, [x2, #-200]
   1c550:	add	x0, sp, #0x938
   1c554:	mov	x1, x0
   1c558:	ldr	x0, [sp, #40]
   1c55c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1c560:	ldr	w0, [sp, #60]
   1c564:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c568:	ldr	x3, [sp, #24]
   1c56c:	ldr	x2, [sp, #32]
   1c570:	ldr	w1, [sp, #52]
   1c574:	ldr	x0, [sp, #40]
   1c578:	bl	3354 <_ZL23DecodeModImmInstructionRN4llvm6MCInstEjmPKv>
   1c57c:	mov	w1, w0
   1c580:	add	x0, sp, #0x3c
   1c584:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c588:	and	w0, w0, #0xff
   1c58c:	eor	w0, w0, #0x1
   1c590:	and	w0, w0, #0xff
   1c594:	cmp	w0, #0x0
   1c598:	b.eq	1c5a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17634>  // b.none
   1c59c:	mov	w0, #0x0                   	// #0
   1c5a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c5a4:	ldr	w0, [sp, #60]
   1c5a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c5ac:	mov	w2, #0x5                   	// #5
   1c5b0:	mov	w1, #0x0                   	// #0
   1c5b4:	ldr	w0, [sp, #52]
   1c5b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c5bc:	str	w0, [sp, #3772]
   1c5c0:	ldr	x3, [sp, #24]
   1c5c4:	ldr	x2, [sp, #32]
   1c5c8:	ldr	w1, [sp, #3772]
   1c5cc:	ldr	x0, [sp, #40]
   1c5d0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1c5d4:	mov	w1, w0
   1c5d8:	add	x0, sp, #0x3c
   1c5dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c5e0:	and	w0, w0, #0xff
   1c5e4:	eor	w0, w0, #0x1
   1c5e8:	and	w0, w0, #0xff
   1c5ec:	cmp	w0, #0x0
   1c5f0:	b.eq	1c5fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1768c>  // b.none
   1c5f4:	mov	w0, #0x0                   	// #0
   1c5f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c5fc:	mov	w2, #0x5                   	// #5
   1c600:	mov	w1, #0x5                   	// #5
   1c604:	ldr	w0, [sp, #52]
   1c608:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c60c:	str	w0, [sp, #3772]
   1c610:	ldr	x3, [sp, #24]
   1c614:	ldr	x2, [sp, #32]
   1c618:	ldr	w1, [sp, #3772]
   1c61c:	ldr	x0, [sp, #40]
   1c620:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1c624:	mov	w1, w0
   1c628:	add	x0, sp, #0x3c
   1c62c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c630:	and	w0, w0, #0xff
   1c634:	eor	w0, w0, #0x1
   1c638:	and	w0, w0, #0xff
   1c63c:	cmp	w0, #0x0
   1c640:	b.eq	1c64c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x176dc>  // b.none
   1c644:	mov	w0, #0x0                   	// #0
   1c648:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c64c:	mov	w2, #0x3                   	// #3
   1c650:	mov	w1, #0x10                  	// #16
   1c654:	ldr	w0, [sp, #52]
   1c658:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c65c:	str	w0, [sp, #3772]
   1c660:	ldr	x3, [sp, #24]
   1c664:	ldr	x2, [sp, #32]
   1c668:	ldr	w1, [sp, #3772]
   1c66c:	ldr	x0, [sp, #40]
   1c670:	bl	1790 <_ZL19DecodeVecShiftR8ImmRN4llvm6MCInstEjmPKv>
   1c674:	mov	w1, w0
   1c678:	add	x0, sp, #0x3c
   1c67c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c680:	and	w0, w0, #0xff
   1c684:	eor	w0, w0, #0x1
   1c688:	and	w0, w0, #0xff
   1c68c:	cmp	w0, #0x0
   1c690:	b.eq	1c69c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1772c>  // b.none
   1c694:	mov	w0, #0x0                   	// #0
   1c698:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c69c:	ldr	w0, [sp, #60]
   1c6a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c6a4:	mov	w2, #0x5                   	// #5
   1c6a8:	mov	w1, #0x0                   	// #0
   1c6ac:	ldr	w0, [sp, #52]
   1c6b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c6b4:	str	w0, [sp, #3772]
   1c6b8:	ldr	x3, [sp, #24]
   1c6bc:	ldr	x2, [sp, #32]
   1c6c0:	ldr	w1, [sp, #3772]
   1c6c4:	ldr	x0, [sp, #40]
   1c6c8:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1c6cc:	mov	w1, w0
   1c6d0:	add	x0, sp, #0x3c
   1c6d4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c6d8:	and	w0, w0, #0xff
   1c6dc:	eor	w0, w0, #0x1
   1c6e0:	and	w0, w0, #0xff
   1c6e4:	cmp	w0, #0x0
   1c6e8:	b.eq	1c6f4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17784>  // b.none
   1c6ec:	mov	w0, #0x0                   	// #0
   1c6f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c6f4:	mov	w2, #0x5                   	// #5
   1c6f8:	mov	w1, #0x5                   	// #5
   1c6fc:	ldr	w0, [sp, #52]
   1c700:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c704:	str	w0, [sp, #3772]
   1c708:	ldr	x3, [sp, #24]
   1c70c:	ldr	x2, [sp, #32]
   1c710:	ldr	w1, [sp, #3772]
   1c714:	ldr	x0, [sp, #40]
   1c718:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1c71c:	mov	w1, w0
   1c720:	add	x0, sp, #0x3c
   1c724:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c728:	and	w0, w0, #0xff
   1c72c:	eor	w0, w0, #0x1
   1c730:	and	w0, w0, #0xff
   1c734:	cmp	w0, #0x0
   1c738:	b.eq	1c744 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x177d4>  // b.none
   1c73c:	mov	w0, #0x0                   	// #0
   1c740:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c744:	mov	w2, #0x4                   	// #4
   1c748:	mov	w1, #0x10                  	// #16
   1c74c:	ldr	w0, [sp, #52]
   1c750:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c754:	str	w0, [sp, #3772]
   1c758:	ldr	x3, [sp, #24]
   1c75c:	ldr	x2, [sp, #32]
   1c760:	ldr	w1, [sp, #3772]
   1c764:	ldr	x0, [sp, #40]
   1c768:	bl	1728 <_ZL20DecodeVecShiftR16ImmRN4llvm6MCInstEjmPKv>
   1c76c:	mov	w1, w0
   1c770:	add	x0, sp, #0x3c
   1c774:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c778:	and	w0, w0, #0xff
   1c77c:	eor	w0, w0, #0x1
   1c780:	and	w0, w0, #0xff
   1c784:	cmp	w0, #0x0
   1c788:	b.eq	1c794 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17824>  // b.none
   1c78c:	mov	w0, #0x0                   	// #0
   1c790:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c794:	ldr	w0, [sp, #60]
   1c798:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c79c:	mov	w2, #0x5                   	// #5
   1c7a0:	mov	w1, #0x0                   	// #0
   1c7a4:	ldr	w0, [sp, #52]
   1c7a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c7ac:	str	w0, [sp, #3772]
   1c7b0:	ldr	x3, [sp, #24]
   1c7b4:	ldr	x2, [sp, #32]
   1c7b8:	ldr	w1, [sp, #3772]
   1c7bc:	ldr	x0, [sp, #40]
   1c7c0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1c7c4:	mov	w1, w0
   1c7c8:	add	x0, sp, #0x3c
   1c7cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c7d0:	and	w0, w0, #0xff
   1c7d4:	eor	w0, w0, #0x1
   1c7d8:	and	w0, w0, #0xff
   1c7dc:	cmp	w0, #0x0
   1c7e0:	b.eq	1c7ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1787c>  // b.none
   1c7e4:	mov	w0, #0x0                   	// #0
   1c7e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c7ec:	mov	w2, #0x5                   	// #5
   1c7f0:	mov	w1, #0x5                   	// #5
   1c7f4:	ldr	w0, [sp, #52]
   1c7f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c7fc:	str	w0, [sp, #3772]
   1c800:	ldr	x3, [sp, #24]
   1c804:	ldr	x2, [sp, #32]
   1c808:	ldr	w1, [sp, #3772]
   1c80c:	ldr	x0, [sp, #40]
   1c810:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1c814:	mov	w1, w0
   1c818:	add	x0, sp, #0x3c
   1c81c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c820:	and	w0, w0, #0xff
   1c824:	eor	w0, w0, #0x1
   1c828:	and	w0, w0, #0xff
   1c82c:	cmp	w0, #0x0
   1c830:	b.eq	1c83c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x178cc>  // b.none
   1c834:	mov	w0, #0x0                   	// #0
   1c838:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c83c:	mov	w2, #0x5                   	// #5
   1c840:	mov	w1, #0x10                  	// #16
   1c844:	ldr	w0, [sp, #52]
   1c848:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c84c:	str	w0, [sp, #3772]
   1c850:	ldr	x3, [sp, #24]
   1c854:	ldr	x2, [sp, #32]
   1c858:	ldr	w1, [sp, #3772]
   1c85c:	ldr	x0, [sp, #40]
   1c860:	bl	16c0 <_ZL20DecodeVecShiftR32ImmRN4llvm6MCInstEjmPKv>
   1c864:	mov	w1, w0
   1c868:	add	x0, sp, #0x3c
   1c86c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c870:	and	w0, w0, #0xff
   1c874:	eor	w0, w0, #0x1
   1c878:	and	w0, w0, #0xff
   1c87c:	cmp	w0, #0x0
   1c880:	b.eq	1c88c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1791c>  // b.none
   1c884:	mov	w0, #0x0                   	// #0
   1c888:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c88c:	ldr	w0, [sp, #60]
   1c890:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c894:	ldr	x3, [sp, #24]
   1c898:	ldr	x2, [sp, #32]
   1c89c:	ldr	w1, [sp, #52]
   1c8a0:	ldr	x0, [sp, #40]
   1c8a4:	bl	3564 <_ZL27DecodeModImmTiedInstructionRN4llvm6MCInstEjmPKv>
   1c8a8:	mov	w1, w0
   1c8ac:	add	x0, sp, #0x3c
   1c8b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c8b4:	and	w0, w0, #0xff
   1c8b8:	eor	w0, w0, #0x1
   1c8bc:	and	w0, w0, #0xff
   1c8c0:	cmp	w0, #0x0
   1c8c4:	b.eq	1c8d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17960>  // b.none
   1c8c8:	mov	w0, #0x0                   	// #0
   1c8cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c8d0:	ldr	w0, [sp, #60]
   1c8d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c8d8:	mov	w2, #0x5                   	// #5
   1c8dc:	mov	w1, #0x0                   	// #0
   1c8e0:	ldr	w0, [sp, #52]
   1c8e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c8e8:	str	w0, [sp, #3772]
   1c8ec:	ldr	x3, [sp, #24]
   1c8f0:	ldr	x2, [sp, #32]
   1c8f4:	ldr	w1, [sp, #3772]
   1c8f8:	ldr	x0, [sp, #40]
   1c8fc:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1c900:	mov	w1, w0
   1c904:	add	x0, sp, #0x3c
   1c908:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c90c:	and	w0, w0, #0xff
   1c910:	eor	w0, w0, #0x1
   1c914:	and	w0, w0, #0xff
   1c918:	cmp	w0, #0x0
   1c91c:	b.eq	1c928 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x179b8>  // b.none
   1c920:	mov	w0, #0x0                   	// #0
   1c924:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c928:	mov	w2, #0x5                   	// #5
   1c92c:	mov	w1, #0x0                   	// #0
   1c930:	ldr	w0, [sp, #52]
   1c934:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c938:	str	w0, [sp, #3772]
   1c93c:	ldr	x3, [sp, #24]
   1c940:	ldr	x2, [sp, #32]
   1c944:	ldr	w1, [sp, #3772]
   1c948:	ldr	x0, [sp, #40]
   1c94c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1c950:	mov	w1, w0
   1c954:	add	x0, sp, #0x3c
   1c958:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c95c:	and	w0, w0, #0xff
   1c960:	eor	w0, w0, #0x1
   1c964:	and	w0, w0, #0xff
   1c968:	cmp	w0, #0x0
   1c96c:	b.eq	1c978 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17a08>  // b.none
   1c970:	mov	w0, #0x0                   	// #0
   1c974:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c978:	mov	w2, #0x5                   	// #5
   1c97c:	mov	w1, #0x5                   	// #5
   1c980:	ldr	w0, [sp, #52]
   1c984:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c988:	str	w0, [sp, #3772]
   1c98c:	ldr	x3, [sp, #24]
   1c990:	ldr	x2, [sp, #32]
   1c994:	ldr	w1, [sp, #3772]
   1c998:	ldr	x0, [sp, #40]
   1c99c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1c9a0:	mov	w1, w0
   1c9a4:	add	x0, sp, #0x3c
   1c9a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c9ac:	and	w0, w0, #0xff
   1c9b0:	eor	w0, w0, #0x1
   1c9b4:	and	w0, w0, #0xff
   1c9b8:	cmp	w0, #0x0
   1c9bc:	b.eq	1c9c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17a58>  // b.none
   1c9c0:	mov	w0, #0x0                   	// #0
   1c9c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1c9c8:	mov	w2, #0x3                   	// #3
   1c9cc:	mov	w1, #0x10                  	// #16
   1c9d0:	ldr	w0, [sp, #52]
   1c9d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1c9d8:	str	w0, [sp, #3772]
   1c9dc:	ldr	x3, [sp, #24]
   1c9e0:	ldr	x2, [sp, #32]
   1c9e4:	ldr	w1, [sp, #3772]
   1c9e8:	ldr	x0, [sp, #40]
   1c9ec:	bl	1790 <_ZL19DecodeVecShiftR8ImmRN4llvm6MCInstEjmPKv>
   1c9f0:	mov	w1, w0
   1c9f4:	add	x0, sp, #0x3c
   1c9f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1c9fc:	and	w0, w0, #0xff
   1ca00:	eor	w0, w0, #0x1
   1ca04:	and	w0, w0, #0xff
   1ca08:	cmp	w0, #0x0
   1ca0c:	b.eq	1ca18 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17aa8>  // b.none
   1ca10:	mov	w0, #0x0                   	// #0
   1ca14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ca18:	ldr	w0, [sp, #60]
   1ca1c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ca20:	mov	w2, #0x5                   	// #5
   1ca24:	mov	w1, #0x0                   	// #0
   1ca28:	ldr	w0, [sp, #52]
   1ca2c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ca30:	str	w0, [sp, #3772]
   1ca34:	ldr	x3, [sp, #24]
   1ca38:	ldr	x2, [sp, #32]
   1ca3c:	ldr	w1, [sp, #3772]
   1ca40:	ldr	x0, [sp, #40]
   1ca44:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1ca48:	mov	w1, w0
   1ca4c:	add	x0, sp, #0x3c
   1ca50:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ca54:	and	w0, w0, #0xff
   1ca58:	eor	w0, w0, #0x1
   1ca5c:	and	w0, w0, #0xff
   1ca60:	cmp	w0, #0x0
   1ca64:	b.eq	1ca70 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17b00>  // b.none
   1ca68:	mov	w0, #0x0                   	// #0
   1ca6c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ca70:	mov	w2, #0x5                   	// #5
   1ca74:	mov	w1, #0x5                   	// #5
   1ca78:	ldr	w0, [sp, #52]
   1ca7c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ca80:	str	w0, [sp, #3772]
   1ca84:	ldr	x3, [sp, #24]
   1ca88:	ldr	x2, [sp, #32]
   1ca8c:	ldr	w1, [sp, #3772]
   1ca90:	ldr	x0, [sp, #40]
   1ca94:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1ca98:	mov	w1, w0
   1ca9c:	add	x0, sp, #0x3c
   1caa0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1caa4:	and	w0, w0, #0xff
   1caa8:	eor	w0, w0, #0x1
   1caac:	and	w0, w0, #0xff
   1cab0:	cmp	w0, #0x0
   1cab4:	b.eq	1cac0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17b50>  // b.none
   1cab8:	mov	w0, #0x0                   	// #0
   1cabc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cac0:	mov	w2, #0x3                   	// #3
   1cac4:	mov	w1, #0x10                  	// #16
   1cac8:	ldr	w0, [sp, #52]
   1cacc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1cad0:	str	w0, [sp, #3772]
   1cad4:	ldr	x3, [sp, #24]
   1cad8:	ldr	x2, [sp, #32]
   1cadc:	ldr	w1, [sp, #3772]
   1cae0:	ldr	x0, [sp, #40]
   1cae4:	bl	1850 <_ZL19DecodeVecShiftL8ImmRN4llvm6MCInstEjmPKv>
   1cae8:	mov	w1, w0
   1caec:	add	x0, sp, #0x3c
   1caf0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1caf4:	and	w0, w0, #0xff
   1caf8:	eor	w0, w0, #0x1
   1cafc:	and	w0, w0, #0xff
   1cb00:	cmp	w0, #0x0
   1cb04:	b.eq	1cb10 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17ba0>  // b.none
   1cb08:	mov	w0, #0x0                   	// #0
   1cb0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cb10:	ldr	w0, [sp, #60]
   1cb14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cb18:	mov	w2, #0x5                   	// #5
   1cb1c:	mov	w1, #0x0                   	// #0
   1cb20:	ldr	w0, [sp, #52]
   1cb24:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1cb28:	str	w0, [sp, #3772]
   1cb2c:	ldr	x3, [sp, #24]
   1cb30:	ldr	x2, [sp, #32]
   1cb34:	ldr	w1, [sp, #3772]
   1cb38:	ldr	x0, [sp, #40]
   1cb3c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1cb40:	mov	w1, w0
   1cb44:	add	x0, sp, #0x3c
   1cb48:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1cb4c:	and	w0, w0, #0xff
   1cb50:	eor	w0, w0, #0x1
   1cb54:	and	w0, w0, #0xff
   1cb58:	cmp	w0, #0x0
   1cb5c:	b.eq	1cb68 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17bf8>  // b.none
   1cb60:	mov	w0, #0x0                   	// #0
   1cb64:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cb68:	mov	w2, #0x5                   	// #5
   1cb6c:	mov	w1, #0x0                   	// #0
   1cb70:	ldr	w0, [sp, #52]
   1cb74:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1cb78:	str	w0, [sp, #3772]
   1cb7c:	ldr	x3, [sp, #24]
   1cb80:	ldr	x2, [sp, #32]
   1cb84:	ldr	w1, [sp, #3772]
   1cb88:	ldr	x0, [sp, #40]
   1cb8c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1cb90:	mov	w1, w0
   1cb94:	add	x0, sp, #0x3c
   1cb98:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1cb9c:	and	w0, w0, #0xff
   1cba0:	eor	w0, w0, #0x1
   1cba4:	and	w0, w0, #0xff
   1cba8:	cmp	w0, #0x0
   1cbac:	b.eq	1cbb8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17c48>  // b.none
   1cbb0:	mov	w0, #0x0                   	// #0
   1cbb4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cbb8:	mov	w2, #0x5                   	// #5
   1cbbc:	mov	w1, #0x5                   	// #5
   1cbc0:	ldr	w0, [sp, #52]
   1cbc4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1cbc8:	str	w0, [sp, #3772]
   1cbcc:	ldr	x3, [sp, #24]
   1cbd0:	ldr	x2, [sp, #32]
   1cbd4:	ldr	w1, [sp, #3772]
   1cbd8:	ldr	x0, [sp, #40]
   1cbdc:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1cbe0:	mov	w1, w0
   1cbe4:	add	x0, sp, #0x3c
   1cbe8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1cbec:	and	w0, w0, #0xff
   1cbf0:	eor	w0, w0, #0x1
   1cbf4:	and	w0, w0, #0xff
   1cbf8:	cmp	w0, #0x0
   1cbfc:	b.eq	1cc08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17c98>  // b.none
   1cc00:	mov	w0, #0x0                   	// #0
   1cc04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cc08:	mov	w2, #0x4                   	// #4
   1cc0c:	mov	w1, #0x10                  	// #16
   1cc10:	ldr	w0, [sp, #52]
   1cc14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1cc18:	str	w0, [sp, #3772]
   1cc1c:	ldr	x3, [sp, #24]
   1cc20:	ldr	x2, [sp, #32]
   1cc24:	ldr	w1, [sp, #3772]
   1cc28:	ldr	x0, [sp, #40]
   1cc2c:	bl	1728 <_ZL20DecodeVecShiftR16ImmRN4llvm6MCInstEjmPKv>
   1cc30:	mov	w1, w0
   1cc34:	add	x0, sp, #0x3c
   1cc38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1cc3c:	and	w0, w0, #0xff
   1cc40:	eor	w0, w0, #0x1
   1cc44:	and	w0, w0, #0xff
   1cc48:	cmp	w0, #0x0
   1cc4c:	b.eq	1cc58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17ce8>  // b.none
   1cc50:	mov	w0, #0x0                   	// #0
   1cc54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cc58:	ldr	w0, [sp, #60]
   1cc5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cc60:	mov	w2, #0x5                   	// #5
   1cc64:	mov	w1, #0x0                   	// #0
   1cc68:	ldr	w0, [sp, #52]
   1cc6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1cc70:	str	w0, [sp, #3772]
   1cc74:	ldr	x3, [sp, #24]
   1cc78:	ldr	x2, [sp, #32]
   1cc7c:	ldr	w1, [sp, #3772]
   1cc80:	ldr	x0, [sp, #40]
   1cc84:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1cc88:	mov	w1, w0
   1cc8c:	add	x0, sp, #0x3c
   1cc90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1cc94:	and	w0, w0, #0xff
   1cc98:	eor	w0, w0, #0x1
   1cc9c:	and	w0, w0, #0xff
   1cca0:	cmp	w0, #0x0
   1cca4:	b.eq	1ccb0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17d40>  // b.none
   1cca8:	mov	w0, #0x0                   	// #0
   1ccac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ccb0:	mov	w2, #0x5                   	// #5
   1ccb4:	mov	w1, #0x5                   	// #5
   1ccb8:	ldr	w0, [sp, #52]
   1ccbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ccc0:	str	w0, [sp, #3772]
   1ccc4:	ldr	x3, [sp, #24]
   1ccc8:	ldr	x2, [sp, #32]
   1cccc:	ldr	w1, [sp, #3772]
   1ccd0:	ldr	x0, [sp, #40]
   1ccd4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1ccd8:	mov	w1, w0
   1ccdc:	add	x0, sp, #0x3c
   1cce0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1cce4:	and	w0, w0, #0xff
   1cce8:	eor	w0, w0, #0x1
   1ccec:	and	w0, w0, #0xff
   1ccf0:	cmp	w0, #0x0
   1ccf4:	b.eq	1cd00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17d90>  // b.none
   1ccf8:	mov	w0, #0x0                   	// #0
   1ccfc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cd00:	mov	w2, #0x4                   	// #4
   1cd04:	mov	w1, #0x10                  	// #16
   1cd08:	ldr	w0, [sp, #52]
   1cd0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1cd10:	str	w0, [sp, #3772]
   1cd14:	ldr	x3, [sp, #24]
   1cd18:	ldr	x2, [sp, #32]
   1cd1c:	ldr	w1, [sp, #3772]
   1cd20:	ldr	x0, [sp, #40]
   1cd24:	bl	1820 <_ZL20DecodeVecShiftL16ImmRN4llvm6MCInstEjmPKv>
   1cd28:	mov	w1, w0
   1cd2c:	add	x0, sp, #0x3c
   1cd30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1cd34:	and	w0, w0, #0xff
   1cd38:	eor	w0, w0, #0x1
   1cd3c:	and	w0, w0, #0xff
   1cd40:	cmp	w0, #0x0
   1cd44:	b.eq	1cd50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17de0>  // b.none
   1cd48:	mov	w0, #0x0                   	// #0
   1cd4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cd50:	ldr	w0, [sp, #60]
   1cd54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cd58:	mov	w2, #0x5                   	// #5
   1cd5c:	mov	w1, #0x0                   	// #0
   1cd60:	ldr	w0, [sp, #52]
   1cd64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1cd68:	str	w0, [sp, #3772]
   1cd6c:	ldr	x3, [sp, #24]
   1cd70:	ldr	x2, [sp, #32]
   1cd74:	ldr	w1, [sp, #3772]
   1cd78:	ldr	x0, [sp, #40]
   1cd7c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1cd80:	mov	w1, w0
   1cd84:	add	x0, sp, #0x3c
   1cd88:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1cd8c:	and	w0, w0, #0xff
   1cd90:	eor	w0, w0, #0x1
   1cd94:	and	w0, w0, #0xff
   1cd98:	cmp	w0, #0x0
   1cd9c:	b.eq	1cda8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17e38>  // b.none
   1cda0:	mov	w0, #0x0                   	// #0
   1cda4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cda8:	mov	w2, #0x5                   	// #5
   1cdac:	mov	w1, #0x0                   	// #0
   1cdb0:	ldr	w0, [sp, #52]
   1cdb4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1cdb8:	str	w0, [sp, #3772]
   1cdbc:	ldr	x3, [sp, #24]
   1cdc0:	ldr	x2, [sp, #32]
   1cdc4:	ldr	w1, [sp, #3772]
   1cdc8:	ldr	x0, [sp, #40]
   1cdcc:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1cdd0:	mov	w1, w0
   1cdd4:	add	x0, sp, #0x3c
   1cdd8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1cddc:	and	w0, w0, #0xff
   1cde0:	eor	w0, w0, #0x1
   1cde4:	and	w0, w0, #0xff
   1cde8:	cmp	w0, #0x0
   1cdec:	b.eq	1cdf8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17e88>  // b.none
   1cdf0:	mov	w0, #0x0                   	// #0
   1cdf4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cdf8:	mov	w2, #0x5                   	// #5
   1cdfc:	mov	w1, #0x5                   	// #5
   1ce00:	ldr	w0, [sp, #52]
   1ce04:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ce08:	str	w0, [sp, #3772]
   1ce0c:	ldr	x3, [sp, #24]
   1ce10:	ldr	x2, [sp, #32]
   1ce14:	ldr	w1, [sp, #3772]
   1ce18:	ldr	x0, [sp, #40]
   1ce1c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1ce20:	mov	w1, w0
   1ce24:	add	x0, sp, #0x3c
   1ce28:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ce2c:	and	w0, w0, #0xff
   1ce30:	eor	w0, w0, #0x1
   1ce34:	and	w0, w0, #0xff
   1ce38:	cmp	w0, #0x0
   1ce3c:	b.eq	1ce48 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17ed8>  // b.none
   1ce40:	mov	w0, #0x0                   	// #0
   1ce44:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ce48:	mov	w2, #0x5                   	// #5
   1ce4c:	mov	w1, #0x10                  	// #16
   1ce50:	ldr	w0, [sp, #52]
   1ce54:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ce58:	str	w0, [sp, #3772]
   1ce5c:	ldr	x3, [sp, #24]
   1ce60:	ldr	x2, [sp, #32]
   1ce64:	ldr	w1, [sp, #3772]
   1ce68:	ldr	x0, [sp, #40]
   1ce6c:	bl	16c0 <_ZL20DecodeVecShiftR32ImmRN4llvm6MCInstEjmPKv>
   1ce70:	mov	w1, w0
   1ce74:	add	x0, sp, #0x3c
   1ce78:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ce7c:	and	w0, w0, #0xff
   1ce80:	eor	w0, w0, #0x1
   1ce84:	and	w0, w0, #0xff
   1ce88:	cmp	w0, #0x0
   1ce8c:	b.eq	1ce98 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17f28>  // b.none
   1ce90:	mov	w0, #0x0                   	// #0
   1ce94:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ce98:	ldr	w0, [sp, #60]
   1ce9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cea0:	mov	w2, #0x5                   	// #5
   1cea4:	mov	w1, #0x0                   	// #0
   1cea8:	ldr	w0, [sp, #52]
   1ceac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ceb0:	str	w0, [sp, #3772]
   1ceb4:	ldr	x3, [sp, #24]
   1ceb8:	ldr	x2, [sp, #32]
   1cebc:	ldr	w1, [sp, #3772]
   1cec0:	ldr	x0, [sp, #40]
   1cec4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1cec8:	mov	w1, w0
   1cecc:	add	x0, sp, #0x3c
   1ced0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ced4:	and	w0, w0, #0xff
   1ced8:	eor	w0, w0, #0x1
   1cedc:	and	w0, w0, #0xff
   1cee0:	cmp	w0, #0x0
   1cee4:	b.eq	1cef0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17f80>  // b.none
   1cee8:	mov	w0, #0x0                   	// #0
   1ceec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cef0:	mov	w2, #0x5                   	// #5
   1cef4:	mov	w1, #0x5                   	// #5
   1cef8:	ldr	w0, [sp, #52]
   1cefc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1cf00:	str	w0, [sp, #3772]
   1cf04:	ldr	x3, [sp, #24]
   1cf08:	ldr	x2, [sp, #32]
   1cf0c:	ldr	w1, [sp, #3772]
   1cf10:	ldr	x0, [sp, #40]
   1cf14:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1cf18:	mov	w1, w0
   1cf1c:	add	x0, sp, #0x3c
   1cf20:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1cf24:	and	w0, w0, #0xff
   1cf28:	eor	w0, w0, #0x1
   1cf2c:	and	w0, w0, #0xff
   1cf30:	cmp	w0, #0x0
   1cf34:	b.eq	1cf40 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x17fd0>  // b.none
   1cf38:	mov	w0, #0x0                   	// #0
   1cf3c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cf40:	mov	w2, #0x5                   	// #5
   1cf44:	mov	w1, #0x10                  	// #16
   1cf48:	ldr	w0, [sp, #52]
   1cf4c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1cf50:	str	w0, [sp, #3772]
   1cf54:	ldr	x3, [sp, #24]
   1cf58:	ldr	x2, [sp, #32]
   1cf5c:	ldr	w1, [sp, #3772]
   1cf60:	ldr	x0, [sp, #40]
   1cf64:	bl	17f0 <_ZL20DecodeVecShiftL32ImmRN4llvm6MCInstEjmPKv>
   1cf68:	mov	w1, w0
   1cf6c:	add	x0, sp, #0x3c
   1cf70:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1cf74:	and	w0, w0, #0xff
   1cf78:	eor	w0, w0, #0x1
   1cf7c:	and	w0, w0, #0xff
   1cf80:	cmp	w0, #0x0
   1cf84:	b.eq	1cf90 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18020>  // b.none
   1cf88:	mov	w0, #0x0                   	// #0
   1cf8c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cf90:	ldr	w0, [sp, #60]
   1cf94:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cf98:	mov	w2, #0x5                   	// #5
   1cf9c:	mov	w1, #0x0                   	// #0
   1cfa0:	ldr	w0, [sp, #52]
   1cfa4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1cfa8:	str	w0, [sp, #3772]
   1cfac:	ldr	x3, [sp, #24]
   1cfb0:	ldr	x2, [sp, #32]
   1cfb4:	ldr	w1, [sp, #3772]
   1cfb8:	ldr	x0, [sp, #40]
   1cfbc:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1cfc0:	mov	w1, w0
   1cfc4:	add	x0, sp, #0x3c
   1cfc8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1cfcc:	and	w0, w0, #0xff
   1cfd0:	eor	w0, w0, #0x1
   1cfd4:	and	w0, w0, #0xff
   1cfd8:	cmp	w0, #0x0
   1cfdc:	b.eq	1cfe8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18078>  // b.none
   1cfe0:	mov	w0, #0x0                   	// #0
   1cfe4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1cfe8:	mov	w2, #0x5                   	// #5
   1cfec:	mov	w1, #0x5                   	// #5
   1cff0:	ldr	w0, [sp, #52]
   1cff4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1cff8:	str	w0, [sp, #3772]
   1cffc:	ldr	x3, [sp, #24]
   1d000:	ldr	x2, [sp, #32]
   1d004:	ldr	w1, [sp, #3772]
   1d008:	ldr	x0, [sp, #40]
   1d00c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1d010:	mov	w1, w0
   1d014:	add	x0, sp, #0x3c
   1d018:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d01c:	and	w0, w0, #0xff
   1d020:	eor	w0, w0, #0x1
   1d024:	and	w0, w0, #0xff
   1d028:	cmp	w0, #0x0
   1d02c:	b.eq	1d038 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x180c8>  // b.none
   1d030:	mov	w0, #0x0                   	// #0
   1d034:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d038:	mov	w2, #0x3                   	// #3
   1d03c:	mov	w1, #0x10                  	// #16
   1d040:	ldr	w0, [sp, #52]
   1d044:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d048:	str	w0, [sp, #3772]
   1d04c:	ldr	x3, [sp, #24]
   1d050:	ldr	x2, [sp, #32]
   1d054:	ldr	w1, [sp, #3772]
   1d058:	ldr	x0, [sp, #40]
   1d05c:	bl	1758 <_ZL26DecodeVecShiftR16ImmNarrowRN4llvm6MCInstEjmPKv>
   1d060:	mov	w1, w0
   1d064:	add	x0, sp, #0x3c
   1d068:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d06c:	and	w0, w0, #0xff
   1d070:	eor	w0, w0, #0x1
   1d074:	and	w0, w0, #0xff
   1d078:	cmp	w0, #0x0
   1d07c:	b.eq	1d088 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18118>  // b.none
   1d080:	mov	w0, #0x0                   	// #0
   1d084:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d088:	ldr	w0, [sp, #60]
   1d08c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d090:	mov	w2, #0x5                   	// #5
   1d094:	mov	w1, #0x0                   	// #0
   1d098:	ldr	w0, [sp, #52]
   1d09c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d0a0:	str	w0, [sp, #3772]
   1d0a4:	ldr	x3, [sp, #24]
   1d0a8:	ldr	x2, [sp, #32]
   1d0ac:	ldr	w1, [sp, #3772]
   1d0b0:	ldr	x0, [sp, #40]
   1d0b4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1d0b8:	mov	w1, w0
   1d0bc:	add	x0, sp, #0x3c
   1d0c0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d0c4:	and	w0, w0, #0xff
   1d0c8:	eor	w0, w0, #0x1
   1d0cc:	and	w0, w0, #0xff
   1d0d0:	cmp	w0, #0x0
   1d0d4:	b.eq	1d0e0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18170>  // b.none
   1d0d8:	mov	w0, #0x0                   	// #0
   1d0dc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d0e0:	mov	w2, #0x5                   	// #5
   1d0e4:	mov	w1, #0x5                   	// #5
   1d0e8:	ldr	w0, [sp, #52]
   1d0ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d0f0:	str	w0, [sp, #3772]
   1d0f4:	ldr	x3, [sp, #24]
   1d0f8:	ldr	x2, [sp, #32]
   1d0fc:	ldr	w1, [sp, #3772]
   1d100:	ldr	x0, [sp, #40]
   1d104:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1d108:	mov	w1, w0
   1d10c:	add	x0, sp, #0x3c
   1d110:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d114:	and	w0, w0, #0xff
   1d118:	eor	w0, w0, #0x1
   1d11c:	and	w0, w0, #0xff
   1d120:	cmp	w0, #0x0
   1d124:	b.eq	1d130 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x181c0>  // b.none
   1d128:	mov	w0, #0x0                   	// #0
   1d12c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d130:	mov	w2, #0x3                   	// #3
   1d134:	mov	w1, #0x10                  	// #16
   1d138:	ldr	w0, [sp, #52]
   1d13c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d140:	str	w0, [sp, #3772]
   1d144:	ldr	x3, [sp, #24]
   1d148:	ldr	x2, [sp, #32]
   1d14c:	ldr	w1, [sp, #3772]
   1d150:	ldr	x0, [sp, #40]
   1d154:	bl	1850 <_ZL19DecodeVecShiftL8ImmRN4llvm6MCInstEjmPKv>
   1d158:	mov	w1, w0
   1d15c:	add	x0, sp, #0x3c
   1d160:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d164:	and	w0, w0, #0xff
   1d168:	eor	w0, w0, #0x1
   1d16c:	and	w0, w0, #0xff
   1d170:	cmp	w0, #0x0
   1d174:	b.eq	1d180 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18210>  // b.none
   1d178:	mov	w0, #0x0                   	// #0
   1d17c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d180:	ldr	w0, [sp, #60]
   1d184:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d188:	mov	w2, #0x5                   	// #5
   1d18c:	mov	w1, #0x0                   	// #0
   1d190:	ldr	w0, [sp, #52]
   1d194:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d198:	str	w0, [sp, #3772]
   1d19c:	ldr	x3, [sp, #24]
   1d1a0:	ldr	x2, [sp, #32]
   1d1a4:	ldr	w1, [sp, #3772]
   1d1a8:	ldr	x0, [sp, #40]
   1d1ac:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1d1b0:	mov	w1, w0
   1d1b4:	add	x0, sp, #0x3c
   1d1b8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d1bc:	and	w0, w0, #0xff
   1d1c0:	eor	w0, w0, #0x1
   1d1c4:	and	w0, w0, #0xff
   1d1c8:	cmp	w0, #0x0
   1d1cc:	b.eq	1d1d8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18268>  // b.none
   1d1d0:	mov	w0, #0x0                   	// #0
   1d1d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d1d8:	mov	w2, #0x5                   	// #5
   1d1dc:	mov	w1, #0x5                   	// #5
   1d1e0:	ldr	w0, [sp, #52]
   1d1e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d1e8:	str	w0, [sp, #3772]
   1d1ec:	ldr	x3, [sp, #24]
   1d1f0:	ldr	x2, [sp, #32]
   1d1f4:	ldr	w1, [sp, #3772]
   1d1f8:	ldr	x0, [sp, #40]
   1d1fc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1d200:	mov	w1, w0
   1d204:	add	x0, sp, #0x3c
   1d208:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d20c:	and	w0, w0, #0xff
   1d210:	eor	w0, w0, #0x1
   1d214:	and	w0, w0, #0xff
   1d218:	cmp	w0, #0x0
   1d21c:	b.eq	1d228 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x182b8>  // b.none
   1d220:	mov	w0, #0x0                   	// #0
   1d224:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d228:	mov	w2, #0x4                   	// #4
   1d22c:	mov	w1, #0x10                  	// #16
   1d230:	ldr	w0, [sp, #52]
   1d234:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d238:	str	w0, [sp, #3772]
   1d23c:	ldr	x3, [sp, #24]
   1d240:	ldr	x2, [sp, #32]
   1d244:	ldr	w1, [sp, #3772]
   1d248:	ldr	x0, [sp, #40]
   1d24c:	bl	16f0 <_ZL26DecodeVecShiftR32ImmNarrowRN4llvm6MCInstEjmPKv>
   1d250:	mov	w1, w0
   1d254:	add	x0, sp, #0x3c
   1d258:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d25c:	and	w0, w0, #0xff
   1d260:	eor	w0, w0, #0x1
   1d264:	and	w0, w0, #0xff
   1d268:	cmp	w0, #0x0
   1d26c:	b.eq	1d278 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18308>  // b.none
   1d270:	mov	w0, #0x0                   	// #0
   1d274:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d278:	ldr	w0, [sp, #60]
   1d27c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d280:	mov	w2, #0x5                   	// #5
   1d284:	mov	w1, #0x0                   	// #0
   1d288:	ldr	w0, [sp, #52]
   1d28c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d290:	str	w0, [sp, #3772]
   1d294:	ldr	x3, [sp, #24]
   1d298:	ldr	x2, [sp, #32]
   1d29c:	ldr	w1, [sp, #3772]
   1d2a0:	ldr	x0, [sp, #40]
   1d2a4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1d2a8:	mov	w1, w0
   1d2ac:	add	x0, sp, #0x3c
   1d2b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d2b4:	and	w0, w0, #0xff
   1d2b8:	eor	w0, w0, #0x1
   1d2bc:	and	w0, w0, #0xff
   1d2c0:	cmp	w0, #0x0
   1d2c4:	b.eq	1d2d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18360>  // b.none
   1d2c8:	mov	w0, #0x0                   	// #0
   1d2cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d2d0:	mov	w2, #0x5                   	// #5
   1d2d4:	mov	w1, #0x5                   	// #5
   1d2d8:	ldr	w0, [sp, #52]
   1d2dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d2e0:	str	w0, [sp, #3772]
   1d2e4:	ldr	x3, [sp, #24]
   1d2e8:	ldr	x2, [sp, #32]
   1d2ec:	ldr	w1, [sp, #3772]
   1d2f0:	ldr	x0, [sp, #40]
   1d2f4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1d2f8:	mov	w1, w0
   1d2fc:	add	x0, sp, #0x3c
   1d300:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d304:	and	w0, w0, #0xff
   1d308:	eor	w0, w0, #0x1
   1d30c:	and	w0, w0, #0xff
   1d310:	cmp	w0, #0x0
   1d314:	b.eq	1d320 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x183b0>  // b.none
   1d318:	mov	w0, #0x0                   	// #0
   1d31c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d320:	mov	w2, #0x4                   	// #4
   1d324:	mov	w1, #0x10                  	// #16
   1d328:	ldr	w0, [sp, #52]
   1d32c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d330:	str	w0, [sp, #3772]
   1d334:	ldr	x3, [sp, #24]
   1d338:	ldr	x2, [sp, #32]
   1d33c:	ldr	w1, [sp, #3772]
   1d340:	ldr	x0, [sp, #40]
   1d344:	bl	1820 <_ZL20DecodeVecShiftL16ImmRN4llvm6MCInstEjmPKv>
   1d348:	mov	w1, w0
   1d34c:	add	x0, sp, #0x3c
   1d350:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d354:	and	w0, w0, #0xff
   1d358:	eor	w0, w0, #0x1
   1d35c:	and	w0, w0, #0xff
   1d360:	cmp	w0, #0x0
   1d364:	b.eq	1d370 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18400>  // b.none
   1d368:	mov	w0, #0x0                   	// #0
   1d36c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d370:	ldr	w0, [sp, #60]
   1d374:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d378:	mov	w2, #0x5                   	// #5
   1d37c:	mov	w1, #0x0                   	// #0
   1d380:	ldr	w0, [sp, #52]
   1d384:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d388:	str	w0, [sp, #3772]
   1d38c:	ldr	x3, [sp, #24]
   1d390:	ldr	x2, [sp, #32]
   1d394:	ldr	w1, [sp, #3772]
   1d398:	ldr	x0, [sp, #40]
   1d39c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1d3a0:	mov	w1, w0
   1d3a4:	add	x0, sp, #0x3c
   1d3a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d3ac:	and	w0, w0, #0xff
   1d3b0:	eor	w0, w0, #0x1
   1d3b4:	and	w0, w0, #0xff
   1d3b8:	cmp	w0, #0x0
   1d3bc:	b.eq	1d3c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18458>  // b.none
   1d3c0:	mov	w0, #0x0                   	// #0
   1d3c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d3c8:	mov	w2, #0x5                   	// #5
   1d3cc:	mov	w1, #0x5                   	// #5
   1d3d0:	ldr	w0, [sp, #52]
   1d3d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d3d8:	str	w0, [sp, #3772]
   1d3dc:	ldr	x3, [sp, #24]
   1d3e0:	ldr	x2, [sp, #32]
   1d3e4:	ldr	w1, [sp, #3772]
   1d3e8:	ldr	x0, [sp, #40]
   1d3ec:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1d3f0:	mov	w1, w0
   1d3f4:	add	x0, sp, #0x3c
   1d3f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d3fc:	and	w0, w0, #0xff
   1d400:	eor	w0, w0, #0x1
   1d404:	and	w0, w0, #0xff
   1d408:	cmp	w0, #0x0
   1d40c:	b.eq	1d418 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x184a8>  // b.none
   1d410:	mov	w0, #0x0                   	// #0
   1d414:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d418:	mov	w2, #0x5                   	// #5
   1d41c:	mov	w1, #0x10                  	// #16
   1d420:	ldr	w0, [sp, #52]
   1d424:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d428:	str	w0, [sp, #3772]
   1d42c:	ldr	x3, [sp, #24]
   1d430:	ldr	x2, [sp, #32]
   1d434:	ldr	w1, [sp, #3772]
   1d438:	ldr	x0, [sp, #40]
   1d43c:	bl	1688 <_ZL26DecodeVecShiftR64ImmNarrowRN4llvm6MCInstEjmPKv>
   1d440:	mov	w1, w0
   1d444:	add	x0, sp, #0x3c
   1d448:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d44c:	and	w0, w0, #0xff
   1d450:	eor	w0, w0, #0x1
   1d454:	and	w0, w0, #0xff
   1d458:	cmp	w0, #0x0
   1d45c:	b.eq	1d468 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x184f8>  // b.none
   1d460:	mov	w0, #0x0                   	// #0
   1d464:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d468:	ldr	w0, [sp, #60]
   1d46c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d470:	mov	w2, #0x5                   	// #5
   1d474:	mov	w1, #0x0                   	// #0
   1d478:	ldr	w0, [sp, #52]
   1d47c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d480:	str	w0, [sp, #3772]
   1d484:	ldr	x3, [sp, #24]
   1d488:	ldr	x2, [sp, #32]
   1d48c:	ldr	w1, [sp, #3772]
   1d490:	ldr	x0, [sp, #40]
   1d494:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1d498:	mov	w1, w0
   1d49c:	add	x0, sp, #0x3c
   1d4a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d4a4:	and	w0, w0, #0xff
   1d4a8:	eor	w0, w0, #0x1
   1d4ac:	and	w0, w0, #0xff
   1d4b0:	cmp	w0, #0x0
   1d4b4:	b.eq	1d4c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18550>  // b.none
   1d4b8:	mov	w0, #0x0                   	// #0
   1d4bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d4c0:	mov	w2, #0x5                   	// #5
   1d4c4:	mov	w1, #0x5                   	// #5
   1d4c8:	ldr	w0, [sp, #52]
   1d4cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d4d0:	str	w0, [sp, #3772]
   1d4d4:	ldr	x3, [sp, #24]
   1d4d8:	ldr	x2, [sp, #32]
   1d4dc:	ldr	w1, [sp, #3772]
   1d4e0:	ldr	x0, [sp, #40]
   1d4e4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1d4e8:	mov	w1, w0
   1d4ec:	add	x0, sp, #0x3c
   1d4f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d4f4:	and	w0, w0, #0xff
   1d4f8:	eor	w0, w0, #0x1
   1d4fc:	and	w0, w0, #0xff
   1d500:	cmp	w0, #0x0
   1d504:	b.eq	1d510 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x185a0>  // b.none
   1d508:	mov	w0, #0x0                   	// #0
   1d50c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d510:	mov	w2, #0x5                   	// #5
   1d514:	mov	w1, #0x10                  	// #16
   1d518:	ldr	w0, [sp, #52]
   1d51c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d520:	str	w0, [sp, #3772]
   1d524:	ldr	x3, [sp, #24]
   1d528:	ldr	x2, [sp, #32]
   1d52c:	ldr	w1, [sp, #3772]
   1d530:	ldr	x0, [sp, #40]
   1d534:	bl	17f0 <_ZL20DecodeVecShiftL32ImmRN4llvm6MCInstEjmPKv>
   1d538:	mov	w1, w0
   1d53c:	add	x0, sp, #0x3c
   1d540:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d544:	and	w0, w0, #0xff
   1d548:	eor	w0, w0, #0x1
   1d54c:	and	w0, w0, #0xff
   1d550:	cmp	w0, #0x0
   1d554:	b.eq	1d560 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x185f0>  // b.none
   1d558:	mov	w0, #0x0                   	// #0
   1d55c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d560:	ldr	w0, [sp, #60]
   1d564:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d568:	mov	w2, #0x5                   	// #5
   1d56c:	mov	w1, #0x0                   	// #0
   1d570:	ldr	w0, [sp, #52]
   1d574:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d578:	str	w0, [sp, #3772]
   1d57c:	ldr	x3, [sp, #24]
   1d580:	ldr	x2, [sp, #32]
   1d584:	ldr	w1, [sp, #3772]
   1d588:	ldr	x0, [sp, #40]
   1d58c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1d590:	mov	w1, w0
   1d594:	add	x0, sp, #0x3c
   1d598:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d59c:	and	w0, w0, #0xff
   1d5a0:	eor	w0, w0, #0x1
   1d5a4:	and	w0, w0, #0xff
   1d5a8:	cmp	w0, #0x0
   1d5ac:	b.eq	1d5b8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18648>  // b.none
   1d5b0:	mov	w0, #0x0                   	// #0
   1d5b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d5b8:	mov	w2, #0x5                   	// #5
   1d5bc:	mov	w1, #0x0                   	// #0
   1d5c0:	ldr	w0, [sp, #52]
   1d5c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d5c8:	str	w0, [sp, #3772]
   1d5cc:	ldr	x3, [sp, #24]
   1d5d0:	ldr	x2, [sp, #32]
   1d5d4:	ldr	w1, [sp, #3772]
   1d5d8:	ldr	x0, [sp, #40]
   1d5dc:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1d5e0:	mov	w1, w0
   1d5e4:	add	x0, sp, #0x3c
   1d5e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d5ec:	and	w0, w0, #0xff
   1d5f0:	eor	w0, w0, #0x1
   1d5f4:	and	w0, w0, #0xff
   1d5f8:	cmp	w0, #0x0
   1d5fc:	b.eq	1d608 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18698>  // b.none
   1d600:	mov	w0, #0x0                   	// #0
   1d604:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d608:	mov	w2, #0x5                   	// #5
   1d60c:	mov	w1, #0x5                   	// #5
   1d610:	ldr	w0, [sp, #52]
   1d614:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d618:	str	w0, [sp, #3772]
   1d61c:	ldr	x3, [sp, #24]
   1d620:	ldr	x2, [sp, #32]
   1d624:	ldr	w1, [sp, #3772]
   1d628:	ldr	x0, [sp, #40]
   1d62c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1d630:	mov	w1, w0
   1d634:	add	x0, sp, #0x3c
   1d638:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d63c:	and	w0, w0, #0xff
   1d640:	eor	w0, w0, #0x1
   1d644:	and	w0, w0, #0xff
   1d648:	cmp	w0, #0x0
   1d64c:	b.eq	1d658 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x186e8>  // b.none
   1d650:	mov	w0, #0x0                   	// #0
   1d654:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d658:	mov	w2, #0x3                   	// #3
   1d65c:	mov	w1, #0x10                  	// #16
   1d660:	ldr	w0, [sp, #52]
   1d664:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d668:	str	w0, [sp, #3772]
   1d66c:	ldr	x3, [sp, #24]
   1d670:	ldr	x2, [sp, #32]
   1d674:	ldr	w1, [sp, #3772]
   1d678:	ldr	x0, [sp, #40]
   1d67c:	bl	1850 <_ZL19DecodeVecShiftL8ImmRN4llvm6MCInstEjmPKv>
   1d680:	mov	w1, w0
   1d684:	add	x0, sp, #0x3c
   1d688:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d68c:	and	w0, w0, #0xff
   1d690:	eor	w0, w0, #0x1
   1d694:	and	w0, w0, #0xff
   1d698:	cmp	w0, #0x0
   1d69c:	b.eq	1d6a8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18738>  // b.none
   1d6a0:	mov	w0, #0x0                   	// #0
   1d6a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d6a8:	ldr	w0, [sp, #60]
   1d6ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d6b0:	mov	w2, #0x5                   	// #5
   1d6b4:	mov	w1, #0x0                   	// #0
   1d6b8:	ldr	w0, [sp, #52]
   1d6bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d6c0:	str	w0, [sp, #3772]
   1d6c4:	ldr	x3, [sp, #24]
   1d6c8:	ldr	x2, [sp, #32]
   1d6cc:	ldr	w1, [sp, #3772]
   1d6d0:	ldr	x0, [sp, #40]
   1d6d4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1d6d8:	mov	w1, w0
   1d6dc:	add	x0, sp, #0x3c
   1d6e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d6e4:	and	w0, w0, #0xff
   1d6e8:	eor	w0, w0, #0x1
   1d6ec:	and	w0, w0, #0xff
   1d6f0:	cmp	w0, #0x0
   1d6f4:	b.eq	1d700 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18790>  // b.none
   1d6f8:	mov	w0, #0x0                   	// #0
   1d6fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d700:	mov	w2, #0x5                   	// #5
   1d704:	mov	w1, #0x0                   	// #0
   1d708:	ldr	w0, [sp, #52]
   1d70c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d710:	str	w0, [sp, #3772]
   1d714:	ldr	x3, [sp, #24]
   1d718:	ldr	x2, [sp, #32]
   1d71c:	ldr	w1, [sp, #3772]
   1d720:	ldr	x0, [sp, #40]
   1d724:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1d728:	mov	w1, w0
   1d72c:	add	x0, sp, #0x3c
   1d730:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d734:	and	w0, w0, #0xff
   1d738:	eor	w0, w0, #0x1
   1d73c:	and	w0, w0, #0xff
   1d740:	cmp	w0, #0x0
   1d744:	b.eq	1d750 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x187e0>  // b.none
   1d748:	mov	w0, #0x0                   	// #0
   1d74c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d750:	mov	w2, #0x5                   	// #5
   1d754:	mov	w1, #0x5                   	// #5
   1d758:	ldr	w0, [sp, #52]
   1d75c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d760:	str	w0, [sp, #3772]
   1d764:	ldr	x3, [sp, #24]
   1d768:	ldr	x2, [sp, #32]
   1d76c:	ldr	w1, [sp, #3772]
   1d770:	ldr	x0, [sp, #40]
   1d774:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1d778:	mov	w1, w0
   1d77c:	add	x0, sp, #0x3c
   1d780:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d784:	and	w0, w0, #0xff
   1d788:	eor	w0, w0, #0x1
   1d78c:	and	w0, w0, #0xff
   1d790:	cmp	w0, #0x0
   1d794:	b.eq	1d7a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18830>  // b.none
   1d798:	mov	w0, #0x0                   	// #0
   1d79c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d7a0:	mov	w2, #0x4                   	// #4
   1d7a4:	mov	w1, #0x10                  	// #16
   1d7a8:	ldr	w0, [sp, #52]
   1d7ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d7b0:	str	w0, [sp, #3772]
   1d7b4:	ldr	x3, [sp, #24]
   1d7b8:	ldr	x2, [sp, #32]
   1d7bc:	ldr	w1, [sp, #3772]
   1d7c0:	ldr	x0, [sp, #40]
   1d7c4:	bl	1820 <_ZL20DecodeVecShiftL16ImmRN4llvm6MCInstEjmPKv>
   1d7c8:	mov	w1, w0
   1d7cc:	add	x0, sp, #0x3c
   1d7d0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d7d4:	and	w0, w0, #0xff
   1d7d8:	eor	w0, w0, #0x1
   1d7dc:	and	w0, w0, #0xff
   1d7e0:	cmp	w0, #0x0
   1d7e4:	b.eq	1d7f0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18880>  // b.none
   1d7e8:	mov	w0, #0x0                   	// #0
   1d7ec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d7f0:	ldr	w0, [sp, #60]
   1d7f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d7f8:	mov	w2, #0x5                   	// #5
   1d7fc:	mov	w1, #0x0                   	// #0
   1d800:	ldr	w0, [sp, #52]
   1d804:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d808:	str	w0, [sp, #3772]
   1d80c:	ldr	x3, [sp, #24]
   1d810:	ldr	x2, [sp, #32]
   1d814:	ldr	w1, [sp, #3772]
   1d818:	ldr	x0, [sp, #40]
   1d81c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1d820:	mov	w1, w0
   1d824:	add	x0, sp, #0x3c
   1d828:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d82c:	and	w0, w0, #0xff
   1d830:	eor	w0, w0, #0x1
   1d834:	and	w0, w0, #0xff
   1d838:	cmp	w0, #0x0
   1d83c:	b.eq	1d848 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x188d8>  // b.none
   1d840:	mov	w0, #0x0                   	// #0
   1d844:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d848:	mov	w2, #0x5                   	// #5
   1d84c:	mov	w1, #0x0                   	// #0
   1d850:	ldr	w0, [sp, #52]
   1d854:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d858:	str	w0, [sp, #3772]
   1d85c:	ldr	x3, [sp, #24]
   1d860:	ldr	x2, [sp, #32]
   1d864:	ldr	w1, [sp, #3772]
   1d868:	ldr	x0, [sp, #40]
   1d86c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1d870:	mov	w1, w0
   1d874:	add	x0, sp, #0x3c
   1d878:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d87c:	and	w0, w0, #0xff
   1d880:	eor	w0, w0, #0x1
   1d884:	and	w0, w0, #0xff
   1d888:	cmp	w0, #0x0
   1d88c:	b.eq	1d898 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18928>  // b.none
   1d890:	mov	w0, #0x0                   	// #0
   1d894:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d898:	mov	w2, #0x5                   	// #5
   1d89c:	mov	w1, #0x5                   	// #5
   1d8a0:	ldr	w0, [sp, #52]
   1d8a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d8a8:	str	w0, [sp, #3772]
   1d8ac:	ldr	x3, [sp, #24]
   1d8b0:	ldr	x2, [sp, #32]
   1d8b4:	ldr	w1, [sp, #3772]
   1d8b8:	ldr	x0, [sp, #40]
   1d8bc:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1d8c0:	mov	w1, w0
   1d8c4:	add	x0, sp, #0x3c
   1d8c8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d8cc:	and	w0, w0, #0xff
   1d8d0:	eor	w0, w0, #0x1
   1d8d4:	and	w0, w0, #0xff
   1d8d8:	cmp	w0, #0x0
   1d8dc:	b.eq	1d8e8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18978>  // b.none
   1d8e0:	mov	w0, #0x0                   	// #0
   1d8e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d8e8:	mov	w2, #0x5                   	// #5
   1d8ec:	mov	w1, #0x10                  	// #16
   1d8f0:	ldr	w0, [sp, #52]
   1d8f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d8f8:	str	w0, [sp, #3772]
   1d8fc:	ldr	x3, [sp, #24]
   1d900:	ldr	x2, [sp, #32]
   1d904:	ldr	w1, [sp, #3772]
   1d908:	ldr	x0, [sp, #40]
   1d90c:	bl	17f0 <_ZL20DecodeVecShiftL32ImmRN4llvm6MCInstEjmPKv>
   1d910:	mov	w1, w0
   1d914:	add	x0, sp, #0x3c
   1d918:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d91c:	and	w0, w0, #0xff
   1d920:	eor	w0, w0, #0x1
   1d924:	and	w0, w0, #0xff
   1d928:	cmp	w0, #0x0
   1d92c:	b.eq	1d938 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x189c8>  // b.none
   1d930:	mov	w0, #0x0                   	// #0
   1d934:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d938:	ldr	w0, [sp, #60]
   1d93c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d940:	mov	w2, #0x5                   	// #5
   1d944:	mov	w1, #0x0                   	// #0
   1d948:	ldr	w0, [sp, #52]
   1d94c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d950:	str	w0, [sp, #3772]
   1d954:	ldr	x3, [sp, #24]
   1d958:	ldr	x2, [sp, #32]
   1d95c:	ldr	w1, [sp, #3772]
   1d960:	ldr	x0, [sp, #40]
   1d964:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1d968:	mov	w1, w0
   1d96c:	add	x0, sp, #0x3c
   1d970:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d974:	and	w0, w0, #0xff
   1d978:	eor	w0, w0, #0x1
   1d97c:	and	w0, w0, #0xff
   1d980:	cmp	w0, #0x0
   1d984:	b.eq	1d990 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18a20>  // b.none
   1d988:	mov	w0, #0x0                   	// #0
   1d98c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d990:	mov	w2, #0x5                   	// #5
   1d994:	mov	w1, #0x0                   	// #0
   1d998:	ldr	w0, [sp, #52]
   1d99c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d9a0:	str	w0, [sp, #3772]
   1d9a4:	ldr	x3, [sp, #24]
   1d9a8:	ldr	x2, [sp, #32]
   1d9ac:	ldr	w1, [sp, #3772]
   1d9b0:	ldr	x0, [sp, #40]
   1d9b4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1d9b8:	mov	w1, w0
   1d9bc:	add	x0, sp, #0x3c
   1d9c0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1d9c4:	and	w0, w0, #0xff
   1d9c8:	eor	w0, w0, #0x1
   1d9cc:	and	w0, w0, #0xff
   1d9d0:	cmp	w0, #0x0
   1d9d4:	b.eq	1d9e0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18a70>  // b.none
   1d9d8:	mov	w0, #0x0                   	// #0
   1d9dc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1d9e0:	mov	w2, #0x5                   	// #5
   1d9e4:	mov	w1, #0x5                   	// #5
   1d9e8:	ldr	w0, [sp, #52]
   1d9ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1d9f0:	str	w0, [sp, #3772]
   1d9f4:	ldr	x3, [sp, #24]
   1d9f8:	ldr	x2, [sp, #32]
   1d9fc:	ldr	w1, [sp, #3772]
   1da00:	ldr	x0, [sp, #40]
   1da04:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1da08:	mov	w1, w0
   1da0c:	add	x0, sp, #0x3c
   1da10:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1da14:	and	w0, w0, #0xff
   1da18:	eor	w0, w0, #0x1
   1da1c:	and	w0, w0, #0xff
   1da20:	cmp	w0, #0x0
   1da24:	b.eq	1da30 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18ac0>  // b.none
   1da28:	mov	w0, #0x0                   	// #0
   1da2c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1da30:	mov	w2, #0x4                   	// #4
   1da34:	mov	w1, #0x10                  	// #16
   1da38:	ldr	w0, [sp, #52]
   1da3c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1da40:	str	w0, [sp, #3772]
   1da44:	ldr	x3, [sp, #24]
   1da48:	ldr	x2, [sp, #32]
   1da4c:	ldr	w1, [sp, #3772]
   1da50:	ldr	x0, [sp, #40]
   1da54:	bl	8a8 <_ZL28DecodeFPR128_loRegisterClassRN4llvm6MCInstEjmPKv>
   1da58:	mov	w1, w0
   1da5c:	add	x0, sp, #0x3c
   1da60:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1da64:	and	w0, w0, #0xff
   1da68:	eor	w0, w0, #0x1
   1da6c:	and	w0, w0, #0xff
   1da70:	cmp	w0, #0x0
   1da74:	b.eq	1da80 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18b10>  // b.none
   1da78:	mov	w0, #0x0                   	// #0
   1da7c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1da80:	str	wzr, [sp, #3772]
   1da84:	mov	w2, #0x1                   	// #1
   1da88:	mov	w1, #0xb                   	// #11
   1da8c:	ldr	w0, [sp, #52]
   1da90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1da94:	lsl	w0, w0, #2
   1da98:	ldr	w1, [sp, #3772]
   1da9c:	orr	w0, w1, w0
   1daa0:	str	w0, [sp, #3772]
   1daa4:	mov	w2, #0x2                   	// #2
   1daa8:	mov	w1, #0x14                  	// #20
   1daac:	ldr	w0, [sp, #52]
   1dab0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1dab4:	mov	w1, w0
   1dab8:	ldr	w0, [sp, #3772]
   1dabc:	orr	w0, w0, w1
   1dac0:	str	w0, [sp, #3772]
   1dac4:	ldr	w0, [sp, #3772]
   1dac8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1dacc:	add	x2, sp, #0xa00
   1dad0:	stp	x0, x1, [x2, #-184]
   1dad4:	add	x0, sp, #0x948
   1dad8:	mov	x1, x0
   1dadc:	ldr	x0, [sp, #40]
   1dae0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1dae4:	ldr	w0, [sp, #60]
   1dae8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1daec:	mov	w2, #0x5                   	// #5
   1daf0:	mov	w1, #0x0                   	// #0
   1daf4:	ldr	w0, [sp, #52]
   1daf8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1dafc:	str	w0, [sp, #3772]
   1db00:	ldr	x3, [sp, #24]
   1db04:	ldr	x2, [sp, #32]
   1db08:	ldr	w1, [sp, #3772]
   1db0c:	ldr	x0, [sp, #40]
   1db10:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1db14:	mov	w1, w0
   1db18:	add	x0, sp, #0x3c
   1db1c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1db20:	and	w0, w0, #0xff
   1db24:	eor	w0, w0, #0x1
   1db28:	and	w0, w0, #0xff
   1db2c:	cmp	w0, #0x0
   1db30:	b.eq	1db3c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18bcc>  // b.none
   1db34:	mov	w0, #0x0                   	// #0
   1db38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1db3c:	mov	w2, #0x5                   	// #5
   1db40:	mov	w1, #0x5                   	// #5
   1db44:	ldr	w0, [sp, #52]
   1db48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1db4c:	str	w0, [sp, #3772]
   1db50:	ldr	x3, [sp, #24]
   1db54:	ldr	x2, [sp, #32]
   1db58:	ldr	w1, [sp, #3772]
   1db5c:	ldr	x0, [sp, #40]
   1db60:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1db64:	mov	w1, w0
   1db68:	add	x0, sp, #0x3c
   1db6c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1db70:	and	w0, w0, #0xff
   1db74:	eor	w0, w0, #0x1
   1db78:	and	w0, w0, #0xff
   1db7c:	cmp	w0, #0x0
   1db80:	b.eq	1db8c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18c1c>  // b.none
   1db84:	mov	w0, #0x0                   	// #0
   1db88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1db8c:	mov	w2, #0x4                   	// #4
   1db90:	mov	w1, #0x10                  	// #16
   1db94:	ldr	w0, [sp, #52]
   1db98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1db9c:	str	w0, [sp, #3772]
   1dba0:	ldr	x3, [sp, #24]
   1dba4:	ldr	x2, [sp, #32]
   1dba8:	ldr	w1, [sp, #3772]
   1dbac:	ldr	x0, [sp, #40]
   1dbb0:	bl	8a8 <_ZL28DecodeFPR128_loRegisterClassRN4llvm6MCInstEjmPKv>
   1dbb4:	mov	w1, w0
   1dbb8:	add	x0, sp, #0x3c
   1dbbc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1dbc0:	and	w0, w0, #0xff
   1dbc4:	eor	w0, w0, #0x1
   1dbc8:	and	w0, w0, #0xff
   1dbcc:	cmp	w0, #0x0
   1dbd0:	b.eq	1dbdc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18c6c>  // b.none
   1dbd4:	mov	w0, #0x0                   	// #0
   1dbd8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1dbdc:	str	wzr, [sp, #3772]
   1dbe0:	mov	w2, #0x1                   	// #1
   1dbe4:	mov	w1, #0xb                   	// #11
   1dbe8:	ldr	w0, [sp, #52]
   1dbec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1dbf0:	lsl	w0, w0, #2
   1dbf4:	ldr	w1, [sp, #3772]
   1dbf8:	orr	w0, w1, w0
   1dbfc:	str	w0, [sp, #3772]
   1dc00:	mov	w2, #0x2                   	// #2
   1dc04:	mov	w1, #0x14                  	// #20
   1dc08:	ldr	w0, [sp, #52]
   1dc0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1dc10:	mov	w1, w0
   1dc14:	ldr	w0, [sp, #3772]
   1dc18:	orr	w0, w0, w1
   1dc1c:	str	w0, [sp, #3772]
   1dc20:	ldr	w0, [sp, #3772]
   1dc24:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1dc28:	add	x2, sp, #0xa00
   1dc2c:	stp	x0, x1, [x2, #-168]
   1dc30:	add	x0, sp, #0x958
   1dc34:	mov	x1, x0
   1dc38:	ldr	x0, [sp, #40]
   1dc3c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1dc40:	ldr	w0, [sp, #60]
   1dc44:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1dc48:	mov	w2, #0x5                   	// #5
   1dc4c:	mov	w1, #0x0                   	// #0
   1dc50:	ldr	w0, [sp, #52]
   1dc54:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1dc58:	str	w0, [sp, #3772]
   1dc5c:	ldr	x3, [sp, #24]
   1dc60:	ldr	x2, [sp, #32]
   1dc64:	ldr	w1, [sp, #3772]
   1dc68:	ldr	x0, [sp, #40]
   1dc6c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1dc70:	mov	w1, w0
   1dc74:	add	x0, sp, #0x3c
   1dc78:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1dc7c:	and	w0, w0, #0xff
   1dc80:	eor	w0, w0, #0x1
   1dc84:	and	w0, w0, #0xff
   1dc88:	cmp	w0, #0x0
   1dc8c:	b.eq	1dc98 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18d28>  // b.none
   1dc90:	mov	w0, #0x0                   	// #0
   1dc94:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1dc98:	mov	w2, #0x5                   	// #5
   1dc9c:	mov	w1, #0x5                   	// #5
   1dca0:	ldr	w0, [sp, #52]
   1dca4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1dca8:	str	w0, [sp, #3772]
   1dcac:	ldr	x3, [sp, #24]
   1dcb0:	ldr	x2, [sp, #32]
   1dcb4:	ldr	w1, [sp, #3772]
   1dcb8:	ldr	x0, [sp, #40]
   1dcbc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1dcc0:	mov	w1, w0
   1dcc4:	add	x0, sp, #0x3c
   1dcc8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1dccc:	and	w0, w0, #0xff
   1dcd0:	eor	w0, w0, #0x1
   1dcd4:	and	w0, w0, #0xff
   1dcd8:	cmp	w0, #0x0
   1dcdc:	b.eq	1dce8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18d78>  // b.none
   1dce0:	mov	w0, #0x0                   	// #0
   1dce4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1dce8:	mov	w2, #0x3                   	// #3
   1dcec:	mov	w1, #0x10                  	// #16
   1dcf0:	ldr	w0, [sp, #52]
   1dcf4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1dcf8:	str	w0, [sp, #3772]
   1dcfc:	ldr	x3, [sp, #24]
   1dd00:	ldr	x2, [sp, #32]
   1dd04:	ldr	w1, [sp, #3772]
   1dd08:	ldr	x0, [sp, #40]
   1dd0c:	bl	1790 <_ZL19DecodeVecShiftR8ImmRN4llvm6MCInstEjmPKv>
   1dd10:	mov	w1, w0
   1dd14:	add	x0, sp, #0x3c
   1dd18:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1dd1c:	and	w0, w0, #0xff
   1dd20:	eor	w0, w0, #0x1
   1dd24:	and	w0, w0, #0xff
   1dd28:	cmp	w0, #0x0
   1dd2c:	b.eq	1dd38 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18dc8>  // b.none
   1dd30:	mov	w0, #0x0                   	// #0
   1dd34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1dd38:	ldr	w0, [sp, #60]
   1dd3c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1dd40:	mov	w2, #0x5                   	// #5
   1dd44:	mov	w1, #0x0                   	// #0
   1dd48:	ldr	w0, [sp, #52]
   1dd4c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1dd50:	str	w0, [sp, #3772]
   1dd54:	ldr	x3, [sp, #24]
   1dd58:	ldr	x2, [sp, #32]
   1dd5c:	ldr	w1, [sp, #3772]
   1dd60:	ldr	x0, [sp, #40]
   1dd64:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1dd68:	mov	w1, w0
   1dd6c:	add	x0, sp, #0x3c
   1dd70:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1dd74:	and	w0, w0, #0xff
   1dd78:	eor	w0, w0, #0x1
   1dd7c:	and	w0, w0, #0xff
   1dd80:	cmp	w0, #0x0
   1dd84:	b.eq	1dd90 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18e20>  // b.none
   1dd88:	mov	w0, #0x0                   	// #0
   1dd8c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1dd90:	mov	w2, #0x5                   	// #5
   1dd94:	mov	w1, #0x5                   	// #5
   1dd98:	ldr	w0, [sp, #52]
   1dd9c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1dda0:	str	w0, [sp, #3772]
   1dda4:	ldr	x3, [sp, #24]
   1dda8:	ldr	x2, [sp, #32]
   1ddac:	ldr	w1, [sp, #3772]
   1ddb0:	ldr	x0, [sp, #40]
   1ddb4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ddb8:	mov	w1, w0
   1ddbc:	add	x0, sp, #0x3c
   1ddc0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ddc4:	and	w0, w0, #0xff
   1ddc8:	eor	w0, w0, #0x1
   1ddcc:	and	w0, w0, #0xff
   1ddd0:	cmp	w0, #0x0
   1ddd4:	b.eq	1dde0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18e70>  // b.none
   1ddd8:	mov	w0, #0x0                   	// #0
   1dddc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1dde0:	mov	w2, #0x4                   	// #4
   1dde4:	mov	w1, #0x10                  	// #16
   1dde8:	ldr	w0, [sp, #52]
   1ddec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ddf0:	str	w0, [sp, #3772]
   1ddf4:	ldr	x3, [sp, #24]
   1ddf8:	ldr	x2, [sp, #32]
   1ddfc:	ldr	w1, [sp, #3772]
   1de00:	ldr	x0, [sp, #40]
   1de04:	bl	1728 <_ZL20DecodeVecShiftR16ImmRN4llvm6MCInstEjmPKv>
   1de08:	mov	w1, w0
   1de0c:	add	x0, sp, #0x3c
   1de10:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1de14:	and	w0, w0, #0xff
   1de18:	eor	w0, w0, #0x1
   1de1c:	and	w0, w0, #0xff
   1de20:	cmp	w0, #0x0
   1de24:	b.eq	1de30 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18ec0>  // b.none
   1de28:	mov	w0, #0x0                   	// #0
   1de2c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1de30:	ldr	w0, [sp, #60]
   1de34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1de38:	mov	w2, #0x5                   	// #5
   1de3c:	mov	w1, #0x0                   	// #0
   1de40:	ldr	w0, [sp, #52]
   1de44:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1de48:	str	w0, [sp, #3772]
   1de4c:	ldr	x3, [sp, #24]
   1de50:	ldr	x2, [sp, #32]
   1de54:	ldr	w1, [sp, #3772]
   1de58:	ldr	x0, [sp, #40]
   1de5c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1de60:	mov	w1, w0
   1de64:	add	x0, sp, #0x3c
   1de68:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1de6c:	and	w0, w0, #0xff
   1de70:	eor	w0, w0, #0x1
   1de74:	and	w0, w0, #0xff
   1de78:	cmp	w0, #0x0
   1de7c:	b.eq	1de88 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18f18>  // b.none
   1de80:	mov	w0, #0x0                   	// #0
   1de84:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1de88:	mov	w2, #0x5                   	// #5
   1de8c:	mov	w1, #0x5                   	// #5
   1de90:	ldr	w0, [sp, #52]
   1de94:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1de98:	str	w0, [sp, #3772]
   1de9c:	ldr	x3, [sp, #24]
   1dea0:	ldr	x2, [sp, #32]
   1dea4:	ldr	w1, [sp, #3772]
   1dea8:	ldr	x0, [sp, #40]
   1deac:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1deb0:	mov	w1, w0
   1deb4:	add	x0, sp, #0x3c
   1deb8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1debc:	and	w0, w0, #0xff
   1dec0:	eor	w0, w0, #0x1
   1dec4:	and	w0, w0, #0xff
   1dec8:	cmp	w0, #0x0
   1decc:	b.eq	1ded8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18f68>  // b.none
   1ded0:	mov	w0, #0x0                   	// #0
   1ded4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ded8:	mov	w2, #0x5                   	// #5
   1dedc:	mov	w1, #0x10                  	// #16
   1dee0:	ldr	w0, [sp, #52]
   1dee4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1dee8:	str	w0, [sp, #3772]
   1deec:	ldr	x3, [sp, #24]
   1def0:	ldr	x2, [sp, #32]
   1def4:	ldr	w1, [sp, #3772]
   1def8:	ldr	x0, [sp, #40]
   1defc:	bl	16c0 <_ZL20DecodeVecShiftR32ImmRN4llvm6MCInstEjmPKv>
   1df00:	mov	w1, w0
   1df04:	add	x0, sp, #0x3c
   1df08:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1df0c:	and	w0, w0, #0xff
   1df10:	eor	w0, w0, #0x1
   1df14:	and	w0, w0, #0xff
   1df18:	cmp	w0, #0x0
   1df1c:	b.eq	1df28 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x18fb8>  // b.none
   1df20:	mov	w0, #0x0                   	// #0
   1df24:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1df28:	ldr	w0, [sp, #60]
   1df2c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1df30:	mov	w2, #0x5                   	// #5
   1df34:	mov	w1, #0x0                   	// #0
   1df38:	ldr	w0, [sp, #52]
   1df3c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1df40:	str	w0, [sp, #3772]
   1df44:	ldr	x3, [sp, #24]
   1df48:	ldr	x2, [sp, #32]
   1df4c:	ldr	w1, [sp, #3772]
   1df50:	ldr	x0, [sp, #40]
   1df54:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1df58:	mov	w1, w0
   1df5c:	add	x0, sp, #0x3c
   1df60:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1df64:	and	w0, w0, #0xff
   1df68:	eor	w0, w0, #0x1
   1df6c:	and	w0, w0, #0xff
   1df70:	cmp	w0, #0x0
   1df74:	b.eq	1df80 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19010>  // b.none
   1df78:	mov	w0, #0x0                   	// #0
   1df7c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1df80:	mov	w2, #0x5                   	// #5
   1df84:	mov	w1, #0x0                   	// #0
   1df88:	ldr	w0, [sp, #52]
   1df8c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1df90:	str	w0, [sp, #3772]
   1df94:	ldr	x3, [sp, #24]
   1df98:	ldr	x2, [sp, #32]
   1df9c:	ldr	w1, [sp, #3772]
   1dfa0:	ldr	x0, [sp, #40]
   1dfa4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1dfa8:	mov	w1, w0
   1dfac:	add	x0, sp, #0x3c
   1dfb0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1dfb4:	and	w0, w0, #0xff
   1dfb8:	eor	w0, w0, #0x1
   1dfbc:	and	w0, w0, #0xff
   1dfc0:	cmp	w0, #0x0
   1dfc4:	b.eq	1dfd0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19060>  // b.none
   1dfc8:	mov	w0, #0x0                   	// #0
   1dfcc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1dfd0:	mov	w2, #0x5                   	// #5
   1dfd4:	mov	w1, #0x5                   	// #5
   1dfd8:	ldr	w0, [sp, #52]
   1dfdc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1dfe0:	str	w0, [sp, #3772]
   1dfe4:	ldr	x3, [sp, #24]
   1dfe8:	ldr	x2, [sp, #32]
   1dfec:	ldr	w1, [sp, #3772]
   1dff0:	ldr	x0, [sp, #40]
   1dff4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1dff8:	mov	w1, w0
   1dffc:	add	x0, sp, #0x3c
   1e000:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e004:	and	w0, w0, #0xff
   1e008:	eor	w0, w0, #0x1
   1e00c:	and	w0, w0, #0xff
   1e010:	cmp	w0, #0x0
   1e014:	b.eq	1e020 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x190b0>  // b.none
   1e018:	mov	w0, #0x0                   	// #0
   1e01c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e020:	mov	w2, #0x3                   	// #3
   1e024:	mov	w1, #0x10                  	// #16
   1e028:	ldr	w0, [sp, #52]
   1e02c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e030:	str	w0, [sp, #3772]
   1e034:	ldr	x3, [sp, #24]
   1e038:	ldr	x2, [sp, #32]
   1e03c:	ldr	w1, [sp, #3772]
   1e040:	ldr	x0, [sp, #40]
   1e044:	bl	1790 <_ZL19DecodeVecShiftR8ImmRN4llvm6MCInstEjmPKv>
   1e048:	mov	w1, w0
   1e04c:	add	x0, sp, #0x3c
   1e050:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e054:	and	w0, w0, #0xff
   1e058:	eor	w0, w0, #0x1
   1e05c:	and	w0, w0, #0xff
   1e060:	cmp	w0, #0x0
   1e064:	b.eq	1e070 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19100>  // b.none
   1e068:	mov	w0, #0x0                   	// #0
   1e06c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e070:	ldr	w0, [sp, #60]
   1e074:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e078:	mov	w2, #0x5                   	// #5
   1e07c:	mov	w1, #0x0                   	// #0
   1e080:	ldr	w0, [sp, #52]
   1e084:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e088:	str	w0, [sp, #3772]
   1e08c:	ldr	x3, [sp, #24]
   1e090:	ldr	x2, [sp, #32]
   1e094:	ldr	w1, [sp, #3772]
   1e098:	ldr	x0, [sp, #40]
   1e09c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e0a0:	mov	w1, w0
   1e0a4:	add	x0, sp, #0x3c
   1e0a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e0ac:	and	w0, w0, #0xff
   1e0b0:	eor	w0, w0, #0x1
   1e0b4:	and	w0, w0, #0xff
   1e0b8:	cmp	w0, #0x0
   1e0bc:	b.eq	1e0c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19158>  // b.none
   1e0c0:	mov	w0, #0x0                   	// #0
   1e0c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e0c8:	mov	w2, #0x5                   	// #5
   1e0cc:	mov	w1, #0x5                   	// #5
   1e0d0:	ldr	w0, [sp, #52]
   1e0d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e0d8:	str	w0, [sp, #3772]
   1e0dc:	ldr	x3, [sp, #24]
   1e0e0:	ldr	x2, [sp, #32]
   1e0e4:	ldr	w1, [sp, #3772]
   1e0e8:	ldr	x0, [sp, #40]
   1e0ec:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e0f0:	mov	w1, w0
   1e0f4:	add	x0, sp, #0x3c
   1e0f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e0fc:	and	w0, w0, #0xff
   1e100:	eor	w0, w0, #0x1
   1e104:	and	w0, w0, #0xff
   1e108:	cmp	w0, #0x0
   1e10c:	b.eq	1e118 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x191a8>  // b.none
   1e110:	mov	w0, #0x0                   	// #0
   1e114:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e118:	mov	w2, #0x3                   	// #3
   1e11c:	mov	w1, #0x10                  	// #16
   1e120:	ldr	w0, [sp, #52]
   1e124:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e128:	str	w0, [sp, #3772]
   1e12c:	ldr	x3, [sp, #24]
   1e130:	ldr	x2, [sp, #32]
   1e134:	ldr	w1, [sp, #3772]
   1e138:	ldr	x0, [sp, #40]
   1e13c:	bl	1850 <_ZL19DecodeVecShiftL8ImmRN4llvm6MCInstEjmPKv>
   1e140:	mov	w1, w0
   1e144:	add	x0, sp, #0x3c
   1e148:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e14c:	and	w0, w0, #0xff
   1e150:	eor	w0, w0, #0x1
   1e154:	and	w0, w0, #0xff
   1e158:	cmp	w0, #0x0
   1e15c:	b.eq	1e168 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x191f8>  // b.none
   1e160:	mov	w0, #0x0                   	// #0
   1e164:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e168:	ldr	w0, [sp, #60]
   1e16c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e170:	mov	w2, #0x5                   	// #5
   1e174:	mov	w1, #0x0                   	// #0
   1e178:	ldr	w0, [sp, #52]
   1e17c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e180:	str	w0, [sp, #3772]
   1e184:	ldr	x3, [sp, #24]
   1e188:	ldr	x2, [sp, #32]
   1e18c:	ldr	w1, [sp, #3772]
   1e190:	ldr	x0, [sp, #40]
   1e194:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e198:	mov	w1, w0
   1e19c:	add	x0, sp, #0x3c
   1e1a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e1a4:	and	w0, w0, #0xff
   1e1a8:	eor	w0, w0, #0x1
   1e1ac:	and	w0, w0, #0xff
   1e1b0:	cmp	w0, #0x0
   1e1b4:	b.eq	1e1c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19250>  // b.none
   1e1b8:	mov	w0, #0x0                   	// #0
   1e1bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e1c0:	mov	w2, #0x5                   	// #5
   1e1c4:	mov	w1, #0x0                   	// #0
   1e1c8:	ldr	w0, [sp, #52]
   1e1cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e1d0:	str	w0, [sp, #3772]
   1e1d4:	ldr	x3, [sp, #24]
   1e1d8:	ldr	x2, [sp, #32]
   1e1dc:	ldr	w1, [sp, #3772]
   1e1e0:	ldr	x0, [sp, #40]
   1e1e4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e1e8:	mov	w1, w0
   1e1ec:	add	x0, sp, #0x3c
   1e1f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e1f4:	and	w0, w0, #0xff
   1e1f8:	eor	w0, w0, #0x1
   1e1fc:	and	w0, w0, #0xff
   1e200:	cmp	w0, #0x0
   1e204:	b.eq	1e210 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x192a0>  // b.none
   1e208:	mov	w0, #0x0                   	// #0
   1e20c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e210:	mov	w2, #0x5                   	// #5
   1e214:	mov	w1, #0x5                   	// #5
   1e218:	ldr	w0, [sp, #52]
   1e21c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e220:	str	w0, [sp, #3772]
   1e224:	ldr	x3, [sp, #24]
   1e228:	ldr	x2, [sp, #32]
   1e22c:	ldr	w1, [sp, #3772]
   1e230:	ldr	x0, [sp, #40]
   1e234:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e238:	mov	w1, w0
   1e23c:	add	x0, sp, #0x3c
   1e240:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e244:	and	w0, w0, #0xff
   1e248:	eor	w0, w0, #0x1
   1e24c:	and	w0, w0, #0xff
   1e250:	cmp	w0, #0x0
   1e254:	b.eq	1e260 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x192f0>  // b.none
   1e258:	mov	w0, #0x0                   	// #0
   1e25c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e260:	mov	w2, #0x4                   	// #4
   1e264:	mov	w1, #0x10                  	// #16
   1e268:	ldr	w0, [sp, #52]
   1e26c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e270:	str	w0, [sp, #3772]
   1e274:	ldr	x3, [sp, #24]
   1e278:	ldr	x2, [sp, #32]
   1e27c:	ldr	w1, [sp, #3772]
   1e280:	ldr	x0, [sp, #40]
   1e284:	bl	1728 <_ZL20DecodeVecShiftR16ImmRN4llvm6MCInstEjmPKv>
   1e288:	mov	w1, w0
   1e28c:	add	x0, sp, #0x3c
   1e290:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e294:	and	w0, w0, #0xff
   1e298:	eor	w0, w0, #0x1
   1e29c:	and	w0, w0, #0xff
   1e2a0:	cmp	w0, #0x0
   1e2a4:	b.eq	1e2b0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19340>  // b.none
   1e2a8:	mov	w0, #0x0                   	// #0
   1e2ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e2b0:	ldr	w0, [sp, #60]
   1e2b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e2b8:	mov	w2, #0x5                   	// #5
   1e2bc:	mov	w1, #0x0                   	// #0
   1e2c0:	ldr	w0, [sp, #52]
   1e2c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e2c8:	str	w0, [sp, #3772]
   1e2cc:	ldr	x3, [sp, #24]
   1e2d0:	ldr	x2, [sp, #32]
   1e2d4:	ldr	w1, [sp, #3772]
   1e2d8:	ldr	x0, [sp, #40]
   1e2dc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e2e0:	mov	w1, w0
   1e2e4:	add	x0, sp, #0x3c
   1e2e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e2ec:	and	w0, w0, #0xff
   1e2f0:	eor	w0, w0, #0x1
   1e2f4:	and	w0, w0, #0xff
   1e2f8:	cmp	w0, #0x0
   1e2fc:	b.eq	1e308 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19398>  // b.none
   1e300:	mov	w0, #0x0                   	// #0
   1e304:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e308:	mov	w2, #0x5                   	// #5
   1e30c:	mov	w1, #0x5                   	// #5
   1e310:	ldr	w0, [sp, #52]
   1e314:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e318:	str	w0, [sp, #3772]
   1e31c:	ldr	x3, [sp, #24]
   1e320:	ldr	x2, [sp, #32]
   1e324:	ldr	w1, [sp, #3772]
   1e328:	ldr	x0, [sp, #40]
   1e32c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e330:	mov	w1, w0
   1e334:	add	x0, sp, #0x3c
   1e338:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e33c:	and	w0, w0, #0xff
   1e340:	eor	w0, w0, #0x1
   1e344:	and	w0, w0, #0xff
   1e348:	cmp	w0, #0x0
   1e34c:	b.eq	1e358 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x193e8>  // b.none
   1e350:	mov	w0, #0x0                   	// #0
   1e354:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e358:	mov	w2, #0x4                   	// #4
   1e35c:	mov	w1, #0x10                  	// #16
   1e360:	ldr	w0, [sp, #52]
   1e364:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e368:	str	w0, [sp, #3772]
   1e36c:	ldr	x3, [sp, #24]
   1e370:	ldr	x2, [sp, #32]
   1e374:	ldr	w1, [sp, #3772]
   1e378:	ldr	x0, [sp, #40]
   1e37c:	bl	1820 <_ZL20DecodeVecShiftL16ImmRN4llvm6MCInstEjmPKv>
   1e380:	mov	w1, w0
   1e384:	add	x0, sp, #0x3c
   1e388:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e38c:	and	w0, w0, #0xff
   1e390:	eor	w0, w0, #0x1
   1e394:	and	w0, w0, #0xff
   1e398:	cmp	w0, #0x0
   1e39c:	b.eq	1e3a8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19438>  // b.none
   1e3a0:	mov	w0, #0x0                   	// #0
   1e3a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e3a8:	ldr	w0, [sp, #60]
   1e3ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e3b0:	mov	w2, #0x5                   	// #5
   1e3b4:	mov	w1, #0x0                   	// #0
   1e3b8:	ldr	w0, [sp, #52]
   1e3bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e3c0:	str	w0, [sp, #3772]
   1e3c4:	ldr	x3, [sp, #24]
   1e3c8:	ldr	x2, [sp, #32]
   1e3cc:	ldr	w1, [sp, #3772]
   1e3d0:	ldr	x0, [sp, #40]
   1e3d4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e3d8:	mov	w1, w0
   1e3dc:	add	x0, sp, #0x3c
   1e3e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e3e4:	and	w0, w0, #0xff
   1e3e8:	eor	w0, w0, #0x1
   1e3ec:	and	w0, w0, #0xff
   1e3f0:	cmp	w0, #0x0
   1e3f4:	b.eq	1e400 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19490>  // b.none
   1e3f8:	mov	w0, #0x0                   	// #0
   1e3fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e400:	mov	w2, #0x5                   	// #5
   1e404:	mov	w1, #0x0                   	// #0
   1e408:	ldr	w0, [sp, #52]
   1e40c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e410:	str	w0, [sp, #3772]
   1e414:	ldr	x3, [sp, #24]
   1e418:	ldr	x2, [sp, #32]
   1e41c:	ldr	w1, [sp, #3772]
   1e420:	ldr	x0, [sp, #40]
   1e424:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e428:	mov	w1, w0
   1e42c:	add	x0, sp, #0x3c
   1e430:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e434:	and	w0, w0, #0xff
   1e438:	eor	w0, w0, #0x1
   1e43c:	and	w0, w0, #0xff
   1e440:	cmp	w0, #0x0
   1e444:	b.eq	1e450 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x194e0>  // b.none
   1e448:	mov	w0, #0x0                   	// #0
   1e44c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e450:	mov	w2, #0x5                   	// #5
   1e454:	mov	w1, #0x5                   	// #5
   1e458:	ldr	w0, [sp, #52]
   1e45c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e460:	str	w0, [sp, #3772]
   1e464:	ldr	x3, [sp, #24]
   1e468:	ldr	x2, [sp, #32]
   1e46c:	ldr	w1, [sp, #3772]
   1e470:	ldr	x0, [sp, #40]
   1e474:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e478:	mov	w1, w0
   1e47c:	add	x0, sp, #0x3c
   1e480:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e484:	and	w0, w0, #0xff
   1e488:	eor	w0, w0, #0x1
   1e48c:	and	w0, w0, #0xff
   1e490:	cmp	w0, #0x0
   1e494:	b.eq	1e4a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19530>  // b.none
   1e498:	mov	w0, #0x0                   	// #0
   1e49c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e4a0:	mov	w2, #0x5                   	// #5
   1e4a4:	mov	w1, #0x10                  	// #16
   1e4a8:	ldr	w0, [sp, #52]
   1e4ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e4b0:	str	w0, [sp, #3772]
   1e4b4:	ldr	x3, [sp, #24]
   1e4b8:	ldr	x2, [sp, #32]
   1e4bc:	ldr	w1, [sp, #3772]
   1e4c0:	ldr	x0, [sp, #40]
   1e4c4:	bl	16c0 <_ZL20DecodeVecShiftR32ImmRN4llvm6MCInstEjmPKv>
   1e4c8:	mov	w1, w0
   1e4cc:	add	x0, sp, #0x3c
   1e4d0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e4d4:	and	w0, w0, #0xff
   1e4d8:	eor	w0, w0, #0x1
   1e4dc:	and	w0, w0, #0xff
   1e4e0:	cmp	w0, #0x0
   1e4e4:	b.eq	1e4f0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19580>  // b.none
   1e4e8:	mov	w0, #0x0                   	// #0
   1e4ec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e4f0:	ldr	w0, [sp, #60]
   1e4f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e4f8:	mov	w2, #0x5                   	// #5
   1e4fc:	mov	w1, #0x0                   	// #0
   1e500:	ldr	w0, [sp, #52]
   1e504:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e508:	str	w0, [sp, #3772]
   1e50c:	ldr	x3, [sp, #24]
   1e510:	ldr	x2, [sp, #32]
   1e514:	ldr	w1, [sp, #3772]
   1e518:	ldr	x0, [sp, #40]
   1e51c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e520:	mov	w1, w0
   1e524:	add	x0, sp, #0x3c
   1e528:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e52c:	and	w0, w0, #0xff
   1e530:	eor	w0, w0, #0x1
   1e534:	and	w0, w0, #0xff
   1e538:	cmp	w0, #0x0
   1e53c:	b.eq	1e548 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x195d8>  // b.none
   1e540:	mov	w0, #0x0                   	// #0
   1e544:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e548:	mov	w2, #0x5                   	// #5
   1e54c:	mov	w1, #0x5                   	// #5
   1e550:	ldr	w0, [sp, #52]
   1e554:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e558:	str	w0, [sp, #3772]
   1e55c:	ldr	x3, [sp, #24]
   1e560:	ldr	x2, [sp, #32]
   1e564:	ldr	w1, [sp, #3772]
   1e568:	ldr	x0, [sp, #40]
   1e56c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e570:	mov	w1, w0
   1e574:	add	x0, sp, #0x3c
   1e578:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e57c:	and	w0, w0, #0xff
   1e580:	eor	w0, w0, #0x1
   1e584:	and	w0, w0, #0xff
   1e588:	cmp	w0, #0x0
   1e58c:	b.eq	1e598 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19628>  // b.none
   1e590:	mov	w0, #0x0                   	// #0
   1e594:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e598:	mov	w2, #0x5                   	// #5
   1e59c:	mov	w1, #0x10                  	// #16
   1e5a0:	ldr	w0, [sp, #52]
   1e5a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e5a8:	str	w0, [sp, #3772]
   1e5ac:	ldr	x3, [sp, #24]
   1e5b0:	ldr	x2, [sp, #32]
   1e5b4:	ldr	w1, [sp, #3772]
   1e5b8:	ldr	x0, [sp, #40]
   1e5bc:	bl	17f0 <_ZL20DecodeVecShiftL32ImmRN4llvm6MCInstEjmPKv>
   1e5c0:	mov	w1, w0
   1e5c4:	add	x0, sp, #0x3c
   1e5c8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e5cc:	and	w0, w0, #0xff
   1e5d0:	eor	w0, w0, #0x1
   1e5d4:	and	w0, w0, #0xff
   1e5d8:	cmp	w0, #0x0
   1e5dc:	b.eq	1e5e8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19678>  // b.none
   1e5e0:	mov	w0, #0x0                   	// #0
   1e5e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e5e8:	ldr	w0, [sp, #60]
   1e5ec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e5f0:	mov	w2, #0x5                   	// #5
   1e5f4:	mov	w1, #0x0                   	// #0
   1e5f8:	ldr	w0, [sp, #52]
   1e5fc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e600:	str	w0, [sp, #3772]
   1e604:	ldr	x3, [sp, #24]
   1e608:	ldr	x2, [sp, #32]
   1e60c:	ldr	w1, [sp, #3772]
   1e610:	ldr	x0, [sp, #40]
   1e614:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e618:	mov	w1, w0
   1e61c:	add	x0, sp, #0x3c
   1e620:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e624:	and	w0, w0, #0xff
   1e628:	eor	w0, w0, #0x1
   1e62c:	and	w0, w0, #0xff
   1e630:	cmp	w0, #0x0
   1e634:	b.eq	1e640 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x196d0>  // b.none
   1e638:	mov	w0, #0x0                   	// #0
   1e63c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e640:	mov	w2, #0x5                   	// #5
   1e644:	mov	w1, #0x0                   	// #0
   1e648:	ldr	w0, [sp, #52]
   1e64c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e650:	str	w0, [sp, #3772]
   1e654:	ldr	x3, [sp, #24]
   1e658:	ldr	x2, [sp, #32]
   1e65c:	ldr	w1, [sp, #3772]
   1e660:	ldr	x0, [sp, #40]
   1e664:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e668:	mov	w1, w0
   1e66c:	add	x0, sp, #0x3c
   1e670:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e674:	and	w0, w0, #0xff
   1e678:	eor	w0, w0, #0x1
   1e67c:	and	w0, w0, #0xff
   1e680:	cmp	w0, #0x0
   1e684:	b.eq	1e690 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19720>  // b.none
   1e688:	mov	w0, #0x0                   	// #0
   1e68c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e690:	mov	w2, #0x5                   	// #5
   1e694:	mov	w1, #0x5                   	// #5
   1e698:	ldr	w0, [sp, #52]
   1e69c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e6a0:	str	w0, [sp, #3772]
   1e6a4:	ldr	x3, [sp, #24]
   1e6a8:	ldr	x2, [sp, #32]
   1e6ac:	ldr	w1, [sp, #3772]
   1e6b0:	ldr	x0, [sp, #40]
   1e6b4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e6b8:	mov	w1, w0
   1e6bc:	add	x0, sp, #0x3c
   1e6c0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e6c4:	and	w0, w0, #0xff
   1e6c8:	eor	w0, w0, #0x1
   1e6cc:	and	w0, w0, #0xff
   1e6d0:	cmp	w0, #0x0
   1e6d4:	b.eq	1e6e0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19770>  // b.none
   1e6d8:	mov	w0, #0x0                   	// #0
   1e6dc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e6e0:	mov	w2, #0x3                   	// #3
   1e6e4:	mov	w1, #0x10                  	// #16
   1e6e8:	ldr	w0, [sp, #52]
   1e6ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e6f0:	str	w0, [sp, #3772]
   1e6f4:	ldr	x3, [sp, #24]
   1e6f8:	ldr	x2, [sp, #32]
   1e6fc:	ldr	w1, [sp, #3772]
   1e700:	ldr	x0, [sp, #40]
   1e704:	bl	1758 <_ZL26DecodeVecShiftR16ImmNarrowRN4llvm6MCInstEjmPKv>
   1e708:	mov	w1, w0
   1e70c:	add	x0, sp, #0x3c
   1e710:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e714:	and	w0, w0, #0xff
   1e718:	eor	w0, w0, #0x1
   1e71c:	and	w0, w0, #0xff
   1e720:	cmp	w0, #0x0
   1e724:	b.eq	1e730 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x197c0>  // b.none
   1e728:	mov	w0, #0x0                   	// #0
   1e72c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e730:	ldr	w0, [sp, #60]
   1e734:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e738:	mov	w2, #0x5                   	// #5
   1e73c:	mov	w1, #0x0                   	// #0
   1e740:	ldr	w0, [sp, #52]
   1e744:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e748:	str	w0, [sp, #3772]
   1e74c:	ldr	x3, [sp, #24]
   1e750:	ldr	x2, [sp, #32]
   1e754:	ldr	w1, [sp, #3772]
   1e758:	ldr	x0, [sp, #40]
   1e75c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e760:	mov	w1, w0
   1e764:	add	x0, sp, #0x3c
   1e768:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e76c:	and	w0, w0, #0xff
   1e770:	eor	w0, w0, #0x1
   1e774:	and	w0, w0, #0xff
   1e778:	cmp	w0, #0x0
   1e77c:	b.eq	1e788 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19818>  // b.none
   1e780:	mov	w0, #0x0                   	// #0
   1e784:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e788:	mov	w2, #0x5                   	// #5
   1e78c:	mov	w1, #0x0                   	// #0
   1e790:	ldr	w0, [sp, #52]
   1e794:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e798:	str	w0, [sp, #3772]
   1e79c:	ldr	x3, [sp, #24]
   1e7a0:	ldr	x2, [sp, #32]
   1e7a4:	ldr	w1, [sp, #3772]
   1e7a8:	ldr	x0, [sp, #40]
   1e7ac:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e7b0:	mov	w1, w0
   1e7b4:	add	x0, sp, #0x3c
   1e7b8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e7bc:	and	w0, w0, #0xff
   1e7c0:	eor	w0, w0, #0x1
   1e7c4:	and	w0, w0, #0xff
   1e7c8:	cmp	w0, #0x0
   1e7cc:	b.eq	1e7d8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19868>  // b.none
   1e7d0:	mov	w0, #0x0                   	// #0
   1e7d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e7d8:	mov	w2, #0x5                   	// #5
   1e7dc:	mov	w1, #0x5                   	// #5
   1e7e0:	ldr	w0, [sp, #52]
   1e7e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e7e8:	str	w0, [sp, #3772]
   1e7ec:	ldr	x3, [sp, #24]
   1e7f0:	ldr	x2, [sp, #32]
   1e7f4:	ldr	w1, [sp, #3772]
   1e7f8:	ldr	x0, [sp, #40]
   1e7fc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e800:	mov	w1, w0
   1e804:	add	x0, sp, #0x3c
   1e808:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e80c:	and	w0, w0, #0xff
   1e810:	eor	w0, w0, #0x1
   1e814:	and	w0, w0, #0xff
   1e818:	cmp	w0, #0x0
   1e81c:	b.eq	1e828 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x198b8>  // b.none
   1e820:	mov	w0, #0x0                   	// #0
   1e824:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e828:	mov	w2, #0x4                   	// #4
   1e82c:	mov	w1, #0x10                  	// #16
   1e830:	ldr	w0, [sp, #52]
   1e834:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e838:	str	w0, [sp, #3772]
   1e83c:	ldr	x3, [sp, #24]
   1e840:	ldr	x2, [sp, #32]
   1e844:	ldr	w1, [sp, #3772]
   1e848:	ldr	x0, [sp, #40]
   1e84c:	bl	16f0 <_ZL26DecodeVecShiftR32ImmNarrowRN4llvm6MCInstEjmPKv>
   1e850:	mov	w1, w0
   1e854:	add	x0, sp, #0x3c
   1e858:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e85c:	and	w0, w0, #0xff
   1e860:	eor	w0, w0, #0x1
   1e864:	and	w0, w0, #0xff
   1e868:	cmp	w0, #0x0
   1e86c:	b.eq	1e878 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19908>  // b.none
   1e870:	mov	w0, #0x0                   	// #0
   1e874:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e878:	ldr	w0, [sp, #60]
   1e87c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e880:	mov	w2, #0x5                   	// #5
   1e884:	mov	w1, #0x0                   	// #0
   1e888:	ldr	w0, [sp, #52]
   1e88c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e890:	str	w0, [sp, #3772]
   1e894:	ldr	x3, [sp, #24]
   1e898:	ldr	x2, [sp, #32]
   1e89c:	ldr	w1, [sp, #3772]
   1e8a0:	ldr	x0, [sp, #40]
   1e8a4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e8a8:	mov	w1, w0
   1e8ac:	add	x0, sp, #0x3c
   1e8b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e8b4:	and	w0, w0, #0xff
   1e8b8:	eor	w0, w0, #0x1
   1e8bc:	and	w0, w0, #0xff
   1e8c0:	cmp	w0, #0x0
   1e8c4:	b.eq	1e8d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19960>  // b.none
   1e8c8:	mov	w0, #0x0                   	// #0
   1e8cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e8d0:	mov	w2, #0x5                   	// #5
   1e8d4:	mov	w1, #0x0                   	// #0
   1e8d8:	ldr	w0, [sp, #52]
   1e8dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e8e0:	str	w0, [sp, #3772]
   1e8e4:	ldr	x3, [sp, #24]
   1e8e8:	ldr	x2, [sp, #32]
   1e8ec:	ldr	w1, [sp, #3772]
   1e8f0:	ldr	x0, [sp, #40]
   1e8f4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e8f8:	mov	w1, w0
   1e8fc:	add	x0, sp, #0x3c
   1e900:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e904:	and	w0, w0, #0xff
   1e908:	eor	w0, w0, #0x1
   1e90c:	and	w0, w0, #0xff
   1e910:	cmp	w0, #0x0
   1e914:	b.eq	1e920 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x199b0>  // b.none
   1e918:	mov	w0, #0x0                   	// #0
   1e91c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e920:	mov	w2, #0x5                   	// #5
   1e924:	mov	w1, #0x5                   	// #5
   1e928:	ldr	w0, [sp, #52]
   1e92c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e930:	str	w0, [sp, #3772]
   1e934:	ldr	x3, [sp, #24]
   1e938:	ldr	x2, [sp, #32]
   1e93c:	ldr	w1, [sp, #3772]
   1e940:	ldr	x0, [sp, #40]
   1e944:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e948:	mov	w1, w0
   1e94c:	add	x0, sp, #0x3c
   1e950:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e954:	and	w0, w0, #0xff
   1e958:	eor	w0, w0, #0x1
   1e95c:	and	w0, w0, #0xff
   1e960:	cmp	w0, #0x0
   1e964:	b.eq	1e970 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19a00>  // b.none
   1e968:	mov	w0, #0x0                   	// #0
   1e96c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e970:	mov	w2, #0x5                   	// #5
   1e974:	mov	w1, #0x10                  	// #16
   1e978:	ldr	w0, [sp, #52]
   1e97c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e980:	str	w0, [sp, #3772]
   1e984:	ldr	x3, [sp, #24]
   1e988:	ldr	x2, [sp, #32]
   1e98c:	ldr	w1, [sp, #3772]
   1e990:	ldr	x0, [sp, #40]
   1e994:	bl	1688 <_ZL26DecodeVecShiftR64ImmNarrowRN4llvm6MCInstEjmPKv>
   1e998:	mov	w1, w0
   1e99c:	add	x0, sp, #0x3c
   1e9a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e9a4:	and	w0, w0, #0xff
   1e9a8:	eor	w0, w0, #0x1
   1e9ac:	and	w0, w0, #0xff
   1e9b0:	cmp	w0, #0x0
   1e9b4:	b.eq	1e9c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19a50>  // b.none
   1e9b8:	mov	w0, #0x0                   	// #0
   1e9bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e9c0:	ldr	w0, [sp, #60]
   1e9c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1e9c8:	mov	w2, #0x5                   	// #5
   1e9cc:	mov	w1, #0x0                   	// #0
   1e9d0:	ldr	w0, [sp, #52]
   1e9d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1e9d8:	str	w0, [sp, #3772]
   1e9dc:	ldr	x3, [sp, #24]
   1e9e0:	ldr	x2, [sp, #32]
   1e9e4:	ldr	w1, [sp, #3772]
   1e9e8:	ldr	x0, [sp, #40]
   1e9ec:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1e9f0:	mov	w1, w0
   1e9f4:	add	x0, sp, #0x3c
   1e9f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1e9fc:	and	w0, w0, #0xff
   1ea00:	eor	w0, w0, #0x1
   1ea04:	and	w0, w0, #0xff
   1ea08:	cmp	w0, #0x0
   1ea0c:	b.eq	1ea18 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19aa8>  // b.none
   1ea10:	mov	w0, #0x0                   	// #0
   1ea14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ea18:	mov	w2, #0x5                   	// #5
   1ea1c:	mov	w1, #0x0                   	// #0
   1ea20:	ldr	w0, [sp, #52]
   1ea24:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ea28:	str	w0, [sp, #3772]
   1ea2c:	ldr	x3, [sp, #24]
   1ea30:	ldr	x2, [sp, #32]
   1ea34:	ldr	w1, [sp, #3772]
   1ea38:	ldr	x0, [sp, #40]
   1ea3c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ea40:	mov	w1, w0
   1ea44:	add	x0, sp, #0x3c
   1ea48:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ea4c:	and	w0, w0, #0xff
   1ea50:	eor	w0, w0, #0x1
   1ea54:	and	w0, w0, #0xff
   1ea58:	cmp	w0, #0x0
   1ea5c:	b.eq	1ea68 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19af8>  // b.none
   1ea60:	mov	w0, #0x0                   	// #0
   1ea64:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ea68:	mov	w2, #0x5                   	// #5
   1ea6c:	mov	w1, #0x5                   	// #5
   1ea70:	ldr	w0, [sp, #52]
   1ea74:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ea78:	str	w0, [sp, #3772]
   1ea7c:	ldr	x3, [sp, #24]
   1ea80:	ldr	x2, [sp, #32]
   1ea84:	ldr	w1, [sp, #3772]
   1ea88:	ldr	x0, [sp, #40]
   1ea8c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ea90:	mov	w1, w0
   1ea94:	add	x0, sp, #0x3c
   1ea98:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ea9c:	and	w0, w0, #0xff
   1eaa0:	eor	w0, w0, #0x1
   1eaa4:	and	w0, w0, #0xff
   1eaa8:	cmp	w0, #0x0
   1eaac:	b.eq	1eab8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19b48>  // b.none
   1eab0:	mov	w0, #0x0                   	// #0
   1eab4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1eab8:	mov	w2, #0x3                   	// #3
   1eabc:	mov	w1, #0x10                  	// #16
   1eac0:	ldr	w0, [sp, #52]
   1eac4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1eac8:	str	w0, [sp, #3772]
   1eacc:	ldr	x3, [sp, #24]
   1ead0:	ldr	x2, [sp, #32]
   1ead4:	ldr	w1, [sp, #3772]
   1ead8:	ldr	x0, [sp, #40]
   1eadc:	bl	1850 <_ZL19DecodeVecShiftL8ImmRN4llvm6MCInstEjmPKv>
   1eae0:	mov	w1, w0
   1eae4:	add	x0, sp, #0x3c
   1eae8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1eaec:	and	w0, w0, #0xff
   1eaf0:	eor	w0, w0, #0x1
   1eaf4:	and	w0, w0, #0xff
   1eaf8:	cmp	w0, #0x0
   1eafc:	b.eq	1eb08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19b98>  // b.none
   1eb00:	mov	w0, #0x0                   	// #0
   1eb04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1eb08:	ldr	w0, [sp, #60]
   1eb0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1eb10:	mov	w2, #0x5                   	// #5
   1eb14:	mov	w1, #0x0                   	// #0
   1eb18:	ldr	w0, [sp, #52]
   1eb1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1eb20:	str	w0, [sp, #3772]
   1eb24:	ldr	x3, [sp, #24]
   1eb28:	ldr	x2, [sp, #32]
   1eb2c:	ldr	w1, [sp, #3772]
   1eb30:	ldr	x0, [sp, #40]
   1eb34:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1eb38:	mov	w1, w0
   1eb3c:	add	x0, sp, #0x3c
   1eb40:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1eb44:	and	w0, w0, #0xff
   1eb48:	eor	w0, w0, #0x1
   1eb4c:	and	w0, w0, #0xff
   1eb50:	cmp	w0, #0x0
   1eb54:	b.eq	1eb60 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19bf0>  // b.none
   1eb58:	mov	w0, #0x0                   	// #0
   1eb5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1eb60:	mov	w2, #0x5                   	// #5
   1eb64:	mov	w1, #0x0                   	// #0
   1eb68:	ldr	w0, [sp, #52]
   1eb6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1eb70:	str	w0, [sp, #3772]
   1eb74:	ldr	x3, [sp, #24]
   1eb78:	ldr	x2, [sp, #32]
   1eb7c:	ldr	w1, [sp, #3772]
   1eb80:	ldr	x0, [sp, #40]
   1eb84:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1eb88:	mov	w1, w0
   1eb8c:	add	x0, sp, #0x3c
   1eb90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1eb94:	and	w0, w0, #0xff
   1eb98:	eor	w0, w0, #0x1
   1eb9c:	and	w0, w0, #0xff
   1eba0:	cmp	w0, #0x0
   1eba4:	b.eq	1ebb0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19c40>  // b.none
   1eba8:	mov	w0, #0x0                   	// #0
   1ebac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ebb0:	mov	w2, #0x5                   	// #5
   1ebb4:	mov	w1, #0x5                   	// #5
   1ebb8:	ldr	w0, [sp, #52]
   1ebbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ebc0:	str	w0, [sp, #3772]
   1ebc4:	ldr	x3, [sp, #24]
   1ebc8:	ldr	x2, [sp, #32]
   1ebcc:	ldr	w1, [sp, #3772]
   1ebd0:	ldr	x0, [sp, #40]
   1ebd4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ebd8:	mov	w1, w0
   1ebdc:	add	x0, sp, #0x3c
   1ebe0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ebe4:	and	w0, w0, #0xff
   1ebe8:	eor	w0, w0, #0x1
   1ebec:	and	w0, w0, #0xff
   1ebf0:	cmp	w0, #0x0
   1ebf4:	b.eq	1ec00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19c90>  // b.none
   1ebf8:	mov	w0, #0x0                   	// #0
   1ebfc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ec00:	mov	w2, #0x4                   	// #4
   1ec04:	mov	w1, #0x10                  	// #16
   1ec08:	ldr	w0, [sp, #52]
   1ec0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ec10:	str	w0, [sp, #3772]
   1ec14:	ldr	x3, [sp, #24]
   1ec18:	ldr	x2, [sp, #32]
   1ec1c:	ldr	w1, [sp, #3772]
   1ec20:	ldr	x0, [sp, #40]
   1ec24:	bl	1820 <_ZL20DecodeVecShiftL16ImmRN4llvm6MCInstEjmPKv>
   1ec28:	mov	w1, w0
   1ec2c:	add	x0, sp, #0x3c
   1ec30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ec34:	and	w0, w0, #0xff
   1ec38:	eor	w0, w0, #0x1
   1ec3c:	and	w0, w0, #0xff
   1ec40:	cmp	w0, #0x0
   1ec44:	b.eq	1ec50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19ce0>  // b.none
   1ec48:	mov	w0, #0x0                   	// #0
   1ec4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ec50:	ldr	w0, [sp, #60]
   1ec54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ec58:	mov	w2, #0x5                   	// #5
   1ec5c:	mov	w1, #0x0                   	// #0
   1ec60:	ldr	w0, [sp, #52]
   1ec64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ec68:	str	w0, [sp, #3772]
   1ec6c:	ldr	x3, [sp, #24]
   1ec70:	ldr	x2, [sp, #32]
   1ec74:	ldr	w1, [sp, #3772]
   1ec78:	ldr	x0, [sp, #40]
   1ec7c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ec80:	mov	w1, w0
   1ec84:	add	x0, sp, #0x3c
   1ec88:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ec8c:	and	w0, w0, #0xff
   1ec90:	eor	w0, w0, #0x1
   1ec94:	and	w0, w0, #0xff
   1ec98:	cmp	w0, #0x0
   1ec9c:	b.eq	1eca8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19d38>  // b.none
   1eca0:	mov	w0, #0x0                   	// #0
   1eca4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1eca8:	mov	w2, #0x5                   	// #5
   1ecac:	mov	w1, #0x0                   	// #0
   1ecb0:	ldr	w0, [sp, #52]
   1ecb4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ecb8:	str	w0, [sp, #3772]
   1ecbc:	ldr	x3, [sp, #24]
   1ecc0:	ldr	x2, [sp, #32]
   1ecc4:	ldr	w1, [sp, #3772]
   1ecc8:	ldr	x0, [sp, #40]
   1eccc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ecd0:	mov	w1, w0
   1ecd4:	add	x0, sp, #0x3c
   1ecd8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ecdc:	and	w0, w0, #0xff
   1ece0:	eor	w0, w0, #0x1
   1ece4:	and	w0, w0, #0xff
   1ece8:	cmp	w0, #0x0
   1ecec:	b.eq	1ecf8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19d88>  // b.none
   1ecf0:	mov	w0, #0x0                   	// #0
   1ecf4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ecf8:	mov	w2, #0x5                   	// #5
   1ecfc:	mov	w1, #0x5                   	// #5
   1ed00:	ldr	w0, [sp, #52]
   1ed04:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ed08:	str	w0, [sp, #3772]
   1ed0c:	ldr	x3, [sp, #24]
   1ed10:	ldr	x2, [sp, #32]
   1ed14:	ldr	w1, [sp, #3772]
   1ed18:	ldr	x0, [sp, #40]
   1ed1c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ed20:	mov	w1, w0
   1ed24:	add	x0, sp, #0x3c
   1ed28:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ed2c:	and	w0, w0, #0xff
   1ed30:	eor	w0, w0, #0x1
   1ed34:	and	w0, w0, #0xff
   1ed38:	cmp	w0, #0x0
   1ed3c:	b.eq	1ed48 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19dd8>  // b.none
   1ed40:	mov	w0, #0x0                   	// #0
   1ed44:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ed48:	mov	w2, #0x5                   	// #5
   1ed4c:	mov	w1, #0x10                  	// #16
   1ed50:	ldr	w0, [sp, #52]
   1ed54:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ed58:	str	w0, [sp, #3772]
   1ed5c:	ldr	x3, [sp, #24]
   1ed60:	ldr	x2, [sp, #32]
   1ed64:	ldr	w1, [sp, #3772]
   1ed68:	ldr	x0, [sp, #40]
   1ed6c:	bl	17f0 <_ZL20DecodeVecShiftL32ImmRN4llvm6MCInstEjmPKv>
   1ed70:	mov	w1, w0
   1ed74:	add	x0, sp, #0x3c
   1ed78:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ed7c:	and	w0, w0, #0xff
   1ed80:	eor	w0, w0, #0x1
   1ed84:	and	w0, w0, #0xff
   1ed88:	cmp	w0, #0x0
   1ed8c:	b.eq	1ed98 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19e28>  // b.none
   1ed90:	mov	w0, #0x0                   	// #0
   1ed94:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ed98:	ldr	w0, [sp, #60]
   1ed9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1eda0:	mov	w2, #0x5                   	// #5
   1eda4:	mov	w1, #0x0                   	// #0
   1eda8:	ldr	w0, [sp, #52]
   1edac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1edb0:	str	w0, [sp, #3772]
   1edb4:	ldr	x3, [sp, #24]
   1edb8:	ldr	x2, [sp, #32]
   1edbc:	ldr	w1, [sp, #3772]
   1edc0:	ldr	x0, [sp, #40]
   1edc4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1edc8:	mov	w1, w0
   1edcc:	add	x0, sp, #0x3c
   1edd0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1edd4:	and	w0, w0, #0xff
   1edd8:	eor	w0, w0, #0x1
   1eddc:	and	w0, w0, #0xff
   1ede0:	cmp	w0, #0x0
   1ede4:	b.eq	1edf0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19e80>  // b.none
   1ede8:	mov	w0, #0x0                   	// #0
   1edec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1edf0:	mov	w2, #0x5                   	// #5
   1edf4:	mov	w1, #0x0                   	// #0
   1edf8:	ldr	w0, [sp, #52]
   1edfc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ee00:	str	w0, [sp, #3772]
   1ee04:	ldr	x3, [sp, #24]
   1ee08:	ldr	x2, [sp, #32]
   1ee0c:	ldr	w1, [sp, #3772]
   1ee10:	ldr	x0, [sp, #40]
   1ee14:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ee18:	mov	w1, w0
   1ee1c:	add	x0, sp, #0x3c
   1ee20:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ee24:	and	w0, w0, #0xff
   1ee28:	eor	w0, w0, #0x1
   1ee2c:	and	w0, w0, #0xff
   1ee30:	cmp	w0, #0x0
   1ee34:	b.eq	1ee40 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19ed0>  // b.none
   1ee38:	mov	w0, #0x0                   	// #0
   1ee3c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ee40:	mov	w2, #0x5                   	// #5
   1ee44:	mov	w1, #0x5                   	// #5
   1ee48:	ldr	w0, [sp, #52]
   1ee4c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ee50:	str	w0, [sp, #3772]
   1ee54:	ldr	x3, [sp, #24]
   1ee58:	ldr	x2, [sp, #32]
   1ee5c:	ldr	w1, [sp, #3772]
   1ee60:	ldr	x0, [sp, #40]
   1ee64:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1ee68:	mov	w1, w0
   1ee6c:	add	x0, sp, #0x3c
   1ee70:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ee74:	and	w0, w0, #0xff
   1ee78:	eor	w0, w0, #0x1
   1ee7c:	and	w0, w0, #0xff
   1ee80:	cmp	w0, #0x0
   1ee84:	b.eq	1ee90 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19f20>  // b.none
   1ee88:	mov	w0, #0x0                   	// #0
   1ee8c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ee90:	mov	w2, #0x4                   	// #4
   1ee94:	mov	w1, #0x10                  	// #16
   1ee98:	ldr	w0, [sp, #52]
   1ee9c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1eea0:	str	w0, [sp, #3772]
   1eea4:	ldr	x3, [sp, #24]
   1eea8:	ldr	x2, [sp, #32]
   1eeac:	ldr	w1, [sp, #3772]
   1eeb0:	ldr	x0, [sp, #40]
   1eeb4:	bl	8a8 <_ZL28DecodeFPR128_loRegisterClassRN4llvm6MCInstEjmPKv>
   1eeb8:	mov	w1, w0
   1eebc:	add	x0, sp, #0x3c
   1eec0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1eec4:	and	w0, w0, #0xff
   1eec8:	eor	w0, w0, #0x1
   1eecc:	and	w0, w0, #0xff
   1eed0:	cmp	w0, #0x0
   1eed4:	b.eq	1eee0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x19f70>  // b.none
   1eed8:	mov	w0, #0x0                   	// #0
   1eedc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1eee0:	str	wzr, [sp, #3772]
   1eee4:	mov	w2, #0x1                   	// #1
   1eee8:	mov	w1, #0xb                   	// #11
   1eeec:	ldr	w0, [sp, #52]
   1eef0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1eef4:	lsl	w0, w0, #2
   1eef8:	ldr	w1, [sp, #3772]
   1eefc:	orr	w0, w1, w0
   1ef00:	str	w0, [sp, #3772]
   1ef04:	mov	w2, #0x2                   	// #2
   1ef08:	mov	w1, #0x14                  	// #20
   1ef0c:	ldr	w0, [sp, #52]
   1ef10:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ef14:	mov	w1, w0
   1ef18:	ldr	w0, [sp, #3772]
   1ef1c:	orr	w0, w0, w1
   1ef20:	str	w0, [sp, #3772]
   1ef24:	ldr	w0, [sp, #3772]
   1ef28:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1ef2c:	add	x2, sp, #0xa00
   1ef30:	stp	x0, x1, [x2, #-152]
   1ef34:	add	x0, sp, #0x968
   1ef38:	mov	x1, x0
   1ef3c:	ldr	x0, [sp, #40]
   1ef40:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1ef44:	ldr	w0, [sp, #60]
   1ef48:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ef4c:	mov	w2, #0x5                   	// #5
   1ef50:	mov	w1, #0x0                   	// #0
   1ef54:	ldr	w0, [sp, #52]
   1ef58:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ef5c:	str	w0, [sp, #3772]
   1ef60:	ldr	x3, [sp, #24]
   1ef64:	ldr	x2, [sp, #32]
   1ef68:	ldr	w1, [sp, #3772]
   1ef6c:	ldr	x0, [sp, #40]
   1ef70:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ef74:	mov	w1, w0
   1ef78:	add	x0, sp, #0x3c
   1ef7c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ef80:	and	w0, w0, #0xff
   1ef84:	eor	w0, w0, #0x1
   1ef88:	and	w0, w0, #0xff
   1ef8c:	cmp	w0, #0x0
   1ef90:	b.eq	1ef9c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a02c>  // b.none
   1ef94:	mov	w0, #0x0                   	// #0
   1ef98:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ef9c:	mov	w2, #0x5                   	// #5
   1efa0:	mov	w1, #0x5                   	// #5
   1efa4:	ldr	w0, [sp, #52]
   1efa8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1efac:	str	w0, [sp, #3772]
   1efb0:	ldr	x3, [sp, #24]
   1efb4:	ldr	x2, [sp, #32]
   1efb8:	ldr	w1, [sp, #3772]
   1efbc:	ldr	x0, [sp, #40]
   1efc0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1efc4:	mov	w1, w0
   1efc8:	add	x0, sp, #0x3c
   1efcc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1efd0:	and	w0, w0, #0xff
   1efd4:	eor	w0, w0, #0x1
   1efd8:	and	w0, w0, #0xff
   1efdc:	cmp	w0, #0x0
   1efe0:	b.eq	1efec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a07c>  // b.none
   1efe4:	mov	w0, #0x0                   	// #0
   1efe8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1efec:	mov	w2, #0x4                   	// #4
   1eff0:	mov	w1, #0x10                  	// #16
   1eff4:	ldr	w0, [sp, #52]
   1eff8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1effc:	str	w0, [sp, #3772]
   1f000:	ldr	x3, [sp, #24]
   1f004:	ldr	x2, [sp, #32]
   1f008:	ldr	w1, [sp, #3772]
   1f00c:	ldr	x0, [sp, #40]
   1f010:	bl	8a8 <_ZL28DecodeFPR128_loRegisterClassRN4llvm6MCInstEjmPKv>
   1f014:	mov	w1, w0
   1f018:	add	x0, sp, #0x3c
   1f01c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f020:	and	w0, w0, #0xff
   1f024:	eor	w0, w0, #0x1
   1f028:	and	w0, w0, #0xff
   1f02c:	cmp	w0, #0x0
   1f030:	b.eq	1f03c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a0cc>  // b.none
   1f034:	mov	w0, #0x0                   	// #0
   1f038:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f03c:	str	wzr, [sp, #3772]
   1f040:	mov	w2, #0x1                   	// #1
   1f044:	mov	w1, #0xb                   	// #11
   1f048:	ldr	w0, [sp, #52]
   1f04c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f050:	lsl	w0, w0, #2
   1f054:	ldr	w1, [sp, #3772]
   1f058:	orr	w0, w1, w0
   1f05c:	str	w0, [sp, #3772]
   1f060:	mov	w2, #0x2                   	// #2
   1f064:	mov	w1, #0x14                  	// #20
   1f068:	ldr	w0, [sp, #52]
   1f06c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f070:	mov	w1, w0
   1f074:	ldr	w0, [sp, #3772]
   1f078:	orr	w0, w0, w1
   1f07c:	str	w0, [sp, #3772]
   1f080:	ldr	w0, [sp, #3772]
   1f084:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1f088:	add	x2, sp, #0xa00
   1f08c:	stp	x0, x1, [x2, #-136]
   1f090:	add	x0, sp, #0x978
   1f094:	mov	x1, x0
   1f098:	ldr	x0, [sp, #40]
   1f09c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1f0a0:	ldr	w0, [sp, #60]
   1f0a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f0a8:	mov	w2, #0x5                   	// #5
   1f0ac:	mov	w1, #0x0                   	// #0
   1f0b0:	ldr	w0, [sp, #52]
   1f0b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f0b8:	str	w0, [sp, #3772]
   1f0bc:	ldr	x3, [sp, #24]
   1f0c0:	ldr	x2, [sp, #32]
   1f0c4:	ldr	w1, [sp, #3772]
   1f0c8:	ldr	x0, [sp, #40]
   1f0cc:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1f0d0:	mov	w1, w0
   1f0d4:	add	x0, sp, #0x3c
   1f0d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f0dc:	and	w0, w0, #0xff
   1f0e0:	eor	w0, w0, #0x1
   1f0e4:	and	w0, w0, #0xff
   1f0e8:	cmp	w0, #0x0
   1f0ec:	b.eq	1f0f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a188>  // b.none
   1f0f0:	mov	w0, #0x0                   	// #0
   1f0f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f0f8:	mov	w2, #0x5                   	// #5
   1f0fc:	mov	w1, #0x0                   	// #0
   1f100:	ldr	w0, [sp, #52]
   1f104:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f108:	str	w0, [sp, #3772]
   1f10c:	ldr	x3, [sp, #24]
   1f110:	ldr	x2, [sp, #32]
   1f114:	ldr	w1, [sp, #3772]
   1f118:	ldr	x0, [sp, #40]
   1f11c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1f120:	mov	w1, w0
   1f124:	add	x0, sp, #0x3c
   1f128:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f12c:	and	w0, w0, #0xff
   1f130:	eor	w0, w0, #0x1
   1f134:	and	w0, w0, #0xff
   1f138:	cmp	w0, #0x0
   1f13c:	b.eq	1f148 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a1d8>  // b.none
   1f140:	mov	w0, #0x0                   	// #0
   1f144:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f148:	mov	w2, #0x5                   	// #5
   1f14c:	mov	w1, #0x5                   	// #5
   1f150:	ldr	w0, [sp, #52]
   1f154:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f158:	str	w0, [sp, #3772]
   1f15c:	ldr	x3, [sp, #24]
   1f160:	ldr	x2, [sp, #32]
   1f164:	ldr	w1, [sp, #3772]
   1f168:	ldr	x0, [sp, #40]
   1f16c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1f170:	mov	w1, w0
   1f174:	add	x0, sp, #0x3c
   1f178:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f17c:	and	w0, w0, #0xff
   1f180:	eor	w0, w0, #0x1
   1f184:	and	w0, w0, #0xff
   1f188:	cmp	w0, #0x0
   1f18c:	b.eq	1f198 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a228>  // b.none
   1f190:	mov	w0, #0x0                   	// #0
   1f194:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f198:	mov	w2, #0x5                   	// #5
   1f19c:	mov	w1, #0x10                  	// #16
   1f1a0:	ldr	w0, [sp, #52]
   1f1a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f1a8:	str	w0, [sp, #3772]
   1f1ac:	ldr	x3, [sp, #24]
   1f1b0:	ldr	x2, [sp, #32]
   1f1b4:	ldr	w1, [sp, #3772]
   1f1b8:	ldr	x0, [sp, #40]
   1f1bc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f1c0:	mov	w1, w0
   1f1c4:	add	x0, sp, #0x3c
   1f1c8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f1cc:	and	w0, w0, #0xff
   1f1d0:	eor	w0, w0, #0x1
   1f1d4:	and	w0, w0, #0xff
   1f1d8:	cmp	w0, #0x0
   1f1dc:	b.eq	1f1e8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a278>  // b.none
   1f1e0:	mov	w0, #0x0                   	// #0
   1f1e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f1e8:	mov	w2, #0x1                   	// #1
   1f1ec:	mov	w1, #0x15                  	// #21
   1f1f0:	ldr	w0, [sp, #52]
   1f1f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f1f8:	str	w0, [sp, #3772]
   1f1fc:	ldr	w0, [sp, #3772]
   1f200:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1f204:	add	x2, sp, #0xa00
   1f208:	stp	x0, x1, [x2, #-120]
   1f20c:	add	x0, sp, #0x988
   1f210:	mov	x1, x0
   1f214:	ldr	x0, [sp, #40]
   1f218:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1f21c:	mov	w2, #0x2                   	// #2
   1f220:	mov	w1, #0xd                   	// #13
   1f224:	ldr	w0, [sp, #52]
   1f228:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f22c:	str	w0, [sp, #3772]
   1f230:	ldr	w0, [sp, #3772]
   1f234:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1f238:	add	x2, sp, #0xa00
   1f23c:	stp	x0, x1, [x2, #-104]
   1f240:	add	x0, sp, #0x998
   1f244:	mov	x1, x0
   1f248:	ldr	x0, [sp, #40]
   1f24c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1f250:	ldr	w0, [sp, #60]
   1f254:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f258:	mov	w2, #0x5                   	// #5
   1f25c:	mov	w1, #0x0                   	// #0
   1f260:	ldr	w0, [sp, #52]
   1f264:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f268:	str	w0, [sp, #3772]
   1f26c:	ldr	x3, [sp, #24]
   1f270:	ldr	x2, [sp, #32]
   1f274:	ldr	w1, [sp, #3772]
   1f278:	ldr	x0, [sp, #40]
   1f27c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f280:	mov	w1, w0
   1f284:	add	x0, sp, #0x3c
   1f288:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f28c:	and	w0, w0, #0xff
   1f290:	eor	w0, w0, #0x1
   1f294:	and	w0, w0, #0xff
   1f298:	cmp	w0, #0x0
   1f29c:	b.eq	1f2a8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a338>  // b.none
   1f2a0:	mov	w0, #0x0                   	// #0
   1f2a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f2a8:	mov	w2, #0x5                   	// #5
   1f2ac:	mov	w1, #0x5                   	// #5
   1f2b0:	ldr	w0, [sp, #52]
   1f2b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f2b8:	str	w0, [sp, #3772]
   1f2bc:	ldr	x3, [sp, #24]
   1f2c0:	ldr	x2, [sp, #32]
   1f2c4:	ldr	w1, [sp, #3772]
   1f2c8:	ldr	x0, [sp, #40]
   1f2cc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f2d0:	mov	w1, w0
   1f2d4:	add	x0, sp, #0x3c
   1f2d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f2dc:	and	w0, w0, #0xff
   1f2e0:	eor	w0, w0, #0x1
   1f2e4:	and	w0, w0, #0xff
   1f2e8:	cmp	w0, #0x0
   1f2ec:	b.eq	1f2f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a388>  // b.none
   1f2f0:	mov	w0, #0x0                   	// #0
   1f2f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f2f8:	mov	w2, #0x6                   	// #6
   1f2fc:	mov	w1, #0x10                  	// #16
   1f300:	ldr	w0, [sp, #52]
   1f304:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f308:	str	w0, [sp, #3772]
   1f30c:	ldr	x3, [sp, #24]
   1f310:	ldr	x2, [sp, #32]
   1f314:	ldr	w1, [sp, #3772]
   1f318:	ldr	x0, [sp, #40]
   1f31c:	bl	1658 <_ZL20DecodeVecShiftR64ImmRN4llvm6MCInstEjmPKv>
   1f320:	mov	w1, w0
   1f324:	add	x0, sp, #0x3c
   1f328:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f32c:	and	w0, w0, #0xff
   1f330:	eor	w0, w0, #0x1
   1f334:	and	w0, w0, #0xff
   1f338:	cmp	w0, #0x0
   1f33c:	b.eq	1f348 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a3d8>  // b.none
   1f340:	mov	w0, #0x0                   	// #0
   1f344:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f348:	ldr	w0, [sp, #60]
   1f34c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f350:	mov	w2, #0x5                   	// #5
   1f354:	mov	w1, #0x0                   	// #0
   1f358:	ldr	w0, [sp, #52]
   1f35c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f360:	str	w0, [sp, #3772]
   1f364:	ldr	x3, [sp, #24]
   1f368:	ldr	x2, [sp, #32]
   1f36c:	ldr	w1, [sp, #3772]
   1f370:	ldr	x0, [sp, #40]
   1f374:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f378:	mov	w1, w0
   1f37c:	add	x0, sp, #0x3c
   1f380:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f384:	and	w0, w0, #0xff
   1f388:	eor	w0, w0, #0x1
   1f38c:	and	w0, w0, #0xff
   1f390:	cmp	w0, #0x0
   1f394:	b.eq	1f3a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a430>  // b.none
   1f398:	mov	w0, #0x0                   	// #0
   1f39c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f3a0:	mov	w2, #0x5                   	// #5
   1f3a4:	mov	w1, #0x0                   	// #0
   1f3a8:	ldr	w0, [sp, #52]
   1f3ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f3b0:	str	w0, [sp, #3772]
   1f3b4:	ldr	x3, [sp, #24]
   1f3b8:	ldr	x2, [sp, #32]
   1f3bc:	ldr	w1, [sp, #3772]
   1f3c0:	ldr	x0, [sp, #40]
   1f3c4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f3c8:	mov	w1, w0
   1f3cc:	add	x0, sp, #0x3c
   1f3d0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f3d4:	and	w0, w0, #0xff
   1f3d8:	eor	w0, w0, #0x1
   1f3dc:	and	w0, w0, #0xff
   1f3e0:	cmp	w0, #0x0
   1f3e4:	b.eq	1f3f0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a480>  // b.none
   1f3e8:	mov	w0, #0x0                   	// #0
   1f3ec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f3f0:	mov	w2, #0x5                   	// #5
   1f3f4:	mov	w1, #0x5                   	// #5
   1f3f8:	ldr	w0, [sp, #52]
   1f3fc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f400:	str	w0, [sp, #3772]
   1f404:	ldr	x3, [sp, #24]
   1f408:	ldr	x2, [sp, #32]
   1f40c:	ldr	w1, [sp, #3772]
   1f410:	ldr	x0, [sp, #40]
   1f414:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f418:	mov	w1, w0
   1f41c:	add	x0, sp, #0x3c
   1f420:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f424:	and	w0, w0, #0xff
   1f428:	eor	w0, w0, #0x1
   1f42c:	and	w0, w0, #0xff
   1f430:	cmp	w0, #0x0
   1f434:	b.eq	1f440 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a4d0>  // b.none
   1f438:	mov	w0, #0x0                   	// #0
   1f43c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f440:	mov	w2, #0x6                   	// #6
   1f444:	mov	w1, #0x10                  	// #16
   1f448:	ldr	w0, [sp, #52]
   1f44c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f450:	str	w0, [sp, #3772]
   1f454:	ldr	x3, [sp, #24]
   1f458:	ldr	x2, [sp, #32]
   1f45c:	ldr	w1, [sp, #3772]
   1f460:	ldr	x0, [sp, #40]
   1f464:	bl	1658 <_ZL20DecodeVecShiftR64ImmRN4llvm6MCInstEjmPKv>
   1f468:	mov	w1, w0
   1f46c:	add	x0, sp, #0x3c
   1f470:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f474:	and	w0, w0, #0xff
   1f478:	eor	w0, w0, #0x1
   1f47c:	and	w0, w0, #0xff
   1f480:	cmp	w0, #0x0
   1f484:	b.eq	1f490 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a520>  // b.none
   1f488:	mov	w0, #0x0                   	// #0
   1f48c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f490:	ldr	w0, [sp, #60]
   1f494:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f498:	mov	w2, #0x5                   	// #5
   1f49c:	mov	w1, #0x0                   	// #0
   1f4a0:	ldr	w0, [sp, #52]
   1f4a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f4a8:	str	w0, [sp, #3772]
   1f4ac:	ldr	x3, [sp, #24]
   1f4b0:	ldr	x2, [sp, #32]
   1f4b4:	ldr	w1, [sp, #3772]
   1f4b8:	ldr	x0, [sp, #40]
   1f4bc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f4c0:	mov	w1, w0
   1f4c4:	add	x0, sp, #0x3c
   1f4c8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f4cc:	and	w0, w0, #0xff
   1f4d0:	eor	w0, w0, #0x1
   1f4d4:	and	w0, w0, #0xff
   1f4d8:	cmp	w0, #0x0
   1f4dc:	b.eq	1f4e8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a578>  // b.none
   1f4e0:	mov	w0, #0x0                   	// #0
   1f4e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f4e8:	mov	w2, #0x5                   	// #5
   1f4ec:	mov	w1, #0x5                   	// #5
   1f4f0:	ldr	w0, [sp, #52]
   1f4f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f4f8:	str	w0, [sp, #3772]
   1f4fc:	ldr	x3, [sp, #24]
   1f500:	ldr	x2, [sp, #32]
   1f504:	ldr	w1, [sp, #3772]
   1f508:	ldr	x0, [sp, #40]
   1f50c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f510:	mov	w1, w0
   1f514:	add	x0, sp, #0x3c
   1f518:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f51c:	and	w0, w0, #0xff
   1f520:	eor	w0, w0, #0x1
   1f524:	and	w0, w0, #0xff
   1f528:	cmp	w0, #0x0
   1f52c:	b.eq	1f538 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a5c8>  // b.none
   1f530:	mov	w0, #0x0                   	// #0
   1f534:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f538:	mov	w2, #0x6                   	// #6
   1f53c:	mov	w1, #0x10                  	// #16
   1f540:	ldr	w0, [sp, #52]
   1f544:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f548:	str	w0, [sp, #3772]
   1f54c:	ldr	x3, [sp, #24]
   1f550:	ldr	x2, [sp, #32]
   1f554:	ldr	w1, [sp, #3772]
   1f558:	ldr	x0, [sp, #40]
   1f55c:	bl	17c0 <_ZL20DecodeVecShiftL64ImmRN4llvm6MCInstEjmPKv>
   1f560:	mov	w1, w0
   1f564:	add	x0, sp, #0x3c
   1f568:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f56c:	and	w0, w0, #0xff
   1f570:	eor	w0, w0, #0x1
   1f574:	and	w0, w0, #0xff
   1f578:	cmp	w0, #0x0
   1f57c:	b.eq	1f588 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a618>  // b.none
   1f580:	mov	w0, #0x0                   	// #0
   1f584:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f588:	ldr	w0, [sp, #60]
   1f58c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f590:	mov	w2, #0x5                   	// #5
   1f594:	mov	w1, #0x0                   	// #0
   1f598:	ldr	w0, [sp, #52]
   1f59c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f5a0:	str	w0, [sp, #3772]
   1f5a4:	ldr	x3, [sp, #24]
   1f5a8:	ldr	x2, [sp, #32]
   1f5ac:	ldr	w1, [sp, #3772]
   1f5b0:	ldr	x0, [sp, #40]
   1f5b4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f5b8:	mov	w1, w0
   1f5bc:	add	x0, sp, #0x3c
   1f5c0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f5c4:	and	w0, w0, #0xff
   1f5c8:	eor	w0, w0, #0x1
   1f5cc:	and	w0, w0, #0xff
   1f5d0:	cmp	w0, #0x0
   1f5d4:	b.eq	1f5e0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a670>  // b.none
   1f5d8:	mov	w0, #0x0                   	// #0
   1f5dc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f5e0:	mov	w2, #0x5                   	// #5
   1f5e4:	mov	w1, #0x0                   	// #0
   1f5e8:	ldr	w0, [sp, #52]
   1f5ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f5f0:	str	w0, [sp, #3772]
   1f5f4:	ldr	x3, [sp, #24]
   1f5f8:	ldr	x2, [sp, #32]
   1f5fc:	ldr	w1, [sp, #3772]
   1f600:	ldr	x0, [sp, #40]
   1f604:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f608:	mov	w1, w0
   1f60c:	add	x0, sp, #0x3c
   1f610:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f614:	and	w0, w0, #0xff
   1f618:	eor	w0, w0, #0x1
   1f61c:	and	w0, w0, #0xff
   1f620:	cmp	w0, #0x0
   1f624:	b.eq	1f630 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a6c0>  // b.none
   1f628:	mov	w0, #0x0                   	// #0
   1f62c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f630:	mov	w2, #0x5                   	// #5
   1f634:	mov	w1, #0x5                   	// #5
   1f638:	ldr	w0, [sp, #52]
   1f63c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f640:	str	w0, [sp, #3772]
   1f644:	ldr	x3, [sp, #24]
   1f648:	ldr	x2, [sp, #32]
   1f64c:	ldr	w1, [sp, #3772]
   1f650:	ldr	x0, [sp, #40]
   1f654:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f658:	mov	w1, w0
   1f65c:	add	x0, sp, #0x3c
   1f660:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f664:	and	w0, w0, #0xff
   1f668:	eor	w0, w0, #0x1
   1f66c:	and	w0, w0, #0xff
   1f670:	cmp	w0, #0x0
   1f674:	b.eq	1f680 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a710>  // b.none
   1f678:	mov	w0, #0x0                   	// #0
   1f67c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f680:	mov	w2, #0x5                   	// #5
   1f684:	mov	w1, #0x10                  	// #16
   1f688:	ldr	w0, [sp, #52]
   1f68c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f690:	str	w0, [sp, #3772]
   1f694:	ldr	x3, [sp, #24]
   1f698:	ldr	x2, [sp, #32]
   1f69c:	ldr	w1, [sp, #3772]
   1f6a0:	ldr	x0, [sp, #40]
   1f6a4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f6a8:	mov	w1, w0
   1f6ac:	add	x0, sp, #0x3c
   1f6b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f6b4:	and	w0, w0, #0xff
   1f6b8:	eor	w0, w0, #0x1
   1f6bc:	and	w0, w0, #0xff
   1f6c0:	cmp	w0, #0x0
   1f6c4:	b.eq	1f6d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a760>  // b.none
   1f6c8:	mov	w0, #0x0                   	// #0
   1f6cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f6d0:	str	wzr, [sp, #3772]
   1f6d4:	mov	w2, #0x1                   	// #1
   1f6d8:	mov	w1, #0xb                   	// #11
   1f6dc:	ldr	w0, [sp, #52]
   1f6e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f6e4:	lsl	w0, w0, #1
   1f6e8:	ldr	w1, [sp, #3772]
   1f6ec:	orr	w0, w1, w0
   1f6f0:	str	w0, [sp, #3772]
   1f6f4:	mov	w2, #0x1                   	// #1
   1f6f8:	mov	w1, #0x15                  	// #21
   1f6fc:	ldr	w0, [sp, #52]
   1f700:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f704:	mov	w1, w0
   1f708:	ldr	w0, [sp, #3772]
   1f70c:	orr	w0, w0, w1
   1f710:	str	w0, [sp, #3772]
   1f714:	ldr	w0, [sp, #3772]
   1f718:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1f71c:	add	x2, sp, #0xa00
   1f720:	stp	x0, x1, [x2, #-88]
   1f724:	add	x0, sp, #0x9a8
   1f728:	mov	x1, x0
   1f72c:	ldr	x0, [sp, #40]
   1f730:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1f734:	mov	w2, #0x2                   	// #2
   1f738:	mov	w1, #0xd                   	// #13
   1f73c:	ldr	w0, [sp, #52]
   1f740:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f744:	str	w0, [sp, #3772]
   1f748:	ldr	w0, [sp, #3772]
   1f74c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1f750:	add	x2, sp, #0xa00
   1f754:	stp	x0, x1, [x2, #-72]
   1f758:	add	x0, sp, #0x9b8
   1f75c:	mov	x1, x0
   1f760:	ldr	x0, [sp, #40]
   1f764:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1f768:	ldr	w0, [sp, #60]
   1f76c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f770:	mov	w2, #0x5                   	// #5
   1f774:	mov	w1, #0x0                   	// #0
   1f778:	ldr	w0, [sp, #52]
   1f77c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f780:	str	w0, [sp, #3772]
   1f784:	ldr	x3, [sp, #24]
   1f788:	ldr	x2, [sp, #32]
   1f78c:	ldr	w1, [sp, #3772]
   1f790:	ldr	x0, [sp, #40]
   1f794:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f798:	mov	w1, w0
   1f79c:	add	x0, sp, #0x3c
   1f7a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f7a4:	and	w0, w0, #0xff
   1f7a8:	eor	w0, w0, #0x1
   1f7ac:	and	w0, w0, #0xff
   1f7b0:	cmp	w0, #0x0
   1f7b4:	b.eq	1f7c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a850>  // b.none
   1f7b8:	mov	w0, #0x0                   	// #0
   1f7bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f7c0:	mov	w2, #0x5                   	// #5
   1f7c4:	mov	w1, #0x0                   	// #0
   1f7c8:	ldr	w0, [sp, #52]
   1f7cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f7d0:	str	w0, [sp, #3772]
   1f7d4:	ldr	x3, [sp, #24]
   1f7d8:	ldr	x2, [sp, #32]
   1f7dc:	ldr	w1, [sp, #3772]
   1f7e0:	ldr	x0, [sp, #40]
   1f7e4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f7e8:	mov	w1, w0
   1f7ec:	add	x0, sp, #0x3c
   1f7f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f7f4:	and	w0, w0, #0xff
   1f7f8:	eor	w0, w0, #0x1
   1f7fc:	and	w0, w0, #0xff
   1f800:	cmp	w0, #0x0
   1f804:	b.eq	1f810 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a8a0>  // b.none
   1f808:	mov	w0, #0x0                   	// #0
   1f80c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f810:	mov	w2, #0x5                   	// #5
   1f814:	mov	w1, #0x5                   	// #5
   1f818:	ldr	w0, [sp, #52]
   1f81c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f820:	str	w0, [sp, #3772]
   1f824:	ldr	x3, [sp, #24]
   1f828:	ldr	x2, [sp, #32]
   1f82c:	ldr	w1, [sp, #3772]
   1f830:	ldr	x0, [sp, #40]
   1f834:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f838:	mov	w1, w0
   1f83c:	add	x0, sp, #0x3c
   1f840:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f844:	and	w0, w0, #0xff
   1f848:	eor	w0, w0, #0x1
   1f84c:	and	w0, w0, #0xff
   1f850:	cmp	w0, #0x0
   1f854:	b.eq	1f860 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a8f0>  // b.none
   1f858:	mov	w0, #0x0                   	// #0
   1f85c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f860:	mov	w2, #0x6                   	// #6
   1f864:	mov	w1, #0x10                  	// #16
   1f868:	ldr	w0, [sp, #52]
   1f86c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f870:	str	w0, [sp, #3772]
   1f874:	ldr	x3, [sp, #24]
   1f878:	ldr	x2, [sp, #32]
   1f87c:	ldr	w1, [sp, #3772]
   1f880:	ldr	x0, [sp, #40]
   1f884:	bl	17c0 <_ZL20DecodeVecShiftL64ImmRN4llvm6MCInstEjmPKv>
   1f888:	mov	w1, w0
   1f88c:	add	x0, sp, #0x3c
   1f890:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f894:	and	w0, w0, #0xff
   1f898:	eor	w0, w0, #0x1
   1f89c:	and	w0, w0, #0xff
   1f8a0:	cmp	w0, #0x0
   1f8a4:	b.eq	1f8b0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a940>  // b.none
   1f8a8:	mov	w0, #0x0                   	// #0
   1f8ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f8b0:	ldr	w0, [sp, #60]
   1f8b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f8b8:	mov	w2, #0x5                   	// #5
   1f8bc:	mov	w1, #0x0                   	// #0
   1f8c0:	ldr	w0, [sp, #52]
   1f8c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f8c8:	str	w0, [sp, #3772]
   1f8cc:	ldr	x3, [sp, #24]
   1f8d0:	ldr	x2, [sp, #32]
   1f8d4:	ldr	w1, [sp, #3772]
   1f8d8:	ldr	x0, [sp, #40]
   1f8dc:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1f8e0:	mov	w1, w0
   1f8e4:	add	x0, sp, #0x3c
   1f8e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f8ec:	and	w0, w0, #0xff
   1f8f0:	eor	w0, w0, #0x1
   1f8f4:	and	w0, w0, #0xff
   1f8f8:	cmp	w0, #0x0
   1f8fc:	b.eq	1f908 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a998>  // b.none
   1f900:	mov	w0, #0x0                   	// #0
   1f904:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f908:	mov	w2, #0x5                   	// #5
   1f90c:	mov	w1, #0x0                   	// #0
   1f910:	ldr	w0, [sp, #52]
   1f914:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f918:	str	w0, [sp, #3772]
   1f91c:	ldr	x3, [sp, #24]
   1f920:	ldr	x2, [sp, #32]
   1f924:	ldr	w1, [sp, #3772]
   1f928:	ldr	x0, [sp, #40]
   1f92c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1f930:	mov	w1, w0
   1f934:	add	x0, sp, #0x3c
   1f938:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f93c:	and	w0, w0, #0xff
   1f940:	eor	w0, w0, #0x1
   1f944:	and	w0, w0, #0xff
   1f948:	cmp	w0, #0x0
   1f94c:	b.eq	1f958 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1a9e8>  // b.none
   1f950:	mov	w0, #0x0                   	// #0
   1f954:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f958:	mov	w2, #0x5                   	// #5
   1f95c:	mov	w1, #0x5                   	// #5
   1f960:	ldr	w0, [sp, #52]
   1f964:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f968:	str	w0, [sp, #3772]
   1f96c:	ldr	x3, [sp, #24]
   1f970:	ldr	x2, [sp, #32]
   1f974:	ldr	w1, [sp, #3772]
   1f978:	ldr	x0, [sp, #40]
   1f97c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1f980:	mov	w1, w0
   1f984:	add	x0, sp, #0x3c
   1f988:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f98c:	and	w0, w0, #0xff
   1f990:	eor	w0, w0, #0x1
   1f994:	and	w0, w0, #0xff
   1f998:	cmp	w0, #0x0
   1f99c:	b.eq	1f9a8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1aa38>  // b.none
   1f9a0:	mov	w0, #0x0                   	// #0
   1f9a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f9a8:	mov	w2, #0x4                   	// #4
   1f9ac:	mov	w1, #0x10                  	// #16
   1f9b0:	ldr	w0, [sp, #52]
   1f9b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1f9b8:	str	w0, [sp, #3772]
   1f9bc:	ldr	x3, [sp, #24]
   1f9c0:	ldr	x2, [sp, #32]
   1f9c4:	ldr	w1, [sp, #3772]
   1f9c8:	ldr	x0, [sp, #40]
   1f9cc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1f9d0:	mov	w1, w0
   1f9d4:	add	x0, sp, #0x3c
   1f9d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1f9dc:	and	w0, w0, #0xff
   1f9e0:	eor	w0, w0, #0x1
   1f9e4:	and	w0, w0, #0xff
   1f9e8:	cmp	w0, #0x0
   1f9ec:	b.eq	1f9f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1aa88>  // b.none
   1f9f0:	mov	w0, #0x0                   	// #0
   1f9f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1f9f8:	str	wzr, [sp, #3772]
   1f9fc:	mov	w2, #0x1                   	// #1
   1fa00:	mov	w1, #0xb                   	// #11
   1fa04:	ldr	w0, [sp, #52]
   1fa08:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fa0c:	lsl	w0, w0, #2
   1fa10:	ldr	w1, [sp, #3772]
   1fa14:	orr	w0, w1, w0
   1fa18:	str	w0, [sp, #3772]
   1fa1c:	mov	w2, #0x2                   	// #2
   1fa20:	mov	w1, #0x14                  	// #20
   1fa24:	ldr	w0, [sp, #52]
   1fa28:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fa2c:	mov	w1, w0
   1fa30:	ldr	w0, [sp, #3772]
   1fa34:	orr	w0, w0, w1
   1fa38:	str	w0, [sp, #3772]
   1fa3c:	ldr	w0, [sp, #3772]
   1fa40:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1fa44:	add	x2, sp, #0xa00
   1fa48:	stp	x0, x1, [x2, #-56]
   1fa4c:	add	x0, sp, #0x9c8
   1fa50:	mov	x1, x0
   1fa54:	ldr	x0, [sp, #40]
   1fa58:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1fa5c:	ldr	w0, [sp, #60]
   1fa60:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1fa64:	mov	w2, #0x5                   	// #5
   1fa68:	mov	w1, #0x0                   	// #0
   1fa6c:	ldr	w0, [sp, #52]
   1fa70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fa74:	str	w0, [sp, #3772]
   1fa78:	ldr	x3, [sp, #24]
   1fa7c:	ldr	x2, [sp, #32]
   1fa80:	ldr	w1, [sp, #3772]
   1fa84:	ldr	x0, [sp, #40]
   1fa88:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1fa8c:	mov	w1, w0
   1fa90:	add	x0, sp, #0x3c
   1fa94:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1fa98:	and	w0, w0, #0xff
   1fa9c:	eor	w0, w0, #0x1
   1faa0:	and	w0, w0, #0xff
   1faa4:	cmp	w0, #0x0
   1faa8:	b.eq	1fab4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ab44>  // b.none
   1faac:	mov	w0, #0x0                   	// #0
   1fab0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1fab4:	mov	w2, #0x5                   	// #5
   1fab8:	mov	w1, #0x0                   	// #0
   1fabc:	ldr	w0, [sp, #52]
   1fac0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fac4:	str	w0, [sp, #3772]
   1fac8:	ldr	x3, [sp, #24]
   1facc:	ldr	x2, [sp, #32]
   1fad0:	ldr	w1, [sp, #3772]
   1fad4:	ldr	x0, [sp, #40]
   1fad8:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1fadc:	mov	w1, w0
   1fae0:	add	x0, sp, #0x3c
   1fae4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1fae8:	and	w0, w0, #0xff
   1faec:	eor	w0, w0, #0x1
   1faf0:	and	w0, w0, #0xff
   1faf4:	cmp	w0, #0x0
   1faf8:	b.eq	1fb04 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ab94>  // b.none
   1fafc:	mov	w0, #0x0                   	// #0
   1fb00:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1fb04:	mov	w2, #0x5                   	// #5
   1fb08:	mov	w1, #0x5                   	// #5
   1fb0c:	ldr	w0, [sp, #52]
   1fb10:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fb14:	str	w0, [sp, #3772]
   1fb18:	ldr	x3, [sp, #24]
   1fb1c:	ldr	x2, [sp, #32]
   1fb20:	ldr	w1, [sp, #3772]
   1fb24:	ldr	x0, [sp, #40]
   1fb28:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1fb2c:	mov	w1, w0
   1fb30:	add	x0, sp, #0x3c
   1fb34:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1fb38:	and	w0, w0, #0xff
   1fb3c:	eor	w0, w0, #0x1
   1fb40:	and	w0, w0, #0xff
   1fb44:	cmp	w0, #0x0
   1fb48:	b.eq	1fb54 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1abe4>  // b.none
   1fb4c:	mov	w0, #0x0                   	// #0
   1fb50:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1fb54:	mov	w2, #0x5                   	// #5
   1fb58:	mov	w1, #0x10                  	// #16
   1fb5c:	ldr	w0, [sp, #52]
   1fb60:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fb64:	str	w0, [sp, #3772]
   1fb68:	ldr	x3, [sp, #24]
   1fb6c:	ldr	x2, [sp, #32]
   1fb70:	ldr	w1, [sp, #3772]
   1fb74:	ldr	x0, [sp, #40]
   1fb78:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1fb7c:	mov	w1, w0
   1fb80:	add	x0, sp, #0x3c
   1fb84:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1fb88:	and	w0, w0, #0xff
   1fb8c:	eor	w0, w0, #0x1
   1fb90:	and	w0, w0, #0xff
   1fb94:	cmp	w0, #0x0
   1fb98:	b.eq	1fba4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ac34>  // b.none
   1fb9c:	mov	w0, #0x0                   	// #0
   1fba0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1fba4:	str	wzr, [sp, #3772]
   1fba8:	mov	w2, #0x1                   	// #1
   1fbac:	mov	w1, #0xb                   	// #11
   1fbb0:	ldr	w0, [sp, #52]
   1fbb4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fbb8:	lsl	w0, w0, #1
   1fbbc:	ldr	w1, [sp, #3772]
   1fbc0:	orr	w0, w1, w0
   1fbc4:	str	w0, [sp, #3772]
   1fbc8:	mov	w2, #0x1                   	// #1
   1fbcc:	mov	w1, #0x15                  	// #21
   1fbd0:	ldr	w0, [sp, #52]
   1fbd4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fbd8:	mov	w1, w0
   1fbdc:	ldr	w0, [sp, #3772]
   1fbe0:	orr	w0, w0, w1
   1fbe4:	str	w0, [sp, #3772]
   1fbe8:	ldr	w0, [sp, #3772]
   1fbec:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1fbf0:	add	x2, sp, #0xa00
   1fbf4:	stp	x0, x1, [x2, #-40]
   1fbf8:	add	x0, sp, #0x9d8
   1fbfc:	mov	x1, x0
   1fc00:	ldr	x0, [sp, #40]
   1fc04:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1fc08:	ldr	w0, [sp, #60]
   1fc0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1fc10:	mov	w2, #0x5                   	// #5
   1fc14:	mov	w1, #0x0                   	// #0
   1fc18:	ldr	w0, [sp, #52]
   1fc1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fc20:	str	w0, [sp, #3772]
   1fc24:	ldr	x3, [sp, #24]
   1fc28:	ldr	x2, [sp, #32]
   1fc2c:	ldr	w1, [sp, #3772]
   1fc30:	ldr	x0, [sp, #40]
   1fc34:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1fc38:	mov	w1, w0
   1fc3c:	add	x0, sp, #0x3c
   1fc40:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1fc44:	and	w0, w0, #0xff
   1fc48:	eor	w0, w0, #0x1
   1fc4c:	and	w0, w0, #0xff
   1fc50:	cmp	w0, #0x0
   1fc54:	b.eq	1fc60 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1acf0>  // b.none
   1fc58:	mov	w0, #0x0                   	// #0
   1fc5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1fc60:	mov	w2, #0x5                   	// #5
   1fc64:	mov	w1, #0x0                   	// #0
   1fc68:	ldr	w0, [sp, #52]
   1fc6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fc70:	str	w0, [sp, #3772]
   1fc74:	ldr	x3, [sp, #24]
   1fc78:	ldr	x2, [sp, #32]
   1fc7c:	ldr	w1, [sp, #3772]
   1fc80:	ldr	x0, [sp, #40]
   1fc84:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1fc88:	mov	w1, w0
   1fc8c:	add	x0, sp, #0x3c
   1fc90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1fc94:	and	w0, w0, #0xff
   1fc98:	eor	w0, w0, #0x1
   1fc9c:	and	w0, w0, #0xff
   1fca0:	cmp	w0, #0x0
   1fca4:	b.eq	1fcb0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ad40>  // b.none
   1fca8:	mov	w0, #0x0                   	// #0
   1fcac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1fcb0:	mov	w2, #0x5                   	// #5
   1fcb4:	mov	w1, #0x5                   	// #5
   1fcb8:	ldr	w0, [sp, #52]
   1fcbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fcc0:	str	w0, [sp, #3772]
   1fcc4:	ldr	x3, [sp, #24]
   1fcc8:	ldr	x2, [sp, #32]
   1fccc:	ldr	w1, [sp, #3772]
   1fcd0:	ldr	x0, [sp, #40]
   1fcd4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1fcd8:	mov	w1, w0
   1fcdc:	add	x0, sp, #0x3c
   1fce0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1fce4:	and	w0, w0, #0xff
   1fce8:	eor	w0, w0, #0x1
   1fcec:	and	w0, w0, #0xff
   1fcf0:	cmp	w0, #0x0
   1fcf4:	b.eq	1fd00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ad90>  // b.none
   1fcf8:	mov	w0, #0x0                   	// #0
   1fcfc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1fd00:	mov	w2, #0x5                   	// #5
   1fd04:	mov	w1, #0x10                  	// #16
   1fd08:	ldr	w0, [sp, #52]
   1fd0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fd10:	str	w0, [sp, #3772]
   1fd14:	ldr	x3, [sp, #24]
   1fd18:	ldr	x2, [sp, #32]
   1fd1c:	ldr	w1, [sp, #3772]
   1fd20:	ldr	x0, [sp, #40]
   1fd24:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1fd28:	mov	w1, w0
   1fd2c:	add	x0, sp, #0x3c
   1fd30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1fd34:	and	w0, w0, #0xff
   1fd38:	eor	w0, w0, #0x1
   1fd3c:	and	w0, w0, #0xff
   1fd40:	cmp	w0, #0x0
   1fd44:	b.eq	1fd50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ade0>  // b.none
   1fd48:	mov	w0, #0x0                   	// #0
   1fd4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1fd50:	str	wzr, [sp, #3772]
   1fd54:	mov	w2, #0x1                   	// #1
   1fd58:	mov	w1, #0xb                   	// #11
   1fd5c:	ldr	w0, [sp, #52]
   1fd60:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fd64:	lsl	w0, w0, #1
   1fd68:	ldr	w1, [sp, #3772]
   1fd6c:	orr	w0, w1, w0
   1fd70:	str	w0, [sp, #3772]
   1fd74:	mov	w2, #0x1                   	// #1
   1fd78:	mov	w1, #0x15                  	// #21
   1fd7c:	ldr	w0, [sp, #52]
   1fd80:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fd84:	mov	w1, w0
   1fd88:	ldr	w0, [sp, #3772]
   1fd8c:	orr	w0, w0, w1
   1fd90:	str	w0, [sp, #3772]
   1fd94:	ldr	w0, [sp, #3772]
   1fd98:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1fd9c:	add	x2, sp, #0xa00
   1fda0:	stp	x0, x1, [x2, #-24]
   1fda4:	add	x0, sp, #0x9e8
   1fda8:	mov	x1, x0
   1fdac:	ldr	x0, [sp, #40]
   1fdb0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1fdb4:	ldr	w0, [sp, #60]
   1fdb8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1fdbc:	mov	w2, #0x5                   	// #5
   1fdc0:	mov	w1, #0x0                   	// #0
   1fdc4:	ldr	w0, [sp, #52]
   1fdc8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fdcc:	str	w0, [sp, #3772]
   1fdd0:	ldr	x3, [sp, #24]
   1fdd4:	ldr	x2, [sp, #32]
   1fdd8:	ldr	w1, [sp, #3772]
   1fddc:	ldr	x0, [sp, #40]
   1fde0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1fde4:	mov	w1, w0
   1fde8:	add	x0, sp, #0x3c
   1fdec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1fdf0:	and	w0, w0, #0xff
   1fdf4:	eor	w0, w0, #0x1
   1fdf8:	and	w0, w0, #0xff
   1fdfc:	cmp	w0, #0x0
   1fe00:	b.eq	1fe0c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ae9c>  // b.none
   1fe04:	mov	w0, #0x0                   	// #0
   1fe08:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1fe0c:	mov	w2, #0x5                   	// #5
   1fe10:	mov	w1, #0x5                   	// #5
   1fe14:	ldr	w0, [sp, #52]
   1fe18:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fe1c:	str	w0, [sp, #3772]
   1fe20:	ldr	x3, [sp, #24]
   1fe24:	ldr	x2, [sp, #32]
   1fe28:	ldr	w1, [sp, #3772]
   1fe2c:	ldr	x0, [sp, #40]
   1fe30:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1fe34:	mov	w1, w0
   1fe38:	add	x0, sp, #0x3c
   1fe3c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1fe40:	and	w0, w0, #0xff
   1fe44:	eor	w0, w0, #0x1
   1fe48:	and	w0, w0, #0xff
   1fe4c:	cmp	w0, #0x0
   1fe50:	b.eq	1fe5c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1aeec>  // b.none
   1fe54:	mov	w0, #0x0                   	// #0
   1fe58:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1fe5c:	mov	w2, #0x5                   	// #5
   1fe60:	mov	w1, #0x10                  	// #16
   1fe64:	ldr	w0, [sp, #52]
   1fe68:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fe6c:	str	w0, [sp, #3772]
   1fe70:	ldr	x3, [sp, #24]
   1fe74:	ldr	x2, [sp, #32]
   1fe78:	ldr	w1, [sp, #3772]
   1fe7c:	ldr	x0, [sp, #40]
   1fe80:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1fe84:	mov	w1, w0
   1fe88:	add	x0, sp, #0x3c
   1fe8c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1fe90:	and	w0, w0, #0xff
   1fe94:	eor	w0, w0, #0x1
   1fe98:	and	w0, w0, #0xff
   1fe9c:	cmp	w0, #0x0
   1fea0:	b.eq	1feac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1af3c>  // b.none
   1fea4:	mov	w0, #0x0                   	// #0
   1fea8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1feac:	str	wzr, [sp, #3772]
   1feb0:	mov	w2, #0x1                   	// #1
   1feb4:	mov	w1, #0xb                   	// #11
   1feb8:	ldr	w0, [sp, #52]
   1febc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fec0:	lsl	w0, w0, #1
   1fec4:	ldr	w1, [sp, #3772]
   1fec8:	orr	w0, w1, w0
   1fecc:	str	w0, [sp, #3772]
   1fed0:	mov	w2, #0x1                   	// #1
   1fed4:	mov	w1, #0x15                  	// #21
   1fed8:	ldr	w0, [sp, #52]
   1fedc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1fee0:	mov	w1, w0
   1fee4:	ldr	w0, [sp, #3772]
   1fee8:	orr	w0, w0, w1
   1feec:	str	w0, [sp, #3772]
   1fef0:	ldr	w0, [sp, #3772]
   1fef4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1fef8:	add	x2, sp, #0xa00
   1fefc:	stp	x0, x1, [x2, #-8]
   1ff00:	add	x0, sp, #0x9f8
   1ff04:	mov	x1, x0
   1ff08:	ldr	x0, [sp, #40]
   1ff0c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   1ff10:	ldr	w0, [sp, #60]
   1ff14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ff18:	mov	w2, #0x5                   	// #5
   1ff1c:	mov	w1, #0x0                   	// #0
   1ff20:	ldr	w0, [sp, #52]
   1ff24:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ff28:	str	w0, [sp, #3772]
   1ff2c:	ldr	x3, [sp, #24]
   1ff30:	ldr	x2, [sp, #32]
   1ff34:	ldr	w1, [sp, #3772]
   1ff38:	ldr	x0, [sp, #40]
   1ff3c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ff40:	mov	w1, w0
   1ff44:	add	x0, sp, #0x3c
   1ff48:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ff4c:	and	w0, w0, #0xff
   1ff50:	eor	w0, w0, #0x1
   1ff54:	and	w0, w0, #0xff
   1ff58:	cmp	w0, #0x0
   1ff5c:	b.eq	1ff68 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1aff8>  // b.none
   1ff60:	mov	w0, #0x0                   	// #0
   1ff64:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ff68:	mov	w2, #0x5                   	// #5
   1ff6c:	mov	w1, #0x5                   	// #5
   1ff70:	ldr	w0, [sp, #52]
   1ff74:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ff78:	str	w0, [sp, #3772]
   1ff7c:	ldr	x3, [sp, #24]
   1ff80:	ldr	x2, [sp, #32]
   1ff84:	ldr	w1, [sp, #3772]
   1ff88:	ldr	x0, [sp, #40]
   1ff8c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   1ff90:	mov	w1, w0
   1ff94:	add	x0, sp, #0x3c
   1ff98:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ff9c:	and	w0, w0, #0xff
   1ffa0:	eor	w0, w0, #0x1
   1ffa4:	and	w0, w0, #0xff
   1ffa8:	cmp	w0, #0x0
   1ffac:	b.eq	1ffb8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b048>  // b.none
   1ffb0:	mov	w0, #0x0                   	// #0
   1ffb4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   1ffb8:	mov	w2, #0x5                   	// #5
   1ffbc:	mov	w1, #0x10                  	// #16
   1ffc0:	ldr	w0, [sp, #52]
   1ffc4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   1ffc8:	str	w0, [sp, #3772]
   1ffcc:	ldr	x3, [sp, #24]
   1ffd0:	ldr	x2, [sp, #32]
   1ffd4:	ldr	w1, [sp, #3772]
   1ffd8:	ldr	x0, [sp, #40]
   1ffdc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   1ffe0:	mov	w1, w0
   1ffe4:	add	x0, sp, #0x3c
   1ffe8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   1ffec:	and	w0, w0, #0xff
   1fff0:	eor	w0, w0, #0x1
   1fff4:	and	w0, w0, #0xff
   1fff8:	cmp	w0, #0x0
   1fffc:	b.eq	20008 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b098>  // b.none
   20000:	mov	w0, #0x0                   	// #0
   20004:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20008:	str	wzr, [sp, #3772]
   2000c:	mov	w2, #0x1                   	// #1
   20010:	mov	w1, #0xb                   	// #11
   20014:	ldr	w0, [sp, #52]
   20018:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2001c:	lsl	w0, w0, #1
   20020:	ldr	w1, [sp, #3772]
   20024:	orr	w0, w1, w0
   20028:	str	w0, [sp, #3772]
   2002c:	mov	w2, #0x1                   	// #1
   20030:	mov	w1, #0x15                  	// #21
   20034:	ldr	w0, [sp, #52]
   20038:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2003c:	mov	w1, w0
   20040:	ldr	w0, [sp, #3772]
   20044:	orr	w0, w0, w1
   20048:	str	w0, [sp, #3772]
   2004c:	ldr	w0, [sp, #3772]
   20050:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20054:	add	x2, sp, #0xa00
   20058:	stp	x0, x1, [x2, #8]
   2005c:	add	x0, sp, #0xa08
   20060:	mov	x1, x0
   20064:	ldr	x0, [sp, #40]
   20068:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2006c:	ldr	w0, [sp, #60]
   20070:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20074:	mov	w2, #0x5                   	// #5
   20078:	mov	w1, #0x0                   	// #0
   2007c:	ldr	w0, [sp, #52]
   20080:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20084:	str	w0, [sp, #3772]
   20088:	ldr	x3, [sp, #24]
   2008c:	ldr	x2, [sp, #32]
   20090:	ldr	w1, [sp, #3772]
   20094:	ldr	x0, [sp, #40]
   20098:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   2009c:	mov	w1, w0
   200a0:	add	x0, sp, #0x3c
   200a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   200a8:	and	w0, w0, #0xff
   200ac:	eor	w0, w0, #0x1
   200b0:	and	w0, w0, #0xff
   200b4:	cmp	w0, #0x0
   200b8:	b.eq	200c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b154>  // b.none
   200bc:	mov	w0, #0x0                   	// #0
   200c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   200c4:	mov	w2, #0x5                   	// #5
   200c8:	mov	w1, #0x0                   	// #0
   200cc:	ldr	w0, [sp, #52]
   200d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   200d4:	str	w0, [sp, #3772]
   200d8:	ldr	x3, [sp, #24]
   200dc:	ldr	x2, [sp, #32]
   200e0:	ldr	w1, [sp, #3772]
   200e4:	ldr	x0, [sp, #40]
   200e8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   200ec:	mov	w1, w0
   200f0:	add	x0, sp, #0x3c
   200f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   200f8:	and	w0, w0, #0xff
   200fc:	eor	w0, w0, #0x1
   20100:	and	w0, w0, #0xff
   20104:	cmp	w0, #0x0
   20108:	b.eq	20114 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b1a4>  // b.none
   2010c:	mov	w0, #0x0                   	// #0
   20110:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20114:	mov	w2, #0x5                   	// #5
   20118:	mov	w1, #0x5                   	// #5
   2011c:	ldr	w0, [sp, #52]
   20120:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20124:	str	w0, [sp, #3772]
   20128:	ldr	x3, [sp, #24]
   2012c:	ldr	x2, [sp, #32]
   20130:	ldr	w1, [sp, #3772]
   20134:	ldr	x0, [sp, #40]
   20138:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   2013c:	mov	w1, w0
   20140:	add	x0, sp, #0x3c
   20144:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20148:	and	w0, w0, #0xff
   2014c:	eor	w0, w0, #0x1
   20150:	and	w0, w0, #0xff
   20154:	cmp	w0, #0x0
   20158:	b.eq	20164 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b1f4>  // b.none
   2015c:	mov	w0, #0x0                   	// #0
   20160:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20164:	mov	w2, #0x4                   	// #4
   20168:	mov	w1, #0x10                  	// #16
   2016c:	ldr	w0, [sp, #52]
   20170:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20174:	str	w0, [sp, #3772]
   20178:	ldr	x3, [sp, #24]
   2017c:	ldr	x2, [sp, #32]
   20180:	ldr	w1, [sp, #3772]
   20184:	ldr	x0, [sp, #40]
   20188:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   2018c:	mov	w1, w0
   20190:	add	x0, sp, #0x3c
   20194:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20198:	and	w0, w0, #0xff
   2019c:	eor	w0, w0, #0x1
   201a0:	and	w0, w0, #0xff
   201a4:	cmp	w0, #0x0
   201a8:	b.eq	201b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b244>  // b.none
   201ac:	mov	w0, #0x0                   	// #0
   201b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   201b4:	str	wzr, [sp, #3772]
   201b8:	mov	w2, #0x1                   	// #1
   201bc:	mov	w1, #0xb                   	// #11
   201c0:	ldr	w0, [sp, #52]
   201c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   201c8:	lsl	w0, w0, #2
   201cc:	ldr	w1, [sp, #3772]
   201d0:	orr	w0, w1, w0
   201d4:	str	w0, [sp, #3772]
   201d8:	mov	w2, #0x2                   	// #2
   201dc:	mov	w1, #0x14                  	// #20
   201e0:	ldr	w0, [sp, #52]
   201e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   201e8:	mov	w1, w0
   201ec:	ldr	w0, [sp, #3772]
   201f0:	orr	w0, w0, w1
   201f4:	str	w0, [sp, #3772]
   201f8:	ldr	w0, [sp, #3772]
   201fc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20200:	add	x2, sp, #0xa00
   20204:	stp	x0, x1, [x2, #24]
   20208:	add	x0, sp, #0xa18
   2020c:	mov	x1, x0
   20210:	ldr	x0, [sp, #40]
   20214:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20218:	ldr	w0, [sp, #60]
   2021c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20220:	mov	w2, #0x5                   	// #5
   20224:	mov	w1, #0x0                   	// #0
   20228:	ldr	w0, [sp, #52]
   2022c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20230:	str	w0, [sp, #3772]
   20234:	ldr	x3, [sp, #24]
   20238:	ldr	x2, [sp, #32]
   2023c:	ldr	w1, [sp, #3772]
   20240:	ldr	x0, [sp, #40]
   20244:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   20248:	mov	w1, w0
   2024c:	add	x0, sp, #0x3c
   20250:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20254:	and	w0, w0, #0xff
   20258:	eor	w0, w0, #0x1
   2025c:	and	w0, w0, #0xff
   20260:	cmp	w0, #0x0
   20264:	b.eq	20270 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b300>  // b.none
   20268:	mov	w0, #0x0                   	// #0
   2026c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20270:	mov	w2, #0x5                   	// #5
   20274:	mov	w1, #0x0                   	// #0
   20278:	ldr	w0, [sp, #52]
   2027c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20280:	str	w0, [sp, #3772]
   20284:	ldr	x3, [sp, #24]
   20288:	ldr	x2, [sp, #32]
   2028c:	ldr	w1, [sp, #3772]
   20290:	ldr	x0, [sp, #40]
   20294:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   20298:	mov	w1, w0
   2029c:	add	x0, sp, #0x3c
   202a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   202a4:	and	w0, w0, #0xff
   202a8:	eor	w0, w0, #0x1
   202ac:	and	w0, w0, #0xff
   202b0:	cmp	w0, #0x0
   202b4:	b.eq	202c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b350>  // b.none
   202b8:	mov	w0, #0x0                   	// #0
   202bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   202c0:	mov	w2, #0x5                   	// #5
   202c4:	mov	w1, #0x5                   	// #5
   202c8:	ldr	w0, [sp, #52]
   202cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   202d0:	str	w0, [sp, #3772]
   202d4:	ldr	x3, [sp, #24]
   202d8:	ldr	x2, [sp, #32]
   202dc:	ldr	w1, [sp, #3772]
   202e0:	ldr	x0, [sp, #40]
   202e4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   202e8:	mov	w1, w0
   202ec:	add	x0, sp, #0x3c
   202f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   202f4:	and	w0, w0, #0xff
   202f8:	eor	w0, w0, #0x1
   202fc:	and	w0, w0, #0xff
   20300:	cmp	w0, #0x0
   20304:	b.eq	20310 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b3a0>  // b.none
   20308:	mov	w0, #0x0                   	// #0
   2030c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20310:	mov	w2, #0x5                   	// #5
   20314:	mov	w1, #0x10                  	// #16
   20318:	ldr	w0, [sp, #52]
   2031c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20320:	str	w0, [sp, #3772]
   20324:	ldr	x3, [sp, #24]
   20328:	ldr	x2, [sp, #32]
   2032c:	ldr	w1, [sp, #3772]
   20330:	ldr	x0, [sp, #40]
   20334:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   20338:	mov	w1, w0
   2033c:	add	x0, sp, #0x3c
   20340:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20344:	and	w0, w0, #0xff
   20348:	eor	w0, w0, #0x1
   2034c:	and	w0, w0, #0xff
   20350:	cmp	w0, #0x0
   20354:	b.eq	20360 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b3f0>  // b.none
   20358:	mov	w0, #0x0                   	// #0
   2035c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20360:	str	wzr, [sp, #3772]
   20364:	mov	w2, #0x1                   	// #1
   20368:	mov	w1, #0xb                   	// #11
   2036c:	ldr	w0, [sp, #52]
   20370:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20374:	lsl	w0, w0, #1
   20378:	ldr	w1, [sp, #3772]
   2037c:	orr	w0, w1, w0
   20380:	str	w0, [sp, #3772]
   20384:	mov	w2, #0x1                   	// #1
   20388:	mov	w1, #0x15                  	// #21
   2038c:	ldr	w0, [sp, #52]
   20390:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20394:	mov	w1, w0
   20398:	ldr	w0, [sp, #3772]
   2039c:	orr	w0, w0, w1
   203a0:	str	w0, [sp, #3772]
   203a4:	ldr	w0, [sp, #3772]
   203a8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   203ac:	add	x2, sp, #0xa00
   203b0:	stp	x0, x1, [x2, #40]
   203b4:	add	x0, sp, #0xa28
   203b8:	mov	x1, x0
   203bc:	ldr	x0, [sp, #40]
   203c0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   203c4:	ldr	w0, [sp, #60]
   203c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   203cc:	mov	w2, #0x5                   	// #5
   203d0:	mov	w1, #0x0                   	// #0
   203d4:	ldr	w0, [sp, #52]
   203d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   203dc:	str	w0, [sp, #3772]
   203e0:	ldr	x3, [sp, #24]
   203e4:	ldr	x2, [sp, #32]
   203e8:	ldr	w1, [sp, #3772]
   203ec:	ldr	x0, [sp, #40]
   203f0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   203f4:	mov	w1, w0
   203f8:	add	x0, sp, #0x3c
   203fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20400:	and	w0, w0, #0xff
   20404:	eor	w0, w0, #0x1
   20408:	and	w0, w0, #0xff
   2040c:	cmp	w0, #0x0
   20410:	b.eq	2041c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b4ac>  // b.none
   20414:	mov	w0, #0x0                   	// #0
   20418:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2041c:	mov	w2, #0x5                   	// #5
   20420:	mov	w1, #0x5                   	// #5
   20424:	ldr	w0, [sp, #52]
   20428:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2042c:	str	w0, [sp, #3772]
   20430:	ldr	x3, [sp, #24]
   20434:	ldr	x2, [sp, #32]
   20438:	ldr	w1, [sp, #3772]
   2043c:	ldr	x0, [sp, #40]
   20440:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   20444:	mov	w1, w0
   20448:	add	x0, sp, #0x3c
   2044c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20450:	and	w0, w0, #0xff
   20454:	eor	w0, w0, #0x1
   20458:	and	w0, w0, #0xff
   2045c:	cmp	w0, #0x0
   20460:	b.eq	2046c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b4fc>  // b.none
   20464:	mov	w0, #0x0                   	// #0
   20468:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2046c:	mov	w2, #0x5                   	// #5
   20470:	mov	w1, #0x10                  	// #16
   20474:	ldr	w0, [sp, #52]
   20478:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2047c:	str	w0, [sp, #3772]
   20480:	ldr	x3, [sp, #24]
   20484:	ldr	x2, [sp, #32]
   20488:	ldr	w1, [sp, #3772]
   2048c:	ldr	x0, [sp, #40]
   20490:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   20494:	mov	w1, w0
   20498:	add	x0, sp, #0x3c
   2049c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   204a0:	and	w0, w0, #0xff
   204a4:	eor	w0, w0, #0x1
   204a8:	and	w0, w0, #0xff
   204ac:	cmp	w0, #0x0
   204b0:	b.eq	204bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b54c>  // b.none
   204b4:	mov	w0, #0x0                   	// #0
   204b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   204bc:	str	wzr, [sp, #3772]
   204c0:	mov	w2, #0x1                   	// #1
   204c4:	mov	w1, #0xb                   	// #11
   204c8:	ldr	w0, [sp, #52]
   204cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   204d0:	lsl	w0, w0, #1
   204d4:	ldr	w1, [sp, #3772]
   204d8:	orr	w0, w1, w0
   204dc:	str	w0, [sp, #3772]
   204e0:	mov	w2, #0x1                   	// #1
   204e4:	mov	w1, #0x15                  	// #21
   204e8:	ldr	w0, [sp, #52]
   204ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   204f0:	mov	w1, w0
   204f4:	ldr	w0, [sp, #3772]
   204f8:	orr	w0, w0, w1
   204fc:	str	w0, [sp, #3772]
   20500:	ldr	w0, [sp, #3772]
   20504:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20508:	add	x2, sp, #0xa00
   2050c:	stp	x0, x1, [x2, #56]
   20510:	add	x0, sp, #0xa38
   20514:	mov	x1, x0
   20518:	ldr	x0, [sp, #40]
   2051c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20520:	ldr	w0, [sp, #60]
   20524:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20528:	mov	w2, #0x5                   	// #5
   2052c:	mov	w1, #0x0                   	// #0
   20530:	ldr	w0, [sp, #52]
   20534:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20538:	str	w0, [sp, #3772]
   2053c:	ldr	x3, [sp, #24]
   20540:	ldr	x2, [sp, #32]
   20544:	ldr	w1, [sp, #3772]
   20548:	ldr	x0, [sp, #40]
   2054c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   20550:	mov	w1, w0
   20554:	add	x0, sp, #0x3c
   20558:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2055c:	and	w0, w0, #0xff
   20560:	eor	w0, w0, #0x1
   20564:	and	w0, w0, #0xff
   20568:	cmp	w0, #0x0
   2056c:	b.eq	20578 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b608>  // b.none
   20570:	mov	w0, #0x0                   	// #0
   20574:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20578:	mov	w2, #0x5                   	// #5
   2057c:	mov	w1, #0x0                   	// #0
   20580:	ldr	w0, [sp, #52]
   20584:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20588:	str	w0, [sp, #3772]
   2058c:	ldr	x3, [sp, #24]
   20590:	ldr	x2, [sp, #32]
   20594:	ldr	w1, [sp, #3772]
   20598:	ldr	x0, [sp, #40]
   2059c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   205a0:	mov	w1, w0
   205a4:	add	x0, sp, #0x3c
   205a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   205ac:	and	w0, w0, #0xff
   205b0:	eor	w0, w0, #0x1
   205b4:	and	w0, w0, #0xff
   205b8:	cmp	w0, #0x0
   205bc:	b.eq	205c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b658>  // b.none
   205c0:	mov	w0, #0x0                   	// #0
   205c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   205c8:	mov	w2, #0x5                   	// #5
   205cc:	mov	w1, #0x5                   	// #5
   205d0:	ldr	w0, [sp, #52]
   205d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   205d8:	str	w0, [sp, #3772]
   205dc:	ldr	x3, [sp, #24]
   205e0:	ldr	x2, [sp, #32]
   205e4:	ldr	w1, [sp, #3772]
   205e8:	ldr	x0, [sp, #40]
   205ec:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   205f0:	mov	w1, w0
   205f4:	add	x0, sp, #0x3c
   205f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   205fc:	and	w0, w0, #0xff
   20600:	eor	w0, w0, #0x1
   20604:	and	w0, w0, #0xff
   20608:	cmp	w0, #0x0
   2060c:	b.eq	20618 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b6a8>  // b.none
   20610:	mov	w0, #0x0                   	// #0
   20614:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20618:	mov	w2, #0x5                   	// #5
   2061c:	mov	w1, #0x10                  	// #16
   20620:	ldr	w0, [sp, #52]
   20624:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20628:	str	w0, [sp, #3772]
   2062c:	ldr	x3, [sp, #24]
   20630:	ldr	x2, [sp, #32]
   20634:	ldr	w1, [sp, #3772]
   20638:	ldr	x0, [sp, #40]
   2063c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   20640:	mov	w1, w0
   20644:	add	x0, sp, #0x3c
   20648:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2064c:	and	w0, w0, #0xff
   20650:	eor	w0, w0, #0x1
   20654:	and	w0, w0, #0xff
   20658:	cmp	w0, #0x0
   2065c:	b.eq	20668 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b6f8>  // b.none
   20660:	mov	w0, #0x0                   	// #0
   20664:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20668:	mov	w2, #0x1                   	// #1
   2066c:	mov	w1, #0xb                   	// #11
   20670:	ldr	w0, [sp, #52]
   20674:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20678:	str	w0, [sp, #3772]
   2067c:	ldr	w0, [sp, #3772]
   20680:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20684:	add	x2, sp, #0xa00
   20688:	stp	x0, x1, [x2, #72]
   2068c:	add	x0, sp, #0xa48
   20690:	mov	x1, x0
   20694:	ldr	x0, [sp, #40]
   20698:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2069c:	mov	w2, #0x2                   	// #2
   206a0:	mov	w1, #0xd                   	// #13
   206a4:	ldr	w0, [sp, #52]
   206a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   206ac:	str	w0, [sp, #3772]
   206b0:	ldr	w0, [sp, #3772]
   206b4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   206b8:	add	x2, sp, #0xa00
   206bc:	stp	x0, x1, [x2, #88]
   206c0:	add	x0, sp, #0xa58
   206c4:	mov	x1, x0
   206c8:	ldr	x0, [sp, #40]
   206cc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   206d0:	ldr	w0, [sp, #60]
   206d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   206d8:	mov	w2, #0x5                   	// #5
   206dc:	mov	w1, #0x0                   	// #0
   206e0:	ldr	w0, [sp, #52]
   206e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   206e8:	str	w0, [sp, #3772]
   206ec:	ldr	x3, [sp, #24]
   206f0:	ldr	x2, [sp, #32]
   206f4:	ldr	w1, [sp, #3772]
   206f8:	ldr	x0, [sp, #40]
   206fc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   20700:	mov	w1, w0
   20704:	add	x0, sp, #0x3c
   20708:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2070c:	and	w0, w0, #0xff
   20710:	eor	w0, w0, #0x1
   20714:	and	w0, w0, #0xff
   20718:	cmp	w0, #0x0
   2071c:	b.eq	20728 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b7b8>  // b.none
   20720:	mov	w0, #0x0                   	// #0
   20724:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20728:	mov	w2, #0x5                   	// #5
   2072c:	mov	w1, #0x0                   	// #0
   20730:	ldr	w0, [sp, #52]
   20734:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20738:	str	w0, [sp, #3772]
   2073c:	ldr	x3, [sp, #24]
   20740:	ldr	x2, [sp, #32]
   20744:	ldr	w1, [sp, #3772]
   20748:	ldr	x0, [sp, #40]
   2074c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   20750:	mov	w1, w0
   20754:	add	x0, sp, #0x3c
   20758:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2075c:	and	w0, w0, #0xff
   20760:	eor	w0, w0, #0x1
   20764:	and	w0, w0, #0xff
   20768:	cmp	w0, #0x0
   2076c:	b.eq	20778 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b808>  // b.none
   20770:	mov	w0, #0x0                   	// #0
   20774:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20778:	mov	w2, #0x5                   	// #5
   2077c:	mov	w1, #0x5                   	// #5
   20780:	ldr	w0, [sp, #52]
   20784:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20788:	str	w0, [sp, #3772]
   2078c:	ldr	x3, [sp, #24]
   20790:	ldr	x2, [sp, #32]
   20794:	ldr	w1, [sp, #3772]
   20798:	ldr	x0, [sp, #40]
   2079c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   207a0:	mov	w1, w0
   207a4:	add	x0, sp, #0x3c
   207a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   207ac:	and	w0, w0, #0xff
   207b0:	eor	w0, w0, #0x1
   207b4:	and	w0, w0, #0xff
   207b8:	cmp	w0, #0x0
   207bc:	b.eq	207c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b858>  // b.none
   207c0:	mov	w0, #0x0                   	// #0
   207c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   207c8:	mov	w2, #0x5                   	// #5
   207cc:	mov	w1, #0x10                  	// #16
   207d0:	ldr	w0, [sp, #52]
   207d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   207d8:	str	w0, [sp, #3772]
   207dc:	ldr	x3, [sp, #24]
   207e0:	ldr	x2, [sp, #32]
   207e4:	ldr	w1, [sp, #3772]
   207e8:	ldr	x0, [sp, #40]
   207ec:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   207f0:	mov	w1, w0
   207f4:	add	x0, sp, #0x3c
   207f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   207fc:	and	w0, w0, #0xff
   20800:	eor	w0, w0, #0x1
   20804:	and	w0, w0, #0xff
   20808:	cmp	w0, #0x0
   2080c:	b.eq	20818 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b8a8>  // b.none
   20810:	mov	w0, #0x0                   	// #0
   20814:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20818:	mov	w2, #0x1                   	// #1
   2081c:	mov	w1, #0xb                   	// #11
   20820:	ldr	w0, [sp, #52]
   20824:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20828:	str	w0, [sp, #3772]
   2082c:	ldr	w0, [sp, #3772]
   20830:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20834:	add	x2, sp, #0xa00
   20838:	stp	x0, x1, [x2, #104]
   2083c:	add	x0, sp, #0xa68
   20840:	mov	x1, x0
   20844:	ldr	x0, [sp, #40]
   20848:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2084c:	ldr	w0, [sp, #60]
   20850:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20854:	mov	w2, #0x5                   	// #5
   20858:	mov	w1, #0x0                   	// #0
   2085c:	ldr	w0, [sp, #52]
   20860:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20864:	str	w0, [sp, #3772]
   20868:	ldr	x3, [sp, #24]
   2086c:	ldr	x2, [sp, #32]
   20870:	ldr	w1, [sp, #3772]
   20874:	ldr	x0, [sp, #40]
   20878:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   2087c:	mov	w1, w0
   20880:	add	x0, sp, #0x3c
   20884:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20888:	and	w0, w0, #0xff
   2088c:	eor	w0, w0, #0x1
   20890:	and	w0, w0, #0xff
   20894:	cmp	w0, #0x0
   20898:	b.eq	208a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b934>  // b.none
   2089c:	mov	w0, #0x0                   	// #0
   208a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   208a4:	mov	w2, #0x5                   	// #5
   208a8:	mov	w1, #0x5                   	// #5
   208ac:	ldr	w0, [sp, #52]
   208b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   208b4:	str	w0, [sp, #3772]
   208b8:	ldr	x3, [sp, #24]
   208bc:	ldr	x2, [sp, #32]
   208c0:	ldr	w1, [sp, #3772]
   208c4:	ldr	x0, [sp, #40]
   208c8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   208cc:	mov	w1, w0
   208d0:	add	x0, sp, #0x3c
   208d4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   208d8:	and	w0, w0, #0xff
   208dc:	eor	w0, w0, #0x1
   208e0:	and	w0, w0, #0xff
   208e4:	cmp	w0, #0x0
   208e8:	b.eq	208f4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b984>  // b.none
   208ec:	mov	w0, #0x0                   	// #0
   208f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   208f4:	mov	w2, #0x5                   	// #5
   208f8:	mov	w1, #0x10                  	// #16
   208fc:	ldr	w0, [sp, #52]
   20900:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20904:	str	w0, [sp, #3772]
   20908:	ldr	x3, [sp, #24]
   2090c:	ldr	x2, [sp, #32]
   20910:	ldr	w1, [sp, #3772]
   20914:	ldr	x0, [sp, #40]
   20918:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   2091c:	mov	w1, w0
   20920:	add	x0, sp, #0x3c
   20924:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20928:	and	w0, w0, #0xff
   2092c:	eor	w0, w0, #0x1
   20930:	and	w0, w0, #0xff
   20934:	cmp	w0, #0x0
   20938:	b.eq	20944 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1b9d4>  // b.none
   2093c:	mov	w0, #0x0                   	// #0
   20940:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20944:	mov	w2, #0x1                   	// #1
   20948:	mov	w1, #0xb                   	// #11
   2094c:	ldr	w0, [sp, #52]
   20950:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20954:	str	w0, [sp, #3772]
   20958:	ldr	w0, [sp, #3772]
   2095c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20960:	add	x2, sp, #0xa00
   20964:	stp	x0, x1, [x2, #120]
   20968:	add	x0, sp, #0xa78
   2096c:	mov	x1, x0
   20970:	ldr	x0, [sp, #40]
   20974:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20978:	ldr	w0, [sp, #60]
   2097c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20980:	ldr	x3, [sp, #24]
   20984:	ldr	x2, [sp, #32]
   20988:	ldr	w1, [sp, #52]
   2098c:	ldr	x0, [sp, #40]
   20990:	bl	3654 <_ZL20DecodeAdrInstructionRN4llvm6MCInstEjmPKv>
   20994:	mov	w1, w0
   20998:	add	x0, sp, #0x3c
   2099c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   209a0:	and	w0, w0, #0xff
   209a4:	eor	w0, w0, #0x1
   209a8:	and	w0, w0, #0xff
   209ac:	cmp	w0, #0x0
   209b0:	b.eq	209bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ba4c>  // b.none
   209b4:	mov	w0, #0x0                   	// #0
   209b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   209bc:	ldr	w0, [sp, #60]
   209c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   209c4:	ldr	x3, [sp, #24]
   209c8:	ldr	x2, [sp, #32]
   209cc:	ldr	w1, [sp, #52]
   209d0:	ldr	x0, [sp, #40]
   209d4:	bl	3750 <_ZL20DecodeAddSubImmShiftRN4llvm6MCInstEjmPKv>
   209d8:	mov	w1, w0
   209dc:	add	x0, sp, #0x3c
   209e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   209e4:	and	w0, w0, #0xff
   209e8:	eor	w0, w0, #0x1
   209ec:	and	w0, w0, #0xff
   209f0:	cmp	w0, #0x0
   209f4:	b.eq	20a00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ba90>  // b.none
   209f8:	mov	w0, #0x0                   	// #0
   209fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20a00:	ldr	w0, [sp, #60]
   20a04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20a08:	mov	w2, #0x5                   	// #5
   20a0c:	mov	w1, #0x0                   	// #0
   20a10:	ldr	w0, [sp, #52]
   20a14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20a18:	str	w0, [sp, #3772]
   20a1c:	ldr	x3, [sp, #24]
   20a20:	ldr	x2, [sp, #32]
   20a24:	ldr	w1, [sp, #3772]
   20a28:	ldr	x0, [sp, #40]
   20a2c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   20a30:	mov	w1, w0
   20a34:	add	x0, sp, #0x3c
   20a38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20a3c:	and	w0, w0, #0xff
   20a40:	eor	w0, w0, #0x1
   20a44:	and	w0, w0, #0xff
   20a48:	cmp	w0, #0x0
   20a4c:	b.eq	20a58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1bae8>  // b.none
   20a50:	mov	w0, #0x0                   	// #0
   20a54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20a58:	mov	w2, #0x5                   	// #5
   20a5c:	mov	w1, #0x5                   	// #5
   20a60:	ldr	w0, [sp, #52]
   20a64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20a68:	str	w0, [sp, #3772]
   20a6c:	ldr	x3, [sp, #24]
   20a70:	ldr	x2, [sp, #32]
   20a74:	ldr	w1, [sp, #3772]
   20a78:	ldr	x0, [sp, #40]
   20a7c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   20a80:	mov	w1, w0
   20a84:	add	x0, sp, #0x3c
   20a88:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20a8c:	and	w0, w0, #0xff
   20a90:	eor	w0, w0, #0x1
   20a94:	and	w0, w0, #0xff
   20a98:	cmp	w0, #0x0
   20a9c:	b.eq	20aa8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1bb38>  // b.none
   20aa0:	mov	w0, #0x0                   	// #0
   20aa4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20aa8:	mov	w2, #0x6                   	// #6
   20aac:	mov	w1, #0x10                  	// #16
   20ab0:	ldr	w0, [sp, #52]
   20ab4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20ab8:	str	w0, [sp, #3772]
   20abc:	ldr	w0, [sp, #3772]
   20ac0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20ac4:	add	x2, sp, #0xa00
   20ac8:	stp	x0, x1, [x2, #136]
   20acc:	add	x0, sp, #0xa88
   20ad0:	mov	x1, x0
   20ad4:	ldr	x0, [sp, #40]
   20ad8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20adc:	mov	w2, #0x4                   	// #4
   20ae0:	mov	w1, #0xa                   	// #10
   20ae4:	ldr	w0, [sp, #52]
   20ae8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20aec:	str	w0, [sp, #3772]
   20af0:	ldr	w0, [sp, #3772]
   20af4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20af8:	add	x2, sp, #0xa00
   20afc:	stp	x0, x1, [x2, #152]
   20b00:	add	x0, sp, #0xa98
   20b04:	mov	x1, x0
   20b08:	ldr	x0, [sp, #40]
   20b0c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20b10:	ldr	w0, [sp, #60]
   20b14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20b18:	ldr	x3, [sp, #24]
   20b1c:	ldr	x2, [sp, #32]
   20b20:	ldr	w1, [sp, #52]
   20b24:	ldr	x0, [sp, #40]
   20b28:	bl	319c <_ZL27DecodeLogicalImmInstructionRN4llvm6MCInstEjmPKv>
   20b2c:	mov	w1, w0
   20b30:	add	x0, sp, #0x3c
   20b34:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20b38:	and	w0, w0, #0xff
   20b3c:	eor	w0, w0, #0x1
   20b40:	and	w0, w0, #0xff
   20b44:	cmp	w0, #0x0
   20b48:	b.eq	20b54 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1bbe4>  // b.none
   20b4c:	mov	w0, #0x0                   	// #0
   20b50:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20b54:	ldr	w0, [sp, #60]
   20b58:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20b5c:	ldr	x3, [sp, #24]
   20b60:	ldr	x2, [sp, #32]
   20b64:	ldr	w1, [sp, #52]
   20b68:	ldr	x0, [sp, #40]
   20b6c:	bl	1b98 <_ZL24DecodeMoveImmInstructionRN4llvm6MCInstEjmPKv>
   20b70:	mov	w1, w0
   20b74:	add	x0, sp, #0x3c
   20b78:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20b7c:	and	w0, w0, #0xff
   20b80:	eor	w0, w0, #0x1
   20b84:	and	w0, w0, #0xff
   20b88:	cmp	w0, #0x0
   20b8c:	b.eq	20b98 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1bc28>  // b.none
   20b90:	mov	w0, #0x0                   	// #0
   20b94:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20b98:	ldr	w0, [sp, #60]
   20b9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20ba0:	mov	w2, #0x5                   	// #5
   20ba4:	mov	w1, #0x0                   	// #0
   20ba8:	ldr	w0, [sp, #52]
   20bac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20bb0:	str	w0, [sp, #3772]
   20bb4:	ldr	x3, [sp, #24]
   20bb8:	ldr	x2, [sp, #32]
   20bbc:	ldr	w1, [sp, #3772]
   20bc0:	ldr	x0, [sp, #40]
   20bc4:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   20bc8:	mov	w1, w0
   20bcc:	add	x0, sp, #0x3c
   20bd0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20bd4:	and	w0, w0, #0xff
   20bd8:	eor	w0, w0, #0x1
   20bdc:	and	w0, w0, #0xff
   20be0:	cmp	w0, #0x0
   20be4:	b.eq	20bf0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1bc80>  // b.none
   20be8:	mov	w0, #0x0                   	// #0
   20bec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20bf0:	mov	w2, #0x5                   	// #5
   20bf4:	mov	w1, #0x5                   	// #5
   20bf8:	ldr	w0, [sp, #52]
   20bfc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20c00:	str	w0, [sp, #3772]
   20c04:	ldr	x3, [sp, #24]
   20c08:	ldr	x2, [sp, #32]
   20c0c:	ldr	w1, [sp, #3772]
   20c10:	ldr	x0, [sp, #40]
   20c14:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   20c18:	mov	w1, w0
   20c1c:	add	x0, sp, #0x3c
   20c20:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20c24:	and	w0, w0, #0xff
   20c28:	eor	w0, w0, #0x1
   20c2c:	and	w0, w0, #0xff
   20c30:	cmp	w0, #0x0
   20c34:	b.eq	20c40 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1bcd0>  // b.none
   20c38:	mov	w0, #0x0                   	// #0
   20c3c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20c40:	mov	w2, #0x5                   	// #5
   20c44:	mov	w1, #0x10                  	// #16
   20c48:	ldr	w0, [sp, #52]
   20c4c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20c50:	str	w0, [sp, #3772]
   20c54:	ldr	w0, [sp, #3772]
   20c58:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20c5c:	add	x2, sp, #0xa00
   20c60:	stp	x0, x1, [x2, #168]
   20c64:	add	x0, sp, #0xaa8
   20c68:	mov	x1, x0
   20c6c:	ldr	x0, [sp, #40]
   20c70:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20c74:	mov	w2, #0x5                   	// #5
   20c78:	mov	w1, #0xa                   	// #10
   20c7c:	ldr	w0, [sp, #52]
   20c80:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20c84:	str	w0, [sp, #3772]
   20c88:	ldr	w0, [sp, #3772]
   20c8c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20c90:	add	x2, sp, #0xa00
   20c94:	stp	x0, x1, [x2, #184]
   20c98:	add	x0, sp, #0xab8
   20c9c:	mov	x1, x0
   20ca0:	ldr	x0, [sp, #40]
   20ca4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20ca8:	ldr	w0, [sp, #60]
   20cac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20cb0:	mov	w2, #0x5                   	// #5
   20cb4:	mov	w1, #0x0                   	// #0
   20cb8:	ldr	w0, [sp, #52]
   20cbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20cc0:	str	w0, [sp, #3772]
   20cc4:	ldr	x3, [sp, #24]
   20cc8:	ldr	x2, [sp, #32]
   20ccc:	ldr	w1, [sp, #3772]
   20cd0:	ldr	x0, [sp, #40]
   20cd4:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   20cd8:	mov	w1, w0
   20cdc:	add	x0, sp, #0x3c
   20ce0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20ce4:	and	w0, w0, #0xff
   20ce8:	eor	w0, w0, #0x1
   20cec:	and	w0, w0, #0xff
   20cf0:	cmp	w0, #0x0
   20cf4:	b.eq	20d00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1bd90>  // b.none
   20cf8:	mov	w0, #0x0                   	// #0
   20cfc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20d00:	mov	w2, #0x5                   	// #5
   20d04:	mov	w1, #0x5                   	// #5
   20d08:	ldr	w0, [sp, #52]
   20d0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20d10:	str	w0, [sp, #3772]
   20d14:	ldr	x3, [sp, #24]
   20d18:	ldr	x2, [sp, #32]
   20d1c:	ldr	w1, [sp, #3772]
   20d20:	ldr	x0, [sp, #40]
   20d24:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   20d28:	mov	w1, w0
   20d2c:	add	x0, sp, #0x3c
   20d30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20d34:	and	w0, w0, #0xff
   20d38:	eor	w0, w0, #0x1
   20d3c:	and	w0, w0, #0xff
   20d40:	cmp	w0, #0x0
   20d44:	b.eq	20d50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1bde0>  // b.none
   20d48:	mov	w0, #0x0                   	// #0
   20d4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20d50:	mov	w2, #0x5                   	// #5
   20d54:	mov	w1, #0x10                  	// #16
   20d58:	ldr	w0, [sp, #52]
   20d5c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20d60:	str	w0, [sp, #3772]
   20d64:	ldr	x3, [sp, #24]
   20d68:	ldr	x2, [sp, #32]
   20d6c:	ldr	w1, [sp, #3772]
   20d70:	ldr	x0, [sp, #40]
   20d74:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   20d78:	mov	w1, w0
   20d7c:	add	x0, sp, #0x3c
   20d80:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20d84:	and	w0, w0, #0xff
   20d88:	eor	w0, w0, #0x1
   20d8c:	and	w0, w0, #0xff
   20d90:	cmp	w0, #0x0
   20d94:	b.eq	20da0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1be30>  // b.none
   20d98:	mov	w0, #0x0                   	// #0
   20d9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20da0:	mov	w2, #0x5                   	// #5
   20da4:	mov	w1, #0xa                   	// #10
   20da8:	ldr	w0, [sp, #52]
   20dac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20db0:	str	w0, [sp, #3772]
   20db4:	ldr	w0, [sp, #3772]
   20db8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20dbc:	add	x2, sp, #0xa00
   20dc0:	stp	x0, x1, [x2, #200]
   20dc4:	add	x0, sp, #0xac8
   20dc8:	mov	x1, x0
   20dcc:	ldr	x0, [sp, #40]
   20dd0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20dd4:	ldr	w0, [sp, #60]
   20dd8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20ddc:	mov	w2, #0x5                   	// #5
   20de0:	mov	w1, #0x0                   	// #0
   20de4:	ldr	w0, [sp, #52]
   20de8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20dec:	str	w0, [sp, #3772]
   20df0:	ldr	x3, [sp, #24]
   20df4:	ldr	x2, [sp, #32]
   20df8:	ldr	w1, [sp, #3772]
   20dfc:	ldr	x0, [sp, #40]
   20e00:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   20e04:	mov	w1, w0
   20e08:	add	x0, sp, #0x3c
   20e0c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20e10:	and	w0, w0, #0xff
   20e14:	eor	w0, w0, #0x1
   20e18:	and	w0, w0, #0xff
   20e1c:	cmp	w0, #0x0
   20e20:	b.eq	20e2c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1bebc>  // b.none
   20e24:	mov	w0, #0x0                   	// #0
   20e28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20e2c:	mov	w2, #0x5                   	// #5
   20e30:	mov	w1, #0x0                   	// #0
   20e34:	ldr	w0, [sp, #52]
   20e38:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20e3c:	str	w0, [sp, #3772]
   20e40:	ldr	x3, [sp, #24]
   20e44:	ldr	x2, [sp, #32]
   20e48:	ldr	w1, [sp, #3772]
   20e4c:	ldr	x0, [sp, #40]
   20e50:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   20e54:	mov	w1, w0
   20e58:	add	x0, sp, #0x3c
   20e5c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20e60:	and	w0, w0, #0xff
   20e64:	eor	w0, w0, #0x1
   20e68:	and	w0, w0, #0xff
   20e6c:	cmp	w0, #0x0
   20e70:	b.eq	20e7c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1bf0c>  // b.none
   20e74:	mov	w0, #0x0                   	// #0
   20e78:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20e7c:	mov	w2, #0x5                   	// #5
   20e80:	mov	w1, #0x5                   	// #5
   20e84:	ldr	w0, [sp, #52]
   20e88:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20e8c:	str	w0, [sp, #3772]
   20e90:	ldr	x3, [sp, #24]
   20e94:	ldr	x2, [sp, #32]
   20e98:	ldr	w1, [sp, #3772]
   20e9c:	ldr	x0, [sp, #40]
   20ea0:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   20ea4:	mov	w1, w0
   20ea8:	add	x0, sp, #0x3c
   20eac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20eb0:	and	w0, w0, #0xff
   20eb4:	eor	w0, w0, #0x1
   20eb8:	and	w0, w0, #0xff
   20ebc:	cmp	w0, #0x0
   20ec0:	b.eq	20ecc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1bf5c>  // b.none
   20ec4:	mov	w0, #0x0                   	// #0
   20ec8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20ecc:	mov	w2, #0x5                   	// #5
   20ed0:	mov	w1, #0x10                  	// #16
   20ed4:	ldr	w0, [sp, #52]
   20ed8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20edc:	str	w0, [sp, #3772]
   20ee0:	ldr	w0, [sp, #3772]
   20ee4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20ee8:	add	x2, sp, #0xa00
   20eec:	stp	x0, x1, [x2, #216]
   20ef0:	add	x0, sp, #0xad8
   20ef4:	mov	x1, x0
   20ef8:	ldr	x0, [sp, #40]
   20efc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20f00:	mov	w2, #0x5                   	// #5
   20f04:	mov	w1, #0xa                   	// #10
   20f08:	ldr	w0, [sp, #52]
   20f0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20f10:	str	w0, [sp, #3772]
   20f14:	ldr	w0, [sp, #3772]
   20f18:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20f1c:	add	x2, sp, #0xa00
   20f20:	stp	x0, x1, [x2, #232]
   20f24:	add	x0, sp, #0xae8
   20f28:	mov	x1, x0
   20f2c:	ldr	x0, [sp, #40]
   20f30:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20f34:	ldr	w0, [sp, #60]
   20f38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20f3c:	mov	w2, #0x5                   	// #5
   20f40:	mov	w1, #0x0                   	// #0
   20f44:	ldr	w0, [sp, #52]
   20f48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20f4c:	str	w0, [sp, #3772]
   20f50:	ldr	x3, [sp, #24]
   20f54:	ldr	x2, [sp, #32]
   20f58:	ldr	w1, [sp, #3772]
   20f5c:	ldr	x0, [sp, #40]
   20f60:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   20f64:	mov	w1, w0
   20f68:	add	x0, sp, #0x3c
   20f6c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20f70:	and	w0, w0, #0xff
   20f74:	eor	w0, w0, #0x1
   20f78:	and	w0, w0, #0xff
   20f7c:	cmp	w0, #0x0
   20f80:	b.eq	20f8c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c01c>  // b.none
   20f84:	mov	w0, #0x0                   	// #0
   20f88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20f8c:	mov	w2, #0x5                   	// #5
   20f90:	mov	w1, #0x5                   	// #5
   20f94:	ldr	w0, [sp, #52]
   20f98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20f9c:	str	w0, [sp, #3772]
   20fa0:	ldr	x3, [sp, #24]
   20fa4:	ldr	x2, [sp, #32]
   20fa8:	ldr	w1, [sp, #3772]
   20fac:	ldr	x0, [sp, #40]
   20fb0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   20fb4:	mov	w1, w0
   20fb8:	add	x0, sp, #0x3c
   20fbc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   20fc0:	and	w0, w0, #0xff
   20fc4:	eor	w0, w0, #0x1
   20fc8:	and	w0, w0, #0xff
   20fcc:	cmp	w0, #0x0
   20fd0:	b.eq	20fdc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c06c>  // b.none
   20fd4:	mov	w0, #0x0                   	// #0
   20fd8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   20fdc:	mov	w2, #0x6                   	// #6
   20fe0:	mov	w1, #0x10                  	// #16
   20fe4:	ldr	w0, [sp, #52]
   20fe8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   20fec:	str	w0, [sp, #3772]
   20ff0:	ldr	w0, [sp, #3772]
   20ff4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   20ff8:	add	x2, sp, #0xa00
   20ffc:	stp	x0, x1, [x2, #248]
   21000:	add	x0, sp, #0xaf8
   21004:	mov	x1, x0
   21008:	ldr	x0, [sp, #40]
   2100c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21010:	mov	w2, #0x6                   	// #6
   21014:	mov	w1, #0xa                   	// #10
   21018:	ldr	w0, [sp, #52]
   2101c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21020:	str	w0, [sp, #3772]
   21024:	ldr	w0, [sp, #3772]
   21028:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2102c:	add	x2, sp, #0xc00
   21030:	stp	x0, x1, [x2, #-248]
   21034:	add	x0, sp, #0xb08
   21038:	mov	x1, x0
   2103c:	ldr	x0, [sp, #40]
   21040:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21044:	ldr	w0, [sp, #60]
   21048:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2104c:	mov	w2, #0x5                   	// #5
   21050:	mov	w1, #0x0                   	// #0
   21054:	ldr	w0, [sp, #52]
   21058:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2105c:	str	w0, [sp, #3772]
   21060:	ldr	x3, [sp, #24]
   21064:	ldr	x2, [sp, #32]
   21068:	ldr	w1, [sp, #3772]
   2106c:	ldr	x0, [sp, #40]
   21070:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   21074:	mov	w1, w0
   21078:	add	x0, sp, #0x3c
   2107c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21080:	and	w0, w0, #0xff
   21084:	eor	w0, w0, #0x1
   21088:	and	w0, w0, #0xff
   2108c:	cmp	w0, #0x0
   21090:	b.eq	2109c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c12c>  // b.none
   21094:	mov	w0, #0x0                   	// #0
   21098:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2109c:	mov	w2, #0x5                   	// #5
   210a0:	mov	w1, #0x5                   	// #5
   210a4:	ldr	w0, [sp, #52]
   210a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   210ac:	str	w0, [sp, #3772]
   210b0:	ldr	x3, [sp, #24]
   210b4:	ldr	x2, [sp, #32]
   210b8:	ldr	w1, [sp, #3772]
   210bc:	ldr	x0, [sp, #40]
   210c0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   210c4:	mov	w1, w0
   210c8:	add	x0, sp, #0x3c
   210cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   210d0:	and	w0, w0, #0xff
   210d4:	eor	w0, w0, #0x1
   210d8:	and	w0, w0, #0xff
   210dc:	cmp	w0, #0x0
   210e0:	b.eq	210ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c17c>  // b.none
   210e4:	mov	w0, #0x0                   	// #0
   210e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   210ec:	mov	w2, #0x5                   	// #5
   210f0:	mov	w1, #0x10                  	// #16
   210f4:	ldr	w0, [sp, #52]
   210f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   210fc:	str	w0, [sp, #3772]
   21100:	ldr	x3, [sp, #24]
   21104:	ldr	x2, [sp, #32]
   21108:	ldr	w1, [sp, #3772]
   2110c:	ldr	x0, [sp, #40]
   21110:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   21114:	mov	w1, w0
   21118:	add	x0, sp, #0x3c
   2111c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21120:	and	w0, w0, #0xff
   21124:	eor	w0, w0, #0x1
   21128:	and	w0, w0, #0xff
   2112c:	cmp	w0, #0x0
   21130:	b.eq	2113c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c1cc>  // b.none
   21134:	mov	w0, #0x0                   	// #0
   21138:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2113c:	mov	w2, #0x6                   	// #6
   21140:	mov	w1, #0xa                   	// #10
   21144:	ldr	w0, [sp, #52]
   21148:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2114c:	str	w0, [sp, #3772]
   21150:	ldr	w0, [sp, #3772]
   21154:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21158:	add	x2, sp, #0xc00
   2115c:	stp	x0, x1, [x2, #-232]
   21160:	add	x0, sp, #0xb18
   21164:	mov	x1, x0
   21168:	ldr	x0, [sp, #40]
   2116c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21170:	ldr	w0, [sp, #60]
   21174:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21178:	mov	w2, #0x5                   	// #5
   2117c:	mov	w1, #0x0                   	// #0
   21180:	ldr	w0, [sp, #52]
   21184:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21188:	str	w0, [sp, #3772]
   2118c:	ldr	x3, [sp, #24]
   21190:	ldr	x2, [sp, #32]
   21194:	ldr	w1, [sp, #3772]
   21198:	ldr	x0, [sp, #40]
   2119c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   211a0:	mov	w1, w0
   211a4:	add	x0, sp, #0x3c
   211a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   211ac:	and	w0, w0, #0xff
   211b0:	eor	w0, w0, #0x1
   211b4:	and	w0, w0, #0xff
   211b8:	cmp	w0, #0x0
   211bc:	b.eq	211c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c258>  // b.none
   211c0:	mov	w0, #0x0                   	// #0
   211c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   211c8:	mov	w2, #0x5                   	// #5
   211cc:	mov	w1, #0x0                   	// #0
   211d0:	ldr	w0, [sp, #52]
   211d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   211d8:	str	w0, [sp, #3772]
   211dc:	ldr	x3, [sp, #24]
   211e0:	ldr	x2, [sp, #32]
   211e4:	ldr	w1, [sp, #3772]
   211e8:	ldr	x0, [sp, #40]
   211ec:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   211f0:	mov	w1, w0
   211f4:	add	x0, sp, #0x3c
   211f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   211fc:	and	w0, w0, #0xff
   21200:	eor	w0, w0, #0x1
   21204:	and	w0, w0, #0xff
   21208:	cmp	w0, #0x0
   2120c:	b.eq	21218 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c2a8>  // b.none
   21210:	mov	w0, #0x0                   	// #0
   21214:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21218:	mov	w2, #0x5                   	// #5
   2121c:	mov	w1, #0x5                   	// #5
   21220:	ldr	w0, [sp, #52]
   21224:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21228:	str	w0, [sp, #3772]
   2122c:	ldr	x3, [sp, #24]
   21230:	ldr	x2, [sp, #32]
   21234:	ldr	w1, [sp, #3772]
   21238:	ldr	x0, [sp, #40]
   2123c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   21240:	mov	w1, w0
   21244:	add	x0, sp, #0x3c
   21248:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2124c:	and	w0, w0, #0xff
   21250:	eor	w0, w0, #0x1
   21254:	and	w0, w0, #0xff
   21258:	cmp	w0, #0x0
   2125c:	b.eq	21268 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c2f8>  // b.none
   21260:	mov	w0, #0x0                   	// #0
   21264:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21268:	mov	w2, #0x6                   	// #6
   2126c:	mov	w1, #0x10                  	// #16
   21270:	ldr	w0, [sp, #52]
   21274:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21278:	str	w0, [sp, #3772]
   2127c:	ldr	w0, [sp, #3772]
   21280:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21284:	add	x2, sp, #0xc00
   21288:	stp	x0, x1, [x2, #-216]
   2128c:	add	x0, sp, #0xb28
   21290:	mov	x1, x0
   21294:	ldr	x0, [sp, #40]
   21298:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2129c:	mov	w2, #0x6                   	// #6
   212a0:	mov	w1, #0xa                   	// #10
   212a4:	ldr	w0, [sp, #52]
   212a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   212ac:	str	w0, [sp, #3772]
   212b0:	ldr	w0, [sp, #3772]
   212b4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   212b8:	add	x2, sp, #0xc00
   212bc:	stp	x0, x1, [x2, #-200]
   212c0:	add	x0, sp, #0xb38
   212c4:	mov	x1, x0
   212c8:	ldr	x0, [sp, #40]
   212cc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   212d0:	ldr	w0, [sp, #60]
   212d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   212d8:	ldr	x3, [sp, #24]
   212dc:	ldr	x2, [sp, #32]
   212e0:	ldr	w1, [sp, #52]
   212e4:	ldr	x0, [sp, #40]
   212e8:	bl	3960 <_ZL25DecodeUnconditionalBranchRN4llvm6MCInstEjmPKv>
   212ec:	mov	w1, w0
   212f0:	add	x0, sp, #0x3c
   212f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   212f8:	and	w0, w0, #0xff
   212fc:	eor	w0, w0, #0x1
   21300:	and	w0, w0, #0xff
   21304:	cmp	w0, #0x0
   21308:	b.eq	21314 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c3a4>  // b.none
   2130c:	mov	w0, #0x0                   	// #0
   21310:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21314:	ldr	w0, [sp, #60]
   21318:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2131c:	mov	w2, #0x5                   	// #5
   21320:	mov	w1, #0x0                   	// #0
   21324:	ldr	w0, [sp, #52]
   21328:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2132c:	str	w0, [sp, #3772]
   21330:	ldr	x3, [sp, #24]
   21334:	ldr	x2, [sp, #32]
   21338:	ldr	w1, [sp, #3772]
   2133c:	ldr	x0, [sp, #40]
   21340:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   21344:	mov	w1, w0
   21348:	add	x0, sp, #0x3c
   2134c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21350:	and	w0, w0, #0xff
   21354:	eor	w0, w0, #0x1
   21358:	and	w0, w0, #0xff
   2135c:	cmp	w0, #0x0
   21360:	b.eq	2136c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c3fc>  // b.none
   21364:	mov	w0, #0x0                   	// #0
   21368:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2136c:	mov	w2, #0x13                  	// #19
   21370:	mov	w1, #0x5                   	// #5
   21374:	ldr	w0, [sp, #52]
   21378:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2137c:	str	w0, [sp, #3772]
   21380:	ldr	x3, [sp, #24]
   21384:	ldr	x2, [sp, #32]
   21388:	ldr	w1, [sp, #3772]
   2138c:	ldr	x0, [sp, #40]
   21390:	bl	132c <_ZL18DecodePCRelLabel19RN4llvm6MCInstEjmPKv>
   21394:	mov	w1, w0
   21398:	add	x0, sp, #0x3c
   2139c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   213a0:	and	w0, w0, #0xff
   213a4:	eor	w0, w0, #0x1
   213a8:	and	w0, w0, #0xff
   213ac:	cmp	w0, #0x0
   213b0:	b.eq	213bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c44c>  // b.none
   213b4:	mov	w0, #0x0                   	// #0
   213b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   213bc:	ldr	w0, [sp, #60]
   213c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   213c4:	ldr	x3, [sp, #24]
   213c8:	ldr	x2, [sp, #32]
   213cc:	ldr	w1, [sp, #52]
   213d0:	ldr	x0, [sp, #40]
   213d4:	bl	3bb0 <_ZL19DecodeTestAndBranchRN4llvm6MCInstEjmPKv>
   213d8:	mov	w1, w0
   213dc:	add	x0, sp, #0x3c
   213e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   213e4:	and	w0, w0, #0xff
   213e8:	eor	w0, w0, #0x1
   213ec:	and	w0, w0, #0xff
   213f0:	cmp	w0, #0x0
   213f4:	b.eq	21400 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c490>  // b.none
   213f8:	mov	w0, #0x0                   	// #0
   213fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21400:	ldr	w0, [sp, #60]
   21404:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21408:	mov	w2, #0x4                   	// #4
   2140c:	mov	w1, #0x0                   	// #0
   21410:	ldr	w0, [sp, #52]
   21414:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21418:	str	w0, [sp, #3772]
   2141c:	ldr	w0, [sp, #3772]
   21420:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21424:	add	x2, sp, #0xc00
   21428:	stp	x0, x1, [x2, #-184]
   2142c:	add	x0, sp, #0xb48
   21430:	mov	x1, x0
   21434:	ldr	x0, [sp, #40]
   21438:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2143c:	mov	w2, #0x13                  	// #19
   21440:	mov	w1, #0x5                   	// #5
   21444:	ldr	w0, [sp, #52]
   21448:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2144c:	str	w0, [sp, #3772]
   21450:	ldr	x3, [sp, #24]
   21454:	ldr	x2, [sp, #32]
   21458:	ldr	w1, [sp, #3772]
   2145c:	ldr	x0, [sp, #40]
   21460:	bl	132c <_ZL18DecodePCRelLabel19RN4llvm6MCInstEjmPKv>
   21464:	mov	w1, w0
   21468:	add	x0, sp, #0x3c
   2146c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21470:	and	w0, w0, #0xff
   21474:	eor	w0, w0, #0x1
   21478:	and	w0, w0, #0xff
   2147c:	cmp	w0, #0x0
   21480:	b.eq	2148c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c51c>  // b.none
   21484:	mov	w0, #0x0                   	// #0
   21488:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2148c:	ldr	w0, [sp, #60]
   21490:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21494:	mov	w2, #0x5                   	// #5
   21498:	mov	w1, #0x0                   	// #0
   2149c:	ldr	w0, [sp, #52]
   214a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   214a4:	str	w0, [sp, #3772]
   214a8:	ldr	x3, [sp, #24]
   214ac:	ldr	x2, [sp, #32]
   214b0:	ldr	w1, [sp, #3772]
   214b4:	ldr	x0, [sp, #40]
   214b8:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   214bc:	mov	w1, w0
   214c0:	add	x0, sp, #0x3c
   214c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   214c8:	and	w0, w0, #0xff
   214cc:	eor	w0, w0, #0x1
   214d0:	and	w0, w0, #0xff
   214d4:	cmp	w0, #0x0
   214d8:	b.eq	214e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c574>  // b.none
   214dc:	mov	w0, #0x0                   	// #0
   214e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   214e4:	mov	w2, #0x13                  	// #19
   214e8:	mov	w1, #0x5                   	// #5
   214ec:	ldr	w0, [sp, #52]
   214f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   214f4:	str	w0, [sp, #3772]
   214f8:	ldr	x3, [sp, #24]
   214fc:	ldr	x2, [sp, #32]
   21500:	ldr	w1, [sp, #3772]
   21504:	ldr	x0, [sp, #40]
   21508:	bl	132c <_ZL18DecodePCRelLabel19RN4llvm6MCInstEjmPKv>
   2150c:	mov	w1, w0
   21510:	add	x0, sp, #0x3c
   21514:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21518:	and	w0, w0, #0xff
   2151c:	eor	w0, w0, #0x1
   21520:	and	w0, w0, #0xff
   21524:	cmp	w0, #0x0
   21528:	b.eq	21534 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c5c4>  // b.none
   2152c:	mov	w0, #0x0                   	// #0
   21530:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21534:	ldr	w0, [sp, #60]
   21538:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2153c:	mov	w2, #0x10                  	// #16
   21540:	mov	w1, #0x5                   	// #5
   21544:	ldr	w0, [sp, #52]
   21548:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2154c:	str	w0, [sp, #3772]
   21550:	ldr	w0, [sp, #3772]
   21554:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21558:	add	x2, sp, #0xc00
   2155c:	stp	x0, x1, [x2, #-168]
   21560:	add	x0, sp, #0xb58
   21564:	mov	x1, x0
   21568:	ldr	x0, [sp, #40]
   2156c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21570:	ldr	w0, [sp, #60]
   21574:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21578:	mov	w2, #0x4                   	// #4
   2157c:	mov	w1, #0x8                   	// #8
   21580:	ldr	w0, [sp, #52]
   21584:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21588:	str	w0, [sp, #3772]
   2158c:	ldr	w0, [sp, #3772]
   21590:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21594:	add	x2, sp, #0xc00
   21598:	stp	x0, x1, [x2, #-152]
   2159c:	add	x0, sp, #0xb68
   215a0:	mov	x1, x0
   215a4:	ldr	x0, [sp, #40]
   215a8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   215ac:	ldr	w0, [sp, #60]
   215b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   215b4:	mov	w2, #0x7                   	// #7
   215b8:	mov	w1, #0x5                   	// #5
   215bc:	ldr	w0, [sp, #52]
   215c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   215c4:	str	w0, [sp, #3772]
   215c8:	ldr	w0, [sp, #3772]
   215cc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   215d0:	add	x2, sp, #0xc00
   215d4:	stp	x0, x1, [x2, #-136]
   215d8:	add	x0, sp, #0xb78
   215dc:	mov	x1, x0
   215e0:	ldr	x0, [sp, #40]
   215e4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   215e8:	ldr	w0, [sp, #60]
   215ec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   215f0:	ldr	x3, [sp, #24]
   215f4:	ldr	x2, [sp, #32]
   215f8:	ldr	w1, [sp, #52]
   215fc:	ldr	x0, [sp, #40]
   21600:	bl	3a1c <_ZL29DecodeSystemPStateInstructionRN4llvm6MCInstEjmPKv>
   21604:	mov	w1, w0
   21608:	add	x0, sp, #0x3c
   2160c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21610:	and	w0, w0, #0xff
   21614:	eor	w0, w0, #0x1
   21618:	and	w0, w0, #0xff
   2161c:	cmp	w0, #0x0
   21620:	b.eq	21634 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c6c4>  // b.none
   21624:	ldr	x0, [sp, #16]
   21628:	strb	wzr, [x0]
   2162c:	mov	w0, #0x0                   	// #0
   21630:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21634:	ldr	w0, [sp, #60]
   21638:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2163c:	mov	w2, #0x3                   	// #3
   21640:	mov	w1, #0x10                  	// #16
   21644:	ldr	w0, [sp, #52]
   21648:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2164c:	str	w0, [sp, #3772]
   21650:	ldr	w0, [sp, #3772]
   21654:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21658:	add	x2, sp, #0xc00
   2165c:	stp	x0, x1, [x2, #-120]
   21660:	add	x0, sp, #0xb88
   21664:	mov	x1, x0
   21668:	ldr	x0, [sp, #40]
   2166c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21670:	mov	w2, #0x4                   	// #4
   21674:	mov	w1, #0xc                   	// #12
   21678:	ldr	w0, [sp, #52]
   2167c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21680:	str	w0, [sp, #3772]
   21684:	ldr	w0, [sp, #3772]
   21688:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2168c:	add	x2, sp, #0xc00
   21690:	stp	x0, x1, [x2, #-104]
   21694:	add	x0, sp, #0xb98
   21698:	mov	x1, x0
   2169c:	ldr	x0, [sp, #40]
   216a0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   216a4:	mov	w2, #0x4                   	// #4
   216a8:	mov	w1, #0x8                   	// #8
   216ac:	ldr	w0, [sp, #52]
   216b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   216b4:	str	w0, [sp, #3772]
   216b8:	ldr	w0, [sp, #3772]
   216bc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   216c0:	add	x2, sp, #0xc00
   216c4:	stp	x0, x1, [x2, #-88]
   216c8:	add	x0, sp, #0xba8
   216cc:	mov	x1, x0
   216d0:	ldr	x0, [sp, #40]
   216d4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   216d8:	mov	w2, #0x3                   	// #3
   216dc:	mov	w1, #0x5                   	// #5
   216e0:	ldr	w0, [sp, #52]
   216e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   216e8:	str	w0, [sp, #3772]
   216ec:	ldr	w0, [sp, #3772]
   216f0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   216f4:	add	x2, sp, #0xc00
   216f8:	stp	x0, x1, [x2, #-72]
   216fc:	add	x0, sp, #0xbb8
   21700:	mov	x1, x0
   21704:	ldr	x0, [sp, #40]
   21708:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2170c:	mov	w2, #0x5                   	// #5
   21710:	mov	w1, #0x0                   	// #0
   21714:	ldr	w0, [sp, #52]
   21718:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2171c:	str	w0, [sp, #3772]
   21720:	ldr	x3, [sp, #24]
   21724:	ldr	x2, [sp, #32]
   21728:	ldr	w1, [sp, #3772]
   2172c:	ldr	x0, [sp, #40]
   21730:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   21734:	mov	w1, w0
   21738:	add	x0, sp, #0x3c
   2173c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21740:	and	w0, w0, #0xff
   21744:	eor	w0, w0, #0x1
   21748:	and	w0, w0, #0xff
   2174c:	cmp	w0, #0x0
   21750:	b.eq	2175c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c7ec>  // b.none
   21754:	mov	w0, #0x0                   	// #0
   21758:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2175c:	ldr	w0, [sp, #60]
   21760:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21764:	mov	w2, #0x10                  	// #16
   21768:	mov	w1, #0x5                   	// #5
   2176c:	ldr	w0, [sp, #52]
   21770:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21774:	str	w0, [sp, #3772]
   21778:	ldr	x3, [sp, #24]
   2177c:	ldr	x2, [sp, #32]
   21780:	ldr	w1, [sp, #3772]
   21784:	ldr	x0, [sp, #40]
   21788:	bl	14a0 <_ZL23DecodeMSRSystemRegisterRN4llvm6MCInstEjmPKv>
   2178c:	mov	w1, w0
   21790:	add	x0, sp, #0x3c
   21794:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21798:	and	w0, w0, #0xff
   2179c:	eor	w0, w0, #0x1
   217a0:	and	w0, w0, #0xff
   217a4:	cmp	w0, #0x0
   217a8:	b.eq	217b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c844>  // b.none
   217ac:	mov	w0, #0x0                   	// #0
   217b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   217b4:	mov	w2, #0x5                   	// #5
   217b8:	mov	w1, #0x0                   	// #0
   217bc:	ldr	w0, [sp, #52]
   217c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   217c4:	str	w0, [sp, #3772]
   217c8:	ldr	x3, [sp, #24]
   217cc:	ldr	x2, [sp, #32]
   217d0:	ldr	w1, [sp, #3772]
   217d4:	ldr	x0, [sp, #40]
   217d8:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   217dc:	mov	w1, w0
   217e0:	add	x0, sp, #0x3c
   217e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   217e8:	and	w0, w0, #0xff
   217ec:	eor	w0, w0, #0x1
   217f0:	and	w0, w0, #0xff
   217f4:	cmp	w0, #0x0
   217f8:	b.eq	21804 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c894>  // b.none
   217fc:	mov	w0, #0x0                   	// #0
   21800:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21804:	ldr	w0, [sp, #60]
   21808:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2180c:	mov	w2, #0x5                   	// #5
   21810:	mov	w1, #0x0                   	// #0
   21814:	ldr	w0, [sp, #52]
   21818:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2181c:	str	w0, [sp, #3772]
   21820:	ldr	x3, [sp, #24]
   21824:	ldr	x2, [sp, #32]
   21828:	ldr	w1, [sp, #3772]
   2182c:	ldr	x0, [sp, #40]
   21830:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   21834:	mov	w1, w0
   21838:	add	x0, sp, #0x3c
   2183c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21840:	and	w0, w0, #0xff
   21844:	eor	w0, w0, #0x1
   21848:	and	w0, w0, #0xff
   2184c:	cmp	w0, #0x0
   21850:	b.eq	2185c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c8ec>  // b.none
   21854:	mov	w0, #0x0                   	// #0
   21858:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2185c:	ldr	w0, [sp, #60]
   21860:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21864:	mov	w2, #0x5                   	// #5
   21868:	mov	w1, #0x0                   	// #0
   2186c:	ldr	w0, [sp, #52]
   21870:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21874:	str	w0, [sp, #3772]
   21878:	ldr	x3, [sp, #24]
   2187c:	ldr	x2, [sp, #32]
   21880:	ldr	w1, [sp, #3772]
   21884:	ldr	x0, [sp, #40]
   21888:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2188c:	mov	w1, w0
   21890:	add	x0, sp, #0x3c
   21894:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21898:	and	w0, w0, #0xff
   2189c:	eor	w0, w0, #0x1
   218a0:	and	w0, w0, #0xff
   218a4:	cmp	w0, #0x0
   218a8:	b.eq	218b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1c944>  // b.none
   218ac:	mov	w0, #0x0                   	// #0
   218b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   218b4:	mov	w2, #0x3                   	// #3
   218b8:	mov	w1, #0x10                  	// #16
   218bc:	ldr	w0, [sp, #52]
   218c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   218c4:	str	w0, [sp, #3772]
   218c8:	ldr	w0, [sp, #3772]
   218cc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   218d0:	add	x2, sp, #0xc00
   218d4:	stp	x0, x1, [x2, #-56]
   218d8:	add	x0, sp, #0xbc8
   218dc:	mov	x1, x0
   218e0:	ldr	x0, [sp, #40]
   218e4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   218e8:	mov	w2, #0x4                   	// #4
   218ec:	mov	w1, #0xc                   	// #12
   218f0:	ldr	w0, [sp, #52]
   218f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   218f8:	str	w0, [sp, #3772]
   218fc:	ldr	w0, [sp, #3772]
   21900:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21904:	add	x2, sp, #0xc00
   21908:	stp	x0, x1, [x2, #-40]
   2190c:	add	x0, sp, #0xbd8
   21910:	mov	x1, x0
   21914:	ldr	x0, [sp, #40]
   21918:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2191c:	mov	w2, #0x4                   	// #4
   21920:	mov	w1, #0x8                   	// #8
   21924:	ldr	w0, [sp, #52]
   21928:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2192c:	str	w0, [sp, #3772]
   21930:	ldr	w0, [sp, #3772]
   21934:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21938:	add	x2, sp, #0xc00
   2193c:	stp	x0, x1, [x2, #-24]
   21940:	add	x0, sp, #0xbe8
   21944:	mov	x1, x0
   21948:	ldr	x0, [sp, #40]
   2194c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21950:	mov	w2, #0x3                   	// #3
   21954:	mov	w1, #0x5                   	// #5
   21958:	ldr	w0, [sp, #52]
   2195c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21960:	str	w0, [sp, #3772]
   21964:	ldr	w0, [sp, #3772]
   21968:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2196c:	add	x2, sp, #0xc00
   21970:	stp	x0, x1, [x2, #-8]
   21974:	add	x0, sp, #0xbf8
   21978:	mov	x1, x0
   2197c:	ldr	x0, [sp, #40]
   21980:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21984:	ldr	w0, [sp, #60]
   21988:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2198c:	mov	w2, #0x5                   	// #5
   21990:	mov	w1, #0x0                   	// #0
   21994:	ldr	w0, [sp, #52]
   21998:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2199c:	str	w0, [sp, #3772]
   219a0:	ldr	x3, [sp, #24]
   219a4:	ldr	x2, [sp, #32]
   219a8:	ldr	w1, [sp, #3772]
   219ac:	ldr	x0, [sp, #40]
   219b0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   219b4:	mov	w1, w0
   219b8:	add	x0, sp, #0x3c
   219bc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   219c0:	and	w0, w0, #0xff
   219c4:	eor	w0, w0, #0x1
   219c8:	and	w0, w0, #0xff
   219cc:	cmp	w0, #0x0
   219d0:	b.eq	219dc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ca6c>  // b.none
   219d4:	mov	w0, #0x0                   	// #0
   219d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   219dc:	mov	w2, #0x10                  	// #16
   219e0:	mov	w1, #0x5                   	// #5
   219e4:	ldr	w0, [sp, #52]
   219e8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   219ec:	str	w0, [sp, #3772]
   219f0:	ldr	x3, [sp, #24]
   219f4:	ldr	x2, [sp, #32]
   219f8:	ldr	w1, [sp, #3772]
   219fc:	ldr	x0, [sp, #40]
   21a00:	bl	1460 <_ZL23DecodeMRSSystemRegisterRN4llvm6MCInstEjmPKv>
   21a04:	mov	w1, w0
   21a08:	add	x0, sp, #0x3c
   21a0c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21a10:	and	w0, w0, #0xff
   21a14:	eor	w0, w0, #0x1
   21a18:	and	w0, w0, #0xff
   21a1c:	cmp	w0, #0x0
   21a20:	b.eq	21a2c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cabc>  // b.none
   21a24:	mov	w0, #0x0                   	// #0
   21a28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21a2c:	ldr	w0, [sp, #60]
   21a30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21a34:	mov	w2, #0x5                   	// #5
   21a38:	mov	w1, #0x5                   	// #5
   21a3c:	ldr	w0, [sp, #52]
   21a40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21a44:	str	w0, [sp, #3772]
   21a48:	ldr	x3, [sp, #24]
   21a4c:	ldr	x2, [sp, #32]
   21a50:	ldr	w1, [sp, #3772]
   21a54:	ldr	x0, [sp, #40]
   21a58:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   21a5c:	mov	w1, w0
   21a60:	add	x0, sp, #0x3c
   21a64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21a68:	and	w0, w0, #0xff
   21a6c:	eor	w0, w0, #0x1
   21a70:	and	w0, w0, #0xff
   21a74:	cmp	w0, #0x0
   21a78:	b.eq	21a84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cb14>  // b.none
   21a7c:	mov	w0, #0x0                   	// #0
   21a80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21a84:	ldr	w0, [sp, #60]
   21a88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21a8c:	mov	w2, #0x5                   	// #5
   21a90:	mov	w1, #0x5                   	// #5
   21a94:	ldr	w0, [sp, #52]
   21a98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21a9c:	str	w0, [sp, #3772]
   21aa0:	ldr	x3, [sp, #24]
   21aa4:	ldr	x2, [sp, #32]
   21aa8:	ldr	w1, [sp, #3772]
   21aac:	ldr	x0, [sp, #40]
   21ab0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   21ab4:	mov	w1, w0
   21ab8:	add	x0, sp, #0x3c
   21abc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21ac0:	and	w0, w0, #0xff
   21ac4:	eor	w0, w0, #0x1
   21ac8:	and	w0, w0, #0xff
   21acc:	cmp	w0, #0x0
   21ad0:	b.eq	21adc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cb6c>  // b.none
   21ad4:	mov	w0, #0x0                   	// #0
   21ad8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21adc:	mov	w2, #0x5                   	// #5
   21ae0:	mov	w1, #0x0                   	// #0
   21ae4:	ldr	w0, [sp, #52]
   21ae8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21aec:	str	w0, [sp, #3772]
   21af0:	ldr	x3, [sp, #24]
   21af4:	ldr	x2, [sp, #32]
   21af8:	ldr	w1, [sp, #3772]
   21afc:	ldr	x0, [sp, #40]
   21b00:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   21b04:	mov	w1, w0
   21b08:	add	x0, sp, #0x3c
   21b0c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21b10:	and	w0, w0, #0xff
   21b14:	eor	w0, w0, #0x1
   21b18:	and	w0, w0, #0xff
   21b1c:	cmp	w0, #0x0
   21b20:	b.eq	21b2c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cbbc>  // b.none
   21b24:	mov	w0, #0x0                   	// #0
   21b28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21b2c:	ldr	w0, [sp, #60]
   21b30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21b34:	ldr	x3, [sp, #24]
   21b38:	ldr	x2, [sp, #32]
   21b3c:	ldr	w1, [sp, #52]
   21b40:	ldr	x0, [sp, #40]
   21b44:	bl	2094 <_ZL27DecodeSignedLdStInstructionRN4llvm6MCInstEjmPKv>
   21b48:	mov	w1, w0
   21b4c:	add	x0, sp, #0x3c
   21b50:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21b54:	and	w0, w0, #0xff
   21b58:	eor	w0, w0, #0x1
   21b5c:	and	w0, w0, #0xff
   21b60:	cmp	w0, #0x0
   21b64:	b.eq	21b70 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cc00>  // b.none
   21b68:	mov	w0, #0x0                   	// #0
   21b6c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21b70:	ldr	w0, [sp, #60]
   21b74:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21b78:	mov	w2, #0x5                   	// #5
   21b7c:	mov	w1, #0x0                   	// #0
   21b80:	ldr	w0, [sp, #52]
   21b84:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21b88:	str	w0, [sp, #3772]
   21b8c:	ldr	x3, [sp, #24]
   21b90:	ldr	x2, [sp, #32]
   21b94:	ldr	w1, [sp, #3772]
   21b98:	ldr	x0, [sp, #40]
   21b9c:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   21ba0:	mov	w1, w0
   21ba4:	add	x0, sp, #0x3c
   21ba8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21bac:	and	w0, w0, #0xff
   21bb0:	eor	w0, w0, #0x1
   21bb4:	and	w0, w0, #0xff
   21bb8:	cmp	w0, #0x0
   21bbc:	b.eq	21bc8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cc58>  // b.none
   21bc0:	mov	w0, #0x0                   	// #0
   21bc4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21bc8:	mov	w2, #0x5                   	// #5
   21bcc:	mov	w1, #0x5                   	// #5
   21bd0:	ldr	w0, [sp, #52]
   21bd4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21bd8:	str	w0, [sp, #3772]
   21bdc:	ldr	x3, [sp, #24]
   21be0:	ldr	x2, [sp, #32]
   21be4:	ldr	w1, [sp, #3772]
   21be8:	ldr	x0, [sp, #40]
   21bec:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   21bf0:	mov	w1, w0
   21bf4:	add	x0, sp, #0x3c
   21bf8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21bfc:	and	w0, w0, #0xff
   21c00:	eor	w0, w0, #0x1
   21c04:	and	w0, w0, #0xff
   21c08:	cmp	w0, #0x0
   21c0c:	b.eq	21c18 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cca8>  // b.none
   21c10:	mov	w0, #0x0                   	// #0
   21c14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21c18:	mov	w2, #0x5                   	// #5
   21c1c:	mov	w1, #0x10                  	// #16
   21c20:	ldr	w0, [sp, #52]
   21c24:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21c28:	str	w0, [sp, #3772]
   21c2c:	ldr	x3, [sp, #24]
   21c30:	ldr	x2, [sp, #32]
   21c34:	ldr	w1, [sp, #3772]
   21c38:	ldr	x0, [sp, #40]
   21c3c:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   21c40:	mov	w1, w0
   21c44:	add	x0, sp, #0x3c
   21c48:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21c4c:	and	w0, w0, #0xff
   21c50:	eor	w0, w0, #0x1
   21c54:	and	w0, w0, #0xff
   21c58:	cmp	w0, #0x0
   21c5c:	b.eq	21c68 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ccf8>  // b.none
   21c60:	mov	w0, #0x0                   	// #0
   21c64:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21c68:	ldr	w0, [sp, #60]
   21c6c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21c70:	mov	w2, #0x5                   	// #5
   21c74:	mov	w1, #0x0                   	// #0
   21c78:	ldr	w0, [sp, #52]
   21c7c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21c80:	str	w0, [sp, #3772]
   21c84:	ldr	x3, [sp, #24]
   21c88:	ldr	x2, [sp, #32]
   21c8c:	ldr	w1, [sp, #3772]
   21c90:	ldr	x0, [sp, #40]
   21c94:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   21c98:	mov	w1, w0
   21c9c:	add	x0, sp, #0x3c
   21ca0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21ca4:	and	w0, w0, #0xff
   21ca8:	eor	w0, w0, #0x1
   21cac:	and	w0, w0, #0xff
   21cb0:	cmp	w0, #0x0
   21cb4:	b.eq	21cc0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cd50>  // b.none
   21cb8:	mov	w0, #0x0                   	// #0
   21cbc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21cc0:	mov	w2, #0x5                   	// #5
   21cc4:	mov	w1, #0x5                   	// #5
   21cc8:	ldr	w0, [sp, #52]
   21ccc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21cd0:	str	w0, [sp, #3772]
   21cd4:	ldr	x3, [sp, #24]
   21cd8:	ldr	x2, [sp, #32]
   21cdc:	ldr	w1, [sp, #3772]
   21ce0:	ldr	x0, [sp, #40]
   21ce4:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   21ce8:	mov	w1, w0
   21cec:	add	x0, sp, #0x3c
   21cf0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21cf4:	and	w0, w0, #0xff
   21cf8:	eor	w0, w0, #0x1
   21cfc:	and	w0, w0, #0xff
   21d00:	cmp	w0, #0x0
   21d04:	b.eq	21d10 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cda0>  // b.none
   21d08:	mov	w0, #0x0                   	// #0
   21d0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21d10:	mov	w2, #0x5                   	// #5
   21d14:	mov	w1, #0x10                  	// #16
   21d18:	ldr	w0, [sp, #52]
   21d1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21d20:	str	w0, [sp, #3772]
   21d24:	ldr	x3, [sp, #24]
   21d28:	ldr	x2, [sp, #32]
   21d2c:	ldr	w1, [sp, #3772]
   21d30:	ldr	x0, [sp, #40]
   21d34:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   21d38:	mov	w1, w0
   21d3c:	add	x0, sp, #0x3c
   21d40:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21d44:	and	w0, w0, #0xff
   21d48:	eor	w0, w0, #0x1
   21d4c:	and	w0, w0, #0xff
   21d50:	cmp	w0, #0x0
   21d54:	b.eq	21d60 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cdf0>  // b.none
   21d58:	mov	w0, #0x0                   	// #0
   21d5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21d60:	mov	w2, #0x4                   	// #4
   21d64:	mov	w1, #0xc                   	// #12
   21d68:	ldr	w0, [sp, #52]
   21d6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21d70:	str	w0, [sp, #3772]
   21d74:	ldr	w0, [sp, #3772]
   21d78:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21d7c:	add	x2, sp, #0xc00
   21d80:	stp	x0, x1, [x2, #8]
   21d84:	add	x0, sp, #0xc08
   21d88:	mov	x1, x0
   21d8c:	ldr	x0, [sp, #40]
   21d90:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   21d94:	ldr	w0, [sp, #60]
   21d98:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21d9c:	mov	w2, #0x5                   	// #5
   21da0:	mov	w1, #0x0                   	// #0
   21da4:	ldr	w0, [sp, #52]
   21da8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21dac:	str	w0, [sp, #3772]
   21db0:	ldr	x3, [sp, #24]
   21db4:	ldr	x2, [sp, #32]
   21db8:	ldr	w1, [sp, #3772]
   21dbc:	ldr	x0, [sp, #40]
   21dc0:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   21dc4:	mov	w1, w0
   21dc8:	add	x0, sp, #0x3c
   21dcc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21dd0:	and	w0, w0, #0xff
   21dd4:	eor	w0, w0, #0x1
   21dd8:	and	w0, w0, #0xff
   21ddc:	cmp	w0, #0x0
   21de0:	b.eq	21dec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ce7c>  // b.none
   21de4:	mov	w0, #0x0                   	// #0
   21de8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21dec:	mov	w2, #0x5                   	// #5
   21df0:	mov	w1, #0x5                   	// #5
   21df4:	ldr	w0, [sp, #52]
   21df8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21dfc:	str	w0, [sp, #3772]
   21e00:	ldr	x3, [sp, #24]
   21e04:	ldr	x2, [sp, #32]
   21e08:	ldr	w1, [sp, #3772]
   21e0c:	ldr	x0, [sp, #40]
   21e10:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   21e14:	mov	w1, w0
   21e18:	add	x0, sp, #0x3c
   21e1c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21e20:	and	w0, w0, #0xff
   21e24:	eor	w0, w0, #0x1
   21e28:	and	w0, w0, #0xff
   21e2c:	cmp	w0, #0x0
   21e30:	b.eq	21e3c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cecc>  // b.none
   21e34:	mov	w0, #0x0                   	// #0
   21e38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21e3c:	mov	w2, #0x5                   	// #5
   21e40:	mov	w1, #0x10                  	// #16
   21e44:	ldr	w0, [sp, #52]
   21e48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21e4c:	str	w0, [sp, #3772]
   21e50:	ldr	x3, [sp, #24]
   21e54:	ldr	x2, [sp, #32]
   21e58:	ldr	w1, [sp, #3772]
   21e5c:	ldr	x0, [sp, #40]
   21e60:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   21e64:	mov	w1, w0
   21e68:	add	x0, sp, #0x3c
   21e6c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21e70:	and	w0, w0, #0xff
   21e74:	eor	w0, w0, #0x1
   21e78:	and	w0, w0, #0xff
   21e7c:	cmp	w0, #0x0
   21e80:	b.eq	21e8c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cf1c>  // b.none
   21e84:	mov	w0, #0x0                   	// #0
   21e88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21e8c:	mov	w2, #0x5                   	// #5
   21e90:	mov	w1, #0xa                   	// #10
   21e94:	ldr	w0, [sp, #52]
   21e98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21e9c:	str	w0, [sp, #3772]
   21ea0:	ldr	x3, [sp, #24]
   21ea4:	ldr	x2, [sp, #32]
   21ea8:	ldr	w1, [sp, #3772]
   21eac:	ldr	x0, [sp, #40]
   21eb0:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   21eb4:	mov	w1, w0
   21eb8:	add	x0, sp, #0x3c
   21ebc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21ec0:	and	w0, w0, #0xff
   21ec4:	eor	w0, w0, #0x1
   21ec8:	and	w0, w0, #0xff
   21ecc:	cmp	w0, #0x0
   21ed0:	b.eq	21edc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cf6c>  // b.none
   21ed4:	mov	w0, #0x0                   	// #0
   21ed8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21edc:	ldr	w0, [sp, #60]
   21ee0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21ee4:	mov	w2, #0x5                   	// #5
   21ee8:	mov	w1, #0x0                   	// #0
   21eec:	ldr	w0, [sp, #52]
   21ef0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21ef4:	str	w0, [sp, #3772]
   21ef8:	ldr	x3, [sp, #24]
   21efc:	ldr	x2, [sp, #32]
   21f00:	ldr	w1, [sp, #3772]
   21f04:	ldr	x0, [sp, #40]
   21f08:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   21f0c:	mov	w1, w0
   21f10:	add	x0, sp, #0x3c
   21f14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21f18:	and	w0, w0, #0xff
   21f1c:	eor	w0, w0, #0x1
   21f20:	and	w0, w0, #0xff
   21f24:	cmp	w0, #0x0
   21f28:	b.eq	21f34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1cfc4>  // b.none
   21f2c:	mov	w0, #0x0                   	// #0
   21f30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21f34:	mov	w2, #0x5                   	// #5
   21f38:	mov	w1, #0x10                  	// #16
   21f3c:	ldr	w0, [sp, #52]
   21f40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21f44:	str	w0, [sp, #3772]
   21f48:	ldr	x3, [sp, #24]
   21f4c:	ldr	x2, [sp, #32]
   21f50:	ldr	w1, [sp, #3772]
   21f54:	ldr	x0, [sp, #40]
   21f58:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   21f5c:	mov	w1, w0
   21f60:	add	x0, sp, #0x3c
   21f64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21f68:	and	w0, w0, #0xff
   21f6c:	eor	w0, w0, #0x1
   21f70:	and	w0, w0, #0xff
   21f74:	cmp	w0, #0x0
   21f78:	b.eq	21f84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d014>  // b.none
   21f7c:	mov	w0, #0x0                   	// #0
   21f80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21f84:	mov	w2, #0x5                   	// #5
   21f88:	mov	w1, #0x5                   	// #5
   21f8c:	ldr	w0, [sp, #52]
   21f90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21f94:	str	w0, [sp, #3772]
   21f98:	ldr	x3, [sp, #24]
   21f9c:	ldr	x2, [sp, #32]
   21fa0:	ldr	w1, [sp, #3772]
   21fa4:	ldr	x0, [sp, #40]
   21fa8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   21fac:	mov	w1, w0
   21fb0:	add	x0, sp, #0x3c
   21fb4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   21fb8:	and	w0, w0, #0xff
   21fbc:	eor	w0, w0, #0x1
   21fc0:	and	w0, w0, #0xff
   21fc4:	cmp	w0, #0x0
   21fc8:	b.eq	21fd4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d064>  // b.none
   21fcc:	mov	w0, #0x0                   	// #0
   21fd0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21fd4:	ldr	w0, [sp, #60]
   21fd8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   21fdc:	mov	w2, #0x5                   	// #5
   21fe0:	mov	w1, #0x0                   	// #0
   21fe4:	ldr	w0, [sp, #52]
   21fe8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   21fec:	str	w0, [sp, #3772]
   21ff0:	ldr	x3, [sp, #24]
   21ff4:	ldr	x2, [sp, #32]
   21ff8:	ldr	w1, [sp, #3772]
   21ffc:	ldr	x0, [sp, #40]
   22000:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   22004:	mov	w1, w0
   22008:	add	x0, sp, #0x3c
   2200c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22010:	and	w0, w0, #0xff
   22014:	eor	w0, w0, #0x1
   22018:	and	w0, w0, #0xff
   2201c:	cmp	w0, #0x0
   22020:	b.eq	2202c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d0bc>  // b.none
   22024:	mov	w0, #0x0                   	// #0
   22028:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2202c:	mov	w2, #0x5                   	// #5
   22030:	mov	w1, #0x5                   	// #5
   22034:	ldr	w0, [sp, #52]
   22038:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2203c:	str	w0, [sp, #3772]
   22040:	ldr	x3, [sp, #24]
   22044:	ldr	x2, [sp, #32]
   22048:	ldr	w1, [sp, #3772]
   2204c:	ldr	x0, [sp, #40]
   22050:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   22054:	mov	w1, w0
   22058:	add	x0, sp, #0x3c
   2205c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22060:	and	w0, w0, #0xff
   22064:	eor	w0, w0, #0x1
   22068:	and	w0, w0, #0xff
   2206c:	cmp	w0, #0x0
   22070:	b.eq	2207c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d10c>  // b.none
   22074:	mov	w0, #0x0                   	// #0
   22078:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2207c:	mov	w2, #0x5                   	// #5
   22080:	mov	w1, #0x10                  	// #16
   22084:	ldr	w0, [sp, #52]
   22088:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2208c:	str	w0, [sp, #3772]
   22090:	ldr	x3, [sp, #24]
   22094:	ldr	x2, [sp, #32]
   22098:	ldr	w1, [sp, #3772]
   2209c:	ldr	x0, [sp, #40]
   220a0:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   220a4:	mov	w1, w0
   220a8:	add	x0, sp, #0x3c
   220ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   220b0:	and	w0, w0, #0xff
   220b4:	eor	w0, w0, #0x1
   220b8:	and	w0, w0, #0xff
   220bc:	cmp	w0, #0x0
   220c0:	b.eq	220cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d15c>  // b.none
   220c4:	mov	w0, #0x0                   	// #0
   220c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   220cc:	str	wzr, [sp, #3772]
   220d0:	mov	w2, #0x1                   	// #1
   220d4:	mov	w1, #0xc                   	// #12
   220d8:	ldr	w0, [sp, #52]
   220dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   220e0:	mov	w1, w0
   220e4:	ldr	w0, [sp, #3772]
   220e8:	orr	w0, w0, w1
   220ec:	str	w0, [sp, #3772]
   220f0:	mov	w2, #0x1                   	// #1
   220f4:	mov	w1, #0xf                   	// #15
   220f8:	ldr	w0, [sp, #52]
   220fc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22100:	lsl	w0, w0, #1
   22104:	ldr	w1, [sp, #3772]
   22108:	orr	w0, w1, w0
   2210c:	str	w0, [sp, #3772]
   22110:	ldr	x3, [sp, #24]
   22114:	ldr	x2, [sp, #32]
   22118:	ldr	w1, [sp, #3772]
   2211c:	ldr	x0, [sp, #40]
   22120:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   22124:	mov	w1, w0
   22128:	add	x0, sp, #0x3c
   2212c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22130:	and	w0, w0, #0xff
   22134:	eor	w0, w0, #0x1
   22138:	and	w0, w0, #0xff
   2213c:	cmp	w0, #0x0
   22140:	b.eq	2214c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d1dc>  // b.none
   22144:	mov	w0, #0x0                   	// #0
   22148:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2214c:	ldr	w0, [sp, #60]
   22150:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22154:	mov	w2, #0x5                   	// #5
   22158:	mov	w1, #0x0                   	// #0
   2215c:	ldr	w0, [sp, #52]
   22160:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22164:	str	w0, [sp, #3772]
   22168:	ldr	x3, [sp, #24]
   2216c:	ldr	x2, [sp, #32]
   22170:	ldr	w1, [sp, #3772]
   22174:	ldr	x0, [sp, #40]
   22178:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2217c:	mov	w1, w0
   22180:	add	x0, sp, #0x3c
   22184:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22188:	and	w0, w0, #0xff
   2218c:	eor	w0, w0, #0x1
   22190:	and	w0, w0, #0xff
   22194:	cmp	w0, #0x0
   22198:	b.eq	221a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d234>  // b.none
   2219c:	mov	w0, #0x0                   	// #0
   221a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   221a4:	mov	w2, #0x5                   	// #5
   221a8:	mov	w1, #0x5                   	// #5
   221ac:	ldr	w0, [sp, #52]
   221b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   221b4:	str	w0, [sp, #3772]
   221b8:	ldr	x3, [sp, #24]
   221bc:	ldr	x2, [sp, #32]
   221c0:	ldr	w1, [sp, #3772]
   221c4:	ldr	x0, [sp, #40]
   221c8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   221cc:	mov	w1, w0
   221d0:	add	x0, sp, #0x3c
   221d4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   221d8:	and	w0, w0, #0xff
   221dc:	eor	w0, w0, #0x1
   221e0:	and	w0, w0, #0xff
   221e4:	cmp	w0, #0x0
   221e8:	b.eq	221f4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d284>  // b.none
   221ec:	mov	w0, #0x0                   	// #0
   221f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   221f4:	mov	w2, #0x5                   	// #5
   221f8:	mov	w1, #0x10                  	// #16
   221fc:	ldr	w0, [sp, #52]
   22200:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22204:	str	w0, [sp, #3772]
   22208:	ldr	x3, [sp, #24]
   2220c:	ldr	x2, [sp, #32]
   22210:	ldr	w1, [sp, #3772]
   22214:	ldr	x0, [sp, #40]
   22218:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2221c:	mov	w1, w0
   22220:	add	x0, sp, #0x3c
   22224:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22228:	and	w0, w0, #0xff
   2222c:	eor	w0, w0, #0x1
   22230:	and	w0, w0, #0xff
   22234:	cmp	w0, #0x0
   22238:	b.eq	22244 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d2d4>  // b.none
   2223c:	mov	w0, #0x0                   	// #0
   22240:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22244:	str	wzr, [sp, #3772]
   22248:	mov	w2, #0x1                   	// #1
   2224c:	mov	w1, #0xc                   	// #12
   22250:	ldr	w0, [sp, #52]
   22254:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22258:	mov	w1, w0
   2225c:	ldr	w0, [sp, #3772]
   22260:	orr	w0, w0, w1
   22264:	str	w0, [sp, #3772]
   22268:	mov	w2, #0x1                   	// #1
   2226c:	mov	w1, #0xf                   	// #15
   22270:	ldr	w0, [sp, #52]
   22274:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22278:	lsl	w0, w0, #1
   2227c:	ldr	w1, [sp, #3772]
   22280:	orr	w0, w1, w0
   22284:	str	w0, [sp, #3772]
   22288:	ldr	x3, [sp, #24]
   2228c:	ldr	x2, [sp, #32]
   22290:	ldr	w1, [sp, #3772]
   22294:	ldr	x0, [sp, #40]
   22298:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   2229c:	mov	w1, w0
   222a0:	add	x0, sp, #0x3c
   222a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   222a8:	and	w0, w0, #0xff
   222ac:	eor	w0, w0, #0x1
   222b0:	and	w0, w0, #0xff
   222b4:	cmp	w0, #0x0
   222b8:	b.eq	222c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d354>  // b.none
   222bc:	mov	w0, #0x0                   	// #0
   222c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   222c4:	ldr	w0, [sp, #60]
   222c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   222cc:	mov	w2, #0x5                   	// #5
   222d0:	mov	w1, #0x0                   	// #0
   222d4:	ldr	w0, [sp, #52]
   222d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   222dc:	str	w0, [sp, #3772]
   222e0:	ldr	x3, [sp, #24]
   222e4:	ldr	x2, [sp, #32]
   222e8:	ldr	w1, [sp, #3772]
   222ec:	ldr	x0, [sp, #40]
   222f0:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   222f4:	mov	w1, w0
   222f8:	add	x0, sp, #0x3c
   222fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22300:	and	w0, w0, #0xff
   22304:	eor	w0, w0, #0x1
   22308:	and	w0, w0, #0xff
   2230c:	cmp	w0, #0x0
   22310:	b.eq	2231c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d3ac>  // b.none
   22314:	mov	w0, #0x0                   	// #0
   22318:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2231c:	mov	w2, #0x5                   	// #5
   22320:	mov	w1, #0x5                   	// #5
   22324:	ldr	w0, [sp, #52]
   22328:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2232c:	str	w0, [sp, #3772]
   22330:	ldr	x3, [sp, #24]
   22334:	ldr	x2, [sp, #32]
   22338:	ldr	w1, [sp, #3772]
   2233c:	ldr	x0, [sp, #40]
   22340:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   22344:	mov	w1, w0
   22348:	add	x0, sp, #0x3c
   2234c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22350:	and	w0, w0, #0xff
   22354:	eor	w0, w0, #0x1
   22358:	and	w0, w0, #0xff
   2235c:	cmp	w0, #0x0
   22360:	b.eq	2236c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d3fc>  // b.none
   22364:	mov	w0, #0x0                   	// #0
   22368:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2236c:	ldr	w0, [sp, #60]
   22370:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22374:	mov	w2, #0x5                   	// #5
   22378:	mov	w1, #0x0                   	// #0
   2237c:	ldr	w0, [sp, #52]
   22380:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22384:	str	w0, [sp, #3772]
   22388:	ldr	x3, [sp, #24]
   2238c:	ldr	x2, [sp, #32]
   22390:	ldr	w1, [sp, #3772]
   22394:	ldr	x0, [sp, #40]
   22398:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2239c:	mov	w1, w0
   223a0:	add	x0, sp, #0x3c
   223a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   223a8:	and	w0, w0, #0xff
   223ac:	eor	w0, w0, #0x1
   223b0:	and	w0, w0, #0xff
   223b4:	cmp	w0, #0x0
   223b8:	b.eq	223c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d454>  // b.none
   223bc:	mov	w0, #0x0                   	// #0
   223c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   223c4:	mov	w2, #0x5                   	// #5
   223c8:	mov	w1, #0x5                   	// #5
   223cc:	ldr	w0, [sp, #52]
   223d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   223d4:	str	w0, [sp, #3772]
   223d8:	ldr	x3, [sp, #24]
   223dc:	ldr	x2, [sp, #32]
   223e0:	ldr	w1, [sp, #3772]
   223e4:	ldr	x0, [sp, #40]
   223e8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   223ec:	mov	w1, w0
   223f0:	add	x0, sp, #0x3c
   223f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   223f8:	and	w0, w0, #0xff
   223fc:	eor	w0, w0, #0x1
   22400:	and	w0, w0, #0xff
   22404:	cmp	w0, #0x0
   22408:	b.eq	22414 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d4a4>  // b.none
   2240c:	mov	w0, #0x0                   	// #0
   22410:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22414:	mov	w2, #0x5                   	// #5
   22418:	mov	w1, #0x10                  	// #16
   2241c:	ldr	w0, [sp, #52]
   22420:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22424:	str	w0, [sp, #3772]
   22428:	ldr	x3, [sp, #24]
   2242c:	ldr	x2, [sp, #32]
   22430:	ldr	w1, [sp, #3772]
   22434:	ldr	x0, [sp, #40]
   22438:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2243c:	mov	w1, w0
   22440:	add	x0, sp, #0x3c
   22444:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22448:	and	w0, w0, #0xff
   2244c:	eor	w0, w0, #0x1
   22450:	and	w0, w0, #0xff
   22454:	cmp	w0, #0x0
   22458:	b.eq	22464 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d4f4>  // b.none
   2245c:	mov	w0, #0x0                   	// #0
   22460:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22464:	str	wzr, [sp, #3772]
   22468:	mov	w2, #0x1                   	// #1
   2246c:	mov	w1, #0xc                   	// #12
   22470:	ldr	w0, [sp, #52]
   22474:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22478:	mov	w1, w0
   2247c:	ldr	w0, [sp, #3772]
   22480:	orr	w0, w0, w1
   22484:	str	w0, [sp, #3772]
   22488:	mov	w2, #0x1                   	// #1
   2248c:	mov	w1, #0xf                   	// #15
   22490:	ldr	w0, [sp, #52]
   22494:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22498:	lsl	w0, w0, #1
   2249c:	ldr	w1, [sp, #3772]
   224a0:	orr	w0, w1, w0
   224a4:	str	w0, [sp, #3772]
   224a8:	ldr	x3, [sp, #24]
   224ac:	ldr	x2, [sp, #32]
   224b0:	ldr	w1, [sp, #3772]
   224b4:	ldr	x0, [sp, #40]
   224b8:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   224bc:	mov	w1, w0
   224c0:	add	x0, sp, #0x3c
   224c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   224c8:	and	w0, w0, #0xff
   224cc:	eor	w0, w0, #0x1
   224d0:	and	w0, w0, #0xff
   224d4:	cmp	w0, #0x0
   224d8:	b.eq	224e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d574>  // b.none
   224dc:	mov	w0, #0x0                   	// #0
   224e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   224e4:	ldr	w0, [sp, #60]
   224e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   224ec:	mov	w2, #0x5                   	// #5
   224f0:	mov	w1, #0x0                   	// #0
   224f4:	ldr	w0, [sp, #52]
   224f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   224fc:	str	w0, [sp, #3772]
   22500:	ldr	x3, [sp, #24]
   22504:	ldr	x2, [sp, #32]
   22508:	ldr	w1, [sp, #3772]
   2250c:	ldr	x0, [sp, #40]
   22510:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   22514:	mov	w1, w0
   22518:	add	x0, sp, #0x3c
   2251c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22520:	and	w0, w0, #0xff
   22524:	eor	w0, w0, #0x1
   22528:	and	w0, w0, #0xff
   2252c:	cmp	w0, #0x0
   22530:	b.eq	2253c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d5cc>  // b.none
   22534:	mov	w0, #0x0                   	// #0
   22538:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2253c:	mov	w2, #0x5                   	// #5
   22540:	mov	w1, #0x5                   	// #5
   22544:	ldr	w0, [sp, #52]
   22548:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2254c:	str	w0, [sp, #3772]
   22550:	ldr	x3, [sp, #24]
   22554:	ldr	x2, [sp, #32]
   22558:	ldr	w1, [sp, #3772]
   2255c:	ldr	x0, [sp, #40]
   22560:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   22564:	mov	w1, w0
   22568:	add	x0, sp, #0x3c
   2256c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22570:	and	w0, w0, #0xff
   22574:	eor	w0, w0, #0x1
   22578:	and	w0, w0, #0xff
   2257c:	cmp	w0, #0x0
   22580:	b.eq	2258c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d61c>  // b.none
   22584:	mov	w0, #0x0                   	// #0
   22588:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2258c:	mov	w2, #0x5                   	// #5
   22590:	mov	w1, #0x10                  	// #16
   22594:	ldr	w0, [sp, #52]
   22598:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2259c:	str	w0, [sp, #3772]
   225a0:	ldr	x3, [sp, #24]
   225a4:	ldr	x2, [sp, #32]
   225a8:	ldr	w1, [sp, #3772]
   225ac:	ldr	x0, [sp, #40]
   225b0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   225b4:	mov	w1, w0
   225b8:	add	x0, sp, #0x3c
   225bc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   225c0:	and	w0, w0, #0xff
   225c4:	eor	w0, w0, #0x1
   225c8:	and	w0, w0, #0xff
   225cc:	cmp	w0, #0x0
   225d0:	b.eq	225dc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d66c>  // b.none
   225d4:	mov	w0, #0x0                   	// #0
   225d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   225dc:	str	wzr, [sp, #3772]
   225e0:	mov	w2, #0x1                   	// #1
   225e4:	mov	w1, #0xc                   	// #12
   225e8:	ldr	w0, [sp, #52]
   225ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   225f0:	mov	w1, w0
   225f4:	ldr	w0, [sp, #3772]
   225f8:	orr	w0, w0, w1
   225fc:	str	w0, [sp, #3772]
   22600:	mov	w2, #0x1                   	// #1
   22604:	mov	w1, #0xf                   	// #15
   22608:	ldr	w0, [sp, #52]
   2260c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22610:	lsl	w0, w0, #1
   22614:	ldr	w1, [sp, #3772]
   22618:	orr	w0, w1, w0
   2261c:	str	w0, [sp, #3772]
   22620:	ldr	x3, [sp, #24]
   22624:	ldr	x2, [sp, #32]
   22628:	ldr	w1, [sp, #3772]
   2262c:	ldr	x0, [sp, #40]
   22630:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   22634:	mov	w1, w0
   22638:	add	x0, sp, #0x3c
   2263c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22640:	and	w0, w0, #0xff
   22644:	eor	w0, w0, #0x1
   22648:	and	w0, w0, #0xff
   2264c:	cmp	w0, #0x0
   22650:	b.eq	2265c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d6ec>  // b.none
   22654:	mov	w0, #0x0                   	// #0
   22658:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2265c:	ldr	w0, [sp, #60]
   22660:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22664:	ldr	x3, [sp, #24]
   22668:	ldr	x2, [sp, #32]
   2266c:	ldr	w1, [sp, #52]
   22670:	ldr	x0, [sp, #40]
   22674:	bl	1d38 <_ZL29DecodeUnsignedLdStInstructionRN4llvm6MCInstEjmPKv>
   22678:	mov	w1, w0
   2267c:	add	x0, sp, #0x3c
   22680:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22684:	and	w0, w0, #0xff
   22688:	eor	w0, w0, #0x1
   2268c:	and	w0, w0, #0xff
   22690:	cmp	w0, #0x0
   22694:	b.eq	226a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d730>  // b.none
   22698:	mov	w0, #0x0                   	// #0
   2269c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   226a0:	ldr	w0, [sp, #60]
   226a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   226a8:	mov	w2, #0x5                   	// #5
   226ac:	mov	w1, #0x5                   	// #5
   226b0:	ldr	w0, [sp, #52]
   226b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   226b8:	str	w0, [sp, #3772]
   226bc:	ldr	x3, [sp, #24]
   226c0:	ldr	x2, [sp, #32]
   226c4:	ldr	w1, [sp, #3772]
   226c8:	ldr	x0, [sp, #40]
   226cc:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   226d0:	mov	w1, w0
   226d4:	add	x0, sp, #0x3c
   226d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   226dc:	and	w0, w0, #0xff
   226e0:	eor	w0, w0, #0x1
   226e4:	and	w0, w0, #0xff
   226e8:	cmp	w0, #0x0
   226ec:	b.eq	226f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d788>  // b.none
   226f0:	mov	w0, #0x0                   	// #0
   226f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   226f8:	ldr	w0, [sp, #60]
   226fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22700:	mov	w2, #0x5                   	// #5
   22704:	mov	w1, #0x5                   	// #5
   22708:	ldr	w0, [sp, #52]
   2270c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22710:	str	w0, [sp, #3772]
   22714:	ldr	x3, [sp, #24]
   22718:	ldr	x2, [sp, #32]
   2271c:	ldr	w1, [sp, #3772]
   22720:	ldr	x0, [sp, #40]
   22724:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   22728:	mov	w1, w0
   2272c:	add	x0, sp, #0x3c
   22730:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22734:	and	w0, w0, #0xff
   22738:	eor	w0, w0, #0x1
   2273c:	and	w0, w0, #0xff
   22740:	cmp	w0, #0x0
   22744:	b.eq	22750 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d7e0>  // b.none
   22748:	mov	w0, #0x0                   	// #0
   2274c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22750:	mov	w2, #0x5                   	// #5
   22754:	mov	w1, #0x10                  	// #16
   22758:	ldr	w0, [sp, #52]
   2275c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22760:	str	w0, [sp, #3772]
   22764:	ldr	x3, [sp, #24]
   22768:	ldr	x2, [sp, #32]
   2276c:	ldr	w1, [sp, #3772]
   22770:	ldr	x0, [sp, #40]
   22774:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   22778:	mov	w1, w0
   2277c:	add	x0, sp, #0x3c
   22780:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22784:	and	w0, w0, #0xff
   22788:	eor	w0, w0, #0x1
   2278c:	and	w0, w0, #0xff
   22790:	cmp	w0, #0x0
   22794:	b.eq	227a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d830>  // b.none
   22798:	mov	w0, #0x0                   	// #0
   2279c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   227a0:	mov	w2, #0x4                   	// #4
   227a4:	mov	w1, #0x0                   	// #0
   227a8:	ldr	w0, [sp, #52]
   227ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   227b0:	str	w0, [sp, #3772]
   227b4:	ldr	w0, [sp, #3772]
   227b8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   227bc:	add	x2, sp, #0xc00
   227c0:	stp	x0, x1, [x2, #24]
   227c4:	add	x0, sp, #0xc18
   227c8:	mov	x1, x0
   227cc:	ldr	x0, [sp, #40]
   227d0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   227d4:	mov	w2, #0x4                   	// #4
   227d8:	mov	w1, #0xc                   	// #12
   227dc:	ldr	w0, [sp, #52]
   227e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   227e4:	str	w0, [sp, #3772]
   227e8:	ldr	w0, [sp, #3772]
   227ec:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   227f0:	add	x2, sp, #0xc00
   227f4:	stp	x0, x1, [x2, #40]
   227f8:	add	x0, sp, #0xc28
   227fc:	mov	x1, x0
   22800:	ldr	x0, [sp, #40]
   22804:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   22808:	ldr	w0, [sp, #60]
   2280c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22810:	mov	w2, #0x5                   	// #5
   22814:	mov	w1, #0x5                   	// #5
   22818:	ldr	w0, [sp, #52]
   2281c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22820:	str	w0, [sp, #3772]
   22824:	ldr	x3, [sp, #24]
   22828:	ldr	x2, [sp, #32]
   2282c:	ldr	w1, [sp, #3772]
   22830:	ldr	x0, [sp, #40]
   22834:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   22838:	mov	w1, w0
   2283c:	add	x0, sp, #0x3c
   22840:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22844:	and	w0, w0, #0xff
   22848:	eor	w0, w0, #0x1
   2284c:	and	w0, w0, #0xff
   22850:	cmp	w0, #0x0
   22854:	b.eq	22860 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d8f0>  // b.none
   22858:	mov	w0, #0x0                   	// #0
   2285c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22860:	mov	w2, #0x5                   	// #5
   22864:	mov	w1, #0x10                  	// #16
   22868:	ldr	w0, [sp, #52]
   2286c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22870:	str	w0, [sp, #3772]
   22874:	ldr	w0, [sp, #3772]
   22878:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2287c:	add	x2, sp, #0xc00
   22880:	stp	x0, x1, [x2, #56]
   22884:	add	x0, sp, #0xc38
   22888:	mov	x1, x0
   2288c:	ldr	x0, [sp, #40]
   22890:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   22894:	mov	w2, #0x4                   	// #4
   22898:	mov	w1, #0x0                   	// #0
   2289c:	ldr	w0, [sp, #52]
   228a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   228a4:	str	w0, [sp, #3772]
   228a8:	ldr	w0, [sp, #3772]
   228ac:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   228b0:	add	x2, sp, #0xc00
   228b4:	stp	x0, x1, [x2, #72]
   228b8:	add	x0, sp, #0xc48
   228bc:	mov	x1, x0
   228c0:	ldr	x0, [sp, #40]
   228c4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   228c8:	mov	w2, #0x4                   	// #4
   228cc:	mov	w1, #0xc                   	// #12
   228d0:	ldr	w0, [sp, #52]
   228d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   228d8:	str	w0, [sp, #3772]
   228dc:	ldr	w0, [sp, #3772]
   228e0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   228e4:	add	x2, sp, #0xc00
   228e8:	stp	x0, x1, [x2, #88]
   228ec:	add	x0, sp, #0xc58
   228f0:	mov	x1, x0
   228f4:	ldr	x0, [sp, #40]
   228f8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   228fc:	ldr	w0, [sp, #60]
   22900:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22904:	mov	w2, #0x5                   	// #5
   22908:	mov	w1, #0x0                   	// #0
   2290c:	ldr	w0, [sp, #52]
   22910:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22914:	str	w0, [sp, #3772]
   22918:	ldr	x3, [sp, #24]
   2291c:	ldr	x2, [sp, #32]
   22920:	ldr	w1, [sp, #3772]
   22924:	ldr	x0, [sp, #40]
   22928:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2292c:	mov	w1, w0
   22930:	add	x0, sp, #0x3c
   22934:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22938:	and	w0, w0, #0xff
   2293c:	eor	w0, w0, #0x1
   22940:	and	w0, w0, #0xff
   22944:	cmp	w0, #0x0
   22948:	b.eq	22954 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1d9e4>  // b.none
   2294c:	mov	w0, #0x0                   	// #0
   22950:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22954:	mov	w2, #0x5                   	// #5
   22958:	mov	w1, #0x5                   	// #5
   2295c:	ldr	w0, [sp, #52]
   22960:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22964:	str	w0, [sp, #3772]
   22968:	ldr	x3, [sp, #24]
   2296c:	ldr	x2, [sp, #32]
   22970:	ldr	w1, [sp, #3772]
   22974:	ldr	x0, [sp, #40]
   22978:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2297c:	mov	w1, w0
   22980:	add	x0, sp, #0x3c
   22984:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22988:	and	w0, w0, #0xff
   2298c:	eor	w0, w0, #0x1
   22990:	and	w0, w0, #0xff
   22994:	cmp	w0, #0x0
   22998:	b.eq	229a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1da34>  // b.none
   2299c:	mov	w0, #0x0                   	// #0
   229a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   229a4:	ldr	w0, [sp, #60]
   229a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   229ac:	mov	w2, #0x5                   	// #5
   229b0:	mov	w1, #0x0                   	// #0
   229b4:	ldr	w0, [sp, #52]
   229b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   229bc:	str	w0, [sp, #3772]
   229c0:	ldr	x3, [sp, #24]
   229c4:	ldr	x2, [sp, #32]
   229c8:	ldr	w1, [sp, #3772]
   229cc:	ldr	x0, [sp, #40]
   229d0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   229d4:	mov	w1, w0
   229d8:	add	x0, sp, #0x3c
   229dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   229e0:	and	w0, w0, #0xff
   229e4:	eor	w0, w0, #0x1
   229e8:	and	w0, w0, #0xff
   229ec:	cmp	w0, #0x0
   229f0:	b.eq	229fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1da8c>  // b.none
   229f4:	mov	w0, #0x0                   	// #0
   229f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   229fc:	mov	w2, #0x5                   	// #5
   22a00:	mov	w1, #0x5                   	// #5
   22a04:	ldr	w0, [sp, #52]
   22a08:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22a0c:	str	w0, [sp, #3772]
   22a10:	ldr	x3, [sp, #24]
   22a14:	ldr	x2, [sp, #32]
   22a18:	ldr	w1, [sp, #3772]
   22a1c:	ldr	x0, [sp, #40]
   22a20:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   22a24:	mov	w1, w0
   22a28:	add	x0, sp, #0x3c
   22a2c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22a30:	and	w0, w0, #0xff
   22a34:	eor	w0, w0, #0x1
   22a38:	and	w0, w0, #0xff
   22a3c:	cmp	w0, #0x0
   22a40:	b.eq	22a4c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1dadc>  // b.none
   22a44:	mov	w0, #0x0                   	// #0
   22a48:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22a4c:	mov	w2, #0x5                   	// #5
   22a50:	mov	w1, #0x10                  	// #16
   22a54:	ldr	w0, [sp, #52]
   22a58:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22a5c:	str	w0, [sp, #3772]
   22a60:	ldr	x3, [sp, #24]
   22a64:	ldr	x2, [sp, #32]
   22a68:	ldr	w1, [sp, #3772]
   22a6c:	ldr	x0, [sp, #40]
   22a70:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   22a74:	mov	w1, w0
   22a78:	add	x0, sp, #0x3c
   22a7c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22a80:	and	w0, w0, #0xff
   22a84:	eor	w0, w0, #0x1
   22a88:	and	w0, w0, #0xff
   22a8c:	cmp	w0, #0x0
   22a90:	b.eq	22a9c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1db2c>  // b.none
   22a94:	mov	w0, #0x0                   	// #0
   22a98:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22a9c:	ldr	w0, [sp, #60]
   22aa0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22aa4:	mov	w2, #0x5                   	// #5
   22aa8:	mov	w1, #0x0                   	// #0
   22aac:	ldr	w0, [sp, #52]
   22ab0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22ab4:	str	w0, [sp, #3772]
   22ab8:	ldr	x3, [sp, #24]
   22abc:	ldr	x2, [sp, #32]
   22ac0:	ldr	w1, [sp, #3772]
   22ac4:	ldr	x0, [sp, #40]
   22ac8:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   22acc:	mov	w1, w0
   22ad0:	add	x0, sp, #0x3c
   22ad4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22ad8:	and	w0, w0, #0xff
   22adc:	eor	w0, w0, #0x1
   22ae0:	and	w0, w0, #0xff
   22ae4:	cmp	w0, #0x0
   22ae8:	b.eq	22af4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1db84>  // b.none
   22aec:	mov	w0, #0x0                   	// #0
   22af0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22af4:	mov	w2, #0x5                   	// #5
   22af8:	mov	w1, #0x5                   	// #5
   22afc:	ldr	w0, [sp, #52]
   22b00:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22b04:	str	w0, [sp, #3772]
   22b08:	ldr	x3, [sp, #24]
   22b0c:	ldr	x2, [sp, #32]
   22b10:	ldr	w1, [sp, #3772]
   22b14:	ldr	x0, [sp, #40]
   22b18:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   22b1c:	mov	w1, w0
   22b20:	add	x0, sp, #0x3c
   22b24:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22b28:	and	w0, w0, #0xff
   22b2c:	eor	w0, w0, #0x1
   22b30:	and	w0, w0, #0xff
   22b34:	cmp	w0, #0x0
   22b38:	b.eq	22b44 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1dbd4>  // b.none
   22b3c:	mov	w0, #0x0                   	// #0
   22b40:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22b44:	mov	w2, #0x5                   	// #5
   22b48:	mov	w1, #0x10                  	// #16
   22b4c:	ldr	w0, [sp, #52]
   22b50:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22b54:	str	w0, [sp, #3772]
   22b58:	ldr	x3, [sp, #24]
   22b5c:	ldr	x2, [sp, #32]
   22b60:	ldr	w1, [sp, #3772]
   22b64:	ldr	x0, [sp, #40]
   22b68:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   22b6c:	mov	w1, w0
   22b70:	add	x0, sp, #0x3c
   22b74:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22b78:	and	w0, w0, #0xff
   22b7c:	eor	w0, w0, #0x1
   22b80:	and	w0, w0, #0xff
   22b84:	cmp	w0, #0x0
   22b88:	b.eq	22b94 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1dc24>  // b.none
   22b8c:	mov	w0, #0x0                   	// #0
   22b90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22b94:	mov	w2, #0x4                   	// #4
   22b98:	mov	w1, #0xc                   	// #12
   22b9c:	ldr	w0, [sp, #52]
   22ba0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22ba4:	str	w0, [sp, #3772]
   22ba8:	ldr	w0, [sp, #3772]
   22bac:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   22bb0:	add	x2, sp, #0xc00
   22bb4:	stp	x0, x1, [x2, #104]
   22bb8:	add	x0, sp, #0xc68
   22bbc:	mov	x1, x0
   22bc0:	ldr	x0, [sp, #40]
   22bc4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   22bc8:	ldr	w0, [sp, #60]
   22bcc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22bd0:	mov	w2, #0x5                   	// #5
   22bd4:	mov	w1, #0x0                   	// #0
   22bd8:	ldr	w0, [sp, #52]
   22bdc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22be0:	str	w0, [sp, #3772]
   22be4:	ldr	x3, [sp, #24]
   22be8:	ldr	x2, [sp, #32]
   22bec:	ldr	w1, [sp, #3772]
   22bf0:	ldr	x0, [sp, #40]
   22bf4:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   22bf8:	mov	w1, w0
   22bfc:	add	x0, sp, #0x3c
   22c00:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22c04:	and	w0, w0, #0xff
   22c08:	eor	w0, w0, #0x1
   22c0c:	and	w0, w0, #0xff
   22c10:	cmp	w0, #0x0
   22c14:	b.eq	22c20 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1dcb0>  // b.none
   22c18:	mov	w0, #0x0                   	// #0
   22c1c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22c20:	mov	w2, #0x5                   	// #5
   22c24:	mov	w1, #0x5                   	// #5
   22c28:	ldr	w0, [sp, #52]
   22c2c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22c30:	str	w0, [sp, #3772]
   22c34:	ldr	x3, [sp, #24]
   22c38:	ldr	x2, [sp, #32]
   22c3c:	ldr	w1, [sp, #3772]
   22c40:	ldr	x0, [sp, #40]
   22c44:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   22c48:	mov	w1, w0
   22c4c:	add	x0, sp, #0x3c
   22c50:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22c54:	and	w0, w0, #0xff
   22c58:	eor	w0, w0, #0x1
   22c5c:	and	w0, w0, #0xff
   22c60:	cmp	w0, #0x0
   22c64:	b.eq	22c70 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1dd00>  // b.none
   22c68:	mov	w0, #0x0                   	// #0
   22c6c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22c70:	mov	w2, #0x5                   	// #5
   22c74:	mov	w1, #0x10                  	// #16
   22c78:	ldr	w0, [sp, #52]
   22c7c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22c80:	str	w0, [sp, #3772]
   22c84:	ldr	x3, [sp, #24]
   22c88:	ldr	x2, [sp, #32]
   22c8c:	ldr	w1, [sp, #3772]
   22c90:	ldr	x0, [sp, #40]
   22c94:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   22c98:	mov	w1, w0
   22c9c:	add	x0, sp, #0x3c
   22ca0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22ca4:	and	w0, w0, #0xff
   22ca8:	eor	w0, w0, #0x1
   22cac:	and	w0, w0, #0xff
   22cb0:	cmp	w0, #0x0
   22cb4:	b.eq	22cc0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1dd50>  // b.none
   22cb8:	mov	w0, #0x0                   	// #0
   22cbc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22cc0:	ldr	w0, [sp, #60]
   22cc4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22cc8:	mov	w2, #0x5                   	// #5
   22ccc:	mov	w1, #0x0                   	// #0
   22cd0:	ldr	w0, [sp, #52]
   22cd4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22cd8:	str	w0, [sp, #3772]
   22cdc:	ldr	x3, [sp, #24]
   22ce0:	ldr	x2, [sp, #32]
   22ce4:	ldr	w1, [sp, #3772]
   22ce8:	ldr	x0, [sp, #40]
   22cec:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   22cf0:	mov	w1, w0
   22cf4:	add	x0, sp, #0x3c
   22cf8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22cfc:	and	w0, w0, #0xff
   22d00:	eor	w0, w0, #0x1
   22d04:	and	w0, w0, #0xff
   22d08:	cmp	w0, #0x0
   22d0c:	b.eq	22d18 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1dda8>  // b.none
   22d10:	mov	w0, #0x0                   	// #0
   22d14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22d18:	mov	w2, #0x5                   	// #5
   22d1c:	mov	w1, #0x5                   	// #5
   22d20:	ldr	w0, [sp, #52]
   22d24:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22d28:	str	w0, [sp, #3772]
   22d2c:	ldr	x3, [sp, #24]
   22d30:	ldr	x2, [sp, #32]
   22d34:	ldr	w1, [sp, #3772]
   22d38:	ldr	x0, [sp, #40]
   22d3c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   22d40:	mov	w1, w0
   22d44:	add	x0, sp, #0x3c
   22d48:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22d4c:	and	w0, w0, #0xff
   22d50:	eor	w0, w0, #0x1
   22d54:	and	w0, w0, #0xff
   22d58:	cmp	w0, #0x0
   22d5c:	b.eq	22d68 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ddf8>  // b.none
   22d60:	mov	w0, #0x0                   	// #0
   22d64:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22d68:	mov	w2, #0x5                   	// #5
   22d6c:	mov	w1, #0x10                  	// #16
   22d70:	ldr	w0, [sp, #52]
   22d74:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22d78:	str	w0, [sp, #3772]
   22d7c:	ldr	x3, [sp, #24]
   22d80:	ldr	x2, [sp, #32]
   22d84:	ldr	w1, [sp, #3772]
   22d88:	ldr	x0, [sp, #40]
   22d8c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   22d90:	mov	w1, w0
   22d94:	add	x0, sp, #0x3c
   22d98:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22d9c:	and	w0, w0, #0xff
   22da0:	eor	w0, w0, #0x1
   22da4:	and	w0, w0, #0xff
   22da8:	cmp	w0, #0x0
   22dac:	b.eq	22db8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1de48>  // b.none
   22db0:	mov	w0, #0x0                   	// #0
   22db4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22db8:	ldr	w0, [sp, #60]
   22dbc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22dc0:	mov	w2, #0x5                   	// #5
   22dc4:	mov	w1, #0x0                   	// #0
   22dc8:	ldr	w0, [sp, #52]
   22dcc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22dd0:	str	w0, [sp, #3772]
   22dd4:	ldr	x3, [sp, #24]
   22dd8:	ldr	x2, [sp, #32]
   22ddc:	ldr	w1, [sp, #3772]
   22de0:	ldr	x0, [sp, #40]
   22de4:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   22de8:	mov	w1, w0
   22dec:	add	x0, sp, #0x3c
   22df0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22df4:	and	w0, w0, #0xff
   22df8:	eor	w0, w0, #0x1
   22dfc:	and	w0, w0, #0xff
   22e00:	cmp	w0, #0x0
   22e04:	b.eq	22e10 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1dea0>  // b.none
   22e08:	mov	w0, #0x0                   	// #0
   22e0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22e10:	mov	w2, #0x5                   	// #5
   22e14:	mov	w1, #0x5                   	// #5
   22e18:	ldr	w0, [sp, #52]
   22e1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22e20:	str	w0, [sp, #3772]
   22e24:	ldr	x3, [sp, #24]
   22e28:	ldr	x2, [sp, #32]
   22e2c:	ldr	w1, [sp, #3772]
   22e30:	ldr	x0, [sp, #40]
   22e34:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   22e38:	mov	w1, w0
   22e3c:	add	x0, sp, #0x3c
   22e40:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22e44:	and	w0, w0, #0xff
   22e48:	eor	w0, w0, #0x1
   22e4c:	and	w0, w0, #0xff
   22e50:	cmp	w0, #0x0
   22e54:	b.eq	22e60 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1def0>  // b.none
   22e58:	mov	w0, #0x0                   	// #0
   22e5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22e60:	mov	w2, #0x5                   	// #5
   22e64:	mov	w1, #0x10                  	// #16
   22e68:	ldr	w0, [sp, #52]
   22e6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22e70:	str	w0, [sp, #3772]
   22e74:	ldr	x3, [sp, #24]
   22e78:	ldr	x2, [sp, #32]
   22e7c:	ldr	w1, [sp, #3772]
   22e80:	ldr	x0, [sp, #40]
   22e84:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   22e88:	mov	w1, w0
   22e8c:	add	x0, sp, #0x3c
   22e90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22e94:	and	w0, w0, #0xff
   22e98:	eor	w0, w0, #0x1
   22e9c:	and	w0, w0, #0xff
   22ea0:	cmp	w0, #0x0
   22ea4:	b.eq	22eb0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1df40>  // b.none
   22ea8:	mov	w0, #0x0                   	// #0
   22eac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22eb0:	ldr	w0, [sp, #60]
   22eb4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22eb8:	mov	w2, #0x5                   	// #5
   22ebc:	mov	w1, #0x0                   	// #0
   22ec0:	ldr	w0, [sp, #52]
   22ec4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22ec8:	str	w0, [sp, #3772]
   22ecc:	ldr	x3, [sp, #24]
   22ed0:	ldr	x2, [sp, #32]
   22ed4:	ldr	w1, [sp, #3772]
   22ed8:	ldr	x0, [sp, #40]
   22edc:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   22ee0:	mov	w1, w0
   22ee4:	add	x0, sp, #0x3c
   22ee8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22eec:	and	w0, w0, #0xff
   22ef0:	eor	w0, w0, #0x1
   22ef4:	and	w0, w0, #0xff
   22ef8:	cmp	w0, #0x0
   22efc:	b.eq	22f08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1df98>  // b.none
   22f00:	mov	w0, #0x0                   	// #0
   22f04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22f08:	mov	w2, #0x5                   	// #5
   22f0c:	mov	w1, #0x5                   	// #5
   22f10:	ldr	w0, [sp, #52]
   22f14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22f18:	str	w0, [sp, #3772]
   22f1c:	ldr	x3, [sp, #24]
   22f20:	ldr	x2, [sp, #32]
   22f24:	ldr	w1, [sp, #3772]
   22f28:	ldr	x0, [sp, #40]
   22f2c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   22f30:	mov	w1, w0
   22f34:	add	x0, sp, #0x3c
   22f38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22f3c:	and	w0, w0, #0xff
   22f40:	eor	w0, w0, #0x1
   22f44:	and	w0, w0, #0xff
   22f48:	cmp	w0, #0x0
   22f4c:	b.eq	22f58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1dfe8>  // b.none
   22f50:	mov	w0, #0x0                   	// #0
   22f54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22f58:	mov	w2, #0x5                   	// #5
   22f5c:	mov	w1, #0x10                  	// #16
   22f60:	ldr	w0, [sp, #52]
   22f64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22f68:	str	w0, [sp, #3772]
   22f6c:	ldr	x3, [sp, #24]
   22f70:	ldr	x2, [sp, #32]
   22f74:	ldr	w1, [sp, #3772]
   22f78:	ldr	x0, [sp, #40]
   22f7c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   22f80:	mov	w1, w0
   22f84:	add	x0, sp, #0x3c
   22f88:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22f8c:	and	w0, w0, #0xff
   22f90:	eor	w0, w0, #0x1
   22f94:	and	w0, w0, #0xff
   22f98:	cmp	w0, #0x0
   22f9c:	b.eq	22fa8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e038>  // b.none
   22fa0:	mov	w0, #0x0                   	// #0
   22fa4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22fa8:	ldr	w0, [sp, #60]
   22fac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   22fb0:	mov	w2, #0x5                   	// #5
   22fb4:	mov	w1, #0x0                   	// #0
   22fb8:	ldr	w0, [sp, #52]
   22fbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   22fc0:	str	w0, [sp, #3772]
   22fc4:	ldr	x3, [sp, #24]
   22fc8:	ldr	x2, [sp, #32]
   22fcc:	ldr	w1, [sp, #3772]
   22fd0:	ldr	x0, [sp, #40]
   22fd4:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   22fd8:	mov	w1, w0
   22fdc:	add	x0, sp, #0x3c
   22fe0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   22fe4:	and	w0, w0, #0xff
   22fe8:	eor	w0, w0, #0x1
   22fec:	and	w0, w0, #0xff
   22ff0:	cmp	w0, #0x0
   22ff4:	b.eq	23000 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e090>  // b.none
   22ff8:	mov	w0, #0x0                   	// #0
   22ffc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23000:	mov	w2, #0x5                   	// #5
   23004:	mov	w1, #0x5                   	// #5
   23008:	ldr	w0, [sp, #52]
   2300c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23010:	str	w0, [sp, #3772]
   23014:	ldr	x3, [sp, #24]
   23018:	ldr	x2, [sp, #32]
   2301c:	ldr	w1, [sp, #3772]
   23020:	ldr	x0, [sp, #40]
   23024:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   23028:	mov	w1, w0
   2302c:	add	x0, sp, #0x3c
   23030:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23034:	and	w0, w0, #0xff
   23038:	eor	w0, w0, #0x1
   2303c:	and	w0, w0, #0xff
   23040:	cmp	w0, #0x0
   23044:	b.eq	23050 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e0e0>  // b.none
   23048:	mov	w0, #0x0                   	// #0
   2304c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23050:	mov	w2, #0x5                   	// #5
   23054:	mov	w1, #0x10                  	// #16
   23058:	ldr	w0, [sp, #52]
   2305c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23060:	str	w0, [sp, #3772]
   23064:	ldr	x3, [sp, #24]
   23068:	ldr	x2, [sp, #32]
   2306c:	ldr	w1, [sp, #3772]
   23070:	ldr	x0, [sp, #40]
   23074:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23078:	mov	w1, w0
   2307c:	add	x0, sp, #0x3c
   23080:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23084:	and	w0, w0, #0xff
   23088:	eor	w0, w0, #0x1
   2308c:	and	w0, w0, #0xff
   23090:	cmp	w0, #0x0
   23094:	b.eq	230a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e130>  // b.none
   23098:	mov	w0, #0x0                   	// #0
   2309c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   230a0:	ldr	w0, [sp, #60]
   230a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   230a8:	mov	w2, #0x5                   	// #5
   230ac:	mov	w1, #0x0                   	// #0
   230b0:	ldr	w0, [sp, #52]
   230b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   230b8:	str	w0, [sp, #3772]
   230bc:	ldr	x3, [sp, #24]
   230c0:	ldr	x2, [sp, #32]
   230c4:	ldr	w1, [sp, #3772]
   230c8:	ldr	x0, [sp, #40]
   230cc:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   230d0:	mov	w1, w0
   230d4:	add	x0, sp, #0x3c
   230d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   230dc:	and	w0, w0, #0xff
   230e0:	eor	w0, w0, #0x1
   230e4:	and	w0, w0, #0xff
   230e8:	cmp	w0, #0x0
   230ec:	b.eq	230f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e188>  // b.none
   230f0:	mov	w0, #0x0                   	// #0
   230f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   230f8:	mov	w2, #0x5                   	// #5
   230fc:	mov	w1, #0x5                   	// #5
   23100:	ldr	w0, [sp, #52]
   23104:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23108:	str	w0, [sp, #3772]
   2310c:	ldr	x3, [sp, #24]
   23110:	ldr	x2, [sp, #32]
   23114:	ldr	w1, [sp, #3772]
   23118:	ldr	x0, [sp, #40]
   2311c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23120:	mov	w1, w0
   23124:	add	x0, sp, #0x3c
   23128:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2312c:	and	w0, w0, #0xff
   23130:	eor	w0, w0, #0x1
   23134:	and	w0, w0, #0xff
   23138:	cmp	w0, #0x0
   2313c:	b.eq	23148 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e1d8>  // b.none
   23140:	mov	w0, #0x0                   	// #0
   23144:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23148:	mov	w2, #0x5                   	// #5
   2314c:	mov	w1, #0x10                  	// #16
   23150:	ldr	w0, [sp, #52]
   23154:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23158:	str	w0, [sp, #3772]
   2315c:	ldr	x3, [sp, #24]
   23160:	ldr	x2, [sp, #32]
   23164:	ldr	w1, [sp, #3772]
   23168:	ldr	x0, [sp, #40]
   2316c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23170:	mov	w1, w0
   23174:	add	x0, sp, #0x3c
   23178:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2317c:	and	w0, w0, #0xff
   23180:	eor	w0, w0, #0x1
   23184:	and	w0, w0, #0xff
   23188:	cmp	w0, #0x0
   2318c:	b.eq	23198 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e228>  // b.none
   23190:	mov	w0, #0x0                   	// #0
   23194:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23198:	mov	w2, #0x5                   	// #5
   2319c:	mov	w1, #0xa                   	// #10
   231a0:	ldr	w0, [sp, #52]
   231a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   231a8:	str	w0, [sp, #3772]
   231ac:	ldr	x3, [sp, #24]
   231b0:	ldr	x2, [sp, #32]
   231b4:	ldr	w1, [sp, #3772]
   231b8:	ldr	x0, [sp, #40]
   231bc:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   231c0:	mov	w1, w0
   231c4:	add	x0, sp, #0x3c
   231c8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   231cc:	and	w0, w0, #0xff
   231d0:	eor	w0, w0, #0x1
   231d4:	and	w0, w0, #0xff
   231d8:	cmp	w0, #0x0
   231dc:	b.eq	231e8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e278>  // b.none
   231e0:	mov	w0, #0x0                   	// #0
   231e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   231e8:	ldr	w0, [sp, #60]
   231ec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   231f0:	mov	w2, #0x5                   	// #5
   231f4:	mov	w1, #0x0                   	// #0
   231f8:	ldr	w0, [sp, #52]
   231fc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23200:	str	w0, [sp, #3772]
   23204:	ldr	x3, [sp, #24]
   23208:	ldr	x2, [sp, #32]
   2320c:	ldr	w1, [sp, #3772]
   23210:	ldr	x0, [sp, #40]
   23214:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23218:	mov	w1, w0
   2321c:	add	x0, sp, #0x3c
   23220:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23224:	and	w0, w0, #0xff
   23228:	eor	w0, w0, #0x1
   2322c:	and	w0, w0, #0xff
   23230:	cmp	w0, #0x0
   23234:	b.eq	23240 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e2d0>  // b.none
   23238:	mov	w0, #0x0                   	// #0
   2323c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23240:	mov	w2, #0x5                   	// #5
   23244:	mov	w1, #0x5                   	// #5
   23248:	ldr	w0, [sp, #52]
   2324c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23250:	str	w0, [sp, #3772]
   23254:	ldr	x3, [sp, #24]
   23258:	ldr	x2, [sp, #32]
   2325c:	ldr	w1, [sp, #3772]
   23260:	ldr	x0, [sp, #40]
   23264:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   23268:	mov	w1, w0
   2326c:	add	x0, sp, #0x3c
   23270:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23274:	and	w0, w0, #0xff
   23278:	eor	w0, w0, #0x1
   2327c:	and	w0, w0, #0xff
   23280:	cmp	w0, #0x0
   23284:	b.eq	23290 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e320>  // b.none
   23288:	mov	w0, #0x0                   	// #0
   2328c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23290:	mov	w2, #0x5                   	// #5
   23294:	mov	w1, #0x10                  	// #16
   23298:	ldr	w0, [sp, #52]
   2329c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   232a0:	str	w0, [sp, #3772]
   232a4:	ldr	x3, [sp, #24]
   232a8:	ldr	x2, [sp, #32]
   232ac:	ldr	w1, [sp, #3772]
   232b0:	ldr	x0, [sp, #40]
   232b4:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   232b8:	mov	w1, w0
   232bc:	add	x0, sp, #0x3c
   232c0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   232c4:	and	w0, w0, #0xff
   232c8:	eor	w0, w0, #0x1
   232cc:	and	w0, w0, #0xff
   232d0:	cmp	w0, #0x0
   232d4:	b.eq	232e0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e370>  // b.none
   232d8:	mov	w0, #0x0                   	// #0
   232dc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   232e0:	mov	w2, #0x5                   	// #5
   232e4:	mov	w1, #0xa                   	// #10
   232e8:	ldr	w0, [sp, #52]
   232ec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   232f0:	str	w0, [sp, #3772]
   232f4:	ldr	x3, [sp, #24]
   232f8:	ldr	x2, [sp, #32]
   232fc:	ldr	w1, [sp, #3772]
   23300:	ldr	x0, [sp, #40]
   23304:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23308:	mov	w1, w0
   2330c:	add	x0, sp, #0x3c
   23310:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23314:	and	w0, w0, #0xff
   23318:	eor	w0, w0, #0x1
   2331c:	and	w0, w0, #0xff
   23320:	cmp	w0, #0x0
   23324:	b.eq	23330 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e3c0>  // b.none
   23328:	mov	w0, #0x0                   	// #0
   2332c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23330:	ldr	w0, [sp, #60]
   23334:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23338:	mov	w2, #0x5                   	// #5
   2333c:	mov	w1, #0x5                   	// #5
   23340:	ldr	w0, [sp, #52]
   23344:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23348:	str	w0, [sp, #3772]
   2334c:	ldr	x3, [sp, #24]
   23350:	ldr	x2, [sp, #32]
   23354:	ldr	w1, [sp, #3772]
   23358:	ldr	x0, [sp, #40]
   2335c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23360:	mov	w1, w0
   23364:	add	x0, sp, #0x3c
   23368:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2336c:	and	w0, w0, #0xff
   23370:	eor	w0, w0, #0x1
   23374:	and	w0, w0, #0xff
   23378:	cmp	w0, #0x0
   2337c:	b.eq	23388 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e418>  // b.none
   23380:	mov	w0, #0x0                   	// #0
   23384:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23388:	mov	w2, #0x6                   	// #6
   2338c:	mov	w1, #0xf                   	// #15
   23390:	ldr	w0, [sp, #52]
   23394:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23398:	str	w0, [sp, #3772]
   2339c:	ldr	w0, [sp, #3772]
   233a0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   233a4:	add	x2, sp, #0xc00
   233a8:	stp	x0, x1, [x2, #120]
   233ac:	add	x0, sp, #0xc78
   233b0:	mov	x1, x0
   233b4:	ldr	x0, [sp, #40]
   233b8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   233bc:	mov	w2, #0x4                   	// #4
   233c0:	mov	w1, #0x0                   	// #0
   233c4:	ldr	w0, [sp, #52]
   233c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   233cc:	str	w0, [sp, #3772]
   233d0:	ldr	w0, [sp, #3772]
   233d4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   233d8:	add	x2, sp, #0xc00
   233dc:	stp	x0, x1, [x2, #136]
   233e0:	add	x0, sp, #0xc88
   233e4:	mov	x1, x0
   233e8:	ldr	x0, [sp, #40]
   233ec:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   233f0:	ldr	w0, [sp, #60]
   233f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   233f8:	mov	w2, #0x5                   	// #5
   233fc:	mov	w1, #0x5                   	// #5
   23400:	ldr	w0, [sp, #52]
   23404:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23408:	str	w0, [sp, #3772]
   2340c:	ldr	x3, [sp, #24]
   23410:	ldr	x2, [sp, #32]
   23414:	ldr	w1, [sp, #3772]
   23418:	ldr	x0, [sp, #40]
   2341c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23420:	mov	w1, w0
   23424:	add	x0, sp, #0x3c
   23428:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2342c:	and	w0, w0, #0xff
   23430:	eor	w0, w0, #0x1
   23434:	and	w0, w0, #0xff
   23438:	cmp	w0, #0x0
   2343c:	b.eq	23448 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e4d8>  // b.none
   23440:	mov	w0, #0x0                   	// #0
   23444:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23448:	mov	w2, #0x5                   	// #5
   2344c:	mov	w1, #0x10                  	// #16
   23450:	ldr	w0, [sp, #52]
   23454:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23458:	str	w0, [sp, #3772]
   2345c:	ldr	x3, [sp, #24]
   23460:	ldr	x2, [sp, #32]
   23464:	ldr	w1, [sp, #3772]
   23468:	ldr	x0, [sp, #40]
   2346c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23470:	mov	w1, w0
   23474:	add	x0, sp, #0x3c
   23478:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2347c:	and	w0, w0, #0xff
   23480:	eor	w0, w0, #0x1
   23484:	and	w0, w0, #0xff
   23488:	cmp	w0, #0x0
   2348c:	b.eq	23498 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e528>  // b.none
   23490:	mov	w0, #0x0                   	// #0
   23494:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23498:	mov	w2, #0x4                   	// #4
   2349c:	mov	w1, #0x0                   	// #0
   234a0:	ldr	w0, [sp, #52]
   234a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   234a8:	str	w0, [sp, #3772]
   234ac:	ldr	w0, [sp, #3772]
   234b0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   234b4:	add	x2, sp, #0xc00
   234b8:	stp	x0, x1, [x2, #152]
   234bc:	add	x0, sp, #0xc98
   234c0:	mov	x1, x0
   234c4:	ldr	x0, [sp, #40]
   234c8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   234cc:	mov	w2, #0x4                   	// #4
   234d0:	mov	w1, #0xc                   	// #12
   234d4:	ldr	w0, [sp, #52]
   234d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   234dc:	str	w0, [sp, #3772]
   234e0:	ldr	w0, [sp, #3772]
   234e4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   234e8:	add	x2, sp, #0xc00
   234ec:	stp	x0, x1, [x2, #168]
   234f0:	add	x0, sp, #0xca8
   234f4:	mov	x1, x0
   234f8:	ldr	x0, [sp, #40]
   234fc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   23500:	ldr	w0, [sp, #60]
   23504:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23508:	mov	w2, #0x5                   	// #5
   2350c:	mov	w1, #0x5                   	// #5
   23510:	ldr	w0, [sp, #52]
   23514:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23518:	str	w0, [sp, #3772]
   2351c:	ldr	x3, [sp, #24]
   23520:	ldr	x2, [sp, #32]
   23524:	ldr	w1, [sp, #3772]
   23528:	ldr	x0, [sp, #40]
   2352c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23530:	mov	w1, w0
   23534:	add	x0, sp, #0x3c
   23538:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2353c:	and	w0, w0, #0xff
   23540:	eor	w0, w0, #0x1
   23544:	and	w0, w0, #0xff
   23548:	cmp	w0, #0x0
   2354c:	b.eq	23558 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e5e8>  // b.none
   23550:	mov	w0, #0x0                   	// #0
   23554:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23558:	mov	w2, #0x5                   	// #5
   2355c:	mov	w1, #0x10                  	// #16
   23560:	ldr	w0, [sp, #52]
   23564:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23568:	str	w0, [sp, #3772]
   2356c:	ldr	w0, [sp, #3772]
   23570:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   23574:	add	x2, sp, #0xc00
   23578:	stp	x0, x1, [x2, #184]
   2357c:	add	x0, sp, #0xcb8
   23580:	mov	x1, x0
   23584:	ldr	x0, [sp, #40]
   23588:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2358c:	mov	w2, #0x4                   	// #4
   23590:	mov	w1, #0x0                   	// #0
   23594:	ldr	w0, [sp, #52]
   23598:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2359c:	str	w0, [sp, #3772]
   235a0:	ldr	w0, [sp, #3772]
   235a4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   235a8:	add	x2, sp, #0xc00
   235ac:	stp	x0, x1, [x2, #200]
   235b0:	add	x0, sp, #0xcc8
   235b4:	mov	x1, x0
   235b8:	ldr	x0, [sp, #40]
   235bc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   235c0:	mov	w2, #0x4                   	// #4
   235c4:	mov	w1, #0xc                   	// #12
   235c8:	ldr	w0, [sp, #52]
   235cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   235d0:	str	w0, [sp, #3772]
   235d4:	ldr	w0, [sp, #3772]
   235d8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   235dc:	add	x2, sp, #0xc00
   235e0:	stp	x0, x1, [x2, #216]
   235e4:	add	x0, sp, #0xcd8
   235e8:	mov	x1, x0
   235ec:	ldr	x0, [sp, #40]
   235f0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   235f4:	ldr	w0, [sp, #60]
   235f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   235fc:	mov	w2, #0x5                   	// #5
   23600:	mov	w1, #0x0                   	// #0
   23604:	ldr	w0, [sp, #52]
   23608:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2360c:	str	w0, [sp, #3772]
   23610:	ldr	w0, [sp, #3772]
   23614:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   23618:	add	x2, sp, #0xc00
   2361c:	stp	x0, x1, [x2, #232]
   23620:	add	x0, sp, #0xce8
   23624:	mov	x1, x0
   23628:	ldr	x0, [sp, #40]
   2362c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   23630:	mov	w2, #0x13                  	// #19
   23634:	mov	w1, #0x5                   	// #5
   23638:	ldr	w0, [sp, #52]
   2363c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23640:	str	w0, [sp, #3772]
   23644:	ldr	x3, [sp, #24]
   23648:	ldr	x2, [sp, #32]
   2364c:	ldr	w1, [sp, #3772]
   23650:	ldr	x0, [sp, #40]
   23654:	bl	132c <_ZL18DecodePCRelLabel19RN4llvm6MCInstEjmPKv>
   23658:	mov	w1, w0
   2365c:	add	x0, sp, #0x3c
   23660:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23664:	and	w0, w0, #0xff
   23668:	eor	w0, w0, #0x1
   2366c:	and	w0, w0, #0xff
   23670:	cmp	w0, #0x0
   23674:	b.eq	23680 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e710>  // b.none
   23678:	mov	w0, #0x0                   	// #0
   2367c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23680:	ldr	w0, [sp, #60]
   23684:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23688:	mov	w2, #0x5                   	// #5
   2368c:	mov	w1, #0x0                   	// #0
   23690:	ldr	w0, [sp, #52]
   23694:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23698:	str	w0, [sp, #3772]
   2369c:	ldr	x3, [sp, #24]
   236a0:	ldr	x2, [sp, #32]
   236a4:	ldr	w1, [sp, #3772]
   236a8:	ldr	x0, [sp, #40]
   236ac:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   236b0:	mov	w1, w0
   236b4:	add	x0, sp, #0x3c
   236b8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   236bc:	and	w0, w0, #0xff
   236c0:	eor	w0, w0, #0x1
   236c4:	and	w0, w0, #0xff
   236c8:	cmp	w0, #0x0
   236cc:	b.eq	236d8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e768>  // b.none
   236d0:	mov	w0, #0x0                   	// #0
   236d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   236d8:	mov	w2, #0x5                   	// #5
   236dc:	mov	w1, #0x5                   	// #5
   236e0:	ldr	w0, [sp, #52]
   236e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   236e8:	str	w0, [sp, #3772]
   236ec:	ldr	x3, [sp, #24]
   236f0:	ldr	x2, [sp, #32]
   236f4:	ldr	w1, [sp, #3772]
   236f8:	ldr	x0, [sp, #40]
   236fc:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   23700:	mov	w1, w0
   23704:	add	x0, sp, #0x3c
   23708:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2370c:	and	w0, w0, #0xff
   23710:	eor	w0, w0, #0x1
   23714:	and	w0, w0, #0xff
   23718:	cmp	w0, #0x0
   2371c:	b.eq	23728 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e7b8>  // b.none
   23720:	mov	w0, #0x0                   	// #0
   23724:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23728:	ldr	w0, [sp, #60]
   2372c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23730:	mov	w2, #0x5                   	// #5
   23734:	mov	w1, #0x5                   	// #5
   23738:	ldr	w0, [sp, #52]
   2373c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23740:	str	w0, [sp, #3772]
   23744:	ldr	x3, [sp, #24]
   23748:	ldr	x2, [sp, #32]
   2374c:	ldr	w1, [sp, #3772]
   23750:	ldr	x0, [sp, #40]
   23754:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   23758:	mov	w1, w0
   2375c:	add	x0, sp, #0x3c
   23760:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23764:	and	w0, w0, #0xff
   23768:	eor	w0, w0, #0x1
   2376c:	and	w0, w0, #0xff
   23770:	cmp	w0, #0x0
   23774:	b.eq	23780 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e810>  // b.none
   23778:	mov	w0, #0x0                   	// #0
   2377c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23780:	mov	w2, #0x5                   	// #5
   23784:	mov	w1, #0x0                   	// #0
   23788:	ldr	w0, [sp, #52]
   2378c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23790:	str	w0, [sp, #3772]
   23794:	ldr	x3, [sp, #24]
   23798:	ldr	x2, [sp, #32]
   2379c:	ldr	w1, [sp, #3772]
   237a0:	ldr	x0, [sp, #40]
   237a4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   237a8:	mov	w1, w0
   237ac:	add	x0, sp, #0x3c
   237b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   237b4:	and	w0, w0, #0xff
   237b8:	eor	w0, w0, #0x1
   237bc:	and	w0, w0, #0xff
   237c0:	cmp	w0, #0x0
   237c4:	b.eq	237d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e860>  // b.none
   237c8:	mov	w0, #0x0                   	// #0
   237cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   237d0:	mov	w2, #0x5                   	// #5
   237d4:	mov	w1, #0x5                   	// #5
   237d8:	ldr	w0, [sp, #52]
   237dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   237e0:	str	w0, [sp, #3772]
   237e4:	ldr	x3, [sp, #24]
   237e8:	ldr	x2, [sp, #32]
   237ec:	ldr	w1, [sp, #3772]
   237f0:	ldr	x0, [sp, #40]
   237f4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   237f8:	mov	w1, w0
   237fc:	add	x0, sp, #0x3c
   23800:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23804:	and	w0, w0, #0xff
   23808:	eor	w0, w0, #0x1
   2380c:	and	w0, w0, #0xff
   23810:	cmp	w0, #0x0
   23814:	b.eq	23820 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e8b0>  // b.none
   23818:	mov	w0, #0x0                   	// #0
   2381c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23820:	mov	w2, #0x9                   	// #9
   23824:	mov	w1, #0xc                   	// #12
   23828:	ldr	w0, [sp, #52]
   2382c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23830:	str	w0, [sp, #3772]
   23834:	ldr	w0, [sp, #3772]
   23838:	ldr	x3, [sp, #24]
   2383c:	ldr	x2, [sp, #32]
   23840:	mov	x1, x0
   23844:	ldr	x0, [sp, #40]
   23848:	bl	2abf8 <_Z10DecodeSImmILi9EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
   2384c:	mov	w1, w0
   23850:	add	x0, sp, #0x3c
   23854:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23858:	and	w0, w0, #0xff
   2385c:	eor	w0, w0, #0x1
   23860:	and	w0, w0, #0xff
   23864:	cmp	w0, #0x0
   23868:	b.eq	23874 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e904>  // b.none
   2386c:	mov	w0, #0x0                   	// #0
   23870:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23874:	ldr	w0, [sp, #60]
   23878:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2387c:	mov	w2, #0x5                   	// #5
   23880:	mov	w1, #0x0                   	// #0
   23884:	ldr	w0, [sp, #52]
   23888:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2388c:	str	w0, [sp, #3772]
   23890:	ldr	x3, [sp, #24]
   23894:	ldr	x2, [sp, #32]
   23898:	ldr	w1, [sp, #3772]
   2389c:	ldr	x0, [sp, #40]
   238a0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   238a4:	mov	w1, w0
   238a8:	add	x0, sp, #0x3c
   238ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   238b0:	and	w0, w0, #0xff
   238b4:	eor	w0, w0, #0x1
   238b8:	and	w0, w0, #0xff
   238bc:	cmp	w0, #0x0
   238c0:	b.eq	238cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e95c>  // b.none
   238c4:	mov	w0, #0x0                   	// #0
   238c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   238cc:	mov	w2, #0x5                   	// #5
   238d0:	mov	w1, #0x5                   	// #5
   238d4:	ldr	w0, [sp, #52]
   238d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   238dc:	str	w0, [sp, #3772]
   238e0:	ldr	x3, [sp, #24]
   238e4:	ldr	x2, [sp, #32]
   238e8:	ldr	w1, [sp, #3772]
   238ec:	ldr	x0, [sp, #40]
   238f0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   238f4:	mov	w1, w0
   238f8:	add	x0, sp, #0x3c
   238fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23900:	and	w0, w0, #0xff
   23904:	eor	w0, w0, #0x1
   23908:	and	w0, w0, #0xff
   2390c:	cmp	w0, #0x0
   23910:	b.eq	2391c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1e9ac>  // b.none
   23914:	mov	w0, #0x0                   	// #0
   23918:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2391c:	mov	w2, #0x9                   	// #9
   23920:	mov	w1, #0xc                   	// #12
   23924:	ldr	w0, [sp, #52]
   23928:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2392c:	str	w0, [sp, #3772]
   23930:	ldr	w0, [sp, #3772]
   23934:	ldr	x3, [sp, #24]
   23938:	ldr	x2, [sp, #32]
   2393c:	mov	x1, x0
   23940:	ldr	x0, [sp, #40]
   23944:	bl	2abf8 <_Z10DecodeSImmILi9EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
   23948:	mov	w1, w0
   2394c:	add	x0, sp, #0x3c
   23950:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23954:	and	w0, w0, #0xff
   23958:	eor	w0, w0, #0x1
   2395c:	and	w0, w0, #0xff
   23960:	cmp	w0, #0x0
   23964:	b.eq	23970 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ea00>  // b.none
   23968:	mov	w0, #0x0                   	// #0
   2396c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23970:	ldr	w0, [sp, #60]
   23974:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23978:	mov	w2, #0x5                   	// #5
   2397c:	mov	w1, #0x0                   	// #0
   23980:	ldr	w0, [sp, #52]
   23984:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23988:	str	w0, [sp, #3772]
   2398c:	ldr	x3, [sp, #24]
   23990:	ldr	x2, [sp, #32]
   23994:	ldr	w1, [sp, #3772]
   23998:	ldr	x0, [sp, #40]
   2399c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   239a0:	mov	w1, w0
   239a4:	add	x0, sp, #0x3c
   239a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   239ac:	and	w0, w0, #0xff
   239b0:	eor	w0, w0, #0x1
   239b4:	and	w0, w0, #0xff
   239b8:	cmp	w0, #0x0
   239bc:	b.eq	239c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ea58>  // b.none
   239c0:	mov	w0, #0x0                   	// #0
   239c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   239c8:	mov	w2, #0x5                   	// #5
   239cc:	mov	w1, #0x0                   	// #0
   239d0:	ldr	w0, [sp, #52]
   239d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   239d8:	str	w0, [sp, #3772]
   239dc:	ldr	x3, [sp, #24]
   239e0:	ldr	x2, [sp, #32]
   239e4:	ldr	w1, [sp, #3772]
   239e8:	ldr	x0, [sp, #40]
   239ec:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   239f0:	mov	w1, w0
   239f4:	add	x0, sp, #0x3c
   239f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   239fc:	and	w0, w0, #0xff
   23a00:	eor	w0, w0, #0x1
   23a04:	and	w0, w0, #0xff
   23a08:	cmp	w0, #0x0
   23a0c:	b.eq	23a18 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1eaa8>  // b.none
   23a10:	mov	w0, #0x0                   	// #0
   23a14:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23a18:	mov	w2, #0x5                   	// #5
   23a1c:	mov	w1, #0x5                   	// #5
   23a20:	ldr	w0, [sp, #52]
   23a24:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23a28:	str	w0, [sp, #3772]
   23a2c:	ldr	x3, [sp, #24]
   23a30:	ldr	x2, [sp, #32]
   23a34:	ldr	w1, [sp, #3772]
   23a38:	ldr	x0, [sp, #40]
   23a3c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   23a40:	mov	w1, w0
   23a44:	add	x0, sp, #0x3c
   23a48:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23a4c:	and	w0, w0, #0xff
   23a50:	eor	w0, w0, #0x1
   23a54:	and	w0, w0, #0xff
   23a58:	cmp	w0, #0x0
   23a5c:	b.eq	23a68 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1eaf8>  // b.none
   23a60:	mov	w0, #0x0                   	// #0
   23a64:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23a68:	mov	w2, #0x9                   	// #9
   23a6c:	mov	w1, #0xc                   	// #12
   23a70:	ldr	w0, [sp, #52]
   23a74:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23a78:	str	w0, [sp, #3772]
   23a7c:	ldr	w0, [sp, #3772]
   23a80:	ldr	x3, [sp, #24]
   23a84:	ldr	x2, [sp, #32]
   23a88:	mov	x1, x0
   23a8c:	ldr	x0, [sp, #40]
   23a90:	bl	2abf8 <_Z10DecodeSImmILi9EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
   23a94:	mov	w1, w0
   23a98:	add	x0, sp, #0x3c
   23a9c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23aa0:	and	w0, w0, #0xff
   23aa4:	eor	w0, w0, #0x1
   23aa8:	and	w0, w0, #0xff
   23aac:	cmp	w0, #0x0
   23ab0:	b.eq	23abc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1eb4c>  // b.none
   23ab4:	mov	w0, #0x0                   	// #0
   23ab8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23abc:	ldr	w0, [sp, #60]
   23ac0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23ac4:	mov	w2, #0x5                   	// #5
   23ac8:	mov	w1, #0x0                   	// #0
   23acc:	ldr	w0, [sp, #52]
   23ad0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23ad4:	str	w0, [sp, #3772]
   23ad8:	ldr	x3, [sp, #24]
   23adc:	ldr	x2, [sp, #32]
   23ae0:	ldr	w1, [sp, #3772]
   23ae4:	ldr	x0, [sp, #40]
   23ae8:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23aec:	mov	w1, w0
   23af0:	add	x0, sp, #0x3c
   23af4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23af8:	and	w0, w0, #0xff
   23afc:	eor	w0, w0, #0x1
   23b00:	and	w0, w0, #0xff
   23b04:	cmp	w0, #0x0
   23b08:	b.eq	23b14 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1eba4>  // b.none
   23b0c:	mov	w0, #0x0                   	// #0
   23b10:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23b14:	mov	w2, #0x5                   	// #5
   23b18:	mov	w1, #0x5                   	// #5
   23b1c:	ldr	w0, [sp, #52]
   23b20:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23b24:	str	w0, [sp, #3772]
   23b28:	ldr	x3, [sp, #24]
   23b2c:	ldr	x2, [sp, #32]
   23b30:	ldr	w1, [sp, #3772]
   23b34:	ldr	x0, [sp, #40]
   23b38:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23b3c:	mov	w1, w0
   23b40:	add	x0, sp, #0x3c
   23b44:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23b48:	and	w0, w0, #0xff
   23b4c:	eor	w0, w0, #0x1
   23b50:	and	w0, w0, #0xff
   23b54:	cmp	w0, #0x0
   23b58:	b.eq	23b64 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ebf4>  // b.none
   23b5c:	mov	w0, #0x0                   	// #0
   23b60:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23b64:	ldr	w0, [sp, #60]
   23b68:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23b6c:	mov	w2, #0x5                   	// #5
   23b70:	mov	w1, #0x0                   	// #0
   23b74:	ldr	w0, [sp, #52]
   23b78:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23b7c:	str	w0, [sp, #3772]
   23b80:	ldr	x3, [sp, #24]
   23b84:	ldr	x2, [sp, #32]
   23b88:	ldr	w1, [sp, #3772]
   23b8c:	ldr	x0, [sp, #40]
   23b90:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23b94:	mov	w1, w0
   23b98:	add	x0, sp, #0x3c
   23b9c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23ba0:	and	w0, w0, #0xff
   23ba4:	eor	w0, w0, #0x1
   23ba8:	and	w0, w0, #0xff
   23bac:	cmp	w0, #0x0
   23bb0:	b.eq	23bbc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ec4c>  // b.none
   23bb4:	mov	w0, #0x0                   	// #0
   23bb8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23bbc:	mov	w2, #0x5                   	// #5
   23bc0:	mov	w1, #0x10                  	// #16
   23bc4:	ldr	w0, [sp, #52]
   23bc8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23bcc:	str	w0, [sp, #3772]
   23bd0:	ldr	x3, [sp, #24]
   23bd4:	ldr	x2, [sp, #32]
   23bd8:	ldr	w1, [sp, #3772]
   23bdc:	ldr	x0, [sp, #40]
   23be0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23be4:	mov	w1, w0
   23be8:	add	x0, sp, #0x3c
   23bec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23bf0:	and	w0, w0, #0xff
   23bf4:	eor	w0, w0, #0x1
   23bf8:	and	w0, w0, #0xff
   23bfc:	cmp	w0, #0x0
   23c00:	b.eq	23c0c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ec9c>  // b.none
   23c04:	mov	w0, #0x0                   	// #0
   23c08:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23c0c:	mov	w2, #0x5                   	// #5
   23c10:	mov	w1, #0x5                   	// #5
   23c14:	ldr	w0, [sp, #52]
   23c18:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23c1c:	str	w0, [sp, #3772]
   23c20:	ldr	x3, [sp, #24]
   23c24:	ldr	x2, [sp, #32]
   23c28:	ldr	w1, [sp, #3772]
   23c2c:	ldr	x0, [sp, #40]
   23c30:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   23c34:	mov	w1, w0
   23c38:	add	x0, sp, #0x3c
   23c3c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23c40:	and	w0, w0, #0xff
   23c44:	eor	w0, w0, #0x1
   23c48:	and	w0, w0, #0xff
   23c4c:	cmp	w0, #0x0
   23c50:	b.eq	23c5c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ecec>  // b.none
   23c54:	mov	w0, #0x0                   	// #0
   23c58:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23c5c:	ldr	w0, [sp, #60]
   23c60:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23c64:	mov	w2, #0x5                   	// #5
   23c68:	mov	w1, #0x0                   	// #0
   23c6c:	ldr	w0, [sp, #52]
   23c70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23c74:	str	w0, [sp, #3772]
   23c78:	ldr	x3, [sp, #24]
   23c7c:	ldr	x2, [sp, #32]
   23c80:	ldr	w1, [sp, #3772]
   23c84:	ldr	x0, [sp, #40]
   23c88:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23c8c:	mov	w1, w0
   23c90:	add	x0, sp, #0x3c
   23c94:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23c98:	and	w0, w0, #0xff
   23c9c:	eor	w0, w0, #0x1
   23ca0:	and	w0, w0, #0xff
   23ca4:	cmp	w0, #0x0
   23ca8:	b.eq	23cb4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ed44>  // b.none
   23cac:	mov	w0, #0x0                   	// #0
   23cb0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23cb4:	mov	w2, #0x5                   	// #5
   23cb8:	mov	w1, #0x5                   	// #5
   23cbc:	ldr	w0, [sp, #52]
   23cc0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23cc4:	str	w0, [sp, #3772]
   23cc8:	ldr	x3, [sp, #24]
   23ccc:	ldr	x2, [sp, #32]
   23cd0:	ldr	w1, [sp, #3772]
   23cd4:	ldr	x0, [sp, #40]
   23cd8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   23cdc:	mov	w1, w0
   23ce0:	add	x0, sp, #0x3c
   23ce4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23ce8:	and	w0, w0, #0xff
   23cec:	eor	w0, w0, #0x1
   23cf0:	and	w0, w0, #0xff
   23cf4:	cmp	w0, #0x0
   23cf8:	b.eq	23d04 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ed94>  // b.none
   23cfc:	mov	w0, #0x0                   	// #0
   23d00:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23d04:	str	wzr, [sp, #3772]
   23d08:	mov	w2, #0x9                   	// #9
   23d0c:	mov	w1, #0xc                   	// #12
   23d10:	ldr	w0, [sp, #52]
   23d14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23d18:	mov	w1, w0
   23d1c:	ldr	w0, [sp, #3772]
   23d20:	orr	w0, w0, w1
   23d24:	str	w0, [sp, #3772]
   23d28:	mov	w2, #0x1                   	// #1
   23d2c:	mov	w1, #0x16                  	// #22
   23d30:	ldr	w0, [sp, #52]
   23d34:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23d38:	lsl	w0, w0, #9
   23d3c:	ldr	w1, [sp, #3772]
   23d40:	orr	w0, w1, w0
   23d44:	str	w0, [sp, #3772]
   23d48:	ldr	w0, [sp, #3772]
   23d4c:	ldr	x3, [sp, #24]
   23d50:	ldr	x2, [sp, #32]
   23d54:	mov	x1, x0
   23d58:	ldr	x0, [sp, #40]
   23d5c:	bl	2ace0 <_Z10DecodeSImmILi10EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
   23d60:	mov	w1, w0
   23d64:	add	x0, sp, #0x3c
   23d68:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23d6c:	and	w0, w0, #0xff
   23d70:	eor	w0, w0, #0x1
   23d74:	and	w0, w0, #0xff
   23d78:	cmp	w0, #0x0
   23d7c:	b.eq	23d88 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ee18>  // b.none
   23d80:	mov	w0, #0x0                   	// #0
   23d84:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23d88:	ldr	w0, [sp, #60]
   23d8c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23d90:	mov	w2, #0x5                   	// #5
   23d94:	mov	w1, #0x5                   	// #5
   23d98:	ldr	w0, [sp, #52]
   23d9c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23da0:	str	w0, [sp, #3772]
   23da4:	ldr	x3, [sp, #24]
   23da8:	ldr	x2, [sp, #32]
   23dac:	ldr	w1, [sp, #3772]
   23db0:	ldr	x0, [sp, #40]
   23db4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   23db8:	mov	w1, w0
   23dbc:	add	x0, sp, #0x3c
   23dc0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23dc4:	and	w0, w0, #0xff
   23dc8:	eor	w0, w0, #0x1
   23dcc:	and	w0, w0, #0xff
   23dd0:	cmp	w0, #0x0
   23dd4:	b.eq	23de0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ee70>  // b.none
   23dd8:	mov	w0, #0x0                   	// #0
   23ddc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23de0:	mov	w2, #0x5                   	// #5
   23de4:	mov	w1, #0x0                   	// #0
   23de8:	ldr	w0, [sp, #52]
   23dec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23df0:	str	w0, [sp, #3772]
   23df4:	ldr	x3, [sp, #24]
   23df8:	ldr	x2, [sp, #32]
   23dfc:	ldr	w1, [sp, #3772]
   23e00:	ldr	x0, [sp, #40]
   23e04:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   23e08:	mov	w1, w0
   23e0c:	add	x0, sp, #0x3c
   23e10:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23e14:	and	w0, w0, #0xff
   23e18:	eor	w0, w0, #0x1
   23e1c:	and	w0, w0, #0xff
   23e20:	cmp	w0, #0x0
   23e24:	b.eq	23e30 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1eec0>  // b.none
   23e28:	mov	w0, #0x0                   	// #0
   23e2c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23e30:	mov	w2, #0x5                   	// #5
   23e34:	mov	w1, #0x5                   	// #5
   23e38:	ldr	w0, [sp, #52]
   23e3c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23e40:	str	w0, [sp, #3772]
   23e44:	ldr	x3, [sp, #24]
   23e48:	ldr	x2, [sp, #32]
   23e4c:	ldr	w1, [sp, #3772]
   23e50:	ldr	x0, [sp, #40]
   23e54:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   23e58:	mov	w1, w0
   23e5c:	add	x0, sp, #0x3c
   23e60:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23e64:	and	w0, w0, #0xff
   23e68:	eor	w0, w0, #0x1
   23e6c:	and	w0, w0, #0xff
   23e70:	cmp	w0, #0x0
   23e74:	b.eq	23e80 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ef10>  // b.none
   23e78:	mov	w0, #0x0                   	// #0
   23e7c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23e80:	str	wzr, [sp, #3772]
   23e84:	mov	w2, #0x9                   	// #9
   23e88:	mov	w1, #0xc                   	// #12
   23e8c:	ldr	w0, [sp, #52]
   23e90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23e94:	mov	w1, w0
   23e98:	ldr	w0, [sp, #3772]
   23e9c:	orr	w0, w0, w1
   23ea0:	str	w0, [sp, #3772]
   23ea4:	mov	w2, #0x1                   	// #1
   23ea8:	mov	w1, #0x16                  	// #22
   23eac:	ldr	w0, [sp, #52]
   23eb0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23eb4:	lsl	w0, w0, #9
   23eb8:	ldr	w1, [sp, #3772]
   23ebc:	orr	w0, w1, w0
   23ec0:	str	w0, [sp, #3772]
   23ec4:	ldr	w0, [sp, #3772]
   23ec8:	ldr	x3, [sp, #24]
   23ecc:	ldr	x2, [sp, #32]
   23ed0:	mov	x1, x0
   23ed4:	ldr	x0, [sp, #40]
   23ed8:	bl	2ace0 <_Z10DecodeSImmILi10EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>
   23edc:	mov	w1, w0
   23ee0:	add	x0, sp, #0x3c
   23ee4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23ee8:	and	w0, w0, #0xff
   23eec:	eor	w0, w0, #0x1
   23ef0:	and	w0, w0, #0xff
   23ef4:	cmp	w0, #0x0
   23ef8:	b.eq	23f04 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ef94>  // b.none
   23efc:	mov	w0, #0x0                   	// #0
   23f00:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23f04:	ldr	w0, [sp, #60]
   23f08:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23f0c:	mov	w2, #0x5                   	// #5
   23f10:	mov	w1, #0x0                   	// #0
   23f14:	ldr	w0, [sp, #52]
   23f18:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23f1c:	str	w0, [sp, #3772]
   23f20:	ldr	w0, [sp, #3772]
   23f24:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   23f28:	add	x2, sp, #0xc00
   23f2c:	stp	x0, x1, [x2, #248]
   23f30:	add	x0, sp, #0xcf8
   23f34:	mov	x1, x0
   23f38:	ldr	x0, [sp, #40]
   23f3c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   23f40:	mov	w2, #0x5                   	// #5
   23f44:	mov	w1, #0x5                   	// #5
   23f48:	ldr	w0, [sp, #52]
   23f4c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23f50:	str	w0, [sp, #3772]
   23f54:	ldr	x3, [sp, #24]
   23f58:	ldr	x2, [sp, #32]
   23f5c:	ldr	w1, [sp, #3772]
   23f60:	ldr	x0, [sp, #40]
   23f64:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   23f68:	mov	w1, w0
   23f6c:	add	x0, sp, #0x3c
   23f70:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23f74:	and	w0, w0, #0xff
   23f78:	eor	w0, w0, #0x1
   23f7c:	and	w0, w0, #0xff
   23f80:	cmp	w0, #0x0
   23f84:	b.eq	23f90 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f020>  // b.none
   23f88:	mov	w0, #0x0                   	// #0
   23f8c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23f90:	mov	w2, #0x5                   	// #5
   23f94:	mov	w1, #0x10                  	// #16
   23f98:	ldr	w0, [sp, #52]
   23f9c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23fa0:	str	w0, [sp, #3772]
   23fa4:	ldr	x3, [sp, #24]
   23fa8:	ldr	x2, [sp, #32]
   23fac:	ldr	w1, [sp, #3772]
   23fb0:	ldr	x0, [sp, #40]
   23fb4:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   23fb8:	mov	w1, w0
   23fbc:	add	x0, sp, #0x3c
   23fc0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   23fc4:	and	w0, w0, #0xff
   23fc8:	eor	w0, w0, #0x1
   23fcc:	and	w0, w0, #0xff
   23fd0:	cmp	w0, #0x0
   23fd4:	b.eq	23fe0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f070>  // b.none
   23fd8:	mov	w0, #0x0                   	// #0
   23fdc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   23fe0:	str	wzr, [sp, #3772]
   23fe4:	mov	w2, #0x1                   	// #1
   23fe8:	mov	w1, #0xc                   	// #12
   23fec:	ldr	w0, [sp, #52]
   23ff0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   23ff4:	mov	w1, w0
   23ff8:	ldr	w0, [sp, #3772]
   23ffc:	orr	w0, w0, w1
   24000:	str	w0, [sp, #3772]
   24004:	mov	w2, #0x1                   	// #1
   24008:	mov	w1, #0xf                   	// #15
   2400c:	ldr	w0, [sp, #52]
   24010:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24014:	lsl	w0, w0, #1
   24018:	ldr	w1, [sp, #3772]
   2401c:	orr	w0, w1, w0
   24020:	str	w0, [sp, #3772]
   24024:	ldr	x3, [sp, #24]
   24028:	ldr	x2, [sp, #32]
   2402c:	ldr	w1, [sp, #3772]
   24030:	ldr	x0, [sp, #40]
   24034:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   24038:	mov	w1, w0
   2403c:	add	x0, sp, #0x3c
   24040:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24044:	and	w0, w0, #0xff
   24048:	eor	w0, w0, #0x1
   2404c:	and	w0, w0, #0xff
   24050:	cmp	w0, #0x0
   24054:	b.eq	24060 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f0f0>  // b.none
   24058:	mov	w0, #0x0                   	// #0
   2405c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24060:	ldr	w0, [sp, #60]
   24064:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24068:	mov	w2, #0x5                   	// #5
   2406c:	mov	w1, #0x0                   	// #0
   24070:	ldr	w0, [sp, #52]
   24074:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24078:	str	w0, [sp, #3772]
   2407c:	ldr	w0, [sp, #3772]
   24080:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   24084:	add	x2, sp, #0xe00
   24088:	stp	x0, x1, [x2, #-248]
   2408c:	add	x0, sp, #0xd08
   24090:	mov	x1, x0
   24094:	ldr	x0, [sp, #40]
   24098:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2409c:	mov	w2, #0x5                   	// #5
   240a0:	mov	w1, #0x5                   	// #5
   240a4:	ldr	w0, [sp, #52]
   240a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   240ac:	str	w0, [sp, #3772]
   240b0:	ldr	x3, [sp, #24]
   240b4:	ldr	x2, [sp, #32]
   240b8:	ldr	w1, [sp, #3772]
   240bc:	ldr	x0, [sp, #40]
   240c0:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   240c4:	mov	w1, w0
   240c8:	add	x0, sp, #0x3c
   240cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   240d0:	and	w0, w0, #0xff
   240d4:	eor	w0, w0, #0x1
   240d8:	and	w0, w0, #0xff
   240dc:	cmp	w0, #0x0
   240e0:	b.eq	240ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f17c>  // b.none
   240e4:	mov	w0, #0x0                   	// #0
   240e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   240ec:	mov	w2, #0x5                   	// #5
   240f0:	mov	w1, #0x10                  	// #16
   240f4:	ldr	w0, [sp, #52]
   240f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   240fc:	str	w0, [sp, #3772]
   24100:	ldr	x3, [sp, #24]
   24104:	ldr	x2, [sp, #32]
   24108:	ldr	w1, [sp, #3772]
   2410c:	ldr	x0, [sp, #40]
   24110:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   24114:	mov	w1, w0
   24118:	add	x0, sp, #0x3c
   2411c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24120:	and	w0, w0, #0xff
   24124:	eor	w0, w0, #0x1
   24128:	and	w0, w0, #0xff
   2412c:	cmp	w0, #0x0
   24130:	b.eq	2413c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f1cc>  // b.none
   24134:	mov	w0, #0x0                   	// #0
   24138:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2413c:	str	wzr, [sp, #3772]
   24140:	mov	w2, #0x1                   	// #1
   24144:	mov	w1, #0xc                   	// #12
   24148:	ldr	w0, [sp, #52]
   2414c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24150:	mov	w1, w0
   24154:	ldr	w0, [sp, #3772]
   24158:	orr	w0, w0, w1
   2415c:	str	w0, [sp, #3772]
   24160:	mov	w2, #0x1                   	// #1
   24164:	mov	w1, #0xf                   	// #15
   24168:	ldr	w0, [sp, #52]
   2416c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24170:	lsl	w0, w0, #1
   24174:	ldr	w1, [sp, #3772]
   24178:	orr	w0, w1, w0
   2417c:	str	w0, [sp, #3772]
   24180:	ldr	x3, [sp, #24]
   24184:	ldr	x2, [sp, #32]
   24188:	ldr	w1, [sp, #3772]
   2418c:	ldr	x0, [sp, #40]
   24190:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   24194:	mov	w1, w0
   24198:	add	x0, sp, #0x3c
   2419c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   241a0:	and	w0, w0, #0xff
   241a4:	eor	w0, w0, #0x1
   241a8:	and	w0, w0, #0xff
   241ac:	cmp	w0, #0x0
   241b0:	b.eq	241bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f24c>  // b.none
   241b4:	mov	w0, #0x0                   	// #0
   241b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   241bc:	ldr	w0, [sp, #60]
   241c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   241c4:	mov	w2, #0x5                   	// #5
   241c8:	mov	w1, #0x0                   	// #0
   241cc:	ldr	w0, [sp, #52]
   241d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   241d4:	str	w0, [sp, #3772]
   241d8:	ldr	x3, [sp, #24]
   241dc:	ldr	x2, [sp, #32]
   241e0:	ldr	w1, [sp, #3772]
   241e4:	ldr	x0, [sp, #40]
   241e8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   241ec:	mov	w1, w0
   241f0:	add	x0, sp, #0x3c
   241f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   241f8:	and	w0, w0, #0xff
   241fc:	eor	w0, w0, #0x1
   24200:	and	w0, w0, #0xff
   24204:	cmp	w0, #0x0
   24208:	b.eq	24214 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f2a4>  // b.none
   2420c:	mov	w0, #0x0                   	// #0
   24210:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24214:	mov	w2, #0x13                  	// #19
   24218:	mov	w1, #0x5                   	// #5
   2421c:	ldr	w0, [sp, #52]
   24220:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24224:	str	w0, [sp, #3772]
   24228:	ldr	x3, [sp, #24]
   2422c:	ldr	x2, [sp, #32]
   24230:	ldr	w1, [sp, #3772]
   24234:	ldr	x0, [sp, #40]
   24238:	bl	132c <_ZL18DecodePCRelLabel19RN4llvm6MCInstEjmPKv>
   2423c:	mov	w1, w0
   24240:	add	x0, sp, #0x3c
   24244:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24248:	and	w0, w0, #0xff
   2424c:	eor	w0, w0, #0x1
   24250:	and	w0, w0, #0xff
   24254:	cmp	w0, #0x0
   24258:	b.eq	24264 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f2f4>  // b.none
   2425c:	mov	w0, #0x0                   	// #0
   24260:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24264:	ldr	w0, [sp, #60]
   24268:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2426c:	mov	w2, #0x5                   	// #5
   24270:	mov	w1, #0x0                   	// #0
   24274:	ldr	w0, [sp, #52]
   24278:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2427c:	str	w0, [sp, #3772]
   24280:	ldr	x3, [sp, #24]
   24284:	ldr	x2, [sp, #32]
   24288:	ldr	w1, [sp, #3772]
   2428c:	ldr	x0, [sp, #40]
   24290:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   24294:	mov	w1, w0
   24298:	add	x0, sp, #0x3c
   2429c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   242a0:	and	w0, w0, #0xff
   242a4:	eor	w0, w0, #0x1
   242a8:	and	w0, w0, #0xff
   242ac:	cmp	w0, #0x0
   242b0:	b.eq	242bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f34c>  // b.none
   242b4:	mov	w0, #0x0                   	// #0
   242b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   242bc:	mov	w2, #0x5                   	// #5
   242c0:	mov	w1, #0x5                   	// #5
   242c4:	ldr	w0, [sp, #52]
   242c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   242cc:	str	w0, [sp, #3772]
   242d0:	ldr	x3, [sp, #24]
   242d4:	ldr	x2, [sp, #32]
   242d8:	ldr	w1, [sp, #3772]
   242dc:	ldr	x0, [sp, #40]
   242e0:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   242e4:	mov	w1, w0
   242e8:	add	x0, sp, #0x3c
   242ec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   242f0:	and	w0, w0, #0xff
   242f4:	eor	w0, w0, #0x1
   242f8:	and	w0, w0, #0xff
   242fc:	cmp	w0, #0x0
   24300:	b.eq	2430c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f39c>  // b.none
   24304:	mov	w0, #0x0                   	// #0
   24308:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2430c:	mov	w0, #0x20                  	// #32
   24310:	str	w0, [sp, #3772]
   24314:	mov	w2, #0x5                   	// #5
   24318:	mov	w1, #0xa                   	// #10
   2431c:	ldr	w0, [sp, #52]
   24320:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24324:	mov	w1, w0
   24328:	ldr	w0, [sp, #3772]
   2432c:	orr	w0, w0, w1
   24330:	str	w0, [sp, #3772]
   24334:	ldr	x3, [sp, #24]
   24338:	ldr	x2, [sp, #32]
   2433c:	ldr	w1, [sp, #3772]
   24340:	ldr	x0, [sp, #40]
   24344:	bl	1288 <_ZL26DecodeFixedPointScaleImm32RN4llvm6MCInstEjmPKv>
   24348:	mov	w1, w0
   2434c:	add	x0, sp, #0x3c
   24350:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24354:	and	w0, w0, #0xff
   24358:	eor	w0, w0, #0x1
   2435c:	and	w0, w0, #0xff
   24360:	cmp	w0, #0x0
   24364:	b.eq	24370 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f400>  // b.none
   24368:	mov	w0, #0x0                   	// #0
   2436c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24370:	ldr	w0, [sp, #60]
   24374:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24378:	mov	w2, #0x5                   	// #5
   2437c:	mov	w1, #0x0                   	// #0
   24380:	ldr	w0, [sp, #52]
   24384:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24388:	str	w0, [sp, #3772]
   2438c:	ldr	x3, [sp, #24]
   24390:	ldr	x2, [sp, #32]
   24394:	ldr	w1, [sp, #3772]
   24398:	ldr	x0, [sp, #40]
   2439c:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   243a0:	mov	w1, w0
   243a4:	add	x0, sp, #0x3c
   243a8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   243ac:	and	w0, w0, #0xff
   243b0:	eor	w0, w0, #0x1
   243b4:	and	w0, w0, #0xff
   243b8:	cmp	w0, #0x0
   243bc:	b.eq	243c8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f458>  // b.none
   243c0:	mov	w0, #0x0                   	// #0
   243c4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   243c8:	mov	w2, #0x5                   	// #5
   243cc:	mov	w1, #0x5                   	// #5
   243d0:	ldr	w0, [sp, #52]
   243d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   243d8:	str	w0, [sp, #3772]
   243dc:	ldr	x3, [sp, #24]
   243e0:	ldr	x2, [sp, #32]
   243e4:	ldr	w1, [sp, #3772]
   243e8:	ldr	x0, [sp, #40]
   243ec:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   243f0:	mov	w1, w0
   243f4:	add	x0, sp, #0x3c
   243f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   243fc:	and	w0, w0, #0xff
   24400:	eor	w0, w0, #0x1
   24404:	and	w0, w0, #0xff
   24408:	cmp	w0, #0x0
   2440c:	b.eq	24418 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f4a8>  // b.none
   24410:	mov	w0, #0x0                   	// #0
   24414:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24418:	mov	w0, #0x20                  	// #32
   2441c:	str	w0, [sp, #3772]
   24420:	mov	w2, #0x5                   	// #5
   24424:	mov	w1, #0xa                   	// #10
   24428:	ldr	w0, [sp, #52]
   2442c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24430:	mov	w1, w0
   24434:	ldr	w0, [sp, #3772]
   24438:	orr	w0, w0, w1
   2443c:	str	w0, [sp, #3772]
   24440:	ldr	x3, [sp, #24]
   24444:	ldr	x2, [sp, #32]
   24448:	ldr	w1, [sp, #3772]
   2444c:	ldr	x0, [sp, #40]
   24450:	bl	1288 <_ZL26DecodeFixedPointScaleImm32RN4llvm6MCInstEjmPKv>
   24454:	mov	w1, w0
   24458:	add	x0, sp, #0x3c
   2445c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24460:	and	w0, w0, #0xff
   24464:	eor	w0, w0, #0x1
   24468:	and	w0, w0, #0xff
   2446c:	cmp	w0, #0x0
   24470:	b.eq	2447c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f50c>  // b.none
   24474:	mov	w0, #0x0                   	// #0
   24478:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2447c:	ldr	w0, [sp, #60]
   24480:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24484:	mov	w2, #0x5                   	// #5
   24488:	mov	w1, #0x0                   	// #0
   2448c:	ldr	w0, [sp, #52]
   24490:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24494:	str	w0, [sp, #3772]
   24498:	ldr	x3, [sp, #24]
   2449c:	ldr	x2, [sp, #32]
   244a0:	ldr	w1, [sp, #3772]
   244a4:	ldr	x0, [sp, #40]
   244a8:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   244ac:	mov	w1, w0
   244b0:	add	x0, sp, #0x3c
   244b4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   244b8:	and	w0, w0, #0xff
   244bc:	eor	w0, w0, #0x1
   244c0:	and	w0, w0, #0xff
   244c4:	cmp	w0, #0x0
   244c8:	b.eq	244d4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f564>  // b.none
   244cc:	mov	w0, #0x0                   	// #0
   244d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   244d4:	mov	w2, #0x5                   	// #5
   244d8:	mov	w1, #0x5                   	// #5
   244dc:	ldr	w0, [sp, #52]
   244e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   244e4:	str	w0, [sp, #3772]
   244e8:	ldr	x3, [sp, #24]
   244ec:	ldr	x2, [sp, #32]
   244f0:	ldr	w1, [sp, #3772]
   244f4:	ldr	x0, [sp, #40]
   244f8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   244fc:	mov	w1, w0
   24500:	add	x0, sp, #0x3c
   24504:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24508:	and	w0, w0, #0xff
   2450c:	eor	w0, w0, #0x1
   24510:	and	w0, w0, #0xff
   24514:	cmp	w0, #0x0
   24518:	b.eq	24524 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f5b4>  // b.none
   2451c:	mov	w0, #0x0                   	// #0
   24520:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24524:	ldr	w0, [sp, #60]
   24528:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2452c:	mov	w2, #0x5                   	// #5
   24530:	mov	w1, #0x0                   	// #0
   24534:	ldr	w0, [sp, #52]
   24538:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2453c:	str	w0, [sp, #3772]
   24540:	ldr	x3, [sp, #24]
   24544:	ldr	x2, [sp, #32]
   24548:	ldr	w1, [sp, #3772]
   2454c:	ldr	x0, [sp, #40]
   24550:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   24554:	mov	w1, w0
   24558:	add	x0, sp, #0x3c
   2455c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24560:	and	w0, w0, #0xff
   24564:	eor	w0, w0, #0x1
   24568:	and	w0, w0, #0xff
   2456c:	cmp	w0, #0x0
   24570:	b.eq	2457c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f60c>  // b.none
   24574:	mov	w0, #0x0                   	// #0
   24578:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2457c:	mov	w2, #0x5                   	// #5
   24580:	mov	w1, #0x5                   	// #5
   24584:	ldr	w0, [sp, #52]
   24588:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2458c:	str	w0, [sp, #3772]
   24590:	ldr	x3, [sp, #24]
   24594:	ldr	x2, [sp, #32]
   24598:	ldr	w1, [sp, #3772]
   2459c:	ldr	x0, [sp, #40]
   245a0:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   245a4:	mov	w1, w0
   245a8:	add	x0, sp, #0x3c
   245ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   245b0:	and	w0, w0, #0xff
   245b4:	eor	w0, w0, #0x1
   245b8:	and	w0, w0, #0xff
   245bc:	cmp	w0, #0x0
   245c0:	b.eq	245cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f65c>  // b.none
   245c4:	mov	w0, #0x0                   	// #0
   245c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   245cc:	ldr	w0, [sp, #60]
   245d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   245d4:	mov	w2, #0x5                   	// #5
   245d8:	mov	w1, #0x5                   	// #5
   245dc:	ldr	w0, [sp, #52]
   245e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   245e4:	str	w0, [sp, #3772]
   245e8:	ldr	x3, [sp, #24]
   245ec:	ldr	x2, [sp, #32]
   245f0:	ldr	w1, [sp, #3772]
   245f4:	ldr	x0, [sp, #40]
   245f8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   245fc:	mov	w1, w0
   24600:	add	x0, sp, #0x3c
   24604:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24608:	and	w0, w0, #0xff
   2460c:	eor	w0, w0, #0x1
   24610:	and	w0, w0, #0xff
   24614:	cmp	w0, #0x0
   24618:	b.eq	24624 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f6b4>  // b.none
   2461c:	mov	w0, #0x0                   	// #0
   24620:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24624:	mov	w2, #0x5                   	// #5
   24628:	mov	w1, #0x10                  	// #16
   2462c:	ldr	w0, [sp, #52]
   24630:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24634:	str	w0, [sp, #3772]
   24638:	ldr	x3, [sp, #24]
   2463c:	ldr	x2, [sp, #32]
   24640:	ldr	w1, [sp, #3772]
   24644:	ldr	x0, [sp, #40]
   24648:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2464c:	mov	w1, w0
   24650:	add	x0, sp, #0x3c
   24654:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24658:	and	w0, w0, #0xff
   2465c:	eor	w0, w0, #0x1
   24660:	and	w0, w0, #0xff
   24664:	cmp	w0, #0x0
   24668:	b.eq	24674 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f704>  // b.none
   2466c:	mov	w0, #0x0                   	// #0
   24670:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24674:	ldr	w0, [sp, #60]
   24678:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2467c:	mov	w2, #0x5                   	// #5
   24680:	mov	w1, #0x5                   	// #5
   24684:	ldr	w0, [sp, #52]
   24688:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2468c:	str	w0, [sp, #3772]
   24690:	ldr	x3, [sp, #24]
   24694:	ldr	x2, [sp, #32]
   24698:	ldr	w1, [sp, #3772]
   2469c:	ldr	x0, [sp, #40]
   246a0:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   246a4:	mov	w1, w0
   246a8:	add	x0, sp, #0x3c
   246ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   246b0:	and	w0, w0, #0xff
   246b4:	eor	w0, w0, #0x1
   246b8:	and	w0, w0, #0xff
   246bc:	cmp	w0, #0x0
   246c0:	b.eq	246cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f75c>  // b.none
   246c4:	mov	w0, #0x0                   	// #0
   246c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   246cc:	ldr	w0, [sp, #60]
   246d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   246d4:	mov	w2, #0x5                   	// #5
   246d8:	mov	w1, #0x0                   	// #0
   246dc:	ldr	w0, [sp, #52]
   246e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   246e4:	str	w0, [sp, #3772]
   246e8:	ldr	x3, [sp, #24]
   246ec:	ldr	x2, [sp, #32]
   246f0:	ldr	w1, [sp, #3772]
   246f4:	ldr	x0, [sp, #40]
   246f8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   246fc:	mov	w1, w0
   24700:	add	x0, sp, #0x3c
   24704:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24708:	and	w0, w0, #0xff
   2470c:	eor	w0, w0, #0x1
   24710:	and	w0, w0, #0xff
   24714:	cmp	w0, #0x0
   24718:	b.eq	24724 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f7b4>  // b.none
   2471c:	mov	w0, #0x0                   	// #0
   24720:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24724:	mov	w2, #0x5                   	// #5
   24728:	mov	w1, #0x5                   	// #5
   2472c:	ldr	w0, [sp, #52]
   24730:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24734:	str	w0, [sp, #3772]
   24738:	ldr	x3, [sp, #24]
   2473c:	ldr	x2, [sp, #32]
   24740:	ldr	w1, [sp, #3772]
   24744:	ldr	x0, [sp, #40]
   24748:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2474c:	mov	w1, w0
   24750:	add	x0, sp, #0x3c
   24754:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24758:	and	w0, w0, #0xff
   2475c:	eor	w0, w0, #0x1
   24760:	and	w0, w0, #0xff
   24764:	cmp	w0, #0x0
   24768:	b.eq	24774 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f804>  // b.none
   2476c:	mov	w0, #0x0                   	// #0
   24770:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24774:	ldr	w0, [sp, #60]
   24778:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2477c:	mov	w2, #0x5                   	// #5
   24780:	mov	w1, #0x0                   	// #0
   24784:	ldr	w0, [sp, #52]
   24788:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2478c:	str	w0, [sp, #3772]
   24790:	ldr	x3, [sp, #24]
   24794:	ldr	x2, [sp, #32]
   24798:	ldr	w1, [sp, #3772]
   2479c:	ldr	x0, [sp, #40]
   247a0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   247a4:	mov	w1, w0
   247a8:	add	x0, sp, #0x3c
   247ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   247b0:	and	w0, w0, #0xff
   247b4:	eor	w0, w0, #0x1
   247b8:	and	w0, w0, #0xff
   247bc:	cmp	w0, #0x0
   247c0:	b.eq	247cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f85c>  // b.none
   247c4:	mov	w0, #0x0                   	// #0
   247c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   247cc:	mov	w2, #0x5                   	// #5
   247d0:	mov	w1, #0x5                   	// #5
   247d4:	ldr	w0, [sp, #52]
   247d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   247dc:	str	w0, [sp, #3772]
   247e0:	ldr	x3, [sp, #24]
   247e4:	ldr	x2, [sp, #32]
   247e8:	ldr	w1, [sp, #3772]
   247ec:	ldr	x0, [sp, #40]
   247f0:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   247f4:	mov	w1, w0
   247f8:	add	x0, sp, #0x3c
   247fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24800:	and	w0, w0, #0xff
   24804:	eor	w0, w0, #0x1
   24808:	and	w0, w0, #0xff
   2480c:	cmp	w0, #0x0
   24810:	b.eq	2481c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f8ac>  // b.none
   24814:	mov	w0, #0x0                   	// #0
   24818:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2481c:	ldr	w0, [sp, #60]
   24820:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24824:	mov	w2, #0x5                   	// #5
   24828:	mov	w1, #0x0                   	// #0
   2482c:	ldr	w0, [sp, #52]
   24830:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24834:	str	w0, [sp, #3772]
   24838:	ldr	x3, [sp, #24]
   2483c:	ldr	x2, [sp, #32]
   24840:	ldr	w1, [sp, #3772]
   24844:	ldr	x0, [sp, #40]
   24848:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   2484c:	mov	w1, w0
   24850:	add	x0, sp, #0x3c
   24854:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24858:	and	w0, w0, #0xff
   2485c:	eor	w0, w0, #0x1
   24860:	and	w0, w0, #0xff
   24864:	cmp	w0, #0x0
   24868:	b.eq	24874 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f904>  // b.none
   2486c:	mov	w0, #0x0                   	// #0
   24870:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24874:	mov	w2, #0x5                   	// #5
   24878:	mov	w1, #0x5                   	// #5
   2487c:	ldr	w0, [sp, #52]
   24880:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24884:	str	w0, [sp, #3772]
   24888:	ldr	x3, [sp, #24]
   2488c:	ldr	x2, [sp, #32]
   24890:	ldr	w1, [sp, #3772]
   24894:	ldr	x0, [sp, #40]
   24898:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2489c:	mov	w1, w0
   248a0:	add	x0, sp, #0x3c
   248a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   248a8:	and	w0, w0, #0xff
   248ac:	eor	w0, w0, #0x1
   248b0:	and	w0, w0, #0xff
   248b4:	cmp	w0, #0x0
   248b8:	b.eq	248c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f954>  // b.none
   248bc:	mov	w0, #0x0                   	// #0
   248c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   248c4:	ldr	w0, [sp, #60]
   248c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   248cc:	mov	w2, #0x5                   	// #5
   248d0:	mov	w1, #0x0                   	// #0
   248d4:	ldr	w0, [sp, #52]
   248d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   248dc:	str	w0, [sp, #3772]
   248e0:	ldr	x3, [sp, #24]
   248e4:	ldr	x2, [sp, #32]
   248e8:	ldr	w1, [sp, #3772]
   248ec:	ldr	x0, [sp, #40]
   248f0:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   248f4:	mov	w1, w0
   248f8:	add	x0, sp, #0x3c
   248fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24900:	and	w0, w0, #0xff
   24904:	eor	w0, w0, #0x1
   24908:	and	w0, w0, #0xff
   2490c:	cmp	w0, #0x0
   24910:	b.eq	2491c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1f9ac>  // b.none
   24914:	mov	w0, #0x0                   	// #0
   24918:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2491c:	mov	w2, #0x8                   	// #8
   24920:	mov	w1, #0xd                   	// #13
   24924:	ldr	w0, [sp, #52]
   24928:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2492c:	str	w0, [sp, #3772]
   24930:	ldr	w0, [sp, #3772]
   24934:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   24938:	add	x2, sp, #0xe00
   2493c:	stp	x0, x1, [x2, #-232]
   24940:	add	x0, sp, #0xd18
   24944:	mov	x1, x0
   24948:	ldr	x0, [sp, #40]
   2494c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   24950:	ldr	w0, [sp, #60]
   24954:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24958:	mov	w2, #0x5                   	// #5
   2495c:	mov	w1, #0x5                   	// #5
   24960:	ldr	w0, [sp, #52]
   24964:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24968:	str	w0, [sp, #3772]
   2496c:	ldr	x3, [sp, #24]
   24970:	ldr	x2, [sp, #32]
   24974:	ldr	w1, [sp, #3772]
   24978:	ldr	x0, [sp, #40]
   2497c:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   24980:	mov	w1, w0
   24984:	add	x0, sp, #0x3c
   24988:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2498c:	and	w0, w0, #0xff
   24990:	eor	w0, w0, #0x1
   24994:	and	w0, w0, #0xff
   24998:	cmp	w0, #0x0
   2499c:	b.eq	249a8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1fa38>  // b.none
   249a0:	mov	w0, #0x0                   	// #0
   249a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   249a8:	mov	w2, #0x5                   	// #5
   249ac:	mov	w1, #0x10                  	// #16
   249b0:	ldr	w0, [sp, #52]
   249b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   249b8:	str	w0, [sp, #3772]
   249bc:	ldr	x3, [sp, #24]
   249c0:	ldr	x2, [sp, #32]
   249c4:	ldr	w1, [sp, #3772]
   249c8:	ldr	x0, [sp, #40]
   249cc:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   249d0:	mov	w1, w0
   249d4:	add	x0, sp, #0x3c
   249d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   249dc:	and	w0, w0, #0xff
   249e0:	eor	w0, w0, #0x1
   249e4:	and	w0, w0, #0xff
   249e8:	cmp	w0, #0x0
   249ec:	b.eq	249f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1fa88>  // b.none
   249f0:	mov	w0, #0x0                   	// #0
   249f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   249f8:	mov	w2, #0x4                   	// #4
   249fc:	mov	w1, #0x0                   	// #0
   24a00:	ldr	w0, [sp, #52]
   24a04:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24a08:	str	w0, [sp, #3772]
   24a0c:	ldr	w0, [sp, #3772]
   24a10:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   24a14:	add	x2, sp, #0xe00
   24a18:	stp	x0, x1, [x2, #-216]
   24a1c:	add	x0, sp, #0xd28
   24a20:	mov	x1, x0
   24a24:	ldr	x0, [sp, #40]
   24a28:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   24a2c:	mov	w2, #0x4                   	// #4
   24a30:	mov	w1, #0xc                   	// #12
   24a34:	ldr	w0, [sp, #52]
   24a38:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24a3c:	str	w0, [sp, #3772]
   24a40:	ldr	w0, [sp, #3772]
   24a44:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   24a48:	add	x2, sp, #0xe00
   24a4c:	stp	x0, x1, [x2, #-200]
   24a50:	add	x0, sp, #0xd38
   24a54:	mov	x1, x0
   24a58:	ldr	x0, [sp, #40]
   24a5c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   24a60:	ldr	w0, [sp, #60]
   24a64:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24a68:	mov	w2, #0x5                   	// #5
   24a6c:	mov	w1, #0x0                   	// #0
   24a70:	ldr	w0, [sp, #52]
   24a74:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24a78:	str	w0, [sp, #3772]
   24a7c:	ldr	x3, [sp, #24]
   24a80:	ldr	x2, [sp, #32]
   24a84:	ldr	w1, [sp, #3772]
   24a88:	ldr	x0, [sp, #40]
   24a8c:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   24a90:	mov	w1, w0
   24a94:	add	x0, sp, #0x3c
   24a98:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24a9c:	and	w0, w0, #0xff
   24aa0:	eor	w0, w0, #0x1
   24aa4:	and	w0, w0, #0xff
   24aa8:	cmp	w0, #0x0
   24aac:	b.eq	24ab8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1fb48>  // b.none
   24ab0:	mov	w0, #0x0                   	// #0
   24ab4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24ab8:	mov	w2, #0x5                   	// #5
   24abc:	mov	w1, #0x5                   	// #5
   24ac0:	ldr	w0, [sp, #52]
   24ac4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24ac8:	str	w0, [sp, #3772]
   24acc:	ldr	x3, [sp, #24]
   24ad0:	ldr	x2, [sp, #32]
   24ad4:	ldr	w1, [sp, #3772]
   24ad8:	ldr	x0, [sp, #40]
   24adc:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   24ae0:	mov	w1, w0
   24ae4:	add	x0, sp, #0x3c
   24ae8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24aec:	and	w0, w0, #0xff
   24af0:	eor	w0, w0, #0x1
   24af4:	and	w0, w0, #0xff
   24af8:	cmp	w0, #0x0
   24afc:	b.eq	24b08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1fb98>  // b.none
   24b00:	mov	w0, #0x0                   	// #0
   24b04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24b08:	mov	w2, #0x5                   	// #5
   24b0c:	mov	w1, #0x10                  	// #16
   24b10:	ldr	w0, [sp, #52]
   24b14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24b18:	str	w0, [sp, #3772]
   24b1c:	ldr	x3, [sp, #24]
   24b20:	ldr	x2, [sp, #32]
   24b24:	ldr	w1, [sp, #3772]
   24b28:	ldr	x0, [sp, #40]
   24b2c:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   24b30:	mov	w1, w0
   24b34:	add	x0, sp, #0x3c
   24b38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24b3c:	and	w0, w0, #0xff
   24b40:	eor	w0, w0, #0x1
   24b44:	and	w0, w0, #0xff
   24b48:	cmp	w0, #0x0
   24b4c:	b.eq	24b58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1fbe8>  // b.none
   24b50:	mov	w0, #0x0                   	// #0
   24b54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24b58:	ldr	w0, [sp, #60]
   24b5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24b60:	mov	w2, #0x5                   	// #5
   24b64:	mov	w1, #0x0                   	// #0
   24b68:	ldr	w0, [sp, #52]
   24b6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24b70:	str	w0, [sp, #3772]
   24b74:	ldr	x3, [sp, #24]
   24b78:	ldr	x2, [sp, #32]
   24b7c:	ldr	w1, [sp, #3772]
   24b80:	ldr	x0, [sp, #40]
   24b84:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   24b88:	mov	w1, w0
   24b8c:	add	x0, sp, #0x3c
   24b90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24b94:	and	w0, w0, #0xff
   24b98:	eor	w0, w0, #0x1
   24b9c:	and	w0, w0, #0xff
   24ba0:	cmp	w0, #0x0
   24ba4:	b.eq	24bb0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1fc40>  // b.none
   24ba8:	mov	w0, #0x0                   	// #0
   24bac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24bb0:	mov	w2, #0x5                   	// #5
   24bb4:	mov	w1, #0x5                   	// #5
   24bb8:	ldr	w0, [sp, #52]
   24bbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24bc0:	str	w0, [sp, #3772]
   24bc4:	ldr	x3, [sp, #24]
   24bc8:	ldr	x2, [sp, #32]
   24bcc:	ldr	w1, [sp, #3772]
   24bd0:	ldr	x0, [sp, #40]
   24bd4:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   24bd8:	mov	w1, w0
   24bdc:	add	x0, sp, #0x3c
   24be0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24be4:	and	w0, w0, #0xff
   24be8:	eor	w0, w0, #0x1
   24bec:	and	w0, w0, #0xff
   24bf0:	cmp	w0, #0x0
   24bf4:	b.eq	24c00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1fc90>  // b.none
   24bf8:	mov	w0, #0x0                   	// #0
   24bfc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24c00:	mov	w2, #0x5                   	// #5
   24c04:	mov	w1, #0x10                  	// #16
   24c08:	ldr	w0, [sp, #52]
   24c0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24c10:	str	w0, [sp, #3772]
   24c14:	ldr	x3, [sp, #24]
   24c18:	ldr	x2, [sp, #32]
   24c1c:	ldr	w1, [sp, #3772]
   24c20:	ldr	x0, [sp, #40]
   24c24:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   24c28:	mov	w1, w0
   24c2c:	add	x0, sp, #0x3c
   24c30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24c34:	and	w0, w0, #0xff
   24c38:	eor	w0, w0, #0x1
   24c3c:	and	w0, w0, #0xff
   24c40:	cmp	w0, #0x0
   24c44:	b.eq	24c50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1fce0>  // b.none
   24c48:	mov	w0, #0x0                   	// #0
   24c4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24c50:	mov	w2, #0x4                   	// #4
   24c54:	mov	w1, #0xc                   	// #12
   24c58:	ldr	w0, [sp, #52]
   24c5c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24c60:	str	w0, [sp, #3772]
   24c64:	ldr	w0, [sp, #3772]
   24c68:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   24c6c:	add	x2, sp, #0xe00
   24c70:	stp	x0, x1, [x2, #-184]
   24c74:	add	x0, sp, #0xd48
   24c78:	mov	x1, x0
   24c7c:	ldr	x0, [sp, #40]
   24c80:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   24c84:	ldr	w0, [sp, #60]
   24c88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24c8c:	mov	w2, #0x5                   	// #5
   24c90:	mov	w1, #0x0                   	// #0
   24c94:	ldr	w0, [sp, #52]
   24c98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24c9c:	str	w0, [sp, #3772]
   24ca0:	ldr	x3, [sp, #24]
   24ca4:	ldr	x2, [sp, #32]
   24ca8:	ldr	w1, [sp, #3772]
   24cac:	ldr	x0, [sp, #40]
   24cb0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   24cb4:	mov	w1, w0
   24cb8:	add	x0, sp, #0x3c
   24cbc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24cc0:	and	w0, w0, #0xff
   24cc4:	eor	w0, w0, #0x1
   24cc8:	and	w0, w0, #0xff
   24ccc:	cmp	w0, #0x0
   24cd0:	b.eq	24cdc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1fd6c>  // b.none
   24cd4:	mov	w0, #0x0                   	// #0
   24cd8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24cdc:	mov	w2, #0x5                   	// #5
   24ce0:	mov	w1, #0x5                   	// #5
   24ce4:	ldr	w0, [sp, #52]
   24ce8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24cec:	str	w0, [sp, #3772]
   24cf0:	ldr	x3, [sp, #24]
   24cf4:	ldr	x2, [sp, #32]
   24cf8:	ldr	w1, [sp, #3772]
   24cfc:	ldr	x0, [sp, #40]
   24d00:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   24d04:	mov	w1, w0
   24d08:	add	x0, sp, #0x3c
   24d0c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24d10:	and	w0, w0, #0xff
   24d14:	eor	w0, w0, #0x1
   24d18:	and	w0, w0, #0xff
   24d1c:	cmp	w0, #0x0
   24d20:	b.eq	24d2c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1fdbc>  // b.none
   24d24:	mov	w0, #0x0                   	// #0
   24d28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24d2c:	mov	w0, #0x20                  	// #32
   24d30:	str	w0, [sp, #3772]
   24d34:	mov	w2, #0x5                   	// #5
   24d38:	mov	w1, #0xa                   	// #10
   24d3c:	ldr	w0, [sp, #52]
   24d40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24d44:	mov	w1, w0
   24d48:	ldr	w0, [sp, #3772]
   24d4c:	orr	w0, w0, w1
   24d50:	str	w0, [sp, #3772]
   24d54:	ldr	x3, [sp, #24]
   24d58:	ldr	x2, [sp, #32]
   24d5c:	ldr	w1, [sp, #3772]
   24d60:	ldr	x0, [sp, #40]
   24d64:	bl	1288 <_ZL26DecodeFixedPointScaleImm32RN4llvm6MCInstEjmPKv>
   24d68:	mov	w1, w0
   24d6c:	add	x0, sp, #0x3c
   24d70:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24d74:	and	w0, w0, #0xff
   24d78:	eor	w0, w0, #0x1
   24d7c:	and	w0, w0, #0xff
   24d80:	cmp	w0, #0x0
   24d84:	b.eq	24d90 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1fe20>  // b.none
   24d88:	mov	w0, #0x0                   	// #0
   24d8c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24d90:	ldr	w0, [sp, #60]
   24d94:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24d98:	mov	w2, #0x5                   	// #5
   24d9c:	mov	w1, #0x0                   	// #0
   24da0:	ldr	w0, [sp, #52]
   24da4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24da8:	str	w0, [sp, #3772]
   24dac:	ldr	x3, [sp, #24]
   24db0:	ldr	x2, [sp, #32]
   24db4:	ldr	w1, [sp, #3772]
   24db8:	ldr	x0, [sp, #40]
   24dbc:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   24dc0:	mov	w1, w0
   24dc4:	add	x0, sp, #0x3c
   24dc8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24dcc:	and	w0, w0, #0xff
   24dd0:	eor	w0, w0, #0x1
   24dd4:	and	w0, w0, #0xff
   24dd8:	cmp	w0, #0x0
   24ddc:	b.eq	24de8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1fe78>  // b.none
   24de0:	mov	w0, #0x0                   	// #0
   24de4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24de8:	mov	w2, #0x5                   	// #5
   24dec:	mov	w1, #0x5                   	// #5
   24df0:	ldr	w0, [sp, #52]
   24df4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24df8:	str	w0, [sp, #3772]
   24dfc:	ldr	x3, [sp, #24]
   24e00:	ldr	x2, [sp, #32]
   24e04:	ldr	w1, [sp, #3772]
   24e08:	ldr	x0, [sp, #40]
   24e0c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   24e10:	mov	w1, w0
   24e14:	add	x0, sp, #0x3c
   24e18:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24e1c:	and	w0, w0, #0xff
   24e20:	eor	w0, w0, #0x1
   24e24:	and	w0, w0, #0xff
   24e28:	cmp	w0, #0x0
   24e2c:	b.eq	24e38 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1fec8>  // b.none
   24e30:	mov	w0, #0x0                   	// #0
   24e34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24e38:	mov	w0, #0x20                  	// #32
   24e3c:	str	w0, [sp, #3772]
   24e40:	mov	w2, #0x5                   	// #5
   24e44:	mov	w1, #0xa                   	// #10
   24e48:	ldr	w0, [sp, #52]
   24e4c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24e50:	mov	w1, w0
   24e54:	ldr	w0, [sp, #3772]
   24e58:	orr	w0, w0, w1
   24e5c:	str	w0, [sp, #3772]
   24e60:	ldr	x3, [sp, #24]
   24e64:	ldr	x2, [sp, #32]
   24e68:	ldr	w1, [sp, #3772]
   24e6c:	ldr	x0, [sp, #40]
   24e70:	bl	1288 <_ZL26DecodeFixedPointScaleImm32RN4llvm6MCInstEjmPKv>
   24e74:	mov	w1, w0
   24e78:	add	x0, sp, #0x3c
   24e7c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24e80:	and	w0, w0, #0xff
   24e84:	eor	w0, w0, #0x1
   24e88:	and	w0, w0, #0xff
   24e8c:	cmp	w0, #0x0
   24e90:	b.eq	24e9c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ff2c>  // b.none
   24e94:	mov	w0, #0x0                   	// #0
   24e98:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24e9c:	ldr	w0, [sp, #60]
   24ea0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24ea4:	mov	w2, #0x5                   	// #5
   24ea8:	mov	w1, #0x0                   	// #0
   24eac:	ldr	w0, [sp, #52]
   24eb0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24eb4:	str	w0, [sp, #3772]
   24eb8:	ldr	x3, [sp, #24]
   24ebc:	ldr	x2, [sp, #32]
   24ec0:	ldr	w1, [sp, #3772]
   24ec4:	ldr	x0, [sp, #40]
   24ec8:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   24ecc:	mov	w1, w0
   24ed0:	add	x0, sp, #0x3c
   24ed4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24ed8:	and	w0, w0, #0xff
   24edc:	eor	w0, w0, #0x1
   24ee0:	and	w0, w0, #0xff
   24ee4:	cmp	w0, #0x0
   24ee8:	b.eq	24ef4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ff84>  // b.none
   24eec:	mov	w0, #0x0                   	// #0
   24ef0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24ef4:	mov	w2, #0x5                   	// #5
   24ef8:	mov	w1, #0x5                   	// #5
   24efc:	ldr	w0, [sp, #52]
   24f00:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24f04:	str	w0, [sp, #3772]
   24f08:	ldr	x3, [sp, #24]
   24f0c:	ldr	x2, [sp, #32]
   24f10:	ldr	w1, [sp, #3772]
   24f14:	ldr	x0, [sp, #40]
   24f18:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   24f1c:	mov	w1, w0
   24f20:	add	x0, sp, #0x3c
   24f24:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24f28:	and	w0, w0, #0xff
   24f2c:	eor	w0, w0, #0x1
   24f30:	and	w0, w0, #0xff
   24f34:	cmp	w0, #0x0
   24f38:	b.eq	24f44 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x1ffd4>  // b.none
   24f3c:	mov	w0, #0x0                   	// #0
   24f40:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24f44:	ldr	w0, [sp, #60]
   24f48:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24f4c:	mov	w2, #0x5                   	// #5
   24f50:	mov	w1, #0x5                   	// #5
   24f54:	ldr	w0, [sp, #52]
   24f58:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24f5c:	str	w0, [sp, #3772]
   24f60:	ldr	x3, [sp, #24]
   24f64:	ldr	x2, [sp, #32]
   24f68:	ldr	w1, [sp, #3772]
   24f6c:	ldr	x0, [sp, #40]
   24f70:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   24f74:	mov	w1, w0
   24f78:	add	x0, sp, #0x3c
   24f7c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24f80:	and	w0, w0, #0xff
   24f84:	eor	w0, w0, #0x1
   24f88:	and	w0, w0, #0xff
   24f8c:	cmp	w0, #0x0
   24f90:	b.eq	24f9c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2002c>  // b.none
   24f94:	mov	w0, #0x0                   	// #0
   24f98:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24f9c:	mov	w2, #0x5                   	// #5
   24fa0:	mov	w1, #0x10                  	// #16
   24fa4:	ldr	w0, [sp, #52]
   24fa8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   24fac:	str	w0, [sp, #3772]
   24fb0:	ldr	x3, [sp, #24]
   24fb4:	ldr	x2, [sp, #32]
   24fb8:	ldr	w1, [sp, #3772]
   24fbc:	ldr	x0, [sp, #40]
   24fc0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   24fc4:	mov	w1, w0
   24fc8:	add	x0, sp, #0x3c
   24fcc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   24fd0:	and	w0, w0, #0xff
   24fd4:	eor	w0, w0, #0x1
   24fd8:	and	w0, w0, #0xff
   24fdc:	cmp	w0, #0x0
   24fe0:	b.eq	24fec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2007c>  // b.none
   24fe4:	mov	w0, #0x0                   	// #0
   24fe8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24fec:	ldr	w0, [sp, #60]
   24ff0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   24ff4:	mov	w2, #0x5                   	// #5
   24ff8:	mov	w1, #0x5                   	// #5
   24ffc:	ldr	w0, [sp, #52]
   25000:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25004:	str	w0, [sp, #3772]
   25008:	ldr	x3, [sp, #24]
   2500c:	ldr	x2, [sp, #32]
   25010:	ldr	w1, [sp, #3772]
   25014:	ldr	x0, [sp, #40]
   25018:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2501c:	mov	w1, w0
   25020:	add	x0, sp, #0x3c
   25024:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25028:	and	w0, w0, #0xff
   2502c:	eor	w0, w0, #0x1
   25030:	and	w0, w0, #0xff
   25034:	cmp	w0, #0x0
   25038:	b.eq	25044 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x200d4>  // b.none
   2503c:	mov	w0, #0x0                   	// #0
   25040:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25044:	ldr	w0, [sp, #60]
   25048:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2504c:	mov	w2, #0x5                   	// #5
   25050:	mov	w1, #0x0                   	// #0
   25054:	ldr	w0, [sp, #52]
   25058:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2505c:	str	w0, [sp, #3772]
   25060:	ldr	x3, [sp, #24]
   25064:	ldr	x2, [sp, #32]
   25068:	ldr	w1, [sp, #3772]
   2506c:	ldr	x0, [sp, #40]
   25070:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   25074:	mov	w1, w0
   25078:	add	x0, sp, #0x3c
   2507c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25080:	and	w0, w0, #0xff
   25084:	eor	w0, w0, #0x1
   25088:	and	w0, w0, #0xff
   2508c:	cmp	w0, #0x0
   25090:	b.eq	2509c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2012c>  // b.none
   25094:	mov	w0, #0x0                   	// #0
   25098:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2509c:	mov	w2, #0x8                   	// #8
   250a0:	mov	w1, #0xd                   	// #13
   250a4:	ldr	w0, [sp, #52]
   250a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   250ac:	str	w0, [sp, #3772]
   250b0:	ldr	w0, [sp, #3772]
   250b4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   250b8:	add	x2, sp, #0xe00
   250bc:	stp	x0, x1, [x2, #-168]
   250c0:	add	x0, sp, #0xd58
   250c4:	mov	x1, x0
   250c8:	ldr	x0, [sp, #40]
   250cc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   250d0:	ldr	w0, [sp, #60]
   250d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   250d8:	mov	w2, #0x5                   	// #5
   250dc:	mov	w1, #0x5                   	// #5
   250e0:	ldr	w0, [sp, #52]
   250e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   250e8:	str	w0, [sp, #3772]
   250ec:	ldr	x3, [sp, #24]
   250f0:	ldr	x2, [sp, #32]
   250f4:	ldr	w1, [sp, #3772]
   250f8:	ldr	x0, [sp, #40]
   250fc:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   25100:	mov	w1, w0
   25104:	add	x0, sp, #0x3c
   25108:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2510c:	and	w0, w0, #0xff
   25110:	eor	w0, w0, #0x1
   25114:	and	w0, w0, #0xff
   25118:	cmp	w0, #0x0
   2511c:	b.eq	25128 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x201b8>  // b.none
   25120:	mov	w0, #0x0                   	// #0
   25124:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25128:	mov	w2, #0x5                   	// #5
   2512c:	mov	w1, #0x10                  	// #16
   25130:	ldr	w0, [sp, #52]
   25134:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25138:	str	w0, [sp, #3772]
   2513c:	ldr	x3, [sp, #24]
   25140:	ldr	x2, [sp, #32]
   25144:	ldr	w1, [sp, #3772]
   25148:	ldr	x0, [sp, #40]
   2514c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   25150:	mov	w1, w0
   25154:	add	x0, sp, #0x3c
   25158:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2515c:	and	w0, w0, #0xff
   25160:	eor	w0, w0, #0x1
   25164:	and	w0, w0, #0xff
   25168:	cmp	w0, #0x0
   2516c:	b.eq	25178 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20208>  // b.none
   25170:	mov	w0, #0x0                   	// #0
   25174:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25178:	mov	w2, #0x4                   	// #4
   2517c:	mov	w1, #0x0                   	// #0
   25180:	ldr	w0, [sp, #52]
   25184:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25188:	str	w0, [sp, #3772]
   2518c:	ldr	w0, [sp, #3772]
   25190:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   25194:	add	x2, sp, #0xe00
   25198:	stp	x0, x1, [x2, #-152]
   2519c:	add	x0, sp, #0xd68
   251a0:	mov	x1, x0
   251a4:	ldr	x0, [sp, #40]
   251a8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   251ac:	mov	w2, #0x4                   	// #4
   251b0:	mov	w1, #0xc                   	// #12
   251b4:	ldr	w0, [sp, #52]
   251b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   251bc:	str	w0, [sp, #3772]
   251c0:	ldr	w0, [sp, #3772]
   251c4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   251c8:	add	x2, sp, #0xe00
   251cc:	stp	x0, x1, [x2, #-136]
   251d0:	add	x0, sp, #0xd78
   251d4:	mov	x1, x0
   251d8:	ldr	x0, [sp, #40]
   251dc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   251e0:	ldr	w0, [sp, #60]
   251e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   251e8:	mov	w2, #0x5                   	// #5
   251ec:	mov	w1, #0x0                   	// #0
   251f0:	ldr	w0, [sp, #52]
   251f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   251f8:	str	w0, [sp, #3772]
   251fc:	ldr	x3, [sp, #24]
   25200:	ldr	x2, [sp, #32]
   25204:	ldr	w1, [sp, #3772]
   25208:	ldr	x0, [sp, #40]
   2520c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   25210:	mov	w1, w0
   25214:	add	x0, sp, #0x3c
   25218:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2521c:	and	w0, w0, #0xff
   25220:	eor	w0, w0, #0x1
   25224:	and	w0, w0, #0xff
   25228:	cmp	w0, #0x0
   2522c:	b.eq	25238 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x202c8>  // b.none
   25230:	mov	w0, #0x0                   	// #0
   25234:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25238:	mov	w2, #0x5                   	// #5
   2523c:	mov	w1, #0x5                   	// #5
   25240:	ldr	w0, [sp, #52]
   25244:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25248:	str	w0, [sp, #3772]
   2524c:	ldr	x3, [sp, #24]
   25250:	ldr	x2, [sp, #32]
   25254:	ldr	w1, [sp, #3772]
   25258:	ldr	x0, [sp, #40]
   2525c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   25260:	mov	w1, w0
   25264:	add	x0, sp, #0x3c
   25268:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2526c:	and	w0, w0, #0xff
   25270:	eor	w0, w0, #0x1
   25274:	and	w0, w0, #0xff
   25278:	cmp	w0, #0x0
   2527c:	b.eq	25288 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20318>  // b.none
   25280:	mov	w0, #0x0                   	// #0
   25284:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25288:	mov	w2, #0x5                   	// #5
   2528c:	mov	w1, #0x10                  	// #16
   25290:	ldr	w0, [sp, #52]
   25294:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25298:	str	w0, [sp, #3772]
   2529c:	ldr	x3, [sp, #24]
   252a0:	ldr	x2, [sp, #32]
   252a4:	ldr	w1, [sp, #3772]
   252a8:	ldr	x0, [sp, #40]
   252ac:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   252b0:	mov	w1, w0
   252b4:	add	x0, sp, #0x3c
   252b8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   252bc:	and	w0, w0, #0xff
   252c0:	eor	w0, w0, #0x1
   252c4:	and	w0, w0, #0xff
   252c8:	cmp	w0, #0x0
   252cc:	b.eq	252d8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20368>  // b.none
   252d0:	mov	w0, #0x0                   	// #0
   252d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   252d8:	mov	w2, #0x4                   	// #4
   252dc:	mov	w1, #0xc                   	// #12
   252e0:	ldr	w0, [sp, #52]
   252e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   252e8:	str	w0, [sp, #3772]
   252ec:	ldr	w0, [sp, #3772]
   252f0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   252f4:	add	x2, sp, #0xe00
   252f8:	stp	x0, x1, [x2, #-120]
   252fc:	add	x0, sp, #0xd88
   25300:	mov	x1, x0
   25304:	ldr	x0, [sp, #40]
   25308:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2530c:	ldr	w0, [sp, #60]
   25310:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25314:	mov	w2, #0x5                   	// #5
   25318:	mov	w1, #0x0                   	// #0
   2531c:	ldr	w0, [sp, #52]
   25320:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25324:	str	w0, [sp, #3772]
   25328:	ldr	x3, [sp, #24]
   2532c:	ldr	x2, [sp, #32]
   25330:	ldr	w1, [sp, #3772]
   25334:	ldr	x0, [sp, #40]
   25338:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   2533c:	mov	w1, w0
   25340:	add	x0, sp, #0x3c
   25344:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25348:	and	w0, w0, #0xff
   2534c:	eor	w0, w0, #0x1
   25350:	and	w0, w0, #0xff
   25354:	cmp	w0, #0x0
   25358:	b.eq	25364 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x203f4>  // b.none
   2535c:	mov	w0, #0x0                   	// #0
   25360:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25364:	mov	w2, #0x5                   	// #5
   25368:	mov	w1, #0x5                   	// #5
   2536c:	ldr	w0, [sp, #52]
   25370:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25374:	str	w0, [sp, #3772]
   25378:	ldr	x3, [sp, #24]
   2537c:	ldr	x2, [sp, #32]
   25380:	ldr	w1, [sp, #3772]
   25384:	ldr	x0, [sp, #40]
   25388:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2538c:	mov	w1, w0
   25390:	add	x0, sp, #0x3c
   25394:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25398:	and	w0, w0, #0xff
   2539c:	eor	w0, w0, #0x1
   253a0:	and	w0, w0, #0xff
   253a4:	cmp	w0, #0x0
   253a8:	b.eq	253b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20444>  // b.none
   253ac:	mov	w0, #0x0                   	// #0
   253b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   253b4:	mov	w0, #0x20                  	// #32
   253b8:	str	w0, [sp, #3772]
   253bc:	mov	w2, #0x5                   	// #5
   253c0:	mov	w1, #0xa                   	// #10
   253c4:	ldr	w0, [sp, #52]
   253c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   253cc:	mov	w1, w0
   253d0:	ldr	w0, [sp, #3772]
   253d4:	orr	w0, w0, w1
   253d8:	str	w0, [sp, #3772]
   253dc:	ldr	x3, [sp, #24]
   253e0:	ldr	x2, [sp, #32]
   253e4:	ldr	w1, [sp, #3772]
   253e8:	ldr	x0, [sp, #40]
   253ec:	bl	1288 <_ZL26DecodeFixedPointScaleImm32RN4llvm6MCInstEjmPKv>
   253f0:	mov	w1, w0
   253f4:	add	x0, sp, #0x3c
   253f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   253fc:	and	w0, w0, #0xff
   25400:	eor	w0, w0, #0x1
   25404:	and	w0, w0, #0xff
   25408:	cmp	w0, #0x0
   2540c:	b.eq	25418 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x204a8>  // b.none
   25410:	mov	w0, #0x0                   	// #0
   25414:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25418:	ldr	w0, [sp, #60]
   2541c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25420:	mov	w2, #0x5                   	// #5
   25424:	mov	w1, #0x0                   	// #0
   25428:	ldr	w0, [sp, #52]
   2542c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25430:	str	w0, [sp, #3772]
   25434:	ldr	x3, [sp, #24]
   25438:	ldr	x2, [sp, #32]
   2543c:	ldr	w1, [sp, #3772]
   25440:	ldr	x0, [sp, #40]
   25444:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   25448:	mov	w1, w0
   2544c:	add	x0, sp, #0x3c
   25450:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25454:	and	w0, w0, #0xff
   25458:	eor	w0, w0, #0x1
   2545c:	and	w0, w0, #0xff
   25460:	cmp	w0, #0x0
   25464:	b.eq	25470 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20500>  // b.none
   25468:	mov	w0, #0x0                   	// #0
   2546c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25470:	mov	w2, #0x5                   	// #5
   25474:	mov	w1, #0x5                   	// #5
   25478:	ldr	w0, [sp, #52]
   2547c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25480:	str	w0, [sp, #3772]
   25484:	ldr	x3, [sp, #24]
   25488:	ldr	x2, [sp, #32]
   2548c:	ldr	w1, [sp, #3772]
   25490:	ldr	x0, [sp, #40]
   25494:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   25498:	mov	w1, w0
   2549c:	add	x0, sp, #0x3c
   254a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   254a4:	and	w0, w0, #0xff
   254a8:	eor	w0, w0, #0x1
   254ac:	and	w0, w0, #0xff
   254b0:	cmp	w0, #0x0
   254b4:	b.eq	254c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20550>  // b.none
   254b8:	mov	w0, #0x0                   	// #0
   254bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   254c0:	mov	w0, #0x20                  	// #32
   254c4:	str	w0, [sp, #3772]
   254c8:	mov	w2, #0x5                   	// #5
   254cc:	mov	w1, #0xa                   	// #10
   254d0:	ldr	w0, [sp, #52]
   254d4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   254d8:	mov	w1, w0
   254dc:	ldr	w0, [sp, #3772]
   254e0:	orr	w0, w0, w1
   254e4:	str	w0, [sp, #3772]
   254e8:	ldr	x3, [sp, #24]
   254ec:	ldr	x2, [sp, #32]
   254f0:	ldr	w1, [sp, #3772]
   254f4:	ldr	x0, [sp, #40]
   254f8:	bl	1288 <_ZL26DecodeFixedPointScaleImm32RN4llvm6MCInstEjmPKv>
   254fc:	mov	w1, w0
   25500:	add	x0, sp, #0x3c
   25504:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25508:	and	w0, w0, #0xff
   2550c:	eor	w0, w0, #0x1
   25510:	and	w0, w0, #0xff
   25514:	cmp	w0, #0x0
   25518:	b.eq	25524 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x205b4>  // b.none
   2551c:	mov	w0, #0x0                   	// #0
   25520:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25524:	ldr	w0, [sp, #60]
   25528:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2552c:	mov	w2, #0x5                   	// #5
   25530:	mov	w1, #0x0                   	// #0
   25534:	ldr	w0, [sp, #52]
   25538:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2553c:	str	w0, [sp, #3772]
   25540:	ldr	x3, [sp, #24]
   25544:	ldr	x2, [sp, #32]
   25548:	ldr	w1, [sp, #3772]
   2554c:	ldr	x0, [sp, #40]
   25550:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   25554:	mov	w1, w0
   25558:	add	x0, sp, #0x3c
   2555c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25560:	and	w0, w0, #0xff
   25564:	eor	w0, w0, #0x1
   25568:	and	w0, w0, #0xff
   2556c:	cmp	w0, #0x0
   25570:	b.eq	2557c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2060c>  // b.none
   25574:	mov	w0, #0x0                   	// #0
   25578:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2557c:	mov	w2, #0x5                   	// #5
   25580:	mov	w1, #0x5                   	// #5
   25584:	ldr	w0, [sp, #52]
   25588:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2558c:	str	w0, [sp, #3772]
   25590:	ldr	x3, [sp, #24]
   25594:	ldr	x2, [sp, #32]
   25598:	ldr	w1, [sp, #3772]
   2559c:	ldr	x0, [sp, #40]
   255a0:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   255a4:	mov	w1, w0
   255a8:	add	x0, sp, #0x3c
   255ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   255b0:	and	w0, w0, #0xff
   255b4:	eor	w0, w0, #0x1
   255b8:	and	w0, w0, #0xff
   255bc:	cmp	w0, #0x0
   255c0:	b.eq	255cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2065c>  // b.none
   255c4:	mov	w0, #0x0                   	// #0
   255c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   255cc:	ldr	w0, [sp, #60]
   255d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   255d4:	mov	w2, #0x5                   	// #5
   255d8:	mov	w1, #0x0                   	// #0
   255dc:	ldr	w0, [sp, #52]
   255e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   255e4:	str	w0, [sp, #3772]
   255e8:	ldr	x3, [sp, #24]
   255ec:	ldr	x2, [sp, #32]
   255f0:	ldr	w1, [sp, #3772]
   255f4:	ldr	x0, [sp, #40]
   255f8:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   255fc:	mov	w1, w0
   25600:	add	x0, sp, #0x3c
   25604:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25608:	and	w0, w0, #0xff
   2560c:	eor	w0, w0, #0x1
   25610:	and	w0, w0, #0xff
   25614:	cmp	w0, #0x0
   25618:	b.eq	25624 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x206b4>  // b.none
   2561c:	mov	w0, #0x0                   	// #0
   25620:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25624:	mov	w2, #0x5                   	// #5
   25628:	mov	w1, #0x5                   	// #5
   2562c:	ldr	w0, [sp, #52]
   25630:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25634:	str	w0, [sp, #3772]
   25638:	ldr	x3, [sp, #24]
   2563c:	ldr	x2, [sp, #32]
   25640:	ldr	w1, [sp, #3772]
   25644:	ldr	x0, [sp, #40]
   25648:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2564c:	mov	w1, w0
   25650:	add	x0, sp, #0x3c
   25654:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25658:	and	w0, w0, #0xff
   2565c:	eor	w0, w0, #0x1
   25660:	and	w0, w0, #0xff
   25664:	cmp	w0, #0x0
   25668:	b.eq	25674 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20704>  // b.none
   2566c:	mov	w0, #0x0                   	// #0
   25670:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25674:	ldr	w0, [sp, #60]
   25678:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2567c:	mov	w2, #0x5                   	// #5
   25680:	mov	w1, #0x5                   	// #5
   25684:	ldr	w0, [sp, #52]
   25688:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2568c:	str	w0, [sp, #3772]
   25690:	ldr	x3, [sp, #24]
   25694:	ldr	x2, [sp, #32]
   25698:	ldr	w1, [sp, #3772]
   2569c:	ldr	x0, [sp, #40]
   256a0:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   256a4:	mov	w1, w0
   256a8:	add	x0, sp, #0x3c
   256ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   256b0:	and	w0, w0, #0xff
   256b4:	eor	w0, w0, #0x1
   256b8:	and	w0, w0, #0xff
   256bc:	cmp	w0, #0x0
   256c0:	b.eq	256cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2075c>  // b.none
   256c4:	mov	w0, #0x0                   	// #0
   256c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   256cc:	mov	w2, #0x5                   	// #5
   256d0:	mov	w1, #0x10                  	// #16
   256d4:	ldr	w0, [sp, #52]
   256d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   256dc:	str	w0, [sp, #3772]
   256e0:	ldr	x3, [sp, #24]
   256e4:	ldr	x2, [sp, #32]
   256e8:	ldr	w1, [sp, #3772]
   256ec:	ldr	x0, [sp, #40]
   256f0:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   256f4:	mov	w1, w0
   256f8:	add	x0, sp, #0x3c
   256fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25700:	and	w0, w0, #0xff
   25704:	eor	w0, w0, #0x1
   25708:	and	w0, w0, #0xff
   2570c:	cmp	w0, #0x0
   25710:	b.eq	2571c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x207ac>  // b.none
   25714:	mov	w0, #0x0                   	// #0
   25718:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2571c:	ldr	w0, [sp, #60]
   25720:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25724:	mov	w2, #0x5                   	// #5
   25728:	mov	w1, #0x5                   	// #5
   2572c:	ldr	w0, [sp, #52]
   25730:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25734:	str	w0, [sp, #3772]
   25738:	ldr	x3, [sp, #24]
   2573c:	ldr	x2, [sp, #32]
   25740:	ldr	w1, [sp, #3772]
   25744:	ldr	x0, [sp, #40]
   25748:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   2574c:	mov	w1, w0
   25750:	add	x0, sp, #0x3c
   25754:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25758:	and	w0, w0, #0xff
   2575c:	eor	w0, w0, #0x1
   25760:	and	w0, w0, #0xff
   25764:	cmp	w0, #0x0
   25768:	b.eq	25774 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20804>  // b.none
   2576c:	mov	w0, #0x0                   	// #0
   25770:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25774:	ldr	w0, [sp, #60]
   25778:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2577c:	mov	w2, #0x5                   	// #5
   25780:	mov	w1, #0x0                   	// #0
   25784:	ldr	w0, [sp, #52]
   25788:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2578c:	str	w0, [sp, #3772]
   25790:	ldr	x3, [sp, #24]
   25794:	ldr	x2, [sp, #32]
   25798:	ldr	w1, [sp, #3772]
   2579c:	ldr	x0, [sp, #40]
   257a0:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   257a4:	mov	w1, w0
   257a8:	add	x0, sp, #0x3c
   257ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   257b0:	and	w0, w0, #0xff
   257b4:	eor	w0, w0, #0x1
   257b8:	and	w0, w0, #0xff
   257bc:	cmp	w0, #0x0
   257c0:	b.eq	257cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2085c>  // b.none
   257c4:	mov	w0, #0x0                   	// #0
   257c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   257cc:	mov	w2, #0x5                   	// #5
   257d0:	mov	w1, #0x5                   	// #5
   257d4:	ldr	w0, [sp, #52]
   257d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   257dc:	str	w0, [sp, #3772]
   257e0:	ldr	x3, [sp, #24]
   257e4:	ldr	x2, [sp, #32]
   257e8:	ldr	w1, [sp, #3772]
   257ec:	ldr	x0, [sp, #40]
   257f0:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   257f4:	mov	w1, w0
   257f8:	add	x0, sp, #0x3c
   257fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25800:	and	w0, w0, #0xff
   25804:	eor	w0, w0, #0x1
   25808:	and	w0, w0, #0xff
   2580c:	cmp	w0, #0x0
   25810:	b.eq	2581c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x208ac>  // b.none
   25814:	mov	w0, #0x0                   	// #0
   25818:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2581c:	ldr	w0, [sp, #60]
   25820:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25824:	mov	w2, #0x5                   	// #5
   25828:	mov	w1, #0x0                   	// #0
   2582c:	ldr	w0, [sp, #52]
   25830:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25834:	str	w0, [sp, #3772]
   25838:	ldr	x3, [sp, #24]
   2583c:	ldr	x2, [sp, #32]
   25840:	ldr	w1, [sp, #3772]
   25844:	ldr	x0, [sp, #40]
   25848:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2584c:	mov	w1, w0
   25850:	add	x0, sp, #0x3c
   25854:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25858:	and	w0, w0, #0xff
   2585c:	eor	w0, w0, #0x1
   25860:	and	w0, w0, #0xff
   25864:	cmp	w0, #0x0
   25868:	b.eq	25874 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20904>  // b.none
   2586c:	mov	w0, #0x0                   	// #0
   25870:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25874:	mov	w2, #0x5                   	// #5
   25878:	mov	w1, #0x5                   	// #5
   2587c:	ldr	w0, [sp, #52]
   25880:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25884:	str	w0, [sp, #3772]
   25888:	ldr	x3, [sp, #24]
   2588c:	ldr	x2, [sp, #32]
   25890:	ldr	w1, [sp, #3772]
   25894:	ldr	x0, [sp, #40]
   25898:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   2589c:	mov	w1, w0
   258a0:	add	x0, sp, #0x3c
   258a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   258a8:	and	w0, w0, #0xff
   258ac:	eor	w0, w0, #0x1
   258b0:	and	w0, w0, #0xff
   258b4:	cmp	w0, #0x0
   258b8:	b.eq	258c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20954>  // b.none
   258bc:	mov	w0, #0x0                   	// #0
   258c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   258c4:	ldr	w0, [sp, #60]
   258c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   258cc:	mov	w2, #0x5                   	// #5
   258d0:	mov	w1, #0x0                   	// #0
   258d4:	ldr	w0, [sp, #52]
   258d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   258dc:	str	w0, [sp, #3772]
   258e0:	ldr	x3, [sp, #24]
   258e4:	ldr	x2, [sp, #32]
   258e8:	ldr	w1, [sp, #3772]
   258ec:	ldr	x0, [sp, #40]
   258f0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   258f4:	mov	w1, w0
   258f8:	add	x0, sp, #0x3c
   258fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25900:	and	w0, w0, #0xff
   25904:	eor	w0, w0, #0x1
   25908:	and	w0, w0, #0xff
   2590c:	cmp	w0, #0x0
   25910:	b.eq	2591c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x209ac>  // b.none
   25914:	mov	w0, #0x0                   	// #0
   25918:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2591c:	mov	w2, #0x5                   	// #5
   25920:	mov	w1, #0x5                   	// #5
   25924:	ldr	w0, [sp, #52]
   25928:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2592c:	str	w0, [sp, #3772]
   25930:	ldr	x3, [sp, #24]
   25934:	ldr	x2, [sp, #32]
   25938:	ldr	w1, [sp, #3772]
   2593c:	ldr	x0, [sp, #40]
   25940:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   25944:	mov	w1, w0
   25948:	add	x0, sp, #0x3c
   2594c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25950:	and	w0, w0, #0xff
   25954:	eor	w0, w0, #0x1
   25958:	and	w0, w0, #0xff
   2595c:	cmp	w0, #0x0
   25960:	b.eq	2596c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x209fc>  // b.none
   25964:	mov	w0, #0x0                   	// #0
   25968:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2596c:	ldr	w0, [sp, #60]
   25970:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25974:	mov	w2, #0x5                   	// #5
   25978:	mov	w1, #0x0                   	// #0
   2597c:	ldr	w0, [sp, #52]
   25980:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25984:	str	w0, [sp, #3772]
   25988:	ldr	x3, [sp, #24]
   2598c:	ldr	x2, [sp, #32]
   25990:	ldr	w1, [sp, #3772]
   25994:	ldr	x0, [sp, #40]
   25998:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   2599c:	mov	w1, w0
   259a0:	add	x0, sp, #0x3c
   259a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   259a8:	and	w0, w0, #0xff
   259ac:	eor	w0, w0, #0x1
   259b0:	and	w0, w0, #0xff
   259b4:	cmp	w0, #0x0
   259b8:	b.eq	259c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20a54>  // b.none
   259bc:	mov	w0, #0x0                   	// #0
   259c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   259c4:	mov	w2, #0x8                   	// #8
   259c8:	mov	w1, #0xd                   	// #13
   259cc:	ldr	w0, [sp, #52]
   259d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   259d4:	str	w0, [sp, #3772]
   259d8:	ldr	w0, [sp, #3772]
   259dc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   259e0:	add	x2, sp, #0xe00
   259e4:	stp	x0, x1, [x2, #-104]
   259e8:	add	x0, sp, #0xd98
   259ec:	mov	x1, x0
   259f0:	ldr	x0, [sp, #40]
   259f4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   259f8:	ldr	w0, [sp, #60]
   259fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25a00:	mov	w2, #0x5                   	// #5
   25a04:	mov	w1, #0x5                   	// #5
   25a08:	ldr	w0, [sp, #52]
   25a0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25a10:	str	w0, [sp, #3772]
   25a14:	ldr	x3, [sp, #24]
   25a18:	ldr	x2, [sp, #32]
   25a1c:	ldr	w1, [sp, #3772]
   25a20:	ldr	x0, [sp, #40]
   25a24:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   25a28:	mov	w1, w0
   25a2c:	add	x0, sp, #0x3c
   25a30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25a34:	and	w0, w0, #0xff
   25a38:	eor	w0, w0, #0x1
   25a3c:	and	w0, w0, #0xff
   25a40:	cmp	w0, #0x0
   25a44:	b.eq	25a50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20ae0>  // b.none
   25a48:	mov	w0, #0x0                   	// #0
   25a4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25a50:	mov	w2, #0x5                   	// #5
   25a54:	mov	w1, #0x10                  	// #16
   25a58:	ldr	w0, [sp, #52]
   25a5c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25a60:	str	w0, [sp, #3772]
   25a64:	ldr	x3, [sp, #24]
   25a68:	ldr	x2, [sp, #32]
   25a6c:	ldr	w1, [sp, #3772]
   25a70:	ldr	x0, [sp, #40]
   25a74:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   25a78:	mov	w1, w0
   25a7c:	add	x0, sp, #0x3c
   25a80:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25a84:	and	w0, w0, #0xff
   25a88:	eor	w0, w0, #0x1
   25a8c:	and	w0, w0, #0xff
   25a90:	cmp	w0, #0x0
   25a94:	b.eq	25aa0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20b30>  // b.none
   25a98:	mov	w0, #0x0                   	// #0
   25a9c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25aa0:	mov	w2, #0x4                   	// #4
   25aa4:	mov	w1, #0x0                   	// #0
   25aa8:	ldr	w0, [sp, #52]
   25aac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25ab0:	str	w0, [sp, #3772]
   25ab4:	ldr	w0, [sp, #3772]
   25ab8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   25abc:	add	x2, sp, #0xe00
   25ac0:	stp	x0, x1, [x2, #-88]
   25ac4:	add	x0, sp, #0xda8
   25ac8:	mov	x1, x0
   25acc:	ldr	x0, [sp, #40]
   25ad0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   25ad4:	mov	w2, #0x4                   	// #4
   25ad8:	mov	w1, #0xc                   	// #12
   25adc:	ldr	w0, [sp, #52]
   25ae0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25ae4:	str	w0, [sp, #3772]
   25ae8:	ldr	w0, [sp, #3772]
   25aec:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   25af0:	add	x2, sp, #0xe00
   25af4:	stp	x0, x1, [x2, #-72]
   25af8:	add	x0, sp, #0xdb8
   25afc:	mov	x1, x0
   25b00:	ldr	x0, [sp, #40]
   25b04:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   25b08:	ldr	w0, [sp, #60]
   25b0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25b10:	mov	w2, #0x5                   	// #5
   25b14:	mov	w1, #0x0                   	// #0
   25b18:	ldr	w0, [sp, #52]
   25b1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25b20:	str	w0, [sp, #3772]
   25b24:	ldr	x3, [sp, #24]
   25b28:	ldr	x2, [sp, #32]
   25b2c:	ldr	w1, [sp, #3772]
   25b30:	ldr	x0, [sp, #40]
   25b34:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   25b38:	mov	w1, w0
   25b3c:	add	x0, sp, #0x3c
   25b40:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25b44:	and	w0, w0, #0xff
   25b48:	eor	w0, w0, #0x1
   25b4c:	and	w0, w0, #0xff
   25b50:	cmp	w0, #0x0
   25b54:	b.eq	25b60 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20bf0>  // b.none
   25b58:	mov	w0, #0x0                   	// #0
   25b5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25b60:	mov	w2, #0x5                   	// #5
   25b64:	mov	w1, #0x5                   	// #5
   25b68:	ldr	w0, [sp, #52]
   25b6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25b70:	str	w0, [sp, #3772]
   25b74:	ldr	x3, [sp, #24]
   25b78:	ldr	x2, [sp, #32]
   25b7c:	ldr	w1, [sp, #3772]
   25b80:	ldr	x0, [sp, #40]
   25b84:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   25b88:	mov	w1, w0
   25b8c:	add	x0, sp, #0x3c
   25b90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25b94:	and	w0, w0, #0xff
   25b98:	eor	w0, w0, #0x1
   25b9c:	and	w0, w0, #0xff
   25ba0:	cmp	w0, #0x0
   25ba4:	b.eq	25bb0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20c40>  // b.none
   25ba8:	mov	w0, #0x0                   	// #0
   25bac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25bb0:	mov	w2, #0x5                   	// #5
   25bb4:	mov	w1, #0x10                  	// #16
   25bb8:	ldr	w0, [sp, #52]
   25bbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25bc0:	str	w0, [sp, #3772]
   25bc4:	ldr	x3, [sp, #24]
   25bc8:	ldr	x2, [sp, #32]
   25bcc:	ldr	w1, [sp, #3772]
   25bd0:	ldr	x0, [sp, #40]
   25bd4:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   25bd8:	mov	w1, w0
   25bdc:	add	x0, sp, #0x3c
   25be0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25be4:	and	w0, w0, #0xff
   25be8:	eor	w0, w0, #0x1
   25bec:	and	w0, w0, #0xff
   25bf0:	cmp	w0, #0x0
   25bf4:	b.eq	25c00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20c90>  // b.none
   25bf8:	mov	w0, #0x0                   	// #0
   25bfc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25c00:	ldr	w0, [sp, #60]
   25c04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25c08:	mov	w2, #0x5                   	// #5
   25c0c:	mov	w1, #0x0                   	// #0
   25c10:	ldr	w0, [sp, #52]
   25c14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25c18:	str	w0, [sp, #3772]
   25c1c:	ldr	x3, [sp, #24]
   25c20:	ldr	x2, [sp, #32]
   25c24:	ldr	w1, [sp, #3772]
   25c28:	ldr	x0, [sp, #40]
   25c2c:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   25c30:	mov	w1, w0
   25c34:	add	x0, sp, #0x3c
   25c38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25c3c:	and	w0, w0, #0xff
   25c40:	eor	w0, w0, #0x1
   25c44:	and	w0, w0, #0xff
   25c48:	cmp	w0, #0x0
   25c4c:	b.eq	25c58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20ce8>  // b.none
   25c50:	mov	w0, #0x0                   	// #0
   25c54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25c58:	mov	w2, #0x5                   	// #5
   25c5c:	mov	w1, #0x5                   	// #5
   25c60:	ldr	w0, [sp, #52]
   25c64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25c68:	str	w0, [sp, #3772]
   25c6c:	ldr	x3, [sp, #24]
   25c70:	ldr	x2, [sp, #32]
   25c74:	ldr	w1, [sp, #3772]
   25c78:	ldr	x0, [sp, #40]
   25c7c:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   25c80:	mov	w1, w0
   25c84:	add	x0, sp, #0x3c
   25c88:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25c8c:	and	w0, w0, #0xff
   25c90:	eor	w0, w0, #0x1
   25c94:	and	w0, w0, #0xff
   25c98:	cmp	w0, #0x0
   25c9c:	b.eq	25ca8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20d38>  // b.none
   25ca0:	mov	w0, #0x0                   	// #0
   25ca4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25ca8:	mov	w2, #0x5                   	// #5
   25cac:	mov	w1, #0x10                  	// #16
   25cb0:	ldr	w0, [sp, #52]
   25cb4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25cb8:	str	w0, [sp, #3772]
   25cbc:	ldr	x3, [sp, #24]
   25cc0:	ldr	x2, [sp, #32]
   25cc4:	ldr	w1, [sp, #3772]
   25cc8:	ldr	x0, [sp, #40]
   25ccc:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   25cd0:	mov	w1, w0
   25cd4:	add	x0, sp, #0x3c
   25cd8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25cdc:	and	w0, w0, #0xff
   25ce0:	eor	w0, w0, #0x1
   25ce4:	and	w0, w0, #0xff
   25ce8:	cmp	w0, #0x0
   25cec:	b.eq	25cf8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20d88>  // b.none
   25cf0:	mov	w0, #0x0                   	// #0
   25cf4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25cf8:	mov	w2, #0x4                   	// #4
   25cfc:	mov	w1, #0xc                   	// #12
   25d00:	ldr	w0, [sp, #52]
   25d04:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25d08:	str	w0, [sp, #3772]
   25d0c:	ldr	w0, [sp, #3772]
   25d10:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   25d14:	add	x2, sp, #0xe00
   25d18:	stp	x0, x1, [x2, #-56]
   25d1c:	add	x0, sp, #0xdc8
   25d20:	mov	x1, x0
   25d24:	ldr	x0, [sp, #40]
   25d28:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   25d2c:	ldr	w0, [sp, #60]
   25d30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25d34:	mov	w2, #0x5                   	// #5
   25d38:	mov	w1, #0x0                   	// #0
   25d3c:	ldr	w0, [sp, #52]
   25d40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25d44:	str	w0, [sp, #3772]
   25d48:	ldr	x3, [sp, #24]
   25d4c:	ldr	x2, [sp, #32]
   25d50:	ldr	w1, [sp, #3772]
   25d54:	ldr	x0, [sp, #40]
   25d58:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   25d5c:	mov	w1, w0
   25d60:	add	x0, sp, #0x3c
   25d64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25d68:	and	w0, w0, #0xff
   25d6c:	eor	w0, w0, #0x1
   25d70:	and	w0, w0, #0xff
   25d74:	cmp	w0, #0x0
   25d78:	b.eq	25d84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20e14>  // b.none
   25d7c:	mov	w0, #0x0                   	// #0
   25d80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25d84:	mov	w2, #0x5                   	// #5
   25d88:	mov	w1, #0x5                   	// #5
   25d8c:	ldr	w0, [sp, #52]
   25d90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25d94:	str	w0, [sp, #3772]
   25d98:	ldr	x3, [sp, #24]
   25d9c:	ldr	x2, [sp, #32]
   25da0:	ldr	w1, [sp, #3772]
   25da4:	ldr	x0, [sp, #40]
   25da8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   25dac:	mov	w1, w0
   25db0:	add	x0, sp, #0x3c
   25db4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25db8:	and	w0, w0, #0xff
   25dbc:	eor	w0, w0, #0x1
   25dc0:	and	w0, w0, #0xff
   25dc4:	cmp	w0, #0x0
   25dc8:	b.eq	25dd4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20e64>  // b.none
   25dcc:	mov	w0, #0x0                   	// #0
   25dd0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25dd4:	mov	w2, #0x5                   	// #5
   25dd8:	mov	w1, #0x10                  	// #16
   25ddc:	ldr	w0, [sp, #52]
   25de0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25de4:	str	w0, [sp, #3772]
   25de8:	ldr	x3, [sp, #24]
   25dec:	ldr	x2, [sp, #32]
   25df0:	ldr	w1, [sp, #3772]
   25df4:	ldr	x0, [sp, #40]
   25df8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   25dfc:	mov	w1, w0
   25e00:	add	x0, sp, #0x3c
   25e04:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25e08:	and	w0, w0, #0xff
   25e0c:	eor	w0, w0, #0x1
   25e10:	and	w0, w0, #0xff
   25e14:	cmp	w0, #0x0
   25e18:	b.eq	25e24 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20eb4>  // b.none
   25e1c:	mov	w0, #0x0                   	// #0
   25e20:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25e24:	mov	w2, #0x5                   	// #5
   25e28:	mov	w1, #0xa                   	// #10
   25e2c:	ldr	w0, [sp, #52]
   25e30:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25e34:	str	w0, [sp, #3772]
   25e38:	ldr	x3, [sp, #24]
   25e3c:	ldr	x2, [sp, #32]
   25e40:	ldr	w1, [sp, #3772]
   25e44:	ldr	x0, [sp, #40]
   25e48:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   25e4c:	mov	w1, w0
   25e50:	add	x0, sp, #0x3c
   25e54:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25e58:	and	w0, w0, #0xff
   25e5c:	eor	w0, w0, #0x1
   25e60:	and	w0, w0, #0xff
   25e64:	cmp	w0, #0x0
   25e68:	b.eq	25e74 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20f04>  // b.none
   25e6c:	mov	w0, #0x0                   	// #0
   25e70:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25e74:	ldr	w0, [sp, #60]
   25e78:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25e7c:	mov	w2, #0x5                   	// #5
   25e80:	mov	w1, #0x0                   	// #0
   25e84:	ldr	w0, [sp, #52]
   25e88:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25e8c:	str	w0, [sp, #3772]
   25e90:	ldr	x3, [sp, #24]
   25e94:	ldr	x2, [sp, #32]
   25e98:	ldr	w1, [sp, #3772]
   25e9c:	ldr	x0, [sp, #40]
   25ea0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   25ea4:	mov	w1, w0
   25ea8:	add	x0, sp, #0x3c
   25eac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25eb0:	and	w0, w0, #0xff
   25eb4:	eor	w0, w0, #0x1
   25eb8:	and	w0, w0, #0xff
   25ebc:	cmp	w0, #0x0
   25ec0:	b.eq	25ecc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20f5c>  // b.none
   25ec4:	mov	w0, #0x0                   	// #0
   25ec8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25ecc:	mov	w2, #0x5                   	// #5
   25ed0:	mov	w1, #0x5                   	// #5
   25ed4:	ldr	w0, [sp, #52]
   25ed8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25edc:	str	w0, [sp, #3772]
   25ee0:	ldr	x3, [sp, #24]
   25ee4:	ldr	x2, [sp, #32]
   25ee8:	ldr	w1, [sp, #3772]
   25eec:	ldr	x0, [sp, #40]
   25ef0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   25ef4:	mov	w1, w0
   25ef8:	add	x0, sp, #0x3c
   25efc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25f00:	and	w0, w0, #0xff
   25f04:	eor	w0, w0, #0x1
   25f08:	and	w0, w0, #0xff
   25f0c:	cmp	w0, #0x0
   25f10:	b.eq	25f1c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20fac>  // b.none
   25f14:	mov	w0, #0x0                   	// #0
   25f18:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25f1c:	mov	w2, #0x5                   	// #5
   25f20:	mov	w1, #0x10                  	// #16
   25f24:	ldr	w0, [sp, #52]
   25f28:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25f2c:	str	w0, [sp, #3772]
   25f30:	ldr	x3, [sp, #24]
   25f34:	ldr	x2, [sp, #32]
   25f38:	ldr	w1, [sp, #3772]
   25f3c:	ldr	x0, [sp, #40]
   25f40:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   25f44:	mov	w1, w0
   25f48:	add	x0, sp, #0x3c
   25f4c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25f50:	and	w0, w0, #0xff
   25f54:	eor	w0, w0, #0x1
   25f58:	and	w0, w0, #0xff
   25f5c:	cmp	w0, #0x0
   25f60:	b.eq	25f6c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x20ffc>  // b.none
   25f64:	mov	w0, #0x0                   	// #0
   25f68:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25f6c:	mov	w2, #0x5                   	// #5
   25f70:	mov	w1, #0xa                   	// #10
   25f74:	ldr	w0, [sp, #52]
   25f78:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25f7c:	str	w0, [sp, #3772]
   25f80:	ldr	x3, [sp, #24]
   25f84:	ldr	x2, [sp, #32]
   25f88:	ldr	w1, [sp, #3772]
   25f8c:	ldr	x0, [sp, #40]
   25f90:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   25f94:	mov	w1, w0
   25f98:	add	x0, sp, #0x3c
   25f9c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25fa0:	and	w0, w0, #0xff
   25fa4:	eor	w0, w0, #0x1
   25fa8:	and	w0, w0, #0xff
   25fac:	cmp	w0, #0x0
   25fb0:	b.eq	25fbc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2104c>  // b.none
   25fb4:	mov	w0, #0x0                   	// #0
   25fb8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25fbc:	ldr	w0, [sp, #60]
   25fc0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   25fc4:	mov	w2, #0x5                   	// #5
   25fc8:	mov	w1, #0x0                   	// #0
   25fcc:	ldr	w0, [sp, #52]
   25fd0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   25fd4:	str	w0, [sp, #3772]
   25fd8:	ldr	x3, [sp, #24]
   25fdc:	ldr	x2, [sp, #32]
   25fe0:	ldr	w1, [sp, #3772]
   25fe4:	ldr	x0, [sp, #40]
   25fe8:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   25fec:	mov	w1, w0
   25ff0:	add	x0, sp, #0x3c
   25ff4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   25ff8:	and	w0, w0, #0xff
   25ffc:	eor	w0, w0, #0x1
   26000:	and	w0, w0, #0xff
   26004:	cmp	w0, #0x0
   26008:	b.eq	26014 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x210a4>  // b.none
   2600c:	mov	w0, #0x0                   	// #0
   26010:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26014:	mov	w2, #0x5                   	// #5
   26018:	mov	w1, #0x5                   	// #5
   2601c:	ldr	w0, [sp, #52]
   26020:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26024:	str	w0, [sp, #3772]
   26028:	ldr	x3, [sp, #24]
   2602c:	ldr	x2, [sp, #32]
   26030:	ldr	w1, [sp, #3772]
   26034:	ldr	x0, [sp, #40]
   26038:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   2603c:	mov	w1, w0
   26040:	add	x0, sp, #0x3c
   26044:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26048:	and	w0, w0, #0xff
   2604c:	eor	w0, w0, #0x1
   26050:	and	w0, w0, #0xff
   26054:	cmp	w0, #0x0
   26058:	b.eq	26064 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x210f4>  // b.none
   2605c:	mov	w0, #0x0                   	// #0
   26060:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26064:	mov	w2, #0x5                   	// #5
   26068:	mov	w1, #0x10                  	// #16
   2606c:	ldr	w0, [sp, #52]
   26070:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26074:	str	w0, [sp, #3772]
   26078:	ldr	x3, [sp, #24]
   2607c:	ldr	x2, [sp, #32]
   26080:	ldr	w1, [sp, #3772]
   26084:	ldr	x0, [sp, #40]
   26088:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   2608c:	mov	w1, w0
   26090:	add	x0, sp, #0x3c
   26094:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26098:	and	w0, w0, #0xff
   2609c:	eor	w0, w0, #0x1
   260a0:	and	w0, w0, #0xff
   260a4:	cmp	w0, #0x0
   260a8:	b.eq	260b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21144>  // b.none
   260ac:	mov	w0, #0x0                   	// #0
   260b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   260b4:	mov	w2, #0x5                   	// #5
   260b8:	mov	w1, #0xa                   	// #10
   260bc:	ldr	w0, [sp, #52]
   260c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   260c4:	str	w0, [sp, #3772]
   260c8:	ldr	x3, [sp, #24]
   260cc:	ldr	x2, [sp, #32]
   260d0:	ldr	w1, [sp, #3772]
   260d4:	ldr	x0, [sp, #40]
   260d8:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   260dc:	mov	w1, w0
   260e0:	add	x0, sp, #0x3c
   260e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   260e8:	and	w0, w0, #0xff
   260ec:	eor	w0, w0, #0x1
   260f0:	and	w0, w0, #0xff
   260f4:	cmp	w0, #0x0
   260f8:	b.eq	26104 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21194>  // b.none
   260fc:	mov	w0, #0x0                   	// #0
   26100:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26104:	ldr	w0, [sp, #60]
   26108:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2610c:	mov	w2, #0x5                   	// #5
   26110:	mov	w1, #0x0                   	// #0
   26114:	ldr	w0, [sp, #52]
   26118:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2611c:	str	w0, [sp, #3772]
   26120:	ldr	x3, [sp, #24]
   26124:	ldr	x2, [sp, #32]
   26128:	ldr	w1, [sp, #3772]
   2612c:	ldr	x0, [sp, #40]
   26130:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   26134:	mov	w1, w0
   26138:	add	x0, sp, #0x3c
   2613c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26140:	and	w0, w0, #0xff
   26144:	eor	w0, w0, #0x1
   26148:	and	w0, w0, #0xff
   2614c:	cmp	w0, #0x0
   26150:	b.eq	2615c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x211ec>  // b.none
   26154:	mov	w0, #0x0                   	// #0
   26158:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2615c:	mov	w2, #0x5                   	// #5
   26160:	mov	w1, #0x5                   	// #5
   26164:	ldr	w0, [sp, #52]
   26168:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2616c:	str	w0, [sp, #3772]
   26170:	ldr	x3, [sp, #24]
   26174:	ldr	x2, [sp, #32]
   26178:	ldr	w1, [sp, #3772]
   2617c:	ldr	x0, [sp, #40]
   26180:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   26184:	mov	w1, w0
   26188:	add	x0, sp, #0x3c
   2618c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26190:	and	w0, w0, #0xff
   26194:	eor	w0, w0, #0x1
   26198:	and	w0, w0, #0xff
   2619c:	cmp	w0, #0x0
   261a0:	b.eq	261ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2123c>  // b.none
   261a4:	mov	w0, #0x0                   	// #0
   261a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   261ac:	mov	w2, #0x5                   	// #5
   261b0:	mov	w1, #0x10                  	// #16
   261b4:	ldr	w0, [sp, #52]
   261b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   261bc:	str	w0, [sp, #3772]
   261c0:	ldr	x3, [sp, #24]
   261c4:	ldr	x2, [sp, #32]
   261c8:	ldr	w1, [sp, #3772]
   261cc:	ldr	x0, [sp, #40]
   261d0:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   261d4:	mov	w1, w0
   261d8:	add	x0, sp, #0x3c
   261dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   261e0:	and	w0, w0, #0xff
   261e4:	eor	w0, w0, #0x1
   261e8:	and	w0, w0, #0xff
   261ec:	cmp	w0, #0x0
   261f0:	b.eq	261fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2128c>  // b.none
   261f4:	mov	w0, #0x0                   	// #0
   261f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   261fc:	str	wzr, [sp, #3772]
   26200:	mov	w2, #0x1                   	// #1
   26204:	mov	w1, #0xc                   	// #12
   26208:	ldr	w0, [sp, #52]
   2620c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26210:	mov	w1, w0
   26214:	ldr	w0, [sp, #3772]
   26218:	orr	w0, w0, w1
   2621c:	str	w0, [sp, #3772]
   26220:	mov	w2, #0x1                   	// #1
   26224:	mov	w1, #0xf                   	// #15
   26228:	ldr	w0, [sp, #52]
   2622c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26230:	lsl	w0, w0, #1
   26234:	ldr	w1, [sp, #3772]
   26238:	orr	w0, w1, w0
   2623c:	str	w0, [sp, #3772]
   26240:	ldr	x3, [sp, #24]
   26244:	ldr	x2, [sp, #32]
   26248:	ldr	w1, [sp, #3772]
   2624c:	ldr	x0, [sp, #40]
   26250:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   26254:	mov	w1, w0
   26258:	add	x0, sp, #0x3c
   2625c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26260:	and	w0, w0, #0xff
   26264:	eor	w0, w0, #0x1
   26268:	and	w0, w0, #0xff
   2626c:	cmp	w0, #0x0
   26270:	b.eq	2627c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2130c>  // b.none
   26274:	mov	w0, #0x0                   	// #0
   26278:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2627c:	ldr	w0, [sp, #60]
   26280:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26284:	mov	w2, #0x5                   	// #5
   26288:	mov	w1, #0x0                   	// #0
   2628c:	ldr	w0, [sp, #52]
   26290:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26294:	str	w0, [sp, #3772]
   26298:	ldr	x3, [sp, #24]
   2629c:	ldr	x2, [sp, #32]
   262a0:	ldr	w1, [sp, #3772]
   262a4:	ldr	x0, [sp, #40]
   262a8:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   262ac:	mov	w1, w0
   262b0:	add	x0, sp, #0x3c
   262b4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   262b8:	and	w0, w0, #0xff
   262bc:	eor	w0, w0, #0x1
   262c0:	and	w0, w0, #0xff
   262c4:	cmp	w0, #0x0
   262c8:	b.eq	262d4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21364>  // b.none
   262cc:	mov	w0, #0x0                   	// #0
   262d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   262d4:	mov	w2, #0x5                   	// #5
   262d8:	mov	w1, #0x5                   	// #5
   262dc:	ldr	w0, [sp, #52]
   262e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   262e4:	str	w0, [sp, #3772]
   262e8:	ldr	x3, [sp, #24]
   262ec:	ldr	x2, [sp, #32]
   262f0:	ldr	w1, [sp, #3772]
   262f4:	ldr	x0, [sp, #40]
   262f8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   262fc:	mov	w1, w0
   26300:	add	x0, sp, #0x3c
   26304:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26308:	and	w0, w0, #0xff
   2630c:	eor	w0, w0, #0x1
   26310:	and	w0, w0, #0xff
   26314:	cmp	w0, #0x0
   26318:	b.eq	26324 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x213b4>  // b.none
   2631c:	mov	w0, #0x0                   	// #0
   26320:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26324:	mov	w2, #0x5                   	// #5
   26328:	mov	w1, #0x10                  	// #16
   2632c:	ldr	w0, [sp, #52]
   26330:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26334:	str	w0, [sp, #3772]
   26338:	ldr	x3, [sp, #24]
   2633c:	ldr	x2, [sp, #32]
   26340:	ldr	w1, [sp, #3772]
   26344:	ldr	x0, [sp, #40]
   26348:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2634c:	mov	w1, w0
   26350:	add	x0, sp, #0x3c
   26354:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26358:	and	w0, w0, #0xff
   2635c:	eor	w0, w0, #0x1
   26360:	and	w0, w0, #0xff
   26364:	cmp	w0, #0x0
   26368:	b.eq	26374 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21404>  // b.none
   2636c:	mov	w0, #0x0                   	// #0
   26370:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26374:	str	wzr, [sp, #3772]
   26378:	mov	w2, #0x1                   	// #1
   2637c:	mov	w1, #0xc                   	// #12
   26380:	ldr	w0, [sp, #52]
   26384:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26388:	mov	w1, w0
   2638c:	ldr	w0, [sp, #3772]
   26390:	orr	w0, w0, w1
   26394:	str	w0, [sp, #3772]
   26398:	mov	w2, #0x1                   	// #1
   2639c:	mov	w1, #0xf                   	// #15
   263a0:	ldr	w0, [sp, #52]
   263a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   263a8:	lsl	w0, w0, #1
   263ac:	ldr	w1, [sp, #3772]
   263b0:	orr	w0, w1, w0
   263b4:	str	w0, [sp, #3772]
   263b8:	ldr	x3, [sp, #24]
   263bc:	ldr	x2, [sp, #32]
   263c0:	ldr	w1, [sp, #3772]
   263c4:	ldr	x0, [sp, #40]
   263c8:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   263cc:	mov	w1, w0
   263d0:	add	x0, sp, #0x3c
   263d4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   263d8:	and	w0, w0, #0xff
   263dc:	eor	w0, w0, #0x1
   263e0:	and	w0, w0, #0xff
   263e4:	cmp	w0, #0x0
   263e8:	b.eq	263f4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21484>  // b.none
   263ec:	mov	w0, #0x0                   	// #0
   263f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   263f4:	ldr	w0, [sp, #60]
   263f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   263fc:	mov	w2, #0x5                   	// #5
   26400:	mov	w1, #0x0                   	// #0
   26404:	ldr	w0, [sp, #52]
   26408:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2640c:	str	w0, [sp, #3772]
   26410:	ldr	x3, [sp, #24]
   26414:	ldr	x2, [sp, #32]
   26418:	ldr	w1, [sp, #3772]
   2641c:	ldr	x0, [sp, #40]
   26420:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   26424:	mov	w1, w0
   26428:	add	x0, sp, #0x3c
   2642c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26430:	and	w0, w0, #0xff
   26434:	eor	w0, w0, #0x1
   26438:	and	w0, w0, #0xff
   2643c:	cmp	w0, #0x0
   26440:	b.eq	2644c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x214dc>  // b.none
   26444:	mov	w0, #0x0                   	// #0
   26448:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2644c:	mov	w2, #0x5                   	// #5
   26450:	mov	w1, #0x5                   	// #5
   26454:	ldr	w0, [sp, #52]
   26458:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2645c:	str	w0, [sp, #3772]
   26460:	ldr	x3, [sp, #24]
   26464:	ldr	x2, [sp, #32]
   26468:	ldr	w1, [sp, #3772]
   2646c:	ldr	x0, [sp, #40]
   26470:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   26474:	mov	w1, w0
   26478:	add	x0, sp, #0x3c
   2647c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26480:	and	w0, w0, #0xff
   26484:	eor	w0, w0, #0x1
   26488:	and	w0, w0, #0xff
   2648c:	cmp	w0, #0x0
   26490:	b.eq	2649c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2152c>  // b.none
   26494:	mov	w0, #0x0                   	// #0
   26498:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2649c:	mov	w2, #0x5                   	// #5
   264a0:	mov	w1, #0x10                  	// #16
   264a4:	ldr	w0, [sp, #52]
   264a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   264ac:	str	w0, [sp, #3772]
   264b0:	ldr	x3, [sp, #24]
   264b4:	ldr	x2, [sp, #32]
   264b8:	ldr	w1, [sp, #3772]
   264bc:	ldr	x0, [sp, #40]
   264c0:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   264c4:	mov	w1, w0
   264c8:	add	x0, sp, #0x3c
   264cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   264d0:	and	w0, w0, #0xff
   264d4:	eor	w0, w0, #0x1
   264d8:	and	w0, w0, #0xff
   264dc:	cmp	w0, #0x0
   264e0:	b.eq	264ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2157c>  // b.none
   264e4:	mov	w0, #0x0                   	// #0
   264e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   264ec:	str	wzr, [sp, #3772]
   264f0:	mov	w2, #0x1                   	// #1
   264f4:	mov	w1, #0xc                   	// #12
   264f8:	ldr	w0, [sp, #52]
   264fc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26500:	mov	w1, w0
   26504:	ldr	w0, [sp, #3772]
   26508:	orr	w0, w0, w1
   2650c:	str	w0, [sp, #3772]
   26510:	mov	w2, #0x1                   	// #1
   26514:	mov	w1, #0xf                   	// #15
   26518:	ldr	w0, [sp, #52]
   2651c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26520:	lsl	w0, w0, #1
   26524:	ldr	w1, [sp, #3772]
   26528:	orr	w0, w1, w0
   2652c:	str	w0, [sp, #3772]
   26530:	ldr	x3, [sp, #24]
   26534:	ldr	x2, [sp, #32]
   26538:	ldr	w1, [sp, #3772]
   2653c:	ldr	x0, [sp, #40]
   26540:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   26544:	mov	w1, w0
   26548:	add	x0, sp, #0x3c
   2654c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26550:	and	w0, w0, #0xff
   26554:	eor	w0, w0, #0x1
   26558:	and	w0, w0, #0xff
   2655c:	cmp	w0, #0x0
   26560:	b.eq	2656c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x215fc>  // b.none
   26564:	mov	w0, #0x0                   	// #0
   26568:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2656c:	ldr	w0, [sp, #60]
   26570:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26574:	mov	w2, #0x5                   	// #5
   26578:	mov	w1, #0x0                   	// #0
   2657c:	ldr	w0, [sp, #52]
   26580:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26584:	str	w0, [sp, #3772]
   26588:	ldr	x3, [sp, #24]
   2658c:	ldr	x2, [sp, #32]
   26590:	ldr	w1, [sp, #3772]
   26594:	ldr	x0, [sp, #40]
   26598:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   2659c:	mov	w1, w0
   265a0:	add	x0, sp, #0x3c
   265a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   265a8:	and	w0, w0, #0xff
   265ac:	eor	w0, w0, #0x1
   265b0:	and	w0, w0, #0xff
   265b4:	cmp	w0, #0x0
   265b8:	b.eq	265c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21654>  // b.none
   265bc:	mov	w0, #0x0                   	// #0
   265c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   265c4:	mov	w2, #0x5                   	// #5
   265c8:	mov	w1, #0x5                   	// #5
   265cc:	ldr	w0, [sp, #52]
   265d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   265d4:	str	w0, [sp, #3772]
   265d8:	ldr	x3, [sp, #24]
   265dc:	ldr	x2, [sp, #32]
   265e0:	ldr	w1, [sp, #3772]
   265e4:	ldr	x0, [sp, #40]
   265e8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   265ec:	mov	w1, w0
   265f0:	add	x0, sp, #0x3c
   265f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   265f8:	and	w0, w0, #0xff
   265fc:	eor	w0, w0, #0x1
   26600:	and	w0, w0, #0xff
   26604:	cmp	w0, #0x0
   26608:	b.eq	26614 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x216a4>  // b.none
   2660c:	mov	w0, #0x0                   	// #0
   26610:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26614:	mov	w2, #0x5                   	// #5
   26618:	mov	w1, #0x10                  	// #16
   2661c:	ldr	w0, [sp, #52]
   26620:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26624:	str	w0, [sp, #3772]
   26628:	ldr	x3, [sp, #24]
   2662c:	ldr	x2, [sp, #32]
   26630:	ldr	w1, [sp, #3772]
   26634:	ldr	x0, [sp, #40]
   26638:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2663c:	mov	w1, w0
   26640:	add	x0, sp, #0x3c
   26644:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26648:	and	w0, w0, #0xff
   2664c:	eor	w0, w0, #0x1
   26650:	and	w0, w0, #0xff
   26654:	cmp	w0, #0x0
   26658:	b.eq	26664 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x216f4>  // b.none
   2665c:	mov	w0, #0x0                   	// #0
   26660:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26664:	str	wzr, [sp, #3772]
   26668:	mov	w2, #0x1                   	// #1
   2666c:	mov	w1, #0xc                   	// #12
   26670:	ldr	w0, [sp, #52]
   26674:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26678:	mov	w1, w0
   2667c:	ldr	w0, [sp, #3772]
   26680:	orr	w0, w0, w1
   26684:	str	w0, [sp, #3772]
   26688:	mov	w2, #0x1                   	// #1
   2668c:	mov	w1, #0xf                   	// #15
   26690:	ldr	w0, [sp, #52]
   26694:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26698:	lsl	w0, w0, #1
   2669c:	ldr	w1, [sp, #3772]
   266a0:	orr	w0, w1, w0
   266a4:	str	w0, [sp, #3772]
   266a8:	ldr	x3, [sp, #24]
   266ac:	ldr	x2, [sp, #32]
   266b0:	ldr	w1, [sp, #3772]
   266b4:	ldr	x0, [sp, #40]
   266b8:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   266bc:	mov	w1, w0
   266c0:	add	x0, sp, #0x3c
   266c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   266c8:	and	w0, w0, #0xff
   266cc:	eor	w0, w0, #0x1
   266d0:	and	w0, w0, #0xff
   266d4:	cmp	w0, #0x0
   266d8:	b.eq	266e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21774>  // b.none
   266dc:	mov	w0, #0x0                   	// #0
   266e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   266e4:	ldr	w0, [sp, #60]
   266e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   266ec:	mov	w2, #0x5                   	// #5
   266f0:	mov	w1, #0x0                   	// #0
   266f4:	ldr	w0, [sp, #52]
   266f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   266fc:	str	w0, [sp, #3772]
   26700:	ldr	x3, [sp, #24]
   26704:	ldr	x2, [sp, #32]
   26708:	ldr	w1, [sp, #3772]
   2670c:	ldr	x0, [sp, #40]
   26710:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   26714:	mov	w1, w0
   26718:	add	x0, sp, #0x3c
   2671c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26720:	and	w0, w0, #0xff
   26724:	eor	w0, w0, #0x1
   26728:	and	w0, w0, #0xff
   2672c:	cmp	w0, #0x0
   26730:	b.eq	2673c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x217cc>  // b.none
   26734:	mov	w0, #0x0                   	// #0
   26738:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2673c:	mov	w2, #0x13                  	// #19
   26740:	mov	w1, #0x5                   	// #5
   26744:	ldr	w0, [sp, #52]
   26748:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2674c:	str	w0, [sp, #3772]
   26750:	ldr	x3, [sp, #24]
   26754:	ldr	x2, [sp, #32]
   26758:	ldr	w1, [sp, #3772]
   2675c:	ldr	x0, [sp, #40]
   26760:	bl	132c <_ZL18DecodePCRelLabel19RN4llvm6MCInstEjmPKv>
   26764:	mov	w1, w0
   26768:	add	x0, sp, #0x3c
   2676c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26770:	and	w0, w0, #0xff
   26774:	eor	w0, w0, #0x1
   26778:	and	w0, w0, #0xff
   2677c:	cmp	w0, #0x0
   26780:	b.eq	2678c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2181c>  // b.none
   26784:	mov	w0, #0x0                   	// #0
   26788:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2678c:	ldr	w0, [sp, #60]
   26790:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26794:	mov	w2, #0x5                   	// #5
   26798:	mov	w1, #0x0                   	// #0
   2679c:	ldr	w0, [sp, #52]
   267a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   267a4:	str	w0, [sp, #3772]
   267a8:	ldr	x3, [sp, #24]
   267ac:	ldr	x2, [sp, #32]
   267b0:	ldr	w1, [sp, #3772]
   267b4:	ldr	x0, [sp, #40]
   267b8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   267bc:	mov	w1, w0
   267c0:	add	x0, sp, #0x3c
   267c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   267c8:	and	w0, w0, #0xff
   267cc:	eor	w0, w0, #0x1
   267d0:	and	w0, w0, #0xff
   267d4:	cmp	w0, #0x0
   267d8:	b.eq	267e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21874>  // b.none
   267dc:	mov	w0, #0x0                   	// #0
   267e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   267e4:	mov	w2, #0x5                   	// #5
   267e8:	mov	w1, #0x0                   	// #0
   267ec:	ldr	w0, [sp, #52]
   267f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   267f4:	str	w0, [sp, #3772]
   267f8:	ldr	x3, [sp, #24]
   267fc:	ldr	x2, [sp, #32]
   26800:	ldr	w1, [sp, #3772]
   26804:	ldr	x0, [sp, #40]
   26808:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   2680c:	mov	w1, w0
   26810:	add	x0, sp, #0x3c
   26814:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26818:	and	w0, w0, #0xff
   2681c:	eor	w0, w0, #0x1
   26820:	and	w0, w0, #0xff
   26824:	cmp	w0, #0x0
   26828:	b.eq	26834 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x218c4>  // b.none
   2682c:	mov	w0, #0x0                   	// #0
   26830:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26834:	mov	w2, #0x5                   	// #5
   26838:	mov	w1, #0x5                   	// #5
   2683c:	ldr	w0, [sp, #52]
   26840:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26844:	str	w0, [sp, #3772]
   26848:	ldr	x3, [sp, #24]
   2684c:	ldr	x2, [sp, #32]
   26850:	ldr	w1, [sp, #3772]
   26854:	ldr	x0, [sp, #40]
   26858:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2685c:	mov	w1, w0
   26860:	add	x0, sp, #0x3c
   26864:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26868:	and	w0, w0, #0xff
   2686c:	eor	w0, w0, #0x1
   26870:	and	w0, w0, #0xff
   26874:	cmp	w0, #0x0
   26878:	b.eq	26884 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21914>  // b.none
   2687c:	mov	w0, #0x0                   	// #0
   26880:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26884:	mov	w2, #0x5                   	// #5
   26888:	mov	w1, #0x10                  	// #16
   2688c:	ldr	w0, [sp, #52]
   26890:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26894:	str	w0, [sp, #3772]
   26898:	ldr	x3, [sp, #24]
   2689c:	ldr	x2, [sp, #32]
   268a0:	ldr	w1, [sp, #3772]
   268a4:	ldr	x0, [sp, #40]
   268a8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   268ac:	mov	w1, w0
   268b0:	add	x0, sp, #0x3c
   268b4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   268b8:	and	w0, w0, #0xff
   268bc:	eor	w0, w0, #0x1
   268c0:	and	w0, w0, #0xff
   268c4:	cmp	w0, #0x0
   268c8:	b.eq	268d4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21964>  // b.none
   268cc:	mov	w0, #0x0                   	// #0
   268d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   268d4:	ldr	w0, [sp, #60]
   268d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   268dc:	mov	w2, #0x5                   	// #5
   268e0:	mov	w1, #0x0                   	// #0
   268e4:	ldr	w0, [sp, #52]
   268e8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   268ec:	str	w0, [sp, #3772]
   268f0:	ldr	x3, [sp, #24]
   268f4:	ldr	x2, [sp, #32]
   268f8:	ldr	w1, [sp, #3772]
   268fc:	ldr	x0, [sp, #40]
   26900:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   26904:	mov	w1, w0
   26908:	add	x0, sp, #0x3c
   2690c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26910:	and	w0, w0, #0xff
   26914:	eor	w0, w0, #0x1
   26918:	and	w0, w0, #0xff
   2691c:	cmp	w0, #0x0
   26920:	b.eq	2692c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x219bc>  // b.none
   26924:	mov	w0, #0x0                   	// #0
   26928:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2692c:	mov	w2, #0x5                   	// #5
   26930:	mov	w1, #0x5                   	// #5
   26934:	ldr	w0, [sp, #52]
   26938:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2693c:	str	w0, [sp, #3772]
   26940:	ldr	x3, [sp, #24]
   26944:	ldr	x2, [sp, #32]
   26948:	ldr	w1, [sp, #3772]
   2694c:	ldr	x0, [sp, #40]
   26950:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   26954:	mov	w1, w0
   26958:	add	x0, sp, #0x3c
   2695c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26960:	and	w0, w0, #0xff
   26964:	eor	w0, w0, #0x1
   26968:	and	w0, w0, #0xff
   2696c:	cmp	w0, #0x0
   26970:	b.eq	2697c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21a0c>  // b.none
   26974:	mov	w0, #0x0                   	// #0
   26978:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2697c:	mov	w2, #0x1                   	// #1
   26980:	mov	w1, #0x14                  	// #20
   26984:	ldr	w0, [sp, #52]
   26988:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2698c:	str	w0, [sp, #3772]
   26990:	ldr	w0, [sp, #3772]
   26994:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   26998:	add	x2, sp, #0xe00
   2699c:	stp	x0, x1, [x2, #-40]
   269a0:	add	x0, sp, #0xdd8
   269a4:	mov	x1, x0
   269a8:	ldr	x0, [sp, #40]
   269ac:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   269b0:	ldr	w0, [sp, #60]
   269b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   269b8:	mov	w2, #0x5                   	// #5
   269bc:	mov	w1, #0x0                   	// #0
   269c0:	ldr	w0, [sp, #52]
   269c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   269c8:	str	w0, [sp, #3772]
   269cc:	ldr	x3, [sp, #24]
   269d0:	ldr	x2, [sp, #32]
   269d4:	ldr	w1, [sp, #3772]
   269d8:	ldr	x0, [sp, #40]
   269dc:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   269e0:	mov	w1, w0
   269e4:	add	x0, sp, #0x3c
   269e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   269ec:	and	w0, w0, #0xff
   269f0:	eor	w0, w0, #0x1
   269f4:	and	w0, w0, #0xff
   269f8:	cmp	w0, #0x0
   269fc:	b.eq	26a08 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21a98>  // b.none
   26a00:	mov	w0, #0x0                   	// #0
   26a04:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26a08:	mov	w2, #0x5                   	// #5
   26a0c:	mov	w1, #0x5                   	// #5
   26a10:	ldr	w0, [sp, #52]
   26a14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26a18:	str	w0, [sp, #3772]
   26a1c:	ldr	x3, [sp, #24]
   26a20:	ldr	x2, [sp, #32]
   26a24:	ldr	w1, [sp, #3772]
   26a28:	ldr	x0, [sp, #40]
   26a2c:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   26a30:	mov	w1, w0
   26a34:	add	x0, sp, #0x3c
   26a38:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26a3c:	and	w0, w0, #0xff
   26a40:	eor	w0, w0, #0x1
   26a44:	and	w0, w0, #0xff
   26a48:	cmp	w0, #0x0
   26a4c:	b.eq	26a58 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21ae8>  // b.none
   26a50:	mov	w0, #0x0                   	// #0
   26a54:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26a58:	mov	w2, #0x2                   	// #2
   26a5c:	mov	w1, #0x13                  	// #19
   26a60:	ldr	w0, [sp, #52]
   26a64:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26a68:	str	w0, [sp, #3772]
   26a6c:	ldr	w0, [sp, #3772]
   26a70:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   26a74:	add	x2, sp, #0xe00
   26a78:	stp	x0, x1, [x2, #-24]
   26a7c:	add	x0, sp, #0xde8
   26a80:	mov	x1, x0
   26a84:	ldr	x0, [sp, #40]
   26a88:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   26a8c:	ldr	w0, [sp, #60]
   26a90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26a94:	mov	w2, #0x5                   	// #5
   26a98:	mov	w1, #0x0                   	// #0
   26a9c:	ldr	w0, [sp, #52]
   26aa0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26aa4:	str	w0, [sp, #3772]
   26aa8:	ldr	x3, [sp, #24]
   26aac:	ldr	x2, [sp, #32]
   26ab0:	ldr	w1, [sp, #3772]
   26ab4:	ldr	x0, [sp, #40]
   26ab8:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   26abc:	mov	w1, w0
   26ac0:	add	x0, sp, #0x3c
   26ac4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26ac8:	and	w0, w0, #0xff
   26acc:	eor	w0, w0, #0x1
   26ad0:	and	w0, w0, #0xff
   26ad4:	cmp	w0, #0x0
   26ad8:	b.eq	26ae4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21b74>  // b.none
   26adc:	mov	w0, #0x0                   	// #0
   26ae0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26ae4:	mov	w2, #0x5                   	// #5
   26ae8:	mov	w1, #0x5                   	// #5
   26aec:	ldr	w0, [sp, #52]
   26af0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26af4:	str	w0, [sp, #3772]
   26af8:	ldr	x3, [sp, #24]
   26afc:	ldr	x2, [sp, #32]
   26b00:	ldr	w1, [sp, #3772]
   26b04:	ldr	x0, [sp, #40]
   26b08:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   26b0c:	mov	w1, w0
   26b10:	add	x0, sp, #0x3c
   26b14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26b18:	and	w0, w0, #0xff
   26b1c:	eor	w0, w0, #0x1
   26b20:	and	w0, w0, #0xff
   26b24:	cmp	w0, #0x0
   26b28:	b.eq	26b34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21bc4>  // b.none
   26b2c:	mov	w0, #0x0                   	// #0
   26b30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26b34:	mov	w2, #0x3                   	// #3
   26b38:	mov	w1, #0x12                  	// #18
   26b3c:	ldr	w0, [sp, #52]
   26b40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26b44:	str	w0, [sp, #3772]
   26b48:	ldr	w0, [sp, #3772]
   26b4c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   26b50:	add	x2, sp, #0xe00
   26b54:	stp	x0, x1, [x2, #-8]
   26b58:	add	x0, sp, #0xdf8
   26b5c:	mov	x1, x0
   26b60:	ldr	x0, [sp, #40]
   26b64:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   26b68:	ldr	w0, [sp, #60]
   26b6c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26b70:	mov	w2, #0x5                   	// #5
   26b74:	mov	w1, #0x0                   	// #0
   26b78:	ldr	w0, [sp, #52]
   26b7c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26b80:	str	w0, [sp, #3772]
   26b84:	ldr	x3, [sp, #24]
   26b88:	ldr	x2, [sp, #32]
   26b8c:	ldr	w1, [sp, #3772]
   26b90:	ldr	x0, [sp, #40]
   26b94:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   26b98:	mov	w1, w0
   26b9c:	add	x0, sp, #0x3c
   26ba0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26ba4:	and	w0, w0, #0xff
   26ba8:	eor	w0, w0, #0x1
   26bac:	and	w0, w0, #0xff
   26bb0:	cmp	w0, #0x0
   26bb4:	b.eq	26bc0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21c50>  // b.none
   26bb8:	mov	w0, #0x0                   	// #0
   26bbc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26bc0:	mov	w2, #0x5                   	// #5
   26bc4:	mov	w1, #0x5                   	// #5
   26bc8:	ldr	w0, [sp, #52]
   26bcc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26bd0:	str	w0, [sp, #3772]
   26bd4:	ldr	x3, [sp, #24]
   26bd8:	ldr	x2, [sp, #32]
   26bdc:	ldr	w1, [sp, #3772]
   26be0:	ldr	x0, [sp, #40]
   26be4:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   26be8:	mov	w1, w0
   26bec:	add	x0, sp, #0x3c
   26bf0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26bf4:	and	w0, w0, #0xff
   26bf8:	eor	w0, w0, #0x1
   26bfc:	and	w0, w0, #0xff
   26c00:	cmp	w0, #0x0
   26c04:	b.eq	26c10 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21ca0>  // b.none
   26c08:	mov	w0, #0x0                   	// #0
   26c0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26c10:	mov	w2, #0x4                   	// #4
   26c14:	mov	w1, #0x11                  	// #17
   26c18:	ldr	w0, [sp, #52]
   26c1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26c20:	str	w0, [sp, #3772]
   26c24:	ldr	w0, [sp, #3772]
   26c28:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   26c2c:	add	x2, sp, #0xe00
   26c30:	stp	x0, x1, [x2, #8]
   26c34:	add	x0, sp, #0xe08
   26c38:	mov	x1, x0
   26c3c:	ldr	x0, [sp, #40]
   26c40:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   26c44:	ldr	w0, [sp, #60]
   26c48:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26c4c:	mov	w2, #0x5                   	// #5
   26c50:	mov	w1, #0x0                   	// #0
   26c54:	ldr	w0, [sp, #52]
   26c58:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26c5c:	str	w0, [sp, #3772]
   26c60:	ldr	x3, [sp, #24]
   26c64:	ldr	x2, [sp, #32]
   26c68:	ldr	w1, [sp, #3772]
   26c6c:	ldr	x0, [sp, #40]
   26c70:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   26c74:	mov	w1, w0
   26c78:	add	x0, sp, #0x3c
   26c7c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26c80:	and	w0, w0, #0xff
   26c84:	eor	w0, w0, #0x1
   26c88:	and	w0, w0, #0xff
   26c8c:	cmp	w0, #0x0
   26c90:	b.eq	26c9c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21d2c>  // b.none
   26c94:	mov	w0, #0x0                   	// #0
   26c98:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26c9c:	mov	w2, #0x5                   	// #5
   26ca0:	mov	w1, #0x5                   	// #5
   26ca4:	ldr	w0, [sp, #52]
   26ca8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26cac:	str	w0, [sp, #3772]
   26cb0:	ldr	x3, [sp, #24]
   26cb4:	ldr	x2, [sp, #32]
   26cb8:	ldr	w1, [sp, #3772]
   26cbc:	ldr	x0, [sp, #40]
   26cc0:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   26cc4:	mov	w1, w0
   26cc8:	add	x0, sp, #0x3c
   26ccc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26cd0:	and	w0, w0, #0xff
   26cd4:	eor	w0, w0, #0x1
   26cd8:	and	w0, w0, #0xff
   26cdc:	cmp	w0, #0x0
   26ce0:	b.eq	26cec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21d7c>  // b.none
   26ce4:	mov	w0, #0x0                   	// #0
   26ce8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26cec:	mov	w2, #0x5                   	// #5
   26cf0:	mov	w1, #0x10                  	// #16
   26cf4:	ldr	w0, [sp, #52]
   26cf8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26cfc:	str	w0, [sp, #3772]
   26d00:	ldr	x3, [sp, #24]
   26d04:	ldr	x2, [sp, #32]
   26d08:	ldr	w1, [sp, #3772]
   26d0c:	ldr	x0, [sp, #40]
   26d10:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   26d14:	mov	w1, w0
   26d18:	add	x0, sp, #0x3c
   26d1c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26d20:	and	w0, w0, #0xff
   26d24:	eor	w0, w0, #0x1
   26d28:	and	w0, w0, #0xff
   26d2c:	cmp	w0, #0x0
   26d30:	b.eq	26d3c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21dcc>  // b.none
   26d34:	mov	w0, #0x0                   	// #0
   26d38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26d3c:	ldr	w0, [sp, #60]
   26d40:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26d44:	mov	w2, #0x5                   	// #5
   26d48:	mov	w1, #0x0                   	// #0
   26d4c:	ldr	w0, [sp, #52]
   26d50:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26d54:	str	w0, [sp, #3772]
   26d58:	ldr	x3, [sp, #24]
   26d5c:	ldr	x2, [sp, #32]
   26d60:	ldr	w1, [sp, #3772]
   26d64:	ldr	x0, [sp, #40]
   26d68:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   26d6c:	mov	w1, w0
   26d70:	add	x0, sp, #0x3c
   26d74:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26d78:	and	w0, w0, #0xff
   26d7c:	eor	w0, w0, #0x1
   26d80:	and	w0, w0, #0xff
   26d84:	cmp	w0, #0x0
   26d88:	b.eq	26d94 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21e24>  // b.none
   26d8c:	mov	w0, #0x0                   	// #0
   26d90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26d94:	mov	w2, #0x5                   	// #5
   26d98:	mov	w1, #0x0                   	// #0
   26d9c:	ldr	w0, [sp, #52]
   26da0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26da4:	str	w0, [sp, #3772]
   26da8:	ldr	x3, [sp, #24]
   26dac:	ldr	x2, [sp, #32]
   26db0:	ldr	w1, [sp, #3772]
   26db4:	ldr	x0, [sp, #40]
   26db8:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   26dbc:	mov	w1, w0
   26dc0:	add	x0, sp, #0x3c
   26dc4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26dc8:	and	w0, w0, #0xff
   26dcc:	eor	w0, w0, #0x1
   26dd0:	and	w0, w0, #0xff
   26dd4:	cmp	w0, #0x0
   26dd8:	b.eq	26de4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21e74>  // b.none
   26ddc:	mov	w0, #0x0                   	// #0
   26de0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26de4:	mov	w2, #0x5                   	// #5
   26de8:	mov	w1, #0x5                   	// #5
   26dec:	ldr	w0, [sp, #52]
   26df0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26df4:	str	w0, [sp, #3772]
   26df8:	ldr	x3, [sp, #24]
   26dfc:	ldr	x2, [sp, #32]
   26e00:	ldr	w1, [sp, #3772]
   26e04:	ldr	x0, [sp, #40]
   26e08:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   26e0c:	mov	w1, w0
   26e10:	add	x0, sp, #0x3c
   26e14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26e18:	and	w0, w0, #0xff
   26e1c:	eor	w0, w0, #0x1
   26e20:	and	w0, w0, #0xff
   26e24:	cmp	w0, #0x0
   26e28:	b.eq	26e34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21ec4>  // b.none
   26e2c:	mov	w0, #0x0                   	// #0
   26e30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26e34:	ldr	w0, [sp, #60]
   26e38:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26e3c:	mov	w2, #0x5                   	// #5
   26e40:	mov	w1, #0x0                   	// #0
   26e44:	ldr	w0, [sp, #52]
   26e48:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26e4c:	str	w0, [sp, #3772]
   26e50:	ldr	x3, [sp, #24]
   26e54:	ldr	x2, [sp, #32]
   26e58:	ldr	w1, [sp, #3772]
   26e5c:	ldr	x0, [sp, #40]
   26e60:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   26e64:	mov	w1, w0
   26e68:	add	x0, sp, #0x3c
   26e6c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26e70:	and	w0, w0, #0xff
   26e74:	eor	w0, w0, #0x1
   26e78:	and	w0, w0, #0xff
   26e7c:	cmp	w0, #0x0
   26e80:	b.eq	26e8c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21f1c>  // b.none
   26e84:	mov	w0, #0x0                   	// #0
   26e88:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26e8c:	mov	w2, #0x5                   	// #5
   26e90:	mov	w1, #0x0                   	// #0
   26e94:	ldr	w0, [sp, #52]
   26e98:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26e9c:	str	w0, [sp, #3772]
   26ea0:	ldr	x3, [sp, #24]
   26ea4:	ldr	x2, [sp, #32]
   26ea8:	ldr	w1, [sp, #3772]
   26eac:	ldr	x0, [sp, #40]
   26eb0:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   26eb4:	mov	w1, w0
   26eb8:	add	x0, sp, #0x3c
   26ebc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26ec0:	and	w0, w0, #0xff
   26ec4:	eor	w0, w0, #0x1
   26ec8:	and	w0, w0, #0xff
   26ecc:	cmp	w0, #0x0
   26ed0:	b.eq	26edc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21f6c>  // b.none
   26ed4:	mov	w0, #0x0                   	// #0
   26ed8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26edc:	mov	w2, #0x5                   	// #5
   26ee0:	mov	w1, #0x5                   	// #5
   26ee4:	ldr	w0, [sp, #52]
   26ee8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26eec:	str	w0, [sp, #3772]
   26ef0:	ldr	x3, [sp, #24]
   26ef4:	ldr	x2, [sp, #32]
   26ef8:	ldr	w1, [sp, #3772]
   26efc:	ldr	x0, [sp, #40]
   26f00:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   26f04:	mov	w1, w0
   26f08:	add	x0, sp, #0x3c
   26f0c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26f10:	and	w0, w0, #0xff
   26f14:	eor	w0, w0, #0x1
   26f18:	and	w0, w0, #0xff
   26f1c:	cmp	w0, #0x0
   26f20:	b.eq	26f2c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x21fbc>  // b.none
   26f24:	mov	w0, #0x0                   	// #0
   26f28:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26f2c:	ldr	w0, [sp, #60]
   26f30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26f34:	mov	w2, #0x5                   	// #5
   26f38:	mov	w1, #0x0                   	// #0
   26f3c:	ldr	w0, [sp, #52]
   26f40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26f44:	str	w0, [sp, #3772]
   26f48:	ldr	x3, [sp, #24]
   26f4c:	ldr	x2, [sp, #32]
   26f50:	ldr	w1, [sp, #3772]
   26f54:	ldr	x0, [sp, #40]
   26f58:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   26f5c:	mov	w1, w0
   26f60:	add	x0, sp, #0x3c
   26f64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26f68:	and	w0, w0, #0xff
   26f6c:	eor	w0, w0, #0x1
   26f70:	and	w0, w0, #0xff
   26f74:	cmp	w0, #0x0
   26f78:	b.eq	26f84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22014>  // b.none
   26f7c:	mov	w0, #0x0                   	// #0
   26f80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26f84:	mov	w2, #0x5                   	// #5
   26f88:	mov	w1, #0x0                   	// #0
   26f8c:	ldr	w0, [sp, #52]
   26f90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26f94:	str	w0, [sp, #3772]
   26f98:	ldr	x3, [sp, #24]
   26f9c:	ldr	x2, [sp, #32]
   26fa0:	ldr	w1, [sp, #3772]
   26fa4:	ldr	x0, [sp, #40]
   26fa8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   26fac:	mov	w1, w0
   26fb0:	add	x0, sp, #0x3c
   26fb4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   26fb8:	and	w0, w0, #0xff
   26fbc:	eor	w0, w0, #0x1
   26fc0:	and	w0, w0, #0xff
   26fc4:	cmp	w0, #0x0
   26fc8:	b.eq	26fd4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22064>  // b.none
   26fcc:	mov	w0, #0x0                   	// #0
   26fd0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   26fd4:	mov	w2, #0x5                   	// #5
   26fd8:	mov	w1, #0x5                   	// #5
   26fdc:	ldr	w0, [sp, #52]
   26fe0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   26fe4:	str	w0, [sp, #3772]
   26fe8:	ldr	x3, [sp, #24]
   26fec:	ldr	x2, [sp, #32]
   26ff0:	ldr	w1, [sp, #3772]
   26ff4:	ldr	x0, [sp, #40]
   26ff8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   26ffc:	mov	w1, w0
   27000:	add	x0, sp, #0x3c
   27004:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27008:	and	w0, w0, #0xff
   2700c:	eor	w0, w0, #0x1
   27010:	and	w0, w0, #0xff
   27014:	cmp	w0, #0x0
   27018:	b.eq	27024 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x220b4>  // b.none
   2701c:	mov	w0, #0x0                   	// #0
   27020:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27024:	ldr	w0, [sp, #60]
   27028:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2702c:	mov	w2, #0x5                   	// #5
   27030:	mov	w1, #0x0                   	// #0
   27034:	ldr	w0, [sp, #52]
   27038:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2703c:	str	w0, [sp, #3772]
   27040:	ldr	x3, [sp, #24]
   27044:	ldr	x2, [sp, #32]
   27048:	ldr	w1, [sp, #3772]
   2704c:	ldr	x0, [sp, #40]
   27050:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   27054:	mov	w1, w0
   27058:	add	x0, sp, #0x3c
   2705c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27060:	and	w0, w0, #0xff
   27064:	eor	w0, w0, #0x1
   27068:	and	w0, w0, #0xff
   2706c:	cmp	w0, #0x0
   27070:	b.eq	2707c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2210c>  // b.none
   27074:	mov	w0, #0x0                   	// #0
   27078:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2707c:	mov	w2, #0x5                   	// #5
   27080:	mov	w1, #0x5                   	// #5
   27084:	ldr	w0, [sp, #52]
   27088:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2708c:	str	w0, [sp, #3772]
   27090:	ldr	x3, [sp, #24]
   27094:	ldr	x2, [sp, #32]
   27098:	ldr	w1, [sp, #3772]
   2709c:	ldr	x0, [sp, #40]
   270a0:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   270a4:	mov	w1, w0
   270a8:	add	x0, sp, #0x3c
   270ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   270b0:	and	w0, w0, #0xff
   270b4:	eor	w0, w0, #0x1
   270b8:	and	w0, w0, #0xff
   270bc:	cmp	w0, #0x0
   270c0:	b.eq	270cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2215c>  // b.none
   270c4:	mov	w0, #0x0                   	// #0
   270c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   270cc:	ldr	w0, [sp, #60]
   270d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   270d4:	mov	w2, #0x5                   	// #5
   270d8:	mov	w1, #0x0                   	// #0
   270dc:	ldr	w0, [sp, #52]
   270e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   270e4:	str	w0, [sp, #3772]
   270e8:	ldr	x3, [sp, #24]
   270ec:	ldr	x2, [sp, #32]
   270f0:	ldr	w1, [sp, #3772]
   270f4:	ldr	x0, [sp, #40]
   270f8:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   270fc:	mov	w1, w0
   27100:	add	x0, sp, #0x3c
   27104:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27108:	and	w0, w0, #0xff
   2710c:	eor	w0, w0, #0x1
   27110:	and	w0, w0, #0xff
   27114:	cmp	w0, #0x0
   27118:	b.eq	27124 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x221b4>  // b.none
   2711c:	mov	w0, #0x0                   	// #0
   27120:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27124:	mov	w2, #0x5                   	// #5
   27128:	mov	w1, #0x5                   	// #5
   2712c:	ldr	w0, [sp, #52]
   27130:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27134:	str	w0, [sp, #3772]
   27138:	ldr	x3, [sp, #24]
   2713c:	ldr	x2, [sp, #32]
   27140:	ldr	w1, [sp, #3772]
   27144:	ldr	x0, [sp, #40]
   27148:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   2714c:	mov	w1, w0
   27150:	add	x0, sp, #0x3c
   27154:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27158:	and	w0, w0, #0xff
   2715c:	eor	w0, w0, #0x1
   27160:	and	w0, w0, #0xff
   27164:	cmp	w0, #0x0
   27168:	b.eq	27174 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22204>  // b.none
   2716c:	mov	w0, #0x0                   	// #0
   27170:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27174:	ldr	w0, [sp, #60]
   27178:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2717c:	mov	w2, #0x5                   	// #5
   27180:	mov	w1, #0x0                   	// #0
   27184:	ldr	w0, [sp, #52]
   27188:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2718c:	str	w0, [sp, #3772]
   27190:	ldr	x3, [sp, #24]
   27194:	ldr	x2, [sp, #32]
   27198:	ldr	w1, [sp, #3772]
   2719c:	ldr	x0, [sp, #40]
   271a0:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   271a4:	mov	w1, w0
   271a8:	add	x0, sp, #0x3c
   271ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   271b0:	and	w0, w0, #0xff
   271b4:	eor	w0, w0, #0x1
   271b8:	and	w0, w0, #0xff
   271bc:	cmp	w0, #0x0
   271c0:	b.eq	271cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2225c>  // b.none
   271c4:	mov	w0, #0x0                   	// #0
   271c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   271cc:	mov	w2, #0x5                   	// #5
   271d0:	mov	w1, #0x0                   	// #0
   271d4:	ldr	w0, [sp, #52]
   271d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   271dc:	str	w0, [sp, #3772]
   271e0:	ldr	x3, [sp, #24]
   271e4:	ldr	x2, [sp, #32]
   271e8:	ldr	w1, [sp, #3772]
   271ec:	ldr	x0, [sp, #40]
   271f0:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   271f4:	mov	w1, w0
   271f8:	add	x0, sp, #0x3c
   271fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27200:	and	w0, w0, #0xff
   27204:	eor	w0, w0, #0x1
   27208:	and	w0, w0, #0xff
   2720c:	cmp	w0, #0x0
   27210:	b.eq	2721c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x222ac>  // b.none
   27214:	mov	w0, #0x0                   	// #0
   27218:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2721c:	mov	w2, #0x5                   	// #5
   27220:	mov	w1, #0x5                   	// #5
   27224:	ldr	w0, [sp, #52]
   27228:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2722c:	str	w0, [sp, #3772]
   27230:	ldr	x3, [sp, #24]
   27234:	ldr	x2, [sp, #32]
   27238:	ldr	w1, [sp, #3772]
   2723c:	ldr	x0, [sp, #40]
   27240:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   27244:	mov	w1, w0
   27248:	add	x0, sp, #0x3c
   2724c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27250:	and	w0, w0, #0xff
   27254:	eor	w0, w0, #0x1
   27258:	and	w0, w0, #0xff
   2725c:	cmp	w0, #0x0
   27260:	b.eq	2726c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x222fc>  // b.none
   27264:	mov	w0, #0x0                   	// #0
   27268:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2726c:	mov	w2, #0x5                   	// #5
   27270:	mov	w1, #0x10                  	// #16
   27274:	ldr	w0, [sp, #52]
   27278:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2727c:	str	w0, [sp, #3772]
   27280:	ldr	x3, [sp, #24]
   27284:	ldr	x2, [sp, #32]
   27288:	ldr	w1, [sp, #3772]
   2728c:	ldr	x0, [sp, #40]
   27290:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   27294:	mov	w1, w0
   27298:	add	x0, sp, #0x3c
   2729c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   272a0:	and	w0, w0, #0xff
   272a4:	eor	w0, w0, #0x1
   272a8:	and	w0, w0, #0xff
   272ac:	cmp	w0, #0x0
   272b0:	b.eq	272bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2234c>  // b.none
   272b4:	mov	w0, #0x0                   	// #0
   272b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   272bc:	ldr	w0, [sp, #60]
   272c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   272c4:	mov	w2, #0x5                   	// #5
   272c8:	mov	w1, #0x0                   	// #0
   272cc:	ldr	w0, [sp, #52]
   272d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   272d4:	str	w0, [sp, #3772]
   272d8:	ldr	x3, [sp, #24]
   272dc:	ldr	x2, [sp, #32]
   272e0:	ldr	w1, [sp, #3772]
   272e4:	ldr	x0, [sp, #40]
   272e8:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   272ec:	mov	w1, w0
   272f0:	add	x0, sp, #0x3c
   272f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   272f8:	and	w0, w0, #0xff
   272fc:	eor	w0, w0, #0x1
   27300:	and	w0, w0, #0xff
   27304:	cmp	w0, #0x0
   27308:	b.eq	27314 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x223a4>  // b.none
   2730c:	mov	w0, #0x0                   	// #0
   27310:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27314:	mov	w2, #0x5                   	// #5
   27318:	mov	w1, #0x0                   	// #0
   2731c:	ldr	w0, [sp, #52]
   27320:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27324:	str	w0, [sp, #3772]
   27328:	ldr	x3, [sp, #24]
   2732c:	ldr	x2, [sp, #32]
   27330:	ldr	w1, [sp, #3772]
   27334:	ldr	x0, [sp, #40]
   27338:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2733c:	mov	w1, w0
   27340:	add	x0, sp, #0x3c
   27344:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27348:	and	w0, w0, #0xff
   2734c:	eor	w0, w0, #0x1
   27350:	and	w0, w0, #0xff
   27354:	cmp	w0, #0x0
   27358:	b.eq	27364 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x223f4>  // b.none
   2735c:	mov	w0, #0x0                   	// #0
   27360:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27364:	mov	w2, #0x5                   	// #5
   27368:	mov	w1, #0x5                   	// #5
   2736c:	ldr	w0, [sp, #52]
   27370:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27374:	str	w0, [sp, #3772]
   27378:	ldr	x3, [sp, #24]
   2737c:	ldr	x2, [sp, #32]
   27380:	ldr	w1, [sp, #3772]
   27384:	ldr	x0, [sp, #40]
   27388:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2738c:	mov	w1, w0
   27390:	add	x0, sp, #0x3c
   27394:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27398:	and	w0, w0, #0xff
   2739c:	eor	w0, w0, #0x1
   273a0:	and	w0, w0, #0xff
   273a4:	cmp	w0, #0x0
   273a8:	b.eq	273b4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22444>  // b.none
   273ac:	mov	w0, #0x0                   	// #0
   273b0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   273b4:	mov	w2, #0x5                   	// #5
   273b8:	mov	w1, #0x10                  	// #16
   273bc:	ldr	w0, [sp, #52]
   273c0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   273c4:	str	w0, [sp, #3772]
   273c8:	ldr	x3, [sp, #24]
   273cc:	ldr	x2, [sp, #32]
   273d0:	ldr	w1, [sp, #3772]
   273d4:	ldr	x0, [sp, #40]
   273d8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   273dc:	mov	w1, w0
   273e0:	add	x0, sp, #0x3c
   273e4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   273e8:	and	w0, w0, #0xff
   273ec:	eor	w0, w0, #0x1
   273f0:	and	w0, w0, #0xff
   273f4:	cmp	w0, #0x0
   273f8:	b.eq	27404 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22494>  // b.none
   273fc:	mov	w0, #0x0                   	// #0
   27400:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27404:	ldr	w0, [sp, #60]
   27408:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2740c:	mov	w2, #0x5                   	// #5
   27410:	mov	w1, #0x0                   	// #0
   27414:	ldr	w0, [sp, #52]
   27418:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2741c:	str	w0, [sp, #3772]
   27420:	ldr	x3, [sp, #24]
   27424:	ldr	x2, [sp, #32]
   27428:	ldr	w1, [sp, #3772]
   2742c:	ldr	x0, [sp, #40]
   27430:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   27434:	mov	w1, w0
   27438:	add	x0, sp, #0x3c
   2743c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27440:	and	w0, w0, #0xff
   27444:	eor	w0, w0, #0x1
   27448:	and	w0, w0, #0xff
   2744c:	cmp	w0, #0x0
   27450:	b.eq	2745c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x224ec>  // b.none
   27454:	mov	w0, #0x0                   	// #0
   27458:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2745c:	mov	w2, #0x5                   	// #5
   27460:	mov	w1, #0x5                   	// #5
   27464:	ldr	w0, [sp, #52]
   27468:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2746c:	str	w0, [sp, #3772]
   27470:	ldr	x3, [sp, #24]
   27474:	ldr	x2, [sp, #32]
   27478:	ldr	w1, [sp, #3772]
   2747c:	ldr	x0, [sp, #40]
   27480:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   27484:	mov	w1, w0
   27488:	add	x0, sp, #0x3c
   2748c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27490:	and	w0, w0, #0xff
   27494:	eor	w0, w0, #0x1
   27498:	and	w0, w0, #0xff
   2749c:	cmp	w0, #0x0
   274a0:	b.eq	274ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2253c>  // b.none
   274a4:	mov	w0, #0x0                   	// #0
   274a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   274ac:	mov	w2, #0x5                   	// #5
   274b0:	mov	w1, #0x10                  	// #16
   274b4:	ldr	w0, [sp, #52]
   274b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   274bc:	str	w0, [sp, #3772]
   274c0:	ldr	x3, [sp, #24]
   274c4:	ldr	x2, [sp, #32]
   274c8:	ldr	w1, [sp, #3772]
   274cc:	ldr	x0, [sp, #40]
   274d0:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   274d4:	mov	w1, w0
   274d8:	add	x0, sp, #0x3c
   274dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   274e0:	and	w0, w0, #0xff
   274e4:	eor	w0, w0, #0x1
   274e8:	and	w0, w0, #0xff
   274ec:	cmp	w0, #0x0
   274f0:	b.eq	274fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2258c>  // b.none
   274f4:	mov	w0, #0x0                   	// #0
   274f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   274fc:	ldr	w0, [sp, #60]
   27500:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27504:	mov	w2, #0x5                   	// #5
   27508:	mov	w1, #0x0                   	// #0
   2750c:	ldr	w0, [sp, #52]
   27510:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27514:	str	w0, [sp, #3772]
   27518:	ldr	x3, [sp, #24]
   2751c:	ldr	x2, [sp, #32]
   27520:	ldr	w1, [sp, #3772]
   27524:	ldr	x0, [sp, #40]
   27528:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2752c:	mov	w1, w0
   27530:	add	x0, sp, #0x3c
   27534:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27538:	and	w0, w0, #0xff
   2753c:	eor	w0, w0, #0x1
   27540:	and	w0, w0, #0xff
   27544:	cmp	w0, #0x0
   27548:	b.eq	27554 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x225e4>  // b.none
   2754c:	mov	w0, #0x0                   	// #0
   27550:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27554:	mov	w2, #0x5                   	// #5
   27558:	mov	w1, #0x5                   	// #5
   2755c:	ldr	w0, [sp, #52]
   27560:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27564:	str	w0, [sp, #3772]
   27568:	ldr	x3, [sp, #24]
   2756c:	ldr	x2, [sp, #32]
   27570:	ldr	w1, [sp, #3772]
   27574:	ldr	x0, [sp, #40]
   27578:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2757c:	mov	w1, w0
   27580:	add	x0, sp, #0x3c
   27584:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27588:	and	w0, w0, #0xff
   2758c:	eor	w0, w0, #0x1
   27590:	and	w0, w0, #0xff
   27594:	cmp	w0, #0x0
   27598:	b.eq	275a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22634>  // b.none
   2759c:	mov	w0, #0x0                   	// #0
   275a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   275a4:	mov	w2, #0x5                   	// #5
   275a8:	mov	w1, #0x10                  	// #16
   275ac:	ldr	w0, [sp, #52]
   275b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   275b4:	str	w0, [sp, #3772]
   275b8:	ldr	x3, [sp, #24]
   275bc:	ldr	x2, [sp, #32]
   275c0:	ldr	w1, [sp, #3772]
   275c4:	ldr	x0, [sp, #40]
   275c8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   275cc:	mov	w1, w0
   275d0:	add	x0, sp, #0x3c
   275d4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   275d8:	and	w0, w0, #0xff
   275dc:	eor	w0, w0, #0x1
   275e0:	and	w0, w0, #0xff
   275e4:	cmp	w0, #0x0
   275e8:	b.eq	275f4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22684>  // b.none
   275ec:	mov	w0, #0x0                   	// #0
   275f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   275f4:	ldr	w0, [sp, #60]
   275f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   275fc:	mov	w2, #0x5                   	// #5
   27600:	mov	w1, #0x0                   	// #0
   27604:	ldr	w0, [sp, #52]
   27608:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2760c:	str	w0, [sp, #3772]
   27610:	ldr	x3, [sp, #24]
   27614:	ldr	x2, [sp, #32]
   27618:	ldr	w1, [sp, #3772]
   2761c:	ldr	x0, [sp, #40]
   27620:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   27624:	mov	w1, w0
   27628:	add	x0, sp, #0x3c
   2762c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27630:	and	w0, w0, #0xff
   27634:	eor	w0, w0, #0x1
   27638:	and	w0, w0, #0xff
   2763c:	cmp	w0, #0x0
   27640:	b.eq	2764c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x226dc>  // b.none
   27644:	mov	w0, #0x0                   	// #0
   27648:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2764c:	mov	w2, #0x5                   	// #5
   27650:	mov	w1, #0x5                   	// #5
   27654:	ldr	w0, [sp, #52]
   27658:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2765c:	str	w0, [sp, #3772]
   27660:	ldr	x3, [sp, #24]
   27664:	ldr	x2, [sp, #32]
   27668:	ldr	w1, [sp, #3772]
   2766c:	ldr	x0, [sp, #40]
   27670:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   27674:	mov	w1, w0
   27678:	add	x0, sp, #0x3c
   2767c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27680:	and	w0, w0, #0xff
   27684:	eor	w0, w0, #0x1
   27688:	and	w0, w0, #0xff
   2768c:	cmp	w0, #0x0
   27690:	b.eq	2769c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2272c>  // b.none
   27694:	mov	w0, #0x0                   	// #0
   27698:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2769c:	mov	w2, #0x6                   	// #6
   276a0:	mov	w1, #0x10                  	// #16
   276a4:	ldr	w0, [sp, #52]
   276a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   276ac:	str	w0, [sp, #3772]
   276b0:	ldr	x3, [sp, #24]
   276b4:	ldr	x2, [sp, #32]
   276b8:	ldr	w1, [sp, #3772]
   276bc:	ldr	x0, [sp, #40]
   276c0:	bl	1658 <_ZL20DecodeVecShiftR64ImmRN4llvm6MCInstEjmPKv>
   276c4:	mov	w1, w0
   276c8:	add	x0, sp, #0x3c
   276cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   276d0:	and	w0, w0, #0xff
   276d4:	eor	w0, w0, #0x1
   276d8:	and	w0, w0, #0xff
   276dc:	cmp	w0, #0x0
   276e0:	b.eq	276ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2277c>  // b.none
   276e4:	mov	w0, #0x0                   	// #0
   276e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   276ec:	ldr	w0, [sp, #60]
   276f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   276f4:	mov	w2, #0x5                   	// #5
   276f8:	mov	w1, #0x0                   	// #0
   276fc:	ldr	w0, [sp, #52]
   27700:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27704:	str	w0, [sp, #3772]
   27708:	ldr	x3, [sp, #24]
   2770c:	ldr	x2, [sp, #32]
   27710:	ldr	w1, [sp, #3772]
   27714:	ldr	x0, [sp, #40]
   27718:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   2771c:	mov	w1, w0
   27720:	add	x0, sp, #0x3c
   27724:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27728:	and	w0, w0, #0xff
   2772c:	eor	w0, w0, #0x1
   27730:	and	w0, w0, #0xff
   27734:	cmp	w0, #0x0
   27738:	b.eq	27744 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x227d4>  // b.none
   2773c:	mov	w0, #0x0                   	// #0
   27740:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27744:	mov	w2, #0x5                   	// #5
   27748:	mov	w1, #0x0                   	// #0
   2774c:	ldr	w0, [sp, #52]
   27750:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27754:	str	w0, [sp, #3772]
   27758:	ldr	x3, [sp, #24]
   2775c:	ldr	x2, [sp, #32]
   27760:	ldr	w1, [sp, #3772]
   27764:	ldr	x0, [sp, #40]
   27768:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   2776c:	mov	w1, w0
   27770:	add	x0, sp, #0x3c
   27774:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27778:	and	w0, w0, #0xff
   2777c:	eor	w0, w0, #0x1
   27780:	and	w0, w0, #0xff
   27784:	cmp	w0, #0x0
   27788:	b.eq	27794 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22824>  // b.none
   2778c:	mov	w0, #0x0                   	// #0
   27790:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27794:	mov	w2, #0x5                   	// #5
   27798:	mov	w1, #0x5                   	// #5
   2779c:	ldr	w0, [sp, #52]
   277a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   277a4:	str	w0, [sp, #3772]
   277a8:	ldr	x3, [sp, #24]
   277ac:	ldr	x2, [sp, #32]
   277b0:	ldr	w1, [sp, #3772]
   277b4:	ldr	x0, [sp, #40]
   277b8:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   277bc:	mov	w1, w0
   277c0:	add	x0, sp, #0x3c
   277c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   277c8:	and	w0, w0, #0xff
   277cc:	eor	w0, w0, #0x1
   277d0:	and	w0, w0, #0xff
   277d4:	cmp	w0, #0x0
   277d8:	b.eq	277e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22874>  // b.none
   277dc:	mov	w0, #0x0                   	// #0
   277e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   277e4:	mov	w2, #0x4                   	// #4
   277e8:	mov	w1, #0x10                  	// #16
   277ec:	ldr	w0, [sp, #52]
   277f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   277f4:	str	w0, [sp, #3772]
   277f8:	ldr	x3, [sp, #24]
   277fc:	ldr	x2, [sp, #32]
   27800:	ldr	w1, [sp, #3772]
   27804:	ldr	x0, [sp, #40]
   27808:	bl	8a8 <_ZL28DecodeFPR128_loRegisterClassRN4llvm6MCInstEjmPKv>
   2780c:	mov	w1, w0
   27810:	add	x0, sp, #0x3c
   27814:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27818:	and	w0, w0, #0xff
   2781c:	eor	w0, w0, #0x1
   27820:	and	w0, w0, #0xff
   27824:	cmp	w0, #0x0
   27828:	b.eq	27834 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x228c4>  // b.none
   2782c:	mov	w0, #0x0                   	// #0
   27830:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27834:	str	wzr, [sp, #3772]
   27838:	mov	w2, #0x1                   	// #1
   2783c:	mov	w1, #0xb                   	// #11
   27840:	ldr	w0, [sp, #52]
   27844:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27848:	lsl	w0, w0, #2
   2784c:	ldr	w1, [sp, #3772]
   27850:	orr	w0, w1, w0
   27854:	str	w0, [sp, #3772]
   27858:	mov	w2, #0x2                   	// #2
   2785c:	mov	w1, #0x14                  	// #20
   27860:	ldr	w0, [sp, #52]
   27864:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27868:	mov	w1, w0
   2786c:	ldr	w0, [sp, #3772]
   27870:	orr	w0, w0, w1
   27874:	str	w0, [sp, #3772]
   27878:	ldr	w0, [sp, #3772]
   2787c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   27880:	add	x2, sp, #0xe00
   27884:	stp	x0, x1, [x2, #24]
   27888:	add	x0, sp, #0xe18
   2788c:	mov	x1, x0
   27890:	ldr	x0, [sp, #40]
   27894:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   27898:	ldr	w0, [sp, #60]
   2789c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   278a0:	mov	w2, #0x5                   	// #5
   278a4:	mov	w1, #0x0                   	// #0
   278a8:	ldr	w0, [sp, #52]
   278ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   278b0:	str	w0, [sp, #3772]
   278b4:	ldr	x3, [sp, #24]
   278b8:	ldr	x2, [sp, #32]
   278bc:	ldr	w1, [sp, #3772]
   278c0:	ldr	x0, [sp, #40]
   278c4:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   278c8:	mov	w1, w0
   278cc:	add	x0, sp, #0x3c
   278d0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   278d4:	and	w0, w0, #0xff
   278d8:	eor	w0, w0, #0x1
   278dc:	and	w0, w0, #0xff
   278e0:	cmp	w0, #0x0
   278e4:	b.eq	278f0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22980>  // b.none
   278e8:	mov	w0, #0x0                   	// #0
   278ec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   278f0:	mov	w2, #0x5                   	// #5
   278f4:	mov	w1, #0x0                   	// #0
   278f8:	ldr	w0, [sp, #52]
   278fc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27900:	str	w0, [sp, #3772]
   27904:	ldr	x3, [sp, #24]
   27908:	ldr	x2, [sp, #32]
   2790c:	ldr	w1, [sp, #3772]
   27910:	ldr	x0, [sp, #40]
   27914:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   27918:	mov	w1, w0
   2791c:	add	x0, sp, #0x3c
   27920:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27924:	and	w0, w0, #0xff
   27928:	eor	w0, w0, #0x1
   2792c:	and	w0, w0, #0xff
   27930:	cmp	w0, #0x0
   27934:	b.eq	27940 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x229d0>  // b.none
   27938:	mov	w0, #0x0                   	// #0
   2793c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27940:	mov	w2, #0x5                   	// #5
   27944:	mov	w1, #0x5                   	// #5
   27948:	ldr	w0, [sp, #52]
   2794c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27950:	str	w0, [sp, #3772]
   27954:	ldr	x3, [sp, #24]
   27958:	ldr	x2, [sp, #32]
   2795c:	ldr	w1, [sp, #3772]
   27960:	ldr	x0, [sp, #40]
   27964:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   27968:	mov	w1, w0
   2796c:	add	x0, sp, #0x3c
   27970:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27974:	and	w0, w0, #0xff
   27978:	eor	w0, w0, #0x1
   2797c:	and	w0, w0, #0xff
   27980:	cmp	w0, #0x0
   27984:	b.eq	27990 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22a20>  // b.none
   27988:	mov	w0, #0x0                   	// #0
   2798c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27990:	mov	w2, #0x6                   	// #6
   27994:	mov	w1, #0x10                  	// #16
   27998:	ldr	w0, [sp, #52]
   2799c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   279a0:	str	w0, [sp, #3772]
   279a4:	ldr	x3, [sp, #24]
   279a8:	ldr	x2, [sp, #32]
   279ac:	ldr	w1, [sp, #3772]
   279b0:	ldr	x0, [sp, #40]
   279b4:	bl	1658 <_ZL20DecodeVecShiftR64ImmRN4llvm6MCInstEjmPKv>
   279b8:	mov	w1, w0
   279bc:	add	x0, sp, #0x3c
   279c0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   279c4:	and	w0, w0, #0xff
   279c8:	eor	w0, w0, #0x1
   279cc:	and	w0, w0, #0xff
   279d0:	cmp	w0, #0x0
   279d4:	b.eq	279e0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22a70>  // b.none
   279d8:	mov	w0, #0x0                   	// #0
   279dc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   279e0:	ldr	w0, [sp, #60]
   279e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   279e8:	mov	w2, #0x5                   	// #5
   279ec:	mov	w1, #0x0                   	// #0
   279f0:	ldr	w0, [sp, #52]
   279f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   279f8:	str	w0, [sp, #3772]
   279fc:	ldr	x3, [sp, #24]
   27a00:	ldr	x2, [sp, #32]
   27a04:	ldr	w1, [sp, #3772]
   27a08:	ldr	x0, [sp, #40]
   27a0c:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   27a10:	mov	w1, w0
   27a14:	add	x0, sp, #0x3c
   27a18:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27a1c:	and	w0, w0, #0xff
   27a20:	eor	w0, w0, #0x1
   27a24:	and	w0, w0, #0xff
   27a28:	cmp	w0, #0x0
   27a2c:	b.eq	27a38 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22ac8>  // b.none
   27a30:	mov	w0, #0x0                   	// #0
   27a34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27a38:	mov	w2, #0x5                   	// #5
   27a3c:	mov	w1, #0x0                   	// #0
   27a40:	ldr	w0, [sp, #52]
   27a44:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27a48:	str	w0, [sp, #3772]
   27a4c:	ldr	x3, [sp, #24]
   27a50:	ldr	x2, [sp, #32]
   27a54:	ldr	w1, [sp, #3772]
   27a58:	ldr	x0, [sp, #40]
   27a5c:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   27a60:	mov	w1, w0
   27a64:	add	x0, sp, #0x3c
   27a68:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27a6c:	and	w0, w0, #0xff
   27a70:	eor	w0, w0, #0x1
   27a74:	and	w0, w0, #0xff
   27a78:	cmp	w0, #0x0
   27a7c:	b.eq	27a88 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22b18>  // b.none
   27a80:	mov	w0, #0x0                   	// #0
   27a84:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27a88:	mov	w2, #0x5                   	// #5
   27a8c:	mov	w1, #0x5                   	// #5
   27a90:	ldr	w0, [sp, #52]
   27a94:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27a98:	str	w0, [sp, #3772]
   27a9c:	ldr	x3, [sp, #24]
   27aa0:	ldr	x2, [sp, #32]
   27aa4:	ldr	w1, [sp, #3772]
   27aa8:	ldr	x0, [sp, #40]
   27aac:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   27ab0:	mov	w1, w0
   27ab4:	add	x0, sp, #0x3c
   27ab8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27abc:	and	w0, w0, #0xff
   27ac0:	eor	w0, w0, #0x1
   27ac4:	and	w0, w0, #0xff
   27ac8:	cmp	w0, #0x0
   27acc:	b.eq	27ad8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22b68>  // b.none
   27ad0:	mov	w0, #0x0                   	// #0
   27ad4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27ad8:	mov	w2, #0x5                   	// #5
   27adc:	mov	w1, #0x10                  	// #16
   27ae0:	ldr	w0, [sp, #52]
   27ae4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27ae8:	str	w0, [sp, #3772]
   27aec:	ldr	x3, [sp, #24]
   27af0:	ldr	x2, [sp, #32]
   27af4:	ldr	w1, [sp, #3772]
   27af8:	ldr	x0, [sp, #40]
   27afc:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   27b00:	mov	w1, w0
   27b04:	add	x0, sp, #0x3c
   27b08:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27b0c:	and	w0, w0, #0xff
   27b10:	eor	w0, w0, #0x1
   27b14:	and	w0, w0, #0xff
   27b18:	cmp	w0, #0x0
   27b1c:	b.eq	27b28 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22bb8>  // b.none
   27b20:	mov	w0, #0x0                   	// #0
   27b24:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27b28:	str	wzr, [sp, #3772]
   27b2c:	mov	w2, #0x1                   	// #1
   27b30:	mov	w1, #0xb                   	// #11
   27b34:	ldr	w0, [sp, #52]
   27b38:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27b3c:	lsl	w0, w0, #1
   27b40:	ldr	w1, [sp, #3772]
   27b44:	orr	w0, w1, w0
   27b48:	str	w0, [sp, #3772]
   27b4c:	mov	w2, #0x1                   	// #1
   27b50:	mov	w1, #0x15                  	// #21
   27b54:	ldr	w0, [sp, #52]
   27b58:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27b5c:	mov	w1, w0
   27b60:	ldr	w0, [sp, #3772]
   27b64:	orr	w0, w0, w1
   27b68:	str	w0, [sp, #3772]
   27b6c:	ldr	w0, [sp, #3772]
   27b70:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   27b74:	add	x2, sp, #0xe00
   27b78:	stp	x0, x1, [x2, #40]
   27b7c:	add	x0, sp, #0xe28
   27b80:	mov	x1, x0
   27b84:	ldr	x0, [sp, #40]
   27b88:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   27b8c:	ldr	w0, [sp, #60]
   27b90:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27b94:	mov	w2, #0x5                   	// #5
   27b98:	mov	w1, #0x0                   	// #0
   27b9c:	ldr	w0, [sp, #52]
   27ba0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27ba4:	str	w0, [sp, #3772]
   27ba8:	ldr	x3, [sp, #24]
   27bac:	ldr	x2, [sp, #32]
   27bb0:	ldr	w1, [sp, #3772]
   27bb4:	ldr	x0, [sp, #40]
   27bb8:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   27bbc:	mov	w1, w0
   27bc0:	add	x0, sp, #0x3c
   27bc4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27bc8:	and	w0, w0, #0xff
   27bcc:	eor	w0, w0, #0x1
   27bd0:	and	w0, w0, #0xff
   27bd4:	cmp	w0, #0x0
   27bd8:	b.eq	27be4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22c74>  // b.none
   27bdc:	mov	w0, #0x0                   	// #0
   27be0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27be4:	mov	w2, #0x5                   	// #5
   27be8:	mov	w1, #0x0                   	// #0
   27bec:	ldr	w0, [sp, #52]
   27bf0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27bf4:	str	w0, [sp, #3772]
   27bf8:	ldr	x3, [sp, #24]
   27bfc:	ldr	x2, [sp, #32]
   27c00:	ldr	w1, [sp, #3772]
   27c04:	ldr	x0, [sp, #40]
   27c08:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   27c0c:	mov	w1, w0
   27c10:	add	x0, sp, #0x3c
   27c14:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27c18:	and	w0, w0, #0xff
   27c1c:	eor	w0, w0, #0x1
   27c20:	and	w0, w0, #0xff
   27c24:	cmp	w0, #0x0
   27c28:	b.eq	27c34 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22cc4>  // b.none
   27c2c:	mov	w0, #0x0                   	// #0
   27c30:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27c34:	mov	w2, #0x5                   	// #5
   27c38:	mov	w1, #0x5                   	// #5
   27c3c:	ldr	w0, [sp, #52]
   27c40:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27c44:	str	w0, [sp, #3772]
   27c48:	ldr	x3, [sp, #24]
   27c4c:	ldr	x2, [sp, #32]
   27c50:	ldr	w1, [sp, #3772]
   27c54:	ldr	x0, [sp, #40]
   27c58:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   27c5c:	mov	w1, w0
   27c60:	add	x0, sp, #0x3c
   27c64:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27c68:	and	w0, w0, #0xff
   27c6c:	eor	w0, w0, #0x1
   27c70:	and	w0, w0, #0xff
   27c74:	cmp	w0, #0x0
   27c78:	b.eq	27c84 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22d14>  // b.none
   27c7c:	mov	w0, #0x0                   	// #0
   27c80:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27c84:	mov	w2, #0x5                   	// #5
   27c88:	mov	w1, #0x10                  	// #16
   27c8c:	ldr	w0, [sp, #52]
   27c90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27c94:	str	w0, [sp, #3772]
   27c98:	ldr	x3, [sp, #24]
   27c9c:	ldr	x2, [sp, #32]
   27ca0:	ldr	w1, [sp, #3772]
   27ca4:	ldr	x0, [sp, #40]
   27ca8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   27cac:	mov	w1, w0
   27cb0:	add	x0, sp, #0x3c
   27cb4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27cb8:	and	w0, w0, #0xff
   27cbc:	eor	w0, w0, #0x1
   27cc0:	and	w0, w0, #0xff
   27cc4:	cmp	w0, #0x0
   27cc8:	b.eq	27cd4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22d64>  // b.none
   27ccc:	mov	w0, #0x0                   	// #0
   27cd0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27cd4:	mov	w2, #0x1                   	// #1
   27cd8:	mov	w1, #0xb                   	// #11
   27cdc:	ldr	w0, [sp, #52]
   27ce0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27ce4:	str	w0, [sp, #3772]
   27ce8:	ldr	w0, [sp, #3772]
   27cec:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   27cf0:	add	x2, sp, #0xe00
   27cf4:	stp	x0, x1, [x2, #56]
   27cf8:	add	x0, sp, #0xe38
   27cfc:	mov	x1, x0
   27d00:	ldr	x0, [sp, #40]
   27d04:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   27d08:	ldr	w0, [sp, #60]
   27d0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27d10:	mov	w2, #0x5                   	// #5
   27d14:	mov	w1, #0x0                   	// #0
   27d18:	ldr	w0, [sp, #52]
   27d1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27d20:	str	w0, [sp, #3772]
   27d24:	ldr	x3, [sp, #24]
   27d28:	ldr	x2, [sp, #32]
   27d2c:	ldr	w1, [sp, #3772]
   27d30:	ldr	x0, [sp, #40]
   27d34:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   27d38:	mov	w1, w0
   27d3c:	add	x0, sp, #0x3c
   27d40:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27d44:	and	w0, w0, #0xff
   27d48:	eor	w0, w0, #0x1
   27d4c:	and	w0, w0, #0xff
   27d50:	cmp	w0, #0x0
   27d54:	b.eq	27d60 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22df0>  // b.none
   27d58:	mov	w0, #0x0                   	// #0
   27d5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27d60:	mov	w2, #0x5                   	// #5
   27d64:	mov	w1, #0x0                   	// #0
   27d68:	ldr	w0, [sp, #52]
   27d6c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27d70:	str	w0, [sp, #3772]
   27d74:	ldr	x3, [sp, #24]
   27d78:	ldr	x2, [sp, #32]
   27d7c:	ldr	w1, [sp, #3772]
   27d80:	ldr	x0, [sp, #40]
   27d84:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   27d88:	mov	w1, w0
   27d8c:	add	x0, sp, #0x3c
   27d90:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27d94:	and	w0, w0, #0xff
   27d98:	eor	w0, w0, #0x1
   27d9c:	and	w0, w0, #0xff
   27da0:	cmp	w0, #0x0
   27da4:	b.eq	27db0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22e40>  // b.none
   27da8:	mov	w0, #0x0                   	// #0
   27dac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27db0:	mov	w2, #0x5                   	// #5
   27db4:	mov	w1, #0x5                   	// #5
   27db8:	ldr	w0, [sp, #52]
   27dbc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27dc0:	str	w0, [sp, #3772]
   27dc4:	ldr	x3, [sp, #24]
   27dc8:	ldr	x2, [sp, #32]
   27dcc:	ldr	w1, [sp, #3772]
   27dd0:	ldr	x0, [sp, #40]
   27dd4:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   27dd8:	mov	w1, w0
   27ddc:	add	x0, sp, #0x3c
   27de0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27de4:	and	w0, w0, #0xff
   27de8:	eor	w0, w0, #0x1
   27dec:	and	w0, w0, #0xff
   27df0:	cmp	w0, #0x0
   27df4:	b.eq	27e00 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22e90>  // b.none
   27df8:	mov	w0, #0x0                   	// #0
   27dfc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27e00:	mov	w2, #0x4                   	// #4
   27e04:	mov	w1, #0x10                  	// #16
   27e08:	ldr	w0, [sp, #52]
   27e0c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27e10:	str	w0, [sp, #3772]
   27e14:	ldr	x3, [sp, #24]
   27e18:	ldr	x2, [sp, #32]
   27e1c:	ldr	w1, [sp, #3772]
   27e20:	ldr	x0, [sp, #40]
   27e24:	bl	8a8 <_ZL28DecodeFPR128_loRegisterClassRN4llvm6MCInstEjmPKv>
   27e28:	mov	w1, w0
   27e2c:	add	x0, sp, #0x3c
   27e30:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27e34:	and	w0, w0, #0xff
   27e38:	eor	w0, w0, #0x1
   27e3c:	and	w0, w0, #0xff
   27e40:	cmp	w0, #0x0
   27e44:	b.eq	27e50 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22ee0>  // b.none
   27e48:	mov	w0, #0x0                   	// #0
   27e4c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27e50:	str	wzr, [sp, #3772]
   27e54:	mov	w2, #0x1                   	// #1
   27e58:	mov	w1, #0xb                   	// #11
   27e5c:	ldr	w0, [sp, #52]
   27e60:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27e64:	lsl	w0, w0, #2
   27e68:	ldr	w1, [sp, #3772]
   27e6c:	orr	w0, w1, w0
   27e70:	str	w0, [sp, #3772]
   27e74:	mov	w2, #0x2                   	// #2
   27e78:	mov	w1, #0x14                  	// #20
   27e7c:	ldr	w0, [sp, #52]
   27e80:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27e84:	mov	w1, w0
   27e88:	ldr	w0, [sp, #3772]
   27e8c:	orr	w0, w0, w1
   27e90:	str	w0, [sp, #3772]
   27e94:	ldr	w0, [sp, #3772]
   27e98:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   27e9c:	add	x2, sp, #0xe00
   27ea0:	stp	x0, x1, [x2, #72]
   27ea4:	add	x0, sp, #0xe48
   27ea8:	mov	x1, x0
   27eac:	ldr	x0, [sp, #40]
   27eb0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   27eb4:	ldr	w0, [sp, #60]
   27eb8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27ebc:	mov	w2, #0x5                   	// #5
   27ec0:	mov	w1, #0x0                   	// #0
   27ec4:	ldr	w0, [sp, #52]
   27ec8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27ecc:	str	w0, [sp, #3772]
   27ed0:	ldr	x3, [sp, #24]
   27ed4:	ldr	x2, [sp, #32]
   27ed8:	ldr	w1, [sp, #3772]
   27edc:	ldr	x0, [sp, #40]
   27ee0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   27ee4:	mov	w1, w0
   27ee8:	add	x0, sp, #0x3c
   27eec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27ef0:	and	w0, w0, #0xff
   27ef4:	eor	w0, w0, #0x1
   27ef8:	and	w0, w0, #0xff
   27efc:	cmp	w0, #0x0
   27f00:	b.eq	27f0c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22f9c>  // b.none
   27f04:	mov	w0, #0x0                   	// #0
   27f08:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27f0c:	mov	w2, #0x5                   	// #5
   27f10:	mov	w1, #0x0                   	// #0
   27f14:	ldr	w0, [sp, #52]
   27f18:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27f1c:	str	w0, [sp, #3772]
   27f20:	ldr	x3, [sp, #24]
   27f24:	ldr	x2, [sp, #32]
   27f28:	ldr	w1, [sp, #3772]
   27f2c:	ldr	x0, [sp, #40]
   27f30:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   27f34:	mov	w1, w0
   27f38:	add	x0, sp, #0x3c
   27f3c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27f40:	and	w0, w0, #0xff
   27f44:	eor	w0, w0, #0x1
   27f48:	and	w0, w0, #0xff
   27f4c:	cmp	w0, #0x0
   27f50:	b.eq	27f5c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x22fec>  // b.none
   27f54:	mov	w0, #0x0                   	// #0
   27f58:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27f5c:	mov	w2, #0x5                   	// #5
   27f60:	mov	w1, #0x5                   	// #5
   27f64:	ldr	w0, [sp, #52]
   27f68:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27f6c:	str	w0, [sp, #3772]
   27f70:	ldr	x3, [sp, #24]
   27f74:	ldr	x2, [sp, #32]
   27f78:	ldr	w1, [sp, #3772]
   27f7c:	ldr	x0, [sp, #40]
   27f80:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   27f84:	mov	w1, w0
   27f88:	add	x0, sp, #0x3c
   27f8c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27f90:	and	w0, w0, #0xff
   27f94:	eor	w0, w0, #0x1
   27f98:	and	w0, w0, #0xff
   27f9c:	cmp	w0, #0x0
   27fa0:	b.eq	27fac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2303c>  // b.none
   27fa4:	mov	w0, #0x0                   	// #0
   27fa8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27fac:	mov	w2, #0x5                   	// #5
   27fb0:	mov	w1, #0x10                  	// #16
   27fb4:	ldr	w0, [sp, #52]
   27fb8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   27fbc:	str	w0, [sp, #3772]
   27fc0:	ldr	x3, [sp, #24]
   27fc4:	ldr	x2, [sp, #32]
   27fc8:	ldr	w1, [sp, #3772]
   27fcc:	ldr	x0, [sp, #40]
   27fd0:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   27fd4:	mov	w1, w0
   27fd8:	add	x0, sp, #0x3c
   27fdc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   27fe0:	and	w0, w0, #0xff
   27fe4:	eor	w0, w0, #0x1
   27fe8:	and	w0, w0, #0xff
   27fec:	cmp	w0, #0x0
   27ff0:	b.eq	27ffc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2308c>  // b.none
   27ff4:	mov	w0, #0x0                   	// #0
   27ff8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   27ffc:	str	wzr, [sp, #3772]
   28000:	mov	w2, #0x1                   	// #1
   28004:	mov	w1, #0xb                   	// #11
   28008:	ldr	w0, [sp, #52]
   2800c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28010:	lsl	w0, w0, #1
   28014:	ldr	w1, [sp, #3772]
   28018:	orr	w0, w1, w0
   2801c:	str	w0, [sp, #3772]
   28020:	mov	w2, #0x1                   	// #1
   28024:	mov	w1, #0x15                  	// #21
   28028:	ldr	w0, [sp, #52]
   2802c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28030:	mov	w1, w0
   28034:	ldr	w0, [sp, #3772]
   28038:	orr	w0, w0, w1
   2803c:	str	w0, [sp, #3772]
   28040:	ldr	w0, [sp, #3772]
   28044:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   28048:	add	x2, sp, #0xe00
   2804c:	stp	x0, x1, [x2, #88]
   28050:	add	x0, sp, #0xe58
   28054:	mov	x1, x0
   28058:	ldr	x0, [sp, #40]
   2805c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   28060:	ldr	w0, [sp, #60]
   28064:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28068:	mov	w2, #0x5                   	// #5
   2806c:	mov	w1, #0x0                   	// #0
   28070:	ldr	w0, [sp, #52]
   28074:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28078:	str	w0, [sp, #3772]
   2807c:	ldr	x3, [sp, #24]
   28080:	ldr	x2, [sp, #32]
   28084:	ldr	w1, [sp, #3772]
   28088:	ldr	x0, [sp, #40]
   2808c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   28090:	mov	w1, w0
   28094:	add	x0, sp, #0x3c
   28098:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2809c:	and	w0, w0, #0xff
   280a0:	eor	w0, w0, #0x1
   280a4:	and	w0, w0, #0xff
   280a8:	cmp	w0, #0x0
   280ac:	b.eq	280b8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23148>  // b.none
   280b0:	mov	w0, #0x0                   	// #0
   280b4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   280b8:	mov	w2, #0x5                   	// #5
   280bc:	mov	w1, #0x5                   	// #5
   280c0:	ldr	w0, [sp, #52]
   280c4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   280c8:	str	w0, [sp, #3772]
   280cc:	ldr	x3, [sp, #24]
   280d0:	ldr	x2, [sp, #32]
   280d4:	ldr	w1, [sp, #3772]
   280d8:	ldr	x0, [sp, #40]
   280dc:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   280e0:	mov	w1, w0
   280e4:	add	x0, sp, #0x3c
   280e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   280ec:	and	w0, w0, #0xff
   280f0:	eor	w0, w0, #0x1
   280f4:	and	w0, w0, #0xff
   280f8:	cmp	w0, #0x0
   280fc:	b.eq	28108 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23198>  // b.none
   28100:	mov	w0, #0x0                   	// #0
   28104:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28108:	mov	w2, #0x6                   	// #6
   2810c:	mov	w1, #0x10                  	// #16
   28110:	ldr	w0, [sp, #52]
   28114:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28118:	str	w0, [sp, #3772]
   2811c:	ldr	x3, [sp, #24]
   28120:	ldr	x2, [sp, #32]
   28124:	ldr	w1, [sp, #3772]
   28128:	ldr	x0, [sp, #40]
   2812c:	bl	17c0 <_ZL20DecodeVecShiftL64ImmRN4llvm6MCInstEjmPKv>
   28130:	mov	w1, w0
   28134:	add	x0, sp, #0x3c
   28138:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2813c:	and	w0, w0, #0xff
   28140:	eor	w0, w0, #0x1
   28144:	and	w0, w0, #0xff
   28148:	cmp	w0, #0x0
   2814c:	b.eq	28158 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x231e8>  // b.none
   28150:	mov	w0, #0x0                   	// #0
   28154:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28158:	ldr	w0, [sp, #60]
   2815c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28160:	mov	w2, #0x5                   	// #5
   28164:	mov	w1, #0x0                   	// #0
   28168:	ldr	w0, [sp, #52]
   2816c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28170:	str	w0, [sp, #3772]
   28174:	ldr	x3, [sp, #24]
   28178:	ldr	x2, [sp, #32]
   2817c:	ldr	w1, [sp, #3772]
   28180:	ldr	x0, [sp, #40]
   28184:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   28188:	mov	w1, w0
   2818c:	add	x0, sp, #0x3c
   28190:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28194:	and	w0, w0, #0xff
   28198:	eor	w0, w0, #0x1
   2819c:	and	w0, w0, #0xff
   281a0:	cmp	w0, #0x0
   281a4:	b.eq	281b0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23240>  // b.none
   281a8:	mov	w0, #0x0                   	// #0
   281ac:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   281b0:	mov	w2, #0x5                   	// #5
   281b4:	mov	w1, #0x5                   	// #5
   281b8:	ldr	w0, [sp, #52]
   281bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   281c0:	str	w0, [sp, #3772]
   281c4:	ldr	x3, [sp, #24]
   281c8:	ldr	x2, [sp, #32]
   281cc:	ldr	w1, [sp, #3772]
   281d0:	ldr	x0, [sp, #40]
   281d4:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   281d8:	mov	w1, w0
   281dc:	add	x0, sp, #0x3c
   281e0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   281e4:	and	w0, w0, #0xff
   281e8:	eor	w0, w0, #0x1
   281ec:	and	w0, w0, #0xff
   281f0:	cmp	w0, #0x0
   281f4:	b.eq	28200 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23290>  // b.none
   281f8:	mov	w0, #0x0                   	// #0
   281fc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28200:	mov	w2, #0x3                   	// #3
   28204:	mov	w1, #0x10                  	// #16
   28208:	ldr	w0, [sp, #52]
   2820c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28210:	str	w0, [sp, #3772]
   28214:	ldr	x3, [sp, #24]
   28218:	ldr	x2, [sp, #32]
   2821c:	ldr	w1, [sp, #3772]
   28220:	ldr	x0, [sp, #40]
   28224:	bl	1850 <_ZL19DecodeVecShiftL8ImmRN4llvm6MCInstEjmPKv>
   28228:	mov	w1, w0
   2822c:	add	x0, sp, #0x3c
   28230:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28234:	and	w0, w0, #0xff
   28238:	eor	w0, w0, #0x1
   2823c:	and	w0, w0, #0xff
   28240:	cmp	w0, #0x0
   28244:	b.eq	28250 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x232e0>  // b.none
   28248:	mov	w0, #0x0                   	// #0
   2824c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28250:	ldr	w0, [sp, #60]
   28254:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28258:	mov	w2, #0x5                   	// #5
   2825c:	mov	w1, #0x0                   	// #0
   28260:	ldr	w0, [sp, #52]
   28264:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28268:	str	w0, [sp, #3772]
   2826c:	ldr	x3, [sp, #24]
   28270:	ldr	x2, [sp, #32]
   28274:	ldr	w1, [sp, #3772]
   28278:	ldr	x0, [sp, #40]
   2827c:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   28280:	mov	w1, w0
   28284:	add	x0, sp, #0x3c
   28288:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2828c:	and	w0, w0, #0xff
   28290:	eor	w0, w0, #0x1
   28294:	and	w0, w0, #0xff
   28298:	cmp	w0, #0x0
   2829c:	b.eq	282a8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23338>  // b.none
   282a0:	mov	w0, #0x0                   	// #0
   282a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   282a8:	mov	w2, #0x5                   	// #5
   282ac:	mov	w1, #0x5                   	// #5
   282b0:	ldr	w0, [sp, #52]
   282b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   282b8:	str	w0, [sp, #3772]
   282bc:	ldr	x3, [sp, #24]
   282c0:	ldr	x2, [sp, #32]
   282c4:	ldr	w1, [sp, #3772]
   282c8:	ldr	x0, [sp, #40]
   282cc:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   282d0:	mov	w1, w0
   282d4:	add	x0, sp, #0x3c
   282d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   282dc:	and	w0, w0, #0xff
   282e0:	eor	w0, w0, #0x1
   282e4:	and	w0, w0, #0xff
   282e8:	cmp	w0, #0x0
   282ec:	b.eq	282f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23388>  // b.none
   282f0:	mov	w0, #0x0                   	// #0
   282f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   282f8:	mov	w2, #0x4                   	// #4
   282fc:	mov	w1, #0x10                  	// #16
   28300:	ldr	w0, [sp, #52]
   28304:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28308:	str	w0, [sp, #3772]
   2830c:	ldr	x3, [sp, #24]
   28310:	ldr	x2, [sp, #32]
   28314:	ldr	w1, [sp, #3772]
   28318:	ldr	x0, [sp, #40]
   2831c:	bl	1820 <_ZL20DecodeVecShiftL16ImmRN4llvm6MCInstEjmPKv>
   28320:	mov	w1, w0
   28324:	add	x0, sp, #0x3c
   28328:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2832c:	and	w0, w0, #0xff
   28330:	eor	w0, w0, #0x1
   28334:	and	w0, w0, #0xff
   28338:	cmp	w0, #0x0
   2833c:	b.eq	28348 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x233d8>  // b.none
   28340:	mov	w0, #0x0                   	// #0
   28344:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28348:	ldr	w0, [sp, #60]
   2834c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28350:	mov	w2, #0x5                   	// #5
   28354:	mov	w1, #0x0                   	// #0
   28358:	ldr	w0, [sp, #52]
   2835c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28360:	str	w0, [sp, #3772]
   28364:	ldr	x3, [sp, #24]
   28368:	ldr	x2, [sp, #32]
   2836c:	ldr	w1, [sp, #3772]
   28370:	ldr	x0, [sp, #40]
   28374:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   28378:	mov	w1, w0
   2837c:	add	x0, sp, #0x3c
   28380:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28384:	and	w0, w0, #0xff
   28388:	eor	w0, w0, #0x1
   2838c:	and	w0, w0, #0xff
   28390:	cmp	w0, #0x0
   28394:	b.eq	283a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23430>  // b.none
   28398:	mov	w0, #0x0                   	// #0
   2839c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   283a0:	mov	w2, #0x5                   	// #5
   283a4:	mov	w1, #0x5                   	// #5
   283a8:	ldr	w0, [sp, #52]
   283ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   283b0:	str	w0, [sp, #3772]
   283b4:	ldr	x3, [sp, #24]
   283b8:	ldr	x2, [sp, #32]
   283bc:	ldr	w1, [sp, #3772]
   283c0:	ldr	x0, [sp, #40]
   283c4:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   283c8:	mov	w1, w0
   283cc:	add	x0, sp, #0x3c
   283d0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   283d4:	and	w0, w0, #0xff
   283d8:	eor	w0, w0, #0x1
   283dc:	and	w0, w0, #0xff
   283e0:	cmp	w0, #0x0
   283e4:	b.eq	283f0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23480>  // b.none
   283e8:	mov	w0, #0x0                   	// #0
   283ec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   283f0:	mov	w2, #0x5                   	// #5
   283f4:	mov	w1, #0x10                  	// #16
   283f8:	ldr	w0, [sp, #52]
   283fc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28400:	str	w0, [sp, #3772]
   28404:	ldr	x3, [sp, #24]
   28408:	ldr	x2, [sp, #32]
   2840c:	ldr	w1, [sp, #3772]
   28410:	ldr	x0, [sp, #40]
   28414:	bl	17f0 <_ZL20DecodeVecShiftL32ImmRN4llvm6MCInstEjmPKv>
   28418:	mov	w1, w0
   2841c:	add	x0, sp, #0x3c
   28420:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28424:	and	w0, w0, #0xff
   28428:	eor	w0, w0, #0x1
   2842c:	and	w0, w0, #0xff
   28430:	cmp	w0, #0x0
   28434:	b.eq	28440 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x234d0>  // b.none
   28438:	mov	w0, #0x0                   	// #0
   2843c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28440:	ldr	w0, [sp, #60]
   28444:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28448:	mov	w2, #0x5                   	// #5
   2844c:	mov	w1, #0x0                   	// #0
   28450:	ldr	w0, [sp, #52]
   28454:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28458:	str	w0, [sp, #3772]
   2845c:	ldr	x3, [sp, #24]
   28460:	ldr	x2, [sp, #32]
   28464:	ldr	w1, [sp, #3772]
   28468:	ldr	x0, [sp, #40]
   2846c:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   28470:	mov	w1, w0
   28474:	add	x0, sp, #0x3c
   28478:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2847c:	and	w0, w0, #0xff
   28480:	eor	w0, w0, #0x1
   28484:	and	w0, w0, #0xff
   28488:	cmp	w0, #0x0
   2848c:	b.eq	28498 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23528>  // b.none
   28490:	mov	w0, #0x0                   	// #0
   28494:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28498:	mov	w2, #0x5                   	// #5
   2849c:	mov	w1, #0x5                   	// #5
   284a0:	ldr	w0, [sp, #52]
   284a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   284a8:	str	w0, [sp, #3772]
   284ac:	ldr	x3, [sp, #24]
   284b0:	ldr	x2, [sp, #32]
   284b4:	ldr	w1, [sp, #3772]
   284b8:	ldr	x0, [sp, #40]
   284bc:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   284c0:	mov	w1, w0
   284c4:	add	x0, sp, #0x3c
   284c8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   284cc:	and	w0, w0, #0xff
   284d0:	eor	w0, w0, #0x1
   284d4:	and	w0, w0, #0xff
   284d8:	cmp	w0, #0x0
   284dc:	b.eq	284e8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23578>  // b.none
   284e0:	mov	w0, #0x0                   	// #0
   284e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   284e8:	mov	w2, #0x4                   	// #4
   284ec:	mov	w1, #0x10                  	// #16
   284f0:	ldr	w0, [sp, #52]
   284f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   284f8:	str	w0, [sp, #3772]
   284fc:	ldr	x3, [sp, #24]
   28500:	ldr	x2, [sp, #32]
   28504:	ldr	w1, [sp, #3772]
   28508:	ldr	x0, [sp, #40]
   2850c:	bl	8a8 <_ZL28DecodeFPR128_loRegisterClassRN4llvm6MCInstEjmPKv>
   28510:	mov	w1, w0
   28514:	add	x0, sp, #0x3c
   28518:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2851c:	and	w0, w0, #0xff
   28520:	eor	w0, w0, #0x1
   28524:	and	w0, w0, #0xff
   28528:	cmp	w0, #0x0
   2852c:	b.eq	28538 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x235c8>  // b.none
   28530:	mov	w0, #0x0                   	// #0
   28534:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28538:	str	wzr, [sp, #3772]
   2853c:	mov	w2, #0x1                   	// #1
   28540:	mov	w1, #0xb                   	// #11
   28544:	ldr	w0, [sp, #52]
   28548:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2854c:	lsl	w0, w0, #2
   28550:	ldr	w1, [sp, #3772]
   28554:	orr	w0, w1, w0
   28558:	str	w0, [sp, #3772]
   2855c:	mov	w2, #0x2                   	// #2
   28560:	mov	w1, #0x14                  	// #20
   28564:	ldr	w0, [sp, #52]
   28568:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2856c:	mov	w1, w0
   28570:	ldr	w0, [sp, #3772]
   28574:	orr	w0, w0, w1
   28578:	str	w0, [sp, #3772]
   2857c:	ldr	w0, [sp, #3772]
   28580:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   28584:	add	x2, sp, #0xe00
   28588:	stp	x0, x1, [x2, #104]
   2858c:	add	x0, sp, #0xe68
   28590:	mov	x1, x0
   28594:	ldr	x0, [sp, #40]
   28598:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2859c:	ldr	w0, [sp, #60]
   285a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   285a4:	mov	w2, #0x5                   	// #5
   285a8:	mov	w1, #0x0                   	// #0
   285ac:	ldr	w0, [sp, #52]
   285b0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   285b4:	str	w0, [sp, #3772]
   285b8:	ldr	x3, [sp, #24]
   285bc:	ldr	x2, [sp, #32]
   285c0:	ldr	w1, [sp, #3772]
   285c4:	ldr	x0, [sp, #40]
   285c8:	bl	a2c <_ZL23DecodeFPR8RegisterClassRN4llvm6MCInstEjmPKv>
   285cc:	mov	w1, w0
   285d0:	add	x0, sp, #0x3c
   285d4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   285d8:	and	w0, w0, #0xff
   285dc:	eor	w0, w0, #0x1
   285e0:	and	w0, w0, #0xff
   285e4:	cmp	w0, #0x0
   285e8:	b.eq	285f4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23684>  // b.none
   285ec:	mov	w0, #0x0                   	// #0
   285f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   285f4:	mov	w2, #0x5                   	// #5
   285f8:	mov	w1, #0x5                   	// #5
   285fc:	ldr	w0, [sp, #52]
   28600:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28604:	str	w0, [sp, #3772]
   28608:	ldr	x3, [sp, #24]
   2860c:	ldr	x2, [sp, #32]
   28610:	ldr	w1, [sp, #3772]
   28614:	ldr	x0, [sp, #40]
   28618:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   2861c:	mov	w1, w0
   28620:	add	x0, sp, #0x3c
   28624:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28628:	and	w0, w0, #0xff
   2862c:	eor	w0, w0, #0x1
   28630:	and	w0, w0, #0xff
   28634:	cmp	w0, #0x0
   28638:	b.eq	28644 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x236d4>  // b.none
   2863c:	mov	w0, #0x0                   	// #0
   28640:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28644:	mov	w2, #0x3                   	// #3
   28648:	mov	w1, #0x10                  	// #16
   2864c:	ldr	w0, [sp, #52]
   28650:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28654:	str	w0, [sp, #3772]
   28658:	ldr	x3, [sp, #24]
   2865c:	ldr	x2, [sp, #32]
   28660:	ldr	w1, [sp, #3772]
   28664:	ldr	x0, [sp, #40]
   28668:	bl	1790 <_ZL19DecodeVecShiftR8ImmRN4llvm6MCInstEjmPKv>
   2866c:	mov	w1, w0
   28670:	add	x0, sp, #0x3c
   28674:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28678:	and	w0, w0, #0xff
   2867c:	eor	w0, w0, #0x1
   28680:	and	w0, w0, #0xff
   28684:	cmp	w0, #0x0
   28688:	b.eq	28694 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23724>  // b.none
   2868c:	mov	w0, #0x0                   	// #0
   28690:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28694:	ldr	w0, [sp, #60]
   28698:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2869c:	mov	w2, #0x5                   	// #5
   286a0:	mov	w1, #0x0                   	// #0
   286a4:	ldr	w0, [sp, #52]
   286a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   286ac:	str	w0, [sp, #3772]
   286b0:	ldr	x3, [sp, #24]
   286b4:	ldr	x2, [sp, #32]
   286b8:	ldr	w1, [sp, #3772]
   286bc:	ldr	x0, [sp, #40]
   286c0:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   286c4:	mov	w1, w0
   286c8:	add	x0, sp, #0x3c
   286cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   286d0:	and	w0, w0, #0xff
   286d4:	eor	w0, w0, #0x1
   286d8:	and	w0, w0, #0xff
   286dc:	cmp	w0, #0x0
   286e0:	b.eq	286ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2377c>  // b.none
   286e4:	mov	w0, #0x0                   	// #0
   286e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   286ec:	mov	w2, #0x5                   	// #5
   286f0:	mov	w1, #0x5                   	// #5
   286f4:	ldr	w0, [sp, #52]
   286f8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   286fc:	str	w0, [sp, #3772]
   28700:	ldr	x3, [sp, #24]
   28704:	ldr	x2, [sp, #32]
   28708:	ldr	w1, [sp, #3772]
   2870c:	ldr	x0, [sp, #40]
   28710:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   28714:	mov	w1, w0
   28718:	add	x0, sp, #0x3c
   2871c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28720:	and	w0, w0, #0xff
   28724:	eor	w0, w0, #0x1
   28728:	and	w0, w0, #0xff
   2872c:	cmp	w0, #0x0
   28730:	b.eq	2873c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x237cc>  // b.none
   28734:	mov	w0, #0x0                   	// #0
   28738:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2873c:	mov	w2, #0x4                   	// #4
   28740:	mov	w1, #0x10                  	// #16
   28744:	ldr	w0, [sp, #52]
   28748:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2874c:	str	w0, [sp, #3772]
   28750:	ldr	x3, [sp, #24]
   28754:	ldr	x2, [sp, #32]
   28758:	ldr	w1, [sp, #3772]
   2875c:	ldr	x0, [sp, #40]
   28760:	bl	1728 <_ZL20DecodeVecShiftR16ImmRN4llvm6MCInstEjmPKv>
   28764:	mov	w1, w0
   28768:	add	x0, sp, #0x3c
   2876c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28770:	and	w0, w0, #0xff
   28774:	eor	w0, w0, #0x1
   28778:	and	w0, w0, #0xff
   2877c:	cmp	w0, #0x0
   28780:	b.eq	2878c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2381c>  // b.none
   28784:	mov	w0, #0x0                   	// #0
   28788:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2878c:	ldr	w0, [sp, #60]
   28790:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28794:	mov	w2, #0x5                   	// #5
   28798:	mov	w1, #0x0                   	// #0
   2879c:	ldr	w0, [sp, #52]
   287a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   287a4:	str	w0, [sp, #3772]
   287a8:	ldr	x3, [sp, #24]
   287ac:	ldr	x2, [sp, #32]
   287b0:	ldr	w1, [sp, #3772]
   287b4:	ldr	x0, [sp, #40]
   287b8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   287bc:	mov	w1, w0
   287c0:	add	x0, sp, #0x3c
   287c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   287c8:	and	w0, w0, #0xff
   287cc:	eor	w0, w0, #0x1
   287d0:	and	w0, w0, #0xff
   287d4:	cmp	w0, #0x0
   287d8:	b.eq	287e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23874>  // b.none
   287dc:	mov	w0, #0x0                   	// #0
   287e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   287e4:	mov	w2, #0x5                   	// #5
   287e8:	mov	w1, #0x5                   	// #5
   287ec:	ldr	w0, [sp, #52]
   287f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   287f4:	str	w0, [sp, #3772]
   287f8:	ldr	x3, [sp, #24]
   287fc:	ldr	x2, [sp, #32]
   28800:	ldr	w1, [sp, #3772]
   28804:	ldr	x0, [sp, #40]
   28808:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2880c:	mov	w1, w0
   28810:	add	x0, sp, #0x3c
   28814:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28818:	and	w0, w0, #0xff
   2881c:	eor	w0, w0, #0x1
   28820:	and	w0, w0, #0xff
   28824:	cmp	w0, #0x0
   28828:	b.eq	28834 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x238c4>  // b.none
   2882c:	mov	w0, #0x0                   	// #0
   28830:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28834:	mov	w2, #0x5                   	// #5
   28838:	mov	w1, #0x10                  	// #16
   2883c:	ldr	w0, [sp, #52]
   28840:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28844:	str	w0, [sp, #3772]
   28848:	ldr	x3, [sp, #24]
   2884c:	ldr	x2, [sp, #32]
   28850:	ldr	w1, [sp, #3772]
   28854:	ldr	x0, [sp, #40]
   28858:	bl	16c0 <_ZL20DecodeVecShiftR32ImmRN4llvm6MCInstEjmPKv>
   2885c:	mov	w1, w0
   28860:	add	x0, sp, #0x3c
   28864:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28868:	and	w0, w0, #0xff
   2886c:	eor	w0, w0, #0x1
   28870:	and	w0, w0, #0xff
   28874:	cmp	w0, #0x0
   28878:	b.eq	28884 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23914>  // b.none
   2887c:	mov	w0, #0x0                   	// #0
   28880:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28884:	ldr	w0, [sp, #60]
   28888:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2888c:	mov	w2, #0x5                   	// #5
   28890:	mov	w1, #0x0                   	// #0
   28894:	ldr	w0, [sp, #52]
   28898:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2889c:	str	w0, [sp, #3772]
   288a0:	ldr	x3, [sp, #24]
   288a4:	ldr	x2, [sp, #32]
   288a8:	ldr	w1, [sp, #3772]
   288ac:	ldr	x0, [sp, #40]
   288b0:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   288b4:	mov	w1, w0
   288b8:	add	x0, sp, #0x3c
   288bc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   288c0:	and	w0, w0, #0xff
   288c4:	eor	w0, w0, #0x1
   288c8:	and	w0, w0, #0xff
   288cc:	cmp	w0, #0x0
   288d0:	b.eq	288dc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2396c>  // b.none
   288d4:	mov	w0, #0x0                   	// #0
   288d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   288dc:	mov	w2, #0x5                   	// #5
   288e0:	mov	w1, #0x5                   	// #5
   288e4:	ldr	w0, [sp, #52]
   288e8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   288ec:	str	w0, [sp, #3772]
   288f0:	ldr	x3, [sp, #24]
   288f4:	ldr	x2, [sp, #32]
   288f8:	ldr	w1, [sp, #3772]
   288fc:	ldr	x0, [sp, #40]
   28900:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   28904:	mov	w1, w0
   28908:	add	x0, sp, #0x3c
   2890c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28910:	and	w0, w0, #0xff
   28914:	eor	w0, w0, #0x1
   28918:	and	w0, w0, #0xff
   2891c:	cmp	w0, #0x0
   28920:	b.eq	2892c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x239bc>  // b.none
   28924:	mov	w0, #0x0                   	// #0
   28928:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2892c:	mov	w2, #0x5                   	// #5
   28930:	mov	w1, #0x10                  	// #16
   28934:	ldr	w0, [sp, #52]
   28938:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2893c:	str	w0, [sp, #3772]
   28940:	ldr	x3, [sp, #24]
   28944:	ldr	x2, [sp, #32]
   28948:	ldr	w1, [sp, #3772]
   2894c:	ldr	x0, [sp, #40]
   28950:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   28954:	mov	w1, w0
   28958:	add	x0, sp, #0x3c
   2895c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28960:	and	w0, w0, #0xff
   28964:	eor	w0, w0, #0x1
   28968:	and	w0, w0, #0xff
   2896c:	cmp	w0, #0x0
   28970:	b.eq	2897c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23a0c>  // b.none
   28974:	mov	w0, #0x0                   	// #0
   28978:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2897c:	str	wzr, [sp, #3772]
   28980:	mov	w2, #0x1                   	// #1
   28984:	mov	w1, #0xb                   	// #11
   28988:	ldr	w0, [sp, #52]
   2898c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28990:	lsl	w0, w0, #1
   28994:	ldr	w1, [sp, #3772]
   28998:	orr	w0, w1, w0
   2899c:	str	w0, [sp, #3772]
   289a0:	mov	w2, #0x1                   	// #1
   289a4:	mov	w1, #0x15                  	// #21
   289a8:	ldr	w0, [sp, #52]
   289ac:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   289b0:	mov	w1, w0
   289b4:	ldr	w0, [sp, #3772]
   289b8:	orr	w0, w0, w1
   289bc:	str	w0, [sp, #3772]
   289c0:	ldr	w0, [sp, #3772]
   289c4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   289c8:	add	x2, sp, #0xe00
   289cc:	stp	x0, x1, [x2, #120]
   289d0:	add	x0, sp, #0xe78
   289d4:	mov	x1, x0
   289d8:	ldr	x0, [sp, #40]
   289dc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   289e0:	ldr	w0, [sp, #60]
   289e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   289e8:	mov	w2, #0x5                   	// #5
   289ec:	mov	w1, #0x0                   	// #0
   289f0:	ldr	w0, [sp, #52]
   289f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   289f8:	str	w0, [sp, #3772]
   289fc:	ldr	x3, [sp, #24]
   28a00:	ldr	x2, [sp, #32]
   28a04:	ldr	w1, [sp, #3772]
   28a08:	ldr	x0, [sp, #40]
   28a0c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   28a10:	mov	w1, w0
   28a14:	add	x0, sp, #0x3c
   28a18:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28a1c:	and	w0, w0, #0xff
   28a20:	eor	w0, w0, #0x1
   28a24:	and	w0, w0, #0xff
   28a28:	cmp	w0, #0x0
   28a2c:	b.eq	28a38 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23ac8>  // b.none
   28a30:	mov	w0, #0x0                   	// #0
   28a34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28a38:	mov	w2, #0x5                   	// #5
   28a3c:	mov	w1, #0x5                   	// #5
   28a40:	ldr	w0, [sp, #52]
   28a44:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28a48:	str	w0, [sp, #3772]
   28a4c:	ldr	x3, [sp, #24]
   28a50:	ldr	x2, [sp, #32]
   28a54:	ldr	w1, [sp, #3772]
   28a58:	ldr	x0, [sp, #40]
   28a5c:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   28a60:	mov	w1, w0
   28a64:	add	x0, sp, #0x3c
   28a68:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28a6c:	and	w0, w0, #0xff
   28a70:	eor	w0, w0, #0x1
   28a74:	and	w0, w0, #0xff
   28a78:	cmp	w0, #0x0
   28a7c:	b.eq	28a88 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23b18>  // b.none
   28a80:	mov	w0, #0x0                   	// #0
   28a84:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28a88:	mov	w2, #0x5                   	// #5
   28a8c:	mov	w1, #0x10                  	// #16
   28a90:	ldr	w0, [sp, #52]
   28a94:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28a98:	str	w0, [sp, #3772]
   28a9c:	ldr	x3, [sp, #24]
   28aa0:	ldr	x2, [sp, #32]
   28aa4:	ldr	w1, [sp, #3772]
   28aa8:	ldr	x0, [sp, #40]
   28aac:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   28ab0:	mov	w1, w0
   28ab4:	add	x0, sp, #0x3c
   28ab8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28abc:	and	w0, w0, #0xff
   28ac0:	eor	w0, w0, #0x1
   28ac4:	and	w0, w0, #0xff
   28ac8:	cmp	w0, #0x0
   28acc:	b.eq	28ad8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23b68>  // b.none
   28ad0:	mov	w0, #0x0                   	// #0
   28ad4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28ad8:	mov	w2, #0x1                   	// #1
   28adc:	mov	w1, #0xb                   	// #11
   28ae0:	ldr	w0, [sp, #52]
   28ae4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28ae8:	str	w0, [sp, #3772]
   28aec:	ldr	w0, [sp, #3772]
   28af0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   28af4:	add	x2, sp, #0xe00
   28af8:	stp	x0, x1, [x2, #136]
   28afc:	add	x0, sp, #0xe88
   28b00:	mov	x1, x0
   28b04:	ldr	x0, [sp, #40]
   28b08:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   28b0c:	ldr	w0, [sp, #60]
   28b10:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28b14:	mov	w2, #0x5                   	// #5
   28b18:	mov	w1, #0x0                   	// #0
   28b1c:	ldr	w0, [sp, #52]
   28b20:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28b24:	str	w0, [sp, #3772]
   28b28:	ldr	x3, [sp, #24]
   28b2c:	ldr	x2, [sp, #32]
   28b30:	ldr	w1, [sp, #3772]
   28b34:	ldr	x0, [sp, #40]
   28b38:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   28b3c:	mov	w1, w0
   28b40:	add	x0, sp, #0x3c
   28b44:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28b48:	and	w0, w0, #0xff
   28b4c:	eor	w0, w0, #0x1
   28b50:	and	w0, w0, #0xff
   28b54:	cmp	w0, #0x0
   28b58:	b.eq	28b64 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23bf4>  // b.none
   28b5c:	mov	w0, #0x0                   	// #0
   28b60:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28b64:	mov	w2, #0x5                   	// #5
   28b68:	mov	w1, #0x5                   	// #5
   28b6c:	ldr	w0, [sp, #52]
   28b70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28b74:	str	w0, [sp, #3772]
   28b78:	ldr	x3, [sp, #24]
   28b7c:	ldr	x2, [sp, #32]
   28b80:	ldr	w1, [sp, #3772]
   28b84:	ldr	x0, [sp, #40]
   28b88:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   28b8c:	mov	w1, w0
   28b90:	add	x0, sp, #0x3c
   28b94:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28b98:	and	w0, w0, #0xff
   28b9c:	eor	w0, w0, #0x1
   28ba0:	and	w0, w0, #0xff
   28ba4:	cmp	w0, #0x0
   28ba8:	b.eq	28bb4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23c44>  // b.none
   28bac:	mov	w0, #0x0                   	// #0
   28bb0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28bb4:	mov	w2, #0x4                   	// #4
   28bb8:	mov	w1, #0x10                  	// #16
   28bbc:	ldr	w0, [sp, #52]
   28bc0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28bc4:	str	w0, [sp, #3772]
   28bc8:	ldr	x3, [sp, #24]
   28bcc:	ldr	x2, [sp, #32]
   28bd0:	ldr	w1, [sp, #3772]
   28bd4:	ldr	x0, [sp, #40]
   28bd8:	bl	8a8 <_ZL28DecodeFPR128_loRegisterClassRN4llvm6MCInstEjmPKv>
   28bdc:	mov	w1, w0
   28be0:	add	x0, sp, #0x3c
   28be4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28be8:	and	w0, w0, #0xff
   28bec:	eor	w0, w0, #0x1
   28bf0:	and	w0, w0, #0xff
   28bf4:	cmp	w0, #0x0
   28bf8:	b.eq	28c04 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23c94>  // b.none
   28bfc:	mov	w0, #0x0                   	// #0
   28c00:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28c04:	str	wzr, [sp, #3772]
   28c08:	mov	w2, #0x1                   	// #1
   28c0c:	mov	w1, #0xb                   	// #11
   28c10:	ldr	w0, [sp, #52]
   28c14:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28c18:	lsl	w0, w0, #2
   28c1c:	ldr	w1, [sp, #3772]
   28c20:	orr	w0, w1, w0
   28c24:	str	w0, [sp, #3772]
   28c28:	mov	w2, #0x2                   	// #2
   28c2c:	mov	w1, #0x14                  	// #20
   28c30:	ldr	w0, [sp, #52]
   28c34:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28c38:	mov	w1, w0
   28c3c:	ldr	w0, [sp, #3772]
   28c40:	orr	w0, w0, w1
   28c44:	str	w0, [sp, #3772]
   28c48:	ldr	w0, [sp, #3772]
   28c4c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   28c50:	add	x2, sp, #0xe00
   28c54:	stp	x0, x1, [x2, #152]
   28c58:	add	x0, sp, #0xe98
   28c5c:	mov	x1, x0
   28c60:	ldr	x0, [sp, #40]
   28c64:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   28c68:	ldr	w0, [sp, #60]
   28c6c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28c70:	mov	w2, #0x5                   	// #5
   28c74:	mov	w1, #0x0                   	// #0
   28c78:	ldr	w0, [sp, #52]
   28c7c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28c80:	str	w0, [sp, #3772]
   28c84:	ldr	x3, [sp, #24]
   28c88:	ldr	x2, [sp, #32]
   28c8c:	ldr	w1, [sp, #3772]
   28c90:	ldr	x0, [sp, #40]
   28c94:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   28c98:	mov	w1, w0
   28c9c:	add	x0, sp, #0x3c
   28ca0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28ca4:	and	w0, w0, #0xff
   28ca8:	eor	w0, w0, #0x1
   28cac:	and	w0, w0, #0xff
   28cb0:	cmp	w0, #0x0
   28cb4:	b.eq	28cc0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23d50>  // b.none
   28cb8:	mov	w0, #0x0                   	// #0
   28cbc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28cc0:	mov	w2, #0x5                   	// #5
   28cc4:	mov	w1, #0x5                   	// #5
   28cc8:	ldr	w0, [sp, #52]
   28ccc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28cd0:	str	w0, [sp, #3772]
   28cd4:	ldr	x3, [sp, #24]
   28cd8:	ldr	x2, [sp, #32]
   28cdc:	ldr	w1, [sp, #3772]
   28ce0:	ldr	x0, [sp, #40]
   28ce4:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   28ce8:	mov	w1, w0
   28cec:	add	x0, sp, #0x3c
   28cf0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28cf4:	and	w0, w0, #0xff
   28cf8:	eor	w0, w0, #0x1
   28cfc:	and	w0, w0, #0xff
   28d00:	cmp	w0, #0x0
   28d04:	b.eq	28d10 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23da0>  // b.none
   28d08:	mov	w0, #0x0                   	// #0
   28d0c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28d10:	mov	w2, #0x5                   	// #5
   28d14:	mov	w1, #0x10                  	// #16
   28d18:	ldr	w0, [sp, #52]
   28d1c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28d20:	str	w0, [sp, #3772]
   28d24:	ldr	x3, [sp, #24]
   28d28:	ldr	x2, [sp, #32]
   28d2c:	ldr	w1, [sp, #3772]
   28d30:	ldr	x0, [sp, #40]
   28d34:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   28d38:	mov	w1, w0
   28d3c:	add	x0, sp, #0x3c
   28d40:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28d44:	and	w0, w0, #0xff
   28d48:	eor	w0, w0, #0x1
   28d4c:	and	w0, w0, #0xff
   28d50:	cmp	w0, #0x0
   28d54:	b.eq	28d60 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23df0>  // b.none
   28d58:	mov	w0, #0x0                   	// #0
   28d5c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28d60:	str	wzr, [sp, #3772]
   28d64:	mov	w2, #0x1                   	// #1
   28d68:	mov	w1, #0xb                   	// #11
   28d6c:	ldr	w0, [sp, #52]
   28d70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28d74:	lsl	w0, w0, #1
   28d78:	ldr	w1, [sp, #3772]
   28d7c:	orr	w0, w1, w0
   28d80:	str	w0, [sp, #3772]
   28d84:	mov	w2, #0x1                   	// #1
   28d88:	mov	w1, #0x15                  	// #21
   28d8c:	ldr	w0, [sp, #52]
   28d90:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28d94:	mov	w1, w0
   28d98:	ldr	w0, [sp, #3772]
   28d9c:	orr	w0, w0, w1
   28da0:	str	w0, [sp, #3772]
   28da4:	ldr	w0, [sp, #3772]
   28da8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   28dac:	add	x2, sp, #0xe00
   28db0:	stp	x0, x1, [x2, #168]
   28db4:	add	x0, sp, #0xea8
   28db8:	mov	x1, x0
   28dbc:	ldr	x0, [sp, #40]
   28dc0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   28dc4:	ldr	w0, [sp, #60]
   28dc8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28dcc:	mov	w2, #0x5                   	// #5
   28dd0:	mov	w1, #0x0                   	// #0
   28dd4:	ldr	w0, [sp, #52]
   28dd8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28ddc:	str	w0, [sp, #3772]
   28de0:	ldr	x3, [sp, #24]
   28de4:	ldr	x2, [sp, #32]
   28de8:	ldr	w1, [sp, #3772]
   28dec:	ldr	x0, [sp, #40]
   28df0:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   28df4:	mov	w1, w0
   28df8:	add	x0, sp, #0x3c
   28dfc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28e00:	and	w0, w0, #0xff
   28e04:	eor	w0, w0, #0x1
   28e08:	and	w0, w0, #0xff
   28e0c:	cmp	w0, #0x0
   28e10:	b.eq	28e1c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23eac>  // b.none
   28e14:	mov	w0, #0x0                   	// #0
   28e18:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28e1c:	mov	w2, #0x5                   	// #5
   28e20:	mov	w1, #0x5                   	// #5
   28e24:	ldr	w0, [sp, #52]
   28e28:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28e2c:	str	w0, [sp, #3772]
   28e30:	ldr	x3, [sp, #24]
   28e34:	ldr	x2, [sp, #32]
   28e38:	ldr	w1, [sp, #3772]
   28e3c:	ldr	x0, [sp, #40]
   28e40:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   28e44:	mov	w1, w0
   28e48:	add	x0, sp, #0x3c
   28e4c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28e50:	and	w0, w0, #0xff
   28e54:	eor	w0, w0, #0x1
   28e58:	and	w0, w0, #0xff
   28e5c:	cmp	w0, #0x0
   28e60:	b.eq	28e6c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23efc>  // b.none
   28e64:	mov	w0, #0x0                   	// #0
   28e68:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28e6c:	mov	w2, #0x4                   	// #4
   28e70:	mov	w1, #0x10                  	// #16
   28e74:	ldr	w0, [sp, #52]
   28e78:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28e7c:	str	w0, [sp, #3772]
   28e80:	ldr	x3, [sp, #24]
   28e84:	ldr	x2, [sp, #32]
   28e88:	ldr	w1, [sp, #3772]
   28e8c:	ldr	x0, [sp, #40]
   28e90:	bl	1728 <_ZL20DecodeVecShiftR16ImmRN4llvm6MCInstEjmPKv>
   28e94:	mov	w1, w0
   28e98:	add	x0, sp, #0x3c
   28e9c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28ea0:	and	w0, w0, #0xff
   28ea4:	eor	w0, w0, #0x1
   28ea8:	and	w0, w0, #0xff
   28eac:	cmp	w0, #0x0
   28eb0:	b.eq	28ebc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23f4c>  // b.none
   28eb4:	mov	w0, #0x0                   	// #0
   28eb8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28ebc:	ldr	w0, [sp, #60]
   28ec0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28ec4:	mov	w2, #0x5                   	// #5
   28ec8:	mov	w1, #0x0                   	// #0
   28ecc:	ldr	w0, [sp, #52]
   28ed0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28ed4:	str	w0, [sp, #3772]
   28ed8:	ldr	x3, [sp, #24]
   28edc:	ldr	x2, [sp, #32]
   28ee0:	ldr	w1, [sp, #3772]
   28ee4:	ldr	x0, [sp, #40]
   28ee8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   28eec:	mov	w1, w0
   28ef0:	add	x0, sp, #0x3c
   28ef4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28ef8:	and	w0, w0, #0xff
   28efc:	eor	w0, w0, #0x1
   28f00:	and	w0, w0, #0xff
   28f04:	cmp	w0, #0x0
   28f08:	b.eq	28f14 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23fa4>  // b.none
   28f0c:	mov	w0, #0x0                   	// #0
   28f10:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28f14:	mov	w2, #0x5                   	// #5
   28f18:	mov	w1, #0x5                   	// #5
   28f1c:	ldr	w0, [sp, #52]
   28f20:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28f24:	str	w0, [sp, #3772]
   28f28:	ldr	x3, [sp, #24]
   28f2c:	ldr	x2, [sp, #32]
   28f30:	ldr	w1, [sp, #3772]
   28f34:	ldr	x0, [sp, #40]
   28f38:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   28f3c:	mov	w1, w0
   28f40:	add	x0, sp, #0x3c
   28f44:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28f48:	and	w0, w0, #0xff
   28f4c:	eor	w0, w0, #0x1
   28f50:	and	w0, w0, #0xff
   28f54:	cmp	w0, #0x0
   28f58:	b.eq	28f64 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x23ff4>  // b.none
   28f5c:	mov	w0, #0x0                   	// #0
   28f60:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28f64:	mov	w2, #0x5                   	// #5
   28f68:	mov	w1, #0x10                  	// #16
   28f6c:	ldr	w0, [sp, #52]
   28f70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28f74:	str	w0, [sp, #3772]
   28f78:	ldr	x3, [sp, #24]
   28f7c:	ldr	x2, [sp, #32]
   28f80:	ldr	w1, [sp, #3772]
   28f84:	ldr	x0, [sp, #40]
   28f88:	bl	16c0 <_ZL20DecodeVecShiftR32ImmRN4llvm6MCInstEjmPKv>
   28f8c:	mov	w1, w0
   28f90:	add	x0, sp, #0x3c
   28f94:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28f98:	and	w0, w0, #0xff
   28f9c:	eor	w0, w0, #0x1
   28fa0:	and	w0, w0, #0xff
   28fa4:	cmp	w0, #0x0
   28fa8:	b.eq	28fb4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24044>  // b.none
   28fac:	mov	w0, #0x0                   	// #0
   28fb0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28fb4:	ldr	w0, [sp, #60]
   28fb8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   28fbc:	mov	w2, #0x5                   	// #5
   28fc0:	mov	w1, #0x0                   	// #0
   28fc4:	ldr	w0, [sp, #52]
   28fc8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   28fcc:	str	w0, [sp, #3772]
   28fd0:	ldr	x3, [sp, #24]
   28fd4:	ldr	x2, [sp, #32]
   28fd8:	ldr	w1, [sp, #3772]
   28fdc:	ldr	x0, [sp, #40]
   28fe0:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   28fe4:	mov	w1, w0
   28fe8:	add	x0, sp, #0x3c
   28fec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   28ff0:	and	w0, w0, #0xff
   28ff4:	eor	w0, w0, #0x1
   28ff8:	and	w0, w0, #0xff
   28ffc:	cmp	w0, #0x0
   29000:	b.eq	2900c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2409c>  // b.none
   29004:	mov	w0, #0x0                   	// #0
   29008:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2900c:	mov	w2, #0x5                   	// #5
   29010:	mov	w1, #0x5                   	// #5
   29014:	ldr	w0, [sp, #52]
   29018:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2901c:	str	w0, [sp, #3772]
   29020:	ldr	x3, [sp, #24]
   29024:	ldr	x2, [sp, #32]
   29028:	ldr	w1, [sp, #3772]
   2902c:	ldr	x0, [sp, #40]
   29030:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   29034:	mov	w1, w0
   29038:	add	x0, sp, #0x3c
   2903c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29040:	and	w0, w0, #0xff
   29044:	eor	w0, w0, #0x1
   29048:	and	w0, w0, #0xff
   2904c:	cmp	w0, #0x0
   29050:	b.eq	2905c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x240ec>  // b.none
   29054:	mov	w0, #0x0                   	// #0
   29058:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2905c:	mov	w2, #0x5                   	// #5
   29060:	mov	w1, #0x10                  	// #16
   29064:	ldr	w0, [sp, #52]
   29068:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2906c:	str	w0, [sp, #3772]
   29070:	ldr	x3, [sp, #24]
   29074:	ldr	x2, [sp, #32]
   29078:	ldr	w1, [sp, #3772]
   2907c:	ldr	x0, [sp, #40]
   29080:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   29084:	mov	w1, w0
   29088:	add	x0, sp, #0x3c
   2908c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29090:	and	w0, w0, #0xff
   29094:	eor	w0, w0, #0x1
   29098:	and	w0, w0, #0xff
   2909c:	cmp	w0, #0x0
   290a0:	b.eq	290ac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2413c>  // b.none
   290a4:	mov	w0, #0x0                   	// #0
   290a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   290ac:	str	wzr, [sp, #3772]
   290b0:	mov	w2, #0x1                   	// #1
   290b4:	mov	w1, #0xc                   	// #12
   290b8:	ldr	w0, [sp, #52]
   290bc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   290c0:	mov	w1, w0
   290c4:	ldr	w0, [sp, #3772]
   290c8:	orr	w0, w0, w1
   290cc:	str	w0, [sp, #3772]
   290d0:	mov	w2, #0x1                   	// #1
   290d4:	mov	w1, #0xf                   	// #15
   290d8:	ldr	w0, [sp, #52]
   290dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   290e0:	lsl	w0, w0, #1
   290e4:	ldr	w1, [sp, #3772]
   290e8:	orr	w0, w1, w0
   290ec:	str	w0, [sp, #3772]
   290f0:	ldr	x3, [sp, #24]
   290f4:	ldr	x2, [sp, #32]
   290f8:	ldr	w1, [sp, #3772]
   290fc:	ldr	x0, [sp, #40]
   29100:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   29104:	mov	w1, w0
   29108:	add	x0, sp, #0x3c
   2910c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29110:	and	w0, w0, #0xff
   29114:	eor	w0, w0, #0x1
   29118:	and	w0, w0, #0xff
   2911c:	cmp	w0, #0x0
   29120:	b.eq	2912c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x241bc>  // b.none
   29124:	mov	w0, #0x0                   	// #0
   29128:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2912c:	ldr	w0, [sp, #60]
   29130:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29134:	mov	w2, #0x5                   	// #5
   29138:	mov	w1, #0x0                   	// #0
   2913c:	ldr	w0, [sp, #52]
   29140:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29144:	str	w0, [sp, #3772]
   29148:	ldr	x3, [sp, #24]
   2914c:	ldr	x2, [sp, #32]
   29150:	ldr	w1, [sp, #3772]
   29154:	ldr	x0, [sp, #40]
   29158:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   2915c:	mov	w1, w0
   29160:	add	x0, sp, #0x3c
   29164:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29168:	and	w0, w0, #0xff
   2916c:	eor	w0, w0, #0x1
   29170:	and	w0, w0, #0xff
   29174:	cmp	w0, #0x0
   29178:	b.eq	29184 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24214>  // b.none
   2917c:	mov	w0, #0x0                   	// #0
   29180:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29184:	mov	w2, #0x5                   	// #5
   29188:	mov	w1, #0x5                   	// #5
   2918c:	ldr	w0, [sp, #52]
   29190:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29194:	str	w0, [sp, #3772]
   29198:	ldr	x3, [sp, #24]
   2919c:	ldr	x2, [sp, #32]
   291a0:	ldr	w1, [sp, #3772]
   291a4:	ldr	x0, [sp, #40]
   291a8:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   291ac:	mov	w1, w0
   291b0:	add	x0, sp, #0x3c
   291b4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   291b8:	and	w0, w0, #0xff
   291bc:	eor	w0, w0, #0x1
   291c0:	and	w0, w0, #0xff
   291c4:	cmp	w0, #0x0
   291c8:	b.eq	291d4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24264>  // b.none
   291cc:	mov	w0, #0x0                   	// #0
   291d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   291d4:	mov	w2, #0x5                   	// #5
   291d8:	mov	w1, #0x10                  	// #16
   291dc:	ldr	w0, [sp, #52]
   291e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   291e4:	str	w0, [sp, #3772]
   291e8:	ldr	x3, [sp, #24]
   291ec:	ldr	x2, [sp, #32]
   291f0:	ldr	w1, [sp, #3772]
   291f4:	ldr	x0, [sp, #40]
   291f8:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   291fc:	mov	w1, w0
   29200:	add	x0, sp, #0x3c
   29204:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29208:	and	w0, w0, #0xff
   2920c:	eor	w0, w0, #0x1
   29210:	and	w0, w0, #0xff
   29214:	cmp	w0, #0x0
   29218:	b.eq	29224 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x242b4>  // b.none
   2921c:	mov	w0, #0x0                   	// #0
   29220:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29224:	str	wzr, [sp, #3772]
   29228:	mov	w2, #0x1                   	// #1
   2922c:	mov	w1, #0xc                   	// #12
   29230:	ldr	w0, [sp, #52]
   29234:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29238:	mov	w1, w0
   2923c:	ldr	w0, [sp, #3772]
   29240:	orr	w0, w0, w1
   29244:	str	w0, [sp, #3772]
   29248:	mov	w2, #0x1                   	// #1
   2924c:	mov	w1, #0xf                   	// #15
   29250:	ldr	w0, [sp, #52]
   29254:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29258:	lsl	w0, w0, #1
   2925c:	ldr	w1, [sp, #3772]
   29260:	orr	w0, w1, w0
   29264:	str	w0, [sp, #3772]
   29268:	ldr	x3, [sp, #24]
   2926c:	ldr	x2, [sp, #32]
   29270:	ldr	w1, [sp, #3772]
   29274:	ldr	x0, [sp, #40]
   29278:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   2927c:	mov	w1, w0
   29280:	add	x0, sp, #0x3c
   29284:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29288:	and	w0, w0, #0xff
   2928c:	eor	w0, w0, #0x1
   29290:	and	w0, w0, #0xff
   29294:	cmp	w0, #0x0
   29298:	b.eq	292a4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24334>  // b.none
   2929c:	mov	w0, #0x0                   	// #0
   292a0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   292a4:	ldr	w0, [sp, #60]
   292a8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   292ac:	mov	w2, #0x5                   	// #5
   292b0:	mov	w1, #0x0                   	// #0
   292b4:	ldr	w0, [sp, #52]
   292b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   292bc:	str	w0, [sp, #3772]
   292c0:	ldr	x3, [sp, #24]
   292c4:	ldr	x2, [sp, #32]
   292c8:	ldr	w1, [sp, #3772]
   292cc:	ldr	x0, [sp, #40]
   292d0:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   292d4:	mov	w1, w0
   292d8:	add	x0, sp, #0x3c
   292dc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   292e0:	and	w0, w0, #0xff
   292e4:	eor	w0, w0, #0x1
   292e8:	and	w0, w0, #0xff
   292ec:	cmp	w0, #0x0
   292f0:	b.eq	292fc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2438c>  // b.none
   292f4:	mov	w0, #0x0                   	// #0
   292f8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   292fc:	mov	w2, #0x5                   	// #5
   29300:	mov	w1, #0x0                   	// #0
   29304:	ldr	w0, [sp, #52]
   29308:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2930c:	str	w0, [sp, #3772]
   29310:	ldr	x3, [sp, #24]
   29314:	ldr	x2, [sp, #32]
   29318:	ldr	w1, [sp, #3772]
   2931c:	ldr	x0, [sp, #40]
   29320:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   29324:	mov	w1, w0
   29328:	add	x0, sp, #0x3c
   2932c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29330:	and	w0, w0, #0xff
   29334:	eor	w0, w0, #0x1
   29338:	and	w0, w0, #0xff
   2933c:	cmp	w0, #0x0
   29340:	b.eq	2934c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x243dc>  // b.none
   29344:	mov	w0, #0x0                   	// #0
   29348:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2934c:	mov	w2, #0x5                   	// #5
   29350:	mov	w1, #0x5                   	// #5
   29354:	ldr	w0, [sp, #52]
   29358:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2935c:	str	w0, [sp, #3772]
   29360:	ldr	x3, [sp, #24]
   29364:	ldr	x2, [sp, #32]
   29368:	ldr	w1, [sp, #3772]
   2936c:	ldr	x0, [sp, #40]
   29370:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   29374:	mov	w1, w0
   29378:	add	x0, sp, #0x3c
   2937c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29380:	and	w0, w0, #0xff
   29384:	eor	w0, w0, #0x1
   29388:	and	w0, w0, #0xff
   2938c:	cmp	w0, #0x0
   29390:	b.eq	2939c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2442c>  // b.none
   29394:	mov	w0, #0x0                   	// #0
   29398:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2939c:	mov	w2, #0x5                   	// #5
   293a0:	mov	w1, #0x10                  	// #16
   293a4:	ldr	w0, [sp, #52]
   293a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   293ac:	str	w0, [sp, #3772]
   293b0:	ldr	x3, [sp, #24]
   293b4:	ldr	x2, [sp, #32]
   293b8:	ldr	w1, [sp, #3772]
   293bc:	ldr	x0, [sp, #40]
   293c0:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   293c4:	mov	w1, w0
   293c8:	add	x0, sp, #0x3c
   293cc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   293d0:	and	w0, w0, #0xff
   293d4:	eor	w0, w0, #0x1
   293d8:	and	w0, w0, #0xff
   293dc:	cmp	w0, #0x0
   293e0:	b.eq	293ec <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2447c>  // b.none
   293e4:	mov	w0, #0x0                   	// #0
   293e8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   293ec:	ldr	w0, [sp, #60]
   293f0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   293f4:	mov	w2, #0x5                   	// #5
   293f8:	mov	w1, #0x0                   	// #0
   293fc:	ldr	w0, [sp, #52]
   29400:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29404:	str	w0, [sp, #3772]
   29408:	ldr	x3, [sp, #24]
   2940c:	ldr	x2, [sp, #32]
   29410:	ldr	w1, [sp, #3772]
   29414:	ldr	x0, [sp, #40]
   29418:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2941c:	mov	w1, w0
   29420:	add	x0, sp, #0x3c
   29424:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29428:	and	w0, w0, #0xff
   2942c:	eor	w0, w0, #0x1
   29430:	and	w0, w0, #0xff
   29434:	cmp	w0, #0x0
   29438:	b.eq	29444 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x244d4>  // b.none
   2943c:	mov	w0, #0x0                   	// #0
   29440:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29444:	mov	w2, #0x5                   	// #5
   29448:	mov	w1, #0x0                   	// #0
   2944c:	ldr	w0, [sp, #52]
   29450:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29454:	str	w0, [sp, #3772]
   29458:	ldr	x3, [sp, #24]
   2945c:	ldr	x2, [sp, #32]
   29460:	ldr	w1, [sp, #3772]
   29464:	ldr	x0, [sp, #40]
   29468:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2946c:	mov	w1, w0
   29470:	add	x0, sp, #0x3c
   29474:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29478:	and	w0, w0, #0xff
   2947c:	eor	w0, w0, #0x1
   29480:	and	w0, w0, #0xff
   29484:	cmp	w0, #0x0
   29488:	b.eq	29494 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24524>  // b.none
   2948c:	mov	w0, #0x0                   	// #0
   29490:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29494:	mov	w2, #0x5                   	// #5
   29498:	mov	w1, #0x5                   	// #5
   2949c:	ldr	w0, [sp, #52]
   294a0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   294a4:	str	w0, [sp, #3772]
   294a8:	ldr	x3, [sp, #24]
   294ac:	ldr	x2, [sp, #32]
   294b0:	ldr	w1, [sp, #3772]
   294b4:	ldr	x0, [sp, #40]
   294b8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   294bc:	mov	w1, w0
   294c0:	add	x0, sp, #0x3c
   294c4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   294c8:	and	w0, w0, #0xff
   294cc:	eor	w0, w0, #0x1
   294d0:	and	w0, w0, #0xff
   294d4:	cmp	w0, #0x0
   294d8:	b.eq	294e4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24574>  // b.none
   294dc:	mov	w0, #0x0                   	// #0
   294e0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   294e4:	mov	w2, #0x5                   	// #5
   294e8:	mov	w1, #0x10                  	// #16
   294ec:	ldr	w0, [sp, #52]
   294f0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   294f4:	str	w0, [sp, #3772]
   294f8:	ldr	x3, [sp, #24]
   294fc:	ldr	x2, [sp, #32]
   29500:	ldr	w1, [sp, #3772]
   29504:	ldr	x0, [sp, #40]
   29508:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2950c:	mov	w1, w0
   29510:	add	x0, sp, #0x3c
   29514:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29518:	and	w0, w0, #0xff
   2951c:	eor	w0, w0, #0x1
   29520:	and	w0, w0, #0xff
   29524:	cmp	w0, #0x0
   29528:	b.eq	29534 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x245c4>  // b.none
   2952c:	mov	w0, #0x0                   	// #0
   29530:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29534:	ldr	w0, [sp, #60]
   29538:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2953c:	mov	w2, #0x5                   	// #5
   29540:	mov	w1, #0x0                   	// #0
   29544:	ldr	w0, [sp, #52]
   29548:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2954c:	str	w0, [sp, #3772]
   29550:	ldr	x3, [sp, #24]
   29554:	ldr	x2, [sp, #32]
   29558:	ldr	w1, [sp, #3772]
   2955c:	ldr	x0, [sp, #40]
   29560:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   29564:	mov	w1, w0
   29568:	add	x0, sp, #0x3c
   2956c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29570:	and	w0, w0, #0xff
   29574:	eor	w0, w0, #0x1
   29578:	and	w0, w0, #0xff
   2957c:	cmp	w0, #0x0
   29580:	b.eq	2958c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2461c>  // b.none
   29584:	mov	w0, #0x0                   	// #0
   29588:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2958c:	mov	w2, #0x5                   	// #5
   29590:	mov	w1, #0x0                   	// #0
   29594:	ldr	w0, [sp, #52]
   29598:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2959c:	str	w0, [sp, #3772]
   295a0:	ldr	x3, [sp, #24]
   295a4:	ldr	x2, [sp, #32]
   295a8:	ldr	w1, [sp, #3772]
   295ac:	ldr	x0, [sp, #40]
   295b0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   295b4:	mov	w1, w0
   295b8:	add	x0, sp, #0x3c
   295bc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   295c0:	and	w0, w0, #0xff
   295c4:	eor	w0, w0, #0x1
   295c8:	and	w0, w0, #0xff
   295cc:	cmp	w0, #0x0
   295d0:	b.eq	295dc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2466c>  // b.none
   295d4:	mov	w0, #0x0                   	// #0
   295d8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   295dc:	mov	w2, #0x5                   	// #5
   295e0:	mov	w1, #0x5                   	// #5
   295e4:	ldr	w0, [sp, #52]
   295e8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   295ec:	str	w0, [sp, #3772]
   295f0:	ldr	x3, [sp, #24]
   295f4:	ldr	x2, [sp, #32]
   295f8:	ldr	w1, [sp, #3772]
   295fc:	ldr	x0, [sp, #40]
   29600:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   29604:	mov	w1, w0
   29608:	add	x0, sp, #0x3c
   2960c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29610:	and	w0, w0, #0xff
   29614:	eor	w0, w0, #0x1
   29618:	and	w0, w0, #0xff
   2961c:	cmp	w0, #0x0
   29620:	b.eq	2962c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x246bc>  // b.none
   29624:	mov	w0, #0x0                   	// #0
   29628:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2962c:	mov	w2, #0x6                   	// #6
   29630:	mov	w1, #0x10                  	// #16
   29634:	ldr	w0, [sp, #52]
   29638:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2963c:	str	w0, [sp, #3772]
   29640:	ldr	x3, [sp, #24]
   29644:	ldr	x2, [sp, #32]
   29648:	ldr	w1, [sp, #3772]
   2964c:	ldr	x0, [sp, #40]
   29650:	bl	17c0 <_ZL20DecodeVecShiftL64ImmRN4llvm6MCInstEjmPKv>
   29654:	mov	w1, w0
   29658:	add	x0, sp, #0x3c
   2965c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29660:	and	w0, w0, #0xff
   29664:	eor	w0, w0, #0x1
   29668:	and	w0, w0, #0xff
   2966c:	cmp	w0, #0x0
   29670:	b.eq	2967c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2470c>  // b.none
   29674:	mov	w0, #0x0                   	// #0
   29678:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2967c:	ldr	w0, [sp, #60]
   29680:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29684:	mov	w2, #0x5                   	// #5
   29688:	mov	w1, #0x0                   	// #0
   2968c:	ldr	w0, [sp, #52]
   29690:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29694:	str	w0, [sp, #3772]
   29698:	ldr	x3, [sp, #24]
   2969c:	ldr	x2, [sp, #32]
   296a0:	ldr	w1, [sp, #3772]
   296a4:	ldr	x0, [sp, #40]
   296a8:	bl	840 <_ZL25DecodeFPR128RegisterClassRN4llvm6MCInstEjmPKv>
   296ac:	mov	w1, w0
   296b0:	add	x0, sp, #0x3c
   296b4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   296b8:	and	w0, w0, #0xff
   296bc:	eor	w0, w0, #0x1
   296c0:	and	w0, w0, #0xff
   296c4:	cmp	w0, #0x0
   296c8:	b.eq	296d4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24764>  // b.none
   296cc:	mov	w0, #0x0                   	// #0
   296d0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   296d4:	mov	w2, #0x13                  	// #19
   296d8:	mov	w1, #0x5                   	// #5
   296dc:	ldr	w0, [sp, #52]
   296e0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   296e4:	str	w0, [sp, #3772]
   296e8:	ldr	x3, [sp, #24]
   296ec:	ldr	x2, [sp, #32]
   296f0:	ldr	w1, [sp, #3772]
   296f4:	ldr	x0, [sp, #40]
   296f8:	bl	132c <_ZL18DecodePCRelLabel19RN4llvm6MCInstEjmPKv>
   296fc:	mov	w1, w0
   29700:	add	x0, sp, #0x3c
   29704:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29708:	and	w0, w0, #0xff
   2970c:	eor	w0, w0, #0x1
   29710:	and	w0, w0, #0xff
   29714:	cmp	w0, #0x0
   29718:	b.eq	29724 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x247b4>  // b.none
   2971c:	mov	w0, #0x0                   	// #0
   29720:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29724:	ldr	w0, [sp, #60]
   29728:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2972c:	mov	w2, #0x5                   	// #5
   29730:	mov	w1, #0x0                   	// #0
   29734:	ldr	w0, [sp, #52]
   29738:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2973c:	str	w0, [sp, #3772]
   29740:	ldr	x3, [sp, #24]
   29744:	ldr	x2, [sp, #32]
   29748:	ldr	w1, [sp, #3772]
   2974c:	ldr	x0, [sp, #40]
   29750:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   29754:	mov	w1, w0
   29758:	add	x0, sp, #0x3c
   2975c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29760:	and	w0, w0, #0xff
   29764:	eor	w0, w0, #0x1
   29768:	and	w0, w0, #0xff
   2976c:	cmp	w0, #0x0
   29770:	b.eq	2977c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2480c>  // b.none
   29774:	mov	w0, #0x0                   	// #0
   29778:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2977c:	mov	w2, #0x5                   	// #5
   29780:	mov	w1, #0x5                   	// #5
   29784:	ldr	w0, [sp, #52]
   29788:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2978c:	str	w0, [sp, #3772]
   29790:	ldr	x3, [sp, #24]
   29794:	ldr	x2, [sp, #32]
   29798:	ldr	w1, [sp, #3772]
   2979c:	ldr	x0, [sp, #40]
   297a0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   297a4:	mov	w1, w0
   297a8:	add	x0, sp, #0x3c
   297ac:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   297b0:	and	w0, w0, #0xff
   297b4:	eor	w0, w0, #0x1
   297b8:	and	w0, w0, #0xff
   297bc:	cmp	w0, #0x0
   297c0:	b.eq	297cc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2485c>  // b.none
   297c4:	mov	w0, #0x0                   	// #0
   297c8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   297cc:	mov	w2, #0x6                   	// #6
   297d0:	mov	w1, #0xa                   	// #10
   297d4:	ldr	w0, [sp, #52]
   297d8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   297dc:	str	w0, [sp, #3772]
   297e0:	ldr	x3, [sp, #24]
   297e4:	ldr	x2, [sp, #32]
   297e8:	ldr	w1, [sp, #3772]
   297ec:	ldr	x0, [sp, #40]
   297f0:	bl	12e0 <_ZL26DecodeFixedPointScaleImm64RN4llvm6MCInstEjmPKv>
   297f4:	mov	w1, w0
   297f8:	add	x0, sp, #0x3c
   297fc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29800:	and	w0, w0, #0xff
   29804:	eor	w0, w0, #0x1
   29808:	and	w0, w0, #0xff
   2980c:	cmp	w0, #0x0
   29810:	b.eq	2981c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x248ac>  // b.none
   29814:	mov	w0, #0x0                   	// #0
   29818:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2981c:	ldr	w0, [sp, #60]
   29820:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29824:	mov	w2, #0x5                   	// #5
   29828:	mov	w1, #0x0                   	// #0
   2982c:	ldr	w0, [sp, #52]
   29830:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29834:	str	w0, [sp, #3772]
   29838:	ldr	x3, [sp, #24]
   2983c:	ldr	x2, [sp, #32]
   29840:	ldr	w1, [sp, #3772]
   29844:	ldr	x0, [sp, #40]
   29848:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2984c:	mov	w1, w0
   29850:	add	x0, sp, #0x3c
   29854:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29858:	and	w0, w0, #0xff
   2985c:	eor	w0, w0, #0x1
   29860:	and	w0, w0, #0xff
   29864:	cmp	w0, #0x0
   29868:	b.eq	29874 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24904>  // b.none
   2986c:	mov	w0, #0x0                   	// #0
   29870:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29874:	mov	w2, #0x5                   	// #5
   29878:	mov	w1, #0x5                   	// #5
   2987c:	ldr	w0, [sp, #52]
   29880:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29884:	str	w0, [sp, #3772]
   29888:	ldr	x3, [sp, #24]
   2988c:	ldr	x2, [sp, #32]
   29890:	ldr	w1, [sp, #3772]
   29894:	ldr	x0, [sp, #40]
   29898:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2989c:	mov	w1, w0
   298a0:	add	x0, sp, #0x3c
   298a4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   298a8:	and	w0, w0, #0xff
   298ac:	eor	w0, w0, #0x1
   298b0:	and	w0, w0, #0xff
   298b4:	cmp	w0, #0x0
   298b8:	b.eq	298c4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24954>  // b.none
   298bc:	mov	w0, #0x0                   	// #0
   298c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   298c4:	mov	w2, #0x6                   	// #6
   298c8:	mov	w1, #0xa                   	// #10
   298cc:	ldr	w0, [sp, #52]
   298d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   298d4:	str	w0, [sp, #3772]
   298d8:	ldr	x3, [sp, #24]
   298dc:	ldr	x2, [sp, #32]
   298e0:	ldr	w1, [sp, #3772]
   298e4:	ldr	x0, [sp, #40]
   298e8:	bl	12e0 <_ZL26DecodeFixedPointScaleImm64RN4llvm6MCInstEjmPKv>
   298ec:	mov	w1, w0
   298f0:	add	x0, sp, #0x3c
   298f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   298f8:	and	w0, w0, #0xff
   298fc:	eor	w0, w0, #0x1
   29900:	and	w0, w0, #0xff
   29904:	cmp	w0, #0x0
   29908:	b.eq	29914 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x249a4>  // b.none
   2990c:	mov	w0, #0x0                   	// #0
   29910:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29914:	ldr	w0, [sp, #60]
   29918:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2991c:	mov	w2, #0x5                   	// #5
   29920:	mov	w1, #0x0                   	// #0
   29924:	ldr	w0, [sp, #52]
   29928:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2992c:	str	w0, [sp, #3772]
   29930:	ldr	x3, [sp, #24]
   29934:	ldr	x2, [sp, #32]
   29938:	ldr	w1, [sp, #3772]
   2993c:	ldr	x0, [sp, #40]
   29940:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   29944:	mov	w1, w0
   29948:	add	x0, sp, #0x3c
   2994c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29950:	and	w0, w0, #0xff
   29954:	eor	w0, w0, #0x1
   29958:	and	w0, w0, #0xff
   2995c:	cmp	w0, #0x0
   29960:	b.eq	2996c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x249fc>  // b.none
   29964:	mov	w0, #0x0                   	// #0
   29968:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2996c:	mov	w2, #0x5                   	// #5
   29970:	mov	w1, #0x5                   	// #5
   29974:	ldr	w0, [sp, #52]
   29978:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2997c:	str	w0, [sp, #3772]
   29980:	ldr	x3, [sp, #24]
   29984:	ldr	x2, [sp, #32]
   29988:	ldr	w1, [sp, #3772]
   2998c:	ldr	x0, [sp, #40]
   29990:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   29994:	mov	w1, w0
   29998:	add	x0, sp, #0x3c
   2999c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   299a0:	and	w0, w0, #0xff
   299a4:	eor	w0, w0, #0x1
   299a8:	and	w0, w0, #0xff
   299ac:	cmp	w0, #0x0
   299b0:	b.eq	299bc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24a4c>  // b.none
   299b4:	mov	w0, #0x0                   	// #0
   299b8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   299bc:	ldr	w0, [sp, #60]
   299c0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   299c4:	mov	w2, #0x5                   	// #5
   299c8:	mov	w1, #0x0                   	// #0
   299cc:	ldr	w0, [sp, #52]
   299d0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   299d4:	str	w0, [sp, #3772]
   299d8:	ldr	x3, [sp, #24]
   299dc:	ldr	x2, [sp, #32]
   299e0:	ldr	w1, [sp, #3772]
   299e4:	ldr	x0, [sp, #40]
   299e8:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   299ec:	mov	w1, w0
   299f0:	add	x0, sp, #0x3c
   299f4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   299f8:	and	w0, w0, #0xff
   299fc:	eor	w0, w0, #0x1
   29a00:	and	w0, w0, #0xff
   29a04:	cmp	w0, #0x0
   29a08:	b.eq	29a14 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24aa4>  // b.none
   29a0c:	mov	w0, #0x0                   	// #0
   29a10:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29a14:	mov	w2, #0x5                   	// #5
   29a18:	mov	w1, #0x5                   	// #5
   29a1c:	ldr	w0, [sp, #52]
   29a20:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29a24:	str	w0, [sp, #3772]
   29a28:	ldr	x3, [sp, #24]
   29a2c:	ldr	x2, [sp, #32]
   29a30:	ldr	w1, [sp, #3772]
   29a34:	ldr	x0, [sp, #40]
   29a38:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   29a3c:	mov	w1, w0
   29a40:	add	x0, sp, #0x3c
   29a44:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29a48:	and	w0, w0, #0xff
   29a4c:	eor	w0, w0, #0x1
   29a50:	and	w0, w0, #0xff
   29a54:	cmp	w0, #0x0
   29a58:	b.eq	29a64 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24af4>  // b.none
   29a5c:	mov	w0, #0x0                   	// #0
   29a60:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29a64:	ldr	w0, [sp, #60]
   29a68:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29a6c:	mov	w2, #0x5                   	// #5
   29a70:	mov	w1, #0x0                   	// #0
   29a74:	ldr	w0, [sp, #52]
   29a78:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29a7c:	str	w0, [sp, #3772]
   29a80:	ldr	x3, [sp, #24]
   29a84:	ldr	x2, [sp, #32]
   29a88:	ldr	w1, [sp, #3772]
   29a8c:	ldr	x0, [sp, #40]
   29a90:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   29a94:	mov	w1, w0
   29a98:	add	x0, sp, #0x3c
   29a9c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29aa0:	and	w0, w0, #0xff
   29aa4:	eor	w0, w0, #0x1
   29aa8:	and	w0, w0, #0xff
   29aac:	cmp	w0, #0x0
   29ab0:	b.eq	29abc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24b4c>  // b.none
   29ab4:	mov	w0, #0x0                   	// #0
   29ab8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29abc:	mov	w2, #0x5                   	// #5
   29ac0:	mov	w1, #0x5                   	// #5
   29ac4:	ldr	w0, [sp, #52]
   29ac8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29acc:	str	w0, [sp, #3772]
   29ad0:	ldr	x3, [sp, #24]
   29ad4:	ldr	x2, [sp, #32]
   29ad8:	ldr	w1, [sp, #3772]
   29adc:	ldr	x0, [sp, #40]
   29ae0:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   29ae4:	mov	w1, w0
   29ae8:	add	x0, sp, #0x3c
   29aec:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29af0:	and	w0, w0, #0xff
   29af4:	eor	w0, w0, #0x1
   29af8:	and	w0, w0, #0xff
   29afc:	cmp	w0, #0x0
   29b00:	b.eq	29b0c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24b9c>  // b.none
   29b04:	mov	w0, #0x0                   	// #0
   29b08:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29b0c:	mov	w2, #0x6                   	// #6
   29b10:	mov	w1, #0xa                   	// #10
   29b14:	ldr	w0, [sp, #52]
   29b18:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29b1c:	str	w0, [sp, #3772]
   29b20:	ldr	x3, [sp, #24]
   29b24:	ldr	x2, [sp, #32]
   29b28:	ldr	w1, [sp, #3772]
   29b2c:	ldr	x0, [sp, #40]
   29b30:	bl	12e0 <_ZL26DecodeFixedPointScaleImm64RN4llvm6MCInstEjmPKv>
   29b34:	mov	w1, w0
   29b38:	add	x0, sp, #0x3c
   29b3c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29b40:	and	w0, w0, #0xff
   29b44:	eor	w0, w0, #0x1
   29b48:	and	w0, w0, #0xff
   29b4c:	cmp	w0, #0x0
   29b50:	b.eq	29b5c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24bec>  // b.none
   29b54:	mov	w0, #0x0                   	// #0
   29b58:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29b5c:	ldr	w0, [sp, #60]
   29b60:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29b64:	mov	w2, #0x5                   	// #5
   29b68:	mov	w1, #0x0                   	// #0
   29b6c:	ldr	w0, [sp, #52]
   29b70:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29b74:	str	w0, [sp, #3772]
   29b78:	ldr	x3, [sp, #24]
   29b7c:	ldr	x2, [sp, #32]
   29b80:	ldr	w1, [sp, #3772]
   29b84:	ldr	x0, [sp, #40]
   29b88:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   29b8c:	mov	w1, w0
   29b90:	add	x0, sp, #0x3c
   29b94:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29b98:	and	w0, w0, #0xff
   29b9c:	eor	w0, w0, #0x1
   29ba0:	and	w0, w0, #0xff
   29ba4:	cmp	w0, #0x0
   29ba8:	b.eq	29bb4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24c44>  // b.none
   29bac:	mov	w0, #0x0                   	// #0
   29bb0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29bb4:	mov	w2, #0x5                   	// #5
   29bb8:	mov	w1, #0x5                   	// #5
   29bbc:	ldr	w0, [sp, #52]
   29bc0:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29bc4:	str	w0, [sp, #3772]
   29bc8:	ldr	x3, [sp, #24]
   29bcc:	ldr	x2, [sp, #32]
   29bd0:	ldr	w1, [sp, #3772]
   29bd4:	ldr	x0, [sp, #40]
   29bd8:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   29bdc:	mov	w1, w0
   29be0:	add	x0, sp, #0x3c
   29be4:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29be8:	and	w0, w0, #0xff
   29bec:	eor	w0, w0, #0x1
   29bf0:	and	w0, w0, #0xff
   29bf4:	cmp	w0, #0x0
   29bf8:	b.eq	29c04 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24c94>  // b.none
   29bfc:	mov	w0, #0x0                   	// #0
   29c00:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29c04:	mov	w2, #0x6                   	// #6
   29c08:	mov	w1, #0xa                   	// #10
   29c0c:	ldr	w0, [sp, #52]
   29c10:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29c14:	str	w0, [sp, #3772]
   29c18:	ldr	x3, [sp, #24]
   29c1c:	ldr	x2, [sp, #32]
   29c20:	ldr	w1, [sp, #3772]
   29c24:	ldr	x0, [sp, #40]
   29c28:	bl	12e0 <_ZL26DecodeFixedPointScaleImm64RN4llvm6MCInstEjmPKv>
   29c2c:	mov	w1, w0
   29c30:	add	x0, sp, #0x3c
   29c34:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29c38:	and	w0, w0, #0xff
   29c3c:	eor	w0, w0, #0x1
   29c40:	and	w0, w0, #0xff
   29c44:	cmp	w0, #0x0
   29c48:	b.eq	29c54 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24ce4>  // b.none
   29c4c:	mov	w0, #0x0                   	// #0
   29c50:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29c54:	ldr	w0, [sp, #60]
   29c58:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29c5c:	mov	w2, #0x5                   	// #5
   29c60:	mov	w1, #0x0                   	// #0
   29c64:	ldr	w0, [sp, #52]
   29c68:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29c6c:	str	w0, [sp, #3772]
   29c70:	ldr	x3, [sp, #24]
   29c74:	ldr	x2, [sp, #32]
   29c78:	ldr	w1, [sp, #3772]
   29c7c:	ldr	x0, [sp, #40]
   29c80:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   29c84:	mov	w1, w0
   29c88:	add	x0, sp, #0x3c
   29c8c:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29c90:	and	w0, w0, #0xff
   29c94:	eor	w0, w0, #0x1
   29c98:	and	w0, w0, #0xff
   29c9c:	cmp	w0, #0x0
   29ca0:	b.eq	29cac <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24d3c>  // b.none
   29ca4:	mov	w0, #0x0                   	// #0
   29ca8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29cac:	mov	w2, #0x5                   	// #5
   29cb0:	mov	w1, #0x5                   	// #5
   29cb4:	ldr	w0, [sp, #52]
   29cb8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29cbc:	str	w0, [sp, #3772]
   29cc0:	ldr	x3, [sp, #24]
   29cc4:	ldr	x2, [sp, #32]
   29cc8:	ldr	w1, [sp, #3772]
   29ccc:	ldr	x0, [sp, #40]
   29cd0:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   29cd4:	mov	w1, w0
   29cd8:	add	x0, sp, #0x3c
   29cdc:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29ce0:	and	w0, w0, #0xff
   29ce4:	eor	w0, w0, #0x1
   29ce8:	and	w0, w0, #0xff
   29cec:	cmp	w0, #0x0
   29cf0:	b.eq	29cfc <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24d8c>  // b.none
   29cf4:	mov	w0, #0x0                   	// #0
   29cf8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29cfc:	ldr	w0, [sp, #60]
   29d00:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29d04:	mov	w2, #0x5                   	// #5
   29d08:	mov	w1, #0x0                   	// #0
   29d0c:	ldr	w0, [sp, #52]
   29d10:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29d14:	str	w0, [sp, #3772]
   29d18:	ldr	x3, [sp, #24]
   29d1c:	ldr	x2, [sp, #32]
   29d20:	ldr	w1, [sp, #3772]
   29d24:	ldr	x0, [sp, #40]
   29d28:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   29d2c:	mov	w1, w0
   29d30:	add	x0, sp, #0x3c
   29d34:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29d38:	and	w0, w0, #0xff
   29d3c:	eor	w0, w0, #0x1
   29d40:	and	w0, w0, #0xff
   29d44:	cmp	w0, #0x0
   29d48:	b.eq	29d54 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24de4>  // b.none
   29d4c:	mov	w0, #0x0                   	// #0
   29d50:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29d54:	mov	w2, #0x5                   	// #5
   29d58:	mov	w1, #0x5                   	// #5
   29d5c:	ldr	w0, [sp, #52]
   29d60:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29d64:	str	w0, [sp, #3772]
   29d68:	ldr	x3, [sp, #24]
   29d6c:	ldr	x2, [sp, #32]
   29d70:	ldr	w1, [sp, #3772]
   29d74:	ldr	x0, [sp, #40]
   29d78:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   29d7c:	mov	w1, w0
   29d80:	add	x0, sp, #0x3c
   29d84:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29d88:	and	w0, w0, #0xff
   29d8c:	eor	w0, w0, #0x1
   29d90:	and	w0, w0, #0xff
   29d94:	cmp	w0, #0x0
   29d98:	b.eq	29da4 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24e34>  // b.none
   29d9c:	mov	w0, #0x0                   	// #0
   29da0:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29da4:	ldr	w0, [sp, #60]
   29da8:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29dac:	ldr	x3, [sp, #24]
   29db0:	ldr	x2, [sp, #32]
   29db4:	ldr	w1, [sp, #52]
   29db8:	ldr	x0, [sp, #40]
   29dbc:	bl	14e0 <_ZL25DecodeFMOVLaneInstructionRN4llvm6MCInstEjmPKv>
   29dc0:	mov	w1, w0
   29dc4:	add	x0, sp, #0x3c
   29dc8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29dcc:	and	w0, w0, #0xff
   29dd0:	eor	w0, w0, #0x1
   29dd4:	and	w0, w0, #0xff
   29dd8:	cmp	w0, #0x0
   29ddc:	b.eq	29de8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24e78>  // b.none
   29de0:	mov	w0, #0x0                   	// #0
   29de4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29de8:	ldr	w0, [sp, #60]
   29dec:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29df0:	mov	w2, #0x5                   	// #5
   29df4:	mov	w1, #0x0                   	// #0
   29df8:	ldr	w0, [sp, #52]
   29dfc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29e00:	str	w0, [sp, #3772]
   29e04:	ldr	x3, [sp, #24]
   29e08:	ldr	x2, [sp, #32]
   29e0c:	ldr	w1, [sp, #3772]
   29e10:	ldr	x0, [sp, #40]
   29e14:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   29e18:	mov	w1, w0
   29e1c:	add	x0, sp, #0x3c
   29e20:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29e24:	and	w0, w0, #0xff
   29e28:	eor	w0, w0, #0x1
   29e2c:	and	w0, w0, #0xff
   29e30:	cmp	w0, #0x0
   29e34:	b.eq	29e40 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24ed0>  // b.none
   29e38:	mov	w0, #0x0                   	// #0
   29e3c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29e40:	mov	w2, #0x5                   	// #5
   29e44:	mov	w1, #0x5                   	// #5
   29e48:	ldr	w0, [sp, #52]
   29e4c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29e50:	str	w0, [sp, #3772]
   29e54:	ldr	x3, [sp, #24]
   29e58:	ldr	x2, [sp, #32]
   29e5c:	ldr	w1, [sp, #3772]
   29e60:	ldr	x0, [sp, #40]
   29e64:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   29e68:	mov	w1, w0
   29e6c:	add	x0, sp, #0x3c
   29e70:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29e74:	and	w0, w0, #0xff
   29e78:	eor	w0, w0, #0x1
   29e7c:	and	w0, w0, #0xff
   29e80:	cmp	w0, #0x0
   29e84:	b.eq	29e90 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24f20>  // b.none
   29e88:	mov	w0, #0x0                   	// #0
   29e8c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29e90:	mov	w2, #0x6                   	// #6
   29e94:	mov	w1, #0xa                   	// #10
   29e98:	ldr	w0, [sp, #52]
   29e9c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29ea0:	str	w0, [sp, #3772]
   29ea4:	ldr	x3, [sp, #24]
   29ea8:	ldr	x2, [sp, #32]
   29eac:	ldr	w1, [sp, #3772]
   29eb0:	ldr	x0, [sp, #40]
   29eb4:	bl	12e0 <_ZL26DecodeFixedPointScaleImm64RN4llvm6MCInstEjmPKv>
   29eb8:	mov	w1, w0
   29ebc:	add	x0, sp, #0x3c
   29ec0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29ec4:	and	w0, w0, #0xff
   29ec8:	eor	w0, w0, #0x1
   29ecc:	and	w0, w0, #0xff
   29ed0:	cmp	w0, #0x0
   29ed4:	b.eq	29ee0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24f70>  // b.none
   29ed8:	mov	w0, #0x0                   	// #0
   29edc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29ee0:	ldr	w0, [sp, #60]
   29ee4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29ee8:	mov	w2, #0x5                   	// #5
   29eec:	mov	w1, #0x0                   	// #0
   29ef0:	ldr	w0, [sp, #52]
   29ef4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29ef8:	str	w0, [sp, #3772]
   29efc:	ldr	x3, [sp, #24]
   29f00:	ldr	x2, [sp, #32]
   29f04:	ldr	w1, [sp, #3772]
   29f08:	ldr	x0, [sp, #40]
   29f0c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   29f10:	mov	w1, w0
   29f14:	add	x0, sp, #0x3c
   29f18:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29f1c:	and	w0, w0, #0xff
   29f20:	eor	w0, w0, #0x1
   29f24:	and	w0, w0, #0xff
   29f28:	cmp	w0, #0x0
   29f2c:	b.eq	29f38 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x24fc8>  // b.none
   29f30:	mov	w0, #0x0                   	// #0
   29f34:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29f38:	mov	w2, #0x5                   	// #5
   29f3c:	mov	w1, #0x5                   	// #5
   29f40:	ldr	w0, [sp, #52]
   29f44:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29f48:	str	w0, [sp, #3772]
   29f4c:	ldr	x3, [sp, #24]
   29f50:	ldr	x2, [sp, #32]
   29f54:	ldr	w1, [sp, #3772]
   29f58:	ldr	x0, [sp, #40]
   29f5c:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   29f60:	mov	w1, w0
   29f64:	add	x0, sp, #0x3c
   29f68:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29f6c:	and	w0, w0, #0xff
   29f70:	eor	w0, w0, #0x1
   29f74:	and	w0, w0, #0xff
   29f78:	cmp	w0, #0x0
   29f7c:	b.eq	29f88 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25018>  // b.none
   29f80:	mov	w0, #0x0                   	// #0
   29f84:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29f88:	mov	w2, #0x6                   	// #6
   29f8c:	mov	w1, #0xa                   	// #10
   29f90:	ldr	w0, [sp, #52]
   29f94:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29f98:	str	w0, [sp, #3772]
   29f9c:	ldr	x3, [sp, #24]
   29fa0:	ldr	x2, [sp, #32]
   29fa4:	ldr	w1, [sp, #3772]
   29fa8:	ldr	x0, [sp, #40]
   29fac:	bl	12e0 <_ZL26DecodeFixedPointScaleImm64RN4llvm6MCInstEjmPKv>
   29fb0:	mov	w1, w0
   29fb4:	add	x0, sp, #0x3c
   29fb8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   29fbc:	and	w0, w0, #0xff
   29fc0:	eor	w0, w0, #0x1
   29fc4:	and	w0, w0, #0xff
   29fc8:	cmp	w0, #0x0
   29fcc:	b.eq	29fd8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25068>  // b.none
   29fd0:	mov	w0, #0x0                   	// #0
   29fd4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29fd8:	ldr	w0, [sp, #60]
   29fdc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   29fe0:	mov	w2, #0x5                   	// #5
   29fe4:	mov	w1, #0x0                   	// #0
   29fe8:	ldr	w0, [sp, #52]
   29fec:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   29ff0:	str	w0, [sp, #3772]
   29ff4:	ldr	x3, [sp, #24]
   29ff8:	ldr	x2, [sp, #32]
   29ffc:	ldr	w1, [sp, #3772]
   2a000:	ldr	x0, [sp, #40]
   2a004:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2a008:	mov	w1, w0
   2a00c:	add	x0, sp, #0x3c
   2a010:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a014:	and	w0, w0, #0xff
   2a018:	eor	w0, w0, #0x1
   2a01c:	and	w0, w0, #0xff
   2a020:	cmp	w0, #0x0
   2a024:	b.eq	2a030 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x250c0>  // b.none
   2a028:	mov	w0, #0x0                   	// #0
   2a02c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a030:	mov	w2, #0x5                   	// #5
   2a034:	mov	w1, #0x5                   	// #5
   2a038:	ldr	w0, [sp, #52]
   2a03c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a040:	str	w0, [sp, #3772]
   2a044:	ldr	x3, [sp, #24]
   2a048:	ldr	x2, [sp, #32]
   2a04c:	ldr	w1, [sp, #3772]
   2a050:	ldr	x0, [sp, #40]
   2a054:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   2a058:	mov	w1, w0
   2a05c:	add	x0, sp, #0x3c
   2a060:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a064:	and	w0, w0, #0xff
   2a068:	eor	w0, w0, #0x1
   2a06c:	and	w0, w0, #0xff
   2a070:	cmp	w0, #0x0
   2a074:	b.eq	2a080 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25110>  // b.none
   2a078:	mov	w0, #0x0                   	// #0
   2a07c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a080:	ldr	w0, [sp, #60]
   2a084:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a088:	mov	w2, #0x5                   	// #5
   2a08c:	mov	w1, #0x0                   	// #0
   2a090:	ldr	w0, [sp, #52]
   2a094:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a098:	str	w0, [sp, #3772]
   2a09c:	ldr	x3, [sp, #24]
   2a0a0:	ldr	x2, [sp, #32]
   2a0a4:	ldr	w1, [sp, #3772]
   2a0a8:	ldr	x0, [sp, #40]
   2a0ac:	bl	9c4 <_ZL24DecodeFPR16RegisterClassRN4llvm6MCInstEjmPKv>
   2a0b0:	mov	w1, w0
   2a0b4:	add	x0, sp, #0x3c
   2a0b8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a0bc:	and	w0, w0, #0xff
   2a0c0:	eor	w0, w0, #0x1
   2a0c4:	and	w0, w0, #0xff
   2a0c8:	cmp	w0, #0x0
   2a0cc:	b.eq	2a0d8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25168>  // b.none
   2a0d0:	mov	w0, #0x0                   	// #0
   2a0d4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a0d8:	mov	w2, #0x5                   	// #5
   2a0dc:	mov	w1, #0x5                   	// #5
   2a0e0:	ldr	w0, [sp, #52]
   2a0e4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a0e8:	str	w0, [sp, #3772]
   2a0ec:	ldr	x3, [sp, #24]
   2a0f0:	ldr	x2, [sp, #32]
   2a0f4:	ldr	w1, [sp, #3772]
   2a0f8:	ldr	x0, [sp, #40]
   2a0fc:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2a100:	mov	w1, w0
   2a104:	add	x0, sp, #0x3c
   2a108:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a10c:	and	w0, w0, #0xff
   2a110:	eor	w0, w0, #0x1
   2a114:	and	w0, w0, #0xff
   2a118:	cmp	w0, #0x0
   2a11c:	b.eq	2a128 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x251b8>  // b.none
   2a120:	mov	w0, #0x0                   	// #0
   2a124:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a128:	ldr	w0, [sp, #60]
   2a12c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a130:	mov	w2, #0x5                   	// #5
   2a134:	mov	w1, #0x0                   	// #0
   2a138:	ldr	w0, [sp, #52]
   2a13c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a140:	str	w0, [sp, #3772]
   2a144:	ldr	x3, [sp, #24]
   2a148:	ldr	x2, [sp, #32]
   2a14c:	ldr	w1, [sp, #3772]
   2a150:	ldr	x0, [sp, #40]
   2a154:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2a158:	mov	w1, w0
   2a15c:	add	x0, sp, #0x3c
   2a160:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a164:	and	w0, w0, #0xff
   2a168:	eor	w0, w0, #0x1
   2a16c:	and	w0, w0, #0xff
   2a170:	cmp	w0, #0x0
   2a174:	b.eq	2a180 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25210>  // b.none
   2a178:	mov	w0, #0x0                   	// #0
   2a17c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a180:	mov	w2, #0x5                   	// #5
   2a184:	mov	w1, #0x5                   	// #5
   2a188:	ldr	w0, [sp, #52]
   2a18c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a190:	str	w0, [sp, #3772]
   2a194:	ldr	x3, [sp, #24]
   2a198:	ldr	x2, [sp, #32]
   2a19c:	ldr	w1, [sp, #3772]
   2a1a0:	ldr	x0, [sp, #40]
   2a1a4:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   2a1a8:	mov	w1, w0
   2a1ac:	add	x0, sp, #0x3c
   2a1b0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a1b4:	and	w0, w0, #0xff
   2a1b8:	eor	w0, w0, #0x1
   2a1bc:	and	w0, w0, #0xff
   2a1c0:	cmp	w0, #0x0
   2a1c4:	b.eq	2a1d0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25260>  // b.none
   2a1c8:	mov	w0, #0x0                   	// #0
   2a1cc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a1d0:	mov	w2, #0x5                   	// #5
   2a1d4:	mov	w1, #0x10                  	// #16
   2a1d8:	ldr	w0, [sp, #52]
   2a1dc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a1e0:	str	w0, [sp, #3772]
   2a1e4:	ldr	x3, [sp, #24]
   2a1e8:	ldr	x2, [sp, #32]
   2a1ec:	ldr	w1, [sp, #3772]
   2a1f0:	ldr	x0, [sp, #40]
   2a1f4:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2a1f8:	mov	w1, w0
   2a1fc:	add	x0, sp, #0x3c
   2a200:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a204:	and	w0, w0, #0xff
   2a208:	eor	w0, w0, #0x1
   2a20c:	and	w0, w0, #0xff
   2a210:	cmp	w0, #0x0
   2a214:	b.eq	2a220 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x252b0>  // b.none
   2a218:	mov	w0, #0x0                   	// #0
   2a21c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a220:	str	wzr, [sp, #3772]
   2a224:	mov	w2, #0x1                   	// #1
   2a228:	mov	w1, #0xc                   	// #12
   2a22c:	ldr	w0, [sp, #52]
   2a230:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a234:	mov	w1, w0
   2a238:	ldr	w0, [sp, #3772]
   2a23c:	orr	w0, w0, w1
   2a240:	str	w0, [sp, #3772]
   2a244:	mov	w2, #0x1                   	// #1
   2a248:	mov	w1, #0xf                   	// #15
   2a24c:	ldr	w0, [sp, #52]
   2a250:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a254:	lsl	w0, w0, #1
   2a258:	ldr	w1, [sp, #3772]
   2a25c:	orr	w0, w1, w0
   2a260:	str	w0, [sp, #3772]
   2a264:	ldr	x3, [sp, #24]
   2a268:	ldr	x2, [sp, #32]
   2a26c:	ldr	w1, [sp, #3772]
   2a270:	ldr	x0, [sp, #40]
   2a274:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   2a278:	mov	w1, w0
   2a27c:	add	x0, sp, #0x3c
   2a280:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a284:	and	w0, w0, #0xff
   2a288:	eor	w0, w0, #0x1
   2a28c:	and	w0, w0, #0xff
   2a290:	cmp	w0, #0x0
   2a294:	b.eq	2a2a0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25330>  // b.none
   2a298:	mov	w0, #0x0                   	// #0
   2a29c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a2a0:	ldr	w0, [sp, #60]
   2a2a4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a2a8:	mov	w2, #0x5                   	// #5
   2a2ac:	mov	w1, #0x0                   	// #0
   2a2b0:	ldr	w0, [sp, #52]
   2a2b4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a2b8:	str	w0, [sp, #3772]
   2a2bc:	ldr	x3, [sp, #24]
   2a2c0:	ldr	x2, [sp, #32]
   2a2c4:	ldr	w1, [sp, #3772]
   2a2c8:	ldr	x0, [sp, #40]
   2a2cc:	bl	95c <_ZL24DecodeFPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2a2d0:	mov	w1, w0
   2a2d4:	add	x0, sp, #0x3c
   2a2d8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a2dc:	and	w0, w0, #0xff
   2a2e0:	eor	w0, w0, #0x1
   2a2e4:	and	w0, w0, #0xff
   2a2e8:	cmp	w0, #0x0
   2a2ec:	b.eq	2a2f8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25388>  // b.none
   2a2f0:	mov	w0, #0x0                   	// #0
   2a2f4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a2f8:	mov	w2, #0x5                   	// #5
   2a2fc:	mov	w1, #0x5                   	// #5
   2a300:	ldr	w0, [sp, #52]
   2a304:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a308:	str	w0, [sp, #3772]
   2a30c:	ldr	x3, [sp, #24]
   2a310:	ldr	x2, [sp, #32]
   2a314:	ldr	w1, [sp, #3772]
   2a318:	ldr	x0, [sp, #40]
   2a31c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   2a320:	mov	w1, w0
   2a324:	add	x0, sp, #0x3c
   2a328:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a32c:	and	w0, w0, #0xff
   2a330:	eor	w0, w0, #0x1
   2a334:	and	w0, w0, #0xff
   2a338:	cmp	w0, #0x0
   2a33c:	b.eq	2a348 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x253d8>  // b.none
   2a340:	mov	w0, #0x0                   	// #0
   2a344:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a348:	mov	w2, #0x5                   	// #5
   2a34c:	mov	w1, #0x10                  	// #16
   2a350:	ldr	w0, [sp, #52]
   2a354:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a358:	str	w0, [sp, #3772]
   2a35c:	ldr	x3, [sp, #24]
   2a360:	ldr	x2, [sp, #32]
   2a364:	ldr	w1, [sp, #3772]
   2a368:	ldr	x0, [sp, #40]
   2a36c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2a370:	mov	w1, w0
   2a374:	add	x0, sp, #0x3c
   2a378:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a37c:	and	w0, w0, #0xff
   2a380:	eor	w0, w0, #0x1
   2a384:	and	w0, w0, #0xff
   2a388:	cmp	w0, #0x0
   2a38c:	b.eq	2a398 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25428>  // b.none
   2a390:	mov	w0, #0x0                   	// #0
   2a394:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a398:	str	wzr, [sp, #3772]
   2a39c:	mov	w2, #0x1                   	// #1
   2a3a0:	mov	w1, #0xc                   	// #12
   2a3a4:	ldr	w0, [sp, #52]
   2a3a8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a3ac:	mov	w1, w0
   2a3b0:	ldr	w0, [sp, #3772]
   2a3b4:	orr	w0, w0, w1
   2a3b8:	str	w0, [sp, #3772]
   2a3bc:	mov	w2, #0x1                   	// #1
   2a3c0:	mov	w1, #0xf                   	// #15
   2a3c4:	ldr	w0, [sp, #52]
   2a3c8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a3cc:	lsl	w0, w0, #1
   2a3d0:	ldr	w1, [sp, #3772]
   2a3d4:	orr	w0, w1, w0
   2a3d8:	str	w0, [sp, #3772]
   2a3dc:	ldr	x3, [sp, #24]
   2a3e0:	ldr	x2, [sp, #32]
   2a3e4:	ldr	w1, [sp, #3772]
   2a3e8:	ldr	x0, [sp, #40]
   2a3ec:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   2a3f0:	mov	w1, w0
   2a3f4:	add	x0, sp, #0x3c
   2a3f8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a3fc:	and	w0, w0, #0xff
   2a400:	eor	w0, w0, #0x1
   2a404:	and	w0, w0, #0xff
   2a408:	cmp	w0, #0x0
   2a40c:	b.eq	2a418 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x254a8>  // b.none
   2a410:	mov	w0, #0x0                   	// #0
   2a414:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a418:	ldr	w0, [sp, #60]
   2a41c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a420:	mov	w2, #0x5                   	// #5
   2a424:	mov	w1, #0x0                   	// #0
   2a428:	ldr	w0, [sp, #52]
   2a42c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a430:	str	w0, [sp, #3772]
   2a434:	ldr	x3, [sp, #24]
   2a438:	ldr	x2, [sp, #32]
   2a43c:	ldr	w1, [sp, #3772]
   2a440:	ldr	x0, [sp, #40]
   2a444:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2a448:	mov	w1, w0
   2a44c:	add	x0, sp, #0x3c
   2a450:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a454:	and	w0, w0, #0xff
   2a458:	eor	w0, w0, #0x1
   2a45c:	and	w0, w0, #0xff
   2a460:	cmp	w0, #0x0
   2a464:	b.eq	2a470 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25500>  // b.none
   2a468:	mov	w0, #0x0                   	// #0
   2a46c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a470:	mov	w2, #0x5                   	// #5
   2a474:	mov	w1, #0x5                   	// #5
   2a478:	ldr	w0, [sp, #52]
   2a47c:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a480:	str	w0, [sp, #3772]
   2a484:	ldr	x3, [sp, #24]
   2a488:	ldr	x2, [sp, #32]
   2a48c:	ldr	w1, [sp, #3772]
   2a490:	ldr	x0, [sp, #40]
   2a494:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   2a498:	mov	w1, w0
   2a49c:	add	x0, sp, #0x3c
   2a4a0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a4a4:	and	w0, w0, #0xff
   2a4a8:	eor	w0, w0, #0x1
   2a4ac:	and	w0, w0, #0xff
   2a4b0:	cmp	w0, #0x0
   2a4b4:	b.eq	2a4c0 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25550>  // b.none
   2a4b8:	mov	w0, #0x0                   	// #0
   2a4bc:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a4c0:	mov	w2, #0x5                   	// #5
   2a4c4:	mov	w1, #0x10                  	// #16
   2a4c8:	ldr	w0, [sp, #52]
   2a4cc:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a4d0:	str	w0, [sp, #3772]
   2a4d4:	ldr	x3, [sp, #24]
   2a4d8:	ldr	x2, [sp, #32]
   2a4dc:	ldr	w1, [sp, #3772]
   2a4e0:	ldr	x0, [sp, #40]
   2a4e4:	bl	be0 <_ZL24DecodeGPR32RegisterClassRN4llvm6MCInstEjmPKv>
   2a4e8:	mov	w1, w0
   2a4ec:	add	x0, sp, #0x3c
   2a4f0:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a4f4:	and	w0, w0, #0xff
   2a4f8:	eor	w0, w0, #0x1
   2a4fc:	and	w0, w0, #0xff
   2a500:	cmp	w0, #0x0
   2a504:	b.eq	2a510 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x255a0>  // b.none
   2a508:	mov	w0, #0x0                   	// #0
   2a50c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a510:	str	wzr, [sp, #3772]
   2a514:	mov	w2, #0x1                   	// #1
   2a518:	mov	w1, #0xc                   	// #12
   2a51c:	ldr	w0, [sp, #52]
   2a520:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a524:	mov	w1, w0
   2a528:	ldr	w0, [sp, #3772]
   2a52c:	orr	w0, w0, w1
   2a530:	str	w0, [sp, #3772]
   2a534:	mov	w2, #0x1                   	// #1
   2a538:	mov	w1, #0xf                   	// #15
   2a53c:	ldr	w0, [sp, #52]
   2a540:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a544:	lsl	w0, w0, #1
   2a548:	ldr	w1, [sp, #3772]
   2a54c:	orr	w0, w1, w0
   2a550:	str	w0, [sp, #3772]
   2a554:	ldr	x3, [sp, #24]
   2a558:	ldr	x2, [sp, #32]
   2a55c:	ldr	w1, [sp, #3772]
   2a560:	ldr	x0, [sp, #40]
   2a564:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   2a568:	mov	w1, w0
   2a56c:	add	x0, sp, #0x3c
   2a570:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a574:	and	w0, w0, #0xff
   2a578:	eor	w0, w0, #0x1
   2a57c:	and	w0, w0, #0xff
   2a580:	cmp	w0, #0x0
   2a584:	b.eq	2a590 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25620>  // b.none
   2a588:	mov	w0, #0x0                   	// #0
   2a58c:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a590:	ldr	w0, [sp, #60]
   2a594:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a598:	mov	w2, #0x5                   	// #5
   2a59c:	mov	w1, #0x0                   	// #0
   2a5a0:	ldr	w0, [sp, #52]
   2a5a4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a5a8:	str	w0, [sp, #3772]
   2a5ac:	ldr	x3, [sp, #24]
   2a5b0:	ldr	x2, [sp, #32]
   2a5b4:	ldr	w1, [sp, #3772]
   2a5b8:	ldr	x0, [sp, #40]
   2a5bc:	bl	8f4 <_ZL24DecodeFPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2a5c0:	mov	w1, w0
   2a5c4:	add	x0, sp, #0x3c
   2a5c8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a5cc:	and	w0, w0, #0xff
   2a5d0:	eor	w0, w0, #0x1
   2a5d4:	and	w0, w0, #0xff
   2a5d8:	cmp	w0, #0x0
   2a5dc:	b.eq	2a5e8 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25678>  // b.none
   2a5e0:	mov	w0, #0x0                   	// #0
   2a5e4:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a5e8:	mov	w2, #0x5                   	// #5
   2a5ec:	mov	w1, #0x5                   	// #5
   2a5f0:	ldr	w0, [sp, #52]
   2a5f4:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a5f8:	str	w0, [sp, #3772]
   2a5fc:	ldr	x3, [sp, #24]
   2a600:	ldr	x2, [sp, #32]
   2a604:	ldr	w1, [sp, #3772]
   2a608:	ldr	x0, [sp, #40]
   2a60c:	bl	b64 <_ZL26DecodeGPR64spRegisterClassRN4llvm6MCInstEjmPKv>
   2a610:	mov	w1, w0
   2a614:	add	x0, sp, #0x3c
   2a618:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a61c:	and	w0, w0, #0xff
   2a620:	eor	w0, w0, #0x1
   2a624:	and	w0, w0, #0xff
   2a628:	cmp	w0, #0x0
   2a62c:	b.eq	2a638 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x256c8>  // b.none
   2a630:	mov	w0, #0x0                   	// #0
   2a634:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a638:	mov	w2, #0x5                   	// #5
   2a63c:	mov	w1, #0x10                  	// #16
   2a640:	ldr	w0, [sp, #52]
   2a644:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a648:	str	w0, [sp, #3772]
   2a64c:	ldr	x3, [sp, #24]
   2a650:	ldr	x2, [sp, #32]
   2a654:	ldr	w1, [sp, #3772]
   2a658:	ldr	x0, [sp, #40]
   2a65c:	bl	afc <_ZL24DecodeGPR64RegisterClassRN4llvm6MCInstEjmPKv>
   2a660:	mov	w1, w0
   2a664:	add	x0, sp, #0x3c
   2a668:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a66c:	and	w0, w0, #0xff
   2a670:	eor	w0, w0, #0x1
   2a674:	and	w0, w0, #0xff
   2a678:	cmp	w0, #0x0
   2a67c:	b.eq	2a688 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25718>  // b.none
   2a680:	mov	w0, #0x0                   	// #0
   2a684:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a688:	str	wzr, [sp, #3772]
   2a68c:	mov	w2, #0x1                   	// #1
   2a690:	mov	w1, #0xc                   	// #12
   2a694:	ldr	w0, [sp, #52]
   2a698:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a69c:	mov	w1, w0
   2a6a0:	ldr	w0, [sp, #3772]
   2a6a4:	orr	w0, w0, w1
   2a6a8:	str	w0, [sp, #3772]
   2a6ac:	mov	w2, #0x1                   	// #1
   2a6b0:	mov	w1, #0xf                   	// #15
   2a6b4:	ldr	w0, [sp, #52]
   2a6b8:	bl	4e6c <_ZN4llvmL20fieldFromInstructionIjEET_S1_jj>
   2a6bc:	lsl	w0, w0, #1
   2a6c0:	ldr	w1, [sp, #3772]
   2a6c4:	orr	w0, w1, w0
   2a6c8:	str	w0, [sp, #3772]
   2a6cc:	ldr	x3, [sp, #24]
   2a6d0:	ldr	x2, [sp, #32]
   2a6d4:	ldr	w1, [sp, #3772]
   2a6d8:	ldr	x0, [sp, #40]
   2a6dc:	bl	13f4 <_ZL15DecodeMemExtendRN4llvm6MCInstEjmPKv>
   2a6e0:	mov	w1, w0
   2a6e4:	add	x0, sp, #0x3c
   2a6e8:	bl	dc <_ZL5CheckRN4llvm14MCDisassembler12DecodeStatusES1_>
   2a6ec:	and	w0, w0, #0xff
   2a6f0:	eor	w0, w0, #0x1
   2a6f4:	and	w0, w0, #0xff
   2a6f8:	cmp	w0, #0x0
   2a6fc:	b.eq	2a708 <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x25798>  // b.none
   2a700:	mov	w0, #0x0                   	// #0
   2a704:	b	2a70c <_ZN4llvmL14decodeToMCInstIjEENS_14MCDisassembler12DecodeStatusES2_jT_RNS_6MCInstEmPKvRb+0x2579c>
   2a708:	ldr	w0, [sp, #60]
   2a70c:	ldp	x29, x30, [sp]
   2a710:	add	sp, sp, #0xec0
   2a714:	ret

000000000002a718 <_ZN4llvmL20fieldFromInstructionIjEET_S1_jjSt17integral_constantIbLb1EE>:
   2a718:	stp	x29, x30, [sp, #-48]!
   2a71c:	mov	x29, sp
   2a720:	str	w0, [sp, #28]
   2a724:	str	w1, [sp, #24]
   2a728:	str	w2, [sp, #20]
   2a72c:	strb	w3, [sp, #16]
   2a730:	ldr	w1, [sp, #24]
   2a734:	ldr	w0, [sp, #20]
   2a738:	add	w0, w1, w0
   2a73c:	cmp	w0, #0x40
   2a740:	b.ls	2a764 <_ZN4llvmL20fieldFromInstructionIjEET_S1_jjSt17integral_constantIbLb1EE+0x4c>  // b.plast
   2a744:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a748:	add	x3, x0, #0x0
   2a74c:	mov	w2, #0x24                  	// #36
   2a750:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a754:	add	x1, x0, #0x0
   2a758:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a75c:	add	x0, x0, #0x0
   2a760:	bl	0 <__assert_fail>
   2a764:	ldr	w1, [sp, #24]
   2a768:	ldr	w0, [sp, #20]
   2a76c:	add	w0, w1, w0
   2a770:	cmp	w0, #0x20
   2a774:	b.ls	2a798 <_ZN4llvmL20fieldFromInstructionIjEET_S1_jjSt17integral_constantIbLb1EE+0x80>  // b.plast
   2a778:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a77c:	add	x3, x0, #0x0
   2a780:	mov	w2, #0x25                  	// #37
   2a784:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a788:	add	x1, x0, #0x0
   2a78c:	adrp	x0, 0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a790:	add	x0, x0, #0x0
   2a794:	bl	0 <__assert_fail>
   2a798:	ldr	w0, [sp, #20]
   2a79c:	cmp	w0, #0x20
   2a7a0:	b.ne	2a7b0 <_ZN4llvmL20fieldFromInstructionIjEET_S1_jjSt17integral_constantIbLb1EE+0x98>  // b.any
   2a7a4:	mov	w0, #0xffffffff            	// #-1
   2a7a8:	str	w0, [sp, #44]
   2a7ac:	b	2a7cc <_ZN4llvmL20fieldFromInstructionIjEET_S1_jjSt17integral_constantIbLb1EE+0xb4>
   2a7b0:	ldr	w0, [sp, #20]
   2a7b4:	mov	w1, #0x1                   	// #1
   2a7b8:	lsl	w0, w1, w0
   2a7bc:	sub	w1, w0, #0x1
   2a7c0:	ldr	w0, [sp, #24]
   2a7c4:	lsl	w0, w1, w0
   2a7c8:	str	w0, [sp, #44]
   2a7cc:	ldr	w1, [sp, #28]
   2a7d0:	ldr	w0, [sp, #44]
   2a7d4:	and	w1, w1, w0
   2a7d8:	ldr	w0, [sp, #24]
   2a7dc:	lsr	w0, w1, w0
   2a7e0:	ldp	x29, x30, [sp], #48
   2a7e4:	ret

000000000002a7e8 <_ZSt6all_ofIPiZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EbT_S5_T0_>:
   2a7e8:	stp	x29, x30, [sp, #-48]!
   2a7ec:	mov	x29, sp
   2a7f0:	str	x0, [sp, #40]
   2a7f4:	str	x1, [sp, #32]
   2a7f8:	str	x2, [sp, #24]
   2a7fc:	ldr	x2, [sp, #24]
   2a800:	ldr	x1, [sp, #32]
   2a804:	ldr	x0, [sp, #40]
   2a808:	bl	2ad54 <_ZSt11find_if_notIPiZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_ET_S5_S5_T0_>
   2a80c:	mov	x1, x0
   2a810:	ldr	x0, [sp, #32]
   2a814:	cmp	x0, x1
   2a818:	cset	w0, eq  // eq = none
   2a81c:	and	w0, w0, #0xff
   2a820:	ldp	x29, x30, [sp], #48
   2a824:	ret

000000000002a828 <_ZSt6all_ofIPsZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EbT_S5_T0_>:
   2a828:	stp	x29, x30, [sp, #-48]!
   2a82c:	mov	x29, sp
   2a830:	str	x0, [sp, #40]
   2a834:	str	x1, [sp, #32]
   2a838:	str	x2, [sp, #24]
   2a83c:	ldr	x2, [sp, #24]
   2a840:	ldr	x1, [sp, #32]
   2a844:	ldr	x0, [sp, #40]
   2a848:	bl	2ad88 <_ZSt11find_if_notIPsZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_ET_S5_S5_T0_>
   2a84c:	mov	x1, x0
   2a850:	ldr	x0, [sp, #32]
   2a854:	cmp	x0, x1
   2a858:	cset	w0, eq  // eq = none
   2a85c:	and	w0, w0, #0xff
   2a860:	ldp	x29, x30, [sp], #48
   2a864:	ret

000000000002a868 <_ZSt6all_ofIPaZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EbT_S5_T0_>:
   2a868:	stp	x29, x30, [sp, #-48]!
   2a86c:	mov	x29, sp
   2a870:	str	x0, [sp, #40]
   2a874:	str	x1, [sp, #32]
   2a878:	str	x2, [sp, #24]
   2a87c:	ldr	x2, [sp, #24]
   2a880:	ldr	x1, [sp, #32]
   2a884:	ldr	x0, [sp, #40]
   2a888:	bl	2adbc <_ZSt11find_if_notIPaZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_ET_S5_S5_T0_>
   2a88c:	mov	x1, x0
   2a890:	ldr	x0, [sp, #32]
   2a894:	cmp	x0, x1
   2a898:	cset	w0, eq  // eq = none
   2a89c:	and	w0, w0, #0xff
   2a8a0:	ldp	x29, x30, [sp], #48
   2a8a4:	ret

000000000002a8a8 <_Z16DecodeImm8OptLslILi8EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>:
   2a8a8:	stp	x29, x30, [sp, #-96]!
   2a8ac:	mov	x29, sp
   2a8b0:	str	x0, [sp, #40]
   2a8b4:	str	w1, [sp, #36]
   2a8b8:	str	x2, [sp, #24]
   2a8bc:	str	x3, [sp, #16]
   2a8c0:	ldr	w0, [sp, #36]
   2a8c4:	and	w0, w0, #0xff
   2a8c8:	str	w0, [sp, #92]
   2a8cc:	ldr	w0, [sp, #36]
   2a8d0:	lsr	w0, w0, #5
   2a8d4:	and	w0, w0, #0x8
   2a8d8:	str	w0, [sp, #88]
   2a8dc:	ldr	w0, [sp, #88]
   2a8e0:	cmp	w0, #0x0
   2a8e4:	b.eq	2a8f0 <_Z16DecodeImm8OptLslILi8EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv+0x48>  // b.none
   2a8e8:	mov	w0, #0x0                   	// #0
   2a8ec:	b	2a92c <_Z16DecodeImm8OptLslILi8EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv+0x84>
   2a8f0:	ldr	w0, [sp, #92]
   2a8f4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a8f8:	stp	x0, x1, [sp, #56]
   2a8fc:	add	x0, sp, #0x38
   2a900:	mov	x1, x0
   2a904:	ldr	x0, [sp, #40]
   2a908:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a90c:	ldr	w0, [sp, #88]
   2a910:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a914:	stp	x0, x1, [sp, #72]
   2a918:	add	x0, sp, #0x48
   2a91c:	mov	x1, x0
   2a920:	ldr	x0, [sp, #40]
   2a924:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a928:	mov	w0, #0x3                   	// #3
   2a92c:	ldp	x29, x30, [sp], #96
   2a930:	ret

000000000002a934 <_Z16DecodeImm8OptLslILi16EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>:
   2a934:	stp	x29, x30, [sp, #-96]!
   2a938:	mov	x29, sp
   2a93c:	str	x0, [sp, #40]
   2a940:	str	w1, [sp, #36]
   2a944:	str	x2, [sp, #24]
   2a948:	str	x3, [sp, #16]
   2a94c:	ldr	w0, [sp, #36]
   2a950:	and	w0, w0, #0xff
   2a954:	str	w0, [sp, #92]
   2a958:	ldr	w0, [sp, #36]
   2a95c:	lsr	w0, w0, #5
   2a960:	and	w0, w0, #0x8
   2a964:	str	w0, [sp, #88]
   2a968:	ldr	w0, [sp, #92]
   2a96c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a970:	stp	x0, x1, [sp, #56]
   2a974:	add	x0, sp, #0x38
   2a978:	mov	x1, x0
   2a97c:	ldr	x0, [sp, #40]
   2a980:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a984:	ldr	w0, [sp, #88]
   2a988:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a98c:	stp	x0, x1, [sp, #72]
   2a990:	add	x0, sp, #0x48
   2a994:	mov	x1, x0
   2a998:	ldr	x0, [sp, #40]
   2a99c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a9a0:	mov	w0, #0x3                   	// #3
   2a9a4:	ldp	x29, x30, [sp], #96
   2a9a8:	ret

000000000002a9ac <_Z16DecodeImm8OptLslILi32EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>:
   2a9ac:	stp	x29, x30, [sp, #-96]!
   2a9b0:	mov	x29, sp
   2a9b4:	str	x0, [sp, #40]
   2a9b8:	str	w1, [sp, #36]
   2a9bc:	str	x2, [sp, #24]
   2a9c0:	str	x3, [sp, #16]
   2a9c4:	ldr	w0, [sp, #36]
   2a9c8:	and	w0, w0, #0xff
   2a9cc:	str	w0, [sp, #92]
   2a9d0:	ldr	w0, [sp, #36]
   2a9d4:	lsr	w0, w0, #5
   2a9d8:	and	w0, w0, #0x8
   2a9dc:	str	w0, [sp, #88]
   2a9e0:	ldr	w0, [sp, #92]
   2a9e4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a9e8:	stp	x0, x1, [sp, #56]
   2a9ec:	add	x0, sp, #0x38
   2a9f0:	mov	x1, x0
   2a9f4:	ldr	x0, [sp, #40]
   2a9f8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2a9fc:	ldr	w0, [sp, #88]
   2aa00:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2aa04:	stp	x0, x1, [sp, #72]
   2aa08:	add	x0, sp, #0x48
   2aa0c:	mov	x1, x0
   2aa10:	ldr	x0, [sp, #40]
   2aa14:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2aa18:	mov	w0, #0x3                   	// #3
   2aa1c:	ldp	x29, x30, [sp], #96
   2aa20:	ret

000000000002aa24 <_Z16DecodeImm8OptLslILi64EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEjmPKv>:
   2aa24:	stp	x29, x30, [sp, #-96]!
   2aa28:	mov	x29, sp
   2aa2c:	str	x0, [sp, #40]
   2aa30:	str	w1, [sp, #36]
   2aa34:	str	x2, [sp, #24]
   2aa38:	str	x3, [sp, #16]
   2aa3c:	ldr	w0, [sp, #36]
   2aa40:	and	w0, w0, #0xff
   2aa44:	str	w0, [sp, #92]
   2aa48:	ldr	w0, [sp, #36]
   2aa4c:	lsr	w0, w0, #5
   2aa50:	and	w0, w0, #0x8
   2aa54:	str	w0, [sp, #88]
   2aa58:	ldr	w0, [sp, #92]
   2aa5c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2aa60:	stp	x0, x1, [sp, #56]
   2aa64:	add	x0, sp, #0x38
   2aa68:	mov	x1, x0
   2aa6c:	ldr	x0, [sp, #40]
   2aa70:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2aa74:	ldr	w0, [sp, #88]
   2aa78:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2aa7c:	stp	x0, x1, [sp, #72]
   2aa80:	add	x0, sp, #0x48
   2aa84:	mov	x1, x0
   2aa88:	ldr	x0, [sp, #40]
   2aa8c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2aa90:	mov	w0, #0x3                   	// #3
   2aa94:	ldp	x29, x30, [sp], #96
   2aa98:	ret

000000000002aa9c <_Z10DecodeSImmILi5EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>:
   2aa9c:	stp	x29, x30, [sp, #-64]!
   2aaa0:	mov	x29, sp
   2aaa4:	str	x0, [sp, #40]
   2aaa8:	str	x1, [sp, #32]
   2aaac:	str	x2, [sp, #24]
   2aab0:	str	x3, [sp, #16]
   2aab4:	ldr	x0, [sp, #32]
   2aab8:	and	x0, x0, #0xffffffffffffffe0
   2aabc:	cmp	x0, #0x0
   2aac0:	b.eq	2aacc <_Z10DecodeSImmILi5EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x30>  // b.none
   2aac4:	mov	w0, #0x0                   	// #0
   2aac8:	b	2ab08 <_Z10DecodeSImmILi5EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x6c>
   2aacc:	ldr	x0, [sp, #32]
   2aad0:	and	x0, x0, #0x10
   2aad4:	cmp	x0, #0x0
   2aad8:	b.eq	2aae8 <_Z10DecodeSImmILi5EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x4c>  // b.none
   2aadc:	ldr	x0, [sp, #32]
   2aae0:	orr	x0, x0, #0xffffffffffffffe0
   2aae4:	str	x0, [sp, #32]
   2aae8:	ldr	x0, [sp, #32]
   2aaec:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2aaf0:	stp	x0, x1, [sp, #48]
   2aaf4:	add	x0, sp, #0x30
   2aaf8:	mov	x1, x0
   2aafc:	ldr	x0, [sp, #40]
   2ab00:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2ab04:	mov	w0, #0x3                   	// #3
   2ab08:	ldp	x29, x30, [sp], #64
   2ab0c:	ret

000000000002ab10 <_Z10DecodeSImmILi6EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>:
   2ab10:	stp	x29, x30, [sp, #-64]!
   2ab14:	mov	x29, sp
   2ab18:	str	x0, [sp, #40]
   2ab1c:	str	x1, [sp, #32]
   2ab20:	str	x2, [sp, #24]
   2ab24:	str	x3, [sp, #16]
   2ab28:	ldr	x0, [sp, #32]
   2ab2c:	and	x0, x0, #0xffffffffffffffc0
   2ab30:	cmp	x0, #0x0
   2ab34:	b.eq	2ab40 <_Z10DecodeSImmILi6EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x30>  // b.none
   2ab38:	mov	w0, #0x0                   	// #0
   2ab3c:	b	2ab7c <_Z10DecodeSImmILi6EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x6c>
   2ab40:	ldr	x0, [sp, #32]
   2ab44:	and	x0, x0, #0x20
   2ab48:	cmp	x0, #0x0
   2ab4c:	b.eq	2ab5c <_Z10DecodeSImmILi6EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x4c>  // b.none
   2ab50:	ldr	x0, [sp, #32]
   2ab54:	orr	x0, x0, #0xffffffffffffffc0
   2ab58:	str	x0, [sp, #32]
   2ab5c:	ldr	x0, [sp, #32]
   2ab60:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2ab64:	stp	x0, x1, [sp, #48]
   2ab68:	add	x0, sp, #0x30
   2ab6c:	mov	x1, x0
   2ab70:	ldr	x0, [sp, #40]
   2ab74:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2ab78:	mov	w0, #0x3                   	// #3
   2ab7c:	ldp	x29, x30, [sp], #64
   2ab80:	ret

000000000002ab84 <_Z10DecodeSImmILi8EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>:
   2ab84:	stp	x29, x30, [sp, #-64]!
   2ab88:	mov	x29, sp
   2ab8c:	str	x0, [sp, #40]
   2ab90:	str	x1, [sp, #32]
   2ab94:	str	x2, [sp, #24]
   2ab98:	str	x3, [sp, #16]
   2ab9c:	ldr	x0, [sp, #32]
   2aba0:	and	x0, x0, #0xffffffffffffff00
   2aba4:	cmp	x0, #0x0
   2aba8:	b.eq	2abb4 <_Z10DecodeSImmILi8EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x30>  // b.none
   2abac:	mov	w0, #0x0                   	// #0
   2abb0:	b	2abf0 <_Z10DecodeSImmILi8EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x6c>
   2abb4:	ldr	x0, [sp, #32]
   2abb8:	and	x0, x0, #0x80
   2abbc:	cmp	x0, #0x0
   2abc0:	b.eq	2abd0 <_Z10DecodeSImmILi8EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x4c>  // b.none
   2abc4:	ldr	x0, [sp, #32]
   2abc8:	orr	x0, x0, #0xffffffffffffff00
   2abcc:	str	x0, [sp, #32]
   2abd0:	ldr	x0, [sp, #32]
   2abd4:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2abd8:	stp	x0, x1, [sp, #48]
   2abdc:	add	x0, sp, #0x30
   2abe0:	mov	x1, x0
   2abe4:	ldr	x0, [sp, #40]
   2abe8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2abec:	mov	w0, #0x3                   	// #3
   2abf0:	ldp	x29, x30, [sp], #64
   2abf4:	ret

000000000002abf8 <_Z10DecodeSImmILi9EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>:
   2abf8:	stp	x29, x30, [sp, #-64]!
   2abfc:	mov	x29, sp
   2ac00:	str	x0, [sp, #40]
   2ac04:	str	x1, [sp, #32]
   2ac08:	str	x2, [sp, #24]
   2ac0c:	str	x3, [sp, #16]
   2ac10:	ldr	x0, [sp, #32]
   2ac14:	and	x0, x0, #0xfffffffffffffe00
   2ac18:	cmp	x0, #0x0
   2ac1c:	b.eq	2ac28 <_Z10DecodeSImmILi9EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x30>  // b.none
   2ac20:	mov	w0, #0x0                   	// #0
   2ac24:	b	2ac64 <_Z10DecodeSImmILi9EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x6c>
   2ac28:	ldr	x0, [sp, #32]
   2ac2c:	and	x0, x0, #0x100
   2ac30:	cmp	x0, #0x0
   2ac34:	b.eq	2ac44 <_Z10DecodeSImmILi9EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x4c>  // b.none
   2ac38:	ldr	x0, [sp, #32]
   2ac3c:	orr	x0, x0, #0xfffffffffffffe00
   2ac40:	str	x0, [sp, #32]
   2ac44:	ldr	x0, [sp, #32]
   2ac48:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2ac4c:	stp	x0, x1, [sp, #48]
   2ac50:	add	x0, sp, #0x30
   2ac54:	mov	x1, x0
   2ac58:	ldr	x0, [sp, #40]
   2ac5c:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2ac60:	mov	w0, #0x3                   	// #3
   2ac64:	ldp	x29, x30, [sp], #64
   2ac68:	ret

000000000002ac6c <_Z10DecodeSImmILi4EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>:
   2ac6c:	stp	x29, x30, [sp, #-64]!
   2ac70:	mov	x29, sp
   2ac74:	str	x0, [sp, #40]
   2ac78:	str	x1, [sp, #32]
   2ac7c:	str	x2, [sp, #24]
   2ac80:	str	x3, [sp, #16]
   2ac84:	ldr	x0, [sp, #32]
   2ac88:	and	x0, x0, #0xfffffffffffffff0
   2ac8c:	cmp	x0, #0x0
   2ac90:	b.eq	2ac9c <_Z10DecodeSImmILi4EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x30>  // b.none
   2ac94:	mov	w0, #0x0                   	// #0
   2ac98:	b	2acd8 <_Z10DecodeSImmILi4EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x6c>
   2ac9c:	ldr	x0, [sp, #32]
   2aca0:	and	x0, x0, #0x8
   2aca4:	cmp	x0, #0x0
   2aca8:	b.eq	2acb8 <_Z10DecodeSImmILi4EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x4c>  // b.none
   2acac:	ldr	x0, [sp, #32]
   2acb0:	orr	x0, x0, #0xfffffffffffffff0
   2acb4:	str	x0, [sp, #32]
   2acb8:	ldr	x0, [sp, #32]
   2acbc:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2acc0:	stp	x0, x1, [sp, #48]
   2acc4:	add	x0, sp, #0x30
   2acc8:	mov	x1, x0
   2accc:	ldr	x0, [sp, #40]
   2acd0:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2acd4:	mov	w0, #0x3                   	// #3
   2acd8:	ldp	x29, x30, [sp], #64
   2acdc:	ret

000000000002ace0 <_Z10DecodeSImmILi10EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv>:
   2ace0:	stp	x29, x30, [sp, #-64]!
   2ace4:	mov	x29, sp
   2ace8:	str	x0, [sp, #40]
   2acec:	str	x1, [sp, #32]
   2acf0:	str	x2, [sp, #24]
   2acf4:	str	x3, [sp, #16]
   2acf8:	ldr	x0, [sp, #32]
   2acfc:	and	x0, x0, #0xfffffffffffffc00
   2ad00:	cmp	x0, #0x0
   2ad04:	b.eq	2ad10 <_Z10DecodeSImmILi10EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x30>  // b.none
   2ad08:	mov	w0, #0x0                   	// #0
   2ad0c:	b	2ad4c <_Z10DecodeSImmILi10EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x6c>
   2ad10:	ldr	x0, [sp, #32]
   2ad14:	and	x0, x0, #0x200
   2ad18:	cmp	x0, #0x0
   2ad1c:	b.eq	2ad2c <_Z10DecodeSImmILi10EEN4llvm14MCDisassembler12DecodeStatusERNS0_6MCInstEmmPKv+0x4c>  // b.none
   2ad20:	ldr	x0, [sp, #32]
   2ad24:	orr	x0, x0, #0xfffffffffffffc00
   2ad28:	str	x0, [sp, #32]
   2ad2c:	ldr	x0, [sp, #32]
   2ad30:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2ad34:	stp	x0, x1, [sp, #48]
   2ad38:	add	x0, sp, #0x30
   2ad3c:	mov	x1, x0
   2ad40:	ldr	x0, [sp, #40]
   2ad44:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2ad48:	mov	w0, #0x3                   	// #3
   2ad4c:	ldp	x29, x30, [sp], #64
   2ad50:	ret

000000000002ad54 <_ZSt11find_if_notIPiZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_ET_S5_S5_T0_>:
   2ad54:	stp	x29, x30, [sp, #-48]!
   2ad58:	mov	x29, sp
   2ad5c:	str	x0, [sp, #40]
   2ad60:	str	x1, [sp, #32]
   2ad64:	str	x2, [sp, #24]
   2ad68:	ldr	x0, [sp, #24]
   2ad6c:	bl	2adf0 <_ZN9__gnu_cxx5__ops11__pred_iterIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EENS0_10_Iter_predIT_EES7_>
   2ad70:	mov	x2, x0
   2ad74:	ldr	x1, [sp, #32]
   2ad78:	ldr	x0, [sp, #40]
   2ad7c:	bl	2ae20 <_ZSt13__find_if_notIPiN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_>
   2ad80:	ldp	x29, x30, [sp], #48
   2ad84:	ret

000000000002ad88 <_ZSt11find_if_notIPsZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_ET_S5_S5_T0_>:
   2ad88:	stp	x29, x30, [sp, #-48]!
   2ad8c:	mov	x29, sp
   2ad90:	str	x0, [sp, #40]
   2ad94:	str	x1, [sp, #32]
   2ad98:	str	x2, [sp, #24]
   2ad9c:	ldr	x0, [sp, #24]
   2ada0:	bl	2ae78 <_ZN9__gnu_cxx5__ops11__pred_iterIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EENS0_10_Iter_predIT_EES7_>
   2ada4:	mov	x2, x0
   2ada8:	ldr	x1, [sp, #32]
   2adac:	ldr	x0, [sp, #40]
   2adb0:	bl	2aea8 <_ZSt13__find_if_notIPsN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_>
   2adb4:	ldp	x29, x30, [sp], #48
   2adb8:	ret

000000000002adbc <_ZSt11find_if_notIPaZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_ET_S5_S5_T0_>:
   2adbc:	stp	x29, x30, [sp, #-48]!
   2adc0:	mov	x29, sp
   2adc4:	str	x0, [sp, #40]
   2adc8:	str	x1, [sp, #32]
   2adcc:	str	x2, [sp, #24]
   2add0:	ldr	x0, [sp, #24]
   2add4:	bl	2af00 <_ZN9__gnu_cxx5__ops11__pred_iterIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EENS0_10_Iter_predIT_EES7_>
   2add8:	mov	x2, x0
   2addc:	ldr	x1, [sp, #32]
   2ade0:	ldr	x0, [sp, #40]
   2ade4:	bl	2af30 <_ZSt13__find_if_notIPaN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_>
   2ade8:	ldp	x29, x30, [sp], #48
   2adec:	ret

000000000002adf0 <_ZN9__gnu_cxx5__ops11__pred_iterIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EENS0_10_Iter_predIT_EES7_>:
   2adf0:	stp	x29, x30, [sp, #-48]!
   2adf4:	mov	x29, sp
   2adf8:	str	x0, [sp, #24]
   2adfc:	add	x0, sp, #0x18
   2ae00:	bl	2af88 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EONSt16remove_referenceIT_E4typeEOS6_>
   2ae04:	mov	x1, x0
   2ae08:	add	x0, sp, #0x28
   2ae0c:	ldr	x1, [x1]
   2ae10:	bl	2af9c <_ZN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EC1ES5_>
   2ae14:	ldr	x0, [sp, #40]
   2ae18:	ldp	x29, x30, [sp], #48
   2ae1c:	ret

000000000002ae20 <_ZSt13__find_if_notIPiN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_>:
   2ae20:	stp	x29, x30, [sp, #-96]!
   2ae24:	mov	x29, sp
   2ae28:	stp	x19, x20, [sp, #16]
   2ae2c:	str	x21, [sp, #32]
   2ae30:	str	x0, [sp, #72]
   2ae34:	str	x1, [sp, #64]
   2ae38:	str	x2, [sp, #56]
   2ae3c:	ldr	x19, [sp, #72]
   2ae40:	ldr	x0, [sp, #56]
   2ae44:	bl	2afd0 <_ZN9__gnu_cxx5__ops8__negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EENS0_12_Iter_negateIT_EENS0_10_Iter_predIS7_EE>
   2ae48:	mov	x20, x0
   2ae4c:	add	x0, sp, #0x48
   2ae50:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2ae54:	mov	w3, w21
   2ae58:	mov	x2, x20
   2ae5c:	ldr	x1, [sp, #64]
   2ae60:	mov	x0, x19
   2ae64:	bl	2b000 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag>
   2ae68:	ldp	x19, x20, [sp, #16]
   2ae6c:	ldr	x21, [sp, #32]
   2ae70:	ldp	x29, x30, [sp], #96
   2ae74:	ret

000000000002ae78 <_ZN9__gnu_cxx5__ops11__pred_iterIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EENS0_10_Iter_predIT_EES7_>:
   2ae78:	stp	x29, x30, [sp, #-48]!
   2ae7c:	mov	x29, sp
   2ae80:	str	x0, [sp, #24]
   2ae84:	add	x0, sp, #0x18
   2ae88:	bl	2b1c0 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EONSt16remove_referenceIT_E4typeEOS6_>
   2ae8c:	mov	x1, x0
   2ae90:	add	x0, sp, #0x28
   2ae94:	ldr	x1, [x1]
   2ae98:	bl	2b1d4 <_ZN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EC1ES5_>
   2ae9c:	ldr	x0, [sp, #40]
   2aea0:	ldp	x29, x30, [sp], #48
   2aea4:	ret

000000000002aea8 <_ZSt13__find_if_notIPsN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_>:
   2aea8:	stp	x29, x30, [sp, #-96]!
   2aeac:	mov	x29, sp
   2aeb0:	stp	x19, x20, [sp, #16]
   2aeb4:	str	x21, [sp, #32]
   2aeb8:	str	x0, [sp, #72]
   2aebc:	str	x1, [sp, #64]
   2aec0:	str	x2, [sp, #56]
   2aec4:	ldr	x19, [sp, #72]
   2aec8:	ldr	x0, [sp, #56]
   2aecc:	bl	2b208 <_ZN9__gnu_cxx5__ops8__negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EENS0_12_Iter_negateIT_EENS0_10_Iter_predIS7_EE>
   2aed0:	mov	x20, x0
   2aed4:	add	x0, sp, #0x48
   2aed8:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2aedc:	mov	w3, w21
   2aee0:	mov	x2, x20
   2aee4:	ldr	x1, [sp, #64]
   2aee8:	mov	x0, x19
   2aeec:	bl	2b238 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag>
   2aef0:	ldp	x19, x20, [sp, #16]
   2aef4:	ldr	x21, [sp, #32]
   2aef8:	ldp	x29, x30, [sp], #96
   2aefc:	ret

000000000002af00 <_ZN9__gnu_cxx5__ops11__pred_iterIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EENS0_10_Iter_predIT_EES7_>:
   2af00:	stp	x29, x30, [sp, #-48]!
   2af04:	mov	x29, sp
   2af08:	str	x0, [sp, #24]
   2af0c:	add	x0, sp, #0x18
   2af10:	bl	2b3f8 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EONSt16remove_referenceIT_E4typeEOS6_>
   2af14:	mov	x1, x0
   2af18:	add	x0, sp, #0x28
   2af1c:	ldr	x1, [x1]
   2af20:	bl	2b40c <_ZN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EC1ES5_>
   2af24:	ldr	x0, [sp, #40]
   2af28:	ldp	x29, x30, [sp], #48
   2af2c:	ret

000000000002af30 <_ZSt13__find_if_notIPaN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_>:
   2af30:	stp	x29, x30, [sp, #-96]!
   2af34:	mov	x29, sp
   2af38:	stp	x19, x20, [sp, #16]
   2af3c:	str	x21, [sp, #32]
   2af40:	str	x0, [sp, #72]
   2af44:	str	x1, [sp, #64]
   2af48:	str	x2, [sp, #56]
   2af4c:	ldr	x19, [sp, #72]
   2af50:	ldr	x0, [sp, #56]
   2af54:	bl	2b440 <_ZN9__gnu_cxx5__ops8__negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EENS0_12_Iter_negateIT_EENS0_10_Iter_predIS7_EE>
   2af58:	mov	x20, x0
   2af5c:	add	x0, sp, #0x48
   2af60:	bl	0 <_ZN4llvm10AArch64_AML29isValidDecodeLogicalImmediateEmj>
   2af64:	mov	w3, w21
   2af68:	mov	x2, x20
   2af6c:	ldr	x1, [sp, #64]
   2af70:	mov	x0, x19
   2af74:	bl	2b470 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag>
   2af78:	ldp	x19, x20, [sp, #16]
   2af7c:	ldr	x21, [sp, #32]
   2af80:	ldp	x29, x30, [sp], #96
   2af84:	ret

000000000002af88 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EONSt16remove_referenceIT_E4typeEOS6_>:
   2af88:	sub	sp, sp, #0x10
   2af8c:	str	x0, [sp, #8]
   2af90:	ldr	x0, [sp, #8]
   2af94:	add	sp, sp, #0x10
   2af98:	ret

000000000002af9c <_ZN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EC1ES5_>:
   2af9c:	stp	x29, x30, [sp, #-32]!
   2afa0:	mov	x29, sp
   2afa4:	str	x0, [sp, #24]
   2afa8:	str	x1, [sp, #16]
   2afac:	add	x0, sp, #0x10
   2afb0:	bl	2af88 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EONSt16remove_referenceIT_E4typeEOS6_>
   2afb4:	mov	x1, x0
   2afb8:	ldr	x0, [sp, #24]
   2afbc:	ldr	x1, [x1]
   2afc0:	str	x1, [x0]
   2afc4:	nop
   2afc8:	ldp	x29, x30, [sp], #32
   2afcc:	ret

000000000002afd0 <_ZN9__gnu_cxx5__ops8__negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EENS0_12_Iter_negateIT_EENS0_10_Iter_predIS7_EE>:
   2afd0:	stp	x29, x30, [sp, #-48]!
   2afd4:	mov	x29, sp
   2afd8:	str	x0, [sp, #24]
   2afdc:	add	x0, sp, #0x18
   2afe0:	bl	2af88 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EONSt16remove_referenceIT_E4typeEOS6_>
   2afe4:	mov	x1, x0
   2afe8:	add	x0, sp, #0x28
   2afec:	ldr	x1, [x1]
   2aff0:	bl	2b628 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EC1ES5_>
   2aff4:	ldr	x0, [sp, #40]
   2aff8:	ldp	x29, x30, [sp], #48
   2affc:	ret

000000000002b000 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag>:
   2b000:	stp	x29, x30, [sp, #-64]!
   2b004:	mov	x29, sp
   2b008:	str	x0, [sp, #40]
   2b00c:	str	x1, [sp, #32]
   2b010:	str	x2, [sp, #24]
   2b014:	strb	w3, [sp, #16]
   2b018:	ldr	x1, [sp, #32]
   2b01c:	ldr	x0, [sp, #40]
   2b020:	sub	x0, x1, x0
   2b024:	asr	x0, x0, #2
   2b028:	asr	x0, x0, #2
   2b02c:	str	x0, [sp, #56]
   2b030:	ldr	x0, [sp, #56]
   2b034:	cmp	x0, #0x0
   2b038:	b.le	2b0fc <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xfc>
   2b03c:	add	x0, sp, #0x18
   2b040:	ldr	x1, [sp, #40]
   2b044:	bl	2b65c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>
   2b048:	and	w0, w0, #0xff
   2b04c:	cmp	w0, #0x0
   2b050:	b.eq	2b05c <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x5c>  // b.none
   2b054:	ldr	x0, [sp, #40]
   2b058:	b	2b1b8 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
   2b05c:	ldr	x0, [sp, #40]
   2b060:	add	x0, x0, #0x4
   2b064:	str	x0, [sp, #40]
   2b068:	add	x0, sp, #0x18
   2b06c:	ldr	x1, [sp, #40]
   2b070:	bl	2b65c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>
   2b074:	and	w0, w0, #0xff
   2b078:	cmp	w0, #0x0
   2b07c:	b.eq	2b088 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x88>  // b.none
   2b080:	ldr	x0, [sp, #40]
   2b084:	b	2b1b8 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
   2b088:	ldr	x0, [sp, #40]
   2b08c:	add	x0, x0, #0x4
   2b090:	str	x0, [sp, #40]
   2b094:	add	x0, sp, #0x18
   2b098:	ldr	x1, [sp, #40]
   2b09c:	bl	2b65c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>
   2b0a0:	and	w0, w0, #0xff
   2b0a4:	cmp	w0, #0x0
   2b0a8:	b.eq	2b0b4 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xb4>  // b.none
   2b0ac:	ldr	x0, [sp, #40]
   2b0b0:	b	2b1b8 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
   2b0b4:	ldr	x0, [sp, #40]
   2b0b8:	add	x0, x0, #0x4
   2b0bc:	str	x0, [sp, #40]
   2b0c0:	add	x0, sp, #0x18
   2b0c4:	ldr	x1, [sp, #40]
   2b0c8:	bl	2b65c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>
   2b0cc:	and	w0, w0, #0xff
   2b0d0:	cmp	w0, #0x0
   2b0d4:	b.eq	2b0e0 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xe0>  // b.none
   2b0d8:	ldr	x0, [sp, #40]
   2b0dc:	b	2b1b8 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
   2b0e0:	ldr	x0, [sp, #40]
   2b0e4:	add	x0, x0, #0x4
   2b0e8:	str	x0, [sp, #40]
   2b0ec:	ldr	x0, [sp, #56]
   2b0f0:	sub	x0, x0, #0x1
   2b0f4:	str	x0, [sp, #56]
   2b0f8:	b	2b030 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x30>
   2b0fc:	ldr	x1, [sp, #32]
   2b100:	ldr	x0, [sp, #40]
   2b104:	sub	x0, x1, x0
   2b108:	asr	x0, x0, #2
   2b10c:	cmp	x0, #0x3
   2b110:	b.eq	2b130 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x130>  // b.none
   2b114:	cmp	x0, #0x3
   2b118:	b.gt	2b1b4 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b4>
   2b11c:	cmp	x0, #0x1
   2b120:	b.eq	2b188 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x188>  // b.none
   2b124:	cmp	x0, #0x2
   2b128:	b.eq	2b15c <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x15c>  // b.none
   2b12c:	b	2b1b4 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b4>
   2b130:	add	x0, sp, #0x18
   2b134:	ldr	x1, [sp, #40]
   2b138:	bl	2b65c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>
   2b13c:	and	w0, w0, #0xff
   2b140:	cmp	w0, #0x0
   2b144:	b.eq	2b150 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x150>  // b.none
   2b148:	ldr	x0, [sp, #40]
   2b14c:	b	2b1b8 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
   2b150:	ldr	x0, [sp, #40]
   2b154:	add	x0, x0, #0x4
   2b158:	str	x0, [sp, #40]
   2b15c:	add	x0, sp, #0x18
   2b160:	ldr	x1, [sp, #40]
   2b164:	bl	2b65c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>
   2b168:	and	w0, w0, #0xff
   2b16c:	cmp	w0, #0x0
   2b170:	b.eq	2b17c <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x17c>  // b.none
   2b174:	ldr	x0, [sp, #40]
   2b178:	b	2b1b8 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
   2b17c:	ldr	x0, [sp, #40]
   2b180:	add	x0, x0, #0x4
   2b184:	str	x0, [sp, #40]
   2b188:	add	x0, sp, #0x18
   2b18c:	ldr	x1, [sp, #40]
   2b190:	bl	2b65c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>
   2b194:	and	w0, w0, #0xff
   2b198:	cmp	w0, #0x0
   2b19c:	b.eq	2b1a8 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1a8>  // b.none
   2b1a0:	ldr	x0, [sp, #40]
   2b1a4:	b	2b1b8 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
   2b1a8:	ldr	x0, [sp, #40]
   2b1ac:	add	x0, x0, #0x4
   2b1b0:	str	x0, [sp, #40]
   2b1b4:	ldr	x0, [sp, #32]
   2b1b8:	ldp	x29, x30, [sp], #64
   2b1bc:	ret

000000000002b1c0 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EONSt16remove_referenceIT_E4typeEOS6_>:
   2b1c0:	sub	sp, sp, #0x10
   2b1c4:	str	x0, [sp, #8]
   2b1c8:	ldr	x0, [sp, #8]
   2b1cc:	add	sp, sp, #0x10
   2b1d0:	ret

000000000002b1d4 <_ZN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EC1ES5_>:
   2b1d4:	stp	x29, x30, [sp, #-32]!
   2b1d8:	mov	x29, sp
   2b1dc:	str	x0, [sp, #24]
   2b1e0:	str	x1, [sp, #16]
   2b1e4:	add	x0, sp, #0x10
   2b1e8:	bl	2b1c0 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EONSt16remove_referenceIT_E4typeEOS6_>
   2b1ec:	mov	x1, x0
   2b1f0:	ldr	x0, [sp, #24]
   2b1f4:	ldr	x1, [x1]
   2b1f8:	str	x1, [x0]
   2b1fc:	nop
   2b200:	ldp	x29, x30, [sp], #32
   2b204:	ret

000000000002b208 <_ZN9__gnu_cxx5__ops8__negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EENS0_12_Iter_negateIT_EENS0_10_Iter_predIS7_EE>:
   2b208:	stp	x29, x30, [sp, #-48]!
   2b20c:	mov	x29, sp
   2b210:	str	x0, [sp, #24]
   2b214:	add	x0, sp, #0x18
   2b218:	bl	2b1c0 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EONSt16remove_referenceIT_E4typeEOS6_>
   2b21c:	mov	x1, x0
   2b220:	add	x0, sp, #0x28
   2b224:	ldr	x1, [x1]
   2b228:	bl	2b698 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EC1ES5_>
   2b22c:	ldr	x0, [sp, #40]
   2b230:	ldp	x29, x30, [sp], #48
   2b234:	ret

000000000002b238 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag>:
   2b238:	stp	x29, x30, [sp, #-64]!
   2b23c:	mov	x29, sp
   2b240:	str	x0, [sp, #40]
   2b244:	str	x1, [sp, #32]
   2b248:	str	x2, [sp, #24]
   2b24c:	strb	w3, [sp, #16]
   2b250:	ldr	x1, [sp, #32]
   2b254:	ldr	x0, [sp, #40]
   2b258:	sub	x0, x1, x0
   2b25c:	asr	x0, x0, #1
   2b260:	asr	x0, x0, #2
   2b264:	str	x0, [sp, #56]
   2b268:	ldr	x0, [sp, #56]
   2b26c:	cmp	x0, #0x0
   2b270:	b.le	2b334 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xfc>
   2b274:	add	x0, sp, #0x18
   2b278:	ldr	x1, [sp, #40]
   2b27c:	bl	2b6cc <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>
   2b280:	and	w0, w0, #0xff
   2b284:	cmp	w0, #0x0
   2b288:	b.eq	2b294 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x5c>  // b.none
   2b28c:	ldr	x0, [sp, #40]
   2b290:	b	2b3f0 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
   2b294:	ldr	x0, [sp, #40]
   2b298:	add	x0, x0, #0x2
   2b29c:	str	x0, [sp, #40]
   2b2a0:	add	x0, sp, #0x18
   2b2a4:	ldr	x1, [sp, #40]
   2b2a8:	bl	2b6cc <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>
   2b2ac:	and	w0, w0, #0xff
   2b2b0:	cmp	w0, #0x0
   2b2b4:	b.eq	2b2c0 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x88>  // b.none
   2b2b8:	ldr	x0, [sp, #40]
   2b2bc:	b	2b3f0 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
   2b2c0:	ldr	x0, [sp, #40]
   2b2c4:	add	x0, x0, #0x2
   2b2c8:	str	x0, [sp, #40]
   2b2cc:	add	x0, sp, #0x18
   2b2d0:	ldr	x1, [sp, #40]
   2b2d4:	bl	2b6cc <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>
   2b2d8:	and	w0, w0, #0xff
   2b2dc:	cmp	w0, #0x0
   2b2e0:	b.eq	2b2ec <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xb4>  // b.none
   2b2e4:	ldr	x0, [sp, #40]
   2b2e8:	b	2b3f0 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
   2b2ec:	ldr	x0, [sp, #40]
   2b2f0:	add	x0, x0, #0x2
   2b2f4:	str	x0, [sp, #40]
   2b2f8:	add	x0, sp, #0x18
   2b2fc:	ldr	x1, [sp, #40]
   2b300:	bl	2b6cc <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>
   2b304:	and	w0, w0, #0xff
   2b308:	cmp	w0, #0x0
   2b30c:	b.eq	2b318 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xe0>  // b.none
   2b310:	ldr	x0, [sp, #40]
   2b314:	b	2b3f0 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
   2b318:	ldr	x0, [sp, #40]
   2b31c:	add	x0, x0, #0x2
   2b320:	str	x0, [sp, #40]
   2b324:	ldr	x0, [sp, #56]
   2b328:	sub	x0, x0, #0x1
   2b32c:	str	x0, [sp, #56]
   2b330:	b	2b268 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x30>
   2b334:	ldr	x1, [sp, #32]
   2b338:	ldr	x0, [sp, #40]
   2b33c:	sub	x0, x1, x0
   2b340:	asr	x0, x0, #1
   2b344:	cmp	x0, #0x3
   2b348:	b.eq	2b368 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x130>  // b.none
   2b34c:	cmp	x0, #0x3
   2b350:	b.gt	2b3ec <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b4>
   2b354:	cmp	x0, #0x1
   2b358:	b.eq	2b3c0 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x188>  // b.none
   2b35c:	cmp	x0, #0x2
   2b360:	b.eq	2b394 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x15c>  // b.none
   2b364:	b	2b3ec <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b4>
   2b368:	add	x0, sp, #0x18
   2b36c:	ldr	x1, [sp, #40]
   2b370:	bl	2b6cc <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>
   2b374:	and	w0, w0, #0xff
   2b378:	cmp	w0, #0x0
   2b37c:	b.eq	2b388 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x150>  // b.none
   2b380:	ldr	x0, [sp, #40]
   2b384:	b	2b3f0 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
   2b388:	ldr	x0, [sp, #40]
   2b38c:	add	x0, x0, #0x2
   2b390:	str	x0, [sp, #40]
   2b394:	add	x0, sp, #0x18
   2b398:	ldr	x1, [sp, #40]
   2b39c:	bl	2b6cc <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>
   2b3a0:	and	w0, w0, #0xff
   2b3a4:	cmp	w0, #0x0
   2b3a8:	b.eq	2b3b4 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x17c>  // b.none
   2b3ac:	ldr	x0, [sp, #40]
   2b3b0:	b	2b3f0 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
   2b3b4:	ldr	x0, [sp, #40]
   2b3b8:	add	x0, x0, #0x2
   2b3bc:	str	x0, [sp, #40]
   2b3c0:	add	x0, sp, #0x18
   2b3c4:	ldr	x1, [sp, #40]
   2b3c8:	bl	2b6cc <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>
   2b3cc:	and	w0, w0, #0xff
   2b3d0:	cmp	w0, #0x0
   2b3d4:	b.eq	2b3e0 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1a8>  // b.none
   2b3d8:	ldr	x0, [sp, #40]
   2b3dc:	b	2b3f0 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
   2b3e0:	ldr	x0, [sp, #40]
   2b3e4:	add	x0, x0, #0x2
   2b3e8:	str	x0, [sp, #40]
   2b3ec:	ldr	x0, [sp, #32]
   2b3f0:	ldp	x29, x30, [sp], #64
   2b3f4:	ret

000000000002b3f8 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EONSt16remove_referenceIT_E4typeEOS6_>:
   2b3f8:	sub	sp, sp, #0x10
   2b3fc:	str	x0, [sp, #8]
   2b400:	ldr	x0, [sp, #8]
   2b404:	add	sp, sp, #0x10
   2b408:	ret

000000000002b40c <_ZN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EC1ES5_>:
   2b40c:	stp	x29, x30, [sp, #-32]!
   2b410:	mov	x29, sp
   2b414:	str	x0, [sp, #24]
   2b418:	str	x1, [sp, #16]
   2b41c:	add	x0, sp, #0x10
   2b420:	bl	2b3f8 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EONSt16remove_referenceIT_E4typeEOS6_>
   2b424:	mov	x1, x0
   2b428:	ldr	x0, [sp, #24]
   2b42c:	ldr	x1, [x1]
   2b430:	str	x1, [x0]
   2b434:	nop
   2b438:	ldp	x29, x30, [sp], #32
   2b43c:	ret

000000000002b440 <_ZN9__gnu_cxx5__ops8__negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EENS0_12_Iter_negateIT_EENS0_10_Iter_predIS7_EE>:
   2b440:	stp	x29, x30, [sp, #-48]!
   2b444:	mov	x29, sp
   2b448:	str	x0, [sp, #24]
   2b44c:	add	x0, sp, #0x18
   2b450:	bl	2b3f8 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EONSt16remove_referenceIT_E4typeEOS6_>
   2b454:	mov	x1, x0
   2b458:	add	x0, sp, #0x28
   2b45c:	ldr	x1, [x1]
   2b460:	bl	2b708 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EC1ES5_>
   2b464:	ldr	x0, [sp, #40]
   2b468:	ldp	x29, x30, [sp], #48
   2b46c:	ret

000000000002b470 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag>:
   2b470:	stp	x29, x30, [sp, #-64]!
   2b474:	mov	x29, sp
   2b478:	str	x0, [sp, #40]
   2b47c:	str	x1, [sp, #32]
   2b480:	str	x2, [sp, #24]
   2b484:	strb	w3, [sp, #16]
   2b488:	ldr	x1, [sp, #32]
   2b48c:	ldr	x0, [sp, #40]
   2b490:	sub	x0, x1, x0
   2b494:	asr	x0, x0, #2
   2b498:	str	x0, [sp, #56]
   2b49c:	ldr	x0, [sp, #56]
   2b4a0:	cmp	x0, #0x0
   2b4a4:	b.le	2b568 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xf8>
   2b4a8:	add	x0, sp, #0x18
   2b4ac:	ldr	x1, [sp, #40]
   2b4b0:	bl	2b73c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>
   2b4b4:	and	w0, w0, #0xff
   2b4b8:	cmp	w0, #0x0
   2b4bc:	b.eq	2b4c8 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x58>  // b.none
   2b4c0:	ldr	x0, [sp, #40]
   2b4c4:	b	2b620 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b0>
   2b4c8:	ldr	x0, [sp, #40]
   2b4cc:	add	x0, x0, #0x1
   2b4d0:	str	x0, [sp, #40]
   2b4d4:	add	x0, sp, #0x18
   2b4d8:	ldr	x1, [sp, #40]
   2b4dc:	bl	2b73c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>
   2b4e0:	and	w0, w0, #0xff
   2b4e4:	cmp	w0, #0x0
   2b4e8:	b.eq	2b4f4 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x84>  // b.none
   2b4ec:	ldr	x0, [sp, #40]
   2b4f0:	b	2b620 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b0>
   2b4f4:	ldr	x0, [sp, #40]
   2b4f8:	add	x0, x0, #0x1
   2b4fc:	str	x0, [sp, #40]
   2b500:	add	x0, sp, #0x18
   2b504:	ldr	x1, [sp, #40]
   2b508:	bl	2b73c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>
   2b50c:	and	w0, w0, #0xff
   2b510:	cmp	w0, #0x0
   2b514:	b.eq	2b520 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xb0>  // b.none
   2b518:	ldr	x0, [sp, #40]
   2b51c:	b	2b620 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b0>
   2b520:	ldr	x0, [sp, #40]
   2b524:	add	x0, x0, #0x1
   2b528:	str	x0, [sp, #40]
   2b52c:	add	x0, sp, #0x18
   2b530:	ldr	x1, [sp, #40]
   2b534:	bl	2b73c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>
   2b538:	and	w0, w0, #0xff
   2b53c:	cmp	w0, #0x0
   2b540:	b.eq	2b54c <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xdc>  // b.none
   2b544:	ldr	x0, [sp, #40]
   2b548:	b	2b620 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b0>
   2b54c:	ldr	x0, [sp, #40]
   2b550:	add	x0, x0, #0x1
   2b554:	str	x0, [sp, #40]
   2b558:	ldr	x0, [sp, #56]
   2b55c:	sub	x0, x0, #0x1
   2b560:	str	x0, [sp, #56]
   2b564:	b	2b49c <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x2c>
   2b568:	ldr	x1, [sp, #32]
   2b56c:	ldr	x0, [sp, #40]
   2b570:	sub	x0, x1, x0
   2b574:	cmp	x0, #0x3
   2b578:	b.eq	2b598 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x128>  // b.none
   2b57c:	cmp	x0, #0x3
   2b580:	b.gt	2b61c <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1ac>
   2b584:	cmp	x0, #0x1
   2b588:	b.eq	2b5f0 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x180>  // b.none
   2b58c:	cmp	x0, #0x2
   2b590:	b.eq	2b5c4 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x154>  // b.none
   2b594:	b	2b61c <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1ac>
   2b598:	add	x0, sp, #0x18
   2b59c:	ldr	x1, [sp, #40]
   2b5a0:	bl	2b73c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>
   2b5a4:	and	w0, w0, #0xff
   2b5a8:	cmp	w0, #0x0
   2b5ac:	b.eq	2b5b8 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x148>  // b.none
   2b5b0:	ldr	x0, [sp, #40]
   2b5b4:	b	2b620 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b0>
   2b5b8:	ldr	x0, [sp, #40]
   2b5bc:	add	x0, x0, #0x1
   2b5c0:	str	x0, [sp, #40]
   2b5c4:	add	x0, sp, #0x18
   2b5c8:	ldr	x1, [sp, #40]
   2b5cc:	bl	2b73c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>
   2b5d0:	and	w0, w0, #0xff
   2b5d4:	cmp	w0, #0x0
   2b5d8:	b.eq	2b5e4 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x174>  // b.none
   2b5dc:	ldr	x0, [sp, #40]
   2b5e0:	b	2b620 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b0>
   2b5e4:	ldr	x0, [sp, #40]
   2b5e8:	add	x0, x0, #0x1
   2b5ec:	str	x0, [sp, #40]
   2b5f0:	add	x0, sp, #0x18
   2b5f4:	ldr	x1, [sp, #40]
   2b5f8:	bl	2b73c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>
   2b5fc:	and	w0, w0, #0xff
   2b600:	cmp	w0, #0x0
   2b604:	b.eq	2b610 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1a0>  // b.none
   2b608:	ldr	x0, [sp, #40]
   2b60c:	b	2b620 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b0>
   2b610:	ldr	x0, [sp, #40]
   2b614:	add	x0, x0, #0x1
   2b618:	str	x0, [sp, #40]
   2b61c:	ldr	x0, [sp, #32]
   2b620:	ldp	x29, x30, [sp], #64
   2b624:	ret

000000000002b628 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EC1ES5_>:
   2b628:	stp	x29, x30, [sp, #-32]!
   2b62c:	mov	x29, sp
   2b630:	str	x0, [sp, #24]
   2b634:	str	x1, [sp, #16]
   2b638:	add	x0, sp, #0x10
   2b63c:	bl	2af88 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EONSt16remove_referenceIT_E4typeEOS6_>
   2b640:	mov	x1, x0
   2b644:	ldr	x0, [sp, #24]
   2b648:	ldr	x1, [x1]
   2b64c:	str	x1, [x0]
   2b650:	nop
   2b654:	ldp	x29, x30, [sp], #32
   2b658:	ret

000000000002b65c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>:
   2b65c:	stp	x29, x30, [sp, #-32]!
   2b660:	mov	x29, sp
   2b664:	str	x0, [sp, #24]
   2b668:	str	x1, [sp, #16]
   2b66c:	ldr	x2, [sp, #24]
   2b670:	ldr	x0, [sp, #16]
   2b674:	ldr	w0, [x0]
   2b678:	mov	w1, w0
   2b67c:	mov	x0, x2
   2b680:	bl	3f48 <_ZZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblENKUliE_clEi>
   2b684:	and	w0, w0, #0xff
   2b688:	eor	w0, w0, #0x1
   2b68c:	and	w0, w0, #0xff
   2b690:	ldp	x29, x30, [sp], #32
   2b694:	ret

000000000002b698 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EC1ES5_>:
   2b698:	stp	x29, x30, [sp, #-32]!
   2b69c:	mov	x29, sp
   2b6a0:	str	x0, [sp, #24]
   2b6a4:	str	x1, [sp, #16]
   2b6a8:	add	x0, sp, #0x10
   2b6ac:	bl	2b1c0 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EONSt16remove_referenceIT_E4typeEOS6_>
   2b6b0:	mov	x1, x0
   2b6b4:	ldr	x0, [sp, #24]
   2b6b8:	ldr	x1, [x1]
   2b6bc:	str	x1, [x0]
   2b6c0:	nop
   2b6c4:	ldp	x29, x30, [sp], #32
   2b6c8:	ret

000000000002b6cc <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>:
   2b6cc:	stp	x29, x30, [sp, #-32]!
   2b6d0:	mov	x29, sp
   2b6d4:	str	x0, [sp, #24]
   2b6d8:	str	x1, [sp, #16]
   2b6dc:	ldr	x2, [sp, #24]
   2b6e0:	ldr	x0, [sp, #16]
   2b6e4:	ldrsh	w0, [x0]
   2b6e8:	mov	w1, w0
   2b6ec:	mov	x0, x2
   2b6f0:	bl	3f84 <_ZZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblENKUlsE_clEs>
   2b6f4:	and	w0, w0, #0xff
   2b6f8:	eor	w0, w0, #0x1
   2b6fc:	and	w0, w0, #0xff
   2b700:	ldp	x29, x30, [sp], #32
   2b704:	ret

000000000002b708 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EC1ES5_>:
   2b708:	stp	x29, x30, [sp, #-32]!
   2b70c:	mov	x29, sp
   2b710:	str	x0, [sp, #24]
   2b714:	str	x1, [sp, #16]
   2b718:	add	x0, sp, #0x10
   2b71c:	bl	2b3f8 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EONSt16remove_referenceIT_E4typeEOS6_>
   2b720:	mov	x1, x0
   2b724:	ldr	x0, [sp, #24]
   2b728:	ldr	x1, [x1]
   2b72c:	str	x1, [x0]
   2b730:	nop
   2b734:	ldp	x29, x30, [sp], #32
   2b738:	ret

000000000002b73c <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>:
   2b73c:	stp	x29, x30, [sp, #-32]!
   2b740:	mov	x29, sp
   2b744:	str	x0, [sp, #24]
   2b748:	str	x1, [sp, #16]
   2b74c:	ldr	x2, [sp, #24]
   2b750:	ldr	x0, [sp, #16]
   2b754:	ldrsb	w0, [x0]
   2b758:	mov	w1, w0
   2b75c:	mov	x0, x2
   2b760:	bl	3fc0 <_ZZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblENKUlaE_clEa>
   2b764:	and	w0, w0, #0xff
   2b768:	eor	w0, w0, #0x1
   2b76c:	and	w0, w0, #0xff
   2b770:	ldp	x29, x30, [sp], #32
   2b774:	ret

Disassembly of section .text._ZN4llvm12MCSymbolizerC2ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EE:

0000000000000000 <_ZN4llvm12MCSymbolizerC1ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #56]
  10:	str	x1, [sp, #48]
  14:	str	x2, [sp, #40]
  18:	adrp	x0, 0 <_ZTVN4llvm12MCSymbolizerE>
  1c:	ldr	x0, [x0]
  20:	add	x1, x0, #0x10
  24:	ldr	x0, [sp, #56]
  28:	str	x1, [x0]
  2c:	ldr	x0, [sp, #56]
  30:	ldr	x1, [sp, #48]
  34:	str	x1, [x0, #8]
  38:	ldr	x0, [sp, #56]
  3c:	add	x19, x0, #0x10
  40:	ldr	x0, [sp, #40]
  44:	bl	0 <_ZN4llvm12MCSymbolizerC1ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EE>
  48:	mov	x1, x0
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm12MCSymbolizerC1ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EE>
  54:	nop
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #64
  60:	ret

Disassembly of section .text._ZN4llvm14MCDisassemblerC2ERKNS_15MCSubtargetInfoERNS_9MCContextE:

0000000000000000 <_ZN4llvm14MCDisassemblerC1ERKNS_15MCSubtargetInfoERNS_9MCContextE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	adrp	x0, 0 <_ZTVN4llvm14MCDisassemblerE>
  18:	ldr	x0, [x0]
  1c:	add	x1, x0, #0x10
  20:	ldr	x0, [sp, #40]
  24:	str	x1, [x0]
  28:	ldr	x0, [sp, #40]
  2c:	ldr	x1, [sp, #24]
  30:	str	x1, [x0, #8]
  34:	ldr	x0, [sp, #40]
  38:	ldr	x1, [sp, #32]
  3c:	str	x1, [x0, #16]
  40:	ldr	x0, [sp, #40]
  44:	add	x0, x0, #0x18
  48:	bl	0 <_ZN4llvm14MCDisassemblerC1ERKNS_15MCSubtargetInfoERNS_9MCContextE>
  4c:	ldr	x0, [sp, #40]
  50:	str	xzr, [x0, #32]
  54:	nop
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

Disassembly of section .text._ZNK4llvm14MCDisassembler16getSubtargetInfoEv:

0000000000000000 <_ZNK4llvm14MCDisassembler16getSubtargetInfoEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #16]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN4llvm19AArch64DisassemblerC2ERKNS_15MCSubtargetInfoERNS_9MCContextE:

0000000000000000 <_ZN4llvm19AArch64DisassemblerC1ERKNS_15MCSubtargetInfoERNS_9MCContextE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x0, [sp, #40]
  18:	ldr	x2, [sp, #24]
  1c:	ldr	x1, [sp, #32]
  20:	bl	0 <_ZN4llvm19AArch64DisassemblerC1ERKNS_15MCSubtargetInfoERNS_9MCContextE>
  24:	adrp	x0, 0 <_ZN4llvm19AArch64DisassemblerC1ERKNS_15MCSubtargetInfoERNS_9MCContextE>
  28:	add	x1, x0, #0x0
  2c:	ldr	x0, [sp, #40]
  30:	str	x1, [x0]
  34:	nop
  38:	ldp	x29, x30, [sp], #48
  3c:	ret

Disassembly of section .text._ZN4llvm20MCExternalSymbolizerC2ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EEPFiPvmmmiS8_EPFPKcS8_mPmmPSC_ES8_:

0000000000000000 <_ZN4llvm20MCExternalSymbolizerC1ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EEPFiPvmmmiS8_EPFPKcS8_mPmmPSC_ES8_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #72]
  10:	str	x1, [sp, #64]
  14:	str	x2, [sp, #56]
  18:	str	x3, [sp, #48]
  1c:	str	x4, [sp, #40]
  20:	str	x5, [sp, #32]
  24:	ldr	x19, [sp, #72]
  28:	ldr	x0, [sp, #56]
  2c:	bl	0 <_ZN4llvm20MCExternalSymbolizerC1ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EEPFiPvmmmiS8_EPFPKcS8_mPmmPSC_ES8_>
  30:	mov	x1, x0
  34:	add	x0, sp, #0x58
  38:	bl	0 <_ZN4llvm20MCExternalSymbolizerC1ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EEPFiPvmmmiS8_EPFPKcS8_mPmmPSC_ES8_>
  3c:	add	x0, sp, #0x58
  40:	mov	x2, x0
  44:	ldr	x1, [sp, #64]
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm20MCExternalSymbolizerC1ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EEPFiPvmmmiS8_EPFPKcS8_mPmmPSC_ES8_>
  50:	add	x0, sp, #0x58
  54:	bl	0 <_ZN4llvm20MCExternalSymbolizerC1ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EEPFiPvmmmiS8_EPFPKcS8_mPmmPSC_ES8_>
  58:	adrp	x0, 0 <_ZTVN4llvm20MCExternalSymbolizerE>
  5c:	ldr	x0, [x0]
  60:	add	x1, x0, #0x10
  64:	ldr	x0, [sp, #72]
  68:	str	x1, [x0]
  6c:	ldr	x0, [sp, #72]
  70:	ldr	x1, [sp, #48]
  74:	str	x1, [x0, #24]
  78:	ldr	x0, [sp, #72]
  7c:	ldr	x1, [sp, #40]
  80:	str	x1, [x0, #32]
  84:	ldr	x0, [sp, #72]
  88:	ldr	x1, [sp, #32]
  8c:	str	x1, [x0, #40]
  90:	nop
  94:	ldr	x19, [sp, #16]
  98:	ldp	x29, x30, [sp], #96
  9c:	ret

Disassembly of section .text._ZN4llvm25AArch64ExternalSymbolizerC2ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EEPFiPvmmmiS8_EPFPKcS8_mPmmPSC_ES8_:

0000000000000000 <_ZN4llvm25AArch64ExternalSymbolizerC1ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EEPFiPvmmmiS8_EPFPKcS8_mPmmPSC_ES8_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #72]
  10:	str	x1, [sp, #64]
  14:	str	x2, [sp, #56]
  18:	str	x3, [sp, #48]
  1c:	str	x4, [sp, #40]
  20:	str	x5, [sp, #32]
  24:	ldr	x19, [sp, #72]
  28:	ldr	x0, [sp, #56]
  2c:	bl	0 <_ZN4llvm25AArch64ExternalSymbolizerC1ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EEPFiPvmmmiS8_EPFPKcS8_mPmmPSC_ES8_>
  30:	mov	x1, x0
  34:	add	x0, sp, #0x58
  38:	bl	0 <_ZN4llvm25AArch64ExternalSymbolizerC1ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EEPFiPvmmmiS8_EPFPKcS8_mPmmPSC_ES8_>
  3c:	add	x0, sp, #0x58
  40:	ldr	x5, [sp, #32]
  44:	ldr	x4, [sp, #40]
  48:	ldr	x3, [sp, #48]
  4c:	mov	x2, x0
  50:	ldr	x1, [sp, #64]
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm25AArch64ExternalSymbolizerC1ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EEPFiPvmmmiS8_EPFPKcS8_mPmmPSC_ES8_>
  5c:	add	x0, sp, #0x58
  60:	bl	0 <_ZN4llvm25AArch64ExternalSymbolizerC1ERNS_9MCContextESt10unique_ptrINS_16MCRelocationInfoESt14default_deleteIS4_EEPFiPvmmmiS8_EPFPKcS8_mPmmPSC_ES8_>
  64:	adrp	x0, 0 <_ZTVN4llvm25AArch64ExternalSymbolizerE>
  68:	ldr	x0, [x0]
  6c:	add	x1, x0, #0x10
  70:	ldr	x0, [sp, #72]
  74:	str	x1, [x0]
  78:	nop
  7c:	ldr	x19, [sp, #16]
  80:	ldp	x29, x30, [sp], #96
  84:	ret

Disassembly of section .text._ZN4llvm15SmallVectorBaseC2EPvm:

0000000000000000 <_ZN4llvm15SmallVectorBaseC1EPvm>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #24]
   8:	str	x1, [sp, #16]
   c:	str	x2, [sp, #8]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [sp, #16]
  18:	str	x1, [x0]
  1c:	ldr	x0, [sp, #24]
  20:	str	wzr, [x0, #8]
  24:	ldr	x0, [sp, #8]
  28:	mov	w1, w0
  2c:	ldr	x0, [sp, #24]
  30:	str	w1, [x0, #12]
  34:	nop
  38:	add	sp, sp, #0x20
  3c:	ret

Disassembly of section .text._ZNK4llvm15SmallVectorBase4sizeEv:

0000000000000000 <_ZNK4llvm15SmallVectorBase4sizeEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #8]
  10:	mov	w0, w0
  14:	add	sp, sp, #0x10
  18:	ret

Disassembly of section .text._ZNK4llvm15SmallVectorBase8capacityEv:

0000000000000000 <_ZNK4llvm15SmallVectorBase8capacityEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #12]
  10:	mov	w0, w0
  14:	add	sp, sp, #0x10
  18:	ret

Disassembly of section .text._ZN4llvm15SmallVectorBase8set_sizeEm:

0000000000000000 <_ZN4llvm15SmallVectorBase8set_sizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	bl	0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  18:	mov	x1, x0
  1c:	ldr	x0, [sp, #16]
  20:	cmp	x0, x1
  24:	b.ls	48 <_ZN4llvm15SmallVectorBase8set_sizeEm+0x48>  // b.plast
  28:	adrp	x0, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  2c:	add	x3, x0, #0x0
  30:	mov	w2, #0x43                  	// #67
  34:	adrp	x0, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  38:	add	x1, x0, #0x0
  3c:	adrp	x0, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  40:	add	x0, x0, #0x0
  44:	bl	0 <__assert_fail>
  48:	ldr	x0, [sp, #16]
  4c:	mov	w1, w0
  50:	ldr	x0, [sp, #24]
  54:	str	w1, [x0, #8]
  58:	nop
  5c:	ldp	x29, x30, [sp], #32
  60:	ret

Disassembly of section .text._ZN4llvm9StringRef6strLenEPKc:

0000000000000000 <_ZN4llvm9StringRef6strLenEPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <strlen>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZN4llvm9StringRefC2EPKc:

0000000000000000 <_ZN4llvm9StringRefC1EPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [sp, #16]
  18:	str	x1, [x0]
  1c:	ldr	x0, [sp, #16]
  20:	cmp	x0, #0x0
  24:	b.eq	38 <_ZN4llvm9StringRefC1EPKc+0x38>  // b.none
  28:	ldr	x0, [sp, #16]
  2c:	bl	0 <_ZN4llvm9StringRefC1EPKc>
  30:	mov	x1, x0
  34:	b	3c <_ZN4llvm9StringRefC1EPKc+0x3c>
  38:	mov	x1, #0x0                   	// #0
  3c:	ldr	x0, [sp, #24]
  40:	str	x1, [x0, #8]
  44:	nop
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZNK4llvm9StringRef4dataEv:

0000000000000000 <_ZNK4llvm9StringRef4dataEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZNK4llvm9StringRef4sizeEv:

0000000000000000 <_ZNK4llvm9StringRef4sizeEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZNK4llvm13FeatureBitsetixEj:

0000000000000000 <_ZNK4llvm13FeatureBitsetixEj>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #8]
   8:	str	w1, [sp, #4]
   c:	ldr	w0, [sp, #4]
  10:	and	w0, w0, #0x3f
  14:	mov	x1, #0x1                   	// #1
  18:	lsl	x0, x1, x0
  1c:	str	x0, [sp, #24]
  20:	ldr	w0, [sp, #4]
  24:	lsr	w1, w0, #6
  28:	ldr	x0, [sp, #8]
  2c:	mov	w1, w1
  30:	ldr	x1, [x0, x1, lsl #3]
  34:	ldr	x0, [sp, #24]
  38:	and	x0, x1, x0
  3c:	cmp	x0, #0x0
  40:	cset	w0, ne  // ne = any
  44:	and	w0, w0, #0xff
  48:	add	sp, sp, #0x20
  4c:	ret

Disassembly of section .text._ZN4llvm14array_lengthofImLm3EEEmRAT0__T_:

0000000000000000 <_ZN4llvm14array_lengthofImLm3EEEmRAT0__T_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	mov	x0, #0x3                   	// #3
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZN4llvm13FeatureBitsetaNERKS0_:

0000000000000000 <_ZN4llvm13FeatureBitsetaNERKS0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	str	wzr, [sp, #44]
  14:	ldr	x0, [sp, #24]
  18:	bl	0 <_ZN4llvm13FeatureBitsetaNERKS0_>
  1c:	str	w0, [sp, #40]
  20:	ldr	w1, [sp, #44]
  24:	ldr	w0, [sp, #40]
  28:	cmp	w1, w0
  2c:	b.eq	68 <_ZN4llvm13FeatureBitsetaNERKS0_+0x68>  // b.none
  30:	ldr	x0, [sp, #24]
  34:	ldr	w1, [sp, #44]
  38:	ldr	x1, [x0, x1, lsl #3]
  3c:	ldr	x0, [sp, #16]
  40:	ldr	w2, [sp, #44]
  44:	ldr	x0, [x0, x2, lsl #3]
  48:	and	x2, x1, x0
  4c:	ldr	x0, [sp, #24]
  50:	ldr	w1, [sp, #44]
  54:	str	x2, [x0, x1, lsl #3]
  58:	ldr	w0, [sp, #44]
  5c:	add	w0, w0, #0x1
  60:	str	w0, [sp, #44]
  64:	b	20 <_ZN4llvm13FeatureBitsetaNERKS0_+0x20>
  68:	ldr	x0, [sp, #24]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZNK4llvm13FeatureBitsetanERKS0_:

0000000000000000 <_ZNK4llvm13FeatureBitsetanERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	mov	x4, x8
   c:	str	x0, [sp, #24]
  10:	str	x1, [sp, #16]
  14:	ldr	x0, [sp, #24]
  18:	mov	x2, x4
  1c:	mov	x3, x0
  20:	ldp	x0, x1, [x3]
  24:	stp	x0, x1, [x2]
  28:	ldr	x0, [x3, #16]
  2c:	str	x0, [x2, #16]
  30:	ldr	x1, [sp, #16]
  34:	mov	x0, x4
  38:	bl	0 <_ZNK4llvm13FeatureBitsetanERKS0_>
  3c:	nop
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZNK4llvm13FeatureBitseteqERKS0_:

0000000000000000 <_ZNK4llvm13FeatureBitseteqERKS0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	x1, [sp, #32]
  14:	ldr	x0, [sp, #40]
  18:	bl	0 <_ZNK4llvm13FeatureBitseteqERKS0_>
  1c:	mov	x19, x0
  20:	ldr	x0, [sp, #40]
  24:	bl	0 <_ZNK4llvm13FeatureBitseteqERKS0_>
  28:	mov	x20, x0
  2c:	ldr	x0, [sp, #32]
  30:	bl	0 <_ZNK4llvm13FeatureBitseteqERKS0_>
  34:	mov	x2, x0
  38:	mov	x1, x20
  3c:	mov	x0, x19
  40:	bl	0 <_ZNK4llvm13FeatureBitseteqERKS0_>
  44:	and	w0, w0, #0xff
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret

Disassembly of section .text._ZNK4llvm8SysAlias12haveFeaturesENS_13FeatureBitsetE:

0000000000000000 <_ZNK4llvm8SysAlias12haveFeaturesENS_13FeatureBitsetE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	mov	x19, x1
  14:	ldr	x0, [sp, #40]
  18:	add	x0, x0, #0x10
  1c:	add	x1, sp, #0x38
  20:	mov	x8, x1
  24:	mov	x1, x19
  28:	bl	0 <_ZNK4llvm8SysAlias12haveFeaturesENS_13FeatureBitsetE>
  2c:	ldr	x0, [sp, #40]
  30:	add	x1, x0, #0x10
  34:	add	x0, sp, #0x38
  38:	bl	0 <_ZNK4llvm8SysAlias12haveFeaturesENS_13FeatureBitsetE>
  3c:	and	w0, w0, #0xff
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #80
  48:	ret

Disassembly of section .text._ZN4llvm5SMLocC2Ev:

0000000000000000 <_ZN4llvm5SMLocC1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	str	xzr, [x0]
  10:	nop
  14:	add	sp, sp, #0x10
  18:	ret

Disassembly of section .text._ZN4llvm9MCOperandC2Ev:

0000000000000000 <_ZN4llvm9MCOperandC1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	strb	wzr, [x0]
  10:	ldr	x0, [sp, #8]
  14:	str	xzr, [x0, #8]
  18:	nop
  1c:	add	sp, sp, #0x10
  20:	ret

Disassembly of section .text._ZN4llvm9MCOperand9createRegEj:

0000000000000000 <_ZN4llvm9MCOperand9createRegEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	add	x0, sp, #0x20
  10:	bl	0 <_ZN4llvm9MCOperand9createRegEj>
  14:	mov	w0, #0x1                   	// #1
  18:	strb	w0, [sp, #32]
  1c:	ldr	w0, [sp, #28]
  20:	str	w0, [sp, #40]
  24:	ldp	x0, x1, [sp, #32]
  28:	ldp	x29, x30, [sp], #48
  2c:	ret

Disassembly of section .text._ZN4llvm9MCOperand9createImmEl:

0000000000000000 <_ZN4llvm9MCOperand9createImmEl>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	add	x0, sp, #0x20
  10:	bl	0 <_ZN4llvm9MCOperand9createImmEl>
  14:	mov	w0, #0x2                   	// #2
  18:	strb	w0, [sp, #32]
  1c:	ldr	x0, [sp, #24]
  20:	str	x0, [sp, #40]
  24:	ldp	x0, x1, [sp, #32]
  28:	ldp	x29, x30, [sp], #48
  2c:	ret

Disassembly of section .text._ZN4llvm6MCInst9setOpcodeEj:

0000000000000000 <_ZN4llvm6MCInst9setOpcodeEj>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	w1, [sp, #4]
   c:	ldr	x0, [sp, #8]
  10:	ldr	w1, [sp, #4]
  14:	str	w1, [x0]
  18:	nop
  1c:	add	sp, sp, #0x10
  20:	ret

Disassembly of section .text._ZNK4llvm6MCInst9getOpcodeEv:

0000000000000000 <_ZNK4llvm6MCInst9getOpcodeEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN4llvm6MCInst10getOperandEj:

0000000000000000 <_ZN4llvm6MCInst10getOperandEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x0, [sp, #24]
  14:	add	x0, x0, #0x10
  18:	ldr	w1, [sp, #20]
  1c:	bl	0 <_ZN4llvm6MCInst10getOperandEj>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm6MCInst10addOperandERKNS_9MCOperandE:

0000000000000000 <_ZN4llvm6MCInst10addOperandERKNS_9MCOperandE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	add	x0, x0, #0x10
  18:	ldr	x1, [sp, #16]
  1c:	bl	0 <_ZN4llvm6MCInst10addOperandERKNS_9MCOperandE>
  20:	nop
  24:	ldp	x29, x30, [sp], #32
  28:	ret

Disassembly of section .text._ZN4llvm6MCInst5clearEv:

0000000000000000 <_ZN4llvm6MCInst5clearEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	add	x0, x0, #0x10
  14:	bl	0 <_ZN4llvm6MCInst5clearEv>
  18:	nop
  1c:	ldp	x29, x30, [sp], #32
  20:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #56]
  10:	stp	x1, x2, [sp, #40]
  14:	add	x0, sp, #0x28
  18:	bl	0 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>
  1c:	str	x0, [sp, #72]
  20:	ldr	x0, [sp, #56]
  24:	ldr	x1, [x0, #16]
  28:	ldr	x0, [sp, #56]
  2c:	ldr	x0, [x0, #24]
  30:	sub	x0, x1, x0
  34:	mov	x1, x0
  38:	ldr	x0, [sp, #72]
  3c:	cmp	x0, x1
  40:	b.ls	60 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x60>  // b.plast
  44:	add	x0, sp, #0x28
  48:	bl	0 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>
  4c:	ldr	x2, [sp, #72]
  50:	mov	x1, x0
  54:	ldr	x0, [sp, #56]
  58:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  5c:	b	a8 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0xa8>
  60:	ldr	x0, [sp, #72]
  64:	cmp	x0, #0x0
  68:	b.eq	a4 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0xa4>  // b.none
  6c:	ldr	x0, [sp, #56]
  70:	ldr	x19, [x0, #24]
  74:	add	x0, sp, #0x28
  78:	bl	0 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>
  7c:	ldr	x2, [sp, #72]
  80:	mov	x1, x0
  84:	mov	x0, x19
  88:	bl	0 <memcpy>
  8c:	ldr	x0, [sp, #56]
  90:	ldr	x1, [x0, #24]
  94:	ldr	x0, [sp, #72]
  98:	add	x1, x1, x0
  9c:	ldr	x0, [sp, #56]
  a0:	str	x1, [x0, #24]
  a4:	ldr	x0, [sp, #56]
  a8:	ldr	x19, [sp, #16]
  ac:	ldp	x29, x30, [sp], #80
  b0:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	add	x0, sp, #0x20
  14:	ldr	x1, [sp, #16]
  18:	bl	0 <_ZN4llvm11raw_ostreamlsEPKc>
  1c:	ldp	x1, x2, [sp, #32]
  20:	ldr	x0, [sp, #24]
  24:	bl	0 <_ZN4llvm11raw_ostreamlsEPKc>
  28:	ldp	x29, x30, [sp], #48
  2c:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEj:

0000000000000000 <_ZN4llvm11raw_ostreamlsEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	w0, [sp, #20]
  14:	mov	x1, x0
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZNK4llvm15MCRegisterClass10getNumRegsEv:

0000000000000000 <_ZNK4llvm15MCRegisterClass10getNumRegsEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldrh	w0, [x0, #20]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZNK4llvm15MCRegisterClass11getRegisterEj:

0000000000000000 <_ZNK4llvm15MCRegisterClass11getRegisterEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x0, [sp, #24]
  14:	bl	0 <_ZNK4llvm15MCRegisterClass11getRegisterEj>
  18:	mov	w1, w0
  1c:	ldr	w0, [sp, #20]
  20:	cmp	w0, w1
  24:	b.cc	48 <_ZNK4llvm15MCRegisterClass11getRegisterEj+0x48>  // b.lo, b.ul, b.last
  28:	adrp	x0, 0 <_ZNK4llvm15MCRegisterClass11getRegisterEj>
  2c:	add	x3, x0, #0x0
  30:	mov	w2, #0x3d                  	// #61
  34:	adrp	x0, 0 <_ZNK4llvm15MCRegisterClass11getRegisterEj>
  38:	add	x1, x0, #0x0
  3c:	adrp	x0, 0 <_ZNK4llvm15MCRegisterClass11getRegisterEj>
  40:	add	x0, x0, #0x0
  44:	bl	0 <__assert_fail>
  48:	nop
  4c:	ldr	x0, [sp, #24]
  50:	ldr	x1, [x0]
  54:	ldr	w0, [sp, #20]
  58:	lsl	x0, x0, #1
  5c:	add	x0, x1, x0
  60:	ldrh	w0, [x0]
  64:	ldp	x29, x30, [sp], #32
  68:	ret

Disassembly of section .text._ZNK4llvm15MCSubtargetInfo14getFeatureBitsEv:

0000000000000000 <_ZNK4llvm15MCSubtargetInfo14getFeatureBitsEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	x0, x0, #0xb8
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN4llvm14TargetRegistry22RegisterMCDisassemblerERNS_6TargetEPFPNS_14MCDisassemblerERKS1_RKNS_15MCSubtargetInfoERNS_9MCContextEE:

0000000000000000 <_ZN4llvm14TargetRegistry22RegisterMCDisassemblerERNS_6TargetEPFPNS_14MCDisassemblerERKS1_RKNS_15MCSubtargetInfoERNS_9MCContextEE>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp, #8]
  10:	ldr	x1, [sp]
  14:	str	x1, [x0, #120]
  18:	nop
  1c:	add	sp, sp, #0x10
  20:	ret

Disassembly of section .text._ZN4llvm14TargetRegistry20RegisterMCSymbolizerERNS_6TargetEPFPNS_12MCSymbolizerERKNS_6TripleEPFiPvmmmiS8_EPFPKcS8_mPmmPSC_ES8_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISK_EEE:

0000000000000000 <_ZN4llvm14TargetRegistry20RegisterMCSymbolizerERNS_6TargetEPFPNS_12MCSymbolizerERKNS_6TripleEPFiPvmmmiS8_EPFPKcS8_mPmmPSC_ES8_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISK_EEE>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp, #8]
  10:	ldr	x1, [sp]
  14:	str	x1, [x0, #208]
  18:	nop
  1c:	add	sp, sp, #0x10
  20:	ret

Disassembly of section .text._ZN4llvm13decodeULEB128EPKhPjS1_PPKc:

0000000000000000 <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc>:
   0:	sub	sp, sp, #0x40
   4:	str	x0, [sp, #24]
   8:	str	x1, [sp, #16]
   c:	str	x2, [sp, #8]
  10:	str	x3, [sp]
  14:	ldr	x0, [sp, #24]
  18:	str	x0, [sp, #40]
  1c:	str	xzr, [sp, #56]
  20:	str	wzr, [sp, #52]
  24:	ldr	x0, [sp]
  28:	cmp	x0, #0x0
  2c:	b.eq	38 <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc+0x38>  // b.none
  30:	ldr	x0, [sp]
  34:	str	xzr, [x0]
  38:	ldr	x0, [sp, #8]
  3c:	cmp	x0, #0x0
  40:	b.eq	9c <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc+0x9c>  // b.none
  44:	ldr	x1, [sp, #24]
  48:	ldr	x0, [sp, #8]
  4c:	cmp	x1, x0
  50:	b.ne	9c <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc+0x9c>  // b.any
  54:	ldr	x0, [sp]
  58:	cmp	x0, #0x0
  5c:	b.eq	70 <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc+0x70>  // b.none
  60:	ldr	x0, [sp]
  64:	adrp	x1, 0 <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc>
  68:	add	x1, x1, #0x0
  6c:	str	x1, [x0]
  70:	ldr	x0, [sp, #16]
  74:	cmp	x0, #0x0
  78:	b.eq	94 <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc+0x94>  // b.none
  7c:	ldr	x1, [sp, #24]
  80:	ldr	x0, [sp, #40]
  84:	sub	x0, x1, x0
  88:	mov	w1, w0
  8c:	ldr	x0, [sp, #16]
  90:	str	w1, [x0]
  94:	mov	x0, #0x0                   	// #0
  98:	b	1a8 <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc+0x1a8>
  9c:	ldr	x0, [sp, #24]
  a0:	ldrb	w0, [x0]
  a4:	and	x0, x0, #0xff
  a8:	and	x0, x0, #0x7f
  ac:	str	x0, [sp, #32]
  b0:	ldr	w0, [sp, #52]
  b4:	cmp	w0, #0x3f
  b8:	b.hi	dc <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc+0xdc>  // b.pmore
  bc:	ldr	w0, [sp, #52]
  c0:	ldr	x1, [sp, #32]
  c4:	lsl	x1, x1, x0
  c8:	ldr	w0, [sp, #52]
  cc:	lsr	x0, x1, x0
  d0:	ldr	x1, [sp, #32]
  d4:	cmp	x1, x0
  d8:	b.eq	124 <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc+0x124>  // b.none
  dc:	ldr	x0, [sp]
  e0:	cmp	x0, #0x0
  e4:	b.eq	f8 <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc+0xf8>  // b.none
  e8:	ldr	x0, [sp]
  ec:	adrp	x1, 0 <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc>
  f0:	add	x1, x1, #0x0
  f4:	str	x1, [x0]
  f8:	ldr	x0, [sp, #16]
  fc:	cmp	x0, #0x0
 100:	b.eq	11c <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc+0x11c>  // b.none
 104:	ldr	x1, [sp, #24]
 108:	ldr	x0, [sp, #40]
 10c:	sub	x0, x1, x0
 110:	mov	w1, w0
 114:	ldr	x0, [sp, #16]
 118:	str	w1, [x0]
 11c:	mov	x0, #0x0                   	// #0
 120:	b	1a8 <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc+0x1a8>
 124:	ldr	x0, [sp, #24]
 128:	ldrb	w0, [x0]
 12c:	and	x0, x0, #0xff
 130:	and	x1, x0, #0x7f
 134:	ldr	w0, [sp, #52]
 138:	lsl	x0, x1, x0
 13c:	ldr	x1, [sp, #56]
 140:	add	x0, x1, x0
 144:	str	x0, [sp, #56]
 148:	ldr	w0, [sp, #52]
 14c:	add	w0, w0, #0x7
 150:	str	w0, [sp, #52]
 154:	ldr	x0, [sp, #24]
 158:	add	x1, x0, #0x1
 15c:	str	x1, [sp, #24]
 160:	ldrb	w0, [x0]
 164:	sxtb	w0, w0
 168:	and	w0, w0, #0xff
 16c:	lsr	w0, w0, #7
 170:	and	w0, w0, #0xff
 174:	cmp	w0, #0x0
 178:	b.eq	180 <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc+0x180>  // b.none
 17c:	b	38 <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc+0x38>
 180:	ldr	x0, [sp, #16]
 184:	cmp	x0, #0x0
 188:	b.eq	1a4 <_ZN4llvm13decodeULEB128EPKhPjS1_PPKc+0x1a4>  // b.none
 18c:	ldr	x1, [sp, #24]
 190:	ldr	x0, [sp, #40]
 194:	sub	x0, x1, x0
 198:	mov	w1, w0
 19c:	ldr	x0, [sp, #16]
 1a0:	str	w1, [x0]
 1a4:	ldr	x0, [sp, #56]
 1a8:	add	sp, sp, #0x40
 1ac:	ret

Disassembly of section .text._ZSt4moveIRSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS2_EEEONSt16remove_referenceIT_E4typeEOS8_:

0000000000000000 <_ZSt4moveIRSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS2_EEEONSt16remove_referenceIT_E4typeEOS8_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EEC2EOS4_:

0000000000000000 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EEC1EOS4_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	x1, [sp, #32]
  14:	ldr	x19, [sp, #40]
  18:	ldr	x0, [sp, #32]
  1c:	bl	0 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EEC1EOS4_>
  20:	mov	x20, x0
  24:	ldr	x0, [sp, #32]
  28:	bl	0 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EEC1EOS4_>
  2c:	bl	0 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EEC1EOS4_>
  30:	mov	x2, x0
  34:	mov	x1, x20
  38:	mov	x0, x19
  3c:	bl	0 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EEC1EOS4_>
  40:	nop
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EED1Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	ldr	x0, [sp, #40]
  14:	bl	0 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EED1Ev>
  18:	str	x0, [sp, #56]
  1c:	ldr	x0, [sp, #56]
  20:	ldr	x0, [x0]
  24:	cmp	x0, #0x0
  28:	b.eq	50 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EED1Ev+0x50>  // b.none
  2c:	ldr	x0, [sp, #40]
  30:	bl	0 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EED1Ev>
  34:	mov	x19, x0
  38:	ldr	x0, [sp, #56]
  3c:	bl	0 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EED1Ev>
  40:	ldr	x0, [x0]
  44:	mov	x1, x0
  48:	mov	x0, x19
  4c:	bl	0 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EED1Ev>
  50:	ldr	x0, [sp, #56]
  54:	str	xzr, [x0]
  58:	nop
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #64
  64:	ret

Disassembly of section .text._ZNSt5tupleIJPN4llvm12MCSymbolizerESt14default_deleteIS1_EEEC2IS2_S4_Lb1EEEv:

0000000000000000 <_ZNSt5tupleIJPN4llvm12MCSymbolizerESt14default_deleteIS1_EEEC1IS2_S4_Lb1EEEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5tupleIJPN4llvm12MCSymbolizerESt14default_deleteIS1_EEEC1IS2_S4_Lb1EEEv>
  14:	nop
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNSt15__uniq_ptr_implIN4llvm12MCSymbolizerESt14default_deleteIS1_EEC2Ev:

0000000000000000 <_ZNSt15__uniq_ptr_implIN4llvm12MCSymbolizerESt14default_deleteIS1_EEC1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt15__uniq_ptr_implIN4llvm12MCSymbolizerESt14default_deleteIS1_EEC1Ev>
  14:	nop
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm12MCSymbolizerESt14default_deleteIS1_EEC2IS3_vEEv:

0000000000000000 <_ZNSt10unique_ptrIN4llvm12MCSymbolizerESt14default_deleteIS1_EEC1IS3_vEEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	str	xzr, [x0]
  14:	ldr	x0, [sp, #24]
  18:	bl	0 <_ZNSt10unique_ptrIN4llvm12MCSymbolizerESt14default_deleteIS1_EEC1IS3_vEEv>
  1c:	nop
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm17countLeadingZerosIjEEjT_NS_12ZeroBehaviorE:

0000000000000000 <_ZN4llvm17countLeadingZerosIjEEjT_NS_12ZeroBehaviorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	str	w1, [sp, #24]
  10:	ldr	w1, [sp, #24]
  14:	ldr	w0, [sp, #28]
  18:	bl	0 <_ZN4llvm17countLeadingZerosIjEEjT_NS_12ZeroBehaviorE>
  1c:	ldp	x29, x30, [sp], #32
  20:	ret

Disassembly of section .text._ZNSt5arrayIiLm2EEixEm:

0000000000000000 <_ZNSt5arrayIiLm2EEixEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [sp, #16]
  18:	bl	0 <_ZNSt5arrayIiLm2EEixEm>
  1c:	ldp	x29, x30, [sp], #32
  20:	ret

Disassembly of section .text._ZNSt5arrayIsLm4EEixEm:

0000000000000000 <_ZNSt5arrayIsLm4EEixEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [sp, #16]
  18:	bl	0 <_ZNSt5arrayIsLm4EEixEm>
  1c:	ldp	x29, x30, [sp], #32
  20:	ret

Disassembly of section .text._ZNSt5arrayIaLm8EEixEm:

0000000000000000 <_ZNSt5arrayIaLm8EEixEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [sp, #16]
  18:	bl	0 <_ZNSt5arrayIaLm8EEixEm>
  1c:	ldp	x29, x30, [sp], #32
  20:	ret

Disassembly of section .text._ZSt5beginIKmLm3EEPT_RAT0__S1_:

0000000000000000 <_ZSt5beginIKmLm3EEPT_RAT0__S1_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZSt3endIKmLm3EEPT_RAT0__S1_:

0000000000000000 <_ZSt3endIKmLm3EEPT_RAT0__S1_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	x0, x0, #0x18
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZSt5equalIPKmS1_EbT_S2_T0_:

0000000000000000 <_ZSt5equalIPKmS1_EbT_S2_T0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x0, [sp, #56]
  10:	str	x1, [sp, #48]
  14:	str	x2, [sp, #40]
  18:	ldr	x0, [sp, #56]
  1c:	bl	0 <_ZSt5equalIPKmS1_EbT_S2_T0_>
  20:	mov	x19, x0
  24:	ldr	x0, [sp, #48]
  28:	bl	0 <_ZSt5equalIPKmS1_EbT_S2_T0_>
  2c:	mov	x20, x0
  30:	ldr	x0, [sp, #40]
  34:	bl	0 <_ZSt5equalIPKmS1_EbT_S2_T0_>
  38:	mov	x2, x0
  3c:	mov	x1, x20
  40:	mov	x0, x19
  44:	bl	0 <_ZSt5equalIPKmS1_EbT_S2_T0_>
  48:	and	w0, w0, #0xff
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x29, x30, [sp], #64
  54:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	bl	0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>
  18:	mov	x1, x0
  1c:	ldr	x0, [sp, #16]
  20:	cmp	x0, x1
  24:	b.cc	48 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm+0x48>  // b.lo, b.ul, b.last
  28:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>
  2c:	add	x3, x0, #0x0
  30:	mov	w2, #0x95                  	// #149
  34:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>
  38:	add	x1, x0, #0x0
  3c:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>
  40:	add	x0, x0, #0x0
  44:	bl	0 <__assert_fail>
  48:	ldr	x0, [sp, #24]
  4c:	bl	0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>
  50:	mov	x1, x0
  54:	ldr	x0, [sp, #16]
  58:	lsl	x0, x0, #4
  5c:	add	x0, x1, x0
  60:	ldp	x29, x30, [sp], #32
  64:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	x1, [sp, #32]
  14:	ldr	x0, [sp, #40]
  18:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  1c:	mov	x19, x0
  20:	ldr	x0, [sp, #40]
  24:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  28:	cmp	x19, x0
  2c:	cset	w0, cs  // cs = hs, nlast
  30:	and	w0, w0, #0xff
  34:	and	x0, x0, #0xff
  38:	cmp	x0, #0x0
  3c:	cset	w0, ne  // ne = any
  40:	and	w0, w0, #0xff
  44:	cmp	w0, #0x0
  48:	b.eq	58 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_+0x58>  // b.none
  4c:	mov	x1, #0x0                   	// #0
  50:	ldr	x0, [sp, #40]
  54:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  58:	ldr	x0, [sp, #40]
  5c:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  60:	mov	x2, x0
  64:	ldr	x0, [sp, #32]
  68:	ldp	x0, x1, [x0]
  6c:	stp	x0, x1, [x2]
  70:	ldr	x19, [sp, #40]
  74:	ldr	x0, [sp, #40]
  78:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  7c:	add	x0, x0, #0x1
  80:	mov	x1, x0
  84:	mov	x0, x19
  88:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  8c:	nop
  90:	ldr	x19, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9MCOperandEE5clearEv:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9MCOperandEE5clearEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	ldr	x0, [sp, #40]
  14:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEE5clearEv>
  18:	mov	x19, x0
  1c:	ldr	x0, [sp, #40]
  20:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEE5clearEv>
  24:	mov	x1, x0
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEE5clearEv>
  30:	ldr	x0, [sp, #40]
  34:	str	wzr, [x0, #8]
  38:	nop
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #48
  44:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE5beginEv:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE5beginEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE5beginEv:

0000000000000000 <_ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE5beginEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE3endEv:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE3endEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	ldr	x0, [sp, #40]
  14:	bl	0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE3endEv>
  18:	mov	x19, x0
  1c:	ldr	x0, [sp, #40]
  20:	bl	0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE3endEv>
  24:	lsl	x0, x0, #4
  28:	add	x0, x19, x0
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret

Disassembly of section .text._ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE3endEv:

0000000000000000 <_ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE3endEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	ldr	x0, [sp, #40]
  14:	bl	0 <_ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE3endEv>
  18:	mov	x19, x0
  1c:	ldr	x0, [sp, #40]
  20:	bl	0 <_ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE3endEv>
  24:	lsl	x0, x0, #4
  28:	add	x0, x19, x0
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret

Disassembly of section .text._ZNK4llvm8ArrayRefIhE4sizeEv:

0000000000000000 <_ZNK4llvm8ArrayRefIhE4sizeEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZNK4llvm8ArrayRefIhEixEm:

0000000000000000 <_ZNK4llvm8ArrayRefIhEixEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #8]
  18:	ldr	x1, [sp, #16]
  1c:	cmp	x1, x0
  20:	b.cc	44 <_ZNK4llvm8ArrayRefIhEixEm+0x44>  // b.lo, b.ul, b.last
  24:	adrp	x0, 0 <_ZNK4llvm8ArrayRefIhEixEm>
  28:	add	x3, x0, #0x0
  2c:	mov	w2, #0xfa                  	// #250
  30:	adrp	x0, 0 <_ZNK4llvm8ArrayRefIhEixEm>
  34:	add	x1, x0, #0x0
  38:	adrp	x0, 0 <_ZNK4llvm8ArrayRefIhEixEm>
  3c:	add	x0, x0, #0x0
  40:	bl	0 <__assert_fail>
  44:	ldr	x0, [sp, #24]
  48:	ldr	x1, [x0]
  4c:	ldr	x0, [sp, #16]
  50:	add	x0, x1, x0
  54:	ldp	x29, x30, [sp], #32
  58:	ret

Disassembly of section .text._ZN4llvm6MCInstC2Ev:

0000000000000000 <_ZN4llvm6MCInstC1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	str	wzr, [x0]
  14:	ldr	x0, [sp, #24]
  18:	str	wzr, [x0, #4]
  1c:	ldr	x0, [sp, #24]
  20:	add	x0, x0, #0x8
  24:	bl	0 <_ZN4llvm6MCInstC1Ev>
  28:	ldr	x0, [sp, #24]
  2c:	add	x0, x0, #0x10
  30:	bl	0 <_ZN4llvm6MCInstC1Ev>
  34:	nop
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZN4llvm6MCInstD2Ev:

0000000000000000 <_ZN4llvm6MCInstD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	add	x0, x0, #0x10
  14:	bl	0 <_ZN4llvm6MCInstD1Ev>
  18:	nop
  1c:	ldp	x29, x30, [sp], #32
  20:	ret

Disassembly of section .text._ZN4llvm6MCInstaSERKS0_:

0000000000000000 <_ZN4llvm6MCInstaSERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #16]
  14:	ldr	w1, [x0]
  18:	ldr	x0, [sp, #24]
  1c:	str	w1, [x0]
  20:	ldr	x0, [sp, #16]
  24:	ldr	w1, [x0, #4]
  28:	ldr	x0, [sp, #24]
  2c:	str	w1, [x0, #4]
  30:	ldr	x0, [sp, #24]
  34:	ldr	x1, [sp, #16]
  38:	ldr	x1, [x1, #8]
  3c:	str	x1, [x0, #8]
  40:	ldr	x0, [sp, #24]
  44:	add	x2, x0, #0x10
  48:	ldr	x0, [sp, #16]
  4c:	add	x0, x0, #0x10
  50:	mov	x1, x0
  54:	mov	x0, x2
  58:	bl	0 <_ZN4llvm6MCInstaSERKS0_>
  5c:	ldr	x0, [sp, #24]
  60:	ldp	x29, x30, [sp], #32
  64:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE7releaseEv:

0000000000000000 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE7releaseEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE7releaseEv>
  14:	str	x0, [sp, #40]
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE7releaseEv>
  20:	str	xzr, [x0]
  24:	ldr	x0, [sp, #40]
  28:	ldp	x29, x30, [sp], #48
  2c:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE11get_deleterEv:

0000000000000000 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE11get_deleterEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE11get_deleterEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt7forwardISt14default_deleteIN4llvm16MCRelocationInfoEEEOT_RNSt16remove_referenceIS4_E4typeE:

0000000000000000 <_ZSt7forwardISt14default_deleteIN4llvm16MCRelocationInfoEEEOT_RNSt16remove_referenceIS4_E4typeE>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt15__uniq_ptr_implIN4llvm16MCRelocationInfoESt14default_deleteIS1_EEC2IS3_EEPS1_OT_:

0000000000000000 <_ZNSt15__uniq_ptr_implIN4llvm16MCRelocationInfoESt14default_deleteIS1_EEC1IS3_EEPS1_OT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #56]
  10:	str	x1, [sp, #48]
  14:	str	x2, [sp, #40]
  18:	ldr	x19, [sp, #56]
  1c:	ldr	x0, [sp, #40]
  20:	bl	0 <_ZNSt15__uniq_ptr_implIN4llvm16MCRelocationInfoESt14default_deleteIS1_EEC1IS3_EEPS1_OT_>
  24:	mov	x1, x0
  28:	add	x0, sp, #0x30
  2c:	mov	x2, x1
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt15__uniq_ptr_implIN4llvm16MCRelocationInfoESt14default_deleteIS1_EEC1IS3_EEPS1_OT_>
  3c:	nop
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #64
  48:	ret

Disassembly of section .text._ZNSt15__uniq_ptr_implIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE6_M_ptrEv:

0000000000000000 <_ZNSt15__uniq_ptr_implIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE6_M_ptrEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt15__uniq_ptr_implIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE6_M_ptrEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt4moveIRPN4llvm16MCRelocationInfoEEONSt16remove_referenceIT_E4typeEOS5_:

0000000000000000 <_ZSt4moveIRPN4llvm16MCRelocationInfoEEONSt16remove_referenceIT_E4typeEOS5_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNKSt14default_deleteIN4llvm16MCRelocationInfoEEclEPS1_:

0000000000000000 <_ZNKSt14default_deleteIN4llvm16MCRelocationInfoEEclEPS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #16]
  14:	cmp	x0, #0x0
  18:	b.eq	2c <_ZNKSt14default_deleteIN4llvm16MCRelocationInfoEEclEPS1_+0x2c>  // b.none
  1c:	ldr	x1, [x0]
  20:	add	x1, x1, #0x8
  24:	ldr	x1, [x1]
  28:	blr	x1
  2c:	nop
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZNSt11_Tuple_implILm0EJPN4llvm12MCSymbolizerESt14default_deleteIS1_EEEC2Ev:

0000000000000000 <_ZNSt11_Tuple_implILm0EJPN4llvm12MCSymbolizerESt14default_deleteIS1_EEEC1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt11_Tuple_implILm0EJPN4llvm12MCSymbolizerESt14default_deleteIS1_EEEC1Ev>
  14:	ldr	x0, [sp, #24]
  18:	bl	0 <_ZNSt11_Tuple_implILm0EJPN4llvm12MCSymbolizerESt14default_deleteIS1_EEEC1Ev>
  1c:	nop
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm6detail19LeadingZerosCounterIjLm4EE5countEjNS_12ZeroBehaviorE:

0000000000000000 <_ZN4llvm6detail19LeadingZerosCounterIjLm4EE5countEjNS_12ZeroBehaviorE>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	str	w1, [sp, #8]
   c:	ldr	w0, [sp, #8]
  10:	cmp	w0, #0x0
  14:	b.eq	2c <_ZN4llvm6detail19LeadingZerosCounterIjLm4EE5countEjNS_12ZeroBehaviorE+0x2c>  // b.none
  18:	ldr	w0, [sp, #12]
  1c:	cmp	w0, #0x0
  20:	b.ne	2c <_ZN4llvm6detail19LeadingZerosCounterIjLm4EE5countEjNS_12ZeroBehaviorE+0x2c>  // b.any
  24:	mov	w0, #0x20                  	// #32
  28:	b	34 <_ZN4llvm6detail19LeadingZerosCounterIjLm4EE5countEjNS_12ZeroBehaviorE+0x34>
  2c:	ldr	w0, [sp, #12]
  30:	clz	w0, w0
  34:	add	sp, sp, #0x10
  38:	ret

Disassembly of section .text._ZNSt14__array_traitsIiLm2EE6_S_refERA2_Kim:

0000000000000000 <_ZNSt14__array_traitsIiLm2EE6_S_refERA2_Kim>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp]
  10:	lsl	x0, x0, #2
  14:	ldr	x1, [sp, #8]
  18:	add	x0, x1, x0
  1c:	add	sp, sp, #0x10
  20:	ret

Disassembly of section .text._ZNSt14__array_traitsIsLm4EE6_S_refERA4_Ksm:

0000000000000000 <_ZNSt14__array_traitsIsLm4EE6_S_refERA4_Ksm>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp]
  10:	lsl	x0, x0, #1
  14:	ldr	x1, [sp, #8]
  18:	add	x0, x1, x0
  1c:	add	sp, sp, #0x10
  20:	ret

Disassembly of section .text._ZNSt14__array_traitsIaLm8EE6_S_refERA8_Kam:

0000000000000000 <_ZNSt14__array_traitsIaLm8EE6_S_refERA8_Kam>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x1, [sp, #8]
  10:	ldr	x0, [sp]
  14:	add	x0, x1, x0
  18:	add	sp, sp, #0x10
  1c:	ret

Disassembly of section .text._ZSt12__niter_baseIPKmET_S2_:

0000000000000000 <_ZSt12__niter_baseIPKmET_S2_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZSt11__equal_auxIPKmS1_EbT_S2_T0_:

0000000000000000 <_ZSt11__equal_auxIPKmS1_EbT_S2_T0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	mov	w0, #0x1                   	// #1
  18:	strb	w0, [sp, #63]
  1c:	ldr	x2, [sp, #24]
  20:	ldr	x1, [sp, #32]
  24:	ldr	x0, [sp, #40]
  28:	bl	0 <_ZSt11__equal_auxIPKmS1_EbT_S2_T0_>
  2c:	and	w0, w0, #0xff
  30:	ldp	x29, x30, [sp], #64
  34:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE4growEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	mov	x2, #0x10                  	// #16
  18:	ldr	x1, [sp, #16]
  1c:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE4growEm>
  20:	nop
  24:	ldp	x29, x30, [sp], #32
  28:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE13destroy_rangeEPS1_S3_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE13destroy_rangeEPS1_S3_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	nop
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN4llvm11SmallVectorINS_9MCOperandELj8EEC2Ev:

0000000000000000 <_ZN4llvm11SmallVectorINS_9MCOperandELj8EEC1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	mov	w1, #0x8                   	// #8
  14:	bl	0 <_ZN4llvm11SmallVectorINS_9MCOperandELj8EEC1Ev>
  18:	nop
  1c:	ldp	x29, x30, [sp], #32
  20:	ret

Disassembly of section .text._ZN4llvm11SmallVectorINS_9MCOperandELj8EED2Ev:

0000000000000000 <_ZN4llvm11SmallVectorINS_9MCOperandELj8EED1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	ldr	x0, [sp, #40]
  14:	bl	0 <_ZN4llvm11SmallVectorINS_9MCOperandELj8EED1Ev>
  18:	mov	x19, x0
  1c:	ldr	x0, [sp, #40]
  20:	bl	0 <_ZN4llvm11SmallVectorINS_9MCOperandELj8EED1Ev>
  24:	mov	x1, x0
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm11SmallVectorINS_9MCOperandELj8EED1Ev>
  30:	ldr	x0, [sp, #40]
  34:	bl	0 <_ZN4llvm11SmallVectorINS_9MCOperandELj8EED1Ev>
  38:	nop
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #48
  44:	ret

Disassembly of section .text._ZN4llvm11SmallVectorINS_9MCOperandELj8EEaSERKS2_:

0000000000000000 <_ZN4llvm11SmallVectorINS_9MCOperandELj8EEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [sp, #16]
  18:	bl	0 <_ZN4llvm11SmallVectorINS_9MCOperandELj8EEaSERKS2_>
  1c:	ldr	x0, [sp, #24]
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZNKSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE3getEv:

0000000000000000 <_ZNKSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE3getEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNKSt10unique_ptrIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE3getEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt15__uniq_ptr_implIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE10_M_deleterEv:

0000000000000000 <_ZNSt15__uniq_ptr_implIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE10_M_deleterEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt15__uniq_ptr_implIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE10_M_deleterEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt5tupleIJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEEC2IRS2_S4_Lb1EEEOT_OT0_:

0000000000000000 <_ZNSt5tupleIJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEEC1IRS2_S4_Lb1EEEOT_OT0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x0, [sp, #56]
  10:	str	x1, [sp, #48]
  14:	str	x2, [sp, #40]
  18:	ldr	x19, [sp, #56]
  1c:	ldr	x0, [sp, #48]
  20:	bl	0 <_ZNSt5tupleIJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEEC1IRS2_S4_Lb1EEEOT_OT0_>
  24:	mov	x20, x0
  28:	ldr	x0, [sp, #40]
  2c:	bl	0 <_ZNSt5tupleIJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEEC1IRS2_S4_Lb1EEEOT_OT0_>
  30:	mov	x2, x0
  34:	mov	x1, x20
  38:	mov	x0, x19
  3c:	bl	0 <_ZNSt5tupleIJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEEC1IRS2_S4_Lb1EEEOT_OT0_>
  40:	nop
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #64
  4c:	ret

Disassembly of section .text._ZSt3getILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_:

0000000000000000 <_ZSt3getILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt3getILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt11_Tuple_implILm1EJSt14default_deleteIN4llvm12MCSymbolizerEEEEC2Ev:

0000000000000000 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4llvm12MCSymbolizerEEEEC1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4llvm12MCSymbolizerEEEEC1Ev>
  14:	nop
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNSt10_Head_baseILm0EPN4llvm12MCSymbolizerELb0EEC2Ev:

0000000000000000 <_ZNSt10_Head_baseILm0EPN4llvm12MCSymbolizerELb0EEC1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	str	xzr, [x0]
  10:	nop
  14:	add	sp, sp, #0x10
  18:	ret

Disassembly of section .text._ZN4llvm9adl_beginIRSt5arrayIiLm2EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_:

0000000000000000 <_ZN4llvm9adl_beginIRSt5arrayIiLm2EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm9adl_beginIRSt5arrayIiLm2EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>
  14:	bl	0 <_ZN4llvm9adl_beginIRSt5arrayIiLm2EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm7adl_endIRSt5arrayIiLm2EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_:

0000000000000000 <_ZN4llvm7adl_endIRSt5arrayIiLm2EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm7adl_endIRSt5arrayIiLm2EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>
  14:	bl	0 <_ZN4llvm7adl_endIRSt5arrayIiLm2EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm9adl_beginIRSt5arrayIsLm4EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_:

0000000000000000 <_ZN4llvm9adl_beginIRSt5arrayIsLm4EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm9adl_beginIRSt5arrayIsLm4EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>
  14:	bl	0 <_ZN4llvm9adl_beginIRSt5arrayIsLm4EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm7adl_endIRSt5arrayIsLm4EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_:

0000000000000000 <_ZN4llvm7adl_endIRSt5arrayIsLm4EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm7adl_endIRSt5arrayIsLm4EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>
  14:	bl	0 <_ZN4llvm7adl_endIRSt5arrayIsLm4EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm9adl_beginIRSt5arrayIaLm8EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_:

0000000000000000 <_ZN4llvm9adl_beginIRSt5arrayIaLm8EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm9adl_beginIRSt5arrayIaLm8EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>
  14:	bl	0 <_ZN4llvm9adl_beginIRSt5arrayIaLm8EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm7adl_endIRSt5arrayIaLm8EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_:

0000000000000000 <_ZN4llvm7adl_endIRSt5arrayIaLm8EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm7adl_endIRSt5arrayIaLm8EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>
  14:	bl	0 <_ZN4llvm7adl_endIRSt5arrayIaLm8EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_:

0000000000000000 <_ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x1, [sp, #32]
  18:	ldr	x0, [sp, #40]
  1c:	sub	x0, x1, x0
  20:	asr	x0, x0, #3
  24:	str	x0, [sp, #56]
  28:	ldr	x0, [sp, #56]
  2c:	cmp	x0, #0x0
  30:	b.eq	5c <_ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_+0x5c>  // b.none
  34:	ldr	x0, [sp, #56]
  38:	lsl	x0, x0, #3
  3c:	mov	x2, x0
  40:	ldr	x1, [sp, #24]
  44:	ldr	x0, [sp, #40]
  48:	bl	0 <memcmp>
  4c:	cmp	w0, #0x0
  50:	cset	w0, eq  // eq = none
  54:	and	w0, w0, #0xff
  58:	b	60 <_ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_+0x60>
  5c:	mov	w0, #0x1                   	// #1
  60:	ldp	x29, x30, [sp], #64
  64:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE8grow_podEmm:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE8grow_podEmm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #56]
  10:	str	x1, [sp, #48]
  14:	str	x2, [sp, #40]
  18:	ldr	x19, [sp, #56]
  1c:	ldr	x0, [sp, #56]
  20:	bl	0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE8grow_podEmm>
  24:	ldr	x3, [sp, #40]
  28:	ldr	x2, [sp, #48]
  2c:	mov	x1, x0
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  38:	nop
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #64
  44:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9MCOperandEEC2Ej:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEC1Ej>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x0, [sp, #24]
  14:	ldr	w1, [sp, #20]
  18:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEC1Ej>
  1c:	nop
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9MCOperandEED2Ev:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9MCOperandEED1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEED1Ev>
  14:	and	w0, w0, #0xff
  18:	eor	w0, w0, #0x1
  1c:	and	w0, w0, #0xff
  20:	cmp	w0, #0x0
  24:	b.eq	34 <_ZN4llvm15SmallVectorImplINS_9MCOperandEED1Ev+0x34>  // b.none
  28:	ldr	x0, [sp, #24]
  2c:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEED1Ev>
  30:	bl	0 <free>
  34:	nop
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	x1, [sp, #32]
  14:	ldr	x1, [sp, #40]
  18:	ldr	x0, [sp, #32]
  1c:	cmp	x1, x0
  20:	b.ne	2c <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x2c>  // b.any
  24:	ldr	x0, [sp, #40]
  28:	b	1e4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x1e4>
  2c:	ldr	x0, [sp, #32]
  30:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  34:	str	x0, [sp, #56]
  38:	ldr	x0, [sp, #40]
  3c:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  40:	str	x0, [sp, #72]
  44:	ldr	x1, [sp, #72]
  48:	ldr	x0, [sp, #56]
  4c:	cmp	x1, x0
  50:	b.cc	d8 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xd8>  // b.lo, b.ul, b.last
  54:	ldr	x0, [sp, #56]
  58:	cmp	x0, #0x0
  5c:	b.eq	a4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xa4>  // b.none
  60:	ldr	x0, [sp, #32]
  64:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  68:	mov	x20, x0
  6c:	ldr	x0, [sp, #32]
  70:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  74:	mov	x1, x0
  78:	ldr	x0, [sp, #56]
  7c:	lsl	x0, x0, #4
  80:	add	x19, x1, x0
  84:	ldr	x0, [sp, #40]
  88:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  8c:	mov	x2, x0
  90:	mov	x1, x19
  94:	mov	x0, x20
  98:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  9c:	str	x0, [sp, #64]
  a0:	b	b0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xb0>
  a4:	ldr	x0, [sp, #40]
  a8:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  ac:	str	x0, [sp, #64]
  b0:	ldr	x0, [sp, #40]
  b4:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  b8:	mov	x1, x0
  bc:	ldr	x0, [sp, #64]
  c0:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  c4:	ldr	x0, [sp, #40]
  c8:	ldr	x1, [sp, #56]
  cc:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  d0:	ldr	x0, [sp, #40]
  d4:	b	1e4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x1e4>
  d8:	ldr	x0, [sp, #40]
  dc:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
  e0:	mov	x1, x0
  e4:	ldr	x0, [sp, #56]
  e8:	cmp	x0, x1
  ec:	cset	w0, hi  // hi = pmore
  f0:	and	w0, w0, #0xff
  f4:	cmp	w0, #0x0
  f8:	b.eq	13c <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x13c>  // b.none
  fc:	ldr	x0, [sp, #40]
 100:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 104:	mov	x19, x0
 108:	ldr	x0, [sp, #40]
 10c:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 110:	mov	x1, x0
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 11c:	ldr	x0, [sp, #40]
 120:	mov	x1, #0x0                   	// #0
 124:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 128:	str	xzr, [sp, #72]
 12c:	ldr	x0, [sp, #40]
 130:	ldr	x1, [sp, #56]
 134:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 138:	b	184 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x184>
 13c:	ldr	x0, [sp, #72]
 140:	cmp	x0, #0x0
 144:	b.eq	184 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x184>  // b.none
 148:	ldr	x0, [sp, #32]
 14c:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 150:	mov	x20, x0
 154:	ldr	x0, [sp, #32]
 158:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 15c:	mov	x1, x0
 160:	ldr	x0, [sp, #72]
 164:	lsl	x0, x0, #4
 168:	add	x19, x1, x0
 16c:	ldr	x0, [sp, #40]
 170:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 174:	mov	x2, x0
 178:	mov	x1, x19
 17c:	mov	x0, x20
 180:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 184:	ldr	x0, [sp, #32]
 188:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 18c:	mov	x1, x0
 190:	ldr	x0, [sp, #72]
 194:	lsl	x0, x0, #4
 198:	add	x19, x1, x0
 19c:	ldr	x0, [sp, #32]
 1a0:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 1a4:	mov	x20, x0
 1a8:	ldr	x0, [sp, #40]
 1ac:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 1b0:	mov	x1, x0
 1b4:	ldr	x0, [sp, #72]
 1b8:	lsl	x0, x0, #4
 1bc:	add	x0, x1, x0
 1c0:	mov	x3, #0x0                   	// #0
 1c4:	mov	x2, x0
 1c8:	mov	x1, x20
 1cc:	mov	x0, x19
 1d0:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 1d4:	ldr	x0, [sp, #40]
 1d8:	ldr	x1, [sp, #56]
 1dc:	bl	0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 1e0:	ldr	x0, [sp, #40]
 1e4:	ldp	x19, x20, [sp, #16]
 1e8:	ldp	x29, x30, [sp], #80
 1ec:	ret

Disassembly of section .text._ZNKSt15__uniq_ptr_implIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE6_M_ptrEv:

0000000000000000 <_ZNKSt15__uniq_ptr_implIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE6_M_ptrEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNKSt15__uniq_ptr_implIN4llvm16MCRelocationInfoESt14default_deleteIS1_EE6_M_ptrEv>
  14:	ldr	x0, [x0]
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZSt3getILm1EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_:

0000000000000000 <_ZSt3getILm1EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt3getILm1EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt7forwardIRPN4llvm16MCRelocationInfoEEOT_RNSt16remove_referenceIS4_E4typeE:

0000000000000000 <_ZSt7forwardIRPN4llvm16MCRelocationInfoEEOT_RNSt16remove_referenceIS4_E4typeE>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt11_Tuple_implILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEEC2IRS2_JS4_EvEEOT_DpOT0_:

0000000000000000 <_ZNSt11_Tuple_implILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEEC1IRS2_JS4_EvEEOT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #56]
  10:	str	x1, [sp, #48]
  14:	str	x2, [sp, #40]
  18:	ldr	x0, [sp, #40]
  1c:	bl	0 <_ZNSt11_Tuple_implILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEEC1IRS2_JS4_EvEEOT_DpOT0_>
  20:	mov	x1, x0
  24:	ldr	x0, [sp, #56]
  28:	bl	0 <_ZNSt11_Tuple_implILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEEC1IRS2_JS4_EvEEOT_DpOT0_>
  2c:	ldr	x19, [sp, #56]
  30:	ldr	x0, [sp, #48]
  34:	bl	0 <_ZNSt11_Tuple_implILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEEC1IRS2_JS4_EvEEOT_DpOT0_>
  38:	mov	x1, x0
  3c:	mov	x0, x19
  40:	bl	0 <_ZNSt11_Tuple_implILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEEC1IRS2_JS4_EvEEOT_DpOT0_>
  44:	nop
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #64
  50:	ret

Disassembly of section .text._ZSt12__get_helperILm0EPN4llvm16MCRelocationInfoEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE:

0000000000000000 <_ZSt12__get_helperILm0EPN4llvm16MCRelocationInfoEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt12__get_helperILm0EPN4llvm16MCRelocationInfoEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt10_Head_baseILm1ESt14default_deleteIN4llvm12MCSymbolizerEELb1EEC2Ev:

0000000000000000 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4llvm12MCSymbolizerEELb1EEC1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	nop
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZSt7forwardIRSt5arrayIiLm2EEEOT_RNSt16remove_referenceIS3_E4typeE:

0000000000000000 <_ZSt7forwardIRSt5arrayIiLm2EEEOT_RNSt16remove_referenceIS3_E4typeE>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZN4llvm10adl_detail9adl_beginIRSt5arrayIiLm2EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_:

0000000000000000 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIiLm2EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIiLm2EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>
  14:	bl	0 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIiLm2EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm10adl_detail7adl_endIRSt5arrayIiLm2EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_:

0000000000000000 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIiLm2EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIiLm2EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>
  14:	bl	0 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIiLm2EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZSt7forwardIRSt5arrayIsLm4EEEOT_RNSt16remove_referenceIS3_E4typeE:

0000000000000000 <_ZSt7forwardIRSt5arrayIsLm4EEEOT_RNSt16remove_referenceIS3_E4typeE>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZN4llvm10adl_detail9adl_beginIRSt5arrayIsLm4EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_:

0000000000000000 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIsLm4EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIsLm4EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>
  14:	bl	0 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIsLm4EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm10adl_detail7adl_endIRSt5arrayIsLm4EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_:

0000000000000000 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIsLm4EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIsLm4EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>
  14:	bl	0 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIsLm4EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZSt7forwardIRSt5arrayIaLm8EEEOT_RNSt16remove_referenceIS3_E4typeE:

0000000000000000 <_ZSt7forwardIRSt5arrayIaLm8EEEOT_RNSt16remove_referenceIS3_E4typeE>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZN4llvm10adl_detail9adl_beginIRSt5arrayIaLm8EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_:

0000000000000000 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIaLm8EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIaLm8EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>
  14:	bl	0 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIaLm8EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm10adl_detail7adl_endIRSt5arrayIaLm8EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_:

0000000000000000 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIaLm8EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIaLm8EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>
  14:	bl	0 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIaLm8EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE10getFirstElEv:

0000000000000000 <_ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE10getFirstElEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	x0, x0, #0x10
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZSt12__niter_baseIPN4llvm9MCOperandEET_S3_:

0000000000000000 <_ZSt12__niter_baseIPN4llvm9MCOperandEET_S3_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZSt12__niter_wrapIPN4llvm9MCOperandEET_RKS3_S3_:

0000000000000000 <_ZSt12__niter_wrapIPN4llvm9MCOperandEET_RKS3_S3_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EEC2Em:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EEC1Em>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [sp, #16]
  18:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EEC1Em>
  1c:	nop
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE7isSmallEv:

0000000000000000 <_ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE7isSmallEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	ldr	x0, [sp, #40]
  14:	ldr	x19, [x0]
  18:	ldr	x0, [sp, #40]
  1c:	bl	0 <_ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE7isSmallEv>
  20:	cmp	x19, x0
  24:	cset	w0, eq  // eq = none
  28:	and	w0, w0, #0xff
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret

Disassembly of section .text._ZSt4copyIPKN4llvm9MCOperandEPS1_ET0_T_S6_S5_:

0000000000000000 <_ZSt4copyIPKN4llvm9MCOperandEPS1_ET0_T_S6_S5_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #56]
  10:	str	x1, [sp, #48]
  14:	str	x2, [sp, #40]
  18:	ldr	x0, [sp, #56]
  1c:	bl	0 <_ZSt4copyIPKN4llvm9MCOperandEPS1_ET0_T_S6_S5_>
  20:	mov	x19, x0
  24:	ldr	x0, [sp, #48]
  28:	bl	0 <_ZSt4copyIPKN4llvm9MCOperandEPS1_ET0_T_S6_S5_>
  2c:	ldr	x2, [sp, #40]
  30:	mov	x1, x0
  34:	mov	x0, x19
  38:	bl	0 <_ZSt4copyIPKN4llvm9MCOperandEPS1_ET0_T_S6_S5_>
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #64
  44:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE18uninitialized_copyIKS1_S1_EEvPT_S6_PT0_PNSt9enable_ifIXsrSt7is_sameINSt12remove_constIS5_E4typeES7_E5valueEvE4typeE:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE18uninitialized_copyIKS1_S1_EEvPT_S6_PT0_PNSt9enable_ifIXsrSt7is_sameINSt12remove_constIS5_E4typeES7_E5valueEvE4typeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	str	x3, [sp, #16]
  18:	ldr	x1, [sp, #40]
  1c:	ldr	x0, [sp, #32]
  20:	cmp	x1, x0
  24:	b.eq	44 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE18uninitialized_copyIKS1_S1_EEvPT_S6_PT0_PNSt9enable_ifIXsrSt7is_sameINSt12remove_constIS5_E4typeES7_E5valueEvE4typeE+0x44>  // b.none
  28:	ldr	x1, [sp, #32]
  2c:	ldr	x0, [sp, #40]
  30:	sub	x0, x1, x0
  34:	mov	x2, x0
  38:	ldr	x1, [sp, #40]
  3c:	ldr	x0, [sp, #24]
  40:	bl	0 <memcpy>
  44:	nop
  48:	ldp	x29, x30, [sp], #48
  4c:	ret

Disassembly of section .text._ZSt3getILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_:

0000000000000000 <_ZSt3getILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt3getILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt12__get_helperILm1ESt14default_deleteIN4llvm16MCRelocationInfoEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE:

0000000000000000 <_ZSt12__get_helperILm1ESt14default_deleteIN4llvm16MCRelocationInfoEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt12__get_helperILm1ESt14default_deleteIN4llvm16MCRelocationInfoEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt11_Tuple_implILm1EJSt14default_deleteIN4llvm16MCRelocationInfoEEEEC2IS3_EEOT_:

0000000000000000 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4llvm16MCRelocationInfoEEEEC1IS3_EEOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #16]
  14:	bl	0 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4llvm16MCRelocationInfoEEEEC1IS3_EEOT_>
  18:	mov	x1, x0
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4llvm16MCRelocationInfoEEEEC1IS3_EEOT_>
  24:	nop
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZNSt10_Head_baseILm0EPN4llvm16MCRelocationInfoELb0EEC2IRS2_EEOT_:

0000000000000000 <_ZNSt10_Head_baseILm0EPN4llvm16MCRelocationInfoELb0EEC1IRS2_EEOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #16]
  14:	bl	0 <_ZNSt10_Head_baseILm0EPN4llvm16MCRelocationInfoELb0EEC1IRS2_EEOT_>
  18:	ldr	x1, [x0]
  1c:	ldr	x0, [sp, #24]
  20:	str	x1, [x0]
  24:	nop
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZNSt11_Tuple_implILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEE7_M_headERS5_:

0000000000000000 <_ZNSt11_Tuple_implILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEE7_M_headERS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt11_Tuple_implILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEE7_M_headERS5_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt5beginISt5arrayIiLm2EEEDTcldtfp_5beginEERT_:

0000000000000000 <_ZSt5beginISt5arrayIiLm2EEEDTcldtfp_5beginEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt5beginISt5arrayIiLm2EEEDTcldtfp_5beginEERT_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt3endISt5arrayIiLm2EEEDTcldtfp_3endEERT_:

0000000000000000 <_ZSt3endISt5arrayIiLm2EEEDTcldtfp_3endEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt3endISt5arrayIiLm2EEEDTcldtfp_3endEERT_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt5beginISt5arrayIsLm4EEEDTcldtfp_5beginEERT_:

0000000000000000 <_ZSt5beginISt5arrayIsLm4EEEDTcldtfp_5beginEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt5beginISt5arrayIsLm4EEEDTcldtfp_5beginEERT_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt3endISt5arrayIsLm4EEEDTcldtfp_3endEERT_:

0000000000000000 <_ZSt3endISt5arrayIsLm4EEEDTcldtfp_3endEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt3endISt5arrayIsLm4EEEDTcldtfp_3endEERT_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt5beginISt5arrayIaLm8EEEDTcldtfp_5beginEERT_:

0000000000000000 <_ZSt5beginISt5arrayIaLm8EEEDTcldtfp_5beginEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt5beginISt5arrayIaLm8EEEDTcldtfp_5beginEERT_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt3endISt5arrayIaLm8EEEDTcldtfp_3endEERT_:

0000000000000000 <_ZSt3endISt5arrayIaLm8EEEDTcldtfp_3endEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt3endISt5arrayIaLm8EEEDTcldtfp_3endEERT_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEC2Em:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEC1Em>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	x1, [sp, #32]
  14:	ldr	x19, [sp, #40]
  18:	ldr	x0, [sp, #40]
  1c:	bl	0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEC1Em>
  20:	ldr	x2, [sp, #32]
  24:	mov	x1, x0
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEC1Em>
  30:	nop
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #48
  3c:	ret

Disassembly of section .text._ZSt12__miter_baseIPKN4llvm9MCOperandEET_S4_:

0000000000000000 <_ZSt12__miter_baseIPKN4llvm9MCOperandEET_S4_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZSt14__copy_move_a2ILb0EPKN4llvm9MCOperandEPS1_ET1_T0_S6_S5_:

0000000000000000 <_ZSt14__copy_move_a2ILb0EPKN4llvm9MCOperandEPS1_ET1_T0_S6_S5_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x0, [sp, #56]
  10:	str	x1, [sp, #48]
  14:	str	x2, [sp, #40]
  18:	ldr	x0, [sp, #56]
  1c:	bl	0 <_ZSt14__copy_move_a2ILb0EPKN4llvm9MCOperandEPS1_ET1_T0_S6_S5_>
  20:	mov	x19, x0
  24:	ldr	x0, [sp, #48]
  28:	bl	0 <_ZSt14__copy_move_a2ILb0EPKN4llvm9MCOperandEPS1_ET1_T0_S6_S5_>
  2c:	mov	x20, x0
  30:	ldr	x0, [sp, #40]
  34:	bl	0 <_ZSt14__copy_move_a2ILb0EPKN4llvm9MCOperandEPS1_ET1_T0_S6_S5_>
  38:	mov	x2, x0
  3c:	mov	x1, x20
  40:	mov	x0, x19
  44:	bl	0 <_ZSt14__copy_move_a2ILb0EPKN4llvm9MCOperandEPS1_ET1_T0_S6_S5_>
  48:	mov	x1, x0
  4c:	add	x0, sp, #0x28
  50:	bl	0 <_ZSt14__copy_move_a2ILb0EPKN4llvm9MCOperandEPS1_ET1_T0_S6_S5_>
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x29, x30, [sp], #64
  5c:	ret

Disassembly of section .text._ZSt12__get_helperILm0EPN4llvm16MCRelocationInfoEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE:

0000000000000000 <_ZSt12__get_helperILm0EPN4llvm16MCRelocationInfoEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt12__get_helperILm0EPN4llvm16MCRelocationInfoEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt11_Tuple_implILm1EJSt14default_deleteIN4llvm16MCRelocationInfoEEEE7_M_headERS4_:

0000000000000000 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4llvm16MCRelocationInfoEEEE7_M_headERS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4llvm16MCRelocationInfoEEEE7_M_headERS4_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt10_Head_baseILm1ESt14default_deleteIN4llvm16MCRelocationInfoEELb1EEC2IS3_EEOT_:

0000000000000000 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4llvm16MCRelocationInfoEELb1EEC1IS3_EEOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #16]
  14:	bl	0 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4llvm16MCRelocationInfoEELb1EEC1IS3_EEOT_>
  18:	nop
  1c:	ldp	x29, x30, [sp], #32
  20:	ret

Disassembly of section .text._ZNSt10_Head_baseILm0EPN4llvm16MCRelocationInfoELb0EE7_M_headERS3_:

0000000000000000 <_ZNSt10_Head_baseILm0EPN4llvm16MCRelocationInfoELb0EE7_M_headERS3_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt5arrayIiLm2EE5beginEv:

0000000000000000 <_ZNSt5arrayIiLm2EE5beginEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIiLm2EE5beginEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt5arrayIiLm2EE3endEv:

0000000000000000 <_ZNSt5arrayIiLm2EE3endEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIiLm2EE3endEv>
  14:	add	x0, x0, #0x8
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_:

0000000000000000 <_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	mov	w0, w1
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt5arrayIsLm4EE5beginEv:

0000000000000000 <_ZNSt5arrayIsLm4EE5beginEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIsLm4EE5beginEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt5arrayIsLm4EE3endEv:

0000000000000000 <_ZNSt5arrayIsLm4EE3endEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIsLm4EE3endEv>
  14:	add	x0, x0, #0x8
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZSt19__iterator_categoryIPsENSt15iterator_traitsIT_E17iterator_categoryERKS2_:

0000000000000000 <_ZSt19__iterator_categoryIPsENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	mov	w0, w1
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt5arrayIaLm8EE5beginEv:

0000000000000000 <_ZNSt5arrayIaLm8EE5beginEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIaLm8EE5beginEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt5arrayIaLm8EE3endEv:

0000000000000000 <_ZNSt5arrayIaLm8EE3endEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIaLm8EE3endEv>
  14:	add	x0, x0, #0x8
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZSt19__iterator_categoryIPaENSt15iterator_traitsIT_E17iterator_categoryERKS2_:

0000000000000000 <_ZSt19__iterator_categoryIPaENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	mov	w0, w1
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZSt12__niter_baseIPKN4llvm9MCOperandEET_S4_:

0000000000000000 <_ZSt12__niter_baseIPKN4llvm9MCOperandEET_S4_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZSt13__copy_move_aILb0EPKN4llvm9MCOperandEPS1_ET1_T0_S6_S5_:

0000000000000000 <_ZSt13__copy_move_aILb0EPKN4llvm9MCOperandEPS1_ET1_T0_S6_S5_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	mov	w0, #0x1                   	// #1
  18:	strb	w0, [sp, #63]
  1c:	ldr	x2, [sp, #24]
  20:	ldr	x1, [sp, #32]
  24:	ldr	x0, [sp, #40]
  28:	bl	0 <_ZSt13__copy_move_aILb0EPKN4llvm9MCOperandEPS1_ET1_T0_S6_S5_>
  2c:	ldp	x29, x30, [sp], #64
  30:	ret

Disassembly of section .text._ZNSt11_Tuple_implILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEE7_M_headERKS5_:

0000000000000000 <_ZNSt11_Tuple_implILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEE7_M_headERKS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt11_Tuple_implILm0EJPN4llvm16MCRelocationInfoESt14default_deleteIS1_EEE7_M_headERKS5_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt10_Head_baseILm1ESt14default_deleteIN4llvm16MCRelocationInfoEELb1EE7_M_headERS4_:

0000000000000000 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4llvm16MCRelocationInfoEELb1EE7_M_headERS4_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt5arrayIiLm2EE4dataEv:

0000000000000000 <_ZNSt5arrayIiLm2EE4dataEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIiLm2EE4dataEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt5arrayIsLm4EE4dataEv:

0000000000000000 <_ZNSt5arrayIsLm4EE4dataEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIsLm4EE4dataEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt5arrayIaLm8EE4dataEv:

0000000000000000 <_ZNSt5arrayIaLm8EE4dataEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIaLm8EE4dataEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4llvm9MCOperandEEEPT_PKS5_S8_S6_:

0000000000000000 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4llvm9MCOperandEEEPT_PKS5_S8_S6_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x1, [sp, #32]
  18:	ldr	x0, [sp, #40]
  1c:	sub	x0, x1, x0
  20:	asr	x0, x0, #4
  24:	str	x0, [sp, #56]
  28:	ldr	x0, [sp, #56]
  2c:	cmp	x0, #0x0
  30:	b.eq	4c <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4llvm9MCOperandEEEPT_PKS5_S8_S6_+0x4c>  // b.none
  34:	ldr	x0, [sp, #56]
  38:	lsl	x0, x0, #4
  3c:	mov	x2, x0
  40:	ldr	x1, [sp, #40]
  44:	ldr	x0, [sp, #24]
  48:	bl	0 <memmove>
  4c:	ldr	x0, [sp, #56]
  50:	lsl	x0, x0, #4
  54:	ldr	x1, [sp, #24]
  58:	add	x0, x1, x0
  5c:	ldp	x29, x30, [sp], #64
  60:	ret

Disassembly of section .text._ZNSt10_Head_baseILm0EPN4llvm16MCRelocationInfoELb0EE7_M_headERKS3_:

0000000000000000 <_ZNSt10_Head_baseILm0EPN4llvm16MCRelocationInfoELb0EE7_M_headERKS3_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt14__array_traitsIiLm2EE6_S_ptrERA2_Ki:

0000000000000000 <_ZNSt14__array_traitsIiLm2EE6_S_ptrERA2_Ki>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt14__array_traitsIsLm4EE6_S_ptrERA4_Ks:

0000000000000000 <_ZNSt14__array_traitsIsLm4EE6_S_ptrERA4_Ks>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt14__array_traitsIaLm8EE6_S_ptrERA8_Ka:

0000000000000000 <_ZNSt14__array_traitsIaLm8EE6_S_ptrERA8_Ka>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZN4llvm19AArch64DisassemblerD2Ev:

0000000000000000 <_ZN4llvm19AArch64DisassemblerD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	adrp	x0, 0 <_ZN4llvm19AArch64DisassemblerD1Ev>
  10:	add	x1, x0, #0x0
  14:	ldr	x0, [sp, #24]
  18:	str	x1, [x0]
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <_ZN4llvm14MCDisassemblerD2Ev>
  24:	nop
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN4llvm19AArch64DisassemblerD0Ev:

0000000000000000 <_ZN4llvm19AArch64DisassemblerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm19AArch64DisassemblerD0Ev>
  14:	mov	x1, #0x28                  	// #40
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

AArch64ExternalSymbolizer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL10getVariantm>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	ldr	x0, [sp, #24]
      10:	cmp	x0, #0x4
      14:	b.eq	90 <_ZL10getVariantm+0x90>  // b.none
      18:	ldr	x0, [sp, #24]
      1c:	cmp	x0, #0x4
      20:	b.hi	98 <_ZL10getVariantm+0x98>  // b.pmore
      24:	ldr	x0, [sp, #24]
      28:	cmp	x0, #0x3
      2c:	b.eq	88 <_ZL10getVariantm+0x88>  // b.none
      30:	ldr	x0, [sp, #24]
      34:	cmp	x0, #0x3
      38:	b.hi	98 <_ZL10getVariantm+0x98>  // b.pmore
      3c:	ldr	x0, [sp, #24]
      40:	cmp	x0, #0x2
      44:	b.eq	80 <_ZL10getVariantm+0x80>  // b.none
      48:	ldr	x0, [sp, #24]
      4c:	cmp	x0, #0x2
      50:	b.hi	98 <_ZL10getVariantm+0x98>  // b.pmore
      54:	ldr	x0, [sp, #24]
      58:	cmp	x0, #0x0
      5c:	b.eq	70 <_ZL10getVariantm+0x70>  // b.none
      60:	ldr	x0, [sp, #24]
      64:	cmp	x0, #0x1
      68:	b.eq	78 <_ZL10getVariantm+0x78>  // b.none
      6c:	b	98 <_ZL10getVariantm+0x98>
      70:	mov	w0, #0x0                   	// #0
      74:	b	b0 <_ZL10getVariantm+0xb0>
      78:	mov	w0, #0x15                  	// #21
      7c:	b	b0 <_ZL10getVariantm+0xb0>
      80:	mov	w0, #0x16                  	// #22
      84:	b	b0 <_ZL10getVariantm+0xb0>
      88:	mov	w0, #0x17                  	// #23
      8c:	b	b0 <_ZL10getVariantm+0xb0>
      90:	mov	w0, #0x18                  	// #24
      94:	b	b0 <_ZL10getVariantm+0xb0>
      98:	mov	w2, #0x27                  	// #39
      9c:	adrp	x0, 0 <_ZL10getVariantm>
      a0:	add	x1, x0, #0x0
      a4:	adrp	x0, 0 <_ZL10getVariantm>
      a8:	add	x0, x0, #0x0
      ac:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
      b0:	ldp	x29, x30, [sp], #32
      b4:	ret

00000000000000b8 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>:
      b8:	stp	x29, x30, [sp, #-464]!
      bc:	mov	x29, sp
      c0:	str	x19, [sp, #16]
      c4:	str	x0, [sp, #88]
      c8:	str	x1, [sp, #80]
      cc:	str	x2, [sp, #72]
      d0:	str	x3, [sp, #64]
      d4:	str	x4, [sp, #56]
      d8:	strb	w5, [sp, #55]
      dc:	str	x6, [sp, #40]
      e0:	str	x7, [sp, #32]
      e4:	ldr	x0, [sp, #88]
      e8:	ldr	x0, [x0, #32]
      ec:	cmp	x0, #0x0
      f0:	b.ne	fc <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x44>  // b.any
      f4:	mov	w0, #0x0                   	// #0
      f8:	b	a54 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x99c>
      fc:	add	x0, sp, #0x90
     100:	mov	x2, #0x40                  	// #64
     104:	mov	w1, #0x0                   	// #0
     108:	bl	0 <memset>
     10c:	ldr	x0, [sp, #64]
     110:	str	x0, [sp, #192]
     114:	ldr	x0, [sp, #88]
     118:	ldr	x0, [x0, #24]
     11c:	cmp	x0, #0x0
     120:	b.eq	158 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xa0>  // b.none
     124:	ldr	x0, [sp, #88]
     128:	ldr	x6, [x0, #24]
     12c:	ldr	x0, [sp, #88]
     130:	ldr	x0, [x0, #40]
     134:	add	x1, sp, #0x90
     138:	mov	x5, x1
     13c:	mov	w4, #0x1                   	// #1
     140:	ldr	x3, [sp, #32]
     144:	mov	x2, #0x0                   	// #0
     148:	ldr	x1, [sp, #56]
     14c:	blr	x6
     150:	cmp	w0, #0x0
     154:	b.ne	160 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xa8>  // b.any
     158:	mov	w0, #0x1                   	// #1
     15c:	b	164 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xac>
     160:	mov	w0, #0x0                   	// #0
     164:	cmp	w0, #0x0
     168:	b.eq	784 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x6cc>  // b.none
     16c:	ldrb	w0, [sp, #55]
     170:	cmp	w0, #0x0
     174:	b.eq	25c <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1a4>  // b.none
     178:	mov	x0, #0x1                   	// #1
     17c:	str	x0, [sp, #136]
     180:	ldr	x0, [sp, #88]
     184:	ldr	x5, [x0, #32]
     188:	ldr	x0, [sp, #88]
     18c:	ldr	x6, [x0, #40]
     190:	ldr	x1, [sp, #64]
     194:	ldr	x0, [sp, #56]
     198:	add	x0, x1, x0
     19c:	add	x2, sp, #0x80
     1a0:	add	x1, sp, #0x88
     1a4:	mov	x4, x2
     1a8:	ldr	x3, [sp, #56]
     1ac:	mov	x2, x1
     1b0:	mov	x1, x0
     1b4:	mov	x0, x6
     1b8:	blr	x5
     1bc:	str	x0, [sp, #384]
     1c0:	ldr	x0, [sp, #384]
     1c4:	cmp	x0, #0x0
     1c8:	b.eq	1e4 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x12c>  // b.none
     1cc:	ldr	x0, [sp, #384]
     1d0:	str	x0, [sp, #152]
     1d4:	mov	x0, #0x1                   	// #1
     1d8:	str	x0, [sp, #144]
     1dc:	str	xzr, [sp, #192]
     1e0:	b	1f4 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x13c>
     1e4:	ldr	x1, [sp, #64]
     1e8:	ldr	x0, [sp, #56]
     1ec:	add	x0, x1, x0
     1f0:	str	x0, [sp, #192]
     1f4:	ldr	x0, [sp, #136]
     1f8:	cmp	x0, #0x1
     1fc:	b.ne	228 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x170>  // b.any
     200:	adrp	x0, 0 <_ZL10getVariantm>
     204:	add	x1, x0, #0x0
     208:	ldr	x0, [sp, #72]
     20c:	bl	0 <_ZL10getVariantm>
     210:	mov	x2, x0
     214:	ldr	x0, [sp, #128]
     218:	mov	x1, x0
     21c:	mov	x0, x2
     220:	bl	0 <_ZL10getVariantm>
     224:	b	784 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x6cc>
     228:	ldr	x0, [sp, #136]
     22c:	cmp	x0, #0x5
     230:	b.ne	784 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x6cc>  // b.any
     234:	adrp	x0, 0 <_ZL10getVariantm>
     238:	add	x1, x0, #0x0
     23c:	ldr	x0, [sp, #72]
     240:	bl	0 <_ZL10getVariantm>
     244:	mov	x2, x0
     248:	ldr	x0, [sp, #128]
     24c:	mov	x1, x0
     250:	mov	x0, x2
     254:	bl	0 <_ZL10getVariantm>
     258:	b	784 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x6cc>
     25c:	ldr	x0, [sp, #80]
     260:	bl	0 <_ZL10getVariantm>
     264:	cmp	w0, #0x122
     268:	cset	w0, eq  // eq = none
     26c:	and	w0, w0, #0xff
     270:	cmp	w0, #0x0
     274:	b.eq	378 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2c0>  // b.none
     278:	mov	x0, #0x100000001           	// #4294967297
     27c:	str	x0, [sp, #136]
     280:	ldr	x0, [sp, #88]
     284:	ldr	x0, [x0, #8]
     288:	bl	0 <_ZL10getVariantm>
     28c:	str	x0, [sp, #400]
     290:	mov	w0, #0x90000000            	// #-1879048192
     294:	str	w0, [sp, #396]
     298:	ldr	x0, [sp, #64]
     29c:	lsl	x0, x0, #29
     2a0:	and	w1, w0, #0x60000000
     2a4:	ldr	w0, [sp, #396]
     2a8:	orr	w0, w1, w0
     2ac:	str	w0, [sp, #396]
     2b0:	ldr	x0, [sp, #64]
     2b4:	asr	x0, x0, #2
     2b8:	lsl	x0, x0, #5
     2bc:	and	w1, w0, #0xffffe0
     2c0:	ldr	w0, [sp, #396]
     2c4:	orr	w0, w1, w0
     2c8:	str	w0, [sp, #396]
     2cc:	mov	w1, #0x0                   	// #0
     2d0:	ldr	x0, [sp, #80]
     2d4:	bl	0 <_ZL10getVariantm>
     2d8:	bl	0 <_ZL10getVariantm>
     2dc:	mov	w1, w0
     2e0:	add	x0, sp, #0xd0
     2e4:	bl	0 <_ZL10getVariantm>
     2e8:	ldr	w1, [sp, #208]
     2ec:	ldr	x0, [sp, #400]
     2f0:	bl	0 <_ZL10getVariantm>
     2f4:	and	w0, w0, #0xffff
     2f8:	mov	w1, w0
     2fc:	ldr	w0, [sp, #396]
     300:	orr	w0, w0, w1
     304:	str	w0, [sp, #396]
     308:	ldr	x0, [sp, #88]
     30c:	ldr	x5, [x0, #32]
     310:	ldr	x0, [sp, #88]
     314:	ldr	x0, [x0, #40]
     318:	ldr	w1, [sp, #396]
     31c:	add	x3, sp, #0x80
     320:	add	x2, sp, #0x88
     324:	mov	x4, x3
     328:	ldr	x3, [sp, #56]
     32c:	blr	x5
     330:	ldr	x0, [sp, #56]
     334:	and	x0, x0, #0xfffffffffffff000
     338:	ldr	x1, [sp, #64]
     33c:	lsl	x1, x1, #12
     340:	add	x0, x0, x1
     344:	str	x0, [sp, #240]
     348:	add	x0, sp, #0xf0
     34c:	add	x1, sp, #0xd8
     350:	mov	x8, x1
     354:	mov	x1, x0
     358:	adrp	x0, 0 <_ZL10getVariantm>
     35c:	add	x0, x0, #0x0
     360:	bl	0 <_ZL10getVariantm>
     364:	add	x0, sp, #0xd8
     368:	mov	x1, x0
     36c:	ldr	x0, [sp, #72]
     370:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     374:	b	784 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x6cc>
     378:	ldr	x0, [sp, #80]
     37c:	bl	0 <_ZL10getVariantm>
     380:	cmp	w0, #0x105
     384:	b.eq	3b8 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x300>  // b.none
     388:	ldr	x0, [sp, #80]
     38c:	bl	0 <_ZL10getVariantm>
     390:	cmp	w0, #0xa07
     394:	b.eq	3b8 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x300>  // b.none
     398:	ldr	x0, [sp, #80]
     39c:	bl	0 <_ZL10getVariantm>
     3a0:	cmp	w0, #0xa02
     3a4:	b.eq	3b8 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x300>  // b.none
     3a8:	ldr	x0, [sp, #80]
     3ac:	bl	0 <_ZL10getVariantm>
     3b0:	cmp	w0, #0x121
     3b4:	b.ne	3c0 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x308>  // b.any
     3b8:	mov	w0, #0x1                   	// #1
     3bc:	b	3c4 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x30c>
     3c0:	mov	w0, #0x0                   	// #0
     3c4:	cmp	w0, #0x0
     3c8:	b.eq	77c <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x6c4>  // b.none
     3cc:	ldr	x0, [sp, #80]
     3d0:	bl	0 <_ZL10getVariantm>
     3d4:	cmp	w0, #0x105
     3d8:	cset	w0, eq  // eq = none
     3dc:	and	w0, w0, #0xff
     3e0:	cmp	w0, #0x0
     3e4:	b.eq	3f8 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x340>  // b.none
     3e8:	mov	x0, #0x2                   	// #2
     3ec:	movk	x0, #0x1, lsl #32
     3f0:	str	x0, [sp, #136]
     3f4:	b	420 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x368>
     3f8:	ldr	x0, [sp, #80]
     3fc:	bl	0 <_ZL10getVariantm>
     400:	cmp	w0, #0xa07
     404:	cset	w0, eq  // eq = none
     408:	and	w0, w0, #0xff
     40c:	cmp	w0, #0x0
     410:	b.eq	420 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x368>  // b.none
     414:	mov	x0, #0x3                   	// #3
     418:	movk	x0, #0x1, lsl #32
     41c:	str	x0, [sp, #136]
     420:	ldr	x0, [sp, #80]
     424:	bl	0 <_ZL10getVariantm>
     428:	cmp	w0, #0xa02
     42c:	cset	w0, eq  // eq = none
     430:	and	w0, w0, #0xff
     434:	cmp	w0, #0x0
     438:	b.eq	488 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x3d0>  // b.none
     43c:	mov	x0, #0x4                   	// #4
     440:	movk	x0, #0x1, lsl #32
     444:	str	x0, [sp, #136]
     448:	ldr	x0, [sp, #88]
     44c:	ldr	x5, [x0, #32]
     450:	ldr	x0, [sp, #88]
     454:	ldr	x6, [x0, #40]
     458:	ldr	x1, [sp, #64]
     45c:	ldr	x0, [sp, #56]
     460:	add	x0, x1, x0
     464:	add	x2, sp, #0x80
     468:	add	x1, sp, #0x88
     46c:	mov	x4, x2
     470:	ldr	x3, [sp, #56]
     474:	mov	x2, x1
     478:	mov	x1, x0
     47c:	mov	x0, x6
     480:	blr	x5
     484:	b	5dc <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x524>
     488:	ldr	x0, [sp, #80]
     48c:	bl	0 <_ZL10getVariantm>
     490:	cmp	w0, #0x121
     494:	cset	w0, eq  // eq = none
     498:	and	w0, w0, #0xff
     49c:	cmp	w0, #0x0
     4a0:	b.eq	4f0 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x438>  // b.none
     4a4:	mov	x0, #0x5                   	// #5
     4a8:	movk	x0, #0x1, lsl #32
     4ac:	str	x0, [sp, #136]
     4b0:	ldr	x0, [sp, #88]
     4b4:	ldr	x5, [x0, #32]
     4b8:	ldr	x0, [sp, #88]
     4bc:	ldr	x6, [x0, #40]
     4c0:	ldr	x1, [sp, #64]
     4c4:	ldr	x0, [sp, #56]
     4c8:	add	x0, x1, x0
     4cc:	add	x2, sp, #0x80
     4d0:	add	x1, sp, #0x88
     4d4:	mov	x4, x2
     4d8:	ldr	x3, [sp, #56]
     4dc:	mov	x2, x1
     4e0:	mov	x1, x0
     4e4:	mov	x0, x6
     4e8:	blr	x5
     4ec:	b	5dc <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x524>
     4f0:	ldr	x0, [sp, #88]
     4f4:	ldr	x0, [x0, #8]
     4f8:	bl	0 <_ZL10getVariantm>
     4fc:	str	x0, [sp, #416]
     500:	ldr	x0, [sp, #80]
     504:	bl	0 <_ZL10getVariantm>
     508:	cmp	w0, #0x105
     50c:	b.ne	518 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x460>  // b.any
     510:	mov	w0, #0x91000000            	// #-1862270976
     514:	b	51c <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x464>
     518:	mov	w0, #0xf9400000            	// #-113246208
     51c:	str	w0, [sp, #412]
     520:	ldr	x0, [sp, #64]
     524:	lsl	x0, x0, #10
     528:	mov	w1, w0
     52c:	ldr	w0, [sp, #412]
     530:	orr	w0, w1, w0
     534:	str	w0, [sp, #412]
     538:	mov	w1, #0x1                   	// #1
     53c:	ldr	x0, [sp, #80]
     540:	bl	0 <_ZL10getVariantm>
     544:	bl	0 <_ZL10getVariantm>
     548:	mov	w1, w0
     54c:	add	x0, sp, #0xf8
     550:	bl	0 <_ZL10getVariantm>
     554:	ldr	w1, [sp, #248]
     558:	ldr	x0, [sp, #416]
     55c:	bl	0 <_ZL10getVariantm>
     560:	and	w0, w0, #0xffff
     564:	lsl	w0, w0, #5
     568:	mov	w1, w0
     56c:	ldr	w0, [sp, #412]
     570:	orr	w0, w0, w1
     574:	str	w0, [sp, #412]
     578:	mov	w1, #0x0                   	// #0
     57c:	ldr	x0, [sp, #80]
     580:	bl	0 <_ZL10getVariantm>
     584:	bl	0 <_ZL10getVariantm>
     588:	mov	w1, w0
     58c:	add	x0, sp, #0x100
     590:	bl	0 <_ZL10getVariantm>
     594:	ldr	w1, [sp, #256]
     598:	ldr	x0, [sp, #416]
     59c:	bl	0 <_ZL10getVariantm>
     5a0:	and	w0, w0, #0xffff
     5a4:	mov	w1, w0
     5a8:	ldr	w0, [sp, #412]
     5ac:	orr	w0, w0, w1
     5b0:	str	w0, [sp, #412]
     5b4:	ldr	x0, [sp, #88]
     5b8:	ldr	x5, [x0, #32]
     5bc:	ldr	x0, [sp, #88]
     5c0:	ldr	x0, [x0, #40]
     5c4:	ldr	w1, [sp, #412]
     5c8:	add	x3, sp, #0x80
     5cc:	add	x2, sp, #0x88
     5d0:	mov	x4, x3
     5d4:	ldr	x3, [sp, #56]
     5d8:	blr	x5
     5dc:	ldr	x0, [sp, #136]
     5e0:	cmp	x0, #0x2
     5e4:	b.ne	610 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x558>  // b.any
     5e8:	adrp	x0, 0 <_ZL10getVariantm>
     5ec:	add	x1, x0, #0x0
     5f0:	ldr	x0, [sp, #72]
     5f4:	bl	0 <_ZL10getVariantm>
     5f8:	mov	x2, x0
     5fc:	ldr	x0, [sp, #128]
     600:	mov	x1, x0
     604:	mov	x0, x2
     608:	bl	0 <_ZL10getVariantm>
     60c:	b	774 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x6bc>
     610:	ldr	x0, [sp, #136]
     614:	cmp	x0, #0x3
     618:	b.ne	660 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x5a8>  // b.any
     61c:	adrp	x0, 0 <_ZL10getVariantm>
     620:	add	x1, x0, #0x0
     624:	ldr	x0, [sp, #72]
     628:	bl	0 <_ZL10getVariantm>
     62c:	ldr	x1, [sp, #128]
     630:	add	x0, sp, #0x108
     634:	bl	0 <_ZL10getVariantm>
     638:	mov	w3, #0x0                   	// #0
     63c:	add	x0, sp, #0x200
     640:	ldp	x1, x2, [x0, #-248]
     644:	ldr	x0, [sp, #72]
     648:	bl	0 <_ZN4llvm11raw_ostream13write_escapedENS_9StringRefEb>
     64c:	adrp	x0, 0 <_ZL10getVariantm>
     650:	add	x1, x0, #0x0
     654:	ldr	x0, [sp, #72]
     658:	bl	0 <_ZL10getVariantm>
     65c:	b	774 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x6bc>
     660:	ldr	x0, [sp, #136]
     664:	cmp	x0, #0x4
     668:	b.ne	6a8 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x5f0>  // b.any
     66c:	adrp	x0, 0 <_ZL10getVariantm>
     670:	add	x1, x0, #0x0
     674:	ldr	x0, [sp, #72]
     678:	bl	0 <_ZL10getVariantm>
     67c:	mov	x2, x0
     680:	ldr	x0, [sp, #128]
     684:	mov	x1, x0
     688:	mov	x0, x2
     68c:	bl	0 <_ZL10getVariantm>
     690:	mov	x2, x0
     694:	adrp	x0, 0 <_ZL10getVariantm>
     698:	add	x1, x0, #0x0
     69c:	mov	x0, x2
     6a0:	bl	0 <_ZL10getVariantm>
     6a4:	b	774 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x6bc>
     6a8:	ldr	x0, [sp, #136]
     6ac:	cmp	x0, #0x5
     6b0:	b.ne	6dc <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x624>  // b.any
     6b4:	adrp	x0, 0 <_ZL10getVariantm>
     6b8:	add	x1, x0, #0x0
     6bc:	ldr	x0, [sp, #72]
     6c0:	bl	0 <_ZL10getVariantm>
     6c4:	mov	x2, x0
     6c8:	ldr	x0, [sp, #128]
     6cc:	mov	x1, x0
     6d0:	mov	x0, x2
     6d4:	bl	0 <_ZL10getVariantm>
     6d8:	b	774 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x6bc>
     6dc:	ldr	x0, [sp, #136]
     6e0:	cmp	x0, #0x6
     6e4:	b.ne	710 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x658>  // b.any
     6e8:	adrp	x0, 0 <_ZL10getVariantm>
     6ec:	add	x1, x0, #0x0
     6f0:	ldr	x0, [sp, #72]
     6f4:	bl	0 <_ZL10getVariantm>
     6f8:	mov	x2, x0
     6fc:	ldr	x0, [sp, #128]
     700:	mov	x1, x0
     704:	mov	x0, x2
     708:	bl	0 <_ZL10getVariantm>
     70c:	b	774 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x6bc>
     710:	ldr	x0, [sp, #136]
     714:	cmp	x0, #0x7
     718:	b.ne	744 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x68c>  // b.any
     71c:	adrp	x0, 0 <_ZL10getVariantm>
     720:	add	x1, x0, #0x0
     724:	ldr	x0, [sp, #72]
     728:	bl	0 <_ZL10getVariantm>
     72c:	mov	x2, x0
     730:	ldr	x0, [sp, #128]
     734:	mov	x1, x0
     738:	mov	x0, x2
     73c:	bl	0 <_ZL10getVariantm>
     740:	b	774 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x6bc>
     744:	ldr	x0, [sp, #136]
     748:	cmp	x0, #0x8
     74c:	b.ne	774 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x6bc>  // b.any
     750:	adrp	x0, 0 <_ZL10getVariantm>
     754:	add	x1, x0, #0x0
     758:	ldr	x0, [sp, #72]
     75c:	bl	0 <_ZL10getVariantm>
     760:	mov	x2, x0
     764:	ldr	x0, [sp, #128]
     768:	mov	x1, x0
     76c:	mov	x0, x2
     770:	bl	0 <_ZL10getVariantm>
     774:	mov	w0, #0x0                   	// #0
     778:	b	a54 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x99c>
     77c:	mov	w0, #0x0                   	// #0
     780:	b	a54 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x99c>
     784:	str	xzr, [sp, #456]
     788:	ldr	x0, [sp, #144]
     78c:	cmp	x0, #0x0
     790:	b.eq	85c <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x7a4>  // b.none
     794:	ldr	x0, [sp, #152]
     798:	cmp	x0, #0x0
     79c:	b.eq	838 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x780>  // b.none
     7a0:	ldr	x1, [sp, #152]
     7a4:	add	x0, sp, #0x70
     7a8:	bl	0 <_ZL10getVariantm>
     7ac:	ldr	x0, [sp, #88]
     7b0:	ldr	x19, [x0, #8]
     7b4:	add	x1, sp, #0x70
     7b8:	add	x0, sp, #0x118
     7bc:	bl	0 <_ZL10getVariantm>
     7c0:	add	x0, sp, #0x118
     7c4:	mov	x1, x0
     7c8:	mov	x0, x19
     7cc:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
     7d0:	str	x0, [sp, #376]
     7d4:	ldr	x0, [sp, #200]
     7d8:	bl	0 <_ZL10getVariantm>
     7dc:	strh	w0, [sp, #374]
     7e0:	ldrh	w0, [sp, #374]
     7e4:	cmp	w0, #0x0
     7e8:	b.eq	81c <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x764>  // b.none
     7ec:	ldr	x0, [sp, #88]
     7f0:	ldr	x19, [x0, #8]
     7f4:	str	xzr, [sp, #304]
     7f8:	add	x0, sp, #0x130
     7fc:	bl	0 <_ZL10getVariantm>
     800:	ldr	x3, [sp, #304]
     804:	mov	x2, x19
     808:	ldrh	w1, [sp, #374]
     80c:	ldr	x0, [sp, #376]
     810:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
     814:	str	x0, [sp, #456]
     818:	b	85c <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x7a4>
     81c:	ldr	x0, [sp, #88]
     820:	ldr	x0, [x0, #8]
     824:	mov	x1, x0
     828:	ldr	x0, [sp, #376]
     82c:	bl	0 <_ZL10getVariantm>
     830:	str	x0, [sp, #456]
     834:	b	85c <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x7a4>
     838:	ldr	x0, [sp, #160]
     83c:	mov	x3, x0
     840:	ldr	x0, [sp, #88]
     844:	ldr	x0, [x0, #8]
     848:	mov	w2, #0x0                   	// #0
     84c:	mov	x1, x0
     850:	mov	x0, x3
     854:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
     858:	str	x0, [sp, #456]
     85c:	str	xzr, [sp, #448]
     860:	ldr	x0, [sp, #168]
     864:	cmp	x0, #0x0
     868:	b.eq	8ec <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x834>  // b.none
     86c:	ldr	x0, [sp, #176]
     870:	cmp	x0, #0x0
     874:	b.eq	8c8 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x810>  // b.none
     878:	ldr	x1, [sp, #176]
     87c:	add	x0, sp, #0x60
     880:	bl	0 <_ZL10getVariantm>
     884:	ldr	x0, [sp, #88]
     888:	ldr	x19, [x0, #8]
     88c:	add	x1, sp, #0x60
     890:	add	x0, sp, #0x138
     894:	bl	0 <_ZL10getVariantm>
     898:	add	x0, sp, #0x138
     89c:	mov	x1, x0
     8a0:	mov	x0, x19
     8a4:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
     8a8:	str	x0, [sp, #360]
     8ac:	ldr	x0, [sp, #88]
     8b0:	ldr	x0, [x0, #8]
     8b4:	mov	x1, x0
     8b8:	ldr	x0, [sp, #360]
     8bc:	bl	0 <_ZL10getVariantm>
     8c0:	str	x0, [sp, #448]
     8c4:	b	8ec <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x834>
     8c8:	ldr	x0, [sp, #184]
     8cc:	mov	x3, x0
     8d0:	ldr	x0, [sp, #88]
     8d4:	ldr	x0, [x0, #8]
     8d8:	mov	w2, #0x0                   	// #0
     8dc:	mov	x1, x0
     8e0:	mov	x0, x3
     8e4:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
     8e8:	str	x0, [sp, #448]
     8ec:	str	xzr, [sp, #440]
     8f0:	ldr	x0, [sp, #192]
     8f4:	cmp	x0, #0x0
     8f8:	b.eq	920 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x868>  // b.none
     8fc:	ldr	x0, [sp, #192]
     900:	mov	x3, x0
     904:	ldr	x0, [sp, #88]
     908:	ldr	x0, [x0, #8]
     90c:	mov	w2, #0x0                   	// #0
     910:	mov	x1, x0
     914:	mov	x0, x3
     918:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
     91c:	str	x0, [sp, #440]
     920:	ldr	x0, [sp, #448]
     924:	cmp	x0, #0x0
     928:	b.eq	9b8 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x900>  // b.none
     92c:	ldr	x0, [sp, #456]
     930:	cmp	x0, #0x0
     934:	b.eq	958 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x8a0>  // b.none
     938:	ldr	x0, [sp, #88]
     93c:	ldr	x0, [x0, #8]
     940:	mov	x2, x0
     944:	ldr	x1, [sp, #448]
     948:	ldr	x0, [sp, #456]
     94c:	bl	0 <_ZL10getVariantm>
     950:	str	x0, [sp, #424]
     954:	b	980 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x8c8>
     958:	ldr	x0, [sp, #88]
     95c:	ldr	x19, [x0, #8]
     960:	str	xzr, [sp, #336]
     964:	add	x0, sp, #0x150
     968:	bl	0 <_ZL10getVariantm>
     96c:	ldr	x2, [sp, #336]
     970:	mov	x1, x19
     974:	ldr	x0, [sp, #448]
     978:	bl	0 <_ZL10getVariantm>
     97c:	str	x0, [sp, #424]
     980:	ldr	x0, [sp, #440]
     984:	cmp	x0, #0x0
     988:	b.eq	9ac <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x8f4>  // b.none
     98c:	ldr	x0, [sp, #88]
     990:	ldr	x0, [x0, #8]
     994:	mov	x2, x0
     998:	ldr	x1, [sp, #440]
     99c:	ldr	x0, [sp, #424]
     9a0:	bl	0 <_ZL10getVariantm>
     9a4:	str	x0, [sp, #432]
     9a8:	b	a30 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x978>
     9ac:	ldr	x0, [sp, #424]
     9b0:	str	x0, [sp, #432]
     9b4:	b	a30 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x978>
     9b8:	ldr	x0, [sp, #456]
     9bc:	cmp	x0, #0x0
     9c0:	b.eq	9fc <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x944>  // b.none
     9c4:	ldr	x0, [sp, #440]
     9c8:	cmp	x0, #0x0
     9cc:	b.eq	9f0 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x938>  // b.none
     9d0:	ldr	x0, [sp, #88]
     9d4:	ldr	x0, [x0, #8]
     9d8:	mov	x2, x0
     9dc:	ldr	x1, [sp, #440]
     9e0:	ldr	x0, [sp, #456]
     9e4:	bl	0 <_ZL10getVariantm>
     9e8:	str	x0, [sp, #432]
     9ec:	b	a30 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x978>
     9f0:	ldr	x0, [sp, #456]
     9f4:	str	x0, [sp, #432]
     9f8:	b	a30 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x978>
     9fc:	ldr	x0, [sp, #440]
     a00:	cmp	x0, #0x0
     a04:	b.eq	a14 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x95c>  // b.none
     a08:	ldr	x0, [sp, #440]
     a0c:	str	x0, [sp, #432]
     a10:	b	a30 <_ZN4llvm25AArch64ExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x978>
     a14:	ldr	x0, [sp, #88]
     a18:	ldr	x0, [x0, #8]
     a1c:	mov	w2, #0x0                   	// #0
     a20:	mov	x1, x0
     a24:	mov	x0, #0x0                   	// #0
     a28:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
     a2c:	str	x0, [sp, #432]
     a30:	ldr	x0, [sp, #432]
     a34:	bl	0 <_ZL10getVariantm>
     a38:	add	x2, sp, #0x200
     a3c:	stp	x0, x1, [x2, #-168]
     a40:	add	x0, sp, #0x158
     a44:	mov	x1, x0
     a48:	ldr	x0, [sp, #80]
     a4c:	bl	0 <_ZL10getVariantm>
     a50:	mov	w0, #0x1                   	// #1
     a54:	ldr	x19, [sp, #16]
     a58:	ldp	x29, x30, [sp], #464
     a5c:	ret

0000000000000a60 <_ZZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblENKUliE_clEi>:
     a60:	stp	x29, x30, [sp, #-32]!
     a64:	mov	x29, sp
     a68:	str	x0, [sp, #24]
     a6c:	str	w1, [sp, #20]
     a70:	ldr	x0, [sp, #24]
     a74:	ldr	x0, [x0]
     a78:	mov	x1, #0x0                   	// #0
     a7c:	bl	0 <_ZL10getVariantm>
     a80:	ldr	w0, [x0]
     a84:	ldr	w1, [sp, #20]
     a88:	cmp	w1, w0
     a8c:	cset	w0, eq  // eq = none
     a90:	and	w0, w0, #0xff
     a94:	ldp	x29, x30, [sp], #32
     a98:	ret

0000000000000a9c <_ZZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblENKUlsE_clEs>:
     a9c:	stp	x29, x30, [sp, #-32]!
     aa0:	mov	x29, sp
     aa4:	str	x0, [sp, #24]
     aa8:	strh	w1, [sp, #22]
     aac:	ldr	x0, [sp, #24]
     ab0:	ldr	x0, [x0]
     ab4:	mov	x1, #0x0                   	// #0
     ab8:	bl	0 <_ZL10getVariantm>
     abc:	ldrsh	w0, [x0]
     ac0:	ldrsh	w1, [sp, #22]
     ac4:	cmp	w1, w0
     ac8:	cset	w0, eq  // eq = none
     acc:	and	w0, w0, #0xff
     ad0:	ldp	x29, x30, [sp], #32
     ad4:	ret

0000000000000ad8 <_ZZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblENKUlaE_clEa>:
     ad8:	stp	x29, x30, [sp, #-32]!
     adc:	mov	x29, sp
     ae0:	str	x0, [sp, #24]
     ae4:	strb	w1, [sp, #23]
     ae8:	ldr	x0, [sp, #24]
     aec:	ldr	x0, [x0]
     af0:	mov	x1, #0x0                   	// #0
     af4:	bl	0 <_ZL10getVariantm>
     af8:	ldrsb	w0, [x0]
     afc:	ldrsb	w1, [sp, #23]
     b00:	cmp	w1, w0
     b04:	cset	w0, eq  // eq = none
     b08:	and	w0, w0, #0xff
     b0c:	ldp	x29, x30, [sp], #32
     b10:	ret

0000000000000b14 <_ZN4llvm6all_ofIRSt5arrayIiLm2EEZNS_10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEbOT_T0_>:
     b14:	stp	x29, x30, [sp, #-48]!
     b18:	mov	x29, sp
     b1c:	str	x19, [sp, #16]
     b20:	str	x0, [sp, #40]
     b24:	str	x1, [sp, #32]
     b28:	ldr	x0, [sp, #40]
     b2c:	bl	0 <_ZL10getVariantm>
     b30:	mov	x19, x0
     b34:	ldr	x0, [sp, #40]
     b38:	bl	0 <_ZL10getVariantm>
     b3c:	ldr	x2, [sp, #32]
     b40:	mov	x1, x0
     b44:	mov	x0, x19
     b48:	bl	bec <_ZSt6all_ofIPiZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EbT_S5_T0_>
     b4c:	and	w0, w0, #0xff
     b50:	ldr	x19, [sp, #16]
     b54:	ldp	x29, x30, [sp], #48
     b58:	ret

0000000000000b5c <_ZN4llvm6all_ofIRSt5arrayIsLm4EEZNS_10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEbOT_T0_>:
     b5c:	stp	x29, x30, [sp, #-48]!
     b60:	mov	x29, sp
     b64:	str	x19, [sp, #16]
     b68:	str	x0, [sp, #40]
     b6c:	str	x1, [sp, #32]
     b70:	ldr	x0, [sp, #40]
     b74:	bl	0 <_ZL10getVariantm>
     b78:	mov	x19, x0
     b7c:	ldr	x0, [sp, #40]
     b80:	bl	0 <_ZL10getVariantm>
     b84:	ldr	x2, [sp, #32]
     b88:	mov	x1, x0
     b8c:	mov	x0, x19
     b90:	bl	c2c <_ZSt6all_ofIPsZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EbT_S5_T0_>
     b94:	and	w0, w0, #0xff
     b98:	ldr	x19, [sp, #16]
     b9c:	ldp	x29, x30, [sp], #48
     ba0:	ret

0000000000000ba4 <_ZN4llvm6all_ofIRSt5arrayIaLm8EEZNS_10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEbOT_T0_>:
     ba4:	stp	x29, x30, [sp, #-48]!
     ba8:	mov	x29, sp
     bac:	str	x19, [sp, #16]
     bb0:	str	x0, [sp, #40]
     bb4:	str	x1, [sp, #32]
     bb8:	ldr	x0, [sp, #40]
     bbc:	bl	0 <_ZL10getVariantm>
     bc0:	mov	x19, x0
     bc4:	ldr	x0, [sp, #40]
     bc8:	bl	0 <_ZL10getVariantm>
     bcc:	ldr	x2, [sp, #32]
     bd0:	mov	x1, x0
     bd4:	mov	x0, x19
     bd8:	bl	c6c <_ZSt6all_ofIPaZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EbT_S5_T0_>
     bdc:	and	w0, w0, #0xff
     be0:	ldr	x19, [sp, #16]
     be4:	ldp	x29, x30, [sp], #48
     be8:	ret

0000000000000bec <_ZSt6all_ofIPiZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EbT_S5_T0_>:
     bec:	stp	x29, x30, [sp, #-48]!
     bf0:	mov	x29, sp
     bf4:	str	x0, [sp, #40]
     bf8:	str	x1, [sp, #32]
     bfc:	str	x2, [sp, #24]
     c00:	ldr	x2, [sp, #24]
     c04:	ldr	x1, [sp, #32]
     c08:	ldr	x0, [sp, #40]
     c0c:	bl	cac <_ZSt11find_if_notIPiZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_ET_S5_S5_T0_>
     c10:	mov	x1, x0
     c14:	ldr	x0, [sp, #32]
     c18:	cmp	x0, x1
     c1c:	cset	w0, eq  // eq = none
     c20:	and	w0, w0, #0xff
     c24:	ldp	x29, x30, [sp], #48
     c28:	ret

0000000000000c2c <_ZSt6all_ofIPsZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EbT_S5_T0_>:
     c2c:	stp	x29, x30, [sp, #-48]!
     c30:	mov	x29, sp
     c34:	str	x0, [sp, #40]
     c38:	str	x1, [sp, #32]
     c3c:	str	x2, [sp, #24]
     c40:	ldr	x2, [sp, #24]
     c44:	ldr	x1, [sp, #32]
     c48:	ldr	x0, [sp, #40]
     c4c:	bl	ce0 <_ZSt11find_if_notIPsZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_ET_S5_S5_T0_>
     c50:	mov	x1, x0
     c54:	ldr	x0, [sp, #32]
     c58:	cmp	x0, x1
     c5c:	cset	w0, eq  // eq = none
     c60:	and	w0, w0, #0xff
     c64:	ldp	x29, x30, [sp], #48
     c68:	ret

0000000000000c6c <_ZSt6all_ofIPaZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EbT_S5_T0_>:
     c6c:	stp	x29, x30, [sp, #-48]!
     c70:	mov	x29, sp
     c74:	str	x0, [sp, #40]
     c78:	str	x1, [sp, #32]
     c7c:	str	x2, [sp, #24]
     c80:	ldr	x2, [sp, #24]
     c84:	ldr	x1, [sp, #32]
     c88:	ldr	x0, [sp, #40]
     c8c:	bl	d14 <_ZSt11find_if_notIPaZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_ET_S5_S5_T0_>
     c90:	mov	x1, x0
     c94:	ldr	x0, [sp, #32]
     c98:	cmp	x0, x1
     c9c:	cset	w0, eq  // eq = none
     ca0:	and	w0, w0, #0xff
     ca4:	ldp	x29, x30, [sp], #48
     ca8:	ret

0000000000000cac <_ZSt11find_if_notIPiZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_ET_S5_S5_T0_>:
     cac:	stp	x29, x30, [sp, #-48]!
     cb0:	mov	x29, sp
     cb4:	str	x0, [sp, #40]
     cb8:	str	x1, [sp, #32]
     cbc:	str	x2, [sp, #24]
     cc0:	ldr	x0, [sp, #24]
     cc4:	bl	d48 <_ZN9__gnu_cxx5__ops11__pred_iterIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EENS0_10_Iter_predIT_EES7_>
     cc8:	mov	x2, x0
     ccc:	ldr	x1, [sp, #32]
     cd0:	ldr	x0, [sp, #40]
     cd4:	bl	d78 <_ZSt13__find_if_notIPiN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_>
     cd8:	ldp	x29, x30, [sp], #48
     cdc:	ret

0000000000000ce0 <_ZSt11find_if_notIPsZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_ET_S5_S5_T0_>:
     ce0:	stp	x29, x30, [sp, #-48]!
     ce4:	mov	x29, sp
     ce8:	str	x0, [sp, #40]
     cec:	str	x1, [sp, #32]
     cf0:	str	x2, [sp, #24]
     cf4:	ldr	x0, [sp, #24]
     cf8:	bl	dd0 <_ZN9__gnu_cxx5__ops11__pred_iterIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EENS0_10_Iter_predIT_EES7_>
     cfc:	mov	x2, x0
     d00:	ldr	x1, [sp, #32]
     d04:	ldr	x0, [sp, #40]
     d08:	bl	e00 <_ZSt13__find_if_notIPsN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_>
     d0c:	ldp	x29, x30, [sp], #48
     d10:	ret

0000000000000d14 <_ZSt11find_if_notIPaZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_ET_S5_S5_T0_>:
     d14:	stp	x29, x30, [sp, #-48]!
     d18:	mov	x29, sp
     d1c:	str	x0, [sp, #40]
     d20:	str	x1, [sp, #32]
     d24:	str	x2, [sp, #24]
     d28:	ldr	x0, [sp, #24]
     d2c:	bl	e58 <_ZN9__gnu_cxx5__ops11__pred_iterIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EENS0_10_Iter_predIT_EES7_>
     d30:	mov	x2, x0
     d34:	ldr	x1, [sp, #32]
     d38:	ldr	x0, [sp, #40]
     d3c:	bl	e88 <_ZSt13__find_if_notIPaN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_>
     d40:	ldp	x29, x30, [sp], #48
     d44:	ret

0000000000000d48 <_ZN9__gnu_cxx5__ops11__pred_iterIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EENS0_10_Iter_predIT_EES7_>:
     d48:	stp	x29, x30, [sp, #-48]!
     d4c:	mov	x29, sp
     d50:	str	x0, [sp, #24]
     d54:	add	x0, sp, #0x18
     d58:	bl	ee0 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EONSt16remove_referenceIT_E4typeEOS6_>
     d5c:	mov	x1, x0
     d60:	add	x0, sp, #0x28
     d64:	ldr	x1, [x1]
     d68:	bl	ef4 <_ZN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EC1ES5_>
     d6c:	ldr	x0, [sp, #40]
     d70:	ldp	x29, x30, [sp], #48
     d74:	ret

0000000000000d78 <_ZSt13__find_if_notIPiN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_>:
     d78:	stp	x29, x30, [sp, #-96]!
     d7c:	mov	x29, sp
     d80:	stp	x19, x20, [sp, #16]
     d84:	str	x21, [sp, #32]
     d88:	str	x0, [sp, #72]
     d8c:	str	x1, [sp, #64]
     d90:	str	x2, [sp, #56]
     d94:	ldr	x19, [sp, #72]
     d98:	ldr	x0, [sp, #56]
     d9c:	bl	f28 <_ZN9__gnu_cxx5__ops8__negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EENS0_12_Iter_negateIT_EENS0_10_Iter_predIS7_EE>
     da0:	mov	x20, x0
     da4:	add	x0, sp, #0x48
     da8:	bl	0 <_ZL10getVariantm>
     dac:	mov	w3, w21
     db0:	mov	x2, x20
     db4:	ldr	x1, [sp, #64]
     db8:	mov	x0, x19
     dbc:	bl	f58 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag>
     dc0:	ldp	x19, x20, [sp, #16]
     dc4:	ldr	x21, [sp, #32]
     dc8:	ldp	x29, x30, [sp], #96
     dcc:	ret

0000000000000dd0 <_ZN9__gnu_cxx5__ops11__pred_iterIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EENS0_10_Iter_predIT_EES7_>:
     dd0:	stp	x29, x30, [sp, #-48]!
     dd4:	mov	x29, sp
     dd8:	str	x0, [sp, #24]
     ddc:	add	x0, sp, #0x18
     de0:	bl	1118 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EONSt16remove_referenceIT_E4typeEOS6_>
     de4:	mov	x1, x0
     de8:	add	x0, sp, #0x28
     dec:	ldr	x1, [x1]
     df0:	bl	112c <_ZN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EC1ES5_>
     df4:	ldr	x0, [sp, #40]
     df8:	ldp	x29, x30, [sp], #48
     dfc:	ret

0000000000000e00 <_ZSt13__find_if_notIPsN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_>:
     e00:	stp	x29, x30, [sp, #-96]!
     e04:	mov	x29, sp
     e08:	stp	x19, x20, [sp, #16]
     e0c:	str	x21, [sp, #32]
     e10:	str	x0, [sp, #72]
     e14:	str	x1, [sp, #64]
     e18:	str	x2, [sp, #56]
     e1c:	ldr	x19, [sp, #72]
     e20:	ldr	x0, [sp, #56]
     e24:	bl	1160 <_ZN9__gnu_cxx5__ops8__negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EENS0_12_Iter_negateIT_EENS0_10_Iter_predIS7_EE>
     e28:	mov	x20, x0
     e2c:	add	x0, sp, #0x48
     e30:	bl	0 <_ZL10getVariantm>
     e34:	mov	w3, w21
     e38:	mov	x2, x20
     e3c:	ldr	x1, [sp, #64]
     e40:	mov	x0, x19
     e44:	bl	1190 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag>
     e48:	ldp	x19, x20, [sp, #16]
     e4c:	ldr	x21, [sp, #32]
     e50:	ldp	x29, x30, [sp], #96
     e54:	ret

0000000000000e58 <_ZN9__gnu_cxx5__ops11__pred_iterIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EENS0_10_Iter_predIT_EES7_>:
     e58:	stp	x29, x30, [sp, #-48]!
     e5c:	mov	x29, sp
     e60:	str	x0, [sp, #24]
     e64:	add	x0, sp, #0x18
     e68:	bl	1350 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EONSt16remove_referenceIT_E4typeEOS6_>
     e6c:	mov	x1, x0
     e70:	add	x0, sp, #0x28
     e74:	ldr	x1, [x1]
     e78:	bl	1364 <_ZN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EC1ES5_>
     e7c:	ldr	x0, [sp, #40]
     e80:	ldp	x29, x30, [sp], #48
     e84:	ret

0000000000000e88 <_ZSt13__find_if_notIPaN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_>:
     e88:	stp	x29, x30, [sp, #-96]!
     e8c:	mov	x29, sp
     e90:	stp	x19, x20, [sp, #16]
     e94:	str	x21, [sp, #32]
     e98:	str	x0, [sp, #72]
     e9c:	str	x1, [sp, #64]
     ea0:	str	x2, [sp, #56]
     ea4:	ldr	x19, [sp, #72]
     ea8:	ldr	x0, [sp, #56]
     eac:	bl	1398 <_ZN9__gnu_cxx5__ops8__negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EENS0_12_Iter_negateIT_EENS0_10_Iter_predIS7_EE>
     eb0:	mov	x20, x0
     eb4:	add	x0, sp, #0x48
     eb8:	bl	0 <_ZL10getVariantm>
     ebc:	mov	w3, w21
     ec0:	mov	x2, x20
     ec4:	ldr	x1, [sp, #64]
     ec8:	mov	x0, x19
     ecc:	bl	13c8 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag>
     ed0:	ldp	x19, x20, [sp, #16]
     ed4:	ldr	x21, [sp, #32]
     ed8:	ldp	x29, x30, [sp], #96
     edc:	ret

0000000000000ee0 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EONSt16remove_referenceIT_E4typeEOS6_>:
     ee0:	sub	sp, sp, #0x10
     ee4:	str	x0, [sp, #8]
     ee8:	ldr	x0, [sp, #8]
     eec:	add	sp, sp, #0x10
     ef0:	ret

0000000000000ef4 <_ZN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EC1ES5_>:
     ef4:	stp	x29, x30, [sp, #-32]!
     ef8:	mov	x29, sp
     efc:	str	x0, [sp, #24]
     f00:	str	x1, [sp, #16]
     f04:	add	x0, sp, #0x10
     f08:	bl	ee0 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EONSt16remove_referenceIT_E4typeEOS6_>
     f0c:	mov	x1, x0
     f10:	ldr	x0, [sp, #24]
     f14:	ldr	x1, [x1]
     f18:	str	x1, [x0]
     f1c:	nop
     f20:	ldp	x29, x30, [sp], #32
     f24:	ret

0000000000000f28 <_ZN9__gnu_cxx5__ops8__negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EENS0_12_Iter_negateIT_EENS0_10_Iter_predIS7_EE>:
     f28:	stp	x29, x30, [sp, #-48]!
     f2c:	mov	x29, sp
     f30:	str	x0, [sp, #24]
     f34:	add	x0, sp, #0x18
     f38:	bl	ee0 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EONSt16remove_referenceIT_E4typeEOS6_>
     f3c:	mov	x1, x0
     f40:	add	x0, sp, #0x28
     f44:	ldr	x1, [x1]
     f48:	bl	1580 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EC1ES5_>
     f4c:	ldr	x0, [sp, #40]
     f50:	ldp	x29, x30, [sp], #48
     f54:	ret

0000000000000f58 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag>:
     f58:	stp	x29, x30, [sp, #-64]!
     f5c:	mov	x29, sp
     f60:	str	x0, [sp, #40]
     f64:	str	x1, [sp, #32]
     f68:	str	x2, [sp, #24]
     f6c:	strb	w3, [sp, #16]
     f70:	ldr	x1, [sp, #32]
     f74:	ldr	x0, [sp, #40]
     f78:	sub	x0, x1, x0
     f7c:	asr	x0, x0, #2
     f80:	asr	x0, x0, #2
     f84:	str	x0, [sp, #56]
     f88:	ldr	x0, [sp, #56]
     f8c:	cmp	x0, #0x0
     f90:	b.le	1054 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xfc>
     f94:	add	x0, sp, #0x18
     f98:	ldr	x1, [sp, #40]
     f9c:	bl	15b4 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>
     fa0:	and	w0, w0, #0xff
     fa4:	cmp	w0, #0x0
     fa8:	b.eq	fb4 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x5c>  // b.none
     fac:	ldr	x0, [sp, #40]
     fb0:	b	1110 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
     fb4:	ldr	x0, [sp, #40]
     fb8:	add	x0, x0, #0x4
     fbc:	str	x0, [sp, #40]
     fc0:	add	x0, sp, #0x18
     fc4:	ldr	x1, [sp, #40]
     fc8:	bl	15b4 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>
     fcc:	and	w0, w0, #0xff
     fd0:	cmp	w0, #0x0
     fd4:	b.eq	fe0 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x88>  // b.none
     fd8:	ldr	x0, [sp, #40]
     fdc:	b	1110 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
     fe0:	ldr	x0, [sp, #40]
     fe4:	add	x0, x0, #0x4
     fe8:	str	x0, [sp, #40]
     fec:	add	x0, sp, #0x18
     ff0:	ldr	x1, [sp, #40]
     ff4:	bl	15b4 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>
     ff8:	and	w0, w0, #0xff
     ffc:	cmp	w0, #0x0
    1000:	b.eq	100c <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xb4>  // b.none
    1004:	ldr	x0, [sp, #40]
    1008:	b	1110 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
    100c:	ldr	x0, [sp, #40]
    1010:	add	x0, x0, #0x4
    1014:	str	x0, [sp, #40]
    1018:	add	x0, sp, #0x18
    101c:	ldr	x1, [sp, #40]
    1020:	bl	15b4 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>
    1024:	and	w0, w0, #0xff
    1028:	cmp	w0, #0x0
    102c:	b.eq	1038 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xe0>  // b.none
    1030:	ldr	x0, [sp, #40]
    1034:	b	1110 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
    1038:	ldr	x0, [sp, #40]
    103c:	add	x0, x0, #0x4
    1040:	str	x0, [sp, #40]
    1044:	ldr	x0, [sp, #56]
    1048:	sub	x0, x0, #0x1
    104c:	str	x0, [sp, #56]
    1050:	b	f88 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x30>
    1054:	ldr	x1, [sp, #32]
    1058:	ldr	x0, [sp, #40]
    105c:	sub	x0, x1, x0
    1060:	asr	x0, x0, #2
    1064:	cmp	x0, #0x3
    1068:	b.eq	1088 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x130>  // b.none
    106c:	cmp	x0, #0x3
    1070:	b.gt	110c <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b4>
    1074:	cmp	x0, #0x1
    1078:	b.eq	10e0 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x188>  // b.none
    107c:	cmp	x0, #0x2
    1080:	b.eq	10b4 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x15c>  // b.none
    1084:	b	110c <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b4>
    1088:	add	x0, sp, #0x18
    108c:	ldr	x1, [sp, #40]
    1090:	bl	15b4 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>
    1094:	and	w0, w0, #0xff
    1098:	cmp	w0, #0x0
    109c:	b.eq	10a8 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x150>  // b.none
    10a0:	ldr	x0, [sp, #40]
    10a4:	b	1110 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
    10a8:	ldr	x0, [sp, #40]
    10ac:	add	x0, x0, #0x4
    10b0:	str	x0, [sp, #40]
    10b4:	add	x0, sp, #0x18
    10b8:	ldr	x1, [sp, #40]
    10bc:	bl	15b4 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>
    10c0:	and	w0, w0, #0xff
    10c4:	cmp	w0, #0x0
    10c8:	b.eq	10d4 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x17c>  // b.none
    10cc:	ldr	x0, [sp, #40]
    10d0:	b	1110 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
    10d4:	ldr	x0, [sp, #40]
    10d8:	add	x0, x0, #0x4
    10dc:	str	x0, [sp, #40]
    10e0:	add	x0, sp, #0x18
    10e4:	ldr	x1, [sp, #40]
    10e8:	bl	15b4 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>
    10ec:	and	w0, w0, #0xff
    10f0:	cmp	w0, #0x0
    10f4:	b.eq	1100 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1a8>  // b.none
    10f8:	ldr	x0, [sp, #40]
    10fc:	b	1110 <_ZSt9__find_ifIPiN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
    1100:	ldr	x0, [sp, #40]
    1104:	add	x0, x0, #0x4
    1108:	str	x0, [sp, #40]
    110c:	ldr	x0, [sp, #32]
    1110:	ldp	x29, x30, [sp], #64
    1114:	ret

0000000000001118 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EONSt16remove_referenceIT_E4typeEOS6_>:
    1118:	sub	sp, sp, #0x10
    111c:	str	x0, [sp, #8]
    1120:	ldr	x0, [sp, #8]
    1124:	add	sp, sp, #0x10
    1128:	ret

000000000000112c <_ZN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EC1ES5_>:
    112c:	stp	x29, x30, [sp, #-32]!
    1130:	mov	x29, sp
    1134:	str	x0, [sp, #24]
    1138:	str	x1, [sp, #16]
    113c:	add	x0, sp, #0x10
    1140:	bl	1118 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EONSt16remove_referenceIT_E4typeEOS6_>
    1144:	mov	x1, x0
    1148:	ldr	x0, [sp, #24]
    114c:	ldr	x1, [x1]
    1150:	str	x1, [x0]
    1154:	nop
    1158:	ldp	x29, x30, [sp], #32
    115c:	ret

0000000000001160 <_ZN9__gnu_cxx5__ops8__negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EENS0_12_Iter_negateIT_EENS0_10_Iter_predIS7_EE>:
    1160:	stp	x29, x30, [sp, #-48]!
    1164:	mov	x29, sp
    1168:	str	x0, [sp, #24]
    116c:	add	x0, sp, #0x18
    1170:	bl	1118 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EONSt16remove_referenceIT_E4typeEOS6_>
    1174:	mov	x1, x0
    1178:	add	x0, sp, #0x28
    117c:	ldr	x1, [x1]
    1180:	bl	15f0 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EC1ES5_>
    1184:	ldr	x0, [sp, #40]
    1188:	ldp	x29, x30, [sp], #48
    118c:	ret

0000000000001190 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag>:
    1190:	stp	x29, x30, [sp, #-64]!
    1194:	mov	x29, sp
    1198:	str	x0, [sp, #40]
    119c:	str	x1, [sp, #32]
    11a0:	str	x2, [sp, #24]
    11a4:	strb	w3, [sp, #16]
    11a8:	ldr	x1, [sp, #32]
    11ac:	ldr	x0, [sp, #40]
    11b0:	sub	x0, x1, x0
    11b4:	asr	x0, x0, #1
    11b8:	asr	x0, x0, #2
    11bc:	str	x0, [sp, #56]
    11c0:	ldr	x0, [sp, #56]
    11c4:	cmp	x0, #0x0
    11c8:	b.le	128c <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xfc>
    11cc:	add	x0, sp, #0x18
    11d0:	ldr	x1, [sp, #40]
    11d4:	bl	1624 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>
    11d8:	and	w0, w0, #0xff
    11dc:	cmp	w0, #0x0
    11e0:	b.eq	11ec <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x5c>  // b.none
    11e4:	ldr	x0, [sp, #40]
    11e8:	b	1348 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
    11ec:	ldr	x0, [sp, #40]
    11f0:	add	x0, x0, #0x2
    11f4:	str	x0, [sp, #40]
    11f8:	add	x0, sp, #0x18
    11fc:	ldr	x1, [sp, #40]
    1200:	bl	1624 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>
    1204:	and	w0, w0, #0xff
    1208:	cmp	w0, #0x0
    120c:	b.eq	1218 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x88>  // b.none
    1210:	ldr	x0, [sp, #40]
    1214:	b	1348 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
    1218:	ldr	x0, [sp, #40]
    121c:	add	x0, x0, #0x2
    1220:	str	x0, [sp, #40]
    1224:	add	x0, sp, #0x18
    1228:	ldr	x1, [sp, #40]
    122c:	bl	1624 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>
    1230:	and	w0, w0, #0xff
    1234:	cmp	w0, #0x0
    1238:	b.eq	1244 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xb4>  // b.none
    123c:	ldr	x0, [sp, #40]
    1240:	b	1348 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
    1244:	ldr	x0, [sp, #40]
    1248:	add	x0, x0, #0x2
    124c:	str	x0, [sp, #40]
    1250:	add	x0, sp, #0x18
    1254:	ldr	x1, [sp, #40]
    1258:	bl	1624 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>
    125c:	and	w0, w0, #0xff
    1260:	cmp	w0, #0x0
    1264:	b.eq	1270 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xe0>  // b.none
    1268:	ldr	x0, [sp, #40]
    126c:	b	1348 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
    1270:	ldr	x0, [sp, #40]
    1274:	add	x0, x0, #0x2
    1278:	str	x0, [sp, #40]
    127c:	ldr	x0, [sp, #56]
    1280:	sub	x0, x0, #0x1
    1284:	str	x0, [sp, #56]
    1288:	b	11c0 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x30>
    128c:	ldr	x1, [sp, #32]
    1290:	ldr	x0, [sp, #40]
    1294:	sub	x0, x1, x0
    1298:	asr	x0, x0, #1
    129c:	cmp	x0, #0x3
    12a0:	b.eq	12c0 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x130>  // b.none
    12a4:	cmp	x0, #0x3
    12a8:	b.gt	1344 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b4>
    12ac:	cmp	x0, #0x1
    12b0:	b.eq	1318 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x188>  // b.none
    12b4:	cmp	x0, #0x2
    12b8:	b.eq	12ec <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x15c>  // b.none
    12bc:	b	1344 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b4>
    12c0:	add	x0, sp, #0x18
    12c4:	ldr	x1, [sp, #40]
    12c8:	bl	1624 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>
    12cc:	and	w0, w0, #0xff
    12d0:	cmp	w0, #0x0
    12d4:	b.eq	12e0 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x150>  // b.none
    12d8:	ldr	x0, [sp, #40]
    12dc:	b	1348 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
    12e0:	ldr	x0, [sp, #40]
    12e4:	add	x0, x0, #0x2
    12e8:	str	x0, [sp, #40]
    12ec:	add	x0, sp, #0x18
    12f0:	ldr	x1, [sp, #40]
    12f4:	bl	1624 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>
    12f8:	and	w0, w0, #0xff
    12fc:	cmp	w0, #0x0
    1300:	b.eq	130c <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x17c>  // b.none
    1304:	ldr	x0, [sp, #40]
    1308:	b	1348 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
    130c:	ldr	x0, [sp, #40]
    1310:	add	x0, x0, #0x2
    1314:	str	x0, [sp, #40]
    1318:	add	x0, sp, #0x18
    131c:	ldr	x1, [sp, #40]
    1320:	bl	1624 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>
    1324:	and	w0, w0, #0xff
    1328:	cmp	w0, #0x0
    132c:	b.eq	1338 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1a8>  // b.none
    1330:	ldr	x0, [sp, #40]
    1334:	b	1348 <_ZSt9__find_ifIPsN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b8>
    1338:	ldr	x0, [sp, #40]
    133c:	add	x0, x0, #0x2
    1340:	str	x0, [sp, #40]
    1344:	ldr	x0, [sp, #32]
    1348:	ldp	x29, x30, [sp], #64
    134c:	ret

0000000000001350 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EONSt16remove_referenceIT_E4typeEOS6_>:
    1350:	sub	sp, sp, #0x10
    1354:	str	x0, [sp, #8]
    1358:	ldr	x0, [sp, #8]
    135c:	add	sp, sp, #0x10
    1360:	ret

0000000000001364 <_ZN9__gnu_cxx5__ops10_Iter_predIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EC1ES5_>:
    1364:	stp	x29, x30, [sp, #-32]!
    1368:	mov	x29, sp
    136c:	str	x0, [sp, #24]
    1370:	str	x1, [sp, #16]
    1374:	add	x0, sp, #0x10
    1378:	bl	1350 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EONSt16remove_referenceIT_E4typeEOS6_>
    137c:	mov	x1, x0
    1380:	ldr	x0, [sp, #24]
    1384:	ldr	x1, [x1]
    1388:	str	x1, [x0]
    138c:	nop
    1390:	ldp	x29, x30, [sp], #32
    1394:	ret

0000000000001398 <_ZN9__gnu_cxx5__ops8__negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EENS0_12_Iter_negateIT_EENS0_10_Iter_predIS7_EE>:
    1398:	stp	x29, x30, [sp, #-48]!
    139c:	mov	x29, sp
    13a0:	str	x0, [sp, #24]
    13a4:	add	x0, sp, #0x18
    13a8:	bl	1350 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EONSt16remove_referenceIT_E4typeEOS6_>
    13ac:	mov	x1, x0
    13b0:	add	x0, sp, #0x28
    13b4:	ldr	x1, [x1]
    13b8:	bl	1660 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EC1ES5_>
    13bc:	ldr	x0, [sp, #40]
    13c0:	ldp	x29, x30, [sp], #48
    13c4:	ret

00000000000013c8 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag>:
    13c8:	stp	x29, x30, [sp, #-64]!
    13cc:	mov	x29, sp
    13d0:	str	x0, [sp, #40]
    13d4:	str	x1, [sp, #32]
    13d8:	str	x2, [sp, #24]
    13dc:	strb	w3, [sp, #16]
    13e0:	ldr	x1, [sp, #32]
    13e4:	ldr	x0, [sp, #40]
    13e8:	sub	x0, x1, x0
    13ec:	asr	x0, x0, #2
    13f0:	str	x0, [sp, #56]
    13f4:	ldr	x0, [sp, #56]
    13f8:	cmp	x0, #0x0
    13fc:	b.le	14c0 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xf8>
    1400:	add	x0, sp, #0x18
    1404:	ldr	x1, [sp, #40]
    1408:	bl	1694 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>
    140c:	and	w0, w0, #0xff
    1410:	cmp	w0, #0x0
    1414:	b.eq	1420 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x58>  // b.none
    1418:	ldr	x0, [sp, #40]
    141c:	b	1578 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b0>
    1420:	ldr	x0, [sp, #40]
    1424:	add	x0, x0, #0x1
    1428:	str	x0, [sp, #40]
    142c:	add	x0, sp, #0x18
    1430:	ldr	x1, [sp, #40]
    1434:	bl	1694 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>
    1438:	and	w0, w0, #0xff
    143c:	cmp	w0, #0x0
    1440:	b.eq	144c <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x84>  // b.none
    1444:	ldr	x0, [sp, #40]
    1448:	b	1578 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b0>
    144c:	ldr	x0, [sp, #40]
    1450:	add	x0, x0, #0x1
    1454:	str	x0, [sp, #40]
    1458:	add	x0, sp, #0x18
    145c:	ldr	x1, [sp, #40]
    1460:	bl	1694 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>
    1464:	and	w0, w0, #0xff
    1468:	cmp	w0, #0x0
    146c:	b.eq	1478 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xb0>  // b.none
    1470:	ldr	x0, [sp, #40]
    1474:	b	1578 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b0>
    1478:	ldr	x0, [sp, #40]
    147c:	add	x0, x0, #0x1
    1480:	str	x0, [sp, #40]
    1484:	add	x0, sp, #0x18
    1488:	ldr	x1, [sp, #40]
    148c:	bl	1694 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>
    1490:	and	w0, w0, #0xff
    1494:	cmp	w0, #0x0
    1498:	b.eq	14a4 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0xdc>  // b.none
    149c:	ldr	x0, [sp, #40]
    14a0:	b	1578 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b0>
    14a4:	ldr	x0, [sp, #40]
    14a8:	add	x0, x0, #0x1
    14ac:	str	x0, [sp, #40]
    14b0:	ldr	x0, [sp, #56]
    14b4:	sub	x0, x0, #0x1
    14b8:	str	x0, [sp, #56]
    14bc:	b	13f4 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x2c>
    14c0:	ldr	x1, [sp, #32]
    14c4:	ldr	x0, [sp, #40]
    14c8:	sub	x0, x1, x0
    14cc:	cmp	x0, #0x3
    14d0:	b.eq	14f0 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x128>  // b.none
    14d4:	cmp	x0, #0x3
    14d8:	b.gt	1574 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1ac>
    14dc:	cmp	x0, #0x1
    14e0:	b.eq	1548 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x180>  // b.none
    14e4:	cmp	x0, #0x2
    14e8:	b.eq	151c <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x154>  // b.none
    14ec:	b	1574 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1ac>
    14f0:	add	x0, sp, #0x18
    14f4:	ldr	x1, [sp, #40]
    14f8:	bl	1694 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>
    14fc:	and	w0, w0, #0xff
    1500:	cmp	w0, #0x0
    1504:	b.eq	1510 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x148>  // b.none
    1508:	ldr	x0, [sp, #40]
    150c:	b	1578 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b0>
    1510:	ldr	x0, [sp, #40]
    1514:	add	x0, x0, #0x1
    1518:	str	x0, [sp, #40]
    151c:	add	x0, sp, #0x18
    1520:	ldr	x1, [sp, #40]
    1524:	bl	1694 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>
    1528:	and	w0, w0, #0xff
    152c:	cmp	w0, #0x0
    1530:	b.eq	153c <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x174>  // b.none
    1534:	ldr	x0, [sp, #40]
    1538:	b	1578 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b0>
    153c:	ldr	x0, [sp, #40]
    1540:	add	x0, x0, #0x1
    1544:	str	x0, [sp, #40]
    1548:	add	x0, sp, #0x18
    154c:	ldr	x1, [sp, #40]
    1550:	bl	1694 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>
    1554:	and	w0, w0, #0xff
    1558:	cmp	w0, #0x0
    155c:	b.eq	1568 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1a0>  // b.none
    1560:	ldr	x0, [sp, #40]
    1564:	b	1578 <_ZSt9__find_ifIPaN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EEET_S9_S9_T0_St26random_access_iterator_tag+0x1b0>
    1568:	ldr	x0, [sp, #40]
    156c:	add	x0, x0, #0x1
    1570:	str	x0, [sp, #40]
    1574:	ldr	x0, [sp, #32]
    1578:	ldp	x29, x30, [sp], #64
    157c:	ret

0000000000001580 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EC1ES5_>:
    1580:	stp	x29, x30, [sp, #-32]!
    1584:	mov	x29, sp
    1588:	str	x0, [sp, #24]
    158c:	str	x1, [sp, #16]
    1590:	add	x0, sp, #0x10
    1594:	bl	ee0 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EONSt16remove_referenceIT_E4typeEOS6_>
    1598:	mov	x1, x0
    159c:	ldr	x0, [sp, #24]
    15a0:	ldr	x1, [x1]
    15a4:	str	x1, [x0]
    15a8:	nop
    15ac:	ldp	x29, x30, [sp], #32
    15b0:	ret

00000000000015b4 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblEUliE_EclIPiEEbT_>:
    15b4:	stp	x29, x30, [sp, #-32]!
    15b8:	mov	x29, sp
    15bc:	str	x0, [sp, #24]
    15c0:	str	x1, [sp, #16]
    15c4:	ldr	x2, [sp, #24]
    15c8:	ldr	x0, [sp, #16]
    15cc:	ldr	w0, [x0]
    15d0:	mov	w1, w0
    15d4:	mov	x0, x2
    15d8:	bl	a60 <_ZZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIiEEblENKUliE_clEi>
    15dc:	and	w0, w0, #0xff
    15e0:	eor	w0, w0, #0x1
    15e4:	and	w0, w0, #0xff
    15e8:	ldp	x29, x30, [sp], #32
    15ec:	ret

00000000000015f0 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EC1ES5_>:
    15f0:	stp	x29, x30, [sp, #-32]!
    15f4:	mov	x29, sp
    15f8:	str	x0, [sp, #24]
    15fc:	str	x1, [sp, #16]
    1600:	add	x0, sp, #0x10
    1604:	bl	1118 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EONSt16remove_referenceIT_E4typeEOS6_>
    1608:	mov	x1, x0
    160c:	ldr	x0, [sp, #24]
    1610:	ldr	x1, [x1]
    1614:	str	x1, [x0]
    1618:	nop
    161c:	ldp	x29, x30, [sp], #32
    1620:	ret

0000000000001624 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblEUlsE_EclIPsEEbT_>:
    1624:	stp	x29, x30, [sp, #-32]!
    1628:	mov	x29, sp
    162c:	str	x0, [sp, #24]
    1630:	str	x1, [sp, #16]
    1634:	ldr	x2, [sp, #24]
    1638:	ldr	x0, [sp, #16]
    163c:	ldrsh	w0, [x0]
    1640:	mov	w1, w0
    1644:	mov	x0, x2
    1648:	bl	a9c <_ZZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIsEEblENKUlsE_clEs>
    164c:	and	w0, w0, #0xff
    1650:	eor	w0, w0, #0x1
    1654:	and	w0, w0, #0xff
    1658:	ldp	x29, x30, [sp], #32
    165c:	ret

0000000000001660 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EC1ES5_>:
    1660:	stp	x29, x30, [sp, #-32]!
    1664:	mov	x29, sp
    1668:	str	x0, [sp, #24]
    166c:	str	x1, [sp, #16]
    1670:	add	x0, sp, #0x10
    1674:	bl	1350 <_ZSt4moveIRZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EONSt16remove_referenceIT_E4typeEOS6_>
    1678:	mov	x1, x0
    167c:	ldr	x0, [sp, #24]
    1680:	ldr	x1, [x1]
    1684:	str	x1, [x0]
    1688:	nop
    168c:	ldp	x29, x30, [sp], #32
    1690:	ret

0000000000001694 <_ZN9__gnu_cxx5__ops12_Iter_negateIZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblEUlaE_EclIPaEEbT_>:
    1694:	stp	x29, x30, [sp, #-32]!
    1698:	mov	x29, sp
    169c:	str	x0, [sp, #24]
    16a0:	str	x1, [sp, #16]
    16a4:	ldr	x2, [sp, #24]
    16a8:	ldr	x0, [sp, #16]
    16ac:	ldrsb	w0, [x0]
    16b0:	mov	w1, w0
    16b4:	mov	x0, x2
    16b8:	bl	ad8 <_ZZN4llvm10AArch64_AML28isSVEMaskOfIdenticalElementsIaEEblENKUlaE_clEa>
    16bc:	and	w0, w0, #0xff
    16c0:	eor	w0, w0, #0x1
    16c4:	and	w0, w0, #0xff
    16c8:	ldp	x29, x30, [sp], #32
    16cc:	ret

Disassembly of section .text._ZN4llvm20MCExternalSymbolizerD2Ev:

0000000000000000 <_ZN4llvm20MCExternalSymbolizerD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	adrp	x0, 0 <_ZTVN4llvm20MCExternalSymbolizerE>
  10:	ldr	x0, [x0]
  14:	add	x1, x0, #0x10
  18:	ldr	x0, [sp, #24]
  1c:	str	x1, [x0]
  20:	ldr	x0, [sp, #24]
  24:	bl	0 <_ZN4llvm12MCSymbolizerD2Ev>
  28:	nop
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

Disassembly of section .text._ZN4llvm20MCExternalSymbolizerD0Ev:

0000000000000000 <_ZN4llvm20MCExternalSymbolizerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm20MCExternalSymbolizerD0Ev>
  14:	mov	x1, #0x30                  	// #48
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZNK4llvm15SmallVectorBase4sizeEv:

0000000000000000 <_ZNK4llvm15SmallVectorBase4sizeEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #8]
  10:	mov	w0, w0
  14:	add	sp, sp, #0x10
  18:	ret

Disassembly of section .text._ZNK4llvm15SmallVectorBase8capacityEv:

0000000000000000 <_ZNK4llvm15SmallVectorBase8capacityEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #12]
  10:	mov	w0, w0
  14:	add	sp, sp, #0x10
  18:	ret

Disassembly of section .text._ZN4llvm15SmallVectorBase8set_sizeEm:

0000000000000000 <_ZN4llvm15SmallVectorBase8set_sizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	bl	0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  18:	mov	x1, x0
  1c:	ldr	x0, [sp, #16]
  20:	cmp	x0, x1
  24:	b.ls	48 <_ZN4llvm15SmallVectorBase8set_sizeEm+0x48>  // b.plast
  28:	adrp	x0, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  2c:	add	x3, x0, #0x0
  30:	mov	w2, #0x43                  	// #67
  34:	adrp	x0, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  38:	add	x1, x0, #0x0
  3c:	adrp	x0, 0 <_ZN4llvm15SmallVectorBase8set_sizeEm>
  40:	add	x0, x0, #0x0
  44:	bl	0 <__assert_fail>
  48:	ldr	x0, [sp, #16]
  4c:	mov	w1, w0
  50:	ldr	x0, [sp, #24]
  54:	str	w1, [x0, #8]
  58:	nop
  5c:	ldp	x29, x30, [sp], #32
  60:	ret

Disassembly of section .text._ZN4llvm9StringRef6strLenEPKc:

0000000000000000 <_ZN4llvm9StringRef6strLenEPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <strlen>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZN4llvm9StringRefC2EPKc:

0000000000000000 <_ZN4llvm9StringRefC1EPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [sp, #16]
  18:	str	x1, [x0]
  1c:	ldr	x0, [sp, #16]
  20:	cmp	x0, #0x0
  24:	b.eq	38 <_ZN4llvm9StringRefC1EPKc+0x38>  // b.none
  28:	ldr	x0, [sp, #16]
  2c:	bl	0 <_ZN4llvm9StringRefC1EPKc>
  30:	mov	x1, x0
  34:	b	3c <_ZN4llvm9StringRefC1EPKc+0x3c>
  38:	mov	x1, #0x0                   	// #0
  3c:	ldr	x0, [sp, #24]
  40:	str	x1, [x0, #8]
  44:	nop
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZNK4llvm9StringRef4dataEv:

0000000000000000 <_ZNK4llvm9StringRef4dataEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZNK4llvm9StringRef4sizeEv:

0000000000000000 <_ZNK4llvm9StringRef4sizeEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #8]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZNK4llvm5Twine6isNullEv:

0000000000000000 <_ZNK4llvm5Twine6isNullEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK4llvm5Twine6isNullEv>
  14:	and	w0, w0, #0xff
  18:	cmp	w0, #0x0
  1c:	cset	w0, eq  // eq = none
  20:	and	w0, w0, #0xff
  24:	ldp	x29, x30, [sp], #32
  28:	ret

Disassembly of section .text._ZNK4llvm5Twine7isEmptyEv:

0000000000000000 <_ZNK4llvm5Twine7isEmptyEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK4llvm5Twine7isEmptyEv>
  14:	and	w0, w0, #0xff
  18:	cmp	w0, #0x1
  1c:	cset	w0, eq  // eq = none
  20:	and	w0, w0, #0xff
  24:	ldp	x29, x30, [sp], #32
  28:	ret

Disassembly of section .text._ZNK4llvm5Twine9isNullaryEv:

0000000000000000 <_ZNK4llvm5Twine9isNullaryEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK4llvm5Twine9isNullaryEv>
  14:	and	w0, w0, #0xff
  18:	cmp	w0, #0x0
  1c:	b.ne	34 <_ZNK4llvm5Twine9isNullaryEv+0x34>  // b.any
  20:	ldr	x0, [sp, #24]
  24:	bl	0 <_ZNK4llvm5Twine9isNullaryEv>
  28:	and	w0, w0, #0xff
  2c:	cmp	w0, #0x0
  30:	b.eq	3c <_ZNK4llvm5Twine9isNullaryEv+0x3c>  // b.none
  34:	mov	w0, #0x1                   	// #1
  38:	b	40 <_ZNK4llvm5Twine9isNullaryEv+0x40>
  3c:	mov	w0, #0x0                   	// #0
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZNK4llvm5Twine8isBinaryEv:

0000000000000000 <_ZNK4llvm5Twine8isBinaryEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK4llvm5Twine8isBinaryEv>
  14:	and	w0, w0, #0xff
  18:	cmp	w0, #0x0
  1c:	b.eq	3c <_ZNK4llvm5Twine8isBinaryEv+0x3c>  // b.none
  20:	ldr	x0, [sp, #24]
  24:	bl	0 <_ZNK4llvm5Twine8isBinaryEv>
  28:	and	w0, w0, #0xff
  2c:	cmp	w0, #0x1
  30:	b.eq	3c <_ZNK4llvm5Twine8isBinaryEv+0x3c>  // b.none
  34:	mov	w0, #0x1                   	// #1
  38:	b	40 <_ZNK4llvm5Twine8isBinaryEv+0x40>
  3c:	mov	w0, #0x0                   	// #0
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK4llvm5Twine7isValidEv>
  14:	and	w0, w0, #0xff
  18:	cmp	w0, #0x0
  1c:	b.eq	3c <_ZNK4llvm5Twine7isValidEv+0x3c>  // b.none
  20:	ldr	x0, [sp, #24]
  24:	bl	0 <_ZNK4llvm5Twine7isValidEv>
  28:	and	w0, w0, #0xff
  2c:	cmp	w0, #0x1
  30:	b.eq	3c <_ZNK4llvm5Twine7isValidEv+0x3c>  // b.none
  34:	mov	w0, #0x1                   	// #1
  38:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  3c:	mov	w0, #0x0                   	// #0
  40:	cmp	w0, #0x0
  44:	b.eq	50 <_ZNK4llvm5Twine7isValidEv+0x50>  // b.none
  48:	mov	w0, #0x0                   	// #0
  4c:	b	160 <_ZNK4llvm5Twine7isValidEv+0x160>
  50:	ldr	x0, [sp, #24]
  54:	bl	0 <_ZNK4llvm5Twine7isValidEv>
  58:	and	w0, w0, #0xff
  5c:	cmp	w0, #0x0
  60:	cset	w0, eq  // eq = none
  64:	and	w0, w0, #0xff
  68:	cmp	w0, #0x0
  6c:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  70:	mov	w0, #0x0                   	// #0
  74:	b	160 <_ZNK4llvm5Twine7isValidEv+0x160>
  78:	ldr	x0, [sp, #24]
  7c:	bl	0 <_ZNK4llvm5Twine7isValidEv>
  80:	and	w0, w0, #0xff
  84:	cmp	w0, #0x1
  88:	b.eq	a8 <_ZNK4llvm5Twine7isValidEv+0xa8>  // b.none
  8c:	ldr	x0, [sp, #24]
  90:	bl	0 <_ZNK4llvm5Twine7isValidEv>
  94:	and	w0, w0, #0xff
  98:	cmp	w0, #0x1
  9c:	b.ne	a8 <_ZNK4llvm5Twine7isValidEv+0xa8>  // b.any
  a0:	mov	w0, #0x1                   	// #1
  a4:	b	ac <_ZNK4llvm5Twine7isValidEv+0xac>
  a8:	mov	w0, #0x0                   	// #0
  ac:	cmp	w0, #0x0
  b0:	b.eq	bc <_ZNK4llvm5Twine7isValidEv+0xbc>  // b.none
  b4:	mov	w0, #0x0                   	// #0
  b8:	b	160 <_ZNK4llvm5Twine7isValidEv+0x160>
  bc:	ldr	x0, [sp, #24]
  c0:	bl	0 <_ZNK4llvm5Twine7isValidEv>
  c4:	and	w0, w0, #0xff
  c8:	cmp	w0, #0x2
  cc:	b.ne	f8 <_ZNK4llvm5Twine7isValidEv+0xf8>  // b.any
  d0:	ldr	x0, [sp, #24]
  d4:	ldr	x0, [x0]
  d8:	bl	0 <_ZNK4llvm5Twine7isValidEv>
  dc:	and	w0, w0, #0xff
  e0:	eor	w0, w0, #0x1
  e4:	and	w0, w0, #0xff
  e8:	cmp	w0, #0x0
  ec:	b.eq	f8 <_ZNK4llvm5Twine7isValidEv+0xf8>  // b.none
  f0:	mov	w0, #0x1                   	// #1
  f4:	b	fc <_ZNK4llvm5Twine7isValidEv+0xfc>
  f8:	mov	w0, #0x0                   	// #0
  fc:	cmp	w0, #0x0
 100:	b.eq	10c <_ZNK4llvm5Twine7isValidEv+0x10c>  // b.none
 104:	mov	w0, #0x0                   	// #0
 108:	b	160 <_ZNK4llvm5Twine7isValidEv+0x160>
 10c:	ldr	x0, [sp, #24]
 110:	bl	0 <_ZNK4llvm5Twine7isValidEv>
 114:	and	w0, w0, #0xff
 118:	cmp	w0, #0x2
 11c:	b.ne	148 <_ZNK4llvm5Twine7isValidEv+0x148>  // b.any
 120:	ldr	x0, [sp, #24]
 124:	ldr	x0, [x0, #8]
 128:	bl	0 <_ZNK4llvm5Twine7isValidEv>
 12c:	and	w0, w0, #0xff
 130:	eor	w0, w0, #0x1
 134:	and	w0, w0, #0xff
 138:	cmp	w0, #0x0
 13c:	b.eq	148 <_ZNK4llvm5Twine7isValidEv+0x148>  // b.none
 140:	mov	w0, #0x1                   	// #1
 144:	b	14c <_ZNK4llvm5Twine7isValidEv+0x14c>
 148:	mov	w0, #0x0                   	// #0
 14c:	cmp	w0, #0x0
 150:	b.eq	15c <_ZNK4llvm5Twine7isValidEv+0x15c>  // b.none
 154:	mov	w0, #0x0                   	// #0
 158:	b	160 <_ZNK4llvm5Twine7isValidEv+0x160>
 15c:	mov	w0, #0x1                   	// #1
 160:	ldp	x29, x30, [sp], #32
 164:	ret

Disassembly of section .text._ZNK4llvm5Twine10getLHSKindEv:

0000000000000000 <_ZNK4llvm5Twine10getLHSKindEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldrb	w0, [x0, #16]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZNK4llvm5Twine10getRHSKindEv:

0000000000000000 <_ZNK4llvm5Twine10getRHSKindEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldrb	w0, [x0, #17]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN4llvm5TwineC2ERKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC1ERKNS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	str	xzr, [x0]
  18:	ldr	x0, [sp, #24]
  1c:	str	xzr, [x0, #8]
  20:	ldr	x0, [sp, #24]
  24:	mov	w1, #0x5                   	// #5
  28:	strb	w1, [x0, #16]
  2c:	ldr	x0, [sp, #24]
  30:	mov	w1, #0x1                   	// #1
  34:	strb	w1, [x0, #17]
  38:	ldr	x0, [sp, #24]
  3c:	ldr	x1, [sp, #16]
  40:	str	x1, [x0]
  44:	ldr	x0, [sp, #24]
  48:	bl	0 <_ZN4llvm5TwineC1ERKNS_9StringRefE>
  4c:	and	w0, w0, #0xff
  50:	cmp	w0, #0x0
  54:	b.ne	78 <_ZN4llvm5TwineC1ERKNS_9StringRefE+0x78>  // b.any
  58:	adrp	x0, 0 <_ZN4llvm5TwineC1ERKNS_9StringRefE>
  5c:	add	x3, x0, #0x0
  60:	mov	w2, #0x121                 	// #289
  64:	adrp	x0, 0 <_ZN4llvm5TwineC1ERKNS_9StringRefE>
  68:	add	x1, x0, #0x0
  6c:	adrp	x0, 0 <_ZN4llvm5TwineC1ERKNS_9StringRefE>
  70:	add	x0, x0, #0x0
  74:	bl	0 <__assert_fail>
  78:	nop
  7c:	nop
  80:	ldp	x29, x30, [sp], #32
  84:	ret

Disassembly of section .text._ZN4llvm18format_object_baseC2EPKc:

0000000000000000 <_ZN4llvm18format_object_baseC1EPKc>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	adrp	x0, 0 <_ZTVN4llvm18format_object_baseE>
  10:	ldr	x0, [x0]
  14:	add	x1, x0, #0x10
  18:	ldr	x0, [sp, #8]
  1c:	str	x1, [x0]
  20:	ldr	x0, [sp, #8]
  24:	ldr	x1, [sp]
  28:	str	x1, [x0, #8]
  2c:	nop
  30:	add	sp, sp, #0x10
  34:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #56]
  10:	stp	x1, x2, [sp, #40]
  14:	add	x0, sp, #0x28
  18:	bl	0 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>
  1c:	str	x0, [sp, #72]
  20:	ldr	x0, [sp, #56]
  24:	ldr	x1, [x0, #16]
  28:	ldr	x0, [sp, #56]
  2c:	ldr	x0, [x0, #24]
  30:	sub	x0, x1, x0
  34:	mov	x1, x0
  38:	ldr	x0, [sp, #72]
  3c:	cmp	x0, x1
  40:	b.ls	60 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x60>  // b.plast
  44:	add	x0, sp, #0x28
  48:	bl	0 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>
  4c:	ldr	x2, [sp, #72]
  50:	mov	x1, x0
  54:	ldr	x0, [sp, #56]
  58:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  5c:	b	a8 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0xa8>
  60:	ldr	x0, [sp, #72]
  64:	cmp	x0, #0x0
  68:	b.eq	a4 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0xa4>  // b.none
  6c:	ldr	x0, [sp, #56]
  70:	ldr	x19, [x0, #24]
  74:	add	x0, sp, #0x28
  78:	bl	0 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>
  7c:	ldr	x2, [sp, #72]
  80:	mov	x1, x0
  84:	mov	x0, x19
  88:	bl	0 <memcpy>
  8c:	ldr	x0, [sp, #56]
  90:	ldr	x1, [x0, #24]
  94:	ldr	x0, [sp, #72]
  98:	add	x1, x1, x0
  9c:	ldr	x0, [sp, #56]
  a0:	str	x1, [x0, #24]
  a4:	ldr	x0, [sp, #56]
  a8:	ldr	x19, [sp, #16]
  ac:	ldp	x29, x30, [sp], #80
  b0:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	add	x0, sp, #0x20
  14:	ldr	x1, [sp, #16]
  18:	bl	0 <_ZN4llvm11raw_ostreamlsEPKc>
  1c:	ldp	x1, x2, [sp, #32]
  20:	ldr	x0, [sp, #24]
  24:	bl	0 <_ZN4llvm11raw_ostreamlsEPKc>
  28:	ldp	x29, x30, [sp], #48
  2c:	ret

Disassembly of section .text._ZN4llvm5SMLocC2Ev:

0000000000000000 <_ZN4llvm5SMLocC1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	str	xzr, [x0]
  10:	nop
  14:	add	sp, sp, #0x10
  18:	ret

Disassembly of section .text._ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolERNS_9MCContextE:

0000000000000000 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolERNS_9MCContextE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	str	xzr, [sp, #40]
  14:	add	x0, sp, #0x28
  18:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolERNS_9MCContextE>
  1c:	ldr	x3, [sp, #40]
  20:	ldr	x2, [sp, #16]
  24:	mov	w1, #0x0                   	// #0
  28:	ldr	x0, [sp, #24]
  2c:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
  30:	ldp	x29, x30, [sp], #48
  34:	ret

Disassembly of section .text._ZN4llvm11MCUnaryExpr11createMinusEPKNS_6MCExprERNS_9MCContextENS_5SMLocE:

0000000000000000 <_ZN4llvm11MCUnaryExpr11createMinusEPKNS_6MCExprERNS_9MCContextENS_5SMLocE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x3, [sp, #24]
  18:	ldr	x2, [sp, #32]
  1c:	ldr	x1, [sp, #40]
  20:	mov	w0, #0x1                   	// #1
  24:	bl	0 <_ZN4llvm11MCUnaryExpr6createENS0_6OpcodeEPKNS_6MCExprERNS_9MCContextENS_5SMLocE>
  28:	ldp	x29, x30, [sp], #48
  2c:	ret

Disassembly of section .text._ZN4llvm12MCBinaryExpr9createAddEPKNS_6MCExprES3_RNS_9MCContextE:

0000000000000000 <_ZN4llvm12MCBinaryExpr9createAddEPKNS_6MCExprES3_RNS_9MCContextE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	str	xzr, [sp, #56]
  18:	add	x0, sp, #0x38
  1c:	bl	0 <_ZN4llvm12MCBinaryExpr9createAddEPKNS_6MCExprES3_RNS_9MCContextE>
  20:	ldr	x4, [sp, #56]
  24:	ldr	x3, [sp, #24]
  28:	ldr	x2, [sp, #32]
  2c:	ldr	x1, [sp, #40]
  30:	mov	w0, #0x0                   	// #0
  34:	bl	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
  38:	ldp	x29, x30, [sp], #64
  3c:	ret

Disassembly of section .text._ZN4llvm12MCBinaryExpr9createSubEPKNS_6MCExprES3_RNS_9MCContextE:

0000000000000000 <_ZN4llvm12MCBinaryExpr9createSubEPKNS_6MCExprES3_RNS_9MCContextE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	str	xzr, [sp, #56]
  18:	add	x0, sp, #0x38
  1c:	bl	0 <_ZN4llvm12MCBinaryExpr9createSubEPKNS_6MCExprES3_RNS_9MCContextE>
  20:	ldr	x4, [sp, #56]
  24:	ldr	x3, [sp, #24]
  28:	ldr	x2, [sp, #32]
  2c:	ldr	x1, [sp, #40]
  30:	mov	w0, #0x11                  	// #17
  34:	bl	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
  38:	ldp	x29, x30, [sp], #64
  3c:	ret

Disassembly of section .text._ZN4llvm9MCOperandC2Ev:

0000000000000000 <_ZN4llvm9MCOperandC1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	strb	wzr, [x0]
  10:	ldr	x0, [sp, #8]
  14:	str	xzr, [x0, #8]
  18:	nop
  1c:	add	sp, sp, #0x10
  20:	ret

Disassembly of section .text._ZNK4llvm9MCOperand5isRegEv:

0000000000000000 <_ZNK4llvm9MCOperand5isRegEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldrb	w0, [x0]
  10:	cmp	w0, #0x1
  14:	cset	w0, eq  // eq = none
  18:	and	w0, w0, #0xff
  1c:	add	sp, sp, #0x10
  20:	ret

Disassembly of section .text._ZNK4llvm9MCOperand6getRegEv:

0000000000000000 <_ZNK4llvm9MCOperand6getRegEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNK4llvm9MCOperand6getRegEv>
  14:	and	w0, w0, #0xff
  18:	cmp	w0, #0x0
  1c:	b.ne	40 <_ZNK4llvm9MCOperand6getRegEv+0x40>  // b.any
  20:	adrp	x0, 0 <_ZNK4llvm9MCOperand6getRegEv>
  24:	add	x3, x0, #0x0
  28:	mov	w2, #0x41                  	// #65
  2c:	adrp	x0, 0 <_ZNK4llvm9MCOperand6getRegEv>
  30:	add	x1, x0, #0x0
  34:	adrp	x0, 0 <_ZNK4llvm9MCOperand6getRegEv>
  38:	add	x0, x0, #0x0
  3c:	bl	0 <__assert_fail>
  40:	nop
  44:	ldr	x0, [sp, #24]
  48:	ldr	w0, [x0, #8]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZN4llvm9MCOperand10createExprEPKNS_6MCExprE:

0000000000000000 <_ZN4llvm9MCOperand10createExprEPKNS_6MCExprE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	add	x0, sp, #0x20
  10:	bl	0 <_ZN4llvm9MCOperand10createExprEPKNS_6MCExprE>
  14:	mov	w0, #0x4                   	// #4
  18:	strb	w0, [sp, #32]
  1c:	ldr	x0, [sp, #24]
  20:	str	x0, [sp, #40]
  24:	ldp	x0, x1, [sp, #32]
  28:	ldp	x29, x30, [sp], #48
  2c:	ret

Disassembly of section .text._ZNK4llvm6MCInst9getOpcodeEv:

0000000000000000 <_ZNK4llvm6MCInst9getOpcodeEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN4llvm6MCInst10getOperandEj:

0000000000000000 <_ZN4llvm6MCInst10getOperandEj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	x0, [sp, #24]
  14:	add	x0, x0, #0x10
  18:	ldr	w1, [sp, #20]
  1c:	bl	0 <_ZN4llvm6MCInst10getOperandEj>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm6MCInst10addOperandERKNS_9MCOperandE:

0000000000000000 <_ZN4llvm6MCInst10addOperandERKNS_9MCOperandE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	add	x0, x0, #0x10
  18:	ldr	x1, [sp, #16]
  1c:	bl	0 <_ZN4llvm6MCInst10addOperandERKNS_9MCOperandE>
  20:	nop
  24:	ldp	x29, x30, [sp], #32
  28:	ret

Disassembly of section .text._ZNK4llvm9MCContext15getRegisterInfoEv:

0000000000000000 <_ZNK4llvm9MCContext15getRegisterInfoEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0, #24]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN4llvm10MCRegisterC2Ej:

0000000000000000 <_ZN4llvm10MCRegisterC1Ej>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	w1, [sp, #4]
   c:	ldr	x0, [sp, #8]
  10:	ldr	w1, [sp, #4]
  14:	str	w1, [x0]
  18:	nop
  1c:	add	sp, sp, #0x10
  20:	ret

Disassembly of section .text._ZNK4llvm10MCRegistercvjEv:

0000000000000000 <_ZNK4llvm10MCRegistercvjEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZNK4llvm14MCRegisterInfo16getEncodingValueENS_10MCRegisterE:

0000000000000000 <_ZNK4llvm14MCRegisterInfo16getEncodingValueENS_10MCRegisterE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	w1, [sp, #32]
  14:	add	x0, sp, #0x20
  18:	bl	0 <_ZNK4llvm14MCRegisterInfo16getEncodingValueENS_10MCRegisterE>
  1c:	mov	w1, w0
  20:	ldr	x0, [sp, #40]
  24:	ldr	w0, [x0, #8]
  28:	cmp	w1, w0
  2c:	b.cc	50 <_ZNK4llvm14MCRegisterInfo16getEncodingValueENS_10MCRegisterE+0x50>  // b.lo, b.ul, b.last
  30:	adrp	x0, 0 <_ZNK4llvm14MCRegisterInfo16getEncodingValueENS_10MCRegisterE>
  34:	add	x3, x0, #0x0
  38:	mov	w2, #0x223                 	// #547
  3c:	adrp	x0, 0 <_ZNK4llvm14MCRegisterInfo16getEncodingValueENS_10MCRegisterE>
  40:	add	x1, x0, #0x0
  44:	adrp	x0, 0 <_ZNK4llvm14MCRegisterInfo16getEncodingValueENS_10MCRegisterE>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <__assert_fail>
  50:	nop
  54:	ldr	x0, [sp, #40]
  58:	ldr	x19, [x0, #104]
  5c:	add	x0, sp, #0x20
  60:	bl	0 <_ZNK4llvm14MCRegisterInfo16getEncodingValueENS_10MCRegisterE>
  64:	mov	w0, w0
  68:	lsl	x0, x0, #1
  6c:	add	x0, x19, x0
  70:	ldrh	w0, [x0]
  74:	ldr	x19, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret

Disassembly of section .text._ZNSt5arrayIiLm2EEixEm:

0000000000000000 <_ZNSt5arrayIiLm2EEixEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [sp, #16]
  18:	bl	0 <_ZNSt5arrayIiLm2EEixEm>
  1c:	ldp	x29, x30, [sp], #32
  20:	ret

Disassembly of section .text._ZNSt5arrayIsLm4EEixEm:

0000000000000000 <_ZNSt5arrayIsLm4EEixEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [sp, #16]
  18:	bl	0 <_ZNSt5arrayIsLm4EEixEm>
  1c:	ldp	x29, x30, [sp], #32
  20:	ret

Disassembly of section .text._ZNSt5arrayIaLm8EEixEm:

0000000000000000 <_ZNSt5arrayIaLm8EEixEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [sp, #16]
  18:	bl	0 <_ZNSt5arrayIaLm8EEixEm>
  1c:	ldp	x29, x30, [sp], #32
  20:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	bl	0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>
  18:	mov	x1, x0
  1c:	ldr	x0, [sp, #16]
  20:	cmp	x0, x1
  24:	b.cc	48 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm+0x48>  // b.lo, b.ul, b.last
  28:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>
  2c:	add	x3, x0, #0x0
  30:	mov	w2, #0x95                  	// #149
  34:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>
  38:	add	x1, x0, #0x0
  3c:	adrp	x0, 0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>
  40:	add	x0, x0, #0x0
  44:	bl	0 <__assert_fail>
  48:	ldr	x0, [sp, #24]
  4c:	bl	0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvEixEm>
  50:	mov	x1, x0
  54:	ldr	x0, [sp, #16]
  58:	lsl	x0, x0, #4
  5c:	add	x0, x1, x0
  60:	ldp	x29, x30, [sp], #32
  64:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	x1, [sp, #32]
  14:	ldr	x0, [sp, #40]
  18:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  1c:	mov	x19, x0
  20:	ldr	x0, [sp, #40]
  24:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  28:	cmp	x19, x0
  2c:	cset	w0, cs  // cs = hs, nlast
  30:	and	w0, w0, #0xff
  34:	and	x0, x0, #0xff
  38:	cmp	x0, #0x0
  3c:	cset	w0, ne  // ne = any
  40:	and	w0, w0, #0xff
  44:	cmp	w0, #0x0
  48:	b.eq	58 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_+0x58>  // b.none
  4c:	mov	x1, #0x0                   	// #0
  50:	ldr	x0, [sp, #40]
  54:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  58:	ldr	x0, [sp, #40]
  5c:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  60:	mov	x2, x0
  64:	ldr	x0, [sp, #32]
  68:	ldp	x0, x1, [x0]
  6c:	stp	x0, x1, [x2]
  70:	ldr	x19, [sp, #40]
  74:	ldr	x0, [sp, #40]
  78:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  7c:	add	x0, x0, #0x1
  80:	mov	x1, x0
  84:	mov	x0, x19
  88:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  8c:	nop
  90:	ldr	x19, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE5beginEv:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE5beginEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	x0, [x0]
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE3endEv:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE3endEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	ldr	x0, [sp, #40]
  14:	bl	0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE3endEv>
  18:	mov	x19, x0
  1c:	ldr	x0, [sp, #40]
  20:	bl	0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE3endEv>
  24:	lsl	x0, x0, #4
  28:	add	x0, x19, x0
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret

Disassembly of section .text._ZN4llvm6formatIJyEEENS_13format_objectIJDpT_EEEPKcDpRKS2_:

0000000000000000 <_ZN4llvm6formatIJyEEENS_13format_objectIJDpT_EEEPKcDpRKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x8
  10:	str	x0, [sp, #40]
  14:	str	x1, [sp, #32]
  18:	ldr	x2, [sp, #32]
  1c:	ldr	x1, [sp, #40]
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm6formatIJyEEENS_13format_objectIJDpT_EEEPKcDpRKS2_>
  28:	mov	x0, x19
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #48
  34:	ret

Disassembly of section .text._ZNSt14__array_traitsIiLm2EE6_S_refERA2_Kim:

0000000000000000 <_ZNSt14__array_traitsIiLm2EE6_S_refERA2_Kim>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp]
  10:	lsl	x0, x0, #2
  14:	ldr	x1, [sp, #8]
  18:	add	x0, x1, x0
  1c:	add	sp, sp, #0x10
  20:	ret

Disassembly of section .text._ZNSt14__array_traitsIsLm4EE6_S_refERA4_Ksm:

0000000000000000 <_ZNSt14__array_traitsIsLm4EE6_S_refERA4_Ksm>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp]
  10:	lsl	x0, x0, #1
  14:	ldr	x1, [sp, #8]
  18:	add	x0, x1, x0
  1c:	add	sp, sp, #0x10
  20:	ret

Disassembly of section .text._ZNSt14__array_traitsIaLm8EE6_S_refERA8_Kam:

0000000000000000 <_ZNSt14__array_traitsIaLm8EE6_S_refERA8_Kam>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x1, [sp, #8]
  10:	ldr	x0, [sp]
  14:	add	x0, x1, x0
  18:	add	sp, sp, #0x10
  1c:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE4growEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	mov	x2, #0x10                  	// #16
  18:	ldr	x1, [sp, #16]
  1c:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE4growEm>
  20:	nop
  24:	ldp	x29, x30, [sp], #32
  28:	ret

Disassembly of section .text._ZN4llvm13format_objectIJyEEC2EPKcRKy:

0000000000000000 <_ZN4llvm13format_objectIJyEEC1EPKcRKy>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	ldr	x0, [sp, #40]
  18:	ldr	x1, [sp, #32]
  1c:	bl	0 <_ZN4llvm13format_objectIJyEEC1EPKcRKy>
  20:	adrp	x0, 0 <_ZN4llvm13format_objectIJyEEC1EPKcRKy>
  24:	add	x1, x0, #0x0
  28:	ldr	x0, [sp, #40]
  2c:	str	x1, [x0]
  30:	ldr	x0, [sp, #40]
  34:	add	x0, x0, #0x10
  38:	ldr	x1, [sp, #24]
  3c:	bl	0 <_ZN4llvm13format_objectIJyEEC1EPKcRKy>
  40:	add	x0, sp, #0x38
  44:	bl	0 <_ZN4llvm13format_objectIJyEEC1EPKcRKy>
  48:	nop
  4c:	ldp	x29, x30, [sp], #64
  50:	ret

Disassembly of section .text._ZN4llvm9adl_beginIRSt5arrayIiLm2EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_:

0000000000000000 <_ZN4llvm9adl_beginIRSt5arrayIiLm2EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm9adl_beginIRSt5arrayIiLm2EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>
  14:	bl	0 <_ZN4llvm9adl_beginIRSt5arrayIiLm2EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm7adl_endIRSt5arrayIiLm2EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_:

0000000000000000 <_ZN4llvm7adl_endIRSt5arrayIiLm2EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm7adl_endIRSt5arrayIiLm2EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>
  14:	bl	0 <_ZN4llvm7adl_endIRSt5arrayIiLm2EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm9adl_beginIRSt5arrayIsLm4EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_:

0000000000000000 <_ZN4llvm9adl_beginIRSt5arrayIsLm4EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm9adl_beginIRSt5arrayIsLm4EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>
  14:	bl	0 <_ZN4llvm9adl_beginIRSt5arrayIsLm4EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm7adl_endIRSt5arrayIsLm4EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_:

0000000000000000 <_ZN4llvm7adl_endIRSt5arrayIsLm4EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm7adl_endIRSt5arrayIsLm4EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>
  14:	bl	0 <_ZN4llvm7adl_endIRSt5arrayIsLm4EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm9adl_beginIRSt5arrayIaLm8EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_:

0000000000000000 <_ZN4llvm9adl_beginIRSt5arrayIaLm8EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm9adl_beginIRSt5arrayIaLm8EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>
  14:	bl	0 <_ZN4llvm9adl_beginIRSt5arrayIaLm8EEEEDTcl9adl_begincl7forwardIT_Efp_EEEOS4_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm7adl_endIRSt5arrayIaLm8EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_:

0000000000000000 <_ZN4llvm7adl_endIRSt5arrayIaLm8EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm7adl_endIRSt5arrayIaLm8EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>
  14:	bl	0 <_ZN4llvm7adl_endIRSt5arrayIaLm8EEEEDTcl7adl_endcl7forwardIT_Efp_EEEOS4_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE8grow_podEmm:

0000000000000000 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE8grow_podEmm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #56]
  10:	str	x1, [sp, #48]
  14:	str	x2, [sp, #40]
  18:	ldr	x19, [sp, #56]
  1c:	ldr	x0, [sp, #56]
  20:	bl	0 <_ZN4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE8grow_podEmm>
  24:	ldr	x3, [sp, #40]
  28:	ldr	x2, [sp, #48]
  2c:	mov	x1, x0
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  38:	nop
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #64
  44:	ret

Disassembly of section .text._ZNSt5tupleIJyEEC2IvLb1EEERKy:

0000000000000000 <_ZNSt5tupleIJyEEC1IvLb1EEERKy>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [sp, #16]
  18:	bl	0 <_ZNSt5tupleIJyEEC1IvLb1EEERKy>
  1c:	nop
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZN4llvm26validate_format_parametersIJyEEC2Ev:

0000000000000000 <_ZN4llvm26validate_format_parametersIJyEEC1Ev>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	nop
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZSt7forwardIRSt5arrayIiLm2EEEOT_RNSt16remove_referenceIS3_E4typeE:

0000000000000000 <_ZSt7forwardIRSt5arrayIiLm2EEEOT_RNSt16remove_referenceIS3_E4typeE>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZN4llvm10adl_detail9adl_beginIRSt5arrayIiLm2EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_:

0000000000000000 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIiLm2EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIiLm2EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>
  14:	bl	0 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIiLm2EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm10adl_detail7adl_endIRSt5arrayIiLm2EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_:

0000000000000000 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIiLm2EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIiLm2EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>
  14:	bl	0 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIiLm2EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZSt7forwardIRSt5arrayIsLm4EEEOT_RNSt16remove_referenceIS3_E4typeE:

0000000000000000 <_ZSt7forwardIRSt5arrayIsLm4EEEOT_RNSt16remove_referenceIS3_E4typeE>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZN4llvm10adl_detail9adl_beginIRSt5arrayIsLm4EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_:

0000000000000000 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIsLm4EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIsLm4EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>
  14:	bl	0 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIsLm4EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm10adl_detail7adl_endIRSt5arrayIsLm4EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_:

0000000000000000 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIsLm4EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIsLm4EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>
  14:	bl	0 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIsLm4EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZSt7forwardIRSt5arrayIaLm8EEEOT_RNSt16remove_referenceIS3_E4typeE:

0000000000000000 <_ZSt7forwardIRSt5arrayIaLm8EEEOT_RNSt16remove_referenceIS3_E4typeE>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZN4llvm10adl_detail9adl_beginIRSt5arrayIaLm8EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_:

0000000000000000 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIaLm8EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIaLm8EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>
  14:	bl	0 <_ZN4llvm10adl_detail9adl_beginIRSt5arrayIaLm8EEEEDTcl5begincl7forwardIT_Efp_EEEOS5_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZN4llvm10adl_detail7adl_endIRSt5arrayIaLm8EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_:

0000000000000000 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIaLm8EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIaLm8EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>
  14:	bl	0 <_ZN4llvm10adl_detail7adl_endIRSt5arrayIaLm8EEEEDTcl3endcl7forwardIT_Efp_EEEOS5_>
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE10getFirstElEv:

0000000000000000 <_ZNK4llvm25SmallVectorTemplateCommonINS_9MCOperandEvE10getFirstElEv>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	x0, x0, #0x10
  10:	add	sp, sp, #0x10
  14:	ret

Disassembly of section .text._ZNSt11_Tuple_implILm0EJyEEC2ERKy:

0000000000000000 <_ZNSt11_Tuple_implILm0EJyEEC1ERKy>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [sp, #16]
  18:	bl	0 <_ZNSt11_Tuple_implILm0EJyEEC1ERKy>
  1c:	nop
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZSt5beginISt5arrayIiLm2EEEDTcldtfp_5beginEERT_:

0000000000000000 <_ZSt5beginISt5arrayIiLm2EEEDTcldtfp_5beginEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt5beginISt5arrayIiLm2EEEDTcldtfp_5beginEERT_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt3endISt5arrayIiLm2EEEDTcldtfp_3endEERT_:

0000000000000000 <_ZSt3endISt5arrayIiLm2EEEDTcldtfp_3endEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt3endISt5arrayIiLm2EEEDTcldtfp_3endEERT_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt5beginISt5arrayIsLm4EEEDTcldtfp_5beginEERT_:

0000000000000000 <_ZSt5beginISt5arrayIsLm4EEEDTcldtfp_5beginEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt5beginISt5arrayIsLm4EEEDTcldtfp_5beginEERT_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt3endISt5arrayIsLm4EEEDTcldtfp_3endEERT_:

0000000000000000 <_ZSt3endISt5arrayIsLm4EEEDTcldtfp_3endEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt3endISt5arrayIsLm4EEEDTcldtfp_3endEERT_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt5beginISt5arrayIaLm8EEEDTcldtfp_5beginEERT_:

0000000000000000 <_ZSt5beginISt5arrayIaLm8EEEDTcldtfp_5beginEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt5beginISt5arrayIaLm8EEEDTcldtfp_5beginEERT_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt3endISt5arrayIaLm8EEEDTcldtfp_3endEERT_:

0000000000000000 <_ZSt3endISt5arrayIaLm8EEEDTcldtfp_3endEERT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt3endISt5arrayIaLm8EEEDTcldtfp_3endEERT_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt10_Head_baseILm0EyLb0EEC2ERKy:

0000000000000000 <_ZNSt10_Head_baseILm0EyLb0EEC1ERKy>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp]
  10:	ldr	x1, [x0]
  14:	ldr	x0, [sp, #8]
  18:	str	x1, [x0]
  1c:	nop
  20:	add	sp, sp, #0x10
  24:	ret

Disassembly of section .text._ZNSt5arrayIiLm2EE5beginEv:

0000000000000000 <_ZNSt5arrayIiLm2EE5beginEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIiLm2EE5beginEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt5arrayIiLm2EE3endEv:

0000000000000000 <_ZNSt5arrayIiLm2EE3endEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIiLm2EE3endEv>
  14:	add	x0, x0, #0x8
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_:

0000000000000000 <_ZSt19__iterator_categoryIPiENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	mov	w0, w1
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt5arrayIsLm4EE5beginEv:

0000000000000000 <_ZNSt5arrayIsLm4EE5beginEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIsLm4EE5beginEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt5arrayIsLm4EE3endEv:

0000000000000000 <_ZNSt5arrayIsLm4EE3endEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIsLm4EE3endEv>
  14:	add	x0, x0, #0x8
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZSt19__iterator_categoryIPsENSt15iterator_traitsIT_E17iterator_categoryERKS2_:

0000000000000000 <_ZSt19__iterator_categoryIPsENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	mov	w0, w1
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt5arrayIaLm8EE5beginEv:

0000000000000000 <_ZNSt5arrayIaLm8EE5beginEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIaLm8EE5beginEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt5arrayIaLm8EE3endEv:

0000000000000000 <_ZNSt5arrayIaLm8EE3endEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIaLm8EE3endEv>
  14:	add	x0, x0, #0x8
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

Disassembly of section .text._ZSt19__iterator_categoryIPaENSt15iterator_traitsIT_E17iterator_categoryERKS2_:

0000000000000000 <_ZSt19__iterator_categoryIPaENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	mov	w0, w1
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt5arrayIiLm2EE4dataEv:

0000000000000000 <_ZNSt5arrayIiLm2EE4dataEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIiLm2EE4dataEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt5arrayIsLm4EE4dataEv:

0000000000000000 <_ZNSt5arrayIsLm4EE4dataEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIsLm4EE4dataEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt5arrayIaLm8EE4dataEv:

0000000000000000 <_ZNSt5arrayIaLm8EE4dataEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt5arrayIaLm8EE4dataEv>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt14__array_traitsIiLm2EE6_S_ptrERA2_Ki:

0000000000000000 <_ZNSt14__array_traitsIiLm2EE6_S_ptrERA2_Ki>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt14__array_traitsIsLm4EE6_S_ptrERA4_Ks:

0000000000000000 <_ZNSt14__array_traitsIsLm4EE6_S_ptrERA4_Ks>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZNSt14__array_traitsIaLm8EE6_S_ptrERA8_Ka:

0000000000000000 <_ZNSt14__array_traitsIaLm8EE6_S_ptrERA8_Ka>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret

Disassembly of section .text._ZN4llvm25AArch64ExternalSymbolizerD2Ev:

0000000000000000 <_ZN4llvm25AArch64ExternalSymbolizerD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	adrp	x0, 0 <_ZN4llvm25AArch64ExternalSymbolizerD1Ev>
  10:	add	x1, x0, #0x0
  14:	ldr	x0, [sp, #24]
  18:	str	x1, [x0]
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <_ZN4llvm25AArch64ExternalSymbolizerD1Ev>
  24:	nop
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN4llvm25AArch64ExternalSymbolizerD0Ev:

0000000000000000 <_ZN4llvm25AArch64ExternalSymbolizerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZN4llvm25AArch64ExternalSymbolizerD0Ev>
  14:	mov	x1, #0x30                  	// #48
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <_ZdlPvm>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJyEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJyEE7snprintEPcj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	w2, [sp, #28]
  14:	ldr	w2, [sp, #28]
  18:	ldr	x1, [sp, #32]
  1c:	ldr	x0, [sp, #40]
  20:	bl	0 <_ZNK4llvm13format_objectIJyEE7snprintEPcj>
  24:	ldp	x29, x30, [sp], #64
  28:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJyEE13snprint_tupleIJLm0EEEEiPcjSt16integer_sequenceImJXspT_EEE:

0000000000000000 <_ZNK4llvm13format_objectIJyEE13snprint_tupleIJLm0EEEEiPcjSt16integer_sequenceImJXspT_EEE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x0, [sp, #56]
  10:	str	x1, [sp, #48]
  14:	str	w2, [sp, #44]
  18:	strb	w3, [sp, #40]
  1c:	ldr	w19, [sp, #44]
  20:	ldr	x0, [sp, #56]
  24:	ldr	x20, [x0, #8]
  28:	ldr	x0, [sp, #56]
  2c:	add	x0, x0, #0x10
  30:	bl	0 <_ZNK4llvm13format_objectIJyEE13snprint_tupleIJLm0EEEEiPcjSt16integer_sequenceImJXspT_EEE>
  34:	ldr	x0, [x0]
  38:	mov	x3, x0
  3c:	mov	x2, x20
  40:	mov	x1, x19
  44:	ldr	x0, [sp, #48]
  48:	bl	0 <snprintf>
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x29, x30, [sp], #64
  54:	ret

Disassembly of section .text._ZSt3getILm0EJyEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_:

0000000000000000 <_ZSt3getILm0EJyEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt3getILm0EJyEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS4_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZSt12__get_helperILm0EyJEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE:

0000000000000000 <_ZSt12__get_helperILm0EyJEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZSt12__get_helperILm0EyJEERKT0_RKSt11_Tuple_implIXT_EJS0_DpT1_EE>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt11_Tuple_implILm0EJyEE7_M_headERKS0_:

0000000000000000 <_ZNSt11_Tuple_implILm0EJyEE7_M_headERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <_ZNSt11_Tuple_implILm0EJyEE7_M_headERKS0_>
  14:	ldp	x29, x30, [sp], #32
  18:	ret

Disassembly of section .text._ZNSt10_Head_baseILm0EyLb0EE7_M_headERKS0_:

0000000000000000 <_ZNSt10_Head_baseILm0EyLb0EE7_M_headERKS0_>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	add	sp, sp, #0x10
  10:	ret
