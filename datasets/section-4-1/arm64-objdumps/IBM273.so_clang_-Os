
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//IBM273.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 11000 <gconv@@Base+0x10728>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xf0>:
     760:	adrp	x0, 11000 <gconv@@Base+0x10728>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 12000 <gconv@@Base+0x11728>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 12000 <gconv@@Base+0x11728>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 11000 <gconv@@Base+0x10728>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 12000 <gconv@@Base+0x11728>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 12000 <gconv@@Base+0x11728>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 11000 <gconv@@Base+0x10728>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 12000 <gconv@@Base+0x11728>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 11000 <gconv@@Base+0x10728>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 12000 <gconv@@Base+0x11728>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	x1, x1, #0xff
     83c:	adrp	x0, 1000 <gconv@@Base+0x728>
     840:	add	x0, x0, #0x640
     844:	ldr	w0, [x0, x1, lsl #2]
     848:	ret
     84c:	nop

0000000000000850 <gconv_init@@Base>:
     850:	stp	x29, x30, [sp, #-32]!
     854:	mov	x29, sp
     858:	stp	x19, x20, [sp, #16]
     85c:	mov	x19, x0
     860:	adrp	x20, 1000 <gconv@@Base+0x728>
     864:	ldr	x0, [x0, #24]
     868:	add	x20, x20, #0x4b0
     86c:	mov	x1, x20
     870:	bl	730 <strcmp@plt>
     874:	cbnz	w0, 8a8 <gconv_init@@Base+0x58>
     878:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     87c:	mov	x2, #0x100000001           	// #4294967297
     880:	add	x0, x0, #0x838
     884:	mov	x1, #0x400000004           	// #17179869188
     888:	str	x0, [x19, #48]
     88c:	stp	x2, x1, [x19, #72]
     890:	str	xzr, [x19, #96]
     894:	mov	w0, #0x0                   	// #0
     898:	str	wzr, [x19, #88]
     89c:	ldp	x19, x20, [sp, #16]
     8a0:	ldp	x29, x30, [sp], #32
     8a4:	ret
     8a8:	ldr	x0, [x19, #32]
     8ac:	mov	x1, x20
     8b0:	bl	730 <strcmp@plt>
     8b4:	cbnz	w0, 8d0 <gconv_init@@Base+0x80>
     8b8:	mov	x0, #0xffffffffffffffff    	// #-1
     8bc:	mov	x2, #0x400000004           	// #17179869188
     8c0:	mov	x1, #0x100000001           	// #4294967297
     8c4:	stp	x2, x1, [x19, #72]
     8c8:	str	x0, [x19, #96]
     8cc:	b	894 <gconv_init@@Base+0x44>
     8d0:	mov	w0, #0x1                   	// #1
     8d4:	b	89c <gconv_init@@Base+0x4c>

00000000000008d8 <gconv@@Base>:
     8d8:	stp	x29, x30, [sp, #-240]!
     8dc:	mov	x8, x0
     8e0:	mov	x12, x2
     8e4:	mov	x29, sp
     8e8:	stp	x21, x22, [sp, #32]
     8ec:	mov	x21, x1
     8f0:	adrp	x1, 11000 <gconv@@Base+0x10728>
     8f4:	stp	x25, x26, [sp, #64]
     8f8:	mov	x18, x4
     8fc:	ldr	w25, [x21, #16]
     900:	ldr	x1, [x1, #4056]
     904:	stp	x19, x20, [sp, #16]
     908:	mov	x26, x5
     90c:	ldr	x0, [x1]
     910:	str	x0, [sp, #232]
     914:	mov	x0, #0x0                   	// #0
     918:	add	x1, x8, #0x68
     91c:	add	x0, x21, #0x30
     920:	stp	x23, x24, [sp, #48]
     924:	mov	x20, x3
     928:	stp	x1, x0, [sp, #136]
     92c:	mov	x23, #0x0                   	// #0
     930:	str	w7, [sp, #168]
     934:	tbnz	w25, #0, 954 <gconv@@Base+0x7c>
     938:	ldr	x0, [x8, #104]
     93c:	ldr	x23, [x8, #144]
     940:	cbz	x0, 954 <gconv@@Base+0x7c>
     944:	adrp	x0, 11000 <gconv@@Base+0x10728>
     948:	ldr	x0, [x0, #4040]
     94c:	ldr	x0, [x0]
     950:	eor	x23, x23, x0
     954:	cbnz	w6, f38 <gconv@@Base+0x660>
     958:	cmp	x18, #0x0
     95c:	add	x24, sp, #0xc0
     960:	csel	x1, x21, x18, eq  // eq = none
     964:	cmp	x26, #0x0
     968:	csel	x2, x24, xzr, ne  // ne = any
     96c:	stp	x27, x28, [sp, #80]
     970:	mov	x14, #0x0                   	// #0
     974:	ldr	x28, [x1]
     978:	str	x2, [sp, #152]
     97c:	ldr	w2, [sp, #168]
     980:	ldr	x0, [x8, #96]
     984:	cmp	w2, #0x0
     988:	cset	w1, ne  // ne = any
     98c:	str	w1, [sp, #172]
     990:	str	xzr, [sp, #192]
     994:	cmp	x0, #0x0
     998:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     99c:	ldr	x22, [x12]
     9a0:	ldr	x27, [x21, #8]
     9a4:	b.ne	ce4 <gconv@@Base+0x40c>  // b.any
     9a8:	add	x1, sp, #0xd8
     9ac:	adrp	x13, 1000 <gconv@@Base+0x728>
     9b0:	add	x25, x13, #0x640
     9b4:	mov	x24, x28
     9b8:	mov	x28, x12
     9bc:	stp	x8, x18, [sp, #120]
     9c0:	mov	x18, x25
     9c4:	str	x1, [sp, #160]
     9c8:	add	x1, x25, #0x400
     9cc:	mov	x25, x23
     9d0:	mov	x23, x21
     9d4:	mov	x21, x27
     9d8:	mov	x27, x26
     9dc:	mov	x26, x22
     9e0:	mov	x22, x14
     9e4:	str	x1, [sp, #96]
     9e8:	cbz	x27, 9f4 <gconv@@Base+0x11c>
     9ec:	ldr	x1, [x27]
     9f0:	add	x22, x22, x1
     9f4:	cbz	x0, b44 <gconv@@Base+0x26c>
     9f8:	stp	x26, x24, [sp, #208]
     9fc:	mov	x19, x24
     a00:	ldr	w7, [x23, #16]
     a04:	cmp	x20, x26
     a08:	b.eq	fd8 <gconv@@Base+0x700>  // b.none
     a0c:	mov	x0, x26
     a10:	add	x3, sp, #0xd0
     a14:	mov	w13, #0x4                   	// #4
     a18:	add	x6, x0, #0x4
     a1c:	cmp	x20, x6
     a20:	b.cc	bec <gconv@@Base+0x314>  // b.lo, b.ul, b.last
     a24:	cmp	x21, x19
     a28:	b.ls	bf8 <gconv@@Base+0x320>  // b.plast
     a2c:	ldr	w2, [x0]
     a30:	mov	w5, #0xfffe                	// #65534
     a34:	cmp	w2, w5
     a38:	b.hi	b18 <gconv@@Base+0x240>  // b.pmore
     a3c:	cmp	w2, #0xff
     a40:	b.ls	a4c <gconv@@Base+0x174>  // b.plast
     a44:	cmp	w2, w5
     a48:	b.ls	b24 <gconv@@Base+0x24c>  // b.plast
     a4c:	ldr	x0, [sp, #96]
     a50:	ldrb	w5, [x0, w2, uxtw]
     a54:	cmp	w5, #0x0
     a58:	ccmp	w2, #0x0, #0x4, eq  // eq = none
     a5c:	b.ne	b24 <gconv@@Base+0x24c>  // b.any
     a60:	add	x2, x19, #0x1
     a64:	str	x2, [sp, #216]
     a68:	strb	w5, [x19]
     a6c:	ldp	x0, x19, [sp, #208]
     a70:	add	x0, x0, #0x4
     a74:	str	x0, [sp, #208]
     a78:	cmp	x20, x0
     a7c:	b.ne	a18 <gconv@@Base+0x140>  // b.any
     a80:	str	x0, [x28]
     a84:	ldr	x0, [sp, #128]
     a88:	cbnz	x0, b94 <gconv@@Base+0x2bc>
     a8c:	ldp	w1, w0, [x23, #16]
     a90:	add	w0, w0, #0x1
     a94:	str	w0, [x23, #20]
     a98:	tbnz	w1, #0, c84 <gconv@@Base+0x3ac>
     a9c:	cmp	x24, x19
     aa0:	b.cs	cd4 <gconv@@Base+0x3fc>  // b.hs, b.nlast
     aa4:	ldr	x1, [x23]
     aa8:	mov	x0, x25
     aac:	str	x18, [sp, #104]
     ab0:	str	w13, [sp, #112]
     ab4:	str	x1, [sp, #200]
     ab8:	bl	740 <_dl_mcount_wrapper_check@plt>
     abc:	ldp	x0, x1, [sp, #136]
     ac0:	mov	x5, x27
     ac4:	ldr	w7, [sp, #168]
     ac8:	mov	x3, x19
     acc:	add	x2, sp, #0xc8
     ad0:	mov	w6, #0x0                   	// #0
     ad4:	mov	x4, #0x0                   	// #0
     ad8:	blr	x25
     adc:	mov	w7, w0
     ae0:	ldr	w13, [sp, #112]
     ae4:	cmp	w0, #0x4
     ae8:	ldr	x18, [sp, #104]
     aec:	b.eq	bd4 <gconv@@Base+0x2fc>  // b.none
     af0:	ldr	x13, [sp, #200]
     af4:	cmp	x13, x19
     af8:	b.ne	e18 <gconv@@Base+0x540>  // b.any
     afc:	ldr	x0, [sp, #120]
     b00:	ldr	x0, [x0, #96]
     b04:	cbnz	w7, f84 <gconv@@Base+0x6ac>
     b08:	ldr	x24, [x23]
     b0c:	ldr	x26, [x28]
     b10:	ldr	x22, [sp, #192]
     b14:	b	9e8 <gconv@@Base+0x110>
     b18:	mov	w0, #0x1c00                	// #7168
     b1c:	cmp	w0, w2, lsr #7
     b20:	b.eq	f1c <gconv@@Base+0x644>  // b.none
     b24:	ldr	x0, [sp, #152]
     b28:	cbz	x0, 116c <gconv@@Base+0x894>
     b2c:	ldr	w0, [x23, #16]
     b30:	tbnz	w0, #3, c04 <gconv@@Base+0x32c>
     b34:	ldr	x0, [sp, #208]
     b38:	tbnz	w7, #1, c64 <gconv@@Base+0x38c>
     b3c:	mov	w13, #0x6                   	// #6
     b40:	b	a80 <gconv@@Base+0x1a8>
     b44:	cmp	x20, x26
     b48:	b.eq	c50 <gconv@@Base+0x378>  // b.none
     b4c:	add	x0, x24, #0x4
     b50:	mov	x1, x26
     b54:	cmp	x0, x21
     b58:	b.hi	f28 <gconv@@Base+0x650>  // b.pmore
     b5c:	nop
     b60:	ldrb	w2, [x1], #1
     b64:	mov	x19, x0
     b68:	cmp	x20, x1
     b6c:	ldr	w0, [x18, x2, lsl #2]
     b70:	stur	w0, [x19, #-4]
     b74:	b.eq	c58 <gconv@@Base+0x380>  // b.none
     b78:	add	x0, x19, #0x4
     b7c:	cmp	x21, x0
     b80:	b.cs	b60 <gconv@@Base+0x288>  // b.hs, b.nlast
     b84:	mov	w13, #0x5                   	// #5
     b88:	str	x1, [x28]
     b8c:	ldr	x0, [sp, #128]
     b90:	cbz	x0, a8c <gconv@@Base+0x1b4>
     b94:	mov	w24, w13
     b98:	ldp	x27, x28, [sp, #80]
     b9c:	str	x19, [x0]
     ba0:	adrp	x0, 11000 <gconv@@Base+0x10728>
     ba4:	ldr	x0, [x0, #4056]
     ba8:	ldr	x1, [sp, #232]
     bac:	ldr	x0, [x0]
     bb0:	eor	x0, x1, x0
     bb4:	cbnz	x0, 13f0 <gconv@@Base+0xb18>
     bb8:	mov	w0, w24
     bbc:	ldp	x19, x20, [sp, #16]
     bc0:	ldp	x21, x22, [sp, #32]
     bc4:	ldp	x23, x24, [sp, #48]
     bc8:	ldp	x25, x26, [sp, #64]
     bcc:	ldp	x29, x30, [sp], #240
     bd0:	ret
     bd4:	cmp	w13, #0x5
     bd8:	b.eq	cc8 <gconv@@Base+0x3f0>  // b.none
     bdc:	ldr	x0, [sp, #120]
     be0:	mov	w7, w13
     be4:	ldr	x0, [x0, #96]
     be8:	b	b04 <gconv@@Base+0x22c>
     bec:	mov	w13, #0x7                   	// #7
     bf0:	ldr	x0, [sp, #208]
     bf4:	b	a80 <gconv@@Base+0x1a8>
     bf8:	mov	w13, #0x5                   	// #5
     bfc:	ldr	x0, [sp, #208]
     c00:	b	a80 <gconv@@Base+0x1a8>
     c04:	ldp	x6, x5, [sp, #152]
     c08:	mov	x4, x20
     c0c:	ldr	x2, [x28]
     c10:	mov	x1, x23
     c14:	ldr	x0, [sp, #120]
     c18:	str	x3, [sp, #104]
     c1c:	str	w7, [sp, #112]
     c20:	str	x18, [sp, #176]
     c24:	bl	700 <__gconv_transliterate@plt>
     c28:	mov	w13, w0
     c2c:	ldr	w7, [sp, #112]
     c30:	cmp	w0, #0x6
     c34:	ldr	x3, [sp, #104]
     c38:	ldr	x18, [sp, #176]
     c3c:	b.eq	f14 <gconv@@Base+0x63c>  // b.none
     c40:	cmp	w0, #0x5
     c44:	ldp	x0, x19, [sp, #208]
     c48:	b.ne	a78 <gconv@@Base+0x1a0>  // b.any
     c4c:	b	a80 <gconv@@Base+0x1a8>
     c50:	mov	x1, x20
     c54:	mov	x19, x24
     c58:	mov	w13, #0x4                   	// #4
     c5c:	str	x1, [x28]
     c60:	b	b8c <gconv@@Base+0x2b4>
     c64:	ldr	x2, [sp, #152]
     c68:	add	x0, x0, #0x4
     c6c:	mov	w13, #0x6                   	// #6
     c70:	str	x0, [sp, #208]
     c74:	ldr	x1, [x2]
     c78:	add	x1, x1, #0x1
     c7c:	str	x1, [x2]
     c80:	b	a78 <gconv@@Base+0x1a0>
     c84:	ldr	x8, [sp, #120]
     c88:	mov	w24, w13
     c8c:	ldr	x1, [x27]
     c90:	mov	x21, x23
     c94:	ldr	x2, [sp, #192]
     c98:	mov	x12, x28
     c9c:	ldr	x0, [x8, #96]
     ca0:	str	x19, [x23]
     ca4:	add	x1, x1, x2
     ca8:	str	x1, [x27]
     cac:	cmp	x0, #0x0
     cb0:	ldr	w0, [sp, #172]
     cb4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     cb8:	ccmp	w24, #0x7, #0x0, ne  // ne = any
     cbc:	b.eq	10a4 <gconv@@Base+0x7cc>  // b.none
     cc0:	ldp	x27, x28, [sp, #80]
     cc4:	b	ba0 <gconv@@Base+0x2c8>
     cc8:	ldr	x0, [sp, #120]
     ccc:	ldr	x0, [x0, #96]
     cd0:	b	b08 <gconv@@Base+0x230>
     cd4:	ldr	x0, [sp, #120]
     cd8:	mov	w7, w13
     cdc:	ldr	x0, [x0, #96]
     ce0:	b	b04 <gconv@@Base+0x22c>
     ce4:	ldr	x7, [x21, #32]
     ce8:	ldr	w3, [x7]
     cec:	ands	w4, w3, #0x7
     cf0:	b.eq	9a8 <gconv@@Base+0xd0>  // b.none
     cf4:	cbnz	x18, 13c8 <gconv@@Base+0xaf0>
     cf8:	stp	x22, x28, [sp, #208]
     cfc:	cmp	w4, #0x4
     d00:	b.hi	13a8 <gconv@@Base+0xad0>  // b.pmore
     d04:	mov	w19, w4
     d08:	cbz	w4, 1184 <gconv@@Base+0x8ac>
     d0c:	add	x6, x7, #0x3
     d10:	add	x13, sp, #0xe0
     d14:	mov	x0, #0x1                   	// #1
     d18:	add	x1, x13, x0
     d1c:	ldrb	w5, [x6, x0]
     d20:	cmp	x0, x19
     d24:	add	x0, x0, #0x1
     d28:	sturb	w5, [x1, #-1]
     d2c:	b.ne	d18 <gconv@@Base+0x440>  // b.any
     d30:	mov	x0, #0x4                   	// #4
     d34:	sub	x0, x0, x19
     d38:	add	x0, x22, x0
     d3c:	cmp	x20, x0
     d40:	b.cc	1238 <gconv@@Base+0x960>  // b.lo, b.ul, b.last
     d44:	add	x0, x22, #0x1
     d48:	add	x13, sp, #0xe0
     d4c:	cmp	x28, x27
     d50:	b.cs	1178 <gconv@@Base+0x8a0>  // b.hs, b.nlast
     d54:	add	x19, x19, #0x1
     d58:	str	x0, [sp, #208]
     d5c:	add	x1, x13, x19
     d60:	cmp	x19, #0x3
     d64:	ldurb	w2, [x0, #-1]
     d68:	ccmp	x20, x0, #0x0, ls  // ls = plast
     d6c:	add	x0, x0, #0x1
     d70:	sturb	w2, [x1, #-1]
     d74:	b.hi	d54 <gconv@@Base+0x47c>  // b.pmore
     d78:	ldr	w0, [sp, #224]
     d7c:	mov	w1, #0xfffe                	// #65534
     d80:	str	x13, [sp, #208]
     d84:	cmp	w0, w1
     d88:	b.hi	1270 <gconv@@Base+0x998>  // b.pmore
     d8c:	cmp	w0, #0xff
     d90:	b.ls	d9c <gconv@@Base+0x4c4>  // b.plast
     d94:	cmp	w0, w1
     d98:	b.ls	11e0 <gconv@@Base+0x908>  // b.plast
     d9c:	adrp	x1, 1000 <gconv@@Base+0x728>
     da0:	add	x1, x1, #0x640
     da4:	add	x1, x1, #0x400
     da8:	ldrb	w1, [x1, w0, uxtw]
     dac:	cmp	w1, #0x0
     db0:	ccmp	w0, #0x0, #0x4, eq  // eq = none
     db4:	b.ne	11e0 <gconv@@Base+0x908>  // b.any
     db8:	add	x0, x28, #0x1
     dbc:	str	x0, [sp, #216]
     dc0:	strb	w1, [x28]
     dc4:	ldr	x0, [sp, #208]
     dc8:	add	x0, x0, #0x4
     dcc:	str	x0, [sp, #208]
     dd0:	cmp	x0, x13
     dd4:	b.eq	11d0 <gconv@@Base+0x8f8>  // b.none
     dd8:	ldr	w3, [x7]
     ddc:	sub	x13, x0, x13
     de0:	and	w4, w3, #0x7
     de4:	mov	w4, w4
     de8:	cmp	x4, x13
     dec:	b.ge	1480 <gconv@@Base+0xba8>  // b.tcont
     df0:	ldr	x22, [x12]
     df4:	sub	x13, x13, x4
     df8:	and	w3, w3, #0xfffffff8
     dfc:	add	x22, x22, x13
     e00:	str	x22, [x12]
     e04:	ldr	x14, [sp, #192]
     e08:	ldr	x0, [x8, #96]
     e0c:	ldr	x28, [sp, #216]
     e10:	str	w3, [x7]
     e14:	b	9a8 <gconv@@Base+0xd0>
     e18:	mov	x0, #0x0                   	// #0
     e1c:	cbz	x27, e24 <gconv@@Base+0x54c>
     e20:	ldr	x0, [x27]
     e24:	ldr	x1, [sp, #192]
     e28:	add	x0, x0, x1
     e2c:	cmp	x0, x22
     e30:	b.eq	fe4 <gconv@@Base+0x70c>  // b.none
     e34:	ldr	x0, [sp, #120]
     e38:	str	x26, [x28]
     e3c:	ldr	x0, [x0, #96]
     e40:	cbz	x0, 10f8 <gconv@@Base+0x820>
     e44:	stp	x26, x24, [sp, #208]
     e48:	cmp	x20, x26
     e4c:	ldr	w19, [x23, #16]
     e50:	b.eq	1370 <gconv@@Base+0xa98>  // b.none
     e54:	add	x22, sp, #0xd0
     e58:	mov	x0, x24
     e5c:	mov	x3, x22
     e60:	stp	x21, x27, [sp, #104]
     e64:	mov	x27, x25
     e68:	ldr	x22, [sp, #152]
     e6c:	mov	x25, x24
     e70:	mov	w21, w7
     e74:	mov	w24, w19
     e78:	mov	x19, x13
     e7c:	mov	x2, #0x4                   	// #4
     e80:	add	x8, x26, #0x4
     e84:	cmp	x20, x8
     e88:	b.cc	113c <gconv@@Base+0x864>  // b.lo, b.ul, b.last
     e8c:	cmp	x19, x0
     e90:	b.ls	1190 <gconv@@Base+0x8b8>  // b.plast
     e94:	ldr	w5, [x26]
     e98:	mov	w9, #0xfffe                	// #65534
     e9c:	cmp	w5, w9
     ea0:	b.hi	11b4 <gconv@@Base+0x8dc>  // b.pmore
     ea4:	cmp	w5, #0xff
     ea8:	b.ls	eb4 <gconv@@Base+0x5dc>  // b.plast
     eac:	cmp	w5, w9
     eb0:	b.ls	f94 <gconv@@Base+0x6bc>  // b.plast
     eb4:	ldr	x1, [sp, #96]
     eb8:	ldrb	w1, [x1, w5, uxtw]
     ebc:	cmp	w1, #0x0
     ec0:	ccmp	w5, #0x0, #0x4, eq  // eq = none
     ec4:	b.ne	f94 <gconv@@Base+0x6bc>  // b.any
     ec8:	add	x4, x0, #0x1
     ecc:	str	x4, [sp, #216]
     ed0:	strb	w1, [x0]
     ed4:	ldp	x26, x0, [sp, #208]
     ed8:	add	x26, x26, #0x4
     edc:	str	x26, [sp, #208]
     ee0:	cmp	x20, x26
     ee4:	b.ne	e80 <gconv@@Base+0x5a8>  // b.any
     ee8:	mov	x24, x25
     eec:	mov	w7, w21
     ef0:	mov	x25, x27
     ef4:	str	x20, [x28]
     ef8:	ldp	x21, x27, [sp, #104]
     efc:	ldr	x13, [sp, #200]
     f00:	cmp	x0, x13
     f04:	b.ne	114c <gconv@@Base+0x874>  // b.any
     f08:	cmp	x2, #0x5
     f0c:	b.eq	1084 <gconv@@Base+0x7ac>  // b.none
     f10:	b	fb8 <gconv@@Base+0x6e0>
     f14:	ldr	x19, [sp, #216]
     f18:	b	b34 <gconv@@Base+0x25c>
     f1c:	mov	x0, x6
     f20:	str	x6, [sp, #208]
     f24:	b	a78 <gconv@@Base+0x1a0>
     f28:	mov	x19, x24
     f2c:	mov	w13, #0x5                   	// #5
     f30:	str	x1, [x28]
     f34:	b	b8c <gconv@@Base+0x2b4>
     f38:	cbnz	x18, 1384 <gconv@@Base+0xaac>
     f3c:	ldr	x0, [x21, #32]
     f40:	mov	w24, #0x0                   	// #0
     f44:	str	xzr, [x0]
     f48:	ldr	w0, [x21, #16]
     f4c:	tbnz	w0, #0, ba0 <gconv@@Base+0x2c8>
     f50:	mov	x0, x23
     f54:	str	w6, [sp, #96]
     f58:	bl	740 <_dl_mcount_wrapper_check@plt>
     f5c:	ldp	x0, x1, [sp, #136]
     f60:	mov	x5, x26
     f64:	ldr	w6, [sp, #96]
     f68:	mov	x4, #0x0                   	// #0
     f6c:	ldr	w7, [sp, #168]
     f70:	mov	x3, #0x0                   	// #0
     f74:	mov	x2, #0x0                   	// #0
     f78:	blr	x23
     f7c:	mov	w24, w0
     f80:	b	ba0 <gconv@@Base+0x2c8>
     f84:	mov	x21, x23
     f88:	mov	x12, x28
     f8c:	mov	w24, w7
     f90:	b	cac <gconv@@Base+0x3d4>
     f94:	cbz	x22, 113c <gconv@@Base+0x864>
     f98:	ldr	w1, [x23, #16]
     f9c:	tbnz	w1, #3, 1028 <gconv@@Base+0x750>
     fa0:	ldr	x9, [sp, #208]
     fa4:	tbnz	w24, #1, 100c <gconv@@Base+0x734>
     fa8:	ldr	x1, [sp, #200]
     fac:	str	x9, [x28]
     fb0:	cmp	x0, x1
     fb4:	b.ne	114c <gconv@@Base+0x874>  // b.any
     fb8:	adrp	x3, 1000 <gconv@@Base+0x728>
     fbc:	adrp	x1, 1000 <gconv@@Base+0x728>
     fc0:	adrp	x0, 1000 <gconv@@Base+0x728>
     fc4:	add	x3, x3, #0x638
     fc8:	add	x1, x1, #0x4c0
     fcc:	add	x0, x0, #0x5f0
     fd0:	mov	w2, #0x2eb                 	// #747
     fd4:	bl	750 <__assert_fail@plt>
     fd8:	mov	x0, x20
     fdc:	mov	w13, #0x4                   	// #4
     fe0:	b	a80 <gconv@@Base+0x1a8>
     fe4:	ldr	x0, [sp, #120]
     fe8:	sub	x13, x19, x13
     fec:	ldr	x1, [x28]
     ff0:	ldr	x0, [x0, #96]
     ff4:	cbz	x0, 1220 <gconv@@Base+0x948>
     ff8:	ldr	x0, [sp, #120]
     ffc:	sub	x13, x1, x13, lsl #2
    1000:	str	x13, [x28]
    1004:	ldr	x0, [x0, #96]
    1008:	b	b04 <gconv@@Base+0x22c>
    100c:	ldr	x1, [x22]
    1010:	add	x26, x9, #0x4
    1014:	mov	x2, #0x6                   	// #6
    1018:	str	x26, [sp, #208]
    101c:	add	x1, x1, #0x1
    1020:	str	x1, [x22]
    1024:	b	ee0 <gconv@@Base+0x608>
    1028:	ldr	x2, [x28]
    102c:	mov	x6, x22
    1030:	ldr	x0, [sp, #120]
    1034:	mov	x4, x20
    1038:	ldr	x5, [sp, #160]
    103c:	mov	x1, x23
    1040:	stp	x3, x18, [sp, #176]
    1044:	bl	700 <__gconv_transliterate@plt>
    1048:	sxtw	x2, w0
    104c:	cmp	w2, #0x6
    1050:	ldp	x3, x18, [sp, #176]
    1054:	b.eq	137c <gconv@@Base+0xaa4>  // b.none
    1058:	cmp	w2, #0x5
    105c:	ldp	x26, x0, [sp, #208]
    1060:	b.ne	ee0 <gconv@@Base+0x608>  // b.any
    1064:	ldr	x1, [sp, #200]
    1068:	str	x26, [x28]
    106c:	mov	x24, x25
    1070:	mov	w7, w21
    1074:	mov	x25, x27
    1078:	cmp	x1, x0
    107c:	ldp	x21, x27, [sp, #104]
    1080:	b.ne	114c <gconv@@Base+0x874>  // b.any
    1084:	cmp	x24, x0
    1088:	ldr	x0, [sp, #120]
    108c:	ldr	x0, [x0, #96]
    1090:	b.ne	b04 <gconv@@Base+0x22c>  // b.any
    1094:	ldr	w1, [x23, #20]
    1098:	sub	w1, w1, #0x1
    109c:	str	w1, [x23, #20]
    10a0:	b	b04 <gconv@@Base+0x22c>
    10a4:	ldr	x0, [x12]
    10a8:	sub	x1, x20, x0
    10ac:	cmp	x1, #0x3
    10b0:	b.gt	1460 <gconv@@Base+0xb88>
    10b4:	ldr	x2, [x21, #32]
    10b8:	cmp	x0, x20
    10bc:	add	x0, x0, #0x1
    10c0:	add	x3, x2, #0x4
    10c4:	b.cs	13e8 <gconv@@Base+0xb10>  // b.hs, b.nlast
    10c8:	str	x0, [x12]
    10cc:	cmp	x20, x0
    10d0:	add	x0, x0, #0x1
    10d4:	ldurb	w4, [x0, #-2]
    10d8:	strb	w4, [x3], #1
    10dc:	b.ne	10c8 <gconv@@Base+0x7f0>  // b.any
    10e0:	ldr	w0, [x2]
    10e4:	ldp	x27, x28, [sp, #80]
    10e8:	and	w0, w0, #0xfffffff8
    10ec:	orr	w0, w0, w1
    10f0:	str	w0, [x2]
    10f4:	b	ba0 <gconv@@Base+0x2c8>
    10f8:	cmp	x20, x26
    10fc:	b.eq	1370 <gconv@@Base+0xa98>  // b.none
    1100:	add	x1, x24, #0x4
    1104:	cmp	x1, x13
    1108:	b.hi	1364 <gconv@@Base+0xa8c>  // b.pmore
    110c:	ldrb	w2, [x26], #1
    1110:	mov	x0, x1
    1114:	cmp	x20, x26
    1118:	ldr	w1, [x18, x2, lsl #2]
    111c:	stur	w1, [x0, #-4]
    1120:	b.eq	128c <gconv@@Base+0x9b4>  // b.none
    1124:	add	x1, x0, #0x4
    1128:	cmp	x13, x1
    112c:	b.cs	110c <gconv@@Base+0x834>  // b.hs, b.nlast
    1130:	mov	x2, #0x5                   	// #5
    1134:	str	x26, [x28]
    1138:	b	f00 <gconv@@Base+0x628>
    113c:	ldp	x1, x2, [sp, #200]
    1140:	str	x2, [x28]
    1144:	cmp	x0, x1
    1148:	b.eq	fb8 <gconv@@Base+0x6e0>  // b.none
    114c:	adrp	x3, 1000 <gconv@@Base+0x728>
    1150:	adrp	x1, 1000 <gconv@@Base+0x728>
    1154:	adrp	x0, 1000 <gconv@@Base+0x728>
    1158:	add	x3, x3, #0x638
    115c:	add	x1, x1, #0x4c0
    1160:	add	x0, x0, #0x5d8
    1164:	mov	w2, #0x2ea                 	// #746
    1168:	bl	750 <__assert_fail@plt>
    116c:	mov	w13, #0x6                   	// #6
    1170:	ldr	x0, [sp, #208]
    1174:	b	a80 <gconv@@Base+0x1a8>
    1178:	mov	w24, #0x5                   	// #5
    117c:	ldp	x27, x28, [sp, #80]
    1180:	b	ba0 <gconv@@Base+0x2c8>
    1184:	mov	x0, #0x4                   	// #4
    1188:	mov	x19, #0x0                   	// #0
    118c:	b	d38 <gconv@@Base+0x460>
    1190:	ldp	x1, x2, [sp, #200]
    1194:	str	x2, [x28]
    1198:	mov	x24, x25
    119c:	mov	w7, w21
    11a0:	mov	x25, x27
    11a4:	ldp	x21, x27, [sp, #104]
    11a8:	cmp	x0, x1
    11ac:	b.eq	1084 <gconv@@Base+0x7ac>  // b.none
    11b0:	b	114c <gconv@@Base+0x874>
    11b4:	mov	w1, #0x1c00                	// #7168
    11b8:	cmp	w1, w5, lsr #7
    11bc:	b.ne	f94 <gconv@@Base+0x6bc>  // b.any
    11c0:	mov	x26, x8
    11c4:	str	x8, [sp, #208]
    11c8:	b	ee0 <gconv@@Base+0x608>
    11cc:	cbnz	w24, cc0 <gconv@@Base+0x3e8>
    11d0:	ldr	x22, [x12]
    11d4:	ldr	x0, [x8, #96]
    11d8:	ldr	x14, [sp, #192]
    11dc:	b	9a8 <gconv@@Base+0xd0>
    11e0:	ldr	x0, [sp, #152]
    11e4:	cbz	x0, 1214 <gconv@@Base+0x93c>
    11e8:	tbnz	w25, #3, 1298 <gconv@@Base+0x9c0>
    11ec:	tbz	w25, #1, 1214 <gconv@@Base+0x93c>
    11f0:	mov	x0, x13
    11f4:	ldr	x2, [sp, #152]
    11f8:	add	x0, x0, #0x4
    11fc:	str	x0, [sp, #208]
    1200:	ldr	x1, [x2]
    1204:	add	x1, x1, #0x1
    1208:	str	x1, [x2]
    120c:	cmp	x0, x13
    1210:	b.ne	dd8 <gconv@@Base+0x500>  // b.any
    1214:	mov	w24, #0x6                   	// #6
    1218:	ldp	x27, x28, [sp, #80]
    121c:	b	ba0 <gconv@@Base+0x2c8>
    1220:	add	x0, x13, #0x3
    1224:	cmp	x13, #0x0
    1228:	csel	x13, x0, x13, lt  // lt = tstop
    122c:	sub	x0, x1, x13, asr #2
    1230:	str	x0, [x28]
    1234:	b	afc <gconv@@Base+0x224>
    1238:	str	x20, [x12]
    123c:	cmp	x22, x20
    1240:	b.cs	1264 <gconv@@Base+0x98c>  // b.hs, b.nlast
    1244:	add	x7, x7, x19
    1248:	add	x22, x22, #0x1
    124c:	str	x22, [sp, #208]
    1250:	cmp	x20, x22
    1254:	add	x7, x7, #0x1
    1258:	ldurb	w0, [x22, #-1]
    125c:	strb	w0, [x7, #3]
    1260:	b.ne	1248 <gconv@@Base+0x970>  // b.any
    1264:	mov	w24, #0x7                   	// #7
    1268:	ldp	x27, x28, [sp, #80]
    126c:	b	ba0 <gconv@@Base+0x2c8>
    1270:	mov	w1, #0x1c00                	// #7168
    1274:	cmp	w1, w0, lsr #7
    1278:	b.ne	11e0 <gconv@@Base+0x908>  // b.any
    127c:	add	x0, x13, #0x4
    1280:	mov	x13, #0x4                   	// #4
    1284:	str	x0, [sp, #208]
    1288:	b	de4 <gconv@@Base+0x50c>
    128c:	mov	x2, #0x4                   	// #4
    1290:	str	x26, [x28]
    1294:	b	f00 <gconv@@Base+0x628>
    1298:	add	x4, x13, x19
    129c:	mov	x6, x0
    12a0:	mov	x2, x22
    12a4:	mov	x0, x8
    12a8:	add	x5, sp, #0xd8
    12ac:	add	x3, sp, #0xd0
    12b0:	mov	x1, x21
    12b4:	stp	x8, x4, [sp, #96]
    12b8:	stp	x13, x7, [sp, #112]
    12bc:	str	x12, [sp, #128]
    12c0:	str	x18, [sp, #160]
    12c4:	bl	700 <__gconv_transliterate@plt>
    12c8:	mov	w24, w0
    12cc:	cmp	w0, #0x6
    12d0:	ldr	x8, [sp, #96]
    12d4:	ldp	x13, x7, [sp, #112]
    12d8:	ldr	x12, [sp, #128]
    12dc:	ldr	x18, [sp, #160]
    12e0:	ldr	x0, [sp, #208]
    12e4:	b.eq	1438 <gconv@@Base+0xb60>  // b.none
    12e8:	cmp	x0, x13
    12ec:	ldr	x4, [sp, #104]
    12f0:	b.ne	dd8 <gconv@@Base+0x500>  // b.any
    12f4:	cmp	w24, #0x7
    12f8:	b.ne	11cc <gconv@@Base+0x8f4>  // b.any
    12fc:	add	x0, x13, #0x4
    1300:	cmp	x4, x0
    1304:	b.eq	1418 <gconv@@Base+0xb40>  // b.none
    1308:	ldr	w0, [x7]
    130c:	ldr	x1, [x12]
    1310:	and	x2, x0, #0x7
    1314:	sub	x2, x19, x2
    1318:	and	w0, w0, #0xfffffff8
    131c:	add	x1, x1, x2
    1320:	str	x1, [x12]
    1324:	cmp	x19, w0, sxtw
    1328:	b.le	13f8 <gconv@@Base+0xb20>
    132c:	cmp	x19, #0x4
    1330:	b.hi	1440 <gconv@@Base+0xb68>  // b.pmore
    1334:	orr	w0, w0, w19
    1338:	str	w0, [x7]
    133c:	cmp	x4, x13
    1340:	b.ls	1264 <gconv@@Base+0x98c>  // b.plast
    1344:	add	x7, x7, #0x4
    1348:	add	x13, x13, #0x1
    134c:	str	x13, [sp, #208]
    1350:	cmp	x4, x13
    1354:	ldurb	w0, [x13, #-1]
    1358:	strb	w0, [x7], #1
    135c:	b.ne	1348 <gconv@@Base+0xa70>  // b.any
    1360:	b	1264 <gconv@@Base+0x98c>
    1364:	cmp	x13, x24
    1368:	b.eq	1094 <gconv@@Base+0x7bc>  // b.none
    136c:	b	114c <gconv@@Base+0x874>
    1370:	cmp	x13, x24
    1374:	b.eq	fb8 <gconv@@Base+0x6e0>  // b.none
    1378:	b	114c <gconv@@Base+0x874>
    137c:	ldr	x0, [sp, #216]
    1380:	b	fa0 <gconv@@Base+0x6c8>
    1384:	adrp	x3, 1000 <gconv@@Base+0x728>
    1388:	adrp	x1, 1000 <gconv@@Base+0x728>
    138c:	adrp	x0, 1000 <gconv@@Base+0x728>
    1390:	add	x3, x3, #0x638
    1394:	add	x1, x1, #0x4c0
    1398:	add	x0, x0, #0x4d8
    139c:	mov	w2, #0x1a4                 	// #420
    13a0:	stp	x27, x28, [sp, #80]
    13a4:	bl	750 <__assert_fail@plt>
    13a8:	adrp	x3, 1000 <gconv@@Base+0x728>
    13ac:	adrp	x1, 1000 <gconv@@Base+0x728>
    13b0:	adrp	x0, 1000 <gconv@@Base+0x728>
    13b4:	add	x3, x3, #0x628
    13b8:	add	x1, x1, #0x4f0
    13bc:	add	x0, x0, #0x500
    13c0:	mov	w2, #0x18b                 	// #395
    13c4:	bl	750 <__assert_fail@plt>
    13c8:	adrp	x3, 1000 <gconv@@Base+0x728>
    13cc:	adrp	x1, 1000 <gconv@@Base+0x728>
    13d0:	adrp	x0, 1000 <gconv@@Base+0x728>
    13d4:	add	x3, x3, #0x638
    13d8:	add	x1, x1, #0x4c0
    13dc:	add	x0, x0, #0x4d8
    13e0:	mov	w2, #0x234                 	// #564
    13e4:	bl	750 <__assert_fail@plt>
    13e8:	mov	w1, #0x0                   	// #0
    13ec:	b	10e0 <gconv@@Base+0x808>
    13f0:	stp	x27, x28, [sp, #80]
    13f4:	bl	710 <__stack_chk_fail@plt>
    13f8:	adrp	x3, 1000 <gconv@@Base+0x728>
    13fc:	adrp	x1, 1000 <gconv@@Base+0x728>
    1400:	adrp	x0, 1000 <gconv@@Base+0x728>
    1404:	add	x3, x3, #0x628
    1408:	add	x1, x1, #0x4f0
    140c:	add	x0, x0, #0x580
    1410:	mov	w2, #0x1e5                 	// #485
    1414:	bl	750 <__assert_fail@plt>
    1418:	adrp	x3, 1000 <gconv@@Base+0x728>
    141c:	adrp	x1, 1000 <gconv@@Base+0x728>
    1420:	adrp	x0, 1000 <gconv@@Base+0x728>
    1424:	add	x3, x3, #0x628
    1428:	add	x1, x1, #0x4f0
    142c:	add	x0, x0, #0x558
    1430:	mov	w2, #0x1db                 	// #475
    1434:	bl	750 <__assert_fail@plt>
    1438:	tbz	w25, #1, 120c <gconv@@Base+0x934>
    143c:	b	11f4 <gconv@@Base+0x91c>
    1440:	adrp	x3, 1000 <gconv@@Base+0x728>
    1444:	adrp	x1, 1000 <gconv@@Base+0x728>
    1448:	adrp	x0, 1000 <gconv@@Base+0x728>
    144c:	add	x3, x3, #0x628
    1450:	add	x1, x1, #0x4f0
    1454:	add	x0, x0, #0x5a8
    1458:	mov	w2, #0x1e6                 	// #486
    145c:	bl	750 <__assert_fail@plt>
    1460:	adrp	x3, 1000 <gconv@@Base+0x728>
    1464:	adrp	x1, 1000 <gconv@@Base+0x728>
    1468:	adrp	x0, 1000 <gconv@@Base+0x728>
    146c:	add	x3, x3, #0x638
    1470:	add	x1, x1, #0x4c0
    1474:	add	x0, x0, #0x610
    1478:	mov	w2, #0x31e                 	// #798
    147c:	bl	750 <__assert_fail@plt>
    1480:	adrp	x3, 1000 <gconv@@Base+0x728>
    1484:	adrp	x1, 1000 <gconv@@Base+0x728>
    1488:	adrp	x0, 1000 <gconv@@Base+0x728>
    148c:	add	x3, x3, #0x628
    1490:	add	x1, x1, #0x4f0
    1494:	add	x0, x0, #0x530
    1498:	mov	w2, #0x1c9                 	// #457
    149c:	bl	750 <__assert_fail@plt>

Disassembly of section .fini:

00000000000014a0 <.fini>:
    14a0:	stp	x29, x30, [sp, #-16]!
    14a4:	mov	x29, sp
    14a8:	ldp	x29, x30, [sp], #16
    14ac:	ret
