
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//math.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002ff8 <.init>:
    2ff8:	stp	x29, x30, [sp, #-16]!
    2ffc:	mov	x29, sp
    3000:	bl	3510 <PyNumber_FloorDivide@plt+0x10>
    3004:	ldp	x29, x30, [sp], #16
    3008:	ret

Disassembly of section .plt:

0000000000003010 <memcpy@plt-0x20>:
    3010:	stp	x16, x30, [sp, #-16]!
    3014:	adrp	x16, 1c000 <_Py_log1p@@Base+0x12938>
    3018:	ldr	x17, [x16, #4088]
    301c:	add	x16, x16, #0xff8
    3020:	br	x17
    3024:	nop
    3028:	nop
    302c:	nop

0000000000003030 <memcpy@plt>:
    3030:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3034:	ldr	x17, [x16]
    3038:	add	x16, x16, #0x0
    303c:	br	x17

0000000000003040 <atan2@plt>:
    3040:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3044:	ldr	x17, [x16, #8]
    3048:	add	x16, x16, #0x8
    304c:	br	x17

0000000000003050 <PyLong_AsLongLongAndOverflow@plt>:
    3050:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3054:	ldr	x17, [x16, #16]
    3058:	add	x16, x16, #0x10
    305c:	br	x17

0000000000003060 <log2@plt>:
    3060:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3064:	ldr	x17, [x16, #24]
    3068:	add	x16, x16, #0x18
    306c:	br	x17

0000000000003070 <copysign@plt>:
    3070:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3074:	ldr	x17, [x16, #32]
    3078:	add	x16, x16, #0x20
    307c:	br	x17

0000000000003080 <PyLong_FromDouble@plt>:
    3080:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3084:	ldr	x17, [x16, #40]
    3088:	add	x16, x16, #0x28
    308c:	br	x17

0000000000003090 <PyMem_Free@plt>:
    3090:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3094:	ldr	x17, [x16, #48]
    3098:	add	x16, x16, #0x30
    309c:	br	x17

00000000000030a0 <ldexp@plt>:
    30a0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    30a4:	ldr	x17, [x16, #56]
    30a8:	add	x16, x16, #0x38
    30ac:	br	x17

00000000000030b0 <PyErr_SetFromErrno@plt>:
    30b0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    30b4:	ldr	x17, [x16, #64]
    30b8:	add	x16, x16, #0x40
    30bc:	br	x17

00000000000030c0 <PyLong_FromUnsignedLongLong@plt>:
    30c0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    30c4:	ldr	x17, [x16, #72]
    30c8:	add	x16, x16, #0x48
    30cc:	br	x17

00000000000030d0 <PyLong_AsUnsignedLongLong@plt>:
    30d0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    30d4:	ldr	x17, [x16, #80]
    30d8:	add	x16, x16, #0x50
    30dc:	br	x17

00000000000030e0 <PyNumber_Add@plt>:
    30e0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    30e4:	ldr	x17, [x16, #88]
    30e8:	add	x16, x16, #0x58
    30ec:	br	x17

00000000000030f0 <__cxa_finalize@plt>:
    30f0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    30f4:	ldr	x17, [x16, #96]
    30f8:	add	x16, x16, #0x60
    30fc:	br	x17

0000000000003100 <_Py_Dealloc@plt>:
    3100:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3104:	ldr	x17, [x16, #104]
    3108:	add	x16, x16, #0x68
    310c:	br	x17

0000000000003110 <pow@plt>:
    3110:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3114:	ldr	x17, [x16, #112]
    3118:	add	x16, x16, #0x70
    311c:	br	x17

0000000000003120 <PyErr_NoMemory@plt>:
    3120:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3124:	ldr	x17, [x16, #120]
    3128:	add	x16, x16, #0x78
    312c:	br	x17

0000000000003130 <PyIter_Next@plt>:
    3130:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3134:	ldr	x17, [x16, #128]
    3138:	add	x16, x16, #0x80
    313c:	br	x17

0000000000003140 <_PyLong_Sign@plt>:
    3140:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3144:	ldr	x17, [x16, #136]
    3148:	add	x16, x16, #0x88
    314c:	br	x17

0000000000003150 <PyNumber_Multiply@plt>:
    3150:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3154:	ldr	x17, [x16, #144]
    3158:	add	x16, x16, #0x90
    315c:	br	x17

0000000000003160 <log10@plt>:
    3160:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3164:	ldr	x17, [x16, #152]
    3168:	add	x16, x16, #0x98
    316c:	br	x17

0000000000003170 <_PyLong_NumBits@plt>:
    3170:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3174:	ldr	x17, [x16, #160]
    3178:	add	x16, x16, #0xa0
    317c:	br	x17

0000000000003180 <_PyLong_Rshift@plt>:
    3180:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3184:	ldr	x17, [x16, #168]
    3188:	add	x16, x16, #0xa8
    318c:	br	x17

0000000000003190 <sqrt@plt>:
    3190:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3194:	ldr	x17, [x16, #176]
    3198:	add	x16, x16, #0xb0
    319c:	br	x17

00000000000031a0 <_PyArg_UnpackKeywords@plt>:
    31a0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    31a4:	ldr	x17, [x16, #184]
    31a8:	add	x16, x16, #0xb8
    31ac:	br	x17

00000000000031b0 <PyErr_SetString@plt>:
    31b0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    31b4:	ldr	x17, [x16, #192]
    31b8:	add	x16, x16, #0xc0
    31bc:	br	x17

00000000000031c0 <PyObject_Malloc@plt>:
    31c0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    31c4:	ldr	x17, [x16, #200]
    31c8:	add	x16, x16, #0xc8
    31cc:	br	x17

00000000000031d0 <_PyLong_Frexp@plt>:
    31d0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    31d4:	ldr	x17, [x16, #208]
    31d8:	add	x16, x16, #0xd0
    31dc:	br	x17

00000000000031e0 <_PyObject_LookupSpecial@plt>:
    31e0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    31e4:	ldr	x17, [x16, #216]
    31e8:	add	x16, x16, #0xd8
    31ec:	br	x17

00000000000031f0 <_PyLong_Copy@plt>:
    31f0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    31f4:	ldr	x17, [x16, #224]
    31f8:	add	x16, x16, #0xe0
    31fc:	br	x17

0000000000003200 <PyMem_Realloc@plt>:
    3200:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3204:	ldr	x17, [x16, #232]
    3208:	add	x16, x16, #0xe8
    320c:	br	x17

0000000000003210 <PyErr_ExceptionMatches@plt>:
    3210:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3214:	ldr	x17, [x16, #240]
    3218:	add	x16, x16, #0xf0
    321c:	br	x17

0000000000003220 <log@plt>:
    3220:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3224:	ldr	x17, [x16, #248]
    3228:	add	x16, x16, #0xf8
    322c:	br	x17

0000000000003230 <PyObject_Free@plt>:
    3230:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3234:	ldr	x17, [x16, #256]
    3238:	add	x16, x16, #0x100
    323c:	br	x17

0000000000003240 <PyFloat_FromDouble@plt>:
    3240:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3244:	ldr	x17, [x16, #264]
    3248:	add	x16, x16, #0x108
    324c:	br	x17

0000000000003250 <PyType_Ready@plt>:
    3250:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3254:	ldr	x17, [x16, #272]
    3258:	add	x16, x16, #0x110
    325c:	br	x17

0000000000003260 <PyLong_FromLong@plt>:
    3260:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3264:	ldr	x17, [x16, #280]
    3268:	add	x16, x16, #0x118
    326c:	br	x17

0000000000003270 <PyObject_RichCompareBool@plt>:
    3270:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3274:	ldr	x17, [x16, #288]
    3278:	add	x16, x16, #0x120
    327c:	br	x17

0000000000003280 <_PyLong_GCD@plt>:
    3280:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3284:	ldr	x17, [x16, #296]
    3288:	add	x16, x16, #0x128
    328c:	br	x17

0000000000003290 <PyErr_Clear@plt>:
    3290:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3294:	ldr	x17, [x16, #304]
    3298:	add	x16, x16, #0x130
    329c:	br	x17

00000000000032a0 <PyBool_FromLong@plt>:
    32a0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    32a4:	ldr	x17, [x16, #312]
    32a8:	add	x16, x16, #0x138
    32ac:	br	x17

00000000000032b0 <sin@plt>:
    32b0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    32b4:	ldr	x17, [x16, #320]
    32b8:	add	x16, x16, #0x140
    32bc:	br	x17

00000000000032c0 <_Py_dg_stdnan@plt>:
    32c0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    32c4:	ldr	x17, [x16, #328]
    32c8:	add	x16, x16, #0x148
    32cc:	br	x17

00000000000032d0 <log1p@plt>:
    32d0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    32d4:	ldr	x17, [x16, #336]
    32d8:	add	x16, x16, #0x150
    32dc:	br	x17

00000000000032e0 <__gmon_start__@plt>:
    32e0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    32e4:	ldr	x17, [x16, #344]
    32e8:	add	x16, x16, #0x158
    32ec:	br	x17

00000000000032f0 <erf@plt>:
    32f0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    32f4:	ldr	x17, [x16, #352]
    32f8:	add	x16, x16, #0x160
    32fc:	br	x17

0000000000003300 <_PyArg_CheckPositional@plt>:
    3300:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3304:	ldr	x17, [x16, #360]
    3308:	add	x16, x16, #0x168
    330c:	br	x17

0000000000003310 <PyLong_AsLongAndOverflow@plt>:
    3310:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3314:	ldr	x17, [x16, #368]
    3318:	add	x16, x16, #0x170
    331c:	br	x17

0000000000003320 <Py_BuildValue@plt>:
    3320:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3324:	ldr	x17, [x16, #376]
    3328:	add	x16, x16, #0x178
    332c:	br	x17

0000000000003330 <PyErr_Occurred@plt>:
    3330:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3334:	ldr	x17, [x16, #384]
    3338:	add	x16, x16, #0x180
    333c:	br	x17

0000000000003340 <PyModule_Create2@plt>:
    3340:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3344:	ldr	x17, [x16, #392]
    3348:	add	x16, x16, #0x188
    334c:	br	x17

0000000000003350 <_Py_CheckFunctionResult@plt>:
    3350:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3354:	ldr	x17, [x16, #400]
    3358:	add	x16, x16, #0x190
    335c:	br	x17

0000000000003360 <PyFloat_AsDouble@plt>:
    3360:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3364:	ldr	x17, [x16, #408]
    3368:	add	x16, x16, #0x198
    336c:	br	x17

0000000000003370 <PyArg_ParseTuple@plt>:
    3370:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3374:	ldr	x17, [x16, #416]
    3378:	add	x16, x16, #0x1a0
    337c:	br	x17

0000000000003380 <Py_FatalError@plt>:
    3380:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3384:	ldr	x17, [x16, #424]
    3388:	add	x16, x16, #0x1a8
    338c:	br	x17

0000000000003390 <erfc@plt>:
    3390:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3394:	ldr	x17, [x16, #432]
    3398:	add	x16, x16, #0x1b0
    339c:	br	x17

00000000000033a0 <modf@plt>:
    33a0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    33a4:	ldr	x17, [x16, #440]
    33a8:	add	x16, x16, #0x1b8
    33ac:	br	x17

00000000000033b0 <PyLong_AsDouble@plt>:
    33b0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    33b4:	ldr	x17, [x16, #448]
    33b8:	add	x16, x16, #0x1c0
    33bc:	br	x17

00000000000033c0 <round@plt>:
    33c0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    33c4:	ldr	x17, [x16, #456]
    33c8:	add	x16, x16, #0x1c8
    33cc:	br	x17

00000000000033d0 <frexp@plt>:
    33d0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    33d4:	ldr	x17, [x16, #464]
    33d8:	add	x16, x16, #0x1d0
    33dc:	br	x17

00000000000033e0 <PyLong_FromUnsignedLong@plt>:
    33e0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    33e4:	ldr	x17, [x16, #472]
    33e8:	add	x16, x16, #0x1d8
    33ec:	br	x17

00000000000033f0 <_Py_dg_infinity@plt>:
    33f0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    33f4:	ldr	x17, [x16, #480]
    33f8:	add	x16, x16, #0x1e0
    33fc:	br	x17

0000000000003400 <floor@plt>:
    3400:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3404:	ldr	x17, [x16, #488]
    3408:	add	x16, x16, #0x1e8
    340c:	br	x17

0000000000003410 <PyObject_GetIter@plt>:
    3410:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3414:	ldr	x17, [x16, #496]
    3418:	add	x16, x16, #0x1f0
    341c:	br	x17

0000000000003420 <PyModule_AddObject@plt>:
    3420:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3424:	ldr	x17, [x16, #504]
    3428:	add	x16, x16, #0x1f8
    342c:	br	x17

0000000000003430 <PySequence_Tuple@plt>:
    3430:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3434:	ldr	x17, [x16, #512]
    3438:	add	x16, x16, #0x200
    343c:	br	x17

0000000000003440 <fmod@plt>:
    3440:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3444:	ldr	x17, [x16, #520]
    3448:	add	x16, x16, #0x208
    344c:	br	x17

0000000000003450 <PyType_IsSubtype@plt>:
    3450:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3454:	ldr	x17, [x16, #528]
    3458:	add	x16, x16, #0x210
    345c:	br	x17

0000000000003460 <PyErr_Format@plt>:
    3460:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3464:	ldr	x17, [x16, #536]
    3468:	add	x16, x16, #0x218
    346c:	br	x17

0000000000003470 <_PyObject_MakeTpCall@plt>:
    3470:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3474:	ldr	x17, [x16, #544]
    3478:	add	x16, x16, #0x220
    347c:	br	x17

0000000000003480 <PyNumber_Index@plt>:
    3480:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3484:	ldr	x17, [x16, #552]
    3488:	add	x16, x16, #0x228
    348c:	br	x17

0000000000003490 <__errno_location@plt>:
    3490:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3494:	ldr	x17, [x16, #560]
    3498:	add	x16, x16, #0x230
    349c:	br	x17

00000000000034a0 <cos@plt>:
    34a0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    34a4:	ldr	x17, [x16, #568]
    34a8:	add	x16, x16, #0x238
    34ac:	br	x17

00000000000034b0 <PyMem_Malloc@plt>:
    34b0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    34b4:	ldr	x17, [x16, #576]
    34b8:	add	x16, x16, #0x240
    34bc:	br	x17

00000000000034c0 <PyNumber_Subtract@plt>:
    34c0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    34c4:	ldr	x17, [x16, #584]
    34c8:	add	x16, x16, #0x248
    34cc:	br	x17

00000000000034d0 <PyNumber_TrueDivide@plt>:
    34d0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    34d4:	ldr	x17, [x16, #592]
    34d8:	add	x16, x16, #0x250
    34dc:	br	x17

00000000000034e0 <exp@plt>:
    34e0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    34e4:	ldr	x17, [x16, #600]
    34e8:	add	x16, x16, #0x258
    34ec:	br	x17

00000000000034f0 <_PyLong_Lshift@plt>:
    34f0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    34f4:	ldr	x17, [x16, #608]
    34f8:	add	x16, x16, #0x260
    34fc:	br	x17

0000000000003500 <PyNumber_FloorDivide@plt>:
    3500:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3504:	ldr	x17, [x16, #616]
    3508:	add	x16, x16, #0x268
    350c:	br	x17

Disassembly of section .text:

0000000000003510 <PyInit_math@@Base-0x60e4>:
    3510:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    3514:	ldr	x0, [x0, #3928]
    3518:	cbz	x0, 3520 <PyNumber_FloorDivide@plt+0x20>
    351c:	b	32e0 <__gmon_start__@plt>
    3520:	ret
    3524:	stp	x29, x30, [sp, #-32]!
    3528:	mov	x29, sp
    352c:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    3530:	add	x0, x0, #0xa08
    3534:	str	x0, [sp, #24]
    3538:	ldr	x0, [sp, #24]
    353c:	str	x0, [sp, #24]
    3540:	ldr	x1, [sp, #24]
    3544:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    3548:	add	x0, x0, #0xa08
    354c:	cmp	x1, x0
    3550:	b.eq	3588 <PyNumber_FloorDivide@plt+0x88>  // b.none
    3554:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    3558:	ldr	x0, [x0, #3808]
    355c:	str	x0, [sp, #16]
    3560:	ldr	x0, [sp, #16]
    3564:	str	x0, [sp, #16]
    3568:	ldr	x0, [sp, #16]
    356c:	cmp	x0, #0x0
    3570:	b.eq	358c <PyNumber_FloorDivide@plt+0x8c>  // b.none
    3574:	ldr	x1, [sp, #16]
    3578:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    357c:	add	x0, x0, #0xa08
    3580:	blr	x1
    3584:	b	358c <PyNumber_FloorDivide@plt+0x8c>
    3588:	nop
    358c:	ldp	x29, x30, [sp], #32
    3590:	ret
    3594:	stp	x29, x30, [sp, #-48]!
    3598:	mov	x29, sp
    359c:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    35a0:	add	x0, x0, #0xa08
    35a4:	str	x0, [sp, #40]
    35a8:	ldr	x0, [sp, #40]
    35ac:	str	x0, [sp, #40]
    35b0:	ldr	x1, [sp, #40]
    35b4:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    35b8:	add	x0, x0, #0xa08
    35bc:	sub	x0, x1, x0
    35c0:	asr	x0, x0, #3
    35c4:	lsr	x1, x0, #63
    35c8:	add	x0, x1, x0
    35cc:	asr	x0, x0, #1
    35d0:	str	x0, [sp, #32]
    35d4:	ldr	x0, [sp, #32]
    35d8:	cmp	x0, #0x0
    35dc:	b.eq	3618 <PyNumber_FloorDivide@plt+0x118>  // b.none
    35e0:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    35e4:	ldr	x0, [x0, #4040]
    35e8:	str	x0, [sp, #24]
    35ec:	ldr	x0, [sp, #24]
    35f0:	str	x0, [sp, #24]
    35f4:	ldr	x0, [sp, #24]
    35f8:	cmp	x0, #0x0
    35fc:	b.eq	361c <PyNumber_FloorDivide@plt+0x11c>  // b.none
    3600:	ldr	x2, [sp, #24]
    3604:	ldr	x1, [sp, #32]
    3608:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    360c:	add	x0, x0, #0xa08
    3610:	blr	x2
    3614:	b	361c <PyNumber_FloorDivide@plt+0x11c>
    3618:	nop
    361c:	ldp	x29, x30, [sp], #48
    3620:	ret
    3624:	stp	x29, x30, [sp, #-16]!
    3628:	mov	x29, sp
    362c:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    3630:	add	x0, x0, #0xa08
    3634:	ldrb	w0, [x0]
    3638:	and	x0, x0, #0xff
    363c:	cmp	x0, #0x0
    3640:	b.ne	367c <PyNumber_FloorDivide@plt+0x17c>  // b.any
    3644:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    3648:	ldr	x0, [x0, #3848]
    364c:	cmp	x0, #0x0
    3650:	b.eq	3664 <PyNumber_FloorDivide@plt+0x164>  // b.none
    3654:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    3658:	add	x0, x0, #0x270
    365c:	ldr	x0, [x0]
    3660:	bl	30f0 <__cxa_finalize@plt>
    3664:	bl	3524 <PyNumber_FloorDivide@plt+0x24>
    3668:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    366c:	add	x0, x0, #0xa08
    3670:	mov	w1, #0x1                   	// #1
    3674:	strb	w1, [x0]
    3678:	b	3680 <PyNumber_FloorDivide@plt+0x180>
    367c:	nop
    3680:	ldp	x29, x30, [sp], #16
    3684:	ret
    3688:	stp	x29, x30, [sp, #-16]!
    368c:	mov	x29, sp
    3690:	bl	3594 <PyNumber_FloorDivide@plt+0x94>
    3694:	nop
    3698:	ldp	x29, x30, [sp], #16
    369c:	ret
    36a0:	sub	sp, sp, #0x10
    36a4:	str	x0, [sp, #8]
    36a8:	ldr	x0, [sp, #8]
    36ac:	ldr	x0, [x0]
    36b0:	add	x1, x0, #0x1
    36b4:	ldr	x0, [sp, #8]
    36b8:	str	x1, [x0]
    36bc:	nop
    36c0:	add	sp, sp, #0x10
    36c4:	ret
    36c8:	stp	x29, x30, [sp, #-48]!
    36cc:	mov	x29, sp
    36d0:	str	x0, [sp, #40]
    36d4:	str	w1, [sp, #36]
    36d8:	str	x2, [sp, #24]
    36dc:	ldr	x0, [sp, #24]
    36e0:	ldr	x0, [x0]
    36e4:	sub	x1, x0, #0x1
    36e8:	ldr	x0, [sp, #24]
    36ec:	str	x1, [x0]
    36f0:	ldr	x0, [sp, #24]
    36f4:	ldr	x0, [x0]
    36f8:	cmp	x0, #0x0
    36fc:	b.ne	3708 <PyNumber_FloorDivide@plt+0x208>  // b.any
    3700:	ldr	x0, [sp, #24]
    3704:	bl	3100 <_Py_Dealloc@plt>
    3708:	nop
    370c:	ldp	x29, x30, [sp], #48
    3710:	ret
    3714:	stp	x29, x30, [sp, #-32]!
    3718:	mov	x29, sp
    371c:	str	x0, [sp, #24]
    3720:	ldr	x0, [sp, #24]
    3724:	cmp	x0, #0x0
    3728:	b.eq	3740 <PyNumber_FloorDivide@plt+0x240>  // b.none
    372c:	ldr	x2, [sp, #24]
    3730:	mov	w1, #0x21d                 	// #541
    3734:	adrp	x0, 9000 <PyNumber_FloorDivide@plt+0x5b00>
    3738:	add	x0, x0, #0x708
    373c:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    3740:	nop
    3744:	ldp	x29, x30, [sp], #32
    3748:	ret
    374c:	sub	sp, sp, #0x10
    3750:	str	x0, [sp, #8]
    3754:	ldr	x0, [sp, #8]
    3758:	and	x0, x0, #0x7fffffffffffffff
    375c:	add	sp, sp, #0x10
    3760:	ret
    3764:	sub	sp, sp, #0x30
    3768:	str	x0, [sp, #8]
    376c:	ldr	x0, [sp, #8]
    3770:	ldr	x0, [x0, #8]
    3774:	str	x0, [sp, #40]
    3778:	ldr	x0, [sp, #40]
    377c:	ldr	x0, [x0, #56]
    3780:	str	x0, [sp, #32]
    3784:	ldr	x0, [sp, #40]
    3788:	ldr	x0, [x0, #168]
    378c:	and	x0, x0, #0x800
    3790:	cmp	x0, #0x0
    3794:	b.ne	37a0 <PyNumber_FloorDivide@plt+0x2a0>  // b.any
    3798:	mov	x0, #0x0                   	// #0
    379c:	b	37b8 <PyNumber_FloorDivide@plt+0x2b8>
    37a0:	ldr	x0, [sp, #32]
    37a4:	ldr	x1, [sp, #8]
    37a8:	add	x0, x1, x0
    37ac:	str	x0, [sp, #24]
    37b0:	ldr	x0, [sp, #24]
    37b4:	ldr	x0, [x0]
    37b8:	add	sp, sp, #0x30
    37bc:	ret
    37c0:	stp	x29, x30, [sp, #-80]!
    37c4:	mov	x29, sp
    37c8:	str	x0, [sp, #40]
    37cc:	str	x1, [sp, #32]
    37d0:	str	x2, [sp, #24]
    37d4:	str	x3, [sp, #16]
    37d8:	ldr	x0, [sp, #40]
    37dc:	bl	3764 <PyNumber_FloorDivide@plt+0x264>
    37e0:	str	x0, [sp, #72]
    37e4:	ldr	x0, [sp, #72]
    37e8:	cmp	x0, #0x0
    37ec:	b.ne	3814 <PyNumber_FloorDivide@plt+0x314>  // b.any
    37f0:	ldr	x0, [sp, #24]
    37f4:	bl	374c <PyNumber_FloorDivide@plt+0x24c>
    37f8:	str	x0, [sp, #56]
    37fc:	ldr	x3, [sp, #16]
    3800:	ldr	x2, [sp, #56]
    3804:	ldr	x1, [sp, #32]
    3808:	ldr	x0, [sp, #40]
    380c:	bl	3470 <_PyObject_MakeTpCall@plt>
    3810:	b	3840 <PyNumber_FloorDivide@plt+0x340>
    3814:	ldr	x4, [sp, #72]
    3818:	ldr	x3, [sp, #16]
    381c:	ldr	x2, [sp, #24]
    3820:	ldr	x1, [sp, #32]
    3824:	ldr	x0, [sp, #40]
    3828:	blr	x4
    382c:	str	x0, [sp, #64]
    3830:	mov	x2, #0x0                   	// #0
    3834:	ldr	x1, [sp, #64]
    3838:	ldr	x0, [sp, #40]
    383c:	bl	3350 <_Py_CheckFunctionResult@plt>
    3840:	ldp	x29, x30, [sp], #80
    3844:	ret
    3848:	stp	x29, x30, [sp, #-32]!
    384c:	mov	x29, sp
    3850:	str	x0, [sp, #24]
    3854:	mov	x3, #0x0                   	// #0
    3858:	mov	x2, #0x0                   	// #0
    385c:	mov	x1, #0x0                   	// #0
    3860:	ldr	x0, [sp, #24]
    3864:	bl	37c0 <PyNumber_FloorDivide@plt+0x2c0>
    3868:	ldp	x29, x30, [sp], #32
    386c:	ret
    3870:	stp	x29, x30, [sp, #-80]!
    3874:	mov	x29, sp
    3878:	str	x0, [sp, #40]
    387c:	str	x1, [sp, #32]
    3880:	str	x2, [sp, #24]
    3884:	str	xzr, [sp, #72]
    3888:	ldr	x0, [sp, #24]
    388c:	cmp	x0, #0x1
    3890:	b.le	38a0 <PyNumber_FloorDivide@plt+0x3a0>
    3894:	ldr	x0, [sp, #24]
    3898:	cmp	x0, #0x2
    389c:	b.le	38c0 <PyNumber_FloorDivide@plt+0x3c0>
    38a0:	mov	x3, #0x2                   	// #2
    38a4:	mov	x2, #0x2                   	// #2
    38a8:	ldr	x1, [sp, #24]
    38ac:	adrp	x0, 9000 <PyNumber_FloorDivide@plt+0x5b00>
    38b0:	add	x0, x0, #0x760
    38b4:	bl	3300 <_PyArg_CheckPositional@plt>
    38b8:	cmp	w0, #0x0
    38bc:	b.eq	38f0 <PyNumber_FloorDivide@plt+0x3f0>  // b.none
    38c0:	ldr	x0, [sp, #32]
    38c4:	ldr	x0, [x0]
    38c8:	str	x0, [sp, #64]
    38cc:	ldr	x0, [sp, #32]
    38d0:	ldr	x0, [x0, #8]
    38d4:	str	x0, [sp, #56]
    38d8:	ldr	x2, [sp, #56]
    38dc:	ldr	x1, [sp, #64]
    38e0:	ldr	x0, [sp, #40]
    38e4:	bl	55d4 <PyNumber_FloorDivide@plt+0x20d4>
    38e8:	str	x0, [sp, #72]
    38ec:	b	38f4 <PyNumber_FloorDivide@plt+0x3f4>
    38f0:	nop
    38f4:	ldr	x0, [sp, #72]
    38f8:	ldp	x29, x30, [sp], #80
    38fc:	ret
    3900:	stp	x29, x30, [sp, #-48]!
    3904:	mov	x29, sp
    3908:	str	x0, [sp, #24]
    390c:	str	x1, [sp, #16]
    3910:	str	xzr, [sp, #40]
    3914:	ldr	x0, [sp, #16]
    3918:	ldr	x1, [x0, #8]
    391c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    3920:	ldr	x0, [x0, #3824]
    3924:	cmp	x1, x0
    3928:	b.ne	393c <PyNumber_FloorDivide@plt+0x43c>  // b.any
    392c:	ldr	x0, [sp, #16]
    3930:	ldr	d0, [x0, #16]
    3934:	str	d0, [sp, #32]
    3938:	b	3964 <PyNumber_FloorDivide@plt+0x464>
    393c:	ldr	x0, [sp, #16]
    3940:	bl	3360 <PyFloat_AsDouble@plt>
    3944:	str	d0, [sp, #32]
    3948:	ldr	d1, [sp, #32]
    394c:	fmov	d0, #-1.000000000000000000e+00
    3950:	fcmp	d1, d0
    3954:	b.ne	3964 <PyNumber_FloorDivide@plt+0x464>  // b.any
    3958:	bl	3330 <PyErr_Occurred@plt>
    395c:	cmp	x0, #0x0
    3960:	b.ne	3978 <PyNumber_FloorDivide@plt+0x478>  // b.any
    3964:	ldr	d0, [sp, #32]
    3968:	ldr	x0, [sp, #24]
    396c:	bl	7380 <PyNumber_FloorDivide@plt+0x3e80>
    3970:	str	x0, [sp, #40]
    3974:	b	397c <PyNumber_FloorDivide@plt+0x47c>
    3978:	nop
    397c:	ldr	x0, [sp, #40]
    3980:	ldp	x29, x30, [sp], #48
    3984:	ret
    3988:	stp	x29, x30, [sp, #-80]!
    398c:	mov	x29, sp
    3990:	str	x0, [sp, #40]
    3994:	str	x1, [sp, #32]
    3998:	str	x2, [sp, #24]
    399c:	str	xzr, [sp, #72]
    39a0:	ldr	x0, [sp, #24]
    39a4:	cmp	x0, #0x1
    39a8:	b.le	39b8 <PyNumber_FloorDivide@plt+0x4b8>
    39ac:	ldr	x0, [sp, #24]
    39b0:	cmp	x0, #0x2
    39b4:	b.le	39d8 <PyNumber_FloorDivide@plt+0x4d8>
    39b8:	mov	x3, #0x2                   	// #2
    39bc:	mov	x2, #0x2                   	// #2
    39c0:	ldr	x1, [sp, #24]
    39c4:	adrp	x0, 9000 <PyNumber_FloorDivide@plt+0x5b00>
    39c8:	add	x0, x0, #0xb20
    39cc:	bl	3300 <_PyArg_CheckPositional@plt>
    39d0:	cmp	w0, #0x0
    39d4:	b.eq	3a58 <PyNumber_FloorDivide@plt+0x558>  // b.none
    39d8:	ldr	x0, [sp, #32]
    39dc:	ldr	x0, [x0]
    39e0:	ldr	x1, [x0, #8]
    39e4:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    39e8:	ldr	x0, [x0, #3824]
    39ec:	cmp	x1, x0
    39f0:	b.ne	3a08 <PyNumber_FloorDivide@plt+0x508>  // b.any
    39f4:	ldr	x0, [sp, #32]
    39f8:	ldr	x0, [x0]
    39fc:	ldr	d0, [x0, #16]
    3a00:	str	d0, [sp, #64]
    3a04:	b	3a34 <PyNumber_FloorDivide@plt+0x534>
    3a08:	ldr	x0, [sp, #32]
    3a0c:	ldr	x0, [x0]
    3a10:	bl	3360 <PyFloat_AsDouble@plt>
    3a14:	str	d0, [sp, #64]
    3a18:	ldr	d1, [sp, #64]
    3a1c:	fmov	d0, #-1.000000000000000000e+00
    3a20:	fcmp	d1, d0
    3a24:	b.ne	3a34 <PyNumber_FloorDivide@plt+0x534>  // b.any
    3a28:	bl	3330 <PyErr_Occurred@plt>
    3a2c:	cmp	x0, #0x0
    3a30:	b.ne	3a60 <PyNumber_FloorDivide@plt+0x560>  // b.any
    3a34:	ldr	x0, [sp, #32]
    3a38:	ldr	x0, [x0, #8]
    3a3c:	str	x0, [sp, #56]
    3a40:	ldr	x1, [sp, #56]
    3a44:	ldr	d0, [sp, #64]
    3a48:	ldr	x0, [sp, #40]
    3a4c:	bl	7410 <PyNumber_FloorDivide@plt+0x3f10>
    3a50:	str	x0, [sp, #72]
    3a54:	b	3a64 <PyNumber_FloorDivide@plt+0x564>
    3a58:	nop
    3a5c:	b	3a64 <PyNumber_FloorDivide@plt+0x564>
    3a60:	nop
    3a64:	ldr	x0, [sp, #72]
    3a68:	ldp	x29, x30, [sp], #80
    3a6c:	ret
    3a70:	stp	x29, x30, [sp, #-48]!
    3a74:	mov	x29, sp
    3a78:	str	x0, [sp, #24]
    3a7c:	str	x1, [sp, #16]
    3a80:	str	xzr, [sp, #40]
    3a84:	ldr	x0, [sp, #16]
    3a88:	ldr	x1, [x0, #8]
    3a8c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    3a90:	ldr	x0, [x0, #3824]
    3a94:	cmp	x1, x0
    3a98:	b.ne	3aac <PyNumber_FloorDivide@plt+0x5ac>  // b.any
    3a9c:	ldr	x0, [sp, #16]
    3aa0:	ldr	d0, [x0, #16]
    3aa4:	str	d0, [sp, #32]
    3aa8:	b	3ad4 <PyNumber_FloorDivide@plt+0x5d4>
    3aac:	ldr	x0, [sp, #16]
    3ab0:	bl	3360 <PyFloat_AsDouble@plt>
    3ab4:	str	d0, [sp, #32]
    3ab8:	ldr	d1, [sp, #32]
    3abc:	fmov	d0, #-1.000000000000000000e+00
    3ac0:	fcmp	d1, d0
    3ac4:	b.ne	3ad4 <PyNumber_FloorDivide@plt+0x5d4>  // b.any
    3ac8:	bl	3330 <PyErr_Occurred@plt>
    3acc:	cmp	x0, #0x0
    3ad0:	b.ne	3ae8 <PyNumber_FloorDivide@plt+0x5e8>  // b.any
    3ad4:	ldr	d0, [sp, #32]
    3ad8:	ldr	x0, [sp, #24]
    3adc:	bl	75e8 <PyNumber_FloorDivide@plt+0x40e8>
    3ae0:	str	x0, [sp, #40]
    3ae4:	b	3aec <PyNumber_FloorDivide@plt+0x5ec>
    3ae8:	nop
    3aec:	ldr	x0, [sp, #40]
    3af0:	ldp	x29, x30, [sp], #48
    3af4:	ret
    3af8:	stp	x29, x30, [sp, #-64]!
    3afc:	mov	x29, sp
    3b00:	str	x0, [sp, #24]
    3b04:	str	x1, [sp, #16]
    3b08:	str	xzr, [sp, #56]
    3b0c:	str	wzr, [sp, #52]
    3b10:	str	xzr, [sp, #32]
    3b14:	ldr	x0, [sp, #16]
    3b18:	ldr	x0, [x0, #16]
    3b1c:	cmp	x0, #0x1
    3b20:	b.eq	3b30 <PyNumber_FloorDivide@plt+0x630>  // b.none
    3b24:	cmp	x0, #0x2
    3b28:	b.eq	3b54 <PyNumber_FloorDivide@plt+0x654>  // b.none
    3b2c:	b	3b88 <PyNumber_FloorDivide@plt+0x688>
    3b30:	add	x0, sp, #0x28
    3b34:	mov	x2, x0
    3b38:	adrp	x0, 9000 <PyNumber_FloorDivide@plt+0x5b00>
    3b3c:	add	x1, x0, #0xc30
    3b40:	ldr	x0, [sp, #16]
    3b44:	bl	3370 <PyArg_ParseTuple@plt>
    3b48:	cmp	w0, #0x0
    3b4c:	b.ne	3ba8 <PyNumber_FloorDivide@plt+0x6a8>  // b.any
    3b50:	b	3bd4 <PyNumber_FloorDivide@plt+0x6d4>
    3b54:	add	x1, sp, #0x20
    3b58:	add	x0, sp, #0x28
    3b5c:	mov	x3, x1
    3b60:	mov	x2, x0
    3b64:	adrp	x0, 9000 <PyNumber_FloorDivide@plt+0x5b00>
    3b68:	add	x1, x0, #0xc38
    3b6c:	ldr	x0, [sp, #16]
    3b70:	bl	3370 <PyArg_ParseTuple@plt>
    3b74:	cmp	w0, #0x0
    3b78:	b.eq	3bd0 <PyNumber_FloorDivide@plt+0x6d0>  // b.none
    3b7c:	mov	w0, #0x1                   	// #1
    3b80:	str	w0, [sp, #52]
    3b84:	b	3bac <PyNumber_FloorDivide@plt+0x6ac>
    3b88:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    3b8c:	ldr	x0, [x0, #3888]
    3b90:	ldr	x2, [x0]
    3b94:	adrp	x0, 9000 <PyNumber_FloorDivide@plt+0x5b00>
    3b98:	add	x1, x0, #0xc40
    3b9c:	mov	x0, x2
    3ba0:	bl	31b0 <PyErr_SetString@plt>
    3ba4:	b	3bd4 <PyNumber_FloorDivide@plt+0x6d4>
    3ba8:	nop
    3bac:	ldr	x0, [sp, #40]
    3bb0:	ldr	x1, [sp, #32]
    3bb4:	mov	x3, x1
    3bb8:	ldr	w2, [sp, #52]
    3bbc:	mov	x1, x0
    3bc0:	ldr	x0, [sp, #24]
    3bc4:	bl	7814 <PyNumber_FloorDivide@plt+0x4314>
    3bc8:	str	x0, [sp, #56]
    3bcc:	b	3bd4 <PyNumber_FloorDivide@plt+0x6d4>
    3bd0:	nop
    3bd4:	ldr	x0, [sp, #56]
    3bd8:	ldp	x29, x30, [sp], #64
    3bdc:	ret
    3be0:	stp	x29, x30, [sp, #-80]!
    3be4:	mov	x29, sp
    3be8:	str	x0, [sp, #40]
    3bec:	str	x1, [sp, #32]
    3bf0:	str	x2, [sp, #24]
    3bf4:	str	xzr, [sp, #72]
    3bf8:	ldr	x0, [sp, #24]
    3bfc:	cmp	x0, #0x1
    3c00:	b.le	3c10 <PyNumber_FloorDivide@plt+0x710>
    3c04:	ldr	x0, [sp, #24]
    3c08:	cmp	x0, #0x2
    3c0c:	b.le	3c30 <PyNumber_FloorDivide@plt+0x730>
    3c10:	mov	x3, #0x2                   	// #2
    3c14:	mov	x2, #0x2                   	// #2
    3c18:	ldr	x1, [sp, #24]
    3c1c:	adrp	x0, 9000 <PyNumber_FloorDivide@plt+0x5b00>
    3c20:	add	x0, x0, #0xd48
    3c24:	bl	3300 <_PyArg_CheckPositional@plt>
    3c28:	cmp	w0, #0x0
    3c2c:	b.eq	3d0c <PyNumber_FloorDivide@plt+0x80c>  // b.none
    3c30:	ldr	x0, [sp, #32]
    3c34:	ldr	x0, [x0]
    3c38:	ldr	x1, [x0, #8]
    3c3c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    3c40:	ldr	x0, [x0, #3824]
    3c44:	cmp	x1, x0
    3c48:	b.ne	3c60 <PyNumber_FloorDivide@plt+0x760>  // b.any
    3c4c:	ldr	x0, [sp, #32]
    3c50:	ldr	x0, [x0]
    3c54:	ldr	d0, [x0, #16]
    3c58:	str	d0, [sp, #64]
    3c5c:	b	3c8c <PyNumber_FloorDivide@plt+0x78c>
    3c60:	ldr	x0, [sp, #32]
    3c64:	ldr	x0, [x0]
    3c68:	bl	3360 <PyFloat_AsDouble@plt>
    3c6c:	str	d0, [sp, #64]
    3c70:	ldr	d1, [sp, #64]
    3c74:	fmov	d0, #-1.000000000000000000e+00
    3c78:	fcmp	d1, d0
    3c7c:	b.ne	3c8c <PyNumber_FloorDivide@plt+0x78c>  // b.any
    3c80:	bl	3330 <PyErr_Occurred@plt>
    3c84:	cmp	x0, #0x0
    3c88:	b.ne	3d14 <PyNumber_FloorDivide@plt+0x814>  // b.any
    3c8c:	ldr	x0, [sp, #32]
    3c90:	add	x0, x0, #0x8
    3c94:	ldr	x0, [x0]
    3c98:	ldr	x1, [x0, #8]
    3c9c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    3ca0:	ldr	x0, [x0, #3824]
    3ca4:	cmp	x1, x0
    3ca8:	b.ne	3cc4 <PyNumber_FloorDivide@plt+0x7c4>  // b.any
    3cac:	ldr	x0, [sp, #32]
    3cb0:	add	x0, x0, #0x8
    3cb4:	ldr	x0, [x0]
    3cb8:	ldr	d0, [x0, #16]
    3cbc:	str	d0, [sp, #56]
    3cc0:	b	3cf4 <PyNumber_FloorDivide@plt+0x7f4>
    3cc4:	ldr	x0, [sp, #32]
    3cc8:	add	x0, x0, #0x8
    3ccc:	ldr	x0, [x0]
    3cd0:	bl	3360 <PyFloat_AsDouble@plt>
    3cd4:	str	d0, [sp, #56]
    3cd8:	ldr	d1, [sp, #56]
    3cdc:	fmov	d0, #-1.000000000000000000e+00
    3ce0:	fcmp	d1, d0
    3ce4:	b.ne	3cf4 <PyNumber_FloorDivide@plt+0x7f4>  // b.any
    3ce8:	bl	3330 <PyErr_Occurred@plt>
    3cec:	cmp	x0, #0x0
    3cf0:	b.ne	3d1c <PyNumber_FloorDivide@plt+0x81c>  // b.any
    3cf4:	ldr	d1, [sp, #56]
    3cf8:	ldr	d0, [sp, #64]
    3cfc:	ldr	x0, [sp, #40]
    3d00:	bl	7950 <PyNumber_FloorDivide@plt+0x4450>
    3d04:	str	x0, [sp, #72]
    3d08:	b	3d20 <PyNumber_FloorDivide@plt+0x820>
    3d0c:	nop
    3d10:	b	3d20 <PyNumber_FloorDivide@plt+0x820>
    3d14:	nop
    3d18:	b	3d20 <PyNumber_FloorDivide@plt+0x820>
    3d1c:	nop
    3d20:	ldr	x0, [sp, #72]
    3d24:	ldp	x29, x30, [sp], #80
    3d28:	ret
    3d2c:	stp	x29, x30, [sp, #-80]!
    3d30:	mov	x29, sp
    3d34:	str	x0, [sp, #40]
    3d38:	str	x1, [sp, #32]
    3d3c:	str	x2, [sp, #24]
    3d40:	str	xzr, [sp, #72]
    3d44:	ldr	x0, [sp, #24]
    3d48:	cmp	x0, #0x1
    3d4c:	b.le	3d5c <PyNumber_FloorDivide@plt+0x85c>
    3d50:	ldr	x0, [sp, #24]
    3d54:	cmp	x0, #0x2
    3d58:	b.le	3d7c <PyNumber_FloorDivide@plt+0x87c>
    3d5c:	mov	x3, #0x2                   	// #2
    3d60:	mov	x2, #0x2                   	// #2
    3d64:	ldr	x1, [sp, #24]
    3d68:	adrp	x0, 9000 <PyNumber_FloorDivide@plt+0x5b00>
    3d6c:	add	x0, x0, #0xe70
    3d70:	bl	3300 <_PyArg_CheckPositional@plt>
    3d74:	cmp	w0, #0x0
    3d78:	b.eq	3dac <PyNumber_FloorDivide@plt+0x8ac>  // b.none
    3d7c:	ldr	x0, [sp, #32]
    3d80:	ldr	x0, [x0]
    3d84:	str	x0, [sp, #64]
    3d88:	ldr	x0, [sp, #32]
    3d8c:	ldr	x0, [x0, #8]
    3d90:	str	x0, [sp, #56]
    3d94:	ldr	x2, [sp, #56]
    3d98:	ldr	x1, [sp, #64]
    3d9c:	ldr	x0, [sp, #40]
    3da0:	bl	7bb0 <PyNumber_FloorDivide@plt+0x46b0>
    3da4:	str	x0, [sp, #72]
    3da8:	b	3db0 <PyNumber_FloorDivide@plt+0x8b0>
    3dac:	nop
    3db0:	ldr	x0, [sp, #72]
    3db4:	ldp	x29, x30, [sp], #80
    3db8:	ret
    3dbc:	stp	x29, x30, [sp, #-80]!
    3dc0:	mov	x29, sp
    3dc4:	str	x0, [sp, #40]
    3dc8:	str	x1, [sp, #32]
    3dcc:	str	x2, [sp, #24]
    3dd0:	str	xzr, [sp, #72]
    3dd4:	ldr	x0, [sp, #24]
    3dd8:	cmp	x0, #0x1
    3ddc:	b.le	3dec <PyNumber_FloorDivide@plt+0x8ec>
    3de0:	ldr	x0, [sp, #24]
    3de4:	cmp	x0, #0x2
    3de8:	b.le	3e0c <PyNumber_FloorDivide@plt+0x90c>
    3dec:	mov	x3, #0x2                   	// #2
    3df0:	mov	x2, #0x2                   	// #2
    3df4:	ldr	x1, [sp, #24]
    3df8:	adrp	x0, 9000 <PyNumber_FloorDivide@plt+0x5b00>
    3dfc:	add	x0, x0, #0xeb8
    3e00:	bl	3300 <_PyArg_CheckPositional@plt>
    3e04:	cmp	w0, #0x0
    3e08:	b.eq	3ee8 <PyNumber_FloorDivide@plt+0x9e8>  // b.none
    3e0c:	ldr	x0, [sp, #32]
    3e10:	ldr	x0, [x0]
    3e14:	ldr	x1, [x0, #8]
    3e18:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    3e1c:	ldr	x0, [x0, #3824]
    3e20:	cmp	x1, x0
    3e24:	b.ne	3e3c <PyNumber_FloorDivide@plt+0x93c>  // b.any
    3e28:	ldr	x0, [sp, #32]
    3e2c:	ldr	x0, [x0]
    3e30:	ldr	d0, [x0, #16]
    3e34:	str	d0, [sp, #64]
    3e38:	b	3e68 <PyNumber_FloorDivide@plt+0x968>
    3e3c:	ldr	x0, [sp, #32]
    3e40:	ldr	x0, [x0]
    3e44:	bl	3360 <PyFloat_AsDouble@plt>
    3e48:	str	d0, [sp, #64]
    3e4c:	ldr	d1, [sp, #64]
    3e50:	fmov	d0, #-1.000000000000000000e+00
    3e54:	fcmp	d1, d0
    3e58:	b.ne	3e68 <PyNumber_FloorDivide@plt+0x968>  // b.any
    3e5c:	bl	3330 <PyErr_Occurred@plt>
    3e60:	cmp	x0, #0x0
    3e64:	b.ne	3ef0 <PyNumber_FloorDivide@plt+0x9f0>  // b.any
    3e68:	ldr	x0, [sp, #32]
    3e6c:	add	x0, x0, #0x8
    3e70:	ldr	x0, [x0]
    3e74:	ldr	x1, [x0, #8]
    3e78:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    3e7c:	ldr	x0, [x0, #3824]
    3e80:	cmp	x1, x0
    3e84:	b.ne	3ea0 <PyNumber_FloorDivide@plt+0x9a0>  // b.any
    3e88:	ldr	x0, [sp, #32]
    3e8c:	add	x0, x0, #0x8
    3e90:	ldr	x0, [x0]
    3e94:	ldr	d0, [x0, #16]
    3e98:	str	d0, [sp, #56]
    3e9c:	b	3ed0 <PyNumber_FloorDivide@plt+0x9d0>
    3ea0:	ldr	x0, [sp, #32]
    3ea4:	add	x0, x0, #0x8
    3ea8:	ldr	x0, [x0]
    3eac:	bl	3360 <PyFloat_AsDouble@plt>
    3eb0:	str	d0, [sp, #56]
    3eb4:	ldr	d1, [sp, #56]
    3eb8:	fmov	d0, #-1.000000000000000000e+00
    3ebc:	fcmp	d1, d0
    3ec0:	b.ne	3ed0 <PyNumber_FloorDivide@plt+0x9d0>  // b.any
    3ec4:	bl	3330 <PyErr_Occurred@plt>
    3ec8:	cmp	x0, #0x0
    3ecc:	b.ne	3ef8 <PyNumber_FloorDivide@plt+0x9f8>  // b.any
    3ed0:	ldr	d1, [sp, #56]
    3ed4:	ldr	d0, [sp, #64]
    3ed8:	ldr	x0, [sp, #40]
    3edc:	bl	81b8 <PyNumber_FloorDivide@plt+0x4cb8>
    3ee0:	str	x0, [sp, #72]
    3ee4:	b	3efc <PyNumber_FloorDivide@plt+0x9fc>
    3ee8:	nop
    3eec:	b	3efc <PyNumber_FloorDivide@plt+0x9fc>
    3ef0:	nop
    3ef4:	b	3efc <PyNumber_FloorDivide@plt+0x9fc>
    3ef8:	nop
    3efc:	ldr	x0, [sp, #72]
    3f00:	ldp	x29, x30, [sp], #80
    3f04:	ret
    3f08:	stp	x29, x30, [sp, #-48]!
    3f0c:	mov	x29, sp
    3f10:	str	x0, [sp, #24]
    3f14:	str	x1, [sp, #16]
    3f18:	str	xzr, [sp, #40]
    3f1c:	ldr	x0, [sp, #16]
    3f20:	ldr	x1, [x0, #8]
    3f24:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    3f28:	ldr	x0, [x0, #3824]
    3f2c:	cmp	x1, x0
    3f30:	b.ne	3f44 <PyNumber_FloorDivide@plt+0xa44>  // b.any
    3f34:	ldr	x0, [sp, #16]
    3f38:	ldr	d0, [x0, #16]
    3f3c:	str	d0, [sp, #32]
    3f40:	b	3f6c <PyNumber_FloorDivide@plt+0xa6c>
    3f44:	ldr	x0, [sp, #16]
    3f48:	bl	3360 <PyFloat_AsDouble@plt>
    3f4c:	str	d0, [sp, #32]
    3f50:	ldr	d1, [sp, #32]
    3f54:	fmov	d0, #-1.000000000000000000e+00
    3f58:	fcmp	d1, d0
    3f5c:	b.ne	3f6c <PyNumber_FloorDivide@plt+0xa6c>  // b.any
    3f60:	bl	3330 <PyErr_Occurred@plt>
    3f64:	cmp	x0, #0x0
    3f68:	b.ne	3f80 <PyNumber_FloorDivide@plt+0xa80>  // b.any
    3f6c:	ldr	d0, [sp, #32]
    3f70:	ldr	x0, [sp, #24]
    3f74:	bl	8524 <PyNumber_FloorDivide@plt+0x5024>
    3f78:	str	x0, [sp, #40]
    3f7c:	b	3f84 <PyNumber_FloorDivide@plt+0xa84>
    3f80:	nop
    3f84:	ldr	x0, [sp, #40]
    3f88:	ldp	x29, x30, [sp], #48
    3f8c:	ret
    3f90:	stp	x29, x30, [sp, #-48]!
    3f94:	mov	x29, sp
    3f98:	str	x0, [sp, #24]
    3f9c:	str	x1, [sp, #16]
    3fa0:	str	xzr, [sp, #40]
    3fa4:	ldr	x0, [sp, #16]
    3fa8:	ldr	x1, [x0, #8]
    3fac:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    3fb0:	ldr	x0, [x0, #3824]
    3fb4:	cmp	x1, x0
    3fb8:	b.ne	3fcc <PyNumber_FloorDivide@plt+0xacc>  // b.any
    3fbc:	ldr	x0, [sp, #16]
    3fc0:	ldr	d0, [x0, #16]
    3fc4:	str	d0, [sp, #32]
    3fc8:	b	3ff4 <PyNumber_FloorDivide@plt+0xaf4>
    3fcc:	ldr	x0, [sp, #16]
    3fd0:	bl	3360 <PyFloat_AsDouble@plt>
    3fd4:	str	d0, [sp, #32]
    3fd8:	ldr	d1, [sp, #32]
    3fdc:	fmov	d0, #-1.000000000000000000e+00
    3fe0:	fcmp	d1, d0
    3fe4:	b.ne	3ff4 <PyNumber_FloorDivide@plt+0xaf4>  // b.any
    3fe8:	bl	3330 <PyErr_Occurred@plt>
    3fec:	cmp	x0, #0x0
    3ff0:	b.ne	4008 <PyNumber_FloorDivide@plt+0xb08>  // b.any
    3ff4:	ldr	d0, [sp, #32]
    3ff8:	ldr	x0, [sp, #24]
    3ffc:	bl	8550 <PyNumber_FloorDivide@plt+0x5050>
    4000:	str	x0, [sp, #40]
    4004:	b	400c <PyNumber_FloorDivide@plt+0xb0c>
    4008:	nop
    400c:	ldr	x0, [sp, #40]
    4010:	ldp	x29, x30, [sp], #48
    4014:	ret
    4018:	stp	x29, x30, [sp, #-48]!
    401c:	mov	x29, sp
    4020:	str	x0, [sp, #24]
    4024:	str	x1, [sp, #16]
    4028:	str	xzr, [sp, #40]
    402c:	ldr	x0, [sp, #16]
    4030:	ldr	x1, [x0, #8]
    4034:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    4038:	ldr	x0, [x0, #3824]
    403c:	cmp	x1, x0
    4040:	b.ne	4054 <PyNumber_FloorDivide@plt+0xb54>  // b.any
    4044:	ldr	x0, [sp, #16]
    4048:	ldr	d0, [x0, #16]
    404c:	str	d0, [sp, #32]
    4050:	b	407c <PyNumber_FloorDivide@plt+0xb7c>
    4054:	ldr	x0, [sp, #16]
    4058:	bl	3360 <PyFloat_AsDouble@plt>
    405c:	str	d0, [sp, #32]
    4060:	ldr	d1, [sp, #32]
    4064:	fmov	d0, #-1.000000000000000000e+00
    4068:	fcmp	d1, d0
    406c:	b.ne	407c <PyNumber_FloorDivide@plt+0xb7c>  // b.any
    4070:	bl	3330 <PyErr_Occurred@plt>
    4074:	cmp	x0, #0x0
    4078:	b.ne	4090 <PyNumber_FloorDivide@plt+0xb90>  // b.any
    407c:	ldr	d0, [sp, #32]
    4080:	ldr	x0, [sp, #24]
    4084:	bl	857c <PyNumber_FloorDivide@plt+0x507c>
    4088:	str	x0, [sp, #40]
    408c:	b	4094 <PyNumber_FloorDivide@plt+0xb94>
    4090:	nop
    4094:	ldr	x0, [sp, #40]
    4098:	ldp	x29, x30, [sp], #48
    409c:	ret
    40a0:	stp	x29, x30, [sp, #-48]!
    40a4:	mov	x29, sp
    40a8:	str	x0, [sp, #24]
    40ac:	str	x1, [sp, #16]
    40b0:	str	xzr, [sp, #40]
    40b4:	ldr	x0, [sp, #16]
    40b8:	ldr	x1, [x0, #8]
    40bc:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    40c0:	ldr	x0, [x0, #3824]
    40c4:	cmp	x1, x0
    40c8:	b.ne	40dc <PyNumber_FloorDivide@plt+0xbdc>  // b.any
    40cc:	ldr	x0, [sp, #16]
    40d0:	ldr	d0, [x0, #16]
    40d4:	str	d0, [sp, #32]
    40d8:	b	4104 <PyNumber_FloorDivide@plt+0xc04>
    40dc:	ldr	x0, [sp, #16]
    40e0:	bl	3360 <PyFloat_AsDouble@plt>
    40e4:	str	d0, [sp, #32]
    40e8:	ldr	d1, [sp, #32]
    40ec:	fmov	d0, #-1.000000000000000000e+00
    40f0:	fcmp	d1, d0
    40f4:	b.ne	4104 <PyNumber_FloorDivide@plt+0xc04>  // b.any
    40f8:	bl	3330 <PyErr_Occurred@plt>
    40fc:	cmp	x0, #0x0
    4100:	b.ne	4118 <PyNumber_FloorDivide@plt+0xc18>  // b.any
    4104:	ldr	d0, [sp, #32]
    4108:	ldr	x0, [sp, #24]
    410c:	bl	85c0 <PyNumber_FloorDivide@plt+0x50c0>
    4110:	str	x0, [sp, #40]
    4114:	b	411c <PyNumber_FloorDivide@plt+0xc1c>
    4118:	nop
    411c:	ldr	x0, [sp, #40]
    4120:	ldp	x29, x30, [sp], #48
    4124:	ret
    4128:	stp	x29, x30, [sp, #-48]!
    412c:	mov	x29, sp
    4130:	str	x0, [sp, #24]
    4134:	str	x1, [sp, #16]
    4138:	str	xzr, [sp, #40]
    413c:	ldr	x0, [sp, #16]
    4140:	ldr	x1, [x0, #8]
    4144:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    4148:	ldr	x0, [x0, #3824]
    414c:	cmp	x1, x0
    4150:	b.ne	4164 <PyNumber_FloorDivide@plt+0xc64>  // b.any
    4154:	ldr	x0, [sp, #16]
    4158:	ldr	d0, [x0, #16]
    415c:	str	d0, [sp, #32]
    4160:	b	418c <PyNumber_FloorDivide@plt+0xc8c>
    4164:	ldr	x0, [sp, #16]
    4168:	bl	3360 <PyFloat_AsDouble@plt>
    416c:	str	d0, [sp, #32]
    4170:	ldr	d1, [sp, #32]
    4174:	fmov	d0, #-1.000000000000000000e+00
    4178:	fcmp	d1, d0
    417c:	b.ne	418c <PyNumber_FloorDivide@plt+0xc8c>  // b.any
    4180:	bl	3330 <PyErr_Occurred@plt>
    4184:	cmp	x0, #0x0
    4188:	b.ne	41a0 <PyNumber_FloorDivide@plt+0xca0>  // b.any
    418c:	ldr	d0, [sp, #32]
    4190:	ldr	x0, [sp, #24]
    4194:	bl	85f4 <PyNumber_FloorDivide@plt+0x50f4>
    4198:	str	x0, [sp, #40]
    419c:	b	41a4 <PyNumber_FloorDivide@plt+0xca4>
    41a0:	nop
    41a4:	ldr	x0, [sp, #40]
    41a8:	ldp	x29, x30, [sp], #48
    41ac:	ret
    41b0:	sub	sp, sp, #0xa0
    41b4:	stp	x29, x30, [sp, #16]
    41b8:	add	x29, sp, #0x10
    41bc:	str	x0, [sp, #56]
    41c0:	str	x1, [sp, #48]
    41c4:	str	x2, [sp, #40]
    41c8:	str	x3, [sp, #32]
    41cc:	str	xzr, [sp, #152]
    41d0:	ldr	x0, [sp, #32]
    41d4:	cmp	x0, #0x0
    41d8:	b.eq	41e8 <PyNumber_FloorDivide@plt+0xce8>  // b.none
    41dc:	ldr	x0, [sp, #32]
    41e0:	ldr	x0, [x0, #16]
    41e4:	b	41ec <PyNumber_FloorDivide@plt+0xcec>
    41e8:	mov	x0, #0x0                   	// #0
    41ec:	ldr	x1, [sp, #40]
    41f0:	add	x0, x0, x1
    41f4:	sub	x0, x0, #0x2
    41f8:	str	x0, [sp, #112]
    41fc:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    4200:	ldr	d0, [x0, #2440]
    4204:	str	d0, [sp, #128]
    4208:	str	xzr, [sp, #120]
    420c:	ldr	x0, [sp, #32]
    4210:	cmp	x0, #0x0
    4214:	b.ne	423c <PyNumber_FloorDivide@plt+0xd3c>  // b.any
    4218:	ldr	x0, [sp, #40]
    421c:	cmp	x0, #0x1
    4220:	b.le	423c <PyNumber_FloorDivide@plt+0xd3c>
    4224:	ldr	x0, [sp, #40]
    4228:	cmp	x0, #0x2
    422c:	b.gt	423c <PyNumber_FloorDivide@plt+0xd3c>
    4230:	ldr	x0, [sp, #48]
    4234:	cmp	x0, #0x0
    4238:	b.ne	4270 <PyNumber_FloorDivide@plt+0xd70>  // b.any
    423c:	add	x0, sp, #0x48
    4240:	str	x0, [sp]
    4244:	mov	w7, #0x0                   	// #0
    4248:	mov	w6, #0x2                   	// #2
    424c:	mov	w5, #0x2                   	// #2
    4250:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    4254:	add	x4, x0, #0x940
    4258:	ldr	x3, [sp, #32]
    425c:	mov	x2, #0x0                   	// #0
    4260:	ldr	x1, [sp, #40]
    4264:	ldr	x0, [sp, #48]
    4268:	bl	31a0 <_PyArg_UnpackKeywords@plt>
    426c:	b	4274 <PyNumber_FloorDivide@plt+0xd74>
    4270:	ldr	x0, [sp, #48]
    4274:	str	x0, [sp, #48]
    4278:	ldr	x0, [sp, #48]
    427c:	cmp	x0, #0x0
    4280:	b.eq	44ac <PyNumber_FloorDivide@plt+0xfac>  // b.none
    4284:	ldr	x0, [sp, #48]
    4288:	ldr	x0, [x0]
    428c:	ldr	x1, [x0, #8]
    4290:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    4294:	ldr	x0, [x0, #3824]
    4298:	cmp	x1, x0
    429c:	b.ne	42b4 <PyNumber_FloorDivide@plt+0xdb4>  // b.any
    42a0:	ldr	x0, [sp, #48]
    42a4:	ldr	x0, [x0]
    42a8:	ldr	d0, [x0, #16]
    42ac:	str	d0, [sp, #144]
    42b0:	b	42e0 <PyNumber_FloorDivide@plt+0xde0>
    42b4:	ldr	x0, [sp, #48]
    42b8:	ldr	x0, [x0]
    42bc:	bl	3360 <PyFloat_AsDouble@plt>
    42c0:	str	d0, [sp, #144]
    42c4:	ldr	d1, [sp, #144]
    42c8:	fmov	d0, #-1.000000000000000000e+00
    42cc:	fcmp	d1, d0
    42d0:	b.ne	42e0 <PyNumber_FloorDivide@plt+0xde0>  // b.any
    42d4:	bl	3330 <PyErr_Occurred@plt>
    42d8:	cmp	x0, #0x0
    42dc:	b.ne	44b4 <PyNumber_FloorDivide@plt+0xfb4>  // b.any
    42e0:	ldr	x0, [sp, #48]
    42e4:	add	x0, x0, #0x8
    42e8:	ldr	x0, [x0]
    42ec:	ldr	x1, [x0, #8]
    42f0:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    42f4:	ldr	x0, [x0, #3824]
    42f8:	cmp	x1, x0
    42fc:	b.ne	4318 <PyNumber_FloorDivide@plt+0xe18>  // b.any
    4300:	ldr	x0, [sp, #48]
    4304:	add	x0, x0, #0x8
    4308:	ldr	x0, [x0]
    430c:	ldr	d0, [x0, #16]
    4310:	str	d0, [sp, #136]
    4314:	b	4348 <PyNumber_FloorDivide@plt+0xe48>
    4318:	ldr	x0, [sp, #48]
    431c:	add	x0, x0, #0x8
    4320:	ldr	x0, [x0]
    4324:	bl	3360 <PyFloat_AsDouble@plt>
    4328:	str	d0, [sp, #136]
    432c:	ldr	d1, [sp, #136]
    4330:	fmov	d0, #-1.000000000000000000e+00
    4334:	fcmp	d1, d0
    4338:	b.ne	4348 <PyNumber_FloorDivide@plt+0xe48>  // b.any
    433c:	bl	3330 <PyErr_Occurred@plt>
    4340:	cmp	x0, #0x0
    4344:	b.ne	44bc <PyNumber_FloorDivide@plt+0xfbc>  // b.any
    4348:	ldr	x0, [sp, #112]
    434c:	cmp	x0, #0x0
    4350:	b.eq	4454 <PyNumber_FloorDivide@plt+0xf54>  // b.none
    4354:	ldr	x0, [sp, #48]
    4358:	add	x0, x0, #0x10
    435c:	ldr	x0, [x0]
    4360:	cmp	x0, #0x0
    4364:	b.eq	43e8 <PyNumber_FloorDivide@plt+0xee8>  // b.none
    4368:	ldr	x0, [sp, #48]
    436c:	add	x0, x0, #0x10
    4370:	ldr	x0, [x0]
    4374:	ldr	x1, [x0, #8]
    4378:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    437c:	ldr	x0, [x0, #3824]
    4380:	cmp	x1, x0
    4384:	b.ne	43a0 <PyNumber_FloorDivide@plt+0xea0>  // b.any
    4388:	ldr	x0, [sp, #48]
    438c:	add	x0, x0, #0x10
    4390:	ldr	x0, [x0]
    4394:	ldr	d0, [x0, #16]
    4398:	str	d0, [sp, #128]
    439c:	b	43d0 <PyNumber_FloorDivide@plt+0xed0>
    43a0:	ldr	x0, [sp, #48]
    43a4:	add	x0, x0, #0x10
    43a8:	ldr	x0, [x0]
    43ac:	bl	3360 <PyFloat_AsDouble@plt>
    43b0:	str	d0, [sp, #128]
    43b4:	ldr	d1, [sp, #128]
    43b8:	fmov	d0, #-1.000000000000000000e+00
    43bc:	fcmp	d1, d0
    43c0:	b.ne	43d0 <PyNumber_FloorDivide@plt+0xed0>  // b.any
    43c4:	bl	3330 <PyErr_Occurred@plt>
    43c8:	cmp	x0, #0x0
    43cc:	b.ne	44c4 <PyNumber_FloorDivide@plt+0xfc4>  // b.any
    43d0:	ldr	x0, [sp, #112]
    43d4:	sub	x0, x0, #0x1
    43d8:	str	x0, [sp, #112]
    43dc:	ldr	x0, [sp, #112]
    43e0:	cmp	x0, #0x0
    43e4:	b.eq	445c <PyNumber_FloorDivide@plt+0xf5c>  // b.none
    43e8:	ldr	x0, [sp, #48]
    43ec:	add	x0, x0, #0x18
    43f0:	ldr	x0, [x0]
    43f4:	ldr	x1, [x0, #8]
    43f8:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    43fc:	ldr	x0, [x0, #3824]
    4400:	cmp	x1, x0
    4404:	b.ne	4420 <PyNumber_FloorDivide@plt+0xf20>  // b.any
    4408:	ldr	x0, [sp, #48]
    440c:	add	x0, x0, #0x18
    4410:	ldr	x0, [x0]
    4414:	ldr	d0, [x0, #16]
    4418:	str	d0, [sp, #120]
    441c:	b	4468 <PyNumber_FloorDivide@plt+0xf68>
    4420:	ldr	x0, [sp, #48]
    4424:	add	x0, x0, #0x18
    4428:	ldr	x0, [x0]
    442c:	bl	3360 <PyFloat_AsDouble@plt>
    4430:	str	d0, [sp, #120]
    4434:	ldr	d1, [sp, #120]
    4438:	fmov	d0, #-1.000000000000000000e+00
    443c:	fcmp	d1, d0
    4440:	b.ne	4464 <PyNumber_FloorDivide@plt+0xf64>  // b.any
    4444:	bl	3330 <PyErr_Occurred@plt>
    4448:	cmp	x0, #0x0
    444c:	b.ne	44cc <PyNumber_FloorDivide@plt+0xfcc>  // b.any
    4450:	b	4464 <PyNumber_FloorDivide@plt+0xf64>
    4454:	nop
    4458:	b	4468 <PyNumber_FloorDivide@plt+0xf68>
    445c:	nop
    4460:	b	4468 <PyNumber_FloorDivide@plt+0xf68>
    4464:	nop
    4468:	ldr	d3, [sp, #120]
    446c:	ldr	d2, [sp, #128]
    4470:	ldr	d1, [sp, #136]
    4474:	ldr	d0, [sp, #144]
    4478:	ldr	x0, [sp, #56]
    447c:	bl	8650 <PyNumber_FloorDivide@plt+0x5150>
    4480:	str	w0, [sp, #108]
    4484:	ldr	w0, [sp, #108]
    4488:	cmn	w0, #0x1
    448c:	b.ne	449c <PyNumber_FloorDivide@plt+0xf9c>  // b.any
    4490:	bl	3330 <PyErr_Occurred@plt>
    4494:	cmp	x0, #0x0
    4498:	b.ne	44d4 <PyNumber_FloorDivide@plt+0xfd4>  // b.any
    449c:	ldrsw	x0, [sp, #108]
    44a0:	bl	32a0 <PyBool_FromLong@plt>
    44a4:	str	x0, [sp, #152]
    44a8:	b	44d8 <PyNumber_FloorDivide@plt+0xfd8>
    44ac:	nop
    44b0:	b	44d8 <PyNumber_FloorDivide@plt+0xfd8>
    44b4:	nop
    44b8:	b	44d8 <PyNumber_FloorDivide@plt+0xfd8>
    44bc:	nop
    44c0:	b	44d8 <PyNumber_FloorDivide@plt+0xfd8>
    44c4:	nop
    44c8:	b	44d8 <PyNumber_FloorDivide@plt+0xfd8>
    44cc:	nop
    44d0:	b	44d8 <PyNumber_FloorDivide@plt+0xfd8>
    44d4:	nop
    44d8:	ldr	x0, [sp, #152]
    44dc:	ldp	x29, x30, [sp, #16]
    44e0:	add	sp, sp, #0xa0
    44e4:	ret
    44e8:	sub	sp, sp, #0x70
    44ec:	stp	x29, x30, [sp, #16]
    44f0:	add	x29, sp, #0x10
    44f4:	str	x0, [sp, #56]
    44f8:	str	x1, [sp, #48]
    44fc:	str	x2, [sp, #40]
    4500:	str	x3, [sp, #32]
    4504:	str	xzr, [sp, #104]
    4508:	ldr	x0, [sp, #32]
    450c:	cmp	x0, #0x0
    4510:	b.eq	4520 <PyNumber_FloorDivide@plt+0x1020>  // b.none
    4514:	ldr	x0, [sp, #32]
    4518:	ldr	x0, [x0, #16]
    451c:	b	4524 <PyNumber_FloorDivide@plt+0x1024>
    4520:	mov	x0, #0x0                   	// #0
    4524:	ldr	x1, [sp, #40]
    4528:	add	x0, x0, x1
    452c:	sub	x0, x0, #0x1
    4530:	str	x0, [sp, #88]
    4534:	str	xzr, [sp, #96]
    4538:	ldr	x0, [sp, #32]
    453c:	cmp	x0, #0x0
    4540:	b.ne	4568 <PyNumber_FloorDivide@plt+0x1068>  // b.any
    4544:	ldr	x0, [sp, #40]
    4548:	cmp	x0, #0x0
    454c:	b.le	4568 <PyNumber_FloorDivide@plt+0x1068>
    4550:	ldr	x0, [sp, #40]
    4554:	cmp	x0, #0x1
    4558:	b.gt	4568 <PyNumber_FloorDivide@plt+0x1068>
    455c:	ldr	x0, [sp, #48]
    4560:	cmp	x0, #0x0
    4564:	b.ne	459c <PyNumber_FloorDivide@plt+0x109c>  // b.any
    4568:	add	x0, sp, #0x40
    456c:	str	x0, [sp]
    4570:	mov	w7, #0x0                   	// #0
    4574:	mov	w6, #0x1                   	// #1
    4578:	mov	w5, #0x1                   	// #1
    457c:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    4580:	add	x4, x0, #0x980
    4584:	ldr	x3, [sp, #32]
    4588:	mov	x2, #0x0                   	// #0
    458c:	ldr	x1, [sp, #40]
    4590:	ldr	x0, [sp, #48]
    4594:	bl	31a0 <_PyArg_UnpackKeywords@plt>
    4598:	b	45a0 <PyNumber_FloorDivide@plt+0x10a0>
    459c:	ldr	x0, [sp, #48]
    45a0:	str	x0, [sp, #48]
    45a4:	ldr	x0, [sp, #48]
    45a8:	cmp	x0, #0x0
    45ac:	b.eq	45f4 <PyNumber_FloorDivide@plt+0x10f4>  // b.none
    45b0:	ldr	x0, [sp, #48]
    45b4:	ldr	x0, [x0]
    45b8:	str	x0, [sp, #80]
    45bc:	ldr	x0, [sp, #88]
    45c0:	cmp	x0, #0x0
    45c4:	b.eq	45d8 <PyNumber_FloorDivide@plt+0x10d8>  // b.none
    45c8:	ldr	x0, [sp, #48]
    45cc:	ldr	x0, [x0, #8]
    45d0:	str	x0, [sp, #96]
    45d4:	b	45dc <PyNumber_FloorDivide@plt+0x10dc>
    45d8:	nop
    45dc:	ldr	x2, [sp, #96]
    45e0:	ldr	x1, [sp, #80]
    45e4:	ldr	x0, [sp, #56]
    45e8:	bl	886c <PyNumber_FloorDivide@plt+0x536c>
    45ec:	str	x0, [sp, #104]
    45f0:	b	45f8 <PyNumber_FloorDivide@plt+0x10f8>
    45f4:	nop
    45f8:	ldr	x0, [sp, #104]
    45fc:	ldp	x29, x30, [sp, #16]
    4600:	add	sp, sp, #0x70
    4604:	ret
    4608:	stp	x29, x30, [sp, #-80]!
    460c:	mov	x29, sp
    4610:	str	x0, [sp, #40]
    4614:	str	x1, [sp, #32]
    4618:	str	x2, [sp, #24]
    461c:	str	xzr, [sp, #72]
    4620:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    4624:	ldr	x0, [x0, #3960]
    4628:	str	x0, [sp, #64]
    462c:	ldr	x0, [sp, #24]
    4630:	cmp	x0, #0x0
    4634:	b.le	4644 <PyNumber_FloorDivide@plt+0x1144>
    4638:	ldr	x0, [sp, #24]
    463c:	cmp	x0, #0x2
    4640:	b.le	4664 <PyNumber_FloorDivide@plt+0x1164>
    4644:	mov	x3, #0x2                   	// #2
    4648:	mov	x2, #0x1                   	// #1
    464c:	ldr	x1, [sp, #24]
    4650:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    4654:	add	x0, x0, #0x600
    4658:	bl	3300 <_PyArg_CheckPositional@plt>
    465c:	cmp	w0, #0x0
    4660:	b.eq	46a8 <PyNumber_FloorDivide@plt+0x11a8>  // b.none
    4664:	ldr	x0, [sp, #32]
    4668:	ldr	x0, [x0]
    466c:	str	x0, [sp, #56]
    4670:	ldr	x0, [sp, #24]
    4674:	cmp	x0, #0x1
    4678:	b.le	468c <PyNumber_FloorDivide@plt+0x118c>
    467c:	ldr	x0, [sp, #32]
    4680:	ldr	x0, [x0, #8]
    4684:	str	x0, [sp, #64]
    4688:	b	4690 <PyNumber_FloorDivide@plt+0x1190>
    468c:	nop
    4690:	ldr	x2, [sp, #64]
    4694:	ldr	x1, [sp, #56]
    4698:	ldr	x0, [sp, #40]
    469c:	bl	8d74 <PyNumber_FloorDivide@plt+0x5874>
    46a0:	str	x0, [sp, #72]
    46a4:	b	46ac <PyNumber_FloorDivide@plt+0x11ac>
    46a8:	nop
    46ac:	ldr	x0, [sp, #72]
    46b0:	ldp	x29, x30, [sp], #80
    46b4:	ret
    46b8:	stp	x29, x30, [sp, #-80]!
    46bc:	mov	x29, sp
    46c0:	str	x0, [sp, #40]
    46c4:	str	x1, [sp, #32]
    46c8:	str	x2, [sp, #24]
    46cc:	str	xzr, [sp, #72]
    46d0:	ldr	x0, [sp, #24]
    46d4:	cmp	x0, #0x1
    46d8:	b.le	46e8 <PyNumber_FloorDivide@plt+0x11e8>
    46dc:	ldr	x0, [sp, #24]
    46e0:	cmp	x0, #0x2
    46e4:	b.le	4708 <PyNumber_FloorDivide@plt+0x1208>
    46e8:	mov	x3, #0x2                   	// #2
    46ec:	mov	x2, #0x2                   	// #2
    46f0:	ldr	x1, [sp, #24]
    46f4:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    46f8:	add	x0, x0, #0x7d8
    46fc:	bl	3300 <_PyArg_CheckPositional@plt>
    4700:	cmp	w0, #0x0
    4704:	b.eq	4738 <PyNumber_FloorDivide@plt+0x1238>  // b.none
    4708:	ldr	x0, [sp, #32]
    470c:	ldr	x0, [x0]
    4710:	str	x0, [sp, #64]
    4714:	ldr	x0, [sp, #32]
    4718:	ldr	x0, [x0, #8]
    471c:	str	x0, [sp, #56]
    4720:	ldr	x2, [sp, #56]
    4724:	ldr	x1, [sp, #64]
    4728:	ldr	x0, [sp, #40]
    472c:	bl	9148 <PyNumber_FloorDivide@plt+0x5c48>
    4730:	str	x0, [sp, #72]
    4734:	b	473c <PyNumber_FloorDivide@plt+0x123c>
    4738:	nop
    473c:	ldr	x0, [sp, #72]
    4740:	ldp	x29, x30, [sp], #80
    4744:	ret
    4748:	stp	x29, x30, [sp, #-64]!
    474c:	mov	x29, sp
    4750:	str	d0, [sp, #24]
    4754:	ldr	d0, [sp, #24]
    4758:	fabs	d0, d0
    475c:	fmov	d1, #2.000000000000000000e+00
    4760:	bl	3440 <fmod@plt>
    4764:	str	d0, [sp, #48]
    4768:	ldr	d0, [sp, #48]
    476c:	fadd	d0, d0, d0
    4770:	bl	33c0 <round@plt>
    4774:	fcvtzs	w0, d0
    4778:	str	w0, [sp, #44]
    477c:	ldr	w0, [sp, #44]
    4780:	cmp	w0, #0x4
    4784:	b.eq	486c <PyNumber_FloorDivide@plt+0x136c>  // b.none
    4788:	ldr	w0, [sp, #44]
    478c:	cmp	w0, #0x4
    4790:	b.gt	4890 <PyNumber_FloorDivide@plt+0x1390>
    4794:	ldr	w0, [sp, #44]
    4798:	cmp	w0, #0x3
    479c:	b.eq	4844 <PyNumber_FloorDivide@plt+0x1344>  // b.none
    47a0:	ldr	w0, [sp, #44]
    47a4:	cmp	w0, #0x3
    47a8:	b.gt	4890 <PyNumber_FloorDivide@plt+0x1390>
    47ac:	ldr	w0, [sp, #44]
    47b0:	cmp	w0, #0x2
    47b4:	b.eq	4820 <PyNumber_FloorDivide@plt+0x1320>  // b.none
    47b8:	ldr	w0, [sp, #44]
    47bc:	cmp	w0, #0x2
    47c0:	b.gt	4890 <PyNumber_FloorDivide@plt+0x1390>
    47c4:	ldr	w0, [sp, #44]
    47c8:	cmp	w0, #0x0
    47cc:	b.eq	47e0 <PyNumber_FloorDivide@plt+0x12e0>  // b.none
    47d0:	ldr	w0, [sp, #44]
    47d4:	cmp	w0, #0x1
    47d8:	b.eq	47fc <PyNumber_FloorDivide@plt+0x12fc>  // b.none
    47dc:	b	4890 <PyNumber_FloorDivide@plt+0x1390>
    47e0:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    47e4:	ldr	d1, [x0, #2448]
    47e8:	ldr	d0, [sp, #48]
    47ec:	fmul	d0, d1, d0
    47f0:	bl	32b0 <sin@plt>
    47f4:	str	d0, [sp, #56]
    47f8:	b	489c <PyNumber_FloorDivide@plt+0x139c>
    47fc:	ldr	d1, [sp, #48]
    4800:	fmov	d0, #5.000000000000000000e-01
    4804:	fsub	d0, d1, d0
    4808:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    480c:	ldr	d1, [x0, #2448]
    4810:	fmul	d0, d0, d1
    4814:	bl	34a0 <cos@plt>
    4818:	str	d0, [sp, #56]
    481c:	b	489c <PyNumber_FloorDivide@plt+0x139c>
    4820:	fmov	d1, #1.000000000000000000e+00
    4824:	ldr	d0, [sp, #48]
    4828:	fsub	d0, d1, d0
    482c:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    4830:	ldr	d1, [x0, #2448]
    4834:	fmul	d0, d0, d1
    4838:	bl	32b0 <sin@plt>
    483c:	str	d0, [sp, #56]
    4840:	b	489c <PyNumber_FloorDivide@plt+0x139c>
    4844:	ldr	d1, [sp, #48]
    4848:	fmov	d0, #1.500000000000000000e+00
    484c:	fsub	d0, d1, d0
    4850:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    4854:	ldr	d1, [x0, #2448]
    4858:	fmul	d0, d0, d1
    485c:	bl	34a0 <cos@plt>
    4860:	fneg	d0, d0
    4864:	str	d0, [sp, #56]
    4868:	b	489c <PyNumber_FloorDivide@plt+0x139c>
    486c:	ldr	d1, [sp, #48]
    4870:	fmov	d0, #2.000000000000000000e+00
    4874:	fsub	d0, d1, d0
    4878:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    487c:	ldr	d1, [x0, #2448]
    4880:	fmul	d0, d0, d1
    4884:	bl	32b0 <sin@plt>
    4888:	str	d0, [sp, #56]
    488c:	b	489c <PyNumber_FloorDivide@plt+0x139c>
    4890:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    4894:	add	x0, x0, #0x7f0
    4898:	bl	3380 <Py_FatalError@plt>
    489c:	ldr	d1, [sp, #24]
    48a0:	fmov	d0, #1.000000000000000000e+00
    48a4:	bl	3070 <copysign@plt>
    48a8:	fmov	d1, d0
    48ac:	ldr	d0, [sp, #56]
    48b0:	fmul	d0, d1, d0
    48b4:	ldp	x29, x30, [sp], #64
    48b8:	ret
    48bc:	sub	sp, sp, #0x30
    48c0:	str	d0, [sp, #8]
    48c4:	str	xzr, [sp, #40]
    48c8:	str	xzr, [sp, #32]
    48cc:	ldr	d1, [sp, #8]
    48d0:	fmov	d0, #5.000000000000000000e+00
    48d4:	fcmpe	d1, d0
    48d8:	b.pl	494c <PyNumber_FloorDivide@plt+0x144c>  // b.nfrst
    48dc:	mov	w0, #0xd                   	// #13
    48e0:	str	w0, [sp, #28]
    48e4:	b	4930 <PyNumber_FloorDivide@plt+0x1430>
    48e8:	ldr	d1, [sp, #40]
    48ec:	ldr	d0, [sp, #8]
    48f0:	fmul	d1, d1, d0
    48f4:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    48f8:	add	x0, x0, #0x820
    48fc:	ldrsw	x1, [sp, #28]
    4900:	ldr	d0, [x0, x1, lsl #3]
    4904:	fadd	d0, d1, d0
    4908:	str	d0, [sp, #40]
    490c:	ldr	d1, [sp, #32]
    4910:	ldr	d0, [sp, #8]
    4914:	fmul	d1, d1, d0
    4918:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    491c:	add	x0, x0, #0x888
    4920:	ldrsw	x1, [sp, #28]
    4924:	ldr	d0, [x0, x1, lsl #3]
    4928:	fadd	d0, d1, d0
    492c:	str	d0, [sp, #32]
    4930:	ldr	w0, [sp, #28]
    4934:	sub	w0, w0, #0x1
    4938:	str	w0, [sp, #28]
    493c:	ldr	w0, [sp, #28]
    4940:	cmp	w0, #0x0
    4944:	b.ge	48e8 <PyNumber_FloorDivide@plt+0x13e8>  // b.tcont
    4948:	b	49b4 <PyNumber_FloorDivide@plt+0x14b4>
    494c:	str	wzr, [sp, #28]
    4950:	b	49a8 <PyNumber_FloorDivide@plt+0x14a8>
    4954:	ldr	d0, [sp, #8]
    4958:	ldr	d1, [sp, #40]
    495c:	fdiv	d1, d1, d0
    4960:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    4964:	add	x0, x0, #0x820
    4968:	ldrsw	x1, [sp, #28]
    496c:	ldr	d0, [x0, x1, lsl #3]
    4970:	fadd	d0, d1, d0
    4974:	str	d0, [sp, #40]
    4978:	ldr	d0, [sp, #8]
    497c:	ldr	d1, [sp, #32]
    4980:	fdiv	d1, d1, d0
    4984:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    4988:	add	x0, x0, #0x888
    498c:	ldrsw	x1, [sp, #28]
    4990:	ldr	d0, [x0, x1, lsl #3]
    4994:	fadd	d0, d1, d0
    4998:	str	d0, [sp, #32]
    499c:	ldr	w0, [sp, #28]
    49a0:	add	w0, w0, #0x1
    49a4:	str	w0, [sp, #28]
    49a8:	ldr	w0, [sp, #28]
    49ac:	cmp	w0, #0xc
    49b0:	b.le	4954 <PyNumber_FloorDivide@plt+0x1454>
    49b4:	ldr	d0, [sp, #32]
    49b8:	ldr	d1, [sp, #40]
    49bc:	fdiv	d0, d1, d0
    49c0:	add	sp, sp, #0x30
    49c4:	ret
    49c8:	stp	x29, x30, [sp, #-16]!
    49cc:	mov	x29, sp
    49d0:	mov	w0, #0x0                   	// #0
    49d4:	bl	33f0 <_Py_dg_infinity@plt>
    49d8:	ldp	x29, x30, [sp], #16
    49dc:	ret
    49e0:	stp	x29, x30, [sp, #-16]!
    49e4:	mov	x29, sp
    49e8:	mov	w0, #0x0                   	// #0
    49ec:	bl	32c0 <_Py_dg_stdnan@plt>
    49f0:	ldp	x29, x30, [sp], #16
    49f4:	ret
    49f8:	stp	x29, x30, [sp, #-112]!
    49fc:	mov	x29, sp
    4a00:	str	d8, [sp, #16]
    4a04:	str	d0, [sp, #40]
    4a08:	ldr	d0, [sp, #40]
    4a0c:	fabs	d0, d0
    4a10:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4a14:	fmov	d1, x0
    4a18:	fcmp	d0, d1
    4a1c:	b.ls	4a60 <PyNumber_FloorDivide@plt+0x1560>  // b.plast
    4a20:	ldr	d1, [sp, #40]
    4a24:	ldr	d0, [sp, #40]
    4a28:	fcmp	d1, d0
    4a2c:	b.vs	4a3c <PyNumber_FloorDivide@plt+0x153c>
    4a30:	ldr	d0, [sp, #40]
    4a34:	fcmpe	d0, #0.0
    4a38:	b.le	4a44 <PyNumber_FloorDivide@plt+0x1544>
    4a3c:	ldr	d0, [sp, #40]
    4a40:	b	4e3c <PyNumber_FloorDivide@plt+0x193c>
    4a44:	bl	3490 <__errno_location@plt>
    4a48:	mov	x1, x0
    4a4c:	mov	w0, #0x21                  	// #33
    4a50:	str	w0, [x1]
    4a54:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    4a58:	fmov	d0, x0
    4a5c:	b	4e3c <PyNumber_FloorDivide@plt+0x193c>
    4a60:	ldr	d0, [sp, #40]
    4a64:	fcmp	d0, #0.0
    4a68:	b.ne	4a90 <PyNumber_FloorDivide@plt+0x1590>  // b.any
    4a6c:	bl	3490 <__errno_location@plt>
    4a70:	mov	x1, x0
    4a74:	mov	w0, #0x21                  	// #33
    4a78:	str	w0, [x1]
    4a7c:	ldr	d1, [sp, #40]
    4a80:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    4a84:	fmov	d0, x0
    4a88:	bl	3070 <copysign@plt>
    4a8c:	b	4e3c <PyNumber_FloorDivide@plt+0x193c>
    4a90:	ldr	d0, [sp, #40]
    4a94:	bl	3400 <floor@plt>
    4a98:	fmov	d1, d0
    4a9c:	ldr	d0, [sp, #40]
    4aa0:	fcmp	d0, d1
    4aa4:	b.ne	4b00 <PyNumber_FloorDivide@plt+0x1600>  // b.any
    4aa8:	ldr	d0, [sp, #40]
    4aac:	fcmpe	d0, #0.0
    4ab0:	b.pl	4ad0 <PyNumber_FloorDivide@plt+0x15d0>  // b.nfrst
    4ab4:	bl	3490 <__errno_location@plt>
    4ab8:	mov	x1, x0
    4abc:	mov	w0, #0x21                  	// #33
    4ac0:	str	w0, [x1]
    4ac4:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    4ac8:	fmov	d0, x0
    4acc:	b	4e3c <PyNumber_FloorDivide@plt+0x193c>
    4ad0:	ldr	d1, [sp, #40]
    4ad4:	fmov	d0, #2.300000000000000000e+01
    4ad8:	fcmpe	d1, d0
    4adc:	b.hi	4b00 <PyNumber_FloorDivide@plt+0x1600>  // b.pmore
    4ae0:	ldr	d0, [sp, #40]
    4ae4:	fcvtzs	w0, d0
    4ae8:	sub	w1, w0, #0x1
    4aec:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    4af0:	add	x0, x0, #0x8f0
    4af4:	sxtw	x1, w1
    4af8:	ldr	d0, [x0, x1, lsl #3]
    4afc:	b	4e3c <PyNumber_FloorDivide@plt+0x193c>
    4b00:	ldr	d0, [sp, #40]
    4b04:	fabs	d0, d0
    4b08:	str	d0, [sp, #88]
    4b0c:	ldr	d0, [sp, #88]
    4b10:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    4b14:	ldr	d1, [x0, #2456]
    4b18:	fcmpe	d0, d1
    4b1c:	b.pl	4b74 <PyNumber_FloorDivide@plt+0x1674>  // b.nfrst
    4b20:	ldr	d0, [sp, #40]
    4b24:	fmov	d1, #1.000000000000000000e+00
    4b28:	fdiv	d0, d1, d0
    4b2c:	str	d0, [sp, #104]
    4b30:	ldr	d0, [sp, #104]
    4b34:	fabs	d0, d0
    4b38:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4b3c:	fmov	d1, x0
    4b40:	fcmp	d0, d1
    4b44:	cset	w0, le
    4b48:	and	w0, w0, #0xff
    4b4c:	eor	w0, w0, #0x1
    4b50:	and	w0, w0, #0xff
    4b54:	cmp	w0, #0x0
    4b58:	b.eq	4b6c <PyNumber_FloorDivide@plt+0x166c>  // b.none
    4b5c:	bl	3490 <__errno_location@plt>
    4b60:	mov	x1, x0
    4b64:	mov	w0, #0x22                  	// #34
    4b68:	str	w0, [x1]
    4b6c:	ldr	d0, [sp, #104]
    4b70:	b	4e3c <PyNumber_FloorDivide@plt+0x193c>
    4b74:	ldr	d0, [sp, #88]
    4b78:	mov	x0, #0x4069000000000000    	// #4641240890982006784
    4b7c:	fmov	d1, x0
    4b80:	fcmpe	d0, d1
    4b84:	b.le	4bc4 <PyNumber_FloorDivide@plt+0x16c4>
    4b88:	ldr	d0, [sp, #40]
    4b8c:	fcmpe	d0, #0.0
    4b90:	b.pl	4ba8 <PyNumber_FloorDivide@plt+0x16a8>  // b.nfrst
    4b94:	ldr	d0, [sp, #40]
    4b98:	bl	4748 <PyNumber_FloorDivide@plt+0x1248>
    4b9c:	movi	d1, #0x0
    4ba0:	fdiv	d0, d1, d0
    4ba4:	b	4e3c <PyNumber_FloorDivide@plt+0x193c>
    4ba8:	bl	3490 <__errno_location@plt>
    4bac:	mov	x1, x0
    4bb0:	mov	w0, #0x22                  	// #34
    4bb4:	str	w0, [x1]
    4bb8:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    4bbc:	fmov	d0, x0
    4bc0:	b	4e3c <PyNumber_FloorDivide@plt+0x193c>
    4bc4:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    4bc8:	ldr	d1, [x0, #2464]
    4bcc:	ldr	d0, [sp, #88]
    4bd0:	fadd	d0, d0, d1
    4bd4:	str	d0, [sp, #80]
    4bd8:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    4bdc:	ldr	d1, [x0, #2464]
    4be0:	ldr	d0, [sp, #88]
    4be4:	fcmpe	d0, d1
    4be8:	b.le	4c14 <PyNumber_FloorDivide@plt+0x1714>
    4bec:	ldr	d1, [sp, #80]
    4bf0:	ldr	d0, [sp, #88]
    4bf4:	fsub	d0, d1, d0
    4bf8:	str	d0, [sp, #64]
    4bfc:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    4c00:	ldr	d1, [x0, #2464]
    4c04:	ldr	d0, [sp, #64]
    4c08:	fsub	d0, d0, d1
    4c0c:	str	d0, [sp, #96]
    4c10:	b	4c38 <PyNumber_FloorDivide@plt+0x1738>
    4c14:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    4c18:	ldr	d1, [x0, #2464]
    4c1c:	ldr	d0, [sp, #80]
    4c20:	fsub	d0, d0, d1
    4c24:	str	d0, [sp, #72]
    4c28:	ldr	d1, [sp, #72]
    4c2c:	ldr	d0, [sp, #88]
    4c30:	fsub	d0, d1, d0
    4c34:	str	d0, [sp, #96]
    4c38:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    4c3c:	ldr	d1, [x0, #2472]
    4c40:	ldr	d0, [sp, #96]
    4c44:	fmul	d1, d1, d0
    4c48:	ldr	d0, [sp, #80]
    4c4c:	fdiv	d0, d1, d0
    4c50:	str	d0, [sp, #96]
    4c54:	ldr	d0, [sp, #40]
    4c58:	fcmpe	d0, #0.0
    4c5c:	b.pl	4d40 <PyNumber_FloorDivide@plt+0x1840>  // b.nfrst
    4c60:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    4c64:	ldr	d0, [x0, #2448]
    4c68:	fneg	d8, d0
    4c6c:	ldr	d0, [sp, #88]
    4c70:	bl	4748 <PyNumber_FloorDivide@plt+0x1248>
    4c74:	fdiv	d1, d8, d0
    4c78:	ldr	d0, [sp, #88]
    4c7c:	fdiv	d8, d1, d0
    4c80:	ldr	d0, [sp, #80]
    4c84:	bl	34e0 <exp@plt>
    4c88:	fmul	d8, d8, d0
    4c8c:	ldr	d0, [sp, #88]
    4c90:	bl	48bc <PyNumber_FloorDivide@plt+0x13bc>
    4c94:	fdiv	d0, d8, d0
    4c98:	str	d0, [sp, #104]
    4c9c:	ldr	d1, [sp, #96]
    4ca0:	ldr	d0, [sp, #104]
    4ca4:	fmul	d0, d1, d0
    4ca8:	ldr	d1, [sp, #104]
    4cac:	fsub	d0, d1, d0
    4cb0:	str	d0, [sp, #104]
    4cb4:	ldr	d0, [sp, #88]
    4cb8:	mov	x0, #0x800000000000        	// #140737488355328
    4cbc:	movk	x0, #0x4061, lsl #48
    4cc0:	fmov	d1, x0
    4cc4:	fcmpe	d0, d1
    4cc8:	b.pl	4cf8 <PyNumber_FloorDivide@plt+0x17f8>  // b.nfrst
    4ccc:	ldr	d1, [sp, #88]
    4cd0:	fmov	d0, #5.000000000000000000e-01
    4cd4:	fsub	d0, d1, d0
    4cd8:	fmov	d1, d0
    4cdc:	ldr	d0, [sp, #80]
    4ce0:	bl	3110 <pow@plt>
    4ce4:	fmov	d1, d0
    4ce8:	ldr	d0, [sp, #104]
    4cec:	fdiv	d0, d0, d1
    4cf0:	str	d0, [sp, #104]
    4cf4:	b	4dfc <PyNumber_FloorDivide@plt+0x18fc>
    4cf8:	fmov	d0, #2.000000000000000000e+00
    4cfc:	ldr	d1, [sp, #88]
    4d00:	fdiv	d1, d1, d0
    4d04:	fmov	d0, #2.500000000000000000e-01
    4d08:	fsub	d0, d1, d0
    4d0c:	fmov	d1, d0
    4d10:	ldr	d0, [sp, #80]
    4d14:	bl	3110 <pow@plt>
    4d18:	str	d0, [sp, #56]
    4d1c:	ldr	d0, [sp, #56]
    4d20:	ldr	d1, [sp, #104]
    4d24:	fdiv	d0, d1, d0
    4d28:	str	d0, [sp, #104]
    4d2c:	ldr	d0, [sp, #56]
    4d30:	ldr	d1, [sp, #104]
    4d34:	fdiv	d0, d1, d0
    4d38:	str	d0, [sp, #104]
    4d3c:	b	4dfc <PyNumber_FloorDivide@plt+0x18fc>
    4d40:	ldr	d0, [sp, #88]
    4d44:	bl	48bc <PyNumber_FloorDivide@plt+0x13bc>
    4d48:	fmov	d8, d0
    4d4c:	ldr	d0, [sp, #80]
    4d50:	bl	34e0 <exp@plt>
    4d54:	fdiv	d0, d8, d0
    4d58:	str	d0, [sp, #104]
    4d5c:	ldr	d1, [sp, #96]
    4d60:	ldr	d0, [sp, #104]
    4d64:	fmul	d0, d1, d0
    4d68:	ldr	d1, [sp, #104]
    4d6c:	fadd	d0, d1, d0
    4d70:	str	d0, [sp, #104]
    4d74:	ldr	d0, [sp, #88]
    4d78:	mov	x0, #0x800000000000        	// #140737488355328
    4d7c:	movk	x0, #0x4061, lsl #48
    4d80:	fmov	d1, x0
    4d84:	fcmpe	d0, d1
    4d88:	b.pl	4db8 <PyNumber_FloorDivide@plt+0x18b8>  // b.nfrst
    4d8c:	ldr	d1, [sp, #88]
    4d90:	fmov	d0, #5.000000000000000000e-01
    4d94:	fsub	d0, d1, d0
    4d98:	fmov	d1, d0
    4d9c:	ldr	d0, [sp, #80]
    4da0:	bl	3110 <pow@plt>
    4da4:	fmov	d1, d0
    4da8:	ldr	d0, [sp, #104]
    4dac:	fmul	d0, d0, d1
    4db0:	str	d0, [sp, #104]
    4db4:	b	4dfc <PyNumber_FloorDivide@plt+0x18fc>
    4db8:	fmov	d0, #2.000000000000000000e+00
    4dbc:	ldr	d1, [sp, #88]
    4dc0:	fdiv	d1, d1, d0
    4dc4:	fmov	d0, #2.500000000000000000e-01
    4dc8:	fsub	d0, d1, d0
    4dcc:	fmov	d1, d0
    4dd0:	ldr	d0, [sp, #80]
    4dd4:	bl	3110 <pow@plt>
    4dd8:	str	d0, [sp, #56]
    4ddc:	ldr	d1, [sp, #104]
    4de0:	ldr	d0, [sp, #56]
    4de4:	fmul	d0, d1, d0
    4de8:	str	d0, [sp, #104]
    4dec:	ldr	d1, [sp, #104]
    4df0:	ldr	d0, [sp, #56]
    4df4:	fmul	d0, d1, d0
    4df8:	str	d0, [sp, #104]
    4dfc:	ldr	d0, [sp, #104]
    4e00:	fabs	d0, d0
    4e04:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4e08:	fmov	d1, x0
    4e0c:	fcmp	d0, d1
    4e10:	cset	w0, le
    4e14:	and	w0, w0, #0xff
    4e18:	eor	w0, w0, #0x1
    4e1c:	and	w0, w0, #0xff
    4e20:	cmp	w0, #0x0
    4e24:	b.eq	4e38 <PyNumber_FloorDivide@plt+0x1938>  // b.none
    4e28:	bl	3490 <__errno_location@plt>
    4e2c:	mov	x1, x0
    4e30:	mov	w0, #0x22                  	// #34
    4e34:	str	w0, [x1]
    4e38:	ldr	d0, [sp, #104]
    4e3c:	ldr	d8, [sp, #16]
    4e40:	ldp	x29, x30, [sp], #112
    4e44:	ret
    4e48:	stp	x29, x30, [sp, #-64]!
    4e4c:	mov	x29, sp
    4e50:	str	d8, [sp, #16]
    4e54:	str	d0, [sp, #40]
    4e58:	ldr	d0, [sp, #40]
    4e5c:	fabs	d0, d0
    4e60:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4e64:	fmov	d1, x0
    4e68:	fcmp	d0, d1
    4e6c:	b.ls	4e94 <PyNumber_FloorDivide@plt+0x1994>  // b.plast
    4e70:	ldr	d1, [sp, #40]
    4e74:	ldr	d0, [sp, #40]
    4e78:	fcmp	d1, d0
    4e7c:	b.vc	4e88 <PyNumber_FloorDivide@plt+0x1988>
    4e80:	ldr	d0, [sp, #40]
    4e84:	b	4ffc <PyNumber_FloorDivide@plt+0x1afc>
    4e88:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    4e8c:	fmov	d0, x0
    4e90:	b	4ffc <PyNumber_FloorDivide@plt+0x1afc>
    4e94:	ldr	d0, [sp, #40]
    4e98:	bl	3400 <floor@plt>
    4e9c:	fmov	d1, d0
    4ea0:	ldr	d0, [sp, #40]
    4ea4:	fcmp	d0, d1
    4ea8:	b.ne	4eec <PyNumber_FloorDivide@plt+0x19ec>  // b.any
    4eac:	ldr	d1, [sp, #40]
    4eb0:	fmov	d0, #2.000000000000000000e+00
    4eb4:	fcmpe	d1, d0
    4eb8:	b.hi	4eec <PyNumber_FloorDivide@plt+0x19ec>  // b.pmore
    4ebc:	ldr	d0, [sp, #40]
    4ec0:	fcmpe	d0, #0.0
    4ec4:	b.hi	4ee4 <PyNumber_FloorDivide@plt+0x19e4>  // b.pmore
    4ec8:	bl	3490 <__errno_location@plt>
    4ecc:	mov	x1, x0
    4ed0:	mov	w0, #0x21                  	// #33
    4ed4:	str	w0, [x1]
    4ed8:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    4edc:	fmov	d0, x0
    4ee0:	b	4ffc <PyNumber_FloorDivide@plt+0x1afc>
    4ee4:	movi	d0, #0x0
    4ee8:	b	4ffc <PyNumber_FloorDivide@plt+0x1afc>
    4eec:	ldr	d0, [sp, #40]
    4ef0:	fabs	d0, d0
    4ef4:	str	d0, [sp, #48]
    4ef8:	ldr	d0, [sp, #48]
    4efc:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    4f00:	ldr	d1, [x0, #2456]
    4f04:	fcmpe	d0, d1
    4f08:	b.pl	4f1c <PyNumber_FloorDivide@plt+0x1a1c>  // b.nfrst
    4f0c:	ldr	d0, [sp, #48]
    4f10:	bl	3220 <log@plt>
    4f14:	fneg	d0, d0
    4f18:	b	4ffc <PyNumber_FloorDivide@plt+0x1afc>
    4f1c:	ldr	d0, [sp, #48]
    4f20:	bl	48bc <PyNumber_FloorDivide@plt+0x13bc>
    4f24:	bl	3220 <log@plt>
    4f28:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    4f2c:	ldr	d1, [x0, #2472]
    4f30:	fsub	d0, d0, d1
    4f34:	str	d0, [sp, #56]
    4f38:	ldr	d1, [sp, #48]
    4f3c:	fmov	d0, #5.000000000000000000e-01
    4f40:	fsub	d8, d1, d0
    4f44:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    4f48:	ldr	d1, [x0, #2472]
    4f4c:	ldr	d0, [sp, #48]
    4f50:	fadd	d1, d1, d0
    4f54:	fmov	d0, #5.000000000000000000e-01
    4f58:	fsub	d0, d1, d0
    4f5c:	bl	3220 <log@plt>
    4f60:	fmov	d1, d0
    4f64:	fmov	d0, #1.000000000000000000e+00
    4f68:	fsub	d0, d1, d0
    4f6c:	fmul	d0, d8, d0
    4f70:	ldr	d1, [sp, #56]
    4f74:	fadd	d0, d1, d0
    4f78:	str	d0, [sp, #56]
    4f7c:	ldr	d0, [sp, #40]
    4f80:	fcmpe	d0, #0.0
    4f84:	b.pl	4fbc <PyNumber_FloorDivide@plt+0x1abc>  // b.nfrst
    4f88:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    4f8c:	ldr	d8, [x0, #2480]
    4f90:	ldr	d0, [sp, #48]
    4f94:	bl	4748 <PyNumber_FloorDivide@plt+0x1248>
    4f98:	fabs	d0, d0
    4f9c:	bl	3220 <log@plt>
    4fa0:	fsub	d8, d8, d0
    4fa4:	ldr	d0, [sp, #48]
    4fa8:	bl	3220 <log@plt>
    4fac:	fsub	d1, d8, d0
    4fb0:	ldr	d0, [sp, #56]
    4fb4:	fsub	d0, d1, d0
    4fb8:	str	d0, [sp, #56]
    4fbc:	ldr	d0, [sp, #56]
    4fc0:	fabs	d0, d0
    4fc4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4fc8:	fmov	d1, x0
    4fcc:	fcmp	d0, d1
    4fd0:	cset	w0, le
    4fd4:	and	w0, w0, #0xff
    4fd8:	eor	w0, w0, #0x1
    4fdc:	and	w0, w0, #0xff
    4fe0:	cmp	w0, #0x0
    4fe4:	b.eq	4ff8 <PyNumber_FloorDivide@plt+0x1af8>  // b.none
    4fe8:	bl	3490 <__errno_location@plt>
    4fec:	mov	x1, x0
    4ff0:	mov	w0, #0x22                  	// #34
    4ff4:	str	w0, [x1]
    4ff8:	ldr	d0, [sp, #56]
    4ffc:	ldr	d8, [sp, #16]
    5000:	ldp	x29, x30, [sp], #64
    5004:	ret
    5008:	stp	x29, x30, [sp, #-32]!
    500c:	mov	x29, sp
    5010:	str	d0, [sp, #24]
    5014:	ldr	d0, [sp, #24]
    5018:	bl	32f0 <erf@plt>
    501c:	ldp	x29, x30, [sp], #32
    5020:	ret
    5024:	stp	x29, x30, [sp, #-32]!
    5028:	mov	x29, sp
    502c:	str	d0, [sp, #24]
    5030:	ldr	d0, [sp, #24]
    5034:	bl	3390 <erfc@plt>
    5038:	ldp	x29, x30, [sp], #32
    503c:	ret
    5040:	stp	x29, x30, [sp, #-32]!
    5044:	mov	x29, sp
    5048:	str	d0, [sp, #24]
    504c:	str	d1, [sp, #16]
    5050:	ldr	d1, [sp, #16]
    5054:	ldr	d0, [sp, #16]
    5058:	fcmp	d1, d0
    505c:	b.vs	5070 <PyNumber_FloorDivide@plt+0x1b70>
    5060:	ldr	d1, [sp, #24]
    5064:	ldr	d0, [sp, #24]
    5068:	fcmp	d1, d0
    506c:	b.vc	507c <PyNumber_FloorDivide@plt+0x1b7c>
    5070:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    5074:	fmov	d0, x0
    5078:	b	51b0 <PyNumber_FloorDivide@plt+0x1cb0>
    507c:	ldr	d0, [sp, #24]
    5080:	fabs	d0, d0
    5084:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5088:	fmov	d1, x0
    508c:	fcmp	d0, d1
    5090:	cset	w0, le
    5094:	and	w0, w0, #0xff
    5098:	eor	w0, w0, #0x1
    509c:	and	w0, w0, #0xff
    50a0:	cmp	w0, #0x0
    50a4:	b.eq	512c <PyNumber_FloorDivide@plt+0x1c2c>  // b.none
    50a8:	ldr	d0, [sp, #16]
    50ac:	fabs	d0, d0
    50b0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    50b4:	fmov	d1, x0
    50b8:	fcmp	d0, d1
    50bc:	cset	w0, le
    50c0:	and	w0, w0, #0xff
    50c4:	eor	w0, w0, #0x1
    50c8:	and	w0, w0, #0xff
    50cc:	cmp	w0, #0x0
    50d0:	b.eq	5118 <PyNumber_FloorDivide@plt+0x1c18>  // b.none
    50d4:	ldr	d1, [sp, #16]
    50d8:	fmov	d0, #1.000000000000000000e+00
    50dc:	bl	3070 <copysign@plt>
    50e0:	fmov	d1, d0
    50e4:	fmov	d0, #1.000000000000000000e+00
    50e8:	fcmp	d1, d0
    50ec:	b.ne	5104 <PyNumber_FloorDivide@plt+0x1c04>  // b.any
    50f0:	ldr	d1, [sp, #24]
    50f4:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    50f8:	ldr	d0, [x0, #2488]
    50fc:	bl	3070 <copysign@plt>
    5100:	b	51b0 <PyNumber_FloorDivide@plt+0x1cb0>
    5104:	ldr	d1, [sp, #24]
    5108:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    510c:	ldr	d0, [x0, #2496]
    5110:	bl	3070 <copysign@plt>
    5114:	b	51b0 <PyNumber_FloorDivide@plt+0x1cb0>
    5118:	ldr	d1, [sp, #24]
    511c:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    5120:	ldr	d0, [x0, #2504]
    5124:	bl	3070 <copysign@plt>
    5128:	b	51b0 <PyNumber_FloorDivide@plt+0x1cb0>
    512c:	ldr	d0, [sp, #16]
    5130:	fabs	d0, d0
    5134:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5138:	fmov	d1, x0
    513c:	fcmp	d0, d1
    5140:	cset	w0, le
    5144:	and	w0, w0, #0xff
    5148:	eor	w0, w0, #0x1
    514c:	and	w0, w0, #0xff
    5150:	cmp	w0, #0x0
    5154:	b.ne	5164 <PyNumber_FloorDivide@plt+0x1c64>  // b.any
    5158:	ldr	d0, [sp, #24]
    515c:	fcmp	d0, #0.0
    5160:	b.ne	51a4 <PyNumber_FloorDivide@plt+0x1ca4>  // b.any
    5164:	ldr	d1, [sp, #16]
    5168:	fmov	d0, #1.000000000000000000e+00
    516c:	bl	3070 <copysign@plt>
    5170:	fmov	d1, d0
    5174:	fmov	d0, #1.000000000000000000e+00
    5178:	fcmp	d1, d0
    517c:	b.ne	5190 <PyNumber_FloorDivide@plt+0x1c90>  // b.any
    5180:	ldr	d1, [sp, #24]
    5184:	movi	d0, #0x0
    5188:	bl	3070 <copysign@plt>
    518c:	b	51b0 <PyNumber_FloorDivide@plt+0x1cb0>
    5190:	ldr	d1, [sp, #24]
    5194:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    5198:	ldr	d0, [x0, #2448]
    519c:	bl	3070 <copysign@plt>
    51a0:	b	51b0 <PyNumber_FloorDivide@plt+0x1cb0>
    51a4:	ldr	d1, [sp, #16]
    51a8:	ldr	d0, [sp, #24]
    51ac:	bl	3040 <atan2@plt>
    51b0:	ldp	x29, x30, [sp], #32
    51b4:	ret
    51b8:	stp	x29, x30, [sp, #-80]!
    51bc:	mov	x29, sp
    51c0:	str	d0, [sp, #24]
    51c4:	str	d1, [sp, #16]
    51c8:	ldr	d0, [sp, #24]
    51cc:	fabs	d0, d0
    51d0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    51d4:	fmov	d1, x0
    51d8:	fcmp	d0, d1
    51dc:	cset	w0, hi  // hi = pmore
    51e0:	and	w0, w0, #0xff
    51e4:	eor	w0, w0, #0x1
    51e8:	and	w0, w0, #0xff
    51ec:	cmp	w0, #0x0
    51f0:	b.eq	52f4 <PyNumber_FloorDivide@plt+0x1df4>  // b.none
    51f4:	ldr	d0, [sp, #16]
    51f8:	fabs	d0, d0
    51fc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5200:	fmov	d1, x0
    5204:	fcmp	d0, d1
    5208:	cset	w0, hi  // hi = pmore
    520c:	and	w0, w0, #0xff
    5210:	eor	w0, w0, #0x1
    5214:	and	w0, w0, #0xff
    5218:	cmp	w0, #0x0
    521c:	b.eq	52f4 <PyNumber_FloorDivide@plt+0x1df4>  // b.none
    5220:	ldr	d0, [sp, #16]
    5224:	fcmp	d0, #0.0
    5228:	b.ne	5238 <PyNumber_FloorDivide@plt+0x1d38>  // b.any
    522c:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    5230:	fmov	d0, x0
    5234:	b	5360 <PyNumber_FloorDivide@plt+0x1e60>
    5238:	ldr	d0, [sp, #24]
    523c:	fabs	d0, d0
    5240:	str	d0, [sp, #64]
    5244:	ldr	d0, [sp, #16]
    5248:	fabs	d0, d0
    524c:	str	d0, [sp, #56]
    5250:	ldr	d1, [sp, #56]
    5254:	ldr	d0, [sp, #64]
    5258:	bl	3440 <fmod@plt>
    525c:	str	d0, [sp, #48]
    5260:	ldr	d1, [sp, #56]
    5264:	ldr	d0, [sp, #48]
    5268:	fsub	d0, d1, d0
    526c:	str	d0, [sp, #40]
    5270:	ldr	d1, [sp, #48]
    5274:	ldr	d0, [sp, #40]
    5278:	fcmpe	d1, d0
    527c:	b.pl	528c <PyNumber_FloorDivide@plt+0x1d8c>  // b.nfrst
    5280:	ldr	d0, [sp, #48]
    5284:	str	d0, [sp, #72]
    5288:	b	52d8 <PyNumber_FloorDivide@plt+0x1dd8>
    528c:	ldr	d1, [sp, #48]
    5290:	ldr	d0, [sp, #40]
    5294:	fcmpe	d1, d0
    5298:	b.le	52ac <PyNumber_FloorDivide@plt+0x1dac>
    529c:	ldr	d0, [sp, #40]
    52a0:	fneg	d0, d0
    52a4:	str	d0, [sp, #72]
    52a8:	b	52d8 <PyNumber_FloorDivide@plt+0x1dd8>
    52ac:	ldr	d1, [sp, #64]
    52b0:	ldr	d0, [sp, #48]
    52b4:	fsub	d1, d1, d0
    52b8:	fmov	d0, #5.000000000000000000e-01
    52bc:	fmul	d0, d1, d0
    52c0:	ldr	d1, [sp, #56]
    52c4:	bl	3440 <fmod@plt>
    52c8:	fadd	d0, d0, d0
    52cc:	ldr	d1, [sp, #48]
    52d0:	fsub	d0, d1, d0
    52d4:	str	d0, [sp, #72]
    52d8:	ldr	d1, [sp, #24]
    52dc:	fmov	d0, #1.000000000000000000e+00
    52e0:	bl	3070 <copysign@plt>
    52e4:	fmov	d1, d0
    52e8:	ldr	d0, [sp, #72]
    52ec:	fmul	d0, d1, d0
    52f0:	b	5360 <PyNumber_FloorDivide@plt+0x1e60>
    52f4:	ldr	d1, [sp, #24]
    52f8:	ldr	d0, [sp, #24]
    52fc:	fcmp	d1, d0
    5300:	b.vc	530c <PyNumber_FloorDivide@plt+0x1e0c>
    5304:	ldr	d0, [sp, #24]
    5308:	b	5360 <PyNumber_FloorDivide@plt+0x1e60>
    530c:	ldr	d1, [sp, #16]
    5310:	ldr	d0, [sp, #16]
    5314:	fcmp	d1, d0
    5318:	b.vc	5324 <PyNumber_FloorDivide@plt+0x1e24>
    531c:	ldr	d0, [sp, #16]
    5320:	b	5360 <PyNumber_FloorDivide@plt+0x1e60>
    5324:	ldr	d0, [sp, #24]
    5328:	fabs	d0, d0
    532c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5330:	fmov	d1, x0
    5334:	fcmp	d0, d1
    5338:	cset	w0, le
    533c:	and	w0, w0, #0xff
    5340:	eor	w0, w0, #0x1
    5344:	and	w0, w0, #0xff
    5348:	cmp	w0, #0x0
    534c:	b.eq	535c <PyNumber_FloorDivide@plt+0x1e5c>  // b.none
    5350:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    5354:	fmov	d0, x0
    5358:	b	5360 <PyNumber_FloorDivide@plt+0x1e60>
    535c:	ldr	d0, [sp, #24]
    5360:	ldp	x29, x30, [sp], #80
    5364:	ret
    5368:	stp	x29, x30, [sp, #-32]!
    536c:	mov	x29, sp
    5370:	str	d0, [sp, #24]
    5374:	ldr	d0, [sp, #24]
    5378:	fabs	d0, d0
    537c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5380:	fmov	d1, x0
    5384:	fcmp	d0, d1
    5388:	cset	w0, hi  // hi = pmore
    538c:	and	w0, w0, #0xff
    5390:	eor	w0, w0, #0x1
    5394:	and	w0, w0, #0xff
    5398:	cmp	w0, #0x0
    539c:	b.eq	53ec <PyNumber_FloorDivide@plt+0x1eec>  // b.none
    53a0:	ldr	d0, [sp, #24]
    53a4:	fcmpe	d0, #0.0
    53a8:	b.le	53b8 <PyNumber_FloorDivide@plt+0x1eb8>
    53ac:	ldr	d0, [sp, #24]
    53b0:	bl	3220 <log@plt>
    53b4:	b	5430 <PyNumber_FloorDivide@plt+0x1f30>
    53b8:	bl	3490 <__errno_location@plt>
    53bc:	mov	x1, x0
    53c0:	mov	w0, #0x21                  	// #33
    53c4:	str	w0, [x1]
    53c8:	ldr	d0, [sp, #24]
    53cc:	fcmp	d0, #0.0
    53d0:	b.ne	53e0 <PyNumber_FloorDivide@plt+0x1ee0>  // b.any
    53d4:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
    53d8:	fmov	d0, x0
    53dc:	b	5430 <PyNumber_FloorDivide@plt+0x1f30>
    53e0:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    53e4:	fmov	d0, x0
    53e8:	b	5430 <PyNumber_FloorDivide@plt+0x1f30>
    53ec:	ldr	d1, [sp, #24]
    53f0:	ldr	d0, [sp, #24]
    53f4:	fcmp	d1, d0
    53f8:	b.vc	5404 <PyNumber_FloorDivide@plt+0x1f04>
    53fc:	ldr	d0, [sp, #24]
    5400:	b	5430 <PyNumber_FloorDivide@plt+0x1f30>
    5404:	ldr	d0, [sp, #24]
    5408:	fcmpe	d0, #0.0
    540c:	b.le	5418 <PyNumber_FloorDivide@plt+0x1f18>
    5410:	ldr	d0, [sp, #24]
    5414:	b	5430 <PyNumber_FloorDivide@plt+0x1f30>
    5418:	bl	3490 <__errno_location@plt>
    541c:	mov	x1, x0
    5420:	mov	w0, #0x21                  	// #33
    5424:	str	w0, [x1]
    5428:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    542c:	fmov	d0, x0
    5430:	ldp	x29, x30, [sp], #32
    5434:	ret
    5438:	stp	x29, x30, [sp, #-32]!
    543c:	mov	x29, sp
    5440:	str	d0, [sp, #24]
    5444:	ldr	d0, [sp, #24]
    5448:	fabs	d0, d0
    544c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5450:	fmov	d1, x0
    5454:	fcmp	d0, d1
    5458:	b.ls	54a4 <PyNumber_FloorDivide@plt+0x1fa4>  // b.plast
    545c:	ldr	d1, [sp, #24]
    5460:	ldr	d0, [sp, #24]
    5464:	fcmp	d1, d0
    5468:	b.vc	5474 <PyNumber_FloorDivide@plt+0x1f74>
    546c:	ldr	d0, [sp, #24]
    5470:	b	54fc <PyNumber_FloorDivide@plt+0x1ffc>
    5474:	ldr	d0, [sp, #24]
    5478:	fcmpe	d0, #0.0
    547c:	b.le	5488 <PyNumber_FloorDivide@plt+0x1f88>
    5480:	ldr	d0, [sp, #24]
    5484:	b	54fc <PyNumber_FloorDivide@plt+0x1ffc>
    5488:	bl	3490 <__errno_location@plt>
    548c:	mov	x1, x0
    5490:	mov	w0, #0x21                  	// #33
    5494:	str	w0, [x1]
    5498:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    549c:	fmov	d0, x0
    54a0:	b	54fc <PyNumber_FloorDivide@plt+0x1ffc>
    54a4:	ldr	d0, [sp, #24]
    54a8:	fcmpe	d0, #0.0
    54ac:	b.le	54bc <PyNumber_FloorDivide@plt+0x1fbc>
    54b0:	ldr	d0, [sp, #24]
    54b4:	bl	3060 <log2@plt>
    54b8:	b	54fc <PyNumber_FloorDivide@plt+0x1ffc>
    54bc:	ldr	d0, [sp, #24]
    54c0:	fcmp	d0, #0.0
    54c4:	b.ne	54e4 <PyNumber_FloorDivide@plt+0x1fe4>  // b.any
    54c8:	bl	3490 <__errno_location@plt>
    54cc:	mov	x1, x0
    54d0:	mov	w0, #0x21                  	// #33
    54d4:	str	w0, [x1]
    54d8:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
    54dc:	fmov	d0, x0
    54e0:	b	54fc <PyNumber_FloorDivide@plt+0x1ffc>
    54e4:	bl	3490 <__errno_location@plt>
    54e8:	mov	x1, x0
    54ec:	mov	w0, #0x21                  	// #33
    54f0:	str	w0, [x1]
    54f4:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    54f8:	fmov	d0, x0
    54fc:	ldp	x29, x30, [sp], #32
    5500:	ret
    5504:	stp	x29, x30, [sp, #-32]!
    5508:	mov	x29, sp
    550c:	str	d0, [sp, #24]
    5510:	ldr	d0, [sp, #24]
    5514:	fabs	d0, d0
    5518:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    551c:	fmov	d1, x0
    5520:	fcmp	d0, d1
    5524:	cset	w0, hi  // hi = pmore
    5528:	and	w0, w0, #0xff
    552c:	eor	w0, w0, #0x1
    5530:	and	w0, w0, #0xff
    5534:	cmp	w0, #0x0
    5538:	b.eq	5588 <PyNumber_FloorDivide@plt+0x2088>  // b.none
    553c:	ldr	d0, [sp, #24]
    5540:	fcmpe	d0, #0.0
    5544:	b.le	5554 <PyNumber_FloorDivide@plt+0x2054>
    5548:	ldr	d0, [sp, #24]
    554c:	bl	3160 <log10@plt>
    5550:	b	55cc <PyNumber_FloorDivide@plt+0x20cc>
    5554:	bl	3490 <__errno_location@plt>
    5558:	mov	x1, x0
    555c:	mov	w0, #0x21                  	// #33
    5560:	str	w0, [x1]
    5564:	ldr	d0, [sp, #24]
    5568:	fcmp	d0, #0.0
    556c:	b.ne	557c <PyNumber_FloorDivide@plt+0x207c>  // b.any
    5570:	mov	x0, #0xfff0000000000000    	// #-4503599627370496
    5574:	fmov	d0, x0
    5578:	b	55cc <PyNumber_FloorDivide@plt+0x20cc>
    557c:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    5580:	fmov	d0, x0
    5584:	b	55cc <PyNumber_FloorDivide@plt+0x20cc>
    5588:	ldr	d1, [sp, #24]
    558c:	ldr	d0, [sp, #24]
    5590:	fcmp	d1, d0
    5594:	b.vc	55a0 <PyNumber_FloorDivide@plt+0x20a0>
    5598:	ldr	d0, [sp, #24]
    559c:	b	55cc <PyNumber_FloorDivide@plt+0x20cc>
    55a0:	ldr	d0, [sp, #24]
    55a4:	fcmpe	d0, #0.0
    55a8:	b.le	55b4 <PyNumber_FloorDivide@plt+0x20b4>
    55ac:	ldr	d0, [sp, #24]
    55b0:	b	55cc <PyNumber_FloorDivide@plt+0x20cc>
    55b4:	bl	3490 <__errno_location@plt>
    55b8:	mov	x1, x0
    55bc:	mov	w0, #0x21                  	// #33
    55c0:	str	w0, [x1]
    55c4:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    55c8:	fmov	d0, x0
    55cc:	ldp	x29, x30, [sp], #32
    55d0:	ret
    55d4:	stp	x29, x30, [sp, #-64]!
    55d8:	mov	x29, sp
    55dc:	str	x0, [sp, #40]
    55e0:	str	x1, [sp, #32]
    55e4:	str	x2, [sp, #24]
    55e8:	ldr	x0, [sp, #32]
    55ec:	bl	3480 <PyNumber_Index@plt>
    55f0:	str	x0, [sp, #32]
    55f4:	ldr	x0, [sp, #32]
    55f8:	cmp	x0, #0x0
    55fc:	b.ne	5608 <PyNumber_FloorDivide@plt+0x2108>  // b.any
    5600:	mov	x0, #0x0                   	// #0
    5604:	b	5678 <PyNumber_FloorDivide@plt+0x2178>
    5608:	ldr	x0, [sp, #24]
    560c:	bl	3480 <PyNumber_Index@plt>
    5610:	str	x0, [sp, #24]
    5614:	ldr	x0, [sp, #24]
    5618:	cmp	x0, #0x0
    561c:	b.ne	563c <PyNumber_FloorDivide@plt+0x213c>  // b.any
    5620:	ldr	x2, [sp, #32]
    5624:	mov	w1, #0x351                 	// #849
    5628:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    562c:	add	x0, x0, #0x9a8
    5630:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    5634:	mov	x0, #0x0                   	// #0
    5638:	b	5678 <PyNumber_FloorDivide@plt+0x2178>
    563c:	ldr	x1, [sp, #24]
    5640:	ldr	x0, [sp, #32]
    5644:	bl	3280 <_PyLong_GCD@plt>
    5648:	str	x0, [sp, #56]
    564c:	ldr	x2, [sp, #32]
    5650:	mov	w1, #0x355                 	// #853
    5654:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    5658:	add	x0, x0, #0x9a8
    565c:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    5660:	ldr	x2, [sp, #24]
    5664:	mov	w1, #0x356                 	// #854
    5668:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    566c:	add	x0, x0, #0x9a8
    5670:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    5674:	ldr	x0, [sp, #56]
    5678:	ldp	x29, x30, [sp], #64
    567c:	ret
    5680:	stp	x29, x30, [sp, #-48]!
    5684:	mov	x29, sp
    5688:	str	d0, [sp, #24]
    568c:	mov	w0, #0x1                   	// #1
    5690:	str	w0, [sp, #44]
    5694:	bl	3490 <__errno_location@plt>
    5698:	ldr	w0, [x0]
    569c:	cmp	w0, #0x21
    56a0:	b.ne	56c4 <PyNumber_FloorDivide@plt+0x21c4>  // b.any
    56a4:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    56a8:	ldr	x0, [x0, #3872]
    56ac:	ldr	x2, [x0]
    56b0:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    56b4:	add	x1, x0, #0x9d8
    56b8:	mov	x0, x2
    56bc:	bl	31b0 <PyErr_SetString@plt>
    56c0:	b	5720 <PyNumber_FloorDivide@plt+0x2220>
    56c4:	bl	3490 <__errno_location@plt>
    56c8:	ldr	w0, [x0]
    56cc:	cmp	w0, #0x22
    56d0:	b.ne	5710 <PyNumber_FloorDivide@plt+0x2210>  // b.any
    56d4:	ldr	d0, [sp, #24]
    56d8:	fabs	d1, d0
    56dc:	fmov	d0, #1.000000000000000000e+00
    56e0:	fcmpe	d1, d0
    56e4:	b.pl	56f0 <PyNumber_FloorDivide@plt+0x21f0>  // b.nfrst
    56e8:	str	wzr, [sp, #44]
    56ec:	b	5720 <PyNumber_FloorDivide@plt+0x2220>
    56f0:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    56f4:	ldr	x0, [x0, #3936]
    56f8:	ldr	x2, [x0]
    56fc:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    5700:	add	x1, x0, #0x9f0
    5704:	mov	x0, x2
    5708:	bl	31b0 <PyErr_SetString@plt>
    570c:	b	5720 <PyNumber_FloorDivide@plt+0x2220>
    5710:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5714:	ldr	x0, [x0, #3872]
    5718:	ldr	x0, [x0]
    571c:	bl	30b0 <PyErr_SetFromErrno@plt>
    5720:	ldr	w0, [sp, #44]
    5724:	ldp	x29, x30, [sp], #48
    5728:	ret
    572c:	stp	x29, x30, [sp, #-64]!
    5730:	mov	x29, sp
    5734:	str	x0, [sp, #40]
    5738:	str	x1, [sp, #32]
    573c:	str	x2, [sp, #24]
    5740:	str	w3, [sp, #20]
    5744:	ldr	x0, [sp, #40]
    5748:	bl	3360 <PyFloat_AsDouble@plt>
    574c:	str	d0, [sp, #56]
    5750:	ldr	d1, [sp, #56]
    5754:	fmov	d0, #-1.000000000000000000e+00
    5758:	fcmp	d1, d0
    575c:	b.ne	5774 <PyNumber_FloorDivide@plt+0x2274>  // b.any
    5760:	bl	3330 <PyErr_Occurred@plt>
    5764:	cmp	x0, #0x0
    5768:	b.eq	5774 <PyNumber_FloorDivide@plt+0x2274>  // b.none
    576c:	mov	x0, #0x0                   	// #0
    5770:	b	58d8 <PyNumber_FloorDivide@plt+0x23d8>
    5774:	bl	3490 <__errno_location@plt>
    5778:	str	wzr, [x0]
    577c:	ldr	x0, [sp, #32]
    5780:	ldr	d0, [sp, #56]
    5784:	blr	x0
    5788:	str	d0, [sp, #48]
    578c:	ldr	d1, [sp, #48]
    5790:	ldr	d0, [sp, #48]
    5794:	fcmp	d1, d0
    5798:	b.vc	57d0 <PyNumber_FloorDivide@plt+0x22d0>
    579c:	ldr	d1, [sp, #56]
    57a0:	ldr	d0, [sp, #56]
    57a4:	fcmp	d1, d0
    57a8:	b.vs	57d0 <PyNumber_FloorDivide@plt+0x22d0>
    57ac:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    57b0:	ldr	x0, [x0, #3872]
    57b4:	ldr	x2, [x0]
    57b8:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    57bc:	add	x1, x0, #0x9d8
    57c0:	mov	x0, x2
    57c4:	bl	31b0 <PyErr_SetString@plt>
    57c8:	mov	x0, #0x0                   	// #0
    57cc:	b	58d8 <PyNumber_FloorDivide@plt+0x23d8>
    57d0:	ldr	d0, [sp, #48]
    57d4:	fabs	d0, d0
    57d8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    57dc:	fmov	d1, x0
    57e0:	fcmp	d0, d1
    57e4:	cset	w0, le
    57e8:	and	w0, w0, #0xff
    57ec:	eor	w0, w0, #0x1
    57f0:	and	w0, w0, #0xff
    57f4:	cmp	w0, #0x0
    57f8:	b.eq	5878 <PyNumber_FloorDivide@plt+0x2378>  // b.none
    57fc:	ldr	d0, [sp, #56]
    5800:	fabs	d0, d0
    5804:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5808:	fmov	d1, x0
    580c:	fcmp	d0, d1
    5810:	cset	w0, hi  // hi = pmore
    5814:	and	w0, w0, #0xff
    5818:	eor	w0, w0, #0x1
    581c:	and	w0, w0, #0xff
    5820:	cmp	w0, #0x0
    5824:	b.eq	5878 <PyNumber_FloorDivide@plt+0x2378>  // b.none
    5828:	ldr	w0, [sp, #20]
    582c:	cmp	w0, #0x0
    5830:	b.eq	5854 <PyNumber_FloorDivide@plt+0x2354>  // b.none
    5834:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5838:	ldr	x0, [x0, #3936]
    583c:	ldr	x2, [x0]
    5840:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    5844:	add	x1, x0, #0x9f0
    5848:	mov	x0, x2
    584c:	bl	31b0 <PyErr_SetString@plt>
    5850:	b	5870 <PyNumber_FloorDivide@plt+0x2370>
    5854:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5858:	ldr	x0, [x0, #3872]
    585c:	ldr	x2, [x0]
    5860:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    5864:	add	x1, x0, #0x9d8
    5868:	mov	x0, x2
    586c:	bl	31b0 <PyErr_SetString@plt>
    5870:	mov	x0, #0x0                   	// #0
    5874:	b	58d8 <PyNumber_FloorDivide@plt+0x23d8>
    5878:	ldr	d0, [sp, #48]
    587c:	fabs	d0, d0
    5880:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5884:	fmov	d1, x0
    5888:	fcmp	d0, d1
    588c:	cset	w0, hi  // hi = pmore
    5890:	and	w0, w0, #0xff
    5894:	eor	w0, w0, #0x1
    5898:	and	w0, w0, #0xff
    589c:	cmp	w0, #0x0
    58a0:	b.eq	58cc <PyNumber_FloorDivide@plt+0x23cc>  // b.none
    58a4:	bl	3490 <__errno_location@plt>
    58a8:	ldr	w0, [x0]
    58ac:	cmp	w0, #0x0
    58b0:	b.eq	58cc <PyNumber_FloorDivide@plt+0x23cc>  // b.none
    58b4:	ldr	d0, [sp, #48]
    58b8:	bl	5680 <PyNumber_FloorDivide@plt+0x2180>
    58bc:	cmp	w0, #0x0
    58c0:	b.eq	58cc <PyNumber_FloorDivide@plt+0x23cc>  // b.none
    58c4:	mov	x0, #0x0                   	// #0
    58c8:	b	58d8 <PyNumber_FloorDivide@plt+0x23d8>
    58cc:	ldr	x0, [sp, #24]
    58d0:	ldr	d0, [sp, #48]
    58d4:	blr	x0
    58d8:	ldp	x29, x30, [sp], #64
    58dc:	ret
    58e0:	stp	x29, x30, [sp, #-48]!
    58e4:	mov	x29, sp
    58e8:	str	x0, [sp, #24]
    58ec:	str	x1, [sp, #16]
    58f0:	ldr	x0, [sp, #24]
    58f4:	bl	3360 <PyFloat_AsDouble@plt>
    58f8:	str	d0, [sp, #40]
    58fc:	ldr	d1, [sp, #40]
    5900:	fmov	d0, #-1.000000000000000000e+00
    5904:	fcmp	d1, d0
    5908:	b.ne	5920 <PyNumber_FloorDivide@plt+0x2420>  // b.any
    590c:	bl	3330 <PyErr_Occurred@plt>
    5910:	cmp	x0, #0x0
    5914:	b.eq	5920 <PyNumber_FloorDivide@plt+0x2420>  // b.none
    5918:	mov	x0, #0x0                   	// #0
    591c:	b	5968 <PyNumber_FloorDivide@plt+0x2468>
    5920:	bl	3490 <__errno_location@plt>
    5924:	str	wzr, [x0]
    5928:	ldr	x0, [sp, #16]
    592c:	ldr	d0, [sp, #40]
    5930:	blr	x0
    5934:	str	d0, [sp, #32]
    5938:	bl	3490 <__errno_location@plt>
    593c:	ldr	w0, [x0]
    5940:	cmp	w0, #0x0
    5944:	b.eq	5960 <PyNumber_FloorDivide@plt+0x2460>  // b.none
    5948:	ldr	d0, [sp, #32]
    594c:	bl	5680 <PyNumber_FloorDivide@plt+0x2180>
    5950:	cmp	w0, #0x0
    5954:	b.eq	5960 <PyNumber_FloorDivide@plt+0x2460>  // b.none
    5958:	mov	x0, #0x0                   	// #0
    595c:	b	5968 <PyNumber_FloorDivide@plt+0x2468>
    5960:	ldr	d0, [sp, #32]
    5964:	bl	3240 <PyFloat_FromDouble@plt>
    5968:	ldp	x29, x30, [sp], #48
    596c:	ret
    5970:	stp	x29, x30, [sp, #-48]!
    5974:	mov	x29, sp
    5978:	str	x0, [sp, #40]
    597c:	str	x1, [sp, #32]
    5980:	str	w2, [sp, #28]
    5984:	ldr	w3, [sp, #28]
    5988:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    598c:	ldr	x2, [x0, #3904]
    5990:	ldr	x1, [sp, #32]
    5994:	ldr	x0, [sp, #40]
    5998:	bl	572c <PyNumber_FloorDivide@plt+0x222c>
    599c:	ldp	x29, x30, [sp], #48
    59a0:	ret
    59a4:	stp	x29, x30, [sp, #-48]!
    59a8:	mov	x29, sp
    59ac:	str	x0, [sp, #40]
    59b0:	str	x1, [sp, #32]
    59b4:	str	w2, [sp, #28]
    59b8:	ldr	w3, [sp, #28]
    59bc:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    59c0:	ldr	x2, [x0, #3832]
    59c4:	ldr	x1, [sp, #32]
    59c8:	ldr	x0, [sp, #40]
    59cc:	bl	572c <PyNumber_FloorDivide@plt+0x222c>
    59d0:	ldp	x29, x30, [sp], #48
    59d4:	ret
    59d8:	stp	x29, x30, [sp, #-80]!
    59dc:	mov	x29, sp
    59e0:	str	x0, [sp, #40]
    59e4:	str	x1, [sp, #32]
    59e8:	str	x2, [sp, #24]
    59ec:	str	x3, [sp, #16]
    59f0:	ldr	x0, [sp, #32]
    59f4:	cmp	x0, #0x1
    59f8:	b.le	5a08 <PyNumber_FloorDivide@plt+0x2508>
    59fc:	ldr	x0, [sp, #32]
    5a00:	cmp	x0, #0x2
    5a04:	b.le	5a2c <PyNumber_FloorDivide@plt+0x252c>
    5a08:	mov	x3, #0x2                   	// #2
    5a0c:	mov	x2, #0x2                   	// #2
    5a10:	ldr	x1, [sp, #32]
    5a14:	ldr	x0, [sp, #16]
    5a18:	bl	3300 <_PyArg_CheckPositional@plt>
    5a1c:	cmp	w0, #0x0
    5a20:	b.ne	5a2c <PyNumber_FloorDivide@plt+0x252c>  // b.any
    5a24:	mov	x0, #0x0                   	// #0
    5a28:	b	5bc0 <PyNumber_FloorDivide@plt+0x26c0>
    5a2c:	ldr	x0, [sp, #40]
    5a30:	ldr	x0, [x0]
    5a34:	bl	3360 <PyFloat_AsDouble@plt>
    5a38:	str	d0, [sp, #72]
    5a3c:	ldr	x0, [sp, #40]
    5a40:	add	x0, x0, #0x8
    5a44:	ldr	x0, [x0]
    5a48:	bl	3360 <PyFloat_AsDouble@plt>
    5a4c:	str	d0, [sp, #64]
    5a50:	ldr	d1, [sp, #72]
    5a54:	fmov	d0, #-1.000000000000000000e+00
    5a58:	fcmp	d1, d0
    5a5c:	b.eq	5a70 <PyNumber_FloorDivide@plt+0x2570>  // b.none
    5a60:	ldr	d1, [sp, #64]
    5a64:	fmov	d0, #-1.000000000000000000e+00
    5a68:	fcmp	d1, d0
    5a6c:	b.ne	5a84 <PyNumber_FloorDivide@plt+0x2584>  // b.any
    5a70:	bl	3330 <PyErr_Occurred@plt>
    5a74:	cmp	x0, #0x0
    5a78:	b.eq	5a84 <PyNumber_FloorDivide@plt+0x2584>  // b.none
    5a7c:	mov	x0, #0x0                   	// #0
    5a80:	b	5bc0 <PyNumber_FloorDivide@plt+0x26c0>
    5a84:	bl	3490 <__errno_location@plt>
    5a88:	str	wzr, [x0]
    5a8c:	ldr	x0, [sp, #24]
    5a90:	ldr	d1, [sp, #64]
    5a94:	ldr	d0, [sp, #72]
    5a98:	blr	x0
    5a9c:	str	d0, [sp, #56]
    5aa0:	ldr	d1, [sp, #56]
    5aa4:	ldr	d0, [sp, #56]
    5aa8:	fcmp	d1, d0
    5aac:	b.vc	5af0 <PyNumber_FloorDivide@plt+0x25f0>
    5ab0:	ldr	d1, [sp, #72]
    5ab4:	ldr	d0, [sp, #72]
    5ab8:	fcmp	d1, d0
    5abc:	b.vs	5ae4 <PyNumber_FloorDivide@plt+0x25e4>
    5ac0:	ldr	d1, [sp, #64]
    5ac4:	ldr	d0, [sp, #64]
    5ac8:	fcmp	d1, d0
    5acc:	b.vs	5ae4 <PyNumber_FloorDivide@plt+0x25e4>
    5ad0:	bl	3490 <__errno_location@plt>
    5ad4:	mov	x1, x0
    5ad8:	mov	w0, #0x21                  	// #33
    5adc:	str	w0, [x1]
    5ae0:	b	5b90 <PyNumber_FloorDivide@plt+0x2690>
    5ae4:	bl	3490 <__errno_location@plt>
    5ae8:	str	wzr, [x0]
    5aec:	b	5b90 <PyNumber_FloorDivide@plt+0x2690>
    5af0:	ldr	d0, [sp, #56]
    5af4:	fabs	d0, d0
    5af8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5afc:	fmov	d1, x0
    5b00:	fcmp	d0, d1
    5b04:	cset	w0, le
    5b08:	and	w0, w0, #0xff
    5b0c:	eor	w0, w0, #0x1
    5b10:	and	w0, w0, #0xff
    5b14:	cmp	w0, #0x0
    5b18:	b.eq	5b90 <PyNumber_FloorDivide@plt+0x2690>  // b.none
    5b1c:	ldr	d0, [sp, #72]
    5b20:	fabs	d0, d0
    5b24:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5b28:	fmov	d1, x0
    5b2c:	fcmp	d0, d1
    5b30:	cset	w0, hi  // hi = pmore
    5b34:	and	w0, w0, #0xff
    5b38:	eor	w0, w0, #0x1
    5b3c:	and	w0, w0, #0xff
    5b40:	cmp	w0, #0x0
    5b44:	b.eq	5b88 <PyNumber_FloorDivide@plt+0x2688>  // b.none
    5b48:	ldr	d0, [sp, #64]
    5b4c:	fabs	d0, d0
    5b50:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5b54:	fmov	d1, x0
    5b58:	fcmp	d0, d1
    5b5c:	cset	w0, hi  // hi = pmore
    5b60:	and	w0, w0, #0xff
    5b64:	eor	w0, w0, #0x1
    5b68:	and	w0, w0, #0xff
    5b6c:	cmp	w0, #0x0
    5b70:	b.eq	5b88 <PyNumber_FloorDivide@plt+0x2688>  // b.none
    5b74:	bl	3490 <__errno_location@plt>
    5b78:	mov	x1, x0
    5b7c:	mov	w0, #0x22                  	// #34
    5b80:	str	w0, [x1]
    5b84:	b	5b90 <PyNumber_FloorDivide@plt+0x2690>
    5b88:	bl	3490 <__errno_location@plt>
    5b8c:	str	wzr, [x0]
    5b90:	bl	3490 <__errno_location@plt>
    5b94:	ldr	w0, [x0]
    5b98:	cmp	w0, #0x0
    5b9c:	b.eq	5bb8 <PyNumber_FloorDivide@plt+0x26b8>  // b.none
    5ba0:	ldr	d0, [sp, #56]
    5ba4:	bl	5680 <PyNumber_FloorDivide@plt+0x2180>
    5ba8:	cmp	w0, #0x0
    5bac:	b.eq	5bb8 <PyNumber_FloorDivide@plt+0x26b8>  // b.none
    5bb0:	mov	x0, #0x0                   	// #0
    5bb4:	b	5bc0 <PyNumber_FloorDivide@plt+0x26c0>
    5bb8:	ldr	d0, [sp, #56]
    5bbc:	bl	3240 <PyFloat_FromDouble@plt>
    5bc0:	ldp	x29, x30, [sp], #80
    5bc4:	ret
    5bc8:	stp	x29, x30, [sp, #-32]!
    5bcc:	mov	x29, sp
    5bd0:	str	x0, [sp, #24]
    5bd4:	str	x1, [sp, #16]
    5bd8:	mov	w2, #0x0                   	// #0
    5bdc:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5be0:	ldr	x1, [x0, #3952]
    5be4:	ldr	x0, [sp, #16]
    5be8:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    5bec:	ldp	x29, x30, [sp], #32
    5bf0:	ret
    5bf4:	stp	x29, x30, [sp, #-32]!
    5bf8:	mov	x29, sp
    5bfc:	str	x0, [sp, #24]
    5c00:	str	x1, [sp, #16]
    5c04:	mov	w2, #0x0                   	// #0
    5c08:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5c0c:	ldr	x1, [x0, #3896]
    5c10:	ldr	x0, [sp, #16]
    5c14:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    5c18:	ldp	x29, x30, [sp], #32
    5c1c:	ret
    5c20:	stp	x29, x30, [sp, #-32]!
    5c24:	mov	x29, sp
    5c28:	str	x0, [sp, #24]
    5c2c:	str	x1, [sp, #16]
    5c30:	mov	w2, #0x0                   	// #0
    5c34:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5c38:	ldr	x1, [x0, #3816]
    5c3c:	ldr	x0, [sp, #16]
    5c40:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    5c44:	ldp	x29, x30, [sp], #32
    5c48:	ret
    5c4c:	stp	x29, x30, [sp, #-32]!
    5c50:	mov	x29, sp
    5c54:	str	x0, [sp, #24]
    5c58:	str	x1, [sp, #16]
    5c5c:	mov	w2, #0x0                   	// #0
    5c60:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5c64:	ldr	x1, [x0, #3944]
    5c68:	ldr	x0, [sp, #16]
    5c6c:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    5c70:	ldp	x29, x30, [sp], #32
    5c74:	ret
    5c78:	stp	x29, x30, [sp, #-32]!
    5c7c:	mov	x29, sp
    5c80:	str	x0, [sp, #24]
    5c84:	str	x1, [sp, #16]
    5c88:	mov	w2, #0x0                   	// #0
    5c8c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5c90:	ldr	x1, [x0, #4056]
    5c94:	ldr	x0, [sp, #16]
    5c98:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    5c9c:	ldp	x29, x30, [sp], #32
    5ca0:	ret
    5ca4:	stp	x29, x30, [sp, #-48]!
    5ca8:	mov	x29, sp
    5cac:	str	x0, [sp, #40]
    5cb0:	str	x1, [sp, #32]
    5cb4:	str	x2, [sp, #24]
    5cb8:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    5cbc:	add	x3, x0, #0xb80
    5cc0:	adrp	x0, 5000 <PyNumber_FloorDivide@plt+0x1b00>
    5cc4:	add	x2, x0, #0x40
    5cc8:	ldr	x1, [sp, #24]
    5ccc:	ldr	x0, [sp, #32]
    5cd0:	bl	59d8 <PyNumber_FloorDivide@plt+0x24d8>
    5cd4:	ldp	x29, x30, [sp], #48
    5cd8:	ret
    5cdc:	stp	x29, x30, [sp, #-32]!
    5ce0:	mov	x29, sp
    5ce4:	str	x0, [sp, #24]
    5ce8:	str	x1, [sp, #16]
    5cec:	mov	w2, #0x0                   	// #0
    5cf0:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5cf4:	ldr	x1, [x0, #4024]
    5cf8:	ldr	x0, [sp, #16]
    5cfc:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    5d00:	ldp	x29, x30, [sp], #32
    5d04:	ret
    5d08:	stp	x29, x30, [sp, #-48]!
    5d0c:	mov	x29, sp
    5d10:	str	x0, [sp, #24]
    5d14:	str	x1, [sp, #16]
    5d18:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    5d1c:	add	x1, x0, #0x9c0
    5d20:	ldr	x0, [sp, #16]
    5d24:	bl	31e0 <_PyObject_LookupSpecial@plt>
    5d28:	str	x0, [sp, #40]
    5d2c:	ldr	x0, [sp, #40]
    5d30:	cmp	x0, #0x0
    5d34:	b.ne	5d64 <PyNumber_FloorDivide@plt+0x2864>  // b.any
    5d38:	bl	3330 <PyErr_Occurred@plt>
    5d3c:	cmp	x0, #0x0
    5d40:	b.eq	5d4c <PyNumber_FloorDivide@plt+0x284c>  // b.none
    5d44:	mov	x0, #0x0                   	// #0
    5d48:	b	5d88 <PyNumber_FloorDivide@plt+0x2888>
    5d4c:	mov	w2, #0x0                   	// #0
    5d50:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5d54:	ldr	x1, [x0, #4000]
    5d58:	ldr	x0, [sp, #16]
    5d5c:	bl	59a4 <PyNumber_FloorDivide@plt+0x24a4>
    5d60:	b	5d88 <PyNumber_FloorDivide@plt+0x2888>
    5d64:	ldr	x0, [sp, #40]
    5d68:	bl	3848 <PyNumber_FloorDivide@plt+0x348>
    5d6c:	str	x0, [sp, #32]
    5d70:	ldr	x2, [sp, #40]
    5d74:	mov	w1, #0x461                 	// #1121
    5d78:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    5d7c:	add	x0, x0, #0x9a8
    5d80:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    5d84:	ldr	x0, [sp, #32]
    5d88:	ldp	x29, x30, [sp], #48
    5d8c:	ret
    5d90:	stp	x29, x30, [sp, #-48]!
    5d94:	mov	x29, sp
    5d98:	str	x0, [sp, #40]
    5d9c:	str	x1, [sp, #32]
    5da0:	str	x2, [sp, #24]
    5da4:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    5da8:	add	x3, x0, #0xc60
    5dac:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5db0:	ldr	x2, [x0, #3800]
    5db4:	ldr	x1, [sp, #24]
    5db8:	ldr	x0, [sp, #32]
    5dbc:	bl	59d8 <PyNumber_FloorDivide@plt+0x24d8>
    5dc0:	ldp	x29, x30, [sp], #48
    5dc4:	ret
    5dc8:	stp	x29, x30, [sp, #-32]!
    5dcc:	mov	x29, sp
    5dd0:	str	x0, [sp, #24]
    5dd4:	str	x1, [sp, #16]
    5dd8:	mov	w2, #0x0                   	// #0
    5ddc:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5de0:	ldr	x1, [x0, #4048]
    5de4:	ldr	x0, [sp, #16]
    5de8:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    5dec:	ldp	x29, x30, [sp], #32
    5df0:	ret
    5df4:	stp	x29, x30, [sp, #-32]!
    5df8:	mov	x29, sp
    5dfc:	str	x0, [sp, #24]
    5e00:	str	x1, [sp, #16]
    5e04:	mov	w2, #0x1                   	// #1
    5e08:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5e0c:	ldr	x1, [x0, #3976]
    5e10:	ldr	x0, [sp, #16]
    5e14:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    5e18:	ldp	x29, x30, [sp], #32
    5e1c:	ret
    5e20:	stp	x29, x30, [sp, #-32]!
    5e24:	mov	x29, sp
    5e28:	str	x0, [sp, #24]
    5e2c:	str	x1, [sp, #16]
    5e30:	adrp	x0, 5000 <PyNumber_FloorDivide@plt+0x1b00>
    5e34:	add	x1, x0, #0x8
    5e38:	ldr	x0, [sp, #16]
    5e3c:	bl	58e0 <PyNumber_FloorDivide@plt+0x23e0>
    5e40:	ldp	x29, x30, [sp], #32
    5e44:	ret
    5e48:	stp	x29, x30, [sp, #-32]!
    5e4c:	mov	x29, sp
    5e50:	str	x0, [sp, #24]
    5e54:	str	x1, [sp, #16]
    5e58:	adrp	x0, 5000 <PyNumber_FloorDivide@plt+0x1b00>
    5e5c:	add	x1, x0, #0x24
    5e60:	ldr	x0, [sp, #16]
    5e64:	bl	58e0 <PyNumber_FloorDivide@plt+0x23e0>
    5e68:	ldp	x29, x30, [sp], #32
    5e6c:	ret
    5e70:	stp	x29, x30, [sp, #-32]!
    5e74:	mov	x29, sp
    5e78:	str	x0, [sp, #24]
    5e7c:	str	x1, [sp, #16]
    5e80:	mov	w2, #0x1                   	// #1
    5e84:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5e88:	ldr	x1, [x0, #4064]
    5e8c:	ldr	x0, [sp, #16]
    5e90:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    5e94:	ldp	x29, x30, [sp], #32
    5e98:	ret
    5e9c:	stp	x29, x30, [sp, #-32]!
    5ea0:	mov	x29, sp
    5ea4:	str	x0, [sp, #24]
    5ea8:	str	x1, [sp, #16]
    5eac:	mov	w2, #0x1                   	// #1
    5eb0:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5eb4:	ldr	x1, [x0, #3840]
    5eb8:	ldr	x0, [sp, #16]
    5ebc:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    5ec0:	ldp	x29, x30, [sp], #32
    5ec4:	ret
    5ec8:	stp	x29, x30, [sp, #-32]!
    5ecc:	mov	x29, sp
    5ed0:	str	x0, [sp, #24]
    5ed4:	str	x1, [sp, #16]
    5ed8:	mov	w2, #0x0                   	// #0
    5edc:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5ee0:	ldr	x1, [x0, #3880]
    5ee4:	ldr	x0, [sp, #16]
    5ee8:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    5eec:	ldp	x29, x30, [sp], #32
    5ef0:	ret
    5ef4:	stp	x29, x30, [sp, #-48]!
    5ef8:	mov	x29, sp
    5efc:	str	x0, [sp, #24]
    5f00:	str	x1, [sp, #16]
    5f04:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    5f08:	add	x1, x0, #0x9d8
    5f0c:	ldr	x0, [sp, #16]
    5f10:	bl	31e0 <_PyObject_LookupSpecial@plt>
    5f14:	str	x0, [sp, #40]
    5f18:	ldr	x0, [sp, #40]
    5f1c:	cmp	x0, #0x0
    5f20:	b.ne	5f50 <PyNumber_FloorDivide@plt+0x2a50>  // b.any
    5f24:	bl	3330 <PyErr_Occurred@plt>
    5f28:	cmp	x0, #0x0
    5f2c:	b.eq	5f38 <PyNumber_FloorDivide@plt+0x2a38>  // b.none
    5f30:	mov	x0, #0x0                   	// #0
    5f34:	b	5f74 <PyNumber_FloorDivide@plt+0x2a74>
    5f38:	mov	w2, #0x0                   	// #0
    5f3c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5f40:	ldr	x1, [x0, #3992]
    5f44:	ldr	x0, [sp, #16]
    5f48:	bl	59a4 <PyNumber_FloorDivide@plt+0x24a4>
    5f4c:	b	5f74 <PyNumber_FloorDivide@plt+0x2a74>
    5f50:	ldr	x0, [sp, #40]
    5f54:	bl	3848 <PyNumber_FloorDivide@plt+0x348>
    5f58:	str	x0, [sp, #32]
    5f5c:	ldr	x2, [sp, #40]
    5f60:	mov	w1, #0x49b                 	// #1179
    5f64:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    5f68:	add	x0, x0, #0x9a8
    5f6c:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    5f70:	ldr	x0, [sp, #32]
    5f74:	ldp	x29, x30, [sp], #48
    5f78:	ret
    5f7c:	stp	x29, x30, [sp, #-32]!
    5f80:	mov	x29, sp
    5f84:	str	x0, [sp, #24]
    5f88:	str	x1, [sp, #16]
    5f8c:	adrp	x0, 4000 <PyNumber_FloorDivide@plt+0xb00>
    5f90:	add	x1, x0, #0x9f8
    5f94:	ldr	x0, [sp, #16]
    5f98:	bl	58e0 <PyNumber_FloorDivide@plt+0x23e0>
    5f9c:	ldp	x29, x30, [sp], #32
    5fa0:	ret
    5fa4:	stp	x29, x30, [sp, #-32]!
    5fa8:	mov	x29, sp
    5fac:	str	x0, [sp, #24]
    5fb0:	str	x1, [sp, #16]
    5fb4:	adrp	x0, 4000 <PyNumber_FloorDivide@plt+0xb00>
    5fb8:	add	x1, x0, #0xe48
    5fbc:	ldr	x0, [sp, #16]
    5fc0:	bl	58e0 <PyNumber_FloorDivide@plt+0x23e0>
    5fc4:	ldp	x29, x30, [sp], #32
    5fc8:	ret
    5fcc:	stp	x29, x30, [sp, #-32]!
    5fd0:	mov	x29, sp
    5fd4:	str	x0, [sp, #24]
    5fd8:	str	x1, [sp, #16]
    5fdc:	mov	w2, #0x0                   	// #0
    5fe0:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    5fe4:	ldr	x1, [x0, #4016]
    5fe8:	ldr	x0, [sp, #16]
    5fec:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    5ff0:	ldp	x29, x30, [sp], #32
    5ff4:	ret
    5ff8:	stp	x29, x30, [sp, #-48]!
    5ffc:	mov	x29, sp
    6000:	str	x0, [sp, #40]
    6004:	str	x1, [sp, #32]
    6008:	str	x2, [sp, #24]
    600c:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    6010:	add	x3, x0, #0x58
    6014:	adrp	x0, 5000 <PyNumber_FloorDivide@plt+0x1b00>
    6018:	add	x2, x0, #0x1b8
    601c:	ldr	x1, [sp, #24]
    6020:	ldr	x0, [sp, #32]
    6024:	bl	59d8 <PyNumber_FloorDivide@plt+0x24d8>
    6028:	ldp	x29, x30, [sp], #48
    602c:	ret
    6030:	stp	x29, x30, [sp, #-32]!
    6034:	mov	x29, sp
    6038:	str	x0, [sp, #24]
    603c:	str	x1, [sp, #16]
    6040:	mov	w2, #0x0                   	// #0
    6044:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    6048:	ldr	x1, [x0, #3912]
    604c:	ldr	x0, [sp, #16]
    6050:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    6054:	ldp	x29, x30, [sp], #32
    6058:	ret
    605c:	stp	x29, x30, [sp, #-32]!
    6060:	mov	x29, sp
    6064:	str	x0, [sp, #24]
    6068:	str	x1, [sp, #16]
    606c:	mov	w2, #0x1                   	// #1
    6070:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    6074:	ldr	x1, [x0, #3968]
    6078:	ldr	x0, [sp, #16]
    607c:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    6080:	ldp	x29, x30, [sp], #32
    6084:	ret
    6088:	stp	x29, x30, [sp, #-32]!
    608c:	mov	x29, sp
    6090:	str	x0, [sp, #24]
    6094:	str	x1, [sp, #16]
    6098:	mov	w2, #0x0                   	// #0
    609c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    60a0:	ldr	x1, [x0, #3856]
    60a4:	ldr	x0, [sp, #16]
    60a8:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    60ac:	ldp	x29, x30, [sp], #32
    60b0:	ret
    60b4:	stp	x29, x30, [sp, #-32]!
    60b8:	mov	x29, sp
    60bc:	str	x0, [sp, #24]
    60c0:	str	x1, [sp, #16]
    60c4:	mov	w2, #0x0                   	// #0
    60c8:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    60cc:	ldr	x1, [x0, #4032]
    60d0:	ldr	x0, [sp, #16]
    60d4:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    60d8:	ldp	x29, x30, [sp], #32
    60dc:	ret
    60e0:	stp	x29, x30, [sp, #-32]!
    60e4:	mov	x29, sp
    60e8:	str	x0, [sp, #24]
    60ec:	str	x1, [sp, #16]
    60f0:	mov	w2, #0x0                   	// #0
    60f4:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    60f8:	ldr	x1, [x0, #3920]
    60fc:	ldr	x0, [sp, #16]
    6100:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    6104:	ldp	x29, x30, [sp], #32
    6108:	ret
    610c:	stp	x29, x30, [sp, #-80]!
    6110:	mov	x29, sp
    6114:	str	x0, [sp, #40]
    6118:	str	x1, [sp, #32]
    611c:	str	x2, [sp, #24]
    6120:	str	x3, [sp, #16]
    6124:	str	xzr, [sp, #72]
    6128:	ldr	x0, [sp, #16]
    612c:	ldr	x0, [x0]
    6130:	str	x0, [sp, #64]
    6134:	ldr	x0, [sp, #64]
    6138:	lsl	x0, x0, #1
    613c:	str	x0, [sp, #64]
    6140:	ldr	x1, [sp, #32]
    6144:	ldr	x0, [sp, #64]
    6148:	cmp	x1, x0
    614c:	b.ge	61cc <PyNumber_FloorDivide@plt+0x2ccc>  // b.tcont
    6150:	ldr	x1, [sp, #64]
    6154:	mov	x0, #0xffffffffffffffe     	// #1152921504606846974
    6158:	cmp	x1, x0
    615c:	b.hi	61cc <PyNumber_FloorDivide@plt+0x2ccc>  // b.pmore
    6160:	ldr	x0, [sp, #40]
    6164:	ldr	x0, [x0]
    6168:	str	x0, [sp, #56]
    616c:	ldr	x1, [sp, #56]
    6170:	ldr	x0, [sp, #24]
    6174:	cmp	x1, x0
    6178:	b.ne	61b4 <PyNumber_FloorDivide@plt+0x2cb4>  // b.any
    617c:	ldr	x0, [sp, #64]
    6180:	lsl	x0, x0, #3
    6184:	bl	34b0 <PyMem_Malloc@plt>
    6188:	str	x0, [sp, #72]
    618c:	ldr	x0, [sp, #72]
    6190:	cmp	x0, #0x0
    6194:	b.eq	61cc <PyNumber_FloorDivide@plt+0x2ccc>  // b.none
    6198:	ldr	x0, [sp, #32]
    619c:	lsl	x0, x0, #3
    61a0:	mov	x2, x0
    61a4:	ldr	x1, [sp, #24]
    61a8:	ldr	x0, [sp, #72]
    61ac:	bl	3030 <memcpy@plt>
    61b0:	b	61cc <PyNumber_FloorDivide@plt+0x2ccc>
    61b4:	ldr	x0, [sp, #64]
    61b8:	lsl	x0, x0, #3
    61bc:	mov	x1, x0
    61c0:	ldr	x0, [sp, #56]
    61c4:	bl	3200 <PyMem_Realloc@plt>
    61c8:	str	x0, [sp, #72]
    61cc:	ldr	x0, [sp, #72]
    61d0:	cmp	x0, #0x0
    61d4:	b.ne	61fc <PyNumber_FloorDivide@plt+0x2cfc>  // b.any
    61d8:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    61dc:	ldr	x0, [x0, #3864]
    61e0:	ldr	x2, [x0]
    61e4:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    61e8:	add	x1, x0, #0x2d0
    61ec:	mov	x0, x2
    61f0:	bl	31b0 <PyErr_SetString@plt>
    61f4:	mov	w0, #0x1                   	// #1
    61f8:	b	6218 <PyNumber_FloorDivide@plt+0x2d18>
    61fc:	ldr	x0, [sp, #40]
    6200:	ldr	x1, [sp, #72]
    6204:	str	x1, [x0]
    6208:	ldr	x0, [sp, #16]
    620c:	ldr	x1, [sp, #64]
    6210:	str	x1, [x0]
    6214:	mov	w0, #0x0                   	// #0
    6218:	ldp	x29, x30, [sp], #80
    621c:	ret
    6220:	stp	x29, x30, [sp, #-432]!
    6224:	mov	x29, sp
    6228:	str	x0, [sp, #24]
    622c:	str	x1, [sp, #16]
    6230:	str	xzr, [sp, #424]
    6234:	str	xzr, [sp, #400]
    6238:	mov	x0, #0x20                  	// #32
    623c:	str	x0, [sp, #328]
    6240:	add	x0, sp, #0x48
    6244:	str	x0, [sp, #64]
    6248:	str	xzr, [sp, #376]
    624c:	str	xzr, [sp, #368]
    6250:	ldr	x0, [sp, #16]
    6254:	bl	3410 <PyObject_GetIter@plt>
    6258:	str	x0, [sp, #360]
    625c:	ldr	x0, [sp, #360]
    6260:	cmp	x0, #0x0
    6264:	b.ne	6270 <PyNumber_FloorDivide@plt+0x2d70>  // b.any
    6268:	mov	x0, #0x0                   	// #0
    626c:	b	6754 <PyNumber_FloorDivide@plt+0x3254>
    6270:	ldr	x0, [sp, #360]
    6274:	bl	3130 <PyIter_Next@plt>
    6278:	str	x0, [sp, #352]
    627c:	ldr	x0, [sp, #352]
    6280:	cmp	x0, #0x0
    6284:	b.ne	6298 <PyNumber_FloorDivide@plt+0x2d98>  // b.any
    6288:	bl	3330 <PyErr_Occurred@plt>
    628c:	cmp	x0, #0x0
    6290:	b.eq	6544 <PyNumber_FloorDivide@plt+0x3044>  // b.none
    6294:	b	6704 <PyNumber_FloorDivide@plt+0x3204>
    6298:	ldr	x0, [sp, #352]
    629c:	ldr	x1, [x0, #8]
    62a0:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    62a4:	ldr	x0, [x0, #3824]
    62a8:	cmp	x1, x0
    62ac:	b.ne	62c0 <PyNumber_FloorDivide@plt+0x2dc0>  // b.any
    62b0:	ldr	x0, [sp, #352]
    62b4:	ldr	d0, [x0, #16]
    62b8:	str	d0, [sp, #392]
    62bc:	b	632c <PyNumber_FloorDivide@plt+0x2e2c>
    62c0:	ldr	x0, [sp, #352]
    62c4:	ldr	x1, [x0, #8]
    62c8:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    62cc:	ldr	x0, [x0, #3984]
    62d0:	cmp	x1, x0
    62d4:	b.ne	6304 <PyNumber_FloorDivide@plt+0x2e04>  // b.any
    62d8:	ldr	x0, [sp, #352]
    62dc:	bl	33b0 <PyLong_AsDouble@plt>
    62e0:	str	d0, [sp, #392]
    62e4:	ldr	d1, [sp, #392]
    62e8:	fmov	d0, #-1.000000000000000000e+00
    62ec:	fcmp	d1, d0
    62f0:	b.ne	632c <PyNumber_FloorDivide@plt+0x2e2c>  // b.any
    62f4:	bl	3330 <PyErr_Occurred@plt>
    62f8:	cmp	x0, #0x0
    62fc:	b.eq	632c <PyNumber_FloorDivide@plt+0x2e2c>  // b.none
    6300:	b	673c <PyNumber_FloorDivide@plt+0x323c>
    6304:	ldr	x0, [sp, #352]
    6308:	bl	3360 <PyFloat_AsDouble@plt>
    630c:	str	d0, [sp, #392]
    6310:	ldr	d1, [sp, #392]
    6314:	fmov	d0, #-1.000000000000000000e+00
    6318:	fcmp	d1, d0
    631c:	b.ne	632c <PyNumber_FloorDivide@plt+0x2e2c>  // b.any
    6320:	bl	3330 <PyErr_Occurred@plt>
    6324:	cmp	x0, #0x0
    6328:	b.ne	6738 <PyNumber_FloorDivide@plt+0x3238>  // b.any
    632c:	ldr	x2, [sp, #352]
    6330:	mov	w1, #0x546                 	// #1350
    6334:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6338:	add	x0, x0, #0x9a8
    633c:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6340:	ldr	d0, [sp, #392]
    6344:	str	d0, [sp, #344]
    6348:	str	xzr, [sp, #408]
    634c:	ldr	x0, [sp, #408]
    6350:	str	x0, [sp, #416]
    6354:	b	6410 <PyNumber_FloorDivide@plt+0x2f10>
    6358:	ldr	x1, [sp, #64]
    635c:	ldr	x0, [sp, #408]
    6360:	lsl	x0, x0, #3
    6364:	add	x0, x1, x0
    6368:	ldr	d0, [x0]
    636c:	str	d0, [sp, #384]
    6370:	ldr	d0, [sp, #392]
    6374:	fabs	d1, d0
    6378:	ldr	d0, [sp, #384]
    637c:	fabs	d0, d0
    6380:	fcmpe	d1, d0
    6384:	b.pl	63a0 <PyNumber_FloorDivide@plt+0x2ea0>  // b.nfrst
    6388:	ldr	d0, [sp, #392]
    638c:	str	d0, [sp, #336]
    6390:	ldr	d0, [sp, #384]
    6394:	str	d0, [sp, #392]
    6398:	ldr	d0, [sp, #336]
    639c:	str	d0, [sp, #384]
    63a0:	ldr	d1, [sp, #392]
    63a4:	ldr	d0, [sp, #384]
    63a8:	fadd	d0, d1, d0
    63ac:	str	d0, [sp, #56]
    63b0:	ldr	d1, [sp, #56]
    63b4:	ldr	d0, [sp, #392]
    63b8:	fsub	d0, d1, d0
    63bc:	str	d0, [sp, #48]
    63c0:	ldr	d0, [sp, #48]
    63c4:	ldr	d1, [sp, #384]
    63c8:	fsub	d0, d1, d0
    63cc:	str	d0, [sp, #40]
    63d0:	ldr	d0, [sp, #40]
    63d4:	fcmp	d0, #0.0
    63d8:	b.eq	63fc <PyNumber_FloorDivide@plt+0x2efc>  // b.none
    63dc:	ldr	x1, [sp, #64]
    63e0:	ldr	x0, [sp, #416]
    63e4:	add	x2, x0, #0x1
    63e8:	str	x2, [sp, #416]
    63ec:	lsl	x0, x0, #3
    63f0:	add	x0, x1, x0
    63f4:	ldr	d0, [sp, #40]
    63f8:	str	d0, [x0]
    63fc:	ldr	d0, [sp, #56]
    6400:	str	d0, [sp, #392]
    6404:	ldr	x0, [sp, #408]
    6408:	add	x0, x0, #0x1
    640c:	str	x0, [sp, #408]
    6410:	ldr	x1, [sp, #408]
    6414:	ldr	x0, [sp, #400]
    6418:	cmp	x1, x0
    641c:	b.lt	6358 <PyNumber_FloorDivide@plt+0x2e58>  // b.tstop
    6420:	ldr	x0, [sp, #416]
    6424:	str	x0, [sp, #400]
    6428:	ldr	d0, [sp, #392]
    642c:	fcmp	d0, #0.0
    6430:	b.eq	6270 <PyNumber_FloorDivide@plt+0x2d70>  // b.none
    6434:	ldr	d0, [sp, #392]
    6438:	fabs	d0, d0
    643c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6440:	fmov	d1, x0
    6444:	fcmp	d0, d1
    6448:	b.ls	64ec <PyNumber_FloorDivide@plt+0x2fec>  // b.plast
    644c:	ldr	d0, [sp, #344]
    6450:	fabs	d0, d0
    6454:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6458:	fmov	d1, x0
    645c:	fcmp	d0, d1
    6460:	cset	w0, hi  // hi = pmore
    6464:	and	w0, w0, #0xff
    6468:	eor	w0, w0, #0x1
    646c:	and	w0, w0, #0xff
    6470:	cmp	w0, #0x0
    6474:	b.eq	6498 <PyNumber_FloorDivide@plt+0x2f98>  // b.none
    6478:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    647c:	ldr	x0, [x0, #3936]
    6480:	ldr	x2, [x0]
    6484:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    6488:	add	x1, x0, #0x2e8
    648c:	mov	x0, x2
    6490:	bl	31b0 <PyErr_SetString@plt>
    6494:	b	6704 <PyNumber_FloorDivide@plt+0x3204>
    6498:	ldr	d0, [sp, #344]
    649c:	fabs	d0, d0
    64a0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    64a4:	fmov	d1, x0
    64a8:	fcmp	d0, d1
    64ac:	cset	w0, le
    64b0:	and	w0, w0, #0xff
    64b4:	eor	w0, w0, #0x1
    64b8:	and	w0, w0, #0xff
    64bc:	cmp	w0, #0x0
    64c0:	b.eq	64d4 <PyNumber_FloorDivide@plt+0x2fd4>  // b.none
    64c4:	ldr	d1, [sp, #368]
    64c8:	ldr	d0, [sp, #344]
    64cc:	fadd	d0, d1, d0
    64d0:	str	d0, [sp, #368]
    64d4:	ldr	d1, [sp, #376]
    64d8:	ldr	d0, [sp, #344]
    64dc:	fadd	d0, d1, d0
    64e0:	str	d0, [sp, #376]
    64e4:	str	xzr, [sp, #400]
    64e8:	b	6270 <PyNumber_FloorDivide@plt+0x2d70>
    64ec:	ldr	x0, [sp, #328]
    64f0:	ldr	x1, [sp, #400]
    64f4:	cmp	x1, x0
    64f8:	b.lt	6520 <PyNumber_FloorDivide@plt+0x3020>  // b.tstop
    64fc:	add	x2, sp, #0x148
    6500:	add	x1, sp, #0x48
    6504:	add	x0, sp, #0x40
    6508:	mov	x3, x2
    650c:	mov	x2, x1
    6510:	ldr	x1, [sp, #400]
    6514:	bl	610c <PyNumber_FloorDivide@plt+0x2c0c>
    6518:	cmp	w0, #0x0
    651c:	b.ne	6700 <PyNumber_FloorDivide@plt+0x3200>  // b.any
    6520:	ldr	x1, [sp, #64]
    6524:	ldr	x0, [sp, #400]
    6528:	add	x2, x0, #0x1
    652c:	str	x2, [sp, #400]
    6530:	lsl	x0, x0, #3
    6534:	add	x0, x1, x0
    6538:	ldr	d0, [sp, #392]
    653c:	str	d0, [x0]
    6540:	b	6270 <PyNumber_FloorDivide@plt+0x2d70>
    6544:	nop
    6548:	ldr	d0, [sp, #376]
    654c:	fcmp	d0, #0.0
    6550:	b.eq	6594 <PyNumber_FloorDivide@plt+0x3094>  // b.none
    6554:	ldr	d1, [sp, #368]
    6558:	ldr	d0, [sp, #368]
    655c:	fcmp	d1, d0
    6560:	b.vc	6584 <PyNumber_FloorDivide@plt+0x3084>
    6564:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    6568:	ldr	x0, [x0, #3872]
    656c:	ldr	x2, [x0]
    6570:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    6574:	add	x1, x0, #0x308
    6578:	mov	x0, x2
    657c:	bl	31b0 <PyErr_SetString@plt>
    6580:	b	6704 <PyNumber_FloorDivide@plt+0x3204>
    6584:	ldr	d0, [sp, #376]
    6588:	bl	3240 <PyFloat_FromDouble@plt>
    658c:	str	x0, [sp, #424]
    6590:	b	6704 <PyNumber_FloorDivide@plt+0x3204>
    6594:	str	xzr, [sp, #56]
    6598:	ldr	x0, [sp, #400]
    659c:	cmp	x0, #0x0
    65a0:	b.le	66f0 <PyNumber_FloorDivide@plt+0x31f0>
    65a4:	ldr	x1, [sp, #64]
    65a8:	ldr	x0, [sp, #400]
    65ac:	sub	x0, x0, #0x1
    65b0:	str	x0, [sp, #400]
    65b4:	ldr	x0, [sp, #400]
    65b8:	lsl	x0, x0, #3
    65bc:	add	x0, x1, x0
    65c0:	ldr	d0, [x0]
    65c4:	str	d0, [sp, #56]
    65c8:	b	6634 <PyNumber_FloorDivide@plt+0x3134>
    65cc:	ldr	d0, [sp, #56]
    65d0:	str	d0, [sp, #392]
    65d4:	ldr	x1, [sp, #64]
    65d8:	ldr	x0, [sp, #400]
    65dc:	sub	x0, x0, #0x1
    65e0:	str	x0, [sp, #400]
    65e4:	ldr	x0, [sp, #400]
    65e8:	lsl	x0, x0, #3
    65ec:	add	x0, x1, x0
    65f0:	ldr	d0, [x0]
    65f4:	str	d0, [sp, #384]
    65f8:	ldr	d1, [sp, #392]
    65fc:	ldr	d0, [sp, #384]
    6600:	fadd	d0, d1, d0
    6604:	str	d0, [sp, #56]
    6608:	ldr	d1, [sp, #56]
    660c:	ldr	d0, [sp, #392]
    6610:	fsub	d0, d1, d0
    6614:	str	d0, [sp, #48]
    6618:	ldr	d0, [sp, #48]
    661c:	ldr	d1, [sp, #384]
    6620:	fsub	d0, d1, d0
    6624:	str	d0, [sp, #40]
    6628:	ldr	d0, [sp, #40]
    662c:	fcmp	d0, #0.0
    6630:	b.ne	6644 <PyNumber_FloorDivide@plt+0x3144>  // b.any
    6634:	ldr	x0, [sp, #400]
    6638:	cmp	x0, #0x0
    663c:	b.gt	65cc <PyNumber_FloorDivide@plt+0x30cc>
    6640:	b	6648 <PyNumber_FloorDivide@plt+0x3148>
    6644:	nop
    6648:	ldr	x0, [sp, #400]
    664c:	cmp	x0, #0x0
    6650:	b.le	66f0 <PyNumber_FloorDivide@plt+0x31f0>
    6654:	ldr	d0, [sp, #40]
    6658:	fcmpe	d0, #0.0
    665c:	b.pl	6680 <PyNumber_FloorDivide@plt+0x3180>  // b.nfrst
    6660:	ldr	x1, [sp, #64]
    6664:	ldr	x0, [sp, #400]
    6668:	lsl	x0, x0, #3
    666c:	sub	x0, x0, #0x8
    6670:	add	x0, x1, x0
    6674:	ldr	d0, [x0]
    6678:	fcmpe	d0, #0.0
    667c:	b.mi	66ac <PyNumber_FloorDivide@plt+0x31ac>  // b.first
    6680:	ldr	d0, [sp, #40]
    6684:	fcmpe	d0, #0.0
    6688:	b.le	66f0 <PyNumber_FloorDivide@plt+0x31f0>
    668c:	ldr	x1, [sp, #64]
    6690:	ldr	x0, [sp, #400]
    6694:	lsl	x0, x0, #3
    6698:	sub	x0, x0, #0x8
    669c:	add	x0, x1, x0
    66a0:	ldr	d0, [x0]
    66a4:	fcmpe	d0, #0.0
    66a8:	b.le	66f0 <PyNumber_FloorDivide@plt+0x31f0>
    66ac:	ldr	d0, [sp, #40]
    66b0:	fadd	d0, d0, d0
    66b4:	str	d0, [sp, #384]
    66b8:	ldr	d0, [sp, #56]
    66bc:	ldr	d1, [sp, #384]
    66c0:	fadd	d0, d1, d0
    66c4:	str	d0, [sp, #392]
    66c8:	ldr	d0, [sp, #56]
    66cc:	ldr	d1, [sp, #392]
    66d0:	fsub	d0, d1, d0
    66d4:	str	d0, [sp, #48]
    66d8:	ldr	d0, [sp, #48]
    66dc:	ldr	d1, [sp, #384]
    66e0:	fcmp	d1, d0
    66e4:	b.ne	66f0 <PyNumber_FloorDivide@plt+0x31f0>  // b.any
    66e8:	ldr	d0, [sp, #392]
    66ec:	str	d0, [sp, #56]
    66f0:	ldr	d0, [sp, #56]
    66f4:	bl	3240 <PyFloat_FromDouble@plt>
    66f8:	str	x0, [sp, #424]
    66fc:	b	6704 <PyNumber_FloorDivide@plt+0x3204>
    6700:	nop
    6704:	ldr	x2, [sp, #360]
    6708:	mov	w1, #0x599                 	// #1433
    670c:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6710:	add	x0, x0, #0x9a8
    6714:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6718:	ldr	x1, [sp, #64]
    671c:	add	x0, sp, #0x48
    6720:	cmp	x1, x0
    6724:	b.eq	6730 <PyNumber_FloorDivide@plt+0x3230>  // b.none
    6728:	ldr	x0, [sp, #64]
    672c:	bl	3090 <PyMem_Free@plt>
    6730:	ldr	x0, [sp, #424]
    6734:	b	6754 <PyNumber_FloorDivide@plt+0x3254>
    6738:	nop
    673c:	ldr	x2, [sp, #352]
    6740:	mov	w1, #0x59f                 	// #1439
    6744:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6748:	add	x0, x0, #0x9a8
    674c:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6750:	b	6704 <PyNumber_FloorDivide@plt+0x3204>
    6754:	ldp	x29, x30, [sp], #432
    6758:	ret
    675c:	sub	sp, sp, #0x20
    6760:	str	x0, [sp, #8]
    6764:	str	xzr, [sp, #24]
    6768:	b	6784 <PyNumber_FloorDivide@plt+0x3284>
    676c:	ldr	x0, [sp, #24]
    6770:	add	x0, x0, #0x1
    6774:	str	x0, [sp, #24]
    6778:	ldr	x0, [sp, #8]
    677c:	lsr	x0, x0, #1
    6780:	str	x0, [sp, #8]
    6784:	ldr	x0, [sp, #8]
    6788:	cmp	x0, #0x0
    678c:	b.ne	676c <PyNumber_FloorDivide@plt+0x326c>  // b.any
    6790:	ldr	x0, [sp, #24]
    6794:	add	sp, sp, #0x20
    6798:	ret
    679c:	sub	sp, sp, #0x20
    67a0:	str	x0, [sp, #8]
    67a4:	str	xzr, [sp, #24]
    67a8:	b	67cc <PyNumber_FloorDivide@plt+0x32cc>
    67ac:	ldr	x0, [sp, #24]
    67b0:	add	x0, x0, #0x1
    67b4:	str	x0, [sp, #24]
    67b8:	ldr	x0, [sp, #8]
    67bc:	sub	x0, x0, #0x1
    67c0:	ldr	x1, [sp, #8]
    67c4:	and	x0, x1, x0
    67c8:	str	x0, [sp, #8]
    67cc:	ldr	x0, [sp, #8]
    67d0:	cmp	x0, #0x0
    67d4:	b.ne	67ac <PyNumber_FloorDivide@plt+0x32ac>  // b.any
    67d8:	ldr	x0, [sp, #24]
    67dc:	add	sp, sp, #0x20
    67e0:	ret
    67e4:	sub	sp, sp, #0x20
    67e8:	str	x0, [sp, #8]
    67ec:	ldr	x0, [sp, #8]
    67f0:	lsr	x0, x0, #62
    67f4:	add	w0, w0, #0x1
    67f8:	str	w0, [sp, #28]
    67fc:	ldr	w0, [sp, #28]
    6800:	lsl	w0, w0, #1
    6804:	ldr	x1, [sp, #8]
    6808:	lsr	x2, x1, #59
    680c:	ldr	w1, [sp, #28]
    6810:	udiv	x1, x2, x1
    6814:	add	w0, w0, w1
    6818:	str	w0, [sp, #28]
    681c:	ldr	w0, [sp, #28]
    6820:	lsl	w0, w0, #3
    6824:	ldr	x1, [sp, #8]
    6828:	lsr	x2, x1, #53
    682c:	ldr	w1, [sp, #28]
    6830:	udiv	x1, x2, x1
    6834:	add	w0, w0, w1
    6838:	str	w0, [sp, #28]
    683c:	ldr	w0, [sp, #28]
    6840:	lsl	w0, w0, #7
    6844:	ldr	x1, [sp, #8]
    6848:	lsr	x2, x1, #41
    684c:	ldr	w1, [sp, #28]
    6850:	udiv	x1, x2, x1
    6854:	add	w0, w0, w1
    6858:	str	w0, [sp, #28]
    685c:	ldr	w0, [sp, #28]
    6860:	lsl	w0, w0, #15
    6864:	mov	w1, w0
    6868:	ldr	x0, [sp, #8]
    686c:	lsr	x2, x0, #17
    6870:	ldr	w0, [sp, #28]
    6874:	udiv	x0, x2, x0
    6878:	add	x0, x1, x0
    687c:	add	sp, sp, #0x20
    6880:	ret
    6884:	stp	x29, x30, [sp, #-160]!
    6888:	mov	x29, sp
    688c:	str	x0, [sp, #24]
    6890:	str	x1, [sp, #16]
    6894:	str	xzr, [sp, #136]
    6898:	ldr	x0, [sp, #16]
    689c:	bl	3480 <PyNumber_Index@plt>
    68a0:	str	x0, [sp, #16]
    68a4:	ldr	x0, [sp, #16]
    68a8:	cmp	x0, #0x0
    68ac:	b.ne	68b8 <PyNumber_FloorDivide@plt+0x33b8>  // b.any
    68b0:	mov	x0, #0x0                   	// #0
    68b4:	b	6d48 <PyNumber_FloorDivide@plt+0x3848>
    68b8:	ldr	x0, [sp, #16]
    68bc:	bl	3140 <_PyLong_Sign@plt>
    68c0:	cmp	w0, #0x0
    68c4:	b.ge	68e8 <PyNumber_FloorDivide@plt+0x33e8>  // b.tcont
    68c8:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    68cc:	ldr	x0, [x0, #3872]
    68d0:	ldr	x2, [x0]
    68d4:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    68d8:	add	x1, x0, #0x320
    68dc:	mov	x0, x2
    68e0:	bl	31b0 <PyErr_SetString@plt>
    68e4:	b	6d28 <PyNumber_FloorDivide@plt+0x3828>
    68e8:	ldr	x0, [sp, #16]
    68ec:	bl	3140 <_PyLong_Sign@plt>
    68f0:	cmp	w0, #0x0
    68f4:	b.ne	6918 <PyNumber_FloorDivide@plt+0x3418>  // b.any
    68f8:	ldr	x2, [sp, #16]
    68fc:	mov	w1, #0x685                 	// #1669
    6900:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6904:	add	x0, x0, #0x9a8
    6908:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    690c:	mov	x0, #0x0                   	// #0
    6910:	bl	3260 <PyLong_FromLong@plt>
    6914:	b	6d48 <PyNumber_FloorDivide@plt+0x3848>
    6918:	ldr	x0, [sp, #16]
    691c:	bl	3170 <_PyLong_NumBits@plt>
    6920:	str	x0, [sp, #120]
    6924:	ldr	x0, [sp, #120]
    6928:	cmn	x0, #0x1
    692c:	b.eq	6ce4 <PyNumber_FloorDivide@plt+0x37e4>  // b.none
    6930:	ldr	x0, [sp, #120]
    6934:	sub	x0, x0, #0x1
    6938:	lsr	x0, x0, #1
    693c:	str	x0, [sp, #120]
    6940:	ldr	x0, [sp, #120]
    6944:	cmp	x0, #0x1f
    6948:	b.hi	69fc <PyNumber_FloorDivide@plt+0x34fc>  // b.pmore
    694c:	ldr	x0, [sp, #16]
    6950:	bl	30d0 <PyLong_AsUnsignedLongLong@plt>
    6954:	str	x0, [sp, #104]
    6958:	ldr	x2, [sp, #16]
    695c:	mov	w1, #0x696                 	// #1686
    6960:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6964:	add	x0, x0, #0x9a8
    6968:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    696c:	ldr	x0, [sp, #104]
    6970:	cmn	x0, #0x1
    6974:	b.ne	698c <PyNumber_FloorDivide@plt+0x348c>  // b.any
    6978:	bl	3330 <PyErr_Occurred@plt>
    697c:	cmp	x0, #0x0
    6980:	b.eq	698c <PyNumber_FloorDivide@plt+0x348c>  // b.none
    6984:	mov	x0, #0x0                   	// #0
    6988:	b	6d48 <PyNumber_FloorDivide@plt+0x3848>
    698c:	mov	x1, #0x1f                  	// #31
    6990:	ldr	x0, [sp, #120]
    6994:	sub	x0, x1, x0
    6998:	lsl	w0, w0, #1
    699c:	ldr	x1, [sp, #104]
    69a0:	lsl	x0, x1, x0
    69a4:	bl	67e4 <PyNumber_FloorDivide@plt+0x32e4>
    69a8:	mov	x1, x0
    69ac:	ldr	x0, [sp, #120]
    69b0:	mov	w2, w0
    69b4:	mov	w0, #0x1f                  	// #31
    69b8:	sub	w0, w0, w2
    69bc:	lsr	x0, x1, x0
    69c0:	str	x0, [sp, #96]
    69c4:	ldr	x0, [sp, #96]
    69c8:	mul	x0, x0, x0
    69cc:	sub	x0, x0, #0x1
    69d0:	ldr	x1, [sp, #104]
    69d4:	cmp	x1, x0
    69d8:	cset	w0, ls  // ls = plast
    69dc:	and	w0, w0, #0xff
    69e0:	and	x0, x0, #0xff
    69e4:	ldr	x1, [sp, #96]
    69e8:	sub	x0, x1, x0
    69ec:	str	x0, [sp, #96]
    69f0:	ldr	x0, [sp, #96]
    69f4:	bl	30c0 <PyLong_FromUnsignedLongLong@plt>
    69f8:	b	6d48 <PyNumber_FloorDivide@plt+0x3848>
    69fc:	mov	w0, #0x6                   	// #6
    6a00:	str	w0, [sp, #156]
    6a04:	b	6a14 <PyNumber_FloorDivide@plt+0x3514>
    6a08:	ldr	w0, [sp, #156]
    6a0c:	add	w0, w0, #0x1
    6a10:	str	w0, [sp, #156]
    6a14:	ldr	w0, [sp, #156]
    6a18:	ldr	x1, [sp, #120]
    6a1c:	lsr	x0, x1, x0
    6a20:	cmp	x0, #0x0
    6a24:	b.ne	6a08 <PyNumber_FloorDivide@plt+0x3508>  // b.any
    6a28:	ldr	w0, [sp, #156]
    6a2c:	sub	w0, w0, #0x5
    6a30:	ldr	x1, [sp, #120]
    6a34:	lsr	x0, x1, x0
    6a38:	str	x0, [sp, #144]
    6a3c:	ldr	x0, [sp, #120]
    6a40:	lsl	x0, x0, #1
    6a44:	sub	x0, x0, #0x3e
    6a48:	mov	x1, x0
    6a4c:	ldr	x0, [sp, #16]
    6a50:	bl	3180 <_PyLong_Rshift@plt>
    6a54:	str	x0, [sp, #112]
    6a58:	ldr	x0, [sp, #112]
    6a5c:	cmp	x0, #0x0
    6a60:	b.eq	6cec <PyNumber_FloorDivide@plt+0x37ec>  // b.none
    6a64:	ldr	x0, [sp, #112]
    6a68:	bl	30d0 <PyLong_AsUnsignedLongLong@plt>
    6a6c:	str	x0, [sp, #104]
    6a70:	ldr	x2, [sp, #112]
    6a74:	mov	w1, #0x6af                 	// #1711
    6a78:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6a7c:	add	x0, x0, #0x9a8
    6a80:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6a84:	ldr	x0, [sp, #104]
    6a88:	cmn	x0, #0x1
    6a8c:	b.ne	6a9c <PyNumber_FloorDivide@plt+0x359c>  // b.any
    6a90:	bl	3330 <PyErr_Occurred@plt>
    6a94:	cmp	x0, #0x0
    6a98:	b.ne	6cf4 <PyNumber_FloorDivide@plt+0x37f4>  // b.any
    6a9c:	ldr	x0, [sp, #104]
    6aa0:	bl	67e4 <PyNumber_FloorDivide@plt+0x32e4>
    6aa4:	mov	x1, x0
    6aa8:	ldr	x0, [sp, #144]
    6aac:	mov	w2, w0
    6ab0:	mov	w0, #0x1f                  	// #31
    6ab4:	sub	w0, w0, w2
    6ab8:	lsr	x0, x1, x0
    6abc:	str	x0, [sp, #96]
    6ac0:	ldr	x0, [sp, #96]
    6ac4:	bl	30c0 <PyLong_FromUnsignedLongLong@plt>
    6ac8:	str	x0, [sp, #136]
    6acc:	ldr	x0, [sp, #136]
    6ad0:	cmp	x0, #0x0
    6ad4:	b.eq	6cfc <PyNumber_FloorDivide@plt+0x37fc>  // b.none
    6ad8:	ldr	w0, [sp, #156]
    6adc:	sub	w0, w0, #0x6
    6ae0:	str	w0, [sp, #132]
    6ae4:	b	6c28 <PyNumber_FloorDivide@plt+0x3728>
    6ae8:	ldr	x0, [sp, #144]
    6aec:	str	x0, [sp, #72]
    6af0:	ldr	w0, [sp, #132]
    6af4:	ldr	x1, [sp, #120]
    6af8:	lsr	x0, x1, x0
    6afc:	str	x0, [sp, #144]
    6b00:	ldr	x0, [sp, #120]
    6b04:	lsl	x1, x0, #1
    6b08:	ldr	x0, [sp, #144]
    6b0c:	sub	x1, x1, x0
    6b10:	ldr	x0, [sp, #72]
    6b14:	sub	x0, x1, x0
    6b18:	add	x0, x0, #0x1
    6b1c:	mov	x1, x0
    6b20:	ldr	x0, [sp, #16]
    6b24:	bl	3180 <_PyLong_Rshift@plt>
    6b28:	str	x0, [sp, #64]
    6b2c:	ldr	x0, [sp, #64]
    6b30:	cmp	x0, #0x0
    6b34:	b.eq	6d04 <PyNumber_FloorDivide@plt+0x3804>  // b.none
    6b38:	ldr	x0, [sp, #64]
    6b3c:	str	x0, [sp, #56]
    6b40:	ldr	x1, [sp, #136]
    6b44:	ldr	x0, [sp, #64]
    6b48:	bl	3500 <PyNumber_FloorDivide@plt>
    6b4c:	str	x0, [sp, #64]
    6b50:	ldr	x2, [sp, #56]
    6b54:	mov	w1, #0x6c4                 	// #1732
    6b58:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6b5c:	add	x0, x0, #0x9a8
    6b60:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6b64:	ldr	x0, [sp, #64]
    6b68:	cmp	x0, #0x0
    6b6c:	b.eq	6d0c <PyNumber_FloorDivide@plt+0x380c>  // b.none
    6b70:	ldr	x0, [sp, #136]
    6b74:	str	x0, [sp, #48]
    6b78:	ldr	x1, [sp, #144]
    6b7c:	ldr	x0, [sp, #72]
    6b80:	sub	x0, x1, x0
    6b84:	sub	x0, x0, #0x1
    6b88:	mov	x1, x0
    6b8c:	ldr	x0, [sp, #136]
    6b90:	bl	34f0 <_PyLong_Lshift@plt>
    6b94:	str	x0, [sp, #136]
    6b98:	ldr	x2, [sp, #48]
    6b9c:	mov	w1, #0x6ca                 	// #1738
    6ba0:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6ba4:	add	x0, x0, #0x9a8
    6ba8:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6bac:	ldr	x0, [sp, #136]
    6bb0:	cmp	x0, #0x0
    6bb4:	b.ne	6bd0 <PyNumber_FloorDivide@plt+0x36d0>  // b.any
    6bb8:	ldr	x2, [sp, #64]
    6bbc:	mov	w1, #0x6cc                 	// #1740
    6bc0:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6bc4:	add	x0, x0, #0x9a8
    6bc8:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6bcc:	b	6d28 <PyNumber_FloorDivide@plt+0x3828>
    6bd0:	ldr	x0, [sp, #136]
    6bd4:	str	x0, [sp, #40]
    6bd8:	ldr	x1, [sp, #64]
    6bdc:	ldr	x0, [sp, #136]
    6be0:	bl	30e0 <PyNumber_Add@plt>
    6be4:	str	x0, [sp, #136]
    6be8:	ldr	x2, [sp, #40]
    6bec:	mov	w1, #0x6cf                 	// #1743
    6bf0:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6bf4:	add	x0, x0, #0x9a8
    6bf8:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6bfc:	ldr	x2, [sp, #64]
    6c00:	mov	w1, #0x6d0                 	// #1744
    6c04:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6c08:	add	x0, x0, #0x9a8
    6c0c:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6c10:	ldr	x0, [sp, #136]
    6c14:	cmp	x0, #0x0
    6c18:	b.eq	6d14 <PyNumber_FloorDivide@plt+0x3814>  // b.none
    6c1c:	ldr	w0, [sp, #132]
    6c20:	sub	w0, w0, #0x1
    6c24:	str	w0, [sp, #132]
    6c28:	ldr	w0, [sp, #132]
    6c2c:	cmp	w0, #0x0
    6c30:	b.ge	6ae8 <PyNumber_FloorDivide@plt+0x35e8>  // b.tcont
    6c34:	ldr	x1, [sp, #136]
    6c38:	ldr	x0, [sp, #136]
    6c3c:	bl	3150 <PyNumber_Multiply@plt>
    6c40:	str	x0, [sp, #112]
    6c44:	ldr	x0, [sp, #112]
    6c48:	cmp	x0, #0x0
    6c4c:	b.eq	6d1c <PyNumber_FloorDivide@plt+0x381c>  // b.none
    6c50:	mov	w2, #0x0                   	// #0
    6c54:	ldr	x1, [sp, #112]
    6c58:	ldr	x0, [sp, #16]
    6c5c:	bl	3270 <PyObject_RichCompareBool@plt>
    6c60:	str	w0, [sp, #92]
    6c64:	ldr	x2, [sp, #112]
    6c68:	mov	w1, #0x6df                 	// #1759
    6c6c:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6c70:	add	x0, x0, #0x9a8
    6c74:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6c78:	ldr	w0, [sp, #92]
    6c7c:	cmn	w0, #0x1
    6c80:	b.eq	6d24 <PyNumber_FloorDivide@plt+0x3824>  // b.none
    6c84:	ldr	w0, [sp, #92]
    6c88:	cmp	w0, #0x0
    6c8c:	b.eq	6cc8 <PyNumber_FloorDivide@plt+0x37c8>  // b.none
    6c90:	ldr	x0, [sp, #136]
    6c94:	str	x0, [sp, #80]
    6c98:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    6c9c:	ldr	x0, [x0, #4008]
    6ca0:	ldr	x0, [x0]
    6ca4:	mov	x1, x0
    6ca8:	ldr	x0, [sp, #136]
    6cac:	bl	34c0 <PyNumber_Subtract@plt>
    6cb0:	str	x0, [sp, #136]
    6cb4:	ldr	x2, [sp, #80]
    6cb8:	mov	w1, #0x6e5                 	// #1765
    6cbc:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6cc0:	add	x0, x0, #0x9a8
    6cc4:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6cc8:	ldr	x2, [sp, #16]
    6ccc:	mov	w1, #0x6e7                 	// #1767
    6cd0:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6cd4:	add	x0, x0, #0x9a8
    6cd8:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6cdc:	ldr	x0, [sp, #136]
    6ce0:	b	6d48 <PyNumber_FloorDivide@plt+0x3848>
    6ce4:	nop
    6ce8:	b	6d28 <PyNumber_FloorDivide@plt+0x3828>
    6cec:	nop
    6cf0:	b	6d28 <PyNumber_FloorDivide@plt+0x3828>
    6cf4:	nop
    6cf8:	b	6d28 <PyNumber_FloorDivide@plt+0x3828>
    6cfc:	nop
    6d00:	b	6d28 <PyNumber_FloorDivide@plt+0x3828>
    6d04:	nop
    6d08:	b	6d28 <PyNumber_FloorDivide@plt+0x3828>
    6d0c:	nop
    6d10:	b	6d28 <PyNumber_FloorDivide@plt+0x3828>
    6d14:	nop
    6d18:	b	6d28 <PyNumber_FloorDivide@plt+0x3828>
    6d1c:	nop
    6d20:	b	6d28 <PyNumber_FloorDivide@plt+0x3828>
    6d24:	nop
    6d28:	ldr	x0, [sp, #136]
    6d2c:	bl	3714 <PyNumber_FloorDivide@plt+0x214>
    6d30:	ldr	x2, [sp, #16]
    6d34:	mov	w1, #0x6ec                 	// #1772
    6d38:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6d3c:	add	x0, x0, #0x9a8
    6d40:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6d44:	mov	x0, #0x0                   	// #0
    6d48:	ldp	x29, x30, [sp], #160
    6d4c:	ret
    6d50:	stp	x29, x30, [sp, #-112]!
    6d54:	mov	x29, sp
    6d58:	str	x0, [sp, #40]
    6d5c:	str	x1, [sp, #32]
    6d60:	str	x2, [sp, #24]
    6d64:	str	xzr, [sp, #72]
    6d68:	str	xzr, [sp, #104]
    6d6c:	str	xzr, [sp, #96]
    6d70:	ldr	x1, [sp, #32]
    6d74:	ldr	x0, [sp, #40]
    6d78:	sub	x0, x1, x0
    6d7c:	lsr	x0, x0, #1
    6d80:	str	x0, [sp, #64]
    6d84:	ldr	x0, [sp, #64]
    6d88:	cmp	x0, #0x40
    6d8c:	b.hi	6df4 <PyNumber_FloorDivide@plt+0x38f4>  // b.pmore
    6d90:	ldr	x1, [sp, #64]
    6d94:	ldr	x0, [sp, #24]
    6d98:	mul	x0, x1, x0
    6d9c:	cmp	x0, #0x40
    6da0:	b.hi	6df4 <PyNumber_FloorDivide@plt+0x38f4>  // b.pmore
    6da4:	ldr	x0, [sp, #40]
    6da8:	str	x0, [sp, #80]
    6dac:	ldr	x0, [sp, #40]
    6db0:	add	x0, x0, #0x2
    6db4:	str	x0, [sp, #88]
    6db8:	b	6dd8 <PyNumber_FloorDivide@plt+0x38d8>
    6dbc:	ldr	x1, [sp, #80]
    6dc0:	ldr	x0, [sp, #88]
    6dc4:	mul	x0, x1, x0
    6dc8:	str	x0, [sp, #80]
    6dcc:	ldr	x0, [sp, #88]
    6dd0:	add	x0, x0, #0x2
    6dd4:	str	x0, [sp, #88]
    6dd8:	ldr	x1, [sp, #88]
    6ddc:	ldr	x0, [sp, #32]
    6de0:	cmp	x1, x0
    6de4:	b.cc	6dbc <PyNumber_FloorDivide@plt+0x38bc>  // b.lo, b.ul, b.last
    6de8:	ldr	x0, [sp, #80]
    6dec:	bl	33e0 <PyLong_FromUnsignedLong@plt>
    6df0:	b	6e88 <PyNumber_FloorDivide@plt+0x3988>
    6df4:	ldr	x1, [sp, #40]
    6df8:	ldr	x0, [sp, #64]
    6dfc:	add	x0, x1, x0
    6e00:	orr	x0, x0, #0x1
    6e04:	str	x0, [sp, #56]
    6e08:	ldr	x0, [sp, #56]
    6e0c:	sub	x0, x0, #0x2
    6e10:	bl	675c <PyNumber_FloorDivide@plt+0x325c>
    6e14:	mov	x2, x0
    6e18:	ldr	x1, [sp, #56]
    6e1c:	ldr	x0, [sp, #40]
    6e20:	bl	6d50 <PyNumber_FloorDivide@plt+0x3850>
    6e24:	str	x0, [sp, #72]
    6e28:	ldr	x0, [sp, #72]
    6e2c:	cmp	x0, #0x0
    6e30:	b.eq	6e68 <PyNumber_FloorDivide@plt+0x3968>  // b.none
    6e34:	ldr	x2, [sp, #24]
    6e38:	ldr	x1, [sp, #32]
    6e3c:	ldr	x0, [sp, #56]
    6e40:	bl	6d50 <PyNumber_FloorDivide@plt+0x3850>
    6e44:	str	x0, [sp, #104]
    6e48:	ldr	x0, [sp, #104]
    6e4c:	cmp	x0, #0x0
    6e50:	b.eq	6e70 <PyNumber_FloorDivide@plt+0x3970>  // b.none
    6e54:	ldr	x1, [sp, #104]
    6e58:	ldr	x0, [sp, #72]
    6e5c:	bl	3150 <PyNumber_Multiply@plt>
    6e60:	str	x0, [sp, #96]
    6e64:	b	6e74 <PyNumber_FloorDivide@plt+0x3974>
    6e68:	nop
    6e6c:	b	6e74 <PyNumber_FloorDivide@plt+0x3974>
    6e70:	nop
    6e74:	ldr	x0, [sp, #72]
    6e78:	bl	3714 <PyNumber_FloorDivide@plt+0x214>
    6e7c:	ldr	x0, [sp, #104]
    6e80:	bl	3714 <PyNumber_FloorDivide@plt+0x214>
    6e84:	ldr	x0, [sp, #96]
    6e88:	ldp	x29, x30, [sp], #112
    6e8c:	ret
    6e90:	stp	x29, x30, [sp, #-96]!
    6e94:	mov	x29, sp
    6e98:	str	x0, [sp, #24]
    6e9c:	mov	x0, #0x1                   	// #1
    6ea0:	bl	3260 <PyLong_FromLong@plt>
    6ea4:	str	x0, [sp, #72]
    6ea8:	ldr	x0, [sp, #72]
    6eac:	cmp	x0, #0x0
    6eb0:	b.ne	6ebc <PyNumber_FloorDivide@plt+0x39bc>  // b.any
    6eb4:	mov	x0, #0x0                   	// #0
    6eb8:	b	704c <PyNumber_FloorDivide@plt+0x3b4c>
    6ebc:	ldr	x0, [sp, #72]
    6ec0:	str	x0, [sp, #64]
    6ec4:	ldr	x0, [sp, #64]
    6ec8:	bl	36a0 <PyNumber_FloorDivide@plt+0x1a0>
    6ecc:	mov	x0, #0x3                   	// #3
    6ed0:	str	x0, [sp, #80]
    6ed4:	ldr	x0, [sp, #24]
    6ed8:	bl	675c <PyNumber_FloorDivide@plt+0x325c>
    6edc:	sub	x0, x0, #0x2
    6ee0:	str	x0, [sp, #88]
    6ee4:	b	6fe4 <PyNumber_FloorDivide@plt+0x3ae4>
    6ee8:	ldr	x0, [sp, #88]
    6eec:	mov	w1, w0
    6ef0:	ldr	x0, [sp, #24]
    6ef4:	lsr	x0, x0, x1
    6ef8:	str	x0, [sp, #56]
    6efc:	ldr	x0, [sp, #56]
    6f00:	cmp	x0, #0x2
    6f04:	b.ls	6fd4 <PyNumber_FloorDivide@plt+0x3ad4>  // b.plast
    6f08:	ldr	x0, [sp, #80]
    6f0c:	str	x0, [sp, #48]
    6f10:	ldr	x0, [sp, #56]
    6f14:	add	x0, x0, #0x1
    6f18:	orr	x0, x0, #0x1
    6f1c:	str	x0, [sp, #80]
    6f20:	ldr	x0, [sp, #80]
    6f24:	sub	x0, x0, #0x2
    6f28:	bl	675c <PyNumber_FloorDivide@plt+0x325c>
    6f2c:	mov	x2, x0
    6f30:	ldr	x1, [sp, #80]
    6f34:	ldr	x0, [sp, #48]
    6f38:	bl	6d50 <PyNumber_FloorDivide@plt+0x3850>
    6f3c:	str	x0, [sp, #40]
    6f40:	ldr	x0, [sp, #40]
    6f44:	cmp	x0, #0x0
    6f48:	b.eq	700c <PyNumber_FloorDivide@plt+0x3b0c>  // b.none
    6f4c:	ldr	x1, [sp, #40]
    6f50:	ldr	x0, [sp, #72]
    6f54:	bl	3150 <PyNumber_Multiply@plt>
    6f58:	str	x0, [sp, #32]
    6f5c:	ldr	x2, [sp, #40]
    6f60:	mov	w1, #0x787                 	// #1927
    6f64:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6f68:	add	x0, x0, #0x9a8
    6f6c:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6f70:	ldr	x0, [sp, #32]
    6f74:	cmp	x0, #0x0
    6f78:	b.eq	7014 <PyNumber_FloorDivide@plt+0x3b14>  // b.none
    6f7c:	ldr	x2, [sp, #72]
    6f80:	mov	w1, #0x78a                 	// #1930
    6f84:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6f88:	add	x0, x0, #0x9a8
    6f8c:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6f90:	ldr	x0, [sp, #32]
    6f94:	str	x0, [sp, #72]
    6f98:	ldr	x1, [sp, #72]
    6f9c:	ldr	x0, [sp, #64]
    6fa0:	bl	3150 <PyNumber_Multiply@plt>
    6fa4:	str	x0, [sp, #32]
    6fa8:	ldr	x0, [sp, #32]
    6fac:	cmp	x0, #0x0
    6fb0:	b.eq	701c <PyNumber_FloorDivide@plt+0x3b1c>  // b.none
    6fb4:	ldr	x2, [sp, #64]
    6fb8:	mov	w1, #0x793                 	// #1939
    6fbc:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6fc0:	add	x0, x0, #0x9a8
    6fc4:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    6fc8:	ldr	x0, [sp, #32]
    6fcc:	str	x0, [sp, #64]
    6fd0:	b	6fd8 <PyNumber_FloorDivide@plt+0x3ad8>
    6fd4:	nop
    6fd8:	ldr	x0, [sp, #88]
    6fdc:	sub	x0, x0, #0x1
    6fe0:	str	x0, [sp, #88]
    6fe4:	ldr	x0, [sp, #88]
    6fe8:	cmp	x0, #0x0
    6fec:	b.ge	6ee8 <PyNumber_FloorDivide@plt+0x39e8>  // b.tcont
    6ff0:	ldr	x2, [sp, #72]
    6ff4:	mov	w1, #0x796                 	// #1942
    6ff8:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    6ffc:	add	x0, x0, #0x9a8
    7000:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    7004:	ldr	x0, [sp, #64]
    7008:	b	704c <PyNumber_FloorDivide@plt+0x3b4c>
    700c:	nop
    7010:	b	7020 <PyNumber_FloorDivide@plt+0x3b20>
    7014:	nop
    7018:	b	7020 <PyNumber_FloorDivide@plt+0x3b20>
    701c:	nop
    7020:	ldr	x2, [sp, #64]
    7024:	mov	w1, #0x79a                 	// #1946
    7028:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    702c:	add	x0, x0, #0x9a8
    7030:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    7034:	ldr	x2, [sp, #72]
    7038:	mov	w1, #0x79b                 	// #1947
    703c:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    7040:	add	x0, x0, #0x9a8
    7044:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    7048:	mov	x0, #0x0                   	// #0
    704c:	ldp	x29, x30, [sp], #96
    7050:	ret
    7054:	stp	x29, x30, [sp, #-112]!
    7058:	mov	x29, sp
    705c:	str	x19, [sp, #16]
    7060:	str	x0, [sp, #40]
    7064:	str	x1, [sp, #32]
    7068:	ldr	x0, [sp, #32]
    706c:	ldr	x1, [x0, #8]
    7070:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    7074:	ldr	x0, [x0, #3824]
    7078:	cmp	x1, x0
    707c:	b.eq	70a0 <PyNumber_FloorDivide@plt+0x3ba0>  // b.none
    7080:	ldr	x0, [sp, #32]
    7084:	ldr	x2, [x0, #8]
    7088:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    708c:	ldr	x1, [x0, #3824]
    7090:	mov	x0, x2
    7094:	bl	3450 <PyType_IsSubtype@plt>
    7098:	cmp	w0, #0x0
    709c:	b.eq	714c <PyNumber_FloorDivide@plt+0x3c4c>  // b.none
    70a0:	ldr	x0, [sp, #32]
    70a4:	ldr	d0, [x0, #16]
    70a8:	str	d0, [sp, #88]
    70ac:	ldr	d0, [sp, #88]
    70b0:	fabs	d0, d0
    70b4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    70b8:	fmov	d1, x0
    70bc:	fcmp	d0, d1
    70c0:	b.hi	70dc <PyNumber_FloorDivide@plt+0x3bdc>  // b.pmore
    70c4:	ldr	d0, [sp, #88]
    70c8:	bl	3400 <floor@plt>
    70cc:	fmov	d1, d0
    70d0:	ldr	d0, [sp, #88]
    70d4:	fcmp	d0, d1
    70d8:	b.eq	7100 <PyNumber_FloorDivide@plt+0x3c00>  // b.none
    70dc:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    70e0:	ldr	x0, [x0, #3872]
    70e4:	ldr	x2, [x0]
    70e8:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    70ec:	add	x1, x0, #0x3f0
    70f0:	mov	x0, x2
    70f4:	bl	31b0 <PyErr_SetString@plt>
    70f8:	mov	x0, #0x0                   	// #0
    70fc:	b	72a8 <PyNumber_FloorDivide@plt+0x3da8>
    7100:	ldr	d0, [sp, #88]
    7104:	bl	3080 <PyLong_FromDouble@plt>
    7108:	str	x0, [sp, #80]
    710c:	ldr	x0, [sp, #80]
    7110:	cmp	x0, #0x0
    7114:	b.ne	7120 <PyNumber_FloorDivide@plt+0x3c20>  // b.any
    7118:	mov	x0, #0x0                   	// #0
    711c:	b	72a8 <PyNumber_FloorDivide@plt+0x3da8>
    7120:	add	x0, sp, #0x34
    7124:	mov	x1, x0
    7128:	ldr	x0, [sp, #80]
    712c:	bl	3310 <PyLong_AsLongAndOverflow@plt>
    7130:	str	x0, [sp, #104]
    7134:	ldr	x2, [sp, #80]
    7138:	mov	w1, #0x7cb                 	// #1995
    713c:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    7140:	add	x0, x0, #0x9a8
    7144:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    7148:	b	7194 <PyNumber_FloorDivide@plt+0x3c94>
    714c:	ldr	x0, [sp, #32]
    7150:	bl	3480 <PyNumber_Index@plt>
    7154:	str	x0, [sp, #96]
    7158:	ldr	x0, [sp, #96]
    715c:	cmp	x0, #0x0
    7160:	b.ne	716c <PyNumber_FloorDivide@plt+0x3c6c>  // b.any
    7164:	mov	x0, #0x0                   	// #0
    7168:	b	72a8 <PyNumber_FloorDivide@plt+0x3da8>
    716c:	add	x0, sp, #0x34
    7170:	mov	x1, x0
    7174:	ldr	x0, [sp, #96]
    7178:	bl	3310 <PyLong_AsLongAndOverflow@plt>
    717c:	str	x0, [sp, #104]
    7180:	ldr	x2, [sp, #96]
    7184:	mov	w1, #0x7d3                 	// #2003
    7188:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    718c:	add	x0, x0, #0x9a8
    7190:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    7194:	ldr	x0, [sp, #104]
    7198:	cmn	x0, #0x1
    719c:	b.ne	71b4 <PyNumber_FloorDivide@plt+0x3cb4>  // b.any
    71a0:	bl	3330 <PyErr_Occurred@plt>
    71a4:	cmp	x0, #0x0
    71a8:	b.eq	71b4 <PyNumber_FloorDivide@plt+0x3cb4>  // b.none
    71ac:	mov	x0, #0x0                   	// #0
    71b0:	b	72a8 <PyNumber_FloorDivide@plt+0x3da8>
    71b4:	ldr	w0, [sp, #52]
    71b8:	cmp	w0, #0x1
    71bc:	b.ne	71e8 <PyNumber_FloorDivide@plt+0x3ce8>  // b.any
    71c0:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    71c4:	ldr	x0, [x0, #3936]
    71c8:	ldr	x3, [x0]
    71cc:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    71d0:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    71d4:	add	x1, x0, #0x420
    71d8:	mov	x0, x3
    71dc:	bl	3460 <PyErr_Format@plt>
    71e0:	mov	x0, #0x0                   	// #0
    71e4:	b	72a8 <PyNumber_FloorDivide@plt+0x3da8>
    71e8:	ldr	w0, [sp, #52]
    71ec:	cmn	w0, #0x1
    71f0:	b.eq	7200 <PyNumber_FloorDivide@plt+0x3d00>  // b.none
    71f4:	ldr	x0, [sp, #104]
    71f8:	cmp	x0, #0x0
    71fc:	b.ge	7224 <PyNumber_FloorDivide@plt+0x3d24>  // b.tcont
    7200:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    7204:	ldr	x0, [x0, #3872]
    7208:	ldr	x2, [x0]
    720c:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    7210:	add	x1, x0, #0x450
    7214:	mov	x0, x2
    7218:	bl	31b0 <PyErr_SetString@plt>
    721c:	mov	x0, #0x0                   	// #0
    7220:	b	72a8 <PyNumber_FloorDivide@plt+0x3da8>
    7224:	ldr	x0, [sp, #104]
    7228:	cmp	x0, #0x14
    722c:	b.gt	7248 <PyNumber_FloorDivide@plt+0x3d48>
    7230:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    7234:	add	x0, x0, #0x348
    7238:	ldr	x1, [sp, #104]
    723c:	ldr	x0, [x0, x1, lsl #3]
    7240:	bl	33e0 <PyLong_FromUnsignedLong@plt>
    7244:	b	72a8 <PyNumber_FloorDivide@plt+0x3da8>
    7248:	ldr	x0, [sp, #104]
    724c:	bl	6e90 <PyNumber_FloorDivide@plt+0x3990>
    7250:	str	x0, [sp, #72]
    7254:	ldr	x0, [sp, #72]
    7258:	cmp	x0, #0x0
    725c:	b.ne	7268 <PyNumber_FloorDivide@plt+0x3d68>  // b.any
    7260:	mov	x0, #0x0                   	// #0
    7264:	b	72a8 <PyNumber_FloorDivide@plt+0x3da8>
    7268:	ldr	x19, [sp, #104]
    726c:	ldr	x0, [sp, #104]
    7270:	bl	679c <PyNumber_FloorDivide@plt+0x329c>
    7274:	sub	x0, x19, x0
    7278:	str	x0, [sp, #64]
    727c:	ldr	x0, [sp, #64]
    7280:	mov	x1, x0
    7284:	ldr	x0, [sp, #72]
    7288:	bl	34f0 <_PyLong_Lshift@plt>
    728c:	str	x0, [sp, #56]
    7290:	ldr	x2, [sp, #72]
    7294:	mov	w1, #0x7f0                 	// #2032
    7298:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    729c:	add	x0, x0, #0x9a8
    72a0:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    72a4:	ldr	x0, [sp, #56]
    72a8:	ldr	x19, [sp, #16]
    72ac:	ldp	x29, x30, [sp], #112
    72b0:	ret
    72b4:	stp	x29, x30, [sp, #-48]!
    72b8:	mov	x29, sp
    72bc:	str	x0, [sp, #24]
    72c0:	str	x1, [sp, #16]
    72c4:	ldr	x0, [sp, #16]
    72c8:	ldr	x0, [x0, #8]
    72cc:	ldr	x0, [x0, #264]
    72d0:	cmp	x0, #0x0
    72d4:	b.ne	72f4 <PyNumber_FloorDivide@plt+0x3df4>  // b.any
    72d8:	ldr	x0, [sp, #16]
    72dc:	ldr	x0, [x0, #8]
    72e0:	bl	3250 <PyType_Ready@plt>
    72e4:	cmp	w0, #0x0
    72e8:	b.ge	72f4 <PyNumber_FloorDivide@plt+0x3df4>  // b.tcont
    72ec:	mov	x0, #0x0                   	// #0
    72f0:	b	7378 <PyNumber_FloorDivide@plt+0x3e78>
    72f4:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    72f8:	add	x1, x0, #0x9f0
    72fc:	ldr	x0, [sp, #16]
    7300:	bl	31e0 <_PyObject_LookupSpecial@plt>
    7304:	str	x0, [sp, #40]
    7308:	ldr	x0, [sp, #40]
    730c:	cmp	x0, #0x0
    7310:	b.ne	7354 <PyNumber_FloorDivide@plt+0x3e54>  // b.any
    7314:	bl	3330 <PyErr_Occurred@plt>
    7318:	cmp	x0, #0x0
    731c:	b.ne	734c <PyNumber_FloorDivide@plt+0x3e4c>  // b.any
    7320:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    7324:	ldr	x0, [x0, #3888]
    7328:	ldr	x3, [x0]
    732c:	ldr	x0, [sp, #16]
    7330:	ldr	x0, [x0, #8]
    7334:	ldr	x0, [x0, #24]
    7338:	mov	x2, x0
    733c:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    7340:	add	x1, x0, #0x480
    7344:	mov	x0, x3
    7348:	bl	3460 <PyErr_Format@plt>
    734c:	mov	x0, #0x0                   	// #0
    7350:	b	7378 <PyNumber_FloorDivide@plt+0x3e78>
    7354:	ldr	x0, [sp, #40]
    7358:	bl	3848 <PyNumber_FloorDivide@plt+0x348>
    735c:	str	x0, [sp, #32]
    7360:	ldr	x2, [sp, #40]
    7364:	mov	w1, #0x815                 	// #2069
    7368:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    736c:	add	x0, x0, #0x9a8
    7370:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    7374:	ldr	x0, [sp, #32]
    7378:	ldp	x29, x30, [sp], #48
    737c:	ret
    7380:	stp	x29, x30, [sp, #-48]!
    7384:	mov	x29, sp
    7388:	str	x0, [sp, #24]
    738c:	str	d0, [sp, #16]
    7390:	ldr	d1, [sp, #16]
    7394:	ldr	d0, [sp, #16]
    7398:	fcmp	d1, d0
    739c:	b.vs	73d8 <PyNumber_FloorDivide@plt+0x3ed8>
    73a0:	ldr	d0, [sp, #16]
    73a4:	fabs	d0, d0
    73a8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    73ac:	fmov	d1, x0
    73b0:	fcmp	d0, d1
    73b4:	cset	w0, le
    73b8:	and	w0, w0, #0xff
    73bc:	eor	w0, w0, #0x1
    73c0:	and	w0, w0, #0xff
    73c4:	cmp	w0, #0x0
    73c8:	b.ne	73d8 <PyNumber_FloorDivide@plt+0x3ed8>  // b.any
    73cc:	ldr	d0, [sp, #16]
    73d0:	fcmp	d0, #0.0
    73d4:	b.ne	73e0 <PyNumber_FloorDivide@plt+0x3ee0>  // b.any
    73d8:	str	wzr, [sp, #44]
    73dc:	b	73f0 <PyNumber_FloorDivide@plt+0x3ef0>
    73e0:	add	x0, sp, #0x2c
    73e4:	ldr	d0, [sp, #16]
    73e8:	bl	33d0 <frexp@plt>
    73ec:	str	d0, [sp, #16]
    73f0:	ldr	w0, [sp, #44]
    73f4:	mov	w1, w0
    73f8:	ldr	d0, [sp, #16]
    73fc:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    7400:	add	x0, x0, #0x4b0
    7404:	bl	3320 <Py_BuildValue@plt>
    7408:	ldp	x29, x30, [sp], #48
    740c:	ret
    7410:	stp	x29, x30, [sp, #-80]!
    7414:	mov	x29, sp
    7418:	str	x0, [sp, #40]
    741c:	str	d0, [sp, #32]
    7420:	str	x1, [sp, #24]
    7424:	ldr	x0, [sp, #24]
    7428:	ldr	x0, [x0, #8]
    742c:	ldr	x0, [x0, #168]
    7430:	and	x0, x0, #0x1000000
    7434:	cmp	x0, #0x0
    7438:	b.eq	749c <PyNumber_FloorDivide@plt+0x3f9c>  // b.none
    743c:	add	x0, sp, #0x3c
    7440:	mov	x1, x0
    7444:	ldr	x0, [sp, #24]
    7448:	bl	3310 <PyLong_AsLongAndOverflow@plt>
    744c:	str	x0, [sp, #64]
    7450:	ldr	x0, [sp, #64]
    7454:	cmn	x0, #0x1
    7458:	b.ne	7470 <PyNumber_FloorDivide@plt+0x3f70>  // b.any
    745c:	bl	3330 <PyErr_Occurred@plt>
    7460:	cmp	x0, #0x0
    7464:	b.eq	7470 <PyNumber_FloorDivide@plt+0x3f70>  // b.none
    7468:	mov	x0, #0x0                   	// #0
    746c:	b	75e0 <PyNumber_FloorDivide@plt+0x40e0>
    7470:	ldr	w0, [sp, #60]
    7474:	cmp	w0, #0x0
    7478:	b.eq	74c0 <PyNumber_FloorDivide@plt+0x3fc0>  // b.none
    747c:	ldr	w0, [sp, #60]
    7480:	cmp	w0, #0x0
    7484:	b.ge	7490 <PyNumber_FloorDivide@plt+0x3f90>  // b.tcont
    7488:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    748c:	b	7494 <PyNumber_FloorDivide@plt+0x3f94>
    7490:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    7494:	str	x0, [sp, #64]
    7498:	b	74c0 <PyNumber_FloorDivide@plt+0x3fc0>
    749c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    74a0:	ldr	x0, [x0, #3888]
    74a4:	ldr	x2, [x0]
    74a8:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    74ac:	add	x1, x0, #0x4b8
    74b0:	mov	x0, x2
    74b4:	bl	31b0 <PyErr_SetString@plt>
    74b8:	mov	x0, #0x0                   	// #0
    74bc:	b	75e0 <PyNumber_FloorDivide@plt+0x40e0>
    74c0:	ldr	d0, [sp, #32]
    74c4:	fcmp	d0, #0.0
    74c8:	b.eq	74e4 <PyNumber_FloorDivide@plt+0x3fe4>  // b.none
    74cc:	ldr	d0, [sp, #32]
    74d0:	fabs	d0, d0
    74d4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    74d8:	fmov	d1, x0
    74dc:	fcmp	d0, d1
    74e0:	b.ls	74f8 <PyNumber_FloorDivide@plt+0x3ff8>  // b.plast
    74e4:	ldr	d0, [sp, #32]
    74e8:	str	d0, [sp, #72]
    74ec:	bl	3490 <__errno_location@plt>
    74f0:	str	wzr, [x0]
    74f4:	b	75b0 <PyNumber_FloorDivide@plt+0x40b0>
    74f8:	ldr	x1, [sp, #64]
    74fc:	mov	x0, #0x7fffffff            	// #2147483647
    7500:	cmp	x1, x0
    7504:	b.le	7530 <PyNumber_FloorDivide@plt+0x4030>
    7508:	ldr	d1, [sp, #32]
    750c:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    7510:	fmov	d0, x0
    7514:	bl	3070 <copysign@plt>
    7518:	str	d0, [sp, #72]
    751c:	bl	3490 <__errno_location@plt>
    7520:	mov	x1, x0
    7524:	mov	w0, #0x22                  	// #34
    7528:	str	w0, [x1]
    752c:	b	75b0 <PyNumber_FloorDivide@plt+0x40b0>
    7530:	ldr	x1, [sp, #64]
    7534:	mov	x0, #0xffffffff80000000    	// #-2147483648
    7538:	cmp	x1, x0
    753c:	b.ge	755c <PyNumber_FloorDivide@plt+0x405c>  // b.tcont
    7540:	ldr	d1, [sp, #32]
    7544:	movi	d0, #0x0
    7548:	bl	3070 <copysign@plt>
    754c:	str	d0, [sp, #72]
    7550:	bl	3490 <__errno_location@plt>
    7554:	str	wzr, [x0]
    7558:	b	75b0 <PyNumber_FloorDivide@plt+0x40b0>
    755c:	bl	3490 <__errno_location@plt>
    7560:	str	wzr, [x0]
    7564:	ldr	x0, [sp, #64]
    7568:	ldr	d0, [sp, #32]
    756c:	bl	30a0 <ldexp@plt>
    7570:	str	d0, [sp, #72]
    7574:	ldr	d0, [sp, #72]
    7578:	fabs	d0, d0
    757c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7580:	fmov	d1, x0
    7584:	fcmp	d0, d1
    7588:	cset	w0, le
    758c:	and	w0, w0, #0xff
    7590:	eor	w0, w0, #0x1
    7594:	and	w0, w0, #0xff
    7598:	cmp	w0, #0x0
    759c:	b.eq	75b0 <PyNumber_FloorDivide@plt+0x40b0>  // b.none
    75a0:	bl	3490 <__errno_location@plt>
    75a4:	mov	x1, x0
    75a8:	mov	w0, #0x22                  	// #34
    75ac:	str	w0, [x1]
    75b0:	bl	3490 <__errno_location@plt>
    75b4:	ldr	w0, [x0]
    75b8:	cmp	w0, #0x0
    75bc:	b.eq	75d8 <PyNumber_FloorDivide@plt+0x40d8>  // b.none
    75c0:	ldr	d0, [sp, #72]
    75c4:	bl	5680 <PyNumber_FloorDivide@plt+0x2180>
    75c8:	cmp	w0, #0x0
    75cc:	b.eq	75d8 <PyNumber_FloorDivide@plt+0x40d8>  // b.none
    75d0:	mov	x0, #0x0                   	// #0
    75d4:	b	75e0 <PyNumber_FloorDivide@plt+0x40e0>
    75d8:	ldr	d0, [sp, #72]
    75dc:	bl	3240 <PyFloat_FromDouble@plt>
    75e0:	ldp	x29, x30, [sp], #80
    75e4:	ret
    75e8:	stp	x29, x30, [sp, #-48]!
    75ec:	mov	x29, sp
    75f0:	str	x0, [sp, #24]
    75f4:	str	d0, [sp, #16]
    75f8:	ldr	d0, [sp, #16]
    75fc:	fabs	d0, d0
    7600:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7604:	fmov	d1, x0
    7608:	fcmp	d0, d1
    760c:	b.ls	7684 <PyNumber_FloorDivide@plt+0x4184>  // b.plast
    7610:	ldr	d0, [sp, #16]
    7614:	fabs	d0, d0
    7618:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    761c:	fmov	d1, x0
    7620:	fcmp	d0, d1
    7624:	cset	w0, le
    7628:	and	w0, w0, #0xff
    762c:	eor	w0, w0, #0x1
    7630:	and	w0, w0, #0xff
    7634:	cmp	w0, #0x0
    7638:	b.eq	765c <PyNumber_FloorDivide@plt+0x415c>  // b.none
    763c:	ldr	d1, [sp, #16]
    7640:	movi	d0, #0x0
    7644:	bl	3070 <copysign@plt>
    7648:	ldr	d1, [sp, #16]
    764c:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    7650:	add	x0, x0, #0x4e8
    7654:	bl	3320 <Py_BuildValue@plt>
    7658:	b	76b4 <PyNumber_FloorDivide@plt+0x41b4>
    765c:	ldr	d1, [sp, #16]
    7660:	ldr	d0, [sp, #16]
    7664:	fcmp	d1, d0
    7668:	b.vc	7684 <PyNumber_FloorDivide@plt+0x4184>
    766c:	ldr	d1, [sp, #16]
    7670:	ldr	d0, [sp, #16]
    7674:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    7678:	add	x0, x0, #0x4e8
    767c:	bl	3320 <Py_BuildValue@plt>
    7680:	b	76b4 <PyNumber_FloorDivide@plt+0x41b4>
    7684:	bl	3490 <__errno_location@plt>
    7688:	str	wzr, [x0]
    768c:	add	x0, sp, #0x28
    7690:	ldr	d0, [sp, #16]
    7694:	bl	33a0 <modf@plt>
    7698:	str	d0, [sp, #16]
    769c:	ldr	d0, [sp, #40]
    76a0:	fmov	d1, d0
    76a4:	ldr	d0, [sp, #16]
    76a8:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    76ac:	add	x0, x0, #0x4e8
    76b0:	bl	3320 <Py_BuildValue@plt>
    76b4:	ldp	x29, x30, [sp], #48
    76b8:	ret
    76bc:	stp	x29, x30, [sp, #-96]!
    76c0:	mov	x29, sp
    76c4:	str	d8, [sp, #16]
    76c8:	str	x0, [sp, #56]
    76cc:	str	x1, [sp, #48]
    76d0:	str	x2, [sp, #40]
    76d4:	ldr	x0, [sp, #56]
    76d8:	ldr	x0, [x0, #8]
    76dc:	ldr	x0, [x0, #168]
    76e0:	and	x0, x0, #0x1000000
    76e4:	cmp	x0, #0x0
    76e8:	b.eq	77f8 <PyNumber_FloorDivide@plt+0x42f8>  // b.none
    76ec:	ldr	x0, [sp, #56]
    76f0:	ldr	x0, [x0, #16]
    76f4:	cmp	x0, #0x0
    76f8:	b.gt	7720 <PyNumber_FloorDivide@plt+0x4220>
    76fc:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    7700:	ldr	x0, [x0, #3872]
    7704:	ldr	x2, [x0]
    7708:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    770c:	add	x1, x0, #0x9d8
    7710:	mov	x0, x2
    7714:	bl	31b0 <PyErr_SetString@plt>
    7718:	mov	x0, #0x0                   	// #0
    771c:	b	7808 <PyNumber_FloorDivide@plt+0x4308>
    7720:	ldr	x0, [sp, #56]
    7724:	bl	33b0 <PyLong_AsDouble@plt>
    7728:	str	d0, [sp, #80]
    772c:	ldr	d1, [sp, #80]
    7730:	fmov	d0, #-1.000000000000000000e+00
    7734:	fcmp	d1, d0
    7738:	b.ne	77dc <PyNumber_FloorDivide@plt+0x42dc>  // b.any
    773c:	bl	3330 <PyErr_Occurred@plt>
    7740:	cmp	x0, #0x0
    7744:	b.eq	77dc <PyNumber_FloorDivide@plt+0x42dc>  // b.none
    7748:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    774c:	ldr	x0, [x0, #3936]
    7750:	ldr	x0, [x0]
    7754:	bl	3210 <PyErr_ExceptionMatches@plt>
    7758:	cmp	w0, #0x0
    775c:	b.ne	7768 <PyNumber_FloorDivide@plt+0x4268>  // b.any
    7760:	mov	x0, #0x0                   	// #0
    7764:	b	7808 <PyNumber_FloorDivide@plt+0x4308>
    7768:	bl	3290 <PyErr_Clear@plt>
    776c:	add	x0, sp, #0x48
    7770:	mov	x1, x0
    7774:	ldr	x0, [sp, #56]
    7778:	bl	31d0 <_PyLong_Frexp@plt>
    777c:	str	d0, [sp, #80]
    7780:	ldr	d1, [sp, #80]
    7784:	fmov	d0, #-1.000000000000000000e+00
    7788:	fcmp	d1, d0
    778c:	b.ne	77a4 <PyNumber_FloorDivide@plt+0x42a4>  // b.any
    7790:	bl	3330 <PyErr_Occurred@plt>
    7794:	cmp	x0, #0x0
    7798:	b.eq	77a4 <PyNumber_FloorDivide@plt+0x42a4>  // b.none
    779c:	mov	x0, #0x0                   	// #0
    77a0:	b	7808 <PyNumber_FloorDivide@plt+0x4308>
    77a4:	ldr	x0, [sp, #48]
    77a8:	ldr	d0, [sp, #80]
    77ac:	blr	x0
    77b0:	fmov	d8, d0
    77b4:	ldr	x0, [sp, #48]
    77b8:	fmov	d0, #2.000000000000000000e+00
    77bc:	blr	x0
    77c0:	fmov	d1, d0
    77c4:	ldr	d0, [sp, #72]
    77c8:	scvtf	d0, d0
    77cc:	fmul	d0, d1, d0
    77d0:	fadd	d0, d8, d0
    77d4:	str	d0, [sp, #88]
    77d8:	b	77ec <PyNumber_FloorDivide@plt+0x42ec>
    77dc:	ldr	x0, [sp, #48]
    77e0:	ldr	d0, [sp, #80]
    77e4:	blr	x0
    77e8:	str	d0, [sp, #88]
    77ec:	ldr	d0, [sp, #88]
    77f0:	bl	3240 <PyFloat_FromDouble@plt>
    77f4:	b	7808 <PyNumber_FloorDivide@plt+0x4308>
    77f8:	mov	w2, #0x0                   	// #0
    77fc:	ldr	x1, [sp, #48]
    7800:	ldr	x0, [sp, #56]
    7804:	bl	5970 <PyNumber_FloorDivide@plt+0x2470>
    7808:	ldr	d8, [sp, #16]
    780c:	ldp	x29, x30, [sp], #96
    7810:	ret
    7814:	stp	x29, x30, [sp, #-80]!
    7818:	mov	x29, sp
    781c:	str	x0, [sp, #40]
    7820:	str	x1, [sp, #32]
    7824:	str	w2, [sp, #28]
    7828:	str	x3, [sp, #16]
    782c:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    7830:	add	x2, x0, #0x4f0
    7834:	adrp	x0, 5000 <PyNumber_FloorDivide@plt+0x1b00>
    7838:	add	x1, x0, #0x368
    783c:	ldr	x0, [sp, #32]
    7840:	bl	76bc <PyNumber_FloorDivide@plt+0x41bc>
    7844:	str	x0, [sp, #72]
    7848:	ldr	x0, [sp, #72]
    784c:	cmp	x0, #0x0
    7850:	b.eq	7860 <PyNumber_FloorDivide@plt+0x4360>  // b.none
    7854:	ldr	x0, [sp, #16]
    7858:	cmp	x0, #0x0
    785c:	b.ne	7868 <PyNumber_FloorDivide@plt+0x4368>  // b.any
    7860:	ldr	x0, [sp, #72]
    7864:	b	78e8 <PyNumber_FloorDivide@plt+0x43e8>
    7868:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    786c:	add	x2, x0, #0x4f0
    7870:	adrp	x0, 5000 <PyNumber_FloorDivide@plt+0x1b00>
    7874:	add	x1, x0, #0x368
    7878:	ldr	x0, [sp, #16]
    787c:	bl	76bc <PyNumber_FloorDivide@plt+0x41bc>
    7880:	str	x0, [sp, #64]
    7884:	ldr	x0, [sp, #64]
    7888:	cmp	x0, #0x0
    788c:	b.ne	78ac <PyNumber_FloorDivide@plt+0x43ac>  // b.any
    7890:	ldr	x2, [sp, #72]
    7894:	mov	w1, #0x8e4                 	// #2276
    7898:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    789c:	add	x0, x0, #0x9a8
    78a0:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    78a4:	mov	x0, #0x0                   	// #0
    78a8:	b	78e8 <PyNumber_FloorDivide@plt+0x43e8>
    78ac:	ldr	x1, [sp, #64]
    78b0:	ldr	x0, [sp, #72]
    78b4:	bl	34d0 <PyNumber_TrueDivide@plt>
    78b8:	str	x0, [sp, #56]
    78bc:	ldr	x2, [sp, #72]
    78c0:	mov	w1, #0x8e9                 	// #2281
    78c4:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    78c8:	add	x0, x0, #0x9a8
    78cc:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    78d0:	ldr	x2, [sp, #64]
    78d4:	mov	w1, #0x8ea                 	// #2282
    78d8:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    78dc:	add	x0, x0, #0x9a8
    78e0:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    78e4:	ldr	x0, [sp, #56]
    78e8:	ldp	x29, x30, [sp], #80
    78ec:	ret
    78f0:	stp	x29, x30, [sp, #-32]!
    78f4:	mov	x29, sp
    78f8:	str	x0, [sp, #24]
    78fc:	str	x1, [sp, #16]
    7900:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    7904:	add	x2, x0, #0x4f8
    7908:	adrp	x0, 5000 <PyNumber_FloorDivide@plt+0x1b00>
    790c:	add	x1, x0, #0x438
    7910:	ldr	x0, [sp, #16]
    7914:	bl	76bc <PyNumber_FloorDivide@plt+0x41bc>
    7918:	ldp	x29, x30, [sp], #32
    791c:	ret
    7920:	stp	x29, x30, [sp, #-32]!
    7924:	mov	x29, sp
    7928:	str	x0, [sp, #24]
    792c:	str	x1, [sp, #16]
    7930:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    7934:	add	x2, x0, #0x500
    7938:	adrp	x0, 5000 <PyNumber_FloorDivide@plt+0x1b00>
    793c:	add	x1, x0, #0x504
    7940:	ldr	x0, [sp, #16]
    7944:	bl	76bc <PyNumber_FloorDivide@plt+0x41bc>
    7948:	ldp	x29, x30, [sp], #32
    794c:	ret
    7950:	stp	x29, x30, [sp, #-64]!
    7954:	mov	x29, sp
    7958:	str	x0, [sp, #40]
    795c:	str	d0, [sp, #32]
    7960:	str	d1, [sp, #24]
    7964:	ldr	d0, [sp, #24]
    7968:	fabs	d0, d0
    796c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7970:	fmov	d1, x0
    7974:	fcmp	d0, d1
    7978:	cset	w0, le
    797c:	and	w0, w0, #0xff
    7980:	eor	w0, w0, #0x1
    7984:	and	w0, w0, #0xff
    7988:	cmp	w0, #0x0
    798c:	b.eq	79c8 <PyNumber_FloorDivide@plt+0x44c8>  // b.none
    7990:	ldr	d0, [sp, #32]
    7994:	fabs	d0, d0
    7998:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    799c:	fmov	d1, x0
    79a0:	fcmp	d0, d1
    79a4:	cset	w0, hi  // hi = pmore
    79a8:	and	w0, w0, #0xff
    79ac:	eor	w0, w0, #0x1
    79b0:	and	w0, w0, #0xff
    79b4:	cmp	w0, #0x0
    79b8:	b.eq	79c8 <PyNumber_FloorDivide@plt+0x44c8>  // b.none
    79bc:	ldr	d0, [sp, #32]
    79c0:	bl	3240 <PyFloat_FromDouble@plt>
    79c4:	b	7a5c <PyNumber_FloorDivide@plt+0x455c>
    79c8:	bl	3490 <__errno_location@plt>
    79cc:	str	wzr, [x0]
    79d0:	ldr	d1, [sp, #24]
    79d4:	ldr	d0, [sp, #32]
    79d8:	bl	3440 <fmod@plt>
    79dc:	str	d0, [sp, #56]
    79e0:	ldr	d1, [sp, #56]
    79e4:	ldr	d0, [sp, #56]
    79e8:	fcmp	d1, d0
    79ec:	b.vc	7a2c <PyNumber_FloorDivide@plt+0x452c>
    79f0:	ldr	d1, [sp, #32]
    79f4:	ldr	d0, [sp, #32]
    79f8:	fcmp	d1, d0
    79fc:	b.vs	7a24 <PyNumber_FloorDivide@plt+0x4524>
    7a00:	ldr	d1, [sp, #24]
    7a04:	ldr	d0, [sp, #24]
    7a08:	fcmp	d1, d0
    7a0c:	b.vs	7a24 <PyNumber_FloorDivide@plt+0x4524>
    7a10:	bl	3490 <__errno_location@plt>
    7a14:	mov	x1, x0
    7a18:	mov	w0, #0x21                  	// #33
    7a1c:	str	w0, [x1]
    7a20:	b	7a2c <PyNumber_FloorDivide@plt+0x452c>
    7a24:	bl	3490 <__errno_location@plt>
    7a28:	str	wzr, [x0]
    7a2c:	bl	3490 <__errno_location@plt>
    7a30:	ldr	w0, [x0]
    7a34:	cmp	w0, #0x0
    7a38:	b.eq	7a54 <PyNumber_FloorDivide@plt+0x4554>  // b.none
    7a3c:	ldr	d0, [sp, #56]
    7a40:	bl	5680 <PyNumber_FloorDivide@plt+0x2180>
    7a44:	cmp	w0, #0x0
    7a48:	b.eq	7a54 <PyNumber_FloorDivide@plt+0x4554>  // b.none
    7a4c:	mov	x0, #0x0                   	// #0
    7a50:	b	7a5c <PyNumber_FloorDivide@plt+0x455c>
    7a54:	ldr	d0, [sp, #56]
    7a58:	bl	3240 <PyFloat_FromDouble@plt>
    7a5c:	ldp	x29, x30, [sp], #64
    7a60:	ret
    7a64:	stp	x29, x30, [sp, #-96]!
    7a68:	mov	x29, sp
    7a6c:	str	x0, [sp, #40]
    7a70:	str	x1, [sp, #32]
    7a74:	str	d0, [sp, #24]
    7a78:	str	w2, [sp, #20]
    7a7c:	fmov	d0, #1.000000000000000000e+00
    7a80:	str	d0, [sp, #88]
    7a84:	str	xzr, [sp, #80]
    7a88:	ldr	d0, [sp, #24]
    7a8c:	fabs	d0, d0
    7a90:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7a94:	fmov	d1, x0
    7a98:	fcmp	d0, d1
    7a9c:	cset	w0, le
    7aa0:	and	w0, w0, #0xff
    7aa4:	eor	w0, w0, #0x1
    7aa8:	and	w0, w0, #0xff
    7aac:	cmp	w0, #0x0
    7ab0:	b.eq	7abc <PyNumber_FloorDivide@plt+0x45bc>  // b.none
    7ab4:	ldr	d0, [sp, #24]
    7ab8:	b	7ba8 <PyNumber_FloorDivide@plt+0x46a8>
    7abc:	ldr	w0, [sp, #20]
    7ac0:	cmp	w0, #0x0
    7ac4:	b.eq	7ad4 <PyNumber_FloorDivide@plt+0x45d4>  // b.none
    7ac8:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    7acc:	fmov	d0, x0
    7ad0:	b	7ba8 <PyNumber_FloorDivide@plt+0x46a8>
    7ad4:	ldr	d0, [sp, #24]
    7ad8:	fcmp	d0, #0.0
    7adc:	b.eq	7aec <PyNumber_FloorDivide@plt+0x45ec>  // b.none
    7ae0:	ldr	x0, [sp, #40]
    7ae4:	cmp	x0, #0x1
    7ae8:	b.gt	7af4 <PyNumber_FloorDivide@plt+0x45f4>
    7aec:	ldr	d0, [sp, #24]
    7af0:	b	7ba8 <PyNumber_FloorDivide@plt+0x46a8>
    7af4:	str	xzr, [sp, #72]
    7af8:	b	7b74 <PyNumber_FloorDivide@plt+0x4674>
    7afc:	ldr	x0, [sp, #72]
    7b00:	lsl	x0, x0, #3
    7b04:	ldr	x1, [sp, #32]
    7b08:	add	x0, x1, x0
    7b0c:	ldr	d0, [x0]
    7b10:	str	d0, [sp, #64]
    7b14:	ldr	d0, [sp, #24]
    7b18:	ldr	d1, [sp, #64]
    7b1c:	fdiv	d0, d1, d0
    7b20:	str	d0, [sp, #64]
    7b24:	ldr	d0, [sp, #64]
    7b28:	fmul	d0, d0, d0
    7b2c:	str	d0, [sp, #64]
    7b30:	ldr	d0, [sp, #88]
    7b34:	str	d0, [sp, #56]
    7b38:	ldr	d1, [sp, #88]
    7b3c:	ldr	d0, [sp, #64]
    7b40:	fadd	d0, d1, d0
    7b44:	str	d0, [sp, #88]
    7b48:	ldr	d1, [sp, #56]
    7b4c:	ldr	d0, [sp, #88]
    7b50:	fsub	d1, d1, d0
    7b54:	ldr	d0, [sp, #64]
    7b58:	fadd	d0, d1, d0
    7b5c:	ldr	d1, [sp, #80]
    7b60:	fadd	d0, d1, d0
    7b64:	str	d0, [sp, #80]
    7b68:	ldr	x0, [sp, #72]
    7b6c:	add	x0, x0, #0x1
    7b70:	str	x0, [sp, #72]
    7b74:	ldr	x1, [sp, #72]
    7b78:	ldr	x0, [sp, #40]
    7b7c:	cmp	x1, x0
    7b80:	b.lt	7afc <PyNumber_FloorDivide@plt+0x45fc>  // b.tstop
    7b84:	ldr	d1, [sp, #88]
    7b88:	fmov	d0, #1.000000000000000000e+00
    7b8c:	fsub	d1, d1, d0
    7b90:	ldr	d0, [sp, #80]
    7b94:	fadd	d0, d1, d0
    7b98:	bl	3190 <sqrt@plt>
    7b9c:	fmov	d1, d0
    7ba0:	ldr	d0, [sp, #24]
    7ba4:	fmul	d0, d1, d0
    7ba8:	ldp	x29, x30, [sp], #96
    7bac:	ret
    7bb0:	stp	x29, x30, [sp, #-272]!
    7bb4:	mov	x29, sp
    7bb8:	str	x0, [sp, #40]
    7bbc:	str	x1, [sp, #32]
    7bc0:	str	x2, [sp, #24]
    7bc4:	str	xzr, [sp, #264]
    7bc8:	str	wzr, [sp, #236]
    7bcc:	str	wzr, [sp, #232]
    7bd0:	str	wzr, [sp, #228]
    7bd4:	add	x0, sp, #0x30
    7bd8:	str	x0, [sp, #216]
    7bdc:	ldr	x0, [sp, #32]
    7be0:	ldr	x0, [x0, #8]
    7be4:	ldr	x0, [x0, #168]
    7be8:	and	x0, x0, #0x4000000
    7bec:	cmp	x0, #0x0
    7bf0:	b.ne	7c1c <PyNumber_FloorDivide@plt+0x471c>  // b.any
    7bf4:	ldr	x0, [sp, #32]
    7bf8:	bl	3430 <PySequence_Tuple@plt>
    7bfc:	str	x0, [sp, #32]
    7c00:	ldr	x0, [sp, #32]
    7c04:	cmp	x0, #0x0
    7c08:	b.ne	7c14 <PyNumber_FloorDivide@plt+0x4714>  // b.any
    7c0c:	mov	x0, #0x0                   	// #0
    7c10:	b	7fc8 <PyNumber_FloorDivide@plt+0x4ac8>
    7c14:	mov	w0, #0x1                   	// #1
    7c18:	str	w0, [sp, #232]
    7c1c:	ldr	x0, [sp, #24]
    7c20:	ldr	x0, [x0, #8]
    7c24:	ldr	x0, [x0, #168]
    7c28:	and	x0, x0, #0x4000000
    7c2c:	cmp	x0, #0x0
    7c30:	b.ne	7c7c <PyNumber_FloorDivide@plt+0x477c>  // b.any
    7c34:	ldr	x0, [sp, #24]
    7c38:	bl	3430 <PySequence_Tuple@plt>
    7c3c:	str	x0, [sp, #24]
    7c40:	ldr	x0, [sp, #24]
    7c44:	cmp	x0, #0x0
    7c48:	b.ne	7c74 <PyNumber_FloorDivide@plt+0x4774>  // b.any
    7c4c:	ldr	w0, [sp, #232]
    7c50:	cmp	w0, #0x0
    7c54:	b.eq	7c6c <PyNumber_FloorDivide@plt+0x476c>  // b.none
    7c58:	ldr	x2, [sp, #32]
    7c5c:	mov	w1, #0x999                 	// #2457
    7c60:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    7c64:	add	x0, x0, #0x9a8
    7c68:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    7c6c:	mov	x0, #0x0                   	// #0
    7c70:	b	7fc8 <PyNumber_FloorDivide@plt+0x4ac8>
    7c74:	mov	w0, #0x1                   	// #1
    7c78:	str	w0, [sp, #228]
    7c7c:	ldr	x0, [sp, #32]
    7c80:	ldr	x0, [x0, #16]
    7c84:	str	x0, [sp, #208]
    7c88:	ldr	x0, [sp, #24]
    7c8c:	ldr	x0, [x0, #16]
    7c90:	str	x0, [sp, #200]
    7c94:	ldr	x1, [sp, #208]
    7c98:	ldr	x0, [sp, #200]
    7c9c:	cmp	x1, x0
    7ca0:	b.eq	7cc8 <PyNumber_FloorDivide@plt+0x47c8>  // b.none
    7ca4:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    7ca8:	ldr	x0, [x0, #3872]
    7cac:	ldr	x2, [x0]
    7cb0:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    7cb4:	add	x1, x0, #0x508
    7cb8:	mov	x0, x2
    7cbc:	bl	31b0 <PyErr_SetString@plt>
    7cc0:	mov	x0, #0x0                   	// #0
    7cc4:	b	7fc8 <PyNumber_FloorDivide@plt+0x4ac8>
    7cc8:	ldr	x0, [sp, #200]
    7ccc:	cmp	x0, #0x10
    7cd0:	b.le	7cf8 <PyNumber_FloorDivide@plt+0x47f8>
    7cd4:	ldr	x0, [sp, #200]
    7cd8:	lsl	x0, x0, #3
    7cdc:	bl	31c0 <PyObject_Malloc@plt>
    7ce0:	str	x0, [sp, #216]
    7ce4:	ldr	x0, [sp, #216]
    7ce8:	cmp	x0, #0x0
    7cec:	b.ne	7cf8 <PyNumber_FloorDivide@plt+0x47f8>  // b.any
    7cf0:	bl	3120 <PyErr_NoMemory@plt>
    7cf4:	b	7fc8 <PyNumber_FloorDivide@plt+0x4ac8>
    7cf8:	str	xzr, [sp, #240]
    7cfc:	b	7ed4 <PyNumber_FloorDivide@plt+0x49d4>
    7d00:	ldr	x1, [sp, #32]
    7d04:	ldr	x0, [sp, #240]
    7d08:	add	x0, x0, #0x2
    7d0c:	lsl	x0, x0, #3
    7d10:	add	x0, x1, x0
    7d14:	ldr	x0, [x0, #8]
    7d18:	str	x0, [sp, #184]
    7d1c:	ldr	x0, [sp, #184]
    7d20:	ldr	x1, [x0, #8]
    7d24:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    7d28:	ldr	x0, [x0, #3824]
    7d2c:	cmp	x1, x0
    7d30:	b.ne	7d44 <PyNumber_FloorDivide@plt+0x4844>  // b.any
    7d34:	ldr	x0, [sp, #184]
    7d38:	ldr	d0, [x0, #16]
    7d3c:	str	d0, [sp, #256]
    7d40:	b	7db0 <PyNumber_FloorDivide@plt+0x48b0>
    7d44:	ldr	x0, [sp, #184]
    7d48:	ldr	x1, [x0, #8]
    7d4c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    7d50:	ldr	x0, [x0, #3984]
    7d54:	cmp	x1, x0
    7d58:	b.ne	7d88 <PyNumber_FloorDivide@plt+0x4888>  // b.any
    7d5c:	ldr	x0, [sp, #184]
    7d60:	bl	33b0 <PyLong_AsDouble@plt>
    7d64:	str	d0, [sp, #256]
    7d68:	ldr	d1, [sp, #256]
    7d6c:	fmov	d0, #-1.000000000000000000e+00
    7d70:	fcmp	d1, d0
    7d74:	b.ne	7db0 <PyNumber_FloorDivide@plt+0x48b0>  // b.any
    7d78:	bl	3330 <PyErr_Occurred@plt>
    7d7c:	cmp	x0, #0x0
    7d80:	b.eq	7db0 <PyNumber_FloorDivide@plt+0x48b0>  // b.none
    7d84:	b	7f6c <PyNumber_FloorDivide@plt+0x4a6c>
    7d88:	ldr	x0, [sp, #184]
    7d8c:	bl	3360 <PyFloat_AsDouble@plt>
    7d90:	str	d0, [sp, #256]
    7d94:	ldr	d1, [sp, #256]
    7d98:	fmov	d0, #-1.000000000000000000e+00
    7d9c:	fcmp	d1, d0
    7da0:	b.ne	7db0 <PyNumber_FloorDivide@plt+0x48b0>  // b.any
    7da4:	bl	3330 <PyErr_Occurred@plt>
    7da8:	cmp	x0, #0x0
    7dac:	b.ne	7f60 <PyNumber_FloorDivide@plt+0x4a60>  // b.any
    7db0:	ldr	x1, [sp, #24]
    7db4:	ldr	x0, [sp, #240]
    7db8:	add	x0, x0, #0x2
    7dbc:	lsl	x0, x0, #3
    7dc0:	add	x0, x1, x0
    7dc4:	ldr	x0, [x0, #8]
    7dc8:	str	x0, [sp, #184]
    7dcc:	ldr	x0, [sp, #184]
    7dd0:	ldr	x1, [x0, #8]
    7dd4:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    7dd8:	ldr	x0, [x0, #3824]
    7ddc:	cmp	x1, x0
    7de0:	b.ne	7df4 <PyNumber_FloorDivide@plt+0x48f4>  // b.any
    7de4:	ldr	x0, [sp, #184]
    7de8:	ldr	d0, [x0, #16]
    7dec:	str	d0, [sp, #248]
    7df0:	b	7e60 <PyNumber_FloorDivide@plt+0x4960>
    7df4:	ldr	x0, [sp, #184]
    7df8:	ldr	x1, [x0, #8]
    7dfc:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    7e00:	ldr	x0, [x0, #3984]
    7e04:	cmp	x1, x0
    7e08:	b.ne	7e38 <PyNumber_FloorDivide@plt+0x4938>  // b.any
    7e0c:	ldr	x0, [sp, #184]
    7e10:	bl	33b0 <PyLong_AsDouble@plt>
    7e14:	str	d0, [sp, #248]
    7e18:	ldr	d1, [sp, #248]
    7e1c:	fmov	d0, #-1.000000000000000000e+00
    7e20:	fcmp	d1, d0
    7e24:	b.ne	7e60 <PyNumber_FloorDivide@plt+0x4960>  // b.any
    7e28:	bl	3330 <PyErr_Occurred@plt>
    7e2c:	cmp	x0, #0x0
    7e30:	b.eq	7e60 <PyNumber_FloorDivide@plt+0x4960>  // b.none
    7e34:	b	7f6c <PyNumber_FloorDivide@plt+0x4a6c>
    7e38:	ldr	x0, [sp, #184]
    7e3c:	bl	3360 <PyFloat_AsDouble@plt>
    7e40:	str	d0, [sp, #248]
    7e44:	ldr	d1, [sp, #248]
    7e48:	fmov	d0, #-1.000000000000000000e+00
    7e4c:	fcmp	d1, d0
    7e50:	b.ne	7e60 <PyNumber_FloorDivide@plt+0x4960>  // b.any
    7e54:	bl	3330 <PyErr_Occurred@plt>
    7e58:	cmp	x0, #0x0
    7e5c:	b.ne	7f68 <PyNumber_FloorDivide@plt+0x4a68>  // b.any
    7e60:	ldr	d1, [sp, #256]
    7e64:	ldr	d0, [sp, #248]
    7e68:	fsub	d0, d1, d0
    7e6c:	fabs	d0, d0
    7e70:	str	d0, [sp, #176]
    7e74:	ldr	x0, [sp, #240]
    7e78:	lsl	x0, x0, #3
    7e7c:	ldr	x1, [sp, #216]
    7e80:	add	x0, x1, x0
    7e84:	ldr	d0, [sp, #176]
    7e88:	str	d0, [x0]
    7e8c:	ldr	d1, [sp, #176]
    7e90:	ldr	d0, [sp, #176]
    7e94:	fcmp	d1, d0
    7e98:	cset	w0, vs
    7e9c:	and	w0, w0, #0xff
    7ea0:	mov	w1, w0
    7ea4:	ldr	w0, [sp, #236]
    7ea8:	orr	w0, w0, w1
    7eac:	str	w0, [sp, #236]
    7eb0:	ldr	d1, [sp, #176]
    7eb4:	ldr	d0, [sp, #264]
    7eb8:	fcmpe	d1, d0
    7ebc:	b.le	7ec8 <PyNumber_FloorDivide@plt+0x49c8>
    7ec0:	ldr	d0, [sp, #176]
    7ec4:	str	d0, [sp, #264]
    7ec8:	ldr	x0, [sp, #240]
    7ecc:	add	x0, x0, #0x1
    7ed0:	str	x0, [sp, #240]
    7ed4:	ldr	x1, [sp, #240]
    7ed8:	ldr	x0, [sp, #200]
    7edc:	cmp	x1, x0
    7ee0:	b.lt	7d00 <PyNumber_FloorDivide@plt+0x4800>  // b.tstop
    7ee4:	ldr	w2, [sp, #236]
    7ee8:	ldr	d0, [sp, #264]
    7eec:	ldr	x1, [sp, #216]
    7ef0:	ldr	x0, [sp, #200]
    7ef4:	bl	7a64 <PyNumber_FloorDivide@plt+0x4564>
    7ef8:	str	d0, [sp, #192]
    7efc:	add	x0, sp, #0x30
    7f00:	ldr	x1, [sp, #216]
    7f04:	cmp	x1, x0
    7f08:	b.eq	7f14 <PyNumber_FloorDivide@plt+0x4a14>  // b.none
    7f0c:	ldr	x0, [sp, #216]
    7f10:	bl	3230 <PyObject_Free@plt>
    7f14:	ldr	w0, [sp, #232]
    7f18:	cmp	w0, #0x0
    7f1c:	b.eq	7f34 <PyNumber_FloorDivide@plt+0x4a34>  // b.none
    7f20:	ldr	x2, [sp, #32]
    7f24:	mov	w1, #0x9bf                 	// #2495
    7f28:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    7f2c:	add	x0, x0, #0x9a8
    7f30:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    7f34:	ldr	w0, [sp, #228]
    7f38:	cmp	w0, #0x0
    7f3c:	b.eq	7f54 <PyNumber_FloorDivide@plt+0x4a54>  // b.none
    7f40:	ldr	x2, [sp, #24]
    7f44:	mov	w1, #0x9c2                 	// #2498
    7f48:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    7f4c:	add	x0, x0, #0x9a8
    7f50:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    7f54:	ldr	d0, [sp, #192]
    7f58:	bl	3240 <PyFloat_FromDouble@plt>
    7f5c:	b	7fc8 <PyNumber_FloorDivide@plt+0x4ac8>
    7f60:	nop
    7f64:	b	7f6c <PyNumber_FloorDivide@plt+0x4a6c>
    7f68:	nop
    7f6c:	add	x0, sp, #0x30
    7f70:	ldr	x1, [sp, #216]
    7f74:	cmp	x1, x0
    7f78:	b.eq	7f84 <PyNumber_FloorDivide@plt+0x4a84>  // b.none
    7f7c:	ldr	x0, [sp, #216]
    7f80:	bl	3230 <PyObject_Free@plt>
    7f84:	ldr	w0, [sp, #232]
    7f88:	cmp	w0, #0x0
    7f8c:	b.eq	7fa4 <PyNumber_FloorDivide@plt+0x4aa4>  // b.none
    7f90:	ldr	x2, [sp, #32]
    7f94:	mov	w1, #0x9cb                 	// #2507
    7f98:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    7f9c:	add	x0, x0, #0x9a8
    7fa0:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    7fa4:	ldr	w0, [sp, #228]
    7fa8:	cmp	w0, #0x0
    7fac:	b.eq	7fc4 <PyNumber_FloorDivide@plt+0x4ac4>  // b.none
    7fb0:	ldr	x2, [sp, #24]
    7fb4:	mov	w1, #0x9ce                 	// #2510
    7fb8:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    7fbc:	add	x0, x0, #0x9a8
    7fc0:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    7fc4:	mov	x0, #0x0                   	// #0
    7fc8:	ldp	x29, x30, [sp], #272
    7fcc:	ret
    7fd0:	stp	x29, x30, [sp, #-240]!
    7fd4:	mov	x29, sp
    7fd8:	str	x0, [sp, #40]
    7fdc:	str	x1, [sp, #32]
    7fe0:	str	x2, [sp, #24]
    7fe4:	str	xzr, [sp, #224]
    7fe8:	str	wzr, [sp, #212]
    7fec:	add	x0, sp, #0x38
    7ff0:	str	x0, [sp, #200]
    7ff4:	ldr	x0, [sp, #24]
    7ff8:	cmp	x0, #0x10
    7ffc:	b.le	8024 <PyNumber_FloorDivide@plt+0x4b24>
    8000:	ldr	x0, [sp, #24]
    8004:	lsl	x0, x0, #3
    8008:	bl	31c0 <PyObject_Malloc@plt>
    800c:	str	x0, [sp, #200]
    8010:	ldr	x0, [sp, #200]
    8014:	cmp	x0, #0x0
    8018:	b.ne	8024 <PyNumber_FloorDivide@plt+0x4b24>  // b.any
    801c:	bl	3120 <PyErr_NoMemory@plt>
    8020:	b	81b0 <PyNumber_FloorDivide@plt+0x4cb0>
    8024:	str	xzr, [sp, #232]
    8028:	b	8144 <PyNumber_FloorDivide@plt+0x4c44>
    802c:	ldr	x0, [sp, #232]
    8030:	lsl	x0, x0, #3
    8034:	ldr	x1, [sp, #32]
    8038:	add	x0, x1, x0
    803c:	ldr	x0, [x0]
    8040:	str	x0, [sp, #184]
    8044:	ldr	x0, [sp, #184]
    8048:	ldr	x1, [x0, #8]
    804c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    8050:	ldr	x0, [x0, #3824]
    8054:	cmp	x1, x0
    8058:	b.ne	806c <PyNumber_FloorDivide@plt+0x4b6c>  // b.any
    805c:	ldr	x0, [sp, #184]
    8060:	ldr	d0, [x0, #16]
    8064:	str	d0, [sp, #216]
    8068:	b	80d8 <PyNumber_FloorDivide@plt+0x4bd8>
    806c:	ldr	x0, [sp, #184]
    8070:	ldr	x1, [x0, #8]
    8074:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    8078:	ldr	x0, [x0, #3984]
    807c:	cmp	x1, x0
    8080:	b.ne	80b0 <PyNumber_FloorDivide@plt+0x4bb0>  // b.any
    8084:	ldr	x0, [sp, #184]
    8088:	bl	33b0 <PyLong_AsDouble@plt>
    808c:	str	d0, [sp, #216]
    8090:	ldr	d1, [sp, #216]
    8094:	fmov	d0, #-1.000000000000000000e+00
    8098:	fcmp	d1, d0
    809c:	b.ne	80d8 <PyNumber_FloorDivide@plt+0x4bd8>  // b.any
    80a0:	bl	3330 <PyErr_Occurred@plt>
    80a4:	cmp	x0, #0x0
    80a8:	b.eq	80d8 <PyNumber_FloorDivide@plt+0x4bd8>  // b.none
    80ac:	b	8194 <PyNumber_FloorDivide@plt+0x4c94>
    80b0:	ldr	x0, [sp, #184]
    80b4:	bl	3360 <PyFloat_AsDouble@plt>
    80b8:	str	d0, [sp, #216]
    80bc:	ldr	d1, [sp, #216]
    80c0:	fmov	d0, #-1.000000000000000000e+00
    80c4:	fcmp	d1, d0
    80c8:	b.ne	80d8 <PyNumber_FloorDivide@plt+0x4bd8>  // b.any
    80cc:	bl	3330 <PyErr_Occurred@plt>
    80d0:	cmp	x0, #0x0
    80d4:	b.ne	8190 <PyNumber_FloorDivide@plt+0x4c90>  // b.any
    80d8:	ldr	d0, [sp, #216]
    80dc:	fabs	d0, d0
    80e0:	str	d0, [sp, #216]
    80e4:	ldr	x0, [sp, #232]
    80e8:	lsl	x0, x0, #3
    80ec:	ldr	x1, [sp, #200]
    80f0:	add	x0, x1, x0
    80f4:	ldr	d0, [sp, #216]
    80f8:	str	d0, [x0]
    80fc:	ldr	d1, [sp, #216]
    8100:	ldr	d0, [sp, #216]
    8104:	fcmp	d1, d0
    8108:	cset	w0, vs
    810c:	and	w0, w0, #0xff
    8110:	mov	w1, w0
    8114:	ldr	w0, [sp, #212]
    8118:	orr	w0, w0, w1
    811c:	str	w0, [sp, #212]
    8120:	ldr	d1, [sp, #216]
    8124:	ldr	d0, [sp, #224]
    8128:	fcmpe	d1, d0
    812c:	b.le	8138 <PyNumber_FloorDivide@plt+0x4c38>
    8130:	ldr	d0, [sp, #216]
    8134:	str	d0, [sp, #224]
    8138:	ldr	x0, [sp, #232]
    813c:	add	x0, x0, #0x1
    8140:	str	x0, [sp, #232]
    8144:	ldr	x1, [sp, #232]
    8148:	ldr	x0, [sp, #24]
    814c:	cmp	x1, x0
    8150:	b.lt	802c <PyNumber_FloorDivide@plt+0x4b2c>  // b.tstop
    8154:	ldr	w2, [sp, #212]
    8158:	ldr	d0, [sp, #224]
    815c:	ldr	x1, [sp, #200]
    8160:	ldr	x0, [sp, #24]
    8164:	bl	7a64 <PyNumber_FloorDivide@plt+0x4564>
    8168:	str	d0, [sp, #192]
    816c:	add	x0, sp, #0x38
    8170:	ldr	x1, [sp, #200]
    8174:	cmp	x1, x0
    8178:	b.eq	8184 <PyNumber_FloorDivide@plt+0x4c84>  // b.none
    817c:	ldr	x0, [sp, #200]
    8180:	bl	3230 <PyObject_Free@plt>
    8184:	ldr	d0, [sp, #192]
    8188:	bl	3240 <PyFloat_FromDouble@plt>
    818c:	b	81b0 <PyNumber_FloorDivide@plt+0x4cb0>
    8190:	nop
    8194:	add	x0, sp, #0x38
    8198:	ldr	x1, [sp, #200]
    819c:	cmp	x1, x0
    81a0:	b.eq	81ac <PyNumber_FloorDivide@plt+0x4cac>  // b.none
    81a4:	ldr	x0, [sp, #200]
    81a8:	bl	3230 <PyObject_Free@plt>
    81ac:	mov	x0, #0x0                   	// #0
    81b0:	ldp	x29, x30, [sp], #240
    81b4:	ret
    81b8:	stp	x29, x30, [sp, #-64]!
    81bc:	mov	x29, sp
    81c0:	str	x0, [sp, #40]
    81c4:	str	d0, [sp, #32]
    81c8:	str	d1, [sp, #24]
    81cc:	str	xzr, [sp, #56]
    81d0:	ldr	d0, [sp, #32]
    81d4:	fabs	d0, d0
    81d8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    81dc:	fmov	d1, x0
    81e0:	fcmp	d0, d1
    81e4:	b.hi	8200 <PyNumber_FloorDivide@plt+0x4d00>  // b.pmore
    81e8:	ldr	d0, [sp, #24]
    81ec:	fabs	d0, d0
    81f0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    81f4:	fmov	d1, x0
    81f8:	fcmp	d0, d1
    81fc:	b.ls	8434 <PyNumber_FloorDivide@plt+0x4f34>  // b.plast
    8200:	bl	3490 <__errno_location@plt>
    8204:	str	wzr, [x0]
    8208:	ldr	d1, [sp, #32]
    820c:	ldr	d0, [sp, #32]
    8210:	fcmp	d1, d0
    8214:	b.vc	8238 <PyNumber_FloorDivide@plt+0x4d38>
    8218:	ldr	d0, [sp, #24]
    821c:	fcmp	d0, #0.0
    8220:	b.eq	822c <PyNumber_FloorDivide@plt+0x4d2c>  // b.none
    8224:	ldr	d0, [sp, #32]
    8228:	b	8230 <PyNumber_FloorDivide@plt+0x4d30>
    822c:	fmov	d0, #1.000000000000000000e+00
    8230:	str	d0, [sp, #56]
    8234:	b	84e8 <PyNumber_FloorDivide@plt+0x4fe8>
    8238:	ldr	d1, [sp, #24]
    823c:	ldr	d0, [sp, #24]
    8240:	fcmp	d1, d0
    8244:	b.vc	826c <PyNumber_FloorDivide@plt+0x4d6c>
    8248:	ldr	d1, [sp, #32]
    824c:	fmov	d0, #1.000000000000000000e+00
    8250:	fcmp	d1, d0
    8254:	b.eq	8260 <PyNumber_FloorDivide@plt+0x4d60>  // b.none
    8258:	ldr	d0, [sp, #24]
    825c:	b	8264 <PyNumber_FloorDivide@plt+0x4d64>
    8260:	fmov	d0, #1.000000000000000000e+00
    8264:	str	d0, [sp, #56]
    8268:	b	84e8 <PyNumber_FloorDivide@plt+0x4fe8>
    826c:	ldr	d0, [sp, #32]
    8270:	fabs	d0, d0
    8274:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8278:	fmov	d1, x0
    827c:	fcmp	d0, d1
    8280:	cset	w0, le
    8284:	and	w0, w0, #0xff
    8288:	eor	w0, w0, #0x1
    828c:	and	w0, w0, #0xff
    8290:	cmp	w0, #0x0
    8294:	b.eq	8364 <PyNumber_FloorDivide@plt+0x4e64>  // b.none
    8298:	ldr	d0, [sp, #24]
    829c:	fabs	d0, d0
    82a0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    82a4:	fmov	d1, x0
    82a8:	fcmp	d0, d1
    82ac:	cset	w0, hi  // hi = pmore
    82b0:	and	w0, w0, #0xff
    82b4:	eor	w0, w0, #0x1
    82b8:	and	w0, w0, #0xff
    82bc:	cmp	w0, #0x0
    82c0:	b.eq	82ec <PyNumber_FloorDivide@plt+0x4dec>  // b.none
    82c4:	ldr	d0, [sp, #24]
    82c8:	fabs	d0, d0
    82cc:	fmov	d1, #2.000000000000000000e+00
    82d0:	bl	3440 <fmod@plt>
    82d4:	fmov	d1, d0
    82d8:	fmov	d0, #1.000000000000000000e+00
    82dc:	fcmp	d1, d0
    82e0:	b.ne	82ec <PyNumber_FloorDivide@plt+0x4dec>  // b.any
    82e4:	mov	w0, #0x1                   	// #1
    82e8:	b	82f0 <PyNumber_FloorDivide@plt+0x4df0>
    82ec:	mov	w0, #0x0                   	// #0
    82f0:	str	w0, [sp, #52]
    82f4:	ldr	d0, [sp, #24]
    82f8:	fcmpe	d0, #0.0
    82fc:	b.le	8324 <PyNumber_FloorDivide@plt+0x4e24>
    8300:	ldr	w0, [sp, #52]
    8304:	cmp	w0, #0x0
    8308:	b.ne	8318 <PyNumber_FloorDivide@plt+0x4e18>  // b.any
    830c:	ldr	d0, [sp, #32]
    8310:	fabs	d0, d0
    8314:	b	831c <PyNumber_FloorDivide@plt+0x4e1c>
    8318:	ldr	d0, [sp, #32]
    831c:	str	d0, [sp, #56]
    8320:	b	84e8 <PyNumber_FloorDivide@plt+0x4fe8>
    8324:	ldr	d0, [sp, #24]
    8328:	fcmp	d0, #0.0
    832c:	b.ne	833c <PyNumber_FloorDivide@plt+0x4e3c>  // b.any
    8330:	fmov	d0, #1.000000000000000000e+00
    8334:	str	d0, [sp, #56]
    8338:	b	84e8 <PyNumber_FloorDivide@plt+0x4fe8>
    833c:	ldr	w0, [sp, #52]
    8340:	cmp	w0, #0x0
    8344:	b.eq	8358 <PyNumber_FloorDivide@plt+0x4e58>  // b.none
    8348:	ldr	d1, [sp, #32]
    834c:	movi	d0, #0x0
    8350:	bl	3070 <copysign@plt>
    8354:	b	835c <PyNumber_FloorDivide@plt+0x4e5c>
    8358:	movi	d0, #0x0
    835c:	str	d0, [sp, #56]
    8360:	b	84e8 <PyNumber_FloorDivide@plt+0x4fe8>
    8364:	ldr	d0, [sp, #24]
    8368:	fabs	d0, d0
    836c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8370:	fmov	d1, x0
    8374:	fcmp	d0, d1
    8378:	cset	w0, le
    837c:	and	w0, w0, #0xff
    8380:	eor	w0, w0, #0x1
    8384:	and	w0, w0, #0xff
    8388:	cmp	w0, #0x0
    838c:	b.eq	84e8 <PyNumber_FloorDivide@plt+0x4fe8>  // b.none
    8390:	ldr	d0, [sp, #32]
    8394:	fabs	d1, d0
    8398:	fmov	d0, #1.000000000000000000e+00
    839c:	fcmp	d1, d0
    83a0:	b.ne	83b0 <PyNumber_FloorDivide@plt+0x4eb0>  // b.any
    83a4:	fmov	d0, #1.000000000000000000e+00
    83a8:	str	d0, [sp, #56]
    83ac:	b	84e8 <PyNumber_FloorDivide@plt+0x4fe8>
    83b0:	ldr	d0, [sp, #24]
    83b4:	fcmpe	d0, #0.0
    83b8:	b.le	83dc <PyNumber_FloorDivide@plt+0x4edc>
    83bc:	ldr	d0, [sp, #32]
    83c0:	fabs	d1, d0
    83c4:	fmov	d0, #1.000000000000000000e+00
    83c8:	fcmpe	d1, d0
    83cc:	b.le	83dc <PyNumber_FloorDivide@plt+0x4edc>
    83d0:	ldr	d0, [sp, #24]
    83d4:	str	d0, [sp, #56]
    83d8:	b	8430 <PyNumber_FloorDivide@plt+0x4f30>
    83dc:	ldr	d0, [sp, #24]
    83e0:	fcmpe	d0, #0.0
    83e4:	b.pl	8428 <PyNumber_FloorDivide@plt+0x4f28>  // b.nfrst
    83e8:	ldr	d0, [sp, #32]
    83ec:	fabs	d1, d0
    83f0:	fmov	d0, #1.000000000000000000e+00
    83f4:	fcmpe	d1, d0
    83f8:	b.pl	8428 <PyNumber_FloorDivide@plt+0x4f28>  // b.nfrst
    83fc:	ldr	d0, [sp, #24]
    8400:	fneg	d0, d0
    8404:	str	d0, [sp, #56]
    8408:	ldr	d0, [sp, #32]
    840c:	fcmp	d0, #0.0
    8410:	b.ne	8430 <PyNumber_FloorDivide@plt+0x4f30>  // b.any
    8414:	bl	3490 <__errno_location@plt>
    8418:	mov	x1, x0
    841c:	mov	w0, #0x21                  	// #33
    8420:	str	w0, [x1]
    8424:	b	8430 <PyNumber_FloorDivide@plt+0x4f30>
    8428:	str	xzr, [sp, #56]
    842c:	b	84e8 <PyNumber_FloorDivide@plt+0x4fe8>
    8430:	b	84e8 <PyNumber_FloorDivide@plt+0x4fe8>
    8434:	bl	3490 <__errno_location@plt>
    8438:	str	wzr, [x0]
    843c:	ldr	d1, [sp, #24]
    8440:	ldr	d0, [sp, #32]
    8444:	bl	3110 <pow@plt>
    8448:	str	d0, [sp, #56]
    844c:	ldr	d0, [sp, #56]
    8450:	fabs	d0, d0
    8454:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8458:	fmov	d1, x0
    845c:	fcmp	d0, d1
    8460:	b.ls	84ec <PyNumber_FloorDivide@plt+0x4fec>  // b.plast
    8464:	ldr	d1, [sp, #56]
    8468:	ldr	d0, [sp, #56]
    846c:	fcmp	d1, d0
    8470:	b.vc	8488 <PyNumber_FloorDivide@plt+0x4f88>
    8474:	bl	3490 <__errno_location@plt>
    8478:	mov	x1, x0
    847c:	mov	w0, #0x21                  	// #33
    8480:	str	w0, [x1]
    8484:	b	84ec <PyNumber_FloorDivide@plt+0x4fec>
    8488:	ldr	d0, [sp, #56]
    848c:	fabs	d0, d0
    8490:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8494:	fmov	d1, x0
    8498:	fcmp	d0, d1
    849c:	cset	w0, le
    84a0:	and	w0, w0, #0xff
    84a4:	eor	w0, w0, #0x1
    84a8:	and	w0, w0, #0xff
    84ac:	cmp	w0, #0x0
    84b0:	b.eq	84ec <PyNumber_FloorDivide@plt+0x4fec>  // b.none
    84b4:	ldr	d0, [sp, #32]
    84b8:	fcmp	d0, #0.0
    84bc:	b.ne	84d4 <PyNumber_FloorDivide@plt+0x4fd4>  // b.any
    84c0:	bl	3490 <__errno_location@plt>
    84c4:	mov	x1, x0
    84c8:	mov	w0, #0x21                  	// #33
    84cc:	str	w0, [x1]
    84d0:	b	84ec <PyNumber_FloorDivide@plt+0x4fec>
    84d4:	bl	3490 <__errno_location@plt>
    84d8:	mov	x1, x0
    84dc:	mov	w0, #0x22                  	// #34
    84e0:	str	w0, [x1]
    84e4:	b	84ec <PyNumber_FloorDivide@plt+0x4fec>
    84e8:	nop
    84ec:	bl	3490 <__errno_location@plt>
    84f0:	ldr	w0, [x0]
    84f4:	cmp	w0, #0x0
    84f8:	b.eq	8514 <PyNumber_FloorDivide@plt+0x5014>  // b.none
    84fc:	ldr	d0, [sp, #56]
    8500:	bl	5680 <PyNumber_FloorDivide@plt+0x2180>
    8504:	cmp	w0, #0x0
    8508:	b.eq	8514 <PyNumber_FloorDivide@plt+0x5014>  // b.none
    850c:	mov	x0, #0x0                   	// #0
    8510:	b	851c <PyNumber_FloorDivide@plt+0x501c>
    8514:	ldr	d0, [sp, #56]
    8518:	bl	3240 <PyFloat_FromDouble@plt>
    851c:	ldp	x29, x30, [sp], #64
    8520:	ret
    8524:	stp	x29, x30, [sp, #-32]!
    8528:	mov	x29, sp
    852c:	str	x0, [sp, #24]
    8530:	str	d0, [sp, #16]
    8534:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    8538:	ldr	d1, [x0, #2512]
    853c:	ldr	d0, [sp, #16]
    8540:	fmul	d0, d1, d0
    8544:	bl	3240 <PyFloat_FromDouble@plt>
    8548:	ldp	x29, x30, [sp], #32
    854c:	ret
    8550:	stp	x29, x30, [sp, #-32]!
    8554:	mov	x29, sp
    8558:	str	x0, [sp, #24]
    855c:	str	d0, [sp, #16]
    8560:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    8564:	ldr	d1, [x0, #2520]
    8568:	ldr	d0, [sp, #16]
    856c:	fmul	d0, d1, d0
    8570:	bl	3240 <PyFloat_FromDouble@plt>
    8574:	ldp	x29, x30, [sp], #32
    8578:	ret
    857c:	stp	x29, x30, [sp, #-32]!
    8580:	mov	x29, sp
    8584:	str	x0, [sp, #24]
    8588:	str	d0, [sp, #16]
    858c:	ldr	d0, [sp, #16]
    8590:	fabs	d0, d0
    8594:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8598:	fmov	d1, x0
    859c:	fcmp	d0, d1
    85a0:	cset	w0, hi  // hi = pmore
    85a4:	and	w0, w0, #0xff
    85a8:	eor	w0, w0, #0x1
    85ac:	and	w0, w0, #0xff
    85b0:	sxtw	x0, w0
    85b4:	bl	32a0 <PyBool_FromLong@plt>
    85b8:	ldp	x29, x30, [sp], #32
    85bc:	ret
    85c0:	stp	x29, x30, [sp, #-32]!
    85c4:	mov	x29, sp
    85c8:	str	x0, [sp, #24]
    85cc:	str	d0, [sp, #16]
    85d0:	ldr	d1, [sp, #16]
    85d4:	ldr	d0, [sp, #16]
    85d8:	fcmp	d1, d0
    85dc:	cset	w0, vs
    85e0:	and	w0, w0, #0xff
    85e4:	and	x0, x0, #0xff
    85e8:	bl	32a0 <PyBool_FromLong@plt>
    85ec:	ldp	x29, x30, [sp], #32
    85f0:	ret
    85f4:	stp	x29, x30, [sp, #-32]!
    85f8:	mov	x29, sp
    85fc:	str	x0, [sp, #24]
    8600:	str	d0, [sp, #16]
    8604:	ldr	d0, [sp, #16]
    8608:	fabs	d0, d0
    860c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8610:	fmov	d1, x0
    8614:	fcmp	d0, d1
    8618:	b.gt	8624 <PyNumber_FloorDivide@plt+0x5124>
    861c:	mov	x0, #0x0                   	// #0
    8620:	b	8644 <PyNumber_FloorDivide@plt+0x5144>
    8624:	ldr	x0, [sp, #16]
    8628:	lsr	x0, x0, #63
    862c:	and	w0, w0, #0x1
    8630:	cmp	w0, #0x0
    8634:	b.eq	8640 <PyNumber_FloorDivide@plt+0x5140>  // b.none
    8638:	mov	x0, #0xffffffffffffffff    	// #-1
    863c:	b	8644 <PyNumber_FloorDivide@plt+0x5144>
    8640:	mov	x0, #0x1                   	// #1
    8644:	bl	32a0 <PyBool_FromLong@plt>
    8648:	ldp	x29, x30, [sp], #32
    864c:	ret
    8650:	stp	x29, x30, [sp, #-80]!
    8654:	mov	x29, sp
    8658:	str	x0, [sp, #56]
    865c:	str	d0, [sp, #48]
    8660:	str	d1, [sp, #40]
    8664:	str	d2, [sp, #32]
    8668:	str	d3, [sp, #24]
    866c:	str	xzr, [sp, #72]
    8670:	ldr	d0, [sp, #32]
    8674:	fcmpe	d0, #0.0
    8678:	b.mi	8688 <PyNumber_FloorDivide@plt+0x5188>  // b.first
    867c:	ldr	d0, [sp, #24]
    8680:	fcmpe	d0, #0.0
    8684:	b.pl	86ac <PyNumber_FloorDivide@plt+0x51ac>  // b.nfrst
    8688:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    868c:	ldr	x0, [x0, #3872]
    8690:	ldr	x2, [x0]
    8694:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    8698:	add	x1, x0, #0x6b8
    869c:	mov	x0, x2
    86a0:	bl	31b0 <PyErr_SetString@plt>
    86a4:	mov	w0, #0xffffffff            	// #-1
    86a8:	b	878c <PyNumber_FloorDivide@plt+0x528c>
    86ac:	ldr	d1, [sp, #48]
    86b0:	ldr	d0, [sp, #40]
    86b4:	fcmp	d1, d0
    86b8:	b.ne	86c4 <PyNumber_FloorDivide@plt+0x51c4>  // b.any
    86bc:	mov	w0, #0x1                   	// #1
    86c0:	b	878c <PyNumber_FloorDivide@plt+0x528c>
    86c4:	ldr	d0, [sp, #48]
    86c8:	fabs	d0, d0
    86cc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    86d0:	fmov	d1, x0
    86d4:	fcmp	d0, d1
    86d8:	cset	w0, le
    86dc:	and	w0, w0, #0xff
    86e0:	eor	w0, w0, #0x1
    86e4:	and	w0, w0, #0xff
    86e8:	cmp	w0, #0x0
    86ec:	b.ne	871c <PyNumber_FloorDivide@plt+0x521c>  // b.any
    86f0:	ldr	d0, [sp, #40]
    86f4:	fabs	d0, d0
    86f8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    86fc:	fmov	d1, x0
    8700:	fcmp	d0, d1
    8704:	cset	w0, le
    8708:	and	w0, w0, #0xff
    870c:	eor	w0, w0, #0x1
    8710:	and	w0, w0, #0xff
    8714:	cmp	w0, #0x0
    8718:	b.eq	8724 <PyNumber_FloorDivide@plt+0x5224>  // b.none
    871c:	mov	w0, #0x0                   	// #0
    8720:	b	878c <PyNumber_FloorDivide@plt+0x528c>
    8724:	ldr	d1, [sp, #40]
    8728:	ldr	d0, [sp, #48]
    872c:	fsub	d0, d1, d0
    8730:	fabs	d0, d0
    8734:	str	d0, [sp, #72]
    8738:	ldr	d1, [sp, #32]
    873c:	ldr	d0, [sp, #40]
    8740:	fmul	d0, d1, d0
    8744:	fabs	d0, d0
    8748:	ldr	d1, [sp, #72]
    874c:	fcmpe	d1, d0
    8750:	b.ls	8780 <PyNumber_FloorDivide@plt+0x5280>  // b.plast
    8754:	ldr	d1, [sp, #32]
    8758:	ldr	d0, [sp, #48]
    875c:	fmul	d0, d1, d0
    8760:	fabs	d0, d0
    8764:	ldr	d1, [sp, #72]
    8768:	fcmpe	d1, d0
    876c:	b.ls	8780 <PyNumber_FloorDivide@plt+0x5280>  // b.plast
    8770:	ldr	d1, [sp, #72]
    8774:	ldr	d0, [sp, #24]
    8778:	fcmpe	d1, d0
    877c:	b.hi	8788 <PyNumber_FloorDivide@plt+0x5288>  // b.pmore
    8780:	mov	w0, #0x1                   	// #1
    8784:	b	878c <PyNumber_FloorDivide@plt+0x528c>
    8788:	mov	w0, #0x0                   	// #0
    878c:	ldp	x29, x30, [sp], #80
    8790:	ret
    8794:	sub	sp, sp, #0x40
    8798:	str	x0, [sp, #8]
    879c:	str	x1, [sp]
    87a0:	ldr	x1, [sp, #8]
    87a4:	ldr	x0, [sp]
    87a8:	mul	x0, x1, x0
    87ac:	str	x0, [sp, #56]
    87b0:	ldr	d0, [sp, #8]
    87b4:	scvtf	d1, d0
    87b8:	ldr	d0, [sp]
    87bc:	scvtf	d0, d0
    87c0:	fmul	d0, d1, d0
    87c4:	str	d0, [sp, #48]
    87c8:	ldr	d0, [sp, #56]
    87cc:	scvtf	d0, d0
    87d0:	str	d0, [sp, #40]
    87d4:	ldr	d1, [sp, #40]
    87d8:	ldr	d0, [sp, #48]
    87dc:	fcmp	d1, d0
    87e0:	b.ne	87ec <PyNumber_FloorDivide@plt+0x52ec>  // b.any
    87e4:	mov	w0, #0x0                   	// #0
    87e8:	b	8864 <PyNumber_FloorDivide@plt+0x5364>
    87ec:	ldr	d1, [sp, #40]
    87f0:	ldr	d0, [sp, #48]
    87f4:	fsub	d0, d1, d0
    87f8:	str	d0, [sp, #32]
    87fc:	ldr	d0, [sp, #32]
    8800:	fcmpe	d0, #0.0
    8804:	b.lt	8810 <PyNumber_FloorDivide@plt+0x5310>  // b.tstop
    8808:	ldr	d0, [sp, #32]
    880c:	b	8818 <PyNumber_FloorDivide@plt+0x5318>
    8810:	ldr	d0, [sp, #32]
    8814:	fneg	d0, d0
    8818:	str	d0, [sp, #24]
    881c:	ldr	d0, [sp, #48]
    8820:	fcmpe	d0, #0.0
    8824:	b.lt	8830 <PyNumber_FloorDivide@plt+0x5330>  // b.tstop
    8828:	ldr	d0, [sp, #48]
    882c:	b	8838 <PyNumber_FloorDivide@plt+0x5338>
    8830:	ldr	d0, [sp, #48]
    8834:	fneg	d0, d0
    8838:	str	d0, [sp, #16]
    883c:	ldr	d0, [sp, #24]
    8840:	mov	x0, #0x4040000000000000    	// #4629700416936869888
    8844:	fmov	d1, x0
    8848:	fmul	d0, d0, d1
    884c:	ldr	d1, [sp, #16]
    8850:	fcmpe	d1, d0
    8854:	b.lt	8860 <PyNumber_FloorDivide@plt+0x5360>  // b.tstop
    8858:	mov	w0, #0x0                   	// #0
    885c:	b	8864 <PyNumber_FloorDivide@plt+0x5364>
    8860:	mov	w0, #0x1                   	// #1
    8864:	add	sp, sp, #0x40
    8868:	ret
    886c:	stp	x29, x30, [sp, #-128]!
    8870:	mov	x29, sp
    8874:	str	x0, [sp, #40]
    8878:	str	x1, [sp, #32]
    887c:	str	x2, [sp, #24]
    8880:	ldr	x0, [sp, #24]
    8884:	str	x0, [sp, #120]
    8888:	ldr	x0, [sp, #32]
    888c:	bl	3410 <PyObject_GetIter@plt>
    8890:	str	x0, [sp, #96]
    8894:	ldr	x0, [sp, #96]
    8898:	cmp	x0, #0x0
    889c:	b.ne	88a8 <PyNumber_FloorDivide@plt+0x53a8>  // b.any
    88a0:	mov	x0, #0x0                   	// #0
    88a4:	b	8d6c <PyNumber_FloorDivide@plt+0x586c>
    88a8:	ldr	x0, [sp, #120]
    88ac:	cmp	x0, #0x0
    88b0:	b.ne	88e8 <PyNumber_FloorDivide@plt+0x53e8>  // b.any
    88b4:	mov	x0, #0x1                   	// #1
    88b8:	bl	3260 <PyLong_FromLong@plt>
    88bc:	str	x0, [sp, #120]
    88c0:	ldr	x0, [sp, #120]
    88c4:	cmp	x0, #0x0
    88c8:	b.ne	88f0 <PyNumber_FloorDivide@plt+0x53f0>  // b.any
    88cc:	ldr	x2, [sp, #96]
    88d0:	mov	w1, #0xb54                 	// #2900
    88d4:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    88d8:	add	x0, x0, #0x9a8
    88dc:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    88e0:	mov	x0, #0x0                   	// #0
    88e4:	b	8d6c <PyNumber_FloorDivide@plt+0x586c>
    88e8:	ldr	x0, [sp, #120]
    88ec:	bl	36a0 <PyNumber_FloorDivide@plt+0x1a0>
    88f0:	ldr	x0, [sp, #120]
    88f4:	ldr	x1, [x0, #8]
    88f8:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    88fc:	ldr	x0, [x0, #3984]
    8900:	cmp	x1, x0
    8904:	b.ne	8ac8 <PyNumber_FloorDivide@plt+0x55c8>  // b.any
    8908:	add	x0, sp, #0x34
    890c:	mov	x1, x0
    8910:	ldr	x0, [sp, #120]
    8914:	bl	3310 <PyLong_AsLongAndOverflow@plt>
    8918:	str	x0, [sp, #112]
    891c:	ldr	w0, [sp, #52]
    8920:	cmp	w0, #0x0
    8924:	b.ne	8abc <PyNumber_FloorDivide@plt+0x55bc>  // b.any
    8928:	ldr	x2, [sp, #120]
    892c:	mov	w1, #0xb64                 	// #2916
    8930:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8934:	add	x0, x0, #0x9a8
    8938:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    893c:	str	xzr, [sp, #120]
    8940:	b	8abc <PyNumber_FloorDivide@plt+0x55bc>
    8944:	ldr	x0, [sp, #96]
    8948:	bl	3130 <PyIter_Next@plt>
    894c:	str	x0, [sp, #88]
    8950:	ldr	x0, [sp, #88]
    8954:	cmp	x0, #0x0
    8958:	b.ne	8990 <PyNumber_FloorDivide@plt+0x5490>  // b.any
    895c:	ldr	x2, [sp, #96]
    8960:	mov	w1, #0xb6c                 	// #2924
    8964:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8968:	add	x0, x0, #0x9a8
    896c:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8970:	bl	3330 <PyErr_Occurred@plt>
    8974:	cmp	x0, #0x0
    8978:	b.eq	8984 <PyNumber_FloorDivide@plt+0x5484>  // b.none
    897c:	mov	x0, #0x0                   	// #0
    8980:	b	8d6c <PyNumber_FloorDivide@plt+0x586c>
    8984:	ldr	x0, [sp, #112]
    8988:	bl	3260 <PyLong_FromLong@plt>
    898c:	b	8d6c <PyNumber_FloorDivide@plt+0x586c>
    8990:	ldr	x0, [sp, #88]
    8994:	ldr	x1, [x0, #8]
    8998:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    899c:	ldr	x0, [x0, #3984]
    89a0:	cmp	x1, x0
    89a4:	b.ne	8a0c <PyNumber_FloorDivide@plt+0x550c>  // b.any
    89a8:	add	x0, sp, #0x34
    89ac:	mov	x1, x0
    89b0:	ldr	x0, [sp, #88]
    89b4:	bl	3310 <PyLong_AsLongAndOverflow@plt>
    89b8:	str	x0, [sp, #80]
    89bc:	ldr	w0, [sp, #52]
    89c0:	cmp	w0, #0x0
    89c4:	b.ne	8a0c <PyNumber_FloorDivide@plt+0x550c>  // b.any
    89c8:	ldr	x1, [sp, #80]
    89cc:	ldr	x0, [sp, #112]
    89d0:	bl	8794 <PyNumber_FloorDivide@plt+0x5294>
    89d4:	cmp	w0, #0x0
    89d8:	b.ne	8a0c <PyNumber_FloorDivide@plt+0x550c>  // b.any
    89dc:	ldr	x1, [sp, #112]
    89e0:	ldr	x0, [sp, #80]
    89e4:	mul	x0, x1, x0
    89e8:	str	x0, [sp, #72]
    89ec:	ldr	x0, [sp, #72]
    89f0:	str	x0, [sp, #112]
    89f4:	ldr	x2, [sp, #88]
    89f8:	mov	w1, #0xb77                 	// #2935
    89fc:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8a00:	add	x0, x0, #0x9a8
    8a04:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8a08:	b	8abc <PyNumber_FloorDivide@plt+0x55bc>
    8a0c:	ldr	x0, [sp, #112]
    8a10:	bl	3260 <PyLong_FromLong@plt>
    8a14:	str	x0, [sp, #120]
    8a18:	ldr	x0, [sp, #120]
    8a1c:	cmp	x0, #0x0
    8a20:	b.ne	8a54 <PyNumber_FloorDivide@plt+0x5554>  // b.any
    8a24:	ldr	x2, [sp, #88]
    8a28:	mov	w1, #0xb7f                 	// #2943
    8a2c:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8a30:	add	x0, x0, #0x9a8
    8a34:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8a38:	ldr	x2, [sp, #96]
    8a3c:	mov	w1, #0xb80                 	// #2944
    8a40:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8a44:	add	x0, x0, #0x9a8
    8a48:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8a4c:	mov	x0, #0x0                   	// #0
    8a50:	b	8d6c <PyNumber_FloorDivide@plt+0x586c>
    8a54:	ldr	x1, [sp, #88]
    8a58:	ldr	x0, [sp, #120]
    8a5c:	bl	3150 <PyNumber_Multiply@plt>
    8a60:	str	x0, [sp, #64]
    8a64:	ldr	x2, [sp, #120]
    8a68:	mov	w1, #0xb84                 	// #2948
    8a6c:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8a70:	add	x0, x0, #0x9a8
    8a74:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8a78:	ldr	x2, [sp, #88]
    8a7c:	mov	w1, #0xb85                 	// #2949
    8a80:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8a84:	add	x0, x0, #0x9a8
    8a88:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8a8c:	ldr	x0, [sp, #64]
    8a90:	str	x0, [sp, #120]
    8a94:	ldr	x0, [sp, #120]
    8a98:	cmp	x0, #0x0
    8a9c:	b.ne	8abc <PyNumber_FloorDivide@plt+0x55bc>  // b.any
    8aa0:	ldr	x2, [sp, #96]
    8aa4:	mov	w1, #0xb88                 	// #2952
    8aa8:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8aac:	add	x0, x0, #0x9a8
    8ab0:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8ab4:	mov	x0, #0x0                   	// #0
    8ab8:	b	8d6c <PyNumber_FloorDivide@plt+0x586c>
    8abc:	ldr	x0, [sp, #120]
    8ac0:	cmp	x0, #0x0
    8ac4:	b.eq	8944 <PyNumber_FloorDivide@plt+0x5444>  // b.none
    8ac8:	ldr	x0, [sp, #120]
    8acc:	ldr	x1, [x0, #8]
    8ad0:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    8ad4:	ldr	x0, [x0, #3824]
    8ad8:	cmp	x1, x0
    8adc:	b.ne	8cb8 <PyNumber_FloorDivide@plt+0x57b8>  // b.any
    8ae0:	ldr	x0, [sp, #120]
    8ae4:	ldr	d0, [x0, #16]
    8ae8:	str	d0, [sp, #104]
    8aec:	ldr	x2, [sp, #120]
    8af0:	mov	w1, #0xb94                 	// #2964
    8af4:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8af8:	add	x0, x0, #0x9a8
    8afc:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8b00:	str	xzr, [sp, #120]
    8b04:	b	8cac <PyNumber_FloorDivide@plt+0x57ac>
    8b08:	ldr	x0, [sp, #96]
    8b0c:	bl	3130 <PyIter_Next@plt>
    8b10:	str	x0, [sp, #88]
    8b14:	ldr	x0, [sp, #88]
    8b18:	cmp	x0, #0x0
    8b1c:	b.ne	8b54 <PyNumber_FloorDivide@plt+0x5654>  // b.any
    8b20:	ldr	x2, [sp, #96]
    8b24:	mov	w1, #0xb99                 	// #2969
    8b28:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8b2c:	add	x0, x0, #0x9a8
    8b30:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8b34:	bl	3330 <PyErr_Occurred@plt>
    8b38:	cmp	x0, #0x0
    8b3c:	b.eq	8b48 <PyNumber_FloorDivide@plt+0x5648>  // b.none
    8b40:	mov	x0, #0x0                   	// #0
    8b44:	b	8d6c <PyNumber_FloorDivide@plt+0x586c>
    8b48:	ldr	d0, [sp, #104]
    8b4c:	bl	3240 <PyFloat_FromDouble@plt>
    8b50:	b	8d6c <PyNumber_FloorDivide@plt+0x586c>
    8b54:	ldr	x0, [sp, #88]
    8b58:	ldr	x1, [x0, #8]
    8b5c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    8b60:	ldr	x0, [x0, #3824]
    8b64:	cmp	x1, x0
    8b68:	b.ne	8b98 <PyNumber_FloorDivide@plt+0x5698>  // b.any
    8b6c:	ldr	x0, [sp, #88]
    8b70:	ldr	d0, [x0, #16]
    8b74:	ldr	d1, [sp, #104]
    8b78:	fmul	d0, d1, d0
    8b7c:	str	d0, [sp, #104]
    8b80:	ldr	x2, [sp, #88]
    8b84:	mov	w1, #0xba1                 	// #2977
    8b88:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8b8c:	add	x0, x0, #0x9a8
    8b90:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8b94:	b	8cac <PyNumber_FloorDivide@plt+0x57ac>
    8b98:	ldr	x0, [sp, #88]
    8b9c:	ldr	x1, [x0, #8]
    8ba0:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    8ba4:	ldr	x0, [x0, #3984]
    8ba8:	cmp	x1, x0
    8bac:	b.ne	8bfc <PyNumber_FloorDivide@plt+0x56fc>  // b.any
    8bb0:	add	x0, sp, #0x30
    8bb4:	mov	x1, x0
    8bb8:	ldr	x0, [sp, #88]
    8bbc:	bl	3310 <PyLong_AsLongAndOverflow@plt>
    8bc0:	str	x0, [sp, #56]
    8bc4:	ldr	w0, [sp, #48]
    8bc8:	cmp	w0, #0x0
    8bcc:	b.ne	8bfc <PyNumber_FloorDivide@plt+0x56fc>  // b.any
    8bd0:	ldr	d0, [sp, #56]
    8bd4:	scvtf	d0, d0
    8bd8:	ldr	d1, [sp, #104]
    8bdc:	fmul	d0, d1, d0
    8be0:	str	d0, [sp, #104]
    8be4:	ldr	x2, [sp, #88]
    8be8:	mov	w1, #0xbaa                 	// #2986
    8bec:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8bf0:	add	x0, x0, #0x9a8
    8bf4:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8bf8:	b	8cac <PyNumber_FloorDivide@plt+0x57ac>
    8bfc:	ldr	d0, [sp, #104]
    8c00:	bl	3240 <PyFloat_FromDouble@plt>
    8c04:	str	x0, [sp, #120]
    8c08:	ldr	x0, [sp, #120]
    8c0c:	cmp	x0, #0x0
    8c10:	b.ne	8c44 <PyNumber_FloorDivide@plt+0x5744>  // b.any
    8c14:	ldr	x2, [sp, #88]
    8c18:	mov	w1, #0xbb0                 	// #2992
    8c1c:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8c20:	add	x0, x0, #0x9a8
    8c24:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8c28:	ldr	x2, [sp, #96]
    8c2c:	mov	w1, #0xbb1                 	// #2993
    8c30:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8c34:	add	x0, x0, #0x9a8
    8c38:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8c3c:	mov	x0, #0x0                   	// #0
    8c40:	b	8d6c <PyNumber_FloorDivide@plt+0x586c>
    8c44:	ldr	x1, [sp, #88]
    8c48:	ldr	x0, [sp, #120]
    8c4c:	bl	3150 <PyNumber_Multiply@plt>
    8c50:	str	x0, [sp, #64]
    8c54:	ldr	x2, [sp, #120]
    8c58:	mov	w1, #0xbb5                 	// #2997
    8c5c:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8c60:	add	x0, x0, #0x9a8
    8c64:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8c68:	ldr	x2, [sp, #88]
    8c6c:	mov	w1, #0xbb6                 	// #2998
    8c70:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8c74:	add	x0, x0, #0x9a8
    8c78:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8c7c:	ldr	x0, [sp, #64]
    8c80:	str	x0, [sp, #120]
    8c84:	ldr	x0, [sp, #120]
    8c88:	cmp	x0, #0x0
    8c8c:	b.ne	8cac <PyNumber_FloorDivide@plt+0x57ac>  // b.any
    8c90:	ldr	x2, [sp, #96]
    8c94:	mov	w1, #0xbb9                 	// #3001
    8c98:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8c9c:	add	x0, x0, #0x9a8
    8ca0:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8ca4:	mov	x0, #0x0                   	// #0
    8ca8:	b	8d6c <PyNumber_FloorDivide@plt+0x586c>
    8cac:	ldr	x0, [sp, #120]
    8cb0:	cmp	x0, #0x0
    8cb4:	b.eq	8b08 <PyNumber_FloorDivide@plt+0x5608>  // b.none
    8cb8:	ldr	x0, [sp, #96]
    8cbc:	bl	3130 <PyIter_Next@plt>
    8cc0:	str	x0, [sp, #88]
    8cc4:	ldr	x0, [sp, #88]
    8cc8:	cmp	x0, #0x0
    8ccc:	b.ne	8cf8 <PyNumber_FloorDivide@plt+0x57f8>  // b.any
    8cd0:	bl	3330 <PyErr_Occurred@plt>
    8cd4:	cmp	x0, #0x0
    8cd8:	b.eq	8d48 <PyNumber_FloorDivide@plt+0x5848>  // b.none
    8cdc:	ldr	x2, [sp, #120]
    8ce0:	mov	w1, #0xbc6                 	// #3014
    8ce4:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8ce8:	add	x0, x0, #0x9a8
    8cec:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8cf0:	str	xzr, [sp, #120]
    8cf4:	b	8d48 <PyNumber_FloorDivide@plt+0x5848>
    8cf8:	ldr	x1, [sp, #88]
    8cfc:	ldr	x0, [sp, #120]
    8d00:	bl	3150 <PyNumber_Multiply@plt>
    8d04:	str	x0, [sp, #64]
    8d08:	ldr	x2, [sp, #120]
    8d0c:	mov	w1, #0xbcc                 	// #3020
    8d10:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8d14:	add	x0, x0, #0x9a8
    8d18:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8d1c:	ldr	x2, [sp, #88]
    8d20:	mov	w1, #0xbcd                 	// #3021
    8d24:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8d28:	add	x0, x0, #0x9a8
    8d2c:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8d30:	ldr	x0, [sp, #64]
    8d34:	str	x0, [sp, #120]
    8d38:	ldr	x0, [sp, #120]
    8d3c:	cmp	x0, #0x0
    8d40:	b.eq	8d50 <PyNumber_FloorDivide@plt+0x5850>  // b.none
    8d44:	b	8cb8 <PyNumber_FloorDivide@plt+0x57b8>
    8d48:	nop
    8d4c:	b	8d54 <PyNumber_FloorDivide@plt+0x5854>
    8d50:	nop
    8d54:	ldr	x2, [sp, #96]
    8d58:	mov	w1, #0xbd2                 	// #3026
    8d5c:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8d60:	add	x0, x0, #0x9a8
    8d64:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8d68:	ldr	x0, [sp, #120]
    8d6c:	ldp	x29, x30, [sp], #128
    8d70:	ret
    8d74:	stp	x29, x30, [sp, #-128]!
    8d78:	mov	x29, sp
    8d7c:	str	x0, [sp, #40]
    8d80:	str	x1, [sp, #32]
    8d84:	str	x2, [sp, #24]
    8d88:	str	xzr, [sp, #120]
    8d8c:	str	xzr, [sp, #112]
    8d90:	ldr	x1, [sp, #24]
    8d94:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    8d98:	ldr	x0, [x0, #3960]
    8d9c:	cmp	x1, x0
    8da0:	b.ne	8db4 <PyNumber_FloorDivide@plt+0x58b4>  // b.any
    8da4:	ldr	x1, [sp, #32]
    8da8:	ldr	x0, [sp, #40]
    8dac:	bl	7054 <PyNumber_FloorDivide@plt+0x3b54>
    8db0:	b	9140 <PyNumber_FloorDivide@plt+0x5c40>
    8db4:	ldr	x0, [sp, #32]
    8db8:	bl	3480 <PyNumber_Index@plt>
    8dbc:	str	x0, [sp, #32]
    8dc0:	ldr	x0, [sp, #32]
    8dc4:	cmp	x0, #0x0
    8dc8:	b.ne	8dd4 <PyNumber_FloorDivide@plt+0x58d4>  // b.any
    8dcc:	mov	x0, #0x0                   	// #0
    8dd0:	b	9140 <PyNumber_FloorDivide@plt+0x5c40>
    8dd4:	ldr	x0, [sp, #32]
    8dd8:	ldr	x1, [x0, #8]
    8ddc:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    8de0:	ldr	x0, [x0, #3984]
    8de4:	cmp	x1, x0
    8de8:	b.eq	8e28 <PyNumber_FloorDivide@plt+0x5928>  // b.none
    8dec:	ldr	x0, [sp, #32]
    8df0:	str	x0, [sp, #96]
    8df4:	ldr	x0, [sp, #32]
    8df8:	bl	31f0 <_PyLong_Copy@plt>
    8dfc:	str	x0, [sp, #32]
    8e00:	ldr	x2, [sp, #96]
    8e04:	mov	w1, #0xbfa                 	// #3066
    8e08:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8e0c:	add	x0, x0, #0x9a8
    8e10:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8e14:	ldr	x0, [sp, #32]
    8e18:	cmp	x0, #0x0
    8e1c:	b.ne	8e28 <PyNumber_FloorDivide@plt+0x5928>  // b.any
    8e20:	mov	x0, #0x0                   	// #0
    8e24:	b	9140 <PyNumber_FloorDivide@plt+0x5c40>
    8e28:	ldr	x0, [sp, #24]
    8e2c:	bl	3480 <PyNumber_Index@plt>
    8e30:	str	x0, [sp, #24]
    8e34:	ldr	x0, [sp, #24]
    8e38:	cmp	x0, #0x0
    8e3c:	b.ne	8e5c <PyNumber_FloorDivide@plt+0x595c>  // b.any
    8e40:	ldr	x2, [sp, #32]
    8e44:	mov	w1, #0xc01                 	// #3073
    8e48:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8e4c:	add	x0, x0, #0x9a8
    8e50:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8e54:	mov	x0, #0x0                   	// #0
    8e58:	b	9140 <PyNumber_FloorDivide@plt+0x5c40>
    8e5c:	ldr	x0, [sp, #24]
    8e60:	ldr	x1, [x0, #8]
    8e64:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    8e68:	ldr	x0, [x0, #3984]
    8e6c:	cmp	x1, x0
    8e70:	b.eq	8ec4 <PyNumber_FloorDivide@plt+0x59c4>  // b.none
    8e74:	ldr	x0, [sp, #24]
    8e78:	str	x0, [sp, #88]
    8e7c:	ldr	x0, [sp, #24]
    8e80:	bl	31f0 <_PyLong_Copy@plt>
    8e84:	str	x0, [sp, #24]
    8e88:	ldr	x2, [sp, #88]
    8e8c:	mov	w1, #0xc05                 	// #3077
    8e90:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8e94:	add	x0, x0, #0x9a8
    8e98:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8e9c:	ldr	x0, [sp, #24]
    8ea0:	cmp	x0, #0x0
    8ea4:	b.ne	8ec4 <PyNumber_FloorDivide@plt+0x59c4>  // b.any
    8ea8:	ldr	x2, [sp, #32]
    8eac:	mov	w1, #0xc07                 	// #3079
    8eb0:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    8eb4:	add	x0, x0, #0x9a8
    8eb8:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    8ebc:	mov	x0, #0x0                   	// #0
    8ec0:	b	9140 <PyNumber_FloorDivide@plt+0x5c40>
    8ec4:	ldr	x0, [sp, #32]
    8ec8:	ldr	x0, [x0, #16]
    8ecc:	cmp	x0, #0x0
    8ed0:	b.ge	8ef4 <PyNumber_FloorDivide@plt+0x59f4>  // b.tcont
    8ed4:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    8ed8:	ldr	x0, [x0, #3872]
    8edc:	ldr	x2, [x0]
    8ee0:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    8ee4:	add	x1, x0, #0x6d8
    8ee8:	mov	x0, x2
    8eec:	bl	31b0 <PyErr_SetString@plt>
    8ef0:	b	9104 <PyNumber_FloorDivide@plt+0x5c04>
    8ef4:	ldr	x0, [sp, #24]
    8ef8:	ldr	x0, [x0, #16]
    8efc:	cmp	x0, #0x0
    8f00:	b.ge	8f24 <PyNumber_FloorDivide@plt+0x5a24>  // b.tcont
    8f04:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    8f08:	ldr	x0, [x0, #3872]
    8f0c:	ldr	x2, [x0]
    8f10:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    8f14:	add	x1, x0, #0x700
    8f18:	mov	x0, x2
    8f1c:	bl	31b0 <PyErr_SetString@plt>
    8f20:	b	9104 <PyNumber_FloorDivide@plt+0x5c04>
    8f24:	mov	w2, #0x0                   	// #0
    8f28:	ldr	x1, [sp, #24]
    8f2c:	ldr	x0, [sp, #32]
    8f30:	bl	3270 <PyObject_RichCompareBool@plt>
    8f34:	str	w0, [sp, #84]
    8f38:	ldr	w0, [sp, #84]
    8f3c:	cmp	w0, #0x0
    8f40:	b.eq	8f60 <PyNumber_FloorDivide@plt+0x5a60>  // b.none
    8f44:	ldr	w0, [sp, #84]
    8f48:	cmp	w0, #0x0
    8f4c:	b.le	90e8 <PyNumber_FloorDivide@plt+0x5be8>
    8f50:	mov	x0, #0x0                   	// #0
    8f54:	bl	3260 <PyLong_FromLong@plt>
    8f58:	str	x0, [sp, #120]
    8f5c:	b	90b8 <PyNumber_FloorDivide@plt+0x5bb8>
    8f60:	add	x0, sp, #0x34
    8f64:	mov	x1, x0
    8f68:	ldr	x0, [sp, #24]
    8f6c:	bl	3050 <PyLong_AsLongLongAndOverflow@plt>
    8f70:	str	x0, [sp, #72]
    8f74:	ldr	w0, [sp, #52]
    8f78:	cmp	w0, #0x0
    8f7c:	b.le	8fa4 <PyNumber_FloorDivide@plt+0x5aa4>
    8f80:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    8f84:	ldr	x0, [x0, #3936]
    8f88:	ldr	x3, [x0]
    8f8c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    8f90:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    8f94:	add	x1, x0, #0x728
    8f98:	mov	x0, x3
    8f9c:	bl	3460 <PyErr_Format@plt>
    8fa0:	b	9104 <PyNumber_FloorDivide@plt+0x5c04>
    8fa4:	ldr	x0, [sp, #72]
    8fa8:	cmn	x0, #0x1
    8fac:	b.eq	90f0 <PyNumber_FloorDivide@plt+0x5bf0>  // b.none
    8fb0:	ldr	x0, [sp, #72]
    8fb4:	cmp	x0, #0x0
    8fb8:	b.ne	8fcc <PyNumber_FloorDivide@plt+0x5acc>  // b.any
    8fbc:	mov	x0, #0x1                   	// #1
    8fc0:	bl	3260 <PyLong_FromLong@plt>
    8fc4:	str	x0, [sp, #120]
    8fc8:	b	90b8 <PyNumber_FloorDivide@plt+0x5bb8>
    8fcc:	ldr	x0, [sp, #32]
    8fd0:	str	x0, [sp, #120]
    8fd4:	ldr	x0, [sp, #120]
    8fd8:	bl	36a0 <PyNumber_FloorDivide@plt+0x1a0>
    8fdc:	ldr	x0, [sp, #72]
    8fe0:	cmp	x0, #0x1
    8fe4:	b.eq	90b4 <PyNumber_FloorDivide@plt+0x5bb4>  // b.none
    8fe8:	ldr	x0, [sp, #32]
    8fec:	str	x0, [sp, #112]
    8ff0:	ldr	x0, [sp, #112]
    8ff4:	bl	36a0 <PyNumber_FloorDivide@plt+0x1a0>
    8ff8:	mov	x0, #0x1                   	// #1
    8ffc:	str	x0, [sp, #104]
    9000:	b	908c <PyNumber_FloorDivide@plt+0x5b8c>
    9004:	ldr	x0, [sp, #112]
    9008:	str	x0, [sp, #64]
    900c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    9010:	ldr	x0, [x0, #4008]
    9014:	ldr	x0, [x0]
    9018:	mov	x1, x0
    901c:	ldr	x0, [sp, #112]
    9020:	bl	34c0 <PyNumber_Subtract@plt>
    9024:	str	x0, [sp, #112]
    9028:	ldr	x2, [sp, #64]
    902c:	mov	w1, #0xc3a                 	// #3130
    9030:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    9034:	add	x0, x0, #0x9a8
    9038:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    903c:	ldr	x0, [sp, #112]
    9040:	cmp	x0, #0x0
    9044:	b.eq	90f8 <PyNumber_FloorDivide@plt+0x5bf8>  // b.none
    9048:	ldr	x0, [sp, #120]
    904c:	str	x0, [sp, #56]
    9050:	ldr	x1, [sp, #112]
    9054:	ldr	x0, [sp, #120]
    9058:	bl	3150 <PyNumber_Multiply@plt>
    905c:	str	x0, [sp, #120]
    9060:	ldr	x2, [sp, #56]
    9064:	mov	w1, #0xc3e                 	// #3134
    9068:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    906c:	add	x0, x0, #0x9a8
    9070:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    9074:	ldr	x0, [sp, #120]
    9078:	cmp	x0, #0x0
    907c:	b.eq	9100 <PyNumber_FloorDivide@plt+0x5c00>  // b.none
    9080:	ldr	x0, [sp, #104]
    9084:	add	x0, x0, #0x1
    9088:	str	x0, [sp, #104]
    908c:	ldr	x1, [sp, #104]
    9090:	ldr	x0, [sp, #72]
    9094:	cmp	x1, x0
    9098:	b.lt	9004 <PyNumber_FloorDivide@plt+0x5b04>  // b.tstop
    909c:	ldr	x2, [sp, #112]
    90a0:	mov	w1, #0xc43                 	// #3139
    90a4:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    90a8:	add	x0, x0, #0x9a8
    90ac:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    90b0:	b	90b8 <PyNumber_FloorDivide@plt+0x5bb8>
    90b4:	nop
    90b8:	ldr	x2, [sp, #32]
    90bc:	mov	w1, #0xc46                 	// #3142
    90c0:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    90c4:	add	x0, x0, #0x9a8
    90c8:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    90cc:	ldr	x2, [sp, #24]
    90d0:	mov	w1, #0xc47                 	// #3143
    90d4:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    90d8:	add	x0, x0, #0x9a8
    90dc:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    90e0:	ldr	x0, [sp, #120]
    90e4:	b	9140 <PyNumber_FloorDivide@plt+0x5c40>
    90e8:	nop
    90ec:	b	9104 <PyNumber_FloorDivide@plt+0x5c04>
    90f0:	nop
    90f4:	b	9104 <PyNumber_FloorDivide@plt+0x5c04>
    90f8:	nop
    90fc:	b	9104 <PyNumber_FloorDivide@plt+0x5c04>
    9100:	nop
    9104:	ldr	x0, [sp, #112]
    9108:	bl	3714 <PyNumber_FloorDivide@plt+0x214>
    910c:	ldr	x0, [sp, #120]
    9110:	bl	3714 <PyNumber_FloorDivide@plt+0x214>
    9114:	ldr	x2, [sp, #32]
    9118:	mov	w1, #0xc4d                 	// #3149
    911c:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    9120:	add	x0, x0, #0x9a8
    9124:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    9128:	ldr	x2, [sp, #24]
    912c:	mov	w1, #0xc4e                 	// #3150
    9130:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    9134:	add	x0, x0, #0x9a8
    9138:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    913c:	mov	x0, #0x0                   	// #0
    9140:	ldp	x29, x30, [sp], #128
    9144:	ret
    9148:	stp	x29, x30, [sp, #-160]!
    914c:	mov	x29, sp
    9150:	str	x0, [sp, #40]
    9154:	str	x1, [sp, #32]
    9158:	str	x2, [sp, #24]
    915c:	str	xzr, [sp, #152]
    9160:	str	xzr, [sp, #144]
    9164:	ldr	x0, [sp, #32]
    9168:	bl	3480 <PyNumber_Index@plt>
    916c:	str	x0, [sp, #32]
    9170:	ldr	x0, [sp, #32]
    9174:	cmp	x0, #0x0
    9178:	b.ne	9184 <PyNumber_FloorDivide@plt+0x5c84>  // b.any
    917c:	mov	x0, #0x0                   	// #0
    9180:	b	95ec <PyNumber_FloorDivide@plt+0x60ec>
    9184:	ldr	x0, [sp, #32]
    9188:	ldr	x1, [x0, #8]
    918c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    9190:	ldr	x0, [x0, #3984]
    9194:	cmp	x1, x0
    9198:	b.eq	91d8 <PyNumber_FloorDivide@plt+0x5cd8>  // b.none
    919c:	ldr	x0, [sp, #32]
    91a0:	str	x0, [sp, #128]
    91a4:	ldr	x0, [sp, #32]
    91a8:	bl	31f0 <_PyLong_Copy@plt>
    91ac:	str	x0, [sp, #32]
    91b0:	ldr	x2, [sp, #128]
    91b4:	mov	w1, #0xc75                 	// #3189
    91b8:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    91bc:	add	x0, x0, #0x9a8
    91c0:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    91c4:	ldr	x0, [sp, #32]
    91c8:	cmp	x0, #0x0
    91cc:	b.ne	91d8 <PyNumber_FloorDivide@plt+0x5cd8>  // b.any
    91d0:	mov	x0, #0x0                   	// #0
    91d4:	b	95ec <PyNumber_FloorDivide@plt+0x60ec>
    91d8:	ldr	x0, [sp, #24]
    91dc:	bl	3480 <PyNumber_Index@plt>
    91e0:	str	x0, [sp, #24]
    91e4:	ldr	x0, [sp, #24]
    91e8:	cmp	x0, #0x0
    91ec:	b.ne	920c <PyNumber_FloorDivide@plt+0x5d0c>  // b.any
    91f0:	ldr	x2, [sp, #32]
    91f4:	mov	w1, #0xc7c                 	// #3196
    91f8:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    91fc:	add	x0, x0, #0x9a8
    9200:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    9204:	mov	x0, #0x0                   	// #0
    9208:	b	95ec <PyNumber_FloorDivide@plt+0x60ec>
    920c:	ldr	x0, [sp, #24]
    9210:	ldr	x1, [x0, #8]
    9214:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    9218:	ldr	x0, [x0, #3984]
    921c:	cmp	x1, x0
    9220:	b.eq	9274 <PyNumber_FloorDivide@plt+0x5d74>  // b.none
    9224:	ldr	x0, [sp, #24]
    9228:	str	x0, [sp, #120]
    922c:	ldr	x0, [sp, #24]
    9230:	bl	31f0 <_PyLong_Copy@plt>
    9234:	str	x0, [sp, #24]
    9238:	ldr	x2, [sp, #120]
    923c:	mov	w1, #0xc80                 	// #3200
    9240:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    9244:	add	x0, x0, #0x9a8
    9248:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    924c:	ldr	x0, [sp, #24]
    9250:	cmp	x0, #0x0
    9254:	b.ne	9274 <PyNumber_FloorDivide@plt+0x5d74>  // b.any
    9258:	ldr	x2, [sp, #32]
    925c:	mov	w1, #0xc82                 	// #3202
    9260:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    9264:	add	x0, x0, #0x9a8
    9268:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    926c:	mov	x0, #0x0                   	// #0
    9270:	b	95ec <PyNumber_FloorDivide@plt+0x60ec>
    9274:	ldr	x0, [sp, #32]
    9278:	ldr	x0, [x0, #16]
    927c:	cmp	x0, #0x0
    9280:	b.ge	92a4 <PyNumber_FloorDivide@plt+0x5da4>  // b.tcont
    9284:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    9288:	ldr	x0, [x0, #3872]
    928c:	ldr	x2, [x0]
    9290:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    9294:	add	x1, x0, #0x6d8
    9298:	mov	x0, x2
    929c:	bl	31b0 <PyErr_SetString@plt>
    92a0:	b	95b0 <PyNumber_FloorDivide@plt+0x60b0>
    92a4:	ldr	x0, [sp, #24]
    92a8:	ldr	x0, [x0, #16]
    92ac:	cmp	x0, #0x0
    92b0:	b.ge	92d4 <PyNumber_FloorDivide@plt+0x5dd4>  // b.tcont
    92b4:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    92b8:	ldr	x0, [x0, #3872]
    92bc:	ldr	x2, [x0]
    92c0:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    92c4:	add	x1, x0, #0x700
    92c8:	mov	x0, x2
    92cc:	bl	31b0 <PyErr_SetString@plt>
    92d0:	b	95b0 <PyNumber_FloorDivide@plt+0x60b0>
    92d4:	ldr	x1, [sp, #24]
    92d8:	ldr	x0, [sp, #32]
    92dc:	bl	34c0 <PyNumber_Subtract@plt>
    92e0:	str	x0, [sp, #112]
    92e4:	ldr	x0, [sp, #112]
    92e8:	cmp	x0, #0x0
    92ec:	b.eq	957c <PyNumber_FloorDivide@plt+0x607c>  // b.none
    92f0:	ldr	x0, [sp, #112]
    92f4:	ldr	x0, [x0, #16]
    92f8:	cmp	x0, #0x0
    92fc:	b.ge	9324 <PyNumber_FloorDivide@plt+0x5e24>  // b.tcont
    9300:	ldr	x2, [sp, #112]
    9304:	mov	w1, #0xc98                 	// #3224
    9308:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    930c:	add	x0, x0, #0x9a8
    9310:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    9314:	mov	x0, #0x0                   	// #0
    9318:	bl	3260 <PyLong_FromLong@plt>
    931c:	str	x0, [sp, #152]
    9320:	b	954c <PyNumber_FloorDivide@plt+0x604c>
    9324:	mov	w2, #0x0                   	// #0
    9328:	ldr	x1, [sp, #24]
    932c:	ldr	x0, [sp, #112]
    9330:	bl	3270 <PyObject_RichCompareBool@plt>
    9334:	str	w0, [sp, #108]
    9338:	ldr	w0, [sp, #108]
    933c:	cmp	w0, #0x0
    9340:	b.le	936c <PyNumber_FloorDivide@plt+0x5e6c>
    9344:	ldr	x0, [sp, #24]
    9348:	str	x0, [sp, #96]
    934c:	ldr	x0, [sp, #112]
    9350:	str	x0, [sp, #24]
    9354:	ldr	x2, [sp, #96]
    9358:	mov	w1, #0xc9e                 	// #3230
    935c:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    9360:	add	x0, x0, #0x9a8
    9364:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    9368:	b	938c <PyNumber_FloorDivide@plt+0x5e8c>
    936c:	ldr	x2, [sp, #112]
    9370:	mov	w1, #0xca1                 	// #3233
    9374:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    9378:	add	x0, x0, #0x9a8
    937c:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    9380:	ldr	w0, [sp, #108]
    9384:	cmp	w0, #0x0
    9388:	b.lt	9584 <PyNumber_FloorDivide@plt+0x6084>  // b.tstop
    938c:	add	x0, sp, #0x3c
    9390:	mov	x1, x0
    9394:	ldr	x0, [sp, #24]
    9398:	bl	3050 <PyLong_AsLongLongAndOverflow@plt>
    939c:	str	x0, [sp, #88]
    93a0:	ldr	w0, [sp, #60]
    93a4:	cmp	w0, #0x0
    93a8:	b.le	93d0 <PyNumber_FloorDivide@plt+0x5ed0>
    93ac:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    93b0:	ldr	x0, [x0, #3936]
    93b4:	ldr	x3, [x0]
    93b8:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    93bc:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    93c0:	add	x1, x0, #0x740
    93c4:	mov	x0, x3
    93c8:	bl	3460 <PyErr_Format@plt>
    93cc:	b	95b0 <PyNumber_FloorDivide@plt+0x60b0>
    93d0:	ldr	x0, [sp, #88]
    93d4:	cmn	x0, #0x1
    93d8:	b.eq	958c <PyNumber_FloorDivide@plt+0x608c>  // b.none
    93dc:	ldr	x0, [sp, #88]
    93e0:	cmp	x0, #0x0
    93e4:	b.ne	93f8 <PyNumber_FloorDivide@plt+0x5ef8>  // b.any
    93e8:	mov	x0, #0x1                   	// #1
    93ec:	bl	3260 <PyLong_FromLong@plt>
    93f0:	str	x0, [sp, #152]
    93f4:	b	954c <PyNumber_FloorDivide@plt+0x604c>
    93f8:	ldr	x0, [sp, #32]
    93fc:	str	x0, [sp, #152]
    9400:	ldr	x0, [sp, #152]
    9404:	bl	36a0 <PyNumber_FloorDivide@plt+0x1a0>
    9408:	ldr	x0, [sp, #88]
    940c:	cmp	x0, #0x1
    9410:	b.eq	9548 <PyNumber_FloorDivide@plt+0x6048>  // b.none
    9414:	ldr	x0, [sp, #32]
    9418:	str	x0, [sp, #144]
    941c:	ldr	x0, [sp, #144]
    9420:	bl	36a0 <PyNumber_FloorDivide@plt+0x1a0>
    9424:	mov	x0, #0x1                   	// #1
    9428:	str	x0, [sp, #136]
    942c:	b	9520 <PyNumber_FloorDivide@plt+0x6020>
    9430:	ldr	x0, [sp, #144]
    9434:	str	x0, [sp, #80]
    9438:	adrp	x0, 1c000 <_Py_log1p@@Base+0x12938>
    943c:	ldr	x0, [x0, #4008]
    9440:	ldr	x0, [x0]
    9444:	mov	x1, x0
    9448:	ldr	x0, [sp, #144]
    944c:	bl	34c0 <PyNumber_Subtract@plt>
    9450:	str	x0, [sp, #144]
    9454:	ldr	x2, [sp, #80]
    9458:	mov	w1, #0xcc1                 	// #3265
    945c:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    9460:	add	x0, x0, #0x9a8
    9464:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    9468:	ldr	x0, [sp, #144]
    946c:	cmp	x0, #0x0
    9470:	b.eq	9594 <PyNumber_FloorDivide@plt+0x6094>  // b.none
    9474:	ldr	x0, [sp, #152]
    9478:	str	x0, [sp, #72]
    947c:	ldr	x1, [sp, #144]
    9480:	ldr	x0, [sp, #152]
    9484:	bl	3150 <PyNumber_Multiply@plt>
    9488:	str	x0, [sp, #152]
    948c:	ldr	x2, [sp, #72]
    9490:	mov	w1, #0xcc5                 	// #3269
    9494:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    9498:	add	x0, x0, #0x9a8
    949c:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    94a0:	ldr	x0, [sp, #152]
    94a4:	cmp	x0, #0x0
    94a8:	b.eq	959c <PyNumber_FloorDivide@plt+0x609c>  // b.none
    94ac:	ldr	x0, [sp, #136]
    94b0:	add	x0, x0, #0x1
    94b4:	bl	30c0 <PyLong_FromUnsignedLongLong@plt>
    94b8:	str	x0, [sp, #112]
    94bc:	ldr	x0, [sp, #112]
    94c0:	cmp	x0, #0x0
    94c4:	b.eq	95a4 <PyNumber_FloorDivide@plt+0x60a4>  // b.none
    94c8:	ldr	x0, [sp, #152]
    94cc:	str	x0, [sp, #64]
    94d0:	ldr	x1, [sp, #112]
    94d4:	ldr	x0, [sp, #152]
    94d8:	bl	3500 <PyNumber_FloorDivide@plt>
    94dc:	str	x0, [sp, #152]
    94e0:	ldr	x2, [sp, #64]
    94e4:	mov	w1, #0xcce                 	// #3278
    94e8:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    94ec:	add	x0, x0, #0x9a8
    94f0:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    94f4:	ldr	x2, [sp, #112]
    94f8:	mov	w1, #0xccf                 	// #3279
    94fc:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    9500:	add	x0, x0, #0x9a8
    9504:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    9508:	ldr	x0, [sp, #152]
    950c:	cmp	x0, #0x0
    9510:	b.eq	95ac <PyNumber_FloorDivide@plt+0x60ac>  // b.none
    9514:	ldr	x0, [sp, #136]
    9518:	add	x0, x0, #0x1
    951c:	str	x0, [sp, #136]
    9520:	ldr	x1, [sp, #136]
    9524:	ldr	x0, [sp, #88]
    9528:	cmp	x1, x0
    952c:	b.lt	9430 <PyNumber_FloorDivide@plt+0x5f30>  // b.tstop
    9530:	ldr	x2, [sp, #144]
    9534:	mov	w1, #0xcd4                 	// #3284
    9538:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    953c:	add	x0, x0, #0x9a8
    9540:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    9544:	b	954c <PyNumber_FloorDivide@plt+0x604c>
    9548:	nop
    954c:	ldr	x2, [sp, #32]
    9550:	mov	w1, #0xcd7                 	// #3287
    9554:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    9558:	add	x0, x0, #0x9a8
    955c:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    9560:	ldr	x2, [sp, #24]
    9564:	mov	w1, #0xcd8                 	// #3288
    9568:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    956c:	add	x0, x0, #0x9a8
    9570:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    9574:	ldr	x0, [sp, #152]
    9578:	b	95ec <PyNumber_FloorDivide@plt+0x60ec>
    957c:	nop
    9580:	b	95b0 <PyNumber_FloorDivide@plt+0x60b0>
    9584:	nop
    9588:	b	95b0 <PyNumber_FloorDivide@plt+0x60b0>
    958c:	nop
    9590:	b	95b0 <PyNumber_FloorDivide@plt+0x60b0>
    9594:	nop
    9598:	b	95b0 <PyNumber_FloorDivide@plt+0x60b0>
    959c:	nop
    95a0:	b	95b0 <PyNumber_FloorDivide@plt+0x60b0>
    95a4:	nop
    95a8:	b	95b0 <PyNumber_FloorDivide@plt+0x60b0>
    95ac:	nop
    95b0:	ldr	x0, [sp, #144]
    95b4:	bl	3714 <PyNumber_FloorDivide@plt+0x214>
    95b8:	ldr	x0, [sp, #152]
    95bc:	bl	3714 <PyNumber_FloorDivide@plt+0x214>
    95c0:	ldr	x2, [sp, #32]
    95c4:	mov	w1, #0xcde                 	// #3294
    95c8:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    95cc:	add	x0, x0, #0x9a8
    95d0:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    95d4:	ldr	x2, [sp, #24]
    95d8:	mov	w1, #0xcdf                 	// #3295
    95dc:	adrp	x0, a000 <_Py_log1p@@Base+0x938>
    95e0:	add	x0, x0, #0x9a8
    95e4:	bl	36c8 <PyNumber_FloorDivide@plt+0x1c8>
    95e8:	mov	x0, #0x0                   	// #0
    95ec:	ldp	x29, x30, [sp], #160
    95f0:	ret

00000000000095f4 <PyInit_math@@Base>:
    95f4:	stp	x29, x30, [sp, #-32]!
    95f8:	mov	x29, sp
    95fc:	mov	w1, #0x3f5                 	// #1013
    9600:	adrp	x0, 1d000 <_Py_log1p@@Base+0x13938>
    9604:	add	x0, x0, #0x8d8
    9608:	bl	3340 <PyModule_Create2@plt>
    960c:	str	x0, [sp, #24]
    9610:	ldr	x0, [sp, #24]
    9614:	cmp	x0, #0x0
    9618:	b.eq	96b8 <PyInit_math@@Base+0xc4>  // b.none
    961c:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    9620:	ldr	d0, [x0, #2448]
    9624:	bl	3240 <PyFloat_FromDouble@plt>
    9628:	mov	x2, x0
    962c:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    9630:	add	x1, x0, #0x900
    9634:	ldr	x0, [sp, #24]
    9638:	bl	3420 <PyModule_AddObject@plt>
    963c:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    9640:	ldr	d0, [x0, #2528]
    9644:	bl	3240 <PyFloat_FromDouble@plt>
    9648:	mov	x2, x0
    964c:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    9650:	add	x1, x0, #0x908
    9654:	ldr	x0, [sp, #24]
    9658:	bl	3420 <PyModule_AddObject@plt>
    965c:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    9660:	ldr	d0, [x0, #2536]
    9664:	bl	3240 <PyFloat_FromDouble@plt>
    9668:	mov	x2, x0
    966c:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    9670:	add	x1, x0, #0x910
    9674:	ldr	x0, [sp, #24]
    9678:	bl	3420 <PyModule_AddObject@plt>
    967c:	bl	49c8 <PyNumber_FloorDivide@plt+0x14c8>
    9680:	bl	3240 <PyFloat_FromDouble@plt>
    9684:	mov	x2, x0
    9688:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    968c:	add	x1, x0, #0x918
    9690:	ldr	x0, [sp, #24]
    9694:	bl	3420 <PyModule_AddObject@plt>
    9698:	bl	49e0 <PyNumber_FloorDivide@plt+0x14e0>
    969c:	bl	3240 <PyFloat_FromDouble@plt>
    96a0:	mov	x2, x0
    96a4:	adrp	x0, b000 <_Py_log1p@@Base+0x1938>
    96a8:	add	x1, x0, #0x920
    96ac:	ldr	x0, [sp, #24]
    96b0:	bl	3420 <PyModule_AddObject@plt>
    96b4:	b	96bc <PyInit_math@@Base+0xc8>
    96b8:	nop
    96bc:	ldr	x0, [sp, #24]
    96c0:	ldp	x29, x30, [sp], #32
    96c4:	ret

00000000000096c8 <_Py_log1p@@Base>:
    96c8:	stp	x29, x30, [sp, #-32]!
    96cc:	mov	x29, sp
    96d0:	str	d0, [sp, #24]
    96d4:	ldr	d0, [sp, #24]
    96d8:	fcmp	d0, #0.0
    96dc:	b.ne	96e8 <_Py_log1p@@Base+0x20>  // b.any
    96e0:	ldr	d0, [sp, #24]
    96e4:	b	96f0 <_Py_log1p@@Base+0x28>
    96e8:	ldr	d0, [sp, #24]
    96ec:	bl	32d0 <log1p@plt>
    96f0:	ldp	x29, x30, [sp], #32
    96f4:	ret

Disassembly of section .fini:

00000000000096f8 <.fini>:
    96f8:	stp	x29, x30, [sp, #-16]!
    96fc:	mov	x29, sp
    9700:	ldp	x29, x30, [sp], #16
    9704:	ret
