
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_json.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001d58 <.init>:
    1d58:	stp	x29, x30, [sp, #-16]!
    1d5c:	mov	x29, sp
    1d60:	bl	20e0 <PySequence_Fast@plt+0x10>
    1d64:	ldp	x29, x30, [sp], #16
    1d68:	ret

Disassembly of section .plt:

0000000000001d70 <PyMapping_Items@plt-0x20>:
    1d70:	stp	x16, x30, [sp, #-16]!
    1d74:	adrp	x16, 18000 <PyInit__json@@Base+0x10a48>
    1d78:	ldr	x17, [x16, #4088]
    1d7c:	add	x16, x16, #0xff8
    1d80:	br	x17
    1d84:	nop
    1d88:	nop
    1d8c:	nop

0000000000001d90 <PyMapping_Items@plt>:
    1d90:	adrp	x16, 19000 <PyMapping_Items>
    1d94:	ldr	x17, [x16]
    1d98:	add	x16, x16, #0x0
    1d9c:	br	x17

0000000000001da0 <PyList_New@plt>:
    1da0:	adrp	x16, 19000 <PyMapping_Items>
    1da4:	ldr	x17, [x16, #8]
    1da8:	add	x16, x16, #0x8
    1dac:	br	x17

0000000000001db0 <_PyUnicode_Ready@plt>:
    1db0:	adrp	x16, 19000 <PyMapping_Items>
    1db4:	ldr	x17, [x16, #16]
    1db8:	add	x16, x16, #0x10
    1dbc:	br	x17

0000000000001dc0 <PyArg_ParseTupleAndKeywords@plt>:
    1dc0:	adrp	x16, 19000 <PyMapping_Items>
    1dc4:	ldr	x17, [x16, #24]
    1dc8:	add	x16, x16, #0x18
    1dcc:	br	x17

0000000000001dd0 <PyObject_GetAttrString@plt>:
    1dd0:	adrp	x16, 19000 <PyMapping_Items>
    1dd4:	ldr	x17, [x16, #32]
    1dd8:	add	x16, x16, #0x20
    1ddc:	br	x17

0000000000001de0 <__cxa_finalize@plt>:
    1de0:	adrp	x16, 19000 <PyMapping_Items>
    1de4:	ldr	x17, [x16, #40]
    1de8:	add	x16, x16, #0x28
    1dec:	br	x17

0000000000001df0 <_PyAccu_Init@plt>:
    1df0:	adrp	x16, 19000 <PyMapping_Items>
    1df4:	ldr	x17, [x16, #48]
    1df8:	add	x16, x16, #0x30
    1dfc:	br	x17

0000000000001e00 <PyUnicode_Join@plt>:
    1e00:	adrp	x16, 19000 <PyMapping_Items>
    1e04:	ldr	x17, [x16, #56]
    1e08:	add	x16, x16, #0x38
    1e0c:	br	x17

0000000000001e10 <PyDict_Contains@plt>:
    1e10:	adrp	x16, 19000 <PyMapping_Items>
    1e14:	ldr	x17, [x16, #64]
    1e18:	add	x16, x16, #0x40
    1e1c:	br	x17

0000000000001e20 <PyBytes_FromStringAndSize@plt>:
    1e20:	adrp	x16, 19000 <PyMapping_Items>
    1e24:	ldr	x17, [x16, #72]
    1e28:	add	x16, x16, #0x48
    1e2c:	br	x17

0000000000001e30 <_Py_Dealloc@plt>:
    1e30:	adrp	x16, 19000 <PyMapping_Items>
    1e34:	ldr	x17, [x16, #80]
    1e38:	add	x16, x16, #0x50
    1e3c:	br	x17

0000000000001e40 <PyErr_SetObject@plt>:
    1e40:	adrp	x16, 19000 <PyMapping_Items>
    1e44:	ldr	x17, [x16, #88]
    1e48:	add	x16, x16, #0x58
    1e4c:	br	x17

0000000000001e50 <PyIter_Next@plt>:
    1e50:	adrp	x16, 19000 <PyMapping_Items>
    1e54:	ldr	x17, [x16, #96]
    1e58:	add	x16, x16, #0x60
    1e5c:	br	x17

0000000000001e60 <PyErr_SetString@plt>:
    1e60:	adrp	x16, 19000 <PyMapping_Items>
    1e64:	ldr	x17, [x16, #104]
    1e68:	add	x16, x16, #0x68
    1e6c:	br	x17

0000000000001e70 <_PyAccu_Accumulate@plt>:
    1e70:	adrp	x16, 19000 <PyMapping_Items>
    1e74:	ldr	x17, [x16, #112]
    1e78:	add	x16, x16, #0x70
    1e7c:	br	x17

0000000000001e80 <PyLong_FromSsize_t@plt>:
    1e80:	adrp	x16, 19000 <PyMapping_Items>
    1e84:	ldr	x17, [x16, #120]
    1e88:	add	x16, x16, #0x78
    1e8c:	br	x17

0000000000001e90 <PyType_Ready@plt>:
    1e90:	adrp	x16, 19000 <PyMapping_Items>
    1e94:	ldr	x17, [x16, #128]
    1e98:	add	x16, x16, #0x80
    1e9c:	br	x17

0000000000001ea0 <PyLong_FromVoidPtr@plt>:
    1ea0:	adrp	x16, 19000 <PyMapping_Items>
    1ea4:	ldr	x17, [x16, #136]
    1ea8:	add	x16, x16, #0x88
    1eac:	br	x17

0000000000001eb0 <PyList_Append@plt>:
    1eb0:	adrp	x16, 19000 <PyMapping_Items>
    1eb4:	ldr	x17, [x16, #144]
    1eb8:	add	x16, x16, #0x90
    1ebc:	br	x17

0000000000001ec0 <_Py_CheckRecursiveCall@plt>:
    1ec0:	adrp	x16, 19000 <PyMapping_Items>
    1ec4:	ldr	x17, [x16, #152]
    1ec8:	add	x16, x16, #0x98
    1ecc:	br	x17

0000000000001ed0 <PyDict_Clear@plt>:
    1ed0:	adrp	x16, 19000 <PyMapping_Items>
    1ed4:	ldr	x17, [x16, #160]
    1ed8:	add	x16, x16, #0xa0
    1edc:	br	x17

0000000000001ee0 <_PyAccu_Destroy@plt>:
    1ee0:	adrp	x16, 19000 <PyMapping_Items>
    1ee4:	ldr	x17, [x16, #168]
    1ee8:	add	x16, x16, #0xa8
    1eec:	br	x17

0000000000001ef0 <__gmon_start__@plt>:
    1ef0:	adrp	x16, 19000 <PyMapping_Items>
    1ef4:	ldr	x17, [x16, #176]
    1ef8:	add	x16, x16, #0xb0
    1efc:	br	x17

0000000000001f00 <PyObject_CallFunction@plt>:
    1f00:	adrp	x16, 19000 <PyMapping_Items>
    1f04:	ldr	x17, [x16, #184]
    1f08:	add	x16, x16, #0xb8
    1f0c:	br	x17

0000000000001f10 <PyTuple_New@plt>:
    1f10:	adrp	x16, 19000 <PyMapping_Items>
    1f14:	ldr	x17, [x16, #192]
    1f18:	add	x16, x16, #0xc0
    1f1c:	br	x17

0000000000001f20 <PyThreadState_Get@plt>:
    1f20:	adrp	x16, 19000 <PyMapping_Items>
    1f24:	ldr	x17, [x16, #200]
    1f28:	add	x16, x16, #0xc8
    1f2c:	br	x17

0000000000001f30 <PyDict_DelItem@plt>:
    1f30:	adrp	x16, 19000 <PyMapping_Items>
    1f34:	ldr	x17, [x16, #208]
    1f38:	add	x16, x16, #0xd0
    1f3c:	br	x17

0000000000001f40 <PyErr_Occurred@plt>:
    1f40:	adrp	x16, 19000 <PyMapping_Items>
    1f44:	ldr	x17, [x16, #216]
    1f48:	add	x16, x16, #0xd8
    1f4c:	br	x17

0000000000001f50 <PyModule_Create2@plt>:
    1f50:	adrp	x16, 19000 <PyMapping_Items>
    1f54:	ldr	x17, [x16, #224]
    1f58:	add	x16, x16, #0xe0
    1f5c:	br	x17

0000000000001f60 <PyImport_ImportModule@plt>:
    1f60:	adrp	x16, 19000 <PyMapping_Items>
    1f64:	ldr	x17, [x16, #232]
    1f68:	add	x16, x16, #0xe8
    1f6c:	br	x17

0000000000001f70 <PyObject_CallFunctionObjArgs@plt>:
    1f70:	adrp	x16, 19000 <PyMapping_Items>
    1f74:	ldr	x17, [x16, #240]
    1f78:	add	x16, x16, #0xf0
    1f7c:	br	x17

0000000000001f80 <PyList_Sort@plt>:
    1f80:	adrp	x16, 19000 <PyMapping_Items>
    1f84:	ldr	x17, [x16, #248]
    1f88:	add	x16, x16, #0xf8
    1f8c:	br	x17

0000000000001f90 <PyObject_IsTrue@plt>:
    1f90:	adrp	x16, 19000 <PyMapping_Items>
    1f94:	ldr	x17, [x16, #256]
    1f98:	add	x16, x16, #0x100
    1f9c:	br	x17

0000000000001fa0 <PyArg_ParseTuple@plt>:
    1fa0:	adrp	x16, 19000 <PyMapping_Items>
    1fa4:	ldr	x17, [x16, #264]
    1fa8:	add	x16, x16, #0x108
    1fac:	br	x17

0000000000001fb0 <PyUnicode_FromKindAndData@plt>:
    1fb0:	adrp	x16, 19000 <PyMapping_Items>
    1fb4:	ldr	x17, [x16, #272]
    1fb8:	add	x16, x16, #0x110
    1fbc:	br	x17

0000000000001fc0 <PyCFunction_GetFunction@plt>:
    1fc0:	adrp	x16, 19000 <PyMapping_Items>
    1fc4:	ldr	x17, [x16, #280]
    1fc8:	add	x16, x16, #0x118
    1fcc:	br	x17

0000000000001fd0 <PyDict_New@plt>:
    1fd0:	adrp	x16, 19000 <PyMapping_Items>
    1fd4:	ldr	x17, [x16, #288]
    1fd8:	add	x16, x16, #0x120
    1fdc:	br	x17

0000000000001fe0 <PyUnicode_FromString@plt>:
    1fe0:	adrp	x16, 19000 <PyMapping_Items>
    1fe4:	ldr	x17, [x16, #296]
    1fe8:	add	x16, x16, #0x128
    1fec:	br	x17

0000000000001ff0 <PyObject_GetIter@plt>:
    1ff0:	adrp	x16, 19000 <PyMapping_Items>
    1ff4:	ldr	x17, [x16, #304]
    1ff8:	add	x16, x16, #0x130
    1ffc:	br	x17

0000000000002000 <PyUnicode_InternFromString@plt>:
    2000:	adrp	x16, 19000 <PyMapping_Items>
    2004:	ldr	x17, [x16, #312]
    2008:	add	x16, x16, #0x138
    200c:	br	x17

0000000000002010 <PyModule_AddObject@plt>:
    2010:	adrp	x16, 19000 <PyMapping_Items>
    2014:	ldr	x17, [x16, #320]
    2018:	add	x16, x16, #0x140
    201c:	br	x17

0000000000002020 <PyDict_SetItem@plt>:
    2020:	adrp	x16, 19000 <PyMapping_Items>
    2024:	ldr	x17, [x16, #328]
    2028:	add	x16, x16, #0x148
    202c:	br	x17

0000000000002030 <PyType_IsSubtype@plt>:
    2030:	adrp	x16, 19000 <PyMapping_Items>
    2034:	ldr	x17, [x16, #336]
    2038:	add	x16, x16, #0x150
    203c:	br	x17

0000000000002040 <PyErr_Format@plt>:
    2040:	adrp	x16, 19000 <PyMapping_Items>
    2044:	ldr	x17, [x16, #344]
    2048:	add	x16, x16, #0x158
    204c:	br	x17

0000000000002050 <PyUnicode_FromStringAndSize@plt>:
    2050:	adrp	x16, 19000 <PyMapping_Items>
    2054:	ldr	x17, [x16, #352]
    2058:	add	x16, x16, #0x160
    205c:	br	x17

0000000000002060 <PyLong_FromString@plt>:
    2060:	adrp	x16, 19000 <PyMapping_Items>
    2064:	ldr	x17, [x16, #360]
    2068:	add	x16, x16, #0x168
    206c:	br	x17

0000000000002070 <_PyAccu_FinishAsList@plt>:
    2070:	adrp	x16, 19000 <PyMapping_Items>
    2074:	ldr	x17, [x16, #368]
    2078:	add	x16, x16, #0x170
    207c:	br	x17

0000000000002080 <PyUnicode_New@plt>:
    2080:	adrp	x16, 19000 <PyMapping_Items>
    2084:	ldr	x17, [x16, #376]
    2088:	add	x16, x16, #0x178
    208c:	br	x17

0000000000002090 <PyTuple_Pack@plt>:
    2090:	adrp	x16, 19000 <PyMapping_Items>
    2094:	ldr	x17, [x16, #384]
    2098:	add	x16, x16, #0x180
    209c:	br	x17

00000000000020a0 <PyObject_GC_UnTrack@plt>:
    20a0:	adrp	x16, 19000 <PyMapping_Items>
    20a4:	ldr	x17, [x16, #392]
    20a8:	add	x16, x16, #0x188
    20ac:	br	x17

00000000000020b0 <PyDict_GetItemWithError@plt>:
    20b0:	adrp	x16, 19000 <PyMapping_Items>
    20b4:	ldr	x17, [x16, #400]
    20b8:	add	x16, x16, #0x190
    20bc:	br	x17

00000000000020c0 <PyFloat_FromString@plt>:
    20c0:	adrp	x16, 19000 <PyMapping_Items>
    20c4:	ldr	x17, [x16, #408]
    20c8:	add	x16, x16, #0x198
    20cc:	br	x17

00000000000020d0 <PySequence_Fast@plt>:
    20d0:	adrp	x16, 19000 <PyMapping_Items>
    20d4:	ldr	x17, [x16, #416]
    20d8:	add	x16, x16, #0x1a0
    20dc:	br	x17

Disassembly of section .text:

00000000000020e0 <PyInit__json@@Base-0x54d8>:
    20e0:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    20e4:	ldr	x0, [x0, #4000]
    20e8:	cbz	x0, 20f0 <PySequence_Fast@plt+0x20>
    20ec:	b	1ef0 <__gmon_start__@plt>
    20f0:	ret
    20f4:	nop
    20f8:	adrp	x0, 19000 <PyInit__json@@Base+0x11a48>
    20fc:	add	x0, x0, #0x900
    2100:	adrp	x1, 19000 <PyInit__json@@Base+0x11a48>
    2104:	add	x1, x1, #0x900
    2108:	cmp	x1, x0
    210c:	b.eq	2124 <PySequence_Fast@plt+0x54>  // b.none
    2110:	adrp	x1, 18000 <PyInit__json@@Base+0x10a48>
    2114:	ldr	x1, [x1, #3944]
    2118:	cbz	x1, 2124 <PySequence_Fast@plt+0x54>
    211c:	mov	x16, x1
    2120:	br	x16
    2124:	ret
    2128:	adrp	x0, 19000 <PyInit__json@@Base+0x11a48>
    212c:	add	x0, x0, #0x900
    2130:	adrp	x1, 19000 <PyInit__json@@Base+0x11a48>
    2134:	add	x1, x1, #0x900
    2138:	sub	x1, x1, x0
    213c:	lsr	x2, x1, #63
    2140:	add	x1, x2, x1, asr #3
    2144:	cmp	xzr, x1, asr #1
    2148:	asr	x1, x1, #1
    214c:	b.eq	2164 <PySequence_Fast@plt+0x94>  // b.none
    2150:	adrp	x2, 18000 <PyInit__json@@Base+0x10a48>
    2154:	ldr	x2, [x2, #4056]
    2158:	cbz	x2, 2164 <PySequence_Fast@plt+0x94>
    215c:	mov	x16, x2
    2160:	br	x16
    2164:	ret
    2168:	stp	x29, x30, [sp, #-32]!
    216c:	mov	x29, sp
    2170:	str	x19, [sp, #16]
    2174:	adrp	x19, 19000 <PyInit__json@@Base+0x11a48>
    2178:	ldrb	w0, [x19, #2304]
    217c:	cbnz	w0, 21a4 <PySequence_Fast@plt+0xd4>
    2180:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    2184:	ldr	x0, [x0, #3960]
    2188:	cbz	x0, 2198 <PySequence_Fast@plt+0xc8>
    218c:	adrp	x0, 19000 <PyInit__json@@Base+0x11a48>
    2190:	ldr	x0, [x0, #432]
    2194:	bl	1de0 <__cxa_finalize@plt>
    2198:	bl	20f8 <PySequence_Fast@plt+0x28>
    219c:	mov	w0, #0x1                   	// #1
    21a0:	strb	w0, [x19, #2304]
    21a4:	ldr	x19, [sp, #16]
    21a8:	ldp	x29, x30, [sp], #32
    21ac:	ret
    21b0:	b	2128 <PySequence_Fast@plt+0x58>
    21b4:	nop
    21b8:	sub	sp, sp, #0x90
    21bc:	add	x3, sp, #0x5c
    21c0:	add	x4, sp, #0x58
    21c4:	add	x5, sp, #0x54
    21c8:	add	x6, sp, #0x88
    21cc:	stp	x29, x30, [sp, #48]
    21d0:	add	x29, sp, #0x30
    21d4:	add	x7, sp, #0x80
    21d8:	stp	x7, x6, [sp]
    21dc:	add	x7, sp, #0x78
    21e0:	add	x6, sp, #0x70
    21e4:	stp	x5, x4, [sp, #16]
    21e8:	add	x5, sp, #0x68
    21ec:	add	x4, sp, #0x60
    21f0:	str	x3, [sp, #32]
    21f4:	adrp	x3, 19000 <PyInit__json@@Base+0x11a48>
    21f8:	add	x3, x3, #0x1c0
    21fc:	str	x19, [sp, #64]
    2200:	mov	x19, x0
    2204:	mov	x0, x1
    2208:	mov	x1, x2
    220c:	adrp	x2, 7000 <PySequence_Fast@plt+0x4f30>
    2210:	add	x2, x2, #0x6f0
    2214:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    2218:	cbz	w0, 22f4 <PySequence_Fast@plt+0x224>
    221c:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    2220:	ldr	x1, [sp, #96]
    2224:	ldr	x0, [x0, #4016]
    2228:	cmp	x1, x0
    222c:	b.eq	223c <PySequence_Fast@plt+0x16c>  // b.none
    2230:	ldr	x0, [x1, #8]
    2234:	ldr	x1, [x0, #168]
    2238:	tbz	w1, #29, 2344 <PySequence_Fast@plt+0x274>
    223c:	ldr	x2, [x19, #304]
    2240:	mov	x0, x19
    2244:	mov	x1, #0x0                   	// #0
    2248:	blr	x2
    224c:	mov	x19, x0
    2250:	cbz	x0, 22f4 <PySequence_Fast@plt+0x224>
    2254:	ldp	w2, w1, [sp, #84]
    2258:	strb	w2, [x0, #64]
    225c:	strb	w1, [x0, #65]
    2260:	adrp	x6, 18000 <PyInit__json@@Base+0x10a48>
    2264:	ldp	x0, x3, [sp, #112]
    2268:	ldr	x6, [x6, #4064]
    226c:	ldr	w8, [sp, #92]
    2270:	ldp	x5, x4, [sp, #96]
    2274:	ldr	x7, [x0, #8]
    2278:	stp	x5, x4, [x19, #16]
    227c:	ldp	x2, x1, [sp, #128]
    2280:	stp	x0, x3, [x19, #32]
    2284:	cmp	x7, x6
    2288:	stp	x2, x1, [x19, #48]
    228c:	str	w8, [x19, #68]
    2290:	str	xzr, [x19, #72]
    2294:	b.eq	230c <PySequence_Fast@plt+0x23c>  // b.none
    2298:	ldr	x6, [x5]
    229c:	add	x6, x6, #0x1
    22a0:	str	x6, [x5]
    22a4:	ldr	x5, [x4]
    22a8:	add	x5, x5, #0x1
    22ac:	str	x5, [x4]
    22b0:	ldr	x4, [x0]
    22b4:	add	x4, x4, #0x1
    22b8:	str	x4, [x0]
    22bc:	ldr	x0, [x3]
    22c0:	add	x0, x0, #0x1
    22c4:	str	x0, [x3]
    22c8:	ldr	x0, [x2]
    22cc:	add	x0, x0, #0x1
    22d0:	str	x0, [x2]
    22d4:	ldr	x0, [x1]
    22d8:	add	x0, x0, #0x1
    22dc:	str	x0, [x1]
    22e0:	mov	x0, x19
    22e4:	ldp	x29, x30, [sp, #48]
    22e8:	ldr	x19, [sp, #64]
    22ec:	add	sp, sp, #0x90
    22f0:	ret
    22f4:	mov	x19, #0x0                   	// #0
    22f8:	mov	x0, x19
    22fc:	ldp	x29, x30, [sp, #48]
    2300:	ldr	x19, [sp, #64]
    2304:	add	sp, sp, #0x90
    2308:	ret
    230c:	bl	1fc0 <PyCFunction_GetFunction@plt>
    2310:	adrp	x1, 2000 <PyUnicode_InternFromString@plt>
    2314:	add	x1, x1, #0xc18
    2318:	cmp	x0, x1
    231c:	adrp	x1, 2000 <PyUnicode_InternFromString@plt>
    2320:	add	x1, x1, #0x368
    2324:	ccmp	x0, x1, #0x4, ne  // ne = any
    2328:	ldr	x5, [x19, #16]
    232c:	b.ne	2334 <PySequence_Fast@plt+0x264>  // b.any
    2330:	str	x0, [x19, #72]
    2334:	ldp	x4, x0, [x19, #24]
    2338:	ldp	x3, x2, [x19, #40]
    233c:	ldr	x1, [x19, #56]
    2340:	b	2298 <PySequence_Fast@plt+0x1c8>
    2344:	adrp	x3, 18000 <PyInit__json@@Base+0x10a48>
    2348:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    234c:	ldr	x2, [x0, #24]
    2350:	add	x1, x1, #0x708
    2354:	ldr	x3, [x3, #3976]
    2358:	mov	x19, #0x0                   	// #0
    235c:	ldr	x0, [x3]
    2360:	bl	2040 <PyErr_Format@plt>
    2364:	b	22e0 <PySequence_Fast@plt+0x210>
    2368:	stp	x29, x30, [sp, #-48]!
    236c:	mov	x29, sp
    2370:	ldr	x0, [x1, #8]
    2374:	stp	x19, x20, [sp, #16]
    2378:	mov	x19, x1
    237c:	ldr	x1, [x0, #168]
    2380:	tbz	w1, #28, 26bc <PySequence_Fast@plt+0x5ec>
    2384:	ldrb	w0, [x19, #32]
    2388:	tbz	w0, #7, 246c <PySequence_Fast@plt+0x39c>
    238c:	str	x21, [sp, #32]
    2390:	and	w2, w0, #0x20
    2394:	ldr	x21, [x19, #16]
    2398:	tbnz	w0, #6, 2490 <PySequence_Fast@plt+0x3c0>
    239c:	and	w0, w0, #0x1c
    23a0:	mov	w1, #0xff                  	// #255
    23a4:	cmp	w0, #0x4
    23a8:	b.eq	23bc <PySequence_Fast@plt+0x2ec>  // b.none
    23ac:	cmp	w0, #0x8
    23b0:	mov	w1, #0xffff                	// #65535
    23b4:	mov	w0, #0x10ffff              	// #1114111
    23b8:	csel	w1, w0, w1, ne  // ne = any
    23bc:	add	x20, x19, #0x48
    23c0:	cbz	w2, 2498 <PySequence_Fast@plt+0x3c8>
    23c4:	ldrb	w0, [x19, #32]
    23c8:	cmp	x21, #0x0
    23cc:	ubfx	x0, x0, #2, #3
    23d0:	b.le	24ec <PySequence_Fast@plt+0x41c>
    23d4:	cmp	w0, #0x1
    23d8:	b.eq	2618 <PySequence_Fast@plt+0x548>  // b.none
    23dc:	cmp	w0, #0x2
    23e0:	mov	x0, #0x2                   	// #2
    23e4:	b.eq	2808 <PySequence_Fast@plt+0x738>  // b.none
    23e8:	mov	x5, #0xfffffffffffffffd    	// #-3
    23ec:	mov	x8, #0xfffffffffffffff9    	// #-7
    23f0:	mov	x6, x0
    23f4:	mov	x4, #0x0                   	// #0
    23f8:	movk	x5, #0x7fff, lsl #48
    23fc:	mov	x10, #0x7ffffffffffffffe    	// #9223372036854775806
    2400:	mov	x9, #0x1                   	// #1
    2404:	movk	x8, #0x7fff, lsl #48
    2408:	mov	x7, #0x6                   	// #6
    240c:	b	2438 <PySequence_Fast@plt+0x368>
    2410:	cmp	w2, #0x8
    2414:	csel	x3, x8, x5, cc  // cc = lo, ul, last
    2418:	csel	x2, x7, x6, cc  // cc = lo, ul, last
    241c:	cmp	x3, x0
    2420:	b.lt	24b4 <PySequence_Fast@plt+0x3e4>  // b.tstop
    2424:	nop
    2428:	add	x4, x4, #0x1
    242c:	add	x0, x0, x2
    2430:	cmp	x21, x4
    2434:	b.eq	24f0 <PySequence_Fast@plt+0x420>  // b.none
    2438:	ldr	w2, [x20, x4, lsl #2]
    243c:	cmp	w2, #0x22
    2440:	b.eq	24e0 <PySequence_Fast@plt+0x410>  // b.none
    2444:	b.hi	24a0 <PySequence_Fast@plt+0x3d0>  // b.pmore
    2448:	cmp	w2, #0xa
    244c:	b.ls	2410 <PySequence_Fast@plt+0x340>  // b.plast
    2450:	sub	w3, w2, #0xc
    2454:	cmp	w3, #0x1
    2458:	b.ls	24e0 <PySequence_Fast@plt+0x410>  // b.plast
    245c:	cmp	w2, #0x20
    2460:	csel	x3, x8, x10, cc  // cc = lo, ul, last
    2464:	csel	x2, x7, x9, cc  // cc = lo, ul, last
    2468:	b	241c <PySequence_Fast@plt+0x34c>
    246c:	mov	x0, x19
    2470:	bl	1db0 <_PyUnicode_Ready@plt>
    2474:	cmn	w0, #0x1
    2478:	b.eq	26d8 <PySequence_Fast@plt+0x608>  // b.none
    247c:	ldrb	w0, [x19, #32]
    2480:	str	x21, [sp, #32]
    2484:	and	w2, w0, #0x20
    2488:	ldr	x21, [x19, #16]
    248c:	tbz	w0, #6, 239c <PySequence_Fast@plt+0x2cc>
    2490:	mov	w1, #0x7f                  	// #127
    2494:	cbnz	w2, 26e8 <PySequence_Fast@plt+0x618>
    2498:	ldr	x20, [x19, #72]
    249c:	b	23c4 <PySequence_Fast@plt+0x2f4>
    24a0:	cmp	w2, #0x5c
    24a4:	csel	x3, x10, x5, ne  // ne = any
    24a8:	csel	x2, x9, x6, ne  // ne = any
    24ac:	cmp	x3, x0
    24b0:	b.ge	2428 <PySequence_Fast@plt+0x358>  // b.tcont
    24b4:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    24b8:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    24bc:	add	x1, x1, #0x748
    24c0:	ldr	x0, [x0, #4008]
    24c4:	ldr	x0, [x0]
    24c8:	bl	1e60 <PyErr_SetString@plt>
    24cc:	ldr	x21, [sp, #32]
    24d0:	mov	x0, #0x0                   	// #0
    24d4:	ldp	x19, x20, [sp, #16]
    24d8:	ldp	x29, x30, [sp], #48
    24dc:	ret
    24e0:	mov	x3, x5
    24e4:	mov	x2, #0x2                   	// #2
    24e8:	b	241c <PySequence_Fast@plt+0x34c>
    24ec:	mov	x0, #0x2                   	// #2
    24f0:	bl	2080 <PyUnicode_New@plt>
    24f4:	cbz	x0, 2bfc <PySequence_Fast@plt+0xb2c>
    24f8:	ldrb	w1, [x0, #32]
    24fc:	ldrb	w2, [x0, #32]
    2500:	ubfx	x1, x1, #2, #3
    2504:	and	w3, w2, #0x20
    2508:	cmp	w1, #0x1
    250c:	b.eq	28f0 <PySequence_Fast@plt+0x820>  // b.none
    2510:	cmp	w1, #0x2
    2514:	b.eq	26f4 <PySequence_Fast@plt+0x624>  // b.none
    2518:	cbz	w3, 2a98 <PySequence_Fast@plt+0x9c8>
    251c:	tst	x2, #0x40
    2520:	add	x5, x0, #0x30
    2524:	add	x1, x0, #0x48
    2528:	csel	x5, x1, x5, eq  // eq = none
    252c:	mov	w1, #0x22                  	// #34
    2530:	str	w1, [x5]
    2534:	cmp	x21, #0x0
    2538:	b.le	2c08 <PySequence_Fast@plt+0xb38>
    253c:	adrp	x1, 18000 <PyInit__json@@Base+0x10a48>
    2540:	mov	x4, x20
    2544:	add	x21, x20, x21, lsl #2
    2548:	mov	x3, #0x1                   	// #1
    254c:	ldr	x1, [x1, #4048]
    2550:	mov	w10, #0x5c                  	// #92
    2554:	mov	w17, #0x66                  	// #102
    2558:	mov	w18, #0x75                  	// #117
    255c:	mov	w16, #0x30                  	// #48
    2560:	mov	w15, #0x72                  	// #114
    2564:	mov	w13, #0x74                  	// #116
    2568:	mov	w12, #0x6e                  	// #110
    256c:	mov	w11, #0x62                  	// #98
    2570:	ldr	x14, [x1]
    2574:	b	25ac <PySequence_Fast@plt+0x4dc>
    2578:	cmp	w1, #0x9
    257c:	b.eq	28c0 <PySequence_Fast@plt+0x7f0>  // b.none
    2580:	cmp	w1, #0xa
    2584:	b.ne	27c8 <PySequence_Fast@plt+0x6f8>  // b.any
    2588:	add	x2, x2, #0x8
    258c:	str	w10, [x7]
    2590:	add	x3, x3, #0x2
    2594:	str	w12, [x6]
    2598:	add	x6, x5, x2
    259c:	nop
    25a0:	add	x4, x4, #0x4
    25a4:	cmp	x4, x21
    25a8:	b.eq	2600 <PySequence_Fast@plt+0x530>  // b.none
    25ac:	lsl	x2, x3, #2
    25b0:	ldr	w1, [x4]
    25b4:	add	x8, x2, #0x4
    25b8:	add	x7, x5, x2
    25bc:	add	x6, x5, x8
    25c0:	add	x9, x3, #0x1
    25c4:	cmp	w1, #0xc
    25c8:	b.eq	28d8 <PySequence_Fast@plt+0x808>  // b.none
    25cc:	b.ls	2578 <PySequence_Fast@plt+0x4a8>  // b.plast
    25d0:	cmp	w1, #0x22
    25d4:	b.eq	28a8 <PySequence_Fast@plt+0x7d8>  // b.none
    25d8:	cmp	w1, #0x5c
    25dc:	b.ne	27e8 <PySequence_Fast@plt+0x718>  // b.any
    25e0:	str	w1, [x7]
    25e4:	add	x2, x2, #0x8
    25e8:	str	w1, [x6]
    25ec:	add	x4, x4, #0x4
    25f0:	add	x3, x3, #0x2
    25f4:	add	x6, x5, x2
    25f8:	cmp	x4, x21
    25fc:	b.ne	25ac <PySequence_Fast@plt+0x4dc>  // b.any
    2600:	mov	w1, #0x22                  	// #34
    2604:	ldr	x21, [sp, #32]
    2608:	str	w1, [x6]
    260c:	ldp	x19, x20, [sp, #16]
    2610:	ldp	x29, x30, [sp], #48
    2614:	ret
    2618:	mov	x4, #0xfffffffffffffffd    	// #-3
    261c:	mov	x8, #0xfffffffffffffff9    	// #-7
    2620:	mov	x0, #0x2                   	// #2
    2624:	mov	x5, x20
    2628:	mov	x6, x0
    262c:	add	x11, x21, x20
    2630:	movk	x4, #0x7fff, lsl #48
    2634:	mov	x10, #0x7ffffffffffffffe    	// #9223372036854775806
    2638:	mov	x9, #0x1                   	// #1
    263c:	movk	x8, #0x7fff, lsl #48
    2640:	mov	x7, #0x6                   	// #6
    2644:	b	266c <PySequence_Fast@plt+0x59c>
    2648:	cmp	w2, #0x8
    264c:	csel	x3, x8, x4, cc  // cc = lo, ul, last
    2650:	csel	x2, x7, x6, cc  // cc = lo, ul, last
    2654:	cmp	x3, x0
    2658:	b.lt	24b4 <PySequence_Fast@plt+0x3e4>  // b.tstop
    265c:	add	x5, x5, #0x1
    2660:	add	x0, x0, x2
    2664:	cmp	x11, x5
    2668:	b.eq	24f0 <PySequence_Fast@plt+0x420>  // b.none
    266c:	ldrb	w2, [x5]
    2670:	cmp	w2, #0x22
    2674:	b.eq	26b0 <PySequence_Fast@plt+0x5e0>  // b.none
    2678:	b.hi	26a0 <PySequence_Fast@plt+0x5d0>  // b.pmore
    267c:	cmp	w2, #0xa
    2680:	b.ls	2648 <PySequence_Fast@plt+0x578>  // b.plast
    2684:	sub	w3, w2, #0xc
    2688:	cmp	w3, #0x1
    268c:	b.ls	26b0 <PySequence_Fast@plt+0x5e0>  // b.plast
    2690:	cmp	w2, #0x20
    2694:	csel	x3, x8, x10, cc  // cc = lo, ul, last
    2698:	csel	x2, x7, x9, cc  // cc = lo, ul, last
    269c:	b	2654 <PySequence_Fast@plt+0x584>
    26a0:	cmp	w2, #0x5c
    26a4:	csel	x3, x10, x4, ne  // ne = any
    26a8:	csel	x2, x9, x6, ne  // ne = any
    26ac:	b	2654 <PySequence_Fast@plt+0x584>
    26b0:	mov	x3, x4
    26b4:	mov	x2, #0x2                   	// #2
    26b8:	b	2654 <PySequence_Fast@plt+0x584>
    26bc:	adrp	x3, 18000 <PyInit__json@@Base+0x10a48>
    26c0:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    26c4:	ldr	x2, [x0, #24]
    26c8:	add	x1, x1, #0x768
    26cc:	ldr	x3, [x3, #3976]
    26d0:	ldr	x0, [x3]
    26d4:	bl	2040 <PyErr_Format@plt>
    26d8:	mov	x0, #0x0                   	// #0
    26dc:	ldp	x19, x20, [sp, #16]
    26e0:	ldp	x29, x30, [sp], #48
    26e4:	ret
    26e8:	add	x20, x19, #0x30
    26ec:	mov	w1, #0x7f                  	// #127
    26f0:	b	23c4 <PySequence_Fast@plt+0x2f4>
    26f4:	cbnz	w3, 2afc <PySequence_Fast@plt+0xa2c>
    26f8:	ldr	x5, [x0, #72]
    26fc:	mov	w1, #0x22                  	// #34
    2700:	strh	w1, [x5]
    2704:	cmp	x21, #0x0
    2708:	b.le	2b98 <PySequence_Fast@plt+0xac8>
    270c:	adrp	x1, 18000 <PyInit__json@@Base+0x10a48>
    2710:	mov	x4, x20
    2714:	add	x21, x20, x21, lsl #1
    2718:	mov	x3, #0x1                   	// #1
    271c:	ldr	x1, [x1, #4048]
    2720:	mov	w10, #0x5c                  	// #92
    2724:	mov	w17, #0x66                  	// #102
    2728:	mov	w18, #0x75                  	// #117
    272c:	mov	w16, #0x30                  	// #48
    2730:	mov	w15, #0x72                  	// #114
    2734:	mov	w13, #0x74                  	// #116
    2738:	mov	w12, #0x6e                  	// #110
    273c:	mov	w11, #0x62                  	// #98
    2740:	ldr	x14, [x1]
    2744:	b	277c <PySequence_Fast@plt+0x6ac>
    2748:	cmp	w1, #0x9
    274c:	b.eq	2b68 <PySequence_Fast@plt+0xa98>  // b.none
    2750:	cmp	w1, #0xa
    2754:	b.ne	2b10 <PySequence_Fast@plt+0xa40>  // b.any
    2758:	add	x2, x2, #0x4
    275c:	strh	w10, [x9]
    2760:	add	x3, x3, #0x2
    2764:	strh	w12, [x6]
    2768:	add	x6, x5, x2
    276c:	nop
    2770:	add	x4, x4, #0x2
    2774:	cmp	x21, x4
    2778:	b.eq	2ba0 <PySequence_Fast@plt+0xad0>  // b.none
    277c:	lsl	x2, x3, #1
    2780:	ldrh	w1, [x4]
    2784:	add	x7, x2, #0x2
    2788:	add	x9, x5, x2
    278c:	add	x6, x5, x7
    2790:	cmp	w1, #0xc
    2794:	add	x8, x3, #0x1
    2798:	b.eq	2b50 <PySequence_Fast@plt+0xa80>  // b.none
    279c:	b.ls	2748 <PySequence_Fast@plt+0x678>  // b.plast
    27a0:	cmp	w1, #0x22
    27a4:	b.eq	2b80 <PySequence_Fast@plt+0xab0>  // b.none
    27a8:	cmp	w1, #0x5c
    27ac:	b.ne	2b30 <PySequence_Fast@plt+0xa60>  // b.any
    27b0:	add	x2, x2, #0x4
    27b4:	strh	w1, [x9]
    27b8:	add	x3, x3, #0x2
    27bc:	strh	w1, [x6]
    27c0:	add	x6, x5, x2
    27c4:	b	2770 <PySequence_Fast@plt+0x6a0>
    27c8:	cmp	w1, #0x8
    27cc:	b.ne	2a50 <PySequence_Fast@plt+0x980>  // b.any
    27d0:	add	x2, x2, #0x8
    27d4:	str	w10, [x7]
    27d8:	add	x3, x3, #0x2
    27dc:	str	w11, [x6]
    27e0:	add	x6, x5, x2
    27e4:	b	25a0 <PySequence_Fast@plt+0x4d0>
    27e8:	cmp	w1, #0xd
    27ec:	b.ne	2a84 <PySequence_Fast@plt+0x9b4>  // b.any
    27f0:	add	x2, x2, #0x8
    27f4:	str	w10, [x7]
    27f8:	add	x3, x3, #0x2
    27fc:	str	w15, [x6]
    2800:	add	x6, x5, x2
    2804:	b	25a0 <PySequence_Fast@plt+0x4d0>
    2808:	mov	x5, #0xfffffffffffffffd    	// #-3
    280c:	mov	x8, #0xfffffffffffffff9    	// #-7
    2810:	mov	x3, x20
    2814:	mov	x6, x0
    2818:	add	x11, x20, x21, lsl #1
    281c:	movk	x5, #0x7fff, lsl #48
    2820:	mov	x10, #0x7ffffffffffffffe    	// #9223372036854775806
    2824:	mov	x9, #0x1                   	// #1
    2828:	movk	x8, #0x7fff, lsl #48
    282c:	mov	x7, #0x6                   	// #6
    2830:	b	2858 <PySequence_Fast@plt+0x788>
    2834:	cmp	w2, #0x8
    2838:	csel	x4, x8, x5, cc  // cc = lo, ul, last
    283c:	csel	x2, x7, x6, cc  // cc = lo, ul, last
    2840:	cmp	x0, x4
    2844:	b.gt	24b4 <PySequence_Fast@plt+0x3e4>
    2848:	add	x3, x3, #0x2
    284c:	add	x0, x0, x2
    2850:	cmp	x11, x3
    2854:	b.eq	24f0 <PySequence_Fast@plt+0x420>  // b.none
    2858:	ldrh	w2, [x3]
    285c:	cmp	w2, #0x22
    2860:	b.eq	289c <PySequence_Fast@plt+0x7cc>  // b.none
    2864:	b.hi	288c <PySequence_Fast@plt+0x7bc>  // b.pmore
    2868:	cmp	w2, #0xa
    286c:	b.ls	2834 <PySequence_Fast@plt+0x764>  // b.plast
    2870:	sub	w4, w2, #0xc
    2874:	cmp	w4, #0x1
    2878:	b.ls	289c <PySequence_Fast@plt+0x7cc>  // b.plast
    287c:	cmp	w2, #0x20
    2880:	csel	x4, x8, x10, cc  // cc = lo, ul, last
    2884:	csel	x2, x7, x9, cc  // cc = lo, ul, last
    2888:	b	2840 <PySequence_Fast@plt+0x770>
    288c:	cmp	w2, #0x5c
    2890:	csel	x4, x10, x5, ne  // ne = any
    2894:	csel	x2, x9, x6, ne  // ne = any
    2898:	b	2840 <PySequence_Fast@plt+0x770>
    289c:	mov	x4, x5
    28a0:	mov	x2, #0x2                   	// #2
    28a4:	b	2840 <PySequence_Fast@plt+0x770>
    28a8:	add	x2, x2, #0x8
    28ac:	str	w10, [x7]
    28b0:	add	x3, x3, #0x2
    28b4:	str	w1, [x6]
    28b8:	add	x6, x5, x2
    28bc:	b	25a0 <PySequence_Fast@plt+0x4d0>
    28c0:	add	x2, x2, #0x8
    28c4:	str	w10, [x7]
    28c8:	add	x3, x3, #0x2
    28cc:	str	w13, [x6]
    28d0:	add	x6, x5, x2
    28d4:	b	25a0 <PySequence_Fast@plt+0x4d0>
    28d8:	add	x2, x2, #0x8
    28dc:	str	w10, [x5, x3, lsl #2]
    28e0:	add	x6, x5, x2
    28e4:	add	x3, x3, #0x2
    28e8:	str	w17, [x5, x8]
    28ec:	b	25a0 <PySequence_Fast@plt+0x4d0>
    28f0:	cbz	w3, 2af4 <PySequence_Fast@plt+0xa24>
    28f4:	tst	x2, #0x40
    28f8:	add	x3, x0, #0x30
    28fc:	add	x1, x0, #0x48
    2900:	csel	x3, x1, x3, eq  // eq = none
    2904:	mov	w1, #0x22                  	// #34
    2908:	strb	w1, [x3]
    290c:	cmp	x21, #0x0
    2910:	b.le	2c10 <PySequence_Fast@plt+0xb40>
    2914:	adrp	x9, 18000 <PyInit__json@@Base+0x10a48>
    2918:	mov	x4, x20
    291c:	add	x21, x20, x21
    2920:	mov	x2, #0x1                   	// #1
    2924:	ldr	x9, [x9, #4048]
    2928:	mov	w8, #0x5c                  	// #92
    292c:	mov	w15, #0x66                  	// #102
    2930:	mov	w16, #0x75                  	// #117
    2934:	mov	w14, #0x30                  	// #48
    2938:	mov	w13, #0x72                  	// #114
    293c:	mov	w12, #0x74                  	// #116
    2940:	mov	w11, #0x6e                  	// #110
    2944:	mov	w10, #0x62                  	// #98
    2948:	b	297c <PySequence_Fast@plt+0x8ac>
    294c:	cmp	w1, #0x9
    2950:	b.eq	2a14 <PySequence_Fast@plt+0x944>  // b.none
    2954:	cmp	w1, #0xa
    2958:	b.ne	29dc <PySequence_Fast@plt+0x90c>  // b.any
    295c:	add	x2, x2, #0x2
    2960:	strb	w8, [x7]
    2964:	strb	w11, [x5]
    2968:	add	x5, x3, x2
    296c:	nop
    2970:	add	x4, x4, #0x1
    2974:	cmp	x4, x21
    2978:	b.eq	29c4 <PySequence_Fast@plt+0x8f4>  // b.none
    297c:	ldrb	w1, [x4]
    2980:	add	x6, x2, #0x1
    2984:	add	x5, x3, x6
    2988:	add	x7, x3, x2
    298c:	cmp	w1, #0xc
    2990:	b.eq	2a28 <PySequence_Fast@plt+0x958>  // b.none
    2994:	b.ls	294c <PySequence_Fast@plt+0x87c>  // b.plast
    2998:	cmp	w1, #0x22
    299c:	b.eq	2a3c <PySequence_Fast@plt+0x96c>  // b.none
    29a0:	cmp	w1, #0x5c
    29a4:	b.ne	29f8 <PySequence_Fast@plt+0x928>  // b.any
    29a8:	strb	w1, [x7]
    29ac:	add	x2, x2, #0x2
    29b0:	strb	w1, [x5]
    29b4:	add	x4, x4, #0x1
    29b8:	add	x5, x3, x2
    29bc:	cmp	x4, x21
    29c0:	b.ne	297c <PySequence_Fast@plt+0x8ac>  // b.any
    29c4:	mov	w1, #0x22                  	// #34
    29c8:	strb	w1, [x5]
    29cc:	ldp	x19, x20, [sp, #16]
    29d0:	ldr	x21, [sp, #32]
    29d4:	ldp	x29, x30, [sp], #48
    29d8:	ret
    29dc:	cmp	w1, #0x8
    29e0:	b.ne	2aa0 <PySequence_Fast@plt+0x9d0>  // b.any
    29e4:	add	x2, x2, #0x2
    29e8:	strb	w8, [x7]
    29ec:	strb	w10, [x5]
    29f0:	add	x5, x3, x2
    29f4:	b	2970 <PySequence_Fast@plt+0x8a0>
    29f8:	cmp	w1, #0xd
    29fc:	b.ne	2ae0 <PySequence_Fast@plt+0xa10>  // b.any
    2a00:	add	x2, x2, #0x2
    2a04:	strb	w8, [x7]
    2a08:	strb	w13, [x5]
    2a0c:	add	x5, x3, x2
    2a10:	b	2970 <PySequence_Fast@plt+0x8a0>
    2a14:	add	x2, x2, #0x2
    2a18:	strb	w8, [x7]
    2a1c:	strb	w12, [x5]
    2a20:	add	x5, x3, x2
    2a24:	b	2970 <PySequence_Fast@plt+0x8a0>
    2a28:	strb	w8, [x3, x2]
    2a2c:	add	x2, x2, #0x2
    2a30:	add	x5, x3, x2
    2a34:	strb	w15, [x3, x6]
    2a38:	b	2970 <PySequence_Fast@plt+0x8a0>
    2a3c:	add	x2, x2, #0x2
    2a40:	strb	w8, [x7]
    2a44:	strb	w1, [x5]
    2a48:	add	x5, x3, x2
    2a4c:	b	2970 <PySequence_Fast@plt+0x8a0>
    2a50:	str	w10, [x7]
    2a54:	lsr	w8, w1, #4
    2a58:	str	w18, [x6]
    2a5c:	add	x2, x2, #0x18
    2a60:	stp	w16, w16, [x7, #8]
    2a64:	and	w1, w1, #0xf
    2a68:	add	x6, x5, x2
    2a6c:	add	x3, x3, #0x6
    2a70:	ldrb	w2, [x14, w8, uxtw]
    2a74:	str	w2, [x7, #16]
    2a78:	ldrb	w1, [x14, w1, uxtw]
    2a7c:	str	w1, [x7, #20]
    2a80:	b	25a0 <PySequence_Fast@plt+0x4d0>
    2a84:	cmp	w1, #0x1f
    2a88:	b.ls	2a50 <PySequence_Fast@plt+0x980>  // b.plast
    2a8c:	mov	x3, x9
    2a90:	str	w1, [x7]
    2a94:	b	25a0 <PySequence_Fast@plt+0x4d0>
    2a98:	ldr	x5, [x0, #72]
    2a9c:	b	252c <PySequence_Fast@plt+0x45c>
    2aa0:	strb	w8, [x7]
    2aa4:	lsr	w18, w1, #4
    2aa8:	strb	w16, [x5]
    2aac:	and	x1, x1, #0xf
    2ab0:	strb	w14, [x7, #2]
    2ab4:	add	x6, x2, #0x5
    2ab8:	strb	w14, [x7, #3]
    2abc:	add	x2, x2, #0x6
    2ac0:	add	x5, x3, x2
    2ac4:	ldr	x17, [x9]
    2ac8:	ldrb	w17, [x17, w18, uxtw]
    2acc:	strb	w17, [x7, #4]
    2ad0:	ldr	x7, [x9]
    2ad4:	ldrb	w1, [x7, x1]
    2ad8:	strb	w1, [x3, x6]
    2adc:	b	2970 <PySequence_Fast@plt+0x8a0>
    2ae0:	cmp	w1, #0x1f
    2ae4:	b.ls	2aa0 <PySequence_Fast@plt+0x9d0>  // b.plast
    2ae8:	mov	x2, x6
    2aec:	strb	w1, [x7]
    2af0:	b	2970 <PySequence_Fast@plt+0x8a0>
    2af4:	ldr	x3, [x0, #72]
    2af8:	b	2904 <PySequence_Fast@plt+0x834>
    2afc:	tst	x2, #0x40
    2b00:	add	x5, x0, #0x30
    2b04:	add	x1, x0, #0x48
    2b08:	csel	x5, x1, x5, eq  // eq = none
    2b0c:	b	26fc <PySequence_Fast@plt+0x62c>
    2b10:	cmp	w1, #0x8
    2b14:	b.ne	2bc4 <PySequence_Fast@plt+0xaf4>  // b.any
    2b18:	add	x2, x2, #0x4
    2b1c:	strh	w10, [x9]
    2b20:	add	x3, x3, #0x2
    2b24:	strh	w11, [x6]
    2b28:	add	x6, x5, x2
    2b2c:	b	2770 <PySequence_Fast@plt+0x6a0>
    2b30:	cmp	w1, #0xd
    2b34:	b.ne	2bb0 <PySequence_Fast@plt+0xae0>  // b.any
    2b38:	add	x2, x2, #0x4
    2b3c:	strh	w10, [x9]
    2b40:	add	x3, x3, #0x2
    2b44:	strh	w15, [x6]
    2b48:	add	x6, x5, x2
    2b4c:	b	2770 <PySequence_Fast@plt+0x6a0>
    2b50:	add	x6, x2, #0x4
    2b54:	strh	w10, [x5, x2]
    2b58:	add	x6, x5, x6
    2b5c:	add	x3, x3, #0x2
    2b60:	strh	w17, [x5, x7]
    2b64:	b	2770 <PySequence_Fast@plt+0x6a0>
    2b68:	add	x2, x2, #0x4
    2b6c:	strh	w10, [x9]
    2b70:	add	x3, x3, #0x2
    2b74:	strh	w13, [x6]
    2b78:	add	x6, x5, x2
    2b7c:	b	2770 <PySequence_Fast@plt+0x6a0>
    2b80:	add	x2, x2, #0x4
    2b84:	strh	w10, [x9]
    2b88:	add	x3, x3, #0x2
    2b8c:	strh	w1, [x6]
    2b90:	add	x6, x5, x2
    2b94:	b	2770 <PySequence_Fast@plt+0x6a0>
    2b98:	add	x6, x5, #0x2
    2b9c:	nop
    2ba0:	mov	w1, #0x22                  	// #34
    2ba4:	strh	w1, [x6]
    2ba8:	ldr	x21, [sp, #32]
    2bac:	b	24d4 <PySequence_Fast@plt+0x404>
    2bb0:	cmp	w1, #0x1f
    2bb4:	b.ls	2bc4 <PySequence_Fast@plt+0xaf4>  // b.plast
    2bb8:	mov	x3, x8
    2bbc:	strh	w1, [x9]
    2bc0:	b	2770 <PySequence_Fast@plt+0x6a0>
    2bc4:	strh	w10, [x9]
    2bc8:	lsr	w7, w1, #4
    2bcc:	strh	w18, [x6]
    2bd0:	add	x2, x2, #0xc
    2bd4:	strh	w16, [x9, #4]
    2bd8:	and	x1, x1, #0xf
    2bdc:	strh	w16, [x9, #6]
    2be0:	add	x6, x5, x2
    2be4:	add	x3, x3, #0x6
    2be8:	ldrb	w2, [x14, w7, uxtw]
    2bec:	strh	w2, [x9, #8]
    2bf0:	ldrb	w1, [x14, x1]
    2bf4:	strh	w1, [x9, #10]
    2bf8:	b	2770 <PySequence_Fast@plt+0x6a0>
    2bfc:	mov	x0, #0x0                   	// #0
    2c00:	ldr	x21, [sp, #32]
    2c04:	b	26dc <PySequence_Fast@plt+0x60c>
    2c08:	add	x6, x5, #0x4
    2c0c:	b	2600 <PySequence_Fast@plt+0x530>
    2c10:	add	x5, x3, #0x1
    2c14:	b	29c4 <PySequence_Fast@plt+0x8f4>
    2c18:	stp	x29, x30, [sp, #-96]!
    2c1c:	mov	x29, sp
    2c20:	ldr	x0, [x1, #8]
    2c24:	stp	x19, x20, [sp, #16]
    2c28:	mov	x19, x1
    2c2c:	ldr	x1, [x0, #168]
    2c30:	tbz	w1, #28, 2f70 <PySequence_Fast@plt+0xea0>
    2c34:	ldrb	w0, [x19, #32]
    2c38:	tbz	w0, #7, 2d48 <PySequence_Fast@plt+0xc78>
    2c3c:	stp	x21, x22, [sp, #32]
    2c40:	ldr	x21, [x19, #16]
    2c44:	tbz	w0, #5, 2d68 <PySequence_Fast@plt+0xc98>
    2c48:	tst	x0, #0x40
    2c4c:	add	x20, x19, #0x30
    2c50:	add	x0, x19, #0x48
    2c54:	csel	x20, x0, x20, eq  // eq = none
    2c58:	ldrb	w19, [x19, #32]
    2c5c:	cmp	x21, #0x0
    2c60:	mov	x0, #0x2                   	// #2
    2c64:	ubfx	x19, x19, #2, #3
    2c68:	b.le	2da0 <PySequence_Fast@plt+0xcd0>
    2c6c:	cmp	w19, #0x1
    2c70:	b.eq	2ec4 <PySequence_Fast@plt+0xdf4>  // b.none
    2c74:	cmp	w19, #0x2
    2c78:	b.eq	3104 <PySequence_Fast@plt+0x1034>  // b.none
    2c7c:	mov	x4, #0xfffffffffffffffd    	// #-3
    2c80:	mov	x12, #0xfffffffffffffff3    	// #-13
    2c84:	mov	x6, #0xfffffffffffffff9    	// #-7
    2c88:	mov	x7, x0
    2c8c:	mov	x3, #0x0                   	// #0
    2c90:	mov	w10, #0x5c                  	// #92
    2c94:	mov	w9, #0x5e                  	// #94
    2c98:	movk	x4, #0x7fff, lsl #48
    2c9c:	mov	w8, #0xffff                	// #65535
    2ca0:	movk	x12, #0x7fff, lsl #48
    2ca4:	movk	x6, #0x7fff, lsl #48
    2ca8:	mov	x11, #0xc                   	// #12
    2cac:	mov	x5, #0x6                   	// #6
    2cb0:	b	2cd8 <PySequence_Fast@plt+0xc08>
    2cb4:	cmp	w1, #0x8
    2cb8:	csel	x2, x6, x4, cc  // cc = lo, ul, last
    2cbc:	csel	x1, x5, x7, cc  // cc = lo, ul, last
    2cc0:	cmp	x2, x0
    2cc4:	b.lt	2d1c <PySequence_Fast@plt+0xc4c>  // b.tstop
    2cc8:	add	x3, x3, #0x1
    2ccc:	add	x0, x0, x1
    2cd0:	cmp	x21, x3
    2cd4:	b.eq	2da0 <PySequence_Fast@plt+0xcd0>  // b.none
    2cd8:	ldr	w1, [x20, x3, lsl #2]
    2cdc:	cmp	w1, #0x22
    2ce0:	sub	w2, w1, #0x20
    2ce4:	ccmp	w1, w10, #0x4, ne  // ne = any
    2ce8:	ccmp	w2, w9, #0x2, ne  // ne = any
    2cec:	b.ls	2d88 <PySequence_Fast@plt+0xcb8>  // b.plast
    2cf0:	cmp	w1, #0x22
    2cf4:	b.eq	2d94 <PySequence_Fast@plt+0xcc4>  // b.none
    2cf8:	b.hi	2d70 <PySequence_Fast@plt+0xca0>  // b.pmore
    2cfc:	cmp	w1, #0xa
    2d00:	b.ls	2cb4 <PySequence_Fast@plt+0xbe4>  // b.plast
    2d04:	sub	w1, w1, #0xc
    2d08:	cmp	w1, #0x2
    2d0c:	csel	x2, x4, x6, cc  // cc = lo, ul, last
    2d10:	csel	x1, x7, x5, cc  // cc = lo, ul, last
    2d14:	cmp	x2, x0
    2d18:	b.ge	2cc8 <PySequence_Fast@plt+0xbf8>  // b.tcont
    2d1c:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    2d20:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    2d24:	add	x1, x1, #0x748
    2d28:	ldr	x0, [x0, #4008]
    2d2c:	ldr	x0, [x0]
    2d30:	bl	1e60 <PyErr_SetString@plt>
    2d34:	mov	x0, #0x0                   	// #0
    2d38:	ldp	x19, x20, [sp, #16]
    2d3c:	ldp	x21, x22, [sp, #32]
    2d40:	ldp	x29, x30, [sp], #96
    2d44:	ret
    2d48:	mov	x0, x19
    2d4c:	bl	1db0 <_PyUnicode_Ready@plt>
    2d50:	cmn	w0, #0x1
    2d54:	b.eq	2f8c <PySequence_Fast@plt+0xebc>  // b.none
    2d58:	ldrb	w0, [x19, #32]
    2d5c:	stp	x21, x22, [sp, #32]
    2d60:	ldr	x21, [x19, #16]
    2d64:	tbnz	w0, #5, 2c48 <PySequence_Fast@plt+0xb78>
    2d68:	ldr	x20, [x19, #72]
    2d6c:	b	2c58 <PySequence_Fast@plt+0xb88>
    2d70:	cmp	w1, #0x5c
    2d74:	b.eq	2d94 <PySequence_Fast@plt+0xcc4>  // b.none
    2d78:	cmp	w1, w8
    2d7c:	csel	x2, x12, x6, hi  // hi = pmore
    2d80:	csel	x1, x11, x5, hi  // hi = pmore
    2d84:	b	2cc0 <PySequence_Fast@plt+0xbf0>
    2d88:	mov	x2, #0x7ffffffffffffffe    	// #9223372036854775806
    2d8c:	mov	x1, #0x1                   	// #1
    2d90:	b	2cc0 <PySequence_Fast@plt+0xbf0>
    2d94:	mov	x2, x4
    2d98:	mov	x1, #0x2                   	// #2
    2d9c:	b	2cc0 <PySequence_Fast@plt+0xbf0>
    2da0:	mov	w1, #0x7f                  	// #127
    2da4:	bl	2080 <PyUnicode_New@plt>
    2da8:	cbz	x0, 31c4 <PySequence_Fast@plt+0x10f4>
    2dac:	ldrb	w1, [x0, #32]
    2db0:	tbnz	w1, #5, 2f9c <PySequence_Fast@plt+0xecc>
    2db4:	ldr	x3, [x0, #72]
    2db8:	mov	w1, #0x22                  	// #34
    2dbc:	strb	w1, [x3]
    2dc0:	cmp	x21, #0x0
    2dc4:	b.le	31bc <PySequence_Fast@plt+0x10ec>
    2dc8:	adrp	x12, 18000 <PyInit__json@@Base+0x10a48>
    2dcc:	mov	x2, #0x1                   	// #1
    2dd0:	mov	x4, #0x0                   	// #0
    2dd4:	mov	w11, #0x22                  	// #34
    2dd8:	ldr	x13, [x12, #4048]
    2ddc:	mov	w10, #0x5e                  	// #94
    2de0:	mov	w8, #0x5c                  	// #92
    2de4:	mov	w30, #0x66                  	// #102
    2de8:	mov	w14, #0x75                  	// #117
    2dec:	mov	w22, #0xdc00                	// #56320
    2df0:	mov	w18, #0x72                  	// #114
    2df4:	mov	w17, #0x74                  	// #116
    2df8:	mov	w16, #0x6e                  	// #110
    2dfc:	mov	w15, #0x62                  	// #98
    2e00:	stp	x23, x24, [sp, #48]
    2e04:	mov	w24, #0xffff                	// #65535
    2e08:	mov	w23, #0xd7c0                	// #55232
    2e0c:	stp	x25, x26, [sp, #64]
    2e10:	str	x27, [sp, #80]
    2e14:	b	2e54 <PySequence_Fast@plt+0xd84>
    2e18:	strb	w8, [x3, x2]
    2e1c:	cmp	w1, #0xc
    2e20:	b.eq	3030 <PySequence_Fast@plt+0xf60>  // b.none
    2e24:	b.hi	2fd0 <PySequence_Fast@plt+0xf00>  // b.pmore
    2e28:	cmp	w1, #0x9
    2e2c:	b.eq	3020 <PySequence_Fast@plt+0xf50>  // b.none
    2e30:	cmp	w1, #0xa
    2e34:	b.ne	2fb8 <PySequence_Fast@plt+0xee8>  // b.any
    2e38:	add	x2, x2, #0x2
    2e3c:	strb	w16, [x5]
    2e40:	add	x5, x3, x2
    2e44:	nop
    2e48:	add	x4, x4, #0x1
    2e4c:	cmp	x21, x4
    2e50:	b.eq	2ea0 <PySequence_Fast@plt+0xdd0>  // b.none
    2e54:	cmp	w19, #0x1
    2e58:	b.eq	2fb0 <PySequence_Fast@plt+0xee0>  // b.none
    2e5c:	cmp	w19, #0x2
    2e60:	b.eq	3008 <PySequence_Fast@plt+0xf38>  // b.none
    2e64:	ldr	w1, [x20, x4, lsl #2]
    2e68:	cmp	w1, #0x5c
    2e6c:	add	x7, x2, #0x1
    2e70:	sub	w6, w1, #0x20
    2e74:	ccmp	w1, w11, #0x4, ne  // ne = any
    2e78:	add	x5, x3, x7
    2e7c:	ccmp	w6, w10, #0x2, ne  // ne = any
    2e80:	add	x9, x3, x2
    2e84:	mov	x6, x5
    2e88:	b.hi	2e18 <PySequence_Fast@plt+0xd48>  // b.pmore
    2e8c:	strb	w1, [x3, x2]
    2e90:	add	x4, x4, #0x1
    2e94:	mov	x2, x7
    2e98:	cmp	x21, x4
    2e9c:	b.ne	2e54 <PySequence_Fast@plt+0xd84>  // b.any
    2ea0:	ldp	x23, x24, [sp, #48]
    2ea4:	ldp	x25, x26, [sp, #64]
    2ea8:	ldr	x27, [sp, #80]
    2eac:	mov	w1, #0x22                  	// #34
    2eb0:	strb	w1, [x5]
    2eb4:	ldp	x19, x20, [sp, #16]
    2eb8:	ldp	x21, x22, [sp, #32]
    2ebc:	ldp	x29, x30, [sp], #96
    2ec0:	ret
    2ec4:	mov	x4, #0xfffffffffffffffd    	// #-3
    2ec8:	mov	x6, #0xfffffffffffffff9    	// #-7
    2ecc:	mov	x3, x20
    2ed0:	mov	x7, x0
    2ed4:	add	x10, x21, x20
    2ed8:	mov	w9, #0x22                  	// #34
    2edc:	mov	w8, #0x5e                  	// #94
    2ee0:	movk	x4, #0x7fff, lsl #48
    2ee4:	movk	x6, #0x7fff, lsl #48
    2ee8:	mov	x5, #0x6                   	// #6
    2eec:	b	2f14 <PySequence_Fast@plt+0xe44>
    2ef0:	cmp	w1, #0x8
    2ef4:	csel	x2, x6, x4, cc  // cc = lo, ul, last
    2ef8:	csel	x1, x5, x7, cc  // cc = lo, ul, last
    2efc:	cmp	x0, x2
    2f00:	b.gt	2d1c <PySequence_Fast@plt+0xc4c>
    2f04:	add	x3, x3, #0x1
    2f08:	add	x0, x0, x1
    2f0c:	cmp	x10, x3
    2f10:	b.eq	2da0 <PySequence_Fast@plt+0xcd0>  // b.none
    2f14:	ldrb	w1, [x3]
    2f18:	cmp	w1, #0x5c
    2f1c:	sub	w2, w1, #0x20
    2f20:	ccmp	w1, w9, #0x4, ne  // ne = any
    2f24:	ccmp	w2, w8, #0x2, ne  // ne = any
    2f28:	b.ls	2f64 <PySequence_Fast@plt+0xe94>  // b.plast
    2f2c:	cmp	w1, #0x22
    2f30:	b.eq	30f8 <PySequence_Fast@plt+0x1028>  // b.none
    2f34:	b.hi	2f54 <PySequence_Fast@plt+0xe84>  // b.pmore
    2f38:	cmp	w1, #0xa
    2f3c:	b.ls	2ef0 <PySequence_Fast@plt+0xe20>  // b.plast
    2f40:	sub	w1, w1, #0xc
    2f44:	cmp	w1, #0x2
    2f48:	csel	x2, x4, x6, cc  // cc = lo, ul, last
    2f4c:	csel	x1, x7, x5, cc  // cc = lo, ul, last
    2f50:	b	2efc <PySequence_Fast@plt+0xe2c>
    2f54:	cmp	w1, #0x5c
    2f58:	csel	x2, x6, x4, ne  // ne = any
    2f5c:	csel	x1, x5, x7, ne  // ne = any
    2f60:	b	2efc <PySequence_Fast@plt+0xe2c>
    2f64:	mov	x2, #0x7ffffffffffffffe    	// #9223372036854775806
    2f68:	mov	x1, #0x1                   	// #1
    2f6c:	b	2efc <PySequence_Fast@plt+0xe2c>
    2f70:	adrp	x3, 18000 <PyInit__json@@Base+0x10a48>
    2f74:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    2f78:	ldr	x2, [x0, #24]
    2f7c:	add	x1, x1, #0x768
    2f80:	ldr	x3, [x3, #3976]
    2f84:	ldr	x0, [x3]
    2f88:	bl	2040 <PyErr_Format@plt>
    2f8c:	mov	x0, #0x0                   	// #0
    2f90:	ldp	x19, x20, [sp, #16]
    2f94:	ldp	x29, x30, [sp], #96
    2f98:	ret
    2f9c:	tst	x1, #0x40
    2fa0:	add	x3, x0, #0x30
    2fa4:	add	x1, x0, #0x48
    2fa8:	csel	x3, x1, x3, eq  // eq = none
    2fac:	b	2db8 <PySequence_Fast@plt+0xce8>
    2fb0:	ldrb	w1, [x20, x4]
    2fb4:	b	2e68 <PySequence_Fast@plt+0xd98>
    2fb8:	cmp	w1, #0x8
    2fbc:	b.ne	30a4 <PySequence_Fast@plt+0xfd4>  // b.any
    2fc0:	add	x2, x2, #0x2
    2fc4:	strb	w15, [x5]
    2fc8:	add	x5, x3, x2
    2fcc:	b	2e48 <PySequence_Fast@plt+0xd78>
    2fd0:	cmp	w1, #0x22
    2fd4:	b.eq	3010 <PySequence_Fast@plt+0xf40>  // b.none
    2fd8:	cmp	w1, #0x5c
    2fdc:	b.ne	2ff0 <PySequence_Fast@plt+0xf20>  // b.any
    2fe0:	add	x2, x2, #0x2
    2fe4:	strb	w8, [x5]
    2fe8:	add	x5, x3, x2
    2fec:	b	2e48 <PySequence_Fast@plt+0xd78>
    2ff0:	cmp	w1, #0xd
    2ff4:	b.ne	3040 <PySequence_Fast@plt+0xf70>  // b.any
    2ff8:	add	x2, x2, #0x2
    2ffc:	strb	w18, [x5]
    3000:	add	x5, x3, x2
    3004:	b	2e48 <PySequence_Fast@plt+0xd78>
    3008:	ldrh	w1, [x20, x4, lsl #1]
    300c:	b	2e68 <PySequence_Fast@plt+0xd98>
    3010:	add	x2, x2, #0x2
    3014:	strb	w1, [x5]
    3018:	add	x5, x3, x2
    301c:	b	2e48 <PySequence_Fast@plt+0xd78>
    3020:	add	x2, x2, #0x2
    3024:	strb	w17, [x5]
    3028:	add	x5, x3, x2
    302c:	b	2e48 <PySequence_Fast@plt+0xd78>
    3030:	add	x2, x2, #0x2
    3034:	strb	w30, [x5]
    3038:	add	x5, x3, x2
    303c:	b	2e48 <PySequence_Fast@plt+0xd78>
    3040:	cmp	w1, w24
    3044:	b.ls	30a4 <PySequence_Fast@plt+0xfd4>  // b.plast
    3048:	strb	w14, [x5]
    304c:	add	w5, w23, w1, lsr #10
    3050:	add	x7, x2, #0x7
    3054:	and	w1, w1, #0x3ff
    3058:	ldr	x2, [x13]
    305c:	ubfx	x6, x5, #12, #4
    3060:	ubfx	x26, x5, #8, #4
    3064:	ubfx	x25, x5, #4, #4
    3068:	and	w5, w5, #0xf
    306c:	add	w1, w1, w22
    3070:	ldrb	w2, [x2, w6, uxtw]
    3074:	add	x6, x3, x7
    3078:	strb	w2, [x9, #2]
    307c:	ldr	x2, [x13]
    3080:	ldrb	w2, [x2, w26, uxtw]
    3084:	strb	w2, [x9, #3]
    3088:	ldr	x2, [x13]
    308c:	ldrb	w2, [x2, w25, uxtw]
    3090:	strb	w2, [x9, #4]
    3094:	ldr	x2, [x13]
    3098:	ldrb	w2, [x2, w5, uxtw]
    309c:	strb	w2, [x9, #5]
    30a0:	strb	w8, [x9, #6]
    30a4:	ldr	x9, [x12, #4048]
    30a8:	strb	w14, [x6]
    30ac:	lsr	w27, w1, #12
    30b0:	add	x2, x7, #0x5
    30b4:	ubfx	x26, x1, #8, #4
    30b8:	ubfx	x25, x1, #4, #4
    30bc:	ldr	x5, [x9]
    30c0:	and	w1, w1, #0xf
    30c4:	ldrb	w5, [x5, w27, uxtw]
    30c8:	strb	w5, [x6, #1]
    30cc:	add	x5, x3, x2
    30d0:	ldr	x7, [x9]
    30d4:	ldrb	w7, [x7, w26, uxtw]
    30d8:	strb	w7, [x6, #2]
    30dc:	ldr	x7, [x9]
    30e0:	ldrb	w7, [x7, w25, uxtw]
    30e4:	strb	w7, [x6, #3]
    30e8:	ldr	x7, [x9]
    30ec:	ldrb	w1, [x7, w1, uxtw]
    30f0:	strb	w1, [x6, #4]
    30f4:	b	2e48 <PySequence_Fast@plt+0xd78>
    30f8:	mov	x2, x4
    30fc:	mov	x1, #0x2                   	// #2
    3100:	b	2efc <PySequence_Fast@plt+0xe2c>
    3104:	mov	x4, #0xfffffffffffffffd    	// #-3
    3108:	mov	x6, #0xfffffffffffffff9    	// #-7
    310c:	mov	x3, x20
    3110:	mov	x7, x0
    3114:	add	x10, x20, x21, lsl #1
    3118:	mov	w9, #0x5c                  	// #92
    311c:	mov	w8, #0x5e                  	// #94
    3120:	movk	x4, #0x7fff, lsl #48
    3124:	movk	x6, #0x7fff, lsl #48
    3128:	mov	x5, #0x6                   	// #6
    312c:	b	3154 <PySequence_Fast@plt+0x1084>
    3130:	cmp	w1, #0x8
    3134:	csel	x2, x6, x4, cc  // cc = lo, ul, last
    3138:	csel	x1, x5, x7, cc  // cc = lo, ul, last
    313c:	cmp	x2, x0
    3140:	b.lt	2d1c <PySequence_Fast@plt+0xc4c>  // b.tstop
    3144:	add	x3, x3, #0x2
    3148:	add	x0, x0, x1
    314c:	cmp	x3, x10
    3150:	b.eq	2da0 <PySequence_Fast@plt+0xcd0>  // b.none
    3154:	ldrh	w1, [x3]
    3158:	cmp	w1, #0x22
    315c:	sub	w2, w1, #0x20
    3160:	ccmp	w1, w9, #0x4, ne  // ne = any
    3164:	ccmp	w2, w8, #0x2, ne  // ne = any
    3168:	b.ls	31a4 <PySequence_Fast@plt+0x10d4>  // b.plast
    316c:	cmp	w1, #0x22
    3170:	b.eq	31b0 <PySequence_Fast@plt+0x10e0>  // b.none
    3174:	b.hi	3194 <PySequence_Fast@plt+0x10c4>  // b.pmore
    3178:	cmp	w1, #0xa
    317c:	b.ls	3130 <PySequence_Fast@plt+0x1060>  // b.plast
    3180:	sub	w1, w1, #0xc
    3184:	cmp	w1, #0x2
    3188:	csel	x2, x4, x6, cc  // cc = lo, ul, last
    318c:	csel	x1, x7, x5, cc  // cc = lo, ul, last
    3190:	b	313c <PySequence_Fast@plt+0x106c>
    3194:	cmp	w1, #0x5c
    3198:	csel	x2, x6, x4, ne  // ne = any
    319c:	csel	x1, x5, x7, ne  // ne = any
    31a0:	b	313c <PySequence_Fast@plt+0x106c>
    31a4:	mov	x2, #0x7ffffffffffffffe    	// #9223372036854775806
    31a8:	mov	x1, #0x1                   	// #1
    31ac:	b	313c <PySequence_Fast@plt+0x106c>
    31b0:	mov	x2, x4
    31b4:	mov	x1, #0x2                   	// #2
    31b8:	b	313c <PySequence_Fast@plt+0x106c>
    31bc:	add	x5, x3, #0x1
    31c0:	b	2eac <PySequence_Fast@plt+0xddc>
    31c4:	mov	x0, #0x0                   	// #0
    31c8:	ldp	x21, x22, [sp, #32]
    31cc:	b	2f90 <PySequence_Fast@plt+0xec0>
    31d0:	stp	x29, x30, [sp, #-32]!
    31d4:	mov	x29, sp
    31d8:	str	x19, [sp, #16]
    31dc:	mov	x19, x0
    31e0:	ldr	x0, [x0, #16]
    31e4:	cbz	x0, 31fc <PySequence_Fast@plt+0x112c>
    31e8:	ldr	x1, [x0]
    31ec:	str	xzr, [x19, #16]
    31f0:	sub	x1, x1, #0x1
    31f4:	str	x1, [x0]
    31f8:	cbz	x1, 32cc <PySequence_Fast@plt+0x11fc>
    31fc:	ldr	x0, [x19, #24]
    3200:	cbz	x0, 3218 <PySequence_Fast@plt+0x1148>
    3204:	ldr	x1, [x0]
    3208:	str	xzr, [x19, #24]
    320c:	sub	x1, x1, #0x1
    3210:	str	x1, [x0]
    3214:	cbz	x1, 32c4 <PySequence_Fast@plt+0x11f4>
    3218:	ldr	x0, [x19, #32]
    321c:	cbz	x0, 3234 <PySequence_Fast@plt+0x1164>
    3220:	ldr	x1, [x0]
    3224:	str	xzr, [x19, #32]
    3228:	sub	x1, x1, #0x1
    322c:	str	x1, [x0]
    3230:	cbz	x1, 32bc <PySequence_Fast@plt+0x11ec>
    3234:	ldr	x0, [x19, #40]
    3238:	cbz	x0, 3250 <PySequence_Fast@plt+0x1180>
    323c:	ldr	x1, [x0]
    3240:	str	xzr, [x19, #40]
    3244:	sub	x1, x1, #0x1
    3248:	str	x1, [x0]
    324c:	cbz	x1, 32b4 <PySequence_Fast@plt+0x11e4>
    3250:	ldr	x0, [x19, #48]
    3254:	cbz	x0, 326c <PySequence_Fast@plt+0x119c>
    3258:	ldr	x1, [x0]
    325c:	str	xzr, [x19, #48]
    3260:	sub	x1, x1, #0x1
    3264:	str	x1, [x0]
    3268:	cbz	x1, 32ac <PySequence_Fast@plt+0x11dc>
    326c:	ldr	x0, [x19, #56]
    3270:	cbz	x0, 3288 <PySequence_Fast@plt+0x11b8>
    3274:	ldr	x1, [x0]
    3278:	str	xzr, [x19, #56]
    327c:	sub	x1, x1, #0x1
    3280:	str	x1, [x0]
    3284:	cbz	x1, 3298 <PySequence_Fast@plt+0x11c8>
    3288:	mov	w0, #0x0                   	// #0
    328c:	ldr	x19, [sp, #16]
    3290:	ldp	x29, x30, [sp], #32
    3294:	ret
    3298:	bl	1e30 <_Py_Dealloc@plt>
    329c:	mov	w0, #0x0                   	// #0
    32a0:	ldr	x19, [sp, #16]
    32a4:	ldp	x29, x30, [sp], #32
    32a8:	ret
    32ac:	bl	1e30 <_Py_Dealloc@plt>
    32b0:	b	326c <PySequence_Fast@plt+0x119c>
    32b4:	bl	1e30 <_Py_Dealloc@plt>
    32b8:	b	3250 <PySequence_Fast@plt+0x1180>
    32bc:	bl	1e30 <_Py_Dealloc@plt>
    32c0:	b	3234 <PySequence_Fast@plt+0x1164>
    32c4:	bl	1e30 <_Py_Dealloc@plt>
    32c8:	b	3218 <PySequence_Fast@plt+0x1148>
    32cc:	bl	1e30 <_Py_Dealloc@plt>
    32d0:	b	31fc <PySequence_Fast@plt+0x112c>
    32d4:	nop
    32d8:	stp	x29, x30, [sp, #-48]!
    32dc:	adrp	x3, 19000 <PyInit__json@@Base+0x11a48>
    32e0:	add	x3, x3, #0x1c0
    32e4:	mov	x29, sp
    32e8:	add	x3, x3, #0x50
    32ec:	add	x4, sp, #0x28
    32f0:	stp	x19, x20, [sp, #16]
    32f4:	mov	x19, x0
    32f8:	mov	x0, x1
    32fc:	mov	x1, x2
    3300:	adrp	x2, 7000 <PySequence_Fast@plt+0x4f30>
    3304:	add	x2, x2, #0x798
    3308:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    330c:	cbz	w0, 33f8 <PySequence_Fast@plt+0x1328>
    3310:	ldr	x2, [x19, #304]
    3314:	mov	x0, x19
    3318:	mov	x1, #0x0                   	// #0
    331c:	blr	x2
    3320:	mov	x19, x0
    3324:	cbz	x0, 33f8 <PySequence_Fast@plt+0x1328>
    3328:	bl	1fd0 <PyDict_New@plt>
    332c:	str	x0, [x19, #64]
    3330:	cbz	x0, 33e8 <PySequence_Fast@plt+0x1318>
    3334:	ldr	x0, [sp, #40]
    3338:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    333c:	add	x1, x1, #0x7a8
    3340:	bl	1dd0 <PyObject_GetAttrString@plt>
    3344:	mov	x20, x0
    3348:	cbz	x0, 33e8 <PySequence_Fast@plt+0x1318>
    334c:	bl	1f90 <PyObject_IsTrue@plt>
    3350:	strb	w0, [x19, #16]
    3354:	ldr	x0, [x20]
    3358:	sub	x0, x0, #0x1
    335c:	str	x0, [x20]
    3360:	cbz	x0, 3428 <PySequence_Fast@plt+0x1358>
    3364:	ldrsb	w0, [x19, #16]
    3368:	tbnz	w0, #31, 33e8 <PySequence_Fast@plt+0x1318>
    336c:	ldr	x0, [sp, #40]
    3370:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    3374:	add	x1, x1, #0x7b0
    3378:	bl	1dd0 <PyObject_GetAttrString@plt>
    337c:	str	x0, [x19, #24]
    3380:	cbz	x0, 33e8 <PySequence_Fast@plt+0x1318>
    3384:	ldr	x0, [sp, #40]
    3388:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    338c:	add	x1, x1, #0x7c0
    3390:	bl	1dd0 <PyObject_GetAttrString@plt>
    3394:	str	x0, [x19, #32]
    3398:	cbz	x0, 33e8 <PySequence_Fast@plt+0x1318>
    339c:	ldr	x0, [sp, #40]
    33a0:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    33a4:	add	x1, x1, #0x7d8
    33a8:	bl	1dd0 <PyObject_GetAttrString@plt>
    33ac:	str	x0, [x19, #40]
    33b0:	cbz	x0, 33e8 <PySequence_Fast@plt+0x1318>
    33b4:	ldr	x0, [sp, #40]
    33b8:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    33bc:	add	x1, x1, #0x7e8
    33c0:	bl	1dd0 <PyObject_GetAttrString@plt>
    33c4:	str	x0, [x19, #48]
    33c8:	cbz	x0, 33e8 <PySequence_Fast@plt+0x1318>
    33cc:	ldr	x0, [sp, #40]
    33d0:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    33d4:	add	x1, x1, #0x7f8
    33d8:	bl	1dd0 <PyObject_GetAttrString@plt>
    33dc:	str	x0, [x19, #56]
    33e0:	cbnz	x0, 33fc <PySequence_Fast@plt+0x132c>
    33e4:	nop
    33e8:	ldr	x0, [x19]
    33ec:	sub	x0, x0, #0x1
    33f0:	str	x0, [x19]
    33f4:	cbz	x0, 340c <PySequence_Fast@plt+0x133c>
    33f8:	mov	x19, #0x0                   	// #0
    33fc:	mov	x0, x19
    3400:	ldp	x19, x20, [sp, #16]
    3404:	ldp	x29, x30, [sp], #48
    3408:	ret
    340c:	mov	x0, x19
    3410:	mov	x19, #0x0                   	// #0
    3414:	bl	1e30 <_Py_Dealloc@plt>
    3418:	mov	x0, x19
    341c:	ldp	x19, x20, [sp, #16]
    3420:	ldp	x29, x30, [sp], #48
    3424:	ret
    3428:	mov	x0, x20
    342c:	bl	1e30 <_Py_Dealloc@plt>
    3430:	b	3364 <PySequence_Fast@plt+0x1294>
    3434:	nop
    3438:	stp	x29, x30, [sp, #-32]!
    343c:	mov	x29, sp
    3440:	str	x19, [sp, #16]
    3444:	mov	x19, x0
    3448:	ldr	x0, [x0, #24]
    344c:	cbz	x0, 3464 <PySequence_Fast@plt+0x1394>
    3450:	ldr	x1, [x0]
    3454:	str	xzr, [x19, #24]
    3458:	sub	x1, x1, #0x1
    345c:	str	x1, [x0]
    3460:	cbz	x1, 3534 <PySequence_Fast@plt+0x1464>
    3464:	ldr	x0, [x19, #32]
    3468:	cbz	x0, 3480 <PySequence_Fast@plt+0x13b0>
    346c:	ldr	x1, [x0]
    3470:	str	xzr, [x19, #32]
    3474:	sub	x1, x1, #0x1
    3478:	str	x1, [x0]
    347c:	cbz	x1, 352c <PySequence_Fast@plt+0x145c>
    3480:	ldr	x0, [x19, #40]
    3484:	cbz	x0, 349c <PySequence_Fast@plt+0x13cc>
    3488:	ldr	x1, [x0]
    348c:	str	xzr, [x19, #40]
    3490:	sub	x1, x1, #0x1
    3494:	str	x1, [x0]
    3498:	cbz	x1, 3524 <PySequence_Fast@plt+0x1454>
    349c:	ldr	x0, [x19, #48]
    34a0:	cbz	x0, 34b8 <PySequence_Fast@plt+0x13e8>
    34a4:	ldr	x1, [x0]
    34a8:	str	xzr, [x19, #48]
    34ac:	sub	x1, x1, #0x1
    34b0:	str	x1, [x0]
    34b4:	cbz	x1, 351c <PySequence_Fast@plt+0x144c>
    34b8:	ldr	x0, [x19, #56]
    34bc:	cbz	x0, 34d4 <PySequence_Fast@plt+0x1404>
    34c0:	ldr	x1, [x0]
    34c4:	str	xzr, [x19, #56]
    34c8:	sub	x1, x1, #0x1
    34cc:	str	x1, [x0]
    34d0:	cbz	x1, 3514 <PySequence_Fast@plt+0x1444>
    34d4:	ldr	x0, [x19, #64]
    34d8:	cbz	x0, 34f0 <PySequence_Fast@plt+0x1420>
    34dc:	ldr	x1, [x0]
    34e0:	str	xzr, [x19, #64]
    34e4:	sub	x1, x1, #0x1
    34e8:	str	x1, [x0]
    34ec:	cbz	x1, 3500 <PySequence_Fast@plt+0x1430>
    34f0:	mov	w0, #0x0                   	// #0
    34f4:	ldr	x19, [sp, #16]
    34f8:	ldp	x29, x30, [sp], #32
    34fc:	ret
    3500:	bl	1e30 <_Py_Dealloc@plt>
    3504:	mov	w0, #0x0                   	// #0
    3508:	ldr	x19, [sp, #16]
    350c:	ldp	x29, x30, [sp], #32
    3510:	ret
    3514:	bl	1e30 <_Py_Dealloc@plt>
    3518:	b	34d4 <PySequence_Fast@plt+0x1404>
    351c:	bl	1e30 <_Py_Dealloc@plt>
    3520:	b	34b8 <PySequence_Fast@plt+0x13e8>
    3524:	bl	1e30 <_Py_Dealloc@plt>
    3528:	b	349c <PySequence_Fast@plt+0x13cc>
    352c:	bl	1e30 <_Py_Dealloc@plt>
    3530:	b	3480 <PySequence_Fast@plt+0x13b0>
    3534:	bl	1e30 <_Py_Dealloc@plt>
    3538:	b	3464 <PySequence_Fast@plt+0x1394>
    353c:	nop
    3540:	stp	x29, x30, [sp, #-64]!
    3544:	mov	x29, sp
    3548:	stp	x21, x22, [sp, #32]
    354c:	adrp	x21, 19000 <PyInit__json@@Base+0x11a48>
    3550:	mov	x22, x2
    3554:	ldr	x5, [x21, #2312]
    3558:	stp	x19, x20, [sp, #16]
    355c:	mov	x19, x0
    3560:	mov	x20, x1
    3564:	cbz	x5, 35b8 <PySequence_Fast@plt+0x14e8>
    3568:	mov	x2, x19
    356c:	mov	x4, x22
    3570:	mov	x3, x20
    3574:	mov	x0, x5
    3578:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    357c:	add	x1, x1, #0x828
    3580:	bl	1f00 <PyObject_CallFunction@plt>
    3584:	mov	x19, x0
    3588:	cbz	x0, 35a8 <PySequence_Fast@plt+0x14d8>
    358c:	ldr	x0, [x21, #2312]
    3590:	mov	x1, x19
    3594:	bl	1e40 <PyErr_SetObject@plt>
    3598:	ldr	x0, [x19]
    359c:	sub	x0, x0, #0x1
    35a0:	str	x0, [x19]
    35a4:	cbz	x0, 3600 <PySequence_Fast@plt+0x1530>
    35a8:	ldp	x19, x20, [sp, #16]
    35ac:	ldp	x21, x22, [sp, #32]
    35b0:	ldp	x29, x30, [sp], #64
    35b4:	ret
    35b8:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    35bc:	add	x0, x0, #0x808
    35c0:	str	x23, [sp, #48]
    35c4:	bl	1f60 <PyImport_ImportModule@plt>
    35c8:	mov	x23, x0
    35cc:	cbz	x0, 3624 <PySequence_Fast@plt+0x1554>
    35d0:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    35d4:	add	x1, x1, #0x818
    35d8:	bl	1dd0 <PyObject_GetAttrString@plt>
    35dc:	mov	x5, x0
    35e0:	ldr	x1, [x23]
    35e4:	str	x0, [x21, #2312]
    35e8:	sub	x0, x1, #0x1
    35ec:	str	x0, [x23]
    35f0:	cbz	x0, 3614 <PySequence_Fast@plt+0x1544>
    35f4:	ldr	x23, [sp, #48]
    35f8:	cbnz	x5, 3568 <PySequence_Fast@plt+0x1498>
    35fc:	b	35a8 <PySequence_Fast@plt+0x14d8>
    3600:	mov	x0, x19
    3604:	ldp	x19, x20, [sp, #16]
    3608:	ldp	x21, x22, [sp, #32]
    360c:	ldp	x29, x30, [sp], #64
    3610:	b	1e30 <_Py_Dealloc@plt>
    3614:	mov	x0, x23
    3618:	bl	1e30 <_Py_Dealloc@plt>
    361c:	ldr	x5, [x21, #2312]
    3620:	b	35f4 <PySequence_Fast@plt+0x1524>
    3624:	ldr	x23, [sp, #48]
    3628:	b	35a8 <PySequence_Fast@plt+0x14d8>
    362c:	nop
    3630:	stp	x29, x30, [sp, #-144]!
    3634:	mov	x29, sp
    3638:	stp	x21, x22, [sp, #32]
    363c:	mov	x22, x1
    3640:	ldrb	w1, [x0, #32]
    3644:	stp	x23, x24, [sp, #48]
    3648:	mov	w23, w2
    364c:	sub	x2, x22, #0x1
    3650:	stp	x27, x28, [sp, #80]
    3654:	mov	x21, x0
    3658:	str	x3, [sp, #96]
    365c:	str	x2, [sp, #120]
    3660:	tbz	w1, #7, 39c0 <PySequence_Fast@plt+0x18f0>
    3664:	stp	x19, x20, [sp, #16]
    3668:	stp	x25, x26, [sp, #64]
    366c:	ldr	x28, [x21, #16]
    3670:	tbnz	w1, #5, 38a4 <PySequence_Fast@plt+0x17d4>
    3674:	ldrb	w8, [x21, #32]
    3678:	cmp	x22, #0x0
    367c:	ccmp	x22, x28, #0x0, ge  // ge = tcont
    3680:	mov	x27, #0x0                   	// #0
    3684:	mov	x26, #0x0                   	// #0
    3688:	ubfx	x25, x8, #2, #3
    368c:	ldr	x20, [x21, #72]
    3690:	b.gt	38d0 <PySequence_Fast@plt+0x1800>
    3694:	and	x0, x25, #0xff
    3698:	mov	w24, #0x5c                  	// #92
    369c:	str	x0, [sp, #112]
    36a0:	add	x0, sp, #0x8c
    36a4:	str	x0, [sp, #104]
    36a8:	str	wzr, [sp, #140]
    36ac:	cmp	x22, x28
    36b0:	b.ge	3cc0 <PySequence_Fast@plt+0x1bf0>  // b.tcont
    36b4:	mov	x19, x22
    36b8:	cmp	w25, #0x1
    36bc:	b.eq	385c <PySequence_Fast@plt+0x178c>  // b.none
    36c0:	cmp	w25, #0x2
    36c4:	b.ne	36e4 <PySequence_Fast@plt+0x1614>  // b.any
    36c8:	b	388c <PySequence_Fast@plt+0x17bc>
    36cc:	cmp	w23, #0x0
    36d0:	ccmp	w4, #0x1f, #0x2, ne  // ne = any
    36d4:	b.ls	396c <PySequence_Fast@plt+0x189c>  // b.plast
    36d8:	add	x19, x19, #0x1
    36dc:	cmp	x28, x19
    36e0:	b.eq	3cc0 <PySequence_Fast@plt+0x1bf0>  // b.none
    36e4:	ldr	w4, [x20, x19, lsl #2]
    36e8:	str	w4, [sp, #140]
    36ec:	cmp	w4, #0x22
    36f0:	ccmp	w4, w24, #0x4, ne  // ne = any
    36f4:	b.ne	36cc <PySequence_Fast@plt+0x15fc>  // b.any
    36f8:	cmp	w4, #0x22
    36fc:	ccmp	w4, w24, #0x4, ne  // ne = any
    3700:	b.ne	3cc0 <PySequence_Fast@plt+0x1bf0>  // b.any
    3704:	cmp	x22, x19
    3708:	b.eq	3754 <PySequence_Fast@plt+0x1684>  // b.none
    370c:	cbz	x27, 3734 <PySequence_Fast@plt+0x1664>
    3710:	cbz	x26, 3c3c <PySequence_Fast@plt+0x1b6c>
    3714:	mov	x1, x27
    3718:	mov	x0, x26
    371c:	bl	1eb0 <PyList_Append@plt>
    3720:	cbnz	w0, 3f70 <PySequence_Fast@plt+0x1ea0>
    3724:	ldr	x0, [x27]
    3728:	sub	x0, x0, #0x1
    372c:	str	x0, [x27]
    3730:	cbz	x0, 3c30 <PySequence_Fast@plt+0x1b60>
    3734:	ldr	x0, [sp, #112]
    3738:	sub	x2, x19, x22
    373c:	madd	x1, x0, x22, x20
    3740:	mov	w0, w25
    3744:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    3748:	mov	x27, x0
    374c:	cbz	x0, 37f8 <PySequence_Fast@plt+0x1728>
    3750:	ldr	w4, [sp, #140]
    3754:	cmp	w4, #0x22
    3758:	add	x2, x19, #0x1
    375c:	b.eq	3f90 <PySequence_Fast@plt+0x1ec0>  // b.none
    3760:	cmp	x28, x2
    3764:	b.eq	3cc0 <PySequence_Fast@plt+0x1bf0>  // b.none
    3768:	cmp	w25, #0x1
    376c:	b.eq	39dc <PySequence_Fast@plt+0x190c>  // b.none
    3770:	cmp	w25, #0x2
    3774:	b.eq	3bd0 <PySequence_Fast@plt+0x1b00>  // b.none
    3778:	ldr	w1, [x20, x2, lsl #2]
    377c:	str	w1, [sp, #140]
    3780:	cmp	w1, #0x75
    3784:	add	x22, x19, #0x2
    3788:	b.eq	39f0 <PySequence_Fast@plt+0x1920>  // b.none
    378c:	cmp	w1, #0x6e
    3790:	b.eq	3c94 <PySequence_Fast@plt+0x1bc4>  // b.none
    3794:	b.hi	394c <PySequence_Fast@plt+0x187c>  // b.pmore
    3798:	cmp	w1, #0x62
    379c:	b.eq	3ca0 <PySequence_Fast@plt+0x1bd0>  // b.none
    37a0:	b.ls	3914 <PySequence_Fast@plt+0x1844>  // b.plast
    37a4:	cmp	w1, #0x66
    37a8:	b.ne	3930 <PySequence_Fast@plt+0x1860>  // b.any
    37ac:	mov	w0, #0xc                   	// #12
    37b0:	str	w0, [sp, #140]
    37b4:	nop
    37b8:	cbz	x27, 37e0 <PySequence_Fast@plt+0x1710>
    37bc:	cbz	x26, 3bd8 <PySequence_Fast@plt+0x1b08>
    37c0:	mov	x1, x27
    37c4:	mov	x0, x26
    37c8:	bl	1eb0 <PyList_Append@plt>
    37cc:	cbnz	w0, 3f70 <PySequence_Fast@plt+0x1ea0>
    37d0:	ldr	x0, [x27]
    37d4:	sub	x0, x0, #0x1
    37d8:	str	x0, [x27]
    37dc:	cbz	x0, 3bc4 <PySequence_Fast@plt+0x1af4>
    37e0:	ldr	x1, [sp, #104]
    37e4:	mov	x2, #0x1                   	// #1
    37e8:	mov	w0, #0x4                   	// #4
    37ec:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    37f0:	mov	x27, x0
    37f4:	cbnz	x0, 36a8 <PySequence_Fast@plt+0x15d8>
    37f8:	ldr	x1, [sp, #96]
    37fc:	mov	x0, #0xffffffffffffffff    	// #-1
    3800:	str	x0, [x1]
    3804:	cbz	x26, 39b4 <PySequence_Fast@plt+0x18e4>
    3808:	ldr	x0, [x26]
    380c:	sub	x0, x0, #0x1
    3810:	str	x0, [x26]
    3814:	cbnz	x0, 39b4 <PySequence_Fast@plt+0x18e4>
    3818:	mov	x0, x26
    381c:	bl	1e30 <_Py_Dealloc@plt>
    3820:	ldp	x19, x20, [sp, #16]
    3824:	ldp	x25, x26, [sp, #64]
    3828:	mov	x27, #0x0                   	// #0
    382c:	mov	x0, x27
    3830:	ldp	x21, x22, [sp, #32]
    3834:	ldp	x23, x24, [sp, #48]
    3838:	ldp	x27, x28, [sp, #80]
    383c:	ldp	x29, x30, [sp], #144
    3840:	ret
    3844:	cmp	w23, #0x0
    3848:	ccmp	w4, #0x1f, #0x2, ne  // ne = any
    384c:	b.ls	396c <PySequence_Fast@plt+0x189c>  // b.plast
    3850:	add	x19, x19, #0x1
    3854:	cmp	x28, x19
    3858:	b.eq	3cc0 <PySequence_Fast@plt+0x1bf0>  // b.none
    385c:	ldrb	w4, [x20, x19]
    3860:	str	w4, [sp, #140]
    3864:	cmp	w4, #0x22
    3868:	ccmp	w4, w24, #0x4, ne  // ne = any
    386c:	b.ne	3844 <PySequence_Fast@plt+0x1774>  // b.any
    3870:	b	36f8 <PySequence_Fast@plt+0x1628>
    3874:	cmp	w23, #0x0
    3878:	ccmp	w4, #0x1f, #0x2, ne  // ne = any
    387c:	b.ls	3968 <PySequence_Fast@plt+0x1898>  // b.plast
    3880:	add	x19, x19, #0x1
    3884:	cmp	x28, x19
    3888:	b.eq	3cb8 <PySequence_Fast@plt+0x1be8>  // b.none
    388c:	ldrh	w4, [x20, x19, lsl #1]
    3890:	cmp	w4, #0x22
    3894:	ccmp	w4, w24, #0x4, ne  // ne = any
    3898:	b.ne	3874 <PySequence_Fast@plt+0x17a4>  // b.any
    389c:	str	w4, [sp, #140]
    38a0:	b	36f8 <PySequence_Fast@plt+0x1628>
    38a4:	ldrb	w8, [x21, #32]
    38a8:	tst	x1, #0x40
    38ac:	add	x20, x21, #0x30
    38b0:	add	x1, x21, #0x48
    38b4:	csel	x20, x1, x20, eq  // eq = none
    38b8:	cmp	x22, #0x0
    38bc:	ccmp	x22, x28, #0x0, ge  // ge = tcont
    38c0:	ubfx	x25, x8, #2, #3
    38c4:	mov	x27, #0x0                   	// #0
    38c8:	mov	x26, #0x0                   	// #0
    38cc:	b.le	3694 <PySequence_Fast@plt+0x15c4>
    38d0:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    38d4:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    38d8:	add	x1, x1, #0x830
    38dc:	ldr	x0, [x0, #3968]
    38e0:	ldr	x0, [x0]
    38e4:	bl	1e60 <PyErr_SetString@plt>
    38e8:	ldr	x1, [sp, #96]
    38ec:	mov	x0, #0xffffffffffffffff    	// #-1
    38f0:	ldp	x19, x20, [sp, #16]
    38f4:	ldp	x25, x26, [sp, #64]
    38f8:	str	x0, [x1]
    38fc:	mov	x0, x27
    3900:	ldp	x21, x22, [sp, #32]
    3904:	ldp	x23, x24, [sp, #48]
    3908:	ldp	x27, x28, [sp, #80]
    390c:	ldp	x29, x30, [sp], #144
    3910:	ret
    3914:	cmp	w1, #0x2f
    3918:	b.eq	37b8 <PySequence_Fast@plt+0x16e8>  // b.none
    391c:	cmp	w1, #0x5c
    3920:	b.eq	37b8 <PySequence_Fast@plt+0x16e8>  // b.none
    3924:	cmp	w1, #0x22
    3928:	b.eq	37b8 <PySequence_Fast@plt+0x16e8>  // b.none
    392c:	nop
    3930:	mov	x2, x19
    3934:	mov	x1, x21
    3938:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    393c:	add	x0, x0, #0x888
    3940:	str	wzr, [sp, #140]
    3944:	bl	3540 <PySequence_Fast@plt+0x1470>
    3948:	b	3980 <PySequence_Fast@plt+0x18b0>
    394c:	cmp	w1, #0x72
    3950:	b.eq	3cac <PySequence_Fast@plt+0x1bdc>  // b.none
    3954:	cmp	w1, #0x74
    3958:	b.ne	3930 <PySequence_Fast@plt+0x1860>  // b.any
    395c:	mov	w0, #0x9                   	// #9
    3960:	str	w0, [sp, #140]
    3964:	b	37b8 <PySequence_Fast@plt+0x16e8>
    3968:	str	w4, [sp, #140]
    396c:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    3970:	mov	x2, x19
    3974:	mov	x1, x21
    3978:	add	x0, x0, #0x848
    397c:	bl	3540 <PySequence_Fast@plt+0x1470>
    3980:	ldr	x1, [sp, #96]
    3984:	mov	x0, #0xffffffffffffffff    	// #-1
    3988:	str	x0, [x1]
    398c:	cbz	x26, 39a0 <PySequence_Fast@plt+0x18d0>
    3990:	ldr	x0, [x26]
    3994:	sub	x0, x0, #0x1
    3998:	str	x0, [x26]
    399c:	cbz	x0, 3c24 <PySequence_Fast@plt+0x1b54>
    39a0:	cbz	x27, 39b4 <PySequence_Fast@plt+0x18e4>
    39a4:	ldr	x0, [x27]
    39a8:	sub	x0, x0, #0x1
    39ac:	str	x0, [x27]
    39b0:	cbz	x0, 3bf8 <PySequence_Fast@plt+0x1b28>
    39b4:	ldp	x19, x20, [sp, #16]
    39b8:	ldp	x25, x26, [sp, #64]
    39bc:	b	3828 <PySequence_Fast@plt+0x1758>
    39c0:	bl	1db0 <_PyUnicode_Ready@plt>
    39c4:	cmn	w0, #0x1
    39c8:	b.eq	3828 <PySequence_Fast@plt+0x1758>  // b.none
    39cc:	ldrb	w1, [x21, #32]
    39d0:	stp	x19, x20, [sp, #16]
    39d4:	stp	x25, x26, [sp, #64]
    39d8:	b	366c <PySequence_Fast@plt+0x159c>
    39dc:	ldrb	w1, [x20, x2]
    39e0:	add	x22, x19, #0x2
    39e4:	str	w1, [sp, #140]
    39e8:	cmp	w1, #0x75
    39ec:	b.ne	378c <PySequence_Fast@plt+0x16bc>  // b.any
    39f0:	str	wzr, [sp, #140]
    39f4:	add	x4, x19, #0x6
    39f8:	cmp	x28, x4
    39fc:	b.le	3c80 <PySequence_Fast@plt+0x1bb0>
    3a00:	cmp	x4, x22
    3a04:	b.le	3cd8 <PySequence_Fast@plt+0x1c08>
    3a08:	cmp	w25, #0x1
    3a0c:	b.eq	3d58 <PySequence_Fast@plt+0x1c88>  // b.none
    3a10:	cmp	w25, #0x2
    3a14:	b.eq	3e5c <PySequence_Fast@plt+0x1d8c>  // b.none
    3a18:	ldr	w0, [x20, x22, lsl #2]
    3a1c:	lsl	x7, x22, #2
    3a20:	cmp	w0, #0x46
    3a24:	b.hi	3c50 <PySequence_Fast@plt+0x1b80>  // b.pmore
    3a28:	cmp	w0, #0x40
    3a2c:	b.hi	3ce0 <PySequence_Fast@plt+0x1c10>  // b.pmore
    3a30:	sub	w0, w0, #0x30
    3a34:	cmp	w0, #0x9
    3a38:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3a3c:	str	w0, [sp, #140]
    3a40:	add	x10, x19, #0x3
    3a44:	cmp	x4, x10
    3a48:	b.le	3cd8 <PySequence_Fast@plt+0x1c08>
    3a4c:	add	x11, x20, x7
    3a50:	lsl	w0, w0, #4
    3a54:	ldr	w1, [x11, #4]
    3a58:	str	w0, [sp, #140]
    3a5c:	cmp	w1, #0x46
    3a60:	b.hi	3e40 <PySequence_Fast@plt+0x1d70>  // b.pmore
    3a64:	cmp	w1, #0x40
    3a68:	b.hi	40a8 <PySequence_Fast@plt+0x1fd8>  // b.pmore
    3a6c:	sub	w1, w1, #0x30
    3a70:	cmp	w1, #0x9
    3a74:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3a78:	orr	w0, w1, w0
    3a7c:	str	w0, [sp, #140]
    3a80:	add	x1, x19, #0x4
    3a84:	cmp	x1, x4
    3a88:	b.ge	3afc <PySequence_Fast@plt+0x1a2c>  // b.tcont
    3a8c:	ldr	w7, [x11, #8]
    3a90:	lsl	w0, w0, #4
    3a94:	str	w0, [sp, #140]
    3a98:	cmp	w7, #0x46
    3a9c:	b.hi	400c <PySequence_Fast@plt+0x1f3c>  // b.pmore
    3aa0:	cmp	w7, #0x40
    3aa4:	b.hi	414c <PySequence_Fast@plt+0x207c>  // b.pmore
    3aa8:	sub	w7, w7, #0x30
    3aac:	cmp	w7, #0x9
    3ab0:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3ab4:	orr	w0, w7, w0
    3ab8:	str	w0, [sp, #140]
    3abc:	add	x10, x19, #0x5
    3ac0:	cmp	x10, x4
    3ac4:	b.ge	413c <PySequence_Fast@plt+0x206c>  // b.tcont
    3ac8:	ldr	w1, [x11, #12]
    3acc:	lsl	w0, w0, #4
    3ad0:	str	w0, [sp, #140]
    3ad4:	cmp	w1, #0x46
    3ad8:	b.hi	3f20 <PySequence_Fast@plt+0x1e50>  // b.pmore
    3adc:	cmp	w1, #0x40
    3ae0:	b.hi	40d0 <PySequence_Fast@plt+0x2000>  // b.pmore
    3ae4:	sub	w1, w1, #0x30
    3ae8:	cmp	w1, #0x9
    3aec:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3af0:	orr	w0, w1, w0
    3af4:	str	w0, [sp, #140]
    3af8:	mov	x1, x4
    3afc:	mov	w3, #0xffff2800            	// #-55296
    3b00:	add	w2, w0, w3
    3b04:	cmp	w2, #0x3ff
    3b08:	b.hi	3cd8 <PySequence_Fast@plt+0x1c08>  // b.pmore
    3b0c:	add	x22, x19, #0xc
    3b10:	cmp	x22, x28
    3b14:	b.ge	3cd8 <PySequence_Fast@plt+0x1c08>  // b.tcont
    3b18:	cmp	w25, #0x1
    3b1c:	add	x2, x10, #0x2
    3b20:	b.eq	40b0 <PySequence_Fast@plt+0x1fe0>  // b.none
    3b24:	cmp	w25, #0x2
    3b28:	b.eq	416c <PySequence_Fast@plt+0x209c>  // b.none
    3b2c:	ldr	w1, [x20, x1, lsl #2]
    3b30:	cmp	w1, #0x5c
    3b34:	b.ne	3cd8 <PySequence_Fast@plt+0x1c08>  // b.any
    3b38:	ldr	w1, [x20, x2, lsl #2]
    3b3c:	add	x10, x10, #0x3
    3b40:	cmp	w1, #0x75
    3b44:	cset	w1, eq  // eq = none
    3b48:	cbz	w1, 3cd8 <PySequence_Fast@plt+0x1c08>
    3b4c:	cmp	x22, x10
    3b50:	b.le	3cd8 <PySequence_Fast@plt+0x1c08>
    3b54:	cmp	w25, #0x1
    3b58:	mov	w1, #0x0                   	// #0
    3b5c:	b.eq	3ce8 <PySequence_Fast@plt+0x1c18>  // b.none
    3b60:	cmp	w25, #0x2
    3b64:	b.eq	3d20 <PySequence_Fast@plt+0x1c50>  // b.none
    3b68:	ldr	w2, [x20, x10, lsl #2]
    3b6c:	lsl	w1, w1, #4
    3b70:	sub	w11, w2, #0x30
    3b74:	cmp	w2, #0x46
    3b78:	b.hi	3c68 <PySequence_Fast@plt+0x1b98>  // b.pmore
    3b7c:	cmp	w2, #0x40
    3b80:	b.hi	41d0 <PySequence_Fast@plt+0x2100>  // b.pmore
    3b84:	cmp	w11, #0x9
    3b88:	b.hi	3c78 <PySequence_Fast@plt+0x1ba8>  // b.pmore
    3b8c:	orr	w1, w1, w11
    3b90:	add	x10, x10, #0x1
    3b94:	cmp	x10, x22
    3b98:	b.lt	3b68 <PySequence_Fast@plt+0x1a98>  // b.tstop
    3b9c:	mov	w2, #0xffff2400            	// #-56320
    3ba0:	add	w2, w1, w2
    3ba4:	cmp	w2, #0x3ff
    3ba8:	b.hi	3cd8 <PySequence_Fast@plt+0x1c08>  // b.pmore
    3bac:	ubfiz	w0, w0, #10, #10
    3bb0:	and	w1, w1, #0x3ff
    3bb4:	orr	w0, w0, w1
    3bb8:	add	w0, w0, #0x10, lsl #12
    3bbc:	str	w0, [sp, #140]
    3bc0:	b	37b8 <PySequence_Fast@plt+0x16e8>
    3bc4:	mov	x0, x27
    3bc8:	bl	1e30 <_Py_Dealloc@plt>
    3bcc:	b	37e0 <PySequence_Fast@plt+0x1710>
    3bd0:	ldrh	w1, [x20, x2, lsl #1]
    3bd4:	b	377c <PySequence_Fast@plt+0x16ac>
    3bd8:	mov	x0, #0x0                   	// #0
    3bdc:	bl	1da0 <PyList_New@plt>
    3be0:	mov	x26, x0
    3be4:	cbnz	x0, 37c0 <PySequence_Fast@plt+0x16f0>
    3be8:	ldr	x1, [sp, #96]
    3bec:	mov	x0, #0xffffffffffffffff    	// #-1
    3bf0:	str	x0, [x1]
    3bf4:	b	39a4 <PySequence_Fast@plt+0x18d4>
    3bf8:	mov	x0, x27
    3bfc:	mov	x27, #0x0                   	// #0
    3c00:	bl	1e30 <_Py_Dealloc@plt>
    3c04:	mov	x0, x27
    3c08:	ldp	x19, x20, [sp, #16]
    3c0c:	ldp	x21, x22, [sp, #32]
    3c10:	ldp	x23, x24, [sp, #48]
    3c14:	ldp	x25, x26, [sp, #64]
    3c18:	ldp	x27, x28, [sp, #80]
    3c1c:	ldp	x29, x30, [sp], #144
    3c20:	ret
    3c24:	mov	x0, x26
    3c28:	bl	1e30 <_Py_Dealloc@plt>
    3c2c:	b	39a0 <PySequence_Fast@plt+0x18d0>
    3c30:	mov	x0, x27
    3c34:	bl	1e30 <_Py_Dealloc@plt>
    3c38:	b	3734 <PySequence_Fast@plt+0x1664>
    3c3c:	mov	x0, #0x0                   	// #0
    3c40:	bl	1da0 <PyList_New@plt>
    3c44:	mov	x26, x0
    3c48:	cbnz	x0, 3714 <PySequence_Fast@plt+0x1644>
    3c4c:	b	3be8 <PySequence_Fast@plt+0x1b18>
    3c50:	sub	w1, w0, #0x61
    3c54:	cmp	w1, #0x5
    3c58:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3c5c:	sub	w0, w0, #0x57
    3c60:	str	w0, [sp, #140]
    3c64:	b	3a40 <PySequence_Fast@plt+0x1970>
    3c68:	sub	w11, w2, #0x61
    3c6c:	sub	w2, w2, #0x57
    3c70:	cmp	w11, #0x5
    3c74:	b.ls	41d4 <PySequence_Fast@plt+0x2104>  // b.plast
    3c78:	add	x2, x19, #0x7
    3c7c:	nop
    3c80:	mov	x1, x21
    3c84:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    3c88:	add	x0, x0, #0x898
    3c8c:	bl	3540 <PySequence_Fast@plt+0x1470>
    3c90:	b	3980 <PySequence_Fast@plt+0x18b0>
    3c94:	mov	w0, #0xa                   	// #10
    3c98:	str	w0, [sp, #140]
    3c9c:	b	37b8 <PySequence_Fast@plt+0x16e8>
    3ca0:	mov	w0, #0x8                   	// #8
    3ca4:	str	w0, [sp, #140]
    3ca8:	b	37b8 <PySequence_Fast@plt+0x16e8>
    3cac:	mov	w0, #0xd                   	// #13
    3cb0:	str	w0, [sp, #140]
    3cb4:	b	37b8 <PySequence_Fast@plt+0x16e8>
    3cb8:	str	w4, [sp, #140]
    3cbc:	nop
    3cc0:	ldr	x2, [sp, #120]
    3cc4:	mov	x1, x21
    3cc8:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    3ccc:	add	x0, x0, #0x868
    3cd0:	bl	3540 <PySequence_Fast@plt+0x1470>
    3cd4:	b	3980 <PySequence_Fast@plt+0x18b0>
    3cd8:	mov	x22, x4
    3cdc:	b	37b8 <PySequence_Fast@plt+0x16e8>
    3ce0:	sub	w0, w0, #0x37
    3ce4:	b	3a3c <PySequence_Fast@plt+0x196c>
    3ce8:	ldrb	w2, [x20, x10]
    3cec:	lsl	w1, w1, #4
    3cf0:	sub	w11, w2, #0x30
    3cf4:	cmp	w2, #0x46
    3cf8:	b.hi	41dc <PySequence_Fast@plt+0x210c>  // b.pmore
    3cfc:	cmp	w2, #0x40
    3d00:	b.hi	422c <PySequence_Fast@plt+0x215c>  // b.pmore
    3d04:	cmp	w11, #0x9
    3d08:	b.hi	3c78 <PySequence_Fast@plt+0x1ba8>  // b.pmore
    3d0c:	orr	w1, w1, w11
    3d10:	add	x10, x10, #0x1
    3d14:	cmp	x22, x10
    3d18:	b.gt	3ce8 <PySequence_Fast@plt+0x1c18>
    3d1c:	b	3b9c <PySequence_Fast@plt+0x1acc>
    3d20:	ldrh	w2, [x20, x10, lsl #1]
    3d24:	lsl	w11, w1, #4
    3d28:	sub	w12, w2, #0x30
    3d2c:	cmp	w2, #0x46
    3d30:	b.hi	41f4 <PySequence_Fast@plt+0x2124>  // b.pmore
    3d34:	orr	w1, w12, w11
    3d38:	cmp	w2, #0x40
    3d3c:	b.hi	4220 <PySequence_Fast@plt+0x2150>  // b.pmore
    3d40:	cmp	w12, #0x9
    3d44:	b.hi	3c78 <PySequence_Fast@plt+0x1ba8>  // b.pmore
    3d48:	add	x10, x10, #0x1
    3d4c:	cmp	x22, x10
    3d50:	b.gt	3d20 <PySequence_Fast@plt+0x1c50>
    3d54:	b	3b9c <PySequence_Fast@plt+0x1acc>
    3d58:	ldrb	w0, [x20, x22]
    3d5c:	cmp	w0, #0x46
    3d60:	b.hi	3e28 <PySequence_Fast@plt+0x1d58>  // b.pmore
    3d64:	cmp	w0, #0x40
    3d68:	b.hi	407c <PySequence_Fast@plt+0x1fac>  // b.pmore
    3d6c:	sub	w0, w0, #0x30
    3d70:	cmp	w0, #0x9
    3d74:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3d78:	str	w0, [sp, #140]
    3d7c:	add	x10, x19, #0x3
    3d80:	cmp	x4, x10
    3d84:	b.le	3cd8 <PySequence_Fast@plt+0x1c08>
    3d88:	ldrb	w1, [x20, x10]
    3d8c:	lsl	w0, w0, #4
    3d90:	str	w0, [sp, #140]
    3d94:	cmp	w1, #0x46
    3d98:	b.hi	3f54 <PySequence_Fast@plt+0x1e84>  // b.pmore
    3d9c:	cmp	w1, #0x40
    3da0:	b.hi	4134 <PySequence_Fast@plt+0x2064>  // b.pmore
    3da4:	sub	w1, w1, #0x30
    3da8:	cmp	w1, #0x9
    3dac:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3db0:	orr	w0, w1, w0
    3db4:	str	w0, [sp, #140]
    3db8:	add	x1, x19, #0x4
    3dbc:	cmp	x4, x1
    3dc0:	b.le	3afc <PySequence_Fast@plt+0x1a2c>
    3dc4:	ldrb	w7, [x20, x1]
    3dc8:	lsl	w0, w0, #4
    3dcc:	str	w0, [sp, #140]
    3dd0:	cmp	w7, #0x46
    3dd4:	b.hi	4044 <PySequence_Fast@plt+0x1f74>  // b.pmore
    3dd8:	cmp	w7, #0x40
    3ddc:	b.hi	4164 <PySequence_Fast@plt+0x2094>  // b.pmore
    3de0:	sub	w7, w7, #0x30
    3de4:	cmp	w7, #0x9
    3de8:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3dec:	orr	w0, w7, w0
    3df0:	str	w0, [sp, #140]
    3df4:	add	x10, x19, #0x5
    3df8:	cmp	x4, x10
    3dfc:	b.le	413c <PySequence_Fast@plt+0x206c>
    3e00:	ldrb	w1, [x20, x10]
    3e04:	lsl	w0, w0, #4
    3e08:	str	w0, [sp, #140]
    3e0c:	cmp	w1, #0x46
    3e10:	b.ls	3adc <PySequence_Fast@plt+0x1a0c>  // b.plast
    3e14:	sub	w7, w1, #0x61
    3e18:	cmp	w7, #0x5
    3e1c:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3e20:	sub	w1, w1, #0x57
    3e24:	b	3af0 <PySequence_Fast@plt+0x1a20>
    3e28:	sub	w1, w0, #0x61
    3e2c:	cmp	w1, #0x5
    3e30:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3e34:	sub	w0, w0, #0x57
    3e38:	str	w0, [sp, #140]
    3e3c:	b	3d7c <PySequence_Fast@plt+0x1cac>
    3e40:	sub	w7, w1, #0x61
    3e44:	cmp	w7, #0x5
    3e48:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3e4c:	sub	w1, w1, #0x57
    3e50:	orr	w0, w1, w0
    3e54:	str	w0, [sp, #140]
    3e58:	b	3a80 <PySequence_Fast@plt+0x19b0>
    3e5c:	lsl	x7, x22, #1
    3e60:	ldrh	w0, [x20, x7]
    3e64:	cmp	w0, #0x46
    3e68:	b.hi	3f3c <PySequence_Fast@plt+0x1e6c>  // b.pmore
    3e6c:	cmp	w0, #0x40
    3e70:	b.hi	409c <PySequence_Fast@plt+0x1fcc>  // b.pmore
    3e74:	sub	w0, w0, #0x30
    3e78:	cmp	w0, #0x9
    3e7c:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3e80:	str	w0, [sp, #140]
    3e84:	add	x10, x19, #0x3
    3e88:	cmp	x4, x10
    3e8c:	b.le	3cd8 <PySequence_Fast@plt+0x1c08>
    3e90:	add	x11, x20, x7
    3e94:	lsl	w0, w0, #4
    3e98:	ldrh	w1, [x11, #2]
    3e9c:	str	w0, [sp, #140]
    3ea0:	cmp	w1, #0x46
    3ea4:	b.hi	4028 <PySequence_Fast@plt+0x1f58>  // b.pmore
    3ea8:	cmp	w1, #0x40
    3eac:	b.hi	4154 <PySequence_Fast@plt+0x2084>  // b.pmore
    3eb0:	sub	w1, w1, #0x30
    3eb4:	cmp	w1, #0x9
    3eb8:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3ebc:	orr	w0, w1, w0
    3ec0:	str	w0, [sp, #140]
    3ec4:	add	x1, x19, #0x4
    3ec8:	cmp	x4, x1
    3ecc:	b.le	3afc <PySequence_Fast@plt+0x1a2c>
    3ed0:	ldrh	w7, [x11, #4]
    3ed4:	lsl	w0, w0, #4
    3ed8:	str	w0, [sp, #140]
    3edc:	cmp	w7, #0x46
    3ee0:	b.hi	4060 <PySequence_Fast@plt+0x1f90>  // b.pmore
    3ee4:	cmp	w7, #0x40
    3ee8:	b.hi	418c <PySequence_Fast@plt+0x20bc>  // b.pmore
    3eec:	sub	w7, w7, #0x30
    3ef0:	cmp	w7, #0x9
    3ef4:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3ef8:	orr	w0, w7, w0
    3efc:	str	w0, [sp, #140]
    3f00:	add	x10, x19, #0x5
    3f04:	cmp	x4, x10
    3f08:	b.le	413c <PySequence_Fast@plt+0x206c>
    3f0c:	ldrh	w1, [x11, #6]
    3f10:	lsl	w0, w0, #4
    3f14:	str	w0, [sp, #140]
    3f18:	cmp	w1, #0x46
    3f1c:	b.ls	3adc <PySequence_Fast@plt+0x1a0c>  // b.plast
    3f20:	sub	w7, w1, #0x61
    3f24:	cmp	w7, #0x5
    3f28:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3f2c:	sub	w1, w1, #0x57
    3f30:	orr	w0, w1, w0
    3f34:	str	w0, [sp, #140]
    3f38:	b	3af8 <PySequence_Fast@plt+0x1a28>
    3f3c:	sub	w1, w0, #0x61
    3f40:	cmp	w1, #0x5
    3f44:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3f48:	sub	w0, w0, #0x57
    3f4c:	str	w0, [sp, #140]
    3f50:	b	3e84 <PySequence_Fast@plt+0x1db4>
    3f54:	sub	w7, w1, #0x61
    3f58:	cmp	w7, #0x5
    3f5c:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    3f60:	sub	w1, w1, #0x57
    3f64:	orr	w0, w1, w0
    3f68:	str	w0, [sp, #140]
    3f6c:	b	3db8 <PySequence_Fast@plt+0x1ce8>
    3f70:	ldr	x0, [x27]
    3f74:	sub	x0, x0, #0x1
    3f78:	str	x0, [x27]
    3f7c:	cbz	x0, 4084 <PySequence_Fast@plt+0x1fb4>
    3f80:	ldr	x1, [sp, #96]
    3f84:	mov	x0, #0xffffffffffffffff    	// #-1
    3f88:	str	x0, [x1]
    3f8c:	b	3808 <PySequence_Fast@plt+0x1738>
    3f90:	cbz	x26, 4110 <PySequence_Fast@plt+0x2040>
    3f94:	cbz	x27, 3fc0 <PySequence_Fast@plt+0x1ef0>
    3f98:	mov	x1, x27
    3f9c:	mov	x0, x26
    3fa0:	str	x2, [sp, #104]
    3fa4:	bl	1eb0 <PyList_Append@plt>
    3fa8:	ldr	x2, [sp, #104]
    3fac:	cbnz	w0, 40d8 <PySequence_Fast@plt+0x2008>
    3fb0:	ldr	x0, [x27]
    3fb4:	sub	x0, x0, #0x1
    3fb8:	str	x0, [x27]
    3fbc:	cbz	x0, 420c <PySequence_Fast@plt+0x213c>
    3fc0:	adrp	x19, 19000 <PyInit__json@@Base+0x11a48>
    3fc4:	add	x19, x19, #0x908
    3fc8:	ldr	x0, [x19, #8]
    3fcc:	cbz	x0, 41ac <PySequence_Fast@plt+0x20dc>
    3fd0:	mov	x1, x26
    3fd4:	str	x2, [sp, #104]
    3fd8:	bl	1e00 <PyUnicode_Join@plt>
    3fdc:	mov	x27, x0
    3fe0:	cbz	x0, 40f0 <PySequence_Fast@plt+0x2020>
    3fe4:	ldr	x0, [x26]
    3fe8:	ldr	x2, [sp, #104]
    3fec:	sub	x0, x0, #0x1
    3ff0:	str	x0, [x26]
    3ff4:	cbz	x0, 419c <PySequence_Fast@plt+0x20cc>
    3ff8:	ldr	x0, [sp, #96]
    3ffc:	ldp	x19, x20, [sp, #16]
    4000:	ldp	x25, x26, [sp, #64]
    4004:	str	x2, [x0]
    4008:	b	382c <PySequence_Fast@plt+0x175c>
    400c:	sub	w10, w7, #0x61
    4010:	cmp	w10, #0x5
    4014:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    4018:	sub	w7, w7, #0x57
    401c:	orr	w0, w7, w0
    4020:	str	w0, [sp, #140]
    4024:	b	3abc <PySequence_Fast@plt+0x19ec>
    4028:	sub	w7, w1, #0x61
    402c:	cmp	w7, #0x5
    4030:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    4034:	sub	w1, w1, #0x57
    4038:	orr	w0, w1, w0
    403c:	str	w0, [sp, #140]
    4040:	b	3ec4 <PySequence_Fast@plt+0x1df4>
    4044:	sub	w10, w7, #0x61
    4048:	cmp	w10, #0x5
    404c:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    4050:	sub	w7, w7, #0x57
    4054:	orr	w0, w7, w0
    4058:	str	w0, [sp, #140]
    405c:	b	3df4 <PySequence_Fast@plt+0x1d24>
    4060:	sub	w10, w7, #0x61
    4064:	cmp	w10, #0x5
    4068:	b.hi	3c80 <PySequence_Fast@plt+0x1bb0>  // b.pmore
    406c:	sub	w7, w7, #0x57
    4070:	orr	w0, w7, w0
    4074:	str	w0, [sp, #140]
    4078:	b	3f00 <PySequence_Fast@plt+0x1e30>
    407c:	sub	w0, w0, #0x37
    4080:	b	3d78 <PySequence_Fast@plt+0x1ca8>
    4084:	mov	x0, x27
    4088:	bl	1e30 <_Py_Dealloc@plt>
    408c:	ldr	x1, [sp, #96]
    4090:	mov	x0, #0xffffffffffffffff    	// #-1
    4094:	str	x0, [x1]
    4098:	b	3808 <PySequence_Fast@plt+0x1738>
    409c:	sub	w0, w0, #0x37
    40a0:	str	w0, [sp, #140]
    40a4:	b	3e84 <PySequence_Fast@plt+0x1db4>
    40a8:	sub	w1, w1, #0x37
    40ac:	b	3a78 <PySequence_Fast@plt+0x19a8>
    40b0:	ldrb	w1, [x20, x1]
    40b4:	cmp	w1, #0x5c
    40b8:	b.ne	3cd8 <PySequence_Fast@plt+0x1c08>  // b.any
    40bc:	ldrb	w1, [x20, x2]
    40c0:	add	x10, x10, #0x3
    40c4:	cmp	w1, #0x75
    40c8:	cset	w1, eq  // eq = none
    40cc:	b	3b48 <PySequence_Fast@plt+0x1a78>
    40d0:	sub	w1, w1, #0x37
    40d4:	b	3af0 <PySequence_Fast@plt+0x1a20>
    40d8:	ldr	x0, [x27]
    40dc:	sub	x0, x0, #0x1
    40e0:	str	x0, [x27]
    40e4:	cbnz	x0, 40f0 <PySequence_Fast@plt+0x2020>
    40e8:	mov	x0, x27
    40ec:	bl	1e30 <_Py_Dealloc@plt>
    40f0:	ldr	x1, [sp, #96]
    40f4:	mov	x0, #0xffffffffffffffff    	// #-1
    40f8:	str	x0, [x1]
    40fc:	ldr	x0, [x26]
    4100:	sub	x0, x0, #0x1
    4104:	str	x0, [x26]
    4108:	cbnz	x0, 39b4 <PySequence_Fast@plt+0x18e4>
    410c:	b	3818 <PySequence_Fast@plt+0x1748>
    4110:	cbnz	x27, 3ff8 <PySequence_Fast@plt+0x1f28>
    4114:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    4118:	mov	x1, #0x0                   	// #0
    411c:	add	x0, x0, #0xc28
    4120:	str	x2, [sp, #104]
    4124:	bl	2050 <PyUnicode_FromStringAndSize@plt>
    4128:	mov	x27, x0
    412c:	ldr	x2, [sp, #104]
    4130:	b	3ff8 <PySequence_Fast@plt+0x1f28>
    4134:	sub	w1, w1, #0x37
    4138:	b	3db0 <PySequence_Fast@plt+0x1ce0>
    413c:	mov	x2, x10
    4140:	mov	x10, x1
    4144:	mov	x1, x2
    4148:	b	3afc <PySequence_Fast@plt+0x1a2c>
    414c:	sub	w7, w7, #0x37
    4150:	b	3ab4 <PySequence_Fast@plt+0x19e4>
    4154:	sub	w1, w1, #0x37
    4158:	orr	w0, w1, w0
    415c:	str	w0, [sp, #140]
    4160:	b	3ec4 <PySequence_Fast@plt+0x1df4>
    4164:	sub	w7, w7, #0x37
    4168:	b	3dec <PySequence_Fast@plt+0x1d1c>
    416c:	ldrh	w1, [x20, x1, lsl #1]
    4170:	cmp	w1, #0x5c
    4174:	b.ne	3cd8 <PySequence_Fast@plt+0x1c08>  // b.any
    4178:	ldrh	w1, [x20, x2, lsl #1]
    417c:	add	x10, x10, #0x3
    4180:	cmp	w1, #0x75
    4184:	cset	w1, eq  // eq = none
    4188:	b	3b48 <PySequence_Fast@plt+0x1a78>
    418c:	sub	w7, w7, #0x37
    4190:	orr	w0, w7, w0
    4194:	str	w0, [sp, #140]
    4198:	b	3f00 <PySequence_Fast@plt+0x1e30>
    419c:	mov	x0, x26
    41a0:	bl	1e30 <_Py_Dealloc@plt>
    41a4:	ldr	x2, [sp, #104]
    41a8:	b	3ff8 <PySequence_Fast@plt+0x1f28>
    41ac:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    41b0:	mov	x1, #0x0                   	// #0
    41b4:	add	x0, x0, #0xc28
    41b8:	str	x2, [sp, #104]
    41bc:	bl	2050 <PyUnicode_FromStringAndSize@plt>
    41c0:	str	x0, [x19, #8]
    41c4:	ldr	x2, [sp, #104]
    41c8:	cbnz	x0, 3fd0 <PySequence_Fast@plt+0x1f00>
    41cc:	b	40f0 <PySequence_Fast@plt+0x2020>
    41d0:	sub	w2, w2, #0x37
    41d4:	orr	w1, w2, w1
    41d8:	b	3b90 <PySequence_Fast@plt+0x1ac0>
    41dc:	sub	w11, w2, #0x61
    41e0:	sub	w2, w2, #0x57
    41e4:	cmp	w11, #0x5
    41e8:	b.hi	3c78 <PySequence_Fast@plt+0x1ba8>  // b.pmore
    41ec:	orr	w1, w2, w1
    41f0:	b	3d10 <PySequence_Fast@plt+0x1c40>
    41f4:	sub	w12, w2, #0x61
    41f8:	sub	w1, w2, #0x57
    41fc:	cmp	w12, #0x5
    4200:	b.hi	3c78 <PySequence_Fast@plt+0x1ba8>  // b.pmore
    4204:	orr	w1, w1, w11
    4208:	b	3d48 <PySequence_Fast@plt+0x1c78>
    420c:	mov	x0, x27
    4210:	str	x2, [sp, #104]
    4214:	bl	1e30 <_Py_Dealloc@plt>
    4218:	ldr	x2, [sp, #104]
    421c:	b	3fc0 <PySequence_Fast@plt+0x1ef0>
    4220:	sub	w1, w2, #0x37
    4224:	orr	w1, w1, w11
    4228:	b	3d48 <PySequence_Fast@plt+0x1c78>
    422c:	sub	w2, w2, #0x37
    4230:	orr	w1, w2, w1
    4234:	b	3d10 <PySequence_Fast@plt+0x1c40>
    4238:	stp	x29, x30, [sp, #-48]!
    423c:	mov	x29, sp
    4240:	stp	x19, x20, [sp, #16]
    4244:	mov	x19, x0
    4248:	mov	x20, x1
    424c:	ldr	x0, [x0, #24]
    4250:	str	x21, [sp, #32]
    4254:	mov	x21, x2
    4258:	cbz	x0, 4268 <PySequence_Fast@plt+0x2198>
    425c:	mov	x1, x2
    4260:	blr	x20
    4264:	cbnz	w0, 42c4 <PySequence_Fast@plt+0x21f4>
    4268:	ldr	x0, [x19, #32]
    426c:	cbz	x0, 427c <PySequence_Fast@plt+0x21ac>
    4270:	mov	x1, x21
    4274:	blr	x20
    4278:	cbnz	w0, 42c4 <PySequence_Fast@plt+0x21f4>
    427c:	ldr	x0, [x19, #40]
    4280:	cbz	x0, 4290 <PySequence_Fast@plt+0x21c0>
    4284:	mov	x1, x21
    4288:	blr	x20
    428c:	cbnz	w0, 42c4 <PySequence_Fast@plt+0x21f4>
    4290:	ldr	x0, [x19, #48]
    4294:	cbz	x0, 42a4 <PySequence_Fast@plt+0x21d4>
    4298:	mov	x1, x21
    429c:	blr	x20
    42a0:	cbnz	w0, 42c4 <PySequence_Fast@plt+0x21f4>
    42a4:	ldr	x0, [x19, #56]
    42a8:	cbz	x0, 42c4 <PySequence_Fast@plt+0x21f4>
    42ac:	mov	x1, x21
    42b0:	mov	x16, x20
    42b4:	ldp	x19, x20, [sp, #16]
    42b8:	ldr	x21, [sp, #32]
    42bc:	ldp	x29, x30, [sp], #48
    42c0:	br	x16
    42c4:	ldp	x19, x20, [sp, #16]
    42c8:	ldr	x21, [sp, #32]
    42cc:	ldp	x29, x30, [sp], #48
    42d0:	ret
    42d4:	nop
    42d8:	stp	x29, x30, [sp, #-48]!
    42dc:	mov	x29, sp
    42e0:	stp	x19, x20, [sp, #16]
    42e4:	mov	x19, x0
    42e8:	mov	x20, x1
    42ec:	ldr	x0, [x0, #16]
    42f0:	str	x21, [sp, #32]
    42f4:	mov	x21, x2
    42f8:	cbz	x0, 4308 <PySequence_Fast@plt+0x2238>
    42fc:	mov	x1, x2
    4300:	blr	x20
    4304:	cbnz	w0, 4378 <PySequence_Fast@plt+0x22a8>
    4308:	ldr	x0, [x19, #24]
    430c:	cbz	x0, 431c <PySequence_Fast@plt+0x224c>
    4310:	mov	x1, x21
    4314:	blr	x20
    4318:	cbnz	w0, 4378 <PySequence_Fast@plt+0x22a8>
    431c:	ldr	x0, [x19, #32]
    4320:	cbz	x0, 4330 <PySequence_Fast@plt+0x2260>
    4324:	mov	x1, x21
    4328:	blr	x20
    432c:	cbnz	w0, 4378 <PySequence_Fast@plt+0x22a8>
    4330:	ldr	x0, [x19, #40]
    4334:	cbz	x0, 4344 <PySequence_Fast@plt+0x2274>
    4338:	mov	x1, x21
    433c:	blr	x20
    4340:	cbnz	w0, 4378 <PySequence_Fast@plt+0x22a8>
    4344:	ldr	x0, [x19, #48]
    4348:	cbz	x0, 4358 <PySequence_Fast@plt+0x2288>
    434c:	mov	x1, x21
    4350:	blr	x20
    4354:	cbnz	w0, 4378 <PySequence_Fast@plt+0x22a8>
    4358:	ldr	x0, [x19, #56]
    435c:	cbz	x0, 4378 <PySequence_Fast@plt+0x22a8>
    4360:	mov	x1, x21
    4364:	mov	x16, x20
    4368:	ldp	x19, x20, [sp, #16]
    436c:	ldr	x21, [sp, #32]
    4370:	ldp	x29, x30, [sp], #48
    4374:	br	x16
    4378:	ldp	x19, x20, [sp, #16]
    437c:	ldr	x21, [sp, #32]
    4380:	ldp	x29, x30, [sp], #48
    4384:	ret
    4388:	stp	x29, x30, [sp, #-48]!
    438c:	mov	x29, sp
    4390:	stp	x19, x20, [sp, #16]
    4394:	mov	x20, x0
    4398:	mov	x0, x1
    439c:	stp	x21, x22, [sp, #32]
    43a0:	mov	x21, x2
    43a4:	mov	x22, x3
    43a8:	bl	2000 <PyUnicode_InternFromString@plt>
    43ac:	cbz	x0, 4404 <PySequence_Fast@plt+0x2334>
    43b0:	mov	x19, x0
    43b4:	mov	x1, x0
    43b8:	ldr	x0, [x20]
    43bc:	mov	x2, #0x0                   	// #0
    43c0:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    43c4:	mov	x20, x0
    43c8:	ldr	x1, [x19]
    43cc:	ldr	x2, [x19, #16]
    43d0:	sub	x1, x1, #0x1
    43d4:	str	x1, [x19]
    43d8:	add	x21, x21, x2
    43dc:	cbz	x1, 43f8 <PySequence_Fast@plt+0x2328>
    43e0:	str	x21, [x22]
    43e4:	mov	x0, x20
    43e8:	ldp	x19, x20, [sp, #16]
    43ec:	ldp	x21, x22, [sp, #32]
    43f0:	ldp	x29, x30, [sp], #48
    43f4:	ret
    43f8:	mov	x0, x19
    43fc:	bl	1e30 <_Py_Dealloc@plt>
    4400:	b	43e0 <PySequence_Fast@plt+0x2310>
    4404:	mov	x20, #0x0                   	// #0
    4408:	mov	x0, x20
    440c:	ldp	x19, x20, [sp, #16]
    4410:	ldp	x21, x22, [sp, #32]
    4414:	ldp	x29, x30, [sp], #48
    4418:	ret
    441c:	nop
    4420:	stp	x29, x30, [sp, #-80]!
    4424:	mov	x5, #0xffffffffffffffff    	// #-1
    4428:	mov	w6, #0x1                   	// #1
    442c:	mov	x29, sp
    4430:	mov	x0, x1
    4434:	add	x4, sp, #0x34
    4438:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    443c:	add	x3, sp, #0x40
    4440:	add	x1, x1, #0x8b0
    4444:	add	x2, sp, #0x38
    4448:	stp	x19, x20, [sp, #16]
    444c:	str	w6, [sp, #52]
    4450:	str	x5, [sp, #72]
    4454:	bl	1fa0 <PyArg_ParseTuple@plt>
    4458:	cbz	w0, 44d4 <PySequence_Fast@plt+0x2404>
    445c:	ldr	x0, [sp, #56]
    4460:	ldr	x1, [x0, #8]
    4464:	ldr	x2, [x1, #168]
    4468:	tbz	w2, #28, 44e8 <PySequence_Fast@plt+0x2418>
    446c:	ldr	w2, [sp, #52]
    4470:	add	x3, sp, #0x48
    4474:	ldr	x1, [sp, #64]
    4478:	bl	3630 <PySequence_Fast@plt+0x1560>
    447c:	mov	x20, x0
    4480:	ldr	x0, [sp, #72]
    4484:	cbz	x20, 44d4 <PySequence_Fast@plt+0x2404>
    4488:	str	x21, [sp, #32]
    448c:	bl	1e80 <PyLong_FromSsize_t@plt>
    4490:	mov	x21, x0
    4494:	cbz	x0, 44c0 <PySequence_Fast@plt+0x23f0>
    4498:	mov	x0, #0x2                   	// #2
    449c:	bl	1f10 <PyTuple_New@plt>
    44a0:	mov	x19, x0
    44a4:	cbz	x0, 452c <PySequence_Fast@plt+0x245c>
    44a8:	stp	x20, x21, [x0, #24]
    44ac:	ldr	x21, [sp, #32]
    44b0:	mov	x0, x19
    44b4:	ldp	x19, x20, [sp, #16]
    44b8:	ldp	x29, x30, [sp], #80
    44bc:	ret
    44c0:	ldr	x0, [x20]
    44c4:	sub	x0, x0, #0x1
    44c8:	str	x0, [x20]
    44cc:	cbz	x0, 4518 <PySequence_Fast@plt+0x2448>
    44d0:	ldr	x21, [sp, #32]
    44d4:	mov	x19, #0x0                   	// #0
    44d8:	mov	x0, x19
    44dc:	ldp	x19, x20, [sp, #16]
    44e0:	ldp	x29, x30, [sp], #80
    44e4:	ret
    44e8:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    44ec:	mov	x19, #0x0                   	// #0
    44f0:	ldr	x2, [x1, #24]
    44f4:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    44f8:	ldr	x0, [x0, #3976]
    44fc:	add	x1, x1, #0x768
    4500:	ldr	x0, [x0]
    4504:	bl	2040 <PyErr_Format@plt>
    4508:	mov	x0, x19
    450c:	ldp	x19, x20, [sp, #16]
    4510:	ldp	x29, x30, [sp], #80
    4514:	ret
    4518:	mov	x0, x20
    451c:	mov	x19, #0x0                   	// #0
    4520:	bl	1e30 <_Py_Dealloc@plt>
    4524:	ldr	x21, [sp, #32]
    4528:	b	44b0 <PySequence_Fast@plt+0x23e0>
    452c:	ldr	x0, [x21]
    4530:	sub	x0, x0, #0x1
    4534:	str	x0, [x21]
    4538:	cbz	x0, 455c <PySequence_Fast@plt+0x248c>
    453c:	ldr	x0, [x20]
    4540:	sub	x0, x0, #0x1
    4544:	str	x0, [x20]
    4548:	cbnz	x0, 44d0 <PySequence_Fast@plt+0x2400>
    454c:	mov	x0, x20
    4550:	bl	1e30 <_Py_Dealloc@plt>
    4554:	ldr	x21, [sp, #32]
    4558:	b	44b0 <PySequence_Fast@plt+0x23e0>
    455c:	mov	x0, x21
    4560:	bl	1e30 <_Py_Dealloc@plt>
    4564:	b	453c <PySequence_Fast@plt+0x246c>
    4568:	stp	x29, x30, [sp, #-176]!
    456c:	mov	x29, sp
    4570:	stp	x23, x24, [sp, #48]
    4574:	adrp	x24, 18000 <PyInit__json@@Base+0x10a48>
    4578:	stp	x19, x20, [sp, #16]
    457c:	ldr	x20, [x24, #4016]
    4580:	stp	x21, x22, [sp, #32]
    4584:	stp	x25, x26, [sp, #64]
    4588:	cmp	x2, x20
    458c:	mov	x26, x1
    4590:	b.eq	4920 <PySequence_Fast@plt+0x2850>  // b.none
    4594:	adrp	x25, 18000 <PyInit__json@@Base+0x10a48>
    4598:	stp	x27, x28, [sp, #80]
    459c:	adrp	x27, 18000 <PyInit__json@@Base+0x10a48>
    45a0:	mov	x28, x0
    45a4:	mov	x19, x2
    45a8:	ldr	x0, [x25, #3992]
    45ac:	ldr	x2, [x27, #4024]
    45b0:	cmp	x19, x0
    45b4:	ccmp	x19, x2, #0x4, ne  // ne = any
    45b8:	b.ne	4620 <PySequence_Fast@plt+0x2550>  // b.any
    45bc:	adrp	x20, 19000 <PyInit__json@@Base+0x11a48>
    45c0:	cmp	x19, x2
    45c4:	add	x20, x20, #0x908
    45c8:	b.eq	4940 <PySequence_Fast@plt+0x2870>  // b.none
    45cc:	ldr	x19, [x20, #32]
    45d0:	cbz	x19, 4968 <PySequence_Fast@plt+0x2898>
    45d4:	ldr	x0, [x19]
    45d8:	ldp	x27, x28, [sp, #80]
    45dc:	add	x0, x0, #0x1
    45e0:	str	x0, [x19]
    45e4:	mov	x1, x19
    45e8:	mov	x0, x26
    45ec:	bl	1e70 <_PyAccu_Accumulate@plt>
    45f0:	mov	w22, w0
    45f4:	ldr	x1, [x19]
    45f8:	sub	x1, x1, #0x1
    45fc:	str	x1, [x19]
    4600:	cbz	x1, 48fc <PySequence_Fast@plt+0x282c>
    4604:	mov	w0, w22
    4608:	ldp	x19, x20, [sp, #16]
    460c:	ldp	x21, x22, [sp, #32]
    4610:	ldp	x23, x24, [sp, #48]
    4614:	ldp	x25, x26, [sp, #64]
    4618:	ldp	x29, x30, [sp], #176
    461c:	ret
    4620:	ldr	x0, [x19, #8]
    4624:	ldr	x1, [x0, #168]
    4628:	tbz	w1, #28, 4688 <PySequence_Fast@plt+0x25b8>
    462c:	ldr	x2, [x28, #72]
    4630:	cbz	x2, 4850 <PySequence_Fast@plt+0x2780>
    4634:	mov	x1, x19
    4638:	mov	x0, #0x0                   	// #0
    463c:	blr	x2
    4640:	mov	x19, x0
    4644:	cbz	x0, 4828 <PySequence_Fast@plt+0x2758>
    4648:	mov	x1, x19
    464c:	mov	x0, x26
    4650:	bl	1e70 <_PyAccu_Accumulate@plt>
    4654:	mov	w22, w0
    4658:	ldr	x1, [x19]
    465c:	sub	x0, x1, #0x1
    4660:	str	x0, [x19]
    4664:	cbz	x0, 47e0 <PySequence_Fast@plt+0x2710>
    4668:	mov	w0, w22
    466c:	ldp	x19, x20, [sp, #16]
    4670:	ldp	x21, x22, [sp, #32]
    4674:	ldp	x23, x24, [sp, #48]
    4678:	ldp	x25, x26, [sp, #64]
    467c:	ldp	x27, x28, [sp, #80]
    4680:	ldp	x29, x30, [sp], #176
    4684:	ret
    4688:	tbnz	w1, #24, 4808 <PySequence_Fast@plt+0x2738>
    468c:	adrp	x23, 18000 <PyInit__json@@Base+0x10a48>
    4690:	ldr	x1, [x23, #3952]
    4694:	cmp	x0, x1
    4698:	b.eq	48b4 <PySequence_Fast@plt+0x27e4>  // b.none
    469c:	mov	x21, x3
    46a0:	bl	2030 <PyType_IsSubtype@plt>
    46a4:	mov	w22, w0
    46a8:	cbnz	w0, 48b4 <PySequence_Fast@plt+0x27e4>
    46ac:	ldr	x0, [x19, #8]
    46b0:	ldr	x0, [x0, #168]
    46b4:	tst	x0, #0x6000000
    46b8:	b.ne	49d0 <PySequence_Fast@plt+0x2900>  // b.any
    46bc:	tbnz	w0, #29, 4b40 <PySequence_Fast@plt+0x2a70>
    46c0:	ldr	x0, [x28, #16]
    46c4:	cmp	x0, x20
    46c8:	b.eq	4c7c <PySequence_Fast@plt+0x2bac>  // b.none
    46cc:	mov	x0, x19
    46d0:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    46d4:	mov	x23, x0
    46d8:	cbz	x0, 4828 <PySequence_Fast@plt+0x2758>
    46dc:	mov	x1, x0
    46e0:	ldr	x0, [x28, #16]
    46e4:	bl	1e10 <PyDict_Contains@plt>
    46e8:	cbnz	w0, 5254 <PySequence_Fast@plt+0x3184>
    46ec:	ldr	x0, [x28, #16]
    46f0:	mov	x2, x19
    46f4:	mov	x1, x23
    46f8:	bl	2020 <PyDict_SetItem@plt>
    46fc:	cbnz	w0, 5274 <PySequence_Fast@plt+0x31a4>
    4700:	ldr	x0, [x28, #24]
    4704:	mov	x1, x19
    4708:	mov	x2, #0x0                   	// #0
    470c:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    4710:	mov	x19, x0
    4714:	cbz	x0, 5274 <PySequence_Fast@plt+0x31a4>
    4718:	adrp	x20, 18000 <PyInit__json@@Base+0x10a48>
    471c:	bl	1f20 <PyThreadState_Get@plt>
    4720:	ldr	w1, [x0, #32]
    4724:	ldr	x2, [x20, #3984]
    4728:	add	w1, w1, #0x1
    472c:	str	w1, [x0, #32]
    4730:	ldr	w0, [x2]
    4734:	cmp	w1, w0
    4738:	b.le	474c <PySequence_Fast@plt+0x267c>
    473c:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    4740:	add	x0, x0, #0x968
    4744:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    4748:	cbnz	w0, 533c <PySequence_Fast@plt+0x326c>
    474c:	mov	x3, x21
    4750:	mov	x1, x26
    4754:	mov	x2, x19
    4758:	mov	x0, x28
    475c:	bl	4568 <PySequence_Fast@plt+0x2498>
    4760:	mov	w22, w0
    4764:	bl	1f20 <PyThreadState_Get@plt>
    4768:	ldr	w2, [x0, #32]
    476c:	ldr	x20, [x20, #3984]
    4770:	sub	w2, w2, #0x1
    4774:	str	w2, [x0, #32]
    4778:	ldr	w1, [x20]
    477c:	cmp	w1, #0xc9
    4780:	sub	w3, w1, #0x32
    4784:	asr	w1, w1, #2
    4788:	add	w1, w1, w1, lsl #1
    478c:	csel	w1, w1, w3, lt  // lt = tstop
    4790:	cmp	w2, w1
    4794:	b.lt	4c70 <PySequence_Fast@plt+0x2ba0>  // b.tstop
    4798:	ldr	x0, [x19]
    479c:	sub	x0, x0, #0x1
    47a0:	str	x0, [x19]
    47a4:	cbz	x0, 49a4 <PySequence_Fast@plt+0x28d4>
    47a8:	cbnz	w22, 5354 <PySequence_Fast@plt+0x3284>
    47ac:	cbz	x23, 4668 <PySequence_Fast@plt+0x2598>
    47b0:	ldr	x0, [x28, #16]
    47b4:	mov	x1, x23
    47b8:	bl	1f30 <PyDict_DelItem@plt>
    47bc:	cbnz	w0, 5274 <PySequence_Fast@plt+0x31a4>
    47c0:	ldr	x0, [x23]
    47c4:	sub	x0, x0, #0x1
    47c8:	str	x0, [x23]
    47cc:	cbnz	x0, 4668 <PySequence_Fast@plt+0x2598>
    47d0:	mov	x0, x23
    47d4:	bl	1e30 <_Py_Dealloc@plt>
    47d8:	ldp	x27, x28, [sp, #80]
    47dc:	b	4604 <PySequence_Fast@plt+0x2534>
    47e0:	mov	x0, x19
    47e4:	bl	1e30 <_Py_Dealloc@plt>
    47e8:	mov	w0, w22
    47ec:	ldp	x19, x20, [sp, #16]
    47f0:	ldp	x21, x22, [sp, #32]
    47f4:	ldp	x23, x24, [sp, #48]
    47f8:	ldp	x25, x26, [sp, #64]
    47fc:	ldp	x27, x28, [sp, #80]
    4800:	ldp	x29, x30, [sp], #176
    4804:	ret
    4808:	adrp	x1, 18000 <PyInit__json@@Base+0x10a48>
    480c:	mov	x0, x19
    4810:	ldr	x1, [x1, #4032]
    4814:	ldr	x1, [x1, #88]
    4818:	blr	x1
    481c:	mov	x19, x0
    4820:	cbnz	x0, 4648 <PySequence_Fast@plt+0x2578>
    4824:	nop
    4828:	ldp	x27, x28, [sp, #80]
    482c:	nop
    4830:	mov	w22, #0xffffffff            	// #-1
    4834:	mov	w0, w22
    4838:	ldp	x19, x20, [sp, #16]
    483c:	ldp	x21, x22, [sp, #32]
    4840:	ldp	x23, x24, [sp, #48]
    4844:	ldp	x25, x26, [sp, #64]
    4848:	ldp	x29, x30, [sp], #176
    484c:	ret
    4850:	ldr	x0, [x28, #32]
    4854:	mov	x1, x19
    4858:	mov	x2, #0x0                   	// #0
    485c:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    4860:	mov	x19, x0
    4864:	cbz	x0, 4828 <PySequence_Fast@plt+0x2758>
    4868:	ldr	x0, [x0, #8]
    486c:	ldr	x1, [x0, #168]
    4870:	tbnz	w1, #28, 4648 <PySequence_Fast@plt+0x2578>
    4874:	adrp	x3, 18000 <PyInit__json@@Base+0x10a48>
    4878:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    487c:	ldr	x2, [x0, #24]
    4880:	add	x1, x1, #0x8d8
    4884:	ldr	x3, [x3, #3976]
    4888:	ldr	x0, [x3]
    488c:	bl	2040 <PyErr_Format@plt>
    4890:	ldr	x0, [x19]
    4894:	sub	x0, x0, #0x1
    4898:	str	x0, [x19]
    489c:	cbnz	x0, 4828 <PySequence_Fast@plt+0x2758>
    48a0:	mov	x0, x19
    48a4:	mov	w22, #0xffffffff            	// #-1
    48a8:	bl	1e30 <_Py_Dealloc@plt>
    48ac:	ldp	x27, x28, [sp, #80]
    48b0:	b	4604 <PySequence_Fast@plt+0x2534>
    48b4:	ldr	d1, [x19, #16]
    48b8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    48bc:	fmov	d0, x0
    48c0:	fabs	d2, d1
    48c4:	fcmp	d2, d0
    48c8:	b.ls	4988 <PySequence_Fast@plt+0x28b8>  // b.plast
    48cc:	ldr	w0, [x28, #68]
    48d0:	cbz	w0, 4d24 <PySequence_Fast@plt+0x2c54>
    48d4:	fcmpe	d1, #0.0
    48d8:	b.gt	4b28 <PySequence_Fast@plt+0x2a58>
    48dc:	b.mi	4b10 <PySequence_Fast@plt+0x2a40>  // b.first
    48e0:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    48e4:	add	x0, x0, #0x960
    48e8:	bl	1fe0 <PyUnicode_FromString@plt>
    48ec:	mov	x19, x0
    48f0:	cbnz	x19, 4648 <PySequence_Fast@plt+0x2578>
    48f4:	ldp	x27, x28, [sp, #80]
    48f8:	b	4830 <PySequence_Fast@plt+0x2760>
    48fc:	mov	x0, x19
    4900:	bl	1e30 <_Py_Dealloc@plt>
    4904:	mov	w0, w22
    4908:	ldp	x19, x20, [sp, #16]
    490c:	ldp	x21, x22, [sp, #32]
    4910:	ldp	x23, x24, [sp, #48]
    4914:	ldp	x25, x26, [sp, #64]
    4918:	ldp	x29, x30, [sp], #176
    491c:	ret
    4920:	adrp	x20, 19000 <PyInit__json@@Base+0x11a48>
    4924:	add	x20, x20, #0x908
    4928:	ldr	x19, [x20, #16]
    492c:	cbz	x19, 49b0 <PySequence_Fast@plt+0x28e0>
    4930:	ldr	x0, [x19]
    4934:	add	x0, x0, #0x1
    4938:	str	x0, [x19]
    493c:	b	45e4 <PySequence_Fast@plt+0x2514>
    4940:	ldr	x19, [x20, #24]
    4944:	cbnz	x19, 45d4 <PySequence_Fast@plt+0x2504>
    4948:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    494c:	add	x0, x0, #0x8c8
    4950:	bl	2000 <PyUnicode_InternFromString@plt>
    4954:	str	x0, [x20, #24]
    4958:	mov	x19, x0
    495c:	cbnz	x0, 45d4 <PySequence_Fast@plt+0x2504>
    4960:	ldp	x27, x28, [sp, #80]
    4964:	b	4830 <PySequence_Fast@plt+0x2760>
    4968:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    496c:	add	x0, x0, #0x8d0
    4970:	bl	2000 <PyUnicode_InternFromString@plt>
    4974:	str	x0, [x20, #32]
    4978:	mov	x19, x0
    497c:	cbnz	x0, 45d4 <PySequence_Fast@plt+0x2504>
    4980:	ldp	x27, x28, [sp, #80]
    4984:	b	4830 <PySequence_Fast@plt+0x2760>
    4988:	ldr	x23, [x23, #3952]
    498c:	mov	x0, x19
    4990:	ldr	x1, [x23, #88]
    4994:	blr	x1
    4998:	mov	x19, x0
    499c:	cbnz	x19, 4648 <PySequence_Fast@plt+0x2578>
    49a0:	b	48f4 <PySequence_Fast@plt+0x2824>
    49a4:	mov	x0, x19
    49a8:	bl	1e30 <_Py_Dealloc@plt>
    49ac:	b	47a8 <PySequence_Fast@plt+0x26d8>
    49b0:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    49b4:	add	x0, x0, #0x8c0
    49b8:	bl	2000 <PyUnicode_InternFromString@plt>
    49bc:	str	x0, [x20, #16]
    49c0:	mov	x19, x0
    49c4:	cbnz	x0, 4930 <PySequence_Fast@plt+0x2860>
    49c8:	mov	w22, #0xffffffff            	// #-1
    49cc:	b	4834 <PySequence_Fast@plt+0x2764>
    49d0:	adrp	x20, 18000 <PyInit__json@@Base+0x10a48>
    49d4:	bl	1f20 <PyThreadState_Get@plt>
    49d8:	ldr	w1, [x0, #32]
    49dc:	ldr	x2, [x20, #3984]
    49e0:	add	w1, w1, #0x1
    49e4:	str	w1, [x0, #32]
    49e8:	ldr	w0, [x2]
    49ec:	cmp	w1, w0
    49f0:	b.le	4a04 <PySequence_Fast@plt+0x2934>
    49f4:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    49f8:	add	x0, x0, #0x968
    49fc:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    4a00:	cbnz	w0, 4828 <PySequence_Fast@plt+0x2758>
    4a04:	adrp	x0, 19000 <PyInit__json@@Base+0x11a48>
    4a08:	str	x0, [sp, #120]
    4a0c:	add	x0, x0, #0x908
    4a10:	ldr	x1, [x0, #40]
    4a14:	cbz	x1, 4c14 <PySequence_Fast@plt+0x2b44>
    4a18:	ldr	x1, [x0, #48]
    4a1c:	cbz	x1, 4c14 <PySequence_Fast@plt+0x2b44>
    4a20:	ldr	x0, [x0, #56]
    4a24:	cbz	x0, 4c14 <PySequence_Fast@plt+0x2b44>
    4a28:	mov	x0, x19
    4a2c:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    4a30:	add	x1, x1, #0x988
    4a34:	bl	20d0 <PySequence_Fast@plt>
    4a38:	mov	x23, x0
    4a3c:	cbz	x0, 4ab8 <PySequence_Fast@plt+0x29e8>
    4a40:	ldr	x1, [x0, #16]
    4a44:	cbz	x1, 4cf8 <PySequence_Fast@plt+0x2c28>
    4a48:	ldr	x0, [x24, #4016]
    4a4c:	ldr	x1, [x28, #16]
    4a50:	cmp	x1, x0
    4a54:	b.eq	4d48 <PySequence_Fast@plt+0x2c78>  // b.none
    4a58:	mov	x0, x19
    4a5c:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    4a60:	mov	x25, x0
    4a64:	cbz	x0, 4aa8 <PySequence_Fast@plt+0x29d8>
    4a68:	mov	x1, x0
    4a6c:	ldr	x0, [x28, #16]
    4a70:	bl	1e10 <PyDict_Contains@plt>
    4a74:	cbz	w0, 4e30 <PySequence_Fast@plt+0x2d60>
    4a78:	cmn	w0, #0x1
    4a7c:	b.eq	4a98 <PySequence_Fast@plt+0x29c8>  // b.none
    4a80:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    4a84:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    4a88:	add	x1, x1, #0x9c8
    4a8c:	ldr	x0, [x0, #3968]
    4a90:	ldr	x0, [x0]
    4a94:	bl	1e60 <PyErr_SetString@plt>
    4a98:	ldr	x0, [x25]
    4a9c:	sub	x0, x0, #0x1
    4aa0:	str	x0, [x25]
    4aa4:	cbz	x0, 51e4 <PySequence_Fast@plt+0x3114>
    4aa8:	ldr	x0, [x23]
    4aac:	sub	x0, x0, #0x1
    4ab0:	str	x0, [x23]
    4ab4:	cbz	x0, 4b00 <PySequence_Fast@plt+0x2a30>
    4ab8:	mov	w22, #0xffffffff            	// #-1
    4abc:	bl	1f20 <PyThreadState_Get@plt>
    4ac0:	ldr	w2, [x0, #32]
    4ac4:	ldr	x20, [x20, #3984]
    4ac8:	sub	w2, w2, #0x1
    4acc:	ldr	w1, [x20]
    4ad0:	str	w2, [x0, #32]
    4ad4:	cmp	w1, #0xc9
    4ad8:	sub	w3, w1, #0x32
    4adc:	asr	w1, w1, #2
    4ae0:	add	w1, w1, w1, lsl #1
    4ae4:	csel	w0, w1, w3, lt  // lt = tstop
    4ae8:	cmp	w2, w0
    4aec:	b.ge	4668 <PySequence_Fast@plt+0x2598>  // b.tcont
    4af0:	bl	1f20 <PyThreadState_Get@plt>
    4af4:	strb	wzr, [x0, #36]
    4af8:	ldp	x27, x28, [sp, #80]
    4afc:	b	4604 <PySequence_Fast@plt+0x2534>
    4b00:	mov	w22, #0xffffffff            	// #-1
    4b04:	mov	x0, x23
    4b08:	bl	1e30 <_Py_Dealloc@plt>
    4b0c:	b	4abc <PySequence_Fast@plt+0x29ec>
    4b10:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    4b14:	add	x0, x0, #0x950
    4b18:	bl	1fe0 <PyUnicode_FromString@plt>
    4b1c:	mov	x19, x0
    4b20:	cbnz	x19, 4648 <PySequence_Fast@plt+0x2578>
    4b24:	b	48f4 <PySequence_Fast@plt+0x2824>
    4b28:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    4b2c:	add	x0, x0, #0x940
    4b30:	bl	1fe0 <PyUnicode_FromString@plt>
    4b34:	mov	x19, x0
    4b38:	cbnz	x19, 4648 <PySequence_Fast@plt+0x2578>
    4b3c:	b	48f4 <PySequence_Fast@plt+0x2824>
    4b40:	adrp	x20, 18000 <PyInit__json@@Base+0x10a48>
    4b44:	bl	1f20 <PyThreadState_Get@plt>
    4b48:	ldr	w1, [x0, #32]
    4b4c:	ldr	x2, [x20, #3984]
    4b50:	add	w1, w1, #0x1
    4b54:	str	w1, [x0, #32]
    4b58:	ldr	w0, [x2]
    4b5c:	cmp	w1, w0
    4b60:	b.le	4b74 <PySequence_Fast@plt+0x2aa4>
    4b64:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    4b68:	add	x0, x0, #0x968
    4b6c:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    4b70:	cbnz	w0, 4828 <PySequence_Fast@plt+0x2758>
    4b74:	adrp	x0, 19000 <PyInit__json@@Base+0x11a48>
    4b78:	str	x0, [sp, #120]
    4b7c:	add	x0, x0, #0x908
    4b80:	ldr	x1, [x0, #64]
    4b84:	cbz	x1, 4c9c <PySequence_Fast@plt+0x2bcc>
    4b88:	ldr	x2, [x0, #72]
    4b8c:	cbz	x2, 4c9c <PySequence_Fast@plt+0x2bcc>
    4b90:	ldr	x0, [x0, #80]
    4b94:	cbz	x0, 4c9c <PySequence_Fast@plt+0x2bcc>
    4b98:	ldr	x2, [x19, #16]
    4b9c:	cbz	x2, 51f0 <PySequence_Fast@plt+0x3120>
    4ba0:	ldr	x0, [x24, #4016]
    4ba4:	ldr	x2, [x28, #16]
    4ba8:	cmp	x2, x0
    4bac:	b.eq	4e60 <PySequence_Fast@plt+0x2d90>  // b.none
    4bb0:	mov	x0, x19
    4bb4:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    4bb8:	str	x0, [sp, #136]
    4bbc:	mov	x1, x0
    4bc0:	cbz	x0, 4ab8 <PySequence_Fast@plt+0x29e8>
    4bc4:	ldr	x0, [x28, #16]
    4bc8:	bl	1e10 <PyDict_Contains@plt>
    4bcc:	cbz	w0, 5204 <PySequence_Fast@plt+0x3134>
    4bd0:	cmn	w0, #0x1
    4bd4:	b.eq	4bf0 <PySequence_Fast@plt+0x2b20>  // b.none
    4bd8:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    4bdc:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    4be0:	add	x1, x1, #0x9c8
    4be4:	ldr	x0, [x0, #3968]
    4be8:	ldr	x0, [x0]
    4bec:	bl	1e60 <PyErr_SetString@plt>
    4bf0:	ldr	x1, [sp, #136]
    4bf4:	ldr	x0, [x1]
    4bf8:	sub	x0, x0, #0x1
    4bfc:	str	x0, [x1]
    4c00:	cbnz	x0, 4ab8 <PySequence_Fast@plt+0x29e8>
    4c04:	mov	x0, x1
    4c08:	mov	w22, #0xffffffff            	// #-1
    4c0c:	bl	1e30 <_Py_Dealloc@plt>
    4c10:	b	4abc <PySequence_Fast@plt+0x29ec>
    4c14:	ldr	x0, [sp, #120]
    4c18:	add	x23, x0, #0x908
    4c1c:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    4c20:	add	x0, x0, #0x9b0
    4c24:	bl	2000 <PyUnicode_InternFromString@plt>
    4c28:	mov	x1, x0
    4c2c:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    4c30:	add	x0, x0, #0x9b8
    4c34:	str	x1, [x23, #40]
    4c38:	bl	2000 <PyUnicode_InternFromString@plt>
    4c3c:	mov	x1, x0
    4c40:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    4c44:	add	x0, x0, #0x9c0
    4c48:	str	x1, [x23, #48]
    4c4c:	bl	2000 <PyUnicode_InternFromString@plt>
    4c50:	str	x0, [x23, #56]
    4c54:	ldr	x1, [x23, #40]
    4c58:	cbz	x1, 4ab8 <PySequence_Fast@plt+0x29e8>
    4c5c:	ldr	x1, [x23, #48]
    4c60:	cmp	x1, #0x0
    4c64:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    4c68:	b.ne	4a28 <PySequence_Fast@plt+0x2958>  // b.any
    4c6c:	b	4ab8 <PySequence_Fast@plt+0x29e8>
    4c70:	bl	1f20 <PyThreadState_Get@plt>
    4c74:	strb	wzr, [x0, #36]
    4c78:	b	4798 <PySequence_Fast@plt+0x26c8>
    4c7c:	ldr	x0, [x28, #24]
    4c80:	mov	x1, x19
    4c84:	mov	x2, #0x0                   	// #0
    4c88:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    4c8c:	mov	x19, x0
    4c90:	cbz	x0, 4828 <PySequence_Fast@plt+0x2758>
    4c94:	mov	x23, #0x0                   	// #0
    4c98:	b	4718 <PySequence_Fast@plt+0x2648>
    4c9c:	ldr	x0, [sp, #120]
    4ca0:	add	x22, x0, #0x908
    4ca4:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    4ca8:	add	x0, x0, #0x9e8
    4cac:	bl	2000 <PyUnicode_InternFromString@plt>
    4cb0:	mov	x1, x0
    4cb4:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    4cb8:	add	x0, x0, #0x9f0
    4cbc:	str	x1, [x22, #64]
    4cc0:	bl	2000 <PyUnicode_InternFromString@plt>
    4cc4:	mov	x1, x0
    4cc8:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    4ccc:	add	x0, x0, #0x9f8
    4cd0:	str	x1, [x22, #72]
    4cd4:	bl	2000 <PyUnicode_InternFromString@plt>
    4cd8:	str	x0, [x22, #80]
    4cdc:	ldr	x1, [x22, #64]
    4ce0:	cbz	x1, 4ab8 <PySequence_Fast@plt+0x29e8>
    4ce4:	ldr	x2, [x22, #72]
    4ce8:	cmp	x2, #0x0
    4cec:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    4cf0:	b.ne	4b98 <PySequence_Fast@plt+0x2ac8>  // b.any
    4cf4:	b	4ab8 <PySequence_Fast@plt+0x29e8>
    4cf8:	ldr	x1, [x0]
    4cfc:	sub	x1, x1, #0x1
    4d00:	str	x1, [x0]
    4d04:	cbz	x1, 5228 <PySequence_Fast@plt+0x3158>
    4d08:	ldr	x0, [sp, #120]
    4d0c:	add	x24, x0, #0x908
    4d10:	mov	x0, x26
    4d14:	ldr	x1, [x24, #56]
    4d18:	bl	1e70 <_PyAccu_Accumulate@plt>
    4d1c:	mov	w22, w0
    4d20:	b	4abc <PySequence_Fast@plt+0x29ec>
    4d24:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    4d28:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    4d2c:	mov	w22, #0xffffffff            	// #-1
    4d30:	add	x1, x1, #0x908
    4d34:	ldr	x0, [x0, #3968]
    4d38:	ldr	x0, [x0]
    4d3c:	bl	1e60 <PyErr_SetString@plt>
    4d40:	ldp	x27, x28, [sp, #80]
    4d44:	b	4604 <PySequence_Fast@plt+0x2534>
    4d48:	ldr	x0, [sp, #120]
    4d4c:	mov	x25, #0x0                   	// #0
    4d50:	add	x1, x0, #0x908
    4d54:	mov	x0, x26
    4d58:	ldr	x1, [x1, #40]
    4d5c:	bl	1e70 <_PyAccu_Accumulate@plt>
    4d60:	cbnz	w0, 4aa8 <PySequence_Fast@plt+0x29d8>
    4d64:	ldr	x7, [x24, #4016]
    4d68:	mov	x19, #0x0                   	// #0
    4d6c:	ldr	x1, [x28, #40]
    4d70:	add	x24, x23, #0x18
    4d74:	ldr	x0, [x23, #16]
    4d78:	cmp	x1, x7
    4d7c:	cinc	x21, x21, ne  // ne = any
    4d80:	cmp	x0, #0x0
    4d84:	b.le	4dd8 <PySequence_Fast@plt+0x2d08>
    4d88:	ldr	x0, [x23, #8]
    4d8c:	ldr	x0, [x0, #168]
    4d90:	tbz	w0, #25, 4e28 <PySequence_Fast@plt+0x2d58>
    4d94:	ldr	x0, [x23, #24]
    4d98:	ldr	x27, [x0, x19, lsl #3]
    4d9c:	cbz	x19, 4db0 <PySequence_Fast@plt+0x2ce0>
    4da0:	ldr	x1, [x28, #56]
    4da4:	mov	x0, x26
    4da8:	bl	1e70 <_PyAccu_Accumulate@plt>
    4dac:	cbnz	w0, 5230 <PySequence_Fast@plt+0x3160>
    4db0:	add	x19, x19, #0x1
    4db4:	mov	x3, x21
    4db8:	mov	x1, x26
    4dbc:	mov	x0, x28
    4dc0:	mov	x2, x27
    4dc4:	bl	4568 <PySequence_Fast@plt+0x2498>
    4dc8:	cbnz	w0, 5230 <PySequence_Fast@plt+0x3160>
    4dcc:	ldr	x0, [x23, #16]
    4dd0:	cmp	x19, x0
    4dd4:	b.lt	4d88 <PySequence_Fast@plt+0x2cb8>  // b.tstop
    4dd8:	cbz	x25, 4dfc <PySequence_Fast@plt+0x2d2c>
    4ddc:	ldr	x0, [x28, #16]
    4de0:	mov	x1, x25
    4de4:	bl	1f30 <PyDict_DelItem@plt>
    4de8:	cbnz	w0, 4a98 <PySequence_Fast@plt+0x29c8>
    4dec:	ldr	x0, [x25]
    4df0:	sub	x0, x0, #0x1
    4df4:	str	x0, [x25]
    4df8:	cbz	x0, 549c <PySequence_Fast@plt+0x33cc>
    4dfc:	ldr	x0, [sp, #120]
    4e00:	add	x24, x0, #0x908
    4e04:	mov	x0, x26
    4e08:	ldr	x1, [x24, #48]
    4e0c:	bl	1e70 <_PyAccu_Accumulate@plt>
    4e10:	cbnz	w0, 4aa8 <PySequence_Fast@plt+0x29d8>
    4e14:	ldr	x0, [x23]
    4e18:	sub	x0, x0, #0x1
    4e1c:	str	x0, [x23]
    4e20:	cbnz	x0, 4abc <PySequence_Fast@plt+0x29ec>
    4e24:	b	4b04 <PySequence_Fast@plt+0x2a34>
    4e28:	ldr	x27, [x24, x19, lsl #3]
    4e2c:	b	4d9c <PySequence_Fast@plt+0x2ccc>
    4e30:	ldr	x0, [x28, #16]
    4e34:	mov	x2, x19
    4e38:	mov	x1, x25
    4e3c:	bl	2020 <PyDict_SetItem@plt>
    4e40:	cbnz	w0, 4a98 <PySequence_Fast@plt+0x29c8>
    4e44:	ldr	x0, [sp, #120]
    4e48:	add	x1, x0, #0x908
    4e4c:	mov	x0, x26
    4e50:	ldr	x1, [x1, #40]
    4e54:	bl	1e70 <_PyAccu_Accumulate@plt>
    4e58:	cbz	w0, 4d64 <PySequence_Fast@plt+0x2c94>
    4e5c:	b	4a98 <PySequence_Fast@plt+0x29c8>
    4e60:	str	xzr, [sp, #136]
    4e64:	mov	x0, x26
    4e68:	bl	1e70 <_PyAccu_Accumulate@plt>
    4e6c:	cbnz	w0, 50c4 <PySequence_Fast@plt+0x2ff4>
    4e70:	ldr	x1, [x24, #4016]
    4e74:	mov	x0, x19
    4e78:	ldr	x2, [x28, #40]
    4e7c:	cmp	x2, x1
    4e80:	cinc	x21, x21, ne  // ne = any
    4e84:	bl	1d90 <PyMapping_Items@plt>
    4e88:	mov	x19, x0
    4e8c:	cbz	x0, 50c4 <PySequence_Fast@plt+0x2ff4>
    4e90:	ldrb	w1, [x28, #64]
    4e94:	cbz	w1, 4ea0 <PySequence_Fast@plt+0x2dd0>
    4e98:	bl	1f80 <PyList_Sort@plt>
    4e9c:	tbnz	w0, #31, 5360 <PySequence_Fast@plt+0x3290>
    4ea0:	mov	x0, x19
    4ea4:	bl	1ff0 <PyObject_GetIter@plt>
    4ea8:	ldr	x1, [x19]
    4eac:	mov	x22, x0
    4eb0:	sub	x0, x1, #0x1
    4eb4:	str	x0, [x19]
    4eb8:	cbz	x0, 5094 <PySequence_Fast@plt+0x2fc4>
    4ebc:	cbz	x22, 50c4 <PySequence_Fast@plt+0x2ff4>
    4ec0:	adrp	x2, 18000 <PyInit__json@@Base+0x10a48>
    4ec4:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    4ec8:	add	x1, x1, #0x8d8
    4ecc:	str	x1, [sp, #152]
    4ed0:	ldr	x1, [x2, #3976]
    4ed4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4ed8:	str	d8, [sp, #96]
    4edc:	fmov	d8, x0
    4ee0:	str	xzr, [sp, #128]
    4ee4:	str	x1, [sp, #160]
    4ee8:	mov	x0, x22
    4eec:	bl	1e50 <PyIter_Next@plt>
    4ef0:	mov	x19, x0
    4ef4:	cbz	x0, 50a0 <PySequence_Fast@plt+0x2fd0>
    4ef8:	ldr	x0, [x19, #8]
    4efc:	ldr	x0, [x0, #168]
    4f00:	tbz	w0, #26, 52e0 <PySequence_Fast@plt+0x3210>
    4f04:	ldr	x0, [x19, #16]
    4f08:	cmp	x0, #0x2
    4f0c:	b.ne	52e0 <PySequence_Fast@plt+0x3210>  // b.any
    4f10:	ldr	x3, [x19, #24]
    4f14:	ldr	x0, [x3, #8]
    4f18:	ldr	x1, [x0, #168]
    4f1c:	tbnz	w1, #28, 4f74 <PySequence_Fast@plt+0x2ea4>
    4f20:	ldr	x1, [x23, #3952]
    4f24:	cmp	x0, x1
    4f28:	b.eq	50d0 <PySequence_Fast@plt+0x3000>  // b.none
    4f2c:	str	x3, [sp, #144]
    4f30:	bl	2030 <PyType_IsSubtype@plt>
    4f34:	ldr	x3, [sp, #144]
    4f38:	cbnz	w0, 50d0 <PySequence_Fast@plt+0x3000>
    4f3c:	ldr	x0, [x27, #4024]
    4f40:	cmp	x3, x0
    4f44:	b.eq	537c <PySequence_Fast@plt+0x32ac>  // b.none
    4f48:	ldr	x0, [x25, #3992]
    4f4c:	ldr	x1, [x24, #4016]
    4f50:	cmp	x3, x0
    4f54:	ccmp	x3, x1, #0x4, ne  // ne = any
    4f58:	b.ne	5298 <PySequence_Fast@plt+0x31c8>  // b.any
    4f5c:	cmp	x3, x1
    4f60:	b.eq	543c <PySequence_Fast@plt+0x336c>  // b.none
    4f64:	ldr	x0, [sp, #120]
    4f68:	add	x0, x0, #0x908
    4f6c:	ldr	x3, [x0, #32]
    4f70:	cbz	x3, 5474 <PySequence_Fast@plt+0x33a4>
    4f74:	ldr	x0, [x3]
    4f78:	add	x0, x0, #0x1
    4f7c:	str	x0, [x3]
    4f80:	ldr	x0, [sp, #128]
    4f84:	cbnz	x0, 5110 <PySequence_Fast@plt+0x3040>
    4f88:	ldr	x2, [x28, #72]
    4f8c:	cbz	x2, 51a4 <PySequence_Fast@plt+0x30d4>
    4f90:	mov	x1, x3
    4f94:	mov	x0, #0x0                   	// #0
    4f98:	str	x3, [sp, #144]
    4f9c:	blr	x2
    4fa0:	ldr	x3, [sp, #144]
    4fa4:	mov	x9, x0
    4fa8:	ldr	x1, [x3]
    4fac:	sub	x0, x1, #0x1
    4fb0:	str	x0, [x3]
    4fb4:	cbz	x0, 5080 <PySequence_Fast@plt+0x2fb0>
    4fb8:	cbz	x9, 5108 <PySequence_Fast@plt+0x3038>
    4fbc:	mov	x1, x9
    4fc0:	mov	x0, x26
    4fc4:	str	x9, [sp, #144]
    4fc8:	bl	1e70 <_PyAccu_Accumulate@plt>
    4fcc:	ldr	x9, [sp, #144]
    4fd0:	cbnz	w0, 5414 <PySequence_Fast@plt+0x3344>
    4fd4:	ldr	x0, [x9]
    4fd8:	sub	x0, x0, #0x1
    4fdc:	str	x0, [x9]
    4fe0:	cbz	x0, 5198 <PySequence_Fast@plt+0x30c8>
    4fe4:	ldr	x1, [x28, #48]
    4fe8:	mov	x0, x26
    4fec:	bl	1e70 <_PyAccu_Accumulate@plt>
    4ff0:	cbnz	w0, 5108 <PySequence_Fast@plt+0x3038>
    4ff4:	ldr	x2, [x19, #32]
    4ff8:	mov	x3, x21
    4ffc:	mov	x1, x26
    5000:	mov	x0, x28
    5004:	bl	4568 <PySequence_Fast@plt+0x2498>
    5008:	cbnz	w0, 5108 <PySequence_Fast@plt+0x3038>
    500c:	ldr	x0, [x19]
    5010:	ldr	x1, [sp, #128]
    5014:	sub	x0, x0, #0x1
    5018:	str	x0, [x19]
    501c:	add	x1, x1, #0x1
    5020:	str	x1, [sp, #128]
    5024:	cbnz	x0, 4ee8 <PySequence_Fast@plt+0x2e18>
    5028:	mov	x0, x19
    502c:	bl	1e30 <_Py_Dealloc@plt>
    5030:	b	4ee8 <PySequence_Fast@plt+0x2e18>
    5034:	ldp	x1, x0, [sp, #152]
    5038:	str	x9, [sp, #168]
    503c:	ldr	x2, [x2, #24]
    5040:	ldr	x0, [x0]
    5044:	bl	2040 <PyErr_Format@plt>
    5048:	ldr	x9, [sp, #168]
    504c:	ldr	x3, [sp, #144]
    5050:	ldr	x0, [x9]
    5054:	sub	x0, x0, #0x1
    5058:	str	x0, [x9]
    505c:	cbnz	x0, 506c <PySequence_Fast@plt+0x2f9c>
    5060:	mov	x0, x9
    5064:	bl	1e30 <_Py_Dealloc@plt>
    5068:	ldr	x3, [sp, #144]
    506c:	ldr	x0, [x3]
    5070:	sub	x0, x0, #0x1
    5074:	str	x0, [x3]
    5078:	cbnz	x0, 5108 <PySequence_Fast@plt+0x3038>
    507c:	mov	x9, #0x0                   	// #0
    5080:	mov	x0, x3
    5084:	str	x9, [sp, #144]
    5088:	bl	1e30 <_Py_Dealloc@plt>
    508c:	ldr	x9, [sp, #144]
    5090:	b	4fb8 <PySequence_Fast@plt+0x2ee8>
    5094:	mov	x0, x19
    5098:	bl	1e30 <_Py_Dealloc@plt>
    509c:	b	4ebc <PySequence_Fast@plt+0x2dec>
    50a0:	bl	1f40 <PyErr_Occurred@plt>
    50a4:	cbz	x0, 54a8 <PySequence_Fast@plt+0x33d8>
    50a8:	ldr	x0, [x22]
    50ac:	sub	x0, x0, #0x1
    50b0:	str	x0, [x22]
    50b4:	cbnz	x0, 516c <PySequence_Fast@plt+0x309c>
    50b8:	mov	x0, x22
    50bc:	bl	1e30 <_Py_Dealloc@plt>
    50c0:	ldr	d8, [sp, #96]
    50c4:	ldr	x0, [sp, #136]
    50c8:	cbnz	x0, 4bf0 <PySequence_Fast@plt+0x2b20>
    50cc:	b	4ab8 <PySequence_Fast@plt+0x29e8>
    50d0:	ldr	d0, [x3, #16]
    50d4:	fabs	d1, d0
    50d8:	fcmp	d1, d8
    50dc:	b.ls	5238 <PySequence_Fast@plt+0x3168>  // b.plast
    50e0:	ldr	w0, [x28, #68]
    50e4:	cbz	w0, 53c0 <PySequence_Fast@plt+0x32f0>
    50e8:	fcmpe	d0, #0.0
    50ec:	b.gt	5308 <PySequence_Fast@plt+0x3238>
    50f0:	b.mi	52c8 <PySequence_Fast@plt+0x31f8>  // b.first
    50f4:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    50f8:	add	x0, x0, #0x960
    50fc:	bl	1fe0 <PyUnicode_FromString@plt>
    5100:	mov	x3, x0
    5104:	cbnz	x3, 4f80 <PySequence_Fast@plt+0x2eb0>
    5108:	mov	x3, #0x0                   	// #0
    510c:	b	5128 <PySequence_Fast@plt+0x3058>
    5110:	ldr	x1, [x28, #56]
    5114:	mov	x0, x26
    5118:	str	x3, [sp, #144]
    511c:	bl	1e70 <_PyAccu_Accumulate@plt>
    5120:	ldr	x3, [sp, #144]
    5124:	cbz	w0, 4f88 <PySequence_Fast@plt+0x2eb8>
    5128:	ldr	x0, [x22]
    512c:	sub	x0, x0, #0x1
    5130:	str	x0, [x22]
    5134:	cbnz	x0, 5148 <PySequence_Fast@plt+0x3078>
    5138:	mov	x0, x22
    513c:	str	x3, [sp, #120]
    5140:	bl	1e30 <_Py_Dealloc@plt>
    5144:	ldr	x3, [sp, #120]
    5148:	ldr	x0, [x19]
    514c:	sub	x0, x0, #0x1
    5150:	str	x0, [x19]
    5154:	cbz	x0, 5184 <PySequence_Fast@plt+0x30b4>
    5158:	cbz	x3, 516c <PySequence_Fast@plt+0x309c>
    515c:	ldr	x0, [x3]
    5160:	sub	x0, x0, #0x1
    5164:	str	x0, [x3]
    5168:	cbz	x0, 5174 <PySequence_Fast@plt+0x30a4>
    516c:	ldr	d8, [sp, #96]
    5170:	b	50c4 <PySequence_Fast@plt+0x2ff4>
    5174:	mov	x0, x3
    5178:	bl	1e30 <_Py_Dealloc@plt>
    517c:	ldr	d8, [sp, #96]
    5180:	b	50c4 <PySequence_Fast@plt+0x2ff4>
    5184:	mov	x0, x19
    5188:	str	x3, [sp, #120]
    518c:	bl	1e30 <_Py_Dealloc@plt>
    5190:	ldr	x3, [sp, #120]
    5194:	b	5158 <PySequence_Fast@plt+0x3088>
    5198:	mov	x0, x9
    519c:	bl	1e30 <_Py_Dealloc@plt>
    51a0:	b	4fe4 <PySequence_Fast@plt+0x2f14>
    51a4:	ldr	x0, [x28, #32]
    51a8:	mov	x1, x3
    51ac:	mov	x2, #0x0                   	// #0
    51b0:	str	x3, [sp, #144]
    51b4:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    51b8:	mov	x9, x0
    51bc:	ldr	x3, [sp, #144]
    51c0:	cbz	x0, 506c <PySequence_Fast@plt+0x2f9c>
    51c4:	ldr	x2, [x0, #8]
    51c8:	ldr	x0, [x2, #168]
    51cc:	tbz	w0, #28, 5034 <PySequence_Fast@plt+0x2f64>
    51d0:	ldr	x0, [x3]
    51d4:	sub	x0, x0, #0x1
    51d8:	str	x0, [x3]
    51dc:	cbnz	x0, 4fbc <PySequence_Fast@plt+0x2eec>
    51e0:	b	5080 <PySequence_Fast@plt+0x2fb0>
    51e4:	mov	x0, x25
    51e8:	bl	1e30 <_Py_Dealloc@plt>
    51ec:	b	4aa8 <PySequence_Fast@plt+0x29d8>
    51f0:	mov	x1, x0
    51f4:	mov	x0, x26
    51f8:	bl	1e70 <_PyAccu_Accumulate@plt>
    51fc:	mov	w22, w0
    5200:	b	4abc <PySequence_Fast@plt+0x29ec>
    5204:	ldr	x0, [x28, #16]
    5208:	mov	x2, x19
    520c:	ldr	x1, [sp, #136]
    5210:	bl	2020 <PyDict_SetItem@plt>
    5214:	cbnz	w0, 4bf0 <PySequence_Fast@plt+0x2b20>
    5218:	ldr	x0, [sp, #120]
    521c:	add	x0, x0, #0x908
    5220:	ldr	x1, [x0, #64]
    5224:	b	4e64 <PySequence_Fast@plt+0x2d94>
    5228:	bl	1e30 <_Py_Dealloc@plt>
    522c:	b	4d08 <PySequence_Fast@plt+0x2c38>
    5230:	cbnz	x25, 4a98 <PySequence_Fast@plt+0x29c8>
    5234:	b	4aa8 <PySequence_Fast@plt+0x29d8>
    5238:	ldr	x1, [x23, #3952]
    523c:	mov	x0, x3
    5240:	ldr	x1, [x1, #88]
    5244:	blr	x1
    5248:	mov	x3, x0
    524c:	cbnz	x3, 4f80 <PySequence_Fast@plt+0x2eb0>
    5250:	b	5108 <PySequence_Fast@plt+0x3038>
    5254:	cmn	w0, #0x1
    5258:	b.eq	5274 <PySequence_Fast@plt+0x31a4>  // b.none
    525c:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    5260:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    5264:	add	x1, x1, #0x9c8
    5268:	ldr	x0, [x0, #3968]
    526c:	ldr	x0, [x0]
    5270:	bl	1e60 <PyErr_SetString@plt>
    5274:	ldr	x0, [x23]
    5278:	sub	x0, x0, #0x1
    527c:	str	x0, [x23]
    5280:	cbnz	x0, 4828 <PySequence_Fast@plt+0x2758>
    5284:	mov	x0, x23
    5288:	mov	w22, #0xffffffff            	// #-1
    528c:	bl	1e30 <_Py_Dealloc@plt>
    5290:	ldp	x27, x28, [sp, #80]
    5294:	b	4604 <PySequence_Fast@plt+0x2534>
    5298:	ldr	x2, [x3, #8]
    529c:	ldr	x0, [x2, #168]
    52a0:	tbz	w0, #24, 5320 <PySequence_Fast@plt+0x3250>
    52a4:	adrp	x1, 18000 <PyInit__json@@Base+0x10a48>
    52a8:	mov	x0, x3
    52ac:	ldr	x1, [x1, #4032]
    52b0:	ldr	x1, [x1, #88]
    52b4:	blr	x1
    52b8:	mov	x3, x0
    52bc:	cbnz	x0, 4f80 <PySequence_Fast@plt+0x2eb0>
    52c0:	mov	x3, #0x0                   	// #0
    52c4:	b	5128 <PySequence_Fast@plt+0x3058>
    52c8:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    52cc:	add	x0, x0, #0x950
    52d0:	bl	1fe0 <PyUnicode_FromString@plt>
    52d4:	mov	x3, x0
    52d8:	cbnz	x3, 4f80 <PySequence_Fast@plt+0x2eb0>
    52dc:	b	5108 <PySequence_Fast@plt+0x3038>
    52e0:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    52e4:	mov	x3, #0x0                   	// #0
    52e8:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    52ec:	add	x1, x1, #0xa00
    52f0:	ldr	x0, [x0, #3968]
    52f4:	str	x3, [sp, #120]
    52f8:	ldr	x0, [x0]
    52fc:	bl	1e60 <PyErr_SetString@plt>
    5300:	ldr	x3, [sp, #120]
    5304:	b	5128 <PySequence_Fast@plt+0x3058>
    5308:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    530c:	add	x0, x0, #0x940
    5310:	bl	1fe0 <PyUnicode_FromString@plt>
    5314:	mov	x3, x0
    5318:	cbnz	x3, 4f80 <PySequence_Fast@plt+0x2eb0>
    531c:	b	5108 <PySequence_Fast@plt+0x3038>
    5320:	ldrb	w0, [x28, #65]
    5324:	cbz	w0, 53e8 <PySequence_Fast@plt+0x3318>
    5328:	ldr	x0, [x19]
    532c:	sub	x0, x0, #0x1
    5330:	str	x0, [x19]
    5334:	cbnz	x0, 4ee8 <PySequence_Fast@plt+0x2e18>
    5338:	b	5028 <PySequence_Fast@plt+0x2f58>
    533c:	ldr	x0, [x19]
    5340:	sub	x0, x0, #0x1
    5344:	str	x0, [x19]
    5348:	cbnz	x0, 5354 <PySequence_Fast@plt+0x3284>
    534c:	mov	x0, x19
    5350:	bl	1e30 <_Py_Dealloc@plt>
    5354:	cbnz	x23, 5274 <PySequence_Fast@plt+0x31a4>
    5358:	ldp	x27, x28, [sp, #80]
    535c:	b	4830 <PySequence_Fast@plt+0x2760>
    5360:	ldr	x0, [x19]
    5364:	sub	x0, x0, #0x1
    5368:	str	x0, [x19]
    536c:	cbnz	x0, 50c4 <PySequence_Fast@plt+0x2ff4>
    5370:	mov	x0, x19
    5374:	bl	1e30 <_Py_Dealloc@plt>
    5378:	b	50c4 <PySequence_Fast@plt+0x2ff4>
    537c:	ldr	x0, [x24, #4016]
    5380:	cmp	x3, x0
    5384:	b.eq	543c <PySequence_Fast@plt+0x336c>  // b.none
    5388:	ldr	x0, [sp, #120]
    538c:	add	x1, x0, #0x908
    5390:	ldr	x3, [x1, #24]
    5394:	cbnz	x3, 4f74 <PySequence_Fast@plt+0x2ea4>
    5398:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    539c:	add	x0, x0, #0x8c8
    53a0:	str	x1, [sp, #144]
    53a4:	bl	2000 <PyUnicode_InternFromString@plt>
    53a8:	ldr	x1, [sp, #144]
    53ac:	mov	x3, x0
    53b0:	str	x0, [x1, #24]
    53b4:	cbnz	x0, 4f74 <PySequence_Fast@plt+0x2ea4>
    53b8:	mov	x3, #0x0                   	// #0
    53bc:	b	5128 <PySequence_Fast@plt+0x3058>
    53c0:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    53c4:	mov	x3, #0x0                   	// #0
    53c8:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    53cc:	add	x1, x1, #0x908
    53d0:	ldr	x0, [x0, #3968]
    53d4:	str	x3, [sp, #120]
    53d8:	ldr	x0, [x0]
    53dc:	bl	1e60 <PyErr_SetString@plt>
    53e0:	ldr	x3, [sp, #120]
    53e4:	b	5128 <PySequence_Fast@plt+0x3058>
    53e8:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    53ec:	mov	x3, #0x0                   	// #0
    53f0:	ldr	x2, [x2, #24]
    53f4:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    53f8:	ldr	x0, [x0, #3976]
    53fc:	add	x1, x1, #0xa20
    5400:	str	x3, [sp, #120]
    5404:	ldr	x0, [x0]
    5408:	bl	2040 <PyErr_Format@plt>
    540c:	ldr	x3, [sp, #120]
    5410:	b	5128 <PySequence_Fast@plt+0x3058>
    5414:	ldr	x0, [x9]
    5418:	sub	x0, x0, #0x1
    541c:	str	x0, [x9]
    5420:	cbnz	x0, 5108 <PySequence_Fast@plt+0x3038>
    5424:	mov	x3, #0x0                   	// #0
    5428:	mov	x0, x9
    542c:	str	x3, [sp, #120]
    5430:	bl	1e30 <_Py_Dealloc@plt>
    5434:	ldr	x3, [sp, #120]
    5438:	b	5128 <PySequence_Fast@plt+0x3058>
    543c:	ldr	x0, [sp, #120]
    5440:	add	x1, x0, #0x908
    5444:	ldr	x3, [x1, #16]
    5448:	cbnz	x3, 4f74 <PySequence_Fast@plt+0x2ea4>
    544c:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    5450:	add	x0, x0, #0x8c0
    5454:	str	x1, [sp, #144]
    5458:	bl	2000 <PyUnicode_InternFromString@plt>
    545c:	ldr	x1, [sp, #144]
    5460:	mov	x3, x0
    5464:	str	x0, [x1, #16]
    5468:	cbnz	x0, 4f74 <PySequence_Fast@plt+0x2ea4>
    546c:	mov	x3, #0x0                   	// #0
    5470:	b	5128 <PySequence_Fast@plt+0x3058>
    5474:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    5478:	add	x0, x0, #0x8d0
    547c:	bl	2000 <PyUnicode_InternFromString@plt>
    5480:	mov	x3, x0
    5484:	ldr	x1, [sp, #120]
    5488:	add	x1, x1, #0x908
    548c:	str	x0, [x1, #32]
    5490:	cbnz	x0, 4f74 <PySequence_Fast@plt+0x2ea4>
    5494:	mov	x3, #0x0                   	// #0
    5498:	b	5128 <PySequence_Fast@plt+0x3058>
    549c:	mov	x0, x25
    54a0:	bl	1e30 <_Py_Dealloc@plt>
    54a4:	b	4dfc <PySequence_Fast@plt+0x2d2c>
    54a8:	ldr	x0, [x22]
    54ac:	sub	x0, x0, #0x1
    54b0:	str	x0, [x22]
    54b4:	cbz	x0, 5504 <PySequence_Fast@plt+0x3434>
    54b8:	ldr	x19, [sp, #136]
    54bc:	mov	x1, x19
    54c0:	cbz	x19, 54e0 <PySequence_Fast@plt+0x3410>
    54c4:	ldr	x0, [x28, #16]
    54c8:	bl	1f30 <PyDict_DelItem@plt>
    54cc:	cbnz	w0, 551c <PySequence_Fast@plt+0x344c>
    54d0:	ldr	x0, [x19]
    54d4:	sub	x0, x0, #0x1
    54d8:	str	x0, [x19]
    54dc:	cbz	x0, 5510 <PySequence_Fast@plt+0x3440>
    54e0:	ldr	x0, [sp, #120]
    54e4:	add	x24, x0, #0x908
    54e8:	mov	x0, x26
    54ec:	ldr	x1, [x24, #72]
    54f0:	bl	1e70 <_PyAccu_Accumulate@plt>
    54f4:	mov	w22, w0
    54f8:	ldr	d8, [sp, #96]
    54fc:	cbz	w0, 4abc <PySequence_Fast@plt+0x29ec>
    5500:	b	4ab8 <PySequence_Fast@plt+0x29e8>
    5504:	mov	x0, x22
    5508:	bl	1e30 <_Py_Dealloc@plt>
    550c:	b	54b8 <PySequence_Fast@plt+0x33e8>
    5510:	ldr	x0, [sp, #136]
    5514:	bl	1e30 <_Py_Dealloc@plt>
    5518:	b	54e0 <PySequence_Fast@plt+0x3410>
    551c:	ldr	d8, [sp, #96]
    5520:	b	4bf0 <PySequence_Fast@plt+0x2b20>
    5524:	nop
    5528:	stp	x29, x30, [sp, #-64]!
    552c:	adrp	x3, 19000 <PyInit__json@@Base+0x11a48>
    5530:	add	x3, x3, #0x1c0
    5534:	mov	x29, sp
    5538:	add	x3, x3, #0x60
    553c:	add	x5, sp, #0x28
    5540:	add	x4, sp, #0x20
    5544:	stp	x19, x20, [sp, #16]
    5548:	mov	x19, x0
    554c:	mov	x0, x1
    5550:	mov	x1, x2
    5554:	adrp	x2, 7000 <PySequence_Fast@plt+0x4f30>
    5558:	add	x2, x2, #0xa58
    555c:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    5560:	cbz	w0, 55a4 <PySequence_Fast@plt+0x34d4>
    5564:	add	x20, sp, #0x30
    5568:	mov	x0, x20
    556c:	bl	1df0 <_PyAccu_Init@plt>
    5570:	cbnz	w0, 55a4 <PySequence_Fast@plt+0x34d4>
    5574:	ldp	x2, x3, [sp, #32]
    5578:	mov	x0, x19
    557c:	mov	x1, x20
    5580:	bl	4568 <PySequence_Fast@plt+0x2498>
    5584:	cbnz	w0, 559c <PySequence_Fast@plt+0x34cc>
    5588:	mov	x0, x20
    558c:	bl	2070 <_PyAccu_FinishAsList@plt>
    5590:	ldp	x19, x20, [sp, #16]
    5594:	ldp	x29, x30, [sp], #64
    5598:	ret
    559c:	mov	x0, x20
    55a0:	bl	1ee0 <_PyAccu_Destroy@plt>
    55a4:	mov	x0, #0x0                   	// #0
    55a8:	ldp	x19, x20, [sp, #16]
    55ac:	ldp	x29, x30, [sp], #64
    55b0:	ret
    55b4:	nop
    55b8:	stp	x29, x30, [sp, #-32]!
    55bc:	mov	x29, sp
    55c0:	str	x19, [sp, #16]
    55c4:	mov	x19, x0
    55c8:	bl	20a0 <PyObject_GC_UnTrack@plt>
    55cc:	ldr	x0, [x19, #16]
    55d0:	cbz	x0, 55e8 <PySequence_Fast@plt+0x3518>
    55d4:	ldr	x1, [x0]
    55d8:	str	xzr, [x19, #16]
    55dc:	sub	x1, x1, #0x1
    55e0:	str	x1, [x0]
    55e4:	cbz	x1, 56d0 <PySequence_Fast@plt+0x3600>
    55e8:	ldr	x0, [x19, #24]
    55ec:	cbz	x0, 5604 <PySequence_Fast@plt+0x3534>
    55f0:	ldr	x1, [x0]
    55f4:	str	xzr, [x19, #24]
    55f8:	sub	x1, x1, #0x1
    55fc:	str	x1, [x0]
    5600:	cbz	x1, 56c8 <PySequence_Fast@plt+0x35f8>
    5604:	ldr	x0, [x19, #32]
    5608:	cbz	x0, 5620 <PySequence_Fast@plt+0x3550>
    560c:	ldr	x1, [x0]
    5610:	str	xzr, [x19, #32]
    5614:	sub	x1, x1, #0x1
    5618:	str	x1, [x0]
    561c:	cbz	x1, 56c0 <PySequence_Fast@plt+0x35f0>
    5620:	ldr	x0, [x19, #40]
    5624:	cbz	x0, 563c <PySequence_Fast@plt+0x356c>
    5628:	ldr	x1, [x0]
    562c:	str	xzr, [x19, #40]
    5630:	sub	x1, x1, #0x1
    5634:	str	x1, [x0]
    5638:	cbz	x1, 56b8 <PySequence_Fast@plt+0x35e8>
    563c:	ldr	x0, [x19, #48]
    5640:	cbz	x0, 5658 <PySequence_Fast@plt+0x3588>
    5644:	ldr	x1, [x0]
    5648:	str	xzr, [x19, #48]
    564c:	sub	x1, x1, #0x1
    5650:	str	x1, [x0]
    5654:	cbz	x1, 56b0 <PySequence_Fast@plt+0x35e0>
    5658:	ldr	x0, [x19, #56]
    565c:	cbz	x0, 5674 <PySequence_Fast@plt+0x35a4>
    5660:	ldr	x1, [x0]
    5664:	str	xzr, [x19, #56]
    5668:	sub	x1, x1, #0x1
    566c:	str	x1, [x0]
    5670:	cbz	x1, 5690 <PySequence_Fast@plt+0x35c0>
    5674:	ldr	x1, [x19, #8]
    5678:	mov	x0, x19
    567c:	ldr	x19, [sp, #16]
    5680:	ldp	x29, x30, [sp], #32
    5684:	ldr	x1, [x1, #320]
    5688:	mov	x16, x1
    568c:	br	x16
    5690:	bl	1e30 <_Py_Dealloc@plt>
    5694:	ldr	x1, [x19, #8]
    5698:	mov	x0, x19
    569c:	ldr	x19, [sp, #16]
    56a0:	ldp	x29, x30, [sp], #32
    56a4:	ldr	x1, [x1, #320]
    56a8:	mov	x16, x1
    56ac:	br	x16
    56b0:	bl	1e30 <_Py_Dealloc@plt>
    56b4:	b	5658 <PySequence_Fast@plt+0x3588>
    56b8:	bl	1e30 <_Py_Dealloc@plt>
    56bc:	b	563c <PySequence_Fast@plt+0x356c>
    56c0:	bl	1e30 <_Py_Dealloc@plt>
    56c4:	b	5620 <PySequence_Fast@plt+0x3550>
    56c8:	bl	1e30 <_Py_Dealloc@plt>
    56cc:	b	5604 <PySequence_Fast@plt+0x3534>
    56d0:	bl	1e30 <_Py_Dealloc@plt>
    56d4:	b	55e8 <PySequence_Fast@plt+0x3518>
    56d8:	stp	x29, x30, [sp, #-32]!
    56dc:	mov	x29, sp
    56e0:	str	x19, [sp, #16]
    56e4:	mov	x19, x0
    56e8:	bl	20a0 <PyObject_GC_UnTrack@plt>
    56ec:	ldr	x0, [x19, #24]
    56f0:	cbz	x0, 5708 <PySequence_Fast@plt+0x3638>
    56f4:	ldr	x1, [x0]
    56f8:	str	xzr, [x19, #24]
    56fc:	sub	x1, x1, #0x1
    5700:	str	x1, [x0]
    5704:	cbz	x1, 57f0 <PySequence_Fast@plt+0x3720>
    5708:	ldr	x0, [x19, #32]
    570c:	cbz	x0, 5724 <PySequence_Fast@plt+0x3654>
    5710:	ldr	x1, [x0]
    5714:	str	xzr, [x19, #32]
    5718:	sub	x1, x1, #0x1
    571c:	str	x1, [x0]
    5720:	cbz	x1, 57e8 <PySequence_Fast@plt+0x3718>
    5724:	ldr	x0, [x19, #40]
    5728:	cbz	x0, 5740 <PySequence_Fast@plt+0x3670>
    572c:	ldr	x1, [x0]
    5730:	str	xzr, [x19, #40]
    5734:	sub	x1, x1, #0x1
    5738:	str	x1, [x0]
    573c:	cbz	x1, 57e0 <PySequence_Fast@plt+0x3710>
    5740:	ldr	x0, [x19, #48]
    5744:	cbz	x0, 575c <PySequence_Fast@plt+0x368c>
    5748:	ldr	x1, [x0]
    574c:	str	xzr, [x19, #48]
    5750:	sub	x1, x1, #0x1
    5754:	str	x1, [x0]
    5758:	cbz	x1, 57d8 <PySequence_Fast@plt+0x3708>
    575c:	ldr	x0, [x19, #56]
    5760:	cbz	x0, 5778 <PySequence_Fast@plt+0x36a8>
    5764:	ldr	x1, [x0]
    5768:	str	xzr, [x19, #56]
    576c:	sub	x1, x1, #0x1
    5770:	str	x1, [x0]
    5774:	cbz	x1, 57d0 <PySequence_Fast@plt+0x3700>
    5778:	ldr	x0, [x19, #64]
    577c:	cbz	x0, 5794 <PySequence_Fast@plt+0x36c4>
    5780:	ldr	x1, [x0]
    5784:	str	xzr, [x19, #64]
    5788:	sub	x1, x1, #0x1
    578c:	str	x1, [x0]
    5790:	cbz	x1, 57b0 <PySequence_Fast@plt+0x36e0>
    5794:	ldr	x1, [x19, #8]
    5798:	mov	x0, x19
    579c:	ldr	x19, [sp, #16]
    57a0:	ldp	x29, x30, [sp], #32
    57a4:	ldr	x1, [x1, #320]
    57a8:	mov	x16, x1
    57ac:	br	x16
    57b0:	bl	1e30 <_Py_Dealloc@plt>
    57b4:	ldr	x1, [x19, #8]
    57b8:	mov	x0, x19
    57bc:	ldr	x19, [sp, #16]
    57c0:	ldp	x29, x30, [sp], #32
    57c4:	ldr	x1, [x1, #320]
    57c8:	mov	x16, x1
    57cc:	br	x16
    57d0:	bl	1e30 <_Py_Dealloc@plt>
    57d4:	b	5778 <PySequence_Fast@plt+0x36a8>
    57d8:	bl	1e30 <_Py_Dealloc@plt>
    57dc:	b	575c <PySequence_Fast@plt+0x368c>
    57e0:	bl	1e30 <_Py_Dealloc@plt>
    57e4:	b	5740 <PySequence_Fast@plt+0x3670>
    57e8:	bl	1e30 <_Py_Dealloc@plt>
    57ec:	b	5724 <PySequence_Fast@plt+0x3654>
    57f0:	bl	1e30 <_Py_Dealloc@plt>
    57f4:	b	5708 <PySequence_Fast@plt+0x3638>
    57f8:	stp	x29, x30, [sp, #-144]!
    57fc:	mov	x29, sp
    5800:	stp	x19, x20, [sp, #16]
    5804:	mov	x19, x2
    5808:	ldrb	w2, [x1, #32]
    580c:	stp	x21, x22, [sp, #32]
    5810:	mov	x20, x0
    5814:	mov	x22, x3
    5818:	stp	x27, x28, [sp, #80]
    581c:	mov	x28, x1
    5820:	tbz	w2, #7, 5e50 <PySequence_Fast@plt+0x3d80>
    5824:	and	w5, w2, #0x20
    5828:	tbnz	w2, #5, 5910 <PySequence_Fast@plt+0x3840>
    582c:	ldr	x3, [x28, #72]
    5830:	ldrb	w21, [x28, #32]
    5834:	ldr	x0, [x28, #16]
    5838:	ubfx	x21, x21, #2, #3
    583c:	tbnz	x19, #63, 6670 <PySequence_Fast@plt+0x45a0>
    5840:	cmp	x0, x19
    5844:	b.le	61e8 <PySequence_Fast@plt+0x4118>
    5848:	cmp	w21, #0x1
    584c:	b.eq	5e68 <PySequence_Fast@plt+0x3d98>  // b.none
    5850:	cmp	w21, #0x2
    5854:	b.eq	5f5c <PySequence_Fast@plt+0x3e8c>  // b.none
    5858:	ldr	w1, [x3, x19, lsl #2]
    585c:	cmp	w1, #0x5b
    5860:	b.eq	622c <PySequence_Fast@plt+0x415c>  // b.none
    5864:	b.hi	5d40 <PySequence_Fast@plt+0x3c70>  // b.pmore
    5868:	cmp	w1, #0x49
    586c:	b.eq	649c <PySequence_Fast@plt+0x43cc>  // b.none
    5870:	b.ls	5c84 <PySequence_Fast@plt+0x3bb4>  // b.plast
    5874:	cmp	w1, #0x4e
    5878:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    587c:	add	x1, x19, #0x2
    5880:	cmp	x1, x0
    5884:	b.ge	5940 <PySequence_Fast@plt+0x3870>  // b.tcont
    5888:	cmp	w21, #0x1
    588c:	add	x1, x19, #0x1
    5890:	b.eq	704c <PySequence_Fast@plt+0x4f7c>  // b.none
    5894:	cmp	w21, #0x2
    5898:	b.eq	71cc <PySequence_Fast@plt+0x50fc>  // b.none
    589c:	ldr	w6, [x3, x1, lsl #2]
    58a0:	lsl	x1, x1, #2
    58a4:	cmp	w6, #0x61
    58a8:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    58ac:	add	x1, x3, x1
    58b0:	ldr	w1, [x1, #4]
    58b4:	cmp	w1, #0x4e
    58b8:	cset	w1, eq  // eq = none
    58bc:	cbz	w1, 5940 <PySequence_Fast@plt+0x3870>
    58c0:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    58c4:	add	x0, x0, #0x960
    58c8:	stp	x23, x24, [sp, #48]
    58cc:	bl	2000 <PyUnicode_InternFromString@plt>
    58d0:	mov	x23, x0
    58d4:	cbz	x0, 5ee0 <PySequence_Fast@plt+0x3e10>
    58d8:	mov	x1, x0
    58dc:	mov	x2, #0x0                   	// #0
    58e0:	ldr	x0, [x20, #56]
    58e4:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    58e8:	mov	x21, x0
    58ec:	ldr	x1, [x23]
    58f0:	ldr	x2, [x23, #16]
    58f4:	sub	x0, x1, #0x1
    58f8:	str	x0, [x23]
    58fc:	add	x19, x19, x2
    5900:	cbz	x0, 7448 <PySequence_Fast@plt+0x5378>
    5904:	ldp	x23, x24, [sp, #48]
    5908:	str	x19, [x22]
    590c:	b	5eec <PySequence_Fast@plt+0x3e1c>
    5910:	tst	x2, #0x40
    5914:	add	x3, x28, #0x30
    5918:	add	x0, x28, #0x48
    591c:	csel	x3, x0, x3, eq  // eq = none
    5920:	b	5830 <PySequence_Fast@plt+0x3760>
    5924:	cmp	w1, #0x66
    5928:	b.eq	6400 <PySequence_Fast@plt+0x4330>  // b.none
    592c:	cmp	w1, #0x6e
    5930:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    5934:	add	x1, x19, #0x3
    5938:	cmp	x1, x0
    593c:	b.lt	6718 <PySequence_Fast@plt+0x4648>  // b.tstop
    5940:	tbz	w2, #7, 5f04 <PySequence_Fast@plt+0x3e34>
    5944:	stp	x23, x24, [sp, #48]
    5948:	stp	x25, x26, [sp, #64]
    594c:	cbz	w5, 5e70 <PySequence_Fast@plt+0x3da0>
    5950:	tst	x2, #0x40
    5954:	add	x4, x28, #0x48
    5958:	add	x2, x28, #0x30
    595c:	sub	x0, x0, #0x1
    5960:	csel	x24, x4, x2, eq  // eq = none
    5964:	cmp	w21, #0x1
    5968:	b.eq	5e80 <PySequence_Fast@plt+0x3db0>  // b.none
    596c:	cmp	w21, #0x2
    5970:	b.eq	5ab8 <PySequence_Fast@plt+0x39e8>  // b.none
    5974:	ldr	w1, [x24, x19, lsl #2]
    5978:	mov	x23, x19
    597c:	cmp	w1, #0x2d
    5980:	b.ne	5994 <PySequence_Fast@plt+0x38c4>  // b.any
    5984:	add	x23, x19, #0x1
    5988:	cmp	x23, x0
    598c:	b.gt	601c <PySequence_Fast@plt+0x3f4c>
    5990:	ldr	w1, [x24, x23, lsl #2]
    5994:	sub	w2, w1, #0x31
    5998:	cmp	w2, #0x8
    599c:	b.hi	5ae8 <PySequence_Fast@plt+0x3a18>  // b.pmore
    59a0:	add	x23, x23, #0x1
    59a4:	cmp	x23, x0
    59a8:	b.le	59d0 <PySequence_Fast@plt+0x3900>
    59ac:	b	5ec0 <PySequence_Fast@plt+0x3df0>
    59b0:	ldr	w1, [x24, x23, lsl #2]
    59b4:	cmp	w1, #0x2f
    59b8:	b.ls	6a54 <PySequence_Fast@plt+0x4984>  // b.plast
    59bc:	cmp	w1, #0x39
    59c0:	b.hi	6a54 <PySequence_Fast@plt+0x4984>  // b.pmore
    59c4:	add	x23, x23, #0x1
    59c8:	cmp	x23, x0
    59cc:	b.gt	5af8 <PySequence_Fast@plt+0x3a28>
    59d0:	cmp	w21, #0x2
    59d4:	b.ne	59b0 <PySequence_Fast@plt+0x38e0>  // b.any
    59d8:	ldrh	w1, [x24, x23, lsl #1]
    59dc:	cmp	w1, #0x2f
    59e0:	b.ls	59ec <PySequence_Fast@plt+0x391c>  // b.plast
    59e4:	cmp	w1, #0x39
    59e8:	b.ls	59c4 <PySequence_Fast@plt+0x38f4>  // b.plast
    59ec:	cmp	x23, x0
    59f0:	b.ge	5ec0 <PySequence_Fast@plt+0x3df0>  // b.tcont
    59f4:	nop
    59f8:	cmp	w1, #0x2e
    59fc:	b.ne	5a18 <PySequence_Fast@plt+0x3948>  // b.any
    5a00:	add	x1, x23, #0x1
    5a04:	ldrh	w1, [x24, x1, lsl #1]
    5a08:	cmp	w1, #0x2f
    5a0c:	b.ls	5a18 <PySequence_Fast@plt+0x3948>  // b.plast
    5a10:	cmp	w1, #0x39
    5a14:	b.ls	65dc <PySequence_Fast@plt+0x450c>  // b.plast
    5a18:	mov	w4, #0x0                   	// #0
    5a1c:	ldrh	w1, [x24, x23, lsl #1]
    5a20:	and	w1, w1, #0xffffffdf
    5a24:	and	w1, w1, #0xffff
    5a28:	cmp	w1, #0x45
    5a2c:	b.eq	6648 <PySequence_Fast@plt+0x4578>  // b.none
    5a30:	cbz	w4, 5ec0 <PySequence_Fast@plt+0x3df0>
    5a34:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    5a38:	sub	x25, x23, x19
    5a3c:	ldr	x20, [x20, #40]
    5a40:	mov	w27, #0x1                   	// #1
    5a44:	ldr	x0, [x0, #3952]
    5a48:	cmp	x20, x0
    5a4c:	b.eq	5c08 <PySequence_Fast@plt+0x3b38>  // b.none
    5a50:	cbz	x20, 5c08 <PySequence_Fast@plt+0x3b38>
    5a54:	and	x1, x21, #0xff
    5a58:	mov	x2, x25
    5a5c:	mov	w0, w21
    5a60:	madd	x1, x1, x19, x24
    5a64:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    5a68:	mov	x26, x0
    5a6c:	cbz	x0, 602c <PySequence_Fast@plt+0x3f5c>
    5a70:	mov	x0, x20
    5a74:	mov	x1, x26
    5a78:	mov	x2, #0x0                   	// #0
    5a7c:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    5a80:	mov	x21, x0
    5a84:	ldr	x1, [x26]
    5a88:	sub	x1, x1, #0x1
    5a8c:	str	x1, [x26]
    5a90:	cbz	x1, 5c78 <PySequence_Fast@plt+0x3ba8>
    5a94:	ldp	x25, x26, [sp, #64]
    5a98:	str	x23, [x22]
    5a9c:	mov	x0, x21
    5aa0:	ldp	x19, x20, [sp, #16]
    5aa4:	ldp	x21, x22, [sp, #32]
    5aa8:	ldp	x23, x24, [sp, #48]
    5aac:	ldp	x27, x28, [sp, #80]
    5ab0:	ldp	x29, x30, [sp], #144
    5ab4:	ret
    5ab8:	ldrh	w1, [x24, x19, lsl #1]
    5abc:	mov	x23, x19
    5ac0:	cmp	w1, #0x2d
    5ac4:	b.ne	5ad8 <PySequence_Fast@plt+0x3a08>  // b.any
    5ac8:	add	x23, x19, #0x1
    5acc:	cmp	x23, x0
    5ad0:	b.gt	601c <PySequence_Fast@plt+0x3f4c>
    5ad4:	ldrh	w1, [x24, x23, lsl #1]
    5ad8:	sub	w2, w1, #0x31
    5adc:	and	w2, w2, #0xffff
    5ae0:	cmp	w2, #0x8
    5ae4:	b.ls	59a0 <PySequence_Fast@plt+0x38d0>  // b.plast
    5ae8:	cmp	w1, #0x30
    5aec:	cset	w1, eq  // eq = none
    5af0:	cbz	w1, 601c <PySequence_Fast@plt+0x3f4c>
    5af4:	add	x23, x23, #0x1
    5af8:	cmp	x0, x23
    5afc:	b.le	5ec0 <PySequence_Fast@plt+0x3df0>
    5b00:	cmp	w21, #0x1
    5b04:	b.eq	65b0 <PySequence_Fast@plt+0x44e0>  // b.none
    5b08:	cmp	w21, #0x2
    5b0c:	b.eq	6a3c <PySequence_Fast@plt+0x496c>  // b.none
    5b10:	ldr	w1, [x24, x23, lsl #2]
    5b14:	cmp	w1, #0x2e
    5b18:	mov	w4, #0x0                   	// #0
    5b1c:	b.ne	5fa4 <PySequence_Fast@plt+0x3ed4>  // b.any
    5b20:	add	x1, x23, #0x1
    5b24:	ldr	w1, [x24, x1, lsl #2]
    5b28:	cmp	w1, #0x2f
    5b2c:	b.hi	65d0 <PySequence_Fast@plt+0x4500>  // b.pmore
    5b30:	mov	w4, #0x0                   	// #0
    5b34:	cmp	w21, #0x1
    5b38:	b.ne	5fa4 <PySequence_Fast@plt+0x3ed4>  // b.any
    5b3c:	ldrb	w2, [x24, x23]
    5b40:	cmp	w2, #0x65
    5b44:	b.eq	5b50 <PySequence_Fast@plt+0x3a80>  // b.none
    5b48:	cmp	w2, #0x45
    5b4c:	b.ne	5a30 <PySequence_Fast@plt+0x3960>  // b.any
    5b50:	add	x3, x23, #0x1
    5b54:	cmp	x0, x3
    5b58:	b.le	5b74 <PySequence_Fast@plt+0x3aa4>
    5b5c:	ldrb	w1, [x24, x3]
    5b60:	mov	w2, #0xfd                  	// #253
    5b64:	sub	w1, w1, #0x2b
    5b68:	tst	w1, w2
    5b6c:	b.ne	5fec <PySequence_Fast@plt+0x3f1c>  // b.any
    5b70:	add	x3, x23, #0x2
    5b74:	cmp	x3, x0
    5b78:	b.gt	6a20 <PySequence_Fast@plt+0x4950>
    5b7c:	cmp	w21, #0x1
    5b80:	b.ne	5bac <PySequence_Fast@plt+0x3adc>  // b.any
    5b84:	b	5fec <PySequence_Fast@plt+0x3f1c>
    5b88:	ldr	w1, [x24, x3, lsl #2]
    5b8c:	lsl	x2, x3, #2
    5b90:	cmp	w1, #0x2f
    5b94:	b.ls	6690 <PySequence_Fast@plt+0x45c0>  // b.plast
    5b98:	cmp	w1, #0x39
    5b9c:	b.hi	6690 <PySequence_Fast@plt+0x45c0>  // b.pmore
    5ba0:	add	x3, x3, #0x1
    5ba4:	cmp	x3, x0
    5ba8:	b.gt	6a20 <PySequence_Fast@plt+0x4950>
    5bac:	cmp	w21, #0x2
    5bb0:	b.ne	5b88 <PySequence_Fast@plt+0x3ab8>  // b.any
    5bb4:	ldrh	w1, [x24, x3, lsl #1]
    5bb8:	lsl	x2, x3, #1
    5bbc:	cmp	w1, #0x2f
    5bc0:	b.ls	5bcc <PySequence_Fast@plt+0x3afc>  // b.plast
    5bc4:	cmp	w1, #0x39
    5bc8:	b.ls	5ba0 <PySequence_Fast@plt+0x3ad0>  // b.plast
    5bcc:	add	x2, x24, x2
    5bd0:	ldurh	w0, [x2, #-2]
    5bd4:	sub	w0, w0, #0x30
    5bd8:	and	w0, w0, #0xffff
    5bdc:	cmp	w0, #0x9
    5be0:	b.hi	5a30 <PySequence_Fast@plt+0x3960>  // b.pmore
    5be4:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    5be8:	sub	x25, x3, x19
    5bec:	ldr	x20, [x20, #40]
    5bf0:	mov	x23, x3
    5bf4:	ldr	x0, [x0, #3952]
    5bf8:	mov	w27, #0x1                   	// #1
    5bfc:	cmp	x20, x0
    5c00:	b.ne	5a50 <PySequence_Fast@plt+0x3980>  // b.any
    5c04:	nop
    5c08:	mov	x1, x25
    5c0c:	mov	x0, #0x0                   	// #0
    5c10:	bl	1e20 <PyBytes_FromStringAndSize@plt>
    5c14:	mov	x26, x0
    5c18:	cbz	x0, 602c <PySequence_Fast@plt+0x3f5c>
    5c1c:	cmp	x25, #0x0
    5c20:	add	x0, x0, #0x20
    5c24:	b.le	5c58 <PySequence_Fast@plt+0x3b88>
    5c28:	cmp	w21, #0x1
    5c2c:	b.eq	6038 <PySequence_Fast@plt+0x3f68>  // b.none
    5c30:	add	x1, x24, x19, lsl #2
    5c34:	add	x19, x24, x19, lsl #1
    5c38:	mov	x3, #0x0                   	// #0
    5c3c:	cmp	w21, #0x2
    5c40:	b.eq	5f30 <PySequence_Fast@plt+0x3e60>  // b.none
    5c44:	ldr	w5, [x1, x3, lsl #2]
    5c48:	strb	w5, [x0, x3]
    5c4c:	add	x3, x3, #0x1
    5c50:	cmp	x3, x25
    5c54:	b.ne	5c3c <PySequence_Fast@plt+0x3b6c>  // b.any
    5c58:	cbz	w27, 5f90 <PySequence_Fast@plt+0x3ec0>
    5c5c:	mov	x0, x26
    5c60:	bl	20c0 <PyFloat_FromString@plt>
    5c64:	ldr	x1, [x26]
    5c68:	mov	x21, x0
    5c6c:	sub	x1, x1, #0x1
    5c70:	str	x1, [x26]
    5c74:	cbnz	x1, 5a94 <PySequence_Fast@plt+0x39c4>
    5c78:	mov	x0, x26
    5c7c:	bl	1e30 <_Py_Dealloc@plt>
    5c80:	b	5a94 <PySequence_Fast@plt+0x39c4>
    5c84:	cmp	w1, #0x22
    5c88:	b.eq	6480 <PySequence_Fast@plt+0x43b0>  // b.none
    5c8c:	cmp	w1, #0x2d
    5c90:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    5c94:	add	x1, x19, #0x8
    5c98:	cmp	x1, x0
    5c9c:	b.ge	5940 <PySequence_Fast@plt+0x3870>  // b.tcont
    5ca0:	cmp	w21, #0x1
    5ca4:	add	x1, x19, #0x1
    5ca8:	b.eq	706c <PySequence_Fast@plt+0x4f9c>  // b.none
    5cac:	cmp	w21, #0x2
    5cb0:	b.eq	71f0 <PySequence_Fast@plt+0x5120>  // b.none
    5cb4:	ldr	w6, [x3, x1, lsl #2]
    5cb8:	lsl	x1, x1, #2
    5cbc:	cmp	w6, #0x49
    5cc0:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    5cc4:	add	x3, x3, x1
    5cc8:	ldr	w1, [x3, #4]
    5ccc:	cmp	w1, #0x6e
    5cd0:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    5cd4:	ldr	w1, [x3, #8]
    5cd8:	cmp	w1, #0x66
    5cdc:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    5ce0:	ldr	w1, [x3, #12]
    5ce4:	cmp	w1, #0x69
    5ce8:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    5cec:	ldr	w1, [x3, #16]
    5cf0:	cmp	w1, #0x6e
    5cf4:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    5cf8:	ldr	w1, [x3, #20]
    5cfc:	cmp	w1, #0x69
    5d00:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    5d04:	ldr	w1, [x3, #24]
    5d08:	cmp	w1, #0x74
    5d0c:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    5d10:	ldr	w1, [x3, #28]
    5d14:	cmp	w1, #0x79
    5d18:	cset	w1, eq  // eq = none
    5d1c:	cbz	w1, 5940 <PySequence_Fast@plt+0x3870>
    5d20:	mov	x3, x22
    5d24:	mov	x2, x19
    5d28:	add	x0, x20, #0x38
    5d2c:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    5d30:	add	x1, x1, #0x950
    5d34:	bl	4388 <PySequence_Fast@plt+0x22b8>
    5d38:	mov	x21, x0
    5d3c:	b	5eec <PySequence_Fast@plt+0x3e1c>
    5d40:	cmp	w1, #0x74
    5d44:	b.eq	653c <PySequence_Fast@plt+0x446c>  // b.none
    5d48:	b.ls	5924 <PySequence_Fast@plt+0x3854>  // b.plast
    5d4c:	cmp	w1, #0x7b
    5d50:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    5d54:	bl	1f20 <PyThreadState_Get@plt>
    5d58:	adrp	x1, 18000 <PyInit__json@@Base+0x10a48>
    5d5c:	str	x1, [sp, #112]
    5d60:	ldr	x2, [x1, #3984]
    5d64:	ldr	w1, [x0, #32]
    5d68:	add	w1, w1, #0x1
    5d6c:	str	w1, [x0, #32]
    5d70:	ldr	w0, [x2]
    5d74:	cmp	w1, w0
    5d78:	b.le	5d8c <PySequence_Fast@plt+0x3cbc>
    5d7c:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    5d80:	add	x0, x0, #0xa80
    5d84:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    5d88:	cbnz	w0, 5ee8 <PySequence_Fast@plt+0x3e18>
    5d8c:	ldrb	w0, [x28, #32]
    5d90:	add	x19, x19, #0x1
    5d94:	ldr	x1, [x20, #32]
    5d98:	stp	x23, x24, [sp, #48]
    5d9c:	str	x1, [sp, #104]
    5da0:	tbz	w0, #7, 686c <PySequence_Fast@plt+0x479c>
    5da4:	stp	x25, x26, [sp, #64]
    5da8:	tbz	w0, #5, 6a60 <PySequence_Fast@plt+0x4990>
    5dac:	tst	x0, #0x40
    5db0:	add	x6, x28, #0x30
    5db4:	add	x0, x28, #0x48
    5db8:	csel	x24, x0, x6, eq  // eq = none
    5dbc:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    5dc0:	ldrb	w23, [x28, #32]
    5dc4:	ldr	x5, [x28, #16]
    5dc8:	ldr	x0, [x0, #4016]
    5dcc:	ubfx	x23, x23, #2, #3
    5dd0:	ldr	x1, [sp, #104]
    5dd4:	sub	x25, x5, #0x1
    5dd8:	cmp	x1, x0
    5ddc:	b.eq	6a68 <PySequence_Fast@plt+0x4998>  // b.none
    5de0:	mov	x0, #0x0                   	// #0
    5de4:	bl	1da0 <PyList_New@plt>
    5de8:	mov	x21, x0
    5dec:	cbz	x21, 63b8 <PySequence_Fast@plt+0x42e8>
    5df0:	cmp	x19, x25
    5df4:	b.gt	5e38 <PySequence_Fast@plt+0x3d68>
    5df8:	cmp	w23, #0x1
    5dfc:	b.eq	66a8 <PySequence_Fast@plt+0x45d8>  // b.none
    5e00:	cmp	w23, #0x2
    5e04:	b.eq	66e0 <PySequence_Fast@plt+0x4610>  // b.none
    5e08:	ldr	w0, [x24, x19, lsl #2]
    5e0c:	sub	w1, w0, #0x9
    5e10:	cmp	w0, #0x20
    5e14:	b.eq	5e28 <PySequence_Fast@plt+0x3d58>  // b.none
    5e18:	cmp	w1, #0x1
    5e1c:	b.ls	5e28 <PySequence_Fast@plt+0x3d58>  // b.plast
    5e20:	cmp	w0, #0xd
    5e24:	b.ne	6f58 <PySequence_Fast@plt+0x4e88>  // b.any
    5e28:	add	x19, x19, #0x1
    5e2c:	cmp	x25, x19
    5e30:	b.ge	5e08 <PySequence_Fast@plt+0x3d38>  // b.tcont
    5e34:	nop
    5e38:	mov	x2, x19
    5e3c:	mov	x1, x28
    5e40:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    5e44:	add	x0, x0, #0xab8
    5e48:	bl	3540 <PySequence_Fast@plt+0x1470>
    5e4c:	b	63a8 <PySequence_Fast@plt+0x42d8>
    5e50:	mov	x0, x1
    5e54:	bl	1db0 <_PyUnicode_Ready@plt>
    5e58:	cmn	w0, #0x1
    5e5c:	b.eq	5ee8 <PySequence_Fast@plt+0x3e18>  // b.none
    5e60:	ldrb	w2, [x28, #32]
    5e64:	b	5824 <PySequence_Fast@plt+0x3754>
    5e68:	ldrb	w1, [x3, x19]
    5e6c:	b	585c <PySequence_Fast@plt+0x378c>
    5e70:	sub	x0, x0, #0x1
    5e74:	cmp	w21, #0x1
    5e78:	ldr	x24, [x28, #72]
    5e7c:	b.ne	596c <PySequence_Fast@plt+0x389c>  // b.any
    5e80:	ldrb	w1, [x24, x19]
    5e84:	mov	x23, x19
    5e88:	cmp	w1, #0x2d
    5e8c:	b.ne	5ea0 <PySequence_Fast@plt+0x3dd0>  // b.any
    5e90:	add	x23, x19, #0x1
    5e94:	cmp	x0, x23
    5e98:	b.lt	601c <PySequence_Fast@plt+0x3f4c>  // b.tstop
    5e9c:	ldrb	w1, [x24, x23]
    5ea0:	sub	w2, w1, #0x31
    5ea4:	and	w2, w2, #0xff
    5ea8:	cmp	w2, #0x8
    5eac:	b.hi	5ae8 <PySequence_Fast@plt+0x3a18>  // b.pmore
    5eb0:	add	x23, x23, #0x1
    5eb4:	cmp	x23, x0
    5eb8:	b.le	5f70 <PySequence_Fast@plt+0x3ea0>
    5ebc:	nop
    5ec0:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    5ec4:	sub	x25, x23, x19
    5ec8:	ldr	x20, [x20, #48]
    5ecc:	mov	w27, #0x0                   	// #0
    5ed0:	ldr	x0, [x0, #4032]
    5ed4:	cmp	x20, x0
    5ed8:	b.ne	5a50 <PySequence_Fast@plt+0x3980>  // b.any
    5edc:	b	5c08 <PySequence_Fast@plt+0x3b38>
    5ee0:	ldp	x23, x24, [sp, #48]
    5ee4:	nop
    5ee8:	mov	x21, #0x0                   	// #0
    5eec:	mov	x0, x21
    5ef0:	ldp	x19, x20, [sp, #16]
    5ef4:	ldp	x21, x22, [sp, #32]
    5ef8:	ldp	x27, x28, [sp, #80]
    5efc:	ldp	x29, x30, [sp], #144
    5f00:	ret
    5f04:	mov	x0, x28
    5f08:	bl	1db0 <_PyUnicode_Ready@plt>
    5f0c:	cmn	w0, #0x1
    5f10:	b.eq	5ee8 <PySequence_Fast@plt+0x3e18>  // b.none
    5f14:	ldrb	w2, [x28, #32]
    5f18:	stp	x23, x24, [sp, #48]
    5f1c:	and	w5, w2, #0x20
    5f20:	ubfx	x21, x2, #2, #3
    5f24:	stp	x25, x26, [sp, #64]
    5f28:	ldr	x0, [x28, #16]
    5f2c:	b	594c <PySequence_Fast@plt+0x387c>
    5f30:	ldrh	w5, [x19, x3, lsl #1]
    5f34:	strb	w5, [x0, x3]
    5f38:	add	x3, x3, #0x1
    5f3c:	cmp	x3, x25
    5f40:	b.eq	5c58 <PySequence_Fast@plt+0x3b88>  // b.none
    5f44:	ldrh	w5, [x19, x3, lsl #1]
    5f48:	strb	w5, [x0, x3]
    5f4c:	add	x3, x3, #0x1
    5f50:	cmp	x3, x25
    5f54:	b.ne	5f30 <PySequence_Fast@plt+0x3e60>  // b.any
    5f58:	b	5c58 <PySequence_Fast@plt+0x3b88>
    5f5c:	ldrh	w1, [x3, x19, lsl #1]
    5f60:	b	585c <PySequence_Fast@plt+0x378c>
    5f64:	add	x23, x23, #0x1
    5f68:	cmp	x0, x23
    5f6c:	b.lt	5ec0 <PySequence_Fast@plt+0x3df0>  // b.tstop
    5f70:	ldrb	w2, [x24, x23]
    5f74:	sub	w1, w2, #0x30
    5f78:	and	w1, w1, #0xff
    5f7c:	cmp	w1, #0x9
    5f80:	b.ls	5f64 <PySequence_Fast@plt+0x3e94>  // b.plast
    5f84:	cmp	x0, x23
    5f88:	b.le	5ec0 <PySequence_Fast@plt+0x3df0>
    5f8c:	b	65b4 <PySequence_Fast@plt+0x44e4>
    5f90:	mov	w2, #0xa                   	// #10
    5f94:	mov	x1, #0x0                   	// #0
    5f98:	bl	2060 <PyLong_FromString@plt>
    5f9c:	mov	x21, x0
    5fa0:	b	5a84 <PySequence_Fast@plt+0x39b4>
    5fa4:	cmp	w21, #0x2
    5fa8:	b.eq	5a1c <PySequence_Fast@plt+0x394c>  // b.none
    5fac:	ldr	w1, [x24, x23, lsl #2]
    5fb0:	and	w1, w1, #0xffffffdf
    5fb4:	cmp	w1, #0x45
    5fb8:	b.ne	5a30 <PySequence_Fast@plt+0x3960>  // b.any
    5fbc:	add	x3, x23, #0x1
    5fc0:	cmp	x3, x0
    5fc4:	b.ge	5b74 <PySequence_Fast@plt+0x3aa4>  // b.tcont
    5fc8:	ldr	w1, [x24, x3, lsl #2]
    5fcc:	sub	w1, w1, #0x2b
    5fd0:	tst	w1, #0xfffffffd
    5fd4:	b.ne	5b7c <PySequence_Fast@plt+0x3aac>  // b.any
    5fd8:	add	x3, x23, #0x2
    5fdc:	b	5b74 <PySequence_Fast@plt+0x3aa4>
    5fe0:	add	x3, x3, #0x1
    5fe4:	cmp	x0, x3
    5fe8:	b.lt	6000 <PySequence_Fast@plt+0x3f30>  // b.tstop
    5fec:	ldrb	w1, [x24, x3]
    5ff0:	sub	w1, w1, #0x30
    5ff4:	and	w1, w1, #0xff
    5ff8:	cmp	w1, #0x9
    5ffc:	b.ls	5fe0 <PySequence_Fast@plt+0x3f10>  // b.plast
    6000:	add	x0, x24, x3
    6004:	ldurb	w0, [x0, #-1]
    6008:	sub	w0, w0, #0x30
    600c:	and	w0, w0, #0xff
    6010:	cmp	w0, #0x9
    6014:	b.ls	5be4 <PySequence_Fast@plt+0x3b14>  // b.plast
    6018:	b	5a30 <PySequence_Fast@plt+0x3960>
    601c:	mov	x0, x19
    6020:	bl	1e80 <PyLong_FromSsize_t@plt>
    6024:	mov	x19, x0
    6028:	cbnz	x0, 67b0 <PySequence_Fast@plt+0x46e0>
    602c:	ldp	x23, x24, [sp, #48]
    6030:	ldp	x25, x26, [sp, #64]
    6034:	b	5ee8 <PySequence_Fast@plt+0x3e18>
    6038:	add	x1, x19, #0x10
    603c:	add	x2, x24, x19
    6040:	add	x1, x24, x1
    6044:	add	x3, x26, #0x30
    6048:	cmp	x1, x0
    604c:	sub	x1, x25, #0x1
    6050:	ccmp	x2, x3, #0x2, hi  // hi = pmore
    6054:	ccmp	x1, #0xe, #0x0, cs  // cs = hs, nlast
    6058:	b.ls	6ee4 <PySequence_Fast@plt+0x4e14>  // b.plast
    605c:	and	x1, x25, #0xfffffffffffffff0
    6060:	mov	x3, #0x0                   	// #0
    6064:	nop
    6068:	ldr	q0, [x2, x3]
    606c:	str	q0, [x0, x3]
    6070:	add	x3, x3, #0x10
    6074:	cmp	x3, x1
    6078:	b.ne	6068 <PySequence_Fast@plt+0x3f98>  // b.any
    607c:	tst	x25, #0xf
    6080:	and	x1, x25, #0xfffffffffffffff0
    6084:	b.eq	5c58 <PySequence_Fast@plt+0x3b88>  // b.none
    6088:	add	x2, x24, x1
    608c:	add	x3, x1, #0x1
    6090:	cmp	x3, x25
    6094:	ldrb	w2, [x2, x19]
    6098:	strb	w2, [x0, x1]
    609c:	b.ge	5c58 <PySequence_Fast@plt+0x3b88>  // b.tcont
    60a0:	add	x4, x24, x3
    60a4:	add	x2, x1, #0x2
    60a8:	cmp	x2, x25
    60ac:	ldrb	w4, [x4, x19]
    60b0:	strb	w4, [x0, x3]
    60b4:	b.ge	5c58 <PySequence_Fast@plt+0x3b88>  // b.tcont
    60b8:	add	x4, x24, x2
    60bc:	add	x3, x1, #0x3
    60c0:	cmp	x3, x25
    60c4:	ldrb	w4, [x4, x19]
    60c8:	strb	w4, [x0, x2]
    60cc:	b.ge	5c58 <PySequence_Fast@plt+0x3b88>  // b.tcont
    60d0:	add	x4, x24, x3
    60d4:	add	x2, x1, #0x4
    60d8:	cmp	x2, x25
    60dc:	ldrb	w4, [x4, x19]
    60e0:	strb	w4, [x0, x3]
    60e4:	b.ge	5c58 <PySequence_Fast@plt+0x3b88>  // b.tcont
    60e8:	add	x4, x24, x2
    60ec:	add	x3, x1, #0x5
    60f0:	cmp	x3, x25
    60f4:	ldrb	w4, [x4, x19]
    60f8:	strb	w4, [x0, x2]
    60fc:	b.ge	5c58 <PySequence_Fast@plt+0x3b88>  // b.tcont
    6100:	add	x4, x24, x3
    6104:	add	x2, x1, #0x6
    6108:	cmp	x2, x25
    610c:	ldrb	w4, [x4, x19]
    6110:	strb	w4, [x0, x3]
    6114:	b.ge	5c58 <PySequence_Fast@plt+0x3b88>  // b.tcont
    6118:	add	x4, x24, x2
    611c:	add	x3, x1, #0x7
    6120:	cmp	x3, x25
    6124:	ldrb	w4, [x4, x19]
    6128:	strb	w4, [x0, x2]
    612c:	b.ge	5c58 <PySequence_Fast@plt+0x3b88>  // b.tcont
    6130:	add	x4, x24, x3
    6134:	add	x2, x1, #0x8
    6138:	cmp	x2, x25
    613c:	ldrb	w4, [x4, x19]
    6140:	strb	w4, [x0, x3]
    6144:	b.ge	5c58 <PySequence_Fast@plt+0x3b88>  // b.tcont
    6148:	add	x4, x24, x2
    614c:	add	x3, x1, #0x9
    6150:	cmp	x3, x25
    6154:	ldrb	w4, [x4, x19]
    6158:	strb	w4, [x0, x2]
    615c:	b.ge	5c58 <PySequence_Fast@plt+0x3b88>  // b.tcont
    6160:	add	x4, x24, x3
    6164:	add	x2, x1, #0xa
    6168:	cmp	x2, x25
    616c:	ldrb	w4, [x4, x19]
    6170:	strb	w4, [x0, x3]
    6174:	b.ge	5c58 <PySequence_Fast@plt+0x3b88>  // b.tcont
    6178:	add	x4, x24, x2
    617c:	add	x3, x1, #0xb
    6180:	cmp	x3, x25
    6184:	ldrb	w4, [x4, x19]
    6188:	strb	w4, [x0, x2]
    618c:	b.ge	5c58 <PySequence_Fast@plt+0x3b88>  // b.tcont
    6190:	add	x4, x24, x3
    6194:	add	x2, x1, #0xc
    6198:	cmp	x2, x25
    619c:	ldrb	w4, [x4, x19]
    61a0:	strb	w4, [x0, x3]
    61a4:	b.ge	5c58 <PySequence_Fast@plt+0x3b88>  // b.tcont
    61a8:	add	x4, x24, x2
    61ac:	add	x3, x1, #0xd
    61b0:	cmp	x3, x25
    61b4:	ldrb	w4, [x4, x19]
    61b8:	strb	w4, [x0, x2]
    61bc:	b.ge	5c58 <PySequence_Fast@plt+0x3b88>  // b.tcont
    61c0:	add	x2, x24, x3
    61c4:	add	x1, x1, #0xe
    61c8:	cmp	x1, x25
    61cc:	ldrb	w2, [x2, x19]
    61d0:	strb	w2, [x0, x3]
    61d4:	b.ge	5c58 <PySequence_Fast@plt+0x3b88>  // b.tcont
    61d8:	add	x24, x24, x1
    61dc:	ldrb	w2, [x24, x19]
    61e0:	strb	w2, [x0, x1]
    61e4:	b	5c58 <PySequence_Fast@plt+0x3b88>
    61e8:	mov	x0, x19
    61ec:	bl	1e80 <PyLong_FromSsize_t@plt>
    61f0:	mov	x19, x0
    61f4:	cbz	x0, 5ee8 <PySequence_Fast@plt+0x3e18>
    61f8:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    61fc:	mov	x1, x19
    6200:	ldr	x0, [x0, #4040]
    6204:	ldr	x0, [x0]
    6208:	bl	1e40 <PyErr_SetObject@plt>
    620c:	ldr	x0, [x19]
    6210:	sub	x0, x0, #0x1
    6214:	str	x0, [x19]
    6218:	cbnz	x0, 5ee8 <PySequence_Fast@plt+0x3e18>
    621c:	mov	x0, x19
    6220:	mov	x21, #0x0                   	// #0
    6224:	bl	1e30 <_Py_Dealloc@plt>
    6228:	b	5eec <PySequence_Fast@plt+0x3e1c>
    622c:	bl	1f20 <PyThreadState_Get@plt>
    6230:	adrp	x1, 18000 <PyInit__json@@Base+0x10a48>
    6234:	str	x1, [sp, #112]
    6238:	ldr	x2, [x1, #3984]
    623c:	ldr	w1, [x0, #32]
    6240:	add	w1, w1, #0x1
    6244:	str	w1, [x0, #32]
    6248:	ldr	w0, [x2]
    624c:	cmp	w1, w0
    6250:	b.le	6264 <PySequence_Fast@plt+0x4194>
    6254:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    6258:	add	x0, x0, #0xb20
    625c:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    6260:	cbnz	w0, 5ee8 <PySequence_Fast@plt+0x3e18>
    6264:	ldrsb	w0, [x28, #32]
    6268:	add	x2, x19, #0x1
    626c:	stp	x23, x24, [sp, #48]
    6270:	tbnz	w0, #31, 628c <PySequence_Fast@plt+0x41bc>
    6274:	mov	x0, x28
    6278:	str	x2, [sp, #96]
    627c:	bl	1db0 <_PyUnicode_Ready@plt>
    6280:	cmn	w0, #0x1
    6284:	ldr	x2, [sp, #96]
    6288:	b.eq	63bc <PySequence_Fast@plt+0x42ec>  // b.none
    628c:	mov	x0, #0x0                   	// #0
    6290:	str	x2, [sp, #96]
    6294:	bl	1da0 <PyList_New@plt>
    6298:	mov	x21, x0
    629c:	ldr	x2, [sp, #96]
    62a0:	cbz	x0, 63bc <PySequence_Fast@plt+0x42ec>
    62a4:	ldrb	w0, [x28, #32]
    62a8:	stp	x25, x26, [sp, #64]
    62ac:	tbnz	w0, #5, 6858 <PySequence_Fast@plt+0x4788>
    62b0:	ldr	x23, [x28, #72]
    62b4:	ldr	x19, [x28, #16]
    62b8:	ldrb	w25, [x28, #32]
    62bc:	sub	x19, x19, #0x1
    62c0:	cmp	x2, x19
    62c4:	ubfx	x25, x25, #2, #3
    62c8:	b.gt	630c <PySequence_Fast@plt+0x423c>
    62cc:	cmp	w25, #0x1
    62d0:	b.eq	67ec <PySequence_Fast@plt+0x471c>  // b.none
    62d4:	cmp	w25, #0x2
    62d8:	b.eq	6820 <PySequence_Fast@plt+0x4750>  // b.none
    62dc:	nop
    62e0:	ldr	w0, [x23, x2, lsl #2]
    62e4:	sub	w1, w0, #0x9
    62e8:	cmp	w0, #0x20
    62ec:	b.eq	6300 <PySequence_Fast@plt+0x4230>  // b.none
    62f0:	cmp	w1, #0x1
    62f4:	b.ls	6300 <PySequence_Fast@plt+0x4230>  // b.plast
    62f8:	cmp	w0, #0xd
    62fc:	b.ne	6fb8 <PySequence_Fast@plt+0x4ee8>  // b.any
    6300:	add	x2, x2, #0x1
    6304:	cmp	x2, x19
    6308:	b.le	62e0 <PySequence_Fast@plt+0x4210>
    630c:	add	x26, sp, #0x88
    6310:	mov	x3, x26
    6314:	mov	x1, x28
    6318:	mov	x0, x20
    631c:	bl	57f8 <PySequence_Fast@plt+0x3728>
    6320:	mov	x27, x0
    6324:	cbz	x0, 63a8 <PySequence_Fast@plt+0x42d8>
    6328:	mov	x1, x0
    632c:	mov	x0, x21
    6330:	bl	1eb0 <PyList_Append@plt>
    6334:	cmn	w0, #0x1
    6338:	ldr	x0, [x27]
    633c:	sub	x0, x0, #0x1
    6340:	str	x0, [x27]
    6344:	b.eq	6a44 <PySequence_Fast@plt+0x4974>  // b.none
    6348:	cbz	x0, 690c <PySequence_Fast@plt+0x483c>
    634c:	ldr	x2, [sp, #136]
    6350:	cmp	x19, x2
    6354:	b.lt	6394 <PySequence_Fast@plt+0x42c4>  // b.tstop
    6358:	cmp	w25, #0x1
    635c:	b.eq	68c0 <PySequence_Fast@plt+0x47f0>  // b.none
    6360:	cmp	w25, #0x2
    6364:	b.eq	6888 <PySequence_Fast@plt+0x47b8>  // b.none
    6368:	ldr	w0, [x23, x2, lsl #2]
    636c:	sub	w1, w0, #0x9
    6370:	cmp	w0, #0x20
    6374:	b.eq	6388 <PySequence_Fast@plt+0x42b8>  // b.none
    6378:	cmp	w1, #0x1
    637c:	b.ls	6388 <PySequence_Fast@plt+0x42b8>  // b.plast
    6380:	cmp	w0, #0xd
    6384:	b.ne	6a04 <PySequence_Fast@plt+0x4934>  // b.any
    6388:	add	x2, x2, #0x1
    638c:	cmp	x2, x19
    6390:	b.le	6368 <PySequence_Fast@plt+0x4298>
    6394:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    6398:	mov	x1, x28
    639c:	add	x0, x0, #0xb08
    63a0:	bl	3540 <PySequence_Fast@plt+0x1470>
    63a4:	nop
    63a8:	ldr	x0, [x21]
    63ac:	sub	x0, x0, #0x1
    63b0:	str	x0, [x21]
    63b4:	cbz	x0, 68f8 <PySequence_Fast@plt+0x4828>
    63b8:	ldp	x25, x26, [sp, #64]
    63bc:	mov	x21, #0x0                   	// #0
    63c0:	bl	1f20 <PyThreadState_Get@plt>
    63c4:	ldr	w2, [x0, #32]
    63c8:	ldr	x1, [sp, #112]
    63cc:	sub	w2, w2, #0x1
    63d0:	ldr	x24, [x1, #3984]
    63d4:	ldr	w1, [x24]
    63d8:	str	w2, [x0, #32]
    63dc:	cmp	w1, #0xc9
    63e0:	sub	w3, w1, #0x32
    63e4:	asr	w1, w1, #2
    63e8:	add	w1, w1, w1, lsl #1
    63ec:	csel	w1, w1, w3, lt  // lt = tstop
    63f0:	cmp	w2, w1
    63f4:	b.lt	6a10 <PySequence_Fast@plt+0x4940>  // b.tstop
    63f8:	ldp	x23, x24, [sp, #48]
    63fc:	b	5eec <PySequence_Fast@plt+0x3e1c>
    6400:	add	x1, x19, #0x4
    6404:	cmp	x1, x0
    6408:	b.ge	5940 <PySequence_Fast@plt+0x3870>  // b.tcont
    640c:	cmp	w21, #0x1
    6410:	add	x1, x19, #0x1
    6414:	b.eq	7100 <PySequence_Fast@plt+0x5030>  // b.none
    6418:	cmp	w21, #0x2
    641c:	b.eq	728c <PySequence_Fast@plt+0x51bc>  // b.none
    6420:	ldr	w6, [x3, x1, lsl #2]
    6424:	lsl	x1, x1, #2
    6428:	cmp	w6, #0x61
    642c:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    6430:	add	x1, x3, x1
    6434:	ldr	w3, [x1, #4]
    6438:	cmp	w3, #0x6c
    643c:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    6440:	ldr	w3, [x1, #8]
    6444:	cmp	w3, #0x73
    6448:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    644c:	ldr	w1, [x1, #12]
    6450:	cmp	w1, #0x65
    6454:	cset	w1, eq  // eq = none
    6458:	cbz	w1, 5940 <PySequence_Fast@plt+0x3870>
    645c:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    6460:	add	x19, x19, #0x5
    6464:	str	x19, [x22]
    6468:	ldr	x0, [x0, #3992]
    646c:	mov	x21, x0
    6470:	ldr	x1, [x0]
    6474:	add	x1, x1, #0x1
    6478:	str	x1, [x0]
    647c:	b	5eec <PySequence_Fast@plt+0x3e1c>
    6480:	ldrsb	w2, [x20, #16]
    6484:	mov	x3, x22
    6488:	add	x1, x19, #0x1
    648c:	mov	x0, x28
    6490:	bl	3630 <PySequence_Fast@plt+0x1560>
    6494:	mov	x21, x0
    6498:	b	5eec <PySequence_Fast@plt+0x3e1c>
    649c:	add	x1, x19, #0x7
    64a0:	cmp	x1, x0
    64a4:	b.ge	5940 <PySequence_Fast@plt+0x3870>  // b.tcont
    64a8:	cmp	w21, #0x1
    64ac:	add	x1, x19, #0x1
    64b0:	b.eq	6fc4 <PySequence_Fast@plt+0x4ef4>  // b.none
    64b4:	cmp	w21, #0x2
    64b8:	b.eq	72c8 <PySequence_Fast@plt+0x51f8>  // b.none
    64bc:	ldr	w6, [x3, x1, lsl #2]
    64c0:	lsl	x1, x1, #2
    64c4:	cmp	w6, #0x6e
    64c8:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    64cc:	add	x3, x3, x1
    64d0:	ldr	w1, [x3, #4]
    64d4:	cmp	w1, #0x66
    64d8:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    64dc:	ldr	w1, [x3, #8]
    64e0:	cmp	w1, #0x69
    64e4:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    64e8:	ldr	w1, [x3, #12]
    64ec:	cmp	w1, #0x6e
    64f0:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    64f4:	ldr	w1, [x3, #16]
    64f8:	cmp	w1, #0x69
    64fc:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    6500:	ldr	w1, [x3, #20]
    6504:	cmp	w1, #0x74
    6508:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    650c:	ldr	w1, [x3, #24]
    6510:	cmp	w1, #0x79
    6514:	cset	w1, eq  // eq = none
    6518:	cbz	w1, 5940 <PySequence_Fast@plt+0x3870>
    651c:	mov	x3, x22
    6520:	mov	x2, x19
    6524:	add	x0, x20, #0x38
    6528:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    652c:	add	x1, x1, #0x940
    6530:	bl	4388 <PySequence_Fast@plt+0x22b8>
    6534:	mov	x21, x0
    6538:	b	5eec <PySequence_Fast@plt+0x3e1c>
    653c:	add	x1, x19, #0x3
    6540:	cmp	x1, x0
    6544:	b.ge	5940 <PySequence_Fast@plt+0x3870>  // b.tcont
    6548:	cmp	w21, #0x1
    654c:	add	x1, x19, #0x1
    6550:	b.eq	7020 <PySequence_Fast@plt+0x4f50>  // b.none
    6554:	cmp	w21, #0x2
    6558:	b.eq	7328 <PySequence_Fast@plt+0x5258>  // b.none
    655c:	ldr	w6, [x3, x1, lsl #2]
    6560:	lsl	x1, x1, #2
    6564:	cmp	w6, #0x72
    6568:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    656c:	add	x1, x3, x1
    6570:	ldr	w3, [x1, #4]
    6574:	cmp	w3, #0x75
    6578:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    657c:	ldr	w1, [x1, #8]
    6580:	cmp	w1, #0x65
    6584:	cset	w1, eq  // eq = none
    6588:	cbz	w1, 5940 <PySequence_Fast@plt+0x3870>
    658c:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    6590:	add	x19, x19, #0x4
    6594:	str	x19, [x22]
    6598:	ldr	x0, [x0, #4024]
    659c:	mov	x21, x0
    65a0:	ldr	x1, [x0]
    65a4:	add	x1, x1, #0x1
    65a8:	str	x1, [x0]
    65ac:	b	5eec <PySequence_Fast@plt+0x3e1c>
    65b0:	ldrb	w2, [x24, x23]
    65b4:	cmp	w2, #0x2e
    65b8:	mov	w4, #0x0                   	// #0
    65bc:	b.ne	5b40 <PySequence_Fast@plt+0x3a70>  // b.any
    65c0:	add	x1, x24, x23
    65c4:	ldrb	w1, [x1, #1]
    65c8:	cmp	w1, #0x2f
    65cc:	b.ls	5ec0 <PySequence_Fast@plt+0x3df0>  // b.plast
    65d0:	cmp	w1, #0x39
    65d4:	cset	w1, ls  // ls = plast
    65d8:	cbz	w1, 5b30 <PySequence_Fast@plt+0x3a60>
    65dc:	add	x23, x23, #0x2
    65e0:	cmp	x0, x23
    65e4:	b.lt	5a34 <PySequence_Fast@plt+0x3964>  // b.tstop
    65e8:	cmp	w21, #0x1
    65ec:	b.ne	6614 <PySequence_Fast@plt+0x4544>  // b.any
    65f0:	b	678c <PySequence_Fast@plt+0x46bc>
    65f4:	ldr	w1, [x24, x23, lsl #2]
    65f8:	cmp	w1, #0x2f
    65fc:	b.ls	7358 <PySequence_Fast@plt+0x5288>  // b.plast
    6600:	cmp	w1, #0x39
    6604:	b.hi	7358 <PySequence_Fast@plt+0x5288>  // b.pmore
    6608:	add	x23, x23, #0x1
    660c:	cmp	x23, x0
    6610:	b.gt	7374 <PySequence_Fast@plt+0x52a4>
    6614:	cmp	w21, #0x2
    6618:	b.ne	65f4 <PySequence_Fast@plt+0x4524>  // b.any
    661c:	ldrh	w1, [x24, x23, lsl #1]
    6620:	cmp	w1, #0x2f
    6624:	b.ls	6630 <PySequence_Fast@plt+0x4560>  // b.plast
    6628:	cmp	w1, #0x39
    662c:	b.ls	6608 <PySequence_Fast@plt+0x4538>  // b.plast
    6630:	cmp	x23, x0
    6634:	b.ge	5a34 <PySequence_Fast@plt+0x3964>  // b.tcont
    6638:	and	w1, w1, #0xffffffdf
    663c:	cmp	w1, #0x45
    6640:	b.ne	5a34 <PySequence_Fast@plt+0x3964>  // b.any
    6644:	mov	w4, #0x1                   	// #1
    6648:	add	x3, x23, #0x1
    664c:	cmp	x3, x0
    6650:	b.ge	5b74 <PySequence_Fast@plt+0x3aa4>  // b.tcont
    6654:	ldrh	w1, [x24, x3, lsl #1]
    6658:	mov	w2, #0xfffd                	// #65533
    665c:	sub	w1, w1, #0x2b
    6660:	tst	w1, w2
    6664:	b.ne	5bac <PySequence_Fast@plt+0x3adc>  // b.any
    6668:	add	x3, x23, #0x2
    666c:	b	5b74 <PySequence_Fast@plt+0x3aa4>
    6670:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    6674:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    6678:	mov	x21, #0x0                   	// #0
    667c:	add	x1, x1, #0xa68
    6680:	ldr	x0, [x0, #3968]
    6684:	ldr	x0, [x0]
    6688:	bl	1e60 <PyErr_SetString@plt>
    668c:	b	5eec <PySequence_Fast@plt+0x3e1c>
    6690:	add	x2, x24, x2
    6694:	ldur	w0, [x2, #-4]
    6698:	sub	w0, w0, #0x30
    669c:	cmp	w0, #0x9
    66a0:	b.ls	5be4 <PySequence_Fast@plt+0x3b14>  // b.plast
    66a4:	b	5a30 <PySequence_Fast@plt+0x3960>
    66a8:	ldrb	w1, [x24, x19]
    66ac:	sub	w0, w1, #0x9
    66b0:	cmp	w1, #0x20
    66b4:	and	w0, w0, #0xff
    66b8:	b.eq	66d0 <PySequence_Fast@plt+0x4600>  // b.none
    66bc:	cmp	w0, #0x1
    66c0:	b.ls	66d0 <PySequence_Fast@plt+0x4600>  // b.plast
    66c4:	cmp	w1, #0xd
    66c8:	b.ne	6a74 <PySequence_Fast@plt+0x49a4>  // b.any
    66cc:	nop
    66d0:	add	x19, x19, #0x1
    66d4:	cmp	x25, x19
    66d8:	b.ge	66a8 <PySequence_Fast@plt+0x45d8>  // b.tcont
    66dc:	b	5e38 <PySequence_Fast@plt+0x3d68>
    66e0:	ldrh	w1, [x24, x19, lsl #1]
    66e4:	sub	w0, w1, #0x9
    66e8:	cmp	w1, #0x20
    66ec:	and	w0, w0, #0xffff
    66f0:	b.eq	6708 <PySequence_Fast@plt+0x4638>  // b.none
    66f4:	cmp	w0, #0x1
    66f8:	b.ls	6708 <PySequence_Fast@plt+0x4638>  // b.plast
    66fc:	cmp	w1, #0xd
    6700:	b.ne	6a74 <PySequence_Fast@plt+0x49a4>  // b.any
    6704:	nop
    6708:	add	x19, x19, #0x1
    670c:	cmp	x25, x19
    6710:	b.ge	66e0 <PySequence_Fast@plt+0x4610>  // b.tcont
    6714:	b	5e38 <PySequence_Fast@plt+0x3d68>
    6718:	cmp	w21, #0x1
    671c:	add	x1, x19, #0x1
    6720:	b.eq	70d4 <PySequence_Fast@plt+0x5004>  // b.none
    6724:	cmp	w21, #0x2
    6728:	b.eq	725c <PySequence_Fast@plt+0x518c>  // b.none
    672c:	ldr	w6, [x3, x1, lsl #2]
    6730:	lsl	x1, x1, #2
    6734:	cmp	w6, #0x75
    6738:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    673c:	add	x1, x3, x1
    6740:	ldr	w3, [x1, #4]
    6744:	cmp	w3, #0x6c
    6748:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    674c:	ldr	w1, [x1, #8]
    6750:	cmp	w1, #0x6c
    6754:	cset	w1, eq  // eq = none
    6758:	cbz	w1, 5940 <PySequence_Fast@plt+0x3870>
    675c:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    6760:	add	x19, x19, #0x4
    6764:	str	x19, [x22]
    6768:	ldr	x0, [x0, #4016]
    676c:	mov	x21, x0
    6770:	ldr	x1, [x0]
    6774:	add	x1, x1, #0x1
    6778:	str	x1, [x0]
    677c:	b	5eec <PySequence_Fast@plt+0x3e1c>
    6780:	add	x23, x23, #0x1
    6784:	cmp	x0, x23
    6788:	b.lt	5a34 <PySequence_Fast@plt+0x3964>  // b.tstop
    678c:	ldrb	w2, [x24, x23]
    6790:	sub	w1, w2, #0x30
    6794:	and	w1, w1, #0xff
    6798:	cmp	w1, #0x9
    679c:	b.ls	6780 <PySequence_Fast@plt+0x46b0>  // b.plast
    67a0:	cmp	x0, x23
    67a4:	mov	w4, #0x1                   	// #1
    67a8:	b.gt	5b40 <PySequence_Fast@plt+0x3a70>
    67ac:	b	5a34 <PySequence_Fast@plt+0x3964>
    67b0:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    67b4:	mov	x1, x19
    67b8:	ldr	x0, [x0, #4040]
    67bc:	ldr	x0, [x0]
    67c0:	bl	1e40 <PyErr_SetObject@plt>
    67c4:	ldr	x0, [x19]
    67c8:	sub	x0, x0, #0x1
    67cc:	str	x0, [x19]
    67d0:	cbnz	x0, 602c <PySequence_Fast@plt+0x3f5c>
    67d4:	mov	x0, x19
    67d8:	mov	x21, #0x0                   	// #0
    67dc:	bl	1e30 <_Py_Dealloc@plt>
    67e0:	ldp	x23, x24, [sp, #48]
    67e4:	ldp	x25, x26, [sp, #64]
    67e8:	b	5eec <PySequence_Fast@plt+0x3e1c>
    67ec:	ldrb	w1, [x23, x2]
    67f0:	sub	w0, w1, #0x9
    67f4:	cmp	w1, #0x20
    67f8:	and	w0, w0, #0xff
    67fc:	b.eq	6810 <PySequence_Fast@plt+0x4740>  // b.none
    6800:	cmp	w0, #0x1
    6804:	b.ls	6810 <PySequence_Fast@plt+0x4740>  // b.plast
    6808:	cmp	w1, #0xd
    680c:	b.ne	6ecc <PySequence_Fast@plt+0x4dfc>  // b.any
    6810:	add	x2, x2, #0x1
    6814:	cmp	x19, x2
    6818:	b.ge	67ec <PySequence_Fast@plt+0x471c>  // b.tcont
    681c:	b	630c <PySequence_Fast@plt+0x423c>
    6820:	ldrh	w1, [x23, x2, lsl #1]
    6824:	sub	w0, w1, #0x9
    6828:	cmp	w1, #0x20
    682c:	and	w0, w0, #0xffff
    6830:	b.eq	6848 <PySequence_Fast@plt+0x4778>  // b.none
    6834:	cmp	w0, #0x1
    6838:	b.ls	6848 <PySequence_Fast@plt+0x4778>  // b.plast
    683c:	cmp	w1, #0xd
    6840:	b.ne	6ecc <PySequence_Fast@plt+0x4dfc>  // b.any
    6844:	nop
    6848:	add	x2, x2, #0x1
    684c:	cmp	x2, x19
    6850:	b.le	6820 <PySequence_Fast@plt+0x4750>
    6854:	b	630c <PySequence_Fast@plt+0x423c>
    6858:	tst	x0, #0x40
    685c:	add	x23, x28, #0x30
    6860:	add	x0, x28, #0x48
    6864:	csel	x23, x0, x23, eq  // eq = none
    6868:	b	62b4 <PySequence_Fast@plt+0x41e4>
    686c:	mov	x0, x28
    6870:	bl	1db0 <_PyUnicode_Ready@plt>
    6874:	cmn	w0, #0x1
    6878:	b.eq	63bc <PySequence_Fast@plt+0x42ec>  // b.none
    687c:	ldrb	w0, [x28, #32]
    6880:	stp	x25, x26, [sp, #64]
    6884:	b	5da8 <PySequence_Fast@plt+0x3cd8>
    6888:	ldrh	w1, [x23, x2, lsl #1]
    688c:	sub	w0, w1, #0x9
    6890:	cmp	w1, #0x20
    6894:	and	w0, w0, #0xffff
    6898:	b.eq	68b0 <PySequence_Fast@plt+0x47e0>  // b.none
    689c:	cmp	w0, #0x1
    68a0:	b.ls	68b0 <PySequence_Fast@plt+0x47e0>  // b.plast
    68a4:	cmp	w1, #0xd
    68a8:	b.ne	6918 <PySequence_Fast@plt+0x4848>  // b.any
    68ac:	nop
    68b0:	add	x2, x2, #0x1
    68b4:	cmp	x2, x19
    68b8:	b.le	6888 <PySequence_Fast@plt+0x47b8>
    68bc:	b	6394 <PySequence_Fast@plt+0x42c4>
    68c0:	ldrb	w1, [x23, x2]
    68c4:	sub	w0, w1, #0x9
    68c8:	cmp	w1, #0x20
    68cc:	and	w0, w0, #0xff
    68d0:	b.eq	68e8 <PySequence_Fast@plt+0x4818>  // b.none
    68d4:	cmp	w0, #0x1
    68d8:	b.ls	68e8 <PySequence_Fast@plt+0x4818>  // b.plast
    68dc:	cmp	w1, #0xd
    68e0:	b.ne	6918 <PySequence_Fast@plt+0x4848>  // b.any
    68e4:	nop
    68e8:	add	x2, x2, #0x1
    68ec:	cmp	x19, x2
    68f0:	b.ge	68c0 <PySequence_Fast@plt+0x47f0>  // b.tcont
    68f4:	b	6394 <PySequence_Fast@plt+0x42c4>
    68f8:	mov	x0, x21
    68fc:	mov	x21, #0x0                   	// #0
    6900:	bl	1e30 <_Py_Dealloc@plt>
    6904:	ldp	x25, x26, [sp, #64]
    6908:	b	63c0 <PySequence_Fast@plt+0x42f0>
    690c:	mov	x0, x27
    6910:	bl	1e30 <_Py_Dealloc@plt>
    6914:	b	634c <PySequence_Fast@plt+0x427c>
    6918:	cmp	w1, #0x5d
    691c:	cset	w0, eq  // eq = none
    6920:	cmp	w25, #0x1
    6924:	cbnz	w0, 73f8 <PySequence_Fast@plt+0x5328>
    6928:	b.eq	6970 <PySequence_Fast@plt+0x48a0>  // b.none
    692c:	cmp	w25, #0x2
    6930:	b.eq	69c0 <PySequence_Fast@plt+0x48f0>  // b.none
    6934:	ldr	w0, [x23, x2, lsl #2]
    6938:	cmp	w0, #0x2c
    693c:	b.ne	6394 <PySequence_Fast@plt+0x42c4>  // b.any
    6940:	add	x2, x2, #0x1
    6944:	cmp	x2, x19
    6948:	b.gt	6310 <PySequence_Fast@plt+0x4240>
    694c:	ldr	w0, [x23, x2, lsl #2]
    6950:	sub	w1, w0, #0x9
    6954:	cmp	w0, #0x20
    6958:	b.eq	6940 <PySequence_Fast@plt+0x4870>  // b.none
    695c:	cmp	w1, #0x1
    6960:	b.ls	6940 <PySequence_Fast@plt+0x4870>  // b.plast
    6964:	cmp	w0, #0xd
    6968:	b.eq	6940 <PySequence_Fast@plt+0x4870>  // b.none
    696c:	b	6310 <PySequence_Fast@plt+0x4240>
    6970:	ldrb	w0, [x23, x2]
    6974:	cmp	w0, #0x2c
    6978:	b.ne	6394 <PySequence_Fast@plt+0x42c4>  // b.any
    697c:	add	x2, x2, #0x1
    6980:	cmp	x2, x19
    6984:	b.gt	6310 <PySequence_Fast@plt+0x4240>
    6988:	ldrb	w1, [x23, x2]
    698c:	sub	w0, w1, #0x9
    6990:	cmp	w1, #0x20
    6994:	and	w0, w0, #0xff
    6998:	b.eq	69b0 <PySequence_Fast@plt+0x48e0>  // b.none
    699c:	cmp	w0, #0x1
    69a0:	b.ls	69b0 <PySequence_Fast@plt+0x48e0>  // b.plast
    69a4:	cmp	w1, #0xd
    69a8:	b.ne	6310 <PySequence_Fast@plt+0x4240>  // b.any
    69ac:	nop
    69b0:	add	x2, x2, #0x1
    69b4:	cmp	x19, x2
    69b8:	b.ge	6988 <PySequence_Fast@plt+0x48b8>  // b.tcont
    69bc:	b	6310 <PySequence_Fast@plt+0x4240>
    69c0:	ldrh	w0, [x23, x2, lsl #1]
    69c4:	cmp	w0, #0x2c
    69c8:	b.ne	6394 <PySequence_Fast@plt+0x42c4>  // b.any
    69cc:	nop
    69d0:	add	x2, x2, #0x1
    69d4:	cmp	x2, x19
    69d8:	b.gt	6310 <PySequence_Fast@plt+0x4240>
    69dc:	ldrh	w1, [x23, x2, lsl #1]
    69e0:	sub	w0, w1, #0x9
    69e4:	cmp	w1, #0x20
    69e8:	and	w0, w0, #0xffff
    69ec:	b.eq	69d0 <PySequence_Fast@plt+0x4900>  // b.none
    69f0:	cmp	w0, #0x1
    69f4:	b.ls	69d0 <PySequence_Fast@plt+0x4900>  // b.plast
    69f8:	cmp	w1, #0xd
    69fc:	b.eq	69d0 <PySequence_Fast@plt+0x4900>  // b.none
    6a00:	b	6310 <PySequence_Fast@plt+0x4240>
    6a04:	cmp	w0, #0x5d
    6a08:	cset	w0, eq  // eq = none
    6a0c:	b	6920 <PySequence_Fast@plt+0x4850>
    6a10:	bl	1f20 <PyThreadState_Get@plt>
    6a14:	strb	wzr, [x0, #36]
    6a18:	ldp	x23, x24, [sp, #48]
    6a1c:	b	5eec <PySequence_Fast@plt+0x3e1c>
    6a20:	cmp	w21, #0x1
    6a24:	b.eq	6000 <PySequence_Fast@plt+0x3f30>  // b.none
    6a28:	lsl	x2, x3, #2
    6a2c:	cmp	w21, #0x2
    6a30:	b.ne	6690 <PySequence_Fast@plt+0x45c0>  // b.any
    6a34:	lsl	x2, x3, #1
    6a38:	b	5bcc <PySequence_Fast@plt+0x3afc>
    6a3c:	ldrh	w1, [x24, x23, lsl #1]
    6a40:	b	59f8 <PySequence_Fast@plt+0x3928>
    6a44:	cbnz	x0, 63a8 <PySequence_Fast@plt+0x42d8>
    6a48:	mov	x0, x27
    6a4c:	bl	1e30 <_Py_Dealloc@plt>
    6a50:	b	63a8 <PySequence_Fast@plt+0x42d8>
    6a54:	cmp	x23, x0
    6a58:	b.lt	5b14 <PySequence_Fast@plt+0x3a44>  // b.tstop
    6a5c:	b	5ec0 <PySequence_Fast@plt+0x3df0>
    6a60:	ldr	x24, [x28, #72]
    6a64:	b	5dbc <PySequence_Fast@plt+0x3cec>
    6a68:	bl	1fd0 <PyDict_New@plt>
    6a6c:	mov	x21, x0
    6a70:	b	5dec <PySequence_Fast@plt+0x3d1c>
    6a74:	cmp	w1, #0x7d
    6a78:	b.eq	6f60 <PySequence_Fast@plt+0x4e90>  // b.none
    6a7c:	cmp	x25, x19
    6a80:	b.lt	5e38 <PySequence_Fast@plt+0x3d68>  // b.tstop
    6a84:	add	x0, sp, #0x88
    6a88:	str	x0, [sp, #96]
    6a8c:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    6a90:	ldr	x0, [x0, #4016]
    6a94:	str	x0, [sp, #120]
    6a98:	cmp	w23, #0x1
    6a9c:	b.eq	6be8 <PySequence_Fast@plt+0x4b18>  // b.none
    6aa0:	cmp	w23, #0x2
    6aa4:	b.eq	6c04 <PySequence_Fast@plt+0x4b34>  // b.none
    6aa8:	ldr	w0, [x24, x19, lsl #2]
    6aac:	cmp	w0, #0x22
    6ab0:	b.ne	5e38 <PySequence_Fast@plt+0x3d68>  // b.any
    6ab4:	ldrsb	w2, [x20, #16]
    6ab8:	add	x1, x19, #0x1
    6abc:	ldr	x3, [sp, #96]
    6ac0:	mov	x0, x28
    6ac4:	bl	3630 <PySequence_Fast@plt+0x1560>
    6ac8:	mov	x27, x0
    6acc:	cbz	x0, 63a8 <PySequence_Fast@plt+0x42d8>
    6ad0:	mov	x1, x0
    6ad4:	ldr	x0, [x20, #64]
    6ad8:	bl	20b0 <PyDict_GetItemWithError@plt>
    6adc:	mov	x19, x0
    6ae0:	cbz	x0, 6c14 <PySequence_Fast@plt+0x4b44>
    6ae4:	ldr	x0, [x0]
    6ae8:	add	x0, x0, #0x1
    6aec:	str	x0, [x19]
    6af0:	ldr	x0, [x27]
    6af4:	sub	x0, x0, #0x1
    6af8:	str	x0, [x27]
    6afc:	cbz	x0, 6bf8 <PySequence_Fast@plt+0x4b28>
    6b00:	ldr	x2, [sp, #136]
    6b04:	cmp	x25, x2
    6b08:	b.lt	6b4c <PySequence_Fast@plt+0x4a7c>  // b.tstop
    6b0c:	cmp	w23, #0x1
    6b10:	b.eq	6bb0 <PySequence_Fast@plt+0x4ae0>  // b.none
    6b14:	cmp	w23, #0x2
    6b18:	b.eq	6b78 <PySequence_Fast@plt+0x4aa8>  // b.none
    6b1c:	nop
    6b20:	ldr	w1, [x24, x2, lsl #2]
    6b24:	sub	w0, w1, #0x9
    6b28:	cmp	w1, #0x20
    6b2c:	b.eq	6b40 <PySequence_Fast@plt+0x4a70>  // b.none
    6b30:	cmp	w0, #0x1
    6b34:	b.ls	6b40 <PySequence_Fast@plt+0x4a70>  // b.plast
    6b38:	cmp	w1, #0xd
    6b3c:	b.ne	6c48 <PySequence_Fast@plt+0x4b78>  // b.any
    6b40:	add	x2, x2, #0x1
    6b44:	cmp	x25, x2
    6b48:	b.ge	6b20 <PySequence_Fast@plt+0x4a50>  // b.tcont
    6b4c:	mov	x1, x28
    6b50:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    6b54:	add	x0, x0, #0xaf0
    6b58:	bl	3540 <PySequence_Fast@plt+0x1470>
    6b5c:	ldr	x0, [x19]
    6b60:	sub	x0, x0, #0x1
    6b64:	str	x0, [x19]
    6b68:	cbnz	x0, 63a8 <PySequence_Fast@plt+0x42d8>
    6b6c:	mov	x0, x19
    6b70:	bl	1e30 <_Py_Dealloc@plt>
    6b74:	b	63a8 <PySequence_Fast@plt+0x42d8>
    6b78:	ldrh	w0, [x24, x2, lsl #1]
    6b7c:	sub	w1, w0, #0x9
    6b80:	cmp	w0, #0x20
    6b84:	and	w1, w1, #0xffff
    6b88:	b.eq	6ba0 <PySequence_Fast@plt+0x4ad0>  // b.none
    6b8c:	cmp	w1, #0x1
    6b90:	b.ls	6ba0 <PySequence_Fast@plt+0x4ad0>  // b.plast
    6b94:	cmp	w0, #0xd
    6b98:	b.ne	7138 <PySequence_Fast@plt+0x5068>  // b.any
    6b9c:	nop
    6ba0:	add	x2, x2, #0x1
    6ba4:	cmp	x25, x2
    6ba8:	b.ge	6b78 <PySequence_Fast@plt+0x4aa8>  // b.tcont
    6bac:	b	6b4c <PySequence_Fast@plt+0x4a7c>
    6bb0:	ldrb	w3, [x24, x2]
    6bb4:	sub	w1, w3, #0x9
    6bb8:	cmp	w3, #0x20
    6bbc:	and	w1, w1, #0xff
    6bc0:	b.eq	6bd8 <PySequence_Fast@plt+0x4b08>  // b.none
    6bc4:	cmp	w1, #0x1
    6bc8:	b.ls	6bd8 <PySequence_Fast@plt+0x4b08>  // b.plast
    6bcc:	cmp	w3, #0xd
    6bd0:	b.ne	6e88 <PySequence_Fast@plt+0x4db8>  // b.any
    6bd4:	nop
    6bd8:	add	x2, x2, #0x1
    6bdc:	cmp	x25, x2
    6be0:	b.ge	6bb0 <PySequence_Fast@plt+0x4ae0>  // b.tcont
    6be4:	b	6b4c <PySequence_Fast@plt+0x4a7c>
    6be8:	ldrb	w0, [x24, x19]
    6bec:	cmp	w0, #0x22
    6bf0:	b.eq	6ab4 <PySequence_Fast@plt+0x49e4>  // b.none
    6bf4:	b	5e38 <PySequence_Fast@plt+0x3d68>
    6bf8:	mov	x0, x27
    6bfc:	bl	1e30 <_Py_Dealloc@plt>
    6c00:	b	6b00 <PySequence_Fast@plt+0x4a30>
    6c04:	ldrh	w0, [x24, x19, lsl #1]
    6c08:	cmp	w0, #0x22
    6c0c:	b.eq	6ab4 <PySequence_Fast@plt+0x49e4>  // b.none
    6c10:	b	5e38 <PySequence_Fast@plt+0x3d68>
    6c14:	bl	1f40 <PyErr_Occurred@plt>
    6c18:	cbnz	x0, 7454 <PySequence_Fast@plt+0x5384>
    6c1c:	ldr	x0, [x20, #64]
    6c20:	mov	x2, x27
    6c24:	mov	x1, x27
    6c28:	mov	x19, x27
    6c2c:	bl	2020 <PyDict_SetItem@plt>
    6c30:	tbz	w0, #31, 6b00 <PySequence_Fast@plt+0x4a30>
    6c34:	ldr	x0, [x19]
    6c38:	sub	x0, x0, #0x1
    6c3c:	str	x0, [x19]
    6c40:	cbz	x0, 6b6c <PySequence_Fast@plt+0x4a9c>
    6c44:	b	63a8 <PySequence_Fast@plt+0x42d8>
    6c48:	cmp	x25, x2
    6c4c:	b.lt	6b4c <PySequence_Fast@plt+0x4a7c>  // b.tstop
    6c50:	cmp	w1, #0x3a
    6c54:	b.ne	6b4c <PySequence_Fast@plt+0x4a7c>  // b.any
    6c58:	add	x2, x2, #0x1
    6c5c:	cmp	x25, x2
    6c60:	b.lt	6c88 <PySequence_Fast@plt+0x4bb8>  // b.tstop
    6c64:	ldr	w1, [x24, x2, lsl #2]
    6c68:	sub	w0, w1, #0x9
    6c6c:	cmp	w1, #0x20
    6c70:	b.eq	6c58 <PySequence_Fast@plt+0x4b88>  // b.none
    6c74:	cmp	w0, #0x1
    6c78:	b.ls	6c58 <PySequence_Fast@plt+0x4b88>  // b.plast
    6c7c:	cmp	w1, #0xd
    6c80:	b.eq	6c58 <PySequence_Fast@plt+0x4b88>  // b.none
    6c84:	nop
    6c88:	ldr	x3, [sp, #96]
    6c8c:	mov	x1, x28
    6c90:	mov	x0, x20
    6c94:	bl	57f8 <PySequence_Fast@plt+0x3728>
    6c98:	mov	x27, x0
    6c9c:	cbz	x0, 6c34 <PySequence_Fast@plt+0x4b64>
    6ca0:	mov	x2, x0
    6ca4:	ldr	x0, [sp, #104]
    6ca8:	ldr	x1, [sp, #120]
    6cac:	cmp	x0, x1
    6cb0:	mov	x1, x19
    6cb4:	b.eq	6dd8 <PySequence_Fast@plt+0x4d08>  // b.none
    6cb8:	mov	x0, #0x2                   	// #2
    6cbc:	bl	2090 <PyTuple_Pack@plt>
    6cc0:	mov	x26, x0
    6cc4:	cbz	x0, 7384 <PySequence_Fast@plt+0x52b4>
    6cc8:	ldr	x0, [x19]
    6ccc:	sub	x0, x0, #0x1
    6cd0:	str	x0, [x19]
    6cd4:	cbz	x0, 6e28 <PySequence_Fast@plt+0x4d58>
    6cd8:	ldr	x0, [x27]
    6cdc:	sub	x0, x0, #0x1
    6ce0:	str	x0, [x27]
    6ce4:	cbz	x0, 6e10 <PySequence_Fast@plt+0x4d40>
    6ce8:	mov	x1, x26
    6cec:	mov	x0, x21
    6cf0:	bl	1eb0 <PyList_Append@plt>
    6cf4:	cmn	w0, #0x1
    6cf8:	ldr	x0, [x26]
    6cfc:	sub	x0, x0, #0x1
    6d00:	str	x0, [x26]
    6d04:	b.eq	73e8 <PySequence_Fast@plt+0x5318>  // b.none
    6d08:	cbz	x0, 6e1c <PySequence_Fast@plt+0x4d4c>
    6d0c:	ldr	x19, [sp, #136]
    6d10:	cmp	x25, x19
    6d14:	b.lt	6d54 <PySequence_Fast@plt+0x4c84>  // b.tstop
    6d18:	cmp	w23, #0x1
    6d1c:	b.eq	6da0 <PySequence_Fast@plt+0x4cd0>  // b.none
    6d20:	cmp	w23, #0x2
    6d24:	b.eq	6d6c <PySequence_Fast@plt+0x4c9c>  // b.none
    6d28:	ldr	w0, [x24, x19, lsl #2]
    6d2c:	sub	w1, w0, #0x9
    6d30:	cmp	w0, #0x20
    6d34:	b.eq	6d48 <PySequence_Fast@plt+0x4c78>  // b.none
    6d38:	cmp	w1, #0x1
    6d3c:	b.ls	6d48 <PySequence_Fast@plt+0x4c78>  // b.plast
    6d40:	cmp	w0, #0xd
    6d44:	b.ne	6e34 <PySequence_Fast@plt+0x4d64>  // b.any
    6d48:	add	x19, x19, #0x1
    6d4c:	cmp	x19, x25
    6d50:	b.le	6d28 <PySequence_Fast@plt+0x4c58>
    6d54:	mov	x2, x19
    6d58:	mov	x1, x28
    6d5c:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    6d60:	add	x0, x0, #0xb08
    6d64:	bl	3540 <PySequence_Fast@plt+0x1470>
    6d68:	b	63a8 <PySequence_Fast@plt+0x42d8>
    6d6c:	ldrh	w1, [x24, x19, lsl #1]
    6d70:	sub	w0, w1, #0x9
    6d74:	cmp	w1, #0x20
    6d78:	and	w0, w0, #0xffff
    6d7c:	b.eq	6d90 <PySequence_Fast@plt+0x4cc0>  // b.none
    6d80:	cmp	w0, #0x1
    6d84:	b.ls	6d90 <PySequence_Fast@plt+0x4cc0>  // b.plast
    6d88:	cmp	w1, #0xd
    6d8c:	b.ne	717c <PySequence_Fast@plt+0x50ac>  // b.any
    6d90:	add	x19, x19, #0x1
    6d94:	cmp	x25, x19
    6d98:	b.ge	6d6c <PySequence_Fast@plt+0x4c9c>  // b.tcont
    6d9c:	b	6d54 <PySequence_Fast@plt+0x4c84>
    6da0:	ldrb	w1, [x24, x19]
    6da4:	sub	w0, w1, #0x9
    6da8:	cmp	w1, #0x20
    6dac:	and	w0, w0, #0xff
    6db0:	b.eq	6dc8 <PySequence_Fast@plt+0x4cf8>  // b.none
    6db4:	cmp	w0, #0x1
    6db8:	b.ls	6dc8 <PySequence_Fast@plt+0x4cf8>  // b.plast
    6dbc:	cmp	w1, #0xd
    6dc0:	b.ne	6f00 <PySequence_Fast@plt+0x4e30>  // b.any
    6dc4:	nop
    6dc8:	add	x19, x19, #0x1
    6dcc:	cmp	x25, x19
    6dd0:	b.ge	6da0 <PySequence_Fast@plt+0x4cd0>  // b.tcont
    6dd4:	b	6d54 <PySequence_Fast@plt+0x4c84>
    6dd8:	mov	x0, x21
    6ddc:	bl	2020 <PyDict_SetItem@plt>
    6de0:	tbnz	w0, #31, 7384 <PySequence_Fast@plt+0x52b4>
    6de4:	ldr	x0, [x19]
    6de8:	sub	x0, x0, #0x1
    6dec:	str	x0, [x19]
    6df0:	cbz	x0, 6f4c <PySequence_Fast@plt+0x4e7c>
    6df4:	ldr	x0, [x27]
    6df8:	sub	x0, x0, #0x1
    6dfc:	str	x0, [x27]
    6e00:	cbnz	x0, 6d0c <PySequence_Fast@plt+0x4c3c>
    6e04:	mov	x0, x27
    6e08:	bl	1e30 <_Py_Dealloc@plt>
    6e0c:	b	6d0c <PySequence_Fast@plt+0x4c3c>
    6e10:	mov	x0, x27
    6e14:	bl	1e30 <_Py_Dealloc@plt>
    6e18:	b	6ce8 <PySequence_Fast@plt+0x4c18>
    6e1c:	mov	x0, x26
    6e20:	bl	1e30 <_Py_Dealloc@plt>
    6e24:	b	6d0c <PySequence_Fast@plt+0x4c3c>
    6e28:	mov	x0, x19
    6e2c:	bl	1e30 <_Py_Dealloc@plt>
    6e30:	b	6cd8 <PySequence_Fast@plt+0x4c08>
    6e34:	cmp	x25, x19
    6e38:	b.lt	6d54 <PySequence_Fast@plt+0x4c84>  // b.tstop
    6e3c:	cmp	w0, #0x7d
    6e40:	b.eq	6f60 <PySequence_Fast@plt+0x4e90>  // b.none
    6e44:	cmp	w0, #0x2c
    6e48:	b.ne	6d54 <PySequence_Fast@plt+0x4c84>  // b.any
    6e4c:	nop
    6e50:	add	x19, x19, #0x1
    6e54:	cmp	x25, x19
    6e58:	b.lt	5e38 <PySequence_Fast@plt+0x3d68>  // b.tstop
    6e5c:	ldr	w0, [x24, x19, lsl #2]
    6e60:	sub	w1, w0, #0x9
    6e64:	cmp	w0, #0x20
    6e68:	b.eq	6e50 <PySequence_Fast@plt+0x4d80>  // b.none
    6e6c:	cmp	w1, #0x1
    6e70:	b.ls	6e50 <PySequence_Fast@plt+0x4d80>  // b.plast
    6e74:	cmp	w0, #0xd
    6e78:	b.eq	6e50 <PySequence_Fast@plt+0x4d80>  // b.none
    6e7c:	cmp	x25, x19
    6e80:	b.ge	6a98 <PySequence_Fast@plt+0x49c8>  // b.tcont
    6e84:	b	5e38 <PySequence_Fast@plt+0x3d68>
    6e88:	cmp	x25, x2
    6e8c:	b.lt	6b4c <PySequence_Fast@plt+0x4a7c>  // b.tstop
    6e90:	cmp	w3, #0x3a
    6e94:	b.ne	6b4c <PySequence_Fast@plt+0x4a7c>  // b.any
    6e98:	add	x2, x2, #0x1
    6e9c:	cmp	x25, x2
    6ea0:	b.lt	6c88 <PySequence_Fast@plt+0x4bb8>  // b.tstop
    6ea4:	ldrb	w0, [x24, x2]
    6ea8:	sub	w1, w0, #0x9
    6eac:	cmp	w0, #0x20
    6eb0:	and	w1, w1, #0xff
    6eb4:	b.eq	6e98 <PySequence_Fast@plt+0x4dc8>  // b.none
    6eb8:	cmp	w1, #0x1
    6ebc:	b.ls	6e98 <PySequence_Fast@plt+0x4dc8>  // b.plast
    6ec0:	cmp	w0, #0xd
    6ec4:	b.eq	6e98 <PySequence_Fast@plt+0x4dc8>  // b.none
    6ec8:	b	6c88 <PySequence_Fast@plt+0x4bb8>
    6ecc:	cmp	w1, #0x5d
    6ed0:	b.ne	630c <PySequence_Fast@plt+0x423c>  // b.any
    6ed4:	add	x2, x2, #0x1
    6ed8:	ldp	x25, x26, [sp, #64]
    6edc:	str	x2, [x22]
    6ee0:	b	63c0 <PySequence_Fast@plt+0x42f0>
    6ee4:	mov	x1, #0x0                   	// #0
    6ee8:	ldrb	w3, [x2, x1]
    6eec:	strb	w3, [x0, x1]
    6ef0:	add	x1, x1, #0x1
    6ef4:	cmp	x1, x25
    6ef8:	b.ne	6ee8 <PySequence_Fast@plt+0x4e18>  // b.any
    6efc:	b	5c58 <PySequence_Fast@plt+0x3b88>
    6f00:	cmp	x25, x19
    6f04:	b.lt	6d54 <PySequence_Fast@plt+0x4c84>  // b.tstop
    6f08:	cmp	w1, #0x7d
    6f0c:	b.eq	6f60 <PySequence_Fast@plt+0x4e90>  // b.none
    6f10:	cmp	w1, #0x2c
    6f14:	b.ne	6d54 <PySequence_Fast@plt+0x4c84>  // b.any
    6f18:	add	x19, x19, #0x1
    6f1c:	cmp	x25, x19
    6f20:	b.lt	5e38 <PySequence_Fast@plt+0x3d68>  // b.tstop
    6f24:	ldrb	w1, [x24, x19]
    6f28:	sub	w0, w1, #0x9
    6f2c:	cmp	w1, #0x20
    6f30:	and	w0, w0, #0xff
    6f34:	b.eq	6f18 <PySequence_Fast@plt+0x4e48>  // b.none
    6f38:	cmp	w0, #0x1
    6f3c:	b.ls	6f18 <PySequence_Fast@plt+0x4e48>  // b.plast
    6f40:	cmp	w1, #0xd
    6f44:	b.eq	6f18 <PySequence_Fast@plt+0x4e48>  // b.none
    6f48:	b	6e7c <PySequence_Fast@plt+0x4dac>
    6f4c:	mov	x0, x19
    6f50:	bl	1e30 <_Py_Dealloc@plt>
    6f54:	b	6df4 <PySequence_Fast@plt+0x4d24>
    6f58:	cmp	w0, #0x7d
    6f5c:	b.ne	6a7c <PySequence_Fast@plt+0x49ac>  // b.any
    6f60:	adrp	x0, 18000 <PyInit__json@@Base+0x10a48>
    6f64:	add	x19, x19, #0x1
    6f68:	str	x19, [x22]
    6f6c:	ldr	x28, [x0, #4016]
    6f70:	ldr	x0, [sp, #104]
    6f74:	cmp	x0, x28
    6f78:	b.ne	73b0 <PySequence_Fast@plt+0x52e0>  // b.any
    6f7c:	mov	x1, x0
    6f80:	ldr	x0, [x20, #24]
    6f84:	cmp	x0, x1
    6f88:	b.eq	6904 <PySequence_Fast@plt+0x4834>  // b.none
    6f8c:	mov	x1, x21
    6f90:	mov	x2, #0x0                   	// #0
    6f94:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    6f98:	mov	x2, x0
    6f9c:	ldr	x1, [x21]
    6fa0:	sub	x0, x1, #0x1
    6fa4:	str	x0, [x21]
    6fa8:	cbz	x0, 73d4 <PySequence_Fast@plt+0x5304>
    6fac:	mov	x21, x2
    6fb0:	ldp	x25, x26, [sp, #64]
    6fb4:	b	63c0 <PySequence_Fast@plt+0x42f0>
    6fb8:	cmp	w0, #0x5d
    6fbc:	b.ne	630c <PySequence_Fast@plt+0x423c>  // b.any
    6fc0:	b	6ed4 <PySequence_Fast@plt+0x4e04>
    6fc4:	ldrb	w1, [x3, x1]
    6fc8:	cmp	w1, #0x6e
    6fcc:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    6fd0:	add	x3, x3, x19
    6fd4:	ldrb	w1, [x3, #2]
    6fd8:	cmp	w1, #0x66
    6fdc:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    6fe0:	ldrb	w1, [x3, #3]
    6fe4:	cmp	w1, #0x69
    6fe8:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    6fec:	ldrb	w1, [x3, #4]
    6ff0:	cmp	w1, #0x6e
    6ff4:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    6ff8:	ldrb	w1, [x3, #5]
    6ffc:	cmp	w1, #0x69
    7000:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7004:	ldrb	w1, [x3, #6]
    7008:	cmp	w1, #0x74
    700c:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7010:	ldrb	w1, [x3, #7]
    7014:	cmp	w1, #0x79
    7018:	cset	w1, eq  // eq = none
    701c:	b	6518 <PySequence_Fast@plt+0x4448>
    7020:	ldrb	w1, [x3, x1]
    7024:	cmp	w1, #0x72
    7028:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    702c:	add	x3, x3, x19
    7030:	ldrb	w1, [x3, #2]
    7034:	cmp	w1, #0x75
    7038:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    703c:	ldrb	w1, [x3, #3]
    7040:	cmp	w1, #0x65
    7044:	cset	w1, eq  // eq = none
    7048:	b	6588 <PySequence_Fast@plt+0x44b8>
    704c:	ldrb	w1, [x3, x1]
    7050:	cmp	w1, #0x61
    7054:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7058:	add	x3, x3, x19
    705c:	ldrb	w1, [x3, #2]
    7060:	cmp	w1, #0x4e
    7064:	cset	w1, eq  // eq = none
    7068:	b	58bc <PySequence_Fast@plt+0x37ec>
    706c:	ldrb	w1, [x3, x1]
    7070:	cmp	w1, #0x49
    7074:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7078:	add	x3, x3, x19
    707c:	ldrb	w1, [x3, #2]
    7080:	cmp	w1, #0x6e
    7084:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7088:	ldrb	w1, [x3, #3]
    708c:	cmp	w1, #0x66
    7090:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7094:	ldrb	w1, [x3, #4]
    7098:	cmp	w1, #0x69
    709c:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    70a0:	ldrb	w1, [x3, #5]
    70a4:	cmp	w1, #0x6e
    70a8:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    70ac:	ldrb	w1, [x3, #6]
    70b0:	cmp	w1, #0x69
    70b4:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    70b8:	ldrb	w1, [x3, #7]
    70bc:	cmp	w1, #0x74
    70c0:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    70c4:	ldrb	w1, [x3, #8]
    70c8:	cmp	w1, #0x79
    70cc:	cset	w1, eq  // eq = none
    70d0:	b	5d1c <PySequence_Fast@plt+0x3c4c>
    70d4:	ldrb	w1, [x3, x1]
    70d8:	cmp	w1, #0x75
    70dc:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    70e0:	add	x3, x3, x19
    70e4:	ldrb	w1, [x3, #2]
    70e8:	cmp	w1, #0x6c
    70ec:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    70f0:	ldrb	w1, [x3, #3]
    70f4:	cmp	w1, #0x6c
    70f8:	cset	w1, eq  // eq = none
    70fc:	b	6758 <PySequence_Fast@plt+0x4688>
    7100:	ldrb	w1, [x3, x1]
    7104:	cmp	w1, #0x61
    7108:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    710c:	add	x3, x3, x19
    7110:	ldrb	w1, [x3, #2]
    7114:	cmp	w1, #0x6c
    7118:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    711c:	ldrb	w1, [x3, #3]
    7120:	cmp	w1, #0x73
    7124:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7128:	ldrb	w1, [x3, #4]
    712c:	cmp	w1, #0x65
    7130:	cset	w1, eq  // eq = none
    7134:	b	6458 <PySequence_Fast@plt+0x4388>
    7138:	cmp	x25, x2
    713c:	b.lt	6b4c <PySequence_Fast@plt+0x4a7c>  // b.tstop
    7140:	cmp	w0, #0x3a
    7144:	b.ne	6b4c <PySequence_Fast@plt+0x4a7c>  // b.any
    7148:	add	x2, x2, #0x1
    714c:	cmp	x25, x2
    7150:	b.lt	6c88 <PySequence_Fast@plt+0x4bb8>  // b.tstop
    7154:	ldrh	w1, [x24, x2, lsl #1]
    7158:	sub	w0, w1, #0x9
    715c:	cmp	w1, #0x20
    7160:	and	w0, w0, #0xffff
    7164:	b.eq	7148 <PySequence_Fast@plt+0x5078>  // b.none
    7168:	cmp	w0, #0x1
    716c:	b.ls	7148 <PySequence_Fast@plt+0x5078>  // b.plast
    7170:	cmp	w1, #0xd
    7174:	b.eq	7148 <PySequence_Fast@plt+0x5078>  // b.none
    7178:	b	6c88 <PySequence_Fast@plt+0x4bb8>
    717c:	cmp	x25, x19
    7180:	b.lt	6d54 <PySequence_Fast@plt+0x4c84>  // b.tstop
    7184:	cmp	w1, #0x7d
    7188:	b.eq	6f60 <PySequence_Fast@plt+0x4e90>  // b.none
    718c:	cmp	w1, #0x2c
    7190:	b.ne	6d54 <PySequence_Fast@plt+0x4c84>  // b.any
    7194:	nop
    7198:	add	x19, x19, #0x1
    719c:	cmp	x25, x19
    71a0:	b.lt	5e38 <PySequence_Fast@plt+0x3d68>  // b.tstop
    71a4:	ldrh	w1, [x24, x19, lsl #1]
    71a8:	sub	w0, w1, #0x9
    71ac:	cmp	w1, #0x20
    71b0:	and	w0, w0, #0xffff
    71b4:	b.eq	7198 <PySequence_Fast@plt+0x50c8>  // b.none
    71b8:	cmp	w0, #0x1
    71bc:	b.ls	7198 <PySequence_Fast@plt+0x50c8>  // b.plast
    71c0:	cmp	w1, #0xd
    71c4:	b.eq	7198 <PySequence_Fast@plt+0x50c8>  // b.none
    71c8:	b	6e7c <PySequence_Fast@plt+0x4dac>
    71cc:	lsl	x1, x1, #1
    71d0:	ldrh	w6, [x3, x1]
    71d4:	cmp	w6, #0x61
    71d8:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    71dc:	add	x1, x3, x1
    71e0:	ldrh	w1, [x1, #2]
    71e4:	cmp	w1, #0x4e
    71e8:	cset	w1, eq  // eq = none
    71ec:	b	58bc <PySequence_Fast@plt+0x37ec>
    71f0:	lsl	x1, x1, #1
    71f4:	ldrh	w6, [x3, x1]
    71f8:	cmp	w6, #0x49
    71fc:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7200:	add	x3, x3, x1
    7204:	ldrh	w1, [x3, #2]
    7208:	cmp	w1, #0x6e
    720c:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7210:	ldrh	w1, [x3, #4]
    7214:	cmp	w1, #0x66
    7218:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    721c:	ldrh	w1, [x3, #6]
    7220:	cmp	w1, #0x69
    7224:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7228:	ldrh	w1, [x3, #8]
    722c:	cmp	w1, #0x6e
    7230:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7234:	ldrh	w1, [x3, #10]
    7238:	cmp	w1, #0x69
    723c:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7240:	ldrh	w1, [x3, #12]
    7244:	cmp	w1, #0x74
    7248:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    724c:	ldrh	w1, [x3, #14]
    7250:	cmp	w1, #0x79
    7254:	cset	w1, eq  // eq = none
    7258:	b	5d1c <PySequence_Fast@plt+0x3c4c>
    725c:	lsl	x1, x1, #1
    7260:	ldrh	w6, [x3, x1]
    7264:	cmp	w6, #0x75
    7268:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    726c:	add	x1, x3, x1
    7270:	ldrh	w3, [x1, #2]
    7274:	cmp	w3, #0x6c
    7278:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    727c:	ldrh	w1, [x1, #4]
    7280:	cmp	w1, #0x6c
    7284:	cset	w1, eq  // eq = none
    7288:	b	6758 <PySequence_Fast@plt+0x4688>
    728c:	lsl	x1, x1, #1
    7290:	ldrh	w6, [x3, x1]
    7294:	cmp	w6, #0x61
    7298:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    729c:	add	x1, x3, x1
    72a0:	ldrh	w3, [x1, #2]
    72a4:	cmp	w3, #0x6c
    72a8:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    72ac:	ldrh	w3, [x1, #4]
    72b0:	cmp	w3, #0x73
    72b4:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    72b8:	ldrh	w1, [x1, #6]
    72bc:	cmp	w1, #0x65
    72c0:	cset	w1, eq  // eq = none
    72c4:	b	6458 <PySequence_Fast@plt+0x4388>
    72c8:	lsl	x1, x1, #1
    72cc:	ldrh	w6, [x3, x1]
    72d0:	cmp	w6, #0x6e
    72d4:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    72d8:	add	x1, x3, x1
    72dc:	ldrh	w3, [x1, #2]
    72e0:	cmp	w3, #0x66
    72e4:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    72e8:	ldrh	w3, [x1, #4]
    72ec:	cmp	w3, #0x69
    72f0:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    72f4:	ldrh	w3, [x1, #6]
    72f8:	cmp	w3, #0x6e
    72fc:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7300:	ldrh	w3, [x1, #8]
    7304:	cmp	w3, #0x69
    7308:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    730c:	ldrh	w3, [x1, #10]
    7310:	cmp	w3, #0x74
    7314:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7318:	ldrh	w1, [x1, #12]
    731c:	cmp	w1, #0x79
    7320:	cset	w1, eq  // eq = none
    7324:	b	6518 <PySequence_Fast@plt+0x4448>
    7328:	lsl	x1, x1, #1
    732c:	ldrh	w6, [x3, x1]
    7330:	cmp	w6, #0x72
    7334:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7338:	add	x1, x3, x1
    733c:	ldrh	w3, [x1, #2]
    7340:	cmp	w3, #0x75
    7344:	b.ne	5940 <PySequence_Fast@plt+0x3870>  // b.any
    7348:	ldrh	w1, [x1, #4]
    734c:	cmp	w1, #0x65
    7350:	cset	w1, eq  // eq = none
    7354:	b	6588 <PySequence_Fast@plt+0x44b8>
    7358:	cmp	x23, x0
    735c:	b.ge	5a34 <PySequence_Fast@plt+0x3964>  // b.tcont
    7360:	and	w1, w1, #0xffffffdf
    7364:	cmp	w1, #0x45
    7368:	b.ne	5a34 <PySequence_Fast@plt+0x3964>  // b.any
    736c:	mov	w4, #0x1                   	// #1
    7370:	b	5fbc <PySequence_Fast@plt+0x3eec>
    7374:	cmp	x0, x23
    7378:	b.le	5a34 <PySequence_Fast@plt+0x3964>
    737c:	mov	w4, #0x1                   	// #1
    7380:	b	5b34 <PySequence_Fast@plt+0x3a64>
    7384:	ldr	x0, [x19]
    7388:	sub	x0, x0, #0x1
    738c:	str	x0, [x19]
    7390:	cbnz	x0, 739c <PySequence_Fast@plt+0x52cc>
    7394:	mov	x0, x19
    7398:	bl	1e30 <_Py_Dealloc@plt>
    739c:	ldr	x0, [x27]
    73a0:	sub	x0, x0, #0x1
    73a4:	str	x0, [x27]
    73a8:	cbnz	x0, 63a8 <PySequence_Fast@plt+0x42d8>
    73ac:	b	6a48 <PySequence_Fast@plt+0x4978>
    73b0:	ldr	x0, [x20, #32]
    73b4:	mov	x1, x21
    73b8:	mov	x2, #0x0                   	// #0
    73bc:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    73c0:	mov	x2, x0
    73c4:	ldr	x1, [x21]
    73c8:	sub	x1, x1, #0x1
    73cc:	str	x1, [x21]
    73d0:	cbnz	x1, 6fac <PySequence_Fast@plt+0x4edc>
    73d4:	mov	x0, x21
    73d8:	mov	x21, x2
    73dc:	bl	1e30 <_Py_Dealloc@plt>
    73e0:	ldp	x25, x26, [sp, #64]
    73e4:	b	63c0 <PySequence_Fast@plt+0x42f0>
    73e8:	cbnz	x0, 63a8 <PySequence_Fast@plt+0x42d8>
    73ec:	mov	x0, x26
    73f0:	bl	1e30 <_Py_Dealloc@plt>
    73f4:	b	63a8 <PySequence_Fast@plt+0x42d8>
    73f8:	b.eq	7428 <PySequence_Fast@plt+0x5358>  // b.none
    73fc:	cmp	w25, #0x2
    7400:	b.eq	7438 <PySequence_Fast@plt+0x5368>  // b.none
    7404:	ldr	w0, [x23, x2, lsl #2]
    7408:	cmp	w0, #0x5d
    740c:	b.eq	6ed4 <PySequence_Fast@plt+0x4e04>  // b.none
    7410:	mov	x2, x19
    7414:	mov	x1, x28
    7418:	adrp	x0, 7000 <PySequence_Fast@plt+0x4f30>
    741c:	add	x0, x0, #0xb58
    7420:	bl	3540 <PySequence_Fast@plt+0x1470>
    7424:	b	63a8 <PySequence_Fast@plt+0x42d8>
    7428:	ldrb	w0, [x23, x2]
    742c:	cmp	w0, #0x5d
    7430:	b.ne	7410 <PySequence_Fast@plt+0x5340>  // b.any
    7434:	b	6ed4 <PySequence_Fast@plt+0x4e04>
    7438:	ldrh	w0, [x23, x2, lsl #1]
    743c:	cmp	w0, #0x5d
    7440:	b.ne	7410 <PySequence_Fast@plt+0x5340>  // b.any
    7444:	b	6ed4 <PySequence_Fast@plt+0x4e04>
    7448:	mov	x0, x23
    744c:	bl	1e30 <_Py_Dealloc@plt>
    7450:	b	5904 <PySequence_Fast@plt+0x3834>
    7454:	mov	x19, x27
    7458:	b	6c34 <PySequence_Fast@plt+0x4b64>
    745c:	nop
    7460:	stp	x29, x30, [sp, #-80]!
    7464:	mov	x6, #0xffffffffffffffff    	// #-1
    7468:	adrp	x3, 19000 <PyInit__json@@Base+0x11a48>
    746c:	mov	x29, sp
    7470:	add	x3, x3, #0x1c0
    7474:	add	x3, x3, #0x80
    7478:	add	x5, sp, #0x40
    747c:	add	x4, sp, #0x38
    7480:	stp	x19, x20, [sp, #16]
    7484:	mov	x19, x0
    7488:	mov	x0, x1
    748c:	mov	x1, x2
    7490:	adrp	x2, 7000 <PySequence_Fast@plt+0x4f30>
    7494:	add	x2, x2, #0xb68
    7498:	str	x6, [sp, #72]
    749c:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    74a0:	cbz	w0, 7524 <PySequence_Fast@plt+0x5454>
    74a4:	ldr	x1, [sp, #56]
    74a8:	ldr	x0, [x1, #8]
    74ac:	ldr	x2, [x0, #168]
    74b0:	tbz	w2, #28, 7538 <PySequence_Fast@plt+0x5468>
    74b4:	ldr	x2, [sp, #64]
    74b8:	add	x3, sp, #0x48
    74bc:	mov	x0, x19
    74c0:	bl	57f8 <PySequence_Fast@plt+0x3728>
    74c4:	mov	x20, x0
    74c8:	ldr	x0, [x19, #64]
    74cc:	bl	1ed0 <PyDict_Clear@plt>
    74d0:	cbz	x20, 7524 <PySequence_Fast@plt+0x5454>
    74d4:	ldr	x0, [sp, #72]
    74d8:	str	x21, [sp, #32]
    74dc:	bl	1e80 <PyLong_FromSsize_t@plt>
    74e0:	mov	x21, x0
    74e4:	cbz	x0, 7510 <PySequence_Fast@plt+0x5440>
    74e8:	mov	x0, #0x2                   	// #2
    74ec:	bl	1f10 <PyTuple_New@plt>
    74f0:	mov	x19, x0
    74f4:	cbz	x0, 757c <PySequence_Fast@plt+0x54ac>
    74f8:	stp	x20, x21, [x0, #24]
    74fc:	ldr	x21, [sp, #32]
    7500:	mov	x0, x19
    7504:	ldp	x19, x20, [sp, #16]
    7508:	ldp	x29, x30, [sp], #80
    750c:	ret
    7510:	ldr	x0, [x20]
    7514:	sub	x0, x0, #0x1
    7518:	str	x0, [x20]
    751c:	cbz	x0, 7568 <PySequence_Fast@plt+0x5498>
    7520:	ldr	x21, [sp, #32]
    7524:	mov	x19, #0x0                   	// #0
    7528:	mov	x0, x19
    752c:	ldp	x19, x20, [sp, #16]
    7530:	ldp	x29, x30, [sp], #80
    7534:	ret
    7538:	adrp	x3, 18000 <PyInit__json@@Base+0x10a48>
    753c:	mov	x19, #0x0                   	// #0
    7540:	ldr	x2, [x0, #24]
    7544:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    7548:	ldr	x3, [x3, #3976]
    754c:	add	x1, x1, #0x768
    7550:	ldr	x0, [x3]
    7554:	bl	2040 <PyErr_Format@plt>
    7558:	mov	x0, x19
    755c:	ldp	x19, x20, [sp, #16]
    7560:	ldp	x29, x30, [sp], #80
    7564:	ret
    7568:	mov	x0, x20
    756c:	mov	x19, #0x0                   	// #0
    7570:	bl	1e30 <_Py_Dealloc@plt>
    7574:	ldr	x21, [sp, #32]
    7578:	b	7500 <PySequence_Fast@plt+0x5430>
    757c:	ldr	x0, [x21]
    7580:	sub	x0, x0, #0x1
    7584:	str	x0, [x21]
    7588:	cbz	x0, 75ac <PySequence_Fast@plt+0x54dc>
    758c:	ldr	x0, [x20]
    7590:	sub	x0, x0, #0x1
    7594:	str	x0, [x20]
    7598:	cbnz	x0, 7520 <PySequence_Fast@plt+0x5450>
    759c:	mov	x0, x20
    75a0:	bl	1e30 <_Py_Dealloc@plt>
    75a4:	ldr	x21, [sp, #32]
    75a8:	b	7500 <PySequence_Fast@plt+0x5430>
    75ac:	mov	x0, x21
    75b0:	bl	1e30 <_Py_Dealloc@plt>
    75b4:	b	758c <PySequence_Fast@plt+0x54bc>

00000000000075b8 <PyInit__json@@Base>:
    75b8:	stp	x29, x30, [sp, #-48]!
    75bc:	mov	w1, #0x3f5                 	// #1013
    75c0:	mov	x29, sp
    75c4:	stp	x19, x20, [sp, #16]
    75c8:	adrp	x20, 19000 <PyInit__json@@Base+0x11a48>
    75cc:	add	x20, x20, #0x1c0
    75d0:	add	x0, x20, #0x98
    75d4:	bl	1f50 <PyModule_Create2@plt>
    75d8:	cbz	x0, 768c <PyInit__json@@Base+0xd4>
    75dc:	stp	x21, x22, [sp, #32]
    75e0:	add	x21, x20, #0x100
    75e4:	mov	x19, x0
    75e8:	mov	x0, x21
    75ec:	bl	1e90 <PyType_Ready@plt>
    75f0:	tbnz	w0, #31, 7678 <PyInit__json@@Base+0xc0>
    75f4:	add	x22, x20, #0x2a0
    75f8:	mov	x0, x22
    75fc:	bl	1e90 <PyType_Ready@plt>
    7600:	tbnz	w0, #31, 7678 <PyInit__json@@Base+0xc0>
    7604:	ldr	x3, [x20, #256]
    7608:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    760c:	mov	x2, x21
    7610:	add	x1, x1, #0xb78
    7614:	add	x3, x3, #0x1
    7618:	mov	x0, x19
    761c:	str	x3, [x20, #256]
    7620:	bl	2010 <PyModule_AddObject@plt>
    7624:	tbnz	w0, #31, 76c0 <PyInit__json@@Base+0x108>
    7628:	ldr	x3, [x20, #672]
    762c:	adrp	x1, 7000 <PySequence_Fast@plt+0x4f30>
    7630:	mov	x2, x22
    7634:	add	x1, x1, #0xb88
    7638:	add	x3, x3, #0x1
    763c:	mov	x0, x19
    7640:	str	x3, [x20, #672]
    7644:	bl	2010 <PyModule_AddObject@plt>
    7648:	tbnz	w0, #31, 7660 <PyInit__json@@Base+0xa8>
    764c:	mov	x0, x19
    7650:	ldp	x19, x20, [sp, #16]
    7654:	ldp	x21, x22, [sp, #32]
    7658:	ldp	x29, x30, [sp], #48
    765c:	ret
    7660:	ldr	x0, [x20, #672]
    7664:	sub	x0, x0, #0x1
    7668:	str	x0, [x20, #672]
    766c:	cbnz	x0, 7678 <PyInit__json@@Base+0xc0>
    7670:	mov	x0, x22
    7674:	bl	1e30 <_Py_Dealloc@plt>
    7678:	ldr	x0, [x19]
    767c:	sub	x0, x0, #0x1
    7680:	str	x0, [x19]
    7684:	cbz	x0, 76a0 <PyInit__json@@Base+0xe8>
    7688:	ldp	x21, x22, [sp, #32]
    768c:	mov	x19, #0x0                   	// #0
    7690:	mov	x0, x19
    7694:	ldp	x19, x20, [sp, #16]
    7698:	ldp	x29, x30, [sp], #48
    769c:	ret
    76a0:	mov	x0, x19
    76a4:	mov	x19, #0x0                   	// #0
    76a8:	bl	1e30 <_Py_Dealloc@plt>
    76ac:	mov	x0, x19
    76b0:	ldp	x19, x20, [sp, #16]
    76b4:	ldp	x21, x22, [sp, #32]
    76b8:	ldp	x29, x30, [sp], #48
    76bc:	ret
    76c0:	ldr	x0, [x20, #256]
    76c4:	sub	x0, x0, #0x1
    76c8:	str	x0, [x20, #256]
    76cc:	cbnz	x0, 7678 <PyInit__json@@Base+0xc0>
    76d0:	mov	x0, x21
    76d4:	bl	1e30 <_Py_Dealloc@plt>
    76d8:	b	7678 <PyInit__json@@Base+0xc0>

Disassembly of section .fini:

00000000000076dc <.fini>:
    76dc:	stp	x29, x30, [sp, #-16]!
    76e0:	mov	x29, sp
    76e4:	ldp	x29, x30, [sp], #16
    76e8:	ret
