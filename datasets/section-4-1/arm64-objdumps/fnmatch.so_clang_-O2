
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fnmatch.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000720 <.init>:
 720:	stp	x29, x30, [sp, #-16]!
 724:	mov	x29, sp
 728:	bl	7f0 <fprintf@plt+0x10>
 72c:	ldp	x29, x30, [sp], #16
 730:	ret

Disassembly of section .plt:

0000000000000740 <memcpy@plt-0x20>:
 740:	stp	x16, x30, [sp, #-16]!
 744:	adrp	x16, 11000 <dl_load@@Base+0x1073c>
 748:	ldr	x17, [x16, #4088]
 74c:	add	x16, x16, #0xff8
 750:	br	x17
 754:	nop
 758:	nop
 75c:	nop

0000000000000760 <memcpy@plt>:
 760:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 764:	ldr	x17, [x16]
 768:	add	x16, x16, #0x0
 76c:	br	x17

0000000000000770 <strlen@plt>:
 770:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 774:	ldr	x17, [x16, #8]
 778:	add	x16, x16, #0x8
 77c:	br	x17

0000000000000780 <exit@plt>:
 780:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 784:	ldr	x17, [x16, #16]
 788:	add	x16, x16, #0x10
 78c:	br	x17

0000000000000790 <__cxa_finalize@plt>:
 790:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 794:	ldr	x17, [x16, #24]
 798:	add	x16, x16, #0x18
 79c:	br	x17

00000000000007a0 <__gmon_start__@plt>:
 7a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #32]
 7a8:	add	x16, x16, #0x20
 7ac:	br	x17

00000000000007b0 <fwrite@plt>:
 7b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #40]
 7b8:	add	x16, x16, #0x28
 7bc:	br	x17

00000000000007c0 <fnmatch@plt>:
 7c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #48]
 7c8:	add	x16, x16, #0x30
 7cc:	br	x17

00000000000007d0 <dcgettext@plt>:
 7d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #56]
 7d8:	add	x16, x16, #0x38
 7dc:	br	x17

00000000000007e0 <fprintf@plt>:
 7e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #64]
 7e8:	add	x16, x16, #0x40
 7ec:	br	x17

Disassembly of section .text:

00000000000007f0 <dl_load@@Base-0xd4>:
 7f0:	adrp	x0, 11000 <dl_load@@Base+0x1073c>
 7f4:	ldr	x0, [x0, #4056]
 7f8:	cbz	x0, 800 <fprintf@plt+0x20>
 7fc:	b	7a0 <__gmon_start__@plt>
 800:	ret
 804:	nop
 808:	adrp	x0, 12000 <dl_load@@Base+0x1173c>
 80c:	add	x0, x0, #0x80
 810:	adrp	x1, 12000 <dl_load@@Base+0x1173c>
 814:	add	x1, x1, #0x80
 818:	cmp	x1, x0
 81c:	b.eq	834 <fprintf@plt+0x54>  // b.none
 820:	adrp	x1, 11000 <dl_load@@Base+0x1073c>
 824:	ldr	x1, [x1, #4032]
 828:	cbz	x1, 834 <fprintf@plt+0x54>
 82c:	mov	x16, x1
 830:	br	x16
 834:	ret
 838:	adrp	x0, 12000 <dl_load@@Base+0x1173c>
 83c:	add	x0, x0, #0x80
 840:	adrp	x1, 12000 <dl_load@@Base+0x1173c>
 844:	add	x1, x1, #0x80
 848:	sub	x1, x1, x0
 84c:	lsr	x2, x1, #63
 850:	add	x1, x2, x1, asr #3
 854:	cmp	xzr, x1, asr #1
 858:	asr	x1, x1, #1
 85c:	b.eq	874 <fprintf@plt+0x94>  // b.none
 860:	adrp	x2, 11000 <dl_load@@Base+0x1073c>
 864:	ldr	x2, [x2, #4064]
 868:	cbz	x2, 874 <fprintf@plt+0x94>
 86c:	mov	x16, x2
 870:	br	x16
 874:	ret
 878:	stp	x29, x30, [sp, #-32]!
 87c:	mov	x29, sp
 880:	str	x19, [sp, #16]
 884:	adrp	x19, 12000 <dl_load@@Base+0x1173c>
 888:	ldrb	w0, [x19, #128]
 88c:	cbnz	w0, 8b4 <fprintf@plt+0xd4>
 890:	adrp	x0, 11000 <dl_load@@Base+0x1073c>
 894:	ldr	x0, [x0, #4040]
 898:	cbz	x0, 8a8 <fprintf@plt+0xc8>
 89c:	adrp	x0, 12000 <dl_load@@Base+0x1173c>
 8a0:	ldr	x0, [x0, #72]
 8a4:	bl	790 <__cxa_finalize@plt>
 8a8:	bl	808 <fprintf@plt+0x28>
 8ac:	mov	w0, #0x1                   	// #1
 8b0:	strb	w0, [x19, #128]
 8b4:	ldr	x19, [sp, #16]
 8b8:	ldp	x29, x30, [sp], #32
 8bc:	ret
 8c0:	b	838 <fprintf@plt+0x58>

00000000000008c4 <dl_load@@Base>:
 8c4:	sub	sp, sp, #0xd0
 8c8:	stp	x28, x27, [sp, #128]
 8cc:	stp	x24, x23, [sp, #160]
 8d0:	adrp	x27, 12000 <dl_load@@Base+0x1173c>
 8d4:	adrp	x24, 12000 <dl_load@@Base+0x1173c>
 8d8:	stp	x29, x30, [sp, #112]
 8dc:	stp	x26, x25, [sp, #144]
 8e0:	stp	x22, x21, [sp, #176]
 8e4:	stp	x20, x19, [sp, #192]
 8e8:	str	x0, [x27, #136]
 8ec:	str	x1, [x24, #144]
 8f0:	ldr	w8, [x0]
 8f4:	add	x29, sp, #0x70
 8f8:	cmp	w8, #0x2
 8fc:	b.ne	c00 <dl_load@@Base+0x33c>  // b.any
 900:	ldr	w8, [x0, #4]
 904:	tbnz	w8, #31, c00 <dl_load@@Base+0x33c>
 908:	adrp	x19, 12000 <dl_load@@Base+0x1173c>
 90c:	ldr	x8, [x19, #80]
 910:	cbz	x8, 938 <dl_load@@Base+0x74>
 914:	ldr	x9, [x0, #48]
 918:	adrp	x8, 0 <memcpy@plt-0x760>
 91c:	add	x8, x8, #0xdad
 920:	adrp	x2, 12000 <dl_load@@Base+0x1173c>
 924:	add	x2, x2, #0x50
 928:	mov	x0, x1
 92c:	mov	x1, x8
 930:	blr	x9
 934:	cbz	w0, 940 <dl_load@@Base+0x7c>
 938:	str	wzr, [sp, #8]
 93c:	b	964 <dl_load@@Base+0xa0>
 940:	ldr	x8, [x27, #136]
 944:	ldr	x0, [x24, #144]
 948:	ldr	x2, [x19, #80]
 94c:	adrp	x1, 0 <memcpy@plt-0x760>
 950:	ldr	x8, [x8, #104]
 954:	add	x1, x1, #0xde1
 958:	blr	x8
 95c:	mov	w8, #0x1                   	// #1
 960:	str	w8, [sp, #8]
 964:	ldr	x8, [x27, #136]
 968:	ldr	x0, [x24, #144]
 96c:	mov	w9, #0x1                   	// #1
 970:	adrp	x1, 0 <memcpy@plt-0x760>
 974:	ldr	x8, [x8, #176]
 978:	adrp	x2, 0 <memcpy@plt-0x760>
 97c:	str	w9, [sp, #48]
 980:	mov	x9, #0x3ff0000000000000    	// #4607182418800017408
 984:	add	x1, x1, #0xdad
 988:	add	x2, x2, #0xe9e
 98c:	add	x3, sp, #0x30
 990:	str	x9, [sp, #56]
 994:	str	wzr, [sp, #64]
 998:	blr	x8
 99c:	mov	w8, wzr
 9a0:	cbnz	w0, 9d4 <dl_load@@Base+0x110>
 9a4:	ldr	x8, [x27, #136]
 9a8:	ldr	x19, [x24, #144]
 9ac:	adrp	x1, 0 <memcpy@plt-0x760>
 9b0:	add	x1, x1, #0xeaa
 9b4:	ldr	x21, [x8, #104]
 9b8:	mov	w2, #0x5                   	// #5
 9bc:	mov	x0, xzr
 9c0:	bl	7d0 <dcgettext@plt>
 9c4:	mov	x1, x0
 9c8:	mov	x0, x19
 9cc:	blr	x21
 9d0:	mov	w8, #0x1                   	// #1
 9d4:	str	w8, [sp, #12]
 9d8:	ldr	x8, [x27, #136]
 9dc:	ldr	x0, [x24, #144]
 9e0:	ldr	x8, [x8, #248]
 9e4:	blr	x8
 9e8:	adrp	x22, 0 <memcpy@plt-0x760>
 9ec:	mov	x20, x0
 9f0:	mov	x23, xzr
 9f4:	add	x22, x22, #0xf36
 9f8:	b	a0c <dl_load@@Base+0x148>
 9fc:	ldr	x22, [x25, #16]
 a00:	add	x23, x23, #0x10
 a04:	cmp	x23, #0x60
 a08:	b.eq	b24 <dl_load@@Base+0x260>  // b.none
 a0c:	ldr	x28, [x27, #136]
 a10:	ldr	x25, [x24, #144]
 a14:	mov	x0, x22
 a18:	bl	770 <strlen@plt>
 a1c:	movi	v0.2d, #0x0
 a20:	mov	w8, #0x2                   	// #2
 a24:	stp	q0, q0, [x29, #-32]
 a28:	stur	w8, [x29, #-32]
 a2c:	stur	x0, [x29, #-16]
 a30:	ldr	x8, [x28, #280]
 a34:	mov	x21, x27
 a38:	add	x27, x0, #0x1
 a3c:	mov	x19, x24
 a40:	mov	x24, x0
 a44:	mov	x0, x27
 a48:	blr	x8
 a4c:	mov	x26, x0
 a50:	cbnz	x0, a74 <dl_load@@Base+0x1b0>
 a54:	ldr	x8, [x28, #96]
 a58:	adrp	x1, 0 <memcpy@plt-0x760>
 a5c:	adrp	x2, 0 <memcpy@plt-0x760>
 a60:	mov	x0, x25
 a64:	add	x1, x1, #0xf6e
 a68:	add	x2, x2, #0xf8c
 a6c:	mov	x3, x27
 a70:	blr	x8
 a74:	mov	x0, x26
 a78:	mov	x1, x22
 a7c:	mov	x2, x24
 a80:	bl	760 <memcpy@plt>
 a84:	adrp	x8, 11000 <dl_load@@Base+0x1073c>
 a88:	add	x8, x8, #0xd58
 a8c:	add	x25, x8, x23
 a90:	ldr	s0, [x25, #8]
 a94:	strb	wzr, [x26, x24]
 a98:	mov	w8, #0x1                   	// #1
 a9c:	str	w8, [sp, #48]
 aa0:	ldr	x8, [x21, #136]
 aa4:	sxtl	v0.2d, v0.2s
 aa8:	scvtf	d0, d0
 aac:	stur	x26, [x29, #-24]
 ab0:	str	wzr, [sp, #64]
 ab4:	str	d0, [sp, #56]
 ab8:	ldr	x8, [x8, #232]
 abc:	ldr	x0, [x19, #144]
 ac0:	sub	x2, x29, #0x20
 ac4:	add	x3, sp, #0x30
 ac8:	mov	x1, x20
 acc:	blr	x8
 ad0:	mov	x27, x21
 ad4:	mov	x24, x19
 ad8:	cbnz	w0, 9fc <dl_load@@Base+0x138>
 adc:	ldr	x8, [x27, #136]
 ae0:	mov	x19, x24
 ae4:	ldr	x24, [x24, #144]
 ae8:	adrp	x1, 0 <memcpy@plt-0x760>
 aec:	ldr	x26, [x8, #104]
 af0:	mov	w2, #0x5                   	// #5
 af4:	mov	x0, xzr
 af8:	add	x1, x1, #0xedb
 afc:	bl	7d0 <dcgettext@plt>
 b00:	mov	x1, x0
 b04:	mov	x0, x24
 b08:	mov	x2, x22
 b0c:	mov	x24, x19
 b10:	blr	x26
 b14:	ldr	w8, [sp, #12]
 b18:	add	w8, w8, #0x1
 b1c:	str	w8, [sp, #12]
 b20:	b	9fc <dl_load@@Base+0x138>
 b24:	ldr	x8, [x27, #136]
 b28:	mov	w9, #0x5                   	// #5
 b2c:	str	x20, [sp, #24]
 b30:	str	w9, [sp, #16]
 b34:	ldr	x8, [x8, #176]
 b38:	ldr	x0, [x24, #144]
 b3c:	adrp	x1, 0 <memcpy@plt-0x760>
 b40:	adrp	x2, 0 <memcpy@plt-0x760>
 b44:	add	x1, x1, #0xdad
 b48:	add	x2, x2, #0xf08
 b4c:	add	x3, sp, #0x10
 b50:	blr	x8
 b54:	cbz	w0, bc0 <dl_load@@Base+0x2fc>
 b58:	ldr	w20, [sp, #12]
 b5c:	ldr	w19, [sp, #8]
 b60:	cbz	w20, b80 <dl_load@@Base+0x2bc>
 b64:	ldr	x8, [x27, #136]
 b68:	ldr	x0, [x24, #144]
 b6c:	adrp	x1, 0 <memcpy@plt-0x760>
 b70:	add	x1, x1, #0xdfb
 b74:	ldr	x8, [x8, #104]
 b78:	blr	x8
 b7c:	mov	w19, #0x1                   	// #1
 b80:	ldr	x8, [x27, #136]
 b84:	ldr	x0, [x24, #144]
 b88:	adrp	x1, 0 <memcpy@plt-0x760>
 b8c:	add	x1, x1, #0xf9a
 b90:	ldr	x8, [x8, #88]
 b94:	blr	x8
 b98:	cmp	w19, #0x0
 b9c:	ldp	x20, x19, [sp, #192]
 ba0:	ldp	x22, x21, [sp, #176]
 ba4:	ldp	x24, x23, [sp, #160]
 ba8:	ldp	x26, x25, [sp, #144]
 bac:	ldp	x28, x27, [sp, #128]
 bb0:	ldp	x29, x30, [sp, #112]
 bb4:	cset	w0, eq  // eq = none
 bb8:	add	sp, sp, #0xd0
 bbc:	ret
 bc0:	ldr	x8, [x27, #136]
 bc4:	ldr	x19, [x24, #144]
 bc8:	adrp	x1, 0 <memcpy@plt-0x760>
 bcc:	add	x1, x1, #0xf0c
 bd0:	ldr	x22, [x8, #104]
 bd4:	mov	w2, #0x5                   	// #5
 bd8:	mov	x0, xzr
 bdc:	bl	7d0 <dcgettext@plt>
 be0:	mov	x1, x0
 be4:	mov	x0, x19
 be8:	blr	x22
 bec:	ldr	w20, [sp, #12]
 bf0:	add	w20, w20, #0x1
 bf4:	ldr	w19, [sp, #8]
 bf8:	cbnz	w20, b64 <dl_load@@Base+0x2a0>
 bfc:	b	b80 <dl_load@@Base+0x2bc>
 c00:	adrp	x19, 11000 <dl_load@@Base+0x1073c>
 c04:	ldr	x19, [x19, #4048]
 c08:	adrp	x0, 0 <memcpy@plt-0x760>
 c0c:	add	x0, x0, #0xd88
 c10:	mov	w1, #0x25                  	// #37
 c14:	ldr	x3, [x19]
 c18:	mov	w2, #0x1                   	// #1
 c1c:	bl	7b0 <fwrite@plt>
 c20:	ldr	x8, [x27, #136]
 c24:	ldr	x0, [x19]
 c28:	adrp	x1, 0 <memcpy@plt-0x760>
 c2c:	add	x1, x1, #0xdae
 c30:	ldp	w4, w5, [x8]
 c34:	mov	w2, #0x2                   	// #2
 c38:	mov	w3, wzr
 c3c:	bl	7e0 <fprintf@plt>
 c40:	mov	w0, #0x1                   	// #1
 c44:	bl	780 <exit@plt>
 c48:	sub	sp, sp, #0x90
 c4c:	mov	w8, #0x1                   	// #1
 c50:	mov	x9, #0xbff0000000000000    	// #-4616189618054758400
 c54:	stp	x29, x30, [sp, #96]
 c58:	stp	x22, x21, [sp, #112]
 c5c:	stp	x20, x19, [sp, #128]
 c60:	str	wzr, [x1, #16]
 c64:	adrp	x21, 12000 <dl_load@@Base+0x1173c>
 c68:	str	w8, [x1]
 c6c:	str	x9, [x1, #8]
 c70:	ldr	x8, [x21, #136]
 c74:	adrp	x20, 12000 <dl_load@@Base+0x1173c>
 c78:	ldr	x0, [x20, #144]
 c7c:	add	x29, sp, #0x60
 c80:	ldr	x8, [x8, #152]
 c84:	mov	x19, x1
 c88:	sub	x3, x29, #0x20
 c8c:	mov	w2, #0x2                   	// #2
 c90:	mov	x1, xzr
 c94:	blr	x8
 c98:	ldr	x8, [x21, #136]
 c9c:	cbz	w0, d0c <dl_load@@Base+0x448>
 ca0:	ldr	x8, [x8, #152]
 ca4:	ldr	x0, [x20, #144]
 ca8:	add	x3, sp, #0x20
 cac:	mov	w1, #0x1                   	// #1
 cb0:	mov	w2, #0x2                   	// #2
 cb4:	blr	x8
 cb8:	ldr	x8, [x21, #136]
 cbc:	cbz	w0, d20 <dl_load@@Base+0x45c>
 cc0:	ldr	x8, [x8, #152]
 cc4:	ldr	x0, [x20, #144]
 cc8:	mov	x3, sp
 ccc:	mov	w1, #0x2                   	// #2
 cd0:	mov	w2, #0x1                   	// #1
 cd4:	mov	w22, #0x1                   	// #1
 cd8:	blr	x8
 cdc:	cbz	w0, d34 <dl_load@@Base+0x470>
 ce0:	ldr	d0, [sp, #8]
 ce4:	ldur	x0, [x29, #-24]
 ce8:	ldr	x1, [sp, #40]
 cec:	fcvtzs	w8, d0
 cf0:	and	w2, w8, #0x1f
 cf4:	bl	7c0 <fnmatch@plt>
 cf8:	scvtf	d0, w0
 cfc:	str	w22, [x19]
 d00:	str	d0, [x19, #8]
 d04:	str	wzr, [x19, #16]
 d08:	b	d60 <dl_load@@Base+0x49c>
 d0c:	ldr	x21, [x8, #104]
 d10:	ldr	x20, [x20, #144]
 d14:	adrp	x1, 0 <memcpy@plt-0x760>
 d18:	add	x1, x1, #0xe2b
 d1c:	b	d48 <dl_load@@Base+0x484>
 d20:	ldr	x21, [x8, #104]
 d24:	ldr	x20, [x20, #144]
 d28:	adrp	x1, 0 <memcpy@plt-0x760>
 d2c:	add	x1, x1, #0xe51
 d30:	b	d48 <dl_load@@Base+0x484>
 d34:	ldr	x8, [x21, #136]
 d38:	ldr	x20, [x20, #144]
 d3c:	adrp	x1, 0 <memcpy@plt-0x760>
 d40:	add	x1, x1, #0xe78
 d44:	ldr	x21, [x8, #104]
 d48:	mov	w2, #0x5                   	// #5
 d4c:	mov	x0, xzr
 d50:	bl	7d0 <dcgettext@plt>
 d54:	mov	x1, x0
 d58:	mov	x0, x20
 d5c:	blr	x21
 d60:	mov	x0, x19
 d64:	ldp	x20, x19, [sp, #128]
 d68:	ldp	x22, x21, [sp, #112]
 d6c:	ldp	x29, x30, [sp, #96]
 d70:	add	sp, sp, #0x90
 d74:	ret

Disassembly of section .fini:

0000000000000d78 <.fini>:
 d78:	stp	x29, x30, [sp, #-16]!
 d7c:	mov	x29, sp
 d80:	ldp	x29, x30, [sp], #16
 d84:	ret
