
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ctz_test.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <test_all>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	adrp	x4, 0 <test_all>
   8:	adrp	x3, 0 <test_all>
   c:	adrp	x2, 0 <test_all>
  10:	adrp	x1, 0 <test_all>
  14:	mov	x29, sp
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x0
  20:	ldr	x20, [x2]
  24:	stp	x21, x22, [sp, #32]
  28:	mov	w21, #0x0                   	// #0
  2c:	ldr	x22, [x1]
  30:	stp	x23, x24, [sp, #48]
  34:	ldr	x24, [x4]
  38:	str	x25, [sp, #64]
  3c:	ldr	x23, [x3]
  40:	orr	w25, w0, #0x1
  44:	nop
  48:	lsl	w6, w25, w21
  4c:	rbit	w7, w6
  50:	clz	w7, w7
  54:	mov	x5, x24
  58:	cmp	w7, w21
  5c:	mov	x4, x23
  60:	cset	w0, eq  // eq = none
  64:	add	w21, w21, #0x1
  68:	mov	x2, x20
  6c:	mov	x1, x22
  70:	mov	w3, #0x2b                  	// #43
  74:	bl	0 <grub_test_assert_helper>
  78:	cmp	w21, #0x20
  7c:	b.ne	48 <test_all+0x48>  // b.any
  80:	adrp	x1, 0 <test_all>
  84:	adrp	x0, 0 <test_all>
  88:	orr	x19, x19, #0x1
  8c:	add	x25, x20, #0x8
  90:	ldr	x24, [x1]
  94:	mov	w21, #0x0                   	// #0
  98:	ldr	x23, [x0]
  9c:	nop
  a0:	lsl	x6, x19, x21
  a4:	rbit	x0, x6
  a8:	rbit	w7, w6
  ac:	clz	x0, x0
  b0:	clz	w7, w7
  b4:	cmp	w0, w21
  b8:	mov	x5, x24
  bc:	cset	w0, eq  // eq = none
  c0:	add	w21, w21, #0x1
  c4:	mov	x4, x23
  c8:	mov	x2, x25
  cc:	mov	x1, x22
  d0:	mov	w3, #0x38                  	// #56
  d4:	bl	0 <grub_test_assert_helper>
  d8:	cmp	w21, #0x40
  dc:	b.ne	a0 <test_all+0xa0>  // b.any
  e0:	adrp	x1, 0 <test_all>
  e4:	adrp	x0, 0 <test_all>
  e8:	add	x21, x20, #0x10
  ec:	mov	w20, #0x0                   	// #0
  f0:	ldr	x24, [x1]
  f4:	ldr	x23, [x0]
  f8:	lsl	x6, x19, x20
  fc:	rbit	x0, x6
 100:	rbit	w7, w6
 104:	clz	x0, x0
 108:	clz	w7, w7
 10c:	cmp	w0, w20
 110:	mov	x5, x24
 114:	cset	w0, eq  // eq = none
 118:	add	w20, w20, #0x1
 11c:	mov	x4, x23
 120:	mov	x2, x21
 124:	mov	x1, x22
 128:	mov	w3, #0x46                  	// #70
 12c:	bl	0 <grub_test_assert_helper>
 130:	cmp	w20, #0x40
 134:	b.ne	f8 <test_all+0xf8>  // b.any
 138:	ldp	x19, x20, [sp, #16]
 13c:	ldp	x21, x22, [sp, #32]
 140:	ldp	x23, x24, [sp, #48]
 144:	ldr	x25, [sp, #64]
 148:	ldp	x29, x30, [sp], #80
 14c:	ret
	...

0000000000000190 <ctz_test>:
 190:	stp	x29, x30, [sp, #-48]!
 194:	mov	x0, #0xffffffffffffffff    	// #-1
 198:	mov	x29, sp
 19c:	stp	x19, x20, [sp, #16]
 1a0:	mov	x20, #0x9c40                	// #40000
 1a4:	mov	x19, #0x7                   	// #7
 1a8:	stp	x21, x22, [sp, #32]
 1ac:	bl	0 <test_all>
 1b0:	mov	x0, #0x1                   	// #1
 1b4:	bl	0 <test_all>
 1b8:	mov	x22, #0x194                 	// #404
 1bc:	mov	x0, #0x2                   	// #2
 1c0:	bl	0 <test_all>
 1c4:	mov	x0, #0x0                   	// #0
 1c8:	bl	0 <test_all>
 1cc:	mov	x0, #0x708                 	// #1800
 1d0:	mov	x21, #0x1                   	// #1
 1d4:	movk	x0, #0x506, lsl #16
 1d8:	movk	x0, #0x304, lsl #32
 1dc:	movk	x0, #0x102, lsl #48
 1e0:	bl	0 <test_all>
 1e4:	nop
 1e8:	add	x0, x19, x19, lsl #1
 1ec:	add	x22, x22, x22, lsl #4
 1f0:	lsl	x1, x19, #3
 1f4:	add	x0, x19, x0, lsl #2
 1f8:	sub	x1, x1, x19
 1fc:	add	x0, x0, x22
 200:	add	x19, x19, x1, lsl #2
 204:	add	x1, x0, x0, lsl #1
 208:	lsl	x1, x1, #3
 20c:	sub	x1, x1, x0
 210:	adds	x19, x1, x19
 214:	csel	x19, x19, x21, ne  // ne = any
 218:	cmp	x0, #0x0
 21c:	csel	x22, x0, x21, ne  // ne = any
 220:	mov	x0, x22
 224:	bl	0 <test_all>
 228:	mov	x0, x19
 22c:	bl	0 <test_all>
 230:	subs	x20, x20, #0x1
 234:	b.ne	1e8 <ctz_test+0x58>  // b.any
 238:	ldp	x19, x20, [sp, #16]
 23c:	ldp	x21, x22, [sp, #32]
 240:	ldp	x29, x30, [sp], #48
 244:	ret

0000000000000248 <grub_mod_init>:
 248:	adrp	x1, 0 <test_all>
 24c:	adrp	x0, 0 <test_all>
 250:	ldr	x1, [x1]
 254:	ldr	x0, [x0]
 258:	b	0 <grub_test_register>
 25c:	nop
	...

0000000000000270 <grub_mod_fini>:
 270:	adrp	x0, 0 <test_all>
 274:	ldr	x0, [x0]
 278:	b	0 <grub_test_unregister>
 27c:	nop
	...
