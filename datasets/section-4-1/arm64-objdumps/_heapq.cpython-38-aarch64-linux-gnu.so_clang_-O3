
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_heapq.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000aa0 <.init>:
 aa0:	stp	x29, x30, [sp, #-16]!
 aa4:	mov	x29, sp
 aa8:	bl	b90 <PyModule_AddObject@plt+0x10>
 aac:	ldp	x29, x30, [sp], #16
 ab0:	ret

Disassembly of section .plt:

0000000000000ac0 <__cxa_finalize@plt-0x20>:
 ac0:	stp	x16, x30, [sp, #-16]!
 ac4:	adrp	x16, 13000 <PyInit__heapq@@Base+0x1239c>
 ac8:	ldr	x17, [x16, #4088]
 acc:	add	x16, x16, #0xff8
 ad0:	br	x17
 ad4:	nop
 ad8:	nop
 adc:	nop

0000000000000ae0 <__cxa_finalize@plt>:
 ae0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 ae4:	ldr	x17, [x16]
 ae8:	add	x16, x16, #0x0
 aec:	br	x17

0000000000000af0 <PyList_SetSlice@plt>:
 af0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 af4:	ldr	x17, [x16, #8]
 af8:	add	x16, x16, #0x8
 afc:	br	x17

0000000000000b00 <_Py_Dealloc@plt>:
 b00:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b04:	ldr	x17, [x16, #16]
 b08:	add	x16, x16, #0x10
 b0c:	br	x17

0000000000000b10 <PyErr_SetString@plt>:
 b10:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b14:	ldr	x17, [x16, #24]
 b18:	add	x16, x16, #0x18
 b1c:	br	x17

0000000000000b20 <PyObject_RichCompareBool@plt>:
 b20:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b24:	ldr	x17, [x16, #32]
 b28:	add	x16, x16, #0x20
 b2c:	br	x17

0000000000000b30 <PyList_Append@plt>:
 b30:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b34:	ldr	x17, [x16, #40]
 b38:	add	x16, x16, #0x28
 b3c:	br	x17

0000000000000b40 <__gmon_start__@plt>:
 b40:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b44:	ldr	x17, [x16, #48]
 b48:	add	x16, x16, #0x30
 b4c:	br	x17

0000000000000b50 <_PyArg_CheckPositional@plt>:
 b50:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b54:	ldr	x17, [x16, #56]
 b58:	add	x16, x16, #0x38
 b5c:	br	x17

0000000000000b60 <PyModule_Create2@plt>:
 b60:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b64:	ldr	x17, [x16, #64]
 b68:	add	x16, x16, #0x40
 b6c:	br	x17

0000000000000b70 <PyUnicode_DecodeUTF8@plt>:
 b70:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b74:	ldr	x17, [x16, #72]
 b78:	add	x16, x16, #0x48
 b7c:	br	x17

0000000000000b80 <PyModule_AddObject@plt>:
 b80:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b84:	ldr	x17, [x16, #80]
 b88:	add	x16, x16, #0x50
 b8c:	br	x17

Disassembly of section .text:

0000000000000b90 <PyInit__heapq@@Base-0xd4>:
     b90:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1239c>
     b94:	ldr	x0, [x0, #4040]
     b98:	cbz	x0, ba0 <PyModule_AddObject@plt+0x20>
     b9c:	b	b40 <__gmon_start__@plt>
     ba0:	ret
     ba4:	nop
     ba8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     bac:	add	x0, x0, #0x1e8
     bb0:	adrp	x1, 14000 <PyInit__heapq@@Base+0x1339c>
     bb4:	add	x1, x1, #0x1e8
     bb8:	cmp	x1, x0
     bbc:	b.eq	bd4 <PyModule_AddObject@plt+0x54>  // b.none
     bc0:	adrp	x1, 13000 <PyInit__heapq@@Base+0x1239c>
     bc4:	ldr	x1, [x1, #4008]
     bc8:	cbz	x1, bd4 <PyModule_AddObject@plt+0x54>
     bcc:	mov	x16, x1
     bd0:	br	x16
     bd4:	ret
     bd8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     bdc:	add	x0, x0, #0x1e8
     be0:	adrp	x1, 14000 <PyInit__heapq@@Base+0x1339c>
     be4:	add	x1, x1, #0x1e8
     be8:	sub	x1, x1, x0
     bec:	lsr	x2, x1, #63
     bf0:	add	x1, x2, x1, asr #3
     bf4:	cmp	xzr, x1, asr #1
     bf8:	asr	x1, x1, #1
     bfc:	b.eq	c14 <PyModule_AddObject@plt+0x94>  // b.none
     c00:	adrp	x2, 13000 <PyInit__heapq@@Base+0x1239c>
     c04:	ldr	x2, [x2, #4064]
     c08:	cbz	x2, c14 <PyModule_AddObject@plt+0x94>
     c0c:	mov	x16, x2
     c10:	br	x16
     c14:	ret
     c18:	stp	x29, x30, [sp, #-32]!
     c1c:	mov	x29, sp
     c20:	str	x19, [sp, #16]
     c24:	adrp	x19, 14000 <PyInit__heapq@@Base+0x1339c>
     c28:	ldrb	w0, [x19, #488]
     c2c:	cbnz	w0, c54 <PyModule_AddObject@plt+0xd4>
     c30:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1239c>
     c34:	ldr	x0, [x0, #4016]
     c38:	cbz	x0, c48 <PyModule_AddObject@plt+0xc8>
     c3c:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     c40:	ldr	x0, [x0, #88]
     c44:	bl	ae0 <__cxa_finalize@plt>
     c48:	bl	ba8 <PyModule_AddObject@plt+0x28>
     c4c:	mov	w0, #0x1                   	// #1
     c50:	strb	w0, [x19, #488]
     c54:	ldr	x19, [sp, #16]
     c58:	ldp	x29, x30, [sp], #32
     c5c:	ret
     c60:	b	bd8 <PyModule_AddObject@plt+0x58>

0000000000000c64 <PyInit__heapq@@Base>:
     c64:	stp	x29, x30, [sp, #-32]!
     c68:	str	x19, [sp, #16]
     c6c:	mov	x29, sp
     c70:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     c74:	add	x0, x0, #0x60
     c78:	mov	w1, #0x3f5                 	// #1013
     c7c:	bl	b60 <PyModule_Create2@plt>
     c80:	mov	x19, x0
     c84:	cbz	x0, cb0 <PyInit__heapq@@Base+0x4c>
     c88:	adrp	x0, 1000 <PyInit__heapq@@Base+0x39c>
     c8c:	add	x0, x0, #0x658
     c90:	mov	w1, #0x126f                	// #4719
     c94:	mov	x2, xzr
     c98:	bl	b70 <PyUnicode_DecodeUTF8@plt>
     c9c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     ca0:	mov	x2, x0
     ca4:	add	x1, x1, #0x230
     ca8:	mov	x0, x19
     cac:	bl	b80 <PyModule_AddObject@plt>
     cb0:	mov	x0, x19
     cb4:	ldr	x19, [sp, #16]
     cb8:	ldp	x29, x30, [sp], #32
     cbc:	ret
     cc0:	stp	x29, x30, [sp, #-48]!
     cc4:	stp	x22, x21, [sp, #16]
     cc8:	stp	x20, x19, [sp, #32]
     ccc:	mov	x29, sp
     cd0:	cmp	x2, #0x2
     cd4:	mov	x20, x1
     cd8:	b.eq	cfc <PyInit__heapq@@Base+0x98>  // b.none
     cdc:	mov	x8, x2
     ce0:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
     ce4:	add	x0, x0, #0x241
     ce8:	mov	w2, #0x2                   	// #2
     cec:	mov	w3, #0x2                   	// #2
     cf0:	mov	x1, x8
     cf4:	bl	b50 <_PyArg_CheckPositional@plt>
     cf8:	cbz	w0, d38 <PyInit__heapq@@Base+0xd4>
     cfc:	ldr	x19, [x20]
     d00:	ldr	x8, [x19, #8]
     d04:	ldrb	w8, [x8, #171]
     d08:	tbnz	w8, #1, d28 <PyInit__heapq@@Base+0xc4>
     d0c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     d10:	ldr	x8, [x8, #4032]
     d14:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     d18:	add	x1, x1, #0x29d
     d1c:	ldr	x0, [x8]
     d20:	bl	b10 <PyErr_SetString@plt>
     d24:	b	d38 <PyInit__heapq@@Base+0xd4>
     d28:	ldr	x1, [x20, #8]
     d2c:	mov	x0, x19
     d30:	bl	b30 <PyList_Append@plt>
     d34:	cbz	w0, d4c <PyInit__heapq@@Base+0xe8>
     d38:	mov	x0, xzr
     d3c:	ldp	x20, x19, [sp, #32]
     d40:	ldp	x22, x21, [sp, #16]
     d44:	ldp	x29, x30, [sp], #48
     d48:	ret
     d4c:	ldr	x20, [x19, #16]
     d50:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
     d54:	cmp	x20, x8
     d58:	b.ne	d70 <PyInit__heapq@@Base+0x10c>  // b.any
     d5c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     d60:	ldr	x8, [x8, #4056]
     d64:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     d68:	add	x1, x1, #0x2ba
     d6c:	b	d1c <PyInit__heapq@@Base+0xb8>
     d70:	sub	x21, x20, #0x1
     d74:	cmp	x21, #0x1
     d78:	b.lt	dd4 <PyInit__heapq@@Base+0x170>  // b.tstop
     d7c:	ldr	x8, [x19, #24]
     d80:	ldr	x0, [x8, x21, lsl #3]
     d84:	sub	x9, x21, #0x1
     d88:	asr	x22, x9, #1
     d8c:	ldr	x1, [x8, x22, lsl #3]
     d90:	mov	w2, wzr
     d94:	bl	b20 <PyObject_RichCompareBool@plt>
     d98:	tbnz	w0, #31, d38 <PyInit__heapq@@Base+0xd4>
     d9c:	ldr	x8, [x19, #16]
     da0:	cmp	x20, x8
     da4:	b.ne	df8 <PyInit__heapq@@Base+0x194>  // b.any
     da8:	cbz	w0, dd4 <PyInit__heapq@@Base+0x170>
     dac:	ldr	x8, [x19, #24]
     db0:	lsl	x9, x22, #3
     db4:	lsl	x10, x21, #3
     db8:	cmp	x21, #0x2
     dbc:	ldr	x0, [x8, x10]
     dc0:	ldr	x11, [x8, x9]
     dc4:	mov	x21, x22
     dc8:	str	x0, [x8, x9]
     dcc:	str	x11, [x8, x10]
     dd0:	b.gt	d84 <PyInit__heapq@@Base+0x120>
     dd4:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1239c>
     dd8:	ldr	x0, [x0, #4048]
     ddc:	ldr	x8, [x0]
     de0:	add	x8, x8, #0x1
     de4:	str	x8, [x0]
     de8:	ldp	x20, x19, [sp, #32]
     dec:	ldp	x22, x21, [sp, #16]
     df0:	ldp	x29, x30, [sp], #48
     df4:	ret
     df8:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     dfc:	ldr	x8, [x8, #4024]
     e00:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     e04:	add	x1, x1, #0x2cd
     e08:	b	d1c <PyInit__heapq@@Base+0xb8>
     e0c:	stp	x29, x30, [sp, #-48]!
     e10:	str	x21, [sp, #16]
     e14:	stp	x20, x19, [sp, #32]
     e18:	mov	x29, sp
     e1c:	cmp	x2, #0x2
     e20:	mov	x19, x1
     e24:	b.eq	e48 <PyInit__heapq@@Base+0x1e4>  // b.none
     e28:	mov	x8, x2
     e2c:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
     e30:	add	x0, x0, #0x24a
     e34:	mov	w2, #0x2                   	// #2
     e38:	mov	w3, #0x2                   	// #2
     e3c:	mov	x1, x8
     e40:	bl	b50 <_PyArg_CheckPositional@plt>
     e44:	cbz	w0, e70 <PyInit__heapq@@Base+0x20c>
     e48:	ldr	x20, [x19]
     e4c:	ldr	x8, [x20, #8]
     e50:	ldrb	w8, [x8, #171]
     e54:	tbnz	w8, #1, e78 <PyInit__heapq@@Base+0x214>
     e58:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     e5c:	ldr	x8, [x8, #4032]
     e60:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     e64:	add	x1, x1, #0x29d
     e68:	ldr	x0, [x8]
     e6c:	bl	b10 <PyErr_SetString@plt>
     e70:	mov	x19, xzr
     e74:	b	ef8 <PyInit__heapq@@Base+0x294>
     e78:	ldr	x8, [x20, #16]
     e7c:	ldr	x19, [x19, #8]
     e80:	cbz	x8, eec <PyInit__heapq@@Base+0x288>
     e84:	ldr	x8, [x20, #24]
     e88:	mov	x1, x19
     e8c:	mov	w2, wzr
     e90:	ldr	x0, [x8]
     e94:	bl	b20 <PyObject_RichCompareBool@plt>
     e98:	tbnz	w0, #31, e70 <PyInit__heapq@@Base+0x20c>
     e9c:	cbz	w0, eec <PyInit__heapq@@Base+0x288>
     ea0:	ldr	x8, [x20, #16]
     ea4:	cbz	x8, f0c <PyInit__heapq@@Base+0x2a8>
     ea8:	ldr	x8, [x20, #24]
     eac:	ldr	x9, [x19]
     eb0:	mov	x0, x20
     eb4:	mov	x1, xzr
     eb8:	ldr	x21, [x8]
     ebc:	add	x9, x9, #0x1
     ec0:	str	x9, [x19]
     ec4:	str	x19, [x8]
     ec8:	bl	1120 <PyInit__heapq@@Base+0x4bc>
     ecc:	cbz	w0, f20 <PyInit__heapq@@Base+0x2bc>
     ed0:	ldr	x8, [x21]
     ed4:	subs	x8, x8, #0x1
     ed8:	str	x8, [x21]
     edc:	b.ne	e70 <PyInit__heapq@@Base+0x20c>  // b.any
     ee0:	mov	x0, x21
     ee4:	bl	b00 <_Py_Dealloc@plt>
     ee8:	b	e70 <PyInit__heapq@@Base+0x20c>
     eec:	ldr	x8, [x19]
     ef0:	add	x8, x8, #0x1
     ef4:	str	x8, [x19]
     ef8:	mov	x0, x19
     efc:	ldp	x20, x19, [sp, #32]
     f00:	ldr	x21, [sp, #16]
     f04:	ldp	x29, x30, [sp], #48
     f08:	ret
     f0c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     f10:	ldr	x8, [x8, #4056]
     f14:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     f18:	add	x1, x1, #0x2ba
     f1c:	b	e68 <PyInit__heapq@@Base+0x204>
     f20:	mov	x19, x21
     f24:	b	ef8 <PyInit__heapq@@Base+0x294>
     f28:	adrp	x8, 1000 <PyInit__heapq@@Base+0x39c>
     f2c:	add	x8, x8, #0x120
     f30:	mov	x0, x1
     f34:	mov	x1, x8
     f38:	b	1288 <PyInit__heapq@@Base+0x624>
     f3c:	stp	x29, x30, [sp, #-32]!
     f40:	str	x19, [sp, #16]
     f44:	mov	x29, sp
     f48:	cmp	x2, #0x2
     f4c:	mov	x19, x1
     f50:	b.eq	f74 <PyInit__heapq@@Base+0x310>  // b.none
     f54:	mov	x8, x2
     f58:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
     f5c:	add	x0, x0, #0x25e
     f60:	mov	w2, #0x2                   	// #2
     f64:	mov	w3, #0x2                   	// #2
     f68:	mov	x1, x8
     f6c:	bl	b50 <_PyArg_CheckPositional@plt>
     f70:	cbz	w0, ffc <PyInit__heapq@@Base+0x398>
     f74:	ldr	x0, [x19]
     f78:	ldr	x8, [x0, #8]
     f7c:	ldrb	w8, [x8, #171]
     f80:	tbnz	w8, #1, f98 <PyInit__heapq@@Base+0x334>
     f84:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     f88:	ldr	x8, [x8, #4032]
     f8c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     f90:	add	x1, x1, #0x29d
     f94:	b	ff4 <PyInit__heapq@@Base+0x390>
     f98:	ldr	x8, [x0, #16]
     f9c:	cbz	x8, fe4 <PyInit__heapq@@Base+0x380>
     fa0:	ldr	x8, [x19, #8]
     fa4:	ldr	x9, [x0, #24]
     fa8:	mov	x1, xzr
     fac:	ldr	x10, [x8]
     fb0:	ldr	x19, [x9]
     fb4:	add	x10, x10, #0x1
     fb8:	str	x10, [x8]
     fbc:	str	x8, [x9]
     fc0:	bl	1120 <PyInit__heapq@@Base+0x4bc>
     fc4:	cbz	w0, 1000 <PyInit__heapq@@Base+0x39c>
     fc8:	ldr	x8, [x19]
     fcc:	subs	x8, x8, #0x1
     fd0:	str	x8, [x19]
     fd4:	b.ne	ffc <PyInit__heapq@@Base+0x398>  // b.any
     fd8:	mov	x0, x19
     fdc:	bl	b00 <_Py_Dealloc@plt>
     fe0:	b	ffc <PyInit__heapq@@Base+0x398>
     fe4:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     fe8:	ldr	x8, [x8, #4056]
     fec:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     ff0:	add	x1, x1, #0x2ba
     ff4:	ldr	x0, [x8]
     ff8:	bl	b10 <PyErr_SetString@plt>
     ffc:	mov	x19, xzr
    1000:	mov	x0, x19
    1004:	ldr	x19, [sp, #16]
    1008:	ldp	x29, x30, [sp], #32
    100c:	ret
    1010:	adrp	x8, 1000 <PyInit__heapq@@Base+0x39c>
    1014:	add	x8, x8, #0x120
    1018:	mov	x0, x1
    101c:	mov	x1, x8
    1020:	b	1384 <PyInit__heapq@@Base+0x720>
    1024:	adrp	x8, 1000 <PyInit__heapq@@Base+0x39c>
    1028:	add	x8, x8, #0x4e4
    102c:	mov	x0, x1
    1030:	mov	x1, x8
    1034:	b	1288 <PyInit__heapq@@Base+0x624>
    1038:	adrp	x8, 1000 <PyInit__heapq@@Base+0x39c>
    103c:	add	x8, x8, #0x4e4
    1040:	mov	x0, x1
    1044:	mov	x1, x8
    1048:	b	1384 <PyInit__heapq@@Base+0x720>
    104c:	stp	x29, x30, [sp, #-32]!
    1050:	str	x19, [sp, #16]
    1054:	mov	x29, sp
    1058:	cmp	x2, #0x2
    105c:	mov	x19, x1
    1060:	b.eq	1084 <PyInit__heapq@@Base+0x420>  // b.none
    1064:	mov	x8, x2
    1068:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
    106c:	add	x0, x0, #0x28c
    1070:	mov	w2, #0x2                   	// #2
    1074:	mov	w3, #0x2                   	// #2
    1078:	mov	x1, x8
    107c:	bl	b50 <_PyArg_CheckPositional@plt>
    1080:	cbz	w0, 110c <PyInit__heapq@@Base+0x4a8>
    1084:	ldr	x0, [x19]
    1088:	ldr	x8, [x0, #8]
    108c:	ldrb	w8, [x8, #171]
    1090:	tbnz	w8, #1, 10a8 <PyInit__heapq@@Base+0x444>
    1094:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1098:	ldr	x8, [x8, #4032]
    109c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    10a0:	add	x1, x1, #0x29d
    10a4:	b	1104 <PyInit__heapq@@Base+0x4a0>
    10a8:	ldr	x8, [x0, #16]
    10ac:	cbz	x8, 10f4 <PyInit__heapq@@Base+0x490>
    10b0:	ldr	x8, [x19, #8]
    10b4:	ldr	x9, [x0, #24]
    10b8:	mov	x1, xzr
    10bc:	ldr	x10, [x8]
    10c0:	ldr	x19, [x9]
    10c4:	add	x10, x10, #0x1
    10c8:	str	x10, [x8]
    10cc:	str	x8, [x9]
    10d0:	bl	14e4 <PyInit__heapq@@Base+0x880>
    10d4:	cbz	w0, 1110 <PyInit__heapq@@Base+0x4ac>
    10d8:	ldr	x8, [x19]
    10dc:	subs	x8, x8, #0x1
    10e0:	str	x8, [x19]
    10e4:	b.ne	110c <PyInit__heapq@@Base+0x4a8>  // b.any
    10e8:	mov	x0, x19
    10ec:	bl	b00 <_Py_Dealloc@plt>
    10f0:	b	110c <PyInit__heapq@@Base+0x4a8>
    10f4:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    10f8:	ldr	x8, [x8, #4056]
    10fc:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1100:	add	x1, x1, #0x2ba
    1104:	ldr	x0, [x8]
    1108:	bl	b10 <PyErr_SetString@plt>
    110c:	mov	x19, xzr
    1110:	mov	x0, x19
    1114:	ldr	x19, [sp, #16]
    1118:	ldp	x29, x30, [sp], #32
    111c:	ret
    1120:	stp	x29, x30, [sp, #-64]!
    1124:	stp	x24, x23, [sp, #16]
    1128:	stp	x22, x21, [sp, #32]
    112c:	stp	x20, x19, [sp, #48]
    1130:	mov	x29, sp
    1134:	ldr	x21, [x0, #16]
    1138:	cmp	x21, x1
    113c:	b.le	1250 <PyInit__heapq@@Base+0x5ec>
    1140:	asr	x23, x21, #1
    1144:	mov	x19, x0
    1148:	mov	x20, x1
    114c:	cmp	x23, x1
    1150:	mov	x22, x1
    1154:	b.le	11dc <PyInit__heapq@@Base+0x578>
    1158:	ldr	x8, [x19, #24]
    115c:	mov	x24, x20
    1160:	b	1194 <PyInit__heapq@@Base+0x530>
    1164:	ldr	x8, [x19, #24]
    1168:	eor	w9, w0, #0x1
    116c:	add	x22, x22, x9
    1170:	lsl	x9, x22, #3
    1174:	lsl	x10, x24, #3
    1178:	ldr	x11, [x8, x10]
    117c:	ldr	x12, [x8, x9]
    1180:	cmp	x22, x23
    1184:	mov	x24, x22
    1188:	str	x11, [x8, x9]
    118c:	str	x12, [x8, x10]
    1190:	b.ge	11dc <PyInit__heapq@@Base+0x578>  // b.tcont
    1194:	mov	w22, #0x1                   	// #1
    1198:	bfi	x22, x24, #1, #63
    119c:	add	x9, x22, #0x1
    11a0:	cmp	x9, x21
    11a4:	b.ge	1170 <PyInit__heapq@@Base+0x50c>  // b.tcont
    11a8:	ldr	x0, [x8, x22, lsl #3]
    11ac:	ldr	x1, [x8, x9, lsl #3]
    11b0:	mov	w2, wzr
    11b4:	bl	b20 <PyObject_RichCompareBool@plt>
    11b8:	tbnz	w0, #31, 1268 <PyInit__heapq@@Base+0x604>
    11bc:	ldr	x8, [x19, #16]
    11c0:	cmp	x21, x8
    11c4:	b.eq	1164 <PyInit__heapq@@Base+0x500>  // b.none
    11c8:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    11cc:	ldr	x8, [x8, #4024]
    11d0:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    11d4:	add	x1, x1, #0x2cd
    11d8:	b	1260 <PyInit__heapq@@Base+0x5fc>
    11dc:	cmp	x21, x22
    11e0:	b.le	1250 <PyInit__heapq@@Base+0x5ec>
    11e4:	cmp	x22, x20
    11e8:	b.le	1280 <PyInit__heapq@@Base+0x61c>
    11ec:	ldr	x9, [x19, #24]
    11f0:	ldr	x8, [x9, x22, lsl #3]
    11f4:	sub	x10, x22, #0x1
    11f8:	asr	x23, x10, #1
    11fc:	ldr	x1, [x9, x23, lsl #3]
    1200:	mov	x0, x8
    1204:	mov	w2, wzr
    1208:	bl	b20 <PyObject_RichCompareBool@plt>
    120c:	tbnz	w0, #31, 1268 <PyInit__heapq@@Base+0x604>
    1210:	ldr	x8, [x19, #16]
    1214:	cmp	x21, x8
    1218:	b.ne	11c8 <PyInit__heapq@@Base+0x564>  // b.any
    121c:	cbz	w0, 126c <PyInit__heapq@@Base+0x608>
    1220:	ldr	x9, [x19, #24]
    1224:	lsl	x10, x23, #3
    1228:	lsl	x11, x22, #3
    122c:	mov	w0, wzr
    1230:	ldr	x8, [x9, x11]
    1234:	ldr	x12, [x9, x10]
    1238:	cmp	x23, x20
    123c:	mov	x22, x23
    1240:	str	x8, [x9, x10]
    1244:	str	x12, [x9, x11]
    1248:	b.gt	11f4 <PyInit__heapq@@Base+0x590>
    124c:	b	126c <PyInit__heapq@@Base+0x608>
    1250:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1254:	ldr	x8, [x8, #4056]
    1258:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    125c:	add	x1, x1, #0x2ba
    1260:	ldr	x0, [x8]
    1264:	bl	b10 <PyErr_SetString@plt>
    1268:	mov	w0, #0xffffffff            	// #-1
    126c:	ldp	x20, x19, [sp, #48]
    1270:	ldp	x22, x21, [sp, #32]
    1274:	ldp	x24, x23, [sp, #16]
    1278:	ldp	x29, x30, [sp], #64
    127c:	ret
    1280:	mov	w0, wzr
    1284:	b	126c <PyInit__heapq@@Base+0x608>
    1288:	stp	x29, x30, [sp, #-48]!
    128c:	stp	x22, x21, [sp, #16]
    1290:	stp	x20, x19, [sp, #32]
    1294:	mov	x29, sp
    1298:	ldr	x8, [x0, #8]
    129c:	ldrb	w8, [x8, #171]
    12a0:	tbnz	w8, #1, 12b8 <PyInit__heapq@@Base+0x654>
    12a4:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    12a8:	ldr	x8, [x8, #4032]
    12ac:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    12b0:	add	x1, x1, #0x29d
    12b4:	b	1320 <PyInit__heapq@@Base+0x6bc>
    12b8:	ldr	x22, [x0, #16]
    12bc:	mov	x20, x0
    12c0:	cbz	x22, 1310 <PyInit__heapq@@Base+0x6ac>
    12c4:	ldr	x8, [x20, #24]
    12c8:	mov	x21, x1
    12cc:	sub	x1, x22, #0x1
    12d0:	mov	x0, x20
    12d4:	ldr	x19, [x8, x1, lsl #3]
    12d8:	mov	x2, x22
    12dc:	mov	x3, xzr
    12e0:	ldr	x8, [x19]
    12e4:	add	x8, x8, #0x1
    12e8:	str	x8, [x19]
    12ec:	bl	af0 <PyList_SetSlice@plt>
    12f0:	cbz	w0, 1340 <PyInit__heapq@@Base+0x6dc>
    12f4:	ldr	x8, [x19]
    12f8:	subs	x8, x8, #0x1
    12fc:	str	x8, [x19]
    1300:	b.ne	1328 <PyInit__heapq@@Base+0x6c4>  // b.any
    1304:	mov	x0, x19
    1308:	bl	b00 <_Py_Dealloc@plt>
    130c:	b	1328 <PyInit__heapq@@Base+0x6c4>
    1310:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1314:	ldr	x8, [x8, #4056]
    1318:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    131c:	add	x1, x1, #0x2ba
    1320:	ldr	x0, [x8]
    1324:	bl	b10 <PyErr_SetString@plt>
    1328:	mov	x19, xzr
    132c:	mov	x0, x19
    1330:	ldp	x20, x19, [sp, #32]
    1334:	ldp	x22, x21, [sp, #16]
    1338:	ldp	x29, x30, [sp], #48
    133c:	ret
    1340:	cmp	x22, #0x1
    1344:	b.eq	132c <PyInit__heapq@@Base+0x6c8>  // b.none
    1348:	ldr	x8, [x20, #24]
    134c:	mov	x0, x20
    1350:	mov	x1, xzr
    1354:	ldr	x22, [x8]
    1358:	str	x19, [x8]
    135c:	blr	x21
    1360:	cbz	w0, 137c <PyInit__heapq@@Base+0x718>
    1364:	ldr	x8, [x22]
    1368:	subs	x8, x8, #0x1
    136c:	str	x8, [x22]
    1370:	b.ne	1328 <PyInit__heapq@@Base+0x6c4>  // b.any
    1374:	mov	x0, x22
    1378:	b	1308 <PyInit__heapq@@Base+0x6a4>
    137c:	mov	x19, x22
    1380:	b	132c <PyInit__heapq@@Base+0x6c8>
    1384:	stp	x29, x30, [sp, #-80]!
    1388:	str	x25, [sp, #16]
    138c:	stp	x24, x23, [sp, #32]
    1390:	stp	x22, x21, [sp, #48]
    1394:	stp	x20, x19, [sp, #64]
    1398:	mov	x29, sp
    139c:	ldr	x8, [x0, #8]
    13a0:	ldrb	w8, [x8, #171]
    13a4:	tbnz	w8, #1, 13dc <PyInit__heapq@@Base+0x778>
    13a8:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    13ac:	ldr	x8, [x8, #4032]
    13b0:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    13b4:	add	x1, x1, #0x29d
    13b8:	ldr	x0, [x8]
    13bc:	bl	b10 <PyErr_SetString@plt>
    13c0:	mov	x0, xzr
    13c4:	ldp	x20, x19, [sp, #64]
    13c8:	ldp	x22, x21, [sp, #48]
    13cc:	ldp	x24, x23, [sp, #32]
    13d0:	ldr	x25, [sp, #16]
    13d4:	ldp	x29, x30, [sp], #80
    13d8:	ret
    13dc:	ldr	x8, [x0, #16]
    13e0:	mov	x19, x0
    13e4:	mov	x20, x1
    13e8:	cmp	x8, #0x9c5
    13ec:	b.lt	14c4 <PyInit__heapq@@Base+0x860>  // b.tstop
    13f0:	lsr	x23, x8, #1
    13f4:	mov	x9, xzr
    13f8:	add	x10, x23, #0x1
    13fc:	lsr	x11, x10, #1
    1400:	cmp	x10, #0x3
    1404:	add	x9, x9, #0x1
    1408:	mov	x10, x11
    140c:	b.hi	13fc <PyInit__heapq@@Base+0x798>  // b.pmore
    1410:	lsl	x24, x11, x9
    1414:	asr	x25, x8, #2
    1418:	sub	x21, x24, #0x2
    141c:	cmp	x21, x25
    1420:	b.lt	1460 <PyInit__heapq@@Base+0x7fc>  // b.tstop
    1424:	mov	x0, x19
    1428:	mov	x1, x21
    142c:	blr	x20
    1430:	mov	x22, x21
    1434:	cbnz	w0, 13c0 <PyInit__heapq@@Base+0x75c>
    1438:	tbz	w22, #0, 1454 <PyInit__heapq@@Base+0x7f0>
    143c:	asr	x22, x22, #1
    1440:	mov	x0, x19
    1444:	mov	x1, x22
    1448:	blr	x20
    144c:	cbz	w0, 1438 <PyInit__heapq@@Base+0x7d4>
    1450:	b	13c0 <PyInit__heapq@@Base+0x75c>
    1454:	sub	x21, x21, #0x1
    1458:	cmp	x21, x25
    145c:	b.ge	1424 <PyInit__heapq@@Base+0x7c0>  // b.tcont
    1460:	sub	x24, x24, #0x1
    1464:	cmp	x23, x24
    1468:	b.le	14ac <PyInit__heapq@@Base+0x848>
    146c:	sub	x21, x23, #0x1
    1470:	mov	x0, x19
    1474:	mov	x1, x21
    1478:	blr	x20
    147c:	mov	x22, x21
    1480:	cbnz	w0, 13c0 <PyInit__heapq@@Base+0x75c>
    1484:	tbz	w22, #0, 14a0 <PyInit__heapq@@Base+0x83c>
    1488:	asr	x22, x22, #1
    148c:	mov	x0, x19
    1490:	mov	x1, x22
    1494:	blr	x20
    1498:	cbz	w0, 1484 <PyInit__heapq@@Base+0x820>
    149c:	b	13c0 <PyInit__heapq@@Base+0x75c>
    14a0:	sub	x21, x21, #0x1
    14a4:	cmp	x21, x24
    14a8:	b.ge	1470 <PyInit__heapq@@Base+0x80c>  // b.tcont
    14ac:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1239c>
    14b0:	ldr	x0, [x0, #4048]
    14b4:	ldr	x8, [x0]
    14b8:	add	x8, x8, #0x1
    14bc:	str	x8, [x0]
    14c0:	b	13c4 <PyInit__heapq@@Base+0x760>
    14c4:	asr	x21, x8, #1
    14c8:	subs	x21, x21, #0x1
    14cc:	b.lt	14ac <PyInit__heapq@@Base+0x848>  // b.tstop
    14d0:	mov	x0, x19
    14d4:	mov	x1, x21
    14d8:	blr	x20
    14dc:	cbz	w0, 14c8 <PyInit__heapq@@Base+0x864>
    14e0:	b	13c0 <PyInit__heapq@@Base+0x75c>
    14e4:	stp	x29, x30, [sp, #-64]!
    14e8:	stp	x24, x23, [sp, #16]
    14ec:	stp	x22, x21, [sp, #32]
    14f0:	stp	x20, x19, [sp, #48]
    14f4:	mov	x29, sp
    14f8:	ldr	x21, [x0, #16]
    14fc:	cmp	x21, x1
    1500:	b.le	1610 <PyInit__heapq@@Base+0x9ac>
    1504:	asr	x23, x21, #1
    1508:	mov	x19, x0
    150c:	mov	x20, x1
    1510:	cmp	x23, x1
    1514:	mov	x22, x1
    1518:	b.le	15a0 <PyInit__heapq@@Base+0x93c>
    151c:	ldr	x8, [x19, #24]
    1520:	mov	x24, x20
    1524:	b	1558 <PyInit__heapq@@Base+0x8f4>
    1528:	ldr	x8, [x19, #24]
    152c:	eor	w9, w0, #0x1
    1530:	add	x22, x22, x9
    1534:	lsl	x9, x22, #3
    1538:	lsl	x10, x24, #3
    153c:	ldr	x11, [x8, x10]
    1540:	ldr	x12, [x8, x9]
    1544:	cmp	x22, x23
    1548:	mov	x24, x22
    154c:	str	x11, [x8, x9]
    1550:	str	x12, [x8, x10]
    1554:	b.ge	15a0 <PyInit__heapq@@Base+0x93c>  // b.tcont
    1558:	mov	w22, #0x1                   	// #1
    155c:	bfi	x22, x24, #1, #63
    1560:	add	x9, x22, #0x1
    1564:	cmp	x9, x21
    1568:	b.ge	1534 <PyInit__heapq@@Base+0x8d0>  // b.tcont
    156c:	ldr	x0, [x8, x9, lsl #3]
    1570:	ldr	x1, [x8, x22, lsl #3]
    1574:	mov	w2, wzr
    1578:	bl	b20 <PyObject_RichCompareBool@plt>
    157c:	tbnz	w0, #31, 1628 <PyInit__heapq@@Base+0x9c4>
    1580:	ldr	x8, [x19, #16]
    1584:	cmp	x21, x8
    1588:	b.eq	1528 <PyInit__heapq@@Base+0x8c4>  // b.none
    158c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1590:	ldr	x8, [x8, #4024]
    1594:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1598:	add	x1, x1, #0x2cd
    159c:	b	1620 <PyInit__heapq@@Base+0x9bc>
    15a0:	cmp	x21, x22
    15a4:	b.le	1610 <PyInit__heapq@@Base+0x9ac>
    15a8:	cmp	x22, x20
    15ac:	b.le	1640 <PyInit__heapq@@Base+0x9dc>
    15b0:	ldr	x8, [x19, #24]
    15b4:	ldr	x1, [x8, x22, lsl #3]
    15b8:	sub	x9, x22, #0x1
    15bc:	asr	x23, x9, #1
    15c0:	ldr	x0, [x8, x23, lsl #3]
    15c4:	mov	w2, wzr
    15c8:	bl	b20 <PyObject_RichCompareBool@plt>
    15cc:	tbnz	w0, #31, 1628 <PyInit__heapq@@Base+0x9c4>
    15d0:	ldr	x8, [x19, #16]
    15d4:	cmp	x21, x8
    15d8:	b.ne	158c <PyInit__heapq@@Base+0x928>  // b.any
    15dc:	cbz	w0, 162c <PyInit__heapq@@Base+0x9c8>
    15e0:	ldr	x8, [x19, #24]
    15e4:	lsl	x9, x23, #3
    15e8:	lsl	x10, x22, #3
    15ec:	mov	w0, wzr
    15f0:	ldr	x1, [x8, x10]
    15f4:	ldr	x11, [x8, x9]
    15f8:	cmp	x23, x20
    15fc:	mov	x22, x23
    1600:	str	x1, [x8, x9]
    1604:	str	x11, [x8, x10]
    1608:	b.gt	15b8 <PyInit__heapq@@Base+0x954>
    160c:	b	162c <PyInit__heapq@@Base+0x9c8>
    1610:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1614:	ldr	x8, [x8, #4056]
    1618:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    161c:	add	x1, x1, #0x2ba
    1620:	ldr	x0, [x8]
    1624:	bl	b10 <PyErr_SetString@plt>
    1628:	mov	w0, #0xffffffff            	// #-1
    162c:	ldp	x20, x19, [sp, #48]
    1630:	ldp	x22, x21, [sp, #32]
    1634:	ldp	x24, x23, [sp, #16]
    1638:	ldp	x29, x30, [sp], #64
    163c:	ret
    1640:	mov	w0, wzr
    1644:	b	162c <PyInit__heapq@@Base+0x9c8>

Disassembly of section .fini:

0000000000001648 <.fini>:
    1648:	stp	x29, x30, [sp, #-16]!
    164c:	mov	x29, sp
    1650:	ldp	x29, x30, [sp], #16
    1654:	ret
