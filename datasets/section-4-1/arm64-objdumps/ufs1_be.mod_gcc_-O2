
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ufs1_be.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xdf8>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #80]
   c:	bl	0 <grub_free>
  10:	mov	w0, #0x0                   	// #0
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	nop
  20:	stp	x29, x30, [sp, #-64]!
  24:	mov	x29, sp
  28:	stp	x19, x20, [sp, #16]
  2c:	stp	x21, x22, [sp, #32]
  30:	mov	x21, x0
  34:	mov	x0, #0x5f8                 	// #1528
  38:	bl	0 <grub_malloc>
  3c:	mov	x19, x0
  40:	cbz	x0, 104 <grub_mod_init-0xcf4>
  44:	adrp	x0, 0 <grub_mod_init-0xdf8>
  48:	ldr	x20, [x0]
  4c:	ldr	w1, [x20]
  50:	cmn	w1, #0x1
  54:	b.eq	160 <grub_mod_init-0xc98>  // b.none
  58:	adrp	x0, 0 <grub_mod_init-0xdf8>
  5c:	str	x23, [sp, #48]
  60:	mov	w23, #0x100                 	// #256
  64:	ldr	x22, [x0]
  68:	movk	w23, #0x5419, lsl #16
  6c:	b	7c <grub_mod_init-0xd7c>
  70:	ldr	w1, [x20, #4]!
  74:	cmn	w1, #0x1
  78:	b.eq	148 <grub_mod_init-0xcb0>  // b.none
  7c:	sxtw	x1, w1
  80:	mov	x4, x19
  84:	mov	x0, x21
  88:	mov	x3, #0x560                 	// #1376
  8c:	mov	x2, #0x0                   	// #0
  90:	bl	0 <grub_disk_read>
  94:	ldr	w1, [x22]
  98:	cbnz	w1, 118 <grub_mod_init-0xce0>
  9c:	ldr	w1, [x19, #1372]
  a0:	cmp	w1, w23
  a4:	b.ne	70 <grub_mod_init-0xd88>  // b.any
  a8:	ldr	w1, [x19, #48]
  ac:	sub	w0, w1, #0x1
  b0:	tst	w0, w1
  b4:	cbz	w1, 70 <grub_mod_init-0xd88>
  b8:	b.ne	70 <grub_mod_init-0xd88>  // b.any
  bc:	ldr	w0, [x19, #184]
  c0:	cbz	w0, 70 <grub_mod_init-0xd88>
  c4:	str	wzr, [x19, #1520]
  c8:	rev	w1, w1
  cc:	cmp	w1, #0x1
  d0:	b.ls	f8 <grub_mod_init-0xd00>  // b.plast
  d4:	mov	w0, #0x1                   	// #1
  d8:	mov	w4, w0
  dc:	nop
  e0:	mov	w2, w0
  e4:	add	w0, w0, #0x1
  e8:	lsl	w3, w4, w2
  ec:	cmp	w3, w1
  f0:	b.cc	e0 <grub_mod_init-0xd18>  // b.lo, b.ul, b.last
  f4:	str	w2, [x19, #1520]
  f8:	ldr	x23, [sp, #48]
  fc:	str	x21, [x19, #1376]
 100:	str	wzr, [x19, #1516]
 104:	mov	x0, x19
 108:	ldp	x19, x20, [sp, #16]
 10c:	ldp	x21, x22, [sp, #32]
 110:	ldp	x29, x30, [sp], #64
 114:	ret
 118:	ldr	x23, [sp, #48]
 11c:	cmp	w1, #0x0
 120:	ccmp	w1, #0xb, #0x4, ne  // ne = any
 124:	b.eq	14c <grub_mod_init-0xcac>  // b.none
 128:	mov	x0, x19
 12c:	mov	x19, #0x0                   	// #0
 130:	bl	0 <grub_free>
 134:	mov	x0, x19
 138:	ldp	x19, x20, [sp, #16]
 13c:	ldp	x21, x22, [sp, #32]
 140:	ldp	x29, x30, [sp], #64
 144:	ret
 148:	ldr	x23, [sp, #48]
 14c:	adrp	x1, 0 <grub_mod_init-0xdf8>
 150:	mov	w0, #0x9                   	// #9
 154:	ldr	x1, [x1]
 158:	bl	0 <grub_error>
 15c:	b	128 <grub_mod_init-0xcd0>
 160:	adrp	x0, 0 <grub_mod_init-0xdf8>
 164:	ldr	x0, [x0]
 168:	ldr	w1, [x0]
 16c:	b	11c <grub_mod_init-0xcdc>
	...
 188:	stp	x29, x30, [sp, #-48]!
 18c:	adrp	x2, 0 <grub_mod_init-0xdf8>
 190:	mov	x29, sp
 194:	str	x21, [sp, #32]
 198:	ldr	x21, [x2]
 19c:	stp	x19, x20, [sp, #16]
 1a0:	mov	x19, x0
 1a4:	mov	x20, x1
 1a8:	ldr	x0, [x21]
 1ac:	bl	0 <grub_dl_ref>
 1b0:	ldr	x0, [x19]
 1b4:	bl	20 <grub_mod_init-0xdd8>
 1b8:	mov	x19, x0
 1bc:	mov	w2, #0x0                   	// #0
 1c0:	cbz	x0, 1cc <grub_mod_init-0xc2c>
 1c4:	ldr	w2, [x0, #32]
 1c8:	rev	w2, w2
 1cc:	ldr	x0, [x21]
 1d0:	str	w2, [x20]
 1d4:	bl	0 <grub_dl_unref>
 1d8:	mov	x0, x19
 1dc:	bl	0 <grub_free>
 1e0:	adrp	x0, 0 <grub_mod_init-0xdf8>
 1e4:	ldp	x19, x20, [sp, #16]
 1e8:	ldr	x0, [x0]
 1ec:	ldr	x21, [sp, #32]
 1f0:	ldr	w0, [x0]
 1f4:	ldp	x29, x30, [sp], #48
 1f8:	ret
 1fc:	nop
	...
 210:	stp	x29, x30, [sp, #-16]!
 214:	mov	x4, x2
 218:	mov	x29, sp
 21c:	ldp	w5, w6, [x0, #184]
 220:	ldp	w7, w3, [x0, #24]
 224:	rev	w2, w5
 228:	rev	w6, w6
 22c:	rev	w3, w3
 230:	rev	w7, w7
 234:	udiv	w5, w1, w2
 238:	bic	w3, w5, w3
 23c:	mul	w6, w5, w6
 240:	msub	w5, w5, w2, w1
 244:	madd	w3, w3, w7, w6
 248:	cbz	x4, 2a8 <grub_mod_init-0xb50>
 24c:	ldr	w1, [x0, #16]
 250:	negs	w6, w5
 254:	and	w7, w5, #0x3
 258:	ldr	w2, [x0, #100]
 25c:	rev	w1, w1
 260:	and	w6, w6, #0x3
 264:	csneg	w6, w7, w6, mi  // mi = first
 268:	add	w3, w3, w1
 26c:	cmp	w5, #0x0
 270:	add	w1, w5, #0x3
 274:	ldr	x0, [x0, #1376]
 278:	csel	w5, w1, w5, lt  // lt = tstop
 27c:	rev	w2, w2
 280:	lsl	w1, w3, w2
 284:	sbfiz	x2, x6, #7, #32
 288:	add	w1, w1, w5, asr #2
 28c:	mov	x3, #0x80                  	// #128
 290:	bl	0 <grub_disk_read>
 294:	adrp	x0, 0 <grub_mod_init-0xdf8>
 298:	ldp	x29, x30, [sp], #16
 29c:	ldr	x0, [x0]
 2a0:	ldr	w0, [x0]
 2a4:	ret
 2a8:	add	x4, x0, #0x568
 2ac:	str	w1, [x0, #1512]
 2b0:	b	24c <grub_mod_init-0xbac>
 2b4:	nop
	...
 2c0:	stp	x29, x30, [sp, #-48]!
 2c4:	adrp	x2, 0 <grub_mod_init-0xdf8>
 2c8:	mov	x29, sp
 2cc:	stp	x19, x20, [sp, #16]
 2d0:	mov	x20, x1
 2d4:	ldr	x19, [x0]
 2d8:	str	x21, [sp, #32]
 2dc:	ldr	x21, [x2]
 2e0:	ldr	x0, [x21]
 2e4:	bl	0 <grub_dl_ref>
 2e8:	mov	x0, x19
 2ec:	bl	20 <grub_mod_init-0xdd8>
 2f0:	mov	x19, x0
 2f4:	cbz	x0, 300 <grub_mod_init-0xaf8>
 2f8:	ldr	x0, [x0, #144]
 2fc:	cbnz	x0, 330 <grub_mod_init-0xac8>
 300:	str	xzr, [x20]
 304:	ldr	x0, [x21]
 308:	bl	0 <grub_dl_unref>
 30c:	mov	x0, x19
 310:	bl	0 <grub_free>
 314:	adrp	x0, 0 <grub_mod_init-0xdf8>
 318:	ldp	x19, x20, [sp, #16]
 31c:	ldr	x0, [x0]
 320:	ldr	x21, [sp, #32]
 324:	ldr	w0, [x0]
 328:	ldp	x29, x30, [sp], #48
 32c:	ret
 330:	adrp	x0, 0 <grub_mod_init-0xdf8>
 334:	ldp	w1, w2, [x19, #144]
 338:	ldr	x0, [x0]
 33c:	rev	w1, w1
 340:	rev	w2, w2
 344:	bl	0 <grub_xasprintf>
 348:	str	x0, [x20]
 34c:	b	304 <grub_mod_init-0xaf4>
	...
 368:	stp	x29, x30, [sp, #-48]!
 36c:	adrp	x2, 0 <grub_mod_init-0xdf8>
 370:	mov	x29, sp
 374:	str	x21, [sp, #32]
 378:	ldr	x21, [x2]
 37c:	stp	x19, x20, [sp, #16]
 380:	mov	x19, x0
 384:	mov	x20, x1
 388:	ldr	x0, [x21]
 38c:	bl	0 <grub_dl_ref>
 390:	ldr	x0, [x19]
 394:	str	xzr, [x20]
 398:	bl	20 <grub_mod_init-0xdd8>
 39c:	mov	x19, x0
 3a0:	cbz	x0, 3b0 <grub_mod_init-0xa48>
 3a4:	add	x0, x0, #0x2a8
 3a8:	bl	0 <grub_strdup>
 3ac:	str	x0, [x20]
 3b0:	ldr	x0, [x21]
 3b4:	bl	0 <grub_dl_unref>
 3b8:	mov	x0, x19
 3bc:	bl	0 <grub_free>
 3c0:	adrp	x0, 0 <grub_mod_init-0xdf8>
 3c4:	ldp	x19, x20, [sp, #16]
 3c8:	ldr	x0, [x0]
 3cc:	ldr	x21, [sp, #32]
 3d0:	ldr	w0, [x0]
 3d4:	ldp	x29, x30, [sp], #48
 3d8:	ret
 3dc:	nop
	...
 3f0:	stp	x29, x30, [sp, #-176]!
 3f4:	mov	x29, sp
 3f8:	stp	x23, x24, [sp, #48]
 3fc:	mov	x24, x0
 400:	ldr	x0, [x0, #1392]
 404:	stp	x19, x20, [sp, #16]
 408:	mov	x19, x3
 40c:	add	x3, x4, x3
 410:	stp	x25, x26, [sp, #64]
 414:	rev	x0, x0
 418:	stp	x27, x28, [sp, #80]
 41c:	mov	x25, x5
 420:	cmp	x3, x0
 424:	stp	x1, x2, [sp, #104]
 428:	str	x3, [sp, #120]
 42c:	str	x4, [sp, #152]
 430:	b.ls	440 <grub_mod_init-0x9b8>  // b.plast
 434:	sub	x1, x0, x19
 438:	str	x0, [sp, #120]
 43c:	str	x1, [sp, #152]
 440:	ldr	x0, [sp, #120]
 444:	ldr	w8, [x24, #48]
 448:	sub	x20, x0, #0x1
 44c:	ldr	w0, [x24, #1520]
 450:	rev	w1, w8
 454:	rev	w27, w8
 458:	add	x20, x20, x1
 45c:	lsr	x28, x19, x0
 460:	lsr	x20, x20, x0
 464:	cmp	x20, x28
 468:	b.ls	588 <grub_mod_init-0x870>  // b.plast
 46c:	adrp	x0, 0 <grub_mod_init-0xdf8>
 470:	stp	x21, x22, [sp, #32]
 474:	sub	x22, x20, #0x1
 478:	ldr	x21, [x0]
 47c:	mov	w26, #0x1                   	// #1
 480:	cmp	x28, #0xb
 484:	b.ls	5c8 <grub_mod_init-0x830>  // b.plast
 488:	ldr	w10, [x24, #1520]
 48c:	sub	x0, x28, #0xc
 490:	ldr	w11, [x24, #100]
 494:	sub	w10, w10, #0x2
 498:	rev	w23, w11
 49c:	lsl	w9, w26, w10
 4a0:	sxtw	x12, w9
 4a4:	cmp	x0, w9, sxtw
 4a8:	b.cc	69c <grub_mod_init-0x75c>  // b.lo, b.ul, b.last
 4ac:	smull	x2, w9, w9
 4b0:	sub	x12, x0, x12
 4b4:	cmp	x12, x2
 4b8:	b.cc	6c8 <grub_mod_init-0x730>  // b.lo, b.ul, b.last
 4bc:	lsl	w1, w10, #1
 4c0:	sub	x12, x12, x2
 4c4:	add	w0, w1, w10
 4c8:	lsr	x0, x12, x0
 4cc:	cbz	x0, 5fc <grub_mod_init-0x7fc>
 4d0:	adrp	x0, 0 <grub_mod_init-0xdf8>
 4d4:	ldr	x1, [x0]
 4d8:	mov	w0, #0x9                   	// #9
 4dc:	bl	0 <grub_error>
 4e0:	mov	x10, #0x0                   	// #0
 4e4:	ldr	w0, [x21]
 4e8:	cbnz	w0, 5dc <grub_mod_init-0x81c>
 4ec:	mov	w2, w27
 4f0:	cmp	x22, x28
 4f4:	b.ne	510 <grub_mod_init-0x8e8>  // b.any
 4f8:	ldr	w0, [x24, #48]
 4fc:	ldr	x1, [sp, #120]
 500:	rev	w0, w0
 504:	sub	w2, w0, #0x1
 508:	ands	x2, x2, x1
 50c:	csel	x2, x0, x2, eq  // eq = none
 510:	ldr	w0, [x24, #1520]
 514:	mov	w23, #0x0                   	// #0
 518:	lsr	x0, x19, x0
 51c:	cmp	x0, x28
 520:	b.eq	5a4 <grub_mod_init-0x854>  // b.none
 524:	cbz	x10, 5b8 <grub_mod_init-0x840>
 528:	ldr	x0, [x24, #1376]
 52c:	mov	x3, x2
 530:	ldr	x5, [sp, #104]
 534:	mov	x4, x25
 538:	ldr	w1, [x24, #100]
 53c:	sxtw	x2, w23
 540:	str	x5, [x0, #48]
 544:	ldr	x5, [sp, #112]
 548:	rev	w1, w1
 54c:	str	x5, [x0, #56]
 550:	lsl	x1, x10, x1
 554:	bl	0 <grub_disk_read>
 558:	ldr	x1, [x24, #1376]
 55c:	ldr	w0, [x21]
 560:	str	xzr, [x1, #48]
 564:	cbnz	w0, 5dc <grub_mod_init-0x81c>
 568:	ldr	w8, [x24, #48]
 56c:	add	x28, x28, #0x1
 570:	cmp	x20, x28
 574:	rev	w27, w8
 578:	sub	w0, w27, w23
 57c:	add	x25, x25, x0
 580:	b.ne	480 <grub_mod_init-0x978>  // b.any
 584:	ldp	x21, x22, [sp, #32]
 588:	ldp	x19, x20, [sp, #16]
 58c:	ldp	x23, x24, [sp, #48]
 590:	ldp	x25, x26, [sp, #64]
 594:	ldp	x27, x28, [sp, #80]
 598:	ldr	x0, [sp, #152]
 59c:	ldp	x29, x30, [sp], #176
 5a0:	ret
 5a4:	sub	w8, w27, #0x1
 5a8:	and	x8, x8, x19
 5ac:	mov	w23, w8
 5b0:	sub	x2, x2, w8, sxtw
 5b4:	cbnz	x10, 528 <grub_mod_init-0x8d0>
 5b8:	mov	x0, x25
 5bc:	mov	w1, #0x0                   	// #0
 5c0:	bl	0 <grub_memset>
 5c4:	b	568 <grub_mod_init-0x890>
 5c8:	add	x0, x24, #0x590
 5cc:	ldr	w10, [x0, x28, lsl #2]
 5d0:	ldr	w0, [x21]
 5d4:	rev	w10, w10
 5d8:	cbz	w0, 4ec <grub_mod_init-0x90c>
 5dc:	mov	x0, #0xffffffffffffffff    	// #-1
 5e0:	ldp	x19, x20, [sp, #16]
 5e4:	ldp	x21, x22, [sp, #32]
 5e8:	ldp	x23, x24, [sp, #48]
 5ec:	ldp	x25, x26, [sp, #64]
 5f0:	ldp	x27, x28, [sp, #80]
 5f4:	ldp	x29, x30, [sp], #176
 5f8:	ret
 5fc:	lsr	x2, x12, x1
 600:	ldr	w1, [x24, #1480]
 604:	ldr	x0, [x24, #1376]
 608:	rev	w1, w1
 60c:	lsl	x2, x2, #2
 610:	add	x4, sp, #0xac
 614:	mov	x3, #0x4                   	// #4
 618:	lsl	x1, x1, x23
 61c:	str	x12, [sp, #128]
 620:	str	w10, [sp, #136]
 624:	str	w9, [sp, #148]
 628:	bl	0 <grub_disk_read>
 62c:	ldr	w9, [sp, #148]
 630:	add	x4, sp, #0xac
 634:	ldr	x12, [sp, #128]
 638:	sub	w9, w9, #0x1
 63c:	ldr	w10, [sp, #136]
 640:	mov	x3, #0x4                   	// #4
 644:	ldr	w1, [sp, #172]
 648:	sxtw	x9, w9
 64c:	ldr	x0, [x24, #1376]
 650:	lsr	x2, x12, x10
 654:	rev	w1, w1
 658:	and	x2, x2, x9
 65c:	stp	x9, x12, [sp, #128]
 660:	lsl	x2, x2, #2
 664:	lsl	x1, x1, x23
 668:	bl	0 <grub_disk_read>
 66c:	ldp	x9, x12, [sp, #128]
 670:	add	x4, sp, #0xac
 674:	ldr	w1, [sp, #172]
 678:	mov	x3, #0x4                   	// #4
 67c:	ldr	x0, [x24, #1376]
 680:	rev	w1, w1
 684:	and	x12, x12, x9
 688:	lsl	x1, x1, x23
 68c:	lsl	x2, x12, #2
 690:	bl	0 <grub_disk_read>
 694:	ldr	w10, [sp, #172]
 698:	b	4e4 <grub_mod_init-0x914>
 69c:	ldr	w1, [x24, #1472]
 6a0:	lsl	x2, x28, #2
 6a4:	ldr	x0, [x24, #1376]
 6a8:	rev	w1, w1
 6ac:	sub	x2, x2, #0x30
 6b0:	add	x4, sp, #0xac
 6b4:	mov	x3, #0x4                   	// #4
 6b8:	lsl	x1, x1, x23
 6bc:	bl	0 <grub_disk_read>
 6c0:	ldr	w10, [sp, #172]
 6c4:	b	4e4 <grub_mod_init-0x914>
 6c8:	ldr	w1, [x24, #1476]
 6cc:	lsr	x2, x12, x10
 6d0:	ldr	x0, [x24, #1376]
 6d4:	rev	w1, w1
 6d8:	lsl	x2, x2, #2
 6dc:	add	x4, sp, #0xac
 6e0:	mov	x3, #0x4                   	// #4
 6e4:	lsl	x1, x1, x23
 6e8:	str	x12, [sp, #128]
 6ec:	str	w9, [sp, #136]
 6f0:	bl	0 <grub_disk_read>
 6f4:	ldr	w9, [sp, #136]
 6f8:	add	x4, sp, #0xac
 6fc:	ldr	x12, [sp, #128]
 700:	sub	w2, w9, #0x1
 704:	ldr	w1, [sp, #172]
 708:	mov	x3, #0x4                   	// #4
 70c:	ldr	x0, [x24, #1376]
 710:	sxtw	x2, w2
 714:	and	x2, x2, x12
 718:	rev	w1, w1
 71c:	lsl	x2, x2, #2
 720:	lsl	x1, x1, x23
 724:	bl	0 <grub_disk_read>
 728:	ldr	w10, [sp, #172]
 72c:	b	4e4 <grub_mod_init-0x914>
	...
 740:	mov	x6, x0
 744:	mov	x5, x1
 748:	ldr	x3, [x0, #24]
 74c:	mov	x4, x2
 750:	ldp	x0, x1, [x0, #80]
 754:	ldr	x2, [x6, #96]
 758:	b	3f0 <grub_mod_init-0xa08>
 75c:	nop
 760:	stp	x29, x30, [sp, #-112]!
 764:	mov	x29, sp
 768:	stp	x25, x26, [sp, #64]
 76c:	mov	x25, x1
 770:	stp	x27, x28, [sp, #80]
 774:	mov	x28, x0
 778:	mov	x0, x1
 77c:	bl	0 <grub_strlen>
 780:	add	x0, x0, #0x2
 784:	bl	0 <grub_malloc>
 788:	cbz	x0, 908 <grub_mod_init-0x4f0>
 78c:	stp	x21, x22, [sp, #32]
 790:	mov	x22, x0
 794:	adrp	x26, 0 <grub_mod_init-0xdf8>
 798:	stp	x23, x24, [sp, #48]
 79c:	mov	x23, x25
 7a0:	mov	w27, #0x2                   	// #2
 7a4:	stp	x19, x20, [sp, #16]
 7a8:	ldrb	w0, [x23]
 7ac:	cmp	w0, #0x2f
 7b0:	b.ne	7c4 <grub_mod_init-0x634>  // b.any
 7b4:	nop
 7b8:	ldrb	w0, [x23, #1]!
 7bc:	cmp	w0, #0x2f
 7c0:	b.eq	7b8 <grub_mod_init-0x640>  // b.none
 7c4:	cbz	w0, a20 <grub_mod_init-0x3d8>
 7c8:	ldrh	w0, [x28, #1384]
 7cc:	lsl	w0, w0, #8
 7d0:	and	w0, w0, #0xe000
 7d4:	cmp	w0, #0x4, lsl #12
 7d8:	b.ne	a04 <grub_mod_init-0x3f4>  // b.any
 7dc:	ldrb	w0, [x23]
 7e0:	mov	x24, x23
 7e4:	cmp	w0, #0x2f
 7e8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 7ec:	b.eq	800 <grub_mod_init-0x5f8>  // b.none
 7f0:	ldrb	w0, [x24, #1]!
 7f4:	cmp	w0, #0x2f
 7f8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 7fc:	b.ne	7f0 <grub_mod_init-0x608>  // b.any
 800:	ldr	x0, [x28, #1392]
 804:	cbz	x0, 8e8 <grub_mod_init-0x510>
 808:	sub	x21, x24, x23
 80c:	mov	w20, #0x0                   	// #0
 810:	mov	x19, #0x0                   	// #0
 814:	b	898 <grub_mod_init-0x560>
 818:	ldrh	w4, [sp, #110]
 81c:	add	x3, x19, #0x8
 820:	mov	x5, x22
 824:	mov	x0, x28
 828:	mov	x2, #0x0                   	// #0
 82c:	mov	x1, #0x0                   	// #0
 830:	lsr	w19, w4, #8
 834:	orr	w4, w19, w4, lsl #8
 838:	and	x19, x4, #0xffff
 83c:	cmp	x19, x21
 840:	b.lt	874 <grub_mod_init-0x584>  // b.tstop
 844:	cinc	x4, x21, ne  // ne = any
 848:	bl	3f0 <grub_mod_init-0xa08>
 84c:	tbnz	x0, #63, 8b8 <grub_mod_init-0x540>
 850:	mov	x2, x21
 854:	mov	x1, x22
 858:	mov	x0, x23
 85c:	bl	0 <grub_strncmp>
 860:	cbnz	w0, 874 <grub_mod_init-0x584>
 864:	cmp	x19, x21
 868:	b.eq	924 <grub_mod_init-0x4d4>  // b.none
 86c:	ldrb	w0, [x22, x21]
 870:	cbz	w0, 924 <grub_mod_init-0x4d4>
 874:	ldrh	w1, [sp, #108]
 878:	ldr	x2, [x28, #1392]
 87c:	lsr	w0, w1, #8
 880:	orr	w1, w0, w1, lsl #8
 884:	rev	x2, x2
 888:	add	w19, w20, w1, uxth
 88c:	mov	x20, x19
 890:	cmp	x2, w19, uxtw
 894:	b.ls	8e8 <grub_mod_init-0x510>  // b.plast
 898:	add	x5, sp, #0x68
 89c:	mov	x3, x19
 8a0:	mov	x0, x28
 8a4:	mov	x4, #0x8                   	// #8
 8a8:	mov	x2, #0x0                   	// #0
 8ac:	mov	x1, #0x0                   	// #0
 8b0:	bl	3f0 <grub_mod_init-0xa08>
 8b4:	tbz	x0, #63, 818 <grub_mod_init-0x5e0>
 8b8:	adrp	x0, 0 <grub_mod_init-0xdf8>
 8bc:	ldr	x19, [x0]
 8c0:	mov	x0, x22
 8c4:	bl	0 <grub_free>
 8c8:	ldr	w0, [x19]
 8cc:	ldp	x19, x20, [sp, #16]
 8d0:	ldp	x21, x22, [sp, #32]
 8d4:	ldp	x23, x24, [sp, #48]
 8d8:	ldp	x25, x26, [sp, #64]
 8dc:	ldp	x27, x28, [sp, #80]
 8e0:	ldp	x29, x30, [sp], #112
 8e4:	ret
 8e8:	adrp	x1, 0 <grub_mod_init-0xdf8>
 8ec:	mov	x2, x25
 8f0:	mov	w0, #0x5                   	// #5
 8f4:	ldr	x1, [x1]
 8f8:	bl	0 <grub_error>
 8fc:	adrp	x0, 0 <grub_mod_init-0xdf8>
 900:	ldr	x19, [x0]
 904:	b	8c0 <grub_mod_init-0x538>
 908:	adrp	x0, 0 <grub_mod_init-0xdf8>
 90c:	ldp	x25, x26, [sp, #64]
 910:	ldr	x0, [x0]
 914:	ldp	x27, x28, [sp, #80]
 918:	ldr	w0, [x0]
 91c:	ldp	x29, x30, [sp], #112
 920:	ret
 924:	ldr	w1, [sp, #104]
 928:	mov	x0, x28
 92c:	ldr	w19, [x28, #1512]
 930:	mov	x2, #0x0                   	// #0
 934:	rev	w1, w1
 938:	bl	210 <grub_mod_init-0xbe8>
 93c:	ldrh	w0, [x28, #1384]
 940:	lsl	w0, w0, #8
 944:	and	w0, w0, #0xe000
 948:	cmp	w0, #0xa, lsl #12
 94c:	b.eq	958 <grub_mod_init-0x4a0>  // b.none
 950:	mov	x23, x24
 954:	b	7a8 <grub_mod_init-0x650>
 958:	ldr	w0, [x28, #1516]
 95c:	ldr	x21, [x28, #1392]
 960:	add	w0, w0, #0x1
 964:	str	w0, [x28, #1516]
 968:	cmp	w0, #0x8
 96c:	b.gt	a3c <grub_mod_init-0x3bc>
 970:	rev	x21, x21
 974:	add	x0, x21, #0x1
 978:	bl	0 <grub_malloc>
 97c:	mov	x20, x0
 980:	cbz	x0, 9f0 <grub_mod_init-0x408>
 984:	ldr	w1, [x28, #1488]
 988:	cbnz	w1, 99c <grub_mod_init-0x45c>
 98c:	ldr	x1, [x28, #1392]
 990:	rev	x1, x1
 994:	cmp	x1, #0x3c
 998:	b.ls	a50 <grub_mod_init-0x3a8>  // b.plast
 99c:	mov	x5, x20
 9a0:	mov	x4, x21
 9a4:	mov	x0, x28
 9a8:	mov	x3, #0x0                   	// #0
 9ac:	mov	x2, #0x0                   	// #0
 9b0:	mov	x1, #0x0                   	// #0
 9b4:	bl	3f0 <grub_mod_init-0xa08>
 9b8:	tbnz	x0, #63, 9e8 <grub_mod_init-0x410>
 9bc:	strb	wzr, [x20, x21]
 9c0:	mov	x0, x28
 9c4:	mov	x2, #0x0                   	// #0
 9c8:	ldrb	w1, [x20]
 9cc:	cmp	w1, #0x2f
 9d0:	csel	w1, w19, w27, ne  // ne = any
 9d4:	bl	210 <grub_mod_init-0xbe8>
 9d8:	cbnz	w0, 9e8 <grub_mod_init-0x410>
 9dc:	mov	x1, x20
 9e0:	mov	x0, x28
 9e4:	bl	760 <grub_mod_init-0x698>
 9e8:	mov	x0, x20
 9ec:	bl	0 <grub_free>
 9f0:	ldr	x19, [x26]
 9f4:	ldr	w0, [x19]
 9f8:	cbnz	w0, 8c0 <grub_mod_init-0x538>
 9fc:	mov	x23, x24
 a00:	b	7a8 <grub_mod_init-0x650>
 a04:	adrp	x1, 0 <grub_mod_init-0xdf8>
 a08:	mov	w0, #0x4                   	// #4
 a0c:	ldr	x1, [x1]
 a10:	bl	0 <grub_error>
 a14:	adrp	x0, 0 <grub_mod_init-0xdf8>
 a18:	ldr	x19, [x0]
 a1c:	b	8c0 <grub_mod_init-0x538>
 a20:	mov	x0, x22
 a24:	bl	0 <grub_free>
 a28:	mov	w0, #0x0                   	// #0
 a2c:	ldp	x19, x20, [sp, #16]
 a30:	ldp	x21, x22, [sp, #32]
 a34:	ldp	x23, x24, [sp, #48]
 a38:	b	8d8 <grub_mod_init-0x520>
 a3c:	adrp	x1, 0 <grub_mod_init-0xdf8>
 a40:	mov	w0, #0x19                  	// #25
 a44:	ldr	x1, [x1]
 a48:	bl	0 <grub_error>
 a4c:	b	9f0 <grub_mod_init-0x408>
 a50:	add	x1, x28, #0x590
 a54:	bl	0 <grub_strcpy>
 a58:	b	9bc <grub_mod_init-0x43c>
 a5c:	nop
	...
 a80:	stp	x29, x30, [sp, #-48]!
 a84:	mov	x29, sp
 a88:	stp	x21, x22, [sp, #32]
 a8c:	mov	x21, x0
 a90:	ldr	x0, [x0, #8]
 a94:	stp	x19, x20, [sp, #16]
 a98:	mov	x20, x1
 a9c:	ldr	x0, [x0]
 aa0:	bl	20 <grub_mod_init-0xdd8>
 aa4:	cbz	x0, b00 <grub_mod_init-0x2f8>
 aa8:	mov	x19, x0
 aac:	mov	x2, #0x0                   	// #0
 ab0:	mov	w1, #0x2                   	// #2
 ab4:	bl	210 <grub_mod_init-0xbe8>
 ab8:	adrp	x0, 0 <grub_mod_init-0xdf8>
 abc:	ldr	x22, [x0]
 ac0:	ldr	w0, [x22]
 ac4:	cbnz	w0, b1c <grub_mod_init-0x2dc>
 ac8:	cbz	x20, ad8 <grub_mod_init-0x320>
 acc:	ldrb	w0, [x20]
 ad0:	cmp	w0, #0x2f
 ad4:	b.eq	b38 <grub_mod_init-0x2c0>  // b.none
 ad8:	adrp	x1, 0 <grub_mod_init-0xdf8>
 adc:	mov	x2, x20
 ae0:	mov	w0, #0x7                   	// #7
 ae4:	ldr	x1, [x1]
 ae8:	bl	0 <grub_error>
 aec:	ldr	w0, [x22]
 af0:	ldp	x19, x20, [sp, #16]
 af4:	ldp	x21, x22, [sp, #32]
 af8:	ldp	x29, x30, [sp], #48
 afc:	ret
 b00:	adrp	x0, 0 <grub_mod_init-0xdf8>
 b04:	ldp	x19, x20, [sp, #16]
 b08:	ldr	x0, [x0]
 b0c:	ldp	x21, x22, [sp, #32]
 b10:	ldr	w0, [x0]
 b14:	ldp	x29, x30, [sp], #48
 b18:	ret
 b1c:	mov	x0, x19
 b20:	bl	0 <grub_free>
 b24:	ldr	w0, [x22]
 b28:	ldp	x19, x20, [sp, #16]
 b2c:	ldp	x21, x22, [sp, #32]
 b30:	ldp	x29, x30, [sp], #48
 b34:	ret
 b38:	mov	x1, x20
 b3c:	mov	x0, x19
 b40:	bl	760 <grub_mod_init-0x698>
 b44:	ldr	w0, [x22]
 b48:	cbnz	w0, b1c <grub_mod_init-0x2dc>
 b4c:	ldr	x1, [x19, #1392]
 b50:	str	x19, [x21, #80]
 b54:	ldp	x19, x20, [sp, #16]
 b58:	rev	x1, x1
 b5c:	str	x1, [x21, #64]
 b60:	ldp	x21, x22, [sp, #32]
 b64:	ldp	x29, x30, [sp], #48
 b68:	ret
 b6c:	nop
	...
 b80:	stp	x29, x30, [sp, #-240]!
 b84:	mov	x29, sp
 b88:	ldr	x0, [x0]
 b8c:	stp	x19, x20, [sp, #16]
 b90:	mov	x20, x1
 b94:	stp	x21, x22, [sp, #32]
 b98:	mov	x21, x2
 b9c:	mov	x22, x3
 ba0:	bl	20 <grub_mod_init-0xdd8>
 ba4:	cbz	x0, c1c <grub_mod_init-0x1dc>
 ba8:	mov	x19, x0
 bac:	mov	x2, #0x0                   	// #0
 bb0:	mov	w1, #0x2                   	// #2
 bb4:	stp	x23, x24, [sp, #48]
 bb8:	bl	210 <grub_mod_init-0xbe8>
 bbc:	adrp	x0, 0 <grub_mod_init-0xdf8>
 bc0:	ldr	x24, [x0]
 bc4:	ldr	w0, [x24]
 bc8:	cbnz	w0, c08 <grub_mod_init-0x1f0>
 bcc:	cbz	x20, bdc <grub_mod_init-0x21c>
 bd0:	ldrb	w0, [x20]
 bd4:	cmp	w0, #0x2f
 bd8:	b.eq	c38 <grub_mod_init-0x1c0>  // b.none
 bdc:	adrp	x1, 0 <grub_mod_init-0xdf8>
 be0:	mov	x2, x20
 be4:	mov	w0, #0x7                   	// #7
 be8:	ldr	x1, [x1]
 bec:	bl	0 <grub_error>
 bf0:	ldr	w0, [x24]
 bf4:	ldp	x19, x20, [sp, #16]
 bf8:	ldp	x21, x22, [sp, #32]
 bfc:	ldp	x23, x24, [sp, #48]
 c00:	ldp	x29, x30, [sp], #240
 c04:	ret
 c08:	ldp	x19, x20, [sp, #16]
 c0c:	ldp	x21, x22, [sp, #32]
 c10:	ldp	x23, x24, [sp, #48]
 c14:	ldp	x29, x30, [sp], #240
 c18:	ret
 c1c:	adrp	x0, 0 <grub_mod_init-0xdf8>
 c20:	ldp	x19, x20, [sp, #16]
 c24:	ldr	x0, [x0]
 c28:	ldp	x21, x22, [sp, #32]
 c2c:	ldr	w0, [x0]
 c30:	ldp	x29, x30, [sp], #240
 c34:	ret
 c38:	mov	x1, x20
 c3c:	mov	x0, x19
 c40:	bl	760 <grub_mod_init-0x698>
 c44:	ldr	w23, [x24]
 c48:	cbnz	w23, d8c <grub_mod_init-0x6c>
 c4c:	ldrh	w0, [x19, #1384]
 c50:	lsl	w0, w0, #8
 c54:	and	w0, w0, #0xe000
 c58:	cmp	w0, #0x4, lsl #12
 c5c:	b.ne	dac <grub_mod_init-0x4c>  // b.any
 c60:	ldr	x0, [x19, #1392]
 c64:	cbz	x0, d8c <grub_mod_init-0x6c>
 c68:	stp	x25, x26, [sp, #64]
 c6c:	mov	x25, #0x0                   	// #0
 c70:	b	d68 <grub_mod_init-0x90>
 c74:	ldrh	w0, [sp, #92]
 c78:	cbz	w0, d88 <grub_mod_init-0x70>
 c7c:	ldrh	w4, [sp, #94]
 c80:	lsr	w0, w4, #8
 c84:	orr	w4, w0, w4, lsl #8
 c88:	and	w4, w4, #0xffff
 c8c:	add	w0, w4, #0x1
 c90:	and	x20, x4, #0xffff
 c94:	sxtw	x0, w0
 c98:	bl	0 <grub_malloc>
 c9c:	mov	x2, #0x10                  	// #16
 ca0:	mov	x26, x0
 ca4:	mov	w1, #0x0                   	// #0
 ca8:	add	x0, sp, #0x60
 cac:	cbz	x26, d88 <grub_mod_init-0x70>
 cb0:	bl	0 <grub_memset>
 cb4:	mov	x2, #0x0                   	// #0
 cb8:	mov	x1, #0x0                   	// #0
 cbc:	add	x3, x25, #0x8
 cc0:	mov	x5, x26
 cc4:	mov	x4, x20
 cc8:	mov	x0, x19
 ccc:	bl	3f0 <grub_mod_init-0xa08>
 cd0:	mov	x1, x0
 cd4:	add	x2, sp, #0x70
 cd8:	mov	x0, x19
 cdc:	tbnz	x1, #63, dc0 <grub_mod_init-0x38>
 ce0:	strb	wzr, [x26, x20]
 ce4:	ldr	w1, [sp, #88]
 ce8:	rev	w1, w1
 cec:	bl	210 <grub_mod_init-0xbe8>
 cf0:	ldrh	w4, [sp, #112]
 cf4:	add	x1, sp, #0x60
 cf8:	ldrb	w3, [sp, #96]
 cfc:	mov	x2, x22
 d00:	ldr	w6, [sp, #136]
 d04:	mov	x0, x26
 d08:	lsl	w4, w4, #8
 d0c:	and	w5, w3, #0xfffffffc
 d10:	and	w4, w4, #0xe000
 d14:	rev	w3, w6
 d18:	cmp	w4, #0x4, lsl #12
 d1c:	str	w3, [sp, #100]
 d20:	cset	w3, eq  // eq = none
 d24:	orr	w3, w3, #0x2
 d28:	orr	w3, w3, w5
 d2c:	strb	w3, [sp, #96]
 d30:	blr	x21
 d34:	mov	w1, w0
 d38:	mov	x0, x26
 d3c:	cbnz	w1, dd0 <grub_mod_init-0x28>
 d40:	bl	0 <grub_free>
 d44:	ldrh	w0, [sp, #92]
 d48:	ldr	x1, [x19, #1392]
 d4c:	lsr	w2, w0, #8
 d50:	orr	w0, w2, w0, lsl #8
 d54:	rev	x1, x1
 d58:	add	w25, w23, w0, uxth
 d5c:	mov	x23, x25
 d60:	cmp	x1, w25, uxtw
 d64:	b.ls	d88 <grub_mod_init-0x70>  // b.plast
 d68:	add	x5, sp, #0x58
 d6c:	mov	x3, x25
 d70:	mov	x0, x19
 d74:	mov	x4, #0x8                   	// #8
 d78:	mov	x2, #0x0                   	// #0
 d7c:	mov	x1, #0x0                   	// #0
 d80:	bl	3f0 <grub_mod_init-0xa08>
 d84:	tbz	x0, #63, c74 <grub_mod_init-0x184>
 d88:	ldp	x25, x26, [sp, #64]
 d8c:	mov	x0, x19
 d90:	bl	0 <grub_free>
 d94:	ldr	w0, [x24]
 d98:	ldp	x19, x20, [sp, #16]
 d9c:	ldp	x21, x22, [sp, #32]
 da0:	ldp	x23, x24, [sp, #48]
 da4:	ldp	x29, x30, [sp], #240
 da8:	ret
 dac:	adrp	x1, 0 <grub_mod_init-0xdf8>
 db0:	mov	w0, #0x4                   	// #4
 db4:	ldr	x1, [x1]
 db8:	bl	0 <grub_error>
 dbc:	b	d8c <grub_mod_init-0x6c>
 dc0:	mov	x0, x26
 dc4:	bl	0 <grub_free>
 dc8:	ldp	x25, x26, [sp, #64]
 dcc:	b	d8c <grub_mod_init-0x6c>
 dd0:	bl	0 <grub_free>
 dd4:	ldp	x25, x26, [sp, #64]
 dd8:	b	d8c <grub_mod_init-0x6c>
 ddc:	nop
	...

0000000000000df8 <grub_mod_init>:
 df8:	stp	x29, x30, [sp, #-32]!
 dfc:	adrp	x2, 0 <grub_mod_init-0xdf8>
 e00:	adrp	x1, 0 <grub_mod_init-0xdf8>
 e04:	mov	x29, sp
 e08:	str	x19, [sp, #16]
 e0c:	mov	x19, x0
 e10:	ldr	x0, [x2]
 e14:	ldr	x1, [x1]
 e18:	add	x1, x1, #0x18
 e1c:	bl	0 <grub_list_push>
 e20:	adrp	x0, 0 <grub_mod_init-0xdf8>
 e24:	ldr	x0, [x0]
 e28:	str	x19, [x0]
 e2c:	ldr	x19, [sp, #16]
 e30:	ldp	x29, x30, [sp], #32
 e34:	ret
	...

0000000000000e50 <grub_mod_fini>:
 e50:	adrp	x0, 0 <grub_mod_init-0xdf8>
 e54:	ldr	x0, [x0]
 e58:	add	x0, x0, #0x18
 e5c:	b	0 <grub_list_remove>
	...
