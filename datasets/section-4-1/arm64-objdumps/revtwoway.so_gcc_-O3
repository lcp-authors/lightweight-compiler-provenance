
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//revtwoway.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000630 <.init>:
 630:	stp	x29, x30, [sp, #-16]!
 634:	mov	x29, sp
 638:	bl	6e0 <fprintf@plt+0x10>
 63c:	ldp	x29, x30, [sp], #16
 640:	ret

Disassembly of section .plt:

0000000000000650 <exit@plt-0x20>:
 650:	stp	x16, x30, [sp, #-16]!
 654:	adrp	x16, 11000 <dl_load@@Base+0x10250>
 658:	ldr	x17, [x16, #4088]
 65c:	add	x16, x16, #0xff8
 660:	br	x17
 664:	nop
 668:	nop
 66c:	nop

0000000000000670 <exit@plt>:
 670:	adrp	x16, 12000 <exit@GLIBC_2.17>
 674:	ldr	x17, [x16]
 678:	add	x16, x16, #0x0
 67c:	br	x17

0000000000000680 <__cxa_finalize@plt>:
 680:	adrp	x16, 12000 <exit@GLIBC_2.17>
 684:	ldr	x17, [x16, #8]
 688:	add	x16, x16, #0x8
 68c:	br	x17

0000000000000690 <__gmon_start__@plt>:
 690:	adrp	x16, 12000 <exit@GLIBC_2.17>
 694:	ldr	x17, [x16, #16]
 698:	add	x16, x16, #0x10
 69c:	br	x17

00000000000006a0 <strcmp@plt>:
 6a0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #24]
 6a8:	add	x16, x16, #0x18
 6ac:	br	x17

00000000000006b0 <fwrite@plt>:
 6b0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #32]
 6b8:	add	x16, x16, #0x20
 6bc:	br	x17

00000000000006c0 <getdtablesize@plt>:
 6c0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #40]
 6c8:	add	x16, x16, #0x28
 6cc:	br	x17

00000000000006d0 <fprintf@plt>:
 6d0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #48]
 6d8:	add	x16, x16, #0x30
 6dc:	br	x17

Disassembly of section .text:

00000000000006e0 <dl_load@@Base-0x6d0>:
 6e0:	adrp	x0, 11000 <dl_load@@Base+0x10250>
 6e4:	ldr	x0, [x0, #4056]
 6e8:	cbz	x0, 6f0 <fprintf@plt+0x20>
 6ec:	b	690 <__gmon_start__@plt>
 6f0:	ret
 6f4:	nop
 6f8:	adrp	x0, 12000 <dl_load@@Base+0x11250>
 6fc:	add	x0, x0, #0x60
 700:	adrp	x1, 12000 <dl_load@@Base+0x11250>
 704:	add	x1, x1, #0x60
 708:	cmp	x1, x0
 70c:	b.eq	724 <fprintf@plt+0x54>  // b.none
 710:	adrp	x1, 11000 <dl_load@@Base+0x10250>
 714:	ldr	x1, [x1, #4032]
 718:	cbz	x1, 724 <fprintf@plt+0x54>
 71c:	mov	x16, x1
 720:	br	x16
 724:	ret
 728:	adrp	x0, 12000 <dl_load@@Base+0x11250>
 72c:	add	x0, x0, #0x60
 730:	adrp	x1, 12000 <dl_load@@Base+0x11250>
 734:	add	x1, x1, #0x60
 738:	sub	x1, x1, x0
 73c:	lsr	x2, x1, #63
 740:	add	x1, x2, x1, asr #3
 744:	cmp	xzr, x1, asr #1
 748:	asr	x1, x1, #1
 74c:	b.eq	764 <fprintf@plt+0x94>  // b.none
 750:	adrp	x2, 11000 <dl_load@@Base+0x10250>
 754:	ldr	x2, [x2, #4064]
 758:	cbz	x2, 764 <fprintf@plt+0x94>
 75c:	mov	x16, x2
 760:	br	x16
 764:	ret
 768:	stp	x29, x30, [sp, #-32]!
 76c:	mov	x29, sp
 770:	str	x19, [sp, #16]
 774:	adrp	x19, 12000 <dl_load@@Base+0x11250>
 778:	ldrb	w0, [x19, #96]
 77c:	cbnz	w0, 7a4 <fprintf@plt+0xd4>
 780:	adrp	x0, 11000 <dl_load@@Base+0x10250>
 784:	ldr	x0, [x0, #4040]
 788:	cbz	x0, 798 <fprintf@plt+0xc8>
 78c:	adrp	x0, 12000 <dl_load@@Base+0x11250>
 790:	ldr	x0, [x0, #56]
 794:	bl	680 <__cxa_finalize@plt>
 798:	bl	6f8 <fprintf@plt+0x28>
 79c:	mov	w0, #0x1                   	// #1
 7a0:	strb	w0, [x19, #96]
 7a4:	ldr	x19, [sp, #16]
 7a8:	ldp	x29, x30, [sp], #32
 7ac:	ret
 7b0:	b	728 <fprintf@plt+0x58>
 7b4:	nop
 7b8:	cmp	x0, #0x0
 7bc:	mov	x2, x0
 7c0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
 7c4:	b.eq	844 <fprintf@plt+0x174>  // b.none
 7c8:	ldr	x5, [x1, #16]
 7cc:	cbz	x5, 844 <fprintf@plt+0x174>
 7d0:	ldr	x1, [x5, #8]
 7d4:	mov	w0, #0x0                   	// #0
 7d8:	cbz	x1, 800 <fprintf@plt+0x130>
 7dc:	ldr	x6, [x5, #16]
 7e0:	str	x6, [x2]
 7e4:	str	xzr, [x5, #8]
 7e8:	mov	w0, w1
 7ec:	str	xzr, [x4]
 7f0:	add	x2, x6, w1, sxtw
 7f4:	ldurb	w2, [x2, #-1]
 7f8:	cmp	w2, #0xa
 7fc:	b.eq	804 <fprintf@plt+0x134>  // b.none
 800:	ret
 804:	sub	w1, w1, #0x1
 808:	sub	x8, x6, #0x1
 80c:	mov	x2, #0x1                   	// #1
 810:	sxtw	x1, w1
 814:	nop
 818:	str	x2, [x4]
 81c:	mov	w0, w1
 820:	mov	x7, x1
 824:	add	x2, x2, #0x1
 828:	ldrb	w5, [x8, x1]
 82c:	sub	x1, x1, #0x1
 830:	cmp	w5, #0xa
 834:	b.eq	818 <fprintf@plt+0x148>  // b.none
 838:	add	x6, x6, x7
 83c:	str	x6, [x3]
 840:	ret
 844:	mov	w0, #0xffffffff            	// #-1
 848:	ret
 84c:	nop
 850:	stp	x29, x30, [sp, #-64]!
 854:	mov	x29, sp
 858:	stp	x19, x20, [sp, #16]
 85c:	cbz	x4, a9c <fprintf@plt+0x3cc>
 860:	stp	x21, x22, [sp, #32]
 864:	mov	x21, x4
 868:	mul	x19, x1, x2
 86c:	ldr	x4, [x4]
 870:	mov	x20, x0
 874:	ldr	x0, [x21, #16]
 878:	cmp	x4, x19
 87c:	b.cs	a40 <fprintf@plt+0x370>  // b.hs, b.nlast
 880:	adrp	x22, 12000 <dl_load@@Base+0x11250>
 884:	str	x23, [sp, #48]
 888:	add	x23, x22, #0x68
 88c:	ldr	x1, [x22, #104]
 890:	cbz	x0, a5c <fprintf@plt+0x38c>
 894:	ldr	x2, [x1, #296]
 898:	add	x1, x4, x19
 89c:	blr	x2
 8a0:	str	x0, [x21, #16]
 8a4:	cbz	x0, acc <fprintf@plt+0x3fc>
 8a8:	ldp	x1, x3, [x21]
 8ac:	ldr	x23, [sp, #48]
 8b0:	add	x1, x1, x19
 8b4:	str	x1, [x21]
 8b8:	sub	x5, x19, #0x1
 8bc:	add	x1, x0, x3
 8c0:	add	x2, x20, x5
 8c4:	cbz	x19, a24 <fprintf@plt+0x354>
 8c8:	add	x3, x19, x3
 8cc:	add	x4, x20, x19
 8d0:	add	x3, x0, x3
 8d4:	cmp	x20, x3
 8d8:	ccmp	x1, x4, #0x2, cc  // cc = lo, ul, last
 8dc:	ccmp	x5, #0xe, #0x0, cs  // cs = hs, nlast
 8e0:	b.ls	ab0 <fprintf@plt+0x3e0>  // b.plast
 8e4:	neg	x6, x19, lsr #4
 8e8:	adrp	x0, 1000 <dl_load@@Base+0x250>
 8ec:	sub	x3, x19, #0x10
 8f0:	lsl	x6, x6, #4
 8f4:	add	x3, x20, x3
 8f8:	ldr	q1, [x0, #96]
 8fc:	mov	x0, #0x0                   	// #0
 900:	ldr	q0, [x3, x0]
 904:	neg	x5, x0
 908:	sub	x0, x0, #0x10
 90c:	cmp	x0, x6
 910:	tbl	v0.16b, {v0.16b}, v1.16b
 914:	str	q0, [x1, x5]
 918:	b.ne	900 <fprintf@plt+0x230>  // b.any
 91c:	and	x4, x19, #0xfffffffffffffff0
 920:	and	x3, x19, #0xf
 924:	sub	x0, x2, x4
 928:	cmp	x19, x4
 92c:	add	x2, x1, x4
 930:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 934:	ldrb	w5, [x0]
 938:	cmp	x3, #0x1
 93c:	strb	w5, [x1, x4]
 940:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 944:	ldurb	w1, [x0, #-1]
 948:	cmp	x3, #0x2
 94c:	strb	w1, [x2, #1]
 950:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 954:	ldurb	w1, [x0, #-2]
 958:	cmp	x3, #0x3
 95c:	strb	w1, [x2, #2]
 960:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 964:	ldurb	w1, [x0, #-3]
 968:	cmp	x3, #0x4
 96c:	strb	w1, [x2, #3]
 970:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 974:	ldurb	w1, [x0, #-4]
 978:	cmp	x3, #0x5
 97c:	strb	w1, [x2, #4]
 980:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 984:	ldurb	w1, [x0, #-5]
 988:	cmp	x3, #0x6
 98c:	strb	w1, [x2, #5]
 990:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 994:	ldurb	w1, [x0, #-6]
 998:	cmp	x3, #0x7
 99c:	strb	w1, [x2, #6]
 9a0:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 9a4:	ldurb	w1, [x0, #-7]
 9a8:	cmp	x3, #0x8
 9ac:	strb	w1, [x2, #7]
 9b0:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 9b4:	ldurb	w1, [x0, #-8]
 9b8:	cmp	x3, #0x9
 9bc:	strb	w1, [x2, #8]
 9c0:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 9c4:	ldurb	w1, [x0, #-9]
 9c8:	cmp	x3, #0xa
 9cc:	strb	w1, [x2, #9]
 9d0:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 9d4:	ldurb	w1, [x0, #-10]
 9d8:	cmp	x3, #0xb
 9dc:	strb	w1, [x2, #10]
 9e0:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 9e4:	ldurb	w1, [x0, #-11]
 9e8:	cmp	x3, #0xc
 9ec:	strb	w1, [x2, #11]
 9f0:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 9f4:	ldurb	w1, [x0, #-12]
 9f8:	cmp	x3, #0xd
 9fc:	strb	w1, [x2, #12]
 a00:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 a04:	ldurb	w1, [x0, #-13]
 a08:	cmp	x3, #0xe
 a0c:	strb	w1, [x2, #13]
 a10:	b.eq	a20 <fprintf@plt+0x350>  // b.none
 a14:	ldurb	w0, [x0, #-14]
 a18:	strb	w0, [x2, #14]
 a1c:	nop
 a20:	ldr	x3, [x21, #8]
 a24:	add	x3, x19, x3
 a28:	str	x3, [x21, #8]
 a2c:	mov	x0, x19
 a30:	ldp	x19, x20, [sp, #16]
 a34:	ldp	x21, x22, [sp, #32]
 a38:	ldp	x29, x30, [sp], #64
 a3c:	ret
 a40:	ldr	x3, [x21, #8]
 a44:	cbz	x3, 8b8 <fprintf@plt+0x1e8>
 a48:	adrp	x22, 12000 <dl_load@@Base+0x11250>
 a4c:	str	x23, [sp, #48]
 a50:	add	x23, x22, #0x68
 a54:	ldr	x1, [x22, #104]
 a58:	cbnz	x0, 894 <fprintf@plt+0x1c4>
 a5c:	ldr	x1, [x1, #280]
 a60:	mov	x0, x19
 a64:	blr	x1
 a68:	str	x0, [x21, #16]
 a6c:	cbnz	x0, 8a8 <fprintf@plt+0x1d8>
 a70:	ldr	x1, [x22, #104]
 a74:	mov	x3, x19
 a78:	ldr	x0, [x23, #8]
 a7c:	adrp	x2, 0 <exit@plt-0x670>
 a80:	ldr	x4, [x1, #96]
 a84:	add	x2, x2, #0xef0
 a88:	adrp	x1, 0 <exit@plt-0x670>
 a8c:	add	x1, x1, #0xf00
 a90:	blr	x4
 a94:	ldr	x0, [x21, #16]
 a98:	b	8a8 <fprintf@plt+0x1d8>
 a9c:	mov	x19, #0x0                   	// #0
 aa0:	mov	x0, x19
 aa4:	ldp	x19, x20, [sp, #16]
 aa8:	ldp	x29, x30, [sp], #64
 aac:	ret
 ab0:	add	x3, x1, x19
 ab4:	nop
 ab8:	ldrb	w0, [x2], #-1
 abc:	strb	w0, [x1], #1
 ac0:	cmp	x1, x3
 ac4:	b.ne	ab8 <fprintf@plt+0x3e8>  // b.any
 ac8:	b	a20 <fprintf@plt+0x350>
 acc:	ldr	x1, [x22, #104]
 ad0:	adrp	x2, 0 <exit@plt-0x670>
 ad4:	ldr	x0, [x23, #8]
 ad8:	add	x2, x2, #0xef0
 adc:	ldr	x4, [x1, #96]
 ae0:	adrp	x1, 0 <exit@plt-0x670>
 ae4:	ldr	x3, [x21]
 ae8:	add	x1, x1, #0xf20
 aec:	add	x3, x19, x3
 af0:	blr	x4
 af4:	ldr	x0, [x21, #16]
 af8:	b	8a8 <fprintf@plt+0x1d8>
 afc:	nop
 b00:	mov	w0, #0x0                   	// #0
 b04:	ret
 b08:	stp	x29, x30, [sp, #-32]!
 b0c:	adrp	x0, 12000 <dl_load@@Base+0x11250>
 b10:	adrp	x1, 12000 <dl_load@@Base+0x11250>
 b14:	mov	x29, sp
 b18:	ldr	x2, [x0, #104]
 b1c:	add	x1, x1, #0x40
 b20:	ldr	x2, [x2, #72]
 b24:	str	x19, [sp, #16]
 b28:	add	x19, x0, #0x68
 b2c:	ldr	x0, [x19, #8]
 b30:	blr	x2
 b34:	bl	6c0 <getdtablesize@plt>
 b38:	sxtw	x1, w0
 b3c:	mov	w0, #0x1                   	// #1
 b40:	str	x1, [x19, #16]
 b44:	ldr	x19, [sp, #16]
 b48:	ldp	x29, x30, [sp], #32
 b4c:	ret
 b50:	cbz	x0, b78 <fprintf@plt+0x4a8>
 b54:	stp	x29, x30, [sp, #-16]!
 b58:	adrp	x1, 0 <exit@plt-0x670>
 b5c:	add	x1, x1, #0xf40
 b60:	mov	x29, sp
 b64:	bl	6a0 <strcmp@plt>
 b68:	cmp	w0, #0x0
 b6c:	cset	w0, eq  // eq = none
 b70:	ldp	x29, x30, [sp], #16
 b74:	ret
 b78:	mov	w0, #0x0                   	// #0
 b7c:	ret
 b80:	cbz	x0, bf4 <fprintf@plt+0x524>
 b84:	stp	x29, x30, [sp, #-48]!
 b88:	mov	x29, sp
 b8c:	stp	x19, x20, [sp, #16]
 b90:	mov	x19, x0
 b94:	ldr	x20, [x0, #16]
 b98:	cbz	x20, bdc <fprintf@plt+0x50c>
 b9c:	ldr	x0, [x20, #24]
 ba0:	cmp	x0, #0x1
 ba4:	b.hi	be8 <fprintf@plt+0x518>  // b.pmore
 ba8:	ldr	x0, [x20, #16]
 bac:	str	x21, [sp, #32]
 bb0:	adrp	x21, 12000 <dl_load@@Base+0x11250>
 bb4:	ldr	x1, [x21, #104]
 bb8:	ldr	x1, [x1, #304]
 bbc:	blr	x1
 bc0:	ldr	x1, [x21, #104]
 bc4:	mov	x0, x20
 bc8:	ldr	x1, [x1, #304]
 bcc:	blr	x1
 bd0:	ldr	x21, [sp, #32]
 bd4:	mov	w0, #0xffffffff            	// #-1
 bd8:	str	w0, [x19, #8]
 bdc:	ldp	x19, x20, [sp, #16]
 be0:	ldp	x29, x30, [sp], #48
 be4:	ret
 be8:	sub	x0, x0, #0x1
 bec:	str	x0, [x20, #24]
 bf0:	b	bd4 <fprintf@plt+0x504>
 bf4:	ret
 bf8:	cmp	x1, #0x0
 bfc:	ccmp	x2, #0x0, #0x4, ne  // ne = any
 c00:	b.eq	cd8 <fprintf@plt+0x608>  // b.none
 c04:	stp	x29, x30, [sp, #-64]!
 c08:	mov	x0, #0x20                  	// #32
 c0c:	mov	x29, sp
 c10:	stp	x21, x22, [sp, #32]
 c14:	adrp	x21, 12000 <dl_load@@Base+0x11250>
 c18:	stp	x19, x20, [sp, #16]
 c1c:	mov	x20, x1
 c20:	mov	x19, x2
 c24:	ldr	x1, [x21, #104]
 c28:	ldr	x1, [x1, #280]
 c2c:	str	x23, [sp, #48]
 c30:	add	x23, x21, #0x68
 c34:	blr	x1
 c38:	mov	x22, x0
 c3c:	cbz	x0, ce0 <fprintf@plt+0x610>
 c40:	add	x1, x21, #0x68
 c44:	mov	x0, #0x2                   	// #2
 c48:	stp	xzr, xzr, [x22]
 c4c:	ldr	x1, [x1, #16]
 c50:	stp	xzr, x0, [x22, #16]
 c54:	cmn	x1, #0x1
 c58:	b.eq	d20 <fprintf@plt+0x650>  // b.none
 c5c:	mov	w4, w1
 c60:	add	x21, x21, #0x68
 c64:	adrp	x3, 0 <exit@plt-0x670>
 c68:	adrp	x2, 0 <exit@plt-0x670>
 c6c:	add	x3, x3, #0x7b8
 c70:	add	x2, x2, #0xb80
 c74:	mov	w6, #0x1                   	// #1
 c78:	ldr	x23, [sp, #48]
 c7c:	str	w4, [x20, #8]
 c80:	stp	x22, x3, [x20, #16]
 c84:	adrp	x5, 0 <exit@plt-0x670>
 c88:	adrp	x4, 0 <exit@plt-0x670>
 c8c:	str	x2, [x20, #40]
 c90:	add	x5, x5, #0x850
 c94:	add	x4, x4, #0xb00
 c98:	adrp	x3, 0 <exit@plt-0x670>
 c9c:	adrp	x2, 0 <exit@plt-0x670>
 ca0:	add	x3, x3, #0xd30
 ca4:	add	x2, x2, #0xd38
 ca8:	str	x1, [x19, #16]
 cac:	str	w6, [x19, #24]
 cb0:	mov	w0, w6
 cb4:	stp	x22, x5, [x19, #32]
 cb8:	add	x7, x1, #0x1
 cbc:	stp	x4, x3, [x19, #48]
 cc0:	str	x2, [x19, #64]
 cc4:	str	x7, [x21, #16]
 cc8:	ldp	x19, x20, [sp, #16]
 ccc:	ldp	x21, x22, [sp, #32]
 cd0:	ldp	x29, x30, [sp], #64
 cd4:	ret
 cd8:	mov	w0, #0x0                   	// #0
 cdc:	ret
 ce0:	ldr	x1, [x21, #104]
 ce4:	adrp	x2, 0 <exit@plt-0x670>
 ce8:	ldr	x0, [x23, #8]
 cec:	add	x2, x2, #0xf50
 cf0:	ldr	x4, [x1, #96]
 cf4:	mov	x3, #0x20                  	// #32
 cf8:	adrp	x1, 0 <exit@plt-0x670>
 cfc:	add	x1, x1, #0xf00
 d00:	blr	x4
 d04:	stp	xzr, xzr, [x22]
 d08:	add	x1, x21, #0x68
 d0c:	mov	x0, #0x2                   	// #2
 d10:	stp	xzr, x0, [x22, #16]
 d14:	ldr	x1, [x1, #16]
 d18:	cmn	x1, #0x1
 d1c:	b.ne	c5c <fprintf@plt+0x58c>  // b.any
 d20:	bl	6c0 <getdtablesize@plt>
 d24:	sxtw	x1, w0
 d28:	mov	x4, x1
 d2c:	b	c60 <fprintf@plt+0x590>
 d30:	mov	w0, #0x0                   	// #0
 d34:	ret
 d38:	cbz	x1, da4 <fprintf@plt+0x6d4>
 d3c:	stp	x29, x30, [sp, #-32]!
 d40:	mov	x29, sp
 d44:	ldr	x0, [x1, #24]
 d48:	stp	x19, x20, [sp, #16]
 d4c:	mov	x19, x1
 d50:	cmp	x0, #0x1
 d54:	b.hi	d8c <fprintf@plt+0x6bc>  // b.pmore
 d58:	adrp	x20, 12000 <dl_load@@Base+0x11250>
 d5c:	ldr	x0, [x19, #16]
 d60:	ldr	x1, [x20, #104]
 d64:	ldr	x1, [x1, #304]
 d68:	blr	x1
 d6c:	ldr	x1, [x20, #104]
 d70:	mov	x0, x19
 d74:	ldr	x1, [x1, #304]
 d78:	blr	x1
 d7c:	mov	w0, #0x0                   	// #0
 d80:	ldp	x19, x20, [sp, #16]
 d84:	ldp	x29, x30, [sp], #32
 d88:	ret
 d8c:	sub	x1, x0, #0x1
 d90:	str	x1, [x19, #24]
 d94:	mov	w0, #0x0                   	// #0
 d98:	ldp	x19, x20, [sp, #16]
 d9c:	ldp	x29, x30, [sp], #32
 da0:	ret
 da4:	mov	w0, #0xffffffff            	// #-1
 da8:	ret
 dac:	nop

0000000000000db0 <dl_load@@Base>:
 db0:	stp	x29, x30, [sp, #-48]!
 db4:	mov	x3, x0
 db8:	mov	x29, sp
 dbc:	stp	x19, x20, [sp, #16]
 dc0:	adrp	x20, 12000 <dl_load@@Base+0x11250>
 dc4:	add	x19, x20, #0x68
 dc8:	str	x21, [sp, #32]
 dcc:	str	x0, [x20, #104]
 dd0:	mov	x0, x1
 dd4:	str	x1, [x19, #8]
 dd8:	ldr	w1, [x3]
 ddc:	cmp	w1, #0x2
 de0:	b.ne	e8c <dl_load@@Base+0xdc>  // b.any
 de4:	ldr	w1, [x3, #4]
 de8:	tbnz	w1, #31, e8c <dl_load@@Base+0xdc>
 dec:	ldr	x1, [x19, #24]
 df0:	add	x2, x19, #0x18
 df4:	cbz	x1, e84 <dl_load@@Base+0xd4>
 df8:	ldr	x3, [x3, #48]
 dfc:	adrp	x1, 1000 <dl_load@@Base+0x250>
 e00:	add	x1, x1, #0x40
 e04:	blr	x3
 e08:	cbnz	w0, e84 <dl_load@@Base+0xd4>
 e0c:	ldr	x3, [x20, #104]
 e10:	adrp	x1, 0 <exit@plt-0x670>
 e14:	ldr	x0, [x19, #8]
 e18:	add	x1, x1, #0xfd0
 e1c:	ldr	x2, [x19, #24]
 e20:	mov	w21, #0x0                   	// #0
 e24:	ldr	x3, [x3, #104]
 e28:	blr	x3
 e2c:	bl	b08 <fprintf@plt+0x438>
 e30:	cbnz	w0, e54 <dl_load@@Base+0xa4>
 e34:	ldr	x2, [x20, #104]
 e38:	add	x0, x20, #0x68
 e3c:	adrp	x1, 0 <exit@plt-0x670>
 e40:	mov	w21, #0x0                   	// #0
 e44:	add	x1, x1, #0xff0
 e48:	ldr	x0, [x0, #8]
 e4c:	ldr	x2, [x2, #104]
 e50:	blr	x2
 e54:	ldr	x2, [x20, #104]
 e58:	add	x20, x20, #0x68
 e5c:	adrp	x1, 1000 <dl_load@@Base+0x250>
 e60:	add	x1, x1, #0x20
 e64:	ldr	x0, [x20, #8]
 e68:	ldr	x2, [x2, #88]
 e6c:	blr	x2
 e70:	mov	w0, w21
 e74:	ldp	x19, x20, [sp, #16]
 e78:	ldr	x21, [sp, #32]
 e7c:	ldp	x29, x30, [sp], #48
 e80:	ret
 e84:	mov	w21, #0x1                   	// #1
 e88:	b	e2c <dl_load@@Base+0x7c>
 e8c:	adrp	x19, 11000 <dl_load@@Base+0x10250>
 e90:	mov	x2, #0x27                  	// #39
 e94:	mov	x1, #0x1                   	// #1
 e98:	adrp	x0, 0 <exit@plt-0x670>
 e9c:	ldr	x19, [x19, #4048]
 ea0:	add	x0, x0, #0xf70
 ea4:	ldr	x3, [x19]
 ea8:	bl	6b0 <fwrite@plt>
 eac:	ldr	x5, [x20, #104]
 eb0:	adrp	x1, 0 <exit@plt-0x670>
 eb4:	ldr	x0, [x19]
 eb8:	add	x1, x1, #0xf98
 ebc:	ldp	w4, w5, [x5]
 ec0:	mov	w3, #0x0                   	// #0
 ec4:	mov	w2, #0x2                   	// #2
 ec8:	bl	6d0 <fprintf@plt>
 ecc:	mov	w0, #0x1                   	// #1
 ed0:	bl	670 <exit@plt>

Disassembly of section .fini:

0000000000000ed4 <.fini>:
 ed4:	stp	x29, x30, [sp, #-16]!
 ed8:	mov	x29, sp
 edc:	ldp	x29, x30, [sp], #16
 ee0:	ret
