
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//blocklist.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_partition_get_start>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #8]
   8:	str	xzr, [sp, #16]
   c:	ldr	x0, [sp, #8]
  10:	str	x0, [sp, #24]
  14:	b	38 <grub_partition_get_start+0x38>
  18:	ldr	x0, [sp, #24]
  1c:	ldr	x0, [x0, #8]
  20:	ldr	x1, [sp, #16]
  24:	add	x0, x1, x0
  28:	str	x0, [sp, #16]
  2c:	ldr	x0, [sp, #24]
  30:	ldr	x0, [x0, #40]
  34:	str	x0, [sp, #24]
  38:	ldr	x0, [sp, #24]
  3c:	cmp	x0, #0x0
  40:	b.ne	18 <grub_partition_get_start+0x18>  // b.any
  44:	ldr	x0, [sp, #16]
  48:	add	sp, sp, #0x20
  4c:	ret

0000000000000050 <grub_register_command>:
  50:	stp	x29, x30, [sp, #-48]!
  54:	mov	x29, sp
  58:	str	x0, [sp, #40]
  5c:	str	x1, [sp, #32]
  60:	str	x2, [sp, #24]
  64:	str	x3, [sp, #16]
  68:	mov	w4, #0x0                   	// #0
  6c:	ldr	x3, [sp, #16]
  70:	ldr	x2, [sp, #24]
  74:	ldr	x1, [sp, #32]
  78:	ldr	x0, [sp, #40]
  7c:	bl	0 <grub_register_command_prio>
  80:	ldp	x29, x30, [sp], #48
  84:	ret

0000000000000088 <print_blocklist>:
  88:	stp	x29, x30, [sp, #-48]!
  8c:	mov	x29, sp
  90:	str	x0, [sp, #40]
  94:	str	w1, [sp, #36]
  98:	str	w2, [sp, #32]
  9c:	str	w3, [sp, #28]
  a0:	str	x4, [sp, #16]
  a4:	ldr	x0, [sp, #16]
  a8:	ldr	w0, [x0, #12]
  ac:	add	w2, w0, #0x1
  b0:	ldr	x1, [sp, #16]
  b4:	str	w2, [x1, #12]
  b8:	cmp	w0, #0x0
  bc:	b.eq	d0 <print_blocklist+0x48>  // b.none
  c0:	adrp	x0, 0 <grub_partition_get_start>
  c4:	add	x0, x0, #0x0
  c8:	ldr	x0, [x0]
  cc:	bl	0 <grub_printf>
  d0:	ldr	x0, [sp, #16]
  d4:	ldr	x0, [x0, #16]
  d8:	ldr	x1, [sp, #40]
  dc:	sub	x0, x1, x0
  e0:	mov	x1, x0
  e4:	adrp	x0, 0 <grub_partition_get_start>
  e8:	add	x0, x0, #0x0
  ec:	ldr	x0, [x0]
  f0:	bl	0 <grub_printf>
  f4:	ldr	w0, [sp, #36]
  f8:	cmp	w0, #0x0
  fc:	b.eq	114 <print_blocklist+0x8c>  // b.none
 100:	ldr	w1, [sp, #36]
 104:	adrp	x0, 0 <grub_partition_get_start>
 108:	add	x0, x0, #0x0
 10c:	ldr	x0, [x0]
 110:	bl	0 <grub_printf>
 114:	ldr	w0, [sp, #32]
 118:	cmp	w0, #0x0
 11c:	b.ne	12c <print_blocklist+0xa4>  // b.any
 120:	ldr	w0, [sp, #28]
 124:	cmp	w0, #0x0
 128:	b.eq	150 <print_blocklist+0xc8>  // b.none
 12c:	ldr	w1, [sp, #32]
 130:	ldr	w0, [sp, #28]
 134:	add	w0, w1, w0
 138:	mov	w2, w0
 13c:	ldr	w1, [sp, #32]
 140:	adrp	x0, 0 <grub_partition_get_start>
 144:	add	x0, x0, #0x0
 148:	ldr	x0, [x0]
 14c:	bl	0 <grub_printf>
 150:	nop
 154:	ldp	x29, x30, [sp], #48
 158:	ret
 15c:	nop
	...

0000000000000180 <read_blocklist>:
 180:	stp	x29, x30, [sp, #-64]!
 184:	mov	x29, sp
 188:	str	x0, [sp, #40]
 18c:	str	w1, [sp, #36]
 190:	str	w2, [sp, #32]
 194:	str	x3, [sp, #24]
 198:	ldr	x0, [sp, #24]
 19c:	str	x0, [sp, #56]
 1a0:	ldr	x0, [sp, #56]
 1a4:	ldr	w0, [x0, #8]
 1a8:	cmp	w0, #0x0
 1ac:	b.eq	268 <read_blocklist+0xe8>  // b.none
 1b0:	ldr	x0, [sp, #56]
 1b4:	ldr	x1, [x0]
 1b8:	ldr	x0, [sp, #56]
 1bc:	ldr	w0, [x0, #8]
 1c0:	mov	w0, w0
 1c4:	add	x0, x1, x0
 1c8:	ldr	x1, [sp, #40]
 1cc:	cmp	x1, x0
 1d0:	b.ne	22c <read_blocklist+0xac>  // b.any
 1d4:	ldr	w0, [sp, #36]
 1d8:	cmp	w0, #0x0
 1dc:	b.ne	22c <read_blocklist+0xac>  // b.any
 1e0:	ldr	w0, [sp, #32]
 1e4:	cmp	w0, #0x1ff
 1e8:	b.ls	22c <read_blocklist+0xac>  // b.plast
 1ec:	ldr	x0, [sp, #56]
 1f0:	ldr	w1, [x0, #8]
 1f4:	ldr	w0, [sp, #32]
 1f8:	lsr	w0, w0, #9
 1fc:	add	w1, w1, w0
 200:	ldr	x0, [sp, #56]
 204:	str	w1, [x0, #8]
 208:	ldr	w0, [sp, #32]
 20c:	lsr	w0, w0, #9
 210:	mov	w0, w0
 214:	ldr	x1, [sp, #40]
 218:	add	x0, x1, x0
 21c:	str	x0, [sp, #40]
 220:	ldr	w0, [sp, #32]
 224:	and	w0, w0, #0x1ff
 228:	str	w0, [sp, #32]
 22c:	ldr	w0, [sp, #32]
 230:	cmp	w0, #0x0
 234:	b.eq	380 <read_blocklist+0x200>  // b.none
 238:	ldr	x0, [sp, #56]
 23c:	ldr	x5, [x0]
 240:	ldr	x0, [sp, #56]
 244:	ldr	w0, [x0, #8]
 248:	ldr	x4, [sp, #56]
 24c:	mov	w3, #0x0                   	// #0
 250:	mov	w2, #0x0                   	// #0
 254:	mov	w1, w0
 258:	mov	x0, x5
 25c:	bl	88 <print_blocklist>
 260:	ldr	x0, [sp, #56]
 264:	str	wzr, [x0, #8]
 268:	ldr	w0, [sp, #36]
 26c:	cmp	w0, #0x0
 270:	b.eq	2d8 <read_blocklist+0x158>  // b.none
 274:	ldr	w1, [sp, #32]
 278:	ldr	w0, [sp, #36]
 27c:	add	w0, w1, w0
 280:	str	w0, [sp, #52]
 284:	ldr	w0, [sp, #52]
 288:	and	w0, w0, #0x1ff
 28c:	str	w0, [sp, #52]
 290:	ldr	w1, [sp, #52]
 294:	ldr	w0, [sp, #36]
 298:	sub	w0, w1, w0
 29c:	str	w0, [sp, #52]
 2a0:	ldr	x4, [sp, #56]
 2a4:	ldr	w3, [sp, #52]
 2a8:	ldr	w2, [sp, #36]
 2ac:	mov	w1, #0x0                   	// #0
 2b0:	ldr	x0, [sp, #40]
 2b4:	bl	88 <print_blocklist>
 2b8:	ldr	w1, [sp, #32]
 2bc:	ldr	w0, [sp, #52]
 2c0:	sub	w0, w1, w0
 2c4:	str	w0, [sp, #32]
 2c8:	ldr	x0, [sp, #40]
 2cc:	add	x0, x0, #0x1
 2d0:	str	x0, [sp, #40]
 2d4:	str	wzr, [sp, #36]
 2d8:	ldr	w0, [sp, #32]
 2dc:	cmp	w0, #0x0
 2e0:	b.eq	388 <read_blocklist+0x208>  // b.none
 2e4:	ldr	w0, [sp, #32]
 2e8:	and	w0, w0, #0x1ff
 2ec:	cmp	w0, #0x0
 2f0:	b.eq	360 <read_blocklist+0x1e0>  // b.none
 2f4:	ldr	w0, [sp, #32]
 2f8:	lsr	w0, w0, #9
 2fc:	cmp	w0, #0x0
 300:	b.eq	33c <read_blocklist+0x1bc>  // b.none
 304:	ldr	w0, [sp, #32]
 308:	lsr	w0, w0, #9
 30c:	ldr	x4, [sp, #56]
 310:	mov	w3, #0x0                   	// #0
 314:	mov	w2, #0x0                   	// #0
 318:	mov	w1, w0
 31c:	ldr	x0, [sp, #40]
 320:	bl	88 <print_blocklist>
 324:	ldr	w0, [sp, #32]
 328:	lsr	w0, w0, #9
 32c:	mov	w0, w0
 330:	ldr	x1, [sp, #40]
 334:	add	x0, x1, x0
 338:	str	x0, [sp, #40]
 33c:	ldr	w0, [sp, #32]
 340:	and	w0, w0, #0x1ff
 344:	ldr	x4, [sp, #56]
 348:	mov	w3, w0
 34c:	mov	w2, #0x0                   	// #0
 350:	mov	w1, #0x0                   	// #0
 354:	ldr	x0, [sp, #40]
 358:	bl	88 <print_blocklist>
 35c:	b	38c <read_blocklist+0x20c>
 360:	ldr	x0, [sp, #56]
 364:	ldr	x1, [sp, #40]
 368:	str	x1, [x0]
 36c:	ldr	w0, [sp, #32]
 370:	lsr	w1, w0, #9
 374:	ldr	x0, [sp, #56]
 378:	str	w1, [x0, #8]
 37c:	b	38c <read_blocklist+0x20c>
 380:	nop
 384:	b	38c <read_blocklist+0x20c>
 388:	nop
 38c:	ldp	x29, x30, [sp], #64
 390:	ret

0000000000000394 <grub_cmd_blocklist>:
 394:	sub	sp, sp, #0x250
 398:	stp	x29, x30, [sp]
 39c:	mov	x29, sp
 3a0:	str	x0, [sp, #40]
 3a4:	str	w1, [sp, #36]
 3a8:	str	x2, [sp, #24]
 3ac:	str	xzr, [sp, #48]
 3b0:	str	wzr, [sp, #56]
 3b4:	str	wzr, [sp, #60]
 3b8:	str	xzr, [sp, #64]
 3bc:	ldr	w0, [sp, #36]
 3c0:	cmp	w0, #0x0
 3c4:	b.gt	3e0 <grub_cmd_blocklist+0x4c>
 3c8:	adrp	x0, 0 <grub_partition_get_start>
 3cc:	add	x0, x0, #0x0
 3d0:	ldr	x1, [x0]
 3d4:	mov	w0, #0x12                  	// #18
 3d8:	bl	0 <grub_error>
 3dc:	b	4dc <grub_cmd_blocklist+0x148>
 3e0:	ldr	x0, [sp, #24]
 3e4:	ldr	x0, [x0]
 3e8:	mov	w1, #0x21                  	// #33
 3ec:	movk	w1, #0x2, lsl #16
 3f0:	bl	0 <grub_file_open>
 3f4:	str	x0, [sp, #584]
 3f8:	ldr	x0, [sp, #584]
 3fc:	cmp	x0, #0x0
 400:	b.ne	418 <grub_cmd_blocklist+0x84>  // b.any
 404:	adrp	x0, 0 <grub_partition_get_start>
 408:	add	x0, x0, #0x0
 40c:	ldr	x0, [x0]
 410:	ldr	w0, [x0]
 414:	b	4dc <grub_cmd_blocklist+0x148>
 418:	ldr	x0, [sp, #584]
 41c:	ldr	x0, [x0, #8]
 420:	ldr	x0, [x0]
 424:	cmp	x0, #0x0
 428:	b.ne	444 <grub_cmd_blocklist+0xb0>  // b.any
 42c:	adrp	x0, 0 <grub_partition_get_start>
 430:	add	x0, x0, #0x0
 434:	ldr	x1, [x0]
 438:	mov	w0, #0xd                   	// #13
 43c:	bl	0 <grub_error>
 440:	b	4dc <grub_cmd_blocklist+0x148>
 444:	ldr	x0, [sp, #584]
 448:	ldr	x0, [x0, #8]
 44c:	ldr	x0, [x0]
 450:	ldr	x0, [x0, #40]
 454:	bl	0 <grub_partition_get_start>
 458:	str	x0, [sp, #64]
 45c:	ldr	x0, [sp, #584]
 460:	adrp	x1, 0 <grub_partition_get_start>
 464:	add	x1, x1, #0x0
 468:	ldr	x1, [x1]
 46c:	str	x1, [x0, #88]
 470:	ldr	x0, [sp, #584]
 474:	add	x1, sp, #0x30
 478:	str	x1, [x0, #96]
 47c:	nop
 480:	add	x0, sp, #0x48
 484:	mov	x2, #0x200                 	// #512
 488:	mov	x1, x0
 48c:	ldr	x0, [sp, #584]
 490:	bl	0 <grub_file_read>
 494:	cmp	x0, #0x0
 498:	b.gt	480 <grub_cmd_blocklist+0xec>
 49c:	ldr	w0, [sp, #56]
 4a0:	cmp	w0, #0x0
 4a4:	b.eq	4c4 <grub_cmd_blocklist+0x130>  // b.none
 4a8:	ldr	x0, [sp, #48]
 4ac:	ldr	w1, [sp, #56]
 4b0:	add	x2, sp, #0x30
 4b4:	mov	x4, x2
 4b8:	mov	w3, #0x0                   	// #0
 4bc:	mov	w2, #0x0                   	// #0
 4c0:	bl	88 <print_blocklist>
 4c4:	ldr	x0, [sp, #584]
 4c8:	bl	0 <grub_file_close>
 4cc:	adrp	x0, 0 <grub_partition_get_start>
 4d0:	add	x0, x0, #0x0
 4d4:	ldr	x0, [x0]
 4d8:	ldr	w0, [x0]
 4dc:	ldp	x29, x30, [sp]
 4e0:	add	sp, sp, #0x250
 4e4:	ret
	...

0000000000000508 <grub_mod_init>:
 508:	stp	x29, x30, [sp, #-32]!
 50c:	mov	x29, sp
 510:	str	x0, [sp, #24]
 514:	adrp	x0, 0 <grub_partition_get_start>
 518:	add	x0, x0, #0x0
 51c:	ldr	x3, [x0]
 520:	adrp	x0, 0 <grub_partition_get_start>
 524:	add	x0, x0, #0x0
 528:	ldr	x2, [x0]
 52c:	adrp	x0, 0 <grub_partition_get_start>
 530:	add	x0, x0, #0x0
 534:	ldr	x1, [x0]
 538:	adrp	x0, 0 <grub_partition_get_start>
 53c:	add	x0, x0, #0x0
 540:	ldr	x0, [x0]
 544:	bl	50 <grub_register_command>
 548:	mov	x1, x0
 54c:	adrp	x0, 0 <grub_partition_get_start>
 550:	add	x0, x0, #0x0
 554:	ldr	x0, [x0]
 558:	str	x1, [x0]
 55c:	nop
 560:	ldp	x29, x30, [sp], #32
 564:	ret
	...

0000000000000590 <grub_mod_fini>:
 590:	stp	x29, x30, [sp, #-16]!
 594:	mov	x29, sp
 598:	adrp	x0, 0 <grub_partition_get_start>
 59c:	add	x0, x0, #0x0
 5a0:	ldr	x0, [x0]
 5a4:	ldr	x0, [x0]
 5a8:	bl	0 <grub_unregister_command>
 5ac:	nop
 5b0:	ldp	x29, x30, [sp], #16
 5b4:	ret
	...
