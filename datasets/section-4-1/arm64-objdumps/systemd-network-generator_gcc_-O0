
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-network-generator_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401980 <_init>:
  401980:	stp	x29, x30, [sp, #-16]!
  401984:	mov	x29, sp
  401988:	bl	401df0 <call_weak_fn>
  40198c:	ldp	x29, x30, [sp], #16
  401990:	ret

Disassembly of section .plt:

00000000004019a0 <.plt>:
  4019a0:	stp	x16, x30, [sp, #-16]!
  4019a4:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  4019a8:	ldr	x17, [x16, #3576]
  4019ac:	add	x16, x16, #0xdf8
  4019b0:	br	x17
  4019b4:	nop
  4019b8:	nop
  4019bc:	nop

00000000004019c0 <internal_hashmap_remove@plt>:
  4019c0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  4019c4:	ldr	x17, [x16, #3584]
  4019c8:	add	x16, x16, #0xe00
  4019cc:	br	x17

00000000004019d0 <safe_fclose@plt>:
  4019d0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  4019d4:	ldr	x17, [x16, #3592]
  4019d8:	add	x16, x16, #0xe08
  4019dc:	br	x17

00000000004019e0 <internal_hashmap_free@plt>:
  4019e0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  4019e4:	ldr	x17, [x16, #3600]
  4019e8:	add	x16, x16, #0xe10
  4019ec:	br	x17

00000000004019f0 <stpcpy@plt>:
  4019f0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  4019f4:	ldr	x17, [x16, #3608]
  4019f8:	add	x16, x16, #0xe18
  4019fc:	br	x17

0000000000401a00 <__libc_start_main@plt>:
  401a00:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401a04:	ldr	x17, [x16, #3616]
  401a08:	add	x16, x16, #0xe20
  401a0c:	br	x17

0000000000401a10 <in_addr_from_string_auto@plt>:
  401a10:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401a14:	ldr	x17, [x16, #3624]
  401a18:	add	x16, x16, #0xe28
  401a1c:	br	x17

0000000000401a20 <in_addr_prefix_from_string@plt>:
  401a20:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401a24:	ldr	x17, [x16, #3632]
  401a28:	add	x16, x16, #0xe30
  401a2c:	br	x17

0000000000401a30 <strv_extend_strv@plt>:
  401a30:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401a34:	ldr	x17, [x16, #3640]
  401a38:	add	x16, x16, #0xe38
  401a3c:	br	x17

0000000000401a40 <parse_boolean@plt>:
  401a40:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401a44:	ldr	x17, [x16, #3648]
  401a48:	add	x16, x16, #0xe40
  401a4c:	br	x17

0000000000401a50 <__gmon_start__@plt>:
  401a50:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401a54:	ldr	x17, [x16, #3656]
  401a58:	add	x16, x16, #0xe48
  401a5c:	br	x17

0000000000401a60 <polkit_agent_close@plt>:
  401a60:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401a64:	ldr	x17, [x16, #3664]
  401a68:	add	x16, x16, #0xe50
  401a6c:	br	x17

0000000000401a70 <strnlen@plt>:
  401a70:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401a74:	ldr	x17, [x16, #3672]
  401a78:	add	x16, x16, #0xe58
  401a7c:	br	x17

0000000000401a80 <free_and_strdup@plt>:
  401a80:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401a84:	ldr	x17, [x16, #3680]
  401a88:	add	x16, x16, #0xe60
  401a8c:	br	x17

0000000000401a90 <fprintf@plt>:
  401a90:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401a94:	ldr	x17, [x16, #3688]
  401a98:	add	x16, x16, #0xe68
  401a9c:	br	x17

0000000000401aa0 <in_addr_from_string@plt>:
  401aa0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401aa4:	ldr	x17, [x16, #3696]
  401aa8:	add	x16, x16, #0xe70
  401aac:	br	x17

0000000000401ab0 <memcpy@plt>:
  401ab0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401ab4:	ldr	x17, [x16, #3704]
  401ab8:	add	x16, x16, #0xe78
  401abc:	br	x17

0000000000401ac0 <hostname_is_valid@plt>:
  401ac0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401ac4:	ldr	x17, [x16, #3712]
  401ac8:	add	x16, x16, #0xe80
  401acc:	br	x17

0000000000401ad0 <ifname_valid@plt>:
  401ad0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401ad4:	ldr	x17, [x16, #3720]
  401ad8:	add	x16, x16, #0xe88
  401adc:	br	x17

0000000000401ae0 <ether_addr_compare@plt>:
  401ae0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401ae4:	ldr	x17, [x16, #3728]
  401ae8:	add	x16, x16, #0xe90
  401aec:	br	x17

0000000000401af0 <in4_addr_netmask_to_prefixlen@plt>:
  401af0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401af4:	ldr	x17, [x16, #3736]
  401af8:	add	x16, x16, #0xe98
  401afc:	br	x17

0000000000401b00 <log_assert_failed_realm@plt>:
  401b00:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401b04:	ldr	x17, [x16, #3744]
  401b08:	add	x16, x16, #0xea0
  401b0c:	br	x17

0000000000401b10 <getopt_long@plt>:
  401b10:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401b14:	ldr	x17, [x16, #3752]
  401b18:	add	x16, x16, #0xea8
  401b1c:	br	x17

0000000000401b20 <log_assert_failed_unreachable_realm@plt>:
  401b20:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401b24:	ldr	x17, [x16, #3760]
  401b28:	add	x16, x16, #0xeb0
  401b2c:	br	x17

0000000000401b30 <safe_atou8@plt>:
  401b30:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401b34:	ldr	x17, [x16, #3768]
  401b38:	add	x16, x16, #0xeb8
  401b3c:	br	x17

0000000000401b40 <abort@plt>:
  401b40:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401b44:	ldr	x17, [x16, #3776]
  401b48:	add	x16, x16, #0xec0
  401b4c:	br	x17

0000000000401b50 <parse_mtu@plt>:
  401b50:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401b54:	ldr	x17, [x16, #3784]
  401b58:	add	x16, x16, #0xec8
  401b5c:	br	x17

0000000000401b60 <internal_hashmap_get@plt>:
  401b60:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401b64:	ldr	x17, [x16, #3792]
  401b68:	add	x16, x16, #0xed0
  401b6c:	br	x17

0000000000401b70 <strv_free@plt>:
  401b70:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401b74:	ldr	x17, [x16, #3800]
  401b78:	add	x16, x16, #0xed8
  401b7c:	br	x17

0000000000401b80 <ether_addr_from_string@plt>:
  401b80:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401b84:	ldr	x17, [x16, #3808]
  401b88:	add	x16, x16, #0xee0
  401b8c:	br	x17

0000000000401b90 <strv_extend@plt>:
  401b90:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401b94:	ldr	x17, [x16, #3816]
  401b98:	add	x16, x16, #0xee8
  401b9c:	br	x17

0000000000401ba0 <in_addr_is_null@plt>:
  401ba0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401ba4:	ldr	x17, [x16, #3824]
  401ba8:	add	x16, x16, #0xef0
  401bac:	br	x17

0000000000401bb0 <__stack_chk_fail@plt>:
  401bb0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401bb4:	ldr	x17, [x16, #3832]
  401bb8:	add	x16, x16, #0xef8
  401bbc:	br	x17

0000000000401bc0 <ask_password_agent_close@plt>:
  401bc0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401bc4:	ldr	x17, [x16, #3840]
  401bc8:	add	x16, x16, #0xf00
  401bcc:	br	x17

0000000000401bd0 <version@plt>:
  401bd0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401bd4:	ldr	x17, [x16, #3848]
  401bd8:	add	x16, x16, #0xf08
  401bdc:	br	x17

0000000000401be0 <pager_close@plt>:
  401be0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401be4:	ldr	x17, [x16, #3856]
  401be8:	add	x16, x16, #0xf10
  401bec:	br	x17

0000000000401bf0 <in_addr_prefix_to_string@plt>:
  401bf0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401bf4:	ldr	x17, [x16, #3864]
  401bf8:	add	x16, x16, #0xf18
  401bfc:	br	x17

0000000000401c00 <malloc@plt>:
  401c00:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401c04:	ldr	x17, [x16, #3872]
  401c08:	add	x16, x16, #0xf20
  401c0c:	br	x17

0000000000401c10 <internal_hashmap_size@plt>:
  401c10:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401c14:	ldr	x17, [x16, #3880]
  401c18:	add	x16, x16, #0xf28
  401c1c:	br	x17

0000000000401c20 <log_internal_realm@plt>:
  401c20:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401c24:	ldr	x17, [x16, #3888]
  401c28:	add	x16, x16, #0xf30
  401c2c:	br	x17

0000000000401c30 <hashmap_put@plt>:
  401c30:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401c34:	ldr	x17, [x16, #3896]
  401c38:	add	x16, x16, #0xf38
  401c3c:	br	x17

0000000000401c40 <in_addr_to_string@plt>:
  401c40:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401c44:	ldr	x17, [x16, #3904]
  401c48:	add	x16, x16, #0xf40
  401c4c:	br	x17

0000000000401c50 <string_table_lookup@plt>:
  401c50:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401c54:	ldr	x17, [x16, #3912]
  401c58:	add	x16, x16, #0xf48
  401c5c:	br	x17

0000000000401c60 <strcmp@plt>:
  401c60:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401c64:	ldr	x17, [x16, #3920]
  401c68:	add	x16, x16, #0xf50
  401c6c:	br	x17

0000000000401c70 <extract_first_word@plt>:
  401c70:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401c74:	ldr	x17, [x16, #3928]
  401c78:	add	x16, x16, #0xf58
  401c7c:	br	x17

0000000000401c80 <internal_hashmap_iterate@plt>:
  401c80:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401c84:	ldr	x17, [x16, #3936]
  401c88:	add	x16, x16, #0xf60
  401c8c:	br	x17

0000000000401c90 <strdup@plt>:
  401c90:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401c94:	ldr	x17, [x16, #3944]
  401c98:	add	x16, x16, #0xf68
  401c9c:	br	x17

0000000000401ca0 <internal_hashmap_first_key_and_value@plt>:
  401ca0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401ca4:	ldr	x17, [x16, #3952]
  401ca8:	add	x16, x16, #0xf70
  401cac:	br	x17

0000000000401cb0 <strchr@plt>:
  401cb0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401cb4:	ldr	x17, [x16, #3960]
  401cb8:	add	x16, x16, #0xf78
  401cbc:	br	x17

0000000000401cc0 <proc_cmdline_parse@plt>:
  401cc0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401cc4:	ldr	x17, [x16, #3968]
  401cc8:	add	x16, x16, #0xf80
  401ccc:	br	x17

0000000000401cd0 <asprintf@plt>:
  401cd0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401cd4:	ldr	x17, [x16, #3976]
  401cd8:	add	x16, x16, #0xf88
  401cdc:	br	x17

0000000000401ce0 <generator_open_unit_file@plt>:
  401ce0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401ce4:	ldr	x17, [x16, #3984]
  401ce8:	add	x16, x16, #0xf90
  401cec:	br	x17

0000000000401cf0 <free@plt>:
  401cf0:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401cf4:	ldr	x17, [x16, #3992]
  401cf8:	add	x16, x16, #0xf98
  401cfc:	br	x17

0000000000401d00 <internal_hashmap_ensure_allocated@plt>:
  401d00:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401d04:	ldr	x17, [x16, #4000]
  401d08:	add	x16, x16, #0xfa0
  401d0c:	br	x17

0000000000401d10 <fwrite@plt>:
  401d10:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401d14:	ldr	x17, [x16, #4008]
  401d18:	add	x16, x16, #0xfa8
  401d1c:	br	x17

0000000000401d20 <mac_selinux_finish@plt>:
  401d20:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401d24:	ldr	x17, [x16, #4016]
  401d28:	add	x16, x16, #0xfb0
  401d2c:	br	x17

0000000000401d30 <mkdir_p@plt>:
  401d30:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401d34:	ldr	x17, [x16, #4024]
  401d38:	add	x16, x16, #0xfb8
  401d3c:	br	x17

0000000000401d40 <printf@plt>:
  401d40:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401d44:	ldr	x17, [x16, #4032]
  401d48:	add	x16, x16, #0xfc0
  401d4c:	br	x17

0000000000401d50 <strcpy@plt>:
  401d50:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401d54:	ldr	x17, [x16, #4040]
  401d58:	add	x16, x16, #0xfc8
  401d5c:	br	x17

0000000000401d60 <ether_addr_to_string@plt>:
  401d60:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401d64:	ldr	x17, [x16, #4048]
  401d68:	add	x16, x16, #0xfd0
  401d6c:	br	x17

0000000000401d70 <strlen@plt>:
  401d70:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401d74:	ldr	x17, [x16, #4056]
  401d78:	add	x16, x16, #0xfd8
  401d7c:	br	x17

0000000000401d80 <log_oom_internal@plt>:
  401d80:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401d84:	ldr	x17, [x16, #4064]
  401d88:	add	x16, x16, #0xfe0
  401d8c:	br	x17

0000000000401d90 <log_get_max_level_realm@plt>:
  401d90:	adrp	x16, 418000 <__FRAME_END__+0xf4b0>
  401d94:	ldr	x17, [x16, #4072]
  401d98:	add	x16, x16, #0xfe8
  401d9c:	br	x17

Disassembly of section .text:

0000000000401da0 <_start>:
  401da0:	mov	x29, #0x0                   	// #0
  401da4:	mov	x30, #0x0                   	// #0
  401da8:	mov	x5, x0
  401dac:	ldr	x1, [sp]
  401db0:	add	x2, sp, #0x8
  401db4:	mov	x6, sp
  401db8:	movz	x0, #0x0, lsl #48
  401dbc:	movk	x0, #0x0, lsl #32
  401dc0:	movk	x0, #0x40, lsl #16
  401dc4:	movk	x0, #0x2f84
  401dc8:	movz	x3, #0x0, lsl #48
  401dcc:	movk	x3, #0x0, lsl #32
  401dd0:	movk	x3, #0x40, lsl #16
  401dd4:	movk	x3, #0x7308
  401dd8:	movz	x4, #0x0, lsl #48
  401ddc:	movk	x4, #0x0, lsl #32
  401de0:	movk	x4, #0x40, lsl #16
  401de4:	movk	x4, #0x7388
  401de8:	bl	401a00 <__libc_start_main@plt>
  401dec:	bl	401b40 <abort@plt>

0000000000401df0 <call_weak_fn>:
  401df0:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  401df4:	ldr	x0, [x0, #4088]
  401df8:	cbz	x0, 401e00 <call_weak_fn+0x10>
  401dfc:	b	401a50 <__gmon_start__@plt>
  401e00:	ret

0000000000401e04 <deregister_tm_clones>:
  401e04:	stp	x29, x30, [sp, #-32]!
  401e08:	mov	x29, sp
  401e0c:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  401e10:	add	x0, x0, #0x0
  401e14:	str	x0, [sp, #24]
  401e18:	ldr	x0, [sp, #24]
  401e1c:	str	x0, [sp, #24]
  401e20:	ldr	x1, [sp, #24]
  401e24:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  401e28:	add	x0, x0, #0x0
  401e2c:	cmp	x1, x0
  401e30:	b.eq	401e6c <deregister_tm_clones+0x68>  // b.none
  401e34:	adrp	x0, 407000 <network_dump+0x318>
  401e38:	add	x0, x0, #0x3a0
  401e3c:	ldr	x0, [x0]
  401e40:	str	x0, [sp, #16]
  401e44:	ldr	x0, [sp, #16]
  401e48:	str	x0, [sp, #16]
  401e4c:	ldr	x0, [sp, #16]
  401e50:	cmp	x0, #0x0
  401e54:	b.eq	401e70 <deregister_tm_clones+0x6c>  // b.none
  401e58:	ldr	x1, [sp, #16]
  401e5c:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  401e60:	add	x0, x0, #0x0
  401e64:	blr	x1
  401e68:	b	401e70 <deregister_tm_clones+0x6c>
  401e6c:	nop
  401e70:	ldp	x29, x30, [sp], #32
  401e74:	ret

0000000000401e78 <register_tm_clones>:
  401e78:	stp	x29, x30, [sp, #-48]!
  401e7c:	mov	x29, sp
  401e80:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  401e84:	add	x0, x0, #0x0
  401e88:	str	x0, [sp, #40]
  401e8c:	ldr	x0, [sp, #40]
  401e90:	str	x0, [sp, #40]
  401e94:	ldr	x1, [sp, #40]
  401e98:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  401e9c:	add	x0, x0, #0x0
  401ea0:	sub	x0, x1, x0
  401ea4:	asr	x0, x0, #3
  401ea8:	lsr	x1, x0, #63
  401eac:	add	x0, x1, x0
  401eb0:	asr	x0, x0, #1
  401eb4:	str	x0, [sp, #32]
  401eb8:	ldr	x0, [sp, #32]
  401ebc:	cmp	x0, #0x0
  401ec0:	b.eq	401f00 <register_tm_clones+0x88>  // b.none
  401ec4:	adrp	x0, 407000 <network_dump+0x318>
  401ec8:	add	x0, x0, #0x3a8
  401ecc:	ldr	x0, [x0]
  401ed0:	str	x0, [sp, #24]
  401ed4:	ldr	x0, [sp, #24]
  401ed8:	str	x0, [sp, #24]
  401edc:	ldr	x0, [sp, #24]
  401ee0:	cmp	x0, #0x0
  401ee4:	b.eq	401f04 <register_tm_clones+0x8c>  // b.none
  401ee8:	ldr	x2, [sp, #24]
  401eec:	ldr	x1, [sp, #32]
  401ef0:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  401ef4:	add	x0, x0, #0x0
  401ef8:	blr	x2
  401efc:	b	401f04 <register_tm_clones+0x8c>
  401f00:	nop
  401f04:	ldp	x29, x30, [sp], #48
  401f08:	ret

0000000000401f0c <__do_global_dtors_aux>:
  401f0c:	stp	x29, x30, [sp, #-16]!
  401f10:	mov	x29, sp
  401f14:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  401f18:	add	x0, x0, #0x20
  401f1c:	ldrb	w0, [x0]
  401f20:	and	x0, x0, #0xff
  401f24:	cmp	x0, #0x0
  401f28:	b.ne	401f44 <__do_global_dtors_aux+0x38>  // b.any
  401f2c:	bl	401e04 <deregister_tm_clones>
  401f30:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  401f34:	add	x0, x0, #0x20
  401f38:	mov	w1, #0x1                   	// #1
  401f3c:	strb	w1, [x0]
  401f40:	b	401f48 <__do_global_dtors_aux+0x3c>
  401f44:	nop
  401f48:	ldp	x29, x30, [sp], #16
  401f4c:	ret

0000000000401f50 <frame_dummy>:
  401f50:	stp	x29, x30, [sp, #-16]!
  401f54:	mov	x29, sp
  401f58:	bl	401e78 <register_tm_clones>
  401f5c:	nop
  401f60:	ldp	x29, x30, [sp], #16
  401f64:	ret

0000000000401f68 <ALIGN_TO>:
  401f68:	sub	sp, sp, #0x10
  401f6c:	str	x0, [sp, #8]
  401f70:	str	x1, [sp]
  401f74:	ldr	x1, [sp, #8]
  401f78:	ldr	x0, [sp]
  401f7c:	add	x0, x1, x0
  401f80:	sub	x1, x0, #0x1
  401f84:	ldr	x0, [sp]
  401f88:	neg	x0, x0
  401f8c:	and	x0, x1, x0
  401f90:	add	sp, sp, #0x10
  401f94:	ret

0000000000401f98 <fclosep>:
  401f98:	stp	x29, x30, [sp, #-32]!
  401f9c:	mov	x29, sp
  401fa0:	str	x0, [sp, #24]
  401fa4:	ldr	x0, [sp, #24]
  401fa8:	ldr	x0, [x0]
  401fac:	bl	4019d0 <safe_fclose@plt>
  401fb0:	nop
  401fb4:	ldp	x29, x30, [sp], #32
  401fb8:	ret

0000000000401fbc <freep>:
  401fbc:	stp	x29, x30, [sp, #-32]!
  401fc0:	mov	x29, sp
  401fc4:	str	x0, [sp, #24]
  401fc8:	ldr	x0, [sp, #24]
  401fcc:	ldr	x0, [x0]
  401fd0:	bl	401cf0 <free@plt>
  401fd4:	nop
  401fd8:	ldp	x29, x30, [sp], #32
  401fdc:	ret

0000000000401fe0 <size_multiply_overflow>:
  401fe0:	sub	sp, sp, #0x10
  401fe4:	str	x0, [sp, #8]
  401fe8:	str	x1, [sp]
  401fec:	ldr	x0, [sp]
  401ff0:	cmp	x0, #0x0
  401ff4:	cset	w0, ne  // ne = any
  401ff8:	and	w0, w0, #0xff
  401ffc:	and	x0, x0, #0xff
  402000:	cmp	x0, #0x0
  402004:	b.eq	402048 <size_multiply_overflow+0x68>  // b.none
  402008:	mov	x2, #0x0                   	// #0
  40200c:	ldr	x1, [sp, #8]
  402010:	ldr	x0, [sp]
  402014:	umulh	x0, x1, x0
  402018:	cmp	x0, #0x0
  40201c:	b.eq	402024 <size_multiply_overflow+0x44>  // b.none
  402020:	mov	x2, #0x1                   	// #1
  402024:	mov	x0, x2
  402028:	cmp	x0, #0x0
  40202c:	cset	w0, ne  // ne = any
  402030:	and	w0, w0, #0xff
  402034:	and	x0, x0, #0xff
  402038:	cmp	x0, #0x0
  40203c:	b.eq	402048 <size_multiply_overflow+0x68>  // b.none
  402040:	mov	w0, #0x1                   	// #1
  402044:	b	40204c <size_multiply_overflow+0x6c>
  402048:	mov	w0, #0x0                   	// #0
  40204c:	and	w0, w0, #0x1
  402050:	and	w0, w0, #0xff
  402054:	add	sp, sp, #0x10
  402058:	ret

000000000040205c <save_argc_argv>:
  40205c:	sub	sp, sp, #0x10
  402060:	str	w0, [sp, #12]
  402064:	str	x1, [sp]
  402068:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  40206c:	add	x0, x0, #0x14
  402070:	ldr	w1, [sp, #12]
  402074:	str	w1, [x0]
  402078:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  40207c:	add	x0, x0, #0x0
  402080:	ldr	x1, [sp]
  402084:	str	x1, [x0]
  402088:	nop
  40208c:	add	sp, sp, #0x10
  402090:	ret

0000000000402094 <hashmap_iterate>:
  402094:	stp	x29, x30, [sp, #-48]!
  402098:	mov	x29, sp
  40209c:	str	x0, [sp, #40]
  4020a0:	str	x1, [sp, #32]
  4020a4:	str	x2, [sp, #24]
  4020a8:	str	x3, [sp, #16]
  4020ac:	ldr	x3, [sp, #16]
  4020b0:	ldr	x2, [sp, #24]
  4020b4:	ldr	x1, [sp, #32]
  4020b8:	ldr	x0, [sp, #40]
  4020bc:	bl	401c80 <internal_hashmap_iterate@plt>
  4020c0:	and	w0, w0, #0xff
  4020c4:	ldp	x29, x30, [sp], #48
  4020c8:	ret

00000000004020cc <strempty>:
  4020cc:	sub	sp, sp, #0x10
  4020d0:	str	x0, [sp, #8]
  4020d4:	ldr	x0, [sp, #8]
  4020d8:	cmp	x0, #0x0
  4020dc:	b.ne	4020e8 <strempty+0x1c>  // b.any
  4020e0:	adrp	x0, 407000 <network_dump+0x318>
  4020e4:	add	x0, x0, #0x3b0
  4020e8:	add	sp, sp, #0x10
  4020ec:	ret

00000000004020f0 <isempty>:
  4020f0:	sub	sp, sp, #0x10
  4020f4:	str	x0, [sp, #8]
  4020f8:	ldr	x0, [sp, #8]
  4020fc:	cmp	x0, #0x0
  402100:	b.eq	402114 <isempty+0x24>  // b.none
  402104:	ldr	x0, [sp, #8]
  402108:	ldrb	w0, [x0]
  40210c:	cmp	w0, #0x0
  402110:	b.ne	40211c <isempty+0x2c>  // b.any
  402114:	mov	w0, #0x1                   	// #1
  402118:	b	402120 <isempty+0x30>
  40211c:	mov	w0, #0x0                   	// #0
  402120:	and	w0, w0, #0x1
  402124:	and	w0, w0, #0xff
  402128:	add	sp, sp, #0x10
  40212c:	ret

0000000000402130 <static_destruct>:
  402130:	stp	x29, x30, [sp, #-32]!
  402134:	mov	x29, sp
  402138:	adrp	x0, 407000 <network_dump+0x318>
  40213c:	add	x0, x0, #0x6b0
  402140:	ldr	x0, [x0]
  402144:	cmp	x0, #0x0
  402148:	b.eq	4021ac <static_destruct+0x7c>  // b.none
  40214c:	adrp	x0, 407000 <network_dump+0x318>
  402150:	add	x0, x0, #0x6b0
  402154:	ldr	x0, [x0]
  402158:	mov	x1, #0x8                   	// #8
  40215c:	bl	401f68 <ALIGN_TO>
  402160:	str	x0, [sp, #24]
  402164:	b	402190 <static_destruct+0x60>
  402168:	ldr	x0, [sp, #24]
  40216c:	ldr	x1, [x0, #8]
  402170:	ldr	x0, [sp, #24]
  402174:	ldr	x0, [x0]
  402178:	blr	x1
  40217c:	ldr	x0, [sp, #24]
  402180:	add	x0, x0, #0x10
  402184:	mov	x1, #0x8                   	// #8
  402188:	bl	401f68 <ALIGN_TO>
  40218c:	str	x0, [sp, #24]
  402190:	ldr	x1, [sp, #24]
  402194:	adrp	x0, 407000 <network_dump+0x318>
  402198:	add	x0, x0, #0x6b8
  40219c:	ldr	x0, [x0]
  4021a0:	cmp	x1, x0
  4021a4:	b.cc	402168 <static_destruct+0x38>  // b.lo, b.ul, b.last
  4021a8:	b	4021b0 <static_destruct+0x80>
  4021ac:	nop
  4021b0:	ldp	x29, x30, [sp], #32
  4021b4:	ret

00000000004021b8 <network_save>:
  4021b8:	stp	x29, x30, [sp, #-80]!
  4021bc:	mov	x29, sp
  4021c0:	str	x19, [sp, #16]
  4021c4:	str	x0, [sp, #40]
  4021c8:	str	x1, [sp, #32]
  4021cc:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4021d0:	add	x0, x0, #0xb90
  4021d4:	ldr	x1, [x0]
  4021d8:	str	x1, [sp, #72]
  4021dc:	mov	x1, #0x0                   	// #0
  4021e0:	str	xzr, [sp, #56]
  4021e4:	str	xzr, [sp, #64]
  4021e8:	ldr	x0, [sp, #40]
  4021ec:	cmp	x0, #0x0
  4021f0:	cset	w0, eq  // eq = none
  4021f4:	and	w0, w0, #0xff
  4021f8:	and	x0, x0, #0xff
  4021fc:	cmp	x0, #0x0
  402200:	b.eq	40222c <network_save+0x74>  // b.none
  402204:	adrp	x0, 407000 <network_dump+0x318>
  402208:	add	x1, x0, #0x3bb
  40220c:	adrp	x0, 407000 <network_dump+0x318>
  402210:	add	x4, x0, #0x6c0
  402214:	mov	w3, #0x17                  	// #23
  402218:	mov	x2, x1
  40221c:	adrp	x0, 407000 <network_dump+0x318>
  402220:	add	x1, x0, #0x3d8
  402224:	mov	w0, #0x0                   	// #0
  402228:	bl	401b00 <log_assert_failed_realm@plt>
  40222c:	ldr	x0, [sp, #40]
  402230:	ldr	x0, [x0]
  402234:	bl	4020f0 <isempty>
  402238:	and	w0, w0, #0xff
  40223c:	cmp	w0, #0x0
  402240:	b.eq	402250 <network_save+0x98>  // b.none
  402244:	adrp	x0, 407000 <network_dump+0x318>
  402248:	add	x19, x0, #0x3e0
  40224c:	b	402258 <network_save+0xa0>
  402250:	adrp	x0, 407000 <network_dump+0x318>
  402254:	add	x19, x0, #0x3e8
  402258:	ldr	x0, [sp, #40]
  40225c:	ldr	x0, [x0]
  402260:	bl	4020f0 <isempty>
  402264:	and	w0, w0, #0xff
  402268:	cmp	w0, #0x0
  40226c:	b.ne	40227c <network_save+0xc4>  // b.any
  402270:	ldr	x0, [sp, #40]
  402274:	ldr	x0, [x0]
  402278:	b	402284 <network_save+0xcc>
  40227c:	adrp	x0, 407000 <network_dump+0x318>
  402280:	add	x0, x0, #0x3f0
  402284:	add	x4, sp, #0x38
  402288:	mov	x3, x0
  40228c:	mov	x2, x19
  402290:	adrp	x0, 407000 <network_dump+0x318>
  402294:	add	x1, x0, #0x3f8
  402298:	mov	x0, x4
  40229c:	bl	401cd0 <asprintf@plt>
  4022a0:	str	w0, [sp, #52]
  4022a4:	ldr	w0, [sp, #52]
  4022a8:	cmp	w0, #0x0
  4022ac:	b.ge	4022d4 <network_save+0x11c>  // b.tcont
  4022b0:	adrp	x0, 407000 <network_dump+0x318>
  4022b4:	add	x1, x0, #0x3bb
  4022b8:	adrp	x0, 407000 <network_dump+0x318>
  4022bc:	add	x3, x0, #0x6d0
  4022c0:	mov	w2, #0x1d                  	// #29
  4022c4:	mov	w0, #0x0                   	// #0
  4022c8:	bl	401d80 <log_oom_internal@plt>
  4022cc:	mov	w19, w0
  4022d0:	b	402320 <network_save+0x168>
  4022d4:	ldr	x0, [sp, #56]
  4022d8:	add	x1, sp, #0x40
  4022dc:	mov	x3, x1
  4022e0:	mov	x2, x0
  4022e4:	adrp	x0, 407000 <network_dump+0x318>
  4022e8:	add	x1, x0, #0x408
  4022ec:	ldr	x0, [sp, #32]
  4022f0:	bl	401ce0 <generator_open_unit_file@plt>
  4022f4:	str	w0, [sp, #52]
  4022f8:	ldr	w0, [sp, #52]
  4022fc:	cmp	w0, #0x0
  402300:	b.ge	40230c <network_save+0x154>  // b.tcont
  402304:	ldr	w19, [sp, #52]
  402308:	b	402320 <network_save+0x168>
  40230c:	ldr	x0, [sp, #64]
  402310:	mov	x1, x0
  402314:	ldr	x0, [sp, #40]
  402318:	bl	406ce8 <network_dump>
  40231c:	mov	w19, #0x0                   	// #0
  402320:	add	x0, sp, #0x40
  402324:	bl	401f98 <fclosep>
  402328:	add	x0, sp, #0x38
  40232c:	bl	401fbc <freep>
  402330:	mov	w1, w19
  402334:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  402338:	add	x0, x0, #0xb90
  40233c:	ldr	x2, [sp, #72]
  402340:	ldr	x0, [x0]
  402344:	eor	x0, x2, x0
  402348:	cmp	x0, #0x0
  40234c:	b.eq	402354 <network_save+0x19c>  // b.none
  402350:	bl	401bb0 <__stack_chk_fail@plt>
  402354:	mov	w0, w1
  402358:	ldr	x19, [sp, #16]
  40235c:	ldp	x29, x30, [sp], #80
  402360:	ret

0000000000402364 <netdev_save>:
  402364:	stp	x29, x30, [sp, #-80]!
  402368:	mov	x29, sp
  40236c:	str	x19, [sp, #16]
  402370:	str	x0, [sp, #40]
  402374:	str	x1, [sp, #32]
  402378:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  40237c:	add	x0, x0, #0xb90
  402380:	ldr	x1, [x0]
  402384:	str	x1, [sp, #72]
  402388:	mov	x1, #0x0                   	// #0
  40238c:	str	xzr, [sp, #56]
  402390:	str	xzr, [sp, #64]
  402394:	ldr	x0, [sp, #40]
  402398:	cmp	x0, #0x0
  40239c:	cset	w0, eq  // eq = none
  4023a0:	and	w0, w0, #0xff
  4023a4:	and	x0, x0, #0xff
  4023a8:	cmp	x0, #0x0
  4023ac:	b.eq	4023d8 <netdev_save+0x74>  // b.none
  4023b0:	adrp	x0, 407000 <network_dump+0x318>
  4023b4:	add	x1, x0, #0x3bb
  4023b8:	adrp	x0, 407000 <network_dump+0x318>
  4023bc:	add	x4, x0, #0x6e0
  4023c0:	mov	w3, #0x2d                  	// #45
  4023c4:	mov	x2, x1
  4023c8:	adrp	x0, 407000 <network_dump+0x318>
  4023cc:	add	x1, x0, #0x420
  4023d0:	mov	w0, #0x0                   	// #0
  4023d4:	bl	401b00 <log_assert_failed_realm@plt>
  4023d8:	ldr	x0, [sp, #40]
  4023dc:	ldr	x0, [x0]
  4023e0:	add	x3, sp, #0x38
  4023e4:	mov	x2, x0
  4023e8:	adrp	x0, 407000 <network_dump+0x318>
  4023ec:	add	x1, x0, #0x428
  4023f0:	mov	x0, x3
  4023f4:	bl	401cd0 <asprintf@plt>
  4023f8:	str	w0, [sp, #52]
  4023fc:	ldr	w0, [sp, #52]
  402400:	cmp	w0, #0x0
  402404:	b.ge	40242c <netdev_save+0xc8>  // b.tcont
  402408:	adrp	x0, 407000 <network_dump+0x318>
  40240c:	add	x1, x0, #0x3bb
  402410:	adrp	x0, 407000 <network_dump+0x318>
  402414:	add	x3, x0, #0x6f0
  402418:	mov	w2, #0x32                  	// #50
  40241c:	mov	w0, #0x0                   	// #0
  402420:	bl	401d80 <log_oom_internal@plt>
  402424:	mov	w19, w0
  402428:	b	402478 <netdev_save+0x114>
  40242c:	ldr	x0, [sp, #56]
  402430:	add	x1, sp, #0x40
  402434:	mov	x3, x1
  402438:	mov	x2, x0
  40243c:	adrp	x0, 407000 <network_dump+0x318>
  402440:	add	x1, x0, #0x408
  402444:	ldr	x0, [sp, #32]
  402448:	bl	401ce0 <generator_open_unit_file@plt>
  40244c:	str	w0, [sp, #52]
  402450:	ldr	w0, [sp, #52]
  402454:	cmp	w0, #0x0
  402458:	b.ge	402464 <netdev_save+0x100>  // b.tcont
  40245c:	ldr	w19, [sp, #52]
  402460:	b	402478 <netdev_save+0x114>
  402464:	ldr	x0, [sp, #64]
  402468:	mov	x1, x0
  40246c:	ldr	x0, [sp, #40]
  402470:	bl	4070c0 <netdev_dump>
  402474:	mov	w19, #0x0                   	// #0
  402478:	add	x0, sp, #0x40
  40247c:	bl	401f98 <fclosep>
  402480:	add	x0, sp, #0x38
  402484:	bl	401fbc <freep>
  402488:	mov	w1, w19
  40248c:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  402490:	add	x0, x0, #0xb90
  402494:	ldr	x2, [sp, #72]
  402498:	ldr	x0, [x0]
  40249c:	eor	x0, x2, x0
  4024a0:	cmp	x0, #0x0
  4024a4:	b.eq	4024ac <netdev_save+0x148>  // b.none
  4024a8:	bl	401bb0 <__stack_chk_fail@plt>
  4024ac:	mov	w0, w1
  4024b0:	ldr	x19, [sp, #16]
  4024b4:	ldp	x29, x30, [sp], #80
  4024b8:	ret

00000000004024bc <link_save>:
  4024bc:	stp	x29, x30, [sp, #-80]!
  4024c0:	mov	x29, sp
  4024c4:	str	x19, [sp, #16]
  4024c8:	str	x0, [sp, #40]
  4024cc:	str	x1, [sp, #32]
  4024d0:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4024d4:	add	x0, x0, #0xb90
  4024d8:	ldr	x1, [x0]
  4024dc:	str	x1, [sp, #72]
  4024e0:	mov	x1, #0x0                   	// #0
  4024e4:	str	xzr, [sp, #56]
  4024e8:	str	xzr, [sp, #64]
  4024ec:	ldr	x0, [sp, #40]
  4024f0:	cmp	x0, #0x0
  4024f4:	cset	w0, eq  // eq = none
  4024f8:	and	w0, w0, #0xff
  4024fc:	and	x0, x0, #0xff
  402500:	cmp	x0, #0x0
  402504:	b.eq	402530 <link_save+0x74>  // b.none
  402508:	adrp	x0, 407000 <network_dump+0x318>
  40250c:	add	x1, x0, #0x3bb
  402510:	adrp	x0, 407000 <network_dump+0x318>
  402514:	add	x4, x0, #0x700
  402518:	mov	w3, #0x42                  	// #66
  40251c:	mov	x2, x1
  402520:	adrp	x0, 407000 <network_dump+0x318>
  402524:	add	x1, x0, #0x438
  402528:	mov	w0, #0x0                   	// #0
  40252c:	bl	401b00 <log_assert_failed_realm@plt>
  402530:	ldr	x0, [sp, #40]
  402534:	ldr	x0, [x0]
  402538:	add	x3, sp, #0x38
  40253c:	mov	x2, x0
  402540:	adrp	x0, 407000 <network_dump+0x318>
  402544:	add	x1, x0, #0x440
  402548:	mov	x0, x3
  40254c:	bl	401cd0 <asprintf@plt>
  402550:	str	w0, [sp, #52]
  402554:	ldr	w0, [sp, #52]
  402558:	cmp	w0, #0x0
  40255c:	b.ge	402584 <link_save+0xc8>  // b.tcont
  402560:	adrp	x0, 407000 <network_dump+0x318>
  402564:	add	x1, x0, #0x3bb
  402568:	adrp	x0, 407000 <network_dump+0x318>
  40256c:	add	x3, x0, #0x710
  402570:	mov	w2, #0x47                  	// #71
  402574:	mov	w0, #0x0                   	// #0
  402578:	bl	401d80 <log_oom_internal@plt>
  40257c:	mov	w19, w0
  402580:	b	4025d0 <link_save+0x114>
  402584:	ldr	x0, [sp, #56]
  402588:	add	x1, sp, #0x40
  40258c:	mov	x3, x1
  402590:	mov	x2, x0
  402594:	adrp	x0, 407000 <network_dump+0x318>
  402598:	add	x1, x0, #0x408
  40259c:	ldr	x0, [sp, #32]
  4025a0:	bl	401ce0 <generator_open_unit_file@plt>
  4025a4:	str	w0, [sp, #52]
  4025a8:	ldr	w0, [sp, #52]
  4025ac:	cmp	w0, #0x0
  4025b0:	b.ge	4025bc <link_save+0x100>  // b.tcont
  4025b4:	ldr	w19, [sp, #52]
  4025b8:	b	4025d0 <link_save+0x114>
  4025bc:	ldr	x0, [sp, #64]
  4025c0:	mov	x1, x0
  4025c4:	ldr	x0, [sp, #40]
  4025c8:	bl	4071b8 <link_dump>
  4025cc:	mov	w19, #0x0                   	// #0
  4025d0:	add	x0, sp, #0x40
  4025d4:	bl	401f98 <fclosep>
  4025d8:	add	x0, sp, #0x38
  4025dc:	bl	401fbc <freep>
  4025e0:	mov	w1, w19
  4025e4:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4025e8:	add	x0, x0, #0xb90
  4025ec:	ldr	x2, [sp, #72]
  4025f0:	ldr	x0, [x0]
  4025f4:	eor	x0, x2, x0
  4025f8:	cmp	x0, #0x0
  4025fc:	b.eq	402604 <link_save+0x148>  // b.none
  402600:	bl	401bb0 <__stack_chk_fail@plt>
  402604:	mov	w0, w1
  402608:	ldr	x19, [sp, #16]
  40260c:	ldp	x29, x30, [sp], #80
  402610:	ret

0000000000402614 <context_save>:
  402614:	stp	x29, x30, [sp, #-192]!
  402618:	mov	x29, sp
  40261c:	str	x19, [sp, #16]
  402620:	str	x0, [x29, #40]
  402624:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  402628:	add	x0, x0, #0xb90
  40262c:	ldr	x1, [x0]
  402630:	str	x1, [x29, #184]
  402634:	mov	x1, #0x0                   	// #0
  402638:	str	wzr, [x29, #60]
  40263c:	adrp	x0, 407000 <network_dump+0x318>
  402640:	add	x0, x0, #0x450
  402644:	str	x0, [x29, #104]
  402648:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  40264c:	add	x0, x0, #0x28
  402650:	ldr	x0, [x0]
  402654:	str	x0, [x29, #128]
  402658:	b	402668 <context_save+0x54>
  40265c:	ldr	x0, [x29, #104]
  402660:	add	x0, x0, #0x1
  402664:	str	x0, [x29, #104]
  402668:	ldr	x0, [x29, #104]
  40266c:	ldrb	w0, [x0]
  402670:	cmp	w0, #0x2f
  402674:	b.ne	40268c <context_save+0x78>  // b.any
  402678:	ldr	x0, [x29, #104]
  40267c:	add	x0, x0, #0x1
  402680:	ldrb	w0, [x0]
  402684:	cmp	w0, #0x2f
  402688:	b.eq	40265c <context_save+0x48>  // b.none
  40268c:	ldr	x0, [x29, #128]
  402690:	bl	4020f0 <isempty>
  402694:	and	w0, w0, #0xff
  402698:	cmp	w0, #0x0
  40269c:	b.eq	4026ac <context_save+0x98>  // b.none
  4026a0:	ldr	x0, [x29, #104]
  4026a4:	str	x0, [x29, #112]
  4026a8:	b	402800 <context_save+0x1ec>
  4026ac:	ldr	x0, [x29, #128]
  4026b0:	bl	401d70 <strlen@plt>
  4026b4:	mov	x19, x0
  4026b8:	ldr	x0, [x29, #104]
  4026bc:	bl	401d70 <strlen@plt>
  4026c0:	add	x0, x19, x0
  4026c4:	add	x0, x0, #0x2
  4026c8:	str	x0, [x29, #136]
  4026cc:	ldr	x0, [x29, #136]
  4026d0:	str	x0, [x29, #144]
  4026d4:	ldr	x1, [x29, #144]
  4026d8:	mov	x0, #0x1                   	// #1
  4026dc:	bl	401fe0 <size_multiply_overflow>
  4026e0:	and	w0, w0, #0xff
  4026e4:	and	x0, x0, #0xff
  4026e8:	cmp	x0, #0x0
  4026ec:	b.eq	402718 <context_save+0x104>  // b.none
  4026f0:	adrp	x0, 407000 <network_dump+0x318>
  4026f4:	add	x1, x0, #0x3bb
  4026f8:	adrp	x0, 407000 <network_dump+0x318>
  4026fc:	add	x4, x0, #0x720
  402700:	mov	w3, #0x5a                  	// #90
  402704:	mov	x2, x1
  402708:	adrp	x0, 407000 <network_dump+0x318>
  40270c:	add	x1, x0, #0x468
  402710:	mov	w0, #0x0                   	// #0
  402714:	bl	401b00 <log_assert_failed_realm@plt>
  402718:	ldr	x0, [x29, #144]
  40271c:	cmp	x0, #0x400, lsl #12
  402720:	cset	w0, hi  // hi = pmore
  402724:	and	w0, w0, #0xff
  402728:	and	x0, x0, #0xff
  40272c:	cmp	x0, #0x0
  402730:	b.eq	40275c <context_save+0x148>  // b.none
  402734:	adrp	x0, 407000 <network_dump+0x318>
  402738:	add	x1, x0, #0x3bb
  40273c:	adrp	x0, 407000 <network_dump+0x318>
  402740:	add	x4, x0, #0x720
  402744:	mov	w3, #0x5a                  	// #90
  402748:	mov	x2, x1
  40274c:	adrp	x0, 407000 <network_dump+0x318>
  402750:	add	x1, x0, #0x498
  402754:	mov	w0, #0x0                   	// #0
  402758:	bl	401b00 <log_assert_failed_realm@plt>
  40275c:	ldr	x0, [x29, #144]
  402760:	add	x0, x0, #0xf
  402764:	lsr	x0, x0, #4
  402768:	lsl	x0, x0, #4
  40276c:	sub	sp, sp, x0
  402770:	mov	x0, sp
  402774:	add	x0, x0, #0xf
  402778:	lsr	x0, x0, #4
  40277c:	lsl	x0, x0, #4
  402780:	str	x0, [x29, #152]
  402784:	ldr	x1, [x29, #128]
  402788:	ldr	x0, [x29, #152]
  40278c:	bl	4019f0 <stpcpy@plt>
  402790:	str	x0, [x29, #120]
  402794:	b	4027a4 <context_save+0x190>
  402798:	ldr	x0, [x29, #120]
  40279c:	sub	x0, x0, #0x1
  4027a0:	str	x0, [x29, #120]
  4027a4:	ldr	x1, [x29, #120]
  4027a8:	ldr	x0, [x29, #152]
  4027ac:	cmp	x1, x0
  4027b0:	b.ls	4027c8 <context_save+0x1b4>  // b.plast
  4027b4:	ldr	x0, [x29, #120]
  4027b8:	sub	x0, x0, #0x1
  4027bc:	ldrb	w0, [x0]
  4027c0:	cmp	w0, #0x2f
  4027c4:	b.eq	402798 <context_save+0x184>  // b.none
  4027c8:	ldr	x0, [x29, #104]
  4027cc:	ldrb	w0, [x0]
  4027d0:	cmp	w0, #0x2f
  4027d4:	b.eq	4027ec <context_save+0x1d8>  // b.none
  4027d8:	ldr	x0, [x29, #120]
  4027dc:	add	x1, x0, #0x1
  4027e0:	str	x1, [x29, #120]
  4027e4:	mov	w1, #0x2f                  	// #47
  4027e8:	strb	w1, [x0]
  4027ec:	ldr	x1, [x29, #104]
  4027f0:	ldr	x0, [x29, #120]
  4027f4:	bl	401d50 <strcpy@plt>
  4027f8:	ldr	x0, [x29, #152]
  4027fc:	str	x0, [x29, #112]
  402800:	ldr	x0, [x29, #112]
  402804:	str	x0, [x29, #160]
  402808:	mov	w1, #0x1ed                 	// #493
  40280c:	ldr	x0, [x29, #160]
  402810:	bl	401d30 <mkdir_p@plt>
  402814:	str	w0, [x29, #60]
  402818:	ldr	w0, [x29, #60]
  40281c:	cmp	w0, #0x0
  402820:	b.ge	4028ac <context_save+0x298>  // b.tcont
  402824:	mov	w0, #0x3                   	// #3
  402828:	str	w0, [x29, #68]
  40282c:	ldr	w0, [x29, #60]
  402830:	str	w0, [x29, #72]
  402834:	str	wzr, [x29, #76]
  402838:	ldr	w0, [x29, #76]
  40283c:	bl	401d90 <log_get_max_level_realm@plt>
  402840:	mov	w1, w0
  402844:	ldr	w0, [x29, #68]
  402848:	and	w0, w0, #0x7
  40284c:	cmp	w1, w0
  402850:	b.lt	402894 <context_save+0x280>  // b.tstop
  402854:	ldr	w0, [x29, #76]
  402858:	lsl	w1, w0, #10
  40285c:	ldr	w0, [x29, #68]
  402860:	orr	w6, w1, w0
  402864:	adrp	x0, 407000 <network_dump+0x318>
  402868:	add	x1, x0, #0x3bb
  40286c:	adrp	x0, 407000 <network_dump+0x318>
  402870:	add	x5, x0, #0x4b8
  402874:	adrp	x0, 407000 <network_dump+0x318>
  402878:	add	x4, x0, #0x730
  40287c:	mov	w3, #0x5e                  	// #94
  402880:	mov	x2, x1
  402884:	ldr	w1, [x29, #72]
  402888:	mov	w0, w6
  40288c:	bl	401c20 <log_internal_realm@plt>
  402890:	b	4029dc <context_save+0x3c8>
  402894:	ldr	w0, [x29, #72]
  402898:	cmp	w0, #0x0
  40289c:	cneg	w0, w0, lt  // lt = tstop
  4028a0:	and	w0, w0, #0xff
  4028a4:	neg	w0, w0
  4028a8:	b	4029dc <context_save+0x3c8>
  4028ac:	mov	w0, #0xfffffffe            	// #-2
  4028b0:	str	w0, [x29, #168]
  4028b4:	str	xzr, [x29, #176]
  4028b8:	b	4028ec <context_save+0x2d8>
  4028bc:	ldr	x0, [x29, #80]
  4028c0:	ldr	x1, [x29, #160]
  4028c4:	bl	4021b8 <network_save>
  4028c8:	str	w0, [x29, #64]
  4028cc:	ldr	w0, [x29, #64]
  4028d0:	cmp	w0, #0x0
  4028d4:	b.ge	4028ec <context_save+0x2d8>  // b.tcont
  4028d8:	ldr	w0, [x29, #60]
  4028dc:	cmp	w0, #0x0
  4028e0:	b.lt	4028ec <context_save+0x2d8>  // b.tstop
  4028e4:	ldr	w0, [x29, #64]
  4028e8:	str	w0, [x29, #60]
  4028ec:	ldr	x0, [x29, #40]
  4028f0:	ldr	x0, [x0]
  4028f4:	add	x2, x29, #0x50
  4028f8:	add	x1, x29, #0xa8
  4028fc:	mov	x3, #0x0                   	// #0
  402900:	bl	402094 <hashmap_iterate>
  402904:	and	w0, w0, #0xff
  402908:	cmp	w0, #0x0
  40290c:	b.ne	4028bc <context_save+0x2a8>  // b.any
  402910:	mov	w0, #0xfffffffe            	// #-2
  402914:	str	w0, [x29, #168]
  402918:	str	xzr, [x29, #176]
  40291c:	b	402950 <context_save+0x33c>
  402920:	ldr	x0, [x29, #88]
  402924:	ldr	x1, [x29, #160]
  402928:	bl	402364 <netdev_save>
  40292c:	str	w0, [x29, #64]
  402930:	ldr	w0, [x29, #64]
  402934:	cmp	w0, #0x0
  402938:	b.ge	402950 <context_save+0x33c>  // b.tcont
  40293c:	ldr	w0, [x29, #60]
  402940:	cmp	w0, #0x0
  402944:	b.lt	402950 <context_save+0x33c>  // b.tstop
  402948:	ldr	w0, [x29, #64]
  40294c:	str	w0, [x29, #60]
  402950:	ldr	x0, [x29, #40]
  402954:	ldr	x0, [x0, #8]
  402958:	add	x2, x29, #0x58
  40295c:	add	x1, x29, #0xa8
  402960:	mov	x3, #0x0                   	// #0
  402964:	bl	402094 <hashmap_iterate>
  402968:	and	w0, w0, #0xff
  40296c:	cmp	w0, #0x0
  402970:	b.ne	402920 <context_save+0x30c>  // b.any
  402974:	mov	w0, #0xfffffffe            	// #-2
  402978:	str	w0, [x29, #168]
  40297c:	str	xzr, [x29, #176]
  402980:	b	4029b4 <context_save+0x3a0>
  402984:	ldr	x0, [x29, #96]
  402988:	ldr	x1, [x29, #160]
  40298c:	bl	4024bc <link_save>
  402990:	str	w0, [x29, #64]
  402994:	ldr	w0, [x29, #64]
  402998:	cmp	w0, #0x0
  40299c:	b.ge	4029b4 <context_save+0x3a0>  // b.tcont
  4029a0:	ldr	w0, [x29, #60]
  4029a4:	cmp	w0, #0x0
  4029a8:	b.lt	4029b4 <context_save+0x3a0>  // b.tstop
  4029ac:	ldr	w0, [x29, #64]
  4029b0:	str	w0, [x29, #60]
  4029b4:	ldr	x0, [x29, #40]
  4029b8:	ldr	x0, [x0, #16]
  4029bc:	add	x2, x29, #0x60
  4029c0:	add	x1, x29, #0xa8
  4029c4:	mov	x3, #0x0                   	// #0
  4029c8:	bl	402094 <hashmap_iterate>
  4029cc:	and	w0, w0, #0xff
  4029d0:	cmp	w0, #0x0
  4029d4:	b.ne	402984 <context_save+0x370>  // b.any
  4029d8:	ldr	w0, [x29, #60]
  4029dc:	mov	w1, w0
  4029e0:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4029e4:	add	x0, x0, #0xb90
  4029e8:	ldr	x2, [x29, #184]
  4029ec:	ldr	x0, [x0]
  4029f0:	eor	x0, x2, x0
  4029f4:	cmp	x0, #0x0
  4029f8:	b.eq	402a00 <context_save+0x3ec>  // b.none
  4029fc:	bl	401bb0 <__stack_chk_fail@plt>
  402a00:	mov	w0, w1
  402a04:	mov	sp, x29
  402a08:	ldr	x19, [sp, #16]
  402a0c:	ldp	x29, x30, [sp], #192
  402a10:	ret

0000000000402a14 <help>:
  402a14:	stp	x29, x30, [sp, #-16]!
  402a18:	mov	x29, sp
  402a1c:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  402a20:	add	x0, x0, #0x8
  402a24:	ldr	x0, [x0]
  402a28:	mov	x1, x0
  402a2c:	adrp	x0, 407000 <network_dump+0x318>
  402a30:	add	x0, x0, #0x4f0
  402a34:	bl	401d40 <printf@plt>
  402a38:	mov	w0, #0x0                   	// #0
  402a3c:	ldp	x29, x30, [sp], #16
  402a40:	ret

0000000000402a44 <parse_argv>:
  402a44:	stp	x29, x30, [sp, #-48]!
  402a48:	mov	x29, sp
  402a4c:	str	w0, [sp, #28]
  402a50:	str	x1, [sp, #16]
  402a54:	ldr	w0, [sp, #28]
  402a58:	lsr	w0, w0, #31
  402a5c:	and	w0, w0, #0xff
  402a60:	and	x0, x0, #0xff
  402a64:	cmp	x0, #0x0
  402a68:	b.eq	402a94 <parse_argv+0x50>  // b.none
  402a6c:	adrp	x0, 407000 <network_dump+0x318>
  402a70:	add	x1, x0, #0x3bb
  402a74:	adrp	x0, 407000 <network_dump+0x318>
  402a78:	add	x4, x0, #0x740
  402a7c:	mov	w3, #0x8d                  	// #141
  402a80:	mov	x2, x1
  402a84:	adrp	x0, 407000 <network_dump+0x318>
  402a88:	add	x1, x0, #0x5c8
  402a8c:	mov	w0, #0x0                   	// #0
  402a90:	bl	401b00 <log_assert_failed_realm@plt>
  402a94:	ldr	x0, [sp, #16]
  402a98:	cmp	x0, #0x0
  402a9c:	cset	w0, eq  // eq = none
  402aa0:	and	w0, w0, #0xff
  402aa4:	and	x0, x0, #0xff
  402aa8:	cmp	x0, #0x0
  402aac:	b.eq	402b7c <parse_argv+0x138>  // b.none
  402ab0:	adrp	x0, 407000 <network_dump+0x318>
  402ab4:	add	x1, x0, #0x3bb
  402ab8:	adrp	x0, 407000 <network_dump+0x318>
  402abc:	add	x4, x0, #0x740
  402ac0:	mov	w3, #0x8e                  	// #142
  402ac4:	mov	x2, x1
  402ac8:	adrp	x0, 407000 <network_dump+0x318>
  402acc:	add	x1, x0, #0x5d8
  402ad0:	mov	w0, #0x0                   	// #0
  402ad4:	bl	401b00 <log_assert_failed_realm@plt>
  402ad8:	ldr	w0, [sp, #44]
  402adc:	cmp	w0, #0x101
  402ae0:	b.eq	402b30 <parse_argv+0xec>  // b.none
  402ae4:	ldr	w0, [sp, #44]
  402ae8:	cmp	w0, #0x101
  402aec:	b.gt	402b54 <parse_argv+0x110>
  402af0:	ldr	w0, [sp, #44]
  402af4:	cmp	w0, #0x100
  402af8:	b.eq	402b28 <parse_argv+0xe4>  // b.none
  402afc:	ldr	w0, [sp, #44]
  402b00:	cmp	w0, #0x100
  402b04:	b.gt	402b54 <parse_argv+0x110>
  402b08:	ldr	w0, [sp, #44]
  402b0c:	cmp	w0, #0x3f
  402b10:	b.eq	402b4c <parse_argv+0x108>  // b.none
  402b14:	ldr	w0, [sp, #44]
  402b18:	cmp	w0, #0x68
  402b1c:	b.ne	402b54 <parse_argv+0x110>  // b.any
  402b20:	bl	402a14 <help>
  402b24:	b	402bb0 <parse_argv+0x16c>
  402b28:	bl	401bd0 <version@plt>
  402b2c:	b	402bb0 <parse_argv+0x16c>
  402b30:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  402b34:	add	x0, x0, #0x18
  402b38:	ldr	x1, [x0]
  402b3c:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  402b40:	add	x0, x0, #0x28
  402b44:	str	x1, [x0]
  402b48:	b	402b7c <parse_argv+0x138>
  402b4c:	mov	w0, #0xffffffea            	// #-22
  402b50:	b	402bb0 <parse_argv+0x16c>
  402b54:	adrp	x0, 407000 <network_dump+0x318>
  402b58:	add	x1, x0, #0x3bb
  402b5c:	adrp	x0, 407000 <network_dump+0x318>
  402b60:	add	x4, x0, #0x740
  402b64:	mov	w3, #0xa2                  	// #162
  402b68:	mov	x2, x1
  402b6c:	adrp	x0, 407000 <network_dump+0x318>
  402b70:	add	x1, x0, #0x5e0
  402b74:	mov	w0, #0x0                   	// #0
  402b78:	bl	401b20 <log_assert_failed_unreachable_realm@plt>
  402b7c:	mov	x4, #0x0                   	// #0
  402b80:	adrp	x0, 407000 <network_dump+0x318>
  402b84:	add	x3, x0, #0x750
  402b88:	adrp	x0, 407000 <network_dump+0x318>
  402b8c:	add	x2, x0, #0x5f8
  402b90:	ldr	x1, [sp, #16]
  402b94:	ldr	w0, [sp, #28]
  402b98:	bl	401b10 <getopt_long@plt>
  402b9c:	str	w0, [sp, #44]
  402ba0:	ldr	w0, [sp, #44]
  402ba4:	cmp	w0, #0x0
  402ba8:	b.ge	402ad8 <parse_argv+0x94>  // b.tcont
  402bac:	mov	w0, #0x1                   	// #1
  402bb0:	ldp	x29, x30, [sp], #48
  402bb4:	ret

0000000000402bb8 <run>:
  402bb8:	sub	sp, sp, #0xb0
  402bbc:	stp	x29, x30, [sp, #16]
  402bc0:	add	x29, sp, #0x10
  402bc4:	stp	x19, x20, [sp, #32]
  402bc8:	stp	x21, x22, [sp, #48]
  402bcc:	str	w0, [sp, #76]
  402bd0:	str	x1, [sp, #64]
  402bd4:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  402bd8:	add	x0, x0, #0xb90
  402bdc:	ldr	x1, [x0]
  402be0:	str	x1, [sp, #168]
  402be4:	mov	x1, #0x0                   	// #0
  402be8:	stp	xzr, xzr, [sp, #144]
  402bec:	str	xzr, [sp, #160]
  402bf0:	ldr	x1, [sp, #64]
  402bf4:	ldr	w0, [sp, #76]
  402bf8:	bl	402a44 <parse_argv>
  402bfc:	str	w0, [sp, #88]
  402c00:	ldr	w0, [sp, #88]
  402c04:	cmp	w0, #0x0
  402c08:	b.gt	402c14 <run+0x5c>
  402c0c:	ldr	w19, [sp, #88]
  402c10:	b	402f40 <run+0x388>
  402c14:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  402c18:	add	x0, x0, #0x10
  402c1c:	ldr	w0, [x0]
  402c20:	ldr	w1, [sp, #76]
  402c24:	cmp	w1, w0
  402c28:	b.gt	402ce0 <run+0x128>
  402c2c:	add	x0, sp, #0x90
  402c30:	mov	w2, #0x0                   	// #0
  402c34:	mov	x1, x0
  402c38:	adrp	x0, 406000 <parse_cmdline_bridge+0x1b0>
  402c3c:	add	x0, x0, #0x4f8
  402c40:	bl	401cc0 <proc_cmdline_parse@plt>
  402c44:	str	w0, [sp, #88]
  402c48:	ldr	w0, [sp, #88]
  402c4c:	cmp	w0, #0x0
  402c50:	b.ge	402e90 <run+0x2d8>  // b.tcont
  402c54:	mov	w0, #0x4                   	// #4
  402c58:	str	w0, [sp, #104]
  402c5c:	ldr	w0, [sp, #88]
  402c60:	str	w0, [sp, #108]
  402c64:	str	wzr, [sp, #112]
  402c68:	ldr	w0, [sp, #112]
  402c6c:	bl	401d90 <log_get_max_level_realm@plt>
  402c70:	mov	w1, w0
  402c74:	ldr	w0, [sp, #104]
  402c78:	and	w0, w0, #0x7
  402c7c:	cmp	w1, w0
  402c80:	b.lt	402cc8 <run+0x110>  // b.tstop
  402c84:	ldr	w0, [sp, #112]
  402c88:	lsl	w1, w0, #10
  402c8c:	ldr	w0, [sp, #104]
  402c90:	orr	w6, w1, w0
  402c94:	adrp	x0, 407000 <network_dump+0x318>
  402c98:	add	x1, x0, #0x3bb
  402c9c:	adrp	x0, 407000 <network_dump+0x318>
  402ca0:	add	x5, x0, #0x600
  402ca4:	adrp	x0, 407000 <network_dump+0x318>
  402ca8:	add	x4, x0, #0x7d0
  402cac:	mov	w3, #0xb3                  	// #179
  402cb0:	mov	x2, x1
  402cb4:	ldr	w1, [sp, #108]
  402cb8:	mov	w0, w6
  402cbc:	bl	401c20 <log_internal_realm@plt>
  402cc0:	mov	w19, w0
  402cc4:	b	402f40 <run+0x388>
  402cc8:	ldr	w0, [sp, #108]
  402ccc:	cmp	w0, #0x0
  402cd0:	cneg	w0, w0, lt  // lt = tstop
  402cd4:	and	w0, w0, #0xff
  402cd8:	neg	w19, w0
  402cdc:	b	402f40 <run+0x388>
  402ce0:	adrp	x0, 419000 <saved_argv@@SD_SHARED>
  402ce4:	add	x0, x0, #0x10
  402ce8:	ldr	w0, [x0]
  402cec:	str	w0, [sp, #84]
  402cf0:	b	402e80 <run+0x2c8>
  402cf4:	str	xzr, [sp, #128]
  402cf8:	ldrsw	x0, [sp, #84]
  402cfc:	lsl	x0, x0, #3
  402d00:	ldr	x1, [sp, #64]
  402d04:	add	x0, x1, x0
  402d08:	ldr	x0, [x0]
  402d0c:	bl	401c90 <strdup@plt>
  402d10:	str	x0, [sp, #128]
  402d14:	ldr	x0, [sp, #128]
  402d18:	cmp	x0, #0x0
  402d1c:	b.ne	402d48 <run+0x190>  // b.any
  402d20:	adrp	x0, 407000 <network_dump+0x318>
  402d24:	add	x1, x0, #0x3bb
  402d28:	adrp	x0, 407000 <network_dump+0x318>
  402d2c:	add	x3, x0, #0x7d0
  402d30:	mov	w2, #0xbb                  	// #187
  402d34:	mov	w0, #0x0                   	// #0
  402d38:	bl	401d80 <log_oom_internal@plt>
  402d3c:	mov	w19, w0
  402d40:	mov	w20, #0x0                   	// #0
  402d44:	b	402e64 <run+0x2ac>
  402d48:	ldr	x0, [sp, #128]
  402d4c:	mov	w1, #0x3d                  	// #61
  402d50:	bl	401cb0 <strchr@plt>
  402d54:	str	x0, [sp, #136]
  402d58:	ldr	x0, [sp, #136]
  402d5c:	cmp	x0, #0x0
  402d60:	b.eq	402d74 <run+0x1bc>  // b.none
  402d64:	ldr	x0, [sp, #136]
  402d68:	add	x1, x0, #0x1
  402d6c:	str	x1, [sp, #136]
  402d70:	strb	wzr, [x0]
  402d74:	ldr	x0, [sp, #128]
  402d78:	add	x1, sp, #0x90
  402d7c:	mov	x2, x1
  402d80:	ldr	x1, [sp, #136]
  402d84:	bl	4064f8 <parse_cmdline_item>
  402d88:	str	w0, [sp, #88]
  402d8c:	ldr	w0, [sp, #88]
  402d90:	cmp	w0, #0x0
  402d94:	b.ge	402e60 <run+0x2a8>  // b.tcont
  402d98:	mov	w0, #0x4                   	// #4
  402d9c:	str	w0, [sp, #92]
  402da0:	ldr	w0, [sp, #88]
  402da4:	str	w0, [sp, #96]
  402da8:	str	wzr, [sp, #100]
  402dac:	ldr	w0, [sp, #100]
  402db0:	bl	401d90 <log_get_max_level_realm@plt>
  402db4:	mov	w1, w0
  402db8:	ldr	w0, [sp, #92]
  402dbc:	and	w0, w0, #0x7
  402dc0:	cmp	w1, w0
  402dc4:	b.lt	402e44 <run+0x28c>  // b.tstop
  402dc8:	ldr	w0, [sp, #100]
  402dcc:	lsl	w1, w0, #10
  402dd0:	ldr	w0, [sp, #92]
  402dd4:	orr	w20, w1, w0
  402dd8:	adrp	x0, 407000 <network_dump+0x318>
  402ddc:	add	x21, x0, #0x3bb
  402de0:	ldr	x22, [sp, #128]
  402de4:	ldr	x0, [sp, #136]
  402de8:	cmp	x0, #0x0
  402dec:	b.eq	402dfc <run+0x244>  // b.none
  402df0:	adrp	x0, 407000 <network_dump+0x318>
  402df4:	add	x19, x0, #0x628
  402df8:	b	402e04 <run+0x24c>
  402dfc:	adrp	x0, 407000 <network_dump+0x318>
  402e00:	add	x19, x0, #0x3b0
  402e04:	ldr	x0, [sp, #136]
  402e08:	bl	4020cc <strempty>
  402e0c:	str	x0, [sp]
  402e10:	mov	x7, x19
  402e14:	mov	x6, x22
  402e18:	adrp	x0, 407000 <network_dump+0x318>
  402e1c:	add	x5, x0, #0x630
  402e20:	adrp	x0, 407000 <network_dump+0x318>
  402e24:	add	x4, x0, #0x7d0
  402e28:	mov	w3, #0xc3                  	// #195
  402e2c:	mov	x2, x21
  402e30:	ldr	w1, [sp, #96]
  402e34:	mov	w0, w20
  402e38:	bl	401c20 <log_internal_realm@plt>
  402e3c:	mov	w19, w0
  402e40:	b	402e58 <run+0x2a0>
  402e44:	ldr	w0, [sp, #96]
  402e48:	cmp	w0, #0x0
  402e4c:	cneg	w0, w0, lt  // lt = tstop
  402e50:	and	w0, w0, #0xff
  402e54:	neg	w19, w0
  402e58:	mov	w20, #0x0                   	// #0
  402e5c:	b	402e64 <run+0x2ac>
  402e60:	mov	w20, #0x1                   	// #1
  402e64:	add	x0, sp, #0x80
  402e68:	bl	401fbc <freep>
  402e6c:	cmp	w20, #0x1
  402e70:	b.ne	402f40 <run+0x388>  // b.any
  402e74:	ldr	w0, [sp, #84]
  402e78:	add	w0, w0, #0x1
  402e7c:	str	w0, [sp, #84]
  402e80:	ldr	w1, [sp, #84]
  402e84:	ldr	w0, [sp, #76]
  402e88:	cmp	w1, w0
  402e8c:	b.lt	402cf4 <run+0x13c>  // b.tstop
  402e90:	add	x0, sp, #0x90
  402e94:	bl	406708 <context_merge_networks>
  402e98:	str	w0, [sp, #88]
  402e9c:	ldr	w0, [sp, #88]
  402ea0:	cmp	w0, #0x0
  402ea4:	b.ge	402f34 <run+0x37c>  // b.tcont
  402ea8:	mov	w0, #0x4                   	// #4
  402eac:	str	w0, [sp, #116]
  402eb0:	ldr	w0, [sp, #88]
  402eb4:	str	w0, [sp, #120]
  402eb8:	str	wzr, [sp, #124]
  402ebc:	ldr	w0, [sp, #124]
  402ec0:	bl	401d90 <log_get_max_level_realm@plt>
  402ec4:	mov	w1, w0
  402ec8:	ldr	w0, [sp, #116]
  402ecc:	and	w0, w0, #0x7
  402ed0:	cmp	w1, w0
  402ed4:	b.lt	402f1c <run+0x364>  // b.tstop
  402ed8:	ldr	w0, [sp, #124]
  402edc:	lsl	w1, w0, #10
  402ee0:	ldr	w0, [sp, #116]
  402ee4:	orr	w6, w1, w0
  402ee8:	adrp	x0, 407000 <network_dump+0x318>
  402eec:	add	x1, x0, #0x3bb
  402ef0:	adrp	x0, 407000 <network_dump+0x318>
  402ef4:	add	x5, x0, #0x660
  402ef8:	adrp	x0, 407000 <network_dump+0x318>
  402efc:	add	x4, x0, #0x7d0
  402f00:	mov	w3, #0xca                  	// #202
  402f04:	mov	x2, x1
  402f08:	ldr	w1, [sp, #120]
  402f0c:	mov	w0, w6
  402f10:	bl	401c20 <log_internal_realm@plt>
  402f14:	mov	w19, w0
  402f18:	b	402f40 <run+0x388>
  402f1c:	ldr	w0, [sp, #120]
  402f20:	cmp	w0, #0x0
  402f24:	cneg	w0, w0, lt  // lt = tstop
  402f28:	and	w0, w0, #0xff
  402f2c:	neg	w19, w0
  402f30:	b	402f40 <run+0x388>
  402f34:	add	x0, sp, #0x90
  402f38:	bl	402614 <context_save>
  402f3c:	mov	w19, w0
  402f40:	add	x0, sp, #0x90
  402f44:	bl	40695c <context_clear>
  402f48:	mov	w1, w19
  402f4c:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  402f50:	add	x0, x0, #0xb90
  402f54:	ldr	x2, [sp, #168]
  402f58:	ldr	x0, [x0]
  402f5c:	eor	x0, x2, x0
  402f60:	cmp	x0, #0x0
  402f64:	b.eq	402f6c <run+0x3b4>  // b.none
  402f68:	bl	401bb0 <__stack_chk_fail@plt>
  402f6c:	mov	w0, w1
  402f70:	ldp	x19, x20, [sp, #32]
  402f74:	ldp	x21, x22, [sp, #48]
  402f78:	ldp	x29, x30, [sp, #16]
  402f7c:	add	sp, sp, #0xb0
  402f80:	ret

0000000000402f84 <main>:
  402f84:	stp	x29, x30, [sp, #-48]!
  402f88:	mov	x29, sp
  402f8c:	str	w0, [sp, #28]
  402f90:	str	x1, [sp, #16]
  402f94:	ldr	x1, [sp, #16]
  402f98:	ldr	w0, [sp, #28]
  402f9c:	bl	40205c <save_argc_argv>
  402fa0:	ldr	x1, [sp, #16]
  402fa4:	ldr	w0, [sp, #28]
  402fa8:	bl	402bb8 <run>
  402fac:	str	w0, [sp, #44]
  402fb0:	bl	401bc0 <ask_password_agent_close@plt>
  402fb4:	bl	401a60 <polkit_agent_close@plt>
  402fb8:	bl	401be0 <pager_close@plt>
  402fbc:	bl	401d20 <mac_selinux_finish@plt>
  402fc0:	bl	402130 <static_destruct>
  402fc4:	ldr	w0, [sp, #44]
  402fc8:	lsr	w0, w0, #31
  402fcc:	ldp	x29, x30, [sp], #48
  402fd0:	ret

0000000000402fd4 <mfree>:
  402fd4:	stp	x29, x30, [sp, #-32]!
  402fd8:	mov	x29, sp
  402fdc:	str	x0, [sp, #24]
  402fe0:	ldr	x0, [sp, #24]
  402fe4:	bl	401cf0 <free@plt>
  402fe8:	mov	x0, #0x0                   	// #0
  402fec:	ldp	x29, x30, [sp], #32
  402ff0:	ret

0000000000402ff4 <freep>:
  402ff4:	stp	x29, x30, [sp, #-32]!
  402ff8:	mov	x29, sp
  402ffc:	str	x0, [sp, #24]
  403000:	ldr	x0, [sp, #24]
  403004:	ldr	x0, [x0]
  403008:	bl	401cf0 <free@plt>
  40300c:	nop
  403010:	ldp	x29, x30, [sp], #32
  403014:	ret

0000000000403018 <size_multiply_overflow>:
  403018:	sub	sp, sp, #0x10
  40301c:	str	x0, [sp, #8]
  403020:	str	x1, [sp]
  403024:	ldr	x0, [sp]
  403028:	cmp	x0, #0x0
  40302c:	cset	w0, ne  // ne = any
  403030:	and	w0, w0, #0xff
  403034:	and	x0, x0, #0xff
  403038:	cmp	x0, #0x0
  40303c:	b.eq	403080 <size_multiply_overflow+0x68>  // b.none
  403040:	mov	x2, #0x0                   	// #0
  403044:	ldr	x1, [sp, #8]
  403048:	ldr	x0, [sp]
  40304c:	umulh	x0, x1, x0
  403050:	cmp	x0, #0x0
  403054:	b.eq	40305c <size_multiply_overflow+0x44>  // b.none
  403058:	mov	x2, #0x1                   	// #1
  40305c:	mov	x0, x2
  403060:	cmp	x0, #0x0
  403064:	cset	w0, ne  // ne = any
  403068:	and	w0, w0, #0xff
  40306c:	and	x0, x0, #0xff
  403070:	cmp	x0, #0x0
  403074:	b.eq	403080 <size_multiply_overflow+0x68>  // b.none
  403078:	mov	w0, #0x1                   	// #1
  40307c:	b	403084 <size_multiply_overflow+0x6c>
  403080:	mov	w0, #0x0                   	// #0
  403084:	and	w0, w0, #0x1
  403088:	and	w0, w0, #0xff
  40308c:	add	sp, sp, #0x10
  403090:	ret

0000000000403094 <malloc_multiply>:
  403094:	stp	x29, x30, [sp, #-32]!
  403098:	mov	x29, sp
  40309c:	str	x0, [sp, #24]
  4030a0:	str	x1, [sp, #16]
  4030a4:	ldr	x1, [sp, #16]
  4030a8:	ldr	x0, [sp, #24]
  4030ac:	bl	403018 <size_multiply_overflow>
  4030b0:	and	w0, w0, #0xff
  4030b4:	cmp	w0, #0x0
  4030b8:	b.eq	4030c4 <malloc_multiply+0x30>  // b.none
  4030bc:	mov	x0, #0x0                   	// #0
  4030c0:	b	4030e0 <malloc_multiply+0x4c>
  4030c4:	ldr	x1, [sp, #24]
  4030c8:	ldr	x0, [sp, #16]
  4030cc:	mul	x0, x1, x0
  4030d0:	cmp	x0, #0x0
  4030d4:	b.ne	4030dc <malloc_multiply+0x48>  // b.any
  4030d8:	mov	x0, #0x1                   	// #1
  4030dc:	bl	401c00 <malloc@plt>
  4030e0:	ldp	x29, x30, [sp], #32
  4030e4:	ret

00000000004030e8 <ether_addr_equal>:
  4030e8:	stp	x29, x30, [sp, #-32]!
  4030ec:	mov	x29, sp
  4030f0:	str	x0, [sp, #24]
  4030f4:	str	x1, [sp, #16]
  4030f8:	ldr	x1, [sp, #16]
  4030fc:	ldr	x0, [sp, #24]
  403100:	bl	401ae0 <ether_addr_compare@plt>
  403104:	cmp	w0, #0x0
  403108:	cset	w0, eq  // eq = none
  40310c:	and	w0, w0, #0xff
  403110:	ldp	x29, x30, [sp], #32
  403114:	ret

0000000000403118 <ether_addr_is_null>:
  403118:	stp	x29, x30, [sp, #-48]!
  40311c:	mov	x29, sp
  403120:	str	x0, [sp, #24]
  403124:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  403128:	add	x0, x0, #0xb90
  40312c:	ldr	x1, [x0]
  403130:	str	x1, [sp, #40]
  403134:	mov	x1, #0x0                   	// #0
  403138:	str	wzr, [sp, #32]
  40313c:	strh	wzr, [sp, #36]
  403140:	add	x0, sp, #0x20
  403144:	mov	x1, x0
  403148:	ldr	x0, [sp, #24]
  40314c:	bl	4030e8 <ether_addr_equal>
  403150:	and	w0, w0, #0xff
  403154:	mov	w1, w0
  403158:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  40315c:	add	x0, x0, #0xb90
  403160:	ldr	x2, [sp, #40]
  403164:	ldr	x0, [x0]
  403168:	eor	x0, x2, x0
  40316c:	cmp	x0, #0x0
  403170:	b.eq	403178 <ether_addr_is_null+0x60>  // b.none
  403174:	bl	401bb0 <__stack_chk_fail@plt>
  403178:	mov	w0, w1
  40317c:	ldp	x29, x30, [sp], #48
  403180:	ret

0000000000403184 <hashmap_free>:
  403184:	stp	x29, x30, [sp, #-32]!
  403188:	mov	x29, sp
  40318c:	str	x0, [sp, #24]
  403190:	mov	x2, #0x0                   	// #0
  403194:	mov	x1, #0x0                   	// #0
  403198:	ldr	x0, [sp, #24]
  40319c:	bl	4019e0 <internal_hashmap_free@plt>
  4031a0:	ldp	x29, x30, [sp], #32
  4031a4:	ret

00000000004031a8 <hashmap_get>:
  4031a8:	stp	x29, x30, [sp, #-32]!
  4031ac:	mov	x29, sp
  4031b0:	str	x0, [sp, #24]
  4031b4:	str	x1, [sp, #16]
  4031b8:	ldr	x1, [sp, #16]
  4031bc:	ldr	x0, [sp, #24]
  4031c0:	bl	401b60 <internal_hashmap_get@plt>
  4031c4:	ldp	x29, x30, [sp], #32
  4031c8:	ret

00000000004031cc <hashmap_remove>:
  4031cc:	stp	x29, x30, [sp, #-32]!
  4031d0:	mov	x29, sp
  4031d4:	str	x0, [sp, #24]
  4031d8:	str	x1, [sp, #16]
  4031dc:	ldr	x1, [sp, #16]
  4031e0:	ldr	x0, [sp, #24]
  4031e4:	bl	4019c0 <internal_hashmap_remove@plt>
  4031e8:	ldp	x29, x30, [sp], #32
  4031ec:	ret

00000000004031f0 <hashmap_size>:
  4031f0:	stp	x29, x30, [sp, #-32]!
  4031f4:	mov	x29, sp
  4031f8:	str	x0, [sp, #24]
  4031fc:	ldr	x0, [sp, #24]
  403200:	bl	401c10 <internal_hashmap_size@plt>
  403204:	ldp	x29, x30, [sp], #32
  403208:	ret

000000000040320c <hashmap_iterate>:
  40320c:	stp	x29, x30, [sp, #-48]!
  403210:	mov	x29, sp
  403214:	str	x0, [sp, #40]
  403218:	str	x1, [sp, #32]
  40321c:	str	x2, [sp, #24]
  403220:	str	x3, [sp, #16]
  403224:	ldr	x3, [sp, #16]
  403228:	ldr	x2, [sp, #24]
  40322c:	ldr	x1, [sp, #32]
  403230:	ldr	x0, [sp, #40]
  403234:	bl	401c80 <internal_hashmap_iterate@plt>
  403238:	and	w0, w0, #0xff
  40323c:	ldp	x29, x30, [sp], #48
  403240:	ret

0000000000403244 <hashmap_steal_first>:
  403244:	stp	x29, x30, [sp, #-32]!
  403248:	mov	x29, sp
  40324c:	str	x0, [sp, #24]
  403250:	mov	x2, #0x0                   	// #0
  403254:	mov	w1, #0x1                   	// #1
  403258:	ldr	x0, [sp, #24]
  40325c:	bl	401ca0 <internal_hashmap_first_key_and_value@plt>
  403260:	ldp	x29, x30, [sp], #32
  403264:	ret

0000000000403268 <proc_cmdline_value_missing>:
  403268:	stp	x29, x30, [sp, #-48]!
  40326c:	mov	x29, sp
  403270:	str	x0, [sp, #24]
  403274:	str	x1, [sp, #16]
  403278:	ldr	x0, [sp, #16]
  40327c:	cmp	x0, #0x0
  403280:	b.ne	403304 <proc_cmdline_value_missing+0x9c>  // b.any
  403284:	mov	w0, #0x4                   	// #4
  403288:	str	w0, [sp, #36]
  40328c:	str	wzr, [sp, #40]
  403290:	str	wzr, [sp, #44]
  403294:	ldr	w0, [sp, #44]
  403298:	bl	401d90 <log_get_max_level_realm@plt>
  40329c:	mov	w1, w0
  4032a0:	ldr	w0, [sp, #36]
  4032a4:	and	w0, w0, #0x7
  4032a8:	cmp	w1, w0
  4032ac:	b.lt	4032f4 <proc_cmdline_value_missing+0x8c>  // b.tstop
  4032b0:	ldr	w0, [sp, #44]
  4032b4:	lsl	w1, w0, #10
  4032b8:	ldr	w0, [sp, #36]
  4032bc:	orr	w7, w1, w0
  4032c0:	adrp	x0, 407000 <network_dump+0x318>
  4032c4:	add	x1, x0, #0x7db
  4032c8:	ldr	x6, [sp, #24]
  4032cc:	adrp	x0, 407000 <network_dump+0x318>
  4032d0:	add	x5, x0, #0x7f8
  4032d4:	adrp	x0, 407000 <network_dump+0x318>
  4032d8:	add	x4, x0, #0xca8
  4032dc:	mov	w3, #0x21                  	// #33
  4032e0:	mov	x2, x1
  4032e4:	ldr	w1, [sp, #40]
  4032e8:	mov	w0, w7
  4032ec:	bl	401c20 <log_internal_realm@plt>
  4032f0:	b	4032fc <proc_cmdline_value_missing+0x94>
  4032f4:	ldr	w0, [sp, #40]
  4032f8:	cmp	w0, #0x0
  4032fc:	mov	w0, #0x1                   	// #1
  403300:	b	403308 <proc_cmdline_value_missing+0xa0>
  403304:	mov	w0, #0x0                   	// #0
  403308:	ldp	x29, x30, [sp], #48
  40330c:	ret

0000000000403310 <yes_no>:
  403310:	sub	sp, sp, #0x10
  403314:	strb	w0, [sp, #15]
  403318:	ldrb	w0, [sp, #15]
  40331c:	cmp	w0, #0x0
  403320:	b.eq	403330 <yes_no+0x20>  // b.none
  403324:	adrp	x0, 407000 <network_dump+0x318>
  403328:	add	x0, x0, #0x838
  40332c:	b	403338 <yes_no+0x28>
  403330:	adrp	x0, 407000 <network_dump+0x318>
  403334:	add	x0, x0, #0x840
  403338:	add	sp, sp, #0x10
  40333c:	ret

0000000000403340 <isempty>:
  403340:	sub	sp, sp, #0x10
  403344:	str	x0, [sp, #8]
  403348:	ldr	x0, [sp, #8]
  40334c:	cmp	x0, #0x0
  403350:	b.eq	403364 <isempty+0x24>  // b.none
  403354:	ldr	x0, [sp, #8]
  403358:	ldrb	w0, [x0]
  40335c:	cmp	w0, #0x0
  403360:	b.ne	40336c <isempty+0x2c>  // b.any
  403364:	mov	w0, #0x1                   	// #1
  403368:	b	403370 <isempty+0x30>
  40336c:	mov	w0, #0x0                   	// #0
  403370:	and	w0, w0, #0x1
  403374:	and	w0, w0, #0xff
  403378:	add	sp, sp, #0x10
  40337c:	ret

0000000000403380 <strv_isempty>:
  403380:	sub	sp, sp, #0x10
  403384:	str	x0, [sp, #8]
  403388:	ldr	x0, [sp, #8]
  40338c:	cmp	x0, #0x0
  403390:	b.eq	4033a4 <strv_isempty+0x24>  // b.none
  403394:	ldr	x0, [sp, #8]
  403398:	ldr	x0, [x0]
  40339c:	cmp	x0, #0x0
  4033a0:	b.ne	4033ac <strv_isempty+0x2c>  // b.any
  4033a4:	mov	w0, #0x1                   	// #1
  4033a8:	b	4033b0 <strv_isempty+0x30>
  4033ac:	mov	w0, #0x0                   	// #0
  4033b0:	and	w0, w0, #0x1
  4033b4:	and	w0, w0, #0xff
  4033b8:	add	sp, sp, #0x10
  4033bc:	ret

00000000004033c0 <dracut_dhcp_type_from_string>:
  4033c0:	stp	x29, x30, [sp, #-32]!
  4033c4:	mov	x29, sp
  4033c8:	str	x0, [sp, #24]
  4033cc:	ldr	x2, [sp, #24]
  4033d0:	mov	x1, #0x9                   	// #9
  4033d4:	adrp	x0, 407000 <network_dump+0x318>
  4033d8:	add	x0, x0, #0xba8
  4033dc:	bl	401c50 <string_table_lookup@plt>
  4033e0:	ldp	x29, x30, [sp], #32
  4033e4:	ret

00000000004033e8 <networkd_dhcp_type_to_string>:
  4033e8:	sub	sp, sp, #0x10
  4033ec:	str	w0, [sp, #12]
  4033f0:	ldr	w0, [sp, #12]
  4033f4:	cmp	w0, #0x0
  4033f8:	b.lt	403408 <networkd_dhcp_type_to_string+0x20>  // b.tstop
  4033fc:	ldr	w0, [sp, #12]
  403400:	cmp	w0, #0x8
  403404:	b.le	403410 <networkd_dhcp_type_to_string+0x28>
  403408:	mov	x0, #0x0                   	// #0
  40340c:	b	403420 <networkd_dhcp_type_to_string+0x38>
  403410:	adrp	x0, 407000 <network_dump+0x318>
  403414:	add	x0, x0, #0xbf0
  403418:	ldrsw	x1, [sp, #12]
  40341c:	ldr	x0, [x0, x1, lsl #3]
  403420:	add	sp, sp, #0x10
  403424:	ret

0000000000403428 <address_free>:
  403428:	stp	x29, x30, [sp, #-48]!
  40342c:	mov	x29, sp
  403430:	str	x0, [sp, #24]
  403434:	ldr	x0, [sp, #24]
  403438:	cmp	x0, #0x0
  40343c:	b.ne	403448 <address_free+0x20>  // b.any
  403440:	mov	x0, #0x0                   	// #0
  403444:	b	40357c <address_free+0x154>
  403448:	ldr	x0, [sp, #24]
  40344c:	ldr	x0, [x0]
  403450:	cmp	x0, #0x0
  403454:	b.eq	403574 <address_free+0x14c>  // b.none
  403458:	ldr	x0, [sp, #24]
  40345c:	ldr	x0, [x0]
  403460:	add	x0, x0, #0x48
  403464:	str	x0, [sp, #32]
  403468:	ldr	x0, [sp, #24]
  40346c:	str	x0, [sp, #40]
  403470:	ldr	x0, [sp, #40]
  403474:	cmp	x0, #0x0
  403478:	cset	w0, eq  // eq = none
  40347c:	and	w0, w0, #0xff
  403480:	and	x0, x0, #0xff
  403484:	cmp	x0, #0x0
  403488:	b.eq	4034b4 <address_free+0x8c>  // b.none
  40348c:	adrp	x0, 407000 <network_dump+0x318>
  403490:	add	x1, x0, #0x8a3
  403494:	adrp	x0, 407000 <network_dump+0x318>
  403498:	add	x4, x0, #0xc38
  40349c:	mov	w3, #0x4d                  	// #77
  4034a0:	mov	x2, x1
  4034a4:	adrp	x0, 407000 <network_dump+0x318>
  4034a8:	add	x1, x0, #0x8d0
  4034ac:	mov	w0, #0x0                   	// #0
  4034b0:	bl	401b00 <log_assert_failed_realm@plt>
  4034b4:	ldr	x0, [sp, #40]
  4034b8:	ldr	x0, [x0, #48]
  4034bc:	cmp	x0, #0x0
  4034c0:	b.eq	4034d8 <address_free+0xb0>  // b.none
  4034c4:	ldr	x0, [sp, #40]
  4034c8:	ldr	x0, [x0, #48]
  4034cc:	ldr	x1, [sp, #40]
  4034d0:	ldr	x1, [x1, #56]
  4034d4:	str	x1, [x0, #56]
  4034d8:	ldr	x0, [sp, #40]
  4034dc:	ldr	x0, [x0, #56]
  4034e0:	cmp	x0, #0x0
  4034e4:	b.eq	403500 <address_free+0xd8>  // b.none
  4034e8:	ldr	x0, [sp, #40]
  4034ec:	ldr	x0, [x0, #56]
  4034f0:	ldr	x1, [sp, #40]
  4034f4:	ldr	x1, [x1, #48]
  4034f8:	str	x1, [x0, #48]
  4034fc:	b	40355c <address_free+0x134>
  403500:	ldr	x0, [sp, #32]
  403504:	ldr	x0, [x0]
  403508:	ldr	x1, [sp, #40]
  40350c:	cmp	x1, x0
  403510:	cset	w0, ne  // ne = any
  403514:	and	w0, w0, #0xff
  403518:	and	x0, x0, #0xff
  40351c:	cmp	x0, #0x0
  403520:	b.eq	40354c <address_free+0x124>  // b.none
  403524:	adrp	x0, 407000 <network_dump+0x318>
  403528:	add	x1, x0, #0x8a3
  40352c:	adrp	x0, 407000 <network_dump+0x318>
  403530:	add	x4, x0, #0xc38
  403534:	mov	w3, #0x4d                  	// #77
  403538:	mov	x2, x1
  40353c:	adrp	x0, 407000 <network_dump+0x318>
  403540:	add	x1, x0, #0x8d8
  403544:	mov	w0, #0x0                   	// #0
  403548:	bl	401b00 <log_assert_failed_realm@plt>
  40354c:	ldr	x0, [sp, #40]
  403550:	ldr	x1, [x0, #48]
  403554:	ldr	x0, [sp, #32]
  403558:	str	x1, [x0]
  40355c:	ldr	x0, [sp, #40]
  403560:	str	xzr, [x0, #56]
  403564:	ldr	x0, [sp, #40]
  403568:	ldr	x1, [x0, #56]
  40356c:	ldr	x0, [sp, #40]
  403570:	str	x1, [x0, #48]
  403574:	ldr	x0, [sp, #24]
  403578:	bl	402fd4 <mfree>
  40357c:	ldp	x29, x30, [sp], #48
  403580:	ret

0000000000403584 <address_new>:
  403584:	stp	x29, x30, [sp, #-160]!
  403588:	mov	x29, sp
  40358c:	str	x0, [sp, #56]
  403590:	str	w1, [sp, #52]
  403594:	strb	w2, [sp, #51]
  403598:	str	x3, [sp, #40]
  40359c:	str	x4, [sp, #32]
  4035a0:	str	x5, [sp, #24]
  4035a4:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4035a8:	add	x0, x0, #0xb90
  4035ac:	ldr	x1, [x0]
  4035b0:	str	x1, [sp, #152]
  4035b4:	mov	x1, #0x0                   	// #0
  4035b8:	ldr	x0, [sp, #56]
  4035bc:	cmp	x0, #0x0
  4035c0:	cset	w0, eq  // eq = none
  4035c4:	and	w0, w0, #0xff
  4035c8:	and	x0, x0, #0xff
  4035cc:	cmp	x0, #0x0
  4035d0:	b.eq	4035fc <address_new+0x78>  // b.none
  4035d4:	adrp	x0, 407000 <network_dump+0x318>
  4035d8:	add	x1, x0, #0x8a3
  4035dc:	adrp	x0, 407000 <network_dump+0x318>
  4035e0:	add	x4, x0, #0xc48
  4035e4:	mov	w3, #0x56                  	// #86
  4035e8:	mov	x2, x1
  4035ec:	adrp	x0, 407000 <network_dump+0x318>
  4035f0:	add	x1, x0, #0x8e8
  4035f4:	mov	w0, #0x0                   	// #0
  4035f8:	bl	401b00 <log_assert_failed_realm@plt>
  4035fc:	mov	x1, #0x1                   	// #1
  403600:	mov	x0, #0x40                  	// #64
  403604:	bl	403094 <malloc_multiply>
  403608:	str	x0, [sp, #64]
  40360c:	ldr	x0, [sp, #64]
  403610:	cmp	x0, #0x0
  403614:	b.ne	403620 <address_new+0x9c>  // b.any
  403618:	mov	w0, #0xfffffff4            	// #-12
  40361c:	b	403730 <address_new+0x1ac>
  403620:	ldr	x0, [sp, #40]
  403624:	ldp	x4, x5, [x0]
  403628:	ldr	x0, [sp, #32]
  40362c:	ldp	x2, x3, [x0]
  403630:	ldr	x0, [sp, #64]
  403634:	stp	xzr, xzr, [x0]
  403638:	stp	xzr, xzr, [x0, #16]
  40363c:	stp	xzr, xzr, [x0, #32]
  403640:	stp	xzr, xzr, [x0, #48]
  403644:	ldr	x0, [sp, #64]
  403648:	stp	x4, x5, [x0, #8]
  40364c:	ldr	x0, [sp, #64]
  403650:	stp	x2, x3, [x0, #24]
  403654:	ldr	x0, [sp, #64]
  403658:	ldrb	w1, [sp, #51]
  40365c:	strb	w1, [x0, #40]
  403660:	ldr	x0, [sp, #64]
  403664:	ldr	w1, [sp, #52]
  403668:	str	w1, [x0, #44]
  40366c:	ldr	x0, [sp, #56]
  403670:	add	x0, x0, #0x48
  403674:	str	x0, [sp, #72]
  403678:	ldr	x0, [sp, #64]
  40367c:	str	x0, [sp, #80]
  403680:	ldr	x0, [sp, #80]
  403684:	cmp	x0, #0x0
  403688:	cset	w0, eq  // eq = none
  40368c:	and	w0, w0, #0xff
  403690:	and	x0, x0, #0xff
  403694:	cmp	x0, #0x0
  403698:	b.eq	4036c4 <address_new+0x140>  // b.none
  40369c:	adrp	x0, 407000 <network_dump+0x318>
  4036a0:	add	x1, x0, #0x8a3
  4036a4:	adrp	x0, 407000 <network_dump+0x318>
  4036a8:	add	x4, x0, #0xc48
  4036ac:	mov	w3, #0x63                  	// #99
  4036b0:	mov	x2, x1
  4036b4:	adrp	x0, 407000 <network_dump+0x318>
  4036b8:	add	x1, x0, #0x8d0
  4036bc:	mov	w0, #0x0                   	// #0
  4036c0:	bl	401b00 <log_assert_failed_realm@plt>
  4036c4:	ldr	x0, [sp, #72]
  4036c8:	ldr	x1, [x0]
  4036cc:	ldr	x0, [sp, #80]
  4036d0:	str	x1, [x0, #48]
  4036d4:	ldr	x0, [sp, #80]
  4036d8:	ldr	x0, [x0, #48]
  4036dc:	cmp	x0, #0x0
  4036e0:	b.eq	4036f4 <address_new+0x170>  // b.none
  4036e4:	ldr	x0, [sp, #80]
  4036e8:	ldr	x0, [x0, #48]
  4036ec:	ldr	x1, [sp, #80]
  4036f0:	str	x1, [x0, #56]
  4036f4:	ldr	x0, [sp, #80]
  4036f8:	str	xzr, [x0, #56]
  4036fc:	ldr	x0, [sp, #72]
  403700:	ldr	x1, [sp, #80]
  403704:	str	x1, [x0]
  403708:	ldr	x0, [sp, #64]
  40370c:	ldr	x1, [sp, #56]
  403710:	str	x1, [x0]
  403714:	ldr	x0, [sp, #24]
  403718:	cmp	x0, #0x0
  40371c:	b.eq	40372c <address_new+0x1a8>  // b.none
  403720:	ldr	x0, [sp, #24]
  403724:	ldr	x1, [sp, #64]
  403728:	str	x1, [x0]
  40372c:	mov	w0, #0x0                   	// #0
  403730:	mov	w1, w0
  403734:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  403738:	add	x0, x0, #0xb90
  40373c:	ldr	x2, [sp, #152]
  403740:	ldr	x0, [x0]
  403744:	eor	x0, x2, x0
  403748:	cmp	x0, #0x0
  40374c:	b.eq	403754 <address_new+0x1d0>  // b.none
  403750:	bl	401bb0 <__stack_chk_fail@plt>
  403754:	mov	w0, w1
  403758:	ldp	x29, x30, [sp], #160
  40375c:	ret

0000000000403760 <route_free>:
  403760:	stp	x29, x30, [sp, #-48]!
  403764:	mov	x29, sp
  403768:	str	x0, [sp, #24]
  40376c:	ldr	x0, [sp, #24]
  403770:	cmp	x0, #0x0
  403774:	b.ne	403780 <route_free+0x20>  // b.any
  403778:	mov	x0, #0x0                   	// #0
  40377c:	b	4038b4 <route_free+0x154>
  403780:	ldr	x0, [sp, #24]
  403784:	ldr	x0, [x0]
  403788:	cmp	x0, #0x0
  40378c:	b.eq	4038ac <route_free+0x14c>  // b.none
  403790:	ldr	x0, [sp, #24]
  403794:	ldr	x0, [x0]
  403798:	add	x0, x0, #0x50
  40379c:	str	x0, [sp, #32]
  4037a0:	ldr	x0, [sp, #24]
  4037a4:	str	x0, [sp, #40]
  4037a8:	ldr	x0, [sp, #40]
  4037ac:	cmp	x0, #0x0
  4037b0:	cset	w0, eq  // eq = none
  4037b4:	and	w0, w0, #0xff
  4037b8:	and	x0, x0, #0xff
  4037bc:	cmp	x0, #0x0
  4037c0:	b.eq	4037ec <route_free+0x8c>  // b.none
  4037c4:	adrp	x0, 407000 <network_dump+0x318>
  4037c8:	add	x1, x0, #0x8a3
  4037cc:	adrp	x0, 407000 <network_dump+0x318>
  4037d0:	add	x4, x0, #0xc58
  4037d4:	mov	w3, #0x71                  	// #113
  4037d8:	mov	x2, x1
  4037dc:	adrp	x0, 407000 <network_dump+0x318>
  4037e0:	add	x1, x0, #0x8d0
  4037e4:	mov	w0, #0x0                   	// #0
  4037e8:	bl	401b00 <log_assert_failed_realm@plt>
  4037ec:	ldr	x0, [sp, #40]
  4037f0:	ldr	x0, [x0, #48]
  4037f4:	cmp	x0, #0x0
  4037f8:	b.eq	403810 <route_free+0xb0>  // b.none
  4037fc:	ldr	x0, [sp, #40]
  403800:	ldr	x0, [x0, #48]
  403804:	ldr	x1, [sp, #40]
  403808:	ldr	x1, [x1, #56]
  40380c:	str	x1, [x0, #56]
  403810:	ldr	x0, [sp, #40]
  403814:	ldr	x0, [x0, #56]
  403818:	cmp	x0, #0x0
  40381c:	b.eq	403838 <route_free+0xd8>  // b.none
  403820:	ldr	x0, [sp, #40]
  403824:	ldr	x0, [x0, #56]
  403828:	ldr	x1, [sp, #40]
  40382c:	ldr	x1, [x1, #48]
  403830:	str	x1, [x0, #48]
  403834:	b	403894 <route_free+0x134>
  403838:	ldr	x0, [sp, #32]
  40383c:	ldr	x0, [x0]
  403840:	ldr	x1, [sp, #40]
  403844:	cmp	x1, x0
  403848:	cset	w0, ne  // ne = any
  40384c:	and	w0, w0, #0xff
  403850:	and	x0, x0, #0xff
  403854:	cmp	x0, #0x0
  403858:	b.eq	403884 <route_free+0x124>  // b.none
  40385c:	adrp	x0, 407000 <network_dump+0x318>
  403860:	add	x1, x0, #0x8a3
  403864:	adrp	x0, 407000 <network_dump+0x318>
  403868:	add	x4, x0, #0xc58
  40386c:	mov	w3, #0x71                  	// #113
  403870:	mov	x2, x1
  403874:	adrp	x0, 407000 <network_dump+0x318>
  403878:	add	x1, x0, #0x8d8
  40387c:	mov	w0, #0x0                   	// #0
  403880:	bl	401b00 <log_assert_failed_realm@plt>
  403884:	ldr	x0, [sp, #40]
  403888:	ldr	x1, [x0, #48]
  40388c:	ldr	x0, [sp, #32]
  403890:	str	x1, [x0]
  403894:	ldr	x0, [sp, #40]
  403898:	str	xzr, [x0, #56]
  40389c:	ldr	x0, [sp, #40]
  4038a0:	ldr	x1, [x0, #56]
  4038a4:	ldr	x0, [sp, #40]
  4038a8:	str	x1, [x0, #48]
  4038ac:	ldr	x0, [sp, #24]
  4038b0:	bl	402fd4 <mfree>
  4038b4:	ldp	x29, x30, [sp], #48
  4038b8:	ret

00000000004038bc <route_new>:
  4038bc:	stp	x29, x30, [sp, #-160]!
  4038c0:	mov	x29, sp
  4038c4:	str	x0, [sp, #56]
  4038c8:	str	w1, [sp, #52]
  4038cc:	strb	w2, [sp, #51]
  4038d0:	str	x3, [sp, #40]
  4038d4:	str	x4, [sp, #32]
  4038d8:	str	x5, [sp, #24]
  4038dc:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4038e0:	add	x0, x0, #0xb90
  4038e4:	ldr	x1, [x0]
  4038e8:	str	x1, [sp, #152]
  4038ec:	mov	x1, #0x0                   	// #0
  4038f0:	ldr	x0, [sp, #56]
  4038f4:	cmp	x0, #0x0
  4038f8:	cset	w0, eq  // eq = none
  4038fc:	and	w0, w0, #0xff
  403900:	and	x0, x0, #0xff
  403904:	cmp	x0, #0x0
  403908:	b.eq	403934 <route_new+0x78>  // b.none
  40390c:	adrp	x0, 407000 <network_dump+0x318>
  403910:	add	x1, x0, #0x8a3
  403914:	adrp	x0, 407000 <network_dump+0x318>
  403918:	add	x4, x0, #0xc68
  40391c:	mov	w3, #0x7a                  	// #122
  403920:	mov	x2, x1
  403924:	adrp	x0, 407000 <network_dump+0x318>
  403928:	add	x1, x0, #0x8e8
  40392c:	mov	w0, #0x0                   	// #0
  403930:	bl	401b00 <log_assert_failed_realm@plt>
  403934:	mov	x1, #0x1                   	// #1
  403938:	mov	x0, #0x40                  	// #64
  40393c:	bl	403094 <malloc_multiply>
  403940:	str	x0, [sp, #64]
  403944:	ldr	x0, [sp, #64]
  403948:	cmp	x0, #0x0
  40394c:	b.ne	403958 <route_new+0x9c>  // b.any
  403950:	mov	w0, #0xfffffff4            	// #-12
  403954:	b	403a80 <route_new+0x1c4>
  403958:	ldr	x0, [sp, #40]
  40395c:	cmp	x0, #0x0
  403960:	b.eq	403970 <route_new+0xb4>  // b.none
  403964:	ldr	x0, [sp, #40]
  403968:	ldp	x2, x3, [x0]
  40396c:	b	403978 <route_new+0xbc>
  403970:	mov	x2, #0x0                   	// #0
  403974:	mov	x3, #0x0                   	// #0
  403978:	ldr	x0, [sp, #32]
  40397c:	ldp	x4, x5, [x0]
  403980:	ldr	x0, [sp, #64]
  403984:	stp	xzr, xzr, [x0]
  403988:	stp	xzr, xzr, [x0, #16]
  40398c:	stp	xzr, xzr, [x0, #32]
  403990:	stp	xzr, xzr, [x0, #48]
  403994:	ldr	x0, [sp, #64]
  403998:	stp	x2, x3, [x0, #8]
  40399c:	ldr	x0, [sp, #64]
  4039a0:	stp	x4, x5, [x0, #24]
  4039a4:	ldr	x0, [sp, #64]
  4039a8:	ldrb	w1, [sp, #51]
  4039ac:	strb	w1, [x0, #40]
  4039b0:	ldr	x0, [sp, #64]
  4039b4:	ldr	w1, [sp, #52]
  4039b8:	str	w1, [x0, #44]
  4039bc:	ldr	x0, [sp, #56]
  4039c0:	add	x0, x0, #0x50
  4039c4:	str	x0, [sp, #72]
  4039c8:	ldr	x0, [sp, #64]
  4039cc:	str	x0, [sp, #80]
  4039d0:	ldr	x0, [sp, #80]
  4039d4:	cmp	x0, #0x0
  4039d8:	cset	w0, eq  // eq = none
  4039dc:	and	w0, w0, #0xff
  4039e0:	and	x0, x0, #0xff
  4039e4:	cmp	x0, #0x0
  4039e8:	b.eq	403a14 <route_new+0x158>  // b.none
  4039ec:	adrp	x0, 407000 <network_dump+0x318>
  4039f0:	add	x1, x0, #0x8a3
  4039f4:	adrp	x0, 407000 <network_dump+0x318>
  4039f8:	add	x4, x0, #0xc68
  4039fc:	mov	w3, #0x87                  	// #135
  403a00:	mov	x2, x1
  403a04:	adrp	x0, 407000 <network_dump+0x318>
  403a08:	add	x1, x0, #0x8d0
  403a0c:	mov	w0, #0x0                   	// #0
  403a10:	bl	401b00 <log_assert_failed_realm@plt>
  403a14:	ldr	x0, [sp, #72]
  403a18:	ldr	x1, [x0]
  403a1c:	ldr	x0, [sp, #80]
  403a20:	str	x1, [x0, #48]
  403a24:	ldr	x0, [sp, #80]
  403a28:	ldr	x0, [x0, #48]
  403a2c:	cmp	x0, #0x0
  403a30:	b.eq	403a44 <route_new+0x188>  // b.none
  403a34:	ldr	x0, [sp, #80]
  403a38:	ldr	x0, [x0, #48]
  403a3c:	ldr	x1, [sp, #80]
  403a40:	str	x1, [x0, #56]
  403a44:	ldr	x0, [sp, #80]
  403a48:	str	xzr, [x0, #56]
  403a4c:	ldr	x0, [sp, #72]
  403a50:	ldr	x1, [sp, #80]
  403a54:	str	x1, [x0]
  403a58:	ldr	x0, [sp, #64]
  403a5c:	ldr	x1, [sp, #56]
  403a60:	str	x1, [x0]
  403a64:	ldr	x0, [sp, #24]
  403a68:	cmp	x0, #0x0
  403a6c:	b.eq	403a7c <route_new+0x1c0>  // b.none
  403a70:	ldr	x0, [sp, #24]
  403a74:	ldr	x1, [sp, #64]
  403a78:	str	x1, [x0]
  403a7c:	mov	w0, #0x0                   	// #0
  403a80:	mov	w1, w0
  403a84:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  403a88:	add	x0, x0, #0xb90
  403a8c:	ldr	x2, [sp, #152]
  403a90:	ldr	x0, [x0]
  403a94:	eor	x0, x2, x0
  403a98:	cmp	x0, #0x0
  403a9c:	b.eq	403aa4 <route_new+0x1e8>  // b.none
  403aa0:	bl	401bb0 <__stack_chk_fail@plt>
  403aa4:	mov	w0, w1
  403aa8:	ldp	x29, x30, [sp], #160
  403aac:	ret

0000000000403ab0 <network_free>:
  403ab0:	stp	x29, x30, [sp, #-48]!
  403ab4:	mov	x29, sp
  403ab8:	str	x0, [sp, #24]
  403abc:	ldr	x0, [sp, #24]
  403ac0:	cmp	x0, #0x0
  403ac4:	b.ne	403ad0 <network_free+0x20>  // b.any
  403ac8:	mov	x0, #0x0                   	// #0
  403acc:	b	403b68 <network_free+0xb8>
  403ad0:	ldr	x0, [sp, #24]
  403ad4:	ldr	x0, [x0]
  403ad8:	bl	401cf0 <free@plt>
  403adc:	ldr	x0, [sp, #24]
  403ae0:	ldr	x0, [x0, #56]
  403ae4:	bl	401cf0 <free@plt>
  403ae8:	ldr	x0, [sp, #24]
  403aec:	ldr	x0, [x0, #24]
  403af0:	bl	401b70 <strv_free@plt>
  403af4:	ldr	x0, [sp, #24]
  403af8:	ldr	x0, [x0, #32]
  403afc:	bl	401cf0 <free@plt>
  403b00:	ldr	x0, [sp, #24]
  403b04:	ldr	x0, [x0, #40]
  403b08:	bl	401cf0 <free@plt>
  403b0c:	ldr	x0, [sp, #24]
  403b10:	ldr	x0, [x0, #48]
  403b14:	bl	401cf0 <free@plt>
  403b18:	b	403b24 <network_free+0x74>
  403b1c:	ldr	x0, [sp, #32]
  403b20:	bl	403428 <address_free>
  403b24:	ldr	x0, [sp, #24]
  403b28:	ldr	x0, [x0, #72]
  403b2c:	str	x0, [sp, #32]
  403b30:	ldr	x0, [sp, #32]
  403b34:	cmp	x0, #0x0
  403b38:	b.ne	403b1c <network_free+0x6c>  // b.any
  403b3c:	b	403b48 <network_free+0x98>
  403b40:	ldr	x0, [sp, #40]
  403b44:	bl	403760 <route_free>
  403b48:	ldr	x0, [sp, #24]
  403b4c:	ldr	x0, [x0, #80]
  403b50:	str	x0, [sp, #40]
  403b54:	ldr	x0, [sp, #40]
  403b58:	cmp	x0, #0x0
  403b5c:	b.ne	403b40 <network_free+0x90>  // b.any
  403b60:	ldr	x0, [sp, #24]
  403b64:	bl	402fd4 <mfree>
  403b68:	ldp	x29, x30, [sp], #48
  403b6c:	ret

0000000000403b70 <network_freep>:
  403b70:	stp	x29, x30, [sp, #-32]!
  403b74:	mov	x29, sp
  403b78:	str	x0, [sp, #24]
  403b7c:	ldr	x0, [sp, #24]
  403b80:	ldr	x0, [x0]
  403b84:	cmp	x0, #0x0
  403b88:	b.eq	403b98 <network_freep+0x28>  // b.none
  403b8c:	ldr	x0, [sp, #24]
  403b90:	ldr	x0, [x0]
  403b94:	bl	403ab0 <network_free>
  403b98:	nop
  403b9c:	ldp	x29, x30, [sp], #32
  403ba0:	ret

0000000000403ba4 <network_new>:
  403ba4:	stp	x29, x30, [sp, #-208]!
  403ba8:	mov	x29, sp
  403bac:	str	x19, [sp, #16]
  403bb0:	str	x0, [sp, #56]
  403bb4:	str	x1, [sp, #48]
  403bb8:	str	x2, [sp, #40]
  403bbc:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  403bc0:	add	x0, x0, #0xb90
  403bc4:	ldr	x1, [x0]
  403bc8:	str	x1, [sp, #200]
  403bcc:	mov	x1, #0x0                   	// #0
  403bd0:	str	xzr, [sp, #80]
  403bd4:	str	xzr, [sp, #88]
  403bd8:	ldr	x0, [sp, #56]
  403bdc:	cmp	x0, #0x0
  403be0:	cset	w0, eq  // eq = none
  403be4:	and	w0, w0, #0xff
  403be8:	and	x0, x0, #0xff
  403bec:	cmp	x0, #0x0
  403bf0:	b.eq	403c1c <network_new+0x78>  // b.none
  403bf4:	adrp	x0, 407000 <network_dump+0x318>
  403bf8:	add	x1, x0, #0x8a3
  403bfc:	adrp	x0, 407000 <network_dump+0x318>
  403c00:	add	x4, x0, #0xc78
  403c04:	mov	w3, #0xae                  	// #174
  403c08:	mov	x2, x1
  403c0c:	adrp	x0, 407000 <network_dump+0x318>
  403c10:	add	x1, x0, #0x8f0
  403c14:	mov	w0, #0x0                   	// #0
  403c18:	bl	401b00 <log_assert_failed_realm@plt>
  403c1c:	ldr	x0, [sp, #48]
  403c20:	bl	403340 <isempty>
  403c24:	and	w0, w0, #0xff
  403c28:	eor	w0, w0, #0x1
  403c2c:	and	w0, w0, #0xff
  403c30:	cmp	w0, #0x0
  403c34:	b.eq	403c5c <network_new+0xb8>  // b.none
  403c38:	ldr	x0, [sp, #48]
  403c3c:	bl	401ad0 <ifname_valid@plt>
  403c40:	and	w0, w0, #0xff
  403c44:	eor	w0, w0, #0x1
  403c48:	and	w0, w0, #0xff
  403c4c:	cmp	w0, #0x0
  403c50:	b.eq	403c5c <network_new+0xb8>  // b.none
  403c54:	mov	w19, #0xffffffea            	// #-22
  403c58:	b	403d70 <network_new+0x1cc>
  403c5c:	ldr	x0, [sp, #48]
  403c60:	bl	401c90 <strdup@plt>
  403c64:	str	x0, [sp, #88]
  403c68:	ldr	x0, [sp, #88]
  403c6c:	cmp	x0, #0x0
  403c70:	b.ne	403c7c <network_new+0xd8>  // b.any
  403c74:	mov	w19, #0xfffffff4            	// #-12
  403c78:	b	403d70 <network_new+0x1cc>
  403c7c:	mov	x1, #0x1                   	// #1
  403c80:	mov	x0, #0x58                  	// #88
  403c84:	bl	403094 <malloc_multiply>
  403c88:	str	x0, [sp, #80]
  403c8c:	ldr	x0, [sp, #80]
  403c90:	cmp	x0, #0x0
  403c94:	b.ne	403ca0 <network_new+0xfc>  // b.any
  403c98:	mov	w19, #0xfffffff4            	// #-12
  403c9c:	b	403d70 <network_new+0x1cc>
  403ca0:	ldr	x0, [sp, #80]
  403ca4:	ldr	x1, [sp, #88]
  403ca8:	str	x1, [sp, #96]
  403cac:	str	xzr, [sp, #88]
  403cb0:	ldr	x1, [sp, #96]
  403cb4:	stp	xzr, xzr, [x0]
  403cb8:	stp	xzr, xzr, [x0, #16]
  403cbc:	stp	xzr, xzr, [x0, #32]
  403cc0:	stp	xzr, xzr, [x0, #48]
  403cc4:	stp	xzr, xzr, [x0, #64]
  403cc8:	str	xzr, [x0, #80]
  403ccc:	str	x1, [x0]
  403cd0:	mov	w1, #0xffffffff            	// #-1
  403cd4:	str	w1, [x0, #20]
  403cd8:	mov	w1, #0xffffffff            	// #-1
  403cdc:	str	w1, [x0, #64]
  403ce0:	ldr	x2, [sp, #56]
  403ce4:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  403ce8:	add	x1, x0, #0xb98
  403cec:	mov	x0, x2
  403cf0:	bl	401d00 <internal_hashmap_ensure_allocated@plt>
  403cf4:	str	w0, [sp, #76]
  403cf8:	ldr	w0, [sp, #76]
  403cfc:	cmp	w0, #0x0
  403d00:	b.ge	403d0c <network_new+0x168>  // b.tcont
  403d04:	ldr	w19, [sp, #76]
  403d08:	b	403d70 <network_new+0x1cc>
  403d0c:	ldr	x0, [sp, #56]
  403d10:	ldr	x3, [x0]
  403d14:	ldr	x0, [sp, #80]
  403d18:	ldr	x0, [x0]
  403d1c:	ldr	x1, [sp, #80]
  403d20:	mov	x2, x1
  403d24:	mov	x1, x0
  403d28:	mov	x0, x3
  403d2c:	bl	401c30 <hashmap_put@plt>
  403d30:	str	w0, [sp, #76]
  403d34:	ldr	w0, [sp, #76]
  403d38:	cmp	w0, #0x0
  403d3c:	b.ge	403d48 <network_new+0x1a4>  // b.tcont
  403d40:	ldr	w19, [sp, #76]
  403d44:	b	403d70 <network_new+0x1cc>
  403d48:	ldr	x0, [sp, #40]
  403d4c:	cmp	x0, #0x0
  403d50:	b.eq	403d60 <network_new+0x1bc>  // b.none
  403d54:	ldr	x1, [sp, #80]
  403d58:	ldr	x0, [sp, #40]
  403d5c:	str	x1, [x0]
  403d60:	ldr	x0, [sp, #80]
  403d64:	str	x0, [sp, #104]
  403d68:	str	xzr, [sp, #80]
  403d6c:	mov	w19, #0x0                   	// #0
  403d70:	add	x0, sp, #0x58
  403d74:	bl	402ff4 <freep>
  403d78:	add	x0, sp, #0x50
  403d7c:	bl	403b70 <network_freep>
  403d80:	mov	w1, w19
  403d84:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  403d88:	add	x0, x0, #0xb90
  403d8c:	ldr	x2, [sp, #200]
  403d90:	ldr	x0, [x0]
  403d94:	eor	x0, x2, x0
  403d98:	cmp	x0, #0x0
  403d9c:	b.eq	403da4 <network_new+0x200>  // b.none
  403da0:	bl	401bb0 <__stack_chk_fail@plt>
  403da4:	mov	w0, w1
  403da8:	ldr	x19, [sp, #16]
  403dac:	ldp	x29, x30, [sp], #208
  403db0:	ret

0000000000403db4 <network_get>:
  403db4:	stp	x29, x30, [sp, #-32]!
  403db8:	mov	x29, sp
  403dbc:	str	x0, [sp, #24]
  403dc0:	str	x1, [sp, #16]
  403dc4:	ldr	x0, [sp, #24]
  403dc8:	ldr	x0, [x0]
  403dcc:	ldr	x1, [sp, #16]
  403dd0:	bl	4031a8 <hashmap_get>
  403dd4:	ldp	x29, x30, [sp], #32
  403dd8:	ret

0000000000403ddc <netdev_free>:
  403ddc:	stp	x29, x30, [sp, #-32]!
  403de0:	mov	x29, sp
  403de4:	str	x0, [sp, #24]
  403de8:	ldr	x0, [sp, #24]
  403dec:	cmp	x0, #0x0
  403df0:	b.ne	403dfc <netdev_free+0x20>  // b.any
  403df4:	mov	x0, #0x0                   	// #0
  403df8:	b	403e1c <netdev_free+0x40>
  403dfc:	ldr	x0, [sp, #24]
  403e00:	ldr	x0, [x0]
  403e04:	bl	401cf0 <free@plt>
  403e08:	ldr	x0, [sp, #24]
  403e0c:	ldr	x0, [x0, #8]
  403e10:	bl	401cf0 <free@plt>
  403e14:	ldr	x0, [sp, #24]
  403e18:	bl	402fd4 <mfree>
  403e1c:	ldp	x29, x30, [sp], #32
  403e20:	ret

0000000000403e24 <netdev_freep>:
  403e24:	stp	x29, x30, [sp, #-32]!
  403e28:	mov	x29, sp
  403e2c:	str	x0, [sp, #24]
  403e30:	ldr	x0, [sp, #24]
  403e34:	ldr	x0, [x0]
  403e38:	cmp	x0, #0x0
  403e3c:	b.eq	403e4c <netdev_freep+0x28>  // b.none
  403e40:	ldr	x0, [sp, #24]
  403e44:	ldr	x0, [x0]
  403e48:	bl	403ddc <netdev_free>
  403e4c:	nop
  403e50:	ldp	x29, x30, [sp], #32
  403e54:	ret

0000000000403e58 <netdev_new>:
  403e58:	stp	x29, x30, [sp, #-144]!
  403e5c:	mov	x29, sp
  403e60:	str	x19, [sp, #16]
  403e64:	str	x0, [sp, #56]
  403e68:	str	x1, [sp, #48]
  403e6c:	str	x2, [sp, #40]
  403e70:	str	x3, [sp, #32]
  403e74:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  403e78:	add	x0, x0, #0xb90
  403e7c:	ldr	x1, [x0]
  403e80:	str	x1, [sp, #136]
  403e84:	mov	x1, #0x0                   	// #0
  403e88:	str	xzr, [sp, #72]
  403e8c:	str	xzr, [sp, #80]
  403e90:	str	xzr, [sp, #112]
  403e94:	ldr	x0, [sp, #56]
  403e98:	cmp	x0, #0x0
  403e9c:	cset	w0, eq  // eq = none
  403ea0:	and	w0, w0, #0xff
  403ea4:	and	x0, x0, #0xff
  403ea8:	cmp	x0, #0x0
  403eac:	b.eq	403ed8 <netdev_new+0x80>  // b.none
  403eb0:	adrp	x0, 407000 <network_dump+0x318>
  403eb4:	add	x1, x0, #0x8a3
  403eb8:	adrp	x0, 407000 <network_dump+0x318>
  403ebc:	add	x4, x0, #0xc88
  403ec0:	mov	w3, #0xe4                  	// #228
  403ec4:	mov	x2, x1
  403ec8:	adrp	x0, 407000 <network_dump+0x318>
  403ecc:	add	x1, x0, #0x8f0
  403ed0:	mov	w0, #0x0                   	// #0
  403ed4:	bl	401b00 <log_assert_failed_realm@plt>
  403ed8:	ldr	x0, [sp, #40]
  403edc:	bl	401ad0 <ifname_valid@plt>
  403ee0:	and	w0, w0, #0xff
  403ee4:	eor	w0, w0, #0x1
  403ee8:	and	w0, w0, #0xff
  403eec:	cmp	w0, #0x0
  403ef0:	b.eq	403efc <netdev_new+0xa4>  // b.none
  403ef4:	mov	w19, #0xffffffea            	// #-22
  403ef8:	b	404028 <netdev_new+0x1d0>
  403efc:	ldr	x0, [sp, #48]
  403f00:	bl	401c90 <strdup@plt>
  403f04:	str	x0, [sp, #80]
  403f08:	ldr	x0, [sp, #80]
  403f0c:	cmp	x0, #0x0
  403f10:	b.ne	403f1c <netdev_new+0xc4>  // b.any
  403f14:	mov	w19, #0xfffffff4            	// #-12
  403f18:	b	404028 <netdev_new+0x1d0>
  403f1c:	ldr	x0, [sp, #40]
  403f20:	bl	401c90 <strdup@plt>
  403f24:	str	x0, [sp, #112]
  403f28:	ldr	x0, [sp, #112]
  403f2c:	cmp	x0, #0x0
  403f30:	b.ne	403f3c <netdev_new+0xe4>  // b.any
  403f34:	mov	w19, #0xfffffff4            	// #-12
  403f38:	b	404028 <netdev_new+0x1d0>
  403f3c:	mov	x1, #0x1                   	// #1
  403f40:	mov	x0, #0x18                  	// #24
  403f44:	bl	403094 <malloc_multiply>
  403f48:	str	x0, [sp, #72]
  403f4c:	ldr	x0, [sp, #72]
  403f50:	cmp	x0, #0x0
  403f54:	b.ne	403f60 <netdev_new+0x108>  // b.any
  403f58:	mov	w19, #0xfffffff4            	// #-12
  403f5c:	b	404028 <netdev_new+0x1d0>
  403f60:	ldr	x0, [sp, #72]
  403f64:	ldr	x1, [sp, #112]
  403f68:	str	x1, [sp, #88]
  403f6c:	str	xzr, [sp, #112]
  403f70:	ldr	x2, [sp, #88]
  403f74:	ldr	x1, [sp, #80]
  403f78:	str	x1, [sp, #96]
  403f7c:	str	xzr, [sp, #80]
  403f80:	ldr	x1, [sp, #96]
  403f84:	stp	xzr, xzr, [x0]
  403f88:	str	xzr, [x0, #16]
  403f8c:	str	x2, [x0]
  403f90:	str	x1, [x0, #8]
  403f94:	ldr	x0, [sp, #56]
  403f98:	add	x2, x0, #0x8
  403f9c:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  403fa0:	add	x1, x0, #0xb98
  403fa4:	mov	x0, x2
  403fa8:	bl	401d00 <internal_hashmap_ensure_allocated@plt>
  403fac:	str	w0, [sp, #68]
  403fb0:	ldr	w0, [sp, #68]
  403fb4:	cmp	w0, #0x0
  403fb8:	b.ge	403fc4 <netdev_new+0x16c>  // b.tcont
  403fbc:	ldr	w19, [sp, #68]
  403fc0:	b	404028 <netdev_new+0x1d0>
  403fc4:	ldr	x0, [sp, #56]
  403fc8:	ldr	x3, [x0, #8]
  403fcc:	ldr	x0, [sp, #72]
  403fd0:	ldr	x0, [x0]
  403fd4:	ldr	x1, [sp, #72]
  403fd8:	mov	x2, x1
  403fdc:	mov	x1, x0
  403fe0:	mov	x0, x3
  403fe4:	bl	401c30 <hashmap_put@plt>
  403fe8:	str	w0, [sp, #68]
  403fec:	ldr	w0, [sp, #68]
  403ff0:	cmp	w0, #0x0
  403ff4:	b.ge	404000 <netdev_new+0x1a8>  // b.tcont
  403ff8:	ldr	w19, [sp, #68]
  403ffc:	b	404028 <netdev_new+0x1d0>
  404000:	ldr	x0, [sp, #32]
  404004:	cmp	x0, #0x0
  404008:	b.eq	404018 <netdev_new+0x1c0>  // b.none
  40400c:	ldr	x1, [sp, #72]
  404010:	ldr	x0, [sp, #32]
  404014:	str	x1, [x0]
  404018:	ldr	x0, [sp, #72]
  40401c:	str	x0, [sp, #104]
  404020:	str	xzr, [sp, #72]
  404024:	mov	w19, #0x0                   	// #0
  404028:	add	x0, sp, #0x70
  40402c:	bl	402ff4 <freep>
  404030:	add	x0, sp, #0x50
  404034:	bl	402ff4 <freep>
  404038:	add	x0, sp, #0x48
  40403c:	bl	403e24 <netdev_freep>
  404040:	mov	w1, w19
  404044:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404048:	add	x0, x0, #0xb90
  40404c:	ldr	x2, [sp, #136]
  404050:	ldr	x0, [x0]
  404054:	eor	x0, x2, x0
  404058:	cmp	x0, #0x0
  40405c:	b.eq	404064 <netdev_new+0x20c>  // b.none
  404060:	bl	401bb0 <__stack_chk_fail@plt>
  404064:	mov	w0, w1
  404068:	ldr	x19, [sp, #16]
  40406c:	ldp	x29, x30, [sp], #144
  404070:	ret

0000000000404074 <netdev_get>:
  404074:	stp	x29, x30, [sp, #-32]!
  404078:	mov	x29, sp
  40407c:	str	x0, [sp, #24]
  404080:	str	x1, [sp, #16]
  404084:	ldr	x0, [sp, #24]
  404088:	ldr	x0, [x0, #8]
  40408c:	ldr	x1, [sp, #16]
  404090:	bl	4031a8 <hashmap_get>
  404094:	ldp	x29, x30, [sp], #32
  404098:	ret

000000000040409c <link_free>:
  40409c:	stp	x29, x30, [sp, #-32]!
  4040a0:	mov	x29, sp
  4040a4:	str	x0, [sp, #24]
  4040a8:	ldr	x0, [sp, #24]
  4040ac:	cmp	x0, #0x0
  4040b0:	b.ne	4040bc <link_free+0x20>  // b.any
  4040b4:	mov	x0, #0x0                   	// #0
  4040b8:	b	4040d0 <link_free+0x34>
  4040bc:	ldr	x0, [sp, #24]
  4040c0:	ldr	x0, [x0]
  4040c4:	bl	401cf0 <free@plt>
  4040c8:	ldr	x0, [sp, #24]
  4040cc:	bl	402fd4 <mfree>
  4040d0:	ldp	x29, x30, [sp], #32
  4040d4:	ret

00000000004040d8 <link_freep>:
  4040d8:	stp	x29, x30, [sp, #-32]!
  4040dc:	mov	x29, sp
  4040e0:	str	x0, [sp, #24]
  4040e4:	ldr	x0, [sp, #24]
  4040e8:	ldr	x0, [x0]
  4040ec:	cmp	x0, #0x0
  4040f0:	b.eq	404100 <link_freep+0x28>  // b.none
  4040f4:	ldr	x0, [sp, #24]
  4040f8:	ldr	x0, [x0]
  4040fc:	bl	40409c <link_free>
  404100:	nop
  404104:	ldp	x29, x30, [sp], #32
  404108:	ret

000000000040410c <link_new>:
  40410c:	stp	x29, x30, [sp, #-128]!
  404110:	mov	x29, sp
  404114:	str	x19, [sp, #16]
  404118:	str	x0, [sp, #56]
  40411c:	str	x1, [sp, #48]
  404120:	str	x2, [sp, #40]
  404124:	str	x3, [sp, #32]
  404128:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  40412c:	add	x0, x0, #0xb90
  404130:	ldr	x1, [x0]
  404134:	str	x1, [sp, #120]
  404138:	mov	x1, #0x0                   	// #0
  40413c:	str	xzr, [sp, #72]
  404140:	str	xzr, [sp, #80]
  404144:	ldr	x0, [sp, #56]
  404148:	cmp	x0, #0x0
  40414c:	cset	w0, eq  // eq = none
  404150:	and	w0, w0, #0xff
  404154:	and	x0, x0, #0xff
  404158:	cmp	x0, #0x0
  40415c:	b.eq	404188 <link_new+0x7c>  // b.none
  404160:	adrp	x0, 407000 <network_dump+0x318>
  404164:	add	x1, x0, #0x8a3
  404168:	adrp	x0, 407000 <network_dump+0x318>
  40416c:	add	x4, x0, #0xc98
  404170:	mov	w3, #0x11c                 	// #284
  404174:	mov	x2, x1
  404178:	adrp	x0, 407000 <network_dump+0x318>
  40417c:	add	x1, x0, #0x8f0
  404180:	mov	w0, #0x0                   	// #0
  404184:	bl	401b00 <log_assert_failed_realm@plt>
  404188:	ldr	x0, [sp, #48]
  40418c:	bl	401ad0 <ifname_valid@plt>
  404190:	and	w0, w0, #0xff
  404194:	eor	w0, w0, #0x1
  404198:	and	w0, w0, #0xff
  40419c:	cmp	w0, #0x0
  4041a0:	b.eq	4041ac <link_new+0xa0>  // b.none
  4041a4:	mov	w19, #0xffffffea            	// #-22
  4041a8:	b	4042d0 <link_new+0x1c4>
  4041ac:	ldr	x0, [sp, #48]
  4041b0:	bl	401c90 <strdup@plt>
  4041b4:	str	x0, [sp, #80]
  4041b8:	ldr	x0, [sp, #80]
  4041bc:	cmp	x0, #0x0
  4041c0:	b.ne	4041cc <link_new+0xc0>  // b.any
  4041c4:	mov	w19, #0xfffffff4            	// #-12
  4041c8:	b	4042d0 <link_new+0x1c4>
  4041cc:	mov	x1, #0x1                   	// #1
  4041d0:	mov	x0, #0x10                  	// #16
  4041d4:	bl	403094 <malloc_multiply>
  4041d8:	str	x0, [sp, #72]
  4041dc:	ldr	x0, [sp, #72]
  4041e0:	cmp	x0, #0x0
  4041e4:	b.ne	4041f0 <link_new+0xe4>  // b.any
  4041e8:	mov	w19, #0xfffffff4            	// #-12
  4041ec:	b	4042d0 <link_new+0x1c4>
  4041f0:	ldr	x0, [sp, #72]
  4041f4:	ldr	x1, [sp, #80]
  4041f8:	str	x1, [sp, #88]
  4041fc:	str	xzr, [sp, #80]
  404200:	ldr	x3, [sp, #88]
  404204:	ldr	x2, [sp, #40]
  404208:	add	x1, sp, #0x68
  40420c:	ldr	w4, [x2]
  404210:	str	w4, [x1]
  404214:	ldrh	w2, [x2, #4]
  404218:	strh	w2, [x1, #4]
  40421c:	str	x3, [x0]
  404220:	add	x0, x0, #0x8
  404224:	mov	x1, x0
  404228:	add	x0, sp, #0x68
  40422c:	ldr	w2, [x0]
  404230:	str	w2, [x1]
  404234:	ldrh	w0, [x0, #4]
  404238:	strh	w0, [x1, #4]
  40423c:	ldr	x0, [sp, #56]
  404240:	add	x2, x0, #0x10
  404244:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404248:	add	x1, x0, #0xb98
  40424c:	mov	x0, x2
  404250:	bl	401d00 <internal_hashmap_ensure_allocated@plt>
  404254:	str	w0, [sp, #68]
  404258:	ldr	w0, [sp, #68]
  40425c:	cmp	w0, #0x0
  404260:	b.ge	40426c <link_new+0x160>  // b.tcont
  404264:	ldr	w19, [sp, #68]
  404268:	b	4042d0 <link_new+0x1c4>
  40426c:	ldr	x0, [sp, #56]
  404270:	ldr	x3, [x0, #16]
  404274:	ldr	x0, [sp, #72]
  404278:	ldr	x0, [x0]
  40427c:	ldr	x1, [sp, #72]
  404280:	mov	x2, x1
  404284:	mov	x1, x0
  404288:	mov	x0, x3
  40428c:	bl	401c30 <hashmap_put@plt>
  404290:	str	w0, [sp, #68]
  404294:	ldr	w0, [sp, #68]
  404298:	cmp	w0, #0x0
  40429c:	b.ge	4042a8 <link_new+0x19c>  // b.tcont
  4042a0:	ldr	w19, [sp, #68]
  4042a4:	b	4042d0 <link_new+0x1c4>
  4042a8:	ldr	x0, [sp, #32]
  4042ac:	cmp	x0, #0x0
  4042b0:	b.eq	4042c0 <link_new+0x1b4>  // b.none
  4042b4:	ldr	x1, [sp, #72]
  4042b8:	ldr	x0, [sp, #32]
  4042bc:	str	x1, [x0]
  4042c0:	ldr	x0, [sp, #72]
  4042c4:	str	x0, [sp, #96]
  4042c8:	str	xzr, [sp, #72]
  4042cc:	mov	w19, #0x0                   	// #0
  4042d0:	add	x0, sp, #0x50
  4042d4:	bl	402ff4 <freep>
  4042d8:	add	x0, sp, #0x48
  4042dc:	bl	4040d8 <link_freep>
  4042e0:	mov	w1, w19
  4042e4:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4042e8:	add	x0, x0, #0xb90
  4042ec:	ldr	x2, [sp, #120]
  4042f0:	ldr	x0, [x0]
  4042f4:	eor	x0, x2, x0
  4042f8:	cmp	x0, #0x0
  4042fc:	b.eq	404304 <link_new+0x1f8>  // b.none
  404300:	bl	401bb0 <__stack_chk_fail@plt>
  404304:	mov	w0, w1
  404308:	ldr	x19, [sp, #16]
  40430c:	ldp	x29, x30, [sp], #128
  404310:	ret

0000000000404314 <network_set_dhcp_type>:
  404314:	stp	x29, x30, [sp, #-80]!
  404318:	mov	x29, sp
  40431c:	str	x0, [sp, #40]
  404320:	str	x1, [sp, #32]
  404324:	str	x2, [sp, #24]
  404328:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  40432c:	add	x0, x0, #0xb90
  404330:	ldr	x1, [x0]
  404334:	str	x1, [sp, #72]
  404338:	mov	x1, #0x0                   	// #0
  40433c:	ldr	x0, [sp, #24]
  404340:	bl	4033c0 <dracut_dhcp_type_from_string>
  404344:	str	w0, [sp, #56]
  404348:	ldr	w0, [sp, #56]
  40434c:	cmp	w0, #0x0
  404350:	b.ge	40435c <network_set_dhcp_type+0x48>  // b.tcont
  404354:	mov	w0, #0xffffffea            	// #-22
  404358:	b	4043b4 <network_set_dhcp_type+0xa0>
  40435c:	ldr	x1, [sp, #32]
  404360:	ldr	x0, [sp, #40]
  404364:	bl	403db4 <network_get>
  404368:	str	x0, [sp, #64]
  40436c:	ldr	x0, [sp, #64]
  404370:	cmp	x0, #0x0
  404374:	b.ne	4043a4 <network_set_dhcp_type+0x90>  // b.any
  404378:	add	x0, sp, #0x40
  40437c:	mov	x2, x0
  404380:	ldr	x1, [sp, #32]
  404384:	ldr	x0, [sp, #40]
  404388:	bl	403ba4 <network_new>
  40438c:	str	w0, [sp, #60]
  404390:	ldr	w0, [sp, #60]
  404394:	cmp	w0, #0x0
  404398:	b.ge	4043a4 <network_set_dhcp_type+0x90>  // b.tcont
  40439c:	ldr	w0, [sp, #60]
  4043a0:	b	4043b4 <network_set_dhcp_type+0xa0>
  4043a4:	ldr	x0, [sp, #64]
  4043a8:	ldr	w1, [sp, #56]
  4043ac:	str	w1, [x0, #20]
  4043b0:	mov	w0, #0x0                   	// #0
  4043b4:	mov	w1, w0
  4043b8:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4043bc:	add	x0, x0, #0xb90
  4043c0:	ldr	x2, [sp, #72]
  4043c4:	ldr	x0, [x0]
  4043c8:	eor	x0, x2, x0
  4043cc:	cmp	x0, #0x0
  4043d0:	b.eq	4043d8 <network_set_dhcp_type+0xc4>  // b.none
  4043d4:	bl	401bb0 <__stack_chk_fail@plt>
  4043d8:	mov	w0, w1
  4043dc:	ldp	x29, x30, [sp], #80
  4043e0:	ret

00000000004043e4 <network_set_hostname>:
  4043e4:	stp	x29, x30, [sp, #-64]!
  4043e8:	mov	x29, sp
  4043ec:	str	x0, [sp, #40]
  4043f0:	str	x1, [sp, #32]
  4043f4:	str	x2, [sp, #24]
  4043f8:	ldr	x1, [sp, #32]
  4043fc:	ldr	x0, [sp, #40]
  404400:	bl	403db4 <network_get>
  404404:	str	x0, [sp, #56]
  404408:	ldr	x0, [sp, #56]
  40440c:	cmp	x0, #0x0
  404410:	b.ne	40441c <network_set_hostname+0x38>  // b.any
  404414:	mov	w0, #0xffffffed            	// #-19
  404418:	b	40442c <network_set_hostname+0x48>
  40441c:	ldr	x0, [sp, #56]
  404420:	add	x0, x0, #0x38
  404424:	ldr	x1, [sp, #24]
  404428:	bl	401a80 <free_and_strdup@plt>
  40442c:	ldp	x29, x30, [sp], #64
  404430:	ret

0000000000404434 <network_set_mtu>:
  404434:	stp	x29, x30, [sp, #-64]!
  404438:	mov	x29, sp
  40443c:	str	x0, [sp, #40]
  404440:	str	x1, [sp, #32]
  404444:	str	w2, [sp, #28]
  404448:	str	x3, [sp, #16]
  40444c:	ldr	x1, [sp, #32]
  404450:	ldr	x0, [sp, #40]
  404454:	bl	403db4 <network_get>
  404458:	str	x0, [sp, #56]
  40445c:	ldr	x0, [sp, #56]
  404460:	cmp	x0, #0x0
  404464:	b.ne	404470 <network_set_mtu+0x3c>  // b.any
  404468:	mov	w0, #0xffffffed            	// #-19
  40446c:	b	404488 <network_set_mtu+0x54>
  404470:	ldr	x0, [sp, #56]
  404474:	add	x0, x0, #0x10
  404478:	mov	x2, x0
  40447c:	ldr	x1, [sp, #16]
  404480:	ldr	w0, [sp, #28]
  404484:	bl	401b50 <parse_mtu@plt>
  404488:	ldp	x29, x30, [sp], #64
  40448c:	ret

0000000000404490 <network_set_mac_address>:
  404490:	stp	x29, x30, [sp, #-64]!
  404494:	mov	x29, sp
  404498:	str	x0, [sp, #40]
  40449c:	str	x1, [sp, #32]
  4044a0:	str	x2, [sp, #24]
  4044a4:	ldr	x1, [sp, #32]
  4044a8:	ldr	x0, [sp, #40]
  4044ac:	bl	403db4 <network_get>
  4044b0:	str	x0, [sp, #56]
  4044b4:	ldr	x0, [sp, #56]
  4044b8:	cmp	x0, #0x0
  4044bc:	b.ne	4044c8 <network_set_mac_address+0x38>  // b.any
  4044c0:	mov	w0, #0xffffffed            	// #-19
  4044c4:	b	4044dc <network_set_mac_address+0x4c>
  4044c8:	ldr	x0, [sp, #56]
  4044cc:	add	x0, x0, #0x8
  4044d0:	mov	x1, x0
  4044d4:	ldr	x0, [sp, #24]
  4044d8:	bl	401b80 <ether_addr_from_string@plt>
  4044dc:	ldp	x29, x30, [sp], #64
  4044e0:	ret

00000000004044e4 <network_set_address>:
  4044e4:	stp	x29, x30, [sp, #-80]!
  4044e8:	mov	x29, sp
  4044ec:	str	x0, [sp, #56]
  4044f0:	str	x1, [sp, #48]
  4044f4:	str	w2, [sp, #44]
  4044f8:	strb	w3, [sp, #43]
  4044fc:	str	x4, [sp, #32]
  404500:	str	x5, [sp, #24]
  404504:	ldr	x1, [sp, #32]
  404508:	ldr	w0, [sp, #44]
  40450c:	bl	401ba0 <in_addr_is_null@plt>
  404510:	cmp	w0, #0x0
  404514:	b.eq	404520 <network_set_address+0x3c>  // b.none
  404518:	mov	w0, #0x0                   	// #0
  40451c:	b	404560 <network_set_address+0x7c>
  404520:	ldr	x1, [sp, #48]
  404524:	ldr	x0, [sp, #56]
  404528:	bl	403db4 <network_get>
  40452c:	str	x0, [sp, #72]
  404530:	ldr	x0, [sp, #72]
  404534:	cmp	x0, #0x0
  404538:	b.ne	404544 <network_set_address+0x60>  // b.any
  40453c:	mov	w0, #0xffffffed            	// #-19
  404540:	b	404560 <network_set_address+0x7c>
  404544:	mov	x5, #0x0                   	// #0
  404548:	ldr	x4, [sp, #24]
  40454c:	ldr	x3, [sp, #32]
  404550:	ldrb	w2, [sp, #43]
  404554:	ldr	w1, [sp, #44]
  404558:	ldr	x0, [sp, #72]
  40455c:	bl	403584 <address_new>
  404560:	ldp	x29, x30, [sp], #80
  404564:	ret

0000000000404568 <network_set_route>:
  404568:	stp	x29, x30, [sp, #-96]!
  40456c:	mov	x29, sp
  404570:	str	x0, [sp, #56]
  404574:	str	x1, [sp, #48]
  404578:	str	w2, [sp, #44]
  40457c:	strb	w3, [sp, #43]
  404580:	str	x4, [sp, #32]
  404584:	str	x5, [sp, #24]
  404588:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  40458c:	add	x0, x0, #0xb90
  404590:	ldr	x1, [x0]
  404594:	str	x1, [sp, #88]
  404598:	mov	x1, #0x0                   	// #0
  40459c:	ldr	x1, [sp, #24]
  4045a0:	ldr	w0, [sp, #44]
  4045a4:	bl	401ba0 <in_addr_is_null@plt>
  4045a8:	cmp	w0, #0x0
  4045ac:	b.eq	4045b8 <network_set_route+0x50>  // b.none
  4045b0:	mov	w0, #0x0                   	// #0
  4045b4:	b	40461c <network_set_route+0xb4>
  4045b8:	ldr	x1, [sp, #48]
  4045bc:	ldr	x0, [sp, #56]
  4045c0:	bl	403db4 <network_get>
  4045c4:	str	x0, [sp, #80]
  4045c8:	ldr	x0, [sp, #80]
  4045cc:	cmp	x0, #0x0
  4045d0:	b.ne	404600 <network_set_route+0x98>  // b.any
  4045d4:	add	x0, sp, #0x50
  4045d8:	mov	x2, x0
  4045dc:	ldr	x1, [sp, #48]
  4045e0:	ldr	x0, [sp, #56]
  4045e4:	bl	403ba4 <network_new>
  4045e8:	str	w0, [sp, #76]
  4045ec:	ldr	w0, [sp, #76]
  4045f0:	cmp	w0, #0x0
  4045f4:	b.ge	404600 <network_set_route+0x98>  // b.tcont
  4045f8:	ldr	w0, [sp, #76]
  4045fc:	b	40461c <network_set_route+0xb4>
  404600:	ldr	x0, [sp, #80]
  404604:	mov	x5, #0x0                   	// #0
  404608:	ldr	x4, [sp, #24]
  40460c:	ldr	x3, [sp, #32]
  404610:	ldrb	w2, [sp, #43]
  404614:	ldr	w1, [sp, #44]
  404618:	bl	4038bc <route_new>
  40461c:	mov	w1, w0
  404620:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404624:	add	x0, x0, #0xb90
  404628:	ldr	x2, [sp, #88]
  40462c:	ldr	x0, [x0]
  404630:	eor	x0, x2, x0
  404634:	cmp	x0, #0x0
  404638:	b.eq	404640 <network_set_route+0xd8>  // b.none
  40463c:	bl	401bb0 <__stack_chk_fail@plt>
  404640:	mov	w0, w1
  404644:	ldp	x29, x30, [sp], #96
  404648:	ret

000000000040464c <network_set_dns>:
  40464c:	stp	x29, x30, [sp, #-96]!
  404650:	mov	x29, sp
  404654:	str	x0, [sp, #40]
  404658:	str	x1, [sp, #32]
  40465c:	str	x2, [sp, #24]
  404660:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404664:	add	x0, x0, #0xb90
  404668:	ldr	x1, [x0]
  40466c:	str	x1, [sp, #88]
  404670:	mov	x1, #0x0                   	// #0
  404674:	add	x1, sp, #0x48
  404678:	add	x0, sp, #0x38
  40467c:	mov	x2, x1
  404680:	mov	x1, x0
  404684:	ldr	x0, [sp, #24]
  404688:	bl	401a10 <in_addr_from_string_auto@plt>
  40468c:	str	w0, [sp, #60]
  404690:	ldr	w0, [sp, #60]
  404694:	cmp	w0, #0x0
  404698:	b.ge	4046a4 <network_set_dns+0x58>  // b.tcont
  40469c:	ldr	w0, [sp, #60]
  4046a0:	b	4046fc <network_set_dns+0xb0>
  4046a4:	ldr	x1, [sp, #32]
  4046a8:	ldr	x0, [sp, #40]
  4046ac:	bl	403db4 <network_get>
  4046b0:	str	x0, [sp, #64]
  4046b4:	ldr	x0, [sp, #64]
  4046b8:	cmp	x0, #0x0
  4046bc:	b.ne	4046ec <network_set_dns+0xa0>  // b.any
  4046c0:	add	x0, sp, #0x40
  4046c4:	mov	x2, x0
  4046c8:	ldr	x1, [sp, #32]
  4046cc:	ldr	x0, [sp, #40]
  4046d0:	bl	403ba4 <network_new>
  4046d4:	str	w0, [sp, #60]
  4046d8:	ldr	w0, [sp, #60]
  4046dc:	cmp	w0, #0x0
  4046e0:	b.ge	4046ec <network_set_dns+0xa0>  // b.tcont
  4046e4:	ldr	w0, [sp, #60]
  4046e8:	b	4046fc <network_set_dns+0xb0>
  4046ec:	ldr	x0, [sp, #64]
  4046f0:	add	x0, x0, #0x18
  4046f4:	ldr	x1, [sp, #24]
  4046f8:	bl	401b90 <strv_extend@plt>
  4046fc:	mov	w1, w0
  404700:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404704:	add	x0, x0, #0xb90
  404708:	ldr	x2, [sp, #88]
  40470c:	ldr	x0, [x0]
  404710:	eor	x0, x2, x0
  404714:	cmp	x0, #0x0
  404718:	b.eq	404720 <network_set_dns+0xd4>  // b.none
  40471c:	bl	401bb0 <__stack_chk_fail@plt>
  404720:	mov	w0, w1
  404724:	ldp	x29, x30, [sp], #96
  404728:	ret

000000000040472c <network_set_dhcp_use_dns>:
  40472c:	stp	x29, x30, [sp, #-80]!
  404730:	mov	x29, sp
  404734:	str	x0, [sp, #40]
  404738:	str	x1, [sp, #32]
  40473c:	strb	w2, [sp, #31]
  404740:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404744:	add	x0, x0, #0xb90
  404748:	ldr	x1, [x0]
  40474c:	str	x1, [sp, #72]
  404750:	mov	x1, #0x0                   	// #0
  404754:	ldr	x1, [sp, #32]
  404758:	ldr	x0, [sp, #40]
  40475c:	bl	403db4 <network_get>
  404760:	str	x0, [sp, #64]
  404764:	ldr	x0, [sp, #64]
  404768:	cmp	x0, #0x0
  40476c:	b.ne	40479c <network_set_dhcp_use_dns+0x70>  // b.any
  404770:	add	x0, sp, #0x40
  404774:	mov	x2, x0
  404778:	ldr	x1, [sp, #32]
  40477c:	ldr	x0, [sp, #40]
  404780:	bl	403ba4 <network_new>
  404784:	str	w0, [sp, #60]
  404788:	ldr	w0, [sp, #60]
  40478c:	cmp	w0, #0x0
  404790:	b.ge	40479c <network_set_dhcp_use_dns+0x70>  // b.tcont
  404794:	ldr	w0, [sp, #60]
  404798:	b	4047ac <network_set_dhcp_use_dns+0x80>
  40479c:	ldr	x0, [sp, #64]
  4047a0:	ldrb	w1, [sp, #31]
  4047a4:	str	w1, [x0, #64]
  4047a8:	mov	w0, #0x0                   	// #0
  4047ac:	mov	w1, w0
  4047b0:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4047b4:	add	x0, x0, #0xb90
  4047b8:	ldr	x2, [sp, #72]
  4047bc:	ldr	x0, [x0]
  4047c0:	eor	x0, x2, x0
  4047c4:	cmp	x0, #0x0
  4047c8:	b.eq	4047d0 <network_set_dhcp_use_dns+0xa4>  // b.none
  4047cc:	bl	401bb0 <__stack_chk_fail@plt>
  4047d0:	mov	w0, w1
  4047d4:	ldp	x29, x30, [sp], #80
  4047d8:	ret

00000000004047dc <network_set_vlan>:
  4047dc:	stp	x29, x30, [sp, #-80]!
  4047e0:	mov	x29, sp
  4047e4:	str	x0, [sp, #40]
  4047e8:	str	x1, [sp, #32]
  4047ec:	str	x2, [sp, #24]
  4047f0:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4047f4:	add	x0, x0, #0xb90
  4047f8:	ldr	x1, [x0]
  4047fc:	str	x1, [sp, #72]
  404800:	mov	x1, #0x0                   	// #0
  404804:	ldr	x1, [sp, #32]
  404808:	ldr	x0, [sp, #40]
  40480c:	bl	403db4 <network_get>
  404810:	str	x0, [sp, #64]
  404814:	ldr	x0, [sp, #64]
  404818:	cmp	x0, #0x0
  40481c:	b.ne	40484c <network_set_vlan+0x70>  // b.any
  404820:	add	x0, sp, #0x40
  404824:	mov	x2, x0
  404828:	ldr	x1, [sp, #32]
  40482c:	ldr	x0, [sp, #40]
  404830:	bl	403ba4 <network_new>
  404834:	str	w0, [sp, #60]
  404838:	ldr	w0, [sp, #60]
  40483c:	cmp	w0, #0x0
  404840:	b.ge	40484c <network_set_vlan+0x70>  // b.tcont
  404844:	ldr	w0, [sp, #60]
  404848:	b	40485c <network_set_vlan+0x80>
  40484c:	ldr	x0, [sp, #64]
  404850:	add	x0, x0, #0x20
  404854:	ldr	x1, [sp, #24]
  404858:	bl	401a80 <free_and_strdup@plt>
  40485c:	mov	w1, w0
  404860:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404864:	add	x0, x0, #0xb90
  404868:	ldr	x2, [sp, #72]
  40486c:	ldr	x0, [x0]
  404870:	eor	x0, x2, x0
  404874:	cmp	x0, #0x0
  404878:	b.eq	404880 <network_set_vlan+0xa4>  // b.none
  40487c:	bl	401bb0 <__stack_chk_fail@plt>
  404880:	mov	w0, w1
  404884:	ldp	x29, x30, [sp], #80
  404888:	ret

000000000040488c <network_set_bridge>:
  40488c:	stp	x29, x30, [sp, #-80]!
  404890:	mov	x29, sp
  404894:	str	x0, [sp, #40]
  404898:	str	x1, [sp, #32]
  40489c:	str	x2, [sp, #24]
  4048a0:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4048a4:	add	x0, x0, #0xb90
  4048a8:	ldr	x1, [x0]
  4048ac:	str	x1, [sp, #72]
  4048b0:	mov	x1, #0x0                   	// #0
  4048b4:	ldr	x1, [sp, #32]
  4048b8:	ldr	x0, [sp, #40]
  4048bc:	bl	403db4 <network_get>
  4048c0:	str	x0, [sp, #64]
  4048c4:	ldr	x0, [sp, #64]
  4048c8:	cmp	x0, #0x0
  4048cc:	b.ne	4048fc <network_set_bridge+0x70>  // b.any
  4048d0:	add	x0, sp, #0x40
  4048d4:	mov	x2, x0
  4048d8:	ldr	x1, [sp, #32]
  4048dc:	ldr	x0, [sp, #40]
  4048e0:	bl	403ba4 <network_new>
  4048e4:	str	w0, [sp, #60]
  4048e8:	ldr	w0, [sp, #60]
  4048ec:	cmp	w0, #0x0
  4048f0:	b.ge	4048fc <network_set_bridge+0x70>  // b.tcont
  4048f4:	ldr	w0, [sp, #60]
  4048f8:	b	40490c <network_set_bridge+0x80>
  4048fc:	ldr	x0, [sp, #64]
  404900:	add	x0, x0, #0x28
  404904:	ldr	x1, [sp, #24]
  404908:	bl	401a80 <free_and_strdup@plt>
  40490c:	mov	w1, w0
  404910:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404914:	add	x0, x0, #0xb90
  404918:	ldr	x2, [sp, #72]
  40491c:	ldr	x0, [x0]
  404920:	eor	x0, x2, x0
  404924:	cmp	x0, #0x0
  404928:	b.eq	404930 <network_set_bridge+0xa4>  // b.none
  40492c:	bl	401bb0 <__stack_chk_fail@plt>
  404930:	mov	w0, w1
  404934:	ldp	x29, x30, [sp], #80
  404938:	ret

000000000040493c <network_set_bond>:
  40493c:	stp	x29, x30, [sp, #-80]!
  404940:	mov	x29, sp
  404944:	str	x0, [sp, #40]
  404948:	str	x1, [sp, #32]
  40494c:	str	x2, [sp, #24]
  404950:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404954:	add	x0, x0, #0xb90
  404958:	ldr	x1, [x0]
  40495c:	str	x1, [sp, #72]
  404960:	mov	x1, #0x0                   	// #0
  404964:	ldr	x1, [sp, #32]
  404968:	ldr	x0, [sp, #40]
  40496c:	bl	403db4 <network_get>
  404970:	str	x0, [sp, #64]
  404974:	ldr	x0, [sp, #64]
  404978:	cmp	x0, #0x0
  40497c:	b.ne	4049ac <network_set_bond+0x70>  // b.any
  404980:	add	x0, sp, #0x40
  404984:	mov	x2, x0
  404988:	ldr	x1, [sp, #32]
  40498c:	ldr	x0, [sp, #40]
  404990:	bl	403ba4 <network_new>
  404994:	str	w0, [sp, #60]
  404998:	ldr	w0, [sp, #60]
  40499c:	cmp	w0, #0x0
  4049a0:	b.ge	4049ac <network_set_bond+0x70>  // b.tcont
  4049a4:	ldr	w0, [sp, #60]
  4049a8:	b	4049bc <network_set_bond+0x80>
  4049ac:	ldr	x0, [sp, #64]
  4049b0:	add	x0, x0, #0x30
  4049b4:	ldr	x1, [sp, #24]
  4049b8:	bl	401a80 <free_and_strdup@plt>
  4049bc:	mov	w1, w0
  4049c0:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4049c4:	add	x0, x0, #0xb90
  4049c8:	ldr	x2, [sp, #72]
  4049cc:	ldr	x0, [x0]
  4049d0:	eor	x0, x2, x0
  4049d4:	cmp	x0, #0x0
  4049d8:	b.eq	4049e0 <network_set_bond+0xa4>  // b.none
  4049dc:	bl	401bb0 <__stack_chk_fail@plt>
  4049e0:	mov	w0, w1
  4049e4:	ldp	x29, x30, [sp], #80
  4049e8:	ret

00000000004049ec <parse_cmdline_ip_mtu_mac>:
  4049ec:	stp	x29, x30, [sp, #-112]!
  4049f0:	mov	x29, sp
  4049f4:	str	x0, [x29, #40]
  4049f8:	str	x1, [x29, #32]
  4049fc:	str	w2, [x29, #28]
  404a00:	str	x3, [x29, #16]
  404a04:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404a08:	add	x0, x0, #0xb90
  404a0c:	ldr	x1, [x0]
  404a10:	str	x1, [x29, #104]
  404a14:	mov	x1, #0x0                   	// #0
  404a18:	mov	w1, #0x3a                  	// #58
  404a1c:	ldr	x0, [x29, #16]
  404a20:	bl	401cb0 <strchr@plt>
  404a24:	str	x0, [x29, #72]
  404a28:	ldr	x0, [x29, #72]
  404a2c:	cmp	x0, #0x0
  404a30:	b.ne	404a40 <parse_cmdline_ip_mtu_mac+0x54>  // b.any
  404a34:	ldr	x0, [x29, #16]
  404a38:	str	x0, [x29, #64]
  404a3c:	b	404ab4 <parse_cmdline_ip_mtu_mac+0xc8>
  404a40:	ldr	x0, [x29, #16]
  404a44:	str	x0, [x29, #80]
  404a48:	ldr	x1, [x29, #72]
  404a4c:	ldr	x0, [x29, #16]
  404a50:	sub	x0, x1, x0
  404a54:	mov	x1, x0
  404a58:	ldr	x0, [x29, #80]
  404a5c:	bl	401a70 <strnlen@plt>
  404a60:	str	x0, [x29, #88]
  404a64:	ldr	x0, [x29, #88]
  404a68:	add	x0, x0, #0x1
  404a6c:	add	x0, x0, #0xf
  404a70:	lsr	x0, x0, #4
  404a74:	lsl	x0, x0, #4
  404a78:	sub	sp, sp, x0
  404a7c:	mov	x0, sp
  404a80:	add	x0, x0, #0xf
  404a84:	lsr	x0, x0, #4
  404a88:	lsl	x0, x0, #4
  404a8c:	str	x0, [x29, #96]
  404a90:	ldr	x1, [x29, #96]
  404a94:	ldr	x0, [x29, #88]
  404a98:	add	x0, x1, x0
  404a9c:	strb	wzr, [x0]
  404aa0:	ldr	x2, [x29, #88]
  404aa4:	ldr	x1, [x29, #80]
  404aa8:	ldr	x0, [x29, #96]
  404aac:	bl	401ab0 <memcpy@plt>
  404ab0:	str	x0, [x29, #64]
  404ab4:	ldr	x3, [x29, #64]
  404ab8:	ldr	w2, [x29, #28]
  404abc:	ldr	x1, [x29, #32]
  404ac0:	ldr	x0, [x29, #40]
  404ac4:	bl	404434 <network_set_mtu>
  404ac8:	str	w0, [x29, #60]
  404acc:	ldr	w0, [x29, #60]
  404ad0:	cmp	w0, #0x0
  404ad4:	b.ge	404ae0 <parse_cmdline_ip_mtu_mac+0xf4>  // b.tcont
  404ad8:	ldr	w0, [x29, #60]
  404adc:	b	404b28 <parse_cmdline_ip_mtu_mac+0x13c>
  404ae0:	ldr	x0, [x29, #72]
  404ae4:	cmp	x0, #0x0
  404ae8:	b.ne	404af4 <parse_cmdline_ip_mtu_mac+0x108>  // b.any
  404aec:	mov	w0, #0x0                   	// #0
  404af0:	b	404b28 <parse_cmdline_ip_mtu_mac+0x13c>
  404af4:	ldr	x0, [x29, #72]
  404af8:	add	x0, x0, #0x1
  404afc:	mov	x2, x0
  404b00:	ldr	x1, [x29, #32]
  404b04:	ldr	x0, [x29, #40]
  404b08:	bl	404490 <network_set_mac_address>
  404b0c:	str	w0, [x29, #60]
  404b10:	ldr	w0, [x29, #60]
  404b14:	cmp	w0, #0x0
  404b18:	b.ge	404b24 <parse_cmdline_ip_mtu_mac+0x138>  // b.tcont
  404b1c:	ldr	w0, [x29, #60]
  404b20:	b	404b28 <parse_cmdline_ip_mtu_mac+0x13c>
  404b24:	mov	w0, #0x0                   	// #0
  404b28:	mov	w1, w0
  404b2c:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404b30:	add	x0, x0, #0xb90
  404b34:	ldr	x2, [x29, #104]
  404b38:	ldr	x0, [x0]
  404b3c:	eor	x0, x2, x0
  404b40:	cmp	x0, #0x0
  404b44:	b.eq	404b4c <parse_cmdline_ip_mtu_mac+0x160>  // b.none
  404b48:	bl	401bb0 <__stack_chk_fail@plt>
  404b4c:	mov	w0, w1
  404b50:	mov	sp, x29
  404b54:	ldp	x29, x30, [sp], #112
  404b58:	ret

0000000000404b5c <parse_ip_address_one>:
  404b5c:	stp	x29, x30, [sp, #-144]!
  404b60:	mov	x29, sp
  404b64:	str	w0, [x29, #44]
  404b68:	str	x1, [x29, #32]
  404b6c:	str	x2, [x29, #24]
  404b70:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404b74:	add	x0, x0, #0xb90
  404b78:	ldr	x1, [x0]
  404b7c:	str	x1, [x29, #136]
  404b80:	mov	x1, #0x0                   	// #0
  404b84:	ldr	x0, [x29, #32]
  404b88:	ldr	x0, [x0]
  404b8c:	str	x0, [x29, #64]
  404b90:	ldr	x0, [x29, #64]
  404b94:	ldrb	w0, [x0]
  404b98:	cmp	w0, #0x3a
  404b9c:	b.ne	404bb8 <parse_ip_address_one+0x5c>  // b.any
  404ba0:	ldr	x0, [x29, #64]
  404ba4:	add	x1, x0, #0x1
  404ba8:	ldr	x0, [x29, #32]
  404bac:	str	x1, [x0]
  404bb0:	mov	w0, #0x0                   	// #0
  404bb4:	b	404d88 <parse_ip_address_one+0x22c>
  404bb8:	ldr	w0, [x29, #44]
  404bbc:	cmp	w0, #0xa
  404bc0:	b.ne	404cac <parse_ip_address_one+0x150>  // b.any
  404bc4:	ldr	x0, [x29, #64]
  404bc8:	ldrb	w0, [x0]
  404bcc:	cmp	w0, #0x5b
  404bd0:	b.eq	404bdc <parse_ip_address_one+0x80>  // b.none
  404bd4:	mov	w0, #0xffffffea            	// #-22
  404bd8:	b	404d88 <parse_ip_address_one+0x22c>
  404bdc:	ldr	x0, [x29, #64]
  404be0:	add	x0, x0, #0x1
  404be4:	mov	w1, #0x5d                  	// #93
  404be8:	bl	401cb0 <strchr@plt>
  404bec:	str	x0, [x29, #80]
  404bf0:	ldr	x0, [x29, #80]
  404bf4:	cmp	x0, #0x0
  404bf8:	b.ne	404c04 <parse_ip_address_one+0xa8>  // b.any
  404bfc:	mov	w0, #0xffffffea            	// #-22
  404c00:	b	404d88 <parse_ip_address_one+0x22c>
  404c04:	ldr	x0, [x29, #80]
  404c08:	add	x0, x0, #0x1
  404c0c:	ldrb	w0, [x0]
  404c10:	cmp	w0, #0x3a
  404c14:	b.eq	404c20 <parse_ip_address_one+0xc4>  // b.none
  404c18:	mov	w0, #0xffffffea            	// #-22
  404c1c:	b	404d88 <parse_ip_address_one+0x22c>
  404c20:	ldr	x0, [x29, #64]
  404c24:	add	x0, x0, #0x1
  404c28:	str	x0, [x29, #112]
  404c2c:	ldr	x1, [x29, #80]
  404c30:	ldr	x0, [x29, #64]
  404c34:	sub	x0, x1, x0
  404c38:	sub	x0, x0, #0x1
  404c3c:	mov	x1, x0
  404c40:	ldr	x0, [x29, #112]
  404c44:	bl	401a70 <strnlen@plt>
  404c48:	str	x0, [x29, #120]
  404c4c:	ldr	x0, [x29, #120]
  404c50:	add	x0, x0, #0x1
  404c54:	add	x0, x0, #0xf
  404c58:	lsr	x0, x0, #4
  404c5c:	lsl	x0, x0, #4
  404c60:	sub	sp, sp, x0
  404c64:	mov	x0, sp
  404c68:	add	x0, x0, #0xf
  404c6c:	lsr	x0, x0, #4
  404c70:	lsl	x0, x0, #4
  404c74:	str	x0, [x29, #128]
  404c78:	ldr	x1, [x29, #128]
  404c7c:	ldr	x0, [x29, #120]
  404c80:	add	x0, x1, x0
  404c84:	strb	wzr, [x0]
  404c88:	ldr	x2, [x29, #120]
  404c8c:	ldr	x1, [x29, #112]
  404c90:	ldr	x0, [x29, #128]
  404c94:	bl	401ab0 <memcpy@plt>
  404c98:	str	x0, [x29, #72]
  404c9c:	ldr	x0, [x29, #80]
  404ca0:	add	x0, x0, #0x2
  404ca4:	str	x0, [x29, #64]
  404ca8:	b	404d50 <parse_ip_address_one+0x1f4>
  404cac:	mov	w1, #0x3a                  	// #58
  404cb0:	ldr	x0, [x29, #64]
  404cb4:	bl	401cb0 <strchr@plt>
  404cb8:	str	x0, [x29, #80]
  404cbc:	ldr	x0, [x29, #80]
  404cc0:	cmp	x0, #0x0
  404cc4:	b.ne	404cd0 <parse_ip_address_one+0x174>  // b.any
  404cc8:	mov	w0, #0xffffffea            	// #-22
  404ccc:	b	404d88 <parse_ip_address_one+0x22c>
  404cd0:	ldr	x0, [x29, #64]
  404cd4:	str	x0, [x29, #88]
  404cd8:	ldr	x1, [x29, #80]
  404cdc:	ldr	x0, [x29, #64]
  404ce0:	sub	x0, x1, x0
  404ce4:	mov	x1, x0
  404ce8:	ldr	x0, [x29, #88]
  404cec:	bl	401a70 <strnlen@plt>
  404cf0:	str	x0, [x29, #96]
  404cf4:	ldr	x0, [x29, #96]
  404cf8:	add	x0, x0, #0x1
  404cfc:	add	x0, x0, #0xf
  404d00:	lsr	x0, x0, #4
  404d04:	lsl	x0, x0, #4
  404d08:	sub	sp, sp, x0
  404d0c:	mov	x0, sp
  404d10:	add	x0, x0, #0xf
  404d14:	lsr	x0, x0, #4
  404d18:	lsl	x0, x0, #4
  404d1c:	str	x0, [x29, #104]
  404d20:	ldr	x1, [x29, #104]
  404d24:	ldr	x0, [x29, #96]
  404d28:	add	x0, x1, x0
  404d2c:	strb	wzr, [x0]
  404d30:	ldr	x2, [x29, #96]
  404d34:	ldr	x1, [x29, #88]
  404d38:	ldr	x0, [x29, #104]
  404d3c:	bl	401ab0 <memcpy@plt>
  404d40:	str	x0, [x29, #72]
  404d44:	ldr	x0, [x29, #80]
  404d48:	add	x0, x0, #0x1
  404d4c:	str	x0, [x29, #64]
  404d50:	ldr	x2, [x29, #24]
  404d54:	ldr	x1, [x29, #72]
  404d58:	ldr	w0, [x29, #44]
  404d5c:	bl	401aa0 <in_addr_from_string@plt>
  404d60:	str	w0, [x29, #60]
  404d64:	ldr	w0, [x29, #60]
  404d68:	cmp	w0, #0x0
  404d6c:	b.ge	404d78 <parse_ip_address_one+0x21c>  // b.tcont
  404d70:	ldr	w0, [x29, #60]
  404d74:	b	404d88 <parse_ip_address_one+0x22c>
  404d78:	ldr	x0, [x29, #32]
  404d7c:	ldr	x1, [x29, #64]
  404d80:	str	x1, [x0]
  404d84:	mov	w0, #0x1                   	// #1
  404d88:	mov	w1, w0
  404d8c:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404d90:	add	x0, x0, #0xb90
  404d94:	ldr	x2, [x29, #136]
  404d98:	ldr	x0, [x0]
  404d9c:	eor	x0, x2, x0
  404da0:	cmp	x0, #0x0
  404da4:	b.eq	404dac <parse_ip_address_one+0x250>  // b.none
  404da8:	bl	401bb0 <__stack_chk_fail@plt>
  404dac:	mov	w0, w1
  404db0:	mov	sp, x29
  404db4:	ldp	x29, x30, [sp], #144
  404db8:	ret

0000000000404dbc <parse_netmask_or_prefixlen>:
  404dbc:	stp	x29, x30, [sp, #-128]!
  404dc0:	mov	x29, sp
  404dc4:	str	w0, [x29, #44]
  404dc8:	str	x1, [x29, #32]
  404dcc:	str	x2, [x29, #24]
  404dd0:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404dd4:	add	x0, x0, #0xb90
  404dd8:	ldr	x1, [x0]
  404ddc:	str	x1, [x29, #120]
  404de0:	mov	x1, #0x0                   	// #0
  404de4:	add	x0, x29, #0x68
  404de8:	mov	x2, x0
  404dec:	ldr	x1, [x29, #32]
  404df0:	ldr	w0, [x29, #44]
  404df4:	bl	404b5c <parse_ip_address_one>
  404df8:	str	w0, [x29, #60]
  404dfc:	ldr	w0, [x29, #60]
  404e00:	cmp	w0, #0x0
  404e04:	b.le	404e34 <parse_netmask_or_prefixlen+0x78>
  404e08:	ldr	w0, [x29, #44]
  404e0c:	cmp	w0, #0xa
  404e10:	b.ne	404e1c <parse_netmask_or_prefixlen+0x60>  // b.any
  404e14:	mov	w0, #0xffffffea            	// #-22
  404e18:	b	404f40 <parse_netmask_or_prefixlen+0x184>
  404e1c:	add	x0, x29, #0x68
  404e20:	bl	401af0 <in4_addr_netmask_to_prefixlen@plt>
  404e24:	and	w1, w0, #0xff
  404e28:	ldr	x0, [x29, #24]
  404e2c:	strb	w1, [x0]
  404e30:	b	404f3c <parse_netmask_or_prefixlen+0x180>
  404e34:	ldr	w0, [x29, #60]
  404e38:	cmp	w0, #0x0
  404e3c:	b.ne	404e64 <parse_netmask_or_prefixlen+0xa8>  // b.any
  404e40:	ldr	w0, [x29, #44]
  404e44:	cmp	w0, #0xa
  404e48:	b.ne	404e54 <parse_netmask_or_prefixlen+0x98>  // b.any
  404e4c:	mov	w0, #0x80                  	// #128
  404e50:	b	404e58 <parse_netmask_or_prefixlen+0x9c>
  404e54:	mov	w0, #0x20                  	// #32
  404e58:	ldr	x1, [x29, #24]
  404e5c:	strb	w0, [x1]
  404e60:	b	404f3c <parse_netmask_or_prefixlen+0x180>
  404e64:	ldr	x0, [x29, #32]
  404e68:	ldr	x0, [x0]
  404e6c:	mov	w1, #0x3a                  	// #58
  404e70:	bl	401cb0 <strchr@plt>
  404e74:	str	x0, [x29, #64]
  404e78:	ldr	x0, [x29, #64]
  404e7c:	cmp	x0, #0x0
  404e80:	b.ne	404e8c <parse_netmask_or_prefixlen+0xd0>  // b.any
  404e84:	mov	w0, #0xffffffea            	// #-22
  404e88:	b	404f40 <parse_netmask_or_prefixlen+0x184>
  404e8c:	ldr	x0, [x29, #32]
  404e90:	ldr	x0, [x0]
  404e94:	str	x0, [x29, #72]
  404e98:	ldr	x0, [x29, #32]
  404e9c:	ldr	x0, [x0]
  404ea0:	ldr	x1, [x29, #64]
  404ea4:	sub	x0, x1, x0
  404ea8:	mov	x1, x0
  404eac:	ldr	x0, [x29, #72]
  404eb0:	bl	401a70 <strnlen@plt>
  404eb4:	str	x0, [x29, #80]
  404eb8:	ldr	x0, [x29, #80]
  404ebc:	add	x0, x0, #0x1
  404ec0:	add	x0, x0, #0xf
  404ec4:	lsr	x0, x0, #4
  404ec8:	lsl	x0, x0, #4
  404ecc:	sub	sp, sp, x0
  404ed0:	mov	x0, sp
  404ed4:	add	x0, x0, #0xf
  404ed8:	lsr	x0, x0, #4
  404edc:	lsl	x0, x0, #4
  404ee0:	str	x0, [x29, #88]
  404ee4:	ldr	x1, [x29, #88]
  404ee8:	ldr	x0, [x29, #80]
  404eec:	add	x0, x1, x0
  404ef0:	strb	wzr, [x0]
  404ef4:	ldr	x2, [x29, #80]
  404ef8:	ldr	x1, [x29, #72]
  404efc:	ldr	x0, [x29, #88]
  404f00:	bl	401ab0 <memcpy@plt>
  404f04:	str	x0, [x29, #96]
  404f08:	ldr	x1, [x29, #24]
  404f0c:	ldr	x0, [x29, #96]
  404f10:	bl	401b30 <safe_atou8@plt>
  404f14:	str	w0, [x29, #60]
  404f18:	ldr	w0, [x29, #60]
  404f1c:	cmp	w0, #0x0
  404f20:	b.ge	404f2c <parse_netmask_or_prefixlen+0x170>  // b.tcont
  404f24:	ldr	w0, [x29, #60]
  404f28:	b	404f40 <parse_netmask_or_prefixlen+0x184>
  404f2c:	ldr	x0, [x29, #64]
  404f30:	add	x1, x0, #0x1
  404f34:	ldr	x0, [x29, #32]
  404f38:	str	x1, [x0]
  404f3c:	mov	w0, #0x0                   	// #0
  404f40:	mov	w1, w0
  404f44:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404f48:	add	x0, x0, #0xb90
  404f4c:	ldr	x2, [x29, #120]
  404f50:	ldr	x0, [x0]
  404f54:	eor	x0, x2, x0
  404f58:	cmp	x0, #0x0
  404f5c:	b.eq	404f64 <parse_netmask_or_prefixlen+0x1a8>  // b.none
  404f60:	bl	401bb0 <__stack_chk_fail@plt>
  404f64:	mov	w0, w1
  404f68:	mov	sp, x29
  404f6c:	ldp	x29, x30, [sp], #128
  404f70:	ret

0000000000404f74 <parse_cmdline_ip_address>:
  404f74:	stp	x29, x30, [sp, #-256]!
  404f78:	mov	x29, sp
  404f7c:	str	x0, [x29, #40]
  404f80:	str	w1, [x29, #36]
  404f84:	str	x2, [x29, #24]
  404f88:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  404f8c:	add	x0, x0, #0xb90
  404f90:	ldr	x1, [x0]
  404f94:	str	x1, [x29, #248]
  404f98:	mov	x1, #0x0                   	// #0
  404f9c:	stp	xzr, xzr, [x29, #200]
  404fa0:	stp	xzr, xzr, [x29, #216]
  404fa4:	stp	xzr, xzr, [x29, #232]
  404fa8:	add	x1, x29, #0xc8
  404fac:	add	x0, x29, #0x18
  404fb0:	mov	x2, x1
  404fb4:	mov	x1, x0
  404fb8:	ldr	w0, [x29, #36]
  404fbc:	bl	404b5c <parse_ip_address_one>
  404fc0:	str	w0, [x29, #60]
  404fc4:	ldr	w0, [x29, #60]
  404fc8:	cmp	w0, #0x0
  404fcc:	b.ge	404fd8 <parse_cmdline_ip_address+0x64>  // b.tcont
  404fd0:	ldr	w0, [x29, #60]
  404fd4:	b	4054a8 <parse_cmdline_ip_address+0x534>
  404fd8:	add	x1, x29, #0xd8
  404fdc:	add	x0, x29, #0x18
  404fe0:	mov	x2, x1
  404fe4:	mov	x1, x0
  404fe8:	ldr	w0, [x29, #36]
  404fec:	bl	404b5c <parse_ip_address_one>
  404ff0:	str	w0, [x29, #60]
  404ff4:	ldr	w0, [x29, #60]
  404ff8:	cmp	w0, #0x0
  404ffc:	b.ge	405008 <parse_cmdline_ip_address+0x94>  // b.tcont
  405000:	ldr	w0, [x29, #60]
  405004:	b	4054a8 <parse_cmdline_ip_address+0x534>
  405008:	add	x1, x29, #0xe8
  40500c:	add	x0, x29, #0x18
  405010:	mov	x2, x1
  405014:	mov	x1, x0
  405018:	ldr	w0, [x29, #36]
  40501c:	bl	404b5c <parse_ip_address_one>
  405020:	str	w0, [x29, #60]
  405024:	ldr	w0, [x29, #60]
  405028:	cmp	w0, #0x0
  40502c:	b.ge	405038 <parse_cmdline_ip_address+0xc4>  // b.tcont
  405030:	ldr	w0, [x29, #60]
  405034:	b	4054a8 <parse_cmdline_ip_address+0x534>
  405038:	add	x1, x29, #0x3b
  40503c:	add	x0, x29, #0x18
  405040:	mov	x2, x1
  405044:	mov	x1, x0
  405048:	ldr	w0, [x29, #36]
  40504c:	bl	404dbc <parse_netmask_or_prefixlen>
  405050:	str	w0, [x29, #60]
  405054:	ldr	w0, [x29, #60]
  405058:	cmp	w0, #0x0
  40505c:	b.ge	405068 <parse_cmdline_ip_address+0xf4>  // b.tcont
  405060:	ldr	w0, [x29, #60]
  405064:	b	4054a8 <parse_cmdline_ip_address+0x534>
  405068:	ldr	x0, [x29, #24]
  40506c:	mov	w1, #0x3a                  	// #58
  405070:	bl	401cb0 <strchr@plt>
  405074:	str	x0, [x29, #72]
  405078:	ldr	x0, [x29, #72]
  40507c:	cmp	x0, #0x0
  405080:	b.ne	40508c <parse_cmdline_ip_address+0x118>  // b.any
  405084:	mov	w0, #0xffffffea            	// #-22
  405088:	b	4054a8 <parse_cmdline_ip_address+0x534>
  40508c:	ldr	x0, [x29, #24]
  405090:	str	x0, [x29, #80]
  405094:	ldr	x0, [x29, #24]
  405098:	ldr	x1, [x29, #72]
  40509c:	sub	x0, x1, x0
  4050a0:	mov	x1, x0
  4050a4:	ldr	x0, [x29, #80]
  4050a8:	bl	401a70 <strnlen@plt>
  4050ac:	str	x0, [x29, #88]
  4050b0:	ldr	x0, [x29, #88]
  4050b4:	add	x0, x0, #0x1
  4050b8:	add	x0, x0, #0xf
  4050bc:	lsr	x0, x0, #4
  4050c0:	lsl	x0, x0, #4
  4050c4:	sub	sp, sp, x0
  4050c8:	mov	x0, sp
  4050cc:	add	x0, x0, #0xf
  4050d0:	lsr	x0, x0, #4
  4050d4:	lsl	x0, x0, #4
  4050d8:	str	x0, [x29, #96]
  4050dc:	ldr	x1, [x29, #96]
  4050e0:	ldr	x0, [x29, #88]
  4050e4:	add	x0, x1, x0
  4050e8:	strb	wzr, [x0]
  4050ec:	ldr	x2, [x29, #88]
  4050f0:	ldr	x1, [x29, #80]
  4050f4:	ldr	x0, [x29, #96]
  4050f8:	bl	401ab0 <memcpy@plt>
  4050fc:	str	x0, [x29, #104]
  405100:	mov	w1, #0x0                   	// #0
  405104:	ldr	x0, [x29, #104]
  405108:	bl	401ac0 <hostname_is_valid@plt>
  40510c:	and	w0, w0, #0xff
  405110:	eor	w0, w0, #0x1
  405114:	and	w0, w0, #0xff
  405118:	cmp	w0, #0x0
  40511c:	b.eq	405128 <parse_cmdline_ip_address+0x1b4>  // b.none
  405120:	mov	w0, #0xffffffea            	// #-22
  405124:	b	4054a8 <parse_cmdline_ip_address+0x534>
  405128:	ldr	x0, [x29, #72]
  40512c:	add	x0, x0, #0x1
  405130:	str	x0, [x29, #24]
  405134:	ldr	x0, [x29, #24]
  405138:	mov	w1, #0x3a                  	// #58
  40513c:	bl	401cb0 <strchr@plt>
  405140:	str	x0, [x29, #72]
  405144:	ldr	x0, [x29, #72]
  405148:	cmp	x0, #0x0
  40514c:	b.ne	405158 <parse_cmdline_ip_address+0x1e4>  // b.any
  405150:	mov	w0, #0xffffffea            	// #-22
  405154:	b	4054a8 <parse_cmdline_ip_address+0x534>
  405158:	ldr	x0, [x29, #24]
  40515c:	str	x0, [x29, #112]
  405160:	ldr	x0, [x29, #24]
  405164:	ldr	x1, [x29, #72]
  405168:	sub	x0, x1, x0
  40516c:	mov	x1, x0
  405170:	ldr	x0, [x29, #112]
  405174:	bl	401a70 <strnlen@plt>
  405178:	str	x0, [x29, #120]
  40517c:	ldr	x0, [x29, #120]
  405180:	add	x0, x0, #0x1
  405184:	add	x0, x0, #0xf
  405188:	lsr	x0, x0, #4
  40518c:	lsl	x0, x0, #4
  405190:	sub	sp, sp, x0
  405194:	mov	x0, sp
  405198:	add	x0, x0, #0xf
  40519c:	lsr	x0, x0, #4
  4051a0:	lsl	x0, x0, #4
  4051a4:	str	x0, [x29, #128]
  4051a8:	ldr	x1, [x29, #128]
  4051ac:	ldr	x0, [x29, #120]
  4051b0:	add	x0, x1, x0
  4051b4:	strb	wzr, [x0]
  4051b8:	ldr	x2, [x29, #120]
  4051bc:	ldr	x1, [x29, #112]
  4051c0:	ldr	x0, [x29, #128]
  4051c4:	bl	401ab0 <memcpy@plt>
  4051c8:	str	x0, [x29, #136]
  4051cc:	ldr	x0, [x29, #72]
  4051d0:	add	x0, x0, #0x1
  4051d4:	str	x0, [x29, #24]
  4051d8:	ldr	x0, [x29, #24]
  4051dc:	mov	w1, #0x3a                  	// #58
  4051e0:	bl	401cb0 <strchr@plt>
  4051e4:	str	x0, [x29, #72]
  4051e8:	ldr	x0, [x29, #72]
  4051ec:	cmp	x0, #0x0
  4051f0:	b.ne	405200 <parse_cmdline_ip_address+0x28c>  // b.any
  4051f4:	ldr	x0, [x29, #24]
  4051f8:	str	x0, [x29, #64]
  4051fc:	b	405274 <parse_cmdline_ip_address+0x300>
  405200:	ldr	x0, [x29, #24]
  405204:	str	x0, [x29, #144]
  405208:	ldr	x0, [x29, #24]
  40520c:	ldr	x1, [x29, #72]
  405210:	sub	x0, x1, x0
  405214:	mov	x1, x0
  405218:	ldr	x0, [x29, #144]
  40521c:	bl	401a70 <strnlen@plt>
  405220:	str	x0, [x29, #152]
  405224:	ldr	x0, [x29, #152]
  405228:	add	x0, x0, #0x1
  40522c:	add	x0, x0, #0xf
  405230:	lsr	x0, x0, #4
  405234:	lsl	x0, x0, #4
  405238:	sub	sp, sp, x0
  40523c:	mov	x0, sp
  405240:	add	x0, x0, #0xf
  405244:	lsr	x0, x0, #4
  405248:	lsl	x0, x0, #4
  40524c:	str	x0, [x29, #160]
  405250:	ldr	x1, [x29, #160]
  405254:	ldr	x0, [x29, #152]
  405258:	add	x0, x1, x0
  40525c:	strb	wzr, [x0]
  405260:	ldr	x2, [x29, #152]
  405264:	ldr	x1, [x29, #144]
  405268:	ldr	x0, [x29, #160]
  40526c:	bl	401ab0 <memcpy@plt>
  405270:	str	x0, [x29, #64]
  405274:	ldr	x2, [x29, #64]
  405278:	ldr	x1, [x29, #136]
  40527c:	ldr	x0, [x29, #40]
  405280:	bl	404314 <network_set_dhcp_type>
  405284:	str	w0, [x29, #60]
  405288:	ldr	w0, [x29, #60]
  40528c:	cmp	w0, #0x0
  405290:	b.ge	40529c <parse_cmdline_ip_address+0x328>  // b.tcont
  405294:	ldr	w0, [x29, #60]
  405298:	b	4054a8 <parse_cmdline_ip_address+0x534>
  40529c:	ldr	x2, [x29, #104]
  4052a0:	ldr	x1, [x29, #136]
  4052a4:	ldr	x0, [x29, #40]
  4052a8:	bl	4043e4 <network_set_hostname>
  4052ac:	str	w0, [x29, #60]
  4052b0:	ldr	w0, [x29, #60]
  4052b4:	cmp	w0, #0x0
  4052b8:	b.ge	4052c4 <parse_cmdline_ip_address+0x350>  // b.tcont
  4052bc:	ldr	w0, [x29, #60]
  4052c0:	b	4054a8 <parse_cmdline_ip_address+0x534>
  4052c4:	ldrb	w2, [x29, #59]
  4052c8:	add	x1, x29, #0xd8
  4052cc:	add	x0, x29, #0xc8
  4052d0:	mov	x5, x1
  4052d4:	mov	x4, x0
  4052d8:	mov	w3, w2
  4052dc:	ldr	w2, [x29, #36]
  4052e0:	ldr	x1, [x29, #136]
  4052e4:	ldr	x0, [x29, #40]
  4052e8:	bl	4044e4 <network_set_address>
  4052ec:	str	w0, [x29, #60]
  4052f0:	ldr	w0, [x29, #60]
  4052f4:	cmp	w0, #0x0
  4052f8:	b.ge	405304 <parse_cmdline_ip_address+0x390>  // b.tcont
  4052fc:	ldr	w0, [x29, #60]
  405300:	b	4054a8 <parse_cmdline_ip_address+0x534>
  405304:	add	x0, x29, #0xe8
  405308:	mov	x5, x0
  40530c:	mov	x4, #0x0                   	// #0
  405310:	mov	w3, #0x0                   	// #0
  405314:	ldr	w2, [x29, #36]
  405318:	ldr	x1, [x29, #136]
  40531c:	ldr	x0, [x29, #40]
  405320:	bl	404568 <network_set_route>
  405324:	str	w0, [x29, #60]
  405328:	ldr	w0, [x29, #60]
  40532c:	cmp	w0, #0x0
  405330:	b.ge	40533c <parse_cmdline_ip_address+0x3c8>  // b.tcont
  405334:	ldr	w0, [x29, #60]
  405338:	b	4054a8 <parse_cmdline_ip_address+0x534>
  40533c:	ldr	x0, [x29, #72]
  405340:	cmp	x0, #0x0
  405344:	b.ne	405350 <parse_cmdline_ip_address+0x3dc>  // b.any
  405348:	mov	w0, #0x0                   	// #0
  40534c:	b	4054a8 <parse_cmdline_ip_address+0x534>
  405350:	ldr	x0, [x29, #72]
  405354:	add	x0, x0, #0x1
  405358:	mov	x3, x0
  40535c:	mov	w2, #0x0                   	// #0
  405360:	ldr	x1, [x29, #136]
  405364:	ldr	x0, [x29, #40]
  405368:	bl	4049ec <parse_cmdline_ip_mtu_mac>
  40536c:	str	w0, [x29, #60]
  405370:	ldr	w0, [x29, #60]
  405374:	cmp	w0, #0x0
  405378:	b.lt	405384 <parse_cmdline_ip_address+0x410>  // b.tstop
  40537c:	mov	w0, #0x0                   	// #0
  405380:	b	4054a8 <parse_cmdline_ip_address+0x534>
  405384:	ldr	x0, [x29, #72]
  405388:	add	x0, x0, #0x1
  40538c:	str	x0, [x29, #24]
  405390:	ldr	x0, [x29, #24]
  405394:	mov	w1, #0x3a                  	// #58
  405398:	bl	401cb0 <strchr@plt>
  40539c:	str	x0, [x29, #72]
  4053a0:	ldr	x0, [x29, #72]
  4053a4:	cmp	x0, #0x0
  4053a8:	b.ne	4053d8 <parse_cmdline_ip_address+0x464>  // b.any
  4053ac:	ldr	x0, [x29, #24]
  4053b0:	mov	x2, x0
  4053b4:	ldr	x1, [x29, #136]
  4053b8:	ldr	x0, [x29, #40]
  4053bc:	bl	40464c <network_set_dns>
  4053c0:	str	w0, [x29, #60]
  4053c4:	ldr	w0, [x29, #60]
  4053c8:	cmp	w0, #0x0
  4053cc:	b.ge	4054a4 <parse_cmdline_ip_address+0x530>  // b.tcont
  4053d0:	ldr	w0, [x29, #60]
  4053d4:	b	4054a8 <parse_cmdline_ip_address+0x534>
  4053d8:	ldr	x0, [x29, #24]
  4053dc:	str	x0, [x29, #168]
  4053e0:	ldr	x0, [x29, #24]
  4053e4:	ldr	x1, [x29, #72]
  4053e8:	sub	x0, x1, x0
  4053ec:	mov	x1, x0
  4053f0:	ldr	x0, [x29, #168]
  4053f4:	bl	401a70 <strnlen@plt>
  4053f8:	str	x0, [x29, #176]
  4053fc:	ldr	x0, [x29, #176]
  405400:	add	x0, x0, #0x1
  405404:	add	x0, x0, #0xf
  405408:	lsr	x0, x0, #4
  40540c:	lsl	x0, x0, #4
  405410:	sub	sp, sp, x0
  405414:	mov	x0, sp
  405418:	add	x0, x0, #0xf
  40541c:	lsr	x0, x0, #4
  405420:	lsl	x0, x0, #4
  405424:	str	x0, [x29, #184]
  405428:	ldr	x1, [x29, #184]
  40542c:	ldr	x0, [x29, #176]
  405430:	add	x0, x1, x0
  405434:	strb	wzr, [x0]
  405438:	ldr	x2, [x29, #176]
  40543c:	ldr	x1, [x29, #168]
  405440:	ldr	x0, [x29, #184]
  405444:	bl	401ab0 <memcpy@plt>
  405448:	str	x0, [x29, #192]
  40544c:	ldr	x2, [x29, #192]
  405450:	ldr	x1, [x29, #136]
  405454:	ldr	x0, [x29, #40]
  405458:	bl	40464c <network_set_dns>
  40545c:	str	w0, [x29, #60]
  405460:	ldr	w0, [x29, #60]
  405464:	cmp	w0, #0x0
  405468:	b.ge	405474 <parse_cmdline_ip_address+0x500>  // b.tcont
  40546c:	ldr	w0, [x29, #60]
  405470:	b	4054a8 <parse_cmdline_ip_address+0x534>
  405474:	ldr	x0, [x29, #72]
  405478:	add	x0, x0, #0x1
  40547c:	mov	x2, x0
  405480:	ldr	x1, [x29, #136]
  405484:	ldr	x0, [x29, #40]
  405488:	bl	40464c <network_set_dns>
  40548c:	str	w0, [x29, #60]
  405490:	ldr	w0, [x29, #60]
  405494:	cmp	w0, #0x0
  405498:	b.ge	4054a4 <parse_cmdline_ip_address+0x530>  // b.tcont
  40549c:	ldr	w0, [x29, #60]
  4054a0:	b	4054a8 <parse_cmdline_ip_address+0x534>
  4054a4:	mov	w0, #0x0                   	// #0
  4054a8:	mov	w1, w0
  4054ac:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4054b0:	add	x0, x0, #0xb90
  4054b4:	ldr	x2, [x29, #248]
  4054b8:	ldr	x0, [x0]
  4054bc:	eor	x0, x2, x0
  4054c0:	cmp	x0, #0x0
  4054c4:	b.eq	4054cc <parse_cmdline_ip_address+0x558>  // b.none
  4054c8:	bl	401bb0 <__stack_chk_fail@plt>
  4054cc:	mov	w0, w1
  4054d0:	mov	sp, x29
  4054d4:	ldp	x29, x30, [sp], #256
  4054d8:	ret

00000000004054dc <parse_cmdline_ip_interface>:
  4054dc:	stp	x29, x30, [sp, #-128]!
  4054e0:	mov	x29, sp
  4054e4:	str	x0, [x29, #24]
  4054e8:	str	x1, [x29, #16]
  4054ec:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4054f0:	add	x0, x0, #0xb90
  4054f4:	ldr	x1, [x0]
  4054f8:	str	x1, [x29, #120]
  4054fc:	mov	x1, #0x0                   	// #0
  405500:	mov	w1, #0x3a                  	// #58
  405504:	ldr	x0, [x29, #16]
  405508:	bl	401cb0 <strchr@plt>
  40550c:	str	x0, [x29, #56]
  405510:	ldr	x0, [x29, #56]
  405514:	cmp	x0, #0x0
  405518:	b.ne	405524 <parse_cmdline_ip_interface+0x48>  // b.any
  40551c:	mov	w0, #0xffffffea            	// #-22
  405520:	b	405698 <parse_cmdline_ip_interface+0x1bc>
  405524:	ldr	x0, [x29, #16]
  405528:	str	x0, [x29, #64]
  40552c:	ldr	x1, [x29, #56]
  405530:	ldr	x0, [x29, #16]
  405534:	sub	x0, x1, x0
  405538:	mov	x1, x0
  40553c:	ldr	x0, [x29, #64]
  405540:	bl	401a70 <strnlen@plt>
  405544:	str	x0, [x29, #72]
  405548:	ldr	x0, [x29, #72]
  40554c:	add	x0, x0, #0x1
  405550:	add	x0, x0, #0xf
  405554:	lsr	x0, x0, #4
  405558:	lsl	x0, x0, #4
  40555c:	sub	sp, sp, x0
  405560:	mov	x0, sp
  405564:	add	x0, x0, #0xf
  405568:	lsr	x0, x0, #4
  40556c:	lsl	x0, x0, #4
  405570:	str	x0, [x29, #80]
  405574:	ldr	x1, [x29, #80]
  405578:	ldr	x0, [x29, #72]
  40557c:	add	x0, x1, x0
  405580:	strb	wzr, [x0]
  405584:	ldr	x2, [x29, #72]
  405588:	ldr	x1, [x29, #64]
  40558c:	ldr	x0, [x29, #80]
  405590:	bl	401ab0 <memcpy@plt>
  405594:	str	x0, [x29, #88]
  405598:	ldr	x0, [x29, #56]
  40559c:	add	x0, x0, #0x1
  4055a0:	str	x0, [x29, #16]
  4055a4:	mov	w1, #0x3a                  	// #58
  4055a8:	ldr	x0, [x29, #16]
  4055ac:	bl	401cb0 <strchr@plt>
  4055b0:	str	x0, [x29, #56]
  4055b4:	ldr	x0, [x29, #56]
  4055b8:	cmp	x0, #0x0
  4055bc:	b.ne	4055cc <parse_cmdline_ip_interface+0xf0>  // b.any
  4055c0:	ldr	x0, [x29, #16]
  4055c4:	str	x0, [x29, #48]
  4055c8:	b	405640 <parse_cmdline_ip_interface+0x164>
  4055cc:	ldr	x0, [x29, #16]
  4055d0:	str	x0, [x29, #96]
  4055d4:	ldr	x1, [x29, #56]
  4055d8:	ldr	x0, [x29, #16]
  4055dc:	sub	x0, x1, x0
  4055e0:	mov	x1, x0
  4055e4:	ldr	x0, [x29, #96]
  4055e8:	bl	401a70 <strnlen@plt>
  4055ec:	str	x0, [x29, #104]
  4055f0:	ldr	x0, [x29, #104]
  4055f4:	add	x0, x0, #0x1
  4055f8:	add	x0, x0, #0xf
  4055fc:	lsr	x0, x0, #4
  405600:	lsl	x0, x0, #4
  405604:	sub	sp, sp, x0
  405608:	mov	x0, sp
  40560c:	add	x0, x0, #0xf
  405610:	lsr	x0, x0, #4
  405614:	lsl	x0, x0, #4
  405618:	str	x0, [x29, #112]
  40561c:	ldr	x1, [x29, #112]
  405620:	ldr	x0, [x29, #104]
  405624:	add	x0, x1, x0
  405628:	strb	wzr, [x0]
  40562c:	ldr	x2, [x29, #104]
  405630:	ldr	x1, [x29, #96]
  405634:	ldr	x0, [x29, #112]
  405638:	bl	401ab0 <memcpy@plt>
  40563c:	str	x0, [x29, #48]
  405640:	ldr	x2, [x29, #48]
  405644:	ldr	x1, [x29, #88]
  405648:	ldr	x0, [x29, #24]
  40564c:	bl	404314 <network_set_dhcp_type>
  405650:	str	w0, [x29, #44]
  405654:	ldr	w0, [x29, #44]
  405658:	cmp	w0, #0x0
  40565c:	b.ge	405668 <parse_cmdline_ip_interface+0x18c>  // b.tcont
  405660:	ldr	w0, [x29, #44]
  405664:	b	405698 <parse_cmdline_ip_interface+0x1bc>
  405668:	ldr	x0, [x29, #56]
  40566c:	cmp	x0, #0x0
  405670:	b.ne	40567c <parse_cmdline_ip_interface+0x1a0>  // b.any
  405674:	mov	w0, #0x0                   	// #0
  405678:	b	405698 <parse_cmdline_ip_interface+0x1bc>
  40567c:	ldr	x0, [x29, #56]
  405680:	add	x0, x0, #0x1
  405684:	mov	x3, x0
  405688:	mov	w2, #0x0                   	// #0
  40568c:	ldr	x1, [x29, #88]
  405690:	ldr	x0, [x29, #24]
  405694:	bl	4049ec <parse_cmdline_ip_mtu_mac>
  405698:	mov	w1, w0
  40569c:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4056a0:	add	x0, x0, #0xb90
  4056a4:	ldr	x2, [x29, #120]
  4056a8:	ldr	x0, [x0]
  4056ac:	eor	x0, x2, x0
  4056b0:	cmp	x0, #0x0
  4056b4:	b.eq	4056bc <parse_cmdline_ip_interface+0x1e0>  // b.none
  4056b8:	bl	401bb0 <__stack_chk_fail@plt>
  4056bc:	mov	w0, w1
  4056c0:	mov	sp, x29
  4056c4:	ldp	x29, x30, [sp], #128
  4056c8:	ret

00000000004056cc <parse_cmdline_ip>:
  4056cc:	stp	x29, x30, [sp, #-64]!
  4056d0:	mov	x29, sp
  4056d4:	str	x0, [sp, #40]
  4056d8:	str	x1, [sp, #32]
  4056dc:	str	x2, [sp, #24]
  4056e0:	ldr	x1, [sp, #24]
  4056e4:	ldr	x0, [sp, #32]
  4056e8:	bl	403268 <proc_cmdline_value_missing>
  4056ec:	and	w0, w0, #0xff
  4056f0:	cmp	w0, #0x0
  4056f4:	b.eq	405700 <parse_cmdline_ip+0x34>  // b.none
  4056f8:	mov	w0, #0xffffffea            	// #-22
  4056fc:	b	40578c <parse_cmdline_ip+0xc0>
  405700:	mov	w1, #0x3a                  	// #58
  405704:	ldr	x0, [sp, #24]
  405708:	bl	401cb0 <strchr@plt>
  40570c:	str	x0, [sp, #56]
  405710:	ldr	x0, [sp, #56]
  405714:	cmp	x0, #0x0
  405718:	b.ne	405734 <parse_cmdline_ip+0x68>  // b.any
  40571c:	ldr	x2, [sp, #24]
  405720:	adrp	x0, 407000 <network_dump+0x318>
  405724:	add	x1, x0, #0x8f8
  405728:	ldr	x0, [sp, #40]
  40572c:	bl	404314 <network_set_dhcp_type>
  405730:	b	40578c <parse_cmdline_ip+0xc0>
  405734:	ldr	x0, [sp, #24]
  405738:	ldrb	w0, [x0]
  40573c:	cmp	w0, #0x5b
  405740:	b.ne	405758 <parse_cmdline_ip+0x8c>  // b.any
  405744:	ldr	x2, [sp, #24]
  405748:	mov	w1, #0xa                   	// #10
  40574c:	ldr	x0, [sp, #40]
  405750:	bl	404f74 <parse_cmdline_ip_address>
  405754:	b	40578c <parse_cmdline_ip+0xc0>
  405758:	ldr	x2, [sp, #24]
  40575c:	mov	w1, #0x2                   	// #2
  405760:	ldr	x0, [sp, #40]
  405764:	bl	404f74 <parse_cmdline_ip_address>
  405768:	str	w0, [sp, #52]
  40576c:	ldr	w0, [sp, #52]
  405770:	cmp	w0, #0x0
  405774:	b.ge	405788 <parse_cmdline_ip+0xbc>  // b.tcont
  405778:	ldr	x1, [sp, #24]
  40577c:	ldr	x0, [sp, #40]
  405780:	bl	4054dc <parse_cmdline_ip_interface>
  405784:	b	40578c <parse_cmdline_ip+0xc0>
  405788:	mov	w0, #0x0                   	// #0
  40578c:	ldp	x29, x30, [sp], #64
  405790:	ret

0000000000405794 <parse_cmdline_rd_route>:
  405794:	stp	x29, x30, [sp, #-224]!
  405798:	mov	x29, sp
  40579c:	str	x0, [x29, #40]
  4057a0:	str	x1, [x29, #32]
  4057a4:	str	x2, [x29, #24]
  4057a8:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4057ac:	add	x0, x0, #0xb90
  4057b0:	ldr	x1, [x0]
  4057b4:	str	x1, [x29, #216]
  4057b8:	mov	x1, #0x0                   	// #0
  4057bc:	stp	xzr, xzr, [x29, #168]
  4057c0:	stp	xzr, xzr, [x29, #184]
  4057c4:	ldr	x0, [x29, #24]
  4057c8:	mov	x1, x0
  4057cc:	ldr	x0, [x29, #32]
  4057d0:	bl	403268 <proc_cmdline_value_missing>
  4057d4:	and	w0, w0, #0xff
  4057d8:	cmp	w0, #0x0
  4057dc:	b.eq	4057e8 <parse_cmdline_rd_route+0x54>  // b.none
  4057e0:	mov	w0, #0xffffffea            	// #-22
  4057e4:	b	405bc0 <parse_cmdline_rd_route+0x42c>
  4057e8:	ldr	x0, [x29, #24]
  4057ec:	ldrb	w0, [x0]
  4057f0:	cmp	w0, #0x5b
  4057f4:	b.ne	4058cc <parse_cmdline_rd_route+0x138>  // b.any
  4057f8:	ldr	x0, [x29, #24]
  4057fc:	mov	w1, #0x5d                  	// #93
  405800:	bl	401cb0 <strchr@plt>
  405804:	str	x0, [x29, #96]
  405808:	ldr	x0, [x29, #96]
  40580c:	cmp	x0, #0x0
  405810:	b.ne	40581c <parse_cmdline_rd_route+0x88>  // b.any
  405814:	mov	w0, #0xffffffea            	// #-22
  405818:	b	405bc0 <parse_cmdline_rd_route+0x42c>
  40581c:	ldr	x0, [x29, #96]
  405820:	add	x0, x0, #0x1
  405824:	ldrb	w0, [x0]
  405828:	cmp	w0, #0x3a
  40582c:	b.eq	405838 <parse_cmdline_rd_route+0xa4>  // b.none
  405830:	mov	w0, #0xffffffea            	// #-22
  405834:	b	405bc0 <parse_cmdline_rd_route+0x42c>
  405838:	ldr	x0, [x29, #24]
  40583c:	add	x0, x0, #0x1
  405840:	str	x0, [x29, #128]
  405844:	ldr	x0, [x29, #24]
  405848:	ldr	x1, [x29, #96]
  40584c:	sub	x0, x1, x0
  405850:	sub	x0, x0, #0x1
  405854:	mov	x1, x0
  405858:	ldr	x0, [x29, #128]
  40585c:	bl	401a70 <strnlen@plt>
  405860:	str	x0, [x29, #136]
  405864:	ldr	x0, [x29, #136]
  405868:	add	x0, x0, #0x1
  40586c:	add	x0, x0, #0xf
  405870:	lsr	x0, x0, #4
  405874:	lsl	x0, x0, #4
  405878:	sub	sp, sp, x0
  40587c:	mov	x0, sp
  405880:	add	x0, x0, #0xf
  405884:	lsr	x0, x0, #4
  405888:	lsl	x0, x0, #4
  40588c:	str	x0, [x29, #144]
  405890:	ldr	x1, [x29, #144]
  405894:	ldr	x0, [x29, #136]
  405898:	add	x0, x1, x0
  40589c:	strb	wzr, [x0]
  4058a0:	ldr	x2, [x29, #136]
  4058a4:	ldr	x1, [x29, #128]
  4058a8:	ldr	x0, [x29, #144]
  4058ac:	bl	401ab0 <memcpy@plt>
  4058b0:	str	x0, [x29, #64]
  4058b4:	ldr	x0, [x29, #96]
  4058b8:	add	x0, x0, #0x2
  4058bc:	str	x0, [x29, #24]
  4058c0:	mov	w0, #0xa                   	// #10
  4058c4:	str	w0, [x29, #56]
  4058c8:	b	405978 <parse_cmdline_rd_route+0x1e4>
  4058cc:	ldr	x0, [x29, #24]
  4058d0:	mov	w1, #0x3a                  	// #58
  4058d4:	bl	401cb0 <strchr@plt>
  4058d8:	str	x0, [x29, #96]
  4058dc:	ldr	x0, [x29, #96]
  4058e0:	cmp	x0, #0x0
  4058e4:	b.ne	4058f0 <parse_cmdline_rd_route+0x15c>  // b.any
  4058e8:	mov	w0, #0xffffffea            	// #-22
  4058ec:	b	405bc0 <parse_cmdline_rd_route+0x42c>
  4058f0:	ldr	x0, [x29, #24]
  4058f4:	str	x0, [x29, #104]
  4058f8:	ldr	x0, [x29, #24]
  4058fc:	ldr	x1, [x29, #96]
  405900:	sub	x0, x1, x0
  405904:	mov	x1, x0
  405908:	ldr	x0, [x29, #104]
  40590c:	bl	401a70 <strnlen@plt>
  405910:	str	x0, [x29, #112]
  405914:	ldr	x0, [x29, #112]
  405918:	add	x0, x0, #0x1
  40591c:	add	x0, x0, #0xf
  405920:	lsr	x0, x0, #4
  405924:	lsl	x0, x0, #4
  405928:	sub	sp, sp, x0
  40592c:	mov	x0, sp
  405930:	add	x0, x0, #0xf
  405934:	lsr	x0, x0, #4
  405938:	lsl	x0, x0, #4
  40593c:	str	x0, [x29, #120]
  405940:	ldr	x1, [x29, #120]
  405944:	ldr	x0, [x29, #112]
  405948:	add	x0, x1, x0
  40594c:	strb	wzr, [x0]
  405950:	ldr	x2, [x29, #112]
  405954:	ldr	x1, [x29, #104]
  405958:	ldr	x0, [x29, #120]
  40595c:	bl	401ab0 <memcpy@plt>
  405960:	str	x0, [x29, #64]
  405964:	ldr	x0, [x29, #96]
  405968:	add	x0, x0, #0x1
  40596c:	str	x0, [x29, #24]
  405970:	mov	w0, #0x2                   	// #2
  405974:	str	w0, [x29, #56]
  405978:	add	x1, x29, #0x37
  40597c:	add	x0, x29, #0xa8
  405980:	mov	x3, x1
  405984:	mov	x2, x0
  405988:	ldr	w1, [x29, #56]
  40598c:	ldr	x0, [x29, #64]
  405990:	bl	401a20 <in_addr_prefix_from_string@plt>
  405994:	str	w0, [x29, #60]
  405998:	ldr	w0, [x29, #60]
  40599c:	cmp	w0, #0x0
  4059a0:	b.ge	4059ac <parse_cmdline_rd_route+0x218>  // b.tcont
  4059a4:	ldr	w0, [x29, #60]
  4059a8:	b	405bc0 <parse_cmdline_rd_route+0x42c>
  4059ac:	ldr	x0, [x29, #24]
  4059b0:	mov	w1, #0x3a                  	// #58
  4059b4:	bl	401cb0 <strchr@plt>
  4059b8:	str	x0, [x29, #96]
  4059bc:	ldr	x0, [x29, #96]
  4059c0:	cmp	x0, #0x0
  4059c4:	b.ne	405b68 <parse_cmdline_rd_route+0x3d4>  // b.any
  4059c8:	ldr	x0, [x29, #24]
  4059cc:	str	x0, [x29, #200]
  4059d0:	adrp	x0, 407000 <network_dump+0x318>
  4059d4:	add	x0, x0, #0x900
  4059d8:	str	x0, [x29, #208]
  4059dc:	str	xzr, [x29, #80]
  4059e0:	str	xzr, [x29, #88]
  4059e4:	b	405a18 <parse_cmdline_rd_route+0x284>
  4059e8:	ldr	x0, [x29, #88]
  4059ec:	lsl	x0, x0, #3
  4059f0:	add	x1, x29, #0xc8
  4059f4:	ldr	x0, [x1, x0]
  4059f8:	bl	401d70 <strlen@plt>
  4059fc:	mov	x1, x0
  405a00:	ldr	x0, [x29, #80]
  405a04:	add	x0, x0, x1
  405a08:	str	x0, [x29, #80]
  405a0c:	ldr	x0, [x29, #88]
  405a10:	add	x0, x0, #0x1
  405a14:	str	x0, [x29, #88]
  405a18:	ldr	x0, [x29, #88]
  405a1c:	cmp	x0, #0x1
  405a20:	b.hi	405a3c <parse_cmdline_rd_route+0x2a8>  // b.pmore
  405a24:	ldr	x0, [x29, #88]
  405a28:	lsl	x0, x0, #3
  405a2c:	add	x1, x29, #0xc8
  405a30:	ldr	x0, [x1, x0]
  405a34:	cmp	x0, #0x0
  405a38:	b.ne	4059e8 <parse_cmdline_rd_route+0x254>  // b.any
  405a3c:	ldr	x0, [x29, #80]
  405a40:	add	x0, x0, #0x1
  405a44:	str	x0, [x29, #152]
  405a48:	ldr	x1, [x29, #152]
  405a4c:	mov	x0, #0x1                   	// #1
  405a50:	bl	403018 <size_multiply_overflow>
  405a54:	and	w0, w0, #0xff
  405a58:	and	x0, x0, #0xff
  405a5c:	cmp	x0, #0x0
  405a60:	b.eq	405a8c <parse_cmdline_rd_route+0x2f8>  // b.none
  405a64:	adrp	x0, 407000 <network_dump+0x318>
  405a68:	add	x1, x0, #0x8a3
  405a6c:	adrp	x0, 407000 <network_dump+0x318>
  405a70:	add	x4, x0, #0xcc8
  405a74:	mov	w3, #0x2f6                 	// #758
  405a78:	mov	x2, x1
  405a7c:	adrp	x0, 407000 <network_dump+0x318>
  405a80:	add	x1, x0, #0x908
  405a84:	mov	w0, #0x0                   	// #0
  405a88:	bl	401b00 <log_assert_failed_realm@plt>
  405a8c:	ldr	x0, [x29, #152]
  405a90:	cmp	x0, #0x400, lsl #12
  405a94:	cset	w0, hi  // hi = pmore
  405a98:	and	w0, w0, #0xff
  405a9c:	and	x0, x0, #0xff
  405aa0:	cmp	x0, #0x0
  405aa4:	b.eq	405ad0 <parse_cmdline_rd_route+0x33c>  // b.none
  405aa8:	adrp	x0, 407000 <network_dump+0x318>
  405aac:	add	x1, x0, #0x8a3
  405ab0:	adrp	x0, 407000 <network_dump+0x318>
  405ab4:	add	x4, x0, #0xcc8
  405ab8:	mov	w3, #0x2f6                 	// #758
  405abc:	mov	x2, x1
  405ac0:	adrp	x0, 407000 <network_dump+0x318>
  405ac4:	add	x1, x0, #0x938
  405ac8:	mov	w0, #0x0                   	// #0
  405acc:	bl	401b00 <log_assert_failed_realm@plt>
  405ad0:	ldr	x0, [x29, #152]
  405ad4:	add	x0, x0, #0xf
  405ad8:	lsr	x0, x0, #4
  405adc:	lsl	x0, x0, #4
  405ae0:	sub	sp, sp, x0
  405ae4:	mov	x0, sp
  405ae8:	add	x0, x0, #0xf
  405aec:	lsr	x0, x0, #4
  405af0:	lsl	x0, x0, #4
  405af4:	str	x0, [x29, #160]
  405af8:	ldr	x0, [x29, #160]
  405afc:	str	x0, [x29, #72]
  405b00:	str	xzr, [x29, #88]
  405b04:	b	405b34 <parse_cmdline_rd_route+0x3a0>
  405b08:	ldr	x0, [x29, #88]
  405b0c:	lsl	x0, x0, #3
  405b10:	add	x1, x29, #0xc8
  405b14:	ldr	x0, [x1, x0]
  405b18:	mov	x1, x0
  405b1c:	ldr	x0, [x29, #72]
  405b20:	bl	4019f0 <stpcpy@plt>
  405b24:	str	x0, [x29, #72]
  405b28:	ldr	x0, [x29, #88]
  405b2c:	add	x0, x0, #0x1
  405b30:	str	x0, [x29, #88]
  405b34:	ldr	x0, [x29, #88]
  405b38:	cmp	x0, #0x1
  405b3c:	b.hi	405b58 <parse_cmdline_rd_route+0x3c4>  // b.pmore
  405b40:	ldr	x0, [x29, #88]
  405b44:	lsl	x0, x0, #3
  405b48:	add	x1, x29, #0xc8
  405b4c:	ldr	x0, [x1, x0]
  405b50:	cmp	x0, #0x0
  405b54:	b.ne	405b08 <parse_cmdline_rd_route+0x374>  // b.any
  405b58:	ldr	x0, [x29, #72]
  405b5c:	strb	wzr, [x0]
  405b60:	ldr	x0, [x29, #160]
  405b64:	str	x0, [x29, #24]
  405b68:	add	x1, x29, #0xb8
  405b6c:	add	x0, x29, #0x18
  405b70:	mov	x2, x1
  405b74:	mov	x1, x0
  405b78:	ldr	w0, [x29, #56]
  405b7c:	bl	404b5c <parse_ip_address_one>
  405b80:	str	w0, [x29, #60]
  405b84:	ldr	w0, [x29, #60]
  405b88:	cmp	w0, #0x0
  405b8c:	b.ge	405b98 <parse_cmdline_rd_route+0x404>  // b.tcont
  405b90:	ldr	w0, [x29, #60]
  405b94:	b	405bc0 <parse_cmdline_rd_route+0x42c>
  405b98:	ldr	x0, [x29, #24]
  405b9c:	ldrb	w3, [x29, #55]
  405ba0:	add	x2, x29, #0xb8
  405ba4:	add	x1, x29, #0xa8
  405ba8:	mov	x5, x2
  405bac:	mov	x4, x1
  405bb0:	ldr	w2, [x29, #56]
  405bb4:	mov	x1, x0
  405bb8:	ldr	x0, [x29, #40]
  405bbc:	bl	404568 <network_set_route>
  405bc0:	mov	w1, w0
  405bc4:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  405bc8:	add	x0, x0, #0xb90
  405bcc:	ldr	x2, [x29, #216]
  405bd0:	ldr	x0, [x0]
  405bd4:	eor	x0, x2, x0
  405bd8:	cmp	x0, #0x0
  405bdc:	b.eq	405be4 <parse_cmdline_rd_route+0x450>  // b.none
  405be0:	bl	401bb0 <__stack_chk_fail@plt>
  405be4:	mov	w0, w1
  405be8:	mov	sp, x29
  405bec:	ldp	x29, x30, [sp], #224
  405bf0:	ret

0000000000405bf4 <parse_cmdline_nameserver>:
  405bf4:	stp	x29, x30, [sp, #-48]!
  405bf8:	mov	x29, sp
  405bfc:	str	x0, [sp, #40]
  405c00:	str	x1, [sp, #32]
  405c04:	str	x2, [sp, #24]
  405c08:	ldr	x1, [sp, #24]
  405c0c:	ldr	x0, [sp, #32]
  405c10:	bl	403268 <proc_cmdline_value_missing>
  405c14:	and	w0, w0, #0xff
  405c18:	cmp	w0, #0x0
  405c1c:	b.eq	405c28 <parse_cmdline_nameserver+0x34>  // b.none
  405c20:	mov	w0, #0xffffffea            	// #-22
  405c24:	b	405c3c <parse_cmdline_nameserver+0x48>
  405c28:	ldr	x2, [sp, #24]
  405c2c:	adrp	x0, 407000 <network_dump+0x318>
  405c30:	add	x1, x0, #0x8f8
  405c34:	ldr	x0, [sp, #40]
  405c38:	bl	40464c <network_set_dns>
  405c3c:	ldp	x29, x30, [sp], #48
  405c40:	ret

0000000000405c44 <parse_cmdline_rd_peerdns>:
  405c44:	stp	x29, x30, [sp, #-64]!
  405c48:	mov	x29, sp
  405c4c:	str	x0, [sp, #40]
  405c50:	str	x1, [sp, #32]
  405c54:	str	x2, [sp, #24]
  405c58:	ldr	x1, [sp, #24]
  405c5c:	ldr	x0, [sp, #32]
  405c60:	bl	403268 <proc_cmdline_value_missing>
  405c64:	and	w0, w0, #0xff
  405c68:	cmp	w0, #0x0
  405c6c:	b.eq	405c88 <parse_cmdline_rd_peerdns+0x44>  // b.none
  405c70:	mov	w2, #0x1                   	// #1
  405c74:	adrp	x0, 407000 <network_dump+0x318>
  405c78:	add	x1, x0, #0x8f8
  405c7c:	ldr	x0, [sp, #40]
  405c80:	bl	40472c <network_set_dhcp_use_dns>
  405c84:	b	405ccc <parse_cmdline_rd_peerdns+0x88>
  405c88:	ldr	x0, [sp, #24]
  405c8c:	bl	401a40 <parse_boolean@plt>
  405c90:	str	w0, [sp, #60]
  405c94:	ldr	w0, [sp, #60]
  405c98:	cmp	w0, #0x0
  405c9c:	b.ge	405ca8 <parse_cmdline_rd_peerdns+0x64>  // b.tcont
  405ca0:	ldr	w0, [sp, #60]
  405ca4:	b	405ccc <parse_cmdline_rd_peerdns+0x88>
  405ca8:	ldr	w0, [sp, #60]
  405cac:	cmp	w0, #0x0
  405cb0:	cset	w0, ne  // ne = any
  405cb4:	and	w0, w0, #0xff
  405cb8:	mov	w2, w0
  405cbc:	adrp	x0, 407000 <network_dump+0x318>
  405cc0:	add	x1, x0, #0x8f8
  405cc4:	ldr	x0, [sp, #40]
  405cc8:	bl	40472c <network_set_dhcp_use_dns>
  405ccc:	ldp	x29, x30, [sp], #64
  405cd0:	ret

0000000000405cd4 <parse_cmdline_vlan>:
  405cd4:	stp	x29, x30, [sp, #-112]!
  405cd8:	mov	x29, sp
  405cdc:	str	x0, [x29, #40]
  405ce0:	str	x1, [x29, #32]
  405ce4:	str	x2, [x29, #24]
  405ce8:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  405cec:	add	x0, x0, #0xb90
  405cf0:	ldr	x1, [x0]
  405cf4:	str	x1, [x29, #104]
  405cf8:	mov	x1, #0x0                   	// #0
  405cfc:	ldr	x1, [x29, #24]
  405d00:	ldr	x0, [x29, #32]
  405d04:	bl	403268 <proc_cmdline_value_missing>
  405d08:	and	w0, w0, #0xff
  405d0c:	cmp	w0, #0x0
  405d10:	b.eq	405d1c <parse_cmdline_vlan+0x48>  // b.none
  405d14:	mov	w0, #0xffffffea            	// #-22
  405d18:	b	405e1c <parse_cmdline_vlan+0x148>
  405d1c:	mov	w1, #0x3a                  	// #58
  405d20:	ldr	x0, [x29, #24]
  405d24:	bl	401cb0 <strchr@plt>
  405d28:	str	x0, [x29, #64]
  405d2c:	ldr	x0, [x29, #64]
  405d30:	cmp	x0, #0x0
  405d34:	b.ne	405d40 <parse_cmdline_vlan+0x6c>  // b.any
  405d38:	mov	w0, #0xffffffea            	// #-22
  405d3c:	b	405e1c <parse_cmdline_vlan+0x148>
  405d40:	ldr	x0, [x29, #24]
  405d44:	str	x0, [x29, #72]
  405d48:	ldr	x1, [x29, #64]
  405d4c:	ldr	x0, [x29, #24]
  405d50:	sub	x0, x1, x0
  405d54:	mov	x1, x0
  405d58:	ldr	x0, [x29, #72]
  405d5c:	bl	401a70 <strnlen@plt>
  405d60:	str	x0, [x29, #80]
  405d64:	ldr	x0, [x29, #80]
  405d68:	add	x0, x0, #0x1
  405d6c:	add	x0, x0, #0xf
  405d70:	lsr	x0, x0, #4
  405d74:	lsl	x0, x0, #4
  405d78:	sub	sp, sp, x0
  405d7c:	mov	x0, sp
  405d80:	add	x0, x0, #0xf
  405d84:	lsr	x0, x0, #4
  405d88:	lsl	x0, x0, #4
  405d8c:	str	x0, [x29, #88]
  405d90:	ldr	x1, [x29, #88]
  405d94:	ldr	x0, [x29, #80]
  405d98:	add	x0, x1, x0
  405d9c:	strb	wzr, [x0]
  405da0:	ldr	x2, [x29, #80]
  405da4:	ldr	x1, [x29, #72]
  405da8:	ldr	x0, [x29, #88]
  405dac:	bl	401ab0 <memcpy@plt>
  405db0:	str	x0, [x29, #96]
  405db4:	ldr	x1, [x29, #96]
  405db8:	ldr	x0, [x29, #40]
  405dbc:	bl	404074 <netdev_get>
  405dc0:	str	x0, [x29, #56]
  405dc4:	ldr	x0, [x29, #56]
  405dc8:	cmp	x0, #0x0
  405dcc:	b.ne	405e04 <parse_cmdline_vlan+0x130>  // b.any
  405dd0:	add	x0, x29, #0x38
  405dd4:	mov	x3, x0
  405dd8:	ldr	x2, [x29, #96]
  405ddc:	adrp	x0, 407000 <network_dump+0x318>
  405de0:	add	x1, x0, #0x958
  405de4:	ldr	x0, [x29, #40]
  405de8:	bl	403e58 <netdev_new>
  405dec:	str	w0, [x29, #52]
  405df0:	ldr	w0, [x29, #52]
  405df4:	cmp	w0, #0x0
  405df8:	b.ge	405e04 <parse_cmdline_vlan+0x130>  // b.tcont
  405dfc:	ldr	w0, [x29, #52]
  405e00:	b	405e1c <parse_cmdline_vlan+0x148>
  405e04:	ldr	x0, [x29, #64]
  405e08:	add	x0, x0, #0x1
  405e0c:	ldr	x2, [x29, #96]
  405e10:	mov	x1, x0
  405e14:	ldr	x0, [x29, #40]
  405e18:	bl	4047dc <network_set_vlan>
  405e1c:	mov	w1, w0
  405e20:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  405e24:	add	x0, x0, #0xb90
  405e28:	ldr	x2, [x29, #104]
  405e2c:	ldr	x0, [x0]
  405e30:	eor	x0, x2, x0
  405e34:	cmp	x0, #0x0
  405e38:	b.eq	405e40 <parse_cmdline_vlan+0x16c>  // b.none
  405e3c:	bl	401bb0 <__stack_chk_fail@plt>
  405e40:	mov	w0, w1
  405e44:	mov	sp, x29
  405e48:	ldp	x29, x30, [sp], #112
  405e4c:	ret

0000000000405e50 <parse_cmdline_bridge>:
  405e50:	stp	x29, x30, [sp, #-144]!
  405e54:	mov	x29, sp
  405e58:	stp	x19, x20, [sp, #16]
  405e5c:	str	x0, [x29, #56]
  405e60:	str	x1, [x29, #48]
  405e64:	str	x2, [x29, #40]
  405e68:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  405e6c:	add	x0, x0, #0xb90
  405e70:	ldr	x1, [x0]
  405e74:	str	x1, [x29, #136]
  405e78:	mov	x1, #0x0                   	// #0
  405e7c:	ldr	x1, [x29, #40]
  405e80:	ldr	x0, [x29, #48]
  405e84:	bl	403268 <proc_cmdline_value_missing>
  405e88:	and	w0, w0, #0xff
  405e8c:	cmp	w0, #0x0
  405e90:	b.eq	405e9c <parse_cmdline_bridge+0x4c>  // b.none
  405e94:	mov	w19, #0xffffffea            	// #-22
  405e98:	b	406030 <parse_cmdline_bridge+0x1e0>
  405e9c:	mov	w1, #0x3a                  	// #58
  405ea0:	ldr	x0, [x29, #40]
  405ea4:	bl	401cb0 <strchr@plt>
  405ea8:	str	x0, [x29, #80]
  405eac:	ldr	x0, [x29, #80]
  405eb0:	cmp	x0, #0x0
  405eb4:	b.ne	405ec0 <parse_cmdline_bridge+0x70>  // b.any
  405eb8:	mov	w19, #0xffffffea            	// #-22
  405ebc:	b	406030 <parse_cmdline_bridge+0x1e0>
  405ec0:	ldr	x0, [x29, #40]
  405ec4:	str	x0, [x29, #104]
  405ec8:	ldr	x1, [x29, #80]
  405ecc:	ldr	x0, [x29, #40]
  405ed0:	sub	x0, x1, x0
  405ed4:	mov	x1, x0
  405ed8:	ldr	x0, [x29, #104]
  405edc:	bl	401a70 <strnlen@plt>
  405ee0:	str	x0, [x29, #112]
  405ee4:	ldr	x0, [x29, #112]
  405ee8:	add	x0, x0, #0x1
  405eec:	add	x0, x0, #0xf
  405ef0:	lsr	x0, x0, #4
  405ef4:	lsl	x0, x0, #4
  405ef8:	sub	sp, sp, x0
  405efc:	mov	x0, sp
  405f00:	add	x0, x0, #0xf
  405f04:	lsr	x0, x0, #4
  405f08:	lsl	x0, x0, #4
  405f0c:	str	x0, [x29, #120]
  405f10:	ldr	x1, [x29, #120]
  405f14:	ldr	x0, [x29, #112]
  405f18:	add	x0, x1, x0
  405f1c:	strb	wzr, [x0]
  405f20:	ldr	x2, [x29, #112]
  405f24:	ldr	x1, [x29, #104]
  405f28:	ldr	x0, [x29, #120]
  405f2c:	bl	401ab0 <memcpy@plt>
  405f30:	str	x0, [x29, #128]
  405f34:	ldr	x1, [x29, #128]
  405f38:	ldr	x0, [x29, #56]
  405f3c:	bl	404074 <netdev_get>
  405f40:	str	x0, [x29, #88]
  405f44:	ldr	x0, [x29, #88]
  405f48:	cmp	x0, #0x0
  405f4c:	b.ne	405f84 <parse_cmdline_bridge+0x134>  // b.any
  405f50:	add	x0, x29, #0x58
  405f54:	mov	x3, x0
  405f58:	ldr	x2, [x29, #128]
  405f5c:	adrp	x0, 407000 <network_dump+0x318>
  405f60:	add	x1, x0, #0x960
  405f64:	ldr	x0, [x29, #56]
  405f68:	bl	403e58 <netdev_new>
  405f6c:	str	w0, [x29, #76]
  405f70:	ldr	w0, [x29, #76]
  405f74:	cmp	w0, #0x0
  405f78:	b.ge	405f84 <parse_cmdline_bridge+0x134>  // b.tcont
  405f7c:	ldr	w19, [x29, #76]
  405f80:	b	406030 <parse_cmdline_bridge+0x1e0>
  405f84:	ldr	x0, [x29, #80]
  405f88:	add	x0, x0, #0x1
  405f8c:	str	x0, [x29, #80]
  405f90:	ldr	x0, [x29, #80]
  405f94:	bl	403340 <isempty>
  405f98:	and	w0, w0, #0xff
  405f9c:	cmp	w0, #0x0
  405fa0:	b.eq	405fac <parse_cmdline_bridge+0x15c>  // b.none
  405fa4:	mov	w19, #0xffffffea            	// #-22
  405fa8:	b	406030 <parse_cmdline_bridge+0x1e0>
  405fac:	str	xzr, [x29, #96]
  405fb0:	add	x1, x29, #0x60
  405fb4:	add	x4, x29, #0x50
  405fb8:	mov	w3, #0x0                   	// #0
  405fbc:	adrp	x0, 407000 <network_dump+0x318>
  405fc0:	add	x2, x0, #0x968
  405fc4:	mov	x0, x4
  405fc8:	bl	401c70 <extract_first_word@plt>
  405fcc:	str	w0, [x29, #76]
  405fd0:	ldr	w0, [x29, #76]
  405fd4:	cmp	w0, #0x0
  405fd8:	b.gt	405fe8 <parse_cmdline_bridge+0x198>
  405fdc:	ldr	w19, [x29, #76]
  405fe0:	mov	w20, #0x0                   	// #0
  405fe4:	b	40601c <parse_cmdline_bridge+0x1cc>
  405fe8:	ldr	x0, [x29, #96]
  405fec:	ldr	x2, [x29, #128]
  405ff0:	mov	x1, x0
  405ff4:	ldr	x0, [x29, #56]
  405ff8:	bl	40488c <network_set_bridge>
  405ffc:	str	w0, [x29, #76]
  406000:	ldr	w0, [x29, #76]
  406004:	cmp	w0, #0x0
  406008:	b.ge	406018 <parse_cmdline_bridge+0x1c8>  // b.tcont
  40600c:	ldr	w19, [x29, #76]
  406010:	mov	w20, #0x0                   	// #0
  406014:	b	40601c <parse_cmdline_bridge+0x1cc>
  406018:	mov	w20, #0x1                   	// #1
  40601c:	add	x0, x29, #0x60
  406020:	bl	402ff4 <freep>
  406024:	cmp	w20, #0x1
  406028:	b.ne	406030 <parse_cmdline_bridge+0x1e0>  // b.any
  40602c:	b	405fac <parse_cmdline_bridge+0x15c>
  406030:	mov	w1, w19
  406034:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  406038:	add	x0, x0, #0xb90
  40603c:	ldr	x2, [x29, #136]
  406040:	ldr	x0, [x0]
  406044:	eor	x0, x2, x0
  406048:	cmp	x0, #0x0
  40604c:	b.eq	406054 <parse_cmdline_bridge+0x204>  // b.none
  406050:	bl	401bb0 <__stack_chk_fail@plt>
  406054:	mov	w0, w1
  406058:	mov	sp, x29
  40605c:	ldp	x19, x20, [sp, #16]
  406060:	ldp	x29, x30, [sp], #144
  406064:	ret

0000000000406068 <parse_cmdline_bond>:
  406068:	stp	x29, x30, [sp, #-176]!
  40606c:	mov	x29, sp
  406070:	stp	x19, x20, [sp, #16]
  406074:	str	x0, [x29, #56]
  406078:	str	x1, [x29, #48]
  40607c:	str	x2, [x29, #40]
  406080:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  406084:	add	x0, x0, #0xb90
  406088:	ldr	x1, [x0]
  40608c:	str	x1, [x29, #168]
  406090:	mov	x1, #0x0                   	// #0
  406094:	ldr	x1, [x29, #40]
  406098:	ldr	x0, [x29, #48]
  40609c:	bl	403268 <proc_cmdline_value_missing>
  4060a0:	and	w0, w0, #0xff
  4060a4:	cmp	w0, #0x0
  4060a8:	b.eq	4060b4 <parse_cmdline_bond+0x4c>  // b.none
  4060ac:	mov	w19, #0xffffffea            	// #-22
  4060b0:	b	40636c <parse_cmdline_bond+0x304>
  4060b4:	mov	w1, #0x3a                  	// #58
  4060b8:	ldr	x0, [x29, #40]
  4060bc:	bl	401cb0 <strchr@plt>
  4060c0:	str	x0, [x29, #104]
  4060c4:	ldr	x0, [x29, #104]
  4060c8:	cmp	x0, #0x0
  4060cc:	b.ne	4060d8 <parse_cmdline_bond+0x70>  // b.any
  4060d0:	mov	w19, #0xffffffea            	// #-22
  4060d4:	b	40636c <parse_cmdline_bond+0x304>
  4060d8:	ldr	x0, [x29, #40]
  4060dc:	str	x0, [x29, #112]
  4060e0:	ldr	x1, [x29, #104]
  4060e4:	ldr	x0, [x29, #40]
  4060e8:	sub	x0, x1, x0
  4060ec:	mov	x1, x0
  4060f0:	ldr	x0, [x29, #112]
  4060f4:	bl	401a70 <strnlen@plt>
  4060f8:	str	x0, [x29, #120]
  4060fc:	ldr	x0, [x29, #120]
  406100:	add	x0, x0, #0x1
  406104:	add	x0, x0, #0xf
  406108:	lsr	x0, x0, #4
  40610c:	lsl	x0, x0, #4
  406110:	sub	sp, sp, x0
  406114:	mov	x0, sp
  406118:	add	x0, x0, #0xf
  40611c:	lsr	x0, x0, #4
  406120:	lsl	x0, x0, #4
  406124:	str	x0, [x29, #128]
  406128:	ldr	x1, [x29, #128]
  40612c:	ldr	x0, [x29, #120]
  406130:	add	x0, x1, x0
  406134:	strb	wzr, [x0]
  406138:	ldr	x2, [x29, #120]
  40613c:	ldr	x1, [x29, #112]
  406140:	ldr	x0, [x29, #128]
  406144:	bl	401ab0 <memcpy@plt>
  406148:	str	x0, [x29, #136]
  40614c:	ldr	x1, [x29, #136]
  406150:	ldr	x0, [x29, #56]
  406154:	bl	404074 <netdev_get>
  406158:	str	x0, [x29, #72]
  40615c:	ldr	x0, [x29, #72]
  406160:	cmp	x0, #0x0
  406164:	b.ne	40619c <parse_cmdline_bond+0x134>  // b.any
  406168:	add	x0, x29, #0x48
  40616c:	mov	x3, x0
  406170:	ldr	x2, [x29, #136]
  406174:	adrp	x0, 407000 <network_dump+0x318>
  406178:	add	x1, x0, #0x970
  40617c:	ldr	x0, [x29, #56]
  406180:	bl	403e58 <netdev_new>
  406184:	str	w0, [x29, #68]
  406188:	ldr	w0, [x29, #68]
  40618c:	cmp	w0, #0x0
  406190:	b.ge	40619c <parse_cmdline_bond+0x134>  // b.tcont
  406194:	ldr	w19, [x29, #68]
  406198:	b	40636c <parse_cmdline_bond+0x304>
  40619c:	ldr	x0, [x29, #104]
  4061a0:	add	x0, x0, #0x1
  4061a4:	str	x0, [x29, #40]
  4061a8:	mov	w1, #0x3a                  	// #58
  4061ac:	ldr	x0, [x29, #40]
  4061b0:	bl	401cb0 <strchr@plt>
  4061b4:	str	x0, [x29, #104]
  4061b8:	ldr	x0, [x29, #104]
  4061bc:	cmp	x0, #0x0
  4061c0:	b.ne	4061d0 <parse_cmdline_bond+0x168>  // b.any
  4061c4:	ldr	x0, [x29, #40]
  4061c8:	str	x0, [x29, #96]
  4061cc:	b	406244 <parse_cmdline_bond+0x1dc>
  4061d0:	ldr	x0, [x29, #40]
  4061d4:	str	x0, [x29, #144]
  4061d8:	ldr	x1, [x29, #104]
  4061dc:	ldr	x0, [x29, #40]
  4061e0:	sub	x0, x1, x0
  4061e4:	mov	x1, x0
  4061e8:	ldr	x0, [x29, #144]
  4061ec:	bl	401a70 <strnlen@plt>
  4061f0:	str	x0, [x29, #152]
  4061f4:	ldr	x0, [x29, #152]
  4061f8:	add	x0, x0, #0x1
  4061fc:	add	x0, x0, #0xf
  406200:	lsr	x0, x0, #4
  406204:	lsl	x0, x0, #4
  406208:	sub	sp, sp, x0
  40620c:	mov	x0, sp
  406210:	add	x0, x0, #0xf
  406214:	lsr	x0, x0, #4
  406218:	lsl	x0, x0, #4
  40621c:	str	x0, [x29, #160]
  406220:	ldr	x1, [x29, #160]
  406224:	ldr	x0, [x29, #152]
  406228:	add	x0, x1, x0
  40622c:	strb	wzr, [x0]
  406230:	ldr	x2, [x29, #152]
  406234:	ldr	x1, [x29, #144]
  406238:	ldr	x0, [x29, #160]
  40623c:	bl	401ab0 <memcpy@plt>
  406240:	str	x0, [x29, #96]
  406244:	ldr	x0, [x29, #96]
  406248:	bl	403340 <isempty>
  40624c:	and	w0, w0, #0xff
  406250:	cmp	w0, #0x0
  406254:	b.eq	406260 <parse_cmdline_bond+0x1f8>  // b.none
  406258:	mov	w19, #0xffffffea            	// #-22
  40625c:	b	40636c <parse_cmdline_bond+0x304>
  406260:	ldr	x0, [x29, #96]
  406264:	str	x0, [x29, #80]
  406268:	str	xzr, [x29, #88]
  40626c:	add	x1, x29, #0x58
  406270:	add	x4, x29, #0x50
  406274:	mov	w3, #0x0                   	// #0
  406278:	adrp	x0, 407000 <network_dump+0x318>
  40627c:	add	x2, x0, #0x968
  406280:	mov	x0, x4
  406284:	bl	401c70 <extract_first_word@plt>
  406288:	str	w0, [x29, #68]
  40628c:	ldr	w0, [x29, #68]
  406290:	cmp	w0, #0x0
  406294:	b.ne	4062a0 <parse_cmdline_bond+0x238>  // b.any
  406298:	mov	w20, #0x0                   	// #0
  40629c:	b	4062ec <parse_cmdline_bond+0x284>
  4062a0:	ldr	w0, [x29, #68]
  4062a4:	cmp	w0, #0x0
  4062a8:	b.ge	4062b8 <parse_cmdline_bond+0x250>  // b.tcont
  4062ac:	ldr	w19, [x29, #68]
  4062b0:	mov	w20, #0x1                   	// #1
  4062b4:	b	4062ec <parse_cmdline_bond+0x284>
  4062b8:	ldr	x0, [x29, #88]
  4062bc:	ldr	x2, [x29, #136]
  4062c0:	mov	x1, x0
  4062c4:	ldr	x0, [x29, #56]
  4062c8:	bl	40493c <network_set_bond>
  4062cc:	str	w0, [x29, #68]
  4062d0:	ldr	w0, [x29, #68]
  4062d4:	cmp	w0, #0x0
  4062d8:	b.ge	4062e8 <parse_cmdline_bond+0x280>  // b.tcont
  4062dc:	ldr	w19, [x29, #68]
  4062e0:	mov	w20, #0x1                   	// #1
  4062e4:	b	4062ec <parse_cmdline_bond+0x284>
  4062e8:	mov	w20, #0x2                   	// #2
  4062ec:	add	x0, x29, #0x58
  4062f0:	bl	402ff4 <freep>
  4062f4:	cmp	w20, #0x0
  4062f8:	b.eq	406308 <parse_cmdline_bond+0x2a0>  // b.none
  4062fc:	cmp	w20, #0x2
  406300:	b.ne	40636c <parse_cmdline_bond+0x304>  // b.any
  406304:	b	406268 <parse_cmdline_bond+0x200>
  406308:	ldr	x0, [x29, #104]
  40630c:	cmp	x0, #0x0
  406310:	b.ne	40631c <parse_cmdline_bond+0x2b4>  // b.any
  406314:	mov	w19, #0x0                   	// #0
  406318:	b	40636c <parse_cmdline_bond+0x304>
  40631c:	ldr	x0, [x29, #104]
  406320:	add	x0, x0, #0x1
  406324:	str	x0, [x29, #40]
  406328:	mov	w1, #0x3a                  	// #58
  40632c:	ldr	x0, [x29, #40]
  406330:	bl	401cb0 <strchr@plt>
  406334:	str	x0, [x29, #104]
  406338:	ldr	x0, [x29, #104]
  40633c:	cmp	x0, #0x0
  406340:	b.ne	40634c <parse_cmdline_bond+0x2e4>  // b.any
  406344:	mov	w19, #0x0                   	// #0
  406348:	b	40636c <parse_cmdline_bond+0x304>
  40634c:	ldr	x0, [x29, #104]
  406350:	add	x1, x0, #0x1
  406354:	ldr	x0, [x29, #72]
  406358:	add	x0, x0, #0x10
  40635c:	mov	x2, x0
  406360:	mov	w0, #0x0                   	// #0
  406364:	bl	401b50 <parse_mtu@plt>
  406368:	mov	w19, w0
  40636c:	mov	w1, w19
  406370:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  406374:	add	x0, x0, #0xb90
  406378:	ldr	x2, [x29, #168]
  40637c:	ldr	x0, [x0]
  406380:	eor	x0, x2, x0
  406384:	cmp	x0, #0x0
  406388:	b.eq	406390 <parse_cmdline_bond+0x328>  // b.none
  40638c:	bl	401bb0 <__stack_chk_fail@plt>
  406390:	mov	w0, w1
  406394:	mov	sp, x29
  406398:	ldp	x19, x20, [sp, #16]
  40639c:	ldp	x29, x30, [sp], #176
  4063a0:	ret

00000000004063a4 <parse_cmdline_ifname>:
  4063a4:	stp	x29, x30, [sp, #-112]!
  4063a8:	mov	x29, sp
  4063ac:	str	x0, [x29, #40]
  4063b0:	str	x1, [x29, #32]
  4063b4:	str	x2, [x29, #24]
  4063b8:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4063bc:	add	x0, x0, #0xb90
  4063c0:	ldr	x1, [x0]
  4063c4:	str	x1, [x29, #104]
  4063c8:	mov	x1, #0x0                   	// #0
  4063cc:	ldr	x1, [x29, #24]
  4063d0:	ldr	x0, [x29, #32]
  4063d4:	bl	403268 <proc_cmdline_value_missing>
  4063d8:	and	w0, w0, #0xff
  4063dc:	cmp	w0, #0x0
  4063e0:	b.eq	4063ec <parse_cmdline_ifname+0x48>  // b.none
  4063e4:	mov	w0, #0xffffffea            	// #-22
  4063e8:	b	4064c4 <parse_cmdline_ifname+0x120>
  4063ec:	mov	w1, #0x3a                  	// #58
  4063f0:	ldr	x0, [x29, #24]
  4063f4:	bl	401cb0 <strchr@plt>
  4063f8:	str	x0, [x29, #56]
  4063fc:	ldr	x0, [x29, #56]
  406400:	cmp	x0, #0x0
  406404:	b.ne	406410 <parse_cmdline_ifname+0x6c>  // b.any
  406408:	mov	w0, #0xffffffea            	// #-22
  40640c:	b	4064c4 <parse_cmdline_ifname+0x120>
  406410:	ldr	x0, [x29, #24]
  406414:	str	x0, [x29, #64]
  406418:	ldr	x1, [x29, #56]
  40641c:	ldr	x0, [x29, #24]
  406420:	sub	x0, x1, x0
  406424:	mov	x1, x0
  406428:	ldr	x0, [x29, #64]
  40642c:	bl	401a70 <strnlen@plt>
  406430:	str	x0, [x29, #72]
  406434:	ldr	x0, [x29, #72]
  406438:	add	x0, x0, #0x1
  40643c:	add	x0, x0, #0xf
  406440:	lsr	x0, x0, #4
  406444:	lsl	x0, x0, #4
  406448:	sub	sp, sp, x0
  40644c:	mov	x0, sp
  406450:	add	x0, x0, #0xf
  406454:	lsr	x0, x0, #4
  406458:	lsl	x0, x0, #4
  40645c:	str	x0, [x29, #80]
  406460:	ldr	x1, [x29, #80]
  406464:	ldr	x0, [x29, #72]
  406468:	add	x0, x1, x0
  40646c:	strb	wzr, [x0]
  406470:	ldr	x2, [x29, #72]
  406474:	ldr	x1, [x29, #64]
  406478:	ldr	x0, [x29, #80]
  40647c:	bl	401ab0 <memcpy@plt>
  406480:	str	x0, [x29, #88]
  406484:	ldr	x0, [x29, #56]
  406488:	add	x0, x0, #0x1
  40648c:	add	x1, x29, #0x60
  406490:	bl	401b80 <ether_addr_from_string@plt>
  406494:	str	w0, [x29, #52]
  406498:	ldr	w0, [x29, #52]
  40649c:	cmp	w0, #0x0
  4064a0:	b.ge	4064ac <parse_cmdline_ifname+0x108>  // b.tcont
  4064a4:	ldr	w0, [x29, #52]
  4064a8:	b	4064c4 <parse_cmdline_ifname+0x120>
  4064ac:	add	x0, x29, #0x60
  4064b0:	mov	x3, #0x0                   	// #0
  4064b4:	mov	x2, x0
  4064b8:	ldr	x1, [x29, #88]
  4064bc:	ldr	x0, [x29, #40]
  4064c0:	bl	40410c <link_new>
  4064c4:	mov	w1, w0
  4064c8:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4064cc:	add	x0, x0, #0xb90
  4064d0:	ldr	x2, [x29, #104]
  4064d4:	ldr	x0, [x0]
  4064d8:	eor	x0, x2, x0
  4064dc:	cmp	x0, #0x0
  4064e0:	b.eq	4064e8 <parse_cmdline_ifname+0x144>  // b.none
  4064e4:	bl	401bb0 <__stack_chk_fail@plt>
  4064e8:	mov	w0, w1
  4064ec:	mov	sp, x29
  4064f0:	ldp	x29, x30, [sp], #112
  4064f4:	ret

00000000004064f8 <parse_cmdline_item>:
  4064f8:	stp	x29, x30, [sp, #-64]!
  4064fc:	mov	x29, sp
  406500:	str	x0, [sp, #40]
  406504:	str	x1, [sp, #32]
  406508:	str	x2, [sp, #24]
  40650c:	ldr	x0, [sp, #24]
  406510:	str	x0, [sp, #56]
  406514:	ldr	x0, [sp, #40]
  406518:	cmp	x0, #0x0
  40651c:	cset	w0, eq  // eq = none
  406520:	and	w0, w0, #0xff
  406524:	and	x0, x0, #0xff
  406528:	cmp	x0, #0x0
  40652c:	b.eq	406558 <parse_cmdline_item+0x60>  // b.none
  406530:	adrp	x0, 407000 <network_dump+0x318>
  406534:	add	x1, x0, #0x8a3
  406538:	adrp	x0, 407000 <network_dump+0x318>
  40653c:	add	x4, x0, #0xce0
  406540:	mov	w3, #0x3a4                 	// #932
  406544:	mov	x2, x1
  406548:	adrp	x0, 407000 <network_dump+0x318>
  40654c:	add	x1, x0, #0x978
  406550:	mov	w0, #0x0                   	// #0
  406554:	bl	401b00 <log_assert_failed_realm@plt>
  406558:	ldr	x0, [sp, #24]
  40655c:	cmp	x0, #0x0
  406560:	cset	w0, eq  // eq = none
  406564:	and	w0, w0, #0xff
  406568:	and	x0, x0, #0xff
  40656c:	cmp	x0, #0x0
  406570:	b.eq	40659c <parse_cmdline_item+0xa4>  // b.none
  406574:	adrp	x0, 407000 <network_dump+0x318>
  406578:	add	x1, x0, #0x8a3
  40657c:	adrp	x0, 407000 <network_dump+0x318>
  406580:	add	x4, x0, #0xce0
  406584:	mov	w3, #0x3a5                 	// #933
  406588:	mov	x2, x1
  40658c:	adrp	x0, 407000 <network_dump+0x318>
  406590:	add	x1, x0, #0x980
  406594:	mov	w0, #0x0                   	// #0
  406598:	bl	401b00 <log_assert_failed_realm@plt>
  40659c:	adrp	x0, 407000 <network_dump+0x318>
  4065a0:	add	x1, x0, #0x988
  4065a4:	ldr	x0, [sp, #40]
  4065a8:	bl	401c60 <strcmp@plt>
  4065ac:	cmp	w0, #0x0
  4065b0:	b.ne	4065c8 <parse_cmdline_item+0xd0>  // b.any
  4065b4:	ldr	x2, [sp, #32]
  4065b8:	ldr	x1, [sp, #40]
  4065bc:	ldr	x0, [sp, #56]
  4065c0:	bl	4056cc <parse_cmdline_ip>
  4065c4:	b	406700 <parse_cmdline_item+0x208>
  4065c8:	adrp	x0, 407000 <network_dump+0x318>
  4065cc:	add	x1, x0, #0x990
  4065d0:	ldr	x0, [sp, #40]
  4065d4:	bl	401c60 <strcmp@plt>
  4065d8:	cmp	w0, #0x0
  4065dc:	b.ne	4065f4 <parse_cmdline_item+0xfc>  // b.any
  4065e0:	ldr	x2, [sp, #32]
  4065e4:	ldr	x1, [sp, #40]
  4065e8:	ldr	x0, [sp, #56]
  4065ec:	bl	405794 <parse_cmdline_rd_route>
  4065f0:	b	406700 <parse_cmdline_item+0x208>
  4065f4:	adrp	x0, 407000 <network_dump+0x318>
  4065f8:	add	x1, x0, #0x9a0
  4065fc:	ldr	x0, [sp, #40]
  406600:	bl	401c60 <strcmp@plt>
  406604:	cmp	w0, #0x0
  406608:	b.ne	406620 <parse_cmdline_item+0x128>  // b.any
  40660c:	ldr	x2, [sp, #32]
  406610:	ldr	x1, [sp, #40]
  406614:	ldr	x0, [sp, #56]
  406618:	bl	405bf4 <parse_cmdline_nameserver>
  40661c:	b	406700 <parse_cmdline_item+0x208>
  406620:	adrp	x0, 407000 <network_dump+0x318>
  406624:	add	x1, x0, #0x9b0
  406628:	ldr	x0, [sp, #40]
  40662c:	bl	401c60 <strcmp@plt>
  406630:	cmp	w0, #0x0
  406634:	b.ne	40664c <parse_cmdline_item+0x154>  // b.any
  406638:	ldr	x2, [sp, #32]
  40663c:	ldr	x1, [sp, #40]
  406640:	ldr	x0, [sp, #56]
  406644:	bl	405c44 <parse_cmdline_rd_peerdns>
  406648:	b	406700 <parse_cmdline_item+0x208>
  40664c:	adrp	x0, 407000 <network_dump+0x318>
  406650:	add	x1, x0, #0x958
  406654:	ldr	x0, [sp, #40]
  406658:	bl	401c60 <strcmp@plt>
  40665c:	cmp	w0, #0x0
  406660:	b.ne	406678 <parse_cmdline_item+0x180>  // b.any
  406664:	ldr	x2, [sp, #32]
  406668:	ldr	x1, [sp, #40]
  40666c:	ldr	x0, [sp, #56]
  406670:	bl	405cd4 <parse_cmdline_vlan>
  406674:	b	406700 <parse_cmdline_item+0x208>
  406678:	adrp	x0, 407000 <network_dump+0x318>
  40667c:	add	x1, x0, #0x960
  406680:	ldr	x0, [sp, #40]
  406684:	bl	401c60 <strcmp@plt>
  406688:	cmp	w0, #0x0
  40668c:	b.ne	4066a4 <parse_cmdline_item+0x1ac>  // b.any
  406690:	ldr	x2, [sp, #32]
  406694:	ldr	x1, [sp, #40]
  406698:	ldr	x0, [sp, #56]
  40669c:	bl	405e50 <parse_cmdline_bridge>
  4066a0:	b	406700 <parse_cmdline_item+0x208>
  4066a4:	adrp	x0, 407000 <network_dump+0x318>
  4066a8:	add	x1, x0, #0x970
  4066ac:	ldr	x0, [sp, #40]
  4066b0:	bl	401c60 <strcmp@plt>
  4066b4:	cmp	w0, #0x0
  4066b8:	b.ne	4066d0 <parse_cmdline_item+0x1d8>  // b.any
  4066bc:	ldr	x2, [sp, #32]
  4066c0:	ldr	x1, [sp, #40]
  4066c4:	ldr	x0, [sp, #56]
  4066c8:	bl	406068 <parse_cmdline_bond>
  4066cc:	b	406700 <parse_cmdline_item+0x208>
  4066d0:	adrp	x0, 407000 <network_dump+0x318>
  4066d4:	add	x1, x0, #0x9c0
  4066d8:	ldr	x0, [sp, #40]
  4066dc:	bl	401c60 <strcmp@plt>
  4066e0:	cmp	w0, #0x0
  4066e4:	b.ne	4066fc <parse_cmdline_item+0x204>  // b.any
  4066e8:	ldr	x2, [sp, #32]
  4066ec:	ldr	x1, [sp, #40]
  4066f0:	ldr	x0, [sp, #56]
  4066f4:	bl	4063a4 <parse_cmdline_ifname>
  4066f8:	b	406700 <parse_cmdline_item+0x208>
  4066fc:	mov	w0, #0x0                   	// #0
  406700:	ldp	x29, x30, [sp], #64
  406704:	ret

0000000000406708 <context_merge_networks>:
  406708:	stp	x29, x30, [sp, #-96]!
  40670c:	mov	x29, sp
  406710:	str	x0, [sp, #24]
  406714:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  406718:	add	x0, x0, #0xb90
  40671c:	ldr	x1, [x0]
  406720:	str	x1, [sp, #88]
  406724:	mov	x1, #0x0                   	// #0
  406728:	ldr	x0, [sp, #24]
  40672c:	cmp	x0, #0x0
  406730:	cset	w0, eq  // eq = none
  406734:	and	w0, w0, #0xff
  406738:	and	x0, x0, #0xff
  40673c:	cmp	x0, #0x0
  406740:	b.eq	40676c <context_merge_networks+0x64>  // b.none
  406744:	adrp	x0, 407000 <network_dump+0x318>
  406748:	add	x1, x0, #0x8a3
  40674c:	adrp	x0, 407000 <network_dump+0x318>
  406750:	add	x4, x0, #0xcf8
  406754:	mov	w3, #0x3c1                 	// #961
  406758:	mov	x2, x1
  40675c:	adrp	x0, 407000 <network_dump+0x318>
  406760:	add	x1, x0, #0x8f0
  406764:	mov	w0, #0x0                   	// #0
  406768:	bl	401b00 <log_assert_failed_realm@plt>
  40676c:	adrp	x0, 407000 <network_dump+0x318>
  406770:	add	x1, x0, #0x8f8
  406774:	ldr	x0, [sp, #24]
  406778:	bl	403db4 <network_get>
  40677c:	str	x0, [sp, #64]
  406780:	ldr	x0, [sp, #64]
  406784:	cmp	x0, #0x0
  406788:	b.ne	406794 <context_merge_networks+0x8c>  // b.any
  40678c:	mov	w0, #0x0                   	// #0
  406790:	b	40692c <context_merge_networks+0x224>
  406794:	ldr	x0, [sp, #24]
  406798:	ldr	x0, [x0]
  40679c:	bl	4031f0 <hashmap_size>
  4067a0:	cmp	w0, #0x1
  4067a4:	b.hi	4067b0 <context_merge_networks+0xa8>  // b.pmore
  4067a8:	mov	w0, #0x0                   	// #0
  4067ac:	b	40692c <context_merge_networks+0x224>
  4067b0:	mov	w0, #0xfffffffe            	// #-2
  4067b4:	str	w0, [sp, #72]
  4067b8:	str	xzr, [sp, #80]
  4067bc:	b	406898 <context_merge_networks+0x190>
  4067c0:	ldr	x0, [sp, #48]
  4067c4:	ldr	x1, [sp, #64]
  4067c8:	cmp	x1, x0
  4067cc:	b.ne	4067d4 <context_merge_networks+0xcc>  // b.any
  4067d0:	b	406898 <context_merge_networks+0x190>
  4067d4:	ldr	x0, [sp, #48]
  4067d8:	ldr	x1, [sp, #64]
  4067dc:	ldr	w1, [x1, #64]
  4067e0:	str	w1, [x0, #64]
  4067e4:	ldr	x0, [sp, #48]
  4067e8:	add	x3, x0, #0x18
  4067ec:	ldr	x0, [sp, #64]
  4067f0:	ldr	x0, [x0, #24]
  4067f4:	mov	w2, #0x0                   	// #0
  4067f8:	mov	x1, x0
  4067fc:	mov	x0, x3
  406800:	bl	401a30 <strv_extend_strv@plt>
  406804:	str	w0, [sp, #44]
  406808:	ldr	w0, [sp, #44]
  40680c:	cmp	w0, #0x0
  406810:	b.ge	40681c <context_merge_networks+0x114>  // b.tcont
  406814:	ldr	w0, [sp, #44]
  406818:	b	40692c <context_merge_networks+0x224>
  40681c:	ldr	x0, [sp, #64]
  406820:	ldr	x0, [x0, #80]
  406824:	str	x0, [sp, #56]
  406828:	b	40688c <context_merge_networks+0x184>
  40682c:	ldr	x6, [sp, #48]
  406830:	ldr	x0, [sp, #56]
  406834:	ldr	w1, [x0, #44]
  406838:	ldr	x0, [sp, #56]
  40683c:	ldrb	w7, [x0, #40]
  406840:	ldr	x0, [sp, #56]
  406844:	add	x2, x0, #0x8
  406848:	ldr	x0, [sp, #56]
  40684c:	add	x0, x0, #0x18
  406850:	mov	x5, #0x0                   	// #0
  406854:	mov	x4, x0
  406858:	mov	x3, x2
  40685c:	mov	w2, w7
  406860:	mov	x0, x6
  406864:	bl	4038bc <route_new>
  406868:	str	w0, [sp, #44]
  40686c:	ldr	w0, [sp, #44]
  406870:	cmp	w0, #0x0
  406874:	b.ge	406880 <context_merge_networks+0x178>  // b.tcont
  406878:	ldr	w0, [sp, #44]
  40687c:	b	40692c <context_merge_networks+0x224>
  406880:	ldr	x0, [sp, #56]
  406884:	ldr	x0, [x0, #48]
  406888:	str	x0, [sp, #56]
  40688c:	ldr	x0, [sp, #56]
  406890:	cmp	x0, #0x0
  406894:	b.ne	40682c <context_merge_networks+0x124>  // b.any
  406898:	ldr	x0, [sp, #24]
  40689c:	ldr	x0, [x0]
  4068a0:	add	x2, sp, #0x30
  4068a4:	add	x1, sp, #0x48
  4068a8:	mov	x3, #0x0                   	// #0
  4068ac:	bl	40320c <hashmap_iterate>
  4068b0:	and	w0, w0, #0xff
  4068b4:	cmp	w0, #0x0
  4068b8:	b.ne	4067c0 <context_merge_networks+0xb8>  // b.any
  4068bc:	ldr	x0, [sp, #24]
  4068c0:	ldr	x2, [x0]
  4068c4:	adrp	x0, 407000 <network_dump+0x318>
  4068c8:	add	x1, x0, #0x8f8
  4068cc:	mov	x0, x2
  4068d0:	bl	4031cc <hashmap_remove>
  4068d4:	mov	x1, x0
  4068d8:	ldr	x0, [sp, #64]
  4068dc:	cmp	x0, x1
  4068e0:	cset	w0, ne  // ne = any
  4068e4:	and	w0, w0, #0xff
  4068e8:	and	x0, x0, #0xff
  4068ec:	cmp	x0, #0x0
  4068f0:	b.ne	4068f8 <context_merge_networks+0x1f0>  // b.any
  4068f4:	b	406920 <context_merge_networks+0x218>
  4068f8:	adrp	x0, 407000 <network_dump+0x318>
  4068fc:	add	x1, x0, #0x8a3
  406900:	adrp	x0, 407000 <network_dump+0x318>
  406904:	add	x4, x0, #0xcf8
  406908:	mov	w3, #0x3e0                 	// #992
  40690c:	mov	x2, x1
  406910:	adrp	x0, 407000 <network_dump+0x318>
  406914:	add	x1, x0, #0x9c8
  406918:	mov	w0, #0x0                   	// #0
  40691c:	bl	401b00 <log_assert_failed_realm@plt>
  406920:	ldr	x0, [sp, #64]
  406924:	bl	403ab0 <network_free>
  406928:	mov	w0, #0x0                   	// #0
  40692c:	mov	w1, w0
  406930:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  406934:	add	x0, x0, #0xb90
  406938:	ldr	x2, [sp, #88]
  40693c:	ldr	x0, [x0]
  406940:	eor	x0, x2, x0
  406944:	cmp	x0, #0x0
  406948:	b.eq	406950 <context_merge_networks+0x248>  // b.none
  40694c:	bl	401bb0 <__stack_chk_fail@plt>
  406950:	mov	w0, w1
  406954:	ldp	x29, x30, [sp], #96
  406958:	ret

000000000040695c <context_clear>:
  40695c:	stp	x29, x30, [sp, #-64]!
  406960:	mov	x29, sp
  406964:	str	x0, [sp, #24]
  406968:	ldr	x0, [sp, #24]
  40696c:	cmp	x0, #0x0
  406970:	b.eq	406a14 <context_clear+0xb8>  // b.none
  406974:	b	406980 <context_clear+0x24>
  406978:	ldr	x0, [sp, #40]
  40697c:	bl	403ab0 <network_free>
  406980:	ldr	x0, [sp, #24]
  406984:	ldr	x0, [x0]
  406988:	bl	403244 <hashmap_steal_first>
  40698c:	str	x0, [sp, #40]
  406990:	ldr	x0, [sp, #40]
  406994:	cmp	x0, #0x0
  406998:	b.ne	406978 <context_clear+0x1c>  // b.any
  40699c:	ldr	x0, [sp, #24]
  4069a0:	ldr	x0, [x0]
  4069a4:	bl	403184 <hashmap_free>
  4069a8:	b	4069b4 <context_clear+0x58>
  4069ac:	ldr	x0, [sp, #48]
  4069b0:	bl	403ddc <netdev_free>
  4069b4:	ldr	x0, [sp, #24]
  4069b8:	ldr	x0, [x0, #8]
  4069bc:	bl	403244 <hashmap_steal_first>
  4069c0:	str	x0, [sp, #48]
  4069c4:	ldr	x0, [sp, #48]
  4069c8:	cmp	x0, #0x0
  4069cc:	b.ne	4069ac <context_clear+0x50>  // b.any
  4069d0:	ldr	x0, [sp, #24]
  4069d4:	ldr	x0, [x0, #8]
  4069d8:	bl	403184 <hashmap_free>
  4069dc:	b	4069e8 <context_clear+0x8c>
  4069e0:	ldr	x0, [sp, #56]
  4069e4:	bl	40409c <link_free>
  4069e8:	ldr	x0, [sp, #24]
  4069ec:	ldr	x0, [x0, #16]
  4069f0:	bl	403244 <hashmap_steal_first>
  4069f4:	str	x0, [sp, #56]
  4069f8:	ldr	x0, [sp, #56]
  4069fc:	cmp	x0, #0x0
  406a00:	b.ne	4069e0 <context_clear+0x84>  // b.any
  406a04:	ldr	x0, [sp, #24]
  406a08:	ldr	x0, [x0, #16]
  406a0c:	bl	403184 <hashmap_free>
  406a10:	b	406a18 <context_clear+0xbc>
  406a14:	nop
  406a18:	ldp	x29, x30, [sp], #64
  406a1c:	ret

0000000000406a20 <address_dump>:
  406a20:	stp	x29, x30, [sp, #-80]!
  406a24:	mov	x29, sp
  406a28:	str	x19, [sp, #16]
  406a2c:	str	x0, [sp, #40]
  406a30:	str	x1, [sp, #32]
  406a34:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  406a38:	add	x0, x0, #0xb90
  406a3c:	ldr	x1, [x0]
  406a40:	str	x1, [sp, #72]
  406a44:	mov	x1, #0x0                   	// #0
  406a48:	str	xzr, [sp, #56]
  406a4c:	str	xzr, [sp, #64]
  406a50:	ldr	x0, [sp, #40]
  406a54:	ldr	w4, [x0, #44]
  406a58:	ldr	x0, [sp, #40]
  406a5c:	add	x1, x0, #0x8
  406a60:	ldr	x0, [sp, #40]
  406a64:	ldrb	w0, [x0, #40]
  406a68:	mov	w2, w0
  406a6c:	add	x0, sp, #0x38
  406a70:	mov	x3, x0
  406a74:	mov	w0, w4
  406a78:	bl	401bf0 <in_addr_prefix_to_string@plt>
  406a7c:	str	w0, [sp, #52]
  406a80:	ldr	w0, [sp, #52]
  406a84:	cmp	w0, #0x0
  406a88:	b.ge	406a94 <address_dump+0x74>  // b.tcont
  406a8c:	ldr	w19, [sp, #52]
  406a90:	b	406b34 <address_dump+0x114>
  406a94:	ldr	x0, [sp, #40]
  406a98:	ldr	w2, [x0, #44]
  406a9c:	ldr	x0, [sp, #40]
  406aa0:	add	x0, x0, #0x18
  406aa4:	mov	x1, x0
  406aa8:	mov	w0, w2
  406aac:	bl	401ba0 <in_addr_is_null@plt>
  406ab0:	cmp	w0, #0x0
  406ab4:	b.ne	406af4 <address_dump+0xd4>  // b.any
  406ab8:	ldr	x0, [sp, #40]
  406abc:	ldr	w3, [x0, #44]
  406ac0:	ldr	x0, [sp, #40]
  406ac4:	add	x0, x0, #0x18
  406ac8:	add	x1, sp, #0x40
  406acc:	mov	x2, x1
  406ad0:	mov	x1, x0
  406ad4:	mov	w0, w3
  406ad8:	bl	401c40 <in_addr_to_string@plt>
  406adc:	str	w0, [sp, #52]
  406ae0:	ldr	w0, [sp, #52]
  406ae4:	cmp	w0, #0x0
  406ae8:	b.ge	406af4 <address_dump+0xd4>  // b.tcont
  406aec:	ldr	w19, [sp, #52]
  406af0:	b	406b34 <address_dump+0x114>
  406af4:	ldr	x0, [sp, #56]
  406af8:	mov	x2, x0
  406afc:	adrp	x0, 407000 <network_dump+0x318>
  406b00:	add	x1, x0, #0xa00
  406b04:	ldr	x0, [sp, #32]
  406b08:	bl	401a90 <fprintf@plt>
  406b0c:	ldr	x0, [sp, #64]
  406b10:	cmp	x0, #0x0
  406b14:	b.eq	406b30 <address_dump+0x110>  // b.none
  406b18:	ldr	x0, [sp, #64]
  406b1c:	mov	x2, x0
  406b20:	adrp	x0, 407000 <network_dump+0x318>
  406b24:	add	x1, x0, #0xa18
  406b28:	ldr	x0, [sp, #32]
  406b2c:	bl	401a90 <fprintf@plt>
  406b30:	mov	w19, #0x0                   	// #0
  406b34:	add	x0, sp, #0x40
  406b38:	bl	402ff4 <freep>
  406b3c:	add	x0, sp, #0x38
  406b40:	bl	402ff4 <freep>
  406b44:	mov	w1, w19
  406b48:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  406b4c:	add	x0, x0, #0xb90
  406b50:	ldr	x2, [sp, #72]
  406b54:	ldr	x0, [x0]
  406b58:	eor	x0, x2, x0
  406b5c:	cmp	x0, #0x0
  406b60:	b.eq	406b68 <address_dump+0x148>  // b.none
  406b64:	bl	401bb0 <__stack_chk_fail@plt>
  406b68:	mov	w0, w1
  406b6c:	ldr	x19, [sp, #16]
  406b70:	ldp	x29, x30, [sp], #80
  406b74:	ret

0000000000406b78 <route_dump>:
  406b78:	stp	x29, x30, [sp, #-80]!
  406b7c:	mov	x29, sp
  406b80:	str	x19, [sp, #16]
  406b84:	str	x0, [sp, #40]
  406b88:	str	x1, [sp, #32]
  406b8c:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  406b90:	add	x0, x0, #0xb90
  406b94:	ldr	x1, [x0]
  406b98:	str	x1, [sp, #72]
  406b9c:	mov	x1, #0x0                   	// #0
  406ba0:	str	xzr, [sp, #56]
  406ba4:	str	xzr, [sp, #64]
  406ba8:	ldr	x0, [sp, #40]
  406bac:	ldr	w2, [x0, #44]
  406bb0:	ldr	x0, [sp, #40]
  406bb4:	add	x0, x0, #0x8
  406bb8:	mov	x1, x0
  406bbc:	mov	w0, w2
  406bc0:	bl	401ba0 <in_addr_is_null@plt>
  406bc4:	cmp	w0, #0x0
  406bc8:	b.ne	406c10 <route_dump+0x98>  // b.any
  406bcc:	ldr	x0, [sp, #40]
  406bd0:	ldr	w4, [x0, #44]
  406bd4:	ldr	x0, [sp, #40]
  406bd8:	add	x1, x0, #0x8
  406bdc:	ldr	x0, [sp, #40]
  406be0:	ldrb	w0, [x0, #40]
  406be4:	mov	w2, w0
  406be8:	add	x0, sp, #0x38
  406bec:	mov	x3, x0
  406bf0:	mov	w0, w4
  406bf4:	bl	401bf0 <in_addr_prefix_to_string@plt>
  406bf8:	str	w0, [sp, #52]
  406bfc:	ldr	w0, [sp, #52]
  406c00:	cmp	w0, #0x0
  406c04:	b.ge	406c10 <route_dump+0x98>  // b.tcont
  406c08:	ldr	w19, [sp, #52]
  406c0c:	b	406ca4 <route_dump+0x12c>
  406c10:	ldr	x0, [sp, #40]
  406c14:	ldr	w3, [x0, #44]
  406c18:	ldr	x0, [sp, #40]
  406c1c:	add	x0, x0, #0x18
  406c20:	add	x1, sp, #0x40
  406c24:	mov	x2, x1
  406c28:	mov	x1, x0
  406c2c:	mov	w0, w3
  406c30:	bl	401c40 <in_addr_to_string@plt>
  406c34:	str	w0, [sp, #52]
  406c38:	ldr	w0, [sp, #52]
  406c3c:	cmp	w0, #0x0
  406c40:	b.ge	406c4c <route_dump+0xd4>  // b.tcont
  406c44:	ldr	w19, [sp, #52]
  406c48:	b	406ca4 <route_dump+0x12c>
  406c4c:	ldr	x3, [sp, #32]
  406c50:	mov	x2, #0x9                   	// #9
  406c54:	mov	x1, #0x1                   	// #1
  406c58:	adrp	x0, 407000 <network_dump+0x318>
  406c5c:	add	x0, x0, #0xa28
  406c60:	bl	401d10 <fwrite@plt>
  406c64:	ldr	x0, [sp, #56]
  406c68:	cmp	x0, #0x0
  406c6c:	b.eq	406c88 <route_dump+0x110>  // b.none
  406c70:	ldr	x0, [sp, #56]
  406c74:	mov	x2, x0
  406c78:	adrp	x0, 407000 <network_dump+0x318>
  406c7c:	add	x1, x0, #0xa38
  406c80:	ldr	x0, [sp, #32]
  406c84:	bl	401a90 <fprintf@plt>
  406c88:	ldr	x0, [sp, #64]
  406c8c:	mov	x2, x0
  406c90:	adrp	x0, 407000 <network_dump+0x318>
  406c94:	add	x1, x0, #0xa48
  406c98:	ldr	x0, [sp, #32]
  406c9c:	bl	401a90 <fprintf@plt>
  406ca0:	mov	w19, #0x0                   	// #0
  406ca4:	add	x0, sp, #0x40
  406ca8:	bl	402ff4 <freep>
  406cac:	add	x0, sp, #0x38
  406cb0:	bl	402ff4 <freep>
  406cb4:	mov	w1, w19
  406cb8:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  406cbc:	add	x0, x0, #0xb90
  406cc0:	ldr	x2, [sp, #72]
  406cc4:	ldr	x0, [x0]
  406cc8:	eor	x0, x2, x0
  406ccc:	cmp	x0, #0x0
  406cd0:	b.eq	406cd8 <route_dump+0x160>  // b.none
  406cd4:	bl	401bb0 <__stack_chk_fail@plt>
  406cd8:	mov	w0, w1
  406cdc:	ldr	x19, [sp, #16]
  406ce0:	ldp	x29, x30, [sp], #80
  406ce4:	ret

0000000000406ce8 <network_dump>:
  406ce8:	stp	x29, x30, [sp, #-96]!
  406cec:	mov	x29, sp
  406cf0:	str	x0, [sp, #24]
  406cf4:	str	x1, [sp, #16]
  406cf8:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  406cfc:	add	x0, x0, #0xb90
  406d00:	ldr	x1, [x0]
  406d04:	str	x1, [sp, #88]
  406d08:	mov	x1, #0x0                   	// #0
  406d0c:	ldr	x0, [sp, #24]
  406d10:	cmp	x0, #0x0
  406d14:	cset	w0, eq  // eq = none
  406d18:	and	w0, w0, #0xff
  406d1c:	and	x0, x0, #0xff
  406d20:	cmp	x0, #0x0
  406d24:	b.eq	406d50 <network_dump+0x68>  // b.none
  406d28:	adrp	x0, 407000 <network_dump+0x318>
  406d2c:	add	x1, x0, #0x8a3
  406d30:	adrp	x0, 407000 <network_dump+0x318>
  406d34:	add	x4, x0, #0xd10
  406d38:	mov	w3, #0x424                 	// #1060
  406d3c:	mov	x2, x1
  406d40:	adrp	x0, 407000 <network_dump+0x318>
  406d44:	add	x1, x0, #0x8e8
  406d48:	mov	w0, #0x0                   	// #0
  406d4c:	bl	401b00 <log_assert_failed_realm@plt>
  406d50:	ldr	x0, [sp, #16]
  406d54:	cmp	x0, #0x0
  406d58:	cset	w0, eq  // eq = none
  406d5c:	and	w0, w0, #0xff
  406d60:	and	x0, x0, #0xff
  406d64:	cmp	x0, #0x0
  406d68:	b.eq	406d94 <network_dump+0xac>  // b.none
  406d6c:	adrp	x0, 407000 <network_dump+0x318>
  406d70:	add	x1, x0, #0x8a3
  406d74:	adrp	x0, 407000 <network_dump+0x318>
  406d78:	add	x4, x0, #0xd10
  406d7c:	mov	w3, #0x425                 	// #1061
  406d80:	mov	x2, x1
  406d84:	adrp	x0, 407000 <network_dump+0x318>
  406d88:	add	x1, x0, #0xa58
  406d8c:	mov	w0, #0x0                   	// #0
  406d90:	bl	401b00 <log_assert_failed_realm@plt>
  406d94:	ldr	x0, [sp, #24]
  406d98:	ldr	x0, [x0]
  406d9c:	bl	403340 <isempty>
  406da0:	and	w0, w0, #0xff
  406da4:	cmp	w0, #0x0
  406da8:	b.ne	406db8 <network_dump+0xd0>  // b.any
  406dac:	ldr	x0, [sp, #24]
  406db0:	ldr	x0, [x0]
  406db4:	b	406dc0 <network_dump+0xd8>
  406db8:	adrp	x0, 407000 <network_dump+0x318>
  406dbc:	add	x0, x0, #0xa60
  406dc0:	mov	x2, x0
  406dc4:	adrp	x0, 407000 <network_dump+0x318>
  406dc8:	add	x1, x0, #0xa68
  406dcc:	ldr	x0, [sp, #16]
  406dd0:	bl	401a90 <fprintf@plt>
  406dd4:	ldr	x3, [sp, #16]
  406dd8:	mov	x2, #0x8                   	// #8
  406ddc:	mov	x1, #0x1                   	// #1
  406de0:	adrp	x0, 407000 <network_dump+0x318>
  406de4:	add	x0, x0, #0xa80
  406de8:	bl	401d10 <fwrite@plt>
  406dec:	ldr	x0, [sp, #24]
  406df0:	add	x0, x0, #0x8
  406df4:	bl	403118 <ether_addr_is_null>
  406df8:	and	w0, w0, #0xff
  406dfc:	eor	w0, w0, #0x1
  406e00:	and	w0, w0, #0xff
  406e04:	cmp	w0, #0x0
  406e08:	b.eq	406e30 <network_dump+0x148>  // b.none
  406e0c:	ldr	x0, [sp, #24]
  406e10:	add	x0, x0, #0x8
  406e14:	add	x1, sp, #0x40
  406e18:	bl	401d60 <ether_addr_to_string@plt>
  406e1c:	mov	x2, x0
  406e20:	adrp	x0, 407000 <network_dump+0x318>
  406e24:	add	x1, x0, #0xa90
  406e28:	ldr	x0, [sp, #16]
  406e2c:	bl	401a90 <fprintf@plt>
  406e30:	ldr	x0, [sp, #24]
  406e34:	ldr	w0, [x0, #16]
  406e38:	cmp	w0, #0x0
  406e3c:	b.eq	406e5c <network_dump+0x174>  // b.none
  406e40:	ldr	x0, [sp, #24]
  406e44:	ldr	w0, [x0, #16]
  406e48:	mov	w2, w0
  406e4c:	adrp	x0, 407000 <network_dump+0x318>
  406e50:	add	x1, x0, #0xaa0
  406e54:	ldr	x0, [sp, #16]
  406e58:	bl	401a90 <fprintf@plt>
  406e5c:	ldr	x3, [sp, #16]
  406e60:	mov	x2, #0xb                   	// #11
  406e64:	mov	x1, #0x1                   	// #1
  406e68:	adrp	x0, 407000 <network_dump+0x318>
  406e6c:	add	x0, x0, #0xab0
  406e70:	bl	401d10 <fwrite@plt>
  406e74:	ldr	x0, [sp, #24]
  406e78:	ldr	w0, [x0, #20]
  406e7c:	bl	4033e8 <networkd_dhcp_type_to_string>
  406e80:	str	x0, [sp, #56]
  406e84:	ldr	x0, [sp, #56]
  406e88:	cmp	x0, #0x0
  406e8c:	b.eq	406ea4 <network_dump+0x1bc>  // b.none
  406e90:	ldr	x2, [sp, #56]
  406e94:	adrp	x0, 407000 <network_dump+0x318>
  406e98:	add	x1, x0, #0xac0
  406e9c:	ldr	x0, [sp, #16]
  406ea0:	bl	401a90 <fprintf@plt>
  406ea4:	ldr	x0, [sp, #24]
  406ea8:	ldr	x0, [x0, #24]
  406eac:	bl	403380 <strv_isempty>
  406eb0:	and	w0, w0, #0xff
  406eb4:	eor	w0, w0, #0x1
  406eb8:	and	w0, w0, #0xff
  406ebc:	cmp	w0, #0x0
  406ec0:	b.eq	406f18 <network_dump+0x230>  // b.none
  406ec4:	ldr	x0, [sp, #24]
  406ec8:	ldr	x0, [x0, #24]
  406ecc:	str	x0, [sp, #48]
  406ed0:	b	406efc <network_dump+0x214>
  406ed4:	ldr	x0, [sp, #48]
  406ed8:	ldr	x0, [x0]
  406edc:	mov	x2, x0
  406ee0:	adrp	x0, 407000 <network_dump+0x318>
  406ee4:	add	x1, x0, #0xad0
  406ee8:	ldr	x0, [sp, #16]
  406eec:	bl	401a90 <fprintf@plt>
  406ef0:	ldr	x0, [sp, #48]
  406ef4:	add	x0, x0, #0x8
  406ef8:	str	x0, [sp, #48]
  406efc:	ldr	x0, [sp, #48]
  406f00:	cmp	x0, #0x0
  406f04:	b.eq	406f18 <network_dump+0x230>  // b.none
  406f08:	ldr	x0, [sp, #48]
  406f0c:	ldr	x0, [x0]
  406f10:	cmp	x0, #0x0
  406f14:	b.ne	406ed4 <network_dump+0x1ec>  // b.any
  406f18:	ldr	x0, [sp, #24]
  406f1c:	ldr	x0, [x0, #32]
  406f20:	cmp	x0, #0x0
  406f24:	b.eq	406f44 <network_dump+0x25c>  // b.none
  406f28:	ldr	x0, [sp, #24]
  406f2c:	ldr	x0, [x0, #32]
  406f30:	mov	x2, x0
  406f34:	adrp	x0, 407000 <network_dump+0x318>
  406f38:	add	x1, x0, #0xad8
  406f3c:	ldr	x0, [sp, #16]
  406f40:	bl	401a90 <fprintf@plt>
  406f44:	ldr	x0, [sp, #24]
  406f48:	ldr	x0, [x0, #40]
  406f4c:	cmp	x0, #0x0
  406f50:	b.eq	406f70 <network_dump+0x288>  // b.none
  406f54:	ldr	x0, [sp, #24]
  406f58:	ldr	x0, [x0, #40]
  406f5c:	mov	x2, x0
  406f60:	adrp	x0, 407000 <network_dump+0x318>
  406f64:	add	x1, x0, #0xae8
  406f68:	ldr	x0, [sp, #16]
  406f6c:	bl	401a90 <fprintf@plt>
  406f70:	ldr	x0, [sp, #24]
  406f74:	ldr	x0, [x0, #48]
  406f78:	cmp	x0, #0x0
  406f7c:	b.eq	406f9c <network_dump+0x2b4>  // b.none
  406f80:	ldr	x0, [sp, #24]
  406f84:	ldr	x0, [x0, #48]
  406f88:	mov	x2, x0
  406f8c:	adrp	x0, 407000 <network_dump+0x318>
  406f90:	add	x1, x0, #0xaf8
  406f94:	ldr	x0, [sp, #16]
  406f98:	bl	401a90 <fprintf@plt>
  406f9c:	ldr	x3, [sp, #16]
  406fa0:	mov	x2, #0x8                   	// #8
  406fa4:	mov	x1, #0x1                   	// #1
  406fa8:	adrp	x0, 407000 <network_dump+0x318>
  406fac:	add	x0, x0, #0xb08
  406fb0:	bl	401d10 <fwrite@plt>
  406fb4:	ldr	x0, [sp, #24]
  406fb8:	ldr	x0, [x0, #56]
  406fbc:	bl	403340 <isempty>
  406fc0:	and	w0, w0, #0xff
  406fc4:	eor	w0, w0, #0x1
  406fc8:	and	w0, w0, #0xff
  406fcc:	cmp	w0, #0x0
  406fd0:	b.eq	406ff0 <network_dump+0x308>  // b.none
  406fd4:	ldr	x0, [sp, #24]
  406fd8:	ldr	x0, [x0, #56]
  406fdc:	mov	x2, x0
  406fe0:	adrp	x0, 407000 <network_dump+0x318>
  406fe4:	add	x1, x0, #0xb18
  406fe8:	ldr	x0, [sp, #16]
  406fec:	bl	401a90 <fprintf@plt>
  406ff0:	ldr	x0, [sp, #24]
  406ff4:	ldr	w0, [x0, #64]
  406ff8:	cmp	w0, #0x0
  406ffc:	b.lt	40702c <network_dump+0x344>  // b.tstop
  407000:	ldr	x0, [sp, #24]
  407004:	ldr	w0, [x0, #64]
  407008:	cmp	w0, #0x0
  40700c:	cset	w0, ne  // ne = any
  407010:	and	w0, w0, #0xff
  407014:	bl	403310 <yes_no>
  407018:	mov	x2, x0
  40701c:	adrp	x0, 407000 <network_dump+0x318>
  407020:	add	x1, x0, #0xb28
  407024:	ldr	x0, [sp, #16]
  407028:	bl	401a90 <fprintf@plt>
  40702c:	ldr	x0, [sp, #24]
  407030:	ldr	x0, [x0, #72]
  407034:	str	x0, [sp, #32]
  407038:	b	407054 <network_dump+0x36c>
  40703c:	ldr	x1, [sp, #16]
  407040:	ldr	x0, [sp, #32]
  407044:	bl	406a20 <address_dump>
  407048:	ldr	x0, [sp, #32]
  40704c:	ldr	x0, [x0, #48]
  407050:	str	x0, [sp, #32]
  407054:	ldr	x0, [sp, #32]
  407058:	cmp	x0, #0x0
  40705c:	b.ne	40703c <network_dump+0x354>  // b.any
  407060:	ldr	x0, [sp, #24]
  407064:	ldr	x0, [x0, #80]
  407068:	str	x0, [sp, #40]
  40706c:	b	407088 <network_dump+0x3a0>
  407070:	ldr	x1, [sp, #16]
  407074:	ldr	x0, [sp, #40]
  407078:	bl	406b78 <route_dump>
  40707c:	ldr	x0, [sp, #40]
  407080:	ldr	x0, [x0, #48]
  407084:	str	x0, [sp, #40]
  407088:	ldr	x0, [sp, #40]
  40708c:	cmp	x0, #0x0
  407090:	b.ne	407070 <network_dump+0x388>  // b.any
  407094:	nop
  407098:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  40709c:	add	x0, x0, #0xb90
  4070a0:	ldr	x1, [sp, #88]
  4070a4:	ldr	x0, [x0]
  4070a8:	eor	x0, x1, x0
  4070ac:	cmp	x0, #0x0
  4070b0:	b.eq	4070b8 <network_dump+0x3d0>  // b.none
  4070b4:	bl	401bb0 <__stack_chk_fail@plt>
  4070b8:	ldp	x29, x30, [sp], #96
  4070bc:	ret

00000000004070c0 <netdev_dump>:
  4070c0:	stp	x29, x30, [sp, #-32]!
  4070c4:	mov	x29, sp
  4070c8:	str	x0, [sp, #24]
  4070cc:	str	x1, [sp, #16]
  4070d0:	ldr	x0, [sp, #24]
  4070d4:	cmp	x0, #0x0
  4070d8:	cset	w0, eq  // eq = none
  4070dc:	and	w0, w0, #0xff
  4070e0:	and	x0, x0, #0xff
  4070e4:	cmp	x0, #0x0
  4070e8:	b.eq	407114 <netdev_dump+0x54>  // b.none
  4070ec:	adrp	x0, 407000 <network_dump+0x318>
  4070f0:	add	x1, x0, #0x8a3
  4070f4:	adrp	x0, 407000 <network_dump+0x318>
  4070f8:	add	x4, x0, #0xd20
  4070fc:	mov	w3, #0x456                 	// #1110
  407100:	mov	x2, x1
  407104:	adrp	x0, 407000 <network_dump+0x318>
  407108:	add	x1, x0, #0xb38
  40710c:	mov	w0, #0x0                   	// #0
  407110:	bl	401b00 <log_assert_failed_realm@plt>
  407114:	ldr	x0, [sp, #16]
  407118:	cmp	x0, #0x0
  40711c:	cset	w0, eq  // eq = none
  407120:	and	w0, w0, #0xff
  407124:	and	x0, x0, #0xff
  407128:	cmp	x0, #0x0
  40712c:	b.eq	407158 <netdev_dump+0x98>  // b.none
  407130:	adrp	x0, 407000 <network_dump+0x318>
  407134:	add	x1, x0, #0x8a3
  407138:	adrp	x0, 407000 <network_dump+0x318>
  40713c:	add	x4, x0, #0xd20
  407140:	mov	w3, #0x457                 	// #1111
  407144:	mov	x2, x1
  407148:	adrp	x0, 407000 <network_dump+0x318>
  40714c:	add	x1, x0, #0xa58
  407150:	mov	w0, #0x0                   	// #0
  407154:	bl	401b00 <log_assert_failed_realm@plt>
  407158:	ldr	x0, [sp, #24]
  40715c:	ldr	x1, [x0, #8]
  407160:	ldr	x0, [sp, #24]
  407164:	ldr	x0, [x0]
  407168:	mov	x3, x0
  40716c:	mov	x2, x1
  407170:	adrp	x0, 407000 <network_dump+0x318>
  407174:	add	x1, x0, #0xb40
  407178:	ldr	x0, [sp, #16]
  40717c:	bl	401a90 <fprintf@plt>
  407180:	ldr	x0, [sp, #24]
  407184:	ldr	w0, [x0, #16]
  407188:	cmp	w0, #0x0
  40718c:	b.eq	4071ac <netdev_dump+0xec>  // b.none
  407190:	ldr	x0, [sp, #24]
  407194:	ldr	w0, [x0, #16]
  407198:	mov	w2, w0
  40719c:	adrp	x0, 407000 <network_dump+0x318>
  4071a0:	add	x1, x0, #0xaa0
  4071a4:	ldr	x0, [sp, #16]
  4071a8:	bl	401a90 <fprintf@plt>
  4071ac:	nop
  4071b0:	ldp	x29, x30, [sp], #32
  4071b4:	ret

00000000004071b8 <link_dump>:
  4071b8:	stp	x29, x30, [sp, #-64]!
  4071bc:	mov	x29, sp
  4071c0:	str	x0, [sp, #24]
  4071c4:	str	x1, [sp, #16]
  4071c8:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4071cc:	add	x0, x0, #0xb90
  4071d0:	ldr	x1, [x0]
  4071d4:	str	x1, [sp, #56]
  4071d8:	mov	x1, #0x0                   	// #0
  4071dc:	ldr	x0, [sp, #24]
  4071e0:	cmp	x0, #0x0
  4071e4:	cset	w0, eq  // eq = none
  4071e8:	and	w0, w0, #0xff
  4071ec:	and	x0, x0, #0xff
  4071f0:	cmp	x0, #0x0
  4071f4:	b.eq	407220 <link_dump+0x68>  // b.none
  4071f8:	adrp	x0, 407000 <network_dump+0x318>
  4071fc:	add	x1, x0, #0x8a3
  407200:	adrp	x0, 407000 <network_dump+0x318>
  407204:	add	x4, x0, #0xd30
  407208:	mov	w3, #0x467                 	// #1127
  40720c:	mov	x2, x1
  407210:	adrp	x0, 407000 <network_dump+0x318>
  407214:	add	x1, x0, #0xb60
  407218:	mov	w0, #0x0                   	// #0
  40721c:	bl	401b00 <log_assert_failed_realm@plt>
  407220:	ldr	x0, [sp, #16]
  407224:	cmp	x0, #0x0
  407228:	cset	w0, eq  // eq = none
  40722c:	and	w0, w0, #0xff
  407230:	and	x0, x0, #0xff
  407234:	cmp	x0, #0x0
  407238:	b.eq	407264 <link_dump+0xac>  // b.none
  40723c:	adrp	x0, 407000 <network_dump+0x318>
  407240:	add	x1, x0, #0x8a3
  407244:	adrp	x0, 407000 <network_dump+0x318>
  407248:	add	x4, x0, #0xd30
  40724c:	mov	w3, #0x468                 	// #1128
  407250:	mov	x2, x1
  407254:	adrp	x0, 407000 <network_dump+0x318>
  407258:	add	x1, x0, #0xa58
  40725c:	mov	w0, #0x0                   	// #0
  407260:	bl	401b00 <log_assert_failed_realm@plt>
  407264:	ldr	x3, [sp, #16]
  407268:	mov	x2, #0x8                   	// #8
  40726c:	mov	x1, #0x1                   	// #1
  407270:	adrp	x0, 407000 <network_dump+0x318>
  407274:	add	x0, x0, #0xb68
  407278:	bl	401d10 <fwrite@plt>
  40727c:	ldr	x0, [sp, #24]
  407280:	add	x0, x0, #0x8
  407284:	bl	403118 <ether_addr_is_null>
  407288:	and	w0, w0, #0xff
  40728c:	eor	w0, w0, #0x1
  407290:	and	w0, w0, #0xff
  407294:	cmp	w0, #0x0
  407298:	b.eq	4072c0 <link_dump+0x108>  // b.none
  40729c:	ldr	x0, [sp, #24]
  4072a0:	add	x0, x0, #0x8
  4072a4:	add	x1, sp, #0x20
  4072a8:	bl	401d60 <ether_addr_to_string@plt>
  4072ac:	mov	x2, x0
  4072b0:	adrp	x0, 407000 <network_dump+0x318>
  4072b4:	add	x1, x0, #0xa90
  4072b8:	ldr	x0, [sp, #16]
  4072bc:	bl	401a90 <fprintf@plt>
  4072c0:	ldr	x0, [sp, #24]
  4072c4:	ldr	x0, [x0]
  4072c8:	mov	x2, x0
  4072cc:	adrp	x0, 407000 <network_dump+0x318>
  4072d0:	add	x1, x0, #0xb78
  4072d4:	ldr	x0, [sp, #16]
  4072d8:	bl	401a90 <fprintf@plt>
  4072dc:	nop
  4072e0:	adrp	x0, 418000 <__FRAME_END__+0xf4b0>
  4072e4:	add	x0, x0, #0xb90
  4072e8:	ldr	x1, [sp, #56]
  4072ec:	ldr	x0, [x0]
  4072f0:	eor	x0, x1, x0
  4072f4:	cmp	x0, #0x0
  4072f8:	b.eq	407300 <link_dump+0x148>  // b.none
  4072fc:	bl	401bb0 <__stack_chk_fail@plt>
  407300:	ldp	x29, x30, [sp], #64
  407304:	ret

0000000000407308 <__libc_csu_init>:
  407308:	stp	x29, x30, [sp, #-64]!
  40730c:	mov	x29, sp
  407310:	stp	x19, x20, [sp, #16]
  407314:	adrp	x20, 418000 <__FRAME_END__+0xf4b0>
  407318:	add	x20, x20, #0xb88
  40731c:	stp	x21, x22, [sp, #32]
  407320:	adrp	x21, 418000 <__FRAME_END__+0xf4b0>
  407324:	add	x21, x21, #0xb80
  407328:	sub	x20, x20, x21
  40732c:	mov	w22, w0
  407330:	stp	x23, x24, [sp, #48]
  407334:	mov	x23, x1
  407338:	mov	x24, x2
  40733c:	bl	401980 <_init>
  407340:	cmp	xzr, x20, asr #3
  407344:	b.eq	407370 <__libc_csu_init+0x68>  // b.none
  407348:	asr	x20, x20, #3
  40734c:	mov	x19, #0x0                   	// #0
  407350:	ldr	x3, [x21, x19, lsl #3]
  407354:	mov	x2, x24
  407358:	add	x19, x19, #0x1
  40735c:	mov	x1, x23
  407360:	mov	w0, w22
  407364:	blr	x3
  407368:	cmp	x20, x19
  40736c:	b.ne	407350 <__libc_csu_init+0x48>  // b.any
  407370:	ldp	x19, x20, [sp, #16]
  407374:	ldp	x21, x22, [sp, #32]
  407378:	ldp	x23, x24, [sp, #48]
  40737c:	ldp	x29, x30, [sp], #64
  407380:	ret
  407384:	nop

0000000000407388 <__libc_csu_fini>:
  407388:	ret

Disassembly of section .fini:

000000000040738c <_fini>:
  40738c:	stp	x29, x30, [sp, #-16]!
  407390:	mov	x29, sp
  407394:	ldp	x29, x30, [sp], #16
  407398:	ret
