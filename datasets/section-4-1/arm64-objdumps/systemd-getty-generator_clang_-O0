
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-getty-generator_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400ee8 <_init>:
  400ee8:	stp	x29, x30, [sp, #-16]!
  400eec:	mov	x29, sp
  400ef0:	bl	401180 <call_weak_fn>
  400ef4:	ldp	x29, x30, [sp], #16
  400ef8:	ret

Disassembly of section .plt:

0000000000400f00 <__libc_start_main@plt-0x20>:
  400f00:	stp	x16, x30, [sp, #-16]!
  400f04:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400f08:	ldr	x17, [x16, #3824]
  400f0c:	add	x16, x16, #0xef0
  400f10:	br	x17
  400f14:	nop
  400f18:	nop
  400f1c:	nop

0000000000400f20 <__libc_start_main@plt>:
  400f20:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400f24:	ldr	x17, [x16, #3832]
  400f28:	add	x16, x16, #0xef8
  400f2c:	br	x17

0000000000400f30 <abort@plt>:
  400f30:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400f34:	ldr	x17, [x16, #3840]
  400f38:	add	x16, x16, #0xf00
  400f3c:	br	x17

0000000000400f40 <__gmon_start__@plt>:
  400f40:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400f44:	ldr	x17, [x16, #3848]
  400f48:	add	x16, x16, #0xf08
  400f4c:	br	x17

0000000000400f50 <log_setup_generator@plt>:
  400f50:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400f54:	ldr	x17, [x16, #3856]
  400f58:	add	x16, x16, #0xf10
  400f5c:	br	x17

0000000000400f60 <log_get_max_level_realm@plt>:
  400f60:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400f64:	ldr	x17, [x16, #3864]
  400f68:	add	x16, x16, #0xf18
  400f6c:	br	x17

0000000000400f70 <log_internal_realm@plt>:
  400f70:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400f74:	ldr	x17, [x16, #3872]
  400f78:	add	x16, x16, #0xf20
  400f7c:	br	x17

0000000000400f80 <abs@plt>:
  400f80:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400f84:	ldr	x17, [x16, #3880]
  400f88:	add	x16, x16, #0xf28
  400f8c:	br	x17

0000000000400f90 <ask_password_agent_close@plt>:
  400f90:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400f94:	ldr	x17, [x16, #3888]
  400f98:	add	x16, x16, #0xf30
  400f9c:	br	x17

0000000000400fa0 <polkit_agent_close@plt>:
  400fa0:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400fa4:	ldr	x17, [x16, #3896]
  400fa8:	add	x16, x16, #0xf38
  400fac:	br	x17

0000000000400fb0 <pager_close@plt>:
  400fb0:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400fb4:	ldr	x17, [x16, #3904]
  400fb8:	add	x16, x16, #0xf40
  400fbc:	br	x17

0000000000400fc0 <mac_selinux_finish@plt>:
  400fc0:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400fc4:	ldr	x17, [x16, #3912]
  400fc8:	add	x16, x16, #0xf48
  400fcc:	br	x17

0000000000400fd0 <log_assert_failed_realm@plt>:
  400fd0:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400fd4:	ldr	x17, [x16, #3920]
  400fd8:	add	x16, x16, #0xf50
  400fdc:	br	x17

0000000000400fe0 <detect_container@plt>:
  400fe0:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400fe4:	ldr	x17, [x16, #3928]
  400fe8:	add	x16, x16, #0xf58
  400fec:	br	x17

0000000000400ff0 <getenv_for_pid@plt>:
  400ff0:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  400ff4:	ldr	x17, [x16, #3936]
  400ff8:	add	x16, x16, #0xf60
  400ffc:	br	x17

0000000000401000 <split@plt>:
  401000:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  401004:	ldr	x17, [x16, #3944]
  401008:	add	x16, x16, #0xf68
  40100c:	br	x17

0000000000401010 <memcpy@plt>:
  401010:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  401014:	ldr	x17, [x16, #3952]
  401018:	add	x16, x16, #0xf70
  40101c:	br	x17

0000000000401020 <path_startswith@plt>:
  401020:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  401024:	ldr	x17, [x16, #3960]
  401028:	add	x16, x16, #0xf78
  40102c:	br	x17

0000000000401030 <read_one_line_file@plt>:
  401030:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  401034:	ldr	x17, [x16, #3968]
  401038:	add	x16, x16, #0xf80
  40103c:	br	x17

0000000000401040 <strndup@plt>:
  401040:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  401044:	ldr	x17, [x16, #3976]
  401048:	add	x16, x16, #0xf88
  40104c:	br	x17

0000000000401050 <log_oom_internal@plt>:
  401050:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  401054:	ldr	x17, [x16, #3984]
  401058:	add	x16, x16, #0xf90
  40105c:	br	x17

0000000000401060 <tty_is_vc@plt>:
  401060:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  401064:	ldr	x17, [x16, #3992]
  401068:	add	x16, x16, #0xf98
  40106c:	br	x17

0000000000401070 <path_join_internal@plt>:
  401070:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  401074:	ldr	x17, [x16, #4000]
  401078:	add	x16, x16, #0xfa0
  40107c:	br	x17

0000000000401080 <access@plt>:
  401080:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  401084:	ldr	x17, [x16, #4008]
  401088:	add	x16, x16, #0xfa8
  40108c:	br	x17

0000000000401090 <free@plt>:
  401090:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  401094:	ldr	x17, [x16, #4016]
  401098:	add	x16, x16, #0xfb0
  40109c:	br	x17

00000000004010a0 <strlen@plt>:
  4010a0:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  4010a4:	ldr	x17, [x16, #4024]
  4010a8:	add	x16, x16, #0xfb8
  4010ac:	br	x17

00000000004010b0 <stpcpy@plt>:
  4010b0:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  4010b4:	ldr	x17, [x16, #4032]
  4010b8:	add	x16, x16, #0xfc0
  4010bc:	br	x17

00000000004010c0 <mkdir_parents_label@plt>:
  4010c0:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  4010c4:	ldr	x17, [x16, #4040]
  4010c8:	add	x16, x16, #0xfc8
  4010cc:	br	x17

00000000004010d0 <symlink@plt>:
  4010d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  4010d4:	ldr	x17, [x16, #4048]
  4010d8:	add	x16, x16, #0xfd0
  4010dc:	br	x17

00000000004010e0 <__errno_location@plt>:
  4010e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  4010e4:	ldr	x17, [x16, #4056]
  4010e8:	add	x16, x16, #0xfd8
  4010ec:	br	x17

00000000004010f0 <unit_name_from_path_instance@plt>:
  4010f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  4010f4:	ldr	x17, [x16, #4064]
  4010f8:	add	x16, x16, #0xfe0
  4010fc:	br	x17

0000000000401100 <open64@plt>:
  401100:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  401104:	ldr	x17, [x16, #4072]
  401108:	add	x16, x16, #0xfe8
  40110c:	br	x17

0000000000401110 <isatty@plt>:
  401110:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  401114:	ldr	x17, [x16, #4080]
  401118:	add	x16, x16, #0xff0
  40111c:	br	x17

0000000000401120 <safe_close@plt>:
  401120:	adrp	x16, 41f000 <__FRAME_END__+0x1c128>
  401124:	ldr	x17, [x16, #4088]
  401128:	add	x16, x16, #0xff8
  40112c:	br	x17

Disassembly of section .text:

0000000000401130 <_start>:
  401130:	mov	x29, #0x0                   	// #0
  401134:	mov	x30, #0x0                   	// #0
  401138:	mov	x5, x0
  40113c:	ldr	x1, [sp]
  401140:	add	x2, sp, #0x8
  401144:	mov	x6, sp
  401148:	movz	x0, #0x0, lsl #48
  40114c:	movk	x0, #0x0, lsl #32
  401150:	movk	x0, #0x40, lsl #16
  401154:	movk	x0, #0x12f8
  401158:	movz	x3, #0x0, lsl #48
  40115c:	movk	x3, #0x0, lsl #32
  401160:	movk	x3, #0x40, lsl #16
  401164:	movk	x3, #0x2998
  401168:	movz	x4, #0x0, lsl #48
  40116c:	movk	x4, #0x0, lsl #32
  401170:	movk	x4, #0x40, lsl #16
  401174:	movk	x4, #0x2a18
  401178:	bl	400f20 <__libc_start_main@plt>
  40117c:	bl	400f30 <abort@plt>

0000000000401180 <call_weak_fn>:
  401180:	adrp	x0, 41f000 <__FRAME_END__+0x1c128>
  401184:	ldr	x0, [x0, #3784]
  401188:	cbz	x0, 401190 <call_weak_fn+0x10>
  40118c:	b	400f40 <__gmon_start__@plt>
  401190:	ret

0000000000401194 <deregister_tm_clones>:
  401194:	stp	x29, x30, [sp, #-32]!
  401198:	mov	x29, sp
  40119c:	adrp	x0, 420000 <completed.8445>
  4011a0:	add	x0, x0, #0x0
  4011a4:	str	x0, [sp, #24]
  4011a8:	ldr	x0, [sp, #24]
  4011ac:	str	x0, [sp, #24]
  4011b0:	ldr	x1, [sp, #24]
  4011b4:	adrp	x0, 420000 <completed.8445>
  4011b8:	add	x0, x0, #0x0
  4011bc:	cmp	x1, x0
  4011c0:	b.eq	4011fc <deregister_tm_clones+0x68>  // b.none
  4011c4:	adrp	x0, 402000 <add_symlink+0x478>
  4011c8:	add	x0, x0, #0xa30
  4011cc:	ldr	x0, [x0]
  4011d0:	str	x0, [sp, #16]
  4011d4:	ldr	x0, [sp, #16]
  4011d8:	str	x0, [sp, #16]
  4011dc:	ldr	x0, [sp, #16]
  4011e0:	cmp	x0, #0x0
  4011e4:	b.eq	401200 <deregister_tm_clones+0x6c>  // b.none
  4011e8:	ldr	x1, [sp, #16]
  4011ec:	adrp	x0, 420000 <completed.8445>
  4011f0:	add	x0, x0, #0x0
  4011f4:	blr	x1
  4011f8:	b	401200 <deregister_tm_clones+0x6c>
  4011fc:	nop
  401200:	ldp	x29, x30, [sp], #32
  401204:	ret

0000000000401208 <register_tm_clones>:
  401208:	stp	x29, x30, [sp, #-48]!
  40120c:	mov	x29, sp
  401210:	adrp	x0, 420000 <completed.8445>
  401214:	add	x0, x0, #0x0
  401218:	str	x0, [sp, #40]
  40121c:	ldr	x0, [sp, #40]
  401220:	str	x0, [sp, #40]
  401224:	ldr	x1, [sp, #40]
  401228:	adrp	x0, 420000 <completed.8445>
  40122c:	add	x0, x0, #0x0
  401230:	sub	x0, x1, x0
  401234:	asr	x0, x0, #3
  401238:	lsr	x1, x0, #63
  40123c:	add	x0, x1, x0
  401240:	asr	x0, x0, #1
  401244:	str	x0, [sp, #32]
  401248:	ldr	x0, [sp, #32]
  40124c:	cmp	x0, #0x0
  401250:	b.eq	401290 <register_tm_clones+0x88>  // b.none
  401254:	adrp	x0, 402000 <add_symlink+0x478>
  401258:	add	x0, x0, #0xa38
  40125c:	ldr	x0, [x0]
  401260:	str	x0, [sp, #24]
  401264:	ldr	x0, [sp, #24]
  401268:	str	x0, [sp, #24]
  40126c:	ldr	x0, [sp, #24]
  401270:	cmp	x0, #0x0
  401274:	b.eq	401294 <register_tm_clones+0x8c>  // b.none
  401278:	ldr	x2, [sp, #24]
  40127c:	ldr	x1, [sp, #32]
  401280:	adrp	x0, 420000 <completed.8445>
  401284:	add	x0, x0, #0x0
  401288:	blr	x2
  40128c:	b	401294 <register_tm_clones+0x8c>
  401290:	nop
  401294:	ldp	x29, x30, [sp], #48
  401298:	ret

000000000040129c <__do_global_dtors_aux>:
  40129c:	stp	x29, x30, [sp, #-16]!
  4012a0:	mov	x29, sp
  4012a4:	adrp	x0, 420000 <completed.8445>
  4012a8:	add	x0, x0, #0x0
  4012ac:	ldrb	w0, [x0]
  4012b0:	and	x0, x0, #0xff
  4012b4:	cmp	x0, #0x0
  4012b8:	b.ne	4012d4 <__do_global_dtors_aux+0x38>  // b.any
  4012bc:	bl	401194 <deregister_tm_clones>
  4012c0:	adrp	x0, 420000 <completed.8445>
  4012c4:	add	x0, x0, #0x0
  4012c8:	mov	w1, #0x1                   	// #1
  4012cc:	strb	w1, [x0]
  4012d0:	b	4012d8 <__do_global_dtors_aux+0x3c>
  4012d4:	nop
  4012d8:	ldp	x29, x30, [sp], #16
  4012dc:	ret

00000000004012e0 <frame_dummy>:
  4012e0:	stp	x29, x30, [sp, #-16]!
  4012e4:	mov	x29, sp
  4012e8:	bl	401208 <register_tm_clones>
  4012ec:	nop
  4012f0:	ldp	x29, x30, [sp], #16
  4012f4:	ret

00000000004012f8 <main>:
  4012f8:	sub	sp, sp, #0x80
  4012fc:	stp	x29, x30, [sp, #112]
  401300:	add	x29, sp, #0x70
  401304:	adrp	x8, 402000 <add_symlink+0x478>
  401308:	add	x8, x8, #0xa40
  40130c:	add	x2, x8, #0x3
  401310:	adrp	x8, 402000 <add_symlink+0x478>
  401314:	add	x8, x8, #0xa9a
  401318:	stur	wzr, [x29, #-4]
  40131c:	stur	w0, [x29, #-8]
  401320:	stur	x1, [x29, #-16]
  401324:	ldur	w0, [x29, #-8]
  401328:	ldur	x1, [x29, #-16]
  40132c:	stur	x2, [x29, #-48]
  401330:	str	x8, [sp, #56]
  401334:	bl	4014b0 <save_argc_argv>
  401338:	bl	400f50 <log_setup_generator@plt>
  40133c:	ldur	w9, [x29, #-8]
  401340:	cmp	w9, #0x1
  401344:	b.le	4013e0 <main+0xe8>
  401348:	ldur	w8, [x29, #-8]
  40134c:	cmp	w8, #0x4
  401350:	b.eq	4013e0 <main+0xe8>  // b.none
  401354:	mov	w8, #0x3                   	// #3
  401358:	stur	w8, [x29, #-24]
  40135c:	mov	w8, #0x16                  	// #22
  401360:	movk	w8, #0x4000, lsl #16
  401364:	stur	w8, [x29, #-28]
  401368:	stur	wzr, [x29, #-32]
  40136c:	ldur	w0, [x29, #-32]
  401370:	bl	400f60 <log_get_max_level_realm@plt>
  401374:	ldur	w8, [x29, #-24]
  401378:	and	w8, w8, #0x7
  40137c:	cmp	w0, w8
  401380:	b.lt	4013b8 <main+0xc0>  // b.tstop
  401384:	ldur	w8, [x29, #-32]
  401388:	ldur	w9, [x29, #-24]
  40138c:	orr	w0, w9, w8, lsl #10
  401390:	ldur	w1, [x29, #-28]
  401394:	ldur	x2, [x29, #-48]
  401398:	mov	w3, #0xd0                  	// #208
  40139c:	adrp	x4, 402000 <add_symlink+0x478>
  4013a0:	add	x4, x4, #0xa69
  4013a4:	adrp	x5, 402000 <add_symlink+0x478>
  4013a8:	add	x5, x5, #0xa6e
  4013ac:	bl	400f70 <log_internal_realm@plt>
  4013b0:	str	w0, [sp, #52]
  4013b4:	b	4013cc <main+0xd4>
  4013b8:	ldur	w0, [x29, #-28]
  4013bc:	bl	400f80 <abs@plt>
  4013c0:	mov	w8, wzr
  4013c4:	subs	w8, w8, w0, uxtb
  4013c8:	str	w8, [sp, #52]
  4013cc:	ldr	w8, [sp, #52]
  4013d0:	stur	w8, [x29, #-36]
  4013d4:	ldur	w8, [x29, #-36]
  4013d8:	stur	w8, [x29, #-4]
  4013dc:	b	4014a0 <main+0x1a8>
  4013e0:	ldur	w8, [x29, #-8]
  4013e4:	cmp	w8, #0x1
  4013e8:	b.le	4013fc <main+0x104>
  4013ec:	ldur	x8, [x29, #-16]
  4013f0:	ldr	x8, [x8, #8]
  4013f4:	str	x8, [sp, #40]
  4013f8:	b	401404 <main+0x10c>
  4013fc:	ldr	x8, [sp, #56]
  401400:	str	x8, [sp, #40]
  401404:	ldr	x8, [sp, #40]
  401408:	ldur	w9, [x29, #-8]
  40140c:	cmp	w9, #0x1
  401410:	str	x8, [sp, #32]
  401414:	b.le	401428 <main+0x130>
  401418:	ldur	x8, [x29, #-16]
  40141c:	ldr	x8, [x8, #16]
  401420:	str	x8, [sp, #24]
  401424:	b	401430 <main+0x138>
  401428:	ldr	x8, [sp, #56]
  40142c:	str	x8, [sp, #24]
  401430:	ldr	x8, [sp, #24]
  401434:	ldur	w9, [x29, #-8]
  401438:	cmp	w9, #0x1
  40143c:	str	x8, [sp, #16]
  401440:	b.le	401454 <main+0x15c>
  401444:	ldur	x8, [x29, #-16]
  401448:	ldr	x8, [x8, #24]
  40144c:	str	x8, [sp, #8]
  401450:	b	40145c <main+0x164>
  401454:	ldr	x8, [sp, #56]
  401458:	str	x8, [sp, #8]
  40145c:	ldr	x8, [sp, #8]
  401460:	ldr	x0, [sp, #32]
  401464:	ldr	x1, [sp, #16]
  401468:	mov	x2, x8
  40146c:	bl	4014e4 <run>
  401470:	stur	w0, [x29, #-20]
  401474:	bl	400f90 <ask_password_agent_close@plt>
  401478:	bl	400fa0 <polkit_agent_close@plt>
  40147c:	bl	400fb0 <pager_close@plt>
  401480:	bl	400fc0 <mac_selinux_finish@plt>
  401484:	bl	401ae0 <static_destruct>
  401488:	ldur	w9, [x29, #-20]
  40148c:	mov	w10, wzr
  401490:	mov	w11, #0x1                   	// #1
  401494:	cmp	w9, #0x0
  401498:	csel	w9, w11, w10, lt  // lt = tstop
  40149c:	stur	w9, [x29, #-4]
  4014a0:	ldur	w0, [x29, #-4]
  4014a4:	ldp	x29, x30, [sp, #112]
  4014a8:	add	sp, sp, #0x80
  4014ac:	ret

00000000004014b0 <save_argc_argv>:
  4014b0:	sub	sp, sp, #0x10
  4014b4:	adrp	x8, 420000 <completed.8445>
  4014b8:	add	x8, x8, #0x10
  4014bc:	adrp	x9, 420000 <completed.8445>
  4014c0:	add	x9, x9, #0x18
  4014c4:	str	w0, [sp, #12]
  4014c8:	str	x1, [sp]
  4014cc:	ldr	w10, [sp, #12]
  4014d0:	str	w10, [x8]
  4014d4:	ldr	x8, [sp]
  4014d8:	str	x8, [x9]
  4014dc:	add	sp, sp, #0x10
  4014e0:	ret

00000000004014e4 <run>:
  4014e4:	stp	x29, x30, [sp, #-32]!
  4014e8:	str	x28, [sp, #16]
  4014ec:	mov	x29, sp
  4014f0:	sub	sp, sp, #0x130
  4014f4:	mov	x8, xzr
  4014f8:	adrp	x9, 402000 <add_symlink+0x478>
  4014fc:	add	x9, x9, #0xb2e
  401500:	adrp	x10, 402000 <add_symlink+0x478>
  401504:	add	x10, x10, #0xa40
  401508:	add	x10, x10, #0x3
  40150c:	stur	x0, [x29, #-16]
  401510:	stur	x1, [x29, #-24]
  401514:	stur	x2, [x29, #-32]
  401518:	stur	x8, [x29, #-40]
  40151c:	stur	x9, [x29, #-256]
  401520:	sub	x8, x29, #0x8
  401524:	stur	x10, [x8, #-256]
  401528:	ldur	x8, [x29, #-16]
  40152c:	adrp	x9, 420000 <completed.8445>
  401530:	add	x9, x9, #0x8
  401534:	str	x8, [x9]
  401538:	cmp	x8, #0x0
  40153c:	cset	w10, ne  // ne = any
  401540:	mov	w11, #0x1                   	// #1
  401544:	eor	w10, w10, #0x1
  401548:	eor	w10, w10, w11
  40154c:	eor	w10, w10, w11
  401550:	and	w10, w10, #0x1
  401554:	mov	w0, w10
  401558:	sxtw	x8, w0
  40155c:	cbz	x8, 401588 <run+0xa4>
  401560:	mov	w8, wzr
  401564:	mov	w0, w8
  401568:	adrp	x1, 402000 <add_symlink+0x478>
  40156c:	add	x1, x1, #0xa9f
  401570:	sub	x8, x29, #0x8
  401574:	ldur	x2, [x8, #-256]
  401578:	mov	w3, #0x6b                  	// #107
  40157c:	adrp	x4, 402000 <add_symlink+0x478>
  401580:	add	x4, x4, #0xaaf
  401584:	bl	400fd0 <log_assert_failed_realm@plt>
  401588:	bl	400fe0 <detect_container@plt>
  40158c:	cmp	w0, #0x0
  401590:	cset	w8, le
  401594:	tbnz	w8, #0, 401804 <run+0x320>
  401598:	mov	x8, xzr
  40159c:	stur	x8, [x29, #-64]
  4015a0:	mov	w9, #0x7                   	// #7
  4015a4:	stur	w9, [x29, #-68]
  4015a8:	stur	wzr, [x29, #-72]
  4015ac:	stur	wzr, [x29, #-76]
  4015b0:	ldur	w0, [x29, #-76]
  4015b4:	bl	400f60 <log_get_max_level_realm@plt>
  4015b8:	ldur	w9, [x29, #-68]
  4015bc:	and	w9, w9, #0x7
  4015c0:	cmp	w0, w9
  4015c4:	b.lt	401604 <run+0x120>  // b.tstop
  4015c8:	ldur	w8, [x29, #-76]
  4015cc:	ldur	w9, [x29, #-68]
  4015d0:	orr	w0, w9, w8, lsl #10
  4015d4:	ldur	w1, [x29, #-72]
  4015d8:	sub	x8, x29, #0x8
  4015dc:	ldur	x2, [x8, #-256]
  4015e0:	mov	w3, #0x70                  	// #112
  4015e4:	adrp	x4, 402000 <add_symlink+0x478>
  4015e8:	add	x4, x4, #0xae1
  4015ec:	adrp	x5, 402000 <add_symlink+0x478>
  4015f0:	add	x5, x5, #0xae5
  4015f4:	bl	400f70 <log_internal_realm@plt>
  4015f8:	sub	x8, x29, #0xc
  4015fc:	stur	w0, [x8, #-256]
  401600:	b	40161c <run+0x138>
  401604:	ldur	w0, [x29, #-72]
  401608:	bl	400f80 <abs@plt>
  40160c:	mov	w8, wzr
  401610:	subs	w8, w8, w0, uxtb
  401614:	sub	x9, x29, #0xc
  401618:	stur	w8, [x9, #-256]
  40161c:	sub	x8, x29, #0xc
  401620:	ldur	w8, [x8, #-256]
  401624:	stur	w8, [x29, #-80]
  401628:	adrp	x9, 402000 <add_symlink+0x478>
  40162c:	add	x9, x9, #0xb09
  401630:	mov	x0, x9
  401634:	mov	x1, x9
  401638:	bl	401b88 <add_symlink>
  40163c:	stur	w0, [x29, #-52]
  401640:	ldur	w8, [x29, #-52]
  401644:	cmp	w8, #0x0
  401648:	cset	w8, ge  // ge = tcont
  40164c:	tbnz	w8, #0, 401664 <run+0x180>
  401650:	ldur	w8, [x29, #-52]
  401654:	stur	w8, [x29, #-4]
  401658:	mov	w8, #0x1                   	// #1
  40165c:	stur	w8, [x29, #-84]
  401660:	b	4017f8 <run+0x314>
  401664:	mov	w0, #0x1                   	// #1
  401668:	adrp	x1, 402000 <add_symlink+0x478>
  40166c:	add	x1, x1, #0xb1f
  401670:	sub	x2, x29, #0x40
  401674:	bl	400ff0 <getenv_for_pid@plt>
  401678:	stur	w0, [x29, #-52]
  40167c:	ldur	w8, [x29, #-52]
  401680:	cmp	w8, #0x0
  401684:	cset	w8, le
  401688:	tbnz	w8, #0, 4017ec <run+0x308>
  40168c:	ldur	x8, [x29, #-64]
  401690:	sub	x0, x29, #0x68
  401694:	stur	x8, [x29, #-104]
  401698:	sub	x1, x29, #0x70
  40169c:	ldur	x2, [x29, #-256]
  4016a0:	mov	w9, wzr
  4016a4:	mov	w3, w9
  4016a8:	bl	401000 <split@plt>
  4016ac:	stur	x0, [x29, #-96]
  4016b0:	ldur	x8, [x29, #-96]
  4016b4:	cbz	x8, 4017ec <run+0x308>
  4016b8:	ldur	x8, [x29, #-112]
  4016bc:	mov	x9, #0x1                   	// #1
  4016c0:	add	x8, x8, #0x1
  4016c4:	mov	x10, sp
  4016c8:	stur	x10, [x29, #-128]
  4016cc:	mul	x9, x8, x9
  4016d0:	add	x9, x9, #0xf
  4016d4:	and	x9, x9, #0xfffffffffffffff0
  4016d8:	mov	x10, sp
  4016dc:	subs	x9, x10, x9
  4016e0:	mov	sp, x9
  4016e4:	stur	x8, [x29, #-136]
  4016e8:	ldur	x1, [x29, #-96]
  4016ec:	ldur	x2, [x29, #-112]
  4016f0:	mov	x0, x9
  4016f4:	sub	x8, x29, #0x18
  4016f8:	stur	x9, [x8, #-256]
  4016fc:	bl	401010 <memcpy@plt>
  401700:	ldur	x8, [x29, #-112]
  401704:	sub	x9, x29, #0x18
  401708:	ldur	x9, [x9, #-256]
  40170c:	add	x8, x9, x8
  401710:	mov	w11, #0x0                   	// #0
  401714:	strb	w11, [x8]
  401718:	mov	x0, x9
  40171c:	adrp	x1, 402000 <add_symlink+0x478>
  401720:	add	x1, x1, #0xb33
  401724:	bl	401020 <path_startswith@plt>
  401728:	stur	x0, [x29, #-120]
  40172c:	ldur	x8, [x29, #-120]
  401730:	cbnz	x8, 401740 <run+0x25c>
  401734:	sub	x8, x29, #0x18
  401738:	ldur	x8, [x8, #-256]
  40173c:	stur	x8, [x29, #-120]
  401740:	ldur	x0, [x29, #-120]
  401744:	adrp	x1, 402000 <add_symlink+0x478>
  401748:	add	x1, x1, #0xb39
  40174c:	bl	401020 <path_startswith@plt>
  401750:	stur	x0, [x29, #-120]
  401754:	ldur	x8, [x29, #-120]
  401758:	cbnz	x8, 401768 <run+0x284>
  40175c:	mov	w8, #0x6                   	// #6
  401760:	stur	w8, [x29, #-84]
  401764:	b	40179c <run+0x2b8>
  401768:	ldur	x0, [x29, #-120]
  40176c:	bl	402184 <add_container_getty>
  401770:	stur	w0, [x29, #-52]
  401774:	ldur	w8, [x29, #-52]
  401778:	cmp	w8, #0x0
  40177c:	cset	w8, ge  // ge = tcont
  401780:	tbnz	w8, #0, 401798 <run+0x2b4>
  401784:	ldur	w8, [x29, #-52]
  401788:	stur	w8, [x29, #-4]
  40178c:	mov	w8, #0x1                   	// #1
  401790:	stur	w8, [x29, #-84]
  401794:	b	40179c <run+0x2b8>
  401798:	stur	wzr, [x29, #-84]
  40179c:	ldur	x8, [x29, #-128]
  4017a0:	mov	sp, x8
  4017a4:	ldur	w9, [x29, #-84]
  4017a8:	sub	x8, x29, #0x1c
  4017ac:	stur	w9, [x8, #-256]
  4017b0:	cbz	w9, 4017cc <run+0x2e8>
  4017b4:	b	4017b8 <run+0x2d4>
  4017b8:	sub	x8, x29, #0x1c
  4017bc:	ldur	w8, [x8, #-256]
  4017c0:	cmp	w8, #0x6
  4017c4:	b.eq	4017cc <run+0x2e8>  // b.none
  4017c8:	b	4017f8 <run+0x314>
  4017cc:	sub	x0, x29, #0x68
  4017d0:	sub	x1, x29, #0x70
  4017d4:	ldur	x2, [x29, #-256]
  4017d8:	mov	w8, wzr
  4017dc:	mov	w3, w8
  4017e0:	bl	401000 <split@plt>
  4017e4:	stur	x0, [x29, #-96]
  4017e8:	b	4016b0 <run+0x1cc>
  4017ec:	stur	wzr, [x29, #-4]
  4017f0:	mov	w8, #0x1                   	// #1
  4017f4:	stur	w8, [x29, #-84]
  4017f8:	sub	x0, x29, #0x40
  4017fc:	bl	401b60 <freep>
  401800:	b	401ac4 <run+0x5e0>
  401804:	adrp	x0, 402000 <add_symlink+0x478>
  401808:	add	x0, x0, #0xb3e
  40180c:	sub	x1, x29, #0x28
  401810:	bl	401030 <read_one_line_file@plt>
  401814:	cmp	w0, #0x0
  401818:	cset	w8, lt  // lt = tstop
  40181c:	tbnz	w8, #0, 401968 <run+0x484>
  401820:	ldur	x8, [x29, #-40]
  401824:	sub	x0, x29, #0x98
  401828:	stur	x8, [x29, #-152]
  40182c:	sub	x1, x29, #0xa0
  401830:	ldur	x2, [x29, #-256]
  401834:	mov	w9, wzr
  401838:	mov	w3, w9
  40183c:	bl	401000 <split@plt>
  401840:	stur	x0, [x29, #-144]
  401844:	ldur	x8, [x29, #-144]
  401848:	cbz	x8, 401968 <run+0x484>
  40184c:	mov	x8, xzr
  401850:	stur	x8, [x29, #-168]
  401854:	ldur	x0, [x29, #-144]
  401858:	ldur	x1, [x29, #-160]
  40185c:	bl	401040 <strndup@plt>
  401860:	stur	x0, [x29, #-168]
  401864:	ldur	x8, [x29, #-168]
  401868:	cbnz	x8, 40189c <run+0x3b8>
  40186c:	mov	w8, wzr
  401870:	mov	w0, w8
  401874:	sub	x8, x29, #0x8
  401878:	ldur	x1, [x8, #-256]
  40187c:	mov	w2, #0xa5                  	// #165
  401880:	adrp	x3, 402000 <add_symlink+0x478>
  401884:	add	x3, x3, #0xae1
  401888:	bl	401050 <log_oom_internal@plt>
  40188c:	stur	w0, [x29, #-4]
  401890:	mov	w8, #0x1                   	// #1
  401894:	stur	w8, [x29, #-84]
  401898:	b	401918 <run+0x434>
  40189c:	ldur	x0, [x29, #-168]
  4018a0:	bl	40236c <isempty>
  4018a4:	tbnz	w0, #0, 4018b8 <run+0x3d4>
  4018a8:	ldur	x0, [x29, #-168]
  4018ac:	bl	401060 <tty_is_vc@plt>
  4018b0:	tbnz	w0, #0, 4018b8 <run+0x3d4>
  4018b4:	b	4018c4 <run+0x3e0>
  4018b8:	mov	w8, #0x9                   	// #9
  4018bc:	stur	w8, [x29, #-84]
  4018c0:	b	401918 <run+0x434>
  4018c4:	ldur	x0, [x29, #-168]
  4018c8:	bl	4023ac <verify_tty>
  4018cc:	cmp	w0, #0x0
  4018d0:	cset	w8, ge  // ge = tcont
  4018d4:	tbnz	w8, #0, 4018e4 <run+0x400>
  4018d8:	mov	w8, #0x9                   	// #9
  4018dc:	stur	w8, [x29, #-84]
  4018e0:	b	401918 <run+0x434>
  4018e4:	ldur	x0, [x29, #-168]
  4018e8:	bl	402690 <add_serial_getty>
  4018ec:	stur	w0, [x29, #-52]
  4018f0:	ldur	w8, [x29, #-52]
  4018f4:	cmp	w8, #0x0
  4018f8:	cset	w8, ge  // ge = tcont
  4018fc:	tbnz	w8, #0, 401914 <run+0x430>
  401900:	ldur	w8, [x29, #-52]
  401904:	stur	w8, [x29, #-4]
  401908:	mov	w8, #0x1                   	// #1
  40190c:	stur	w8, [x29, #-84]
  401910:	b	401918 <run+0x434>
  401914:	stur	wzr, [x29, #-84]
  401918:	sub	x0, x29, #0xa8
  40191c:	bl	401b60 <freep>
  401920:	ldur	w8, [x29, #-84]
  401924:	sub	x9, x29, #0x20
  401928:	stur	w8, [x9, #-256]
  40192c:	cbz	w8, 401948 <run+0x464>
  401930:	b	401934 <run+0x450>
  401934:	sub	x8, x29, #0x20
  401938:	ldur	w8, [x8, #-256]
  40193c:	cmp	w8, #0x9
  401940:	b.eq	401948 <run+0x464>  // b.none
  401944:	b	401ac4 <run+0x5e0>
  401948:	sub	x0, x29, #0x98
  40194c:	sub	x1, x29, #0xa0
  401950:	ldur	x2, [x29, #-256]
  401954:	mov	w8, wzr
  401958:	mov	w3, w8
  40195c:	bl	401000 <split@plt>
  401960:	stur	x0, [x29, #-144]
  401964:	b	401844 <run+0x360>
  401968:	adrp	x8, 402000 <add_symlink+0x478>
  40196c:	add	x8, x8, #0xb5c
  401970:	stur	x8, [x29, #-48]
  401974:	stur	x8, [x29, #-240]
  401978:	ldur	x8, [x29, #-240]
  40197c:	sub	x9, x29, #0xe8
  401980:	stur	x8, [x29, #-232]
  401984:	adrp	x8, 402000 <add_symlink+0x478>
  401988:	add	x8, x8, #0xb61
  40198c:	str	x8, [x9, #8]
  401990:	adrp	x8, 402000 <add_symlink+0x478>
  401994:	add	x8, x8, #0xb66
  401998:	str	x8, [x9, #16]
  40199c:	adrp	x8, 402000 <add_symlink+0x478>
  4019a0:	add	x8, x8, #0xb6c
  4019a4:	str	x8, [x9, #24]
  4019a8:	adrp	x8, 402000 <add_symlink+0x478>
  4019ac:	add	x8, x8, #0xb77
  4019b0:	str	x8, [x9, #32]
  4019b4:	adrp	x8, 402000 <add_symlink+0x478>
  4019b8:	add	x8, x8, #0xb80
  4019bc:	str	x8, [x9, #40]
  4019c0:	mov	x8, xzr
  4019c4:	str	x8, [x9, #48]
  4019c8:	stur	x9, [x29, #-176]
  4019cc:	ldur	x8, [x29, #-48]
  4019d0:	cbz	x8, 401ab8 <run+0x5d4>
  4019d4:	mov	x8, xzr
  4019d8:	stur	x8, [x29, #-248]
  4019dc:	ldur	x1, [x29, #-48]
  4019e0:	adrp	x0, 402000 <add_symlink+0x478>
  4019e4:	add	x0, x0, #0xb8a
  4019e8:	mov	x8, #0xffffffffffffffff    	// #-1
  4019ec:	mov	x2, x8
  4019f0:	bl	401070 <path_join_internal@plt>
  4019f4:	stur	x0, [x29, #-248]
  4019f8:	ldur	x8, [x29, #-248]
  4019fc:	cbnz	x8, 401a14 <run+0x530>
  401a00:	mov	w8, #0xfffffff4            	// #-12
  401a04:	stur	w8, [x29, #-4]
  401a08:	mov	w8, #0x1                   	// #1
  401a0c:	stur	w8, [x29, #-84]
  401a10:	b	401a70 <run+0x58c>
  401a14:	ldur	x0, [x29, #-248]
  401a18:	mov	w8, wzr
  401a1c:	mov	w1, w8
  401a20:	bl	401080 <access@plt>
  401a24:	cmp	w0, #0x0
  401a28:	cset	w8, ge  // ge = tcont
  401a2c:	tbnz	w8, #0, 401a3c <run+0x558>
  401a30:	mov	w8, #0xc                   	// #12
  401a34:	stur	w8, [x29, #-84]
  401a38:	b	401a70 <run+0x58c>
  401a3c:	ldur	x0, [x29, #-48]
  401a40:	bl	402690 <add_serial_getty>
  401a44:	stur	w0, [x29, #-52]
  401a48:	ldur	w8, [x29, #-52]
  401a4c:	cmp	w8, #0x0
  401a50:	cset	w8, ge  // ge = tcont
  401a54:	tbnz	w8, #0, 401a6c <run+0x588>
  401a58:	ldur	w8, [x29, #-52]
  401a5c:	stur	w8, [x29, #-4]
  401a60:	mov	w8, #0x1                   	// #1
  401a64:	stur	w8, [x29, #-84]
  401a68:	b	401a70 <run+0x58c>
  401a6c:	stur	wzr, [x29, #-84]
  401a70:	sub	x0, x29, #0xf8
  401a74:	bl	401b60 <freep>
  401a78:	ldur	w8, [x29, #-84]
  401a7c:	sub	x9, x29, #0x24
  401a80:	stur	w8, [x9, #-256]
  401a84:	cbz	w8, 401aa0 <run+0x5bc>
  401a88:	b	401a8c <run+0x5a8>
  401a8c:	sub	x8, x29, #0x24
  401a90:	ldur	w8, [x8, #-256]
  401a94:	cmp	w8, #0xc
  401a98:	b.eq	401aa0 <run+0x5bc>  // b.none
  401a9c:	b	401ac4 <run+0x5e0>
  401aa0:	ldur	x8, [x29, #-176]
  401aa4:	add	x9, x8, #0x8
  401aa8:	stur	x9, [x29, #-176]
  401aac:	ldr	x8, [x8, #8]
  401ab0:	stur	x8, [x29, #-48]
  401ab4:	b	4019cc <run+0x4e8>
  401ab8:	stur	wzr, [x29, #-4]
  401abc:	mov	w8, #0x1                   	// #1
  401ac0:	stur	w8, [x29, #-84]
  401ac4:	sub	x0, x29, #0x28
  401ac8:	bl	401b60 <freep>
  401acc:	ldur	w0, [x29, #-4]
  401ad0:	mov	sp, x29
  401ad4:	ldr	x28, [sp, #16]
  401ad8:	ldp	x29, x30, [sp], #32
  401adc:	ret

0000000000401ae0 <static_destruct>:
  401ae0:	sub	sp, sp, #0x20
  401ae4:	stp	x29, x30, [sp, #16]
  401ae8:	add	x29, sp, #0x10
  401aec:	adrp	x8, 41f000 <__FRAME_END__+0x1c128>
  401af0:	ldr	x8, [x8, #3792]
  401af4:	str	x8, [sp]
  401af8:	cbnz	x8, 401b00 <static_destruct+0x20>
  401afc:	b	401b54 <static_destruct+0x74>
  401b00:	ldr	x0, [sp]
  401b04:	mov	x1, #0x8                   	// #8
  401b08:	bl	402968 <ALIGN_TO>
  401b0c:	str	x0, [sp, #8]
  401b10:	ldr	x8, [sp, #8]
  401b14:	adrp	x9, 41f000 <__FRAME_END__+0x1c128>
  401b18:	ldr	x9, [x9, #3800]
  401b1c:	cmp	x8, x9
  401b20:	b.cs	401b54 <static_destruct+0x74>  // b.hs, b.nlast
  401b24:	ldr	x8, [sp, #8]
  401b28:	ldr	x8, [x8, #8]
  401b2c:	ldr	x9, [sp, #8]
  401b30:	ldr	x0, [x9]
  401b34:	blr	x8
  401b38:	ldr	x8, [sp, #8]
  401b3c:	add	x8, x8, #0x10
  401b40:	mov	x0, x8
  401b44:	mov	x1, #0x8                   	// #8
  401b48:	bl	402968 <ALIGN_TO>
  401b4c:	str	x0, [sp, #8]
  401b50:	b	401b10 <static_destruct+0x30>
  401b54:	ldp	x29, x30, [sp, #16]
  401b58:	add	sp, sp, #0x20
  401b5c:	ret

0000000000401b60 <freep>:
  401b60:	sub	sp, sp, #0x20
  401b64:	stp	x29, x30, [sp, #16]
  401b68:	add	x29, sp, #0x10
  401b6c:	str	x0, [sp, #8]
  401b70:	ldr	x8, [sp, #8]
  401b74:	ldr	x0, [x8]
  401b78:	bl	401090 <free@plt>
  401b7c:	ldp	x29, x30, [sp, #16]
  401b80:	add	sp, sp, #0x20
  401b84:	ret

0000000000401b88 <add_symlink>:
  401b88:	stp	x29, x30, [sp, #-32]!
  401b8c:	str	x28, [sp, #16]
  401b90:	mov	x29, sp
  401b94:	sub	sp, sp, #0x100
  401b98:	adrp	x8, 402000 <add_symlink+0x478>
  401b9c:	add	x8, x8, #0xa40
  401ba0:	add	x8, x8, #0x3
  401ba4:	adrp	x9, 402000 <add_symlink+0x478>
  401ba8:	add	x9, x9, #0xba2
  401bac:	stur	x0, [x29, #-16]
  401bb0:	stur	x1, [x29, #-24]
  401bb4:	stur	x8, [x29, #-224]
  401bb8:	stur	x9, [x29, #-232]
  401bbc:	ldur	x8, [x29, #-16]
  401bc0:	cmp	x8, #0x0
  401bc4:	cset	w9, ne  // ne = any
  401bc8:	mov	w10, #0x1                   	// #1
  401bcc:	eor	w9, w9, #0x1
  401bd0:	eor	w9, w9, w10
  401bd4:	eor	w9, w9, w10
  401bd8:	and	w9, w9, #0x1
  401bdc:	mov	w0, w9
  401be0:	sxtw	x8, w0
  401be4:	cbz	x8, 401c08 <add_symlink+0x80>
  401be8:	mov	w8, wzr
  401bec:	mov	w0, w8
  401bf0:	adrp	x1, 402000 <add_symlink+0x478>
  401bf4:	add	x1, x1, #0xb99
  401bf8:	ldur	x2, [x29, #-224]
  401bfc:	mov	w3, #0x1c                  	// #28
  401c00:	ldur	x4, [x29, #-232]
  401c04:	bl	400fd0 <log_assert_failed_realm@plt>
  401c08:	ldur	x8, [x29, #-24]
  401c0c:	cmp	x8, #0x0
  401c10:	cset	w9, ne  // ne = any
  401c14:	mov	w10, #0x1                   	// #1
  401c18:	eor	w9, w9, #0x1
  401c1c:	eor	w9, w9, w10
  401c20:	eor	w9, w9, w10
  401c24:	and	w9, w9, #0x1
  401c28:	mov	w0, w9
  401c2c:	sxtw	x8, w0
  401c30:	cbz	x8, 401c54 <add_symlink+0xcc>
  401c34:	mov	w8, wzr
  401c38:	mov	w0, w8
  401c3c:	adrp	x1, 402000 <add_symlink+0x478>
  401c40:	add	x1, x1, #0xbce
  401c44:	ldur	x2, [x29, #-224]
  401c48:	mov	w3, #0x1d                  	// #29
  401c4c:	ldur	x4, [x29, #-232]
  401c50:	bl	400fd0 <log_assert_failed_realm@plt>
  401c54:	sub	x8, x29, #0x40
  401c58:	adrp	x9, 402000 <add_symlink+0x478>
  401c5c:	add	x9, x9, #0xbd7
  401c60:	stur	x9, [x29, #-64]
  401c64:	ldur	x9, [x29, #-16]
  401c68:	str	x9, [x8, #8]
  401c6c:	stur	xzr, [x29, #-88]
  401c70:	stur	xzr, [x29, #-96]
  401c74:	ldur	x8, [x29, #-96]
  401c78:	mov	w9, #0x0                   	// #0
  401c7c:	cmp	x8, #0x2
  401c80:	stur	w9, [x29, #-236]
  401c84:	b.cs	401cac <add_symlink+0x124>  // b.hs, b.nlast
  401c88:	ldur	x8, [x29, #-96]
  401c8c:	mov	x9, #0x8                   	// #8
  401c90:	mul	x8, x9, x8
  401c94:	sub	x9, x29, #0x40
  401c98:	add	x8, x9, x8
  401c9c:	ldr	x8, [x8]
  401ca0:	cmp	x8, #0x0
  401ca4:	cset	w10, ne  // ne = any
  401ca8:	stur	w10, [x29, #-236]
  401cac:	ldur	w8, [x29, #-236]
  401cb0:	tbnz	w8, #0, 401cb8 <add_symlink+0x130>
  401cb4:	b	401cf0 <add_symlink+0x168>
  401cb8:	ldur	x8, [x29, #-96]
  401cbc:	mov	x9, #0x8                   	// #8
  401cc0:	mul	x8, x9, x8
  401cc4:	sub	x9, x29, #0x40
  401cc8:	add	x8, x9, x8
  401ccc:	ldr	x0, [x8]
  401cd0:	bl	4010a0 <strlen@plt>
  401cd4:	ldur	x8, [x29, #-88]
  401cd8:	add	x8, x8, x0
  401cdc:	stur	x8, [x29, #-88]
  401ce0:	ldur	x8, [x29, #-96]
  401ce4:	add	x8, x8, #0x1
  401ce8:	stur	x8, [x29, #-96]
  401cec:	b	401c74 <add_symlink+0xec>
  401cf0:	ldur	x8, [x29, #-88]
  401cf4:	add	x8, x8, #0x1
  401cf8:	stur	x8, [x29, #-104]
  401cfc:	ldur	x1, [x29, #-104]
  401d00:	mov	x0, #0x1                   	// #1
  401d04:	bl	402878 <size_multiply_overflow>
  401d08:	mov	w8, #0x1                   	// #1
  401d0c:	eor	w9, w0, #0x1
  401d10:	eor	w9, w9, w8
  401d14:	eor	w9, w9, w8
  401d18:	eor	w8, w9, w8
  401d1c:	and	w8, w8, #0x1
  401d20:	mov	w1, w8
  401d24:	sxtw	x10, w1
  401d28:	cbz	x10, 401d4c <add_symlink+0x1c4>
  401d2c:	mov	w8, wzr
  401d30:	mov	w0, w8
  401d34:	adrp	x1, 402000 <add_symlink+0x478>
  401d38:	add	x1, x1, #0xbec
  401d3c:	ldur	x2, [x29, #-224]
  401d40:	mov	w3, #0x1f                  	// #31
  401d44:	ldur	x4, [x29, #-232]
  401d48:	bl	400fd0 <log_assert_failed_realm@plt>
  401d4c:	ldur	x8, [x29, #-104]
  401d50:	mov	x9, #0x1                   	// #1
  401d54:	mul	x8, x9, x8
  401d58:	cmp	x8, #0x400, lsl #12
  401d5c:	cset	w10, ls  // ls = plast
  401d60:	mov	w11, #0x1                   	// #1
  401d64:	eor	w10, w10, #0x1
  401d68:	eor	w10, w10, w11
  401d6c:	eor	w10, w10, w11
  401d70:	and	w10, w10, #0x1
  401d74:	mov	w0, w10
  401d78:	sxtw	x8, w0
  401d7c:	cbz	x8, 401da0 <add_symlink+0x218>
  401d80:	mov	w8, wzr
  401d84:	mov	w0, w8
  401d88:	adrp	x1, 402000 <add_symlink+0x478>
  401d8c:	add	x1, x1, #0xc17
  401d90:	ldur	x2, [x29, #-224]
  401d94:	mov	w3, #0x1f                  	// #31
  401d98:	ldur	x4, [x29, #-232]
  401d9c:	bl	400fd0 <log_assert_failed_realm@plt>
  401da0:	ldur	x8, [x29, #-104]
  401da4:	mov	x9, #0x1                   	// #1
  401da8:	mul	x8, x9, x8
  401dac:	mul	x8, x8, x9
  401db0:	add	x8, x8, #0xf
  401db4:	and	x8, x8, #0xfffffffffffffff0
  401db8:	mov	x9, sp
  401dbc:	subs	x8, x9, x8
  401dc0:	mov	sp, x8
  401dc4:	stur	x8, [x29, #-112]
  401dc8:	ldur	x8, [x29, #-112]
  401dcc:	stur	x8, [x29, #-72]
  401dd0:	stur	x8, [x29, #-80]
  401dd4:	stur	xzr, [x29, #-96]
  401dd8:	ldur	x8, [x29, #-96]
  401ddc:	mov	w9, #0x0                   	// #0
  401de0:	cmp	x8, #0x2
  401de4:	stur	w9, [x29, #-240]
  401de8:	b.cs	401e10 <add_symlink+0x288>  // b.hs, b.nlast
  401dec:	ldur	x8, [x29, #-96]
  401df0:	mov	x9, #0x8                   	// #8
  401df4:	mul	x8, x9, x8
  401df8:	sub	x9, x29, #0x40
  401dfc:	add	x8, x9, x8
  401e00:	ldr	x8, [x8]
  401e04:	cmp	x8, #0x0
  401e08:	cset	w10, ne  // ne = any
  401e0c:	stur	w10, [x29, #-240]
  401e10:	ldur	w8, [x29, #-240]
  401e14:	tbnz	w8, #0, 401e1c <add_symlink+0x294>
  401e18:	b	401e50 <add_symlink+0x2c8>
  401e1c:	ldur	x0, [x29, #-80]
  401e20:	ldur	x8, [x29, #-96]
  401e24:	mov	x9, #0x8                   	// #8
  401e28:	mul	x8, x9, x8
  401e2c:	sub	x9, x29, #0x40
  401e30:	add	x8, x9, x8
  401e34:	ldr	x1, [x8]
  401e38:	bl	4010b0 <stpcpy@plt>
  401e3c:	stur	x0, [x29, #-80]
  401e40:	ldur	x8, [x29, #-96]
  401e44:	add	x8, x8, #0x1
  401e48:	stur	x8, [x29, #-96]
  401e4c:	b	401dd8 <add_symlink+0x250>
  401e50:	ldur	x8, [x29, #-80]
  401e54:	mov	w9, #0x0                   	// #0
  401e58:	strb	w9, [x8]
  401e5c:	ldur	x8, [x29, #-72]
  401e60:	stur	x8, [x29, #-120]
  401e64:	ldur	x8, [x29, #-120]
  401e68:	stur	x8, [x29, #-32]
  401e6c:	adrp	x8, 420000 <completed.8445>
  401e70:	add	x8, x8, #0x8
  401e74:	ldr	x8, [x8]
  401e78:	sub	x10, x29, #0x90
  401e7c:	stur	x8, [x29, #-144]
  401e80:	adrp	x8, 402000 <add_symlink+0x478>
  401e84:	add	x8, x8, #0xc36
  401e88:	str	x8, [x10, #8]
  401e8c:	ldur	x8, [x29, #-24]
  401e90:	str	x8, [x10, #16]
  401e94:	stur	xzr, [x29, #-168]
  401e98:	stur	xzr, [x29, #-176]
  401e9c:	ldur	x8, [x29, #-176]
  401ea0:	mov	w9, #0x0                   	// #0
  401ea4:	cmp	x8, #0x3
  401ea8:	stur	w9, [x29, #-244]
  401eac:	b.cs	401ed4 <add_symlink+0x34c>  // b.hs, b.nlast
  401eb0:	ldur	x8, [x29, #-176]
  401eb4:	mov	x9, #0x8                   	// #8
  401eb8:	mul	x8, x9, x8
  401ebc:	sub	x9, x29, #0x90
  401ec0:	add	x8, x9, x8
  401ec4:	ldr	x8, [x8]
  401ec8:	cmp	x8, #0x0
  401ecc:	cset	w10, ne  // ne = any
  401ed0:	stur	w10, [x29, #-244]
  401ed4:	ldur	w8, [x29, #-244]
  401ed8:	tbnz	w8, #0, 401ee0 <add_symlink+0x358>
  401edc:	b	401f18 <add_symlink+0x390>
  401ee0:	ldur	x8, [x29, #-176]
  401ee4:	mov	x9, #0x8                   	// #8
  401ee8:	mul	x8, x9, x8
  401eec:	sub	x9, x29, #0x90
  401ef0:	add	x8, x9, x8
  401ef4:	ldr	x0, [x8]
  401ef8:	bl	4010a0 <strlen@plt>
  401efc:	ldur	x8, [x29, #-168]
  401f00:	add	x8, x8, x0
  401f04:	stur	x8, [x29, #-168]
  401f08:	ldur	x8, [x29, #-176]
  401f0c:	add	x8, x8, #0x1
  401f10:	stur	x8, [x29, #-176]
  401f14:	b	401e9c <add_symlink+0x314>
  401f18:	ldur	x8, [x29, #-168]
  401f1c:	add	x8, x8, #0x1
  401f20:	stur	x8, [x29, #-184]
  401f24:	ldur	x1, [x29, #-184]
  401f28:	mov	x0, #0x1                   	// #1
  401f2c:	bl	402878 <size_multiply_overflow>
  401f30:	mov	w8, #0x1                   	// #1
  401f34:	eor	w9, w0, #0x1
  401f38:	eor	w9, w9, w8
  401f3c:	eor	w9, w9, w8
  401f40:	eor	w8, w9, w8
  401f44:	and	w8, w8, #0x1
  401f48:	mov	w1, w8
  401f4c:	sxtw	x10, w1
  401f50:	cbz	x10, 401f74 <add_symlink+0x3ec>
  401f54:	mov	w8, wzr
  401f58:	mov	w0, w8
  401f5c:	adrp	x1, 402000 <add_symlink+0x478>
  401f60:	add	x1, x1, #0xbec
  401f64:	ldur	x2, [x29, #-224]
  401f68:	mov	w3, #0x20                  	// #32
  401f6c:	ldur	x4, [x29, #-232]
  401f70:	bl	400fd0 <log_assert_failed_realm@plt>
  401f74:	ldur	x8, [x29, #-184]
  401f78:	mov	x9, #0x1                   	// #1
  401f7c:	mul	x8, x9, x8
  401f80:	cmp	x8, #0x400, lsl #12
  401f84:	cset	w10, ls  // ls = plast
  401f88:	mov	w11, #0x1                   	// #1
  401f8c:	eor	w10, w10, #0x1
  401f90:	eor	w10, w10, w11
  401f94:	eor	w10, w10, w11
  401f98:	and	w10, w10, #0x1
  401f9c:	mov	w0, w10
  401fa0:	sxtw	x8, w0
  401fa4:	cbz	x8, 401fc8 <add_symlink+0x440>
  401fa8:	mov	w8, wzr
  401fac:	mov	w0, w8
  401fb0:	adrp	x1, 402000 <add_symlink+0x478>
  401fb4:	add	x1, x1, #0xc17
  401fb8:	ldur	x2, [x29, #-224]
  401fbc:	mov	w3, #0x20                  	// #32
  401fc0:	ldur	x4, [x29, #-232]
  401fc4:	bl	400fd0 <log_assert_failed_realm@plt>
  401fc8:	ldur	x8, [x29, #-184]
  401fcc:	mov	x9, #0x1                   	// #1
  401fd0:	mul	x8, x9, x8
  401fd4:	mul	x8, x8, x9
  401fd8:	add	x8, x8, #0xf
  401fdc:	and	x8, x8, #0xfffffffffffffff0
  401fe0:	mov	x9, sp
  401fe4:	subs	x8, x9, x8
  401fe8:	mov	sp, x8
  401fec:	stur	x8, [x29, #-192]
  401ff0:	ldur	x8, [x29, #-192]
  401ff4:	stur	x8, [x29, #-152]
  401ff8:	stur	x8, [x29, #-160]
  401ffc:	stur	xzr, [x29, #-176]
  402000:	ldur	x8, [x29, #-176]
  402004:	mov	w9, #0x0                   	// #0
  402008:	cmp	x8, #0x3
  40200c:	stur	w9, [x29, #-248]
  402010:	b.cs	402038 <add_symlink+0x4b0>  // b.hs, b.nlast
  402014:	ldur	x8, [x29, #-176]
  402018:	mov	x9, #0x8                   	// #8
  40201c:	mul	x8, x9, x8
  402020:	sub	x9, x29, #0x90
  402024:	add	x8, x9, x8
  402028:	ldr	x8, [x8]
  40202c:	cmp	x8, #0x0
  402030:	cset	w10, ne  // ne = any
  402034:	stur	w10, [x29, #-248]
  402038:	ldur	w8, [x29, #-248]
  40203c:	tbnz	w8, #0, 402044 <add_symlink+0x4bc>
  402040:	b	402078 <add_symlink+0x4f0>
  402044:	ldur	x0, [x29, #-160]
  402048:	ldur	x8, [x29, #-176]
  40204c:	mov	x9, #0x8                   	// #8
  402050:	mul	x8, x9, x8
  402054:	sub	x9, x29, #0x90
  402058:	add	x8, x9, x8
  40205c:	ldr	x1, [x8]
  402060:	bl	4010b0 <stpcpy@plt>
  402064:	stur	x0, [x29, #-160]
  402068:	ldur	x8, [x29, #-176]
  40206c:	add	x8, x8, #0x1
  402070:	stur	x8, [x29, #-176]
  402074:	b	402000 <add_symlink+0x478>
  402078:	ldur	x8, [x29, #-160]
  40207c:	mov	w9, #0x0                   	// #0
  402080:	strb	w9, [x8]
  402084:	ldur	x8, [x29, #-152]
  402088:	stur	x8, [x29, #-200]
  40208c:	ldur	x8, [x29, #-200]
  402090:	stur	x8, [x29, #-40]
  402094:	ldur	x0, [x29, #-40]
  402098:	mov	w1, #0x1ed                 	// #493
  40209c:	bl	4010c0 <mkdir_parents_label@plt>
  4020a0:	ldur	x8, [x29, #-32]
  4020a4:	ldur	x1, [x29, #-40]
  4020a8:	mov	x0, x8
  4020ac:	bl	4010d0 <symlink@plt>
  4020b0:	stur	w0, [x29, #-44]
  4020b4:	ldur	w9, [x29, #-44]
  4020b8:	cmp	w9, #0x0
  4020bc:	cset	w9, ge  // ge = tcont
  4020c0:	tbnz	w9, #0, 40216c <add_symlink+0x5e4>
  4020c4:	bl	4010e0 <__errno_location@plt>
  4020c8:	ldr	w8, [x0]
  4020cc:	cmp	w8, #0x11
  4020d0:	b.ne	4020dc <add_symlink+0x554>  // b.any
  4020d4:	stur	wzr, [x29, #-4]
  4020d8:	b	402170 <add_symlink+0x5e8>
  4020dc:	mov	w8, #0x3                   	// #3
  4020e0:	stur	w8, [x29, #-204]
  4020e4:	bl	4010e0 <__errno_location@plt>
  4020e8:	ldr	w8, [x0]
  4020ec:	stur	w8, [x29, #-208]
  4020f0:	stur	wzr, [x29, #-212]
  4020f4:	ldur	w0, [x29, #-212]
  4020f8:	bl	400f60 <log_get_max_level_realm@plt>
  4020fc:	ldur	w8, [x29, #-204]
  402100:	and	w8, w8, #0x7
  402104:	cmp	w0, w8
  402108:	b.lt	402144 <add_symlink+0x5bc>  // b.tstop
  40210c:	ldur	w8, [x29, #-212]
  402110:	ldur	w9, [x29, #-204]
  402114:	orr	w0, w9, w8, lsl #10
  402118:	ldur	w1, [x29, #-208]
  40211c:	ldur	x6, [x29, #-40]
  402120:	ldur	x2, [x29, #-224]
  402124:	mov	w3, #0x2a                  	// #42
  402128:	adrp	x4, 402000 <add_symlink+0x478>
  40212c:	add	x4, x4, #0xc4b
  402130:	adrp	x5, 402000 <add_symlink+0x478>
  402134:	add	x5, x5, #0xc57
  402138:	bl	400f70 <log_internal_realm@plt>
  40213c:	stur	w0, [x29, #-252]
  402140:	b	402158 <add_symlink+0x5d0>
  402144:	ldur	w0, [x29, #-208]
  402148:	bl	400f80 <abs@plt>
  40214c:	mov	w8, wzr
  402150:	subs	w8, w8, w0, uxtb
  402154:	stur	w8, [x29, #-252]
  402158:	ldur	w8, [x29, #-252]
  40215c:	stur	w8, [x29, #-216]
  402160:	ldur	w8, [x29, #-216]
  402164:	stur	w8, [x29, #-4]
  402168:	b	402170 <add_symlink+0x5e8>
  40216c:	stur	wzr, [x29, #-4]
  402170:	ldur	w0, [x29, #-4]
  402174:	mov	sp, x29
  402178:	ldr	x28, [sp, #16]
  40217c:	ldp	x29, x30, [sp], #32
  402180:	ret

0000000000402184 <add_container_getty>:
  402184:	sub	sp, sp, #0x60
  402188:	stp	x29, x30, [sp, #80]
  40218c:	add	x29, sp, #0x50
  402190:	mov	x8, xzr
  402194:	adrp	x9, 402000 <add_symlink+0x478>
  402198:	add	x9, x9, #0xa40
  40219c:	add	x9, x9, #0x3
  4021a0:	stur	x0, [x29, #-16]
  4021a4:	stur	x8, [x29, #-24]
  4021a8:	str	x9, [sp, #8]
  4021ac:	ldur	x8, [x29, #-16]
  4021b0:	cmp	x8, #0x0
  4021b4:	cset	w9, ne  // ne = any
  4021b8:	mov	w10, #0x1                   	// #1
  4021bc:	eor	w9, w9, #0x1
  4021c0:	eor	w9, w9, w10
  4021c4:	eor	w9, w9, w10
  4021c8:	and	w9, w9, #0x1
  4021cc:	mov	w0, w9
  4021d0:	sxtw	x8, w0
  4021d4:	cbz	x8, 4021fc <add_container_getty+0x78>
  4021d8:	mov	w8, wzr
  4021dc:	mov	w0, w8
  4021e0:	adrp	x1, 402000 <add_symlink+0x478>
  4021e4:	add	x1, x1, #0xc77
  4021e8:	ldr	x2, [sp, #8]
  4021ec:	mov	w3, #0x43                  	// #67
  4021f0:	adrp	x4, 402000 <add_symlink+0x478>
  4021f4:	add	x4, x4, #0xc7b
  4021f8:	bl	400fd0 <log_assert_failed_realm@plt>
  4021fc:	mov	w8, #0x7                   	// #7
  402200:	stur	w8, [x29, #-32]
  402204:	stur	wzr, [x29, #-36]
  402208:	str	wzr, [sp, #40]
  40220c:	ldr	w0, [sp, #40]
  402210:	bl	400f60 <log_get_max_level_realm@plt>
  402214:	ldur	w8, [x29, #-32]
  402218:	and	w8, w8, #0x7
  40221c:	cmp	w0, w8
  402220:	b.lt	40225c <add_container_getty+0xd8>  // b.tstop
  402224:	ldr	w8, [sp, #40]
  402228:	ldur	w9, [x29, #-32]
  40222c:	orr	w0, w9, w8, lsl #10
  402230:	ldur	w1, [x29, #-36]
  402234:	ldur	x6, [x29, #-16]
  402238:	ldr	x2, [sp, #8]
  40223c:	mov	w3, #0x45                  	// #69
  402240:	adrp	x4, 402000 <add_symlink+0x478>
  402244:	add	x4, x4, #0xca1
  402248:	adrp	x5, 402000 <add_symlink+0x478>
  40224c:	add	x5, x5, #0xcb5
  402250:	bl	400f70 <log_internal_realm@plt>
  402254:	str	w0, [sp, #4]
  402258:	b	402270 <add_container_getty+0xec>
  40225c:	ldur	w0, [x29, #-36]
  402260:	bl	400f80 <abs@plt>
  402264:	mov	w8, wzr
  402268:	subs	w8, w8, w0, uxtb
  40226c:	str	w8, [sp, #4]
  402270:	ldr	w8, [sp, #4]
  402274:	str	w8, [sp, #36]
  402278:	ldur	x1, [x29, #-16]
  40227c:	adrp	x0, 402000 <add_symlink+0x478>
  402280:	add	x0, x0, #0xceb
  402284:	adrp	x2, 402000 <add_symlink+0x478>
  402288:	add	x2, x2, #0xcfb
  40228c:	sub	x3, x29, #0x18
  402290:	bl	4010f0 <unit_name_from_path_instance@plt>
  402294:	stur	w0, [x29, #-28]
  402298:	ldur	w8, [x29, #-28]
  40229c:	cmp	w8, #0x0
  4022a0:	cset	w8, ge  // ge = tcont
  4022a4:	tbnz	w8, #0, 402338 <add_container_getty+0x1b4>
  4022a8:	mov	w8, #0x3                   	// #3
  4022ac:	str	w8, [sp, #32]
  4022b0:	ldur	w8, [x29, #-28]
  4022b4:	str	w8, [sp, #28]
  4022b8:	str	wzr, [sp, #24]
  4022bc:	ldr	w0, [sp, #24]
  4022c0:	bl	400f60 <log_get_max_level_realm@plt>
  4022c4:	ldr	w8, [sp, #32]
  4022c8:	and	w8, w8, #0x7
  4022cc:	cmp	w0, w8
  4022d0:	b.lt	402308 <add_container_getty+0x184>  // b.tstop
  4022d4:	ldr	w8, [sp, #24]
  4022d8:	ldr	w9, [sp, #32]
  4022dc:	orr	w0, w9, w8, lsl #10
  4022e0:	ldr	w1, [sp, #28]
  4022e4:	ldr	x2, [sp, #8]
  4022e8:	mov	w3, #0x49                  	// #73
  4022ec:	adrp	x4, 402000 <add_symlink+0x478>
  4022f0:	add	x4, x4, #0xca1
  4022f4:	adrp	x5, 402000 <add_symlink+0x478>
  4022f8:	add	x5, x5, #0xd04
  4022fc:	bl	400f70 <log_internal_realm@plt>
  402300:	str	w0, [sp]
  402304:	b	40231c <add_container_getty+0x198>
  402308:	ldr	w0, [sp, #28]
  40230c:	bl	400f80 <abs@plt>
  402310:	mov	w8, wzr
  402314:	subs	w8, w8, w0, uxtb
  402318:	str	w8, [sp]
  40231c:	ldr	w8, [sp]
  402320:	str	w8, [sp, #20]
  402324:	ldr	w8, [sp, #20]
  402328:	stur	w8, [x29, #-4]
  40232c:	mov	w8, #0x1                   	// #1
  402330:	str	w8, [sp, #16]
  402334:	b	402354 <add_container_getty+0x1d0>
  402338:	ldur	x1, [x29, #-24]
  40233c:	adrp	x0, 402000 <add_symlink+0x478>
  402340:	add	x0, x0, #0xd28
  402344:	bl	401b88 <add_symlink>
  402348:	stur	w0, [x29, #-4]
  40234c:	mov	w8, #0x1                   	// #1
  402350:	str	w8, [sp, #16]
  402354:	sub	x0, x29, #0x18
  402358:	bl	401b60 <freep>
  40235c:	ldur	w0, [x29, #-4]
  402360:	ldp	x29, x30, [sp, #80]
  402364:	add	sp, sp, #0x60
  402368:	ret

000000000040236c <isempty>:
  40236c:	sub	sp, sp, #0x10
  402370:	str	x0, [sp, #8]
  402374:	ldr	x8, [sp, #8]
  402378:	mov	w9, #0x1                   	// #1
  40237c:	str	w9, [sp, #4]
  402380:	cbz	x8, 40239c <isempty+0x30>
  402384:	ldr	x8, [sp, #8]
  402388:	ldrb	w9, [x8]
  40238c:	cmp	w9, #0x0
  402390:	cset	w9, ne  // ne = any
  402394:	eor	w9, w9, #0x1
  402398:	str	w9, [sp, #4]
  40239c:	ldr	w8, [sp, #4]
  4023a0:	and	w0, w8, #0x1
  4023a4:	add	sp, sp, #0x10
  4023a8:	ret

00000000004023ac <verify_tty>:
  4023ac:	stp	x29, x30, [sp, #-16]!
  4023b0:	mov	x29, sp
  4023b4:	sub	sp, sp, #0x80
  4023b8:	mov	w8, #0xffffffff            	// #-1
  4023bc:	adrp	x9, 402000 <add_symlink+0x478>
  4023c0:	add	x9, x9, #0xb33
  4023c4:	adrp	x10, 402000 <add_symlink+0x478>
  4023c8:	add	x10, x10, #0xa40
  4023cc:	add	x10, x10, #0x3
  4023d0:	sub	x11, x29, #0x30
  4023d4:	stur	x0, [x29, #-16]
  4023d8:	stur	w8, [x29, #-20]
  4023dc:	stur	x9, [x29, #-48]
  4023e0:	ldur	x9, [x29, #-16]
  4023e4:	str	x9, [x11, #8]
  4023e8:	stur	xzr, [x29, #-72]
  4023ec:	stur	xzr, [x29, #-80]
  4023f0:	stur	x10, [x29, #-120]
  4023f4:	ldur	x8, [x29, #-80]
  4023f8:	mov	w9, #0x0                   	// #0
  4023fc:	cmp	x8, #0x2
  402400:	stur	w9, [x29, #-124]
  402404:	b.cs	40242c <verify_tty+0x80>  // b.hs, b.nlast
  402408:	ldur	x8, [x29, #-80]
  40240c:	mov	x9, #0x8                   	// #8
  402410:	mul	x8, x9, x8
  402414:	sub	x9, x29, #0x30
  402418:	add	x8, x9, x8
  40241c:	ldr	x8, [x8]
  402420:	cmp	x8, #0x0
  402424:	cset	w10, ne  // ne = any
  402428:	stur	w10, [x29, #-124]
  40242c:	ldur	w8, [x29, #-124]
  402430:	tbnz	w8, #0, 402438 <verify_tty+0x8c>
  402434:	b	402470 <verify_tty+0xc4>
  402438:	ldur	x8, [x29, #-80]
  40243c:	mov	x9, #0x8                   	// #8
  402440:	mul	x8, x9, x8
  402444:	sub	x9, x29, #0x30
  402448:	add	x8, x9, x8
  40244c:	ldr	x0, [x8]
  402450:	bl	4010a0 <strlen@plt>
  402454:	ldur	x8, [x29, #-72]
  402458:	add	x8, x8, x0
  40245c:	stur	x8, [x29, #-72]
  402460:	ldur	x8, [x29, #-80]
  402464:	add	x8, x8, #0x1
  402468:	stur	x8, [x29, #-80]
  40246c:	b	4023f4 <verify_tty+0x48>
  402470:	ldur	x8, [x29, #-72]
  402474:	add	x8, x8, #0x1
  402478:	stur	x8, [x29, #-88]
  40247c:	ldur	x1, [x29, #-88]
  402480:	mov	x0, #0x1                   	// #1
  402484:	bl	402878 <size_multiply_overflow>
  402488:	mov	w8, #0x1                   	// #1
  40248c:	eor	w9, w0, #0x1
  402490:	eor	w9, w9, w8
  402494:	eor	w9, w9, w8
  402498:	eor	w8, w9, w8
  40249c:	and	w8, w8, #0x1
  4024a0:	mov	w1, w8
  4024a4:	sxtw	x10, w1
  4024a8:	cbz	x10, 4024d0 <verify_tty+0x124>
  4024ac:	mov	w8, wzr
  4024b0:	mov	w0, w8
  4024b4:	adrp	x1, 402000 <add_symlink+0x478>
  4024b8:	add	x1, x1, #0xbec
  4024bc:	ldur	x2, [x29, #-120]
  4024c0:	mov	w3, #0x57                  	// #87
  4024c4:	adrp	x4, 402000 <add_symlink+0x478>
  4024c8:	add	x4, x4, #0xd41
  4024cc:	bl	400fd0 <log_assert_failed_realm@plt>
  4024d0:	ldur	x8, [x29, #-88]
  4024d4:	mov	x9, #0x1                   	// #1
  4024d8:	mul	x8, x9, x8
  4024dc:	cmp	x8, #0x400, lsl #12
  4024e0:	cset	w10, ls  // ls = plast
  4024e4:	mov	w11, #0x1                   	// #1
  4024e8:	eor	w10, w10, #0x1
  4024ec:	eor	w10, w10, w11
  4024f0:	eor	w10, w10, w11
  4024f4:	and	w10, w10, #0x1
  4024f8:	mov	w0, w10
  4024fc:	sxtw	x8, w0
  402500:	cbz	x8, 402528 <verify_tty+0x17c>
  402504:	mov	w8, wzr
  402508:	mov	w0, w8
  40250c:	adrp	x1, 402000 <add_symlink+0x478>
  402510:	add	x1, x1, #0xc17
  402514:	ldur	x2, [x29, #-120]
  402518:	mov	w3, #0x57                  	// #87
  40251c:	adrp	x4, 402000 <add_symlink+0x478>
  402520:	add	x4, x4, #0xd41
  402524:	bl	400fd0 <log_assert_failed_realm@plt>
  402528:	ldur	x8, [x29, #-88]
  40252c:	mov	x9, #0x1                   	// #1
  402530:	mul	x8, x9, x8
  402534:	mul	x8, x8, x9
  402538:	add	x8, x8, #0xf
  40253c:	and	x8, x8, #0xfffffffffffffff0
  402540:	mov	x9, sp
  402544:	subs	x8, x9, x8
  402548:	mov	sp, x8
  40254c:	stur	x8, [x29, #-96]
  402550:	ldur	x8, [x29, #-96]
  402554:	stur	x8, [x29, #-56]
  402558:	stur	x8, [x29, #-64]
  40255c:	stur	xzr, [x29, #-80]
  402560:	ldur	x8, [x29, #-80]
  402564:	mov	w9, #0x0                   	// #0
  402568:	cmp	x8, #0x2
  40256c:	stur	w9, [x29, #-128]
  402570:	b.cs	402598 <verify_tty+0x1ec>  // b.hs, b.nlast
  402574:	ldur	x8, [x29, #-80]
  402578:	mov	x9, #0x8                   	// #8
  40257c:	mul	x8, x9, x8
  402580:	sub	x9, x29, #0x30
  402584:	add	x8, x9, x8
  402588:	ldr	x8, [x8]
  40258c:	cmp	x8, #0x0
  402590:	cset	w10, ne  // ne = any
  402594:	stur	w10, [x29, #-128]
  402598:	ldur	w8, [x29, #-128]
  40259c:	tbnz	w8, #0, 4025a4 <verify_tty+0x1f8>
  4025a0:	b	4025d8 <verify_tty+0x22c>
  4025a4:	ldur	x0, [x29, #-64]
  4025a8:	ldur	x8, [x29, #-80]
  4025ac:	mov	x9, #0x8                   	// #8
  4025b0:	mul	x8, x9, x8
  4025b4:	sub	x9, x29, #0x30
  4025b8:	add	x8, x9, x8
  4025bc:	ldr	x1, [x8]
  4025c0:	bl	4010b0 <stpcpy@plt>
  4025c4:	stur	x0, [x29, #-64]
  4025c8:	ldur	x8, [x29, #-80]
  4025cc:	add	x8, x8, #0x1
  4025d0:	stur	x8, [x29, #-80]
  4025d4:	b	402560 <verify_tty+0x1b4>
  4025d8:	ldur	x8, [x29, #-64]
  4025dc:	mov	w9, #0x0                   	// #0
  4025e0:	strb	w9, [x8]
  4025e4:	ldur	x8, [x29, #-56]
  4025e8:	stur	x8, [x29, #-104]
  4025ec:	ldur	x8, [x29, #-104]
  4025f0:	stur	x8, [x29, #-32]
  4025f4:	ldur	x0, [x29, #-32]
  4025f8:	mov	w1, #0x8902                	// #35074
  4025fc:	movk	w1, #0x8, lsl #16
  402600:	bl	401100 <open64@plt>
  402604:	stur	w0, [x29, #-20]
  402608:	ldur	w9, [x29, #-20]
  40260c:	cmp	w9, #0x0
  402610:	cset	w9, ge  // ge = tcont
  402614:	tbnz	w9, #0, 402638 <verify_tty+0x28c>
  402618:	bl	4010e0 <__errno_location@plt>
  40261c:	ldr	w8, [x0]
  402620:	mov	w9, wzr
  402624:	subs	w8, w9, w8
  402628:	stur	w8, [x29, #-4]
  40262c:	mov	w8, #0x1                   	// #1
  402630:	stur	w8, [x29, #-108]
  402634:	b	402678 <verify_tty+0x2cc>
  402638:	bl	4010e0 <__errno_location@plt>
  40263c:	str	wzr, [x0]
  402640:	ldur	w0, [x29, #-20]
  402644:	bl	401110 <isatty@plt>
  402648:	cmp	w0, #0x0
  40264c:	cset	w8, gt
  402650:	tbnz	w8, #0, 40266c <verify_tty+0x2c0>
  402654:	mov	w0, #0x5                   	// #5
  402658:	bl	402908 <errno_or_else>
  40265c:	stur	w0, [x29, #-4]
  402660:	mov	w8, #0x1                   	// #1
  402664:	stur	w8, [x29, #-108]
  402668:	b	402678 <verify_tty+0x2cc>
  40266c:	stur	wzr, [x29, #-4]
  402670:	mov	w8, #0x1                   	// #1
  402674:	stur	w8, [x29, #-108]
  402678:	sub	x0, x29, #0x14
  40267c:	bl	4028e0 <closep>
  402680:	ldur	w0, [x29, #-4]
  402684:	mov	sp, x29
  402688:	ldp	x29, x30, [sp], #16
  40268c:	ret

0000000000402690 <add_serial_getty>:
  402690:	sub	sp, sp, #0x60
  402694:	stp	x29, x30, [sp, #80]
  402698:	add	x29, sp, #0x50
  40269c:	mov	x8, xzr
  4026a0:	adrp	x9, 402000 <add_symlink+0x478>
  4026a4:	add	x9, x9, #0xa40
  4026a8:	add	x9, x9, #0x3
  4026ac:	stur	x0, [x29, #-16]
  4026b0:	stur	x8, [x29, #-24]
  4026b4:	str	x9, [sp, #8]
  4026b8:	ldur	x8, [x29, #-16]
  4026bc:	cmp	x8, #0x0
  4026c0:	cset	w9, ne  // ne = any
  4026c4:	mov	w10, #0x1                   	// #1
  4026c8:	eor	w9, w9, #0x1
  4026cc:	eor	w9, w9, w10
  4026d0:	eor	w9, w9, w10
  4026d4:	and	w9, w9, #0x1
  4026d8:	mov	w0, w9
  4026dc:	sxtw	x8, w0
  4026e0:	cbz	x8, 402708 <add_serial_getty+0x78>
  4026e4:	mov	w8, wzr
  4026e8:	mov	w0, w8
  4026ec:	adrp	x1, 402000 <add_symlink+0x478>
  4026f0:	add	x1, x1, #0xc77
  4026f4:	ldr	x2, [sp, #8]
  4026f8:	mov	w3, #0x34                  	// #52
  4026fc:	adrp	x4, 402000 <add_symlink+0x478>
  402700:	add	x4, x4, #0xd5e
  402704:	bl	400fd0 <log_assert_failed_realm@plt>
  402708:	mov	w8, #0x7                   	// #7
  40270c:	stur	w8, [x29, #-32]
  402710:	stur	wzr, [x29, #-36]
  402714:	str	wzr, [sp, #40]
  402718:	ldr	w0, [sp, #40]
  40271c:	bl	400f60 <log_get_max_level_realm@plt>
  402720:	ldur	w8, [x29, #-32]
  402724:	and	w8, w8, #0x7
  402728:	cmp	w0, w8
  40272c:	b.lt	402768 <add_serial_getty+0xd8>  // b.tstop
  402730:	ldr	w8, [sp, #40]
  402734:	ldur	w9, [x29, #-32]
  402738:	orr	w0, w9, w8, lsl #10
  40273c:	ldur	w1, [x29, #-36]
  402740:	ldur	x6, [x29, #-16]
  402744:	ldr	x2, [sp, #8]
  402748:	mov	w3, #0x36                  	// #54
  40274c:	adrp	x4, 402000 <add_symlink+0x478>
  402750:	add	x4, x4, #0xd81
  402754:	adrp	x5, 402000 <add_symlink+0x478>
  402758:	add	x5, x5, #0xd92
  40275c:	bl	400f70 <log_internal_realm@plt>
  402760:	str	w0, [sp, #4]
  402764:	b	40277c <add_serial_getty+0xec>
  402768:	ldur	w0, [x29, #-36]
  40276c:	bl	400f80 <abs@plt>
  402770:	mov	w8, wzr
  402774:	subs	w8, w8, w0, uxtb
  402778:	str	w8, [sp, #4]
  40277c:	ldr	w8, [sp, #4]
  402780:	str	w8, [sp, #36]
  402784:	ldur	x1, [x29, #-16]
  402788:	adrp	x0, 402000 <add_symlink+0x478>
  40278c:	add	x0, x0, #0xdc1
  402790:	adrp	x2, 402000 <add_symlink+0x478>
  402794:	add	x2, x2, #0xcfb
  402798:	sub	x3, x29, #0x18
  40279c:	bl	4010f0 <unit_name_from_path_instance@plt>
  4027a0:	stur	w0, [x29, #-28]
  4027a4:	ldur	w8, [x29, #-28]
  4027a8:	cmp	w8, #0x0
  4027ac:	cset	w8, ge  // ge = tcont
  4027b0:	tbnz	w8, #0, 402844 <add_serial_getty+0x1b4>
  4027b4:	mov	w8, #0x3                   	// #3
  4027b8:	str	w8, [sp, #32]
  4027bc:	ldur	w8, [x29, #-28]
  4027c0:	str	w8, [sp, #28]
  4027c4:	str	wzr, [sp, #24]
  4027c8:	ldr	w0, [sp, #24]
  4027cc:	bl	400f60 <log_get_max_level_realm@plt>
  4027d0:	ldr	w8, [sp, #32]
  4027d4:	and	w8, w8, #0x7
  4027d8:	cmp	w0, w8
  4027dc:	b.lt	402814 <add_serial_getty+0x184>  // b.tstop
  4027e0:	ldr	w8, [sp, #24]
  4027e4:	ldr	w9, [sp, #32]
  4027e8:	orr	w0, w9, w8, lsl #10
  4027ec:	ldr	w1, [sp, #28]
  4027f0:	ldr	x2, [sp, #8]
  4027f4:	mov	w3, #0x3a                  	// #58
  4027f8:	adrp	x4, 402000 <add_symlink+0x478>
  4027fc:	add	x4, x4, #0xd81
  402800:	adrp	x5, 402000 <add_symlink+0x478>
  402804:	add	x5, x5, #0xd04
  402808:	bl	400f70 <log_internal_realm@plt>
  40280c:	str	w0, [sp]
  402810:	b	402828 <add_serial_getty+0x198>
  402814:	ldr	w0, [sp, #28]
  402818:	bl	400f80 <abs@plt>
  40281c:	mov	w8, wzr
  402820:	subs	w8, w8, w0, uxtb
  402824:	str	w8, [sp]
  402828:	ldr	w8, [sp]
  40282c:	str	w8, [sp, #20]
  402830:	ldr	w8, [sp, #20]
  402834:	stur	w8, [x29, #-4]
  402838:	mov	w8, #0x1                   	// #1
  40283c:	str	w8, [sp, #16]
  402840:	b	402860 <add_serial_getty+0x1d0>
  402844:	ldur	x1, [x29, #-24]
  402848:	adrp	x0, 402000 <add_symlink+0x478>
  40284c:	add	x0, x0, #0xdce
  402850:	bl	401b88 <add_symlink>
  402854:	stur	w0, [x29, #-4]
  402858:	mov	w8, #0x1                   	// #1
  40285c:	str	w8, [sp, #16]
  402860:	sub	x0, x29, #0x18
  402864:	bl	401b60 <freep>
  402868:	ldur	w0, [x29, #-4]
  40286c:	ldp	x29, x30, [sp, #80]
  402870:	add	sp, sp, #0x60
  402874:	ret

0000000000402878 <size_multiply_overflow>:
  402878:	sub	sp, sp, #0x20
  40287c:	str	x0, [sp, #24]
  402880:	str	x1, [sp, #16]
  402884:	ldr	x8, [sp, #16]
  402888:	mov	w9, #0x0                   	// #0
  40288c:	str	w9, [sp, #12]
  402890:	cbz	x8, 4028b0 <size_multiply_overflow+0x38>
  402894:	ldr	x8, [sp, #24]
  402898:	ldr	x9, [sp, #16]
  40289c:	mov	x10, #0xffffffffffffffff    	// #-1
  4028a0:	udiv	x9, x10, x9
  4028a4:	cmp	x8, x9
  4028a8:	cset	w11, hi  // hi = pmore
  4028ac:	str	w11, [sp, #12]
  4028b0:	ldr	w8, [sp, #12]
  4028b4:	mov	w9, #0x1                   	// #1
  4028b8:	eor	w8, w8, #0x1
  4028bc:	eor	w8, w8, w9
  4028c0:	and	w8, w8, #0x1
  4028c4:	mov	w0, w8
  4028c8:	sxtw	x10, w0
  4028cc:	cmp	x10, #0x0
  4028d0:	cset	w8, ne  // ne = any
  4028d4:	and	w0, w8, #0x1
  4028d8:	add	sp, sp, #0x20
  4028dc:	ret

00000000004028e0 <closep>:
  4028e0:	sub	sp, sp, #0x20
  4028e4:	stp	x29, x30, [sp, #16]
  4028e8:	add	x29, sp, #0x10
  4028ec:	str	x0, [sp, #8]
  4028f0:	ldr	x8, [sp, #8]
  4028f4:	ldr	w0, [x8]
  4028f8:	bl	401120 <safe_close@plt>
  4028fc:	ldp	x29, x30, [sp, #16]
  402900:	add	sp, sp, #0x20
  402904:	ret

0000000000402908 <errno_or_else>:
  402908:	sub	sp, sp, #0x20
  40290c:	stp	x29, x30, [sp, #16]
  402910:	add	x29, sp, #0x10
  402914:	str	w0, [sp, #8]
  402918:	bl	4010e0 <__errno_location@plt>
  40291c:	ldr	w8, [x0]
  402920:	cmp	w8, #0x0
  402924:	cset	w8, le
  402928:	tbnz	w8, #0, 402944 <errno_or_else+0x3c>
  40292c:	bl	4010e0 <__errno_location@plt>
  402930:	ldr	w8, [x0]
  402934:	mov	w9, wzr
  402938:	subs	w8, w9, w8
  40293c:	stur	w8, [x29, #-4]
  402940:	b	402958 <errno_or_else+0x50>
  402944:	ldr	w0, [sp, #8]
  402948:	bl	400f80 <abs@plt>
  40294c:	mov	w8, wzr
  402950:	subs	w8, w8, w0
  402954:	stur	w8, [x29, #-4]
  402958:	ldur	w0, [x29, #-4]
  40295c:	ldp	x29, x30, [sp, #16]
  402960:	add	sp, sp, #0x20
  402964:	ret

0000000000402968 <ALIGN_TO>:
  402968:	sub	sp, sp, #0x10
  40296c:	str	x0, [sp, #8]
  402970:	str	x1, [sp]
  402974:	ldr	x8, [sp, #8]
  402978:	ldr	x9, [sp]
  40297c:	add	x8, x8, x9
  402980:	subs	x8, x8, #0x1
  402984:	ldr	x9, [sp]
  402988:	subs	x9, x9, #0x1
  40298c:	bic	x0, x8, x9
  402990:	add	sp, sp, #0x10
  402994:	ret

0000000000402998 <__libc_csu_init>:
  402998:	stp	x29, x30, [sp, #-64]!
  40299c:	mov	x29, sp
  4029a0:	stp	x19, x20, [sp, #16]
  4029a4:	adrp	x20, 41f000 <__FRAME_END__+0x1c128>
  4029a8:	add	x20, x20, #0xca0
  4029ac:	stp	x21, x22, [sp, #32]
  4029b0:	adrp	x21, 41f000 <__FRAME_END__+0x1c128>
  4029b4:	add	x21, x21, #0xc98
  4029b8:	sub	x20, x20, x21
  4029bc:	mov	w22, w0
  4029c0:	stp	x23, x24, [sp, #48]
  4029c4:	mov	x23, x1
  4029c8:	mov	x24, x2
  4029cc:	bl	400ee8 <_init>
  4029d0:	cmp	xzr, x20, asr #3
  4029d4:	b.eq	402a00 <__libc_csu_init+0x68>  // b.none
  4029d8:	asr	x20, x20, #3
  4029dc:	mov	x19, #0x0                   	// #0
  4029e0:	ldr	x3, [x21, x19, lsl #3]
  4029e4:	mov	x2, x24
  4029e8:	add	x19, x19, #0x1
  4029ec:	mov	x1, x23
  4029f0:	mov	w0, w22
  4029f4:	blr	x3
  4029f8:	cmp	x20, x19
  4029fc:	b.ne	4029e0 <__libc_csu_init+0x48>  // b.any
  402a00:	ldp	x19, x20, [sp, #16]
  402a04:	ldp	x21, x22, [sp, #32]
  402a08:	ldp	x23, x24, [sp, #48]
  402a0c:	ldp	x29, x30, [sp], #64
  402a10:	ret
  402a14:	nop

0000000000402a18 <__libc_csu_fini>:
  402a18:	ret

Disassembly of section .fini:

0000000000402a1c <_fini>:
  402a1c:	stp	x29, x30, [sp, #-16]!
  402a20:	mov	x29, sp
  402a24:	ldp	x29, x30, [sp], #16
  402a28:	ret
