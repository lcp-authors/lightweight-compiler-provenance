
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_testcapi.cpython-38-aarch64-linux-gnu.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000008218 <.init>:
    8218:	stp	x29, x30, [sp, #-16]!
    821c:	mov	x29, sp
    8220:	bl	90b0 <PyObject_Calloc@plt+0x10>
    8224:	ldp	x29, x30, [sp], #16
    8228:	ret

Disassembly of section .plt:

0000000000008230 <memcpy@plt-0x20>:
    8230:	stp	x16, x30, [sp, #-16]!
    8234:	adrp	x16, 26000 <PyInit__testcapi@@Base+0x1ce44>
    8238:	ldr	x17, [x16, #4088]
    823c:	add	x16, x16, #0xff8
    8240:	br	x17
    8244:	nop
    8248:	nop
    824c:	nop

0000000000008250 <memcpy@plt>:
    8250:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8254:	ldr	x17, [x16]
    8258:	add	x16, x16, #0x0
    825c:	br	x17

0000000000008260 <PyUnicode_FromFormat@plt>:
    8260:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8264:	ldr	x17, [x16, #8]
    8268:	add	x16, x16, #0x8
    826c:	br	x17

0000000000008270 <PyNumber_Negative@plt>:
    8270:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8274:	ldr	x17, [x16, #16]
    8278:	add	x16, x16, #0x10
    827c:	br	x17

0000000000008280 <PyMarshal_ReadLastObjectFromFile@plt>:
    8280:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8284:	ldr	x17, [x16, #24]
    8288:	add	x16, x16, #0x18
    828c:	br	x17

0000000000008290 <PyMapping_Items@plt>:
    8290:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8294:	ldr	x17, [x16, #32]
    8298:	add	x16, x16, #0x20
    829c:	br	x17

00000000000082a0 <PyList_New@plt>:
    82a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    82a4:	ldr	x17, [x16, #40]
    82a8:	add	x16, x16, #0x28
    82ac:	br	x17

00000000000082b0 <PyMarshal_ReadLongFromFile@plt>:
    82b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    82b4:	ldr	x17, [x16, #48]
    82b8:	add	x16, x16, #0x30
    82bc:	br	x17

00000000000082c0 <_PyUnicode_Ready@plt>:
    82c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    82c4:	ldr	x17, [x16, #56]
    82c8:	add	x16, x16, #0x38
    82cc:	br	x17

00000000000082d0 <PyUnicode_AsWideChar@plt>:
    82d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    82d4:	ldr	x17, [x16, #64]
    82d8:	add	x16, x16, #0x40
    82dc:	br	x17

00000000000082e0 <PyLong_AsLongLongAndOverflow@plt>:
    82e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    82e4:	ldr	x17, [x16, #72]
    82e8:	add	x16, x16, #0x48
    82ec:	br	x17

00000000000082f0 <PyErr_GetExcInfo@plt>:
    82f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    82f4:	ldr	x17, [x16, #80]
    82f8:	add	x16, x16, #0x50
    82fc:	br	x17

0000000000008300 <strlen@plt>:
    8300:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8304:	ldr	x17, [x16, #88]
    8308:	add	x16, x16, #0x58
    830c:	br	x17

0000000000008310 <PyTraceMalloc_Untrack@plt>:
    8310:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8314:	ldr	x17, [x16, #96]
    8318:	add	x16, x16, #0x60
    831c:	br	x17

0000000000008320 <PyModule_AddIntConstant@plt>:
    8320:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8324:	ldr	x17, [x16, #104]
    8328:	add	x16, x16, #0x68
    832c:	br	x17

0000000000008330 <raise@plt>:
    8330:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8334:	ldr	x17, [x16, #112]
    8338:	add	x16, x16, #0x70
    833c:	br	x17

0000000000008340 <_Py_EncodeLocaleEx@plt>:
    8340:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8344:	ldr	x17, [x16, #120]
    8348:	add	x16, x16, #0x78
    834c:	br	x17

0000000000008350 <PyThread_tss_create@plt>:
    8350:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8354:	ldr	x17, [x16, #128]
    8358:	add	x16, x16, #0x80
    835c:	br	x17

0000000000008360 <PyGILState_Release@plt>:
    8360:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8364:	ldr	x17, [x16, #136]
    8368:	add	x16, x16, #0x88
    836c:	br	x17

0000000000008370 <_PyBytes_Resize@plt>:
    8370:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8374:	ldr	x17, [x16, #144]
    8378:	add	x16, x16, #0x90
    837c:	br	x17

0000000000008380 <PyErr_Restore@plt>:
    8380:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8384:	ldr	x17, [x16, #152]
    8388:	add	x16, x16, #0x98
    838c:	br	x17

0000000000008390 <PyNumber_Lshift@plt>:
    8390:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8394:	ldr	x17, [x16, #160]
    8398:	add	x16, x16, #0xa0
    839c:	br	x17

00000000000083a0 <PyThread_tss_free@plt>:
    83a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    83a4:	ldr	x17, [x16, #168]
    83a8:	add	x16, x16, #0xa8
    83ac:	br	x17

00000000000083b0 <PyEval_RestoreThread@plt>:
    83b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    83b4:	ldr	x17, [x16, #176]
    83b8:	add	x16, x16, #0xb0
    83bc:	br	x17

00000000000083c0 <_Py_GetErrorHandler@plt>:
    83c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    83c4:	ldr	x17, [x16, #184]
    83c8:	add	x16, x16, #0xb8
    83cc:	br	x17

00000000000083d0 <PyMem_Free@plt>:
    83d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    83d4:	ldr	x17, [x16, #192]
    83d8:	add	x16, x16, #0xc0
    83dc:	br	x17

00000000000083e0 <_PyObject_IsFreed@plt>:
    83e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    83e4:	ldr	x17, [x16, #200]
    83e8:	add	x16, x16, #0xc8
    83ec:	br	x17

00000000000083f0 <PyCapsule_SetName@plt>:
    83f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    83f4:	ldr	x17, [x16, #208]
    83f8:	add	x16, x16, #0xd0
    83fc:	br	x17

0000000000008400 <PyUnicode_FromWideChar@plt>:
    8400:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8404:	ldr	x17, [x16, #216]
    8408:	add	x16, x16, #0xd8
    840c:	br	x17

0000000000008410 <PyErr_SetFromErrno@plt>:
    8410:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8414:	ldr	x17, [x16, #224]
    8418:	add	x16, x16, #0xe0
    841c:	br	x17

0000000000008420 <_PyTime_ObjectToTimeval@plt>:
    8420:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8424:	ldr	x17, [x16, #232]
    8428:	add	x16, x16, #0xe8
    842c:	br	x17

0000000000008430 <PyCFunction_NewEx@plt>:
    8430:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8434:	ldr	x17, [x16, #240]
    8438:	add	x16, x16, #0xf0
    843c:	br	x17

0000000000008440 <PyCapsule_GetName@plt>:
    8440:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8444:	ldr	x17, [x16, #248]
    8448:	add	x16, x16, #0xf8
    844c:	br	x17

0000000000008450 <PyLong_FromUnsignedLongLong@plt>:
    8450:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8454:	ldr	x17, [x16, #256]
    8458:	add	x16, x16, #0x100
    845c:	br	x17

0000000000008460 <PyThread_start_new_thread@plt>:
    8460:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8464:	ldr	x17, [x16, #264]
    8468:	add	x16, x16, #0x108
    846c:	br	x17

0000000000008470 <PyBuffer_Release@plt>:
    8470:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8474:	ldr	x17, [x16, #272]
    8478:	add	x16, x16, #0x110
    847c:	br	x17

0000000000008480 <PyLong_AsUnsignedLongLong@plt>:
    8480:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8484:	ldr	x17, [x16, #280]
    8488:	add	x16, x16, #0x118
    848c:	br	x17

0000000000008490 <PyNumber_Add@plt>:
    8490:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8494:	ldr	x17, [x16, #288]
    8498:	add	x16, x16, #0x120
    849c:	br	x17

00000000000084a0 <PyObject_GetAttrString@plt>:
    84a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    84a4:	ldr	x17, [x16, #296]
    84a8:	add	x16, x16, #0x128
    84ac:	br	x17

00000000000084b0 <ftell@plt>:
    84b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    84b4:	ldr	x17, [x16, #304]
    84b8:	add	x16, x16, #0x130
    84bc:	br	x17

00000000000084c0 <__cxa_finalize@plt>:
    84c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    84c4:	ldr	x17, [x16, #312]
    84c8:	add	x16, x16, #0x138
    84cc:	br	x17

00000000000084d0 <PyMem_RawMalloc@plt>:
    84d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    84d4:	ldr	x17, [x16, #320]
    84d8:	add	x16, x16, #0x140
    84dc:	br	x17

00000000000084e0 <sprintf@plt>:
    84e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    84e4:	ldr	x17, [x16, #328]
    84e8:	add	x16, x16, #0x148
    84ec:	br	x17

00000000000084f0 <PyLong_AsUnsignedLongLongMask@plt>:
    84f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    84f4:	ldr	x17, [x16, #336]
    84f8:	add	x16, x16, #0x150
    84fc:	br	x17

0000000000008500 <PyBytes_FromStringAndSize@plt>:
    8500:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8504:	ldr	x17, [x16, #344]
    8508:	add	x16, x16, #0x158
    850c:	br	x17

0000000000008510 <PyObject_SetAttrString@plt>:
    8510:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8514:	ldr	x17, [x16, #352]
    8518:	add	x16, x16, #0x160
    851c:	br	x17

0000000000008520 <PyThread_tss_is_created@plt>:
    8520:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8524:	ldr	x17, [x16, #360]
    8528:	add	x16, x16, #0x168
    852c:	br	x17

0000000000008530 <PyMapping_Keys@plt>:
    8530:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8534:	ldr	x17, [x16, #368]
    8538:	add	x16, x16, #0x170
    853c:	br	x17

0000000000008540 <Py_EndInterpreter@plt>:
    8540:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8544:	ldr	x17, [x16, #376]
    8548:	add	x16, x16, #0x178
    854c:	br	x17

0000000000008550 <PyThread_exit_thread@plt>:
    8550:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8554:	ldr	x17, [x16, #384]
    8558:	add	x16, x16, #0x180
    855c:	br	x17

0000000000008560 <_Py_Dealloc@plt>:
    8560:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8564:	ldr	x17, [x16, #392]
    8568:	add	x16, x16, #0x188
    856c:	br	x17

0000000000008570 <PyErr_NoMemory@plt>:
    8570:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8574:	ldr	x17, [x16, #400]
    8578:	add	x16, x16, #0x190
    857c:	br	x17

0000000000008580 <PyErr_SetObject@plt>:
    8580:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8584:	ldr	x17, [x16, #408]
    8588:	add	x16, x16, #0x198
    858c:	br	x17

0000000000008590 <PyObject_GC_Del@plt>:
    8590:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8594:	ldr	x17, [x16, #416]
    8598:	add	x16, x16, #0x1a0
    859c:	br	x17

00000000000085a0 <PyType_GetSlot@plt>:
    85a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    85a4:	ldr	x17, [x16, #424]
    85a8:	add	x16, x16, #0x1a8
    85ac:	br	x17

00000000000085b0 <_PyLong_Sign@plt>:
    85b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    85b4:	ldr	x17, [x16, #432]
    85b8:	add	x16, x16, #0x1b0
    85bc:	br	x17

00000000000085c0 <PyMarshal_WriteLongToFile@plt>:
    85c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    85c4:	ldr	x17, [x16, #440]
    85c8:	add	x16, x16, #0x1b8
    85cc:	br	x17

00000000000085d0 <PyErr_NewExceptionWithDoc@plt>:
    85d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    85d4:	ldr	x17, [x16, #448]
    85d8:	add	x16, x16, #0x1c0
    85dc:	br	x17

00000000000085e0 <PyThread_acquire_lock@plt>:
    85e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    85e4:	ldr	x17, [x16, #456]
    85e8:	add	x16, x16, #0x1c8
    85ec:	br	x17

00000000000085f0 <_PyLong_NumBits@plt>:
    85f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    85f4:	ldr	x17, [x16, #464]
    85f8:	add	x16, x16, #0x1d0
    85fc:	br	x17

0000000000008600 <PyObject_Str@plt>:
    8600:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8604:	ldr	x17, [x16, #472]
    8608:	add	x16, x16, #0x1d8
    860c:	br	x17

0000000000008610 <PyUnicode_FSConverter@plt>:
    8610:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8614:	ldr	x17, [x16, #480]
    8618:	add	x16, x16, #0x1e0
    861c:	br	x17

0000000000008620 <_PyGen_Send@plt>:
    8620:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8624:	ldr	x17, [x16, #488]
    8628:	add	x16, x16, #0x1e8
    862c:	br	x17

0000000000008630 <PyUnicode_CopyCharacters@plt>:
    8630:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8634:	ldr	x17, [x16, #496]
    8638:	add	x16, x16, #0x1f0
    863c:	br	x17

0000000000008640 <fclose@plt>:
    8640:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8644:	ldr	x17, [x16, #504]
    8648:	add	x16, x16, #0x1f8
    864c:	br	x17

0000000000008650 <_PyErr_SetKeyError@plt>:
    8650:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8654:	ldr	x17, [x16, #512]
    8658:	add	x16, x16, #0x200
    865c:	br	x17

0000000000008660 <malloc@plt>:
    8660:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8664:	ldr	x17, [x16, #520]
    8668:	add	x16, x16, #0x208
    866c:	br	x17

0000000000008670 <PyErr_SetString@plt>:
    8670:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8674:	ldr	x17, [x16, #528]
    8678:	add	x16, x16, #0x210
    867c:	br	x17

0000000000008680 <_PyObject_FastCallDict@plt>:
    8680:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8684:	ldr	x17, [x16, #536]
    8688:	add	x16, x16, #0x218
    868c:	br	x17

0000000000008690 <_PyTime_AsSecondsDouble@plt>:
    8690:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8694:	ldr	x17, [x16, #544]
    8698:	add	x16, x16, #0x220
    869c:	br	x17

00000000000086a0 <PyMethod_New@plt>:
    86a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    86a4:	ldr	x17, [x16, #552]
    86a8:	add	x16, x16, #0x228
    86ac:	br	x17

00000000000086b0 <PyException_GetTraceback@plt>:
    86b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    86b4:	ldr	x17, [x16, #560]
    86b8:	add	x16, x16, #0x230
    86bc:	br	x17

00000000000086c0 <PyObject_Malloc@plt>:
    86c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    86c4:	ldr	x17, [x16, #568]
    86c8:	add	x16, x16, #0x238
    86cc:	br	x17

00000000000086d0 <_PyTime_AsNanosecondsObject@plt>:
    86d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    86d4:	ldr	x17, [x16, #576]
    86d8:	add	x16, x16, #0x240
    86dc:	br	x17

00000000000086e0 <PyGILState_Ensure@plt>:
    86e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    86e4:	ldr	x17, [x16, #584]
    86e8:	add	x16, x16, #0x248
    86ec:	br	x17

00000000000086f0 <_PyObject_LookupSpecial@plt>:
    86f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    86f4:	ldr	x17, [x16, #592]
    86f8:	add	x16, x16, #0x250
    86fc:	br	x17

0000000000008700 <PyMem_SetAllocator@plt>:
    8700:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8704:	ldr	x17, [x16, #600]
    8708:	add	x16, x16, #0x258
    870c:	br	x17

0000000000008710 <_PyArg_UnpackStack@plt>:
    8710:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8714:	ldr	x17, [x16, #608]
    8718:	add	x16, x16, #0x260
    871c:	br	x17

0000000000008720 <PyErr_Print@plt>:
    8720:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8724:	ldr	x17, [x16, #616]
    8728:	add	x16, x16, #0x268
    872c:	br	x17

0000000000008730 <PyTraceMalloc_Track@plt>:
    8730:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8734:	ldr	x17, [x16, #624]
    8738:	add	x16, x16, #0x270
    873c:	br	x17

0000000000008740 <PyMem_Realloc@plt>:
    8740:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8744:	ldr	x17, [x16, #632]
    8748:	add	x16, x16, #0x278
    874c:	br	x17

0000000000008750 <PyErr_SetNone@plt>:
    8750:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8754:	ldr	x17, [x16, #640]
    8758:	add	x16, x16, #0x280
    875c:	br	x17

0000000000008760 <PyErr_ExceptionMatches@plt>:
    8760:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8764:	ldr	x17, [x16, #648]
    8768:	add	x16, x16, #0x288
    876c:	br	x17

0000000000008770 <memset@plt>:
    8770:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8774:	ldr	x17, [x16, #656]
    8778:	add	x16, x16, #0x290
    877c:	br	x17

0000000000008780 <gettimeofday@plt>:
    8780:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8784:	ldr	x17, [x16, #664]
    8788:	add	x16, x16, #0x298
    878c:	br	x17

0000000000008790 <Py_NewInterpreter@plt>:
    8790:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8794:	ldr	x17, [x16, #672]
    8798:	add	x16, x16, #0x2a0
    879c:	br	x17

00000000000087a0 <_Py_DecodeLocaleEx@plt>:
    87a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    87a4:	ldr	x17, [x16, #680]
    87a8:	add	x16, x16, #0x2a8
    87ac:	br	x17

00000000000087b0 <_PyTime_FromSecondsObject@plt>:
    87b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    87b4:	ldr	x17, [x16, #688]
    87b8:	add	x16, x16, #0x2b0
    87bc:	br	x17

00000000000087c0 <PyObject_Free@plt>:
    87c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    87c4:	ldr	x17, [x16, #696]
    87c8:	add	x16, x16, #0x2b8
    87cc:	br	x17

00000000000087d0 <_PyTime_AsMilliseconds@plt>:
    87d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    87d4:	ldr	x17, [x16, #704]
    87d8:	add	x16, x16, #0x2c0
    87dc:	br	x17

00000000000087e0 <PyLong_AsVoidPtr@plt>:
    87e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    87e4:	ldr	x17, [x16, #712]
    87e8:	add	x16, x16, #0x2c8
    87ec:	br	x17

00000000000087f0 <PyLong_FromSsize_t@plt>:
    87f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    87f4:	ldr	x17, [x16, #720]
    87f8:	add	x16, x16, #0x2d0
    87fc:	br	x17

0000000000008800 <PyFloat_FromDouble@plt>:
    8800:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8804:	ldr	x17, [x16, #728]
    8808:	add	x16, x16, #0x2d8
    880c:	br	x17

0000000000008810 <_PyArg_Parse_SizeT@plt>:
    8810:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8814:	ldr	x17, [x16, #736]
    8818:	add	x16, x16, #0x2e0
    881c:	br	x17

0000000000008820 <PyCapsule_Import@plt>:
    8820:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8824:	ldr	x17, [x16, #744]
    8828:	add	x16, x16, #0x2e8
    882c:	br	x17

0000000000008830 <PyType_Ready@plt>:
    8830:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8834:	ldr	x17, [x16, #752]
    8838:	add	x16, x16, #0x2f0
    883c:	br	x17

0000000000008840 <PyLong_FromLong@plt>:
    8840:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8844:	ldr	x17, [x16, #760]
    8848:	add	x16, x16, #0x2f8
    884c:	br	x17

0000000000008850 <PyLong_AsSsize_t@plt>:
    8850:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8854:	ldr	x17, [x16, #768]
    8858:	add	x16, x16, #0x300
    885c:	br	x17

0000000000008860 <PyOS_string_to_double@plt>:
    8860:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8864:	ldr	x17, [x16, #776]
    8868:	add	x16, x16, #0x308
    886c:	br	x17

0000000000008870 <PyBuffer_FillInfo@plt>:
    8870:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8874:	ldr	x17, [x16, #784]
    8878:	add	x16, x16, #0x310
    887c:	br	x17

0000000000008880 <PyLong_FromVoidPtr@plt>:
    8880:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8884:	ldr	x17, [x16, #792]
    8888:	add	x16, x16, #0x318
    888c:	br	x17

0000000000008890 <PyUnicode_FromUnicode@plt>:
    8890:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8894:	ldr	x17, [x16, #800]
    8898:	add	x16, x16, #0x320
    889c:	br	x17

00000000000088a0 <PyErr_NewException@plt>:
    88a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    88a4:	ldr	x17, [x16, #808]
    88a8:	add	x16, x16, #0x328
    88ac:	br	x17

00000000000088b0 <PyCodec_IncrementalDecoder@plt>:
    88b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    88b4:	ldr	x17, [x16, #816]
    88b8:	add	x16, x16, #0x330
    88bc:	br	x17

00000000000088c0 <PyErr_Clear@plt>:
    88c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    88c4:	ldr	x17, [x16, #824]
    88c8:	add	x16, x16, #0x338
    88cc:	br	x17

00000000000088d0 <PyBool_FromLong@plt>:
    88d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    88d4:	ldr	x17, [x16, #832]
    88d8:	add	x16, x16, #0x340
    88dc:	br	x17

00000000000088e0 <Py_AddPendingCall@plt>:
    88e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    88e4:	ldr	x17, [x16, #840]
    88e8:	add	x16, x16, #0x348
    88ec:	br	x17

00000000000088f0 <PyLong_AsUnsignedLongMask@plt>:
    88f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    88f4:	ldr	x17, [x16, #848]
    88f8:	add	x16, x16, #0x350
    88fc:	br	x17

0000000000008900 <__gmon_start__@plt>:
    8900:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8904:	ldr	x17, [x16, #856]
    8908:	add	x16, x16, #0x358
    890c:	br	x17

0000000000008910 <PyUnicode_AsUnicode@plt>:
    8910:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8914:	ldr	x17, [x16, #864]
    8918:	add	x16, x16, #0x360
    891c:	br	x17

0000000000008920 <PyTuple_New@plt>:
    8920:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8924:	ldr	x17, [x16, #872]
    8928:	add	x16, x16, #0x368
    892c:	br	x17

0000000000008930 <PyLong_AsSize_t@plt>:
    8930:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8934:	ldr	x17, [x16, #880]
    8938:	add	x16, x16, #0x370
    893c:	br	x17

0000000000008940 <PyThreadState_Get@plt>:
    8940:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8944:	ldr	x17, [x16, #888]
    8948:	add	x16, x16, #0x378
    894c:	br	x17

0000000000008950 <PyLong_AsLongAndOverflow@plt>:
    8950:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8954:	ldr	x17, [x16, #896]
    8958:	add	x16, x16, #0x380
    895c:	br	x17

0000000000008960 <PyArg_UnpackTuple@plt>:
    8960:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8964:	ldr	x17, [x16, #904]
    8968:	add	x16, x16, #0x388
    896c:	br	x17

0000000000008970 <PyBytes_FromString@plt>:
    8970:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8974:	ldr	x17, [x16, #912]
    8978:	add	x16, x16, #0x390
    897c:	br	x17

0000000000008980 <PyErr_Occurred@plt>:
    8980:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8984:	ldr	x17, [x16, #920]
    8988:	add	x16, x16, #0x398
    898c:	br	x17

0000000000008990 <PyModule_Create2@plt>:
    8990:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8994:	ldr	x17, [x16, #928]
    8998:	add	x16, x16, #0x3a0
    899c:	br	x17

00000000000089a0 <PyLong_AsLong@plt>:
    89a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    89a4:	ldr	x17, [x16, #936]
    89a8:	add	x16, x16, #0x3a8
    89ac:	br	x17

00000000000089b0 <PyImport_ImportModule@plt>:
    89b0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    89b4:	ldr	x17, [x16, #944]
    89b8:	add	x16, x16, #0x3b0
    89bc:	br	x17

00000000000089c0 <_PyErr_WriteUnraisableMsg@plt>:
    89c0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    89c4:	ldr	x17, [x16, #952]
    89c8:	add	x16, x16, #0x3b8
    89cc:	br	x17

00000000000089d0 <_PyDict_GetItem_KnownHash@plt>:
    89d0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    89d4:	ldr	x17, [x16, #960]
    89d8:	add	x16, x16, #0x3c0
    89dc:	br	x17

00000000000089e0 <PyObject_CallObject@plt>:
    89e0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    89e4:	ldr	x17, [x16, #968]
    89e8:	add	x16, x16, #0x3c8
    89ec:	br	x17

00000000000089f0 <PyState_FindModule@plt>:
    89f0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    89f4:	ldr	x17, [x16, #976]
    89f8:	add	x16, x16, #0x3d0
    89fc:	br	x17

0000000000008a00 <PyUnicode_AsUCS4@plt>:
    8a00:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a04:	ldr	x17, [x16, #984]
    8a08:	add	x16, x16, #0x3d8
    8a0c:	br	x17

0000000000008a10 <PyMem_RawFree@plt>:
    8a10:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a14:	ldr	x17, [x16, #992]
    8a18:	add	x16, x16, #0x3e0
    8a1c:	br	x17

0000000000008a20 <PyList_Reverse@plt>:
    8a20:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a24:	ldr	x17, [x16, #1000]
    8a28:	add	x16, x16, #0x3e8
    8a2c:	br	x17

0000000000008a30 <_PyUnicode_EqualToASCIIString@plt>:
    8a30:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a34:	ldr	x17, [x16, #1008]
    8a38:	add	x16, x16, #0x3f0
    8a3c:	br	x17

0000000000008a40 <_PyTime_AsTimespec@plt>:
    8a40:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a44:	ldr	x17, [x16, #1016]
    8a48:	add	x16, x16, #0x3f8
    8a4c:	br	x17

0000000000008a50 <PyCapsule_SetDestructor@plt>:
    8a50:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a54:	ldr	x17, [x16, #1024]
    8a58:	add	x16, x16, #0x400
    8a5c:	br	x17

0000000000008a60 <PyCodec_IncrementalEncoder@plt>:
    8a60:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a64:	ldr	x17, [x16, #1032]
    8a68:	add	x16, x16, #0x408
    8a6c:	br	x17

0000000000008a70 <_PyArg_ParseTuple_SizeT@plt>:
    8a70:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a74:	ldr	x17, [x16, #1040]
    8a78:	add	x16, x16, #0x410
    8a7c:	br	x17

0000000000008a80 <_Py_CheckFunctionResult@plt>:
    8a80:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a84:	ldr	x17, [x16, #1048]
    8a88:	add	x16, x16, #0x418
    8a8c:	br	x17

0000000000008a90 <PyUnicode_CompareWithASCIIString@plt>:
    8a90:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8a94:	ldr	x17, [x16, #1056]
    8a98:	add	x16, x16, #0x420
    8a9c:	br	x17

0000000000008aa0 <free@plt>:
    8aa0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8aa4:	ldr	x17, [x16, #1064]
    8aa8:	add	x16, x16, #0x428
    8aac:	br	x17

0000000000008ab0 <Py_FatalError@plt>:
    8ab0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ab4:	ldr	x17, [x16, #1072]
    8ab8:	add	x16, x16, #0x430
    8abc:	br	x17

0000000000008ac0 <PyMarshal_WriteObjectToFile@plt>:
    8ac0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ac4:	ldr	x17, [x16, #1080]
    8ac8:	add	x16, x16, #0x438
    8acc:	br	x17

0000000000008ad0 <PyThread_allocate_lock@plt>:
    8ad0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ad4:	ldr	x17, [x16, #1088]
    8ad8:	add	x16, x16, #0x440
    8adc:	br	x17

0000000000008ae0 <PyObject_Realloc@plt>:
    8ae0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ae4:	ldr	x17, [x16, #1096]
    8ae8:	add	x16, x16, #0x448
    8aec:	br	x17

0000000000008af0 <PyUnicode_EncodeDecimal@plt>:
    8af0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8af4:	ldr	x17, [x16, #1104]
    8af8:	add	x16, x16, #0x450
    8afc:	br	x17

0000000000008b00 <PyObject_Hash@plt>:
    8b00:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b04:	ldr	x17, [x16, #1112]
    8b08:	add	x16, x16, #0x458
    8b0c:	br	x17

0000000000008b10 <_PyTime_ObjectToTimespec@plt>:
    8b10:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b14:	ldr	x17, [x16, #1120]
    8b18:	add	x16, x16, #0x460
    8b1c:	br	x17

0000000000008b20 <_PyTraceMalloc_GetTraceback@plt>:
    8b20:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b24:	ldr	x17, [x16, #1128]
    8b28:	add	x16, x16, #0x468
    8b2c:	br	x17

0000000000008b30 <PyUnicode_Compare@plt>:
    8b30:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b34:	ldr	x17, [x16, #1136]
    8b38:	add	x16, x16, #0x470
    8b3c:	br	x17

0000000000008b40 <Py_IncRef@plt>:
    8b40:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b44:	ldr	x17, [x16, #1144]
    8b48:	add	x16, x16, #0x478
    8b4c:	br	x17

0000000000008b50 <PyCapsule_GetContext@plt>:
    8b50:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b54:	ldr	x17, [x16, #1152]
    8b58:	add	x16, x16, #0x480
    8b5c:	br	x17

0000000000008b60 <PyNumber_Rshift@plt>:
    8b60:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b64:	ldr	x17, [x16, #1160]
    8b68:	add	x16, x16, #0x488
    8b6c:	br	x17

0000000000008b70 <PyMem_GetAllocator@plt>:
    8b70:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b74:	ldr	x17, [x16, #1168]
    8b78:	add	x16, x16, #0x490
    8b7c:	br	x17

0000000000008b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    8b80:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b84:	ldr	x17, [x16, #1176]
    8b88:	add	x16, x16, #0x498
    8b8c:	br	x17

0000000000008b90 <PyThread_release_lock@plt>:
    8b90:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8b94:	ldr	x17, [x16, #1184]
    8b98:	add	x16, x16, #0x4a0
    8b9c:	br	x17

0000000000008ba0 <PyThread_tss_alloc@plt>:
    8ba0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ba4:	ldr	x17, [x16, #1192]
    8ba8:	add	x16, x16, #0x4a8
    8bac:	br	x17

0000000000008bb0 <PyVectorcall_Call@plt>:
    8bb0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8bb4:	ldr	x17, [x16, #1200]
    8bb8:	add	x16, x16, #0x4b0
    8bbc:	br	x17

0000000000008bc0 <_PyTime_ObjectToTime_t@plt>:
    8bc0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8bc4:	ldr	x17, [x16, #1208]
    8bc8:	add	x16, x16, #0x4b8
    8bcc:	br	x17

0000000000008bd0 <PyLong_AsDouble@plt>:
    8bd0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8bd4:	ldr	x17, [x16, #1216]
    8bd8:	add	x16, x16, #0x4c0
    8bdc:	br	x17

0000000000008be0 <Py_DecRef@plt>:
    8be0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8be4:	ldr	x17, [x16, #1224]
    8be8:	add	x16, x16, #0x4c8
    8bec:	br	x17

0000000000008bf0 <PyUnicode_FromKindAndData@plt>:
    8bf0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8bf4:	ldr	x17, [x16, #1232]
    8bf8:	add	x16, x16, #0x4d0
    8bfc:	br	x17

0000000000008c00 <PyThread_tss_set@plt>:
    8c00:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c04:	ldr	x17, [x16, #1240]
    8c08:	add	x16, x16, #0x4d8
    8c0c:	br	x17

0000000000008c10 <_PyTraceMalloc_NewReference@plt>:
    8c10:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c14:	ldr	x17, [x16, #1248]
    8c18:	add	x16, x16, #0x4e0
    8c1c:	br	x17

0000000000008c20 <PyDict_New@plt>:
    8c20:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c24:	ldr	x17, [x16, #1256]
    8c28:	add	x16, x16, #0x4e8
    8c2c:	br	x17

0000000000008c30 <PyCallable_Check@plt>:
    8c30:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c34:	ldr	x17, [x16, #1264]
    8c38:	add	x16, x16, #0x4f0
    8c3c:	br	x17

0000000000008c40 <PyObject_GetBuffer@plt>:
    8c40:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c44:	ldr	x17, [x16, #1272]
    8c48:	add	x16, x16, #0x4f8
    8c4c:	br	x17

0000000000008c50 <PyLong_AsUnsignedLong@plt>:
    8c50:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c54:	ldr	x17, [x16, #1280]
    8c58:	add	x16, x16, #0x500
    8c5c:	br	x17

0000000000008c60 <PyDict_Next@plt>:
    8c60:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c64:	ldr	x17, [x16, #1288]
    8c68:	add	x16, x16, #0x508
    8c6c:	br	x17

0000000000008c70 <PyUnicode_AsWideCharString@plt>:
    8c70:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c74:	ldr	x17, [x16, #1296]
    8c78:	add	x16, x16, #0x510
    8c7c:	br	x17

0000000000008c80 <PyLong_FromUnsignedLong@plt>:
    8c80:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c84:	ldr	x17, [x16, #1304]
    8c88:	add	x16, x16, #0x518
    8c8c:	br	x17

0000000000008c90 <PyUnicode_Fill@plt>:
    8c90:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8c94:	ldr	x17, [x16, #1312]
    8c98:	add	x16, x16, #0x520
    8c9c:	br	x17

0000000000008ca0 <PyUnicode_AsUTF8@plt>:
    8ca0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ca4:	ldr	x17, [x16, #1320]
    8ca8:	add	x16, x16, #0x528
    8cac:	br	x17

0000000000008cb0 <strcpy@plt>:
    8cb0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8cb4:	ldr	x17, [x16, #1328]
    8cb8:	add	x16, x16, #0x530
    8cbc:	br	x17

0000000000008cc0 <PyBuffer_FromContiguous@plt>:
    8cc0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8cc4:	ldr	x17, [x16, #1336]
    8cc8:	add	x16, x16, #0x538
    8ccc:	br	x17

0000000000008cd0 <fopen64@plt>:
    8cd0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8cd4:	ldr	x17, [x16, #1344]
    8cd8:	add	x16, x16, #0x540
    8cdc:	br	x17

0000000000008ce0 <PyErr_Fetch@plt>:
    8ce0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ce4:	ldr	x17, [x16, #1352]
    8ce8:	add	x16, x16, #0x548
    8cec:	br	x17

0000000000008cf0 <_PyObject_New@plt>:
    8cf0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8cf4:	ldr	x17, [x16, #1360]
    8cf8:	add	x16, x16, #0x550
    8cfc:	br	x17

0000000000008d00 <PyCapsule_SetPointer@plt>:
    8d00:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d04:	ldr	x17, [x16, #1368]
    8d08:	add	x16, x16, #0x558
    8d0c:	br	x17

0000000000008d10 <PyUnicode_FromString@plt>:
    8d10:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d14:	ldr	x17, [x16, #1376]
    8d18:	add	x16, x16, #0x560
    8d1c:	br	x17

0000000000008d20 <PyState_AddModule@plt>:
    8d20:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d24:	ldr	x17, [x16, #1384]
    8d28:	add	x16, x16, #0x568
    8d2c:	br	x17

0000000000008d30 <PyMem_RawCalloc@plt>:
    8d30:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d34:	ldr	x17, [x16, #1392]
    8d38:	add	x16, x16, #0x570
    8d3c:	br	x17

0000000000008d40 <PyMarshal_ReadObjectFromFile@plt>:
    8d40:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d44:	ldr	x17, [x16, #1400]
    8d48:	add	x16, x16, #0x578
    8d4c:	br	x17

0000000000008d50 <PyEval_SaveThread@plt>:
    8d50:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d54:	ldr	x17, [x16, #1408]
    8d58:	add	x16, x16, #0x580
    8d5c:	br	x17

0000000000008d60 <PyModule_AddObject@plt>:
    8d60:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d64:	ldr	x17, [x16, #1416]
    8d68:	add	x16, x16, #0x588
    8d6c:	br	x17

0000000000008d70 <_PyTime_AsMicroseconds@plt>:
    8d70:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d74:	ldr	x17, [x16, #1424]
    8d78:	add	x16, x16, #0x590
    8d7c:	br	x17

0000000000008d80 <PyDict_SetItem@plt>:
    8d80:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d84:	ldr	x17, [x16, #1432]
    8d88:	add	x16, x16, #0x598
    8d8c:	br	x17

0000000000008d90 <PyThread_tss_delete@plt>:
    8d90:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8d94:	ldr	x17, [x16, #1440]
    8d98:	add	x16, x16, #0x5a0
    8d9c:	br	x17

0000000000008da0 <_PyContext_NewHamtForTests@plt>:
    8da0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8da4:	ldr	x17, [x16, #1448]
    8da8:	add	x16, x16, #0x5a8
    8dac:	br	x17

0000000000008db0 <PyObject_Repr@plt>:
    8db0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8db4:	ldr	x17, [x16, #1456]
    8db8:	add	x16, x16, #0x5b0
    8dbc:	br	x17

0000000000008dc0 <PyMapping_Values@plt>:
    8dc0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8dc4:	ldr	x17, [x16, #1464]
    8dc8:	add	x16, x16, #0x5b8
    8dcc:	br	x17

0000000000008dd0 <_PyTime_AsTimeval@plt>:
    8dd0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8dd4:	ldr	x17, [x16, #1472]
    8dd8:	add	x16, x16, #0x5c0
    8ddc:	br	x17

0000000000008de0 <_PyMem_GetCurrentAllocatorName@plt>:
    8de0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8de4:	ldr	x17, [x16, #1480]
    8de8:	add	x16, x16, #0x5c8
    8dec:	br	x17

0000000000008df0 <PyLong_AsLongLong@plt>:
    8df0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8df4:	ldr	x17, [x16, #1488]
    8df8:	add	x16, x16, #0x5d0
    8dfc:	br	x17

0000000000008e00 <_PyTime_FromSeconds@plt>:
    8e00:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e04:	ldr	x17, [x16, #1496]
    8e08:	add	x16, x16, #0x5d8
    8e0c:	br	x17

0000000000008e10 <PyCapsule_New@plt>:
    8e10:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e14:	ldr	x17, [x16, #1504]
    8e18:	add	x16, x16, #0x5e0
    8e1c:	br	x17

0000000000008e20 <PyType_IsSubtype@plt>:
    8e20:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e24:	ldr	x17, [x16, #1512]
    8e28:	add	x16, x16, #0x5e8
    8e2c:	br	x17

0000000000008e30 <PyErr_Display@plt>:
    8e30:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e34:	ldr	x17, [x16, #1520]
    8e38:	add	x16, x16, #0x5f0
    8e3c:	br	x17

0000000000008e40 <PyStructSequence_NewType@plt>:
    8e40:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e44:	ldr	x17, [x16, #1528]
    8e48:	add	x16, x16, #0x5f8
    8e4c:	br	x17

0000000000008e50 <PyUnicode_Decode@plt>:
    8e50:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e54:	ldr	x17, [x16, #1536]
    8e58:	add	x16, x16, #0x600
    8e5c:	br	x17

0000000000008e60 <PyErr_Format@plt>:
    8e60:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e64:	ldr	x17, [x16, #1544]
    8e68:	add	x16, x16, #0x608
    8e6c:	br	x17

0000000000008e70 <PyCapsule_GetPointer@plt>:
    8e70:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e74:	ldr	x17, [x16, #1552]
    8e78:	add	x16, x16, #0x610
    8e7c:	br	x17

0000000000008e80 <_PyTime_FromNanosecondsObject@plt>:
    8e80:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e84:	ldr	x17, [x16, #1560]
    8e88:	add	x16, x16, #0x618
    8e8c:	br	x17

0000000000008e90 <PyComplex_FromCComplex@plt>:
    8e90:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8e94:	ldr	x17, [x16, #1568]
    8e98:	add	x16, x16, #0x620
    8e9c:	br	x17

0000000000008ea0 <_Py_BuildValue_SizeT@plt>:
    8ea0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ea4:	ldr	x17, [x16, #1576]
    8ea8:	add	x16, x16, #0x628
    8eac:	br	x17

0000000000008eb0 <PyUnicode_FromStringAndSize@plt>:
    8eb0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8eb4:	ldr	x17, [x16, #1584]
    8eb8:	add	x16, x16, #0x630
    8ebc:	br	x17

0000000000008ec0 <PyCapsule_GetDestructor@plt>:
    8ec0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ec4:	ldr	x17, [x16, #1592]
    8ec8:	add	x16, x16, #0x638
    8ecc:	br	x17

0000000000008ed0 <PyRun_SimpleStringFlags@plt>:
    8ed0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ed4:	ldr	x17, [x16, #1600]
    8ed8:	add	x16, x16, #0x640
    8edc:	br	x17

0000000000008ee0 <PyTraceBack_Print@plt>:
    8ee0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ee4:	ldr	x17, [x16, #1608]
    8ee8:	add	x16, x16, #0x648
    8eec:	br	x17

0000000000008ef0 <PyLong_FromLongLong@plt>:
    8ef0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ef4:	ldr	x17, [x16, #1616]
    8ef8:	add	x16, x16, #0x650
    8efc:	br	x17

0000000000008f00 <_PyObject_MakeTpCall@plt>:
    8f00:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f04:	ldr	x17, [x16, #1624]
    8f08:	add	x16, x16, #0x658
    8f0c:	br	x17

0000000000008f10 <PyThread_tss_get@plt>:
    8f10:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f14:	ldr	x17, [x16, #1632]
    8f18:	add	x16, x16, #0x660
    8f1c:	br	x17

0000000000008f20 <PyMem_Calloc@plt>:
    8f20:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f24:	ldr	x17, [x16, #1640]
    8f28:	add	x16, x16, #0x668
    8f2c:	br	x17

0000000000008f30 <printf@plt>:
    8f30:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f34:	ldr	x17, [x16, #1648]
    8f38:	add	x16, x16, #0x670
    8f3c:	br	x17

0000000000008f40 <__errno_location@plt>:
    8f40:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f44:	ldr	x17, [x16, #1656]
    8f48:	add	x16, x16, #0x678
    8f4c:	br	x17

0000000000008f50 <PyType_FromSpecWithBases@plt>:
    8f50:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f54:	ldr	x17, [x16, #1664]
    8f58:	add	x16, x16, #0x680
    8f5c:	br	x17

0000000000008f60 <PyMarshal_ReadShortFromFile@plt>:
    8f60:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f64:	ldr	x17, [x16, #1672]
    8f68:	add	x16, x16, #0x688
    8f6c:	br	x17

0000000000008f70 <PyEval_InitThreads@plt>:
    8f70:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f74:	ldr	x17, [x16, #1680]
    8f78:	add	x16, x16, #0x690
    8f7c:	br	x17

0000000000008f80 <PyCapsule_SetContext@plt>:
    8f80:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f84:	ldr	x17, [x16, #1688]
    8f88:	add	x16, x16, #0x698
    8f8c:	br	x17

0000000000008f90 <PyLong_FromString@plt>:
    8f90:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8f94:	ldr	x17, [x16, #1696]
    8f98:	add	x16, x16, #0x6a0
    8f9c:	br	x17

0000000000008fa0 <PyErr_SetExcInfo@plt>:
    8fa0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8fa4:	ldr	x17, [x16, #1704]
    8fa8:	add	x16, x16, #0x6a8
    8fac:	br	x17

0000000000008fb0 <PyUnicode_FindChar@plt>:
    8fb0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8fb4:	ldr	x17, [x16, #1712]
    8fb8:	add	x16, x16, #0x6b0
    8fbc:	br	x17

0000000000008fc0 <PyMem_Malloc@plt>:
    8fc0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8fc4:	ldr	x17, [x16, #1720]
    8fc8:	add	x16, x16, #0x6b8
    8fcc:	br	x17

0000000000008fd0 <PyThreadState_Swap@plt>:
    8fd0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8fd4:	ldr	x17, [x16, #1728]
    8fd8:	add	x16, x16, #0x6c0
    8fdc:	br	x17

0000000000008fe0 <PyNumber_Subtract@plt>:
    8fe0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8fe4:	ldr	x17, [x16, #1736]
    8fe8:	add	x16, x16, #0x6c8
    8fec:	br	x17

0000000000008ff0 <PyType_FromSpec@plt>:
    8ff0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    8ff4:	ldr	x17, [x16, #1744]
    8ff8:	add	x16, x16, #0x6d0
    8ffc:	br	x17

0000000000009000 <_PyLong_FromTime_t@plt>:
    9000:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9004:	ldr	x17, [x16, #1752]
    9008:	add	x16, x16, #0x6d8
    900c:	br	x17

0000000000009010 <PyUnicode_New@plt>:
    9010:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9014:	ldr	x17, [x16, #1760]
    9018:	add	x16, x16, #0x6e0
    901c:	br	x17

0000000000009020 <PyUnicode_TransformDecimalToASCII@plt>:
    9020:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9024:	ldr	x17, [x16, #1768]
    9028:	add	x16, x16, #0x6e8
    902c:	br	x17

0000000000009030 <PyThread_free_lock@plt>:
    9030:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9034:	ldr	x17, [x16, #1776]
    9038:	add	x16, x16, #0x6f0
    903c:	br	x17

0000000000009040 <PyTuple_Pack@plt>:
    9040:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9044:	ldr	x17, [x16, #1784]
    9048:	add	x16, x16, #0x6f8
    904c:	br	x17

0000000000009050 <PyMemoryView_FromBuffer@plt>:
    9050:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9054:	ldr	x17, [x16, #1792]
    9058:	add	x16, x16, #0x700
    905c:	br	x17

0000000000009060 <PyCode_NewEmpty@plt>:
    9060:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9064:	ldr	x17, [x16, #1800]
    9068:	add	x16, x16, #0x708
    906c:	br	x17

0000000000009070 <PyObject_GC_UnTrack@plt>:
    9070:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9074:	ldr	x17, [x16, #1808]
    9078:	add	x16, x16, #0x710
    907c:	br	x17

0000000000009080 <PyErr_WriteUnraisable@plt>:
    9080:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9084:	ldr	x17, [x16, #1816]
    9088:	add	x16, x16, #0x718
    908c:	br	x17

0000000000009090 <PyMem_RawRealloc@plt>:
    9090:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    9094:	ldr	x17, [x16, #1824]
    9098:	add	x16, x16, #0x720
    909c:	br	x17

00000000000090a0 <PyObject_Calloc@plt>:
    90a0:	adrp	x16, 27000 <memcpy@GLIBC_2.17>
    90a4:	ldr	x17, [x16, #1832]
    90a8:	add	x16, x16, #0x728
    90ac:	br	x17

Disassembly of section .text:

00000000000090b0 <MyList_dealloc@@Base-0xd4>:
    90b0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    90b4:	ldr	x0, [x0, #3992]
    90b8:	cbz	x0, 90c0 <PyObject_Calloc@plt+0x20>
    90bc:	b	8900 <__gmon_start__@plt>
    90c0:	ret
    90c4:	nop
    90c8:	adrp	x0, 2a000 <PyInit__testcapi@@Base+0x20e44>
    90cc:	add	x0, x0, #0xdb8
    90d0:	adrp	x1, 2a000 <PyInit__testcapi@@Base+0x20e44>
    90d4:	add	x1, x1, #0xdb8
    90d8:	cmp	x1, x0
    90dc:	b.eq	90f4 <PyObject_Calloc@plt+0x54>  // b.none
    90e0:	adrp	x1, 26000 <PyInit__testcapi@@Base+0x1ce44>
    90e4:	ldr	x1, [x1, #3856]
    90e8:	cbz	x1, 90f4 <PyObject_Calloc@plt+0x54>
    90ec:	mov	x16, x1
    90f0:	br	x16
    90f4:	ret
    90f8:	adrp	x0, 2a000 <PyInit__testcapi@@Base+0x20e44>
    90fc:	add	x0, x0, #0xdb8
    9100:	adrp	x1, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9104:	add	x1, x1, #0xdb8
    9108:	sub	x1, x1, x0
    910c:	lsr	x2, x1, #63
    9110:	add	x1, x2, x1, asr #3
    9114:	cmp	xzr, x1, asr #1
    9118:	asr	x1, x1, #1
    911c:	b.eq	9134 <PyObject_Calloc@plt+0x94>  // b.none
    9120:	adrp	x2, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9124:	ldr	x2, [x2, #4056]
    9128:	cbz	x2, 9134 <PyObject_Calloc@plt+0x94>
    912c:	mov	x16, x2
    9130:	br	x16
    9134:	ret
    9138:	stp	x29, x30, [sp, #-32]!
    913c:	mov	x29, sp
    9140:	str	x19, [sp, #16]
    9144:	adrp	x19, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9148:	ldrb	w0, [x19, #3512]
    914c:	cbnz	w0, 9174 <PyObject_Calloc@plt+0xd4>
    9150:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9154:	ldr	x0, [x0, #3888]
    9158:	cbz	x0, 9168 <PyObject_Calloc@plt+0xc8>
    915c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    9160:	ldr	x0, [x0, #1840]
    9164:	bl	84c0 <__cxa_finalize@plt>
    9168:	bl	90c8 <PyObject_Calloc@plt+0x28>
    916c:	mov	w0, #0x1                   	// #1
    9170:	strb	w0, [x19, #3512]
    9174:	ldr	x19, [sp, #16]
    9178:	ldp	x29, x30, [sp], #32
    917c:	ret
    9180:	b	90f8 <PyObject_Calloc@plt+0x58>

0000000000009184 <MyList_dealloc@@Base>:
    9184:	stp	x29, x30, [sp, #-16]!
    9188:	mov	x29, sp
    918c:	ldr	w8, [x0, #40]
    9190:	cbnz	w8, 91b0 <MyList_dealloc@@Base+0x2c>
    9194:	mov	w8, #0x1                   	// #1
    9198:	str	w8, [x0, #40]
    919c:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    91a0:	ldr	x8, [x8, #4064]
    91a4:	ldr	x1, [x8, #48]
    91a8:	ldp	x29, x30, [sp], #16
    91ac:	br	x1
    91b0:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e44>
    91b4:	add	x0, x0, #0x7ce
    91b8:	bl	8ab0 <Py_FatalError@plt>

00000000000091bc <PyInit__testcapi@@Base>:
    91bc:	stp	x29, x30, [sp, #-48]!
    91c0:	str	x21, [sp, #16]
    91c4:	stp	x20, x19, [sp, #32]
    91c8:	mov	x29, sp
    91cc:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    91d0:	add	x0, x0, #0x738
    91d4:	mov	w1, #0x3f5                 	// #1013
    91d8:	bl	8990 <PyModule_Create2@plt>
    91dc:	mov	x19, x0
    91e0:	cbz	x0, 98ac <PyInit__testcapi@@Base+0x6f0>
    91e4:	adrp	x2, 27000 <PyInit__testcapi@@Base+0x1de44>
    91e8:	add	x2, x2, #0x940
    91ec:	adrp	x10, 26000 <PyInit__testcapi@@Base+0x1ce44>
    91f0:	ldr	x9, [x2]
    91f4:	ldr	x10, [x10, #4008]
    91f8:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    91fc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9200:	add	x1, x1, #0x7f0
    9204:	str	x10, [x8, #1960]
    9208:	add	x8, x9, #0x1
    920c:	mov	x0, x19
    9210:	stp	x8, x10, [x2]
    9214:	bl	8d60 <PyModule_AddObject@plt>
    9218:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de44>
    921c:	add	x20, x20, #0xae0
    9220:	mov	x0, x20
    9224:	bl	8830 <PyType_Ready@plt>
    9228:	tbnz	w0, #31, 98a8 <PyInit__testcapi@@Base+0x6ec>
    922c:	ldr	x8, [x20]
    9230:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9234:	add	x1, x1, #0x808
    9238:	mov	x0, x19
    923c:	add	x8, x8, #0x1
    9240:	mov	x2, x20
    9244:	str	x8, [x20]
    9248:	bl	8d60 <PyModule_AddObject@plt>
    924c:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de44>
    9250:	add	x20, x20, #0xc80
    9254:	mov	x0, x20
    9258:	bl	8830 <PyType_Ready@plt>
    925c:	tbnz	w0, #31, 98a8 <PyInit__testcapi@@Base+0x6ec>
    9260:	ldr	x8, [x20]
    9264:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9268:	add	x1, x1, #0x813
    926c:	mov	x0, x19
    9270:	add	x8, x8, #0x1
    9274:	mov	x2, x20
    9278:	str	x8, [x20]
    927c:	bl	8d60 <PyModule_AddObject@plt>
    9280:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de44>
    9284:	add	x20, x20, #0xe20
    9288:	mov	x0, x20
    928c:	bl	8830 <PyType_Ready@plt>
    9290:	tbnz	w0, #31, 98a8 <PyInit__testcapi@@Base+0x6ec>
    9294:	ldr	x8, [x20]
    9298:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    929c:	add	x1, x1, #0x81c
    92a0:	mov	x0, x19
    92a4:	add	x8, x8, #0x1
    92a8:	mov	x2, x20
    92ac:	str	x8, [x20]
    92b0:	bl	8d60 <PyModule_AddObject@plt>
    92b4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    92b8:	ldr	x8, [x8, #4064]
    92bc:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de44>
    92c0:	add	x20, x20, #0xfc0
    92c4:	mov	x0, x20
    92c8:	str	x8, [x20, #256]
    92cc:	bl	8830 <PyType_Ready@plt>
    92d0:	tbnz	w0, #31, 98a8 <PyInit__testcapi@@Base+0x6ec>
    92d4:	ldr	x8, [x20]
    92d8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    92dc:	add	x1, x1, #0x826
    92e0:	mov	x0, x19
    92e4:	add	x8, x8, #0x1
    92e8:	mov	x2, x20
    92ec:	str	x8, [x20]
    92f0:	bl	8d60 <PyModule_AddObject@plt>
    92f4:	str	xzr, [x20, #408]
    92f8:	adrp	x20, 28000 <PyInit__testcapi@@Base+0x1ee44>
    92fc:	add	x20, x20, #0x160
    9300:	mov	x0, x20
    9304:	bl	8830 <PyType_Ready@plt>
    9308:	tbnz	w0, #31, 98a8 <PyInit__testcapi@@Base+0x6ec>
    930c:	ldr	x8, [x20]
    9310:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9314:	add	x1, x1, #0x82d
    9318:	mov	x0, x19
    931c:	add	x8, x8, #0x1
    9320:	mov	x2, x20
    9324:	str	x8, [x20]
    9328:	bl	8d60 <PyModule_AddObject@plt>
    932c:	adrp	x21, 28000 <PyInit__testcapi@@Base+0x1ee44>
    9330:	add	x21, x21, #0x300
    9334:	mov	x0, x21
    9338:	str	x20, [x21, #256]
    933c:	bl	8830 <PyType_Ready@plt>
    9340:	tbnz	w0, #31, 98a8 <PyInit__testcapi@@Base+0x6ec>
    9344:	ldr	x8, [x21]
    9348:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    934c:	add	x1, x1, #0x842
    9350:	mov	x0, x19
    9354:	add	x8, x8, #0x1
    9358:	mov	x2, x21
    935c:	str	x8, [x21]
    9360:	bl	8d60 <PyModule_AddObject@plt>
    9364:	adrp	x21, 28000 <PyInit__testcapi@@Base+0x1ee44>
    9368:	add	x21, x21, #0x4a0
    936c:	mov	x0, x21
    9370:	str	x20, [x21, #256]
    9374:	bl	8830 <PyType_Ready@plt>
    9378:	tbnz	w0, #31, 98a8 <PyInit__testcapi@@Base+0x6ec>
    937c:	ldr	x8, [x21]
    9380:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9384:	add	x1, x1, #0x85a
    9388:	mov	x0, x19
    938c:	add	x8, x8, #0x1
    9390:	mov	x2, x21
    9394:	str	x8, [x21]
    9398:	bl	8d60 <PyModule_AddObject@plt>
    939c:	adrp	x21, 28000 <PyInit__testcapi@@Base+0x1ee44>
    93a0:	add	x21, x21, #0x640
    93a4:	mov	x0, x21
    93a8:	str	x20, [x21, #256]
    93ac:	bl	8830 <PyType_Ready@plt>
    93b0:	tbnz	w0, #31, 98a8 <PyInit__testcapi@@Base+0x6ec>
    93b4:	ldr	x8, [x21]
    93b8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    93bc:	add	x1, x1, #0x871
    93c0:	mov	x0, x19
    93c4:	add	x8, x8, #0x1
    93c8:	mov	x2, x21
    93cc:	str	x8, [x21]
    93d0:	bl	8d60 <PyModule_AddObject@plt>
    93d4:	adrp	x20, 28000 <PyInit__testcapi@@Base+0x1ee44>
    93d8:	add	x20, x20, #0x7e0
    93dc:	mov	x0, x20
    93e0:	bl	8830 <PyType_Ready@plt>
    93e4:	tbnz	w0, #31, 98a8 <PyInit__testcapi@@Base+0x6ec>
    93e8:	ldr	x8, [x20]
    93ec:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    93f0:	add	x1, x1, #0x883
    93f4:	mov	x0, x19
    93f8:	add	x8, x8, #0x1
    93fc:	mov	x2, x20
    9400:	str	x8, [x20]
    9404:	bl	8d60 <PyModule_AddObject@plt>
    9408:	adrp	x20, 28000 <PyInit__testcapi@@Base+0x1ee44>
    940c:	add	x20, x20, #0x980
    9410:	mov	x0, x20
    9414:	bl	8830 <PyType_Ready@plt>
    9418:	tbnz	w0, #31, 98a8 <PyInit__testcapi@@Base+0x6ec>
    941c:	ldr	x8, [x20]
    9420:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9424:	add	x1, x1, #0x890
    9428:	mov	x0, x19
    942c:	add	x8, x8, #0x1
    9430:	mov	x2, x20
    9434:	str	x8, [x20]
    9438:	bl	8d60 <PyModule_AddObject@plt>
    943c:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9440:	ldr	x8, [x8, #3936]
    9444:	adrp	x20, 28000 <PyInit__testcapi@@Base+0x1ee44>
    9448:	add	x20, x20, #0xb20
    944c:	mov	x0, x20
    9450:	ldr	x8, [x8]
    9454:	str	x8, [x20, #256]
    9458:	bl	8830 <PyType_Ready@plt>
    945c:	tbnz	w0, #31, 98a8 <PyInit__testcapi@@Base+0x6ec>
    9460:	ldr	x8, [x20]
    9464:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9468:	add	x1, x1, #0x898
    946c:	mov	x0, x19
    9470:	add	x8, x8, #0x1
    9474:	mov	x2, x20
    9478:	str	x8, [x20]
    947c:	bl	8d60 <PyModule_AddObject@plt>
    9480:	mov	w0, #0xff                  	// #255
    9484:	bl	8840 <PyLong_FromLong@plt>
    9488:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    948c:	mov	x2, x0
    9490:	add	x1, x1, #0x8bb
    9494:	mov	x0, x19
    9498:	bl	8d60 <PyModule_AddObject@plt>
    949c:	mov	x0, xzr
    94a0:	bl	8840 <PyLong_FromLong@plt>
    94a4:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    94a8:	mov	x2, x0
    94ac:	add	x1, x1, #0x8b1
    94b0:	mov	x0, x19
    94b4:	bl	8d60 <PyModule_AddObject@plt>
    94b8:	mov	w0, #0xff                  	// #255
    94bc:	bl	8840 <PyLong_FromLong@plt>
    94c0:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    94c4:	mov	x2, x0
    94c8:	add	x1, x1, #0x8ba
    94cc:	mov	x0, x19
    94d0:	bl	8d60 <PyModule_AddObject@plt>
    94d4:	mov	w0, #0x7fff                	// #32767
    94d8:	bl	8840 <PyLong_FromLong@plt>
    94dc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    94e0:	mov	x2, x0
    94e4:	add	x1, x1, #0x8ce
    94e8:	mov	x0, x19
    94ec:	bl	8d60 <PyModule_AddObject@plt>
    94f0:	mov	x0, #0xffffffffffff8000    	// #-32768
    94f4:	bl	8840 <PyLong_FromLong@plt>
    94f8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    94fc:	mov	x2, x0
    9500:	add	x1, x1, #0x8c4
    9504:	mov	x0, x19
    9508:	bl	8d60 <PyModule_AddObject@plt>
    950c:	mov	w0, #0xffff                	// #65535
    9510:	bl	8840 <PyLong_FromLong@plt>
    9514:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9518:	mov	x2, x0
    951c:	add	x1, x1, #0x8cd
    9520:	mov	x0, x19
    9524:	bl	8d60 <PyModule_AddObject@plt>
    9528:	mov	w0, #0x7fffffff            	// #2147483647
    952c:	bl	8840 <PyLong_FromLong@plt>
    9530:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9534:	mov	x2, x0
    9538:	add	x1, x1, #0x8e0
    953c:	mov	x0, x19
    9540:	bl	8d60 <PyModule_AddObject@plt>
    9544:	mov	x0, #0xffffffff80000000    	// #-2147483648
    9548:	bl	8840 <PyLong_FromLong@plt>
    954c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9550:	mov	x2, x0
    9554:	add	x1, x1, #0x8d7
    9558:	mov	x0, x19
    955c:	bl	8d60 <PyModule_AddObject@plt>
    9560:	mov	w0, #0xffffffff            	// #-1
    9564:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    9568:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    956c:	mov	x2, x0
    9570:	add	x1, x1, #0x8df
    9574:	mov	x0, x19
    9578:	bl	8d60 <PyModule_AddObject@plt>
    957c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    9580:	bl	8840 <PyLong_FromLong@plt>
    9584:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9588:	mov	x2, x0
    958c:	add	x1, x1, #0xd58
    9590:	mov	x0, x19
    9594:	bl	8d60 <PyModule_AddObject@plt>
    9598:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    959c:	bl	8840 <PyLong_FromLong@plt>
    95a0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    95a4:	mov	x2, x0
    95a8:	add	x1, x1, #0xd77
    95ac:	mov	x0, x19
    95b0:	bl	8d60 <PyModule_AddObject@plt>
    95b4:	mov	x0, #0xffffffffffffffff    	// #-1
    95b8:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    95bc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    95c0:	mov	x2, x0
    95c4:	add	x1, x1, #0x8e8
    95c8:	mov	x0, x19
    95cc:	bl	8d60 <PyModule_AddObject@plt>
    95d0:	mov	x8, #0xffffe0000000        	// #281474439839744
    95d4:	movk	x8, #0x47ef, lsl #48
    95d8:	fmov	d0, x8
    95dc:	bl	8800 <PyFloat_FromDouble@plt>
    95e0:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    95e4:	mov	x2, x0
    95e8:	add	x1, x1, #0x8f2
    95ec:	mov	x0, x19
    95f0:	bl	8d60 <PyModule_AddObject@plt>
    95f4:	mov	x8, #0x3810000000000000    	// #4039728865751334912
    95f8:	fmov	d0, x8
    95fc:	bl	8800 <PyFloat_FromDouble@plt>
    9600:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9604:	mov	x2, x0
    9608:	add	x1, x1, #0x8fa
    960c:	mov	x0, x19
    9610:	bl	8d60 <PyModule_AddObject@plt>
    9614:	mov	x8, #0x7fefffffffffffff    	// #9218868437227405311
    9618:	fmov	d0, x8
    961c:	bl	8800 <PyFloat_FromDouble@plt>
    9620:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9624:	mov	x2, x0
    9628:	add	x1, x1, #0x902
    962c:	mov	x0, x19
    9630:	bl	8d60 <PyModule_AddObject@plt>
    9634:	mov	x8, #0x10000000000000      	// #4503599627370496
    9638:	fmov	d0, x8
    963c:	bl	8800 <PyFloat_FromDouble@plt>
    9640:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9644:	mov	x2, x0
    9648:	add	x1, x1, #0x90a
    964c:	mov	x0, x19
    9650:	bl	8d60 <PyModule_AddObject@plt>
    9654:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    9658:	bl	8ef0 <PyLong_FromLongLong@plt>
    965c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9660:	mov	x2, x0
    9664:	add	x1, x1, #0x913
    9668:	mov	x0, x19
    966c:	bl	8d60 <PyModule_AddObject@plt>
    9670:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    9674:	bl	8ef0 <PyLong_FromLongLong@plt>
    9678:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    967c:	mov	x2, x0
    9680:	add	x1, x1, #0x906
    9684:	mov	x0, x19
    9688:	bl	8d60 <PyModule_AddObject@plt>
    968c:	mov	x0, #0xffffffffffffffff    	// #-1
    9690:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
    9694:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9698:	mov	x2, x0
    969c:	add	x1, x1, #0x912
    96a0:	mov	x0, x19
    96a4:	bl	8d60 <PyModule_AddObject@plt>
    96a8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    96ac:	bl	87f0 <PyLong_FromSsize_t@plt>
    96b0:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    96b4:	mov	x2, x0
    96b8:	add	x1, x1, #0x91d
    96bc:	mov	x0, x19
    96c0:	bl	8d60 <PyModule_AddObject@plt>
    96c4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    96c8:	bl	87f0 <PyLong_FromSsize_t@plt>
    96cc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    96d0:	mov	x2, x0
    96d4:	add	x1, x1, #0x92c
    96d8:	mov	x0, x19
    96dc:	bl	8d60 <PyModule_AddObject@plt>
    96e0:	mov	w0, #0x10                  	// #16
    96e4:	bl	87f0 <PyLong_FromSsize_t@plt>
    96e8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    96ec:	mov	x2, x0
    96f0:	add	x1, x1, #0x93b
    96f4:	mov	x0, x19
    96f8:	bl	8d60 <PyModule_AddObject@plt>
    96fc:	mov	w0, #0x8                   	// #8
    9700:	bl	87f0 <PyLong_FromSsize_t@plt>
    9704:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9708:	mov	x2, x0
    970c:	add	x1, x1, #0x94c
    9710:	mov	x0, x19
    9714:	bl	8d60 <PyModule_AddObject@plt>
    9718:	adrp	x2, 26000 <PyInit__testcapi@@Base+0x1ce44>
    971c:	ldr	x2, [x2, #3912]
    9720:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9724:	add	x1, x1, #0x95a
    9728:	mov	x0, x19
    972c:	ldr	x8, [x2]
    9730:	add	x8, x8, #0x1
    9734:	str	x8, [x2]
    9738:	bl	8d60 <PyModule_AddObject@plt>
    973c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    9740:	add	x1, x1, #0x969
    9744:	mov	w2, #0x3                   	// #3
    9748:	mov	x0, x19
    974c:	bl	8320 <PyModule_AddIntConstant@plt>
    9750:	adrp	x2, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9754:	ldr	x2, [x2, #4032]
    9758:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    975c:	add	x1, x1, #0x97a
    9760:	mov	x0, x19
    9764:	ldr	x8, [x2]
    9768:	add	x8, x8, #0x1
    976c:	str	x8, [x2]
    9770:	bl	8d60 <PyModule_AddObject@plt>
    9774:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e44>
    9778:	add	x0, x0, #0x988
    977c:	mov	x1, xzr
    9780:	mov	x2, xzr
    9784:	bl	88a0 <PyErr_NewException@plt>
    9788:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    978c:	str	x0, [x8, #3520]
    9790:	ldr	x8, [x0]
    9794:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    9798:	mov	x2, x0
    979c:	add	x1, x1, #0x12f
    97a0:	add	x8, x8, #0x1
    97a4:	str	x8, [x0]
    97a8:	mov	x0, x19
    97ac:	bl	8d60 <PyModule_AddObject@plt>
    97b0:	adrp	x0, 28000 <PyInit__testcapi@@Base+0x1ee44>
    97b4:	add	x0, x0, #0xcc0
    97b8:	bl	8ff0 <PyType_FromSpec@plt>
    97bc:	cbz	x0, 98a8 <PyInit__testcapi@@Base+0x6ec>
    97c0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    97c4:	mov	x2, x0
    97c8:	add	x1, x1, #0x645
    97cc:	mov	x0, x19
    97d0:	bl	8d60 <PyModule_AddObject@plt>
    97d4:	adrp	x0, 28000 <PyInit__testcapi@@Base+0x1ee44>
    97d8:	add	x0, x0, #0xce0
    97dc:	bl	8ff0 <PyType_FromSpec@plt>
    97e0:	cbz	x0, 98a8 <PyInit__testcapi@@Base+0x6ec>
    97e4:	mov	x1, x0
    97e8:	mov	w0, #0x1                   	// #1
    97ec:	bl	9040 <PyTuple_Pack@plt>
    97f0:	cbz	x0, 98a8 <PyInit__testcapi@@Base+0x6ec>
    97f4:	mov	x21, x0
    97f8:	adrp	x0, 28000 <PyInit__testcapi@@Base+0x1ee44>
    97fc:	add	x0, x0, #0xd00
    9800:	mov	x1, x21
    9804:	bl	8f50 <PyType_FromSpecWithBases@plt>
    9808:	cbz	x0, 98a8 <PyInit__testcapi@@Base+0x6ec>
    980c:	ldr	x8, [x21]
    9810:	mov	x20, x0
    9814:	subs	x8, x8, #0x1
    9818:	str	x8, [x21]
    981c:	b.ne	9828 <PyInit__testcapi@@Base+0x66c>  // b.any
    9820:	mov	x0, x21
    9824:	bl	8560 <_Py_Dealloc@plt>
    9828:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    982c:	add	x1, x1, #0x66f
    9830:	mov	x0, x19
    9834:	mov	x2, x20
    9838:	bl	8d60 <PyModule_AddObject@plt>
    983c:	mov	w0, #0x1                   	// #1
    9840:	mov	x1, x20
    9844:	bl	9040 <PyTuple_Pack@plt>
    9848:	cbz	x0, 98a8 <PyInit__testcapi@@Base+0x6ec>
    984c:	mov	x20, x0
    9850:	adrp	x0, 28000 <PyInit__testcapi@@Base+0x1ee44>
    9854:	add	x0, x0, #0xd20
    9858:	mov	x1, x20
    985c:	bl	8f50 <PyType_FromSpecWithBases@plt>
    9860:	cbz	x0, 98a8 <PyInit__testcapi@@Base+0x6ec>
    9864:	ldr	x8, [x20]
    9868:	mov	x21, x0
    986c:	subs	x8, x8, #0x1
    9870:	str	x8, [x20]
    9874:	b.ne	9880 <PyInit__testcapi@@Base+0x6c4>  // b.any
    9878:	mov	x0, x20
    987c:	bl	8560 <_Py_Dealloc@plt>
    9880:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    9884:	add	x1, x1, #0x692
    9888:	mov	x0, x19
    988c:	mov	x2, x21
    9890:	bl	8d60 <PyModule_AddObject@plt>
    9894:	adrp	x1, 27000 <PyInit__testcapi@@Base+0x1de44>
    9898:	add	x1, x1, #0x738
    989c:	mov	x0, x19
    98a0:	bl	8d20 <PyState_AddModule@plt>
    98a4:	b	98ac <PyInit__testcapi@@Base+0x6f0>
    98a8:	mov	x19, xzr
    98ac:	mov	x0, x19
    98b0:	ldp	x20, x19, [sp, #32]
    98b4:	ldr	x21, [sp, #16]
    98b8:	ldp	x29, x30, [sp], #48
    98bc:	ret
    98c0:	sub	sp, sp, #0x30
    98c4:	stp	x29, x30, [sp, #16]
    98c8:	stp	x20, x19, [sp, #32]
    98cc:	add	x29, sp, #0x10
    98d0:	mov	x0, x1
    98d4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    98d8:	add	x1, x1, #0x69d
    98dc:	add	x2, sp, #0x8
    98e0:	add	x3, sp, #0x4
    98e4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    98e8:	cbz	w0, 9954 <PyInit__testcapi@@Base+0x798>
    98ec:	ldrsw	x0, [sp, #4]
    98f0:	bl	8920 <PyTuple_New@plt>
    98f4:	cbz	x0, 9954 <PyInit__testcapi@@Base+0x798>
    98f8:	ldr	w8, [sp, #4]
    98fc:	mov	x19, x0
    9900:	cmp	w8, #0x1
    9904:	b.lt	9930 <PyInit__testcapi@@Base+0x774>  // b.tstop
    9908:	mov	w20, #0x3                   	// #3
    990c:	sub	x0, x20, #0x3
    9910:	bl	8840 <PyLong_FromLong@plt>
    9914:	cbz	x0, 993c <PyInit__testcapi@@Base+0x780>
    9918:	str	x0, [x19, x20, lsl #3]
    991c:	ldrsw	x8, [sp, #4]
    9920:	sub	x9, x20, #0x2
    9924:	add	x20, x20, #0x1
    9928:	cmp	x9, x8
    992c:	b.lt	990c <PyInit__testcapi@@Base+0x750>  // b.tstop
    9930:	ldr	x0, [sp, #8]
    9934:	mov	x1, x19
    9938:	bl	8580 <PyErr_SetObject@plt>
    993c:	ldr	x8, [x19]
    9940:	subs	x8, x8, #0x1
    9944:	str	x8, [x19]
    9948:	b.ne	9954 <PyInit__testcapi@@Base+0x798>  // b.any
    994c:	mov	x0, x19
    9950:	bl	8560 <_Py_Dealloc@plt>
    9954:	ldp	x20, x19, [sp, #32]
    9958:	ldp	x29, x30, [sp, #16]
    995c:	mov	x0, xzr
    9960:	add	sp, sp, #0x30
    9964:	ret
    9968:	stp	x29, x30, [sp, #-16]!
    996c:	mov	x29, sp
    9970:	bl	8570 <PyErr_NoMemory@plt>
    9974:	mov	x0, xzr
    9978:	ldp	x29, x30, [sp], #16
    997c:	ret
    9980:	stp	x29, x30, [sp, #-32]!
    9984:	str	x19, [sp, #16]
    9988:	mov	x29, sp
    998c:	mov	x0, x1
    9990:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9994:	add	x1, x1, #0x6b0
    9998:	add	x2, x29, #0x1c
    999c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    99a0:	cbz	w0, 99c8 <PyInit__testcapi@@Base+0x80c>
    99a4:	ldr	w19, [x29, #28]
    99a8:	bl	8f40 <__errno_location@plt>
    99ac:	str	w19, [x0]
    99b0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    99b4:	ldr	x0, [x0, #4016]
    99b8:	ldr	x8, [x0]
    99bc:	add	x8, x8, #0x1
    99c0:	str	x8, [x0]
    99c4:	b	99cc <PyInit__testcapi@@Base+0x810>
    99c8:	mov	x0, xzr
    99cc:	ldr	x19, [sp, #16]
    99d0:	ldp	x29, x30, [sp], #32
    99d4:	ret
    99d8:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    99dc:	ldr	x0, [x0, #4016]
    99e0:	ldr	x8, [x0]
    99e4:	add	x8, x8, #0x1
    99e8:	str	x8, [x0]
    99ec:	ret
    99f0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    99f4:	ldr	x0, [x0, #4016]
    99f8:	ldr	x8, [x0]
    99fc:	add	x8, x8, #0x1
    9a00:	str	x8, [x0]
    9a04:	ret
    9a08:	stp	x29, x30, [sp, #-32]!
    9a0c:	str	x19, [sp, #16]
    9a10:	mov	x29, sp
    9a14:	adrp	x19, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9a18:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9a1c:	ldr	x10, [x19, #3528]
    9a20:	ldr	w8, [x9, #3536]
    9a24:	cbz	x10, 9a4c <PyInit__testcapi@@Base+0x890>
    9a28:	cbnz	w8, 9a6c <PyInit__testcapi@@Base+0x8b0>
    9a2c:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9a30:	ldr	x8, [x8, #4024]
    9a34:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9a38:	add	x1, x1, #0x6bc
    9a3c:	ldr	x0, [x8]
    9a40:	bl	8670 <PyErr_SetString@plt>
    9a44:	mov	x0, xzr
    9a48:	b	9a80 <PyInit__testcapi@@Base+0x8c4>
    9a4c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    9a50:	add	w8, w8, #0x1
    9a54:	add	x0, x0, #0x6e0
    9a58:	mov	w1, wzr
    9a5c:	str	w8, [x9, #3536]
    9a60:	bl	8820 <PyCapsule_Import@plt>
    9a64:	str	x0, [x19, #3528]
    9a68:	cbz	x0, 9a80 <PyInit__testcapi@@Base+0x8c4>
    9a6c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9a70:	ldr	x0, [x0, #4016]
    9a74:	ldr	x8, [x0]
    9a78:	add	x8, x8, #0x1
    9a7c:	str	x8, [x0]
    9a80:	ldr	x19, [sp, #16]
    9a84:	ldp	x29, x30, [sp], #32
    9a88:	ret
    9a8c:	sub	sp, sp, #0x20
    9a90:	stp	x29, x30, [sp, #16]
    9a94:	add	x29, sp, #0x10
    9a98:	mov	x0, x1
    9a9c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9aa0:	add	x1, x1, #0x6f7
    9aa4:	add	x2, sp, #0x8
    9aa8:	add	x3, sp, #0x4
    9aac:	str	wzr, [sp, #4]
    9ab0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9ab4:	cbz	w0, 9ae8 <PyInit__testcapi@@Base+0x92c>
    9ab8:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9abc:	ldr	x8, [sp, #8]
    9ac0:	ldr	x9, [x9, #3528]
    9ac4:	ldr	w10, [sp, #4]
    9ac8:	ldr	x0, [x8, #8]
    9acc:	ldr	x1, [x9]
    9ad0:	cbz	w10, 9af0 <PyInit__testcapi@@Base+0x934>
    9ad4:	cmp	x0, x1
    9ad8:	b.eq	9b00 <PyInit__testcapi@@Base+0x944>  // b.none
    9adc:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9ae0:	ldr	x0, [x0, #3984]
    9ae4:	b	9b08 <PyInit__testcapi@@Base+0x94c>
    9ae8:	mov	x0, xzr
    9aec:	b	9b14 <PyInit__testcapi@@Base+0x958>
    9af0:	cmp	x0, x1
    9af4:	b.eq	9b00 <PyInit__testcapi@@Base+0x944>  // b.none
    9af8:	bl	8e20 <PyType_IsSubtype@plt>
    9afc:	cbz	w0, 9adc <PyInit__testcapi@@Base+0x920>
    9b00:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9b04:	ldr	x0, [x0, #4032]
    9b08:	ldr	x8, [x0]
    9b0c:	add	x8, x8, #0x1
    9b10:	str	x8, [x0]
    9b14:	ldp	x29, x30, [sp, #16]
    9b18:	add	sp, sp, #0x20
    9b1c:	ret
    9b20:	sub	sp, sp, #0x20
    9b24:	stp	x29, x30, [sp, #16]
    9b28:	add	x29, sp, #0x10
    9b2c:	mov	x0, x1
    9b30:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9b34:	add	x1, x1, #0x6f7
    9b38:	add	x2, sp, #0x8
    9b3c:	add	x3, sp, #0x4
    9b40:	str	wzr, [sp, #4]
    9b44:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9b48:	cbz	w0, 9b7c <PyInit__testcapi@@Base+0x9c0>
    9b4c:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9b50:	ldr	x8, [sp, #8]
    9b54:	ldr	x9, [x9, #3528]
    9b58:	ldr	w10, [sp, #4]
    9b5c:	ldr	x0, [x8, #8]
    9b60:	ldr	x1, [x9, #16]
    9b64:	cbz	w10, 9b84 <PyInit__testcapi@@Base+0x9c8>
    9b68:	cmp	x0, x1
    9b6c:	b.eq	9b94 <PyInit__testcapi@@Base+0x9d8>  // b.none
    9b70:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9b74:	ldr	x0, [x0, #3984]
    9b78:	b	9b9c <PyInit__testcapi@@Base+0x9e0>
    9b7c:	mov	x0, xzr
    9b80:	b	9ba8 <PyInit__testcapi@@Base+0x9ec>
    9b84:	cmp	x0, x1
    9b88:	b.eq	9b94 <PyInit__testcapi@@Base+0x9d8>  // b.none
    9b8c:	bl	8e20 <PyType_IsSubtype@plt>
    9b90:	cbz	w0, 9b70 <PyInit__testcapi@@Base+0x9b4>
    9b94:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9b98:	ldr	x0, [x0, #4032]
    9b9c:	ldr	x8, [x0]
    9ba0:	add	x8, x8, #0x1
    9ba4:	str	x8, [x0]
    9ba8:	ldp	x29, x30, [sp, #16]
    9bac:	add	sp, sp, #0x20
    9bb0:	ret
    9bb4:	sub	sp, sp, #0x20
    9bb8:	stp	x29, x30, [sp, #16]
    9bbc:	add	x29, sp, #0x10
    9bc0:	mov	x0, x1
    9bc4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9bc8:	add	x1, x1, #0x6f7
    9bcc:	add	x2, sp, #0x8
    9bd0:	add	x3, sp, #0x4
    9bd4:	str	wzr, [sp, #4]
    9bd8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9bdc:	cbz	w0, 9c10 <PyInit__testcapi@@Base+0xa54>
    9be0:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9be4:	ldr	x8, [sp, #8]
    9be8:	ldr	x9, [x9, #3528]
    9bec:	ldr	w10, [sp, #4]
    9bf0:	ldr	x0, [x8, #8]
    9bf4:	ldr	x1, [x9, #8]
    9bf8:	cbz	w10, 9c18 <PyInit__testcapi@@Base+0xa5c>
    9bfc:	cmp	x0, x1
    9c00:	b.eq	9c28 <PyInit__testcapi@@Base+0xa6c>  // b.none
    9c04:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9c08:	ldr	x0, [x0, #3984]
    9c0c:	b	9c30 <PyInit__testcapi@@Base+0xa74>
    9c10:	mov	x0, xzr
    9c14:	b	9c3c <PyInit__testcapi@@Base+0xa80>
    9c18:	cmp	x0, x1
    9c1c:	b.eq	9c28 <PyInit__testcapi@@Base+0xa6c>  // b.none
    9c20:	bl	8e20 <PyType_IsSubtype@plt>
    9c24:	cbz	w0, 9c04 <PyInit__testcapi@@Base+0xa48>
    9c28:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9c2c:	ldr	x0, [x0, #4032]
    9c30:	ldr	x8, [x0]
    9c34:	add	x8, x8, #0x1
    9c38:	str	x8, [x0]
    9c3c:	ldp	x29, x30, [sp, #16]
    9c40:	add	sp, sp, #0x20
    9c44:	ret
    9c48:	sub	sp, sp, #0x20
    9c4c:	stp	x29, x30, [sp, #16]
    9c50:	add	x29, sp, #0x10
    9c54:	mov	x0, x1
    9c58:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9c5c:	add	x1, x1, #0x6f7
    9c60:	add	x2, sp, #0x8
    9c64:	add	x3, sp, #0x4
    9c68:	str	wzr, [sp, #4]
    9c6c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9c70:	cbz	w0, 9ca4 <PyInit__testcapi@@Base+0xae8>
    9c74:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9c78:	ldr	x8, [sp, #8]
    9c7c:	ldr	x9, [x9, #3528]
    9c80:	ldr	w10, [sp, #4]
    9c84:	ldr	x0, [x8, #8]
    9c88:	ldr	x1, [x9, #24]
    9c8c:	cbz	w10, 9cac <PyInit__testcapi@@Base+0xaf0>
    9c90:	cmp	x0, x1
    9c94:	b.eq	9cbc <PyInit__testcapi@@Base+0xb00>  // b.none
    9c98:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9c9c:	ldr	x0, [x0, #3984]
    9ca0:	b	9cc4 <PyInit__testcapi@@Base+0xb08>
    9ca4:	mov	x0, xzr
    9ca8:	b	9cd0 <PyInit__testcapi@@Base+0xb14>
    9cac:	cmp	x0, x1
    9cb0:	b.eq	9cbc <PyInit__testcapi@@Base+0xb00>  // b.none
    9cb4:	bl	8e20 <PyType_IsSubtype@plt>
    9cb8:	cbz	w0, 9c98 <PyInit__testcapi@@Base+0xadc>
    9cbc:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9cc0:	ldr	x0, [x0, #4032]
    9cc4:	ldr	x8, [x0]
    9cc8:	add	x8, x8, #0x1
    9ccc:	str	x8, [x0]
    9cd0:	ldp	x29, x30, [sp, #16]
    9cd4:	add	sp, sp, #0x20
    9cd8:	ret
    9cdc:	sub	sp, sp, #0x20
    9ce0:	stp	x29, x30, [sp, #16]
    9ce4:	add	x29, sp, #0x10
    9ce8:	mov	x0, x1
    9cec:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9cf0:	add	x1, x1, #0x6f7
    9cf4:	add	x2, sp, #0x8
    9cf8:	add	x3, sp, #0x4
    9cfc:	str	wzr, [sp, #4]
    9d00:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9d04:	cbz	w0, 9d38 <PyInit__testcapi@@Base+0xb7c>
    9d08:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9d0c:	ldr	x8, [sp, #8]
    9d10:	ldr	x9, [x9, #3528]
    9d14:	ldr	w10, [sp, #4]
    9d18:	ldr	x0, [x8, #8]
    9d1c:	ldr	x1, [x9, #32]
    9d20:	cbz	w10, 9d40 <PyInit__testcapi@@Base+0xb84>
    9d24:	cmp	x0, x1
    9d28:	b.eq	9d50 <PyInit__testcapi@@Base+0xb94>  // b.none
    9d2c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9d30:	ldr	x0, [x0, #3984]
    9d34:	b	9d58 <PyInit__testcapi@@Base+0xb9c>
    9d38:	mov	x0, xzr
    9d3c:	b	9d64 <PyInit__testcapi@@Base+0xba8>
    9d40:	cmp	x0, x1
    9d44:	b.eq	9d50 <PyInit__testcapi@@Base+0xb94>  // b.none
    9d48:	bl	8e20 <PyType_IsSubtype@plt>
    9d4c:	cbz	w0, 9d2c <PyInit__testcapi@@Base+0xb70>
    9d50:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    9d54:	ldr	x0, [x0, #4032]
    9d58:	ldr	x8, [x0]
    9d5c:	add	x8, x8, #0x1
    9d60:	str	x8, [x0]
    9d64:	ldp	x29, x30, [sp, #16]
    9d68:	add	sp, sp, #0x20
    9d6c:	ret
    9d70:	stp	x29, x30, [sp, #-64]!
    9d74:	str	x23, [sp, #16]
    9d78:	stp	x22, x21, [sp, #32]
    9d7c:	stp	x20, x19, [sp, #48]
    9d80:	mov	x29, sp
    9d84:	adrp	x22, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9d88:	ldr	x8, [x22, #3528]
    9d8c:	mov	w1, #0xffffb9b0            	// #-18000
    9d90:	mov	w3, #0x1                   	// #1
    9d94:	mov	w0, wzr
    9d98:	ldr	x9, [x8, #72]
    9d9c:	ldr	x4, [x8, #24]
    9da0:	mov	w2, wzr
    9da4:	blr	x9
    9da8:	mov	x19, x0
    9dac:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    9db0:	add	x0, x0, #0x6fb
    9db4:	bl	8d10 <PyUnicode_FromString@plt>
    9db8:	ldr	x8, [x22, #3528]
    9dbc:	mov	x20, x0
    9dc0:	mov	x0, x19
    9dc4:	mov	x1, x20
    9dc8:	ldr	x8, [x8, #80]
    9dcc:	blr	x8
    9dd0:	ldr	x8, [x22, #3528]
    9dd4:	mov	x21, x0
    9dd8:	mov	x0, x19
    9ddc:	mov	x1, x20
    9de0:	ldr	x8, [x8, #80]
    9de4:	blr	x8
    9de8:	ldr	x8, [x22, #3528]
    9dec:	mov	x22, x0
    9df0:	mov	x0, x19
    9df4:	mov	x1, xzr
    9df8:	ldr	x8, [x8, #80]
    9dfc:	blr	x8
    9e00:	mov	x23, x0
    9e04:	mov	x0, x19
    9e08:	bl	8be0 <Py_DecRef@plt>
    9e0c:	mov	x0, x20
    9e10:	bl	8be0 <Py_DecRef@plt>
    9e14:	mov	w0, #0x3                   	// #3
    9e18:	bl	8920 <PyTuple_New@plt>
    9e1c:	stp	x21, x22, [x0, #24]
    9e20:	str	x23, [x0, #40]
    9e24:	ldp	x20, x19, [sp, #48]
    9e28:	ldp	x22, x21, [sp, #32]
    9e2c:	ldr	x23, [sp, #16]
    9e30:	ldp	x29, x30, [sp], #64
    9e34:	ret
    9e38:	stp	x29, x30, [sp, #-64]!
    9e3c:	str	x23, [sp, #16]
    9e40:	stp	x22, x21, [sp, #32]
    9e44:	stp	x20, x19, [sp, #48]
    9e48:	mov	x29, sp
    9e4c:	adrp	x22, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9e50:	ldr	x8, [x22, #3528]
    9e54:	mov	w3, #0x1                   	// #1
    9e58:	mov	w0, wzr
    9e5c:	mov	w1, wzr
    9e60:	ldr	x9, [x8, #72]
    9e64:	ldr	x4, [x8, #24]
    9e68:	mov	w2, wzr
    9e6c:	blr	x9
    9e70:	mov	x19, x0
    9e74:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e44>
    9e78:	add	x0, x0, #0x433
    9e7c:	bl	8d10 <PyUnicode_FromString@plt>
    9e80:	ldr	x8, [x22, #3528]
    9e84:	mov	x20, x0
    9e88:	mov	x0, x19
    9e8c:	mov	x1, xzr
    9e90:	ldr	x8, [x8, #80]
    9e94:	blr	x8
    9e98:	ldr	x8, [x22, #3528]
    9e9c:	mov	x21, x0
    9ea0:	mov	x0, x19
    9ea4:	mov	x1, xzr
    9ea8:	ldr	x8, [x8, #80]
    9eac:	blr	x8
    9eb0:	ldr	x8, [x22, #3528]
    9eb4:	mov	x22, x0
    9eb8:	mov	x0, x19
    9ebc:	mov	x1, x20
    9ec0:	ldr	x8, [x8, #80]
    9ec4:	blr	x8
    9ec8:	mov	x23, x0
    9ecc:	mov	x0, x19
    9ed0:	bl	8be0 <Py_DecRef@plt>
    9ed4:	mov	x0, x20
    9ed8:	bl	8be0 <Py_DecRef@plt>
    9edc:	mov	w0, #0x3                   	// #3
    9ee0:	bl	8920 <PyTuple_New@plt>
    9ee4:	stp	x21, x22, [x0, #24]
    9ee8:	str	x23, [x0, #40]
    9eec:	ldp	x20, x19, [sp, #48]
    9ef0:	ldp	x22, x21, [sp, #32]
    9ef4:	ldr	x23, [sp, #16]
    9ef8:	ldp	x29, x30, [sp], #64
    9efc:	ret
    9f00:	sub	sp, sp, #0x20
    9f04:	stp	x29, x30, [sp, #16]
    9f08:	add	x29, sp, #0x10
    9f0c:	mov	x0, x1
    9f10:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9f14:	add	x1, x1, #0x6f8
    9f18:	sub	x2, x29, #0x4
    9f1c:	stur	wzr, [x29, #-4]
    9f20:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9f24:	cbz	w0, 9f44 <PyInit__testcapi@@Base+0xd88>
    9f28:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9f2c:	ldr	x8, [x8, #3528]
    9f30:	ldr	x0, [x8, #40]
    9f34:	ldr	x8, [x0]
    9f38:	add	x8, x8, #0x1
    9f3c:	str	x8, [x0]
    9f40:	b	9f48 <PyInit__testcapi@@Base+0xd8c>
    9f44:	mov	x0, xzr
    9f48:	ldp	x29, x30, [sp, #16]
    9f4c:	add	sp, sp, #0x20
    9f50:	ret
    9f54:	sub	sp, sp, #0x20
    9f58:	stp	x29, x30, [sp, #16]
    9f5c:	add	x29, sp, #0x10
    9f60:	mov	x0, x1
    9f64:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9f68:	add	x1, x1, #0x6ff
    9f6c:	sub	x2, x29, #0x4
    9f70:	add	x3, sp, #0x8
    9f74:	add	x4, sp, #0x4
    9f78:	mov	x5, sp
    9f7c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9f80:	cbz	w0, 9fa4 <PyInit__testcapi@@Base+0xde8>
    9f84:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9f88:	ldr	x8, [x8, #3528]
    9f8c:	ldp	w1, w0, [sp, #4]
    9f90:	ldr	w2, [sp]
    9f94:	ldr	x9, [x8, #48]
    9f98:	ldr	x3, [x8]
    9f9c:	blr	x9
    9fa0:	b	9fa8 <PyInit__testcapi@@Base+0xdec>
    9fa4:	mov	x0, xzr
    9fa8:	ldp	x29, x30, [sp, #16]
    9fac:	add	sp, sp, #0x20
    9fb0:	ret
    9fb4:	sub	sp, sp, #0x40
    9fb8:	stp	x29, x30, [sp, #48]
    9fbc:	add	x29, sp, #0x30
    9fc0:	mov	x0, x1
    9fc4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    9fc8:	add	x8, sp, #0x10
    9fcc:	add	x9, sp, #0x14
    9fd0:	add	x1, x1, #0x704
    9fd4:	sub	x2, x29, #0x4
    9fd8:	sub	x3, x29, #0x8
    9fdc:	sub	x4, x29, #0xc
    9fe0:	sub	x5, x29, #0x10
    9fe4:	sub	x6, x29, #0x14
    9fe8:	add	x7, sp, #0x18
    9fec:	stp	x9, x8, [sp]
    9ff0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9ff4:	cbz	w0, a02c <PyInit__testcapi@@Base+0xe70>
    9ff8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    9ffc:	ldr	x8, [x8, #3528]
    a000:	adrp	x7, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a004:	ldp	w1, w0, [x29, #-12]
    a008:	ldp	w3, w2, [x29, #-20]
    a00c:	ldp	w5, w4, [sp, #20]
    a010:	ldr	w6, [sp, #16]
    a014:	ldr	x9, [x8, #56]
    a018:	ldr	x8, [x8, #8]
    a01c:	ldr	x7, [x7, #4016]
    a020:	str	x8, [sp]
    a024:	blr	x9
    a028:	b	a030 <PyInit__testcapi@@Base+0xe74>
    a02c:	mov	x0, xzr
    a030:	ldp	x29, x30, [sp, #48]
    a034:	add	sp, sp, #0x40
    a038:	ret
    a03c:	sub	sp, sp, #0x50
    a040:	stp	x29, x30, [sp, #64]
    a044:	add	x29, sp, #0x40
    a048:	mov	x0, x1
    a04c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a050:	add	x8, sp, #0x1c
    a054:	add	x9, sp, #0x20
    a058:	sub	x10, x29, #0x1c
    a05c:	add	x1, x1, #0x70d
    a060:	sub	x2, x29, #0x4
    a064:	sub	x3, x29, #0x8
    a068:	sub	x4, x29, #0xc
    a06c:	sub	x5, x29, #0x10
    a070:	sub	x6, x29, #0x14
    a074:	sub	x7, x29, #0x18
    a078:	stp	x9, x8, [sp, #8]
    a07c:	str	x10, [sp]
    a080:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a084:	cbz	w0, a0c0 <PyInit__testcapi@@Base+0xf04>
    a088:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a08c:	ldr	x8, [x8, #3528]
    a090:	adrp	x7, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a094:	ldp	w1, w0, [x29, #-12]
    a098:	ldp	w3, w2, [x29, #-20]
    a09c:	ldr	x10, [x8, #104]
    a0a0:	ldr	x8, [x8, #8]
    a0a4:	ldp	w5, w4, [x29, #-28]
    a0a8:	ldp	w9, w6, [sp, #28]
    a0ac:	str	x8, [sp, #8]
    a0b0:	ldr	x7, [x7, #4016]
    a0b4:	str	w9, [sp]
    a0b8:	blr	x10
    a0bc:	b	a0c4 <PyInit__testcapi@@Base+0xf08>
    a0c0:	mov	x0, xzr
    a0c4:	ldp	x29, x30, [sp, #64]
    a0c8:	add	sp, sp, #0x50
    a0cc:	ret
    a0d0:	sub	sp, sp, #0x30
    a0d4:	stp	x29, x30, [sp, #32]
    a0d8:	add	x29, sp, #0x20
    a0dc:	mov	x0, x1
    a0e0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a0e4:	add	x1, x1, #0x717
    a0e8:	sub	x2, x29, #0x4
    a0ec:	sub	x3, x29, #0x8
    a0f0:	sub	x4, x29, #0xc
    a0f4:	add	x5, sp, #0x10
    a0f8:	add	x6, sp, #0xc
    a0fc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a100:	cbz	w0, a12c <PyInit__testcapi@@Base+0xf70>
    a104:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a108:	ldr	x8, [x8, #3528]
    a10c:	adrp	x4, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a110:	ldp	w1, w0, [x29, #-12]
    a114:	ldp	w3, w2, [sp, #12]
    a118:	ldr	x9, [x8, #64]
    a11c:	ldr	x5, [x8, #16]
    a120:	ldr	x4, [x4, #4016]
    a124:	blr	x9
    a128:	b	a130 <PyInit__testcapi@@Base+0xf74>
    a12c:	mov	x0, xzr
    a130:	ldp	x29, x30, [sp, #32]
    a134:	add	sp, sp, #0x30
    a138:	ret
    a13c:	sub	sp, sp, #0x30
    a140:	stp	x29, x30, [sp, #32]
    a144:	add	x29, sp, #0x20
    a148:	mov	x0, x1
    a14c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a150:	add	x1, x1, #0x71d
    a154:	sub	x2, x29, #0x4
    a158:	sub	x3, x29, #0x8
    a15c:	sub	x4, x29, #0xc
    a160:	add	x5, sp, #0x10
    a164:	add	x6, sp, #0xc
    a168:	add	x7, sp, #0x8
    a16c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a170:	cbz	w0, a1a0 <PyInit__testcapi@@Base+0xfe4>
    a174:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a178:	ldr	x8, [x8, #3528]
    a17c:	adrp	x4, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a180:	ldp	w1, w0, [x29, #-12]
    a184:	ldp	w3, w2, [sp, #12]
    a188:	ldr	w5, [sp, #8]
    a18c:	ldr	x9, [x8, #112]
    a190:	ldr	x6, [x8, #16]
    a194:	ldr	x4, [x4, #4016]
    a198:	blr	x9
    a19c:	b	a1a4 <PyInit__testcapi@@Base+0xfe8>
    a1a0:	mov	x0, xzr
    a1a4:	ldp	x29, x30, [sp, #32]
    a1a8:	add	sp, sp, #0x30
    a1ac:	ret
    a1b0:	sub	sp, sp, #0x20
    a1b4:	stp	x29, x30, [sp, #16]
    a1b8:	add	x29, sp, #0x10
    a1bc:	mov	x0, x1
    a1c0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a1c4:	add	x1, x1, #0x6ff
    a1c8:	sub	x2, x29, #0x4
    a1cc:	add	x3, sp, #0x8
    a1d0:	add	x4, sp, #0x4
    a1d4:	mov	x5, sp
    a1d8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a1dc:	cbz	w0, a204 <PyInit__testcapi@@Base+0x1048>
    a1e0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a1e4:	ldr	x8, [x8, #3528]
    a1e8:	ldp	w1, w0, [sp, #4]
    a1ec:	ldr	w2, [sp]
    a1f0:	mov	w3, #0x1                   	// #1
    a1f4:	ldr	x9, [x8, #72]
    a1f8:	ldr	x4, [x8, #24]
    a1fc:	blr	x9
    a200:	b	a208 <PyInit__testcapi@@Base+0x104c>
    a204:	mov	x0, xzr
    a208:	ldp	x29, x30, [sp, #16]
    a20c:	add	sp, sp, #0x20
    a210:	ret
    a214:	sub	sp, sp, #0x30
    a218:	stp	x29, x30, [sp, #16]
    a21c:	stp	x20, x19, [sp, #32]
    a220:	add	x29, sp, #0x10
    a224:	mov	x0, x1
    a228:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a22c:	add	x1, x1, #0x6f7
    a230:	add	x2, sp, #0x8
    a234:	add	x3, sp, #0x4
    a238:	str	xzr, [sp, #8]
    a23c:	str	wzr, [sp, #4]
    a240:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a244:	cbz	w0, a294 <PyInit__testcapi@@Base+0x10d8>
    a248:	ldr	x1, [sp, #8]
    a24c:	mov	w0, #0x1                   	// #1
    a250:	bl	9040 <PyTuple_Pack@plt>
    a254:	cbz	x0, a294 <PyInit__testcapi@@Base+0x10d8>
    a258:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a25c:	ldr	x8, [x8, #3528]
    a260:	mov	x19, x0
    a264:	mov	x1, x19
    a268:	ldr	x9, [x8, #96]
    a26c:	ldr	x0, [x8]
    a270:	blr	x9
    a274:	ldr	x8, [x19]
    a278:	mov	x20, x0
    a27c:	subs	x8, x8, #0x1
    a280:	str	x8, [x19]
    a284:	b.ne	a298 <PyInit__testcapi@@Base+0x10dc>  // b.any
    a288:	mov	x0, x19
    a28c:	bl	8560 <_Py_Dealloc@plt>
    a290:	b	a298 <PyInit__testcapi@@Base+0x10dc>
    a294:	mov	x20, xzr
    a298:	mov	x0, x20
    a29c:	ldp	x20, x19, [sp, #32]
    a2a0:	ldp	x29, x30, [sp, #16]
    a2a4:	add	sp, sp, #0x30
    a2a8:	ret
    a2ac:	sub	sp, sp, #0x40
    a2b0:	stp	x29, x30, [sp, #32]
    a2b4:	stp	x20, x19, [sp, #48]
    a2b8:	add	x29, sp, #0x20
    a2bc:	stur	xzr, [x29, #-8]
    a2c0:	str	xzr, [sp, #16]
    a2c4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a2c8:	ldr	x8, [x8, #4016]
    a2cc:	mov	x0, x1
    a2d0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a2d4:	add	x1, x1, #0x724
    a2d8:	add	x2, sp, #0x10
    a2dc:	add	x3, sp, #0x8
    a2e0:	sub	x4, x29, #0x8
    a2e4:	sub	x5, x29, #0x4
    a2e8:	str	x8, [sp, #8]
    a2ec:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a2f0:	cbz	w0, a360 <PyInit__testcapi@@Base+0x11a4>
    a2f4:	ldur	w8, [x29, #-8]
    a2f8:	ldr	x1, [sp, #16]
    a2fc:	cbz	w8, a350 <PyInit__testcapi@@Base+0x1194>
    a300:	ldr	x2, [sp, #8]
    a304:	mov	w0, #0x2                   	// #2
    a308:	bl	9040 <PyTuple_Pack@plt>
    a30c:	mov	x19, x0
    a310:	cbz	x0, a360 <PyInit__testcapi@@Base+0x11a4>
    a314:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a318:	ldr	x8, [x8, #3528]
    a31c:	mov	x1, x19
    a320:	mov	x2, xzr
    a324:	ldr	x9, [x8, #88]
    a328:	ldr	x0, [x8, #8]
    a32c:	blr	x9
    a330:	ldr	x8, [x19]
    a334:	mov	x20, x0
    a338:	subs	x8, x8, #0x1
    a33c:	str	x8, [x19]
    a340:	b.ne	a364 <PyInit__testcapi@@Base+0x11a8>  // b.any
    a344:	mov	x0, x19
    a348:	bl	8560 <_Py_Dealloc@plt>
    a34c:	b	a364 <PyInit__testcapi@@Base+0x11a8>
    a350:	mov	w0, #0x1                   	// #1
    a354:	bl	9040 <PyTuple_Pack@plt>
    a358:	mov	x19, x0
    a35c:	cbnz	x0, a314 <PyInit__testcapi@@Base+0x1158>
    a360:	mov	x20, xzr
    a364:	mov	x0, x20
    a368:	ldp	x20, x19, [sp, #48]
    a36c:	ldp	x29, x30, [sp, #32]
    a370:	add	sp, sp, #0x40
    a374:	ret
    a378:	stp	x29, x30, [sp, #-48]!
    a37c:	str	x21, [sp, #16]
    a380:	stp	x20, x19, [sp, #32]
    a384:	mov	x29, sp
    a388:	mov	w0, #0x1e                  	// #30
    a38c:	bl	82a0 <PyList_New@plt>
    a390:	cbz	x0, a454 <PyInit__testcapi@@Base+0x1298>
    a394:	mov	x19, x0
    a398:	mov	x20, xzr
    a39c:	mov	x0, x20
    a3a0:	bl	8840 <PyLong_FromLong@plt>
    a3a4:	cbz	x0, a438 <PyInit__testcapi@@Base+0x127c>
    a3a8:	ldr	x8, [x19, #24]
    a3ac:	str	x0, [x8, x20, lsl #3]
    a3b0:	add	x20, x20, #0x1
    a3b4:	cmp	x20, #0x1e
    a3b8:	b.ne	a39c <PyInit__testcapi@@Base+0x11e0>  // b.any
    a3bc:	mov	x0, x19
    a3c0:	bl	8a20 <PyList_Reverse@plt>
    a3c4:	cbnz	w0, a438 <PyInit__testcapi@@Base+0x127c>
    a3c8:	mov	x20, xzr
    a3cc:	mov	w21, #0x1d                  	// #29
    a3d0:	ldr	x8, [x19, #24]
    a3d4:	ldr	x0, [x8, x20]
    a3d8:	bl	89a0 <PyLong_AsLong@plt>
    a3dc:	cmp	x21, x0
    a3e0:	b.ne	a424 <PyInit__testcapi@@Base+0x1268>  // b.any
    a3e4:	sub	x21, x21, #0x1
    a3e8:	cmn	x21, #0x1
    a3ec:	add	x20, x20, #0x8
    a3f0:	b.ne	a3d0 <PyInit__testcapi@@Base+0x1214>  // b.any
    a3f4:	ldr	x8, [x19]
    a3f8:	subs	x8, x8, #0x1
    a3fc:	str	x8, [x19]
    a400:	b.ne	a40c <PyInit__testcapi@@Base+0x1250>  // b.any
    a404:	mov	x0, x19
    a408:	bl	8560 <_Py_Dealloc@plt>
    a40c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a410:	ldr	x0, [x0, #4016]
    a414:	ldr	x8, [x0]
    a418:	add	x8, x8, #0x1
    a41c:	str	x8, [x0]
    a420:	b	a454 <PyInit__testcapi@@Base+0x1298>
    a424:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a428:	ldr	x0, [x8, #3520]
    a42c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a430:	add	x1, x1, #0x72a
    a434:	bl	8670 <PyErr_SetString@plt>
    a438:	ldr	x8, [x19]
    a43c:	subs	x8, x8, #0x1
    a440:	str	x8, [x19]
    a444:	b.ne	a450 <PyInit__testcapi@@Base+0x1294>  // b.any
    a448:	mov	x0, x19
    a44c:	bl	8560 <_Py_Dealloc@plt>
    a450:	mov	x0, xzr
    a454:	ldp	x20, x19, [sp, #32]
    a458:	ldr	x21, [sp, #16]
    a45c:	ldp	x29, x30, [sp], #48
    a460:	ret
    a464:	sub	sp, sp, #0x50
    a468:	stp	x29, x30, [sp, #16]
    a46c:	str	x23, [sp, #32]
    a470:	stp	x22, x21, [sp, #48]
    a474:	stp	x20, x19, [sp, #64]
    a478:	add	x29, sp, #0x10
    a47c:	mov	x23, xzr
    a480:	str	xzr, [x29, #24]
    a484:	bl	8c20 <PyDict_New@plt>
    a488:	cbz	x0, a5a8 <PyInit__testcapi@@Base+0x13ec>
    a48c:	mov	x19, x0
    a490:	mov	x22, x23
    a494:	cbz	x23, a4fc <PyInit__testcapi@@Base+0x1340>
    a498:	mov	x20, xzr
    a49c:	mov	x0, x20
    a4a0:	bl	8840 <PyLong_FromLong@plt>
    a4a4:	mov	x21, x0
    a4a8:	cbz	x0, a5a0 <PyInit__testcapi@@Base+0x13e4>
    a4ac:	mov	x0, x19
    a4b0:	mov	x1, x21
    a4b4:	mov	x2, x21
    a4b8:	bl	8d80 <PyDict_SetItem@plt>
    a4bc:	ldr	x8, [x21]
    a4c0:	mov	w22, w0
    a4c4:	subs	x8, x8, #0x1
    a4c8:	str	x8, [x21]
    a4cc:	b.ne	a4d8 <PyInit__testcapi@@Base+0x131c>  // b.any
    a4d0:	mov	x0, x21
    a4d4:	bl	8560 <_Py_Dealloc@plt>
    a4d8:	tbnz	w22, #31, a5a0 <PyInit__testcapi@@Base+0x13e4>
    a4dc:	add	x20, x20, #0x1
    a4e0:	cmp	x23, x20
    a4e4:	b.ne	a49c <PyInit__testcapi@@Base+0x12e0>  // b.any
    a4e8:	mov	x22, x23
    a4ec:	str	x21, [sp, #8]
    a4f0:	b	a4fc <PyInit__testcapi@@Base+0x1340>
    a4f4:	sub	x22, x22, #0x1
    a4f8:	tbnz	w21, #31, a5a4 <PyInit__testcapi@@Base+0x13e8>
    a4fc:	add	x1, x29, #0x18
    a500:	mov	x2, sp
    a504:	add	x3, sp, #0x8
    a508:	mov	x0, x19
    a50c:	bl	8c60 <PyDict_Next@plt>
    a510:	cbz	w0, a560 <PyInit__testcapi@@Base+0x13a4>
    a514:	ldr	x0, [sp, #8]
    a518:	bl	89a0 <PyLong_AsLong@plt>
    a51c:	add	w8, w0, #0x1
    a520:	sxtw	x0, w8
    a524:	bl	8840 <PyLong_FromLong@plt>
    a528:	cbz	x0, a5a4 <PyInit__testcapi@@Base+0x13e8>
    a52c:	ldr	x1, [sp]
    a530:	mov	x20, x0
    a534:	mov	x0, x19
    a538:	mov	x2, x20
    a53c:	bl	8d80 <PyDict_SetItem@plt>
    a540:	ldr	x8, [x20]
    a544:	mov	w21, w0
    a548:	subs	x8, x8, #0x1
    a54c:	str	x8, [x20]
    a550:	b.ne	a4f4 <PyInit__testcapi@@Base+0x1338>  // b.any
    a554:	mov	x0, x20
    a558:	bl	8560 <_Py_Dealloc@plt>
    a55c:	b	a4f4 <PyInit__testcapi@@Base+0x1338>
    a560:	ldr	x8, [x19]
    a564:	subs	x8, x8, #0x1
    a568:	str	x8, [x19]
    a56c:	b.ne	a578 <PyInit__testcapi@@Base+0x13bc>  // b.any
    a570:	mov	x0, x19
    a574:	bl	8560 <_Py_Dealloc@plt>
    a578:	cbnz	x22, a5c0 <PyInit__testcapi@@Base+0x1404>
    a57c:	add	x23, x23, #0x1
    a580:	cmp	x23, #0xc8
    a584:	b.ne	a480 <PyInit__testcapi@@Base+0x12c4>  // b.any
    a588:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a58c:	ldr	x0, [x0, #4016]
    a590:	ldr	x8, [x0]
    a594:	add	x8, x8, #0x1
    a598:	str	x8, [x0]
    a59c:	b	a5a8 <PyInit__testcapi@@Base+0x13ec>
    a5a0:	str	x21, [sp, #8]
    a5a4:	mov	x0, xzr
    a5a8:	ldp	x20, x19, [sp, #64]
    a5ac:	ldp	x22, x21, [sp, #48]
    a5b0:	ldr	x23, [sp, #32]
    a5b4:	ldp	x29, x30, [sp, #16]
    a5b8:	add	sp, sp, #0x50
    a5bc:	ret
    a5c0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a5c4:	ldr	x0, [x8, #3520]
    a5c8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a5cc:	add	x1, x1, #0x74c
    a5d0:	bl	8670 <PyErr_SetString@plt>
    a5d4:	b	a5a4 <PyInit__testcapi@@Base+0x13e8>
    a5d8:	sub	sp, sp, #0x30
    a5dc:	stp	x29, x30, [sp, #32]
    a5e0:	add	x29, sp, #0x20
    a5e4:	mov	x0, x1
    a5e8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a5ec:	add	x1, x1, #0x77c
    a5f0:	sub	x2, x29, #0x8
    a5f4:	add	x3, sp, #0x10
    a5f8:	add	x4, sp, #0x8
    a5fc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a600:	cbz	w0, a634 <PyInit__testcapi@@Base+0x1478>
    a604:	ldur	x0, [x29, #-8]
    a608:	ldp	x2, x1, [sp, #8]
    a60c:	bl	89d0 <_PyDict_GetItem_KnownHash@plt>
    a610:	cbz	x0, a624 <PyInit__testcapi@@Base+0x1468>
    a614:	ldr	x8, [x0]
    a618:	add	x8, x8, #0x1
    a61c:	str	x8, [x0]
    a620:	b	a638 <PyInit__testcapi@@Base+0x147c>
    a624:	bl	8980 <PyErr_Occurred@plt>
    a628:	cbnz	x0, a634 <PyInit__testcapi@@Base+0x1478>
    a62c:	ldr	x0, [sp, #16]
    a630:	bl	8650 <_PyErr_SetKeyError@plt>
    a634:	mov	x0, xzr
    a638:	ldp	x29, x30, [sp, #32]
    a63c:	add	sp, sp, #0x30
    a640:	ret
    a644:	stp	x29, x30, [sp, #-16]!
    a648:	mov	x29, sp
    a64c:	ldr	x8, [x1, #8]
    a650:	ldrb	w9, [x8, #171]
    a654:	tbnz	w9, #5, a680 <PyInit__testcapi@@Base+0x14c4>
    a658:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a65c:	ldr	x9, [x9, #3952]
    a660:	ldr	x2, [x8, #24]
    a664:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a668:	add	x1, x1, #0x797
    a66c:	ldr	x0, [x9]
    a670:	bl	8e60 <PyErr_Format@plt>
    a674:	mov	x0, xzr
    a678:	ldp	x29, x30, [sp], #16
    a67c:	ret
    a680:	ldr	x8, [x1, #40]
    a684:	cmp	x8, #0x0
    a688:	cset	w0, ne  // ne = any
    a68c:	ldp	x29, x30, [sp], #16
    a690:	b	88d0 <PyBool_FromLong@plt>
    a694:	stp	x29, x30, [sp, #-32]!
    a698:	stp	x20, x19, [sp, #16]
    a69c:	mov	x29, sp
    a6a0:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de44>
    a6a4:	ldr	x8, [x20, #2216]
    a6a8:	cbz	x8, a6cc <PyInit__testcapi@@Base+0x1510>
    a6ac:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a6b0:	ldr	x0, [x0, #4016]
    a6b4:	ldr	x8, [x0]
    a6b8:	add	x8, x8, #0x1
    a6bc:	str	x8, [x0]
    a6c0:	ldp	x20, x19, [sp, #16]
    a6c4:	ldp	x29, x30, [sp], #32
    a6c8:	ret
    a6cc:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
    a6d0:	add	x0, x0, #0x7a0
    a6d4:	bl	8cf0 <_PyObject_New@plt>
    a6d8:	cbz	x0, a714 <PyInit__testcapi@@Base+0x1558>
    a6dc:	ldr	x8, [x20, #2216]
    a6e0:	mov	x19, x0
    a6e4:	cbz	x8, a734 <PyInit__testcapi@@Base+0x1578>
    a6e8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a6ec:	ldr	x0, [x8, #3520]
    a6f0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a6f4:	add	x1, x1, #0x800
    a6f8:	bl	8670 <PyErr_SetString@plt>
    a6fc:	ldr	x8, [x19]
    a700:	subs	x8, x8, #0x1
    a704:	str	x8, [x19]
    a708:	b.eq	a77c <PyInit__testcapi@@Base+0x15c0>  // b.none
    a70c:	mov	x0, xzr
    a710:	b	a6c0 <PyInit__testcapi@@Base+0x1504>
    a714:	bl	88c0 <PyErr_Clear@plt>
    a718:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a71c:	ldr	x0, [x8, #3520]
    a720:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a724:	add	x1, x1, #0x7cc
    a728:	bl	8670 <PyErr_SetString@plt>
    a72c:	mov	x0, xzr
    a730:	b	a6c0 <PyInit__testcapi@@Base+0x1504>
    a734:	mov	x0, x19
    a738:	bl	8b00 <PyObject_Hash@plt>
    a73c:	cmn	x0, #0x1
    a740:	b.eq	a78c <PyInit__testcapi@@Base+0x15d0>  // b.none
    a744:	ldr	x8, [x20, #2216]
    a748:	cbz	x8, a7ac <PyInit__testcapi@@Base+0x15f0>
    a74c:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
    a750:	ldr	x9, [x9, #4008]
    a754:	adrp	x8, 27000 <PyInit__testcapi@@Base+0x1de44>
    a758:	ldr	x8, [x8, #2072]
    a75c:	ldr	x9, [x9, #120]
    a760:	cmp	x8, x9
    a764:	b.eq	a7c0 <PyInit__testcapi@@Base+0x1604>  // b.none
    a768:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a76c:	ldr	x0, [x8, #3520]
    a770:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a774:	add	x1, x1, #0x8a3
    a778:	b	a6f8 <PyInit__testcapi@@Base+0x153c>
    a77c:	mov	x0, x19
    a780:	bl	8560 <_Py_Dealloc@plt>
    a784:	mov	x0, xzr
    a788:	b	a6c0 <PyInit__testcapi@@Base+0x1504>
    a78c:	bl	8980 <PyErr_Occurred@plt>
    a790:	cbz	x0, a744 <PyInit__testcapi@@Base+0x1588>
    a794:	bl	88c0 <PyErr_Clear@plt>
    a798:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a79c:	ldr	x0, [x8, #3520]
    a7a0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a7a4:	add	x1, x1, #0x836
    a7a8:	b	a6f8 <PyInit__testcapi@@Base+0x153c>
    a7ac:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a7b0:	ldr	x0, [x8, #3520]
    a7b4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a7b8:	add	x1, x1, #0x868
    a7bc:	b	a6f8 <PyInit__testcapi@@Base+0x153c>
    a7c0:	ldr	x8, [x19]
    a7c4:	subs	x8, x8, #0x1
    a7c8:	str	x8, [x19]
    a7cc:	b.ne	a6ac <PyInit__testcapi@@Base+0x14f0>  // b.any
    a7d0:	mov	x0, x19
    a7d4:	bl	8560 <_Py_Dealloc@plt>
    a7d8:	b	a6ac <PyInit__testcapi@@Base+0x14f0>
    a7dc:	stp	x29, x30, [sp, #-80]!
    a7e0:	stp	x26, x25, [sp, #16]
    a7e4:	stp	x24, x23, [sp, #32]
    a7e8:	stp	x22, x21, [sp, #48]
    a7ec:	stp	x20, x19, [sp, #64]
    a7f0:	mov	x29, sp
    a7f4:	mov	w24, #0xaaab                	// #43691
    a7f8:	mov	w22, wzr
    a7fc:	mov	w23, #0x1                   	// #1
    a800:	movk	w24, #0xaaaa, lsl #16
    a804:	mov	w25, wzr
    a808:	neg	x26, x23
    a80c:	b	a81c <PyInit__testcapi@@Base+0x1660>
    a810:	add	w25, w25, #0x1
    a814:	cmp	w25, #0x6
    a818:	b.eq	a8d0 <PyInit__testcapi@@Base+0x1714>  // b.none
    a81c:	umull	x8, w25, w24
    a820:	lsr	x8, x8, #33
    a824:	add	w8, w8, w8, lsl #1
    a828:	cmp	w25, #0x3
    a82c:	mvn	w8, w8
    a830:	csel	x9, x23, x26, cc  // cc = lo, ul, last
    a834:	add	w8, w8, w25
    a838:	add	x19, x9, w8, sxtw
    a83c:	mov	x0, x19
    a840:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    a844:	cbz	x0, a930 <PyInit__testcapi@@Base+0x1774>
    a848:	mov	x20, x0
    a84c:	bl	8c50 <PyLong_AsUnsignedLong@plt>
    a850:	mov	x21, x0
    a854:	cmn	x0, #0x1
    a858:	b.ne	a864 <PyInit__testcapi@@Base+0x16a8>  // b.any
    a85c:	bl	8980 <PyErr_Occurred@plt>
    a860:	cbnz	x0, a9c0 <PyInit__testcapi@@Base+0x1804>
    a864:	cmp	x21, x19
    a868:	b.ne	a954 <PyInit__testcapi@@Base+0x1798>  // b.any
    a86c:	ldr	x8, [x20]
    a870:	subs	x8, x8, #0x1
    a874:	str	x8, [x20]
    a878:	b.ne	a884 <PyInit__testcapi@@Base+0x16c8>  // b.any
    a87c:	mov	x0, x20
    a880:	bl	8560 <_Py_Dealloc@plt>
    a884:	mov	x0, x19
    a888:	bl	8840 <PyLong_FromLong@plt>
    a88c:	cbz	x0, a978 <PyInit__testcapi@@Base+0x17bc>
    a890:	mov	x20, x0
    a894:	bl	89a0 <PyLong_AsLong@plt>
    a898:	mov	x21, x0
    a89c:	cmn	x0, #0x1
    a8a0:	b.ne	a8ac <PyInit__testcapi@@Base+0x16f0>  // b.any
    a8a4:	bl	8980 <PyErr_Occurred@plt>
    a8a8:	cbnz	x0, a9e4 <PyInit__testcapi@@Base+0x1828>
    a8ac:	cmp	x21, x19
    a8b0:	b.ne	a99c <PyInit__testcapi@@Base+0x17e0>  // b.any
    a8b4:	ldr	x8, [x20]
    a8b8:	subs	x8, x8, #0x1
    a8bc:	str	x8, [x20]
    a8c0:	b.ne	a810 <PyInit__testcapi@@Base+0x1654>  // b.any
    a8c4:	mov	x0, x20
    a8c8:	bl	8560 <_Py_Dealloc@plt>
    a8cc:	b	a810 <PyInit__testcapi@@Base+0x1654>
    a8d0:	add	w22, w22, #0x1
    a8d4:	cmp	w22, #0x41
    a8d8:	lsl	x23, x23, #1
    a8dc:	b.ne	a804 <PyInit__testcapi@@Base+0x1648>  // b.any
    a8e0:	mov	w0, #0x1                   	// #1
    a8e4:	bl	8840 <PyLong_FromLong@plt>
    a8e8:	mov	x19, x0
    a8ec:	cbz	x0, aa28 <PyInit__testcapi@@Base+0x186c>
    a8f0:	mov	x0, x19
    a8f4:	bl	8270 <PyNumber_Negative@plt>
    a8f8:	cbz	x0, acc8 <PyInit__testcapi@@Base+0x1b0c>
    a8fc:	mov	x20, x0
    a900:	bl	8c50 <PyLong_AsUnsignedLong@plt>
    a904:	cmn	x0, #0x1
    a908:	b.eq	aa50 <PyInit__testcapi@@Base+0x1894>  // b.none
    a90c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a910:	ldr	x0, [x8, #3520]
    a914:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a918:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    a91c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    a920:	add	x1, x1, #0xc12
    a924:	add	x2, x2, #0xba8
    a928:	add	x3, x3, #0x97b
    a92c:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    a930:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a934:	ldr	x0, [x8, #3520]
    a938:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a93c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    a940:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    a944:	add	x1, x1, #0xc12
    a948:	add	x2, x2, #0xba8
    a94c:	add	x3, x3, #0x8d8
    a950:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    a954:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a958:	ldr	x0, [x8, #3520]
    a95c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a960:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    a964:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    a968:	add	x1, x1, #0xc12
    a96c:	add	x2, x2, #0xba8
    a970:	add	x3, x3, #0x916
    a974:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    a978:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a97c:	ldr	x0, [x8, #3520]
    a980:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a984:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    a988:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    a98c:	add	x1, x1, #0xc12
    a990:	add	x2, x2, #0xba8
    a994:	add	x3, x3, #0x8da
    a998:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    a99c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a9a0:	ldr	x0, [x8, #3520]
    a9a4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a9a8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    a9ac:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    a9b0:	add	x1, x1, #0xc12
    a9b4:	add	x2, x2, #0xba8
    a9b8:	add	x3, x3, #0x918
    a9bc:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    a9c0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a9c4:	ldr	x0, [x8, #3520]
    a9c8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a9cc:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    a9d0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    a9d4:	add	x1, x1, #0xc12
    a9d8:	add	x2, x2, #0xba8
    a9dc:	add	x3, x3, #0x8f8
    a9e0:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    a9e4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    a9e8:	ldr	x0, [x8, #3520]
    a9ec:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    a9f0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    a9f4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    a9f8:	add	x1, x1, #0xc12
    a9fc:	add	x2, x2, #0xba8
    aa00:	add	x3, x3, #0x8fa
    aa04:	bl	8e60 <PyErr_Format@plt>
    aa08:	mov	x19, xzr
    aa0c:	mov	x0, x19
    aa10:	ldp	x20, x19, [sp, #64]
    aa14:	ldp	x22, x21, [sp, #48]
    aa18:	ldp	x24, x23, [sp, #32]
    aa1c:	ldp	x26, x25, [sp, #16]
    aa20:	ldp	x29, x30, [sp], #80
    aa24:	ret
    aa28:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    aa2c:	ldr	x0, [x8, #3520]
    aa30:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    aa34:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    aa38:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    aa3c:	add	x1, x1, #0xc12
    aa40:	add	x2, x2, #0xba8
    aa44:	add	x3, x3, #0x92f
    aa48:	bl	8e60 <PyErr_Format@plt>
    aa4c:	b	aa0c <PyInit__testcapi@@Base+0x1850>
    aa50:	bl	8980 <PyErr_Occurred@plt>
    aa54:	cbz	x0, a90c <PyInit__testcapi@@Base+0x1750>
    aa58:	adrp	x22, 26000 <PyInit__testcapi@@Base+0x1ce44>
    aa5c:	ldr	x22, [x22, #4000]
    aa60:	ldr	x0, [x22]
    aa64:	bl	8760 <PyErr_ExceptionMatches@plt>
    aa68:	cbz	w0, aaf8 <PyInit__testcapi@@Base+0x193c>
    aa6c:	bl	88c0 <PyErr_Clear@plt>
    aa70:	ldr	x8, [x20]
    aa74:	subs	x8, x8, #0x1
    aa78:	str	x8, [x20]
    aa7c:	b.ne	aa88 <PyInit__testcapi@@Base+0x18cc>  // b.any
    aa80:	mov	x0, x20
    aa84:	bl	8560 <_Py_Dealloc@plt>
    aa88:	mov	w0, #0x40                  	// #64
    aa8c:	bl	8840 <PyLong_FromLong@plt>
    aa90:	cbz	x0, ab1c <PyInit__testcapi@@Base+0x1960>
    aa94:	mov	x21, x0
    aa98:	mov	x0, x19
    aa9c:	mov	x1, x21
    aaa0:	bl	8390 <PyNumber_Lshift@plt>
    aaa4:	ldr	x8, [x21]
    aaa8:	mov	x20, x0
    aaac:	subs	x8, x8, #0x1
    aab0:	str	x8, [x21]
    aab4:	b.ne	aac0 <PyInit__testcapi@@Base+0x1904>  // b.any
    aab8:	mov	x0, x21
    aabc:	bl	8560 <_Py_Dealloc@plt>
    aac0:	cbz	x20, ab40 <PyInit__testcapi@@Base+0x1984>
    aac4:	mov	x0, x20
    aac8:	bl	8c50 <PyLong_AsUnsignedLong@plt>
    aacc:	cmn	x0, #0x1
    aad0:	b.eq	ab64 <PyInit__testcapi@@Base+0x19a8>  // b.none
    aad4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    aad8:	ldr	x0, [x8, #3520]
    aadc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    aae0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    aae4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    aae8:	add	x1, x1, #0xc12
    aaec:	add	x2, x2, #0xba8
    aaf0:	add	x3, x3, #0xa0c
    aaf4:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    aaf8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    aafc:	ldr	x0, [x8, #3520]
    ab00:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ab04:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ab08:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ab0c:	add	x1, x1, #0xc12
    ab10:	add	x2, x2, #0xba8
    ab14:	add	x3, x3, #0x9a4
    ab18:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    ab1c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ab20:	ldr	x0, [x8, #3520]
    ab24:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ab28:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ab2c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ab30:	add	x1, x1, #0xc12
    ab34:	add	x2, x2, #0xba8
    ab38:	add	x3, x3, #0x92f
    ab3c:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    ab40:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ab44:	ldr	x0, [x8, #3520]
    ab48:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ab4c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ab50:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ab54:	add	x1, x1, #0xc12
    ab58:	add	x2, x2, #0xba8
    ab5c:	add	x3, x3, #0x9e7
    ab60:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    ab64:	bl	8980 <PyErr_Occurred@plt>
    ab68:	cbz	x0, aad4 <PyInit__testcapi@@Base+0x1918>
    ab6c:	ldr	x0, [x22]
    ab70:	mov	x23, x22
    ab74:	bl	8760 <PyErr_ExceptionMatches@plt>
    ab78:	cbz	w0, abe0 <PyInit__testcapi@@Base+0x1a24>
    ab7c:	bl	88c0 <PyErr_Clear@plt>
    ab80:	mov	x0, x20
    ab84:	mov	x1, x19
    ab88:	bl	8b60 <PyNumber_Rshift@plt>
    ab8c:	ldr	x8, [x20]
    ab90:	mov	x21, x0
    ab94:	subs	x8, x8, #0x1
    ab98:	str	x8, [x20]
    ab9c:	b.ne	aba8 <PyInit__testcapi@@Base+0x19ec>  // b.any
    aba0:	mov	x0, x20
    aba4:	bl	8560 <_Py_Dealloc@plt>
    aba8:	cbz	x21, ac04 <PyInit__testcapi@@Base+0x1a48>
    abac:	mov	x0, x21
    abb0:	bl	89a0 <PyLong_AsLong@plt>
    abb4:	cmn	x0, #0x1
    abb8:	b.eq	ac28 <PyInit__testcapi@@Base+0x1a6c>  // b.none
    abbc:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    abc0:	ldr	x0, [x8, #3520]
    abc4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    abc8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    abcc:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    abd0:	add	x1, x1, #0xc12
    abd4:	add	x2, x2, #0xba8
    abd8:	add	x3, x3, #0xaa9
    abdc:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    abe0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    abe4:	ldr	x0, [x8, #3520]
    abe8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    abec:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    abf0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    abf4:	add	x1, x1, #0xc12
    abf8:	add	x2, x2, #0xba8
    abfc:	add	x3, x3, #0xa3b
    ac00:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    ac04:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ac08:	ldr	x0, [x8, #3520]
    ac0c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ac10:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ac14:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ac18:	add	x1, x1, #0xc12
    ac1c:	add	x2, x2, #0xba8
    ac20:	add	x3, x3, #0xa84
    ac24:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    ac28:	bl	8980 <PyErr_Occurred@plt>
    ac2c:	cbz	x0, abbc <PyInit__testcapi@@Base+0x1a00>
    ac30:	ldr	x0, [x23]
    ac34:	bl	8760 <PyErr_ExceptionMatches@plt>
    ac38:	cbz	w0, acec <PyInit__testcapi@@Base+0x1b30>
    ac3c:	bl	88c0 <PyErr_Clear@plt>
    ac40:	mov	x0, x21
    ac44:	bl	8270 <PyNumber_Negative@plt>
    ac48:	ldr	x8, [x21]
    ac4c:	mov	x22, x0
    ac50:	subs	x8, x8, #0x1
    ac54:	str	x8, [x21]
    ac58:	b.ne	ac64 <PyInit__testcapi@@Base+0x1aa8>  // b.any
    ac5c:	mov	x0, x21
    ac60:	bl	8560 <_Py_Dealloc@plt>
    ac64:	cbz	x22, acc8 <PyInit__testcapi@@Base+0x1b0c>
    ac68:	mov	x0, x22
    ac6c:	mov	x1, x19
    ac70:	bl	8fe0 <PyNumber_Subtract@plt>
    ac74:	ldr	x8, [x22]
    ac78:	mov	x20, x0
    ac7c:	subs	x8, x8, #0x1
    ac80:	str	x8, [x22]
    ac84:	b.ne	ac90 <PyInit__testcapi@@Base+0x1ad4>  // b.any
    ac88:	mov	x0, x22
    ac8c:	bl	8560 <_Py_Dealloc@plt>
    ac90:	cbz	x20, ad10 <PyInit__testcapi@@Base+0x1b54>
    ac94:	mov	x0, x20
    ac98:	bl	89a0 <PyLong_AsLong@plt>
    ac9c:	cmn	x0, #0x1
    aca0:	b.eq	ad34 <PyInit__testcapi@@Base+0x1b78>  // b.none
    aca4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    aca8:	ldr	x0, [x8, #3520]
    acac:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    acb0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    acb4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    acb8:	add	x1, x1, #0xc12
    acbc:	add	x2, x2, #0xba8
    acc0:	add	x3, x3, #0xb40
    acc4:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    acc8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    accc:	ldr	x0, [x8, #3520]
    acd0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    acd4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    acd8:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    acdc:	add	x1, x1, #0xc12
    ace0:	add	x2, x2, #0xba8
    ace4:	add	x3, x3, #0x954
    ace8:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    acec:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    acf0:	ldr	x0, [x8, #3520]
    acf4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    acf8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    acfc:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ad00:	add	x1, x1, #0xc12
    ad04:	add	x2, x2, #0xba8
    ad08:	add	x3, x3, #0xad4
    ad0c:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    ad10:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ad14:	ldr	x0, [x8, #3520]
    ad18:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ad1c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ad20:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ad24:	add	x1, x1, #0xc12
    ad28:	add	x2, x2, #0xba8
    ad2c:	add	x3, x3, #0xb19
    ad30:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    ad34:	bl	8980 <PyErr_Occurred@plt>
    ad38:	cbz	x0, aca4 <PyInit__testcapi@@Base+0x1ae8>
    ad3c:	ldr	x0, [x23]
    ad40:	bl	8760 <PyErr_ExceptionMatches@plt>
    ad44:	cbz	w0, adc0 <PyInit__testcapi@@Base+0x1c04>
    ad48:	bl	88c0 <PyErr_Clear@plt>
    ad4c:	ldr	x8, [x20]
    ad50:	subs	x8, x8, #0x1
    ad54:	str	x8, [x20]
    ad58:	b.ne	ad64 <PyInit__testcapi@@Base+0x1ba8>  // b.any
    ad5c:	mov	x0, x20
    ad60:	bl	8560 <_Py_Dealloc@plt>
    ad64:	ldr	x8, [x19]
    ad68:	subs	x8, x8, #0x1
    ad6c:	str	x8, [x19]
    ad70:	b.ne	ad7c <PyInit__testcapi@@Base+0x1bc0>  // b.any
    ad74:	mov	x0, x19
    ad78:	bl	8560 <_Py_Dealloc@plt>
    ad7c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ad80:	ldr	x0, [x0, #4016]
    ad84:	ldr	x8, [x0]
    ad88:	add	x8, x8, #0x1
    ad8c:	str	x8, [x0]
    ad90:	bl	89a0 <PyLong_AsLong@plt>
    ad94:	cmn	x0, #0x1
    ad98:	b.eq	ade4 <PyInit__testcapi@@Base+0x1c28>  // b.none
    ad9c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ada0:	ldr	x0, [x8, #3520]
    ada4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ada8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    adac:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    adb0:	add	x1, x1, #0xc12
    adb4:	add	x2, x2, #0xba8
    adb8:	add	x3, x3, #0xbb6
    adbc:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    adc0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    adc4:	ldr	x0, [x8, #3520]
    adc8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    adcc:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    add0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    add4:	add	x1, x1, #0xc12
    add8:	add	x2, x2, #0xba8
    addc:	add	x3, x3, #0xb6e
    ade0:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    ade4:	bl	8980 <PyErr_Occurred@plt>
    ade8:	cbz	x0, ad9c <PyInit__testcapi@@Base+0x1be0>
    adec:	adrp	x20, 26000 <PyInit__testcapi@@Base+0x1ce44>
    adf0:	ldr	x20, [x20, #3952]
    adf4:	ldr	x0, [x20]
    adf8:	bl	8760 <PyErr_ExceptionMatches@plt>
    adfc:	cbz	w0, ae5c <PyInit__testcapi@@Base+0x1ca0>
    ae00:	bl	88c0 <PyErr_Clear@plt>
    ae04:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ae08:	ldr	x19, [x19, #4016]
    ae0c:	mov	x0, x19
    ae10:	bl	8c50 <PyLong_AsUnsignedLong@plt>
    ae14:	cmn	x0, #0x1
    ae18:	b.ne	ad9c <PyInit__testcapi@@Base+0x1be0>  // b.any
    ae1c:	bl	8980 <PyErr_Occurred@plt>
    ae20:	cbz	x0, ad9c <PyInit__testcapi@@Base+0x1be0>
    ae24:	ldr	x0, [x20]
    ae28:	bl	8760 <PyErr_ExceptionMatches@plt>
    ae2c:	cbz	w0, ae5c <PyInit__testcapi@@Base+0x1ca0>
    ae30:	bl	88c0 <PyErr_Clear@plt>
    ae34:	ldr	x8, [x19]
    ae38:	subs	x8, x8, #0x1
    ae3c:	str	x8, [x19]
    ae40:	b.ne	ae50 <PyInit__testcapi@@Base+0x1c94>  // b.any
    ae44:	mov	x0, x19
    ae48:	bl	8560 <_Py_Dealloc@plt>
    ae4c:	ldr	x8, [x19]
    ae50:	add	x8, x8, #0x1
    ae54:	str	x8, [x19]
    ae58:	b	aa0c <PyInit__testcapi@@Base+0x1850>
    ae5c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ae60:	ldr	x0, [x8, #3520]
    ae64:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ae68:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ae6c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ae70:	add	x1, x1, #0xc12
    ae74:	add	x2, x2, #0xba8
    ae78:	add	x3, x3, #0xbd9
    ae7c:	b	aa04 <PyInit__testcapi@@Base+0x1848>
    ae80:	stp	x29, x30, [sp, #-32]!
    ae84:	str	x19, [sp, #16]
    ae88:	mov	x29, sp
    ae8c:	mov	x0, xzr
    ae90:	bl	8840 <PyLong_FromLong@plt>
    ae94:	ldr	x8, [x0]
    ae98:	cmp	x0, #0x0
    ae9c:	mov	w9, #0x1                   	// #1
    aea0:	cinc	x9, x9, ne  // ne = any
    aea4:	add	x8, x8, x9
    aea8:	mov	x19, x0
    aeac:	subs	x8, x8, #0x1
    aeb0:	str	x8, [x0]
    aeb4:	b.ne	aec4 <PyInit__testcapi@@Base+0x1d08>  // b.any
    aeb8:	mov	x0, x19
    aebc:	bl	8560 <_Py_Dealloc@plt>
    aec0:	ldr	x8, [x19]
    aec4:	subs	x8, x8, #0x1
    aec8:	str	x8, [x19]
    aecc:	b.ne	aedc <PyInit__testcapi@@Base+0x1d20>  // b.any
    aed0:	mov	x0, x19
    aed4:	bl	8560 <_Py_Dealloc@plt>
    aed8:	ldr	x8, [x19]
    aedc:	subs	x8, x8, #0x1
    aee0:	str	x8, [x19]
    aee4:	b.ne	aef0 <PyInit__testcapi@@Base+0x1d34>  // b.any
    aee8:	mov	x0, x19
    aeec:	bl	8560 <_Py_Dealloc@plt>
    aef0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    aef4:	ldr	x0, [x0, #4016]
    aef8:	ldr	x19, [sp, #16]
    aefc:	ldr	x8, [x0]
    af00:	add	x8, x8, #0x1
    af04:	str	x8, [x0]
    af08:	ldp	x29, x30, [sp], #32
    af0c:	ret
    af10:	stp	x29, x30, [sp, #-32]!
    af14:	str	x19, [sp, #16]
    af18:	mov	x29, sp
    af1c:	mov	x0, xzr
    af20:	bl	8840 <PyLong_FromLong@plt>
    af24:	ldr	x8, [x0]
    af28:	mov	x19, x0
    af2c:	adds	x8, x8, #0x1
    af30:	str	x8, [x0]
    af34:	b.cc	af44 <PyInit__testcapi@@Base+0x1d88>  // b.lo, b.ul, b.last
    af38:	mov	x0, x19
    af3c:	bl	8560 <_Py_Dealloc@plt>
    af40:	ldr	x8, [x19]
    af44:	subs	x8, x8, #0x1
    af48:	str	x8, [x19]
    af4c:	b.ne	af5c <PyInit__testcapi@@Base+0x1da0>  // b.any
    af50:	mov	x0, x19
    af54:	bl	8560 <_Py_Dealloc@plt>
    af58:	ldr	x8, [x19]
    af5c:	subs	x8, x8, #0x1
    af60:	str	x8, [x19]
    af64:	b.ne	af70 <PyInit__testcapi@@Base+0x1db4>  // b.any
    af68:	mov	x0, x19
    af6c:	bl	8560 <_Py_Dealloc@plt>
    af70:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    af74:	ldr	x0, [x0, #4016]
    af78:	ldr	x19, [sp, #16]
    af7c:	ldr	x8, [x0]
    af80:	add	x8, x8, #0x1
    af84:	str	x8, [x0]
    af88:	ldp	x29, x30, [sp], #32
    af8c:	ret
    af90:	stp	x29, x30, [sp, #-16]!
    af94:	mov	x29, sp
    af98:	mov	x0, xzr
    af9c:	bl	8840 <PyLong_FromLong@plt>
    afa0:	cbz	x0, afb8 <PyInit__testcapi@@Base+0x1dfc>
    afa4:	ldr	x8, [x0]
    afa8:	subs	x8, x8, #0x1
    afac:	str	x8, [x0]
    afb0:	b.ne	afb8 <PyInit__testcapi@@Base+0x1dfc>  // b.any
    afb4:	bl	8560 <_Py_Dealloc@plt>
    afb8:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    afbc:	ldr	x0, [x0, #4016]
    afc0:	ldr	x8, [x0]
    afc4:	add	x8, x8, #0x1
    afc8:	str	x8, [x0]
    afcc:	ldp	x29, x30, [sp], #16
    afd0:	ret
    afd4:	stp	x29, x30, [sp, #-16]!
    afd8:	mov	x29, sp
    afdc:	mov	x0, xzr
    afe0:	bl	8840 <PyLong_FromLong@plt>
    afe4:	ldr	x8, [x0]
    afe8:	subs	x8, x8, #0x1
    afec:	str	x8, [x0]
    aff0:	b.ne	aff8 <PyInit__testcapi@@Base+0x1e3c>  // b.any
    aff4:	bl	8560 <_Py_Dealloc@plt>
    aff8:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    affc:	ldr	x0, [x0, #4016]
    b000:	ldr	x8, [x0]
    b004:	add	x8, x8, #0x1
    b008:	str	x8, [x0]
    b00c:	ldp	x29, x30, [sp], #16
    b010:	ret
    b014:	sub	sp, sp, #0x60
    b018:	stp	x29, x30, [sp, #80]
    b01c:	add	x29, sp, #0x50
    b020:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae44>
    b024:	adrp	x9, 14000 <PyInit__testcapi@@Base+0xae44>
    b028:	add	x8, x8, #0xc19
    b02c:	add	x9, x9, #0xc1d
    b030:	stp	x8, x9, [sp]
    b034:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae44>
    b038:	adrp	x9, 14000 <PyInit__testcapi@@Base+0xae44>
    b03c:	add	x8, x8, #0xc39
    b040:	add	x9, x9, #0xc4e
    b044:	adrp	x10, 14000 <PyInit__testcapi@@Base+0xae44>
    b048:	stp	x8, x9, [x29, #-32]
    b04c:	mov	x8, sp
    b050:	add	x10, x10, #0xc27
    b054:	stur	x8, [x29, #-16]
    b058:	mov	w8, #0x1                   	// #1
    b05c:	sub	x0, x29, #0x20
    b060:	stp	xzr, xzr, [sp, #32]
    b064:	stp	xzr, x10, [sp, #16]
    b068:	stur	w8, [x29, #-8]
    b06c:	bl	8e40 <PyStructSequence_NewType@plt>
    b070:	ldr	x8, [x0]
    b074:	subs	x8, x8, #0x1
    b078:	str	x8, [x0]
    b07c:	b.ne	b084 <PyInit__testcapi@@Base+0x1ec8>  // b.any
    b080:	bl	8560 <_Py_Dealloc@plt>
    b084:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b088:	ldr	x0, [x0, #4016]
    b08c:	ldp	x29, x30, [sp, #80]
    b090:	ldr	x8, [x0]
    b094:	add	x8, x8, #0x1
    b098:	str	x8, [x0]
    b09c:	add	sp, sp, #0x60
    b0a0:	ret
    b0a4:	stp	x29, x30, [sp, #-32]!
    b0a8:	str	x19, [sp, #16]
    b0ac:	mov	x29, sp
    b0b0:	mov	x0, xzr
    b0b4:	bl	8840 <PyLong_FromLong@plt>
    b0b8:	mov	x19, x0
    b0bc:	bl	8b40 <Py_IncRef@plt>
    b0c0:	mov	x0, x19
    b0c4:	bl	8be0 <Py_DecRef@plt>
    b0c8:	mov	x0, x19
    b0cc:	bl	8be0 <Py_DecRef@plt>
    b0d0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b0d4:	ldr	x0, [x0, #4016]
    b0d8:	ldr	x19, [sp, #16]
    b0dc:	ldr	x8, [x0]
    b0e0:	add	x8, x8, #0x1
    b0e4:	str	x8, [x0]
    b0e8:	ldp	x29, x30, [sp], #32
    b0ec:	ret
    b0f0:	stp	x29, x30, [sp, #-48]!
    b0f4:	str	x21, [sp, #16]
    b0f8:	stp	x20, x19, [sp, #32]
    b0fc:	mov	x29, sp
    b100:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    b104:	add	x0, x0, #0xcb9
    b108:	mov	w2, #0x10                  	// #16
    b10c:	mov	x1, xzr
    b110:	bl	8f90 <PyLong_FromString@plt>
    b114:	cbz	x0, b190 <PyInit__testcapi@@Base+0x1fd4>
    b118:	mov	w8, #0x4d2                 	// #1234
    b11c:	add	x1, x29, #0x1c
    b120:	mov	x19, x0
    b124:	str	w8, [x29, #28]
    b128:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b12c:	ldr	x8, [x19]
    b130:	mov	x20, x0
    b134:	subs	x8, x8, #0x1
    b138:	str	x8, [x19]
    b13c:	b.eq	b14c <PyInit__testcapi@@Base+0x1f90>  // b.none
    b140:	cmn	x20, #0x1
    b144:	b.ne	b15c <PyInit__testcapi@@Base+0x1fa0>  // b.any
    b148:	b	b184 <PyInit__testcapi@@Base+0x1fc8>
    b14c:	mov	x0, x19
    b150:	bl	8560 <_Py_Dealloc@plt>
    b154:	cmn	x20, #0x1
    b158:	b.eq	b184 <PyInit__testcapi@@Base+0x1fc8>  // b.none
    b15c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b160:	ldr	x0, [x8, #3520]
    b164:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b168:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b16c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b170:	add	x1, x1, #0xc12
    b174:	add	x2, x2, #0xc52
    b178:	add	x3, x3, #0xc7f
    b17c:	bl	8e60 <PyErr_Format@plt>
    b180:	b	b18c <PyInit__testcapi@@Base+0x1fd0>
    b184:	bl	8980 <PyErr_Occurred@plt>
    b188:	cbz	x0, b1a0 <PyInit__testcapi@@Base+0x1fe4>
    b18c:	mov	x0, xzr
    b190:	ldp	x20, x19, [sp, #32]
    b194:	ldr	x21, [sp, #16]
    b198:	ldp	x29, x30, [sp], #48
    b19c:	ret
    b1a0:	ldr	w8, [x29, #28]
    b1a4:	cmp	w8, #0x1
    b1a8:	b.ne	b2e0 <PyInit__testcapi@@Base+0x2124>  // b.any
    b1ac:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    b1b0:	bl	8840 <PyLong_FromLong@plt>
    b1b4:	cbz	x0, b190 <PyInit__testcapi@@Base+0x1fd4>
    b1b8:	mov	x19, x0
    b1bc:	mov	w0, #0x1                   	// #1
    b1c0:	bl	8840 <PyLong_FromLong@plt>
    b1c4:	cbz	x0, b434 <PyInit__testcapi@@Base+0x2278>
    b1c8:	mov	x21, x0
    b1cc:	mov	x0, x19
    b1d0:	mov	x1, x21
    b1d4:	bl	8490 <PyNumber_Add@plt>
    b1d8:	ldr	x8, [x21]
    b1dc:	mov	x20, x0
    b1e0:	subs	x8, x8, #0x1
    b1e4:	str	x8, [x21]
    b1e8:	b.ne	b1f4 <PyInit__testcapi@@Base+0x2038>  // b.any
    b1ec:	mov	x0, x21
    b1f0:	bl	8560 <_Py_Dealloc@plt>
    b1f4:	ldr	x8, [x19]
    b1f8:	subs	x8, x8, #0x1
    b1fc:	str	x8, [x19]
    b200:	b.ne	b20c <PyInit__testcapi@@Base+0x2050>  // b.any
    b204:	mov	x0, x19
    b208:	bl	8560 <_Py_Dealloc@plt>
    b20c:	cbz	x20, b18c <PyInit__testcapi@@Base+0x1fd0>
    b210:	add	x1, x29, #0x1c
    b214:	mov	x0, x20
    b218:	str	wzr, [x29, #28]
    b21c:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b220:	ldr	x8, [x20]
    b224:	mov	x19, x0
    b228:	subs	x8, x8, #0x1
    b22c:	str	x8, [x20]
    b230:	b.ne	b23c <PyInit__testcapi@@Base+0x2080>  // b.any
    b234:	mov	x0, x20
    b238:	bl	8560 <_Py_Dealloc@plt>
    b23c:	cmn	x19, #0x1
    b240:	b.ne	b15c <PyInit__testcapi@@Base+0x1fa0>  // b.any
    b244:	bl	8980 <PyErr_Occurred@plt>
    b248:	cbnz	x0, b18c <PyInit__testcapi@@Base+0x1fd0>
    b24c:	ldr	w8, [x29, #28]
    b250:	cmp	w8, #0x1
    b254:	b.ne	b2e0 <PyInit__testcapi@@Base+0x2124>  // b.any
    b258:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    b25c:	add	x0, x0, #0xcb8
    b260:	mov	w2, #0x10                  	// #16
    b264:	mov	x1, xzr
    b268:	bl	8f90 <PyLong_FromString@plt>
    b26c:	cbz	x0, b190 <PyInit__testcapi@@Base+0x1fd4>
    b270:	mov	w8, #0x4d2                 	// #1234
    b274:	add	x1, x29, #0x1c
    b278:	mov	x19, x0
    b27c:	str	w8, [x29, #28]
    b280:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b284:	ldr	x8, [x19]
    b288:	mov	x20, x0
    b28c:	subs	x8, x8, #0x1
    b290:	str	x8, [x19]
    b294:	b.ne	b2a0 <PyInit__testcapi@@Base+0x20e4>  // b.any
    b298:	mov	x0, x19
    b29c:	bl	8560 <_Py_Dealloc@plt>
    b2a0:	cmn	x20, #0x1
    b2a4:	b.ne	b15c <PyInit__testcapi@@Base+0x1fa0>  // b.any
    b2a8:	bl	8980 <PyErr_Occurred@plt>
    b2ac:	cbnz	x0, b18c <PyInit__testcapi@@Base+0x1fd0>
    b2b0:	ldr	w8, [x29, #28]
    b2b4:	cmn	w8, #0x1
    b2b8:	b.eq	b304 <PyInit__testcapi@@Base+0x2148>  // b.none
    b2bc:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b2c0:	ldr	x0, [x8, #3520]
    b2c4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b2c8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b2cc:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b2d0:	add	x1, x1, #0xc12
    b2d4:	add	x2, x2, #0xc52
    b2d8:	add	x3, x3, #0xcd2
    b2dc:	b	b17c <PyInit__testcapi@@Base+0x1fc0>
    b2e0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b2e4:	ldr	x0, [x8, #3520]
    b2e8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b2ec:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b2f0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b2f4:	add	x1, x1, #0xc12
    b2f8:	add	x2, x2, #0xc52
    b2fc:	add	x3, x3, #0xc9e
    b300:	b	b17c <PyInit__testcapi@@Base+0x1fc0>
    b304:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    b308:	bl	8840 <PyLong_FromLong@plt>
    b30c:	cbz	x0, b190 <PyInit__testcapi@@Base+0x1fd4>
    b310:	mov	x19, x0
    b314:	mov	w0, #0x1                   	// #1
    b318:	bl	8840 <PyLong_FromLong@plt>
    b31c:	cbz	x0, b434 <PyInit__testcapi@@Base+0x2278>
    b320:	mov	x21, x0
    b324:	mov	x0, x19
    b328:	mov	x1, x21
    b32c:	bl	8fe0 <PyNumber_Subtract@plt>
    b330:	ldr	x8, [x21]
    b334:	mov	x20, x0
    b338:	subs	x8, x8, #0x1
    b33c:	str	x8, [x21]
    b340:	b.ne	b34c <PyInit__testcapi@@Base+0x2190>  // b.any
    b344:	mov	x0, x21
    b348:	bl	8560 <_Py_Dealloc@plt>
    b34c:	ldr	x8, [x19]
    b350:	subs	x8, x8, #0x1
    b354:	str	x8, [x19]
    b358:	b.ne	b364 <PyInit__testcapi@@Base+0x21a8>  // b.any
    b35c:	mov	x0, x19
    b360:	bl	8560 <_Py_Dealloc@plt>
    b364:	cbz	x20, b18c <PyInit__testcapi@@Base+0x1fd0>
    b368:	add	x1, x29, #0x1c
    b36c:	mov	x0, x20
    b370:	str	wzr, [x29, #28]
    b374:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b378:	ldr	x8, [x20]
    b37c:	mov	x19, x0
    b380:	subs	x8, x8, #0x1
    b384:	str	x8, [x20]
    b388:	b.ne	b394 <PyInit__testcapi@@Base+0x21d8>  // b.any
    b38c:	mov	x0, x20
    b390:	bl	8560 <_Py_Dealloc@plt>
    b394:	cmn	x19, #0x1
    b398:	b.ne	b15c <PyInit__testcapi@@Base+0x1fa0>  // b.any
    b39c:	bl	8980 <PyErr_Occurred@plt>
    b3a0:	cbnz	x0, b18c <PyInit__testcapi@@Base+0x1fd0>
    b3a4:	ldr	w8, [x29, #28]
    b3a8:	cmn	w8, #0x1
    b3ac:	b.ne	b2bc <PyInit__testcapi@@Base+0x2100>  // b.any
    b3b0:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    b3b4:	add	x0, x0, #0xd22
    b3b8:	mov	w2, #0x10                  	// #16
    b3bc:	mov	x1, xzr
    b3c0:	bl	8f90 <PyLong_FromString@plt>
    b3c4:	cbz	x0, b190 <PyInit__testcapi@@Base+0x1fd4>
    b3c8:	mov	w8, #0x4d2                 	// #1234
    b3cc:	add	x1, x29, #0x1c
    b3d0:	mov	x19, x0
    b3d4:	str	w8, [x29, #28]
    b3d8:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b3dc:	ldr	x8, [x19]
    b3e0:	mov	x20, x0
    b3e4:	subs	x8, x8, #0x1
    b3e8:	str	x8, [x19]
    b3ec:	b.ne	b3f8 <PyInit__testcapi@@Base+0x223c>  // b.any
    b3f0:	mov	x0, x19
    b3f4:	bl	8560 <_Py_Dealloc@plt>
    b3f8:	cmp	x20, #0xff
    b3fc:	b.eq	b450 <PyInit__testcapi@@Base+0x2294>  // b.none
    b400:	cmn	x20, #0x1
    b404:	b.ne	b410 <PyInit__testcapi@@Base+0x2254>  // b.any
    b408:	bl	8980 <PyErr_Occurred@plt>
    b40c:	cbnz	x0, b18c <PyInit__testcapi@@Base+0x1fd0>
    b410:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b414:	ldr	x0, [x8, #3520]
    b418:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b41c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b420:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b424:	add	x1, x1, #0xc12
    b428:	add	x2, x2, #0xc52
    b42c:	add	x3, x3, #0xced
    b430:	b	b17c <PyInit__testcapi@@Base+0x1fc0>
    b434:	ldr	x8, [x19]
    b438:	subs	x8, x8, #0x1
    b43c:	str	x8, [x19]
    b440:	b.ne	b18c <PyInit__testcapi@@Base+0x1fd0>  // b.any
    b444:	mov	x0, x19
    b448:	bl	8560 <_Py_Dealloc@plt>
    b44c:	b	b18c <PyInit__testcapi@@Base+0x1fd0>
    b450:	ldr	w8, [x29, #28]
    b454:	cbz	w8, b47c <PyInit__testcapi@@Base+0x22c0>
    b458:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b45c:	ldr	x0, [x8, #3520]
    b460:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b464:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b468:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b46c:	add	x1, x1, #0xc12
    b470:	add	x2, x2, #0xc52
    b474:	add	x3, x3, #0xd08
    b478:	b	b17c <PyInit__testcapi@@Base+0x1fc0>
    b47c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    b480:	add	x0, x0, #0xd21
    b484:	mov	w2, #0x10                  	// #16
    b488:	mov	x1, xzr
    b48c:	bl	8f90 <PyLong_FromString@plt>
    b490:	cbz	x0, b190 <PyInit__testcapi@@Base+0x1fd4>
    b494:	add	x1, x29, #0x1c
    b498:	mov	x19, x0
    b49c:	str	wzr, [x29, #28]
    b4a0:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b4a4:	ldr	x8, [x19]
    b4a8:	mov	x20, x0
    b4ac:	subs	x8, x8, #0x1
    b4b0:	str	x8, [x19]
    b4b4:	b.ne	b4c0 <PyInit__testcapi@@Base+0x2304>  // b.any
    b4b8:	mov	x0, x19
    b4bc:	bl	8560 <_Py_Dealloc@plt>
    b4c0:	cmn	x20, #0xff
    b4c4:	b.eq	b4d4 <PyInit__testcapi@@Base+0x2318>  // b.none
    b4c8:	cmn	x20, #0x1
    b4cc:	b.eq	b408 <PyInit__testcapi@@Base+0x224c>  // b.none
    b4d0:	b	b410 <PyInit__testcapi@@Base+0x2254>
    b4d4:	ldr	w8, [x29, #28]
    b4d8:	cbz	w8, b500 <PyInit__testcapi@@Base+0x2344>
    b4dc:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b4e0:	ldr	x0, [x8, #3520]
    b4e4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b4e8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b4ec:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b4f0:	add	x1, x1, #0xc12
    b4f4:	add	x2, x2, #0xc52
    b4f8:	add	x3, x3, #0xd25
    b4fc:	b	b17c <PyInit__testcapi@@Base+0x1fc0>
    b500:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    b504:	bl	8840 <PyLong_FromLong@plt>
    b508:	cbz	x0, b190 <PyInit__testcapi@@Base+0x1fd4>
    b50c:	mov	w8, #0x4d2                 	// #1234
    b510:	add	x1, x29, #0x1c
    b514:	mov	x19, x0
    b518:	str	w8, [x29, #28]
    b51c:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b520:	ldr	x8, [x19]
    b524:	mov	x20, x0
    b528:	subs	x8, x8, #0x1
    b52c:	str	x8, [x19]
    b530:	b.ne	b53c <PyInit__testcapi@@Base+0x2380>  // b.any
    b534:	mov	x0, x19
    b538:	bl	8560 <_Py_Dealloc@plt>
    b53c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    b540:	cmp	x20, x8
    b544:	b.eq	b57c <PyInit__testcapi@@Base+0x23c0>  // b.none
    b548:	cmn	x20, #0x1
    b54c:	b.ne	b558 <PyInit__testcapi@@Base+0x239c>  // b.any
    b550:	bl	8980 <PyErr_Occurred@plt>
    b554:	cbnz	x0, b18c <PyInit__testcapi@@Base+0x1fd0>
    b558:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b55c:	ldr	x0, [x8, #3520]
    b560:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b564:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b568:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b56c:	add	x1, x1, #0xc12
    b570:	add	x2, x2, #0xc52
    b574:	add	x3, x3, #0xd42
    b578:	b	b17c <PyInit__testcapi@@Base+0x1fc0>
    b57c:	ldr	w8, [x29, #28]
    b580:	cbnz	w8, b458 <PyInit__testcapi@@Base+0x229c>
    b584:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    b588:	bl	8840 <PyLong_FromLong@plt>
    b58c:	cbz	x0, b190 <PyInit__testcapi@@Base+0x1fd4>
    b590:	add	x1, x29, #0x1c
    b594:	mov	x19, x0
    b598:	str	wzr, [x29, #28]
    b59c:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    b5a0:	ldr	x8, [x19]
    b5a4:	mov	x20, x0
    b5a8:	subs	x8, x8, #0x1
    b5ac:	str	x8, [x19]
    b5b0:	b.ne	b5bc <PyInit__testcapi@@Base+0x2400>  // b.any
    b5b4:	mov	x0, x19
    b5b8:	bl	8560 <_Py_Dealloc@plt>
    b5bc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    b5c0:	cmp	x20, x8
    b5c4:	b.eq	b5fc <PyInit__testcapi@@Base+0x2440>  // b.none
    b5c8:	cmn	x20, #0x1
    b5cc:	b.ne	b5d8 <PyInit__testcapi@@Base+0x241c>  // b.any
    b5d0:	bl	8980 <PyErr_Occurred@plt>
    b5d4:	cbnz	x0, b18c <PyInit__testcapi@@Base+0x1fd0>
    b5d8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b5dc:	ldr	x0, [x8, #3520]
    b5e0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b5e4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b5e8:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b5ec:	add	x1, x1, #0xc12
    b5f0:	add	x2, x2, #0xc52
    b5f4:	add	x3, x3, #0xd61
    b5f8:	b	b17c <PyInit__testcapi@@Base+0x1fc0>
    b5fc:	ldr	w8, [x29, #28]
    b600:	cbnz	w8, b458 <PyInit__testcapi@@Base+0x229c>
    b604:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b608:	ldr	x0, [x0, #4016]
    b60c:	ldr	x8, [x0]
    b610:	add	x8, x8, #0x1
    b614:	str	x8, [x0]
    b618:	b	b190 <PyInit__testcapi@@Base+0x1fd4>
    b61c:	stp	x29, x30, [sp, #-16]!
    b620:	mov	x29, sp
    b624:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b628:	ldr	x0, [x0, #4016]
    b62c:	ldr	x8, [x0]
    b630:	add	x8, x8, #0x1
    b634:	str	x8, [x0]
    b638:	bl	8bd0 <PyLong_AsDouble@plt>
    b63c:	fmov	d1, #-1.000000000000000000e+00
    b640:	fcmp	d0, d1
    b644:	b.eq	b678 <PyInit__testcapi@@Base+0x24bc>  // b.none
    b648:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b64c:	ldr	x0, [x8, #3520]
    b650:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b654:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b658:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b65c:	add	x1, x1, #0xc12
    b660:	add	x2, x2, #0xc69
    b664:	add	x3, x3, #0xd80
    b668:	bl	8e60 <PyErr_Format@plt>
    b66c:	mov	x0, xzr
    b670:	ldp	x29, x30, [sp], #16
    b674:	ret
    b678:	bl	8980 <PyErr_Occurred@plt>
    b67c:	cbz	x0, b648 <PyInit__testcapi@@Base+0x248c>
    b680:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b684:	ldr	x8, [x8, #3952]
    b688:	ldr	x0, [x8]
    b68c:	bl	8760 <PyErr_ExceptionMatches@plt>
    b690:	cbz	w0, b6a8 <PyInit__testcapi@@Base+0x24ec>
    b694:	bl	88c0 <PyErr_Clear@plt>
    b698:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b69c:	ldr	x0, [x0, #4016]
    b6a0:	ldp	x29, x30, [sp], #16
    b6a4:	ret
    b6a8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b6ac:	ldr	x0, [x8, #3520]
    b6b0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b6b4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b6b8:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b6bc:	add	x1, x1, #0xc12
    b6c0:	add	x2, x2, #0xc69
    b6c4:	add	x3, x3, #0xda6
    b6c8:	b	b668 <PyInit__testcapi@@Base+0x24ac>
    b6cc:	stp	x29, x30, [sp, #-32]!
    b6d0:	str	x19, [sp, #16]
    b6d4:	mov	x29, sp
    b6d8:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b6dc:	ldr	x0, [x0, #4016]
    b6e0:	ldr	x8, [x0]
    b6e4:	add	x8, x8, #0x1
    b6e8:	str	x8, [x0]
    b6ec:	bl	8930 <PyLong_AsSize_t@plt>
    b6f0:	cmn	x0, #0x1
    b6f4:	b.eq	b72c <PyInit__testcapi@@Base+0x2570>  // b.none
    b6f8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b6fc:	ldr	x0, [x8, #3520]
    b700:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b704:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b708:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b70c:	add	x1, x1, #0xc12
    b710:	add	x2, x2, #0xc7d
    b714:	add	x3, x3, #0xde2
    b718:	bl	8e60 <PyErr_Format@plt>
    b71c:	mov	x0, xzr
    b720:	ldr	x19, [sp, #16]
    b724:	ldp	x29, x30, [sp], #32
    b728:	ret
    b72c:	bl	8980 <PyErr_Occurred@plt>
    b730:	cbz	x0, b6f8 <PyInit__testcapi@@Base+0x253c>
    b734:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b738:	ldr	x19, [x19, #3952]
    b73c:	ldr	x0, [x19]
    b740:	bl	8760 <PyErr_ExceptionMatches@plt>
    b744:	cbz	w0, b784 <PyInit__testcapi@@Base+0x25c8>
    b748:	bl	88c0 <PyErr_Clear@plt>
    b74c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b750:	ldr	x0, [x0, #4016]
    b754:	bl	8850 <PyLong_AsSsize_t@plt>
    b758:	cmn	x0, #0x1
    b75c:	b.eq	b7a8 <PyInit__testcapi@@Base+0x25ec>  // b.none
    b760:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b764:	ldr	x0, [x8, #3520]
    b768:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b76c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b770:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b774:	add	x1, x1, #0xc12
    b778:	add	x2, x2, #0xc7d
    b77c:	add	x3, x3, #0xe44
    b780:	b	b718 <PyInit__testcapi@@Base+0x255c>
    b784:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b788:	ldr	x0, [x8, #3520]
    b78c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b790:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b794:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b798:	add	x1, x1, #0xc12
    b79c:	add	x2, x2, #0xc7d
    b7a0:	add	x3, x3, #0xe08
    b7a4:	b	b718 <PyInit__testcapi@@Base+0x255c>
    b7a8:	bl	8980 <PyErr_Occurred@plt>
    b7ac:	cbz	x0, b760 <PyInit__testcapi@@Base+0x25a4>
    b7b0:	ldr	x0, [x19]
    b7b4:	bl	8760 <PyErr_ExceptionMatches@plt>
    b7b8:	cbz	w0, b7cc <PyInit__testcapi@@Base+0x2610>
    b7bc:	bl	88c0 <PyErr_Clear@plt>
    b7c0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b7c4:	ldr	x0, [x0, #4016]
    b7c8:	b	b720 <PyInit__testcapi@@Base+0x2564>
    b7cc:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b7d0:	ldr	x0, [x8, #3520]
    b7d4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b7d8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b7dc:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b7e0:	add	x1, x1, #0xc12
    b7e4:	add	x2, x2, #0xc7d
    b7e8:	add	x3, x3, #0xe6b
    b7ec:	b	b718 <PyInit__testcapi@@Base+0x255c>
    b7f0:	stp	x29, x30, [sp, #-16]!
    b7f4:	mov	x29, sp
    b7f8:	mov	x0, xzr
    b7fc:	bl	84f0 <PyLong_AsUnsignedLongLongMask@plt>
    b800:	cmn	x0, #0x1
    b804:	b.eq	b838 <PyInit__testcapi@@Base+0x267c>  // b.none
    b808:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b80c:	ldr	x0, [x8, #3520]
    b810:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b814:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b818:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b81c:	add	x1, x1, #0xc12
    b820:	add	x2, x2, #0xc91
    b824:	add	x3, x3, #0xea8
    b828:	bl	8e60 <PyErr_Format@plt>
    b82c:	mov	x0, xzr
    b830:	ldp	x29, x30, [sp], #16
    b834:	ret
    b838:	bl	8980 <PyErr_Occurred@plt>
    b83c:	cbz	x0, b808 <PyInit__testcapi@@Base+0x264c>
    b840:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b844:	ldr	x8, [x8, #3848]
    b848:	ldr	x0, [x8]
    b84c:	bl	8760 <PyErr_ExceptionMatches@plt>
    b850:	cbz	w0, b874 <PyInit__testcapi@@Base+0x26b8>
    b854:	bl	88c0 <PyErr_Clear@plt>
    b858:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b85c:	ldr	x0, [x0, #4016]
    b860:	ldr	x8, [x0]
    b864:	add	x8, x8, #0x1
    b868:	str	x8, [x0]
    b86c:	ldp	x29, x30, [sp], #16
    b870:	ret
    b874:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b878:	ldr	x0, [x8, #3520]
    b87c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b880:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b884:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b888:	add	x1, x1, #0xc12
    b88c:	add	x2, x2, #0xc91
    b890:	add	x3, x3, #0xedc
    b894:	b	b828 <PyInit__testcapi@@Base+0x266c>
    b898:	stp	x29, x30, [sp, #-64]!
    b89c:	str	x23, [sp, #16]
    b8a0:	stp	x22, x21, [sp, #32]
    b8a4:	stp	x20, x19, [sp, #48]
    b8a8:	mov	x29, sp
    b8ac:	adrp	x23, 13000 <PyInit__testcapi@@Base+0x9e44>
    b8b0:	mov	x22, xzr
    b8b4:	add	x23, x23, #0x438
    b8b8:	ldr	x0, [x23, x22]
    b8bc:	bl	8840 <PyLong_FromLong@plt>
    b8c0:	cbz	x0, b980 <PyInit__testcapi@@Base+0x27c4>
    b8c4:	mov	x19, x0
    b8c8:	bl	85f0 <_PyLong_NumBits@plt>
    b8cc:	mov	x20, x0
    b8d0:	mov	x0, x19
    b8d4:	bl	85b0 <_PyLong_Sign@plt>
    b8d8:	ldr	x8, [x19]
    b8dc:	mov	w21, w0
    b8e0:	subs	x8, x8, #0x1
    b8e4:	str	x8, [x19]
    b8e8:	b.ne	b8f4 <PyInit__testcapi@@Base+0x2738>  // b.any
    b8ec:	mov	x0, x19
    b8f0:	bl	8560 <_Py_Dealloc@plt>
    b8f4:	add	x8, x23, x22
    b8f8:	ldr	x9, [x8, #8]
    b8fc:	cmp	x20, x9
    b900:	b.ne	b934 <PyInit__testcapi@@Base+0x2778>  // b.any
    b904:	ldr	w8, [x8, #16]
    b908:	cmp	w21, w8
    b90c:	b.ne	b958 <PyInit__testcapi@@Base+0x279c>  // b.any
    b910:	add	x22, x22, #0x18
    b914:	cmp	x22, #0x168
    b918:	b.ne	b8b8 <PyInit__testcapi@@Base+0x26fc>  // b.any
    b91c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    b920:	ldr	x0, [x0, #4016]
    b924:	ldr	x8, [x0]
    b928:	add	x8, x8, #0x1
    b92c:	str	x8, [x0]
    b930:	b	b980 <PyInit__testcapi@@Base+0x27c4>
    b934:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b938:	ldr	x0, [x8, #3520]
    b93c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b940:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b944:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b948:	add	x1, x1, #0xc12
    b94c:	add	x2, x2, #0xcb6
    b950:	add	x3, x3, #0xf28
    b954:	b	b978 <PyInit__testcapi@@Base+0x27bc>
    b958:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b95c:	ldr	x0, [x8, #3520]
    b960:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b964:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    b968:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b96c:	add	x1, x1, #0xc12
    b970:	add	x2, x2, #0xcb6
    b974:	add	x3, x3, #0xf49
    b978:	bl	8e60 <PyErr_Format@plt>
    b97c:	mov	x0, xzr
    b980:	ldp	x20, x19, [sp, #48]
    b984:	ldp	x22, x21, [sp, #32]
    b988:	ldr	x23, [sp, #16]
    b98c:	ldp	x29, x30, [sp], #64
    b990:	ret
    b994:	sub	sp, sp, #0x30
    b998:	stp	x29, x30, [sp, #16]
    b99c:	stp	x20, x19, [sp, #32]
    b9a0:	add	x29, sp, #0x10
    b9a4:	mov	w0, #0x1                   	// #1
    b9a8:	bl	8920 <PyTuple_New@plt>
    b9ac:	cbz	x0, ba08 <PyInit__testcapi@@Base+0x284c>
    b9b0:	mov	x19, x0
    b9b4:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    b9b8:	add	x0, x0, #0xcb9
    b9bc:	mov	w2, #0x10                  	// #16
    b9c0:	mov	x1, xzr
    b9c4:	bl	8f90 <PyLong_FromString@plt>
    b9c8:	cbz	x0, ba08 <PyInit__testcapi@@Base+0x284c>
    b9cc:	mov	x20, x0
    b9d0:	bl	88f0 <PyLong_AsUnsignedLongMask@plt>
    b9d4:	cmn	x0, #0x1
    b9d8:	str	x0, [sp, #8]
    b9dc:	b.eq	ba18 <PyInit__testcapi@@Base+0x285c>  // b.none
    b9e0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    b9e4:	ldr	x0, [x8, #3520]
    b9e8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    b9ec:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    b9f0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    b9f4:	add	x1, x1, #0xc12
    b9f8:	add	x2, x2, #0xfaf
    b9fc:	add	x3, x3, #0xf67
    ba00:	bl	8e60 <PyErr_Format@plt>
    ba04:	mov	x0, xzr
    ba08:	ldp	x20, x19, [sp, #32]
    ba0c:	ldp	x29, x30, [sp, #16]
    ba10:	add	sp, sp, #0x30
    ba14:	ret
    ba18:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ba1c:	add	x1, x1, #0xfad
    ba20:	add	x2, sp, #0x8
    ba24:	mov	x0, x19
    ba28:	str	x20, [x19, #24]
    ba2c:	str	xzr, [sp, #8]
    ba30:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ba34:	cbz	w0, ba04 <PyInit__testcapi@@Base+0x2848>
    ba38:	ldr	x8, [sp, #8]
    ba3c:	cmn	x8, #0x1
    ba40:	b.eq	ba68 <PyInit__testcapi@@Base+0x28ac>  // b.none
    ba44:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ba48:	ldr	x0, [x8, #3520]
    ba4c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ba50:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    ba54:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ba58:	add	x1, x1, #0xc12
    ba5c:	add	x2, x2, #0xfaf
    ba60:	add	x3, x3, #0xfbb
    ba64:	b	ba00 <PyInit__testcapi@@Base+0x2844>
    ba68:	ldr	x8, [x20]
    ba6c:	subs	x8, x8, #0x1
    ba70:	str	x8, [x20]
    ba74:	b.ne	ba80 <PyInit__testcapi@@Base+0x28c4>  // b.any
    ba78:	mov	x0, x20
    ba7c:	bl	8560 <_Py_Dealloc@plt>
    ba80:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    ba84:	add	x0, x0, #0xfec
    ba88:	mov	w2, #0x10                  	// #16
    ba8c:	mov	x1, xzr
    ba90:	bl	8f90 <PyLong_FromString@plt>
    ba94:	cbz	x0, ba08 <PyInit__testcapi@@Base+0x284c>
    ba98:	mov	x20, x0
    ba9c:	bl	88f0 <PyLong_AsUnsignedLongMask@plt>
    baa0:	cmn	x0, #0x42
    baa4:	str	x0, [sp, #8]
    baa8:	b.ne	bb08 <PyInit__testcapi@@Base+0x294c>  // b.any
    baac:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bab0:	add	x1, x1, #0xfad
    bab4:	add	x2, sp, #0x8
    bab8:	mov	x0, x19
    babc:	str	x20, [x19, #24]
    bac0:	str	xzr, [sp, #8]
    bac4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    bac8:	cbz	w0, ba04 <PyInit__testcapi@@Base+0x2848>
    bacc:	ldr	x8, [sp, #8]
    bad0:	cmn	x8, #0x42
    bad4:	b.ne	bb2c <PyInit__testcapi@@Base+0x2970>  // b.any
    bad8:	ldr	x8, [x19]
    badc:	subs	x8, x8, #0x1
    bae0:	str	x8, [x19]
    bae4:	b.ne	baf0 <PyInit__testcapi@@Base+0x2934>  // b.any
    bae8:	mov	x0, x19
    baec:	bl	8560 <_Py_Dealloc@plt>
    baf0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    baf4:	ldr	x0, [x0, #4016]
    baf8:	ldr	x8, [x0]
    bafc:	add	x8, x8, #0x1
    bb00:	str	x8, [x0]
    bb04:	b	ba08 <PyInit__testcapi@@Base+0x284c>
    bb08:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    bb0c:	ldr	x0, [x8, #3520]
    bb10:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bb14:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bb18:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    bb1c:	add	x1, x1, #0xc12
    bb20:	add	x2, x2, #0xfaf
    bb24:	add	x3, x3, #0x8
    bb28:	b	ba00 <PyInit__testcapi@@Base+0x2844>
    bb2c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    bb30:	ldr	x0, [x8, #3520]
    bb34:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bb38:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    bb3c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    bb40:	add	x1, x1, #0xc12
    bb44:	add	x2, x2, #0xfaf
    bb48:	add	x3, x3, #0x51
    bb4c:	b	ba00 <PyInit__testcapi@@Base+0x2844>
    bb50:	stp	x29, x30, [sp, #-48]!
    bb54:	str	x21, [sp, #16]
    bb58:	stp	x20, x19, [sp, #32]
    bb5c:	mov	x29, sp
    bb60:	mov	x0, xzr
    bb64:	bl	8920 <PyTuple_New@plt>
    bb68:	cbz	x0, bc3c <PyInit__testcapi@@Base+0x2a80>
    bb6c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bb70:	add	x1, x1, #0x85
    bb74:	mov	x19, x0
    bb78:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    bb7c:	cbz	w0, bbdc <PyInit__testcapi@@Base+0x2a20>
    bb80:	bl	8c20 <PyDict_New@plt>
    bb84:	cbz	x0, bbf8 <PyInit__testcapi@@Base+0x2a3c>
    bb88:	mov	x20, x0
    bb8c:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    bb90:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
    bb94:	add	x2, x2, #0x85
    bb98:	add	x3, x3, #0xdd8
    bb9c:	mov	x0, x19
    bba0:	mov	x1, x20
    bba4:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    bba8:	ldr	x8, [x19]
    bbac:	mov	w21, w0
    bbb0:	subs	x8, x8, #0x1
    bbb4:	str	x8, [x19]
    bbb8:	b.ne	bbc4 <PyInit__testcapi@@Base+0x2a08>  // b.any
    bbbc:	mov	x0, x19
    bbc0:	bl	8560 <_Py_Dealloc@plt>
    bbc4:	ldr	x8, [x20]
    bbc8:	subs	x8, x8, #0x1
    bbcc:	str	x8, [x20]
    bbd0:	b.eq	bc14 <PyInit__testcapi@@Base+0x2a58>  // b.none
    bbd4:	cbnz	w21, bc20 <PyInit__testcapi@@Base+0x2a64>
    bbd8:	b	bc38 <PyInit__testcapi@@Base+0x2a7c>
    bbdc:	ldr	x8, [x19]
    bbe0:	subs	x8, x8, #0x1
    bbe4:	str	x8, [x19]
    bbe8:	b.ne	bc38 <PyInit__testcapi@@Base+0x2a7c>  // b.any
    bbec:	mov	x0, x19
    bbf0:	bl	8560 <_Py_Dealloc@plt>
    bbf4:	b	bc38 <PyInit__testcapi@@Base+0x2a7c>
    bbf8:	ldr	x8, [x19]
    bbfc:	subs	x8, x8, #0x1
    bc00:	str	x8, [x19]
    bc04:	b.ne	bc20 <PyInit__testcapi@@Base+0x2a64>  // b.any
    bc08:	mov	x0, x19
    bc0c:	bl	8560 <_Py_Dealloc@plt>
    bc10:	b	bc20 <PyInit__testcapi@@Base+0x2a64>
    bc14:	mov	x0, x20
    bc18:	bl	8560 <_Py_Dealloc@plt>
    bc1c:	cbz	w21, bc38 <PyInit__testcapi@@Base+0x2a7c>
    bc20:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    bc24:	ldr	x0, [x0, #4016]
    bc28:	ldr	x8, [x0]
    bc2c:	add	x8, x8, #0x1
    bc30:	str	x8, [x0]
    bc34:	b	bc3c <PyInit__testcapi@@Base+0x2a80>
    bc38:	mov	x0, xzr
    bc3c:	ldp	x20, x19, [sp, #32]
    bc40:	ldr	x21, [sp, #16]
    bc44:	ldp	x29, x30, [sp], #48
    bc48:	ret
    bc4c:	stp	x29, x30, [sp, #-80]!
    bc50:	str	x28, [sp, #16]
    bc54:	stp	x24, x23, [sp, #32]
    bc58:	stp	x22, x21, [sp, #48]
    bc5c:	stp	x20, x19, [sp, #64]
    bc60:	mov	x29, sp
    bc64:	sub	sp, sp, #0x1c0
    bc68:	mov	x0, x1
    bc6c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bc70:	add	x1, x1, #0x9b
    bc74:	add	x2, x29, #0x18
    bc78:	sub	x3, x29, #0x8
    bc7c:	sub	x4, x29, #0x10
    bc80:	sub	x5, x29, #0x18
    bc84:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    bc88:	cbz	w0, bccc <PyInit__testcapi@@Base+0x2b10>
    bc8c:	ldur	x8, [x29, #-24]
    bc90:	adrp	x10, 26000 <PyInit__testcapi@@Base+0x1ce44>
    bc94:	ldr	x9, [x8, #8]
    bc98:	ldr	x10, [x10, #4064]
    bc9c:	cmp	x9, x10
    bca0:	b.eq	bcf0 <PyInit__testcapi@@Base+0x2b34>  // b.none
    bca4:	adrp	x10, 26000 <PyInit__testcapi@@Base+0x1ce44>
    bca8:	ldr	x10, [x10, #3872]
    bcac:	cmp	x9, x10
    bcb0:	b.eq	bcf0 <PyInit__testcapi@@Base+0x2b34>  // b.none
    bcb4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    bcb8:	ldr	x8, [x8, #3944]
    bcbc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bcc0:	add	x1, x1, #0xb9
    bcc4:	ldr	x0, [x8]
    bcc8:	bl	8670 <PyErr_SetString@plt>
    bccc:	mov	x19, xzr
    bcd0:	mov	x0, x19
    bcd4:	add	sp, sp, #0x1c0
    bcd8:	ldp	x20, x19, [sp, #64]
    bcdc:	ldp	x22, x21, [sp, #48]
    bce0:	ldp	x24, x23, [sp, #32]
    bce4:	ldr	x28, [sp, #16]
    bce8:	ldp	x29, x30, [sp], #80
    bcec:	ret
    bcf0:	movi	v0.2d, #0x0
    bcf4:	stur	xzr, [x29, #-32]
    bcf8:	stp	q0, q0, [sp, #256]
    bcfc:	stp	q0, q0, [sp, #224]
    bd00:	stp	q0, q0, [sp, #192]
    bd04:	stp	q0, q0, [sp, #160]
    bd08:	stp	q0, q0, [sp, #128]
    bd0c:	stp	q0, q0, [sp, #96]
    bd10:	stp	q0, q0, [sp, #64]
    bd14:	stp	q0, q0, [sp, #32]
    bd18:	stp	q0, q0, [x29, #-160]
    bd1c:	stp	q0, q0, [x29, #-128]
    bd20:	stp	q0, q0, [x29, #-64]
    bd24:	stp	q0, q0, [x29, #-96]
    bd28:	ldr	x9, [x8, #16]
    bd2c:	cmp	x9, #0x8
    bd30:	b.le	bd50 <PyInit__testcapi@@Base+0x2b94>
    bd34:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    bd38:	ldr	x8, [x8, #3944]
    bd3c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    bd40:	add	x1, x1, #0xfd
    bd44:	ldr	x0, [x8]
    bd48:	bl	8670 <PyErr_SetString@plt>
    bd4c:	b	be40 <PyInit__testcapi@@Base+0x2c84>
    bd50:	cmp	x9, #0x1
    bd54:	b.lt	bdcc <PyInit__testcapi@@Base+0x2c10>  // b.tstop
    bd58:	mov	w10, #0x1                   	// #1
    bd5c:	mov	x20, xzr
    bd60:	mov	x19, xzr
    bd64:	mov	x21, xzr
    bd68:	sub	x22, x29, #0xa0
    bd6c:	sub	x23, x10, x9
    bd70:	sub	x24, x29, #0x60
    bd74:	ldr	x9, [x8, #8]
    bd78:	ldrb	w9, [x9, #171]
    bd7c:	tbnz	w9, #1, bd8c <PyInit__testcapi@@Base+0x2bd0>
    bd80:	add	x8, x8, x20
    bd84:	add	x8, x8, #0x18
    bd88:	b	bd94 <PyInit__testcapi@@Base+0x2bd8>
    bd8c:	ldr	x8, [x8, #24]
    bd90:	add	x8, x8, x21, lsl #3
    bd94:	ldr	x0, [x8]
    bd98:	add	x1, x22, x20
    bd9c:	bl	8610 <PyUnicode_FSConverter@plt>
    bda0:	cbz	w0, be24 <PyInit__testcapi@@Base+0x2c68>
    bda4:	ldr	x8, [x22, x20]
    bda8:	cmp	x23, x19
    bdac:	add	x8, x8, #0x20
    bdb0:	str	x8, [x24, x20]
    bdb4:	b.eq	bdcc <PyInit__testcapi@@Base+0x2c10>  // b.none
    bdb8:	ldur	x8, [x29, #-24]
    bdbc:	add	x21, x21, #0x1
    bdc0:	sub	x19, x19, #0x1
    bdc4:	add	x20, x20, #0x8
    bdc8:	b	bd74 <PyInit__testcapi@@Base+0x2bb8>
    bdcc:	ldr	x0, [x29, #24]
    bdd0:	ldp	x2, x1, [x29, #-16]
    bdd4:	add	x8, sp, #0x20
    bdd8:	add	x5, x8, #0x20
    bddc:	add	x6, x8, #0x40
    bde0:	add	x7, x8, #0x60
    bde4:	add	x9, x8, #0x80
    bde8:	add	x10, x8, #0xa0
    bdec:	add	x11, x8, #0xc0
    bdf0:	add	x8, x8, #0xe0
    bdf4:	sub	x3, x29, #0x60
    bdf8:	add	x4, sp, #0x20
    bdfc:	stp	x11, x8, [sp, #16]
    be00:	stp	x9, x10, [sp]
    be04:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    be08:	cbz	w0, be40 <PyInit__testcapi@@Base+0x2c84>
    be0c:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    be10:	ldr	x19, [x19, #4016]
    be14:	ldr	x8, [x19]
    be18:	add	x8, x8, #0x1
    be1c:	str	x8, [x19]
    be20:	b	be44 <PyInit__testcapi@@Base+0x2c88>
    be24:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    be28:	ldr	x8, [x8, #3944]
    be2c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    be30:	neg	x2, x19
    be34:	add	x1, x1, #0x139
    be38:	ldr	x0, [x8]
    be3c:	bl	8e60 <PyErr_Format@plt>
    be40:	mov	x19, xzr
    be44:	ldur	x0, [x29, #-160]
    be48:	cbz	x0, be60 <PyInit__testcapi@@Base+0x2ca4>
    be4c:	ldr	x8, [x0]
    be50:	subs	x8, x8, #0x1
    be54:	str	x8, [x0]
    be58:	b.ne	be60 <PyInit__testcapi@@Base+0x2ca4>  // b.any
    be5c:	bl	8560 <_Py_Dealloc@plt>
    be60:	ldur	x0, [x29, #-152]
    be64:	cbz	x0, be7c <PyInit__testcapi@@Base+0x2cc0>
    be68:	ldr	x8, [x0]
    be6c:	subs	x8, x8, #0x1
    be70:	str	x8, [x0]
    be74:	b.ne	be7c <PyInit__testcapi@@Base+0x2cc0>  // b.any
    be78:	bl	8560 <_Py_Dealloc@plt>
    be7c:	ldur	x0, [x29, #-144]
    be80:	cbz	x0, be98 <PyInit__testcapi@@Base+0x2cdc>
    be84:	ldr	x8, [x0]
    be88:	subs	x8, x8, #0x1
    be8c:	str	x8, [x0]
    be90:	b.ne	be98 <PyInit__testcapi@@Base+0x2cdc>  // b.any
    be94:	bl	8560 <_Py_Dealloc@plt>
    be98:	ldur	x0, [x29, #-136]
    be9c:	cbz	x0, beb4 <PyInit__testcapi@@Base+0x2cf8>
    bea0:	ldr	x8, [x0]
    bea4:	subs	x8, x8, #0x1
    bea8:	str	x8, [x0]
    beac:	b.ne	beb4 <PyInit__testcapi@@Base+0x2cf8>  // b.any
    beb0:	bl	8560 <_Py_Dealloc@plt>
    beb4:	ldur	x0, [x29, #-128]
    beb8:	cbz	x0, bed0 <PyInit__testcapi@@Base+0x2d14>
    bebc:	ldr	x8, [x0]
    bec0:	subs	x8, x8, #0x1
    bec4:	str	x8, [x0]
    bec8:	b.ne	bed0 <PyInit__testcapi@@Base+0x2d14>  // b.any
    becc:	bl	8560 <_Py_Dealloc@plt>
    bed0:	ldur	x0, [x29, #-120]
    bed4:	cbz	x0, beec <PyInit__testcapi@@Base+0x2d30>
    bed8:	ldr	x8, [x0]
    bedc:	subs	x8, x8, #0x1
    bee0:	str	x8, [x0]
    bee4:	b.ne	beec <PyInit__testcapi@@Base+0x2d30>  // b.any
    bee8:	bl	8560 <_Py_Dealloc@plt>
    beec:	ldur	x0, [x29, #-112]
    bef0:	cbz	x0, bf08 <PyInit__testcapi@@Base+0x2d4c>
    bef4:	ldr	x8, [x0]
    bef8:	subs	x8, x8, #0x1
    befc:	str	x8, [x0]
    bf00:	b.ne	bf08 <PyInit__testcapi@@Base+0x2d4c>  // b.any
    bf04:	bl	8560 <_Py_Dealloc@plt>
    bf08:	ldur	x0, [x29, #-104]
    bf0c:	cbz	x0, bcd0 <PyInit__testcapi@@Base+0x2b14>
    bf10:	ldr	x8, [x0]
    bf14:	subs	x8, x8, #0x1
    bf18:	str	x8, [x0]
    bf1c:	b.ne	bcd0 <PyInit__testcapi@@Base+0x2b14>  // b.any
    bf20:	bl	8560 <_Py_Dealloc@plt>
    bf24:	b	bcd0 <PyInit__testcapi@@Base+0x2b14>
    bf28:	stp	x29, x30, [sp, #-48]!
    bf2c:	str	x21, [sp, #16]
    bf30:	stp	x20, x19, [sp, #32]
    bf34:	mov	x29, sp
    bf38:	mov	x0, xzr
    bf3c:	bl	8600 <PyObject_Str@plt>
    bf40:	mov	x21, x0
    bf44:	mov	x0, xzr
    bf48:	bl	8600 <PyObject_Str@plt>
    bf4c:	mov	x19, x0
    bf50:	mov	w0, #0x2                   	// #2
    bf54:	mov	x1, x21
    bf58:	mov	x2, x19
    bf5c:	bl	9040 <PyTuple_Pack@plt>
    bf60:	mov	x20, x0
    bf64:	cbz	x21, bf78 <PyInit__testcapi@@Base+0x2dbc>
    bf68:	ldr	x8, [x21]
    bf6c:	subs	x8, x8, #0x1
    bf70:	str	x8, [x21]
    bf74:	b.eq	bf98 <PyInit__testcapi@@Base+0x2ddc>  // b.none
    bf78:	cbz	x19, bfa4 <PyInit__testcapi@@Base+0x2de8>
    bf7c:	ldr	x8, [x19]
    bf80:	subs	x8, x8, #0x1
    bf84:	str	x8, [x19]
    bf88:	b.ne	bfa4 <PyInit__testcapi@@Base+0x2de8>  // b.any
    bf8c:	mov	x0, x19
    bf90:	bl	8560 <_Py_Dealloc@plt>
    bf94:	b	bfa4 <PyInit__testcapi@@Base+0x2de8>
    bf98:	mov	x0, x21
    bf9c:	bl	8560 <_Py_Dealloc@plt>
    bfa0:	cbnz	x19, bf7c <PyInit__testcapi@@Base+0x2dc0>
    bfa4:	mov	x0, x20
    bfa8:	ldp	x20, x19, [sp, #32]
    bfac:	ldr	x21, [sp, #16]
    bfb0:	ldp	x29, x30, [sp], #48
    bfb4:	ret
    bfb8:	stp	x29, x30, [sp, #-32]!
    bfbc:	stp	x20, x19, [sp, #16]
    bfc0:	mov	x29, sp
    bfc4:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    bfc8:	add	x0, x0, #0x184
    bfcc:	mov	w1, #0x1                   	// #1
    bfd0:	bl	8260 <PyUnicode_FromFormat@plt>
    bfd4:	cbz	x0, c274 <PyInit__testcapi@@Base+0x30b8>
    bfd8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    bfdc:	add	x1, x1, #0xcb6
    bfe0:	mov	x19, x0
    bfe4:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    bfe8:	cbz	w0, c1dc <PyInit__testcapi@@Base+0x3020>
    bfec:	ldr	x8, [x19]
    bff0:	subs	x8, x8, #0x1
    bff4:	str	x8, [x19]
    bff8:	b.ne	c004 <PyInit__testcapi@@Base+0x2e48>  // b.any
    bffc:	mov	x0, x19
    c000:	bl	8560 <_Py_Dealloc@plt>
    c004:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c008:	add	x0, x0, #0x196
    c00c:	mov	w1, #0x1                   	// #1
    c010:	bl	8260 <PyUnicode_FromFormat@plt>
    c014:	cbz	x0, c274 <PyInit__testcapi@@Base+0x30b8>
    c018:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c01c:	add	x1, x1, #0xcb6
    c020:	mov	x19, x0
    c024:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c028:	cbz	w0, c1e8 <PyInit__testcapi@@Base+0x302c>
    c02c:	ldr	x8, [x19]
    c030:	subs	x8, x8, #0x1
    c034:	str	x8, [x19]
    c038:	b.ne	c044 <PyInit__testcapi@@Base+0x2e88>  // b.any
    c03c:	mov	x0, x19
    c040:	bl	8560 <_Py_Dealloc@plt>
    c044:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c048:	add	x0, x0, #0x1aa
    c04c:	mov	w1, #0x1                   	// #1
    c050:	bl	8260 <PyUnicode_FromFormat@plt>
    c054:	cbz	x0, c274 <PyInit__testcapi@@Base+0x30b8>
    c058:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c05c:	add	x1, x1, #0xcb6
    c060:	mov	x19, x0
    c064:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c068:	cbz	w0, c1f4 <PyInit__testcapi@@Base+0x3038>
    c06c:	ldr	x8, [x19]
    c070:	subs	x8, x8, #0x1
    c074:	str	x8, [x19]
    c078:	b.ne	c084 <PyInit__testcapi@@Base+0x2ec8>  // b.any
    c07c:	mov	x0, x19
    c080:	bl	8560 <_Py_Dealloc@plt>
    c084:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c088:	add	x0, x0, #0x1be
    c08c:	mov	w1, #0x1                   	// #1
    c090:	bl	8260 <PyUnicode_FromFormat@plt>
    c094:	cbz	x0, c274 <PyInit__testcapi@@Base+0x30b8>
    c098:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c09c:	add	x1, x1, #0xcb6
    c0a0:	mov	x19, x0
    c0a4:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c0a8:	cbz	w0, c200 <PyInit__testcapi@@Base+0x3044>
    c0ac:	ldr	x8, [x19]
    c0b0:	subs	x8, x8, #0x1
    c0b4:	str	x8, [x19]
    c0b8:	b.ne	c0c4 <PyInit__testcapi@@Base+0x2f08>  // b.any
    c0bc:	mov	x0, x19
    c0c0:	bl	8560 <_Py_Dealloc@plt>
    c0c4:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c0c8:	add	x0, x0, #0x1d0
    c0cc:	mov	w1, #0x1                   	// #1
    c0d0:	bl	8260 <PyUnicode_FromFormat@plt>
    c0d4:	cbz	x0, c274 <PyInit__testcapi@@Base+0x30b8>
    c0d8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c0dc:	add	x1, x1, #0xcb6
    c0e0:	mov	x19, x0
    c0e4:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c0e8:	cbz	w0, c20c <PyInit__testcapi@@Base+0x3050>
    c0ec:	ldr	x8, [x19]
    c0f0:	subs	x8, x8, #0x1
    c0f4:	str	x8, [x19]
    c0f8:	b.ne	c104 <PyInit__testcapi@@Base+0x2f48>  // b.any
    c0fc:	mov	x0, x19
    c100:	bl	8560 <_Py_Dealloc@plt>
    c104:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c108:	add	x0, x0, #0x1e4
    c10c:	mov	w1, #0x1                   	// #1
    c110:	bl	8260 <PyUnicode_FromFormat@plt>
    c114:	cbz	x0, c274 <PyInit__testcapi@@Base+0x30b8>
    c118:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c11c:	add	x1, x1, #0xcb6
    c120:	mov	x19, x0
    c124:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c128:	cbz	w0, c218 <PyInit__testcapi@@Base+0x305c>
    c12c:	ldr	x8, [x19]
    c130:	subs	x8, x8, #0x1
    c134:	str	x8, [x19]
    c138:	b.ne	c144 <PyInit__testcapi@@Base+0x2f88>  // b.any
    c13c:	mov	x0, x19
    c140:	bl	8560 <_Py_Dealloc@plt>
    c144:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c148:	add	x0, x0, #0x1f8
    c14c:	mov	w1, #0x1                   	// #1
    c150:	bl	8260 <PyUnicode_FromFormat@plt>
    c154:	cbz	x0, c274 <PyInit__testcapi@@Base+0x30b8>
    c158:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c15c:	add	x1, x1, #0xcb6
    c160:	mov	x19, x0
    c164:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c168:	cbz	w0, c224 <PyInit__testcapi@@Base+0x3068>
    c16c:	ldr	x8, [x19]
    c170:	subs	x8, x8, #0x1
    c174:	str	x8, [x19]
    c178:	b.ne	c184 <PyInit__testcapi@@Base+0x2fc8>  // b.any
    c17c:	mov	x0, x19
    c180:	bl	8560 <_Py_Dealloc@plt>
    c184:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c188:	add	x0, x0, #0x20e
    c18c:	mov	w1, #0x1                   	// #1
    c190:	bl	8260 <PyUnicode_FromFormat@plt>
    c194:	cbz	x0, c274 <PyInit__testcapi@@Base+0x30b8>
    c198:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c19c:	add	x1, x1, #0xcb6
    c1a0:	mov	x19, x0
    c1a4:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    c1a8:	cbz	w0, c230 <PyInit__testcapi@@Base+0x3074>
    c1ac:	ldr	x8, [x19]
    c1b0:	subs	x8, x8, #0x1
    c1b4:	str	x8, [x19]
    c1b8:	b.ne	c1c4 <PyInit__testcapi@@Base+0x3008>  // b.any
    c1bc:	mov	x0, x19
    c1c0:	bl	8560 <_Py_Dealloc@plt>
    c1c4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c1c8:	ldr	x0, [x0, #4016]
    c1cc:	ldr	x8, [x0]
    c1d0:	add	x8, x8, #0x1
    c1d4:	str	x8, [x0]
    c1d8:	b	c274 <PyInit__testcapi@@Base+0x30b8>
    c1dc:	adrp	x20, 15000 <PyInit__testcapi@@Base+0xbe44>
    c1e0:	add	x20, x20, #0x187
    c1e4:	b	c238 <PyInit__testcapi@@Base+0x307c>
    c1e8:	adrp	x20, 15000 <PyInit__testcapi@@Base+0xbe44>
    c1ec:	add	x20, x20, #0x19a
    c1f0:	b	c238 <PyInit__testcapi@@Base+0x307c>
    c1f4:	adrp	x20, 15000 <PyInit__testcapi@@Base+0xbe44>
    c1f8:	add	x20, x20, #0x1ae
    c1fc:	b	c238 <PyInit__testcapi@@Base+0x307c>
    c200:	adrp	x20, 15000 <PyInit__testcapi@@Base+0xbe44>
    c204:	add	x20, x20, #0x1c1
    c208:	b	c238 <PyInit__testcapi@@Base+0x307c>
    c20c:	adrp	x20, 15000 <PyInit__testcapi@@Base+0xbe44>
    c210:	add	x20, x20, #0x1d4
    c214:	b	c238 <PyInit__testcapi@@Base+0x307c>
    c218:	adrp	x20, 15000 <PyInit__testcapi@@Base+0xbe44>
    c21c:	add	x20, x20, #0x1e8
    c220:	b	c238 <PyInit__testcapi@@Base+0x307c>
    c224:	adrp	x20, 15000 <PyInit__testcapi@@Base+0xbe44>
    c228:	add	x20, x20, #0x1fd
    c22c:	b	c238 <PyInit__testcapi@@Base+0x307c>
    c230:	adrp	x20, 15000 <PyInit__testcapi@@Base+0xbe44>
    c234:	add	x20, x20, #0x213
    c238:	ldr	x8, [x19]
    c23c:	subs	x8, x8, #0x1
    c240:	str	x8, [x19]
    c244:	b.ne	c250 <PyInit__testcapi@@Base+0x3094>  // b.any
    c248:	mov	x0, x19
    c24c:	bl	8560 <_Py_Dealloc@plt>
    c250:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c254:	ldr	x0, [x8, #3520]
    c258:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c25c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    c260:	add	x1, x1, #0xc12
    c264:	add	x2, x2, #0xcda
    c268:	mov	x3, x20
    c26c:	bl	8e60 <PyErr_Format@plt>
    c270:	mov	x0, xzr
    c274:	ldp	x20, x19, [sp, #16]
    c278:	ldp	x29, x30, [sp], #32
    c27c:	ret
    c280:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c284:	ldr	x0, [x0, #4016]
    c288:	ldr	x8, [x0]
    c28c:	add	x8, x8, #0x1
    c290:	str	x8, [x0]
    c294:	ret
    c298:	stp	d9, d8, [sp, #-48]!
    c29c:	stp	x29, x30, [sp, #16]
    c2a0:	str	x19, [sp, #32]
    c2a4:	mov	x29, sp
    c2a8:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c2ac:	add	x0, x0, #0x2ef
    c2b0:	mov	x1, xzr
    c2b4:	mov	x2, xzr
    c2b8:	bl	8860 <PyOS_string_to_double@plt>
    c2bc:	fmov	d9, #-1.000000000000000000e+00
    c2c0:	mov	v8.16b, v0.16b
    c2c4:	fcmp	d0, d9
    c2c8:	b.ne	c2d4 <PyInit__testcapi@@Base+0x3118>  // b.any
    c2cc:	bl	8980 <PyErr_Occurred@plt>
    c2d0:	cbnz	x0, c308 <PyInit__testcapi@@Base+0x314c>
    c2d4:	adrp	x8, 13000 <PyInit__testcapi@@Base+0x9e44>
    c2d8:	ldr	d0, [x8, #208]
    c2dc:	fcmp	d8, d0
    c2e0:	b.eq	c31c <PyInit__testcapi@@Base+0x3160>  // b.none
    c2e4:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c2e8:	add	x3, x3, #0x224
    c2ec:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c2f0:	ldr	x0, [x8, #3520]
    c2f4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c2f8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    c2fc:	add	x1, x1, #0xc12
    c300:	add	x2, x2, #0xd29
    c304:	bl	8e60 <PyErr_Format@plt>
    c308:	mov	x0, xzr
    c30c:	ldr	x19, [sp, #32]
    c310:	ldp	x29, x30, [sp, #16]
    c314:	ldp	d9, d8, [sp], #48
    c318:	ret
    c31c:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c320:	add	x0, x0, #0x246
    c324:	mov	x1, xzr
    c328:	mov	x2, xzr
    c32c:	bl	8860 <PyOS_string_to_double@plt>
    c330:	mov	v8.16b, v0.16b
    c334:	fcmp	d0, d9
    c338:	b.ne	c344 <PyInit__testcapi@@Base+0x3188>  // b.any
    c33c:	bl	8980 <PyErr_Occurred@plt>
    c340:	cbnz	x0, c308 <PyInit__testcapi@@Base+0x314c>
    c344:	adrp	x8, 13000 <PyInit__testcapi@@Base+0x9e44>
    c348:	ldr	d0, [x8, #216]
    c34c:	fcmp	d8, d0
    c350:	b.eq	c360 <PyInit__testcapi@@Base+0x31a4>  // b.none
    c354:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c358:	add	x3, x3, #0x24c
    c35c:	b	c2ec <PyInit__testcapi@@Base+0x3130>
    c360:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c364:	add	x0, x0, #0x270
    c368:	mov	x1, xzr
    c36c:	mov	x2, xzr
    c370:	bl	8860 <PyOS_string_to_double@plt>
    c374:	mov	v8.16b, v0.16b
    c378:	fcmp	d0, d9
    c37c:	b.ne	c388 <PyInit__testcapi@@Base+0x31cc>  // b.any
    c380:	bl	8980 <PyErr_Occurred@plt>
    c384:	cbnz	x0, c308 <PyInit__testcapi@@Base+0x314c>
    c388:	adrp	x8, 13000 <PyInit__testcapi@@Base+0x9e44>
    c38c:	ldr	d0, [x8, #224]
    c390:	fcmp	d8, d0
    c394:	b.eq	c3a4 <PyInit__testcapi@@Base+0x31e8>  // b.none
    c398:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c39c:	add	x3, x3, #0x276
    c3a0:	b	c2ec <PyInit__testcapi@@Base+0x3130>
    c3a4:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c3a8:	add	x0, x0, #0x29a
    c3ac:	mov	x1, xzr
    c3b0:	mov	x2, xzr
    c3b4:	bl	8860 <PyOS_string_to_double@plt>
    c3b8:	mov	v8.16b, v0.16b
    c3bc:	fcmp	d0, d9
    c3c0:	b.ne	c3cc <PyInit__testcapi@@Base+0x3210>  // b.any
    c3c4:	bl	8980 <PyErr_Occurred@plt>
    c3c8:	cbnz	x0, c308 <PyInit__testcapi@@Base+0x314c>
    c3cc:	fmov	d0, #1.000000000000000000e+00
    c3d0:	fcmp	d8, d0
    c3d4:	b.eq	c3e4 <PyInit__testcapi@@Base+0x3228>  // b.none
    c3d8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c3dc:	add	x3, x3, #0x2a0
    c3e0:	b	c2ec <PyInit__testcapi@@Base+0x3130>
    c3e4:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c3e8:	add	x0, x0, #0x2c4
    c3ec:	mov	x1, xzr
    c3f0:	mov	x2, xzr
    c3f4:	bl	8860 <PyOS_string_to_double@plt>
    c3f8:	mov	v8.16b, v0.16b
    c3fc:	fcmp	d0, d9
    c400:	b.ne	c40c <PyInit__testcapi@@Base+0x3250>  // b.any
    c404:	bl	8980 <PyErr_Occurred@plt>
    c408:	cbnz	x0, c308 <PyInit__testcapi@@Base+0x314c>
    c40c:	adrp	x8, 13000 <PyInit__testcapi@@Base+0x9e44>
    c410:	ldr	d0, [x8, #232]
    c414:	fcmp	d8, d0
    c418:	b.eq	c428 <PyInit__testcapi@@Base+0x326c>  // b.none
    c41c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c420:	add	x3, x3, #0x2ca
    c424:	b	c2ec <PyInit__testcapi@@Base+0x3130>
    c428:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c42c:	add	x0, x0, #0x2ee
    c430:	mov	x1, xzr
    c434:	mov	x2, xzr
    c438:	bl	8860 <PyOS_string_to_double@plt>
    c43c:	fcmp	d0, d9
    c440:	b.ne	c54c <PyInit__testcapi@@Base+0x3390>  // b.any
    c444:	bl	8980 <PyErr_Occurred@plt>
    c448:	cbz	x0, c54c <PyInit__testcapi@@Base+0x3390>
    c44c:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c450:	ldr	x19, [x19, #3944]
    c454:	ldr	x0, [x19]
    c458:	bl	8760 <PyErr_ExceptionMatches@plt>
    c45c:	cbz	w0, c308 <PyInit__testcapi@@Base+0x314c>
    c460:	bl	88c0 <PyErr_Clear@plt>
    c464:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c468:	add	x0, x0, #0x31e
    c46c:	mov	x1, xzr
    c470:	mov	x2, xzr
    c474:	bl	8860 <PyOS_string_to_double@plt>
    c478:	fcmp	d0, d9
    c47c:	b.ne	c558 <PyInit__testcapi@@Base+0x339c>  // b.any
    c480:	bl	8980 <PyErr_Occurred@plt>
    c484:	cbz	x0, c558 <PyInit__testcapi@@Base+0x339c>
    c488:	ldr	x0, [x19]
    c48c:	bl	8760 <PyErr_ExceptionMatches@plt>
    c490:	cbz	w0, c308 <PyInit__testcapi@@Base+0x314c>
    c494:	bl	88c0 <PyErr_Clear@plt>
    c498:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c49c:	add	x0, x0, #0x34e
    c4a0:	mov	x1, xzr
    c4a4:	mov	x2, xzr
    c4a8:	bl	8860 <PyOS_string_to_double@plt>
    c4ac:	fcmp	d0, d9
    c4b0:	b.ne	c564 <PyInit__testcapi@@Base+0x33a8>  // b.any
    c4b4:	bl	8980 <PyErr_Occurred@plt>
    c4b8:	cbz	x0, c564 <PyInit__testcapi@@Base+0x33a8>
    c4bc:	ldr	x0, [x19]
    c4c0:	bl	8760 <PyErr_ExceptionMatches@plt>
    c4c4:	cbz	w0, c308 <PyInit__testcapi@@Base+0x314c>
    c4c8:	bl	88c0 <PyErr_Clear@plt>
    c4cc:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c4d0:	add	x0, x0, #0x380
    c4d4:	mov	x1, xzr
    c4d8:	mov	x2, xzr
    c4dc:	bl	8860 <PyOS_string_to_double@plt>
    c4e0:	fcmp	d0, d9
    c4e4:	b.ne	c570 <PyInit__testcapi@@Base+0x33b4>  // b.any
    c4e8:	bl	8980 <PyErr_Occurred@plt>
    c4ec:	cbz	x0, c570 <PyInit__testcapi@@Base+0x33b4>
    c4f0:	ldr	x0, [x19]
    c4f4:	bl	8760 <PyErr_ExceptionMatches@plt>
    c4f8:	cbz	w0, c308 <PyInit__testcapi@@Base+0x314c>
    c4fc:	bl	88c0 <PyErr_Clear@plt>
    c500:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    c504:	add	x0, x0, #0x3ac
    c508:	mov	x1, xzr
    c50c:	mov	x2, xzr
    c510:	bl	8860 <PyOS_string_to_double@plt>
    c514:	fcmp	d0, d9
    c518:	b.ne	c57c <PyInit__testcapi@@Base+0x33c0>  // b.any
    c51c:	bl	8980 <PyErr_Occurred@plt>
    c520:	cbz	x0, c57c <PyInit__testcapi@@Base+0x33c0>
    c524:	ldr	x0, [x19]
    c528:	bl	8760 <PyErr_ExceptionMatches@plt>
    c52c:	cbz	w0, c308 <PyInit__testcapi@@Base+0x314c>
    c530:	bl	88c0 <PyErr_Clear@plt>
    c534:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c538:	ldr	x0, [x0, #4016]
    c53c:	ldr	x8, [x0]
    c540:	add	x8, x8, #0x1
    c544:	str	x8, [x0]
    c548:	b	c30c <PyInit__testcapi@@Base+0x3150>
    c54c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c550:	add	x3, x3, #0x2f3
    c554:	b	c2ec <PyInit__testcapi@@Base+0x3130>
    c558:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c55c:	add	x3, x3, #0x323
    c560:	b	c2ec <PyInit__testcapi@@Base+0x3130>
    c564:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c568:	add	x3, x3, #0x354
    c56c:	b	c2ec <PyInit__testcapi@@Base+0x3130>
    c570:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c574:	add	x3, x3, #0x383
    c578:	b	c2ec <PyInit__testcapi@@Base+0x3130>
    c57c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c580:	add	x3, x3, #0x3b3
    c584:	b	c2ec <PyInit__testcapi@@Base+0x3130>
    c588:	stp	x29, x30, [sp, #-32]!
    c58c:	stp	x20, x19, [sp, #16]
    c590:	mov	x29, sp
    c594:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e44>
    c598:	add	x0, x0, #0x5a0
    c59c:	mov	w1, #0x4                   	// #4
    c5a0:	bl	8eb0 <PyUnicode_FromStringAndSize@plt>
    c5a4:	cbz	x0, c60c <PyInit__testcapi@@Base+0x3450>
    c5a8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c5ac:	add	x1, x1, #0x3e0
    c5b0:	mov	x19, x0
    c5b4:	bl	8a90 <PyUnicode_CompareWithASCIIString@plt>
    c5b8:	ldr	x8, [x19]
    c5bc:	mov	w20, w0
    c5c0:	subs	x8, x8, #0x1
    c5c4:	str	x8, [x19]
    c5c8:	b.eq	c5e8 <PyInit__testcapi@@Base+0x342c>  // b.none
    c5cc:	cbz	w20, c5f4 <PyInit__testcapi@@Base+0x3438>
    c5d0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c5d4:	ldr	x0, [x0, #4016]
    c5d8:	ldr	x8, [x0]
    c5dc:	add	x8, x8, #0x1
    c5e0:	str	x8, [x0]
    c5e4:	b	c60c <PyInit__testcapi@@Base+0x3450>
    c5e8:	mov	x0, x19
    c5ec:	bl	8560 <_Py_Dealloc@plt>
    c5f0:	cbnz	w20, c5d0 <PyInit__testcapi@@Base+0x3414>
    c5f4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c5f8:	ldr	x0, [x8, #3520]
    c5fc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c600:	add	x1, x1, #0x3e4
    c604:	bl	8670 <PyErr_SetString@plt>
    c608:	mov	x0, xzr
    c60c:	ldp	x20, x19, [sp, #16]
    c610:	ldp	x29, x30, [sp], #32
    c614:	ret
    c618:	sub	sp, sp, #0xb0
    c61c:	stp	x29, x30, [sp, #96]
    c620:	str	x25, [sp, #112]
    c624:	stp	x24, x23, [sp, #128]
    c628:	stp	x22, x21, [sp, #144]
    c62c:	stp	x20, x19, [sp, #160]
    c630:	add	x29, sp, #0x60
    c634:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c638:	add	x8, x8, #0xcc0
    c63c:	ldp	q0, q1, [x8, #32]
    c640:	ldp	q2, q3, [x8, #64]
    c644:	ldp	q4, q5, [x8]
    c648:	adrp	x21, 15000 <PyInit__testcapi@@Base+0xbe44>
    c64c:	adrp	x22, 15000 <PyInit__testcapi@@Base+0xbe44>
    c650:	adrp	x23, 12000 <PyInit__testcapi@@Base+0x8e44>
    c654:	add	x21, x21, #0x62b
    c658:	add	x22, x22, #0x63b
    c65c:	add	x23, x23, #0x10
    c660:	mov	x0, x21
    c664:	mov	x1, x22
    c668:	mov	x2, x23
    c66c:	stp	q0, q1, [sp, #32]
    c670:	stp	q2, q3, [sp, #64]
    c674:	stp	q4, q5, [sp]
    c678:	bl	8e10 <PyCapsule_New@plt>
    c67c:	adrp	x19, 15000 <PyInit__testcapi@@Base+0xbe44>
    c680:	add	x19, x19, #0x6e5
    c684:	mov	x1, x19
    c688:	mov	x20, x0
    c68c:	bl	8f80 <PyCapsule_SetContext@plt>
    c690:	adrp	x24, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c694:	ldr	w8, [x24, #3560]
    c698:	mov	x0, x20
    c69c:	add	w8, w8, #0x1
    c6a0:	str	w8, [x24, #3560]
    c6a4:	bl	8b50 <PyCapsule_GetContext@plt>
    c6a8:	cmp	x0, x19
    c6ac:	b.eq	c6c0 <PyInit__testcapi@@Base+0x3504>  // b.none
    c6b0:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c6b4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c6b8:	add	x3, x3, #0x648
    c6bc:	b	c724 <PyInit__testcapi@@Base+0x3568>
    c6c0:	mov	x0, x20
    c6c4:	bl	8ec0 <PyCapsule_GetDestructor@plt>
    c6c8:	cmp	x0, x23
    c6cc:	b.eq	c6e0 <PyInit__testcapi@@Base+0x3524>  // b.none
    c6d0:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c6d4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c6d8:	add	x3, x3, #0x66d
    c6dc:	b	c724 <PyInit__testcapi@@Base+0x3568>
    c6e0:	mov	x0, x20
    c6e4:	bl	8440 <PyCapsule_GetName@plt>
    c6e8:	cmp	x0, x22
    c6ec:	b.eq	c700 <PyInit__testcapi@@Base+0x3544>  // b.none
    c6f0:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c6f4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c6f8:	add	x3, x3, #0x69e
    c6fc:	b	c724 <PyInit__testcapi@@Base+0x3568>
    c700:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c704:	add	x1, x1, #0x63b
    c708:	mov	x0, x20
    c70c:	bl	8e70 <PyCapsule_GetPointer@plt>
    c710:	cmp	x0, x21
    c714:	b.eq	c764 <PyInit__testcapi@@Base+0x35a8>  // b.none
    c718:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c71c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c720:	add	x3, x3, #0x6c0
    c724:	str	x3, [x8, #3552]
    c728:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c72c:	ldr	x0, [x8, #3520]
    c730:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    c734:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    c738:	add	x1, x1, #0xc12
    c73c:	add	x2, x2, #0xd5f
    c740:	bl	8e60 <PyErr_Format@plt>
    c744:	mov	x0, xzr
    c748:	ldp	x20, x19, [sp, #160]
    c74c:	ldp	x22, x21, [sp, #144]
    c750:	ldp	x24, x23, [sp, #128]
    c754:	ldr	x25, [sp, #112]
    c758:	ldp	x29, x30, [sp, #96]
    c75c:	add	sp, sp, #0xb0
    c760:	ret
    c764:	adrp	x25, 2a000 <PyInit__testcapi@@Base+0x20e44>
    c768:	ldr	x3, [x25, #3552]
    c76c:	cbnz	x3, c728 <PyInit__testcapi@@Base+0x356c>
    c770:	ldr	w8, [x24, #3560]
    c774:	cbz	w8, c8f0 <PyInit__testcapi@@Base+0x3734>
    c778:	str	wzr, [x24, #3560]
    c77c:	ldr	x8, [x20]
    c780:	subs	x8, x8, #0x1
    c784:	str	x8, [x20]
    c788:	b.eq	c820 <PyInit__testcapi@@Base+0x3664>  // b.none
    c78c:	ldr	w8, [x24, #3560]
    c790:	cbz	w8, c8f0 <PyInit__testcapi@@Base+0x3734>
    c794:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c798:	add	x1, x1, #0x46a
    c79c:	mov	x0, sp
    c7a0:	mov	x2, xzr
    c7a4:	str	wzr, [x24, #3560]
    c7a8:	bl	8e10 <PyCapsule_New@plt>
    c7ac:	adrp	x21, 15000 <PyInit__testcapi@@Base+0xbe44>
    c7b0:	add	x21, x21, #0x62b
    c7b4:	mov	x1, x21
    c7b8:	mov	x20, x0
    c7bc:	bl	8d00 <PyCapsule_SetPointer@plt>
    c7c0:	adrp	x22, 15000 <PyInit__testcapi@@Base+0xbe44>
    c7c4:	add	x22, x22, #0x63b
    c7c8:	mov	x0, x20
    c7cc:	mov	x1, x22
    c7d0:	bl	83f0 <PyCapsule_SetName@plt>
    c7d4:	adrp	x23, 12000 <PyInit__testcapi@@Base+0x8e44>
    c7d8:	add	x23, x23, #0x10
    c7dc:	mov	x0, x20
    c7e0:	mov	x1, x23
    c7e4:	bl	8a50 <PyCapsule_SetDestructor@plt>
    c7e8:	mov	x0, x20
    c7ec:	mov	x1, x19
    c7f0:	bl	8f80 <PyCapsule_SetContext@plt>
    c7f4:	ldr	w8, [x24, #3560]
    c7f8:	mov	x0, x20
    c7fc:	add	w8, w8, #0x1
    c800:	str	w8, [x24, #3560]
    c804:	bl	8b50 <PyCapsule_GetContext@plt>
    c808:	cmp	x0, x19
    c80c:	b.eq	c834 <PyInit__testcapi@@Base+0x3678>  // b.none
    c810:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c814:	add	x3, x3, #0x648
    c818:	str	x3, [x25, #3552]
    c81c:	b	c728 <PyInit__testcapi@@Base+0x356c>
    c820:	mov	x0, x20
    c824:	bl	8560 <_Py_Dealloc@plt>
    c828:	ldr	x3, [x25, #3552]
    c82c:	cbnz	x3, c728 <PyInit__testcapi@@Base+0x356c>
    c830:	b	c78c <PyInit__testcapi@@Base+0x35d0>
    c834:	mov	x0, x20
    c838:	bl	8ec0 <PyCapsule_GetDestructor@plt>
    c83c:	cmp	x0, x23
    c840:	b.eq	c854 <PyInit__testcapi@@Base+0x3698>  // b.none
    c844:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c848:	add	x3, x3, #0x66d
    c84c:	str	x3, [x25, #3552]
    c850:	b	c728 <PyInit__testcapi@@Base+0x356c>
    c854:	mov	x0, x20
    c858:	bl	8440 <PyCapsule_GetName@plt>
    c85c:	cmp	x0, x22
    c860:	b.eq	c874 <PyInit__testcapi@@Base+0x36b8>  // b.none
    c864:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c868:	add	x3, x3, #0x69e
    c86c:	str	x3, [x25, #3552]
    c870:	b	c728 <PyInit__testcapi@@Base+0x356c>
    c874:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c878:	add	x1, x1, #0x63b
    c87c:	mov	x0, x20
    c880:	bl	8e70 <PyCapsule_GetPointer@plt>
    c884:	cmp	x0, x21
    c888:	b.eq	c89c <PyInit__testcapi@@Base+0x36e0>  // b.none
    c88c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c890:	add	x3, x3, #0x6c0
    c894:	str	x3, [x25, #3552]
    c898:	b	c728 <PyInit__testcapi@@Base+0x356c>
    c89c:	ldr	x3, [x25, #3552]
    c8a0:	cbnz	x3, c728 <PyInit__testcapi@@Base+0x356c>
    c8a4:	ldr	w8, [x24, #3560]
    c8a8:	cbz	w8, c8f0 <PyInit__testcapi@@Base+0x3734>
    c8ac:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    c8b0:	add	x1, x1, #0x472
    c8b4:	mov	x0, x20
    c8b8:	str	wzr, [x24, #3560]
    c8bc:	bl	8e70 <PyCapsule_GetPointer@plt>
    c8c0:	mov	x19, x0
    c8c4:	bl	8980 <PyErr_Occurred@plt>
    c8c8:	cbz	x0, c8fc <PyInit__testcapi@@Base+0x3740>
    c8cc:	bl	88c0 <PyErr_Clear@plt>
    c8d0:	cbz	x19, c908 <PyInit__testcapi@@Base+0x374c>
    c8d4:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
    c8d8:	adrp	x9, 15000 <PyInit__testcapi@@Base+0xbe44>
    c8dc:	add	x8, x8, #0x4fa
    c8e0:	add	x9, x9, #0x4b6
    c8e4:	cmp	x19, x21
    c8e8:	csel	x3, x9, x8, eq  // eq = none
    c8ec:	b	c728 <PyInit__testcapi@@Base+0x356c>
    c8f0:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c8f4:	add	x3, x3, #0x453
    c8f8:	b	c728 <PyInit__testcapi@@Base+0x356c>
    c8fc:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c900:	add	x3, x3, #0x481
    c904:	b	c728 <PyInit__testcapi@@Base+0x356c>
    c908:	mov	x0, x20
    c90c:	mov	x1, xzr
    c910:	bl	8a50 <PyCapsule_SetDestructor@plt>
    c914:	ldr	x8, [x20]
    c918:	subs	x8, x8, #0x1
    c91c:	str	x8, [x20]
    c920:	b.ne	c92c <PyInit__testcapi@@Base+0x3770>  // b.any
    c924:	mov	x0, x20
    c928:	bl	8560 <_Py_Dealloc@plt>
    c92c:	ldr	w8, [x24, #3560]
    c930:	cbz	w8, c940 <PyInit__testcapi@@Base+0x3784>
    c934:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    c938:	add	x3, x3, #0x53e
    c93c:	b	c728 <PyInit__testcapi@@Base+0x356c>
    c940:	ldr	x0, [sp, #8]
    c944:	cbz	x0, c9f0 <PyInit__testcapi@@Base+0x3834>
    c948:	mov	x8, sp
    c94c:	adrp	x20, 15000 <PyInit__testcapi@@Base+0xbe44>
    c950:	add	x24, x8, #0x10
    c954:	add	x20, x20, #0x5bf
    c958:	b	c96c <PyInit__testcapi@@Base+0x37b0>
    c95c:	bl	88c0 <PyErr_Clear@plt>
    c960:	ldr	x0, [x24, #16]
    c964:	add	x24, x24, #0x18
    c968:	cbz	x0, c9f0 <PyInit__testcapi@@Base+0x3834>
    c96c:	bl	89b0 <PyImport_ImportModule@plt>
    c970:	cbz	x0, c95c <PyInit__testcapi@@Base+0x37a0>
    c974:	mov	x19, x0
    c978:	ldur	x0, [x24, #-16]
    c97c:	mov	w1, wzr
    c980:	bl	8820 <PyCapsule_Import@plt>
    c984:	cbz	x0, ca08 <PyInit__testcapi@@Base+0x384c>
    c988:	ldr	x1, [x24]
    c98c:	mov	x21, x0
    c990:	mov	x0, x19
    c994:	bl	84a0 <PyObject_GetAttrString@plt>
    c998:	cbz	x0, ca40 <PyInit__testcapi@@Base+0x3884>
    c99c:	mov	x1, x20
    c9a0:	mov	x22, x0
    c9a4:	bl	8e70 <PyCapsule_GetPointer@plt>
    c9a8:	mov	x23, x0
    c9ac:	bl	8980 <PyErr_Occurred@plt>
    c9b0:	cbz	x0, ca5c <PyInit__testcapi@@Base+0x38a0>
    c9b4:	bl	88c0 <PyErr_Clear@plt>
    c9b8:	cbnz	x23, caac <PyInit__testcapi@@Base+0x38f0>
    c9bc:	ldr	x8, [x22]
    c9c0:	subs	x8, x8, #0x1
    c9c4:	str	x8, [x22]
    c9c8:	b.ne	c9d4 <PyInit__testcapi@@Base+0x3818>  // b.any
    c9cc:	mov	x0, x22
    c9d0:	bl	8560 <_Py_Dealloc@plt>
    c9d4:	ldr	x8, [x19]
    c9d8:	subs	x8, x8, #0x1
    c9dc:	str	x8, [x19]
    c9e0:	b.ne	c960 <PyInit__testcapi@@Base+0x37a4>  // b.any
    c9e4:	mov	x0, x19
    c9e8:	bl	8560 <_Py_Dealloc@plt>
    c9ec:	b	c960 <PyInit__testcapi@@Base+0x37a4>
    c9f0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    c9f4:	ldr	x0, [x0, #4016]
    c9f8:	ldr	x8, [x0]
    c9fc:	add	x8, x8, #0x1
    ca00:	str	x8, [x0]
    ca04:	b	c748 <PyInit__testcapi@@Base+0x358c>
    ca08:	ldr	x8, [x19]
    ca0c:	subs	x8, x8, #0x1
    ca10:	str	x8, [x19]
    ca14:	b.ne	ca20 <PyInit__testcapi@@Base+0x3864>  // b.any
    ca18:	mov	x0, x19
    ca1c:	bl	8560 <_Py_Dealloc@plt>
    ca20:	ldp	x3, x4, [x24, #-8]
    ca24:	adrp	x19, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ca28:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ca2c:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    ca30:	add	x19, x19, #0xdec
    ca34:	add	x1, x1, #0x56e
    ca38:	add	x2, x2, #0x58e
    ca3c:	b	cb0c <PyInit__testcapi@@Base+0x3950>
    ca40:	ldr	x8, [x19]
    ca44:	subs	x8, x8, #0x1
    ca48:	str	x8, [x19]
    ca4c:	b.ne	c744 <PyInit__testcapi@@Base+0x3588>  // b.any
    ca50:	mov	x0, x19
    ca54:	bl	8560 <_Py_Dealloc@plt>
    ca58:	b	c744 <PyInit__testcapi@@Base+0x3588>
    ca5c:	ldr	x8, [x22]
    ca60:	subs	x8, x8, #0x1
    ca64:	str	x8, [x22]
    ca68:	b.ne	ca74 <PyInit__testcapi@@Base+0x38b8>  // b.any
    ca6c:	mov	x0, x22
    ca70:	bl	8560 <_Py_Dealloc@plt>
    ca74:	ldr	x8, [x19]
    ca78:	subs	x8, x8, #0x1
    ca7c:	str	x8, [x19]
    ca80:	b.ne	ca8c <PyInit__testcapi@@Base+0x38d0>  // b.any
    ca84:	mov	x0, x19
    ca88:	bl	8560 <_Py_Dealloc@plt>
    ca8c:	ldp	x3, x4, [x24, #-8]
    ca90:	adrp	x19, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ca94:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ca98:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    ca9c:	add	x19, x19, #0xdec
    caa0:	add	x1, x1, #0x56e
    caa4:	add	x2, x2, #0x481
    caa8:	b	cb0c <PyInit__testcapi@@Base+0x3950>
    caac:	ldr	x8, [x19]
    cab0:	subs	x8, x8, #0x1
    cab4:	str	x8, [x19]
    cab8:	b.ne	cac4 <PyInit__testcapi@@Base+0x3908>  // b.any
    cabc:	mov	x0, x19
    cac0:	bl	8560 <_Py_Dealloc@plt>
    cac4:	ldr	x8, [x22]
    cac8:	subs	x8, x8, #0x1
    cacc:	str	x8, [x22]
    cad0:	b.ne	cadc <PyInit__testcapi@@Base+0x3920>  // b.any
    cad4:	mov	x0, x22
    cad8:	bl	8560 <_Py_Dealloc@plt>
    cadc:	ldp	x3, x4, [x24, #-8]
    cae0:	adrp	x19, 2a000 <PyInit__testcapi@@Base+0x20e44>
    cae4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    cae8:	add	x19, x19, #0xdec
    caec:	add	x1, x1, #0x56e
    caf0:	cmp	x23, x21
    caf4:	b.eq	cb04 <PyInit__testcapi@@Base+0x3948>  // b.none
    caf8:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    cafc:	add	x2, x2, #0x4fa
    cb00:	b	cb0c <PyInit__testcapi@@Base+0x3950>
    cb04:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    cb08:	add	x2, x2, #0x5e7
    cb0c:	mov	x0, x19
    cb10:	bl	84e0 <sprintf@plt>
    cb14:	mov	x3, x19
    cb18:	b	c728 <PyInit__testcapi@@Base+0x356c>
    cb1c:	sub	sp, sp, #0xc0
    cb20:	stp	x29, x30, [sp, #176]
    cb24:	add	x29, sp, #0xb0
    cb28:	movi	v0.2d, #0xffffffffffffffff
    cb2c:	adrp	x9, 13000 <PyInit__testcapi@@Base+0x9e44>
    cb30:	add	x9, x9, #0x5a8
    cb34:	stp	q0, q0, [x29, #-48]
    cb38:	movi	v0.2s, #0x1
    cb3c:	mov	w8, #0xffffffff            	// #-1
    cb40:	str	d0, [sp, #32]
    cb44:	ldr	q0, [x9]
    cb48:	stur	w8, [x29, #-16]
    cb4c:	mov	w8, #0x5                   	// #5
    cb50:	str	x8, [sp, #88]
    cb54:	mov	w8, #0x8                   	// #8
    cb58:	stp	xzr, x8, [sp, #72]
    cb5c:	adrp	x8, 13000 <PyInit__testcapi@@Base+0x9e44>
    cb60:	ldr	w9, [x9, #16]
    cb64:	stur	q0, [x29, #-80]
    cb68:	ldr	q0, [x8, #240]
    cb6c:	add	x8, sp, #0x58
    cb70:	stp	xzr, x8, [sp, #40]
    cb74:	sub	x8, x29, #0x30
    cb78:	stur	w9, [x29, #-64]
    cb7c:	add	x9, sp, #0x50
    cb80:	mov	x0, sp
    cb84:	sub	x1, x29, #0x50
    cb88:	mov	w2, #0x14                  	// #20
    cb8c:	mov	w3, #0x43                  	// #67
    cb90:	stp	x8, xzr, [sp]
    cb94:	str	q0, [sp, #16]
    cb98:	stp	x9, xzr, [sp, #56]
    cb9c:	bl	8cc0 <PyBuffer_FromContiguous@plt>
    cba0:	ldr	x8, [sp]
    cba4:	ldr	w9, [x8]
    cba8:	cbnz	w9, cc5c <PyInit__testcapi@@Base+0x3aa0>
    cbac:	ldr	w9, [x8, #8]
    cbb0:	cmp	w9, #0x1
    cbb4:	b.ne	cc5c <PyInit__testcapi@@Base+0x3aa0>  // b.any
    cbb8:	ldr	w9, [x8, #16]
    cbbc:	cmp	w9, #0x2
    cbc0:	b.ne	cc5c <PyInit__testcapi@@Base+0x3aa0>  // b.any
    cbc4:	ldr	w9, [x8, #24]
    cbc8:	cmp	w9, #0x3
    cbcc:	b.ne	cc5c <PyInit__testcapi@@Base+0x3aa0>  // b.any
    cbd0:	ldr	w8, [x8, #32]
    cbd4:	cmp	w8, #0x4
    cbd8:	b.ne	cc5c <PyInit__testcapi@@Base+0x3aa0>  // b.any
    cbdc:	ldr	x9, [sp, #56]
    cbe0:	sub	x8, x29, #0x30
    cbe4:	add	x8, x8, #0x20
    cbe8:	str	x8, [sp]
    cbec:	mov	x8, #0xfffffffffffffff8    	// #-8
    cbf0:	str	x8, [x9]
    cbf4:	ldr	x2, [sp, #16]
    cbf8:	mov	x0, sp
    cbfc:	sub	x1, x29, #0x50
    cc00:	mov	w3, #0x43                  	// #67
    cc04:	bl	8cc0 <PyBuffer_FromContiguous@plt>
    cc08:	ldr	x8, [sp]
    cc0c:	ldr	w9, [x8]
    cc10:	cbnz	w9, cc5c <PyInit__testcapi@@Base+0x3aa0>
    cc14:	ldur	w9, [x8, #-8]
    cc18:	cmp	w9, #0x1
    cc1c:	b.ne	cc5c <PyInit__testcapi@@Base+0x3aa0>  // b.any
    cc20:	ldur	w9, [x8, #-16]
    cc24:	cmp	w9, #0x2
    cc28:	b.ne	cc5c <PyInit__testcapi@@Base+0x3aa0>  // b.any
    cc2c:	ldur	w9, [x8, #-24]
    cc30:	cmp	w9, #0x3
    cc34:	b.ne	cc5c <PyInit__testcapi@@Base+0x3aa0>  // b.any
    cc38:	ldur	w8, [x8, #-32]
    cc3c:	cmp	w8, #0x4
    cc40:	b.ne	cc5c <PyInit__testcapi@@Base+0x3aa0>  // b.any
    cc44:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    cc48:	ldr	x0, [x0, #4016]
    cc4c:	ldr	x8, [x0]
    cc50:	add	x8, x8, #0x1
    cc54:	str	x8, [x0]
    cc58:	b	cc74 <PyInit__testcapi@@Base+0x3ab8>
    cc5c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    cc60:	ldr	x0, [x8, #3520]
    cc64:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    cc68:	add	x1, x1, #0x6f5
    cc6c:	bl	8670 <PyErr_SetString@plt>
    cc70:	mov	x0, xzr
    cc74:	ldp	x29, x30, [sp, #176]
    cc78:	add	sp, sp, #0xc0
    cc7c:	ret
    cc80:	stp	x29, x30, [sp, #-48]!
    cc84:	str	x21, [sp, #16]
    cc88:	stp	x20, x19, [sp, #32]
    cc8c:	mov	x29, sp
    cc90:	add	x2, x29, #0x18
    cc94:	mov	w3, #0x1                   	// #1
    cc98:	mov	x0, xzr
    cc9c:	mov	x1, xzr
    cca0:	mov	w4, wzr
    cca4:	mov	w5, wzr
    cca8:	bl	8870 <PyBuffer_FillInfo@plt>
    ccac:	mov	w19, w0
    ccb0:	bl	8980 <PyErr_Occurred@plt>
    ccb4:	cbz	x0, cd64 <PyInit__testcapi@@Base+0x3ba8>
    ccb8:	adrp	x21, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ccbc:	ldr	x21, [x21, #3896]
    ccc0:	ldr	x0, [x21]
    ccc4:	bl	8760 <PyErr_ExceptionMatches@plt>
    ccc8:	mov	w20, w0
    cccc:	bl	88c0 <PyErr_Clear@plt>
    ccd0:	cmn	w19, #0x1
    ccd4:	b.ne	cd68 <PyInit__testcapi@@Base+0x3bac>  // b.any
    ccd8:	cbz	w20, cd68 <PyInit__testcapi@@Base+0x3bac>
    ccdc:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    cce0:	ldr	x0, [x0, #3864]
    cce4:	mov	x1, xzr
    cce8:	ldr	x8, [x0, #304]
    ccec:	blr	x8
    ccf0:	cbz	x0, cd80 <PyInit__testcapi@@Base+0x3bc4>
    ccf4:	mov	x1, xzr
    ccf8:	mov	w2, wzr
    ccfc:	mov	x20, x0
    cd00:	bl	8c40 <PyObject_GetBuffer@plt>
    cd04:	ldr	x8, [x20]
    cd08:	mov	w19, w0
    cd0c:	subs	x8, x8, #0x1
    cd10:	str	x8, [x20]
    cd14:	b.eq	cd54 <PyInit__testcapi@@Base+0x3b98>  // b.none
    cd18:	bl	8980 <PyErr_Occurred@plt>
    cd1c:	cbz	x0, cd64 <PyInit__testcapi@@Base+0x3ba8>
    cd20:	ldr	x0, [x21]
    cd24:	bl	8760 <PyErr_ExceptionMatches@plt>
    cd28:	mov	w20, w0
    cd2c:	bl	88c0 <PyErr_Clear@plt>
    cd30:	cmn	w19, #0x1
    cd34:	b.ne	cd68 <PyInit__testcapi@@Base+0x3bac>  // b.any
    cd38:	cbz	w20, cd68 <PyInit__testcapi@@Base+0x3bac>
    cd3c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    cd40:	ldr	x0, [x0, #4016]
    cd44:	ldr	x8, [x0]
    cd48:	add	x8, x8, #0x1
    cd4c:	str	x8, [x0]
    cd50:	b	cd80 <PyInit__testcapi@@Base+0x3bc4>
    cd54:	mov	x0, x20
    cd58:	bl	8560 <_Py_Dealloc@plt>
    cd5c:	bl	8980 <PyErr_Occurred@plt>
    cd60:	cbnz	x0, cd20 <PyInit__testcapi@@Base+0x3b64>
    cd64:	bl	88c0 <PyErr_Clear@plt>
    cd68:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    cd6c:	ldr	x0, [x8, #3520]
    cd70:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    cd74:	add	x1, x1, #0x71c
    cd78:	bl	8670 <PyErr_SetString@plt>
    cd7c:	mov	x0, xzr
    cd80:	ldp	x20, x19, [sp, #32]
    cd84:	ldr	x21, [sp, #16]
    cd88:	ldp	x29, x30, [sp], #48
    cd8c:	ret
    cd90:	stp	x29, x30, [sp, #-16]!
    cd94:	mov	x29, sp
    cd98:	mov	x0, x1
    cd9c:	mov	x1, xzr
    cda0:	mov	w2, wzr
    cda4:	bl	8c40 <PyObject_GetBuffer@plt>
    cda8:	tbnz	w0, #31, cdc8 <PyInit__testcapi@@Base+0x3c0c>
    cdac:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    cdb0:	ldr	x0, [x0, #4016]
    cdb4:	ldr	x8, [x0]
    cdb8:	add	x8, x8, #0x1
    cdbc:	str	x8, [x0]
    cdc0:	ldp	x29, x30, [sp], #16
    cdc4:	ret
    cdc8:	mov	x0, xzr
    cdcc:	ldp	x29, x30, [sp], #16
    cdd0:	ret
    cdd4:	stp	x29, x30, [sp, #-32]!
    cdd8:	str	x19, [sp, #16]
    cddc:	mov	x29, sp
    cde0:	mov	x0, xzr
    cde4:	bl	82a0 <PyList_New@plt>
    cde8:	cbz	x0, cee4 <PyInit__testcapi@@Base+0x3d28>
    cdec:	ldr	x8, [x0]
    cdf0:	mov	x19, x0
    cdf4:	mov	x1, x19
    cdf8:	add	x8, x8, #0x1
    cdfc:	str	x8, [x0]
    ce00:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    ce04:	add	x0, x0, #0x79d
    ce08:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    ce0c:	cbz	x0, cee4 <PyInit__testcapi@@Base+0x3d28>
    ce10:	cmp	x0, x19
    ce14:	b.eq	ce3c <PyInit__testcapi@@Base+0x3c80>  // b.none
    ce18:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ce1c:	ldr	x0, [x8, #3520]
    ce20:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ce24:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ce28:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ce2c:	add	x1, x1, #0xc12
    ce30:	add	x2, x2, #0xdbc
    ce34:	add	x3, x3, #0x747
    ce38:	b	cedc <PyInit__testcapi@@Base+0x3d20>
    ce3c:	ldr	x8, [x19]
    ce40:	cmp	x8, #0x2
    ce44:	b.ne	cebc <PyInit__testcapi@@Base+0x3d00>  // b.any
    ce48:	mov	x0, x19
    ce4c:	str	xzr, [x19]
    ce50:	bl	8560 <_Py_Dealloc@plt>
    ce54:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    ce58:	add	x0, x0, #0x79b
    ce5c:	bl	120d4 <PyInit__testcapi@@Base+0x8f18>
    ce60:	tbnz	w0, #31, cee0 <PyInit__testcapi@@Base+0x3d24>
    ce64:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    ce68:	add	x0, x0, #0x79f
    ce6c:	bl	120d4 <PyInit__testcapi@@Base+0x8f18>
    ce70:	tbnz	w0, #31, cee0 <PyInit__testcapi@@Base+0x3d24>
    ce74:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    ce78:	add	x0, x0, #0x7a5
    ce7c:	bl	120d4 <PyInit__testcapi@@Base+0x8f18>
    ce80:	tbnz	w0, #31, cee0 <PyInit__testcapi@@Base+0x3d24>
    ce84:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    ce88:	add	x0, x0, #0x7ab
    ce8c:	bl	120d4 <PyInit__testcapi@@Base+0x8f18>
    ce90:	tbnz	w0, #31, cee0 <PyInit__testcapi@@Base+0x3d24>
    ce94:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    ce98:	add	x0, x0, #0x7b1
    ce9c:	bl	120d4 <PyInit__testcapi@@Base+0x8f18>
    cea0:	tbnz	w0, #31, cee0 <PyInit__testcapi@@Base+0x3d24>
    cea4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    cea8:	ldr	x0, [x0, #4016]
    ceac:	ldr	x8, [x0]
    ceb0:	add	x8, x8, #0x1
    ceb4:	str	x8, [x0]
    ceb8:	b	cee4 <PyInit__testcapi@@Base+0x3d28>
    cebc:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    cec0:	ldr	x0, [x8, #3520]
    cec4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    cec8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    cecc:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ced0:	add	x1, x1, #0xc12
    ced4:	add	x2, x2, #0xdbc
    ced8:	add	x3, x3, #0x770
    cedc:	bl	8e60 <PyErr_Format@plt>
    cee0:	mov	x0, xzr
    cee4:	ldr	x19, [sp, #16]
    cee8:	ldp	x29, x30, [sp], #32
    ceec:	ret
    cef0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    cef4:	ldr	x8, [x8, #4016]
    cef8:	cmp	x1, #0x0
    cefc:	csel	x0, x8, x1, eq  // eq = none
    cf00:	ldr	x8, [x0]
    cf04:	add	x8, x8, #0x1
    cf08:	str	x8, [x0]
    cf0c:	ret
    cf10:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    cf14:	ldr	x8, [x8, #4016]
    cf18:	cmp	x2, #0x0
    cf1c:	csel	x0, x8, x2, eq  // eq = none
    cf20:	ldr	x8, [x0]
    cf24:	add	x8, x8, #0x1
    cf28:	str	x8, [x0]
    cf2c:	ret
    cf30:	sub	sp, sp, #0x20
    cf34:	stp	x29, x30, [sp, #16]
    cf38:	add	x29, sp, #0x10
    cf3c:	mov	x0, x1
    cf40:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    cf44:	add	x1, x1, #0x884
    cf48:	sub	x2, x29, #0x4
    cf4c:	add	x3, sp, #0x8
    cf50:	add	x4, sp, #0x4
    cf54:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cf58:	cbz	w0, cf74 <PyInit__testcapi@@Base+0x3db8>
    cf5c:	ldur	w1, [x29, #-4]
    cf60:	ldp	w3, w2, [sp, #4]
    cf64:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    cf68:	add	x0, x0, #0x8aa
    cf6c:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    cf70:	b	cf78 <PyInit__testcapi@@Base+0x3dbc>
    cf74:	mov	x0, xzr
    cf78:	ldp	x29, x30, [sp, #16]
    cf7c:	add	sp, sp, #0x20
    cf80:	ret
    cf84:	sub	sp, sp, #0x70
    cf88:	stp	x29, x30, [sp, #96]
    cf8c:	add	x29, sp, #0x60
    cf90:	mov	x8, x2
    cf94:	mov	x9, #0xffffffffffffffff    	// #-1
    cf98:	add	x10, sp, #0x30
    cf9c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    cfa0:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
    cfa4:	mov	x0, x1
    cfa8:	movi	v0.2d, #0xffffffffffffffff
    cfac:	str	x9, [sp, #80]
    cfb0:	add	x9, x10, #0x10
    cfb4:	add	x11, x10, #0x20
    cfb8:	orr	x5, x10, #0x4
    cfbc:	orr	x6, x10, #0x8
    cfc0:	orr	x7, x10, #0xc
    cfc4:	add	x12, x10, #0x14
    cfc8:	add	x13, x10, #0x18
    cfcc:	add	x14, x10, #0x1c
    cfd0:	add	x10, x10, #0x24
    cfd4:	add	x2, x2, #0x5bc
    cfd8:	add	x3, x3, #0x540
    cfdc:	add	x4, sp, #0x30
    cfe0:	mov	x1, x8
    cfe4:	stp	q0, q0, [sp, #48]
    cfe8:	stp	x11, x10, [sp, #32]
    cfec:	stp	x13, x14, [sp, #16]
    cff0:	stp	x9, x12, [sp]
    cff4:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    cff8:	cbz	w0, d02c <PyInit__testcapi@@Base+0x3e70>
    cffc:	ldp	w1, w2, [sp, #48]
    d000:	ldp	w3, w4, [sp, #56]
    d004:	ldp	w5, w6, [sp, #64]
    d008:	ldp	w7, w8, [sp, #72]
    d00c:	ldp	w9, w10, [sp, #80]
    d010:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    d014:	add	x0, x0, #0x8a3
    d018:	str	w8, [sp]
    d01c:	str	w10, [sp, #16]
    d020:	str	w9, [sp, #8]
    d024:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    d028:	b	d030 <PyInit__testcapi@@Base+0x3e74>
    d02c:	mov	x0, xzr
    d030:	ldp	x29, x30, [sp, #96]
    d034:	add	sp, sp, #0x70
    d038:	ret
    d03c:	sub	sp, sp, #0x20
    d040:	stp	x29, x30, [sp, #16]
    d044:	add	x29, sp, #0x10
    d048:	mov	x8, x2
    d04c:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    d050:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d054:	mov	x0, x1
    d058:	mov	w9, #0xffffffff            	// #-1
    d05c:	add	x2, x2, #0x8b7
    d060:	add	x3, x3, #0x570
    d064:	sub	x4, x29, #0x4
    d068:	add	x5, sp, #0x8
    d06c:	add	x6, sp, #0x4
    d070:	mov	x1, x8
    d074:	stur	w9, [x29, #-4]
    d078:	stp	w9, w9, [sp, #4]
    d07c:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    d080:	cbz	w0, d09c <PyInit__testcapi@@Base+0x3ee0>
    d084:	ldur	w1, [x29, #-4]
    d088:	ldp	w3, w2, [sp, #4]
    d08c:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    d090:	add	x0, x0, #0x8aa
    d094:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    d098:	b	d0a0 <PyInit__testcapi@@Base+0x3ee4>
    d09c:	mov	x0, xzr
    d0a0:	ldp	x29, x30, [sp, #16]
    d0a4:	add	sp, sp, #0x20
    d0a8:	ret
    d0ac:	sub	sp, sp, #0x20
    d0b0:	stp	x29, x30, [sp, #16]
    d0b4:	add	x29, sp, #0x10
    d0b8:	mov	x8, x2
    d0bc:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    d0c0:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d0c4:	mov	x0, x1
    d0c8:	mov	w9, #0xffffffff            	// #-1
    d0cc:	add	x2, x2, #0x8c5
    d0d0:	add	x3, x3, #0x590
    d0d4:	sub	x4, x29, #0x4
    d0d8:	add	x5, sp, #0x8
    d0dc:	add	x6, sp, #0x4
    d0e0:	mov	x1, x8
    d0e4:	stur	w9, [x29, #-4]
    d0e8:	stp	w9, w9, [sp, #4]
    d0ec:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    d0f0:	cbz	w0, d10c <PyInit__testcapi@@Base+0x3f50>
    d0f4:	ldur	w1, [x29, #-4]
    d0f8:	ldp	w3, w2, [sp, #4]
    d0fc:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    d100:	add	x0, x0, #0x8aa
    d104:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    d108:	b	d110 <PyInit__testcapi@@Base+0x3f54>
    d10c:	mov	x0, xzr
    d110:	ldp	x29, x30, [sp, #16]
    d114:	add	sp, sp, #0x20
    d118:	ret
    d11c:	sub	sp, sp, #0x20
    d120:	stp	x29, x30, [sp, #16]
    d124:	add	x29, sp, #0x10
    d128:	mov	x0, x1
    d12c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    d130:	add	x1, x1, #0xe43
    d134:	sub	x2, x29, #0x4
    d138:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d13c:	cbz	w0, d14c <PyInit__testcapi@@Base+0x3f90>
    d140:	ldurb	w0, [x29, #-4]
    d144:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    d148:	b	d150 <PyInit__testcapi@@Base+0x3f94>
    d14c:	mov	x0, xzr
    d150:	ldp	x29, x30, [sp, #16]
    d154:	add	sp, sp, #0x20
    d158:	ret
    d15c:	sub	sp, sp, #0x20
    d160:	stp	x29, x30, [sp, #16]
    d164:	add	x29, sp, #0x10
    d168:	mov	x0, x1
    d16c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    d170:	add	x1, x1, #0xe4d
    d174:	sub	x2, x29, #0x4
    d178:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d17c:	cbz	w0, d18c <PyInit__testcapi@@Base+0x3fd0>
    d180:	ldurb	w0, [x29, #-4]
    d184:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    d188:	b	d190 <PyInit__testcapi@@Base+0x3fd4>
    d18c:	mov	x0, xzr
    d190:	ldp	x29, x30, [sp, #16]
    d194:	add	sp, sp, #0x20
    d198:	ret
    d19c:	sub	sp, sp, #0x20
    d1a0:	stp	x29, x30, [sp, #16]
    d1a4:	add	x29, sp, #0x10
    d1a8:	mov	x0, x1
    d1ac:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    d1b0:	add	x1, x1, #0xe57
    d1b4:	sub	x2, x29, #0x4
    d1b8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d1bc:	cbz	w0, d1cc <PyInit__testcapi@@Base+0x4010>
    d1c0:	ldursh	x0, [x29, #-4]
    d1c4:	bl	8840 <PyLong_FromLong@plt>
    d1c8:	b	d1d0 <PyInit__testcapi@@Base+0x4014>
    d1cc:	mov	x0, xzr
    d1d0:	ldp	x29, x30, [sp, #16]
    d1d4:	add	sp, sp, #0x20
    d1d8:	ret
    d1dc:	sub	sp, sp, #0x20
    d1e0:	stp	x29, x30, [sp, #16]
    d1e4:	add	x29, sp, #0x10
    d1e8:	mov	x0, x1
    d1ec:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    d1f0:	add	x1, x1, #0xe61
    d1f4:	sub	x2, x29, #0x4
    d1f8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d1fc:	cbz	w0, d20c <PyInit__testcapi@@Base+0x4050>
    d200:	ldurh	w0, [x29, #-4]
    d204:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    d208:	b	d210 <PyInit__testcapi@@Base+0x4054>
    d20c:	mov	x0, xzr
    d210:	ldp	x29, x30, [sp, #16]
    d214:	add	sp, sp, #0x20
    d218:	ret
    d21c:	sub	sp, sp, #0x20
    d220:	stp	x29, x30, [sp, #16]
    d224:	add	x29, sp, #0x10
    d228:	mov	x0, x1
    d22c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    d230:	add	x1, x1, #0x432
    d234:	sub	x2, x29, #0x4
    d238:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d23c:	cbz	w0, d24c <PyInit__testcapi@@Base+0x4090>
    d240:	ldur	w0, [x29, #-4]
    d244:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    d248:	b	d250 <PyInit__testcapi@@Base+0x4094>
    d24c:	mov	x0, xzr
    d250:	ldp	x29, x30, [sp, #16]
    d254:	add	sp, sp, #0x20
    d258:	ret
    d25c:	sub	sp, sp, #0x20
    d260:	stp	x29, x30, [sp, #16]
    d264:	add	x29, sp, #0x10
    d268:	mov	x0, x1
    d26c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    d270:	add	x1, x1, #0xe75
    d274:	add	x2, sp, #0x8
    d278:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d27c:	cbz	w0, d28c <PyInit__testcapi@@Base+0x40d0>
    d280:	ldr	x0, [sp, #8]
    d284:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    d288:	b	d290 <PyInit__testcapi@@Base+0x40d4>
    d28c:	mov	x0, xzr
    d290:	ldp	x29, x30, [sp, #16]
    d294:	add	sp, sp, #0x20
    d298:	ret
    d29c:	sub	sp, sp, #0x20
    d2a0:	stp	x29, x30, [sp, #16]
    d2a4:	add	x29, sp, #0x10
    d2a8:	mov	x0, x1
    d2ac:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    d2b0:	add	x1, x1, #0x8bb
    d2b4:	sub	x2, x29, #0x4
    d2b8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d2bc:	cbz	w0, d2cc <PyInit__testcapi@@Base+0x4110>
    d2c0:	ldursw	x0, [x29, #-4]
    d2c4:	bl	8840 <PyLong_FromLong@plt>
    d2c8:	b	d2d0 <PyInit__testcapi@@Base+0x4114>
    d2cc:	mov	x0, xzr
    d2d0:	ldp	x29, x30, [sp, #16]
    d2d4:	add	sp, sp, #0x20
    d2d8:	ret
    d2dc:	sub	sp, sp, #0x20
    d2e0:	stp	x29, x30, [sp, #16]
    d2e4:	add	x29, sp, #0x10
    d2e8:	mov	x0, x1
    d2ec:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    d2f0:	add	x1, x1, #0xdcb
    d2f4:	add	x2, sp, #0x8
    d2f8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d2fc:	cbz	w0, d30c <PyInit__testcapi@@Base+0x4150>
    d300:	ldr	x0, [sp, #8]
    d304:	bl	8840 <PyLong_FromLong@plt>
    d308:	b	d310 <PyInit__testcapi@@Base+0x4154>
    d30c:	mov	x0, xzr
    d310:	ldp	x29, x30, [sp, #16]
    d314:	add	sp, sp, #0x20
    d318:	ret
    d31c:	sub	sp, sp, #0x20
    d320:	stp	x29, x30, [sp, #16]
    d324:	add	x29, sp, #0x10
    d328:	mov	x0, x1
    d32c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    d330:	add	x1, x1, #0xc22
    d334:	add	x2, sp, #0x8
    d338:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d33c:	cbz	w0, d34c <PyInit__testcapi@@Base+0x4190>
    d340:	ldr	x0, [sp, #8]
    d344:	bl	87f0 <PyLong_FromSsize_t@plt>
    d348:	b	d350 <PyInit__testcapi@@Base+0x4194>
    d34c:	mov	x0, xzr
    d350:	ldp	x29, x30, [sp, #16]
    d354:	add	sp, sp, #0x20
    d358:	ret
    d35c:	sub	sp, sp, #0x20
    d360:	stp	x29, x30, [sp, #16]
    d364:	add	x29, sp, #0x10
    d368:	mov	x0, x1
    d36c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    d370:	add	x1, x1, #0xe9d
    d374:	sub	x2, x29, #0x4
    d378:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d37c:	cbz	w0, d38c <PyInit__testcapi@@Base+0x41d0>
    d380:	ldursw	x0, [x29, #-4]
    d384:	bl	8840 <PyLong_FromLong@plt>
    d388:	b	d390 <PyInit__testcapi@@Base+0x41d4>
    d38c:	mov	x0, xzr
    d390:	ldp	x29, x30, [sp, #16]
    d394:	add	sp, sp, #0x20
    d398:	ret
    d39c:	sub	sp, sp, #0x20
    d3a0:	stp	x29, x30, [sp, #16]
    d3a4:	add	x29, sp, #0x10
    d3a8:	mov	x0, x1
    d3ac:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    d3b0:	add	x1, x1, #0xe9c
    d3b4:	add	x2, sp, #0x8
    d3b8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d3bc:	cbz	w0, d3cc <PyInit__testcapi@@Base+0x4210>
    d3c0:	ldr	x0, [sp, #8]
    d3c4:	bl	8ef0 <PyLong_FromLongLong@plt>
    d3c8:	b	d3d0 <PyInit__testcapi@@Base+0x4214>
    d3cc:	mov	x0, xzr
    d3d0:	ldp	x29, x30, [sp, #16]
    d3d4:	add	sp, sp, #0x20
    d3d8:	ret
    d3dc:	sub	sp, sp, #0x20
    d3e0:	stp	x29, x30, [sp, #16]
    d3e4:	add	x29, sp, #0x10
    d3e8:	mov	x0, x1
    d3ec:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    d3f0:	add	x1, x1, #0xeb1
    d3f4:	add	x2, sp, #0x8
    d3f8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d3fc:	cbz	w0, d40c <PyInit__testcapi@@Base+0x4250>
    d400:	ldr	x0, [sp, #8]
    d404:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
    d408:	b	d410 <PyInit__testcapi@@Base+0x4254>
    d40c:	mov	x0, xzr
    d410:	ldp	x29, x30, [sp, #16]
    d414:	add	sp, sp, #0x20
    d418:	ret
    d41c:	stp	x29, x30, [sp, #-80]!
    d420:	stp	x26, x25, [sp, #16]
    d424:	stp	x24, x23, [sp, #32]
    d428:	stp	x22, x21, [sp, #48]
    d42c:	stp	x20, x19, [sp, #64]
    d430:	mov	x29, sp
    d434:	mov	w24, #0xaaab                	// #43691
    d438:	mov	w22, wzr
    d43c:	mov	w23, #0x1                   	// #1
    d440:	movk	w24, #0xaaaa, lsl #16
    d444:	mov	w25, wzr
    d448:	neg	x26, x23
    d44c:	b	d45c <PyInit__testcapi@@Base+0x42a0>
    d450:	add	w25, w25, #0x1
    d454:	cmp	w25, #0x6
    d458:	b.eq	d510 <PyInit__testcapi@@Base+0x4354>  // b.none
    d45c:	umull	x8, w25, w24
    d460:	lsr	x8, x8, #33
    d464:	add	w8, w8, w8, lsl #1
    d468:	cmp	w25, #0x3
    d46c:	mvn	w8, w8
    d470:	csel	x9, x23, x26, cc  // cc = lo, ul, last
    d474:	add	w8, w8, w25
    d478:	add	x19, x9, w8, sxtw
    d47c:	mov	x0, x19
    d480:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
    d484:	cbz	x0, d570 <PyInit__testcapi@@Base+0x43b4>
    d488:	mov	x20, x0
    d48c:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
    d490:	mov	x21, x0
    d494:	cmn	x0, #0x1
    d498:	b.ne	d4a4 <PyInit__testcapi@@Base+0x42e8>  // b.any
    d49c:	bl	8980 <PyErr_Occurred@plt>
    d4a0:	cbnz	x0, d600 <PyInit__testcapi@@Base+0x4444>
    d4a4:	cmp	x21, x19
    d4a8:	b.ne	d594 <PyInit__testcapi@@Base+0x43d8>  // b.any
    d4ac:	ldr	x8, [x20]
    d4b0:	subs	x8, x8, #0x1
    d4b4:	str	x8, [x20]
    d4b8:	b.ne	d4c4 <PyInit__testcapi@@Base+0x4308>  // b.any
    d4bc:	mov	x0, x20
    d4c0:	bl	8560 <_Py_Dealloc@plt>
    d4c4:	mov	x0, x19
    d4c8:	bl	8ef0 <PyLong_FromLongLong@plt>
    d4cc:	cbz	x0, d5b8 <PyInit__testcapi@@Base+0x43fc>
    d4d0:	mov	x20, x0
    d4d4:	bl	8df0 <PyLong_AsLongLong@plt>
    d4d8:	mov	x21, x0
    d4dc:	cmn	x0, #0x1
    d4e0:	b.ne	d4ec <PyInit__testcapi@@Base+0x4330>  // b.any
    d4e4:	bl	8980 <PyErr_Occurred@plt>
    d4e8:	cbnz	x0, d624 <PyInit__testcapi@@Base+0x4468>
    d4ec:	cmp	x21, x19
    d4f0:	b.ne	d5dc <PyInit__testcapi@@Base+0x4420>  // b.any
    d4f4:	ldr	x8, [x20]
    d4f8:	subs	x8, x8, #0x1
    d4fc:	str	x8, [x20]
    d500:	b.ne	d450 <PyInit__testcapi@@Base+0x4294>  // b.any
    d504:	mov	x0, x20
    d508:	bl	8560 <_Py_Dealloc@plt>
    d50c:	b	d450 <PyInit__testcapi@@Base+0x4294>
    d510:	add	w22, w22, #0x1
    d514:	cmp	w22, #0x41
    d518:	lsl	x23, x23, #1
    d51c:	b.ne	d444 <PyInit__testcapi@@Base+0x4288>  // b.any
    d520:	mov	w0, #0x1                   	// #1
    d524:	bl	8840 <PyLong_FromLong@plt>
    d528:	mov	x19, x0
    d52c:	cbz	x0, d668 <PyInit__testcapi@@Base+0x44ac>
    d530:	mov	x0, x19
    d534:	bl	8270 <PyNumber_Negative@plt>
    d538:	cbz	x0, d908 <PyInit__testcapi@@Base+0x474c>
    d53c:	mov	x20, x0
    d540:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
    d544:	cmn	x0, #0x1
    d548:	b.eq	d690 <PyInit__testcapi@@Base+0x44d4>  // b.none
    d54c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d550:	ldr	x0, [x8, #3520]
    d554:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d558:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d55c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d560:	add	x1, x1, #0xc12
    d564:	add	x2, x2, #0xeb3
    d568:	add	x3, x3, #0x97b
    d56c:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d570:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d574:	ldr	x0, [x8, #3520]
    d578:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d57c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d580:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d584:	add	x1, x1, #0xc12
    d588:	add	x2, x2, #0xeb3
    d58c:	add	x3, x3, #0x8d8
    d590:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d594:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d598:	ldr	x0, [x8, #3520]
    d59c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d5a0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d5a4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d5a8:	add	x1, x1, #0xc12
    d5ac:	add	x2, x2, #0xeb3
    d5b0:	add	x3, x3, #0x916
    d5b4:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d5b8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d5bc:	ldr	x0, [x8, #3520]
    d5c0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d5c4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d5c8:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d5cc:	add	x1, x1, #0xc12
    d5d0:	add	x2, x2, #0xeb3
    d5d4:	add	x3, x3, #0x8da
    d5d8:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d5dc:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d5e0:	ldr	x0, [x8, #3520]
    d5e4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d5e8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d5ec:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d5f0:	add	x1, x1, #0xc12
    d5f4:	add	x2, x2, #0xeb3
    d5f8:	add	x3, x3, #0x918
    d5fc:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d600:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d604:	ldr	x0, [x8, #3520]
    d608:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d60c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d610:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d614:	add	x1, x1, #0xc12
    d618:	add	x2, x2, #0xeb3
    d61c:	add	x3, x3, #0x8f8
    d620:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d624:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d628:	ldr	x0, [x8, #3520]
    d62c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d630:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d634:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d638:	add	x1, x1, #0xc12
    d63c:	add	x2, x2, #0xeb3
    d640:	add	x3, x3, #0x8fa
    d644:	bl	8e60 <PyErr_Format@plt>
    d648:	mov	x19, xzr
    d64c:	mov	x0, x19
    d650:	ldp	x20, x19, [sp, #64]
    d654:	ldp	x22, x21, [sp, #48]
    d658:	ldp	x24, x23, [sp, #32]
    d65c:	ldp	x26, x25, [sp, #16]
    d660:	ldp	x29, x30, [sp], #80
    d664:	ret
    d668:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d66c:	ldr	x0, [x8, #3520]
    d670:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d674:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d678:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d67c:	add	x1, x1, #0xc12
    d680:	add	x2, x2, #0xeb3
    d684:	add	x3, x3, #0x92f
    d688:	bl	8e60 <PyErr_Format@plt>
    d68c:	b	d64c <PyInit__testcapi@@Base+0x4490>
    d690:	bl	8980 <PyErr_Occurred@plt>
    d694:	cbz	x0, d54c <PyInit__testcapi@@Base+0x4390>
    d698:	adrp	x22, 26000 <PyInit__testcapi@@Base+0x1ce44>
    d69c:	ldr	x22, [x22, #4000]
    d6a0:	ldr	x0, [x22]
    d6a4:	bl	8760 <PyErr_ExceptionMatches@plt>
    d6a8:	cbz	w0, d738 <PyInit__testcapi@@Base+0x457c>
    d6ac:	bl	88c0 <PyErr_Clear@plt>
    d6b0:	ldr	x8, [x20]
    d6b4:	subs	x8, x8, #0x1
    d6b8:	str	x8, [x20]
    d6bc:	b.ne	d6c8 <PyInit__testcapi@@Base+0x450c>  // b.any
    d6c0:	mov	x0, x20
    d6c4:	bl	8560 <_Py_Dealloc@plt>
    d6c8:	mov	w0, #0x40                  	// #64
    d6cc:	bl	8840 <PyLong_FromLong@plt>
    d6d0:	cbz	x0, d75c <PyInit__testcapi@@Base+0x45a0>
    d6d4:	mov	x21, x0
    d6d8:	mov	x0, x19
    d6dc:	mov	x1, x21
    d6e0:	bl	8390 <PyNumber_Lshift@plt>
    d6e4:	ldr	x8, [x21]
    d6e8:	mov	x20, x0
    d6ec:	subs	x8, x8, #0x1
    d6f0:	str	x8, [x21]
    d6f4:	b.ne	d700 <PyInit__testcapi@@Base+0x4544>  // b.any
    d6f8:	mov	x0, x21
    d6fc:	bl	8560 <_Py_Dealloc@plt>
    d700:	cbz	x20, d780 <PyInit__testcapi@@Base+0x45c4>
    d704:	mov	x0, x20
    d708:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
    d70c:	cmn	x0, #0x1
    d710:	b.eq	d7a4 <PyInit__testcapi@@Base+0x45e8>  // b.none
    d714:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d718:	ldr	x0, [x8, #3520]
    d71c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d720:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d724:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d728:	add	x1, x1, #0xc12
    d72c:	add	x2, x2, #0xeb3
    d730:	add	x3, x3, #0xa0c
    d734:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d738:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d73c:	ldr	x0, [x8, #3520]
    d740:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d744:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d748:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d74c:	add	x1, x1, #0xc12
    d750:	add	x2, x2, #0xeb3
    d754:	add	x3, x3, #0x9a4
    d758:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d75c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d760:	ldr	x0, [x8, #3520]
    d764:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d768:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d76c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d770:	add	x1, x1, #0xc12
    d774:	add	x2, x2, #0xeb3
    d778:	add	x3, x3, #0x92f
    d77c:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d780:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d784:	ldr	x0, [x8, #3520]
    d788:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d78c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d790:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d794:	add	x1, x1, #0xc12
    d798:	add	x2, x2, #0xeb3
    d79c:	add	x3, x3, #0x9e7
    d7a0:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d7a4:	bl	8980 <PyErr_Occurred@plt>
    d7a8:	cbz	x0, d714 <PyInit__testcapi@@Base+0x4558>
    d7ac:	ldr	x0, [x22]
    d7b0:	mov	x23, x22
    d7b4:	bl	8760 <PyErr_ExceptionMatches@plt>
    d7b8:	cbz	w0, d820 <PyInit__testcapi@@Base+0x4664>
    d7bc:	bl	88c0 <PyErr_Clear@plt>
    d7c0:	mov	x0, x20
    d7c4:	mov	x1, x19
    d7c8:	bl	8b60 <PyNumber_Rshift@plt>
    d7cc:	ldr	x8, [x20]
    d7d0:	mov	x21, x0
    d7d4:	subs	x8, x8, #0x1
    d7d8:	str	x8, [x20]
    d7dc:	b.ne	d7e8 <PyInit__testcapi@@Base+0x462c>  // b.any
    d7e0:	mov	x0, x20
    d7e4:	bl	8560 <_Py_Dealloc@plt>
    d7e8:	cbz	x21, d844 <PyInit__testcapi@@Base+0x4688>
    d7ec:	mov	x0, x21
    d7f0:	bl	8df0 <PyLong_AsLongLong@plt>
    d7f4:	cmn	x0, #0x1
    d7f8:	b.eq	d868 <PyInit__testcapi@@Base+0x46ac>  // b.none
    d7fc:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d800:	ldr	x0, [x8, #3520]
    d804:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d808:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d80c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d810:	add	x1, x1, #0xc12
    d814:	add	x2, x2, #0xeb3
    d818:	add	x3, x3, #0xaa9
    d81c:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d820:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d824:	ldr	x0, [x8, #3520]
    d828:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d82c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d830:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d834:	add	x1, x1, #0xc12
    d838:	add	x2, x2, #0xeb3
    d83c:	add	x3, x3, #0xa3b
    d840:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d844:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d848:	ldr	x0, [x8, #3520]
    d84c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d850:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d854:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d858:	add	x1, x1, #0xc12
    d85c:	add	x2, x2, #0xeb3
    d860:	add	x3, x3, #0xa84
    d864:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d868:	bl	8980 <PyErr_Occurred@plt>
    d86c:	cbz	x0, d7fc <PyInit__testcapi@@Base+0x4640>
    d870:	ldr	x0, [x23]
    d874:	bl	8760 <PyErr_ExceptionMatches@plt>
    d878:	cbz	w0, d92c <PyInit__testcapi@@Base+0x4770>
    d87c:	bl	88c0 <PyErr_Clear@plt>
    d880:	mov	x0, x21
    d884:	bl	8270 <PyNumber_Negative@plt>
    d888:	ldr	x8, [x21]
    d88c:	mov	x22, x0
    d890:	subs	x8, x8, #0x1
    d894:	str	x8, [x21]
    d898:	b.ne	d8a4 <PyInit__testcapi@@Base+0x46e8>  // b.any
    d89c:	mov	x0, x21
    d8a0:	bl	8560 <_Py_Dealloc@plt>
    d8a4:	cbz	x22, d908 <PyInit__testcapi@@Base+0x474c>
    d8a8:	mov	x0, x22
    d8ac:	mov	x1, x19
    d8b0:	bl	8fe0 <PyNumber_Subtract@plt>
    d8b4:	ldr	x8, [x22]
    d8b8:	mov	x20, x0
    d8bc:	subs	x8, x8, #0x1
    d8c0:	str	x8, [x22]
    d8c4:	b.ne	d8d0 <PyInit__testcapi@@Base+0x4714>  // b.any
    d8c8:	mov	x0, x22
    d8cc:	bl	8560 <_Py_Dealloc@plt>
    d8d0:	cbz	x20, d950 <PyInit__testcapi@@Base+0x4794>
    d8d4:	mov	x0, x20
    d8d8:	bl	8df0 <PyLong_AsLongLong@plt>
    d8dc:	cmn	x0, #0x1
    d8e0:	b.eq	d974 <PyInit__testcapi@@Base+0x47b8>  // b.none
    d8e4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d8e8:	ldr	x0, [x8, #3520]
    d8ec:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d8f0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d8f4:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d8f8:	add	x1, x1, #0xc12
    d8fc:	add	x2, x2, #0xeb3
    d900:	add	x3, x3, #0xb40
    d904:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d908:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d90c:	ldr	x0, [x8, #3520]
    d910:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d914:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d918:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d91c:	add	x1, x1, #0xc12
    d920:	add	x2, x2, #0xeb3
    d924:	add	x3, x3, #0x954
    d928:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d92c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d930:	ldr	x0, [x8, #3520]
    d934:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d938:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d93c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d940:	add	x1, x1, #0xc12
    d944:	add	x2, x2, #0xeb3
    d948:	add	x3, x3, #0xad4
    d94c:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d950:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d954:	ldr	x0, [x8, #3520]
    d958:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d95c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d960:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d964:	add	x1, x1, #0xc12
    d968:	add	x2, x2, #0xeb3
    d96c:	add	x3, x3, #0xb19
    d970:	b	d644 <PyInit__testcapi@@Base+0x4488>
    d974:	bl	8980 <PyErr_Occurred@plt>
    d978:	cbz	x0, d8e4 <PyInit__testcapi@@Base+0x4728>
    d97c:	ldr	x0, [x23]
    d980:	bl	8760 <PyErr_ExceptionMatches@plt>
    d984:	cbz	w0, da00 <PyInit__testcapi@@Base+0x4844>
    d988:	bl	88c0 <PyErr_Clear@plt>
    d98c:	ldr	x8, [x20]
    d990:	subs	x8, x8, #0x1
    d994:	str	x8, [x20]
    d998:	b.ne	d9a4 <PyInit__testcapi@@Base+0x47e8>  // b.any
    d99c:	mov	x0, x20
    d9a0:	bl	8560 <_Py_Dealloc@plt>
    d9a4:	ldr	x8, [x19]
    d9a8:	subs	x8, x8, #0x1
    d9ac:	str	x8, [x19]
    d9b0:	b.ne	d9bc <PyInit__testcapi@@Base+0x4800>  // b.any
    d9b4:	mov	x0, x19
    d9b8:	bl	8560 <_Py_Dealloc@plt>
    d9bc:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    d9c0:	ldr	x0, [x0, #4016]
    d9c4:	ldr	x8, [x0]
    d9c8:	add	x8, x8, #0x1
    d9cc:	str	x8, [x0]
    d9d0:	bl	8df0 <PyLong_AsLongLong@plt>
    d9d4:	cmn	x0, #0x1
    d9d8:	b.eq	da24 <PyInit__testcapi@@Base+0x4868>  // b.none
    d9dc:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    d9e0:	ldr	x0, [x8, #3520]
    d9e4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    d9e8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    d9ec:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    d9f0:	add	x1, x1, #0xc12
    d9f4:	add	x2, x2, #0xeb3
    d9f8:	add	x3, x3, #0xbb6
    d9fc:	b	d644 <PyInit__testcapi@@Base+0x4488>
    da00:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    da04:	ldr	x0, [x8, #3520]
    da08:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    da0c:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    da10:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    da14:	add	x1, x1, #0xc12
    da18:	add	x2, x2, #0xeb3
    da1c:	add	x3, x3, #0xb6e
    da20:	b	d644 <PyInit__testcapi@@Base+0x4488>
    da24:	bl	8980 <PyErr_Occurred@plt>
    da28:	cbz	x0, d9dc <PyInit__testcapi@@Base+0x4820>
    da2c:	adrp	x20, 26000 <PyInit__testcapi@@Base+0x1ce44>
    da30:	ldr	x20, [x20, #3952]
    da34:	ldr	x0, [x20]
    da38:	bl	8760 <PyErr_ExceptionMatches@plt>
    da3c:	cbz	w0, da9c <PyInit__testcapi@@Base+0x48e0>
    da40:	bl	88c0 <PyErr_Clear@plt>
    da44:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    da48:	ldr	x19, [x19, #4016]
    da4c:	mov	x0, x19
    da50:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
    da54:	cmn	x0, #0x1
    da58:	b.ne	d9dc <PyInit__testcapi@@Base+0x4820>  // b.any
    da5c:	bl	8980 <PyErr_Occurred@plt>
    da60:	cbz	x0, d9dc <PyInit__testcapi@@Base+0x4820>
    da64:	ldr	x0, [x20]
    da68:	bl	8760 <PyErr_ExceptionMatches@plt>
    da6c:	cbz	w0, da9c <PyInit__testcapi@@Base+0x48e0>
    da70:	bl	88c0 <PyErr_Clear@plt>
    da74:	ldr	x8, [x19]
    da78:	subs	x8, x8, #0x1
    da7c:	str	x8, [x19]
    da80:	b.ne	da90 <PyInit__testcapi@@Base+0x48d4>  // b.any
    da84:	mov	x0, x19
    da88:	bl	8560 <_Py_Dealloc@plt>
    da8c:	ldr	x8, [x19]
    da90:	add	x8, x8, #0x1
    da94:	str	x8, [x19]
    da98:	b	d64c <PyInit__testcapi@@Base+0x4490>
    da9c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    daa0:	ldr	x0, [x8, #3520]
    daa4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    daa8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    daac:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    dab0:	add	x1, x1, #0xc12
    dab4:	add	x2, x2, #0xeb3
    dab8:	add	x3, x3, #0xbd9
    dabc:	b	d644 <PyInit__testcapi@@Base+0x4488>
    dac0:	stp	x29, x30, [sp, #-48]!
    dac4:	str	x21, [sp, #16]
    dac8:	stp	x20, x19, [sp, #32]
    dacc:	mov	x29, sp
    dad0:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    dad4:	add	x0, x0, #0xcb9
    dad8:	mov	w2, #0x10                  	// #16
    dadc:	mov	x1, xzr
    dae0:	bl	8f90 <PyLong_FromString@plt>
    dae4:	cbz	x0, db60 <PyInit__testcapi@@Base+0x49a4>
    dae8:	mov	w8, #0x4d2                 	// #1234
    daec:	add	x1, x29, #0x1c
    daf0:	mov	x19, x0
    daf4:	str	w8, [x29, #28]
    daf8:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    dafc:	ldr	x8, [x19]
    db00:	mov	x20, x0
    db04:	subs	x8, x8, #0x1
    db08:	str	x8, [x19]
    db0c:	b.eq	db1c <PyInit__testcapi@@Base+0x4960>  // b.none
    db10:	cmn	x20, #0x1
    db14:	b.ne	db2c <PyInit__testcapi@@Base+0x4970>  // b.any
    db18:	b	db54 <PyInit__testcapi@@Base+0x4998>
    db1c:	mov	x0, x19
    db20:	bl	8560 <_Py_Dealloc@plt>
    db24:	cmn	x20, #0x1
    db28:	b.eq	db54 <PyInit__testcapi@@Base+0x4998>  // b.none
    db2c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    db30:	ldr	x0, [x8, #3520]
    db34:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    db38:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    db3c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    db40:	add	x1, x1, #0xc12
    db44:	add	x2, x2, #0xec5
    db48:	add	x3, x3, #0xc7f
    db4c:	bl	8e60 <PyErr_Format@plt>
    db50:	b	db5c <PyInit__testcapi@@Base+0x49a0>
    db54:	bl	8980 <PyErr_Occurred@plt>
    db58:	cbz	x0, db70 <PyInit__testcapi@@Base+0x49b4>
    db5c:	mov	x0, xzr
    db60:	ldp	x20, x19, [sp, #32]
    db64:	ldr	x21, [sp, #16]
    db68:	ldp	x29, x30, [sp], #48
    db6c:	ret
    db70:	ldr	w8, [x29, #28]
    db74:	cmp	w8, #0x1
    db78:	b.ne	dcb0 <PyInit__testcapi@@Base+0x4af4>  // b.any
    db7c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    db80:	bl	8ef0 <PyLong_FromLongLong@plt>
    db84:	cbz	x0, db60 <PyInit__testcapi@@Base+0x49a4>
    db88:	mov	x19, x0
    db8c:	mov	w0, #0x1                   	// #1
    db90:	bl	8840 <PyLong_FromLong@plt>
    db94:	cbz	x0, de04 <PyInit__testcapi@@Base+0x4c48>
    db98:	mov	x21, x0
    db9c:	mov	x0, x19
    dba0:	mov	x1, x21
    dba4:	bl	8490 <PyNumber_Add@plt>
    dba8:	ldr	x8, [x21]
    dbac:	mov	x20, x0
    dbb0:	subs	x8, x8, #0x1
    dbb4:	str	x8, [x21]
    dbb8:	b.ne	dbc4 <PyInit__testcapi@@Base+0x4a08>  // b.any
    dbbc:	mov	x0, x21
    dbc0:	bl	8560 <_Py_Dealloc@plt>
    dbc4:	ldr	x8, [x19]
    dbc8:	subs	x8, x8, #0x1
    dbcc:	str	x8, [x19]
    dbd0:	b.ne	dbdc <PyInit__testcapi@@Base+0x4a20>  // b.any
    dbd4:	mov	x0, x19
    dbd8:	bl	8560 <_Py_Dealloc@plt>
    dbdc:	cbz	x20, db5c <PyInit__testcapi@@Base+0x49a0>
    dbe0:	add	x1, x29, #0x1c
    dbe4:	mov	x0, x20
    dbe8:	str	wzr, [x29, #28]
    dbec:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    dbf0:	ldr	x8, [x20]
    dbf4:	mov	x19, x0
    dbf8:	subs	x8, x8, #0x1
    dbfc:	str	x8, [x20]
    dc00:	b.ne	dc0c <PyInit__testcapi@@Base+0x4a50>  // b.any
    dc04:	mov	x0, x20
    dc08:	bl	8560 <_Py_Dealloc@plt>
    dc0c:	cmn	x19, #0x1
    dc10:	b.ne	db2c <PyInit__testcapi@@Base+0x4970>  // b.any
    dc14:	bl	8980 <PyErr_Occurred@plt>
    dc18:	cbnz	x0, db5c <PyInit__testcapi@@Base+0x49a0>
    dc1c:	ldr	w8, [x29, #28]
    dc20:	cmp	w8, #0x1
    dc24:	b.ne	dcb0 <PyInit__testcapi@@Base+0x4af4>  // b.any
    dc28:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    dc2c:	add	x0, x0, #0xcb8
    dc30:	mov	w2, #0x10                  	// #16
    dc34:	mov	x1, xzr
    dc38:	bl	8f90 <PyLong_FromString@plt>
    dc3c:	cbz	x0, db60 <PyInit__testcapi@@Base+0x49a4>
    dc40:	mov	w8, #0x4d2                 	// #1234
    dc44:	add	x1, x29, #0x1c
    dc48:	mov	x19, x0
    dc4c:	str	w8, [x29, #28]
    dc50:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    dc54:	ldr	x8, [x19]
    dc58:	mov	x20, x0
    dc5c:	subs	x8, x8, #0x1
    dc60:	str	x8, [x19]
    dc64:	b.ne	dc70 <PyInit__testcapi@@Base+0x4ab4>  // b.any
    dc68:	mov	x0, x19
    dc6c:	bl	8560 <_Py_Dealloc@plt>
    dc70:	cmn	x20, #0x1
    dc74:	b.ne	db2c <PyInit__testcapi@@Base+0x4970>  // b.any
    dc78:	bl	8980 <PyErr_Occurred@plt>
    dc7c:	cbnz	x0, db5c <PyInit__testcapi@@Base+0x49a0>
    dc80:	ldr	w8, [x29, #28]
    dc84:	cmn	w8, #0x1
    dc88:	b.eq	dcd4 <PyInit__testcapi@@Base+0x4b18>  // b.none
    dc8c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    dc90:	ldr	x0, [x8, #3520]
    dc94:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    dc98:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    dc9c:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    dca0:	add	x1, x1, #0xc12
    dca4:	add	x2, x2, #0xec5
    dca8:	add	x3, x3, #0xcd2
    dcac:	b	db4c <PyInit__testcapi@@Base+0x4990>
    dcb0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    dcb4:	ldr	x0, [x8, #3520]
    dcb8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    dcbc:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    dcc0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    dcc4:	add	x1, x1, #0xc12
    dcc8:	add	x2, x2, #0xec5
    dccc:	add	x3, x3, #0xc9e
    dcd0:	b	db4c <PyInit__testcapi@@Base+0x4990>
    dcd4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    dcd8:	bl	8ef0 <PyLong_FromLongLong@plt>
    dcdc:	cbz	x0, db60 <PyInit__testcapi@@Base+0x49a4>
    dce0:	mov	x19, x0
    dce4:	mov	w0, #0x1                   	// #1
    dce8:	bl	8840 <PyLong_FromLong@plt>
    dcec:	cbz	x0, de04 <PyInit__testcapi@@Base+0x4c48>
    dcf0:	mov	x21, x0
    dcf4:	mov	x0, x19
    dcf8:	mov	x1, x21
    dcfc:	bl	8fe0 <PyNumber_Subtract@plt>
    dd00:	ldr	x8, [x21]
    dd04:	mov	x20, x0
    dd08:	subs	x8, x8, #0x1
    dd0c:	str	x8, [x21]
    dd10:	b.ne	dd1c <PyInit__testcapi@@Base+0x4b60>  // b.any
    dd14:	mov	x0, x21
    dd18:	bl	8560 <_Py_Dealloc@plt>
    dd1c:	ldr	x8, [x19]
    dd20:	subs	x8, x8, #0x1
    dd24:	str	x8, [x19]
    dd28:	b.ne	dd34 <PyInit__testcapi@@Base+0x4b78>  // b.any
    dd2c:	mov	x0, x19
    dd30:	bl	8560 <_Py_Dealloc@plt>
    dd34:	cbz	x20, db5c <PyInit__testcapi@@Base+0x49a0>
    dd38:	add	x1, x29, #0x1c
    dd3c:	mov	x0, x20
    dd40:	str	wzr, [x29, #28]
    dd44:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    dd48:	ldr	x8, [x20]
    dd4c:	mov	x19, x0
    dd50:	subs	x8, x8, #0x1
    dd54:	str	x8, [x20]
    dd58:	b.ne	dd64 <PyInit__testcapi@@Base+0x4ba8>  // b.any
    dd5c:	mov	x0, x20
    dd60:	bl	8560 <_Py_Dealloc@plt>
    dd64:	cmn	x19, #0x1
    dd68:	b.ne	db2c <PyInit__testcapi@@Base+0x4970>  // b.any
    dd6c:	bl	8980 <PyErr_Occurred@plt>
    dd70:	cbnz	x0, db5c <PyInit__testcapi@@Base+0x49a0>
    dd74:	ldr	w8, [x29, #28]
    dd78:	cmn	w8, #0x1
    dd7c:	b.ne	dc8c <PyInit__testcapi@@Base+0x4ad0>  // b.any
    dd80:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    dd84:	add	x0, x0, #0xd22
    dd88:	mov	w2, #0x10                  	// #16
    dd8c:	mov	x1, xzr
    dd90:	bl	8f90 <PyLong_FromString@plt>
    dd94:	cbz	x0, db60 <PyInit__testcapi@@Base+0x49a4>
    dd98:	mov	w8, #0x4d2                 	// #1234
    dd9c:	add	x1, x29, #0x1c
    dda0:	mov	x19, x0
    dda4:	str	w8, [x29, #28]
    dda8:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    ddac:	ldr	x8, [x19]
    ddb0:	mov	x20, x0
    ddb4:	subs	x8, x8, #0x1
    ddb8:	str	x8, [x19]
    ddbc:	b.ne	ddc8 <PyInit__testcapi@@Base+0x4c0c>  // b.any
    ddc0:	mov	x0, x19
    ddc4:	bl	8560 <_Py_Dealloc@plt>
    ddc8:	cmp	x20, #0xff
    ddcc:	b.eq	de20 <PyInit__testcapi@@Base+0x4c64>  // b.none
    ddd0:	cmn	x20, #0x1
    ddd4:	b.ne	dde0 <PyInit__testcapi@@Base+0x4c24>  // b.any
    ddd8:	bl	8980 <PyErr_Occurred@plt>
    dddc:	cbnz	x0, db5c <PyInit__testcapi@@Base+0x49a0>
    dde0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    dde4:	ldr	x0, [x8, #3520]
    dde8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ddec:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ddf0:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    ddf4:	add	x1, x1, #0xc12
    ddf8:	add	x2, x2, #0xec5
    ddfc:	add	x3, x3, #0xced
    de00:	b	db4c <PyInit__testcapi@@Base+0x4990>
    de04:	ldr	x8, [x19]
    de08:	subs	x8, x8, #0x1
    de0c:	str	x8, [x19]
    de10:	b.ne	db5c <PyInit__testcapi@@Base+0x49a0>  // b.any
    de14:	mov	x0, x19
    de18:	bl	8560 <_Py_Dealloc@plt>
    de1c:	b	db5c <PyInit__testcapi@@Base+0x49a0>
    de20:	ldr	w8, [x29, #28]
    de24:	cbz	w8, de4c <PyInit__testcapi@@Base+0x4c90>
    de28:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    de2c:	ldr	x0, [x8, #3520]
    de30:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    de34:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    de38:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    de3c:	add	x1, x1, #0xc12
    de40:	add	x2, x2, #0xec5
    de44:	add	x3, x3, #0xd08
    de48:	b	db4c <PyInit__testcapi@@Base+0x4990>
    de4c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
    de50:	add	x0, x0, #0xd21
    de54:	mov	w2, #0x10                  	// #16
    de58:	mov	x1, xzr
    de5c:	bl	8f90 <PyLong_FromString@plt>
    de60:	cbz	x0, db60 <PyInit__testcapi@@Base+0x49a4>
    de64:	add	x1, x29, #0x1c
    de68:	mov	x19, x0
    de6c:	str	wzr, [x29, #28]
    de70:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    de74:	ldr	x8, [x19]
    de78:	mov	x20, x0
    de7c:	subs	x8, x8, #0x1
    de80:	str	x8, [x19]
    de84:	b.ne	de90 <PyInit__testcapi@@Base+0x4cd4>  // b.any
    de88:	mov	x0, x19
    de8c:	bl	8560 <_Py_Dealloc@plt>
    de90:	cmn	x20, #0xff
    de94:	b.eq	dea4 <PyInit__testcapi@@Base+0x4ce8>  // b.none
    de98:	cmn	x20, #0x1
    de9c:	b.eq	ddd8 <PyInit__testcapi@@Base+0x4c1c>  // b.none
    dea0:	b	dde0 <PyInit__testcapi@@Base+0x4c24>
    dea4:	ldr	w8, [x29, #28]
    dea8:	cbz	w8, ded0 <PyInit__testcapi@@Base+0x4d14>
    deac:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    deb0:	ldr	x0, [x8, #3520]
    deb4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    deb8:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    debc:	adrp	x3, 14000 <PyInit__testcapi@@Base+0xae44>
    dec0:	add	x1, x1, #0xc12
    dec4:	add	x2, x2, #0xec5
    dec8:	add	x3, x3, #0xd25
    decc:	b	db4c <PyInit__testcapi@@Base+0x4990>
    ded0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    ded4:	bl	8ef0 <PyLong_FromLongLong@plt>
    ded8:	cbz	x0, db60 <PyInit__testcapi@@Base+0x49a4>
    dedc:	mov	w8, #0x4d2                 	// #1234
    dee0:	add	x1, x29, #0x1c
    dee4:	mov	x19, x0
    dee8:	str	w8, [x29, #28]
    deec:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    def0:	ldr	x8, [x19]
    def4:	mov	x20, x0
    def8:	subs	x8, x8, #0x1
    defc:	str	x8, [x19]
    df00:	b.ne	df0c <PyInit__testcapi@@Base+0x4d50>  // b.any
    df04:	mov	x0, x19
    df08:	bl	8560 <_Py_Dealloc@plt>
    df0c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    df10:	cmp	x20, x8
    df14:	b.eq	df4c <PyInit__testcapi@@Base+0x4d90>  // b.none
    df18:	cmn	x20, #0x1
    df1c:	b.ne	df28 <PyInit__testcapi@@Base+0x4d6c>  // b.any
    df20:	bl	8980 <PyErr_Occurred@plt>
    df24:	cbnz	x0, db5c <PyInit__testcapi@@Base+0x49a0>
    df28:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    df2c:	ldr	x0, [x8, #3520]
    df30:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    df34:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    df38:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    df3c:	add	x1, x1, #0xc12
    df40:	add	x2, x2, #0xec5
    df44:	add	x3, x3, #0x8ca
    df48:	b	db4c <PyInit__testcapi@@Base+0x4990>
    df4c:	ldr	w8, [x29, #28]
    df50:	cbnz	w8, de28 <PyInit__testcapi@@Base+0x4c6c>
    df54:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    df58:	bl	8ef0 <PyLong_FromLongLong@plt>
    df5c:	cbz	x0, db60 <PyInit__testcapi@@Base+0x49a4>
    df60:	add	x1, x29, #0x1c
    df64:	mov	x19, x0
    df68:	str	wzr, [x29, #28]
    df6c:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    df70:	ldr	x8, [x19]
    df74:	mov	x20, x0
    df78:	subs	x8, x8, #0x1
    df7c:	str	x8, [x19]
    df80:	b.ne	df8c <PyInit__testcapi@@Base+0x4dd0>  // b.any
    df84:	mov	x0, x19
    df88:	bl	8560 <_Py_Dealloc@plt>
    df8c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    df90:	cmp	x20, x8
    df94:	b.eq	dfcc <PyInit__testcapi@@Base+0x4e10>  // b.none
    df98:	cmn	x20, #0x1
    df9c:	b.ne	dfa8 <PyInit__testcapi@@Base+0x4dec>  // b.any
    dfa0:	bl	8980 <PyErr_Occurred@plt>
    dfa4:	cbnz	x0, db5c <PyInit__testcapi@@Base+0x49a0>
    dfa8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    dfac:	ldr	x0, [x8, #3520]
    dfb0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    dfb4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    dfb8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    dfbc:	add	x1, x1, #0xc12
    dfc0:	add	x2, x2, #0xec5
    dfc4:	add	x3, x3, #0x8ed
    dfc8:	b	db4c <PyInit__testcapi@@Base+0x4990>
    dfcc:	ldr	w8, [x29, #28]
    dfd0:	cbnz	w8, de28 <PyInit__testcapi@@Base+0x4c6c>
    dfd4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    dfd8:	ldr	x0, [x0, #4016]
    dfdc:	ldr	x8, [x0]
    dfe0:	add	x8, x8, #0x1
    dfe4:	str	x8, [x0]
    dfe8:	b	db60 <PyInit__testcapi@@Base+0x49a4>
    dfec:	sub	sp, sp, #0x30
    dff0:	stp	x29, x30, [sp, #16]
    dff4:	stp	x20, x19, [sp, #32]
    dff8:	add	x29, sp, #0x10
    dffc:	mov	w0, #0x1                   	// #1
    e000:	bl	8920 <PyTuple_New@plt>
    e004:	cbz	x0, e0f8 <PyInit__testcapi@@Base+0x4f3c>
    e008:	mov	x19, x0
    e00c:	mov	w0, #0x2a                  	// #42
    e010:	bl	8840 <PyLong_FromLong@plt>
    e014:	cbz	x0, e0f8 <PyInit__testcapi@@Base+0x4f3c>
    e018:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e01c:	mov	x20, x0
    e020:	str	x0, [x19, #24]
    e024:	mov	x8, #0xffffffffffffffff    	// #-1
    e028:	add	x1, x1, #0x910
    e02c:	add	x2, sp, #0x8
    e030:	mov	x0, x19
    e034:	str	x8, [sp, #8]
    e038:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e03c:	cbz	w0, e0f4 <PyInit__testcapi@@Base+0x4f38>
    e040:	ldr	x8, [sp, #8]
    e044:	cmp	x8, #0x2a
    e048:	b.ne	e0d0 <PyInit__testcapi@@Base+0x4f14>  // b.any
    e04c:	ldr	x8, [x20]
    e050:	subs	x8, x8, #0x1
    e054:	str	x8, [x20]
    e058:	b.ne	e064 <PyInit__testcapi@@Base+0x4ea8>  // b.any
    e05c:	mov	x0, x20
    e060:	bl	8560 <_Py_Dealloc@plt>
    e064:	mov	w0, #0x2a                  	// #42
    e068:	bl	8840 <PyLong_FromLong@plt>
    e06c:	cbz	x0, e0f8 <PyInit__testcapi@@Base+0x4f3c>
    e070:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e074:	str	x0, [x19, #24]
    e078:	mov	x8, #0xffffffffffffffff    	// #-1
    e07c:	add	x1, x1, #0x910
    e080:	add	x2, sp, #0x8
    e084:	mov	x0, x19
    e088:	str	x8, [sp, #8]
    e08c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e090:	cbz	w0, e0f4 <PyInit__testcapi@@Base+0x4f38>
    e094:	ldr	x8, [sp, #8]
    e098:	cmp	x8, #0x2a
    e09c:	b.ne	e108 <PyInit__testcapi@@Base+0x4f4c>  // b.any
    e0a0:	ldr	x8, [x19]
    e0a4:	subs	x8, x8, #0x1
    e0a8:	str	x8, [x19]
    e0ac:	b.ne	e0b8 <PyInit__testcapi@@Base+0x4efc>  // b.any
    e0b0:	mov	x0, x19
    e0b4:	bl	8560 <_Py_Dealloc@plt>
    e0b8:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e0bc:	ldr	x0, [x0, #4016]
    e0c0:	ldr	x8, [x0]
    e0c4:	add	x8, x8, #0x1
    e0c8:	str	x8, [x0]
    e0cc:	b	e0f8 <PyInit__testcapi@@Base+0x4f3c>
    e0d0:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    e0d4:	ldr	x0, [x8, #3520]
    e0d8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    e0dc:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    e0e0:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e0e4:	add	x1, x1, #0xc12
    e0e8:	add	x2, x2, #0x912
    e0ec:	add	x3, x3, #0x91e
    e0f0:	bl	8e60 <PyErr_Format@plt>
    e0f4:	mov	x0, xzr
    e0f8:	ldp	x20, x19, [sp, #32]
    e0fc:	ldp	x29, x30, [sp, #16]
    e100:	add	sp, sp, #0x30
    e104:	ret
    e108:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    e10c:	ldr	x0, [x8, #3520]
    e110:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    e114:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    e118:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    e11c:	add	x1, x1, #0xc12
    e120:	add	x2, x2, #0x912
    e124:	add	x3, x3, #0x946
    e128:	b	e0f0 <PyInit__testcapi@@Base+0x4f34>
    e12c:	sub	sp, sp, #0x20
    e130:	stp	x29, x30, [sp, #16]
    e134:	add	x29, sp, #0x10
    e138:	mov	x0, x1
    e13c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e140:	add	x1, x1, #0xee9
    e144:	sub	x2, x29, #0x4
    e148:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e14c:	cbz	w0, e160 <PyInit__testcapi@@Base+0x4fa4>
    e150:	ldur	s0, [x29, #-4]
    e154:	fcvt	d0, s0
    e158:	bl	8800 <PyFloat_FromDouble@plt>
    e15c:	b	e164 <PyInit__testcapi@@Base+0x4fa8>
    e160:	mov	x0, xzr
    e164:	ldp	x29, x30, [sp, #16]
    e168:	add	sp, sp, #0x20
    e16c:	ret
    e170:	sub	sp, sp, #0x20
    e174:	stp	x29, x30, [sp, #16]
    e178:	add	x29, sp, #0x10
    e17c:	mov	x0, x1
    e180:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e184:	add	x1, x1, #0x185
    e188:	add	x2, sp, #0x8
    e18c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e190:	cbz	w0, e1a0 <PyInit__testcapi@@Base+0x4fe4>
    e194:	ldr	d0, [sp, #8]
    e198:	bl	8800 <PyFloat_FromDouble@plt>
    e19c:	b	e1a4 <PyInit__testcapi@@Base+0x4fe8>
    e1a0:	mov	x0, xzr
    e1a4:	ldp	x29, x30, [sp, #16]
    e1a8:	add	sp, sp, #0x20
    e1ac:	ret
    e1b0:	sub	sp, sp, #0x20
    e1b4:	stp	x29, x30, [sp, #16]
    e1b8:	add	x29, sp, #0x10
    e1bc:	mov	x0, x1
    e1c0:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e1c4:	add	x1, x1, #0x94a
    e1c8:	mov	x2, sp
    e1cc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e1d0:	cbz	w0, e1e0 <PyInit__testcapi@@Base+0x5024>
    e1d4:	ldp	d0, d1, [sp]
    e1d8:	bl	8e90 <PyComplex_FromCComplex@plt>
    e1dc:	b	e1e4 <PyInit__testcapi@@Base+0x5028>
    e1e0:	mov	x0, xzr
    e1e4:	ldp	x29, x30, [sp, #16]
    e1e8:	add	sp, sp, #0x20
    e1ec:	ret
    e1f0:	sub	sp, sp, #0x20
    e1f4:	stp	x29, x30, [sp, #16]
    e1f8:	add	x29, sp, #0x10
    e1fc:	mov	x0, x1
    e200:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e204:	add	x1, x1, #0xf07
    e208:	add	x2, sp, #0x8
    e20c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e210:	cbz	w0, e228 <PyInit__testcapi@@Base+0x506c>
    e214:	ldr	x0, [sp, #8]
    e218:	ldr	x8, [x0]
    e21c:	add	x8, x8, #0x1
    e220:	str	x8, [x0]
    e224:	b	e22c <PyInit__testcapi@@Base+0x5070>
    e228:	mov	x0, xzr
    e22c:	ldp	x29, x30, [sp, #16]
    e230:	add	sp, sp, #0x20
    e234:	ret
    e238:	sub	sp, sp, #0x20
    e23c:	stp	x29, x30, [sp, #16]
    e240:	add	x29, sp, #0x10
    e244:	mov	x0, x1
    e248:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e24c:	add	x1, x1, #0xf11
    e250:	add	x2, sp, #0x8
    e254:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e258:	cbz	w0, e270 <PyInit__testcapi@@Base+0x50b4>
    e25c:	ldr	x0, [sp, #8]
    e260:	ldr	x8, [x0]
    e264:	add	x8, x8, #0x1
    e268:	str	x8, [x0]
    e26c:	b	e274 <PyInit__testcapi@@Base+0x50b8>
    e270:	mov	x0, xzr
    e274:	ldp	x29, x30, [sp, #16]
    e278:	add	sp, sp, #0x20
    e27c:	ret
    e280:	sub	sp, sp, #0x20
    e284:	stp	x29, x30, [sp, #16]
    e288:	add	x29, sp, #0x10
    e28c:	mov	x0, x1
    e290:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e294:	add	x1, x1, #0xf1b
    e298:	add	x2, sp, #0x8
    e29c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e2a0:	cbz	w0, e2b8 <PyInit__testcapi@@Base+0x50fc>
    e2a4:	ldr	x0, [sp, #8]
    e2a8:	ldr	x8, [x0]
    e2ac:	add	x8, x8, #0x1
    e2b0:	str	x8, [x0]
    e2b4:	b	e2bc <PyInit__testcapi@@Base+0x5100>
    e2b8:	mov	x0, xzr
    e2bc:	ldp	x29, x30, [sp, #16]
    e2c0:	add	sp, sp, #0x20
    e2c4:	ret
    e2c8:	sub	sp, sp, #0x20
    e2cc:	stp	x29, x30, [sp, #16]
    e2d0:	add	x29, sp, #0x10
    e2d4:	mov	x0, x1
    e2d8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e2dc:	add	x1, x1, #0xf25
    e2e0:	sub	x2, x29, #0x4
    e2e4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e2e8:	cbz	w0, e2f8 <PyInit__testcapi@@Base+0x513c>
    e2ec:	ldurb	w0, [x29, #-4]
    e2f0:	bl	8840 <PyLong_FromLong@plt>
    e2f4:	b	e2fc <PyInit__testcapi@@Base+0x5140>
    e2f8:	mov	x0, xzr
    e2fc:	ldp	x29, x30, [sp, #16]
    e300:	add	sp, sp, #0x20
    e304:	ret
    e308:	sub	sp, sp, #0x20
    e30c:	stp	x29, x30, [sp, #16]
    e310:	add	x29, sp, #0x10
    e314:	mov	x0, x1
    e318:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e31c:	add	x1, x1, #0x986
    e320:	sub	x2, x29, #0x4
    e324:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e328:	cbz	w0, e338 <PyInit__testcapi@@Base+0x517c>
    e32c:	ldursw	x0, [x29, #-4]
    e330:	bl	8840 <PyLong_FromLong@plt>
    e334:	b	e33c <PyInit__testcapi@@Base+0x5180>
    e338:	mov	x0, xzr
    e33c:	ldp	x29, x30, [sp, #16]
    e340:	add	sp, sp, #0x20
    e344:	ret
    e348:	sub	sp, sp, #0x20
    e34c:	stp	x29, x30, [sp, #16]
    e350:	add	x29, sp, #0x10
    e354:	mov	x0, x1
    e358:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    e35c:	add	x1, x1, #0xc17
    e360:	add	x2, sp, #0x8
    e364:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e368:	cbz	w0, e378 <PyInit__testcapi@@Base+0x51bc>
    e36c:	ldr	x0, [sp, #8]
    e370:	bl	8970 <PyBytes_FromString@plt>
    e374:	b	e37c <PyInit__testcapi@@Base+0x51c0>
    e378:	mov	x0, xzr
    e37c:	ldp	x29, x30, [sp, #16]
    e380:	add	sp, sp, #0x20
    e384:	ret
    e388:	sub	sp, sp, #0x70
    e38c:	stp	x29, x30, [sp, #80]
    e390:	str	x19, [sp, #96]
    e394:	add	x29, sp, #0x50
    e398:	mov	x0, x1
    e39c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e3a0:	add	x1, x1, #0x96d
    e3a4:	mov	x2, sp
    e3a8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e3ac:	cbz	w0, e3cc <PyInit__testcapi@@Base+0x5210>
    e3b0:	ldr	x0, [sp]
    e3b4:	ldr	x1, [sp, #16]
    e3b8:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e3bc:	mov	x19, x0
    e3c0:	mov	x0, sp
    e3c4:	bl	8470 <PyBuffer_Release@plt>
    e3c8:	b	e3d0 <PyInit__testcapi@@Base+0x5214>
    e3cc:	mov	x19, xzr
    e3d0:	mov	x0, x19
    e3d4:	ldr	x19, [sp, #96]
    e3d8:	ldp	x29, x30, [sp, #80]
    e3dc:	add	sp, sp, #0x70
    e3e0:	ret
    e3e4:	sub	sp, sp, #0x20
    e3e8:	stp	x29, x30, [sp, #16]
    e3ec:	add	x29, sp, #0x10
    e3f0:	mov	x0, x1
    e3f4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e3f8:	add	x1, x1, #0x99e
    e3fc:	add	x2, sp, #0x8
    e400:	mov	x3, sp
    e404:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e408:	cbz	w0, e418 <PyInit__testcapi@@Base+0x525c>
    e40c:	ldp	x1, x0, [sp]
    e410:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e414:	b	e41c <PyInit__testcapi@@Base+0x5260>
    e418:	mov	x0, xzr
    e41c:	ldp	x29, x30, [sp, #16]
    e420:	add	sp, sp, #0x20
    e424:	ret
    e428:	sub	sp, sp, #0x20
    e42c:	stp	x29, x30, [sp, #16]
    e430:	add	x29, sp, #0x10
    e434:	mov	x0, x1
    e438:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e43c:	add	x1, x1, #0xf61
    e440:	add	x2, sp, #0x8
    e444:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e448:	cbz	w0, e45c <PyInit__testcapi@@Base+0x52a0>
    e44c:	ldr	x0, [sp, #8]
    e450:	cbz	x0, e464 <PyInit__testcapi@@Base+0x52a8>
    e454:	bl	8970 <PyBytes_FromString@plt>
    e458:	b	e478 <PyInit__testcapi@@Base+0x52bc>
    e45c:	mov	x0, xzr
    e460:	b	e478 <PyInit__testcapi@@Base+0x52bc>
    e464:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e468:	ldr	x0, [x0, #4016]
    e46c:	ldr	x8, [x0]
    e470:	add	x8, x8, #0x1
    e474:	str	x8, [x0]
    e478:	ldp	x29, x30, [sp, #16]
    e47c:	add	sp, sp, #0x20
    e480:	ret
    e484:	sub	sp, sp, #0x70
    e488:	stp	x29, x30, [sp, #80]
    e48c:	str	x19, [sp, #96]
    e490:	add	x29, sp, #0x50
    e494:	mov	x0, x1
    e498:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e49c:	add	x1, x1, #0x970
    e4a0:	mov	x2, sp
    e4a4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e4a8:	cbz	w0, e4c4 <PyInit__testcapi@@Base+0x5308>
    e4ac:	ldr	x0, [sp]
    e4b0:	cbz	x0, e4cc <PyInit__testcapi@@Base+0x5310>
    e4b4:	ldr	x1, [sp, #16]
    e4b8:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e4bc:	mov	x19, x0
    e4c0:	b	e4e0 <PyInit__testcapi@@Base+0x5324>
    e4c4:	mov	x19, xzr
    e4c8:	b	e4e8 <PyInit__testcapi@@Base+0x532c>
    e4cc:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e4d0:	ldr	x19, [x19, #4016]
    e4d4:	ldr	x8, [x19]
    e4d8:	add	x8, x8, #0x1
    e4dc:	str	x8, [x19]
    e4e0:	mov	x0, sp
    e4e4:	bl	8470 <PyBuffer_Release@plt>
    e4e8:	mov	x0, x19
    e4ec:	ldr	x19, [sp, #96]
    e4f0:	ldp	x29, x30, [sp, #80]
    e4f4:	add	sp, sp, #0x70
    e4f8:	ret
    e4fc:	sub	sp, sp, #0x20
    e500:	stp	x29, x30, [sp, #16]
    e504:	add	x29, sp, #0x10
    e508:	mov	x0, x1
    e50c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e510:	add	x1, x1, #0x973
    e514:	add	x2, sp, #0x8
    e518:	mov	x3, sp
    e51c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e520:	cbz	w0, e538 <PyInit__testcapi@@Base+0x537c>
    e524:	ldr	x0, [sp, #8]
    e528:	cbz	x0, e540 <PyInit__testcapi@@Base+0x5384>
    e52c:	ldr	x1, [sp]
    e530:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e534:	b	e554 <PyInit__testcapi@@Base+0x5398>
    e538:	mov	x0, xzr
    e53c:	b	e554 <PyInit__testcapi@@Base+0x5398>
    e540:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e544:	ldr	x0, [x0, #4016]
    e548:	ldr	x8, [x0]
    e54c:	add	x8, x8, #0x1
    e550:	str	x8, [x0]
    e554:	ldp	x29, x30, [sp, #16]
    e558:	add	sp, sp, #0x20
    e55c:	ret
    e560:	sub	sp, sp, #0x20
    e564:	stp	x29, x30, [sp, #16]
    e568:	add	x29, sp, #0x10
    e56c:	mov	x0, x1
    e570:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e574:	add	x1, x1, #0xf89
    e578:	add	x2, sp, #0x8
    e57c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e580:	cbz	w0, e590 <PyInit__testcapi@@Base+0x53d4>
    e584:	ldr	x0, [sp, #8]
    e588:	bl	8970 <PyBytes_FromString@plt>
    e58c:	b	e594 <PyInit__testcapi@@Base+0x53d8>
    e590:	mov	x0, xzr
    e594:	ldp	x29, x30, [sp, #16]
    e598:	add	sp, sp, #0x20
    e59c:	ret
    e5a0:	sub	sp, sp, #0x70
    e5a4:	stp	x29, x30, [sp, #80]
    e5a8:	str	x19, [sp, #96]
    e5ac:	add	x29, sp, #0x50
    e5b0:	mov	x0, x1
    e5b4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e5b8:	add	x1, x1, #0x976
    e5bc:	mov	x2, sp
    e5c0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e5c4:	cbz	w0, e5e4 <PyInit__testcapi@@Base+0x5428>
    e5c8:	ldr	x0, [sp]
    e5cc:	ldr	x1, [sp, #16]
    e5d0:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e5d4:	mov	x19, x0
    e5d8:	mov	x0, sp
    e5dc:	bl	8470 <PyBuffer_Release@plt>
    e5e0:	b	e5e8 <PyInit__testcapi@@Base+0x542c>
    e5e4:	mov	x19, xzr
    e5e8:	mov	x0, x19
    e5ec:	ldr	x19, [sp, #96]
    e5f0:	ldp	x29, x30, [sp, #80]
    e5f4:	add	sp, sp, #0x70
    e5f8:	ret
    e5fc:	sub	sp, sp, #0x20
    e600:	stp	x29, x30, [sp, #16]
    e604:	add	x29, sp, #0x10
    e608:	mov	x0, x1
    e60c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e610:	add	x1, x1, #0x979
    e614:	add	x2, sp, #0x8
    e618:	mov	x3, sp
    e61c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e620:	cbz	w0, e630 <PyInit__testcapi@@Base+0x5474>
    e624:	ldp	x1, x0, [sp]
    e628:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e62c:	b	e634 <PyInit__testcapi@@Base+0x5478>
    e630:	mov	x0, xzr
    e634:	ldp	x29, x30, [sp, #16]
    e638:	add	sp, sp, #0x20
    e63c:	ret
    e640:	sub	sp, sp, #0x20
    e644:	stp	x29, x30, [sp, #16]
    e648:	add	x29, sp, #0x10
    e64c:	mov	x0, x1
    e650:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e654:	add	x1, x1, #0x1bf
    e658:	add	x2, sp, #0x8
    e65c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e660:	cbz	w0, e674 <PyInit__testcapi@@Base+0x54b8>
    e664:	ldr	x0, [sp, #8]
    e668:	mov	x1, #0xffffffffffffffff    	// #-1
    e66c:	bl	8400 <PyUnicode_FromWideChar@plt>
    e670:	b	e678 <PyInit__testcapi@@Base+0x54bc>
    e674:	mov	x0, xzr
    e678:	ldp	x29, x30, [sp, #16]
    e67c:	add	sp, sp, #0x20
    e680:	ret
    e684:	sub	sp, sp, #0x20
    e688:	stp	x29, x30, [sp, #16]
    e68c:	add	x29, sp, #0x10
    e690:	mov	x0, x1
    e694:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e698:	add	x1, x1, #0x97c
    e69c:	add	x2, sp, #0x8
    e6a0:	mov	x3, sp
    e6a4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e6a8:	cbz	w0, e6b8 <PyInit__testcapi@@Base+0x54fc>
    e6ac:	ldp	x1, x0, [sp]
    e6b0:	bl	8400 <PyUnicode_FromWideChar@plt>
    e6b4:	b	e6bc <PyInit__testcapi@@Base+0x5500>
    e6b8:	mov	x0, xzr
    e6bc:	ldp	x29, x30, [sp, #16]
    e6c0:	add	sp, sp, #0x20
    e6c4:	ret
    e6c8:	sub	sp, sp, #0x20
    e6cc:	stp	x29, x30, [sp, #16]
    e6d0:	add	x29, sp, #0x10
    e6d4:	mov	x0, x1
    e6d8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e6dc:	add	x1, x1, #0xfca
    e6e0:	add	x2, sp, #0x8
    e6e4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e6e8:	cbz	w0, e700 <PyInit__testcapi@@Base+0x5544>
    e6ec:	ldr	x0, [sp, #8]
    e6f0:	cbz	x0, e708 <PyInit__testcapi@@Base+0x554c>
    e6f4:	mov	x1, #0xffffffffffffffff    	// #-1
    e6f8:	bl	8400 <PyUnicode_FromWideChar@plt>
    e6fc:	b	e71c <PyInit__testcapi@@Base+0x5560>
    e700:	mov	x0, xzr
    e704:	b	e71c <PyInit__testcapi@@Base+0x5560>
    e708:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e70c:	ldr	x0, [x0, #4016]
    e710:	ldr	x8, [x0]
    e714:	add	x8, x8, #0x1
    e718:	str	x8, [x0]
    e71c:	ldp	x29, x30, [sp, #16]
    e720:	add	sp, sp, #0x20
    e724:	ret
    e728:	sub	sp, sp, #0x20
    e72c:	stp	x29, x30, [sp, #16]
    e730:	add	x29, sp, #0x10
    e734:	mov	x0, x1
    e738:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e73c:	add	x1, x1, #0x97f
    e740:	add	x2, sp, #0x8
    e744:	mov	x3, sp
    e748:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e74c:	cbz	w0, e764 <PyInit__testcapi@@Base+0x55a8>
    e750:	ldr	x0, [sp, #8]
    e754:	cbz	x0, e76c <PyInit__testcapi@@Base+0x55b0>
    e758:	ldr	x1, [sp]
    e75c:	bl	8400 <PyUnicode_FromWideChar@plt>
    e760:	b	e780 <PyInit__testcapi@@Base+0x55c4>
    e764:	mov	x0, xzr
    e768:	b	e780 <PyInit__testcapi@@Base+0x55c4>
    e76c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e770:	ldr	x0, [x0, #4016]
    e774:	ldr	x8, [x0]
    e778:	add	x8, x8, #0x1
    e77c:	str	x8, [x0]
    e780:	ldp	x29, x30, [sp, #16]
    e784:	add	sp, sp, #0x20
    e788:	ret
    e78c:	sub	sp, sp, #0x70
    e790:	stp	x29, x30, [sp, #80]
    e794:	str	x19, [sp, #96]
    e798:	add	x29, sp, #0x50
    e79c:	mov	x0, x1
    e7a0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e7a4:	add	x1, x1, #0x982
    e7a8:	mov	x2, sp
    e7ac:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e7b0:	cbz	w0, e7f8 <PyInit__testcapi@@Base+0x563c>
    e7b4:	ldr	x1, [sp, #16]
    e7b8:	cmp	x1, #0x2
    e7bc:	b.lt	e7e0 <PyInit__testcapi@@Base+0x5624>  // b.tstop
    e7c0:	ldr	x8, [sp]
    e7c4:	mov	w9, #0x5b                  	// #91
    e7c8:	strb	w9, [x8]
    e7cc:	ldr	x9, [sp, #16]
    e7d0:	add	x8, x9, x8
    e7d4:	mov	w9, #0x5d                  	// #93
    e7d8:	sturb	w9, [x8, #-1]
    e7dc:	ldr	x1, [sp, #16]
    e7e0:	ldr	x0, [sp]
    e7e4:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e7e8:	mov	x19, x0
    e7ec:	mov	x0, sp
    e7f0:	bl	8470 <PyBuffer_Release@plt>
    e7f4:	b	e7fc <PyInit__testcapi@@Base+0x5640>
    e7f8:	mov	x19, xzr
    e7fc:	mov	x0, x19
    e800:	ldr	x19, [sp, #96]
    e804:	ldp	x29, x30, [sp, #80]
    e808:	add	sp, sp, #0x70
    e80c:	ret
    e810:	sub	sp, sp, #0x30
    e814:	stp	x29, x30, [sp, #16]
    e818:	str	x19, [sp, #32]
    e81c:	add	x29, sp, #0x10
    e820:	mov	x0, x1
    e824:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e828:	add	x1, x1, #0x994
    e82c:	add	x2, x29, #0x18
    e830:	add	x3, sp, #0x8
    e834:	str	xzr, [sp, #8]
    e838:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e83c:	cbz	w0, e878 <PyInit__testcapi@@Base+0x56bc>
    e840:	ldr	x0, [x29, #24]
    e844:	ldr	x2, [sp, #8]
    e848:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e84c:	add	x1, x1, #0xfe3
    e850:	mov	x3, sp
    e854:	bl	8810 <_PyArg_Parse_SizeT@plt>
    e858:	cbz	w0, e878 <PyInit__testcapi@@Base+0x56bc>
    e85c:	ldr	x0, [sp]
    e860:	bl	8970 <PyBytes_FromString@plt>
    e864:	ldr	x8, [sp]
    e868:	mov	x19, x0
    e86c:	mov	x0, x8
    e870:	bl	83d0 <PyMem_Free@plt>
    e874:	b	e87c <PyInit__testcapi@@Base+0x56c0>
    e878:	mov	x19, xzr
    e87c:	mov	x0, x19
    e880:	ldr	x19, [sp, #32]
    e884:	ldp	x29, x30, [sp, #16]
    e888:	add	sp, sp, #0x30
    e88c:	ret
    e890:	sub	sp, sp, #0x30
    e894:	stp	x29, x30, [sp, #16]
    e898:	str	x19, [sp, #32]
    e89c:	add	x29, sp, #0x10
    e8a0:	mov	x0, x1
    e8a4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e8a8:	add	x1, x1, #0x994
    e8ac:	add	x2, x29, #0x18
    e8b0:	add	x3, sp, #0x8
    e8b4:	str	xzr, [sp, #8]
    e8b8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e8bc:	cbz	w0, e8f8 <PyInit__testcapi@@Base+0x573c>
    e8c0:	ldr	x0, [x29, #24]
    e8c4:	ldr	x2, [sp, #8]
    e8c8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    e8cc:	add	x1, x1, #0x86e
    e8d0:	mov	x3, sp
    e8d4:	bl	8810 <_PyArg_Parse_SizeT@plt>
    e8d8:	cbz	w0, e8f8 <PyInit__testcapi@@Base+0x573c>
    e8dc:	ldr	x0, [sp]
    e8e0:	bl	8970 <PyBytes_FromString@plt>
    e8e4:	ldr	x8, [sp]
    e8e8:	mov	x19, x0
    e8ec:	mov	x0, x8
    e8f0:	bl	83d0 <PyMem_Free@plt>
    e8f4:	b	e8fc <PyInit__testcapi@@Base+0x5740>
    e8f8:	mov	x19, xzr
    e8fc:	mov	x0, x19
    e900:	ldr	x19, [sp, #32]
    e904:	ldp	x29, x30, [sp, #16]
    e908:	add	sp, sp, #0x30
    e90c:	ret
    e910:	sub	sp, sp, #0x40
    e914:	stp	x29, x30, [sp, #32]
    e918:	str	x19, [sp, #48]
    e91c:	add	x29, sp, #0x20
    e920:	mov	x0, x1
    e924:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e928:	add	x1, x1, #0x998
    e92c:	add	x2, x29, #0x18
    e930:	sub	x3, x29, #0x8
    e934:	add	x4, sp, #0x10
    e938:	stur	xzr, [x29, #-8]
    e93c:	stp	xzr, xzr, [sp, #8]
    e940:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e944:	cbz	w0, e9ac <PyInit__testcapi@@Base+0x57f0>
    e948:	ldr	x9, [sp, #16]
    e94c:	cbz	x9, e96c <PyInit__testcapi@@Base+0x57b0>
    e950:	ldr	x8, [x9, #16]
    e954:	cbz	x8, e960 <PyInit__testcapi@@Base+0x57a4>
    e958:	ldr	x9, [x9, #40]
    e95c:	b	e968 <PyInit__testcapi@@Base+0x57ac>
    e960:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
    e964:	ldr	x9, [x9, #3904]
    e968:	stp	x8, x9, [sp]
    e96c:	ldr	x0, [x29, #24]
    e970:	ldur	x2, [x29, #-8]
    e974:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e978:	add	x1, x1, #0x99d
    e97c:	add	x3, sp, #0x8
    e980:	mov	x4, sp
    e984:	bl	8810 <_PyArg_Parse_SizeT@plt>
    e988:	cbz	w0, e9ac <PyInit__testcapi@@Base+0x57f0>
    e98c:	ldp	x1, x0, [sp]
    e990:	bl	8500 <PyBytes_FromStringAndSize@plt>
    e994:	ldr	x8, [sp, #16]
    e998:	mov	x19, x0
    e99c:	cbnz	x8, e9b0 <PyInit__testcapi@@Base+0x57f4>
    e9a0:	ldr	x0, [sp, #8]
    e9a4:	bl	83d0 <PyMem_Free@plt>
    e9a8:	b	e9b0 <PyInit__testcapi@@Base+0x57f4>
    e9ac:	mov	x19, xzr
    e9b0:	mov	x0, x19
    e9b4:	ldr	x19, [sp, #48]
    e9b8:	ldp	x29, x30, [sp, #32]
    e9bc:	add	sp, sp, #0x40
    e9c0:	ret
    e9c4:	sub	sp, sp, #0x40
    e9c8:	stp	x29, x30, [sp, #32]
    e9cc:	str	x19, [sp, #48]
    e9d0:	add	x29, sp, #0x20
    e9d4:	mov	x0, x1
    e9d8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    e9dc:	add	x1, x1, #0x998
    e9e0:	add	x2, x29, #0x18
    e9e4:	sub	x3, x29, #0x8
    e9e8:	add	x4, sp, #0x10
    e9ec:	stur	xzr, [x29, #-8]
    e9f0:	stp	xzr, xzr, [sp, #8]
    e9f4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e9f8:	cbz	w0, ea60 <PyInit__testcapi@@Base+0x58a4>
    e9fc:	ldr	x9, [sp, #16]
    ea00:	cbz	x9, ea20 <PyInit__testcapi@@Base+0x5864>
    ea04:	ldr	x8, [x9, #16]
    ea08:	cbz	x8, ea14 <PyInit__testcapi@@Base+0x5858>
    ea0c:	ldr	x9, [x9, #40]
    ea10:	b	ea1c <PyInit__testcapi@@Base+0x5860>
    ea14:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ea18:	ldr	x9, [x9, #3904]
    ea1c:	stp	x8, x9, [sp]
    ea20:	ldr	x0, [x29, #24]
    ea24:	ldur	x2, [x29, #-8]
    ea28:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ea2c:	add	x1, x1, #0x9a1
    ea30:	add	x3, sp, #0x8
    ea34:	mov	x4, sp
    ea38:	bl	8810 <_PyArg_Parse_SizeT@plt>
    ea3c:	cbz	w0, ea60 <PyInit__testcapi@@Base+0x58a4>
    ea40:	ldp	x1, x0, [sp]
    ea44:	bl	8500 <PyBytes_FromStringAndSize@plt>
    ea48:	ldr	x8, [sp, #16]
    ea4c:	mov	x19, x0
    ea50:	cbnz	x8, ea64 <PyInit__testcapi@@Base+0x58a8>
    ea54:	ldr	x0, [sp, #8]
    ea58:	bl	83d0 <PyMem_Free@plt>
    ea5c:	b	ea64 <PyInit__testcapi@@Base+0x58a8>
    ea60:	mov	x19, xzr
    ea64:	mov	x0, x19
    ea68:	ldr	x19, [sp, #48]
    ea6c:	ldp	x29, x30, [sp, #32]
    ea70:	add	sp, sp, #0x40
    ea74:	ret
    ea78:	sub	sp, sp, #0x20
    ea7c:	stp	x29, x30, [sp, #16]
    ea80:	add	x29, sp, #0x10
    ea84:	mov	x0, x1
    ea88:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ea8c:	add	x1, x1, #0x9a5
    ea90:	add	x2, sp, #0x8
    ea94:	mov	x3, sp
    ea98:	str	xzr, [sp]
    ea9c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    eaa0:	cbz	w0, eab0 <PyInit__testcapi@@Base+0x58f4>
    eaa4:	ldp	x1, x0, [sp]
    eaa8:	bl	8a60 <PyCodec_IncrementalEncoder@plt>
    eaac:	b	eab4 <PyInit__testcapi@@Base+0x58f8>
    eab0:	mov	x0, xzr
    eab4:	ldp	x29, x30, [sp, #16]
    eab8:	add	sp, sp, #0x20
    eabc:	ret
    eac0:	sub	sp, sp, #0x20
    eac4:	stp	x29, x30, [sp, #16]
    eac8:	add	x29, sp, #0x10
    eacc:	mov	x0, x1
    ead0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ead4:	add	x1, x1, #0x9c1
    ead8:	add	x2, sp, #0x8
    eadc:	mov	x3, sp
    eae0:	str	xzr, [sp]
    eae4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    eae8:	cbz	w0, eaf8 <PyInit__testcapi@@Base+0x593c>
    eaec:	ldp	x1, x0, [sp]
    eaf0:	bl	88b0 <PyCodec_IncrementalDecoder@plt>
    eaf4:	b	eafc <PyInit__testcapi@@Base+0x5940>
    eaf8:	mov	x0, xzr
    eafc:	ldp	x29, x30, [sp, #16]
    eb00:	add	sp, sp, #0x20
    eb04:	ret
    eb08:	stp	x29, x30, [sp, #-32]!
    eb0c:	str	x19, [sp, #16]
    eb10:	mov	x29, sp
    eb14:	mov	w0, #0x1                   	// #1
    eb18:	bl	8920 <PyTuple_New@plt>
    eb1c:	cbz	x0, ebac <PyInit__testcapi@@Base+0x59f0>
    eb20:	mov	x19, x0
    eb24:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    eb28:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    eb2c:	add	x0, x0, #0x9dd
    eb30:	add	x2, x2, #0x9e2
    eb34:	mov	w1, #0x4                   	// #4
    eb38:	mov	x3, xzr
    eb3c:	bl	8e50 <PyUnicode_Decode@plt>
    eb40:	cbz	x0, ebac <PyInit__testcapi@@Base+0x59f0>
    eb44:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    eb48:	str	x0, [x19, #24]
    eb4c:	add	x1, x1, #0x9ea
    eb50:	add	x2, x29, #0x18
    eb54:	mov	x0, x19
    eb58:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    eb5c:	cbz	w0, eba8 <PyInit__testcapi@@Base+0x59ec>
    eb60:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    eb64:	add	x1, x1, #0x9f9
    eb68:	add	x2, x29, #0x18
    eb6c:	mov	x0, x19
    eb70:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    eb74:	cbz	w0, eba8 <PyInit__testcapi@@Base+0x59ec>
    eb78:	ldr	x8, [x19]
    eb7c:	subs	x8, x8, #0x1
    eb80:	str	x8, [x19]
    eb84:	b.ne	eb90 <PyInit__testcapi@@Base+0x59d4>  // b.any
    eb88:	mov	x0, x19
    eb8c:	bl	8560 <_Py_Dealloc@plt>
    eb90:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    eb94:	ldr	x0, [x0, #4016]
    eb98:	ldr	x8, [x0]
    eb9c:	add	x8, x8, #0x1
    eba0:	str	x8, [x0]
    eba4:	b	ebac <PyInit__testcapi@@Base+0x59f0>
    eba8:	mov	x0, xzr
    ebac:	ldr	x19, [sp, #16]
    ebb0:	ldp	x29, x30, [sp], #32
    ebb4:	ret
    ebb8:	sub	sp, sp, #0x40
    ebbc:	stp	x29, x30, [sp, #16]
    ebc0:	str	x21, [sp, #32]
    ebc4:	stp	x20, x19, [sp, #48]
    ebc8:	add	x29, sp, #0x10
    ebcc:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ebd0:	ldr	x8, [x8, #3880]
    ebd4:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ebd8:	mov	w0, #0x1                   	// #1
    ebdc:	ldrb	w8, [x8, #25]
    ebe0:	str	w8, [x9, #3820]
    ebe4:	bl	8920 <PyTuple_New@plt>
    ebe8:	cbz	x0, ed48 <PyInit__testcapi@@Base+0x5b8c>
    ebec:	mov	x19, x0
    ebf0:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    ebf4:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
    ebf8:	add	x0, x0, #0xa08
    ebfc:	add	x2, x2, #0xd59
    ec00:	mov	w1, #0x4                   	// #4
    ec04:	mov	x3, xzr
    ec08:	bl	8e50 <PyUnicode_Decode@plt>
    ec0c:	cbz	x0, ed48 <PyInit__testcapi@@Base+0x5b8c>
    ec10:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ec14:	mov	x20, x0
    ec18:	str	x0, [x19, #24]
    ec1c:	add	x1, x1, #0xa0d
    ec20:	add	x2, x29, #0x18
    ec24:	mov	x0, x19
    ec28:	str	xzr, [x29, #24]
    ec2c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ec30:	cbz	w0, ed44 <PyInit__testcapi@@Base+0x5b88>
    ec34:	ldr	x0, [x20, #40]
    ec38:	ldr	x21, [x29, #24]
    ec3c:	cbz	x0, ec6c <PyInit__testcapi@@Base+0x5ab0>
    ec40:	cmp	x21, x0
    ec44:	b.eq	ec7c <PyInit__testcapi@@Base+0x5ac0>  // b.none
    ec48:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ec4c:	ldr	x0, [x8, #3520]
    ec50:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ec54:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    ec58:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ec5c:	add	x1, x1, #0xc12
    ec60:	add	x2, x2, #0xa46
    ec64:	add	x3, x3, #0xa1b
    ec68:	b	ed40 <PyInit__testcapi@@Base+0x5b84>
    ec6c:	mov	x0, x20
    ec70:	bl	8910 <PyUnicode_AsUnicode@plt>
    ec74:	cmp	x21, x0
    ec78:	b.ne	ec48 <PyInit__testcapi@@Base+0x5a8c>  // b.any
    ec7c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ec80:	add	x1, x1, #0xa43
    ec84:	add	x2, x29, #0x18
    ec88:	add	x3, sp, #0x8
    ec8c:	mov	x0, x19
    ec90:	str	xzr, [x29, #24]
    ec94:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ec98:	cbz	w0, ed44 <PyInit__testcapi@@Base+0x5b88>
    ec9c:	ldr	x0, [x20, #40]
    eca0:	ldr	x21, [x29, #24]
    eca4:	cbnz	x0, ecb0 <PyInit__testcapi@@Base+0x5af4>
    eca8:	mov	x0, x20
    ecac:	bl	8910 <PyUnicode_AsUnicode@plt>
    ecb0:	cmp	x21, x0
    ecb4:	b.ne	ed20 <PyInit__testcapi@@Base+0x5b64>  // b.any
    ecb8:	ldr	x8, [x20, #40]
    ecbc:	ldr	x21, [sp, #8]
    ecc0:	cbnz	x8, eccc <PyInit__testcapi@@Base+0x5b10>
    ecc4:	mov	x0, x20
    ecc8:	bl	8910 <PyUnicode_AsUnicode@plt>
    eccc:	ldr	w8, [x20, #32]
    ecd0:	mov	w9, #0x60                  	// #96
    ecd4:	mov	w10, #0x40                  	// #64
    ecd8:	bics	wzr, w9, w8
    ecdc:	mov	w8, #0x10                  	// #16
    ece0:	csel	x8, x8, x10, eq  // eq = none
    ece4:	ldr	x8, [x20, x8]
    ece8:	cmp	x21, x8
    ecec:	b.ne	ed20 <PyInit__testcapi@@Base+0x5b64>  // b.any
    ecf0:	ldr	x8, [x19]
    ecf4:	subs	x8, x8, #0x1
    ecf8:	str	x8, [x19]
    ecfc:	b.ne	ed08 <PyInit__testcapi@@Base+0x5b4c>  // b.any
    ed00:	mov	x0, x19
    ed04:	bl	8560 <_Py_Dealloc@plt>
    ed08:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ed0c:	ldr	x0, [x0, #4016]
    ed10:	ldr	x8, [x0]
    ed14:	add	x8, x8, #0x1
    ed18:	str	x8, [x0]
    ed1c:	b	ed48 <PyInit__testcapi@@Base+0x5b8c>
    ed20:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ed24:	ldr	x0, [x8, #3520]
    ed28:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ed2c:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    ed30:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ed34:	add	x1, x1, #0xc12
    ed38:	add	x2, x2, #0xa46
    ed3c:	add	x3, x3, #0xa52
    ed40:	bl	8e60 <PyErr_Format@plt>
    ed44:	mov	x0, xzr
    ed48:	ldp	x20, x19, [sp, #48]
    ed4c:	ldr	x21, [sp, #32]
    ed50:	ldp	x29, x30, [sp, #16]
    ed54:	add	sp, sp, #0x40
    ed58:	ret
    ed5c:	sub	sp, sp, #0x50
    ed60:	stp	x29, x30, [sp, #32]
    ed64:	stp	x22, x21, [sp, #48]
    ed68:	stp	x20, x19, [sp, #64]
    ed6c:	add	x29, sp, #0x20
    ed70:	mov	w0, #0x2                   	// #2
    ed74:	bl	8920 <PyTuple_New@plt>
    ed78:	cbz	x0, ef48 <PyInit__testcapi@@Base+0x5d8c>
    ed7c:	mov	x20, x0
    ed80:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    ed84:	add	x0, x0, #0xa08
    ed88:	bl	8d10 <PyUnicode_FromString@plt>
    ed8c:	str	x0, [x20, #24]
    ed90:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ed94:	ldr	x19, [x19, #4016]
    ed98:	mov	x21, x0
    ed9c:	ldr	x8, [x19]
    eda0:	add	x8, x8, #0x1
    eda4:	str	x8, [x19]
    eda8:	str	x19, [x20, #32]
    edac:	stur	xzr, [x29, #-8]
    edb0:	ldr	x0, [x0, #40]
    edb4:	cbnz	x0, edc0 <PyInit__testcapi@@Base+0x5c04>
    edb8:	mov	x0, x21
    edbc:	bl	8910 <PyUnicode_AsUnicode@plt>
    edc0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    edc4:	str	x0, [sp, #16]
    edc8:	add	x1, x1, #0xa7c
    edcc:	sub	x2, x29, #0x8
    edd0:	add	x3, sp, #0x10
    edd4:	mov	x0, x20
    edd8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    eddc:	cbz	w0, ef48 <PyInit__testcapi@@Base+0x5d8c>
    ede0:	ldr	x0, [x21, #40]
    ede4:	ldur	x22, [x29, #-8]
    ede8:	cbz	x0, ee18 <PyInit__testcapi@@Base+0x5c5c>
    edec:	cmp	x22, x0
    edf0:	b.eq	ee28 <PyInit__testcapi@@Base+0x5c6c>  // b.none
    edf4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    edf8:	ldr	x0, [x8, #3520]
    edfc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ee00:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    ee04:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ee08:	add	x1, x1, #0xc12
    ee0c:	add	x2, x2, #0xadc
    ee10:	add	x3, x3, #0xa8b
    ee14:	b	ef44 <PyInit__testcapi@@Base+0x5d88>
    ee18:	mov	x0, x21
    ee1c:	bl	8910 <PyUnicode_AsUnicode@plt>
    ee20:	cmp	x22, x0
    ee24:	b.ne	edf4 <PyInit__testcapi@@Base+0x5c38>  // b.any
    ee28:	ldr	x8, [sp, #16]
    ee2c:	cbz	x8, ee54 <PyInit__testcapi@@Base+0x5c98>
    ee30:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ee34:	ldr	x0, [x8, #3520]
    ee38:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ee3c:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    ee40:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ee44:	add	x1, x1, #0xc12
    ee48:	add	x2, x2, #0xadc
    ee4c:	add	x3, x3, #0xab2
    ee50:	b	ef44 <PyInit__testcapi@@Base+0x5d88>
    ee54:	stur	xzr, [x29, #-8]
    ee58:	ldr	x0, [x21, #40]
    ee5c:	cbnz	x0, ee68 <PyInit__testcapi@@Base+0x5cac>
    ee60:	mov	x0, x21
    ee64:	bl	8910 <PyUnicode_AsUnicode@plt>
    ee68:	mov	x8, #0xffffffffffffffff    	// #-1
    ee6c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ee70:	stp	x8, x0, [sp, #8]
    ee74:	add	x1, x1, #0xad7
    ee78:	sub	x2, x29, #0x8
    ee7c:	add	x3, sp, #0x8
    ee80:	add	x4, sp, #0x10
    ee84:	mov	x5, sp
    ee88:	mov	x0, x20
    ee8c:	str	x8, [sp]
    ee90:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ee94:	cbz	w0, ef48 <PyInit__testcapi@@Base+0x5d8c>
    ee98:	ldr	x0, [x21, #40]
    ee9c:	ldur	x22, [x29, #-8]
    eea0:	cbnz	x0, eeac <PyInit__testcapi@@Base+0x5cf0>
    eea4:	mov	x0, x21
    eea8:	bl	8910 <PyUnicode_AsUnicode@plt>
    eeac:	cmp	x22, x0
    eeb0:	b.ne	ef24 <PyInit__testcapi@@Base+0x5d68>  // b.any
    eeb4:	ldr	x8, [x21, #40]
    eeb8:	ldr	x22, [sp, #8]
    eebc:	cbnz	x8, eec8 <PyInit__testcapi@@Base+0x5d0c>
    eec0:	mov	x0, x21
    eec4:	bl	8910 <PyUnicode_AsUnicode@plt>
    eec8:	ldr	w8, [x21, #32]
    eecc:	mov	w9, #0x60                  	// #96
    eed0:	mov	w10, #0x40                  	// #64
    eed4:	bics	wzr, w9, w8
    eed8:	mov	w8, #0x10                  	// #16
    eedc:	csel	x8, x8, x10, eq  // eq = none
    eee0:	ldr	x8, [x21, x8]
    eee4:	cmp	x22, x8
    eee8:	b.ne	ef24 <PyInit__testcapi@@Base+0x5d68>  // b.any
    eeec:	ldr	x8, [sp, #16]
    eef0:	cbnz	x8, ef64 <PyInit__testcapi@@Base+0x5da8>
    eef4:	ldr	x8, [sp]
    eef8:	cbnz	x8, ef64 <PyInit__testcapi@@Base+0x5da8>
    eefc:	ldr	x8, [x20]
    ef00:	subs	x8, x8, #0x1
    ef04:	str	x8, [x20]
    ef08:	b.ne	ef14 <PyInit__testcapi@@Base+0x5d58>  // b.any
    ef0c:	mov	x0, x20
    ef10:	bl	8560 <_Py_Dealloc@plt>
    ef14:	ldr	x8, [x19]
    ef18:	add	x8, x8, #0x1
    ef1c:	str	x8, [x19]
    ef20:	b	ef4c <PyInit__testcapi@@Base+0x5d90>
    ef24:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ef28:	ldr	x0, [x8, #3520]
    ef2c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ef30:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    ef34:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ef38:	add	x1, x1, #0xc12
    ef3c:	add	x2, x2, #0xadc
    ef40:	add	x3, x3, #0xae8
    ef44:	bl	8e60 <PyErr_Format@plt>
    ef48:	mov	x19, xzr
    ef4c:	mov	x0, x19
    ef50:	ldp	x20, x19, [sp, #64]
    ef54:	ldp	x22, x21, [sp, #48]
    ef58:	ldp	x29, x30, [sp, #32]
    ef5c:	add	sp, sp, #0x50
    ef60:	ret
    ef64:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    ef68:	ldr	x0, [x8, #3520]
    ef6c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    ef70:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
    ef74:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    ef78:	add	x1, x1, #0xc12
    ef7c:	add	x2, x2, #0xadc
    ef80:	add	x3, x3, #0xb11
    ef84:	b	ef44 <PyInit__testcapi@@Base+0x5d88>
    ef88:	sub	sp, sp, #0x40
    ef8c:	stp	x29, x30, [sp, #16]
    ef90:	str	x21, [sp, #32]
    ef94:	stp	x20, x19, [sp, #48]
    ef98:	add	x29, sp, #0x10
    ef9c:	mov	w8, #0xabcd                	// #43981
    efa0:	movk	w8, #0x10, lsl #16
    efa4:	mov	w9, #0x110000              	// #1114112
    efa8:	add	x0, x29, #0x18
    efac:	mov	w1, #0x1                   	// #1
    efb0:	str	x8, [x29, #24]
    efb4:	stur	w9, [x29, #-4]
    efb8:	bl	8400 <PyUnicode_FromWideChar@plt>
    efbc:	cbz	x0, f0c4 <PyInit__testcapi@@Base+0x5f08>
    efc0:	mov	x20, x0
    efc4:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    efc8:	add	x0, x0, #0xb39
    efcc:	bl	8d10 <PyUnicode_FromString@plt>
    efd0:	cbz	x0, f050 <PyInit__testcapi@@Base+0x5e94>
    efd4:	ldr	x8, [x20, #16]
    efd8:	ldr	x9, [x0, #16]
    efdc:	mov	x19, x0
    efe0:	cmp	x8, x9
    efe4:	b.ne	f06c <PyInit__testcapi@@Base+0x5eb0>  // b.any
    efe8:	mov	x0, x20
    efec:	mov	x1, x19
    eff0:	bl	8b30 <PyUnicode_Compare@plt>
    eff4:	ldr	x8, [x20]
    eff8:	mov	w21, w0
    effc:	subs	x8, x8, #0x1
    f000:	str	x8, [x20]
    f004:	b.ne	f010 <PyInit__testcapi@@Base+0x5e54>  // b.any
    f008:	mov	x0, x20
    f00c:	bl	8560 <_Py_Dealloc@plt>
    f010:	ldr	x8, [x19]
    f014:	subs	x8, x8, #0x1
    f018:	str	x8, [x19]
    f01c:	b.eq	f0d8 <PyInit__testcapi@@Base+0x5f1c>  // b.none
    f020:	cbz	w21, f0e4 <PyInit__testcapi@@Base+0x5f28>
    f024:	bl	8980 <PyErr_Occurred@plt>
    f028:	cbnz	x0, f0c0 <PyInit__testcapi@@Base+0x5f04>
    f02c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    f030:	ldr	x0, [x8, #3520]
    f034:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    f038:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    f03c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    f040:	add	x1, x1, #0xc12
    f044:	add	x2, x2, #0x4f
    f048:	add	x3, x3, #0xb70
    f04c:	b	f0bc <PyInit__testcapi@@Base+0x5f00>
    f050:	ldr	x8, [x20]
    f054:	subs	x8, x8, #0x1
    f058:	str	x8, [x20]
    f05c:	b.ne	f0c0 <PyInit__testcapi@@Base+0x5f04>  // b.any
    f060:	mov	x0, x20
    f064:	bl	8560 <_Py_Dealloc@plt>
    f068:	b	f0c0 <PyInit__testcapi@@Base+0x5f04>
    f06c:	ldr	x8, [x20]
    f070:	subs	x8, x8, #0x1
    f074:	str	x8, [x20]
    f078:	b.ne	f084 <PyInit__testcapi@@Base+0x5ec8>  // b.any
    f07c:	mov	x0, x20
    f080:	bl	8560 <_Py_Dealloc@plt>
    f084:	ldr	x8, [x19]
    f088:	subs	x8, x8, #0x1
    f08c:	str	x8, [x19]
    f090:	b.ne	f09c <PyInit__testcapi@@Base+0x5ee0>  // b.any
    f094:	mov	x0, x19
    f098:	bl	8560 <_Py_Dealloc@plt>
    f09c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    f0a0:	ldr	x0, [x8, #3520]
    f0a4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    f0a8:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    f0ac:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    f0b0:	add	x1, x1, #0xc12
    f0b4:	add	x2, x2, #0x4f
    f0b8:	add	x3, x3, #0xb3e
    f0bc:	bl	8e60 <PyErr_Format@plt>
    f0c0:	mov	x0, xzr
    f0c4:	ldp	x20, x19, [sp, #48]
    f0c8:	ldr	x21, [sp, #32]
    f0cc:	ldp	x29, x30, [sp, #16]
    f0d0:	add	sp, sp, #0x40
    f0d4:	ret
    f0d8:	mov	x0, x19
    f0dc:	bl	8560 <_Py_Dealloc@plt>
    f0e0:	cbnz	w21, f024 <PyInit__testcapi@@Base+0x5e68>
    f0e4:	sub	x0, x29, #0x4
    f0e8:	mov	w1, #0x1                   	// #1
    f0ec:	bl	8400 <PyUnicode_FromWideChar@plt>
    f0f0:	cbz	x0, f118 <PyInit__testcapi@@Base+0x5f5c>
    f0f4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    f0f8:	ldr	x0, [x8, #3520]
    f0fc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    f100:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    f104:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    f108:	add	x1, x1, #0xc12
    f10c:	add	x2, x2, #0x4f
    f110:	add	x3, x3, #0xb9a
    f114:	b	f0bc <PyInit__testcapi@@Base+0x5f00>
    f118:	bl	88c0 <PyErr_Clear@plt>
    f11c:	sub	x0, x29, #0x4
    f120:	mov	w1, #0x1                   	// #1
    f124:	bl	8890 <PyUnicode_FromUnicode@plt>
    f128:	cbz	x0, f150 <PyInit__testcapi@@Base+0x5f94>
    f12c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    f130:	ldr	x0, [x8, #3520]
    f134:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    f138:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    f13c:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    f140:	add	x1, x1, #0xc12
    f144:	add	x2, x2, #0x4f
    f148:	add	x3, x3, #0xbcf
    f14c:	b	f0bc <PyInit__testcapi@@Base+0x5f00>
    f150:	bl	88c0 <PyErr_Clear@plt>
    f154:	mov	w1, #0x1                   	// #1
    f158:	mov	x0, xzr
    f15c:	bl	8890 <PyUnicode_FromUnicode@plt>
    f160:	cbz	x0, f0c4 <PyInit__testcapi@@Base+0x5f08>
    f164:	mov	x19, x0
    f168:	ldr	x0, [x0, #40]
    f16c:	ldur	w20, [x29, #-4]
    f170:	cbnz	x0, f17c <PyInit__testcapi@@Base+0x5fc0>
    f174:	mov	x0, x19
    f178:	bl	8910 <PyUnicode_AsUnicode@plt>
    f17c:	str	w20, [x0]
    f180:	mov	x0, x19
    f184:	bl	82c0 <_PyUnicode_Ready@plt>
    f188:	ldr	x8, [x19]
    f18c:	mov	w20, w0
    f190:	subs	x8, x8, #0x1
    f194:	str	x8, [x19]
    f198:	b.ne	f1a4 <PyInit__testcapi@@Base+0x5fe8>  // b.any
    f19c:	mov	x0, x19
    f1a0:	bl	8560 <_Py_Dealloc@plt>
    f1a4:	tbnz	w20, #31, f1cc <PyInit__testcapi@@Base+0x6010>
    f1a8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
    f1ac:	ldr	x0, [x8, #3520]
    f1b0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
    f1b4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
    f1b8:	adrp	x3, 15000 <PyInit__testcapi@@Base+0xbe44>
    f1bc:	add	x1, x1, #0xc12
    f1c0:	add	x2, x2, #0x4f
    f1c4:	add	x3, x3, #0xc03
    f1c8:	b	f0bc <PyInit__testcapi@@Base+0x5f00>
    f1cc:	bl	88c0 <PyErr_Clear@plt>
    f1d0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    f1d4:	ldr	x0, [x0, #4016]
    f1d8:	ldr	x8, [x0]
    f1dc:	add	x8, x8, #0x1
    f1e0:	str	x8, [x0]
    f1e4:	b	f0c4 <PyInit__testcapi@@Base+0x5f08>
    f1e8:	sub	sp, sp, #0x40
    f1ec:	stp	x29, x30, [sp, #16]
    f1f0:	str	x21, [sp, #32]
    f1f4:	stp	x20, x19, [sp, #48]
    f1f8:	add	x29, sp, #0x10
    f1fc:	mov	x0, x1
    f200:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f204:	add	x1, x1, #0xc21
    f208:	add	x2, x29, #0x18
    f20c:	add	x3, sp, #0x8
    f210:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f214:	cbz	w0, f2a0 <PyInit__testcapi@@Base+0x60e4>
    f218:	ldr	x8, [sp, #8]
    f21c:	lsr	x9, x8, #61
    f220:	cbnz	x9, f290 <PyInit__testcapi@@Base+0x60d4>
    f224:	lsl	x0, x8, #2
    f228:	bl	8fc0 <PyMem_Malloc@plt>
    f22c:	cbz	x0, f290 <PyInit__testcapi@@Base+0x60d4>
    f230:	mov	x19, x0
    f234:	ldr	x0, [x29, #24]
    f238:	ldr	x2, [sp, #8]
    f23c:	mov	x1, x19
    f240:	bl	82d0 <PyUnicode_AsWideChar@plt>
    f244:	cmn	x0, #0x1
    f248:	b.eq	f298 <PyInit__testcapi@@Base+0x60dc>  // b.none
    f24c:	ldr	x8, [sp, #8]
    f250:	mov	x20, x0
    f254:	cmp	x0, x8
    f258:	cinc	x1, x0, lt  // lt = tstop
    f25c:	mov	x0, x19
    f260:	str	x1, [sp, #8]
    f264:	bl	8400 <PyUnicode_FromWideChar@plt>
    f268:	mov	x21, x0
    f26c:	mov	x0, x19
    f270:	bl	83d0 <PyMem_Free@plt>
    f274:	cbz	x21, f2a0 <PyInit__testcapi@@Base+0x60e4>
    f278:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    f27c:	add	x0, x0, #0xc24
    f280:	mov	x1, x21
    f284:	mov	x2, x20
    f288:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    f28c:	b	f2a4 <PyInit__testcapi@@Base+0x60e8>
    f290:	bl	8570 <PyErr_NoMemory@plt>
    f294:	b	f2a4 <PyInit__testcapi@@Base+0x60e8>
    f298:	mov	x0, x19
    f29c:	bl	83d0 <PyMem_Free@plt>
    f2a0:	mov	x0, xzr
    f2a4:	ldp	x20, x19, [sp, #48]
    f2a8:	ldr	x21, [sp, #32]
    f2ac:	ldp	x29, x30, [sp, #16]
    f2b0:	add	sp, sp, #0x40
    f2b4:	ret
    f2b8:	sub	sp, sp, #0x30
    f2bc:	stp	x29, x30, [sp, #16]
    f2c0:	stp	x20, x19, [sp, #32]
    f2c4:	add	x29, sp, #0x10
    f2c8:	mov	x0, x1
    f2cc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e44>
    f2d0:	add	x1, x1, #0xf1b
    f2d4:	add	x2, sp, #0x8
    f2d8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f2dc:	cbz	w0, f328 <PyInit__testcapi@@Base+0x616c>
    f2e0:	ldr	x0, [sp, #8]
    f2e4:	mov	x1, sp
    f2e8:	bl	8c70 <PyUnicode_AsWideCharString@plt>
    f2ec:	cbz	x0, f32c <PyInit__testcapi@@Base+0x6170>
    f2f0:	ldr	x8, [sp]
    f2f4:	mov	x19, x0
    f2f8:	add	x1, x8, #0x1
    f2fc:	bl	8400 <PyUnicode_FromWideChar@plt>
    f300:	mov	x20, x0
    f304:	mov	x0, x19
    f308:	bl	83d0 <PyMem_Free@plt>
    f30c:	cbz	x20, f328 <PyInit__testcapi@@Base+0x616c>
    f310:	ldr	x2, [sp]
    f314:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    f318:	add	x0, x0, #0xc24
    f31c:	mov	x1, x20
    f320:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    f324:	b	f32c <PyInit__testcapi@@Base+0x6170>
    f328:	mov	x0, xzr
    f32c:	ldp	x20, x19, [sp, #32]
    f330:	ldp	x29, x30, [sp, #16]
    f334:	add	sp, sp, #0x30
    f338:	ret
    f33c:	sub	sp, sp, #0x40
    f340:	stp	x29, x30, [sp, #16]
    f344:	str	x21, [sp, #32]
    f348:	stp	x20, x19, [sp, #48]
    f34c:	add	x29, sp, #0x10
    f350:	mov	x0, x1
    f354:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f358:	add	x1, x1, #0xc29
    f35c:	add	x2, x29, #0x18
    f360:	mov	x3, sp
    f364:	sub	x4, x29, #0x4
    f368:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f36c:	cbz	w0, f3f8 <PyInit__testcapi@@Base+0x623c>
    f370:	ldr	x8, [sp]
    f374:	add	x19, x8, #0x1
    f378:	lsr	x8, x19, #61
    f37c:	cbnz	x8, f3e4 <PyInit__testcapi@@Base+0x6228>
    f380:	lsl	x21, x19, #2
    f384:	mov	x0, x21
    f388:	bl	8fc0 <PyMem_Malloc@plt>
    f38c:	cbz	x0, f3e4 <PyInit__testcapi@@Base+0x6228>
    f390:	mov	w1, wzr
    f394:	mov	x2, x21
    f398:	mov	x20, x0
    f39c:	bl	8770 <memset@plt>
    f3a0:	ldr	x8, [sp]
    f3a4:	mov	w9, #0xffff                	// #65535
    f3a8:	mov	x1, x20
    f3ac:	mov	x2, x19
    f3b0:	str	w9, [x20, x8, lsl #2]
    f3b4:	ldr	x0, [x29, #24]
    f3b8:	ldur	w3, [x29, #-4]
    f3bc:	bl	8a00 <PyUnicode_AsUCS4@plt>
    f3c0:	cbz	x0, f3f0 <PyInit__testcapi@@Base+0x6234>
    f3c4:	mov	w0, #0x4                   	// #4
    f3c8:	mov	x1, x20
    f3cc:	mov	x2, x19
    f3d0:	bl	8bf0 <PyUnicode_FromKindAndData@plt>
    f3d4:	mov	x19, x0
    f3d8:	mov	x0, x20
    f3dc:	bl	83d0 <PyMem_Free@plt>
    f3e0:	b	f3fc <PyInit__testcapi@@Base+0x6240>
    f3e4:	bl	8570 <PyErr_NoMemory@plt>
    f3e8:	mov	x19, x0
    f3ec:	b	f3fc <PyInit__testcapi@@Base+0x6240>
    f3f0:	mov	x0, x20
    f3f4:	bl	83d0 <PyMem_Free@plt>
    f3f8:	mov	x19, xzr
    f3fc:	mov	x0, x19
    f400:	ldp	x20, x19, [sp, #48]
    f404:	ldr	x21, [sp, #32]
    f408:	ldp	x29, x30, [sp, #16]
    f40c:	add	sp, sp, #0x40
    f410:	ret
    f414:	sub	sp, sp, #0x30
    f418:	stp	x29, x30, [sp, #32]
    f41c:	add	x29, sp, #0x20
    f420:	mov	x0, x1
    f424:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f428:	add	x1, x1, #0xc3c
    f42c:	sub	x2, x29, #0x8
    f430:	add	x3, sp, #0x10
    f434:	add	x4, sp, #0x8
    f438:	mov	x5, sp
    f43c:	sub	x6, x29, #0xc
    f440:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f444:	cbz	w0, f464 <PyInit__testcapi@@Base+0x62a8>
    f448:	ldur	x0, [x29, #-8]
    f44c:	ldr	w1, [sp, #16]
    f450:	ldp	x3, x2, [sp]
    f454:	ldur	w4, [x29, #-12]
    f458:	bl	8fb0 <PyUnicode_FindChar@plt>
    f45c:	cmn	x0, #0x2
    f460:	b.ne	f46c <PyInit__testcapi@@Base+0x62b0>  // b.any
    f464:	mov	x0, xzr
    f468:	b	f470 <PyInit__testcapi@@Base+0x62b4>
    f46c:	bl	87f0 <PyLong_FromSsize_t@plt>
    f470:	ldp	x29, x30, [sp, #32]
    f474:	add	sp, sp, #0x30
    f478:	ret
    f47c:	sub	sp, sp, #0x40
    f480:	stp	x29, x30, [sp, #32]
    f484:	str	x19, [sp, #48]
    f488:	add	x29, sp, #0x20
    f48c:	mov	x0, x1
    f490:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f494:	add	x1, x1, #0xc53
    f498:	sub	x2, x29, #0x8
    f49c:	add	x3, sp, #0x8
    f4a0:	add	x4, x29, #0x18
    f4a4:	add	x5, sp, #0x10
    f4a8:	mov	x6, sp
    f4ac:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f4b0:	cbz	w0, f568 <PyInit__testcapi@@Base+0x63ac>
    f4b4:	ldur	x9, [x29, #-8]
    f4b8:	ldr	w8, [x9, #32]
    f4bc:	ldr	x0, [x9, #16]
    f4c0:	tbnz	w8, #6, f4e0 <PyInit__testcapi@@Base+0x6324>
    f4c4:	ubfx	w8, w8, #2, #3
    f4c8:	cmp	w8, #0x1
    f4cc:	b.ne	f4f0 <PyInit__testcapi@@Base+0x6334>  // b.any
    f4d0:	mov	w1, #0xff                  	// #255
    f4d4:	bl	9010 <PyUnicode_New@plt>
    f4d8:	cbnz	x0, f508 <PyInit__testcapi@@Base+0x634c>
    f4dc:	b	f56c <PyInit__testcapi@@Base+0x63b0>
    f4e0:	mov	w1, #0x7f                  	// #127
    f4e4:	bl	9010 <PyUnicode_New@plt>
    f4e8:	cbnz	x0, f508 <PyInit__testcapi@@Base+0x634c>
    f4ec:	b	f56c <PyInit__testcapi@@Base+0x63b0>
    f4f0:	cmp	w8, #0x2
    f4f4:	mov	w8, #0x10ffff              	// #1114111
    f4f8:	mov	w9, #0xffff                	// #65535
    f4fc:	csel	w1, w9, w8, eq  // eq = none
    f500:	bl	9010 <PyUnicode_New@plt>
    f504:	cbz	x0, f56c <PyInit__testcapi@@Base+0x63b0>
    f508:	ldr	x2, [x0, #16]
    f50c:	mov	x1, xzr
    f510:	mov	w3, wzr
    f514:	mov	x19, x0
    f518:	bl	8c90 <PyUnicode_Fill@plt>
    f51c:	tbnz	x0, #63, f550 <PyInit__testcapi@@Base+0x6394>
    f520:	ldp	x1, x3, [sp, #8]
    f524:	ldr	x2, [x29, #24]
    f528:	ldr	x4, [sp]
    f52c:	mov	x0, x19
    f530:	bl	8630 <PyUnicode_CopyCharacters@plt>
    f534:	tbnz	x0, #63, f550 <PyInit__testcapi@@Base+0x6394>
    f538:	mov	x2, x0
    f53c:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    f540:	add	x0, x0, #0xc24
    f544:	mov	x1, x19
    f548:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    f54c:	b	f56c <PyInit__testcapi@@Base+0x63b0>
    f550:	ldr	x8, [x19]
    f554:	subs	x8, x8, #0x1
    f558:	str	x8, [x19]
    f55c:	b.ne	f568 <PyInit__testcapi@@Base+0x63ac>  // b.any
    f560:	mov	x0, x19
    f564:	bl	8560 <_Py_Dealloc@plt>
    f568:	mov	x0, xzr
    f56c:	ldr	x19, [sp, #48]
    f570:	ldp	x29, x30, [sp, #32]
    f574:	add	sp, sp, #0x40
    f578:	ret
    f57c:	sub	sp, sp, #0x40
    f580:	stp	x29, x30, [sp, #32]
    f584:	stp	x20, x19, [sp, #48]
    f588:	add	x29, sp, #0x20
    f58c:	mov	x0, x1
    f590:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f594:	add	x1, x1, #0xc70
    f598:	sub	x2, x29, #0x8
    f59c:	add	x3, sp, #0x10
    f5a0:	add	x4, sp, #0x8
    f5a4:	str	xzr, [sp, #8]
    f5a8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f5ac:	cbz	w0, f624 <PyInit__testcapi@@Base+0x6468>
    f5b0:	ldr	x8, [sp, #16]
    f5b4:	mov	x0, xzr
    f5b8:	lsl	x9, x8, #3
    f5bc:	sub	x1, x9, x8
    f5c0:	bl	8500 <PyBytes_FromStringAndSize@plt>
    f5c4:	str	x0, [sp]
    f5c8:	cbz	x0, f628 <PyInit__testcapi@@Base+0x646c>
    f5cc:	mov	x19, x0
    f5d0:	ldur	x0, [x29, #-8]
    f5d4:	ldp	x3, x1, [sp, #8]
    f5d8:	add	x20, x19, #0x20
    f5dc:	mov	x2, x20
    f5e0:	bl	8af0 <PyUnicode_EncodeDecimal@plt>
    f5e4:	tbnz	w0, #31, f60c <PyInit__testcapi@@Base+0x6450>
    f5e8:	mov	x0, x20
    f5ec:	bl	8300 <strlen@plt>
    f5f0:	mov	x1, x0
    f5f4:	mov	x0, sp
    f5f8:	bl	8370 <_PyBytes_Resize@plt>
    f5fc:	ldr	x8, [sp]
    f600:	cmp	w0, #0x0
    f604:	csel	x0, xzr, x8, lt  // lt = tstop
    f608:	b	f628 <PyInit__testcapi@@Base+0x646c>
    f60c:	ldr	x8, [x19]
    f610:	subs	x8, x8, #0x1
    f614:	str	x8, [x19]
    f618:	b.ne	f624 <PyInit__testcapi@@Base+0x6468>  // b.any
    f61c:	mov	x0, x19
    f620:	bl	8560 <_Py_Dealloc@plt>
    f624:	mov	x0, xzr
    f628:	ldp	x20, x19, [sp, #48]
    f62c:	ldp	x29, x30, [sp, #32]
    f630:	add	sp, sp, #0x40
    f634:	ret
    f638:	sub	sp, sp, #0x20
    f63c:	stp	x29, x30, [sp, #16]
    f640:	add	x29, sp, #0x10
    f644:	mov	x0, x1
    f648:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f64c:	add	x1, x1, #0xc70
    f650:	add	x2, sp, #0x8
    f654:	mov	x3, sp
    f658:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f65c:	cbz	w0, f66c <PyInit__testcapi@@Base+0x64b0>
    f660:	ldp	x1, x0, [sp]
    f664:	bl	9020 <PyUnicode_TransformDecimalToASCII@plt>
    f668:	b	f670 <PyInit__testcapi@@Base+0x64b4>
    f66c:	mov	x0, xzr
    f670:	ldp	x29, x30, [sp, #16]
    f674:	add	sp, sp, #0x20
    f678:	ret
    f67c:	sub	sp, sp, #0x30
    f680:	stp	x29, x30, [sp, #16]
    f684:	str	x19, [sp, #32]
    f688:	add	x29, sp, #0x10
    f68c:	mov	x0, x1
    f690:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f694:	add	x1, x1, #0x97c
    f698:	add	x2, x29, #0x18
    f69c:	add	x3, sp, #0x8
    f6a0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f6a4:	cbz	w0, f6e0 <PyInit__testcapi@@Base+0x6524>
    f6a8:	ldr	x1, [sp, #8]
    f6ac:	mov	x0, xzr
    f6b0:	bl	8890 <PyUnicode_FromUnicode@plt>
    f6b4:	mov	x19, x0
    f6b8:	cbz	x0, f6e4 <PyInit__testcapi@@Base+0x6528>
    f6bc:	ldr	x0, [x19, #40]
    f6c0:	cbnz	x0, f6cc <PyInit__testcapi@@Base+0x6510>
    f6c4:	mov	x0, x19
    f6c8:	bl	8910 <PyUnicode_AsUnicode@plt>
    f6cc:	ldr	x8, [sp, #8]
    f6d0:	ldr	x1, [x29, #24]
    f6d4:	lsl	x2, x8, #2
    f6d8:	bl	8250 <memcpy@plt>
    f6dc:	b	f6e4 <PyInit__testcapi@@Base+0x6528>
    f6e0:	mov	x19, xzr
    f6e4:	mov	x0, x19
    f6e8:	ldr	x19, [sp, #32]
    f6ec:	ldp	x29, x30, [sp, #16]
    f6f0:	add	sp, sp, #0x30
    f6f4:	ret
    f6f8:	stp	x29, x30, [sp, #-64]!
    f6fc:	str	x23, [sp, #16]
    f700:	stp	x22, x21, [sp, #32]
    f704:	stp	x20, x19, [sp, #48]
    f708:	mov	x29, sp
    f70c:	mov	x0, x1
    f710:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f714:	add	x1, x1, #0xc75
    f718:	add	x2, x29, #0x18
    f71c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f720:	cbz	w0, f824 <PyInit__testcapi@@Base+0x6668>
    f724:	ldr	x0, [x29, #24]
    f728:	bl	8c30 <PyCallable_Check@plt>
    f72c:	cbz	w0, f800 <PyInit__testcapi@@Base+0x6644>
    f730:	bl	8f70 <PyEval_InitThreads@plt>
    f734:	bl	8ad0 <PyThread_allocate_lock@plt>
    f738:	adrp	x22, 2a000 <PyInit__testcapi@@Base+0x20e44>
    f73c:	str	x0, [x22, #3824]
    f740:	cbz	x0, f83c <PyInit__testcapi@@Base+0x6680>
    f744:	mov	w1, #0x1                   	// #1
    f748:	bl	85e0 <PyThread_acquire_lock@plt>
    f74c:	ldr	x1, [x29, #24]
    f750:	adrp	x19, 12000 <PyInit__testcapi@@Base+0x8e44>
    f754:	add	x19, x19, #0x218
    f758:	mov	x0, x19
    f75c:	bl	8460 <PyThread_start_new_thread@plt>
    f760:	ldr	x0, [x29, #24]
    f764:	bl	12234 <PyInit__testcapi@@Base+0x9078>
    f768:	mov	w20, w0
    f76c:	bl	8d50 <PyEval_SaveThread@plt>
    f770:	ldr	x8, [x29, #24]
    f774:	mov	x21, x0
    f778:	mov	x0, x8
    f77c:	bl	12234 <PyInit__testcapi@@Base+0x9078>
    f780:	ldr	x8, [x22, #3824]
    f784:	and	w23, w20, w0
    f788:	mov	w1, #0x1                   	// #1
    f78c:	mov	x0, x8
    f790:	bl	85e0 <PyThread_acquire_lock@plt>
    f794:	mov	x0, x21
    f798:	bl	83b0 <PyEval_RestoreThread@plt>
    f79c:	bl	8d50 <PyEval_SaveThread@plt>
    f7a0:	ldr	x1, [x29, #24]
    f7a4:	mov	x20, x0
    f7a8:	mov	x0, x19
    f7ac:	bl	8460 <PyThread_start_new_thread@plt>
    f7b0:	ldr	x0, [x29, #24]
    f7b4:	bl	12234 <PyInit__testcapi@@Base+0x9078>
    f7b8:	ldr	x8, [x22, #3824]
    f7bc:	and	w19, w23, w0
    f7c0:	mov	w1, #0x1                   	// #1
    f7c4:	mov	x0, x8
    f7c8:	bl	85e0 <PyThread_acquire_lock@plt>
    f7cc:	mov	x0, x20
    f7d0:	bl	83b0 <PyEval_RestoreThread@plt>
    f7d4:	ldr	x0, [x22, #3824]
    f7d8:	bl	8b90 <PyThread_release_lock@plt>
    f7dc:	ldr	x0, [x22, #3824]
    f7e0:	bl	9030 <PyThread_free_lock@plt>
    f7e4:	tbz	w19, #0, f824 <PyInit__testcapi@@Base+0x6668>
    f7e8:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    f7ec:	ldr	x0, [x0, #4016]
    f7f0:	ldr	x8, [x0]
    f7f4:	add	x8, x8, #0x1
    f7f8:	str	x8, [x0]
    f7fc:	b	f828 <PyInit__testcapi@@Base+0x666c>
    f800:	ldr	x8, [x29, #24]
    f804:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
    f808:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    f80c:	add	x1, x1, #0xc89
    f810:	ldr	x8, [x8, #8]
    f814:	ldr	x9, [x9, #3952]
    f818:	ldr	x2, [x8, #24]
    f81c:	ldr	x0, [x9]
    f820:	bl	8e60 <PyErr_Format@plt>
    f824:	mov	x0, xzr
    f828:	ldp	x20, x19, [sp, #48]
    f82c:	ldp	x22, x21, [sp, #32]
    f830:	ldr	x23, [sp, #16]
    f834:	ldp	x29, x30, [sp], #64
    f838:	ret
    f83c:	bl	8570 <PyErr_NoMemory@plt>
    f840:	b	f828 <PyInit__testcapi@@Base+0x666c>
    f844:	sub	sp, sp, #0x30
    f848:	stp	x29, x30, [sp, #16]
    f84c:	stp	x20, x19, [sp, #32]
    f850:	add	x29, sp, #0x10
    f854:	mov	x0, x1
    f858:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
    f85c:	add	x1, x1, #0x136
    f860:	add	x2, sp, #0x8
    f864:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f868:	cbz	w0, f8b0 <PyInit__testcapi@@Base+0x66f4>
    f86c:	ldr	x8, [sp, #8]
    f870:	ldr	x9, [x8]
    f874:	add	x9, x9, #0x1
    f878:	str	x9, [x8]
    f87c:	bl	8d50 <PyEval_SaveThread@plt>
    f880:	ldr	x1, [sp, #8]
    f884:	mov	x19, x0
    f888:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e44>
    f88c:	add	x0, x0, #0x2d8
    f890:	bl	88e0 <Py_AddPendingCall@plt>
    f894:	mov	w20, w0
    f898:	mov	x0, x19
    f89c:	bl	83b0 <PyEval_RestoreThread@plt>
    f8a0:	tbnz	w20, #31, f8b8 <PyInit__testcapi@@Base+0x66fc>
    f8a4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    f8a8:	ldr	x0, [x0, #4032]
    f8ac:	b	f8d8 <PyInit__testcapi@@Base+0x671c>
    f8b0:	mov	x0, xzr
    f8b4:	b	f8e4 <PyInit__testcapi@@Base+0x6728>
    f8b8:	ldr	x0, [sp, #8]
    f8bc:	ldr	x8, [x0]
    f8c0:	subs	x8, x8, #0x1
    f8c4:	str	x8, [x0]
    f8c8:	b.ne	f8d0 <PyInit__testcapi@@Base+0x6714>  // b.any
    f8cc:	bl	8560 <_Py_Dealloc@plt>
    f8d0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    f8d4:	ldr	x0, [x0, #3984]
    f8d8:	ldr	x8, [x0]
    f8dc:	add	x8, x8, #0x1
    f8e0:	str	x8, [x0]
    f8e4:	ldp	x20, x19, [sp, #32]
    f8e8:	ldp	x29, x30, [sp, #16]
    f8ec:	add	sp, sp, #0x30
    f8f0:	ret
    f8f4:	sub	sp, sp, #0x60
    f8f8:	stp	x29, x30, [sp, #32]
    f8fc:	str	x23, [sp, #48]
    f900:	stp	x22, x21, [sp, #64]
    f904:	stp	x20, x19, [sp, #80]
    f908:	add	x29, sp, #0x20
    f90c:	add	x0, sp, #0x10
    f910:	mov	x1, xzr
    f914:	bl	8780 <gettimeofday@plt>
    f918:	mov	w20, wzr
    f91c:	mov	w21, #0x4e20                	// #20000
    f920:	b	f930 <PyInit__testcapi@@Base+0x6774>
    f924:	add	w20, w20, #0x1
    f928:	cmp	w20, w21
    f92c:	b.eq	f964 <PyInit__testcapi@@Base+0x67a8>  // b.none
    f930:	mov	x19, xzr
    f934:	b	f944 <PyInit__testcapi@@Base+0x6788>
    f938:	add	x19, x19, #0x1
    f93c:	cmp	x19, #0x3e8
    f940:	b.eq	f924 <PyInit__testcapi@@Base+0x6768>  // b.none
    f944:	mov	x0, x19
    f948:	bl	8840 <PyLong_FromLong@plt>
    f94c:	ldr	x8, [x0]
    f950:	subs	x8, x8, #0x1
    f954:	str	x8, [x0]
    f958:	b.ne	f938 <PyInit__testcapi@@Base+0x677c>  // b.any
    f95c:	bl	8560 <_Py_Dealloc@plt>
    f960:	b	f938 <PyInit__testcapi@@Base+0x677c>
    f964:	mov	w20, #0x4240                	// #16960
    f968:	mov	x0, sp
    f96c:	mov	x1, xzr
    f970:	movk	w20, #0xf, lsl #16
    f974:	bl	8780 <gettimeofday@plt>
    f978:	ldp	q1, q0, [sp]
    f97c:	sub	v0.2d, v1.2d, v0.2d
    f980:	mov	x3, v0.d[1]
    f984:	fmov	x2, d0
    f988:	str	q0, [sp]
    f98c:	tbz	x3, #63, f99c <PyInit__testcapi@@Base+0x67e0>
    f990:	sub	x2, x2, #0x1
    f994:	add	x3, x3, x20
    f998:	stp	x2, x3, [sp]
    f99c:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    f9a0:	add	x0, x0, #0xca5
    f9a4:	mov	w1, #0x1                   	// #1
    f9a8:	bl	8f30 <printf@plt>
    f9ac:	add	x0, sp, #0x10
    f9b0:	mov	x1, xzr
    f9b4:	bl	8780 <gettimeofday@plt>
    f9b8:	mov	w19, wzr
    f9bc:	mov	w21, #0x4e20                	// #20000
    f9c0:	b	f9d0 <PyInit__testcapi@@Base+0x6814>
    f9c4:	add	w19, w19, #0x1
    f9c8:	cmp	w19, w21
    f9cc:	b.eq	fa04 <PyInit__testcapi@@Base+0x6848>  // b.none
    f9d0:	mov	x22, xzr
    f9d4:	b	f9e4 <PyInit__testcapi@@Base+0x6828>
    f9d8:	add	x22, x22, #0x1
    f9dc:	cmp	x22, #0x3e8
    f9e0:	b.eq	f9c4 <PyInit__testcapi@@Base+0x6808>  // b.none
    f9e4:	add	x0, x22, x20
    f9e8:	bl	8840 <PyLong_FromLong@plt>
    f9ec:	ldr	x8, [x0]
    f9f0:	subs	x8, x8, #0x1
    f9f4:	str	x8, [x0]
    f9f8:	b.ne	f9d8 <PyInit__testcapi@@Base+0x681c>  // b.any
    f9fc:	bl	8560 <_Py_Dealloc@plt>
    fa00:	b	f9d8 <PyInit__testcapi@@Base+0x681c>
    fa04:	mov	x0, sp
    fa08:	mov	x1, xzr
    fa0c:	bl	8780 <gettimeofday@plt>
    fa10:	ldp	q1, q0, [sp]
    fa14:	sub	v0.2d, v1.2d, v0.2d
    fa18:	mov	x3, v0.d[1]
    fa1c:	fmov	x2, d0
    fa20:	str	q0, [sp]
    fa24:	tbz	x3, #63, fa34 <PyInit__testcapi@@Base+0x6878>
    fa28:	sub	x2, x2, #0x1
    fa2c:	add	x3, x3, x20
    fa30:	stp	x2, x3, [sp]
    fa34:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    fa38:	add	x0, x0, #0xca5
    fa3c:	mov	w1, #0x2                   	// #2
    fa40:	bl	8f30 <printf@plt>
    fa44:	mov	w0, #0x1f40                	// #8000
    fa48:	bl	8660 <malloc@plt>
    fa4c:	cbz	x0, fc5c <PyInit__testcapi@@Base+0x6aa0>
    fa50:	mov	x19, x0
    fa54:	add	x0, sp, #0x10
    fa58:	mov	x1, xzr
    fa5c:	bl	8780 <gettimeofday@plt>
    fa60:	mov	w21, wzr
    fa64:	mov	w22, #0x4e20                	// #20000
    fa68:	b	fa78 <PyInit__testcapi@@Base+0x68bc>
    fa6c:	add	w21, w21, #0x1
    fa70:	cmp	w21, w22
    fa74:	b.eq	fac4 <PyInit__testcapi@@Base+0x6908>  // b.none
    fa78:	mov	x23, xzr
    fa7c:	add	x0, x23, x20
    fa80:	bl	8840 <PyLong_FromLong@plt>
    fa84:	str	x0, [x19, x23, lsl #3]
    fa88:	add	x23, x23, #0x1
    fa8c:	cmp	x23, #0x3e8
    fa90:	b.ne	fa7c <PyInit__testcapi@@Base+0x68c0>  // b.any
    fa94:	mov	x23, xzr
    fa98:	b	faa8 <PyInit__testcapi@@Base+0x68ec>
    fa9c:	add	x23, x23, #0x1
    faa0:	cmp	x23, #0x3e8
    faa4:	b.eq	fa6c <PyInit__testcapi@@Base+0x68b0>  // b.none
    faa8:	ldr	x0, [x19, x23, lsl #3]
    faac:	ldr	x8, [x0]
    fab0:	subs	x8, x8, #0x1
    fab4:	str	x8, [x0]
    fab8:	b.ne	fa9c <PyInit__testcapi@@Base+0x68e0>  // b.any
    fabc:	bl	8560 <_Py_Dealloc@plt>
    fac0:	b	fa9c <PyInit__testcapi@@Base+0x68e0>
    fac4:	mov	x0, sp
    fac8:	mov	x1, xzr
    facc:	bl	8780 <gettimeofday@plt>
    fad0:	ldp	q1, q0, [sp]
    fad4:	sub	v0.2d, v1.2d, v0.2d
    fad8:	mov	x3, v0.d[1]
    fadc:	fmov	x2, d0
    fae0:	str	q0, [sp]
    fae4:	tbz	x3, #63, faf4 <PyInit__testcapi@@Base+0x6938>
    fae8:	sub	x2, x2, #0x1
    faec:	add	x3, x3, x20
    faf0:	stp	x2, x3, [sp]
    faf4:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    faf8:	mov	w21, #0x1200                	// #4608
    fafc:	add	x0, x0, #0xca5
    fb00:	mov	w1, #0x3                   	// #3
    fb04:	movk	w21, #0x7a, lsl #16
    fb08:	bl	8f30 <printf@plt>
    fb0c:	mov	x0, x19
    fb10:	bl	8aa0 <free@plt>
    fb14:	mov	w0, #0x1200                	// #4608
    fb18:	movk	w0, #0x7a, lsl #16
    fb1c:	bl	8660 <malloc@plt>
    fb20:	cbz	x0, fc5c <PyInit__testcapi@@Base+0x6aa0>
    fb24:	mov	x19, x0
    fb28:	add	x0, sp, #0x10
    fb2c:	mov	x1, xzr
    fb30:	bl	8780 <gettimeofday@plt>
    fb34:	mov	w22, wzr
    fb38:	b	fb48 <PyInit__testcapi@@Base+0x698c>
    fb3c:	add	w22, w22, #0x1
    fb40:	cmp	w22, #0x14
    fb44:	b.eq	fb94 <PyInit__testcapi@@Base+0x69d8>  // b.none
    fb48:	mov	x23, xzr
    fb4c:	add	x0, x23, x20
    fb50:	bl	8840 <PyLong_FromLong@plt>
    fb54:	str	x0, [x19, x23, lsl #3]
    fb58:	add	x23, x23, #0x1
    fb5c:	cmp	x20, x23
    fb60:	b.ne	fb4c <PyInit__testcapi@@Base+0x6990>  // b.any
    fb64:	mov	x23, xzr
    fb68:	b	fb78 <PyInit__testcapi@@Base+0x69bc>
    fb6c:	add	x23, x23, #0x8
    fb70:	cmp	x21, x23
    fb74:	b.eq	fb3c <PyInit__testcapi@@Base+0x6980>  // b.none
    fb78:	ldr	x0, [x19, x23]
    fb7c:	ldr	x8, [x0]
    fb80:	subs	x8, x8, #0x1
    fb84:	str	x8, [x0]
    fb88:	b.ne	fb6c <PyInit__testcapi@@Base+0x69b0>  // b.any
    fb8c:	bl	8560 <_Py_Dealloc@plt>
    fb90:	b	fb6c <PyInit__testcapi@@Base+0x69b0>
    fb94:	mov	x0, sp
    fb98:	mov	x1, xzr
    fb9c:	bl	8780 <gettimeofday@plt>
    fba0:	ldp	q1, q0, [sp]
    fba4:	sub	v0.2d, v1.2d, v0.2d
    fba8:	mov	x3, v0.d[1]
    fbac:	fmov	x2, d0
    fbb0:	str	q0, [sp]
    fbb4:	tbz	x3, #63, fbc4 <PyInit__testcapi@@Base+0x6a08>
    fbb8:	sub	x2, x2, #0x1
    fbbc:	add	x3, x3, x20
    fbc0:	stp	x2, x3, [sp]
    fbc4:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    fbc8:	add	x0, x0, #0xca5
    fbcc:	mov	w1, #0x4                   	// #4
    fbd0:	bl	8f30 <printf@plt>
    fbd4:	mov	x0, x19
    fbd8:	bl	8aa0 <free@plt>
    fbdc:	mov	w0, #0x1200                	// #4608
    fbe0:	movk	w0, #0x7a, lsl #16
    fbe4:	bl	8660 <malloc@plt>
    fbe8:	cbz	x0, fc5c <PyInit__testcapi@@Base+0x6aa0>
    fbec:	mov	x19, x0
    fbf0:	add	x0, sp, #0x10
    fbf4:	mov	x1, xzr
    fbf8:	bl	8780 <gettimeofday@plt>
    fbfc:	mov	w22, wzr
    fc00:	b	fc10 <PyInit__testcapi@@Base+0x6a54>
    fc04:	add	w22, w22, #0x1
    fc08:	cmp	w22, #0xa
    fc0c:	b.eq	fc78 <PyInit__testcapi@@Base+0x6abc>  // b.none
    fc10:	mov	x23, xzr
    fc14:	add	x0, x23, #0x3e8
    fc18:	bl	8840 <PyLong_FromLong@plt>
    fc1c:	str	x0, [x19, x23, lsl #3]
    fc20:	add	x23, x23, #0x1
    fc24:	cmp	x20, x23
    fc28:	b.ne	fc14 <PyInit__testcapi@@Base+0x6a58>  // b.any
    fc2c:	mov	x23, xzr
    fc30:	b	fc40 <PyInit__testcapi@@Base+0x6a84>
    fc34:	add	x23, x23, #0x8
    fc38:	cmp	x21, x23
    fc3c:	b.eq	fc04 <PyInit__testcapi@@Base+0x6a48>  // b.none
    fc40:	ldr	x0, [x19, x23]
    fc44:	ldr	x8, [x0]
    fc48:	subs	x8, x8, #0x1
    fc4c:	str	x8, [x0]
    fc50:	b.ne	fc34 <PyInit__testcapi@@Base+0x6a78>  // b.any
    fc54:	bl	8560 <_Py_Dealloc@plt>
    fc58:	b	fc34 <PyInit__testcapi@@Base+0x6a78>
    fc5c:	bl	8570 <PyErr_NoMemory@plt>
    fc60:	ldp	x20, x19, [sp, #80]
    fc64:	ldp	x22, x21, [sp, #64]
    fc68:	ldr	x23, [sp, #48]
    fc6c:	ldp	x29, x30, [sp, #32]
    fc70:	add	sp, sp, #0x60
    fc74:	ret
    fc78:	mov	x0, sp
    fc7c:	mov	x1, xzr
    fc80:	bl	8780 <gettimeofday@plt>
    fc84:	ldp	q1, q0, [sp]
    fc88:	sub	v0.2d, v1.2d, v0.2d
    fc8c:	mov	x3, v0.d[1]
    fc90:	fmov	x2, d0
    fc94:	str	q0, [sp]
    fc98:	tbz	x3, #63, fca8 <PyInit__testcapi@@Base+0x6aec>
    fc9c:	sub	x2, x2, #0x1
    fca0:	add	x3, x3, x20
    fca4:	stp	x2, x3, [sp]
    fca8:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    fcac:	mov	w21, #0x9680                	// #38528
    fcb0:	add	x0, x0, #0xca5
    fcb4:	mov	w1, #0x5                   	// #5
    fcb8:	movk	w21, #0x98, lsl #16
    fcbc:	bl	8f30 <printf@plt>
    fcc0:	mov	x0, x19
    fcc4:	bl	8aa0 <free@plt>
    fcc8:	mov	w0, #0x1                   	// #1
    fccc:	bl	8840 <PyLong_FromLong@plt>
    fcd0:	mov	x19, x0
    fcd4:	add	x0, sp, #0x10
    fcd8:	mov	x1, xzr
    fcdc:	bl	8780 <gettimeofday@plt>
    fce0:	mov	w22, #0x9680                	// #38528
    fce4:	movk	w22, #0x98, lsl #16
    fce8:	b	fcf4 <PyInit__testcapi@@Base+0x6b38>
    fcec:	subs	w22, w22, #0x1
    fcf0:	b.eq	fd18 <PyInit__testcapi@@Base+0x6b5c>  // b.none
    fcf4:	mov	x0, x19
    fcf8:	mov	x1, x19
    fcfc:	bl	8490 <PyNumber_Add@plt>
    fd00:	ldr	x8, [x0]
    fd04:	subs	x8, x8, #0x1
    fd08:	str	x8, [x0]
    fd0c:	b.ne	fcec <PyInit__testcapi@@Base+0x6b30>  // b.any
    fd10:	bl	8560 <_Py_Dealloc@plt>
    fd14:	b	fcec <PyInit__testcapi@@Base+0x6b30>
    fd18:	mov	x0, sp
    fd1c:	mov	x1, xzr
    fd20:	bl	8780 <gettimeofday@plt>
    fd24:	ldr	x8, [x19]
    fd28:	subs	x8, x8, #0x1
    fd2c:	str	x8, [x19]
    fd30:	b.ne	fd3c <PyInit__testcapi@@Base+0x6b80>  // b.any
    fd34:	mov	x0, x19
    fd38:	bl	8560 <_Py_Dealloc@plt>
    fd3c:	ldp	q1, q0, [sp]
    fd40:	sub	v0.2d, v1.2d, v0.2d
    fd44:	mov	x3, v0.d[1]
    fd48:	fmov	x2, d0
    fd4c:	str	q0, [sp]
    fd50:	tbz	x3, #63, fd60 <PyInit__testcapi@@Base+0x6ba4>
    fd54:	sub	x2, x2, #0x1
    fd58:	add	x3, x3, x20
    fd5c:	stp	x2, x3, [sp]
    fd60:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    fd64:	add	x0, x0, #0xca5
    fd68:	mov	w1, #0x6                   	// #6
    fd6c:	bl	8f30 <printf@plt>
    fd70:	mov	w0, #0x3e8                 	// #1000
    fd74:	bl	8840 <PyLong_FromLong@plt>
    fd78:	cbz	x0, fc60 <PyInit__testcapi@@Base+0x6aa4>
    fd7c:	mov	x19, x0
    fd80:	add	x0, sp, #0x10
    fd84:	mov	x1, xzr
    fd88:	bl	8780 <gettimeofday@plt>
    fd8c:	b	fd98 <PyInit__testcapi@@Base+0x6bdc>
    fd90:	subs	w21, w21, #0x1
    fd94:	b.eq	fdc0 <PyInit__testcapi@@Base+0x6c04>  // b.none
    fd98:	mov	x0, x19
    fd9c:	mov	x1, x19
    fda0:	bl	8490 <PyNumber_Add@plt>
    fda4:	cbz	x0, fd90 <PyInit__testcapi@@Base+0x6bd4>
    fda8:	ldr	x8, [x0]
    fdac:	subs	x8, x8, #0x1
    fdb0:	str	x8, [x0]
    fdb4:	b.ne	fd90 <PyInit__testcapi@@Base+0x6bd4>  // b.any
    fdb8:	bl	8560 <_Py_Dealloc@plt>
    fdbc:	b	fd90 <PyInit__testcapi@@Base+0x6bd4>
    fdc0:	mov	x0, sp
    fdc4:	mov	x1, xzr
    fdc8:	bl	8780 <gettimeofday@plt>
    fdcc:	ldr	x8, [x19]
    fdd0:	subs	x8, x8, #0x1
    fdd4:	str	x8, [x19]
    fdd8:	b.ne	fde4 <PyInit__testcapi@@Base+0x6c28>  // b.any
    fddc:	mov	x0, x19
    fde0:	bl	8560 <_Py_Dealloc@plt>
    fde4:	ldp	q1, q0, [sp]
    fde8:	sub	v0.2d, v1.2d, v0.2d
    fdec:	mov	x3, v0.d[1]
    fdf0:	fmov	x2, d0
    fdf4:	str	q0, [sp]
    fdf8:	tbz	x3, #63, fe08 <PyInit__testcapi@@Base+0x6c4c>
    fdfc:	sub	x2, x2, #0x1
    fe00:	add	x3, x3, x20
    fe04:	stp	x2, x3, [sp]
    fe08:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
    fe0c:	add	x0, x0, #0xca5
    fe10:	mov	w1, #0x7                   	// #7
    fe14:	bl	8f30 <printf@plt>
    fe18:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    fe1c:	ldr	x0, [x0, #4016]
    fe20:	ldr	x8, [x0]
    fe24:	add	x8, x8, #0x1
    fe28:	str	x8, [x0]
    fe2c:	b	fc60 <PyInit__testcapi@@Base+0x6aa4>
    fe30:	sub	sp, sp, #0x20
    fe34:	stp	x29, x30, [sp, #16]
    fe38:	add	x29, sp, #0x10
    fe3c:	mov	x0, x1
    fe40:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    fe44:	add	x1, x1, #0xcb8
    fe48:	mov	x2, sp
    fe4c:	add	x3, sp, #0x8
    fe50:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fe54:	cbz	w0, fe7c <PyInit__testcapi@@Base+0x6cc0>
    fe58:	ldp	x0, x1, [sp]
    fe5c:	bl	8ee0 <PyTraceBack_Print@plt>
    fe60:	tbnz	w0, #31, fe7c <PyInit__testcapi@@Base+0x6cc0>
    fe64:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    fe68:	ldr	x0, [x0, #4016]
    fe6c:	ldr	x8, [x0]
    fe70:	add	x8, x8, #0x1
    fe74:	str	x8, [x0]
    fe78:	b	fe80 <PyInit__testcapi@@Base+0x6cc4>
    fe7c:	mov	x0, xzr
    fe80:	ldp	x29, x30, [sp, #16]
    fe84:	add	sp, sp, #0x20
    fe88:	ret
    fe8c:	stp	x29, x30, [sp, #-32]!
    fe90:	str	x19, [sp, #16]
    fe94:	mov	x29, sp
    fe98:	mov	x0, x1
    fe9c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    fea0:	add	x1, x1, #0xccb
    fea4:	add	x2, x29, #0x18
    fea8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    feac:	cbz	w0, fed8 <PyInit__testcapi@@Base+0x6d1c>
    feb0:	ldr	x0, [x29, #24]
    feb4:	ldr	x8, [x0, #8]
    feb8:	ldrb	w8, [x8, #171]
    febc:	tbnz	w8, #6, fee0 <PyInit__testcapi@@Base+0x6d24>
    fec0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
    fec4:	ldr	x8, [x8, #3952]
    fec8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    fecc:	add	x1, x1, #0xcdd
    fed0:	ldr	x0, [x8]
    fed4:	bl	8e60 <PyErr_Format@plt>
    fed8:	mov	x0, xzr
    fedc:	b	ff2c <PyInit__testcapi@@Base+0x6d70>
    fee0:	bl	86b0 <PyException_GetTraceback@plt>
    fee4:	ldr	x1, [x29, #24]
    fee8:	mov	x19, x0
    feec:	mov	x2, x19
    fef0:	ldr	x8, [x1, #8]
    fef4:	mov	x0, x8
    fef8:	bl	8e30 <PyErr_Display@plt>
    fefc:	cbz	x19, ff18 <PyInit__testcapi@@Base+0x6d5c>
    ff00:	ldr	x8, [x19]
    ff04:	subs	x8, x8, #0x1
    ff08:	str	x8, [x19]
    ff0c:	b.ne	ff18 <PyInit__testcapi@@Base+0x6d5c>  // b.any
    ff10:	mov	x0, x19
    ff14:	bl	8560 <_Py_Dealloc@plt>
    ff18:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ff1c:	ldr	x0, [x0, #4016]
    ff20:	ldr	x8, [x0]
    ff24:	add	x8, x8, #0x1
    ff28:	str	x8, [x0]
    ff2c:	ldr	x19, [sp, #16]
    ff30:	ldp	x29, x30, [sp], #32
    ff34:	ret
    ff38:	sub	sp, sp, #0x50
    ff3c:	stp	x29, x30, [sp, #48]
    ff40:	str	x19, [sp, #64]
    ff44:	add	x29, sp, #0x30
    ff48:	mov	x0, x1
    ff4c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
    ff50:	add	x1, x1, #0xcff
    ff54:	add	x2, x29, #0x18
    ff58:	sub	x3, x29, #0x8
    ff5c:	sub	x4, x29, #0x10
    ff60:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ff64:	cbz	w0, 1003c <PyInit__testcapi@@Base+0x6e80>
    ff68:	add	x0, sp, #0x18
    ff6c:	add	x1, sp, #0x10
    ff70:	add	x2, sp, #0x8
    ff74:	bl	82f0 <PyErr_GetExcInfo@plt>
    ff78:	ldr	x0, [x29, #24]
    ff7c:	ldr	x8, [x0]
    ff80:	add	x8, x8, #0x1
    ff84:	str	x8, [x0]
    ff88:	ldur	x1, [x29, #-8]
    ff8c:	ldr	x8, [x1]
    ff90:	add	x8, x8, #0x1
    ff94:	str	x8, [x1]
    ff98:	ldur	x2, [x29, #-16]
    ff9c:	ldr	x8, [x2]
    ffa0:	add	x8, x8, #0x1
    ffa4:	str	x8, [x2]
    ffa8:	bl	8fa0 <PyErr_SetExcInfo@plt>
    ffac:	ldp	x10, x8, [sp, #16]
    ffb0:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
    ffb4:	ldr	x9, [x9, #4016]
    ffb8:	ldr	x11, [sp, #8]
    ffbc:	cmp	x8, #0x0
    ffc0:	mov	w0, #0x3                   	// #3
    ffc4:	csel	x1, x9, x8, eq  // eq = none
    ffc8:	cmp	x10, #0x0
    ffcc:	csel	x2, x9, x10, eq  // eq = none
    ffd0:	cmp	x11, #0x0
    ffd4:	csel	x3, x9, x11, eq  // eq = none
    ffd8:	bl	9040 <PyTuple_Pack@plt>
    ffdc:	ldr	x8, [sp, #24]
    ffe0:	mov	x19, x0
    ffe4:	cbz	x8, 10000 <PyInit__testcapi@@Base+0x6e44>
    ffe8:	ldr	x9, [x8]
    ffec:	subs	x9, x9, #0x1
    fff0:	str	x9, [x8]
    fff4:	b.ne	10000 <PyInit__testcapi@@Base+0x6e44>  // b.any
    fff8:	mov	x0, x8
    fffc:	bl	8560 <_Py_Dealloc@plt>
   10000:	ldr	x0, [sp, #16]
   10004:	cbz	x0, 1001c <PyInit__testcapi@@Base+0x6e60>
   10008:	ldr	x8, [x0]
   1000c:	subs	x8, x8, #0x1
   10010:	str	x8, [x0]
   10014:	b.ne	1001c <PyInit__testcapi@@Base+0x6e60>  // b.any
   10018:	bl	8560 <_Py_Dealloc@plt>
   1001c:	ldr	x0, [sp, #8]
   10020:	cbz	x0, 10040 <PyInit__testcapi@@Base+0x6e84>
   10024:	ldr	x8, [x0]
   10028:	subs	x8, x8, #0x1
   1002c:	str	x8, [x0]
   10030:	b.ne	10040 <PyInit__testcapi@@Base+0x6e84>  // b.any
   10034:	bl	8560 <_Py_Dealloc@plt>
   10038:	b	10040 <PyInit__testcapi@@Base+0x6e84>
   1003c:	mov	x19, xzr
   10040:	mov	x0, x19
   10044:	ldr	x19, [sp, #64]
   10048:	ldp	x29, x30, [sp, #48]
   1004c:	add	sp, sp, #0x50
   10050:	ret
   10054:	stp	x29, x30, [sp, #-32]!
   10058:	stp	x20, x19, [sp, #16]
   1005c:	mov	x29, sp
   10060:	adrp	x5, 2a000 <PyInit__testcapi@@Base+0x20e44>
   10064:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
   10068:	add	x5, x5, #0xef8
   1006c:	add	x3, x3, #0xf00
   10070:	str	xzr, [x5]
   10074:	str	xzr, [x3]
   10078:	adrp	x2, 26000 <PyInit__testcapi@@Base+0x1ce44>
   1007c:	ldr	x2, [x2, #3920]
   10080:	mov	x0, x1
   10084:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10088:	adrp	x4, 12000 <PyInit__testcapi@@Base+0x8e44>
   1008c:	add	x1, x1, #0xd15
   10090:	add	x4, x4, #0x390
   10094:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10098:	cbz	w0, 100b4 <PyInit__testcapi@@Base+0x6ef8>
   1009c:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
   100a0:	ldr	x19, [x19, #4016]
   100a4:	ldr	x8, [x19]
   100a8:	add	x8, x8, #0x1
   100ac:	str	x8, [x19]
   100b0:	b	100f0 <PyInit__testcapi@@Base+0x6f34>
   100b4:	adrp	x20, 2a000 <PyInit__testcapi@@Base+0x20e44>
   100b8:	ldr	x8, [x20, #3832]
   100bc:	cbz	x8, 100ec <PyInit__testcapi@@Base+0x6f30>
   100c0:	ldr	x0, [x8]
   100c4:	bl	87f0 <PyLong_FromSsize_t@plt>
   100c8:	mov	x19, x0
   100cc:	ldr	x0, [x20, #3832]
   100d0:	ldr	x8, [x0]
   100d4:	subs	x8, x8, #0x1
   100d8:	str	x8, [x0]
   100dc:	b.ne	100e4 <PyInit__testcapi@@Base+0x6f28>  // b.any
   100e0:	bl	8560 <_Py_Dealloc@plt>
   100e4:	bl	88c0 <PyErr_Clear@plt>
   100e8:	b	100f0 <PyInit__testcapi@@Base+0x6f34>
   100ec:	mov	x19, xzr
   100f0:	mov	x0, x19
   100f4:	ldp	x20, x19, [sp, #16]
   100f8:	ldp	x29, x30, [sp], #32
   100fc:	ret
   10100:	sub	sp, sp, #0x30
   10104:	stp	x29, x30, [sp, #32]
   10108:	add	x29, sp, #0x20
   1010c:	mov	x0, x1
   10110:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10114:	add	x1, x1, #0xd1a
   10118:	sub	x2, x29, #0x8
   1011c:	add	x3, sp, #0x10
   10120:	add	x4, sp, #0xc
   10124:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10128:	cbz	w0, 10140 <PyInit__testcapi@@Base+0x6f84>
   1012c:	ldur	x0, [x29, #-8]
   10130:	ldr	x1, [sp, #16]
   10134:	ldr	w2, [sp, #12]
   10138:	bl	9060 <PyCode_NewEmpty@plt>
   1013c:	b	10144 <PyInit__testcapi@@Base+0x6f88>
   10140:	mov	x0, xzr
   10144:	ldp	x29, x30, [sp, #32]
   10148:	add	sp, sp, #0x30
   1014c:	ret
   10150:	sub	sp, sp, #0x30
   10154:	stp	x29, x30, [sp, #32]
   10158:	add	x29, sp, #0x20
   1015c:	mov	x8, x2
   10160:	adrp	x2, 15000 <PyInit__testcapi@@Base+0xbe44>
   10164:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
   10168:	mov	x0, x1
   1016c:	add	x2, x2, #0xd31
   10170:	add	x3, x3, #0x5b0
   10174:	sub	x4, x29, #0x8
   10178:	add	x5, sp, #0x10
   1017c:	add	x6, sp, #0x8
   10180:	mov	x7, sp
   10184:	mov	x1, x8
   10188:	stp	xzr, xzr, [sp, #8]
   1018c:	str	xzr, [sp]
   10190:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
   10194:	cbz	w0, 101ac <PyInit__testcapi@@Base+0x6ff0>
   10198:	ldur	x0, [x29, #-8]
   1019c:	ldp	x2, x1, [sp, #8]
   101a0:	ldr	x3, [sp]
   101a4:	bl	85d0 <PyErr_NewExceptionWithDoc@plt>
   101a8:	b	101b0 <PyInit__testcapi@@Base+0x6ff4>
   101ac:	mov	x0, xzr
   101b0:	ldp	x29, x30, [sp, #32]
   101b4:	add	sp, sp, #0x30
   101b8:	ret
   101bc:	sub	sp, sp, #0x60
   101c0:	stp	x29, x30, [sp, #80]
   101c4:	add	x29, sp, #0x50
   101c8:	mov	x0, sp
   101cc:	mov	w3, #0x1                   	// #1
   101d0:	mov	w4, #0x1                   	// #1
   101d4:	mov	w5, #0x11c                 	// #284
   101d8:	mov	x1, xzr
   101dc:	mov	x2, xzr
   101e0:	bl	8870 <PyBuffer_FillInfo@plt>
   101e4:	tbnz	w0, #31, 101f4 <PyInit__testcapi@@Base+0x7038>
   101e8:	mov	x0, sp
   101ec:	bl	9050 <PyMemoryView_FromBuffer@plt>
   101f0:	b	101f8 <PyInit__testcapi@@Base+0x703c>
   101f4:	mov	x0, xzr
   101f8:	ldp	x29, x30, [sp, #80]
   101fc:	add	sp, sp, #0x60
   10200:	ret
   10204:	stp	x29, x30, [sp, #-32]!
   10208:	str	x19, [sp, #16]
   1020c:	mov	x29, sp
   10210:	bl	8d50 <PyEval_SaveThread@plt>
   10214:	mov	x19, x0
   10218:	bl	8940 <PyThreadState_Get@plt>
   1021c:	mov	x0, x19
   10220:	bl	83b0 <PyEval_RestoreThread@plt>
   10224:	ldr	x19, [sp, #16]
   10228:	mov	x0, xzr
   1022c:	ldp	x29, x30, [sp], #32
   10230:	ret
   10234:	stp	x29, x30, [sp, #-48]!
   10238:	str	x21, [sp, #16]
   1023c:	stp	x20, x19, [sp, #32]
   10240:	mov	x29, sp
   10244:	mov	x0, x1
   10248:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1024c:	add	x1, x1, #0xd4f
   10250:	add	x2, x29, #0x18
   10254:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10258:	cbz	w0, 102c4 <PyInit__testcapi@@Base+0x7108>
   1025c:	bl	8940 <PyThreadState_Get@plt>
   10260:	mov	x19, x0
   10264:	mov	x0, xzr
   10268:	bl	8fd0 <PyThreadState_Swap@plt>
   1026c:	bl	8790 <Py_NewInterpreter@plt>
   10270:	cbz	x0, 102a4 <PyInit__testcapi@@Base+0x70e8>
   10274:	mov	x20, x0
   10278:	ldr	x0, [x29, #24]
   1027c:	mov	x1, xzr
   10280:	bl	8ed0 <PyRun_SimpleStringFlags@plt>
   10284:	mov	w21, w0
   10288:	mov	x0, x20
   1028c:	bl	8540 <Py_EndInterpreter@plt>
   10290:	mov	x0, x19
   10294:	bl	8fd0 <PyThreadState_Swap@plt>
   10298:	sxtw	x0, w21
   1029c:	bl	8840 <PyLong_FromLong@plt>
   102a0:	b	102c8 <PyInit__testcapi@@Base+0x710c>
   102a4:	mov	x0, x19
   102a8:	bl	8fd0 <PyThreadState_Swap@plt>
   102ac:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   102b0:	ldr	x8, [x8, #3928]
   102b4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   102b8:	add	x1, x1, #0xd62
   102bc:	ldr	x0, [x8]
   102c0:	bl	8670 <PyErr_SetString@plt>
   102c4:	mov	x0, xzr
   102c8:	ldp	x20, x19, [sp, #32]
   102cc:	ldr	x21, [sp, #16]
   102d0:	ldp	x29, x30, [sp], #48
   102d4:	ret
   102d8:	sub	sp, sp, #0x30
   102dc:	stp	x29, x30, [sp, #32]
   102e0:	add	x29, sp, #0x20
   102e4:	mov	x0, x1
   102e8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   102ec:	add	x1, x1, #0xd82
   102f0:	sub	x2, x29, #0x8
   102f4:	add	x3, sp, #0xc
   102f8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   102fc:	cbz	w0, 10348 <PyInit__testcapi@@Base+0x718c>
   10300:	ldr	w2, [sp, #12]
   10304:	cmp	w2, #0x4
   10308:	b.cc	10328 <PyInit__testcapi@@Base+0x716c>  // b.lo, b.ul, b.last
   1030c:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10310:	ldr	x8, [x8, #3944]
   10314:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10318:	add	x1, x1, #0xd9d
   1031c:	ldr	x0, [x8]
   10320:	bl	8670 <PyErr_SetString@plt>
   10324:	b	10348 <PyInit__testcapi@@Base+0x718c>
   10328:	ldur	x0, [x29, #-8]
   1032c:	add	x1, sp, #0x10
   10330:	bl	8bc0 <_PyTime_ObjectToTime_t@plt>
   10334:	cmn	w0, #0x1
   10338:	b.eq	10348 <PyInit__testcapi@@Base+0x718c>  // b.none
   1033c:	ldr	x0, [sp, #16]
   10340:	bl	9000 <_PyLong_FromTime_t@plt>
   10344:	b	1034c <PyInit__testcapi@@Base+0x7190>
   10348:	mov	x0, xzr
   1034c:	ldp	x29, x30, [sp, #32]
   10350:	add	sp, sp, #0x30
   10354:	ret
   10358:	sub	sp, sp, #0x30
   1035c:	stp	x29, x30, [sp, #32]
   10360:	add	x29, sp, #0x20
   10364:	mov	x0, x1
   10368:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1036c:	add	x1, x1, #0xdae
   10370:	sub	x2, x29, #0x8
   10374:	add	x3, sp, #0x4
   10378:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1037c:	cbz	w0, 103e0 <PyInit__testcapi@@Base+0x7224>
   10380:	ldr	w3, [sp, #4]
   10384:	cmp	w3, #0x4
   10388:	b.cc	103a8 <PyInit__testcapi@@Base+0x71ec>  // b.lo, b.ul, b.last
   1038c:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10390:	ldr	x8, [x8, #3944]
   10394:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10398:	add	x1, x1, #0xd9d
   1039c:	ldr	x0, [x8]
   103a0:	bl	8670 <PyErr_SetString@plt>
   103a4:	b	103e0 <PyInit__testcapi@@Base+0x7224>
   103a8:	ldur	x0, [x29, #-8]
   103ac:	add	x1, sp, #0x10
   103b0:	add	x2, sp, #0x8
   103b4:	bl	8420 <_PyTime_ObjectToTimeval@plt>
   103b8:	cmn	w0, #0x1
   103bc:	b.eq	103e0 <PyInit__testcapi@@Base+0x7224>  // b.none
   103c0:	ldr	x0, [sp, #16]
   103c4:	bl	9000 <_PyLong_FromTime_t@plt>
   103c8:	ldr	x2, [sp, #8]
   103cc:	mov	x1, x0
   103d0:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   103d4:	add	x0, x0, #0xdca
   103d8:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   103dc:	b	103e4 <PyInit__testcapi@@Base+0x7228>
   103e0:	mov	x0, xzr
   103e4:	ldp	x29, x30, [sp, #32]
   103e8:	add	sp, sp, #0x30
   103ec:	ret
   103f0:	sub	sp, sp, #0x30
   103f4:	stp	x29, x30, [sp, #32]
   103f8:	add	x29, sp, #0x20
   103fc:	mov	x0, x1
   10400:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10404:	add	x1, x1, #0xdcd
   10408:	sub	x2, x29, #0x8
   1040c:	add	x3, sp, #0x4
   10410:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10414:	cbz	w0, 10478 <PyInit__testcapi@@Base+0x72bc>
   10418:	ldr	w3, [sp, #4]
   1041c:	cmp	w3, #0x4
   10420:	b.cc	10440 <PyInit__testcapi@@Base+0x7284>  // b.lo, b.ul, b.last
   10424:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10428:	ldr	x8, [x8, #3944]
   1042c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10430:	add	x1, x1, #0xd9d
   10434:	ldr	x0, [x8]
   10438:	bl	8670 <PyErr_SetString@plt>
   1043c:	b	10478 <PyInit__testcapi@@Base+0x72bc>
   10440:	ldur	x0, [x29, #-8]
   10444:	add	x1, sp, #0x10
   10448:	add	x2, sp, #0x8
   1044c:	bl	8b10 <_PyTime_ObjectToTimespec@plt>
   10450:	cmn	w0, #0x1
   10454:	b.eq	10478 <PyInit__testcapi@@Base+0x72bc>  // b.none
   10458:	ldr	x0, [sp, #16]
   1045c:	bl	9000 <_PyLong_FromTime_t@plt>
   10460:	ldr	x2, [sp, #8]
   10464:	mov	x1, x0
   10468:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   1046c:	add	x0, x0, #0xdca
   10470:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   10474:	b	1047c <PyInit__testcapi@@Base+0x72c0>
   10478:	mov	x0, xzr
   1047c:	ldp	x29, x30, [sp, #32]
   10480:	add	sp, sp, #0x30
   10484:	ret
   10488:	sub	sp, sp, #0x20
   1048c:	stp	x29, x30, [sp, #16]
   10490:	add	x29, sp, #0x10
   10494:	mov	x0, x1
   10498:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1049c:	add	x1, x1, #0xdea
   104a0:	add	x2, sp, #0x8
   104a4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   104a8:	cbz	w0, 104dc <PyInit__testcapi@@Base+0x7320>
   104ac:	ldr	x2, [sp, #8]
   104b0:	ldr	x8, [x2, #8]
   104b4:	ldr	w8, [x8, #168]
   104b8:	tbz	w8, #31, 104c4 <PyInit__testcapi@@Base+0x7308>
   104bc:	ldrb	w8, [x2, #169]
   104c0:	tbnz	w8, #1, 104f0 <PyInit__testcapi@@Base+0x7334>
   104c4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   104c8:	ldr	x8, [x8, #3952]
   104cc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   104d0:	add	x1, x1, #0xdf8
   104d4:	ldr	x0, [x8]
   104d8:	bl	8e60 <PyErr_Format@plt>
   104dc:	mov	x2, xzr
   104e0:	ldp	x29, x30, [sp, #16]
   104e4:	mov	x0, x2
   104e8:	add	sp, sp, #0x20
   104ec:	ret
   104f0:	ldr	x8, [x2]
   104f4:	adrp	x9, 12000 <PyInit__testcapi@@Base+0x8e44>
   104f8:	add	x9, x9, #0x3b4
   104fc:	str	x9, [x2, #376]
   10500:	add	x8, x8, #0x1
   10504:	str	x8, [x2]
   10508:	b	104e0 <PyInit__testcapi@@Base+0x7324>
   1050c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   10510:	add	x8, x8, #0x5f0
   10514:	mov	x1, x0
   10518:	mov	x0, x8
   1051c:	mov	x2, xzr
   10520:	b	8430 <PyCFunction_NewEx@plt>
   10524:	stp	x29, x30, [sp, #-16]!
   10528:	mov	x29, sp
   1052c:	mov	x0, xzr
   10530:	bl	84d0 <PyMem_RawMalloc@plt>
   10534:	cbz	x0, 105b4 <PyInit__testcapi@@Base+0x73f8>
   10538:	bl	8a10 <PyMem_RawFree@plt>
   1053c:	mov	x0, xzr
   10540:	mov	x1, xzr
   10544:	bl	8d30 <PyMem_RawCalloc@plt>
   10548:	cbz	x0, 105c8 <PyInit__testcapi@@Base+0x740c>
   1054c:	bl	8a10 <PyMem_RawFree@plt>
   10550:	mov	x0, xzr
   10554:	bl	8fc0 <PyMem_Malloc@plt>
   10558:	cbz	x0, 105dc <PyInit__testcapi@@Base+0x7420>
   1055c:	bl	83d0 <PyMem_Free@plt>
   10560:	mov	x0, xzr
   10564:	mov	x1, xzr
   10568:	bl	8f20 <PyMem_Calloc@plt>
   1056c:	cbz	x0, 105f0 <PyInit__testcapi@@Base+0x7434>
   10570:	bl	83d0 <PyMem_Free@plt>
   10574:	mov	x0, xzr
   10578:	bl	86c0 <PyObject_Malloc@plt>
   1057c:	cbz	x0, 10604 <PyInit__testcapi@@Base+0x7448>
   10580:	bl	87c0 <PyObject_Free@plt>
   10584:	mov	x0, xzr
   10588:	mov	x1, xzr
   1058c:	bl	90a0 <PyObject_Calloc@plt>
   10590:	cbz	x0, 10618 <PyInit__testcapi@@Base+0x745c>
   10594:	bl	87c0 <PyObject_Free@plt>
   10598:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   1059c:	ldr	x0, [x0, #4016]
   105a0:	ldr	x8, [x0]
   105a4:	add	x8, x8, #0x1
   105a8:	str	x8, [x0]
   105ac:	ldp	x29, x30, [sp], #16
   105b0:	ret
   105b4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   105b8:	ldr	x8, [x8, #3928]
   105bc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   105c0:	add	x1, x1, #0xe1e
   105c4:	b	10628 <PyInit__testcapi@@Base+0x746c>
   105c8:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   105cc:	ldr	x8, [x8, #3928]
   105d0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   105d4:	add	x1, x1, #0xe3e
   105d8:	b	10628 <PyInit__testcapi@@Base+0x746c>
   105dc:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   105e0:	ldr	x8, [x8, #3928]
   105e4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   105e8:	add	x1, x1, #0xe61
   105ec:	b	10628 <PyInit__testcapi@@Base+0x746c>
   105f0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   105f4:	ldr	x8, [x8, #3928]
   105f8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   105fc:	add	x1, x1, #0xe7e
   10600:	b	10628 <PyInit__testcapi@@Base+0x746c>
   10604:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10608:	ldr	x8, [x8, #3928]
   1060c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10610:	add	x1, x1, #0xe9e
   10614:	b	10628 <PyInit__testcapi@@Base+0x746c>
   10618:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   1061c:	ldr	x8, [x8, #3928]
   10620:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10624:	add	x1, x1, #0xebe
   10628:	ldr	x0, [x8]
   1062c:	bl	8670 <PyErr_SetString@plt>
   10630:	mov	x0, xzr
   10634:	ldp	x29, x30, [sp], #16
   10638:	ret
   1063c:	mov	w0, wzr
   10640:	b	124d0 <PyInit__testcapi@@Base+0x9314>
   10644:	mov	w0, #0x1                   	// #1
   10648:	b	124d0 <PyInit__testcapi@@Base+0x9314>
   1064c:	mov	w0, #0x2                   	// #2
   10650:	b	124d0 <PyInit__testcapi@@Base+0x9314>
   10654:	sub	sp, sp, #0x60
   10658:	stp	x29, x30, [sp, #48]
   1065c:	str	x21, [sp, #64]
   10660:	stp	x20, x19, [sp, #80]
   10664:	add	x29, sp, #0x30
   10668:	adrp	x2, 2a000 <PyInit__testcapi@@Base+0x20e44>
   1066c:	add	x2, x2, #0xf08
   10670:	mov	x0, x1
   10674:	mov	x3, x2
   10678:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1067c:	str	xzr, [x2, #8]
   10680:	str	wzr, [x3, #4]!
   10684:	add	x1, x1, #0xfd0
   10688:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1068c:	cbz	w0, 1074c <PyInit__testcapi@@Base+0x7590>
   10690:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   10694:	ldr	w8, [x8, #3864]
   10698:	cbnz	w8, 10734 <PyInit__testcapi@@Base+0x7578>
   1069c:	adrp	x21, 2a000 <PyInit__testcapi@@Base+0x20e44>
   106a0:	add	x21, x21, #0xf18
   106a4:	mov	w8, #0x1                   	// #1
   106a8:	mov	x19, x21
   106ac:	adrp	x9, 12000 <PyInit__testcapi@@Base+0x8e44>
   106b0:	adrp	x10, 12000 <PyInit__testcapi@@Base+0x8e44>
   106b4:	adrp	x11, 12000 <PyInit__testcapi@@Base+0x8e44>
   106b8:	adrp	x12, 12000 <PyInit__testcapi@@Base+0x8e44>
   106bc:	str	w8, [x19], #8
   106c0:	add	x9, x9, #0x87c
   106c4:	add	x10, x10, #0x8c4
   106c8:	add	x11, x11, #0x910
   106cc:	add	x12, x12, #0x95c
   106d0:	mov	w0, wzr
   106d4:	mov	x1, x19
   106d8:	stp	x9, x10, [sp, #16]
   106dc:	stp	x11, x12, [sp, #32]
   106e0:	bl	8b70 <PyMem_GetAllocator@plt>
   106e4:	add	x20, x21, #0x30
   106e8:	mov	w0, #0x1                   	// #1
   106ec:	mov	x1, x20
   106f0:	bl	8b70 <PyMem_GetAllocator@plt>
   106f4:	add	x21, x21, #0x58
   106f8:	mov	w0, #0x2                   	// #2
   106fc:	mov	x1, x21
   10700:	bl	8b70 <PyMem_GetAllocator@plt>
   10704:	add	x1, sp, #0x8
   10708:	mov	w0, wzr
   1070c:	str	x19, [sp, #8]
   10710:	bl	8700 <PyMem_SetAllocator@plt>
   10714:	add	x1, sp, #0x8
   10718:	mov	w0, #0x1                   	// #1
   1071c:	str	x20, [sp, #8]
   10720:	bl	8700 <PyMem_SetAllocator@plt>
   10724:	add	x1, sp, #0x8
   10728:	mov	w0, #0x2                   	// #2
   1072c:	str	x21, [sp, #8]
   10730:	bl	8700 <PyMem_SetAllocator@plt>
   10734:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10738:	ldr	x0, [x0, #4016]
   1073c:	ldr	x8, [x0]
   10740:	add	x8, x8, #0x1
   10744:	str	x8, [x0]
   10748:	b	10750 <PyInit__testcapi@@Base+0x7594>
   1074c:	mov	x0, xzr
   10750:	ldp	x20, x19, [sp, #80]
   10754:	ldr	x21, [sp, #64]
   10758:	ldp	x29, x30, [sp, #48]
   1075c:	add	sp, sp, #0x60
   10760:	ret
   10764:	stp	x29, x30, [sp, #-32]!
   10768:	str	x19, [sp, #16]
   1076c:	mov	x29, sp
   10770:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   10774:	ldr	w8, [x8, #3864]
   10778:	cbz	w8, 107ac <PyInit__testcapi@@Base+0x75f0>
   1077c:	adrp	x19, 2a000 <PyInit__testcapi@@Base+0x20e44>
   10780:	add	x19, x19, #0xf18
   10784:	mov	x1, x19
   10788:	str	wzr, [x1], #8
   1078c:	mov	w0, wzr
   10790:	bl	8700 <PyMem_SetAllocator@plt>
   10794:	add	x1, x19, #0x30
   10798:	mov	w0, #0x1                   	// #1
   1079c:	bl	8700 <PyMem_SetAllocator@plt>
   107a0:	add	x1, x19, #0x58
   107a4:	mov	w0, #0x2                   	// #2
   107a8:	bl	8700 <PyMem_SetAllocator@plt>
   107ac:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   107b0:	ldr	x0, [x0, #4016]
   107b4:	ldr	x19, [sp, #16]
   107b8:	ldr	x8, [x0]
   107bc:	add	x8, x8, #0x1
   107c0:	str	x8, [x0]
   107c4:	ldp	x29, x30, [sp], #32
   107c8:	ret
   107cc:	sub	sp, sp, #0x50
   107d0:	stp	x29, x30, [sp, #32]
   107d4:	str	x21, [sp, #48]
   107d8:	stp	x20, x19, [sp, #64]
   107dc:	add	x29, sp, #0x20
   107e0:	mov	x19, x1
   107e4:	bl	8f70 <PyEval_InitThreads@plt>
   107e8:	bl	8ad0 <PyThread_allocate_lock@plt>
   107ec:	mov	x20, x0
   107f0:	str	x0, [sp, #8]
   107f4:	bl	8ad0 <PyThread_allocate_lock@plt>
   107f8:	stp	x0, xzr, [sp, #16]
   107fc:	cbz	x0, 108a4 <PyInit__testcapi@@Base+0x76e8>
   10800:	cbz	x20, 108a4 <PyInit__testcapi@@Base+0x76e8>
   10804:	ldr	x8, [x19]
   10808:	mov	x21, x0
   1080c:	mov	w1, #0x1                   	// #1
   10810:	mov	x0, x20
   10814:	add	x8, x8, #0x1
   10818:	str	x8, [x19]
   1081c:	str	x19, [sp, #24]
   10820:	bl	85e0 <PyThread_acquire_lock@plt>
   10824:	mov	w1, #0x1                   	// #1
   10828:	mov	x0, x21
   1082c:	bl	85e0 <PyThread_acquire_lock@plt>
   10830:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e44>
   10834:	add	x0, x0, #0x968
   10838:	add	x1, sp, #0x8
   1083c:	bl	8460 <PyThread_start_new_thread@plt>
   10840:	cmn	x0, #0x1
   10844:	b.eq	108c0 <PyInit__testcapi@@Base+0x7704>  // b.none
   10848:	ldr	x0, [sp, #8]
   1084c:	mov	w1, #0x1                   	// #1
   10850:	bl	85e0 <PyThread_acquire_lock@plt>
   10854:	ldr	x0, [sp, #8]
   10858:	bl	8b90 <PyThread_release_lock@plt>
   1085c:	bl	8d50 <PyEval_SaveThread@plt>
   10860:	ldr	x8, [sp, #16]
   10864:	mov	x19, x0
   10868:	mov	w1, #0x1                   	// #1
   1086c:	mov	x0, x8
   10870:	bl	85e0 <PyThread_acquire_lock@plt>
   10874:	ldr	x0, [sp, #16]
   10878:	bl	8b90 <PyThread_release_lock@plt>
   1087c:	mov	x0, x19
   10880:	bl	83b0 <PyEval_RestoreThread@plt>
   10884:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10888:	ldr	x19, [x19, #4016]
   1088c:	ldr	x8, [x19]
   10890:	add	x8, x8, #0x1
   10894:	str	x8, [x19]
   10898:	ldr	x0, [sp, #24]
   1089c:	cbnz	x0, 108f4 <PyInit__testcapi@@Base+0x7738>
   108a0:	b	1090c <PyInit__testcapi@@Base+0x7750>
   108a4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   108a8:	ldr	x8, [x8, #3928]
   108ac:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   108b0:	add	x1, x1, #0xfd4
   108b4:	ldr	x0, [x8]
   108b8:	bl	8670 <PyErr_SetString@plt>
   108bc:	b	108e8 <PyInit__testcapi@@Base+0x772c>
   108c0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   108c4:	ldr	x8, [x8, #3928]
   108c8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   108cc:	add	x1, x1, #0xfec
   108d0:	ldr	x0, [x8]
   108d4:	bl	8670 <PyErr_SetString@plt>
   108d8:	ldr	x0, [sp, #8]
   108dc:	bl	8b90 <PyThread_release_lock@plt>
   108e0:	ldr	x0, [sp, #16]
   108e4:	bl	8b90 <PyThread_release_lock@plt>
   108e8:	mov	x19, xzr
   108ec:	ldr	x0, [sp, #24]
   108f0:	cbz	x0, 1090c <PyInit__testcapi@@Base+0x7750>
   108f4:	str	xzr, [sp, #24]
   108f8:	ldr	x8, [x0]
   108fc:	subs	x8, x8, #0x1
   10900:	str	x8, [x0]
   10904:	b.ne	1090c <PyInit__testcapi@@Base+0x7750>  // b.any
   10908:	bl	8560 <_Py_Dealloc@plt>
   1090c:	ldr	x0, [sp, #8]
   10910:	cbz	x0, 10918 <PyInit__testcapi@@Base+0x775c>
   10914:	bl	9030 <PyThread_free_lock@plt>
   10918:	ldr	x0, [sp, #16]
   1091c:	cbz	x0, 10924 <PyInit__testcapi@@Base+0x7768>
   10920:	bl	9030 <PyThread_free_lock@plt>
   10924:	mov	x0, x19
   10928:	ldp	x20, x19, [sp, #64]
   1092c:	ldr	x21, [sp, #48]
   10930:	ldp	x29, x30, [sp, #32]
   10934:	add	sp, sp, #0x50
   10938:	ret
   1093c:	sub	sp, sp, #0x30
   10940:	stp	x29, x30, [sp, #16]
   10944:	str	x19, [sp, #32]
   10948:	add	x29, sp, #0x10
   1094c:	mov	x0, x1
   10950:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10954:	add	x1, x1, #0x7
   10958:	add	x2, x29, #0x18
   1095c:	add	x3, sp, #0x8
   10960:	add	x4, sp, #0x4
   10964:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10968:	cbz	w0, 109a4 <PyInit__testcapi@@Base+0x77e8>
   1096c:	ldr	x0, [sp, #8]
   10970:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10974:	add	x1, x1, #0x28
   10978:	bl	8cd0 <fopen64@plt>
   1097c:	cbz	x0, 109ac <PyInit__testcapi@@Base+0x77f0>
   10980:	mov	x19, x0
   10984:	ldr	x0, [x29, #24]
   10988:	ldr	w2, [sp, #4]
   1098c:	mov	x1, x19
   10990:	bl	85c0 <PyMarshal_WriteLongToFile@plt>
   10994:	mov	x0, x19
   10998:	bl	8640 <fclose@plt>
   1099c:	bl	8980 <PyErr_Occurred@plt>
   109a0:	cbz	x0, 109c4 <PyInit__testcapi@@Base+0x7808>
   109a4:	mov	x0, xzr
   109a8:	b	109d8 <PyInit__testcapi@@Base+0x781c>
   109ac:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   109b0:	ldr	x8, [x8, #3976]
   109b4:	ldr	x0, [x8]
   109b8:	bl	8410 <PyErr_SetFromErrno@plt>
   109bc:	mov	x0, xzr
   109c0:	b	109d8 <PyInit__testcapi@@Base+0x781c>
   109c4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   109c8:	ldr	x0, [x0, #4016]
   109cc:	ldr	x8, [x0]
   109d0:	add	x8, x8, #0x1
   109d4:	str	x8, [x0]
   109d8:	ldr	x19, [sp, #32]
   109dc:	ldp	x29, x30, [sp, #16]
   109e0:	add	sp, sp, #0x30
   109e4:	ret
   109e8:	sub	sp, sp, #0x30
   109ec:	stp	x29, x30, [sp, #16]
   109f0:	str	x19, [sp, #32]
   109f4:	add	x29, sp, #0x10
   109f8:	mov	x0, x1
   109fc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10a00:	add	x1, x1, #0x2b
   10a04:	add	x2, x29, #0x18
   10a08:	add	x3, sp, #0x8
   10a0c:	add	x4, sp, #0x4
   10a10:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10a14:	cbz	w0, 10a50 <PyInit__testcapi@@Base+0x7894>
   10a18:	ldr	x0, [sp, #8]
   10a1c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10a20:	add	x1, x1, #0x28
   10a24:	bl	8cd0 <fopen64@plt>
   10a28:	cbz	x0, 10a58 <PyInit__testcapi@@Base+0x789c>
   10a2c:	mov	x19, x0
   10a30:	ldr	x0, [x29, #24]
   10a34:	ldr	w2, [sp, #4]
   10a38:	mov	x1, x19
   10a3c:	bl	8ac0 <PyMarshal_WriteObjectToFile@plt>
   10a40:	mov	x0, x19
   10a44:	bl	8640 <fclose@plt>
   10a48:	bl	8980 <PyErr_Occurred@plt>
   10a4c:	cbz	x0, 10a70 <PyInit__testcapi@@Base+0x78b4>
   10a50:	mov	x0, xzr
   10a54:	b	10a84 <PyInit__testcapi@@Base+0x78c8>
   10a58:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10a5c:	ldr	x8, [x8, #3976]
   10a60:	ldr	x0, [x8]
   10a64:	bl	8410 <PyErr_SetFromErrno@plt>
   10a68:	mov	x0, xzr
   10a6c:	b	10a84 <PyInit__testcapi@@Base+0x78c8>
   10a70:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10a74:	ldr	x0, [x0, #4016]
   10a78:	ldr	x8, [x0]
   10a7c:	add	x8, x8, #0x1
   10a80:	str	x8, [x0]
   10a84:	ldr	x19, [sp, #32]
   10a88:	ldp	x29, x30, [sp, #16]
   10a8c:	add	sp, sp, #0x30
   10a90:	ret
   10a94:	stp	x29, x30, [sp, #-48]!
   10a98:	str	x21, [sp, #16]
   10a9c:	stp	x20, x19, [sp, #32]
   10aa0:	mov	x29, sp
   10aa4:	mov	x0, x1
   10aa8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10aac:	add	x1, x1, #0x4e
   10ab0:	add	x2, x29, #0x18
   10ab4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10ab8:	cbz	w0, 10af8 <PyInit__testcapi@@Base+0x793c>
   10abc:	ldr	x0, [x29, #24]
   10ac0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10ac4:	add	x1, x1, #0x6f
   10ac8:	bl	8cd0 <fopen64@plt>
   10acc:	cbz	x0, 10b00 <PyInit__testcapi@@Base+0x7944>
   10ad0:	mov	x21, x0
   10ad4:	bl	8f60 <PyMarshal_ReadShortFromFile@plt>
   10ad8:	mov	w19, w0
   10adc:	mov	x0, x21
   10ae0:	bl	84b0 <ftell@plt>
   10ae4:	mov	x20, x0
   10ae8:	mov	x0, x21
   10aec:	bl	8640 <fclose@plt>
   10af0:	bl	8980 <PyErr_Occurred@plt>
   10af4:	cbz	x0, 10b18 <PyInit__testcapi@@Base+0x795c>
   10af8:	mov	x0, xzr
   10afc:	b	10b2c <PyInit__testcapi@@Base+0x7970>
   10b00:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10b04:	ldr	x8, [x8, #3976]
   10b08:	ldr	x0, [x8]
   10b0c:	bl	8410 <PyErr_SetFromErrno@plt>
   10b10:	mov	x0, xzr
   10b14:	b	10b2c <PyInit__testcapi@@Base+0x7970>
   10b18:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   10b1c:	add	x0, x0, #0xc1e
   10b20:	mov	w1, w19
   10b24:	mov	x2, x20
   10b28:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   10b2c:	ldp	x20, x19, [sp, #32]
   10b30:	ldr	x21, [sp, #16]
   10b34:	ldp	x29, x30, [sp], #48
   10b38:	ret
   10b3c:	stp	x29, x30, [sp, #-48]!
   10b40:	str	x21, [sp, #16]
   10b44:	stp	x20, x19, [sp, #32]
   10b48:	mov	x29, sp
   10b4c:	mov	x0, x1
   10b50:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10b54:	add	x1, x1, #0x72
   10b58:	add	x2, x29, #0x18
   10b5c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10b60:	cbz	w0, 10ba0 <PyInit__testcapi@@Base+0x79e4>
   10b64:	ldr	x0, [x29, #24]
   10b68:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10b6c:	add	x1, x1, #0x6f
   10b70:	bl	8cd0 <fopen64@plt>
   10b74:	cbz	x0, 10ba8 <PyInit__testcapi@@Base+0x79ec>
   10b78:	mov	x21, x0
   10b7c:	bl	82b0 <PyMarshal_ReadLongFromFile@plt>
   10b80:	mov	x19, x0
   10b84:	mov	x0, x21
   10b88:	bl	84b0 <ftell@plt>
   10b8c:	mov	x20, x0
   10b90:	mov	x0, x21
   10b94:	bl	8640 <fclose@plt>
   10b98:	bl	8980 <PyErr_Occurred@plt>
   10b9c:	cbz	x0, 10bc0 <PyInit__testcapi@@Base+0x7a04>
   10ba0:	mov	x0, xzr
   10ba4:	b	10bd4 <PyInit__testcapi@@Base+0x7a18>
   10ba8:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10bac:	ldr	x8, [x8, #3976]
   10bb0:	ldr	x0, [x8]
   10bb4:	bl	8410 <PyErr_SetFromErrno@plt>
   10bb8:	mov	x0, xzr
   10bbc:	b	10bd4 <PyInit__testcapi@@Base+0x7a18>
   10bc0:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae44>
   10bc4:	add	x0, x0, #0x5ef
   10bc8:	mov	x1, x19
   10bcc:	mov	x2, x20
   10bd0:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   10bd4:	ldp	x20, x19, [sp, #32]
   10bd8:	ldr	x21, [sp, #16]
   10bdc:	ldp	x29, x30, [sp], #48
   10be0:	ret
   10be4:	stp	x29, x30, [sp, #-48]!
   10be8:	str	x21, [sp, #16]
   10bec:	stp	x20, x19, [sp, #32]
   10bf0:	mov	x29, sp
   10bf4:	mov	x0, x1
   10bf8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10bfc:	add	x1, x1, #0x92
   10c00:	add	x2, x29, #0x18
   10c04:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10c08:	cbz	w0, 10c68 <PyInit__testcapi@@Base+0x7aac>
   10c0c:	ldr	x0, [x29, #24]
   10c10:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10c14:	add	x1, x1, #0x6f
   10c18:	bl	8cd0 <fopen64@plt>
   10c1c:	cbz	x0, 10c58 <PyInit__testcapi@@Base+0x7a9c>
   10c20:	mov	x19, x0
   10c24:	bl	8280 <PyMarshal_ReadLastObjectFromFile@plt>
   10c28:	mov	x20, x0
   10c2c:	mov	x0, x19
   10c30:	bl	84b0 <ftell@plt>
   10c34:	mov	x21, x0
   10c38:	mov	x0, x19
   10c3c:	bl	8640 <fclose@plt>
   10c40:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   10c44:	add	x0, x0, #0xdca
   10c48:	mov	x1, x20
   10c4c:	mov	x2, x21
   10c50:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   10c54:	b	10c6c <PyInit__testcapi@@Base+0x7ab0>
   10c58:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10c5c:	ldr	x8, [x8, #3976]
   10c60:	ldr	x0, [x8]
   10c64:	bl	8410 <PyErr_SetFromErrno@plt>
   10c68:	mov	x0, xzr
   10c6c:	ldp	x20, x19, [sp, #32]
   10c70:	ldr	x21, [sp, #16]
   10c74:	ldp	x29, x30, [sp], #48
   10c78:	ret
   10c7c:	stp	x29, x30, [sp, #-48]!
   10c80:	str	x21, [sp, #16]
   10c84:	stp	x20, x19, [sp, #32]
   10c88:	mov	x29, sp
   10c8c:	mov	x0, x1
   10c90:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10c94:	add	x1, x1, #0xb9
   10c98:	add	x2, x29, #0x18
   10c9c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10ca0:	cbz	w0, 10d00 <PyInit__testcapi@@Base+0x7b44>
   10ca4:	ldr	x0, [x29, #24]
   10ca8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10cac:	add	x1, x1, #0x6f
   10cb0:	bl	8cd0 <fopen64@plt>
   10cb4:	cbz	x0, 10cf0 <PyInit__testcapi@@Base+0x7b34>
   10cb8:	mov	x19, x0
   10cbc:	bl	8d40 <PyMarshal_ReadObjectFromFile@plt>
   10cc0:	mov	x20, x0
   10cc4:	mov	x0, x19
   10cc8:	bl	84b0 <ftell@plt>
   10ccc:	mov	x21, x0
   10cd0:	mov	x0, x19
   10cd4:	bl	8640 <fclose@plt>
   10cd8:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   10cdc:	add	x0, x0, #0xdca
   10ce0:	mov	x1, x20
   10ce4:	mov	x2, x21
   10ce8:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   10cec:	b	10d04 <PyInit__testcapi@@Base+0x7b48>
   10cf0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10cf4:	ldr	x8, [x8, #3976]
   10cf8:	ldr	x0, [x8]
   10cfc:	bl	8410 <PyErr_SetFromErrno@plt>
   10d00:	mov	x0, xzr
   10d04:	ldp	x20, x19, [sp, #32]
   10d08:	ldr	x21, [sp, #16]
   10d0c:	ldp	x29, x30, [sp], #48
   10d10:	ret
   10d14:	stp	x29, x30, [sp, #-16]!
   10d18:	mov	x29, sp
   10d1c:	bl	88c0 <PyErr_Clear@plt>
   10d20:	mov	x0, xzr
   10d24:	ldp	x29, x30, [sp], #16
   10d28:	ret
   10d2c:	stp	x29, x30, [sp, #-16]!
   10d30:	mov	x29, sp
   10d34:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10d38:	ldr	x8, [x8, #3944]
   10d3c:	ldr	x0, [x8]
   10d40:	bl	8750 <PyErr_SetNone@plt>
   10d44:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10d48:	ldr	x0, [x0, #4016]
   10d4c:	ldr	x8, [x0]
   10d50:	add	x8, x8, #0x1
   10d54:	str	x8, [x0]
   10d58:	ldp	x29, x30, [sp], #16
   10d5c:	ret
   10d60:	sub	sp, sp, #0x20
   10d64:	stp	x29, x30, [sp, #16]
   10d68:	add	x29, sp, #0x10
   10d6c:	mov	x0, x1
   10d70:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10d74:	add	x1, x1, #0x8bb
   10d78:	sub	x2, x29, #0x4
   10d7c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10d80:	cbz	w0, 10d94 <PyInit__testcapi@@Base+0x7bd8>
   10d84:	ldur	w0, [x29, #-4]
   10d88:	bl	8e00 <_PyTime_FromSeconds@plt>
   10d8c:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
   10d90:	b	10d98 <PyInit__testcapi@@Base+0x7bdc>
   10d94:	mov	x0, xzr
   10d98:	ldp	x29, x30, [sp, #16]
   10d9c:	add	sp, sp, #0x20
   10da0:	ret
   10da4:	sub	sp, sp, #0x30
   10da8:	stp	x29, x30, [sp, #32]
   10dac:	add	x29, sp, #0x20
   10db0:	mov	x0, x1
   10db4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10db8:	add	x1, x1, #0xdb
   10dbc:	sub	x2, x29, #0x8
   10dc0:	sub	x3, x29, #0xc
   10dc4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10dc8:	cbz	w0, 10e14 <PyInit__testcapi@@Base+0x7c58>
   10dcc:	ldur	w2, [x29, #-12]
   10dd0:	cmp	w2, #0x4
   10dd4:	b.cc	10df4 <PyInit__testcapi@@Base+0x7c38>  // b.lo, b.ul, b.last
   10dd8:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10ddc:	ldr	x8, [x8, #3944]
   10de0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10de4:	add	x1, x1, #0xd9d
   10de8:	ldr	x0, [x8]
   10dec:	bl	8670 <PyErr_SetString@plt>
   10df0:	b	10e14 <PyInit__testcapi@@Base+0x7c58>
   10df4:	ldur	x1, [x29, #-8]
   10df8:	add	x0, sp, #0x8
   10dfc:	bl	87b0 <_PyTime_FromSecondsObject@plt>
   10e00:	cmn	w0, #0x1
   10e04:	b.eq	10e14 <PyInit__testcapi@@Base+0x7c58>  // b.none
   10e08:	ldr	x0, [sp, #8]
   10e0c:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
   10e10:	b	10e18 <PyInit__testcapi@@Base+0x7c5c>
   10e14:	mov	x0, xzr
   10e18:	ldp	x29, x30, [sp, #32]
   10e1c:	add	sp, sp, #0x30
   10e20:	ret
   10e24:	sub	sp, sp, #0x20
   10e28:	stp	x29, x30, [sp, #16]
   10e2c:	add	x29, sp, #0x10
   10e30:	mov	x0, x1
   10e34:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10e38:	add	x1, x1, #0x136
   10e3c:	add	x2, sp, #0x8
   10e40:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10e44:	cbz	w0, 10e68 <PyInit__testcapi@@Base+0x7cac>
   10e48:	ldr	x1, [sp, #8]
   10e4c:	mov	x0, sp
   10e50:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   10e54:	tbnz	w0, #31, 10e68 <PyInit__testcapi@@Base+0x7cac>
   10e58:	ldr	x0, [sp]
   10e5c:	bl	8690 <_PyTime_AsSecondsDouble@plt>
   10e60:	bl	8800 <PyFloat_FromDouble@plt>
   10e64:	b	10e6c <PyInit__testcapi@@Base+0x7cb0>
   10e68:	mov	x0, xzr
   10e6c:	ldp	x29, x30, [sp, #16]
   10e70:	add	sp, sp, #0x20
   10e74:	ret
   10e78:	sub	sp, sp, #0x40
   10e7c:	stp	x29, x30, [sp, #48]
   10e80:	add	x29, sp, #0x30
   10e84:	mov	x0, x1
   10e88:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10e8c:	add	x1, x1, #0xdb
   10e90:	sub	x2, x29, #0x8
   10e94:	sub	x3, x29, #0xc
   10e98:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10e9c:	cbz	w0, 10f10 <PyInit__testcapi@@Base+0x7d54>
   10ea0:	ldur	w8, [x29, #-12]
   10ea4:	cmp	w8, #0x4
   10ea8:	b.cc	10ec8 <PyInit__testcapi@@Base+0x7d0c>  // b.lo, b.ul, b.last
   10eac:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10eb0:	ldr	x8, [x8, #3944]
   10eb4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10eb8:	add	x1, x1, #0xd9d
   10ebc:	ldr	x0, [x8]
   10ec0:	bl	8670 <PyErr_SetString@plt>
   10ec4:	b	10f10 <PyInit__testcapi@@Base+0x7d54>
   10ec8:	ldur	x1, [x29, #-8]
   10ecc:	add	x0, sp, #0x18
   10ed0:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   10ed4:	tbnz	w0, #31, 10f10 <PyInit__testcapi@@Base+0x7d54>
   10ed8:	ldr	x0, [sp, #24]
   10edc:	ldur	w2, [x29, #-12]
   10ee0:	add	x1, sp, #0x8
   10ee4:	bl	8dd0 <_PyTime_AsTimeval@plt>
   10ee8:	tbnz	w0, #31, 10f10 <PyInit__testcapi@@Base+0x7d54>
   10eec:	ldr	x0, [sp, #8]
   10ef0:	bl	8ef0 <PyLong_FromLongLong@plt>
   10ef4:	cbz	x0, 10f14 <PyInit__testcapi@@Base+0x7d58>
   10ef8:	ldr	x2, [sp, #16]
   10efc:	mov	x1, x0
   10f00:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   10f04:	add	x0, x0, #0xdca
   10f08:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   10f0c:	b	10f14 <PyInit__testcapi@@Base+0x7d58>
   10f10:	mov	x0, xzr
   10f14:	ldp	x29, x30, [sp, #48]
   10f18:	add	sp, sp, #0x40
   10f1c:	ret
   10f20:	sub	sp, sp, #0x30
   10f24:	stp	x29, x30, [sp, #32]
   10f28:	add	x29, sp, #0x20
   10f2c:	mov	x0, x1
   10f30:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10f34:	add	x1, x1, #0x136
   10f38:	sub	x2, x29, #0x8
   10f3c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10f40:	cbz	w0, 10f88 <PyInit__testcapi@@Base+0x7dcc>
   10f44:	ldur	x1, [x29, #-8]
   10f48:	add	x0, sp, #0x10
   10f4c:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   10f50:	tbnz	w0, #31, 10f88 <PyInit__testcapi@@Base+0x7dcc>
   10f54:	ldr	x0, [sp, #16]
   10f58:	mov	x1, sp
   10f5c:	bl	8a40 <_PyTime_AsTimespec@plt>
   10f60:	cmn	w0, #0x1
   10f64:	b.eq	10f88 <PyInit__testcapi@@Base+0x7dcc>  // b.none
   10f68:	ldr	x0, [sp]
   10f6c:	bl	9000 <_PyLong_FromTime_t@plt>
   10f70:	ldr	x2, [sp, #8]
   10f74:	mov	x1, x0
   10f78:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe44>
   10f7c:	add	x0, x0, #0xdca
   10f80:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   10f84:	b	10f8c <PyInit__testcapi@@Base+0x7dd0>
   10f88:	mov	x0, xzr
   10f8c:	ldp	x29, x30, [sp, #32]
   10f90:	add	sp, sp, #0x30
   10f94:	ret
   10f98:	sub	sp, sp, #0x30
   10f9c:	stp	x29, x30, [sp, #32]
   10fa0:	add	x29, sp, #0x20
   10fa4:	mov	x0, x1
   10fa8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   10fac:	add	x1, x1, #0xdb
   10fb0:	sub	x2, x29, #0x8
   10fb4:	sub	x3, x29, #0xc
   10fb8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10fbc:	cbz	w0, 10ff4 <PyInit__testcapi@@Base+0x7e38>
   10fc0:	ldur	x1, [x29, #-8]
   10fc4:	add	x0, sp, #0x8
   10fc8:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   10fcc:	tbnz	w0, #31, 10ff4 <PyInit__testcapi@@Base+0x7e38>
   10fd0:	ldur	w1, [x29, #-12]
   10fd4:	cmp	w1, #0x4
   10fd8:	b.cc	10ffc <PyInit__testcapi@@Base+0x7e40>  // b.lo, b.ul, b.last
   10fdc:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   10fe0:	ldr	x8, [x8, #3944]
   10fe4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   10fe8:	add	x1, x1, #0xd9d
   10fec:	ldr	x0, [x8]
   10ff0:	bl	8670 <PyErr_SetString@plt>
   10ff4:	mov	x0, xzr
   10ff8:	b	11008 <PyInit__testcapi@@Base+0x7e4c>
   10ffc:	ldr	x0, [sp, #8]
   11000:	bl	87d0 <_PyTime_AsMilliseconds@plt>
   11004:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
   11008:	ldp	x29, x30, [sp, #32]
   1100c:	add	sp, sp, #0x30
   11010:	ret
   11014:	sub	sp, sp, #0x30
   11018:	stp	x29, x30, [sp, #32]
   1101c:	add	x29, sp, #0x20
   11020:	mov	x0, x1
   11024:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11028:	add	x1, x1, #0xdb
   1102c:	sub	x2, x29, #0x8
   11030:	sub	x3, x29, #0xc
   11034:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11038:	cbz	w0, 11070 <PyInit__testcapi@@Base+0x7eb4>
   1103c:	ldur	x1, [x29, #-8]
   11040:	add	x0, sp, #0x8
   11044:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
   11048:	tbnz	w0, #31, 11070 <PyInit__testcapi@@Base+0x7eb4>
   1104c:	ldur	w1, [x29, #-12]
   11050:	cmp	w1, #0x4
   11054:	b.cc	11078 <PyInit__testcapi@@Base+0x7ebc>  // b.lo, b.ul, b.last
   11058:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   1105c:	ldr	x8, [x8, #3944]
   11060:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11064:	add	x1, x1, #0xd9d
   11068:	ldr	x0, [x8]
   1106c:	bl	8670 <PyErr_SetString@plt>
   11070:	mov	x0, xzr
   11074:	b	11084 <PyInit__testcapi@@Base+0x7ec8>
   11078:	ldr	x0, [sp, #8]
   1107c:	bl	8d70 <_PyTime_AsMicroseconds@plt>
   11080:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
   11084:	ldp	x29, x30, [sp, #32]
   11088:	add	sp, sp, #0x30
   1108c:	ret
   11090:	stp	x29, x30, [sp, #-16]!
   11094:	mov	x29, sp
   11098:	bl	8940 <PyThreadState_Get@plt>
   1109c:	ldr	w8, [x0, #32]
   110a0:	sub	w8, w8, #0x1
   110a4:	sxtw	x0, w8
   110a8:	ldp	x29, x30, [sp], #16
   110ac:	b	8840 <PyLong_FromLong@plt>
   110b0:	stp	x29, x30, [sp, #-16]!
   110b4:	mov	x29, sp
   110b8:	mov	w0, #0x10                  	// #16
   110bc:	bl	8fc0 <PyMem_Malloc@plt>
   110c0:	cbz	x0, 110ec <PyInit__testcapi@@Base+0x7f30>
   110c4:	mov	w8, #0x78                  	// #120
   110c8:	strb	w8, [x0, #16]
   110cc:	bl	83d0 <PyMem_Free@plt>
   110d0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   110d4:	ldr	x0, [x0, #4016]
   110d8:	ldr	x8, [x0]
   110dc:	add	x8, x8, #0x1
   110e0:	str	x8, [x0]
   110e4:	ldp	x29, x30, [sp], #16
   110e8:	ret
   110ec:	bl	8570 <PyErr_NoMemory@plt>
   110f0:	mov	x0, xzr
   110f4:	ldp	x29, x30, [sp], #16
   110f8:	ret
   110fc:	stp	x29, x30, [sp, #-16]!
   11100:	mov	x29, sp
   11104:	mov	w0, #0x10                  	// #16
   11108:	bl	8fc0 <PyMem_Malloc@plt>
   1110c:	bl	8a10 <PyMem_RawFree@plt>
   11110:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11114:	ldr	x0, [x0, #4016]
   11118:	ldr	x8, [x0]
   1111c:	add	x8, x8, #0x1
   11120:	str	x8, [x0]
   11124:	ldp	x29, x30, [sp], #16
   11128:	ret
   1112c:	stp	x29, x30, [sp, #-32]!
   11130:	stp	x20, x19, [sp, #16]
   11134:	mov	x29, sp
   11138:	bl	8d50 <PyEval_SaveThread@plt>
   1113c:	mov	x19, x0
   11140:	mov	w0, #0xa                   	// #10
   11144:	bl	8fc0 <PyMem_Malloc@plt>
   11148:	mov	x20, x0
   1114c:	mov	x0, x19
   11150:	bl	83b0 <PyEval_RestoreThread@plt>
   11154:	mov	x0, x20
   11158:	bl	83d0 <PyMem_Free@plt>
   1115c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11160:	ldr	x0, [x0, #4016]
   11164:	ldp	x20, x19, [sp, #16]
   11168:	ldr	x8, [x0]
   1116c:	add	x8, x8, #0x1
   11170:	str	x8, [x0]
   11174:	ldp	x29, x30, [sp], #32
   11178:	ret
   1117c:	stp	x29, x30, [sp, #-16]!
   11180:	mov	x29, sp
   11184:	bl	8de0 <_PyMem_GetCurrentAllocatorName@plt>
   11188:	cbz	x0, 11194 <PyInit__testcapi@@Base+0x7fd8>
   1118c:	ldp	x29, x30, [sp], #16
   11190:	b	8d10 <PyUnicode_FromString@plt>
   11194:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11198:	ldr	x8, [x8, #3928]
   1119c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   111a0:	add	x1, x1, #0xde
   111a4:	ldr	x0, [x8]
   111a8:	bl	8670 <PyErr_SetString@plt>
   111ac:	mov	x0, xzr
   111b0:	ldp	x29, x30, [sp], #16
   111b4:	ret
   111b8:	stp	x29, x30, [sp, #-16]!
   111bc:	mov	x29, sp
   111c0:	mov	x0, xzr
   111c4:	bl	83e0 <_PyObject_IsFreed@plt>
   111c8:	cbz	w0, 111e8 <PyInit__testcapi@@Base+0x802c>
   111cc:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   111d0:	ldr	x0, [x0, #4016]
   111d4:	ldr	x8, [x0]
   111d8:	add	x8, x8, #0x1
   111dc:	str	x8, [x0]
   111e0:	ldp	x29, x30, [sp], #16
   111e4:	ret
   111e8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   111ec:	ldr	x0, [x8, #3520]
   111f0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   111f4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   111f8:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
   111fc:	add	x1, x1, #0xc12
   11200:	add	x2, x2, #0x492
   11204:	add	x3, x3, #0xf9
   11208:	bl	8e60 <PyErr_Format@plt>
   1120c:	mov	x0, xzr
   11210:	ldp	x29, x30, [sp], #16
   11214:	ret
   11218:	stp	x29, x30, [sp, #-16]!
   1121c:	mov	x29, sp
   11220:	mov	w0, #0x10                  	// #16
   11224:	bl	86c0 <PyObject_Malloc@plt>
   11228:	cbz	x0, 11250 <PyInit__testcapi@@Base+0x8094>
   1122c:	mov	w8, #0x1                   	// #1
   11230:	str	x8, [x0]
   11234:	bl	83e0 <_PyObject_IsFreed@plt>
   11238:	cbz	w0, 11258 <PyInit__testcapi@@Base+0x809c>
   1123c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11240:	ldr	x0, [x0, #4016]
   11244:	ldr	x8, [x0]
   11248:	add	x8, x8, #0x1
   1124c:	str	x8, [x0]
   11250:	ldp	x29, x30, [sp], #16
   11254:	ret
   11258:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   1125c:	ldr	x0, [x8, #3520]
   11260:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   11264:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   11268:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
   1126c:	add	x1, x1, #0xc12
   11270:	add	x2, x2, #0x4af
   11274:	add	x3, x3, #0xf9
   11278:	bl	8e60 <PyErr_Format@plt>
   1127c:	mov	x0, xzr
   11280:	ldp	x29, x30, [sp], #16
   11284:	ret
   11288:	stp	x29, x30, [sp, #-16]!
   1128c:	mov	x29, sp
   11290:	mov	w0, #0x8                   	// #8
   11294:	bl	86c0 <PyObject_Malloc@plt>
   11298:	cbz	x0, 112c0 <PyInit__testcapi@@Base+0x8104>
   1129c:	mov	w8, #0x1                   	// #1
   112a0:	str	x8, [x0]
   112a4:	bl	83e0 <_PyObject_IsFreed@plt>
   112a8:	cbz	w0, 112c8 <PyInit__testcapi@@Base+0x810c>
   112ac:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   112b0:	ldr	x0, [x0, #4016]
   112b4:	ldr	x8, [x0]
   112b8:	add	x8, x8, #0x1
   112bc:	str	x8, [x0]
   112c0:	ldp	x29, x30, [sp], #16
   112c4:	ret
   112c8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   112cc:	ldr	x0, [x8, #3520]
   112d0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   112d4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   112d8:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
   112dc:	add	x1, x1, #0xc12
   112e0:	add	x2, x2, #0x4d5
   112e4:	add	x3, x3, #0xf9
   112e8:	bl	8e60 <PyErr_Format@plt>
   112ec:	mov	x0, xzr
   112f0:	ldp	x29, x30, [sp], #16
   112f4:	ret
   112f8:	stp	x29, x30, [sp, #-32]!
   112fc:	str	x19, [sp, #16]
   11300:	mov	x29, sp
   11304:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11308:	ldr	x8, [x8, #4048]
   1130c:	ldr	x9, [x8, #8]
   11310:	ldrb	w10, [x9, #169]
   11314:	tbz	w10, #3, 1135c <PyInit__testcapi@@Base+0x81a0>
   11318:	ldr	x9, [x9, #56]
   1131c:	ldr	x8, [x8, x9]
   11320:	cbz	x8, 1135c <PyInit__testcapi@@Base+0x81a0>
   11324:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11328:	ldr	x19, [x19, #4048]
   1132c:	mov	x1, xzr
   11330:	mov	x2, xzr
   11334:	mov	x3, xzr
   11338:	mov	x0, x19
   1133c:	blr	x8
   11340:	mov	x1, x0
   11344:	mov	x0, x19
   11348:	mov	x2, xzr
   1134c:	bl	8a80 <_Py_CheckFunctionResult@plt>
   11350:	mov	x19, x0
   11354:	cbnz	x0, 1137c <PyInit__testcapi@@Base+0x81c0>
   11358:	b	113dc <PyInit__testcapi@@Base+0x8220>
   1135c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11360:	ldr	x0, [x0, #4048]
   11364:	mov	x1, xzr
   11368:	mov	x2, xzr
   1136c:	mov	x3, xzr
   11370:	bl	8f00 <_PyObject_MakeTpCall@plt>
   11374:	mov	x19, x0
   11378:	cbz	x0, 113dc <PyInit__testcapi@@Base+0x8220>
   1137c:	ldr	x8, [x19, #8]
   11380:	mov	x0, x19
   11384:	ldr	x8, [x8, #48]
   11388:	blr	x8
   1138c:	mov	w8, #0x1                   	// #1
   11390:	mov	x0, x19
   11394:	str	x8, [x19]
   11398:	bl	83e0 <_PyObject_IsFreed@plt>
   1139c:	cbz	w0, 113b8 <PyInit__testcapi@@Base+0x81fc>
   113a0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   113a4:	ldr	x0, [x0, #4016]
   113a8:	ldr	x8, [x0]
   113ac:	add	x8, x8, #0x1
   113b0:	str	x8, [x0]
   113b4:	b	113e0 <PyInit__testcapi@@Base+0x8224>
   113b8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   113bc:	ldr	x0, [x8, #3520]
   113c0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   113c4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   113c8:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
   113cc:	add	x1, x1, #0xc12
   113d0:	add	x2, x2, #0x4fd
   113d4:	add	x3, x3, #0xf9
   113d8:	bl	8e60 <PyErr_Format@plt>
   113dc:	mov	x0, xzr
   113e0:	ldr	x19, [sp, #16]
   113e4:	ldp	x29, x30, [sp], #32
   113e8:	ret
   113ec:	stp	x29, x30, [sp, #-32]!
   113f0:	stp	x20, x19, [sp, #16]
   113f4:	mov	x29, sp
   113f8:	bl	8d50 <PyEval_SaveThread@plt>
   113fc:	mov	x19, x0
   11400:	mov	w0, #0xa                   	// #10
   11404:	bl	86c0 <PyObject_Malloc@plt>
   11408:	mov	x20, x0
   1140c:	mov	x0, x19
   11410:	bl	83b0 <PyEval_RestoreThread@plt>
   11414:	mov	x0, x20
   11418:	bl	87c0 <PyObject_Free@plt>
   1141c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11420:	ldr	x0, [x0, #4016]
   11424:	ldp	x20, x19, [sp, #16]
   11428:	ldr	x8, [x0]
   1142c:	add	x8, x8, #0x1
   11430:	str	x8, [x0]
   11434:	ldp	x29, x30, [sp], #32
   11438:	ret
   1143c:	sub	sp, sp, #0x40
   11440:	stp	x29, x30, [sp, #32]
   11444:	stp	x20, x19, [sp, #48]
   11448:	add	x29, sp, #0x20
   1144c:	mov	x0, x1
   11450:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11454:	add	x1, x1, #0x115
   11458:	sub	x2, x29, #0x4
   1145c:	add	x3, sp, #0x10
   11460:	add	x4, sp, #0x8
   11464:	add	x5, sp, #0x4
   11468:	str	wzr, [sp, #4]
   1146c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11470:	cbz	w0, 11488 <PyInit__testcapi@@Base+0x82cc>
   11474:	ldr	x0, [sp, #16]
   11478:	bl	87e0 <PyLong_AsVoidPtr@plt>
   1147c:	mov	x19, x0
   11480:	bl	8980 <PyErr_Occurred@plt>
   11484:	cbz	x0, 1149c <PyInit__testcapi@@Base+0x82e0>
   11488:	mov	x0, xzr
   1148c:	ldp	x20, x19, [sp, #48]
   11490:	ldp	x29, x30, [sp, #32]
   11494:	add	sp, sp, #0x40
   11498:	ret
   1149c:	ldr	w8, [sp, #4]
   114a0:	cbz	w8, 114e8 <PyInit__testcapi@@Base+0x832c>
   114a4:	bl	8d50 <PyEval_SaveThread@plt>
   114a8:	ldur	w8, [x29, #-4]
   114ac:	ldr	x2, [sp, #8]
   114b0:	mov	x20, x0
   114b4:	mov	x1, x19
   114b8:	mov	w0, w8
   114bc:	bl	8730 <PyTraceMalloc_Track@plt>
   114c0:	mov	w19, w0
   114c4:	mov	x0, x20
   114c8:	bl	83b0 <PyEval_RestoreThread@plt>
   114cc:	tbnz	w19, #31, 11500 <PyInit__testcapi@@Base+0x8344>
   114d0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   114d4:	ldr	x0, [x0, #4016]
   114d8:	ldr	x8, [x0]
   114dc:	add	x8, x8, #0x1
   114e0:	str	x8, [x0]
   114e4:	b	1148c <PyInit__testcapi@@Base+0x82d0>
   114e8:	ldur	w0, [x29, #-4]
   114ec:	ldr	x2, [sp, #8]
   114f0:	mov	x1, x19
   114f4:	bl	8730 <PyTraceMalloc_Track@plt>
   114f8:	mov	w19, w0
   114fc:	tbz	w19, #31, 114d0 <PyInit__testcapi@@Base+0x8314>
   11500:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11504:	ldr	x8, [x8, #3928]
   11508:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   1150c:	add	x1, x1, #0x11b
   11510:	ldr	x0, [x8]
   11514:	bl	8670 <PyErr_SetString@plt>
   11518:	b	11488 <PyInit__testcapi@@Base+0x82cc>
   1151c:	sub	sp, sp, #0x30
   11520:	stp	x29, x30, [sp, #16]
   11524:	str	x19, [sp, #32]
   11528:	add	x29, sp, #0x10
   1152c:	mov	x0, x1
   11530:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11534:	add	x1, x1, #0x135
   11538:	add	x2, x29, #0x1c
   1153c:	add	x3, sp, #0x8
   11540:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11544:	cbz	w0, 1155c <PyInit__testcapi@@Base+0x83a0>
   11548:	ldr	x0, [sp, #8]
   1154c:	bl	87e0 <PyLong_AsVoidPtr@plt>
   11550:	mov	x19, x0
   11554:	bl	8980 <PyErr_Occurred@plt>
   11558:	cbz	x0, 11570 <PyInit__testcapi@@Base+0x83b4>
   1155c:	mov	x0, xzr
   11560:	ldr	x19, [sp, #32]
   11564:	ldp	x29, x30, [sp, #16]
   11568:	add	sp, sp, #0x30
   1156c:	ret
   11570:	ldr	w0, [x29, #28]
   11574:	mov	x1, x19
   11578:	bl	8310 <PyTraceMalloc_Untrack@plt>
   1157c:	tbnz	w0, #31, 11598 <PyInit__testcapi@@Base+0x83dc>
   11580:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11584:	ldr	x0, [x0, #4016]
   11588:	ldr	x8, [x0]
   1158c:	add	x8, x8, #0x1
   11590:	str	x8, [x0]
   11594:	b	11560 <PyInit__testcapi@@Base+0x83a4>
   11598:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   1159c:	ldr	x8, [x8, #3928]
   115a0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   115a4:	add	x1, x1, #0x138
   115a8:	ldr	x0, [x8]
   115ac:	bl	8670 <PyErr_SetString@plt>
   115b0:	b	1155c <PyInit__testcapi@@Base+0x83a0>
   115b4:	sub	sp, sp, #0x30
   115b8:	stp	x29, x30, [sp, #16]
   115bc:	str	x19, [sp, #32]
   115c0:	add	x29, sp, #0x10
   115c4:	mov	x0, x1
   115c8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   115cc:	add	x1, x1, #0x135
   115d0:	add	x2, x29, #0x1c
   115d4:	add	x3, sp, #0x8
   115d8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   115dc:	cbz	w0, 115f4 <PyInit__testcapi@@Base+0x8438>
   115e0:	ldr	x0, [sp, #8]
   115e4:	bl	87e0 <PyLong_AsVoidPtr@plt>
   115e8:	mov	x19, x0
   115ec:	bl	8980 <PyErr_Occurred@plt>
   115f0:	cbz	x0, 115fc <PyInit__testcapi@@Base+0x8440>
   115f4:	mov	x0, xzr
   115f8:	b	11608 <PyInit__testcapi@@Base+0x844c>
   115fc:	ldr	w0, [x29, #28]
   11600:	mov	x1, x19
   11604:	bl	8b20 <_PyTraceMalloc_GetTraceback@plt>
   11608:	ldr	x19, [sp, #32]
   1160c:	ldp	x29, x30, [sp, #16]
   11610:	add	sp, sp, #0x30
   11614:	ret
   11618:	sub	sp, sp, #0x20
   1161c:	stp	x29, x30, [sp, #16]
   11620:	add	x29, sp, #0x10
   11624:	adrp	x2, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11628:	ldr	x2, [x2, #4040]
   1162c:	mov	x0, x1
   11630:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11634:	add	x1, x1, #0x154
   11638:	add	x3, sp, #0x8
   1163c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11640:	cbz	w0, 11654 <PyInit__testcapi@@Base+0x8498>
   11644:	ldr	x8, [sp, #8]
   11648:	ldr	x0, [x8, #24]
   1164c:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
   11650:	b	11658 <PyInit__testcapi@@Base+0x849c>
   11654:	mov	x0, xzr
   11658:	ldp	x29, x30, [sp, #16]
   1165c:	add	sp, sp, #0x20
   11660:	ret
   11664:	sub	sp, sp, #0x20
   11668:	stp	x29, x30, [sp, #16]
   1166c:	add	x29, sp, #0x10
   11670:	adrp	x2, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11674:	ldr	x2, [x2, #3960]
   11678:	mov	x0, x1
   1167c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11680:	add	x1, x1, #0x154
   11684:	add	x3, sp, #0x8
   11688:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   1168c:	cbz	w0, 116ac <PyInit__testcapi@@Base+0x84f0>
   11690:	mov	w0, #0x2                   	// #2
   11694:	bl	8330 <raise@plt>
   11698:	adrp	x1, 26000 <PyInit__testcapi@@Base+0x1ce44>
   1169c:	ldr	x0, [sp, #8]
   116a0:	ldr	x1, [x1, #4016]
   116a4:	bl	8620 <_PyGen_Send@plt>
   116a8:	b	116b0 <PyInit__testcapi@@Base+0x84f4>
   116ac:	mov	x0, xzr
   116b0:	ldp	x29, x30, [sp, #16]
   116b4:	add	sp, sp, #0x20
   116b8:	ret
   116bc:	sub	sp, sp, #0x30
   116c0:	stp	x29, x30, [sp, #16]
   116c4:	str	x19, [sp, #32]
   116c8:	add	x29, sp, #0x10
   116cc:	mov	x0, x1
   116d0:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   116d4:	add	x1, x1, #0x175
   116d8:	add	x2, x29, #0x18
   116dc:	add	x3, sp, #0x8
   116e0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   116e4:	cbz	w0, 11720 <PyInit__testcapi@@Base+0x8564>
   116e8:	adrp	x9, 26000 <PyInit__testcapi@@Base+0x1ce44>
   116ec:	ldr	x8, [sp, #8]
   116f0:	ldr	x9, [x9, #4016]
   116f4:	cmp	x8, x9
   116f8:	b.eq	11728 <PyInit__testcapi@@Base+0x856c>  // b.none
   116fc:	ldr	x9, [x8, #8]
   11700:	ldrb	w9, [x9, #171]
   11704:	tbnz	w9, #2, 11734 <PyInit__testcapi@@Base+0x8578>
   11708:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   1170c:	ldr	x8, [x8, #3952]
   11710:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11714:	add	x1, x1, #0x157
   11718:	ldr	x0, [x8]
   1171c:	bl	8670 <PyErr_SetString@plt>
   11720:	mov	x0, xzr
   11724:	b	11788 <PyInit__testcapi@@Base+0x85cc>
   11728:	mov	x1, xzr
   1172c:	mov	x2, xzr
   11730:	b	1173c <PyInit__testcapi@@Base+0x8580>
   11734:	ldr	x2, [x8, #16]
   11738:	add	x1, x8, #0x18
   1173c:	ldr	x19, [x29, #24]
   11740:	ldr	x8, [x19, #8]
   11744:	ldrb	w9, [x8, #169]
   11748:	tbz	w9, #3, 11778 <PyInit__testcapi@@Base+0x85bc>
   1174c:	ldr	x8, [x8, #56]
   11750:	ldr	x8, [x19, x8]
   11754:	cbz	x8, 11778 <PyInit__testcapi@@Base+0x85bc>
   11758:	mov	x0, x19
   1175c:	mov	x3, xzr
   11760:	blr	x8
   11764:	mov	x1, x0
   11768:	mov	x0, x19
   1176c:	mov	x2, xzr
   11770:	bl	8a80 <_Py_CheckFunctionResult@plt>
   11774:	b	11788 <PyInit__testcapi@@Base+0x85cc>
   11778:	and	x2, x2, #0x7fffffffffffffff
   1177c:	mov	x0, x19
   11780:	mov	x3, xzr
   11784:	bl	8f00 <_PyObject_MakeTpCall@plt>
   11788:	ldr	x19, [sp, #32]
   1178c:	ldp	x29, x30, [sp, #16]
   11790:	add	sp, sp, #0x30
   11794:	ret
   11798:	sub	sp, sp, #0x30
   1179c:	stp	x29, x30, [sp, #32]
   117a0:	add	x29, sp, #0x20
   117a4:	mov	x0, x1
   117a8:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   117ac:	add	x1, x1, #0x174
   117b0:	sub	x2, x29, #0x8
   117b4:	add	x3, sp, #0x10
   117b8:	add	x4, sp, #0x8
   117bc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   117c0:	cbz	w0, 1183c <PyInit__testcapi@@Base+0x8680>
   117c4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   117c8:	ldr	x9, [sp, #16]
   117cc:	ldr	x8, [x8, #4016]
   117d0:	cmp	x9, x8
   117d4:	b.eq	117f8 <PyInit__testcapi@@Base+0x863c>  // b.none
   117d8:	ldr	x10, [x9, #8]
   117dc:	ldrb	w10, [x10, #171]
   117e0:	tbnz	w10, #2, 11804 <PyInit__testcapi@@Base+0x8648>
   117e4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   117e8:	ldr	x8, [x8, #3952]
   117ec:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   117f0:	add	x1, x1, #0x157
   117f4:	b	11834 <PyInit__testcapi@@Base+0x8678>
   117f8:	mov	x1, xzr
   117fc:	mov	x2, xzr
   11800:	b	1180c <PyInit__testcapi@@Base+0x8650>
   11804:	ldr	x2, [x9, #16]
   11808:	add	x1, x9, #0x18
   1180c:	ldr	x3, [sp, #8]
   11810:	cmp	x3, x8
   11814:	b.eq	11844 <PyInit__testcapi@@Base+0x8688>  // b.none
   11818:	ldr	x8, [x3, #8]
   1181c:	ldrb	w8, [x8, #171]
   11820:	tbnz	w8, #5, 1184c <PyInit__testcapi@@Base+0x8690>
   11824:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11828:	ldr	x8, [x8, #3952]
   1182c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11830:	add	x1, x1, #0x178
   11834:	ldr	x0, [x8]
   11838:	bl	8670 <PyErr_SetString@plt>
   1183c:	mov	x0, xzr
   11840:	b	11854 <PyInit__testcapi@@Base+0x8698>
   11844:	mov	x3, xzr
   11848:	str	xzr, [sp, #8]
   1184c:	ldur	x0, [x29, #-8]
   11850:	bl	8680 <_PyObject_FastCallDict@plt>
   11854:	ldp	x29, x30, [sp, #32]
   11858:	add	sp, sp, #0x30
   1185c:	ret
   11860:	sub	sp, sp, #0x30
   11864:	stp	x29, x30, [sp, #16]
   11868:	str	x19, [sp, #32]
   1186c:	add	x29, sp, #0x10
   11870:	mov	x0, x1
   11874:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11878:	add	x1, x1, #0x174
   1187c:	add	x2, x29, #0x18
   11880:	add	x3, sp, #0x8
   11884:	mov	x4, sp
   11888:	str	xzr, [sp]
   1188c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11890:	cbz	w0, 118c8 <PyInit__testcapi@@Base+0x870c>
   11894:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11898:	ldr	x9, [sp, #8]
   1189c:	ldr	x8, [x8, #4016]
   118a0:	cmp	x9, x8
   118a4:	b.eq	118d0 <PyInit__testcapi@@Base+0x8714>  // b.none
   118a8:	ldr	x10, [x9, #8]
   118ac:	ldrb	w10, [x10, #171]
   118b0:	tbnz	w10, #2, 118dc <PyInit__testcapi@@Base+0x8720>
   118b4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   118b8:	ldr	x8, [x8, #3952]
   118bc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   118c0:	add	x1, x1, #0x157
   118c4:	b	11938 <PyInit__testcapi@@Base+0x877c>
   118c8:	mov	x0, xzr
   118cc:	b	1198c <PyInit__testcapi@@Base+0x87d0>
   118d0:	mov	x1, xzr
   118d4:	mov	x2, xzr
   118d8:	b	118e4 <PyInit__testcapi@@Base+0x8728>
   118dc:	ldr	x2, [x9, #16]
   118e0:	add	x1, x9, #0x18
   118e4:	ldr	x3, [sp]
   118e8:	cmp	x3, x8
   118ec:	b.eq	11910 <PyInit__testcapi@@Base+0x8754>  // b.none
   118f0:	ldr	x8, [x3, #8]
   118f4:	ldrb	w8, [x8, #171]
   118f8:	tbnz	w8, #2, 1191c <PyInit__testcapi@@Base+0x8760>
   118fc:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11900:	ldr	x8, [x8, #3952]
   11904:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11908:	add	x1, x1, #0x1b0
   1190c:	b	11938 <PyInit__testcapi@@Base+0x877c>
   11910:	mov	x3, xzr
   11914:	str	xzr, [sp]
   11918:	b	11948 <PyInit__testcapi@@Base+0x878c>
   1191c:	ldr	x8, [x3, #16]
   11920:	subs	x2, x2, x8
   11924:	b.ge	11948 <PyInit__testcapi@@Base+0x878c>  // b.tcont
   11928:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   1192c:	ldr	x8, [x8, #3944]
   11930:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11934:	add	x1, x1, #0x197
   11938:	ldr	x0, [x8]
   1193c:	bl	8670 <PyErr_SetString@plt>
   11940:	mov	x0, xzr
   11944:	b	1198c <PyInit__testcapi@@Base+0x87d0>
   11948:	ldr	x19, [x29, #24]
   1194c:	ldr	x8, [x19, #8]
   11950:	ldrb	w9, [x8, #169]
   11954:	tbz	w9, #3, 11980 <PyInit__testcapi@@Base+0x87c4>
   11958:	ldr	x8, [x8, #56]
   1195c:	ldr	x8, [x19, x8]
   11960:	cbz	x8, 11980 <PyInit__testcapi@@Base+0x87c4>
   11964:	mov	x0, x19
   11968:	blr	x8
   1196c:	mov	x1, x0
   11970:	mov	x0, x19
   11974:	mov	x2, xzr
   11978:	bl	8a80 <_Py_CheckFunctionResult@plt>
   1197c:	b	1198c <PyInit__testcapi@@Base+0x87d0>
   11980:	and	x2, x2, #0x7fffffffffffffff
   11984:	mov	x0, x19
   11988:	bl	8f00 <_PyObject_MakeTpCall@plt>
   1198c:	ldr	x19, [sp, #32]
   11990:	ldp	x29, x30, [sp, #16]
   11994:	add	sp, sp, #0x30
   11998:	ret
   1199c:	sub	sp, sp, #0x30
   119a0:	stp	x29, x30, [sp, #32]
   119a4:	add	x29, sp, #0x20
   119a8:	mov	x0, x1
   119ac:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   119b0:	add	x1, x1, #0x1d0
   119b4:	sub	x2, x29, #0x8
   119b8:	add	x3, sp, #0x10
   119bc:	add	x4, sp, #0x8
   119c0:	str	xzr, [sp, #8]
   119c4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   119c8:	cbz	w0, 119f0 <PyInit__testcapi@@Base+0x8834>
   119cc:	ldr	x1, [sp, #16]
   119d0:	ldr	x8, [x1, #8]
   119d4:	ldrb	w8, [x8, #171]
   119d8:	tbnz	w8, #2, 119f8 <PyInit__testcapi@@Base+0x883c>
   119dc:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   119e0:	ldr	x8, [x8, #3952]
   119e4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   119e8:	add	x1, x1, #0x1d5
   119ec:	b	11a1c <PyInit__testcapi@@Base+0x8860>
   119f0:	mov	x0, xzr
   119f4:	b	11a34 <PyInit__testcapi@@Base+0x8878>
   119f8:	ldr	x2, [sp, #8]
   119fc:	cbz	x2, 11a2c <PyInit__testcapi@@Base+0x8870>
   11a00:	ldr	x8, [x2, #8]
   11a04:	ldrb	w8, [x8, #171]
   11a08:	tbnz	w8, #5, 11a2c <PyInit__testcapi@@Base+0x8870>
   11a0c:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11a10:	ldr	x8, [x8, #3952]
   11a14:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11a18:	add	x1, x1, #0x1ea
   11a1c:	ldr	x0, [x8]
   11a20:	bl	8670 <PyErr_SetString@plt>
   11a24:	mov	x0, xzr
   11a28:	b	11a34 <PyInit__testcapi@@Base+0x8878>
   11a2c:	ldur	x0, [x29, #-8]
   11a30:	bl	8bb0 <PyVectorcall_Call@plt>
   11a34:	ldp	x29, x30, [sp, #32]
   11a38:	add	sp, sp, #0x30
   11a3c:	ret
   11a40:	sub	sp, sp, #0x20
   11a44:	stp	x29, x30, [sp, #16]
   11a48:	add	x29, sp, #0x10
   11a4c:	mov	w8, #0x5                   	// #5
   11a50:	sub	x0, x29, #0x4
   11a54:	stur	w8, [x29, #-4]
   11a58:	bl	8880 <PyLong_FromVoidPtr@plt>
   11a5c:	ldp	x29, x30, [sp, #16]
   11a60:	add	sp, sp, #0x20
   11a64:	ret
   11a68:	sub	sp, sp, #0x20
   11a6c:	stp	x29, x30, [sp, #16]
   11a70:	add	x29, sp, #0x10
   11a74:	mov	x0, x1
   11a78:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   11a7c:	add	x1, x1, #0x8bb
   11a80:	sub	x2, x29, #0x4
   11a84:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11a88:	cbz	w0, 11aa4 <PyInit__testcapi@@Base+0x88e8>
   11a8c:	ldur	w8, [x29, #-4]
   11a90:	mov	w9, #0x7f                  	// #127
   11a94:	bfi	w9, w8, #8, #24
   11a98:	sxtw	x0, w9
   11a9c:	bl	8840 <PyLong_FromLong@plt>
   11aa0:	b	11aa8 <PyInit__testcapi@@Base+0x88ec>
   11aa4:	mov	x0, xzr
   11aa8:	ldp	x29, x30, [sp, #16]
   11aac:	add	sp, sp, #0x20
   11ab0:	ret
   11ab4:	mov	x0, x1
   11ab8:	b	8530 <PyMapping_Keys@plt>
   11abc:	mov	x0, x1
   11ac0:	b	8dc0 <PyMapping_Values@plt>
   11ac4:	mov	x0, x1
   11ac8:	b	8290 <PyMapping_Items@plt>
   11acc:	stp	x29, x30, [sp, #-32]!
   11ad0:	str	x19, [sp, #16]
   11ad4:	mov	x29, sp
   11ad8:	add	x0, x29, #0x18
   11adc:	str	xzr, [x29, #24]
   11ae0:	bl	8520 <PyThread_tss_is_created@plt>
   11ae4:	cbz	w0, 11b10 <PyInit__testcapi@@Base+0x8954>
   11ae8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11aec:	ldr	x0, [x8, #3520]
   11af0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   11af4:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   11af8:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
   11afc:	add	x1, x1, #0xc12
   11b00:	add	x2, x2, #0x641
   11b04:	add	x3, x3, #0x200
   11b08:	bl	8e60 <PyErr_Format@plt>
   11b0c:	b	11b34 <PyInit__testcapi@@Base+0x8978>
   11b10:	add	x0, x29, #0x18
   11b14:	bl	8350 <PyThread_tss_create@plt>
   11b18:	cbz	w0, 11b44 <PyInit__testcapi@@Base+0x8988>
   11b1c:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11b20:	ldr	x8, [x8, #3928]
   11b24:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11b28:	add	x1, x1, #0x237
   11b2c:	ldr	x0, [x8]
   11b30:	bl	8670 <PyErr_SetString@plt>
   11b34:	mov	x0, xzr
   11b38:	ldr	x19, [sp, #16]
   11b3c:	ldp	x29, x30, [sp], #32
   11b40:	ret
   11b44:	add	x0, x29, #0x18
   11b48:	bl	8520 <PyThread_tss_is_created@plt>
   11b4c:	cbz	w0, 11b80 <PyInit__testcapi@@Base+0x89c4>
   11b50:	add	x0, x29, #0x18
   11b54:	bl	8350 <PyThread_tss_create@plt>
   11b58:	cbz	w0, 11ba4 <PyInit__testcapi@@Base+0x89e8>
   11b5c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11b60:	ldr	x0, [x8, #3520]
   11b64:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   11b68:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   11b6c:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
   11b70:	add	x1, x1, #0xc12
   11b74:	add	x2, x2, #0x641
   11b78:	add	x3, x3, #0x29c
   11b7c:	b	11b08 <PyInit__testcapi@@Base+0x894c>
   11b80:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11b84:	ldr	x0, [x8, #3520]
   11b88:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   11b8c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   11b90:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
   11b94:	add	x1, x1, #0xc12
   11b98:	add	x2, x2, #0x641
   11b9c:	add	x3, x3, #0x252
   11ba0:	b	11b08 <PyInit__testcapi@@Base+0x894c>
   11ba4:	add	x0, x29, #0x18
   11ba8:	mov	x1, xzr
   11bac:	bl	8c00 <PyThread_tss_set@plt>
   11bb0:	add	x0, x29, #0x18
   11bb4:	bl	8520 <PyThread_tss_is_created@plt>
   11bb8:	cbz	w0, 11c08 <PyInit__testcapi@@Base+0x8a4c>
   11bbc:	add	x0, x29, #0x18
   11bc0:	bl	8f10 <PyThread_tss_get@plt>
   11bc4:	add	x0, x29, #0x18
   11bc8:	bl	8520 <PyThread_tss_is_created@plt>
   11bcc:	cbz	w0, 11c2c <PyInit__testcapi@@Base+0x8a70>
   11bd0:	add	x0, x29, #0x18
   11bd4:	bl	8d90 <PyThread_tss_delete@plt>
   11bd8:	add	x0, x29, #0x18
   11bdc:	bl	8520 <PyThread_tss_is_created@plt>
   11be0:	cbz	w0, 11c50 <PyInit__testcapi@@Base+0x8a94>
   11be4:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11be8:	ldr	x0, [x8, #3520]
   11bec:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   11bf0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   11bf4:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
   11bf8:	add	x1, x1, #0xc12
   11bfc:	add	x2, x2, #0x641
   11c00:	add	x3, x3, #0x393
   11c04:	b	11b08 <PyInit__testcapi@@Base+0x894c>
   11c08:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11c0c:	ldr	x0, [x8, #3520]
   11c10:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   11c14:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   11c18:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
   11c1c:	add	x1, x1, #0xc12
   11c20:	add	x2, x2, #0x641
   11c24:	add	x3, x3, #0x2dd
   11c28:	b	11b08 <PyInit__testcapi@@Base+0x894c>
   11c2c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11c30:	ldr	x0, [x8, #3520]
   11c34:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   11c38:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   11c3c:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
   11c40:	add	x1, x1, #0xc12
   11c44:	add	x2, x2, #0x641
   11c48:	add	x3, x3, #0x33b
   11c4c:	b	11b08 <PyInit__testcapi@@Base+0x894c>
   11c50:	bl	8ba0 <PyThread_tss_alloc@plt>
   11c54:	cbz	x0, 11c88 <PyInit__testcapi@@Base+0x8acc>
   11c58:	mov	x19, x0
   11c5c:	bl	8520 <PyThread_tss_is_created@plt>
   11c60:	cbz	w0, 11c9c <PyInit__testcapi@@Base+0x8ae0>
   11c64:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   11c68:	ldr	x0, [x8, #3520]
   11c6c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae44>
   11c70:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   11c74:	adrp	x3, 16000 <PyInit__testcapi@@Base+0xce44>
   11c78:	add	x1, x1, #0xc12
   11c7c:	add	x2, x2, #0x641
   11c80:	add	x3, x3, #0x3f8
   11c84:	b	11b08 <PyInit__testcapi@@Base+0x894c>
   11c88:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11c8c:	ldr	x8, [x8, #3928]
   11c90:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11c94:	add	x1, x1, #0x3de
   11c98:	b	11b2c <PyInit__testcapi@@Base+0x8970>
   11c9c:	mov	x0, x19
   11ca0:	bl	83a0 <PyThread_tss_free@plt>
   11ca4:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11ca8:	ldr	x0, [x0, #4016]
   11cac:	ldr	x8, [x0]
   11cb0:	add	x8, x8, #0x1
   11cb4:	str	x8, [x0]
   11cb8:	b	11b38 <PyInit__testcapi@@Base+0x897c>
   11cbc:	b	8da0 <_PyContext_NewHamtForTests@plt>
   11cc0:	sub	sp, sp, #0x30
   11cc4:	stp	x29, x30, [sp, #32]
   11cc8:	add	x29, sp, #0x20
   11ccc:	mov	x8, x2
   11cd0:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae44>
   11cd4:	mov	x0, x1
   11cd8:	add	x2, x2, #0x662
   11cdc:	sub	x5, x29, #0x8
   11ce0:	add	x6, sp, #0x10
   11ce4:	add	x7, sp, #0x8
   11ce8:	mov	w3, #0x3                   	// #3
   11cec:	mov	w4, #0x3                   	// #3
   11cf0:	mov	x1, x8
   11cf4:	bl	8710 <_PyArg_UnpackStack@plt>
   11cf8:	cbz	w0, 11d2c <PyInit__testcapi@@Base+0x8b70>
   11cfc:	ldr	x0, [sp, #8]
   11d00:	mov	x1, xzr
   11d04:	bl	89e0 <PyObject_CallObject@plt>
   11d08:	cbz	x0, 11d30 <PyInit__testcapi@@Base+0x8b74>
   11d0c:	ldr	x8, [x0]
   11d10:	subs	x8, x8, #0x1
   11d14:	str	x8, [x0]
   11d18:	b.ne	11d20 <PyInit__testcapi@@Base+0x8b64>  // b.any
   11d1c:	bl	8560 <_Py_Dealloc@plt>
   11d20:	ldur	x0, [x29, #-8]
   11d24:	bl	8db0 <PyObject_Repr@plt>
   11d28:	b	11d30 <PyInit__testcapi@@Base+0x8b74>
   11d2c:	mov	x0, xzr
   11d30:	ldp	x29, x30, [sp, #32]
   11d34:	add	sp, sp, #0x30
   11d38:	ret
   11d3c:	sub	sp, sp, #0x50
   11d40:	stp	x29, x30, [sp, #48]
   11d44:	stp	x20, x19, [sp, #64]
   11d48:	add	x29, sp, #0x30
   11d4c:	mov	x0, x1
   11d50:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11d54:	add	x1, x1, #0x431
   11d58:	sub	x2, x29, #0x8
   11d5c:	sub	x3, x29, #0xc
   11d60:	add	x4, sp, #0x18
   11d64:	stur	wzr, [x29, #-12]
   11d68:	str	xzr, [sp, #24]
   11d6c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11d70:	cbz	w0, 11e38 <PyInit__testcapi@@Base+0x8c7c>
   11d74:	ldur	x0, [x29, #-8]
   11d78:	mov	x1, xzr
   11d7c:	bl	8c70 <PyUnicode_AsWideCharString@plt>
   11d80:	mov	x19, x0
   11d84:	cbz	x0, 11e3c <PyInit__testcapi@@Base+0x8c80>
   11d88:	ldr	x0, [sp, #24]
   11d8c:	bl	83c0 <_Py_GetErrorHandler@plt>
   11d90:	ldur	w4, [x29, #-12]
   11d94:	mov	w5, w0
   11d98:	add	x1, sp, #0x10
   11d9c:	add	x2, sp, #0x8
   11da0:	mov	x3, sp
   11da4:	mov	x0, x19
   11da8:	str	xzr, [sp, #16]
   11dac:	str	xzr, [sp]
   11db0:	bl	8340 <_Py_EncodeLocaleEx@plt>
   11db4:	mov	w20, w0
   11db8:	mov	x0, x19
   11dbc:	bl	83d0 <PyMem_Free@plt>
   11dc0:	add	w8, w20, #0x3
   11dc4:	cmp	w8, #0x3
   11dc8:	b.hi	11df8 <PyInit__testcapi@@Base+0x8c3c>  // b.pmore
   11dcc:	adrp	x9, 13000 <PyInit__testcapi@@Base+0x9e44>
   11dd0:	add	x9, x9, #0x100
   11dd4:	adr	x10, 11de4 <PyInit__testcapi@@Base+0x8c28>
   11dd8:	ldrb	w11, [x9, x8]
   11ddc:	add	x10, x10, x11, lsl #2
   11de0:	br	x10
   11de4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11de8:	ldr	x8, [x8, #3944]
   11dec:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11df0:	add	x1, x1, #0x457
   11df4:	b	11e08 <PyInit__testcapi@@Base+0x8c4c>
   11df8:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11dfc:	ldr	x8, [x8, #3944]
   11e00:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11e04:	add	x1, x1, #0x471
   11e08:	ldr	x0, [x8]
   11e0c:	bl	8670 <PyErr_SetString@plt>
   11e10:	b	11e38 <PyInit__testcapi@@Base+0x8c7c>
   11e14:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11e18:	ldr	x8, [x8, #3928]
   11e1c:	ldp	x3, x2, [sp]
   11e20:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11e24:	add	x1, x1, #0x436
   11e28:	ldr	x0, [x8]
   11e2c:	bl	8e60 <PyErr_Format@plt>
   11e30:	b	11e38 <PyInit__testcapi@@Base+0x8c7c>
   11e34:	bl	8570 <PyErr_NoMemory@plt>
   11e38:	mov	x19, xzr
   11e3c:	mov	x0, x19
   11e40:	ldp	x20, x19, [sp, #64]
   11e44:	ldp	x29, x30, [sp, #48]
   11e48:	add	sp, sp, #0x50
   11e4c:	ret
   11e50:	ldr	x0, [sp, #16]
   11e54:	bl	8970 <PyBytes_FromString@plt>
   11e58:	ldr	x8, [sp, #16]
   11e5c:	mov	x19, x0
   11e60:	mov	x0, x8
   11e64:	bl	8a10 <PyMem_RawFree@plt>
   11e68:	b	11e3c <PyInit__testcapi@@Base+0x8c80>
   11e6c:	sub	sp, sp, #0x50
   11e70:	stp	x29, x30, [sp, #48]
   11e74:	str	x19, [sp, #64]
   11e78:	add	x29, sp, #0x30
   11e7c:	mov	x0, x1
   11e80:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11e84:	add	x1, x1, #0x483
   11e88:	add	x2, x29, #0x18
   11e8c:	sub	x3, x29, #0x4
   11e90:	sub	x4, x29, #0x10
   11e94:	stur	wzr, [x29, #-4]
   11e98:	stur	xzr, [x29, #-16]
   11e9c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11ea0:	cbz	w0, 11f48 <PyInit__testcapi@@Base+0x8d8c>
   11ea4:	ldur	x0, [x29, #-16]
   11ea8:	bl	83c0 <_Py_GetErrorHandler@plt>
   11eac:	mov	w5, w0
   11eb0:	ldr	x0, [x29, #24]
   11eb4:	ldur	w4, [x29, #-4]
   11eb8:	add	x1, sp, #0x18
   11ebc:	add	x2, sp, #0x10
   11ec0:	add	x3, sp, #0x8
   11ec4:	stp	xzr, xzr, [sp, #16]
   11ec8:	str	xzr, [sp, #8]
   11ecc:	bl	87a0 <_Py_DecodeLocaleEx@plt>
   11ed0:	add	w8, w0, #0x3
   11ed4:	cmp	w8, #0x3
   11ed8:	b.hi	11f08 <PyInit__testcapi@@Base+0x8d4c>  // b.pmore
   11edc:	adrp	x9, 13000 <PyInit__testcapi@@Base+0x9e44>
   11ee0:	add	x9, x9, #0x104
   11ee4:	adr	x10, 11ef4 <PyInit__testcapi@@Base+0x8d38>
   11ee8:	ldrb	w11, [x9, x8]
   11eec:	add	x10, x10, x11, lsl #2
   11ef0:	br	x10
   11ef4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11ef8:	ldr	x8, [x8, #3944]
   11efc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11f00:	add	x1, x1, #0x457
   11f04:	b	11f18 <PyInit__testcapi@@Base+0x8d5c>
   11f08:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11f0c:	ldr	x8, [x8, #3944]
   11f10:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11f14:	add	x1, x1, #0x471
   11f18:	ldr	x0, [x8]
   11f1c:	bl	8670 <PyErr_SetString@plt>
   11f20:	b	11f48 <PyInit__testcapi@@Base+0x8d8c>
   11f24:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11f28:	ldr	x8, [x8, #3928]
   11f2c:	ldp	x3, x2, [sp, #8]
   11f30:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11f34:	add	x1, x1, #0x488
   11f38:	ldr	x0, [x8]
   11f3c:	bl	8e60 <PyErr_Format@plt>
   11f40:	b	11f48 <PyInit__testcapi@@Base+0x8d8c>
   11f44:	bl	8570 <PyErr_NoMemory@plt>
   11f48:	mov	x19, xzr
   11f4c:	mov	x0, x19
   11f50:	ldr	x19, [sp, #64]
   11f54:	ldp	x29, x30, [sp, #48]
   11f58:	add	sp, sp, #0x50
   11f5c:	ret
   11f60:	ldp	x1, x0, [sp, #16]
   11f64:	bl	8400 <PyUnicode_FromWideChar@plt>
   11f68:	ldr	x8, [sp, #24]
   11f6c:	mov	x19, x0
   11f70:	mov	x0, x8
   11f74:	bl	8a10 <PyMem_RawFree@plt>
   11f78:	b	11f4c <PyInit__testcapi@@Base+0x8d90>
   11f7c:	sub	sp, sp, #0x40
   11f80:	stp	x29, x30, [sp, #32]
   11f84:	stp	x20, x19, [sp, #48]
   11f88:	add	x29, sp, #0x20
   11f8c:	mov	x0, x1
   11f90:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   11f94:	add	x1, x1, #0x174
   11f98:	sub	x2, x29, #0x8
   11f9c:	add	x3, sp, #0x10
   11fa0:	add	x4, sp, #0x8
   11fa4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   11fa8:	cbz	w0, 11fcc <PyInit__testcapi@@Base+0x8e10>
   11fac:	adrp	x19, 26000 <PyInit__testcapi@@Base+0x1ce44>
   11fb0:	ldr	x0, [sp, #16]
   11fb4:	ldr	x19, [x19, #4016]
   11fb8:	cmp	x0, x19
   11fbc:	b.eq	11fd4 <PyInit__testcapi@@Base+0x8e18>  // b.none
   11fc0:	bl	8ca0 <PyUnicode_AsUTF8@plt>
   11fc4:	mov	x20, x0
   11fc8:	cbnz	x0, 11fd8 <PyInit__testcapi@@Base+0x8e1c>
   11fcc:	mov	x19, xzr
   11fd0:	b	11ffc <PyInit__testcapi@@Base+0x8e40>
   11fd4:	mov	x20, xzr
   11fd8:	ldur	x1, [x29, #-8]
   11fdc:	ldr	x0, [x1, #8]
   11fe0:	bl	8580 <PyErr_SetObject@plt>
   11fe4:	ldr	x1, [sp, #8]
   11fe8:	mov	x0, x20
   11fec:	bl	89c0 <_PyErr_WriteUnraisableMsg@plt>
   11ff0:	ldr	x8, [x19]
   11ff4:	add	x8, x8, #0x1
   11ff8:	str	x8, [x19]
   11ffc:	mov	x0, x19
   12000:	ldp	x20, x19, [sp, #48]
   12004:	ldp	x29, x30, [sp, #32]
   12008:	add	sp, sp, #0x40
   1200c:	ret
   12010:	stp	x29, x30, [sp, #-32]!
   12014:	str	x19, [sp, #16]
   12018:	mov	x29, sp
   1201c:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   12020:	ldr	w9, [x8, #3560]
   12024:	mov	x19, x0
   12028:	add	w9, w9, #0x1
   1202c:	str	w9, [x8, #3560]
   12030:	bl	8b50 <PyCapsule_GetContext@plt>
   12034:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
   12038:	add	x8, x8, #0x6e5
   1203c:	cmp	x0, x8
   12040:	b.eq	12050 <PyInit__testcapi@@Base+0x8e94>  // b.none
   12044:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
   12048:	add	x8, x8, #0x648
   1204c:	b	120c0 <PyInit__testcapi@@Base+0x8f04>
   12050:	mov	x0, x19
   12054:	bl	8ec0 <PyCapsule_GetDestructor@plt>
   12058:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
   1205c:	add	x8, x8, #0x10
   12060:	cmp	x0, x8
   12064:	b.eq	12074 <PyInit__testcapi@@Base+0x8eb8>  // b.none
   12068:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
   1206c:	add	x8, x8, #0x66d
   12070:	b	120c0 <PyInit__testcapi@@Base+0x8f04>
   12074:	mov	x0, x19
   12078:	bl	8440 <PyCapsule_GetName@plt>
   1207c:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
   12080:	add	x8, x8, #0x63b
   12084:	cmp	x0, x8
   12088:	b.eq	12098 <PyInit__testcapi@@Base+0x8edc>  // b.none
   1208c:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
   12090:	add	x8, x8, #0x69e
   12094:	b	120c0 <PyInit__testcapi@@Base+0x8f04>
   12098:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1209c:	add	x1, x1, #0x63b
   120a0:	mov	x0, x19
   120a4:	bl	8e70 <PyCapsule_GetPointer@plt>
   120a8:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
   120ac:	add	x8, x8, #0x62b
   120b0:	cmp	x0, x8
   120b4:	b.eq	120c8 <PyInit__testcapi@@Base+0x8f0c>  // b.none
   120b8:	adrp	x8, 15000 <PyInit__testcapi@@Base+0xbe44>
   120bc:	add	x8, x8, #0x6c0
   120c0:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   120c4:	str	x8, [x9, #3552]
   120c8:	ldr	x19, [sp, #16]
   120cc:	ldp	x29, x30, [sp], #32
   120d0:	ret
   120d4:	stp	x29, x30, [sp, #-32]!
   120d8:	stp	x20, x19, [sp, #16]
   120dc:	mov	x29, sp
   120e0:	mov	x19, x0
   120e4:	mov	x0, xzr
   120e8:	bl	82a0 <PyList_New@plt>
   120ec:	cbz	x0, 1218c <PyInit__testcapi@@Base+0x8fd0>
   120f0:	ldr	x8, [x0]
   120f4:	mov	x20, x0
   120f8:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e44>
   120fc:	add	x1, x1, #0x1dc
   12100:	add	x8, x8, #0x1
   12104:	str	x8, [x0]
   12108:	mov	x0, x19
   1210c:	mov	x2, xzr
   12110:	mov	x3, x20
   12114:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   12118:	cbz	x0, 1218c <PyInit__testcapi@@Base+0x8fd0>
   1211c:	ldr	x8, [x0]
   12120:	subs	x8, x8, #0x1
   12124:	str	x8, [x0]
   12128:	b.ne	12130 <PyInit__testcapi@@Base+0x8f74>  // b.any
   1212c:	bl	8560 <_Py_Dealloc@plt>
   12130:	ldr	x8, [x20]
   12134:	cmp	x8, #0x1
   12138:	b.ne	12174 <PyInit__testcapi@@Base+0x8fb8>  // b.any
   1213c:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e44>
   12140:	mov	w8, #0x2                   	// #2
   12144:	add	x1, x1, #0x1f4
   12148:	mov	x0, x19
   1214c:	mov	x2, xzr
   12150:	mov	x3, x20
   12154:	str	x8, [x20]
   12158:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   1215c:	cbz	x0, 1219c <PyInit__testcapi@@Base+0x8fe0>
   12160:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   12164:	ldr	x0, [x8, #3520]
   12168:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1216c:	add	x1, x1, #0x807
   12170:	b	12184 <PyInit__testcapi@@Base+0x8fc8>
   12174:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   12178:	ldr	x0, [x8, #3520]
   1217c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12180:	add	x1, x1, #0x7bd
   12184:	mov	x2, x19
   12188:	bl	8e60 <PyErr_Format@plt>
   1218c:	mov	w0, #0xffffffff            	// #-1
   12190:	ldp	x20, x19, [sp, #16]
   12194:	ldp	x29, x30, [sp], #32
   12198:	ret
   1219c:	bl	8980 <PyErr_Occurred@plt>
   121a0:	cbz	x0, 12160 <PyInit__testcapi@@Base+0x8fa4>
   121a4:	bl	88c0 <PyErr_Clear@plt>
   121a8:	ldr	x8, [x20]
   121ac:	cmp	x8, #0x1
   121b0:	b.ne	121c8 <PyInit__testcapi@@Base+0x900c>  // b.any
   121b4:	mov	x0, x20
   121b8:	str	xzr, [x20]
   121bc:	bl	8560 <_Py_Dealloc@plt>
   121c0:	mov	w0, wzr
   121c4:	b	12190 <PyInit__testcapi@@Base+0x8fd4>
   121c8:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   121cc:	ldr	x0, [x8, #3520]
   121d0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   121d4:	add	x1, x1, #0x83e
   121d8:	b	12184 <PyInit__testcapi@@Base+0x8fc8>
   121dc:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce44>
   121e0:	ldr	x0, [x0, #4016]
   121e4:	ldr	x8, [x0]
   121e8:	add	x8, x8, #0x1
   121ec:	str	x8, [x0]
   121f0:	ret
   121f4:	stp	x29, x30, [sp, #-16]!
   121f8:	mov	x29, sp
   121fc:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   12200:	ldr	x8, [x8, #3944]
   12204:	ldr	x0, [x8]
   12208:	bl	8750 <PyErr_SetNone@plt>
   1220c:	mov	x0, xzr
   12210:	ldp	x29, x30, [sp], #16
   12214:	ret
   12218:	stp	x29, x30, [sp, #-16]!
   1221c:	mov	x29, sp
   12220:	bl	12234 <PyInit__testcapi@@Base+0x9078>
   12224:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   12228:	ldr	x0, [x8, #3824]
   1222c:	ldp	x29, x30, [sp], #16
   12230:	b	8b90 <PyThread_release_lock@plt>
   12234:	stp	x29, x30, [sp, #-32]!
   12238:	stp	x20, x19, [sp, #16]
   1223c:	mov	x29, sp
   12240:	mov	x20, x0
   12244:	bl	86e0 <PyGILState_Ensure@plt>
   12248:	ldr	x8, [x20, #8]
   1224c:	mov	w19, w0
   12250:	ldrb	w9, [x8, #169]
   12254:	tbz	w9, #3, 1228c <PyInit__testcapi@@Base+0x90d0>
   12258:	ldr	x8, [x8, #56]
   1225c:	ldr	x8, [x20, x8]
   12260:	cbz	x8, 1228c <PyInit__testcapi@@Base+0x90d0>
   12264:	mov	x0, x20
   12268:	mov	x1, xzr
   1226c:	mov	x2, xzr
   12270:	mov	x3, xzr
   12274:	blr	x8
   12278:	mov	x1, x0
   1227c:	mov	x0, x20
   12280:	mov	x2, xzr
   12284:	bl	8a80 <_Py_CheckFunctionResult@plt>
   12288:	b	122a0 <PyInit__testcapi@@Base+0x90e4>
   1228c:	mov	x0, x20
   12290:	mov	x1, xzr
   12294:	mov	x2, xzr
   12298:	mov	x3, xzr
   1229c:	bl	8f00 <_PyObject_MakeTpCall@plt>
   122a0:	cmp	x0, #0x0
   122a4:	cset	w20, ne  // ne = any
   122a8:	cbz	x0, 122c0 <PyInit__testcapi@@Base+0x9104>
   122ac:	ldr	x8, [x0]
   122b0:	subs	x8, x8, #0x1
   122b4:	str	x8, [x0]
   122b8:	b.ne	122c0 <PyInit__testcapi@@Base+0x9104>  // b.any
   122bc:	bl	8560 <_Py_Dealloc@plt>
   122c0:	mov	w0, w19
   122c4:	bl	8360 <PyGILState_Release@plt>
   122c8:	mov	w0, w20
   122cc:	ldp	x20, x19, [sp, #16]
   122d0:	ldp	x29, x30, [sp], #32
   122d4:	ret
   122d8:	stp	x29, x30, [sp, #-32]!
   122dc:	stp	x20, x19, [sp, #16]
   122e0:	mov	x29, sp
   122e4:	ldr	x8, [x0, #8]
   122e8:	mov	x19, x0
   122ec:	ldrb	w9, [x8, #169]
   122f0:	tbz	w9, #3, 12328 <PyInit__testcapi@@Base+0x916c>
   122f4:	ldr	x8, [x8, #56]
   122f8:	ldr	x8, [x19, x8]
   122fc:	cbz	x8, 12328 <PyInit__testcapi@@Base+0x916c>
   12300:	mov	x0, x19
   12304:	mov	x1, xzr
   12308:	mov	x2, xzr
   1230c:	mov	x3, xzr
   12310:	blr	x8
   12314:	mov	x1, x0
   12318:	mov	x0, x19
   1231c:	mov	x2, xzr
   12320:	bl	8a80 <_Py_CheckFunctionResult@plt>
   12324:	b	1233c <PyInit__testcapi@@Base+0x9180>
   12328:	mov	x0, x19
   1232c:	mov	x1, xzr
   12330:	mov	x2, xzr
   12334:	mov	x3, xzr
   12338:	bl	8f00 <_PyObject_MakeTpCall@plt>
   1233c:	ldr	x8, [x19]
   12340:	mov	x20, x0
   12344:	subs	x8, x8, #0x1
   12348:	str	x8, [x19]
   1234c:	b.eq	12358 <PyInit__testcapi@@Base+0x919c>  // b.none
   12350:	cbnz	x20, 12364 <PyInit__testcapi@@Base+0x91a8>
   12354:	b	1237c <PyInit__testcapi@@Base+0x91c0>
   12358:	mov	x0, x19
   1235c:	bl	8560 <_Py_Dealloc@plt>
   12360:	cbz	x20, 1237c <PyInit__testcapi@@Base+0x91c0>
   12364:	ldr	x8, [x20]
   12368:	subs	x8, x8, #0x1
   1236c:	str	x8, [x20]
   12370:	b.ne	1237c <PyInit__testcapi@@Base+0x91c0>  // b.any
   12374:	mov	x0, x20
   12378:	bl	8560 <_Py_Dealloc@plt>
   1237c:	cmp	x20, #0x0
   12380:	ldp	x20, x19, [sp, #16]
   12384:	csetm	w0, eq  // eq = none
   12388:	ldp	x29, x30, [sp], #32
   1238c:	ret
   12390:	adrp	x8, 2a000 <PyInit__testcapi@@Base+0x20e44>
   12394:	ldr	x8, [x8, #3840]
   12398:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   1239c:	mov	w0, wzr
   123a0:	str	x8, [x9, #3832]
   123a4:	ldr	x9, [x8]
   123a8:	add	x9, x9, #0x1
   123ac:	str	x9, [x8]
   123b0:	ret
   123b4:	sub	sp, sp, #0x40
   123b8:	stp	x29, x30, [sp, #32]
   123bc:	stp	x20, x19, [sp, #48]
   123c0:	add	x29, sp, #0x20
   123c4:	mov	w8, #0x1                   	// #1
   123c8:	mov	x19, x0
   123cc:	str	x8, [x0]
   123d0:	sub	x0, x29, #0x8
   123d4:	add	x1, sp, #0x10
   123d8:	add	x2, sp, #0x8
   123dc:	bl	8ce0 <PyErr_Fetch@plt>
   123e0:	adrp	x1, 2a000 <PyInit__testcapi@@Base+0x20e44>
   123e4:	add	x1, x1, #0x5d8
   123e8:	mov	x0, x19
   123ec:	bl	86f0 <_PyObject_LookupSpecial@plt>
   123f0:	cbz	x0, 12488 <PyInit__testcapi@@Base+0x92cc>
   123f4:	ldr	x8, [x0, #8]
   123f8:	mov	x20, x0
   123fc:	ldrb	w9, [x8, #169]
   12400:	tbz	w9, #3, 12444 <PyInit__testcapi@@Base+0x9288>
   12404:	ldr	x8, [x8, #56]
   12408:	ldr	x8, [x20, x8]
   1240c:	cbz	x8, 12444 <PyInit__testcapi@@Base+0x9288>
   12410:	mov	x0, x20
   12414:	mov	x1, xzr
   12418:	mov	x2, xzr
   1241c:	mov	x3, xzr
   12420:	blr	x8
   12424:	mov	x1, x0
   12428:	mov	x0, x20
   1242c:	mov	x2, xzr
   12430:	bl	8a80 <_Py_CheckFunctionResult@plt>
   12434:	cbnz	x0, 1245c <PyInit__testcapi@@Base+0x92a0>
   12438:	mov	x0, x20
   1243c:	bl	9080 <PyErr_WriteUnraisable@plt>
   12440:	b	12470 <PyInit__testcapi@@Base+0x92b4>
   12444:	mov	x0, x20
   12448:	mov	x1, xzr
   1244c:	mov	x2, xzr
   12450:	mov	x3, xzr
   12454:	bl	8f00 <_PyObject_MakeTpCall@plt>
   12458:	cbz	x0, 12438 <PyInit__testcapi@@Base+0x927c>
   1245c:	ldr	x8, [x0]
   12460:	subs	x8, x8, #0x1
   12464:	str	x8, [x0]
   12468:	b.ne	12470 <PyInit__testcapi@@Base+0x92b4>  // b.any
   1246c:	bl	8560 <_Py_Dealloc@plt>
   12470:	ldr	x8, [x20]
   12474:	subs	x8, x8, #0x1
   12478:	str	x8, [x20]
   1247c:	b.ne	12488 <PyInit__testcapi@@Base+0x92cc>  // b.any
   12480:	mov	x0, x20
   12484:	bl	8560 <_Py_Dealloc@plt>
   12488:	ldur	x0, [x29, #-8]
   1248c:	ldp	x2, x1, [sp, #8]
   12490:	bl	8380 <PyErr_Restore@plt>
   12494:	ldr	x8, [x19]
   12498:	subs	x20, x8, #0x1
   1249c:	str	x20, [x19]
   124a0:	b.eq	124c0 <PyInit__testcapi@@Base+0x9304>  // b.none
   124a4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   124a8:	ldr	x8, [x8, #3968]
   124ac:	ldr	w8, [x8, #4]
   124b0:	cbz	w8, 124bc <PyInit__testcapi@@Base+0x9300>
   124b4:	mov	x0, x19
   124b8:	bl	8c10 <_PyTraceMalloc_NewReference@plt>
   124bc:	str	x20, [x19]
   124c0:	ldp	x20, x19, [sp, #48]
   124c4:	ldp	x29, x30, [sp, #32]
   124c8:	add	sp, sp, #0x40
   124cc:	ret
   124d0:	sub	sp, sp, #0xc0
   124d4:	stp	x29, x30, [sp, #144]
   124d8:	str	x21, [sp, #160]
   124dc:	stp	x20, x19, [sp, #176]
   124e0:	add	x29, sp, #0x90
   124e4:	adrp	x9, 12000 <PyInit__testcapi@@Base+0x8e44>
   124e8:	add	x8, sp, #0x30
   124ec:	add	x9, x9, #0x824
   124f0:	adrp	x10, 12000 <PyInit__testcapi@@Base+0x8e44>
   124f4:	stp	x8, x9, [sp, #8]
   124f8:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
   124fc:	add	x10, x10, #0x838
   12500:	add	x8, x8, #0x850
   12504:	stp	x10, x8, [sp, #24]
   12508:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
   1250c:	movi	v0.2d, #0x0
   12510:	add	x8, x8, #0x868
   12514:	add	x1, sp, #0x30
   12518:	mov	w19, w0
   1251c:	stp	q0, q0, [sp, #48]
   12520:	stp	q0, q0, [sp, #80]
   12524:	stp	q0, q0, [sp, #112]
   12528:	str	x8, [sp, #40]
   1252c:	bl	8b70 <PyMem_GetAllocator@plt>
   12530:	add	x1, sp, #0x8
   12534:	mov	w0, w19
   12538:	bl	8700 <PyMem_SetAllocator@plt>
   1253c:	cmp	w19, #0x2
   12540:	str	xzr, [sp, #136]
   12544:	b.eq	12568 <PyInit__testcapi@@Base+0x93ac>  // b.none
   12548:	cmp	w19, #0x1
   1254c:	b.eq	12584 <PyInit__testcapi@@Base+0x93c8>  // b.none
   12550:	cbnz	w19, 12578 <PyInit__testcapi@@Base+0x93bc>
   12554:	mov	w0, #0x2a                  	// #42
   12558:	bl	84d0 <PyMem_RawMalloc@plt>
   1255c:	mov	x20, x0
   12560:	cbnz	x0, 12594 <PyInit__testcapi@@Base+0x93d8>
   12564:	b	12578 <PyInit__testcapi@@Base+0x93bc>
   12568:	mov	w0, #0x2a                  	// #42
   1256c:	bl	86c0 <PyObject_Malloc@plt>
   12570:	mov	x20, x0
   12574:	cbnz	x0, 12594 <PyInit__testcapi@@Base+0x93d8>
   12578:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1257c:	add	x1, x1, #0xee1
   12580:	b	12680 <PyInit__testcapi@@Base+0x94c4>
   12584:	mov	w0, #0x2a                  	// #42
   12588:	bl	8fc0 <PyMem_Malloc@plt>
   1258c:	mov	x20, x0
   12590:	cbz	x0, 12578 <PyInit__testcapi@@Base+0x93bc>
   12594:	ldr	x8, [sp, #136]
   12598:	add	x9, sp, #0x30
   1259c:	cmp	x8, x9
   125a0:	b.eq	125b0 <PyInit__testcapi@@Base+0x93f4>  // b.none
   125a4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   125a8:	add	x1, x1, #0xeef
   125ac:	b	12680 <PyInit__testcapi@@Base+0x94c4>
   125b0:	ldr	x8, [sp, #88]
   125b4:	str	xzr, [sp, #136]
   125b8:	cmp	x8, #0x2a
   125bc:	b.ne	125e4 <PyInit__testcapi@@Base+0x9428>  // b.any
   125c0:	cmp	w19, #0x2
   125c4:	b.eq	125f0 <PyInit__testcapi@@Base+0x9434>  // b.none
   125c8:	cmp	w19, #0x1
   125cc:	b.eq	12600 <PyInit__testcapi@@Base+0x9444>  // b.none
   125d0:	cbnz	w19, 12630 <PyInit__testcapi@@Base+0x9474>
   125d4:	mov	w1, #0xc8                  	// #200
   125d8:	mov	x0, x20
   125dc:	bl	9090 <PyMem_RawRealloc@plt>
   125e0:	b	1260c <PyInit__testcapi@@Base+0x9450>
   125e4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   125e8:	add	x1, x1, #0xf04
   125ec:	b	12680 <PyInit__testcapi@@Base+0x94c4>
   125f0:	mov	w1, #0xc8                  	// #200
   125f4:	mov	x0, x20
   125f8:	bl	8ae0 <PyObject_Realloc@plt>
   125fc:	b	1260c <PyInit__testcapi@@Base+0x9450>
   12600:	mov	w1, #0xc8                  	// #200
   12604:	mov	x0, x20
   12608:	bl	8740 <PyMem_Realloc@plt>
   1260c:	mov	x21, x0
   12610:	cbz	x0, 12630 <PyInit__testcapi@@Base+0x9474>
   12614:	ldr	x8, [sp, #136]
   12618:	add	x9, sp, #0x30
   1261c:	cmp	x8, x9
   12620:	b.eq	1263c <PyInit__testcapi@@Base+0x9480>  // b.none
   12624:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12628:	add	x1, x1, #0xf27
   1262c:	b	12680 <PyInit__testcapi@@Base+0x94c4>
   12630:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12634:	add	x1, x1, #0xf18
   12638:	b	12680 <PyInit__testcapi@@Base+0x94c4>
   1263c:	ldr	x8, [sp, #112]
   12640:	str	xzr, [sp, #136]
   12644:	cmp	x8, x20
   12648:	b.ne	12678 <PyInit__testcapi@@Base+0x94bc>  // b.any
   1264c:	ldr	x8, [sp, #120]
   12650:	cmp	x8, #0xc8
   12654:	b.ne	12678 <PyInit__testcapi@@Base+0x94bc>  // b.any
   12658:	cmp	w19, #0x2
   1265c:	b.eq	126b8 <PyInit__testcapi@@Base+0x94fc>  // b.none
   12660:	cmp	w19, #0x1
   12664:	b.eq	126c4 <PyInit__testcapi@@Base+0x9508>  // b.none
   12668:	cbnz	w19, 126cc <PyInit__testcapi@@Base+0x9510>
   1266c:	mov	x0, x21
   12670:	bl	8a10 <PyMem_RawFree@plt>
   12674:	b	126cc <PyInit__testcapi@@Base+0x9510>
   12678:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1267c:	add	x1, x1, #0xf3d
   12680:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   12684:	ldr	x8, [x8, #3928]
   12688:	ldr	x0, [x8]
   1268c:	bl	8670 <PyErr_SetString@plt>
   12690:	mov	x20, xzr
   12694:	add	x1, sp, #0x30
   12698:	mov	w0, w19
   1269c:	bl	8700 <PyMem_SetAllocator@plt>
   126a0:	mov	x0, x20
   126a4:	ldp	x20, x19, [sp, #176]
   126a8:	ldr	x21, [sp, #160]
   126ac:	ldp	x29, x30, [sp, #144]
   126b0:	add	sp, sp, #0xc0
   126b4:	ret
   126b8:	mov	x0, x21
   126bc:	bl	87c0 <PyObject_Free@plt>
   126c0:	b	126cc <PyInit__testcapi@@Base+0x9510>
   126c4:	mov	x0, x21
   126c8:	bl	83d0 <PyMem_Free@plt>
   126cc:	ldr	x8, [sp, #136]
   126d0:	add	x9, sp, #0x30
   126d4:	cmp	x8, x9
   126d8:	b.eq	126e8 <PyInit__testcapi@@Base+0x952c>  // b.none
   126dc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   126e0:	add	x1, x1, #0xfa1
   126e4:	b	12680 <PyInit__testcapi@@Base+0x94c4>
   126e8:	ldr	x8, [sp, #128]
   126ec:	str	xzr, [sp, #136]
   126f0:	cmp	x8, x21
   126f4:	b.eq	12704 <PyInit__testcapi@@Base+0x9548>  // b.none
   126f8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   126fc:	add	x1, x1, #0xfbb
   12700:	b	12680 <PyInit__testcapi@@Base+0x94c4>
   12704:	cmp	w19, #0x2
   12708:	b.eq	12728 <PyInit__testcapi@@Base+0x956c>  // b.none
   1270c:	cmp	w19, #0x1
   12710:	b.eq	12738 <PyInit__testcapi@@Base+0x957c>  // b.none
   12714:	cbnz	w19, 12768 <PyInit__testcapi@@Base+0x95ac>
   12718:	mov	w0, #0x2                   	// #2
   1271c:	mov	w1, #0x5                   	// #5
   12720:	bl	8d30 <PyMem_RawCalloc@plt>
   12724:	b	12744 <PyInit__testcapi@@Base+0x9588>
   12728:	mov	w0, #0x2                   	// #2
   1272c:	mov	w1, #0x5                   	// #5
   12730:	bl	90a0 <PyObject_Calloc@plt>
   12734:	b	12744 <PyInit__testcapi@@Base+0x9588>
   12738:	mov	w0, #0x2                   	// #2
   1273c:	mov	w1, #0x5                   	// #5
   12740:	bl	8f20 <PyMem_Calloc@plt>
   12744:	mov	x20, x0
   12748:	cbz	x0, 12768 <PyInit__testcapi@@Base+0x95ac>
   1274c:	ldr	x8, [sp, #136]
   12750:	add	x9, sp, #0x30
   12754:	cmp	x8, x9
   12758:	b.eq	12774 <PyInit__testcapi@@Base+0x95b8>  // b.none
   1275c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12760:	add	x1, x1, #0xf66
   12764:	b	12680 <PyInit__testcapi@@Base+0x94c4>
   12768:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   1276c:	add	x1, x1, #0xf58
   12770:	b	12680 <PyInit__testcapi@@Base+0x94c4>
   12774:	ldr	x8, [sp, #96]
   12778:	str	xzr, [sp, #136]
   1277c:	cmp	x8, #0x2
   12780:	b.ne	127b4 <PyInit__testcapi@@Base+0x95f8>  // b.any
   12784:	ldr	x8, [sp, #104]
   12788:	cmp	x8, #0x5
   1278c:	b.ne	127b4 <PyInit__testcapi@@Base+0x95f8>  // b.any
   12790:	cmp	w19, #0x2
   12794:	str	xzr, [sp, #128]
   12798:	b.eq	127c0 <PyInit__testcapi@@Base+0x9604>  // b.none
   1279c:	cmp	w19, #0x1
   127a0:	b.eq	127cc <PyInit__testcapi@@Base+0x9610>  // b.none
   127a4:	cbnz	w19, 127d4 <PyInit__testcapi@@Base+0x9618>
   127a8:	mov	x0, x20
   127ac:	bl	8a10 <PyMem_RawFree@plt>
   127b0:	b	127d4 <PyInit__testcapi@@Base+0x9618>
   127b4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   127b8:	add	x1, x1, #0xf7b
   127bc:	b	12680 <PyInit__testcapi@@Base+0x94c4>
   127c0:	mov	x0, x20
   127c4:	bl	87c0 <PyObject_Free@plt>
   127c8:	b	127d4 <PyInit__testcapi@@Base+0x9618>
   127cc:	mov	x0, x20
   127d0:	bl	83d0 <PyMem_Free@plt>
   127d4:	ldr	x8, [sp, #136]
   127d8:	add	x9, sp, #0x30
   127dc:	cmp	x8, x9
   127e0:	b.eq	127f0 <PyInit__testcapi@@Base+0x9634>  // b.none
   127e4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   127e8:	add	x1, x1, #0xf9a
   127ec:	b	12680 <PyInit__testcapi@@Base+0x94c4>
   127f0:	ldr	x8, [sp, #128]
   127f4:	str	xzr, [sp, #136]
   127f8:	cmp	x8, x20
   127fc:	b.eq	1280c <PyInit__testcapi@@Base+0x9650>  // b.none
   12800:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe44>
   12804:	add	x1, x1, #0xfb4
   12808:	b	12680 <PyInit__testcapi@@Base+0x94c4>
   1280c:	adrp	x20, 26000 <PyInit__testcapi@@Base+0x1ce44>
   12810:	ldr	x20, [x20, #4016]
   12814:	ldr	x8, [x20]
   12818:	add	x8, x8, #0x1
   1281c:	str	x8, [x20]
   12820:	b	12694 <PyInit__testcapi@@Base+0x94d8>
   12824:	ldp	x8, x2, [x0]
   12828:	str	x0, [x0, #88]
   1282c:	str	x1, [x0, #40]
   12830:	mov	x0, x8
   12834:	br	x2
   12838:	ldr	x8, [x0]
   1283c:	ldr	x3, [x0, #16]
   12840:	str	x0, [x0, #88]
   12844:	stp	x1, x2, [x0, #48]
   12848:	mov	x0, x8
   1284c:	br	x3
   12850:	ldr	x8, [x0]
   12854:	ldr	x3, [x0, #24]
   12858:	str	x0, [x0, #88]
   1285c:	stp	x1, x2, [x0, #64]
   12860:	mov	x0, x8
   12864:	br	x3
   12868:	ldr	x8, [x0]
   1286c:	ldr	x2, [x0, #32]
   12870:	stp	x1, x0, [x0, #80]
   12874:	mov	x0, x8
   12878:	br	x2
   1287c:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   12880:	add	x9, x9, #0xf08
   12884:	ldr	x8, [x9, #8]
   12888:	ldrsw	x10, [x9]
   1288c:	add	x8, x8, #0x1
   12890:	cmp	x8, x10
   12894:	str	x8, [x9, #8]
   12898:	b.le	128b4 <PyInit__testcapi@@Base+0x96f8>
   1289c:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   128a0:	ldrsw	x9, [x9, #3852]
   128a4:	cmp	w9, #0x1
   128a8:	b.lt	128bc <PyInit__testcapi@@Base+0x9700>  // b.tstop
   128ac:	cmp	x8, x9
   128b0:	b.le	128bc <PyInit__testcapi@@Base+0x9700>
   128b4:	ldp	x0, x2, [x0]
   128b8:	br	x2
   128bc:	mov	x0, xzr
   128c0:	ret
   128c4:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   128c8:	add	x9, x9, #0xf08
   128cc:	ldr	x8, [x9, #8]
   128d0:	ldrsw	x10, [x9]
   128d4:	add	x8, x8, #0x1
   128d8:	cmp	x8, x10
   128dc:	str	x8, [x9, #8]
   128e0:	b.le	128fc <PyInit__testcapi@@Base+0x9740>
   128e4:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   128e8:	ldrsw	x9, [x9, #3852]
   128ec:	cmp	w9, #0x1
   128f0:	b.lt	12908 <PyInit__testcapi@@Base+0x974c>  // b.tstop
   128f4:	cmp	x8, x9
   128f8:	b.le	12908 <PyInit__testcapi@@Base+0x974c>
   128fc:	ldr	x3, [x0, #16]
   12900:	ldr	x0, [x0]
   12904:	br	x3
   12908:	mov	x0, xzr
   1290c:	ret
   12910:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   12914:	add	x9, x9, #0xf08
   12918:	ldr	x8, [x9, #8]
   1291c:	ldrsw	x10, [x9]
   12920:	add	x8, x8, #0x1
   12924:	cmp	x8, x10
   12928:	str	x8, [x9, #8]
   1292c:	b.le	12948 <PyInit__testcapi@@Base+0x978c>
   12930:	adrp	x9, 2a000 <PyInit__testcapi@@Base+0x20e44>
   12934:	ldrsw	x9, [x9, #3852]
   12938:	cmp	w9, #0x1
   1293c:	b.lt	12954 <PyInit__testcapi@@Base+0x9798>  // b.tstop
   12940:	cmp	x8, x9
   12944:	b.le	12954 <PyInit__testcapi@@Base+0x9798>
   12948:	ldr	x3, [x0, #24]
   1294c:	ldr	x0, [x0]
   12950:	br	x3
   12954:	mov	x0, xzr
   12958:	ret
   1295c:	ldr	x2, [x0, #32]
   12960:	ldr	x0, [x0]
   12964:	br	x2
   12968:	stp	x29, x30, [sp, #-48]!
   1296c:	str	x21, [sp, #16]
   12970:	stp	x20, x19, [sp, #32]
   12974:	mov	x29, sp
   12978:	mov	x19, x0
   1297c:	ldr	x0, [x0]
   12980:	bl	8b90 <PyThread_release_lock@plt>
   12984:	bl	86e0 <PyGILState_Ensure@plt>
   12988:	ldr	x21, [x19, #16]
   1298c:	mov	w20, w0
   12990:	ldr	x8, [x21, #8]
   12994:	ldrb	w9, [x8, #169]
   12998:	tbz	w9, #3, 129a8 <PyInit__testcapi@@Base+0x97ec>
   1299c:	ldr	x8, [x8, #56]
   129a0:	ldr	x8, [x21, x8]
   129a4:	cbnz	x8, 129c0 <PyInit__testcapi@@Base+0x9804>
   129a8:	mov	x0, x21
   129ac:	mov	x1, xzr
   129b0:	mov	x2, xzr
   129b4:	mov	x3, xzr
   129b8:	bl	8f00 <_PyObject_MakeTpCall@plt>
   129bc:	b	129e4 <PyInit__testcapi@@Base+0x9828>
   129c0:	mov	x0, x21
   129c4:	mov	x1, xzr
   129c8:	mov	x2, xzr
   129cc:	mov	x3, xzr
   129d0:	blr	x8
   129d4:	mov	x1, x0
   129d8:	mov	x0, x21
   129dc:	mov	x2, xzr
   129e0:	bl	8a80 <_Py_CheckFunctionResult@plt>
   129e4:	mov	x21, x0
   129e8:	ldr	x0, [x19, #16]
   129ec:	cbz	x0, 12a08 <PyInit__testcapi@@Base+0x984c>
   129f0:	str	xzr, [x19, #16]
   129f4:	ldr	x8, [x0]
   129f8:	subs	x8, x8, #0x1
   129fc:	str	x8, [x0]
   12a00:	b.ne	12a08 <PyInit__testcapi@@Base+0x984c>  // b.any
   12a04:	bl	8560 <_Py_Dealloc@plt>
   12a08:	cbnz	x21, 12a14 <PyInit__testcapi@@Base+0x9858>
   12a0c:	bl	8720 <PyErr_Print@plt>
   12a10:	b	12a2c <PyInit__testcapi@@Base+0x9870>
   12a14:	ldr	x8, [x21]
   12a18:	subs	x8, x8, #0x1
   12a1c:	str	x8, [x21]
   12a20:	b.ne	12a2c <PyInit__testcapi@@Base+0x9870>  // b.any
   12a24:	mov	x0, x21
   12a28:	bl	8560 <_Py_Dealloc@plt>
   12a2c:	mov	w0, w20
   12a30:	bl	8360 <PyGILState_Release@plt>
   12a34:	ldr	x0, [x19, #8]
   12a38:	bl	8b90 <PyThread_release_lock@plt>
   12a3c:	bl	8550 <PyThread_exit_thread@plt>
   12a40:	b	87c0 <PyObject_Free@plt>
   12a44:	sub	sp, sp, #0xa0
   12a48:	stp	x29, x30, [sp, #112]
   12a4c:	str	x21, [sp, #128]
   12a50:	stp	x20, x19, [sp, #144]
   12a54:	add	x29, sp, #0x70
   12a58:	mov	x20, x2
   12a5c:	mov	x21, x1
   12a60:	str	xzr, [x29, #24]
   12a64:	stur	xzr, [x29, #-8]
   12a68:	bl	8cf0 <_PyObject_New@plt>
   12a6c:	mov	x19, x0
   12a70:	cbz	x0, 12b7c <PyInit__testcapi@@Base+0x99c0>
   12a74:	movi	v0.2d, #0x0
   12a78:	mov	x4, x19
   12a7c:	str	q0, [x4, #16]!
   12a80:	mov	x11, x4
   12a84:	mov	x8, x4
   12a88:	mov	x9, x4
   12a8c:	mov	x10, x4
   12a90:	str	q0, [x11, #64]!
   12a94:	add	x17, x4, #0x48
   12a98:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e44>
   12a9c:	adrp	x3, 2a000 <PyInit__testcapi@@Base+0x20e44>
   12aa0:	add	x5, x4, #0x1
   12aa4:	add	x6, x4, #0x2
   12aa8:	add	x7, x4, #0x4
   12aac:	add	x12, x4, #0x6
   12ab0:	add	x13, x4, #0x8
   12ab4:	add	x14, x4, #0xc
   12ab8:	add	x15, x4, #0x18
   12abc:	add	x16, x4, #0x28
   12ac0:	str	q0, [x8, #16]!
   12ac4:	str	q0, [x9, #32]!
   12ac8:	str	q0, [x10, #48]!
   12acc:	stp	x11, x17, [sp, #80]
   12ad0:	sub	x11, x29, #0x8
   12ad4:	add	x17, x29, #0x18
   12ad8:	add	x2, x2, #0x5d0
   12adc:	add	x3, x3, #0x890
   12ae0:	mov	x0, x21
   12ae4:	mov	x1, x20
   12ae8:	stp	x16, x10, [sp, #48]
   12aec:	stp	x15, x9, [sp, #32]
   12af0:	stp	x14, x8, [sp, #16]
   12af4:	stp	x17, x11, [sp, #64]
   12af8:	stp	x12, x13, [sp]
   12afc:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
   12b00:	cbz	w0, 12b4c <PyInit__testcapi@@Base+0x9990>
   12b04:	ldr	x1, [x29, #24]
   12b08:	cbz	x1, 12b6c <PyInit__testcapi@@Base+0x99b0>
   12b0c:	ldur	x8, [x29, #-8]
   12b10:	cmp	x8, #0x6
   12b14:	b.lt	12b74 <PyInit__testcapi@@Base+0x99b8>  // b.tstop
   12b18:	ldr	x8, [x19]
   12b1c:	subs	x8, x8, #0x1
   12b20:	str	x8, [x19]
   12b24:	b.ne	12b30 <PyInit__testcapi@@Base+0x9974>  // b.any
   12b28:	mov	x0, x19
   12b2c:	bl	8560 <_Py_Dealloc@plt>
   12b30:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   12b34:	ldr	x8, [x8, #3944]
   12b38:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12b3c:	add	x1, x1, #0x56d
   12b40:	ldr	x0, [x8]
   12b44:	bl	8670 <PyErr_SetString@plt>
   12b48:	b	12b64 <PyInit__testcapi@@Base+0x99a8>
   12b4c:	ldr	x8, [x19]
   12b50:	subs	x8, x8, #0x1
   12b54:	str	x8, [x19]
   12b58:	b.ne	12b64 <PyInit__testcapi@@Base+0x99a8>  // b.any
   12b5c:	mov	x0, x19
   12b60:	bl	8560 <_Py_Dealloc@plt>
   12b64:	mov	x19, xzr
   12b68:	b	12b7c <PyInit__testcapi@@Base+0x99c0>
   12b6c:	strb	wzr, [x19, #72]
   12b70:	b	12b7c <PyInit__testcapi@@Base+0x99c0>
   12b74:	add	x0, x19, #0x48
   12b78:	bl	8cb0 <strcpy@plt>
   12b7c:	mov	x0, x19
   12b80:	ldp	x20, x19, [sp, #144]
   12b84:	ldr	x21, [sp, #128]
   12b88:	ldp	x29, x30, [sp, #112]
   12b8c:	add	sp, sp, #0xa0
   12b90:	ret
   12b94:	ldr	x8, [x0, #8]
   12b98:	ldr	x1, [x8, #320]
   12b9c:	br	x1
   12ba0:	adrp	x8, 16000 <PyInit__testcapi@@Base+0xce44>
   12ba4:	mov	x3, x1
   12ba8:	add	x8, x8, #0x5a9
   12bac:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12bb0:	add	x1, x1, #0x5b0
   12bb4:	mov	x2, x0
   12bb8:	mov	x0, x8
   12bbc:	b	8ea0 <_Py_BuildValue_SizeT@plt>
   12bc0:	adrp	x8, 16000 <PyInit__testcapi@@Base+0xce44>
   12bc4:	mov	x3, x1
   12bc8:	add	x8, x8, #0x5a9
   12bcc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12bd0:	add	x1, x1, #0x5af
   12bd4:	mov	x2, x0
   12bd8:	mov	x0, x8
   12bdc:	b	8ea0 <_Py_BuildValue_SizeT@plt>
   12be0:	adrp	x0, 16000 <PyInit__testcapi@@Base+0xce44>
   12be4:	add	x0, x0, #0x175
   12be8:	b	8ea0 <_Py_BuildValue_SizeT@plt>
   12bec:	stp	x29, x30, [sp, #-32]!
   12bf0:	str	x19, [sp, #16]
   12bf4:	mov	x29, sp
   12bf8:	mov	x19, x0
   12bfc:	ldr	x0, [x0, #16]
   12c00:	cbz	x0, 12c1c <PyInit__testcapi@@Base+0x9a60>
   12c04:	str	xzr, [x19, #16]
   12c08:	ldr	x8, [x0]
   12c0c:	subs	x8, x8, #0x1
   12c10:	str	x8, [x0]
   12c14:	b.ne	12c1c <PyInit__testcapi@@Base+0x9a60>  // b.any
   12c18:	bl	8560 <_Py_Dealloc@plt>
   12c1c:	ldr	x8, [x19, #8]
   12c20:	mov	x0, x19
   12c24:	ldr	x19, [sp, #16]
   12c28:	ldr	x1, [x8, #320]
   12c2c:	ldp	x29, x30, [sp], #32
   12c30:	br	x1
   12c34:	stp	x29, x30, [sp, #-32]!
   12c38:	str	x19, [sp, #16]
   12c3c:	mov	x29, sp
   12c40:	mov	x8, x1
   12c44:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12c48:	mov	x19, x0
   12c4c:	add	x1, x1, #0x5d5
   12c50:	add	x4, x29, #0x18
   12c54:	mov	w2, #0x1                   	// #1
   12c58:	mov	w3, #0x1                   	// #1
   12c5c:	mov	x0, x8
   12c60:	bl	8960 <PyArg_UnpackTuple@plt>
   12c64:	cbz	w0, 12c94 <PyInit__testcapi@@Base+0x9ad8>
   12c68:	ldr	x8, [x19, #304]
   12c6c:	mov	x0, x19
   12c70:	mov	x1, xzr
   12c74:	blr	x8
   12c78:	cbz	x0, 12c98 <PyInit__testcapi@@Base+0x9adc>
   12c7c:	ldr	x8, [x29, #24]
   12c80:	ldr	x9, [x8]
   12c84:	add	x9, x9, #0x1
   12c88:	str	x9, [x8]
   12c8c:	str	x8, [x0, #16]
   12c90:	b	12c98 <PyInit__testcapi@@Base+0x9adc>
   12c94:	mov	x0, xzr
   12c98:	ldr	x19, [sp, #16]
   12c9c:	ldp	x29, x30, [sp], #32
   12ca0:	ret
   12ca4:	ldr	x0, [x0, #16]
   12ca8:	ldr	x8, [x0]
   12cac:	add	x8, x8, #0x1
   12cb0:	str	x8, [x0]
   12cb4:	ret
   12cb8:	stp	x29, x30, [sp, #-16]!
   12cbc:	mov	x29, sp
   12cc0:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   12cc4:	ldr	x8, [x8, #4064]
   12cc8:	ldr	x8, [x8, #312]
   12ccc:	blr	x8
   12cd0:	str	wzr, [x0, #40]
   12cd4:	ldp	x29, x30, [sp], #16
   12cd8:	ret
   12cdc:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce44>
   12ce0:	ldr	x8, [x8, #4016]
   12ce4:	cmp	x1, x8
   12ce8:	b.eq	12cf4 <PyInit__testcapi@@Base+0x9b38>  // b.none
   12cec:	cbz	x1, 12cf4 <PyInit__testcapi@@Base+0x9b38>
   12cf0:	b	86a0 <PyMethod_New@plt>
   12cf4:	ldr	x8, [x0]
   12cf8:	add	x8, x8, #0x1
   12cfc:	str	x8, [x0]
   12d00:	ret
   12d04:	stp	x29, x30, [sp, #-16]!
   12d08:	mov	x29, sp
   12d0c:	ldr	x8, [x0, #304]
   12d10:	mov	x1, xzr
   12d14:	blr	x8
   12d18:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
   12d1c:	add	x8, x8, #0xd2c
   12d20:	str	x8, [x0, #16]
   12d24:	ldp	x29, x30, [sp], #16
   12d28:	ret
   12d2c:	ldr	x8, [x0, #16]
   12d30:	cmp	x8, #0x0
   12d34:	cset	w0, ne  // ne = any
   12d38:	b	88d0 <PyBool_FromLong@plt>
   12d3c:	ldr	x8, [x1]
   12d40:	mov	x0, x1
   12d44:	add	x8, x8, #0x1
   12d48:	str	x8, [x1]
   12d4c:	ret
   12d50:	ldr	x8, [x0]
   12d54:	add	x8, x8, #0x1
   12d58:	str	x8, [x0]
   12d5c:	ret
   12d60:	stp	x29, x30, [sp, #-16]!
   12d64:	mov	x29, sp
   12d68:	bl	8cf0 <_PyObject_New@plt>
   12d6c:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e44>
   12d70:	add	x8, x8, #0xd2c
   12d74:	stp	xzr, x8, [x0, #16]
   12d78:	ldp	x29, x30, [sp], #16
   12d7c:	ret
   12d80:	stp	x29, x30, [sp, #-32]!
   12d84:	str	x19, [sp, #16]
   12d88:	mov	x29, sp
   12d8c:	mov	x19, x0
   12d90:	ldr	x0, [x0, #16]
   12d94:	cbz	x0, 12db0 <PyInit__testcapi@@Base+0x9bf4>
   12d98:	str	xzr, [x19, #16]
   12d9c:	ldr	x8, [x0]
   12da0:	subs	x8, x8, #0x1
   12da4:	str	x8, [x0]
   12da8:	b.ne	12db0 <PyInit__testcapi@@Base+0x9bf4>  // b.any
   12dac:	bl	8560 <_Py_Dealloc@plt>
   12db0:	ldr	x8, [x19, #8]
   12db4:	mov	x0, x19
   12db8:	ldr	x19, [sp, #16]
   12dbc:	ldr	x1, [x8, #320]
   12dc0:	ldp	x29, x30, [sp], #32
   12dc4:	br	x1
   12dc8:	ldr	x1, [x0, #16]
   12dcc:	mov	w0, #0x1                   	// #1
   12dd0:	b	9040 <PyTuple_Pack@plt>
   12dd4:	stp	x29, x30, [sp, #-32]!
   12dd8:	str	x19, [sp, #16]
   12ddc:	mov	x29, sp
   12de0:	adrp	x0, 28000 <PyInit__testcapi@@Base+0x1ee44>
   12de4:	add	x0, x0, #0x7e0
   12de8:	mov	x19, x1
   12dec:	bl	8cf0 <_PyObject_New@plt>
   12df0:	cbz	x0, 12e04 <PyInit__testcapi@@Base+0x9c48>
   12df4:	ldr	x8, [x19]
   12df8:	add	x8, x8, #0x1
   12dfc:	str	x8, [x19]
   12e00:	str	x19, [x0, #16]
   12e04:	ldr	x19, [sp, #16]
   12e08:	ldp	x29, x30, [sp], #32
   12e0c:	ret
   12e10:	stp	x29, x30, [sp, #-16]!
   12e14:	mov	x29, sp
   12e18:	adrp	x0, 28000 <PyInit__testcapi@@Base+0x1ee44>
   12e1c:	add	x0, x0, #0xb20
   12e20:	ldr	x8, [x0]
   12e24:	mov	x1, xzr
   12e28:	add	x8, x8, #0x1
   12e2c:	str	x8, [x0]
   12e30:	bl	8580 <PyErr_SetObject@plt>
   12e34:	mov	w0, #0xffffffff            	// #-1
   12e38:	ldp	x29, x30, [sp], #16
   12e3c:	ret
   12e40:	mov	w8, #0xa                   	// #10
   12e44:	str	w8, [x0, #16]
   12e48:	mov	w0, wzr
   12e4c:	ret
   12e50:	stp	x29, x30, [sp, #-32]!
   12e54:	stp	x20, x19, [sp, #16]
   12e58:	mov	x29, sp
   12e5c:	ldr	x19, [x0, #8]
   12e60:	mov	x20, x0
   12e64:	bl	9070 <PyObject_GC_UnTrack@plt>
   12e68:	mov	x0, x20
   12e6c:	bl	8590 <PyObject_GC_Del@plt>
   12e70:	ldr	x8, [x19]
   12e74:	subs	x8, x8, #0x1
   12e78:	str	x8, [x19]
   12e7c:	b.eq	12e8c <PyInit__testcapi@@Base+0x9cd0>  // b.none
   12e80:	ldp	x20, x19, [sp, #16]
   12e84:	ldp	x29, x30, [sp], #32
   12e88:	ret
   12e8c:	mov	x0, x19
   12e90:	ldp	x20, x19, [sp, #16]
   12e94:	ldp	x29, x30, [sp], #32
   12e98:	b	8560 <_Py_Dealloc@plt>
   12e9c:	stp	x29, x30, [sp, #-32]!
   12ea0:	str	x19, [sp, #16]
   12ea4:	mov	x29, sp
   12ea8:	ldr	x19, [x0, #8]
   12eac:	bl	87c0 <PyObject_Free@plt>
   12eb0:	ldr	x8, [x19]
   12eb4:	subs	x8, x8, #0x1
   12eb8:	str	x8, [x19]
   12ebc:	b.eq	12ecc <PyInit__testcapi@@Base+0x9d10>  // b.none
   12ec0:	ldr	x19, [sp, #16]
   12ec4:	ldp	x29, x30, [sp], #32
   12ec8:	ret
   12ecc:	mov	x0, x19
   12ed0:	ldr	x19, [sp, #16]
   12ed4:	ldp	x29, x30, [sp], #32
   12ed8:	b	8560 <_Py_Dealloc@plt>
   12edc:	mov	w8, #0xa                   	// #10
   12ee0:	mov	w9, #0x14                  	// #20
   12ee4:	str	w8, [x0, #16]
   12ee8:	str	w9, [x0, #24]
   12eec:	mov	w0, wzr
   12ef0:	ret
   12ef4:	stp	x29, x30, [sp, #-48]!
   12ef8:	str	x21, [sp, #16]
   12efc:	stp	x20, x19, [sp, #32]
   12f00:	mov	x29, sp
   12f04:	mov	x20, x0
   12f08:	ldr	x0, [x0, #8]
   12f0c:	mov	x21, x1
   12f10:	mov	w1, #0x30                  	// #48
   12f14:	mov	x19, x2
   12f18:	bl	85a0 <PyType_GetSlot@plt>
   12f1c:	mov	w1, #0x3c                  	// #60
   12f20:	bl	85a0 <PyType_GetSlot@plt>
   12f24:	mov	x8, x0
   12f28:	mov	x0, x20
   12f2c:	mov	x1, x21
   12f30:	mov	x2, x19
   12f34:	blr	x8
   12f38:	ldp	x20, x19, [sp, #32]
   12f3c:	ldr	x21, [sp, #16]
   12f40:	mov	w0, wzr
   12f44:	ldp	x29, x30, [sp], #48
   12f48:	ret
   12f4c:	sub	sp, sp, #0x40
   12f50:	stp	x29, x30, [sp, #16]
   12f54:	str	x21, [sp, #32]
   12f58:	stp	x20, x19, [sp, #48]
   12f5c:	add	x29, sp, #0x10
   12f60:	mov	x21, x0
   12f64:	add	x0, x29, #0x18
   12f68:	add	x1, sp, #0x8
   12f6c:	mov	x2, sp
   12f70:	bl	8ce0 <PyErr_Fetch@plt>
   12f74:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de44>
   12f78:	add	x0, x0, #0x738
   12f7c:	bl	89f0 <PyState_FindModule@plt>
   12f80:	cbz	x0, 13094 <PyInit__testcapi@@Base+0x9ed8>
   12f84:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12f88:	add	x1, x1, #0x692
   12f8c:	mov	x19, x0
   12f90:	bl	84a0 <PyObject_GetAttrString@plt>
   12f94:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12f98:	mov	x20, x0
   12f9c:	add	x1, x1, #0x66f
   12fa0:	mov	x0, x19
   12fa4:	bl	84a0 <PyObject_GetAttrString@plt>
   12fa8:	mov	x19, x0
   12fac:	cbz	x20, 13034 <PyInit__testcapi@@Base+0x9e78>
   12fb0:	cbz	x19, 13034 <PyInit__testcapi@@Base+0x9e78>
   12fb4:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12fb8:	add	x1, x1, #0x6b1
   12fbc:	mov	x0, x21
   12fc0:	mov	x2, x19
   12fc4:	bl	8510 <PyObject_SetAttrString@plt>
   12fc8:	tbnz	w0, #31, 13040 <PyInit__testcapi@@Base+0x9e84>
   12fcc:	ldr	x0, [x20]
   12fd0:	bl	87f0 <PyLong_FromSsize_t@plt>
   12fd4:	mov	x21, x0
   12fd8:	cbz	x0, 13044 <PyInit__testcapi@@Base+0x9e88>
   12fdc:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   12fe0:	add	x1, x1, #0x6bb
   12fe4:	mov	x0, x20
   12fe8:	mov	x2, x21
   12fec:	bl	8510 <PyObject_SetAttrString@plt>
   12ff0:	tbnz	w0, #31, 13044 <PyInit__testcapi@@Base+0x9e88>
   12ff4:	ldr	x8, [x21]
   12ff8:	subs	x8, x8, #0x1
   12ffc:	str	x8, [x21]
   13000:	b.ne	1300c <PyInit__testcapi@@Base+0x9e50>  // b.any
   13004:	mov	x0, x21
   13008:	bl	8560 <_Py_Dealloc@plt>
   1300c:	ldr	x0, [x19]
   13010:	bl	87f0 <PyLong_FromSsize_t@plt>
   13014:	mov	x21, x0
   13018:	cbz	x0, 13044 <PyInit__testcapi@@Base+0x9e88>
   1301c:	adrp	x1, 16000 <PyInit__testcapi@@Base+0xce44>
   13020:	add	x1, x1, #0x6bb
   13024:	mov	x0, x19
   13028:	mov	x2, x21
   1302c:	bl	8510 <PyObject_SetAttrString@plt>
   13030:	b	13044 <PyInit__testcapi@@Base+0x9e88>
   13034:	mov	x21, xzr
   13038:	cbnz	x20, 13044 <PyInit__testcapi@@Base+0x9e88>
   1303c:	b	1305c <PyInit__testcapi@@Base+0x9ea0>
   13040:	mov	x21, xzr
   13044:	ldr	x8, [x20]
   13048:	subs	x8, x8, #0x1
   1304c:	str	x8, [x20]
   13050:	b.ne	1305c <PyInit__testcapi@@Base+0x9ea0>  // b.any
   13054:	mov	x0, x20
   13058:	bl	8560 <_Py_Dealloc@plt>
   1305c:	cbz	x19, 13078 <PyInit__testcapi@@Base+0x9ebc>
   13060:	ldr	x8, [x19]
   13064:	subs	x8, x8, #0x1
   13068:	str	x8, [x19]
   1306c:	b.ne	13078 <PyInit__testcapi@@Base+0x9ebc>  // b.any
   13070:	mov	x0, x19
   13074:	bl	8560 <_Py_Dealloc@plt>
   13078:	cbz	x21, 13094 <PyInit__testcapi@@Base+0x9ed8>
   1307c:	ldr	x8, [x21]
   13080:	subs	x8, x8, #0x1
   13084:	str	x8, [x21]
   13088:	b.ne	13094 <PyInit__testcapi@@Base+0x9ed8>  // b.any
   1308c:	mov	x0, x21
   13090:	bl	8560 <_Py_Dealloc@plt>
   13094:	ldr	x0, [x29, #24]
   13098:	ldp	x2, x1, [sp]
   1309c:	bl	8380 <PyErr_Restore@plt>
   130a0:	ldp	x20, x19, [sp, #48]
   130a4:	ldr	x21, [sp, #32]
   130a8:	ldp	x29, x30, [sp, #16]
   130ac:	add	sp, sp, #0x40
   130b0:	ret

Disassembly of section .fini:

00000000000130b4 <.fini>:
   130b4:	stp	x29, x30, [sp, #-16]!
   130b8:	mov	x29, sp
   130bc:	ldp	x29, x30, [sp], #16
   130c0:	ret
