
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ntfscomp.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xee0>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	w5, [x0, #152]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	ldr	w0, [x0, #144]
  18:	add	w3, w5, #0x9
  1c:	mov	x20, x1
  20:	add	w4, w0, #0x1
  24:	mov	w2, w0
  28:	lsr	w0, w0, w3
  2c:	cbnz	w0, 50 <grub_mod_init-0xe90>
  30:	ldr	x1, [x19, #160]
  34:	str	w4, [x19, #144]
  38:	mov	w0, #0x0                   	// #0
  3c:	ldrb	w1, [x1, x2]
  40:	strb	w1, [x20]
  44:	ldp	x19, x20, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	ldp	w0, w1, [x19, #8]
  54:	cmp	w0, w1
  58:	b.ge	f0 <grub_mod_init-0xdf0>  // b.tcont
  5c:	add	x1, x19, w0, sxtw #3
  60:	mov	w4, #0x1                   	// #1
  64:	ldr	w7, [x19, #148]
  68:	lsl	w3, w4, w3
  6c:	ldr	x0, [x19]
  70:	sxtw	x3, w3
  74:	ldp	w6, w2, [x1, #16]
  78:	ldr	x4, [x19, #160]
  7c:	add	w1, w2, w7
  80:	sub	w1, w1, w6
  84:	mov	x2, #0x0                   	// #0
  88:	lsl	w1, w1, w5
  8c:	bl	0 <grub_disk_read>
  90:	cbnz	w0, c8 <grub_mod_init-0xe18>
  94:	ldr	w1, [x19, #8]
  98:	ldr	w0, [x19, #148]
  9c:	add	x2, x19, w1, sxtw #3
  a0:	add	w0, w0, #0x1
  a4:	ldr	w2, [x2, #16]
  a8:	str	w0, [x19, #148]
  ac:	cmp	w0, w2
  b0:	b.cc	bc <grub_mod_init-0xe24>  // b.lo, b.ul, b.last
  b4:	add	w1, w1, #0x1
  b8:	str	w1, [x19, #8]
  bc:	mov	x2, #0x0                   	// #0
  c0:	mov	w4, #0x1                   	// #1
  c4:	b	30 <grub_mod_init-0xeb0>
  c8:	adrp	x0, 0 <grub_mod_init-0xee0>
  cc:	ldr	x0, [x0]
  d0:	ldr	w0, [x0]
  d4:	cbz	w0, 104 <grub_mod_init-0xddc>
  d8:	adrp	x0, 0 <grub_mod_init-0xee0>
  dc:	ldp	x19, x20, [sp, #16]
  e0:	ldr	x0, [x0]
  e4:	ldp	x29, x30, [sp], #32
  e8:	ldr	w0, [x0]
  ec:	ret
  f0:	adrp	x1, 0 <grub_mod_init-0xee0>
  f4:	mov	w0, #0x9                   	// #9
  f8:	ldr	x1, [x1]
  fc:	bl	0 <grub_error>
 100:	b	d4 <grub_mod_init-0xe0c>
 104:	ldr	w2, [x19, #144]
 108:	add	w4, w2, #0x1
 10c:	mov	w2, w2
 110:	b	30 <grub_mod_init-0xeb0>
 114:	nop
	...
 128:	stp	x29, x30, [sp, #-128]!
 12c:	mov	x29, sp
 130:	stp	x27, x28, [sp, #80]
 134:	mov	x28, x0
 138:	ldr	w0, [x0, #208]
 13c:	stp	x25, x26, [sp, #64]
 140:	mov	w25, #0x3                   	// #3
 144:	sub	w0, w25, w0
 148:	stp	wzr, w0, [sp, #100]
 14c:	cbz	x2, 208 <grub_mod_init-0xcd8>
 150:	stp	x19, x20, [sp, #16]
 154:	mov	x20, x1
 158:	stp	x23, x24, [sp, #48]
 15c:	mov	x23, x2
 160:	adrp	x24, 0 <grub_mod_init-0xee0>
 164:	stp	x21, x22, [sp, #32]
 168:	ldr	w5, [x28, #68]
 16c:	ldr	x3, [x28, #8]
 170:	tst	x3, #0xf
 174:	b.eq	210 <grub_mod_init-0xcd0>  // b.none
 178:	ldr	w2, [x28]
 17c:	and	w2, w2, #0x1
 180:	and	w0, w3, #0xf
 184:	mov	w21, #0x10                  	// #16
 188:	sub	w21, w21, w0
 18c:	ldr	w0, [sp, #104]
 190:	lsr	w21, w21, w0
 194:	cmp	x21, x23
 198:	csel	x21, x21, x23, ls  // ls = plast
 19c:	sub	x23, x23, x21
 1a0:	lsl	x22, x21, x0
 1a4:	cbz	w2, 464 <grub_mod_init-0xa7c>
 1a8:	add	x3, x3, x22
 1ac:	str	x3, [x28, #8]
 1b0:	cbnz	w5, 2d4 <grub_mod_init-0xc0c>
 1b4:	cbz	x20, 1f8 <grub_mod_init-0xce8>
 1b8:	lsl	x19, x21, #12
 1bc:	mov	x0, x20
 1c0:	mov	x2, x19
 1c4:	mov	w1, #0x0                   	// #0
 1c8:	bl	0 <grub_memset>
 1cc:	add	x20, x20, x19
 1d0:	adrp	x0, 0 <grub_mod_init-0xee0>
 1d4:	ldr	x0, [x0]
 1d8:	ldr	x4, [x0]
 1dc:	cbz	x4, 1f8 <grub_mod_init-0xce8>
 1e0:	ldr	x3, [x28, #224]
 1e4:	cbz	x3, 1f8 <grub_mod_init-0xce8>
 1e8:	lsl	w2, w21, #12
 1ec:	mov	w1, #0x0                   	// #0
 1f0:	mov	x0, #0x0                   	// #0
 1f4:	blr	x4
 1f8:	cbnz	x23, 168 <grub_mod_init-0xd78>
 1fc:	ldp	x19, x20, [sp, #16]
 200:	ldp	x21, x22, [sp, #32]
 204:	ldp	x23, x24, [sp, #48]
 208:	mov	w0, #0x0                   	// #0
 20c:	b	5f0 <grub_mod_init-0x8f0>
 210:	ldr	w0, [x28, #64]
 214:	cmp	w0, w5
 218:	b.eq	224 <grub_mod_init-0xcbc>  // b.none
 21c:	ldr	w0, [x28]
 220:	tbz	w0, #0, b2c <grub_mod_init-0x3b4>
 224:	ldr	w1, [x28, #208]
 228:	mov	w0, #0x1                   	// #1
 22c:	ldr	x4, [x28, #24]
 230:	add	w1, w1, #0x9
 234:	str	xzr, [x28, #64]
 238:	mov	w5, #0x0                   	// #0
 23c:	lsl	w0, w0, w1
 240:	stp	w0, w3, [x28, #200]
 244:	cmp	x3, x4
 248:	b.cc	280 <grub_mod_init-0xc60>  // b.lo, b.ul, b.last
 24c:	b	5cc <grub_mod_init-0x914>
 250:	str	w4, [x6, #72]
 254:	ldr	x2, [x28, #16]
 258:	ldr	x1, [x28, #32]
 25c:	sub	w1, w1, w2
 260:	add	w1, w1, w4
 264:	str	w1, [x6, #76]
 268:	str	w7, [x28, #68]
 26c:	bl	0 <grub_ntfs_read_run_list>
 270:	cbnz	w0, 5d8 <grub_mod_init-0x908>
 274:	ldr	w5, [x28, #68]
 278:	ldr	x3, [x28, #8]
 27c:	ldr	x4, [x28, #24]
 280:	add	x0, x3, #0x10
 284:	ldr	w2, [x28]
 288:	cmp	x0, x4
 28c:	add	x6, x28, w5, sxtw #3
 290:	add	w7, w5, #0x1
 294:	mov	x0, x28
 298:	and	w2, w2, #0x1
 29c:	b.ls	180 <grub_mod_init-0xd60>  // b.plast
 2a0:	cbz	w2, 250 <grub_mod_init-0xc90>
 2a4:	and	w0, w3, #0xf
 2a8:	mov	w21, #0x10                  	// #16
 2ac:	sub	w21, w21, w0
 2b0:	ldr	w0, [sp, #104]
 2b4:	lsr	w21, w21, w0
 2b8:	cmp	x23, x21
 2bc:	csel	x21, x23, x21, ls  // ls = plast
 2c0:	sub	x23, x23, x21
 2c4:	lsl	x22, x21, x0
 2c8:	add	x3, x3, x22
 2cc:	str	x3, [x28, #8]
 2d0:	cbz	w5, 1b4 <grub_mod_init-0xd2c>
 2d4:	add	x25, x28, #0x38
 2d8:	cbz	x21, 1f8 <grub_mod_init-0xce8>
 2dc:	ldr	w1, [x25, #152]
 2e0:	ldr	w0, [x25, #144]
 2e4:	add	w3, w1, #0x9
 2e8:	strb	wzr, [sp, #127]
 2ec:	add	w4, w0, #0x1
 2f0:	mov	w2, w0
 2f4:	lsr	w0, w0, w3
 2f8:	cbnz	w0, 3e8 <grub_mod_init-0xaf8>
 2fc:	nop
 300:	ldr	x0, [x25, #160]
 304:	str	w4, [x25, #144]
 308:	ldrb	w19, [x0, x2]
 30c:	add	x1, sp, #0x7f
 310:	mov	x0, x25
 314:	bl	0 <grub_mod_init-0xee0>
 318:	cbnz	w0, 6b4 <grub_mod_init-0x82c>
 31c:	ldrb	w26, [sp, #127]
 320:	ubfiz	w26, w26, #8, #8
 324:	add	w26, w19, w26
 328:	and	w0, w26, #0xffff
 32c:	str	w0, [sp, #100]
 330:	ldr	w0, [sp, #100]
 334:	and	w19, w0, #0xfff
 338:	add	w27, w19, #0x1
 33c:	cbz	x20, 6fc <grub_mod_init-0x7e4>
 340:	tbnz	w0, #15, 704 <grub_mod_init-0x7dc>
 344:	cmp	w27, #0x1, lsl #12
 348:	mov	x26, x20
 34c:	b.ne	a64 <grub_mod_init-0x47c>  // b.any
 350:	ldr	w1, [x25, #144]
 354:	mov	w22, #0x1                   	// #1
 358:	ldr	w19, [x25, #152]
 35c:	add	w19, w19, #0x9
 360:	lsl	w19, w22, w19
 364:	sub	w19, w19, w1
 368:	cmp	w27, w19
 36c:	csel	w19, w27, w19, le
 370:	cmp	x26, #0x0
 374:	ccmp	w19, #0x0, #0x4, ne  // ne = any
 378:	b.ne	678 <grub_mod_init-0x868>  // b.any
 37c:	add	w1, w19, w1
 380:	str	w1, [x25, #144]
 384:	sub	w19, w27, w19
 388:	ands	w27, w19, #0xffff
 38c:	b.ne	600 <grub_mod_init-0x8e0>  // b.any
 390:	cbz	x20, 398 <grub_mod_init-0xb48>
 394:	add	x20, x20, #0x1, lsl #12
 398:	adrp	x0, 0 <grub_mod_init-0xee0>
 39c:	ldr	x0, [x0]
 3a0:	ldr	x4, [x0]
 3a4:	cbz	x4, 3c0 <grub_mod_init-0xb20>
 3a8:	ldr	x3, [x28, #224]
 3ac:	cbz	x3, 3c0 <grub_mod_init-0xb20>
 3b0:	mov	w2, #0x1000                	// #4096
 3b4:	mov	w1, #0x0                   	// #0
 3b8:	mov	x0, #0x0                   	// #0
 3bc:	blr	x4
 3c0:	subs	x21, x21, #0x1
 3c4:	b.eq	1f8 <grub_mod_init-0xce8>  // b.none
 3c8:	ldr	w1, [x25, #152]
 3cc:	ldr	w0, [x25, #144]
 3d0:	add	w3, w1, #0x9
 3d4:	strb	wzr, [sp, #127]
 3d8:	add	w4, w0, #0x1
 3dc:	mov	w2, w0
 3e0:	lsr	w0, w0, w3
 3e4:	cbz	w0, 300 <grub_mod_init-0xbe0>
 3e8:	ldp	w0, w2, [x25, #8]
 3ec:	cmp	w0, w2
 3f0:	b.ge	a04 <grub_mod_init-0x4dc>  // b.tcont
 3f4:	add	x2, x28, w0, sxtw #3
 3f8:	ldr	w7, [x25, #148]
 3fc:	mov	w4, #0x1                   	// #1
 400:	lsl	w3, w4, w3
 404:	ldr	w6, [x2, #76]
 408:	sxtw	x3, w3
 40c:	ldr	w2, [x2, #72]
 410:	add	w6, w6, w7
 414:	ldr	x0, [x25]
 418:	sub	w6, w6, w2
 41c:	ldr	x4, [x25, #160]
 420:	mov	x2, #0x0                   	// #0
 424:	lsl	w1, w6, w1
 428:	bl	0 <grub_disk_read>
 42c:	cbnz	w0, a7c <grub_mod_init-0x464>
 430:	ldr	w1, [x25, #8]
 434:	ldr	w0, [x25, #148]
 438:	add	x2, x25, w1, sxtw #3
 43c:	add	w0, w0, #0x1
 440:	ldr	w2, [x2, #16]
 444:	str	w0, [x25, #148]
 448:	cmp	w0, w2
 44c:	b.cc	458 <grub_mod_init-0xa88>  // b.lo, b.ul, b.last
 450:	add	w1, w1, #0x1
 454:	str	w1, [x25, #8]
 458:	mov	x2, #0x0                   	// #0
 45c:	mov	w4, #0x1                   	// #1
 460:	b	300 <grub_mod_init-0xbe0>
 464:	ldr	w0, [x28, #64]
 468:	cmp	w0, w5
 46c:	b.ge	548 <grub_mod_init-0x998>  // b.tcont
 470:	cbz	x22, 1f8 <grub_mod_init-0xce8>
 474:	adrp	x21, 0 <grub_mod_init-0xee0>
 478:	b	480 <grub_mod_init-0xa60>
 47c:	cbz	x22, 1f8 <grub_mod_init-0xce8>
 480:	add	x7, x28, w0, sxtw #3
 484:	sxtw	x1, w0
 488:	mov	x4, x20
 48c:	mov	x2, #0x0                   	// #0
 490:	ldr	w6, [x7, #72]
 494:	sub	x19, x6, x3
 498:	cmp	x19, x22
 49c:	csel	x19, x19, x22, ls  // ls = plast
 4a0:	add	x3, x3, x19
 4a4:	str	x3, [x28, #8]
 4a8:	sub	x22, x22, x19
 4ac:	cbz	x20, 528 <grub_mod_init-0x9b8>
 4b0:	ldr	w1, [x7, #76]
 4b4:	ldr	w5, [x28, #208]
 4b8:	ldr	x0, [x28, #56]
 4bc:	sub	x1, x1, x6
 4c0:	add	x1, x1, x3
 4c4:	add	w3, w5, #0x9
 4c8:	lsl	x1, x1, x5
 4cc:	lsl	x3, x19, x3
 4d0:	bl	0 <grub_disk_read>
 4d4:	mov	w1, #0x0                   	// #0
 4d8:	mov	w2, w0
 4dc:	mov	x0, #0x0                   	// #0
 4e0:	cbnz	w2, 5d8 <grub_mod_init-0x908>
 4e4:	ldr	x2, [x21]
 4e8:	ldr	w4, [x28, #208]
 4ec:	ldr	x5, [x2]
 4f0:	add	w4, w4, #0x9
 4f4:	lsl	x4, x19, x4
 4f8:	mov	w2, w4
 4fc:	cbz	x5, 518 <grub_mod_init-0x9c8>
 500:	ldr	x3, [x28, #224]
 504:	cbz	x3, 518 <grub_mod_init-0x9c8>
 508:	blr	x5
 50c:	ldr	w4, [x28, #208]
 510:	add	w4, w4, #0x9
 514:	lsl	x4, x19, x4
 518:	ldp	w0, w5, [x28, #64]
 51c:	add	x20, x20, x4
 520:	ldr	x3, [x28, #8]
 524:	sxtw	x1, w0
 528:	add	x1, x28, x1, lsl #3
 52c:	ldr	w1, [x1, #72]
 530:	cmp	x1, x3
 534:	b.hi	540 <grub_mod_init-0x9a0>  // b.pmore
 538:	add	w0, w0, #0x1
 53c:	str	w0, [x28, #64]
 540:	cmp	w5, w0
 544:	b.gt	47c <grub_mod_init-0xa64>
 548:	cbz	x22, 1f8 <grub_mod_init-0xce8>
 54c:	cbz	x20, 5bc <grub_mod_init-0x924>
 550:	ldr	x5, [x28, #16]
 554:	mov	x4, x20
 558:	ldr	x1, [x28, #32]
 55c:	mov	x2, #0x0                   	// #0
 560:	ldr	x0, [x28, #56]
 564:	sub	x1, x1, x5
 568:	ldr	w5, [x28, #208]
 56c:	add	x1, x1, x3
 570:	add	w3, w5, #0x9
 574:	lsl	x1, x1, x5
 578:	lsl	x3, x22, x3
 57c:	bl	0 <grub_disk_read>
 580:	cbnz	w0, 5d8 <grub_mod_init-0x908>
 584:	adrp	x0, 0 <grub_mod_init-0xee0>
 588:	ldr	w2, [x28, #208]
 58c:	ldr	x0, [x0]
 590:	add	w2, w2, #0x9
 594:	lsl	x2, x22, x2
 598:	add	x20, x20, x2
 59c:	ldr	x4, [x0]
 5a0:	cbz	x4, 5b8 <grub_mod_init-0x928>
 5a4:	ldr	x3, [x28, #224]
 5a8:	cbz	x3, 5b8 <grub_mod_init-0x928>
 5ac:	mov	w1, #0x0                   	// #0
 5b0:	mov	x0, #0x0                   	// #0
 5b4:	blr	x4
 5b8:	ldr	x3, [x28, #8]
 5bc:	add	x3, x22, x3
 5c0:	str	x3, [x28, #8]
 5c4:	cbnz	x23, 168 <grub_mod_init-0xd78>
 5c8:	b	1fc <grub_mod_init-0xce4>
 5cc:	mov	x0, x28
 5d0:	bl	0 <grub_ntfs_read_run_list>
 5d4:	cbz	w0, 274 <grub_mod_init-0xc6c>
 5d8:	adrp	x0, 0 <grub_mod_init-0xee0>
 5dc:	ldp	x19, x20, [sp, #16]
 5e0:	ldr	x0, [x0]
 5e4:	ldp	x21, x22, [sp, #32]
 5e8:	ldp	x23, x24, [sp, #48]
 5ec:	ldr	w0, [x0]
 5f0:	ldp	x25, x26, [sp, #64]
 5f4:	ldp	x27, x28, [sp, #80]
 5f8:	ldp	x29, x30, [sp], #128
 5fc:	ret
 600:	ldp	w0, w1, [x25, #8]
 604:	cmp	w0, w1
 608:	b.ge	698 <grub_mod_init-0x848>  // b.tcont
 60c:	add	x4, x28, w0, sxtw #3
 610:	mov	x2, #0x0                   	// #0
 614:	ldp	w10, w9, [x25, #148]
 618:	ldp	w1, w8, [x4, #72]
 61c:	add	w3, w9, #0x9
 620:	ldr	x0, [x25]
 624:	add	w8, w8, w10
 628:	ldr	x4, [x25, #160]
 62c:	sub	w1, w8, w1
 630:	lsl	w3, w22, w3
 634:	lsl	w1, w1, w9
 638:	sxtw	x3, w3
 63c:	bl	0 <grub_disk_read>
 640:	mov	w1, w0
 644:	cbnz	w0, 6f0 <grub_mod_init-0x7f0>
 648:	ldr	w2, [x25, #8]
 64c:	ldr	w0, [x25, #148]
 650:	add	x3, x25, w2, sxtw #3
 654:	add	w0, w0, #0x1
 658:	ldr	w3, [x3, #16]
 65c:	str	w0, [x25, #148]
 660:	cmp	w0, w3
 664:	b.cc	670 <grub_mod_init-0x870>  // b.lo, b.ul, b.last
 668:	add	w2, w2, #0x1
 66c:	str	w2, [x25, #8]
 670:	str	wzr, [x25, #144]
 674:	b	358 <grub_mod_init-0xb88>
 678:	ldr	x3, [x25, #160]
 67c:	sxtw	x2, w19
 680:	mov	x0, x26
 684:	add	x26, x26, x2
 688:	add	x1, x3, w1, uxtw
 68c:	bl	0 <grub_memmove>
 690:	ldr	w1, [x25, #144]
 694:	b	37c <grub_mod_init-0xb64>
 698:	adrp	x0, 0 <grub_mod_init-0xee0>
 69c:	ldr	x1, [x0]
 6a0:	mov	w0, #0x9                   	// #9
 6a4:	bl	0 <grub_error>
 6a8:	cbnz	w0, 6dc <grub_mod_init-0x804>
 6ac:	ldr	w1, [x25, #144]
 6b0:	b	358 <grub_mod_init-0xb88>
 6b4:	ldr	x0, [x24]
 6b8:	ldr	w0, [x0]
 6bc:	cbz	w0, 330 <grub_mod_init-0xbb0>
 6c0:	ldp	x19, x20, [sp, #16]
 6c4:	ldp	x21, x22, [sp, #32]
 6c8:	ldp	x23, x24, [sp, #48]
 6cc:	ldp	x25, x26, [sp, #64]
 6d0:	ldp	x27, x28, [sp, #80]
 6d4:	ldp	x29, x30, [sp], #128
 6d8:	ret
 6dc:	ldr	x0, [x24]
 6e0:	ldr	w0, [x0]
 6e4:	cbnz	w0, 6c0 <grub_mod_init-0x820>
 6e8:	cbnz	x20, 394 <grub_mod_init-0xb4c>
 6ec:	b	398 <grub_mod_init-0xb48>
 6f0:	ldr	x0, [x24]
 6f4:	ldr	w0, [x0]
 6f8:	b	6a8 <grub_mod_init-0x838>
 6fc:	mov	x26, #0x0                   	// #0
 700:	b	350 <grub_mod_init-0xb90>
 704:	mov	w26, #0x0                   	// #0
 708:	mov	w19, #0x0                   	// #0
 70c:	ldr	w1, [x25, #152]
 710:	ldr	w0, [x25, #144]
 714:	add	w3, w1, #0x9
 718:	add	w4, w0, #0x1
 71c:	mov	w2, w0
 720:	lsr	w0, w0, w3
 724:	cbnz	w0, 8ec <grub_mod_init-0x5f4>
 728:	ldr	x0, [x25, #160]
 72c:	str	w4, [x25, #144]
 730:	ldrb	w26, [x0, x2]
 734:	sub	w6, w27, #0x1
 738:	ands	w27, w6, #0xffff
 73c:	b.eq	394 <grub_mod_init-0xb4c>  // b.none
 740:	ldr	w1, [x25, #152]
 744:	and	w9, w26, #0x1
 748:	ldr	w0, [x25, #144]
 74c:	mov	w22, #0x8                   	// #8
 750:	add	w3, w1, #0x9
 754:	lsr	w2, w0, w3
 758:	tbnz	w26, #0, 7b4 <grub_mod_init-0x72c>
 75c:	add	w4, w0, #0x1
 760:	mov	w0, w0
 764:	cbnz	w2, 85c <grub_mod_init-0x684>
 768:	ldr	x1, [x25, #160]
 76c:	str	w4, [x25, #144]
 770:	ldrb	w9, [x1, x0]
 774:	sub	w6, w27, #0x1
 778:	strb	w9, [x20, w19, uxtw]
 77c:	and	w27, w6, #0xffff
 780:	add	w19, w19, #0x1
 784:	lsr	w26, w26, #1
 788:	cbz	w27, 394 <grub_mod_init-0xb4c>
 78c:	cmp	w19, #0x1, lsl #12
 790:	b.hi	b00 <grub_mod_init-0x3e0>  // b.pmore
 794:	subs	w22, w22, #0x1
 798:	b.eq	70c <grub_mod_init-0x7d4>  // b.none
 79c:	ldr	w1, [x25, #152]
 7a0:	and	w9, w26, #0x1
 7a4:	ldr	w0, [x25, #144]
 7a8:	add	w3, w1, #0x9
 7ac:	lsr	w2, w0, w3
 7b0:	tbz	w26, #0, 75c <grub_mod_init-0x784>
 7b4:	strb	wzr, [sp, #127]
 7b8:	add	w4, w0, #0x1
 7bc:	mov	w0, w0
 7c0:	cbnz	w2, 964 <grub_mod_init-0x57c>
 7c4:	ldr	x1, [x25, #160]
 7c8:	str	w4, [x25, #144]
 7cc:	ldrb	w2, [x1, x0]
 7d0:	add	x1, sp, #0x7f
 7d4:	mov	x0, x25
 7d8:	str	w2, [sp, #108]
 7dc:	bl	0 <grub_mod_init-0xee0>
 7e0:	ldr	w2, [sp, #108]
 7e4:	cbnz	w0, 8dc <grub_mod_init-0x604>
 7e8:	ldrb	w0, [sp, #127]
 7ec:	ubfiz	w0, w0, #8, #8
 7f0:	add	w0, w2, w0
 7f4:	and	w0, w0, #0xffff
 7f8:	sub	w6, w27, #0x2
 7fc:	and	w27, w6, #0xffff
 800:	cbz	w19, b18 <grub_mod_init-0x3c8>
 804:	sub	w2, w19, #0x1
 808:	mov	w3, #0xc                   	// #12
 80c:	cmp	w2, #0xf
 810:	mov	w1, #0xfff                 	// #4095
 814:	b.ls	82c <grub_mod_init-0x6b4>  // b.plast
 818:	lsr	w2, w2, #1
 81c:	lsr	w1, w1, #1
 820:	cmp	w2, #0xf
 824:	sub	w3, w3, #0x1
 828:	b.hi	818 <grub_mod_init-0x6c8>  // b.pmore
 82c:	and	w2, w1, w0
 830:	add	w1, w19, #0x3
 834:	lsr	w0, w0, w3
 838:	add	w1, w2, w1
 83c:	mvn	w0, w0
 840:	add	w2, w19, w0
 844:	ldrb	w2, [x20, w2, uxtw]
 848:	strb	w2, [x20, w19, uxtw]
 84c:	add	w19, w19, #0x1
 850:	cmp	w19, w1
 854:	b.ne	840 <grub_mod_init-0x6a0>  // b.any
 858:	b	784 <grub_mod_init-0x75c>
 85c:	ldp	w0, w2, [x25, #8]
 860:	str	w9, [sp, #108]
 864:	cmp	w0, w2
 868:	b.ge	9dc <grub_mod_init-0x504>  // b.tcont
 86c:	add	x2, x28, w0, sxtw #3
 870:	ldr	w12, [x25, #148]
 874:	mov	w4, #0x1                   	// #1
 878:	lsl	w3, w4, w3
 87c:	ldp	w11, w10, [x2, #72]
 880:	sxtw	x3, w3
 884:	ldr	x0, [x25]
 888:	add	w10, w10, w12
 88c:	ldr	x4, [x25, #160]
 890:	sub	w10, w10, w11
 894:	mov	x2, #0x0                   	// #0
 898:	lsl	w1, w10, w1
 89c:	bl	0 <grub_disk_read>
 8a0:	ldr	w9, [sp, #108]
 8a4:	cbnz	w0, a48 <grub_mod_init-0x498>
 8a8:	ldr	w1, [x25, #8]
 8ac:	ldr	w0, [x25, #148]
 8b0:	add	x2, x25, w1, sxtw #3
 8b4:	add	w0, w0, #0x1
 8b8:	ldr	w2, [x2, #16]
 8bc:	str	w0, [x25, #148]
 8c0:	cmp	w0, w2
 8c4:	b.cc	8d0 <grub_mod_init-0x610>  // b.lo, b.ul, b.last
 8c8:	add	w1, w1, #0x1
 8cc:	str	w1, [x25, #8]
 8d0:	mov	x0, #0x0                   	// #0
 8d4:	mov	w4, #0x1                   	// #1
 8d8:	b	768 <grub_mod_init-0x778>
 8dc:	ldr	x0, [x24]
 8e0:	ldr	w0, [x0]
 8e4:	cbz	w0, 7f8 <grub_mod_init-0x6e8>
 8e8:	b	6c0 <grub_mod_init-0x820>
 8ec:	ldp	w0, w2, [x25, #8]
 8f0:	cmp	w0, w2
 8f4:	b.ge	a98 <grub_mod_init-0x448>  // b.tcont
 8f8:	add	x2, x28, w0, sxtw #3
 8fc:	ldr	w4, [x25, #148]
 900:	ldr	x0, [x25]
 904:	mov	w5, #0x1                   	// #1
 908:	ldp	w9, w8, [x2, #72]
 90c:	lsl	w3, w5, w3
 910:	sxtw	x3, w3
 914:	mov	x2, #0x0                   	// #0
 918:	add	w8, w8, w4
 91c:	ldr	x4, [x25, #160]
 920:	sub	w8, w8, w9
 924:	lsl	w1, w8, w1
 928:	bl	0 <grub_disk_read>
 92c:	cbnz	w0, a2c <grub_mod_init-0x4b4>
 930:	ldr	w1, [x25, #8]
 934:	ldr	w0, [x25, #148]
 938:	add	x2, x25, w1, sxtw #3
 93c:	add	w0, w0, #0x1
 940:	ldr	w2, [x2, #16]
 944:	str	w0, [x25, #148]
 948:	cmp	w0, w2
 94c:	b.cc	958 <grub_mod_init-0x588>  // b.lo, b.ul, b.last
 950:	add	w1, w1, #0x1
 954:	str	w1, [x25, #8]
 958:	mov	x2, #0x0                   	// #0
 95c:	mov	w4, #0x1                   	// #1
 960:	b	728 <grub_mod_init-0x7b8>
 964:	ldp	w0, w2, [x25, #8]
 968:	cmp	w0, w2
 96c:	b.ge	abc <grub_mod_init-0x424>  // b.tcont
 970:	add	x2, x28, w0, sxtw #3
 974:	mov	w4, #0x1                   	// #1
 978:	lsl	w3, w4, w3
 97c:	ldr	w10, [x25, #148]
 980:	ldr	x0, [x25]
 984:	sxtw	x3, w3
 988:	ldp	w4, w9, [x2, #72]
 98c:	mov	x2, #0x0                   	// #0
 990:	add	w9, w9, w10
 994:	sub	w9, w9, w4
 998:	ldr	x4, [x25, #160]
 99c:	lsl	w1, w9, w1
 9a0:	bl	0 <grub_disk_read>
 9a4:	cbnz	w0, ae4 <grub_mod_init-0x3fc>
 9a8:	ldr	w1, [x25, #8]
 9ac:	ldr	w0, [x25, #148]
 9b0:	add	x2, x25, w1, sxtw #3
 9b4:	add	w0, w0, #0x1
 9b8:	ldr	w2, [x2, #16]
 9bc:	str	w0, [x25, #148]
 9c0:	cmp	w0, w2
 9c4:	b.cc	9d0 <grub_mod_init-0x510>  // b.lo, b.ul, b.last
 9c8:	add	w1, w1, #0x1
 9cc:	str	w1, [x25, #8]
 9d0:	mov	x0, #0x0                   	// #0
 9d4:	mov	w4, #0x1                   	// #1
 9d8:	b	7c4 <grub_mod_init-0x71c>
 9dc:	adrp	x0, 0 <grub_mod_init-0xee0>
 9e0:	ldr	x1, [x0]
 9e4:	mov	w0, #0x9                   	// #9
 9e8:	bl	0 <grub_error>
 9ec:	ldr	w9, [sp, #108]
 9f0:	cbz	w0, a54 <grub_mod_init-0x48c>
 9f4:	ldr	x0, [x24]
 9f8:	ldr	w0, [x0]
 9fc:	cbz	w0, 774 <grub_mod_init-0x76c>
 a00:	b	6c0 <grub_mod_init-0x820>
 a04:	adrp	x1, 0 <grub_mod_init-0xee0>
 a08:	mov	w0, #0x9                   	// #9
 a0c:	ldr	x1, [x1]
 a10:	bl	0 <grub_error>
 a14:	cbz	w0, a88 <grub_mod_init-0x458>
 a18:	ldr	x0, [x24]
 a1c:	ldr	w0, [x0]
 a20:	cbnz	w0, 6c0 <grub_mod_init-0x820>
 a24:	mov	w19, #0x0                   	// #0
 a28:	b	30c <grub_mod_init-0xbd4>
 a2c:	ldr	x0, [x24]
 a30:	ldr	w0, [x0]
 a34:	cbz	w0, aac <grub_mod_init-0x434>
 a38:	ldr	x0, [x24]
 a3c:	ldr	w0, [x0]
 a40:	cbz	w0, 734 <grub_mod_init-0x7ac>
 a44:	b	6c0 <grub_mod_init-0x820>
 a48:	ldr	x0, [x24]
 a4c:	ldr	w0, [x0]
 a50:	cbnz	w0, 9f4 <grub_mod_init-0x4ec>
 a54:	ldr	w0, [x25, #144]
 a58:	add	w4, w0, #0x1
 a5c:	mov	w0, w0
 a60:	b	768 <grub_mod_init-0x778>
 a64:	adrp	x1, 0 <grub_mod_init-0xee0>
 a68:	mov	w0, #0x9                   	// #9
 a6c:	ldr	x1, [x1]
 a70:	bl	0 <grub_error>
 a74:	cbz	w0, 394 <grub_mod_init-0xb4c>
 a78:	b	5d8 <grub_mod_init-0x908>
 a7c:	ldr	x0, [x24]
 a80:	ldr	w0, [x0]
 a84:	cbnz	w0, a18 <grub_mod_init-0x4c8>
 a88:	ldr	w2, [x25, #144]
 a8c:	add	w4, w2, #0x1
 a90:	mov	w2, w2
 a94:	b	300 <grub_mod_init-0xbe0>
 a98:	adrp	x0, 0 <grub_mod_init-0xee0>
 a9c:	ldr	x1, [x0]
 aa0:	mov	w0, #0x9                   	// #9
 aa4:	bl	0 <grub_error>
 aa8:	cbnz	w0, a38 <grub_mod_init-0x4a8>
 aac:	ldr	w2, [x25, #144]
 ab0:	add	w4, w2, #0x1
 ab4:	mov	w2, w2
 ab8:	b	728 <grub_mod_init-0x7b8>
 abc:	adrp	x0, 0 <grub_mod_init-0xee0>
 ac0:	ldr	x1, [x0]
 ac4:	mov	w0, #0x9                   	// #9
 ac8:	bl	0 <grub_error>
 acc:	cbz	w0, af0 <grub_mod_init-0x3f0>
 ad0:	ldr	x0, [x24]
 ad4:	ldr	w0, [x0]
 ad8:	cbnz	w0, 6c0 <grub_mod_init-0x820>
 adc:	mov	w2, #0x0                   	// #0
 ae0:	b	7d0 <grub_mod_init-0x710>
 ae4:	ldr	x0, [x24]
 ae8:	ldr	w0, [x0]
 aec:	cbnz	w0, ad0 <grub_mod_init-0x410>
 af0:	ldr	w0, [x25, #144]
 af4:	add	w4, w0, #0x1
 af8:	mov	w0, w0
 afc:	b	7c4 <grub_mod_init-0x71c>
 b00:	adrp	x1, 0 <grub_mod_init-0xee0>
 b04:	mov	w0, #0x9                   	// #9
 b08:	ldr	x1, [x1]
 b0c:	bl	0 <grub_error>
 b10:	cbz	w0, 394 <grub_mod_init-0xb4c>
 b14:	b	5d8 <grub_mod_init-0x908>
 b18:	adrp	x1, 0 <grub_mod_init-0xee0>
 b1c:	mov	w0, #0x9                   	// #9
 b20:	ldr	x1, [x1]
 b24:	bl	0 <grub_error>
 b28:	b	394 <grub_mod_init-0xb4c>
 b2c:	adrp	x1, 0 <grub_mod_init-0xee0>
 b30:	mov	w0, #0x9                   	// #9
 b34:	ldr	x1, [x1]
 b38:	bl	0 <grub_error>
 b3c:	ldp	x19, x20, [sp, #16]
 b40:	ldp	x21, x22, [sp, #32]
 b44:	ldp	x23, x24, [sp, #48]
 b48:	b	5f0 <grub_mod_init-0x8f0>
 b4c:	nop
	...
 b88:	stp	x29, x30, [sp, #-80]!
 b8c:	mov	x29, sp
 b90:	stp	x19, x20, [sp, #16]
 b94:	mov	x19, x3
 b98:	ldr	x20, [x3, #48]
 b9c:	stp	x21, x22, [sp, #32]
 ba0:	mov	x21, x1
 ba4:	stp	x23, x24, [sp, #48]
 ba8:	mov	x22, x2
 bac:	mov	x23, x0
 bb0:	ldr	x1, [x20, #56]
 bb4:	cbz	x1, dcc <grub_mod_init-0x114>
 bb8:	ldr	w3, [x20, #48]
 bbc:	and	x2, x21, #0xfffffffffffff000
 bc0:	cmp	x2, x3
 bc4:	b.eq	df0 <grub_mod_init-0xf0>  // b.none
 bc8:	ldr	w0, [x19, #208]
 bcc:	mov	w3, #0x8                   	// #8
 bd0:	lsr	x20, x21, #12
 bd4:	asr	w3, w3, w0
 bd8:	sxtw	x3, w3
 bdc:	mul	x20, x3, x20
 be0:	and	x3, x20, #0xfffffffffffffff0
 be4:	str	x3, [x19, #8]
 be8:	b	bf8 <grub_mod_init-0x2e8>
 bec:	bl	0 <grub_ntfs_read_run_list>
 bf0:	cbnz	w0, d30 <grub_mod_init-0x1b0>
 bf4:	ldr	x3, [x19, #8]
 bf8:	mov	x0, x19
 bfc:	ldr	x4, [x19, #24]
 c00:	cmp	x4, x3
 c04:	b.ls	bec <grub_mod_init-0x2f4>  // b.plast
 c08:	ldr	w1, [x19, #208]
 c0c:	mov	w0, #0x1                   	// #1
 c10:	str	xzr, [x19, #64]
 c14:	add	w1, w1, #0x9
 c18:	lsl	w0, w0, w1
 c1c:	sxtw	x0, w0
 c20:	bl	0 <grub_malloc>
 c24:	str	x0, [x19, #216]
 c28:	cbz	x0, e50 <grub_mod_init-0x90>
 c2c:	ldr	x0, [x19, #8]
 c30:	cmp	x20, x0
 c34:	b.hi	d54 <grub_mod_init-0x18c>  // b.pmore
 c38:	ands	x21, x21, #0xfff
 c3c:	b.eq	cec <grub_mod_init-0x1f4>  // b.none
 c40:	ldr	x0, [x19, #48]
 c44:	stp	x25, x26, [sp, #64]
 c48:	ldr	w24, [x19, #208]
 c4c:	ldr	x25, [x19, #224]
 c50:	mov	x2, #0x1                   	// #1
 c54:	ldr	x1, [x0, #56]
 c58:	str	xzr, [x19, #224]
 c5c:	mov	x0, x19
 c60:	ldr	x20, [x19, #8]
 c64:	bl	128 <grub_mod_init-0xdb8>
 c68:	cbnz	w0, db8 <grub_mod_init-0x128>
 c6c:	ldr	x2, [x19, #48]
 c70:	add	w1, w24, #0x9
 c74:	str	x25, [x19, #224]
 c78:	mov	w0, #0x1000                	// #4096
 c7c:	lsl	x1, x20, x1
 c80:	sub	w20, w0, w21
 c84:	str	w1, [x2, #48]
 c88:	cmp	x20, x22
 c8c:	sub	w24, w0, w21
 c90:	b.ls	c9c <grub_mod_init-0x244>  // b.plast
 c94:	mov	w24, w22
 c98:	and	x20, x22, #0xffffffff
 c9c:	ldr	x1, [x2, #56]
 ca0:	mov	x0, x23
 ca4:	mov	x2, x20
 ca8:	add	x1, x1, x21
 cac:	bl	0 <grub_memmove>
 cb0:	adrp	x0, 0 <grub_mod_init-0xee0>
 cb4:	ldr	x0, [x0]
 cb8:	ldr	x4, [x0]
 cbc:	cbz	x4, cd8 <grub_mod_init-0x208>
 cc0:	ldr	x3, [x19, #224]
 cc4:	cbz	x3, cd8 <grub_mod_init-0x208>
 cc8:	mov	w2, w24
 ccc:	mov	w1, #0x0                   	// #0
 cd0:	mov	x0, #0x0                   	// #0
 cd4:	blr	x4
 cd8:	cmp	x22, x20
 cdc:	b.eq	ec4 <grub_mod_init-0x1c>  // b.none
 ce0:	ldp	x25, x26, [sp, #64]
 ce4:	add	x23, x23, x20
 ce8:	sub	x22, x22, x20
 cec:	lsr	x2, x22, #12
 cf0:	mov	x1, x23
 cf4:	mov	x0, x19
 cf8:	bl	128 <grub_mod_init-0xdb8>
 cfc:	cbnz	w0, d78 <grub_mod_init-0x168>
 d00:	ands	x21, x22, #0xfff
 d04:	b.ne	d88 <grub_mod_init-0x158>  // b.any
 d08:	mov	w20, #0x0                   	// #0
 d0c:	ldr	x0, [x19, #216]
 d10:	cbz	x0, d3c <grub_mod_init-0x1a4>
 d14:	bl	0 <grub_free>
 d18:	mov	w0, w20
 d1c:	ldp	x19, x20, [sp, #16]
 d20:	ldp	x21, x22, [sp, #32]
 d24:	ldp	x23, x24, [sp, #48]
 d28:	ldp	x29, x30, [sp], #80
 d2c:	ret
 d30:	adrp	x0, 0 <grub_mod_init-0xee0>
 d34:	ldr	x0, [x0]
 d38:	ldr	w20, [x0]
 d3c:	mov	w0, w20
 d40:	ldp	x19, x20, [sp, #16]
 d44:	ldp	x21, x22, [sp, #32]
 d48:	ldp	x23, x24, [sp, #48]
 d4c:	ldp	x29, x30, [sp], #80
 d50:	ret
 d54:	ldr	w3, [x19, #208]
 d58:	sub	x20, x20, x0
 d5c:	mov	w2, #0x3                   	// #3
 d60:	mov	x0, x19
 d64:	sub	w2, w2, w3
 d68:	mov	x1, #0x0                   	// #0
 d6c:	lsr	x2, x20, x2
 d70:	bl	128 <grub_mod_init-0xdb8>
 d74:	cbz	w0, c38 <grub_mod_init-0x2a8>
 d78:	adrp	x0, 0 <grub_mod_init-0xee0>
 d7c:	ldr	x0, [x0]
 d80:	ldr	w20, [x0]
 d84:	b	d0c <grub_mod_init-0x1d4>
 d88:	ldr	x0, [x19, #48]
 d8c:	stp	x25, x26, [sp, #64]
 d90:	mov	x2, #0x1                   	// #1
 d94:	ldr	x25, [x19, #224]
 d98:	ldr	x1, [x0, #56]
 d9c:	str	xzr, [x19, #224]
 da0:	ldr	w26, [x19, #208]
 da4:	mov	x0, x19
 da8:	ldr	x24, [x19, #8]
 dac:	bl	128 <grub_mod_init-0xdb8>
 db0:	mov	w20, w0
 db4:	cbz	w0, e6c <grub_mod_init-0x74>
 db8:	adrp	x0, 0 <grub_mod_init-0xee0>
 dbc:	ldp	x25, x26, [sp, #64]
 dc0:	ldr	x0, [x0]
 dc4:	ldr	w20, [x0]
 dc8:	b	d0c <grub_mod_init-0x1d4>
 dcc:	mov	x0, #0x1000                	// #4096
 dd0:	bl	0 <grub_malloc>
 dd4:	str	x0, [x20, #56]
 dd8:	ldr	x0, [x19, #48]
 ddc:	ldr	x1, [x0, #56]
 de0:	cbz	x1, d30 <grub_mod_init-0x1b0>
 de4:	mov	w1, #0x1                   	// #1
 de8:	str	w1, [x0, #48]
 dec:	b	bc8 <grub_mod_init-0x318>
 df0:	sub	x20, x2, x21
 df4:	sub	x2, x21, x2
 df8:	add	x20, x20, #0x1, lsl #12
 dfc:	add	x1, x1, x2
 e00:	cmp	x22, x20
 e04:	csel	x24, x22, x20, ls  // ls = plast
 e08:	mov	x2, x24
 e0c:	bl	0 <grub_memmove>
 e10:	adrp	x0, 0 <grub_mod_init-0xee0>
 e14:	ldr	x0, [x0]
 e18:	ldr	x4, [x0]
 e1c:	cbz	x4, e38 <grub_mod_init-0xa8>
 e20:	ldr	x3, [x19, #224]
 e24:	cbz	x3, e38 <grub_mod_init-0xa8>
 e28:	mov	w2, w24
 e2c:	mov	w1, #0x0                   	// #0
 e30:	mov	x0, #0x0                   	// #0
 e34:	blr	x4
 e38:	cmp	x22, x20
 e3c:	b.ls	e50 <grub_mod_init-0x90>  // b.plast
 e40:	add	x23, x23, x24
 e44:	sub	x22, x22, x24
 e48:	add	x21, x21, x24
 e4c:	b	bc8 <grub_mod_init-0x318>
 e50:	mov	w20, #0x0                   	// #0
 e54:	mov	w0, w20
 e58:	ldp	x19, x20, [sp, #16]
 e5c:	ldp	x21, x22, [sp, #32]
 e60:	ldp	x23, x24, [sp, #48]
 e64:	ldp	x29, x30, [sp], #80
 e68:	ret
 e6c:	ldr	x3, [x19, #48]
 e70:	add	w26, w26, #0x9
 e74:	and	x22, x22, #0xfffffffffffff000
 e78:	mov	x2, x21
 e7c:	lsl	x24, x24, x26
 e80:	add	x0, x23, x22
 e84:	ldr	x1, [x3, #56]
 e88:	str	w24, [x3, #48]
 e8c:	bl	0 <grub_memmove>
 e90:	adrp	x0, 0 <grub_mod_init-0xee0>
 e94:	cmp	x25, #0x0
 e98:	ldr	x0, [x0]
 e9c:	ldr	x4, [x0]
 ea0:	ccmp	x4, #0x0, #0x4, ne  // ne = any
 ea4:	b.eq	ec4 <grub_mod_init-0x1c>  // b.none
 ea8:	mov	x3, x25
 eac:	mov	w2, w21
 eb0:	mov	w1, #0x0                   	// #0
 eb4:	mov	x0, #0x0                   	// #0
 eb8:	blr	x4
 ebc:	ldp	x25, x26, [sp, #64]
 ec0:	b	d0c <grub_mod_init-0x1d4>
 ec4:	ldp	x25, x26, [sp, #64]
 ec8:	b	d08 <grub_mod_init-0x1d8>
 ecc:	nop
	...

0000000000000ee0 <grub_mod_init>:
 ee0:	adrp	x0, 0 <grub_mod_init-0xee0>
 ee4:	adrp	x1, 0 <grub_mod_init-0xee0>
 ee8:	ldr	x0, [x0]
 eec:	ldr	x1, [x1]
 ef0:	str	x1, [x0]
 ef4:	ret
	...

0000000000000f08 <grub_mod_fini>:
 f08:	adrp	x0, 0 <grub_mod_init-0xee0>
 f0c:	ldr	x0, [x0]
 f10:	str	xzr, [x0]
 f14:	ret
	...
