
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//rwarray.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000800 <.init>:
 800:	stp	x29, x30, [sp, #-16]!
 804:	mov	x29, sp
 808:	bl	910 <fprintf@plt+0x10>
 80c:	ldp	x29, x30, [sp], #16
 810:	ret

Disassembly of section .plt:

0000000000000820 <memcpy@plt-0x20>:
 820:	stp	x16, x30, [sp, #-16]!
 824:	adrp	x16, 11000 <dl_load@@Base+0x1061c>
 828:	ldr	x17, [x16, #4088]
 82c:	add	x16, x16, #0xff8
 830:	br	x17
 834:	nop
 838:	nop
 83c:	nop

0000000000000840 <memcpy@plt>:
 840:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 844:	ldr	x17, [x16]
 848:	add	x16, x16, #0x0
 84c:	br	x17

0000000000000850 <fwrite_unlocked@plt>:
 850:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 854:	ldr	x17, [x16, #8]
 858:	add	x16, x16, #0x8
 85c:	br	x17

0000000000000860 <exit@plt>:
 860:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 864:	ldr	x17, [x16, #16]
 868:	add	x16, x16, #0x10
 86c:	br	x17

0000000000000870 <__cxa_finalize@plt>:
 870:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 874:	ldr	x17, [x16, #24]
 878:	add	x16, x16, #0x18
 87c:	br	x17

0000000000000880 <fclose@plt>:
 880:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 884:	ldr	x17, [x16, #32]
 888:	add	x16, x16, #0x20
 88c:	br	x17

0000000000000890 <fopen@plt>:
 890:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 894:	ldr	x17, [x16, #40]
 898:	add	x16, x16, #0x28
 89c:	br	x17

00000000000008a0 <__gmon_start__@plt>:
 8a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8a4:	ldr	x17, [x16, #48]
 8a8:	add	x16, x16, #0x30
 8ac:	br	x17

00000000000008b0 <fread@plt>:
 8b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8b4:	ldr	x17, [x16, #56]
 8b8:	add	x16, x16, #0x38
 8bc:	br	x17

00000000000008c0 <fwrite@plt>:
 8c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #64]
 8c8:	add	x16, x16, #0x40
 8cc:	br	x17

00000000000008d0 <dcgettext@plt>:
 8d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #72]
 8d8:	add	x16, x16, #0x48
 8dc:	br	x17

00000000000008e0 <__errno_location@plt>:
 8e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8e4:	ldr	x17, [x16, #80]
 8e8:	add	x16, x16, #0x50
 8ec:	br	x17

00000000000008f0 <unlink@plt>:
 8f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8f4:	ldr	x17, [x16, #88]
 8f8:	add	x16, x16, #0x58
 8fc:	br	x17

0000000000000900 <fprintf@plt>:
 900:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 904:	ldr	x17, [x16, #96]
 908:	add	x16, x16, #0x60
 90c:	br	x17

Disassembly of section .text:

0000000000000910 <dl_load@@Base-0xd4>:
     910:	adrp	x0, 11000 <dl_load@@Base+0x1061c>
     914:	ldr	x0, [x0, #4056]
     918:	cbz	x0, 920 <fprintf@plt+0x20>
     91c:	b	8a0 <__gmon_start__@plt>
     920:	ret
     924:	nop
     928:	adrp	x0, 12000 <dl_load@@Base+0x1161c>
     92c:	add	x0, x0, #0xd0
     930:	adrp	x1, 12000 <dl_load@@Base+0x1161c>
     934:	add	x1, x1, #0xd0
     938:	cmp	x1, x0
     93c:	b.eq	954 <fprintf@plt+0x54>  // b.none
     940:	adrp	x1, 11000 <dl_load@@Base+0x1061c>
     944:	ldr	x1, [x1, #4032]
     948:	cbz	x1, 954 <fprintf@plt+0x54>
     94c:	mov	x16, x1
     950:	br	x16
     954:	ret
     958:	adrp	x0, 12000 <dl_load@@Base+0x1161c>
     95c:	add	x0, x0, #0xd0
     960:	adrp	x1, 12000 <dl_load@@Base+0x1161c>
     964:	add	x1, x1, #0xd0
     968:	sub	x1, x1, x0
     96c:	lsr	x2, x1, #63
     970:	add	x1, x2, x1, asr #3
     974:	cmp	xzr, x1, asr #1
     978:	asr	x1, x1, #1
     97c:	b.eq	994 <fprintf@plt+0x94>  // b.none
     980:	adrp	x2, 11000 <dl_load@@Base+0x1061c>
     984:	ldr	x2, [x2, #4064]
     988:	cbz	x2, 994 <fprintf@plt+0x94>
     98c:	mov	x16, x2
     990:	br	x16
     994:	ret
     998:	stp	x29, x30, [sp, #-32]!
     99c:	mov	x29, sp
     9a0:	str	x19, [sp, #16]
     9a4:	adrp	x19, 12000 <dl_load@@Base+0x1161c>
     9a8:	ldrb	w0, [x19, #208]
     9ac:	cbnz	w0, 9d4 <fprintf@plt+0xd4>
     9b0:	adrp	x0, 11000 <dl_load@@Base+0x1061c>
     9b4:	ldr	x0, [x0, #4040]
     9b8:	cbz	x0, 9c8 <fprintf@plt+0xc8>
     9bc:	adrp	x0, 12000 <dl_load@@Base+0x1161c>
     9c0:	ldr	x0, [x0, #104]
     9c4:	bl	870 <__cxa_finalize@plt>
     9c8:	bl	928 <fprintf@plt+0x28>
     9cc:	mov	w0, #0x1                   	// #1
     9d0:	strb	w0, [x19, #208]
     9d4:	ldr	x19, [sp, #16]
     9d8:	ldp	x29, x30, [sp], #32
     9dc:	ret
     9e0:	b	958 <fprintf@plt+0x58>

00000000000009e4 <dl_load@@Base>:
     9e4:	stp	x29, x30, [sp, #-80]!
     9e8:	stp	x24, x23, [sp, #32]
     9ec:	stp	x22, x21, [sp, #48]
     9f0:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
     9f4:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
     9f8:	stp	x26, x25, [sp, #16]
     9fc:	stp	x20, x19, [sp, #64]
     a00:	str	x0, [x22, #216]
     a04:	str	x1, [x23, #224]
     a08:	ldr	w8, [x0]
     a0c:	mov	x29, sp
     a10:	cmp	w8, #0x2
     a14:	b.ne	ad0 <dl_load@@Base+0xec>  // b.any
     a18:	ldr	w8, [x0, #4]
     a1c:	tbnz	w8, #31, ad0 <dl_load@@Base+0xec>
     a20:	adrp	x26, 12000 <dl_load@@Base+0x1161c>
     a24:	adrp	x19, 1000 <dl_load@@Base+0x61c>
     a28:	adrp	x20, 1000 <dl_load@@Base+0x61c>
     a2c:	mov	x25, xzr
     a30:	mov	w24, wzr
     a34:	add	x26, x26, #0x70
     a38:	add	x19, x19, #0x81b
     a3c:	add	x20, x20, #0x84f
     a40:	b	a50 <dl_load@@Base+0x6c>
     a44:	add	x25, x25, #0x30
     a48:	cmp	x25, #0x60
     a4c:	b.eq	a98 <dl_load@@Base+0xb4>  // b.none
     a50:	add	x21, x26, x25
     a54:	ldr	x8, [x21]
     a58:	cbz	x8, a98 <dl_load@@Base+0xb4>
     a5c:	ldr	x8, [x22, #216]
     a60:	ldr	x0, [x23, #224]
     a64:	mov	x1, x19
     a68:	mov	x2, x21
     a6c:	ldr	x8, [x8, #48]
     a70:	blr	x8
     a74:	cbnz	w0, a44 <dl_load@@Base+0x60>
     a78:	ldr	x8, [x22, #216]
     a7c:	ldr	x0, [x23, #224]
     a80:	ldr	x2, [x21]
     a84:	mov	x1, x20
     a88:	ldr	x8, [x8, #104]
     a8c:	blr	x8
     a90:	add	w24, w24, #0x1
     a94:	b	a44 <dl_load@@Base+0x60>
     a98:	ldr	x8, [x22, #216]
     a9c:	ldr	x0, [x23, #224]
     aa0:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     aa4:	add	x1, x1, #0xa4e
     aa8:	ldr	x8, [x8, #88]
     aac:	blr	x8
     ab0:	cmp	w24, #0x0
     ab4:	ldp	x20, x19, [sp, #64]
     ab8:	ldp	x22, x21, [sp, #48]
     abc:	ldp	x24, x23, [sp, #32]
     ac0:	ldp	x26, x25, [sp, #16]
     ac4:	cset	w0, eq  // eq = none
     ac8:	ldp	x29, x30, [sp], #80
     acc:	ret
     ad0:	adrp	x19, 11000 <dl_load@@Base+0x1061c>
     ad4:	ldr	x19, [x19, #4048]
     ad8:	adrp	x0, 1000 <dl_load@@Base+0x61c>
     adc:	add	x0, x0, #0x7f6
     ae0:	mov	w1, #0x25                  	// #37
     ae4:	ldr	x3, [x19]
     ae8:	mov	w2, #0x1                   	// #1
     aec:	bl	8c0 <fwrite@plt>
     af0:	ldr	x8, [x22, #216]
     af4:	ldr	x0, [x19]
     af8:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     afc:	add	x1, x1, #0x81c
     b00:	ldp	w4, w5, [x8]
     b04:	mov	w2, #0x2                   	// #2
     b08:	mov	w3, wzr
     b0c:	bl	900 <fprintf@plt>
     b10:	mov	w0, #0x1                   	// #1
     b14:	bl	860 <exit@plt>
     b18:	sub	sp, sp, #0x80
     b1c:	stp	x29, x30, [sp, #64]
     b20:	stp	x20, x19, [sp, #112]
     b24:	add	x29, sp, #0x40
     b28:	mov	w20, w0
     b2c:	mov	w8, #0x3                   	// #3
     b30:	mov	w9, #0x1                   	// #1
     b34:	fmov	d0, xzr
     b38:	mov	x0, x1
     b3c:	str	x23, [sp, #80]
     b40:	stp	x22, x21, [sp, #96]
     b44:	mov	x19, x1
     b48:	stp	w9, w8, [x29, #24]
     b4c:	bl	f34 <dl_load@@Base+0x550>
     b50:	cmp	w20, #0x2
     b54:	b.lt	cc4 <dl_load@@Base+0x2e0>  // b.tstop
     b58:	adrp	x21, 12000 <dl_load@@Base+0x1161c>
     b5c:	ldr	x8, [x21, #216]
     b60:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
     b64:	ldr	x0, [x22, #224]
     b68:	add	x3, sp, #0x20
     b6c:	ldr	x8, [x8, #152]
     b70:	mov	w2, #0x2                   	// #2
     b74:	mov	x1, xzr
     b78:	blr	x8
     b7c:	cbz	w0, c48 <dl_load@@Base+0x264>
     b80:	ldr	x8, [x21, #216]
     b84:	ldr	x0, [x22, #224]
     b88:	mov	x3, sp
     b8c:	mov	w1, #0x1                   	// #1
     b90:	ldr	x8, [x8, #152]
     b94:	mov	w2, #0x5                   	// #5
     b98:	blr	x8
     b9c:	cbz	w0, c5c <dl_load@@Base+0x278>
     ba0:	ldr	x0, [sp, #40]
     ba4:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     ba8:	add	x1, x1, #0x8c4
     bac:	bl	890 <fopen@plt>
     bb0:	mov	x20, x0
     bb4:	cbz	x0, c98 <dl_load@@Base+0x2b4>
     bb8:	adrp	x0, 1000 <dl_load@@Base+0x61c>
     bbc:	add	x0, x0, #0x8c7
     bc0:	mov	w1, #0x1                   	// #1
     bc4:	mov	w2, #0x8                   	// #8
     bc8:	mov	x3, x20
     bcc:	bl	850 <fwrite_unlocked@plt>
     bd0:	cmp	x0, #0x8
     bd4:	b.ne	c98 <dl_load@@Base+0x2b4>  // b.any
     bd8:	mov	w0, #0x3                   	// #3
     bdc:	bl	f48 <dl_load@@Base+0x564>
     be0:	str	w0, [x29, #28]
     be4:	add	x0, x29, #0x1c
     be8:	mov	w1, #0x1                   	// #1
     bec:	mov	w2, #0x4                   	// #4
     bf0:	mov	x3, x20
     bf4:	bl	850 <fwrite_unlocked@plt>
     bf8:	cmp	x0, #0x4
     bfc:	b.ne	c98 <dl_load@@Base+0x2b4>  // b.any
     c00:	mov	w0, #0x1                   	// #1
     c04:	bl	f48 <dl_load@@Base+0x564>
     c08:	str	w0, [x29, #24]
     c0c:	add	x0, x29, #0x18
     c10:	mov	w1, #0x1                   	// #1
     c14:	mov	w2, #0x4                   	// #4
     c18:	mov	x3, x20
     c1c:	bl	850 <fwrite_unlocked@plt>
     c20:	cmp	x0, #0x4
     c24:	b.ne	c98 <dl_load@@Base+0x2b4>  // b.any
     c28:	ldr	x1, [sp, #8]
     c2c:	mov	x0, x20
     c30:	bl	f50 <dl_load@@Base+0x56c>
     c34:	cbz	w0, c98 <dl_load@@Base+0x2b4>
     c38:	fmov	d0, #1.000000000000000000e+00
     c3c:	mov	x0, x19
     c40:	bl	f34 <dl_load@@Base+0x550>
     c44:	b	cbc <dl_load@@Base+0x2d8>
     c48:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     c4c:	ldr	x8, [x8, #4048]
     c50:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     c54:	add	x1, x1, #0x876
     c58:	b	c6c <dl_load@@Base+0x288>
     c5c:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     c60:	ldr	x8, [x8, #4048]
     c64:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     c68:	add	x1, x1, #0x89d
     c6c:	ldr	x20, [x8]
     c70:	mov	w2, #0x5                   	// #5
     c74:	mov	x0, xzr
     c78:	bl	8d0 <dcgettext@plt>
     c7c:	mov	x1, x0
     c80:	mov	x0, x20
     c84:	bl	900 <fprintf@plt>
     c88:	bl	8e0 <__errno_location@plt>
     c8c:	mov	x20, xzr
     c90:	mov	w8, #0x16                  	// #22
     c94:	str	w8, [x0]
     c98:	ldr	x8, [x21, #216]
     c9c:	ldr	x21, [x22, #224]
     ca0:	ldr	x23, [x8, #128]
     ca4:	bl	8e0 <__errno_location@plt>
     ca8:	ldr	w1, [x0]
     cac:	mov	x0, x21
     cb0:	blr	x23
     cb4:	ldr	x0, [sp, #40]
     cb8:	bl	8f0 <unlink@plt>
     cbc:	mov	x0, x20
     cc0:	bl	880 <fclose@plt>
     cc4:	mov	x0, x19
     cc8:	ldp	x20, x19, [sp, #112]
     ccc:	ldp	x22, x21, [sp, #96]
     cd0:	ldr	x23, [sp, #80]
     cd4:	ldp	x29, x30, [sp, #64]
     cd8:	add	sp, sp, #0x80
     cdc:	ret
     ce0:	sub	sp, sp, #0xa0
     ce4:	stp	x20, x19, [sp, #144]
     ce8:	mov	w20, w0
     cec:	fmov	d0, xzr
     cf0:	mov	x0, x1
     cf4:	stp	x29, x30, [sp, #96]
     cf8:	str	x23, [sp, #112]
     cfc:	stp	x22, x21, [sp, #128]
     d00:	add	x29, sp, #0x60
     d04:	mov	x19, x1
     d08:	bl	f34 <dl_load@@Base+0x550>
     d0c:	cmp	w20, #0x2
     d10:	b.lt	e8c <dl_load@@Base+0x4a8>  // b.tstop
     d14:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
     d18:	ldr	x8, [x22, #216]
     d1c:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
     d20:	ldr	x0, [x23, #224]
     d24:	sub	x3, x29, #0x20
     d28:	ldr	x8, [x8, #152]
     d2c:	mov	w2, #0x2                   	// #2
     d30:	mov	x1, xzr
     d34:	blr	x8
     d38:	cbz	w0, ea8 <dl_load@@Base+0x4c4>
     d3c:	ldr	x8, [x22, #216]
     d40:	ldr	x0, [x23, #224]
     d44:	add	x3, sp, #0x20
     d48:	mov	w1, #0x1                   	// #1
     d4c:	ldr	x8, [x8, #152]
     d50:	mov	w2, #0x5                   	// #5
     d54:	blr	x8
     d58:	cbz	w0, ebc <dl_load@@Base+0x4d8>
     d5c:	ldur	x0, [x29, #-24]
     d60:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     d64:	add	x1, x1, #0x992
     d68:	bl	890 <fopen@plt>
     d6c:	mov	x20, x0
     d70:	cbz	x0, e64 <dl_load@@Base+0x480>
     d74:	mov	x0, sp
     d78:	mov	w1, #0x1                   	// #1
     d7c:	mov	w2, #0x8                   	// #8
     d80:	mov	x3, x20
     d84:	stp	xzr, xzr, [sp]
     d88:	stur	xzr, [sp, #22]
     d8c:	str	xzr, [sp, #16]
     d90:	bl	8b0 <fread@plt>
     d94:	cmp	x0, #0x8
     d98:	b.ne	e58 <dl_load@@Base+0x474>  // b.any
     d9c:	ldr	x8, [sp]
     da0:	mov	x10, #0x7761                	// #30561
     da4:	ldrb	w9, [sp, #8]
     da8:	movk	x10, #0x726b, lsl #16
     dac:	movk	x10, #0x6c75, lsl #32
     db0:	movk	x10, #0xa7a, lsl #48
     db4:	eor	x8, x8, x10
     db8:	orr	x8, x8, x9
     dbc:	cbnz	x8, e58 <dl_load@@Base+0x474>
     dc0:	add	x0, x29, #0x1c
     dc4:	mov	w1, #0x1                   	// #1
     dc8:	mov	w2, #0x4                   	// #4
     dcc:	mov	x3, x20
     dd0:	bl	8b0 <fread@plt>
     dd4:	cmp	x0, #0x4
     dd8:	b.ne	e58 <dl_load@@Base+0x474>  // b.any
     ddc:	ldr	w0, [x29, #28]
     de0:	bl	f48 <dl_load@@Base+0x564>
     de4:	cmp	w0, #0x3
     de8:	str	w0, [x29, #28]
     dec:	b.ne	e58 <dl_load@@Base+0x474>  // b.any
     df0:	add	x0, x29, #0x18
     df4:	mov	w1, #0x1                   	// #1
     df8:	mov	w2, #0x4                   	// #4
     dfc:	mov	x3, x20
     e00:	bl	8b0 <fread@plt>
     e04:	cmp	x0, #0x4
     e08:	b.ne	e64 <dl_load@@Base+0x480>  // b.any
     e0c:	ldr	w0, [x29, #24]
     e10:	bl	f48 <dl_load@@Base+0x564>
     e14:	cmp	w0, #0x1
     e18:	str	w0, [x29, #24]
     e1c:	b.ne	e58 <dl_load@@Base+0x474>  // b.any
     e20:	ldr	x8, [x22, #216]
     e24:	ldr	x0, [x23, #224]
     e28:	ldr	x1, [sp, #40]
     e2c:	ldr	x8, [x8, #256]
     e30:	blr	x8
     e34:	cbz	w0, ef8 <dl_load@@Base+0x514>
     e38:	ldr	x1, [sp, #40]
     e3c:	mov	x0, x20
     e40:	bl	12dc <dl_load@@Base+0x8f8>
     e44:	cbz	w0, e64 <dl_load@@Base+0x480>
     e48:	fmov	d0, #1.000000000000000000e+00
     e4c:	mov	x0, x19
     e50:	bl	f34 <dl_load@@Base+0x550>
     e54:	b	e80 <dl_load@@Base+0x49c>
     e58:	bl	8e0 <__errno_location@plt>
     e5c:	mov	w8, #0x9                   	// #9
     e60:	str	w8, [x0]
     e64:	ldr	x8, [x22, #216]
     e68:	ldr	x21, [x23, #224]
     e6c:	ldr	x22, [x8, #128]
     e70:	bl	8e0 <__errno_location@plt>
     e74:	ldr	w1, [x0]
     e78:	mov	x0, x21
     e7c:	blr	x22
     e80:	cbz	x20, e8c <dl_load@@Base+0x4a8>
     e84:	mov	x0, x20
     e88:	bl	880 <fclose@plt>
     e8c:	mov	x0, x19
     e90:	ldp	x20, x19, [sp, #144]
     e94:	ldp	x22, x21, [sp, #128]
     e98:	ldr	x23, [sp, #112]
     e9c:	ldp	x29, x30, [sp, #96]
     ea0:	add	sp, sp, #0xa0
     ea4:	ret
     ea8:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     eac:	ldr	x8, [x8, #4048]
     eb0:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     eb4:	add	x1, x1, #0x946
     eb8:	b	ecc <dl_load@@Base+0x4e8>
     ebc:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     ec0:	ldr	x8, [x8, #4048]
     ec4:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     ec8:	add	x1, x1, #0x96c
     ecc:	ldr	x20, [x8]
     ed0:	mov	w2, #0x5                   	// #5
     ed4:	mov	x0, xzr
     ed8:	bl	8d0 <dcgettext@plt>
     edc:	mov	x1, x0
     ee0:	mov	x0, x20
     ee4:	bl	900 <fprintf@plt>
     ee8:	bl	8e0 <__errno_location@plt>
     eec:	mov	x20, xzr
     ef0:	mov	w8, #0x16                  	// #22
     ef4:	b	e60 <dl_load@@Base+0x47c>
     ef8:	bl	8e0 <__errno_location@plt>
     efc:	mov	w8, #0xc                   	// #12
     f00:	str	w8, [x0]
     f04:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     f08:	ldr	x8, [x8, #4048]
     f0c:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     f10:	add	x1, x1, #0x995
     f14:	mov	w2, #0x5                   	// #5
     f18:	ldr	x21, [x8]
     f1c:	mov	x0, xzr
     f20:	bl	8d0 <dcgettext@plt>
     f24:	mov	x1, x0
     f28:	mov	x0, x21
     f2c:	bl	900 <fprintf@plt>
     f30:	b	e64 <dl_load@@Base+0x480>
     f34:	mov	w8, #0x1                   	// #1
     f38:	str	d0, [x0, #8]
     f3c:	str	w8, [x0]
     f40:	str	wzr, [x0, #16]
     f44:	ret
     f48:	rev	w0, w0
     f4c:	ret
     f50:	sub	sp, sp, #0x50
     f54:	stp	x22, x21, [sp, #48]
     f58:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
     f5c:	ldr	x8, [x22, #216]
     f60:	stp	x29, x30, [sp, #16]
     f64:	stp	x24, x23, [sp, #32]
     f68:	stp	x20, x19, [sp, #64]
     f6c:	adrp	x21, 12000 <dl_load@@Base+0x1161c>
     f70:	ldr	x9, [x8, #264]
     f74:	ldr	x8, [x21, #224]
     f78:	mov	x20, x0
     f7c:	mov	x2, sp
     f80:	mov	w3, #0x2                   	// #2
     f84:	mov	x0, x8
     f88:	mov	w4, wzr
     f8c:	add	x29, sp, #0x10
     f90:	mov	x19, x1
     f94:	blr	x9
     f98:	cbz	w0, 1048 <dl_load@@Base+0x664>
     f9c:	ldr	x8, [sp]
     fa0:	ldr	w0, [x8, #16]
     fa4:	bl	f48 <dl_load@@Base+0x564>
     fa8:	stur	w0, [x29, #-4]
     fac:	sub	x0, x29, #0x4
     fb0:	mov	w1, #0x1                   	// #1
     fb4:	mov	w2, #0x4                   	// #4
     fb8:	mov	x3, x20
     fbc:	bl	8c0 <fwrite@plt>
     fc0:	cmp	x0, #0x4
     fc4:	b.ne	1088 <dl_load@@Base+0x6a4>  // b.any
     fc8:	ldr	x2, [sp]
     fcc:	ldr	x8, [x2, #16]
     fd0:	cbz	x8, 100c <dl_load@@Base+0x628>
     fd4:	mov	x8, xzr
     fd8:	mov	w23, #0x1                   	// #1
     fdc:	mov	w24, #0x50                  	// #80
     fe0:	madd	x8, x8, x24, x2
     fe4:	add	x1, x8, #0x18
     fe8:	mov	x0, x20
     fec:	bl	10a4 <dl_load@@Base+0x6c0>
     ff0:	cbz	w0, 102c <dl_load@@Base+0x648>
     ff4:	ldr	x2, [sp]
     ff8:	mov	w8, w23
     ffc:	add	w23, w23, #0x1
    1000:	ldr	x9, [x2, #16]
    1004:	cmp	x9, x8
    1008:	b.hi	fe0 <dl_load@@Base+0x5fc>  // b.pmore
    100c:	ldr	x8, [x22, #216]
    1010:	ldr	x0, [x21, #224]
    1014:	mov	x1, x19
    1018:	ldr	x8, [x8, #272]
    101c:	blr	x8
    1020:	cbz	w0, 105c <dl_load@@Base+0x678>
    1024:	mov	w0, #0x1                   	// #1
    1028:	b	108c <dl_load@@Base+0x6a8>
    102c:	ldr	x8, [x22, #216]
    1030:	ldr	x0, [x21, #224]
    1034:	ldr	x2, [sp]
    1038:	mov	x1, x19
    103c:	ldr	x8, [x8, #272]
    1040:	blr	x8
    1044:	b	1088 <dl_load@@Base+0x6a4>
    1048:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
    104c:	ldr	x8, [x8, #4048]
    1050:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    1054:	add	x1, x1, #0x8d0
    1058:	b	106c <dl_load@@Base+0x688>
    105c:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
    1060:	ldr	x8, [x8, #4048]
    1064:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    1068:	add	x1, x1, #0x8f6
    106c:	ldr	x19, [x8]
    1070:	mov	w2, #0x5                   	// #5
    1074:	mov	x0, xzr
    1078:	bl	8d0 <dcgettext@plt>
    107c:	mov	x1, x0
    1080:	mov	x0, x19
    1084:	bl	900 <fprintf@plt>
    1088:	mov	w0, wzr
    108c:	ldp	x20, x19, [sp, #64]
    1090:	ldp	x22, x21, [sp, #48]
    1094:	ldp	x24, x23, [sp, #32]
    1098:	ldp	x29, x30, [sp, #16]
    109c:	add	sp, sp, #0x50
    10a0:	ret
    10a4:	sub	sp, sp, #0x30
    10a8:	stp	x29, x30, [sp, #16]
    10ac:	stp	x20, x19, [sp, #32]
    10b0:	ldr	w8, [x1, #32]
    10b4:	mov	x20, x0
    10b8:	add	x29, sp, #0x10
    10bc:	mov	x19, x1
    10c0:	mov	w0, w8
    10c4:	bl	f48 <dl_load@@Base+0x564>
    10c8:	stur	w0, [x29, #-4]
    10cc:	sub	x0, x29, #0x4
    10d0:	mov	w1, #0x1                   	// #1
    10d4:	mov	w2, #0x4                   	// #4
    10d8:	mov	x3, x20
    10dc:	bl	8c0 <fwrite@plt>
    10e0:	cmp	x0, #0x4
    10e4:	b.ne	111c <dl_load@@Base+0x738>  // b.any
    10e8:	ldr	x2, [x19, #32]
    10ec:	cbz	x2, 110c <dl_load@@Base+0x728>
    10f0:	ldr	x0, [x19, #24]
    10f4:	mov	w1, #0x1                   	// #1
    10f8:	mov	x3, x20
    10fc:	bl	8c0 <fwrite@plt>
    1100:	ldr	x8, [x19, #32]
    1104:	cmp	x0, x8
    1108:	b.ne	111c <dl_load@@Base+0x738>  // b.any
    110c:	add	x1, x19, #0x30
    1110:	mov	x0, x20
    1114:	bl	1130 <dl_load@@Base+0x74c>
    1118:	b	1120 <dl_load@@Base+0x73c>
    111c:	mov	w0, wzr
    1120:	ldp	x20, x19, [sp, #32]
    1124:	ldp	x29, x30, [sp, #16]
    1128:	add	sp, sp, #0x30
    112c:	ret
    1130:	sub	sp, sp, #0x40
    1134:	stp	x29, x30, [sp, #16]
    1138:	stp	x22, x21, [sp, #32]
    113c:	stp	x20, x19, [sp, #48]
    1140:	ldr	w8, [x1]
    1144:	mov	x20, x1
    1148:	mov	x19, x0
    114c:	add	x29, sp, #0x10
    1150:	cmp	w8, #0x5
    1154:	b.hi	11f8 <dl_load@@Base+0x814>  // b.pmore
    1158:	adrp	x9, 1000 <dl_load@@Base+0x61c>
    115c:	add	x9, x9, #0x7f0
    1160:	adr	x10, 1170 <dl_load@@Base+0x78c>
    1164:	ldrb	w11, [x9, x8]
    1168:	add	x10, x10, x11, lsl #2
    116c:	br	x10
    1170:	mov	w0, #0x5                   	// #5
    1174:	b	118c <dl_load@@Base+0x7a8>
    1178:	mov	w0, wzr
    117c:	b	118c <dl_load@@Base+0x7a8>
    1180:	mov	w0, #0x3                   	// #3
    1184:	b	118c <dl_load@@Base+0x7a8>
    1188:	mov	w0, #0x4                   	// #4
    118c:	bl	f48 <dl_load@@Base+0x564>
    1190:	stur	w0, [x29, #-4]
    1194:	sub	x0, x29, #0x4
    1198:	mov	w1, #0x1                   	// #1
    119c:	mov	w2, #0x4                   	// #4
    11a0:	mov	x3, x19
    11a4:	bl	8c0 <fwrite@plt>
    11a8:	cmp	x0, #0x4
    11ac:	b.ne	12c4 <dl_load@@Base+0x8e0>  // b.any
    11b0:	ldr	w0, [x20, #16]
    11b4:	bl	f48 <dl_load@@Base+0x564>
    11b8:	str	w0, [sp, #8]
    11bc:	add	x0, sp, #0x8
    11c0:	mov	w1, #0x1                   	// #1
    11c4:	mov	w2, #0x4                   	// #4
    11c8:	mov	x3, x19
    11cc:	bl	8c0 <fwrite@plt>
    11d0:	cmp	x0, #0x4
    11d4:	b.ne	12c4 <dl_load@@Base+0x8e0>  // b.any
    11d8:	ldp	x0, x2, [x20, #8]
    11dc:	mov	w1, #0x1                   	// #1
    11e0:	mov	x3, x19
    11e4:	bl	8c0 <fwrite@plt>
    11e8:	ldr	x8, [x20, #16]
    11ec:	cmp	x0, x8
    11f0:	b.eq	1284 <dl_load@@Base+0x8a0>  // b.none
    11f4:	b	12c4 <dl_load@@Base+0x8e0>
    11f8:	mov	w0, wzr
    11fc:	bl	f48 <dl_load@@Base+0x564>
    1200:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    1204:	ldr	x8, [x8, #216]
    1208:	stur	w0, [x29, #-4]
    120c:	adrp	x9, 12000 <dl_load@@Base+0x1161c>
    1210:	ldr	x21, [x9, #224]
    1214:	ldr	x22, [x8, #104]
    1218:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    121c:	add	x1, x1, #0x926
    1220:	mov	w2, #0x5                   	// #5
    1224:	mov	x0, xzr
    1228:	bl	8d0 <dcgettext@plt>
    122c:	ldr	w2, [x20]
    1230:	mov	x1, x0
    1234:	mov	x0, x21
    1238:	blr	x22
    123c:	b	1194 <dl_load@@Base+0x7b0>
    1240:	mov	w0, #0x1                   	// #1
    1244:	bl	f48 <dl_load@@Base+0x564>
    1248:	stur	w0, [x29, #-4]
    124c:	sub	x0, x29, #0x4
    1250:	mov	w1, #0x1                   	// #1
    1254:	mov	w2, #0x4                   	// #4
    1258:	mov	x3, x19
    125c:	bl	8c0 <fwrite@plt>
    1260:	cmp	x0, #0x4
    1264:	b.ne	12c4 <dl_load@@Base+0x8e0>  // b.any
    1268:	add	x0, x20, #0x8
    126c:	mov	w1, #0x1                   	// #1
    1270:	mov	w2, #0x8                   	// #8
    1274:	mov	x3, x19
    1278:	bl	8c0 <fwrite@plt>
    127c:	cmp	x0, #0x8
    1280:	b.ne	12c4 <dl_load@@Base+0x8e0>  // b.any
    1284:	mov	w0, #0x1                   	// #1
    1288:	b	12c8 <dl_load@@Base+0x8e4>
    128c:	mov	w0, #0x2                   	// #2
    1290:	bl	f48 <dl_load@@Base+0x564>
    1294:	stur	w0, [x29, #-4]
    1298:	sub	x0, x29, #0x4
    129c:	mov	w1, #0x1                   	// #1
    12a0:	mov	w2, #0x4                   	// #4
    12a4:	mov	x3, x19
    12a8:	bl	8c0 <fwrite@plt>
    12ac:	cmp	x0, #0x4
    12b0:	b.ne	12c4 <dl_load@@Base+0x8e0>  // b.any
    12b4:	ldr	x1, [x20, #8]
    12b8:	mov	x0, x19
    12bc:	bl	f50 <dl_load@@Base+0x56c>
    12c0:	b	12c8 <dl_load@@Base+0x8e4>
    12c4:	mov	w0, wzr
    12c8:	ldp	x20, x19, [sp, #48]
    12cc:	ldp	x22, x21, [sp, #32]
    12d0:	ldp	x29, x30, [sp, #16]
    12d4:	add	sp, sp, #0x40
    12d8:	ret
    12dc:	sub	sp, sp, #0xb0
    12e0:	stp	x29, x30, [sp, #96]
    12e4:	stp	x20, x19, [sp, #160]
    12e8:	add	x29, sp, #0x60
    12ec:	mov	x20, x0
    12f0:	mov	x19, x1
    12f4:	sub	x0, x29, #0x4
    12f8:	mov	w1, #0x1                   	// #1
    12fc:	mov	w2, #0x4                   	// #4
    1300:	mov	x3, x20
    1304:	stp	x26, x25, [sp, #112]
    1308:	stp	x24, x23, [sp, #128]
    130c:	stp	x22, x21, [sp, #144]
    1310:	bl	8b0 <fread@plt>
    1314:	cmp	x0, #0x4
    1318:	b.ne	13c0 <dl_load@@Base+0x9dc>  // b.any
    131c:	ldur	w0, [x29, #-4]
    1320:	bl	f48 <dl_load@@Base+0x564>
    1324:	mov	w21, w0
    1328:	mov	w24, wzr
    132c:	stur	w0, [x29, #-4]
    1330:	cbz	w0, 1388 <dl_load@@Base+0x9a4>
    1334:	add	x8, sp, #0x8
    1338:	adrp	x25, 12000 <dl_load@@Base+0x1161c>
    133c:	add	x22, x8, #0x10
    1340:	add	x23, x8, #0x30
    1344:	adrp	x26, 12000 <dl_load@@Base+0x1161c>
    1348:	add	x1, sp, #0x8
    134c:	mov	x0, x20
    1350:	bl	13e0 <dl_load@@Base+0x9fc>
    1354:	cbz	w0, 1388 <dl_load@@Base+0x9a4>
    1358:	ldr	x8, [x25, #216]
    135c:	ldr	x0, [x26, #224]
    1360:	mov	x1, x19
    1364:	mov	x2, x22
    1368:	ldr	x8, [x8, #232]
    136c:	mov	x3, x23
    1370:	blr	x8
    1374:	cbz	w0, 1394 <dl_load@@Base+0x9b0>
    1378:	add	w24, w24, #0x1
    137c:	cmp	w21, w24
    1380:	b.ne	1348 <dl_load@@Base+0x964>  // b.any
    1384:	mov	w24, w21
    1388:	cmp	w24, w21
    138c:	cset	w0, eq  // eq = none
    1390:	b	13c4 <dl_load@@Base+0x9e0>
    1394:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
    1398:	ldr	x8, [x8, #4048]
    139c:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    13a0:	add	x1, x1, #0x9b3
    13a4:	mov	w2, #0x5                   	// #5
    13a8:	ldr	x19, [x8]
    13ac:	mov	x0, xzr
    13b0:	bl	8d0 <dcgettext@plt>
    13b4:	mov	x1, x0
    13b8:	mov	x0, x19
    13bc:	bl	900 <fprintf@plt>
    13c0:	mov	w0, wzr
    13c4:	ldp	x20, x19, [sp, #160]
    13c8:	ldp	x22, x21, [sp, #144]
    13cc:	ldp	x24, x23, [sp, #128]
    13d0:	ldp	x26, x25, [sp, #112]
    13d4:	ldp	x29, x30, [sp, #96]
    13d8:	add	sp, sp, #0xb0
    13dc:	ret
    13e0:	sub	sp, sp, #0x50
    13e4:	stp	x29, x30, [sp, #16]
    13e8:	stp	x20, x19, [sp, #64]
    13ec:	add	x29, sp, #0x10
    13f0:	mov	x19, x0
    13f4:	mov	x20, x1
    13f8:	sub	x0, x29, #0x4
    13fc:	mov	w1, #0x1                   	// #1
    1400:	mov	w2, #0x4                   	// #4
    1404:	mov	x3, x19
    1408:	stp	x24, x23, [sp, #32]
    140c:	stp	x22, x21, [sp, #48]
    1410:	bl	8b0 <fread@plt>
    1414:	cmp	x0, #0x4
    1418:	b.ne	1528 <dl_load@@Base+0xb44>  // b.any
    141c:	ldur	w0, [x29, #-4]
    1420:	bl	f48 <dl_load@@Base+0x564>
    1424:	movi	v0.2d, #0x0
    1428:	stur	w0, [x29, #-4]
    142c:	stp	q0, q0, [x20]
    1430:	stp	q0, q0, [x20, #32]
    1434:	str	q0, [x20, #64]
    1438:	cbz	w0, 147c <dl_load@@Base+0xa98>
    143c:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
    1440:	mov	w21, w0
    1444:	ldr	x0, [x22, #232]
    1448:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
    144c:	cbz	x0, 1488 <dl_load@@Base+0xaa4>
    1450:	ldr	w8, [x23, #240]
    1454:	cmp	w8, w21
    1458:	b.cs	14d0 <dl_load@@Base+0xaec>  // b.hs, b.nlast
    145c:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    1460:	ldr	x8, [x8, #216]
    1464:	mov	w1, w21
    1468:	ldr	x8, [x8, #296]
    146c:	blr	x8
    1470:	cbz	x0, 152c <dl_load@@Base+0xb48>
    1474:	str	x0, [x22, #232]
    1478:	b	14cc <dl_load@@Base+0xae8>
    147c:	add	x0, x20, #0x10
    1480:	bl	1558 <dl_load@@Base+0xb74>
    1484:	b	1510 <dl_load@@Base+0xb2c>
    1488:	adrp	x24, 12000 <dl_load@@Base+0x1161c>
    148c:	ldr	x8, [x24, #216]
    1490:	mov	w0, w21
    1494:	ldr	x8, [x8, #280]
    1498:	blr	x8
    149c:	str	x0, [x22, #232]
    14a0:	cbnz	x0, 14cc <dl_load@@Base+0xae8>
    14a4:	ldr	x8, [x24, #216]
    14a8:	adrp	x9, 12000 <dl_load@@Base+0x1161c>
    14ac:	ldr	x0, [x9, #224]
    14b0:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    14b4:	ldr	x8, [x8, #96]
    14b8:	adrp	x2, 1000 <dl_load@@Base+0x61c>
    14bc:	add	x1, x1, #0x9d9
    14c0:	add	x2, x2, #0x9f7
    14c4:	mov	w3, w21
    14c8:	blr	x8
    14cc:	str	w21, [x23, #240]
    14d0:	ldr	x0, [x22, #232]
    14d4:	mov	w21, w21
    14d8:	mov	w1, #0x1                   	// #1
    14dc:	mov	x2, x21
    14e0:	mov	x3, x19
    14e4:	bl	8b0 <fread@plt>
    14e8:	cmp	x0, x21
    14ec:	b.ne	1528 <dl_load@@Base+0xb44>  // b.any
    14f0:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    14f4:	adrp	x9, 12000 <dl_load@@Base+0x1161c>
    14f8:	ldr	x0, [x8, #216]
    14fc:	ldr	x1, [x9, #224]
    1500:	ldr	x2, [x22, #232]
    1504:	add	x4, x20, #0x10
    1508:	mov	x3, x21
    150c:	bl	1544 <dl_load@@Base+0xb60>
    1510:	add	x1, x20, #0x30
    1514:	mov	x0, x19
    1518:	bl	1564 <dl_load@@Base+0xb80>
    151c:	cmp	w0, #0x0
    1520:	cset	w0, ne  // ne = any
    1524:	b	152c <dl_load@@Base+0xb48>
    1528:	mov	w0, wzr
    152c:	ldp	x20, x19, [sp, #64]
    1530:	ldp	x22, x21, [sp, #48]
    1534:	ldp	x24, x23, [sp, #32]
    1538:	ldp	x29, x30, [sp, #16]
    153c:	add	sp, sp, #0x50
    1540:	ret
    1544:	stp	x29, x30, [sp, #-16]!
    1548:	mov	x29, sp
    154c:	bl	1738 <dl_load@@Base+0xd54>
    1550:	ldp	x29, x30, [sp], #16
    1554:	ret
    1558:	movi	v0.2d, #0x0
    155c:	stp	q0, q0, [x0]
    1560:	ret
    1564:	sub	sp, sp, #0x60
    1568:	stp	x29, x30, [sp, #16]
    156c:	stp	x20, x19, [sp, #80]
    1570:	add	x29, sp, #0x10
    1574:	mov	x20, x0
    1578:	mov	x19, x1
    157c:	add	x0, x29, #0x1c
    1580:	mov	w1, #0x1                   	// #1
    1584:	mov	w2, #0x4                   	// #4
    1588:	mov	x3, x20
    158c:	str	x25, [sp, #32]
    1590:	stp	x24, x23, [sp, #48]
    1594:	stp	x22, x21, [sp, #64]
    1598:	bl	8b0 <fread@plt>
    159c:	cmp	x0, #0x4
    15a0:	b.ne	1714 <dl_load@@Base+0xd30>  // b.any
    15a4:	ldr	w0, [x29, #28]
    15a8:	bl	f48 <dl_load@@Base+0x564>
    15ac:	cmp	w0, #0x1
    15b0:	str	w0, [x29, #28]
    15b4:	b.eq	1600 <dl_load@@Base+0xc1c>  // b.none
    15b8:	mov	w21, w0
    15bc:	cmp	w0, #0x2
    15c0:	b.ne	1630 <dl_load@@Base+0xc4c>  // b.any
    15c4:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    15c8:	ldr	x8, [x8, #216]
    15cc:	adrp	x9, 12000 <dl_load@@Base+0x1161c>
    15d0:	ldr	x0, [x9, #224]
    15d4:	ldr	x8, [x8, #248]
    15d8:	blr	x8
    15dc:	mov	x21, x0
    15e0:	mov	x0, x20
    15e4:	mov	x1, x21
    15e8:	bl	12dc <dl_load@@Base+0x8f8>
    15ec:	cbz	w0, 1714 <dl_load@@Base+0xd30>
    15f0:	mov	w8, #0x5                   	// #5
    15f4:	str	x21, [x19, #8]
    15f8:	str	w8, [x19]
    15fc:	b	16fc <dl_load@@Base+0xd18>
    1600:	add	x0, sp, #0x8
    1604:	mov	w1, #0x1                   	// #1
    1608:	mov	w2, #0x8                   	// #8
    160c:	mov	x3, x20
    1610:	mov	w21, #0x1                   	// #1
    1614:	bl	8b0 <fread@plt>
    1618:	cmp	x0, #0x8
    161c:	b.ne	1714 <dl_load@@Base+0xd30>  // b.any
    1620:	str	w21, [x19]
    1624:	ldr	x8, [sp, #8]
    1628:	str	x8, [x19, #8]
    162c:	b	1718 <dl_load@@Base+0xd34>
    1630:	add	x0, sp, #0x8
    1634:	mov	w1, #0x1                   	// #1
    1638:	mov	w2, #0x4                   	// #4
    163c:	mov	x3, x20
    1640:	bl	8b0 <fread@plt>
    1644:	cmp	x0, #0x4
    1648:	b.ne	1714 <dl_load@@Base+0xd30>  // b.any
    164c:	ldr	w0, [sp, #8]
    1650:	bl	f48 <dl_load@@Base+0x564>
    1654:	mov	w22, w0
    1658:	cmp	w21, #0x6
    165c:	adrp	x24, 12000 <dl_load@@Base+0x1161c>
    1660:	str	w0, [sp, #8]
    1664:	b.cs	1674 <dl_load@@Base+0xc90>  // b.hs, b.nlast
    1668:	mov	w8, #0x39                  	// #57
    166c:	lsr	w8, w8, w21
    1670:	tbnz	w8, #0, 16b0 <dl_load@@Base+0xccc>
    1674:	ldr	x8, [x24, #216]
    1678:	adrp	x9, 12000 <dl_load@@Base+0x1161c>
    167c:	ldr	x23, [x9, #224]
    1680:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    1684:	ldr	x25, [x8, #104]
    1688:	add	x1, x1, #0xa0f
    168c:	mov	w2, #0x5                   	// #5
    1690:	mov	x0, xzr
    1694:	bl	8d0 <dcgettext@plt>
    1698:	mov	x1, x0
    169c:	mov	x0, x23
    16a0:	mov	w2, w21
    16a4:	blr	x25
    16a8:	mov	w8, #0x2                   	// #2
    16ac:	b	16bc <dl_load@@Base+0xcd8>
    16b0:	adrp	x8, 1000 <dl_load@@Base+0x61c>
    16b4:	add	x8, x8, #0xa70
    16b8:	ldr	w8, [x8, w21, sxtw #2]
    16bc:	mov	w21, w22
    16c0:	str	w8, [x19]
    16c4:	str	x21, [x19, #16]
    16c8:	ldr	x8, [x24, #216]
    16cc:	add	w0, w22, #0x1
    16d0:	ldr	x8, [x8, #280]
    16d4:	blr	x8
    16d8:	mov	w1, #0x1                   	// #1
    16dc:	mov	x2, x21
    16e0:	mov	x3, x20
    16e4:	str	x0, [x19, #8]
    16e8:	bl	8b0 <fread@plt>
    16ec:	cmp	x0, x21
    16f0:	b.ne	1704 <dl_load@@Base+0xd20>  // b.any
    16f4:	ldr	x8, [x19, #8]
    16f8:	strb	wzr, [x8, x21]
    16fc:	mov	w21, #0x1                   	// #1
    1700:	b	1718 <dl_load@@Base+0xd34>
    1704:	ldr	x8, [x24, #216]
    1708:	ldr	x0, [x19, #8]
    170c:	ldr	x8, [x8, #304]
    1710:	blr	x8
    1714:	mov	w21, wzr
    1718:	mov	w0, w21
    171c:	ldp	x20, x19, [sp, #80]
    1720:	ldp	x22, x21, [sp, #64]
    1724:	ldp	x24, x23, [sp, #48]
    1728:	ldr	x25, [sp, #32]
    172c:	ldp	x29, x30, [sp, #16]
    1730:	add	sp, sp, #0x60
    1734:	ret
    1738:	stp	x29, x30, [sp, #-80]!
    173c:	movi	v0.2d, #0x0
    1740:	mov	w8, #0x2                   	// #2
    1744:	str	x25, [sp, #16]
    1748:	stp	x24, x23, [sp, #32]
    174c:	stp	x22, x21, [sp, #48]
    1750:	stp	x20, x19, [sp, #64]
    1754:	stp	q0, q0, [x4]
    1758:	str	w8, [x4]
    175c:	str	x3, [x4, #16]
    1760:	ldr	x8, [x0, #280]
    1764:	add	x25, x3, #0x1
    1768:	mov	x24, x0
    176c:	mov	x0, x25
    1770:	mov	x29, sp
    1774:	mov	x19, x4
    1778:	mov	x20, x3
    177c:	mov	x21, x2
    1780:	mov	x23, x1
    1784:	blr	x8
    1788:	mov	x22, x0
    178c:	cbnz	x0, 17b0 <dl_load@@Base+0xdcc>
    1790:	ldr	x8, [x24, #96]
    1794:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    1798:	adrp	x2, 1000 <dl_load@@Base+0x61c>
    179c:	add	x1, x1, #0x9d9
    17a0:	add	x2, x2, #0xa01
    17a4:	mov	x0, x23
    17a8:	mov	x3, x25
    17ac:	blr	x8
    17b0:	mov	x0, x22
    17b4:	mov	x1, x21
    17b8:	mov	x2, x20
    17bc:	bl	840 <memcpy@plt>
    17c0:	strb	wzr, [x22, x20]
    17c4:	str	x22, [x19, #8]
    17c8:	ldp	x20, x19, [sp, #64]
    17cc:	ldp	x22, x21, [sp, #48]
    17d0:	ldp	x24, x23, [sp, #32]
    17d4:	ldr	x25, [sp, #16]
    17d8:	ldp	x29, x30, [sp], #80
    17dc:	ret

Disassembly of section .fini:

00000000000017e0 <.fini>:
    17e0:	stp	x29, x30, [sp, #-16]!
    17e4:	mov	x29, sp
    17e8:	ldp	x29, x30, [sp], #16
    17ec:	ret
