
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_whirlpool.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <whirlpool_transform>:
   0:	stp	x29, x30, [sp, #-384]!
   4:	add	x9, x1, #0x40
   8:	mov	x29, sp
   c:	add	x8, sp, #0x80
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	stp	x25, x26, [sp, #64]
  20:	stp	x27, x28, [sp, #80]
  24:	nop
  28:	ldrb	w3, [x1, #3]
  2c:	ldrb	w7, [x1, #1]
  30:	add	x1, x1, #0x8
  34:	ldurb	w2, [x1, #-6]
  38:	ldurb	w6, [x1, #-8]
  3c:	lsl	x3, x3, #32
  40:	ldurb	w5, [x1, #-3]
  44:	lsl	x7, x7, #48
  48:	ldurb	w4, [x1, #-4]
  4c:	orr	x2, x3, x2, lsl #40
  50:	orr	x6, x7, x6, lsl #56
  54:	ldurb	w3, [x1, #-2]
  58:	ldurb	w7, [x1, #-1]
  5c:	lsl	x5, x5, #16
  60:	orr	x2, x2, x6
  64:	orr	x4, x5, x4, lsl #24
  68:	orr	x2, x2, x4
  6c:	cmp	x9, x1
  70:	orr	x3, x7, x3, lsl #8
  74:	orr	x2, x2, x3
  78:	str	x2, [x8], #8
  7c:	b.ne	28 <whirlpool_transform+0x28>  // b.any
  80:	sub	x3, x0, #0x8
  84:	mov	x0, #0x1                   	// #1
  88:	str	x3, [sp, #120]
  8c:	nop
  90:	add	x1, sp, #0xc0
  94:	add	x1, x1, x0, lsl #3
  98:	ldr	x2, [x3, x0, lsl #3]
  9c:	add	x0, x0, #0x1
  a0:	stur	x2, [x1, #-8]
  a4:	cmp	x0, #0x9
  a8:	b.ne	90 <whirlpool_transform+0x90>  // b.any
  ac:	ldr	x3, [sp, #120]
  b0:	mov	x0, #0x1                   	// #1
  b4:	nop
  b8:	add	x1, sp, #0x100
  bc:	add	x1, x1, x0, lsl #3
  c0:	ldr	x2, [x3, x0, lsl #3]
  c4:	add	x0, x0, #0x1
  c8:	stur	x2, [x1, #-8]
  cc:	cmp	x0, #0x9
  d0:	b.ne	b8 <whirlpool_transform+0xb8>  // b.any
  d4:	mov	x1, #0x1                   	// #1
  d8:	lsl	x0, x1, #3
  dc:	add	x3, sp, #0x80
  e0:	add	x2, sp, #0x100
  e4:	add	x1, x1, #0x1
  e8:	add	x2, x2, x0
  ec:	add	x0, x3, x0
  f0:	cmp	x1, #0x9
  f4:	ldur	x3, [x0, #-8]
  f8:	ldur	x0, [x2, #-8]
  fc:	eor	x0, x0, x3
 100:	stur	x0, [x2, #-8]
 104:	b.ne	d8 <whirlpool_transform+0xd8>  // b.any
 108:	adrp	x1, 0 <whirlpool_transform>
 10c:	adrp	x3, 0 <whirlpool_transform>
 110:	ldp	x8, x23, [sp, #192]
 114:	adrp	x2, 0 <whirlpool_transform>
 118:	ldr	x1, [x1]
 11c:	adrp	x0, 0 <whirlpool_transform>
 120:	ldr	x5, [x3]
 124:	add	x24, x1, #0x650
 128:	ldr	x0, [x0]
 12c:	add	x27, x1, #0xe50
 130:	ldr	x4, [x2]
 134:	adrp	x3, 0 <whirlpool_transform>
 138:	mov	x1, #0x14f                 	// #335
 13c:	add	x2, x5, #0x850
 140:	ldp	x7, x13, [sp, #208]
 144:	movk	x1, #0x87b8, lsl #16
 148:	ldp	x12, x25, [sp, #224]
 14c:	movk	x1, #0xc6e8, lsl #32
 150:	ldr	x3, [x3]
 154:	str	x5, [sp, #104]
 158:	ldr	x6, [sp, #240]
 15c:	add	x30, x4, #0x550
 160:	ldr	x5, [sp, #248]
 164:	movk	x1, #0x1823, lsl #48
 168:	sub	x22, x0, #0xb0
 16c:	add	x26, x0, #0x750
 170:	add	x28, x0, #0xf50
 174:	mov	x15, x1
 178:	mov	x4, x8
 17c:	nop
 180:	ubfx	x17, x4, #48, #8
 184:	ubfx	x9, x5, #40, #8
 188:	and	x8, x7, #0xff
 18c:	lsr	x1, x23, #56
 190:	ubfx	x0, x4, #40, #8
 194:	lsr	x14, x7, #56
 198:	ldr	x17, [x3, x17, lsl #3]
 19c:	and	x11, x13, #0xff
 1a0:	ldr	x9, [x2, x9, lsl #3]
 1a4:	ubfx	x16, x23, #48, #8
 1a8:	ldr	x1, [x22, x1, lsl #3]
 1ac:	eor	x9, x17, x9
 1b0:	ldr	x17, [x26, x8, lsl #3]
 1b4:	ubfx	x10, x6, #32, #8
 1b8:	lsr	w19, w25, #24
 1bc:	ubfx	x8, x5, #32, #8
 1c0:	ldr	x0, [x2, x0, lsl #3]
 1c4:	eor	x1, x1, x17
 1c8:	ldr	x11, [x26, x11, lsl #3]
 1cc:	lsr	w18, w6, #24
 1d0:	ldr	x16, [x3, x16, lsl #3]
 1d4:	eor	x9, x9, x1
 1d8:	ldr	x14, [x22, x14, lsl #3]
 1dc:	eor	x16, x16, x0
 1e0:	ubfx	x0, x25, #16, #8
 1e4:	and	x20, x25, #0xff
 1e8:	eor	x14, x14, x11
 1ec:	lsr	x21, x12, #56
 1f0:	ldr	x17, [x28, x10, lsl #3]
 1f4:	ubfx	x10, x12, #16, #8
 1f8:	ldr	x1, [x24, x19, lsl #3]
 1fc:	ubfx	x19, x12, #8, #8
 200:	ldr	x11, [x28, x8, lsl #3]
 204:	ubfx	x8, x13, #8, #8
 208:	ldr	x18, [x24, x18, lsl #3]
 20c:	eor	x1, x17, x1
 210:	ldr	x17, [x30, x8, lsl #3]
 214:	eor	x11, x11, x18
 218:	ldr	x8, [x27, x0, lsl #3]
 21c:	eor	x0, x16, x14
 220:	ldr	x14, [x30, x19, lsl #3]
 224:	eor	x9, x9, x1
 228:	ldr	x10, [x27, x10, lsl #3]
 22c:	ubfx	x1, x5, #48, #8
 230:	ubfx	x18, x6, #40, #8
 234:	eor	x8, x8, x14
 238:	eor	x0, x0, x11
 23c:	eor	x10, x10, x17
 240:	eor	x0, x0, x8
 244:	eor	x9, x9, x10
 248:	lsr	x17, x4, #56
 24c:	and	x16, x23, #0xff
 250:	stp	x9, x0, [sp, #328]
 254:	ubfx	x14, x25, #32, #8
 258:	lsr	w19, w12, #24
 25c:	ldr	x18, [x2, x18, lsl #3]
 260:	ubfx	x11, x13, #16, #8
 264:	ldr	x0, [x3, x1, lsl #3]
 268:	ubfx	x10, x7, #48, #8
 26c:	ldr	x17, [x22, x17, lsl #3]
 270:	eor	x0, x0, x18
 274:	ldr	x18, [x26, x16, lsl #3]
 278:	lsr	x1, x13, #56
 27c:	ldr	x14, [x28, x14, lsl #3]
 280:	and	x16, x12, #0xff
 284:	ldr	x19, [x24, x19, lsl #3]
 288:	ubfx	x9, x23, #40, #8
 28c:	eor	x17, x17, x18
 290:	ubfx	x18, x4, #32, #8
 294:	eor	x0, x0, x17
 298:	ubfx	x8, x7, #8, #8
 29c:	ldr	x17, [x27, x11, lsl #3]
 2a0:	eor	x11, x14, x19
 2a4:	eor	x0, x0, x11
 2a8:	ubfx	x19, x6, #16, #8
 2ac:	ldr	x14, [x3, x10, lsl #3]
 2b0:	lsr	w10, w5, #24
 2b4:	ldr	x9, [x2, x9, lsl #3]
 2b8:	ldr	x11, [x26, x16, lsl #3]
 2bc:	eor	x14, x14, x9
 2c0:	ldr	x1, [x22, x1, lsl #3]
 2c4:	ubfx	x9, x13, #48, #8
 2c8:	ldr	x18, [x28, x18, lsl #3]
 2cc:	eor	x1, x1, x11
 2d0:	ubfx	x11, x7, #40, #8
 2d4:	eor	x14, x14, x1
 2d8:	ldr	x10, [x24, x10, lsl #3]
 2dc:	ubfx	x1, x12, #48, #8
 2e0:	ldr	x8, [x30, x8, lsl #3]
 2e4:	ldr	x16, [x27, x19, lsl #3]
 2e8:	eor	x8, x17, x8
 2ec:	ldr	x9, [x3, x9, lsl #3]
 2f0:	ubfx	x17, x12, #40, #8
 2f4:	ldr	x19, [x2, x11, lsl #3]
 2f8:	eor	x11, x18, x10
 2fc:	eor	x11, x14, x11
 300:	ubfx	x10, x13, #40, #8
 304:	eor	x19, x9, x19
 308:	ubfx	x18, x25, #48, #8
 30c:	ldr	x14, [x26, x20, lsl #3]
 310:	lsr	x20, x25, #56
 314:	ldr	x9, [x22, x21, lsl #3]
 318:	eor	x8, x0, x8
 31c:	ldr	x1, [x3, x1, lsl #3]
 320:	eor	x9, x9, x14
 324:	ldr	x14, [x2, x10, lsl #3]
 328:	and	x10, x6, #0xff
 32c:	eor	x9, x19, x9
 330:	eor	x8, x8, x15
 334:	eor	x1, x1, x14
 338:	ubfx	x12, x12, #32, #8
 33c:	ldr	x14, [x22, x20, lsl #3]
 340:	ldr	x10, [x26, x10, lsl #3]
 344:	ldr	x19, [x3, x18, lsl #3]
 348:	and	x18, x5, #0xff
 34c:	ldr	x20, [x2, x17, lsl #3]
 350:	lsr	x17, x6, #56
 354:	eor	x10, x14, x10
 358:	eor	x14, x1, x10
 35c:	eor	x10, x19, x20
 360:	ldr	x0, [x26, x18, lsl #3]
 364:	lsr	w19, w4, #24
 368:	ldr	x1, [x22, x17, lsl #3]
 36c:	ubfx	x20, x23, #32, #8
 370:	ubfx	x18, x7, #32, #8
 374:	ubfx	x17, x25, #8, #8
 378:	eor	x1, x1, x0
 37c:	ubfx	x25, x25, #40, #8
 380:	eor	x0, x10, x1
 384:	lsr	w1, w23, #24
 388:	ldr	x10, [x24, x19, lsl #3]
 38c:	ldr	x15, [x28, x20, lsl #3]
 390:	ldr	x19, [x28, x18, lsl #3]
 394:	eor	x15, x15, x10
 398:	ubfx	x10, x13, #32, #8
 39c:	eor	x9, x9, x15
 3a0:	ldr	x18, [x30, x17, lsl #3]
 3a4:	lsr	w17, w7, #24
 3a8:	ldr	x1, [x24, x1, lsl #3]
 3ac:	eor	x16, x16, x18
 3b0:	ubfx	x18, x6, #8, #8
 3b4:	ubfx	x6, x6, #48, #8
 3b8:	eor	x1, x19, x1
 3bc:	ubfx	x19, x5, #16, #8
 3c0:	ldr	x15, [x24, x17, lsl #3]
 3c4:	eor	x1, x14, x1
 3c8:	ldr	x10, [x28, x10, lsl #3]
 3cc:	eor	x11, x11, x16
 3d0:	ldr	x17, [x27, x19, lsl #3]
 3d4:	eor	x10, x10, x15
 3d8:	ubfx	x15, x5, #8, #8
 3dc:	eor	x0, x0, x10
 3e0:	ldr	x19, [x30, x18, lsl #3]
 3e4:	ubfx	x18, x4, #16, #8
 3e8:	ldr	x20, [x30, x15, lsl #3]
 3ec:	eor	x17, x17, x19
 3f0:	ubfx	x19, x23, #16, #8
 3f4:	and	x15, x4, #0xff
 3f8:	ldr	x14, [x27, x18, lsl #3]
 3fc:	ubfx	x18, x4, #8, #8
 400:	eor	x9, x9, x17
 404:	lsr	x5, x5, #56
 408:	eor	x4, x14, x20
 40c:	stp	x11, x9, [sp, #344]
 410:	eor	x1, x1, x4
 414:	ldr	x10, [x27, x19, lsl #3]
 418:	lsr	w13, w13, #24
 41c:	ldr	x18, [x30, x18, lsl #3]
 420:	ubfx	x7, x7, #16, #8
 424:	ldr	x4, [x3, x6, lsl #3]
 428:	eor	x10, x10, x18
 42c:	ldr	x9, [x2, x25, lsl #3]
 430:	eor	x10, x0, x10
 434:	stp	x1, x10, [sp, #360]
 438:	ubfx	x14, x23, #8, #8
 43c:	eor	x4, x4, x9
 440:	ldr	x5, [x22, x5, lsl #3]
 444:	mov	x0, #0x1                   	// #1
 448:	ldr	x9, [x26, x15, lsl #3]
 44c:	mov	x1, #0x8                   	// #8
 450:	ldr	x6, [x28, x12, lsl #3]
 454:	eor	x5, x5, x9
 458:	ldr	x9, [x24, x13, lsl #3]
 45c:	eor	x4, x4, x5
 460:	ldr	x5, [x27, x7, lsl #3]
 464:	eor	x6, x6, x9
 468:	ldr	x7, [x30, x14, lsl #3]
 46c:	eor	x4, x4, x6
 470:	eor	x5, x5, x7
 474:	eor	x4, x4, x5
 478:	str	x4, [sp, #376]
 47c:	b	484 <whirlpool_transform+0x484>
 480:	ldur	x8, [x5, #-8]
 484:	add	x4, sp, #0xc0
 488:	add	x4, x4, x1
 48c:	add	x0, x0, #0x1
 490:	add	x5, sp, #0x140
 494:	cmp	x0, #0x9
 498:	lsl	x1, x0, #3
 49c:	stur	x8, [x4, #-8]
 4a0:	add	x5, x5, x1
 4a4:	b.ne	480 <whirlpool_transform+0x480>  // b.any
 4a8:	ldp	x25, x1, [sp, #256]
 4ac:	mov	x0, #0x1                   	// #1
 4b0:	ldp	x4, x9, [sp, #272]
 4b4:	ldp	x5, x8, [sp, #288]
 4b8:	lsr	x10, x1, #56
 4bc:	ubfx	x7, x25, #48, #8
 4c0:	ldr	x1, [sp, #312]
 4c4:	and	x15, x4, #0xff
 4c8:	ldr	x6, [sp, #304]
 4cc:	lsr	w14, w8, #24
 4d0:	ubfx	x1, x1, #40, #8
 4d4:	ubfx	x12, x9, #8, #8
 4d8:	ldr	x13, [x3, x7, lsl #3]
 4dc:	ubfx	x4, x6, #32, #8
 4e0:	ldr	x7, [x2, x1, lsl #3]
 4e4:	ubfx	x11, x5, #16, #8
 4e8:	ldr	x10, [x22, x10, lsl #3]
 4ec:	eor	x13, x13, x7
 4f0:	ldr	x7, [x26, x15, lsl #3]
 4f4:	ubfx	x1, x6, #40, #8
 4f8:	ldr	x9, [sp, #312]
 4fc:	eor	x7, x10, x7
 500:	ldr	x4, [x28, x4, lsl #3]
 504:	lsr	x17, x25, #56
 508:	ldr	x10, [x24, x14, lsl #3]
 50c:	ubfx	x9, x9, #48, #8
 510:	ldr	x12, [x30, x12, lsl #3]
 514:	eor	x4, x4, x10
 518:	ldr	x10, [sp, #264]
 51c:	eor	x7, x13, x7
 520:	ldr	x1, [x2, x1, lsl #3]
 524:	and	x14, x10, #0xff
 528:	ldr	x11, [x27, x11, lsl #3]
 52c:	eor	x13, x7, x4
 530:	ldr	x9, [x3, x9, lsl #3]
 534:	eor	x11, x11, x12
 538:	ldr	x17, [x22, x17, lsl #3]
 53c:	eor	x9, x9, x1
 540:	ldr	x1, [x26, x14, lsl #3]
 544:	ubfx	x16, x8, #32, #8
 548:	ldr	x23, [sp, #200]
 54c:	eor	x13, x13, x11
 550:	ldr	x4, [sp, #280]
 554:	lsr	w10, w5, #24
 558:	ldr	x11, [sp, #264]
 55c:	eor	x13, x13, x23
 560:	eor	x1, x17, x1
 564:	ubfx	x7, x4, #16, #8
 568:	eor	x1, x9, x1
 56c:	str	x13, [sp, #328]
 570:	ldr	x16, [x28, x16, lsl #3]
 574:	ubfx	x12, x11, #48, #8
 578:	ldr	x10, [x24, x10, lsl #3]
 57c:	ubfx	x11, x25, #40, #8
 580:	ldr	x4, [sp, #272]
 584:	eor	x10, x16, x10
 588:	ldr	x13, [sp, #272]
 58c:	lsr	x18, x5, #56
 590:	ldr	x15, [sp, #280]
 594:	ubfx	x4, x4, #8, #8
 598:	ldr	x14, [sp, #312]
 59c:	and	x15, x15, #0xff
 5a0:	ldp	x9, x17, [sp, #264]
 5a4:	lsr	x13, x13, #56
 5a8:	ldr	x11, [x2, x11, lsl #3]
 5ac:	ubfx	x14, x14, #32, #8
 5b0:	ldr	x12, [x3, x12, lsl #3]
 5b4:	eor	x1, x1, x10
 5b8:	ubfx	x17, x17, #48, #8
 5bc:	ubfx	x9, x9, #40, #8
 5c0:	eor	x12, x12, x11
 5c4:	str	x17, [sp, #112]
 5c8:	ldr	x13, [x22, x13, lsl #3]
 5cc:	ubfx	x10, x5, #8, #8
 5d0:	ldr	x11, [x26, x15, lsl #3]
 5d4:	ubfx	x15, x25, #32, #8
 5d8:	ldr	x16, [sp, #280]
 5dc:	eor	x11, x13, x11
 5e0:	ldr	x17, [x3, x17, lsl #3]
 5e4:	eor	x11, x12, x11
 5e8:	ldr	x9, [x2, x9, lsl #3]
 5ec:	lsr	x20, x16, #56
 5f0:	ldr	w12, [sp, #312]
 5f4:	ubfx	x21, x16, #48, #8
 5f8:	eor	x9, x17, x9
 5fc:	and	x17, x5, #0xff
 600:	ldr	x20, [x22, x20, lsl #3]
 604:	lsr	w13, w12, #24
 608:	ldp	x12, x16, [sp, #264]
 60c:	ldr	x17, [x26, x17, lsl #3]
 610:	ldr	x18, [x22, x18, lsl #3]
 614:	eor	x20, x20, x17
 618:	and	x17, x8, #0xff
 61c:	ubfx	x19, x16, #40, #8
 620:	lsr	w16, w6, #24
 624:	ubfx	x12, x12, #32, #8
 628:	ldr	x14, [x28, x14, lsl #3]
 62c:	eor	x9, x9, x20
 630:	ldr	x17, [x26, x17, lsl #3]
 634:	ldr	x16, [x24, x16, lsl #3]
 638:	eor	x18, x18, x17
 63c:	lsr	w17, w25, #24
 640:	ldr	x13, [x24, x13, lsl #3]
 644:	eor	x14, x14, x16
 648:	ldr	x15, [x28, x15, lsl #3]
 64c:	ubfx	x16, x6, #16, #8
 650:	ldr	x4, [x30, x4, lsl #3]
 654:	eor	x15, x15, x13
 658:	ldr	x7, [x27, x7, lsl #3]
 65c:	eor	x11, x11, x14
 660:	ubfx	x14, x8, #16, #8
 664:	eor	x9, x9, x15
 668:	ldr	x12, [x28, x12, lsl #3]
 66c:	eor	x7, x7, x4
 670:	ldr	x13, [x24, x17, lsl #3]
 674:	eor	x1, x1, x7
 678:	ldr	x17, [x30, x10, lsl #3]
 67c:	eor	x10, x12, x13
 680:	ldr	x19, [x2, x19, lsl #3]
 684:	ubfx	x15, x6, #8, #8
 688:	ldr	x12, [x27, x16, lsl #3]
 68c:	ubfx	x16, x8, #8, #8
 690:	ldr	x21, [x3, x21, lsl #3]
 694:	ldr	x14, [x27, x14, lsl #3]
 698:	eor	x21, x21, x19
 69c:	ldr	x4, [sp, #192]
 6a0:	eor	x21, x21, x18
 6a4:	ldr	x7, [sp, #208]
 6a8:	eor	x10, x21, x10
 6ac:	ldr	x13, [sp, #312]
 6b0:	eor	x14, x14, x17
 6b4:	ldr	x15, [x30, x15, lsl #3]
 6b8:	eor	x11, x11, x14
 6bc:	ubfx	x13, x13, #16, #8
 6c0:	eor	x11, x11, x7
 6c4:	ldr	x16, [x30, x16, lsl #3]
 6c8:	and	x19, x6, #0xff
 6cc:	ldr	x13, [x27, x13, lsl #3]
 6d0:	eor	x12, x12, x16
 6d4:	ldr	x14, [sp, #280]
 6d8:	eor	x13, x13, x15
 6dc:	eor	x10, x10, x13
 6e0:	eor	x9, x9, x12
 6e4:	ldr	x13, [sp, #272]
 6e8:	ubfx	x12, x5, #48, #8
 6ec:	ubfx	x15, x14, #40, #8
 6f0:	lsr	x14, x8, #56
 6f4:	ubfx	x16, x25, #16, #8
 6f8:	eor	x1, x1, x4
 6fc:	ubfx	x18, x13, #32, #8
 700:	ldr	x13, [sp, #216]
 704:	ldr	x18, [x28, x18, lsl #3]
 708:	eor	x9, x9, x13
 70c:	stp	x11, x9, [sp, #336]
 710:	ldr	w11, [sp, #264]
 714:	ldr	x9, [x2, x15, lsl #3]
 718:	ubfx	x15, x8, #48, #8
 71c:	lsr	w17, w11, #24
 720:	ubfx	x8, x8, #40, #8
 724:	ldr	x11, [x3, x12, lsl #3]
 728:	ldr	x12, [sp, #224]
 72c:	eor	x11, x11, x9
 730:	ldr	x9, [x22, x14, lsl #3]
 734:	eor	x10, x10, x12
 738:	str	x10, [sp, #352]
 73c:	ubfx	x14, x5, #40, #8
 740:	ldr	x10, [x26, x19, lsl #3]
 744:	lsr	x19, x6, #56
 748:	ldr	x14, [x2, x14, lsl #3]
 74c:	eor	x10, x9, x10
 750:	ldr	x9, [x24, x17, lsl #3]
 754:	eor	x10, x11, x10
 758:	ldr	x17, [sp, #312]
 75c:	eor	x9, x18, x9
 760:	ldr	x15, [x3, x15, lsl #3]
 764:	and	x17, x17, #0xff
 768:	eor	x10, x10, x9
 76c:	ubfx	x6, x6, #48, #8
 770:	eor	x15, x15, x14
 774:	and	x18, x25, #0xff
 778:	ldr	x9, [x27, x16, lsl #3]
 77c:	ubfx	x5, x5, #32, #8
 780:	ldr	x16, [x22, x19, lsl #3]
 784:	ldr	x14, [x26, x17, lsl #3]
 788:	ldr	x11, [sp, #312]
 78c:	eor	x14, x16, x14
 790:	ldr	x16, [sp, #280]
 794:	eor	x14, x15, x14
 798:	lsr	x20, x11, #56
 79c:	ubfx	x21, x11, #8, #8
 7a0:	ldr	x6, [x3, x6, lsl #3]
 7a4:	ubfx	x11, x25, #8, #8
 7a8:	ldr	x8, [x2, x8, lsl #3]
 7ac:	ldr	x17, [x26, x18, lsl #3]
 7b0:	eor	x8, x6, x8
 7b4:	ubfx	x18, x16, #32, #8
 7b8:	ldr	w16, [sp, #280]
 7bc:	ldr	x6, [x22, x20, lsl #3]
 7c0:	lsr	w19, w16, #24
 7c4:	eor	x6, x6, x17
 7c8:	ldr	x25, [sp, #232]
 7cc:	eor	x6, x8, x6
 7d0:	ldr	x5, [x28, x5, lsl #3]
 7d4:	ldr	w15, [sp, #272]
 7d8:	ldp	x17, x16, [sp, #264]
 7dc:	ldr	x8, [sp, #264]
 7e0:	lsr	w15, w15, #24
 7e4:	ldr	x19, [x24, x19, lsl #3]
 7e8:	ubfx	x16, x16, #16, #8
 7ec:	ubfx	x8, x8, #16, #8
 7f0:	ldr	x18, [x28, x18, lsl #3]
 7f4:	eor	x5, x5, x19
 7f8:	ldr	x15, [x24, x15, lsl #3]
 7fc:	ubfx	x17, x17, #8, #8
 800:	ldr	x19, [x30, x21, lsl #3]
 804:	eor	x15, x18, x15
 808:	ldr	x18, [x27, x16, lsl #3]
 80c:	eor	x14, x14, x15
 810:	ldr	x16, [x27, x8, lsl #3]
 814:	eor	x8, x6, x5
 818:	ldr	x5, [x30, x11, lsl #3]
 81c:	eor	x9, x9, x19
 820:	ldr	x15, [x30, x17, lsl #3]
 824:	eor	x16, x16, x5
 828:	ldp	x6, x5, [sp, #240]
 82c:	eor	x11, x18, x15
 830:	eor	x11, x8, x11
 834:	eor	x9, x10, x9
 838:	eor	x14, x14, x16
 83c:	eor	x9, x9, x25
 840:	mov	x8, #0x8                   	// #8
 844:	eor	x14, x14, x6
 848:	eor	x11, x11, x5
 84c:	stp	x9, x14, [sp, #360]
 850:	str	x11, [sp, #376]
 854:	b	85c <whirlpool_transform+0x85c>
 858:	ldur	x1, [x10, #-8]
 85c:	add	x9, sp, #0x100
 860:	add	x9, x9, x8
 864:	add	x0, x0, #0x1
 868:	add	x10, sp, #0x140
 86c:	cmp	x0, #0x9
 870:	lsl	x8, x0, #3
 874:	stur	x1, [x9, #-8]
 878:	add	x10, x10, x8
 87c:	b.ne	858 <whirlpool_transform+0x858>  // b.any
 880:	adrp	x1, 0 <whirlpool_transform>
 884:	ldr	x0, [sp, #104]
 888:	ldr	x1, [x1]
 88c:	add	x0, x0, #0x8
 890:	str	x0, [sp, #104]
 894:	cmp	x1, x0
 898:	b.eq	8a4 <whirlpool_transform+0x8a4>  // b.none
 89c:	ldr	x15, [x0]
 8a0:	b	180 <whirlpool_transform+0x180>
 8a4:	ldr	x2, [sp, #120]
 8a8:	mov	x0, #0x1                   	// #1
 8ac:	nop
 8b0:	add	x1, sp, #0x80
 8b4:	add	x3, x1, x0, lsl #3
 8b8:	ldr	x1, [x2, x0, lsl #3]
 8bc:	ldur	x3, [x3, #-8]
 8c0:	eor	x1, x1, x3
 8c4:	str	x1, [x2, x0, lsl #3]
 8c8:	add	x0, x0, #0x1
 8cc:	cmp	x0, #0x9
 8d0:	b.ne	8b0 <whirlpool_transform+0x8b0>  // b.any
 8d4:	ldr	x2, [sp, #120]
 8d8:	mov	x0, #0x1                   	// #1
 8dc:	nop
 8e0:	add	x1, sp, #0x100
 8e4:	add	x3, x1, x0, lsl #3
 8e8:	ldr	x1, [x2, x0, lsl #3]
 8ec:	ldur	x3, [x3, #-8]
 8f0:	eor	x1, x1, x3
 8f4:	str	x1, [x2, x0, lsl #3]
 8f8:	add	x0, x0, #0x1
 8fc:	cmp	x0, #0x9
 900:	b.ne	8e0 <whirlpool_transform+0x8e0>  // b.any
 904:	ldp	x19, x20, [sp, #16]
 908:	ldp	x21, x22, [sp, #32]
 90c:	ldp	x23, x24, [sp, #48]
 910:	ldp	x25, x26, [sp, #64]
 914:	ldp	x27, x28, [sp, #80]
 918:	ldp	x29, x30, [sp], #384
 91c:	ret
	...

0000000000000948 <whirlpool_read>:
 948:	add	x0, x0, #0x40
 94c:	ret

0000000000000950 <whirlpool_final>:
 950:	stp	x29, x30, [sp, #-32]!
 954:	mov	x29, sp
 958:	ldr	x1, [x0, #128]
 95c:	stp	x19, x20, [sp, #16]
 960:	mov	x19, x0
 964:	add	x20, x0, #0x40
 968:	cmp	x1, #0x40
 96c:	b.eq	a9c <whirlpool_final+0x14c>  // b.none
 970:	add	x2, x0, x1
 974:	add	x0, x1, #0x1
 978:	str	x0, [x19, #128]
 97c:	mov	w3, #0xffffff80            	// #-128
 980:	cmp	x0, #0x20
 984:	strb	w3, [x2, #64]
 988:	b.ls	9c8 <whirlpool_final+0x78>  // b.plast
 98c:	cmp	x0, #0x3f
 990:	b.hi	ab4 <whirlpool_final+0x164>  // b.pmore
 994:	add	x0, x1, #0x41
 998:	add	x1, x19, #0x80
 99c:	add	x0, x19, x0
 9a0:	strb	wzr, [x0], #1
 9a4:	cmp	x1, x0
 9a8:	b.ne	9a0 <whirlpool_final+0x50>  // b.any
 9ac:	mov	x0, #0x40                  	// #64
 9b0:	str	x0, [x19, #128]
 9b4:	mov	x0, x19
 9b8:	mov	x1, x20
 9bc:	bl	0 <whirlpool_transform>
 9c0:	mov	x0, #0x0                   	// #0
 9c4:	b	9cc <whirlpool_final+0x7c>
 9c8:	b.eq	a04 <whirlpool_final+0xb4>  // b.none
 9cc:	mov	x1, x0
 9d0:	add	x2, x19, #0x3f
 9d4:	nop
 9d8:	add	x1, x1, #0x1
 9dc:	cmp	x1, #0x20
 9e0:	strb	wzr, [x2, x1]
 9e4:	b.ne	9d8 <whirlpool_final+0x88>  // b.any
 9e8:	add	x1, x0, #0x1
 9ec:	mov	x2, #0x1f                  	// #31
 9f0:	cmp	x1, #0x20
 9f4:	sub	x0, x2, x0
 9f8:	csel	x0, x0, xzr, ls  // ls = plast
 9fc:	add	x0, x0, x1
 a00:	str	x0, [x19, #128]
 a04:	add	x0, x20, x0
 a08:	add	x1, x19, #0x88
 a0c:	mov	x2, #0x20                  	// #32
 a10:	bl	0 <grub_memmove>
 a14:	ldr	x0, [x19, #128]
 a18:	add	x0, x0, #0x20
 a1c:	str	x0, [x19, #128]
 a20:	cmp	x0, #0x40
 a24:	b.eq	a88 <whirlpool_final+0x138>  // b.none
 a28:	mov	x0, x19
 a2c:	nop
 a30:	ldr	x1, [x0]
 a34:	strb	w1, [x0, #71]
 a38:	add	x0, x0, #0x8
 a3c:	lsr	x7, x1, #56
 a40:	lsr	x6, x1, #48
 a44:	lsr	x5, x1, #40
 a48:	lsr	x4, x1, #32
 a4c:	lsr	x3, x1, #24
 a50:	lsr	x2, x1, #16
 a54:	lsr	x1, x1, #8
 a58:	strb	w7, [x0, #56]
 a5c:	strb	w6, [x0, #57]
 a60:	strb	w5, [x0, #58]
 a64:	strb	w4, [x0, #59]
 a68:	strb	w3, [x0, #60]
 a6c:	strb	w2, [x0, #61]
 a70:	strb	w1, [x0, #62]
 a74:	cmp	x20, x0
 a78:	b.ne	a30 <whirlpool_final+0xe0>  // b.any
 a7c:	ldp	x19, x20, [sp, #16]
 a80:	ldp	x29, x30, [sp], #32
 a84:	ret
 a88:	mov	x1, x20
 a8c:	mov	x0, x19
 a90:	bl	0 <whirlpool_transform>
 a94:	str	xzr, [x19, #128]
 a98:	b	a28 <whirlpool_final+0xd8>
 a9c:	mov	x1, x20
 aa0:	bl	0 <whirlpool_transform>
 aa4:	mov	w1, #0xffffff80            	// #-128
 aa8:	mov	x0, #0x1                   	// #1
 aac:	strb	w1, [x19, #64]
 ab0:	b	9cc <whirlpool_final+0x7c>
 ab4:	cmp	x0, #0x40
 ab8:	b.ne	a04 <whirlpool_final+0xb4>  // b.any
 abc:	b	9b4 <whirlpool_final+0x64>

0000000000000ac0 <whirlpool_add>:
 ac0:	stp	x29, x30, [sp, #-64]!
 ac4:	mov	x29, sp
 ac8:	stp	x19, x20, [sp, #16]
 acc:	mov	x20, x1
 ad0:	mov	x19, x0
 ad4:	ldr	x1, [x0, #128]
 ad8:	stp	x21, x22, [sp, #32]
 adc:	mov	x21, x2
 ae0:	str	x23, [sp, #48]
 ae4:	cmp	x1, #0x40
 ae8:	b.eq	b68 <whirlpool_add+0xa8>  // b.none
 aec:	cbz	x20, b54 <whirlpool_add+0x94>
 af0:	mov	x0, x1
 af4:	cbz	x1, b78 <whirlpool_add+0xb8>
 af8:	mov	x23, x2
 afc:	add	x2, x19, #0x3f
 b00:	cbnz	x21, b20 <whirlpool_add+0x60>
 b04:	b	b3c <whirlpool_add+0x7c>
 b08:	add	x0, x0, #0x1
 b0c:	str	x0, [x19, #128]
 b10:	subs	x23, x23, #0x1
 b14:	ldrb	w1, [x20], #1
 b18:	strb	w1, [x2, x0]
 b1c:	b.eq	b3c <whirlpool_add+0x7c>  // b.none
 b20:	cmp	x0, #0x3f
 b24:	b.ls	b08 <whirlpool_add+0x48>  // b.plast
 b28:	mov	x0, x19
 b2c:	mov	x2, #0x0                   	// #0
 b30:	mov	x1, #0x0                   	// #0
 b34:	bl	ac0 <whirlpool_add>
 b38:	b	b7c <whirlpool_add+0xbc>
 b3c:	cmp	x0, #0x40
 b40:	b.ne	b54 <whirlpool_add+0x94>  // b.any
 b44:	add	x1, x19, #0x40
 b48:	mov	x0, x19
 b4c:	bl	0 <whirlpool_transform>
 b50:	str	xzr, [x19, #128]
 b54:	ldp	x19, x20, [sp, #16]
 b58:	ldp	x21, x22, [sp, #32]
 b5c:	ldr	x23, [sp, #48]
 b60:	ldp	x29, x30, [sp], #64
 b64:	ret
 b68:	add	x1, x0, #0x40
 b6c:	bl	0 <whirlpool_transform>
 b70:	str	xzr, [x19, #128]
 b74:	cbz	x20, b54 <whirlpool_add+0x94>
 b78:	mov	x23, x21
 b7c:	cmp	x23, #0x3f
 b80:	b.ls	c78 <whirlpool_add+0x1b8>  // b.plast
 b84:	sub	x22, x23, #0x40
 b88:	and	x22, x22, #0xffffffffffffffc0
 b8c:	add	x22, x22, #0x40
 b90:	add	x22, x20, x22
 b94:	nop
 b98:	mov	x1, x20
 b9c:	mov	x0, x19
 ba0:	bl	0 <whirlpool_transform>
 ba4:	str	xzr, [x19, #128]
 ba8:	add	x20, x20, #0x40
 bac:	cmp	x20, x22
 bb0:	b.ne	b98 <whirlpool_add+0xd8>  // b.any
 bb4:	and	x23, x23, #0x3f
 bb8:	cbz	x23, bf8 <whirlpool_add+0x138>
 bbc:	ldr	x0, [x19, #128]
 bc0:	add	x2, x19, #0x3f
 bc4:	mov	x1, x0
 bc8:	add	x23, x23, x0
 bcc:	mvn	x0, x0
 bd0:	add	x22, x22, x0
 bd4:	b	bf0 <whirlpool_add+0x130>
 bd8:	add	x1, x1, #0x1
 bdc:	str	x1, [x19, #128]
 be0:	cmp	x1, x23
 be4:	ldrb	w0, [x22, x1]
 be8:	strb	w0, [x2, x1]
 bec:	b.eq	bf8 <whirlpool_add+0x138>  // b.none
 bf0:	cmp	x1, #0x3f
 bf4:	b.ls	bd8 <whirlpool_add+0x118>  // b.plast
 bf8:	add	x3, x19, #0xa7
 bfc:	lsl	x2, x21, #3
 c00:	add	x19, x19, #0x87
 c04:	mov	w1, #0x0                   	// #0
 c08:	b	c2c <whirlpool_add+0x16c>
 c0c:	ldrb	w0, [x3]
 c10:	add	w1, w1, w2, uxtb
 c14:	lsr	x2, x2, #8
 c18:	add	w1, w0, w1
 c1c:	strb	w1, [x3], #-1
 c20:	lsr	w1, w1, #8
 c24:	cmp	x19, x3
 c28:	b.eq	c44 <whirlpool_add+0x184>  // b.none
 c2c:	eor	w0, w1, #0x1
 c30:	cmp	x2, #0x0
 c34:	and	w0, w0, #0x1
 c38:	csel	w0, w0, wzr, eq  // eq = none
 c3c:	cbz	w0, c0c <whirlpool_add+0x14c>
 c40:	b	b54 <whirlpool_add+0x94>
 c44:	cmp	x2, #0x0
 c48:	and	w1, w1, #0x1
 c4c:	csinc	w1, w1, wzr, eq  // eq = none
 c50:	cbz	w1, b54 <whirlpool_add+0x94>
 c54:	adrp	x1, 0 <whirlpool_transform>
 c58:	adrp	x0, 0 <whirlpool_transform>
 c5c:	adrp	x3, 0 <whirlpool_transform>
 c60:	mov	w2, #0x547                 	// #1351
 c64:	ldr	x1, [x1]
 c68:	ldr	x0, [x0]
 c6c:	ldr	x3, [x3]
 c70:	add	x3, x3, #0xd50
 c74:	bl	0 <_gcry_assert_failed>
 c78:	mov	x22, x20
 c7c:	b	bb8 <whirlpool_add+0xf8>
	...

0000000000000c98 <whirlpool_write>:
 c98:	b	ac0 <whirlpool_add>
 c9c:	nop

0000000000000ca0 <whirlpool_init>:
 ca0:	mov	x2, #0xa8                  	// #168
 ca4:	mov	w1, #0x0                   	// #0
 ca8:	b	0 <grub_memset>
 cac:	nop

0000000000000cb0 <grub_mod_init>:
 cb0:	adrp	x0, 0 <whirlpool_transform>
 cb4:	ldr	x0, [x0]
 cb8:	b	0 <grub_md_register>
 cbc:	nop
	...

0000000000000cc8 <grub_mod_fini>:
 cc8:	adrp	x0, 0 <whirlpool_transform>
 ccc:	ldr	x0, [x0]
 cd0:	b	0 <grub_md_unregister>
 cd4:	nop
	...
