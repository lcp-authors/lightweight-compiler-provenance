
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sleep_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000005f0 <_init>:
 5f0:	stp	x29, x30, [sp, #-16]!
 5f4:	mov	x29, sp
 5f8:	bl	690 <call_weak_fn>
 5fc:	ldp	x29, x30, [sp], #16
 600:	ret

Disassembly of section .plt:

0000000000000610 <.plt>:
 610:	stp	x16, x30, [sp, #-16]!
 614:	adrp	x16, 10000 <__FRAME_END__+0xf508>
 618:	ldr	x17, [x16, #4088]
 61c:	add	x16, x16, #0xff8
 620:	br	x17
 624:	nop
 628:	nop
 62c:	nop

0000000000000630 <builtin_error@plt>:
 630:	adrp	x16, 11000 <builtin_error>
 634:	ldr	x17, [x16]
 638:	add	x16, x16, #0x0
 63c:	br	x17

0000000000000640 <__cxa_finalize@plt>:
 640:	adrp	x16, 11000 <builtin_error>
 644:	ldr	x17, [x16, #8]
 648:	add	x16, x16, #0x8
 64c:	br	x17

0000000000000650 <builtin_usage@plt>:
 650:	adrp	x16, 11000 <builtin_error>
 654:	ldr	x17, [x16, #16]
 658:	add	x16, x16, #0x10
 65c:	br	x17

0000000000000660 <__gmon_start__@plt>:
 660:	adrp	x16, 11000 <builtin_error>
 664:	ldr	x17, [x16, #24]
 668:	add	x16, x16, #0x18
 66c:	br	x17

0000000000000670 <fsleep@plt>:
 670:	adrp	x16, 11000 <builtin_error>
 674:	ldr	x17, [x16, #32]
 678:	add	x16, x16, #0x20
 67c:	br	x17

0000000000000680 <uconvert@plt>:
 680:	adrp	x16, 11000 <builtin_error>
 684:	ldr	x17, [x16, #40]
 688:	add	x16, x16, #0x28
 68c:	br	x17

Disassembly of section .text:

0000000000000690 <call_weak_fn>:
 690:	adrp	x0, 10000 <__FRAME_END__+0xf508>
 694:	ldr	x0, [x0, #4056]
 698:	cbz	x0, 6a0 <call_weak_fn+0x10>
 69c:	b	660 <__gmon_start__@plt>
 6a0:	ret

00000000000006a4 <deregister_tm_clones>:
 6a4:	stp	x29, x30, [sp, #-32]!
 6a8:	mov	x29, sp
 6ac:	adrp	x0, 11000 <builtin_error>
 6b0:	add	x0, x0, #0x80
 6b4:	str	x0, [sp, #24]
 6b8:	ldr	x0, [sp, #24]
 6bc:	str	x0, [sp, #24]
 6c0:	ldr	x1, [sp, #24]
 6c4:	adrp	x0, 11000 <builtin_error>
 6c8:	add	x0, x0, #0x80
 6cc:	cmp	x1, x0
 6d0:	b.eq	708 <deregister_tm_clones+0x64>  // b.none
 6d4:	adrp	x0, 10000 <__FRAME_END__+0xf508>
 6d8:	ldr	x0, [x0, #4040]
 6dc:	str	x0, [sp, #16]
 6e0:	ldr	x0, [sp, #16]
 6e4:	str	x0, [sp, #16]
 6e8:	ldr	x0, [sp, #16]
 6ec:	cmp	x0, #0x0
 6f0:	b.eq	70c <deregister_tm_clones+0x68>  // b.none
 6f4:	ldr	x1, [sp, #16]
 6f8:	adrp	x0, 11000 <builtin_error>
 6fc:	add	x0, x0, #0x80
 700:	blr	x1
 704:	b	70c <deregister_tm_clones+0x68>
 708:	nop
 70c:	ldp	x29, x30, [sp], #32
 710:	ret

0000000000000714 <register_tm_clones>:
 714:	stp	x29, x30, [sp, #-48]!
 718:	mov	x29, sp
 71c:	adrp	x0, 11000 <builtin_error>
 720:	add	x0, x0, #0x80
 724:	str	x0, [sp, #40]
 728:	ldr	x0, [sp, #40]
 72c:	str	x0, [sp, #40]
 730:	ldr	x1, [sp, #40]
 734:	adrp	x0, 11000 <builtin_error>
 738:	add	x0, x0, #0x80
 73c:	sub	x0, x1, x0
 740:	asr	x0, x0, #3
 744:	lsr	x1, x0, #63
 748:	add	x0, x1, x0
 74c:	asr	x0, x0, #1
 750:	str	x0, [sp, #32]
 754:	ldr	x0, [sp, #32]
 758:	cmp	x0, #0x0
 75c:	b.eq	798 <register_tm_clones+0x84>  // b.none
 760:	adrp	x0, 10000 <__FRAME_END__+0xf508>
 764:	ldr	x0, [x0, #4064]
 768:	str	x0, [sp, #24]
 76c:	ldr	x0, [sp, #24]
 770:	str	x0, [sp, #24]
 774:	ldr	x0, [sp, #24]
 778:	cmp	x0, #0x0
 77c:	b.eq	79c <register_tm_clones+0x88>  // b.none
 780:	ldr	x2, [sp, #24]
 784:	ldr	x1, [sp, #32]
 788:	adrp	x0, 11000 <builtin_error>
 78c:	add	x0, x0, #0x80
 790:	blr	x2
 794:	b	79c <register_tm_clones+0x88>
 798:	nop
 79c:	ldp	x29, x30, [sp], #48
 7a0:	ret

00000000000007a4 <__do_global_dtors_aux>:
 7a4:	stp	x29, x30, [sp, #-16]!
 7a8:	mov	x29, sp
 7ac:	adrp	x0, 11000 <builtin_error>
 7b0:	add	x0, x0, #0x80
 7b4:	ldrb	w0, [x0]
 7b8:	and	x0, x0, #0xff
 7bc:	cmp	x0, #0x0
 7c0:	b.ne	7fc <__do_global_dtors_aux+0x58>  // b.any
 7c4:	adrp	x0, 10000 <__FRAME_END__+0xf508>
 7c8:	ldr	x0, [x0, #4048]
 7cc:	cmp	x0, #0x0
 7d0:	b.eq	7e4 <__do_global_dtors_aux+0x40>  // b.none
 7d4:	adrp	x0, 11000 <builtin_error>
 7d8:	add	x0, x0, #0x30
 7dc:	ldr	x0, [x0]
 7e0:	bl	640 <__cxa_finalize@plt>
 7e4:	bl	6a4 <deregister_tm_clones>
 7e8:	adrp	x0, 11000 <builtin_error>
 7ec:	add	x0, x0, #0x80
 7f0:	mov	w1, #0x1                   	// #1
 7f4:	strb	w1, [x0]
 7f8:	b	800 <__do_global_dtors_aux+0x5c>
 7fc:	nop
 800:	ldp	x29, x30, [sp], #16
 804:	ret

0000000000000808 <frame_dummy>:
 808:	stp	x29, x30, [sp, #-16]!
 80c:	mov	x29, sp
 810:	bl	714 <register_tm_clones>
 814:	nop
 818:	ldp	x29, x30, [sp], #16
 81c:	ret

0000000000000820 <sleep_builtin>:
 820:	stp	x29, x30, [sp, #-48]!
 824:	mov	x29, sp
 828:	str	x0, [sp, #24]
 82c:	ldr	x0, [sp, #24]
 830:	cmp	x0, #0x0
 834:	b.ne	844 <sleep_builtin+0x24>  // b.any
 838:	bl	650 <builtin_usage@plt>
 83c:	mov	w0, #0x102                 	// #258
 840:	b	944 <sleep_builtin+0x124>
 844:	ldr	x0, [sp, #24]
 848:	ldr	x0, [x0, #8]
 84c:	cmp	x0, #0x0
 850:	b.eq	8b0 <sleep_builtin+0x90>  // b.none
 854:	ldr	x0, [sp, #24]
 858:	ldr	x0, [x0, #8]
 85c:	ldr	x0, [x0]
 860:	ldrb	w0, [x0]
 864:	cmp	w0, #0x2d
 868:	b.ne	8b0 <sleep_builtin+0x90>  // b.any
 86c:	ldr	x0, [sp, #24]
 870:	ldr	x0, [x0, #8]
 874:	ldr	x0, [x0]
 878:	add	x0, x0, #0x1
 87c:	ldrb	w0, [x0]
 880:	cmp	w0, #0x2d
 884:	b.ne	8b0 <sleep_builtin+0x90>  // b.any
 888:	ldr	x0, [sp, #24]
 88c:	ldr	x0, [x0, #8]
 890:	ldr	x0, [x0]
 894:	add	x0, x0, #0x2
 898:	ldrb	w0, [x0]
 89c:	cmp	w0, #0x0
 8a0:	b.ne	8b0 <sleep_builtin+0x90>  // b.any
 8a4:	ldr	x0, [sp, #24]
 8a8:	ldr	x0, [x0]
 8ac:	str	x0, [sp, #24]
 8b0:	ldr	x0, [sp, #24]
 8b4:	ldr	x0, [x0, #8]
 8b8:	ldr	x0, [x0]
 8bc:	ldrb	w0, [x0]
 8c0:	cmp	w0, #0x2d
 8c4:	b.eq	8d8 <sleep_builtin+0xb8>  // b.none
 8c8:	ldr	x0, [sp, #24]
 8cc:	ldr	x0, [x0]
 8d0:	cmp	x0, #0x0
 8d4:	b.eq	8e4 <sleep_builtin+0xc4>  // b.none
 8d8:	bl	650 <builtin_usage@plt>
 8dc:	mov	w0, #0x102                 	// #258
 8e0:	b	944 <sleep_builtin+0x124>
 8e4:	ldr	x0, [sp, #24]
 8e8:	ldr	x0, [x0, #8]
 8ec:	ldr	x0, [x0]
 8f0:	add	x2, sp, #0x20
 8f4:	add	x1, sp, #0x28
 8f8:	bl	680 <uconvert@plt>
 8fc:	cmp	w0, #0x0
 900:	b.eq	924 <sleep_builtin+0x104>  // b.none
 904:	ldr	x0, [sp, #40]
 908:	mov	w2, w0
 90c:	ldr	x0, [sp, #32]
 910:	mov	w1, w0
 914:	mov	w0, w2
 918:	bl	670 <fsleep@plt>
 91c:	mov	w0, #0x0                   	// #0
 920:	b	944 <sleep_builtin+0x124>
 924:	ldr	x0, [sp, #24]
 928:	ldr	x0, [x0, #8]
 92c:	ldr	x0, [x0]
 930:	mov	x1, x0
 934:	adrp	x0, 0 <_init-0x5f0>
 938:	add	x0, x0, #0x960
 93c:	bl	630 <builtin_error@plt>
 940:	mov	w0, #0x1                   	// #1
 944:	ldp	x29, x30, [sp], #48
 948:	ret

Disassembly of section .fini:

000000000000094c <_fini>:
 94c:	stp	x29, x30, [sp, #-16]!
 950:	mov	x29, sp
 954:	ldp	x29, x30, [sp], #16
 958:	ret
