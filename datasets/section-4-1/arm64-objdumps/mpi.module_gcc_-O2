
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mpi.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_gcry_mpi_m_check>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	mov	x19, x0
      10:	bl	6c08 <_gcry_check_heap>
      14:	ldr	x0, [x19, #16]
      18:	ldr	x19, [sp, #16]
      1c:	ldp	x29, x30, [sp], #32
      20:	b	6c08 <_gcry_check_heap>
      24:	nop

0000000000000028 <_gcry_mpi_alloc_limb_space>:
      28:	stp	x29, x30, [sp, #-32]!
      2c:	cmp	w0, #0x0
      30:	mov	x2, #0x8                   	// #8
      34:	mov	x29, sp
      38:	str	x19, [sp, #16]
      3c:	mov	w19, w0
      40:	ubfiz	x0, x19, #3, #32
      44:	csel	x0, x0, x2, ne  // ne = any
      48:	cbz	w1, 64 <_gcry_mpi_alloc_limb_space+0x3c>
      4c:	bl	6bd0 <gcry_xmalloc_secure>
      50:	cbnz	w19, 58 <_gcry_mpi_alloc_limb_space+0x30>
      54:	str	xzr, [x0]
      58:	ldr	x19, [sp, #16]
      5c:	ldp	x29, x30, [sp], #32
      60:	ret
      64:	bl	6ba0 <gcry_xmalloc>
      68:	b	50 <_gcry_mpi_alloc_limb_space+0x28>
      6c:	nop

0000000000000070 <_gcry_mpi_alloc>:
      70:	stp	x29, x30, [sp, #-32]!
      74:	mov	x29, sp
      78:	stp	x19, x20, [sp, #16]
      7c:	mov	w20, w0
      80:	mov	x0, #0x18                  	// #24
      84:	bl	6ba0 <gcry_xmalloc>
      88:	mov	x19, x0
      8c:	mov	x1, #0x0                   	// #0
      90:	cbnz	w20, ac <_gcry_mpi_alloc+0x3c>
      94:	mov	x0, x19
      98:	stp	w20, wzr, [x19]
      9c:	stp	xzr, x1, [x19, #8]
      a0:	ldp	x19, x20, [sp, #16]
      a4:	ldp	x29, x30, [sp], #32
      a8:	ret
      ac:	mov	w0, w20
      b0:	bl	28 <_gcry_mpi_alloc_limb_space>
      b4:	mov	x1, x0
      b8:	mov	x0, x19
      bc:	stp	w20, wzr, [x19]
      c0:	stp	xzr, x1, [x19, #8]
      c4:	ldp	x19, x20, [sp, #16]
      c8:	ldp	x29, x30, [sp], #32
      cc:	ret

00000000000000d0 <_gcry_mpi_alloc_secure>:
      d0:	stp	x29, x30, [sp, #-32]!
      d4:	mov	x29, sp
      d8:	stp	x19, x20, [sp, #16]
      dc:	mov	w20, w0
      e0:	mov	x0, #0x18                  	// #24
      e4:	bl	6ba0 <gcry_xmalloc>
      e8:	mov	x19, x0
      ec:	mov	x1, #0x0                   	// #0
      f0:	cbnz	w20, 110 <_gcry_mpi_alloc_secure+0x40>
      f4:	mov	x0, x19
      f8:	mov	x2, #0x100000000           	// #4294967296
      fc:	stp	w20, wzr, [x19]
     100:	stp	x2, x1, [x19, #8]
     104:	ldp	x19, x20, [sp, #16]
     108:	ldp	x29, x30, [sp], #32
     10c:	ret
     110:	mov	w0, w20
     114:	mov	w1, #0x1                   	// #1
     118:	bl	28 <_gcry_mpi_alloc_limb_space>
     11c:	mov	x1, x0
     120:	mov	x2, #0x100000000           	// #4294967296
     124:	mov	x0, x19
     128:	stp	w20, wzr, [x19]
     12c:	stp	x2, x1, [x19, #8]
     130:	ldp	x19, x20, [sp, #16]
     134:	ldp	x29, x30, [sp], #32
     138:	ret
     13c:	nop

0000000000000140 <_gcry_mpi_free_limb_space>:
     140:	cbz	x0, 168 <_gcry_mpi_free_limb_space+0x28>
     144:	ubfiz	x2, x1, #3, #32
     148:	cbz	x2, 164 <_gcry_mpi_free_limb_space+0x24>
     14c:	add	x2, x0, x2
     150:	mov	x1, x0
     154:	nop
     158:	strb	wzr, [x1], #1
     15c:	cmp	x2, x1
     160:	b.ne	158 <_gcry_mpi_free_limb_space+0x18>  // b.any
     164:	b	6b58 <gcry_free>
     168:	ret
     16c:	nop

0000000000000170 <_gcry_mpi_assign_limb_space>:
     170:	stp	x29, x30, [sp, #-48]!
     174:	mov	x29, sp
     178:	stp	x19, x20, [sp, #16]
     17c:	mov	x19, x0
     180:	mov	x20, x1
     184:	ldr	w1, [x0]
     188:	ldr	x0, [x0, #16]
     18c:	str	x21, [sp, #32]
     190:	mov	w21, w2
     194:	bl	140 <_gcry_mpi_free_limb_space>
     198:	str	w21, [x19]
     19c:	str	x20, [x19, #16]
     1a0:	ldp	x19, x20, [sp, #16]
     1a4:	ldr	x21, [sp, #32]
     1a8:	ldp	x29, x30, [sp], #48
     1ac:	ret

00000000000001b0 <_gcry_mpi_resize>:
     1b0:	stp	x29, x30, [sp, #-48]!
     1b4:	mov	x29, sp
     1b8:	ldr	w2, [x0]
     1bc:	stp	x19, x20, [sp, #16]
     1c0:	mov	x19, x0
     1c4:	cmp	w2, w1
     1c8:	b.cs	238 <_gcry_mpi_resize+0x88>  // b.hs, b.nlast
     1cc:	ldr	x0, [x0, #16]
     1d0:	str	x21, [sp, #32]
     1d4:	mov	w20, w1
     1d8:	mov	w21, w1
     1dc:	cbz	x0, 21c <_gcry_mpi_resize+0x6c>
     1e0:	lsl	x1, x21, #3
     1e4:	bl	6bd8 <gcry_xrealloc>
     1e8:	ldrsw	x2, [x19]
     1ec:	str	x0, [x19, #16]
     1f0:	cmp	x2, x21
     1f4:	b.cs	208 <_gcry_mpi_resize+0x58>  // b.hs, b.nlast
     1f8:	str	xzr, [x0, x2, lsl #3]
     1fc:	add	x2, x2, #0x1
     200:	cmp	x2, x21
     204:	b.ne	1f8 <_gcry_mpi_resize+0x48>  // b.any
     208:	ldr	x21, [sp, #32]
     20c:	str	w20, [x19]
     210:	ldp	x19, x20, [sp, #16]
     214:	ldp	x29, x30, [sp], #48
     218:	ret
     21c:	ldr	w0, [x19, #12]
     220:	tbz	w0, #0, 26c <_gcry_mpi_resize+0xbc>
     224:	mov	x0, x21
     228:	mov	x1, #0x8                   	// #8
     22c:	bl	6b98 <gcry_xcalloc_secure>
     230:	str	x0, [x19, #16]
     234:	b	208 <_gcry_mpi_resize+0x58>
     238:	ldrsw	x1, [x19, #4]
     23c:	sxtw	x0, w2
     240:	cmp	x1, w2, sxtw
     244:	b.cs	210 <_gcry_mpi_resize+0x60>  // b.hs, b.nlast
     248:	ldr	x2, [x19, #16]
     24c:	nop
     250:	str	xzr, [x2, x1, lsl #3]
     254:	add	x1, x1, #0x1
     258:	cmp	x1, x0
     25c:	b.ne	250 <_gcry_mpi_resize+0xa0>  // b.any
     260:	ldp	x19, x20, [sp, #16]
     264:	ldp	x29, x30, [sp], #48
     268:	ret
     26c:	mov	x0, x21
     270:	mov	x1, #0x8                   	// #8
     274:	bl	6b68 <gcry_xcalloc>
     278:	str	x0, [x19, #16]
     27c:	b	208 <_gcry_mpi_resize+0x58>

0000000000000280 <_gcry_mpi_clear>:
     280:	str	wzr, [x0, #4]
     284:	str	wzr, [x0, #12]
     288:	ret
     28c:	nop

0000000000000290 <_gcry_mpi_free>:
     290:	cbz	x0, 2dc <_gcry_mpi_free+0x4c>
     294:	stp	x29, x30, [sp, #-32]!
     298:	mov	x29, sp
     29c:	ldr	w1, [x0, #12]
     2a0:	str	x19, [sp, #16]
     2a4:	mov	x19, x0
     2a8:	ldr	x0, [x0, #16]
     2ac:	tbnz	w1, #2, 2d4 <_gcry_mpi_free+0x44>
     2b0:	ldr	w1, [x19]
     2b4:	bl	140 <_gcry_mpi_free_limb_space>
     2b8:	ldr	w0, [x19, #12]
     2bc:	tst	w0, #0xfffffff8
     2c0:	b.ne	2e0 <_gcry_mpi_free+0x50>  // b.any
     2c4:	mov	x0, x19
     2c8:	ldr	x19, [sp, #16]
     2cc:	ldp	x29, x30, [sp], #32
     2d0:	b	6b58 <gcry_free>
     2d4:	bl	6b58 <gcry_free>
     2d8:	b	2b8 <_gcry_mpi_free+0x28>
     2dc:	ret
     2e0:	adrp	x0, 0 <_gcry_mpi_m_check>
     2e4:	ldr	x0, [x0]
     2e8:	bl	6ce8 <_gcry_log_bug>
     2ec:	nop
	...

00000000000002f8 <gcry_mpi_set_opaque>:
     2f8:	stp	x29, x30, [sp, #-48]!
     2fc:	mov	x29, sp
     300:	stp	x19, x20, [sp, #16]
     304:	mov	x20, x1
     308:	mov	x19, x0
     30c:	str	x21, [sp, #32]
     310:	mov	w21, w2
     314:	cbz	x0, 358 <gcry_mpi_set_opaque+0x60>
     318:	ldr	w1, [x19, #12]
     31c:	ldr	x0, [x19, #16]
     320:	tbz	w1, #2, 34c <gcry_mpi_set_opaque+0x54>
     324:	bl	6b58 <gcry_free>
     328:	mov	w1, #0x4                   	// #4
     32c:	str	xzr, [x19]
     330:	stp	w21, w1, [x19, #8]
     334:	mov	x0, x19
     338:	str	x20, [x19, #16]
     33c:	ldp	x19, x20, [sp, #16]
     340:	ldr	x21, [sp, #32]
     344:	ldp	x29, x30, [sp], #48
     348:	ret
     34c:	ldr	w1, [x19]
     350:	bl	140 <_gcry_mpi_free_limb_space>
     354:	b	328 <gcry_mpi_set_opaque+0x30>
     358:	mov	w0, #0x0                   	// #0
     35c:	bl	70 <_gcry_mpi_alloc>
     360:	mov	x19, x0
     364:	b	318 <gcry_mpi_set_opaque+0x20>

0000000000000368 <gcry_mpi_get_opaque>:
     368:	ldr	w2, [x0, #12]
     36c:	tbz	w2, #2, 384 <gcry_mpi_get_opaque+0x1c>
     370:	cbz	x1, 37c <gcry_mpi_get_opaque+0x14>
     374:	ldr	w2, [x0, #8]
     378:	str	w2, [x1]
     37c:	ldr	x0, [x0, #16]
     380:	ret
     384:	stp	x29, x30, [sp, #-16]!
     388:	adrp	x0, 0 <_gcry_mpi_m_check>
     38c:	mov	x29, sp
     390:	ldr	x0, [x0]
     394:	bl	6ce8 <_gcry_log_bug>
	...

00000000000003a0 <_gcry_mpi_copy>:
     3a0:	cbz	x0, 480 <_gcry_mpi_copy+0xe0>
     3a4:	stp	x29, x30, [sp, #-32]!
     3a8:	mov	x29, sp
     3ac:	ldr	w1, [x0, #12]
     3b0:	stp	x19, x20, [sp, #16]
     3b4:	mov	x19, x0
     3b8:	tbz	w1, #2, 428 <_gcry_mpi_copy+0x88>
     3bc:	ldr	x0, [x0, #16]
     3c0:	bl	6b60 <gcry_is_secure>
     3c4:	ldr	w2, [x19, #8]
     3c8:	add	w1, w2, #0xe
     3cc:	adds	w2, w2, #0x7
     3d0:	csel	w1, w1, w2, mi  // mi = first
     3d4:	asr	w1, w1, #3
     3d8:	sxtw	x1, w1
     3dc:	cbnz	w0, 488 <_gcry_mpi_copy+0xe8>
     3e0:	mov	x0, x1
     3e4:	bl	6ba0 <gcry_xmalloc>
     3e8:	mov	x20, x0
     3ec:	ldr	w3, [x19, #8]
     3f0:	mov	x0, x20
     3f4:	ldr	x1, [x19, #16]
     3f8:	add	w2, w3, #0xe
     3fc:	adds	w3, w3, #0x7
     400:	csel	w2, w2, w3, mi  // mi = first
     404:	asr	w2, w2, #3
     408:	sxtw	x2, w2
     40c:	bl	0 <grub_memmove>
     410:	ldr	w2, [x19, #8]
     414:	mov	x1, x20
     418:	ldp	x19, x20, [sp, #16]
     41c:	mov	x0, #0x0                   	// #0
     420:	ldp	x29, x30, [sp], #32
     424:	b	2f8 <gcry_mpi_set_opaque>
     428:	ldr	w0, [x0, #4]
     42c:	tbnz	w1, #0, 478 <_gcry_mpi_copy+0xd8>
     430:	bl	70 <_gcry_mpi_alloc>
     434:	ldp	w3, w2, [x19, #4]
     438:	ldr	w1, [x19, #12]
     43c:	stp	w3, w2, [x0, #4]
     440:	cmp	w3, #0x0
     444:	str	w1, [x0, #12]
     448:	b.le	46c <_gcry_mpi_copy+0xcc>
     44c:	ldr	x4, [x0, #16]
     450:	mov	x1, #0x0                   	// #0
     454:	ldr	x5, [x19, #16]
     458:	ldr	x2, [x5, x1, lsl #3]
     45c:	str	x2, [x4, x1, lsl #3]
     460:	add	x1, x1, #0x1
     464:	cmp	w3, w1
     468:	b.gt	458 <_gcry_mpi_copy+0xb8>
     46c:	ldp	x19, x20, [sp, #16]
     470:	ldp	x29, x30, [sp], #32
     474:	ret
     478:	bl	d0 <_gcry_mpi_alloc_secure>
     47c:	b	434 <_gcry_mpi_copy+0x94>
     480:	mov	x0, #0x0                   	// #0
     484:	ret
     488:	mov	x0, x1
     48c:	bl	6bd0 <gcry_xmalloc_secure>
     490:	mov	x20, x0
     494:	b	3ec <_gcry_mpi_copy+0x4c>

0000000000000498 <_gcry_mpi_alloc_like>:
     498:	cbz	x0, 554 <_gcry_mpi_alloc_like+0xbc>
     49c:	stp	x29, x30, [sp, #-48]!
     4a0:	mov	x29, sp
     4a4:	ldr	w1, [x0, #12]
     4a8:	stp	x19, x20, [sp, #16]
     4ac:	mov	x19, x0
     4b0:	tbz	w1, #2, 514 <_gcry_mpi_alloc_like+0x7c>
     4b4:	ldr	x0, [x0, #16]
     4b8:	str	x21, [sp, #32]
     4bc:	bl	6b60 <gcry_is_secure>
     4c0:	ldr	w1, [x19, #8]
     4c4:	add	w20, w1, #0xe
     4c8:	adds	w1, w1, #0x7
     4cc:	csel	w20, w20, w1, mi  // mi = first
     4d0:	asr	w20, w20, #3
     4d4:	sxtw	x20, w20
     4d8:	cbnz	w0, 55c <_gcry_mpi_alloc_like+0xc4>
     4dc:	mov	x0, x20
     4e0:	bl	6b48 <gcry_malloc>
     4e4:	mov	x21, x0
     4e8:	ldr	x1, [x19, #16]
     4ec:	mov	x2, x20
     4f0:	mov	x0, x21
     4f4:	bl	0 <grub_memmove>
     4f8:	ldr	w2, [x19, #8]
     4fc:	mov	x1, x21
     500:	ldp	x19, x20, [sp, #16]
     504:	mov	x0, #0x0                   	// #0
     508:	ldr	x21, [sp, #32]
     50c:	ldp	x29, x30, [sp], #48
     510:	b	2f8 <gcry_mpi_set_opaque>
     514:	ldr	w0, [x0, #4]
     518:	tbnz	w1, #0, 538 <_gcry_mpi_alloc_like+0xa0>
     51c:	bl	70 <_gcry_mpi_alloc>
     520:	stur	xzr, [x0, #4]
     524:	ldr	w1, [x19, #12]
     528:	ldp	x19, x20, [sp, #16]
     52c:	str	w1, [x0, #12]
     530:	ldp	x29, x30, [sp], #48
     534:	ret
     538:	bl	d0 <_gcry_mpi_alloc_secure>
     53c:	stur	xzr, [x0, #4]
     540:	ldr	w1, [x19, #12]
     544:	ldp	x19, x20, [sp, #16]
     548:	str	w1, [x0, #12]
     54c:	ldp	x29, x30, [sp], #48
     550:	ret
     554:	mov	x0, #0x0                   	// #0
     558:	ret
     55c:	mov	x0, x20
     560:	bl	6b50 <gcry_malloc_secure>
     564:	mov	x21, x0
     568:	b	4e8 <_gcry_mpi_alloc_like+0x50>
     56c:	nop

0000000000000570 <gcry_mpi_set>:
     570:	stp	x29, x30, [sp, #-48]!
     574:	mov	x29, sp
     578:	stp	x19, x20, [sp, #16]
     57c:	mov	x20, x0
     580:	ldr	w19, [x1, #4]
     584:	stp	x21, x22, [sp, #32]
     588:	mov	x21, x1
     58c:	ldur	x22, [x1, #4]
     590:	cbz	x0, 5fc <gcry_mpi_set+0x8c>
     594:	ldr	w0, [x20]
     598:	cmp	w0, w19
     59c:	b.lt	5ec <gcry_mpi_set+0x7c>  // b.tstop
     5a0:	cmp	w19, #0x0
     5a4:	ldr	x0, [x20, #16]
     5a8:	ldr	x4, [x21, #16]
     5ac:	b.le	5cc <gcry_mpi_set+0x5c>
     5b0:	mov	x2, #0x0                   	// #0
     5b4:	nop
     5b8:	ldr	x3, [x4, x2, lsl #3]
     5bc:	str	x3, [x0, x2, lsl #3]
     5c0:	add	x2, x2, #0x1
     5c4:	cmp	w19, w2
     5c8:	b.gt	5b8 <gcry_mpi_set+0x48>
     5cc:	ldr	w1, [x21, #12]
     5d0:	mov	x0, x20
     5d4:	stur	x22, [x20, #4]
     5d8:	str	w1, [x20, #12]
     5dc:	ldp	x19, x20, [sp, #16]
     5e0:	ldp	x21, x22, [sp, #32]
     5e4:	ldp	x29, x30, [sp], #48
     5e8:	ret
     5ec:	mov	w1, w19
     5f0:	mov	x0, x20
     5f4:	bl	1b0 <_gcry_mpi_resize>
     5f8:	b	5a0 <gcry_mpi_set+0x30>
     5fc:	mov	w0, w19
     600:	bl	70 <_gcry_mpi_alloc>
     604:	mov	x20, x0
     608:	b	594 <gcry_mpi_set+0x24>
     60c:	nop

0000000000000610 <gcry_mpi_set_ui>:
     610:	stp	x29, x30, [sp, #-48]!
     614:	mov	x29, sp
     618:	str	x20, [sp, #16]
     61c:	mov	x20, x1
     620:	cbz	x0, 668 <gcry_mpi_set_ui+0x58>
     624:	ldr	w1, [x0]
     628:	cmp	w1, #0x0
     62c:	b.le	654 <gcry_mpi_set_ui+0x44>
     630:	ldr	x2, [x0, #16]
     634:	cmp	x20, #0x0
     638:	cset	w1, ne  // ne = any
     63c:	str	x20, [x2]
     640:	str	w1, [x0, #4]
     644:	str	xzr, [x0, #8]
     648:	ldr	x20, [sp, #16]
     64c:	ldp	x29, x30, [sp], #48
     650:	ret
     654:	mov	w1, #0x1                   	// #1
     658:	str	x0, [sp, #40]
     65c:	bl	1b0 <_gcry_mpi_resize>
     660:	ldr	x0, [sp, #40]
     664:	b	630 <gcry_mpi_set_ui+0x20>
     668:	mov	w0, #0x1                   	// #1
     66c:	bl	70 <_gcry_mpi_alloc>
     670:	b	624 <gcry_mpi_set_ui+0x14>
     674:	nop

0000000000000678 <_gcry_mpi_get_ui>:
     678:	ldr	w2, [x0, #4]
     67c:	cmp	w2, #0x1
     680:	b.gt	698 <_gcry_mpi_get_ui+0x20>
     684:	mov	x2, #0x0                   	// #0
     688:	b.eq	6a0 <_gcry_mpi_get_ui+0x28>  // b.none
     68c:	mov	w0, #0x0                   	// #0
     690:	str	x2, [x1]
     694:	ret
     698:	mov	w0, #0x23                  	// #35
     69c:	ret
     6a0:	ldr	x0, [x0, #16]
     6a4:	ldr	x2, [x0]
     6a8:	mov	w0, #0x0                   	// #0
     6ac:	str	x2, [x1]
     6b0:	b	694 <_gcry_mpi_get_ui+0x1c>
     6b4:	nop

00000000000006b8 <gcry_mpi_get_ui>:
     6b8:	ldr	w2, [x0, #4]
     6bc:	cmp	w2, #0x1
     6c0:	b.gt	6d8 <gcry_mpi_get_ui+0x20>
     6c4:	mov	x2, #0x0                   	// #0
     6c8:	b.eq	6e0 <gcry_mpi_get_ui+0x28>  // b.none
     6cc:	mov	w0, #0x0                   	// #0
     6d0:	str	x2, [x1]
     6d4:	ret
     6d8:	mov	w0, #0x23                  	// #35
     6dc:	ret
     6e0:	ldr	x0, [x0, #16]
     6e4:	ldr	x2, [x0]
     6e8:	mov	w0, #0x0                   	// #0
     6ec:	str	x2, [x1]
     6f0:	b	6d4 <gcry_mpi_get_ui+0x1c>
     6f4:	nop

00000000000006f8 <_gcry_mpi_alloc_set_ui>:
     6f8:	stp	x29, x30, [sp, #-32]!
     6fc:	mov	x29, sp
     700:	str	x19, [sp, #16]
     704:	mov	x19, x0
     708:	mov	w0, #0x1                   	// #1
     70c:	bl	70 <_gcry_mpi_alloc>
     710:	ldr	x3, [x0, #16]
     714:	cmp	x19, #0x0
     718:	cset	w2, ne  // ne = any
     71c:	str	x19, [x3]
     720:	ldr	x19, [sp, #16]
     724:	stp	w2, wzr, [x0, #4]
     728:	ldp	x29, x30, [sp], #32
     72c:	ret

0000000000000730 <gcry_mpi_swap>:
     730:	ldp	x2, x3, [x1]
     734:	sub	sp, sp, #0x20
     738:	ldp	x4, x5, [x0]
     73c:	stp	x2, x3, [x0]
     740:	ldr	x3, [x1, #16]
     744:	ldr	x2, [x0, #16]
     748:	str	x3, [x0, #16]
     74c:	stp	x4, x5, [x1]
     750:	str	x2, [x1, #16]
     754:	add	sp, sp, #0x20
     758:	ret
     75c:	nop

0000000000000760 <gcry_mpi_new>:
     760:	add	w0, w0, #0x3f
     764:	lsr	w0, w0, #6
     768:	b	70 <_gcry_mpi_alloc>
     76c:	nop

0000000000000770 <gcry_mpi_snew>:
     770:	add	w0, w0, #0x3f
     774:	lsr	w0, w0, #6
     778:	b	d0 <_gcry_mpi_alloc_secure>
     77c:	nop

0000000000000780 <gcry_mpi_release>:
     780:	b	290 <_gcry_mpi_free>
     784:	nop

0000000000000788 <gcry_mpi_set_flag>:
     788:	stp	x29, x30, [sp, #-32]!
     78c:	cmp	w1, #0x1
     790:	mov	x29, sp
     794:	stp	x19, x20, [sp, #16]
     798:	b.ne	834 <gcry_mpi_set_flag+0xac>  // b.any
     79c:	ldr	w2, [x0, #12]
     7a0:	mov	x19, x0
     7a4:	tbnz	w2, #0, 7c0 <gcry_mpi_set_flag+0x38>
     7a8:	ldr	w0, [x0, #4]
     7ac:	orr	w2, w2, #0x1
     7b0:	str	w2, [x19, #12]
     7b4:	ldr	x20, [x19, #16]
     7b8:	cbnz	w0, 7cc <gcry_mpi_set_flag+0x44>
     7bc:	cbnz	x20, 814 <gcry_mpi_set_flag+0x8c>
     7c0:	ldp	x19, x20, [sp, #16]
     7c4:	ldp	x29, x30, [sp], #32
     7c8:	ret
     7cc:	bl	28 <_gcry_mpi_alloc_limb_space>
     7d0:	mov	x3, x0
     7d4:	ldr	w4, [x19, #4]
     7d8:	cmp	w4, #0x0
     7dc:	b.le	7fc <gcry_mpi_set_flag+0x74>
     7e0:	mov	x1, #0x0                   	// #0
     7e4:	nop
     7e8:	ldr	x2, [x20, x1, lsl #3]
     7ec:	str	x2, [x3, x1, lsl #3]
     7f0:	add	x1, x1, #0x1
     7f4:	cmp	w4, w1
     7f8:	b.gt	7e8 <gcry_mpi_set_flag+0x60>
     7fc:	str	x3, [x19, #16]
     800:	mov	x0, x20
     804:	ldr	w1, [x19]
     808:	ldp	x19, x20, [sp, #16]
     80c:	ldp	x29, x30, [sp], #32
     810:	b	140 <_gcry_mpi_free_limb_space>
     814:	adrp	x3, 0 <_gcry_mpi_m_check>
     818:	adrp	x1, 0 <_gcry_mpi_m_check>
     81c:	adrp	x0, 0 <_gcry_mpi_m_check>
     820:	mov	w2, #0xc1                  	// #193
     824:	ldr	x3, [x3]
     828:	ldr	x1, [x1]
     82c:	ldr	x0, [x0]
     830:	bl	0 <_gcry_assert_failed>
     834:	adrp	x0, 0 <_gcry_mpi_m_check>
     838:	ldr	x0, [x0]
     83c:	bl	6ce8 <_gcry_log_bug>
	...

0000000000000860 <gcry_mpi_clear_flag>:
     860:	stp	x29, x30, [sp, #-16]!
     864:	adrp	x0, 0 <_gcry_mpi_m_check>
     868:	mov	x29, sp
     86c:	ldr	x0, [x0]
     870:	bl	6ce8 <_gcry_log_bug>
     874:	nop
	...

0000000000000880 <gcry_mpi_get_flag>:
     880:	cmp	w1, #0x1
     884:	b.eq	89c <gcry_mpi_get_flag+0x1c>  // b.none
     888:	cmp	w1, #0x2
     88c:	b.ne	8a8 <gcry_mpi_get_flag+0x28>  // b.any
     890:	ldr	w0, [x0, #12]
     894:	and	w0, w0, #0x4
     898:	ret
     89c:	ldr	w0, [x0, #12]
     8a0:	and	w0, w0, #0x1
     8a4:	ret
     8a8:	stp	x29, x30, [sp, #-16]!
     8ac:	adrp	x0, 0 <_gcry_mpi_m_check>
     8b0:	mov	x29, sp
     8b4:	ldr	x0, [x0]
     8b8:	bl	6ce8 <_gcry_log_bug>
     8bc:	nop
	...

00000000000008c8 <_gcry_mpi_normalize.part.0>:
     8c8:	ldr	w1, [x0, #4]
     8cc:	cbz	w1, 904 <_gcry_mpi_normalize.part.0+0x3c>
     8d0:	sxtw	x3, w1
     8d4:	sub	w1, w1, #0x1
     8d8:	sub	x3, x3, #0x2
     8dc:	sub	x3, x3, w1, uxtw
     8e0:	sxtw	x1, w1
     8e4:	ldr	x4, [x0, #16]
     8e8:	b	8fc <_gcry_mpi_normalize.part.0+0x34>
     8ec:	str	w1, [x0, #4]
     8f0:	sub	x1, x1, #0x1
     8f4:	cmp	x1, x3
     8f8:	b.eq	904 <_gcry_mpi_normalize.part.0+0x3c>  // b.none
     8fc:	ldr	x2, [x4, x1, lsl #3]
     900:	cbz	x2, 8ec <_gcry_mpi_normalize.part.0+0x24>
     904:	ret

0000000000000908 <_gcry_mpi_normalize>:
     908:	cbz	x0, 914 <_gcry_mpi_normalize+0xc>
     90c:	ldr	w1, [x0, #12]
     910:	tbnz	w1, #2, 918 <_gcry_mpi_normalize+0x10>
     914:	b	8c8 <_gcry_mpi_normalize.part.0>
     918:	ret
     91c:	nop

0000000000000920 <gcry_mpi_get_nbits>:
     920:	mov	x5, x0
     924:	cbz	x0, 930 <gcry_mpi_get_nbits+0x10>
     928:	ldr	w0, [x0, #12]
     92c:	tbnz	w0, #2, 9a4 <gcry_mpi_get_nbits+0x84>
     930:	stp	x29, x30, [sp, #-16]!
     934:	mov	x0, x5
     938:	mov	x29, sp
     93c:	bl	8c8 <_gcry_mpi_normalize.part.0>
     940:	ldr	w1, [x5, #4]
     944:	mov	w0, #0x0                   	// #0
     948:	cbz	w1, 99c <gcry_mpi_get_nbits+0x7c>
     94c:	mov	x2, #0xfffffffffffffff8    	// #-8
     950:	mov	w0, #0x40                  	// #64
     954:	ldr	x3, [x5, #16]
     958:	add	x2, x2, w1, sxtw #3
     95c:	ldr	x3, [x3, x2]
     960:	cbz	x3, 994 <gcry_mpi_get_nbits+0x74>
     964:	mov	x0, #0x38                  	// #56
     968:	lsr	x2, x3, x0
     96c:	mov	w4, w0
     970:	tst	w2, #0xff
     974:	b.ne	9ac <gcry_mpi_get_nbits+0x8c>  // b.any
     978:	subs	x0, x0, #0x8
     97c:	b.ne	968 <gcry_mpi_get_nbits+0x48>  // b.any
     980:	mov	w0, #0x40                  	// #64
     984:	adrp	x2, 0 <_gcry_mpi_m_check>
     988:	ldr	x2, [x2]
     98c:	ldrb	w2, [x2, x3]
     990:	sub	w0, w0, w2
     994:	lsl	w1, w1, #6
     998:	sub	w0, w1, w0
     99c:	ldp	x29, x30, [sp], #16
     9a0:	ret
     9a4:	ldr	w0, [x5, #8]
     9a8:	ret
     9ac:	mov	w0, #0x40                  	// #64
     9b0:	mov	x3, x2
     9b4:	sub	w0, w0, w4
     9b8:	b	984 <gcry_mpi_get_nbits+0x64>
     9bc:	nop
	...

00000000000009c8 <gcry_mpi_test_bit>:
     9c8:	ldr	w3, [x0, #4]
     9cc:	lsr	w2, w1, #6
     9d0:	cmp	w3, w1, lsr #6
     9d4:	b.ls	9ec <gcry_mpi_test_bit+0x24>  // b.plast
     9d8:	ldr	x0, [x0, #16]
     9dc:	ldr	x0, [x0, x2, lsl #3]
     9e0:	lsr	x1, x0, x1
     9e4:	and	w0, w1, #0x1
     9e8:	ret
     9ec:	mov	w0, #0x0                   	// #0
     9f0:	ret
     9f4:	nop

00000000000009f8 <gcry_mpi_set_bit>:
     9f8:	stp	x29, x30, [sp, #-48]!
     9fc:	mov	x29, sp
     a00:	ldr	w2, [x0, #4]
     a04:	stp	x19, x20, [sp, #16]
     a08:	mov	x20, x0
     a0c:	lsr	w19, w1, #6
     a10:	stp	x21, x22, [sp, #32]
     a14:	cmp	w2, w1, lsr #6
     a18:	and	w21, w1, #0x3f
     a1c:	b.ls	a4c <gcry_mpi_set_bit+0x54>  // b.plast
     a20:	ldr	x3, [x20, #16]
     a24:	mov	w0, w19
     a28:	mov	x1, #0x1                   	// #1
     a2c:	lsl	x2, x1, x21
     a30:	ldr	x1, [x3, x0, lsl #3]
     a34:	ldp	x21, x22, [sp, #32]
     a38:	orr	x1, x1, x2
     a3c:	str	x1, [x3, x0, lsl #3]
     a40:	ldp	x19, x20, [sp, #16]
     a44:	ldp	x29, x30, [sp], #48
     a48:	ret
     a4c:	add	w22, w19, #0x1
     a50:	mov	w1, w22
     a54:	bl	1b0 <_gcry_mpi_resize>
     a58:	str	w22, [x20, #4]
     a5c:	b	a20 <gcry_mpi_set_bit+0x28>

0000000000000a60 <gcry_mpi_set_highbit>:
     a60:	stp	x29, x30, [sp, #-48]!
     a64:	mov	x29, sp
     a68:	stp	x19, x20, [sp, #16]
     a6c:	lsr	w20, w1, #6
     a70:	and	w19, w1, #0x3f
     a74:	ldr	w1, [x0, #4]
     a78:	stp	x21, x22, [sp, #32]
     a7c:	mov	x21, x0
     a80:	add	w22, w20, #0x1
     a84:	cmp	w1, w20
     a88:	b.ls	adc <gcry_mpi_set_highbit+0x7c>  // b.plast
     a8c:	ldr	x0, [x21, #16]
     a90:	mov	x5, #0x1                   	// #1
     a94:	lsl	x3, x5, x19
     a98:	cmp	w19, #0x3f
     a9c:	add	w2, w19, #0x1
     aa0:	ldr	x1, [x0, x20, lsl #3]
     aa4:	orr	x3, x3, x1
     aa8:	str	x3, [x0, x20, lsl #3]
     aac:	b.eq	ac8 <gcry_mpi_set_highbit+0x68>  // b.none
     ab0:	lsl	x4, x5, x2
     ab4:	add	w2, w2, #0x1
     ab8:	bic	x3, x3, x4
     abc:	cmp	w2, #0x40
     ac0:	b.ne	ab0 <gcry_mpi_set_highbit+0x50>  // b.any
     ac4:	str	x3, [x0, x20, lsl #3]
     ac8:	ldp	x19, x20, [sp, #16]
     acc:	str	w22, [x21, #4]
     ad0:	ldp	x21, x22, [sp, #32]
     ad4:	ldp	x29, x30, [sp], #48
     ad8:	ret
     adc:	mov	w1, w22
     ae0:	bl	1b0 <_gcry_mpi_resize>
     ae4:	b	a8c <gcry_mpi_set_highbit+0x2c>

0000000000000ae8 <gcry_mpi_clear_highbit>:
     ae8:	ldr	w2, [x0, #4]
     aec:	lsr	w5, w1, #6
     af0:	cmp	w2, w1, lsr #6
     af4:	b.ls	b30 <gcry_mpi_clear_highbit+0x48>  // b.plast
     af8:	ldr	x6, [x0, #16]
     afc:	mov	w7, w5
     b00:	and	w1, w1, #0x3f
     b04:	mov	x4, #0x1                   	// #1
     b08:	ldr	x2, [x6, x7, lsl #3]
     b0c:	nop
     b10:	lsl	x3, x4, x1
     b14:	add	w1, w1, #0x1
     b18:	bic	x2, x2, x3
     b1c:	cmp	w1, #0x40
     b20:	b.ne	b10 <gcry_mpi_clear_highbit+0x28>  // b.any
     b24:	str	x2, [x6, x7, lsl #3]
     b28:	add	w5, w5, #0x1
     b2c:	str	w5, [x0, #4]
     b30:	ret
     b34:	nop

0000000000000b38 <gcry_mpi_clear_bit>:
     b38:	ldr	w3, [x0, #4]
     b3c:	lsr	w2, w1, #6
     b40:	cmp	w3, w1, lsr #6
     b44:	b.ls	b60 <gcry_mpi_clear_bit+0x28>  // b.plast
     b48:	ldr	x3, [x0, #16]
     b4c:	mov	x0, #0x1                   	// #1
     b50:	lsl	x1, x0, x1
     b54:	ldr	x0, [x3, x2, lsl #3]
     b58:	bic	x1, x0, x1
     b5c:	str	x1, [x3, x2, lsl #3]
     b60:	ret
     b64:	nop

0000000000000b68 <_gcry_mpi_rshift_limbs>:
     b68:	ldr	w5, [x0, #4]
     b6c:	cmp	w5, w1
     b70:	b.ls	bac <_gcry_mpi_rshift_limbs+0x44>  // b.plast
     b74:	ldr	x3, [x0, #16]
     b78:	sub	w6, w5, w1
     b7c:	sub	w5, w5, w1
     b80:	mov	x2, #0x0                   	// #0
     b84:	nop
     b88:	add	w4, w1, w2
     b8c:	ldr	x4, [x3, x4, lsl #3]
     b90:	str	x4, [x3, x2, lsl #3]
     b94:	add	x2, x2, #0x1
     b98:	cmp	x5, x2
     b9c:	b.ne	b88 <_gcry_mpi_rshift_limbs+0x20>  // b.any
     ba0:	str	xzr, [x3, x5, lsl #3]
     ba4:	str	w6, [x0, #4]
     ba8:	ret
     bac:	str	wzr, [x0, #4]
     bb0:	ret
     bb4:	nop

0000000000000bb8 <gcry_mpi_rshift>:
     bb8:	stp	x29, x30, [sp, #-64]!
     bbc:	cmp	x0, x1
     bc0:	mov	x29, sp
     bc4:	stp	x19, x20, [sp, #16]
     bc8:	mov	x20, x0
     bcc:	stp	x21, x22, [sp, #32]
     bd0:	lsr	w22, w2, #6
     bd4:	str	x23, [sp, #48]
     bd8:	and	w23, w2, #0x3f
     bdc:	b.eq	cf8 <gcry_mpi_rshift+0x140>  // b.none
     be0:	mov	x21, x1
     be4:	cmp	w2, #0x3f
     be8:	ldr	w1, [x0]
     bec:	ldp	w19, w2, [x21, #4]
     bf0:	str	w2, [x0, #8]
     bf4:	b.ls	cb4 <gcry_mpi_rshift+0xfc>  // b.plast
     bf8:	cmp	w1, w19
     bfc:	b.lt	d64 <gcry_mpi_rshift+0x1ac>  // b.tstop
     c00:	str	w19, [x20, #4]
     c04:	ldr	w2, [x21, #4]
     c08:	cbz	w2, d40 <gcry_mpi_rshift+0x188>
     c0c:	ldr	x1, [x20, #16]
     c10:	mov	x0, #0x0                   	// #0
     c14:	ldr	x5, [x21, #16]
     c18:	ldr	x4, [x5, x0, lsl #3]
     c1c:	str	x4, [x1, x0, lsl #3]
     c20:	add	x0, x0, #0x1
     c24:	cmp	w2, w0
     c28:	b.hi	c18 <gcry_mpi_rshift+0x60>  // b.pmore
     c2c:	cmp	w22, w2
     c30:	b.cs	d40 <gcry_mpi_rshift+0x188>  // b.hs, b.nlast
     c34:	subs	w19, w2, w22
     c38:	mov	x0, #0x0                   	// #0
     c3c:	b.eq	d3c <gcry_mpi_rshift+0x184>  // b.none
     c40:	add	w2, w22, w0
     c44:	ldr	x2, [x1, x2, lsl #3]
     c48:	str	x2, [x1, x0, lsl #3]
     c4c:	add	x0, x0, #0x1
     c50:	cmp	w19, w0
     c54:	b.hi	c40 <gcry_mpi_rshift+0x88>  // b.pmore
     c58:	str	xzr, [x1, w19, uxtw #3]
     c5c:	str	w19, [x20, #4]
     c60:	cbnz	w23, d24 <gcry_mpi_rshift+0x16c>
     c64:	cmp	w19, #0x0
     c68:	b.le	ca0 <gcry_mpi_rshift+0xe8>
     c6c:	sub	w1, w19, #0x1
     c70:	sxtw	x2, w19
     c74:	sub	x2, x2, #0x2
     c78:	sub	x2, x2, w1, uxtw
     c7c:	sxtw	x1, w1
     c80:	ldr	x3, [x20, #16]
     c84:	b	c98 <gcry_mpi_rshift+0xe0>
     c88:	str	w1, [x20, #4]
     c8c:	sub	x1, x1, #0x1
     c90:	cmp	x1, x2
     c94:	b.eq	ca0 <gcry_mpi_rshift+0xe8>  // b.none
     c98:	ldr	x0, [x3, x1, lsl #3]
     c9c:	cbz	x0, c88 <gcry_mpi_rshift+0xd0>
     ca0:	ldp	x19, x20, [sp, #16]
     ca4:	ldp	x21, x22, [sp, #32]
     ca8:	ldr	x23, [sp, #48]
     cac:	ldp	x29, x30, [sp], #64
     cb0:	ret
     cb4:	cmp	w1, w19
     cb8:	b.lt	d58 <gcry_mpi_rshift+0x1a0>  // b.tstop
     cbc:	str	w19, [x20, #4]
     cc0:	cbz	w19, ca0 <gcry_mpi_rshift+0xe8>
     cc4:	ldr	x0, [x20, #16]
     cc8:	ldr	x1, [x21, #16]
     ccc:	cbnz	w23, da8 <gcry_mpi_rshift+0x1f0>
     cd0:	sub	w4, w19, #0x1
     cd4:	mov	x2, #0x0                   	// #0
     cd8:	add	x4, x4, #0x1
     cdc:	lsl	x4, x4, #3
     ce0:	ldr	x3, [x1, x2]
     ce4:	str	x3, [x0, x2]
     ce8:	add	x2, x2, #0x8
     cec:	cmp	x4, x2
     cf0:	b.ne	ce0 <gcry_mpi_rshift+0x128>  // b.any
     cf4:	b	c64 <gcry_mpi_rshift+0xac>
     cf8:	ldr	w19, [x0, #4]
     cfc:	cmp	w19, w22
     d00:	b.ls	d40 <gcry_mpi_rshift+0x188>  // b.plast
     d04:	cmp	w23, #0x0
     d08:	cset	w3, ne  // ne = any
     d0c:	cmp	w2, #0x3f
     d10:	b.hi	d70 <gcry_mpi_rshift+0x1b8>  // b.pmore
     d14:	cmp	w19, #0x0
     d18:	csel	w3, w3, wzr, ne  // ne = any
     d1c:	cbz	w3, c64 <gcry_mpi_rshift+0xac>
     d20:	ldr	x1, [x20, #16]
     d24:	mov	w2, w19
     d28:	mov	w3, w23
     d2c:	mov	x0, x1
     d30:	bl	68e0 <_gcry_mpih_rshift>
     d34:	ldr	w19, [x20, #4]
     d38:	b	c64 <gcry_mpi_rshift+0xac>
     d3c:	str	xzr, [x1]
     d40:	str	wzr, [x20, #4]
     d44:	ldp	x19, x20, [sp, #16]
     d48:	ldp	x21, x22, [sp, #32]
     d4c:	ldr	x23, [sp, #48]
     d50:	ldp	x29, x30, [sp], #64
     d54:	ret
     d58:	mov	w1, w19
     d5c:	bl	1b0 <_gcry_mpi_resize>
     d60:	b	cbc <gcry_mpi_rshift+0x104>
     d64:	mov	w1, w19
     d68:	bl	1b0 <_gcry_mpi_resize>
     d6c:	b	c00 <gcry_mpi_rshift+0x48>
     d70:	subs	w19, w19, w22
     d74:	mov	x0, #0x0                   	// #0
     d78:	ldr	x1, [x20, #16]
     d7c:	b.eq	d3c <gcry_mpi_rshift+0x184>  // b.none
     d80:	add	w2, w22, w0
     d84:	ldr	x2, [x1, x2, lsl #3]
     d88:	str	x2, [x1, x0, lsl #3]
     d8c:	add	x0, x0, #0x1
     d90:	cmp	w19, w0
     d94:	b.hi	d80 <gcry_mpi_rshift+0x1c8>  // b.pmore
     d98:	str	xzr, [x1, w19, uxtw #3]
     d9c:	str	w19, [x20, #4]
     da0:	cbz	w3, c64 <gcry_mpi_rshift+0xac>
     da4:	b	d20 <gcry_mpi_rshift+0x168>
     da8:	mov	w2, w19
     dac:	mov	w3, w23
     db0:	bl	68e0 <_gcry_mpih_rshift>
     db4:	ldr	w19, [x20, #4]
     db8:	b	c64 <gcry_mpi_rshift+0xac>
     dbc:	nop

0000000000000dc0 <_gcry_mpi_lshift_limbs>:
     dc0:	stp	x29, x30, [sp, #-48]!
     dc4:	cmp	w1, #0x0
     dc8:	mov	x29, sp
     dcc:	str	x21, [sp, #32]
     dd0:	ldr	w21, [x0, #4]
     dd4:	ccmp	w21, #0x0, #0x4, ne  // ne = any
     dd8:	b.eq	e38 <_gcry_mpi_lshift_limbs+0x78>  // b.none
     ddc:	ldr	w2, [x0]
     de0:	stp	x19, x20, [sp, #16]
     de4:	mov	w19, w1
     de8:	add	w1, w21, w1
     dec:	mov	x20, x0
     df0:	cmp	w2, w1
     df4:	b.cc	e44 <_gcry_mpi_lshift_limbs+0x84>  // b.lo, b.ul, b.last
     df8:	sub	w21, w21, #0x1
     dfc:	ldr	x3, [x20, #16]
     e00:	sxtw	x2, w21
     e04:	tbnz	w21, #31, e1c <_gcry_mpi_lshift_limbs+0x5c>
     e08:	add	w4, w19, w2
     e0c:	ldr	x5, [x3, x2, lsl #3]
     e10:	sub	x2, x2, #0x1
     e14:	str	x5, [x3, x4, lsl #3]
     e18:	tbz	w2, #31, e08 <_gcry_mpi_lshift_limbs+0x48>
     e1c:	mov	x2, #0x0                   	// #0
     e20:	str	xzr, [x3, x2, lsl #3]
     e24:	add	x2, x2, #0x1
     e28:	cmp	w19, w2
     e2c:	b.hi	e20 <_gcry_mpi_lshift_limbs+0x60>  // b.pmore
     e30:	str	w1, [x20, #4]
     e34:	ldp	x19, x20, [sp, #16]
     e38:	ldr	x21, [sp, #32]
     e3c:	ldp	x29, x30, [sp], #48
     e40:	ret
     e44:	bl	1b0 <_gcry_mpi_resize>
     e48:	ldr	w1, [x20, #4]
     e4c:	add	w1, w19, w1
     e50:	b	df8 <_gcry_mpi_lshift_limbs+0x38>
     e54:	nop

0000000000000e58 <gcry_mpi_lshift>:
     e58:	cmp	w2, #0x0
     e5c:	ccmp	x0, x1, #0x0, eq  // eq = none
     e60:	b.eq	f58 <gcry_mpi_lshift+0x100>  // b.none
     e64:	stp	x29, x30, [sp, #-64]!
     e68:	cmp	x0, x1
     e6c:	mov	x29, sp
     e70:	stp	x19, x20, [sp, #16]
     e74:	mov	x20, x1
     e78:	mov	x19, x0
     e7c:	stp	x21, x22, [sp, #32]
     e80:	mov	w21, w2
     e84:	stp	x23, x24, [sp, #48]
     e88:	lsr	w23, w2, #6
     e8c:	b.eq	ee0 <gcry_mpi_lshift+0x88>  // b.none
     e90:	ldr	w22, [x1, #4]
     e94:	ldr	w2, [x0]
     e98:	add	w1, w22, #0x1
     e9c:	add	w1, w1, w23
     ea0:	cmp	w2, w1
     ea4:	ldur	x24, [x20, #4]
     ea8:	b.cc	f5c <gcry_mpi_lshift+0x104>  // b.lo, b.ul, b.last
     eac:	ldr	x1, [x19, #16]
     eb0:	ldr	x2, [x20, #16]
     eb4:	cbz	w22, ed4 <gcry_mpi_lshift+0x7c>
     eb8:	mov	x3, #0x0                   	// #0
     ebc:	nop
     ec0:	ldr	x0, [x2, x3, lsl #3]
     ec4:	str	x0, [x1, x3, lsl #3]
     ec8:	add	x3, x3, #0x1
     ecc:	cmp	w22, w3
     ed0:	b.hi	ec0 <gcry_mpi_lshift+0x68>  // b.pmore
     ed4:	ldr	w0, [x20, #12]
     ed8:	stur	x24, [x19, #4]
     edc:	str	w0, [x19, #12]
     ee0:	cmp	w21, #0x3f
     ee4:	and	w20, w21, #0x3f
     ee8:	ccmp	w20, #0x0, #0x0, hi  // hi = pmore
     eec:	b.eq	f48 <gcry_mpi_lshift+0xf0>  // b.none
     ef0:	cbnz	w21, f64 <gcry_mpi_lshift+0x10c>
     ef4:	ldr	w1, [x19, #4]
     ef8:	cmp	w1, #0x0
     efc:	b.le	f34 <gcry_mpi_lshift+0xdc>
     f00:	sxtw	x2, w1
     f04:	sub	w1, w1, #0x1
     f08:	sub	x2, x2, #0x2
     f0c:	sub	x2, x2, w1, uxtw
     f10:	sxtw	x1, w1
     f14:	ldr	x3, [x19, #16]
     f18:	b	f2c <gcry_mpi_lshift+0xd4>
     f1c:	str	w1, [x19, #4]
     f20:	sub	x1, x1, #0x1
     f24:	cmp	x2, x1
     f28:	b.eq	f34 <gcry_mpi_lshift+0xdc>  // b.none
     f2c:	ldr	x0, [x3, x1, lsl #3]
     f30:	cbz	x0, f1c <gcry_mpi_lshift+0xc4>
     f34:	ldp	x19, x20, [sp, #16]
     f38:	ldp	x21, x22, [sp, #32]
     f3c:	ldp	x23, x24, [sp, #48]
     f40:	ldp	x29, x30, [sp], #64
     f44:	ret
     f48:	mov	w1, w23
     f4c:	mov	x0, x19
     f50:	bl	dc0 <_gcry_mpi_lshift_limbs>
     f54:	b	ef4 <gcry_mpi_lshift+0x9c>
     f58:	ret
     f5c:	bl	1b0 <_gcry_mpi_resize>
     f60:	b	eac <gcry_mpi_lshift+0x54>
     f64:	add	w1, w23, #0x1
     f68:	mov	x0, x19
     f6c:	bl	dc0 <_gcry_mpi_lshift_limbs>
     f70:	mov	x1, x19
     f74:	mov	x0, x19
     f78:	mov	w2, #0x40                  	// #64
     f7c:	sub	w2, w2, w20
     f80:	bl	bb8 <gcry_mpi_rshift>
     f84:	b	ef4 <gcry_mpi_lshift+0x9c>

0000000000000f88 <gcry_mpi_add_ui>:
     f88:	stp	x29, x30, [sp, #-64]!
     f8c:	mov	x29, sp
     f90:	stp	x19, x20, [sp, #16]
     f94:	mov	x19, x0
     f98:	ldr	w20, [x1, #4]
     f9c:	stp	x21, x22, [sp, #32]
     fa0:	mov	x22, x1
     fa4:	mov	x21, x2
     fa8:	ldr	w2, [x0]
     fac:	add	w1, w20, #0x1
     fb0:	str	x23, [sp, #48]
     fb4:	cmp	w2, w1
     fb8:	ldr	w23, [x22, #8]
     fbc:	b.lt	108c <gcry_mpi_add_ui+0x104>  // b.tstop
     fc0:	ldr	x4, [x19, #16]
     fc4:	cbnz	w20, fec <gcry_mpi_add_ui+0x64>
     fc8:	cmp	x21, #0x0
     fcc:	str	x21, [x4]
     fd0:	cset	w0, ne  // ne = any
     fd4:	ldp	x21, x22, [sp, #32]
     fd8:	ldr	x23, [sp, #48]
     fdc:	stp	w0, w20, [x19, #4]
     fe0:	ldp	x19, x20, [sp, #16]
     fe4:	ldp	x29, x30, [sp], #64
     fe8:	ret
     fec:	ldr	x1, [x22, #16]
     ff0:	ldr	x2, [x1]
     ff4:	cbnz	w23, 1094 <gcry_mpi_add_ui+0x10c>
     ff8:	mov	x3, x4
     ffc:	adds	x21, x21, x2
    1000:	add	x1, x1, #0x8
    1004:	mov	w2, w20
    1008:	str	x21, [x3], #8
    100c:	b.cs	1078 <gcry_mpi_add_ui+0xf0>  // b.hs, b.nlast
    1010:	cmp	x3, x1
    1014:	b.eq	103c <gcry_mpi_add_ui+0xb4>  // b.none
    1018:	sub	w2, w2, #0x1
    101c:	cmp	w2, #0x0
    1020:	b.le	103c <gcry_mpi_add_ui+0xb4>
    1024:	mov	x0, #0x0                   	// #0
    1028:	ldr	x5, [x1, x0, lsl #3]
    102c:	str	x5, [x3, x0, lsl #3]
    1030:	add	x0, x0, #0x1
    1034:	cmp	w2, w0
    1038:	b.gt	1028 <gcry_mpi_add_ui+0xa0>
    103c:	mov	w0, #0x0                   	// #0
    1040:	mov	x1, #0x0                   	// #0
    1044:	str	x1, [x4, w20, sxtw #3]
    1048:	add	w0, w20, w0
    104c:	mov	w20, #0x0                   	// #0
    1050:	ldp	x21, x22, [sp, #32]
    1054:	ldr	x23, [sp, #48]
    1058:	stp	w0, w20, [x19, #4]
    105c:	ldp	x19, x20, [sp, #16]
    1060:	ldp	x29, x30, [sp], #64
    1064:	ret
    1068:	ldr	x0, [x1], #8
    106c:	add	x0, x0, #0x1
    1070:	str	x0, [x3], #8
    1074:	cbnz	x0, 1010 <gcry_mpi_add_ui+0x88>
    1078:	subs	w2, w2, #0x1
    107c:	b.ne	1068 <gcry_mpi_add_ui+0xe0>  // b.any
    1080:	mov	w0, #0x1                   	// #1
    1084:	mov	x1, #0x1                   	// #1
    1088:	b	1044 <gcry_mpi_add_ui+0xbc>
    108c:	bl	1b0 <_gcry_mpi_resize>
    1090:	b	fc0 <gcry_mpi_add_ui+0x38>
    1094:	cmp	w20, #0x1
    1098:	b.eq	1130 <gcry_mpi_add_ui+0x1a8>  // b.none
    109c:	mov	x3, x4
    10a0:	subs	x5, x2, x21
    10a4:	add	x1, x1, #0x8
    10a8:	cmp	x2, x21
    10ac:	mov	w0, w20
    10b0:	str	x5, [x3], #8
    10b4:	b.cc	1124 <gcry_mpi_add_ui+0x19c>  // b.lo, b.ul, b.last
    10b8:	cmp	x3, x1
    10bc:	b.eq	10e4 <gcry_mpi_add_ui+0x15c>  // b.none
    10c0:	sub	w2, w0, #0x1
    10c4:	cmp	w2, #0x0
    10c8:	b.le	10e4 <gcry_mpi_add_ui+0x15c>
    10cc:	mov	x0, #0x0                   	// #0
    10d0:	ldr	x5, [x1, x0, lsl #3]
    10d4:	str	x5, [x3, x0, lsl #3]
    10d8:	add	x0, x0, #0x1
    10dc:	cmp	w2, w0
    10e0:	b.gt	10d0 <gcry_mpi_add_ui+0x148>
    10e4:	add	x4, x4, w20, sxtw #3
    10e8:	ldp	x21, x22, [sp, #32]
    10ec:	ldur	x0, [x4, #-8]
    10f0:	ldr	x23, [sp, #48]
    10f4:	cmp	x0, #0x0
    10f8:	cset	w0, eq  // eq = none
    10fc:	sub	w0, w20, w0
    1100:	mov	w20, #0x1                   	// #1
    1104:	stp	w0, w20, [x19, #4]
    1108:	ldp	x19, x20, [sp, #16]
    110c:	ldp	x29, x30, [sp], #64
    1110:	ret
    1114:	ldr	x2, [x1], #8
    1118:	sub	x5, x2, #0x1
    111c:	str	x5, [x3], #8
    1120:	cbnz	x2, 10b8 <gcry_mpi_add_ui+0x130>
    1124:	subs	w0, w0, #0x1
    1128:	b.ne	1114 <gcry_mpi_add_ui+0x18c>  // b.any
    112c:	b	10e4 <gcry_mpi_add_ui+0x15c>
    1130:	cmp	x21, x2
    1134:	b.ls	114c <gcry_mpi_add_ui+0x1c4>  // b.plast
    1138:	sub	x21, x21, x2
    113c:	mov	w0, w20
    1140:	mov	w20, #0x0                   	// #0
    1144:	str	x21, [x4]
    1148:	b	fd4 <gcry_mpi_add_ui+0x4c>
    114c:	sub	x21, x2, x21
    1150:	str	x21, [x4]
    1154:	b	10e4 <gcry_mpi_add_ui+0x15c>

0000000000001158 <gcry_mpi_add>:
    1158:	stp	x29, x30, [sp, #-80]!
    115c:	mov	x29, sp
    1160:	stp	x19, x20, [sp, #16]
    1164:	ldr	w19, [x2, #4]
    1168:	stp	x21, x22, [sp, #32]
    116c:	mov	x21, x2
    1170:	mov	x22, x1
    1174:	stp	x25, x26, [sp, #64]
    1178:	ldr	w2, [x0]
    117c:	ldp	w20, w26, [x1, #4]
    1180:	stp	x23, x24, [sp, #48]
    1184:	ldr	w25, [x21, #8]
    1188:	mov	x24, x0
    118c:	cmp	w20, w19
    1190:	b.ge	1294 <gcry_mpi_add+0x13c>  // b.tcont
    1194:	add	w1, w19, #0x1
    1198:	cmp	w1, w2
    119c:	b.gt	12ec <gcry_mpi_add+0x194>
    11a0:	ldr	x23, [x21, #16]
    11a4:	ldr	x1, [x22, #16]
    11a8:	ldr	x21, [x24, #16]
    11ac:	cbnz	w20, 11f0 <gcry_mpi_add+0x98>
    11b0:	cmp	w19, #0x0
    11b4:	b.le	11d4 <gcry_mpi_add+0x7c>
    11b8:	mov	x2, #0x0                   	// #0
    11bc:	nop
    11c0:	ldr	x3, [x23, x2, lsl #3]
    11c4:	str	x3, [x21, x2, lsl #3]
    11c8:	add	x2, x2, #0x1
    11cc:	cmp	w19, w2
    11d0:	b.gt	11c0 <gcry_mpi_add+0x68>
    11d4:	ldp	x21, x22, [sp, #32]
    11d8:	stp	w19, w25, [x24, #4]
    11dc:	ldp	x19, x20, [sp, #16]
    11e0:	ldp	x23, x24, [sp, #48]
    11e4:	ldp	x25, x26, [sp, #64]
    11e8:	ldp	x29, x30, [sp], #80
    11ec:	ret
    11f0:	cmp	w25, w26
    11f4:	b.eq	12f4 <gcry_mpi_add+0x19c>  // b.none
    11f8:	cmp	w19, w20
    11fc:	b.ne	13c4 <gcry_mpi_add+0x26c>  // b.any
    1200:	subs	w2, w19, #0x1
    1204:	b.mi	122c <gcry_mpi_add+0xd4>  // b.first
    1208:	sxtw	x2, w2
    120c:	b	1214 <gcry_mpi_add+0xbc>
    1210:	tbnz	w2, #31, 122c <gcry_mpi_add+0xd4>
    1214:	ldr	x3, [x23, x2, lsl #3]
    1218:	ldr	x0, [x1, x2, lsl #3]
    121c:	sub	x2, x2, #0x1
    1220:	cmp	x3, x0
    1224:	b.eq	1210 <gcry_mpi_add+0xb8>  // b.none
    1228:	b.ls	1484 <gcry_mpi_add+0x32c>  // b.plast
    122c:	mov	x2, x1
    1230:	mov	w3, w19
    1234:	mov	x1, x23
    1238:	mov	x0, x21
    123c:	bl	4f30 <_gcry_mpih_sub_n>
    1240:	cmp	w19, #0x0
    1244:	b.le	1270 <gcry_mpi_add+0x118>
    1248:	sxtw	x1, w19
    124c:	sub	x21, x21, #0x8
    1250:	b	1264 <gcry_mpi_add+0x10c>
    1254:	sub	w19, w1, #0x1
    1258:	sub	x1, x1, #0x1
    125c:	cmp	w1, #0x0
    1260:	b.le	1270 <gcry_mpi_add+0x118>
    1264:	ldr	x0, [x21, x1, lsl #3]
    1268:	mov	w19, w1
    126c:	cbz	x0, 1254 <gcry_mpi_add+0xfc>
    1270:	cmp	w25, #0x0
    1274:	cset	w25, ne  // ne = any
    1278:	ldp	x21, x22, [sp, #32]
    127c:	stp	w19, w25, [x24, #4]
    1280:	ldp	x19, x20, [sp, #16]
    1284:	ldp	x23, x24, [sp, #48]
    1288:	ldp	x25, x26, [sp, #64]
    128c:	ldp	x29, x30, [sp], #80
    1290:	ret
    1294:	add	w1, w20, #0x1
    1298:	cmp	w1, w2
    129c:	b.gt	12c4 <gcry_mpi_add+0x16c>
    12a0:	mov	w2, w25
    12a4:	mov	w0, w19
    12a8:	mov	w25, w26
    12ac:	mov	w19, w20
    12b0:	mov	w26, w2
    12b4:	mov	w20, w0
    12b8:	ldr	x1, [x21, #16]
    12bc:	ldr	x23, [x22, #16]
    12c0:	b	11a8 <gcry_mpi_add+0x50>
    12c4:	bl	1b0 <_gcry_mpi_resize>
    12c8:	mov	w2, w25
    12cc:	mov	w0, w19
    12d0:	mov	w25, w26
    12d4:	mov	w19, w20
    12d8:	mov	w26, w2
    12dc:	mov	w20, w0
    12e0:	ldr	x1, [x21, #16]
    12e4:	ldr	x23, [x22, #16]
    12e8:	b	11a8 <gcry_mpi_add+0x50>
    12ec:	bl	1b0 <_gcry_mpi_resize>
    12f0:	b	11a0 <gcry_mpi_add+0x48>
    12f4:	mov	x2, x1
    12f8:	mov	w3, w20
    12fc:	mov	x1, x23
    1300:	mov	x0, x21
    1304:	bl	4ee8 <_gcry_mpih_add_n>
    1308:	mov	w1, w0
    130c:	cmp	w19, w20
    1310:	b.eq	1374 <gcry_mpi_add+0x21c>  // b.none
    1314:	sxtw	x3, w20
    1318:	sbfiz	x1, x20, #3, #32
    131c:	add	x2, x23, x1
    1320:	add	x1, x21, x1
    1324:	add	x2, x2, #0x8
    1328:	add	x1, x1, #0x8
    132c:	ldr	x4, [x23, x3, lsl #3]
    1330:	sub	w20, w19, w20
    1334:	adds	x0, x0, x4
    1338:	str	x0, [x21, x3, lsl #3]
    133c:	b.cs	13b0 <gcry_mpi_add+0x258>  // b.hs, b.nlast
    1340:	cmp	x1, x2
    1344:	b.eq	136c <gcry_mpi_add+0x214>  // b.none
    1348:	sub	w20, w20, #0x1
    134c:	cmp	w20, #0x0
    1350:	b.le	136c <gcry_mpi_add+0x214>
    1354:	mov	x0, #0x0                   	// #0
    1358:	ldr	x3, [x2, x0, lsl #3]
    135c:	str	x3, [x1, x0, lsl #3]
    1360:	add	x0, x0, #0x1
    1364:	cmp	w20, w0
    1368:	b.gt	1358 <gcry_mpi_add+0x200>
    136c:	mov	w1, #0x0                   	// #0
    1370:	mov	x0, #0x0                   	// #0
    1374:	cmp	w25, #0x0
    1378:	str	x0, [x21, w19, sxtw #3]
    137c:	cset	w25, ne  // ne = any
    1380:	add	w19, w19, w1
    1384:	ldp	x21, x22, [sp, #32]
    1388:	stp	w19, w25, [x24, #4]
    138c:	ldp	x19, x20, [sp, #16]
    1390:	ldp	x23, x24, [sp, #48]
    1394:	ldp	x25, x26, [sp, #64]
    1398:	ldp	x29, x30, [sp], #80
    139c:	ret
    13a0:	ldr	x0, [x2], #8
    13a4:	add	x0, x0, #0x1
    13a8:	str	x0, [x1], #8
    13ac:	cbnz	x0, 1340 <gcry_mpi_add+0x1e8>
    13b0:	subs	w20, w20, #0x1
    13b4:	b.ne	13a0 <gcry_mpi_add+0x248>  // b.any
    13b8:	mov	w1, #0x1                   	// #1
    13bc:	mov	x0, #0x1                   	// #1
    13c0:	b	1374 <gcry_mpi_add+0x21c>
    13c4:	mov	x2, x1
    13c8:	mov	w3, w20
    13cc:	mov	x1, x23
    13d0:	mov	x0, x21
    13d4:	bl	4f30 <_gcry_mpih_sub_n>
    13d8:	sxtw	x4, w20
    13dc:	sbfiz	x2, x20, #3, #32
    13e0:	add	x3, x23, x2
    13e4:	add	x2, x21, x2
    13e8:	sub	w20, w19, w20
    13ec:	add	x3, x3, #0x8
    13f0:	ldr	x1, [x23, x4, lsl #3]
    13f4:	add	x2, x2, #0x8
    13f8:	subs	x5, x1, x0
    13fc:	str	x5, [x21, x4, lsl #3]
    1400:	cmp	x1, x0
    1404:	b.cc	1478 <gcry_mpi_add+0x320>  // b.lo, b.ul, b.last
    1408:	cmp	x2, x3
    140c:	b.eq	1434 <gcry_mpi_add+0x2dc>  // b.none
    1410:	sub	w20, w20, #0x1
    1414:	cmp	w20, #0x0
    1418:	b.le	1434 <gcry_mpi_add+0x2dc>
    141c:	mov	x1, #0x0                   	// #0
    1420:	ldr	x0, [x3, x1, lsl #3]
    1424:	str	x0, [x2, x1, lsl #3]
    1428:	add	x1, x1, #0x1
    142c:	cmp	w20, w1
    1430:	b.gt	1420 <gcry_mpi_add+0x2c8>
    1434:	sub	x21, x21, #0x8
    1438:	cmp	w19, #0x0
    143c:	sxtw	x1, w19
    1440:	b.gt	1458 <gcry_mpi_add+0x300>
    1444:	b	11d4 <gcry_mpi_add+0x7c>
    1448:	sub	w19, w1, #0x1
    144c:	sub	x1, x1, #0x1
    1450:	cmp	w1, #0x0
    1454:	b.le	11d4 <gcry_mpi_add+0x7c>
    1458:	ldr	x0, [x21, x1, lsl #3]
    145c:	mov	w19, w1
    1460:	cbz	x0, 1448 <gcry_mpi_add+0x2f0>
    1464:	b	11d4 <gcry_mpi_add+0x7c>
    1468:	ldr	x0, [x3], #8
    146c:	sub	x1, x0, #0x1
    1470:	str	x1, [x2], #8
    1474:	cbnz	x0, 1408 <gcry_mpi_add+0x2b0>
    1478:	subs	w20, w20, #0x1
    147c:	b.ne	1468 <gcry_mpi_add+0x310>  // b.any
    1480:	b	1434 <gcry_mpi_add+0x2dc>
    1484:	mov	x2, x23
    1488:	mov	w3, w19
    148c:	mov	x0, x21
    1490:	bl	4f30 <_gcry_mpih_sub_n>
    1494:	cmp	w19, #0x0
    1498:	b.le	14c4 <gcry_mpi_add+0x36c>
    149c:	sxtw	x0, w19
    14a0:	sub	x21, x21, #0x8
    14a4:	b	14b8 <gcry_mpi_add+0x360>
    14a8:	sub	w19, w0, #0x1
    14ac:	sub	x0, x0, #0x1
    14b0:	cmp	w0, #0x0
    14b4:	b.le	14c4 <gcry_mpi_add+0x36c>
    14b8:	ldr	x1, [x21, x0, lsl #3]
    14bc:	mov	w19, w0
    14c0:	cbz	x1, 14a8 <gcry_mpi_add+0x350>
    14c4:	cmp	w25, #0x0
    14c8:	cset	w25, eq  // eq = none
    14cc:	b	11d4 <gcry_mpi_add+0x7c>

00000000000014d0 <gcry_mpi_sub_ui>:
    14d0:	stp	x29, x30, [sp, #-64]!
    14d4:	mov	x29, sp
    14d8:	stp	x19, x20, [sp, #16]
    14dc:	mov	x19, x0
    14e0:	ldr	w20, [x1, #4]
    14e4:	stp	x21, x22, [sp, #32]
    14e8:	mov	x22, x1
    14ec:	mov	x21, x2
    14f0:	ldr	w2, [x0]
    14f4:	add	w1, w20, #0x1
    14f8:	str	x23, [sp, #48]
    14fc:	cmp	w2, w1
    1500:	ldr	w23, [x22, #8]
    1504:	b.lt	15dc <gcry_mpi_sub_ui+0x10c>  // b.tstop
    1508:	ldr	x4, [x19, #16]
    150c:	cbnz	w20, 1538 <gcry_mpi_sub_ui+0x68>
    1510:	cmp	x21, #0x0
    1514:	mov	w23, #0x1                   	// #1
    1518:	cset	w20, ne  // ne = any
    151c:	str	x21, [x4]
    1520:	ldp	x21, x22, [sp, #32]
    1524:	stp	w20, w23, [x19, #4]
    1528:	ldp	x19, x20, [sp, #16]
    152c:	ldr	x23, [sp, #48]
    1530:	ldp	x29, x30, [sp], #64
    1534:	ret
    1538:	ldr	x1, [x22, #16]
    153c:	ldr	x2, [x1]
    1540:	cbz	w23, 15e4 <gcry_mpi_sub_ui+0x114>
    1544:	mov	x3, x4
    1548:	adds	x21, x21, x2
    154c:	add	x1, x1, #0x8
    1550:	mov	w2, w20
    1554:	str	x21, [x3], #8
    1558:	b.cs	15c8 <gcry_mpi_sub_ui+0xf8>  // b.hs, b.nlast
    155c:	cmp	x3, x1
    1560:	b.eq	158c <gcry_mpi_sub_ui+0xbc>  // b.none
    1564:	sub	w2, w2, #0x1
    1568:	cmp	w2, #0x0
    156c:	b.le	158c <gcry_mpi_sub_ui+0xbc>
    1570:	mov	x0, #0x0                   	// #0
    1574:	nop
    1578:	ldr	x5, [x1, x0, lsl #3]
    157c:	str	x5, [x3, x0, lsl #3]
    1580:	add	x0, x0, #0x1
    1584:	cmp	w2, w0
    1588:	b.gt	1578 <gcry_mpi_sub_ui+0xa8>
    158c:	mov	w0, #0x0                   	// #0
    1590:	mov	x1, #0x0                   	// #0
    1594:	str	x1, [x4, w20, sxtw #3]
    1598:	mov	w23, #0x0                   	// #0
    159c:	add	w20, w20, w0
    15a0:	ldp	x21, x22, [sp, #32]
    15a4:	stp	w20, w23, [x19, #4]
    15a8:	ldp	x19, x20, [sp, #16]
    15ac:	ldr	x23, [sp, #48]
    15b0:	ldp	x29, x30, [sp], #64
    15b4:	ret
    15b8:	ldr	x0, [x1], #8
    15bc:	add	x0, x0, #0x1
    15c0:	str	x0, [x3], #8
    15c4:	cbnz	x0, 155c <gcry_mpi_sub_ui+0x8c>
    15c8:	subs	w2, w2, #0x1
    15cc:	b.ne	15b8 <gcry_mpi_sub_ui+0xe8>  // b.any
    15d0:	mov	w0, #0x1                   	// #1
    15d4:	mov	x1, #0x1                   	// #1
    15d8:	b	1594 <gcry_mpi_sub_ui+0xc4>
    15dc:	bl	1b0 <_gcry_mpi_resize>
    15e0:	b	1508 <gcry_mpi_sub_ui+0x38>
    15e4:	cmp	w20, #0x1
    15e8:	b.eq	167c <gcry_mpi_sub_ui+0x1ac>  // b.none
    15ec:	mov	x3, x4
    15f0:	subs	x5, x2, x21
    15f4:	add	x1, x1, #0x8
    15f8:	cmp	x2, x21
    15fc:	mov	w0, w20
    1600:	str	x5, [x3], #8
    1604:	b.cc	1670 <gcry_mpi_sub_ui+0x1a0>  // b.lo, b.ul, b.last
    1608:	cmp	x3, x1
    160c:	b.eq	1634 <gcry_mpi_sub_ui+0x164>  // b.none
    1610:	sub	w2, w0, #0x1
    1614:	cmp	w2, #0x0
    1618:	b.le	1634 <gcry_mpi_sub_ui+0x164>
    161c:	mov	x0, #0x0                   	// #0
    1620:	ldr	x5, [x1, x0, lsl #3]
    1624:	str	x5, [x3, x0, lsl #3]
    1628:	add	x0, x0, #0x1
    162c:	cmp	w2, w0
    1630:	b.gt	1620 <gcry_mpi_sub_ui+0x150>
    1634:	add	x4, x4, w20, sxtw #3
    1638:	ldp	x21, x22, [sp, #32]
    163c:	ldur	x0, [x4, #-8]
    1640:	cmp	x0, #0x0
    1644:	cset	w0, eq  // eq = none
    1648:	sub	w20, w20, w0
    164c:	stp	w20, w23, [x19, #4]
    1650:	ldp	x19, x20, [sp, #16]
    1654:	ldr	x23, [sp, #48]
    1658:	ldp	x29, x30, [sp], #64
    165c:	ret
    1660:	ldr	x2, [x1], #8
    1664:	sub	x5, x2, #0x1
    1668:	str	x5, [x3], #8
    166c:	cbnz	x2, 1608 <gcry_mpi_sub_ui+0x138>
    1670:	subs	w0, w0, #0x1
    1674:	b.ne	1660 <gcry_mpi_sub_ui+0x190>  // b.any
    1678:	b	1634 <gcry_mpi_sub_ui+0x164>
    167c:	cmp	x21, x2
    1680:	b.ls	1694 <gcry_mpi_sub_ui+0x1c4>  // b.plast
    1684:	sub	x21, x21, x2
    1688:	mov	w23, w20
    168c:	str	x21, [x4]
    1690:	b	1520 <gcry_mpi_sub_ui+0x50>
    1694:	sub	x21, x2, x21
    1698:	str	x21, [x4]
    169c:	b	1634 <gcry_mpi_sub_ui+0x164>

00000000000016a0 <gcry_mpi_sub>:
    16a0:	stp	x29, x30, [sp, #-48]!
    16a4:	mov	x29, sp
    16a8:	stp	x19, x20, [sp, #16]
    16ac:	mov	x20, x0
    16b0:	mov	x0, x2
    16b4:	str	x21, [sp, #32]
    16b8:	mov	x21, x1
    16bc:	bl	3a0 <_gcry_mpi_copy>
    16c0:	mov	x19, x0
    16c4:	mov	x1, x21
    16c8:	mov	x0, x20
    16cc:	mov	x2, x19
    16d0:	ldr	w3, [x19, #8]
    16d4:	cmp	w3, #0x0
    16d8:	cset	w3, eq  // eq = none
    16dc:	str	w3, [x19, #8]
    16e0:	bl	1158 <gcry_mpi_add>
    16e4:	mov	x0, x19
    16e8:	ldp	x19, x20, [sp, #16]
    16ec:	ldr	x21, [sp, #32]
    16f0:	ldp	x29, x30, [sp], #48
    16f4:	b	290 <_gcry_mpi_free>

00000000000016f8 <gcry_mpi_addm>:
    16f8:	stp	x29, x30, [sp, #-32]!
    16fc:	mov	x29, sp
    1700:	stp	x19, x20, [sp, #16]
    1704:	mov	x20, x3
    1708:	mov	x19, x0
    170c:	bl	1158 <gcry_mpi_add>
    1710:	mov	x2, x20
    1714:	mov	x1, x19
    1718:	mov	x0, x19
    171c:	ldp	x19, x20, [sp, #16]
    1720:	ldp	x29, x30, [sp], #32
    1724:	b	2648 <_gcry_mpi_fdiv_r>

0000000000001728 <gcry_mpi_subm>:
    1728:	stp	x29, x30, [sp, #-32]!
    172c:	mov	x29, sp
    1730:	stp	x19, x20, [sp, #16]
    1734:	mov	x20, x3
    1738:	mov	x19, x0
    173c:	bl	16a0 <gcry_mpi_sub>
    1740:	mov	x2, x20
    1744:	mov	x1, x19
    1748:	mov	x0, x19
    174c:	ldp	x19, x20, [sp, #16]
    1750:	ldp	x29, x30, [sp], #32
    1754:	b	2648 <_gcry_mpi_fdiv_r>

0000000000001758 <gcry_mpi_mul_ui>:
    1758:	stp	x29, x30, [sp, #-64]!
    175c:	mov	x29, sp
    1760:	stp	x21, x22, [sp, #32]
    1764:	ldr	w22, [x1, #4]
    1768:	stp	x19, x20, [sp, #16]
    176c:	mov	x19, x0
    1770:	cmp	w22, #0x0
    1774:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    1778:	b.eq	1804 <gcry_mpi_mul_ui+0xac>  // b.none
    177c:	mov	x20, x1
    1780:	ldr	w1, [x0]
    1784:	stp	x23, x24, [sp, #48]
    1788:	add	w23, w22, #0x1
    178c:	mov	x21, x2
    1790:	ldr	w24, [x20, #8]
    1794:	cmp	w1, w23
    1798:	b.lt	17dc <gcry_mpi_mul_ui+0x84>  // b.tstop
    179c:	ldr	x1, [x20, #16]
    17a0:	mov	x3, x21
    17a4:	ldr	x20, [x19, #16]
    17a8:	mov	w2, w22
    17ac:	mov	x0, x20
    17b0:	bl	4d50 <_gcry_mpih_mul_1>
    17b4:	cbnz	x0, 17d0 <gcry_mpi_mul_ui+0x78>
    17b8:	stp	w22, w24, [x19, #4]
    17bc:	ldp	x19, x20, [sp, #16]
    17c0:	ldp	x21, x22, [sp, #32]
    17c4:	ldp	x23, x24, [sp, #48]
    17c8:	ldp	x29, x30, [sp], #64
    17cc:	ret
    17d0:	str	x0, [x20, w22, sxtw #3]
    17d4:	mov	w22, w23
    17d8:	b	17b8 <gcry_mpi_mul_ui+0x60>
    17dc:	mov	w1, w23
    17e0:	bl	1b0 <_gcry_mpi_resize>
    17e4:	ldr	x1, [x20, #16]
    17e8:	mov	x3, x21
    17ec:	ldr	x20, [x19, #16]
    17f0:	mov	w2, w22
    17f4:	mov	x0, x20
    17f8:	bl	4d50 <_gcry_mpih_mul_1>
    17fc:	cbz	x0, 17b8 <gcry_mpi_mul_ui+0x60>
    1800:	b	17d0 <gcry_mpi_mul_ui+0x78>
    1804:	stur	xzr, [x0, #4]
    1808:	ldp	x19, x20, [sp, #16]
    180c:	ldp	x21, x22, [sp, #32]
    1810:	ldp	x29, x30, [sp], #64
    1814:	ret

0000000000001818 <gcry_mpi_mul_2exp>:
    1818:	stp	x29, x30, [sp, #-96]!
    181c:	mov	x29, sp
    1820:	stp	x19, x20, [sp, #16]
    1824:	ldr	w19, [x1, #4]
    1828:	stp	x21, x22, [sp, #32]
    182c:	mov	x22, x0
    1830:	cbz	w19, 1910 <gcry_mpi_mul_2exp+0xf8>
    1834:	stp	x23, x24, [sp, #48]
    1838:	mov	x23, x1
    183c:	lsr	x24, x2, #6
    1840:	ldr	w1, [x0]
    1844:	mov	x20, x2
    1848:	stp	x25, x26, [sp, #64]
    184c:	add	w25, w19, w24
    1850:	add	w26, w25, #0x1
    1854:	str	x27, [sp, #80]
    1858:	mov	w21, w24
    185c:	ldr	w27, [x23, #8]
    1860:	cmp	w1, w26
    1864:	b.lt	18f8 <gcry_mpi_mul_2exp+0xe0>  // b.tstop
    1868:	ands	x3, x20, #0x3f
    186c:	ldr	x20, [x22, #16]
    1870:	b.ne	18d8 <gcry_mpi_mul_2exp+0xc0>  // b.any
    1874:	subs	w19, w19, #0x1
    1878:	b.mi	1898 <gcry_mpi_mul_2exp+0x80>  // b.first
    187c:	ldr	x3, [x23, #16]
    1880:	sxtw	x1, w19
    1884:	add	x0, x20, w24, sxtw #3
    1888:	ldr	x2, [x3, x1, lsl #3]
    188c:	str	x2, [x0, x1, lsl #3]
    1890:	sub	x1, x1, #0x1
    1894:	tbz	w1, #31, 1888 <gcry_mpi_mul_2exp+0x70>
    1898:	cmp	w24, #0x0
    189c:	mov	x1, #0x0                   	// #0
    18a0:	b.le	18b8 <gcry_mpi_mul_2exp+0xa0>
    18a4:	nop
    18a8:	str	xzr, [x20, x1, lsl #3]
    18ac:	add	x1, x1, #0x1
    18b0:	cmp	w21, w1
    18b4:	b.gt	18a8 <gcry_mpi_mul_2exp+0x90>
    18b8:	ldp	x23, x24, [sp, #48]
    18bc:	stp	w25, w27, [x22, #4]
    18c0:	ldp	x19, x20, [sp, #16]
    18c4:	ldp	x21, x22, [sp, #32]
    18c8:	ldp	x25, x26, [sp, #64]
    18cc:	ldr	x27, [sp, #80]
    18d0:	ldp	x29, x30, [sp], #96
    18d4:	ret
    18d8:	ldr	x1, [x23, #16]
    18dc:	mov	w2, w19
    18e0:	add	x0, x20, w24, sxtw #3
    18e4:	bl	3c70 <_gcry_mpih_lshift>
    18e8:	cbz	x0, 1898 <gcry_mpi_mul_2exp+0x80>
    18ec:	str	x0, [x20, w25, sxtw #3]
    18f0:	mov	w25, w26
    18f4:	b	1898 <gcry_mpi_mul_2exp+0x80>
    18f8:	mov	w1, w26
    18fc:	bl	1b0 <_gcry_mpi_resize>
    1900:	ands	x3, x20, #0x3f
    1904:	ldr	x20, [x22, #16]
    1908:	b.eq	1874 <gcry_mpi_mul_2exp+0x5c>  // b.none
    190c:	b	18d8 <gcry_mpi_mul_2exp+0xc0>
    1910:	stur	xzr, [x0, #4]
    1914:	ldp	x19, x20, [sp, #16]
    1918:	ldp	x21, x22, [sp, #32]
    191c:	ldp	x29, x30, [sp], #96
    1920:	ret
    1924:	nop

0000000000001928 <gcry_mpi_mul>:
    1928:	stp	x29, x30, [sp, #-96]!
    192c:	mov	x4, x2
    1930:	mov	x29, sp
    1934:	ldr	w6, [x1, #12]
    1938:	stp	x19, x20, [sp, #16]
    193c:	mov	x20, x0
    1940:	ldr	w19, [x1, #4]
    1944:	ldr	w0, [x2, #12]
    1948:	and	w8, w6, #0x1
    194c:	stp	x21, x22, [sp, #32]
    1950:	ldr	w21, [x2, #4]
    1954:	stp	x23, x24, [sp, #48]
    1958:	and	w7, w0, #0x1
    195c:	ldr	w2, [x1, #8]
    1960:	stp	x25, x26, [sp, #64]
    1964:	cmp	w19, w21
    1968:	ldr	w5, [x4, #8]
    196c:	stp	x27, x28, [sp, #80]
    1970:	ldr	x22, [x1, #16]
    1974:	ldr	x25, [x4, #16]
    1978:	b.lt	19ac <gcry_mpi_mul+0x84>  // b.tstop
    197c:	mov	w9, w7
    1980:	mov	w4, w5
    1984:	mov	x3, x25
    1988:	mov	w1, w21
    198c:	mov	w7, w8
    1990:	mov	w5, w2
    1994:	mov	x25, x22
    1998:	mov	w21, w19
    199c:	mov	w8, w9
    19a0:	mov	w2, w4
    19a4:	mov	x22, x3
    19a8:	mov	w19, w1
    19ac:	ldr	w3, [x20, #12]
    19b0:	eor	w24, w5, w2
    19b4:	add	w26, w21, w19
    19b8:	and	w27, w3, #0x1
    19bc:	tbnz	w3, #0, 1a00 <gcry_mpi_mul+0xd8>
    19c0:	orr	w0, w0, w6
    19c4:	tbz	w0, #0, 1a00 <gcry_mpi_mul+0xd8>
    19c8:	mov	w0, w26
    19cc:	mov	w1, #0x1                   	// #1
    19d0:	bl	28 <_gcry_mpi_alloc_limb_space>
    19d4:	mov	x28, x0
    19d8:	cbnz	w19, 1b0c <gcry_mpi_mul+0x1e4>
    19dc:	mov	w1, #0x0                   	// #0
    19e0:	mov	w0, #0x0                   	// #0
    19e4:	bl	28 <_gcry_mpi_alloc_limb_space>
    19e8:	mov	x23, x0
    19ec:	nop
    19f0:	mov	x0, x28
    19f4:	mov	w1, #0x0                   	// #0
    19f8:	bl	140 <_gcry_mpi_free_limb_space>
    19fc:	b	1a70 <gcry_mpi_mul+0x148>
    1a00:	ldr	w0, [x20]
    1a04:	ldr	x23, [x20, #16]
    1a08:	cmp	w0, w26
    1a0c:	b.lt	1a4c <gcry_mpi_mul+0x124>  // b.tstop
    1a10:	cmp	x25, x23
    1a14:	b.eq	1b68 <gcry_mpi_mul+0x240>  // b.none
    1a18:	cmp	x22, x23
    1a1c:	b.eq	1bdc <gcry_mpi_mul+0x2b4>  // b.none
    1a20:	mov	w28, #0x0                   	// #0
    1a24:	mov	x27, #0x0                   	// #0
    1a28:	cbnz	w19, 1abc <gcry_mpi_mul+0x194>
    1a2c:	stp	wzr, w24, [x20, #4]
    1a30:	ldp	x19, x20, [sp, #16]
    1a34:	ldp	x21, x22, [sp, #32]
    1a38:	ldp	x23, x24, [sp, #48]
    1a3c:	ldp	x25, x26, [sp, #64]
    1a40:	ldp	x27, x28, [sp, #80]
    1a44:	ldp	x29, x30, [sp], #96
    1a48:	ret
    1a4c:	cmp	x25, x23
    1a50:	ccmp	x22, x23, #0x4, ne  // ne = any
    1a54:	b.ne	1aa0 <gcry_mpi_mul+0x178>  // b.any
    1a58:	mov	w1, w27
    1a5c:	mov	w0, w26
    1a60:	mov	w27, #0x0                   	// #0
    1a64:	bl	28 <_gcry_mpi_alloc_limb_space>
    1a68:	mov	x23, x0
    1a6c:	cbnz	w19, 1bb4 <gcry_mpi_mul+0x28c>
    1a70:	mov	w2, w27
    1a74:	mov	x1, x23
    1a78:	mov	x0, x20
    1a7c:	bl	170 <_gcry_mpi_assign_limb_space>
    1a80:	stp	w19, w24, [x20, #4]
    1a84:	ldp	x19, x20, [sp, #16]
    1a88:	ldp	x21, x22, [sp, #32]
    1a8c:	ldp	x23, x24, [sp, #48]
    1a90:	ldp	x25, x26, [sp, #64]
    1a94:	ldp	x27, x28, [sp, #80]
    1a98:	ldp	x29, x30, [sp], #96
    1a9c:	ret
    1aa0:	mov	w1, w26
    1aa4:	mov	x0, x20
    1aa8:	mov	w28, #0x0                   	// #0
    1aac:	bl	1b0 <_gcry_mpi_resize>
    1ab0:	mov	x27, #0x0                   	// #0
    1ab4:	ldr	x23, [x20, #16]
    1ab8:	cbz	w19, 1a2c <gcry_mpi_mul+0x104>
    1abc:	mov	w4, w19
    1ac0:	mov	x3, x22
    1ac4:	mov	w2, w21
    1ac8:	mov	x1, x25
    1acc:	mov	x0, x23
    1ad0:	bl	4870 <_gcry_mpih_mul>
    1ad4:	cmp	x0, #0x0
    1ad8:	cset	w19, eq  // eq = none
    1adc:	sub	w19, w26, w19
    1ae0:	stp	w19, w24, [x20, #4]
    1ae4:	cbz	x27, 1a30 <gcry_mpi_mul+0x108>
    1ae8:	mov	w1, w28
    1aec:	mov	x0, x27
    1af0:	ldp	x19, x20, [sp, #16]
    1af4:	ldp	x21, x22, [sp, #32]
    1af8:	ldp	x23, x24, [sp, #48]
    1afc:	ldp	x25, x26, [sp, #64]
    1b00:	ldp	x27, x28, [sp, #80]
    1b04:	ldp	x29, x30, [sp], #96
    1b08:	b	140 <_gcry_mpi_free_limb_space>
    1b0c:	mov	w4, w19
    1b10:	mov	x3, x22
    1b14:	mov	w2, w21
    1b18:	mov	x1, x25
    1b1c:	bl	4870 <_gcry_mpih_mul>
    1b20:	cmp	x0, #0x0
    1b24:	cset	w19, eq  // eq = none
    1b28:	mov	w1, #0x0                   	// #0
    1b2c:	sub	w19, w26, w19
    1b30:	mov	w0, w19
    1b34:	bl	28 <_gcry_mpi_alloc_limb_space>
    1b38:	cmp	w19, #0x0
    1b3c:	mov	x23, x0
    1b40:	mov	w27, w19
    1b44:	mov	x1, #0x0                   	// #0
    1b48:	b.le	19f0 <gcry_mpi_mul+0xc8>
    1b4c:	nop
    1b50:	ldr	x0, [x28, x1, lsl #3]
    1b54:	str	x0, [x23, x1, lsl #3]
    1b58:	add	x1, x1, #0x1
    1b5c:	cmp	w19, w1
    1b60:	b.gt	1b50 <gcry_mpi_mul+0x228>
    1b64:	b	19f0 <gcry_mpi_mul+0xc8>
    1b68:	mov	w1, w7
    1b6c:	mov	w0, w21
    1b70:	bl	28 <_gcry_mpi_alloc_limb_space>
    1b74:	mov	w28, w21
    1b78:	cmp	x22, x23
    1b7c:	mov	x27, x0
    1b80:	csel	x22, x22, x0, ne  // ne = any
    1b84:	cmp	w21, #0x0
    1b88:	b.le	1c1c <gcry_mpi_mul+0x2f4>
    1b8c:	mov	x1, #0x0                   	// #0
    1b90:	ldr	x0, [x23, x1, lsl #3]
    1b94:	str	x0, [x27, x1, lsl #3]
    1b98:	add	x1, x1, #0x1
    1b9c:	cmp	w21, w1
    1ba0:	b.gt	1b90 <gcry_mpi_mul+0x268>
    1ba4:	mov	x25, x27
    1ba8:	cbnz	w19, 1abc <gcry_mpi_mul+0x194>
    1bac:	stp	wzr, w24, [x20, #4]
    1bb0:	b	1ae8 <gcry_mpi_mul+0x1c0>
    1bb4:	mov	w4, w19
    1bb8:	mov	x3, x22
    1bbc:	mov	w2, w21
    1bc0:	mov	x1, x25
    1bc4:	bl	4870 <_gcry_mpih_mul>
    1bc8:	cmp	x0, #0x0
    1bcc:	cset	w19, eq  // eq = none
    1bd0:	sub	w19, w26, w19
    1bd4:	mov	w27, w19
    1bd8:	b	1a70 <gcry_mpi_mul+0x148>
    1bdc:	mov	w1, w8
    1be0:	mov	w0, w19
    1be4:	bl	28 <_gcry_mpi_alloc_limb_space>
    1be8:	mov	w28, w19
    1bec:	mov	x22, x0
    1bf0:	cmp	w19, #0x0
    1bf4:	b.le	1c28 <gcry_mpi_mul+0x300>
    1bf8:	mov	x0, #0x0                   	// #0
    1bfc:	nop
    1c00:	ldr	x1, [x23, x0, lsl #3]
    1c04:	str	x1, [x22, x0, lsl #3]
    1c08:	add	x0, x0, #0x1
    1c0c:	cmp	w19, w0
    1c10:	b.gt	1c00 <gcry_mpi_mul+0x2d8>
    1c14:	mov	x27, x22
    1c18:	b	1abc <gcry_mpi_mul+0x194>
    1c1c:	mov	x25, x0
    1c20:	cbz	w19, 1ae0 <gcry_mpi_mul+0x1b8>
    1c24:	b	1abc <gcry_mpi_mul+0x194>
    1c28:	mov	x27, x0
    1c2c:	cbz	w19, 1ae0 <gcry_mpi_mul+0x1b8>
    1c30:	b	1abc <gcry_mpi_mul+0x194>
    1c34:	nop

0000000000001c38 <gcry_mpi_mulm>:
    1c38:	stp	x29, x30, [sp, #-32]!
    1c3c:	mov	x29, sp
    1c40:	stp	x19, x20, [sp, #16]
    1c44:	mov	x20, x3
    1c48:	mov	x19, x0
    1c4c:	bl	1928 <gcry_mpi_mul>
    1c50:	mov	x2, x20
    1c54:	mov	x1, x19
    1c58:	mov	x0, x19
    1c5c:	ldp	x19, x20, [sp, #16]
    1c60:	ldp	x29, x30, [sp], #32
    1c64:	b	2648 <_gcry_mpi_fdiv_r>

0000000000001c68 <_gcry_mpi_mod>:
    1c68:	stp	x29, x30, [sp, #-32]!
    1c6c:	mov	x29, sp
    1c70:	str	x19, [sp, #16]
    1c74:	mov	x19, x0
    1c78:	bl	2648 <_gcry_mpi_fdiv_r>
    1c7c:	str	wzr, [x19, #8]
    1c80:	ldr	x19, [sp, #16]
    1c84:	ldp	x29, x30, [sp], #32
    1c88:	ret
    1c8c:	nop

0000000000001c90 <_gcry_mpi_barrett_init>:
    1c90:	stp	x29, x30, [sp, #-48]!
    1c94:	mov	x29, sp
    1c98:	stp	x19, x20, [sp, #16]
    1c9c:	mov	w20, w1
    1ca0:	str	x21, [sp, #32]
    1ca4:	mov	x21, x0
    1ca8:	bl	908 <_gcry_mpi_normalize>
    1cac:	mov	x1, #0x30                  	// #48
    1cb0:	mov	x0, #0x1                   	// #1
    1cb4:	bl	6b68 <gcry_xcalloc>
    1cb8:	mov	x19, x0
    1cbc:	cbnz	w20, 1d44 <_gcry_mpi_barrett_init+0xb4>
    1cc0:	str	x21, [x0]
    1cc4:	ldr	w0, [x21, #4]
    1cc8:	str	w0, [x19, #12]
    1ccc:	add	w0, w0, #0x1
    1cd0:	bl	70 <_gcry_mpi_alloc>
    1cd4:	mov	x1, #0x1                   	// #1
    1cd8:	mov	x20, x0
    1cdc:	bl	610 <gcry_mpi_set_ui>
    1ce0:	ldr	w1, [x19, #12]
    1ce4:	mov	x0, x20
    1ce8:	lsl	w1, w1, #1
    1cec:	bl	dc0 <_gcry_mpi_lshift_limbs>
    1cf0:	mov	x2, x21
    1cf4:	mov	x1, x20
    1cf8:	mov	x0, x20
    1cfc:	bl	25e0 <_gcry_mpi_fdiv_q>
    1d00:	ldr	w0, [x19, #12]
    1d04:	str	x20, [x19, #16]
    1d08:	lsl	w0, w0, #1
    1d0c:	add	w0, w0, #0x1
    1d10:	bl	70 <_gcry_mpi_alloc>
    1d14:	ldr	w1, [x19, #12]
    1d18:	str	x0, [x19, #24]
    1d1c:	lsl	w0, w1, #1
    1d20:	add	w0, w0, #0x1
    1d24:	bl	70 <_gcry_mpi_alloc>
    1d28:	mov	x1, x0
    1d2c:	mov	x0, x19
    1d30:	str	x1, [x19, #32]
    1d34:	ldp	x19, x20, [sp, #16]
    1d38:	ldr	x21, [sp, #32]
    1d3c:	ldp	x29, x30, [sp], #48
    1d40:	ret
    1d44:	mov	x0, x21
    1d48:	bl	3a0 <_gcry_mpi_copy>
    1d4c:	mov	w1, #0x1                   	// #1
    1d50:	str	x0, [x19]
    1d54:	str	w1, [x19, #8]
    1d58:	b	1cc4 <_gcry_mpi_barrett_init+0x34>
    1d5c:	nop

0000000000001d60 <_gcry_mpi_barrett_free>:
    1d60:	cbz	x0, 1db0 <_gcry_mpi_barrett_free+0x50>
    1d64:	stp	x29, x30, [sp, #-32]!
    1d68:	mov	x29, sp
    1d6c:	str	x19, [sp, #16]
    1d70:	mov	x19, x0
    1d74:	ldr	x0, [x0, #16]
    1d78:	bl	290 <_gcry_mpi_free>
    1d7c:	ldr	x0, [x19, #24]
    1d80:	bl	290 <_gcry_mpi_free>
    1d84:	ldr	x0, [x19, #32]
    1d88:	bl	290 <_gcry_mpi_free>
    1d8c:	ldr	x0, [x19, #40]
    1d90:	cbz	x0, 1d98 <_gcry_mpi_barrett_free+0x38>
    1d94:	bl	290 <_gcry_mpi_free>
    1d98:	ldr	w0, [x19, #8]
    1d9c:	cbnz	w0, 1db4 <_gcry_mpi_barrett_free+0x54>
    1da0:	mov	x0, x19
    1da4:	ldr	x19, [sp, #16]
    1da8:	ldp	x29, x30, [sp], #32
    1dac:	b	6b58 <gcry_free>
    1db0:	ret
    1db4:	ldr	x0, [x19]
    1db8:	bl	290 <_gcry_mpi_free>
    1dbc:	mov	x0, x19
    1dc0:	ldr	x19, [sp, #16]
    1dc4:	ldp	x29, x30, [sp], #32
    1dc8:	b	6b58 <gcry_free>
    1dcc:	nop

0000000000001dd0 <_gcry_mpi_mod_barrett>:
    1dd0:	stp	x29, x30, [sp, #-96]!
    1dd4:	mov	x29, sp
    1dd8:	stp	x23, x24, [sp, #48]
    1ddc:	mov	x23, x1
    1de0:	ldr	w24, [x2, #12]
    1de4:	stp	x19, x20, [sp, #16]
    1de8:	mov	x19, x0
    1dec:	mov	x0, x1
    1df0:	stp	x21, x22, [sp, #32]
    1df4:	mov	x21, x2
    1df8:	stp	x25, x26, [sp, #64]
    1dfc:	ldr	x20, [x2]
    1e00:	ldp	x26, x22, [x2, #24]
    1e04:	str	x27, [sp, #80]
    1e08:	ldr	x27, [x2, #16]
    1e0c:	bl	908 <_gcry_mpi_normalize>
    1e10:	ldr	w0, [x23, #4]
    1e14:	cmp	w0, w24, lsl #1
    1e18:	b.gt	1f0c <_gcry_mpi_mod_barrett+0x13c>
    1e1c:	mov	x1, x23
    1e20:	mov	x0, x22
    1e24:	bl	570 <gcry_mpi_set>
    1e28:	add	w25, w24, #0x1
    1e2c:	sub	w1, w24, #0x1
    1e30:	mov	x0, x22
    1e34:	bl	b68 <_gcry_mpi_rshift_limbs>
    1e38:	mov	x2, x27
    1e3c:	mov	x1, x22
    1e40:	mov	x0, x22
    1e44:	bl	1928 <gcry_mpi_mul>
    1e48:	mov	w1, w25
    1e4c:	mov	x0, x22
    1e50:	bl	b68 <_gcry_mpi_rshift_limbs>
    1e54:	mov	x1, x23
    1e58:	mov	x0, x26
    1e5c:	bl	570 <gcry_mpi_set>
    1e60:	ldr	w0, [x26, #4]
    1e64:	cmp	w25, w0
    1e68:	b.ge	1e70 <_gcry_mpi_mod_barrett+0xa0>  // b.tcont
    1e6c:	str	w25, [x26, #4]
    1e70:	mov	x0, x22
    1e74:	mov	x2, x20
    1e78:	mov	x1, x22
    1e7c:	bl	1928 <gcry_mpi_mul>
    1e80:	ldr	w0, [x22, #4]
    1e84:	cmp	w25, w0
    1e88:	b.ge	1e90 <_gcry_mpi_mod_barrett+0xc0>  // b.tcont
    1e8c:	str	w25, [x22, #4]
    1e90:	mov	x0, x19
    1e94:	mov	x2, x22
    1e98:	mov	x1, x26
    1e9c:	bl	16a0 <gcry_mpi_sub>
    1ea0:	ldr	w0, [x19, #8]
    1ea4:	cbz	w0, 1ee0 <_gcry_mpi_mod_barrett+0x110>
    1ea8:	ldr	x2, [x21, #40]
    1eac:	cbz	x2, 1f3c <_gcry_mpi_mod_barrett+0x16c>
    1eb0:	mov	x1, x19
    1eb4:	mov	x0, x19
    1eb8:	bl	1158 <gcry_mpi_add>
    1ebc:	mov	x1, x20
    1ec0:	mov	x0, x19
    1ec4:	bl	2980 <gcry_mpi_cmp>
    1ec8:	tbnz	w0, #31, 1ef0 <_gcry_mpi_mod_barrett+0x120>
    1ecc:	nop
    1ed0:	mov	x2, x20
    1ed4:	mov	x1, x19
    1ed8:	mov	x0, x19
    1edc:	bl	16a0 <gcry_mpi_sub>
    1ee0:	mov	x1, x20
    1ee4:	mov	x0, x19
    1ee8:	bl	2980 <gcry_mpi_cmp>
    1eec:	tbz	w0, #31, 1ed0 <_gcry_mpi_mod_barrett+0x100>
    1ef0:	ldp	x19, x20, [sp, #16]
    1ef4:	ldp	x21, x22, [sp, #32]
    1ef8:	ldp	x23, x24, [sp, #48]
    1efc:	ldp	x25, x26, [sp, #64]
    1f00:	ldr	x27, [sp, #80]
    1f04:	ldp	x29, x30, [sp], #96
    1f08:	ret
    1f0c:	mov	x2, x20
    1f10:	mov	x1, x23
    1f14:	mov	x0, x19
    1f18:	bl	2648 <_gcry_mpi_fdiv_r>
    1f1c:	str	wzr, [x19, #8]
    1f20:	ldp	x19, x20, [sp, #16]
    1f24:	ldp	x21, x22, [sp, #32]
    1f28:	ldp	x23, x24, [sp, #48]
    1f2c:	ldp	x25, x26, [sp, #64]
    1f30:	ldr	x27, [sp, #80]
    1f34:	ldp	x29, x30, [sp], #96
    1f38:	ret
    1f3c:	add	w0, w24, #0x2
    1f40:	bl	70 <_gcry_mpi_alloc>
    1f44:	str	x0, [x21, #40]
    1f48:	mov	x1, #0x1                   	// #1
    1f4c:	bl	610 <gcry_mpi_set_ui>
    1f50:	ldr	x0, [x21, #40]
    1f54:	mov	w1, w25
    1f58:	bl	dc0 <_gcry_mpi_lshift_limbs>
    1f5c:	ldr	x2, [x21, #40]
    1f60:	b	1eb0 <_gcry_mpi_mod_barrett+0xe0>
    1f64:	nop

0000000000001f68 <_gcry_mpi_mul_barrett>:
    1f68:	stp	x29, x30, [sp, #-32]!
    1f6c:	mov	x29, sp
    1f70:	stp	x19, x20, [sp, #16]
    1f74:	mov	x20, x3
    1f78:	mov	x19, x0
    1f7c:	bl	1928 <gcry_mpi_mul>
    1f80:	mov	x2, x20
    1f84:	mov	x1, x19
    1f88:	mov	x0, x19
    1f8c:	ldp	x19, x20, [sp, #16]
    1f90:	ldp	x29, x30, [sp], #32
    1f94:	b	1dd0 <_gcry_mpi_mod_barrett>

0000000000001f98 <gcry_mpi_gcd>:
    1f98:	stp	x29, x30, [sp, #-48]!
    1f9c:	mov	x29, sp
    1fa0:	stp	x19, x20, [sp, #16]
    1fa4:	mov	x19, x2
    1fa8:	str	x21, [sp, #32]
    1fac:	mov	x21, x0
    1fb0:	mov	x0, x1
    1fb4:	bl	3a0 <_gcry_mpi_copy>
    1fb8:	mov	x20, x0
    1fbc:	mov	x0, x19
    1fc0:	bl	3a0 <_gcry_mpi_copy>
    1fc4:	mov	x19, x0
    1fc8:	str	wzr, [x20, #8]
    1fcc:	str	wzr, [x0, #8]
    1fd0:	b	1ff4 <gcry_mpi_gcd+0x5c>
    1fd4:	mov	x0, x21
    1fd8:	bl	2648 <_gcry_mpi_fdiv_r>
    1fdc:	mov	x1, x19
    1fe0:	mov	x0, x20
    1fe4:	bl	570 <gcry_mpi_set>
    1fe8:	mov	x1, x21
    1fec:	mov	x0, x19
    1ff0:	bl	570 <gcry_mpi_set>
    1ff4:	mov	x1, #0x0                   	// #0
    1ff8:	mov	x0, x19
    1ffc:	bl	2900 <gcry_mpi_cmp_ui>
    2000:	mov	x2, x19
    2004:	mov	x1, x20
    2008:	cbnz	w0, 1fd4 <gcry_mpi_gcd+0x3c>
    200c:	mov	x0, x21
    2010:	bl	570 <gcry_mpi_set>
    2014:	mov	x0, x20
    2018:	bl	290 <_gcry_mpi_free>
    201c:	mov	x0, x19
    2020:	bl	290 <_gcry_mpi_free>
    2024:	mov	x0, x21
    2028:	mov	x1, #0x1                   	// #1
    202c:	bl	2900 <gcry_mpi_cmp_ui>
    2030:	cmp	w0, #0x0
    2034:	cset	w0, eq  // eq = none
    2038:	ldp	x19, x20, [sp, #16]
    203c:	ldr	x21, [sp, #32]
    2040:	ldp	x29, x30, [sp], #48
    2044:	ret

0000000000002048 <_gcry_mpi_fdiv_r_ui>:
    2048:	stp	x29, x30, [sp, #-48]!
    204c:	mov	x29, sp
    2050:	stp	x19, x20, [sp, #16]
    2054:	mov	x19, x1
    2058:	mov	x20, x0
    205c:	ldr	w1, [x1, #4]
    2060:	ldr	x0, [x19, #16]
    2064:	str	x21, [sp, #32]
    2068:	mov	x21, x2
    206c:	bl	4f78 <_gcry_mpih_mod_1>
    2070:	cbz	x0, 2084 <_gcry_mpi_fdiv_r_ui+0x3c>
    2074:	ldr	w1, [x19, #8]
    2078:	sub	x2, x21, x0
    207c:	cmp	w1, #0x0
    2080:	csel	x0, x2, x0, ne  // ne = any
    2084:	cbz	x20, 209c <_gcry_mpi_fdiv_r_ui+0x54>
    2088:	ldr	x2, [x20, #16]
    208c:	cmp	x0, #0x0
    2090:	cset	w1, ne  // ne = any
    2094:	str	x0, [x2]
    2098:	str	w1, [x20, #4]
    209c:	ldp	x19, x20, [sp, #16]
    20a0:	ldr	x21, [sp, #32]
    20a4:	ldp	x29, x30, [sp], #48
    20a8:	ret
    20ac:	nop

00000000000020b0 <_gcry_mpi_tdiv_qr>:
    20b0:	stp	x29, x30, [sp, #-208]!
    20b4:	mov	x29, sp
    20b8:	stp	x21, x22, [sp, #32]
    20bc:	mov	x22, x3
    20c0:	stp	x23, x24, [sp, #48]
    20c4:	ldp	w21, w23, [x2, #4]
    20c8:	stp	x19, x20, [sp, #16]
    20cc:	mov	x19, x2
    20d0:	stp	x25, x26, [sp, #64]
    20d4:	mov	x26, x0
    20d8:	mov	x0, x1
    20dc:	ldp	w20, w25, [x3, #4]
    20e0:	stp	x27, x28, [sp, #80]
    20e4:	add	w28, w21, #0x1
    20e8:	mov	x27, x1
    20ec:	sub	w24, w28, w20
    20f0:	mov	w1, w28
    20f4:	bl	1b0 <_gcry_mpi_resize>
    20f8:	cmp	w24, #0x0
    20fc:	b.le	2304 <_gcry_mpi_tdiv_qr+0x254>
    2100:	eor	w0, w25, w23
    2104:	str	w0, [sp, #108]
    2108:	cbz	x26, 22dc <_gcry_mpi_tdiv_qr+0x22c>
    210c:	mov	w1, w24
    2110:	mov	x0, x26
    2114:	bl	1b0 <_gcry_mpi_resize>
    2118:	cmp	w20, #0x1
    211c:	ldr	x5, [x19, #16]
    2120:	ldr	x3, [x22, #16]
    2124:	ldr	x25, [x27, #16]
    2128:	b.eq	2478 <_gcry_mpi_tdiv_qr+0x3c8>  // b.none
    212c:	ldr	x19, [x26, #16]
    2130:	sxtw	x0, w20
    2134:	str	x0, [sp, #112]
    2138:	sbfiz	x24, x20, #3, #32
    213c:	cmp	x19, x5
    2140:	b.eq	236c <_gcry_mpi_tdiv_qr+0x2bc>  // b.none
    2144:	mov	w9, #0x0                   	// #0
    2148:	add	x24, x3, x24
    214c:	mov	x2, #0x38                  	// #56
    2150:	ldur	x1, [x24, #-8]
    2154:	nop
    2158:	lsr	x0, x1, x2
    215c:	tst	w0, #0xff
    2160:	b.ne	2468 <_gcry_mpi_tdiv_qr+0x3b8>  // b.any
    2164:	subs	x2, x2, #0x8
    2168:	b.ne	2158 <_gcry_mpi_tdiv_qr+0xa8>  // b.any
    216c:	mov	w24, #0x40                  	// #64
    2170:	adrp	x0, 0 <_gcry_mpi_m_check>
    2174:	ldr	x0, [x0]
    2178:	ldrb	w0, [x0, x1]
    217c:	subs	w0, w24, w0
    2180:	str	w0, [sp, #96]
    2184:	b.ne	23f0 <_gcry_mpi_tdiv_qr+0x340>  // b.any
    2188:	cmp	x25, x3
    218c:	b.eq	219c <_gcry_mpi_tdiv_qr+0xec>  // b.none
    2190:	cmp	x26, #0x0
    2194:	ccmp	x19, x3, #0x0, ne  // ne = any
    2198:	b.ne	2360 <_gcry_mpi_tdiv_qr+0x2b0>  // b.any
    219c:	sxtw	x28, w9
    21a0:	add	x2, sp, #0x90
    21a4:	add	x24, sp, #0xa8
    21a8:	ldr	w1, [x22, #12]
    21ac:	mov	w0, w20
    21b0:	add	w22, w9, #0x1
    21b4:	and	w1, w1, #0x1
    21b8:	str	w20, [x2, x28, lsl #2]
    21bc:	stp	x5, x3, [sp, #120]
    21c0:	bl	28 <_gcry_mpi_alloc_limb_space>
    21c4:	cmp	w20, #0x0
    21c8:	str	x0, [x24, x28, lsl #3]
    21cc:	mov	x4, x0
    21d0:	ldr	x5, [sp, #120]
    21d4:	b.le	21f4 <_gcry_mpi_tdiv_qr+0x144>
    21d8:	ldr	x3, [sp, #128]
    21dc:	mov	x2, #0x0                   	// #0
    21e0:	ldr	x0, [x3, x2, lsl #3]
    21e4:	str	x0, [x4, x2, lsl #3]
    21e8:	add	x2, x2, #0x1
    21ec:	cmp	w20, w2
    21f0:	b.gt	21e0 <_gcry_mpi_tdiv_qr+0x130>
    21f4:	cmp	x5, x25
    21f8:	b.eq	221c <_gcry_mpi_tdiv_qr+0x16c>  // b.none
    21fc:	cmp	w21, #0x0
    2200:	b.le	221c <_gcry_mpi_tdiv_qr+0x16c>
    2204:	mov	x2, #0x0                   	// #0
    2208:	ldr	x1, [x5, x2, lsl #3]
    220c:	str	x1, [x25, x2, lsl #3]
    2210:	add	x2, x2, #0x1
    2214:	cmp	w21, w2
    2218:	b.gt	2208 <_gcry_mpi_tdiv_qr+0x158>
    221c:	mov	w5, w20
    2220:	mov	w3, w21
    2224:	mov	x2, x25
    2228:	mov	x0, x19
    222c:	mov	w1, #0x0                   	// #0
    2230:	bl	5170 <_gcry_mpih_divrem>
    2234:	cbz	x26, 2250 <_gcry_mpi_tdiv_qr+0x1a0>
    2238:	sub	w21, w21, w20
    223c:	cbz	x0, 2248 <_gcry_mpi_tdiv_qr+0x198>
    2240:	str	x0, [x19, w21, sxtw #3]
    2244:	add	w21, w21, #0x1
    2248:	ldr	w0, [sp, #108]
    224c:	stp	w21, w0, [x26, #4]
    2250:	cmp	w20, #0x0
    2254:	b.le	2280 <_gcry_mpi_tdiv_qr+0x1d0>
    2258:	sub	x1, x25, #0x8
    225c:	ldr	x0, [sp, #112]
    2260:	b	2274 <_gcry_mpi_tdiv_qr+0x1c4>
    2264:	sub	w20, w0, #0x1
    2268:	sub	x0, x0, #0x1
    226c:	cmp	w0, #0x0
    2270:	b.le	2280 <_gcry_mpi_tdiv_qr+0x1d0>
    2274:	ldr	x2, [x1, x0, lsl #3]
    2278:	mov	w20, w0
    227c:	cbz	x2, 2264 <_gcry_mpi_tdiv_qr+0x1b4>
    2280:	ldr	w0, [sp, #96]
    2284:	cmp	w0, #0x0
    2288:	ccmp	w20, #0x0, #0x4, ne  // ne = any
    228c:	b.ne	23c4 <_gcry_mpi_tdiv_qr+0x314>  // b.any
    2290:	stp	w20, w23, [x27, #4]
    2294:	cbz	w22, 22c0 <_gcry_mpi_tdiv_qr+0x210>
    2298:	add	x2, sp, #0x90
    229c:	add	x24, sp, #0xa8
    22a0:	sub	w22, w22, #0x1
    22a4:	str	x2, [sp, #96]
    22a8:	sxtw	x0, w22
    22ac:	ldr	w1, [x2, x0, lsl #2]
    22b0:	ldr	x0, [x24, x0, lsl #3]
    22b4:	bl	140 <_gcry_mpi_free_limb_space>
    22b8:	ldr	x2, [sp, #96]
    22bc:	cbnz	w22, 22a0 <_gcry_mpi_tdiv_qr+0x1f0>
    22c0:	ldp	x19, x20, [sp, #16]
    22c4:	ldp	x21, x22, [sp, #32]
    22c8:	ldp	x23, x24, [sp, #48]
    22cc:	ldp	x25, x26, [sp, #64]
    22d0:	ldp	x27, x28, [sp, #80]
    22d4:	ldp	x29, x30, [sp], #208
    22d8:	ret
    22dc:	cmp	w20, #0x1
    22e0:	ldr	x5, [x19, #16]
    22e4:	ldr	x3, [x22, #16]
    22e8:	ldr	x25, [x27, #16]
    22ec:	b.eq	24d8 <_gcry_mpi_tdiv_qr+0x428>  // b.none
    22f0:	sbfiz	x24, x20, #3, #32
    22f4:	sxtw	x0, w20
    22f8:	add	x19, x25, x24
    22fc:	str	x0, [sp, #112]
    2300:	b	2144 <_gcry_mpi_tdiv_qr+0x94>
    2304:	cmp	x19, x27
    2308:	b.eq	233c <_gcry_mpi_tdiv_qr+0x28c>  // b.none
    230c:	ldp	w1, w0, [x19, #4]
    2310:	stp	w1, w0, [x27, #4]
    2314:	cmp	w21, #0x0
    2318:	b.le	233c <_gcry_mpi_tdiv_qr+0x28c>
    231c:	ldr	x3, [x19, #16]
    2320:	mov	x2, #0x0                   	// #0
    2324:	ldr	x1, [x27, #16]
    2328:	ldr	x0, [x3, x2, lsl #3]
    232c:	str	x0, [x1, x2, lsl #3]
    2330:	add	x2, x2, #0x1
    2334:	cmp	w21, w2
    2338:	b.gt	2328 <_gcry_mpi_tdiv_qr+0x278>
    233c:	cbz	x26, 22c0 <_gcry_mpi_tdiv_qr+0x210>
    2340:	stur	xzr, [x26, #4]
    2344:	ldp	x19, x20, [sp, #16]
    2348:	ldp	x21, x22, [sp, #32]
    234c:	ldp	x23, x24, [sp, #48]
    2350:	ldp	x25, x26, [sp, #64]
    2354:	ldp	x27, x28, [sp, #80]
    2358:	ldp	x29, x30, [sp], #208
    235c:	ret
    2360:	mov	w22, w9
    2364:	mov	x4, x3
    2368:	b	21f4 <_gcry_mpi_tdiv_qr+0x144>
    236c:	ldr	w1, [x26, #12]
    2370:	mov	w0, w21
    2374:	str	x3, [sp, #96]
    2378:	and	w1, w1, #0x1
    237c:	str	x5, [sp, #120]
    2380:	str	w21, [sp, #144]
    2384:	bl	28 <_gcry_mpi_alloc_limb_space>
    2388:	str	x0, [sp, #168]
    238c:	cmp	w21, #0x0
    2390:	ldr	x3, [sp, #96]
    2394:	b.le	24ec <_gcry_mpi_tdiv_qr+0x43c>
    2398:	ldr	x5, [sp, #120]
    239c:	mov	x1, #0x0                   	// #0
    23a0:	ldr	x2, [x5, x1, lsl #3]
    23a4:	str	x2, [x0, x1, lsl #3]
    23a8:	add	x1, x1, #0x1
    23ac:	cmp	w21, w1
    23b0:	b.gt	23a0 <_gcry_mpi_tdiv_qr+0x2f0>
    23b4:	mov	x19, x5
    23b8:	mov	w9, #0x1                   	// #1
    23bc:	mov	x5, x0
    23c0:	b	2148 <_gcry_mpi_tdiv_qr+0x98>
    23c4:	mov	x3, x0
    23c8:	mov	w2, w20
    23cc:	mov	x1, x25
    23d0:	mov	x0, x25
    23d4:	bl	68e0 <_gcry_mpih_rshift>
    23d8:	add	x6, x25, w20, sxtw #3
    23dc:	ldur	x0, [x6, #-8]
    23e0:	cmp	x0, #0x0
    23e4:	cset	w0, eq  // eq = none
    23e8:	sub	w20, w20, w0
    23ec:	b	2290 <_gcry_mpi_tdiv_qr+0x1e0>
    23f0:	sxtw	x10, w9
    23f4:	add	x2, sp, #0x90
    23f8:	ldr	w1, [x22, #12]
    23fc:	mov	w0, w20
    2400:	add	w22, w9, #0x1
    2404:	stp	x10, x5, [sp, #120]
    2408:	and	w1, w1, #0x1
    240c:	str	w20, [x2, x10, lsl #2]
    2410:	add	x24, sp, #0xa8
    2414:	str	x3, [sp, #136]
    2418:	bl	28 <_gcry_mpi_alloc_limb_space>
    241c:	ldr	x3, [sp, #136]
    2420:	mov	w2, w20
    2424:	ldr	x10, [sp, #120]
    2428:	mov	x1, x3
    242c:	ldr	w3, [sp, #96]
    2430:	str	x0, [sp, #120]
    2434:	str	x0, [x24, x10, lsl #3]
    2438:	bl	3c70 <_gcry_mpih_lshift>
    243c:	ldr	w3, [sp, #96]
    2440:	mov	w2, w21
    2444:	ldr	x5, [sp, #128]
    2448:	mov	x0, x25
    244c:	mov	x1, x5
    2450:	bl	3c70 <_gcry_mpih_lshift>
    2454:	ldr	x4, [sp, #120]
    2458:	cbz	x0, 221c <_gcry_mpi_tdiv_qr+0x16c>
    245c:	str	x0, [x25, w21, sxtw #3]
    2460:	mov	w21, w28
    2464:	b	221c <_gcry_mpi_tdiv_qr+0x16c>
    2468:	mov	w24, #0x40                  	// #64
    246c:	mov	x1, x0
    2470:	sub	w24, w24, w2
    2474:	b	2170 <_gcry_mpi_tdiv_qr+0xc0>
    2478:	ldr	x19, [x26, #16]
    247c:	mov	w2, w21
    2480:	ldr	x3, [x3]
    2484:	mov	x0, x19
    2488:	add	x19, x19, w24, sxtw #3
    248c:	mov	x1, x5
    2490:	bl	5808 <_gcry_mpih_divmod_1>
    2494:	ldur	x1, [x19, #-8]
    2498:	ldr	w2, [sp, #108]
    249c:	cmp	x1, #0x0
    24a0:	cset	w1, eq  // eq = none
    24a4:	sub	w24, w24, w1
    24a8:	stp	w24, w2, [x26, #4]
    24ac:	cmp	x0, #0x0
    24b0:	str	x0, [x25]
    24b4:	cset	w0, ne  // ne = any
    24b8:	stp	w0, w23, [x27, #4]
    24bc:	ldp	x19, x20, [sp, #16]
    24c0:	ldp	x21, x22, [sp, #32]
    24c4:	ldp	x23, x24, [sp, #48]
    24c8:	ldp	x25, x26, [sp, #64]
    24cc:	ldp	x27, x28, [sp, #80]
    24d0:	ldp	x29, x30, [sp], #208
    24d4:	ret
    24d8:	ldr	x2, [x3]
    24dc:	mov	w1, w21
    24e0:	mov	x0, x5
    24e4:	bl	4f78 <_gcry_mpih_mod_1>
    24e8:	b	24ac <_gcry_mpi_tdiv_qr+0x3fc>
    24ec:	mov	x5, x0
    24f0:	mov	w9, #0x1                   	// #1
    24f4:	b	2148 <_gcry_mpi_tdiv_qr+0x98>
	...

0000000000002500 <_gcry_mpi_fdiv_qr>:
    2500:	stp	x29, x30, [sp, #-64]!
    2504:	cmp	x3, x0
    2508:	ccmp	x3, x1, #0x4, ne  // ne = any
    250c:	mov	x29, sp
    2510:	stp	x19, x20, [sp, #16]
    2514:	mov	x19, x3
    2518:	mov	x20, x1
    251c:	stp	x21, x22, [sp, #32]
    2520:	mov	x21, x0
    2524:	mov	x22, x2
    2528:	stp	x23, x24, [sp, #48]
    252c:	ldr	w24, [x3, #8]
    2530:	b.eq	2560 <_gcry_mpi_fdiv_qr+0x60>  // b.none
    2534:	bl	20b0 <_gcry_mpi_tdiv_qr>
    2538:	ldr	w0, [x22, #8]
    253c:	cmp	w24, w0
    2540:	b.eq	254c <_gcry_mpi_fdiv_qr+0x4c>  // b.none
    2544:	ldr	w0, [x20, #4]
    2548:	cbnz	w0, 25b4 <_gcry_mpi_fdiv_qr+0xb4>
    254c:	ldp	x19, x20, [sp, #16]
    2550:	ldp	x21, x22, [sp, #32]
    2554:	ldp	x23, x24, [sp, #48]
    2558:	ldp	x29, x30, [sp], #64
    255c:	ret
    2560:	mov	x0, x3
    2564:	bl	3a0 <_gcry_mpi_copy>
    2568:	mov	x2, x22
    256c:	mov	x3, x0
    2570:	mov	x23, x0
    2574:	mov	x1, x20
    2578:	mov	x0, x21
    257c:	bl	20b0 <_gcry_mpi_tdiv_qr>
    2580:	ldr	w0, [x22, #8]
    2584:	cmp	w0, w24
    2588:	b.eq	2598 <_gcry_mpi_fdiv_qr+0x98>  // b.none
    258c:	ldr	w0, [x20, #4]
    2590:	mov	x19, x23
    2594:	cbnz	w0, 25b8 <_gcry_mpi_fdiv_qr+0xb8>
    2598:	cbz	x23, 254c <_gcry_mpi_fdiv_qr+0x4c>
    259c:	mov	x0, x23
    25a0:	ldp	x19, x20, [sp, #16]
    25a4:	ldp	x21, x22, [sp, #32]
    25a8:	ldp	x23, x24, [sp, #48]
    25ac:	ldp	x29, x30, [sp], #64
    25b0:	b	290 <_gcry_mpi_free>
    25b4:	mov	x23, #0x0                   	// #0
    25b8:	mov	x1, x21
    25bc:	mov	x0, x21
    25c0:	mov	x2, #0x1                   	// #1
    25c4:	bl	14d0 <gcry_mpi_sub_ui>
    25c8:	mov	x2, x19
    25cc:	mov	x1, x20
    25d0:	mov	x0, x20
    25d4:	bl	1158 <gcry_mpi_add>
    25d8:	b	2598 <_gcry_mpi_fdiv_qr+0x98>
    25dc:	nop

00000000000025e0 <_gcry_mpi_fdiv_q>:
    25e0:	stp	x29, x30, [sp, #-48]!
    25e4:	mov	x29, sp
    25e8:	stp	x19, x20, [sp, #16]
    25ec:	mov	x20, x0
    25f0:	ldr	w0, [x0, #4]
    25f4:	stp	x21, x22, [sp, #32]
    25f8:	mov	x21, x1
    25fc:	mov	x22, x2
    2600:	bl	70 <_gcry_mpi_alloc>
    2604:	mov	x19, x0
    2608:	mov	x3, x22
    260c:	mov	x2, x21
    2610:	mov	x0, x20
    2614:	mov	x1, x19
    2618:	bl	2500 <_gcry_mpi_fdiv_qr>
    261c:	mov	x0, x19
    2620:	ldp	x19, x20, [sp, #16]
    2624:	ldp	x21, x22, [sp, #32]
    2628:	ldp	x29, x30, [sp], #48
    262c:	b	290 <_gcry_mpi_free>

0000000000002630 <_gcry_mpi_tdiv_r>:
    2630:	mov	x4, x1
    2634:	mov	x3, x2
    2638:	mov	x1, x0
    263c:	mov	x2, x4
    2640:	mov	x0, #0x0                   	// #0
    2644:	b	20b0 <_gcry_mpi_tdiv_qr>

0000000000002648 <_gcry_mpi_fdiv_r>:
    2648:	stp	x29, x30, [sp, #-48]!
    264c:	mov	x29, sp
    2650:	stp	x21, x22, [sp, #32]
    2654:	mov	x21, x1
    2658:	ldr	w1, [x2, #8]
    265c:	stp	x19, x20, [sp, #16]
    2660:	mov	x19, x2
    2664:	cmp	w1, #0x0
    2668:	cset	w22, ne  // ne = any
    266c:	cmp	x2, x0
    2670:	b.eq	26d4 <_gcry_mpi_fdiv_r+0x8c>  // b.none
    2674:	mov	x3, x2
    2678:	mov	x1, x0
    267c:	mov	x20, x0
    2680:	mov	x2, x21
    2684:	mov	x0, #0x0                   	// #0
    2688:	bl	20b0 <_gcry_mpi_tdiv_qr>
    268c:	ldr	w0, [x21, #8]
    2690:	cmp	w0, #0x0
    2694:	cset	w0, ne  // ne = any
    2698:	cmp	w0, w22
    269c:	b.eq	26a8 <_gcry_mpi_fdiv_r+0x60>  // b.none
    26a0:	ldr	w0, [x20, #4]
    26a4:	cbnz	w0, 26b8 <_gcry_mpi_fdiv_r+0x70>
    26a8:	ldp	x19, x20, [sp, #16]
    26ac:	ldp	x21, x22, [sp, #32]
    26b0:	ldp	x29, x30, [sp], #48
    26b4:	ret
    26b8:	mov	x2, x19
    26bc:	mov	x1, x20
    26c0:	mov	x0, x20
    26c4:	ldp	x19, x20, [sp, #16]
    26c8:	ldp	x21, x22, [sp, #32]
    26cc:	ldp	x29, x30, [sp], #48
    26d0:	b	1158 <gcry_mpi_add>
    26d4:	bl	3a0 <_gcry_mpi_copy>
    26d8:	mov	x3, x0
    26dc:	mov	x20, x0
    26e0:	mov	x2, x21
    26e4:	mov	x0, #0x0                   	// #0
    26e8:	mov	x1, x19
    26ec:	bl	20b0 <_gcry_mpi_tdiv_qr>
    26f0:	ldr	w0, [x21, #8]
    26f4:	cmp	w0, #0x0
    26f8:	cset	w0, ne  // ne = any
    26fc:	cmp	w0, w22
    2700:	b.eq	270c <_gcry_mpi_fdiv_r+0xc4>  // b.none
    2704:	ldr	w0, [x19, #4]
    2708:	cbnz	w0, 2724 <_gcry_mpi_fdiv_r+0xdc>
    270c:	cbz	x20, 26a8 <_gcry_mpi_fdiv_r+0x60>
    2710:	mov	x0, x20
    2714:	ldp	x19, x20, [sp, #16]
    2718:	ldp	x21, x22, [sp, #32]
    271c:	ldp	x29, x30, [sp], #48
    2720:	b	290 <_gcry_mpi_free>
    2724:	mov	x2, x20
    2728:	mov	x1, x19
    272c:	mov	x0, x19
    2730:	bl	1158 <gcry_mpi_add>
    2734:	b	270c <_gcry_mpi_fdiv_r+0xc4>

0000000000002738 <_gcry_mpi_tdiv_q_2exp>:
    2738:	stp	x29, x30, [sp, #-64]!
    273c:	mov	x29, sp
    2740:	stp	x19, x20, [sp, #16]
    2744:	mov	w19, w2
    2748:	str	x23, [sp, #48]
    274c:	lsr	w23, w2, #6
    2750:	ldr	w2, [x1, #4]
    2754:	stp	x21, x22, [sp, #32]
    2758:	mov	x21, x0
    275c:	cmp	w2, w19, lsr #6
    2760:	b.gt	277c <_gcry_mpi_tdiv_q_2exp+0x44>
    2764:	str	wzr, [x0, #4]
    2768:	ldp	x19, x20, [sp, #16]
    276c:	ldp	x21, x22, [sp, #32]
    2770:	ldr	x23, [sp, #48]
    2774:	ldp	x29, x30, [sp], #64
    2778:	ret
    277c:	mov	x22, x1
    2780:	ldr	w1, [x0]
    2784:	sub	w20, w2, w23
    2788:	cmp	w1, w20
    278c:	b.lt	27e8 <_gcry_mpi_tdiv_q_2exp+0xb0>  // b.tstop
    2790:	ands	w3, w19, #0x3f
    2794:	b.ne	27b0 <_gcry_mpi_tdiv_q_2exp+0x78>  // b.any
    2798:	str	w20, [x21, #4]
    279c:	ldp	x19, x20, [sp, #16]
    27a0:	ldp	x21, x22, [sp, #32]
    27a4:	ldr	x23, [sp, #48]
    27a8:	ldp	x29, x30, [sp], #64
    27ac:	ret
    27b0:	ldr	x19, [x21, #16]
    27b4:	ubfiz	x23, x23, #3, #26
    27b8:	ldr	x1, [x22, #16]
    27bc:	mov	x0, x19
    27c0:	add	x19, x19, w20, sxtw #3
    27c4:	mov	w2, w20
    27c8:	add	x1, x1, x23
    27cc:	bl	68e0 <_gcry_mpih_rshift>
    27d0:	ldur	x0, [x19, #-8]
    27d4:	cmp	x0, #0x0
    27d8:	cset	w0, eq  // eq = none
    27dc:	sub	w20, w20, w0
    27e0:	str	w20, [x21, #4]
    27e4:	b	279c <_gcry_mpi_tdiv_q_2exp+0x64>
    27e8:	mov	w1, w20
    27ec:	bl	1b0 <_gcry_mpi_resize>
    27f0:	ands	w3, w19, #0x3f
    27f4:	b.eq	2798 <_gcry_mpi_tdiv_q_2exp+0x60>  // b.none
    27f8:	b	27b0 <_gcry_mpi_tdiv_q_2exp+0x78>
    27fc:	nop

0000000000002800 <_gcry_mpi_divisible_ui>:
    2800:	stp	x29, x30, [sp, #-16]!
    2804:	mov	x2, x1
    2808:	mov	x29, sp
    280c:	ldr	w1, [x0, #4]
    2810:	ldr	x0, [x0, #16]
    2814:	bl	4f78 <_gcry_mpih_mod_1>
    2818:	cmp	x0, #0x0
    281c:	cset	w0, eq  // eq = none
    2820:	ldp	x29, x30, [sp], #16
    2824:	ret

0000000000002828 <gcry_mpi_div>:
    2828:	stp	x29, x30, [sp, #-48]!
    282c:	mov	x5, x1
    2830:	mov	x29, sp
    2834:	stp	x19, x20, [sp, #16]
    2838:	mov	x19, x0
    283c:	mov	x20, x2
    2840:	stp	x21, x22, [sp, #32]
    2844:	mov	x21, x3
    2848:	cbnz	w4, 2860 <gcry_mpi_div+0x38>
    284c:	cbz	x1, 2880 <gcry_mpi_div+0x58>
    2850:	ldp	x19, x20, [sp, #16]
    2854:	ldp	x21, x22, [sp, #32]
    2858:	ldp	x29, x30, [sp], #48
    285c:	b	20b0 <_gcry_mpi_tdiv_qr>
    2860:	cmp	w4, #0x0
    2864:	b.ge	28e8 <gcry_mpi_div+0xc0>  // b.tcont
    2868:	cbz	x1, 28d0 <gcry_mpi_div+0xa8>
    286c:	cbz	x0, 28b4 <gcry_mpi_div+0x8c>
    2870:	ldp	x19, x20, [sp, #16]
    2874:	ldp	x21, x22, [sp, #32]
    2878:	ldp	x29, x30, [sp], #48
    287c:	b	2500 <_gcry_mpi_fdiv_qr>
    2880:	ldr	w0, [x0, #4]
    2884:	bl	70 <_gcry_mpi_alloc>
    2888:	mov	x22, x0
    288c:	mov	x3, x21
    2890:	mov	x2, x20
    2894:	mov	x0, x19
    2898:	mov	x1, x22
    289c:	bl	20b0 <_gcry_mpi_tdiv_qr>
    28a0:	mov	x0, x22
    28a4:	ldp	x19, x20, [sp, #16]
    28a8:	ldp	x21, x22, [sp, #32]
    28ac:	ldp	x29, x30, [sp], #48
    28b0:	b	290 <_gcry_mpi_free>
    28b4:	mov	x1, x20
    28b8:	mov	x2, x3
    28bc:	ldp	x19, x20, [sp, #16]
    28c0:	mov	x0, x5
    28c4:	ldp	x21, x22, [sp, #32]
    28c8:	ldp	x29, x30, [sp], #48
    28cc:	b	2648 <_gcry_mpi_fdiv_r>
    28d0:	mov	x1, x20
    28d4:	mov	x2, x3
    28d8:	ldp	x19, x20, [sp, #16]
    28dc:	ldp	x21, x22, [sp, #32]
    28e0:	ldp	x29, x30, [sp], #48
    28e4:	b	25e0 <_gcry_mpi_fdiv_q>
    28e8:	adrp	x0, 0 <_gcry_mpi_m_check>
    28ec:	ldr	x0, [x0]
    28f0:	bl	6ce8 <_gcry_log_bug>
    28f4:	nop
	...

0000000000002900 <gcry_mpi_cmp_ui>:
    2900:	stp	x29, x30, [sp, #-32]!
    2904:	mov	x29, sp
    2908:	stp	x19, x20, [sp, #16]
    290c:	mov	x19, x0
    2910:	mov	x20, x1
    2914:	bl	908 <_gcry_mpi_normalize>
    2918:	ldr	w0, [x19, #4]
    291c:	cbz	w0, 2960 <gcry_mpi_cmp_ui+0x60>
    2920:	ldr	w1, [x19, #8]
    2924:	cbnz	w1, 2974 <gcry_mpi_cmp_ui+0x74>
    2928:	cmp	w0, #0x1
    292c:	b.eq	2940 <gcry_mpi_cmp_ui+0x40>  // b.none
    2930:	mov	w0, #0x1                   	// #1
    2934:	ldp	x19, x20, [sp, #16]
    2938:	ldp	x29, x30, [sp], #32
    293c:	ret
    2940:	ldr	x1, [x19, #16]
    2944:	ldr	x1, [x1]
    2948:	cmp	x1, x20
    294c:	csetm	w2, cc  // cc = lo, ul, last
    2950:	csel	w0, w2, w0, ls  // ls = plast
    2954:	ldp	x19, x20, [sp, #16]
    2958:	ldp	x29, x30, [sp], #32
    295c:	ret
    2960:	cmp	x20, #0x0
    2964:	csetm	w0, ne  // ne = any
    2968:	ldp	x19, x20, [sp, #16]
    296c:	ldp	x29, x30, [sp], #32
    2970:	ret
    2974:	mov	w0, #0xffffffff            	// #-1
    2978:	b	2934 <gcry_mpi_cmp_ui+0x34>
    297c:	nop

0000000000002980 <gcry_mpi_cmp>:
    2980:	stp	x29, x30, [sp, #-32]!
    2984:	mov	x29, sp
    2988:	stp	x19, x20, [sp, #16]
    298c:	mov	x19, x0
    2990:	mov	x20, x1
    2994:	cbz	x0, 29d8 <gcry_mpi_cmp+0x58>
    2998:	ldr	w0, [x0, #12]
    299c:	tbz	w0, #2, 29d8 <gcry_mpi_cmp+0x58>
    29a0:	cbz	x1, 2a68 <gcry_mpi_cmp+0xe8>
    29a4:	ldr	w0, [x20, #12]
    29a8:	tbz	w0, #2, 2a68 <gcry_mpi_cmp+0xe8>
    29ac:	ldr	w0, [x19, #8]
    29b0:	ldr	w1, [x20, #8]
    29b4:	orr	w2, w0, w1
    29b8:	cbz	w2, 2a70 <gcry_mpi_cmp+0xf0>
    29bc:	cmp	w0, w1
    29c0:	b.lt	2a68 <gcry_mpi_cmp+0xe8>  // b.tstop
    29c4:	b.le	2a9c <gcry_mpi_cmp+0x11c>
    29c8:	mov	w0, #0x1                   	// #1
    29cc:	ldp	x19, x20, [sp, #16]
    29d0:	ldp	x29, x30, [sp], #32
    29d4:	ret
    29d8:	cbz	x20, 29f4 <gcry_mpi_cmp+0x74>
    29dc:	ldr	w0, [x20, #12]
    29e0:	tbz	w0, #2, 29f4 <gcry_mpi_cmp+0x74>
    29e4:	cbz	x19, 29c8 <gcry_mpi_cmp+0x48>
    29e8:	ldr	w0, [x19, #12]
    29ec:	tbz	w0, #2, 29c8 <gcry_mpi_cmp+0x48>
    29f0:	b	29ac <gcry_mpi_cmp+0x2c>
    29f4:	mov	x0, x19
    29f8:	bl	908 <_gcry_mpi_normalize>
    29fc:	mov	x0, x20
    2a00:	bl	908 <_gcry_mpi_normalize>
    2a04:	ldp	w2, w5, [x19, #4]
    2a08:	ldp	w0, w1, [x20, #4]
    2a0c:	cbnz	w5, 2a80 <gcry_mpi_cmp+0x100>
    2a10:	cbnz	w1, 29c8 <gcry_mpi_cmp+0x48>
    2a14:	subs	w0, w2, w0
    2a18:	b.ne	29cc <gcry_mpi_cmp+0x4c>  // b.any
    2a1c:	cbz	w2, 2a70 <gcry_mpi_cmp+0xf0>
    2a20:	subs	w2, w2, #0x1
    2a24:	ldr	x3, [x19, #16]
    2a28:	ldr	x4, [x20, #16]
    2a2c:	b.mi	2a70 <gcry_mpi_cmp+0xf0>  // b.first
    2a30:	sxtw	x0, w2
    2a34:	b	2a3c <gcry_mpi_cmp+0xbc>
    2a38:	tbnz	w0, #31, 2a70 <gcry_mpi_cmp+0xf0>
    2a3c:	ldr	x2, [x3, x0, lsl #3]
    2a40:	ldr	x1, [x4, x0, lsl #3]
    2a44:	sub	x0, x0, #0x1
    2a48:	cmp	x2, x1
    2a4c:	b.eq	2a38 <gcry_mpi_cmp+0xb8>  // b.none
    2a50:	cmp	w5, #0x0
    2a54:	cset	w3, ne  // ne = any
    2a58:	cmp	x2, x1
    2a5c:	cset	w0, ls  // ls = plast
    2a60:	cmp	w3, w0
    2a64:	b.eq	29c8 <gcry_mpi_cmp+0x48>  // b.none
    2a68:	mov	w0, #0xffffffff            	// #-1
    2a6c:	b	29cc <gcry_mpi_cmp+0x4c>
    2a70:	mov	w0, #0x0                   	// #0
    2a74:	ldp	x19, x20, [sp, #16]
    2a78:	ldp	x29, x30, [sp], #32
    2a7c:	ret
    2a80:	cbz	w1, 2a68 <gcry_mpi_cmp+0xe8>
    2a84:	cmp	w2, w0
    2a88:	add	w0, w2, w0
    2a8c:	b.eq	2a1c <gcry_mpi_cmp+0x9c>  // b.none
    2a90:	ldp	x19, x20, [sp, #16]
    2a94:	ldp	x29, x30, [sp], #32
    2a98:	ret
    2a9c:	add	w2, w0, #0xe
    2aa0:	adds	w0, w0, #0x7
    2aa4:	csel	w0, w2, w0, mi  // mi = first
    2aa8:	ldr	x1, [x20, #16]
    2aac:	asr	w2, w0, #3
    2ab0:	ldr	x0, [x19, #16]
    2ab4:	sxtw	x2, w2
    2ab8:	ldp	x19, x20, [sp, #16]
    2abc:	ldp	x29, x30, [sp], #32
    2ac0:	b	0 <grub_memcmp>
    2ac4:	nop

0000000000002ac8 <gcry_mpi_invm>:
    2ac8:	stp	x29, x30, [sp, #-128]!
    2acc:	mov	x29, sp
    2ad0:	stp	x19, x20, [sp, #16]
    2ad4:	mov	x20, x2
    2ad8:	stp	x21, x22, [sp, #32]
    2adc:	stp	x23, x24, [sp, #48]
    2ae0:	stp	x25, x26, [sp, #64]
    2ae4:	stp	x27, x28, [sp, #80]
    2ae8:	str	x0, [sp, #112]
    2aec:	mov	x0, x1
    2af0:	bl	3a0 <_gcry_mpi_copy>
    2af4:	mov	x19, x0
    2af8:	mov	x0, x20
    2afc:	bl	3a0 <_gcry_mpi_copy>
    2b00:	mov	x20, x0
    2b04:	b	2b3c <gcry_mpi_invm+0x74>
    2b08:	mov	w1, #0x0                   	// #0
    2b0c:	mov	x0, x20
    2b10:	bl	9c8 <gcry_mpi_test_bit>
    2b14:	mov	w3, w0
    2b18:	mov	x1, x19
    2b1c:	mov	x0, x19
    2b20:	mov	w2, #0x1                   	// #1
    2b24:	cbnz	w3, 2b4c <gcry_mpi_invm+0x84>
    2b28:	bl	bb8 <gcry_mpi_rshift>
    2b2c:	mov	x1, x20
    2b30:	mov	x0, x20
    2b34:	mov	w2, #0x1                   	// #1
    2b38:	bl	bb8 <gcry_mpi_rshift>
    2b3c:	mov	x0, x19
    2b40:	mov	w1, #0x0                   	// #0
    2b44:	bl	9c8 <gcry_mpi_test_bit>
    2b48:	cbz	w0, 2b08 <gcry_mpi_invm+0x40>
    2b4c:	mov	w1, #0x0                   	// #0
    2b50:	mov	x0, x20
    2b54:	bl	9c8 <gcry_mpi_test_bit>
    2b58:	mov	w23, w0
    2b5c:	mov	x0, #0x1                   	// #1
    2b60:	bl	6f8 <_gcry_mpi_alloc_set_ui>
    2b64:	mov	x24, x0
    2b68:	cbz	w23, 2d7c <gcry_mpi_invm+0x2b4>
    2b6c:	mov	x0, x19
    2b70:	bl	3a0 <_gcry_mpi_copy>
    2b74:	mov	x26, x0
    2b78:	mov	x0, x20
    2b7c:	bl	3a0 <_gcry_mpi_copy>
    2b80:	mov	x27, x0
    2b84:	mov	x0, x20
    2b88:	bl	3a0 <_gcry_mpi_copy>
    2b8c:	mov	w1, #0x0                   	// #0
    2b90:	mov	x28, x0
    2b94:	mov	x0, x19
    2b98:	bl	9c8 <gcry_mpi_test_bit>
    2b9c:	cbnz	w0, 2cf0 <gcry_mpi_invm+0x228>
    2ba0:	mov	x0, #0x1                   	// #1
    2ba4:	bl	6f8 <_gcry_mpi_alloc_set_ui>
    2ba8:	mov	x21, x0
    2bac:	mov	x25, #0x0                   	// #0
    2bb0:	stp	xzr, xzr, [sp, #96]
    2bb4:	mov	x0, x19
    2bb8:	bl	3a0 <_gcry_mpi_copy>
    2bbc:	mov	x22, x0
    2bc0:	cbnz	w23, 2d38 <gcry_mpi_invm+0x270>
    2bc4:	mov	x0, x21
    2bc8:	mov	w1, #0x0                   	// #0
    2bcc:	bl	9c8 <gcry_mpi_test_bit>
    2bd0:	cbnz	w0, 2d58 <gcry_mpi_invm+0x290>
    2bd4:	mov	x0, x25
    2bd8:	mov	w1, #0x0                   	// #0
    2bdc:	bl	9c8 <gcry_mpi_test_bit>
    2be0:	cbnz	w0, 2d58 <gcry_mpi_invm+0x290>
    2be4:	mov	x1, x21
    2be8:	mov	x0, x21
    2bec:	mov	w2, #0x1                   	// #1
    2bf0:	bl	bb8 <gcry_mpi_rshift>
    2bf4:	mov	x1, x25
    2bf8:	mov	x0, x25
    2bfc:	mov	w2, #0x1                   	// #1
    2c00:	bl	bb8 <gcry_mpi_rshift>
    2c04:	mov	w2, #0x1                   	// #1
    2c08:	mov	x1, x22
    2c0c:	mov	x0, x22
    2c10:	bl	bb8 <gcry_mpi_rshift>
    2c14:	mov	x0, x22
    2c18:	mov	w1, #0x0                   	// #0
    2c1c:	bl	9c8 <gcry_mpi_test_bit>
    2c20:	cbz	w0, 2bc0 <gcry_mpi_invm+0xf8>
    2c24:	ldr	w0, [x22, #8]
    2c28:	cbnz	w0, 2e2c <gcry_mpi_invm+0x364>
    2c2c:	mov	x1, x21
    2c30:	mov	x0, x24
    2c34:	bl	570 <gcry_mpi_set>
    2c38:	cbz	w23, 2f68 <gcry_mpi_invm+0x4a0>
    2c3c:	mov	x1, x22
    2c40:	mov	x0, x26
    2c44:	bl	570 <gcry_mpi_set>
    2c48:	mov	x2, x27
    2c4c:	mov	x1, x24
    2c50:	mov	x0, x21
    2c54:	bl	16a0 <gcry_mpi_sub>
    2c58:	cbz	w23, 2e80 <gcry_mpi_invm+0x3b8>
    2c5c:	mov	x0, x22
    2c60:	mov	x2, x28
    2c64:	mov	x1, x26
    2c68:	bl	16a0 <gcry_mpi_sub>
    2c6c:	ldr	w0, [x21, #8]
    2c70:	cbnz	w0, 2f28 <gcry_mpi_invm+0x460>
    2c74:	mov	x0, x22
    2c78:	mov	x1, #0x0                   	// #0
    2c7c:	bl	2900 <gcry_mpi_cmp_ui>
    2c80:	cbnz	w0, 2d38 <gcry_mpi_invm+0x270>
    2c84:	ldr	x0, [sp, #112]
    2c88:	mov	x1, x24
    2c8c:	bl	570 <gcry_mpi_set>
    2c90:	mov	x0, x24
    2c94:	bl	290 <_gcry_mpi_free>
    2c98:	mov	x0, x27
    2c9c:	bl	290 <_gcry_mpi_free>
    2ca0:	mov	x0, x21
    2ca4:	bl	290 <_gcry_mpi_free>
    2ca8:	mov	x0, x26
    2cac:	bl	290 <_gcry_mpi_free>
    2cb0:	mov	x0, x28
    2cb4:	bl	290 <_gcry_mpi_free>
    2cb8:	mov	x0, x22
    2cbc:	bl	290 <_gcry_mpi_free>
    2cc0:	mov	x0, x19
    2cc4:	bl	290 <_gcry_mpi_free>
    2cc8:	mov	x0, x20
    2ccc:	bl	290 <_gcry_mpi_free>
    2cd0:	mov	w0, #0x1                   	// #1
    2cd4:	ldp	x19, x20, [sp, #16]
    2cd8:	ldp	x21, x22, [sp, #32]
    2cdc:	ldp	x23, x24, [sp, #48]
    2ce0:	ldp	x25, x26, [sp, #64]
    2ce4:	ldp	x27, x28, [sp, #80]
    2ce8:	ldp	x29, x30, [sp], #128
    2cec:	ret
    2cf0:	mov	x0, #0x0                   	// #0
    2cf4:	bl	6f8 <_gcry_mpi_alloc_set_ui>
    2cf8:	mov	x21, x0
    2cfc:	mov	x25, #0x0                   	// #0
    2d00:	stp	xzr, xzr, [sp, #96]
    2d04:	mov	x0, x20
    2d08:	bl	3a0 <_gcry_mpi_copy>
    2d0c:	mov	x22, x0
    2d10:	ldr	w0, [x0, #8]
    2d14:	mov	w1, #0x0                   	// #0
    2d18:	cmp	w0, #0x0
    2d1c:	cset	w0, eq  // eq = none
    2d20:	str	w0, [x22, #8]
    2d24:	mov	x0, x22
    2d28:	bl	9c8 <gcry_mpi_test_bit>
    2d2c:	cbnz	w0, 2c24 <gcry_mpi_invm+0x15c>
    2d30:	cbz	w23, 2bc4 <gcry_mpi_invm+0xfc>
    2d34:	nop
    2d38:	mov	x0, x21
    2d3c:	mov	w1, #0x0                   	// #0
    2d40:	bl	9c8 <gcry_mpi_test_bit>
    2d44:	cbnz	w0, 2df4 <gcry_mpi_invm+0x32c>
    2d48:	mov	x1, x21
    2d4c:	mov	x0, x21
    2d50:	mov	w2, #0x1                   	// #1
    2d54:	b	2c00 <gcry_mpi_invm+0x138>
    2d58:	mov	x2, x20
    2d5c:	mov	x1, x21
    2d60:	mov	x0, x21
    2d64:	bl	1158 <gcry_mpi_add>
    2d68:	mov	x2, x19
    2d6c:	mov	x1, x25
    2d70:	mov	x0, x25
    2d74:	bl	16a0 <gcry_mpi_sub>
    2d78:	b	2be4 <gcry_mpi_invm+0x11c>
    2d7c:	mov	x0, #0x0                   	// #0
    2d80:	bl	6f8 <_gcry_mpi_alloc_set_ui>
    2d84:	mov	x1, x0
    2d88:	mov	x0, x19
    2d8c:	str	x1, [sp, #96]
    2d90:	bl	3a0 <_gcry_mpi_copy>
    2d94:	mov	x26, x0
    2d98:	mov	x0, x20
    2d9c:	bl	3a0 <_gcry_mpi_copy>
    2da0:	mov	x27, x0
    2da4:	ldr	w0, [x19, #4]
    2da8:	bl	70 <_gcry_mpi_alloc>
    2dac:	str	x0, [sp, #104]
    2db0:	mov	x1, x24
    2db4:	mov	x2, x19
    2db8:	bl	16a0 <gcry_mpi_sub>
    2dbc:	mov	x0, x20
    2dc0:	bl	3a0 <_gcry_mpi_copy>
    2dc4:	mov	x28, x0
    2dc8:	mov	w1, #0x0                   	// #0
    2dcc:	mov	x0, x19
    2dd0:	bl	9c8 <gcry_mpi_test_bit>
    2dd4:	cbnz	w0, 2e08 <gcry_mpi_invm+0x340>
    2dd8:	mov	x0, #0x1                   	// #1
    2ddc:	bl	6f8 <_gcry_mpi_alloc_set_ui>
    2de0:	mov	x21, x0
    2de4:	mov	x0, #0x0                   	// #0
    2de8:	bl	6f8 <_gcry_mpi_alloc_set_ui>
    2dec:	mov	x25, x0
    2df0:	b	2bb4 <gcry_mpi_invm+0xec>
    2df4:	mov	x2, x20
    2df8:	mov	x1, x21
    2dfc:	mov	x0, x21
    2e00:	bl	1158 <gcry_mpi_add>
    2e04:	b	2d48 <gcry_mpi_invm+0x280>
    2e08:	mov	x0, #0x0                   	// #0
    2e0c:	bl	6f8 <_gcry_mpi_alloc_set_ui>
    2e10:	mov	x21, x0
    2e14:	mov	x0, #0x1                   	// #1
    2e18:	bl	6f8 <_gcry_mpi_alloc_set_ui>
    2e1c:	mov	x25, x0
    2e20:	mov	w1, #0x1                   	// #1
    2e24:	str	w1, [x0, #8]
    2e28:	b	2d04 <gcry_mpi_invm+0x23c>
    2e2c:	mov	x0, x27
    2e30:	mov	x2, x21
    2e34:	mov	x1, x20
    2e38:	bl	16a0 <gcry_mpi_sub>
    2e3c:	ldr	w3, [x19, #8]
    2e40:	cmp	w3, #0x0
    2e44:	cset	w0, eq  // eq = none
    2e48:	str	w0, [x19, #8]
    2e4c:	cbz	w23, 2f4c <gcry_mpi_invm+0x484>
    2e50:	str	w3, [x19, #8]
    2e54:	mov	x1, x22
    2e58:	mov	x0, x28
    2e5c:	ldr	w2, [x22, #8]
    2e60:	str	w2, [sp, #124]
    2e64:	cmp	w2, #0x0
    2e68:	cset	w3, eq  // eq = none
    2e6c:	str	w3, [x22, #8]
    2e70:	bl	570 <gcry_mpi_set>
    2e74:	ldr	w2, [sp, #124]
    2e78:	str	w2, [x22, #8]
    2e7c:	b	2c48 <gcry_mpi_invm+0x180>
    2e80:	ldp	x1, x2, [sp, #96]
    2e84:	mov	x0, x25
    2e88:	bl	16a0 <gcry_mpi_sub>
    2e8c:	mov	x0, x22
    2e90:	mov	x2, x28
    2e94:	mov	x1, x26
    2e98:	bl	16a0 <gcry_mpi_sub>
    2e9c:	ldr	w0, [x21, #8]
    2ea0:	cbnz	w0, 2ef4 <gcry_mpi_invm+0x42c>
    2ea4:	mov	x0, x22
    2ea8:	mov	x1, #0x0                   	// #0
    2eac:	bl	2900 <gcry_mpi_cmp_ui>
    2eb0:	cbnz	w0, 2bc4 <gcry_mpi_invm+0xfc>
    2eb4:	ldr	x0, [sp, #112]
    2eb8:	mov	x1, x24
    2ebc:	bl	570 <gcry_mpi_set>
    2ec0:	mov	x0, x24
    2ec4:	bl	290 <_gcry_mpi_free>
    2ec8:	mov	x0, x27
    2ecc:	bl	290 <_gcry_mpi_free>
    2ed0:	mov	x0, x21
    2ed4:	bl	290 <_gcry_mpi_free>
    2ed8:	ldr	x0, [sp, #96]
    2edc:	bl	290 <_gcry_mpi_free>
    2ee0:	ldr	x0, [sp, #104]
    2ee4:	bl	290 <_gcry_mpi_free>
    2ee8:	mov	x0, x25
    2eec:	bl	290 <_gcry_mpi_free>
    2ef0:	b	2ca8 <gcry_mpi_invm+0x1e0>
    2ef4:	mov	x2, x20
    2ef8:	mov	x1, x21
    2efc:	mov	x0, x21
    2f00:	bl	1158 <gcry_mpi_add>
    2f04:	mov	x2, x19
    2f08:	mov	x1, x25
    2f0c:	mov	x0, x25
    2f10:	bl	16a0 <gcry_mpi_sub>
    2f14:	mov	x0, x22
    2f18:	mov	x1, #0x0                   	// #0
    2f1c:	bl	2900 <gcry_mpi_cmp_ui>
    2f20:	cbz	w0, 2eb4 <gcry_mpi_invm+0x3ec>
    2f24:	b	2bc4 <gcry_mpi_invm+0xfc>
    2f28:	mov	x2, x20
    2f2c:	mov	x1, x21
    2f30:	mov	x0, x21
    2f34:	bl	1158 <gcry_mpi_add>
    2f38:	mov	x0, x22
    2f3c:	mov	x1, #0x0                   	// #0
    2f40:	bl	2900 <gcry_mpi_cmp_ui>
    2f44:	cbnz	w0, 2d38 <gcry_mpi_invm+0x270>
    2f48:	b	2c84 <gcry_mpi_invm+0x1bc>
    2f4c:	ldr	x0, [sp, #104]
    2f50:	mov	x2, x25
    2f54:	mov	x1, x19
    2f58:	str	w3, [sp, #124]
    2f5c:	bl	16a0 <gcry_mpi_sub>
    2f60:	ldr	w3, [sp, #124]
    2f64:	b	2e50 <gcry_mpi_invm+0x388>
    2f68:	ldr	x0, [sp, #96]
    2f6c:	mov	x1, x25
    2f70:	bl	570 <gcry_mpi_set>
    2f74:	b	2c3c <gcry_mpi_invm+0x174>

0000000000002f78 <gcry_mpi_powm>:
    2f78:	stp	x29, x30, [sp, #-256]!
    2f7c:	mov	x29, sp
    2f80:	stp	x19, x20, [sp, #16]
    2f84:	mov	x20, x3
    2f88:	ldr	w19, [x2, #4]
    2f8c:	stp	x23, x24, [sp, #48]
    2f90:	mov	x24, x1
    2f94:	stp	x25, x26, [sp, #64]
    2f98:	mov	w26, #0x0                   	// #0
    2f9c:	ldr	w25, [x3, #4]
    2fa0:	str	x0, [sp, #112]
    2fa4:	cbz	x1, 2fb0 <gcry_mpi_powm+0x38>
    2fa8:	ldr	w26, [x1, #12]
    2fac:	and	w26, w26, #0x1
    2fb0:	ldr	x0, [sp, #112]
    2fb4:	ldr	x23, [x0, #16]
    2fb8:	cbz	w25, 38b4 <gcry_mpi_powm+0x93c>
    2fbc:	cbz	w19, 351c <gcry_mpi_powm+0x5a4>
    2fc0:	ldp	w3, w1, [x20, #8]
    2fc4:	stp	x27, x28, [sp, #80]
    2fc8:	mov	w0, w25
    2fcc:	ands	w28, w1, #0x1
    2fd0:	ldr	w1, [x2, #12]
    2fd4:	ldr	x2, [x2, #16]
    2fd8:	str	w1, [sp, #124]
    2fdc:	csel	w1, w25, wzr, ne  // ne = any
    2fe0:	stp	x21, x22, [sp, #32]
    2fe4:	sbfiz	x22, x25, #3, #32
    2fe8:	str	x2, [sp, #96]
    2fec:	sxtw	x21, w25
    2ff0:	str	x22, [sp, #128]
    2ff4:	str	w28, [sp, #140]
    2ff8:	str	w3, [sp, #180]
    2ffc:	str	w1, [sp, #188]
    3000:	mov	w1, w28
    3004:	bl	28 <_gcry_mpi_alloc_limb_space>
    3008:	str	x0, [sp, #104]
    300c:	ldr	x1, [x20, #16]
    3010:	mov	x0, #0x38                  	// #56
    3014:	add	x2, x1, x22
    3018:	ldur	x3, [x2, #-8]
    301c:	nop
    3020:	lsr	x2, x3, x0
    3024:	mov	w4, w0
    3028:	tst	w2, #0xff
    302c:	b.ne	377c <gcry_mpi_powm+0x804>  // b.any
    3030:	subs	x0, x0, #0x8
    3034:	b.ne	3020 <gcry_mpi_powm+0xa8>  // b.any
    3038:	mov	w4, #0x40                  	// #64
    303c:	adrp	x0, 0 <_gcry_mpi_m_check>
    3040:	ldr	x22, [x0]
    3044:	ldrb	w0, [x22, x3]
    3048:	subs	w0, w4, w0
    304c:	str	w0, [sp, #152]
    3050:	b.ne	364c <gcry_mpi_powm+0x6d4>  // b.any
    3054:	cmp	w25, #0x0
    3058:	mov	x0, #0x0                   	// #0
    305c:	b.le	307c <gcry_mpi_powm+0x104>
    3060:	ldr	x3, [sp, #104]
    3064:	nop
    3068:	ldr	x2, [x1, x0, lsl #3]
    306c:	str	x2, [x3, x0, lsl #3]
    3070:	add	x0, x0, #0x1
    3074:	cmp	w25, w0
    3078:	b.gt	3068 <gcry_mpi_powm+0xf0>
    307c:	ldp	w27, w0, [x24, #4]
    3080:	str	w0, [sp, #196]
    3084:	cmp	w25, w27
    3088:	b.ge	3560 <gcry_mpi_powm+0x5e8>  // b.tcont
    308c:	cmp	w26, #0x0
    3090:	mov	w1, w26
    3094:	csinc	w0, wzr, w27, eq  // eq = none
    3098:	str	w0, [sp, #184]
    309c:	add	w0, w27, #0x1
    30a0:	bl	28 <_gcry_mpi_alloc_limb_space>
    30a4:	mov	x20, x0
    30a8:	cmp	w27, #0x0
    30ac:	b.le	30cc <gcry_mpi_powm+0x154>
    30b0:	ldr	x2, [x24, #16]
    30b4:	mov	x0, #0x0                   	// #0
    30b8:	ldr	x1, [x2, x0, lsl #3]
    30bc:	str	x1, [x20, x0, lsl #3]
    30c0:	add	x0, x0, #0x1
    30c4:	cmp	w27, w0
    30c8:	b.gt	30b8 <gcry_mpi_powm+0x140>
    30cc:	ldr	x4, [sp, #104]
    30d0:	mov	w3, w27
    30d4:	ldr	x0, [sp, #128]
    30d8:	mov	x2, x20
    30dc:	mov	w5, w25
    30e0:	mov	w1, #0x0                   	// #0
    30e4:	add	x0, x20, x0
    30e8:	bl	5170 <_gcry_mpih_divrem>
    30ec:	mov	x0, x21
    30f0:	mov	w27, w25
    30f4:	cmp	w25, #0x0
    30f8:	sub	x2, x20, #0x8
    30fc:	b.gt	3114 <gcry_mpi_powm+0x19c>
    3100:	b	3120 <gcry_mpi_powm+0x1a8>
    3104:	sub	w27, w0, #0x1
    3108:	sub	x0, x0, #0x1
    310c:	cmp	w0, #0x0
    3110:	b.le	378c <gcry_mpi_powm+0x814>
    3114:	ldr	x1, [x2, x0, lsl #3]
    3118:	mov	w27, w0
    311c:	cbz	x1, 3104 <gcry_mpi_powm+0x18c>
    3120:	str	x20, [sp, #168]
    3124:	cmp	x23, x20
    3128:	b.eq	3730 <gcry_mpi_powm+0x7b8>  // b.none
    312c:	ldr	x0, [sp, #96]
    3130:	str	xzr, [sp, #160]
    3134:	str	wzr, [sp, #176]
    3138:	cmp	x23, x0
    313c:	b.eq	358c <gcry_mpi_powm+0x614>  // b.none
    3140:	ldr	x0, [sp, #104]
    3144:	cmp	x23, x0
    3148:	b.eq	35e0 <gcry_mpi_powm+0x668>  // b.none
    314c:	ldr	x0, [sp, #112]
    3150:	lsl	w26, w25, #1
    3154:	ldr	w0, [x0]
    3158:	cmp	w0, w25, lsl #1
    315c:	b.lt	3634 <gcry_mpi_powm+0x6bc>  // b.tstop
    3160:	cmp	w27, #0x0
    3164:	mov	x2, #0x0                   	// #0
    3168:	b.le	3184 <gcry_mpi_powm+0x20c>
    316c:	nop
    3170:	ldr	x0, [x20, x2, lsl #3]
    3174:	str	x0, [x23, x2, lsl #3]
    3178:	add	x2, x2, #0x1
    317c:	cmp	w27, w2
    3180:	b.gt	3170 <gcry_mpi_powm+0x1f8>
    3184:	ldr	w1, [sp, #140]
    3188:	add	w0, w26, #0x2
    318c:	cmp	w1, #0x0
    3190:	csel	w1, w1, w0, eq  // eq = none
    3194:	str	w1, [sp, #140]
    3198:	mov	w1, w28
    319c:	bl	28 <_gcry_mpi_alloc_limb_space>
    31a0:	str	x0, [sp, #144]
    31a4:	mov	x2, #0x28                  	// #40
    31a8:	add	x0, sp, #0xd8
    31ac:	mov	w1, #0x0                   	// #0
    31b0:	bl	0 <grub_memset>
    31b4:	ldr	x0, [sp, #96]
    31b8:	str	wzr, [sp, #192]
    31bc:	ldr	x0, [x0]
    31c0:	tbz	w0, #0, 31d4 <gcry_mpi_powm+0x25c>
    31c4:	ldr	w0, [x24, #8]
    31c8:	cmp	w0, #0x0
    31cc:	cset	w0, ne  // ne = any
    31d0:	str	w0, [sp, #192]
    31d4:	sub	w0, w19, #0x1
    31d8:	ldr	x2, [sp, #96]
    31dc:	mov	w1, w0
    31e0:	mov	w3, w0
    31e4:	mov	x0, #0x38                  	// #56
    31e8:	ldr	x26, [x2, w1, sxtw #3]
    31ec:	nop
    31f0:	lsr	x1, x26, x0
    31f4:	mov	w2, w0
    31f8:	tst	w1, #0xff
    31fc:	b.ne	3810 <gcry_mpi_powm+0x898>  // b.any
    3200:	subs	x0, x0, #0x8
    3204:	b.ne	31f0 <gcry_mpi_powm+0x278>  // b.any
    3208:	mov	x1, x26
    320c:	mov	w0, #0x40                  	// #64
    3210:	ldrb	w1, [x22, x1]
    3214:	mov	w10, #0x3f                  	// #63
    3218:	ldr	w2, [sp, #124]
    321c:	mov	w22, w3
    3220:	sub	w0, w0, w1
    3224:	str	x21, [sp, #200]
    3228:	ldr	x19, [sp, #144]
    322c:	sub	w24, w10, w0
    3230:	and	w2, w2, #0x1
    3234:	lsl	x26, x26, x0
    3238:	mov	w28, w24
    323c:	mov	x21, x19
    3240:	mov	x24, x23
    3244:	mov	x0, #0x0                   	// #0
    3248:	lsl	x26, x26, #1
    324c:	mov	x23, x20
    3250:	mov	x19, x0
    3254:	str	w2, [sp, #124]
    3258:	mov	w2, w27
    325c:	str	wzr, [sp, #136]
    3260:	cbnz	w28, 3278 <gcry_mpi_powm+0x300>
    3264:	subs	w22, w22, #0x1
    3268:	b.mi	33e0 <gcry_mpi_powm+0x468>  // b.first
    326c:	ldr	x0, [sp, #96]
    3270:	mov	w28, #0x40                  	// #64
    3274:	ldr	x26, [x0, w22, sxtw #3]
    3278:	cmp	w2, #0xf
    327c:	lsl	w20, w2, #1
    3280:	b.le	3364 <gcry_mpi_powm+0x3ec>
    3284:	cbz	x19, 33c0 <gcry_mpi_powm+0x448>
    3288:	ldr	w0, [sp, #136]
    328c:	cmp	w0, w20
    3290:	b.lt	3394 <gcry_mpi_powm+0x41c>  // b.tstop
    3294:	mov	x3, x19
    3298:	mov	x1, x24
    329c:	mov	x0, x21
    32a0:	bl	4348 <_gcry_mpih_sqr_n>
    32a4:	cmp	w25, w20
    32a8:	b.lt	333c <gcry_mpi_powm+0x3c4>  // b.tstop
    32ac:	ldr	w1, [sp, #124]
    32b0:	lsr	x0, x26, #63
    32b4:	orr	w0, w1, w0
    32b8:	cbz	w0, 32fc <gcry_mpi_powm+0x384>
    32bc:	cmp	w27, #0xf
    32c0:	b.gt	3374 <gcry_mpi_powm+0x3fc>
    32c4:	mov	w4, w27
    32c8:	mov	x3, x23
    32cc:	mov	w2, w20
    32d0:	mov	x1, x21
    32d4:	mov	x0, x24
    32d8:	bl	4870 <_gcry_mpih_mul>
    32dc:	add	w3, w20, w27
    32e0:	cmp	w25, w3
    32e4:	b.lt	3318 <gcry_mpi_powm+0x3a0>  // b.tstop
    32e8:	tbz	x26, #63, 32fc <gcry_mpi_powm+0x384>
    32ec:	mov	x0, x21
    32f0:	mov	w20, w3
    32f4:	mov	x21, x24
    32f8:	mov	x24, x0
    32fc:	mov	x0, x24
    3300:	lsl	x26, x26, #1
    3304:	mov	x24, x21
    3308:	sub	w28, w28, #0x1
    330c:	mov	x21, x0
    3310:	mov	w2, w20
    3314:	b	3260 <gcry_mpi_powm+0x2e8>
    3318:	ldr	x4, [sp, #104]
    331c:	mov	w5, w25
    3320:	ldr	x0, [sp, #128]
    3324:	mov	x2, x24
    3328:	mov	w1, #0x0                   	// #0
    332c:	add	x0, x24, x0
    3330:	bl	5170 <_gcry_mpih_divrem>
    3334:	mov	w3, w25
    3338:	b	32e8 <gcry_mpi_powm+0x370>
    333c:	ldr	x4, [sp, #104]
    3340:	mov	w3, w20
    3344:	ldr	x0, [sp, #128]
    3348:	mov	w20, w25
    334c:	mov	w5, w25
    3350:	mov	x2, x21
    3354:	add	x0, x21, x0
    3358:	mov	w1, #0x0                   	// #0
    335c:	bl	5170 <_gcry_mpih_divrem>
    3360:	b	32ac <gcry_mpi_powm+0x334>
    3364:	mov	x1, x24
    3368:	mov	x0, x21
    336c:	bl	4220 <_gcry_mpih_sqr_n_basecase>
    3370:	b	32a4 <gcry_mpi_powm+0x32c>
    3374:	add	x5, sp, #0xd8
    3378:	mov	w4, w27
    337c:	mov	x3, x23
    3380:	mov	w2, w20
    3384:	mov	x1, x21
    3388:	mov	x0, x24
    338c:	bl	4a10 <_gcry_mpih_mul_karatsuba_case>
    3390:	b	32dc <gcry_mpi_powm+0x364>
    3394:	mov	x0, x19
    3398:	mov	w1, #0x0                   	// #0
    339c:	str	w2, [sp, #156]
    33a0:	bl	140 <_gcry_mpi_free_limb_space>
    33a4:	mov	w0, w20
    33a8:	mov	w1, #0x0                   	// #0
    33ac:	str	w20, [sp, #136]
    33b0:	bl	28 <_gcry_mpi_alloc_limb_space>
    33b4:	ldr	w2, [sp, #156]
    33b8:	mov	x19, x0
    33bc:	b	3294 <gcry_mpi_powm+0x31c>
    33c0:	mov	w0, w20
    33c4:	mov	w1, #0x0                   	// #0
    33c8:	str	w2, [sp, #156]
    33cc:	bl	28 <_gcry_mpi_alloc_limb_space>
    33d0:	ldr	w2, [sp, #156]
    33d4:	mov	x19, x0
    33d8:	str	w20, [sp, #136]
    33dc:	b	3294 <gcry_mpi_powm+0x31c>
    33e0:	ldr	x0, [sp, #112]
    33e4:	mov	x20, x19
    33e8:	mov	w28, w2
    33ec:	mov	x23, x24
    33f0:	ldr	x21, [sp, #200]
    33f4:	ldr	x19, [x0, #16]
    33f8:	ldr	w0, [sp, #152]
    33fc:	cbnz	w0, 37b0 <gcry_mpi_powm+0x838>
    3400:	cmp	x24, x19
    3404:	b.eq	342c <gcry_mpi_powm+0x4b4>  // b.none
    3408:	cmp	w2, #0x0
    340c:	b.le	342c <gcry_mpi_powm+0x4b4>
    3410:	mov	x0, #0x0                   	// #0
    3414:	nop
    3418:	ldr	x1, [x23, x0, lsl #3]
    341c:	str	x1, [x19, x0, lsl #3]
    3420:	add	x0, x0, #0x1
    3424:	cmp	w28, w0
    3428:	b.gt	3418 <gcry_mpi_powm+0x4a0>
    342c:	cmp	w28, w25
    3430:	b.ge	36f0 <gcry_mpi_powm+0x778>  // b.tcont
    3434:	cmp	w28, #0x0
    3438:	b.le	3464 <gcry_mpi_powm+0x4ec>
    343c:	sxtw	x0, w28
    3440:	sub	x2, x19, #0x8
    3444:	b	3458 <gcry_mpi_powm+0x4e0>
    3448:	sub	w28, w0, #0x1
    344c:	sub	x0, x0, #0x1
    3450:	cmp	w0, #0x0
    3454:	b.le	3464 <gcry_mpi_powm+0x4ec>
    3458:	ldr	x1, [x2, x0, lsl #3]
    345c:	mov	w28, w0
    3460:	cbz	x1, 3448 <gcry_mpi_powm+0x4d0>
    3464:	add	x0, sp, #0xd8
    3468:	bl	47f8 <_gcry_mpih_release_karatsuba_ctx>
    346c:	ldr	w0, [sp, #192]
    3470:	cmp	w28, #0x0
    3474:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    3478:	b.eq	3660 <gcry_mpi_powm+0x6e8>  // b.none
    347c:	ldr	w0, [sp, #152]
    3480:	cbnz	w0, 3718 <gcry_mpi_powm+0x7a0>
    3484:	ldr	x1, [sp, #104]
    3488:	mov	w3, w28
    348c:	mov	x2, x19
    3490:	mov	x0, x19
    3494:	bl	4f30 <_gcry_mpih_sub_n>
    3498:	cmp	w25, w28
    349c:	b.eq	34e8 <gcry_mpi_powm+0x570>  // b.none
    34a0:	ldr	x4, [sp, #104]
    34a4:	sbfiz	x2, x28, #3, #32
    34a8:	add	x3, x19, x2
    34ac:	sub	w1, w25, w28
    34b0:	add	x2, x4, x2
    34b4:	ldr	x4, [x4, w28, sxtw #3]
    34b8:	add	x2, x2, #0x8
    34bc:	subs	x5, x4, x0
    34c0:	str	x5, [x3], #8
    34c4:	cmp	x4, x0
    34c8:	b.cc	34e0 <gcry_mpi_powm+0x568>  // b.lo, b.ul, b.last
    34cc:	b	3844 <gcry_mpi_powm+0x8cc>
    34d0:	ldr	x0, [x2], #8
    34d4:	sub	x4, x0, #0x1
    34d8:	str	x4, [x3], #8
    34dc:	cbnz	x0, 3844 <gcry_mpi_powm+0x8cc>
    34e0:	subs	w1, w1, #0x1
    34e4:	b.ne	34d0 <gcry_mpi_powm+0x558>  // b.any
    34e8:	mov	w28, w25
    34ec:	cmp	w25, #0x0
    34f0:	sub	x2, x19, #0x8
    34f4:	b.gt	350c <gcry_mpi_powm+0x594>
    34f8:	b	3668 <gcry_mpi_powm+0x6f0>
    34fc:	sub	w28, w21, #0x1
    3500:	sub	x21, x21, #0x1
    3504:	cmp	w21, #0x0
    3508:	b.le	3668 <gcry_mpi_powm+0x6f0>
    350c:	ldr	x0, [x2, x21, lsl #3]
    3510:	mov	w28, w21
    3514:	cbz	x0, 34fc <gcry_mpi_powm+0x584>
    3518:	b	3668 <gcry_mpi_powm+0x6f0>
    351c:	cmp	w25, #0x1
    3520:	b.eq	381c <gcry_mpi_powm+0x8a4>  // b.none
    3524:	ldr	x0, [sp, #112]
    3528:	mov	w1, #0x1                   	// #1
    352c:	str	w1, [x0, #4]
    3530:	ldr	w0, [x0]
    3534:	cmp	w0, #0x0
    3538:	b.le	38a0 <gcry_mpi_powm+0x928>
    353c:	mov	x0, #0x1                   	// #1
    3540:	str	x0, [x23]
    3544:	ldr	x0, [sp, #112]
    3548:	ldp	x19, x20, [sp, #16]
    354c:	str	wzr, [x0, #8]
    3550:	ldp	x23, x24, [sp, #48]
    3554:	ldp	x25, x26, [sp, #64]
    3558:	ldp	x29, x30, [sp], #256
    355c:	ret
    3560:	cbz	w27, 3838 <gcry_mpi_powm+0x8c0>
    3564:	ldr	x20, [x24, #16]
    3568:	cmp	x23, x20
    356c:	b.eq	3734 <gcry_mpi_powm+0x7bc>  // b.none
    3570:	ldr	x0, [sp, #96]
    3574:	str	xzr, [sp, #160]
    3578:	str	xzr, [sp, #168]
    357c:	str	wzr, [sp, #176]
    3580:	cmp	x23, x0
    3584:	str	wzr, [sp, #184]
    3588:	b.ne	3140 <gcry_mpi_powm+0x1c8>  // b.any
    358c:	ldr	w0, [sp, #124]
    3590:	ands	w1, w0, #0x1
    3594:	mov	w0, w19
    3598:	csel	w2, w19, wzr, ne  // ne = any
    359c:	str	w2, [sp, #176]
    35a0:	bl	28 <_gcry_mpi_alloc_limb_space>
    35a4:	str	x0, [sp, #96]
    35a8:	mov	x2, x0
    35ac:	cmp	w19, #0x0
    35b0:	b.le	35cc <gcry_mpi_powm+0x654>
    35b4:	mov	x0, #0x0                   	// #0
    35b8:	ldr	x1, [x23, x0, lsl #3]
    35bc:	str	x1, [x2, x0, lsl #3]
    35c0:	add	x0, x0, #0x1
    35c4:	cmp	w19, w0
    35c8:	b.gt	35b8 <gcry_mpi_powm+0x640>
    35cc:	ldr	x0, [sp, #96]
    35d0:	str	x0, [sp, #160]
    35d4:	ldr	x0, [sp, #104]
    35d8:	cmp	x23, x0
    35dc:	b.ne	314c <gcry_mpi_powm+0x1d4>  // b.any
    35e0:	cbnz	x23, 38c8 <gcry_mpi_powm+0x950>
    35e4:	ldr	w1, [sp, #140]
    35e8:	mov	w0, w25
    35ec:	bl	28 <_gcry_mpi_alloc_limb_space>
    35f0:	str	x0, [sp, #104]
    35f4:	mov	x2, x0
    35f8:	cmp	w25, #0x0
    35fc:	b.le	314c <gcry_mpi_powm+0x1d4>
    3600:	mov	x0, #0x0                   	// #0
    3604:	nop
    3608:	lsl	x1, x0, #3
    360c:	ldr	x1, [x1]
    3610:	str	x1, [x2, x0, lsl #3]
    3614:	add	x0, x0, #0x1
    3618:	cmp	w25, w0
    361c:	b.gt	3608 <gcry_mpi_powm+0x690>
    3620:	ldr	x0, [sp, #112]
    3624:	lsl	w26, w25, #1
    3628:	ldr	w0, [x0]
    362c:	cmp	w0, w25, lsl #1
    3630:	b.ge	3160 <gcry_mpi_powm+0x1e8>  // b.tcont
    3634:	ldr	x23, [sp, #112]
    3638:	mov	w1, w26
    363c:	mov	x0, x23
    3640:	bl	1b0 <_gcry_mpi_resize>
    3644:	ldr	x23, [x23, #16]
    3648:	b	3160 <gcry_mpi_powm+0x1e8>
    364c:	ldr	w3, [sp, #152]
    3650:	mov	w2, w25
    3654:	ldr	x0, [sp, #104]
    3658:	bl	3c70 <_gcry_mpih_lshift>
    365c:	b	307c <gcry_mpi_powm+0x104>
    3660:	ldr	w0, [sp, #196]
    3664:	str	w0, [sp, #180]
    3668:	ldr	x0, [sp, #112]
    366c:	ldr	x0, [x0, #16]
    3670:	cmp	x0, x19
    3674:	b.ne	3908 <gcry_mpi_powm+0x990>  // b.any
    3678:	ldr	x0, [sp, #112]
    367c:	ldr	w1, [sp, #180]
    3680:	stp	w28, w1, [x0, #4]
    3684:	ldr	x0, [sp, #104]
    3688:	cbz	x0, 3694 <gcry_mpi_powm+0x71c>
    368c:	ldr	w1, [sp, #188]
    3690:	bl	140 <_gcry_mpi_free_limb_space>
    3694:	ldr	x0, [sp, #168]
    3698:	cbz	x0, 36a4 <gcry_mpi_powm+0x72c>
    369c:	ldr	w1, [sp, #184]
    36a0:	bl	140 <_gcry_mpi_free_limb_space>
    36a4:	ldr	x0, [sp, #160]
    36a8:	cbz	x0, 36b4 <gcry_mpi_powm+0x73c>
    36ac:	ldr	w1, [sp, #176]
    36b0:	bl	140 <_gcry_mpi_free_limb_space>
    36b4:	ldr	x0, [sp, #144]
    36b8:	cbz	x0, 36c4 <gcry_mpi_powm+0x74c>
    36bc:	ldr	w1, [sp, #140]
    36c0:	bl	140 <_gcry_mpi_free_limb_space>
    36c4:	mov	x0, x20
    36c8:	cbz	x20, 37f4 <gcry_mpi_powm+0x87c>
    36cc:	mov	w1, #0x0                   	// #0
    36d0:	bl	140 <_gcry_mpi_free_limb_space>
    36d4:	ldp	x19, x20, [sp, #16]
    36d8:	ldp	x21, x22, [sp, #32]
    36dc:	ldp	x23, x24, [sp, #48]
    36e0:	ldp	x25, x26, [sp, #64]
    36e4:	ldp	x27, x28, [sp, #80]
    36e8:	ldp	x29, x30, [sp], #256
    36ec:	ret
    36f0:	ldr	x4, [sp, #104]
    36f4:	mov	w3, w28
    36f8:	ldr	x0, [sp, #128]
    36fc:	mov	w5, w25
    3700:	mov	x2, x19
    3704:	mov	w28, w25
    3708:	add	x0, x19, x0
    370c:	mov	w1, #0x0                   	// #0
    3710:	bl	5170 <_gcry_mpih_divrem>
    3714:	b	3434 <gcry_mpi_powm+0x4bc>
    3718:	mov	x3, x0
    371c:	mov	w2, w25
    3720:	ldr	x0, [sp, #104]
    3724:	mov	x1, x0
    3728:	bl	68e0 <_gcry_mpih_rshift>
    372c:	b	3484 <gcry_mpi_powm+0x50c>
    3730:	cbnz	x23, 38e8 <gcry_mpi_powm+0x970>
    3734:	cmp	w26, #0x0
    3738:	mov	w1, w26
    373c:	csel	w0, w27, wzr, ne  // ne = any
    3740:	str	w0, [sp, #184]
    3744:	mov	w0, w27
    3748:	bl	28 <_gcry_mpi_alloc_limb_space>
    374c:	mov	x20, x0
    3750:	cmp	w27, #0x0
    3754:	b.le	3774 <gcry_mpi_powm+0x7fc>
    3758:	mov	x0, #0x0                   	// #0
    375c:	nop
    3760:	ldr	x1, [x23, x0, lsl #3]
    3764:	str	x1, [x20, x0, lsl #3]
    3768:	add	x0, x0, #0x1
    376c:	cmp	w27, w0
    3770:	b.gt	3760 <gcry_mpi_powm+0x7e8>
    3774:	str	x20, [sp, #168]
    3778:	b	312c <gcry_mpi_powm+0x1b4>
    377c:	mov	w0, #0x40                  	// #64
    3780:	mov	x3, x2
    3784:	sub	w4, w0, w4
    3788:	b	303c <gcry_mpi_powm+0xc4>
    378c:	cbnz	w27, 3120 <gcry_mpi_powm+0x1a8>
    3790:	ldr	x0, [sp, #112]
    3794:	str	wzr, [sp, #140]
    3798:	str	xzr, [sp, #144]
    379c:	stp	xzr, x20, [sp, #160]
    37a0:	mov	x20, #0x0                   	// #0
    37a4:	stur	xzr, [x0, #4]
    37a8:	str	wzr, [sp, #176]
    37ac:	b	3684 <gcry_mpi_powm+0x70c>
    37b0:	ldr	w3, [sp, #152]
    37b4:	mov	x1, x24
    37b8:	mov	x0, x19
    37bc:	bl	3c70 <_gcry_mpih_lshift>
    37c0:	ldr	x1, [sp, #112]
    37c4:	ldr	x19, [x1, #16]
    37c8:	cbz	x0, 37d4 <gcry_mpi_powm+0x85c>
    37cc:	str	x0, [x19, w28, sxtw #3]
    37d0:	add	w28, w28, #0x1
    37d4:	cmp	w28, w25
    37d8:	b.ge	3878 <gcry_mpi_powm+0x900>  // b.tcont
    37dc:	ldr	w3, [sp, #152]
    37e0:	mov	w2, w28
    37e4:	mov	x1, x19
    37e8:	mov	x0, x19
    37ec:	bl	68e0 <_gcry_mpih_rshift>
    37f0:	b	3434 <gcry_mpi_powm+0x4bc>
    37f4:	ldp	x19, x20, [sp, #16]
    37f8:	ldp	x21, x22, [sp, #32]
    37fc:	ldp	x23, x24, [sp, #48]
    3800:	ldp	x25, x26, [sp, #64]
    3804:	ldp	x27, x28, [sp, #80]
    3808:	ldp	x29, x30, [sp], #256
    380c:	ret
    3810:	mov	w0, #0x40                  	// #64
    3814:	sub	w0, w0, w2
    3818:	b	3210 <gcry_mpi_powm+0x298>
    381c:	ldr	x0, [x20, #16]
    3820:	ldr	x0, [x0]
    3824:	cmp	x0, #0x1
    3828:	b.ne	3524 <gcry_mpi_powm+0x5ac>  // b.any
    382c:	ldr	x0, [sp, #112]
    3830:	str	wzr, [x0, #4]
    3834:	b	3544 <gcry_mpi_powm+0x5cc>
    3838:	mov	x20, #0x0                   	// #0
    383c:	str	wzr, [sp, #184]
    3840:	b	3790 <gcry_mpi_powm+0x818>
    3844:	cmp	x3, x2
    3848:	b.eq	34e8 <gcry_mpi_powm+0x570>  // b.none
    384c:	sub	w1, w1, #0x1
    3850:	cmp	w1, #0x0
    3854:	b.le	34e8 <gcry_mpi_powm+0x570>
    3858:	mov	x0, #0x0                   	// #0
    385c:	nop
    3860:	ldr	x4, [x2, x0, lsl #3]
    3864:	str	x4, [x3, x0, lsl #3]
    3868:	add	x0, x0, #0x1
    386c:	cmp	w1, w0
    3870:	b.gt	3860 <gcry_mpi_powm+0x8e8>
    3874:	b	34e8 <gcry_mpi_powm+0x570>
    3878:	ldr	x4, [sp, #104]
    387c:	mov	w3, w28
    3880:	ldr	x0, [sp, #128]
    3884:	mov	w5, w25
    3888:	mov	x2, x19
    388c:	mov	w28, w25
    3890:	add	x0, x19, x0
    3894:	mov	w1, #0x0                   	// #0
    3898:	bl	5170 <_gcry_mpih_divrem>
    389c:	b	37dc <gcry_mpi_powm+0x864>
    38a0:	ldr	x19, [sp, #112]
    38a4:	mov	x0, x19
    38a8:	bl	1b0 <_gcry_mpi_resize>
    38ac:	ldr	x23, [x19, #16]
    38b0:	b	353c <gcry_mpi_powm+0x5c4>
    38b4:	adrp	x0, 0 <_gcry_mpi_m_check>
    38b8:	stp	x21, x22, [sp, #32]
    38bc:	ldr	x0, [x0]
    38c0:	stp	x27, x28, [sp, #80]
    38c4:	bl	0 <grub_fatal>
    38c8:	adrp	x3, 0 <_gcry_mpi_m_check>
    38cc:	adrp	x1, 0 <_gcry_mpi_m_check>
    38d0:	adrp	x0, 0 <_gcry_mpi_m_check>
    38d4:	mov	w2, #0xa0                  	// #160
    38d8:	ldr	x3, [x3]
    38dc:	ldr	x1, [x1]
    38e0:	ldr	x0, [x0]
    38e4:	bl	0 <_gcry_assert_failed>
    38e8:	adrp	x3, 0 <_gcry_mpi_m_check>
    38ec:	adrp	x1, 0 <_gcry_mpi_m_check>
    38f0:	adrp	x0, 0 <_gcry_mpi_m_check>
    38f4:	mov	w2, #0x91                  	// #145
    38f8:	ldr	x3, [x3]
    38fc:	ldr	x1, [x1]
    3900:	ldr	x0, [x0]
    3904:	bl	0 <_gcry_assert_failed>
    3908:	adrp	x3, 0 <_gcry_mpi_m_check>
    390c:	adrp	x1, 0 <_gcry_mpi_m_check>
    3910:	adrp	x0, 0 <_gcry_mpi_m_check>
    3914:	mov	w2, #0x145                 	// #325
    3918:	ldr	x3, [x3]
    391c:	ldr	x1, [x1]
    3920:	ldr	x0, [x0]
    3924:	bl	0 <_gcry_assert_failed>
	...

0000000000003960 <_gcry_mpi_mulpowm>:
    3960:	stp	x29, x30, [sp, #-128]!
    3964:	mov	x29, sp
    3968:	stp	x19, x20, [sp, #16]
    396c:	mov	x20, x0
    3970:	ldr	x0, [x1]
    3974:	stp	x21, x22, [sp, #32]
    3978:	stp	x23, x24, [sp, #48]
    397c:	stp	x25, x26, [sp, #64]
    3980:	stp	x27, x28, [sp, #80]
    3984:	str	x2, [sp, #96]
    3988:	str	x1, [sp, #120]
    398c:	cbz	x0, 3b98 <_gcry_mpi_mulpowm+0x238>
    3990:	mov	x23, x3
    3994:	sub	x2, x1, #0x8
    3998:	mov	x0, #0x1                   	// #1
    399c:	nop
    39a0:	sub	w24, w0, #0x1
    39a4:	mov	w27, w0
    39a8:	add	x0, x0, #0x1
    39ac:	ldr	x1, [x2, x0, lsl #3]
    39b0:	cbnz	x1, 39a0 <_gcry_mpi_mulpowm+0x40>
    39b4:	ldr	x0, [sp, #96]
    39b8:	mov	x22, #0x0                   	// #0
    39bc:	mov	w21, #0x0                   	// #0
    39c0:	ldr	x0, [x0]
    39c4:	cbz	x0, 3bb8 <_gcry_mpi_mulpowm+0x258>
    39c8:	bl	920 <gcry_mpi_get_nbits>
    39cc:	cmp	w21, w0
    39d0:	csel	w21, w21, w0, ge  // ge = tcont
    39d4:	mov	w19, w22
    39d8:	ldr	x0, [sp, #96]
    39dc:	add	x22, x22, #0x1
    39e0:	ldr	x0, [x0, x22, lsl #3]
    39e4:	cbnz	x0, 39c8 <_gcry_mpi_mulpowm+0x68>
    39e8:	cmp	w19, w24
    39ec:	b.ne	3bb8 <_gcry_mpi_mulpowm+0x258>  // b.any
    39f0:	cbz	w21, 3bf8 <_gcry_mpi_mulpowm+0x298>
    39f4:	cmp	w27, #0x9
    39f8:	b.gt	3c18 <_gcry_mpi_mulpowm+0x2b8>
    39fc:	mov	w19, #0x1                   	// #1
    3a00:	mov	x1, #0x8                   	// #8
    3a04:	lsl	w0, w19, w27
    3a08:	str	w0, [sp, #108]
    3a0c:	sxtw	x0, w0
    3a10:	bl	6b68 <gcry_xcalloc>
    3a14:	ldr	w1, [x23, #4]
    3a18:	mov	x22, x0
    3a1c:	sxtw	x24, w24
    3a20:	add	w0, w1, w19
    3a24:	bl	70 <_gcry_mpi_alloc>
    3a28:	mov	x26, x0
    3a2c:	mov	x1, #0x1                   	// #1
    3a30:	mov	x0, x20
    3a34:	bl	610 <gcry_mpi_set_ui>
    3a38:	sub	w25, w21, w19
    3a3c:	mov	x27, x24
    3a40:	mov	x3, x23
    3a44:	mov	x2, x20
    3a48:	mov	x1, x20
    3a4c:	mov	x0, x26
    3a50:	mov	w28, #0x0                   	// #0
    3a54:	bl	1c38 <gcry_mpi_mulm>
    3a58:	ldr	x0, [sp, #96]
    3a5c:	lsl	w28, w28, #1
    3a60:	mov	w1, w25
    3a64:	ldr	x0, [x0, x27, lsl #3]
    3a68:	sub	x27, x27, #0x1
    3a6c:	bl	9c8 <gcry_mpi_test_bit>
    3a70:	cmp	w0, #0x0
    3a74:	orr	w0, w28, #0x1
    3a78:	csel	w28, w0, w28, ne  // ne = any
    3a7c:	cmn	w27, #0x1
    3a80:	b.ne	3a58 <_gcry_mpi_mulpowm+0xf8>  // b.any
    3a84:	ldr	w0, [sp, #108]
    3a88:	cmp	w28, w0
    3a8c:	b.cs	3bd8 <_gcry_mpi_mulpowm+0x278>  // b.hs, b.nlast
    3a90:	sxtw	x27, w28
    3a94:	add	x6, x22, w28, sxtw #3
    3a98:	ldr	x1, [x22, x27, lsl #3]
    3a9c:	cbz	x1, 3b08 <_gcry_mpi_mulpowm+0x1a8>
    3aa0:	mov	x2, x1
    3aa4:	add	w19, w19, #0x1
    3aa8:	mov	x3, x23
    3aac:	mov	x1, x26
    3ab0:	mov	x0, x20
    3ab4:	bl	1c38 <gcry_mpi_mulm>
    3ab8:	cmp	w21, w19
    3abc:	b.ge	3a38 <_gcry_mpi_mulpowm+0xd8>  // b.tcont
    3ac0:	mov	x0, x26
    3ac4:	mov	x19, #0x0                   	// #0
    3ac8:	bl	290 <_gcry_mpi_free>
    3acc:	nop
    3ad0:	ldr	x0, [x22, x19, lsl #3]
    3ad4:	add	x19, x19, #0x1
    3ad8:	bl	290 <_gcry_mpi_free>
    3adc:	ldr	w0, [sp, #108]
    3ae0:	cmp	w0, w19
    3ae4:	b.gt	3ad0 <_gcry_mpi_mulpowm+0x170>
    3ae8:	mov	x0, x22
    3aec:	ldp	x19, x20, [sp, #16]
    3af0:	ldp	x21, x22, [sp, #32]
    3af4:	ldp	x23, x24, [sp, #48]
    3af8:	ldp	x25, x26, [sp, #64]
    3afc:	ldp	x27, x28, [sp, #80]
    3b00:	ldp	x29, x30, [sp], #128
    3b04:	b	6b58 <gcry_free>
    3b08:	cbnz	w28, 3b20 <_gcry_mpi_mulpowm+0x1c0>
    3b0c:	mov	x0, #0x1                   	// #1
    3b10:	bl	6f8 <_gcry_mpi_alloc_set_ui>
    3b14:	str	x0, [x22]
    3b18:	ldr	x1, [x22, x27, lsl #3]
    3b1c:	b	3aa0 <_gcry_mpi_mulpowm+0x140>
    3b20:	mov	x25, #0x0                   	// #0
    3b24:	b	3b4c <_gcry_mpi_mulpowm+0x1ec>
    3b28:	ldr	x2, [x0, x25, lsl #3]
    3b2c:	mov	x3, x23
    3b30:	mov	x0, x1
    3b34:	bl	1c38 <gcry_mpi_mulm>
    3b38:	ldr	x6, [sp, #112]
    3b3c:	ldr	x1, [x6]
    3b40:	cmp	x24, x25
    3b44:	add	x25, x25, #0x1
    3b48:	b.eq	3b80 <_gcry_mpi_mulpowm+0x220>  // b.none
    3b4c:	asr	w0, w28, w25
    3b50:	tbz	w0, #0, 3b40 <_gcry_mpi_mulpowm+0x1e0>
    3b54:	str	x6, [sp, #112]
    3b58:	ldr	x0, [sp, #120]
    3b5c:	cbnz	x1, 3b28 <_gcry_mpi_mulpowm+0x1c8>
    3b60:	ldr	x0, [x0, x25, lsl #3]
    3b64:	bl	3a0 <_gcry_mpi_copy>
    3b68:	mov	x1, x0
    3b6c:	ldr	x6, [sp, #112]
    3b70:	cmp	x24, x25
    3b74:	add	x25, x25, #0x1
    3b78:	str	x0, [x6]
    3b7c:	b.ne	3b4c <_gcry_mpi_mulpowm+0x1ec>  // b.any
    3b80:	cbnz	x1, 3aa0 <_gcry_mpi_mulpowm+0x140>
    3b84:	mov	w0, #0x0                   	// #0
    3b88:	bl	70 <_gcry_mpi_alloc>
    3b8c:	mov	x1, x0
    3b90:	str	x0, [x22, x27, lsl #3]
    3b94:	b	3aa0 <_gcry_mpi_mulpowm+0x140>
    3b98:	adrp	x3, 0 <_gcry_mpi_m_check>
    3b9c:	adrp	x1, 0 <_gcry_mpi_m_check>
    3ba0:	adrp	x0, 0 <_gcry_mpi_m_check>
    3ba4:	mov	w2, #0x52                  	// #82
    3ba8:	ldr	x3, [x3]
    3bac:	ldr	x1, [x1]
    3bb0:	ldr	x0, [x0]
    3bb4:	bl	0 <_gcry_assert_failed>
    3bb8:	adrp	x3, 0 <_gcry_mpi_m_check>
    3bbc:	adrp	x1, 0 <_gcry_mpi_m_check>
    3bc0:	adrp	x0, 0 <_gcry_mpi_m_check>
    3bc4:	mov	w2, #0x5a                  	// #90
    3bc8:	ldr	x3, [x3]
    3bcc:	ldr	x1, [x1]
    3bd0:	ldr	x0, [x0]
    3bd4:	bl	0 <_gcry_assert_failed>
    3bd8:	adrp	x3, 0 <_gcry_mpi_m_check>
    3bdc:	adrp	x1, 0 <_gcry_mpi_m_check>
    3be0:	adrp	x0, 0 <_gcry_mpi_m_check>
    3be4:	mov	w2, #0x69                  	// #105
    3be8:	ldr	x3, [x3]
    3bec:	ldr	x1, [x1]
    3bf0:	ldr	x0, [x0]
    3bf4:	bl	0 <_gcry_assert_failed>
    3bf8:	adrp	x3, 0 <_gcry_mpi_m_check>
    3bfc:	adrp	x1, 0 <_gcry_mpi_m_check>
    3c00:	adrp	x0, 0 <_gcry_mpi_m_check>
    3c04:	mov	w2, #0x5b                  	// #91
    3c08:	ldr	x3, [x3]
    3c0c:	ldr	x1, [x1]
    3c10:	ldr	x0, [x0]
    3c14:	bl	0 <_gcry_assert_failed>
    3c18:	adrp	x3, 0 <_gcry_mpi_m_check>
    3c1c:	adrp	x1, 0 <_gcry_mpi_m_check>
    3c20:	adrp	x0, 0 <_gcry_mpi_m_check>
    3c24:	mov	w2, #0x5c                  	// #92
    3c28:	ldr	x3, [x3]
    3c2c:	ldr	x1, [x1]
    3c30:	ldr	x0, [x0]
    3c34:	bl	0 <_gcry_assert_failed>
	...

0000000000003c70 <_gcry_mpih_lshift>:
    3c70:	sub	w4, w2, #0x1
    3c74:	mov	w8, #0x40                  	// #64
    3c78:	sub	w8, w8, w3
    3c7c:	add	x7, x0, #0x8
    3c80:	subs	w2, w2, #0x2
    3c84:	ldr	x5, [x1, w4, sxtw #3]
    3c88:	lsr	x0, x5, x8
    3c8c:	b.mi	3cbc <_gcry_mpih_lshift+0x4c>  // b.first
    3c90:	sxtw	x2, w2
    3c94:	nop
    3c98:	mov	x4, x5
    3c9c:	ldr	x5, [x1, x2, lsl #3]
    3ca0:	lsl	x4, x4, x3
    3ca4:	lsr	x6, x5, x8
    3ca8:	orr	x4, x4, x6
    3cac:	str	x4, [x7, x2, lsl #3]
    3cb0:	sub	x2, x2, #0x1
    3cb4:	tbz	w2, #31, 3c98 <_gcry_mpih_lshift+0x28>
    3cb8:	mov	w2, #0xffffffff            	// #-1
    3cbc:	lsl	x5, x5, x3
    3cc0:	str	x5, [x7, w2, sxtw #3]
    3cc4:	ret

0000000000003cc8 <mul_n_basecase>:
    3cc8:	stp	x29, x30, [sp, #-80]!
    3ccc:	mov	x29, sp
    3cd0:	stp	x19, x20, [sp, #16]
    3cd4:	mov	w20, w3
    3cd8:	ldr	x3, [x2]
    3cdc:	stp	x21, x22, [sp, #32]
    3ce0:	mov	x21, x0
    3ce4:	stp	x23, x24, [sp, #48]
    3ce8:	cmp	x3, #0x1
    3cec:	mov	x24, x2
    3cf0:	str	x25, [sp, #64]
    3cf4:	mov	x23, x1
    3cf8:	b.hi	3dc4 <mul_n_basecase+0xfc>  // b.pmore
    3cfc:	b.eq	3dd4 <mul_n_basecase+0x10c>  // b.none
    3d00:	cmp	w20, #0x0
    3d04:	mov	x0, #0x0                   	// #0
    3d08:	b.le	3d20 <mul_n_basecase+0x58>
    3d0c:	nop
    3d10:	str	xzr, [x21, x0, lsl #3]
    3d14:	add	x0, x0, #0x1
    3d18:	cmp	w20, w0
    3d1c:	b.gt	3d10 <mul_n_basecase+0x48>
    3d20:	mov	x4, #0x0                   	// #0
    3d24:	str	x4, [x21, w20, sxtw #3]
    3d28:	cmp	w20, #0x1
    3d2c:	add	x25, x21, w20, sxtw #3
    3d30:	b.le	3d90 <mul_n_basecase+0xc8>
    3d34:	sub	w22, w20, #0x2
    3d38:	mov	x19, #0x8                   	// #8
    3d3c:	add	x22, x22, #0x2
    3d40:	lsl	x22, x22, #3
    3d44:	b	3d5c <mul_n_basecase+0x94>
    3d48:	b.eq	3dac <mul_n_basecase+0xe4>  // b.none
    3d4c:	str	x4, [x25, x19]
    3d50:	add	x19, x19, #0x8
    3d54:	cmp	x22, x19
    3d58:	b.eq	3d90 <mul_n_basecase+0xc8>  // b.none
    3d5c:	ldr	x3, [x24, x19]
    3d60:	mov	w2, w20
    3d64:	mov	x1, x23
    3d68:	add	x0, x21, x19
    3d6c:	cmp	x3, #0x1
    3d70:	mov	x4, #0x0                   	// #0
    3d74:	b.ls	3d48 <mul_n_basecase+0x80>  // b.plast
    3d78:	bl	4dd0 <_gcry_mpih_addmul_1>
    3d7c:	mov	x4, x0
    3d80:	str	x4, [x25, x19]
    3d84:	add	x19, x19, #0x8
    3d88:	cmp	x22, x19
    3d8c:	b.ne	3d5c <mul_n_basecase+0x94>  // b.any
    3d90:	mov	x0, x4
    3d94:	ldp	x19, x20, [sp, #16]
    3d98:	ldp	x21, x22, [sp, #32]
    3d9c:	ldp	x23, x24, [sp, #48]
    3da0:	ldr	x25, [sp, #64]
    3da4:	ldp	x29, x30, [sp], #80
    3da8:	ret
    3dac:	mov	w3, w20
    3db0:	mov	x2, x23
    3db4:	mov	x1, x0
    3db8:	bl	4ee8 <_gcry_mpih_add_n>
    3dbc:	mov	x4, x0
    3dc0:	b	3d4c <mul_n_basecase+0x84>
    3dc4:	mov	w2, w20
    3dc8:	bl	4d50 <_gcry_mpih_mul_1>
    3dcc:	mov	x4, x0
    3dd0:	b	3d24 <mul_n_basecase+0x5c>
    3dd4:	cmp	w20, #0x0
    3dd8:	b.le	3d20 <mul_n_basecase+0x58>
    3ddc:	mov	x0, #0x0                   	// #0
    3de0:	ldr	x1, [x23, x0, lsl #3]
    3de4:	str	x1, [x21, x0, lsl #3]
    3de8:	add	x0, x0, #0x1
    3dec:	cmp	w20, w0
    3df0:	b.gt	3de0 <mul_n_basecase+0x118>
    3df4:	b	3d20 <mul_n_basecase+0x58>

0000000000003df8 <mul_n>:
    3df8:	stp	x29, x30, [sp, #-160]!
    3dfc:	mov	x29, sp
    3e00:	stp	x19, x20, [sp, #16]
    3e04:	mov	w20, w3
    3e08:	and	w3, w3, #0x1
    3e0c:	stp	x21, x22, [sp, #32]
    3e10:	stp	x23, x24, [sp, #48]
    3e14:	mov	x24, x2
    3e18:	stp	x25, x26, [sp, #64]
    3e1c:	mov	x26, x1
    3e20:	stp	x27, x28, [sp, #80]
    3e24:	mov	x28, x0
    3e28:	str	w3, [sp, #104]
    3e2c:	tbz	w20, #0, 3ea4 <mul_n+0xac>
    3e30:	sub	w19, w20, #0x1
    3e34:	mov	w3, w19
    3e38:	cmp	w19, #0xf
    3e3c:	b.le	410c <mul_n+0x314>
    3e40:	bl	3df8 <mul_n>
    3e44:	sxtw	x21, w19
    3e48:	add	x22, x28, w19, sxtw #3
    3e4c:	mov	w2, w19
    3e50:	mov	x1, x26
    3e54:	mov	x0, x22
    3e58:	ldr	x3, [x24, x21, lsl #3]
    3e5c:	bl	4dd0 <_gcry_mpih_addmul_1>
    3e60:	mov	x4, x0
    3e64:	lsl	w3, w19, #1
    3e68:	mov	w2, w20
    3e6c:	add	w20, w20, w19
    3e70:	mov	x0, x22
    3e74:	mov	x1, x24
    3e78:	str	x4, [x28, w3, sxtw #3]
    3e7c:	ldr	x3, [x26, x21, lsl #3]
    3e80:	bl	4dd0 <_gcry_mpih_addmul_1>
    3e84:	str	x0, [x28, w20, sxtw #3]
    3e88:	ldp	x19, x20, [sp, #16]
    3e8c:	ldp	x21, x22, [sp, #32]
    3e90:	ldp	x23, x24, [sp, #48]
    3e94:	ldp	x25, x26, [sp, #64]
    3e98:	ldp	x27, x28, [sp, #80]
    3e9c:	ldp	x29, x30, [sp], #160
    3ea0:	ret
    3ea4:	asr	w27, w20, #1
    3ea8:	sbfiz	x2, x20, #3, #32
    3eac:	sub	w19, w27, #0x1
    3eb0:	str	w19, [sp, #112]
    3eb4:	sbfiz	x0, x27, #3, #32
    3eb8:	sxtw	x1, w27
    3ebc:	add	x23, x24, x0
    3ec0:	add	x25, x28, x0
    3ec4:	stp	x1, x0, [sp, #128]
    3ec8:	add	x1, x26, x0
    3ecc:	sxtw	x0, w20
    3ed0:	str	x0, [sp, #120]
    3ed4:	add	x21, x28, x2
    3ed8:	str	x2, [sp, #144]
    3edc:	mov	x22, x4
    3ee0:	str	x1, [sp, #152]
    3ee4:	mov	w3, w27
    3ee8:	cmp	w27, #0xf
    3eec:	mov	x2, x23
    3ef0:	mov	x0, x21
    3ef4:	b.le	40e4 <mul_n+0x2ec>
    3ef8:	bl	3df8 <mul_n>
    3efc:	ldr	x1, [sp, #152]
    3f00:	ldrsw	x19, [sp, #112]
    3f04:	mov	x5, x19
    3f08:	b	3f10 <mul_n+0x118>
    3f0c:	tbnz	w5, #31, 3f28 <mul_n+0x130>
    3f10:	ldr	x2, [x1, x5, lsl #3]
    3f14:	ldr	x0, [x26, x5, lsl #3]
    3f18:	sub	x5, x5, #0x1
    3f1c:	cmp	x2, x0
    3f20:	b.eq	3f0c <mul_n+0x114>  // b.none
    3f24:	b.ls	41f0 <mul_n+0x3f8>  // b.plast
    3f28:	mov	w3, w27
    3f2c:	mov	x2, x26
    3f30:	mov	x0, x28
    3f34:	bl	4f30 <_gcry_mpih_sub_n>
    3f38:	ldr	w0, [sp, #112]
    3f3c:	tbnz	w0, #31, 4210 <mul_n+0x418>
    3f40:	mov	x5, x19
    3f44:	b	3f4c <mul_n+0x154>
    3f48:	tbnz	w5, #31, 3f64 <mul_n+0x16c>
    3f4c:	ldr	x1, [x23, x5, lsl #3]
    3f50:	ldr	x0, [x24, x5, lsl #3]
    3f54:	sub	x5, x5, #0x1
    3f58:	cmp	x1, x0
    3f5c:	b.eq	3f48 <mul_n+0x150>  // b.none
    3f60:	b.ls	41d8 <mul_n+0x3e0>  // b.plast
    3f64:	ldr	w0, [sp, #104]
    3f68:	eor	w0, w0, #0x1
    3f6c:	str	w0, [sp, #104]
    3f70:	mov	x1, x23
    3f74:	mov	w3, w27
    3f78:	mov	x2, x24
    3f7c:	mov	x0, x25
    3f80:	bl	4f30 <_gcry_mpih_sub_n>
    3f84:	cmp	w27, #0xf
    3f88:	b.gt	41b8 <mul_n+0x3c0>
    3f8c:	mov	w3, w27
    3f90:	mov	x2, x25
    3f94:	mov	x1, x28
    3f98:	mov	x0, x22
    3f9c:	bl	3cc8 <mul_n_basecase>
    3fa0:	cmp	w27, #0x0
    3fa4:	b.le	3fc4 <mul_n+0x1cc>
    3fa8:	mov	x3, #0x0                   	// #0
    3fac:	nop
    3fb0:	ldr	x0, [x21, x3, lsl #3]
    3fb4:	str	x0, [x25, x3, lsl #3]
    3fb8:	add	x3, x3, #0x1
    3fbc:	cmp	w27, w3
    3fc0:	b.gt	3fb0 <mul_n+0x1b8>
    3fc4:	ldp	x0, x1, [sp, #120]
    3fc8:	mov	w3, w27
    3fcc:	add	x23, x0, x1
    3fd0:	mov	x1, x21
    3fd4:	mov	x0, x21
    3fd8:	add	x19, x28, x23, lsl #3
    3fdc:	mov	x2, x19
    3fe0:	bl	4ee8 <_gcry_mpih_add_n>
    3fe4:	mov	x4, x0
    3fe8:	ldr	w0, [sp, #104]
    3fec:	cbz	w0, 4194 <mul_n+0x39c>
    3ff0:	mov	w3, w20
    3ff4:	mov	x2, x22
    3ff8:	mov	x1, x25
    3ffc:	mov	x0, x25
    4000:	str	x4, [sp, #104]
    4004:	bl	4f30 <_gcry_mpih_sub_n>
    4008:	ldr	x4, [sp, #104]
    400c:	sub	x5, x4, x0
    4010:	str	x5, [sp, #104]
    4014:	cmp	w27, #0xf
    4018:	b.gt	4114 <mul_n+0x31c>
    401c:	mov	x2, x24
    4020:	mov	x1, x26
    4024:	mov	w3, w27
    4028:	mov	x0, x22
    402c:	bl	3cc8 <mul_n_basecase>
    4030:	mov	w3, w20
    4034:	mov	x2, x22
    4038:	mov	x1, x25
    403c:	mov	x0, x25
    4040:	bl	4ee8 <_gcry_mpih_add_n>
    4044:	ldr	x5, [sp, #104]
    4048:	adds	x24, x5, x0
    404c:	b.eq	4060 <mul_n+0x268>  // b.none
    4050:	ldr	x0, [x28, x23, lsl #3]
    4054:	adds	x24, x24, x0
    4058:	str	x24, [x28, x23, lsl #3]
    405c:	b.cs	4160 <mul_n+0x368>  // b.hs, b.nlast
    4060:	cmp	w27, #0x0
    4064:	b.le	4084 <mul_n+0x28c>
    4068:	mov	x1, #0x0                   	// #0
    406c:	nop
    4070:	ldr	x0, [x22, x1, lsl #3]
    4074:	str	x0, [x28, x1, lsl #3]
    4078:	add	x1, x1, #0x1
    407c:	cmp	w27, w1
    4080:	b.gt	4070 <mul_n+0x278>
    4084:	ldr	x0, [sp, #136]
    4088:	mov	w3, w27
    408c:	mov	x1, x25
    4090:	add	x2, x22, x0
    4094:	mov	x0, x25
    4098:	bl	4ee8 <_gcry_mpih_add_n>
    409c:	cbz	x0, 3e88 <mul_n+0x90>
    40a0:	ldr	x1, [sp, #120]
    40a4:	ldr	x0, [x28, x1, lsl #3]
    40a8:	adds	x0, x0, #0x1
    40ac:	str	x0, [x28, x1, lsl #3]
    40b0:	b.cc	3e88 <mul_n+0x90>  // b.lo, b.ul, b.last
    40b4:	sub	w0, w20, #0x1
    40b8:	add	x1, x21, #0x8
    40bc:	add	x0, x0, #0x1
    40c0:	add	x10, x21, x0, lsl #3
    40c4:	b	40d8 <mul_n+0x2e0>
    40c8:	ldr	x0, [x1], #8
    40cc:	add	x0, x0, #0x1
    40d0:	stur	x0, [x1, #-8]
    40d4:	cbnz	x0, 3e88 <mul_n+0x90>
    40d8:	cmp	x1, x10
    40dc:	b.ne	40c8 <mul_n+0x2d0>  // b.any
    40e0:	b	3e88 <mul_n+0x90>
    40e4:	bl	3cc8 <mul_n_basecase>
    40e8:	ldr	x1, [sp, #152]
    40ec:	tbz	w19, #31, 3f00 <mul_n+0x108>
    40f0:	mov	w4, #0x1                   	// #1
    40f4:	mov	w3, w27
    40f8:	mov	x2, x26
    40fc:	mov	x0, x28
    4100:	str	w4, [sp, #104]
    4104:	bl	4f30 <_gcry_mpih_sub_n>
    4108:	b	3f70 <mul_n+0x178>
    410c:	bl	3cc8 <mul_n_basecase>
    4110:	b	3e44 <mul_n+0x4c>
    4114:	ldr	x0, [sp, #144]
    4118:	mov	x2, x24
    411c:	mov	x1, x26
    4120:	mov	w3, w27
    4124:	add	x4, x22, x0
    4128:	mov	x0, x22
    412c:	bl	3df8 <mul_n>
    4130:	mov	w3, w20
    4134:	mov	x2, x22
    4138:	mov	x1, x25
    413c:	mov	x0, x25
    4140:	bl	4ee8 <_gcry_mpih_add_n>
    4144:	ldr	x5, [sp, #104]
    4148:	adds	x24, x5, x0
    414c:	b.eq	4068 <mul_n+0x270>  // b.none
    4150:	ldr	x0, [x28, x23, lsl #3]
    4154:	adds	x24, x24, x0
    4158:	str	x24, [x28, x23, lsl #3]
    415c:	b.cc	4068 <mul_n+0x270>  // b.lo, b.ul, b.last
    4160:	ldr	x0, [sp, #112]
    4164:	add	x1, x19, #0x8
    4168:	ubfiz	x0, x0, #3, #32
    416c:	add	x0, x0, #0x8
    4170:	add	x19, x19, x0
    4174:	b	4188 <mul_n+0x390>
    4178:	ldr	x0, [x1], #8
    417c:	add	x0, x0, #0x1
    4180:	stur	x0, [x1, #-8]
    4184:	cbnz	x0, 4060 <mul_n+0x268>
    4188:	cmp	x1, x19
    418c:	b.ne	4178 <mul_n+0x380>  // b.any
    4190:	b	4060 <mul_n+0x268>
    4194:	mov	w3, w20
    4198:	mov	x2, x22
    419c:	mov	x1, x25
    41a0:	mov	x0, x25
    41a4:	str	x4, [sp, #104]
    41a8:	bl	4ee8 <_gcry_mpih_add_n>
    41ac:	ldr	x4, [sp, #104]
    41b0:	add	x5, x4, x0
    41b4:	b	4010 <mul_n+0x218>
    41b8:	ldr	x0, [sp, #144]
    41bc:	mov	w3, w27
    41c0:	mov	x2, x25
    41c4:	mov	x1, x28
    41c8:	add	x4, x22, x0
    41cc:	mov	x0, x22
    41d0:	bl	3df8 <mul_n>
    41d4:	b	3fa8 <mul_n+0x1b0>
    41d8:	mov	x2, x23
    41dc:	mov	w3, w27
    41e0:	mov	x1, x24
    41e4:	mov	x0, x25
    41e8:	bl	4f30 <_gcry_mpih_sub_n>
    41ec:	b	3f84 <mul_n+0x18c>
    41f0:	mov	w0, #0x1                   	// #1
    41f4:	mov	x2, x1
    41f8:	mov	w3, w27
    41fc:	mov	x1, x26
    4200:	str	w0, [sp, #104]
    4204:	mov	x0, x28
    4208:	bl	4f30 <_gcry_mpih_sub_n>
    420c:	b	3f40 <mul_n+0x148>
    4210:	mov	w0, #0x1                   	// #1
    4214:	str	w0, [sp, #104]
    4218:	b	3f70 <mul_n+0x178>
    421c:	nop

0000000000004220 <_gcry_mpih_sqr_n_basecase>:
    4220:	stp	x29, x30, [sp, #-64]!
    4224:	mov	x29, sp
    4228:	ldr	x3, [x1]
    422c:	stp	x19, x20, [sp, #16]
    4230:	mov	x19, x0
    4234:	stp	x21, x22, [sp, #32]
    4238:	cmp	x3, #0x1
    423c:	mov	x21, x1
    4240:	stp	x23, x24, [sp, #48]
    4244:	mov	w22, w2
    4248:	b.hi	4318 <_gcry_mpih_sqr_n_basecase+0xf8>  // b.pmore
    424c:	b.eq	4320 <_gcry_mpih_sqr_n_basecase+0x100>  // b.none
    4250:	cmp	w2, #0x0
    4254:	mov	x0, #0x0                   	// #0
    4258:	b.le	4270 <_gcry_mpih_sqr_n_basecase+0x50>
    425c:	nop
    4260:	str	xzr, [x19, x0, lsl #3]
    4264:	add	x0, x0, #0x1
    4268:	cmp	w22, w0
    426c:	b.gt	4260 <_gcry_mpih_sqr_n_basecase+0x40>
    4270:	mov	x0, #0x0                   	// #0
    4274:	str	x0, [x19, w22, sxtw #3]
    4278:	cmp	w22, #0x1
    427c:	add	x19, x19, #0x8
    4280:	sbfiz	x24, x22, #3, #32
    4284:	b.le	42ec <_gcry_mpih_sqr_n_basecase+0xcc>
    4288:	sub	w23, w22, #0x2
    428c:	mov	x20, #0x8                   	// #8
    4290:	add	x23, x23, #0x2
    4294:	lsl	x23, x23, #3
    4298:	b	42b4 <_gcry_mpih_sqr_n_basecase+0x94>
    429c:	b.eq	4300 <_gcry_mpih_sqr_n_basecase+0xe0>  // b.none
    42a0:	str	x4, [x19, x24]
    42a4:	add	x20, x20, #0x8
    42a8:	cmp	x23, x20
    42ac:	add	x19, x19, #0x8
    42b0:	b.eq	42ec <_gcry_mpih_sqr_n_basecase+0xcc>  // b.none
    42b4:	ldr	x3, [x21, x20]
    42b8:	mov	x0, x19
    42bc:	mov	w2, w22
    42c0:	mov	x1, x21
    42c4:	cmp	x3, #0x1
    42c8:	mov	x4, #0x0                   	// #0
    42cc:	b.ls	429c <_gcry_mpih_sqr_n_basecase+0x7c>  // b.plast
    42d0:	bl	4dd0 <_gcry_mpih_addmul_1>
    42d4:	mov	x4, x0
    42d8:	str	x4, [x19, x24]
    42dc:	add	x20, x20, #0x8
    42e0:	cmp	x23, x20
    42e4:	add	x19, x19, #0x8
    42e8:	b.ne	42b4 <_gcry_mpih_sqr_n_basecase+0x94>  // b.any
    42ec:	ldp	x19, x20, [sp, #16]
    42f0:	ldp	x21, x22, [sp, #32]
    42f4:	ldp	x23, x24, [sp, #48]
    42f8:	ldp	x29, x30, [sp], #64
    42fc:	ret
    4300:	mov	w3, w22
    4304:	mov	x2, x21
    4308:	mov	x1, x19
    430c:	bl	4ee8 <_gcry_mpih_add_n>
    4310:	mov	x4, x0
    4314:	b	42a0 <_gcry_mpih_sqr_n_basecase+0x80>
    4318:	bl	4d50 <_gcry_mpih_mul_1>
    431c:	b	4274 <_gcry_mpih_sqr_n_basecase+0x54>
    4320:	cmp	w2, #0x0
    4324:	b.le	4270 <_gcry_mpih_sqr_n_basecase+0x50>
    4328:	mov	x0, #0x0                   	// #0
    432c:	b	4334 <_gcry_mpih_sqr_n_basecase+0x114>
    4330:	ldr	x3, [x21, x0, lsl #3]
    4334:	str	x3, [x19, x0, lsl #3]
    4338:	add	x0, x0, #0x1
    433c:	cmp	w22, w0
    4340:	b.gt	4330 <_gcry_mpih_sqr_n_basecase+0x110>
    4344:	b	4270 <_gcry_mpih_sqr_n_basecase+0x50>

0000000000004348 <_gcry_mpih_sqr_n>:
    4348:	stp	x29, x30, [sp, #-128]!
    434c:	mov	x29, sp
    4350:	stp	x19, x20, [sp, #16]
    4354:	mov	x20, x0
    4358:	stp	x21, x22, [sp, #32]
    435c:	mov	w21, w2
    4360:	stp	x23, x24, [sp, #48]
    4364:	stp	x27, x28, [sp, #80]
    4368:	mov	x27, x1
    436c:	tbz	w21, #0, 43e0 <_gcry_mpih_sqr_n+0x98>
    4370:	sub	w19, w2, #0x1
    4374:	mov	w2, w19
    4378:	cmp	w19, #0xf
    437c:	b.le	45c4 <_gcry_mpih_sqr_n+0x27c>
    4380:	bl	4348 <_gcry_mpih_sqr_n>
    4384:	sxtw	x22, w19
    4388:	add	x23, x20, w19, sxtw #3
    438c:	mov	w2, w19
    4390:	mov	x1, x27
    4394:	mov	x0, x23
    4398:	ldr	x3, [x27, x22, lsl #3]
    439c:	bl	4dd0 <_gcry_mpih_addmul_1>
    43a0:	mov	x4, x0
    43a4:	lsl	w3, w19, #1
    43a8:	mov	w2, w21
    43ac:	add	w21, w21, w19
    43b0:	mov	x1, x27
    43b4:	mov	x0, x23
    43b8:	str	x4, [x20, w3, sxtw #3]
    43bc:	ldr	x3, [x27, x22, lsl #3]
    43c0:	bl	4dd0 <_gcry_mpih_addmul_1>
    43c4:	str	x0, [x20, w21, sxtw #3]
    43c8:	ldp	x19, x20, [sp, #16]
    43cc:	ldp	x21, x22, [sp, #32]
    43d0:	ldp	x23, x24, [sp, #48]
    43d4:	ldp	x27, x28, [sp, #80]
    43d8:	ldp	x29, x30, [sp], #128
    43dc:	ret
    43e0:	asr	w19, w2, #1
    43e4:	sbfiz	x0, x2, #3, #32
    43e8:	sub	w1, w19, #0x1
    43ec:	stp	x25, x26, [sp, #64]
    43f0:	sbfiz	x24, x19, #3, #32
    43f4:	str	w1, [sp, #96]
    43f8:	add	x28, x27, x24
    43fc:	str	x0, [sp, #104]
    4400:	add	x26, x20, x0
    4404:	mov	x22, x3
    4408:	mov	w2, w19
    440c:	cmp	w19, #0xf
    4410:	sxtw	x23, w19
    4414:	sxtw	x25, w21
    4418:	mov	x1, x28
    441c:	mov	x0, x26
    4420:	b.gt	45bc <_gcry_mpih_sqr_n+0x274>
    4424:	bl	4220 <_gcry_mpih_sqr_n_basecase>
    4428:	sub	w1, w19, #0x1
    442c:	tbnz	w1, #31, 4454 <_gcry_mpih_sqr_n+0x10c>
    4430:	ldrsw	x4, [sp, #96]
    4434:	b	443c <_gcry_mpih_sqr_n+0xf4>
    4438:	tbnz	w4, #31, 4454 <_gcry_mpih_sqr_n+0x10c>
    443c:	ldr	x2, [x28, x4, lsl #3]
    4440:	ldr	x0, [x27, x4, lsl #3]
    4444:	sub	x4, x4, #0x1
    4448:	cmp	x2, x0
    444c:	b.eq	4438 <_gcry_mpih_sqr_n+0xf0>  // b.none
    4450:	b.ls	46c4 <_gcry_mpih_sqr_n+0x37c>  // b.plast
    4454:	mov	x1, x28
    4458:	mov	w3, w19
    445c:	mov	x2, x27
    4460:	mov	x0, x20
    4464:	bl	4f30 <_gcry_mpih_sub_n>
    4468:	cmp	w19, #0xf
    446c:	b.gt	4690 <_gcry_mpih_sqr_n+0x348>
    4470:	mov	w2, w19
    4474:	mov	x1, x20
    4478:	mov	x0, x22
    447c:	bl	4220 <_gcry_mpih_sqr_n_basecase>
    4480:	cmp	w19, #0x0
    4484:	b.le	45cc <_gcry_mpih_sqr_n+0x284>
    4488:	add	x1, x20, x24
    448c:	mov	x4, #0x0                   	// #0
    4490:	ldr	x2, [x26, x4, lsl #3]
    4494:	str	x2, [x1, x4, lsl #3]
    4498:	add	x4, x4, #0x1
    449c:	cmp	w19, w4
    44a0:	b.gt	4490 <_gcry_mpih_sqr_n+0x148>
    44a4:	add	x0, x25, x23
    44a8:	mov	x28, x1
    44ac:	mov	w3, w19
    44b0:	mov	x1, x26
    44b4:	add	x23, x20, x0, lsl #3
    44b8:	str	x0, [sp, #120]
    44bc:	mov	x2, x23
    44c0:	mov	x0, x26
    44c4:	bl	4ee8 <_gcry_mpih_add_n>
    44c8:	mov	x7, x0
    44cc:	mov	x1, x28
    44d0:	mov	x0, x28
    44d4:	mov	w3, w21
    44d8:	mov	x2, x22
    44dc:	str	x7, [sp, #112]
    44e0:	bl	4f30 <_gcry_mpih_sub_n>
    44e4:	ldr	x7, [sp, #112]
    44e8:	cmp	w19, #0xf
    44ec:	sub	x7, x7, x0
    44f0:	b.le	4610 <_gcry_mpih_sqr_n+0x2c8>
    44f4:	ldr	x0, [sp, #104]
    44f8:	mov	x1, x27
    44fc:	mov	w2, w19
    4500:	str	x7, [sp, #112]
    4504:	add	x3, x22, x0
    4508:	mov	x0, x22
    450c:	bl	4348 <_gcry_mpih_sqr_n>
    4510:	mov	w3, w21
    4514:	mov	x2, x22
    4518:	mov	x1, x28
    451c:	mov	x0, x28
    4520:	bl	4ee8 <_gcry_mpih_add_n>
    4524:	ldr	x7, [sp, #112]
    4528:	adds	x7, x7, x0
    452c:	b.ne	46ac <_gcry_mpih_sqr_n+0x364>  // b.any
    4530:	mov	x1, #0x0                   	// #0
    4534:	nop
    4538:	ldr	x0, [x22, x1, lsl #3]
    453c:	str	x0, [x20, x1, lsl #3]
    4540:	add	x1, x1, #0x1
    4544:	cmp	w19, w1
    4548:	b.gt	4538 <_gcry_mpih_sqr_n+0x1f0>
    454c:	mov	w3, w19
    4550:	add	x2, x22, x24
    4554:	mov	x1, x28
    4558:	mov	x0, x28
    455c:	bl	4ee8 <_gcry_mpih_add_n>
    4560:	cbz	x0, 45a0 <_gcry_mpih_sqr_n+0x258>
    4564:	ldr	x0, [x20, x25, lsl #3]
    4568:	adds	x0, x0, #0x1
    456c:	str	x0, [x20, x25, lsl #3]
    4570:	b.cc	45a0 <_gcry_mpih_sqr_n+0x258>  // b.lo, b.ul, b.last
    4574:	sub	w0, w21, #0x1
    4578:	add	x1, x26, #0x8
    457c:	add	x0, x0, #0x1
    4580:	add	x6, x26, x0, lsl #3
    4584:	b	4598 <_gcry_mpih_sqr_n+0x250>
    4588:	ldr	x0, [x1], #8
    458c:	add	x0, x0, #0x1
    4590:	stur	x0, [x1, #-8]
    4594:	cbnz	x0, 45a0 <_gcry_mpih_sqr_n+0x258>
    4598:	cmp	x1, x6
    459c:	b.ne	4588 <_gcry_mpih_sqr_n+0x240>  // b.any
    45a0:	ldp	x19, x20, [sp, #16]
    45a4:	ldp	x21, x22, [sp, #32]
    45a8:	ldp	x23, x24, [sp, #48]
    45ac:	ldp	x25, x26, [sp, #64]
    45b0:	ldp	x27, x28, [sp, #80]
    45b4:	ldp	x29, x30, [sp], #128
    45b8:	ret
    45bc:	bl	4348 <_gcry_mpih_sqr_n>
    45c0:	b	4430 <_gcry_mpih_sqr_n+0xe8>
    45c4:	bl	4220 <_gcry_mpih_sqr_n_basecase>
    45c8:	b	4384 <_gcry_mpih_sqr_n+0x3c>
    45cc:	add	x23, x25, x23
    45d0:	mov	w3, w19
    45d4:	mov	x1, x26
    45d8:	mov	x0, x26
    45dc:	add	x23, x20, x23, lsl #3
    45e0:	add	x28, x20, x24
    45e4:	mov	x2, x23
    45e8:	bl	4ee8 <_gcry_mpih_add_n>
    45ec:	mov	x4, x0
    45f0:	mov	x1, x28
    45f4:	mov	x0, x28
    45f8:	mov	w3, w21
    45fc:	mov	x2, x22
    4600:	str	x4, [sp, #104]
    4604:	bl	4f30 <_gcry_mpih_sub_n>
    4608:	ldr	x4, [sp, #104]
    460c:	sub	x7, x4, x0
    4610:	mov	x1, x27
    4614:	mov	w2, w19
    4618:	mov	x0, x22
    461c:	str	x7, [sp, #104]
    4620:	bl	4220 <_gcry_mpih_sqr_n_basecase>
    4624:	mov	w3, w21
    4628:	mov	x2, x22
    462c:	mov	x1, x28
    4630:	mov	x0, x28
    4634:	bl	4ee8 <_gcry_mpih_add_n>
    4638:	ldr	x7, [sp, #104]
    463c:	adds	x0, x0, x7
    4640:	b.eq	4684 <_gcry_mpih_sqr_n+0x33c>  // b.none
    4644:	ldr	x1, [x23]
    4648:	adds	x0, x0, x1
    464c:	str	x0, [x23]
    4650:	b.cc	4684 <_gcry_mpih_sqr_n+0x33c>  // b.lo, b.ul, b.last
    4654:	ldr	x0, [sp, #96]
    4658:	add	x1, x23, #0x8
    465c:	ubfiz	x0, x0, #3, #32
    4660:	add	x0, x0, #0x8
    4664:	add	x23, x23, x0
    4668:	b	467c <_gcry_mpih_sqr_n+0x334>
    466c:	ldr	x0, [x1], #8
    4670:	add	x0, x0, #0x1
    4674:	stur	x0, [x1, #-8]
    4678:	cbnz	x0, 4684 <_gcry_mpih_sqr_n+0x33c>
    467c:	cmp	x1, x23
    4680:	b.ne	466c <_gcry_mpih_sqr_n+0x324>  // b.any
    4684:	cmp	w19, #0x0
    4688:	b.gt	4530 <_gcry_mpih_sqr_n+0x1e8>
    468c:	b	454c <_gcry_mpih_sqr_n+0x204>
    4690:	ldr	x0, [sp, #104]
    4694:	mov	w2, w19
    4698:	mov	x1, x20
    469c:	add	x3, x22, x0
    46a0:	mov	x0, x22
    46a4:	bl	4348 <_gcry_mpih_sqr_n>
    46a8:	b	4488 <_gcry_mpih_sqr_n+0x140>
    46ac:	ldr	x1, [sp, #120]
    46b0:	ldr	x0, [x20, x1, lsl #3]
    46b4:	adds	x7, x0, x7
    46b8:	str	x7, [x20, x1, lsl #3]
    46bc:	b.cc	4530 <_gcry_mpih_sqr_n+0x1e8>  // b.lo, b.ul, b.last
    46c0:	b	4654 <_gcry_mpih_sqr_n+0x30c>
    46c4:	mov	x2, x28
    46c8:	mov	w3, w19
    46cc:	mov	x1, x27
    46d0:	mov	x0, x20
    46d4:	bl	4f30 <_gcry_mpih_sub_n>
    46d8:	b	4468 <_gcry_mpih_sqr_n+0x120>
    46dc:	nop

00000000000046e0 <_gcry_mpih_mul_n>:
    46e0:	stp	x29, x30, [sp, #-64]!
    46e4:	cmp	x1, x2
    46e8:	mov	x29, sp
    46ec:	stp	x19, x20, [sp, #16]
    46f0:	mov	x20, x1
    46f4:	mov	w19, w3
    46f8:	stp	x21, x22, [sp, #32]
    46fc:	mov	x22, x0
    4700:	b.eq	4788 <_gcry_mpih_mul_n+0xa8>  // b.none
    4704:	cmp	w3, #0xf
    4708:	b.le	4778 <_gcry_mpih_mul_n+0x98>
    470c:	mov	x0, x1
    4710:	mov	x21, x2
    4714:	str	x23, [sp, #48]
    4718:	bl	6b60 <gcry_is_secure>
    471c:	mov	w1, #0x1                   	// #1
    4720:	cbnz	w0, 4734 <_gcry_mpih_mul_n+0x54>
    4724:	mov	x0, x21
    4728:	bl	6b60 <gcry_is_secure>
    472c:	cmp	w0, #0x0
    4730:	cset	w1, ne  // ne = any
    4734:	lsl	w23, w19, #1
    4738:	mov	w0, w23
    473c:	bl	28 <_gcry_mpi_alloc_limb_space>
    4740:	mov	w3, w19
    4744:	mov	x19, x0
    4748:	mov	x2, x21
    474c:	mov	x1, x20
    4750:	mov	x0, x22
    4754:	mov	x4, x19
    4758:	bl	3df8 <mul_n>
    475c:	mov	w1, w23
    4760:	mov	x0, x19
    4764:	ldp	x19, x20, [sp, #16]
    4768:	ldp	x21, x22, [sp, #32]
    476c:	ldr	x23, [sp, #48]
    4770:	ldp	x29, x30, [sp], #64
    4774:	b	140 <_gcry_mpi_free_limb_space>
    4778:	ldp	x19, x20, [sp, #16]
    477c:	ldp	x21, x22, [sp, #32]
    4780:	ldp	x29, x30, [sp], #64
    4784:	b	3cc8 <mul_n_basecase>
    4788:	cmp	w3, #0xf
    478c:	b.gt	47a4 <_gcry_mpih_mul_n+0xc4>
    4790:	ldp	x19, x20, [sp, #16]
    4794:	mov	w2, w3
    4798:	ldp	x21, x22, [sp, #32]
    479c:	ldp	x29, x30, [sp], #64
    47a0:	b	4220 <_gcry_mpih_sqr_n_basecase>
    47a4:	mov	x0, x1
    47a8:	str	x23, [sp, #48]
    47ac:	lsl	w23, w3, #1
    47b0:	bl	6b60 <gcry_is_secure>
    47b4:	mov	w1, w0
    47b8:	mov	w0, w23
    47bc:	bl	28 <_gcry_mpi_alloc_limb_space>
    47c0:	mov	x21, x0
    47c4:	mov	w2, w19
    47c8:	mov	x1, x20
    47cc:	mov	x0, x22
    47d0:	mov	x3, x21
    47d4:	bl	4348 <_gcry_mpih_sqr_n>
    47d8:	mov	w1, w23
    47dc:	mov	x0, x21
    47e0:	ldp	x19, x20, [sp, #16]
    47e4:	ldp	x21, x22, [sp, #32]
    47e8:	ldr	x23, [sp, #48]
    47ec:	ldp	x29, x30, [sp], #64
    47f0:	b	140 <_gcry_mpi_free_limb_space>
    47f4:	nop

00000000000047f8 <_gcry_mpih_release_karatsuba_ctx>:
    47f8:	stp	x29, x30, [sp, #-32]!
    47fc:	mov	x29, sp
    4800:	stp	x19, x20, [sp, #16]
    4804:	mov	x19, x0
    4808:	ldr	x0, [x0, #24]
    480c:	cbz	x0, 4818 <_gcry_mpih_release_karatsuba_ctx+0x20>
    4810:	ldr	w1, [x19, #32]
    4814:	bl	140 <_gcry_mpi_free_limb_space>
    4818:	ldr	x0, [x19, #8]
    481c:	cbz	x0, 4828 <_gcry_mpih_release_karatsuba_ctx+0x30>
    4820:	ldr	w1, [x19, #16]
    4824:	bl	140 <_gcry_mpi_free_limb_space>
    4828:	ldr	x20, [x19]
    482c:	cbz	x20, 4864 <_gcry_mpih_release_karatsuba_ctx+0x6c>
    4830:	ldr	x0, [x20, #24]
    4834:	mov	x19, x20
    4838:	ldr	x20, [x20]
    483c:	cbz	x0, 4848 <_gcry_mpih_release_karatsuba_ctx+0x50>
    4840:	ldr	w1, [x19, #32]
    4844:	bl	140 <_gcry_mpi_free_limb_space>
    4848:	ldr	x0, [x19, #8]
    484c:	cbz	x0, 4858 <_gcry_mpih_release_karatsuba_ctx+0x60>
    4850:	ldr	w1, [x19, #16]
    4854:	bl	140 <_gcry_mpi_free_limb_space>
    4858:	mov	x0, x19
    485c:	bl	6b58 <gcry_free>
    4860:	cbnz	x20, 4830 <_gcry_mpih_release_karatsuba_ctx+0x38>
    4864:	ldp	x19, x20, [sp, #16]
    4868:	ldp	x29, x30, [sp], #32
    486c:	ret

0000000000004870 <_gcry_mpih_mul>:
    4870:	stp	x29, x30, [sp, #-128]!
    4874:	cmp	w4, #0xf
    4878:	mov	x29, sp
    487c:	stp	x19, x20, [sp, #16]
    4880:	mov	x20, x3
    4884:	stp	x21, x22, [sp, #32]
    4888:	mov	w21, w4
    488c:	stp	x23, x24, [sp, #48]
    4890:	mov	x24, x0
    4894:	mov	x23, x1
    4898:	str	x25, [sp, #64]
    489c:	sxtw	x25, w2
    48a0:	mov	x22, x25
    48a4:	b.gt	4900 <_gcry_mpih_mul+0x90>
    48a8:	mov	x5, #0x0                   	// #0
    48ac:	cbnz	w4, 48cc <_gcry_mpih_mul+0x5c>
    48b0:	mov	x0, x5
    48b4:	ldp	x19, x20, [sp, #16]
    48b8:	ldp	x21, x22, [sp, #32]
    48bc:	ldp	x23, x24, [sp, #48]
    48c0:	ldr	x25, [sp, #64]
    48c4:	ldp	x29, x30, [sp], #128
    48c8:	ret
    48cc:	ldr	x3, [x3]
    48d0:	cmp	x3, #0x1
    48d4:	b.hi	495c <_gcry_mpih_mul+0xec>  // b.pmore
    48d8:	b.eq	49e4 <_gcry_mpih_mul+0x174>  // b.none
    48dc:	cmp	w25, #0x0
    48e0:	mov	x0, #0x0                   	// #0
    48e4:	b.le	48f8 <_gcry_mpih_mul+0x88>
    48e8:	str	xzr, [x24, x0, lsl #3]
    48ec:	add	x0, x0, #0x1
    48f0:	cmp	w22, w0
    48f4:	b.gt	48e8 <_gcry_mpih_mul+0x78>
    48f8:	mov	x5, #0x0                   	// #0
    48fc:	b	4964 <_gcry_mpih_mul+0xf4>
    4900:	add	x0, sp, #0x58
    4904:	mov	x2, #0x28                  	// #40
    4908:	mov	w1, #0x0                   	// #0
    490c:	bl	0 <grub_memset>
    4910:	add	x5, sp, #0x58
    4914:	mov	w4, w21
    4918:	mov	x3, x20
    491c:	mov	w2, w25
    4920:	mov	x1, x23
    4924:	mov	x0, x24
    4928:	bl	4a10 <_gcry_mpih_mul_karatsuba_case>
    492c:	add	x0, sp, #0x58
    4930:	bl	47f8 <_gcry_mpih_release_karatsuba_ctx>
    4934:	add	x4, x25, w21, sxtw
    4938:	ldp	x19, x20, [sp, #16]
    493c:	add	x21, x24, x4, lsl #3
    4940:	ldp	x23, x24, [sp, #48]
    4944:	ldur	x5, [x21, #-8]
    4948:	ldp	x21, x22, [sp, #32]
    494c:	mov	x0, x5
    4950:	ldr	x25, [sp, #64]
    4954:	ldp	x29, x30, [sp], #128
    4958:	ret
    495c:	bl	4d50 <_gcry_mpih_mul_1>
    4960:	mov	x5, x0
    4964:	str	x5, [x24, x25, lsl #3]
    4968:	cmp	w21, #0x1
    496c:	lsl	x25, x25, #3
    4970:	add	x19, x24, #0x8
    4974:	b.le	48b0 <_gcry_mpih_mul+0x40>
    4978:	sub	w3, w21, #0x2
    497c:	add	x20, x20, #0x8
    4980:	add	x3, x3, #0x2
    4984:	add	x24, x24, x3, lsl #3
    4988:	b	49a4 <_gcry_mpih_mul+0x134>
    498c:	b.eq	49cc <_gcry_mpih_mul+0x15c>  // b.none
    4990:	str	x5, [x19, x25]
    4994:	add	x19, x19, #0x8
    4998:	cmp	x19, x24
    499c:	add	x20, x20, #0x8
    49a0:	b.eq	48b0 <_gcry_mpih_mul+0x40>  // b.none
    49a4:	ldr	x3, [x20]
    49a8:	mov	x0, x19
    49ac:	mov	w2, w22
    49b0:	mov	x1, x23
    49b4:	cmp	x3, #0x1
    49b8:	mov	x5, #0x0                   	// #0
    49bc:	b.ls	498c <_gcry_mpih_mul+0x11c>  // b.plast
    49c0:	bl	4dd0 <_gcry_mpih_addmul_1>
    49c4:	mov	x5, x0
    49c8:	b	4990 <_gcry_mpih_mul+0x120>
    49cc:	mov	w3, w22
    49d0:	mov	x2, x23
    49d4:	mov	x1, x19
    49d8:	bl	4ee8 <_gcry_mpih_add_n>
    49dc:	mov	x5, x0
    49e0:	b	4990 <_gcry_mpih_mul+0x120>
    49e4:	cmp	w25, #0x0
    49e8:	b.le	48f8 <_gcry_mpih_mul+0x88>
    49ec:	mov	x0, #0x0                   	// #0
    49f0:	ldr	x1, [x23, x0, lsl #3]
    49f4:	str	x1, [x24, x0, lsl #3]
    49f8:	add	x0, x0, #0x1
    49fc:	cmp	w22, w0
    4a00:	b.gt	49f0 <_gcry_mpih_mul+0x180>
    4a04:	mov	x5, #0x0                   	// #0
    4a08:	b	4964 <_gcry_mpih_mul+0xf4>
    4a0c:	nop

0000000000004a10 <_gcry_mpih_mul_karatsuba_case>:
    4a10:	stp	x29, x30, [sp, #-96]!
    4a14:	mov	x29, sp
    4a18:	stp	x23, x24, [sp, #48]
    4a1c:	mov	x24, x0
    4a20:	mov	w23, w4
    4a24:	ldr	x0, [x5, #8]
    4a28:	stp	x19, x20, [sp, #16]
    4a2c:	mov	x19, x5
    4a30:	stp	x21, x22, [sp, #32]
    4a34:	mov	x20, x1
    4a38:	mov	x21, x3
    4a3c:	stp	x25, x26, [sp, #64]
    4a40:	mov	w25, w2
    4a44:	cbz	x0, 4be4 <_gcry_mpih_mul_karatsuba_case+0x1d4>
    4a48:	ldr	w1, [x5, #20]
    4a4c:	cmp	w1, w4
    4a50:	b.lt	4bdc <_gcry_mpih_mul_karatsuba_case+0x1cc>  // b.tstop
    4a54:	cmp	w23, #0xf
    4a58:	b.gt	4c14 <_gcry_mpih_mul_karatsuba_case+0x204>
    4a5c:	mov	w3, w23
    4a60:	mov	x2, x21
    4a64:	mov	x1, x20
    4a68:	mov	x0, x24
    4a6c:	bl	3cc8 <mul_n_basecase>
    4a70:	sbfiz	x26, x23, #3, #32
    4a74:	sub	w25, w25, w23
    4a78:	cmp	w23, w25
    4a7c:	add	x24, x24, x26
    4a80:	add	x20, x20, x26
    4a84:	sxtw	x22, w23
    4a88:	b.gt	4b34 <_gcry_mpih_mul_karatsuba_case+0x124>
    4a8c:	ldr	x0, [x19, #24]
    4a90:	cbz	x0, 4d30 <_gcry_mpih_mul_karatsuba_case+0x320>
    4a94:	ldr	w1, [x19, #36]
    4a98:	cmp	w1, w23
    4a9c:	b.lt	4cc8 <_gcry_mpih_mul_karatsuba_case+0x2b8>  // b.tstop
    4aa0:	cmp	w23, #0xf
    4aa4:	b.gt	4cb0 <_gcry_mpih_mul_karatsuba_case+0x2a0>
    4aa8:	mov	w3, w23
    4aac:	mov	x2, x21
    4ab0:	mov	x1, x20
    4ab4:	bl	3cc8 <mul_n_basecase>
    4ab8:	ldr	x2, [x19, #24]
    4abc:	mov	x1, x24
    4ac0:	mov	w3, w23
    4ac4:	mov	x0, x24
    4ac8:	add	x24, x24, x26
    4acc:	bl	4ee8 <_gcry_mpih_add_n>
    4ad0:	mov	x1, x0
    4ad4:	ldr	x0, [x19, #24]
    4ad8:	mov	x3, x24
    4adc:	add	x6, x0, x26
    4ae0:	ldr	x2, [x0, x26]
    4ae4:	add	x6, x6, #0x8
    4ae8:	adds	x1, x1, x2
    4aec:	str	x1, [x3], #8
    4af0:	mov	w2, w23
    4af4:	b.cs	4c40 <_gcry_mpih_mul_karatsuba_case+0x230>  // b.hs, b.nlast
    4af8:	cmp	x3, x6
    4afc:	b.eq	4b24 <_gcry_mpih_mul_karatsuba_case+0x114>  // b.none
    4b00:	sub	w2, w2, #0x1
    4b04:	cmp	w2, #0x0
    4b08:	b.le	4b24 <_gcry_mpih_mul_karatsuba_case+0x114>
    4b0c:	mov	x1, #0x0                   	// #0
    4b10:	ldr	x4, [x6, x1, lsl #3]
    4b14:	str	x4, [x3, x1, lsl #3]
    4b18:	add	x1, x1, #0x1
    4b1c:	cmp	w2, w1
    4b20:	b.gt	4b10 <_gcry_mpih_mul_karatsuba_case+0x100>
    4b24:	sub	w25, w25, w23
    4b28:	add	x20, x20, x26
    4b2c:	cmp	w23, w25
    4b30:	b.le	4aa0 <_gcry_mpih_mul_karatsuba_case+0x90>
    4b34:	cbz	w25, 4bc4 <_gcry_mpih_mul_karatsuba_case+0x1b4>
    4b38:	cmp	w25, #0xf
    4b3c:	b.le	4d14 <_gcry_mpih_mul_karatsuba_case+0x304>
    4b40:	ldr	x5, [x19]
    4b44:	cbz	x5, 4d38 <_gcry_mpih_mul_karatsuba_case+0x328>
    4b48:	ldr	x0, [x19, #8]
    4b4c:	mov	x3, x20
    4b50:	mov	x1, x21
    4b54:	mov	w4, w25
    4b58:	mov	w2, w23
    4b5c:	bl	4a10 <_gcry_mpih_mul_karatsuba_case>
    4b60:	ldr	x2, [x19, #8]
    4b64:	mov	x1, x24
    4b68:	mov	x0, x24
    4b6c:	mov	w3, w23
    4b70:	add	x24, x24, x26
    4b74:	bl	4ee8 <_gcry_mpih_add_n>
    4b78:	ldr	x2, [x19, #8]
    4b7c:	add	x1, x2, x26
    4b80:	ldr	x2, [x2, x22, lsl #3]
    4b84:	add	x1, x1, #0x8
    4b88:	adds	x0, x0, x2
    4b8c:	str	x0, [x24], #8
    4b90:	b.cs	4c6c <_gcry_mpih_mul_karatsuba_case+0x25c>  // b.hs, b.nlast
    4b94:	cmp	x24, x1
    4b98:	b.eq	4bc4 <_gcry_mpih_mul_karatsuba_case+0x1b4>  // b.none
    4b9c:	sub	w25, w25, #0x1
    4ba0:	cmp	w25, #0x0
    4ba4:	b.le	4bc4 <_gcry_mpih_mul_karatsuba_case+0x1b4>
    4ba8:	mov	x0, #0x0                   	// #0
    4bac:	nop
    4bb0:	ldr	x2, [x1, x0, lsl #3]
    4bb4:	str	x2, [x24, x0, lsl #3]
    4bb8:	add	x0, x0, #0x1
    4bbc:	cmp	w25, w0
    4bc0:	b.gt	4bb0 <_gcry_mpih_mul_karatsuba_case+0x1a0>
    4bc4:	ldp	x19, x20, [sp, #16]
    4bc8:	ldp	x21, x22, [sp, #32]
    4bcc:	ldp	x23, x24, [sp, #48]
    4bd0:	ldp	x25, x26, [sp, #64]
    4bd4:	ldp	x29, x30, [sp], #96
    4bd8:	ret
    4bdc:	ldr	w1, [x5, #16]
    4be0:	bl	140 <_gcry_mpi_free_limb_space>
    4be4:	lsl	w22, w23, #1
    4be8:	str	w22, [x19, #16]
    4bec:	mov	x0, x20
    4bf0:	bl	6b60 <gcry_is_secure>
    4bf4:	mov	w1, #0x1                   	// #1
    4bf8:	cbz	w0, 4c8c <_gcry_mpih_mul_karatsuba_case+0x27c>
    4bfc:	mov	w0, w22
    4c00:	bl	28 <_gcry_mpi_alloc_limb_space>
    4c04:	str	x0, [x19, #8]
    4c08:	str	w23, [x19, #20]
    4c0c:	cmp	w23, #0xf
    4c10:	b.le	4a5c <_gcry_mpih_mul_karatsuba_case+0x4c>
    4c14:	ldr	x4, [x19, #8]
    4c18:	mov	w3, w23
    4c1c:	mov	x2, x21
    4c20:	mov	x1, x20
    4c24:	mov	x0, x24
    4c28:	bl	3df8 <mul_n>
    4c2c:	b	4a70 <_gcry_mpih_mul_karatsuba_case+0x60>
    4c30:	ldr	x1, [x6], #8
    4c34:	add	x1, x1, #0x1
    4c38:	str	x1, [x3], #8
    4c3c:	cbnz	x1, 4af8 <_gcry_mpih_mul_karatsuba_case+0xe8>
    4c40:	subs	w2, w2, #0x1
    4c44:	b.ne	4c30 <_gcry_mpih_mul_karatsuba_case+0x220>  // b.any
    4c48:	sub	w25, w25, w23
    4c4c:	add	x20, x20, x26
    4c50:	cmp	w23, w25
    4c54:	b.le	4aa0 <_gcry_mpih_mul_karatsuba_case+0x90>
    4c58:	b	4b34 <_gcry_mpih_mul_karatsuba_case+0x124>
    4c5c:	ldr	x0, [x1], #8
    4c60:	add	x0, x0, #0x1
    4c64:	str	x0, [x24], #8
    4c68:	cbnz	x0, 4b94 <_gcry_mpih_mul_karatsuba_case+0x184>
    4c6c:	subs	w25, w25, #0x1
    4c70:	b.ne	4c5c <_gcry_mpih_mul_karatsuba_case+0x24c>  // b.any
    4c74:	ldp	x19, x20, [sp, #16]
    4c78:	ldp	x21, x22, [sp, #32]
    4c7c:	ldp	x23, x24, [sp, #48]
    4c80:	ldp	x25, x26, [sp, #64]
    4c84:	ldp	x29, x30, [sp], #96
    4c88:	ret
    4c8c:	mov	x0, x21
    4c90:	bl	6b60 <gcry_is_secure>
    4c94:	cmp	w0, #0x0
    4c98:	mov	w0, w22
    4c9c:	cset	w1, ne  // ne = any
    4ca0:	bl	28 <_gcry_mpi_alloc_limb_space>
    4ca4:	str	x0, [x19, #8]
    4ca8:	str	w23, [x19, #20]
    4cac:	b	4c0c <_gcry_mpih_mul_karatsuba_case+0x1fc>
    4cb0:	ldr	x4, [x19, #8]
    4cb4:	mov	w3, w23
    4cb8:	mov	x2, x21
    4cbc:	mov	x1, x20
    4cc0:	bl	3df8 <mul_n>
    4cc4:	b	4ab8 <_gcry_mpih_mul_karatsuba_case+0xa8>
    4cc8:	ldr	w1, [x19, #32]
    4ccc:	str	x27, [sp, #80]
    4cd0:	bl	140 <_gcry_mpi_free_limb_space>
    4cd4:	lsl	w27, w23, #1
    4cd8:	str	w27, [x19, #32]
    4cdc:	mov	x0, x20
    4ce0:	bl	6b60 <gcry_is_secure>
    4ce4:	mov	w1, #0x1                   	// #1
    4ce8:	cbnz	w0, 4cfc <_gcry_mpih_mul_karatsuba_case+0x2ec>
    4cec:	mov	x0, x21
    4cf0:	bl	6b60 <gcry_is_secure>
    4cf4:	cmp	w0, #0x0
    4cf8:	cset	w1, ne  // ne = any
    4cfc:	mov	w0, w27
    4d00:	bl	28 <_gcry_mpi_alloc_limb_space>
    4d04:	ldr	x27, [sp, #80]
    4d08:	str	x0, [x19, #24]
    4d0c:	str	w23, [x19, #36]
    4d10:	b	4aa0 <_gcry_mpih_mul_karatsuba_case+0x90>
    4d14:	ldr	x0, [x19, #8]
    4d18:	mov	x3, x20
    4d1c:	mov	x1, x21
    4d20:	mov	w4, w25
    4d24:	mov	w2, w23
    4d28:	bl	4870 <_gcry_mpih_mul>
    4d2c:	b	4b60 <_gcry_mpih_mul_karatsuba_case+0x150>
    4d30:	str	x27, [sp, #80]
    4d34:	b	4cd4 <_gcry_mpih_mul_karatsuba_case+0x2c4>
    4d38:	mov	x1, #0x28                  	// #40
    4d3c:	mov	x0, #0x1                   	// #1
    4d40:	bl	6b68 <gcry_xcalloc>
    4d44:	mov	x5, x0
    4d48:	str	x0, [x19]
    4d4c:	b	4b48 <_gcry_mpih_mul_karatsuba_case+0x138>

0000000000004d50 <_gcry_mpih_mul_1>:
    4d50:	sub	w10, w2, #0x1
    4d54:	lsr	x9, x3, #32
    4d58:	add	x10, x10, #0x1
    4d5c:	and	x8, x3, #0xffffffff
    4d60:	mov	x11, x0
    4d64:	mov	x4, #0x0                   	// #0
    4d68:	lsl	x10, x10, #3
    4d6c:	mov	x0, #0x0                   	// #0
    4d70:	mov	x12, #0x100000000           	// #4294967296
    4d74:	nop
    4d78:	ldr	x2, [x1, x4]
    4d7c:	and	x5, x2, #0xffffffff
    4d80:	lsr	x2, x2, #32
    4d84:	mul	x3, x5, x8
    4d88:	mul	x7, x2, x8
    4d8c:	madd	x6, x9, x5, x7
    4d90:	mul	x2, x2, x9
    4d94:	add	x5, x0, w3, uxtw
    4d98:	add	x3, x6, x3, lsr #32
    4d9c:	add	x6, x2, x12
    4da0:	cmp	x7, x3
    4da4:	add	x5, x5, x3, lsl #32
    4da8:	csel	x2, x6, x2, hi  // hi = pmore
    4dac:	cmp	x0, x5
    4db0:	str	x5, [x11, x4]
    4db4:	cset	x0, hi  // hi = pmore
    4db8:	add	x4, x4, #0x8
    4dbc:	add	x3, x0, x3, lsr #32
    4dc0:	cmp	x10, x4
    4dc4:	add	x0, x2, x3
    4dc8:	b.ne	4d78 <_gcry_mpih_mul_1+0x28>  // b.any
    4dcc:	ret

0000000000004dd0 <_gcry_mpih_addmul_1>:
    4dd0:	sub	w12, w2, #0x1
    4dd4:	lsr	x11, x3, #32
    4dd8:	add	x12, x12, #0x1
    4ddc:	and	x9, x3, #0xffffffff
    4de0:	mov	x10, x0
    4de4:	mov	x5, #0x0                   	// #0
    4de8:	lsl	x12, x12, #3
    4dec:	mov	x0, #0x0                   	// #0
    4df0:	mov	x13, #0x100000000           	// #4294967296
    4df4:	nop
    4df8:	ldr	x2, [x1, x5]
    4dfc:	ldr	x7, [x10, x5]
    4e00:	and	x6, x2, #0xffffffff
    4e04:	lsr	x2, x2, #32
    4e08:	mul	x3, x6, x9
    4e0c:	mul	x8, x2, x9
    4e10:	madd	x6, x11, x6, x8
    4e14:	add	x4, x0, w3, uxtw
    4e18:	mul	x2, x2, x11
    4e1c:	add	x3, x6, x3, lsr #32
    4e20:	add	x6, x2, x13
    4e24:	cmp	x8, x3
    4e28:	add	x4, x4, x3, lsl #32
    4e2c:	csel	x2, x6, x2, hi  // hi = pmore
    4e30:	lsr	x3, x3, #32
    4e34:	cmp	x0, x4
    4e38:	cinc	x3, x3, hi  // hi = pmore
    4e3c:	adds	x4, x4, x7
    4e40:	str	x4, [x10, x5]
    4e44:	add	x5, x5, #0x8
    4e48:	adc	x0, x3, x2
    4e4c:	cmp	x12, x5
    4e50:	b.ne	4df8 <_gcry_mpih_addmul_1+0x28>  // b.any
    4e54:	ret

0000000000004e58 <_gcry_mpih_submul_1>:
    4e58:	sub	w12, w2, #0x1
    4e5c:	lsr	x11, x3, #32
    4e60:	add	x12, x12, #0x1
    4e64:	and	x9, x3, #0xffffffff
    4e68:	mov	x10, x0
    4e6c:	mov	x5, #0x0                   	// #0
    4e70:	lsl	x12, x12, #3
    4e74:	mov	x0, #0x0                   	// #0
    4e78:	mov	x13, #0x100000000           	// #4294967296
    4e7c:	nop
    4e80:	ldr	x2, [x1, x5]
    4e84:	ldr	x7, [x10, x5]
    4e88:	and	x4, x2, #0xffffffff
    4e8c:	lsr	x2, x2, #32
    4e90:	mul	x3, x4, x9
    4e94:	mul	x8, x2, x9
    4e98:	madd	x6, x11, x4, x8
    4e9c:	mul	x2, x2, x11
    4ea0:	add	x4, x0, w3, uxtw
    4ea4:	add	x3, x6, x3, lsr #32
    4ea8:	add	x6, x2, x13
    4eac:	cmp	x8, x3
    4eb0:	add	x4, x4, x3, lsl #32
    4eb4:	csel	x2, x6, x2, hi  // hi = pmore
    4eb8:	lsr	x3, x3, #32
    4ebc:	cmp	x0, x4
    4ec0:	cinc	x3, x3, hi  // hi = pmore
    4ec4:	subs	x0, x7, x4
    4ec8:	cmp	x7, x4
    4ecc:	str	x0, [x10, x5]
    4ed0:	cinc	x2, x2, cc  // cc = lo, ul, last
    4ed4:	add	x5, x5, #0x8
    4ed8:	add	x0, x2, x3
    4edc:	cmp	x12, x5
    4ee0:	b.ne	4e80 <_gcry_mpih_submul_1+0x28>  // b.any
    4ee4:	ret

0000000000004ee8 <_gcry_mpih_add_n>:
    4ee8:	sub	w3, w3, #0x1
    4eec:	mov	x7, x0
    4ef0:	add	x3, x3, #0x1
    4ef4:	mov	x0, #0x0                   	// #0
    4ef8:	lsl	x6, x3, #3
    4efc:	mov	x3, #0x0                   	// #0
    4f00:	ldr	x5, [x2, x3]
    4f04:	ldr	x4, [x1, x3]
    4f08:	adds	x0, x0, x5
    4f0c:	cset	x5, cs  // cs = hs, nlast
    4f10:	adds	x0, x4, x0
    4f14:	str	x0, [x7, x3]
    4f18:	add	x3, x3, #0x8
    4f1c:	cinc	x0, x5, cs  // cs = hs, nlast
    4f20:	cmp	x6, x3
    4f24:	b.ne	4f00 <_gcry_mpih_add_n+0x18>  // b.any
    4f28:	ret
    4f2c:	nop

0000000000004f30 <_gcry_mpih_sub_n>:
    4f30:	sub	w3, w3, #0x1
    4f34:	mov	x8, x0
    4f38:	add	x3, x3, #0x1
    4f3c:	mov	x0, #0x0                   	// #0
    4f40:	lsl	x7, x3, #3
    4f44:	mov	x3, #0x0                   	// #0
    4f48:	ldr	x5, [x2, x3]
    4f4c:	ldr	x4, [x1, x3]
    4f50:	adds	x0, x0, x5
    4f54:	cset	x5, cs  // cs = hs, nlast
    4f58:	subs	x6, x4, x0
    4f5c:	str	x6, [x8, x3]
    4f60:	cmp	x4, x0
    4f64:	add	x3, x3, #0x8
    4f68:	cinc	x0, x5, cc  // cc = lo, ul, last
    4f6c:	cmp	x7, x3
    4f70:	b.ne	4f48 <_gcry_mpih_sub_n+0x18>  // b.any
    4f74:	ret

0000000000004f78 <_gcry_mpih_mod_1>:
    4f78:	mov	x7, x0
    4f7c:	mov	x0, #0x0                   	// #0
    4f80:	cbz	w1, 50bc <_gcry_mpih_mod_1+0x144>
    4f84:	mov	x0, #0x38                  	// #56
    4f88:	lsr	x3, x2, x0
    4f8c:	mov	w4, w0
    4f90:	tst	w3, #0xff
    4f94:	b.ne	515c <_gcry_mpih_mod_1+0x1e4>  // b.any
    4f98:	subs	x0, x0, #0x8
    4f9c:	b.ne	4f88 <_gcry_mpih_mod_1+0x10>  // b.any
    4fa0:	mov	x3, x2
    4fa4:	mov	w0, #0x40                  	// #64
    4fa8:	adrp	x4, 0 <_gcry_mpi_m_check>
    4fac:	ldr	x4, [x4]
    4fb0:	ldrb	w9, [x4, x3]
    4fb4:	subs	w9, w0, w9
    4fb8:	b.eq	50c0 <_gcry_mpih_mod_1+0x148>  // b.none
    4fbc:	add	x0, x7, w1, sxtw #3
    4fc0:	subs	w6, w1, #0x2
    4fc4:	mov	w12, #0x40                  	// #64
    4fc8:	sub	w12, w12, w9
    4fcc:	lsl	x8, x2, x9
    4fd0:	and	x11, x8, #0xffffffff
    4fd4:	ldur	x1, [x0, #-8]
    4fd8:	lsr	x10, x8, #32
    4fdc:	lsr	x2, x1, x12
    4fe0:	b.mi	505c <_gcry_mpih_mod_1+0xe4>  // b.first
    4fe4:	sxtw	x6, w6
    4fe8:	udiv	x3, x2, x10
    4fec:	mov	x0, x1
    4ff0:	ldr	x1, [x7, x6, lsl #3]
    4ff4:	lsl	x0, x0, x9
    4ff8:	sub	x6, x6, #0x1
    4ffc:	msub	x4, x3, x10, x2
    5000:	lsr	x2, x1, x12
    5004:	orr	x2, x0, x2
    5008:	mul	x5, x3, x11
    500c:	extr	x3, x4, x2, #32
    5010:	cmp	x3, x5
    5014:	b.cs	5028 <_gcry_mpih_mod_1+0xb0>  // b.hs, b.nlast
    5018:	adds	x3, x3, x8
    501c:	ccmp	x3, x5, #0x2, cc  // cc = lo, ul, last
    5020:	add	x0, x3, x8
    5024:	csel	x3, x0, x3, cc  // cc = lo, ul, last
    5028:	sub	x3, x3, x5
    502c:	udiv	x4, x3, x10
    5030:	msub	x3, x4, x10, x3
    5034:	mul	x4, x4, x11
    5038:	bfi	x2, x3, #32, #32
    503c:	cmp	x4, x2
    5040:	b.ls	5054 <_gcry_mpih_mod_1+0xdc>  // b.plast
    5044:	adds	x2, x2, x8
    5048:	ccmp	x4, x2, #0x0, cc  // cc = lo, ul, last
    504c:	add	x0, x2, x8
    5050:	csel	x2, x0, x2, hi  // hi = pmore
    5054:	sub	x2, x2, x4
    5058:	tbz	w6, #31, 4fe8 <_gcry_mpih_mod_1+0x70>
    505c:	udiv	x0, x2, x10
    5060:	lsl	x1, x1, x9
    5064:	msub	x2, x0, x10, x2
    5068:	mul	x0, x0, x11
    506c:	extr	x2, x2, x1, #32
    5070:	cmp	x0, x2
    5074:	b.ls	5088 <_gcry_mpih_mod_1+0x110>  // b.plast
    5078:	adds	x2, x2, x8
    507c:	ccmp	x0, x2, #0x0, cc  // cc = lo, ul, last
    5080:	add	x3, x2, x8
    5084:	csel	x2, x3, x2, hi  // hi = pmore
    5088:	sub	x2, x2, x0
    508c:	udiv	x0, x2, x10
    5090:	msub	x2, x0, x10, x2
    5094:	mul	x0, x0, x11
    5098:	bfi	x1, x2, #32, #32
    509c:	cmp	x1, x0
    50a0:	b.cs	50b4 <_gcry_mpih_mod_1+0x13c>  // b.hs, b.nlast
    50a4:	adds	x1, x1, x8
    50a8:	add	x2, x1, x8
    50ac:	ccmp	x1, x0, #0x2, cc  // cc = lo, ul, last
    50b0:	csel	x1, x2, x1, cc  // cc = lo, ul, last
    50b4:	sub	x0, x1, x0
    50b8:	lsr	x0, x0, x9
    50bc:	ret
    50c0:	sub	w5, w1, #0x1
    50c4:	ldr	x0, [x7, w5, sxtw #3]
    50c8:	cmp	x0, x2
    50cc:	b.cc	5154 <_gcry_mpih_mod_1+0x1dc>  // b.lo, b.ul, b.last
    50d0:	mov	x0, #0x0                   	// #0
    50d4:	tbnz	w5, #31, 50bc <_gcry_mpih_mod_1+0x144>
    50d8:	sxtw	x5, w5
    50dc:	lsr	x6, x2, #32
    50e0:	and	x8, x2, #0xffffffff
    50e4:	nop
    50e8:	udiv	x3, x0, x6
    50ec:	ldr	x4, [x7, x5, lsl #3]
    50f0:	sub	x5, x5, #0x1
    50f4:	msub	x1, x3, x6, x0
    50f8:	mul	x3, x3, x8
    50fc:	extr	x1, x1, x4, #32
    5100:	cmp	x3, x1
    5104:	b.ls	5118 <_gcry_mpih_mod_1+0x1a0>  // b.plast
    5108:	adds	x1, x1, x2
    510c:	ccmp	x3, x1, #0x0, cc  // cc = lo, ul, last
    5110:	add	x0, x1, x2
    5114:	csel	x1, x0, x1, hi  // hi = pmore
    5118:	sub	x3, x1, x3
    511c:	mov	x0, x4
    5120:	udiv	x1, x3, x6
    5124:	msub	x3, x1, x6, x3
    5128:	mul	x1, x1, x8
    512c:	bfi	x0, x3, #32, #32
    5130:	cmp	x0, x1
    5134:	b.cs	5148 <_gcry_mpih_mod_1+0x1d0>  // b.hs, b.nlast
    5138:	adds	x0, x0, x2
    513c:	ccmp	x0, x1, #0x2, cc  // cc = lo, ul, last
    5140:	add	x3, x0, x2
    5144:	csel	x0, x3, x0, cc  // cc = lo, ul, last
    5148:	sub	x0, x0, x1
    514c:	tbz	w5, #31, 50e8 <_gcry_mpih_mod_1+0x170>
    5150:	ret
    5154:	sub	w5, w1, #0x2
    5158:	b	50d4 <_gcry_mpih_mod_1+0x15c>
    515c:	mov	w0, #0x40                  	// #64
    5160:	sub	w0, w0, w4
    5164:	b	4fa8 <_gcry_mpih_mod_1+0x30>
	...

0000000000005170 <_gcry_mpih_divrem>:
    5170:	stp	x29, x30, [sp, #-176]!
    5174:	cmp	w5, #0x1
    5178:	mov	x29, sp
    517c:	stp	x19, x20, [sp, #16]
    5180:	mov	w20, w1
    5184:	mov	x19, x4
    5188:	stp	x21, x22, [sp, #32]
    518c:	mov	w22, w3
    5190:	str	x0, [sp, #96]
    5194:	b.eq	558c <_gcry_mpih_divrem+0x41c>  // b.none
    5198:	stp	x25, x26, [sp, #64]
    519c:	cmp	w5, #0x2
    51a0:	mov	w25, w5
    51a4:	b.eq	53d0 <_gcry_mpih_divrem+0x260>  // b.none
    51a8:	stp	x23, x24, [sp, #48]
    51ac:	stp	x27, x28, [sp, #80]
    51b0:	cbz	w5, 57f0 <_gcry_mpih_divrem+0x680>
    51b4:	sub	w9, w3, w5
    51b8:	sbfiz	x1, x5, #3, #32
    51bc:	sub	x0, x1, #0x8
    51c0:	sub	x24, x1, #0x10
    51c4:	add	x23, x2, w9, sxtw #3
    51c8:	stp	xzr, x1, [sp, #128]
    51cc:	add	x21, x23, x0
    51d0:	ldr	x27, [x4, x0]
    51d4:	str	x0, [sp, #144]
    51d8:	ldr	x1, [x23, x0]
    51dc:	ldr	x26, [x4, x24]
    51e0:	cmp	x27, x1
    51e4:	b.ls	5764 <_gcry_mpih_divrem+0x5f4>  // b.plast
    51e8:	add	w0, w22, w20
    51ec:	sub	w0, w0, w25
    51f0:	subs	w0, w0, #0x1
    51f4:	b.mi	53b0 <_gcry_mpih_divrem+0x240>  // b.first
    51f8:	sxtw	x28, w0
    51fc:	lsr	x0, x27, #32
    5200:	str	x0, [sp, #112]
    5204:	lsr	x0, x26, #32
    5208:	str	x0, [sp, #152]
    520c:	sub	w0, w25, #0x2
    5210:	str	w0, [sp, #172]
    5214:	and	x0, x27, #0xffffffff
    5218:	str	x0, [sp, #120]
    521c:	and	x0, x26, #0xffffffff
    5220:	str	x0, [sp, #160]
    5224:	b	5274 <_gcry_mpih_divrem+0x104>
    5228:	mov	x1, x19
    522c:	mov	x3, x22
    5230:	mov	w2, w25
    5234:	mov	x0, x23
    5238:	bl	4e58 <_gcry_mpih_submul_1>
    523c:	ldr	x1, [sp, #104]
    5240:	cmp	x1, x0
    5244:	b.eq	5260 <_gcry_mpih_divrem+0xf0>  // b.none
    5248:	sub	x22, x22, #0x1
    524c:	mov	w3, w25
    5250:	mov	x2, x19
    5254:	mov	x1, x23
    5258:	mov	x0, x23
    525c:	bl	4ee8 <_gcry_mpih_add_n>
    5260:	ldr	x0, [sp, #96]
    5264:	str	x22, [x0, x28, lsl #3]
    5268:	sub	x28, x28, #0x1
    526c:	ldr	x1, [x21]
    5270:	tbnz	w28, #31, 53b0 <_gcry_mpih_divrem+0x240>
    5274:	cmp	w20, w28
    5278:	b.gt	5380 <_gcry_mpih_divrem+0x210>
    527c:	ldr	x0, [sp, #144]
    5280:	sub	x23, x23, #0x8
    5284:	add	x21, x23, x0
    5288:	ldr	x0, [sp, #136]
    528c:	ldr	x0, [x23, x0]
    5290:	str	x0, [sp, #104]
    5294:	cmp	x27, x1
    5298:	mov	x22, #0xffffffffffffffff    	// #-1
    529c:	b.eq	5228 <_gcry_mpih_divrem+0xb8>  // b.none
    52a0:	ldr	x0, [sp, #112]
    52a4:	ldr	x2, [x21]
    52a8:	udiv	x7, x1, x0
    52ac:	msub	x1, x7, x0, x1
    52b0:	ldr	x0, [sp, #120]
    52b4:	extr	x1, x1, x2, #32
    52b8:	mul	x0, x0, x7
    52bc:	cmp	x0, x1
    52c0:	b.ls	52d4 <_gcry_mpih_divrem+0x164>  // b.plast
    52c4:	adds	x1, x27, x1
    52c8:	ccmp	x0, x1, #0x0, cc  // cc = lo, ul, last
    52cc:	b.hi	57dc <_gcry_mpih_divrem+0x66c>  // b.pmore
    52d0:	add	x7, x7, x22
    52d4:	ldr	x3, [sp, #112]
    52d8:	sub	x1, x1, x0
    52dc:	udiv	x0, x1, x3
    52e0:	msub	x1, x0, x3, x1
    52e4:	ldr	x3, [sp, #120]
    52e8:	bfi	x2, x1, #32, #32
    52ec:	mul	x3, x3, x0
    52f0:	cmp	x3, x2
    52f4:	b.ls	5308 <_gcry_mpih_divrem+0x198>  // b.plast
    52f8:	adds	x2, x27, x2
    52fc:	ccmp	x3, x2, #0x0, cc  // cc = lo, ul, last
    5300:	b.hi	57b8 <_gcry_mpih_divrem+0x648>  // b.pmore
    5304:	sub	x0, x0, #0x1
    5308:	ldp	x1, x4, [sp, #152]
    530c:	orr	x22, x0, x7, lsl #32
    5310:	and	x0, x22, #0xffffffff
    5314:	sub	x2, x2, x3
    5318:	lsr	x3, x22, #32
    531c:	mov	x12, #0x100000000           	// #4294967296
    5320:	mul	x13, x1, x0
    5324:	madd	x14, x3, x4, x13
    5328:	mul	x0, x4, x0
    532c:	mul	x3, x1, x3
    5330:	and	x1, x0, #0xffffffff
    5334:	add	x0, x14, x0, lsr #32
    5338:	add	x12, x3, x12
    533c:	cmp	x13, x0
    5340:	csel	x3, x12, x3, hi  // hi = pmore
    5344:	add	x1, x1, x0, lsl #32
    5348:	add	x0, x3, x0, lsr #32
    534c:	b	5358 <_gcry_mpih_divrem+0x1e8>
    5350:	subs	x1, x1, x26
    5354:	sbc	x0, x0, xzr
    5358:	cmp	x0, x2
    535c:	b.hi	5370 <_gcry_mpih_divrem+0x200>  // b.pmore
    5360:	b.ne	5228 <_gcry_mpih_divrem+0xb8>  // b.any
    5364:	ldr	x3, [x23, x24]
    5368:	cmp	x3, x1
    536c:	b.cs	5228 <_gcry_mpih_divrem+0xb8>  // b.hs, b.nlast
    5370:	adds	x2, x2, x27
    5374:	sub	x22, x22, #0x1
    5378:	b.cc	5350 <_gcry_mpih_divrem+0x1e0>  // b.lo, b.ul, b.last
    537c:	b	5228 <_gcry_mpih_divrem+0xb8>
    5380:	ldr	w2, [sp, #172]
    5384:	add	x3, x23, #0x8
    5388:	ldr	x4, [x21]
    538c:	str	x4, [sp, #104]
    5390:	sxtw	x0, w2
    5394:	tbnz	w2, #31, 53a8 <_gcry_mpih_divrem+0x238>
    5398:	ldr	x2, [x23, x0, lsl #3]
    539c:	str	x2, [x3, x0, lsl #3]
    53a0:	sub	x0, x0, #0x1
    53a4:	tbz	w0, #31, 5398 <_gcry_mpih_divrem+0x228>
    53a8:	str	xzr, [x23]
    53ac:	b	5294 <_gcry_mpih_divrem+0x124>
    53b0:	ldp	x19, x20, [sp, #16]
    53b4:	ldp	x21, x22, [sp, #32]
    53b8:	ldp	x23, x24, [sp, #48]
    53bc:	ldp	x25, x26, [sp, #64]
    53c0:	ldp	x27, x28, [sp, #80]
    53c4:	ldr	x0, [sp, #128]
    53c8:	ldp	x29, x30, [sp], #176
    53cc:	ret
    53d0:	mov	x1, #0xfffffffffffffff0    	// #-16
    53d4:	str	xzr, [sp, #128]
    53d8:	add	x1, x1, w3, sxtw #3
    53dc:	add	x7, x2, x1
    53e0:	ldp	x4, x5, [x4]
    53e4:	ldr	x0, [x7, #8]
    53e8:	ldr	x15, [x2, x1]
    53ec:	cmp	x5, x0
    53f0:	b.ls	5748 <_gcry_mpih_divrem+0x5d8>  // b.plast
    53f4:	add	w6, w22, w20
    53f8:	subs	w3, w6, #0x3
    53fc:	b.mi	5558 <_gcry_mpih_divrem+0x3e8>  // b.first
    5400:	sxtw	x3, w3
    5404:	lsr	x8, x5, #32
    5408:	lsr	x11, x4, #32
    540c:	and	x10, x5, #0xffffffff
    5410:	and	x9, x4, #0xffffffff
    5414:	neg	x14, x4
    5418:	mov	x12, #0x100000000           	// #4294967296
    541c:	mov	x13, #0xffffffffffffffff    	// #-1
    5420:	b	5460 <_gcry_mpih_divrem+0x2f0>
    5424:	sub	x7, x7, #0x8
    5428:	cmp	x5, x0
    542c:	ldr	x6, [x7]
    5430:	b.ne	5478 <_gcry_mpih_divrem+0x308>  // b.any
    5434:	adds	x2, x15, x5
    5438:	mov	x0, x2
    543c:	b.cc	5574 <_gcry_mpih_divrem+0x404>  // b.lo, b.ul, b.last
    5440:	adds	x1, x4, x6
    5444:	sub	x2, x2, x4
    5448:	mov	x15, x1
    544c:	cinc	x0, x2, cs  // cs = hs, nlast
    5450:	ldr	x1, [sp, #96]
    5454:	str	x13, [x1, x3, lsl #3]
    5458:	sub	x3, x3, #0x1
    545c:	tbnz	w3, #31, 5558 <_gcry_mpih_divrem+0x3e8>
    5460:	cmp	w20, w3
    5464:	b.le	5424 <_gcry_mpih_divrem+0x2b4>
    5468:	str	xzr, [x7]
    546c:	cmp	x5, x0
    5470:	mov	x6, #0x0                   	// #0
    5474:	b.eq	5434 <_gcry_mpih_divrem+0x2c4>  // b.none
    5478:	udiv	x16, x0, x8
    547c:	msub	x0, x16, x8, x0
    5480:	mul	x2, x10, x16
    5484:	extr	x1, x0, x15, #32
    5488:	cmp	x2, x1
    548c:	b.ls	54a4 <_gcry_mpih_divrem+0x334>  // b.plast
    5490:	adds	x1, x5, x1
    5494:	sub	x0, x16, #0x1
    5498:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
    549c:	b.hi	57d0 <_gcry_mpih_divrem+0x660>  // b.pmore
    54a0:	mov	x16, x0
    54a4:	sub	x1, x1, x2
    54a8:	udiv	x2, x1, x8
    54ac:	msub	x1, x2, x8, x1
    54b0:	mul	x0, x10, x2
    54b4:	bfi	x15, x1, #32, #32
    54b8:	mov	x1, x15
    54bc:	cmp	x0, x15
    54c0:	b.ls	54d8 <_gcry_mpih_divrem+0x368>  // b.plast
    54c4:	adds	x1, x5, x15
    54c8:	sub	x15, x2, #0x1
    54cc:	ccmp	x0, x1, #0x0, cc  // cc = lo, ul, last
    54d0:	b.hi	57c4 <_gcry_mpih_divrem+0x654>  // b.pmore
    54d4:	mov	x2, x15
    54d8:	orr	x16, x2, x16, lsl #32
    54dc:	sub	x0, x1, x0
    54e0:	and	x2, x16, #0xffffffff
    54e4:	lsr	x15, x16, #32
    54e8:	mul	x17, x11, x2
    54ec:	madd	x18, x15, x9, x17
    54f0:	mul	x2, x9, x2
    54f4:	mul	x15, x11, x15
    54f8:	and	x1, x2, #0xffffffff
    54fc:	add	x2, x18, x2, lsr #32
    5500:	add	x18, x15, x12
    5504:	cmp	x17, x2
    5508:	csel	x15, x18, x15, hi  // hi = pmore
    550c:	add	x1, x1, x2, lsl #32
    5510:	add	x2, x15, x2, lsr #32
    5514:	nop
    5518:	cmp	x2, x0
    551c:	b.hi	5528 <_gcry_mpih_divrem+0x3b8>  // b.pmore
    5520:	ccmp	x1, x6, #0x0, eq  // eq = none
    5524:	b.ls	5540 <_gcry_mpih_divrem+0x3d0>  // b.plast
    5528:	cmp	x1, x4
    552c:	sub	x16, x16, #0x1
    5530:	sbc	x2, x2, xzr
    5534:	sub	x1, x1, x4
    5538:	adds	x0, x0, x5
    553c:	b.cc	5518 <_gcry_mpih_divrem+0x3a8>  // b.lo, b.ul, b.last
    5540:	subs	x15, x6, x1
    5544:	ldr	x1, [sp, #96]
    5548:	sbc	x0, x0, x2
    554c:	str	x16, [x1, x3, lsl #3]
    5550:	sub	x3, x3, #0x1
    5554:	tbz	w3, #31, 5460 <_gcry_mpih_divrem+0x2f0>
    5558:	ldp	x25, x26, [sp, #64]
    555c:	stp	x15, x0, [x7]
    5560:	ldp	x19, x20, [sp, #16]
    5564:	ldp	x21, x22, [sp, #32]
    5568:	ldr	x0, [sp, #128]
    556c:	ldp	x29, x30, [sp], #176
    5570:	ret
    5574:	cmp	x4, #0x0
    5578:	mov	x1, x14
    557c:	cset	x2, ne  // ne = any
    5580:	mov	x16, #0xffffffffffffffff    	// #-1
    5584:	sub	x2, x4, x2
    5588:	b	5518 <_gcry_mpih_divrem+0x3a8>
    558c:	add	x0, x2, w22, sxtw #3
    5590:	str	xzr, [sp, #128]
    5594:	ldr	x7, [x4]
    5598:	ldur	x0, [x0, #-8]
    559c:	cmp	x7, x0
    55a0:	b.ls	5738 <_gcry_mpih_divrem+0x5c8>  // b.plast
    55a4:	ldr	x1, [sp, #96]
    55a8:	subs	w6, w22, #0x2
    55ac:	add	x19, x1, w20, sxtw #3
    55b0:	b.mi	5658 <_gcry_mpih_divrem+0x4e8>  // b.first
    55b4:	sxtw	x6, w6
    55b8:	lsr	x9, x7, #32
    55bc:	and	x10, x7, #0xffffffff
    55c0:	b	55dc <_gcry_mpih_divrem+0x46c>
    55c4:	mov	x8, x3
    55c8:	orr	x5, x8, x5, lsl #32
    55cc:	str	x5, [x19, x6, lsl #3]
    55d0:	sub	x0, x0, x1
    55d4:	sub	x6, x6, #0x1
    55d8:	tbnz	w6, #31, 5658 <_gcry_mpih_divrem+0x4e8>
    55dc:	udiv	x5, x0, x9
    55e0:	ldr	x4, [x2, x6, lsl #3]
    55e4:	msub	x1, x5, x9, x0
    55e8:	mul	x0, x5, x10
    55ec:	extr	x1, x1, x4, #32
    55f0:	cmp	x0, x1
    55f4:	b.ls	560c <_gcry_mpih_divrem+0x49c>  // b.plast
    55f8:	adds	x1, x7, x1
    55fc:	sub	x3, x5, #0x1
    5600:	ccmp	x0, x1, #0x0, cc  // cc = lo, ul, last
    5604:	b.hi	56f8 <_gcry_mpih_divrem+0x588>  // b.pmore
    5608:	mov	x5, x3
    560c:	sub	x1, x1, x0
    5610:	mov	x0, x4
    5614:	udiv	x8, x1, x9
    5618:	msub	x3, x8, x9, x1
    561c:	mul	x1, x8, x10
    5620:	bfi	x0, x3, #32, #32
    5624:	cmp	x1, x0
    5628:	b.ls	55c8 <_gcry_mpih_divrem+0x458>  // b.plast
    562c:	adds	x0, x7, x0
    5630:	sub	x3, x8, #0x1
    5634:	ccmp	x1, x0, #0x0, cc  // cc = lo, ul, last
    5638:	b.ls	55c4 <_gcry_mpih_divrem+0x454>  // b.plast
    563c:	sub	x8, x8, #0x2
    5640:	add	x0, x0, x7
    5644:	orr	x5, x8, x5, lsl #32
    5648:	str	x5, [x19, x6, lsl #3]
    564c:	sub	x0, x0, x1
    5650:	sub	x6, x6, #0x1
    5654:	tbz	w6, #31, 55dc <_gcry_mpih_divrem+0x46c>
    5658:	cmp	w20, #0x0
    565c:	b.le	5720 <_gcry_mpih_divrem+0x5b0>
    5660:	sub	w20, w20, #0x1
    5664:	sub	x11, x19, #0x10
    5668:	sub	x4, x19, #0x8
    566c:	lsr	x6, x7, #32
    5670:	sub	x11, x11, w20, uxtw #3
    5674:	and	x10, x7, #0xffffffff
    5678:	b	56c0 <_gcry_mpih_divrem+0x550>
    567c:	sub	x1, x1, x5
    5680:	udiv	x9, x1, x6
    5684:	msub	x1, x9, x6, x1
    5688:	mov	x5, x9
    568c:	mul	x8, x9, x10
    5690:	lsl	x0, x1, #32
    5694:	cmp	x8, x1, lsl #32
    5698:	b.ls	56ac <_gcry_mpih_divrem+0x53c>  // b.plast
    569c:	adds	x0, x7, x0
    56a0:	sub	x5, x9, #0x1
    56a4:	ccmp	x8, x0, #0x0, cc  // cc = lo, ul, last
    56a8:	b.hi	5704 <_gcry_mpih_divrem+0x594>  // b.pmore
    56ac:	orr	x3, x5, x3, lsl #32
    56b0:	str	x3, [x4], #-8
    56b4:	sub	x0, x0, x8
    56b8:	cmp	x11, x4
    56bc:	b.eq	5720 <_gcry_mpih_divrem+0x5b0>  // b.none
    56c0:	udiv	x8, x0, x6
    56c4:	msub	x0, x8, x6, x0
    56c8:	mov	x3, x8
    56cc:	mul	x5, x8, x10
    56d0:	lsl	x1, x0, #32
    56d4:	cmp	x5, x0, lsl #32
    56d8:	b.ls	567c <_gcry_mpih_divrem+0x50c>  // b.plast
    56dc:	adds	x1, x7, x1
    56e0:	sub	x3, x8, #0x1
    56e4:	ccmp	x5, x1, #0x0, cc  // cc = lo, ul, last
    56e8:	b.ls	567c <_gcry_mpih_divrem+0x50c>  // b.plast
    56ec:	sub	x3, x8, #0x2
    56f0:	add	x1, x1, x7
    56f4:	b	567c <_gcry_mpih_divrem+0x50c>
    56f8:	sub	x5, x5, #0x2
    56fc:	add	x1, x1, x7
    5700:	b	560c <_gcry_mpih_divrem+0x49c>
    5704:	sub	x5, x9, #0x2
    5708:	add	x0, x0, x7
    570c:	orr	x3, x5, x3, lsl #32
    5710:	str	x3, [x4], #-8
    5714:	sub	x0, x0, x8
    5718:	cmp	x11, x4
    571c:	b.ne	56c0 <_gcry_mpih_divrem+0x550>  // b.any
    5720:	str	x0, [x2]
    5724:	ldp	x19, x20, [sp, #16]
    5728:	ldp	x21, x22, [sp, #32]
    572c:	ldr	x0, [sp, #128]
    5730:	ldp	x29, x30, [sp], #176
    5734:	ret
    5738:	mov	x1, #0x1                   	// #1
    573c:	sub	x0, x0, x7
    5740:	str	x1, [sp, #128]
    5744:	b	55a4 <_gcry_mpih_divrem+0x434>
    5748:	ccmp	x4, x15, #0x0, cs  // cs = hs, nlast
    574c:	b.hi	53f4 <_gcry_mpih_divrem+0x284>  // b.pmore
    5750:	subs	x15, x15, x4
    5754:	mov	x1, #0x1                   	// #1
    5758:	sbc	x0, x0, x5
    575c:	str	x1, [sp, #128]
    5760:	b	53f4 <_gcry_mpih_divrem+0x284>
    5764:	b.cc	5794 <_gcry_mpih_divrem+0x624>  // b.lo, b.ul, b.last
    5768:	subs	w0, w5, #0x2
    576c:	b.mi	5794 <_gcry_mpih_divrem+0x624>  // b.first
    5770:	sxtw	x0, w0
    5774:	b	5780 <_gcry_mpih_divrem+0x610>
    5778:	sub	x0, x0, #0x1
    577c:	tbnz	w0, #31, 5794 <_gcry_mpih_divrem+0x624>
    5780:	ldr	x3, [x23, x0, lsl #3]
    5784:	ldr	x2, [x19, x0, lsl #3]
    5788:	cmp	x3, x2
    578c:	b.eq	5778 <_gcry_mpih_divrem+0x608>  // b.none
    5790:	b.ls	57e8 <_gcry_mpih_divrem+0x678>  // b.plast
    5794:	mov	x1, x23
    5798:	mov	w3, w25
    579c:	mov	x2, x19
    57a0:	mov	x0, x23
    57a4:	bl	4f30 <_gcry_mpih_sub_n>
    57a8:	mov	x0, #0x1                   	// #1
    57ac:	str	x0, [sp, #128]
    57b0:	ldr	x1, [x21]
    57b4:	b	51e8 <_gcry_mpih_divrem+0x78>
    57b8:	sub	x0, x0, #0x2
    57bc:	add	x2, x2, x27
    57c0:	b	5308 <_gcry_mpih_divrem+0x198>
    57c4:	sub	x2, x2, #0x2
    57c8:	add	x1, x1, x5
    57cc:	b	54d8 <_gcry_mpih_divrem+0x368>
    57d0:	sub	x16, x16, #0x2
    57d4:	add	x1, x1, x5
    57d8:	b	54a4 <_gcry_mpih_divrem+0x334>
    57dc:	sub	x7, x7, #0x2
    57e0:	add	x1, x1, x27
    57e4:	b	52d4 <_gcry_mpih_divrem+0x164>
    57e8:	str	xzr, [sp, #128]
    57ec:	b	51e8 <_gcry_mpih_divrem+0x78>
    57f0:	adrp	x0, 0 <_gcry_mpi_m_check>
    57f4:	ldr	x0, [x0]
    57f8:	bl	0 <grub_fatal>
    57fc:	nop
	...

0000000000005808 <_gcry_mpih_divmod_1>:
    5808:	mov	x6, x0
    580c:	mov	x0, #0x0                   	// #0
    5810:	cbz	w2, 597c <_gcry_mpih_divmod_1+0x174>
    5814:	mov	x0, #0x38                  	// #56
    5818:	lsr	x4, x3, x0
    581c:	mov	w5, w0
    5820:	tst	w4, #0xff
    5824:	b.ne	5a50 <_gcry_mpih_divmod_1+0x248>  // b.any
    5828:	subs	x0, x0, #0x8
    582c:	b.ne	5818 <_gcry_mpih_divmod_1+0x10>  // b.any
    5830:	mov	x4, x3
    5834:	mov	w0, #0x40                  	// #64
    5838:	adrp	x5, 0 <_gcry_mpi_m_check>
    583c:	ldr	x5, [x5]
    5840:	ldrb	w4, [x5, x4]
    5844:	subs	w0, w0, w4
    5848:	b.eq	598c <_gcry_mpih_divmod_1+0x184>  // b.none
    584c:	add	x4, x1, w2, sxtw #3
    5850:	lsl	x9, x3, x0
    5854:	mov	w13, #0x40                  	// #64
    5858:	sub	w13, w13, w0
    585c:	subs	w5, w2, #0x2
    5860:	lsr	x10, x9, #32
    5864:	ldur	x3, [x4, #-8]
    5868:	and	x11, x9, #0xffffffff
    586c:	lsr	x2, x3, x13
    5870:	b.mi	590c <_gcry_mpih_divmod_1+0x104>  // b.first
    5874:	sxtw	x5, w5
    5878:	add	x15, x6, #0x8
    587c:	b	58c8 <_gcry_mpih_divmod_1+0xc0>
    5880:	sub	x7, x7, #0x1
    5884:	sub	x4, x4, x8
    5888:	udiv	x8, x4, x10
    588c:	msub	x4, x8, x10, x4
    5890:	sub	x14, x8, #0x1
    5894:	mul	x12, x8, x11
    5898:	bfi	x2, x4, #32, #32
    589c:	cmp	x12, x2
    58a0:	b.ls	58b4 <_gcry_mpih_divmod_1+0xac>  // b.plast
    58a4:	adds	x2, x2, x9
    58a8:	ccmp	x12, x2, #0x0, cc  // cc = lo, ul, last
    58ac:	b.hi	5980 <_gcry_mpih_divmod_1+0x178>  // b.pmore
    58b0:	mov	x8, x14
    58b4:	orr	x7, x8, x7, lsl #32
    58b8:	str	x7, [x15, x5, lsl #3]
    58bc:	sub	x2, x2, x12
    58c0:	sub	x5, x5, #0x1
    58c4:	tbnz	w5, #31, 590c <_gcry_mpih_divmod_1+0x104>
    58c8:	udiv	x7, x2, x10
    58cc:	mov	x8, x3
    58d0:	ldr	x3, [x1, x5, lsl #3]
    58d4:	lsl	x8, x8, x0
    58d8:	msub	x4, x7, x10, x2
    58dc:	lsr	x2, x3, x13
    58e0:	orr	x2, x8, x2
    58e4:	mul	x8, x7, x11
    58e8:	extr	x4, x4, x2, #32
    58ec:	cmp	x8, x4
    58f0:	b.ls	5884 <_gcry_mpih_divmod_1+0x7c>  // b.plast
    58f4:	adds	x4, x4, x9
    58f8:	ccmp	x4, x8, #0x2, cc  // cc = lo, ul, last
    58fc:	b.cs	5880 <_gcry_mpih_divmod_1+0x78>  // b.hs, b.nlast
    5900:	sub	x7, x7, #0x2
    5904:	add	x4, x4, x9
    5908:	b	5884 <_gcry_mpih_divmod_1+0x7c>
    590c:	udiv	x1, x2, x10
    5910:	lsl	x3, x3, x0
    5914:	msub	x2, x1, x10, x2
    5918:	mul	x4, x1, x11
    591c:	extr	x2, x2, x3, #32
    5920:	cmp	x4, x2
    5924:	b.ls	593c <_gcry_mpih_divmod_1+0x134>  // b.plast
    5928:	adds	x2, x2, x9
    592c:	sub	x5, x1, #0x1
    5930:	ccmp	x4, x2, #0x0, cc  // cc = lo, ul, last
    5934:	b.hi	5a68 <_gcry_mpih_divmod_1+0x260>  // b.pmore
    5938:	mov	x1, x5
    593c:	sub	x2, x2, x4
    5940:	udiv	x4, x2, x10
    5944:	msub	x2, x4, x10, x2
    5948:	mul	x11, x4, x11
    594c:	bfi	x3, x2, #32, #32
    5950:	cmp	x11, x3
    5954:	b.ls	596c <_gcry_mpih_divmod_1+0x164>  // b.plast
    5958:	adds	x3, x3, x9
    595c:	sub	x2, x4, #0x1
    5960:	ccmp	x11, x3, #0x0, cc  // cc = lo, ul, last
    5964:	b.hi	5a5c <_gcry_mpih_divmod_1+0x254>  // b.pmore
    5968:	mov	x4, x2
    596c:	sub	x3, x3, x11
    5970:	orr	x1, x4, x1, lsl #32
    5974:	str	x1, [x6]
    5978:	lsr	x0, x3, x0
    597c:	ret
    5980:	sub	x8, x8, #0x2
    5984:	add	x2, x2, x9
    5988:	b	58b4 <_gcry_mpih_divmod_1+0xac>
    598c:	sub	w8, w2, #0x1
    5990:	sxtw	x4, w8
    5994:	ldr	x0, [x1, x4, lsl #3]
    5998:	cmp	x0, x3
    599c:	b.cc	5a38 <_gcry_mpih_divmod_1+0x230>  // b.lo, b.ul, b.last
    59a0:	mov	x0, #0x0                   	// #0
    59a4:	tbnz	w8, #31, 597c <_gcry_mpih_divmod_1+0x174>
    59a8:	sxtw	x8, w8
    59ac:	lsr	x10, x3, #32
    59b0:	and	x11, x3, #0xffffffff
    59b4:	b	5a04 <_gcry_mpih_divmod_1+0x1fc>
    59b8:	sub	x7, x7, #0x1
    59bc:	sub	x2, x2, x0
    59c0:	mov	x0, x5
    59c4:	udiv	x9, x2, x10
    59c8:	msub	x4, x9, x10, x2
    59cc:	sub	x12, x9, #0x1
    59d0:	mul	x2, x9, x11
    59d4:	bfi	x0, x4, #32, #32
    59d8:	cmp	x0, x2
    59dc:	b.cs	59f0 <_gcry_mpih_divmod_1+0x1e8>  // b.hs, b.nlast
    59e0:	adds	x0, x0, x3
    59e4:	ccmp	x0, x2, #0x2, cc  // cc = lo, ul, last
    59e8:	b.cc	5a44 <_gcry_mpih_divmod_1+0x23c>  // b.lo, b.ul, b.last
    59ec:	mov	x9, x12
    59f0:	orr	x7, x9, x7, lsl #32
    59f4:	str	x7, [x6, x8, lsl #3]
    59f8:	sub	x0, x0, x2
    59fc:	sub	x8, x8, #0x1
    5a00:	tbnz	w8, #31, 597c <_gcry_mpih_divmod_1+0x174>
    5a04:	udiv	x7, x0, x10
    5a08:	ldr	x5, [x1, x8, lsl #3]
    5a0c:	msub	x2, x7, x10, x0
    5a10:	mul	x0, x7, x11
    5a14:	extr	x2, x2, x5, #32
    5a18:	cmp	x0, x2
    5a1c:	b.ls	59bc <_gcry_mpih_divmod_1+0x1b4>  // b.plast
    5a20:	adds	x2, x2, x3
    5a24:	ccmp	x2, x0, #0x2, cc  // cc = lo, ul, last
    5a28:	b.cs	59b8 <_gcry_mpih_divmod_1+0x1b0>  // b.hs, b.nlast
    5a2c:	sub	x7, x7, #0x2
    5a30:	add	x2, x2, x3
    5a34:	b	59bc <_gcry_mpih_divmod_1+0x1b4>
    5a38:	sub	w8, w2, #0x2
    5a3c:	str	xzr, [x6, x4, lsl #3]
    5a40:	b	59a4 <_gcry_mpih_divmod_1+0x19c>
    5a44:	sub	x9, x9, #0x2
    5a48:	add	x0, x0, x3
    5a4c:	b	59f0 <_gcry_mpih_divmod_1+0x1e8>
    5a50:	mov	w0, #0x40                  	// #64
    5a54:	sub	w0, w0, w5
    5a58:	b	5838 <_gcry_mpih_divmod_1+0x30>
    5a5c:	sub	x4, x4, #0x2
    5a60:	add	x3, x3, x9
    5a64:	b	596c <_gcry_mpih_divmod_1+0x164>
    5a68:	sub	x1, x1, #0x2
    5a6c:	add	x2, x2, x9
    5a70:	b	593c <_gcry_mpih_divmod_1+0x134>
    5a74:	nop
	...

0000000000005a80 <do_get_buffer>:
    5a80:	stp	x29, x30, [sp, #-48]!
    5a84:	mov	x29, sp
    5a88:	stp	x19, x20, [sp, #16]
    5a8c:	mov	x19, x0
    5a90:	mov	x20, x1
    5a94:	str	x21, [sp, #32]
    5a98:	cbz	x2, 5aa4 <do_get_buffer+0x24>
    5a9c:	ldr	w0, [x0, #8]
    5aa0:	str	w0, [x2]
    5aa4:	ldr	w0, [x19, #4]
    5aa8:	lsl	w0, w0, #3
    5aac:	str	w0, [x20]
    5ab0:	cmp	w0, #0x0
    5ab4:	csinc	w0, w0, wzr, ne  // ne = any
    5ab8:	mov	w0, w0
    5abc:	cbnz	w3, 5ac8 <do_get_buffer+0x48>
    5ac0:	ldr	w1, [x19, #12]
    5ac4:	tbz	w1, #0, 5b9c <do_get_buffer+0x11c>
    5ac8:	bl	6b50 <gcry_malloc_secure>
    5acc:	mov	x21, x0
    5ad0:	cbz	x21, 5b88 <do_get_buffer+0x108>
    5ad4:	ldr	w11, [x19, #4]
    5ad8:	cmp	w11, #0x0
    5adc:	b.le	5b4c <do_get_buffer+0xcc>
    5ae0:	sub	w1, w11, #0x1
    5ae4:	add	x11, x21, w11, sxtw #3
    5ae8:	add	x1, x1, #0x1
    5aec:	sub	x11, x11, #0x8
    5af0:	mov	x2, x21
    5af4:	add	x1, x21, x1, lsl #3
    5af8:	ldr	x4, [x19, #16]
    5afc:	sub	x3, x11, x2
    5b00:	add	x2, x2, #0x8
    5b04:	ldr	x3, [x4, x3]
    5b08:	lsr	x10, x3, #56
    5b0c:	lsr	x9, x3, #48
    5b10:	lsr	x8, x3, #40
    5b14:	lsr	x7, x3, #32
    5b18:	lsr	x6, x3, #24
    5b1c:	lsr	x5, x3, #16
    5b20:	lsr	x4, x3, #8
    5b24:	sturb	w10, [x2, #-8]
    5b28:	sturb	w9, [x2, #-7]
    5b2c:	sturb	w8, [x2, #-6]
    5b30:	sturb	w7, [x2, #-5]
    5b34:	sturb	w6, [x2, #-4]
    5b38:	sturb	w5, [x2, #-3]
    5b3c:	sturb	w4, [x2, #-2]
    5b40:	cmp	x2, x1
    5b44:	sturb	w3, [x2, #-1]
    5b48:	b.ne	5af8 <do_get_buffer+0x78>  // b.any
    5b4c:	ldr	w2, [x20]
    5b50:	mov	x1, x21
    5b54:	cbnz	w2, 5b6c <do_get_buffer+0xec>
    5b58:	b	5b88 <do_get_buffer+0x108>
    5b5c:	sub	w2, w2, #0x1
    5b60:	str	w2, [x20]
    5b64:	add	x1, x1, #0x1
    5b68:	cbz	w2, 5b74 <do_get_buffer+0xf4>
    5b6c:	ldrb	w3, [x1]
    5b70:	cbz	w3, 5b5c <do_get_buffer+0xdc>
    5b74:	cmp	x21, x1
    5b78:	b.eq	5b88 <do_get_buffer+0x108>  // b.none
    5b7c:	mov	w2, w2
    5b80:	mov	x0, x21
    5b84:	bl	0 <grub_memmove>
    5b88:	mov	x0, x21
    5b8c:	ldp	x19, x20, [sp, #16]
    5b90:	ldr	x21, [sp, #32]
    5b94:	ldp	x29, x30, [sp], #48
    5b98:	ret
    5b9c:	bl	6b48 <gcry_malloc>
    5ba0:	mov	x21, x0
    5ba4:	b	5ad0 <do_get_buffer+0x50>

0000000000005ba8 <gcry_mpi_dump>:
    5ba8:	stp	x29, x30, [sp, #-64]!
    5bac:	adrp	x1, 0 <_gcry_mpi_m_check>
    5bb0:	mov	x29, sp
    5bb4:	stp	x21, x22, [sp, #32]
    5bb8:	mov	x21, x0
    5bbc:	ldr	x0, [x1]
    5bc0:	bl	6c10 <_gcry_log_printf>
    5bc4:	cbz	x21, 5c70 <gcry_mpi_dump+0xc8>
    5bc8:	ldr	w0, [x21, #8]
    5bcc:	stp	x19, x20, [sp, #16]
    5bd0:	cbnz	w0, 5c48 <gcry_mpi_dump+0xa0>
    5bd4:	ldr	w19, [x21, #4]
    5bd8:	cmp	w19, #0x0
    5bdc:	b.le	5c34 <gcry_mpi_dump+0x8c>
    5be0:	adrp	x0, 0 <_gcry_mpi_m_check>
    5be4:	mov	x20, #0xfffffffffffffff8    	// #-8
    5be8:	add	x20, x20, w19, sxtw #3
    5bec:	str	x23, [sp, #48]
    5bf0:	ldr	x22, [x0]
    5bf4:	adrp	x23, 0 <_gcry_mpi_m_check>
    5bf8:	mov	x0, x22
    5bfc:	b	5c10 <gcry_mpi_dump+0x68>
    5c00:	ldr	x1, [x23]
    5c04:	ldr	w2, [x21, #4]
    5c08:	cmp	w2, w19
    5c0c:	csel	x0, x0, x1, eq  // eq = none
    5c10:	ldr	x1, [x21, #16]
    5c14:	ldr	x1, [x1, x20]
    5c18:	sub	x20, x20, #0x8
    5c1c:	bl	6c10 <_gcry_log_printf>
    5c20:	mov	x0, x22
    5c24:	subs	w19, w19, #0x1
    5c28:	b.ne	5c00 <gcry_mpi_dump+0x58>  // b.any
    5c2c:	ldr	w19, [x21, #4]
    5c30:	ldr	x23, [sp, #48]
    5c34:	cbz	w19, 5c58 <gcry_mpi_dump+0xb0>
    5c38:	ldp	x19, x20, [sp, #16]
    5c3c:	ldp	x21, x22, [sp, #32]
    5c40:	ldp	x29, x30, [sp], #64
    5c44:	ret
    5c48:	adrp	x0, 0 <_gcry_mpi_m_check>
    5c4c:	ldr	x0, [x0]
    5c50:	bl	6c10 <_gcry_log_printf>
    5c54:	b	5bd4 <gcry_mpi_dump+0x2c>
    5c58:	adrp	x0, 0 <_gcry_mpi_m_check>
    5c5c:	ldp	x19, x20, [sp, #16]
    5c60:	ldp	x21, x22, [sp, #32]
    5c64:	ldp	x29, x30, [sp], #64
    5c68:	ldr	x0, [x0]
    5c6c:	b	6c10 <_gcry_log_printf>
    5c70:	adrp	x0, 0 <_gcry_mpi_m_check>
    5c74:	ldp	x21, x22, [sp, #32]
    5c78:	ldp	x29, x30, [sp], #64
    5c7c:	ldr	x0, [x0]
    5c80:	b	6c10 <_gcry_log_printf>
    5c84:	nop
	...

0000000000005cb8 <_gcry_log_mpidump>:
    5cb8:	stp	x29, x30, [sp, #-32]!
    5cbc:	adrp	x2, 0 <_gcry_mpi_m_check>
    5cc0:	mov	x29, sp
    5cc4:	str	x19, [sp, #16]
    5cc8:	mov	x19, x1
    5ccc:	mov	x1, x0
    5cd0:	ldr	x0, [x2]
    5cd4:	bl	6c10 <_gcry_log_printf>
    5cd8:	mov	x0, x19
    5cdc:	bl	5ba8 <gcry_mpi_dump>
    5ce0:	adrp	x0, 0 <_gcry_mpi_m_check>
    5ce4:	ldr	x19, [sp, #16]
    5ce8:	ldp	x29, x30, [sp], #32
    5cec:	ldr	x0, [x0]
    5cf0:	b	6c10 <_gcry_log_printf>
    5cf4:	nop
	...

0000000000005d08 <_gcry_mpi_get_buffer>:
    5d08:	mov	w3, #0x0                   	// #0
    5d0c:	b	5a80 <do_get_buffer>

0000000000005d10 <_gcry_mpi_get_secure_buffer>:
    5d10:	mov	w3, #0x1                   	// #1
    5d14:	b	5a80 <do_get_buffer>

0000000000005d18 <_gcry_mpi_set_buffer>:
    5d18:	stp	x29, x30, [sp, #-64]!
    5d1c:	mov	x29, sp
    5d20:	stp	x19, x20, [sp, #16]
    5d24:	mov	x20, x1
    5d28:	ldr	w1, [x0]
    5d2c:	stp	x21, x22, [sp, #32]
    5d30:	mov	w22, w2
    5d34:	add	w2, w2, #0x7
    5d38:	str	x23, [sp, #48]
    5d3c:	mov	x19, x0
    5d40:	lsr	w21, w2, #3
    5d44:	cmp	w1, w2, lsr #3
    5d48:	mov	w23, w3
    5d4c:	b.lt	5eac <_gcry_mpi_set_buffer+0x194>  // b.tstop
    5d50:	mov	w9, w22
    5d54:	str	w23, [x19, #8]
    5d58:	sub	x9, x9, #0x1
    5d5c:	add	x0, x20, #0x8
    5d60:	add	x9, x20, x9
    5d64:	cmp	x9, x0
    5d68:	b.cc	5ed0 <_gcry_mpi_set_buffer+0x1b8>  // b.lo, b.ul, b.last
    5d6c:	ldr	x10, [x19, #16]
    5d70:	mov	x2, x9
    5d74:	nop
    5d78:	ldurb	w4, [x2, #-4]
    5d7c:	sub	x2, x2, #0x8
    5d80:	ldrb	w3, [x2, #5]
    5d84:	ldrb	w8, [x2, #6]
    5d88:	ldrb	w7, [x2, #7]
    5d8c:	lsl	x4, x4, #32
    5d90:	ldrb	w5, [x2, #3]
    5d94:	orr	x3, x4, x3, lsl #24
    5d98:	ldrb	w6, [x2, #2]
    5d9c:	lsl	x8, x8, #16
    5da0:	ldrb	w11, [x2, #8]
    5da4:	orr	x7, x8, x7, lsl #8
    5da8:	orr	x3, x3, x7
    5dac:	cmp	x0, x2
    5db0:	lsl	x6, x6, #48
    5db4:	orr	x5, x6, x5, lsl #40
    5db8:	ldrb	w4, [x2, #1]
    5dbc:	orr	x3, x3, x5
    5dc0:	orr	x4, x11, x4, lsl #56
    5dc4:	orr	x3, x4, x3
    5dc8:	str	x3, [x10], #8
    5dcc:	b.ls	5d78 <_gcry_mpi_set_buffer+0x60>  // b.plast
    5dd0:	sub	x2, x9, x20
    5dd4:	sub	x2, x2, #0x8
    5dd8:	lsr	x2, x2, #3
    5ddc:	mvn	x0, x2
    5de0:	add	w2, w2, #0x1
    5de4:	add	x9, x9, x0, lsl #3
    5de8:	cmp	x20, x9
    5dec:	b.hi	5e8c <_gcry_mpi_set_buffer+0x174>  // b.pmore
    5df0:	mov	x1, x9
    5df4:	ldrb	w0, [x1], #-1
    5df8:	cmp	x20, x1
    5dfc:	b.hi	5e80 <_gcry_mpi_set_buffer+0x168>  // b.pmore
    5e00:	ldurb	w1, [x9, #-1]
    5e04:	sub	x3, x9, #0x2
    5e08:	cmp	x20, x3
    5e0c:	orr	x0, x0, x1, lsl #8
    5e10:	b.hi	5e80 <_gcry_mpi_set_buffer+0x168>  // b.pmore
    5e14:	ldurb	w1, [x9, #-2]
    5e18:	sub	x3, x9, #0x3
    5e1c:	cmp	x20, x3
    5e20:	orr	x0, x0, x1, lsl #16
    5e24:	b.hi	5e80 <_gcry_mpi_set_buffer+0x168>  // b.pmore
    5e28:	ldurb	w1, [x9, #-3]
    5e2c:	sub	x3, x9, #0x4
    5e30:	cmp	x20, x3
    5e34:	orr	x0, x0, x1, lsl #24
    5e38:	b.hi	5e80 <_gcry_mpi_set_buffer+0x168>  // b.pmore
    5e3c:	ldurb	w1, [x9, #-4]
    5e40:	sub	x3, x9, #0x5
    5e44:	cmp	x20, x3
    5e48:	orr	x0, x0, x1, lsl #32
    5e4c:	b.hi	5e80 <_gcry_mpi_set_buffer+0x168>  // b.pmore
    5e50:	ldurb	w1, [x9, #-5]
    5e54:	sub	x3, x9, #0x6
    5e58:	cmp	x20, x3
    5e5c:	orr	x0, x0, x1, lsl #40
    5e60:	b.hi	5e80 <_gcry_mpi_set_buffer+0x168>  // b.pmore
    5e64:	ldurb	w1, [x9, #-6]
    5e68:	sub	x3, x9, #0x7
    5e6c:	cmp	x20, x3
    5e70:	orr	x0, x0, x1, lsl #48
    5e74:	b.hi	5e80 <_gcry_mpi_set_buffer+0x168>  // b.pmore
    5e78:	ldurb	w1, [x9, #-7]
    5e7c:	orr	x0, x0, x1, lsl #56
    5e80:	ldr	x1, [x19, #16]
    5e84:	str	x0, [x1, w2, sxtw #3]
    5e88:	add	w2, w2, #0x1
    5e8c:	str	w2, [x19, #4]
    5e90:	cmp	w2, w21
    5e94:	b.ne	5ed8 <_gcry_mpi_set_buffer+0x1c0>  // b.any
    5e98:	ldp	x19, x20, [sp, #16]
    5e9c:	ldp	x21, x22, [sp, #32]
    5ea0:	ldr	x23, [sp, #48]
    5ea4:	ldp	x29, x30, [sp], #64
    5ea8:	ret
    5eac:	mov	w1, w21
    5eb0:	bl	1b0 <_gcry_mpi_resize>
    5eb4:	mov	w9, w22
    5eb8:	str	w23, [x19, #8]
    5ebc:	sub	x9, x9, #0x1
    5ec0:	add	x0, x20, #0x8
    5ec4:	add	x9, x20, x9
    5ec8:	cmp	x9, x0
    5ecc:	b.cs	5d6c <_gcry_mpi_set_buffer+0x54>  // b.hs, b.nlast
    5ed0:	mov	w2, #0x0                   	// #0
    5ed4:	b	5de8 <_gcry_mpi_set_buffer+0xd0>
    5ed8:	adrp	x3, 0 <_gcry_mpi_m_check>
    5edc:	adrp	x1, 0 <_gcry_mpi_m_check>
    5ee0:	adrp	x0, 0 <_gcry_mpi_m_check>
    5ee4:	mov	w2, #0x16f                 	// #367
    5ee8:	ldr	x3, [x3]
    5eec:	ldr	x1, [x1]
    5ef0:	ldr	x0, [x0]
    5ef4:	bl	0 <_gcry_assert_failed>
	...

0000000000005f10 <gcry_mpi_scan>:
    5f10:	stp	x29, x30, [sp, #-80]!
    5f14:	mov	x29, sp
    5f18:	stp	x19, x20, [sp, #16]
    5f1c:	mov	x20, x0
    5f20:	mov	x19, x2
    5f24:	stp	x21, x22, [sp, #32]
    5f28:	mov	w21, w1
    5f2c:	mov	x22, x3
    5f30:	stp	x23, x24, [sp, #48]
    5f34:	mov	x23, x4
    5f38:	cbz	x2, 5fbc <gcry_mpi_scan+0xac>
    5f3c:	mov	x0, x2
    5f40:	bl	6b60 <gcry_is_secure>
    5f44:	cbz	w0, 5fbc <gcry_mpi_scan+0xac>
    5f48:	cmp	w21, #0x3
    5f4c:	b.eq	6270 <gcry_mpi_scan+0x360>  // b.none
    5f50:	cmp	w21, #0x1
    5f54:	mov	w24, w22
    5f58:	b.ne	6198 <gcry_mpi_scan+0x288>  // b.any
    5f5c:	add	w0, w22, #0x7
    5f60:	lsr	w0, w0, #3
    5f64:	bl	d0 <_gcry_mpi_alloc_secure>
    5f68:	mov	x21, x0
    5f6c:	cbz	w24, 5f94 <gcry_mpi_scan+0x84>
    5f70:	ldrsb	w0, [x19]
    5f74:	lsr	w1, w0, #31
    5f78:	str	w1, [x21, #8]
    5f7c:	tbnz	w0, #31, 6290 <gcry_mpi_scan+0x380>
    5f80:	mov	w2, w24
    5f84:	mov	x1, x19
    5f88:	mov	x0, x21
    5f8c:	mov	w3, #0x0                   	// #0
    5f90:	bl	5d18 <_gcry_mpi_set_buffer>
    5f94:	mov	x0, x21
    5f98:	cbz	x20, 621c <gcry_mpi_scan+0x30c>
    5f9c:	bl	908 <_gcry_mpi_normalize>
    5fa0:	str	x21, [x20]
    5fa4:	mov	w0, #0x0                   	// #0
    5fa8:	ldp	x19, x20, [sp, #16]
    5fac:	ldp	x21, x22, [sp, #32]
    5fb0:	ldp	x23, x24, [sp, #48]
    5fb4:	ldp	x29, x30, [sp], #80
    5fb8:	ret
    5fbc:	cmp	w21, #0x3
    5fc0:	b.eq	6130 <gcry_mpi_scan+0x220>  // b.none
    5fc4:	cmp	w21, #0x1
    5fc8:	mov	w24, w22
    5fcc:	b.eq	61ec <gcry_mpi_scan+0x2dc>  // b.none
    5fd0:	cmp	w21, #0x5
    5fd4:	mov	w1, #0x0                   	// #0
    5fd8:	b.eq	62ac <gcry_mpi_scan+0x39c>  // b.none
    5fdc:	cmp	w21, #0x2
    5fe0:	b.eq	62f0 <gcry_mpi_scan+0x3e0>  // b.none
    5fe4:	cmp	x22, #0x0
    5fe8:	mov	w0, #0xa                   	// #10
    5fec:	ccmp	w21, #0x4, #0x0, eq  // eq = none
    5ff0:	b.ne	5fa8 <gcry_mpi_scan+0x98>  // b.any
    5ff4:	stp	x25, x26, [sp, #64]
    5ff8:	mov	w0, #0x0                   	// #0
    5ffc:	cbnz	w1, 62a0 <gcry_mpi_scan+0x390>
    6000:	bl	70 <_gcry_mpi_alloc>
    6004:	mov	x22, x0
    6008:	ldrb	w0, [x19]
    600c:	mov	w23, #0x0                   	// #0
    6010:	cmp	w0, #0x2d
    6014:	b.ne	6024 <gcry_mpi_scan+0x114>  // b.any
    6018:	ldrb	w0, [x19, #1]
    601c:	add	x19, x19, #0x1
    6020:	mov	w23, #0x1                   	// #1
    6024:	cmp	w0, #0x30
    6028:	b.ne	603c <gcry_mpi_scan+0x12c>  // b.any
    602c:	ldrb	w1, [x19, #1]
    6030:	add	x0, x19, #0x2
    6034:	cmp	w1, #0x78
    6038:	csel	x19, x0, x19, eq  // eq = none
    603c:	mov	x0, x19
    6040:	bl	0 <grub_strlen>
    6044:	lsl	w21, w0, #2
    6048:	ldr	w1, [x22]
    604c:	add	w21, w21, #0x7
    6050:	and	w25, w0, #0x1
    6054:	lsr	w21, w21, #3
    6058:	add	w24, w21, #0x7
    605c:	cmp	w1, w24, lsr #3
    6060:	lsr	w24, w24, #3
    6064:	b.cc	62c4 <gcry_mpi_scan+0x3b4>  // b.lo, b.ul, b.last
    6068:	stp	w24, w23, [x22, #4]
    606c:	neg	w5, w21
    6070:	and	w5, w5, #0x7
    6074:	cbz	w24, 6254 <gcry_mpi_scan+0x344>
    6078:	sub	w1, w24, #0x1
    607c:	sxtw	x0, w24
    6080:	sub	x0, x0, x1
    6084:	mov	x1, #0xfffffffffffffff8    	// #-8
    6088:	add	x24, x1, w24, sxtw #3
    608c:	lsl	x0, x0, #3
    6090:	sub	x1, x0, #0x10
    6094:	ldrb	w2, [x19]
    6098:	cbz	w25, 63c8 <gcry_mpi_scan+0x4b8>
    609c:	add	x19, x19, #0x1
    60a0:	cbz	w2, 6200 <gcry_mpi_scan+0x2f0>
    60a4:	mov	w3, #0x0                   	// #0
    60a8:	mov	x6, #0x0                   	// #0
    60ac:	sub	w4, w2, #0x30
    60b0:	cmp	w4, #0x9
    60b4:	b.hi	6118 <gcry_mpi_scan+0x208>  // b.pmore
    60b8:	orr	w3, w4, w3
    60bc:	sxtw	x3, w3
    60c0:	add	w5, w5, #0x1
    60c4:	orr	x6, x3, x6, lsl #8
    60c8:	cmp	w5, #0x8
    60cc:	b.eq	6238 <gcry_mpi_scan+0x328>  // b.none
    60d0:	ldrb	w4, [x19]
    60d4:	mov	x2, x19
    60d8:	mov	w3, w4
    60dc:	cbz	w3, 6200 <gcry_mpi_scan+0x2f0>
    60e0:	ldrb	w2, [x2, #1]
    60e4:	add	x19, x19, #0x2
    60e8:	cbz	w2, 6200 <gcry_mpi_scan+0x2f0>
    60ec:	sub	w7, w4, #0x30
    60f0:	cmp	w7, #0x9
    60f4:	b.ls	6420 <gcry_mpi_scan+0x510>  // b.plast
    60f8:	sub	w7, w4, #0x61
    60fc:	cmp	w7, #0x5
    6100:	b.hi	61bc <gcry_mpi_scan+0x2ac>  // b.pmore
    6104:	sub	w3, w3, #0x57
    6108:	sub	w4, w2, #0x30
    610c:	cmp	w4, #0x9
    6110:	lsl	w3, w3, #4
    6114:	b.ls	60b8 <gcry_mpi_scan+0x1a8>  // b.plast
    6118:	sub	w4, w2, #0x61
    611c:	cmp	w4, #0x5
    6120:	b.hi	61d4 <gcry_mpi_scan+0x2c4>  // b.pmore
    6124:	sub	w2, w2, #0x57
    6128:	orr	w3, w2, w3
    612c:	b	60bc <gcry_mpi_scan+0x1ac>
    6130:	ldr	w21, [x19]
    6134:	rev	w21, w21
    6138:	sxtw	x21, w21
    613c:	add	x0, x21, #0x7
    6140:	ubfx	x0, x0, #3, #32
    6144:	bl	70 <_gcry_mpi_alloc>
    6148:	mov	x22, x0
    614c:	cbz	x21, 6174 <gcry_mpi_scan+0x264>
    6150:	ldrsb	w0, [x19, #4]
    6154:	lsr	w1, w0, #31
    6158:	str	w1, [x22, #8]
    615c:	tbnz	w0, #31, 62e0 <gcry_mpi_scan+0x3d0>
    6160:	add	x1, x19, #0x4
    6164:	mov	w2, w21
    6168:	mov	x0, x22
    616c:	mov	w3, #0x0                   	// #0
    6170:	bl	5d18 <_gcry_mpi_set_buffer>
    6174:	cbz	x23, 6180 <gcry_mpi_scan+0x270>
    6178:	add	x21, x21, #0x4
    617c:	str	x21, [x23]
    6180:	mov	x0, x22
    6184:	cbz	x20, 621c <gcry_mpi_scan+0x30c>
    6188:	bl	908 <_gcry_mpi_normalize>
    618c:	str	x22, [x20]
    6190:	mov	w0, #0x0                   	// #0
    6194:	b	5fa8 <gcry_mpi_scan+0x98>
    6198:	cmp	w21, #0x5
    619c:	mov	w1, #0x1                   	// #1
    61a0:	b.ne	5fdc <gcry_mpi_scan+0xcc>  // b.any
    61a4:	add	w0, w22, #0x7
    61a8:	lsr	w0, w0, #3
    61ac:	bl	d0 <_gcry_mpi_alloc_secure>
    61b0:	mov	x21, x0
    61b4:	cbz	w24, 5f94 <gcry_mpi_scan+0x84>
    61b8:	b	5f80 <gcry_mpi_scan+0x70>
    61bc:	sub	w4, w4, #0x41
    61c0:	cmp	w4, #0x5
    61c4:	b.hi	6200 <gcry_mpi_scan+0x2f0>  // b.pmore
    61c8:	sub	w3, w3, #0x37
    61cc:	lsl	w3, w3, #4
    61d0:	b	60ac <gcry_mpi_scan+0x19c>
    61d4:	sub	w0, w2, #0x41
    61d8:	cmp	w0, #0x5
    61dc:	b.hi	6200 <gcry_mpi_scan+0x2f0>  // b.pmore
    61e0:	sub	w2, w2, #0x37
    61e4:	orr	w3, w2, w3
    61e8:	b	60bc <gcry_mpi_scan+0x1ac>
    61ec:	add	w0, w22, #0x7
    61f0:	lsr	w0, w0, #3
    61f4:	bl	70 <_gcry_mpi_alloc>
    61f8:	mov	x21, x0
    61fc:	b	5f6c <gcry_mpi_scan+0x5c>
    6200:	mov	x0, x22
    6204:	bl	280 <_gcry_mpi_clear>
    6208:	mov	x0, x22
    620c:	bl	290 <_gcry_mpi_free>
    6210:	mov	w0, #0xe                   	// #14
    6214:	ldp	x25, x26, [sp, #64]
    6218:	b	5fa8 <gcry_mpi_scan+0x98>
    621c:	bl	290 <_gcry_mpi_free>
    6220:	mov	w0, #0x0                   	// #0
    6224:	ldp	x19, x20, [sp, #16]
    6228:	ldp	x21, x22, [sp, #32]
    622c:	ldp	x23, x24, [sp, #48]
    6230:	ldp	x29, x30, [sp], #80
    6234:	ret
    6238:	ldr	x0, [x22, #16]
    623c:	mov	w25, #0x0                   	// #0
    6240:	mov	w5, #0x0                   	// #0
    6244:	str	x6, [x0, x24]
    6248:	sub	x24, x24, #0x8
    624c:	cmp	x24, x1
    6250:	b.ne	6094 <gcry_mpi_scan+0x184>  // b.any
    6254:	cbz	x20, 63f8 <gcry_mpi_scan+0x4e8>
    6258:	mov	x0, x22
    625c:	bl	908 <_gcry_mpi_normalize>
    6260:	mov	w0, #0x0                   	// #0
    6264:	ldp	x25, x26, [sp, #64]
    6268:	str	x22, [x20]
    626c:	b	5fa8 <gcry_mpi_scan+0x98>
    6270:	ldr	w21, [x19]
    6274:	rev	w21, w21
    6278:	sxtw	x21, w21
    627c:	add	x0, x21, #0x7
    6280:	ubfx	x0, x0, #3, #32
    6284:	bl	d0 <_gcry_mpi_alloc_secure>
    6288:	mov	x22, x0
    628c:	b	614c <gcry_mpi_scan+0x23c>
    6290:	mov	x0, x21
    6294:	bl	290 <_gcry_mpi_free>
    6298:	mov	w0, #0x9                   	// #9
    629c:	b	5fa8 <gcry_mpi_scan+0x98>
    62a0:	bl	d0 <_gcry_mpi_alloc_secure>
    62a4:	mov	x22, x0
    62a8:	b	6008 <gcry_mpi_scan+0xf8>
    62ac:	add	w0, w22, #0x7
    62b0:	lsr	w0, w0, #3
    62b4:	bl	70 <_gcry_mpi_alloc>
    62b8:	mov	x21, x0
    62bc:	cbz	w24, 5f94 <gcry_mpi_scan+0x84>
    62c0:	b	5f80 <gcry_mpi_scan+0x70>
    62c4:	mov	w1, w24
    62c8:	mov	x0, x22
    62cc:	bl	1b0 <_gcry_mpi_resize>
    62d0:	stp	w24, w23, [x22, #4]
    62d4:	neg	w5, w21
    62d8:	and	w5, w5, #0x7
    62dc:	b	6078 <gcry_mpi_scan+0x168>
    62e0:	mov	x0, x22
    62e4:	bl	290 <_gcry_mpi_free>
    62e8:	mov	w0, #0x9                   	// #9
    62ec:	b	5fa8 <gcry_mpi_scan+0x98>
    62f0:	cmp	w24, #0x1
    62f4:	b.ls	6418 <gcry_mpi_scan+0x508>  // b.plast
    62f8:	ldrh	w0, [x19]
    62fc:	rev16	w0, w0
    6300:	and	w0, w0, #0xffff
    6304:	cmp	w0, #0x4, lsl #12
    6308:	b.hi	6418 <gcry_mpi_scan+0x508>  // b.pmore
    630c:	add	w0, w0, #0x7
    6310:	stp	x25, x26, [sp, #64]
    6314:	add	x19, x19, #0x2
    6318:	lsr	w22, w0, #3
    631c:	add	w25, w22, #0x7
    6320:	lsr	w25, w25, #3
    6324:	mov	w0, w25
    6328:	cbz	w1, 640c <gcry_mpi_scan+0x4fc>
    632c:	bl	d0 <_gcry_mpi_alloc_secure>
    6330:	mov	x26, x0
    6334:	stp	w25, wzr, [x26, #4]
    6338:	neg	w2, w22
    633c:	and	w2, w2, #0x7
    6340:	cbz	w25, 63a4 <gcry_mpi_scan+0x494>
    6344:	sub	w1, w25, #0x1
    6348:	sxtw	x0, w25
    634c:	sub	x0, x0, x1
    6350:	mov	x1, #0xfffffffffffffff8    	// #-8
    6354:	add	x25, x1, w25, sxtw #3
    6358:	lsl	x0, x0, #3
    635c:	sub	x0, x0, #0x10
    6360:	add	w3, w21, #0x8
    6364:	mov	x1, #0x0                   	// #0
    6368:	sub	w3, w3, w2
    636c:	nop
    6370:	add	w21, w21, #0x1
    6374:	cmp	w24, w21
    6378:	b.cc	63dc <gcry_mpi_scan+0x4cc>  // b.lo, b.ul, b.last
    637c:	ldrb	w2, [x19], #1
    6380:	cmp	w3, w21
    6384:	orr	x1, x2, x1, lsl #8
    6388:	b.ne	6370 <gcry_mpi_scan+0x460>  // b.any
    638c:	ldr	x3, [x26, #16]
    6390:	mov	w2, #0x0                   	// #0
    6394:	str	x1, [x3, x25]
    6398:	sub	x25, x25, #0x8
    639c:	cmp	x25, x0
    63a0:	b.ne	6360 <gcry_mpi_scan+0x450>  // b.any
    63a4:	cbz	x23, 63ac <gcry_mpi_scan+0x49c>
    63a8:	str	x21, [x23]
    63ac:	mov	x0, x26
    63b0:	cbz	x20, 620c <gcry_mpi_scan+0x2fc>
    63b4:	bl	908 <_gcry_mpi_normalize>
    63b8:	str	x26, [x20]
    63bc:	mov	w0, #0x0                   	// #0
    63c0:	ldp	x25, x26, [sp, #64]
    63c4:	b	5fa8 <gcry_mpi_scan+0x98>
    63c8:	mov	w3, w2
    63cc:	mov	x6, #0x0                   	// #0
    63d0:	mov	x2, x19
    63d4:	mov	w4, w3
    63d8:	b	60dc <gcry_mpi_scan+0x1cc>
    63dc:	mov	x0, x26
    63e0:	bl	290 <_gcry_mpi_free>
    63e4:	ldp	x25, x26, [sp, #64]
    63e8:	mov	w0, #0xe                   	// #14
    63ec:	cbz	x23, 5fa8 <gcry_mpi_scan+0x98>
    63f0:	str	x21, [x23]
    63f4:	b	5fa8 <gcry_mpi_scan+0x98>
    63f8:	mov	x0, x22
    63fc:	bl	290 <_gcry_mpi_free>
    6400:	mov	w0, #0x0                   	// #0
    6404:	ldp	x25, x26, [sp, #64]
    6408:	b	5fa8 <gcry_mpi_scan+0x98>
    640c:	bl	70 <_gcry_mpi_alloc>
    6410:	mov	x26, x0
    6414:	b	6334 <gcry_mpi_scan+0x424>
    6418:	mov	x21, #0x0                   	// #0
    641c:	b	63e8 <gcry_mpi_scan+0x4d8>
    6420:	sub	w4, w3, #0x30
    6424:	lsl	w3, w4, #4
    6428:	b	60ac <gcry_mpi_scan+0x19c>
    642c:	nop

0000000000006430 <gcry_mpi_print>:
    6430:	stp	x29, x30, [sp, #-80]!
    6434:	mov	x29, sp
    6438:	stp	x19, x20, [sp, #16]
    643c:	mov	x19, x3
    6440:	mov	w20, w0
    6444:	mov	x0, x4
    6448:	stp	x21, x22, [sp, #32]
    644c:	mov	x22, x1
    6450:	mov	x21, x4
    6454:	stp	x23, x24, [sp, #48]
    6458:	mov	x23, x2
    645c:	bl	920 <gcry_mpi_get_nbits>
    6460:	cmp	x19, #0x0
    6464:	add	x1, sp, #0x48
    6468:	csel	x19, x1, x19, eq  // eq = none
    646c:	cmp	w20, #0x1
    6470:	str	xzr, [x19]
    6474:	b.eq	6600 <gcry_mpi_print+0x1d0>  // b.none
    6478:	mov	w3, w0
    647c:	cmp	w20, #0x5
    6480:	b.eq	6590 <gcry_mpi_print+0x160>  // b.none
    6484:	cmp	w20, #0x2
    6488:	b.eq	66f8 <gcry_mpi_print+0x2c8>  // b.none
    648c:	cmp	w20, #0x3
    6490:	b.eq	666c <gcry_mpi_print+0x23c>  // b.none
    6494:	cmp	w20, #0x4
    6498:	mov	w0, #0xa                   	// #10
    649c:	b.ne	657c <gcry_mpi_print+0x14c>  // b.any
    64a0:	add	x1, sp, #0x44
    64a4:	mov	x0, x21
    64a8:	mov	w3, #0x0                   	// #0
    64ac:	mov	x2, #0x0                   	// #0
    64b0:	str	wzr, [sp, #68]
    64b4:	bl	5a80 <do_get_buffer>
    64b8:	cbz	x0, 6774 <gcry_mpi_print+0x344>
    64bc:	ldr	w1, [sp, #68]
    64c0:	cbnz	w1, 67a4 <gcry_mpi_print+0x374>
    64c4:	mov	w3, #0x2                   	// #2
    64c8:	mov	w5, w3
    64cc:	ldr	w4, [x21, #8]
    64d0:	lsl	w2, w1, #1
    64d4:	add	w2, w2, #0x1
    64d8:	cmp	w4, #0x0
    64dc:	cinc	w3, w3, ne  // ne = any
    64e0:	add	w2, w2, w3
    64e4:	cbz	x22, 67f4 <gcry_mpi_print+0x3c4>
    64e8:	cmp	x23, x2
    64ec:	b.cc	67d8 <gcry_mpi_print+0x3a8>  // b.lo, b.ul, b.last
    64f0:	mov	x7, x22
    64f4:	cbz	w4, 6500 <gcry_mpi_print+0xd0>
    64f8:	mov	w2, #0x2d                  	// #45
    64fc:	strb	w2, [x7], #1
    6500:	cbz	w5, 650c <gcry_mpi_print+0xdc>
    6504:	mov	w2, #0x3030                	// #12336
    6508:	strh	w2, [x7], #2
    650c:	cbz	w1, 6568 <gcry_mpi_print+0x138>
    6510:	sub	w1, w1, #0x1
    6514:	mov	x4, x0
    6518:	add	x8, x1, #0x1
    651c:	mov	x3, x7
    6520:	add	x9, x8, x0
    6524:	nop
    6528:	ldrb	w1, [x4], #1
    652c:	and	w2, w1, #0xf
    6530:	cmp	w1, #0x9f
    6534:	lsr	w1, w1, #4
    6538:	add	w5, w2, #0x30
    653c:	add	w6, w1, #0x30
    6540:	add	w1, w1, #0x37
    6544:	csel	w1, w1, w6, hi  // hi = pmore
    6548:	strb	w1, [x3], #2
    654c:	cmp	w2, #0x9
    6550:	add	w2, w2, #0x37
    6554:	csel	w2, w2, w5, hi  // hi = pmore
    6558:	sturb	w2, [x3, #-1]
    655c:	cmp	x9, x4
    6560:	b.ne	6528 <gcry_mpi_print+0xf8>  // b.any
    6564:	add	x7, x7, x8, lsl #1
    6568:	strb	wzr, [x7], #1
    656c:	sub	x7, x7, x22
    6570:	str	x7, [x19]
    6574:	bl	6b58 <gcry_free>
    6578:	mov	w0, #0x0                   	// #0
    657c:	ldp	x19, x20, [sp, #16]
    6580:	ldp	x21, x22, [sp, #32]
    6584:	ldp	x23, x24, [sp, #48]
    6588:	ldp	x29, x30, [sp], #80
    658c:	ret
    6590:	add	w0, w0, #0x7
    6594:	lsr	w3, w0, #3
    6598:	str	w3, [sp, #68]
    659c:	cbz	x22, 65e4 <gcry_mpi_print+0x1b4>
    65a0:	cmp	x23, x3
    65a4:	mov	w0, #0x1d                  	// #29
    65a8:	b.cc	657c <gcry_mpi_print+0x14c>  // b.lo, b.ul, b.last
    65ac:	mov	x0, x21
    65b0:	add	x1, sp, #0x44
    65b4:	mov	w3, #0x0                   	// #0
    65b8:	mov	x2, #0x0                   	// #0
    65bc:	bl	5a80 <do_get_buffer>
    65c0:	mov	x20, x0
    65c4:	cbz	x0, 6774 <gcry_mpi_print+0x344>
    65c8:	ldr	w2, [sp, #68]
    65cc:	mov	x1, x0
    65d0:	mov	x0, x22
    65d4:	bl	0 <grub_memmove>
    65d8:	mov	x0, x20
    65dc:	bl	6b58 <gcry_free>
    65e0:	ldr	w3, [sp, #68]
    65e4:	str	x3, [x19]
    65e8:	mov	w0, #0x0                   	// #0
    65ec:	ldp	x19, x20, [sp, #16]
    65f0:	ldp	x21, x22, [sp, #32]
    65f4:	ldp	x23, x24, [sp, #48]
    65f8:	ldp	x29, x30, [sp], #80
    65fc:	ret
    6600:	ldr	w1, [x21, #8]
    6604:	mov	w0, #0x9                   	// #9
    6608:	cbnz	w1, 657c <gcry_mpi_print+0x14c>
    660c:	mov	x0, x21
    6610:	add	x1, sp, #0x44
    6614:	mov	w3, #0x0                   	// #0
    6618:	mov	x2, #0x0                   	// #0
    661c:	bl	5a80 <do_get_buffer>
    6620:	mov	x20, x0
    6624:	cbz	x0, 6774 <gcry_mpi_print+0x344>
    6628:	ldr	w2, [sp, #68]
    662c:	cbnz	w2, 677c <gcry_mpi_print+0x34c>
    6630:	mov	x2, #0x0                   	// #0
    6634:	cbz	x22, 6644 <gcry_mpi_print+0x214>
    6638:	mov	x0, x22
    663c:	mov	x1, x20
    6640:	bl	0 <grub_memmove>
    6644:	mov	x0, x20
    6648:	bl	6b58 <gcry_free>
    664c:	ldr	w1, [sp, #68]
    6650:	mov	w0, #0x0                   	// #0
    6654:	str	x1, [x19]
    6658:	ldp	x19, x20, [sp, #16]
    665c:	ldp	x21, x22, [sp, #32]
    6660:	ldp	x23, x24, [sp, #48]
    6664:	ldp	x29, x30, [sp], #80
    6668:	ret
    666c:	ldr	w24, [x21, #8]
    6670:	mov	w0, #0x9                   	// #9
    6674:	cbnz	w24, 657c <gcry_mpi_print+0x14c>
    6678:	mov	x0, x21
    667c:	add	x1, sp, #0x44
    6680:	mov	w3, #0x0                   	// #0
    6684:	mov	x2, #0x0                   	// #0
    6688:	bl	5a80 <do_get_buffer>
    668c:	mov	x20, x0
    6690:	cbz	x0, 6774 <gcry_mpi_print+0x344>
    6694:	ldr	w0, [sp, #68]
    6698:	cbz	w0, 66a4 <gcry_mpi_print+0x274>
    669c:	ldrsb	w1, [x20]
    66a0:	tbnz	w1, #31, 67e4 <gcry_mpi_print+0x3b4>
    66a4:	cbz	x22, 66dc <gcry_mpi_print+0x2ac>
    66a8:	ldr	w2, [sp, #68]
    66ac:	add	w0, w2, #0x4
    66b0:	rev	w1, w2
    66b4:	cmp	x0, x23
    66b8:	b.hi	6794 <gcry_mpi_print+0x364>  // b.pmore
    66bc:	str	w1, [x22]
    66c0:	add	x0, x22, #0x4
    66c4:	cbz	w24, 66d0 <gcry_mpi_print+0x2a0>
    66c8:	add	x0, x22, #0x5
    66cc:	strb	wzr, [x22, #4]
    66d0:	sub	w2, w2, w24
    66d4:	mov	x1, x20
    66d8:	bl	0 <grub_memmove>
    66dc:	mov	x0, x20
    66e0:	bl	6b58 <gcry_free>
    66e4:	ldr	w1, [sp, #68]
    66e8:	mov	w0, #0x0                   	// #0
    66ec:	add	w1, w1, #0x4
    66f0:	str	x1, [x19]
    66f4:	b	657c <gcry_mpi_print+0x14c>
    66f8:	add	w1, w0, #0x7
    66fc:	ldr	w2, [x21, #8]
    6700:	mov	w0, #0xa                   	// #10
    6704:	lsr	w1, w1, #3
    6708:	str	w1, [sp, #68]
    670c:	cbnz	w2, 657c <gcry_mpi_print+0x14c>
    6710:	add	w1, w1, #0x2
    6714:	cbz	x22, 6768 <gcry_mpi_print+0x338>
    6718:	cmp	x23, x1
    671c:	mov	w0, #0x1d                  	// #29
    6720:	b.cc	657c <gcry_mpi_print+0x14c>  // b.lo, b.ul, b.last
    6724:	rev16	w0, w3
    6728:	strh	w0, [x22]
    672c:	add	x1, sp, #0x44
    6730:	mov	x0, x21
    6734:	mov	w3, #0x0                   	// #0
    6738:	mov	x2, #0x0                   	// #0
    673c:	bl	5a80 <do_get_buffer>
    6740:	mov	x20, x0
    6744:	cbz	x0, 6774 <gcry_mpi_print+0x344>
    6748:	ldr	w2, [sp, #68]
    674c:	mov	x1, x0
    6750:	add	x0, x22, #0x2
    6754:	bl	0 <grub_memmove>
    6758:	mov	x0, x20
    675c:	bl	6b58 <gcry_free>
    6760:	ldr	w1, [sp, #68]
    6764:	add	w1, w1, #0x2
    6768:	mov	w0, #0x0                   	// #0
    676c:	str	x1, [x19]
    6770:	b	657c <gcry_mpi_print+0x14c>
    6774:	bl	6d68 <gpg_error_from_syserror>
    6778:	b	657c <gcry_mpi_print+0x14c>
    677c:	ldrsb	w0, [x0]
    6780:	tbnz	w0, #31, 67b8 <gcry_mpi_print+0x388>
    6784:	cbz	x22, 6644 <gcry_mpi_print+0x214>
    6788:	cmp	x23, w2, uxtw
    678c:	mov	w2, w2
    6790:	b.cs	6638 <gcry_mpi_print+0x208>  // b.hs, b.nlast
    6794:	mov	x0, x20
    6798:	bl	6b58 <gcry_free>
    679c:	mov	w0, #0x1d                  	// #29
    67a0:	b	657c <gcry_mpi_print+0x14c>
    67a4:	ldrsb	w2, [x0]
    67a8:	mov	w3, #0x0                   	// #0
    67ac:	mov	w5, #0x0                   	// #0
    67b0:	tbz	w2, #31, 64cc <gcry_mpi_print+0x9c>
    67b4:	b	64c4 <gcry_mpi_print+0x94>
    67b8:	add	w0, w2, #0x1
    67bc:	str	w0, [sp, #68]
    67c0:	cbz	x22, 6644 <gcry_mpi_print+0x214>
    67c4:	cmp	x23, w0, uxtw
    67c8:	b.cc	6794 <gcry_mpi_print+0x364>  // b.lo, b.ul, b.last
    67cc:	mov	w2, w2
    67d0:	strb	wzr, [x22], #1
    67d4:	b	6638 <gcry_mpi_print+0x208>
    67d8:	bl	6b58 <gcry_free>
    67dc:	mov	w0, #0x1d                  	// #29
    67e0:	b	657c <gcry_mpi_print+0x14c>
    67e4:	add	w0, w0, #0x1
    67e8:	mov	w24, #0x1                   	// #1
    67ec:	str	w0, [sp, #68]
    67f0:	b	66a4 <gcry_mpi_print+0x274>
    67f4:	str	x2, [x19]
    67f8:	b	6574 <gcry_mpi_print+0x144>
    67fc:	nop

0000000000006800 <gcry_mpi_aprint>:
    6800:	stp	x29, x30, [sp, #-80]!
    6804:	mov	x4, x3
    6808:	mov	x29, sp
    680c:	stp	x19, x20, [sp, #16]
    6810:	mov	x20, x3
    6814:	add	x3, sp, #0x48
    6818:	stp	x21, x22, [sp, #32]
    681c:	mov	x21, x1
    6820:	mov	x22, x2
    6824:	str	x23, [sp, #48]
    6828:	mov	x2, #0x0                   	// #0
    682c:	str	xzr, [x1]
    6830:	mov	w23, w0
    6834:	mov	x1, #0x0                   	// #0
    6838:	bl	6430 <gcry_mpi_print>
    683c:	mov	w19, w0
    6840:	cbnz	w0, 688c <gcry_mpi_aprint+0x8c>
    6844:	ldr	x0, [sp, #72]
    6848:	cbz	x20, 6854 <gcry_mpi_aprint+0x54>
    684c:	ldr	w1, [x20, #12]
    6850:	tbnz	w1, #0, 68c8 <gcry_mpi_aprint+0xc8>
    6854:	bl	6b48 <gcry_malloc>
    6858:	mov	x1, x0
    685c:	str	x1, [x21]
    6860:	cbz	x1, 68d4 <gcry_mpi_aprint+0xd4>
    6864:	ldr	x2, [sp, #72]
    6868:	mov	x4, x20
    686c:	add	x3, sp, #0x48
    6870:	mov	w0, w23
    6874:	bl	6430 <gcry_mpi_print>
    6878:	mov	w19, w0
    687c:	cbnz	w0, 68a4 <gcry_mpi_aprint+0xa4>
    6880:	cbz	x22, 688c <gcry_mpi_aprint+0x8c>
    6884:	ldr	x0, [sp, #72]
    6888:	str	x0, [x22]
    688c:	mov	w0, w19
    6890:	ldp	x19, x20, [sp, #16]
    6894:	ldp	x21, x22, [sp, #32]
    6898:	ldr	x23, [sp, #48]
    689c:	ldp	x29, x30, [sp], #80
    68a0:	ret
    68a4:	ldr	x0, [x21]
    68a8:	bl	6b58 <gcry_free>
    68ac:	str	xzr, [x21]
    68b0:	mov	w0, w19
    68b4:	ldp	x19, x20, [sp, #16]
    68b8:	ldp	x21, x22, [sp, #32]
    68bc:	ldr	x23, [sp, #48]
    68c0:	ldp	x29, x30, [sp], #80
    68c4:	ret
    68c8:	bl	6b50 <gcry_malloc_secure>
    68cc:	mov	x1, x0
    68d0:	b	685c <gcry_mpi_aprint+0x5c>
    68d4:	bl	6d68 <gpg_error_from_syserror>
    68d8:	mov	w19, w0
    68dc:	b	688c <gcry_mpi_aprint+0x8c>

00000000000068e0 <_gcry_mpih_rshift>:
    68e0:	ldr	x6, [x1]
    68e4:	mov	w8, #0x40                  	// #64
    68e8:	sub	w8, w8, w3
    68ec:	mov	x4, x0
    68f0:	sub	x9, x0, #0x8
    68f4:	cmp	w2, #0x1
    68f8:	lsl	x0, x6, x8
    68fc:	b.le	6930 <_gcry_mpih_rshift+0x50>
    6900:	mov	x5, #0x1                   	// #1
    6904:	nop
    6908:	mov	x4, x6
    690c:	ldr	x6, [x1, x5, lsl #3]
    6910:	lsr	x4, x4, x3
    6914:	lsl	x7, x6, x8
    6918:	orr	x4, x4, x7
    691c:	str	x4, [x9, x5, lsl #3]
    6920:	add	x5, x5, #0x1
    6924:	cmp	w2, w5
    6928:	b.gt	6908 <_gcry_mpih_rshift+0x28>
    692c:	add	x4, x9, w2, sxtw #3
    6930:	lsr	x6, x6, x3
    6934:	str	x6, [x4]
    6938:	ret
    693c:	nop

0000000000006940 <_gcry_mpih_add_1>:
    6940:	ldr	x4, [x1], #8
    6944:	adds	x4, x4, x3
    6948:	str	x4, [x0], #8
    694c:	b.cs	6994 <_gcry_mpih_add_1+0x54>  // b.hs, b.nlast
    6950:	cmp	x0, x1
    6954:	b.eq	697c <_gcry_mpih_add_1+0x3c>  // b.none
    6958:	sub	w2, w2, #0x1
    695c:	cmp	w2, #0x0
    6960:	b.le	697c <_gcry_mpih_add_1+0x3c>
    6964:	mov	x3, #0x0                   	// #0
    6968:	ldr	x4, [x1, x3, lsl #3]
    696c:	str	x4, [x0, x3, lsl #3]
    6970:	add	x3, x3, #0x1
    6974:	cmp	w2, w3
    6978:	b.gt	6968 <_gcry_mpih_add_1+0x28>
    697c:	mov	x0, #0x0                   	// #0
    6980:	ret
    6984:	ldr	x3, [x1], #8
    6988:	add	x3, x3, #0x1
    698c:	str	x3, [x0], #8
    6990:	cbnz	x3, 6950 <_gcry_mpih_add_1+0x10>
    6994:	subs	w2, w2, #0x1
    6998:	b.ne	6984 <_gcry_mpih_add_1+0x44>  // b.any
    699c:	mov	x0, #0x1                   	// #1
    69a0:	ret
    69a4:	nop

00000000000069a8 <_gcry_mpih_add>:
    69a8:	stp	x29, x30, [sp, #-48]!
    69ac:	mov	x29, sp
    69b0:	stp	x19, x20, [sp, #16]
    69b4:	mov	w20, w2
    69b8:	mov	w19, w4
    69bc:	stp	x21, x22, [sp, #32]
    69c0:	mov	x21, x0
    69c4:	mov	x22, x1
    69c8:	cbnz	w4, 6a0c <_gcry_mpih_add+0x64>
    69cc:	mov	x3, #0x0                   	// #0
    69d0:	cmp	w19, w20
    69d4:	b.ne	69ec <_gcry_mpih_add+0x44>  // b.any
    69d8:	mov	x0, x3
    69dc:	ldp	x19, x20, [sp, #16]
    69e0:	ldp	x21, x22, [sp, #32]
    69e4:	ldp	x29, x30, [sp], #48
    69e8:	ret
    69ec:	sbfiz	x0, x19, #3, #32
    69f0:	sub	w2, w20, w19
    69f4:	add	x1, x22, x0
    69f8:	add	x0, x21, x0
    69fc:	ldp	x19, x20, [sp, #16]
    6a00:	ldp	x21, x22, [sp, #32]
    6a04:	ldp	x29, x30, [sp], #48
    6a08:	b	6940 <_gcry_mpih_add_1>
    6a0c:	mov	x2, x3
    6a10:	mov	w3, w4
    6a14:	bl	4ee8 <_gcry_mpih_add_n>
    6a18:	mov	x3, x0
    6a1c:	b	69d0 <_gcry_mpih_add+0x28>

0000000000006a20 <_gcry_mpih_sub_1>:
    6a20:	ldr	x4, [x1], #8
    6a24:	subs	x5, x4, x3
    6a28:	str	x5, [x0], #8
    6a2c:	cmp	x4, x3
    6a30:	b.cc	6a7c <_gcry_mpih_sub_1+0x5c>  // b.lo, b.ul, b.last
    6a34:	cmp	x0, x1
    6a38:	b.eq	6a64 <_gcry_mpih_sub_1+0x44>  // b.none
    6a3c:	sub	w2, w2, #0x1
    6a40:	cmp	w2, #0x0
    6a44:	b.le	6a64 <_gcry_mpih_sub_1+0x44>
    6a48:	mov	x3, #0x0                   	// #0
    6a4c:	nop
    6a50:	ldr	x4, [x1, x3, lsl #3]
    6a54:	str	x4, [x0, x3, lsl #3]
    6a58:	add	x3, x3, #0x1
    6a5c:	cmp	w2, w3
    6a60:	b.gt	6a50 <_gcry_mpih_sub_1+0x30>
    6a64:	mov	x0, #0x0                   	// #0
    6a68:	ret
    6a6c:	ldr	x3, [x1], #8
    6a70:	sub	x4, x3, #0x1
    6a74:	str	x4, [x0], #8
    6a78:	cbnz	x3, 6a34 <_gcry_mpih_sub_1+0x14>
    6a7c:	subs	w2, w2, #0x1
    6a80:	b.ne	6a6c <_gcry_mpih_sub_1+0x4c>  // b.any
    6a84:	mov	x0, #0x1                   	// #1
    6a88:	ret
    6a8c:	nop

0000000000006a90 <_gcry_mpih_sub>:
    6a90:	stp	x29, x30, [sp, #-48]!
    6a94:	mov	x29, sp
    6a98:	stp	x19, x20, [sp, #16]
    6a9c:	mov	w20, w2
    6aa0:	mov	w19, w4
    6aa4:	stp	x21, x22, [sp, #32]
    6aa8:	mov	x21, x0
    6aac:	mov	x22, x1
    6ab0:	cbnz	w4, 6af4 <_gcry_mpih_sub+0x64>
    6ab4:	mov	x3, #0x0                   	// #0
    6ab8:	cmp	w19, w20
    6abc:	b.ne	6ad4 <_gcry_mpih_sub+0x44>  // b.any
    6ac0:	mov	x0, x3
    6ac4:	ldp	x19, x20, [sp, #16]
    6ac8:	ldp	x21, x22, [sp, #32]
    6acc:	ldp	x29, x30, [sp], #48
    6ad0:	ret
    6ad4:	sbfiz	x0, x19, #3, #32
    6ad8:	sub	w2, w20, w19
    6adc:	add	x1, x22, x0
    6ae0:	add	x0, x21, x0
    6ae4:	ldp	x19, x20, [sp, #16]
    6ae8:	ldp	x21, x22, [sp, #32]
    6aec:	ldp	x29, x30, [sp], #48
    6af0:	b	6a20 <_gcry_mpih_sub_1>
    6af4:	mov	x2, x3
    6af8:	mov	w3, w4
    6afc:	bl	4f30 <_gcry_mpih_sub_n>
    6b00:	mov	x3, x0
    6b04:	b	6ab8 <_gcry_mpih_sub+0x28>

0000000000006b08 <_gcry_mpih_cmp>:
    6b08:	subs	w2, w2, #0x1
    6b0c:	b.mi	6b3c <_gcry_mpih_cmp+0x34>  // b.first
    6b10:	sxtw	x2, w2
    6b14:	b	6b1c <_gcry_mpih_cmp+0x14>
    6b18:	tbnz	w2, #31, 6b3c <_gcry_mpih_cmp+0x34>
    6b1c:	ldr	x4, [x0, x2, lsl #3]
    6b20:	ldr	x3, [x1, x2, lsl #3]
    6b24:	sub	x2, x2, #0x1
    6b28:	cmp	x4, x3
    6b2c:	b.eq	6b18 <_gcry_mpih_cmp+0x10>  // b.none
    6b30:	mov	w0, #0xffffffff            	// #-1
    6b34:	cneg	w0, w0, hi  // hi = pmore
    6b38:	ret
    6b3c:	mov	w0, #0x0                   	// #0
    6b40:	ret
    6b44:	nop

0000000000006b48 <gcry_malloc>:
    6b48:	b	0 <grub_malloc>
    6b4c:	nop

0000000000006b50 <gcry_malloc_secure>:
    6b50:	b	0 <grub_malloc>
    6b54:	nop

0000000000006b58 <gcry_free>:
    6b58:	b	0 <grub_free>
    6b5c:	nop

0000000000006b60 <gcry_is_secure>:
    6b60:	mov	w0, #0x0                   	// #0
    6b64:	ret

0000000000006b68 <gcry_xcalloc>:
    6b68:	mul	x0, x0, x1
    6b6c:	stp	x29, x30, [sp, #-16]!
    6b70:	mov	x29, sp
    6b74:	bl	0 <grub_zalloc>
    6b78:	cbz	x0, 6b84 <gcry_xcalloc+0x1c>
    6b7c:	ldp	x29, x30, [sp], #16
    6b80:	ret
    6b84:	adrp	x0, 0 <_gcry_mpi_m_check>
    6b88:	ldr	x0, [x0]
    6b8c:	bl	0 <grub_fatal>
	...

0000000000006b98 <gcry_xcalloc_secure>:
    6b98:	b	6b68 <gcry_xcalloc>
    6b9c:	nop

0000000000006ba0 <gcry_xmalloc>:
    6ba0:	stp	x29, x30, [sp, #-16]!
    6ba4:	mov	x29, sp
    6ba8:	bl	0 <grub_malloc>
    6bac:	cbz	x0, 6bb8 <gcry_xmalloc+0x18>
    6bb0:	ldp	x29, x30, [sp], #16
    6bb4:	ret
    6bb8:	adrp	x0, 0 <_gcry_mpi_m_check>
    6bbc:	ldr	x0, [x0]
    6bc0:	bl	0 <grub_fatal>
    6bc4:	nop
	...

0000000000006bd0 <gcry_xmalloc_secure>:
    6bd0:	b	6ba0 <gcry_xmalloc>
    6bd4:	nop

0000000000006bd8 <gcry_xrealloc>:
    6bd8:	stp	x29, x30, [sp, #-16]!
    6bdc:	mov	x29, sp
    6be0:	bl	0 <grub_realloc>
    6be4:	cbz	x0, 6bf0 <gcry_xrealloc+0x18>
    6be8:	ldp	x29, x30, [sp], #16
    6bec:	ret
    6bf0:	adrp	x0, 0 <_gcry_mpi_m_check>
    6bf4:	ldr	x0, [x0]
    6bf8:	bl	0 <grub_fatal>
    6bfc:	nop
	...

0000000000006c08 <_gcry_check_heap>:
    6c08:	ret
    6c0c:	nop

0000000000006c10 <_gcry_log_printf>:
    6c10:	stp	x29, x30, [sp, #-160]!
    6c14:	adrp	x8, 0 <_gcry_mpi_m_check>
    6c18:	mov	x29, sp
    6c1c:	stp	x19, x20, [sp, #16]
    6c20:	mov	x20, x0
    6c24:	ldr	x0, [x8]
    6c28:	stp	x1, x2, [sp, #104]
    6c2c:	stp	x3, x4, [sp, #120]
    6c30:	stp	x5, x6, [sp, #136]
    6c34:	str	x7, [sp, #152]
    6c38:	bl	0 <grub_env_get>
    6c3c:	cbz	x0, 6c98 <_gcry_log_printf+0x88>
    6c40:	adrp	x1, 0 <_gcry_mpi_m_check>
    6c44:	mov	x19, x0
    6c48:	ldr	x1, [x1]
    6c4c:	bl	0 <grub_strword>
    6c50:	cbz	w0, 6ca4 <_gcry_log_printf+0x94>
    6c54:	adrp	x0, 0 <_gcry_mpi_m_check>
    6c58:	ldr	x0, [x0]
    6c5c:	bl	0 <grub_printf>
    6c60:	add	x1, sp, #0xa0
    6c64:	stp	x1, x1, [sp, #64]
    6c68:	add	x0, sp, #0x60
    6c6c:	mov	w2, #0xffffffc8            	// #-56
    6c70:	str	x0, [sp, #80]
    6c74:	stp	w2, wzr, [sp, #88]
    6c78:	add	x1, sp, #0x20
    6c7c:	ldp	x2, x3, [sp, #64]
    6c80:	stp	x2, x3, [sp, #32]
    6c84:	mov	x0, x20
    6c88:	ldp	x2, x3, [sp, #80]
    6c8c:	stp	x2, x3, [sp, #48]
    6c90:	bl	0 <grub_vprintf>
    6c94:	bl	0 <grub_refresh>
    6c98:	ldp	x19, x20, [sp, #16]
    6c9c:	ldp	x29, x30, [sp], #160
    6ca0:	ret
    6ca4:	adrp	x1, 0 <_gcry_mpi_m_check>
    6ca8:	mov	x0, x19
    6cac:	ldr	x1, [x1]
    6cb0:	bl	0 <grub_strword>
    6cb4:	cbnz	w0, 6c54 <_gcry_log_printf+0x44>
    6cb8:	ldp	x19, x20, [sp, #16]
    6cbc:	ldp	x29, x30, [sp], #160
    6cc0:	ret
    6cc4:	nop
	...

0000000000006ce8 <_gcry_log_bug>:
    6ce8:	stp	x29, x30, [sp, #-160]!
    6cec:	adrp	x8, 0 <_gcry_mpi_m_check>
    6cf0:	mov	x29, sp
    6cf4:	str	x19, [sp, #16]
    6cf8:	mov	x19, x0
    6cfc:	ldr	x0, [x8]
    6d00:	stp	x1, x2, [sp, #104]
    6d04:	stp	x3, x4, [sp, #120]
    6d08:	stp	x5, x6, [sp, #136]
    6d0c:	str	x7, [sp, #152]
    6d10:	bl	0 <grub_printf>
    6d14:	add	x0, sp, #0xa0
    6d18:	stp	x0, x0, [sp, #64]
    6d1c:	add	x3, sp, #0x60
    6d20:	mov	w2, #0xffffffc8            	// #-56
    6d24:	str	x3, [sp, #80]
    6d28:	stp	w2, wzr, [sp, #88]
    6d2c:	add	x1, sp, #0x20
    6d30:	ldp	x2, x3, [sp, #64]
    6d34:	stp	x2, x3, [sp, #32]
    6d38:	mov	x0, x19
    6d3c:	ldp	x2, x3, [sp, #80]
    6d40:	stp	x2, x3, [sp, #48]
    6d44:	bl	0 <grub_vprintf>
    6d48:	bl	0 <grub_refresh>
    6d4c:	adrp	x0, 0 <_gcry_mpi_m_check>
    6d50:	ldr	x0, [x0]
    6d54:	bl	0 <grub_fatal>
	...

0000000000006d68 <gpg_error_from_syserror>:
    6d68:	adrp	x0, 0 <_gcry_mpi_m_check>
    6d6c:	ldr	x0, [x0]
    6d70:	ldr	w0, [x0]
    6d74:	cbz	w0, 6d88 <gpg_error_from_syserror+0x20>
    6d78:	cmp	w0, #0x3
    6d7c:	mov	w1, #0x22                  	// #34
    6d80:	mov	w0, #0x8                   	// #8
    6d84:	csel	w0, w0, w1, ne  // ne = any
    6d88:	ret
    6d8c:	nop
	...
